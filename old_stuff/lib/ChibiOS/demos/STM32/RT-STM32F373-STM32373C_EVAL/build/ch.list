
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

080001a0 <Reset_Handler>:
 80001a0:	b672      	cpsid	i
 80001a2:	4821      	ldr	r0, [pc, #132]	; (8000228 <endfiniloop+0x6>)
 80001a4:	f380 8809 	msr	PSP, r0
 80001a8:	2002      	movs	r0, #2
 80001aa:	f380 8814 	msr	CONTROL, r0
 80001ae:	f3bf 8f6f 	isb	sy
 80001b2:	f005 fc85 	bl	8005ac0 <__early_init>
 80001b6:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
 80001ba:	491c      	ldr	r1, [pc, #112]	; (800022c <endfiniloop+0xa>)
 80001bc:	4a1c      	ldr	r2, [pc, #112]	; (8000230 <endfiniloop+0xe>)

080001be <msloop>:
 80001be:	4291      	cmp	r1, r2
 80001c0:	bf3c      	itt	cc
 80001c2:	f841 0b04 	strcc.w	r0, [r1], #4
 80001c6:	e7fa      	bcc.n	80001be <msloop>
 80001c8:	491a      	ldr	r1, [pc, #104]	; (8000234 <endfiniloop+0x12>)
 80001ca:	4a17      	ldr	r2, [pc, #92]	; (8000228 <endfiniloop+0x6>)

080001cc <psloop>:
 80001cc:	4291      	cmp	r1, r2
 80001ce:	bf3c      	itt	cc
 80001d0:	f841 0b04 	strcc.w	r0, [r1], #4
 80001d4:	e7fa      	bcc.n	80001cc <psloop>
 80001d6:	4918      	ldr	r1, [pc, #96]	; (8000238 <endfiniloop+0x16>)
 80001d8:	4a18      	ldr	r2, [pc, #96]	; (800023c <endfiniloop+0x1a>)
 80001da:	4b19      	ldr	r3, [pc, #100]	; (8000240 <endfiniloop+0x1e>)

080001dc <dloop>:
 80001dc:	429a      	cmp	r2, r3
 80001de:	bf3e      	ittt	cc
 80001e0:	f851 0b04 	ldrcc.w	r0, [r1], #4
 80001e4:	f842 0b04 	strcc.w	r0, [r2], #4
 80001e8:	e7f8      	bcc.n	80001dc <dloop>
 80001ea:	2000      	movs	r0, #0
 80001ec:	4915      	ldr	r1, [pc, #84]	; (8000244 <endfiniloop+0x22>)
 80001ee:	4a16      	ldr	r2, [pc, #88]	; (8000248 <endfiniloop+0x26>)

080001f0 <bloop>:
 80001f0:	4291      	cmp	r1, r2
 80001f2:	bf3c      	itt	cc
 80001f4:	f841 0b04 	strcc.w	r0, [r1], #4
 80001f8:	e7fa      	bcc.n	80001f0 <bloop>
 80001fa:	f005 fcf1 	bl	8005be0 <__late_init>
 80001fe:	4c13      	ldr	r4, [pc, #76]	; (800024c <endfiniloop+0x2a>)
 8000200:	4d13      	ldr	r5, [pc, #76]	; (8000250 <endfiniloop+0x2e>)

08000202 <initloop>:
 8000202:	42ac      	cmp	r4, r5
 8000204:	da03      	bge.n	800020e <endinitloop>
 8000206:	f854 1b04 	ldr.w	r1, [r4], #4
 800020a:	4788      	blx	r1
 800020c:	e7f9      	b.n	8000202 <initloop>

0800020e <endinitloop>:
 800020e:	f005 f877 	bl	8005300 <main>
 8000212:	4c10      	ldr	r4, [pc, #64]	; (8000254 <endfiniloop+0x32>)
 8000214:	4d10      	ldr	r5, [pc, #64]	; (8000258 <endfiniloop+0x36>)

08000216 <finiloop>:
 8000216:	42ac      	cmp	r4, r5
 8000218:	da03      	bge.n	8000222 <endfiniloop>
 800021a:	f854 1b04 	ldr.w	r1, [r4], #4
 800021e:	4788      	blx	r1
 8000220:	e7f9      	b.n	8000216 <finiloop>

08000222 <endfiniloop>:
 8000222:	f005 bcd5 	b.w	8005bd0 <__default_exit>
 8000226:	0000      	.short	0x0000
 8000228:	20000800 	.word	0x20000800
 800022c:	20000000 	.word	0x20000000
 8000230:	20000400 	.word	0x20000400
 8000234:	20000400 	.word	0x20000400
 8000238:	08006928 	.word	0x08006928
 800023c:	20000800 	.word	0x20000800
 8000240:	200008b8 	.word	0x200008b8
 8000244:	200008b8 	.word	0x200008b8
 8000248:	20001380 	.word	0x20001380
 800024c:	080001a0 	.word	0x080001a0
 8000250:	080001a0 	.word	0x080001a0
 8000254:	080001a0 	.word	0x080001a0
 8000258:	080001a0 	.word	0x080001a0
 800025c:	00000000 	.word	0x00000000

08000260 <_port_switch>:
 8000260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000264:	f8c1 d00c 	str.w	sp, [r1, #12]
 8000268:	f8d0 d00c 	ldr.w	sp, [r0, #12]
 800026c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000270 <_port_thread_start>:
 8000270:	2300      	movs	r3, #0
 8000272:	f383 8811 	msr	BASEPRI, r3
 8000276:	4628      	mov	r0, r5
 8000278:	47a0      	blx	r4
 800027a:	2000      	movs	r0, #0
 800027c:	f005 fc70 	bl	8005b60 <chThdExit>

08000280 <_port_switch_from_isr>:
 8000280:	f005 fc9e 	bl	8005bc0 <chSchDoReschedule>

08000284 <_port_exit_from_isr>:
 8000284:	df00      	svc	0
 8000286:	e7fe      	b.n	8000286 <_port_exit_from_isr+0x2>
	...

08000290 <chTMStartMeasurementX.constprop.55>:
 8000290:	4b01      	ldr	r3, [pc, #4]	; (8000298 <chTMStartMeasurementX.constprop.55+0x8>)
 8000292:	685b      	ldr	r3, [r3, #4]
 8000294:	6083      	str	r3, [r0, #8]
 8000296:	4770      	bx	lr
 8000298:	e0001000 	.word	0xe0001000
 800029c:	00000000 	.word	0x00000000

080002a0 <chEvtGetAndClearEvents.constprop.35>:
 80002a0:	2320      	movs	r3, #32
 80002a2:	f383 8811 	msr	BASEPRI, r3
 80002a6:	4b04      	ldr	r3, [pc, #16]	; (80002b8 <chEvtGetAndClearEvents.constprop.35+0x18>)
 80002a8:	699a      	ldr	r2, [r3, #24]
 80002aa:	2300      	movs	r3, #0
 80002ac:	6b50      	ldr	r0, [r2, #52]	; 0x34
 80002ae:	6353      	str	r3, [r2, #52]	; 0x34
 80002b0:	f383 8811 	msr	BASEPRI, r3
 80002b4:	4770      	bx	lr
 80002b6:	bf00      	nop
 80002b8:	20000938 	.word	0x20000938
 80002bc:	00000000 	.word	0x00000000

080002c0 <tmr>:
 80002c0:	4b01      	ldr	r3, [pc, #4]	; (80002c8 <tmr+0x8>)
 80002c2:	2201      	movs	r2, #1
 80002c4:	701a      	strb	r2, [r3, #0]
 80002c6:	4770      	bx	lr
 80002c8:	200011d0 	.word	0x200011d0
 80002cc:	00000000 	.word	0x00000000

080002d0 <_idle_thread>:
 80002d0:	e7fe      	b.n	80002d0 <_idle_thread>
 80002d2:	bf00      	nop
	...

080002e0 <chCoreAlloc>:
 80002e0:	4603      	mov	r3, r0
 80002e2:	2220      	movs	r2, #32
 80002e4:	f382 8811 	msr	BASEPRI, r2
 80002e8:	4908      	ldr	r1, [pc, #32]	; (800030c <chCoreAlloc+0x2c>)
 80002ea:	4a09      	ldr	r2, [pc, #36]	; (8000310 <chCoreAlloc+0x30>)
 80002ec:	6808      	ldr	r0, [r1, #0]
 80002ee:	6812      	ldr	r2, [r2, #0]
 80002f0:	3307      	adds	r3, #7
 80002f2:	f023 0307 	bic.w	r3, r3, #7
 80002f6:	1a12      	subs	r2, r2, r0
 80002f8:	4293      	cmp	r3, r2
 80002fa:	bf9a      	itte	ls
 80002fc:	181b      	addls	r3, r3, r0
 80002fe:	600b      	strls	r3, [r1, #0]
 8000300:	2000      	movhi	r0, #0
 8000302:	2300      	movs	r3, #0
 8000304:	f383 8811 	msr	BASEPRI, r3
 8000308:	4770      	bx	lr
 800030a:	bf00      	nop
 800030c:	20000b2c 	.word	0x20000b2c
 8000310:	20000ab0 	.word	0x20000ab0
	...

08000320 <notify2>:
 8000320:	4a02      	ldr	r2, [pc, #8]	; (800032c <notify2+0xc>)
 8000322:	6813      	ldr	r3, [r2, #0]
 8000324:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000328:	6013      	str	r3, [r2, #0]
 800032a:	4770      	bx	lr
 800032c:	40004400 	.word	0x40004400

08000330 <bmk12_setup>:
 8000330:	4b02      	ldr	r3, [pc, #8]	; (800033c <bmk12_setup+0xc>)
 8000332:	2200      	movs	r2, #0
 8000334:	e9c3 3300 	strd	r3, r3, [r3]
 8000338:	609a      	str	r2, [r3, #8]
 800033a:	4770      	bx	lr
 800033c:	20000b1c 	.word	0x20000b1c

08000340 <bmk11_setup>:
 8000340:	4b02      	ldr	r3, [pc, #8]	; (800034c <bmk11_setup+0xc>)
 8000342:	2201      	movs	r2, #1
 8000344:	e9c3 3300 	strd	r3, r3, [r3]
 8000348:	609a      	str	r2, [r3, #8]
 800034a:	4770      	bx	lr
 800034c:	20000b30 	.word	0x20000b30

08000350 <notify>:
 8000350:	4770      	bx	lr
 8000352:	bf00      	nop
	...

08000360 <tmo>:
 8000360:	4770      	bx	lr
 8000362:	bf00      	nop
	...

08000370 <bmk7_setup>:
 8000370:	4b02      	ldr	r3, [pc, #8]	; (800037c <bmk7_setup+0xc>)
 8000372:	2200      	movs	r2, #0
 8000374:	e9c3 3300 	strd	r3, r3, [r3]
 8000378:	609a      	str	r2, [r3, #8]
 800037a:	4770      	bx	lr
 800037c:	20000b30 	.word	0x20000b30

08000380 <sys2_execute>:
 8000380:	2320      	movs	r3, #32
 8000382:	f383 8811 	msr	BASEPRI, r3
 8000386:	b662      	cpsie	i
 8000388:	b672      	cpsid	i
 800038a:	f383 8811 	msr	BASEPRI, r3
 800038e:	b662      	cpsie	i
 8000390:	2300      	movs	r3, #0
 8000392:	f383 8811 	msr	BASEPRI, r3
 8000396:	b662      	cpsie	i
 8000398:	4770      	bx	lr
 800039a:	bf00      	nop
 800039c:	0000      	movs	r0, r0
	...

080003a0 <queues2_setup>:
 80003a0:	b430      	push	{r4, r5}
 80003a2:	4a08      	ldr	r2, [pc, #32]	; (80003c4 <queues2_setup+0x24>)
 80003a4:	4b08      	ldr	r3, [pc, #32]	; (80003c8 <queues2_setup+0x28>)
 80003a6:	4809      	ldr	r0, [pc, #36]	; (80003cc <queues2_setup+0x2c>)
 80003a8:	601b      	str	r3, [r3, #0]
 80003aa:	1d15      	adds	r5, r2, #4
 80003ac:	2404      	movs	r4, #4
 80003ae:	2100      	movs	r1, #0
 80003b0:	611d      	str	r5, [r3, #16]
 80003b2:	609c      	str	r4, [r3, #8]
 80003b4:	605b      	str	r3, [r3, #4]
 80003b6:	60da      	str	r2, [r3, #12]
 80003b8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80003bc:	e9c3 0107 	strd	r0, r1, [r3, #28]
 80003c0:	bc30      	pop	{r4, r5}
 80003c2:	4770      	bx	lr
 80003c4:	20000b40 	.word	0x20000b40
 80003c8:	20000888 	.word	0x20000888
 80003cc:	08000351 	.word	0x08000351

080003d0 <queues1_setup>:
 80003d0:	4a08      	ldr	r2, [pc, #32]	; (80003f4 <queues1_setup+0x24>)
 80003d2:	4b09      	ldr	r3, [pc, #36]	; (80003f8 <queues1_setup+0x28>)
 80003d4:	4809      	ldr	r0, [pc, #36]	; (80003fc <queues1_setup+0x2c>)
 80003d6:	b410      	push	{r4}
 80003d8:	2100      	movs	r1, #0
 80003da:	1d14      	adds	r4, r2, #4
 80003dc:	611c      	str	r4, [r3, #16]
 80003de:	601b      	str	r3, [r3, #0]
 80003e0:	605b      	str	r3, [r3, #4]
 80003e2:	60da      	str	r2, [r3, #12]
 80003e4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80003e8:	61d8      	str	r0, [r3, #28]
 80003ea:	6099      	str	r1, [r3, #8]
 80003ec:	6219      	str	r1, [r3, #32]
 80003ee:	bc10      	pop	{r4}
 80003f0:	4770      	bx	lr
 80003f2:	bf00      	nop
 80003f4:	20000b40 	.word	0x20000b40
 80003f8:	20000810 	.word	0x20000810
 80003fc:	08000351 	.word	0x08000351

08000400 <dyn2_setup>:
 8000400:	4b03      	ldr	r3, [pc, #12]	; (8000410 <dyn2_setup+0x10>)
 8000402:	2200      	movs	r2, #0
 8000404:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8000408:	e9c3 2100 	strd	r2, r1, [r3]
 800040c:	609a      	str	r2, [r3, #8]
 800040e:	4770      	bx	lr
 8000410:	20000b10 	.word	0x20000b10
	...

08000420 <dyn1_setup>:
 8000420:	4b08      	ldr	r3, [pc, #32]	; (8000444 <dyn1_setup+0x24>)
 8000422:	4909      	ldr	r1, [pc, #36]	; (8000448 <dyn1_setup+0x28>)
 8000424:	b410      	push	{r4}
 8000426:	2200      	movs	r2, #0
 8000428:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 800042c:	f103 0010 	add.w	r0, r3, #16
 8000430:	e9c1 2400 	strd	r2, r4, [r1]
 8000434:	6099      	str	r1, [r3, #8]
 8000436:	e9c3 0004 	strd	r0, r0, [r3, #16]
 800043a:	601a      	str	r2, [r3, #0]
 800043c:	60da      	str	r2, [r3, #12]
 800043e:	619a      	str	r2, [r3, #24]
 8000440:	bc10      	pop	{r4}
 8000442:	4770      	bx	lr
 8000444:	20000ab8 	.word	0x20000ab8
 8000448:	20000b40 	.word	0x20000b40
 800044c:	00000000 	.word	0x00000000

08000450 <dyn3_setup>:
 8000450:	f7ff bfe6 	b.w	8000420 <dyn1_setup>
	...

08000460 <null_provider>:
 8000460:	2000      	movs	r0, #0
 8000462:	4770      	bx	lr
	...

08000470 <pools1_setup>:
 8000470:	4b03      	ldr	r3, [pc, #12]	; (8000480 <pools1_setup+0x10>)
 8000472:	2200      	movs	r2, #0
 8000474:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8000478:	e9c3 2100 	strd	r2, r1, [r3]
 800047c:	609a      	str	r2, [r3, #8]
 800047e:	4770      	bx	lr
 8000480:	2000087c 	.word	0x2000087c
	...

08000490 <heap1_setup>:
 8000490:	4b08      	ldr	r3, [pc, #32]	; (80004b4 <heap1_setup+0x24>)
 8000492:	4909      	ldr	r1, [pc, #36]	; (80004b8 <heap1_setup+0x28>)
 8000494:	b410      	push	{r4}
 8000496:	2200      	movs	r2, #0
 8000498:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 800049c:	f103 0010 	add.w	r0, r3, #16
 80004a0:	e9c1 2400 	strd	r2, r4, [r1]
 80004a4:	6099      	str	r1, [r3, #8]
 80004a6:	e9c3 0004 	strd	r0, r0, [r3, #16]
 80004aa:	601a      	str	r2, [r3, #0]
 80004ac:	60da      	str	r2, [r3, #12]
 80004ae:	619a      	str	r2, [r3, #24]
 80004b0:	bc10      	pop	{r4}
 80004b2:	4770      	bx	lr
 80004b4:	200011b0 	.word	0x200011b0
 80004b8:	20000b40 	.word	0x20000b40
 80004bc:	00000000 	.word	0x00000000

080004c0 <evt1_setup>:
 80004c0:	f7ff beee 	b.w	80002a0 <chEvtGetAndClearEvents.constprop.35>
	...

080004d0 <evt3_setup>:
 80004d0:	f7ff bff6 	b.w	80004c0 <evt1_setup>
	...

080004e0 <evt2_setup>:
 80004e0:	f7ff bfee 	b.w	80004c0 <evt1_setup>
	...

080004f0 <mbox1_setup>:
 80004f0:	b430      	push	{r4, r5}
 80004f2:	4b0b      	ldr	r3, [pc, #44]	; (8000520 <mbox1_setup+0x30>)
 80004f4:	4a0b      	ldr	r2, [pc, #44]	; (8000524 <mbox1_setup+0x34>)
 80004f6:	601a      	str	r2, [r3, #0]
 80004f8:	f102 0514 	add.w	r5, r2, #20
 80004fc:	2405      	movs	r4, #5
 80004fe:	f103 011c 	add.w	r1, r3, #28
 8000502:	2000      	movs	r0, #0
 8000504:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8000508:	f103 0210 	add.w	r2, r3, #16
 800050c:	605d      	str	r5, [r3, #4]
 800050e:	625c      	str	r4, [r3, #36]	; 0x24
 8000510:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8000514:	6219      	str	r1, [r3, #32]
 8000516:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800051a:	bc30      	pop	{r4, r5}
 800051c:	4770      	bx	lr
 800051e:	bf00      	nop
 8000520:	20000854 	.word	0x20000854
 8000524:	20000b40 	.word	0x20000b40
	...

08000530 <mtx8_setup>:
 8000530:	4906      	ldr	r1, [pc, #24]	; (800054c <mtx8_setup+0x1c>)
 8000532:	4a07      	ldr	r2, [pc, #28]	; (8000550 <mtx8_setup+0x20>)
 8000534:	4b07      	ldr	r3, [pc, #28]	; (8000554 <mtx8_setup+0x24>)
 8000536:	6009      	str	r1, [r1, #0]
 8000538:	2000      	movs	r0, #0
 800053a:	6049      	str	r1, [r1, #4]
 800053c:	e9c2 2200 	strd	r2, r2, [r2]
 8000540:	6090      	str	r0, [r2, #8]
 8000542:	6098      	str	r0, [r3, #8]
 8000544:	e9c3 3300 	strd	r3, r3, [r3]
 8000548:	4770      	bx	lr
 800054a:	bf00      	nop
 800054c:	20000800 	.word	0x20000800
 8000550:	20000834 	.word	0x20000834
 8000554:	20000844 	.word	0x20000844
	...

08000560 <mtx6_setup>:
 8000560:	4a04      	ldr	r2, [pc, #16]	; (8000574 <mtx6_setup+0x14>)
 8000562:	4b05      	ldr	r3, [pc, #20]	; (8000578 <mtx6_setup+0x18>)
 8000564:	6012      	str	r2, [r2, #0]
 8000566:	2100      	movs	r1, #0
 8000568:	6052      	str	r2, [r2, #4]
 800056a:	e9c3 3300 	strd	r3, r3, [r3]
 800056e:	6099      	str	r1, [r3, #8]
 8000570:	4770      	bx	lr
 8000572:	bf00      	nop
 8000574:	20000800 	.word	0x20000800
 8000578:	20000834 	.word	0x20000834
 800057c:	00000000 	.word	0x00000000

08000580 <mtx7_setup>:
 8000580:	f7ff bfee 	b.w	8000560 <mtx6_setup>
	...

08000590 <mtx4_setup>:
 8000590:	4a04      	ldr	r2, [pc, #16]	; (80005a4 <mtx4_setup+0x14>)
 8000592:	4b05      	ldr	r3, [pc, #20]	; (80005a8 <mtx4_setup+0x18>)
 8000594:	6012      	str	r2, [r2, #0]
 8000596:	2100      	movs	r1, #0
 8000598:	e9c2 2101 	strd	r2, r1, [r2, #4]
 800059c:	6099      	str	r1, [r3, #8]
 800059e:	e9c3 3300 	strd	r3, r3, [r3]
 80005a2:	4770      	bx	lr
 80005a4:	20000834 	.word	0x20000834
 80005a8:	20000844 	.word	0x20000844
 80005ac:	00000000 	.word	0x00000000

080005b0 <mtx1_setup>:
 80005b0:	4b02      	ldr	r3, [pc, #8]	; (80005bc <mtx1_setup+0xc>)
 80005b2:	2200      	movs	r2, #0
 80005b4:	e9c3 3300 	strd	r3, r3, [r3]
 80005b8:	609a      	str	r2, [r3, #8]
 80005ba:	4770      	bx	lr
 80005bc:	20000834 	.word	0x20000834

080005c0 <mtx5_setup>:
 80005c0:	f7ff bff6 	b.w	80005b0 <mtx1_setup>
	...

080005d0 <sem1_setup>:
 80005d0:	4b02      	ldr	r3, [pc, #8]	; (80005dc <sem1_setup+0xc>)
 80005d2:	2200      	movs	r2, #0
 80005d4:	e9c3 3300 	strd	r3, r3, [r3]
 80005d8:	609a      	str	r2, [r3, #8]
 80005da:	4770      	bx	lr
 80005dc:	200008ac 	.word	0x200008ac

080005e0 <sem3_setup>:
 80005e0:	f7ff bff6 	b.w	80005d0 <sem1_setup>
	...

080005f0 <sem2_setup>:
 80005f0:	f7ff bfee 	b.w	80005d0 <sem1_setup>
	...

08000600 <test_printn.part.1>:
 8000600:	b320      	cbz	r0, 800064c <test_printn.part.1+0x4c>
 8000602:	b570      	push	{r4, r5, r6, lr}
 8000604:	b084      	sub	sp, #16
 8000606:	466d      	mov	r5, sp
 8000608:	462c      	mov	r4, r5
 800060a:	4e11      	ldr	r6, [pc, #68]	; (8000650 <test_printn.part.1+0x50>)
 800060c:	e000      	b.n	8000610 <test_printn.part.1+0x10>
 800060e:	4614      	mov	r4, r2
 8000610:	fba6 2300 	umull	r2, r3, r6, r0
 8000614:	08db      	lsrs	r3, r3, #3
 8000616:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 800061a:	eba0 0041 	sub.w	r0, r0, r1, lsl #1
 800061e:	f100 0130 	add.w	r1, r0, #48	; 0x30
 8000622:	4622      	mov	r2, r4
 8000624:	b2c9      	uxtb	r1, r1
 8000626:	f802 1b01 	strb.w	r1, [r2], #1
 800062a:	4618      	mov	r0, r3
 800062c:	2b00      	cmp	r3, #0
 800062e:	d1ee      	bne.n	800060e <test_printn.part.1+0xe>
 8000630:	42aa      	cmp	r2, r5
 8000632:	d909      	bls.n	8000648 <test_printn.part.1+0x48>
 8000634:	4e07      	ldr	r6, [pc, #28]	; (8000654 <test_printn.part.1+0x54>)
 8000636:	e001      	b.n	800063c <test_printn.part.1+0x3c>
 8000638:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
 800063c:	6830      	ldr	r0, [r6, #0]
 800063e:	6803      	ldr	r3, [r0, #0]
 8000640:	689b      	ldr	r3, [r3, #8]
 8000642:	4798      	blx	r3
 8000644:	42a5      	cmp	r5, r4
 8000646:	d1f7      	bne.n	8000638 <test_printn.part.1+0x38>
 8000648:	b004      	add	sp, #16
 800064a:	bd70      	pop	{r4, r5, r6, pc}
 800064c:	4770      	bx	lr
 800064e:	bf00      	nop
 8000650:	cccccccd 	.word	0xcccccccd
 8000654:	20000a88 	.word	0x20000a88
	...

08000660 <test_printn>:
 8000660:	b928      	cbnz	r0, 800066e <test_printn+0xe>
 8000662:	4b04      	ldr	r3, [pc, #16]	; (8000674 <test_printn+0x14>)
 8000664:	6818      	ldr	r0, [r3, #0]
 8000666:	6803      	ldr	r3, [r0, #0]
 8000668:	2130      	movs	r1, #48	; 0x30
 800066a:	689b      	ldr	r3, [r3, #8]
 800066c:	4718      	bx	r3
 800066e:	f7ff bfc7 	b.w	8000600 <test_printn.part.1>
 8000672:	bf00      	nop
 8000674:	20000a88 	.word	0x20000a88
	...

08000680 <print_line>:
 8000680:	b570      	push	{r4, r5, r6, lr}
 8000682:	4d08      	ldr	r5, [pc, #32]	; (80006a4 <print_line+0x24>)
 8000684:	244c      	movs	r4, #76	; 0x4c
 8000686:	6828      	ldr	r0, [r5, #0]
 8000688:	6803      	ldr	r3, [r0, #0]
 800068a:	212d      	movs	r1, #45	; 0x2d
 800068c:	689b      	ldr	r3, [r3, #8]
 800068e:	4798      	blx	r3
 8000690:	3c01      	subs	r4, #1
 8000692:	d1f8      	bne.n	8000686 <print_line+0x6>
 8000694:	6828      	ldr	r0, [r5, #0]
 8000696:	4904      	ldr	r1, [pc, #16]	; (80006a8 <print_line+0x28>)
 8000698:	6803      	ldr	r3, [r0, #0]
 800069a:	2202      	movs	r2, #2
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80006a2:	4718      	bx	r3
 80006a4:	20000a88 	.word	0x20000a88
 80006a8:	08006160 	.word	0x08006160
 80006ac:	00000000 	.word	0x00000000

080006b0 <test_terminate_threads>:
 80006b0:	4b0a      	ldr	r3, [pc, #40]	; (80006dc <test_terminate_threads+0x2c>)
 80006b2:	b430      	push	{r4, r5}
 80006b4:	f103 0014 	add.w	r0, r3, #20
 80006b8:	2520      	movs	r5, #32
 80006ba:	2400      	movs	r4, #0
 80006bc:	f853 2b04 	ldr.w	r2, [r3], #4
 80006c0:	b13a      	cbz	r2, 80006d2 <test_terminate_threads+0x22>
 80006c2:	f385 8811 	msr	BASEPRI, r5
 80006c6:	7f51      	ldrb	r1, [r2, #29]
 80006c8:	f041 0104 	orr.w	r1, r1, #4
 80006cc:	7751      	strb	r1, [r2, #29]
 80006ce:	f384 8811 	msr	BASEPRI, r4
 80006d2:	4283      	cmp	r3, r0
 80006d4:	d1f2      	bne.n	80006bc <test_terminate_threads+0xc>
 80006d6:	bc30      	pop	{r4, r5}
 80006d8:	4770      	bx	lr
 80006da:	bf00      	nop
 80006dc:	200011d4 	.word	0x200011d4

080006e0 <_test_assert_time_window>:
 80006e0:	b410      	push	{r4}
 80006e2:	2320      	movs	r3, #32
 80006e4:	f383 8811 	msr	BASEPRI, r3
 80006e8:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 80006ec:	2300      	movs	r3, #0
 80006ee:	6a64      	ldr	r4, [r4, #36]	; 0x24
 80006f0:	f383 8811 	msr	BASEPRI, r3
 80006f4:	1a64      	subs	r4, r4, r1
 80006f6:	1a52      	subs	r2, r2, r1
 80006f8:	4294      	cmp	r4, r2
 80006fa:	d306      	bcc.n	800070a <_test_assert_time_window+0x2a>
 80006fc:	4c04      	ldr	r4, [pc, #16]	; (8000710 <_test_assert_time_window+0x30>)
 80006fe:	4905      	ldr	r1, [pc, #20]	; (8000714 <_test_assert_time_window+0x34>)
 8000700:	4a05      	ldr	r2, [pc, #20]	; (8000718 <_test_assert_time_window+0x38>)
 8000702:	2301      	movs	r3, #1
 8000704:	7023      	strb	r3, [r4, #0]
 8000706:	700b      	strb	r3, [r1, #0]
 8000708:	6010      	str	r0, [r2, #0]
 800070a:	4618      	mov	r0, r3
 800070c:	bc10      	pop	{r4}
 800070e:	4770      	bx	lr
 8000710:	200011a8 	.word	0x200011a8
 8000714:	20000b0c 	.word	0x20000b0c
 8000718:	20000ab4 	.word	0x20000ab4
 800071c:	00000000 	.word	0x00000000

08000720 <_test_assert_sequence>:
 8000720:	b4f0      	push	{r4, r5, r6, r7}
 8000722:	4e0e      	ldr	r6, [pc, #56]	; (800075c <_test_assert_sequence+0x3c>)
 8000724:	4f0e      	ldr	r7, [pc, #56]	; (8000760 <_test_assert_sequence+0x40>)
 8000726:	6835      	ldr	r5, [r6, #0]
 8000728:	3901      	subs	r1, #1
 800072a:	463b      	mov	r3, r7
 800072c:	e003      	b.n	8000736 <_test_assert_sequence+0x16>
 800072e:	f813 4b01 	ldrb.w	r4, [r3], #1
 8000732:	4294      	cmp	r4, r2
 8000734:	d108      	bne.n	8000748 <_test_assert_sequence+0x28>
 8000736:	429d      	cmp	r5, r3
 8000738:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800073c:	d8f7      	bhi.n	800072e <_test_assert_sequence+0xe>
 800073e:	b91a      	cbnz	r2, 8000748 <_test_assert_sequence+0x28>
 8000740:	6037      	str	r7, [r6, #0]
 8000742:	4610      	mov	r0, r2
 8000744:	bcf0      	pop	{r4, r5, r6, r7}
 8000746:	4770      	bx	lr
 8000748:	4c06      	ldr	r4, [pc, #24]	; (8000764 <_test_assert_sequence+0x44>)
 800074a:	4907      	ldr	r1, [pc, #28]	; (8000768 <_test_assert_sequence+0x48>)
 800074c:	4b07      	ldr	r3, [pc, #28]	; (800076c <_test_assert_sequence+0x4c>)
 800074e:	2201      	movs	r2, #1
 8000750:	7022      	strb	r2, [r4, #0]
 8000752:	6018      	str	r0, [r3, #0]
 8000754:	700a      	strb	r2, [r1, #0]
 8000756:	4610      	mov	r0, r2
 8000758:	bcf0      	pop	{r4, r5, r6, r7}
 800075a:	4770      	bx	lr
 800075c:	200011f8 	.word	0x200011f8
 8000760:	200011e8 	.word	0x200011e8
 8000764:	200011a8 	.word	0x200011a8
 8000768:	20000b0c 	.word	0x20000b0c
 800076c:	20000ab4 	.word	0x20000ab4

08000770 <_test_assert>:
 8000770:	b951      	cbnz	r1, 8000788 <_test_assert+0x18>
 8000772:	b410      	push	{r4}
 8000774:	4906      	ldr	r1, [pc, #24]	; (8000790 <_test_assert+0x20>)
 8000776:	4c07      	ldr	r4, [pc, #28]	; (8000794 <_test_assert+0x24>)
 8000778:	4a07      	ldr	r2, [pc, #28]	; (8000798 <_test_assert+0x28>)
 800077a:	2301      	movs	r3, #1
 800077c:	7023      	strb	r3, [r4, #0]
 800077e:	6010      	str	r0, [r2, #0]
 8000780:	700b      	strb	r3, [r1, #0]
 8000782:	4618      	mov	r0, r3
 8000784:	bc10      	pop	{r4}
 8000786:	4770      	bx	lr
 8000788:	2300      	movs	r3, #0
 800078a:	4618      	mov	r0, r3
 800078c:	4770      	bx	lr
 800078e:	bf00      	nop
 8000790:	20000b0c 	.word	0x20000b0c
 8000794:	200011a8 	.word	0x200011a8
 8000798:	20000ab4 	.word	0x20000ab4
 800079c:	00000000 	.word	0x00000000

080007a0 <test_emit_token>:
 80007a0:	2320      	movs	r3, #32
 80007a2:	f383 8811 	msr	BASEPRI, r3
 80007a6:	4b04      	ldr	r3, [pc, #16]	; (80007b8 <test_emit_token+0x18>)
 80007a8:	681a      	ldr	r2, [r3, #0]
 80007aa:	1c51      	adds	r1, r2, #1
 80007ac:	6019      	str	r1, [r3, #0]
 80007ae:	7010      	strb	r0, [r2, #0]
 80007b0:	2300      	movs	r3, #0
 80007b2:	f383 8811 	msr	BASEPRI, r3
 80007b6:	4770      	bx	lr
 80007b8:	200011f8 	.word	0x200011f8
 80007bc:	00000000 	.word	0x00000000

080007c0 <h3>:
 80007c0:	2043      	movs	r0, #67	; 0x43
 80007c2:	f7ff bfed 	b.w	80007a0 <test_emit_token>
 80007c6:	bf00      	nop
	...

080007d0 <h2>:
 80007d0:	2042      	movs	r0, #66	; 0x42
 80007d2:	f7ff bfe5 	b.w	80007a0 <test_emit_token>
 80007d6:	bf00      	nop
	...

080007e0 <h1>:
 80007e0:	2041      	movs	r0, #65	; 0x41
 80007e2:	f7ff bfdd 	b.w	80007a0 <test_emit_token>
 80007e6:	bf00      	nop
	...

080007f0 <thread.lto_priv.58>:
 80007f0:	7800      	ldrb	r0, [r0, #0]
 80007f2:	f7ff bfd5 	b.w	80007a0 <test_emit_token>
 80007f6:	bf00      	nop
	...

08000800 <thread.lto_priv.60>:
 8000800:	f7ff bff6 	b.w	80007f0 <thread.lto_priv.58>
	...

08000810 <test_println>:
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	7801      	ldrb	r1, [r0, #0]
 8000814:	b189      	cbz	r1, 800083a <test_println+0x2a>
 8000816:	4d0a      	ldr	r5, [pc, #40]	; (8000840 <test_println+0x30>)
 8000818:	4604      	mov	r4, r0
 800081a:	6828      	ldr	r0, [r5, #0]
 800081c:	6803      	ldr	r3, [r0, #0]
 800081e:	689b      	ldr	r3, [r3, #8]
 8000820:	4798      	blx	r3
 8000822:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000826:	2900      	cmp	r1, #0
 8000828:	d1f7      	bne.n	800081a <test_println+0xa>
 800082a:	6828      	ldr	r0, [r5, #0]
 800082c:	4905      	ldr	r1, [pc, #20]	; (8000844 <test_println+0x34>)
 800082e:	6803      	ldr	r3, [r0, #0]
 8000830:	2202      	movs	r2, #2
 8000832:	681b      	ldr	r3, [r3, #0]
 8000834:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000838:	4718      	bx	r3
 800083a:	4d01      	ldr	r5, [pc, #4]	; (8000840 <test_println+0x30>)
 800083c:	e7f5      	b.n	800082a <test_println+0x1a>
 800083e:	bf00      	nop
 8000840:	20000a88 	.word	0x20000a88
 8000844:	08006160 	.word	0x08006160
	...

08000850 <test_print>:
 8000850:	7801      	ldrb	r1, [r0, #0]
 8000852:	b159      	cbz	r1, 800086c <test_print+0x1c>
 8000854:	b538      	push	{r3, r4, r5, lr}
 8000856:	4d06      	ldr	r5, [pc, #24]	; (8000870 <test_print+0x20>)
 8000858:	4604      	mov	r4, r0
 800085a:	6828      	ldr	r0, [r5, #0]
 800085c:	6803      	ldr	r3, [r0, #0]
 800085e:	689b      	ldr	r3, [r3, #8]
 8000860:	4798      	blx	r3
 8000862:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000866:	2900      	cmp	r1, #0
 8000868:	d1f7      	bne.n	800085a <test_print+0xa>
 800086a:	bd38      	pop	{r3, r4, r5, pc}
 800086c:	4770      	bx	lr
 800086e:	bf00      	nop
 8000870:	20000a88 	.word	0x20000a88
	...

08000880 <_port_irq_epilogue>:
 8000880:	2320      	movs	r3, #32
 8000882:	f383 8811 	msr	BASEPRI, r3
 8000886:	4b11      	ldr	r3, [pc, #68]	; (80008cc <_port_irq_epilogue+0x4c>)
 8000888:	685b      	ldr	r3, [r3, #4]
 800088a:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 800088e:	d102      	bne.n	8000896 <_port_irq_epilogue+0x16>
 8000890:	f383 8811 	msr	BASEPRI, r3
 8000894:	4770      	bx	lr
 8000896:	b480      	push	{r7}
 8000898:	af00      	add	r7, sp, #0
 800089a:	f3ef 8309 	mrs	r3, PSP
 800089e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80008a2:	f843 2c04 	str.w	r2, [r3, #-4]
 80008a6:	f1a3 0220 	sub.w	r2, r3, #32
 80008aa:	f382 8809 	msr	PSP, r2
 80008ae:	4a08      	ldr	r2, [pc, #32]	; (80008d0 <_port_irq_epilogue+0x50>)
 80008b0:	6811      	ldr	r1, [r2, #0]
 80008b2:	6992      	ldr	r2, [r2, #24]
 80008b4:	6889      	ldr	r1, [r1, #8]
 80008b6:	6892      	ldr	r2, [r2, #8]
 80008b8:	4291      	cmp	r1, r2
 80008ba:	bf8c      	ite	hi
 80008bc:	4a05      	ldrhi	r2, [pc, #20]	; (80008d4 <_port_irq_epilogue+0x54>)
 80008be:	4a06      	ldrls	r2, [pc, #24]	; (80008d8 <_port_irq_epilogue+0x58>)
 80008c0:	f843 2c08 	str.w	r2, [r3, #-8]
 80008c4:	46bd      	mov	sp, r7
 80008c6:	bc80      	pop	{r7}
 80008c8:	4770      	bx	lr
 80008ca:	bf00      	nop
 80008cc:	e000ed00 	.word	0xe000ed00
 80008d0:	20000938 	.word	0x20000938
 80008d4:	08000281 	.word	0x08000281
 80008d8:	08000284 	.word	0x08000284
 80008dc:	00000000 	.word	0x00000000

080008e0 <VectorB0>:
 80008e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008e4:	f04f 4680 	mov.w	r6, #1073741824	; 0x40000000
 80008e8:	6933      	ldr	r3, [r6, #16]
 80008ea:	079b      	lsls	r3, r3, #30
 80008ec:	d403      	bmi.n	80008f6 <VectorB0+0x16>
 80008ee:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008f2:	f7ff bfc5 	b.w	8000880 <_port_irq_epilogue>
 80008f6:	2500      	movs	r5, #0
 80008f8:	6135      	str	r5, [r6, #16]
 80008fa:	2720      	movs	r7, #32
 80008fc:	f387 8811 	msr	BASEPRI, r7
 8000900:	4c1b      	ldr	r4, [pc, #108]	; (8000970 <VectorB0+0x90>)
 8000902:	6a71      	ldr	r1, [r6, #36]	; 0x24
 8000904:	69e3      	ldr	r3, [r4, #28]
 8000906:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000908:	f8d3 c008 	ldr.w	ip, [r3, #8]
 800090c:	1a88      	subs	r0, r1, r2
 800090e:	4560      	cmp	r0, ip
 8000910:	f104 081c 	add.w	r8, r4, #28
 8000914:	d319      	bcc.n	800094a <VectorB0+0x6a>
 8000916:	6819      	ldr	r1, [r3, #0]
 8000918:	f8d3 900c 	ldr.w	r9, [r3, #12]
 800091c:	4462      	add	r2, ip
 800091e:	4541      	cmp	r1, r8
 8000920:	62a2      	str	r2, [r4, #40]	; 0x28
 8000922:	f8c1 8004 	str.w	r8, [r1, #4]
 8000926:	61e1      	str	r1, [r4, #28]
 8000928:	60dd      	str	r5, [r3, #12]
 800092a:	bf08      	it	eq
 800092c:	60f5      	streq	r5, [r6, #12]
 800092e:	f385 8811 	msr	BASEPRI, r5
 8000932:	6918      	ldr	r0, [r3, #16]
 8000934:	47c8      	blx	r9
 8000936:	f387 8811 	msr	BASEPRI, r7
 800093a:	69e3      	ldr	r3, [r4, #28]
 800093c:	6a71      	ldr	r1, [r6, #36]	; 0x24
 800093e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000940:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8000944:	1a88      	subs	r0, r1, r2
 8000946:	4584      	cmp	ip, r0
 8000948:	d9e5      	bls.n	8000916 <VectorB0+0x36>
 800094a:	4543      	cmp	r3, r8
 800094c:	d008      	beq.n	8000960 <VectorB0+0x80>
 800094e:	4462      	add	r2, ip
 8000950:	1a52      	subs	r2, r2, r1
 8000952:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000956:	2a02      	cmp	r2, #2
 8000958:	bf2c      	ite	cs
 800095a:	188a      	addcs	r2, r1, r2
 800095c:	1c8a      	addcc	r2, r1, #2
 800095e:	635a      	str	r2, [r3, #52]	; 0x34
 8000960:	2300      	movs	r3, #0
 8000962:	f383 8811 	msr	BASEPRI, r3
 8000966:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800096a:	f7ff bf89 	b.w	8000880 <_port_irq_epilogue>
 800096e:	bf00      	nop
 8000970:	20000938 	.word	0x20000938
	...

08000980 <SVC_Handler>:
 8000980:	b480      	push	{r7}
 8000982:	af00      	add	r7, sp, #0
 8000984:	f3ef 8309 	mrs	r3, PSP
 8000988:	3320      	adds	r3, #32
 800098a:	f383 8809 	msr	PSP, r3
 800098e:	2300      	movs	r3, #0
 8000990:	f383 8811 	msr	BASEPRI, r3
 8000994:	46bd      	mov	sp, r7
 8000996:	bc80      	pop	{r7}
 8000998:	4770      	bx	lr
 800099a:	bf00      	nop
 800099c:	0000      	movs	r0, r0
	...

080009a0 <chPoolAlloc>:
 80009a0:	b508      	push	{r3, lr}
 80009a2:	2220      	movs	r2, #32
 80009a4:	4603      	mov	r3, r0
 80009a6:	f382 8811 	msr	BASEPRI, r2
 80009aa:	6800      	ldr	r0, [r0, #0]
 80009ac:	b128      	cbz	r0, 80009ba <chPoolAlloc+0x1a>
 80009ae:	6802      	ldr	r2, [r0, #0]
 80009b0:	601a      	str	r2, [r3, #0]
 80009b2:	2300      	movs	r3, #0
 80009b4:	f383 8811 	msr	BASEPRI, r3
 80009b8:	bd08      	pop	{r3, pc}
 80009ba:	689a      	ldr	r2, [r3, #8]
 80009bc:	2a00      	cmp	r2, #0
 80009be:	d0f8      	beq.n	80009b2 <chPoolAlloc+0x12>
 80009c0:	6858      	ldr	r0, [r3, #4]
 80009c2:	4790      	blx	r2
 80009c4:	2300      	movs	r3, #0
 80009c6:	f383 8811 	msr	BASEPRI, r3
 80009ca:	bd08      	pop	{r3, pc}
 80009cc:	0000      	movs	r0, r0
	...

080009d0 <pools1_execute>:
 80009d0:	b570      	push	{r4, r5, r6, lr}
 80009d2:	4b31      	ldr	r3, [pc, #196]	; (8000a98 <pools1_execute+0xc8>)
 80009d4:	4c31      	ldr	r4, [pc, #196]	; (8000a9c <pools1_execute+0xcc>)
 80009d6:	2205      	movs	r2, #5
 80009d8:	2520      	movs	r5, #32
 80009da:	2000      	movs	r0, #0
 80009dc:	f385 8811 	msr	BASEPRI, r5
 80009e0:	6821      	ldr	r1, [r4, #0]
 80009e2:	6019      	str	r1, [r3, #0]
 80009e4:	6023      	str	r3, [r4, #0]
 80009e6:	f380 8811 	msr	BASEPRI, r0
 80009ea:	6861      	ldr	r1, [r4, #4]
 80009ec:	3a01      	subs	r2, #1
 80009ee:	440b      	add	r3, r1
 80009f0:	d1f4      	bne.n	80009dc <pools1_execute+0xc>
 80009f2:	4e2a      	ldr	r6, [pc, #168]	; (8000a9c <pools1_execute+0xcc>)
 80009f4:	2505      	movs	r5, #5
 80009f6:	4630      	mov	r0, r6
 80009f8:	f7ff ffd2 	bl	80009a0 <chPoolAlloc>
 80009fc:	1c01      	adds	r1, r0, #0
 80009fe:	bf18      	it	ne
 8000a00:	2101      	movne	r1, #1
 8000a02:	2001      	movs	r0, #1
 8000a04:	f7ff feb4 	bl	8000770 <_test_assert>
 8000a08:	bba0      	cbnz	r0, 8000a74 <pools1_execute+0xa4>
 8000a0a:	3d01      	subs	r5, #1
 8000a0c:	d1f3      	bne.n	80009f6 <pools1_execute+0x26>
 8000a0e:	4823      	ldr	r0, [pc, #140]	; (8000a9c <pools1_execute+0xcc>)
 8000a10:	f7ff ffc6 	bl	80009a0 <chPoolAlloc>
 8000a14:	fab0 f180 	clz	r1, r0
 8000a18:	0949      	lsrs	r1, r1, #5
 8000a1a:	2002      	movs	r0, #2
 8000a1c:	f7ff fea8 	bl	8000770 <_test_assert>
 8000a20:	bb40      	cbnz	r0, 8000a74 <pools1_execute+0xa4>
 8000a22:	4a1f      	ldr	r2, [pc, #124]	; (8000aa0 <pools1_execute+0xd0>)
 8000a24:	4b1c      	ldr	r3, [pc, #112]	; (8000a98 <pools1_execute+0xc8>)
 8000a26:	f102 0610 	add.w	r6, r2, #16
 8000a2a:	2020      	movs	r0, #32
 8000a2c:	f380 8811 	msr	BASEPRI, r0
 8000a30:	6821      	ldr	r1, [r4, #0]
 8000a32:	6019      	str	r1, [r3, #0]
 8000a34:	6023      	str	r3, [r4, #0]
 8000a36:	f385 8811 	msr	BASEPRI, r5
 8000a3a:	4296      	cmp	r6, r2
 8000a3c:	d002      	beq.n	8000a44 <pools1_execute+0x74>
 8000a3e:	f852 3b04 	ldr.w	r3, [r2], #4
 8000a42:	e7f3      	b.n	8000a2c <pools1_execute+0x5c>
 8000a44:	4e15      	ldr	r6, [pc, #84]	; (8000a9c <pools1_execute+0xcc>)
 8000a46:	2505      	movs	r5, #5
 8000a48:	4630      	mov	r0, r6
 8000a4a:	f7ff ffa9 	bl	80009a0 <chPoolAlloc>
 8000a4e:	1c01      	adds	r1, r0, #0
 8000a50:	bf18      	it	ne
 8000a52:	2101      	movne	r1, #1
 8000a54:	2003      	movs	r0, #3
 8000a56:	f7ff fe8b 	bl	8000770 <_test_assert>
 8000a5a:	b958      	cbnz	r0, 8000a74 <pools1_execute+0xa4>
 8000a5c:	3d01      	subs	r5, #1
 8000a5e:	d1f3      	bne.n	8000a48 <pools1_execute+0x78>
 8000a60:	480e      	ldr	r0, [pc, #56]	; (8000a9c <pools1_execute+0xcc>)
 8000a62:	f7ff ff9d 	bl	80009a0 <chPoolAlloc>
 8000a66:	fab0 f180 	clz	r1, r0
 8000a6a:	0949      	lsrs	r1, r1, #5
 8000a6c:	2004      	movs	r0, #4
 8000a6e:	f7ff fe7f 	bl	8000770 <_test_assert>
 8000a72:	b100      	cbz	r0, 8000a76 <pools1_execute+0xa6>
 8000a74:	bd70      	pop	{r4, r5, r6, pc}
 8000a76:	2210      	movs	r2, #16
 8000a78:	4b0a      	ldr	r3, [pc, #40]	; (8000aa4 <pools1_execute+0xd4>)
 8000a7a:	4808      	ldr	r0, [pc, #32]	; (8000a9c <pools1_execute+0xcc>)
 8000a7c:	60a3      	str	r3, [r4, #8]
 8000a7e:	e9c4 5200 	strd	r5, r2, [r4]
 8000a82:	f7ff ff8d 	bl	80009a0 <chPoolAlloc>
 8000a86:	fab0 f180 	clz	r1, r0
 8000a8a:	0949      	lsrs	r1, r1, #5
 8000a8c:	2005      	movs	r0, #5
 8000a8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000a92:	f7ff be6d 	b.w	8000770 <_test_assert>
 8000a96:	bf00      	nop
 8000a98:	20000b40 	.word	0x20000b40
 8000a9c:	2000087c 	.word	0x2000087c
 8000aa0:	08006914 	.word	0x08006914
 8000aa4:	08000461 	.word	0x08000461
	...

08000ab0 <chEvtUnregister>:
 8000ab0:	2320      	movs	r3, #32
 8000ab2:	f383 8811 	msr	BASEPRI, r3
 8000ab6:	4602      	mov	r2, r0
 8000ab8:	e002      	b.n	8000ac0 <chEvtUnregister+0x10>
 8000aba:	428b      	cmp	r3, r1
 8000abc:	d007      	beq.n	8000ace <chEvtUnregister+0x1e>
 8000abe:	461a      	mov	r2, r3
 8000ac0:	6813      	ldr	r3, [r2, #0]
 8000ac2:	4283      	cmp	r3, r0
 8000ac4:	d1f9      	bne.n	8000aba <chEvtUnregister+0xa>
 8000ac6:	2300      	movs	r3, #0
 8000ac8:	f383 8811 	msr	BASEPRI, r3
 8000acc:	4770      	bx	lr
 8000ace:	680b      	ldr	r3, [r1, #0]
 8000ad0:	6013      	str	r3, [r2, #0]
 8000ad2:	2300      	movs	r3, #0
 8000ad4:	f383 8811 	msr	BASEPRI, r3
 8000ad8:	4770      	bx	lr
 8000ada:	bf00      	nop
 8000adc:	0000      	movs	r0, r0
	...

08000ae0 <evt1_execute>:
 8000ae0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ae4:	4c33      	ldr	r4, [pc, #204]	; (8000bb4 <evt1_execute+0xd4>)
 8000ae6:	b08a      	sub	sp, #40	; 0x28
 8000ae8:	2020      	movs	r0, #32
 8000aea:	6024      	str	r4, [r4, #0]
 8000aec:	f380 8811 	msr	BASEPRI, r0
 8000af0:	4931      	ldr	r1, [pc, #196]	; (8000bb8 <evt1_execute+0xd8>)
 8000af2:	6823      	ldr	r3, [r4, #0]
 8000af4:	ad0a      	add	r5, sp, #40	; 0x28
 8000af6:	2701      	movs	r7, #1
 8000af8:	f845 3d14 	str.w	r3, [r5, #-20]!
 8000afc:	698b      	ldr	r3, [r1, #24]
 8000afe:	9306      	str	r3, [sp, #24]
 8000b00:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000b04:	2300      	movs	r3, #0
 8000b06:	6025      	str	r5, [r4, #0]
 8000b08:	e9cd 7307 	strd	r7, r3, [sp, #28]
 8000b0c:	9209      	str	r2, [sp, #36]	; 0x24
 8000b0e:	f383 8811 	msr	BASEPRI, r3
 8000b12:	f380 8811 	msr	BASEPRI, r0
 8000b16:	ae0a      	add	r6, sp, #40	; 0x28
 8000b18:	6820      	ldr	r0, [r4, #0]
 8000b1a:	f846 0d28 	str.w	r0, [r6, #-40]!
 8000b1e:	6989      	ldr	r1, [r1, #24]
 8000b20:	9101      	str	r1, [sp, #4]
 8000b22:	f04f 0802 	mov.w	r8, #2
 8000b26:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8000b2a:	6026      	str	r6, [r4, #0]
 8000b2c:	f8cd 8008 	str.w	r8, [sp, #8]
 8000b30:	f383 8811 	msr	BASEPRI, r3
 8000b34:	6821      	ldr	r1, [r4, #0]
 8000b36:	1b09      	subs	r1, r1, r4
 8000b38:	bf18      	it	ne
 8000b3a:	2101      	movne	r1, #1
 8000b3c:	4638      	mov	r0, r7
 8000b3e:	f7ff fe17 	bl	8000770 <_test_assert>
 8000b42:	b110      	cbz	r0, 8000b4a <evt1_execute+0x6a>
 8000b44:	b00a      	add	sp, #40	; 0x28
 8000b46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000b4a:	4629      	mov	r1, r5
 8000b4c:	4620      	mov	r0, r4
 8000b4e:	f7ff ffaf 	bl	8000ab0 <chEvtUnregister>
 8000b52:	6821      	ldr	r1, [r4, #0]
 8000b54:	1b09      	subs	r1, r1, r4
 8000b56:	bf18      	it	ne
 8000b58:	2101      	movne	r1, #1
 8000b5a:	4640      	mov	r0, r8
 8000b5c:	f7ff fe08 	bl	8000770 <_test_assert>
 8000b60:	2800      	cmp	r0, #0
 8000b62:	d1ef      	bne.n	8000b44 <evt1_execute+0x64>
 8000b64:	4631      	mov	r1, r6
 8000b66:	4620      	mov	r0, r4
 8000b68:	f7ff ffa2 	bl	8000ab0 <chEvtUnregister>
 8000b6c:	6821      	ldr	r1, [r4, #0]
 8000b6e:	1b09      	subs	r1, r1, r4
 8000b70:	fab1 f181 	clz	r1, r1
 8000b74:	2003      	movs	r0, #3
 8000b76:	0949      	lsrs	r1, r1, #5
 8000b78:	f7ff fdfa 	bl	8000770 <_test_assert>
 8000b7c:	2800      	cmp	r0, #0
 8000b7e:	d1e1      	bne.n	8000b44 <evt1_execute+0x64>
 8000b80:	4e0e      	ldr	r6, [pc, #56]	; (8000bbc <evt1_execute+0xdc>)
 8000b82:	4604      	mov	r4, r0
 8000b84:	2507      	movs	r5, #7
 8000b86:	fa25 f304 	lsr.w	r3, r5, r4
 8000b8a:	f013 0f01 	tst.w	r3, #1
 8000b8e:	fa07 f204 	lsl.w	r2, r7, r4
 8000b92:	4620      	mov	r0, r4
 8000b94:	d00c      	beq.n	8000bb0 <evt1_execute+0xd0>
 8000b96:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8000b9a:	ea25 0502 	bic.w	r5, r5, r2
 8000b9e:	3401      	adds	r4, #1
 8000ba0:	4798      	blx	r3
 8000ba2:	2d00      	cmp	r5, #0
 8000ba4:	d1ef      	bne.n	8000b86 <evt1_execute+0xa6>
 8000ba6:	4906      	ldr	r1, [pc, #24]	; (8000bc0 <evt1_execute+0xe0>)
 8000ba8:	2004      	movs	r0, #4
 8000baa:	f7ff fdb9 	bl	8000720 <_test_assert_sequence>
 8000bae:	e7c9      	b.n	8000b44 <evt1_execute+0x64>
 8000bb0:	3401      	adds	r4, #1
 8000bb2:	e7e8      	b.n	8000b86 <evt1_execute+0xa6>
 8000bb4:	20000808 	.word	0x20000808
 8000bb8:	20000938 	.word	0x20000938
 8000bbc:	08005dc0 	.word	0x08005dc0
 8000bc0:	08005dd0 	.word	0x08005dd0
	...

08000bd0 <chTMStopMeasurementX>:
 8000bd0:	4b0e      	ldr	r3, [pc, #56]	; (8000c0c <chTMStopMeasurementX+0x3c>)
 8000bd2:	4a0f      	ldr	r2, [pc, #60]	; (8000c10 <chTMStopMeasurementX+0x40>)
 8000bd4:	685b      	ldr	r3, [r3, #4]
 8000bd6:	68c1      	ldr	r1, [r0, #12]
 8000bd8:	b4f0      	push	{r4, r5, r6, r7}
 8000bda:	6884      	ldr	r4, [r0, #8]
 8000bdc:	6f56      	ldr	r6, [r2, #116]	; 0x74
 8000bde:	6842      	ldr	r2, [r0, #4]
 8000be0:	1b1b      	subs	r3, r3, r4
 8000be2:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
 8000be6:	1b9b      	subs	r3, r3, r6
 8000be8:	18e6      	adds	r6, r4, r3
 8000bea:	f145 0700 	adc.w	r7, r5, #0
 8000bee:	3101      	adds	r1, #1
 8000bf0:	4293      	cmp	r3, r2
 8000bf2:	e9c0 3102 	strd	r3, r1, [r0, #8]
 8000bf6:	e9c0 6704 	strd	r6, r7, [r0, #16]
 8000bfa:	d805      	bhi.n	8000c08 <chTMStopMeasurementX+0x38>
 8000bfc:	6802      	ldr	r2, [r0, #0]
 8000bfe:	4293      	cmp	r3, r2
 8000c00:	bf38      	it	cc
 8000c02:	6003      	strcc	r3, [r0, #0]
 8000c04:	bcf0      	pop	{r4, r5, r6, r7}
 8000c06:	4770      	bx	lr
 8000c08:	6043      	str	r3, [r0, #4]
 8000c0a:	e7fb      	b.n	8000c04 <chTMStopMeasurementX+0x34>
 8000c0c:	e0001000 	.word	0xe0001000
 8000c10:	20000938 	.word	0x20000938
	...

08000c20 <wakeup>:
 8000c20:	2320      	movs	r3, #32
 8000c22:	f383 8811 	msr	BASEPRI, r3
 8000c26:	7f03      	ldrb	r3, [r0, #28]
 8000c28:	2b07      	cmp	r3, #7
 8000c2a:	d80e      	bhi.n	8000c4a <wakeup+0x2a>
 8000c2c:	e8df f003 	tbb	[pc, r3]
 8000c30:	230d0d27 	.word	0x230d0d27
 8000c34:	080d0408 	.word	0x080d0408
 8000c38:	6a02      	ldr	r2, [r0, #32]
 8000c3a:	6893      	ldr	r3, [r2, #8]
 8000c3c:	3301      	adds	r3, #1
 8000c3e:	6093      	str	r3, [r2, #8]
 8000c40:	e9d0 2300 	ldrd	r2, r3, [r0]
 8000c44:	601a      	str	r2, [r3, #0]
 8000c46:	6802      	ldr	r2, [r0, #0]
 8000c48:	6053      	str	r3, [r2, #4]
 8000c4a:	b410      	push	{r4}
 8000c4c:	2200      	movs	r2, #0
 8000c4e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000c52:	6881      	ldr	r1, [r0, #8]
 8000c54:	4b0c      	ldr	r3, [pc, #48]	; (8000c88 <wakeup+0x68>)
 8000c56:	6204      	str	r4, [r0, #32]
 8000c58:	7702      	strb	r2, [r0, #28]
 8000c5a:	681b      	ldr	r3, [r3, #0]
 8000c5c:	689a      	ldr	r2, [r3, #8]
 8000c5e:	428a      	cmp	r2, r1
 8000c60:	d2fb      	bcs.n	8000c5a <wakeup+0x3a>
 8000c62:	685a      	ldr	r2, [r3, #4]
 8000c64:	2100      	movs	r1, #0
 8000c66:	e9c0 3200 	strd	r3, r2, [r0]
 8000c6a:	6010      	str	r0, [r2, #0]
 8000c6c:	6058      	str	r0, [r3, #4]
 8000c6e:	f381 8811 	msr	BASEPRI, r1
 8000c72:	bc10      	pop	{r4}
 8000c74:	4770      	bx	lr
 8000c76:	6a03      	ldr	r3, [r0, #32]
 8000c78:	2200      	movs	r2, #0
 8000c7a:	601a      	str	r2, [r3, #0]
 8000c7c:	e7e5      	b.n	8000c4a <wakeup+0x2a>
 8000c7e:	2300      	movs	r3, #0
 8000c80:	f383 8811 	msr	BASEPRI, r3
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop
 8000c88:	20000938 	.word	0x20000938
 8000c8c:	00000000 	.word	0x00000000

08000c90 <chSchReadyI>:
 8000c90:	4601      	mov	r1, r0
 8000c92:	2200      	movs	r2, #0
 8000c94:	4b06      	ldr	r3, [pc, #24]	; (8000cb0 <chSchReadyI+0x20>)
 8000c96:	6880      	ldr	r0, [r0, #8]
 8000c98:	770a      	strb	r2, [r1, #28]
 8000c9a:	681b      	ldr	r3, [r3, #0]
 8000c9c:	689a      	ldr	r2, [r3, #8]
 8000c9e:	4282      	cmp	r2, r0
 8000ca0:	d2fb      	bcs.n	8000c9a <chSchReadyI+0xa>
 8000ca2:	685a      	ldr	r2, [r3, #4]
 8000ca4:	4608      	mov	r0, r1
 8000ca6:	e9c1 3200 	strd	r3, r2, [r1]
 8000caa:	6011      	str	r1, [r2, #0]
 8000cac:	6059      	str	r1, [r3, #4]
 8000cae:	4770      	bx	lr
 8000cb0:	20000938 	.word	0x20000938
	...

08000cc0 <chCondSignalI.constprop.42>:
 8000cc0:	4b07      	ldr	r3, [pc, #28]	; (8000ce0 <chCondSignalI.constprop.42+0x20>)
 8000cc2:	681a      	ldr	r2, [r3, #0]
 8000cc4:	429a      	cmp	r2, r3
 8000cc6:	d009      	beq.n	8000cdc <chCondSignalI.constprop.42+0x1c>
 8000cc8:	6811      	ldr	r1, [r2, #0]
 8000cca:	b410      	push	{r4}
 8000ccc:	2400      	movs	r4, #0
 8000cce:	604b      	str	r3, [r1, #4]
 8000cd0:	6019      	str	r1, [r3, #0]
 8000cd2:	6214      	str	r4, [r2, #32]
 8000cd4:	4610      	mov	r0, r2
 8000cd6:	bc10      	pop	{r4}
 8000cd8:	f7ff bfda 	b.w	8000c90 <chSchReadyI>
 8000cdc:	4770      	bx	lr
 8000cde:	bf00      	nop
 8000ce0:	20000800 	.word	0x20000800
	...

08000cf0 <chIQPutI>:
 8000cf0:	b510      	push	{r4, lr}
 8000cf2:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 8000cf6:	42a2      	cmp	r2, r4
 8000cf8:	6883      	ldr	r3, [r0, #8]
 8000cfa:	d01c      	beq.n	8000d36 <chIQPutI+0x46>
 8000cfc:	3301      	adds	r3, #1
 8000cfe:	1c54      	adds	r4, r2, #1
 8000d00:	6083      	str	r3, [r0, #8]
 8000d02:	6144      	str	r4, [r0, #20]
 8000d04:	7011      	strb	r1, [r2, #0]
 8000d06:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
 8000d0a:	429a      	cmp	r2, r3
 8000d0c:	d20c      	bcs.n	8000d28 <chIQPutI+0x38>
 8000d0e:	6803      	ldr	r3, [r0, #0]
 8000d10:	4298      	cmp	r0, r3
 8000d12:	d00e      	beq.n	8000d32 <chIQPutI+0x42>
 8000d14:	681a      	ldr	r2, [r3, #0]
 8000d16:	6002      	str	r2, [r0, #0]
 8000d18:	2400      	movs	r4, #0
 8000d1a:	6050      	str	r0, [r2, #4]
 8000d1c:	4618      	mov	r0, r3
 8000d1e:	621c      	str	r4, [r3, #32]
 8000d20:	f7ff ffb6 	bl	8000c90 <chSchReadyI>
 8000d24:	4620      	mov	r0, r4
 8000d26:	bd10      	pop	{r4, pc}
 8000d28:	68c3      	ldr	r3, [r0, #12]
 8000d2a:	6143      	str	r3, [r0, #20]
 8000d2c:	6803      	ldr	r3, [r0, #0]
 8000d2e:	4298      	cmp	r0, r3
 8000d30:	d1f0      	bne.n	8000d14 <chIQPutI+0x24>
 8000d32:	2000      	movs	r0, #0
 8000d34:	bd10      	pop	{r4, pc}
 8000d36:	2b00      	cmp	r3, #0
 8000d38:	d0e0      	beq.n	8000cfc <chIQPutI+0xc>
 8000d3a:	f06f 0003 	mvn.w	r0, #3
 8000d3e:	bd10      	pop	{r4, pc}

08000d40 <chOQGetI>:
 8000d40:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8000d44:	4291      	cmp	r1, r2
 8000d46:	b538      	push	{r3, r4, r5, lr}
 8000d48:	6883      	ldr	r3, [r0, #8]
 8000d4a:	d017      	beq.n	8000d7c <chOQGetI+0x3c>
 8000d4c:	6905      	ldr	r5, [r0, #16]
 8000d4e:	1c51      	adds	r1, r2, #1
 8000d50:	3301      	adds	r3, #1
 8000d52:	6083      	str	r3, [r0, #8]
 8000d54:	6181      	str	r1, [r0, #24]
 8000d56:	42a9      	cmp	r1, r5
 8000d58:	7814      	ldrb	r4, [r2, #0]
 8000d5a:	d20c      	bcs.n	8000d76 <chOQGetI+0x36>
 8000d5c:	6803      	ldr	r3, [r0, #0]
 8000d5e:	4298      	cmp	r0, r3
 8000d60:	d007      	beq.n	8000d72 <chOQGetI+0x32>
 8000d62:	681a      	ldr	r2, [r3, #0]
 8000d64:	6002      	str	r2, [r0, #0]
 8000d66:	2100      	movs	r1, #0
 8000d68:	6050      	str	r0, [r2, #4]
 8000d6a:	4618      	mov	r0, r3
 8000d6c:	6219      	str	r1, [r3, #32]
 8000d6e:	f7ff ff8f 	bl	8000c90 <chSchReadyI>
 8000d72:	4620      	mov	r0, r4
 8000d74:	bd38      	pop	{r3, r4, r5, pc}
 8000d76:	68c3      	ldr	r3, [r0, #12]
 8000d78:	6183      	str	r3, [r0, #24]
 8000d7a:	e7ef      	b.n	8000d5c <chOQGetI+0x1c>
 8000d7c:	2b00      	cmp	r3, #0
 8000d7e:	d0e5      	beq.n	8000d4c <chOQGetI+0xc>
 8000d80:	f06f 0002 	mvn.w	r0, #2
 8000d84:	bd38      	pop	{r3, r4, r5, pc}
 8000d86:	bf00      	nop
	...

08000d90 <chEvtSignalI>:
 8000d90:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8000d92:	7f02      	ldrb	r2, [r0, #28]
 8000d94:	4319      	orrs	r1, r3
 8000d96:	2a0a      	cmp	r2, #10
 8000d98:	6341      	str	r1, [r0, #52]	; 0x34
 8000d9a:	d009      	beq.n	8000db0 <chEvtSignalI+0x20>
 8000d9c:	2a0b      	cmp	r2, #11
 8000d9e:	d000      	beq.n	8000da2 <chEvtSignalI+0x12>
 8000da0:	4770      	bx	lr
 8000da2:	6a03      	ldr	r3, [r0, #32]
 8000da4:	438b      	bics	r3, r1
 8000da6:	d1fb      	bne.n	8000da0 <chEvtSignalI+0x10>
 8000da8:	2300      	movs	r3, #0
 8000daa:	6203      	str	r3, [r0, #32]
 8000dac:	f7ff bf70 	b.w	8000c90 <chSchReadyI>
 8000db0:	6a03      	ldr	r3, [r0, #32]
 8000db2:	4219      	tst	r1, r3
 8000db4:	d1f8      	bne.n	8000da8 <chEvtSignalI+0x18>
 8000db6:	4770      	bx	lr
	...

08000dc0 <chEvtBroadcastFlagsI>:
 8000dc0:	b570      	push	{r4, r5, r6, lr}
 8000dc2:	6804      	ldr	r4, [r0, #0]
 8000dc4:	42a0      	cmp	r0, r4
 8000dc6:	d00f      	beq.n	8000de8 <chEvtBroadcastFlagsI+0x28>
 8000dc8:	4606      	mov	r6, r0
 8000dca:	460d      	mov	r5, r1
 8000dcc:	68e3      	ldr	r3, [r4, #12]
 8000dce:	432b      	orrs	r3, r5
 8000dd0:	60e3      	str	r3, [r4, #12]
 8000dd2:	b115      	cbz	r5, 8000dda <chEvtBroadcastFlagsI+0x1a>
 8000dd4:	6922      	ldr	r2, [r4, #16]
 8000dd6:	4213      	tst	r3, r2
 8000dd8:	d003      	beq.n	8000de2 <chEvtBroadcastFlagsI+0x22>
 8000dda:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 8000dde:	f7ff ffd7 	bl	8000d90 <chEvtSignalI>
 8000de2:	6824      	ldr	r4, [r4, #0]
 8000de4:	42a6      	cmp	r6, r4
 8000de6:	d1f1      	bne.n	8000dcc <chEvtBroadcastFlagsI+0xc>
 8000de8:	bd70      	pop	{r4, r5, r6, pc}
 8000dea:	bf00      	nop
 8000dec:	0000      	movs	r0, r0
	...

08000df0 <VectorD8>:
 8000df0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000df4:	4f43      	ldr	r7, [pc, #268]	; (8000f04 <VectorD8+0x114>)
 8000df6:	6f7d      	ldr	r5, [r7, #116]	; 0x74
 8000df8:	682e      	ldr	r6, [r5, #0]
 8000dfa:	69ec      	ldr	r4, [r5, #28]
 8000dfc:	622c      	str	r4, [r5, #32]
 8000dfe:	0722      	lsls	r2, r4, #28
 8000e00:	d11a      	bne.n	8000e38 <VectorD8+0x48>
 8000e02:	05e3      	lsls	r3, r4, #23
 8000e04:	d434      	bmi.n	8000e70 <VectorD8+0x80>
 8000e06:	06a0      	lsls	r0, r4, #26
 8000e08:	d43f      	bmi.n	8000e8a <VectorD8+0x9a>
 8000e0a:	0631      	lsls	r1, r6, #24
 8000e0c:	d501      	bpl.n	8000e12 <VectorD8+0x22>
 8000e0e:	0622      	lsls	r2, r4, #24
 8000e10:	d44e      	bmi.n	8000eb0 <VectorD8+0xc0>
 8000e12:	0663      	lsls	r3, r4, #25
 8000e14:	d50c      	bpl.n	8000e30 <VectorD8+0x40>
 8000e16:	2320      	movs	r3, #32
 8000e18:	f383 8811 	msr	BASEPRI, r3
 8000e1c:	e9d7 2311 	ldrd	r2, r3, [r7, #68]	; 0x44
 8000e20:	429a      	cmp	r2, r3
 8000e22:	d053      	beq.n	8000ecc <VectorD8+0xdc>
 8000e24:	f026 0640 	bic.w	r6, r6, #64	; 0x40
 8000e28:	602e      	str	r6, [r5, #0]
 8000e2a:	2300      	movs	r3, #0
 8000e2c:	f383 8811 	msr	BASEPRI, r3
 8000e30:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e34:	f7ff bd24 	b.w	8000880 <_port_irq_epilogue>
 8000e38:	f014 0f08 	tst.w	r4, #8
 8000e3c:	bf0c      	ite	eq
 8000e3e:	2100      	moveq	r1, #0
 8000e40:	2180      	movne	r1, #128	; 0x80
 8000e42:	07e3      	lsls	r3, r4, #31
 8000e44:	bf48      	it	mi
 8000e46:	f041 0120 	orrmi.w	r1, r1, #32
 8000e4a:	07a0      	lsls	r0, r4, #30
 8000e4c:	bf48      	it	mi
 8000e4e:	f041 0140 	orrmi.w	r1, r1, #64	; 0x40
 8000e52:	0762      	lsls	r2, r4, #29
 8000e54:	bf48      	it	mi
 8000e56:	f441 7180 	orrmi.w	r1, r1, #256	; 0x100
 8000e5a:	2320      	movs	r3, #32
 8000e5c:	f383 8811 	msr	BASEPRI, r3
 8000e60:	4829      	ldr	r0, [pc, #164]	; (8000f08 <VectorD8+0x118>)
 8000e62:	f7ff ffad 	bl	8000dc0 <chEvtBroadcastFlagsI>
 8000e66:	2300      	movs	r3, #0
 8000e68:	f383 8811 	msr	BASEPRI, r3
 8000e6c:	05e3      	lsls	r3, r4, #23
 8000e6e:	d5ca      	bpl.n	8000e06 <VectorD8+0x16>
 8000e70:	2320      	movs	r3, #32
 8000e72:	f383 8811 	msr	BASEPRI, r3
 8000e76:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000e7a:	4823      	ldr	r0, [pc, #140]	; (8000f08 <VectorD8+0x118>)
 8000e7c:	f7ff ffa0 	bl	8000dc0 <chEvtBroadcastFlagsI>
 8000e80:	2300      	movs	r3, #0
 8000e82:	f383 8811 	msr	BASEPRI, r3
 8000e86:	06a0      	lsls	r0, r4, #26
 8000e88:	d5bf      	bpl.n	8000e0a <VectorD8+0x1a>
 8000e8a:	2320      	movs	r3, #32
 8000e8c:	f383 8811 	msr	BASEPRI, r3
 8000e90:	f8b5 8024 	ldrh.w	r8, [r5, #36]	; 0x24
 8000e94:	697b      	ldr	r3, [r7, #20]
 8000e96:	fa5f f888 	uxtb.w	r8, r8
 8000e9a:	b1fb      	cbz	r3, 8000edc <VectorD8+0xec>
 8000e9c:	4641      	mov	r1, r8
 8000e9e:	481b      	ldr	r0, [pc, #108]	; (8000f0c <VectorD8+0x11c>)
 8000ea0:	f7ff ff26 	bl	8000cf0 <chIQPutI>
 8000ea4:	2800      	cmp	r0, #0
 8000ea6:	db1e      	blt.n	8000ee6 <VectorD8+0xf6>
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	f383 8811 	msr	BASEPRI, r3
 8000eae:	e7ac      	b.n	8000e0a <VectorD8+0x1a>
 8000eb0:	2320      	movs	r3, #32
 8000eb2:	f383 8811 	msr	BASEPRI, r3
 8000eb6:	4816      	ldr	r0, [pc, #88]	; (8000f10 <VectorD8+0x120>)
 8000eb8:	f7ff ff42 	bl	8000d40 <chOQGetI>
 8000ebc:	2800      	cmp	r0, #0
 8000ebe:	db17      	blt.n	8000ef0 <VectorD8+0x100>
 8000ec0:	b280      	uxth	r0, r0
 8000ec2:	8528      	strh	r0, [r5, #40]	; 0x28
 8000ec4:	2300      	movs	r3, #0
 8000ec6:	f383 8811 	msr	BASEPRI, r3
 8000eca:	e7a2      	b.n	8000e12 <VectorD8+0x22>
 8000ecc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000ece:	2b00      	cmp	r3, #0
 8000ed0:	d0a8      	beq.n	8000e24 <VectorD8+0x34>
 8000ed2:	2110      	movs	r1, #16
 8000ed4:	480c      	ldr	r0, [pc, #48]	; (8000f08 <VectorD8+0x118>)
 8000ed6:	f7ff ff73 	bl	8000dc0 <chEvtBroadcastFlagsI>
 8000eda:	e7a3      	b.n	8000e24 <VectorD8+0x34>
 8000edc:	2104      	movs	r1, #4
 8000ede:	480a      	ldr	r0, [pc, #40]	; (8000f08 <VectorD8+0x118>)
 8000ee0:	f7ff ff6e 	bl	8000dc0 <chEvtBroadcastFlagsI>
 8000ee4:	e7da      	b.n	8000e9c <VectorD8+0xac>
 8000ee6:	2180      	movs	r1, #128	; 0x80
 8000ee8:	4807      	ldr	r0, [pc, #28]	; (8000f08 <VectorD8+0x118>)
 8000eea:	f7ff ff69 	bl	8000dc0 <chEvtBroadcastFlagsI>
 8000eee:	e7db      	b.n	8000ea8 <VectorD8+0xb8>
 8000ef0:	2108      	movs	r1, #8
 8000ef2:	4805      	ldr	r0, [pc, #20]	; (8000f08 <VectorD8+0x118>)
 8000ef4:	f7ff ff64 	bl	8000dc0 <chEvtBroadcastFlagsI>
 8000ef8:	f026 03c0 	bic.w	r3, r6, #192	; 0xc0
 8000efc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f00:	602b      	str	r3, [r5, #0]
 8000f02:	e7df      	b.n	8000ec4 <VectorD8+0xd4>
 8000f04:	200008b8 	.word	0x200008b8
 8000f08:	200008bc 	.word	0x200008bc
 8000f0c:	200008c4 	.word	0x200008c4
 8000f10:	200008e8 	.word	0x200008e8
	...

08000f20 <chMtxUnlockS>:
 8000f20:	4b12      	ldr	r3, [pc, #72]	; (8000f6c <chMtxUnlockS+0x4c>)
 8000f22:	b430      	push	{r4, r5}
 8000f24:	6804      	ldr	r4, [r0, #0]
 8000f26:	699d      	ldr	r5, [r3, #24]
 8000f28:	68c3      	ldr	r3, [r0, #12]
 8000f2a:	63ab      	str	r3, [r5, #56]	; 0x38
 8000f2c:	4284      	cmp	r4, r0
 8000f2e:	d018      	beq.n	8000f62 <chMtxUnlockS+0x42>
 8000f30:	4601      	mov	r1, r0
 8000f32:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 8000f34:	b14b      	cbz	r3, 8000f4a <chMtxUnlockS+0x2a>
 8000f36:	681a      	ldr	r2, [r3, #0]
 8000f38:	4293      	cmp	r3, r2
 8000f3a:	d003      	beq.n	8000f44 <chMtxUnlockS+0x24>
 8000f3c:	6892      	ldr	r2, [r2, #8]
 8000f3e:	4290      	cmp	r0, r2
 8000f40:	bf38      	it	cc
 8000f42:	4610      	movcc	r0, r2
 8000f44:	68db      	ldr	r3, [r3, #12]
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d1f5      	bne.n	8000f36 <chMtxUnlockS+0x16>
 8000f4a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8000f4c:	6823      	ldr	r3, [r4, #0]
 8000f4e:	60a8      	str	r0, [r5, #8]
 8000f50:	600b      	str	r3, [r1, #0]
 8000f52:	4620      	mov	r0, r4
 8000f54:	6059      	str	r1, [r3, #4]
 8000f56:	e9c1 4202 	strd	r4, r2, [r1, #8]
 8000f5a:	63a1      	str	r1, [r4, #56]	; 0x38
 8000f5c:	bc30      	pop	{r4, r5}
 8000f5e:	f7ff be97 	b.w	8000c90 <chSchReadyI>
 8000f62:	2300      	movs	r3, #0
 8000f64:	60a3      	str	r3, [r4, #8]
 8000f66:	bc30      	pop	{r4, r5}
 8000f68:	4770      	bx	lr
 8000f6a:	bf00      	nop
 8000f6c:	20000938 	.word	0x20000938

08000f70 <chSemSignalI>:
 8000f70:	6883      	ldr	r3, [r0, #8]
 8000f72:	3301      	adds	r3, #1
 8000f74:	2b00      	cmp	r3, #0
 8000f76:	6083      	str	r3, [r0, #8]
 8000f78:	dd00      	ble.n	8000f7c <chSemSignalI+0xc>
 8000f7a:	4770      	bx	lr
 8000f7c:	6803      	ldr	r3, [r0, #0]
 8000f7e:	681a      	ldr	r2, [r3, #0]
 8000f80:	6002      	str	r2, [r0, #0]
 8000f82:	2100      	movs	r1, #0
 8000f84:	6050      	str	r0, [r2, #4]
 8000f86:	4618      	mov	r0, r3
 8000f88:	6219      	str	r1, [r3, #32]
 8000f8a:	f7ff be81 	b.w	8000c90 <chSchReadyI>
 8000f8e:	bf00      	nop

08000f90 <chMBPostI.constprop.18>:
 8000f90:	b538      	push	{r3, r4, r5, lr}
 8000f92:	4b0c      	ldr	r3, [pc, #48]	; (8000fc4 <chMBPostI.constprop.18+0x34>)
 8000f94:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000f96:	2a00      	cmp	r2, #0
 8000f98:	dd10      	ble.n	8000fbc <chMBPostI.constprop.18+0x2c>
 8000f9a:	e9d3 5401 	ldrd	r5, r4, [r3, #4]
 8000f9e:	1d21      	adds	r1, r4, #4
 8000fa0:	3a01      	subs	r2, #1
 8000fa2:	42a9      	cmp	r1, r5
 8000fa4:	625a      	str	r2, [r3, #36]	; 0x24
 8000fa6:	6099      	str	r1, [r3, #8]
 8000fa8:	bf28      	it	cs
 8000faa:	681a      	ldrcs	r2, [r3, #0]
 8000fac:	6020      	str	r0, [r4, #0]
 8000fae:	4806      	ldr	r0, [pc, #24]	; (8000fc8 <chMBPostI.constprop.18+0x38>)
 8000fb0:	bf28      	it	cs
 8000fb2:	609a      	strcs	r2, [r3, #8]
 8000fb4:	f7ff ffdc 	bl	8000f70 <chSemSignalI>
 8000fb8:	2000      	movs	r0, #0
 8000fba:	bd38      	pop	{r3, r4, r5, pc}
 8000fbc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000fc0:	bd38      	pop	{r3, r4, r5, pc}
 8000fc2:	bf00      	nop
 8000fc4:	20000854 	.word	0x20000854
 8000fc8:	20000864 	.word	0x20000864
 8000fcc:	00000000 	.word	0x00000000

08000fd0 <chMBPostAheadI.constprop.16>:
 8000fd0:	4a0c      	ldr	r2, [pc, #48]	; (8001004 <chMBPostAheadI.constprop.16+0x34>)
 8000fd2:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8000fd4:	2900      	cmp	r1, #0
 8000fd6:	dd11      	ble.n	8000ffc <chMBPostAheadI.constprop.16+0x2c>
 8000fd8:	68d3      	ldr	r3, [r2, #12]
 8000fda:	b510      	push	{r4, lr}
 8000fdc:	6814      	ldr	r4, [r2, #0]
 8000fde:	3b04      	subs	r3, #4
 8000fe0:	3901      	subs	r1, #1
 8000fe2:	42a3      	cmp	r3, r4
 8000fe4:	6251      	str	r1, [r2, #36]	; 0x24
 8000fe6:	60d3      	str	r3, [r2, #12]
 8000fe8:	d202      	bcs.n	8000ff0 <chMBPostAheadI.constprop.16+0x20>
 8000fea:	6853      	ldr	r3, [r2, #4]
 8000fec:	3b04      	subs	r3, #4
 8000fee:	60d3      	str	r3, [r2, #12]
 8000ff0:	6018      	str	r0, [r3, #0]
 8000ff2:	4805      	ldr	r0, [pc, #20]	; (8001008 <chMBPostAheadI.constprop.16+0x38>)
 8000ff4:	f7ff ffbc 	bl	8000f70 <chSemSignalI>
 8000ff8:	2000      	movs	r0, #0
 8000ffa:	bd10      	pop	{r4, pc}
 8000ffc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001000:	4770      	bx	lr
 8001002:	bf00      	nop
 8001004:	20000854 	.word	0x20000854
 8001008:	20000864 	.word	0x20000864
 800100c:	00000000 	.word	0x00000000

08001010 <chMBFetchI.constprop.14>:
 8001010:	4b0c      	ldr	r3, [pc, #48]	; (8001044 <chMBFetchI.constprop.14+0x34>)
 8001012:	6999      	ldr	r1, [r3, #24]
 8001014:	2900      	cmp	r1, #0
 8001016:	dd12      	ble.n	800103e <chMBFetchI.constprop.14+0x2e>
 8001018:	b510      	push	{r4, lr}
 800101a:	68da      	ldr	r2, [r3, #12]
 800101c:	3901      	subs	r1, #1
 800101e:	6199      	str	r1, [r3, #24]
 8001020:	6859      	ldr	r1, [r3, #4]
 8001022:	6814      	ldr	r4, [r2, #0]
 8001024:	3204      	adds	r2, #4
 8001026:	428a      	cmp	r2, r1
 8001028:	60da      	str	r2, [r3, #12]
 800102a:	6004      	str	r4, [r0, #0]
 800102c:	bf28      	it	cs
 800102e:	681a      	ldrcs	r2, [r3, #0]
 8001030:	4805      	ldr	r0, [pc, #20]	; (8001048 <chMBFetchI.constprop.14+0x38>)
 8001032:	bf28      	it	cs
 8001034:	60da      	strcs	r2, [r3, #12]
 8001036:	f7ff ff9b 	bl	8000f70 <chSemSignalI>
 800103a:	2000      	movs	r0, #0
 800103c:	bd10      	pop	{r4, pc}
 800103e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001042:	4770      	bx	lr
 8001044:	20000854 	.word	0x20000854
 8001048:	20000870 	.word	0x20000870
 800104c:	00000000 	.word	0x00000000

08001050 <chSemResetI>:
 8001050:	b570      	push	{r4, r5, r6, lr}
 8001052:	6885      	ldr	r5, [r0, #8]
 8001054:	6081      	str	r1, [r0, #8]
 8001056:	3501      	adds	r5, #1
 8001058:	2d00      	cmp	r5, #0
 800105a:	dc0c      	bgt.n	8001076 <chSemResetI+0x26>
 800105c:	4604      	mov	r4, r0
 800105e:	f06f 0601 	mvn.w	r6, #1
 8001062:	6860      	ldr	r0, [r4, #4]
 8001064:	6843      	ldr	r3, [r0, #4]
 8001066:	6063      	str	r3, [r4, #4]
 8001068:	601c      	str	r4, [r3, #0]
 800106a:	f7ff fe11 	bl	8000c90 <chSchReadyI>
 800106e:	3501      	adds	r5, #1
 8001070:	2d01      	cmp	r5, #1
 8001072:	6206      	str	r6, [r0, #32]
 8001074:	d1f5      	bne.n	8001062 <chSemResetI+0x12>
 8001076:	bd70      	pop	{r4, r5, r6, pc}
	...

08001080 <chVTDoResetI>:
 8001080:	4b1a      	ldr	r3, [pc, #104]	; (80010ec <chVTDoResetI+0x6c>)
 8001082:	69da      	ldr	r2, [r3, #28]
 8001084:	4282      	cmp	r2, r0
 8001086:	b410      	push	{r4}
 8001088:	d00f      	beq.n	80010aa <chVTDoResetI+0x2a>
 800108a:	e9d0 2100 	ldrd	r2, r1, [r0]
 800108e:	600a      	str	r2, [r1, #0]
 8001090:	6802      	ldr	r2, [r0, #0]
 8001092:	331c      	adds	r3, #28
 8001094:	2400      	movs	r4, #0
 8001096:	429a      	cmp	r2, r3
 8001098:	6051      	str	r1, [r2, #4]
 800109a:	60c4      	str	r4, [r0, #12]
 800109c:	d003      	beq.n	80010a6 <chVTDoResetI+0x26>
 800109e:	6881      	ldr	r1, [r0, #8]
 80010a0:	6893      	ldr	r3, [r2, #8]
 80010a2:	440b      	add	r3, r1
 80010a4:	6093      	str	r3, [r2, #8]
 80010a6:	bc10      	pop	{r4}
 80010a8:	4770      	bx	lr
 80010aa:	4618      	mov	r0, r3
 80010ac:	6811      	ldr	r1, [r2, #0]
 80010ae:	f840 1f1c 	str.w	r1, [r0, #28]!
 80010b2:	2400      	movs	r4, #0
 80010b4:	4281      	cmp	r1, r0
 80010b6:	6048      	str	r0, [r1, #4]
 80010b8:	60d4      	str	r4, [r2, #12]
 80010ba:	d012      	beq.n	80010e2 <chVTDoResetI+0x62>
 80010bc:	6894      	ldr	r4, [r2, #8]
 80010be:	6888      	ldr	r0, [r1, #8]
 80010c0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80010c2:	1903      	adds	r3, r0, r4
 80010c4:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 80010c8:	608b      	str	r3, [r1, #8]
 80010ca:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80010cc:	1a8a      	subs	r2, r1, r2
 80010ce:	4293      	cmp	r3, r2
 80010d0:	d9e9      	bls.n	80010a6 <chVTDoResetI+0x26>
 80010d2:	1a9b      	subs	r3, r3, r2
 80010d4:	2b02      	cmp	r3, #2
 80010d6:	bf2c      	ite	cs
 80010d8:	18cb      	addcs	r3, r1, r3
 80010da:	1c8b      	addcc	r3, r1, #2
 80010dc:	6363      	str	r3, [r4, #52]	; 0x34
 80010de:	bc10      	pop	{r4}
 80010e0:	4770      	bx	lr
 80010e2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010e6:	60dc      	str	r4, [r3, #12]
 80010e8:	e7dd      	b.n	80010a6 <chVTDoResetI+0x26>
 80010ea:	bf00      	nop
 80010ec:	20000938 	.word	0x20000938

080010f0 <chVTDoSetI>:
 80010f0:	b4f0      	push	{r4, r5, r6, r7}
 80010f2:	4d1c      	ldr	r5, [pc, #112]	; (8001164 <chVTDoSetI+0x74>)
 80010f4:	462e      	mov	r6, r5
 80010f6:	2902      	cmp	r1, #2
 80010f8:	f856 4f1c 	ldr.w	r4, [r6, #28]!
 80010fc:	6103      	str	r3, [r0, #16]
 80010fe:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 8001102:	bf38      	it	cc
 8001104:	2102      	movcc	r1, #2
 8001106:	42b4      	cmp	r4, r6
 8001108:	60c2      	str	r2, [r0, #12]
 800110a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800110c:	d01b      	beq.n	8001146 <chVTDoSetI+0x56>
 800110e:	6aae      	ldr	r6, [r5, #40]	; 0x28
 8001110:	68a2      	ldr	r2, [r4, #8]
 8001112:	4419      	add	r1, r3
 8001114:	1b8b      	subs	r3, r1, r6
 8001116:	429a      	cmp	r2, r3
 8001118:	d903      	bls.n	8001122 <chVTDoSetI+0x32>
 800111a:	e012      	b.n	8001142 <chVTDoSetI+0x52>
 800111c:	6824      	ldr	r4, [r4, #0]
 800111e:	1a9b      	subs	r3, r3, r2
 8001120:	68a2      	ldr	r2, [r4, #8]
 8001122:	429a      	cmp	r2, r3
 8001124:	d3fa      	bcc.n	800111c <chVTDoSetI+0x2c>
 8001126:	6862      	ldr	r2, [r4, #4]
 8001128:	e9c0 4200 	strd	r4, r2, [r0]
 800112c:	6010      	str	r0, [r2, #0]
 800112e:	6060      	str	r0, [r4, #4]
 8001130:	6083      	str	r3, [r0, #8]
 8001132:	68a2      	ldr	r2, [r4, #8]
 8001134:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001138:	1ad3      	subs	r3, r2, r3
 800113a:	60a3      	str	r3, [r4, #8]
 800113c:	6269      	str	r1, [r5, #36]	; 0x24
 800113e:	bcf0      	pop	{r4, r5, r6, r7}
 8001140:	4770      	bx	lr
 8001142:	6379      	str	r1, [r7, #52]	; 0x34
 8001144:	e7ed      	b.n	8001122 <chVTDoSetI+0x32>
 8001146:	62ab      	str	r3, [r5, #40]	; 0x28
 8001148:	18ce      	adds	r6, r1, r3
 800114a:	2200      	movs	r2, #0
 800114c:	2302      	movs	r3, #2
 800114e:	e9c5 0007 	strd	r0, r0, [r5, #28]
 8001152:	e9c0 4400 	strd	r4, r4, [r0]
 8001156:	6081      	str	r1, [r0, #8]
 8001158:	637e      	str	r6, [r7, #52]	; 0x34
 800115a:	613a      	str	r2, [r7, #16]
 800115c:	60fb      	str	r3, [r7, #12]
 800115e:	bcf0      	pop	{r4, r5, r6, r7}
 8001160:	4770      	bx	lr
 8001162:	bf00      	nop
 8001164:	20000938 	.word	0x20000938
	...

08001170 <test_start_timer.constprop.1>:
 8001170:	b508      	push	{r3, lr}
 8001172:	4b0b      	ldr	r3, [pc, #44]	; (80011a0 <test_start_timer.constprop.1+0x30>)
 8001174:	2200      	movs	r2, #0
 8001176:	701a      	strb	r2, [r3, #0]
 8001178:	2320      	movs	r3, #32
 800117a:	f383 8811 	msr	BASEPRI, r3
 800117e:	4809      	ldr	r0, [pc, #36]	; (80011a4 <test_start_timer.constprop.1+0x34>)
 8001180:	68c3      	ldr	r3, [r0, #12]
 8001182:	b10b      	cbz	r3, 8001188 <test_start_timer.constprop.1+0x18>
 8001184:	f7ff ff7c 	bl	8001080 <chVTDoResetI>
 8001188:	2300      	movs	r3, #0
 800118a:	4a07      	ldr	r2, [pc, #28]	; (80011a8 <test_start_timer.constprop.1+0x38>)
 800118c:	4805      	ldr	r0, [pc, #20]	; (80011a4 <test_start_timer.constprop.1+0x34>)
 800118e:	f242 7110 	movw	r1, #10000	; 0x2710
 8001192:	f7ff ffad 	bl	80010f0 <chVTDoSetI>
 8001196:	2300      	movs	r3, #0
 8001198:	f383 8811 	msr	BASEPRI, r3
 800119c:	bd08      	pop	{r3, pc}
 800119e:	bf00      	nop
 80011a0:	200011d0 	.word	0x200011d0
 80011a4:	200011fc 	.word	0x200011fc
 80011a8:	080002c1 	.word	0x080002c1
 80011ac:	00000000 	.word	0x00000000

080011b0 <chSysGetStatusAndLockX.part.2>:
 80011b0:	f3ef 8305 	mrs	r3, IPSR
 80011b4:	2320      	movs	r3, #32
 80011b6:	f383 8811 	msr	BASEPRI, r3
 80011ba:	4770      	bx	lr
 80011bc:	0000      	movs	r0, r0
	...

080011c0 <chSysIntegrityCheckI>:
 80011c0:	07c2      	lsls	r2, r0, #31
 80011c2:	b410      	push	{r4}
 80011c4:	d512      	bpl.n	80011ec <chSysIntegrityCheckI+0x2c>
 80011c6:	4b29      	ldr	r3, [pc, #164]	; (800126c <chSysIntegrityCheckI+0xac>)
 80011c8:	e9d3 1400 	ldrd	r1, r4, [r3]
 80011cc:	4299      	cmp	r1, r3
 80011ce:	d041      	beq.n	8001254 <chSysIntegrityCheckI+0x94>
 80011d0:	2200      	movs	r2, #0
 80011d2:	6809      	ldr	r1, [r1, #0]
 80011d4:	4299      	cmp	r1, r3
 80011d6:	f102 0201 	add.w	r2, r2, #1
 80011da:	d1fa      	bne.n	80011d2 <chSysIntegrityCheckI+0x12>
 80011dc:	428c      	cmp	r4, r1
 80011de:	d036      	beq.n	800124e <chSysIntegrityCheckI+0x8e>
 80011e0:	6864      	ldr	r4, [r4, #4]
 80011e2:	429c      	cmp	r4, r3
 80011e4:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 80011e8:	d1fa      	bne.n	80011e0 <chSysIntegrityCheckI+0x20>
 80011ea:	bb82      	cbnz	r2, 800124e <chSysIntegrityCheckI+0x8e>
 80011ec:	0783      	lsls	r3, r0, #30
 80011ee:	d513      	bpl.n	8001218 <chSysIntegrityCheckI+0x58>
 80011f0:	4c1e      	ldr	r4, [pc, #120]	; (800126c <chSysIntegrityCheckI+0xac>)
 80011f2:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 80011f6:	341c      	adds	r4, #28
 80011f8:	42a2      	cmp	r2, r4
 80011fa:	d02f      	beq.n	800125c <chSysIntegrityCheckI+0x9c>
 80011fc:	2300      	movs	r3, #0
 80011fe:	6812      	ldr	r2, [r2, #0]
 8001200:	42a2      	cmp	r2, r4
 8001202:	f103 0301 	add.w	r3, r3, #1
 8001206:	d1fa      	bne.n	80011fe <chSysIntegrityCheckI+0x3e>
 8001208:	4291      	cmp	r1, r2
 800120a:	d020      	beq.n	800124e <chSysIntegrityCheckI+0x8e>
 800120c:	6849      	ldr	r1, [r1, #4]
 800120e:	42a1      	cmp	r1, r4
 8001210:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8001214:	d1fa      	bne.n	800120c <chSysIntegrityCheckI+0x4c>
 8001216:	b9d3      	cbnz	r3, 800124e <chSysIntegrityCheckI+0x8e>
 8001218:	f010 0004 	ands.w	r0, r0, #4
 800121c:	d015      	beq.n	800124a <chSysIntegrityCheckI+0x8a>
 800121e:	4b13      	ldr	r3, [pc, #76]	; (800126c <chSysIntegrityCheckI+0xac>)
 8001220:	e9d3 2104 	ldrd	r2, r1, [r3, #16]
 8001224:	429a      	cmp	r2, r3
 8001226:	f04f 0000 	mov.w	r0, #0
 800122a:	d01b      	beq.n	8001264 <chSysIntegrityCheckI+0xa4>
 800122c:	6912      	ldr	r2, [r2, #16]
 800122e:	429a      	cmp	r2, r3
 8001230:	f100 0001 	add.w	r0, r0, #1
 8001234:	d1fa      	bne.n	800122c <chSysIntegrityCheckI+0x6c>
 8001236:	4291      	cmp	r1, r2
 8001238:	d009      	beq.n	800124e <chSysIntegrityCheckI+0x8e>
 800123a:	6949      	ldr	r1, [r1, #20]
 800123c:	4299      	cmp	r1, r3
 800123e:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 8001242:	d1fa      	bne.n	800123a <chSysIntegrityCheckI+0x7a>
 8001244:	3000      	adds	r0, #0
 8001246:	bf18      	it	ne
 8001248:	2001      	movne	r0, #1
 800124a:	bc10      	pop	{r4}
 800124c:	4770      	bx	lr
 800124e:	2001      	movs	r0, #1
 8001250:	bc10      	pop	{r4}
 8001252:	4770      	bx	lr
 8001254:	429c      	cmp	r4, r3
 8001256:	d0c9      	beq.n	80011ec <chSysIntegrityCheckI+0x2c>
 8001258:	2200      	movs	r2, #0
 800125a:	e7c1      	b.n	80011e0 <chSysIntegrityCheckI+0x20>
 800125c:	42a1      	cmp	r1, r4
 800125e:	d0db      	beq.n	8001218 <chSysIntegrityCheckI+0x58>
 8001260:	2300      	movs	r3, #0
 8001262:	e7d3      	b.n	800120c <chSysIntegrityCheckI+0x4c>
 8001264:	4291      	cmp	r1, r2
 8001266:	d1e8      	bne.n	800123a <chSysIntegrityCheckI+0x7a>
 8001268:	e7ef      	b.n	800124a <chSysIntegrityCheckI+0x8a>
 800126a:	bf00      	nop
 800126c:	20000938 	.word	0x20000938

08001270 <sys3_execute>:
 8001270:	b538      	push	{r3, r4, r5, lr}
 8001272:	2420      	movs	r4, #32
 8001274:	f384 8811 	msr	BASEPRI, r4
 8001278:	2001      	movs	r0, #1
 800127a:	f7ff ffa1 	bl	80011c0 <chSysIntegrityCheckI>
 800127e:	2300      	movs	r3, #0
 8001280:	f383 8811 	msr	BASEPRI, r3
 8001284:	f080 0101 	eor.w	r1, r0, #1
 8001288:	b2c9      	uxtb	r1, r1
 800128a:	2001      	movs	r0, #1
 800128c:	f7ff fa70 	bl	8000770 <_test_assert>
 8001290:	b100      	cbz	r0, 8001294 <sys3_execute+0x24>
 8001292:	bd38      	pop	{r3, r4, r5, pc}
 8001294:	4605      	mov	r5, r0
 8001296:	f384 8811 	msr	BASEPRI, r4
 800129a:	2002      	movs	r0, #2
 800129c:	f7ff ff90 	bl	80011c0 <chSysIntegrityCheckI>
 80012a0:	f385 8811 	msr	BASEPRI, r5
 80012a4:	f080 0101 	eor.w	r1, r0, #1
 80012a8:	b2c9      	uxtb	r1, r1
 80012aa:	2002      	movs	r0, #2
 80012ac:	f7ff fa60 	bl	8000770 <_test_assert>
 80012b0:	4605      	mov	r5, r0
 80012b2:	2800      	cmp	r0, #0
 80012b4:	d1ed      	bne.n	8001292 <sys3_execute+0x22>
 80012b6:	f384 8811 	msr	BASEPRI, r4
 80012ba:	2004      	movs	r0, #4
 80012bc:	f7ff ff80 	bl	80011c0 <chSysIntegrityCheckI>
 80012c0:	f385 8811 	msr	BASEPRI, r5
 80012c4:	f080 0101 	eor.w	r1, r0, #1
 80012c8:	b2c9      	uxtb	r1, r1
 80012ca:	2003      	movs	r0, #3
 80012cc:	f7ff fa50 	bl	8000770 <_test_assert>
 80012d0:	4605      	mov	r5, r0
 80012d2:	2800      	cmp	r0, #0
 80012d4:	d1dd      	bne.n	8001292 <sys3_execute+0x22>
 80012d6:	f384 8811 	msr	BASEPRI, r4
 80012da:	2008      	movs	r0, #8
 80012dc:	f7ff ff70 	bl	80011c0 <chSysIntegrityCheckI>
 80012e0:	f385 8811 	msr	BASEPRI, r5
 80012e4:	f080 0101 	eor.w	r1, r0, #1
 80012e8:	b2c9      	uxtb	r1, r1
 80012ea:	2004      	movs	r0, #4
 80012ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80012f0:	f7ff ba3e 	b.w	8000770 <_test_assert>
	...

08001300 <BusFault_Handler>:
 8001300:	b672      	cpsid	i
 8001302:	4b02      	ldr	r3, [pc, #8]	; (800130c <BusFault_Handler+0xc>)
 8001304:	4a02      	ldr	r2, [pc, #8]	; (8001310 <BusFault_Handler+0x10>)
 8001306:	62da      	str	r2, [r3, #44]	; 0x2c
 8001308:	e7fe      	b.n	8001308 <BusFault_Handler+0x8>
 800130a:	bf00      	nop
 800130c:	20000938 	.word	0x20000938
 8001310:	08005c00 	.word	0x08005c00
	...

08001320 <bmk13_execute>:
 8001320:	b510      	push	{r4, lr}
 8001322:	482f      	ldr	r0, [pc, #188]	; (80013e0 <bmk13_execute+0xc0>)
 8001324:	4c2f      	ldr	r4, [pc, #188]	; (80013e4 <bmk13_execute+0xc4>)
 8001326:	f7ff fa93 	bl	8000850 <test_print>
 800132a:	f44f 70a8 	mov.w	r0, #336	; 0x150
 800132e:	f7ff f967 	bl	8000600 <test_printn.part.1>
 8001332:	4620      	mov	r0, r4
 8001334:	f7ff fa6c 	bl	8000810 <test_println>
 8001338:	482b      	ldr	r0, [pc, #172]	; (80013e8 <bmk13_execute+0xc8>)
 800133a:	f7ff fa89 	bl	8000850 <test_print>
 800133e:	2044      	movs	r0, #68	; 0x44
 8001340:	f7ff f95e 	bl	8000600 <test_printn.part.1>
 8001344:	4620      	mov	r0, r4
 8001346:	f7ff fa63 	bl	8000810 <test_println>
 800134a:	4828      	ldr	r0, [pc, #160]	; (80013ec <bmk13_execute+0xcc>)
 800134c:	f7ff fa80 	bl	8000850 <test_print>
 8001350:	2014      	movs	r0, #20
 8001352:	f7ff f955 	bl	8000600 <test_printn.part.1>
 8001356:	4620      	mov	r0, r4
 8001358:	f7ff fa5a 	bl	8000810 <test_println>
 800135c:	4824      	ldr	r0, [pc, #144]	; (80013f0 <bmk13_execute+0xd0>)
 800135e:	f7ff fa77 	bl	8000850 <test_print>
 8001362:	200c      	movs	r0, #12
 8001364:	f7ff f94c 	bl	8000600 <test_printn.part.1>
 8001368:	4620      	mov	r0, r4
 800136a:	f7ff fa51 	bl	8000810 <test_println>
 800136e:	4821      	ldr	r0, [pc, #132]	; (80013f4 <bmk13_execute+0xd4>)
 8001370:	f7ff fa6e 	bl	8000850 <test_print>
 8001374:	2004      	movs	r0, #4
 8001376:	f7ff f943 	bl	8000600 <test_printn.part.1>
 800137a:	4620      	mov	r0, r4
 800137c:	f7ff fa48 	bl	8000810 <test_println>
 8001380:	481d      	ldr	r0, [pc, #116]	; (80013f8 <bmk13_execute+0xd8>)
 8001382:	f7ff fa65 	bl	8000850 <test_print>
 8001386:	2014      	movs	r0, #20
 8001388:	f7ff f93a 	bl	8000600 <test_printn.part.1>
 800138c:	4620      	mov	r0, r4
 800138e:	f7ff fa3f 	bl	8000810 <test_println>
 8001392:	481a      	ldr	r0, [pc, #104]	; (80013fc <bmk13_execute+0xdc>)
 8001394:	f7ff fa5c 	bl	8000850 <test_print>
 8001398:	2010      	movs	r0, #16
 800139a:	f7ff f931 	bl	8000600 <test_printn.part.1>
 800139e:	4620      	mov	r0, r4
 80013a0:	f7ff fa36 	bl	8000810 <test_println>
 80013a4:	4816      	ldr	r0, [pc, #88]	; (8001400 <bmk13_execute+0xe0>)
 80013a6:	f7ff fa53 	bl	8000850 <test_print>
 80013aa:	2008      	movs	r0, #8
 80013ac:	f7ff f928 	bl	8000600 <test_printn.part.1>
 80013b0:	4620      	mov	r0, r4
 80013b2:	f7ff fa2d 	bl	8000810 <test_println>
 80013b6:	4813      	ldr	r0, [pc, #76]	; (8001404 <bmk13_execute+0xe4>)
 80013b8:	f7ff fa4a 	bl	8000850 <test_print>
 80013bc:	2024      	movs	r0, #36	; 0x24
 80013be:	f7ff f91f 	bl	8000600 <test_printn.part.1>
 80013c2:	4620      	mov	r0, r4
 80013c4:	f7ff fa24 	bl	8000810 <test_println>
 80013c8:	480f      	ldr	r0, [pc, #60]	; (8001408 <bmk13_execute+0xe8>)
 80013ca:	f7ff fa41 	bl	8000850 <test_print>
 80013ce:	2028      	movs	r0, #40	; 0x28
 80013d0:	f7ff f916 	bl	8000600 <test_printn.part.1>
 80013d4:	4620      	mov	r0, r4
 80013d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80013da:	f7ff ba19 	b.w	8000810 <test_println>
 80013de:	bf00      	nop
 80013e0:	08005c60 	.word	0x08005c60
 80013e4:	08005c70 	.word	0x08005c70
 80013e8:	08005c78 	.word	0x08005c78
 80013ec:	08005c88 	.word	0x08005c88
 80013f0:	08005c98 	.word	0x08005c98
 80013f4:	08005ca8 	.word	0x08005ca8
 80013f8:	08005cb8 	.word	0x08005cb8
 80013fc:	08005cc8 	.word	0x08005cc8
 8001400:	08005cd8 	.word	0x08005cd8
 8001404:	08005ce8 	.word	0x08005ce8
 8001408:	08005cf8 	.word	0x08005cf8
 800140c:	00000000 	.word	0x00000000

08001410 <chThdYield>:
 8001410:	b538      	push	{r3, r4, r5, lr}
 8001412:	2320      	movs	r3, #32
 8001414:	f383 8811 	msr	BASEPRI, r3
 8001418:	4a11      	ldr	r2, [pc, #68]	; (8001460 <chThdYield+0x50>)
 800141a:	6810      	ldr	r0, [r2, #0]
 800141c:	6994      	ldr	r4, [r2, #24]
 800141e:	6883      	ldr	r3, [r0, #8]
 8001420:	68a1      	ldr	r1, [r4, #8]
 8001422:	428b      	cmp	r3, r1
 8001424:	d203      	bcs.n	800142e <chThdYield+0x1e>
 8001426:	2300      	movs	r3, #0
 8001428:	f383 8811 	msr	BASEPRI, r3
 800142c:	bd38      	pop	{r3, r4, r5, pc}
 800142e:	6803      	ldr	r3, [r0, #0]
 8001430:	6013      	str	r3, [r2, #0]
 8001432:	605a      	str	r2, [r3, #4]
 8001434:	2501      	movs	r5, #1
 8001436:	6190      	str	r0, [r2, #24]
 8001438:	2200      	movs	r2, #0
 800143a:	7705      	strb	r5, [r0, #28]
 800143c:	7722      	strb	r2, [r4, #28]
 800143e:	e000      	b.n	8001442 <chThdYield+0x32>
 8001440:	681b      	ldr	r3, [r3, #0]
 8001442:	689a      	ldr	r2, [r3, #8]
 8001444:	4291      	cmp	r1, r2
 8001446:	d9fb      	bls.n	8001440 <chThdYield+0x30>
 8001448:	685a      	ldr	r2, [r3, #4]
 800144a:	4621      	mov	r1, r4
 800144c:	e9c4 3200 	strd	r3, r2, [r4]
 8001450:	6014      	str	r4, [r2, #0]
 8001452:	605c      	str	r4, [r3, #4]
 8001454:	f7fe ff04 	bl	8000260 <_port_switch>
 8001458:	2300      	movs	r3, #0
 800145a:	f383 8811 	msr	BASEPRI, r3
 800145e:	bd38      	pop	{r3, r4, r5, pc}
 8001460:	20000938 	.word	0x20000938
	...

08001470 <thread8>:
 8001470:	b538      	push	{r3, r4, r5, lr}
 8001472:	4d09      	ldr	r5, [pc, #36]	; (8001498 <thread8+0x28>)
 8001474:	4604      	mov	r4, r0
 8001476:	f7ff ffcb 	bl	8001410 <chThdYield>
 800147a:	f7ff ffc9 	bl	8001410 <chThdYield>
 800147e:	f7ff ffc7 	bl	8001410 <chThdYield>
 8001482:	f7ff ffc5 	bl	8001410 <chThdYield>
 8001486:	6823      	ldr	r3, [r4, #0]
 8001488:	69aa      	ldr	r2, [r5, #24]
 800148a:	3304      	adds	r3, #4
 800148c:	6023      	str	r3, [r4, #0]
 800148e:	7f53      	ldrb	r3, [r2, #29]
 8001490:	075b      	lsls	r3, r3, #29
 8001492:	d5f0      	bpl.n	8001476 <thread8+0x6>
 8001494:	bd38      	pop	{r3, r4, r5, pc}
 8001496:	bf00      	nop
 8001498:	20000938 	.word	0x20000938
 800149c:	00000000 	.word	0x00000000

080014a0 <chSchDoRescheduleAhead>:
 80014a0:	4a0d      	ldr	r2, [pc, #52]	; (80014d8 <chSchDoRescheduleAhead+0x38>)
 80014a2:	6810      	ldr	r0, [r2, #0]
 80014a4:	b430      	push	{r4, r5}
 80014a6:	6803      	ldr	r3, [r0, #0]
 80014a8:	6994      	ldr	r4, [r2, #24]
 80014aa:	6013      	str	r3, [r2, #0]
 80014ac:	68a1      	ldr	r1, [r4, #8]
 80014ae:	605a      	str	r2, [r3, #4]
 80014b0:	2501      	movs	r5, #1
 80014b2:	6190      	str	r0, [r2, #24]
 80014b4:	2200      	movs	r2, #0
 80014b6:	7705      	strb	r5, [r0, #28]
 80014b8:	7722      	strb	r2, [r4, #28]
 80014ba:	e000      	b.n	80014be <chSchDoRescheduleAhead+0x1e>
 80014bc:	681b      	ldr	r3, [r3, #0]
 80014be:	689a      	ldr	r2, [r3, #8]
 80014c0:	4291      	cmp	r1, r2
 80014c2:	d3fb      	bcc.n	80014bc <chSchDoRescheduleAhead+0x1c>
 80014c4:	685a      	ldr	r2, [r3, #4]
 80014c6:	4621      	mov	r1, r4
 80014c8:	e9c4 3200 	strd	r3, r2, [r4]
 80014cc:	6014      	str	r4, [r2, #0]
 80014ce:	605c      	str	r4, [r3, #4]
 80014d0:	bc30      	pop	{r4, r5}
 80014d2:	f7fe bec5 	b.w	8000260 <_port_switch>
 80014d6:	bf00      	nop
 80014d8:	20000938 	.word	0x20000938
 80014dc:	00000000 	.word	0x00000000

080014e0 <chSchRescheduleS>:
 80014e0:	4b04      	ldr	r3, [pc, #16]	; (80014f4 <chSchRescheduleS+0x14>)
 80014e2:	681a      	ldr	r2, [r3, #0]
 80014e4:	699b      	ldr	r3, [r3, #24]
 80014e6:	6892      	ldr	r2, [r2, #8]
 80014e8:	689b      	ldr	r3, [r3, #8]
 80014ea:	429a      	cmp	r2, r3
 80014ec:	d800      	bhi.n	80014f0 <chSchRescheduleS+0x10>
 80014ee:	4770      	bx	lr
 80014f0:	f7ff bfd6 	b.w	80014a0 <chSchDoRescheduleAhead>
 80014f4:	20000938 	.word	0x20000938
	...

08001500 <thread4.lto_priv.72>:
 8001500:	b508      	push	{r3, lr}
 8001502:	2220      	movs	r2, #32
 8001504:	f382 8811 	msr	BASEPRI, r2
 8001508:	6883      	ldr	r3, [r0, #8]
 800150a:	2b00      	cmp	r3, #0
 800150c:	dd05      	ble.n	800151a <thread4.lto_priv.72+0x1a>
 800150e:	f7ff ffe7 	bl	80014e0 <chSchRescheduleS>
 8001512:	2300      	movs	r3, #0
 8001514:	f383 8811 	msr	BASEPRI, r3
 8001518:	bd08      	pop	{r3, pc}
 800151a:	f7ff fd29 	bl	8000f70 <chSemSignalI>
 800151e:	f7ff ffdf 	bl	80014e0 <chSchRescheduleS>
 8001522:	2300      	movs	r3, #0
 8001524:	f383 8811 	msr	BASEPRI, r3
 8001528:	bd08      	pop	{r3, pc}
 800152a:	bf00      	nop
 800152c:	0000      	movs	r0, r0
	...

08001530 <chMtxUnlockAll>:
 8001530:	4a13      	ldr	r2, [pc, #76]	; (8001580 <chMtxUnlockAll+0x50>)
 8001532:	b570      	push	{r4, r5, r6, lr}
 8001534:	2320      	movs	r3, #32
 8001536:	6994      	ldr	r4, [r2, #24]
 8001538:	f383 8811 	msr	BASEPRI, r3
 800153c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800153e:	b1b3      	cbz	r3, 800156e <chMtxUnlockAll+0x3e>
 8001540:	2600      	movs	r6, #0
 8001542:	681a      	ldr	r2, [r3, #0]
 8001544:	68d9      	ldr	r1, [r3, #12]
 8001546:	63a1      	str	r1, [r4, #56]	; 0x38
 8001548:	4293      	cmp	r3, r2
 800154a:	4610      	mov	r0, r2
 800154c:	d013      	beq.n	8001576 <chMtxUnlockAll+0x46>
 800154e:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8001550:	6811      	ldr	r1, [r2, #0]
 8001552:	6019      	str	r1, [r3, #0]
 8001554:	604b      	str	r3, [r1, #4]
 8001556:	e9c3 2502 	strd	r2, r5, [r3, #8]
 800155a:	6393      	str	r3, [r2, #56]	; 0x38
 800155c:	f7ff fb98 	bl	8000c90 <chSchReadyI>
 8001560:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001562:	2b00      	cmp	r3, #0
 8001564:	d1ed      	bne.n	8001542 <chMtxUnlockAll+0x12>
 8001566:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8001568:	60a3      	str	r3, [r4, #8]
 800156a:	f7ff ffb9 	bl	80014e0 <chSchRescheduleS>
 800156e:	2300      	movs	r3, #0
 8001570:	f383 8811 	msr	BASEPRI, r3
 8001574:	bd70      	pop	{r4, r5, r6, pc}
 8001576:	609e      	str	r6, [r3, #8]
 8001578:	460b      	mov	r3, r1
 800157a:	2b00      	cmp	r3, #0
 800157c:	d1e1      	bne.n	8001542 <chMtxUnlockAll+0x12>
 800157e:	e7f2      	b.n	8001566 <chMtxUnlockAll+0x36>
 8001580:	20000938 	.word	0x20000938
	...

08001590 <chThdSetPriority>:
 8001590:	b510      	push	{r4, lr}
 8001592:	2320      	movs	r3, #32
 8001594:	f383 8811 	msr	BASEPRI, r3
 8001598:	4b08      	ldr	r3, [pc, #32]	; (80015bc <chThdSetPriority+0x2c>)
 800159a:	699b      	ldr	r3, [r3, #24]
 800159c:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800159e:	6899      	ldr	r1, [r3, #8]
 80015a0:	42a1      	cmp	r1, r4
 80015a2:	d001      	beq.n	80015a8 <chThdSetPriority+0x18>
 80015a4:	4281      	cmp	r1, r0
 80015a6:	d200      	bcs.n	80015aa <chThdSetPriority+0x1a>
 80015a8:	6098      	str	r0, [r3, #8]
 80015aa:	63d8      	str	r0, [r3, #60]	; 0x3c
 80015ac:	f7ff ff98 	bl	80014e0 <chSchRescheduleS>
 80015b0:	2300      	movs	r3, #0
 80015b2:	f383 8811 	msr	BASEPRI, r3
 80015b6:	4620      	mov	r0, r4
 80015b8:	bd10      	pop	{r4, pc}
 80015ba:	bf00      	nop
 80015bc:	20000938 	.word	0x20000938

080015c0 <thd3_execute>:
 80015c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015c2:	4e49      	ldr	r6, [pc, #292]	; (80016e8 <thd3_execute+0x128>)
 80015c4:	69b3      	ldr	r3, [r6, #24]
 80015c6:	689c      	ldr	r4, [r3, #8]
 80015c8:	1c65      	adds	r5, r4, #1
 80015ca:	4628      	mov	r0, r5
 80015cc:	f7ff ffe0 	bl	8001590 <chThdSetPriority>
 80015d0:	1b01      	subs	r1, r0, r4
 80015d2:	fab1 f181 	clz	r1, r1
 80015d6:	4607      	mov	r7, r0
 80015d8:	0949      	lsrs	r1, r1, #5
 80015da:	2001      	movs	r0, #1
 80015dc:	f7ff f8c8 	bl	8000770 <_test_assert>
 80015e0:	b100      	cbz	r0, 80015e4 <thd3_execute+0x24>
 80015e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80015e4:	69b3      	ldr	r3, [r6, #24]
 80015e6:	6899      	ldr	r1, [r3, #8]
 80015e8:	1b49      	subs	r1, r1, r5
 80015ea:	fab1 f181 	clz	r1, r1
 80015ee:	2002      	movs	r0, #2
 80015f0:	0949      	lsrs	r1, r1, #5
 80015f2:	f7ff f8bd 	bl	8000770 <_test_assert>
 80015f6:	2800      	cmp	r0, #0
 80015f8:	d1f3      	bne.n	80015e2 <thd3_execute+0x22>
 80015fa:	4638      	mov	r0, r7
 80015fc:	f7ff ffc8 	bl	8001590 <chThdSetPriority>
 8001600:	1a29      	subs	r1, r5, r0
 8001602:	fab1 f181 	clz	r1, r1
 8001606:	0949      	lsrs	r1, r1, #5
 8001608:	2003      	movs	r0, #3
 800160a:	f7ff f8b1 	bl	8000770 <_test_assert>
 800160e:	2800      	cmp	r0, #0
 8001610:	d1e7      	bne.n	80015e2 <thd3_execute+0x22>
 8001612:	69b3      	ldr	r3, [r6, #24]
 8001614:	6899      	ldr	r1, [r3, #8]
 8001616:	1b09      	subs	r1, r1, r4
 8001618:	fab1 f181 	clz	r1, r1
 800161c:	2004      	movs	r0, #4
 800161e:	0949      	lsrs	r1, r1, #5
 8001620:	f7ff f8a6 	bl	8000770 <_test_assert>
 8001624:	2800      	cmp	r0, #0
 8001626:	d1dc      	bne.n	80015e2 <thd3_execute+0x22>
 8001628:	2320      	movs	r3, #32
 800162a:	f383 8811 	msr	BASEPRI, r3
 800162e:	69b2      	ldr	r2, [r6, #24]
 8001630:	6893      	ldr	r3, [r2, #8]
 8001632:	3302      	adds	r3, #2
 8001634:	6093      	str	r3, [r2, #8]
 8001636:	f380 8811 	msr	BASEPRI, r0
 800163a:	69b3      	ldr	r3, [r6, #24]
 800163c:	6899      	ldr	r1, [r3, #8]
 800163e:	1ca7      	adds	r7, r4, #2
 8001640:	1bc9      	subs	r1, r1, r7
 8001642:	fab1 f181 	clz	r1, r1
 8001646:	0949      	lsrs	r1, r1, #5
 8001648:	2005      	movs	r0, #5
 800164a:	f7ff f891 	bl	8000770 <_test_assert>
 800164e:	2800      	cmp	r0, #0
 8001650:	d1c7      	bne.n	80015e2 <thd3_execute+0x22>
 8001652:	4628      	mov	r0, r5
 8001654:	f7ff ff9c 	bl	8001590 <chThdSetPriority>
 8001658:	1b01      	subs	r1, r0, r4
 800165a:	fab1 f181 	clz	r1, r1
 800165e:	0949      	lsrs	r1, r1, #5
 8001660:	2006      	movs	r0, #6
 8001662:	f7ff f885 	bl	8000770 <_test_assert>
 8001666:	2800      	cmp	r0, #0
 8001668:	d1bb      	bne.n	80015e2 <thd3_execute+0x22>
 800166a:	69b3      	ldr	r3, [r6, #24]
 800166c:	6899      	ldr	r1, [r3, #8]
 800166e:	1bc9      	subs	r1, r1, r7
 8001670:	fab1 f181 	clz	r1, r1
 8001674:	0949      	lsrs	r1, r1, #5
 8001676:	2007      	movs	r0, #7
 8001678:	f7ff f87a 	bl	8000770 <_test_assert>
 800167c:	2800      	cmp	r0, #0
 800167e:	d1b0      	bne.n	80015e2 <thd3_execute+0x22>
 8001680:	69b3      	ldr	r3, [r6, #24]
 8001682:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001684:	1b4f      	subs	r7, r1, r5
 8001686:	4279      	negs	r1, r7
 8001688:	4179      	adcs	r1, r7
 800168a:	2008      	movs	r0, #8
 800168c:	f7ff f870 	bl	8000770 <_test_assert>
 8001690:	2800      	cmp	r0, #0
 8001692:	d1a6      	bne.n	80015e2 <thd3_execute+0x22>
 8001694:	1ce7      	adds	r7, r4, #3
 8001696:	4638      	mov	r0, r7
 8001698:	f7ff ff7a 	bl	8001590 <chThdSetPriority>
 800169c:	1a28      	subs	r0, r5, r0
 800169e:	4241      	negs	r1, r0
 80016a0:	4141      	adcs	r1, r0
 80016a2:	2009      	movs	r0, #9
 80016a4:	f7ff f864 	bl	8000770 <_test_assert>
 80016a8:	2800      	cmp	r0, #0
 80016aa:	d19a      	bne.n	80015e2 <thd3_execute+0x22>
 80016ac:	69b3      	ldr	r3, [r6, #24]
 80016ae:	6899      	ldr	r1, [r3, #8]
 80016b0:	1bca      	subs	r2, r1, r7
 80016b2:	4251      	negs	r1, r2
 80016b4:	4151      	adcs	r1, r2
 80016b6:	200a      	movs	r0, #10
 80016b8:	f7ff f85a 	bl	8000770 <_test_assert>
 80016bc:	2800      	cmp	r0, #0
 80016be:	d190      	bne.n	80015e2 <thd3_execute+0x22>
 80016c0:	69b3      	ldr	r3, [r6, #24]
 80016c2:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80016c4:	1bcb      	subs	r3, r1, r7
 80016c6:	4259      	negs	r1, r3
 80016c8:	4159      	adcs	r1, r3
 80016ca:	200b      	movs	r0, #11
 80016cc:	f7ff f850 	bl	8000770 <_test_assert>
 80016d0:	2800      	cmp	r0, #0
 80016d2:	d186      	bne.n	80015e2 <thd3_execute+0x22>
 80016d4:	2320      	movs	r3, #32
 80016d6:	f383 8811 	msr	BASEPRI, r3
 80016da:	69b3      	ldr	r3, [r6, #24]
 80016dc:	609c      	str	r4, [r3, #8]
 80016de:	63dc      	str	r4, [r3, #60]	; 0x3c
 80016e0:	f380 8811 	msr	BASEPRI, r0
 80016e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80016e6:	bf00      	nop
 80016e8:	20000938 	.word	0x20000938
 80016ec:	00000000 	.word	0x00000000

080016f0 <chSysRestoreStatusX.part.3>:
 80016f0:	b510      	push	{r4, lr}
 80016f2:	f3ef 8405 	mrs	r4, IPSR
 80016f6:	f3c4 0408 	ubfx	r4, r4, #0, #9
 80016fa:	b11c      	cbz	r4, 8001704 <chSysRestoreStatusX.part.3+0x14>
 80016fc:	2300      	movs	r3, #0
 80016fe:	f383 8811 	msr	BASEPRI, r3
 8001702:	bd10      	pop	{r4, pc}
 8001704:	f7ff feec 	bl	80014e0 <chSchRescheduleS>
 8001708:	f384 8811 	msr	BASEPRI, r4
 800170c:	bd10      	pop	{r4, pc}
 800170e:	bf00      	nop

08001710 <vtcb>:
 8001710:	b508      	push	{r3, lr}
 8001712:	2320      	movs	r3, #32
 8001714:	f383 8811 	msr	BASEPRI, r3
 8001718:	2200      	movs	r2, #0
 800171a:	f382 8811 	msr	BASEPRI, r2
 800171e:	f383 8811 	msr	BASEPRI, r3
 8001722:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8001726:	b91b      	cbnz	r3, 8001730 <vtcb+0x20>
 8001728:	f7ff fd42 	bl	80011b0 <chSysGetStatusAndLockX.part.2>
 800172c:	f7ff ffe0 	bl	80016f0 <chSysRestoreStatusX.part.3>
 8001730:	2300      	movs	r3, #0
 8001732:	f383 8811 	msr	BASEPRI, r3
 8001736:	bd08      	pop	{r3, pc}
	...

08001740 <chSchWakeupS>:
 8001740:	4b14      	ldr	r3, [pc, #80]	; (8001794 <chSchWakeupS+0x54>)
 8001742:	b470      	push	{r4, r5, r6}
 8001744:	699e      	ldr	r6, [r3, #24]
 8001746:	6885      	ldr	r5, [r0, #8]
 8001748:	4604      	mov	r4, r0
 800174a:	68b0      	ldr	r0, [r6, #8]
 800174c:	6221      	str	r1, [r4, #32]
 800174e:	4285      	cmp	r5, r0
 8001750:	f04f 0200 	mov.w	r2, #0
 8001754:	d80b      	bhi.n	800176e <chSchWakeupS+0x2e>
 8001756:	7722      	strb	r2, [r4, #28]
 8001758:	681b      	ldr	r3, [r3, #0]
 800175a:	689a      	ldr	r2, [r3, #8]
 800175c:	4295      	cmp	r5, r2
 800175e:	d9fb      	bls.n	8001758 <chSchWakeupS+0x18>
 8001760:	685a      	ldr	r2, [r3, #4]
 8001762:	e9c4 3200 	strd	r3, r2, [r4]
 8001766:	6014      	str	r4, [r2, #0]
 8001768:	605c      	str	r4, [r3, #4]
 800176a:	bc70      	pop	{r4, r5, r6}
 800176c:	4770      	bx	lr
 800176e:	7732      	strb	r2, [r6, #28]
 8001770:	461a      	mov	r2, r3
 8001772:	6812      	ldr	r2, [r2, #0]
 8001774:	6891      	ldr	r1, [r2, #8]
 8001776:	4288      	cmp	r0, r1
 8001778:	d9fb      	bls.n	8001772 <chSchWakeupS+0x32>
 800177a:	6851      	ldr	r1, [r2, #4]
 800177c:	6071      	str	r1, [r6, #4]
 800177e:	2001      	movs	r0, #1
 8001780:	6032      	str	r2, [r6, #0]
 8001782:	600e      	str	r6, [r1, #0]
 8001784:	6056      	str	r6, [r2, #4]
 8001786:	7720      	strb	r0, [r4, #28]
 8001788:	4631      	mov	r1, r6
 800178a:	4620      	mov	r0, r4
 800178c:	619c      	str	r4, [r3, #24]
 800178e:	bc70      	pop	{r4, r5, r6}
 8001790:	f7fe bd66 	b.w	8000260 <_port_switch>
 8001794:	20000938 	.word	0x20000938
	...

080017a0 <chThdCreateFromMemoryPool.constprop.51>:
 80017a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80017a4:	4e1d      	ldr	r6, [pc, #116]	; (800181c <chThdCreateFromMemoryPool.constprop.51+0x7c>)
 80017a6:	4607      	mov	r7, r0
 80017a8:	4630      	mov	r0, r6
 80017aa:	4688      	mov	r8, r1
 80017ac:	f7ff f8f8 	bl	80009a0 <chPoolAlloc>
 80017b0:	4604      	mov	r4, r0
 80017b2:	b380      	cbz	r0, 8001816 <chThdCreateFromMemoryPool.constprop.51+0x76>
 80017b4:	2320      	movs	r3, #32
 80017b6:	f383 8811 	msr	BASEPRI, r3
 80017ba:	6873      	ldr	r3, [r6, #4]
 80017bc:	4a18      	ldr	r2, [pc, #96]	; (8001820 <chThdCreateFromMemoryPool.constprop.51+0x80>)
 80017be:	4919      	ldr	r1, [pc, #100]	; (8001824 <chThdCreateFromMemoryPool.constprop.51+0x84>)
 80017c0:	3b24      	subs	r3, #36	; 0x24
 80017c2:	18c5      	adds	r5, r0, r3
 80017c4:	60c5      	str	r5, [r0, #12]
 80017c6:	50c2      	str	r2, [r0, r3]
 80017c8:	4a17      	ldr	r2, [pc, #92]	; (8001828 <chThdCreateFromMemoryPool.constprop.51+0x88>)
 80017ca:	f8c5 8004 	str.w	r8, [r5, #4]
 80017ce:	6229      	str	r1, [r5, #32]
 80017d0:	6102      	str	r2, [r0, #16]
 80017d2:	f8d2 e014 	ldr.w	lr, [r2, #20]
 80017d6:	f8c0 e014 	str.w	lr, [r0, #20]
 80017da:	2301      	movs	r3, #1
 80017dc:	f100 0124 	add.w	r1, r0, #36	; 0x24
 80017e0:	f04f 0c02 	mov.w	ip, #2
 80017e4:	2500      	movs	r5, #0
 80017e6:	7783      	strb	r3, [r0, #30]
 80017e8:	f100 0328 	add.w	r3, r0, #40	; 0x28
 80017ec:	6087      	str	r7, [r0, #8]
 80017ee:	63c7      	str	r7, [r0, #60]	; 0x3c
 80017f0:	f880 c01c 	strb.w	ip, [r0, #28]
 80017f4:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 80017f8:	6185      	str	r5, [r0, #24]
 80017fa:	f8ce 0010 	str.w	r0, [lr, #16]
 80017fe:	6241      	str	r1, [r0, #36]	; 0x24
 8001800:	f880 c01d 	strb.w	ip, [r0, #29]
 8001804:	6406      	str	r6, [r0, #64]	; 0x40
 8001806:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800180a:	4629      	mov	r1, r5
 800180c:	6150      	str	r0, [r2, #20]
 800180e:	f7ff ff97 	bl	8001740 <chSchWakeupS>
 8001812:	f385 8811 	msr	BASEPRI, r5
 8001816:	4620      	mov	r0, r4
 8001818:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800181c:	20000b10 	.word	0x20000b10
 8001820:	08000801 	.word	0x08000801
 8001824:	08000271 	.word	0x08000271
 8001828:	20000938 	.word	0x20000938
 800182c:	00000000 	.word	0x00000000

08001830 <chCondSignal.constprop.43>:
 8001830:	b508      	push	{r3, lr}
 8001832:	2320      	movs	r3, #32
 8001834:	f383 8811 	msr	BASEPRI, r3
 8001838:	4b06      	ldr	r3, [pc, #24]	; (8001854 <chCondSignal.constprop.43+0x24>)
 800183a:	6818      	ldr	r0, [r3, #0]
 800183c:	4298      	cmp	r0, r3
 800183e:	d005      	beq.n	800184c <chCondSignal.constprop.43+0x1c>
 8001840:	6802      	ldr	r2, [r0, #0]
 8001842:	601a      	str	r2, [r3, #0]
 8001844:	6053      	str	r3, [r2, #4]
 8001846:	2100      	movs	r1, #0
 8001848:	f7ff ff7a 	bl	8001740 <chSchWakeupS>
 800184c:	2300      	movs	r3, #0
 800184e:	f383 8811 	msr	BASEPRI, r3
 8001852:	bd08      	pop	{r3, pc}
 8001854:	20000800 	.word	0x20000800
	...

08001860 <chMtxUnlock>:
 8001860:	4b16      	ldr	r3, [pc, #88]	; (80018bc <chMtxUnlock+0x5c>)
 8001862:	b570      	push	{r4, r5, r6, lr}
 8001864:	699d      	ldr	r5, [r3, #24]
 8001866:	2320      	movs	r3, #32
 8001868:	f383 8811 	msr	BASEPRI, r3
 800186c:	6804      	ldr	r4, [r0, #0]
 800186e:	68c3      	ldr	r3, [r0, #12]
 8001870:	63ab      	str	r3, [r5, #56]	; 0x38
 8001872:	4284      	cmp	r4, r0
 8001874:	d01c      	beq.n	80018b0 <chMtxUnlock+0x50>
 8001876:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8001878:	b14b      	cbz	r3, 800188e <chMtxUnlock+0x2e>
 800187a:	681a      	ldr	r2, [r3, #0]
 800187c:	4293      	cmp	r3, r2
 800187e:	d003      	beq.n	8001888 <chMtxUnlock+0x28>
 8001880:	6892      	ldr	r2, [r2, #8]
 8001882:	4291      	cmp	r1, r2
 8001884:	bf38      	it	cc
 8001886:	4611      	movcc	r1, r2
 8001888:	68db      	ldr	r3, [r3, #12]
 800188a:	2b00      	cmp	r3, #0
 800188c:	d1f5      	bne.n	800187a <chMtxUnlock+0x1a>
 800188e:	4603      	mov	r3, r0
 8001890:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8001892:	6822      	ldr	r2, [r4, #0]
 8001894:	60a9      	str	r1, [r5, #8]
 8001896:	4620      	mov	r0, r4
 8001898:	601a      	str	r2, [r3, #0]
 800189a:	2100      	movs	r1, #0
 800189c:	6053      	str	r3, [r2, #4]
 800189e:	e9c3 4602 	strd	r4, r6, [r3, #8]
 80018a2:	63a3      	str	r3, [r4, #56]	; 0x38
 80018a4:	f7ff ff4c 	bl	8001740 <chSchWakeupS>
 80018a8:	2300      	movs	r3, #0
 80018aa:	f383 8811 	msr	BASEPRI, r3
 80018ae:	bd70      	pop	{r4, r5, r6, pc}
 80018b0:	2300      	movs	r3, #0
 80018b2:	60a3      	str	r3, [r4, #8]
 80018b4:	2300      	movs	r3, #0
 80018b6:	f383 8811 	msr	BASEPRI, r3
 80018ba:	bd70      	pop	{r4, r5, r6, pc}
 80018bc:	20000938 	.word	0x20000938

080018c0 <chSemSignal>:
 80018c0:	b508      	push	{r3, lr}
 80018c2:	2320      	movs	r3, #32
 80018c4:	f383 8811 	msr	BASEPRI, r3
 80018c8:	6883      	ldr	r3, [r0, #8]
 80018ca:	3301      	adds	r3, #1
 80018cc:	2b00      	cmp	r3, #0
 80018ce:	6083      	str	r3, [r0, #8]
 80018d0:	dd03      	ble.n	80018da <chSemSignal+0x1a>
 80018d2:	2300      	movs	r3, #0
 80018d4:	f383 8811 	msr	BASEPRI, r3
 80018d8:	bd08      	pop	{r3, pc}
 80018da:	4603      	mov	r3, r0
 80018dc:	6800      	ldr	r0, [r0, #0]
 80018de:	6802      	ldr	r2, [r0, #0]
 80018e0:	601a      	str	r2, [r3, #0]
 80018e2:	2100      	movs	r1, #0
 80018e4:	6053      	str	r3, [r2, #4]
 80018e6:	f7ff ff2b 	bl	8001740 <chSchWakeupS>
 80018ea:	2300      	movs	r3, #0
 80018ec:	f383 8811 	msr	BASEPRI, r3
 80018f0:	bd08      	pop	{r3, pc}
 80018f2:	bf00      	nop
	...

08001900 <chThdCreateStatic>:
 8001900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001902:	9e06      	ldr	r6, [sp, #24]
 8001904:	4604      	mov	r4, r0
 8001906:	2520      	movs	r5, #32
 8001908:	f385 8811 	msr	BASEPRI, r5
 800190c:	3924      	subs	r1, #36	; 0x24
 800190e:	1845      	adds	r5, r0, r1
 8001910:	60c5      	str	r5, [r0, #12]
 8001912:	4f12      	ldr	r7, [pc, #72]	; (800195c <chThdCreateStatic+0x5c>)
 8001914:	5043      	str	r3, [r0, r1]
 8001916:	4b12      	ldr	r3, [pc, #72]	; (8001960 <chThdCreateStatic+0x60>)
 8001918:	606e      	str	r6, [r5, #4]
 800191a:	622f      	str	r7, [r5, #32]
 800191c:	6103      	str	r3, [r0, #16]
 800191e:	6959      	ldr	r1, [r3, #20]
 8001920:	63c2      	str	r2, [r0, #60]	; 0x3c
 8001922:	6082      	str	r2, [r0, #8]
 8001924:	2500      	movs	r5, #0
 8001926:	f100 0228 	add.w	r2, r0, #40	; 0x28
 800192a:	f04f 0c02 	mov.w	ip, #2
 800192e:	f100 0624 	add.w	r6, r0, #36	; 0x24
 8001932:	2701      	movs	r7, #1
 8001934:	6141      	str	r1, [r0, #20]
 8001936:	f8a0 c01c 	strh.w	ip, [r0, #28]
 800193a:	7787      	strb	r7, [r0, #30]
 800193c:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8001940:	6185      	str	r5, [r0, #24]
 8001942:	6108      	str	r0, [r1, #16]
 8001944:	4629      	mov	r1, r5
 8001946:	e9c0 6209 	strd	r6, r2, [r0, #36]	; 0x24
 800194a:	62c2      	str	r2, [r0, #44]	; 0x2c
 800194c:	6158      	str	r0, [r3, #20]
 800194e:	f7ff fef7 	bl	8001740 <chSchWakeupS>
 8001952:	f385 8811 	msr	BASEPRI, r5
 8001956:	4620      	mov	r0, r4
 8001958:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800195a:	bf00      	nop
 800195c:	08000271 	.word	0x08000271
 8001960:	20000938 	.word	0x20000938
	...

08001970 <chSchGoSleepS>:
 8001970:	4b07      	ldr	r3, [pc, #28]	; (8001990 <chSchGoSleepS+0x20>)
 8001972:	6999      	ldr	r1, [r3, #24]
 8001974:	681a      	ldr	r2, [r3, #0]
 8001976:	b410      	push	{r4}
 8001978:	7708      	strb	r0, [r1, #28]
 800197a:	6810      	ldr	r0, [r2, #0]
 800197c:	6018      	str	r0, [r3, #0]
 800197e:	2401      	movs	r4, #1
 8001980:	6043      	str	r3, [r0, #4]
 8001982:	7714      	strb	r4, [r2, #28]
 8001984:	4610      	mov	r0, r2
 8001986:	bc10      	pop	{r4}
 8001988:	619a      	str	r2, [r3, #24]
 800198a:	f7fe bc69 	b.w	8000260 <_port_switch>
 800198e:	bf00      	nop
 8001990:	20000938 	.word	0x20000938
	...

080019a0 <chSemSignalWait.constprop.47>:
 80019a0:	b538      	push	{r3, r4, r5, lr}
 80019a2:	2320      	movs	r3, #32
 80019a4:	f383 8811 	msr	BASEPRI, r3
 80019a8:	4c15      	ldr	r4, [pc, #84]	; (8001a00 <chSemSignalWait.constprop.47+0x60>)
 80019aa:	68a3      	ldr	r3, [r4, #8]
 80019ac:	3301      	adds	r3, #1
 80019ae:	2b00      	cmp	r3, #0
 80019b0:	60a3      	str	r3, [r4, #8]
 80019b2:	dd1a      	ble.n	80019ea <chSemSignalWait.constprop.47+0x4a>
 80019b4:	3b01      	subs	r3, #1
 80019b6:	2b00      	cmp	r3, #0
 80019b8:	60a3      	str	r3, [r4, #8]
 80019ba:	db06      	blt.n	80019ca <chSemSignalWait.constprop.47+0x2a>
 80019bc:	f7ff fd90 	bl	80014e0 <chSchRescheduleS>
 80019c0:	2000      	movs	r0, #0
 80019c2:	2300      	movs	r3, #0
 80019c4:	f383 8811 	msr	BASEPRI, r3
 80019c8:	bd38      	pop	{r3, r4, r5, pc}
 80019ca:	4a0e      	ldr	r2, [pc, #56]	; (8001a04 <chSemSignalWait.constprop.47+0x64>)
 80019cc:	6863      	ldr	r3, [r4, #4]
 80019ce:	6995      	ldr	r5, [r2, #24]
 80019d0:	2005      	movs	r0, #5
 80019d2:	e9c5 4300 	strd	r4, r3, [r5]
 80019d6:	601d      	str	r5, [r3, #0]
 80019d8:	622c      	str	r4, [r5, #32]
 80019da:	6065      	str	r5, [r4, #4]
 80019dc:	f7ff ffc8 	bl	8001970 <chSchGoSleepS>
 80019e0:	6a28      	ldr	r0, [r5, #32]
 80019e2:	2300      	movs	r3, #0
 80019e4:	f383 8811 	msr	BASEPRI, r3
 80019e8:	bd38      	pop	{r3, r4, r5, pc}
 80019ea:	6820      	ldr	r0, [r4, #0]
 80019ec:	6803      	ldr	r3, [r0, #0]
 80019ee:	6023      	str	r3, [r4, #0]
 80019f0:	605c      	str	r4, [r3, #4]
 80019f2:	f7ff f94d 	bl	8000c90 <chSchReadyI>
 80019f6:	2200      	movs	r2, #0
 80019f8:	68a3      	ldr	r3, [r4, #8]
 80019fa:	6202      	str	r2, [r0, #32]
 80019fc:	e7da      	b.n	80019b4 <chSemSignalWait.constprop.47+0x14>
 80019fe:	bf00      	nop
 8001a00:	200008ac 	.word	0x200008ac
 8001a04:	20000938 	.word	0x20000938
	...

08001a10 <sem3_execute>:
 8001a10:	b510      	push	{r4, lr}
 8001a12:	4a1e      	ldr	r2, [pc, #120]	; (8001a8c <sem3_execute+0x7c>)
 8001a14:	4b1e      	ldr	r3, [pc, #120]	; (8001a90 <sem3_execute+0x80>)
 8001a16:	6992      	ldr	r2, [r2, #24]
 8001a18:	481e      	ldr	r0, [pc, #120]	; (8001a94 <sem3_execute+0x84>)
 8001a1a:	6892      	ldr	r2, [r2, #8]
 8001a1c:	4c1e      	ldr	r4, [pc, #120]	; (8001a98 <sem3_execute+0x88>)
 8001a1e:	b082      	sub	sp, #8
 8001a20:	2100      	movs	r1, #0
 8001a22:	3201      	adds	r2, #1
 8001a24:	9100      	str	r1, [sp, #0]
 8001a26:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8001a2a:	f7ff ff69 	bl	8001900 <chThdCreateStatic>
 8001a2e:	4b1b      	ldr	r3, [pc, #108]	; (8001a9c <sem3_execute+0x8c>)
 8001a30:	6018      	str	r0, [r3, #0]
 8001a32:	f7ff ffb5 	bl	80019a0 <chSemSignalWait.constprop.47>
 8001a36:	6821      	ldr	r1, [r4, #0]
 8001a38:	1b09      	subs	r1, r1, r4
 8001a3a:	fab1 f181 	clz	r1, r1
 8001a3e:	2001      	movs	r0, #1
 8001a40:	0949      	lsrs	r1, r1, #5
 8001a42:	f7fe fe95 	bl	8000770 <_test_assert>
 8001a46:	b108      	cbz	r0, 8001a4c <sem3_execute+0x3c>
 8001a48:	b002      	add	sp, #8
 8001a4a:	bd10      	pop	{r4, pc}
 8001a4c:	68a1      	ldr	r1, [r4, #8]
 8001a4e:	fab1 f181 	clz	r1, r1
 8001a52:	0949      	lsrs	r1, r1, #5
 8001a54:	2002      	movs	r0, #2
 8001a56:	f7fe fe8b 	bl	8000770 <_test_assert>
 8001a5a:	2800      	cmp	r0, #0
 8001a5c:	d1f4      	bne.n	8001a48 <sem3_execute+0x38>
 8001a5e:	f7ff ff9f 	bl	80019a0 <chSemSignalWait.constprop.47>
 8001a62:	6821      	ldr	r1, [r4, #0]
 8001a64:	1b09      	subs	r1, r1, r4
 8001a66:	fab1 f181 	clz	r1, r1
 8001a6a:	2003      	movs	r0, #3
 8001a6c:	0949      	lsrs	r1, r1, #5
 8001a6e:	f7fe fe7f 	bl	8000770 <_test_assert>
 8001a72:	2800      	cmp	r0, #0
 8001a74:	d1e8      	bne.n	8001a48 <sem3_execute+0x38>
 8001a76:	68a1      	ldr	r1, [r4, #8]
 8001a78:	fab1 f181 	clz	r1, r1
 8001a7c:	0949      	lsrs	r1, r1, #5
 8001a7e:	2004      	movs	r0, #4
 8001a80:	b002      	add	sp, #8
 8001a82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001a86:	f7fe be73 	b.w	8000770 <_test_assert>
 8001a8a:	bf00      	nop
 8001a8c:	20000938 	.word	0x20000938
 8001a90:	08003911 	.word	0x08003911
 8001a94:	20000b40 	.word	0x20000b40
 8001a98:	200008ac 	.word	0x200008ac
 8001a9c:	200011d4 	.word	0x200011d4

08001aa0 <chEvtWaitOne.constprop.31>:
 8001aa0:	4a0b      	ldr	r2, [pc, #44]	; (8001ad0 <chEvtWaitOne.constprop.31+0x30>)
 8001aa2:	b510      	push	{r4, lr}
 8001aa4:	2320      	movs	r3, #32
 8001aa6:	6994      	ldr	r4, [r2, #24]
 8001aa8:	f383 8811 	msr	BASEPRI, r3
 8001aac:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001aae:	b933      	cbnz	r3, 8001abe <chEvtWaitOne.constprop.31+0x1e>
 8001ab0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001ab4:	6223      	str	r3, [r4, #32]
 8001ab6:	200a      	movs	r0, #10
 8001ab8:	f7ff ff5a 	bl	8001970 <chSchGoSleepS>
 8001abc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001abe:	4258      	negs	r0, r3
 8001ac0:	4018      	ands	r0, r3
 8001ac2:	ea23 0300 	bic.w	r3, r3, r0
 8001ac6:	6363      	str	r3, [r4, #52]	; 0x34
 8001ac8:	2300      	movs	r3, #0
 8001aca:	f383 8811 	msr	BASEPRI, r3
 8001ace:	bd10      	pop	{r4, pc}
 8001ad0:	20000938 	.word	0x20000938
	...

08001ae0 <chEvtWaitAny.constprop.30>:
 8001ae0:	4a09      	ldr	r2, [pc, #36]	; (8001b08 <chEvtWaitAny.constprop.30+0x28>)
 8001ae2:	b510      	push	{r4, lr}
 8001ae4:	2320      	movs	r3, #32
 8001ae6:	6994      	ldr	r4, [r2, #24]
 8001ae8:	f383 8811 	msr	BASEPRI, r3
 8001aec:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001aee:	b930      	cbnz	r0, 8001afe <chEvtWaitAny.constprop.30+0x1e>
 8001af0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001af4:	200a      	movs	r0, #10
 8001af6:	6223      	str	r3, [r4, #32]
 8001af8:	f7ff ff3a 	bl	8001970 <chSchGoSleepS>
 8001afc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001afe:	2300      	movs	r3, #0
 8001b00:	6363      	str	r3, [r4, #52]	; 0x34
 8001b02:	f383 8811 	msr	BASEPRI, r3
 8001b06:	bd10      	pop	{r4, pc}
 8001b08:	20000938 	.word	0x20000938
 8001b0c:	00000000 	.word	0x00000000

08001b10 <thread4.lto_priv.73>:
 8001b10:	4a07      	ldr	r2, [pc, #28]	; (8001b30 <thread4.lto_priv.73+0x20>)
 8001b12:	b510      	push	{r4, lr}
 8001b14:	2320      	movs	r3, #32
 8001b16:	6994      	ldr	r4, [r2, #24]
 8001b18:	f383 8811 	msr	BASEPRI, r3
 8001b1c:	2003      	movs	r0, #3
 8001b1e:	f7ff ff27 	bl	8001970 <chSchGoSleepS>
 8001b22:	6a23      	ldr	r3, [r4, #32]
 8001b24:	2b00      	cmp	r3, #0
 8001b26:	d0f9      	beq.n	8001b1c <thread4.lto_priv.73+0xc>
 8001b28:	2300      	movs	r3, #0
 8001b2a:	f383 8811 	msr	BASEPRI, r3
 8001b2e:	bd10      	pop	{r4, pc}
 8001b30:	20000938 	.word	0x20000938
	...

08001b40 <chSchGoSleepTimeoutS>:
 8001b40:	b530      	push	{r4, r5, lr}
 8001b42:	1c4b      	adds	r3, r1, #1
 8001b44:	b087      	sub	sp, #28
 8001b46:	d012      	beq.n	8001b6e <chSchGoSleepTimeoutS+0x2e>
 8001b48:	4c0c      	ldr	r4, [pc, #48]	; (8001b7c <chSchGoSleepTimeoutS+0x3c>)
 8001b4a:	4a0d      	ldr	r2, [pc, #52]	; (8001b80 <chSchGoSleepTimeoutS+0x40>)
 8001b4c:	69a3      	ldr	r3, [r4, #24]
 8001b4e:	4605      	mov	r5, r0
 8001b50:	a801      	add	r0, sp, #4
 8001b52:	f7ff facd 	bl	80010f0 <chVTDoSetI>
 8001b56:	4628      	mov	r0, r5
 8001b58:	f7ff ff0a 	bl	8001970 <chSchGoSleepS>
 8001b5c:	9b04      	ldr	r3, [sp, #16]
 8001b5e:	b113      	cbz	r3, 8001b66 <chSchGoSleepTimeoutS+0x26>
 8001b60:	a801      	add	r0, sp, #4
 8001b62:	f7ff fa8d 	bl	8001080 <chVTDoResetI>
 8001b66:	69a3      	ldr	r3, [r4, #24]
 8001b68:	6a18      	ldr	r0, [r3, #32]
 8001b6a:	b007      	add	sp, #28
 8001b6c:	bd30      	pop	{r4, r5, pc}
 8001b6e:	4c03      	ldr	r4, [pc, #12]	; (8001b7c <chSchGoSleepTimeoutS+0x3c>)
 8001b70:	f7ff fefe 	bl	8001970 <chSchGoSleepS>
 8001b74:	69a3      	ldr	r3, [r4, #24]
 8001b76:	6a18      	ldr	r0, [r3, #32]
 8001b78:	b007      	add	sp, #28
 8001b7a:	bd30      	pop	{r4, r5, pc}
 8001b7c:	20000938 	.word	0x20000938
 8001b80:	08000c21 	.word	0x08000c21
	...

08001b90 <chSemWaitTimeout.constprop.49>:
 8001b90:	2320      	movs	r3, #32
 8001b92:	f383 8811 	msr	BASEPRI, r3
 8001b96:	4b10      	ldr	r3, [pc, #64]	; (8001bd8 <chSemWaitTimeout.constprop.49+0x48>)
 8001b98:	6899      	ldr	r1, [r3, #8]
 8001b9a:	1e4a      	subs	r2, r1, #1
 8001b9c:	2a00      	cmp	r2, #0
 8001b9e:	609a      	str	r2, [r3, #8]
 8001ba0:	db04      	blt.n	8001bac <chSemWaitTimeout.constprop.49+0x1c>
 8001ba2:	2000      	movs	r0, #0
 8001ba4:	2300      	movs	r3, #0
 8001ba6:	f383 8811 	msr	BASEPRI, r3
 8001baa:	4770      	bx	lr
 8001bac:	b180      	cbz	r0, 8001bd0 <chSemWaitTimeout.constprop.49+0x40>
 8001bae:	4a0b      	ldr	r2, [pc, #44]	; (8001bdc <chSemWaitTimeout.constprop.49+0x4c>)
 8001bb0:	b510      	push	{r4, lr}
 8001bb2:	6992      	ldr	r2, [r2, #24]
 8001bb4:	685c      	ldr	r4, [r3, #4]
 8001bb6:	6213      	str	r3, [r2, #32]
 8001bb8:	e9c2 3400 	strd	r3, r4, [r2]
 8001bbc:	4601      	mov	r1, r0
 8001bbe:	6022      	str	r2, [r4, #0]
 8001bc0:	2005      	movs	r0, #5
 8001bc2:	605a      	str	r2, [r3, #4]
 8001bc4:	f7ff ffbc 	bl	8001b40 <chSchGoSleepTimeoutS>
 8001bc8:	2300      	movs	r3, #0
 8001bca:	f383 8811 	msr	BASEPRI, r3
 8001bce:	bd10      	pop	{r4, pc}
 8001bd0:	6099      	str	r1, [r3, #8]
 8001bd2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001bd6:	e7e5      	b.n	8001ba4 <chSemWaitTimeout.constprop.49+0x14>
 8001bd8:	200008ac 	.word	0x200008ac
 8001bdc:	20000938 	.word	0x20000938

08001be0 <evt3_execute>:
 8001be0:	b570      	push	{r4, r5, r6, lr}
 8001be2:	4c55      	ldr	r4, [pc, #340]	; (8001d38 <evt3_execute+0x158>)
 8001be4:	2320      	movs	r3, #32
 8001be6:	69a2      	ldr	r2, [r4, #24]
 8001be8:	f383 8811 	msr	BASEPRI, r3
 8001bec:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001bee:	b93b      	cbnz	r3, 8001c00 <evt3_execute+0x20>
 8001bf0:	f383 8811 	msr	BASEPRI, r3
 8001bf4:	2101      	movs	r1, #1
 8001bf6:	2001      	movs	r0, #1
 8001bf8:	f7fe fdba 	bl	8000770 <_test_assert>
 8001bfc:	b180      	cbz	r0, 8001c20 <evt3_execute+0x40>
 8001bfe:	bd70      	pop	{r4, r5, r6, pc}
 8001c00:	4259      	negs	r1, r3
 8001c02:	4019      	ands	r1, r3
 8001c04:	ea23 0301 	bic.w	r3, r3, r1
 8001c08:	6353      	str	r3, [r2, #52]	; 0x34
 8001c0a:	2300      	movs	r3, #0
 8001c0c:	f383 8811 	msr	BASEPRI, r3
 8001c10:	fab1 f181 	clz	r1, r1
 8001c14:	0949      	lsrs	r1, r1, #5
 8001c16:	2001      	movs	r0, #1
 8001c18:	f7fe fdaa 	bl	8000770 <_test_assert>
 8001c1c:	2800      	cmp	r0, #0
 8001c1e:	d1ee      	bne.n	8001bfe <evt3_execute+0x1e>
 8001c20:	69a3      	ldr	r3, [r4, #24]
 8001c22:	2220      	movs	r2, #32
 8001c24:	f382 8811 	msr	BASEPRI, r2
 8001c28:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001c2a:	2a00      	cmp	r2, #0
 8001c2c:	d06f      	beq.n	8001d0e <evt3_execute+0x12e>
 8001c2e:	6358      	str	r0, [r3, #52]	; 0x34
 8001c30:	f380 8811 	msr	BASEPRI, r0
 8001c34:	4601      	mov	r1, r0
 8001c36:	2002      	movs	r0, #2
 8001c38:	f7fe fd9a 	bl	8000770 <_test_assert>
 8001c3c:	2800      	cmp	r0, #0
 8001c3e:	d1de      	bne.n	8001bfe <evt3_execute+0x1e>
 8001c40:	69a3      	ldr	r3, [r4, #24]
 8001c42:	2220      	movs	r2, #32
 8001c44:	f382 8811 	msr	BASEPRI, r2
 8001c48:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001c4a:	3201      	adds	r2, #1
 8001c4c:	d063      	beq.n	8001d16 <evt3_execute+0x136>
 8001c4e:	f380 8811 	msr	BASEPRI, r0
 8001c52:	2001      	movs	r0, #1
 8001c54:	4601      	mov	r1, r0
 8001c56:	2003      	movs	r0, #3
 8001c58:	f7fe fd8a 	bl	8000770 <_test_assert>
 8001c5c:	2800      	cmp	r0, #0
 8001c5e:	d1ce      	bne.n	8001bfe <evt3_execute+0x1e>
 8001c60:	69a6      	ldr	r6, [r4, #24]
 8001c62:	2320      	movs	r3, #32
 8001c64:	f383 8811 	msr	BASEPRI, r3
 8001c68:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001c6a:	b94d      	cbnz	r5, 8001c80 <evt3_execute+0xa0>
 8001c6c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001c70:	210a      	movs	r1, #10
 8001c72:	6233      	str	r3, [r6, #32]
 8001c74:	4608      	mov	r0, r1
 8001c76:	f7ff ff63 	bl	8001b40 <chSchGoSleepTimeoutS>
 8001c7a:	2800      	cmp	r0, #0
 8001c7c:	db4f      	blt.n	8001d1e <evt3_execute+0x13e>
 8001c7e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001c80:	4269      	negs	r1, r5
 8001c82:	4029      	ands	r1, r5
 8001c84:	ea25 0501 	bic.w	r5, r5, r1
 8001c88:	6375      	str	r5, [r6, #52]	; 0x34
 8001c8a:	2300      	movs	r3, #0
 8001c8c:	f383 8811 	msr	BASEPRI, r3
 8001c90:	fab1 f181 	clz	r1, r1
 8001c94:	0949      	lsrs	r1, r1, #5
 8001c96:	2004      	movs	r0, #4
 8001c98:	f7fe fd6a 	bl	8000770 <_test_assert>
 8001c9c:	2800      	cmp	r0, #0
 8001c9e:	d1ae      	bne.n	8001bfe <evt3_execute+0x1e>
 8001ca0:	69a6      	ldr	r6, [r4, #24]
 8001ca2:	2320      	movs	r3, #32
 8001ca4:	f383 8811 	msr	BASEPRI, r3
 8001ca8:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001caa:	b94d      	cbnz	r5, 8001cc0 <evt3_execute+0xe0>
 8001cac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001cb0:	210a      	movs	r1, #10
 8001cb2:	6233      	str	r3, [r6, #32]
 8001cb4:	4608      	mov	r0, r1
 8001cb6:	f7ff ff43 	bl	8001b40 <chSchGoSleepTimeoutS>
 8001cba:	2800      	cmp	r0, #0
 8001cbc:	db33      	blt.n	8001d26 <evt3_execute+0x146>
 8001cbe:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001cc0:	2300      	movs	r3, #0
 8001cc2:	6373      	str	r3, [r6, #52]	; 0x34
 8001cc4:	f383 8811 	msr	BASEPRI, r3
 8001cc8:	fab5 f185 	clz	r1, r5
 8001ccc:	0949      	lsrs	r1, r1, #5
 8001cce:	2005      	movs	r0, #5
 8001cd0:	f7fe fd4e 	bl	8000770 <_test_assert>
 8001cd4:	4605      	mov	r5, r0
 8001cd6:	2800      	cmp	r0, #0
 8001cd8:	d191      	bne.n	8001bfe <evt3_execute+0x1e>
 8001cda:	69a4      	ldr	r4, [r4, #24]
 8001cdc:	2320      	movs	r3, #32
 8001cde:	f383 8811 	msr	BASEPRI, r3
 8001ce2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001ce4:	3301      	adds	r3, #1
 8001ce6:	d008      	beq.n	8001cfa <evt3_execute+0x11a>
 8001ce8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001cec:	6223      	str	r3, [r4, #32]
 8001cee:	210a      	movs	r1, #10
 8001cf0:	200b      	movs	r0, #11
 8001cf2:	f7ff ff25 	bl	8001b40 <chSchGoSleepTimeoutS>
 8001cf6:	2800      	cmp	r0, #0
 8001cf8:	db19      	blt.n	8001d2e <evt3_execute+0x14e>
 8001cfa:	2300      	movs	r3, #0
 8001cfc:	6363      	str	r3, [r4, #52]	; 0x34
 8001cfe:	f383 8811 	msr	BASEPRI, r3
 8001d02:	4629      	mov	r1, r5
 8001d04:	2006      	movs	r0, #6
 8001d06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001d0a:	f7fe bd31 	b.w	8000770 <_test_assert>
 8001d0e:	f382 8811 	msr	BASEPRI, r2
 8001d12:	2101      	movs	r1, #1
 8001d14:	e78f      	b.n	8001c36 <evt3_execute+0x56>
 8001d16:	6358      	str	r0, [r3, #52]	; 0x34
 8001d18:	f380 8811 	msr	BASEPRI, r0
 8001d1c:	e79a      	b.n	8001c54 <evt3_execute+0x74>
 8001d1e:	f385 8811 	msr	BASEPRI, r5
 8001d22:	2101      	movs	r1, #1
 8001d24:	e7b7      	b.n	8001c96 <evt3_execute+0xb6>
 8001d26:	f385 8811 	msr	BASEPRI, r5
 8001d2a:	2101      	movs	r1, #1
 8001d2c:	e7cf      	b.n	8001cce <evt3_execute+0xee>
 8001d2e:	f385 8811 	msr	BASEPRI, r5
 8001d32:	2501      	movs	r5, #1
 8001d34:	e7e5      	b.n	8001d02 <evt3_execute+0x122>
 8001d36:	bf00      	nop
 8001d38:	20000938 	.word	0x20000938
 8001d3c:	00000000 	.word	0x00000000

08001d40 <chSemWaitTimeoutS>:
 8001d40:	6883      	ldr	r3, [r0, #8]
 8001d42:	3b01      	subs	r3, #1
 8001d44:	2b00      	cmp	r3, #0
 8001d46:	6083      	str	r3, [r0, #8]
 8001d48:	db01      	blt.n	8001d4e <chSemWaitTimeoutS+0xe>
 8001d4a:	2000      	movs	r0, #0
 8001d4c:	4770      	bx	lr
 8001d4e:	4b07      	ldr	r3, [pc, #28]	; (8001d6c <chSemWaitTimeoutS+0x2c>)
 8001d50:	699b      	ldr	r3, [r3, #24]
 8001d52:	b410      	push	{r4}
 8001d54:	6218      	str	r0, [r3, #32]
 8001d56:	6018      	str	r0, [r3, #0]
 8001d58:	6844      	ldr	r4, [r0, #4]
 8001d5a:	605c      	str	r4, [r3, #4]
 8001d5c:	4602      	mov	r2, r0
 8001d5e:	6023      	str	r3, [r4, #0]
 8001d60:	2005      	movs	r0, #5
 8001d62:	6053      	str	r3, [r2, #4]
 8001d64:	bc10      	pop	{r4}
 8001d66:	f7ff beeb 	b.w	8001b40 <chSchGoSleepTimeoutS>
 8001d6a:	bf00      	nop
 8001d6c:	20000938 	.word	0x20000938

08001d70 <chMBPost.constprop.19>:
 8001d70:	b570      	push	{r4, r5, r6, lr}
 8001d72:	2320      	movs	r3, #32
 8001d74:	4606      	mov	r6, r0
 8001d76:	f383 8811 	msr	BASEPRI, r3
 8001d7a:	4c0d      	ldr	r4, [pc, #52]	; (8001db0 <chMBPost.constprop.19+0x40>)
 8001d7c:	f104 001c 	add.w	r0, r4, #28
 8001d80:	f7ff ffde 	bl	8001d40 <chSemWaitTimeoutS>
 8001d84:	4605      	mov	r5, r0
 8001d86:	b968      	cbnz	r0, 8001da4 <chMBPost.constprop.19+0x34>
 8001d88:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8001d8c:	1d13      	adds	r3, r2, #4
 8001d8e:	428b      	cmp	r3, r1
 8001d90:	60a3      	str	r3, [r4, #8]
 8001d92:	4808      	ldr	r0, [pc, #32]	; (8001db4 <chMBPost.constprop.19+0x44>)
 8001d94:	6016      	str	r6, [r2, #0]
 8001d96:	bf24      	itt	cs
 8001d98:	6823      	ldrcs	r3, [r4, #0]
 8001d9a:	60a3      	strcs	r3, [r4, #8]
 8001d9c:	f7ff f8e8 	bl	8000f70 <chSemSignalI>
 8001da0:	f7ff fb9e 	bl	80014e0 <chSchRescheduleS>
 8001da4:	2300      	movs	r3, #0
 8001da6:	f383 8811 	msr	BASEPRI, r3
 8001daa:	4628      	mov	r0, r5
 8001dac:	bd70      	pop	{r4, r5, r6, pc}
 8001dae:	bf00      	nop
 8001db0:	20000854 	.word	0x20000854
 8001db4:	20000864 	.word	0x20000864
	...

08001dc0 <chMBPostAhead.constprop.17>:
 8001dc0:	b570      	push	{r4, r5, r6, lr}
 8001dc2:	2320      	movs	r3, #32
 8001dc4:	4606      	mov	r6, r0
 8001dc6:	f383 8811 	msr	BASEPRI, r3
 8001dca:	4c10      	ldr	r4, [pc, #64]	; (8001e0c <chMBPostAhead.constprop.17+0x4c>)
 8001dcc:	f104 001c 	add.w	r0, r4, #28
 8001dd0:	f7ff ffb6 	bl	8001d40 <chSemWaitTimeoutS>
 8001dd4:	4605      	mov	r5, r0
 8001dd6:	b120      	cbz	r0, 8001de2 <chMBPostAhead.constprop.17+0x22>
 8001dd8:	2300      	movs	r3, #0
 8001dda:	f383 8811 	msr	BASEPRI, r3
 8001dde:	4628      	mov	r0, r5
 8001de0:	bd70      	pop	{r4, r5, r6, pc}
 8001de2:	68e3      	ldr	r3, [r4, #12]
 8001de4:	6822      	ldr	r2, [r4, #0]
 8001de6:	3b04      	subs	r3, #4
 8001de8:	4293      	cmp	r3, r2
 8001dea:	60e3      	str	r3, [r4, #12]
 8001dec:	d202      	bcs.n	8001df4 <chMBPostAhead.constprop.17+0x34>
 8001dee:	6863      	ldr	r3, [r4, #4]
 8001df0:	3b04      	subs	r3, #4
 8001df2:	60e3      	str	r3, [r4, #12]
 8001df4:	601e      	str	r6, [r3, #0]
 8001df6:	4806      	ldr	r0, [pc, #24]	; (8001e10 <chMBPostAhead.constprop.17+0x50>)
 8001df8:	f7ff f8ba 	bl	8000f70 <chSemSignalI>
 8001dfc:	f7ff fb70 	bl	80014e0 <chSchRescheduleS>
 8001e00:	2300      	movs	r3, #0
 8001e02:	f383 8811 	msr	BASEPRI, r3
 8001e06:	4628      	mov	r0, r5
 8001e08:	bd70      	pop	{r4, r5, r6, pc}
 8001e0a:	bf00      	nop
 8001e0c:	20000854 	.word	0x20000854
 8001e10:	20000864 	.word	0x20000864
	...

08001e20 <chMBFetch.constprop.15>:
 8001e20:	b570      	push	{r4, r5, r6, lr}
 8001e22:	2320      	movs	r3, #32
 8001e24:	4606      	mov	r6, r0
 8001e26:	f383 8811 	msr	BASEPRI, r3
 8001e2a:	4c0d      	ldr	r4, [pc, #52]	; (8001e60 <chMBFetch.constprop.15+0x40>)
 8001e2c:	f104 0010 	add.w	r0, r4, #16
 8001e30:	f7ff ff86 	bl	8001d40 <chSemWaitTimeoutS>
 8001e34:	4605      	mov	r5, r0
 8001e36:	b970      	cbnz	r0, 8001e56 <chMBFetch.constprop.15+0x36>
 8001e38:	68e3      	ldr	r3, [r4, #12]
 8001e3a:	6862      	ldr	r2, [r4, #4]
 8001e3c:	6819      	ldr	r1, [r3, #0]
 8001e3e:	4809      	ldr	r0, [pc, #36]	; (8001e64 <chMBFetch.constprop.15+0x44>)
 8001e40:	3304      	adds	r3, #4
 8001e42:	4293      	cmp	r3, r2
 8001e44:	60e3      	str	r3, [r4, #12]
 8001e46:	6031      	str	r1, [r6, #0]
 8001e48:	bf24      	itt	cs
 8001e4a:	6823      	ldrcs	r3, [r4, #0]
 8001e4c:	60e3      	strcs	r3, [r4, #12]
 8001e4e:	f7ff f88f 	bl	8000f70 <chSemSignalI>
 8001e52:	f7ff fb45 	bl	80014e0 <chSchRescheduleS>
 8001e56:	2300      	movs	r3, #0
 8001e58:	f383 8811 	msr	BASEPRI, r3
 8001e5c:	4628      	mov	r0, r5
 8001e5e:	bd70      	pop	{r4, r5, r6, pc}
 8001e60:	20000854 	.word	0x20000854
 8001e64:	20000870 	.word	0x20000870
	...

08001e70 <mbox1_execute>:
 8001e70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e72:	2320      	movs	r3, #32
 8001e74:	b083      	sub	sp, #12
 8001e76:	f383 8811 	msr	BASEPRI, r3
 8001e7a:	4dd1      	ldr	r5, [pc, #836]	; (80021c0 <mbox1_execute+0x350>)
 8001e7c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8001e7e:	f1a1 0105 	sub.w	r1, r1, #5
 8001e82:	fab1 f181 	clz	r1, r1
 8001e86:	2001      	movs	r0, #1
 8001e88:	0949      	lsrs	r1, r1, #5
 8001e8a:	f7fe fc71 	bl	8000770 <_test_assert>
 8001e8e:	2800      	cmp	r0, #0
 8001e90:	f040 8191 	bne.w	80021b6 <mbox1_execute+0x346>
 8001e94:	f380 8811 	msr	BASEPRI, r0
 8001e98:	2442      	movs	r4, #66	; 0x42
 8001e9a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001e9e:	4620      	mov	r0, r4
 8001ea0:	f7ff ff66 	bl	8001d70 <chMBPost.constprop.19>
 8001ea4:	fab0 f180 	clz	r1, r0
 8001ea8:	0949      	lsrs	r1, r1, #5
 8001eaa:	2002      	movs	r0, #2
 8001eac:	f7fe fc60 	bl	8000770 <_test_assert>
 8001eb0:	3401      	adds	r4, #1
 8001eb2:	b978      	cbnz	r0, 8001ed4 <mbox1_execute+0x64>
 8001eb4:	2c46      	cmp	r4, #70	; 0x46
 8001eb6:	d1f0      	bne.n	8001e9a <mbox1_execute+0x2a>
 8001eb8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001ebc:	2041      	movs	r0, #65	; 0x41
 8001ebe:	f7ff ff7f 	bl	8001dc0 <chMBPostAhead.constprop.17>
 8001ec2:	fab0 f180 	clz	r1, r0
 8001ec6:	0949      	lsrs	r1, r1, #5
 8001ec8:	2003      	movs	r0, #3
 8001eca:	f7fe fc51 	bl	8000770 <_test_assert>
 8001ece:	2800      	cmp	r0, #0
 8001ed0:	f000 817e 	beq.w	80021d0 <mbox1_execute+0x360>
 8001ed4:	b003      	add	sp, #12
 8001ed6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ed8:	f380 8811 	msr	BASEPRI, r0
 8001edc:	f384 8811 	msr	BASEPRI, r4
 8001ee0:	2041      	movs	r0, #65	; 0x41
 8001ee2:	f7ff f855 	bl	8000f90 <chMBPostI.constprop.18>
 8001ee6:	fab0 f180 	clz	r1, r0
 8001eea:	0949      	lsrs	r1, r1, #5
 8001eec:	2016      	movs	r0, #22
 8001eee:	f7fe fc3f 	bl	8000770 <_test_assert>
 8001ef2:	2800      	cmp	r0, #0
 8001ef4:	d1ee      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001ef6:	2042      	movs	r0, #66	; 0x42
 8001ef8:	f7ff f84a 	bl	8000f90 <chMBPostI.constprop.18>
 8001efc:	fab0 f180 	clz	r1, r0
 8001f00:	0949      	lsrs	r1, r1, #5
 8001f02:	2017      	movs	r0, #23
 8001f04:	f7fe fc34 	bl	8000770 <_test_assert>
 8001f08:	2800      	cmp	r0, #0
 8001f0a:	d1e3      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001f0c:	2043      	movs	r0, #67	; 0x43
 8001f0e:	f7ff f83f 	bl	8000f90 <chMBPostI.constprop.18>
 8001f12:	fab0 f180 	clz	r1, r0
 8001f16:	0949      	lsrs	r1, r1, #5
 8001f18:	2018      	movs	r0, #24
 8001f1a:	f7fe fc29 	bl	8000770 <_test_assert>
 8001f1e:	2800      	cmp	r0, #0
 8001f20:	d1d8      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001f22:	2044      	movs	r0, #68	; 0x44
 8001f24:	f7ff f834 	bl	8000f90 <chMBPostI.constprop.18>
 8001f28:	fab0 f180 	clz	r1, r0
 8001f2c:	0949      	lsrs	r1, r1, #5
 8001f2e:	2019      	movs	r0, #25
 8001f30:	f7fe fc1e 	bl	8000770 <_test_assert>
 8001f34:	4606      	mov	r6, r0
 8001f36:	2800      	cmp	r0, #0
 8001f38:	d1cc      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001f3a:	2045      	movs	r0, #69	; 0x45
 8001f3c:	f7ff f828 	bl	8000f90 <chMBPostI.constprop.18>
 8001f40:	f386 8811 	msr	BASEPRI, r6
 8001f44:	fab0 f180 	clz	r1, r0
 8001f48:	0949      	lsrs	r1, r1, #5
 8001f4a:	201a      	movs	r0, #26
 8001f4c:	f7fe fc10 	bl	8000770 <_test_assert>
 8001f50:	2800      	cmp	r0, #0
 8001f52:	d1bf      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001f54:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8001f58:	eba1 0c03 	sub.w	ip, r1, r3
 8001f5c:	f1dc 0100 	rsbs	r1, ip, #0
 8001f60:	eb41 010c 	adc.w	r1, r1, ip
 8001f64:	201b      	movs	r0, #27
 8001f66:	f7fe fc03 	bl	8000770 <_test_assert>
 8001f6a:	2800      	cmp	r0, #0
 8001f6c:	d1b2      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001f6e:	4607      	mov	r7, r0
 8001f70:	2605      	movs	r6, #5
 8001f72:	f384 8811 	msr	BASEPRI, r4
 8001f76:	a801      	add	r0, sp, #4
 8001f78:	f7ff f84a 	bl	8001010 <chMBFetchI.constprop.14>
 8001f7c:	f387 8811 	msr	BASEPRI, r7
 8001f80:	fab0 f180 	clz	r1, r0
 8001f84:	0949      	lsrs	r1, r1, #5
 8001f86:	201c      	movs	r0, #28
 8001f88:	f7fe fbf2 	bl	8000770 <_test_assert>
 8001f8c:	2800      	cmp	r0, #0
 8001f8e:	d1a1      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001f90:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8001f94:	f7fe fc04 	bl	80007a0 <test_emit_token>
 8001f98:	3e01      	subs	r6, #1
 8001f9a:	d1ea      	bne.n	8001f72 <mbox1_execute+0x102>
 8001f9c:	4989      	ldr	r1, [pc, #548]	; (80021c4 <mbox1_execute+0x354>)
 8001f9e:	201d      	movs	r0, #29
 8001fa0:	f7fe fbbe 	bl	8000720 <_test_assert_sequence>
 8001fa4:	2800      	cmp	r0, #0
 8001fa6:	d195      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001fa8:	f384 8811 	msr	BASEPRI, r4
 8001fac:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8001fae:	1f4f      	subs	r7, r1, #5
 8001fb0:	4279      	negs	r1, r7
 8001fb2:	4179      	adcs	r1, r7
 8001fb4:	201e      	movs	r0, #30
 8001fb6:	f7fe fbdb 	bl	8000770 <_test_assert>
 8001fba:	2800      	cmp	r0, #0
 8001fbc:	f040 8223 	bne.w	8002406 <mbox1_execute+0x596>
 8001fc0:	f386 8811 	msr	BASEPRI, r6
 8001fc4:	f384 8811 	msr	BASEPRI, r4
 8001fc8:	69a9      	ldr	r1, [r5, #24]
 8001fca:	fab1 f181 	clz	r1, r1
 8001fce:	0949      	lsrs	r1, r1, #5
 8001fd0:	201f      	movs	r0, #31
 8001fd2:	f7fe fbcd 	bl	8000770 <_test_assert>
 8001fd6:	2800      	cmp	r0, #0
 8001fd8:	f040 8215 	bne.w	8002406 <mbox1_execute+0x596>
 8001fdc:	f386 8811 	msr	BASEPRI, r6
 8001fe0:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8001fe4:	1aca      	subs	r2, r1, r3
 8001fe6:	4251      	negs	r1, r2
 8001fe8:	4151      	adcs	r1, r2
 8001fea:	2020      	movs	r0, #32
 8001fec:	f7fe fbc0 	bl	8000770 <_test_assert>
 8001ff0:	2800      	cmp	r0, #0
 8001ff2:	f47f af6f 	bne.w	8001ed4 <mbox1_execute+0x64>
 8001ff6:	f384 8811 	msr	BASEPRI, r4
 8001ffa:	2045      	movs	r0, #69	; 0x45
 8001ffc:	f7fe ffe8 	bl	8000fd0 <chMBPostAheadI.constprop.16>
 8002000:	fab0 f180 	clz	r1, r0
 8002004:	0949      	lsrs	r1, r1, #5
 8002006:	2021      	movs	r0, #33	; 0x21
 8002008:	f7fe fbb2 	bl	8000770 <_test_assert>
 800200c:	2800      	cmp	r0, #0
 800200e:	f47f af61 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002012:	2044      	movs	r0, #68	; 0x44
 8002014:	f7fe ffdc 	bl	8000fd0 <chMBPostAheadI.constprop.16>
 8002018:	fab0 f180 	clz	r1, r0
 800201c:	0949      	lsrs	r1, r1, #5
 800201e:	2022      	movs	r0, #34	; 0x22
 8002020:	f7fe fba6 	bl	8000770 <_test_assert>
 8002024:	2800      	cmp	r0, #0
 8002026:	f47f af55 	bne.w	8001ed4 <mbox1_execute+0x64>
 800202a:	2043      	movs	r0, #67	; 0x43
 800202c:	f7fe ffd0 	bl	8000fd0 <chMBPostAheadI.constprop.16>
 8002030:	fab0 f180 	clz	r1, r0
 8002034:	0949      	lsrs	r1, r1, #5
 8002036:	2023      	movs	r0, #35	; 0x23
 8002038:	f7fe fb9a 	bl	8000770 <_test_assert>
 800203c:	2800      	cmp	r0, #0
 800203e:	f47f af49 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002042:	2042      	movs	r0, #66	; 0x42
 8002044:	f7fe ffc4 	bl	8000fd0 <chMBPostAheadI.constprop.16>
 8002048:	fab0 f180 	clz	r1, r0
 800204c:	0949      	lsrs	r1, r1, #5
 800204e:	2024      	movs	r0, #36	; 0x24
 8002050:	f7fe fb8e 	bl	8000770 <_test_assert>
 8002054:	2800      	cmp	r0, #0
 8002056:	f47f af3d 	bne.w	8001ed4 <mbox1_execute+0x64>
 800205a:	2041      	movs	r0, #65	; 0x41
 800205c:	f7fe ffb8 	bl	8000fd0 <chMBPostAheadI.constprop.16>
 8002060:	2300      	movs	r3, #0
 8002062:	f383 8811 	msr	BASEPRI, r3
 8002066:	fab0 f180 	clz	r1, r0
 800206a:	0949      	lsrs	r1, r1, #5
 800206c:	2025      	movs	r0, #37	; 0x25
 800206e:	f7fe fb7f 	bl	8000770 <_test_assert>
 8002072:	2800      	cmp	r0, #0
 8002074:	f47f af2e 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002078:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800207c:	1acb      	subs	r3, r1, r3
 800207e:	4259      	negs	r1, r3
 8002080:	4159      	adcs	r1, r3
 8002082:	2026      	movs	r0, #38	; 0x26
 8002084:	f7fe fb74 	bl	8000770 <_test_assert>
 8002088:	2800      	cmp	r0, #0
 800208a:	f47f af23 	bne.w	8001ed4 <mbox1_execute+0x64>
 800208e:	4606      	mov	r6, r0
 8002090:	2405      	movs	r4, #5
 8002092:	2720      	movs	r7, #32
 8002094:	f387 8811 	msr	BASEPRI, r7
 8002098:	a801      	add	r0, sp, #4
 800209a:	f7fe ffb9 	bl	8001010 <chMBFetchI.constprop.14>
 800209e:	f386 8811 	msr	BASEPRI, r6
 80020a2:	fab0 f180 	clz	r1, r0
 80020a6:	0949      	lsrs	r1, r1, #5
 80020a8:	2027      	movs	r0, #39	; 0x27
 80020aa:	f7fe fb61 	bl	8000770 <_test_assert>
 80020ae:	2800      	cmp	r0, #0
 80020b0:	f47f af10 	bne.w	8001ed4 <mbox1_execute+0x64>
 80020b4:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80020b8:	f7fe fb72 	bl	80007a0 <test_emit_token>
 80020bc:	3c01      	subs	r4, #1
 80020be:	d1e9      	bne.n	8002094 <mbox1_execute+0x224>
 80020c0:	4940      	ldr	r1, [pc, #256]	; (80021c4 <mbox1_execute+0x354>)
 80020c2:	2028      	movs	r0, #40	; 0x28
 80020c4:	f7fe fb2c 	bl	8000720 <_test_assert_sequence>
 80020c8:	2800      	cmp	r0, #0
 80020ca:	f47f af03 	bne.w	8001ed4 <mbox1_execute+0x64>
 80020ce:	f387 8811 	msr	BASEPRI, r7
 80020d2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80020d4:	f1a1 0e05 	sub.w	lr, r1, #5
 80020d8:	f1de 0100 	rsbs	r1, lr, #0
 80020dc:	eb41 010e 	adc.w	r1, r1, lr
 80020e0:	2029      	movs	r0, #41	; 0x29
 80020e2:	f7fe fb45 	bl	8000770 <_test_assert>
 80020e6:	2800      	cmp	r0, #0
 80020e8:	f040 80c5 	bne.w	8002276 <mbox1_execute+0x406>
 80020ec:	f384 8811 	msr	BASEPRI, r4
 80020f0:	f387 8811 	msr	BASEPRI, r7
 80020f4:	69a9      	ldr	r1, [r5, #24]
 80020f6:	fab1 f181 	clz	r1, r1
 80020fa:	0949      	lsrs	r1, r1, #5
 80020fc:	202a      	movs	r0, #42	; 0x2a
 80020fe:	f7fe fb37 	bl	8000770 <_test_assert>
 8002102:	2800      	cmp	r0, #0
 8002104:	f040 80b7 	bne.w	8002276 <mbox1_execute+0x406>
 8002108:	f384 8811 	msr	BASEPRI, r4
 800210c:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002110:	eba1 0c03 	sub.w	ip, r1, r3
 8002114:	f1dc 0100 	rsbs	r1, ip, #0
 8002118:	eb41 010c 	adc.w	r1, r1, ip
 800211c:	202b      	movs	r0, #43	; 0x2b
 800211e:	f7fe fb27 	bl	8000770 <_test_assert>
 8002122:	2800      	cmp	r0, #0
 8002124:	f47f aed6 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002128:	f387 8811 	msr	BASEPRI, r7
 800212c:	e9d5 3200 	ldrd	r3, r2, [r5]
 8002130:	1ad2      	subs	r2, r2, r3
 8002132:	1091      	asrs	r1, r2, #2
 8002134:	4824      	ldr	r0, [pc, #144]	; (80021c8 <mbox1_execute+0x358>)
 8002136:	60ab      	str	r3, [r5, #8]
 8002138:	60eb      	str	r3, [r5, #12]
 800213a:	f7fe ff89 	bl	8001050 <chSemResetI>
 800213e:	4621      	mov	r1, r4
 8002140:	4822      	ldr	r0, [pc, #136]	; (80021cc <mbox1_execute+0x35c>)
 8002142:	f7fe ff85 	bl	8001050 <chSemResetI>
 8002146:	f7ff f9cb 	bl	80014e0 <chSchRescheduleS>
 800214a:	f384 8811 	msr	BASEPRI, r4
 800214e:	f387 8811 	msr	BASEPRI, r7
 8002152:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002154:	1f4e      	subs	r6, r1, #5
 8002156:	4271      	negs	r1, r6
 8002158:	4171      	adcs	r1, r6
 800215a:	202c      	movs	r0, #44	; 0x2c
 800215c:	f7fe fb08 	bl	8000770 <_test_assert>
 8002160:	2800      	cmp	r0, #0
 8002162:	f040 8088 	bne.w	8002276 <mbox1_execute+0x406>
 8002166:	f384 8811 	msr	BASEPRI, r4
 800216a:	f387 8811 	msr	BASEPRI, r7
 800216e:	69a9      	ldr	r1, [r5, #24]
 8002170:	fab1 f181 	clz	r1, r1
 8002174:	0949      	lsrs	r1, r1, #5
 8002176:	202d      	movs	r0, #45	; 0x2d
 8002178:	f7fe fafa 	bl	8000770 <_test_assert>
 800217c:	2800      	cmp	r0, #0
 800217e:	d17a      	bne.n	8002276 <mbox1_execute+0x406>
 8002180:	f384 8811 	msr	BASEPRI, r4
 8002184:	f387 8811 	msr	BASEPRI, r7
 8002188:	6829      	ldr	r1, [r5, #0]
 800218a:	68ab      	ldr	r3, [r5, #8]
 800218c:	1aca      	subs	r2, r1, r3
 800218e:	4251      	negs	r1, r2
 8002190:	4151      	adcs	r1, r2
 8002192:	202e      	movs	r0, #46	; 0x2e
 8002194:	f7fe faec 	bl	8000770 <_test_assert>
 8002198:	2800      	cmp	r0, #0
 800219a:	d16c      	bne.n	8002276 <mbox1_execute+0x406>
 800219c:	f384 8811 	msr	BASEPRI, r4
 80021a0:	f387 8811 	msr	BASEPRI, r7
 80021a4:	6829      	ldr	r1, [r5, #0]
 80021a6:	68eb      	ldr	r3, [r5, #12]
 80021a8:	1acb      	subs	r3, r1, r3
 80021aa:	4259      	negs	r1, r3
 80021ac:	f04f 002f 	mov.w	r0, #47	; 0x2f
 80021b0:	4159      	adcs	r1, r3
 80021b2:	f7fe fadd 	bl	8000770 <_test_assert>
 80021b6:	2300      	movs	r3, #0
 80021b8:	f383 8811 	msr	BASEPRI, r3
 80021bc:	b003      	add	sp, #12
 80021be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80021c0:	20000854 	.word	0x20000854
 80021c4:	08005ff0 	.word	0x08005ff0
 80021c8:	20000870 	.word	0x20000870
 80021cc:	20000864 	.word	0x20000864
 80021d0:	2101      	movs	r1, #1
 80021d2:	2058      	movs	r0, #88	; 0x58
 80021d4:	f7ff fdcc 	bl	8001d70 <chMBPost.constprop.19>
 80021d8:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 80021dc:	fab1 f181 	clz	r1, r1
 80021e0:	0949      	lsrs	r1, r1, #5
 80021e2:	2004      	movs	r0, #4
 80021e4:	f7fe fac4 	bl	8000770 <_test_assert>
 80021e8:	4604      	mov	r4, r0
 80021ea:	2800      	cmp	r0, #0
 80021ec:	f47f ae72 	bne.w	8001ed4 <mbox1_execute+0x64>
 80021f0:	2620      	movs	r6, #32
 80021f2:	f386 8811 	msr	BASEPRI, r6
 80021f6:	2058      	movs	r0, #88	; 0x58
 80021f8:	f7fe feca 	bl	8000f90 <chMBPostI.constprop.18>
 80021fc:	4601      	mov	r1, r0
 80021fe:	f384 8811 	msr	BASEPRI, r4
 8002202:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 8002206:	fab1 f181 	clz	r1, r1
 800220a:	2005      	movs	r0, #5
 800220c:	0949      	lsrs	r1, r1, #5
 800220e:	f7fe faaf 	bl	8000770 <_test_assert>
 8002212:	2800      	cmp	r0, #0
 8002214:	f47f ae5e 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002218:	2101      	movs	r1, #1
 800221a:	2058      	movs	r0, #88	; 0x58
 800221c:	f7ff fdd0 	bl	8001dc0 <chMBPostAhead.constprop.17>
 8002220:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8002224:	fab1 f181 	clz	r1, r1
 8002228:	0949      	lsrs	r1, r1, #5
 800222a:	2006      	movs	r0, #6
 800222c:	f7fe faa0 	bl	8000770 <_test_assert>
 8002230:	4604      	mov	r4, r0
 8002232:	2800      	cmp	r0, #0
 8002234:	f47f ae4e 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002238:	f386 8811 	msr	BASEPRI, r6
 800223c:	2058      	movs	r0, #88	; 0x58
 800223e:	f7fe fec7 	bl	8000fd0 <chMBPostAheadI.constprop.16>
 8002242:	4601      	mov	r1, r0
 8002244:	f384 8811 	msr	BASEPRI, r4
 8002248:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 800224c:	fab1 f181 	clz	r1, r1
 8002250:	2007      	movs	r0, #7
 8002252:	0949      	lsrs	r1, r1, #5
 8002254:	f7fe fa8c 	bl	8000770 <_test_assert>
 8002258:	4604      	mov	r4, r0
 800225a:	2800      	cmp	r0, #0
 800225c:	f47f ae3a 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002260:	f386 8811 	msr	BASEPRI, r6
 8002264:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002266:	fab1 f181 	clz	r1, r1
 800226a:	0949      	lsrs	r1, r1, #5
 800226c:	2008      	movs	r0, #8
 800226e:	f7fe fa7f 	bl	8000770 <_test_assert>
 8002272:	4607      	mov	r7, r0
 8002274:	b110      	cbz	r0, 800227c <mbox1_execute+0x40c>
 8002276:	f384 8811 	msr	BASEPRI, r4
 800227a:	e62b      	b.n	8001ed4 <mbox1_execute+0x64>
 800227c:	f380 8811 	msr	BASEPRI, r0
 8002280:	f386 8811 	msr	BASEPRI, r6
 8002284:	69a9      	ldr	r1, [r5, #24]
 8002286:	f1a1 0e05 	sub.w	lr, r1, #5
 800228a:	f1de 0100 	rsbs	r1, lr, #0
 800228e:	eb41 010e 	adc.w	r1, r1, lr
 8002292:	2009      	movs	r0, #9
 8002294:	f7fe fa6c 	bl	8000770 <_test_assert>
 8002298:	b110      	cbz	r0, 80022a0 <mbox1_execute+0x430>
 800229a:	f387 8811 	msr	BASEPRI, r7
 800229e:	e619      	b.n	8001ed4 <mbox1_execute+0x64>
 80022a0:	f380 8811 	msr	BASEPRI, r0
 80022a4:	f386 8811 	msr	BASEPRI, r6
 80022a8:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80022ac:	eba1 0c03 	sub.w	ip, r1, r3
 80022b0:	f1dc 0100 	rsbs	r1, ip, #0
 80022b4:	f04f 000a 	mov.w	r0, #10
 80022b8:	eb41 010c 	adc.w	r1, r1, ip
 80022bc:	f7fe fa58 	bl	8000770 <_test_assert>
 80022c0:	2300      	movs	r3, #0
 80022c2:	2800      	cmp	r0, #0
 80022c4:	f47f af78 	bne.w	80021b8 <mbox1_execute+0x348>
 80022c8:	f383 8811 	msr	BASEPRI, r3
 80022cc:	2405      	movs	r4, #5
 80022ce:	e005      	b.n	80022dc <mbox1_execute+0x46c>
 80022d0:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80022d4:	f7fe fa64 	bl	80007a0 <test_emit_token>
 80022d8:	3c01      	subs	r4, #1
 80022da:	d00d      	beq.n	80022f8 <mbox1_execute+0x488>
 80022dc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80022e0:	a801      	add	r0, sp, #4
 80022e2:	f7ff fd9d 	bl	8001e20 <chMBFetch.constprop.15>
 80022e6:	fab0 f180 	clz	r1, r0
 80022ea:	0949      	lsrs	r1, r1, #5
 80022ec:	200b      	movs	r0, #11
 80022ee:	f7fe fa3f 	bl	8000770 <_test_assert>
 80022f2:	2800      	cmp	r0, #0
 80022f4:	d0ec      	beq.n	80022d0 <mbox1_execute+0x460>
 80022f6:	e5ed      	b.n	8001ed4 <mbox1_execute+0x64>
 80022f8:	4944      	ldr	r1, [pc, #272]	; (800240c <mbox1_execute+0x59c>)
 80022fa:	200c      	movs	r0, #12
 80022fc:	f7fe fa10 	bl	8000720 <_test_assert_sequence>
 8002300:	2800      	cmp	r0, #0
 8002302:	f47f ade7 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002306:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800230a:	2047      	movs	r0, #71	; 0x47
 800230c:	f7ff fd30 	bl	8001d70 <chMBPost.constprop.19>
 8002310:	fab0 f180 	clz	r1, r0
 8002314:	0949      	lsrs	r1, r1, #5
 8002316:	200d      	movs	r0, #13
 8002318:	f7fe fa2a 	bl	8000770 <_test_assert>
 800231c:	2800      	cmp	r0, #0
 800231e:	f47f add9 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002322:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002326:	a801      	add	r0, sp, #4
 8002328:	f7ff fd7a 	bl	8001e20 <chMBFetch.constprop.15>
 800232c:	fab0 f180 	clz	r1, r0
 8002330:	0949      	lsrs	r1, r1, #5
 8002332:	200e      	movs	r0, #14
 8002334:	f7fe fa1c 	bl	8000770 <_test_assert>
 8002338:	2800      	cmp	r0, #0
 800233a:	f47f adcb 	bne.w	8001ed4 <mbox1_execute+0x64>
 800233e:	6829      	ldr	r1, [r5, #0]
 8002340:	68ab      	ldr	r3, [r5, #8]
 8002342:	1acf      	subs	r7, r1, r3
 8002344:	4279      	negs	r1, r7
 8002346:	4179      	adcs	r1, r7
 8002348:	200f      	movs	r0, #15
 800234a:	f7fe fa11 	bl	8000770 <_test_assert>
 800234e:	2800      	cmp	r0, #0
 8002350:	f47f adc0 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002354:	6829      	ldr	r1, [r5, #0]
 8002356:	68eb      	ldr	r3, [r5, #12]
 8002358:	1ace      	subs	r6, r1, r3
 800235a:	4271      	negs	r1, r6
 800235c:	4171      	adcs	r1, r6
 800235e:	2010      	movs	r0, #16
 8002360:	f7fe fa06 	bl	8000770 <_test_assert>
 8002364:	2800      	cmp	r0, #0
 8002366:	f47f adb5 	bne.w	8001ed4 <mbox1_execute+0x64>
 800236a:	2101      	movs	r1, #1
 800236c:	a801      	add	r0, sp, #4
 800236e:	f7ff fd57 	bl	8001e20 <chMBFetch.constprop.15>
 8002372:	3001      	adds	r0, #1
 8002374:	4241      	negs	r1, r0
 8002376:	4141      	adcs	r1, r0
 8002378:	2011      	movs	r0, #17
 800237a:	f7fe f9f9 	bl	8000770 <_test_assert>
 800237e:	2800      	cmp	r0, #0
 8002380:	f47f ada8 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002384:	2620      	movs	r6, #32
 8002386:	f386 8811 	msr	BASEPRI, r6
 800238a:	a801      	add	r0, sp, #4
 800238c:	f7fe fe40 	bl	8001010 <chMBFetchI.constprop.14>
 8002390:	4601      	mov	r1, r0
 8002392:	f384 8811 	msr	BASEPRI, r4
 8002396:	1c4a      	adds	r2, r1, #1
 8002398:	4251      	negs	r1, r2
 800239a:	4151      	adcs	r1, r2
 800239c:	2012      	movs	r0, #18
 800239e:	f7fe f9e7 	bl	8000770 <_test_assert>
 80023a2:	2800      	cmp	r0, #0
 80023a4:	f47f ad96 	bne.w	8001ed4 <mbox1_execute+0x64>
 80023a8:	f386 8811 	msr	BASEPRI, r6
 80023ac:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80023ae:	1f4b      	subs	r3, r1, #5
 80023b0:	4259      	negs	r1, r3
 80023b2:	4159      	adcs	r1, r3
 80023b4:	2013      	movs	r0, #19
 80023b6:	f7fe f9db 	bl	8000770 <_test_assert>
 80023ba:	2800      	cmp	r0, #0
 80023bc:	f47f aefb 	bne.w	80021b6 <mbox1_execute+0x346>
 80023c0:	2700      	movs	r7, #0
 80023c2:	f387 8811 	msr	BASEPRI, r7
 80023c6:	2420      	movs	r4, #32
 80023c8:	f384 8811 	msr	BASEPRI, r4
 80023cc:	69a9      	ldr	r1, [r5, #24]
 80023ce:	fab1 f181 	clz	r1, r1
 80023d2:	0949      	lsrs	r1, r1, #5
 80023d4:	2014      	movs	r0, #20
 80023d6:	f7fe f9cb 	bl	8000770 <_test_assert>
 80023da:	4606      	mov	r6, r0
 80023dc:	2800      	cmp	r0, #0
 80023de:	f47f af5c 	bne.w	800229a <mbox1_execute+0x42a>
 80023e2:	f380 8811 	msr	BASEPRI, r0
 80023e6:	f384 8811 	msr	BASEPRI, r4
 80023ea:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80023ee:	eba1 0e03 	sub.w	lr, r1, r3
 80023f2:	f1de 0100 	rsbs	r1, lr, #0
 80023f6:	eb41 010e 	adc.w	r1, r1, lr
 80023fa:	2015      	movs	r0, #21
 80023fc:	f7fe f9b8 	bl	8000770 <_test_assert>
 8002400:	2800      	cmp	r0, #0
 8002402:	f43f ad69 	beq.w	8001ed8 <mbox1_execute+0x68>
 8002406:	f386 8811 	msr	BASEPRI, r6
 800240a:	e563      	b.n	8001ed4 <mbox1_execute+0x64>
 800240c:	08005ff0 	.word	0x08005ff0

08002410 <chThdEnqueueTimeoutS>:
 8002410:	b161      	cbz	r1, 800242c <chThdEnqueueTimeoutS+0x1c>
 8002412:	4b08      	ldr	r3, [pc, #32]	; (8002434 <chThdEnqueueTimeoutS+0x24>)
 8002414:	699b      	ldr	r3, [r3, #24]
 8002416:	b410      	push	{r4}
 8002418:	6018      	str	r0, [r3, #0]
 800241a:	6844      	ldr	r4, [r0, #4]
 800241c:	605c      	str	r4, [r3, #4]
 800241e:	4602      	mov	r2, r0
 8002420:	6023      	str	r3, [r4, #0]
 8002422:	2004      	movs	r0, #4
 8002424:	6053      	str	r3, [r2, #4]
 8002426:	bc10      	pop	{r4}
 8002428:	f7ff bb8a 	b.w	8001b40 <chSchGoSleepTimeoutS>
 800242c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002430:	4770      	bx	lr
 8002432:	bf00      	nop
 8002434:	20000938 	.word	0x20000938
	...

08002440 <chOQWriteTimeout>:
 8002440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002444:	b083      	sub	sp, #12
 8002446:	4604      	mov	r4, r0
 8002448:	460d      	mov	r5, r1
 800244a:	4616      	mov	r6, r2
 800244c:	9301      	str	r3, [sp, #4]
 800244e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8002452:	f04f 0920 	mov.w	r9, #32
 8002456:	f389 8811 	msr	BASEPRI, r9
 800245a:	2700      	movs	r7, #0
 800245c:	46ba      	mov	sl, r7
 800245e:	68a3      	ldr	r3, [r4, #8]
 8002460:	f105 0b01 	add.w	fp, r5, #1
 8002464:	1e59      	subs	r1, r3, #1
 8002466:	4620      	mov	r0, r4
 8002468:	b1fb      	cbz	r3, 80024aa <chOQWriteTimeout+0x6a>
 800246a:	6963      	ldr	r3, [r4, #20]
 800246c:	60a1      	str	r1, [r4, #8]
 800246e:	1c59      	adds	r1, r3, #1
 8002470:	6161      	str	r1, [r4, #20]
 8002472:	7829      	ldrb	r1, [r5, #0]
 8002474:	7019      	strb	r1, [r3, #0]
 8002476:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 800247a:	4299      	cmp	r1, r3
 800247c:	bf24      	itt	cs
 800247e:	68e3      	ldrcs	r3, [r4, #12]
 8002480:	6163      	strcs	r3, [r4, #20]
 8002482:	f1b8 0f00 	cmp.w	r8, #0
 8002486:	d000      	beq.n	800248a <chOQWriteTimeout+0x4a>
 8002488:	47c0      	blx	r8
 800248a:	f38a 8811 	msr	BASEPRI, sl
 800248e:	3e01      	subs	r6, #1
 8002490:	f107 0701 	add.w	r7, r7, #1
 8002494:	d013      	beq.n	80024be <chOQWriteTimeout+0x7e>
 8002496:	f389 8811 	msr	BASEPRI, r9
 800249a:	68a3      	ldr	r3, [r4, #8]
 800249c:	465d      	mov	r5, fp
 800249e:	1e59      	subs	r1, r3, #1
 80024a0:	f105 0b01 	add.w	fp, r5, #1
 80024a4:	4620      	mov	r0, r4
 80024a6:	2b00      	cmp	r3, #0
 80024a8:	d1df      	bne.n	800246a <chOQWriteTimeout+0x2a>
 80024aa:	9901      	ldr	r1, [sp, #4]
 80024ac:	9300      	str	r3, [sp, #0]
 80024ae:	4620      	mov	r0, r4
 80024b0:	f7ff ffae 	bl	8002410 <chThdEnqueueTimeoutS>
 80024b4:	9b00      	ldr	r3, [sp, #0]
 80024b6:	2800      	cmp	r0, #0
 80024b8:	d0d1      	beq.n	800245e <chOQWriteTimeout+0x1e>
 80024ba:	f383 8811 	msr	BASEPRI, r3
 80024be:	4638      	mov	r0, r7
 80024c0:	b003      	add	sp, #12
 80024c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80024c6:	bf00      	nop
	...

080024d0 <writet>:
 80024d0:	3030      	adds	r0, #48	; 0x30
 80024d2:	f7ff bfb5 	b.w	8002440 <chOQWriteTimeout>
 80024d6:	bf00      	nop
	...

080024e0 <write>:
 80024e0:	3030      	adds	r0, #48	; 0x30
 80024e2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80024e6:	f7ff bfab 	b.w	8002440 <chOQWriteTimeout>
 80024ea:	bf00      	nop
 80024ec:	0000      	movs	r0, r0
	...

080024f0 <chOQPutTimeout>:
 80024f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024f2:	4604      	mov	r4, r0
 80024f4:	460f      	mov	r7, r1
 80024f6:	4616      	mov	r6, r2
 80024f8:	2320      	movs	r3, #32
 80024fa:	f383 8811 	msr	BASEPRI, r3
 80024fe:	e003      	b.n	8002508 <chOQPutTimeout+0x18>
 8002500:	f7ff ff86 	bl	8002410 <chThdEnqueueTimeoutS>
 8002504:	2800      	cmp	r0, #0
 8002506:	db17      	blt.n	8002538 <chOQPutTimeout+0x48>
 8002508:	68a5      	ldr	r5, [r4, #8]
 800250a:	4631      	mov	r1, r6
 800250c:	4620      	mov	r0, r4
 800250e:	2d00      	cmp	r5, #0
 8002510:	d0f6      	beq.n	8002500 <chOQPutTimeout+0x10>
 8002512:	6963      	ldr	r3, [r4, #20]
 8002514:	3d01      	subs	r5, #1
 8002516:	1c5a      	adds	r2, r3, #1
 8002518:	6162      	str	r2, [r4, #20]
 800251a:	60a5      	str	r5, [r4, #8]
 800251c:	701f      	strb	r7, [r3, #0]
 800251e:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8002522:	429a      	cmp	r2, r3
 8002524:	bf24      	itt	cs
 8002526:	68e3      	ldrcs	r3, [r4, #12]
 8002528:	6163      	strcs	r3, [r4, #20]
 800252a:	69e3      	ldr	r3, [r4, #28]
 800252c:	b103      	cbz	r3, 8002530 <chOQPutTimeout+0x40>
 800252e:	4798      	blx	r3
 8002530:	2000      	movs	r0, #0
 8002532:	f380 8811 	msr	BASEPRI, r0
 8002536:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002538:	f385 8811 	msr	BASEPRI, r5
 800253c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800253e:	bf00      	nop

08002540 <thread2.lto_priv.76>:
 8002540:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 8002544:	2100      	movs	r1, #0
 8002546:	4801      	ldr	r0, [pc, #4]	; (800254c <thread2.lto_priv.76+0xc>)
 8002548:	f7ff bfd2 	b.w	80024f0 <chOQPutTimeout>
 800254c:	20000888 	.word	0x20000888

08002550 <putt>:
 8002550:	3030      	adds	r0, #48	; 0x30
 8002552:	f7ff bfcd 	b.w	80024f0 <chOQPutTimeout>
 8002556:	bf00      	nop
	...

08002560 <put>:
 8002560:	3030      	adds	r0, #48	; 0x30
 8002562:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002566:	f7ff bfc3 	b.w	80024f0 <chOQPutTimeout>
 800256a:	bf00      	nop
 800256c:	0000      	movs	r0, r0
	...

08002570 <chIQReadTimeout>:
 8002570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002574:	4604      	mov	r4, r0
 8002576:	b083      	sub	sp, #12
 8002578:	4689      	mov	r9, r1
 800257a:	4693      	mov	fp, r2
 800257c:	461d      	mov	r5, r3
 800257e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8002582:	2720      	movs	r7, #32
 8002584:	f387 8811 	msr	BASEPRI, r7
 8002588:	2600      	movs	r6, #0
 800258a:	9701      	str	r7, [sp, #4]
 800258c:	46b2      	mov	sl, r6
 800258e:	f1b8 0f00 	cmp.w	r8, #0
 8002592:	d005      	beq.n	80025a0 <chIQReadTimeout+0x30>
 8002594:	4620      	mov	r0, r4
 8002596:	47c0      	blx	r8
 8002598:	e002      	b.n	80025a0 <chIQReadTimeout+0x30>
 800259a:	f7ff ff39 	bl	8002410 <chThdEnqueueTimeoutS>
 800259e:	b9d8      	cbnz	r0, 80025d8 <chIQReadTimeout+0x68>
 80025a0:	68a7      	ldr	r7, [r4, #8]
 80025a2:	4629      	mov	r1, r5
 80025a4:	4620      	mov	r0, r4
 80025a6:	2f00      	cmp	r7, #0
 80025a8:	d0f7      	beq.n	800259a <chIQReadTimeout+0x2a>
 80025aa:	69a2      	ldr	r2, [r4, #24]
 80025ac:	3f01      	subs	r7, #1
 80025ae:	1c51      	adds	r1, r2, #1
 80025b0:	61a1      	str	r1, [r4, #24]
 80025b2:	60a7      	str	r7, [r4, #8]
 80025b4:	7813      	ldrb	r3, [r2, #0]
 80025b6:	f809 3b01 	strb.w	r3, [r9], #1
 80025ba:	6923      	ldr	r3, [r4, #16]
 80025bc:	69a2      	ldr	r2, [r4, #24]
 80025be:	429a      	cmp	r2, r3
 80025c0:	bf24      	itt	cs
 80025c2:	68e3      	ldrcs	r3, [r4, #12]
 80025c4:	61a3      	strcs	r3, [r4, #24]
 80025c6:	f38a 8811 	msr	BASEPRI, sl
 80025ca:	3601      	adds	r6, #1
 80025cc:	45b3      	cmp	fp, r6
 80025ce:	d005      	beq.n	80025dc <chIQReadTimeout+0x6c>
 80025d0:	9b01      	ldr	r3, [sp, #4]
 80025d2:	f383 8811 	msr	BASEPRI, r3
 80025d6:	e7da      	b.n	800258e <chIQReadTimeout+0x1e>
 80025d8:	f387 8811 	msr	BASEPRI, r7
 80025dc:	4630      	mov	r0, r6
 80025de:	b003      	add	sp, #12
 80025e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080025f0 <readt>:
 80025f0:	300c      	adds	r0, #12
 80025f2:	f7ff bfbd 	b.w	8002570 <chIQReadTimeout>
 80025f6:	bf00      	nop
	...

08002600 <read>:
 8002600:	300c      	adds	r0, #12
 8002602:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002606:	f7ff bfb3 	b.w	8002570 <chIQReadTimeout>
 800260a:	bf00      	nop
 800260c:	0000      	movs	r0, r0
	...

08002610 <chIQGetTimeout>:
 8002610:	b570      	push	{r4, r5, r6, lr}
 8002612:	2320      	movs	r3, #32
 8002614:	460e      	mov	r6, r1
 8002616:	4604      	mov	r4, r0
 8002618:	f383 8811 	msr	BASEPRI, r3
 800261c:	69c3      	ldr	r3, [r0, #28]
 800261e:	b12b      	cbz	r3, 800262c <chIQGetTimeout+0x1c>
 8002620:	4798      	blx	r3
 8002622:	e003      	b.n	800262c <chIQGetTimeout+0x1c>
 8002624:	f7ff fef4 	bl	8002410 <chThdEnqueueTimeoutS>
 8002628:	2800      	cmp	r0, #0
 800262a:	db15      	blt.n	8002658 <chIQGetTimeout+0x48>
 800262c:	68a5      	ldr	r5, [r4, #8]
 800262e:	4631      	mov	r1, r6
 8002630:	4620      	mov	r0, r4
 8002632:	2d00      	cmp	r5, #0
 8002634:	d0f6      	beq.n	8002624 <chIQGetTimeout+0x14>
 8002636:	69a2      	ldr	r2, [r4, #24]
 8002638:	6921      	ldr	r1, [r4, #16]
 800263a:	1c53      	adds	r3, r2, #1
 800263c:	428b      	cmp	r3, r1
 800263e:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8002642:	61a3      	str	r3, [r4, #24]
 8002644:	60a5      	str	r5, [r4, #8]
 8002646:	bf28      	it	cs
 8002648:	68e3      	ldrcs	r3, [r4, #12]
 800264a:	7810      	ldrb	r0, [r2, #0]
 800264c:	bf28      	it	cs
 800264e:	61a3      	strcs	r3, [r4, #24]
 8002650:	2300      	movs	r3, #0
 8002652:	f383 8811 	msr	BASEPRI, r3
 8002656:	bd70      	pop	{r4, r5, r6, pc}
 8002658:	f385 8811 	msr	BASEPRI, r5
 800265c:	bd70      	pop	{r4, r5, r6, pc}
 800265e:	bf00      	nop

08002660 <thread1.lto_priv.70>:
 8002660:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8002664:	4801      	ldr	r0, [pc, #4]	; (800266c <thread1.lto_priv.70+0xc>)
 8002666:	f7ff bfd3 	b.w	8002610 <chIQGetTimeout>
 800266a:	bf00      	nop
 800266c:	20000810 	.word	0x20000810

08002670 <gett>:
 8002670:	300c      	adds	r0, #12
 8002672:	f7ff bfcd 	b.w	8002610 <chIQGetTimeout>
 8002676:	bf00      	nop
	...

08002680 <get>:
 8002680:	300c      	adds	r0, #12
 8002682:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002686:	f7ff bfc3 	b.w	8002610 <chIQGetTimeout>
 800268a:	bf00      	nop
 800268c:	0000      	movs	r0, r0
	...

08002690 <chThdSleep>:
 8002690:	b508      	push	{r3, lr}
 8002692:	4601      	mov	r1, r0
 8002694:	2320      	movs	r3, #32
 8002696:	f383 8811 	msr	BASEPRI, r3
 800269a:	2008      	movs	r0, #8
 800269c:	f7ff fa50 	bl	8001b40 <chSchGoSleepTimeoutS>
 80026a0:	2300      	movs	r3, #0
 80026a2:	f383 8811 	msr	BASEPRI, r3
 80026a6:	bd08      	pop	{r3, pc}
	...

080026b0 <Thread1>:
 80026b0:	4b12      	ldr	r3, [pc, #72]	; (80026fc <Thread1+0x4c>)
 80026b2:	4a13      	ldr	r2, [pc, #76]	; (8002700 <Thread1+0x50>)
 80026b4:	699b      	ldr	r3, [r3, #24]
 80026b6:	4c13      	ldr	r4, [pc, #76]	; (8002704 <Thread1+0x54>)
 80026b8:	b580      	push	{r7, lr}
 80026ba:	f04f 0801 	mov.w	r8, #1
 80026be:	619a      	str	r2, [r3, #24]
 80026c0:	f640 10c4 	movw	r0, #2500	; 0x9c4
 80026c4:	2702      	movs	r7, #2
 80026c6:	f8a4 801a 	strh.w	r8, [r4, #26]
 80026ca:	f7ff ffe1 	bl	8002690 <chThdSleep>
 80026ce:	2604      	movs	r6, #4
 80026d0:	f8a4 8018 	strh.w	r8, [r4, #24]
 80026d4:	f640 10c4 	movw	r0, #2500	; 0x9c4
 80026d8:	8367      	strh	r7, [r4, #26]
 80026da:	f7ff ffd9 	bl	8002690 <chThdSleep>
 80026de:	2508      	movs	r5, #8
 80026e0:	8327      	strh	r7, [r4, #24]
 80026e2:	f640 10c4 	movw	r0, #2500	; 0x9c4
 80026e6:	8366      	strh	r6, [r4, #26]
 80026e8:	f7ff ffd2 	bl	8002690 <chThdSleep>
 80026ec:	8326      	strh	r6, [r4, #24]
 80026ee:	f640 10c4 	movw	r0, #2500	; 0x9c4
 80026f2:	8365      	strh	r5, [r4, #26]
 80026f4:	f7ff ffcc 	bl	8002690 <chThdSleep>
 80026f8:	8325      	strh	r5, [r4, #24]
 80026fa:	e7e1      	b.n	80026c0 <Thread1+0x10>
 80026fc:	20000938 	.word	0x20000938
 8002700:	08005bf0 	.word	0x08005bf0
 8002704:	48000800 	.word	0x48000800
	...

08002710 <sys1_execute>:
 8002710:	b510      	push	{r4, lr}
 8002712:	b086      	sub	sp, #24
 8002714:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8002718:	b91b      	cbnz	r3, 8002722 <sys1_execute+0x12>
 800271a:	f7fe fd49 	bl	80011b0 <chSysGetStatusAndLockX.part.2>
 800271e:	f7fe ffe7 	bl	80016f0 <chSysRestoreStatusX.part.3>
 8002722:	2320      	movs	r3, #32
 8002724:	f383 8811 	msr	BASEPRI, r3
 8002728:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800272c:	b91b      	cbnz	r3, 8002736 <sys1_execute+0x26>
 800272e:	f7fe fd3f 	bl	80011b0 <chSysGetStatusAndLockX.part.2>
 8002732:	f7fe ffdd 	bl	80016f0 <chSysRestoreStatusX.part.3>
 8002736:	2300      	movs	r3, #0
 8002738:	f383 8811 	msr	BASEPRI, r3
 800273c:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8002740:	b913      	cbnz	r3, 8002748 <sys1_execute+0x38>
 8002742:	2320      	movs	r3, #32
 8002744:	f383 8811 	msr	BASEPRI, r3
 8002748:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800274c:	b913      	cbnz	r3, 8002754 <sys1_execute+0x44>
 800274e:	2320      	movs	r3, #32
 8002750:	f383 8811 	msr	BASEPRI, r3
 8002754:	2300      	movs	r3, #0
 8002756:	f383 8811 	msr	BASEPRI, r3
 800275a:	2220      	movs	r2, #32
 800275c:	f382 8811 	msr	BASEPRI, r2
 8002760:	f3ef 8212 	mrs	r2, BASEPRI_MAX
 8002764:	b10a      	cbz	r2, 800276a <sys1_execute+0x5a>
 8002766:	f383 8811 	msr	BASEPRI, r3
 800276a:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800276e:	b113      	cbz	r3, 8002776 <sys1_execute+0x66>
 8002770:	2300      	movs	r3, #0
 8002772:	f383 8811 	msr	BASEPRI, r3
 8002776:	2300      	movs	r3, #0
 8002778:	9304      	str	r3, [sp, #16]
 800277a:	2320      	movs	r3, #32
 800277c:	f383 8811 	msr	BASEPRI, r3
 8002780:	9b04      	ldr	r3, [sp, #16]
 8002782:	ac01      	add	r4, sp, #4
 8002784:	b113      	cbz	r3, 800278c <sys1_execute+0x7c>
 8002786:	4620      	mov	r0, r4
 8002788:	f7fe fc7a 	bl	8001080 <chVTDoResetI>
 800278c:	4620      	mov	r0, r4
 800278e:	2300      	movs	r3, #0
 8002790:	4a0b      	ldr	r2, [pc, #44]	; (80027c0 <sys1_execute+0xb0>)
 8002792:	2101      	movs	r1, #1
 8002794:	f7fe fcac 	bl	80010f0 <chVTDoSetI>
 8002798:	2400      	movs	r4, #0
 800279a:	f384 8811 	msr	BASEPRI, r4
 800279e:	200a      	movs	r0, #10
 80027a0:	f7ff ff76 	bl	8002690 <chThdSleep>
 80027a4:	2320      	movs	r3, #32
 80027a6:	f383 8811 	msr	BASEPRI, r3
 80027aa:	9904      	ldr	r1, [sp, #16]
 80027ac:	f384 8811 	msr	BASEPRI, r4
 80027b0:	fab1 f181 	clz	r1, r1
 80027b4:	0949      	lsrs	r1, r1, #5
 80027b6:	2001      	movs	r0, #1
 80027b8:	f7fd ffda 	bl	8000770 <_test_assert>
 80027bc:	b006      	add	sp, #24
 80027be:	bd10      	pop	{r4, pc}
 80027c0:	08001711 	.word	0x08001711
	...

080027d0 <thread1.lto_priv.69>:
 80027d0:	b510      	push	{r4, lr}
 80027d2:	4604      	mov	r4, r0
 80027d4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80027d8:	f7ff ff5a 	bl	8002690 <chThdSleep>
 80027dc:	2320      	movs	r3, #32
 80027de:	f383 8811 	msr	BASEPRI, r3
 80027e2:	2101      	movs	r1, #1
 80027e4:	4620      	mov	r0, r4
 80027e6:	f7fe fad3 	bl	8000d90 <chEvtSignalI>
 80027ea:	f7fe fe79 	bl	80014e0 <chSchRescheduleS>
 80027ee:	2300      	movs	r3, #0
 80027f0:	f383 8811 	msr	BASEPRI, r3
 80027f4:	bd10      	pop	{r4, pc}
 80027f6:	bf00      	nop
	...

08002800 <thread2.lto_priv.75>:
 8002800:	b538      	push	{r3, r4, r5, lr}
 8002802:	2520      	movs	r5, #32
 8002804:	f385 8811 	msr	BASEPRI, r5
 8002808:	2100      	movs	r1, #0
 800280a:	480b      	ldr	r0, [pc, #44]	; (8002838 <thread2.lto_priv.75+0x38>)
 800280c:	f7fe fad8 	bl	8000dc0 <chEvtBroadcastFlagsI>
 8002810:	2400      	movs	r4, #0
 8002812:	f7fe fe65 	bl	80014e0 <chSchRescheduleS>
 8002816:	f384 8811 	msr	BASEPRI, r4
 800281a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800281e:	f7ff ff37 	bl	8002690 <chThdSleep>
 8002822:	f385 8811 	msr	BASEPRI, r5
 8002826:	4805      	ldr	r0, [pc, #20]	; (800283c <thread2.lto_priv.75+0x3c>)
 8002828:	4621      	mov	r1, r4
 800282a:	f7fe fac9 	bl	8000dc0 <chEvtBroadcastFlagsI>
 800282e:	f7fe fe57 	bl	80014e0 <chSchRescheduleS>
 8002832:	f384 8811 	msr	BASEPRI, r4
 8002836:	bd38      	pop	{r3, r4, r5, pc}
 8002838:	20000808 	.word	0x20000808
 800283c:	2000080c 	.word	0x2000080c

08002840 <thread2.lto_priv.74>:
 8002840:	b508      	push	{r3, lr}
 8002842:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002846:	f7ff ff23 	bl	8002690 <chThdSleep>
 800284a:	2320      	movs	r3, #32
 800284c:	f383 8811 	msr	BASEPRI, r3
 8002850:	4804      	ldr	r0, [pc, #16]	; (8002864 <thread2.lto_priv.74+0x24>)
 8002852:	f7fe fb8d 	bl	8000f70 <chSemSignalI>
 8002856:	f7fe fe43 	bl	80014e0 <chSchRescheduleS>
 800285a:	2300      	movs	r3, #0
 800285c:	f383 8811 	msr	BASEPRI, r3
 8002860:	bd08      	pop	{r3, pc}
 8002862:	bf00      	nop
 8002864:	200008ac 	.word	0x200008ac
	...

08002870 <test_wait_tick>:
 8002870:	b508      	push	{r3, lr}
 8002872:	2001      	movs	r0, #1
 8002874:	f7ff ff0c 	bl	8002690 <chThdSleep>
 8002878:	2320      	movs	r3, #32
 800287a:	f383 8811 	msr	BASEPRI, r3
 800287e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002882:	2300      	movs	r3, #0
 8002884:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8002886:	f383 8811 	msr	BASEPRI, r3
 800288a:	bd08      	pop	{r3, pc}
 800288c:	0000      	movs	r0, r0
	...

08002890 <bmk10_execute>:
 8002890:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002894:	f7ff ffec 	bl	8002870 <test_wait_tick>
 8002898:	f7fe fc6a 	bl	8001170 <test_start_timer.constprop.1>
 800289c:	2400      	movs	r4, #0
 800289e:	f8df a070 	ldr.w	sl, [pc, #112]	; 8002910 <bmk10_execute+0x80>
 80028a2:	4f16      	ldr	r7, [pc, #88]	; (80028fc <bmk10_execute+0x6c>)
 80028a4:	4e16      	ldr	r6, [pc, #88]	; (8002900 <bmk10_execute+0x70>)
 80028a6:	4d17      	ldr	r5, [pc, #92]	; (8002904 <bmk10_execute+0x74>)
 80028a8:	46a1      	mov	r9, r4
 80028aa:	f04f 0820 	mov.w	r8, #32
 80028ae:	f388 8811 	msr	BASEPRI, r8
 80028b2:	2300      	movs	r3, #0
 80028b4:	463a      	mov	r2, r7
 80028b6:	4630      	mov	r0, r6
 80028b8:	2101      	movs	r1, #1
 80028ba:	f7fe fc19 	bl	80010f0 <chVTDoSetI>
 80028be:	463a      	mov	r2, r7
 80028c0:	2300      	movs	r3, #0
 80028c2:	f242 7110 	movw	r1, #10000	; 0x2710
 80028c6:	4628      	mov	r0, r5
 80028c8:	f7fe fc12 	bl	80010f0 <chVTDoSetI>
 80028cc:	4630      	mov	r0, r6
 80028ce:	f7fe fbd7 	bl	8001080 <chVTDoResetI>
 80028d2:	4628      	mov	r0, r5
 80028d4:	f7fe fbd4 	bl	8001080 <chVTDoResetI>
 80028d8:	f389 8811 	msr	BASEPRI, r9
 80028dc:	f89a 3000 	ldrb.w	r3, [sl]
 80028e0:	3401      	adds	r4, #1
 80028e2:	2b00      	cmp	r3, #0
 80028e4:	d0e3      	beq.n	80028ae <bmk10_execute+0x1e>
 80028e6:	4808      	ldr	r0, [pc, #32]	; (8002908 <bmk10_execute+0x78>)
 80028e8:	f7fd ffb2 	bl	8000850 <test_print>
 80028ec:	0060      	lsls	r0, r4, #1
 80028ee:	f7fd feb7 	bl	8000660 <test_printn>
 80028f2:	4806      	ldr	r0, [pc, #24]	; (800290c <bmk10_execute+0x7c>)
 80028f4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80028f8:	f7fd bf8a 	b.w	8000810 <test_println>
 80028fc:	08000361 	.word	0x08000361
 8002900:	20001210 	.word	0x20001210
 8002904:	20001224 	.word	0x20001224
 8002908:	08005c20 	.word	0x08005c20
 800290c:	08005c30 	.word	0x08005c30
 8002910:	200011d0 	.word	0x200011d0
	...

08002920 <bmk9_execute>:
 8002920:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002922:	4b26      	ldr	r3, [pc, #152]	; (80029bc <bmk9_execute+0x9c>)
 8002924:	4c26      	ldr	r4, [pc, #152]	; (80029c0 <bmk9_execute+0xa0>)
 8002926:	4f27      	ldr	r7, [pc, #156]	; (80029c4 <bmk9_execute+0xa4>)
 8002928:	60e3      	str	r3, [r4, #12]
 800292a:	f103 0210 	add.w	r2, r3, #16
 800292e:	2500      	movs	r5, #0
 8002930:	6122      	str	r2, [r4, #16]
 8002932:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8002936:	6024      	str	r4, [r4, #0]
 8002938:	6064      	str	r4, [r4, #4]
 800293a:	60a5      	str	r5, [r4, #8]
 800293c:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8002940:	f7ff ff96 	bl	8002870 <test_wait_tick>
 8002944:	f7fe fc14 	bl	8001170 <test_start_timer.constprop.1>
 8002948:	462e      	mov	r6, r5
 800294a:	2320      	movs	r3, #32
 800294c:	f383 8811 	msr	BASEPRI, r3
 8002950:	2100      	movs	r1, #0
 8002952:	4620      	mov	r0, r4
 8002954:	f7fe f9cc 	bl	8000cf0 <chIQPutI>
 8002958:	4620      	mov	r0, r4
 800295a:	2101      	movs	r1, #1
 800295c:	f7fe f9c8 	bl	8000cf0 <chIQPutI>
 8002960:	4620      	mov	r0, r4
 8002962:	2102      	movs	r1, #2
 8002964:	f7fe f9c4 	bl	8000cf0 <chIQPutI>
 8002968:	4620      	mov	r0, r4
 800296a:	2103      	movs	r1, #3
 800296c:	f7fe f9c0 	bl	8000cf0 <chIQPutI>
 8002970:	f386 8811 	msr	BASEPRI, r6
 8002974:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002978:	4620      	mov	r0, r4
 800297a:	f7ff fe49 	bl	8002610 <chIQGetTimeout>
 800297e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002982:	4620      	mov	r0, r4
 8002984:	f7ff fe44 	bl	8002610 <chIQGetTimeout>
 8002988:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800298c:	4620      	mov	r0, r4
 800298e:	f7ff fe3f 	bl	8002610 <chIQGetTimeout>
 8002992:	4620      	mov	r0, r4
 8002994:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002998:	f7ff fe3a 	bl	8002610 <chIQGetTimeout>
 800299c:	783b      	ldrb	r3, [r7, #0]
 800299e:	3501      	adds	r5, #1
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	d0d2      	beq.n	800294a <bmk9_execute+0x2a>
 80029a4:	4808      	ldr	r0, [pc, #32]	; (80029c8 <bmk9_execute+0xa8>)
 80029a6:	f7fd ff53 	bl	8000850 <test_print>
 80029aa:	00a8      	lsls	r0, r5, #2
 80029ac:	f7fd fe58 	bl	8000660 <test_printn>
 80029b0:	4806      	ldr	r0, [pc, #24]	; (80029cc <bmk9_execute+0xac>)
 80029b2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80029b6:	f7fd bf2b 	b.w	8000810 <test_println>
 80029ba:	bf00      	nop
 80029bc:	20000ad8 	.word	0x20000ad8
 80029c0:	20000ae8 	.word	0x20000ae8
 80029c4:	200011d0 	.word	0x200011d0
 80029c8:	08005c20 	.word	0x08005c20
 80029cc:	08005d60 	.word	0x08005d60

080029d0 <bmk6_execute>:
 80029d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80029d4:	4b14      	ldr	r3, [pc, #80]	; (8002a28 <bmk6_execute+0x58>)
 80029d6:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8002a38 <bmk6_execute+0x68>
 80029da:	699b      	ldr	r3, [r3, #24]
 80029dc:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8002a3c <bmk6_execute+0x6c>
 80029e0:	689d      	ldr	r5, [r3, #8]
 80029e2:	4f12      	ldr	r7, [pc, #72]	; (8002a2c <bmk6_execute+0x5c>)
 80029e4:	b083      	sub	sp, #12
 80029e6:	f7ff ff43 	bl	8002870 <test_wait_tick>
 80029ea:	f7fe fbc1 	bl	8001170 <test_start_timer.constprop.1>
 80029ee:	2400      	movs	r4, #0
 80029f0:	3501      	adds	r5, #1
 80029f2:	4626      	mov	r6, r4
 80029f4:	4643      	mov	r3, r8
 80029f6:	9600      	str	r6, [sp, #0]
 80029f8:	462a      	mov	r2, r5
 80029fa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80029fe:	4638      	mov	r0, r7
 8002a00:	f7fe ff7e 	bl	8001900 <chThdCreateStatic>
 8002a04:	f899 3000 	ldrb.w	r3, [r9]
 8002a08:	3401      	adds	r4, #1
 8002a0a:	2b00      	cmp	r3, #0
 8002a0c:	d0f2      	beq.n	80029f4 <bmk6_execute+0x24>
 8002a0e:	4808      	ldr	r0, [pc, #32]	; (8002a30 <bmk6_execute+0x60>)
 8002a10:	f7fd ff1e 	bl	8000850 <test_print>
 8002a14:	4620      	mov	r0, r4
 8002a16:	f7fd fe23 	bl	8000660 <test_printn>
 8002a1a:	4806      	ldr	r0, [pc, #24]	; (8002a34 <bmk6_execute+0x64>)
 8002a1c:	b003      	add	sp, #12
 8002a1e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002a22:	f7fd bef5 	b.w	8000810 <test_println>
 8002a26:	bf00      	nop
 8002a28:	20000938 	.word	0x20000938
 8002a2c:	20000b40 	.word	0x20000b40
 8002a30:	08005c20 	.word	0x08005c20
 8002a34:	08005d20 	.word	0x08005d20
 8002a38:	200011d0 	.word	0x200011d0
 8002a3c:	08005bb1 	.word	0x08005bb1

08002a40 <thd4_execute>:
 8002a40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a42:	f7ff ff15 	bl	8002870 <test_wait_tick>
 8002a46:	2620      	movs	r6, #32
 8002a48:	f386 8811 	msr	BASEPRI, r6
 8002a4c:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8002a50:	2300      	movs	r3, #0
 8002a52:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002a54:	f383 8811 	msr	BASEPRI, r3
 8002a58:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002a5c:	f7ff fe18 	bl	8002690 <chThdSleep>
 8002a60:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8002a64:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8002a68:	2001      	movs	r0, #1
 8002a6a:	f7fd fe39 	bl	80006e0 <_test_assert_time_window>
 8002a6e:	b100      	cbz	r0, 8002a72 <thd4_execute+0x32>
 8002a70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a72:	f386 8811 	msr	BASEPRI, r6
 8002a76:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002a78:	f380 8811 	msr	BASEPRI, r0
 8002a7c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002a80:	f7ff fe06 	bl	8002690 <chThdSleep>
 8002a84:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8002a88:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8002a8c:	2002      	movs	r0, #2
 8002a8e:	f7fd fe27 	bl	80006e0 <_test_assert_time_window>
 8002a92:	2800      	cmp	r0, #0
 8002a94:	d1ec      	bne.n	8002a70 <thd4_execute+0x30>
 8002a96:	f386 8811 	msr	BASEPRI, r6
 8002a9a:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002a9c:	f380 8811 	msr	BASEPRI, r0
 8002aa0:	f242 7010 	movw	r0, #10000	; 0x2710
 8002aa4:	f7ff fdf4 	bl	8002690 <chThdSleep>
 8002aa8:	f504 521c 	add.w	r2, r4, #9984	; 0x2700
 8002aac:	4611      	mov	r1, r2
 8002aae:	3110      	adds	r1, #16
 8002ab0:	3213      	adds	r2, #19
 8002ab2:	2003      	movs	r0, #3
 8002ab4:	f7fd fe14 	bl	80006e0 <_test_assert_time_window>
 8002ab8:	2800      	cmp	r0, #0
 8002aba:	d1d9      	bne.n	8002a70 <thd4_execute+0x30>
 8002abc:	f386 8811 	msr	BASEPRI, r6
 8002ac0:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 8002ac2:	f380 8811 	msr	BASEPRI, r0
 8002ac6:	f507 747a 	add.w	r4, r7, #1000	; 0x3e8
 8002aca:	f386 8811 	msr	BASEPRI, r6
 8002ace:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002ad0:	1a61      	subs	r1, r4, r1
 8002ad2:	d002      	beq.n	8002ada <thd4_execute+0x9a>
 8002ad4:	2008      	movs	r0, #8
 8002ad6:	f7ff f833 	bl	8001b40 <chSchGoSleepTimeoutS>
 8002ada:	2300      	movs	r3, #0
 8002adc:	f383 8811 	msr	BASEPRI, r3
 8002ae0:	2004      	movs	r0, #4
 8002ae2:	f207 32eb 	addw	r2, r7, #1003	; 0x3eb
 8002ae6:	4621      	mov	r1, r4
 8002ae8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002aec:	f7fd bdf8 	b.w	80006e0 <_test_assert_time_window>

08002af0 <chMsgWait>:
 8002af0:	b510      	push	{r4, lr}
 8002af2:	2320      	movs	r3, #32
 8002af4:	f383 8811 	msr	BASEPRI, r3
 8002af8:	4c0b      	ldr	r4, [pc, #44]	; (8002b28 <chMsgWait+0x38>)
 8002afa:	69a2      	ldr	r2, [r4, #24]
 8002afc:	4613      	mov	r3, r2
 8002afe:	f853 0f28 	ldr.w	r0, [r3, #40]!
 8002b02:	4298      	cmp	r0, r3
 8002b04:	d008      	beq.n	8002b18 <chMsgWait+0x28>
 8002b06:	6801      	ldr	r1, [r0, #0]
 8002b08:	6291      	str	r1, [r2, #40]	; 0x28
 8002b0a:	220d      	movs	r2, #13
 8002b0c:	604b      	str	r3, [r1, #4]
 8002b0e:	2300      	movs	r3, #0
 8002b10:	7702      	strb	r2, [r0, #28]
 8002b12:	f383 8811 	msr	BASEPRI, r3
 8002b16:	bd10      	pop	{r4, pc}
 8002b18:	200e      	movs	r0, #14
 8002b1a:	f7fe ff29 	bl	8001970 <chSchGoSleepS>
 8002b1e:	69a2      	ldr	r2, [r4, #24]
 8002b20:	6a90      	ldr	r0, [r2, #40]	; 0x28
 8002b22:	f102 0328 	add.w	r3, r2, #40	; 0x28
 8002b26:	e7ee      	b.n	8002b06 <chMsgWait+0x16>
 8002b28:	20000938 	.word	0x20000938
 8002b2c:	00000000 	.word	0x00000000

08002b30 <thread2.lto_priv.77>:
 8002b30:	b570      	push	{r4, r5, r6, lr}
 8002b32:	2620      	movs	r6, #32
 8002b34:	2500      	movs	r5, #0
 8002b36:	f7ff ffdb 	bl	8002af0 <chMsgWait>
 8002b3a:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8002b3c:	f386 8811 	msr	BASEPRI, r6
 8002b40:	4621      	mov	r1, r4
 8002b42:	f7fe fdfd 	bl	8001740 <chSchWakeupS>
 8002b46:	f385 8811 	msr	BASEPRI, r5
 8002b4a:	2c00      	cmp	r4, #0
 8002b4c:	d1f3      	bne.n	8002b36 <thread2.lto_priv.77+0x6>
 8002b4e:	bd70      	pop	{r4, r5, r6, pc}

08002b50 <msg1_execute>:
 8002b50:	b570      	push	{r4, r5, r6, lr}
 8002b52:	4a1f      	ldr	r2, [pc, #124]	; (8002bd0 <msg1_execute+0x80>)
 8002b54:	4b1f      	ldr	r3, [pc, #124]	; (8002bd4 <msg1_execute+0x84>)
 8002b56:	6991      	ldr	r1, [r2, #24]
 8002b58:	481f      	ldr	r0, [pc, #124]	; (8002bd8 <msg1_execute+0x88>)
 8002b5a:	688a      	ldr	r2, [r1, #8]
 8002b5c:	b082      	sub	sp, #8
 8002b5e:	3201      	adds	r2, #1
 8002b60:	9100      	str	r1, [sp, #0]
 8002b62:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8002b66:	f7fe fecb 	bl	8001900 <chThdCreateStatic>
 8002b6a:	4b1c      	ldr	r3, [pc, #112]	; (8002bdc <msg1_execute+0x8c>)
 8002b6c:	6018      	str	r0, [r3, #0]
 8002b6e:	f7ff ffbf 	bl	8002af0 <chMsgWait>
 8002b72:	2520      	movs	r5, #32
 8002b74:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002b76:	f385 8811 	msr	BASEPRI, r5
 8002b7a:	4631      	mov	r1, r6
 8002b7c:	f7fe fde0 	bl	8001740 <chSchWakeupS>
 8002b80:	2400      	movs	r4, #0
 8002b82:	f384 8811 	msr	BASEPRI, r4
 8002b86:	b2f0      	uxtb	r0, r6
 8002b88:	f7fd fe0a 	bl	80007a0 <test_emit_token>
 8002b8c:	f7ff ffb0 	bl	8002af0 <chMsgWait>
 8002b90:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002b92:	f385 8811 	msr	BASEPRI, r5
 8002b96:	4631      	mov	r1, r6
 8002b98:	f7fe fdd2 	bl	8001740 <chSchWakeupS>
 8002b9c:	f384 8811 	msr	BASEPRI, r4
 8002ba0:	b2f0      	uxtb	r0, r6
 8002ba2:	f7fd fdfd 	bl	80007a0 <test_emit_token>
 8002ba6:	f7ff ffa3 	bl	8002af0 <chMsgWait>
 8002baa:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002bac:	f385 8811 	msr	BASEPRI, r5
 8002bb0:	4631      	mov	r1, r6
 8002bb2:	f7fe fdc5 	bl	8001740 <chSchWakeupS>
 8002bb6:	f384 8811 	msr	BASEPRI, r4
 8002bba:	b2f0      	uxtb	r0, r6
 8002bbc:	f7fd fdf0 	bl	80007a0 <test_emit_token>
 8002bc0:	4907      	ldr	r1, [pc, #28]	; (8002be0 <msg1_execute+0x90>)
 8002bc2:	2001      	movs	r0, #1
 8002bc4:	b002      	add	sp, #8
 8002bc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002bca:	f7fd bda9 	b.w	8000720 <_test_assert_sequence>
 8002bce:	bf00      	nop
 8002bd0:	20000938 	.word	0x20000938
 8002bd4:	08002c61 	.word	0x08002c61
 8002bd8:	20000b40 	.word	0x20000b40
 8002bdc:	200011d4 	.word	0x200011d4
 8002be0:	08005dd0 	.word	0x08005dd0
	...

08002bf0 <chMsgSend>:
 8002bf0:	4b0e      	ldr	r3, [pc, #56]	; (8002c2c <chMsgSend+0x3c>)
 8002bf2:	b510      	push	{r4, lr}
 8002bf4:	2220      	movs	r2, #32
 8002bf6:	699c      	ldr	r4, [r3, #24]
 8002bf8:	f382 8811 	msr	BASEPRI, r2
 8002bfc:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8002c00:	6222      	str	r2, [r4, #32]
 8002c02:	6022      	str	r2, [r4, #0]
 8002c04:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8002c06:	6062      	str	r2, [r4, #4]
 8002c08:	6321      	str	r1, [r4, #48]	; 0x30
 8002c0a:	6014      	str	r4, [r2, #0]
 8002c0c:	7f02      	ldrb	r2, [r0, #28]
 8002c0e:	62c4      	str	r4, [r0, #44]	; 0x2c
 8002c10:	2a0e      	cmp	r2, #14
 8002c12:	d007      	beq.n	8002c24 <chMsgSend+0x34>
 8002c14:	200c      	movs	r0, #12
 8002c16:	f7fe feab 	bl	8001970 <chSchGoSleepS>
 8002c1a:	6a20      	ldr	r0, [r4, #32]
 8002c1c:	2300      	movs	r3, #0
 8002c1e:	f383 8811 	msr	BASEPRI, r3
 8002c22:	bd10      	pop	{r4, pc}
 8002c24:	f7fe f834 	bl	8000c90 <chSchReadyI>
 8002c28:	e7f4      	b.n	8002c14 <chMsgSend+0x24>
 8002c2a:	bf00      	nop
 8002c2c:	20000938 	.word	0x20000938

08002c30 <msg_loop_test>:
 8002c30:	b570      	push	{r4, r5, r6, lr}
 8002c32:	4605      	mov	r5, r0
 8002c34:	f7ff fe1c 	bl	8002870 <test_wait_tick>
 8002c38:	f7fe fa9a 	bl	8001170 <test_start_timer.constprop.1>
 8002c3c:	4e07      	ldr	r6, [pc, #28]	; (8002c5c <msg_loop_test+0x2c>)
 8002c3e:	2400      	movs	r4, #0
 8002c40:	2101      	movs	r1, #1
 8002c42:	4628      	mov	r0, r5
 8002c44:	f7ff ffd4 	bl	8002bf0 <chMsgSend>
 8002c48:	7833      	ldrb	r3, [r6, #0]
 8002c4a:	3401      	adds	r4, #1
 8002c4c:	2b00      	cmp	r3, #0
 8002c4e:	d0f7      	beq.n	8002c40 <msg_loop_test+0x10>
 8002c50:	4628      	mov	r0, r5
 8002c52:	2100      	movs	r1, #0
 8002c54:	f7ff ffcc 	bl	8002bf0 <chMsgSend>
 8002c58:	4620      	mov	r0, r4
 8002c5a:	bd70      	pop	{r4, r5, r6, pc}
 8002c5c:	200011d0 	.word	0x200011d0

08002c60 <thread.lto_priv.59>:
 8002c60:	b510      	push	{r4, lr}
 8002c62:	2141      	movs	r1, #65	; 0x41
 8002c64:	4604      	mov	r4, r0
 8002c66:	f7ff ffc3 	bl	8002bf0 <chMsgSend>
 8002c6a:	4620      	mov	r0, r4
 8002c6c:	2142      	movs	r1, #66	; 0x42
 8002c6e:	f7ff ffbf 	bl	8002bf0 <chMsgSend>
 8002c72:	4620      	mov	r0, r4
 8002c74:	2143      	movs	r1, #67	; 0x43
 8002c76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c7a:	f7ff bfb9 	b.w	8002bf0 <chMsgSend>
 8002c7e:	bf00      	nop

08002c80 <chMtxLockS>:
 8002c80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c82:	4a36      	ldr	r2, [pc, #216]	; (8002d5c <chMtxLockS+0xdc>)
 8002c84:	6883      	ldr	r3, [r0, #8]
 8002c86:	6995      	ldr	r5, [r2, #24]
 8002c88:	2b00      	cmp	r3, #0
 8002c8a:	d03f      	beq.n	8002d0c <chMtxLockS+0x8c>
 8002c8c:	68a9      	ldr	r1, [r5, #8]
 8002c8e:	689a      	ldr	r2, [r3, #8]
 8002c90:	4291      	cmp	r1, r2
 8002c92:	4604      	mov	r4, r0
 8002c94:	d906      	bls.n	8002ca4 <chMtxLockS+0x24>
 8002c96:	7f1a      	ldrb	r2, [r3, #28]
 8002c98:	6099      	str	r1, [r3, #8]
 8002c9a:	2a06      	cmp	r2, #6
 8002c9c:	d03b      	beq.n	8002d16 <chMtxLockS+0x96>
 8002c9e:	2a07      	cmp	r2, #7
 8002ca0:	d015      	beq.n	8002cce <chMtxLockS+0x4e>
 8002ca2:	b342      	cbz	r2, 8002cf6 <chMtxLockS+0x76>
 8002ca4:	4626      	mov	r6, r4
 8002ca6:	4623      	mov	r3, r4
 8002ca8:	e003      	b.n	8002cb2 <chMtxLockS+0x32>
 8002caa:	6899      	ldr	r1, [r3, #8]
 8002cac:	68aa      	ldr	r2, [r5, #8]
 8002cae:	4291      	cmp	r1, r2
 8002cb0:	d32a      	bcc.n	8002d08 <chMtxLockS+0x88>
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	429c      	cmp	r4, r3
 8002cb6:	d1f8      	bne.n	8002caa <chMtxLockS+0x2a>
 8002cb8:	6873      	ldr	r3, [r6, #4]
 8002cba:	2006      	movs	r0, #6
 8002cbc:	e9c5 6300 	strd	r6, r3, [r5]
 8002cc0:	601d      	str	r5, [r3, #0]
 8002cc2:	6075      	str	r5, [r6, #4]
 8002cc4:	622c      	str	r4, [r5, #32]
 8002cc6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002cca:	f7fe be51 	b.w	8001970 <chSchGoSleepS>
 8002cce:	e9d3 0200 	ldrd	r0, r2, [r3]
 8002cd2:	6010      	str	r0, [r2, #0]
 8002cd4:	6a1e      	ldr	r6, [r3, #32]
 8002cd6:	6818      	ldr	r0, [r3, #0]
 8002cd8:	6042      	str	r2, [r0, #4]
 8002cda:	4632      	mov	r2, r6
 8002cdc:	e002      	b.n	8002ce4 <chMtxLockS+0x64>
 8002cde:	6890      	ldr	r0, [r2, #8]
 8002ce0:	4288      	cmp	r0, r1
 8002ce2:	d332      	bcc.n	8002d4a <chMtxLockS+0xca>
 8002ce4:	6812      	ldr	r2, [r2, #0]
 8002ce6:	4296      	cmp	r6, r2
 8002ce8:	d1f9      	bne.n	8002cde <chMtxLockS+0x5e>
 8002cea:	6872      	ldr	r2, [r6, #4]
 8002cec:	e9c3 6200 	strd	r6, r2, [r3]
 8002cf0:	6013      	str	r3, [r2, #0]
 8002cf2:	6073      	str	r3, [r6, #4]
 8002cf4:	e7d6      	b.n	8002ca4 <chMtxLockS+0x24>
 8002cf6:	e9d3 1200 	ldrd	r1, r2, [r3]
 8002cfa:	6011      	str	r1, [r2, #0]
 8002cfc:	6819      	ldr	r1, [r3, #0]
 8002cfe:	4618      	mov	r0, r3
 8002d00:	604a      	str	r2, [r1, #4]
 8002d02:	f7fd ffc5 	bl	8000c90 <chSchReadyI>
 8002d06:	e7cd      	b.n	8002ca4 <chMtxLockS+0x24>
 8002d08:	461e      	mov	r6, r3
 8002d0a:	e7d5      	b.n	8002cb8 <chMtxLockS+0x38>
 8002d0c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8002d0e:	e9c0 5302 	strd	r5, r3, [r0, #8]
 8002d12:	63a8      	str	r0, [r5, #56]	; 0x38
 8002d14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002d16:	e9d3 0200 	ldrd	r0, r2, [r3]
 8002d1a:	6010      	str	r0, [r2, #0]
 8002d1c:	6a1e      	ldr	r6, [r3, #32]
 8002d1e:	6818      	ldr	r0, [r3, #0]
 8002d20:	4637      	mov	r7, r6
 8002d22:	6042      	str	r2, [r0, #4]
 8002d24:	4632      	mov	r2, r6
 8002d26:	e002      	b.n	8002d2e <chMtxLockS+0xae>
 8002d28:	6890      	ldr	r0, [r2, #8]
 8002d2a:	4288      	cmp	r0, r1
 8002d2c:	d314      	bcc.n	8002d58 <chMtxLockS+0xd8>
 8002d2e:	6812      	ldr	r2, [r2, #0]
 8002d30:	4296      	cmp	r6, r2
 8002d32:	d1f9      	bne.n	8002d28 <chMtxLockS+0xa8>
 8002d34:	687a      	ldr	r2, [r7, #4]
 8002d36:	68a9      	ldr	r1, [r5, #8]
 8002d38:	e9c3 7200 	strd	r7, r2, [r3]
 8002d3c:	6013      	str	r3, [r2, #0]
 8002d3e:	607b      	str	r3, [r7, #4]
 8002d40:	68b3      	ldr	r3, [r6, #8]
 8002d42:	689a      	ldr	r2, [r3, #8]
 8002d44:	428a      	cmp	r2, r1
 8002d46:	d3a6      	bcc.n	8002c96 <chMtxLockS+0x16>
 8002d48:	e7ac      	b.n	8002ca4 <chMtxLockS+0x24>
 8002d4a:	4616      	mov	r6, r2
 8002d4c:	6872      	ldr	r2, [r6, #4]
 8002d4e:	e9c3 6200 	strd	r6, r2, [r3]
 8002d52:	6013      	str	r3, [r2, #0]
 8002d54:	6073      	str	r3, [r6, #4]
 8002d56:	e7a5      	b.n	8002ca4 <chMtxLockS+0x24>
 8002d58:	4617      	mov	r7, r2
 8002d5a:	e7eb      	b.n	8002d34 <chMtxLockS+0xb4>
 8002d5c:	20000938 	.word	0x20000938

08002d60 <chMtxLock>:
 8002d60:	b508      	push	{r3, lr}
 8002d62:	2320      	movs	r3, #32
 8002d64:	f383 8811 	msr	BASEPRI, r3
 8002d68:	f7ff ff8a 	bl	8002c80 <chMtxLockS>
 8002d6c:	2300      	movs	r3, #0
 8002d6e:	f383 8811 	msr	BASEPRI, r3
 8002d72:	bd08      	pop	{r3, pc}
	...

08002d80 <bmk12_execute>:
 8002d80:	b570      	push	{r4, r5, r6, lr}
 8002d82:	f7ff fd75 	bl	8002870 <test_wait_tick>
 8002d86:	f7fe f9f3 	bl	8001170 <test_start_timer.constprop.1>
 8002d8a:	4e15      	ldr	r6, [pc, #84]	; (8002de0 <bmk12_execute+0x60>)
 8002d8c:	4c15      	ldr	r4, [pc, #84]	; (8002de4 <bmk12_execute+0x64>)
 8002d8e:	2500      	movs	r5, #0
 8002d90:	4620      	mov	r0, r4
 8002d92:	f7ff ffe5 	bl	8002d60 <chMtxLock>
 8002d96:	4620      	mov	r0, r4
 8002d98:	f7fe fd62 	bl	8001860 <chMtxUnlock>
 8002d9c:	4620      	mov	r0, r4
 8002d9e:	f7ff ffdf 	bl	8002d60 <chMtxLock>
 8002da2:	4620      	mov	r0, r4
 8002da4:	f7fe fd5c 	bl	8001860 <chMtxUnlock>
 8002da8:	4620      	mov	r0, r4
 8002daa:	f7ff ffd9 	bl	8002d60 <chMtxLock>
 8002dae:	4620      	mov	r0, r4
 8002db0:	f7fe fd56 	bl	8001860 <chMtxUnlock>
 8002db4:	4620      	mov	r0, r4
 8002db6:	f7ff ffd3 	bl	8002d60 <chMtxLock>
 8002dba:	4620      	mov	r0, r4
 8002dbc:	f7fe fd50 	bl	8001860 <chMtxUnlock>
 8002dc0:	7833      	ldrb	r3, [r6, #0]
 8002dc2:	3501      	adds	r5, #1
 8002dc4:	2b00      	cmp	r3, #0
 8002dc6:	d0e3      	beq.n	8002d90 <bmk12_execute+0x10>
 8002dc8:	4807      	ldr	r0, [pc, #28]	; (8002de8 <bmk12_execute+0x68>)
 8002dca:	f7fd fd41 	bl	8000850 <test_print>
 8002dce:	00a8      	lsls	r0, r5, #2
 8002dd0:	f7fd fc46 	bl	8000660 <test_printn>
 8002dd4:	4805      	ldr	r0, [pc, #20]	; (8002dec <bmk12_execute+0x6c>)
 8002dd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002dda:	f7fd bd19 	b.w	8000810 <test_println>
 8002dde:	bf00      	nop
 8002de0:	200011d0 	.word	0x200011d0
 8002de4:	20000b1c 	.word	0x20000b1c
 8002de8:	08005c20 	.word	0x08005c20
 8002dec:	08005c50 	.word	0x08005c50

08002df0 <thread11>:
 8002df0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002df2:	4607      	mov	r7, r0
 8002df4:	481b      	ldr	r0, [pc, #108]	; (8002e64 <thread11+0x74>)
 8002df6:	f7ff ffb3 	bl	8002d60 <chMtxLock>
 8002dfa:	481b      	ldr	r0, [pc, #108]	; (8002e68 <thread11+0x78>)
 8002dfc:	f7ff ffb0 	bl	8002d60 <chMtxLock>
 8002e00:	2320      	movs	r3, #32
 8002e02:	f383 8811 	msr	BASEPRI, r3
 8002e06:	4d19      	ldr	r5, [pc, #100]	; (8002e6c <thread11+0x7c>)
 8002e08:	69ab      	ldr	r3, [r5, #24]
 8002e0a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 8002e0c:	4630      	mov	r0, r6
 8002e0e:	f7fe f887 	bl	8000f20 <chMtxUnlockS>
 8002e12:	4b17      	ldr	r3, [pc, #92]	; (8002e70 <thread11+0x80>)
 8002e14:	69ac      	ldr	r4, [r5, #24]
 8002e16:	4618      	mov	r0, r3
 8002e18:	6223      	str	r3, [r4, #32]
 8002e1a:	e003      	b.n	8002e24 <thread11+0x34>
 8002e1c:	6899      	ldr	r1, [r3, #8]
 8002e1e:	68a2      	ldr	r2, [r4, #8]
 8002e20:	4291      	cmp	r1, r2
 8002e22:	d302      	bcc.n	8002e2a <thread11+0x3a>
 8002e24:	681b      	ldr	r3, [r3, #0]
 8002e26:	4283      	cmp	r3, r0
 8002e28:	d1f8      	bne.n	8002e1c <thread11+0x2c>
 8002e2a:	685a      	ldr	r2, [r3, #4]
 8002e2c:	2007      	movs	r0, #7
 8002e2e:	e9c4 3200 	strd	r3, r2, [r4]
 8002e32:	6014      	str	r4, [r2, #0]
 8002e34:	605c      	str	r4, [r3, #4]
 8002e36:	f7fe fd9b 	bl	8001970 <chSchGoSleepS>
 8002e3a:	69ab      	ldr	r3, [r5, #24]
 8002e3c:	6a1b      	ldr	r3, [r3, #32]
 8002e3e:	3301      	adds	r3, #1
 8002e40:	d002      	beq.n	8002e48 <thread11+0x58>
 8002e42:	4630      	mov	r0, r6
 8002e44:	f7ff ff1c 	bl	8002c80 <chMtxLockS>
 8002e48:	2300      	movs	r3, #0
 8002e4a:	f383 8811 	msr	BASEPRI, r3
 8002e4e:	7838      	ldrb	r0, [r7, #0]
 8002e50:	f7fd fca6 	bl	80007a0 <test_emit_token>
 8002e54:	4804      	ldr	r0, [pc, #16]	; (8002e68 <thread11+0x78>)
 8002e56:	f7fe fd03 	bl	8001860 <chMtxUnlock>
 8002e5a:	4802      	ldr	r0, [pc, #8]	; (8002e64 <thread11+0x74>)
 8002e5c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002e60:	f7fe bcfe 	b.w	8001860 <chMtxUnlock>
 8002e64:	20000844 	.word	0x20000844
 8002e68:	20000834 	.word	0x20000834
 8002e6c:	20000938 	.word	0x20000938
 8002e70:	20000800 	.word	0x20000800
	...

08002e80 <thread10>:
 8002e80:	b570      	push	{r4, r5, r6, lr}
 8002e82:	4606      	mov	r6, r0
 8002e84:	4816      	ldr	r0, [pc, #88]	; (8002ee0 <thread10+0x60>)
 8002e86:	f7ff ff6b 	bl	8002d60 <chMtxLock>
 8002e8a:	2320      	movs	r3, #32
 8002e8c:	f383 8811 	msr	BASEPRI, r3
 8002e90:	4b14      	ldr	r3, [pc, #80]	; (8002ee4 <thread10+0x64>)
 8002e92:	699c      	ldr	r4, [r3, #24]
 8002e94:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8002e96:	4628      	mov	r0, r5
 8002e98:	f7fe f842 	bl	8000f20 <chMtxUnlockS>
 8002e9c:	4812      	ldr	r0, [pc, #72]	; (8002ee8 <thread10+0x68>)
 8002e9e:	6220      	str	r0, [r4, #32]
 8002ea0:	4603      	mov	r3, r0
 8002ea2:	e003      	b.n	8002eac <thread10+0x2c>
 8002ea4:	6899      	ldr	r1, [r3, #8]
 8002ea6:	68a2      	ldr	r2, [r4, #8]
 8002ea8:	4291      	cmp	r1, r2
 8002eaa:	d302      	bcc.n	8002eb2 <thread10+0x32>
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	4283      	cmp	r3, r0
 8002eb0:	d1f8      	bne.n	8002ea4 <thread10+0x24>
 8002eb2:	685a      	ldr	r2, [r3, #4]
 8002eb4:	2007      	movs	r0, #7
 8002eb6:	e9c4 3200 	strd	r3, r2, [r4]
 8002eba:	6014      	str	r4, [r2, #0]
 8002ebc:	605c      	str	r4, [r3, #4]
 8002ebe:	f7fe fd57 	bl	8001970 <chSchGoSleepS>
 8002ec2:	4628      	mov	r0, r5
 8002ec4:	f7ff fedc 	bl	8002c80 <chMtxLockS>
 8002ec8:	2300      	movs	r3, #0
 8002eca:	f383 8811 	msr	BASEPRI, r3
 8002ece:	7830      	ldrb	r0, [r6, #0]
 8002ed0:	f7fd fc66 	bl	80007a0 <test_emit_token>
 8002ed4:	4802      	ldr	r0, [pc, #8]	; (8002ee0 <thread10+0x60>)
 8002ed6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002eda:	f7fe bcc1 	b.w	8001860 <chMtxUnlock>
 8002ede:	bf00      	nop
 8002ee0:	20000834 	.word	0x20000834
 8002ee4:	20000938 	.word	0x20000938
 8002ee8:	20000800 	.word	0x20000800
 8002eec:	00000000 	.word	0x00000000

08002ef0 <thread12>:
 8002ef0:	b538      	push	{r3, r4, r5, lr}
 8002ef2:	4c06      	ldr	r4, [pc, #24]	; (8002f0c <thread12+0x1c>)
 8002ef4:	4605      	mov	r5, r0
 8002ef6:	4620      	mov	r0, r4
 8002ef8:	f7ff ff32 	bl	8002d60 <chMtxLock>
 8002efc:	7828      	ldrb	r0, [r5, #0]
 8002efe:	f7fd fc4f 	bl	80007a0 <test_emit_token>
 8002f02:	4620      	mov	r0, r4
 8002f04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002f08:	f7fe bcaa 	b.w	8001860 <chMtxUnlock>
 8002f0c:	20000844 	.word	0x20000844

08002f10 <mtx5_execute>:
 8002f10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f12:	4d37      	ldr	r5, [pc, #220]	; (8002ff0 <mtx5_execute+0xe0>)
 8002f14:	69aa      	ldr	r2, [r5, #24]
 8002f16:	2320      	movs	r3, #32
 8002f18:	6896      	ldr	r6, [r2, #8]
 8002f1a:	f383 8811 	msr	BASEPRI, r3
 8002f1e:	4c35      	ldr	r4, [pc, #212]	; (8002ff4 <mtx5_execute+0xe4>)
 8002f20:	68a3      	ldr	r3, [r4, #8]
 8002f22:	2b00      	cmp	r3, #0
 8002f24:	d057      	beq.n	8002fd6 <mtx5_execute+0xc6>
 8002f26:	2100      	movs	r1, #0
 8002f28:	2300      	movs	r3, #0
 8002f2a:	f383 8811 	msr	BASEPRI, r3
 8002f2e:	2001      	movs	r0, #1
 8002f30:	f7fd fc1e 	bl	8000770 <_test_assert>
 8002f34:	4601      	mov	r1, r0
 8002f36:	b100      	cbz	r0, 8002f3a <mtx5_execute+0x2a>
 8002f38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002f3a:	2320      	movs	r3, #32
 8002f3c:	f383 8811 	msr	BASEPRI, r3
 8002f40:	68a3      	ldr	r3, [r4, #8]
 8002f42:	2b00      	cmp	r3, #0
 8002f44:	d04e      	beq.n	8002fe4 <mtx5_execute+0xd4>
 8002f46:	2101      	movs	r1, #1
 8002f48:	2300      	movs	r3, #0
 8002f4a:	f383 8811 	msr	BASEPRI, r3
 8002f4e:	2002      	movs	r0, #2
 8002f50:	f7fd fc0e 	bl	8000770 <_test_assert>
 8002f54:	4607      	mov	r7, r0
 8002f56:	2800      	cmp	r0, #0
 8002f58:	d1ee      	bne.n	8002f38 <mtx5_execute+0x28>
 8002f5a:	2320      	movs	r3, #32
 8002f5c:	f383 8811 	msr	BASEPRI, r3
 8002f60:	4824      	ldr	r0, [pc, #144]	; (8002ff4 <mtx5_execute+0xe4>)
 8002f62:	f7fd ffdd 	bl	8000f20 <chMtxUnlockS>
 8002f66:	f387 8811 	msr	BASEPRI, r7
 8002f6a:	6821      	ldr	r1, [r4, #0]
 8002f6c:	1b09      	subs	r1, r1, r4
 8002f6e:	fab1 f181 	clz	r1, r1
 8002f72:	2003      	movs	r0, #3
 8002f74:	0949      	lsrs	r1, r1, #5
 8002f76:	f7fd fbfb 	bl	8000770 <_test_assert>
 8002f7a:	2800      	cmp	r0, #0
 8002f7c:	d1dc      	bne.n	8002f38 <mtx5_execute+0x28>
 8002f7e:	68a1      	ldr	r1, [r4, #8]
 8002f80:	fab1 f181 	clz	r1, r1
 8002f84:	0949      	lsrs	r1, r1, #5
 8002f86:	2004      	movs	r0, #4
 8002f88:	f7fd fbf2 	bl	8000770 <_test_assert>
 8002f8c:	2800      	cmp	r0, #0
 8002f8e:	d1d3      	bne.n	8002f38 <mtx5_execute+0x28>
 8002f90:	69ab      	ldr	r3, [r5, #24]
 8002f92:	6899      	ldr	r1, [r3, #8]
 8002f94:	1b89      	subs	r1, r1, r6
 8002f96:	fab1 f181 	clz	r1, r1
 8002f9a:	2005      	movs	r0, #5
 8002f9c:	0949      	lsrs	r1, r1, #5
 8002f9e:	f7fd fbe7 	bl	8000770 <_test_assert>
 8002fa2:	2800      	cmp	r0, #0
 8002fa4:	d1c8      	bne.n	8002f38 <mtx5_execute+0x28>
 8002fa6:	4813      	ldr	r0, [pc, #76]	; (8002ff4 <mtx5_execute+0xe4>)
 8002fa8:	f7ff feda 	bl	8002d60 <chMtxLock>
 8002fac:	f7fe fac0 	bl	8001530 <chMtxUnlockAll>
 8002fb0:	6821      	ldr	r1, [r4, #0]
 8002fb2:	1b09      	subs	r1, r1, r4
 8002fb4:	fab1 f181 	clz	r1, r1
 8002fb8:	2006      	movs	r0, #6
 8002fba:	0949      	lsrs	r1, r1, #5
 8002fbc:	f7fd fbd8 	bl	8000770 <_test_assert>
 8002fc0:	2800      	cmp	r0, #0
 8002fc2:	d1b9      	bne.n	8002f38 <mtx5_execute+0x28>
 8002fc4:	68a1      	ldr	r1, [r4, #8]
 8002fc6:	fab1 f181 	clz	r1, r1
 8002fca:	0949      	lsrs	r1, r1, #5
 8002fcc:	2007      	movs	r0, #7
 8002fce:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002fd2:	f7fd bbcd 	b.w	8000770 <_test_assert>
 8002fd6:	69ab      	ldr	r3, [r5, #24]
 8002fd8:	60a3      	str	r3, [r4, #8]
 8002fda:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002fdc:	60e2      	str	r2, [r4, #12]
 8002fde:	639c      	str	r4, [r3, #56]	; 0x38
 8002fe0:	2101      	movs	r1, #1
 8002fe2:	e7a1      	b.n	8002f28 <mtx5_execute+0x18>
 8002fe4:	69ab      	ldr	r3, [r5, #24]
 8002fe6:	60a3      	str	r3, [r4, #8]
 8002fe8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002fea:	60e2      	str	r2, [r4, #12]
 8002fec:	639c      	str	r4, [r3, #56]	; 0x38
 8002fee:	e7ab      	b.n	8002f48 <mtx5_execute+0x38>
 8002ff0:	20000938 	.word	0x20000938
 8002ff4:	20000834 	.word	0x20000834
	...

08003000 <thread4a>:
 8003000:	b510      	push	{r4, lr}
 8003002:	4c06      	ldr	r4, [pc, #24]	; (800301c <thread4a+0x1c>)
 8003004:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003008:	f7ff fb42 	bl	8002690 <chThdSleep>
 800300c:	4620      	mov	r0, r4
 800300e:	f7ff fea7 	bl	8002d60 <chMtxLock>
 8003012:	4620      	mov	r0, r4
 8003014:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003018:	f7fe bc22 	b.w	8001860 <chMtxUnlock>
 800301c:	20000844 	.word	0x20000844

08003020 <thread4b>:
 8003020:	b510      	push	{r4, lr}
 8003022:	4c06      	ldr	r4, [pc, #24]	; (800303c <thread4b+0x1c>)
 8003024:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8003028:	f7ff fb32 	bl	8002690 <chThdSleep>
 800302c:	4620      	mov	r0, r4
 800302e:	f7ff fe97 	bl	8002d60 <chMtxLock>
 8003032:	4620      	mov	r0, r4
 8003034:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003038:	f7fe bc12 	b.w	8001860 <chMtxUnlock>
 800303c:	20000834 	.word	0x20000834

08003040 <thread1.lto_priv.68>:
 8003040:	b538      	push	{r3, r4, r5, lr}
 8003042:	4c06      	ldr	r4, [pc, #24]	; (800305c <thread1.lto_priv.68+0x1c>)
 8003044:	4605      	mov	r5, r0
 8003046:	4620      	mov	r0, r4
 8003048:	f7ff fe8a 	bl	8002d60 <chMtxLock>
 800304c:	7828      	ldrb	r0, [r5, #0]
 800304e:	f7fd fba7 	bl	80007a0 <test_emit_token>
 8003052:	4620      	mov	r0, r4
 8003054:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003058:	f7fe bc02 	b.w	8001860 <chMtxUnlock>
 800305c:	20000834 	.word	0x20000834

08003060 <chHeapStatus>:
 8003060:	b570      	push	{r4, r5, r6, lr}
 8003062:	4c11      	ldr	r4, [pc, #68]	; (80030a8 <chHeapStatus+0x48>)
 8003064:	2800      	cmp	r0, #0
 8003066:	bf18      	it	ne
 8003068:	4604      	movne	r4, r0
 800306a:	f104 0510 	add.w	r5, r4, #16
 800306e:	4628      	mov	r0, r5
 8003070:	460e      	mov	r6, r1
 8003072:	f7ff fe75 	bl	8002d60 <chMtxLock>
 8003076:	68a3      	ldr	r3, [r4, #8]
 8003078:	b16b      	cbz	r3, 8003096 <chHeapStatus+0x36>
 800307a:	2200      	movs	r2, #0
 800307c:	4614      	mov	r4, r2
 800307e:	e9d3 3000 	ldrd	r3, r0, [r3]
 8003082:	3401      	adds	r4, #1
 8003084:	4402      	add	r2, r0
 8003086:	2b00      	cmp	r3, #0
 8003088:	d1f9      	bne.n	800307e <chHeapStatus+0x1e>
 800308a:	4628      	mov	r0, r5
 800308c:	6032      	str	r2, [r6, #0]
 800308e:	f7fe fbe7 	bl	8001860 <chMtxUnlock>
 8003092:	4620      	mov	r0, r4
 8003094:	bd70      	pop	{r4, r5, r6, pc}
 8003096:	461a      	mov	r2, r3
 8003098:	461c      	mov	r4, r3
 800309a:	4628      	mov	r0, r5
 800309c:	6032      	str	r2, [r6, #0]
 800309e:	f7fe fbdf 	bl	8001860 <chMtxUnlock>
 80030a2:	4620      	mov	r0, r4
 80030a4:	bd70      	pop	{r4, r5, r6, pc}
 80030a6:	bf00      	nop
 80030a8:	20000a90 	.word	0x20000a90
 80030ac:	00000000 	.word	0x00000000

080030b0 <chHeapFree>:
 80030b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80030b2:	f850 5c08 	ldr.w	r5, [r0, #-8]
 80030b6:	f105 0710 	add.w	r7, r5, #16
 80030ba:	4606      	mov	r6, r0
 80030bc:	f1a0 0408 	sub.w	r4, r0, #8
 80030c0:	3508      	adds	r5, #8
 80030c2:	4638      	mov	r0, r7
 80030c4:	f7ff fe4c 	bl	8002d60 <chMtxLock>
 80030c8:	462b      	mov	r3, r5
 80030ca:	42ab      	cmp	r3, r5
 80030cc:	681a      	ldr	r2, [r3, #0]
 80030ce:	d001      	beq.n	80030d4 <chHeapFree+0x24>
 80030d0:	42a3      	cmp	r3, r4
 80030d2:	d202      	bcs.n	80030da <chHeapFree+0x2a>
 80030d4:	b11a      	cbz	r2, 80030de <chHeapFree+0x2e>
 80030d6:	4294      	cmp	r4, r2
 80030d8:	d301      	bcc.n	80030de <chHeapFree+0x2e>
 80030da:	4613      	mov	r3, r2
 80030dc:	e7f5      	b.n	80030ca <chHeapFree+0x1a>
 80030de:	f846 2c08 	str.w	r2, [r6, #-8]
 80030e2:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80030e6:	601c      	str	r4, [r3, #0]
 80030e8:	f856 0c08 	ldr.w	r0, [r6, #-8]
 80030ec:	18b1      	adds	r1, r6, r2
 80030ee:	4281      	cmp	r1, r0
 80030f0:	d00a      	beq.n	8003108 <chHeapFree+0x58>
 80030f2:	6859      	ldr	r1, [r3, #4]
 80030f4:	f101 0208 	add.w	r2, r1, #8
 80030f8:	441a      	add	r2, r3
 80030fa:	4294      	cmp	r4, r2
 80030fc:	d012      	beq.n	8003124 <chHeapFree+0x74>
 80030fe:	4638      	mov	r0, r7
 8003100:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003104:	f7fe bbac 	b.w	8001860 <chMtxUnlock>
 8003108:	6849      	ldr	r1, [r1, #4]
 800310a:	58b0      	ldr	r0, [r6, r2]
 800310c:	f846 0c08 	str.w	r0, [r6, #-8]
 8003110:	3208      	adds	r2, #8
 8003112:	440a      	add	r2, r1
 8003114:	f846 2c04 	str.w	r2, [r6, #-4]
 8003118:	6859      	ldr	r1, [r3, #4]
 800311a:	f101 0208 	add.w	r2, r1, #8
 800311e:	441a      	add	r2, r3
 8003120:	4294      	cmp	r4, r2
 8003122:	d1ec      	bne.n	80030fe <chHeapFree+0x4e>
 8003124:	e956 0202 	ldrd	r0, r2, [r6, #-8]
 8003128:	3208      	adds	r2, #8
 800312a:	4411      	add	r1, r2
 800312c:	6018      	str	r0, [r3, #0]
 800312e:	6059      	str	r1, [r3, #4]
 8003130:	4638      	mov	r0, r7
 8003132:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003136:	f7fe bb93 	b.w	8001860 <chMtxUnlock>
 800313a:	bf00      	nop
 800313c:	0000      	movs	r0, r0
	...

08003140 <chThdRelease>:
 8003140:	b430      	push	{r4, r5}
 8003142:	2120      	movs	r1, #32
 8003144:	f381 8811 	msr	BASEPRI, r1
 8003148:	7f83      	ldrb	r3, [r0, #30]
 800314a:	3b01      	subs	r3, #1
 800314c:	b2db      	uxtb	r3, r3
 800314e:	7783      	strb	r3, [r0, #30]
 8003150:	2400      	movs	r4, #0
 8003152:	f384 8811 	msr	BASEPRI, r4
 8003156:	b91b      	cbnz	r3, 8003160 <chThdRelease+0x20>
 8003158:	7f04      	ldrb	r4, [r0, #28]
 800315a:	2c0f      	cmp	r4, #15
 800315c:	4602      	mov	r2, r0
 800315e:	d001      	beq.n	8003164 <chThdRelease+0x24>
 8003160:	bc30      	pop	{r4, r5}
 8003162:	4770      	bx	lr
 8003164:	7f44      	ldrb	r4, [r0, #29]
 8003166:	f004 0403 	and.w	r4, r4, #3
 800316a:	2c01      	cmp	r4, #1
 800316c:	d00f      	beq.n	800318e <chThdRelease+0x4e>
 800316e:	2c02      	cmp	r4, #2
 8003170:	d1f6      	bne.n	8003160 <chThdRelease+0x20>
 8003172:	e9d0 0404 	ldrd	r0, r4, [r0, #16]
 8003176:	6120      	str	r0, [r4, #16]
 8003178:	6915      	ldr	r5, [r2, #16]
 800317a:	6c10      	ldr	r0, [r2, #64]	; 0x40
 800317c:	616c      	str	r4, [r5, #20]
 800317e:	f381 8811 	msr	BASEPRI, r1
 8003182:	6801      	ldr	r1, [r0, #0]
 8003184:	6011      	str	r1, [r2, #0]
 8003186:	6002      	str	r2, [r0, #0]
 8003188:	f383 8811 	msr	BASEPRI, r3
 800318c:	e7e8      	b.n	8003160 <chThdRelease+0x20>
 800318e:	e9d0 1304 	ldrd	r1, r3, [r0, #16]
 8003192:	6119      	str	r1, [r3, #16]
 8003194:	6902      	ldr	r2, [r0, #16]
 8003196:	bc30      	pop	{r4, r5}
 8003198:	6153      	str	r3, [r2, #20]
 800319a:	f7ff bf89 	b.w	80030b0 <chHeapFree>
 800319e:	bf00      	nop

080031a0 <regfind>:
 80031a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80031a4:	4680      	mov	r8, r0
 80031a6:	2520      	movs	r5, #32
 80031a8:	f385 8811 	msr	BASEPRI, r5
 80031ac:	4f18      	ldr	r7, [pc, #96]	; (8003210 <regfind+0x70>)
 80031ae:	6938      	ldr	r0, [r7, #16]
 80031b0:	7f83      	ldrb	r3, [r0, #30]
 80031b2:	3301      	adds	r3, #1
 80031b4:	7783      	strb	r3, [r0, #30]
 80031b6:	2600      	movs	r6, #0
 80031b8:	f386 8811 	msr	BASEPRI, r6
 80031bc:	eba8 0900 	sub.w	r9, r8, r0
 80031c0:	fab9 f989 	clz	r9, r9
 80031c4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80031c8:	f385 8811 	msr	BASEPRI, r5
 80031cc:	6904      	ldr	r4, [r0, #16]
 80031ce:	42bc      	cmp	r4, r7
 80031d0:	bf08      	it	eq
 80031d2:	4604      	moveq	r4, r0
 80031d4:	d101      	bne.n	80031da <regfind+0x3a>
 80031d6:	e011      	b.n	80031fc <regfind+0x5c>
 80031d8:	461c      	mov	r4, r3
 80031da:	7fa3      	ldrb	r3, [r4, #30]
 80031dc:	3301      	adds	r3, #1
 80031de:	77a3      	strb	r3, [r4, #30]
 80031e0:	f386 8811 	msr	BASEPRI, r6
 80031e4:	f7ff ffac 	bl	8003140 <chThdRelease>
 80031e8:	45a0      	cmp	r8, r4
 80031ea:	bf08      	it	eq
 80031ec:	f049 0901 	orreq.w	r9, r9, #1
 80031f0:	f385 8811 	msr	BASEPRI, r5
 80031f4:	6923      	ldr	r3, [r4, #16]
 80031f6:	42bb      	cmp	r3, r7
 80031f8:	4620      	mov	r0, r4
 80031fa:	d1ed      	bne.n	80031d8 <regfind+0x38>
 80031fc:	2300      	movs	r3, #0
 80031fe:	f383 8811 	msr	BASEPRI, r3
 8003202:	4620      	mov	r0, r4
 8003204:	f7ff ff9c 	bl	8003140 <chThdRelease>
 8003208:	4648      	mov	r0, r9
 800320a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800320e:	bf00      	nop
 8003210:	20000938 	.word	0x20000938
	...

08003220 <chHeapAlloc>:
 8003220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003222:	4e20      	ldr	r6, [pc, #128]	; (80032a4 <chHeapAlloc+0x84>)
 8003224:	2800      	cmp	r0, #0
 8003226:	bf18      	it	ne
 8003228:	4606      	movne	r6, r0
 800322a:	f106 0710 	add.w	r7, r6, #16
 800322e:	3107      	adds	r1, #7
 8003230:	4638      	mov	r0, r7
 8003232:	f021 0507 	bic.w	r5, r1, #7
 8003236:	f106 0408 	add.w	r4, r6, #8
 800323a:	f7ff fd91 	bl	8002d60 <chMtxLock>
 800323e:	e003      	b.n	8003248 <chHeapAlloc+0x28>
 8003240:	6843      	ldr	r3, [r0, #4]
 8003242:	42ab      	cmp	r3, r5
 8003244:	d212      	bcs.n	800326c <chHeapAlloc+0x4c>
 8003246:	4604      	mov	r4, r0
 8003248:	6820      	ldr	r0, [r4, #0]
 800324a:	2800      	cmp	r0, #0
 800324c:	d1f8      	bne.n	8003240 <chHeapAlloc+0x20>
 800324e:	4638      	mov	r0, r7
 8003250:	f7fe fb06 	bl	8001860 <chMtxUnlock>
 8003254:	6833      	ldr	r3, [r6, #0]
 8003256:	b313      	cbz	r3, 800329e <chHeapAlloc+0x7e>
 8003258:	f105 0008 	add.w	r0, r5, #8
 800325c:	4798      	blx	r3
 800325e:	b1f0      	cbz	r0, 800329e <chHeapAlloc+0x7e>
 8003260:	e9c0 6500 	strd	r6, r5, [r0]
 8003264:	f100 0408 	add.w	r4, r0, #8
 8003268:	4620      	mov	r0, r4
 800326a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800326c:	f105 0208 	add.w	r2, r5, #8
 8003270:	4293      	cmp	r3, r2
 8003272:	6801      	ldr	r1, [r0, #0]
 8003274:	d208      	bcs.n	8003288 <chHeapAlloc+0x68>
 8003276:	6021      	str	r1, [r4, #0]
 8003278:	4604      	mov	r4, r0
 800327a:	4638      	mov	r0, r7
 800327c:	f844 6b08 	str.w	r6, [r4], #8
 8003280:	f7fe faee 	bl	8001860 <chMtxUnlock>
 8003284:	4620      	mov	r0, r4
 8003286:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003288:	eb00 0c02 	add.w	ip, r0, r2
 800328c:	1b5b      	subs	r3, r3, r5
 800328e:	3b08      	subs	r3, #8
 8003290:	5081      	str	r1, [r0, r2]
 8003292:	f8cc 3004 	str.w	r3, [ip, #4]
 8003296:	f8c4 c000 	str.w	ip, [r4]
 800329a:	6045      	str	r5, [r0, #4]
 800329c:	e7ec      	b.n	8003278 <chHeapAlloc+0x58>
 800329e:	2400      	movs	r4, #0
 80032a0:	e7e2      	b.n	8003268 <chHeapAlloc+0x48>
 80032a2:	bf00      	nop
 80032a4:	20000a90 	.word	0x20000a90
	...

080032b0 <chThdCreateFromHeap.constprop.52>:
 80032b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80032b2:	4605      	mov	r5, r0
 80032b4:	460e      	mov	r6, r1
 80032b6:	481b      	ldr	r0, [pc, #108]	; (8003324 <chThdCreateFromHeap.constprop.52+0x74>)
 80032b8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80032bc:	f7ff ffb0 	bl	8003220 <chHeapAlloc>
 80032c0:	4604      	mov	r4, r0
 80032c2:	b360      	cbz	r0, 800331e <chThdCreateFromHeap.constprop.52+0x6e>
 80032c4:	2320      	movs	r3, #32
 80032c6:	f383 8811 	msr	BASEPRI, r3
 80032ca:	4a17      	ldr	r2, [pc, #92]	; (8003328 <chThdCreateFromHeap.constprop.52+0x78>)
 80032cc:	6102      	str	r2, [r0, #16]
 80032ce:	6957      	ldr	r7, [r2, #20]
 80032d0:	f8c0 6128 	str.w	r6, [r0, #296]	; 0x128
 80032d4:	f500 7192 	add.w	r1, r0, #292	; 0x124
 80032d8:	2302      	movs	r3, #2
 80032da:	6085      	str	r5, [r0, #8]
 80032dc:	60c1      	str	r1, [r0, #12]
 80032de:	63c5      	str	r5, [r0, #60]	; 0x3c
 80032e0:	f100 0124 	add.w	r1, r0, #36	; 0x24
 80032e4:	2500      	movs	r5, #0
 80032e6:	7703      	strb	r3, [r0, #28]
 80032e8:	f8df e040 	ldr.w	lr, [pc, #64]	; 800332c <chThdCreateFromHeap.constprop.52+0x7c>
 80032ec:	f8df c040 	ldr.w	ip, [pc, #64]	; 8003330 <chThdCreateFromHeap.constprop.52+0x80>
 80032f0:	6147      	str	r7, [r0, #20]
 80032f2:	2601      	movs	r6, #1
 80032f4:	f100 0328 	add.w	r3, r0, #40	; 0x28
 80032f8:	f8c0 e124 	str.w	lr, [r0, #292]	; 0x124
 80032fc:	f8c0 c144 	str.w	ip, [r0, #324]	; 0x144
 8003300:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8003304:	6185      	str	r5, [r0, #24]
 8003306:	7786      	strb	r6, [r0, #30]
 8003308:	6138      	str	r0, [r7, #16]
 800330a:	6241      	str	r1, [r0, #36]	; 0x24
 800330c:	7746      	strb	r6, [r0, #29]
 800330e:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8003312:	4629      	mov	r1, r5
 8003314:	6150      	str	r0, [r2, #20]
 8003316:	f7fe fa13 	bl	8001740 <chSchWakeupS>
 800331a:	f385 8811 	msr	BASEPRI, r5
 800331e:	4620      	mov	r0, r4
 8003320:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003322:	bf00      	nop
 8003324:	20000ab8 	.word	0x20000ab8
 8003328:	20000938 	.word	0x20000938
 800332c:	08000801 	.word	0x08000801
 8003330:	08000271 	.word	0x08000271
	...

08003340 <dyn3_execute>:
 8003340:	4b46      	ldr	r3, [pc, #280]	; (800345c <dyn3_execute+0x11c>)
 8003342:	4947      	ldr	r1, [pc, #284]	; (8003460 <dyn3_execute+0x120>)
 8003344:	699b      	ldr	r3, [r3, #24]
 8003346:	6898      	ldr	r0, [r3, #8]
 8003348:	b510      	push	{r4, lr}
 800334a:	3801      	subs	r0, #1
 800334c:	f7ff ffb0 	bl	80032b0 <chThdCreateFromHeap.constprop.52>
 8003350:	4604      	mov	r4, r0
 8003352:	2001      	movs	r0, #1
 8003354:	7fa1      	ldrb	r1, [r4, #30]
 8003356:	1a09      	subs	r1, r1, r0
 8003358:	fab1 f181 	clz	r1, r1
 800335c:	0949      	lsrs	r1, r1, #5
 800335e:	f7fd fa07 	bl	8000770 <_test_assert>
 8003362:	b100      	cbz	r0, 8003366 <dyn3_execute+0x26>
 8003364:	bd10      	pop	{r4, pc}
 8003366:	2320      	movs	r3, #32
 8003368:	f383 8811 	msr	BASEPRI, r3
 800336c:	7fa3      	ldrb	r3, [r4, #30]
 800336e:	3301      	adds	r3, #1
 8003370:	77a3      	strb	r3, [r4, #30]
 8003372:	f380 8811 	msr	BASEPRI, r0
 8003376:	7fa1      	ldrb	r1, [r4, #30]
 8003378:	2002      	movs	r0, #2
 800337a:	1a09      	subs	r1, r1, r0
 800337c:	fab1 f181 	clz	r1, r1
 8003380:	0949      	lsrs	r1, r1, #5
 8003382:	f7fd f9f5 	bl	8000770 <_test_assert>
 8003386:	2800      	cmp	r0, #0
 8003388:	d1ec      	bne.n	8003364 <dyn3_execute+0x24>
 800338a:	4620      	mov	r0, r4
 800338c:	f7ff fed8 	bl	8003140 <chThdRelease>
 8003390:	7fa1      	ldrb	r1, [r4, #30]
 8003392:	f1a1 0101 	sub.w	r1, r1, #1
 8003396:	fab1 f181 	clz	r1, r1
 800339a:	2003      	movs	r0, #3
 800339c:	0949      	lsrs	r1, r1, #5
 800339e:	f7fd f9e7 	bl	8000770 <_test_assert>
 80033a2:	2800      	cmp	r0, #0
 80033a4:	d1de      	bne.n	8003364 <dyn3_execute+0x24>
 80033a6:	4620      	mov	r0, r4
 80033a8:	f7ff fefa 	bl	80031a0 <regfind>
 80033ac:	4601      	mov	r1, r0
 80033ae:	2004      	movs	r0, #4
 80033b0:	f7fd f9de 	bl	8000770 <_test_assert>
 80033b4:	2800      	cmp	r0, #0
 80033b6:	d1d5      	bne.n	8003364 <dyn3_execute+0x24>
 80033b8:	4620      	mov	r0, r4
 80033ba:	f7ff fef1 	bl	80031a0 <regfind>
 80033be:	4601      	mov	r1, r0
 80033c0:	2005      	movs	r0, #5
 80033c2:	f7fd f9d5 	bl	8000770 <_test_assert>
 80033c6:	2800      	cmp	r0, #0
 80033c8:	d1cc      	bne.n	8003364 <dyn3_execute+0x24>
 80033ca:	4620      	mov	r0, r4
 80033cc:	f7ff feb8 	bl	8003140 <chThdRelease>
 80033d0:	7fa1      	ldrb	r1, [r4, #30]
 80033d2:	fab1 f181 	clz	r1, r1
 80033d6:	0949      	lsrs	r1, r1, #5
 80033d8:	2006      	movs	r0, #6
 80033da:	f7fd f9c9 	bl	8000770 <_test_assert>
 80033de:	2800      	cmp	r0, #0
 80033e0:	d1c0      	bne.n	8003364 <dyn3_execute+0x24>
 80033e2:	7f21      	ldrb	r1, [r4, #28]
 80033e4:	fab1 f181 	clz	r1, r1
 80033e8:	0949      	lsrs	r1, r1, #5
 80033ea:	2007      	movs	r0, #7
 80033ec:	f7fd f9c0 	bl	8000770 <_test_assert>
 80033f0:	2800      	cmp	r0, #0
 80033f2:	d1b7      	bne.n	8003364 <dyn3_execute+0x24>
 80033f4:	4620      	mov	r0, r4
 80033f6:	f7ff fed3 	bl	80031a0 <regfind>
 80033fa:	4601      	mov	r1, r0
 80033fc:	2008      	movs	r0, #8
 80033fe:	f7fd f9b7 	bl	8000770 <_test_assert>
 8003402:	2800      	cmp	r0, #0
 8003404:	d1ae      	bne.n	8003364 <dyn3_execute+0x24>
 8003406:	4620      	mov	r0, r4
 8003408:	f7ff feca 	bl	80031a0 <regfind>
 800340c:	4601      	mov	r1, r0
 800340e:	2009      	movs	r0, #9
 8003410:	f7fd f9ae 	bl	8000770 <_test_assert>
 8003414:	2800      	cmp	r0, #0
 8003416:	d1a5      	bne.n	8003364 <dyn3_execute+0x24>
 8003418:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800341c:	f7ff f938 	bl	8002690 <chThdSleep>
 8003420:	7f21      	ldrb	r1, [r4, #28]
 8003422:	f1a1 030f 	sub.w	r3, r1, #15
 8003426:	4259      	negs	r1, r3
 8003428:	4159      	adcs	r1, r3
 800342a:	200a      	movs	r0, #10
 800342c:	f7fd f9a0 	bl	8000770 <_test_assert>
 8003430:	2800      	cmp	r0, #0
 8003432:	d197      	bne.n	8003364 <dyn3_execute+0x24>
 8003434:	4620      	mov	r0, r4
 8003436:	f7ff feb3 	bl	80031a0 <regfind>
 800343a:	4601      	mov	r1, r0
 800343c:	200b      	movs	r0, #11
 800343e:	f7fd f997 	bl	8000770 <_test_assert>
 8003442:	2800      	cmp	r0, #0
 8003444:	d18e      	bne.n	8003364 <dyn3_execute+0x24>
 8003446:	4620      	mov	r0, r4
 8003448:	f7ff feaa 	bl	80031a0 <regfind>
 800344c:	f080 0101 	eor.w	r1, r0, #1
 8003450:	b2c9      	uxtb	r1, r1
 8003452:	200c      	movs	r0, #12
 8003454:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003458:	f7fd b98a 	b.w	8000770 <_test_assert>
 800345c:	20000938 	.word	0x20000938
 8003460:	08005db0 	.word	0x08005db0
	...

08003470 <heap1_execute>:
 8003470:	b570      	push	{r4, r5, r6, lr}
 8003472:	b082      	sub	sp, #8
 8003474:	4669      	mov	r1, sp
 8003476:	2000      	movs	r0, #0
 8003478:	f7ff fdf2 	bl	8003060 <chHeapStatus>
 800347c:	2110      	movs	r1, #16
 800347e:	2000      	movs	r0, #0
 8003480:	f7ff fece 	bl	8003220 <chHeapAlloc>
 8003484:	1c01      	adds	r1, r0, #0
 8003486:	4605      	mov	r5, r0
 8003488:	bf18      	it	ne
 800348a:	2101      	movne	r1, #1
 800348c:	2001      	movs	r0, #1
 800348e:	f7fd f96f 	bl	8000770 <_test_assert>
 8003492:	b108      	cbz	r0, 8003498 <heap1_execute+0x28>
 8003494:	b002      	add	sp, #8
 8003496:	bd70      	pop	{r4, r5, r6, pc}
 8003498:	4604      	mov	r4, r0
 800349a:	4628      	mov	r0, r5
 800349c:	f7ff fe08 	bl	80030b0 <chHeapFree>
 80034a0:	f06f 01ff 	mvn.w	r1, #255	; 0xff
 80034a4:	4620      	mov	r0, r4
 80034a6:	f7ff febb 	bl	8003220 <chHeapAlloc>
 80034aa:	fab0 f180 	clz	r1, r0
 80034ae:	0949      	lsrs	r1, r1, #5
 80034b0:	2002      	movs	r0, #2
 80034b2:	f7fd f95d 	bl	8000770 <_test_assert>
 80034b6:	2800      	cmp	r0, #0
 80034b8:	d1ec      	bne.n	8003494 <heap1_execute+0x24>
 80034ba:	4669      	mov	r1, sp
 80034bc:	487c      	ldr	r0, [pc, #496]	; (80036b0 <heap1_execute+0x240>)
 80034be:	f7ff fdcf 	bl	8003060 <chHeapStatus>
 80034c2:	2110      	movs	r1, #16
 80034c4:	487a      	ldr	r0, [pc, #488]	; (80036b0 <heap1_execute+0x240>)
 80034c6:	f7ff feab 	bl	8003220 <chHeapAlloc>
 80034ca:	2110      	movs	r1, #16
 80034cc:	4606      	mov	r6, r0
 80034ce:	4878      	ldr	r0, [pc, #480]	; (80036b0 <heap1_execute+0x240>)
 80034d0:	f7ff fea6 	bl	8003220 <chHeapAlloc>
 80034d4:	2110      	movs	r1, #16
 80034d6:	4605      	mov	r5, r0
 80034d8:	4875      	ldr	r0, [pc, #468]	; (80036b0 <heap1_execute+0x240>)
 80034da:	f7ff fea1 	bl	8003220 <chHeapAlloc>
 80034de:	4604      	mov	r4, r0
 80034e0:	4630      	mov	r0, r6
 80034e2:	f7ff fde5 	bl	80030b0 <chHeapFree>
 80034e6:	4628      	mov	r0, r5
 80034e8:	f7ff fde2 	bl	80030b0 <chHeapFree>
 80034ec:	4620      	mov	r0, r4
 80034ee:	f7ff fddf 	bl	80030b0 <chHeapFree>
 80034f2:	a901      	add	r1, sp, #4
 80034f4:	486e      	ldr	r0, [pc, #440]	; (80036b0 <heap1_execute+0x240>)
 80034f6:	f7ff fdb3 	bl	8003060 <chHeapStatus>
 80034fa:	f1a0 0101 	sub.w	r1, r0, #1
 80034fe:	fab1 f181 	clz	r1, r1
 8003502:	0949      	lsrs	r1, r1, #5
 8003504:	2003      	movs	r0, #3
 8003506:	f7fd f933 	bl	8000770 <_test_assert>
 800350a:	2800      	cmp	r0, #0
 800350c:	d1c2      	bne.n	8003494 <heap1_execute+0x24>
 800350e:	2110      	movs	r1, #16
 8003510:	4867      	ldr	r0, [pc, #412]	; (80036b0 <heap1_execute+0x240>)
 8003512:	f7ff fe85 	bl	8003220 <chHeapAlloc>
 8003516:	2110      	movs	r1, #16
 8003518:	4604      	mov	r4, r0
 800351a:	4865      	ldr	r0, [pc, #404]	; (80036b0 <heap1_execute+0x240>)
 800351c:	f7ff fe80 	bl	8003220 <chHeapAlloc>
 8003520:	2110      	movs	r1, #16
 8003522:	4605      	mov	r5, r0
 8003524:	4862      	ldr	r0, [pc, #392]	; (80036b0 <heap1_execute+0x240>)
 8003526:	f7ff fe7b 	bl	8003220 <chHeapAlloc>
 800352a:	f7ff fdc1 	bl	80030b0 <chHeapFree>
 800352e:	4628      	mov	r0, r5
 8003530:	f7ff fdbe 	bl	80030b0 <chHeapFree>
 8003534:	4620      	mov	r0, r4
 8003536:	f7ff fdbb 	bl	80030b0 <chHeapFree>
 800353a:	a901      	add	r1, sp, #4
 800353c:	485c      	ldr	r0, [pc, #368]	; (80036b0 <heap1_execute+0x240>)
 800353e:	f7ff fd8f 	bl	8003060 <chHeapStatus>
 8003542:	f1a0 0101 	sub.w	r1, r0, #1
 8003546:	fab1 f181 	clz	r1, r1
 800354a:	0949      	lsrs	r1, r1, #5
 800354c:	2004      	movs	r0, #4
 800354e:	f7fd f90f 	bl	8000770 <_test_assert>
 8003552:	2800      	cmp	r0, #0
 8003554:	d19e      	bne.n	8003494 <heap1_execute+0x24>
 8003556:	2111      	movs	r1, #17
 8003558:	4855      	ldr	r0, [pc, #340]	; (80036b0 <heap1_execute+0x240>)
 800355a:	f7ff fe61 	bl	8003220 <chHeapAlloc>
 800355e:	2110      	movs	r1, #16
 8003560:	4604      	mov	r4, r0
 8003562:	4853      	ldr	r0, [pc, #332]	; (80036b0 <heap1_execute+0x240>)
 8003564:	f7ff fe5c 	bl	8003220 <chHeapAlloc>
 8003568:	4605      	mov	r5, r0
 800356a:	4620      	mov	r0, r4
 800356c:	f7ff fda0 	bl	80030b0 <chHeapFree>
 8003570:	a901      	add	r1, sp, #4
 8003572:	484f      	ldr	r0, [pc, #316]	; (80036b0 <heap1_execute+0x240>)
 8003574:	f7ff fd74 	bl	8003060 <chHeapStatus>
 8003578:	f1a0 0102 	sub.w	r1, r0, #2
 800357c:	fab1 f181 	clz	r1, r1
 8003580:	0949      	lsrs	r1, r1, #5
 8003582:	2005      	movs	r0, #5
 8003584:	f7fd f8f4 	bl	8000770 <_test_assert>
 8003588:	2800      	cmp	r0, #0
 800358a:	d183      	bne.n	8003494 <heap1_execute+0x24>
 800358c:	2110      	movs	r1, #16
 800358e:	4848      	ldr	r0, [pc, #288]	; (80036b0 <heap1_execute+0x240>)
 8003590:	f7ff fe46 	bl	8003220 <chHeapAlloc>
 8003594:	a901      	add	r1, sp, #4
 8003596:	4604      	mov	r4, r0
 8003598:	4845      	ldr	r0, [pc, #276]	; (80036b0 <heap1_execute+0x240>)
 800359a:	f7ff fd61 	bl	8003060 <chHeapStatus>
 800359e:	2801      	cmp	r0, #1
 80035a0:	f000 8083 	beq.w	80036aa <heap1_execute+0x23a>
 80035a4:	a901      	add	r1, sp, #4
 80035a6:	4842      	ldr	r0, [pc, #264]	; (80036b0 <heap1_execute+0x240>)
 80035a8:	f7ff fd5a 	bl	8003060 <chHeapStatus>
 80035ac:	f1a0 0102 	sub.w	r1, r0, #2
 80035b0:	fab1 f181 	clz	r1, r1
 80035b4:	0949      	lsrs	r1, r1, #5
 80035b6:	2006      	movs	r0, #6
 80035b8:	f7fd f8da 	bl	8000770 <_test_assert>
 80035bc:	2800      	cmp	r0, #0
 80035be:	f47f af69 	bne.w	8003494 <heap1_execute+0x24>
 80035c2:	4628      	mov	r0, r5
 80035c4:	f7ff fd74 	bl	80030b0 <chHeapFree>
 80035c8:	4620      	mov	r0, r4
 80035ca:	f7ff fd71 	bl	80030b0 <chHeapFree>
 80035ce:	a901      	add	r1, sp, #4
 80035d0:	4837      	ldr	r0, [pc, #220]	; (80036b0 <heap1_execute+0x240>)
 80035d2:	f7ff fd45 	bl	8003060 <chHeapStatus>
 80035d6:	f1a0 0101 	sub.w	r1, r0, #1
 80035da:	fab1 f181 	clz	r1, r1
 80035de:	0949      	lsrs	r1, r1, #5
 80035e0:	2007      	movs	r0, #7
 80035e2:	f7fd f8c5 	bl	8000770 <_test_assert>
 80035e6:	2800      	cmp	r0, #0
 80035e8:	f47f af54 	bne.w	8003494 <heap1_execute+0x24>
 80035ec:	2110      	movs	r1, #16
 80035ee:	4830      	ldr	r0, [pc, #192]	; (80036b0 <heap1_execute+0x240>)
 80035f0:	f7ff fe16 	bl	8003220 <chHeapAlloc>
 80035f4:	2110      	movs	r1, #16
 80035f6:	4605      	mov	r5, r0
 80035f8:	482d      	ldr	r0, [pc, #180]	; (80036b0 <heap1_execute+0x240>)
 80035fa:	f7ff fe11 	bl	8003220 <chHeapAlloc>
 80035fe:	4604      	mov	r4, r0
 8003600:	4628      	mov	r0, r5
 8003602:	f7ff fd55 	bl	80030b0 <chHeapFree>
 8003606:	a901      	add	r1, sp, #4
 8003608:	4829      	ldr	r0, [pc, #164]	; (80036b0 <heap1_execute+0x240>)
 800360a:	f7ff fd29 	bl	8003060 <chHeapStatus>
 800360e:	1e85      	subs	r5, r0, #2
 8003610:	4269      	negs	r1, r5
 8003612:	4169      	adcs	r1, r5
 8003614:	2008      	movs	r0, #8
 8003616:	f7fd f8ab 	bl	8000770 <_test_assert>
 800361a:	2800      	cmp	r0, #0
 800361c:	f47f af3a 	bne.w	8003494 <heap1_execute+0x24>
 8003620:	2120      	movs	r1, #32
 8003622:	4823      	ldr	r0, [pc, #140]	; (80036b0 <heap1_execute+0x240>)
 8003624:	f7ff fdfc 	bl	8003220 <chHeapAlloc>
 8003628:	f7ff fd42 	bl	80030b0 <chHeapFree>
 800362c:	4620      	mov	r0, r4
 800362e:	f7ff fd3f 	bl	80030b0 <chHeapFree>
 8003632:	a901      	add	r1, sp, #4
 8003634:	481e      	ldr	r0, [pc, #120]	; (80036b0 <heap1_execute+0x240>)
 8003636:	f7ff fd13 	bl	8003060 <chHeapStatus>
 800363a:	3801      	subs	r0, #1
 800363c:	4241      	negs	r1, r0
 800363e:	4141      	adcs	r1, r0
 8003640:	2009      	movs	r0, #9
 8003642:	f7fd f895 	bl	8000770 <_test_assert>
 8003646:	2800      	cmp	r0, #0
 8003648:	f47f af24 	bne.w	8003494 <heap1_execute+0x24>
 800364c:	a901      	add	r1, sp, #4
 800364e:	4818      	ldr	r0, [pc, #96]	; (80036b0 <heap1_execute+0x240>)
 8003650:	f7ff fd06 	bl	8003060 <chHeapStatus>
 8003654:	9901      	ldr	r1, [sp, #4]
 8003656:	4816      	ldr	r0, [pc, #88]	; (80036b0 <heap1_execute+0x240>)
 8003658:	f7ff fde2 	bl	8003220 <chHeapAlloc>
 800365c:	a901      	add	r1, sp, #4
 800365e:	4604      	mov	r4, r0
 8003660:	4813      	ldr	r0, [pc, #76]	; (80036b0 <heap1_execute+0x240>)
 8003662:	f7ff fcfd 	bl	8003060 <chHeapStatus>
 8003666:	fab0 f180 	clz	r1, r0
 800366a:	0949      	lsrs	r1, r1, #5
 800366c:	200a      	movs	r0, #10
 800366e:	f7fd f87f 	bl	8000770 <_test_assert>
 8003672:	2800      	cmp	r0, #0
 8003674:	f47f af0e 	bne.w	8003494 <heap1_execute+0x24>
 8003678:	4620      	mov	r0, r4
 800367a:	f7ff fd19 	bl	80030b0 <chHeapFree>
 800367e:	a901      	add	r1, sp, #4
 8003680:	480b      	ldr	r0, [pc, #44]	; (80036b0 <heap1_execute+0x240>)
 8003682:	f7ff fced 	bl	8003060 <chHeapStatus>
 8003686:	1e42      	subs	r2, r0, #1
 8003688:	4251      	negs	r1, r2
 800368a:	4151      	adcs	r1, r2
 800368c:	200b      	movs	r0, #11
 800368e:	f7fd f86f 	bl	8000770 <_test_assert>
 8003692:	2800      	cmp	r0, #0
 8003694:	f47f aefe 	bne.w	8003494 <heap1_execute+0x24>
 8003698:	e9dd 3100 	ldrd	r3, r1, [sp]
 800369c:	1acb      	subs	r3, r1, r3
 800369e:	4259      	negs	r1, r3
 80036a0:	4159      	adcs	r1, r3
 80036a2:	200c      	movs	r0, #12
 80036a4:	f7fd f864 	bl	8000770 <_test_assert>
 80036a8:	e6f4      	b.n	8003494 <heap1_execute+0x24>
 80036aa:	4601      	mov	r1, r0
 80036ac:	e783      	b.n	80035b6 <heap1_execute+0x146>
 80036ae:	bf00      	nop
 80036b0:	200011b0 	.word	0x200011b0
	...

080036c0 <chSemWait>:
 80036c0:	2320      	movs	r3, #32
 80036c2:	f383 8811 	msr	BASEPRI, r3
 80036c6:	6883      	ldr	r3, [r0, #8]
 80036c8:	3b01      	subs	r3, #1
 80036ca:	2b00      	cmp	r3, #0
 80036cc:	6083      	str	r3, [r0, #8]
 80036ce:	db04      	blt.n	80036da <chSemWait+0x1a>
 80036d0:	2000      	movs	r0, #0
 80036d2:	2300      	movs	r3, #0
 80036d4:	f383 8811 	msr	BASEPRI, r3
 80036d8:	4770      	bx	lr
 80036da:	b510      	push	{r4, lr}
 80036dc:	4c08      	ldr	r4, [pc, #32]	; (8003700 <chSemWait+0x40>)
 80036de:	69a2      	ldr	r2, [r4, #24]
 80036e0:	6210      	str	r0, [r2, #32]
 80036e2:	6010      	str	r0, [r2, #0]
 80036e4:	6841      	ldr	r1, [r0, #4]
 80036e6:	6051      	str	r1, [r2, #4]
 80036e8:	4603      	mov	r3, r0
 80036ea:	600a      	str	r2, [r1, #0]
 80036ec:	2005      	movs	r0, #5
 80036ee:	605a      	str	r2, [r3, #4]
 80036f0:	f7fe f93e 	bl	8001970 <chSchGoSleepS>
 80036f4:	69a3      	ldr	r3, [r4, #24]
 80036f6:	6a18      	ldr	r0, [r3, #32]
 80036f8:	2300      	movs	r3, #0
 80036fa:	f383 8811 	msr	BASEPRI, r3
 80036fe:	bd10      	pop	{r4, pc}
 8003700:	20000938 	.word	0x20000938
	...

08003710 <bmk11_execute>:
 8003710:	b570      	push	{r4, r5, r6, lr}
 8003712:	f7ff f8ad 	bl	8002870 <test_wait_tick>
 8003716:	f7fd fd2b 	bl	8001170 <test_start_timer.constprop.1>
 800371a:	4e15      	ldr	r6, [pc, #84]	; (8003770 <bmk11_execute+0x60>)
 800371c:	4c15      	ldr	r4, [pc, #84]	; (8003774 <bmk11_execute+0x64>)
 800371e:	2500      	movs	r5, #0
 8003720:	4620      	mov	r0, r4
 8003722:	f7ff ffcd 	bl	80036c0 <chSemWait>
 8003726:	4620      	mov	r0, r4
 8003728:	f7fe f8ca 	bl	80018c0 <chSemSignal>
 800372c:	4620      	mov	r0, r4
 800372e:	f7ff ffc7 	bl	80036c0 <chSemWait>
 8003732:	4620      	mov	r0, r4
 8003734:	f7fe f8c4 	bl	80018c0 <chSemSignal>
 8003738:	4620      	mov	r0, r4
 800373a:	f7ff ffc1 	bl	80036c0 <chSemWait>
 800373e:	4620      	mov	r0, r4
 8003740:	f7fe f8be 	bl	80018c0 <chSemSignal>
 8003744:	4620      	mov	r0, r4
 8003746:	f7ff ffbb 	bl	80036c0 <chSemWait>
 800374a:	4620      	mov	r0, r4
 800374c:	f7fe f8b8 	bl	80018c0 <chSemSignal>
 8003750:	7833      	ldrb	r3, [r6, #0]
 8003752:	3501      	adds	r5, #1
 8003754:	2b00      	cmp	r3, #0
 8003756:	d0e3      	beq.n	8003720 <bmk11_execute+0x10>
 8003758:	4807      	ldr	r0, [pc, #28]	; (8003778 <bmk11_execute+0x68>)
 800375a:	f7fd f879 	bl	8000850 <test_print>
 800375e:	00a8      	lsls	r0, r5, #2
 8003760:	f7fc ff7e 	bl	8000660 <test_printn>
 8003764:	4805      	ldr	r0, [pc, #20]	; (800377c <bmk11_execute+0x6c>)
 8003766:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800376a:	f7fd b851 	b.w	8000810 <test_println>
 800376e:	bf00      	nop
 8003770:	200011d0 	.word	0x200011d0
 8003774:	20000b30 	.word	0x20000b30
 8003778:	08005c20 	.word	0x08005c20
 800377c:	08005c40 	.word	0x08005c40

08003780 <thread3.lto_priv.66>:
 8003780:	b538      	push	{r3, r4, r5, lr}
 8003782:	4c07      	ldr	r4, [pc, #28]	; (80037a0 <thread3.lto_priv.66+0x20>)
 8003784:	69a3      	ldr	r3, [r4, #24]
 8003786:	7f5b      	ldrb	r3, [r3, #29]
 8003788:	075a      	lsls	r2, r3, #29
 800378a:	d407      	bmi.n	800379c <thread3.lto_priv.66+0x1c>
 800378c:	4d05      	ldr	r5, [pc, #20]	; (80037a4 <thread3.lto_priv.66+0x24>)
 800378e:	4628      	mov	r0, r5
 8003790:	f7ff ff96 	bl	80036c0 <chSemWait>
 8003794:	69a3      	ldr	r3, [r4, #24]
 8003796:	7f5b      	ldrb	r3, [r3, #29]
 8003798:	075b      	lsls	r3, r3, #29
 800379a:	d5f8      	bpl.n	800378e <thread3.lto_priv.66+0xe>
 800379c:	bd38      	pop	{r3, r4, r5, pc}
 800379e:	bf00      	nop
 80037a0:	20000938 	.word	0x20000938
 80037a4:	20000b30 	.word	0x20000b30
	...

080037b0 <sem4_execute>:
 80037b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80037b2:	b087      	sub	sp, #28
 80037b4:	ac03      	add	r4, sp, #12
 80037b6:	2500      	movs	r5, #0
 80037b8:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80037bc:	9505      	str	r5, [sp, #20]
 80037be:	2620      	movs	r6, #32
 80037c0:	f386 8811 	msr	BASEPRI, r6
 80037c4:	4629      	mov	r1, r5
 80037c6:	4620      	mov	r0, r4
 80037c8:	f7fd fc42 	bl	8001050 <chSemResetI>
 80037cc:	f7fd fe88 	bl	80014e0 <chSchRescheduleS>
 80037d0:	f385 8811 	msr	BASEPRI, r5
 80037d4:	f386 8811 	msr	BASEPRI, r6
 80037d8:	9905      	ldr	r1, [sp, #20]
 80037da:	42a9      	cmp	r1, r5
 80037dc:	bfcc      	ite	gt
 80037de:	2100      	movgt	r1, #0
 80037e0:	2101      	movle	r1, #1
 80037e2:	2001      	movs	r0, #1
 80037e4:	f7fc ffc4 	bl	8000770 <_test_assert>
 80037e8:	b118      	cbz	r0, 80037f2 <sem4_execute+0x42>
 80037ea:	f385 8811 	msr	BASEPRI, r5
 80037ee:	b007      	add	sp, #28
 80037f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037f2:	4607      	mov	r7, r0
 80037f4:	f380 8811 	msr	BASEPRI, r0
 80037f8:	4a41      	ldr	r2, [pc, #260]	; (8003900 <sem4_execute+0x150>)
 80037fa:	4b42      	ldr	r3, [pc, #264]	; (8003904 <sem4_execute+0x154>)
 80037fc:	6992      	ldr	r2, [r2, #24]
 80037fe:	4842      	ldr	r0, [pc, #264]	; (8003908 <sem4_execute+0x158>)
 8003800:	6892      	ldr	r2, [r2, #8]
 8003802:	9400      	str	r4, [sp, #0]
 8003804:	3a01      	subs	r2, #1
 8003806:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800380a:	f7fe f879 	bl	8001900 <chThdCreateStatic>
 800380e:	4b3f      	ldr	r3, [pc, #252]	; (800390c <sem4_execute+0x15c>)
 8003810:	6018      	str	r0, [r3, #0]
 8003812:	4620      	mov	r0, r4
 8003814:	f7ff ff54 	bl	80036c0 <chSemWait>
 8003818:	f386 8811 	msr	BASEPRI, r6
 800381c:	9905      	ldr	r1, [sp, #20]
 800381e:	2900      	cmp	r1, #0
 8003820:	bfcc      	ite	gt
 8003822:	2100      	movgt	r1, #0
 8003824:	2101      	movle	r1, #1
 8003826:	2002      	movs	r0, #2
 8003828:	f7fc ffa2 	bl	8000770 <_test_assert>
 800382c:	b118      	cbz	r0, 8003836 <sem4_execute+0x86>
 800382e:	f387 8811 	msr	BASEPRI, r7
 8003832:	b007      	add	sp, #28
 8003834:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003836:	f380 8811 	msr	BASEPRI, r0
 800383a:	f386 8811 	msr	BASEPRI, r6
 800383e:	9b05      	ldr	r3, [sp, #20]
 8003840:	2b00      	cmp	r3, #0
 8003842:	dd24      	ble.n	800388e <sem4_execute+0xde>
 8003844:	f7fd fe4c 	bl	80014e0 <chSchRescheduleS>
 8003848:	2500      	movs	r5, #0
 800384a:	f385 8811 	msr	BASEPRI, r5
 800384e:	2720      	movs	r7, #32
 8003850:	f387 8811 	msr	BASEPRI, r7
 8003854:	9905      	ldr	r1, [sp, #20]
 8003856:	42a9      	cmp	r1, r5
 8003858:	f04f 0003 	mov.w	r0, #3
 800385c:	bfd4      	ite	le
 800385e:	2100      	movle	r1, #0
 8003860:	2101      	movgt	r1, #1
 8003862:	f7fc ff85 	bl	8000770 <_test_assert>
 8003866:	4606      	mov	r6, r0
 8003868:	2800      	cmp	r0, #0
 800386a:	d1be      	bne.n	80037ea <sem4_execute+0x3a>
 800386c:	f380 8811 	msr	BASEPRI, r0
 8003870:	f387 8811 	msr	BASEPRI, r7
 8003874:	9905      	ldr	r1, [sp, #20]
 8003876:	f1a1 0101 	sub.w	r1, r1, #1
 800387a:	fab1 f181 	clz	r1, r1
 800387e:	2004      	movs	r0, #4
 8003880:	0949      	lsrs	r1, r1, #5
 8003882:	f7fc ff75 	bl	8000770 <_test_assert>
 8003886:	b130      	cbz	r0, 8003896 <sem4_execute+0xe6>
 8003888:	f386 8811 	msr	BASEPRI, r6
 800388c:	e7af      	b.n	80037ee <sem4_execute+0x3e>
 800388e:	4620      	mov	r0, r4
 8003890:	f7fd fb6e 	bl	8000f70 <chSemSignalI>
 8003894:	e7d6      	b.n	8003844 <sem4_execute+0x94>
 8003896:	f380 8811 	msr	BASEPRI, r0
 800389a:	f387 8811 	msr	BASEPRI, r7
 800389e:	9b05      	ldr	r3, [sp, #20]
 80038a0:	2b00      	cmp	r3, #0
 80038a2:	dd28      	ble.n	80038f6 <sem4_execute+0x146>
 80038a4:	f7fd fe1c 	bl	80014e0 <chSchRescheduleS>
 80038a8:	2400      	movs	r4, #0
 80038aa:	f384 8811 	msr	BASEPRI, r4
 80038ae:	2620      	movs	r6, #32
 80038b0:	f386 8811 	msr	BASEPRI, r6
 80038b4:	9905      	ldr	r1, [sp, #20]
 80038b6:	42a1      	cmp	r1, r4
 80038b8:	f04f 0003 	mov.w	r0, #3
 80038bc:	bfd4      	ite	le
 80038be:	2100      	movle	r1, #0
 80038c0:	2101      	movgt	r1, #1
 80038c2:	f7fc ff55 	bl	8000770 <_test_assert>
 80038c6:	4605      	mov	r5, r0
 80038c8:	b110      	cbz	r0, 80038d0 <sem4_execute+0x120>
 80038ca:	f384 8811 	msr	BASEPRI, r4
 80038ce:	e78e      	b.n	80037ee <sem4_execute+0x3e>
 80038d0:	f380 8811 	msr	BASEPRI, r0
 80038d4:	f386 8811 	msr	BASEPRI, r6
 80038d8:	9905      	ldr	r1, [sp, #20]
 80038da:	f1a1 0101 	sub.w	r1, r1, #1
 80038de:	fab1 f181 	clz	r1, r1
 80038e2:	2005      	movs	r0, #5
 80038e4:	0949      	lsrs	r1, r1, #5
 80038e6:	f7fc ff43 	bl	8000770 <_test_assert>
 80038ea:	2800      	cmp	r0, #0
 80038ec:	f47f af7d 	bne.w	80037ea <sem4_execute+0x3a>
 80038f0:	f380 8811 	msr	BASEPRI, r0
 80038f4:	e77b      	b.n	80037ee <sem4_execute+0x3e>
 80038f6:	4620      	mov	r0, r4
 80038f8:	f7fd fb3a 	bl	8000f70 <chSemSignalI>
 80038fc:	e7d2      	b.n	80038a4 <sem4_execute+0xf4>
 80038fe:	bf00      	nop
 8003900:	20000938 	.word	0x20000938
 8003904:	08001501 	.word	0x08001501
 8003908:	20000b40 	.word	0x20000b40
 800390c:	200011d4 	.word	0x200011d4

08003910 <thread3.lto_priv.65>:
 8003910:	b510      	push	{r4, lr}
 8003912:	4c04      	ldr	r4, [pc, #16]	; (8003924 <thread3.lto_priv.65+0x14>)
 8003914:	4620      	mov	r0, r4
 8003916:	f7ff fed3 	bl	80036c0 <chSemWait>
 800391a:	4620      	mov	r0, r4
 800391c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003920:	f7fd bfce 	b.w	80018c0 <chSemSignal>
 8003924:	200008ac 	.word	0x200008ac
	...

08003930 <thread1.lto_priv.67>:
 8003930:	b510      	push	{r4, lr}
 8003932:	4604      	mov	r4, r0
 8003934:	4803      	ldr	r0, [pc, #12]	; (8003944 <thread1.lto_priv.67+0x14>)
 8003936:	f7ff fec3 	bl	80036c0 <chSemWait>
 800393a:	7820      	ldrb	r0, [r4, #0]
 800393c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003940:	f7fc bf2e 	b.w	80007a0 <test_emit_token>
 8003944:	200008ac 	.word	0x200008ac
	...

08003950 <chThdWait>:
 8003950:	b538      	push	{r3, r4, r5, lr}
 8003952:	4604      	mov	r4, r0
 8003954:	2320      	movs	r3, #32
 8003956:	f383 8811 	msr	BASEPRI, r3
 800395a:	7f03      	ldrb	r3, [r0, #28]
 800395c:	2b0f      	cmp	r3, #15
 800395e:	d007      	beq.n	8003970 <chThdWait+0x20>
 8003960:	4b08      	ldr	r3, [pc, #32]	; (8003984 <chThdWait+0x34>)
 8003962:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003964:	699b      	ldr	r3, [r3, #24]
 8003966:	2009      	movs	r0, #9
 8003968:	601a      	str	r2, [r3, #0]
 800396a:	6263      	str	r3, [r4, #36]	; 0x24
 800396c:	f7fe f800 	bl	8001970 <chSchGoSleepS>
 8003970:	6a25      	ldr	r5, [r4, #32]
 8003972:	2300      	movs	r3, #0
 8003974:	f383 8811 	msr	BASEPRI, r3
 8003978:	4620      	mov	r0, r4
 800397a:	f7ff fbe1 	bl	8003140 <chThdRelease>
 800397e:	4628      	mov	r0, r5
 8003980:	bd38      	pop	{r3, r4, r5, pc}
 8003982:	bf00      	nop
 8003984:	20000938 	.word	0x20000938
	...

08003990 <bmk5_execute>:
 8003990:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003994:	4b15      	ldr	r3, [pc, #84]	; (80039ec <bmk5_execute+0x5c>)
 8003996:	f8df 9064 	ldr.w	r9, [pc, #100]	; 80039fc <bmk5_execute+0x6c>
 800399a:	699b      	ldr	r3, [r3, #24]
 800399c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8003a00 <bmk5_execute+0x70>
 80039a0:	689d      	ldr	r5, [r3, #8]
 80039a2:	4f13      	ldr	r7, [pc, #76]	; (80039f0 <bmk5_execute+0x60>)
 80039a4:	b083      	sub	sp, #12
 80039a6:	f7fe ff63 	bl	8002870 <test_wait_tick>
 80039aa:	f7fd fbe1 	bl	8001170 <test_start_timer.constprop.1>
 80039ae:	2400      	movs	r4, #0
 80039b0:	3d01      	subs	r5, #1
 80039b2:	4626      	mov	r6, r4
 80039b4:	4643      	mov	r3, r8
 80039b6:	462a      	mov	r2, r5
 80039b8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80039bc:	9600      	str	r6, [sp, #0]
 80039be:	4638      	mov	r0, r7
 80039c0:	f7fd ff9e 	bl	8001900 <chThdCreateStatic>
 80039c4:	f7ff ffc4 	bl	8003950 <chThdWait>
 80039c8:	f899 3000 	ldrb.w	r3, [r9]
 80039cc:	3401      	adds	r4, #1
 80039ce:	2b00      	cmp	r3, #0
 80039d0:	d0f0      	beq.n	80039b4 <bmk5_execute+0x24>
 80039d2:	4808      	ldr	r0, [pc, #32]	; (80039f4 <bmk5_execute+0x64>)
 80039d4:	f7fc ff3c 	bl	8000850 <test_print>
 80039d8:	4620      	mov	r0, r4
 80039da:	f7fc fe41 	bl	8000660 <test_printn>
 80039de:	4806      	ldr	r0, [pc, #24]	; (80039f8 <bmk5_execute+0x68>)
 80039e0:	b003      	add	sp, #12
 80039e2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80039e6:	f7fc bf13 	b.w	8000810 <test_println>
 80039ea:	bf00      	nop
 80039ec:	20000938 	.word	0x20000938
 80039f0:	20000b40 	.word	0x20000b40
 80039f4:	08005c20 	.word	0x08005c20
 80039f8:	08005d20 	.word	0x08005d20
 80039fc:	200011d0 	.word	0x200011d0
 8003a00:	08005bb1 	.word	0x08005bb1
	...

08003a10 <test_wait_threads>:
 8003a10:	b570      	push	{r4, r5, r6, lr}
 8003a12:	4c07      	ldr	r4, [pc, #28]	; (8003a30 <test_wait_threads+0x20>)
 8003a14:	2600      	movs	r6, #0
 8003a16:	f104 0514 	add.w	r5, r4, #20
 8003a1a:	f854 0b04 	ldr.w	r0, [r4], #4
 8003a1e:	b118      	cbz	r0, 8003a28 <test_wait_threads+0x18>
 8003a20:	f7ff ff96 	bl	8003950 <chThdWait>
 8003a24:	f844 6c04 	str.w	r6, [r4, #-4]
 8003a28:	42ac      	cmp	r4, r5
 8003a2a:	d1f6      	bne.n	8003a1a <test_wait_threads+0xa>
 8003a2c:	bd70      	pop	{r4, r5, r6, pc}
 8003a2e:	bf00      	nop
 8003a30:	200011d4 	.word	0x200011d4
	...

08003a40 <bmk8_execute>:
 8003a40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003a44:	b084      	sub	sp, #16
 8003a46:	ac04      	add	r4, sp, #16
 8003a48:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8003b18 <bmk8_execute+0xd8>
 8003a4c:	4f2d      	ldr	r7, [pc, #180]	; (8003b04 <bmk8_execute+0xc4>)
 8003a4e:	4e2e      	ldr	r6, [pc, #184]	; (8003b08 <bmk8_execute+0xc8>)
 8003a50:	4d2e      	ldr	r5, [pc, #184]	; (8003b0c <bmk8_execute+0xcc>)
 8003a52:	2300      	movs	r3, #0
 8003a54:	f844 3d04 	str.w	r3, [r4, #-4]!
 8003a58:	f7fe ff0a 	bl	8002870 <test_wait_tick>
 8003a5c:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003a60:	689a      	ldr	r2, [r3, #8]
 8003a62:	9400      	str	r4, [sp, #0]
 8003a64:	463b      	mov	r3, r7
 8003a66:	3a01      	subs	r2, #1
 8003a68:	4630      	mov	r0, r6
 8003a6a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003a6e:	f7fd ff47 	bl	8001900 <chThdCreateStatic>
 8003a72:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003a76:	6028      	str	r0, [r5, #0]
 8003a78:	689a      	ldr	r2, [r3, #8]
 8003a7a:	9400      	str	r4, [sp, #0]
 8003a7c:	463b      	mov	r3, r7
 8003a7e:	3a01      	subs	r2, #1
 8003a80:	f506 70a4 	add.w	r0, r6, #328	; 0x148
 8003a84:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003a88:	f7fd ff3a 	bl	8001900 <chThdCreateStatic>
 8003a8c:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003a90:	6068      	str	r0, [r5, #4]
 8003a92:	689a      	ldr	r2, [r3, #8]
 8003a94:	9400      	str	r4, [sp, #0]
 8003a96:	463b      	mov	r3, r7
 8003a98:	3a01      	subs	r2, #1
 8003a9a:	f506 7024 	add.w	r0, r6, #656	; 0x290
 8003a9e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003aa2:	f7fd ff2d 	bl	8001900 <chThdCreateStatic>
 8003aa6:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003aaa:	60a8      	str	r0, [r5, #8]
 8003aac:	689a      	ldr	r2, [r3, #8]
 8003aae:	9400      	str	r4, [sp, #0]
 8003ab0:	463b      	mov	r3, r7
 8003ab2:	3a01      	subs	r2, #1
 8003ab4:	f506 7076 	add.w	r0, r6, #984	; 0x3d8
 8003ab8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003abc:	f7fd ff20 	bl	8001900 <chThdCreateStatic>
 8003ac0:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003ac4:	60e8      	str	r0, [r5, #12]
 8003ac6:	689a      	ldr	r2, [r3, #8]
 8003ac8:	9400      	str	r4, [sp, #0]
 8003aca:	3a01      	subs	r2, #1
 8003acc:	463b      	mov	r3, r7
 8003ace:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003ad2:	f506 60a4 	add.w	r0, r6, #1312	; 0x520
 8003ad6:	f7fd ff13 	bl	8001900 <chThdCreateStatic>
 8003ada:	6128      	str	r0, [r5, #16]
 8003adc:	f242 7010 	movw	r0, #10000	; 0x2710
 8003ae0:	f7fe fdd6 	bl	8002690 <chThdSleep>
 8003ae4:	f7fc fde4 	bl	80006b0 <test_terminate_threads>
 8003ae8:	f7ff ff92 	bl	8003a10 <test_wait_threads>
 8003aec:	4808      	ldr	r0, [pc, #32]	; (8003b10 <bmk8_execute+0xd0>)
 8003aee:	f7fc feaf 	bl	8000850 <test_print>
 8003af2:	9803      	ldr	r0, [sp, #12]
 8003af4:	f7fc fdb4 	bl	8000660 <test_printn>
 8003af8:	4806      	ldr	r0, [pc, #24]	; (8003b14 <bmk8_execute+0xd4>)
 8003afa:	f7fc fe89 	bl	8000810 <test_println>
 8003afe:	b004      	add	sp, #16
 8003b00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003b04:	08001471 	.word	0x08001471
 8003b08:	20000b40 	.word	0x20000b40
 8003b0c:	200011d4 	.word	0x200011d4
 8003b10:	08005c20 	.word	0x08005c20
 8003b14:	08005d50 	.word	0x08005d50
 8003b18:	20000938 	.word	0x20000938
 8003b1c:	00000000 	.word	0x00000000

08003b20 <bmk7_execute>:
 8003b20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003b24:	4e3a      	ldr	r6, [pc, #232]	; (8003c10 <bmk7_execute+0xf0>)
 8003b26:	4b3b      	ldr	r3, [pc, #236]	; (8003c14 <bmk7_execute+0xf4>)
 8003b28:	69b2      	ldr	r2, [r6, #24]
 8003b2a:	483b      	ldr	r0, [pc, #236]	; (8003c18 <bmk7_execute+0xf8>)
 8003b2c:	6892      	ldr	r2, [r2, #8]
 8003b2e:	4d3b      	ldr	r5, [pc, #236]	; (8003c1c <bmk7_execute+0xfc>)
 8003b30:	f8df 810c 	ldr.w	r8, [pc, #268]	; 8003c40 <bmk7_execute+0x120>
 8003b34:	4f3a      	ldr	r7, [pc, #232]	; (8003c20 <bmk7_execute+0x100>)
 8003b36:	b082      	sub	sp, #8
 8003b38:	2400      	movs	r4, #0
 8003b3a:	3205      	adds	r2, #5
 8003b3c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b40:	9400      	str	r4, [sp, #0]
 8003b42:	f7fd fedd 	bl	8001900 <chThdCreateStatic>
 8003b46:	69b3      	ldr	r3, [r6, #24]
 8003b48:	6028      	str	r0, [r5, #0]
 8003b4a:	689a      	ldr	r2, [r3, #8]
 8003b4c:	4835      	ldr	r0, [pc, #212]	; (8003c24 <bmk7_execute+0x104>)
 8003b4e:	4b31      	ldr	r3, [pc, #196]	; (8003c14 <bmk7_execute+0xf4>)
 8003b50:	9400      	str	r4, [sp, #0]
 8003b52:	3204      	adds	r2, #4
 8003b54:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b58:	f7fd fed2 	bl	8001900 <chThdCreateStatic>
 8003b5c:	69b3      	ldr	r3, [r6, #24]
 8003b5e:	6068      	str	r0, [r5, #4]
 8003b60:	689a      	ldr	r2, [r3, #8]
 8003b62:	4831      	ldr	r0, [pc, #196]	; (8003c28 <bmk7_execute+0x108>)
 8003b64:	4b2b      	ldr	r3, [pc, #172]	; (8003c14 <bmk7_execute+0xf4>)
 8003b66:	9400      	str	r4, [sp, #0]
 8003b68:	3203      	adds	r2, #3
 8003b6a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b6e:	f7fd fec7 	bl	8001900 <chThdCreateStatic>
 8003b72:	69b3      	ldr	r3, [r6, #24]
 8003b74:	60a8      	str	r0, [r5, #8]
 8003b76:	689a      	ldr	r2, [r3, #8]
 8003b78:	482c      	ldr	r0, [pc, #176]	; (8003c2c <bmk7_execute+0x10c>)
 8003b7a:	4b26      	ldr	r3, [pc, #152]	; (8003c14 <bmk7_execute+0xf4>)
 8003b7c:	9400      	str	r4, [sp, #0]
 8003b7e:	3202      	adds	r2, #2
 8003b80:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b84:	f7fd febc 	bl	8001900 <chThdCreateStatic>
 8003b88:	69b3      	ldr	r3, [r6, #24]
 8003b8a:	60e8      	str	r0, [r5, #12]
 8003b8c:	689a      	ldr	r2, [r3, #8]
 8003b8e:	4828      	ldr	r0, [pc, #160]	; (8003c30 <bmk7_execute+0x110>)
 8003b90:	4b20      	ldr	r3, [pc, #128]	; (8003c14 <bmk7_execute+0xf4>)
 8003b92:	9400      	str	r4, [sp, #0]
 8003b94:	3201      	adds	r2, #1
 8003b96:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b9a:	f7fd feb1 	bl	8001900 <chThdCreateStatic>
 8003b9e:	6128      	str	r0, [r5, #16]
 8003ba0:	f7fe fe66 	bl	8002870 <test_wait_tick>
 8003ba4:	f7fd fae4 	bl	8001170 <test_start_timer.constprop.1>
 8003ba8:	4625      	mov	r5, r4
 8003baa:	2620      	movs	r6, #32
 8003bac:	f386 8811 	msr	BASEPRI, r6
 8003bb0:	2100      	movs	r1, #0
 8003bb2:	4638      	mov	r0, r7
 8003bb4:	f7fd fa4c 	bl	8001050 <chSemResetI>
 8003bb8:	f7fd fc92 	bl	80014e0 <chSchRescheduleS>
 8003bbc:	f385 8811 	msr	BASEPRI, r5
 8003bc0:	f898 3000 	ldrb.w	r3, [r8]
 8003bc4:	3401      	adds	r4, #1
 8003bc6:	2b00      	cmp	r3, #0
 8003bc8:	d0f0      	beq.n	8003bac <bmk7_execute+0x8c>
 8003bca:	f7fc fd71 	bl	80006b0 <test_terminate_threads>
 8003bce:	f386 8811 	msr	BASEPRI, r6
 8003bd2:	2100      	movs	r1, #0
 8003bd4:	4812      	ldr	r0, [pc, #72]	; (8003c20 <bmk7_execute+0x100>)
 8003bd6:	f7fd fa3b 	bl	8001050 <chSemResetI>
 8003bda:	f7fd fc81 	bl	80014e0 <chSchRescheduleS>
 8003bde:	f385 8811 	msr	BASEPRI, r5
 8003be2:	f7ff ff15 	bl	8003a10 <test_wait_threads>
 8003be6:	4813      	ldr	r0, [pc, #76]	; (8003c34 <bmk7_execute+0x114>)
 8003be8:	f7fc fe32 	bl	8000850 <test_print>
 8003bec:	4620      	mov	r0, r4
 8003bee:	f7fc fd37 	bl	8000660 <test_printn>
 8003bf2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8003bf6:	4810      	ldr	r0, [pc, #64]	; (8003c38 <bmk7_execute+0x118>)
 8003bf8:	f7fc fe2a 	bl	8000850 <test_print>
 8003bfc:	0060      	lsls	r0, r4, #1
 8003bfe:	f7fc fd2f 	bl	8000660 <test_printn>
 8003c02:	480e      	ldr	r0, [pc, #56]	; (8003c3c <bmk7_execute+0x11c>)
 8003c04:	b002      	add	sp, #8
 8003c06:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003c0a:	f7fc be01 	b.w	8000810 <test_println>
 8003c0e:	bf00      	nop
 8003c10:	20000938 	.word	0x20000938
 8003c14:	08003781 	.word	0x08003781
 8003c18:	20000b40 	.word	0x20000b40
 8003c1c:	200011d4 	.word	0x200011d4
 8003c20:	20000b30 	.word	0x20000b30
 8003c24:	20000c88 	.word	0x20000c88
 8003c28:	20000dd0 	.word	0x20000dd0
 8003c2c:	20000f18 	.word	0x20000f18
 8003c30:	20001060 	.word	0x20001060
 8003c34:	08005c20 	.word	0x08005c20
 8003c38:	08005d30 	.word	0x08005d30
 8003c3c:	08005d50 	.word	0x08005d50
 8003c40:	200011d0 	.word	0x200011d0
	...

08003c50 <bmk4_execute>:
 8003c50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003c54:	4a23      	ldr	r2, [pc, #140]	; (8003ce4 <bmk4_execute+0x94>)
 8003c56:	4b24      	ldr	r3, [pc, #144]	; (8003ce8 <bmk4_execute+0x98>)
 8003c58:	6992      	ldr	r2, [r2, #24]
 8003c5a:	4824      	ldr	r0, [pc, #144]	; (8003cec <bmk4_execute+0x9c>)
 8003c5c:	6892      	ldr	r2, [r2, #8]
 8003c5e:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8003cfc <bmk4_execute+0xac>
 8003c62:	b082      	sub	sp, #8
 8003c64:	2500      	movs	r5, #0
 8003c66:	3201      	adds	r2, #1
 8003c68:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003c6c:	9500      	str	r5, [sp, #0]
 8003c6e:	f7fd fe47 	bl	8001900 <chThdCreateStatic>
 8003c72:	4b1f      	ldr	r3, [pc, #124]	; (8003cf0 <bmk4_execute+0xa0>)
 8003c74:	4604      	mov	r4, r0
 8003c76:	6018      	str	r0, [r3, #0]
 8003c78:	f7fe fdfa 	bl	8002870 <test_wait_tick>
 8003c7c:	f7fd fa78 	bl	8001170 <test_start_timer.constprop.1>
 8003c80:	462e      	mov	r6, r5
 8003c82:	2720      	movs	r7, #32
 8003c84:	f387 8811 	msr	BASEPRI, r7
 8003c88:	2100      	movs	r1, #0
 8003c8a:	4620      	mov	r0, r4
 8003c8c:	f7fd fd58 	bl	8001740 <chSchWakeupS>
 8003c90:	4620      	mov	r0, r4
 8003c92:	2100      	movs	r1, #0
 8003c94:	f7fd fd54 	bl	8001740 <chSchWakeupS>
 8003c98:	4620      	mov	r0, r4
 8003c9a:	2100      	movs	r1, #0
 8003c9c:	f7fd fd50 	bl	8001740 <chSchWakeupS>
 8003ca0:	4620      	mov	r0, r4
 8003ca2:	2100      	movs	r1, #0
 8003ca4:	f7fd fd4c 	bl	8001740 <chSchWakeupS>
 8003ca8:	f386 8811 	msr	BASEPRI, r6
 8003cac:	f898 3000 	ldrb.w	r3, [r8]
 8003cb0:	3504      	adds	r5, #4
 8003cb2:	2b00      	cmp	r3, #0
 8003cb4:	d0e6      	beq.n	8003c84 <bmk4_execute+0x34>
 8003cb6:	f387 8811 	msr	BASEPRI, r7
 8003cba:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003cbe:	4620      	mov	r0, r4
 8003cc0:	f7fd fd3e 	bl	8001740 <chSchWakeupS>
 8003cc4:	f386 8811 	msr	BASEPRI, r6
 8003cc8:	f7ff fea2 	bl	8003a10 <test_wait_threads>
 8003ccc:	4809      	ldr	r0, [pc, #36]	; (8003cf4 <bmk4_execute+0xa4>)
 8003cce:	f7fc fdbf 	bl	8000850 <test_print>
 8003cd2:	0068      	lsls	r0, r5, #1
 8003cd4:	f7fc fcc4 	bl	8000660 <test_printn>
 8003cd8:	4807      	ldr	r0, [pc, #28]	; (8003cf8 <bmk4_execute+0xa8>)
 8003cda:	b002      	add	sp, #8
 8003cdc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003ce0:	f7fc bd96 	b.w	8000810 <test_println>
 8003ce4:	20000938 	.word	0x20000938
 8003ce8:	08001b11 	.word	0x08001b11
 8003cec:	20000b40 	.word	0x20000b40
 8003cf0:	200011d4 	.word	0x200011d4
 8003cf4:	08005c20 	.word	0x08005c20
 8003cf8:	08005d50 	.word	0x08005d50
 8003cfc:	200011d0 	.word	0x200011d0

08003d00 <bmk3_execute>:
 8003d00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d04:	4f2c      	ldr	r7, [pc, #176]	; (8003db8 <bmk3_execute+0xb8>)
 8003d06:	4d2d      	ldr	r5, [pc, #180]	; (8003dbc <bmk3_execute+0xbc>)
 8003d08:	69ba      	ldr	r2, [r7, #24]
 8003d0a:	4b2d      	ldr	r3, [pc, #180]	; (8003dc0 <bmk3_execute+0xc0>)
 8003d0c:	6892      	ldr	r2, [r2, #8]
 8003d0e:	4c2d      	ldr	r4, [pc, #180]	; (8003dc4 <bmk3_execute+0xc4>)
 8003d10:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8003dd4 <bmk3_execute+0xd4>
 8003d14:	b082      	sub	sp, #8
 8003d16:	2600      	movs	r6, #0
 8003d18:	3201      	adds	r2, #1
 8003d1a:	4628      	mov	r0, r5
 8003d1c:	9600      	str	r6, [sp, #0]
 8003d1e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d22:	f7fd fded 	bl	8001900 <chThdCreateStatic>
 8003d26:	69bb      	ldr	r3, [r7, #24]
 8003d28:	6020      	str	r0, [r4, #0]
 8003d2a:	689a      	ldr	r2, [r3, #8]
 8003d2c:	9600      	str	r6, [sp, #0]
 8003d2e:	4643      	mov	r3, r8
 8003d30:	3a02      	subs	r2, #2
 8003d32:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8003d36:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d3a:	f7fd fde1 	bl	8001900 <chThdCreateStatic>
 8003d3e:	69bb      	ldr	r3, [r7, #24]
 8003d40:	6060      	str	r0, [r4, #4]
 8003d42:	689a      	ldr	r2, [r3, #8]
 8003d44:	9600      	str	r6, [sp, #0]
 8003d46:	4643      	mov	r3, r8
 8003d48:	3a03      	subs	r2, #3
 8003d4a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8003d4e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d52:	f7fd fdd5 	bl	8001900 <chThdCreateStatic>
 8003d56:	69bb      	ldr	r3, [r7, #24]
 8003d58:	60a0      	str	r0, [r4, #8]
 8003d5a:	689a      	ldr	r2, [r3, #8]
 8003d5c:	9600      	str	r6, [sp, #0]
 8003d5e:	4643      	mov	r3, r8
 8003d60:	3a04      	subs	r2, #4
 8003d62:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8003d66:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d6a:	f7fd fdc9 	bl	8001900 <chThdCreateStatic>
 8003d6e:	69bb      	ldr	r3, [r7, #24]
 8003d70:	60e0      	str	r0, [r4, #12]
 8003d72:	689a      	ldr	r2, [r3, #8]
 8003d74:	9600      	str	r6, [sp, #0]
 8003d76:	3a05      	subs	r2, #5
 8003d78:	4643      	mov	r3, r8
 8003d7a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d7e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8003d82:	f7fd fdbd 	bl	8001900 <chThdCreateStatic>
 8003d86:	6120      	str	r0, [r4, #16]
 8003d88:	6820      	ldr	r0, [r4, #0]
 8003d8a:	f7fe ff51 	bl	8002c30 <msg_loop_test>
 8003d8e:	4604      	mov	r4, r0
 8003d90:	f7ff fe3e 	bl	8003a10 <test_wait_threads>
 8003d94:	480c      	ldr	r0, [pc, #48]	; (8003dc8 <bmk3_execute+0xc8>)
 8003d96:	f7fc fd5b 	bl	8000850 <test_print>
 8003d9a:	4620      	mov	r0, r4
 8003d9c:	f7fc fc60 	bl	8000660 <test_printn>
 8003da0:	480a      	ldr	r0, [pc, #40]	; (8003dcc <bmk3_execute+0xcc>)
 8003da2:	f7fc fd55 	bl	8000850 <test_print>
 8003da6:	0060      	lsls	r0, r4, #1
 8003da8:	f7fc fc5a 	bl	8000660 <test_printn>
 8003dac:	4808      	ldr	r0, [pc, #32]	; (8003dd0 <bmk3_execute+0xd0>)
 8003dae:	b002      	add	sp, #8
 8003db0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003db4:	f7fc bd2c 	b.w	8000810 <test_println>
 8003db8:	20000938 	.word	0x20000938
 8003dbc:	20000b40 	.word	0x20000b40
 8003dc0:	08002b31 	.word	0x08002b31
 8003dc4:	200011d4 	.word	0x200011d4
 8003dc8:	08005c20 	.word	0x08005c20
 8003dcc:	08005d10 	.word	0x08005d10
 8003dd0:	08005d50 	.word	0x08005d50
 8003dd4:	08005bb1 	.word	0x08005bb1
	...

08003de0 <bmk2_execute>:
 8003de0:	b510      	push	{r4, lr}
 8003de2:	4a13      	ldr	r2, [pc, #76]	; (8003e30 <bmk2_execute+0x50>)
 8003de4:	4b13      	ldr	r3, [pc, #76]	; (8003e34 <bmk2_execute+0x54>)
 8003de6:	6992      	ldr	r2, [r2, #24]
 8003de8:	4813      	ldr	r0, [pc, #76]	; (8003e38 <bmk2_execute+0x58>)
 8003dea:	6892      	ldr	r2, [r2, #8]
 8003dec:	b082      	sub	sp, #8
 8003dee:	2100      	movs	r1, #0
 8003df0:	3201      	adds	r2, #1
 8003df2:	9100      	str	r1, [sp, #0]
 8003df4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003df8:	f7fd fd82 	bl	8001900 <chThdCreateStatic>
 8003dfc:	4b0f      	ldr	r3, [pc, #60]	; (8003e3c <bmk2_execute+0x5c>)
 8003dfe:	6018      	str	r0, [r3, #0]
 8003e00:	f7fe ff16 	bl	8002c30 <msg_loop_test>
 8003e04:	4604      	mov	r4, r0
 8003e06:	f7ff fe03 	bl	8003a10 <test_wait_threads>
 8003e0a:	480d      	ldr	r0, [pc, #52]	; (8003e40 <bmk2_execute+0x60>)
 8003e0c:	f7fc fd20 	bl	8000850 <test_print>
 8003e10:	4620      	mov	r0, r4
 8003e12:	f7fc fc25 	bl	8000660 <test_printn>
 8003e16:	480b      	ldr	r0, [pc, #44]	; (8003e44 <bmk2_execute+0x64>)
 8003e18:	f7fc fd1a 	bl	8000850 <test_print>
 8003e1c:	0060      	lsls	r0, r4, #1
 8003e1e:	f7fc fc1f 	bl	8000660 <test_printn>
 8003e22:	4809      	ldr	r0, [pc, #36]	; (8003e48 <bmk2_execute+0x68>)
 8003e24:	b002      	add	sp, #8
 8003e26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e2a:	f7fc bcf1 	b.w	8000810 <test_println>
 8003e2e:	bf00      	nop
 8003e30:	20000938 	.word	0x20000938
 8003e34:	08002b31 	.word	0x08002b31
 8003e38:	20000b40 	.word	0x20000b40
 8003e3c:	200011d4 	.word	0x200011d4
 8003e40:	08005c20 	.word	0x08005c20
 8003e44:	08005d10 	.word	0x08005d10
 8003e48:	08005d50 	.word	0x08005d50
 8003e4c:	00000000 	.word	0x00000000

08003e50 <bmk1_execute>:
 8003e50:	b510      	push	{r4, lr}
 8003e52:	4a13      	ldr	r2, [pc, #76]	; (8003ea0 <bmk1_execute+0x50>)
 8003e54:	4b13      	ldr	r3, [pc, #76]	; (8003ea4 <bmk1_execute+0x54>)
 8003e56:	6992      	ldr	r2, [r2, #24]
 8003e58:	4813      	ldr	r0, [pc, #76]	; (8003ea8 <bmk1_execute+0x58>)
 8003e5a:	6892      	ldr	r2, [r2, #8]
 8003e5c:	b082      	sub	sp, #8
 8003e5e:	2100      	movs	r1, #0
 8003e60:	3a01      	subs	r2, #1
 8003e62:	9100      	str	r1, [sp, #0]
 8003e64:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003e68:	f7fd fd4a 	bl	8001900 <chThdCreateStatic>
 8003e6c:	4b0f      	ldr	r3, [pc, #60]	; (8003eac <bmk1_execute+0x5c>)
 8003e6e:	6018      	str	r0, [r3, #0]
 8003e70:	f7fe fede 	bl	8002c30 <msg_loop_test>
 8003e74:	4604      	mov	r4, r0
 8003e76:	f7ff fdcb 	bl	8003a10 <test_wait_threads>
 8003e7a:	480d      	ldr	r0, [pc, #52]	; (8003eb0 <bmk1_execute+0x60>)
 8003e7c:	f7fc fce8 	bl	8000850 <test_print>
 8003e80:	4620      	mov	r0, r4
 8003e82:	f7fc fbed 	bl	8000660 <test_printn>
 8003e86:	480b      	ldr	r0, [pc, #44]	; (8003eb4 <bmk1_execute+0x64>)
 8003e88:	f7fc fce2 	bl	8000850 <test_print>
 8003e8c:	0060      	lsls	r0, r4, #1
 8003e8e:	f7fc fbe7 	bl	8000660 <test_printn>
 8003e92:	4809      	ldr	r0, [pc, #36]	; (8003eb8 <bmk1_execute+0x68>)
 8003e94:	b002      	add	sp, #8
 8003e96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e9a:	f7fc bcb9 	b.w	8000810 <test_println>
 8003e9e:	bf00      	nop
 8003ea0:	20000938 	.word	0x20000938
 8003ea4:	08002b31 	.word	0x08002b31
 8003ea8:	20000b40 	.word	0x20000b40
 8003eac:	200011d4 	.word	0x200011d4
 8003eb0:	08005c20 	.word	0x08005c20
 8003eb4:	08005d10 	.word	0x08005d10
 8003eb8:	08005d50 	.word	0x08005d50
 8003ebc:	00000000 	.word	0x00000000

08003ec0 <queues2_execute>:
 8003ec0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003ec4:	2320      	movs	r3, #32
 8003ec6:	b083      	sub	sp, #12
 8003ec8:	f383 8811 	msr	BASEPRI, r3
 8003ecc:	4d8a      	ldr	r5, [pc, #552]	; (80040f8 <queues2_execute+0x238>)
 8003ece:	e9d5 3205 	ldrd	r3, r2, [r5, #20]
 8003ed2:	429a      	cmp	r2, r3
 8003ed4:	d041      	beq.n	8003f5a <queues2_execute+0x9a>
 8003ed6:	2100      	movs	r1, #0
 8003ed8:	2001      	movs	r0, #1
 8003eda:	f7fc fc49 	bl	8000770 <_test_assert>
 8003ede:	bbb0      	cbnz	r0, 8003f4e <queues2_execute+0x8e>
 8003ee0:	f380 8811 	msr	BASEPRI, r0
 8003ee4:	4e84      	ldr	r6, [pc, #528]	; (80040f8 <queues2_execute+0x238>)
 8003ee6:	2441      	movs	r4, #65	; 0x41
 8003ee8:	4621      	mov	r1, r4
 8003eea:	3401      	adds	r4, #1
 8003eec:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003ef0:	4630      	mov	r0, r6
 8003ef2:	b2e4      	uxtb	r4, r4
 8003ef4:	f7fe fafc 	bl	80024f0 <chOQPutTimeout>
 8003ef8:	2c45      	cmp	r4, #69	; 0x45
 8003efa:	d1f5      	bne.n	8003ee8 <queues2_execute+0x28>
 8003efc:	2620      	movs	r6, #32
 8003efe:	f386 8811 	msr	BASEPRI, r6
 8003f02:	68a9      	ldr	r1, [r5, #8]
 8003f04:	fab1 f181 	clz	r1, r1
 8003f08:	0949      	lsrs	r1, r1, #5
 8003f0a:	2002      	movs	r0, #2
 8003f0c:	f7fc fc30 	bl	8000770 <_test_assert>
 8003f10:	4607      	mov	r7, r0
 8003f12:	b9e0      	cbnz	r0, 8003f4e <queues2_execute+0x8e>
 8003f14:	f380 8811 	msr	BASEPRI, r0
 8003f18:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 80040f8 <queues2_execute+0x238>
 8003f1c:	4680      	mov	r8, r0
 8003f1e:	2404      	movs	r4, #4
 8003f20:	f386 8811 	msr	BASEPRI, r6
 8003f24:	4648      	mov	r0, r9
 8003f26:	f7fc ff0b 	bl	8000d40 <chOQGetI>
 8003f2a:	f388 8811 	msr	BASEPRI, r8
 8003f2e:	b2c0      	uxtb	r0, r0
 8003f30:	f7fc fc36 	bl	80007a0 <test_emit_token>
 8003f34:	3c01      	subs	r4, #1
 8003f36:	d1f3      	bne.n	8003f20 <queues2_execute+0x60>
 8003f38:	f386 8811 	msr	BASEPRI, r6
 8003f3c:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 8003f40:	429a      	cmp	r2, r3
 8003f42:	d029      	beq.n	8003f98 <queues2_execute+0xd8>
 8003f44:	4639      	mov	r1, r7
 8003f46:	2003      	movs	r0, #3
 8003f48:	f7fc fc12 	bl	8000770 <_test_assert>
 8003f4c:	b150      	cbz	r0, 8003f64 <queues2_execute+0xa4>
 8003f4e:	2300      	movs	r3, #0
 8003f50:	f383 8811 	msr	BASEPRI, r3
 8003f54:	b003      	add	sp, #12
 8003f56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003f5a:	68a9      	ldr	r1, [r5, #8]
 8003f5c:	3100      	adds	r1, #0
 8003f5e:	bf18      	it	ne
 8003f60:	2101      	movne	r1, #1
 8003f62:	e7b9      	b.n	8003ed8 <queues2_execute+0x18>
 8003f64:	f380 8811 	msr	BASEPRI, r0
 8003f68:	4964      	ldr	r1, [pc, #400]	; (80040fc <queues2_execute+0x23c>)
 8003f6a:	2004      	movs	r0, #4
 8003f6c:	f7fc fbd8 	bl	8000720 <_test_assert_sequence>
 8003f70:	4604      	mov	r4, r0
 8003f72:	2800      	cmp	r0, #0
 8003f74:	d1ee      	bne.n	8003f54 <queues2_execute+0x94>
 8003f76:	2620      	movs	r6, #32
 8003f78:	f386 8811 	msr	BASEPRI, r6
 8003f7c:	485e      	ldr	r0, [pc, #376]	; (80040f8 <queues2_execute+0x238>)
 8003f7e:	f7fc fedf 	bl	8000d40 <chOQGetI>
 8003f82:	3003      	adds	r0, #3
 8003f84:	bf14      	ite	ne
 8003f86:	2100      	movne	r1, #0
 8003f88:	2101      	moveq	r1, #1
 8003f8a:	2005      	movs	r0, #5
 8003f8c:	f7fc fbf0 	bl	8000770 <_test_assert>
 8003f90:	b138      	cbz	r0, 8003fa2 <queues2_execute+0xe2>
 8003f92:	f384 8811 	msr	BASEPRI, r4
 8003f96:	e7dd      	b.n	8003f54 <queues2_execute+0x94>
 8003f98:	68af      	ldr	r7, [r5, #8]
 8003f9a:	3700      	adds	r7, #0
 8003f9c:	bf18      	it	ne
 8003f9e:	2701      	movne	r7, #1
 8003fa0:	e7d0      	b.n	8003f44 <queues2_execute+0x84>
 8003fa2:	f380 8811 	msr	BASEPRI, r0
 8003fa6:	2208      	movs	r2, #8
 8003fa8:	4603      	mov	r3, r0
 8003faa:	4955      	ldr	r1, [pc, #340]	; (8004100 <queues2_execute+0x240>)
 8003fac:	4852      	ldr	r0, [pc, #328]	; (80040f8 <queues2_execute+0x238>)
 8003fae:	f7fe fa47 	bl	8002440 <chOQWriteTimeout>
 8003fb2:	f1a0 0104 	sub.w	r1, r0, #4
 8003fb6:	fab1 f181 	clz	r1, r1
 8003fba:	0949      	lsrs	r1, r1, #5
 8003fbc:	2006      	movs	r0, #6
 8003fbe:	f7fc fbd7 	bl	8000770 <_test_assert>
 8003fc2:	4604      	mov	r4, r0
 8003fc4:	2800      	cmp	r0, #0
 8003fc6:	d1c5      	bne.n	8003f54 <queues2_execute+0x94>
 8003fc8:	f386 8811 	msr	BASEPRI, r6
 8003fcc:	68a9      	ldr	r1, [r5, #8]
 8003fce:	fab1 f181 	clz	r1, r1
 8003fd2:	0949      	lsrs	r1, r1, #5
 8003fd4:	2007      	movs	r0, #7
 8003fd6:	f7fc fbcb 	bl	8000770 <_test_assert>
 8003fda:	4607      	mov	r7, r0
 8003fdc:	2800      	cmp	r0, #0
 8003fde:	d1d8      	bne.n	8003f92 <queues2_execute+0xd2>
 8003fe0:	f380 8811 	msr	BASEPRI, r0
 8003fe4:	4a47      	ldr	r2, [pc, #284]	; (8004104 <queues2_execute+0x244>)
 8003fe6:	4b48      	ldr	r3, [pc, #288]	; (8004108 <queues2_execute+0x248>)
 8003fe8:	6992      	ldr	r2, [r2, #24]
 8003fea:	4848      	ldr	r0, [pc, #288]	; (800410c <queues2_execute+0x24c>)
 8003fec:	6892      	ldr	r2, [r2, #8]
 8003fee:	9700      	str	r7, [sp, #0]
 8003ff0:	3201      	adds	r2, #1
 8003ff2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003ff6:	f7fd fc83 	bl	8001900 <chThdCreateStatic>
 8003ffa:	4b45      	ldr	r3, [pc, #276]	; (8004110 <queues2_execute+0x250>)
 8003ffc:	6018      	str	r0, [r3, #0]
 8003ffe:	f386 8811 	msr	BASEPRI, r6
 8004002:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 8004006:	68a9      	ldr	r1, [r5, #8]
 8004008:	1a9b      	subs	r3, r3, r2
 800400a:	1a59      	subs	r1, r3, r1
 800400c:	f1a1 0104 	sub.w	r1, r1, #4
 8004010:	fab1 f181 	clz	r1, r1
 8004014:	0949      	lsrs	r1, r1, #5
 8004016:	2008      	movs	r0, #8
 8004018:	f7fc fbaa 	bl	8000770 <_test_assert>
 800401c:	b110      	cbz	r0, 8004024 <queues2_execute+0x164>
 800401e:	f387 8811 	msr	BASEPRI, r7
 8004022:	e797      	b.n	8003f54 <queues2_execute+0x94>
 8004024:	f380 8811 	msr	BASEPRI, r0
 8004028:	f7ff fcf2 	bl	8003a10 <test_wait_threads>
 800402c:	f386 8811 	msr	BASEPRI, r6
 8004030:	e9d5 1203 	ldrd	r1, r2, [r5, #12]
 8004034:	682b      	ldr	r3, [r5, #0]
 8004036:	61a9      	str	r1, [r5, #24]
 8004038:	1a52      	subs	r2, r2, r1
 800403a:	42ab      	cmp	r3, r5
 800403c:	6169      	str	r1, [r5, #20]
 800403e:	60aa      	str	r2, [r5, #8]
 8004040:	d00b      	beq.n	800405a <queues2_execute+0x19a>
 8004042:	f06f 0401 	mvn.w	r4, #1
 8004046:	681a      	ldr	r2, [r3, #0]
 8004048:	602a      	str	r2, [r5, #0]
 800404a:	6055      	str	r5, [r2, #4]
 800404c:	4618      	mov	r0, r3
 800404e:	621c      	str	r4, [r3, #32]
 8004050:	f7fc fe1e 	bl	8000c90 <chSchReadyI>
 8004054:	682b      	ldr	r3, [r5, #0]
 8004056:	42ab      	cmp	r3, r5
 8004058:	d1f5      	bne.n	8004046 <queues2_execute+0x186>
 800405a:	2400      	movs	r4, #0
 800405c:	f384 8811 	msr	BASEPRI, r4
 8004060:	2620      	movs	r6, #32
 8004062:	f386 8811 	msr	BASEPRI, r6
 8004066:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 800406a:	68a9      	ldr	r1, [r5, #8]
 800406c:	1a9b      	subs	r3, r3, r2
 800406e:	1a5f      	subs	r7, r3, r1
 8004070:	4279      	negs	r1, r7
 8004072:	4179      	adcs	r1, r7
 8004074:	2009      	movs	r0, #9
 8004076:	f7fc fb7b 	bl	8000770 <_test_assert>
 800407a:	4603      	mov	r3, r0
 800407c:	2800      	cmp	r0, #0
 800407e:	d188      	bne.n	8003f92 <queues2_execute+0xd2>
 8004080:	f380 8811 	msr	BASEPRI, r0
 8004084:	2202      	movs	r2, #2
 8004086:	491e      	ldr	r1, [pc, #120]	; (8004100 <queues2_execute+0x240>)
 8004088:	481b      	ldr	r0, [pc, #108]	; (80040f8 <queues2_execute+0x238>)
 800408a:	f7fe f9d9 	bl	8002440 <chOQWriteTimeout>
 800408e:	3802      	subs	r0, #2
 8004090:	4241      	negs	r1, r0
 8004092:	4141      	adcs	r1, r0
 8004094:	200a      	movs	r0, #10
 8004096:	f7fc fb6b 	bl	8000770 <_test_assert>
 800409a:	4603      	mov	r3, r0
 800409c:	2800      	cmp	r0, #0
 800409e:	f47f af59 	bne.w	8003f54 <queues2_execute+0x94>
 80040a2:	2202      	movs	r2, #2
 80040a4:	4916      	ldr	r1, [pc, #88]	; (8004100 <queues2_execute+0x240>)
 80040a6:	4814      	ldr	r0, [pc, #80]	; (80040f8 <queues2_execute+0x238>)
 80040a8:	f7fe f9ca 	bl	8002440 <chOQWriteTimeout>
 80040ac:	1e82      	subs	r2, r0, #2
 80040ae:	4251      	negs	r1, r2
 80040b0:	4151      	adcs	r1, r2
 80040b2:	200b      	movs	r0, #11
 80040b4:	f7fc fb5c 	bl	8000770 <_test_assert>
 80040b8:	4604      	mov	r4, r0
 80040ba:	2800      	cmp	r0, #0
 80040bc:	f47f af4a 	bne.w	8003f54 <queues2_execute+0x94>
 80040c0:	f386 8811 	msr	BASEPRI, r6
 80040c4:	68a9      	ldr	r1, [r5, #8]
 80040c6:	fab1 f181 	clz	r1, r1
 80040ca:	0949      	lsrs	r1, r1, #5
 80040cc:	200c      	movs	r0, #12
 80040ce:	f7fc fb4f 	bl	8000770 <_test_assert>
 80040d2:	4601      	mov	r1, r0
 80040d4:	2800      	cmp	r0, #0
 80040d6:	f47f af5c 	bne.w	8003f92 <queues2_execute+0xd2>
 80040da:	f380 8811 	msr	BASEPRI, r0
 80040de:	220a      	movs	r2, #10
 80040e0:	4805      	ldr	r0, [pc, #20]	; (80040f8 <queues2_execute+0x238>)
 80040e2:	f7fe fa05 	bl	80024f0 <chOQPutTimeout>
 80040e6:	1c43      	adds	r3, r0, #1
 80040e8:	4259      	negs	r1, r3
 80040ea:	4159      	adcs	r1, r3
 80040ec:	200d      	movs	r0, #13
 80040ee:	b003      	add	sp, #12
 80040f0:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80040f4:	f7fc bb3c 	b.w	8000770 <_test_assert>
 80040f8:	20000888 	.word	0x20000888
 80040fc:	08006170 	.word	0x08006170
 8004100:	20000c88 	.word	0x20000c88
 8004104:	20000938 	.word	0x20000938
 8004108:	08002541 	.word	0x08002541
 800410c:	20000b40 	.word	0x20000b40
 8004110:	200011d4 	.word	0x200011d4
	...

08004120 <queues1_execute>:
 8004120:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004122:	2620      	movs	r6, #32
 8004124:	b083      	sub	sp, #12
 8004126:	f386 8811 	msr	BASEPRI, r6
 800412a:	4c9f      	ldr	r4, [pc, #636]	; (80043a8 <queues1_execute+0x288>)
 800412c:	68a1      	ldr	r1, [r4, #8]
 800412e:	fab1 f181 	clz	r1, r1
 8004132:	0949      	lsrs	r1, r1, #5
 8004134:	2001      	movs	r0, #1
 8004136:	f7fc fb1b 	bl	8000770 <_test_assert>
 800413a:	bb10      	cbnz	r0, 8004182 <queues1_execute+0x62>
 800413c:	4605      	mov	r5, r0
 800413e:	f380 8811 	msr	BASEPRI, r0
 8004142:	f386 8811 	msr	BASEPRI, r6
 8004146:	2141      	movs	r1, #65	; 0x41
 8004148:	4620      	mov	r0, r4
 800414a:	f7fc fdd1 	bl	8000cf0 <chIQPutI>
 800414e:	4620      	mov	r0, r4
 8004150:	2142      	movs	r1, #66	; 0x42
 8004152:	f7fc fdcd 	bl	8000cf0 <chIQPutI>
 8004156:	4620      	mov	r0, r4
 8004158:	2143      	movs	r1, #67	; 0x43
 800415a:	f7fc fdc9 	bl	8000cf0 <chIQPutI>
 800415e:	4620      	mov	r0, r4
 8004160:	2144      	movs	r1, #68	; 0x44
 8004162:	f7fc fdc5 	bl	8000cf0 <chIQPutI>
 8004166:	f385 8811 	msr	BASEPRI, r5
 800416a:	f386 8811 	msr	BASEPRI, r6
 800416e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8004172:	429a      	cmp	r2, r3
 8004174:	d038      	beq.n	80041e8 <queues1_execute+0xc8>
 8004176:	4629      	mov	r1, r5
 8004178:	2002      	movs	r0, #2
 800417a:	f7fc faf9 	bl	8000770 <_test_assert>
 800417e:	4605      	mov	r5, r0
 8004180:	b120      	cbz	r0, 800418c <queues1_execute+0x6c>
 8004182:	2300      	movs	r3, #0
 8004184:	f383 8811 	msr	BASEPRI, r3
 8004188:	b003      	add	sp, #12
 800418a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800418c:	f380 8811 	msr	BASEPRI, r0
 8004190:	2320      	movs	r3, #32
 8004192:	f383 8811 	msr	BASEPRI, r3
 8004196:	4884      	ldr	r0, [pc, #528]	; (80043a8 <queues1_execute+0x288>)
 8004198:	4629      	mov	r1, r5
 800419a:	f7fc fda9 	bl	8000cf0 <chIQPutI>
 800419e:	3004      	adds	r0, #4
 80041a0:	bf14      	ite	ne
 80041a2:	2100      	movne	r1, #0
 80041a4:	2101      	moveq	r1, #1
 80041a6:	2003      	movs	r0, #3
 80041a8:	f7fc fae2 	bl	8000770 <_test_assert>
 80041ac:	b9c0      	cbnz	r0, 80041e0 <queues1_execute+0xc0>
 80041ae:	f380 8811 	msr	BASEPRI, r0
 80041b2:	4e7d      	ldr	r6, [pc, #500]	; (80043a8 <queues1_execute+0x288>)
 80041b4:	2504      	movs	r5, #4
 80041b6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80041ba:	4630      	mov	r0, r6
 80041bc:	f7fe fa28 	bl	8002610 <chIQGetTimeout>
 80041c0:	b2c0      	uxtb	r0, r0
 80041c2:	f7fc faed 	bl	80007a0 <test_emit_token>
 80041c6:	3d01      	subs	r5, #1
 80041c8:	d1f5      	bne.n	80041b6 <queues1_execute+0x96>
 80041ca:	2620      	movs	r6, #32
 80041cc:	f386 8811 	msr	BASEPRI, r6
 80041d0:	68a1      	ldr	r1, [r4, #8]
 80041d2:	fab1 f181 	clz	r1, r1
 80041d6:	0949      	lsrs	r1, r1, #5
 80041d8:	2004      	movs	r0, #4
 80041da:	f7fc fac9 	bl	8000770 <_test_assert>
 80041de:	b178      	cbz	r0, 8004200 <queues1_execute+0xe0>
 80041e0:	f385 8811 	msr	BASEPRI, r5
 80041e4:	b003      	add	sp, #12
 80041e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80041e8:	68a5      	ldr	r5, [r4, #8]
 80041ea:	3500      	adds	r5, #0
 80041ec:	bf18      	it	ne
 80041ee:	2501      	movne	r5, #1
 80041f0:	4629      	mov	r1, r5
 80041f2:	2002      	movs	r0, #2
 80041f4:	f7fc fabc 	bl	8000770 <_test_assert>
 80041f8:	4605      	mov	r5, r0
 80041fa:	2800      	cmp	r0, #0
 80041fc:	d1c1      	bne.n	8004182 <queues1_execute+0x62>
 80041fe:	e7c5      	b.n	800418c <queues1_execute+0x6c>
 8004200:	f385 8811 	msr	BASEPRI, r5
 8004204:	4969      	ldr	r1, [pc, #420]	; (80043ac <queues1_execute+0x28c>)
 8004206:	2005      	movs	r0, #5
 8004208:	f7fc fa8a 	bl	8000720 <_test_assert_sequence>
 800420c:	2800      	cmp	r0, #0
 800420e:	d1bb      	bne.n	8004188 <queues1_execute+0x68>
 8004210:	f386 8811 	msr	BASEPRI, r6
 8004214:	2141      	movs	r1, #65	; 0x41
 8004216:	4864      	ldr	r0, [pc, #400]	; (80043a8 <queues1_execute+0x288>)
 8004218:	f7fc fd6a 	bl	8000cf0 <chIQPutI>
 800421c:	2142      	movs	r1, #66	; 0x42
 800421e:	4862      	ldr	r0, [pc, #392]	; (80043a8 <queues1_execute+0x288>)
 8004220:	f7fc fd66 	bl	8000cf0 <chIQPutI>
 8004224:	2143      	movs	r1, #67	; 0x43
 8004226:	4860      	ldr	r0, [pc, #384]	; (80043a8 <queues1_execute+0x288>)
 8004228:	f7fc fd62 	bl	8000cf0 <chIQPutI>
 800422c:	2144      	movs	r1, #68	; 0x44
 800422e:	485e      	ldr	r0, [pc, #376]	; (80043a8 <queues1_execute+0x288>)
 8004230:	f7fc fd5e 	bl	8000cf0 <chIQPutI>
 8004234:	f385 8811 	msr	BASEPRI, r5
 8004238:	495d      	ldr	r1, [pc, #372]	; (80043b0 <queues1_execute+0x290>)
 800423a:	485b      	ldr	r0, [pc, #364]	; (80043a8 <queues1_execute+0x288>)
 800423c:	2208      	movs	r2, #8
 800423e:	462b      	mov	r3, r5
 8004240:	f7fe f996 	bl	8002570 <chIQReadTimeout>
 8004244:	f1a0 0104 	sub.w	r1, r0, #4
 8004248:	fab1 f181 	clz	r1, r1
 800424c:	0949      	lsrs	r1, r1, #5
 800424e:	2006      	movs	r0, #6
 8004250:	f7fc fa8e 	bl	8000770 <_test_assert>
 8004254:	2800      	cmp	r0, #0
 8004256:	d197      	bne.n	8004188 <queues1_execute+0x68>
 8004258:	f386 8811 	msr	BASEPRI, r6
 800425c:	68a1      	ldr	r1, [r4, #8]
 800425e:	fab1 f181 	clz	r1, r1
 8004262:	0949      	lsrs	r1, r1, #5
 8004264:	2007      	movs	r0, #7
 8004266:	f7fc fa83 	bl	8000770 <_test_assert>
 800426a:	2800      	cmp	r0, #0
 800426c:	d1b8      	bne.n	80041e0 <queues1_execute+0xc0>
 800426e:	f385 8811 	msr	BASEPRI, r5
 8004272:	f386 8811 	msr	BASEPRI, r6
 8004276:	2141      	movs	r1, #65	; 0x41
 8004278:	484b      	ldr	r0, [pc, #300]	; (80043a8 <queues1_execute+0x288>)
 800427a:	f7fc fd39 	bl	8000cf0 <chIQPutI>
 800427e:	2142      	movs	r1, #66	; 0x42
 8004280:	4849      	ldr	r0, [pc, #292]	; (80043a8 <queues1_execute+0x288>)
 8004282:	f7fc fd35 	bl	8000cf0 <chIQPutI>
 8004286:	2143      	movs	r1, #67	; 0x43
 8004288:	4847      	ldr	r0, [pc, #284]	; (80043a8 <queues1_execute+0x288>)
 800428a:	f7fc fd31 	bl	8000cf0 <chIQPutI>
 800428e:	2144      	movs	r1, #68	; 0x44
 8004290:	4845      	ldr	r0, [pc, #276]	; (80043a8 <queues1_execute+0x288>)
 8004292:	f7fc fd2d 	bl	8000cf0 <chIQPutI>
 8004296:	f385 8811 	msr	BASEPRI, r5
 800429a:	4945      	ldr	r1, [pc, #276]	; (80043b0 <queues1_execute+0x290>)
 800429c:	4842      	ldr	r0, [pc, #264]	; (80043a8 <queues1_execute+0x288>)
 800429e:	2202      	movs	r2, #2
 80042a0:	462b      	mov	r3, r5
 80042a2:	f7fe f965 	bl	8002570 <chIQReadTimeout>
 80042a6:	f1a0 0102 	sub.w	r1, r0, #2
 80042aa:	fab1 f181 	clz	r1, r1
 80042ae:	0949      	lsrs	r1, r1, #5
 80042b0:	2008      	movs	r0, #8
 80042b2:	f7fc fa5d 	bl	8000770 <_test_assert>
 80042b6:	2800      	cmp	r0, #0
 80042b8:	f47f af66 	bne.w	8004188 <queues1_execute+0x68>
 80042bc:	493c      	ldr	r1, [pc, #240]	; (80043b0 <queues1_execute+0x290>)
 80042be:	483a      	ldr	r0, [pc, #232]	; (80043a8 <queues1_execute+0x288>)
 80042c0:	462b      	mov	r3, r5
 80042c2:	2202      	movs	r2, #2
 80042c4:	f7fe f954 	bl	8002570 <chIQReadTimeout>
 80042c8:	f1a0 0102 	sub.w	r1, r0, #2
 80042cc:	fab1 f181 	clz	r1, r1
 80042d0:	0949      	lsrs	r1, r1, #5
 80042d2:	2009      	movs	r0, #9
 80042d4:	f7fc fa4c 	bl	8000770 <_test_assert>
 80042d8:	2800      	cmp	r0, #0
 80042da:	f47f af55 	bne.w	8004188 <queues1_execute+0x68>
 80042de:	f386 8811 	msr	BASEPRI, r6
 80042e2:	68a1      	ldr	r1, [r4, #8]
 80042e4:	fab1 f181 	clz	r1, r1
 80042e8:	0949      	lsrs	r1, r1, #5
 80042ea:	200a      	movs	r0, #10
 80042ec:	f7fc fa40 	bl	8000770 <_test_assert>
 80042f0:	2800      	cmp	r0, #0
 80042f2:	f47f af75 	bne.w	80041e0 <queues1_execute+0xc0>
 80042f6:	f385 8811 	msr	BASEPRI, r5
 80042fa:	f386 8811 	msr	BASEPRI, r6
 80042fe:	482a      	ldr	r0, [pc, #168]	; (80043a8 <queues1_execute+0x288>)
 8004300:	4629      	mov	r1, r5
 8004302:	f7fc fcf5 	bl	8000cf0 <chIQPutI>
 8004306:	6823      	ldr	r3, [r4, #0]
 8004308:	68e2      	ldr	r2, [r4, #12]
 800430a:	60a5      	str	r5, [r4, #8]
 800430c:	42a3      	cmp	r3, r4
 800430e:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8004312:	d00b      	beq.n	800432c <queues1_execute+0x20c>
 8004314:	f06f 0501 	mvn.w	r5, #1
 8004318:	681a      	ldr	r2, [r3, #0]
 800431a:	6022      	str	r2, [r4, #0]
 800431c:	6054      	str	r4, [r2, #4]
 800431e:	4618      	mov	r0, r3
 8004320:	621d      	str	r5, [r3, #32]
 8004322:	f7fc fcb5 	bl	8000c90 <chSchReadyI>
 8004326:	6823      	ldr	r3, [r4, #0]
 8004328:	42a3      	cmp	r3, r4
 800432a:	d1f5      	bne.n	8004318 <queues1_execute+0x1f8>
 800432c:	2700      	movs	r7, #0
 800432e:	f387 8811 	msr	BASEPRI, r7
 8004332:	2620      	movs	r6, #32
 8004334:	f386 8811 	msr	BASEPRI, r6
 8004338:	68a1      	ldr	r1, [r4, #8]
 800433a:	fab1 f181 	clz	r1, r1
 800433e:	0949      	lsrs	r1, r1, #5
 8004340:	200b      	movs	r0, #11
 8004342:	f7fc fa15 	bl	8000770 <_test_assert>
 8004346:	4605      	mov	r5, r0
 8004348:	b110      	cbz	r0, 8004350 <queues1_execute+0x230>
 800434a:	f387 8811 	msr	BASEPRI, r7
 800434e:	e71b      	b.n	8004188 <queues1_execute+0x68>
 8004350:	f380 8811 	msr	BASEPRI, r0
 8004354:	4a17      	ldr	r2, [pc, #92]	; (80043b4 <queues1_execute+0x294>)
 8004356:	4b18      	ldr	r3, [pc, #96]	; (80043b8 <queues1_execute+0x298>)
 8004358:	6992      	ldr	r2, [r2, #24]
 800435a:	4818      	ldr	r0, [pc, #96]	; (80043bc <queues1_execute+0x29c>)
 800435c:	6892      	ldr	r2, [r2, #8]
 800435e:	9500      	str	r5, [sp, #0]
 8004360:	3201      	adds	r2, #1
 8004362:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004366:	f7fd facb 	bl	8001900 <chThdCreateStatic>
 800436a:	4b15      	ldr	r3, [pc, #84]	; (80043c0 <queues1_execute+0x2a0>)
 800436c:	6018      	str	r0, [r3, #0]
 800436e:	f386 8811 	msr	BASEPRI, r6
 8004372:	68a1      	ldr	r1, [r4, #8]
 8004374:	fab1 f181 	clz	r1, r1
 8004378:	0949      	lsrs	r1, r1, #5
 800437a:	200c      	movs	r0, #12
 800437c:	f7fc f9f8 	bl	8000770 <_test_assert>
 8004380:	2800      	cmp	r0, #0
 8004382:	f47f af2d 	bne.w	80041e0 <queues1_execute+0xc0>
 8004386:	f380 8811 	msr	BASEPRI, r0
 800438a:	f7ff fb41 	bl	8003a10 <test_wait_threads>
 800438e:	210a      	movs	r1, #10
 8004390:	4805      	ldr	r0, [pc, #20]	; (80043a8 <queues1_execute+0x288>)
 8004392:	f7fe f93d 	bl	8002610 <chIQGetTimeout>
 8004396:	1c43      	adds	r3, r0, #1
 8004398:	4259      	negs	r1, r3
 800439a:	4159      	adcs	r1, r3
 800439c:	200d      	movs	r0, #13
 800439e:	b003      	add	sp, #12
 80043a0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80043a4:	f7fc b9e4 	b.w	8000770 <_test_assert>
 80043a8:	20000810 	.word	0x20000810
 80043ac:	08006170 	.word	0x08006170
 80043b0:	20000c88 	.word	0x20000c88
 80043b4:	20000938 	.word	0x20000938
 80043b8:	08002661 	.word	0x08002661
 80043bc:	20000b40 	.word	0x20000b40
 80043c0:	200011d4 	.word	0x200011d4
	...

080043d0 <dyn2_execute>:
 80043d0:	4a31      	ldr	r2, [pc, #196]	; (8004498 <dyn2_execute+0xc8>)
 80043d2:	6991      	ldr	r1, [r2, #24]
 80043d4:	4a31      	ldr	r2, [pc, #196]	; (800449c <dyn2_execute+0xcc>)
 80043d6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043d8:	4b31      	ldr	r3, [pc, #196]	; (80044a0 <dyn2_execute+0xd0>)
 80043da:	688d      	ldr	r5, [r1, #8]
 80043dc:	4931      	ldr	r1, [pc, #196]	; (80044a4 <dyn2_execute+0xd4>)
 80043de:	f103 070c 	add.w	r7, r3, #12
 80043e2:	2620      	movs	r6, #32
 80043e4:	2400      	movs	r4, #0
 80043e6:	f386 8811 	msr	BASEPRI, r6
 80043ea:	6808      	ldr	r0, [r1, #0]
 80043ec:	6010      	str	r0, [r2, #0]
 80043ee:	600a      	str	r2, [r1, #0]
 80043f0:	f384 8811 	msr	BASEPRI, r4
 80043f4:	429f      	cmp	r7, r3
 80043f6:	d002      	beq.n	80043fe <dyn2_execute+0x2e>
 80043f8:	f853 2b04 	ldr.w	r2, [r3], #4
 80043fc:	e7f3      	b.n	80043e6 <dyn2_execute+0x16>
 80043fe:	492a      	ldr	r1, [pc, #168]	; (80044a8 <dyn2_execute+0xd8>)
 8004400:	4c2a      	ldr	r4, [pc, #168]	; (80044ac <dyn2_execute+0xdc>)
 8004402:	1e68      	subs	r0, r5, #1
 8004404:	f7fd f9cc 	bl	80017a0 <chThdCreateFromMemoryPool.constprop.51>
 8004408:	4929      	ldr	r1, [pc, #164]	; (80044b0 <dyn2_execute+0xe0>)
 800440a:	6020      	str	r0, [r4, #0]
 800440c:	1ea8      	subs	r0, r5, #2
 800440e:	f7fd f9c7 	bl	80017a0 <chThdCreateFromMemoryPool.constprop.51>
 8004412:	4928      	ldr	r1, [pc, #160]	; (80044b4 <dyn2_execute+0xe4>)
 8004414:	6060      	str	r0, [r4, #4]
 8004416:	1ee8      	subs	r0, r5, #3
 8004418:	f7fd f9c2 	bl	80017a0 <chThdCreateFromMemoryPool.constprop.51>
 800441c:	4926      	ldr	r1, [pc, #152]	; (80044b8 <dyn2_execute+0xe8>)
 800441e:	60a0      	str	r0, [r4, #8]
 8004420:	1f28      	subs	r0, r5, #4
 8004422:	f7fd f9bd 	bl	80017a0 <chThdCreateFromMemoryPool.constprop.51>
 8004426:	4925      	ldr	r1, [pc, #148]	; (80044bc <dyn2_execute+0xec>)
 8004428:	60e0      	str	r0, [r4, #12]
 800442a:	1f68      	subs	r0, r5, #5
 800442c:	f7fd f9b8 	bl	80017a0 <chThdCreateFromMemoryPool.constprop.51>
 8004430:	6821      	ldr	r1, [r4, #0]
 8004432:	6120      	str	r0, [r4, #16]
 8004434:	b141      	cbz	r1, 8004448 <dyn2_execute+0x78>
 8004436:	6861      	ldr	r1, [r4, #4]
 8004438:	b131      	cbz	r1, 8004448 <dyn2_execute+0x78>
 800443a:	68a1      	ldr	r1, [r4, #8]
 800443c:	b121      	cbz	r1, 8004448 <dyn2_execute+0x78>
 800443e:	68e1      	ldr	r1, [r4, #12]
 8004440:	b111      	cbz	r1, 8004448 <dyn2_execute+0x78>
 8004442:	fab0 f180 	clz	r1, r0
 8004446:	0949      	lsrs	r1, r1, #5
 8004448:	2001      	movs	r0, #1
 800444a:	f7fc f991 	bl	8000770 <_test_assert>
 800444e:	b100      	cbz	r0, 8004452 <dyn2_execute+0x82>
 8004450:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004452:	f7ff fadd 	bl	8003a10 <test_wait_threads>
 8004456:	491a      	ldr	r1, [pc, #104]	; (80044c0 <dyn2_execute+0xf0>)
 8004458:	2002      	movs	r0, #2
 800445a:	f7fc f961 	bl	8000720 <_test_assert_sequence>
 800445e:	2800      	cmp	r0, #0
 8004460:	d1f6      	bne.n	8004450 <dyn2_execute+0x80>
 8004462:	4d10      	ldr	r5, [pc, #64]	; (80044a4 <dyn2_execute+0xd4>)
 8004464:	2404      	movs	r4, #4
 8004466:	4628      	mov	r0, r5
 8004468:	f7fc fa9a 	bl	80009a0 <chPoolAlloc>
 800446c:	1c01      	adds	r1, r0, #0
 800446e:	bf18      	it	ne
 8004470:	2101      	movne	r1, #1
 8004472:	2003      	movs	r0, #3
 8004474:	f7fc f97c 	bl	8000770 <_test_assert>
 8004478:	2800      	cmp	r0, #0
 800447a:	d1e9      	bne.n	8004450 <dyn2_execute+0x80>
 800447c:	3c01      	subs	r4, #1
 800447e:	d1f2      	bne.n	8004466 <dyn2_execute+0x96>
 8004480:	4808      	ldr	r0, [pc, #32]	; (80044a4 <dyn2_execute+0xd4>)
 8004482:	f7fc fa8d 	bl	80009a0 <chPoolAlloc>
 8004486:	fab0 f180 	clz	r1, r0
 800448a:	0949      	lsrs	r1, r1, #5
 800448c:	2004      	movs	r0, #4
 800448e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004492:	f7fc b96d 	b.w	8000770 <_test_assert>
 8004496:	bf00      	nop
 8004498:	20000938 	.word	0x20000938
 800449c:	20000b40 	.word	0x20000b40
 80044a0:	08006914 	.word	0x08006914
 80044a4:	20000b10 	.word	0x20000b10
 80044a8:	08005db0 	.word	0x08005db0
 80044ac:	200011d4 	.word	0x200011d4
 80044b0:	08005da0 	.word	0x08005da0
 80044b4:	08005da4 	.word	0x08005da4
 80044b8:	08005da8 	.word	0x08005da8
 80044bc:	08005ff4 	.word	0x08005ff4
 80044c0:	08006170 	.word	0x08006170
	...

080044d0 <dyn1_execute>:
 80044d0:	b570      	push	{r4, r5, r6, lr}
 80044d2:	4b2c      	ldr	r3, [pc, #176]	; (8004584 <dyn1_execute+0xb4>)
 80044d4:	482c      	ldr	r0, [pc, #176]	; (8004588 <dyn1_execute+0xb8>)
 80044d6:	699b      	ldr	r3, [r3, #24]
 80044d8:	4c2c      	ldr	r4, [pc, #176]	; (800458c <dyn1_execute+0xbc>)
 80044da:	689d      	ldr	r5, [r3, #8]
 80044dc:	b082      	sub	sp, #8
 80044de:	4669      	mov	r1, sp
 80044e0:	f7fe fdbe 	bl	8003060 <chHeapStatus>
 80044e4:	492a      	ldr	r1, [pc, #168]	; (8004590 <dyn1_execute+0xc0>)
 80044e6:	1e68      	subs	r0, r5, #1
 80044e8:	f7fe fee2 	bl	80032b0 <chThdCreateFromHeap.constprop.52>
 80044ec:	4929      	ldr	r1, [pc, #164]	; (8004594 <dyn1_execute+0xc4>)
 80044ee:	6020      	str	r0, [r4, #0]
 80044f0:	1ea8      	subs	r0, r5, #2
 80044f2:	f7fe fedd 	bl	80032b0 <chThdCreateFromHeap.constprop.52>
 80044f6:	a901      	add	r1, sp, #4
 80044f8:	6060      	str	r0, [r4, #4]
 80044fa:	4823      	ldr	r0, [pc, #140]	; (8004588 <dyn1_execute+0xb8>)
 80044fc:	f7fe fdb0 	bl	8003060 <chHeapStatus>
 8004500:	9901      	ldr	r1, [sp, #4]
 8004502:	4821      	ldr	r0, [pc, #132]	; (8004588 <dyn1_execute+0xb8>)
 8004504:	f7fe fe8c 	bl	8003220 <chHeapAlloc>
 8004508:	4923      	ldr	r1, [pc, #140]	; (8004598 <dyn1_execute+0xc8>)
 800450a:	4606      	mov	r6, r0
 800450c:	1ee8      	subs	r0, r5, #3
 800450e:	f7fe fecf 	bl	80032b0 <chThdCreateFromHeap.constprop.52>
 8004512:	60a0      	str	r0, [r4, #8]
 8004514:	4630      	mov	r0, r6
 8004516:	f7fe fdcb 	bl	80030b0 <chHeapFree>
 800451a:	6821      	ldr	r1, [r4, #0]
 800451c:	b121      	cbz	r1, 8004528 <dyn1_execute+0x58>
 800451e:	6861      	ldr	r1, [r4, #4]
 8004520:	b111      	cbz	r1, 8004528 <dyn1_execute+0x58>
 8004522:	68a1      	ldr	r1, [r4, #8]
 8004524:	b331      	cbz	r1, 8004574 <dyn1_execute+0xa4>
 8004526:	2100      	movs	r1, #0
 8004528:	2001      	movs	r0, #1
 800452a:	f7fc f921 	bl	8000770 <_test_assert>
 800452e:	b108      	cbz	r0, 8004534 <dyn1_execute+0x64>
 8004530:	b002      	add	sp, #8
 8004532:	bd70      	pop	{r4, r5, r6, pc}
 8004534:	f7ff fa6c 	bl	8003a10 <test_wait_threads>
 8004538:	4918      	ldr	r1, [pc, #96]	; (800459c <dyn1_execute+0xcc>)
 800453a:	2002      	movs	r0, #2
 800453c:	f7fc f8f0 	bl	8000720 <_test_assert_sequence>
 8004540:	2800      	cmp	r0, #0
 8004542:	d1f5      	bne.n	8004530 <dyn1_execute+0x60>
 8004544:	a901      	add	r1, sp, #4
 8004546:	4810      	ldr	r0, [pc, #64]	; (8004588 <dyn1_execute+0xb8>)
 8004548:	f7fe fd8a 	bl	8003060 <chHeapStatus>
 800454c:	f1a0 0101 	sub.w	r1, r0, #1
 8004550:	fab1 f181 	clz	r1, r1
 8004554:	0949      	lsrs	r1, r1, #5
 8004556:	2003      	movs	r0, #3
 8004558:	f7fc f90a 	bl	8000770 <_test_assert>
 800455c:	2800      	cmp	r0, #0
 800455e:	d1e7      	bne.n	8004530 <dyn1_execute+0x60>
 8004560:	e9dd 3100 	ldrd	r3, r1, [sp]
 8004564:	1ac9      	subs	r1, r1, r3
 8004566:	fab1 f181 	clz	r1, r1
 800456a:	0949      	lsrs	r1, r1, #5
 800456c:	2004      	movs	r0, #4
 800456e:	f7fc f8ff 	bl	8000770 <_test_assert>
 8004572:	e7dd      	b.n	8004530 <dyn1_execute+0x60>
 8004574:	68e3      	ldr	r3, [r4, #12]
 8004576:	2b00      	cmp	r3, #0
 8004578:	d1d6      	bne.n	8004528 <dyn1_execute+0x58>
 800457a:	6921      	ldr	r1, [r4, #16]
 800457c:	fab1 f181 	clz	r1, r1
 8004580:	0949      	lsrs	r1, r1, #5
 8004582:	e7d1      	b.n	8004528 <dyn1_execute+0x58>
 8004584:	20000938 	.word	0x20000938
 8004588:	20000ab8 	.word	0x20000ab8
 800458c:	200011d4 	.word	0x200011d4
 8004590:	08005db0 	.word	0x08005db0
 8004594:	08005da0 	.word	0x08005da0
 8004598:	08005da4 	.word	0x08005da4
 800459c:	08005d90 	.word	0x08005d90

080045a0 <evt2_execute>:
 80045a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80045a4:	2520      	movs	r5, #32
 80045a6:	b08f      	sub	sp, #60	; 0x3c
 80045a8:	f385 8811 	msr	BASEPRI, r5
 80045ac:	4ca9      	ldr	r4, [pc, #676]	; (8004854 <evt2_execute+0x2b4>)
 80045ae:	69a2      	ldr	r2, [r4, #24]
 80045b0:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80045b2:	f043 0307 	orr.w	r3, r3, #7
 80045b6:	6353      	str	r3, [r2, #52]	; 0x34
 80045b8:	2300      	movs	r3, #0
 80045ba:	f383 8811 	msr	BASEPRI, r3
 80045be:	f7fd fa6f 	bl	8001aa0 <chEvtWaitOne.constprop.31>
 80045c2:	f1a0 0101 	sub.w	r1, r0, #1
 80045c6:	fab1 f181 	clz	r1, r1
 80045ca:	0949      	lsrs	r1, r1, #5
 80045cc:	2001      	movs	r0, #1
 80045ce:	f7fc f8cf 	bl	8000770 <_test_assert>
 80045d2:	b110      	cbz	r0, 80045da <evt2_execute+0x3a>
 80045d4:	b00f      	add	sp, #60	; 0x3c
 80045d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80045da:	f7fd fa61 	bl	8001aa0 <chEvtWaitOne.constprop.31>
 80045de:	f1a0 0102 	sub.w	r1, r0, #2
 80045e2:	fab1 f181 	clz	r1, r1
 80045e6:	0949      	lsrs	r1, r1, #5
 80045e8:	2002      	movs	r0, #2
 80045ea:	f7fc f8c1 	bl	8000770 <_test_assert>
 80045ee:	2800      	cmp	r0, #0
 80045f0:	d1f0      	bne.n	80045d4 <evt2_execute+0x34>
 80045f2:	f7fd fa55 	bl	8001aa0 <chEvtWaitOne.constprop.31>
 80045f6:	f1a0 0104 	sub.w	r1, r0, #4
 80045fa:	fab1 f181 	clz	r1, r1
 80045fe:	0949      	lsrs	r1, r1, #5
 8004600:	2003      	movs	r0, #3
 8004602:	f7fc f8b5 	bl	8000770 <_test_assert>
 8004606:	2800      	cmp	r0, #0
 8004608:	d1e4      	bne.n	80045d4 <evt2_execute+0x34>
 800460a:	f7fb fe49 	bl	80002a0 <chEvtGetAndClearEvents.constprop.35>
 800460e:	fab0 f180 	clz	r1, r0
 8004612:	0949      	lsrs	r1, r1, #5
 8004614:	2004      	movs	r0, #4
 8004616:	f7fc f8ab 	bl	8000770 <_test_assert>
 800461a:	4606      	mov	r6, r0
 800461c:	2800      	cmp	r0, #0
 800461e:	d1d9      	bne.n	80045d4 <evt2_execute+0x34>
 8004620:	f7fe f926 	bl	8002870 <test_wait_tick>
 8004624:	f385 8811 	msr	BASEPRI, r5
 8004628:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 800462c:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
 8004630:	f386 8811 	msr	BASEPRI, r6
 8004634:	69a1      	ldr	r1, [r4, #24]
 8004636:	4b88      	ldr	r3, [pc, #544]	; (8004858 <evt2_execute+0x2b8>)
 8004638:	688a      	ldr	r2, [r1, #8]
 800463a:	4888      	ldr	r0, [pc, #544]	; (800485c <evt2_execute+0x2bc>)
 800463c:	9100      	str	r1, [sp, #0]
 800463e:	3a01      	subs	r2, #1
 8004640:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004644:	f7fd f95c 	bl	8001900 <chThdCreateStatic>
 8004648:	4e85      	ldr	r6, [pc, #532]	; (8004860 <evt2_execute+0x2c0>)
 800464a:	6030      	str	r0, [r6, #0]
 800464c:	f7fd fa28 	bl	8001aa0 <chEvtWaitOne.constprop.31>
 8004650:	f207 2226 	addw	r2, r7, #550	; 0x226
 8004654:	4681      	mov	r9, r0
 8004656:	f507 71fa 	add.w	r1, r7, #500	; 0x1f4
 800465a:	2005      	movs	r0, #5
 800465c:	f7fc f840 	bl	80006e0 <_test_assert_time_window>
 8004660:	2800      	cmp	r0, #0
 8004662:	d1b7      	bne.n	80045d4 <evt2_execute+0x34>
 8004664:	f1a9 0101 	sub.w	r1, r9, #1
 8004668:	fab1 f181 	clz	r1, r1
 800466c:	0949      	lsrs	r1, r1, #5
 800466e:	2006      	movs	r0, #6
 8004670:	f7fc f87e 	bl	8000770 <_test_assert>
 8004674:	2800      	cmp	r0, #0
 8004676:	d1ad      	bne.n	80045d4 <evt2_execute+0x34>
 8004678:	f7fb fe12 	bl	80002a0 <chEvtGetAndClearEvents.constprop.35>
 800467c:	fab0 f180 	clz	r1, r0
 8004680:	0949      	lsrs	r1, r1, #5
 8004682:	2007      	movs	r0, #7
 8004684:	f7fc f874 	bl	8000770 <_test_assert>
 8004688:	4607      	mov	r7, r0
 800468a:	2800      	cmp	r0, #0
 800468c:	d1a2      	bne.n	80045d4 <evt2_execute+0x34>
 800468e:	f7ff f9bf 	bl	8003a10 <test_wait_threads>
 8004692:	f385 8811 	msr	BASEPRI, r5
 8004696:	69a2      	ldr	r2, [r4, #24]
 8004698:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800469a:	f043 0305 	orr.w	r3, r3, #5
 800469e:	6353      	str	r3, [r2, #52]	; 0x34
 80046a0:	f387 8811 	msr	BASEPRI, r7
 80046a4:	f7fd fa1c 	bl	8001ae0 <chEvtWaitAny.constprop.30>
 80046a8:	1f47      	subs	r7, r0, #5
 80046aa:	4279      	negs	r1, r7
 80046ac:	4179      	adcs	r1, r7
 80046ae:	2008      	movs	r0, #8
 80046b0:	f7fc f85e 	bl	8000770 <_test_assert>
 80046b4:	2800      	cmp	r0, #0
 80046b6:	d18d      	bne.n	80045d4 <evt2_execute+0x34>
 80046b8:	f7fb fdf2 	bl	80002a0 <chEvtGetAndClearEvents.constprop.35>
 80046bc:	fab0 f180 	clz	r1, r0
 80046c0:	0949      	lsrs	r1, r1, #5
 80046c2:	2009      	movs	r0, #9
 80046c4:	f7fc f854 	bl	8000770 <_test_assert>
 80046c8:	4607      	mov	r7, r0
 80046ca:	2800      	cmp	r0, #0
 80046cc:	d182      	bne.n	80045d4 <evt2_execute+0x34>
 80046ce:	f7fe f8cf 	bl	8002870 <test_wait_tick>
 80046d2:	f385 8811 	msr	BASEPRI, r5
 80046d6:	f8d8 5024 	ldr.w	r5, [r8, #36]	; 0x24
 80046da:	f387 8811 	msr	BASEPRI, r7
 80046de:	69a1      	ldr	r1, [r4, #24]
 80046e0:	4b5d      	ldr	r3, [pc, #372]	; (8004858 <evt2_execute+0x2b8>)
 80046e2:	688a      	ldr	r2, [r1, #8]
 80046e4:	485d      	ldr	r0, [pc, #372]	; (800485c <evt2_execute+0x2bc>)
 80046e6:	9100      	str	r1, [sp, #0]
 80046e8:	3a01      	subs	r2, #1
 80046ea:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80046ee:	f7fd f907 	bl	8001900 <chThdCreateStatic>
 80046f2:	6030      	str	r0, [r6, #0]
 80046f4:	f7fd f9f4 	bl	8001ae0 <chEvtWaitAny.constprop.30>
 80046f8:	f205 2226 	addw	r2, r5, #550	; 0x226
 80046fc:	4607      	mov	r7, r0
 80046fe:	f505 71fa 	add.w	r1, r5, #500	; 0x1f4
 8004702:	200a      	movs	r0, #10
 8004704:	f7fb ffec 	bl	80006e0 <_test_assert_time_window>
 8004708:	2800      	cmp	r0, #0
 800470a:	f47f af63 	bne.w	80045d4 <evt2_execute+0x34>
 800470e:	1e78      	subs	r0, r7, #1
 8004710:	4241      	negs	r1, r0
 8004712:	4141      	adcs	r1, r0
 8004714:	200b      	movs	r0, #11
 8004716:	f7fc f82b 	bl	8000770 <_test_assert>
 800471a:	2800      	cmp	r0, #0
 800471c:	f47f af5a 	bne.w	80045d4 <evt2_execute+0x34>
 8004720:	f7fb fdbe 	bl	80002a0 <chEvtGetAndClearEvents.constprop.35>
 8004724:	fab0 f180 	clz	r1, r0
 8004728:	0949      	lsrs	r1, r1, #5
 800472a:	200c      	movs	r0, #12
 800472c:	f7fc f820 	bl	8000770 <_test_assert>
 8004730:	4683      	mov	fp, r0
 8004732:	2800      	cmp	r0, #0
 8004734:	f47f af4e 	bne.w	80045d4 <evt2_execute+0x34>
 8004738:	4f4a      	ldr	r7, [pc, #296]	; (8004864 <evt2_execute+0x2c4>)
 800473a:	4d4b      	ldr	r5, [pc, #300]	; (8004868 <evt2_execute+0x2c8>)
 800473c:	f7ff f968 	bl	8003a10 <test_wait_threads>
 8004740:	f04f 0a20 	mov.w	sl, #32
 8004744:	603f      	str	r7, [r7, #0]
 8004746:	602d      	str	r5, [r5, #0]
 8004748:	f38a 8811 	msr	BASEPRI, sl
 800474c:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 8004750:	683a      	ldr	r2, [r7, #0]
 8004752:	f849 2d28 	str.w	r2, [r9, #-40]!
 8004756:	69a0      	ldr	r0, [r4, #24]
 8004758:	f8cd b01c 	str.w	fp, [sp, #28]
 800475c:	2101      	movs	r1, #1
 800475e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004762:	e9cd 0105 	strd	r0, r1, [sp, #20]
 8004766:	f8c7 9000 	str.w	r9, [r7]
 800476a:	9208      	str	r2, [sp, #32]
 800476c:	f38b 8811 	msr	BASEPRI, fp
 8004770:	f38a 8811 	msr	BASEPRI, sl
 8004774:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8004778:	6829      	ldr	r1, [r5, #0]
 800477a:	f848 1d14 	str.w	r1, [r8, #-20]!
 800477e:	69a0      	ldr	r0, [r4, #24]
 8004780:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8004784:	2104      	movs	r1, #4
 8004786:	920d      	str	r2, [sp, #52]	; 0x34
 8004788:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800478c:	f8c5 8000 	str.w	r8, [r5]
 8004790:	f38b 8811 	msr	BASEPRI, fp
 8004794:	f7fe f86c 	bl	8002870 <test_wait_tick>
 8004798:	f38a 8811 	msr	BASEPRI, sl
 800479c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80047a0:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80047a2:	9302      	str	r3, [sp, #8]
 80047a4:	f38b 8811 	msr	BASEPRI, fp
 80047a8:	69a3      	ldr	r3, [r4, #24]
 80047aa:	4930      	ldr	r1, [pc, #192]	; (800486c <evt2_execute+0x2cc>)
 80047ac:	689a      	ldr	r2, [r3, #8]
 80047ae:	482b      	ldr	r0, [pc, #172]	; (800485c <evt2_execute+0x2bc>)
 80047b0:	9100      	str	r1, [sp, #0]
 80047b2:	4b2f      	ldr	r3, [pc, #188]	; (8004870 <evt2_execute+0x2d0>)
 80047b4:	3a01      	subs	r2, #1
 80047b6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80047ba:	f7fd f8a1 	bl	8001900 <chThdCreateStatic>
 80047be:	9b02      	ldr	r3, [sp, #8]
 80047c0:	6030      	str	r0, [r6, #0]
 80047c2:	f503 71fa 	add.w	r1, r3, #500	; 0x1f4
 80047c6:	69a4      	ldr	r4, [r4, #24]
 80047c8:	f38a 8811 	msr	BASEPRI, sl
 80047cc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80047ce:	f003 0205 	and.w	r2, r3, #5
 80047d2:	2a05      	cmp	r2, #5
 80047d4:	d007      	beq.n	80047e6 <evt2_execute+0x246>
 80047d6:	2305      	movs	r3, #5
 80047d8:	6223      	str	r3, [r4, #32]
 80047da:	200b      	movs	r0, #11
 80047dc:	9103      	str	r1, [sp, #12]
 80047de:	f7fd f8c7 	bl	8001970 <chSchGoSleepS>
 80047e2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80047e4:	9903      	ldr	r1, [sp, #12]
 80047e6:	f023 0305 	bic.w	r3, r3, #5
 80047ea:	6363      	str	r3, [r4, #52]	; 0x34
 80047ec:	2300      	movs	r3, #0
 80047ee:	f383 8811 	msr	BASEPRI, r3
 80047f2:	9b02      	ldr	r3, [sp, #8]
 80047f4:	200d      	movs	r0, #13
 80047f6:	f203 2226 	addw	r2, r3, #550	; 0x226
 80047fa:	f7fb ff71 	bl	80006e0 <_test_assert_time_window>
 80047fe:	2800      	cmp	r0, #0
 8004800:	f47f aee8 	bne.w	80045d4 <evt2_execute+0x34>
 8004804:	f7fb fd4c 	bl	80002a0 <chEvtGetAndClearEvents.constprop.35>
 8004808:	fab0 f180 	clz	r1, r0
 800480c:	0949      	lsrs	r1, r1, #5
 800480e:	200e      	movs	r0, #14
 8004810:	f7fb ffae 	bl	8000770 <_test_assert>
 8004814:	2800      	cmp	r0, #0
 8004816:	f47f aedd 	bne.w	80045d4 <evt2_execute+0x34>
 800481a:	f7ff f8f9 	bl	8003a10 <test_wait_threads>
 800481e:	4649      	mov	r1, r9
 8004820:	4810      	ldr	r0, [pc, #64]	; (8004864 <evt2_execute+0x2c4>)
 8004822:	f7fc f945 	bl	8000ab0 <chEvtUnregister>
 8004826:	4641      	mov	r1, r8
 8004828:	480f      	ldr	r0, [pc, #60]	; (8004868 <evt2_execute+0x2c8>)
 800482a:	f7fc f941 	bl	8000ab0 <chEvtUnregister>
 800482e:	6839      	ldr	r1, [r7, #0]
 8004830:	1bca      	subs	r2, r1, r7
 8004832:	4251      	negs	r1, r2
 8004834:	4151      	adcs	r1, r2
 8004836:	200f      	movs	r0, #15
 8004838:	f7fb ff9a 	bl	8000770 <_test_assert>
 800483c:	2800      	cmp	r0, #0
 800483e:	f47f aec9 	bne.w	80045d4 <evt2_execute+0x34>
 8004842:	6829      	ldr	r1, [r5, #0]
 8004844:	1b4b      	subs	r3, r1, r5
 8004846:	4259      	negs	r1, r3
 8004848:	4159      	adcs	r1, r3
 800484a:	2010      	movs	r0, #16
 800484c:	f7fb ff90 	bl	8000770 <_test_assert>
 8004850:	e6c0      	b.n	80045d4 <evt2_execute+0x34>
 8004852:	bf00      	nop
 8004854:	20000938 	.word	0x20000938
 8004858:	080027d1 	.word	0x080027d1
 800485c:	20000b40 	.word	0x20000b40
 8004860:	200011d4 	.word	0x200011d4
 8004864:	20000808 	.word	0x20000808
 8004868:	2000080c 	.word	0x2000080c
 800486c:	08005db0 	.word	0x08005db0
 8004870:	08002801 	.word	0x08002801
	...

08004880 <mtx8_execute>:
 8004880:	b570      	push	{r4, r5, r6, lr}
 8004882:	4b19      	ldr	r3, [pc, #100]	; (80048e8 <mtx8_execute+0x68>)
 8004884:	4d19      	ldr	r5, [pc, #100]	; (80048ec <mtx8_execute+0x6c>)
 8004886:	699b      	ldr	r3, [r3, #24]
 8004888:	4a19      	ldr	r2, [pc, #100]	; (80048f0 <mtx8_execute+0x70>)
 800488a:	689e      	ldr	r6, [r3, #8]
 800488c:	4b19      	ldr	r3, [pc, #100]	; (80048f4 <mtx8_execute+0x74>)
 800488e:	4c1a      	ldr	r4, [pc, #104]	; (80048f8 <mtx8_execute+0x78>)
 8004890:	b082      	sub	sp, #8
 8004892:	4628      	mov	r0, r5
 8004894:	9200      	str	r2, [sp, #0]
 8004896:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800489a:	1c72      	adds	r2, r6, #1
 800489c:	f7fd f830 	bl	8001900 <chThdCreateStatic>
 80048a0:	4b16      	ldr	r3, [pc, #88]	; (80048fc <mtx8_execute+0x7c>)
 80048a2:	6020      	str	r0, [r4, #0]
 80048a4:	1cb2      	adds	r2, r6, #2
 80048a6:	9300      	str	r3, [sp, #0]
 80048a8:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 80048ac:	4b14      	ldr	r3, [pc, #80]	; (8004900 <mtx8_execute+0x80>)
 80048ae:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80048b2:	f7fd f825 	bl	8001900 <chThdCreateStatic>
 80048b6:	4b13      	ldr	r3, [pc, #76]	; (8004904 <mtx8_execute+0x84>)
 80048b8:	6060      	str	r0, [r4, #4]
 80048ba:	1cf2      	adds	r2, r6, #3
 80048bc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80048c0:	9300      	str	r3, [sp, #0]
 80048c2:	f505 7024 	add.w	r0, r5, #656	; 0x290
 80048c6:	4b10      	ldr	r3, [pc, #64]	; (8004908 <mtx8_execute+0x88>)
 80048c8:	f7fd f81a 	bl	8001900 <chThdCreateStatic>
 80048cc:	60a0      	str	r0, [r4, #8]
 80048ce:	f7fc ffaf 	bl	8001830 <chCondSignal.constprop.43>
 80048d2:	f7fc ffad 	bl	8001830 <chCondSignal.constprop.43>
 80048d6:	f7ff f89b 	bl	8003a10 <test_wait_threads>
 80048da:	490c      	ldr	r1, [pc, #48]	; (800490c <mtx8_execute+0x8c>)
 80048dc:	2001      	movs	r0, #1
 80048de:	b002      	add	sp, #8
 80048e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80048e4:	f7fb bf1c 	b.w	8000720 <_test_assert_sequence>
 80048e8:	20000938 	.word	0x20000938
 80048ec:	20000b40 	.word	0x20000b40
 80048f0:	08005db0 	.word	0x08005db0
 80048f4:	08002df1 	.word	0x08002df1
 80048f8:	200011d4 	.word	0x200011d4
 80048fc:	08005da4 	.word	0x08005da4
 8004900:	08002e81 	.word	0x08002e81
 8004904:	08005da0 	.word	0x08005da0
 8004908:	08002ef1 	.word	0x08002ef1
 800490c:	08005dd0 	.word	0x08005dd0

08004910 <mtx7_execute>:
 8004910:	b530      	push	{r4, r5, lr}
 8004912:	4b2c      	ldr	r3, [pc, #176]	; (80049c4 <mtx7_execute+0xb4>)
 8004914:	4a2c      	ldr	r2, [pc, #176]	; (80049c8 <mtx7_execute+0xb8>)
 8004916:	6999      	ldr	r1, [r3, #24]
 8004918:	482c      	ldr	r0, [pc, #176]	; (80049cc <mtx7_execute+0xbc>)
 800491a:	688d      	ldr	r5, [r1, #8]
 800491c:	4b2c      	ldr	r3, [pc, #176]	; (80049d0 <mtx7_execute+0xc0>)
 800491e:	4c2d      	ldr	r4, [pc, #180]	; (80049d4 <mtx7_execute+0xc4>)
 8004920:	b083      	sub	sp, #12
 8004922:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004926:	9200      	str	r2, [sp, #0]
 8004928:	1c6a      	adds	r2, r5, #1
 800492a:	f7fc ffe9 	bl	8001900 <chThdCreateStatic>
 800492e:	4b2a      	ldr	r3, [pc, #168]	; (80049d8 <mtx7_execute+0xc8>)
 8004930:	6020      	str	r0, [r4, #0]
 8004932:	1caa      	adds	r2, r5, #2
 8004934:	9300      	str	r3, [sp, #0]
 8004936:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800493a:	4b25      	ldr	r3, [pc, #148]	; (80049d0 <mtx7_execute+0xc0>)
 800493c:	4827      	ldr	r0, [pc, #156]	; (80049dc <mtx7_execute+0xcc>)
 800493e:	f7fc ffdf 	bl	8001900 <chThdCreateStatic>
 8004942:	4b27      	ldr	r3, [pc, #156]	; (80049e0 <mtx7_execute+0xd0>)
 8004944:	6060      	str	r0, [r4, #4]
 8004946:	1cea      	adds	r2, r5, #3
 8004948:	9300      	str	r3, [sp, #0]
 800494a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800494e:	4b20      	ldr	r3, [pc, #128]	; (80049d0 <mtx7_execute+0xc0>)
 8004950:	4824      	ldr	r0, [pc, #144]	; (80049e4 <mtx7_execute+0xd4>)
 8004952:	f7fc ffd5 	bl	8001900 <chThdCreateStatic>
 8004956:	4b24      	ldr	r3, [pc, #144]	; (80049e8 <mtx7_execute+0xd8>)
 8004958:	60a0      	str	r0, [r4, #8]
 800495a:	1d2a      	adds	r2, r5, #4
 800495c:	9300      	str	r3, [sp, #0]
 800495e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004962:	4b1b      	ldr	r3, [pc, #108]	; (80049d0 <mtx7_execute+0xc0>)
 8004964:	4821      	ldr	r0, [pc, #132]	; (80049ec <mtx7_execute+0xdc>)
 8004966:	f7fc ffcb 	bl	8001900 <chThdCreateStatic>
 800496a:	4b21      	ldr	r3, [pc, #132]	; (80049f0 <mtx7_execute+0xe0>)
 800496c:	60e0      	str	r0, [r4, #12]
 800496e:	1d6a      	adds	r2, r5, #5
 8004970:	9300      	str	r3, [sp, #0]
 8004972:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004976:	4b16      	ldr	r3, [pc, #88]	; (80049d0 <mtx7_execute+0xc0>)
 8004978:	481e      	ldr	r0, [pc, #120]	; (80049f4 <mtx7_execute+0xe4>)
 800497a:	f7fc ffc1 	bl	8001900 <chThdCreateStatic>
 800497e:	2320      	movs	r3, #32
 8004980:	6120      	str	r0, [r4, #16]
 8004982:	f383 8811 	msr	BASEPRI, r3
 8004986:	4c1c      	ldr	r4, [pc, #112]	; (80049f8 <mtx7_execute+0xe8>)
 8004988:	6823      	ldr	r3, [r4, #0]
 800498a:	42a3      	cmp	r3, r4
 800498c:	d00b      	beq.n	80049a6 <mtx7_execute+0x96>
 800498e:	f06f 0501 	mvn.w	r5, #1
 8004992:	681a      	ldr	r2, [r3, #0]
 8004994:	6022      	str	r2, [r4, #0]
 8004996:	4618      	mov	r0, r3
 8004998:	6054      	str	r4, [r2, #4]
 800499a:	f7fc f979 	bl	8000c90 <chSchReadyI>
 800499e:	6823      	ldr	r3, [r4, #0]
 80049a0:	6205      	str	r5, [r0, #32]
 80049a2:	42a3      	cmp	r3, r4
 80049a4:	d1f5      	bne.n	8004992 <mtx7_execute+0x82>
 80049a6:	f7fc fd9b 	bl	80014e0 <chSchRescheduleS>
 80049aa:	2300      	movs	r3, #0
 80049ac:	f383 8811 	msr	BASEPRI, r3
 80049b0:	f7ff f82e 	bl	8003a10 <test_wait_threads>
 80049b4:	4911      	ldr	r1, [pc, #68]	; (80049fc <mtx7_execute+0xec>)
 80049b6:	2001      	movs	r0, #1
 80049b8:	b003      	add	sp, #12
 80049ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80049be:	f7fb beaf 	b.w	8000720 <_test_assert_sequence>
 80049c2:	bf00      	nop
 80049c4:	20000938 	.word	0x20000938
 80049c8:	08005ff4 	.word	0x08005ff4
 80049cc:	20000b40 	.word	0x20000b40
 80049d0:	08002e81 	.word	0x08002e81
 80049d4:	200011d4 	.word	0x200011d4
 80049d8:	08005da8 	.word	0x08005da8
 80049dc:	20000c88 	.word	0x20000c88
 80049e0:	08005da4 	.word	0x08005da4
 80049e4:	20000dd0 	.word	0x20000dd0
 80049e8:	08005da0 	.word	0x08005da0
 80049ec:	20000f18 	.word	0x20000f18
 80049f0:	08005db0 	.word	0x08005db0
 80049f4:	20001060 	.word	0x20001060
 80049f8:	20000800 	.word	0x20000800
 80049fc:	08005ff0 	.word	0x08005ff0

08004a00 <mtx6_execute>:
 8004a00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a02:	4b2c      	ldr	r3, [pc, #176]	; (8004ab4 <mtx6_execute+0xb4>)
 8004a04:	4e2c      	ldr	r6, [pc, #176]	; (8004ab8 <mtx6_execute+0xb8>)
 8004a06:	699b      	ldr	r3, [r3, #24]
 8004a08:	4d2c      	ldr	r5, [pc, #176]	; (8004abc <mtx6_execute+0xbc>)
 8004a0a:	689f      	ldr	r7, [r3, #8]
 8004a0c:	4b2c      	ldr	r3, [pc, #176]	; (8004ac0 <mtx6_execute+0xc0>)
 8004a0e:	4c2d      	ldr	r4, [pc, #180]	; (8004ac4 <mtx6_execute+0xc4>)
 8004a10:	b083      	sub	sp, #12
 8004a12:	1c7a      	adds	r2, r7, #1
 8004a14:	9300      	str	r3, [sp, #0]
 8004a16:	4628      	mov	r0, r5
 8004a18:	4633      	mov	r3, r6
 8004a1a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a1e:	f7fc ff6f 	bl	8001900 <chThdCreateStatic>
 8004a22:	4929      	ldr	r1, [pc, #164]	; (8004ac8 <mtx6_execute+0xc8>)
 8004a24:	6020      	str	r0, [r4, #0]
 8004a26:	1cba      	adds	r2, r7, #2
 8004a28:	4633      	mov	r3, r6
 8004a2a:	9100      	str	r1, [sp, #0]
 8004a2c:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8004a30:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a34:	f7fc ff64 	bl	8001900 <chThdCreateStatic>
 8004a38:	4924      	ldr	r1, [pc, #144]	; (8004acc <mtx6_execute+0xcc>)
 8004a3a:	6060      	str	r0, [r4, #4]
 8004a3c:	1cfa      	adds	r2, r7, #3
 8004a3e:	4633      	mov	r3, r6
 8004a40:	9100      	str	r1, [sp, #0]
 8004a42:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8004a46:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a4a:	f7fc ff59 	bl	8001900 <chThdCreateStatic>
 8004a4e:	4920      	ldr	r1, [pc, #128]	; (8004ad0 <mtx6_execute+0xd0>)
 8004a50:	60a0      	str	r0, [r4, #8]
 8004a52:	1d3a      	adds	r2, r7, #4
 8004a54:	4633      	mov	r3, r6
 8004a56:	9100      	str	r1, [sp, #0]
 8004a58:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8004a5c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a60:	f7fc ff4e 	bl	8001900 <chThdCreateStatic>
 8004a64:	491b      	ldr	r1, [pc, #108]	; (8004ad4 <mtx6_execute+0xd4>)
 8004a66:	60e0      	str	r0, [r4, #12]
 8004a68:	4633      	mov	r3, r6
 8004a6a:	9100      	str	r1, [sp, #0]
 8004a6c:	1d7a      	adds	r2, r7, #5
 8004a6e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8004a72:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a76:	f7fc ff43 	bl	8001900 <chThdCreateStatic>
 8004a7a:	2320      	movs	r3, #32
 8004a7c:	6120      	str	r0, [r4, #16]
 8004a7e:	f383 8811 	msr	BASEPRI, r3
 8004a82:	f7fc f91d 	bl	8000cc0 <chCondSignalI.constprop.42>
 8004a86:	f7fc f91b 	bl	8000cc0 <chCondSignalI.constprop.42>
 8004a8a:	f7fc f919 	bl	8000cc0 <chCondSignalI.constprop.42>
 8004a8e:	f7fc f917 	bl	8000cc0 <chCondSignalI.constprop.42>
 8004a92:	f7fc f915 	bl	8000cc0 <chCondSignalI.constprop.42>
 8004a96:	f7fc fd23 	bl	80014e0 <chSchRescheduleS>
 8004a9a:	2300      	movs	r3, #0
 8004a9c:	f383 8811 	msr	BASEPRI, r3
 8004aa0:	f7fe ffb6 	bl	8003a10 <test_wait_threads>
 8004aa4:	490c      	ldr	r1, [pc, #48]	; (8004ad8 <mtx6_execute+0xd8>)
 8004aa6:	2001      	movs	r0, #1
 8004aa8:	b003      	add	sp, #12
 8004aaa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004aae:	f7fb be37 	b.w	8000720 <_test_assert_sequence>
 8004ab2:	bf00      	nop
 8004ab4:	20000938 	.word	0x20000938
 8004ab8:	08002e81 	.word	0x08002e81
 8004abc:	20000b40 	.word	0x20000b40
 8004ac0:	08005ff4 	.word	0x08005ff4
 8004ac4:	200011d4 	.word	0x200011d4
 8004ac8:	08005da8 	.word	0x08005da8
 8004acc:	08005da4 	.word	0x08005da4
 8004ad0:	08005da0 	.word	0x08005da0
 8004ad4:	08005db0 	.word	0x08005db0
 8004ad8:	08005ff0 	.word	0x08005ff0
 8004adc:	00000000 	.word	0x00000000

08004ae0 <mtx4_execute>:
 8004ae0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004ae4:	4d87      	ldr	r5, [pc, #540]	; (8004d04 <mtx4_execute+0x224>)
 8004ae6:	4a88      	ldr	r2, [pc, #544]	; (8004d08 <mtx4_execute+0x228>)
 8004ae8:	69a9      	ldr	r1, [r5, #24]
 8004aea:	4b88      	ldr	r3, [pc, #544]	; (8004d0c <mtx4_execute+0x22c>)
 8004aec:	688c      	ldr	r4, [r1, #8]
 8004aee:	4888      	ldr	r0, [pc, #544]	; (8004d10 <mtx4_execute+0x230>)
 8004af0:	4e88      	ldr	r6, [pc, #544]	; (8004d14 <mtx4_execute+0x234>)
 8004af2:	b082      	sub	sp, #8
 8004af4:	1c67      	adds	r7, r4, #1
 8004af6:	9200      	str	r2, [sp, #0]
 8004af8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004afc:	463a      	mov	r2, r7
 8004afe:	f7fc feff 	bl	8001900 <chThdCreateStatic>
 8004b02:	f104 0802 	add.w	r8, r4, #2
 8004b06:	4b84      	ldr	r3, [pc, #528]	; (8004d18 <mtx4_execute+0x238>)
 8004b08:	6030      	str	r0, [r6, #0]
 8004b0a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b0e:	4642      	mov	r2, r8
 8004b10:	9300      	str	r3, [sp, #0]
 8004b12:	4882      	ldr	r0, [pc, #520]	; (8004d1c <mtx4_execute+0x23c>)
 8004b14:	4b82      	ldr	r3, [pc, #520]	; (8004d20 <mtx4_execute+0x240>)
 8004b16:	f7fc fef3 	bl	8001900 <chThdCreateStatic>
 8004b1a:	6070      	str	r0, [r6, #4]
 8004b1c:	4881      	ldr	r0, [pc, #516]	; (8004d24 <mtx4_execute+0x244>)
 8004b1e:	f7fe f91f 	bl	8002d60 <chMtxLock>
 8004b22:	69ab      	ldr	r3, [r5, #24]
 8004b24:	6899      	ldr	r1, [r3, #8]
 8004b26:	1b09      	subs	r1, r1, r4
 8004b28:	fab1 f181 	clz	r1, r1
 8004b2c:	2001      	movs	r0, #1
 8004b2e:	0949      	lsrs	r1, r1, #5
 8004b30:	f7fb fe1e 	bl	8000770 <_test_assert>
 8004b34:	b110      	cbz	r0, 8004b3c <mtx4_execute+0x5c>
 8004b36:	b002      	add	sp, #8
 8004b38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b3c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004b40:	f7fd fda6 	bl	8002690 <chThdSleep>
 8004b44:	69ab      	ldr	r3, [r5, #24]
 8004b46:	6899      	ldr	r1, [r3, #8]
 8004b48:	1bc9      	subs	r1, r1, r7
 8004b4a:	fab1 f181 	clz	r1, r1
 8004b4e:	2002      	movs	r0, #2
 8004b50:	0949      	lsrs	r1, r1, #5
 8004b52:	f7fb fe0d 	bl	8000770 <_test_assert>
 8004b56:	2800      	cmp	r0, #0
 8004b58:	d1ed      	bne.n	8004b36 <mtx4_execute+0x56>
 8004b5a:	4873      	ldr	r0, [pc, #460]	; (8004d28 <mtx4_execute+0x248>)
 8004b5c:	f7fe f900 	bl	8002d60 <chMtxLock>
 8004b60:	69ab      	ldr	r3, [r5, #24]
 8004b62:	6899      	ldr	r1, [r3, #8]
 8004b64:	1bc9      	subs	r1, r1, r7
 8004b66:	fab1 f181 	clz	r1, r1
 8004b6a:	2003      	movs	r0, #3
 8004b6c:	0949      	lsrs	r1, r1, #5
 8004b6e:	f7fb fdff 	bl	8000770 <_test_assert>
 8004b72:	2800      	cmp	r0, #0
 8004b74:	d1df      	bne.n	8004b36 <mtx4_execute+0x56>
 8004b76:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004b7a:	f7fd fd89 	bl	8002690 <chThdSleep>
 8004b7e:	69ab      	ldr	r3, [r5, #24]
 8004b80:	6899      	ldr	r1, [r3, #8]
 8004b82:	eba1 0108 	sub.w	r1, r1, r8
 8004b86:	fab1 f181 	clz	r1, r1
 8004b8a:	2004      	movs	r0, #4
 8004b8c:	0949      	lsrs	r1, r1, #5
 8004b8e:	f7fb fdef 	bl	8000770 <_test_assert>
 8004b92:	2800      	cmp	r0, #0
 8004b94:	d1cf      	bne.n	8004b36 <mtx4_execute+0x56>
 8004b96:	4864      	ldr	r0, [pc, #400]	; (8004d28 <mtx4_execute+0x248>)
 8004b98:	f7fc fe62 	bl	8001860 <chMtxUnlock>
 8004b9c:	69ab      	ldr	r3, [r5, #24]
 8004b9e:	6899      	ldr	r1, [r3, #8]
 8004ba0:	1bc9      	subs	r1, r1, r7
 8004ba2:	fab1 f181 	clz	r1, r1
 8004ba6:	2005      	movs	r0, #5
 8004ba8:	0949      	lsrs	r1, r1, #5
 8004baa:	f7fb fde1 	bl	8000770 <_test_assert>
 8004bae:	2800      	cmp	r0, #0
 8004bb0:	d1c1      	bne.n	8004b36 <mtx4_execute+0x56>
 8004bb2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004bb6:	f7fd fd6b 	bl	8002690 <chThdSleep>
 8004bba:	69ab      	ldr	r3, [r5, #24]
 8004bbc:	6899      	ldr	r1, [r3, #8]
 8004bbe:	1bc9      	subs	r1, r1, r7
 8004bc0:	fab1 f181 	clz	r1, r1
 8004bc4:	2006      	movs	r0, #6
 8004bc6:	0949      	lsrs	r1, r1, #5
 8004bc8:	f7fb fdd2 	bl	8000770 <_test_assert>
 8004bcc:	2800      	cmp	r0, #0
 8004bce:	d1b2      	bne.n	8004b36 <mtx4_execute+0x56>
 8004bd0:	f7fc fcae 	bl	8001530 <chMtxUnlockAll>
 8004bd4:	69ab      	ldr	r3, [r5, #24]
 8004bd6:	6899      	ldr	r1, [r3, #8]
 8004bd8:	1b09      	subs	r1, r1, r4
 8004bda:	fab1 f181 	clz	r1, r1
 8004bde:	2007      	movs	r0, #7
 8004be0:	0949      	lsrs	r1, r1, #5
 8004be2:	f7fb fdc5 	bl	8000770 <_test_assert>
 8004be6:	2800      	cmp	r0, #0
 8004be8:	d1a5      	bne.n	8004b36 <mtx4_execute+0x56>
 8004bea:	f7fe ff11 	bl	8003a10 <test_wait_threads>
 8004bee:	4b4f      	ldr	r3, [pc, #316]	; (8004d2c <mtx4_execute+0x24c>)
 8004bf0:	9300      	str	r3, [sp, #0]
 8004bf2:	463a      	mov	r2, r7
 8004bf4:	4b45      	ldr	r3, [pc, #276]	; (8004d0c <mtx4_execute+0x22c>)
 8004bf6:	4846      	ldr	r0, [pc, #280]	; (8004d10 <mtx4_execute+0x230>)
 8004bf8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004bfc:	f7fc fe80 	bl	8001900 <chThdCreateStatic>
 8004c00:	4b4b      	ldr	r3, [pc, #300]	; (8004d30 <mtx4_execute+0x250>)
 8004c02:	6030      	str	r0, [r6, #0]
 8004c04:	4642      	mov	r2, r8
 8004c06:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004c0a:	9300      	str	r3, [sp, #0]
 8004c0c:	4843      	ldr	r0, [pc, #268]	; (8004d1c <mtx4_execute+0x23c>)
 8004c0e:	4b44      	ldr	r3, [pc, #272]	; (8004d20 <mtx4_execute+0x240>)
 8004c10:	f7fc fe76 	bl	8001900 <chThdCreateStatic>
 8004c14:	6070      	str	r0, [r6, #4]
 8004c16:	4843      	ldr	r0, [pc, #268]	; (8004d24 <mtx4_execute+0x244>)
 8004c18:	f7fe f8a2 	bl	8002d60 <chMtxLock>
 8004c1c:	69ab      	ldr	r3, [r5, #24]
 8004c1e:	6899      	ldr	r1, [r3, #8]
 8004c20:	1b0a      	subs	r2, r1, r4
 8004c22:	4251      	negs	r1, r2
 8004c24:	4151      	adcs	r1, r2
 8004c26:	2008      	movs	r0, #8
 8004c28:	f7fb fda2 	bl	8000770 <_test_assert>
 8004c2c:	2800      	cmp	r0, #0
 8004c2e:	d182      	bne.n	8004b36 <mtx4_execute+0x56>
 8004c30:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004c34:	f7fd fd2c 	bl	8002690 <chThdSleep>
 8004c38:	69ab      	ldr	r3, [r5, #24]
 8004c3a:	6899      	ldr	r1, [r3, #8]
 8004c3c:	1bcb      	subs	r3, r1, r7
 8004c3e:	4259      	negs	r1, r3
 8004c40:	4159      	adcs	r1, r3
 8004c42:	2009      	movs	r0, #9
 8004c44:	f7fb fd94 	bl	8000770 <_test_assert>
 8004c48:	2800      	cmp	r0, #0
 8004c4a:	f47f af74 	bne.w	8004b36 <mtx4_execute+0x56>
 8004c4e:	4836      	ldr	r0, [pc, #216]	; (8004d28 <mtx4_execute+0x248>)
 8004c50:	f7fe f886 	bl	8002d60 <chMtxLock>
 8004c54:	69ab      	ldr	r3, [r5, #24]
 8004c56:	6899      	ldr	r1, [r3, #8]
 8004c58:	eba1 0e07 	sub.w	lr, r1, r7
 8004c5c:	f1de 0100 	rsbs	r1, lr, #0
 8004c60:	eb41 010e 	adc.w	r1, r1, lr
 8004c64:	200a      	movs	r0, #10
 8004c66:	f7fb fd83 	bl	8000770 <_test_assert>
 8004c6a:	2800      	cmp	r0, #0
 8004c6c:	f47f af63 	bne.w	8004b36 <mtx4_execute+0x56>
 8004c70:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004c74:	f7fd fd0c 	bl	8002690 <chThdSleep>
 8004c78:	69ab      	ldr	r3, [r5, #24]
 8004c7a:	6899      	ldr	r1, [r3, #8]
 8004c7c:	eba1 0c08 	sub.w	ip, r1, r8
 8004c80:	f1dc 0100 	rsbs	r1, ip, #0
 8004c84:	eb41 010c 	adc.w	r1, r1, ip
 8004c88:	200b      	movs	r0, #11
 8004c8a:	f7fb fd71 	bl	8000770 <_test_assert>
 8004c8e:	4606      	mov	r6, r0
 8004c90:	2800      	cmp	r0, #0
 8004c92:	f47f af50 	bne.w	8004b36 <mtx4_execute+0x56>
 8004c96:	2320      	movs	r3, #32
 8004c98:	f383 8811 	msr	BASEPRI, r3
 8004c9c:	4822      	ldr	r0, [pc, #136]	; (8004d28 <mtx4_execute+0x248>)
 8004c9e:	f7fc f93f 	bl	8000f20 <chMtxUnlockS>
 8004ca2:	f7fc fc1d 	bl	80014e0 <chSchRescheduleS>
 8004ca6:	f386 8811 	msr	BASEPRI, r6
 8004caa:	69ab      	ldr	r3, [r5, #24]
 8004cac:	6899      	ldr	r1, [r3, #8]
 8004cae:	1bce      	subs	r6, r1, r7
 8004cb0:	4271      	negs	r1, r6
 8004cb2:	4171      	adcs	r1, r6
 8004cb4:	200c      	movs	r0, #12
 8004cb6:	f7fb fd5b 	bl	8000770 <_test_assert>
 8004cba:	2800      	cmp	r0, #0
 8004cbc:	f47f af3b 	bne.w	8004b36 <mtx4_execute+0x56>
 8004cc0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004cc4:	f7fd fce4 	bl	8002690 <chThdSleep>
 8004cc8:	69ab      	ldr	r3, [r5, #24]
 8004cca:	6899      	ldr	r1, [r3, #8]
 8004ccc:	1bca      	subs	r2, r1, r7
 8004cce:	4251      	negs	r1, r2
 8004cd0:	4151      	adcs	r1, r2
 8004cd2:	200d      	movs	r0, #13
 8004cd4:	f7fb fd4c 	bl	8000770 <_test_assert>
 8004cd8:	2800      	cmp	r0, #0
 8004cda:	f47f af2c 	bne.w	8004b36 <mtx4_execute+0x56>
 8004cde:	f7fc fc27 	bl	8001530 <chMtxUnlockAll>
 8004ce2:	69ab      	ldr	r3, [r5, #24]
 8004ce4:	6899      	ldr	r1, [r3, #8]
 8004ce6:	1b0b      	subs	r3, r1, r4
 8004ce8:	4259      	negs	r1, r3
 8004cea:	4159      	adcs	r1, r3
 8004cec:	200e      	movs	r0, #14
 8004cee:	f7fb fd3f 	bl	8000770 <_test_assert>
 8004cf2:	2800      	cmp	r0, #0
 8004cf4:	f47f af1f 	bne.w	8004b36 <mtx4_execute+0x56>
 8004cf8:	b002      	add	sp, #8
 8004cfa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004cfe:	f7fe be87 	b.w	8003a10 <test_wait_threads>
 8004d02:	bf00      	nop
 8004d04:	20000938 	.word	0x20000938
 8004d08:	08005da0 	.word	0x08005da0
 8004d0c:	08003001 	.word	0x08003001
 8004d10:	20000b40 	.word	0x20000b40
 8004d14:	200011d4 	.word	0x200011d4
 8004d18:	08005db0 	.word	0x08005db0
 8004d1c:	20000c88 	.word	0x20000c88
 8004d20:	08003021 	.word	0x08003021
 8004d24:	20000844 	.word	0x20000844
 8004d28:	20000834 	.word	0x20000834
 8004d2c:	08005da8 	.word	0x08005da8
 8004d30:	08005da4 	.word	0x08005da4
	...

08004d40 <mtx1_execute>:
 8004d40:	b570      	push	{r4, r5, r6, lr}
 8004d42:	4e29      	ldr	r6, [pc, #164]	; (8004de8 <mtx1_execute+0xa8>)
 8004d44:	4829      	ldr	r0, [pc, #164]	; (8004dec <mtx1_execute+0xac>)
 8004d46:	69b3      	ldr	r3, [r6, #24]
 8004d48:	4d29      	ldr	r5, [pc, #164]	; (8004df0 <mtx1_execute+0xb0>)
 8004d4a:	689c      	ldr	r4, [r3, #8]
 8004d4c:	b082      	sub	sp, #8
 8004d4e:	f7fe f807 	bl	8002d60 <chMtxLock>
 8004d52:	4b28      	ldr	r3, [pc, #160]	; (8004df4 <mtx1_execute+0xb4>)
 8004d54:	9300      	str	r3, [sp, #0]
 8004d56:	1c62      	adds	r2, r4, #1
 8004d58:	4b27      	ldr	r3, [pc, #156]	; (8004df8 <mtx1_execute+0xb8>)
 8004d5a:	4828      	ldr	r0, [pc, #160]	; (8004dfc <mtx1_execute+0xbc>)
 8004d5c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d60:	f7fc fdce 	bl	8001900 <chThdCreateStatic>
 8004d64:	4b26      	ldr	r3, [pc, #152]	; (8004e00 <mtx1_execute+0xc0>)
 8004d66:	6028      	str	r0, [r5, #0]
 8004d68:	1ca2      	adds	r2, r4, #2
 8004d6a:	9300      	str	r3, [sp, #0]
 8004d6c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d70:	4b21      	ldr	r3, [pc, #132]	; (8004df8 <mtx1_execute+0xb8>)
 8004d72:	4824      	ldr	r0, [pc, #144]	; (8004e04 <mtx1_execute+0xc4>)
 8004d74:	f7fc fdc4 	bl	8001900 <chThdCreateStatic>
 8004d78:	4b23      	ldr	r3, [pc, #140]	; (8004e08 <mtx1_execute+0xc8>)
 8004d7a:	6068      	str	r0, [r5, #4]
 8004d7c:	1ce2      	adds	r2, r4, #3
 8004d7e:	9300      	str	r3, [sp, #0]
 8004d80:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d84:	4b1c      	ldr	r3, [pc, #112]	; (8004df8 <mtx1_execute+0xb8>)
 8004d86:	4821      	ldr	r0, [pc, #132]	; (8004e0c <mtx1_execute+0xcc>)
 8004d88:	f7fc fdba 	bl	8001900 <chThdCreateStatic>
 8004d8c:	4b20      	ldr	r3, [pc, #128]	; (8004e10 <mtx1_execute+0xd0>)
 8004d8e:	60a8      	str	r0, [r5, #8]
 8004d90:	1d22      	adds	r2, r4, #4
 8004d92:	9300      	str	r3, [sp, #0]
 8004d94:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d98:	4b17      	ldr	r3, [pc, #92]	; (8004df8 <mtx1_execute+0xb8>)
 8004d9a:	481e      	ldr	r0, [pc, #120]	; (8004e14 <mtx1_execute+0xd4>)
 8004d9c:	f7fc fdb0 	bl	8001900 <chThdCreateStatic>
 8004da0:	4b1d      	ldr	r3, [pc, #116]	; (8004e18 <mtx1_execute+0xd8>)
 8004da2:	60e8      	str	r0, [r5, #12]
 8004da4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004da8:	1d62      	adds	r2, r4, #5
 8004daa:	9300      	str	r3, [sp, #0]
 8004dac:	481b      	ldr	r0, [pc, #108]	; (8004e1c <mtx1_execute+0xdc>)
 8004dae:	4b12      	ldr	r3, [pc, #72]	; (8004df8 <mtx1_execute+0xb8>)
 8004db0:	f7fc fda6 	bl	8001900 <chThdCreateStatic>
 8004db4:	6128      	str	r0, [r5, #16]
 8004db6:	480d      	ldr	r0, [pc, #52]	; (8004dec <mtx1_execute+0xac>)
 8004db8:	f7fc fd52 	bl	8001860 <chMtxUnlock>
 8004dbc:	f7fe fe28 	bl	8003a10 <test_wait_threads>
 8004dc0:	69b3      	ldr	r3, [r6, #24]
 8004dc2:	6899      	ldr	r1, [r3, #8]
 8004dc4:	1b09      	subs	r1, r1, r4
 8004dc6:	fab1 f181 	clz	r1, r1
 8004dca:	2001      	movs	r0, #1
 8004dcc:	0949      	lsrs	r1, r1, #5
 8004dce:	f7fb fccf 	bl	8000770 <_test_assert>
 8004dd2:	b108      	cbz	r0, 8004dd8 <mtx1_execute+0x98>
 8004dd4:	b002      	add	sp, #8
 8004dd6:	bd70      	pop	{r4, r5, r6, pc}
 8004dd8:	4911      	ldr	r1, [pc, #68]	; (8004e20 <mtx1_execute+0xe0>)
 8004dda:	2002      	movs	r0, #2
 8004ddc:	b002      	add	sp, #8
 8004dde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004de2:	f7fb bc9d 	b.w	8000720 <_test_assert_sequence>
 8004de6:	bf00      	nop
 8004de8:	20000938 	.word	0x20000938
 8004dec:	20000834 	.word	0x20000834
 8004df0:	200011d4 	.word	0x200011d4
 8004df4:	08005ff4 	.word	0x08005ff4
 8004df8:	08003041 	.word	0x08003041
 8004dfc:	20000b40 	.word	0x20000b40
 8004e00:	08005da8 	.word	0x08005da8
 8004e04:	20000c88 	.word	0x20000c88
 8004e08:	08005da4 	.word	0x08005da4
 8004e0c:	20000dd0 	.word	0x20000dd0
 8004e10:	08005da0 	.word	0x08005da0
 8004e14:	20000f18 	.word	0x20000f18
 8004e18:	08005db0 	.word	0x08005db0
 8004e1c:	20001060 	.word	0x20001060
 8004e20:	08005ff0 	.word	0x08005ff0
	...

08004e30 <sem2_execute>:
 8004e30:	b570      	push	{r4, r5, r6, lr}
 8004e32:	2320      	movs	r3, #32
 8004e34:	b082      	sub	sp, #8
 8004e36:	f383 8811 	msr	BASEPRI, r3
 8004e3a:	4c4b      	ldr	r4, [pc, #300]	; (8004f68 <sem2_execute+0x138>)
 8004e3c:	68a3      	ldr	r3, [r4, #8]
 8004e3e:	3b01      	subs	r3, #1
 8004e40:	bf5a      	itte	pl
 8004e42:	60a3      	strpl	r3, [r4, #8]
 8004e44:	2100      	movpl	r1, #0
 8004e46:	2101      	movmi	r1, #1
 8004e48:	2300      	movs	r3, #0
 8004e4a:	f383 8811 	msr	BASEPRI, r3
 8004e4e:	2001      	movs	r0, #1
 8004e50:	f7fb fc8e 	bl	8000770 <_test_assert>
 8004e54:	b108      	cbz	r0, 8004e5a <sem2_execute+0x2a>
 8004e56:	b002      	add	sp, #8
 8004e58:	bd70      	pop	{r4, r5, r6, pc}
 8004e5a:	6821      	ldr	r1, [r4, #0]
 8004e5c:	1b09      	subs	r1, r1, r4
 8004e5e:	fab1 f181 	clz	r1, r1
 8004e62:	2002      	movs	r0, #2
 8004e64:	0949      	lsrs	r1, r1, #5
 8004e66:	f7fb fc83 	bl	8000770 <_test_assert>
 8004e6a:	2800      	cmp	r0, #0
 8004e6c:	d1f3      	bne.n	8004e56 <sem2_execute+0x26>
 8004e6e:	68a1      	ldr	r1, [r4, #8]
 8004e70:	fab1 f181 	clz	r1, r1
 8004e74:	0949      	lsrs	r1, r1, #5
 8004e76:	2003      	movs	r0, #3
 8004e78:	f7fb fc7a 	bl	8000770 <_test_assert>
 8004e7c:	4601      	mov	r1, r0
 8004e7e:	2800      	cmp	r0, #0
 8004e80:	d1e9      	bne.n	8004e56 <sem2_execute+0x26>
 8004e82:	4a3a      	ldr	r2, [pc, #232]	; (8004f6c <sem2_execute+0x13c>)
 8004e84:	4b3a      	ldr	r3, [pc, #232]	; (8004f70 <sem2_execute+0x140>)
 8004e86:	6992      	ldr	r2, [r2, #24]
 8004e88:	483a      	ldr	r0, [pc, #232]	; (8004f74 <sem2_execute+0x144>)
 8004e8a:	6892      	ldr	r2, [r2, #8]
 8004e8c:	9100      	str	r1, [sp, #0]
 8004e8e:	3a01      	subs	r2, #1
 8004e90:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004e94:	f7fc fd34 	bl	8001900 <chThdCreateStatic>
 8004e98:	4b37      	ldr	r3, [pc, #220]	; (8004f78 <sem2_execute+0x148>)
 8004e9a:	6018      	str	r0, [r3, #0]
 8004e9c:	f241 3088 	movw	r0, #5000	; 0x1388
 8004ea0:	f7fc fe76 	bl	8001b90 <chSemWaitTimeout.constprop.49>
 8004ea4:	4605      	mov	r5, r0
 8004ea6:	f7fe fdb3 	bl	8003a10 <test_wait_threads>
 8004eaa:	fab5 f185 	clz	r1, r5
 8004eae:	0949      	lsrs	r1, r1, #5
 8004eb0:	2004      	movs	r0, #4
 8004eb2:	f7fb fc5d 	bl	8000770 <_test_assert>
 8004eb6:	2800      	cmp	r0, #0
 8004eb8:	d1cd      	bne.n	8004e56 <sem2_execute+0x26>
 8004eba:	6821      	ldr	r1, [r4, #0]
 8004ebc:	1b09      	subs	r1, r1, r4
 8004ebe:	fab1 f181 	clz	r1, r1
 8004ec2:	2005      	movs	r0, #5
 8004ec4:	0949      	lsrs	r1, r1, #5
 8004ec6:	f7fb fc53 	bl	8000770 <_test_assert>
 8004eca:	2800      	cmp	r0, #0
 8004ecc:	d1c3      	bne.n	8004e56 <sem2_execute+0x26>
 8004ece:	68a1      	ldr	r1, [r4, #8]
 8004ed0:	fab1 f181 	clz	r1, r1
 8004ed4:	0949      	lsrs	r1, r1, #5
 8004ed6:	2006      	movs	r0, #6
 8004ed8:	f7fb fc4a 	bl	8000770 <_test_assert>
 8004edc:	4605      	mov	r5, r0
 8004ede:	2800      	cmp	r0, #0
 8004ee0:	d1b9      	bne.n	8004e56 <sem2_execute+0x26>
 8004ee2:	f7fd fcc5 	bl	8002870 <test_wait_tick>
 8004ee6:	2320      	movs	r3, #32
 8004ee8:	f383 8811 	msr	BASEPRI, r3
 8004eec:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004ef0:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 8004ef2:	f385 8811 	msr	BASEPRI, r5
 8004ef6:	2541      	movs	r5, #65	; 0x41
 8004ef8:	4628      	mov	r0, r5
 8004efa:	f7fb fc51 	bl	80007a0 <test_emit_token>
 8004efe:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004f02:	f7fc fe45 	bl	8001b90 <chSemWaitTimeout.constprop.49>
 8004f06:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8004f0a:	fab1 f181 	clz	r1, r1
 8004f0e:	0949      	lsrs	r1, r1, #5
 8004f10:	2007      	movs	r0, #7
 8004f12:	f7fb fc2d 	bl	8000770 <_test_assert>
 8004f16:	2800      	cmp	r0, #0
 8004f18:	d19d      	bne.n	8004e56 <sem2_execute+0x26>
 8004f1a:	6821      	ldr	r1, [r4, #0]
 8004f1c:	1b09      	subs	r1, r1, r4
 8004f1e:	fab1 f181 	clz	r1, r1
 8004f22:	2008      	movs	r0, #8
 8004f24:	0949      	lsrs	r1, r1, #5
 8004f26:	f7fb fc23 	bl	8000770 <_test_assert>
 8004f2a:	2800      	cmp	r0, #0
 8004f2c:	d193      	bne.n	8004e56 <sem2_execute+0x26>
 8004f2e:	68a1      	ldr	r1, [r4, #8]
 8004f30:	fab1 f181 	clz	r1, r1
 8004f34:	0949      	lsrs	r1, r1, #5
 8004f36:	2009      	movs	r0, #9
 8004f38:	f7fb fc1a 	bl	8000770 <_test_assert>
 8004f3c:	3501      	adds	r5, #1
 8004f3e:	b2ed      	uxtb	r5, r5
 8004f40:	2800      	cmp	r0, #0
 8004f42:	d188      	bne.n	8004e56 <sem2_execute+0x26>
 8004f44:	2d46      	cmp	r5, #70	; 0x46
 8004f46:	d1d7      	bne.n	8004ef8 <sem2_execute+0xc8>
 8004f48:	490c      	ldr	r1, [pc, #48]	; (8004f7c <sem2_execute+0x14c>)
 8004f4a:	200a      	movs	r0, #10
 8004f4c:	f7fb fbe8 	bl	8000720 <_test_assert_sequence>
 8004f50:	2800      	cmp	r0, #0
 8004f52:	d180      	bne.n	8004e56 <sem2_execute+0x26>
 8004f54:	f606 12d8 	addw	r2, r6, #2520	; 0x9d8
 8004f58:	f606 11c4 	addw	r1, r6, #2500	; 0x9c4
 8004f5c:	200b      	movs	r0, #11
 8004f5e:	b002      	add	sp, #8
 8004f60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004f64:	f7fb bbbc 	b.w	80006e0 <_test_assert_time_window>
 8004f68:	200008ac 	.word	0x200008ac
 8004f6c:	20000938 	.word	0x20000938
 8004f70:	08002841 	.word	0x08002841
 8004f74:	20000b40 	.word	0x20000b40
 8004f78:	200011d4 	.word	0x200011d4
 8004f7c:	08005ff0 	.word	0x08005ff0

08004f80 <sem1_execute>:
 8004f80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004f82:	4d4b      	ldr	r5, [pc, #300]	; (80050b0 <sem1_execute+0x130>)
 8004f84:	4f4b      	ldr	r7, [pc, #300]	; (80050b4 <sem1_execute+0x134>)
 8004f86:	69aa      	ldr	r2, [r5, #24]
 8004f88:	4b4b      	ldr	r3, [pc, #300]	; (80050b8 <sem1_execute+0x138>)
 8004f8a:	6892      	ldr	r2, [r2, #8]
 8004f8c:	484b      	ldr	r0, [pc, #300]	; (80050bc <sem1_execute+0x13c>)
 8004f8e:	4c4c      	ldr	r4, [pc, #304]	; (80050c0 <sem1_execute+0x140>)
 8004f90:	b083      	sub	sp, #12
 8004f92:	3205      	adds	r2, #5
 8004f94:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004f98:	9700      	str	r7, [sp, #0]
 8004f9a:	f7fc fcb1 	bl	8001900 <chThdCreateStatic>
 8004f9e:	69ab      	ldr	r3, [r5, #24]
 8004fa0:	689a      	ldr	r2, [r3, #8]
 8004fa2:	4b48      	ldr	r3, [pc, #288]	; (80050c4 <sem1_execute+0x144>)
 8004fa4:	6020      	str	r0, [r4, #0]
 8004fa6:	3201      	adds	r2, #1
 8004fa8:	9300      	str	r3, [sp, #0]
 8004faa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fae:	4b42      	ldr	r3, [pc, #264]	; (80050b8 <sem1_execute+0x138>)
 8004fb0:	4845      	ldr	r0, [pc, #276]	; (80050c8 <sem1_execute+0x148>)
 8004fb2:	f7fc fca5 	bl	8001900 <chThdCreateStatic>
 8004fb6:	69aa      	ldr	r2, [r5, #24]
 8004fb8:	4b44      	ldr	r3, [pc, #272]	; (80050cc <sem1_execute+0x14c>)
 8004fba:	6892      	ldr	r2, [r2, #8]
 8004fbc:	6060      	str	r0, [r4, #4]
 8004fbe:	3203      	adds	r2, #3
 8004fc0:	9300      	str	r3, [sp, #0]
 8004fc2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fc6:	4b3c      	ldr	r3, [pc, #240]	; (80050b8 <sem1_execute+0x138>)
 8004fc8:	4841      	ldr	r0, [pc, #260]	; (80050d0 <sem1_execute+0x150>)
 8004fca:	f7fc fc99 	bl	8001900 <chThdCreateStatic>
 8004fce:	69aa      	ldr	r2, [r5, #24]
 8004fd0:	4b40      	ldr	r3, [pc, #256]	; (80050d4 <sem1_execute+0x154>)
 8004fd2:	6892      	ldr	r2, [r2, #8]
 8004fd4:	60a0      	str	r0, [r4, #8]
 8004fd6:	3204      	adds	r2, #4
 8004fd8:	9300      	str	r3, [sp, #0]
 8004fda:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fde:	4b36      	ldr	r3, [pc, #216]	; (80050b8 <sem1_execute+0x138>)
 8004fe0:	483d      	ldr	r0, [pc, #244]	; (80050d8 <sem1_execute+0x158>)
 8004fe2:	f7fc fc8d 	bl	8001900 <chThdCreateStatic>
 8004fe6:	69aa      	ldr	r2, [r5, #24]
 8004fe8:	4b3c      	ldr	r3, [pc, #240]	; (80050dc <sem1_execute+0x15c>)
 8004fea:	6892      	ldr	r2, [r2, #8]
 8004fec:	60e0      	str	r0, [r4, #12]
 8004fee:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004ff2:	3202      	adds	r2, #2
 8004ff4:	9300      	str	r3, [sp, #0]
 8004ff6:	483a      	ldr	r0, [pc, #232]	; (80050e0 <sem1_execute+0x160>)
 8004ff8:	4b2f      	ldr	r3, [pc, #188]	; (80050b8 <sem1_execute+0x138>)
 8004ffa:	f7fc fc81 	bl	8001900 <chThdCreateStatic>
 8004ffe:	6120      	str	r0, [r4, #16]
 8005000:	4838      	ldr	r0, [pc, #224]	; (80050e4 <sem1_execute+0x164>)
 8005002:	f7fc fc5d 	bl	80018c0 <chSemSignal>
 8005006:	4837      	ldr	r0, [pc, #220]	; (80050e4 <sem1_execute+0x164>)
 8005008:	f7fc fc5a 	bl	80018c0 <chSemSignal>
 800500c:	4835      	ldr	r0, [pc, #212]	; (80050e4 <sem1_execute+0x164>)
 800500e:	f7fc fc57 	bl	80018c0 <chSemSignal>
 8005012:	4834      	ldr	r0, [pc, #208]	; (80050e4 <sem1_execute+0x164>)
 8005014:	f7fc fc54 	bl	80018c0 <chSemSignal>
 8005018:	4832      	ldr	r0, [pc, #200]	; (80050e4 <sem1_execute+0x164>)
 800501a:	f7fc fc51 	bl	80018c0 <chSemSignal>
 800501e:	f7fe fcf7 	bl	8003a10 <test_wait_threads>
 8005022:	4931      	ldr	r1, [pc, #196]	; (80050e8 <sem1_execute+0x168>)
 8005024:	2001      	movs	r0, #1
 8005026:	f7fb fb7b 	bl	8000720 <_test_assert_sequence>
 800502a:	b108      	cbz	r0, 8005030 <sem1_execute+0xb0>
 800502c:	b003      	add	sp, #12
 800502e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005030:	69aa      	ldr	r2, [r5, #24]
 8005032:	4b21      	ldr	r3, [pc, #132]	; (80050b8 <sem1_execute+0x138>)
 8005034:	6892      	ldr	r2, [r2, #8]
 8005036:	9700      	str	r7, [sp, #0]
 8005038:	4606      	mov	r6, r0
 800503a:	3205      	adds	r2, #5
 800503c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005040:	481e      	ldr	r0, [pc, #120]	; (80050bc <sem1_execute+0x13c>)
 8005042:	f7fc fc5d 	bl	8001900 <chThdCreateStatic>
 8005046:	2320      	movs	r3, #32
 8005048:	6020      	str	r0, [r4, #0]
 800504a:	f383 8811 	msr	BASEPRI, r3
 800504e:	2502      	movs	r5, #2
 8005050:	4c24      	ldr	r4, [pc, #144]	; (80050e4 <sem1_execute+0x164>)
 8005052:	e002      	b.n	800505a <sem1_execute+0xda>
 8005054:	2d01      	cmp	r5, #1
 8005056:	d00e      	beq.n	8005076 <sem1_execute+0xf6>
 8005058:	2501      	movs	r5, #1
 800505a:	68a3      	ldr	r3, [r4, #8]
 800505c:	3301      	adds	r3, #1
 800505e:	2b00      	cmp	r3, #0
 8005060:	60a3      	str	r3, [r4, #8]
 8005062:	dcf7      	bgt.n	8005054 <sem1_execute+0xd4>
 8005064:	6820      	ldr	r0, [r4, #0]
 8005066:	6803      	ldr	r3, [r0, #0]
 8005068:	6023      	str	r3, [r4, #0]
 800506a:	605c      	str	r4, [r3, #4]
 800506c:	f7fb fe10 	bl	8000c90 <chSchReadyI>
 8005070:	2d01      	cmp	r5, #1
 8005072:	6206      	str	r6, [r0, #32]
 8005074:	d1f0      	bne.n	8005058 <sem1_execute+0xd8>
 8005076:	f7fc fa33 	bl	80014e0 <chSchRescheduleS>
 800507a:	2500      	movs	r5, #0
 800507c:	f385 8811 	msr	BASEPRI, r5
 8005080:	f7fe fcc6 	bl	8003a10 <test_wait_threads>
 8005084:	2320      	movs	r3, #32
 8005086:	f383 8811 	msr	BASEPRI, r3
 800508a:	68a1      	ldr	r1, [r4, #8]
 800508c:	f1a1 0101 	sub.w	r1, r1, #1
 8005090:	fab1 f181 	clz	r1, r1
 8005094:	2002      	movs	r0, #2
 8005096:	0949      	lsrs	r1, r1, #5
 8005098:	f7fb fb6a 	bl	8000770 <_test_assert>
 800509c:	b918      	cbnz	r0, 80050a6 <sem1_execute+0x126>
 800509e:	f380 8811 	msr	BASEPRI, r0
 80050a2:	b003      	add	sp, #12
 80050a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80050a6:	f385 8811 	msr	BASEPRI, r5
 80050aa:	b003      	add	sp, #12
 80050ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80050ae:	bf00      	nop
 80050b0:	20000938 	.word	0x20000938
 80050b4:	08005db0 	.word	0x08005db0
 80050b8:	08003931 	.word	0x08003931
 80050bc:	20000b40 	.word	0x20000b40
 80050c0:	200011d4 	.word	0x200011d4
 80050c4:	08005da0 	.word	0x08005da0
 80050c8:	20000c88 	.word	0x20000c88
 80050cc:	08005da4 	.word	0x08005da4
 80050d0:	20000dd0 	.word	0x20000dd0
 80050d4:	08005da8 	.word	0x08005da8
 80050d8:	20000f18 	.word	0x20000f18
 80050dc:	08005ff4 	.word	0x08005ff4
 80050e0:	20001060 	.word	0x20001060
 80050e4:	200008ac 	.word	0x200008ac
 80050e8:	08005ff0 	.word	0x08005ff0
 80050ec:	00000000 	.word	0x00000000

080050f0 <thd2_execute>:
 80050f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80050f4:	4d41      	ldr	r5, [pc, #260]	; (80051fc <thd2_execute+0x10c>)
 80050f6:	4f42      	ldr	r7, [pc, #264]	; (8005200 <thd2_execute+0x110>)
 80050f8:	69ab      	ldr	r3, [r5, #24]
 80050fa:	4c42      	ldr	r4, [pc, #264]	; (8005204 <thd2_execute+0x114>)
 80050fc:	689a      	ldr	r2, [r3, #8]
 80050fe:	4b42      	ldr	r3, [pc, #264]	; (8005208 <thd2_execute+0x118>)
 8005100:	4e42      	ldr	r6, [pc, #264]	; (800520c <thd2_execute+0x11c>)
 8005102:	b082      	sub	sp, #8
 8005104:	3a04      	subs	r2, #4
 8005106:	9300      	str	r3, [sp, #0]
 8005108:	f504 70a4 	add.w	r0, r4, #328	; 0x148
 800510c:	463b      	mov	r3, r7
 800510e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005112:	f7fc fbf5 	bl	8001900 <chThdCreateStatic>
 8005116:	69ab      	ldr	r3, [r5, #24]
 8005118:	493d      	ldr	r1, [pc, #244]	; (8005210 <thd2_execute+0x120>)
 800511a:	689a      	ldr	r2, [r3, #8]
 800511c:	6070      	str	r0, [r6, #4]
 800511e:	463b      	mov	r3, r7
 8005120:	9100      	str	r1, [sp, #0]
 8005122:	3a05      	subs	r2, #5
 8005124:	4620      	mov	r0, r4
 8005126:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800512a:	f7fc fbe9 	bl	8001900 <chThdCreateStatic>
 800512e:	69ab      	ldr	r3, [r5, #24]
 8005130:	4938      	ldr	r1, [pc, #224]	; (8005214 <thd2_execute+0x124>)
 8005132:	689a      	ldr	r2, [r3, #8]
 8005134:	6030      	str	r0, [r6, #0]
 8005136:	463b      	mov	r3, r7
 8005138:	9100      	str	r1, [sp, #0]
 800513a:	3a01      	subs	r2, #1
 800513c:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8005140:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005144:	f7fc fbdc 	bl	8001900 <chThdCreateStatic>
 8005148:	69ab      	ldr	r3, [r5, #24]
 800514a:	4933      	ldr	r1, [pc, #204]	; (8005218 <thd2_execute+0x128>)
 800514c:	689a      	ldr	r2, [r3, #8]
 800514e:	6130      	str	r0, [r6, #16]
 8005150:	9100      	str	r1, [sp, #0]
 8005152:	3a02      	subs	r2, #2
 8005154:	463b      	mov	r3, r7
 8005156:	f504 7076 	add.w	r0, r4, #984	; 0x3d8
 800515a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800515e:	f7fc fbcf 	bl	8001900 <chThdCreateStatic>
 8005162:	2220      	movs	r2, #32
 8005164:	60f0      	str	r0, [r6, #12]
 8005166:	f382 8811 	msr	BASEPRI, r2
 800516a:	e9d5 1305 	ldrd	r1, r3, [r5, #20]
 800516e:	689b      	ldr	r3, [r3, #8]
 8005170:	f8c4 73b4 	str.w	r7, [r4, #948]	; 0x3b4
 8005174:	3b03      	subs	r3, #3
 8005176:	f504 776d 	add.w	r7, r4, #948	; 0x3b4
 800517a:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 800517e:	f8c4 32cc 	str.w	r3, [r4, #716]	; 0x2cc
 8005182:	f8c4 729c 	str.w	r7, [r4, #668]	; 0x29c
 8005186:	f504 7324 	add.w	r3, r4, #656	; 0x290
 800518a:	2700      	movs	r7, #0
 800518c:	f8df e090 	ldr.w	lr, [pc, #144]	; 8005220 <thd2_execute+0x130>
 8005190:	f8df c090 	ldr.w	ip, [pc, #144]	; 8005224 <thd2_execute+0x134>
 8005194:	f8c4 12a4 	str.w	r1, [r4, #676]	; 0x2a4
 8005198:	2002      	movs	r0, #2
 800519a:	f04f 0801 	mov.w	r8, #1
 800519e:	f8a4 02ac 	strh.w	r0, [r4, #684]	; 0x2ac
 80051a2:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
 80051a6:	f8c4 e3b8 	str.w	lr, [r4, #952]	; 0x3b8
 80051aa:	f8c4 c3d4 	str.w	ip, [r4, #980]	; 0x3d4
 80051ae:	f504 702d 	add.w	r0, r4, #692	; 0x2b4
 80051b2:	f8c4 72c8 	str.w	r7, [r4, #712]	; 0x2c8
 80051b6:	f8c4 72c4 	str.w	r7, [r4, #708]	; 0x2c4
 80051ba:	f8c4 72a8 	str.w	r7, [r4, #680]	; 0x2a8
 80051be:	f884 82ae 	strb.w	r8, [r4, #686]	; 0x2ae
 80051c2:	610b      	str	r3, [r1, #16]
 80051c4:	f504 712e 	add.w	r1, r4, #696	; 0x2b8
 80051c8:	616b      	str	r3, [r5, #20]
 80051ca:	60b3      	str	r3, [r6, #8]
 80051cc:	f8c4 02b4 	str.w	r0, [r4, #692]	; 0x2b4
 80051d0:	f8c4 12b8 	str.w	r1, [r4, #696]	; 0x2b8
 80051d4:	f8c4 12bc 	str.w	r1, [r4, #700]	; 0x2bc
 80051d8:	f387 8811 	msr	BASEPRI, r7
 80051dc:	68b0      	ldr	r0, [r6, #8]
 80051de:	f382 8811 	msr	BASEPRI, r2
 80051e2:	f7fb fd55 	bl	8000c90 <chSchReadyI>
 80051e6:	f387 8811 	msr	BASEPRI, r7
 80051ea:	f7fe fc11 	bl	8003a10 <test_wait_threads>
 80051ee:	490b      	ldr	r1, [pc, #44]	; (800521c <thd2_execute+0x12c>)
 80051f0:	4640      	mov	r0, r8
 80051f2:	b002      	add	sp, #8
 80051f4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80051f8:	f7fb ba92 	b.w	8000720 <_test_assert_sequence>
 80051fc:	20000938 	.word	0x20000938
 8005200:	080007f1 	.word	0x080007f1
 8005204:	20000b40 	.word	0x20000b40
 8005208:	08005da8 	.word	0x08005da8
 800520c:	200011d4 	.word	0x200011d4
 8005210:	08005ff4 	.word	0x08005ff4
 8005214:	08005db0 	.word	0x08005db0
 8005218:	08005da0 	.word	0x08005da0
 800521c:	08005ff0 	.word	0x08005ff0
 8005220:	08005da4 	.word	0x08005da4
 8005224:	08000271 	.word	0x08000271
	...

08005230 <thd1_execute>:
 8005230:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005232:	4f27      	ldr	r7, [pc, #156]	; (80052d0 <thd1_execute+0xa0>)
 8005234:	4e27      	ldr	r6, [pc, #156]	; (80052d4 <thd1_execute+0xa4>)
 8005236:	69bb      	ldr	r3, [r7, #24]
 8005238:	4d27      	ldr	r5, [pc, #156]	; (80052d8 <thd1_execute+0xa8>)
 800523a:	689a      	ldr	r2, [r3, #8]
 800523c:	4b27      	ldr	r3, [pc, #156]	; (80052dc <thd1_execute+0xac>)
 800523e:	4c28      	ldr	r4, [pc, #160]	; (80052e0 <thd1_execute+0xb0>)
 8005240:	b083      	sub	sp, #12
 8005242:	3a05      	subs	r2, #5
 8005244:	9300      	str	r3, [sp, #0]
 8005246:	4628      	mov	r0, r5
 8005248:	4633      	mov	r3, r6
 800524a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800524e:	f7fc fb57 	bl	8001900 <chThdCreateStatic>
 8005252:	69bb      	ldr	r3, [r7, #24]
 8005254:	4923      	ldr	r1, [pc, #140]	; (80052e4 <thd1_execute+0xb4>)
 8005256:	689a      	ldr	r2, [r3, #8]
 8005258:	6020      	str	r0, [r4, #0]
 800525a:	4633      	mov	r3, r6
 800525c:	9100      	str	r1, [sp, #0]
 800525e:	3a04      	subs	r2, #4
 8005260:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8005264:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005268:	f7fc fb4a 	bl	8001900 <chThdCreateStatic>
 800526c:	69bb      	ldr	r3, [r7, #24]
 800526e:	491e      	ldr	r1, [pc, #120]	; (80052e8 <thd1_execute+0xb8>)
 8005270:	689a      	ldr	r2, [r3, #8]
 8005272:	6060      	str	r0, [r4, #4]
 8005274:	4633      	mov	r3, r6
 8005276:	9100      	str	r1, [sp, #0]
 8005278:	3a03      	subs	r2, #3
 800527a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 800527e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005282:	f7fc fb3d 	bl	8001900 <chThdCreateStatic>
 8005286:	69bb      	ldr	r3, [r7, #24]
 8005288:	4918      	ldr	r1, [pc, #96]	; (80052ec <thd1_execute+0xbc>)
 800528a:	689a      	ldr	r2, [r3, #8]
 800528c:	60a0      	str	r0, [r4, #8]
 800528e:	4633      	mov	r3, r6
 8005290:	9100      	str	r1, [sp, #0]
 8005292:	3a02      	subs	r2, #2
 8005294:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8005298:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800529c:	f7fc fb30 	bl	8001900 <chThdCreateStatic>
 80052a0:	69bb      	ldr	r3, [r7, #24]
 80052a2:	4913      	ldr	r1, [pc, #76]	; (80052f0 <thd1_execute+0xc0>)
 80052a4:	689a      	ldr	r2, [r3, #8]
 80052a6:	60e0      	str	r0, [r4, #12]
 80052a8:	3a01      	subs	r2, #1
 80052aa:	4633      	mov	r3, r6
 80052ac:	9100      	str	r1, [sp, #0]
 80052ae:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 80052b2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80052b6:	f7fc fb23 	bl	8001900 <chThdCreateStatic>
 80052ba:	6120      	str	r0, [r4, #16]
 80052bc:	f7fe fba8 	bl	8003a10 <test_wait_threads>
 80052c0:	490c      	ldr	r1, [pc, #48]	; (80052f4 <thd1_execute+0xc4>)
 80052c2:	2001      	movs	r0, #1
 80052c4:	b003      	add	sp, #12
 80052c6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80052ca:	f7fb ba29 	b.w	8000720 <_test_assert_sequence>
 80052ce:	bf00      	nop
 80052d0:	20000938 	.word	0x20000938
 80052d4:	080007f1 	.word	0x080007f1
 80052d8:	20000b40 	.word	0x20000b40
 80052dc:	08005ff4 	.word	0x08005ff4
 80052e0:	200011d4 	.word	0x200011d4
 80052e4:	08005da8 	.word	0x08005da8
 80052e8:	08005da4 	.word	0x08005da4
 80052ec:	08005da0 	.word	0x08005da0
 80052f0:	08005db0 	.word	0x08005db0
 80052f4:	08005ff0 	.word	0x08005ff0
	...

08005300 <main>:
 8005300:	4bc8      	ldr	r3, [pc, #800]	; (8005624 <main+0x324>)
 8005302:	48c9      	ldr	r0, [pc, #804]	; (8005628 <main+0x328>)
 8005304:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005306:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800530a:	2200      	movs	r2, #0
 800530c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8005310:	6299      	str	r1, [r3, #40]	; 0x28
 8005312:	629a      	str	r2, [r3, #40]	; 0x28
 8005314:	691c      	ldr	r4, [r3, #16]
 8005316:	6119      	str	r1, [r3, #16]
 8005318:	611a      	str	r2, [r3, #16]
 800531a:	68dc      	ldr	r4, [r3, #12]
 800531c:	60d9      	str	r1, [r3, #12]
 800531e:	60da      	str	r2, [r3, #12]
 8005320:	69d9      	ldr	r1, [r3, #28]
 8005322:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8005326:	61d9      	str	r1, [r3, #28]
 8005328:	6801      	ldr	r1, [r0, #0]
 800532a:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 800532e:	6001      	str	r1, [r0, #0]
 8005330:	6a19      	ldr	r1, [r3, #32]
 8005332:	f401 7140 	and.w	r1, r1, #768	; 0x300
 8005336:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800533a:	b08d      	sub	sp, #52	; 0x34
 800533c:	d003      	beq.n	8005346 <main+0x46>
 800533e:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 8005342:	6219      	str	r1, [r3, #32]
 8005344:	621a      	str	r2, [r3, #32]
 8005346:	4bb7      	ldr	r3, [pc, #732]	; (8005624 <main+0x324>)
 8005348:	6a1a      	ldr	r2, [r3, #32]
 800534a:	0412      	lsls	r2, r2, #16
 800534c:	d407      	bmi.n	800535e <main+0x5e>
 800534e:	6a1a      	ldr	r2, [r3, #32]
 8005350:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005354:	621a      	str	r2, [r3, #32]
 8005356:	6a1a      	ldr	r2, [r3, #32]
 8005358:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800535c:	621a      	str	r2, [r3, #32]
 800535e:	4db1      	ldr	r5, [pc, #708]	; (8005624 <main+0x324>)
 8005360:	f8df a314 	ldr.w	sl, [pc, #788]	; 8005678 <main+0x378>
 8005364:	69ab      	ldr	r3, [r5, #24]
 8005366:	f8df 9314 	ldr.w	r9, [pc, #788]	; 800567c <main+0x37c>
 800536a:	4eb0      	ldr	r6, [pc, #704]	; (800562c <main+0x32c>)
 800536c:	f8df 8310 	ldr.w	r8, [pc, #784]	; 8005680 <main+0x380>
 8005370:	f8df e310 	ldr.w	lr, [pc, #784]	; 8005684 <main+0x384>
 8005374:	4cae      	ldr	r4, [pc, #696]	; (8005630 <main+0x330>)
 8005376:	48af      	ldr	r0, [pc, #700]	; (8005634 <main+0x334>)
 8005378:	49af      	ldr	r1, [pc, #700]	; (8005638 <main+0x338>)
 800537a:	4ab0      	ldr	r2, [pc, #704]	; (800563c <main+0x33c>)
 800537c:	f8df c2c0 	ldr.w	ip, [pc, #704]	; 8005640 <main+0x340>
 8005380:	f043 0301 	orr.w	r3, r3, #1
 8005384:	61ab      	str	r3, [r5, #24]
 8005386:	696f      	ldr	r7, [r5, #20]
 8005388:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 800538c:	f447 07fc 	orr.w	r7, r7, #8257536	; 0x7e0000
 8005390:	616f      	str	r7, [r5, #20]
 8005392:	f44f 67c0 	mov.w	r7, #1536	; 0x600
 8005396:	605f      	str	r7, [r3, #4]
 8005398:	f8c3 a008 	str.w	sl, [r3, #8]
 800539c:	f64f 777f 	movw	r7, #65407	; 0xff7f
 80053a0:	f8c3 900c 	str.w	r9, [r3, #12]
 80053a4:	f44f 09a0 	mov.w	r9, #5242880	; 0x500000
 80053a8:	615f      	str	r7, [r3, #20]
 80053aa:	f04f 4a88 	mov.w	sl, #1140850688	; 0x44000000
 80053ae:	f8c3 9020 	str.w	r9, [r3, #32]
 80053b2:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
 80053b6:	f24f 39c0 	movw	r9, #62400	; 0xf3c0
 80053ba:	f8c3 e000 	str.w	lr, [r3]
 80053be:	f8df 82c8 	ldr.w	r8, [pc, #712]	; 8005688 <main+0x388>
 80053c2:	4f9f      	ldr	r7, [pc, #636]	; (8005640 <main+0x340>)
 80053c4:	f64f 7eff 	movw	lr, #65535	; 0xffff
 80053c8:	23c0      	movs	r3, #192	; 0xc0
 80053ca:	6073      	str	r3, [r6, #4]
 80053cc:	2300      	movs	r3, #0
 80053ce:	f8c6 9008 	str.w	r9, [r6, #8]
 80053d2:	f8c6 800c 	str.w	r8, [r6, #12]
 80053d6:	f8df 92b4 	ldr.w	r9, [pc, #692]	; 800568c <main+0x38c>
 80053da:	f8c6 e014 	str.w	lr, [r6, #20]
 80053de:	f24a 088f 	movw	r8, #41103	; 0xa08f
 80053e2:	f8c6 a020 	str.w	sl, [r6, #32]
 80053e6:	f04f 0a0f 	mov.w	sl, #15
 80053ea:	6273      	str	r3, [r6, #36]	; 0x24
 80053ec:	f8c6 8000 	str.w	r8, [r6]
 80053f0:	f8c4 a004 	str.w	sl, [r4, #4]
 80053f4:	f8df 8298 	ldr.w	r8, [pc, #664]	; 8005690 <main+0x390>
 80053f8:	f8c4 9008 	str.w	r9, [r4, #8]
 80053fc:	4e91      	ldr	r6, [pc, #580]	; (8005644 <main+0x344>)
 80053fe:	f8df 9294 	ldr.w	r9, [pc, #660]	; 8005694 <main+0x394>
 8005402:	f8c4 800c 	str.w	r8, [r4, #12]
 8005406:	f8c4 e014 	str.w	lr, [r4, #20]
 800540a:	f8df 828c 	ldr.w	r8, [pc, #652]	; 8005698 <main+0x398>
 800540e:	6223      	str	r3, [r4, #32]
 8005410:	6266      	str	r6, [r4, #36]	; 0x24
 8005412:	f8c4 9000 	str.w	r9, [r4]
 8005416:	4e8c      	ldr	r6, [pc, #560]	; (8005648 <main+0x348>)
 8005418:	6043      	str	r3, [r0, #4]
 800541a:	f24f 74ff 	movw	r4, #63487	; 0xf7ff
 800541e:	f8c0 8008 	str.w	r8, [r0, #8]
 8005422:	f8df 9278 	ldr.w	r9, [pc, #632]	; 800569c <main+0x39c>
 8005426:	60c6      	str	r6, [r0, #12]
 8005428:	f8df 8274 	ldr.w	r8, [pc, #628]	; 80056a0 <main+0x3a0>
 800542c:	6144      	str	r4, [r0, #20]
 800542e:	2604      	movs	r6, #4
 8005430:	4c86      	ldr	r4, [pc, #536]	; (800564c <main+0x34c>)
 8005432:	f8c0 9020 	str.w	r9, [r0, #32]
 8005436:	f8df a26c 	ldr.w	sl, [pc, #620]	; 80056a4 <main+0x3a4>
 800543a:	6243      	str	r3, [r0, #36]	; 0x24
 800543c:	f641 79ff 	movw	r9, #8191	; 0x1fff
 8005440:	f8c0 8000 	str.w	r8, [r0]
 8005444:	604e      	str	r6, [r1, #4]
 8005446:	f8df 8260 	ldr.w	r8, [pc, #608]	; 80056a8 <main+0x3a8>
 800544a:	608c      	str	r4, [r1, #8]
 800544c:	4e80      	ldr	r6, [pc, #512]	; (8005650 <main+0x350>)
 800544e:	4c81      	ldr	r4, [pc, #516]	; (8005654 <main+0x354>)
 8005450:	4881      	ldr	r0, [pc, #516]	; (8005658 <main+0x358>)
 8005452:	f8c1 a00c 	str.w	sl, [r1, #12]
 8005456:	f8c1 9014 	str.w	r9, [r1, #20]
 800545a:	620b      	str	r3, [r1, #32]
 800545c:	624b      	str	r3, [r1, #36]	; 0x24
 800545e:	f8c1 8000 	str.w	r8, [r1]
 8005462:	6053      	str	r3, [r2, #4]
 8005464:	6096      	str	r6, [r2, #8]
 8005466:	60d4      	str	r4, [r2, #12]
 8005468:	f8c2 e014 	str.w	lr, [r2, #20]
 800546c:	6213      	str	r3, [r2, #32]
 800546e:	6253      	str	r3, [r2, #36]	; 0x24
 8005470:	6013      	str	r3, [r2, #0]
 8005472:	f84c 0b04 	str.w	r0, [ip], #4
 8005476:	2201      	movs	r2, #1
 8005478:	f107 0164 	add.w	r1, r7, #100	; 0x64
 800547c:	f04f 0e10 	mov.w	lr, #16
 8005480:	f107 0054 	add.w	r0, r7, #84	; 0x54
 8005484:	f107 0974 	add.w	r9, r7, #116	; 0x74
 8005488:	f107 060c 	add.w	r6, r7, #12
 800548c:	f107 0a30 	add.w	sl, r7, #48	; 0x30
 8005490:	f8df 8218 	ldr.w	r8, [pc, #536]	; 80056ac <main+0x3ac>
 8005494:	617b      	str	r3, [r7, #20]
 8005496:	62bb      	str	r3, [r7, #40]	; 0x28
 8005498:	723a      	strb	r2, [r7, #8]
 800549a:	f8c7 e038 	str.w	lr, [r7, #56]	; 0x38
 800549e:	f8c7 9040 	str.w	r9, [r7, #64]	; 0x40
 80054a2:	f8c7 c004 	str.w	ip, [r7, #4]
 80054a6:	e9c7 6603 	strd	r6, r6, [r7, #12]
 80054aa:	61b8      	str	r0, [r7, #24]
 80054ac:	e9c7 0008 	strd	r0, r0, [r7, #32]
 80054b0:	61f9      	str	r1, [r7, #28]
 80054b2:	63f9      	str	r1, [r7, #60]	; 0x3c
 80054b4:	e9c7 1111 	strd	r1, r1, [r7, #68]	; 0x44
 80054b8:	e9c7 aa0c 	strd	sl, sl, [r7, #48]	; 0x30
 80054bc:	62ff      	str	r7, [r7, #44]	; 0x2c
 80054be:	f8c7 804c 	str.w	r8, [r7, #76]	; 0x4c
 80054c2:	f8d5 c01c 	ldr.w	ip, [r5, #28]
 80054c6:	f8df 81e8 	ldr.w	r8, [pc, #488]	; 80056b0 <main+0x3b0>
 80054ca:	653f      	str	r7, [r7, #80]	; 0x50
 80054cc:	ea4c 0102 	orr.w	r1, ip, r2
 80054d0:	61e9      	str	r1, [r5, #28]
 80054d2:	f8d8 c008 	ldr.w	ip, [r8, #8]
 80054d6:	4861      	ldr	r0, [pc, #388]	; (800565c <main+0x35c>)
 80054d8:	4e61      	ldr	r6, [pc, #388]	; (8005660 <main+0x360>)
 80054da:	4c62      	ldr	r4, [pc, #392]	; (8005664 <main+0x364>)
 80054dc:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 80056b4 <main+0x3b4>
 80054e0:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80054e4:	ea4c 0c02 	orr.w	ip, ip, r2
 80054e8:	f8c8 c008 	str.w	ip, [r8, #8]
 80054ec:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 80054f0:	f641 481f 	movw	r8, #7199	; 0x1c1f
 80054f4:	f8c1 8028 	str.w	r8, [r1, #40]	; 0x28
 80054f8:	f8c1 c02c 	str.w	ip, [r1, #44]	; 0x2c
 80054fc:	f04f 0880 	mov.w	r8, #128	; 0x80
 8005500:	618b      	str	r3, [r1, #24]
 8005502:	634b      	str	r3, [r1, #52]	; 0x34
 8005504:	60cb      	str	r3, [r1, #12]
 8005506:	604b      	str	r3, [r1, #4]
 8005508:	614a      	str	r2, [r1, #20]
 800550a:	600a      	str	r2, [r1, #0]
 800550c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
 8005510:	9204      	str	r2, [sp, #16]
 8005512:	f886 831c 	strb.w	r8, [r6, #796]	; 0x31c
 8005516:	f8c6 1180 	str.w	r1, [r6, #384]	; 0x180
 800551a:	6031      	str	r1, [r6, #0]
 800551c:	6083      	str	r3, [r0, #8]
 800551e:	68c1      	ldr	r1, [r0, #12]
 8005520:	f64f 08ff 	movw	r8, #63743	; 0xf8ff
 8005524:	ea01 0108 	and.w	r1, r1, r8
 8005528:	430c      	orrs	r4, r1
 800552a:	60c4      	str	r4, [r0, #12]
 800552c:	f8d9 100c 	ldr.w	r1, [r9, #12]
 8005530:	f8df 8184 	ldr.w	r8, [pc, #388]	; 80056b8 <main+0x3b8>
 8005534:	4c4c      	ldr	r4, [pc, #304]	; (8005668 <main+0x368>)
 8005536:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
 800553a:	f8c9 100c 	str.w	r1, [r9, #12]
 800553e:	f8d8 1000 	ldr.w	r1, [r8]
 8005542:	f8df 9178 	ldr.w	r9, [pc, #376]	; 80056bc <main+0x3bc>
 8005546:	f8c7 9074 	str.w	r9, [r7, #116]	; 0x74
 800554a:	f041 0101 	orr.w	r1, r1, #1
 800554e:	f8c8 1000 	str.w	r1, [r8]
 8005552:	f04f 0820 	mov.w	r8, #32
 8005556:	f880 e01f 	strb.w	lr, [r0, #31]
 800555a:	f104 011c 	add.w	r1, r4, #28
 800555e:	f880 8022 	strb.w	r8, [r0, #34]	; 0x22
 8005562:	f8df 915c 	ldr.w	r9, [pc, #348]	; 80056c0 <main+0x3c0>
 8005566:	60a3      	str	r3, [r4, #8]
 8005568:	a806      	add	r0, sp, #24
 800556a:	f04f 0a00 	mov.w	sl, #0
 800556e:	f04f 0b00 	mov.w	fp, #0
 8005572:	f8c7 9078 	str.w	r9, [r7, #120]	; 0x78
 8005576:	e9c4 4400 	strd	r4, r4, [r4]
 800557a:	e9c4 4404 	strd	r4, r4, [r4, #16]
 800557e:	e9c4 c309 	strd	ip, r3, [r4, #36]	; 0x24
 8005582:	e9cd c306 	strd	ip, r3, [sp, #24]
 8005586:	e9c4 1107 	strd	r1, r1, [r4, #28]
 800558a:	6763      	str	r3, [r4, #116]	; 0x74
 800558c:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8005590:	9303      	str	r3, [sp, #12]
 8005592:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 8005596:	f7fa fe7b 	bl	8000290 <chTMStartMeasurementX.constprop.55>
 800559a:	a806      	add	r0, sp, #24
 800559c:	f7fb fb18 	bl	8000bd0 <chTMStopMeasurementX>
 80055a0:	4932      	ldr	r1, [pc, #200]	; (800566c <main+0x36c>)
 80055a2:	9b03      	ldr	r3, [sp, #12]
 80055a4:	f8d4 a014 	ldr.w	sl, [r4, #20]
 80055a8:	9a04      	ldr	r2, [sp, #16]
 80055aa:	9f08      	ldr	r7, [sp, #32]
 80055ac:	f8c4 a044 	str.w	sl, [r4, #68]	; 0x44
 80055b0:	f101 0910 	add.w	r9, r1, #16
 80055b4:	f104 0e30 	add.w	lr, r4, #48	; 0x30
 80055b8:	e9c1 9904 	strd	r9, r9, [r1, #16]
 80055bc:	f04f 0940 	mov.w	r9, #64	; 0x40
 80055c0:	618b      	str	r3, [r1, #24]
 80055c2:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 80055c6:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80055ca:	f884 204e 	strb.w	r2, [r4, #78]	; 0x4e
 80055ce:	64a3      	str	r3, [r4, #72]	; 0x48
 80055d0:	6424      	str	r4, [r4, #64]	; 0x40
 80055d2:	6767      	str	r7, [r4, #116]	; 0x74
 80055d4:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
 80055d8:	f8c4 906c 	str.w	r9, [r4, #108]	; 0x6c
 80055dc:	f8ca e010 	str.w	lr, [sl, #16]
 80055e0:	e9c4 ee05 	strd	lr, lr, [r4, #20]
 80055e4:	f104 0e54 	add.w	lr, r4, #84	; 0x54
 80055e8:	f8c4 e054 	str.w	lr, [r4, #84]	; 0x54
 80055ec:	f8df e0d4 	ldr.w	lr, [pc, #212]	; 80056c4 <main+0x3c4>
 80055f0:	f8c1 e000 	str.w	lr, [r1]
 80055f4:	e9c1 3302 	strd	r3, r3, [r1, #8]
 80055f8:	f8df c0cc 	ldr.w	ip, [pc, #204]	; 80056c8 <main+0x3c8>
 80055fc:	481c      	ldr	r0, [pc, #112]	; (8005670 <main+0x370>)
 80055fe:	f8df a0cc 	ldr.w	sl, [pc, #204]	; 80056cc <main+0x3cc>
 8005602:	f884 204c 	strb.w	r2, [r4, #76]	; 0x4c
 8005606:	f104 0158 	add.w	r1, r4, #88	; 0x58
 800560a:	e9c4 1116 	strd	r1, r1, [r4, #88]	; 0x58
 800560e:	4919      	ldr	r1, [pc, #100]	; (8005674 <main+0x374>)
 8005610:	f02c 0c07 	bic.w	ip, ip, #7
 8005614:	f020 0007 	bic.w	r0, r0, #7
 8005618:	f8ca c000 	str.w	ip, [sl]
 800561c:	6008      	str	r0, [r1, #0]
 800561e:	f383 8811 	msr	BASEPRI, r3
 8005622:	e055      	b.n	80056d0 <main+0x3d0>
 8005624:	40021000 	.word	0x40021000
 8005628:	40007000 	.word	0x40007000
 800562c:	48000400 	.word	0x48000400
 8005630:	48000800 	.word	0x48000800
 8005634:	48000c00 	.word	0x48000c00
 8005638:	48001000 	.word	0x48001000
 800563c:	48001400 	.word	0x48001400
 8005640:	200008b8 	.word	0x200008b8
 8005644:	00066600 	.word	0x00066600
 8005648:	55154000 	.word	0x55154000
 800564c:	000f30f0 	.word	0x000f30f0
 8005650:	003c033f 	.word	0x003c033f
 8005654:	55695660 	.word	0x55695660
 8005658:	080068f0 	.word	0x080068f0
 800565c:	e000ed00 	.word	0xe000ed00
 8005660:	e000e100 	.word	0xe000e100
 8005664:	05fa0300 	.word	0x05fa0300
 8005668:	20000938 	.word	0x20000938
 800566c:	20000a90 	.word	0x20000a90
 8005670:	20008000 	.word	0x20008000
 8005674:	20000ab0 	.word	0x20000ab0
 8005678:	fcfccc00 	.word	0xfcfccc00
 800567c:	24001140 	.word	0x24001140
 8005680:	000ee440 	.word	0x000ee440
 8005684:	aaa8400c 	.word	0xaaa8400c
 8005688:	55550410 	.word	0x55550410
 800568c:	f3f00cff 	.word	0xf3f00cff
 8005690:	04455100 	.word	0x04455100
 8005694:	02a00455 	.word	0x02a00455
 8005698:	00c03fff 	.word	0x00c03fff
 800569c:	07777077 	.word	0x07777077
 80056a0:	00402a9a 	.word	0x00402a9a
 80056a4:	45502545 	.word	0x45502545
 80056a8:	000fc010 	.word	0x000fc010
 80056ac:	08000321 	.word	0x08000321
 80056b0:	e0042000 	.word	0xe0042000
 80056b4:	e000edf0 	.word	0xe000edf0
 80056b8:	e0001000 	.word	0xe0001000
 80056bc:	40004400 	.word	0x40004400
 80056c0:	02255100 	.word	0x02255100
 80056c4:	080002e1 	.word	0x080002e1
 80056c8:	20001387 	.word	0x20001387
 80056cc:	20000b2c 	.word	0x20000b2c
 80056d0:	b662      	cpsie	i
 80056d2:	69a1      	ldr	r1, [r4, #24]
 80056d4:	4823      	ldr	r0, [pc, #140]	; (8005764 <main+0x464>)
 80056d6:	6188      	str	r0, [r1, #24]
 80056d8:	9300      	str	r3, [sp, #0]
 80056da:	f104 0078 	add.w	r0, r4, #120	; 0x78
 80056de:	4b22      	ldr	r3, [pc, #136]	; (8005768 <main+0x468>)
 80056e0:	21d8      	movs	r1, #216	; 0xd8
 80056e2:	f7fc f90d 	bl	8001900 <chThdCreateStatic>
 80056e6:	4b21      	ldr	r3, [pc, #132]	; (800576c <main+0x46c>)
 80056e8:	6183      	str	r3, [r0, #24]
 80056ea:	f388 8811 	msr	BASEPRI, r8
 80056ee:	4a20      	ldr	r2, [pc, #128]	; (8005770 <main+0x470>)
 80056f0:	7a13      	ldrb	r3, [r2, #8]
 80056f2:	2b01      	cmp	r3, #1
 80056f4:	d10b      	bne.n	800570e <main+0x40e>
 80056f6:	69eb      	ldr	r3, [r5, #28]
 80056f8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80056fc:	61eb      	str	r3, [r5, #28]
 80056fe:	f06f 033f 	mvn.w	r3, #63	; 0x3f
 8005702:	f886 3326 	strb.w	r3, [r6, #806]	; 0x326
 8005706:	f8c6 9184 	str.w	r9, [r6, #388]	; 0x184
 800570a:	f8c6 9004 	str.w	r9, [r6, #4]
 800570e:	4f18      	ldr	r7, [pc, #96]	; (8005770 <main+0x470>)
 8005710:	4918      	ldr	r1, [pc, #96]	; (8005774 <main+0x474>)
 8005712:	6fba      	ldr	r2, [r7, #120]	; 0x78
 8005714:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8005716:	fba1 1202 	umull	r1, r2, r1, r2
 800571a:	f3c2 320f 	ubfx	r2, r2, #12, #16
 800571e:	f244 0640 	movw	r6, #16448	; 0x4040
 8005722:	2501      	movs	r5, #1
 8005724:	f240 142d 	movw	r4, #301	; 0x12d
 8005728:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800572c:	2102      	movs	r1, #2
 800572e:	60da      	str	r2, [r3, #12]
 8005730:	605e      	str	r6, [r3, #4]
 8005732:	2200      	movs	r2, #0
 8005734:	609d      	str	r5, [r3, #8]
 8005736:	601c      	str	r4, [r3, #0]
 8005738:	6218      	str	r0, [r3, #32]
 800573a:	7239      	strb	r1, [r7, #8]
 800573c:	f382 8811 	msr	BASEPRI, r2
 8005740:	4b0d      	ldr	r3, [pc, #52]	; (8005778 <main+0x478>)
 8005742:	9200      	str	r2, [sp, #0]
 8005744:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005748:	2240      	movs	r2, #64	; 0x40
 800574a:	480c      	ldr	r0, [pc, #48]	; (800577c <main+0x47c>)
 800574c:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8005780 <main+0x480>
 8005750:	f8df 9030 	ldr.w	r9, [pc, #48]	; 8005784 <main+0x484>
 8005754:	f8df a030 	ldr.w	sl, [pc, #48]	; 8005788 <main+0x488>
 8005758:	f8df b030 	ldr.w	fp, [pc, #48]	; 800578c <main+0x48c>
 800575c:	f7fc f8d0 	bl	8001900 <chThdCreateStatic>
 8005760:	e01a      	b.n	8005798 <main+0x498>
 8005762:	bf00      	nop
 8005764:	08005d70 	.word	0x08005d70
 8005768:	080002d1 	.word	0x080002d1
 800576c:	08005ec0 	.word	0x08005ec0
 8005770:	200008b8 	.word	0x200008b8
 8005774:	1b4e81b5 	.word	0x1b4e81b5
 8005778:	080026b1 	.word	0x080026b1
 800577c:	20001238 	.word	0x20001238
 8005780:	20000a88 	.word	0x20000a88
 8005784:	200011f8 	.word	0x200011f8
 8005788:	20000b0c 	.word	0x20000b0c
 800578c:	200011d4 	.word	0x200011d4
 8005790:	f241 3088 	movw	r0, #5000	; 0x1388
 8005794:	f7fc ff7c 	bl	8002690 <chThdSleep>
 8005798:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 800579c:	691b      	ldr	r3, [r3, #16]
 800579e:	07db      	lsls	r3, r3, #31
 80057a0:	d5f6      	bpl.n	8005790 <main+0x490>
 80057a2:	4ba2      	ldr	r3, [pc, #648]	; (8005a2c <main+0x72c>)
 80057a4:	48a2      	ldr	r0, [pc, #648]	; (8005a30 <main+0x730>)
 80057a6:	f8c8 3000 	str.w	r3, [r8]
 80057aa:	f7fb f831 	bl	8000810 <test_println>
 80057ae:	48a1      	ldr	r0, [pc, #644]	; (8005a34 <main+0x734>)
 80057b0:	4ca1      	ldr	r4, [pc, #644]	; (8005a38 <main+0x738>)
 80057b2:	f7fb f82d 	bl	8000810 <test_println>
 80057b6:	48a1      	ldr	r0, [pc, #644]	; (8005a3c <main+0x73c>)
 80057b8:	f7fb f82a 	bl	8000810 <test_println>
 80057bc:	212a      	movs	r1, #42	; 0x2a
 80057be:	f8d8 0000 	ldr.w	r0, [r8]
 80057c2:	6803      	ldr	r3, [r0, #0]
 80057c4:	689b      	ldr	r3, [r3, #8]
 80057c6:	4798      	blx	r3
 80057c8:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80057cc:	2900      	cmp	r1, #0
 80057ce:	d1f6      	bne.n	80057be <main+0x4be>
 80057d0:	489b      	ldr	r0, [pc, #620]	; (8005a40 <main+0x740>)
 80057d2:	4c9c      	ldr	r4, [pc, #624]	; (8005a44 <main+0x744>)
 80057d4:	f7fb f81c 	bl	8000810 <test_println>
 80057d8:	212a      	movs	r1, #42	; 0x2a
 80057da:	f8d8 0000 	ldr.w	r0, [r8]
 80057de:	6803      	ldr	r3, [r0, #0]
 80057e0:	689b      	ldr	r3, [r3, #8]
 80057e2:	4798      	blx	r3
 80057e4:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80057e8:	2900      	cmp	r1, #0
 80057ea:	d1f6      	bne.n	80057da <main+0x4da>
 80057ec:	4896      	ldr	r0, [pc, #600]	; (8005a48 <main+0x748>)
 80057ee:	4c97      	ldr	r4, [pc, #604]	; (8005a4c <main+0x74c>)
 80057f0:	f7fb f80e 	bl	8000810 <test_println>
 80057f4:	212a      	movs	r1, #42	; 0x2a
 80057f6:	f8d8 0000 	ldr.w	r0, [r8]
 80057fa:	6803      	ldr	r3, [r0, #0]
 80057fc:	689b      	ldr	r3, [r3, #8]
 80057fe:	4798      	blx	r3
 8005800:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005804:	2900      	cmp	r1, #0
 8005806:	d1f6      	bne.n	80057f6 <main+0x4f6>
 8005808:	4891      	ldr	r0, [pc, #580]	; (8005a50 <main+0x750>)
 800580a:	4c92      	ldr	r4, [pc, #584]	; (8005a54 <main+0x754>)
 800580c:	f7fb f800 	bl	8000810 <test_println>
 8005810:	212a      	movs	r1, #42	; 0x2a
 8005812:	f8d8 0000 	ldr.w	r0, [r8]
 8005816:	6803      	ldr	r3, [r0, #0]
 8005818:	689b      	ldr	r3, [r3, #8]
 800581a:	4798      	blx	r3
 800581c:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005820:	2900      	cmp	r1, #0
 8005822:	d1f6      	bne.n	8005812 <main+0x512>
 8005824:	488c      	ldr	r0, [pc, #560]	; (8005a58 <main+0x758>)
 8005826:	4c8d      	ldr	r4, [pc, #564]	; (8005a5c <main+0x75c>)
 8005828:	f7fa fff2 	bl	8000810 <test_println>
 800582c:	212a      	movs	r1, #42	; 0x2a
 800582e:	f8d8 0000 	ldr.w	r0, [r8]
 8005832:	6803      	ldr	r3, [r0, #0]
 8005834:	689b      	ldr	r3, [r3, #8]
 8005836:	4798      	blx	r3
 8005838:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800583c:	2900      	cmp	r1, #0
 800583e:	d1f6      	bne.n	800582e <main+0x52e>
 8005840:	4887      	ldr	r0, [pc, #540]	; (8005a60 <main+0x760>)
 8005842:	4c88      	ldr	r4, [pc, #544]	; (8005a64 <main+0x764>)
 8005844:	f7fa ffe4 	bl	8000810 <test_println>
 8005848:	212a      	movs	r1, #42	; 0x2a
 800584a:	f8d8 0000 	ldr.w	r0, [r8]
 800584e:	6803      	ldr	r3, [r0, #0]
 8005850:	689b      	ldr	r3, [r3, #8]
 8005852:	4798      	blx	r3
 8005854:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005858:	2900      	cmp	r1, #0
 800585a:	d1f6      	bne.n	800584a <main+0x54a>
 800585c:	4882      	ldr	r0, [pc, #520]	; (8005a68 <main+0x768>)
 800585e:	4c83      	ldr	r4, [pc, #524]	; (8005a6c <main+0x76c>)
 8005860:	f7fa ffd6 	bl	8000810 <test_println>
 8005864:	212a      	movs	r1, #42	; 0x2a
 8005866:	f8d8 0000 	ldr.w	r0, [r8]
 800586a:	6803      	ldr	r3, [r0, #0]
 800586c:	689b      	ldr	r3, [r3, #8]
 800586e:	4798      	blx	r3
 8005870:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005874:	2900      	cmp	r1, #0
 8005876:	d1f6      	bne.n	8005866 <main+0x566>
 8005878:	487d      	ldr	r0, [pc, #500]	; (8005a70 <main+0x770>)
 800587a:	4c7e      	ldr	r4, [pc, #504]	; (8005a74 <main+0x774>)
 800587c:	f7fa ffc8 	bl	8000810 <test_println>
 8005880:	212a      	movs	r1, #42	; 0x2a
 8005882:	f8d8 0000 	ldr.w	r0, [r8]
 8005886:	6803      	ldr	r3, [r0, #0]
 8005888:	689b      	ldr	r3, [r3, #8]
 800588a:	4798      	blx	r3
 800588c:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005890:	2900      	cmp	r1, #0
 8005892:	d1f6      	bne.n	8005882 <main+0x582>
 8005894:	4b78      	ldr	r3, [pc, #480]	; (8005a78 <main+0x778>)
 8005896:	4879      	ldr	r0, [pc, #484]	; (8005a7c <main+0x77c>)
 8005898:	9305      	str	r3, [sp, #20]
 800589a:	4b79      	ldr	r3, [pc, #484]	; (8005a80 <main+0x780>)
 800589c:	9103      	str	r1, [sp, #12]
 800589e:	9304      	str	r3, [sp, #16]
 80058a0:	f7fa ffb6 	bl	8000810 <test_println>
 80058a4:	4862      	ldr	r0, [pc, #392]	; (8005a30 <main+0x730>)
 80058a6:	4e77      	ldr	r6, [pc, #476]	; (8005a84 <main+0x784>)
 80058a8:	f7fa ffb2 	bl	8000810 <test_println>
 80058ac:	4b76      	ldr	r3, [pc, #472]	; (8005a88 <main+0x788>)
 80058ae:	9903      	ldr	r1, [sp, #12]
 80058b0:	7019      	strb	r1, [r3, #0]
 80058b2:	4b76      	ldr	r3, [pc, #472]	; (8005a8c <main+0x78c>)
 80058b4:	9a03      	ldr	r2, [sp, #12]
 80058b6:	3201      	adds	r2, #1
 80058b8:	9203      	str	r2, [sp, #12]
 80058ba:	2500      	movs	r5, #0
 80058bc:	2b00      	cmp	r3, #0
 80058be:	f000 808b 	beq.w	80059d8 <main+0x6d8>
 80058c2:	4c73      	ldr	r4, [pc, #460]	; (8005a90 <main+0x790>)
 80058c4:	f7fa fedc 	bl	8000680 <print_line>
 80058c8:	212d      	movs	r1, #45	; 0x2d
 80058ca:	f8d8 0000 	ldr.w	r0, [r8]
 80058ce:	6803      	ldr	r3, [r0, #0]
 80058d0:	689b      	ldr	r3, [r3, #8]
 80058d2:	4798      	blx	r3
 80058d4:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80058d8:	2900      	cmp	r1, #0
 80058da:	d1f6      	bne.n	80058ca <main+0x5ca>
 80058dc:	9803      	ldr	r0, [sp, #12]
 80058de:	4c6d      	ldr	r4, [pc, #436]	; (8005a94 <main+0x794>)
 80058e0:	f7fa febe 	bl	8000660 <test_printn>
 80058e4:	f8d8 0000 	ldr.w	r0, [r8]
 80058e8:	6803      	ldr	r3, [r0, #0]
 80058ea:	212e      	movs	r1, #46	; 0x2e
 80058ec:	689b      	ldr	r3, [r3, #8]
 80058ee:	1c6f      	adds	r7, r5, #1
 80058f0:	4798      	blx	r3
 80058f2:	4638      	mov	r0, r7
 80058f4:	f7fa feb4 	bl	8000660 <test_printn>
 80058f8:	2120      	movs	r1, #32
 80058fa:	f8d8 0000 	ldr.w	r0, [r8]
 80058fe:	6803      	ldr	r3, [r0, #0]
 8005900:	689b      	ldr	r3, [r3, #8]
 8005902:	4798      	blx	r3
 8005904:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005908:	2900      	cmp	r1, #0
 800590a:	d1f6      	bne.n	80058fa <main+0x5fa>
 800590c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005910:	681c      	ldr	r4, [r3, #0]
 8005912:	7821      	ldrb	r1, [r4, #0]
 8005914:	b141      	cbz	r1, 8005928 <main+0x628>
 8005916:	f8d8 0000 	ldr.w	r0, [r8]
 800591a:	6803      	ldr	r3, [r0, #0]
 800591c:	689b      	ldr	r3, [r3, #8]
 800591e:	4798      	blx	r3
 8005920:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005924:	2900      	cmp	r1, #0
 8005926:	d1f6      	bne.n	8005916 <main+0x616>
 8005928:	485b      	ldr	r0, [pc, #364]	; (8005a98 <main+0x798>)
 800592a:	f7fa ff71 	bl	8000810 <test_println>
 800592e:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8005932:	f7fc fead 	bl	8002690 <chThdSleep>
 8005936:	4b59      	ldr	r3, [pc, #356]	; (8005a9c <main+0x79c>)
 8005938:	f8c9 3000 	str.w	r3, [r9]
 800593c:	2300      	movs	r3, #0
 800593e:	f856 4025 	ldr.w	r4, [r6, r5, lsl #2]
 8005942:	f8cb 3010 	str.w	r3, [fp, #16]
 8005946:	e9cb 3300 	strd	r3, r3, [fp]
 800594a:	e9cb 3302 	strd	r3, r3, [fp, #8]
 800594e:	6862      	ldr	r2, [r4, #4]
 8005950:	f88a 3000 	strb.w	r3, [sl]
 8005954:	b102      	cbz	r2, 8005958 <main+0x658>
 8005956:	4790      	blx	r2
 8005958:	68e3      	ldr	r3, [r4, #12]
 800595a:	4798      	blx	r3
 800595c:	68a3      	ldr	r3, [r4, #8]
 800595e:	b103      	cbz	r3, 8005962 <main+0x662>
 8005960:	4798      	blx	r3
 8005962:	f7fe f855 	bl	8003a10 <test_wait_threads>
 8005966:	f89a 3000 	ldrb.w	r3, [sl]
 800596a:	2b00      	cmp	r3, #0
 800596c:	d03e      	beq.n	80059ec <main+0x6ec>
 800596e:	4c4c      	ldr	r4, [pc, #304]	; (8005aa0 <main+0x7a0>)
 8005970:	212d      	movs	r1, #45	; 0x2d
 8005972:	f8d8 0000 	ldr.w	r0, [r8]
 8005976:	6803      	ldr	r3, [r0, #0]
 8005978:	689b      	ldr	r3, [r3, #8]
 800597a:	4798      	blx	r3
 800597c:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005980:	2900      	cmp	r1, #0
 8005982:	d1f6      	bne.n	8005972 <main+0x672>
 8005984:	4b47      	ldr	r3, [pc, #284]	; (8005aa4 <main+0x7a4>)
 8005986:	4c48      	ldr	r4, [pc, #288]	; (8005aa8 <main+0x7a8>)
 8005988:	6818      	ldr	r0, [r3, #0]
 800598a:	f7fa fe69 	bl	8000660 <test_printn>
 800598e:	2120      	movs	r1, #32
 8005990:	f8d8 0000 	ldr.w	r0, [r8]
 8005994:	6803      	ldr	r3, [r0, #0]
 8005996:	689b      	ldr	r3, [r3, #8]
 8005998:	4798      	blx	r3
 800599a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800599e:	2900      	cmp	r1, #0
 80059a0:	d1f6      	bne.n	8005990 <main+0x690>
 80059a2:	f8d9 3000 	ldr.w	r3, [r9]
 80059a6:	4a3d      	ldr	r2, [pc, #244]	; (8005a9c <main+0x79c>)
 80059a8:	4293      	cmp	r3, r2
 80059aa:	d90b      	bls.n	80059c4 <main+0x6c4>
 80059ac:	4614      	mov	r4, r2
 80059ae:	f8d8 0000 	ldr.w	r0, [r8]
 80059b2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80059b6:	6803      	ldr	r3, [r0, #0]
 80059b8:	689b      	ldr	r3, [r3, #8]
 80059ba:	4798      	blx	r3
 80059bc:	f8d9 3000 	ldr.w	r3, [r9]
 80059c0:	429c      	cmp	r4, r3
 80059c2:	d3f4      	bcc.n	80059ae <main+0x6ae>
 80059c4:	4839      	ldr	r0, [pc, #228]	; (8005aac <main+0x7ac>)
 80059c6:	f7fa ff23 	bl	8000810 <test_println>
 80059ca:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 80059ce:	463d      	mov	r5, r7
 80059d0:	685b      	ldr	r3, [r3, #4]
 80059d2:	2b00      	cmp	r3, #0
 80059d4:	f47f af75 	bne.w	80058c2 <main+0x5c2>
 80059d8:	9e04      	ldr	r6, [sp, #16]
 80059da:	b15e      	cbz	r6, 80059f4 <main+0x6f4>
 80059dc:	9a05      	ldr	r2, [sp, #20]
 80059de:	6833      	ldr	r3, [r6, #0]
 80059e0:	4611      	mov	r1, r2
 80059e2:	f851 2f04 	ldr.w	r2, [r1, #4]!
 80059e6:	9204      	str	r2, [sp, #16]
 80059e8:	9105      	str	r1, [sp, #20]
 80059ea:	e763      	b.n	80058b4 <main+0x5b4>
 80059ec:	4830      	ldr	r0, [pc, #192]	; (8005ab0 <main+0x7b0>)
 80059ee:	f7fa ff0f 	bl	8000810 <test_println>
 80059f2:	e7ea      	b.n	80059ca <main+0x6ca>
 80059f4:	f7fa fe44 	bl	8000680 <print_line>
 80059f8:	4c2e      	ldr	r4, [pc, #184]	; (8005ab4 <main+0x7b4>)
 80059fa:	480d      	ldr	r0, [pc, #52]	; (8005a30 <main+0x730>)
 80059fc:	f7fa ff08 	bl	8000810 <test_println>
 8005a00:	2146      	movs	r1, #70	; 0x46
 8005a02:	f8d8 0000 	ldr.w	r0, [r8]
 8005a06:	6803      	ldr	r3, [r0, #0]
 8005a08:	689b      	ldr	r3, [r3, #8]
 8005a0a:	4798      	blx	r3
 8005a0c:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005a10:	2900      	cmp	r1, #0
 8005a12:	d1f6      	bne.n	8005a02 <main+0x702>
 8005a14:	4b1c      	ldr	r3, [pc, #112]	; (8005a88 <main+0x788>)
 8005a16:	781b      	ldrb	r3, [r3, #0]
 8005a18:	b91b      	cbnz	r3, 8005a22 <main+0x722>
 8005a1a:	4827      	ldr	r0, [pc, #156]	; (8005ab8 <main+0x7b8>)
 8005a1c:	f7fa fef8 	bl	8000810 <test_println>
 8005a20:	e6b6      	b.n	8005790 <main+0x490>
 8005a22:	4826      	ldr	r0, [pc, #152]	; (8005abc <main+0x7bc>)
 8005a24:	f7fa fef4 	bl	8000810 <test_println>
 8005a28:	e6b2      	b.n	8005790 <main+0x490>
 8005a2a:	bf00      	nop
 8005a2c:	200008b8 	.word	0x200008b8
 8005a30:	08005d40 	.word	0x08005d40
 8005a34:	08005ec8 	.word	0x08005ec8
 8005a38:	08005de0 	.word	0x08005de0
 8005a3c:	08005ee4 	.word	0x08005ee4
 8005a40:	08005ee8 	.word	0x08005ee8
 8005a44:	08005df4 	.word	0x08005df4
 8005a48:	08005ef0 	.word	0x08005ef0
 8005a4c:	08005e08 	.word	0x08005e08
 8005a50:	08005f08 	.word	0x08005f08
 8005a54:	08005e1c 	.word	0x08005e1c
 8005a58:	08005f50 	.word	0x08005f50
 8005a5c:	08005e30 	.word	0x08005e30
 8005a60:	08005f5c 	.word	0x08005f5c
 8005a64:	08005e44 	.word	0x08005e44
 8005a68:	08005f68 	.word	0x08005f68
 8005a6c:	08005e58 	.word	0x08005e58
 8005a70:	08005f80 	.word	0x08005f80
 8005a74:	08005e6c 	.word	0x08005e6c
 8005a78:	080060d4 	.word	0x080060d4
 8005a7c:	08005f9c 	.word	0x08005f9c
 8005a80:	08006140 	.word	0x08006140
 8005a84:	08006130 	.word	0x08006130
 8005a88:	200011a8 	.word	0x200011a8
 8005a8c:	08006880 	.word	0x08006880
 8005a90:	08005e80 	.word	0x08005e80
 8005a94:	08005e90 	.word	0x08005e90
 8005a98:	08005fc0 	.word	0x08005fc0
 8005a9c:	200011e8 	.word	0x200011e8
 8005aa0:	08005e94 	.word	0x08005e94
 8005aa4:	20000ab4 	.word	0x20000ab4
 8005aa8:	08005eac 	.word	0x08005eac
 8005aac:	08005fc4 	.word	0x08005fc4
 8005ab0:	08005fc8 	.word	0x08005fc8
 8005ab4:	08005eb0 	.word	0x08005eb0
 8005ab8:	08005fd4 	.word	0x08005fd4
 8005abc:	08005fdc 	.word	0x08005fdc

08005ac0 <__early_init>:
 8005ac0:	4b23      	ldr	r3, [pc, #140]	; (8005b50 <__early_init+0x90>)
 8005ac2:	681a      	ldr	r2, [r3, #0]
 8005ac4:	f042 0201 	orr.w	r2, r2, #1
 8005ac8:	601a      	str	r2, [r3, #0]
 8005aca:	681a      	ldr	r2, [r3, #0]
 8005acc:	0792      	lsls	r2, r2, #30
 8005ace:	d5fc      	bpl.n	8005aca <__early_init+0xa>
 8005ad0:	6859      	ldr	r1, [r3, #4]
 8005ad2:	4a1f      	ldr	r2, [pc, #124]	; (8005b50 <__early_init+0x90>)
 8005ad4:	f021 0103 	bic.w	r1, r1, #3
 8005ad8:	6059      	str	r1, [r3, #4]
 8005ada:	6859      	ldr	r1, [r3, #4]
 8005adc:	6059      	str	r1, [r3, #4]
 8005ade:	6853      	ldr	r3, [r2, #4]
 8005ae0:	f013 030c 	ands.w	r3, r3, #12
 8005ae4:	d1fb      	bne.n	8005ade <__early_init+0x1e>
 8005ae6:	6810      	ldr	r0, [r2, #0]
 8005ae8:	4919      	ldr	r1, [pc, #100]	; (8005b50 <__early_init+0x90>)
 8005aea:	f000 00f9 	and.w	r0, r0, #249	; 0xf9
 8005aee:	6010      	str	r0, [r2, #0]
 8005af0:	6053      	str	r3, [r2, #4]
 8005af2:	6813      	ldr	r3, [r2, #0]
 8005af4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005af8:	6013      	str	r3, [r2, #0]
 8005afa:	680b      	ldr	r3, [r1, #0]
 8005afc:	0398      	lsls	r0, r3, #14
 8005afe:	d5fc      	bpl.n	8005afa <__early_init+0x3a>
 8005b00:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8005b02:	4a13      	ldr	r2, [pc, #76]	; (8005b50 <__early_init+0x90>)
 8005b04:	f043 0301 	orr.w	r3, r3, #1
 8005b08:	624b      	str	r3, [r1, #36]	; 0x24
 8005b0a:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8005b0c:	0799      	lsls	r1, r3, #30
 8005b0e:	d5fc      	bpl.n	8005b0a <__early_init+0x4a>
 8005b10:	4b10      	ldr	r3, [pc, #64]	; (8005b54 <__early_init+0x94>)
 8005b12:	6053      	str	r3, [r2, #4]
 8005b14:	2100      	movs	r1, #0
 8005b16:	2330      	movs	r3, #48	; 0x30
 8005b18:	62d1      	str	r1, [r2, #44]	; 0x2c
 8005b1a:	6313      	str	r3, [r2, #48]	; 0x30
 8005b1c:	6813      	ldr	r3, [r2, #0]
 8005b1e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8005b22:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8005b26:	f501 3104 	add.w	r1, r1, #135168	; 0x21000
 8005b2a:	6013      	str	r3, [r2, #0]
 8005b2c:	680b      	ldr	r3, [r1, #0]
 8005b2e:	019b      	lsls	r3, r3, #6
 8005b30:	d5fc      	bpl.n	8005b2c <__early_init+0x6c>
 8005b32:	4b09      	ldr	r3, [pc, #36]	; (8005b58 <__early_init+0x98>)
 8005b34:	4a06      	ldr	r2, [pc, #24]	; (8005b50 <__early_init+0x90>)
 8005b36:	2012      	movs	r0, #18
 8005b38:	6018      	str	r0, [r3, #0]
 8005b3a:	684b      	ldr	r3, [r1, #4]
 8005b3c:	f043 0302 	orr.w	r3, r3, #2
 8005b40:	604b      	str	r3, [r1, #4]
 8005b42:	6853      	ldr	r3, [r2, #4]
 8005b44:	f003 030c 	and.w	r3, r3, #12
 8005b48:	2b08      	cmp	r3, #8
 8005b4a:	d1fa      	bne.n	8005b42 <__early_init+0x82>
 8005b4c:	4770      	bx	lr
 8005b4e:	bf00      	nop
 8005b50:	40021000 	.word	0x40021000
 8005b54:	a81d6400 	.word	0xa81d6400
 8005b58:	40022000 	.word	0x40022000
 8005b5c:	00000000 	.word	0x00000000

08005b60 <chThdExit>:
 8005b60:	b538      	push	{r3, r4, r5, lr}
 8005b62:	2220      	movs	r2, #32
 8005b64:	4603      	mov	r3, r0
 8005b66:	f382 8811 	msr	BASEPRI, r2
 8005b6a:	4a0e      	ldr	r2, [pc, #56]	; (8005ba4 <chThdExit+0x44>)
 8005b6c:	6994      	ldr	r4, [r2, #24]
 8005b6e:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005b70:	6223      	str	r3, [r4, #32]
 8005b72:	f104 0524 	add.w	r5, r4, #36	; 0x24
 8005b76:	42a8      	cmp	r0, r5
 8005b78:	d006      	beq.n	8005b88 <chThdExit+0x28>
 8005b7a:	6803      	ldr	r3, [r0, #0]
 8005b7c:	6263      	str	r3, [r4, #36]	; 0x24
 8005b7e:	f7fb f887 	bl	8000c90 <chSchReadyI>
 8005b82:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005b84:	42a8      	cmp	r0, r5
 8005b86:	d1f8      	bne.n	8005b7a <chThdExit+0x1a>
 8005b88:	7f63      	ldrb	r3, [r4, #29]
 8005b8a:	079b      	lsls	r3, r3, #30
 8005b8c:	d104      	bne.n	8005b98 <chThdExit+0x38>
 8005b8e:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 8005b92:	611a      	str	r2, [r3, #16]
 8005b94:	6922      	ldr	r2, [r4, #16]
 8005b96:	6153      	str	r3, [r2, #20]
 8005b98:	200f      	movs	r0, #15
 8005b9a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005b9e:	f7fb bee7 	b.w	8001970 <chSchGoSleepS>
 8005ba2:	bf00      	nop
 8005ba4:	20000938 	.word	0x20000938
	...

08005bb0 <thread1.lto_priv.71>:
 8005bb0:	f7ff bfd6 	b.w	8005b60 <chThdExit>
	...

08005bc0 <chSchDoReschedule>:
 8005bc0:	f7fb bc6e 	b.w	80014a0 <chSchDoRescheduleAhead>
	...

08005bd0 <__default_exit>:
 8005bd0:	e7fe      	b.n	8005bd0 <__default_exit>
 8005bd2:	bf00      	nop
	...

08005be0 <__late_init>:
 8005be0:	4770      	bx	lr
 8005be2:	bf00      	nop
	...
 8005bf0:	6e696c62 	.word	0x6e696c62
 8005bf4:	0072656b 	.word	0x0072656b
	...
 8005c00:	61686e75 	.word	0x61686e75
 8005c04:	656c646e 	.word	0x656c646e
 8005c08:	78652064 	.word	0x78652064
 8005c0c:	74706563 	.word	0x74706563
 8005c10:	006e6f69 	.word	0x006e6f69
	...
 8005c20:	202d2d2d 	.word	0x202d2d2d
 8005c24:	726f6353 	.word	0x726f6353
 8005c28:	203a2065 	.word	0x203a2065
 8005c2c:	00000000 	.word	0x00000000
 8005c30:	6d697420 	.word	0x6d697420
 8005c34:	2f737265 	.word	0x2f737265
 8005c38:	00000053 	.word	0x00000053
 8005c3c:	00000000 	.word	0x00000000
 8005c40:	69617720 	.word	0x69617720
 8005c44:	69732b74 	.word	0x69732b74
 8005c48:	6c616e67 	.word	0x6c616e67
 8005c4c:	0000532f 	.word	0x0000532f
 8005c50:	636f6c20 	.word	0x636f6c20
 8005c54:	6e752b6b 	.word	0x6e752b6b
 8005c58:	6b636f6c 	.word	0x6b636f6c
 8005c5c:	0000532f 	.word	0x0000532f
 8005c60:	202d2d2d 	.word	0x202d2d2d
 8005c64:	74737953 	.word	0x74737953
 8005c68:	203a6d65 	.word	0x203a6d65
 8005c6c:	00000000 	.word	0x00000000
 8005c70:	74796220 	.word	0x74796220
 8005c74:	00007365 	.word	0x00007365
 8005c78:	202d2d2d 	.word	0x202d2d2d
 8005c7c:	65726854 	.word	0x65726854
 8005c80:	203a6461 	.word	0x203a6461
 8005c84:	00000000 	.word	0x00000000
 8005c88:	202d2d2d 	.word	0x202d2d2d
 8005c8c:	656d6954 	.word	0x656d6954
 8005c90:	203a2072 	.word	0x203a2072
 8005c94:	00000000 	.word	0x00000000
 8005c98:	202d2d2d 	.word	0x202d2d2d
 8005c9c:	616d6553 	.word	0x616d6553
 8005ca0:	203a6870 	.word	0x203a6870
 8005ca4:	00000000 	.word	0x00000000
 8005ca8:	202d2d2d 	.word	0x202d2d2d
 8005cac:	6e657645 	.word	0x6e657645
 8005cb0:	203a5374 	.word	0x203a5374
 8005cb4:	00000000 	.word	0x00000000
 8005cb8:	202d2d2d 	.word	0x202d2d2d
 8005cbc:	6e657645 	.word	0x6e657645
 8005cc0:	203a4c74 	.word	0x203a4c74
 8005cc4:	00000000 	.word	0x00000000
 8005cc8:	202d2d2d 	.word	0x202d2d2d
 8005ccc:	6574754d 	.word	0x6574754d
 8005cd0:	203a2078 	.word	0x203a2078
 8005cd4:	00000000 	.word	0x00000000
 8005cd8:	202d2d2d 	.word	0x202d2d2d
 8005cdc:	646e6f43 	.word	0x646e6f43
 8005ce0:	203a2e56 	.word	0x203a2e56
 8005ce4:	00000000 	.word	0x00000000
 8005ce8:	202d2d2d 	.word	0x202d2d2d
 8005cec:	75657551 	.word	0x75657551
 8005cf0:	203a2065 	.word	0x203a2065
 8005cf4:	00000000 	.word	0x00000000
 8005cf8:	202d2d2d 	.word	0x202d2d2d
 8005cfc:	6c69614d 	.word	0x6c69614d
 8005d00:	203a2e42 	.word	0x203a2e42
	...
 8005d10:	67736d20 	.word	0x67736d20
 8005d14:	2c532f73 	.word	0x2c532f73
 8005d18:	00000020 	.word	0x00000020
 8005d1c:	00000000 	.word	0x00000000
 8005d20:	72687420 	.word	0x72687420
 8005d24:	73646165 	.word	0x73646165
 8005d28:	0000532f 	.word	0x0000532f
 8005d2c:	00000000 	.word	0x00000000
 8005d30:	73657220 	.word	0x73657220
 8005d34:	64656863 	.word	0x64656863
 8005d38:	73656c75 	.word	0x73656c75
 8005d3c:	202c532f 	.word	0x202c532f
	...
 8005d50:	78746320 	.word	0x78746320
 8005d54:	2f637773 	.word	0x2f637773
 8005d58:	00000053 	.word	0x00000053
 8005d5c:	00000000 	.word	0x00000000
 8005d60:	74796220 	.word	0x74796220
 8005d64:	532f7365 	.word	0x532f7365
	...

08005d70 <ch_debug>:
 8005d70:	6e69616d 18011600 08440404 1814100c     main......D.....
 8005d80:	1e1d1c00 00000000 00000000 00000000     ................
 8005d90:	00004241 00000000 00000000 00000000     AB..............
 8005da0:	00000042 00000043 00000044 00000000     B...C...D.......
 8005db0:	00000041 00000000 00000000 00000000     A...............

08005dc0 <evhndl>:
 8005dc0:	080007e1 080007d1 080007c1 00000000     ................
 8005dd0:	00434241 00000000 00000000 00000000     ABC.............
 8005de0:	202a2a2a 6e72654b 203a6c65 20202020     *** Kernel:     
 8005df0:	00002020 202a2a2a 706d6f43 64656c69       ..*** Compiled
 8005e00:	2020203a 00002020 202a2a2a 706d6f43     :     ..*** Comp
 8005e10:	72656c69 2020203a 00002020 202a2a2a     iler:     ..*** 
 8005e20:	68637241 63657469 65727574 0000203a     Architecture: ..
 8005e30:	202a2a2a 65726f43 72615620 746e6169     *** Core Variant
 8005e40:	0000203a 202a2a2a 74726f50 666e4920     : ..*** Port Inf
 8005e50:	20203a6f 00002020 202a2a2a 74616c50     o:    ..*** Plat
 8005e60:	6d726f66 2020203a 00002020 202a2a2a     form:     ..*** 
 8005e70:	74736554 616f4220 203a6472 00002020     Test Board:   ..
 8005e80:	202d2d2d 74736554 73614320 00002065     --- Test Case ..
 8005e90:	00002820 202d2d2d 75736552 203a746c      (..--- Result: 
 8005ea0:	4c494146 20455255 00002328 00005b20     FAILURE (#.. [..
 8005eb0:	616e6946 6572206c 746c7573 0000203a     Final result: ..
 8005ec0:	656c6469 00000000 202a2a2a 62696843     idle....*** Chib
 8005ed0:	2f534f69 74205452 20747365 74697573     iOS/RT test suit
 8005ee0:	00000065 002a2a2a 2e302e33 00000030     e...***.3.0.0...
 8005ef0:	20727041 32203620 20383130 3631202d     Apr  6 2018 - 16
 8005f00:	3a31303a 00003730 20434347 2e322e37     :01:07..GCC 7.2.
 8005f10:	30322031 39303731 28203430 656c6572     1 20170904 (rele
 8005f20:	29657361 52415b20 6d652f4d 64646562     ase) [ARM/embedd
 8005f30:	372d6465 6172622d 2068636e 69766572     ed-7-branch revi
 8005f40:	6e6f6973 35353220 5d343032 00000000     sion 255204]....
 8005f50:	764d5241 454d2d37 00000000 74726f43     ARMv7-ME....Cort
 8005f60:	4d2d7865 00000034 61766441 6465636e     ex-M4...Advanced
 8005f70:	72656b20 206c656e 65646f6d 00000000      kernel mode....
 8005f80:	334d5453 37334632 20437833 6c616e41     STM32F373xC Anal
 8005f90:	2620676f 50534420 00000000 694d5453     og & DSP....STMi
 8005fa0:	656f7263 7463656c 696e6f72 53207363     croelectronics S
 8005fb0:	32334d54 43333733 4156452d 0000004c     TM32373C-EVAL...
 8005fc0:	00000029 0000295d 202d2d2d 75736552     )...])..--- Resu
 8005fd0:	203a746c 43435553 00535345 4c494146     lt: SUCCESS.FAIL
 8005fe0:	00455255 00000000 00000000 00000000     URE.............
 8005ff0:	44434241 00000045 00000000 00000000     ABCDE...........

08006000 <patternbmk>:
 8006000:	08006650 080066a0 080066b0 080066c0     Pf...f...f...f..
 8006010:	080066d0 080066e0 080066f0 08006700     .f...f...f...g..
 8006020:	08006710 08006660 08006670 08006680     .g..`f..pf...f..
 8006030:	08006690 00000000 00000000 00000000     .f..............

08006040 <patterndyn>:
 8006040:	08006720 08006730 08006740 00000000      g..0g..@g......

08006050 <patternevt>:
 8006050:	08006750 08006760 08006770 00000000     Pg..`g..pg......

08006060 <patternheap>:
 8006060:	08006780 00000000 00000000 00000000     .g..............

08006070 <patternmbox>:
 8006070:	08006790 00000000 00000000 00000000     .g..............

08006080 <patternmsg>:
 8006080:	080067a0 00000000 00000000 00000000     .g..............

08006090 <patternmtx>:
 8006090:	080067b0 080067c0 080067d0 080067e0     .g...g...g...g..
 80060a0:	080067f0 08006800 00000000 00000000     .g...h..........

080060b0 <patternpools>:
 80060b0:	08006810 00000000 00000000 00000000     .h..............

080060c0 <patternqueues>:
 80060c0:	08006820 08006830 00000000 00000000      h..0h..........

080060d0 <patterns>:
 80060d0:	08006130 08006140 08006110 08006090     0a..@a...a...`..
 80060e0:	08006080 08006070 08006050 08006060     .`..p`..P`..``..
 80060f0:	080060b0 08006040 080060c0 08006000     .`..@`...`...`..
	...

08006110 <patternsem>:
 8006110:	08006840 08006850 08006860 08006870     @h..Ph..`h..ph..
	...

08006130 <patternsys>:
 8006130:	08006880 08006890 080068a0 00000000     .h...h...h......

08006140 <patternthd>:
 8006140:	080068b0 080068c0 080068d0 080068e0     .h...h...h...h..
	...
 8006160:	00000a0d 00000000 00000000 00000000     ................
 8006170:	44434241 00000000 00000000 00000000     ABCD............
 8006180:	636e6542 72616d68 52202c6b 66204d41     Benchmark, RAM f
 8006190:	70746f6f 746e6972 00000000 636e6542     ootprint....Benc
 80061a0:	72616d68 6d202c6b 78657475 6c207365     hmark, mutexes l
 80061b0:	2f6b636f 6f6c6e75 00006b63 636e6542     ock/unlock..Benc
 80061c0:	72616d68 73202c6b 70616d65 65726f68     hmark, semaphore
 80061d0:	61772073 732f7469 616e6769 0000006c     s wait/signal...
 80061e0:	636e6542 72616d68 76202c6b 75747269     Benchmark, virtu
 80061f0:	74206c61 72656d69 65732073 65722f74     al timers set/re
 8006200:	00746573 636e6542 72616d68 49202c6b     set.Benchmark, I
 8006210:	51204f2f 65756575 68742073 67756f72     /O Queues throug
 8006220:	74757068 00000000 636e6542 72616d68     hput....Benchmar
 8006230:	72202c6b 646e756f 626f7220 63206e69     k, round robin c
 8006240:	65746e6f 73207478 63746977 676e6968     ontext switching
 8006250:	00000000 636e6542 72616d68 6d202c6b     ....Benchmark, m
 8006260:	20737361 63736572 75646568 202c656c     ass reschedule, 
 8006270:	68742035 64616572 00000073 636e6542     5 threads...Benc
 8006280:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8006290:	61657263 6f206574 00796c6e 636e6542     create only.Benc
 80062a0:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 80062b0:	6c6c7566 63796320 0000656c 636e6542     full cycle..Benc
 80062c0:	72616d68 63202c6b 65746e6f 73207478     hmark, context s
 80062d0:	63746977 00000068 636e6542 72616d68     witch...Benchmar
 80062e0:	6d202c6b 61737365 20736567 00003323     k, messages #3..
 80062f0:	636e6542 72616d68 6d202c6b 61737365     Benchmark, messa
 8006300:	20736567 00003223 636e6542 72616d68     ges #2..Benchmar
 8006310:	6d202c6b 61737365 20736567 00003123     k, messages #1..
 8006320:	75657551 202c7365 7074756f 71207475     Queues, output q
 8006330:	65756575 00000073 75657551 202c7365     ueues...Queues, 
 8006340:	75706e69 75712074 73657565 00000000     input queues....
 8006350:	616e7944 2063696d 73495041 6572202c     Dynamic APIs, re
 8006360:	74736967 61207972 7220646e 72656665     gistry and refer
 8006370:	65636e65 00000073 616e7944 2063696d     ences...Dynamic 
 8006380:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8006390:	69746165 66206e6f 206d6f72 6f6d656d     eation from memo
 80063a0:	70207972 006c6f6f 616e7944 2063696d     ry pool.Dynamic 
 80063b0:	73495041 6874202c 64616572 72632073     APIs, threads cr
 80063c0:	69746165 66206e6f 206d6f72 70616568     eation from heap
 80063d0:	00000000 6f6d654d 50207972 736c6f6f     ....Memory Pools
 80063e0:	7571202c 2f657565 75716564 00657565     , queue/dequeue.
 80063f0:	70616548 6c61202c 61636f6c 6e6f6974     Heap, allocation
 8006400:	646e6120 61726620 6e656d67 69746174      and fragmentati
 8006410:	74206e6f 00747365 6e657645 202c7374     on test.Events, 
 8006420:	656d6974 7374756f 00000000 6e657645     timeouts....Even
 8006430:	202c7374 74696177 646e6120 6f726220     ts, wait and bro
 8006440:	61636461 00007473 6e657645 202c7374     adcast..Events, 
 8006450:	69676572 61727473 6e6f6974 646e6120     registration and
 8006460:	73696420 63746170 00000068 6c69614d      dispatch...Mail
 8006470:	65786f62 71202c73 69756575 6120676e     boxes, queuing a
 8006480:	7420646e 6f656d69 00737475 7373654d     nd timeouts.Mess
 8006490:	73656761 6f6c202c 0000706f 646e6f43     ages, loop..Cond
 80064a0:	2c726156 6f6f6220 74207473 00747365     Var, boost test.
 80064b0:	646e6f43 2c726156 6f726220 61636461     CondVar, broadca
 80064c0:	74207473 00747365 646e6f43 2c726156     st test.CondVar,
 80064d0:	67697320 206c616e 74736574 00000000      signal test....
 80064e0:	6574754d 2c736578 61747320 00737574     Mutexes, status.
 80064f0:	6574754d 2c736578 69727020 7469726f     Mutexes, priorit
 8006500:	65722079 6e727574 00000000 6574754d     y return....Mute
 8006510:	2c736578 69727020 7469726f 6e652079     xes, priority en
 8006520:	75657571 20676e69 74736574 00000000     queuing test....
 8006530:	616e6942 53207972 70616d65 65726f68     Binary Semaphore
 8006540:	66202c73 74636e75 616e6f69 7974696c     s, functionality
 8006550:	00000000 616d6553 726f6870 202c7365     ....Semaphores, 
 8006560:	6d6f7461 73206369 616e6769 61772d6c     atomic signal-wa
 8006570:	00007469 616d6553 726f6870 202c7365     it..Semaphores, 
 8006580:	656d6974 0074756f 616d6553 726f6870     timeout.Semaphor
 8006590:	202c7365 75716e65 6e697565 00000067     es, enqueuing...
 80065a0:	65726854 2c736461 6c656420 00737961     Threads, delays.
 80065b0:	65726854 2c736461 69727020 7469726f     Threads, priorit
 80065c0:	68632079 65676e61 00000000 65726854     y change....Thre
 80065d0:	2c736461 716e6520 69756575 7420676e     ads, enqueuing t
 80065e0:	20747365 00003223 65726854 2c736461     est #2..Threads,
 80065f0:	716e6520 69756575 7420676e 20747365      enqueuing test 
 8006600:	00003123 74737953 202c6d65 65746e69     #1..System, inte
 8006610:	74697267 00000079 74737953 202c6d65     grity...System, 
 8006620:	65746e69 70757272 68207374 6c646e61     interrupts handl
 8006630:	00676e69 74737953 202c6d65 74697263     ing.System, crit
 8006640:	6c616369 6e6f7a20 00007365 00000000     ical zones......

08006650 <testbmk1>:
 8006650:	08006308 00000000 00000000 08003e51     .c..........Q>..

08006660 <testbmk10>:
 8006660:	080061e0 00000000 00000000 08002891     .a...........(..

08006670 <testbmk11>:
 8006670:	080061bc 08000341 00000000 08003711     .a..A........7..

08006680 <testbmk12>:
 8006680:	0800619c 08000331 00000000 08002d81     .a..1........-..

08006690 <testbmk13>:
 8006690:	08006180 00000000 00000000 08001321     .a..........!...

080066a0 <testbmk2>:
 80066a0:	080062f0 00000000 00000000 08003de1     .b...........=..

080066b0 <testbmk3>:
 80066b0:	080062d8 00000000 00000000 08003d01     .b...........=..

080066c0 <testbmk4>:
 80066c0:	080062bc 00000000 00000000 08003c51     .b..........Q<..

080066d0 <testbmk5>:
 80066d0:	0800629c 00000000 00000000 08003991     .b...........9..

080066e0 <testbmk6>:
 80066e0:	0800627c 00000000 00000000 080029d1     |b...........)..

080066f0 <testbmk7>:
 80066f0:	08006254 08000371 00000000 08003b21     Tb..q.......!;..

08006700 <testbmk8>:
 8006700:	08006228 00000000 00000000 08003a41     (b..........A:..

08006710 <testbmk9>:
 8006710:	08006204 00000000 00000000 08002921     .b..........!)..

08006720 <testdyn1>:
 8006720:	080063a8 08000421 00000000 080044d1     .c..!........D..

08006730 <testdyn2>:
 8006730:	08006378 08000401 00000000 080043d1     xc...........C..

08006740 <testdyn3>:
 8006740:	08006350 08000451 00000000 08003341     Pc..Q.......A3..

08006750 <testevt1>:
 8006750:	08006448 080004c1 00000000 08000ae1     Hd..............

08006760 <testevt2>:
 8006760:	0800642c 080004e1 00000000 080045a1     ,d...........E..

08006770 <testevt3>:
 8006770:	08006418 080004d1 00000000 08001be1     .d..............

08006780 <testheap1>:
 8006780:	080063f0 08000491 00000000 08003471     .c..........q4..

08006790 <testmbox1>:
 8006790:	0800646c 080004f1 00000000 08001e71     ld..........q...

080067a0 <testmsg1>:
 80067a0:	0800648c 00000000 00000000 08002b51     .d..........Q+..

080067b0 <testmtx1>:
 80067b0:	0800650c 080005b1 00000000 08004d41     .e..........AM..

080067c0 <testmtx4>:
 80067c0:	080064f0 08000591 00000000 08004ae1     .d...........J..

080067d0 <testmtx5>:
 80067d0:	080064e0 080005c1 00000000 08002f11     .d.........../..

080067e0 <testmtx6>:
 80067e0:	080064c8 08000561 00000000 08004a01     .d..a........J..

080067f0 <testmtx7>:
 80067f0:	080064b0 08000581 00000000 08004911     .d...........I..

08006800 <testmtx8>:
 8006800:	0800649c 08000531 00000000 08004881     .d..1........H..

08006810 <testpools1>:
 8006810:	080063d4 08000471 00000000 080009d1     .c..q...........

08006820 <testqueues1>:
 8006820:	08006338 080003d1 00000000 08004121     8c..........!A..

08006830 <testqueues2>:
 8006830:	08006320 080003a1 00000000 08003ec1      c...........>..

08006840 <testsem1>:
 8006840:	08006588 080005d1 00000000 08004f81     .e...........O..

08006850 <testsem2>:
 8006850:	08006574 080005f1 00000000 08004e31     te..........1N..

08006860 <testsem3>:
 8006860:	08006554 080005e1 00000000 08001a11     Te..............

08006870 <testsem4>:
 8006870:	08006530 00000000 00000000 080037b1     0e...........7..

08006880 <testsys1>:
 8006880:	08006634 00000000 00000000 08002711     4f...........'..

08006890 <testsys2>:
 8006890:	08006618 00000000 00000000 08000381     .f..............

080068a0 <testsys3>:
 80068a0:	08006604 00000000 00000000 08001271     .f..........q...

080068b0 <testthd1>:
 80068b0:	080065e8 00000000 00000000 08005231     .e..........1R..

080068c0 <testthd2>:
 80068c0:	080065cc 00000000 00000000 080050f1     .e...........P..

080068d0 <testthd3>:
 80068d0:	080065b0 00000000 00000000 080015c1     .e..............

080068e0 <testthd4>:
 80068e0:	080065a0 00000000 00000000 08002a41     .e..........A*..

080068f0 <vmt>:
 80068f0:	080024e1 08002601 08002561 08002681     .$...&..a%...&..
 8006900:	08002551 08002671 080024d1 080025f1     Q%..q&...$...%..

08006910 <wa>:
 8006910:	20000b40 20000c88 20000dd0 20000f18     @.. ... ... ... 
 8006920:	20001060                                `.. 
