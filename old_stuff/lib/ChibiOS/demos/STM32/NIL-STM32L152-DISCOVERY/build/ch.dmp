
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000141

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x00000f40 memsz 0x00000f40 flags rwx
    LOAD off    0x00020500 vaddr 0x20000500 paddr 0x08000f40 align 2**16
         filesz 0x00000000 memsz 0x00000390 flags rw-
    LOAD off    0x00020000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000500 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       00000140  08000000  08000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e00  08000140  08000140  00010140  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000000  08000f40  08000f40  00010f40  2**0
                  CONTENTS
  3 .mstack       00000400  20000000  20000000  00020000  2**0
                  ALLOC
  4 .pstack       00000100  20000400  20000400  00020000  2**0
                  ALLOC
  5 .data         00000000  20000500  20000500  00010f40  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000390  20000500  08000f40  00020500  2**3
                  ALLOC
  7 .ram0         00000000  20000890  20000890  00010f40  2**2
                  CONTENTS
  8 .ram1         00000000  00000000  00000000  00010f40  2**2
                  CONTENTS
  9 .ram2         00000000  00000000  00000000  00010f40  2**2
                  CONTENTS
 10 .ram3         00000000  00000000  00000000  00010f40  2**2
                  CONTENTS
 11 .ram4         00000000  00000000  00000000  00010f40  2**2
                  CONTENTS
 12 .ram5         00000000  00000000  00000000  00010f40  2**2
                  CONTENTS
 13 .ram6         00000000  00000000  00000000  00010f40  2**2
                  CONTENTS
 14 .ram7         00000000  00000000  00000000  00010f40  2**2
                  CONTENTS
 15 .ARM.attributes 0000002d  00000000  00000000  00010f40  2**0
                  CONTENTS, READONLY
 16 .comment      0000007e  00000000  00000000  00010f6d  2**0
                  CONTENTS, READONLY
 17 .debug_info   00003c23  00000000  00000000  00010feb  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_abbrev 000006d1  00000000  00000000  00014c0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_loc    00001674  00000000  00000000  000152df  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 00000118  00000000  00000000  00016953  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_ranges 00000918  00000000  00000000  00016a6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_line   00000e6a  00000000  00000000  00017383  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_str    00001210  00000000  00000000  000181ed  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_frame  00000340  00000000  00000000  00019400  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
08000140 l    d  .text	00000000 .text
08000f40 l    d  .textalign	00000000 .textalign
20000000 l    d  .mstack	00000000 .mstack
20000400 l    d  .pstack	00000000 .pstack
20000500 l    d  .data	00000000 .data
20000500 l    d  .bss	00000000 .bss
20000890 l    d  .ram0	00000000 .ram0
00000000 l    d  .ram1	00000000 .ram1
00000000 l    d  .ram2	00000000 .ram2
00000000 l    d  .ram3	00000000 .ram3
00000000 l    d  .ram4	00000000 .ram4
00000000 l    d  .ram5	00000000 .ram5
00000000 l    d  .ram6	00000000 .ram6
00000000 l    d  .ram7	00000000 .ram7
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 
08000230 l     F .text	0000003c osalThreadDequeueNextI.constprop.14
08000270 l     F .text	0000009c _pal_lld_setgroupmode.constprop.2
08000310 l     F .text	00000010 notify1
08000320 l     F .text	00000058 _port_irq_epilogue
08000380 l     F .text	000001dc VectorD4
08000560 l     F .text	000000e8 VectorB0
08000650 l     F .text	0000001a SVC_Handler
08000670 l     F .text	00000004 _unhandled_exception
08000670 l     F .text	00000004 BusFault_Handler
08000670 l     F .text	00000004 UsageFault_Handler
08000670 l     F .text	00000004 Vector1C
08000670 l     F .text	00000004 Vector20
08000670 l     F .text	00000004 Vector24
08000670 l     F .text	00000004 Vector28
08000670 l     F .text	00000004 HardFault_Handler
08000670 l     F .text	00000004 DebugMon_Handler
08000670 l     F .text	00000004 Vector34
08000670 l     F .text	00000004 PendSV_Handler
08000670 l     F .text	00000004 SysTick_Handler
08000670 l     F .text	00000004 Vector40
08000670 l     F .text	00000004 Vector44
08000670 l     F .text	00000004 Vector48
08000670 l     F .text	00000004 Vector4C
08000670 l     F .text	00000004 Vector50
08000670 l     F .text	00000004 Vector54
08000670 l     F .text	00000004 Vector58
08000670 l     F .text	00000004 Vector5C
08000670 l     F .text	00000004 Vector60
08000670 l     F .text	00000004 Vector64
08000670 l     F .text	00000004 Vector68
08000670 l     F .text	00000004 Vector6C
08000670 l     F .text	00000004 Vector70
08000670 l     F .text	00000004 Vector74
08000670 l     F .text	00000004 Vector78
08000670 l     F .text	00000004 Vector7C
08000670 l     F .text	00000004 Vector80
08000670 l     F .text	00000004 Vector84
08000670 l     F .text	00000004 Vector88
08000670 l     F .text	00000004 Vector8C
08000670 l     F .text	00000004 Vector90
08000670 l     F .text	00000004 Vector94
08000670 l     F .text	00000004 Vector98
08000670 l     F .text	00000004 Vector9C
08000670 l     F .text	00000004 VectorA0
08000670 l     F .text	00000004 VectorA4
08000670 l     F .text	00000004 VectorA8
08000670 l     F .text	00000004 VectorAC
08000670 l     F .text	00000004 NMI_Handler
08000670 l     F .text	00000004 VectorB4
08000670 l     F .text	00000004 VectorB8
08000670 l     F .text	00000004 VectorBC
08000670 l     F .text	00000004 VectorC0
08000670 l     F .text	00000004 VectorC4
08000670 l     F .text	00000004 VectorC8
08000670 l     F .text	00000004 VectorCC
08000670 l     F .text	00000004 VectorD0
08000670 l     F .text	00000004 MemManage_Handler
08000670 l     F .text	00000004 VectorD8
08000670 l     F .text	00000004 VectorDC
08000670 l     F .text	00000004 VectorE0
08000670 l     F .text	00000004 VectorE4
08000670 l     F .text	00000004 VectorE8
08000670 l     F .text	00000004 VectorEC
08000670 l     F .text	00000004 VectorF0
08000670 l     F .text	00000004 VectorF4
08000670 l     F .text	00000004 VectorF8
08000670 l     F .text	00000004 VectorFC
08000670 l     F .text	00000004 Vector100
08000670 l     F .text	00000004 Vector104
08000670 l     F .text	00000004 Vector108
08000670 l     F .text	00000004 Vector10C
08000670 l     F .text	00000004 Vector110
08000670 l     F .text	00000004 Vector114
08000670 l     F .text	00000004 Vector118
08000670 l     F .text	00000004 Vector11C
08000670 l     F .text	00000004 Vector120
08000670 l     F .text	00000004 Vector124
08000670 l     F .text	00000004 Vector128
08000670 l     F .text	00000004 Vector12C
08000670 l     F .text	00000004 Vector130
08000670 l     F .text	00000004 Vector134
08000670 l     F .text	00000004 Vector138
08000670 l     F .text	00000004 Vector13C
08000680 l     F .text	00000074 chSchGoSleepTimeoutS
08000700 l     F .text	00000038 chSemWaitTimeoutS
08000740 l     F .text	0000008e oqWriteTimeout
080007d0 l     F .text	00000006 writet
080007e0 l     F .text	00000008 write
080007f0 l     F .text	00000060 oqPutTimeout
08000850 l     F .text	00000006 putt
08000860 l     F .text	00000008 put
08000870 l     F .text	0000007e iqReadTimeout
080008f0 l     F .text	00000006 readt
08000900 l     F .text	00000008 read
08000910 l     F .text	00000058 iqGetTimeout
08000970 l     F .text	00000006 gett
08000980 l     F .text	00000008 get
08000990 l     F .text	00000018 chThdSleep
080009b0 l     F .text	0000008c Thread3
08000a40 l     F .text	00000024 Thread2
08000a70 l     F .text	00000020 Thread1
20000500 l     O .bss	00000078 SD1
20000578 l     O .bss	0000005c nil
200005d8 l     O .bss	000000e8 waThread1
200006c0 l     O .bss	000000e8 waThread2
200007a8 l     O .bss	000000e8 waThread3
08000ea0 l     O .text	00000050 nil_thd_configs
08000f20 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 build/obj/crt0_v7m.o
0800015e l       .text	00000000 msloop
0800016c l       .text	00000000 psloop
0800017c l       .text	00000000 dloop
08000190 l       .text	00000000 bloop
080001a2 l       .text	00000000 initloop
080001ae l       .text	00000000 endinitloop
080001b6 l       .text	00000000 finiloop
080001c2 l       .text	00000000 endfiniloop
00000000 l    df *ABS*	00000000 build/obj/nilcoreasm_v7m.o
00000000 l       *ABS*	00000000 CONTEXT_OFFSET
e000ed04 l       *ABS*	00000000 SCB_ICSR
10000000 l       *ABS*	00000000 ICSR_PENDSVSET
00000000 g       startup	00000000 __ram4_start__
00000000 g       .ram1	00000000 __ram1_free__
00000000 g       startup	00000000 __ram6_start__
08000000 g     O startup	00000140 _vectors
20000890 g       .ram0	00000000 __ram0_free__
20000890 g       .ram0	00000000 __heap_base__
08000f40 g       .mstack	00000000 _etext
08000e40 g     F .text	00000018 chSchRescheduleS
00000000 g       *ABS*	00000000 __ram5_end__
00000000 g       *ABS*	00000000 __ram5_size__
08000140 g       startup	00000000 __fini_array_end
20000500 g       .pstack	00000000 __main_thread_stack_end__
20000500 g       .bss	00000000 _bss_start
20004000 g       *ABS*	00000000 __heap_end__
00000000 g       *ABS*	00000000 __ram1_size__
00000000 g       .ram7	00000000 __ram7_free__
00000000 g       *ABS*	00000000 __ram4_size__
00000000 g       *ABS*	00000000 __ram1_end__
00000000 g       *ABS*	00000000 __ram4_end__
00004000 g       *ABS*	00000000 __ram0_size__
08000e60 g     F .text	00000004 chSysHalt
20000890 g       .bss	00000000 _bss_end
08000140 g     F .text	00000000 Reset_Handler
00000000 g       .ram5	00000000 __ram5_free__
08000e70 g     F .text	00000002 __default_exit
00000000 g       *ABS*	00000000 __ram6_end__
00000000 g       .ram6	00000000 __ram6_free__
00000000 g       *ABS*	00000000 __ram7_size__
08000200 g     F .text	00000000 _port_switch
08000e80 g     F .text	00000002 __late_init
00000000 g       startup	00000000 __ram7_start__
00000000 g       *ABS*	00000000 __ram3_size__
08000f40 g       *ABS*	00000000 _textdata
00000000 g       startup	00000000 _text
08000140 g       startup	00000000 __fini_array_start
00000000 g       *ABS*	00000000 __ram3_end__
00000000 g       *ABS*	00000000 __ram2_size__
00000000 g       startup	00000000 __ram1_start__
08000a90 g     F .text	000002c0 main
00000000 g       *ABS*	00000000 __ram6_size__
00000000 g       .ram3	00000000 __ram3_free__
08000140 g       startup	00000000 __init_array_end
08000210 g     F .text	00000000 _port_thread_start
00000000 g       *ABS*	00000000 __ram2_end__
20000400 g       .pstack	00000000 __process_stack_base__
20000500 g       .data	00000000 _data
00000000 g       startup	00000000 __ram2_start__
08000222 g     F .text	00000000 _port_switch_from_isr
00000000 g       *ABS*	00000000 __ram7_end__
20000400 g       .mstack	00000000 __main_stack_end__
20000500 g       .data	00000000 _edata
20000400 g       .pstack	00000000 __main_thread_stack_base__
20000000 g       startup	00000000 __ram0_start__
08000226 g       .text	00000000 _port_exit_from_isr
08000140 g       startup	00000000 __init_array_start
00000000 g       startup	00000000 __ram5_start__
00000000 g       .ram2	00000000 __ram2_free__
00000000 g       .ram4	00000000 __ram4_free__
20004000 g       *ABS*	00000000 __ram0_end__
20000000 g       .mstack	00000000 __main_stack_base__
00000400 g       *ABS*	00000000 __main_stack_size__
20000500 g       .pstack	00000000 __process_stack_end__
08000d50 g     F .text	000000f0 __early_init
00000000 g       startup	00000000 __ram3_start__
00000100 g       *ABS*	00000000 __process_stack_size__


