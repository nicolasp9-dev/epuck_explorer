
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

080001d0 <Reset_Handler>:
 80001d0:	b672      	cpsid	i
 80001d2:	4821      	ldr	r0, [pc, #132]	; (8000258 <endfiniloop+0x6>)
 80001d4:	f380 8809 	msr	PSP, r0
 80001d8:	2002      	movs	r0, #2
 80001da:	f380 8814 	msr	CONTROL, r0
 80001de:	f3bf 8f6f 	isb	sy
 80001e2:	f003 fd3d 	bl	8003c60 <__early_init>
 80001e6:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
 80001ea:	491c      	ldr	r1, [pc, #112]	; (800025c <endfiniloop+0xa>)
 80001ec:	4a1c      	ldr	r2, [pc, #112]	; (8000260 <endfiniloop+0xe>)

080001ee <msloop>:
 80001ee:	4291      	cmp	r1, r2
 80001f0:	bf3c      	itt	cc
 80001f2:	f841 0b04 	strcc.w	r0, [r1], #4
 80001f6:	e7fa      	bcc.n	80001ee <msloop>
 80001f8:	491a      	ldr	r1, [pc, #104]	; (8000264 <endfiniloop+0x12>)
 80001fa:	4a17      	ldr	r2, [pc, #92]	; (8000258 <endfiniloop+0x6>)

080001fc <psloop>:
 80001fc:	4291      	cmp	r1, r2
 80001fe:	bf3c      	itt	cc
 8000200:	f841 0b04 	strcc.w	r0, [r1], #4
 8000204:	e7fa      	bcc.n	80001fc <psloop>
 8000206:	4918      	ldr	r1, [pc, #96]	; (8000268 <endfiniloop+0x16>)
 8000208:	4a18      	ldr	r2, [pc, #96]	; (800026c <endfiniloop+0x1a>)
 800020a:	4b19      	ldr	r3, [pc, #100]	; (8000270 <endfiniloop+0x1e>)

0800020c <dloop>:
 800020c:	429a      	cmp	r2, r3
 800020e:	bf3e      	ittt	cc
 8000210:	f851 0b04 	ldrcc.w	r0, [r1], #4
 8000214:	f842 0b04 	strcc.w	r0, [r2], #4
 8000218:	e7f8      	bcc.n	800020c <dloop>
 800021a:	2000      	movs	r0, #0
 800021c:	4915      	ldr	r1, [pc, #84]	; (8000274 <endfiniloop+0x22>)
 800021e:	4a16      	ldr	r2, [pc, #88]	; (8000278 <endfiniloop+0x26>)

08000220 <bloop>:
 8000220:	4291      	cmp	r1, r2
 8000222:	bf3c      	itt	cc
 8000224:	f841 0b04 	strcc.w	r0, [r1], #4
 8000228:	e7fa      	bcc.n	8000220 <bloop>
 800022a:	f001 f879 	bl	8001320 <__late_init>
 800022e:	4c13      	ldr	r4, [pc, #76]	; (800027c <endfiniloop+0x2a>)
 8000230:	4d13      	ldr	r5, [pc, #76]	; (8000280 <endfiniloop+0x2e>)

08000232 <initloop>:
 8000232:	42ac      	cmp	r4, r5
 8000234:	da03      	bge.n	800023e <endinitloop>
 8000236:	f854 1b04 	ldr.w	r1, [r4], #4
 800023a:	4788      	blx	r1
 800023c:	e7f9      	b.n	8000232 <initloop>

0800023e <endinitloop>:
 800023e:	f007 facf 	bl	80077e0 <main>
 8000242:	4c10      	ldr	r4, [pc, #64]	; (8000284 <endfiniloop+0x32>)
 8000244:	4d10      	ldr	r5, [pc, #64]	; (8000288 <endfiniloop+0x36>)

08000246 <finiloop>:
 8000246:	42ac      	cmp	r4, r5
 8000248:	da03      	bge.n	8000252 <endfiniloop>
 800024a:	f854 1b04 	ldr.w	r1, [r4], #4
 800024e:	4788      	blx	r1
 8000250:	e7f9      	b.n	8000246 <finiloop>

08000252 <endfiniloop>:
 8000252:	f001 b86d 	b.w	8001330 <__default_exit>
 8000256:	0000      	.short	0x0000
 8000258:	20000800 	.word	0x20000800
 800025c:	20000000 	.word	0x20000000
 8000260:	20000400 	.word	0x20000400
 8000264:	20000400 	.word	0x20000400
 8000268:	08008c20 	.word	0x08008c20
 800026c:	20000800 	.word	0x20000800
 8000270:	20000ce8 	.word	0x20000ce8
 8000274:	20000ce8 	.word	0x20000ce8
 8000278:	20001e8c 	.word	0x20001e8c
 800027c:	080001c0 	.word	0x080001c0
 8000280:	080001c4 	.word	0x080001c4
 8000284:	080001c4 	.word	0x080001c4
 8000288:	080001c4 	.word	0x080001c4
 800028c:	00000000 	.word	0x00000000

08000290 <_port_switch>:
 8000290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000294:	f8c1 d00c 	str.w	sp, [r1, #12]
 8000298:	f8d0 d00c 	ldr.w	sp, [r0, #12]
 800029c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080002a0 <_port_thread_start>:
 80002a0:	2300      	movs	r3, #0
 80002a2:	f383 8811 	msr	BASEPRI, r3
 80002a6:	4628      	mov	r0, r5
 80002a8:	47a0      	blx	r4
 80002aa:	2000      	movs	r0, #0
 80002ac:	f001 fc30 	bl	8001b10 <chThdExit>

080002b0 <_port_switch_from_isr>:
 80002b0:	f001 fb1e 	bl	80018f0 <chSchDoReschedule>

080002b4 <_port_exit_from_isr>:
 80002b4:	df00      	svc	0
 80002b6:	e7fe      	b.n	80002b6 <_port_exit_from_isr+0x2>
	...

080002c0 <selfrel_offset31>:
 80002c0:	6803      	ldr	r3, [r0, #0]
 80002c2:	005a      	lsls	r2, r3, #1
 80002c4:	bf4c      	ite	mi
 80002c6:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 80002ca:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
 80002ce:	4418      	add	r0, r3
 80002d0:	4770      	bx	lr
 80002d2:	bf00      	nop

080002d4 <search_EIT_table>:
 80002d4:	b361      	cbz	r1, 8000330 <search_EIT_table+0x5c>
 80002d6:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80002da:	f101 3aff 	add.w	sl, r1, #4294967295	; 0xffffffff
 80002de:	4690      	mov	r8, r2
 80002e0:	4606      	mov	r6, r0
 80002e2:	46d1      	mov	r9, sl
 80002e4:	2700      	movs	r7, #0
 80002e6:	eb07 0409 	add.w	r4, r7, r9
 80002ea:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 80002ee:	1064      	asrs	r4, r4, #1
 80002f0:	00e5      	lsls	r5, r4, #3
 80002f2:	1971      	adds	r1, r6, r5
 80002f4:	4608      	mov	r0, r1
 80002f6:	f7ff ffe3 	bl	80002c0 <selfrel_offset31>
 80002fa:	45a2      	cmp	sl, r4
 80002fc:	4683      	mov	fp, r0
 80002fe:	f105 0008 	add.w	r0, r5, #8
 8000302:	4430      	add	r0, r6
 8000304:	d009      	beq.n	800031a <search_EIT_table+0x46>
 8000306:	f7ff ffdb 	bl	80002c0 <selfrel_offset31>
 800030a:	45c3      	cmp	fp, r8
 800030c:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 8000310:	d805      	bhi.n	800031e <search_EIT_table+0x4a>
 8000312:	4540      	cmp	r0, r8
 8000314:	d209      	bcs.n	800032a <search_EIT_table+0x56>
 8000316:	1c67      	adds	r7, r4, #1
 8000318:	e7e5      	b.n	80002e6 <search_EIT_table+0x12>
 800031a:	45c3      	cmp	fp, r8
 800031c:	d905      	bls.n	800032a <search_EIT_table+0x56>
 800031e:	42a7      	cmp	r7, r4
 8000320:	d002      	beq.n	8000328 <search_EIT_table+0x54>
 8000322:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
 8000326:	e7de      	b.n	80002e6 <search_EIT_table+0x12>
 8000328:	2100      	movs	r1, #0
 800032a:	4608      	mov	r0, r1
 800032c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000330:	4608      	mov	r0, r1
 8000332:	4770      	bx	lr

08000334 <__gnu_unwind_get_pr_addr>:
 8000334:	2801      	cmp	r0, #1
 8000336:	d007      	beq.n	8000348 <__gnu_unwind_get_pr_addr+0x14>
 8000338:	2802      	cmp	r0, #2
 800033a:	d007      	beq.n	800034c <__gnu_unwind_get_pr_addr+0x18>
 800033c:	4b04      	ldr	r3, [pc, #16]	; (8000350 <__gnu_unwind_get_pr_addr+0x1c>)
 800033e:	2800      	cmp	r0, #0
 8000340:	bf0c      	ite	eq
 8000342:	4618      	moveq	r0, r3
 8000344:	2000      	movne	r0, #0
 8000346:	4770      	bx	lr
 8000348:	4802      	ldr	r0, [pc, #8]	; (8000354 <__gnu_unwind_get_pr_addr+0x20>)
 800034a:	4770      	bx	lr
 800034c:	4802      	ldr	r0, [pc, #8]	; (8000358 <__gnu_unwind_get_pr_addr+0x24>)
 800034e:	4770      	bx	lr
 8000350:	08000a21 	.word	0x08000a21
 8000354:	08000a25 	.word	0x08000a25
 8000358:	08000a29 	.word	0x08000a29

0800035c <get_eit_entry>:
 800035c:	b530      	push	{r4, r5, lr}
 800035e:	4b25      	ldr	r3, [pc, #148]	; (80003f4 <get_eit_entry+0x98>)
 8000360:	b083      	sub	sp, #12
 8000362:	4604      	mov	r4, r0
 8000364:	1e8d      	subs	r5, r1, #2
 8000366:	b34b      	cbz	r3, 80003bc <get_eit_entry+0x60>
 8000368:	a901      	add	r1, sp, #4
 800036a:	4628      	mov	r0, r5
 800036c:	f3af 8000 	nop.w
 8000370:	b1f0      	cbz	r0, 80003b0 <get_eit_entry+0x54>
 8000372:	9901      	ldr	r1, [sp, #4]
 8000374:	462a      	mov	r2, r5
 8000376:	f7ff ffad 	bl	80002d4 <search_EIT_table>
 800037a:	4601      	mov	r1, r0
 800037c:	b1c0      	cbz	r0, 80003b0 <get_eit_entry+0x54>
 800037e:	f7ff ff9f 	bl	80002c0 <selfrel_offset31>
 8000382:	684b      	ldr	r3, [r1, #4]
 8000384:	64a0      	str	r0, [r4, #72]	; 0x48
 8000386:	2b01      	cmp	r3, #1
 8000388:	d02e      	beq.n	80003e8 <get_eit_entry+0x8c>
 800038a:	2b00      	cmp	r3, #0
 800038c:	f101 0004 	add.w	r0, r1, #4
 8000390:	db26      	blt.n	80003e0 <get_eit_entry+0x84>
 8000392:	f7ff ff95 	bl	80002c0 <selfrel_offset31>
 8000396:	2300      	movs	r3, #0
 8000398:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 800039c:	6803      	ldr	r3, [r0, #0]
 800039e:	2b00      	cmp	r3, #0
 80003a0:	db12      	blt.n	80003c8 <get_eit_entry+0x6c>
 80003a2:	f7ff ff8d 	bl	80002c0 <selfrel_offset31>
 80003a6:	2300      	movs	r3, #0
 80003a8:	6120      	str	r0, [r4, #16]
 80003aa:	4618      	mov	r0, r3
 80003ac:	b003      	add	sp, #12
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	2300      	movs	r3, #0
 80003b2:	6123      	str	r3, [r4, #16]
 80003b4:	2309      	movs	r3, #9
 80003b6:	4618      	mov	r0, r3
 80003b8:	b003      	add	sp, #12
 80003ba:	bd30      	pop	{r4, r5, pc}
 80003bc:	490e      	ldr	r1, [pc, #56]	; (80003f8 <get_eit_entry+0x9c>)
 80003be:	480f      	ldr	r0, [pc, #60]	; (80003fc <get_eit_entry+0xa0>)
 80003c0:	1a09      	subs	r1, r1, r0
 80003c2:	10c9      	asrs	r1, r1, #3
 80003c4:	9101      	str	r1, [sp, #4]
 80003c6:	e7d5      	b.n	8000374 <get_eit_entry+0x18>
 80003c8:	f3c3 6003 	ubfx	r0, r3, #24, #4
 80003cc:	f7ff ffb2 	bl	8000334 <__gnu_unwind_get_pr_addr>
 80003d0:	2800      	cmp	r0, #0
 80003d2:	bf14      	ite	ne
 80003d4:	2300      	movne	r3, #0
 80003d6:	2309      	moveq	r3, #9
 80003d8:	6120      	str	r0, [r4, #16]
 80003da:	4618      	mov	r0, r3
 80003dc:	b003      	add	sp, #12
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	2301      	movs	r3, #1
 80003e2:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 80003e6:	e7d9      	b.n	800039c <get_eit_entry+0x40>
 80003e8:	2300      	movs	r3, #0
 80003ea:	6123      	str	r3, [r4, #16]
 80003ec:	2305      	movs	r3, #5
 80003ee:	4618      	mov	r0, r3
 80003f0:	b003      	add	sp, #12
 80003f2:	bd30      	pop	{r4, r5, pc}
 80003f4:	00000000 	.word	0x00000000
 80003f8:	08008c1c 	.word	0x08008c1c
 80003fc:	08008b1c 	.word	0x08008b1c

08000400 <restore_non_core_regs>:
 8000400:	6803      	ldr	r3, [r0, #0]
 8000402:	07da      	lsls	r2, r3, #31
 8000404:	b510      	push	{r4, lr}
 8000406:	4604      	mov	r4, r0
 8000408:	d406      	bmi.n	8000418 <restore_non_core_regs+0x18>
 800040a:	079b      	lsls	r3, r3, #30
 800040c:	f100 0048 	add.w	r0, r0, #72	; 0x48
 8000410:	d509      	bpl.n	8000426 <restore_non_core_regs+0x26>
 8000412:	f000 fc61 	bl	8000cd8 <__gnu_Unwind_Restore_VFP_D>
 8000416:	6823      	ldr	r3, [r4, #0]
 8000418:	0759      	lsls	r1, r3, #29
 800041a:	d509      	bpl.n	8000430 <restore_non_core_regs+0x30>
 800041c:	071a      	lsls	r2, r3, #28
 800041e:	d50e      	bpl.n	800043e <restore_non_core_regs+0x3e>
 8000420:	06db      	lsls	r3, r3, #27
 8000422:	d513      	bpl.n	800044c <restore_non_core_regs+0x4c>
 8000424:	bd10      	pop	{r4, pc}
 8000426:	f000 fc4f 	bl	8000cc8 <__gnu_Unwind_Restore_VFP>
 800042a:	6823      	ldr	r3, [r4, #0]
 800042c:	0759      	lsls	r1, r3, #29
 800042e:	d4f5      	bmi.n	800041c <restore_non_core_regs+0x1c>
 8000430:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000434:	f000 fc58 	bl	8000ce8 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8000438:	6823      	ldr	r3, [r4, #0]
 800043a:	071a      	lsls	r2, r3, #28
 800043c:	d4f0      	bmi.n	8000420 <restore_non_core_regs+0x20>
 800043e:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8000442:	f000 fc59 	bl	8000cf8 <__gnu_Unwind_Restore_WMMXD>
 8000446:	6823      	ldr	r3, [r4, #0]
 8000448:	06db      	lsls	r3, r3, #27
 800044a:	d4eb      	bmi.n	8000424 <restore_non_core_regs+0x24>
 800044c:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 8000450:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000454:	f000 bc94 	b.w	8000d80 <__gnu_Unwind_Restore_WMMXC>

08000458 <_Unwind_decode_typeinfo_ptr.isra.0>:
 8000458:	6803      	ldr	r3, [r0, #0]
 800045a:	b103      	cbz	r3, 800045e <_Unwind_decode_typeinfo_ptr.isra.0+0x6>
 800045c:	4403      	add	r3, r0
 800045e:	4618      	mov	r0, r3
 8000460:	4770      	bx	lr
 8000462:	bf00      	nop

08000464 <__gnu_unwind_24bit.isra.1>:
 8000464:	2009      	movs	r0, #9
 8000466:	4770      	bx	lr

08000468 <_Unwind_DebugHook>:
 8000468:	4770      	bx	lr
 800046a:	bf00      	nop

0800046c <unwind_phase2>:
 800046c:	b570      	push	{r4, r5, r6, lr}
 800046e:	4604      	mov	r4, r0
 8000470:	460d      	mov	r5, r1
 8000472:	e008      	b.n	8000486 <unwind_phase2+0x1a>
 8000474:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8000476:	6163      	str	r3, [r4, #20]
 8000478:	462a      	mov	r2, r5
 800047a:	6923      	ldr	r3, [r4, #16]
 800047c:	4621      	mov	r1, r4
 800047e:	2001      	movs	r0, #1
 8000480:	4798      	blx	r3
 8000482:	2808      	cmp	r0, #8
 8000484:	d108      	bne.n	8000498 <unwind_phase2+0x2c>
 8000486:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8000488:	4620      	mov	r0, r4
 800048a:	f7ff ff67 	bl	800035c <get_eit_entry>
 800048e:	4606      	mov	r6, r0
 8000490:	2800      	cmp	r0, #0
 8000492:	d0ef      	beq.n	8000474 <unwind_phase2+0x8>
 8000494:	f007 fa64 	bl	8007960 <abort>
 8000498:	2807      	cmp	r0, #7
 800049a:	d1fb      	bne.n	8000494 <unwind_phase2+0x28>
 800049c:	4630      	mov	r0, r6
 800049e:	6c29      	ldr	r1, [r5, #64]	; 0x40
 80004a0:	f7ff ffe2 	bl	8000468 <_Unwind_DebugHook>
 80004a4:	1d28      	adds	r0, r5, #4
 80004a6:	f000 fc03 	bl	8000cb0 <__restore_core_regs>
 80004aa:	bf00      	nop

080004ac <unwind_phase2_forced>:
 80004ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80004b0:	1d0c      	adds	r4, r1, #4
 80004b2:	4605      	mov	r5, r0
 80004b4:	4617      	mov	r7, r2
 80004b6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80004b8:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
 80004bc:	ae03      	add	r6, sp, #12
 80004be:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80004c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80004c2:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80004c4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80004c6:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80004c8:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80004cc:	ac02      	add	r4, sp, #8
 80004ce:	f8d5 800c 	ldr.w	r8, [r5, #12]
 80004d2:	f8d5 9018 	ldr.w	r9, [r5, #24]
 80004d6:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80004da:	2300      	movs	r3, #0
 80004dc:	6023      	str	r3, [r4, #0]
 80004de:	e021      	b.n	8000524 <unwind_phase2_forced+0x78>
 80004e0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80004e2:	616b      	str	r3, [r5, #20]
 80004e4:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80004e8:	4621      	mov	r1, r4
 80004ea:	a87a      	add	r0, sp, #488	; 0x1e8
 80004ec:	f000 fe78 	bl	80011e0 <memcpy>
 80004f0:	692b      	ldr	r3, [r5, #16]
 80004f2:	aa7a      	add	r2, sp, #488	; 0x1e8
 80004f4:	4629      	mov	r1, r5
 80004f6:	4630      	mov	r0, r6
 80004f8:	4798      	blx	r3
 80004fa:	9b88      	ldr	r3, [sp, #544]	; 0x220
 80004fc:	e9cd 4900 	strd	r4, r9, [sp]
 8000500:	4682      	mov	sl, r0
 8000502:	6463      	str	r3, [r4, #68]	; 0x44
 8000504:	4631      	mov	r1, r6
 8000506:	462b      	mov	r3, r5
 8000508:	462a      	mov	r2, r5
 800050a:	2001      	movs	r0, #1
 800050c:	47c0      	blx	r8
 800050e:	4607      	mov	r7, r0
 8000510:	b9f8      	cbnz	r0, 8000552 <unwind_phase2_forced+0xa6>
 8000512:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8000516:	a97a      	add	r1, sp, #488	; 0x1e8
 8000518:	4620      	mov	r0, r4
 800051a:	f000 fe61 	bl	80011e0 <memcpy>
 800051e:	f1ba 0f08 	cmp.w	sl, #8
 8000522:	d11c      	bne.n	800055e <unwind_phase2_forced+0xb2>
 8000524:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8000526:	4628      	mov	r0, r5
 8000528:	f7ff ff18 	bl	800035c <get_eit_entry>
 800052c:	2f00      	cmp	r7, #0
 800052e:	bf08      	it	eq
 8000530:	2609      	moveq	r6, #9
 8000532:	4607      	mov	r7, r0
 8000534:	bf18      	it	ne
 8000536:	260a      	movne	r6, #10
 8000538:	2800      	cmp	r0, #0
 800053a:	d0d1      	beq.n	80004e0 <unwind_phase2_forced+0x34>
 800053c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800053e:	f046 0110 	orr.w	r1, r6, #16
 8000542:	e9cd 4900 	strd	r4, r9, [sp]
 8000546:	462a      	mov	r2, r5
 8000548:	6463      	str	r3, [r4, #68]	; 0x44
 800054a:	2001      	movs	r0, #1
 800054c:	462b      	mov	r3, r5
 800054e:	47c0      	blx	r8
 8000550:	b100      	cbz	r0, 8000554 <unwind_phase2_forced+0xa8>
 8000552:	2709      	movs	r7, #9
 8000554:	4638      	mov	r0, r7
 8000556:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 800055a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800055e:	f1ba 0f07 	cmp.w	sl, #7
 8000562:	d1f6      	bne.n	8000552 <unwind_phase2_forced+0xa6>
 8000564:	4638      	mov	r0, r7
 8000566:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8000568:	f7ff ff7e 	bl	8000468 <_Unwind_DebugHook>
 800056c:	a803      	add	r0, sp, #12
 800056e:	f000 fb9f 	bl	8000cb0 <__restore_core_regs>
 8000572:	bf00      	nop

08000574 <_Unwind_GetCFA>:
 8000574:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8000576:	4770      	bx	lr

08000578 <__gnu_Unwind_RaiseException>:
 8000578:	b5f0      	push	{r4, r5, r6, r7, lr}
 800057a:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 800057c:	640b      	str	r3, [r1, #64]	; 0x40
 800057e:	1d0d      	adds	r5, r1, #4
 8000580:	460f      	mov	r7, r1
 8000582:	4606      	mov	r6, r0
 8000584:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000586:	b0f9      	sub	sp, #484	; 0x1e4
 8000588:	ac01      	add	r4, sp, #4
 800058a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800058c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800058e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000590:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000592:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000594:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8000598:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 800059c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80005a0:	9500      	str	r5, [sp, #0]
 80005a2:	e006      	b.n	80005b2 <__gnu_Unwind_RaiseException+0x3a>
 80005a4:	6933      	ldr	r3, [r6, #16]
 80005a6:	466a      	mov	r2, sp
 80005a8:	4631      	mov	r1, r6
 80005aa:	4798      	blx	r3
 80005ac:	2808      	cmp	r0, #8
 80005ae:	4604      	mov	r4, r0
 80005b0:	d108      	bne.n	80005c4 <__gnu_Unwind_RaiseException+0x4c>
 80005b2:	9910      	ldr	r1, [sp, #64]	; 0x40
 80005b4:	4630      	mov	r0, r6
 80005b6:	f7ff fed1 	bl	800035c <get_eit_entry>
 80005ba:	2800      	cmp	r0, #0
 80005bc:	d0f2      	beq.n	80005a4 <__gnu_Unwind_RaiseException+0x2c>
 80005be:	2009      	movs	r0, #9
 80005c0:	b079      	add	sp, #484	; 0x1e4
 80005c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005c4:	4668      	mov	r0, sp
 80005c6:	f7ff ff1b 	bl	8000400 <restore_non_core_regs>
 80005ca:	2c06      	cmp	r4, #6
 80005cc:	d1f7      	bne.n	80005be <__gnu_Unwind_RaiseException+0x46>
 80005ce:	4639      	mov	r1, r7
 80005d0:	4630      	mov	r0, r6
 80005d2:	f7ff ff4b 	bl	800046c <unwind_phase2>
 80005d6:	bf00      	nop

080005d8 <__gnu_Unwind_ForcedUnwind>:
 80005d8:	b430      	push	{r4, r5}
 80005da:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80005dc:	60c1      	str	r1, [r0, #12]
 80005de:	6182      	str	r2, [r0, #24]
 80005e0:	4619      	mov	r1, r3
 80005e2:	641d      	str	r5, [r3, #64]	; 0x40
 80005e4:	2200      	movs	r2, #0
 80005e6:	bc30      	pop	{r4, r5}
 80005e8:	e760      	b.n	80004ac <unwind_phase2_forced>
 80005ea:	bf00      	nop

080005ec <__gnu_Unwind_Resume>:
 80005ec:	b570      	push	{r4, r5, r6, lr}
 80005ee:	68c6      	ldr	r6, [r0, #12]
 80005f0:	6943      	ldr	r3, [r0, #20]
 80005f2:	640b      	str	r3, [r1, #64]	; 0x40
 80005f4:	b9be      	cbnz	r6, 8000626 <__gnu_Unwind_Resume+0x3a>
 80005f6:	6903      	ldr	r3, [r0, #16]
 80005f8:	460a      	mov	r2, r1
 80005fa:	4604      	mov	r4, r0
 80005fc:	460d      	mov	r5, r1
 80005fe:	4601      	mov	r1, r0
 8000600:	2002      	movs	r0, #2
 8000602:	4798      	blx	r3
 8000604:	2807      	cmp	r0, #7
 8000606:	d007      	beq.n	8000618 <__gnu_Unwind_Resume+0x2c>
 8000608:	2808      	cmp	r0, #8
 800060a:	d103      	bne.n	8000614 <__gnu_Unwind_Resume+0x28>
 800060c:	4629      	mov	r1, r5
 800060e:	4620      	mov	r0, r4
 8000610:	f7ff ff2c 	bl	800046c <unwind_phase2>
 8000614:	f007 f9a4 	bl	8007960 <abort>
 8000618:	4630      	mov	r0, r6
 800061a:	6c29      	ldr	r1, [r5, #64]	; 0x40
 800061c:	f7ff ff24 	bl	8000468 <_Unwind_DebugHook>
 8000620:	1d28      	adds	r0, r5, #4
 8000622:	f000 fb45 	bl	8000cb0 <__restore_core_regs>
 8000626:	2201      	movs	r2, #1
 8000628:	f7ff ff40 	bl	80004ac <unwind_phase2_forced>
 800062c:	f007 f998 	bl	8007960 <abort>

08000630 <__gnu_Unwind_Resume_or_Rethrow>:
 8000630:	68c2      	ldr	r2, [r0, #12]
 8000632:	b11a      	cbz	r2, 800063c <__gnu_Unwind_Resume_or_Rethrow+0xc>
 8000634:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 8000636:	640a      	str	r2, [r1, #64]	; 0x40
 8000638:	2200      	movs	r2, #0
 800063a:	e737      	b.n	80004ac <unwind_phase2_forced>
 800063c:	e79c      	b.n	8000578 <__gnu_Unwind_RaiseException>
 800063e:	bf00      	nop

08000640 <_Unwind_Complete>:
 8000640:	4770      	bx	lr
 8000642:	bf00      	nop

08000644 <_Unwind_DeleteException>:
 8000644:	6883      	ldr	r3, [r0, #8]
 8000646:	b113      	cbz	r3, 800064e <_Unwind_DeleteException+0xa>
 8000648:	4601      	mov	r1, r0
 800064a:	2001      	movs	r0, #1
 800064c:	4718      	bx	r3
 800064e:	4770      	bx	lr

08000650 <_Unwind_VRS_Get>:
 8000650:	2904      	cmp	r1, #4
 8000652:	d807      	bhi.n	8000664 <_Unwind_VRS_Get+0x14>
 8000654:	e8df f001 	tbb	[pc, r1]
 8000658:	08060803 	.word	0x08060803
 800065c:	08          	.byte	0x08
 800065d:	00          	.byte	0x00
 800065e:	b90b      	cbnz	r3, 8000664 <_Unwind_VRS_Get+0x14>
 8000660:	2a0f      	cmp	r2, #15
 8000662:	d903      	bls.n	800066c <_Unwind_VRS_Get+0x1c>
 8000664:	2002      	movs	r0, #2
 8000666:	4770      	bx	lr
 8000668:	2001      	movs	r0, #1
 800066a:	4770      	bx	lr
 800066c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8000670:	4618      	mov	r0, r3
 8000672:	6853      	ldr	r3, [r2, #4]
 8000674:	9a00      	ldr	r2, [sp, #0]
 8000676:	6013      	str	r3, [r2, #0]
 8000678:	4770      	bx	lr
 800067a:	bf00      	nop

0800067c <_Unwind_GetGR>:
 800067c:	b510      	push	{r4, lr}
 800067e:	b084      	sub	sp, #16
 8000680:	2300      	movs	r3, #0
 8000682:	ac03      	add	r4, sp, #12
 8000684:	460a      	mov	r2, r1
 8000686:	9400      	str	r4, [sp, #0]
 8000688:	4619      	mov	r1, r3
 800068a:	f7ff ffe1 	bl	8000650 <_Unwind_VRS_Get>
 800068e:	9803      	ldr	r0, [sp, #12]
 8000690:	b004      	add	sp, #16
 8000692:	bd10      	pop	{r4, pc}

08000694 <_Unwind_VRS_Set>:
 8000694:	2904      	cmp	r1, #4
 8000696:	d807      	bhi.n	80006a8 <_Unwind_VRS_Set+0x14>
 8000698:	e8df f001 	tbb	[pc, r1]
 800069c:	08060803 	.word	0x08060803
 80006a0:	08          	.byte	0x08
 80006a1:	00          	.byte	0x00
 80006a2:	b90b      	cbnz	r3, 80006a8 <_Unwind_VRS_Set+0x14>
 80006a4:	2a0f      	cmp	r2, #15
 80006a6:	d903      	bls.n	80006b0 <_Unwind_VRS_Set+0x1c>
 80006a8:	2002      	movs	r0, #2
 80006aa:	4770      	bx	lr
 80006ac:	2001      	movs	r0, #1
 80006ae:	4770      	bx	lr
 80006b0:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 80006b4:	9a00      	ldr	r2, [sp, #0]
 80006b6:	6812      	ldr	r2, [r2, #0]
 80006b8:	6042      	str	r2, [r0, #4]
 80006ba:	4618      	mov	r0, r3
 80006bc:	4770      	bx	lr
 80006be:	bf00      	nop

080006c0 <_Unwind_SetGR>:
 80006c0:	b510      	push	{r4, lr}
 80006c2:	b084      	sub	sp, #16
 80006c4:	ac04      	add	r4, sp, #16
 80006c6:	2300      	movs	r3, #0
 80006c8:	f844 2d04 	str.w	r2, [r4, #-4]!
 80006cc:	460a      	mov	r2, r1
 80006ce:	9400      	str	r4, [sp, #0]
 80006d0:	4619      	mov	r1, r3
 80006d2:	f7ff ffdf 	bl	8000694 <_Unwind_VRS_Set>
 80006d6:	b004      	add	sp, #16
 80006d8:	bd10      	pop	{r4, pc}
 80006da:	bf00      	nop

080006dc <__gnu_Unwind_Backtrace>:
 80006dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80006de:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 80006e0:	6413      	str	r3, [r2, #64]	; 0x40
 80006e2:	1d15      	adds	r5, r2, #4
 80006e4:	4607      	mov	r7, r0
 80006e6:	460e      	mov	r6, r1
 80006e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80006ea:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
 80006ee:	ac17      	add	r4, sp, #92	; 0x5c
 80006f0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80006f2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80006f4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80006f6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80006f8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80006fa:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80006fe:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000702:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8000706:	9516      	str	r5, [sp, #88]	; 0x58
 8000708:	e010      	b.n	800072c <__gnu_Unwind_Backtrace+0x50>
 800070a:	a816      	add	r0, sp, #88	; 0x58
 800070c:	f7ff ffd8 	bl	80006c0 <_Unwind_SetGR>
 8000710:	4631      	mov	r1, r6
 8000712:	a816      	add	r0, sp, #88	; 0x58
 8000714:	47b8      	blx	r7
 8000716:	aa16      	add	r2, sp, #88	; 0x58
 8000718:	4669      	mov	r1, sp
 800071a:	b978      	cbnz	r0, 800073c <__gnu_Unwind_Backtrace+0x60>
 800071c:	9b04      	ldr	r3, [sp, #16]
 800071e:	2008      	movs	r0, #8
 8000720:	4798      	blx	r3
 8000722:	2805      	cmp	r0, #5
 8000724:	4604      	mov	r4, r0
 8000726:	d00a      	beq.n	800073e <__gnu_Unwind_Backtrace+0x62>
 8000728:	2809      	cmp	r0, #9
 800072a:	d007      	beq.n	800073c <__gnu_Unwind_Backtrace+0x60>
 800072c:	9926      	ldr	r1, [sp, #152]	; 0x98
 800072e:	4668      	mov	r0, sp
 8000730:	f7ff fe14 	bl	800035c <get_eit_entry>
 8000734:	466a      	mov	r2, sp
 8000736:	210c      	movs	r1, #12
 8000738:	2800      	cmp	r0, #0
 800073a:	d0e6      	beq.n	800070a <__gnu_Unwind_Backtrace+0x2e>
 800073c:	2409      	movs	r4, #9
 800073e:	a816      	add	r0, sp, #88	; 0x58
 8000740:	f7ff fe5e 	bl	8000400 <restore_non_core_regs>
 8000744:	4620      	mov	r0, r4
 8000746:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
 800074a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800074c <__gnu_unwind_pr_common>:
 800074c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000750:	460d      	mov	r5, r1
 8000752:	6cc9      	ldr	r1, [r1, #76]	; 0x4c
 8000754:	b089      	sub	sp, #36	; 0x24
 8000756:	1d0c      	adds	r4, r1, #4
 8000758:	4616      	mov	r6, r2
 800075a:	f000 0b03 	and.w	fp, r0, #3
 800075e:	680a      	ldr	r2, [r1, #0]
 8000760:	9406      	str	r4, [sp, #24]
 8000762:	461f      	mov	r7, r3
 8000764:	2b00      	cmp	r3, #0
 8000766:	d068      	beq.n	800083a <__gnu_unwind_pr_common+0xee>
 8000768:	0c13      	lsrs	r3, r2, #16
 800076a:	b2d9      	uxtb	r1, r3
 800076c:	0412      	lsls	r2, r2, #16
 800076e:	f88d 301d 	strb.w	r3, [sp, #29]
 8000772:	2302      	movs	r3, #2
 8000774:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8000778:	9205      	str	r2, [sp, #20]
 800077a:	f88d 301c 	strb.w	r3, [sp, #28]
 800077e:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8000780:	f1bb 0f02 	cmp.w	fp, #2
 8000784:	bf08      	it	eq
 8000786:	6bac      	ldreq	r4, [r5, #56]	; 0x38
 8000788:	f013 0301 	ands.w	r3, r3, #1
 800078c:	d146      	bne.n	800081c <__gnu_unwind_pr_common+0xd0>
 800078e:	9301      	str	r3, [sp, #4]
 8000790:	f000 0308 	and.w	r3, r0, #8
 8000794:	9300      	str	r3, [sp, #0]
 8000796:	f8d4 9000 	ldr.w	r9, [r4]
 800079a:	f1b9 0f00 	cmp.w	r9, #0
 800079e:	f000 80f3 	beq.w	8000988 <__gnu_unwind_pr_common+0x23c>
 80007a2:	2f02      	cmp	r7, #2
 80007a4:	d045      	beq.n	8000832 <__gnu_unwind_pr_common+0xe6>
 80007a6:	f8b4 9000 	ldrh.w	r9, [r4]
 80007aa:	f8b4 8002 	ldrh.w	r8, [r4, #2]
 80007ae:	3404      	adds	r4, #4
 80007b0:	6cab      	ldr	r3, [r5, #72]	; 0x48
 80007b2:	f028 0a01 	bic.w	sl, r8, #1
 80007b6:	210f      	movs	r1, #15
 80007b8:	4630      	mov	r0, r6
 80007ba:	449a      	add	sl, r3
 80007bc:	f7ff ff5e 	bl	800067c <_Unwind_GetGR>
 80007c0:	4582      	cmp	sl, r0
 80007c2:	d834      	bhi.n	800082e <__gnu_unwind_pr_common+0xe2>
 80007c4:	f029 0301 	bic.w	r3, r9, #1
 80007c8:	4453      	add	r3, sl
 80007ca:	4283      	cmp	r3, r0
 80007cc:	bf94      	ite	ls
 80007ce:	2000      	movls	r0, #0
 80007d0:	2001      	movhi	r0, #1
 80007d2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80007d6:	f008 0802 	and.w	r8, r8, #2
 80007da:	f009 0901 	and.w	r9, r9, #1
 80007de:	ea48 0809 	orr.w	r8, r8, r9
 80007e2:	f1b8 0f01 	cmp.w	r8, #1
 80007e6:	d03a      	beq.n	800085e <__gnu_unwind_pr_common+0x112>
 80007e8:	d331      	bcc.n	800084e <__gnu_unwind_pr_common+0x102>
 80007ea:	f1b8 0f02 	cmp.w	r8, #2
 80007ee:	d11a      	bne.n	8000826 <__gnu_unwind_pr_common+0xda>
 80007f0:	6823      	ldr	r3, [r4, #0]
 80007f2:	f023 4a00 	bic.w	sl, r3, #2147483648	; 0x80000000
 80007f6:	f1bb 0f00 	cmp.w	fp, #0
 80007fa:	d166      	bne.n	80008ca <__gnu_unwind_pr_common+0x17e>
 80007fc:	b130      	cbz	r0, 800080c <__gnu_unwind_pr_common+0xc0>
 80007fe:	9a00      	ldr	r2, [sp, #0]
 8000800:	2a00      	cmp	r2, #0
 8000802:	d06c      	beq.n	80008de <__gnu_unwind_pr_common+0x192>
 8000804:	f1ba 0f00 	cmp.w	sl, #0
 8000808:	f000 8090 	beq.w	800092c <__gnu_unwind_pr_common+0x1e0>
 800080c:	2b00      	cmp	r3, #0
 800080e:	da00      	bge.n	8000812 <__gnu_unwind_pr_common+0xc6>
 8000810:	3404      	adds	r4, #4
 8000812:	f10a 0301 	add.w	r3, sl, #1
 8000816:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800081a:	e7bc      	b.n	8000796 <__gnu_unwind_pr_common+0x4a>
 800081c:	4630      	mov	r0, r6
 800081e:	a905      	add	r1, sp, #20
 8000820:	f000 fb4a 	bl	8000eb8 <__gnu_unwind_execute>
 8000824:	b178      	cbz	r0, 8000846 <__gnu_unwind_pr_common+0xfa>
 8000826:	2009      	movs	r0, #9
 8000828:	b009      	add	sp, #36	; 0x24
 800082a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800082e:	2000      	movs	r0, #0
 8000830:	e7cf      	b.n	80007d2 <__gnu_unwind_pr_common+0x86>
 8000832:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8000836:	3408      	adds	r4, #8
 8000838:	e7ba      	b.n	80007b0 <__gnu_unwind_pr_common+0x64>
 800083a:	0212      	lsls	r2, r2, #8
 800083c:	2303      	movs	r3, #3
 800083e:	9205      	str	r2, [sp, #20]
 8000840:	f8ad 301c 	strh.w	r3, [sp, #28]
 8000844:	e79b      	b.n	800077e <__gnu_unwind_pr_common+0x32>
 8000846:	2008      	movs	r0, #8
 8000848:	b009      	add	sp, #36	; 0x24
 800084a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800084e:	f1bb 0f00 	cmp.w	fp, #0
 8000852:	d002      	beq.n	800085a <__gnu_unwind_pr_common+0x10e>
 8000854:	2800      	cmp	r0, #0
 8000856:	f040 80b4 	bne.w	80009c2 <__gnu_unwind_pr_common+0x276>
 800085a:	3404      	adds	r4, #4
 800085c:	e79b      	b.n	8000796 <__gnu_unwind_pr_common+0x4a>
 800085e:	f1bb 0f00 	cmp.w	fp, #0
 8000862:	d118      	bne.n	8000896 <__gnu_unwind_pr_common+0x14a>
 8000864:	b1a8      	cbz	r0, 8000892 <__gnu_unwind_pr_common+0x146>
 8000866:	e9d4 2300 	ldrd	r2, r3, [r4]
 800086a:	1c99      	adds	r1, r3, #2
 800086c:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8000870:	d0d9      	beq.n	8000826 <__gnu_unwind_pr_common+0xda>
 8000872:	f105 0158 	add.w	r1, r5, #88	; 0x58
 8000876:	3301      	adds	r3, #1
 8000878:	9104      	str	r1, [sp, #16]
 800087a:	f000 80b5 	beq.w	80009e8 <__gnu_unwind_pr_common+0x29c>
 800087e:	1d20      	adds	r0, r4, #4
 8000880:	f7ff fdea 	bl	8000458 <_Unwind_decode_typeinfo_ptr.isra.0>
 8000884:	ab04      	add	r3, sp, #16
 8000886:	4601      	mov	r1, r0
 8000888:	4628      	mov	r0, r5
 800088a:	f3af 8000 	nop.w
 800088e:	2800      	cmp	r0, #0
 8000890:	d167      	bne.n	8000962 <__gnu_unwind_pr_common+0x216>
 8000892:	3408      	adds	r4, #8
 8000894:	e77f      	b.n	8000796 <__gnu_unwind_pr_common+0x4a>
 8000896:	210d      	movs	r1, #13
 8000898:	4630      	mov	r0, r6
 800089a:	f8d5 8020 	ldr.w	r8, [r5, #32]
 800089e:	f7ff feed 	bl	800067c <_Unwind_GetGR>
 80008a2:	4580      	cmp	r8, r0
 80008a4:	d1f5      	bne.n	8000892 <__gnu_unwind_pr_common+0x146>
 80008a6:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80008a8:	429c      	cmp	r4, r3
 80008aa:	d1f2      	bne.n	8000892 <__gnu_unwind_pr_common+0x146>
 80008ac:	4620      	mov	r0, r4
 80008ae:	f7ff fd07 	bl	80002c0 <selfrel_offset31>
 80008b2:	210f      	movs	r1, #15
 80008b4:	4602      	mov	r2, r0
 80008b6:	4630      	mov	r0, r6
 80008b8:	f7ff ff02 	bl	80006c0 <_Unwind_SetGR>
 80008bc:	4630      	mov	r0, r6
 80008be:	462a      	mov	r2, r5
 80008c0:	2100      	movs	r1, #0
 80008c2:	f7ff fefd 	bl	80006c0 <_Unwind_SetGR>
 80008c6:	2007      	movs	r0, #7
 80008c8:	e7ae      	b.n	8000828 <__gnu_unwind_pr_common+0xdc>
 80008ca:	210d      	movs	r1, #13
 80008cc:	4630      	mov	r0, r6
 80008ce:	f8d5 8020 	ldr.w	r8, [r5, #32]
 80008d2:	f7ff fed3 	bl	800067c <_Unwind_GetGR>
 80008d6:	4580      	cmp	r8, r0
 80008d8:	d032      	beq.n	8000940 <__gnu_unwind_pr_common+0x1f4>
 80008da:	6823      	ldr	r3, [r4, #0]
 80008dc:	e796      	b.n	800080c <__gnu_unwind_pr_common+0xc0>
 80008de:	f1ba 0f00 	cmp.w	sl, #0
 80008e2:	d023      	beq.n	800092c <__gnu_unwind_pr_common+0x1e0>
 80008e4:	f105 0358 	add.w	r3, r5, #88	; 0x58
 80008e8:	f104 0804 	add.w	r8, r4, #4
 80008ec:	f8cd b008 	str.w	fp, [sp, #8]
 80008f0:	f8dd 9000 	ldr.w	r9, [sp]
 80008f4:	9703      	str	r7, [sp, #12]
 80008f6:	46a3      	mov	fp, r4
 80008f8:	461c      	mov	r4, r3
 80008fa:	e002      	b.n	8000902 <__gnu_unwind_pr_common+0x1b6>
 80008fc:	4557      	cmp	r7, sl
 80008fe:	46b9      	mov	r9, r7
 8000900:	d040      	beq.n	8000984 <__gnu_unwind_pr_common+0x238>
 8000902:	4640      	mov	r0, r8
 8000904:	9404      	str	r4, [sp, #16]
 8000906:	f7ff fda7 	bl	8000458 <_Unwind_decode_typeinfo_ptr.isra.0>
 800090a:	ab04      	add	r3, sp, #16
 800090c:	4601      	mov	r1, r0
 800090e:	2200      	movs	r2, #0
 8000910:	4628      	mov	r0, r5
 8000912:	f3af 8000 	nop.w
 8000916:	f109 0701 	add.w	r7, r9, #1
 800091a:	f108 0804 	add.w	r8, r8, #4
 800091e:	2800      	cmp	r0, #0
 8000920:	d0ec      	beq.n	80008fc <__gnu_unwind_pr_common+0x1b0>
 8000922:	45d1      	cmp	r9, sl
 8000924:	465c      	mov	r4, fp
 8000926:	e9dd b702 	ldrd	fp, r7, [sp, #8]
 800092a:	d1d6      	bne.n	80008da <__gnu_unwind_pr_common+0x18e>
 800092c:	4630      	mov	r0, r6
 800092e:	210d      	movs	r1, #13
 8000930:	f7ff fea4 	bl	800067c <_Unwind_GetGR>
 8000934:	9b04      	ldr	r3, [sp, #16]
 8000936:	6228      	str	r0, [r5, #32]
 8000938:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
 800093c:	2006      	movs	r0, #6
 800093e:	e773      	b.n	8000828 <__gnu_unwind_pr_common+0xdc>
 8000940:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8000942:	429c      	cmp	r4, r3
 8000944:	d1c9      	bne.n	80008da <__gnu_unwind_pr_common+0x18e>
 8000946:	2204      	movs	r2, #4
 8000948:	f04f 0800 	mov.w	r8, #0
 800094c:	18a3      	adds	r3, r4, r2
 800094e:	e9c5 a80a 	strd	sl, r8, [r5, #40]	; 0x28
 8000952:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
 8000956:	6823      	ldr	r3, [r4, #0]
 8000958:	4543      	cmp	r3, r8
 800095a:	db4d      	blt.n	80009f8 <__gnu_unwind_pr_common+0x2ac>
 800095c:	2301      	movs	r3, #1
 800095e:	9301      	str	r3, [sp, #4]
 8000960:	e757      	b.n	8000812 <__gnu_unwind_pr_common+0xc6>
 8000962:	4680      	mov	r8, r0
 8000964:	210d      	movs	r1, #13
 8000966:	4630      	mov	r0, r6
 8000968:	f7ff fe88 	bl	800067c <_Unwind_GetGR>
 800096c:	f1b8 0f02 	cmp.w	r8, #2
 8000970:	6228      	str	r0, [r5, #32]
 8000972:	d13e      	bne.n	80009f2 <__gnu_unwind_pr_common+0x2a6>
 8000974:	462b      	mov	r3, r5
 8000976:	9a04      	ldr	r2, [sp, #16]
 8000978:	f843 2f2c 	str.w	r2, [r3, #44]!
 800097c:	626b      	str	r3, [r5, #36]	; 0x24
 800097e:	62ac      	str	r4, [r5, #40]	; 0x28
 8000980:	2006      	movs	r0, #6
 8000982:	e751      	b.n	8000828 <__gnu_unwind_pr_common+0xdc>
 8000984:	465c      	mov	r4, fp
 8000986:	e7d1      	b.n	800092c <__gnu_unwind_pr_common+0x1e0>
 8000988:	a905      	add	r1, sp, #20
 800098a:	4630      	mov	r0, r6
 800098c:	f000 fa94 	bl	8000eb8 <__gnu_unwind_execute>
 8000990:	2800      	cmp	r0, #0
 8000992:	f47f af48 	bne.w	8000826 <__gnu_unwind_pr_common+0xda>
 8000996:	9b01      	ldr	r3, [sp, #4]
 8000998:	2b00      	cmp	r3, #0
 800099a:	f43f af54 	beq.w	8000846 <__gnu_unwind_pr_common+0xfa>
 800099e:	210f      	movs	r1, #15
 80009a0:	4630      	mov	r0, r6
 80009a2:	f7ff fe6b 	bl	800067c <_Unwind_GetGR>
 80009a6:	210e      	movs	r1, #14
 80009a8:	4602      	mov	r2, r0
 80009aa:	4630      	mov	r0, r6
 80009ac:	f7ff fe88 	bl	80006c0 <_Unwind_SetGR>
 80009b0:	4630      	mov	r0, r6
 80009b2:	4a1a      	ldr	r2, [pc, #104]	; (8000a1c <__gnu_unwind_pr_common+0x2d0>)
 80009b4:	210f      	movs	r1, #15
 80009b6:	f7ff fe83 	bl	80006c0 <_Unwind_SetGR>
 80009ba:	2007      	movs	r0, #7
 80009bc:	b009      	add	sp, #36	; 0x24
 80009be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009c2:	4620      	mov	r0, r4
 80009c4:	f7ff fc7c 	bl	80002c0 <selfrel_offset31>
 80009c8:	3404      	adds	r4, #4
 80009ca:	4607      	mov	r7, r0
 80009cc:	63ac      	str	r4, [r5, #56]	; 0x38
 80009ce:	4628      	mov	r0, r5
 80009d0:	f3af 8000 	nop.w
 80009d4:	2800      	cmp	r0, #0
 80009d6:	f43f af26 	beq.w	8000826 <__gnu_unwind_pr_common+0xda>
 80009da:	4630      	mov	r0, r6
 80009dc:	463a      	mov	r2, r7
 80009de:	210f      	movs	r1, #15
 80009e0:	f7ff fe6e 	bl	80006c0 <_Unwind_SetGR>
 80009e4:	2007      	movs	r0, #7
 80009e6:	e71f      	b.n	8000828 <__gnu_unwind_pr_common+0xdc>
 80009e8:	4630      	mov	r0, r6
 80009ea:	210d      	movs	r1, #13
 80009ec:	f7ff fe46 	bl	800067c <_Unwind_GetGR>
 80009f0:	6228      	str	r0, [r5, #32]
 80009f2:	9b04      	ldr	r3, [sp, #16]
 80009f4:	626b      	str	r3, [r5, #36]	; 0x24
 80009f6:	e7c2      	b.n	800097e <__gnu_unwind_pr_common+0x232>
 80009f8:	f10a 0001 	add.w	r0, sl, #1
 80009fc:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8000a00:	f7ff fc5e 	bl	80002c0 <selfrel_offset31>
 8000a04:	210f      	movs	r1, #15
 8000a06:	4602      	mov	r2, r0
 8000a08:	4630      	mov	r0, r6
 8000a0a:	f7ff fe59 	bl	80006c0 <_Unwind_SetGR>
 8000a0e:	4630      	mov	r0, r6
 8000a10:	462a      	mov	r2, r5
 8000a12:	4641      	mov	r1, r8
 8000a14:	f7ff fe54 	bl	80006c0 <_Unwind_SetGR>
 8000a18:	2007      	movs	r0, #7
 8000a1a:	e705      	b.n	8000828 <__gnu_unwind_pr_common+0xdc>
 8000a1c:	00000000 	.word	0x00000000

08000a20 <__aeabi_unwind_cpp_pr0>:
 8000a20:	2300      	movs	r3, #0
 8000a22:	e693      	b.n	800074c <__gnu_unwind_pr_common>

08000a24 <__aeabi_unwind_cpp_pr1>:
 8000a24:	2301      	movs	r3, #1
 8000a26:	e691      	b.n	800074c <__gnu_unwind_pr_common>

08000a28 <__aeabi_unwind_cpp_pr2>:
 8000a28:	2302      	movs	r3, #2
 8000a2a:	e68f      	b.n	800074c <__gnu_unwind_pr_common>

08000a2c <_Unwind_VRS_Pop>:
 8000a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a30:	4605      	mov	r5, r0
 8000a32:	b0c4      	sub	sp, #272	; 0x110
 8000a34:	2904      	cmp	r1, #4
 8000a36:	d806      	bhi.n	8000a46 <_Unwind_VRS_Pop+0x1a>
 8000a38:	e8df f001 	tbb	[pc, r1]
 8000a3c:	03052b4d 	.word	0x03052b4d
 8000a40:	09          	.byte	0x09
 8000a41:	00          	.byte	0x00
 8000a42:	2b03      	cmp	r3, #3
 8000a44:	d05f      	beq.n	8000b06 <_Unwind_VRS_Pop+0xda>
 8000a46:	2002      	movs	r0, #2
 8000a48:	b044      	add	sp, #272	; 0x110
 8000a4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a4e:	2b00      	cmp	r3, #0
 8000a50:	d1f9      	bne.n	8000a46 <_Unwind_VRS_Pop+0x1a>
 8000a52:	2a10      	cmp	r2, #16
 8000a54:	d8f7      	bhi.n	8000a46 <_Unwind_VRS_Pop+0x1a>
 8000a56:	682b      	ldr	r3, [r5, #0]
 8000a58:	06dc      	lsls	r4, r3, #27
 8000a5a:	f100 80f4 	bmi.w	8000c46 <_Unwind_VRS_Pop+0x21a>
 8000a5e:	ac22      	add	r4, sp, #136	; 0x88
 8000a60:	4620      	mov	r0, r4
 8000a62:	9201      	str	r2, [sp, #4]
 8000a64:	f000 f996 	bl	8000d94 <__gnu_Unwind_Save_WMMXC>
 8000a68:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 8000a6a:	9a01      	ldr	r2, [sp, #4]
 8000a6c:	2300      	movs	r3, #0
 8000a6e:	2601      	movs	r6, #1
 8000a70:	fa06 f103 	lsl.w	r1, r6, r3
 8000a74:	4211      	tst	r1, r2
 8000a76:	d003      	beq.n	8000a80 <_Unwind_VRS_Pop+0x54>
 8000a78:	6801      	ldr	r1, [r0, #0]
 8000a7a:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8000a7e:	3004      	adds	r0, #4
 8000a80:	3301      	adds	r3, #1
 8000a82:	2b04      	cmp	r3, #4
 8000a84:	d1f4      	bne.n	8000a70 <_Unwind_VRS_Pop+0x44>
 8000a86:	63a8      	str	r0, [r5, #56]	; 0x38
 8000a88:	4620      	mov	r0, r4
 8000a8a:	f000 f979 	bl	8000d80 <__gnu_Unwind_Restore_WMMXC>
 8000a8e:	2000      	movs	r0, #0
 8000a90:	e7da      	b.n	8000a48 <_Unwind_VRS_Pop+0x1c>
 8000a92:	2b01      	cmp	r3, #1
 8000a94:	ea4f 4612 	mov.w	r6, r2, lsr #16
 8000a98:	b297      	uxth	r7, r2
 8000a9a:	d052      	beq.n	8000b42 <_Unwind_VRS_Pop+0x116>
 8000a9c:	2b05      	cmp	r3, #5
 8000a9e:	d1d2      	bne.n	8000a46 <_Unwind_VRS_Pop+0x1a>
 8000aa0:	eb06 0807 	add.w	r8, r6, r7
 8000aa4:	f1b8 0f20 	cmp.w	r8, #32
 8000aa8:	d8cd      	bhi.n	8000a46 <_Unwind_VRS_Pop+0x1a>
 8000aaa:	2e0f      	cmp	r6, #15
 8000aac:	f240 8099 	bls.w	8000be2 <_Unwind_VRS_Pop+0x1b6>
 8000ab0:	46b8      	mov	r8, r7
 8000ab2:	2f00      	cmp	r7, #0
 8000ab4:	f040 80db 	bne.w	8000c6e <_Unwind_VRS_Pop+0x242>
 8000ab8:	6baa      	ldr	r2, [r5, #56]	; 0x38
 8000aba:	63aa      	str	r2, [r5, #56]	; 0x38
 8000abc:	2e0f      	cmp	r6, #15
 8000abe:	f240 80be 	bls.w	8000c3e <_Unwind_VRS_Pop+0x212>
 8000ac2:	f1b8 0f00 	cmp.w	r8, #0
 8000ac6:	d002      	beq.n	8000ace <_Unwind_VRS_Pop+0xa2>
 8000ac8:	a802      	add	r0, sp, #8
 8000aca:	f000 f90d 	bl	8000ce8 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8000ace:	2000      	movs	r0, #0
 8000ad0:	b044      	add	sp, #272	; 0x110
 8000ad2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	d1b5      	bne.n	8000a46 <_Unwind_VRS_Pop+0x1a>
 8000ada:	6bac      	ldr	r4, [r5, #56]	; 0x38
 8000adc:	b297      	uxth	r7, r2
 8000ade:	1d28      	adds	r0, r5, #4
 8000ae0:	2601      	movs	r6, #1
 8000ae2:	fa06 f103 	lsl.w	r1, r6, r3
 8000ae6:	4239      	tst	r1, r7
 8000ae8:	f103 0301 	add.w	r3, r3, #1
 8000aec:	d002      	beq.n	8000af4 <_Unwind_VRS_Pop+0xc8>
 8000aee:	6821      	ldr	r1, [r4, #0]
 8000af0:	6001      	str	r1, [r0, #0]
 8000af2:	3404      	adds	r4, #4
 8000af4:	2b10      	cmp	r3, #16
 8000af6:	f100 0004 	add.w	r0, r0, #4
 8000afa:	d1f2      	bne.n	8000ae2 <_Unwind_VRS_Pop+0xb6>
 8000afc:	f412 5000 	ands.w	r0, r2, #8192	; 0x2000
 8000b00:	d1e5      	bne.n	8000ace <_Unwind_VRS_Pop+0xa2>
 8000b02:	63ac      	str	r4, [r5, #56]	; 0x38
 8000b04:	e7a0      	b.n	8000a48 <_Unwind_VRS_Pop+0x1c>
 8000b06:	0c16      	lsrs	r6, r2, #16
 8000b08:	b297      	uxth	r7, r2
 8000b0a:	19f3      	adds	r3, r6, r7
 8000b0c:	2b10      	cmp	r3, #16
 8000b0e:	d89a      	bhi.n	8000a46 <_Unwind_VRS_Pop+0x1a>
 8000b10:	682b      	ldr	r3, [r5, #0]
 8000b12:	071a      	lsls	r2, r3, #28
 8000b14:	d45d      	bmi.n	8000bd2 <_Unwind_VRS_Pop+0x1a6>
 8000b16:	ac22      	add	r4, sp, #136	; 0x88
 8000b18:	4620      	mov	r0, r4
 8000b1a:	f000 f90f 	bl	8000d3c <__gnu_Unwind_Save_WMMXD>
 8000b1e:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 8000b22:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8000b24:	b13f      	cbz	r7, 8000b36 <_Unwind_VRS_Pop+0x10a>
 8000b26:	eb03 02c7 	add.w	r2, r3, r7, lsl #3
 8000b2a:	6818      	ldr	r0, [r3, #0]
 8000b2c:	f841 0b04 	str.w	r0, [r1], #4
 8000b30:	3304      	adds	r3, #4
 8000b32:	4293      	cmp	r3, r2
 8000b34:	d1f9      	bne.n	8000b2a <_Unwind_VRS_Pop+0xfe>
 8000b36:	4620      	mov	r0, r4
 8000b38:	63ab      	str	r3, [r5, #56]	; 0x38
 8000b3a:	f000 f8dd 	bl	8000cf8 <__gnu_Unwind_Restore_WMMXD>
 8000b3e:	2000      	movs	r0, #0
 8000b40:	e782      	b.n	8000a48 <_Unwind_VRS_Pop+0x1c>
 8000b42:	19f2      	adds	r2, r6, r7
 8000b44:	2a10      	cmp	r2, #16
 8000b46:	f63f af7e 	bhi.w	8000a46 <_Unwind_VRS_Pop+0x1a>
 8000b4a:	2e0f      	cmp	r6, #15
 8000b4c:	f63f af7b 	bhi.w	8000a46 <_Unwind_VRS_Pop+0x1a>
 8000b50:	682a      	ldr	r2, [r5, #0]
 8000b52:	07d1      	lsls	r1, r2, #31
 8000b54:	d508      	bpl.n	8000b68 <_Unwind_VRS_Pop+0x13c>
 8000b56:	4628      	mov	r0, r5
 8000b58:	f022 0203 	bic.w	r2, r2, #3
 8000b5c:	f840 2b48 	str.w	r2, [r0], #72
 8000b60:	9301      	str	r3, [sp, #4]
 8000b62:	f000 f8b5 	bl	8000cd0 <__gnu_Unwind_Save_VFP>
 8000b66:	9b01      	ldr	r3, [sp, #4]
 8000b68:	9301      	str	r3, [sp, #4]
 8000b6a:	ac22      	add	r4, sp, #136	; 0x88
 8000b6c:	4620      	mov	r0, r4
 8000b6e:	f000 f8af 	bl	8000cd0 <__gnu_Unwind_Save_VFP>
 8000b72:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 8000b74:	9b01      	ldr	r3, [sp, #4]
 8000b76:	2f00      	cmp	r7, #0
 8000b78:	f000 8095 	beq.w	8000ca6 <_Unwind_VRS_Pop+0x27a>
 8000b7c:	007f      	lsls	r7, r7, #1
 8000b7e:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8000b82:	f04f 0800 	mov.w	r8, #0
 8000b86:	3c04      	subs	r4, #4
 8000b88:	eb01 0287 	add.w	r2, r1, r7, lsl #2
 8000b8c:	f851 0b04 	ldr.w	r0, [r1], #4
 8000b90:	f844 0f04 	str.w	r0, [r4, #4]!
 8000b94:	4291      	cmp	r1, r2
 8000b96:	d1f9      	bne.n	8000b8c <_Unwind_VRS_Pop+0x160>
 8000b98:	f1b8 0f00 	cmp.w	r8, #0
 8000b9c:	d00f      	beq.n	8000bbe <_Unwind_VRS_Pop+0x192>
 8000b9e:	ac02      	add	r4, sp, #8
 8000ba0:	2e10      	cmp	r6, #16
 8000ba2:	4631      	mov	r1, r6
 8000ba4:	bf38      	it	cc
 8000ba6:	2110      	movcc	r1, #16
 8000ba8:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8000bac:	3984      	subs	r1, #132	; 0x84
 8000bae:	eb02 04c8 	add.w	r4, r2, r8, lsl #3
 8000bb2:	f852 0b04 	ldr.w	r0, [r2], #4
 8000bb6:	f841 0f04 	str.w	r0, [r1, #4]!
 8000bba:	4294      	cmp	r4, r2
 8000bbc:	d1f9      	bne.n	8000bb2 <_Unwind_VRS_Pop+0x186>
 8000bbe:	2b01      	cmp	r3, #1
 8000bc0:	f47f af7b 	bne.w	8000aba <_Unwind_VRS_Pop+0x8e>
 8000bc4:	ac22      	add	r4, sp, #136	; 0x88
 8000bc6:	3204      	adds	r2, #4
 8000bc8:	63aa      	str	r2, [r5, #56]	; 0x38
 8000bca:	4620      	mov	r0, r4
 8000bcc:	f000 f87c 	bl	8000cc8 <__gnu_Unwind_Restore_VFP>
 8000bd0:	e77d      	b.n	8000ace <_Unwind_VRS_Pop+0xa2>
 8000bd2:	f023 0308 	bic.w	r3, r3, #8
 8000bd6:	602b      	str	r3, [r5, #0]
 8000bd8:	f505 70a8 	add.w	r0, r5, #336	; 0x150
 8000bdc:	f000 f8ae 	bl	8000d3c <__gnu_Unwind_Save_WMMXD>
 8000be0:	e799      	b.n	8000b16 <_Unwind_VRS_Pop+0xea>
 8000be2:	f1b8 0f10 	cmp.w	r8, #16
 8000be6:	682a      	ldr	r2, [r5, #0]
 8000be8:	d943      	bls.n	8000c72 <_Unwind_VRS_Pop+0x246>
 8000bea:	07d0      	lsls	r0, r2, #31
 8000bec:	f1a8 0810 	sub.w	r8, r8, #16
 8000bf0:	d50b      	bpl.n	8000c0a <_Unwind_VRS_Pop+0x1de>
 8000bf2:	4628      	mov	r0, r5
 8000bf4:	f022 0201 	bic.w	r2, r2, #1
 8000bf8:	f042 0202 	orr.w	r2, r2, #2
 8000bfc:	f840 2b48 	str.w	r2, [r0], #72
 8000c00:	9301      	str	r3, [sp, #4]
 8000c02:	f000 f86d 	bl	8000ce0 <__gnu_Unwind_Save_VFP_D>
 8000c06:	682a      	ldr	r2, [r5, #0]
 8000c08:	9b01      	ldr	r3, [sp, #4]
 8000c0a:	0751      	lsls	r1, r2, #29
 8000c0c:	d425      	bmi.n	8000c5a <_Unwind_VRS_Pop+0x22e>
 8000c0e:	2e0f      	cmp	r6, #15
 8000c10:	d804      	bhi.n	8000c1c <_Unwind_VRS_Pop+0x1f0>
 8000c12:	a822      	add	r0, sp, #136	; 0x88
 8000c14:	9301      	str	r3, [sp, #4]
 8000c16:	f000 f863 	bl	8000ce0 <__gnu_Unwind_Save_VFP_D>
 8000c1a:	9b01      	ldr	r3, [sp, #4]
 8000c1c:	9301      	str	r3, [sp, #4]
 8000c1e:	ac02      	add	r4, sp, #8
 8000c20:	4620      	mov	r0, r4
 8000c22:	f000 f865 	bl	8000cf0 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8000c26:	f1c6 0110 	rsb	r1, r6, #16
 8000c2a:	2900      	cmp	r1, #0
 8000c2c:	6baa      	ldr	r2, [r5, #56]	; 0x38
 8000c2e:	9b01      	ldr	r3, [sp, #4]
 8000c30:	ddb6      	ble.n	8000ba0 <_Unwind_VRS_Pop+0x174>
 8000c32:	ac22      	add	r4, sp, #136	; 0x88
 8000c34:	004f      	lsls	r7, r1, #1
 8000c36:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8000c3a:	4611      	mov	r1, r2
 8000c3c:	e7a3      	b.n	8000b86 <_Unwind_VRS_Pop+0x15a>
 8000c3e:	a822      	add	r0, sp, #136	; 0x88
 8000c40:	f000 f84a 	bl	8000cd8 <__gnu_Unwind_Restore_VFP_D>
 8000c44:	e73d      	b.n	8000ac2 <_Unwind_VRS_Pop+0x96>
 8000c46:	f023 0310 	bic.w	r3, r3, #16
 8000c4a:	602b      	str	r3, [r5, #0]
 8000c4c:	f505 70e8 	add.w	r0, r5, #464	; 0x1d0
 8000c50:	9201      	str	r2, [sp, #4]
 8000c52:	f000 f89f 	bl	8000d94 <__gnu_Unwind_Save_WMMXC>
 8000c56:	9a01      	ldr	r2, [sp, #4]
 8000c58:	e701      	b.n	8000a5e <_Unwind_VRS_Pop+0x32>
 8000c5a:	4628      	mov	r0, r5
 8000c5c:	f022 0204 	bic.w	r2, r2, #4
 8000c60:	f840 2bd0 	str.w	r2, [r0], #208
 8000c64:	9301      	str	r3, [sp, #4]
 8000c66:	f000 f843 	bl	8000cf0 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8000c6a:	9b01      	ldr	r3, [sp, #4]
 8000c6c:	e7cf      	b.n	8000c0e <_Unwind_VRS_Pop+0x1e2>
 8000c6e:	682a      	ldr	r2, [r5, #0]
 8000c70:	e7cb      	b.n	8000c0a <_Unwind_VRS_Pop+0x1de>
 8000c72:	07d0      	lsls	r0, r2, #31
 8000c74:	d50a      	bpl.n	8000c8c <_Unwind_VRS_Pop+0x260>
 8000c76:	4628      	mov	r0, r5
 8000c78:	f022 0201 	bic.w	r2, r2, #1
 8000c7c:	f042 0202 	orr.w	r2, r2, #2
 8000c80:	f840 2b48 	str.w	r2, [r0], #72
 8000c84:	9301      	str	r3, [sp, #4]
 8000c86:	f000 f82b 	bl	8000ce0 <__gnu_Unwind_Save_VFP_D>
 8000c8a:	9b01      	ldr	r3, [sp, #4]
 8000c8c:	9301      	str	r3, [sp, #4]
 8000c8e:	ac22      	add	r4, sp, #136	; 0x88
 8000c90:	4620      	mov	r0, r4
 8000c92:	f000 f825 	bl	8000ce0 <__gnu_Unwind_Save_VFP_D>
 8000c96:	46b8      	mov	r8, r7
 8000c98:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 8000c9a:	9b01      	ldr	r3, [sp, #4]
 8000c9c:	2f00      	cmp	r7, #0
 8000c9e:	f47f af6d 	bne.w	8000b7c <_Unwind_VRS_Pop+0x150>
 8000ca2:	460a      	mov	r2, r1
 8000ca4:	e709      	b.n	8000aba <_Unwind_VRS_Pop+0x8e>
 8000ca6:	460a      	mov	r2, r1
 8000ca8:	e78d      	b.n	8000bc6 <_Unwind_VRS_Pop+0x19a>
 8000caa:	bf00      	nop
 8000cac:	0000      	movs	r0, r0
	...

08000cb0 <__restore_core_regs>:
 8000cb0:	f100 0134 	add.w	r1, r0, #52	; 0x34
 8000cb4:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 8000cb8:	469c      	mov	ip, r3
 8000cba:	46a6      	mov	lr, r4
 8000cbc:	f84c 5d04 	str.w	r5, [ip, #-4]!
 8000cc0:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8000cc4:	46e5      	mov	sp, ip
 8000cc6:	bd00      	pop	{pc}

08000cc8 <__gnu_Unwind_Restore_VFP>:
 8000cc8:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
 8000ccc:	4770      	bx	lr
 8000cce:	bf00      	nop

08000cd0 <__gnu_Unwind_Save_VFP>:
 8000cd0:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
 8000cd4:	4770      	bx	lr
 8000cd6:	bf00      	nop

08000cd8 <__gnu_Unwind_Restore_VFP_D>:
 8000cd8:	ec90 0b20 	vldmia	r0, {d0-d15}
 8000cdc:	4770      	bx	lr
 8000cde:	bf00      	nop

08000ce0 <__gnu_Unwind_Save_VFP_D>:
 8000ce0:	ec80 0b20 	vstmia	r0, {d0-d15}
 8000ce4:	4770      	bx	lr
 8000ce6:	bf00      	nop

08000ce8 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 8000ce8:	ecd0 0b20 	vldmia	r0, {d16-d31}
 8000cec:	4770      	bx	lr
 8000cee:	bf00      	nop

08000cf0 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 8000cf0:	ecc0 0b20 	vstmia	r0, {d16-d31}
 8000cf4:	4770      	bx	lr
 8000cf6:	bf00      	nop

08000cf8 <__gnu_Unwind_Restore_WMMXD>:
 8000cf8:	ecf0 0102 	ldfe	f0, [r0], #8
 8000cfc:	ecf0 1102 	ldfe	f1, [r0], #8
 8000d00:	ecf0 2102 	ldfe	f2, [r0], #8
 8000d04:	ecf0 3102 	ldfe	f3, [r0], #8
 8000d08:	ecf0 4102 	ldfe	f4, [r0], #8
 8000d0c:	ecf0 5102 	ldfe	f5, [r0], #8
 8000d10:	ecf0 6102 	ldfe	f6, [r0], #8
 8000d14:	ecf0 7102 	ldfe	f7, [r0], #8
 8000d18:	ecf0 8102 	ldfp	f0, [r0], #8
 8000d1c:	ecf0 9102 	ldfp	f1, [r0], #8
 8000d20:	ecf0 a102 	ldfp	f2, [r0], #8
 8000d24:	ecf0 b102 	ldfp	f3, [r0], #8
 8000d28:	ecf0 c102 	ldfp	f4, [r0], #8
 8000d2c:	ecf0 d102 	ldfp	f5, [r0], #8
 8000d30:	ecf0 e102 	ldfp	f6, [r0], #8
 8000d34:	ecf0 f102 	ldfp	f7, [r0], #8
 8000d38:	4770      	bx	lr
 8000d3a:	bf00      	nop

08000d3c <__gnu_Unwind_Save_WMMXD>:
 8000d3c:	ece0 0102 	stfe	f0, [r0], #8
 8000d40:	ece0 1102 	stfe	f1, [r0], #8
 8000d44:	ece0 2102 	stfe	f2, [r0], #8
 8000d48:	ece0 3102 	stfe	f3, [r0], #8
 8000d4c:	ece0 4102 	stfe	f4, [r0], #8
 8000d50:	ece0 5102 	stfe	f5, [r0], #8
 8000d54:	ece0 6102 	stfe	f6, [r0], #8
 8000d58:	ece0 7102 	stfe	f7, [r0], #8
 8000d5c:	ece0 8102 	stfp	f0, [r0], #8
 8000d60:	ece0 9102 	stfp	f1, [r0], #8
 8000d64:	ece0 a102 	stfp	f2, [r0], #8
 8000d68:	ece0 b102 	stfp	f3, [r0], #8
 8000d6c:	ece0 c102 	stfp	f4, [r0], #8
 8000d70:	ece0 d102 	stfp	f5, [r0], #8
 8000d74:	ece0 e102 	stfp	f6, [r0], #8
 8000d78:	ece0 f102 	stfp	f7, [r0], #8
 8000d7c:	4770      	bx	lr
 8000d7e:	bf00      	nop

08000d80 <__gnu_Unwind_Restore_WMMXC>:
 8000d80:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 8000d84:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 8000d88:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 8000d8c:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 8000d90:	4770      	bx	lr
 8000d92:	bf00      	nop

08000d94 <__gnu_Unwind_Save_WMMXC>:
 8000d94:	fca0 8101 	stc2	1, cr8, [r0], #4
 8000d98:	fca0 9101 	stc2	1, cr9, [r0], #4
 8000d9c:	fca0 a101 	stc2	1, cr10, [r0], #4
 8000da0:	fca0 b101 	stc2	1, cr11, [r0], #4
 8000da4:	4770      	bx	lr
 8000da6:	bf00      	nop

08000da8 <_Unwind_RaiseException>:
 8000da8:	46ec      	mov	ip, sp
 8000daa:	b500      	push	{lr}
 8000dac:	e92d 5000 	stmdb	sp!, {ip, lr}
 8000db0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8000db4:	f04f 0300 	mov.w	r3, #0
 8000db8:	e92d 000c 	stmdb	sp!, {r2, r3}
 8000dbc:	a901      	add	r1, sp, #4
 8000dbe:	f7ff fbdb 	bl	8000578 <__gnu_Unwind_RaiseException>
 8000dc2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8000dc6:	b012      	add	sp, #72	; 0x48
 8000dc8:	4770      	bx	lr
 8000dca:	bf00      	nop

08000dcc <_Unwind_Resume>:
 8000dcc:	46ec      	mov	ip, sp
 8000dce:	b500      	push	{lr}
 8000dd0:	e92d 5000 	stmdb	sp!, {ip, lr}
 8000dd4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8000dd8:	f04f 0300 	mov.w	r3, #0
 8000ddc:	e92d 000c 	stmdb	sp!, {r2, r3}
 8000de0:	a901      	add	r1, sp, #4
 8000de2:	f7ff fc03 	bl	80005ec <__gnu_Unwind_Resume>
 8000de6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8000dea:	b012      	add	sp, #72	; 0x48
 8000dec:	4770      	bx	lr
 8000dee:	bf00      	nop

08000df0 <_Unwind_Resume_or_Rethrow>:
 8000df0:	46ec      	mov	ip, sp
 8000df2:	b500      	push	{lr}
 8000df4:	e92d 5000 	stmdb	sp!, {ip, lr}
 8000df8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8000dfc:	f04f 0300 	mov.w	r3, #0
 8000e00:	e92d 000c 	stmdb	sp!, {r2, r3}
 8000e04:	a901      	add	r1, sp, #4
 8000e06:	f7ff fc13 	bl	8000630 <__gnu_Unwind_Resume_or_Rethrow>
 8000e0a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8000e0e:	b012      	add	sp, #72	; 0x48
 8000e10:	4770      	bx	lr
 8000e12:	bf00      	nop

08000e14 <_Unwind_ForcedUnwind>:
 8000e14:	46ec      	mov	ip, sp
 8000e16:	b500      	push	{lr}
 8000e18:	e92d 5000 	stmdb	sp!, {ip, lr}
 8000e1c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8000e20:	f04f 0300 	mov.w	r3, #0
 8000e24:	e92d 000c 	stmdb	sp!, {r2, r3}
 8000e28:	ab01      	add	r3, sp, #4
 8000e2a:	f7ff fbd5 	bl	80005d8 <__gnu_Unwind_ForcedUnwind>
 8000e2e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8000e32:	b012      	add	sp, #72	; 0x48
 8000e34:	4770      	bx	lr
 8000e36:	bf00      	nop

08000e38 <_Unwind_Backtrace>:
 8000e38:	46ec      	mov	ip, sp
 8000e3a:	b500      	push	{lr}
 8000e3c:	e92d 5000 	stmdb	sp!, {ip, lr}
 8000e40:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8000e44:	f04f 0300 	mov.w	r3, #0
 8000e48:	e92d 000c 	stmdb	sp!, {r2, r3}
 8000e4c:	aa01      	add	r2, sp, #4
 8000e4e:	f7ff fc45 	bl	80006dc <__gnu_Unwind_Backtrace>
 8000e52:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8000e56:	b012      	add	sp, #72	; 0x48
 8000e58:	4770      	bx	lr
 8000e5a:	bf00      	nop
 8000e5c:	0000      	movs	r0, r0
	...

08000e60 <next_unwind_byte>:
 8000e60:	7a02      	ldrb	r2, [r0, #8]
 8000e62:	b97a      	cbnz	r2, 8000e84 <next_unwind_byte+0x24>
 8000e64:	7a43      	ldrb	r3, [r0, #9]
 8000e66:	b1a3      	cbz	r3, 8000e92 <next_unwind_byte+0x32>
 8000e68:	6842      	ldr	r2, [r0, #4]
 8000e6a:	3b01      	subs	r3, #1
 8000e6c:	b410      	push	{r4}
 8000e6e:	7243      	strb	r3, [r0, #9]
 8000e70:	6813      	ldr	r3, [r2, #0]
 8000e72:	2103      	movs	r1, #3
 8000e74:	1d14      	adds	r4, r2, #4
 8000e76:	7201      	strb	r1, [r0, #8]
 8000e78:	021a      	lsls	r2, r3, #8
 8000e7a:	6044      	str	r4, [r0, #4]
 8000e7c:	6002      	str	r2, [r0, #0]
 8000e7e:	bc10      	pop	{r4}
 8000e80:	0e18      	lsrs	r0, r3, #24
 8000e82:	4770      	bx	lr
 8000e84:	6803      	ldr	r3, [r0, #0]
 8000e86:	3a01      	subs	r2, #1
 8000e88:	7202      	strb	r2, [r0, #8]
 8000e8a:	021a      	lsls	r2, r3, #8
 8000e8c:	6002      	str	r2, [r0, #0]
 8000e8e:	0e18      	lsrs	r0, r3, #24
 8000e90:	4770      	bx	lr
 8000e92:	20b0      	movs	r0, #176	; 0xb0
 8000e94:	4770      	bx	lr
 8000e96:	bf00      	nop

08000e98 <_Unwind_GetGR.constprop.0>:
 8000e98:	b500      	push	{lr}
 8000e9a:	b085      	sub	sp, #20
 8000e9c:	aa03      	add	r2, sp, #12
 8000e9e:	2300      	movs	r3, #0
 8000ea0:	9200      	str	r2, [sp, #0]
 8000ea2:	4619      	mov	r1, r3
 8000ea4:	220c      	movs	r2, #12
 8000ea6:	f7ff fbd3 	bl	8000650 <_Unwind_VRS_Get>
 8000eaa:	9803      	ldr	r0, [sp, #12]
 8000eac:	b005      	add	sp, #20
 8000eae:	f85d fb04 	ldr.w	pc, [sp], #4
 8000eb2:	bf00      	nop

08000eb4 <unwind_UCB_from_context>:
 8000eb4:	e7f0      	b.n	8000e98 <_Unwind_GetGR.constprop.0>
 8000eb6:	bf00      	nop

08000eb8 <__gnu_unwind_execute>:
 8000eb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000ebc:	4605      	mov	r5, r0
 8000ebe:	b085      	sub	sp, #20
 8000ec0:	460e      	mov	r6, r1
 8000ec2:	f04f 0800 	mov.w	r8, #0
 8000ec6:	4630      	mov	r0, r6
 8000ec8:	f7ff ffca 	bl	8000e60 <next_unwind_byte>
 8000ecc:	28b0      	cmp	r0, #176	; 0xb0
 8000ece:	4604      	mov	r4, r0
 8000ed0:	f000 80b1 	beq.w	8001036 <__gnu_unwind_execute+0x17e>
 8000ed4:	0607      	lsls	r7, r0, #24
 8000ed6:	d520      	bpl.n	8000f1a <__gnu_unwind_execute+0x62>
 8000ed8:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
 8000edc:	2b80      	cmp	r3, #128	; 0x80
 8000ede:	d065      	beq.n	8000fac <__gnu_unwind_execute+0xf4>
 8000ee0:	2b90      	cmp	r3, #144	; 0x90
 8000ee2:	d036      	beq.n	8000f52 <__gnu_unwind_execute+0x9a>
 8000ee4:	2ba0      	cmp	r3, #160	; 0xa0
 8000ee6:	d078      	beq.n	8000fda <__gnu_unwind_execute+0x122>
 8000ee8:	2bb0      	cmp	r3, #176	; 0xb0
 8000eea:	d047      	beq.n	8000f7c <__gnu_unwind_execute+0xc4>
 8000eec:	2bc0      	cmp	r3, #192	; 0xc0
 8000eee:	f000 808a 	beq.w	8001006 <__gnu_unwind_execute+0x14e>
 8000ef2:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8000ef6:	2bd0      	cmp	r3, #208	; 0xd0
 8000ef8:	d10b      	bne.n	8000f12 <__gnu_unwind_execute+0x5a>
 8000efa:	f000 0207 	and.w	r2, r0, #7
 8000efe:	3201      	adds	r2, #1
 8000f00:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8000f04:	2305      	movs	r3, #5
 8000f06:	2101      	movs	r1, #1
 8000f08:	4628      	mov	r0, r5
 8000f0a:	f7ff fd8f 	bl	8000a2c <_Unwind_VRS_Pop>
 8000f0e:	2800      	cmp	r0, #0
 8000f10:	d0d9      	beq.n	8000ec6 <__gnu_unwind_execute+0xe>
 8000f12:	2009      	movs	r0, #9
 8000f14:	b005      	add	sp, #20
 8000f16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000f1a:	f10d 090c 	add.w	r9, sp, #12
 8000f1e:	2300      	movs	r3, #0
 8000f20:	4619      	mov	r1, r3
 8000f22:	0087      	lsls	r7, r0, #2
 8000f24:	f8cd 9000 	str.w	r9, [sp]
 8000f28:	220d      	movs	r2, #13
 8000f2a:	4628      	mov	r0, r5
 8000f2c:	f7ff fb90 	bl	8000650 <_Unwind_VRS_Get>
 8000f30:	b2ff      	uxtb	r7, r7
 8000f32:	9b03      	ldr	r3, [sp, #12]
 8000f34:	f8cd 9000 	str.w	r9, [sp]
 8000f38:	3704      	adds	r7, #4
 8000f3a:	0660      	lsls	r0, r4, #25
 8000f3c:	bf4c      	ite	mi
 8000f3e:	1bdf      	submi	r7, r3, r7
 8000f40:	18ff      	addpl	r7, r7, r3
 8000f42:	2300      	movs	r3, #0
 8000f44:	4619      	mov	r1, r3
 8000f46:	220d      	movs	r2, #13
 8000f48:	4628      	mov	r0, r5
 8000f4a:	9703      	str	r7, [sp, #12]
 8000f4c:	f7ff fba2 	bl	8000694 <_Unwind_VRS_Set>
 8000f50:	e7b9      	b.n	8000ec6 <__gnu_unwind_execute+0xe>
 8000f52:	f000 030d 	and.w	r3, r0, #13
 8000f56:	2b0d      	cmp	r3, #13
 8000f58:	d0db      	beq.n	8000f12 <__gnu_unwind_execute+0x5a>
 8000f5a:	af03      	add	r7, sp, #12
 8000f5c:	2300      	movs	r3, #0
 8000f5e:	f000 020f 	and.w	r2, r0, #15
 8000f62:	4619      	mov	r1, r3
 8000f64:	9700      	str	r7, [sp, #0]
 8000f66:	4628      	mov	r0, r5
 8000f68:	f7ff fb72 	bl	8000650 <_Unwind_VRS_Get>
 8000f6c:	2300      	movs	r3, #0
 8000f6e:	9700      	str	r7, [sp, #0]
 8000f70:	4619      	mov	r1, r3
 8000f72:	220d      	movs	r2, #13
 8000f74:	4628      	mov	r0, r5
 8000f76:	f7ff fb8d 	bl	8000694 <_Unwind_VRS_Set>
 8000f7a:	e7a4      	b.n	8000ec6 <__gnu_unwind_execute+0xe>
 8000f7c:	28b1      	cmp	r0, #177	; 0xb1
 8000f7e:	d05f      	beq.n	8001040 <__gnu_unwind_execute+0x188>
 8000f80:	28b2      	cmp	r0, #178	; 0xb2
 8000f82:	f000 80cc 	beq.w	800111e <__gnu_unwind_execute+0x266>
 8000f86:	28b3      	cmp	r0, #179	; 0xb3
 8000f88:	d07e      	beq.n	8001088 <__gnu_unwind_execute+0x1d0>
 8000f8a:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
 8000f8e:	2bb4      	cmp	r3, #180	; 0xb4
 8000f90:	d0bf      	beq.n	8000f12 <__gnu_unwind_execute+0x5a>
 8000f92:	f000 0207 	and.w	r2, r0, #7
 8000f96:	3201      	adds	r2, #1
 8000f98:	2301      	movs	r3, #1
 8000f9a:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8000f9e:	4619      	mov	r1, r3
 8000fa0:	4628      	mov	r0, r5
 8000fa2:	f7ff fd43 	bl	8000a2c <_Unwind_VRS_Pop>
 8000fa6:	2800      	cmp	r0, #0
 8000fa8:	d08d      	beq.n	8000ec6 <__gnu_unwind_execute+0xe>
 8000faa:	e7b2      	b.n	8000f12 <__gnu_unwind_execute+0x5a>
 8000fac:	4630      	mov	r0, r6
 8000fae:	f7ff ff57 	bl	8000e60 <next_unwind_byte>
 8000fb2:	0224      	lsls	r4, r4, #8
 8000fb4:	4304      	orrs	r4, r0
 8000fb6:	f5b4 4f00 	cmp.w	r4, #32768	; 0x8000
 8000fba:	d0aa      	beq.n	8000f12 <__gnu_unwind_execute+0x5a>
 8000fbc:	0124      	lsls	r4, r4, #4
 8000fbe:	2300      	movs	r3, #0
 8000fc0:	b2a2      	uxth	r2, r4
 8000fc2:	4619      	mov	r1, r3
 8000fc4:	4628      	mov	r0, r5
 8000fc6:	f7ff fd31 	bl	8000a2c <_Unwind_VRS_Pop>
 8000fca:	2800      	cmp	r0, #0
 8000fcc:	d1a1      	bne.n	8000f12 <__gnu_unwind_execute+0x5a>
 8000fce:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8000fd2:	bf18      	it	ne
 8000fd4:	f04f 0801 	movne.w	r8, #1
 8000fd8:	e775      	b.n	8000ec6 <__gnu_unwind_execute+0xe>
 8000fda:	43c2      	mvns	r2, r0
 8000fdc:	f002 0307 	and.w	r3, r2, #7
 8000fe0:	f44f 627f 	mov.w	r2, #4080	; 0xff0
 8000fe4:	411a      	asrs	r2, r3
 8000fe6:	0701      	lsls	r1, r0, #28
 8000fe8:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
 8000fec:	f04f 0300 	mov.w	r3, #0
 8000ff0:	bf48      	it	mi
 8000ff2:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
 8000ff6:	4619      	mov	r1, r3
 8000ff8:	4628      	mov	r0, r5
 8000ffa:	f7ff fd17 	bl	8000a2c <_Unwind_VRS_Pop>
 8000ffe:	2800      	cmp	r0, #0
 8001000:	f43f af61 	beq.w	8000ec6 <__gnu_unwind_execute+0xe>
 8001004:	e785      	b.n	8000f12 <__gnu_unwind_execute+0x5a>
 8001006:	28c6      	cmp	r0, #198	; 0xc6
 8001008:	d051      	beq.n	80010ae <__gnu_unwind_execute+0x1f6>
 800100a:	28c7      	cmp	r0, #199	; 0xc7
 800100c:	d05a      	beq.n	80010c4 <__gnu_unwind_execute+0x20c>
 800100e:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8001012:	2bc0      	cmp	r3, #192	; 0xc0
 8001014:	d069      	beq.n	80010ea <__gnu_unwind_execute+0x232>
 8001016:	28c8      	cmp	r0, #200	; 0xc8
 8001018:	d075      	beq.n	8001106 <__gnu_unwind_execute+0x24e>
 800101a:	28c9      	cmp	r0, #201	; 0xc9
 800101c:	f47f af79 	bne.w	8000f12 <__gnu_unwind_execute+0x5a>
 8001020:	4630      	mov	r0, r6
 8001022:	f7ff ff1d 	bl	8000e60 <next_unwind_byte>
 8001026:	0302      	lsls	r2, r0, #12
 8001028:	f000 000f 	and.w	r0, r0, #15
 800102c:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 8001030:	3001      	adds	r0, #1
 8001032:	4302      	orrs	r2, r0
 8001034:	e766      	b.n	8000f04 <__gnu_unwind_execute+0x4c>
 8001036:	f1b8 0f00 	cmp.w	r8, #0
 800103a:	d014      	beq.n	8001066 <__gnu_unwind_execute+0x1ae>
 800103c:	2000      	movs	r0, #0
 800103e:	e769      	b.n	8000f14 <__gnu_unwind_execute+0x5c>
 8001040:	4630      	mov	r0, r6
 8001042:	f7ff ff0d 	bl	8000e60 <next_unwind_byte>
 8001046:	2800      	cmp	r0, #0
 8001048:	f43f af63 	beq.w	8000f12 <__gnu_unwind_execute+0x5a>
 800104c:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8001050:	f47f af5f 	bne.w	8000f12 <__gnu_unwind_execute+0x5a>
 8001054:	4602      	mov	r2, r0
 8001056:	4619      	mov	r1, r3
 8001058:	4628      	mov	r0, r5
 800105a:	f7ff fce7 	bl	8000a2c <_Unwind_VRS_Pop>
 800105e:	2800      	cmp	r0, #0
 8001060:	f43f af31 	beq.w	8000ec6 <__gnu_unwind_execute+0xe>
 8001064:	e755      	b.n	8000f12 <__gnu_unwind_execute+0x5a>
 8001066:	ac03      	add	r4, sp, #12
 8001068:	4643      	mov	r3, r8
 800106a:	220e      	movs	r2, #14
 800106c:	4641      	mov	r1, r8
 800106e:	9400      	str	r4, [sp, #0]
 8001070:	4628      	mov	r0, r5
 8001072:	f7ff faed 	bl	8000650 <_Unwind_VRS_Get>
 8001076:	9400      	str	r4, [sp, #0]
 8001078:	4628      	mov	r0, r5
 800107a:	4643      	mov	r3, r8
 800107c:	220f      	movs	r2, #15
 800107e:	4641      	mov	r1, r8
 8001080:	f7ff fb08 	bl	8000694 <_Unwind_VRS_Set>
 8001084:	4640      	mov	r0, r8
 8001086:	e745      	b.n	8000f14 <__gnu_unwind_execute+0x5c>
 8001088:	4630      	mov	r0, r6
 800108a:	f7ff fee9 	bl	8000e60 <next_unwind_byte>
 800108e:	0301      	lsls	r1, r0, #12
 8001090:	f000 000f 	and.w	r0, r0, #15
 8001094:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 8001098:	1c42      	adds	r2, r0, #1
 800109a:	2301      	movs	r3, #1
 800109c:	430a      	orrs	r2, r1
 800109e:	4628      	mov	r0, r5
 80010a0:	4619      	mov	r1, r3
 80010a2:	f7ff fcc3 	bl	8000a2c <_Unwind_VRS_Pop>
 80010a6:	2800      	cmp	r0, #0
 80010a8:	f43f af0d 	beq.w	8000ec6 <__gnu_unwind_execute+0xe>
 80010ac:	e731      	b.n	8000f12 <__gnu_unwind_execute+0x5a>
 80010ae:	4630      	mov	r0, r6
 80010b0:	f7ff fed6 	bl	8000e60 <next_unwind_byte>
 80010b4:	0301      	lsls	r1, r0, #12
 80010b6:	f000 000f 	and.w	r0, r0, #15
 80010ba:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 80010be:	1c42      	adds	r2, r0, #1
 80010c0:	2303      	movs	r3, #3
 80010c2:	e7eb      	b.n	800109c <__gnu_unwind_execute+0x1e4>
 80010c4:	4630      	mov	r0, r6
 80010c6:	f7ff fecb 	bl	8000e60 <next_unwind_byte>
 80010ca:	4602      	mov	r2, r0
 80010cc:	2800      	cmp	r0, #0
 80010ce:	f43f af20 	beq.w	8000f12 <__gnu_unwind_execute+0x5a>
 80010d2:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 80010d6:	f47f af1c 	bne.w	8000f12 <__gnu_unwind_execute+0x5a>
 80010da:	2104      	movs	r1, #4
 80010dc:	4628      	mov	r0, r5
 80010de:	f7ff fca5 	bl	8000a2c <_Unwind_VRS_Pop>
 80010e2:	2800      	cmp	r0, #0
 80010e4:	f43f aeef 	beq.w	8000ec6 <__gnu_unwind_execute+0xe>
 80010e8:	e713      	b.n	8000f12 <__gnu_unwind_execute+0x5a>
 80010ea:	f000 020f 	and.w	r2, r0, #15
 80010ee:	3201      	adds	r2, #1
 80010f0:	2303      	movs	r3, #3
 80010f2:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
 80010f6:	4619      	mov	r1, r3
 80010f8:	4628      	mov	r0, r5
 80010fa:	f7ff fc97 	bl	8000a2c <_Unwind_VRS_Pop>
 80010fe:	2800      	cmp	r0, #0
 8001100:	f43f aee1 	beq.w	8000ec6 <__gnu_unwind_execute+0xe>
 8001104:	e705      	b.n	8000f12 <__gnu_unwind_execute+0x5a>
 8001106:	4630      	mov	r0, r6
 8001108:	f7ff feaa 	bl	8000e60 <next_unwind_byte>
 800110c:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
 8001110:	f000 030f 	and.w	r3, r0, #15
 8001114:	3210      	adds	r2, #16
 8001116:	3301      	adds	r3, #1
 8001118:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
 800111c:	e6f2      	b.n	8000f04 <__gnu_unwind_execute+0x4c>
 800111e:	2300      	movs	r3, #0
 8001120:	f10d 090c 	add.w	r9, sp, #12
 8001124:	220d      	movs	r2, #13
 8001126:	4619      	mov	r1, r3
 8001128:	f8cd 9000 	str.w	r9, [sp]
 800112c:	4628      	mov	r0, r5
 800112e:	f7ff fa8f 	bl	8000650 <_Unwind_VRS_Get>
 8001132:	4630      	mov	r0, r6
 8001134:	f7ff fe94 	bl	8000e60 <next_unwind_byte>
 8001138:	0602      	lsls	r2, r0, #24
 800113a:	f04f 0702 	mov.w	r7, #2
 800113e:	d50c      	bpl.n	800115a <__gnu_unwind_execute+0x2a2>
 8001140:	9b03      	ldr	r3, [sp, #12]
 8001142:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8001146:	40b8      	lsls	r0, r7
 8001148:	4403      	add	r3, r0
 800114a:	4630      	mov	r0, r6
 800114c:	9303      	str	r3, [sp, #12]
 800114e:	f7ff fe87 	bl	8000e60 <next_unwind_byte>
 8001152:	0603      	lsls	r3, r0, #24
 8001154:	f107 0707 	add.w	r7, r7, #7
 8001158:	d4f2      	bmi.n	8001140 <__gnu_unwind_execute+0x288>
 800115a:	9b03      	ldr	r3, [sp, #12]
 800115c:	f8cd 9000 	str.w	r9, [sp]
 8001160:	f000 047f 	and.w	r4, r0, #127	; 0x7f
 8001164:	f503 7201 	add.w	r2, r3, #516	; 0x204
 8001168:	40bc      	lsls	r4, r7
 800116a:	2300      	movs	r3, #0
 800116c:	4414      	add	r4, r2
 800116e:	4619      	mov	r1, r3
 8001170:	220d      	movs	r2, #13
 8001172:	4628      	mov	r0, r5
 8001174:	9403      	str	r4, [sp, #12]
 8001176:	f7ff fa8d 	bl	8000694 <_Unwind_VRS_Set>
 800117a:	e6a4      	b.n	8000ec6 <__gnu_unwind_execute+0xe>

0800117c <__gnu_unwind_frame>:
 800117c:	b510      	push	{r4, lr}
 800117e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8001180:	b084      	sub	sp, #16
 8001182:	685a      	ldr	r2, [r3, #4]
 8001184:	2003      	movs	r0, #3
 8001186:	f88d 000c 	strb.w	r0, [sp, #12]
 800118a:	79dc      	ldrb	r4, [r3, #7]
 800118c:	f88d 400d 	strb.w	r4, [sp, #13]
 8001190:	0212      	lsls	r2, r2, #8
 8001192:	3308      	adds	r3, #8
 8001194:	4608      	mov	r0, r1
 8001196:	a901      	add	r1, sp, #4
 8001198:	9201      	str	r2, [sp, #4]
 800119a:	9302      	str	r3, [sp, #8]
 800119c:	f7ff fe8c 	bl	8000eb8 <__gnu_unwind_execute>
 80011a0:	b004      	add	sp, #16
 80011a2:	bd10      	pop	{r4, pc}

080011a4 <_Unwind_GetRegionStart>:
 80011a4:	b508      	push	{r3, lr}
 80011a6:	f7ff fe85 	bl	8000eb4 <unwind_UCB_from_context>
 80011aa:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80011ac:	bd08      	pop	{r3, pc}
 80011ae:	bf00      	nop

080011b0 <_Unwind_GetLanguageSpecificData>:
 80011b0:	b508      	push	{r3, lr}
 80011b2:	f7ff fe7f 	bl	8000eb4 <unwind_UCB_from_context>
 80011b6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80011b8:	79c3      	ldrb	r3, [r0, #7]
 80011ba:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80011be:	3008      	adds	r0, #8
 80011c0:	bd08      	pop	{r3, pc}
 80011c2:	bf00      	nop

080011c4 <_Unwind_GetDataRelBase>:
 80011c4:	b508      	push	{r3, lr}
 80011c6:	f006 fbcb 	bl	8007960 <abort>
 80011ca:	bf00      	nop

080011cc <_Unwind_GetTextRelBase>:
 80011cc:	b508      	push	{r3, lr}
 80011ce:	f7ff fff9 	bl	80011c4 <_Unwind_GetDataRelBase>
 80011d2:	bf00      	nop
	...

080011e0 <memcpy>:
 80011e0:	4684      	mov	ip, r0
 80011e2:	ea41 0300 	orr.w	r3, r1, r0
 80011e6:	f013 0303 	ands.w	r3, r3, #3
 80011ea:	d16d      	bne.n	80012c8 <memcpy+0xe8>
 80011ec:	3a40      	subs	r2, #64	; 0x40
 80011ee:	d341      	bcc.n	8001274 <memcpy+0x94>
 80011f0:	f851 3b04 	ldr.w	r3, [r1], #4
 80011f4:	f840 3b04 	str.w	r3, [r0], #4
 80011f8:	f851 3b04 	ldr.w	r3, [r1], #4
 80011fc:	f840 3b04 	str.w	r3, [r0], #4
 8001200:	f851 3b04 	ldr.w	r3, [r1], #4
 8001204:	f840 3b04 	str.w	r3, [r0], #4
 8001208:	f851 3b04 	ldr.w	r3, [r1], #4
 800120c:	f840 3b04 	str.w	r3, [r0], #4
 8001210:	f851 3b04 	ldr.w	r3, [r1], #4
 8001214:	f840 3b04 	str.w	r3, [r0], #4
 8001218:	f851 3b04 	ldr.w	r3, [r1], #4
 800121c:	f840 3b04 	str.w	r3, [r0], #4
 8001220:	f851 3b04 	ldr.w	r3, [r1], #4
 8001224:	f840 3b04 	str.w	r3, [r0], #4
 8001228:	f851 3b04 	ldr.w	r3, [r1], #4
 800122c:	f840 3b04 	str.w	r3, [r0], #4
 8001230:	f851 3b04 	ldr.w	r3, [r1], #4
 8001234:	f840 3b04 	str.w	r3, [r0], #4
 8001238:	f851 3b04 	ldr.w	r3, [r1], #4
 800123c:	f840 3b04 	str.w	r3, [r0], #4
 8001240:	f851 3b04 	ldr.w	r3, [r1], #4
 8001244:	f840 3b04 	str.w	r3, [r0], #4
 8001248:	f851 3b04 	ldr.w	r3, [r1], #4
 800124c:	f840 3b04 	str.w	r3, [r0], #4
 8001250:	f851 3b04 	ldr.w	r3, [r1], #4
 8001254:	f840 3b04 	str.w	r3, [r0], #4
 8001258:	f851 3b04 	ldr.w	r3, [r1], #4
 800125c:	f840 3b04 	str.w	r3, [r0], #4
 8001260:	f851 3b04 	ldr.w	r3, [r1], #4
 8001264:	f840 3b04 	str.w	r3, [r0], #4
 8001268:	f851 3b04 	ldr.w	r3, [r1], #4
 800126c:	f840 3b04 	str.w	r3, [r0], #4
 8001270:	3a40      	subs	r2, #64	; 0x40
 8001272:	d2bd      	bcs.n	80011f0 <memcpy+0x10>
 8001274:	3230      	adds	r2, #48	; 0x30
 8001276:	d311      	bcc.n	800129c <memcpy+0xbc>
 8001278:	f851 3b04 	ldr.w	r3, [r1], #4
 800127c:	f840 3b04 	str.w	r3, [r0], #4
 8001280:	f851 3b04 	ldr.w	r3, [r1], #4
 8001284:	f840 3b04 	str.w	r3, [r0], #4
 8001288:	f851 3b04 	ldr.w	r3, [r1], #4
 800128c:	f840 3b04 	str.w	r3, [r0], #4
 8001290:	f851 3b04 	ldr.w	r3, [r1], #4
 8001294:	f840 3b04 	str.w	r3, [r0], #4
 8001298:	3a10      	subs	r2, #16
 800129a:	d2ed      	bcs.n	8001278 <memcpy+0x98>
 800129c:	320c      	adds	r2, #12
 800129e:	d305      	bcc.n	80012ac <memcpy+0xcc>
 80012a0:	f851 3b04 	ldr.w	r3, [r1], #4
 80012a4:	f840 3b04 	str.w	r3, [r0], #4
 80012a8:	3a04      	subs	r2, #4
 80012aa:	d2f9      	bcs.n	80012a0 <memcpy+0xc0>
 80012ac:	3204      	adds	r2, #4
 80012ae:	d008      	beq.n	80012c2 <memcpy+0xe2>
 80012b0:	07d2      	lsls	r2, r2, #31
 80012b2:	bf1c      	itt	ne
 80012b4:	f811 3b01 	ldrbne.w	r3, [r1], #1
 80012b8:	f800 3b01 	strbne.w	r3, [r0], #1
 80012bc:	d301      	bcc.n	80012c2 <memcpy+0xe2>
 80012be:	880b      	ldrh	r3, [r1, #0]
 80012c0:	8003      	strh	r3, [r0, #0]
 80012c2:	4660      	mov	r0, ip
 80012c4:	4770      	bx	lr
 80012c6:	bf00      	nop
 80012c8:	2a08      	cmp	r2, #8
 80012ca:	d313      	bcc.n	80012f4 <memcpy+0x114>
 80012cc:	078b      	lsls	r3, r1, #30
 80012ce:	d08d      	beq.n	80011ec <memcpy+0xc>
 80012d0:	f010 0303 	ands.w	r3, r0, #3
 80012d4:	d08a      	beq.n	80011ec <memcpy+0xc>
 80012d6:	f1c3 0304 	rsb	r3, r3, #4
 80012da:	1ad2      	subs	r2, r2, r3
 80012dc:	07db      	lsls	r3, r3, #31
 80012de:	bf1c      	itt	ne
 80012e0:	f811 3b01 	ldrbne.w	r3, [r1], #1
 80012e4:	f800 3b01 	strbne.w	r3, [r0], #1
 80012e8:	d380      	bcc.n	80011ec <memcpy+0xc>
 80012ea:	f831 3b02 	ldrh.w	r3, [r1], #2
 80012ee:	f820 3b02 	strh.w	r3, [r0], #2
 80012f2:	e77b      	b.n	80011ec <memcpy+0xc>
 80012f4:	3a04      	subs	r2, #4
 80012f6:	d3d9      	bcc.n	80012ac <memcpy+0xcc>
 80012f8:	3a01      	subs	r2, #1
 80012fa:	f811 3b01 	ldrb.w	r3, [r1], #1
 80012fe:	f800 3b01 	strb.w	r3, [r0], #1
 8001302:	d2f9      	bcs.n	80012f8 <memcpy+0x118>
 8001304:	780b      	ldrb	r3, [r1, #0]
 8001306:	7003      	strb	r3, [r0, #0]
 8001308:	784b      	ldrb	r3, [r1, #1]
 800130a:	7043      	strb	r3, [r0, #1]
 800130c:	788b      	ldrb	r3, [r1, #2]
 800130e:	7083      	strb	r3, [r0, #2]
 8001310:	4660      	mov	r0, ip
 8001312:	4770      	bx	lr
	...

08001320 <__late_init>:
 8001320:	4770      	bx	lr
 8001322:	bf00      	nop
	...

08001330 <__default_exit>:
 8001330:	e7fe      	b.n	8001330 <__default_exit>
 8001332:	bf00      	nop
	...

08001340 <_unhandled_exception>:
 8001340:	b508      	push	{r3, lr}
 8001342:	4802      	ldr	r0, [pc, #8]	; (800134c <_unhandled_exception+0xc>)
 8001344:	f000 f85c 	bl	8001400 <chSysHalt>
 8001348:	e7fe      	b.n	8001348 <_unhandled_exception+0x8>
 800134a:	bf00      	nop
 800134c:	08007a20 	.word	0x08007a20

08001350 <_idle_thread>:
 8001350:	e7fe      	b.n	8001350 <_idle_thread>
 8001352:	bf00      	nop
	...

08001360 <chSysInit>:
 8001360:	4b1f      	ldr	r3, [pc, #124]	; (80013e0 <chSysInit+0x80>)
 8001362:	4a20      	ldr	r2, [pc, #128]	; (80013e4 <chSysInit+0x84>)
 8001364:	4820      	ldr	r0, [pc, #128]	; (80013e8 <chSysInit+0x88>)
 8001366:	b530      	push	{r4, r5, lr}
 8001368:	2400      	movs	r4, #0
 800136a:	609c      	str	r4, [r3, #8]
 800136c:	68d9      	ldr	r1, [r3, #12]
 800136e:	f64f 05ff 	movw	r5, #63743	; 0xf8ff
 8001372:	4029      	ands	r1, r5
 8001374:	430a      	orrs	r2, r1
 8001376:	60da      	str	r2, [r3, #12]
 8001378:	68c2      	ldr	r2, [r0, #12]
 800137a:	491c      	ldr	r1, [pc, #112]	; (80013ec <chSysInit+0x8c>)
 800137c:	4d1c      	ldr	r5, [pc, #112]	; (80013f0 <chSysInit+0x90>)
 800137e:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8001382:	60c2      	str	r2, [r0, #12]
 8001384:	680a      	ldr	r2, [r1, #0]
 8001386:	f042 0201 	orr.w	r2, r2, #1
 800138a:	600a      	str	r2, [r1, #0]
 800138c:	2010      	movs	r0, #16
 800138e:	2220      	movs	r2, #32
 8001390:	b083      	sub	sp, #12
 8001392:	77d8      	strb	r0, [r3, #31]
 8001394:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
 8001398:	f000 f9b2 	bl	8001700 <_scheduler_init>
 800139c:	f000 f8f0 	bl	8001580 <_vt_init>
 80013a0:	f000 fc4e 	bl	8001c40 <_tm_init>
 80013a4:	f001 fc74 	bl	8002c90 <_core_init>
 80013a8:	f001 fcba 	bl	8002d20 <_heap_init>
 80013ac:	4628      	mov	r0, r5
 80013ae:	2140      	movs	r1, #64	; 0x40
 80013b0:	f000 faa6 	bl	8001900 <_thread_init>
 80013b4:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 80013b8:	2201      	movs	r2, #1
 80013ba:	6198      	str	r0, [r3, #24]
 80013bc:	7702      	strb	r2, [r0, #28]
 80013be:	f384 8811 	msr	BASEPRI, r4
 80013c2:	b662      	cpsie	i
 80013c4:	699b      	ldr	r3, [r3, #24]
 80013c6:	490b      	ldr	r1, [pc, #44]	; (80013f4 <chSysInit+0x94>)
 80013c8:	6199      	str	r1, [r3, #24]
 80013ca:	f105 0048 	add.w	r0, r5, #72	; 0x48
 80013ce:	9400      	str	r4, [sp, #0]
 80013d0:	4b09      	ldr	r3, [pc, #36]	; (80013f8 <chSysInit+0x98>)
 80013d2:	21d8      	movs	r1, #216	; 0xd8
 80013d4:	f000 fadc 	bl	8001990 <chThdCreateStatic>
 80013d8:	4b08      	ldr	r3, [pc, #32]	; (80013fc <chSysInit+0x9c>)
 80013da:	6183      	str	r3, [r0, #24]
 80013dc:	b003      	add	sp, #12
 80013de:	bd30      	pop	{r4, r5, pc}
 80013e0:	e000ed00 	.word	0xe000ed00
 80013e4:	05fa0300 	.word	0x05fa0300
 80013e8:	e000edf0 	.word	0xe000edf0
 80013ec:	e0001000 	.word	0xe0001000
 80013f0:	20000d18 	.word	0x20000d18
 80013f4:	08007a50 	.word	0x08007a50
 80013f8:	08001351 	.word	0x08001351
 80013fc:	08007a40 	.word	0x08007a40

08001400 <chSysHalt>:
 8001400:	b672      	cpsid	i
 8001402:	4b01      	ldr	r3, [pc, #4]	; (8001408 <chSysHalt+0x8>)
 8001404:	62d8      	str	r0, [r3, #44]	; 0x2c
 8001406:	e7fe      	b.n	8001406 <chSysHalt+0x6>
 8001408:	20000ce8 	.word	0x20000ce8
 800140c:	00000000 	.word	0x00000000

08001410 <chSysIntegrityCheckI>:
 8001410:	07c2      	lsls	r2, r0, #31
 8001412:	b410      	push	{r4}
 8001414:	d512      	bpl.n	800143c <chSysIntegrityCheckI+0x2c>
 8001416:	4b29      	ldr	r3, [pc, #164]	; (80014bc <chSysIntegrityCheckI+0xac>)
 8001418:	e9d3 1400 	ldrd	r1, r4, [r3]
 800141c:	4299      	cmp	r1, r3
 800141e:	d041      	beq.n	80014a4 <chSysIntegrityCheckI+0x94>
 8001420:	2200      	movs	r2, #0
 8001422:	6809      	ldr	r1, [r1, #0]
 8001424:	4299      	cmp	r1, r3
 8001426:	f102 0201 	add.w	r2, r2, #1
 800142a:	d1fa      	bne.n	8001422 <chSysIntegrityCheckI+0x12>
 800142c:	428c      	cmp	r4, r1
 800142e:	d036      	beq.n	800149e <chSysIntegrityCheckI+0x8e>
 8001430:	6864      	ldr	r4, [r4, #4]
 8001432:	429c      	cmp	r4, r3
 8001434:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8001438:	d1fa      	bne.n	8001430 <chSysIntegrityCheckI+0x20>
 800143a:	bb82      	cbnz	r2, 800149e <chSysIntegrityCheckI+0x8e>
 800143c:	0783      	lsls	r3, r0, #30
 800143e:	d513      	bpl.n	8001468 <chSysIntegrityCheckI+0x58>
 8001440:	4c1e      	ldr	r4, [pc, #120]	; (80014bc <chSysIntegrityCheckI+0xac>)
 8001442:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8001446:	341c      	adds	r4, #28
 8001448:	42a2      	cmp	r2, r4
 800144a:	d02f      	beq.n	80014ac <chSysIntegrityCheckI+0x9c>
 800144c:	2300      	movs	r3, #0
 800144e:	6812      	ldr	r2, [r2, #0]
 8001450:	42a2      	cmp	r2, r4
 8001452:	f103 0301 	add.w	r3, r3, #1
 8001456:	d1fa      	bne.n	800144e <chSysIntegrityCheckI+0x3e>
 8001458:	4291      	cmp	r1, r2
 800145a:	d020      	beq.n	800149e <chSysIntegrityCheckI+0x8e>
 800145c:	6849      	ldr	r1, [r1, #4]
 800145e:	42a1      	cmp	r1, r4
 8001460:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8001464:	d1fa      	bne.n	800145c <chSysIntegrityCheckI+0x4c>
 8001466:	b9d3      	cbnz	r3, 800149e <chSysIntegrityCheckI+0x8e>
 8001468:	f010 0004 	ands.w	r0, r0, #4
 800146c:	d015      	beq.n	800149a <chSysIntegrityCheckI+0x8a>
 800146e:	4b13      	ldr	r3, [pc, #76]	; (80014bc <chSysIntegrityCheckI+0xac>)
 8001470:	e9d3 2104 	ldrd	r2, r1, [r3, #16]
 8001474:	429a      	cmp	r2, r3
 8001476:	f04f 0000 	mov.w	r0, #0
 800147a:	d01b      	beq.n	80014b4 <chSysIntegrityCheckI+0xa4>
 800147c:	6912      	ldr	r2, [r2, #16]
 800147e:	429a      	cmp	r2, r3
 8001480:	f100 0001 	add.w	r0, r0, #1
 8001484:	d1fa      	bne.n	800147c <chSysIntegrityCheckI+0x6c>
 8001486:	4291      	cmp	r1, r2
 8001488:	d009      	beq.n	800149e <chSysIntegrityCheckI+0x8e>
 800148a:	6949      	ldr	r1, [r1, #20]
 800148c:	4299      	cmp	r1, r3
 800148e:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 8001492:	d1fa      	bne.n	800148a <chSysIntegrityCheckI+0x7a>
 8001494:	3000      	adds	r0, #0
 8001496:	bf18      	it	ne
 8001498:	2001      	movne	r0, #1
 800149a:	bc10      	pop	{r4}
 800149c:	4770      	bx	lr
 800149e:	2001      	movs	r0, #1
 80014a0:	bc10      	pop	{r4}
 80014a2:	4770      	bx	lr
 80014a4:	429c      	cmp	r4, r3
 80014a6:	d0c9      	beq.n	800143c <chSysIntegrityCheckI+0x2c>
 80014a8:	2200      	movs	r2, #0
 80014aa:	e7c1      	b.n	8001430 <chSysIntegrityCheckI+0x20>
 80014ac:	42a1      	cmp	r1, r4
 80014ae:	d0db      	beq.n	8001468 <chSysIntegrityCheckI+0x58>
 80014b0:	2300      	movs	r3, #0
 80014b2:	e7d3      	b.n	800145c <chSysIntegrityCheckI+0x4c>
 80014b4:	4291      	cmp	r1, r2
 80014b6:	d1e8      	bne.n	800148a <chSysIntegrityCheckI+0x7a>
 80014b8:	e7ef      	b.n	800149a <chSysIntegrityCheckI+0x8a>
 80014ba:	bf00      	nop
 80014bc:	20000ce8 	.word	0x20000ce8

080014c0 <chSysTimerHandlerI>:
 80014c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80014c4:	4d1c      	ldr	r5, [pc, #112]	; (8001538 <chSysTimerHandlerI+0x78>)
 80014c6:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 80014ca:	69ec      	ldr	r4, [r5, #28]
 80014cc:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80014ce:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80014d0:	68a1      	ldr	r1, [r4, #8]
 80014d2:	1ac2      	subs	r2, r0, r3
 80014d4:	428a      	cmp	r2, r1
 80014d6:	f105 091c 	add.w	r9, r5, #28
 80014da:	d31e      	bcc.n	800151a <chSysTimerHandlerI+0x5a>
 80014dc:	2600      	movs	r6, #0
 80014de:	f04f 0820 	mov.w	r8, #32
 80014e2:	e00c      	b.n	80014fe <chSysTimerHandlerI+0x3e>
 80014e4:	f386 8811 	msr	BASEPRI, r6
 80014e8:	6920      	ldr	r0, [r4, #16]
 80014ea:	47d0      	blx	sl
 80014ec:	f388 8811 	msr	BASEPRI, r8
 80014f0:	69ec      	ldr	r4, [r5, #28]
 80014f2:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80014f4:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80014f6:	68a1      	ldr	r1, [r4, #8]
 80014f8:	1ac2      	subs	r2, r0, r3
 80014fa:	4291      	cmp	r1, r2
 80014fc:	d80d      	bhi.n	800151a <chSysTimerHandlerI+0x5a>
 80014fe:	6822      	ldr	r2, [r4, #0]
 8001500:	f8d4 a00c 	ldr.w	sl, [r4, #12]
 8001504:	440b      	add	r3, r1
 8001506:	454a      	cmp	r2, r9
 8001508:	62ab      	str	r3, [r5, #40]	; 0x28
 800150a:	f8c2 9004 	str.w	r9, [r2, #4]
 800150e:	61ea      	str	r2, [r5, #28]
 8001510:	60e6      	str	r6, [r4, #12]
 8001512:	d1e7      	bne.n	80014e4 <chSysTimerHandlerI+0x24>
 8001514:	f001 fd84 	bl	8003020 <stStopAlarm>
 8001518:	e7e4      	b.n	80014e4 <chSysTimerHandlerI+0x24>
 800151a:	454c      	cmp	r4, r9
 800151c:	d009      	beq.n	8001532 <chSysTimerHandlerI+0x72>
 800151e:	440b      	add	r3, r1
 8001520:	1a1b      	subs	r3, r3, r0
 8001522:	2b02      	cmp	r3, #2
 8001524:	bf2c      	ite	cs
 8001526:	18c0      	addcs	r0, r0, r3
 8001528:	3002      	addcc	r0, #2
 800152a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800152e:	f001 bd7f 	b.w	8003030 <stSetAlarm>
 8001532:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001536:	bf00      	nop
 8001538:	20000ce8 	.word	0x20000ce8
 800153c:	00000000 	.word	0x00000000

08001540 <chSysGetStatusAndLockX>:
 8001540:	f3ef 8012 	mrs	r0, BASEPRI_MAX
 8001544:	b920      	cbnz	r0, 8001550 <chSysGetStatusAndLockX+0x10>
 8001546:	f3ef 8305 	mrs	r3, IPSR
 800154a:	2320      	movs	r3, #32
 800154c:	f383 8811 	msr	BASEPRI, r3
 8001550:	4770      	bx	lr
 8001552:	bf00      	nop
	...

08001560 <chSysRestoreStatusX>:
 8001560:	b940      	cbnz	r0, 8001574 <chSysRestoreStatusX+0x14>
 8001562:	b510      	push	{r4, lr}
 8001564:	f3ef 8405 	mrs	r4, IPSR
 8001568:	f3c4 0408 	ubfx	r4, r4, #0, #9
 800156c:	b11c      	cbz	r4, 8001576 <chSysRestoreStatusX+0x16>
 800156e:	f380 8811 	msr	BASEPRI, r0
 8001572:	bd10      	pop	{r4, pc}
 8001574:	4770      	bx	lr
 8001576:	f000 f9ab 	bl	80018d0 <chSchRescheduleS>
 800157a:	f384 8811 	msr	BASEPRI, r4
 800157e:	bd10      	pop	{r4, pc}

08001580 <_vt_init>:
 8001580:	4b05      	ldr	r3, [pc, #20]	; (8001598 <_vt_init+0x18>)
 8001582:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001586:	2100      	movs	r1, #0
 8001588:	f103 021c 	add.w	r2, r3, #28
 800158c:	e9c3 0109 	strd	r0, r1, [r3, #36]	; 0x24
 8001590:	e9c3 2207 	strd	r2, r2, [r3, #28]
 8001594:	4770      	bx	lr
 8001596:	bf00      	nop
 8001598:	20000ce8 	.word	0x20000ce8
 800159c:	00000000 	.word	0x00000000

080015a0 <chVTDoSetI>:
 80015a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015a2:	4f1c      	ldr	r7, [pc, #112]	; (8001614 <chVTDoSetI+0x74>)
 80015a4:	463d      	mov	r5, r7
 80015a6:	2902      	cmp	r1, #2
 80015a8:	f855 4f1c 	ldr.w	r4, [r5, #28]!
 80015ac:	6103      	str	r3, [r0, #16]
 80015ae:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80015b2:	bf38      	it	cc
 80015b4:	2102      	movcc	r1, #2
 80015b6:	42ac      	cmp	r4, r5
 80015b8:	4606      	mov	r6, r0
 80015ba:	60c2      	str	r2, [r0, #12]
 80015bc:	6a58      	ldr	r0, [r3, #36]	; 0x24
 80015be:	d01e      	beq.n	80015fe <chVTDoSetI+0x5e>
 80015c0:	6abd      	ldr	r5, [r7, #40]	; 0x28
 80015c2:	68a3      	ldr	r3, [r4, #8]
 80015c4:	4408      	add	r0, r1
 80015c6:	1b45      	subs	r5, r0, r5
 80015c8:	42ab      	cmp	r3, r5
 80015ca:	d813      	bhi.n	80015f4 <chVTDoSetI+0x54>
 80015cc:	429d      	cmp	r5, r3
 80015ce:	d904      	bls.n	80015da <chVTDoSetI+0x3a>
 80015d0:	6824      	ldr	r4, [r4, #0]
 80015d2:	1aed      	subs	r5, r5, r3
 80015d4:	68a3      	ldr	r3, [r4, #8]
 80015d6:	42ab      	cmp	r3, r5
 80015d8:	d3fa      	bcc.n	80015d0 <chVTDoSetI+0x30>
 80015da:	6863      	ldr	r3, [r4, #4]
 80015dc:	e9c6 4300 	strd	r4, r3, [r6]
 80015e0:	601e      	str	r6, [r3, #0]
 80015e2:	6066      	str	r6, [r4, #4]
 80015e4:	60b5      	str	r5, [r6, #8]
 80015e6:	68a3      	ldr	r3, [r4, #8]
 80015e8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80015ec:	1b5d      	subs	r5, r3, r5
 80015ee:	60a5      	str	r5, [r4, #8]
 80015f0:	627a      	str	r2, [r7, #36]	; 0x24
 80015f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80015f4:	f001 fd1c 	bl	8003030 <stSetAlarm>
 80015f8:	69fc      	ldr	r4, [r7, #28]
 80015fa:	68a3      	ldr	r3, [r4, #8]
 80015fc:	e7e6      	b.n	80015cc <chVTDoSetI+0x2c>
 80015fe:	62b8      	str	r0, [r7, #40]	; 0x28
 8001600:	e9c7 6607 	strd	r6, r6, [r7, #28]
 8001604:	4408      	add	r0, r1
 8001606:	e9c6 4400 	strd	r4, r4, [r6]
 800160a:	60b1      	str	r1, [r6, #8]
 800160c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8001610:	f001 bcfe 	b.w	8003010 <stStartAlarm>
 8001614:	20000ce8 	.word	0x20000ce8
	...

08001620 <chVTDoResetI>:
 8001620:	4b19      	ldr	r3, [pc, #100]	; (8001688 <chVTDoResetI+0x68>)
 8001622:	69da      	ldr	r2, [r3, #28]
 8001624:	4282      	cmp	r2, r0
 8001626:	b410      	push	{r4}
 8001628:	d00f      	beq.n	800164a <chVTDoResetI+0x2a>
 800162a:	e9d0 2100 	ldrd	r2, r1, [r0]
 800162e:	600a      	str	r2, [r1, #0]
 8001630:	6802      	ldr	r2, [r0, #0]
 8001632:	331c      	adds	r3, #28
 8001634:	2400      	movs	r4, #0
 8001636:	429a      	cmp	r2, r3
 8001638:	6051      	str	r1, [r2, #4]
 800163a:	60c4      	str	r4, [r0, #12]
 800163c:	d003      	beq.n	8001646 <chVTDoResetI+0x26>
 800163e:	6881      	ldr	r1, [r0, #8]
 8001640:	6893      	ldr	r3, [r2, #8]
 8001642:	440b      	add	r3, r1
 8001644:	6093      	str	r3, [r2, #8]
 8001646:	bc10      	pop	{r4}
 8001648:	4770      	bx	lr
 800164a:	4618      	mov	r0, r3
 800164c:	6811      	ldr	r1, [r2, #0]
 800164e:	f840 1f1c 	str.w	r1, [r0, #28]!
 8001652:	2400      	movs	r4, #0
 8001654:	4281      	cmp	r1, r0
 8001656:	6048      	str	r0, [r1, #4]
 8001658:	60d4      	str	r4, [r2, #12]
 800165a:	d012      	beq.n	8001682 <chVTDoResetI+0x62>
 800165c:	6894      	ldr	r4, [r2, #8]
 800165e:	6888      	ldr	r0, [r1, #8]
 8001660:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001662:	4404      	add	r4, r0
 8001664:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001668:	608c      	str	r4, [r1, #8]
 800166a:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800166c:	1a82      	subs	r2, r0, r2
 800166e:	4294      	cmp	r4, r2
 8001670:	d9e9      	bls.n	8001646 <chVTDoResetI+0x26>
 8001672:	1aa3      	subs	r3, r4, r2
 8001674:	2b02      	cmp	r3, #2
 8001676:	bf2c      	ite	cs
 8001678:	18c0      	addcs	r0, r0, r3
 800167a:	3002      	addcc	r0, #2
 800167c:	bc10      	pop	{r4}
 800167e:	f001 bcd7 	b.w	8003030 <stSetAlarm>
 8001682:	bc10      	pop	{r4}
 8001684:	f001 bccc 	b.w	8003020 <stStopAlarm>
 8001688:	20000ce8 	.word	0x20000ce8
 800168c:	00000000 	.word	0x00000000

08001690 <wakeup>:
 8001690:	2320      	movs	r3, #32
 8001692:	f383 8811 	msr	BASEPRI, r3
 8001696:	7f03      	ldrb	r3, [r0, #28]
 8001698:	2b07      	cmp	r3, #7
 800169a:	d80e      	bhi.n	80016ba <wakeup+0x2a>
 800169c:	e8df f003 	tbb	[pc, r3]
 80016a0:	230d0d27 	.word	0x230d0d27
 80016a4:	080d0408 	.word	0x080d0408
 80016a8:	6a02      	ldr	r2, [r0, #32]
 80016aa:	6893      	ldr	r3, [r2, #8]
 80016ac:	3301      	adds	r3, #1
 80016ae:	6093      	str	r3, [r2, #8]
 80016b0:	e9d0 2300 	ldrd	r2, r3, [r0]
 80016b4:	601a      	str	r2, [r3, #0]
 80016b6:	6802      	ldr	r2, [r0, #0]
 80016b8:	6053      	str	r3, [r2, #4]
 80016ba:	b410      	push	{r4}
 80016bc:	2200      	movs	r2, #0
 80016be:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80016c2:	6881      	ldr	r1, [r0, #8]
 80016c4:	4b0c      	ldr	r3, [pc, #48]	; (80016f8 <wakeup+0x68>)
 80016c6:	6204      	str	r4, [r0, #32]
 80016c8:	7702      	strb	r2, [r0, #28]
 80016ca:	681b      	ldr	r3, [r3, #0]
 80016cc:	689a      	ldr	r2, [r3, #8]
 80016ce:	428a      	cmp	r2, r1
 80016d0:	d2fb      	bcs.n	80016ca <wakeup+0x3a>
 80016d2:	685a      	ldr	r2, [r3, #4]
 80016d4:	2100      	movs	r1, #0
 80016d6:	e9c0 3200 	strd	r3, r2, [r0]
 80016da:	6010      	str	r0, [r2, #0]
 80016dc:	6058      	str	r0, [r3, #4]
 80016de:	f381 8811 	msr	BASEPRI, r1
 80016e2:	bc10      	pop	{r4}
 80016e4:	4770      	bx	lr
 80016e6:	6a03      	ldr	r3, [r0, #32]
 80016e8:	2200      	movs	r2, #0
 80016ea:	601a      	str	r2, [r3, #0]
 80016ec:	e7e5      	b.n	80016ba <wakeup+0x2a>
 80016ee:	2300      	movs	r3, #0
 80016f0:	f383 8811 	msr	BASEPRI, r3
 80016f4:	4770      	bx	lr
 80016f6:	bf00      	nop
 80016f8:	20000ce8 	.word	0x20000ce8
 80016fc:	00000000 	.word	0x00000000

08001700 <_scheduler_init>:
 8001700:	4b03      	ldr	r3, [pc, #12]	; (8001710 <_scheduler_init+0x10>)
 8001702:	2200      	movs	r2, #0
 8001704:	e9c3 3300 	strd	r3, r3, [r3]
 8001708:	e9c3 3304 	strd	r3, r3, [r3, #16]
 800170c:	609a      	str	r2, [r3, #8]
 800170e:	4770      	bx	lr
 8001710:	20000ce8 	.word	0x20000ce8
	...

08001720 <chSchReadyI>:
 8001720:	4601      	mov	r1, r0
 8001722:	2200      	movs	r2, #0
 8001724:	4b06      	ldr	r3, [pc, #24]	; (8001740 <chSchReadyI+0x20>)
 8001726:	6880      	ldr	r0, [r0, #8]
 8001728:	770a      	strb	r2, [r1, #28]
 800172a:	681b      	ldr	r3, [r3, #0]
 800172c:	689a      	ldr	r2, [r3, #8]
 800172e:	4282      	cmp	r2, r0
 8001730:	d2fb      	bcs.n	800172a <chSchReadyI+0xa>
 8001732:	685a      	ldr	r2, [r3, #4]
 8001734:	4608      	mov	r0, r1
 8001736:	e9c1 3200 	strd	r3, r2, [r1]
 800173a:	6011      	str	r1, [r2, #0]
 800173c:	6059      	str	r1, [r3, #4]
 800173e:	4770      	bx	lr
 8001740:	20000ce8 	.word	0x20000ce8
	...

08001750 <chSchGoSleepS>:
 8001750:	4b07      	ldr	r3, [pc, #28]	; (8001770 <chSchGoSleepS+0x20>)
 8001752:	6999      	ldr	r1, [r3, #24]
 8001754:	681a      	ldr	r2, [r3, #0]
 8001756:	b410      	push	{r4}
 8001758:	7708      	strb	r0, [r1, #28]
 800175a:	6810      	ldr	r0, [r2, #0]
 800175c:	6018      	str	r0, [r3, #0]
 800175e:	2401      	movs	r4, #1
 8001760:	6043      	str	r3, [r0, #4]
 8001762:	7714      	strb	r4, [r2, #28]
 8001764:	4610      	mov	r0, r2
 8001766:	bc10      	pop	{r4}
 8001768:	619a      	str	r2, [r3, #24]
 800176a:	f7fe bd91 	b.w	8000290 <_port_switch>
 800176e:	bf00      	nop
 8001770:	20000ce8 	.word	0x20000ce8
	...

08001780 <chSchGoSleepTimeoutS>:
 8001780:	b530      	push	{r4, r5, lr}
 8001782:	1c4b      	adds	r3, r1, #1
 8001784:	b087      	sub	sp, #28
 8001786:	d012      	beq.n	80017ae <chSchGoSleepTimeoutS+0x2e>
 8001788:	4c0c      	ldr	r4, [pc, #48]	; (80017bc <chSchGoSleepTimeoutS+0x3c>)
 800178a:	4a0d      	ldr	r2, [pc, #52]	; (80017c0 <chSchGoSleepTimeoutS+0x40>)
 800178c:	69a3      	ldr	r3, [r4, #24]
 800178e:	4605      	mov	r5, r0
 8001790:	a801      	add	r0, sp, #4
 8001792:	f7ff ff05 	bl	80015a0 <chVTDoSetI>
 8001796:	4628      	mov	r0, r5
 8001798:	f7ff ffda 	bl	8001750 <chSchGoSleepS>
 800179c:	9b04      	ldr	r3, [sp, #16]
 800179e:	b113      	cbz	r3, 80017a6 <chSchGoSleepTimeoutS+0x26>
 80017a0:	a801      	add	r0, sp, #4
 80017a2:	f7ff ff3d 	bl	8001620 <chVTDoResetI>
 80017a6:	69a3      	ldr	r3, [r4, #24]
 80017a8:	6a18      	ldr	r0, [r3, #32]
 80017aa:	b007      	add	sp, #28
 80017ac:	bd30      	pop	{r4, r5, pc}
 80017ae:	4c03      	ldr	r4, [pc, #12]	; (80017bc <chSchGoSleepTimeoutS+0x3c>)
 80017b0:	f7ff ffce 	bl	8001750 <chSchGoSleepS>
 80017b4:	69a3      	ldr	r3, [r4, #24]
 80017b6:	6a18      	ldr	r0, [r3, #32]
 80017b8:	b007      	add	sp, #28
 80017ba:	bd30      	pop	{r4, r5, pc}
 80017bc:	20000ce8 	.word	0x20000ce8
 80017c0:	08001691 	.word	0x08001691
	...

080017d0 <chSchWakeupS>:
 80017d0:	4b14      	ldr	r3, [pc, #80]	; (8001824 <chSchWakeupS+0x54>)
 80017d2:	b470      	push	{r4, r5, r6}
 80017d4:	699e      	ldr	r6, [r3, #24]
 80017d6:	6885      	ldr	r5, [r0, #8]
 80017d8:	4604      	mov	r4, r0
 80017da:	68b0      	ldr	r0, [r6, #8]
 80017dc:	6221      	str	r1, [r4, #32]
 80017de:	4285      	cmp	r5, r0
 80017e0:	f04f 0200 	mov.w	r2, #0
 80017e4:	d80b      	bhi.n	80017fe <chSchWakeupS+0x2e>
 80017e6:	7722      	strb	r2, [r4, #28]
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	689a      	ldr	r2, [r3, #8]
 80017ec:	4295      	cmp	r5, r2
 80017ee:	d9fb      	bls.n	80017e8 <chSchWakeupS+0x18>
 80017f0:	685a      	ldr	r2, [r3, #4]
 80017f2:	e9c4 3200 	strd	r3, r2, [r4]
 80017f6:	6014      	str	r4, [r2, #0]
 80017f8:	605c      	str	r4, [r3, #4]
 80017fa:	bc70      	pop	{r4, r5, r6}
 80017fc:	4770      	bx	lr
 80017fe:	7732      	strb	r2, [r6, #28]
 8001800:	461a      	mov	r2, r3
 8001802:	6812      	ldr	r2, [r2, #0]
 8001804:	6891      	ldr	r1, [r2, #8]
 8001806:	4288      	cmp	r0, r1
 8001808:	d9fb      	bls.n	8001802 <chSchWakeupS+0x32>
 800180a:	6851      	ldr	r1, [r2, #4]
 800180c:	6071      	str	r1, [r6, #4]
 800180e:	2001      	movs	r0, #1
 8001810:	6032      	str	r2, [r6, #0]
 8001812:	600e      	str	r6, [r1, #0]
 8001814:	6056      	str	r6, [r2, #4]
 8001816:	7720      	strb	r0, [r4, #28]
 8001818:	4631      	mov	r1, r6
 800181a:	4620      	mov	r0, r4
 800181c:	619c      	str	r4, [r3, #24]
 800181e:	bc70      	pop	{r4, r5, r6}
 8001820:	f7fe bd36 	b.w	8000290 <_port_switch>
 8001824:	20000ce8 	.word	0x20000ce8
	...

08001830 <chSchIsPreemptionRequired>:
 8001830:	4b04      	ldr	r3, [pc, #16]	; (8001844 <chSchIsPreemptionRequired+0x14>)
 8001832:	681a      	ldr	r2, [r3, #0]
 8001834:	699b      	ldr	r3, [r3, #24]
 8001836:	6890      	ldr	r0, [r2, #8]
 8001838:	689b      	ldr	r3, [r3, #8]
 800183a:	4298      	cmp	r0, r3
 800183c:	bf94      	ite	ls
 800183e:	2000      	movls	r0, #0
 8001840:	2001      	movhi	r0, #1
 8001842:	4770      	bx	lr
 8001844:	20000ce8 	.word	0x20000ce8
	...

08001850 <chSchDoRescheduleBehind>:
 8001850:	4b0c      	ldr	r3, [pc, #48]	; (8001884 <chSchDoRescheduleBehind+0x34>)
 8001852:	6818      	ldr	r0, [r3, #0]
 8001854:	b430      	push	{r4, r5}
 8001856:	6802      	ldr	r2, [r0, #0]
 8001858:	699c      	ldr	r4, [r3, #24]
 800185a:	601a      	str	r2, [r3, #0]
 800185c:	68a1      	ldr	r1, [r4, #8]
 800185e:	6053      	str	r3, [r2, #4]
 8001860:	2501      	movs	r5, #1
 8001862:	2200      	movs	r2, #0
 8001864:	7705      	strb	r5, [r0, #28]
 8001866:	6198      	str	r0, [r3, #24]
 8001868:	7722      	strb	r2, [r4, #28]
 800186a:	681b      	ldr	r3, [r3, #0]
 800186c:	689a      	ldr	r2, [r3, #8]
 800186e:	4291      	cmp	r1, r2
 8001870:	d9fb      	bls.n	800186a <chSchDoRescheduleBehind+0x1a>
 8001872:	685a      	ldr	r2, [r3, #4]
 8001874:	4621      	mov	r1, r4
 8001876:	e9c4 3200 	strd	r3, r2, [r4]
 800187a:	6014      	str	r4, [r2, #0]
 800187c:	605c      	str	r4, [r3, #4]
 800187e:	bc30      	pop	{r4, r5}
 8001880:	f7fe bd06 	b.w	8000290 <_port_switch>
 8001884:	20000ce8 	.word	0x20000ce8
	...

08001890 <chSchDoRescheduleAhead>:
 8001890:	4b0c      	ldr	r3, [pc, #48]	; (80018c4 <chSchDoRescheduleAhead+0x34>)
 8001892:	6818      	ldr	r0, [r3, #0]
 8001894:	b430      	push	{r4, r5}
 8001896:	6802      	ldr	r2, [r0, #0]
 8001898:	699c      	ldr	r4, [r3, #24]
 800189a:	601a      	str	r2, [r3, #0]
 800189c:	68a1      	ldr	r1, [r4, #8]
 800189e:	6053      	str	r3, [r2, #4]
 80018a0:	2501      	movs	r5, #1
 80018a2:	2200      	movs	r2, #0
 80018a4:	7705      	strb	r5, [r0, #28]
 80018a6:	6198      	str	r0, [r3, #24]
 80018a8:	7722      	strb	r2, [r4, #28]
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	689a      	ldr	r2, [r3, #8]
 80018ae:	4291      	cmp	r1, r2
 80018b0:	d3fb      	bcc.n	80018aa <chSchDoRescheduleAhead+0x1a>
 80018b2:	685a      	ldr	r2, [r3, #4]
 80018b4:	4621      	mov	r1, r4
 80018b6:	e9c4 3200 	strd	r3, r2, [r4]
 80018ba:	6014      	str	r4, [r2, #0]
 80018bc:	605c      	str	r4, [r3, #4]
 80018be:	bc30      	pop	{r4, r5}
 80018c0:	f7fe bce6 	b.w	8000290 <_port_switch>
 80018c4:	20000ce8 	.word	0x20000ce8
	...

080018d0 <chSchRescheduleS>:
 80018d0:	4b04      	ldr	r3, [pc, #16]	; (80018e4 <chSchRescheduleS+0x14>)
 80018d2:	681a      	ldr	r2, [r3, #0]
 80018d4:	699b      	ldr	r3, [r3, #24]
 80018d6:	6892      	ldr	r2, [r2, #8]
 80018d8:	689b      	ldr	r3, [r3, #8]
 80018da:	429a      	cmp	r2, r3
 80018dc:	d800      	bhi.n	80018e0 <chSchRescheduleS+0x10>
 80018de:	4770      	bx	lr
 80018e0:	f7ff bfd6 	b.w	8001890 <chSchDoRescheduleAhead>
 80018e4:	20000ce8 	.word	0x20000ce8
	...

080018f0 <chSchDoReschedule>:
 80018f0:	f7ff bfce 	b.w	8001890 <chSchDoRescheduleAhead>
	...

08001900 <_thread_init>:
 8001900:	b470      	push	{r4, r5, r6}
 8001902:	4a0c      	ldr	r2, [pc, #48]	; (8001934 <_thread_init+0x34>)
 8001904:	63c1      	str	r1, [r0, #60]	; 0x3c
 8001906:	6954      	ldr	r4, [r2, #20]
 8001908:	6081      	str	r1, [r0, #8]
 800190a:	2501      	movs	r5, #1
 800190c:	2100      	movs	r1, #0
 800190e:	2602      	movs	r6, #2
 8001910:	7785      	strb	r5, [r0, #30]
 8001912:	e9c0 110d 	strd	r1, r1, [r0, #52]	; 0x34
 8001916:	f100 0524 	add.w	r5, r0, #36	; 0x24
 800191a:	6181      	str	r1, [r0, #24]
 800191c:	f100 0128 	add.w	r1, r0, #40	; 0x28
 8001920:	6144      	str	r4, [r0, #20]
 8001922:	6102      	str	r2, [r0, #16]
 8001924:	8386      	strh	r6, [r0, #28]
 8001926:	6120      	str	r0, [r4, #16]
 8001928:	e9c0 5109 	strd	r5, r1, [r0, #36]	; 0x24
 800192c:	6150      	str	r0, [r2, #20]
 800192e:	62c1      	str	r1, [r0, #44]	; 0x2c
 8001930:	bc70      	pop	{r4, r5, r6}
 8001932:	4770      	bx	lr
 8001934:	20000ce8 	.word	0x20000ce8
	...

08001940 <chThdCreateI>:
 8001940:	b4f0      	push	{r4, r5, r6, r7}
 8001942:	4d10      	ldr	r5, [pc, #64]	; (8001984 <chThdCreateI+0x44>)
 8001944:	3924      	subs	r1, #36	; 0x24
 8001946:	1846      	adds	r6, r0, r1
 8001948:	696f      	ldr	r7, [r5, #20]
 800194a:	60c6      	str	r6, [r0, #12]
 800194c:	5043      	str	r3, [r0, r1]
 800194e:	9b04      	ldr	r3, [sp, #16]
 8001950:	6073      	str	r3, [r6, #4]
 8001952:	4b0d      	ldr	r3, [pc, #52]	; (8001988 <chThdCreateI+0x48>)
 8001954:	6233      	str	r3, [r6, #32]
 8001956:	2302      	movs	r3, #2
 8001958:	6082      	str	r2, [r0, #8]
 800195a:	2601      	movs	r6, #1
 800195c:	63c2      	str	r2, [r0, #60]	; 0x3c
 800195e:	8383      	strh	r3, [r0, #28]
 8001960:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8001964:	2300      	movs	r3, #0
 8001966:	f100 0228 	add.w	r2, r0, #40	; 0x28
 800196a:	e9c0 5704 	strd	r5, r7, [r0, #16]
 800196e:	7786      	strb	r6, [r0, #30]
 8001970:	e9c0 330d 	strd	r3, r3, [r0, #52]	; 0x34
 8001974:	6183      	str	r3, [r0, #24]
 8001976:	6138      	str	r0, [r7, #16]
 8001978:	6168      	str	r0, [r5, #20]
 800197a:	6241      	str	r1, [r0, #36]	; 0x24
 800197c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8001980:	bcf0      	pop	{r4, r5, r6, r7}
 8001982:	4770      	bx	lr
 8001984:	20000ce8 	.word	0x20000ce8
 8001988:	080002a1 	.word	0x080002a1
 800198c:	00000000 	.word	0x00000000

08001990 <chThdCreateStatic>:
 8001990:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001992:	4604      	mov	r4, r0
 8001994:	2520      	movs	r5, #32
 8001996:	f385 8811 	msr	BASEPRI, r5
 800199a:	4e13      	ldr	r6, [pc, #76]	; (80019e8 <chThdCreateStatic+0x58>)
 800199c:	3924      	subs	r1, #36	; 0x24
 800199e:	1845      	adds	r5, r0, r1
 80019a0:	6977      	ldr	r7, [r6, #20]
 80019a2:	60c5      	str	r5, [r0, #12]
 80019a4:	5043      	str	r3, [r0, r1]
 80019a6:	9b06      	ldr	r3, [sp, #24]
 80019a8:	606b      	str	r3, [r5, #4]
 80019aa:	4910      	ldr	r1, [pc, #64]	; (80019ec <chThdCreateStatic+0x5c>)
 80019ac:	6229      	str	r1, [r5, #32]
 80019ae:	2302      	movs	r3, #2
 80019b0:	2500      	movs	r5, #0
 80019b2:	8383      	strh	r3, [r0, #28]
 80019b4:	f100 0c24 	add.w	ip, r0, #36	; 0x24
 80019b8:	f100 0328 	add.w	r3, r0, #40	; 0x28
 80019bc:	2101      	movs	r1, #1
 80019be:	6082      	str	r2, [r0, #8]
 80019c0:	7781      	strb	r1, [r0, #30]
 80019c2:	e9c0 6704 	strd	r6, r7, [r0, #16]
 80019c6:	63c2      	str	r2, [r0, #60]	; 0x3c
 80019c8:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 80019cc:	6185      	str	r5, [r0, #24]
 80019ce:	4629      	mov	r1, r5
 80019d0:	6138      	str	r0, [r7, #16]
 80019d2:	e9c0 c309 	strd	ip, r3, [r0, #36]	; 0x24
 80019d6:	62c3      	str	r3, [r0, #44]	; 0x2c
 80019d8:	6170      	str	r0, [r6, #20]
 80019da:	f7ff fef9 	bl	80017d0 <chSchWakeupS>
 80019de:	f385 8811 	msr	BASEPRI, r5
 80019e2:	4620      	mov	r0, r4
 80019e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80019e6:	bf00      	nop
 80019e8:	20000ce8 	.word	0x20000ce8
 80019ec:	080002a1 	.word	0x080002a1

080019f0 <chThdStart>:
 80019f0:	b508      	push	{r3, lr}
 80019f2:	2320      	movs	r3, #32
 80019f4:	f383 8811 	msr	BASEPRI, r3
 80019f8:	f7ff fe92 	bl	8001720 <chSchReadyI>
 80019fc:	2300      	movs	r3, #0
 80019fe:	f383 8811 	msr	BASEPRI, r3
 8001a02:	bd08      	pop	{r3, pc}
	...

08001a10 <chThdSetPriority>:
 8001a10:	b510      	push	{r4, lr}
 8001a12:	2320      	movs	r3, #32
 8001a14:	f383 8811 	msr	BASEPRI, r3
 8001a18:	4b08      	ldr	r3, [pc, #32]	; (8001a3c <chThdSetPriority+0x2c>)
 8001a1a:	699b      	ldr	r3, [r3, #24]
 8001a1c:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8001a1e:	6899      	ldr	r1, [r3, #8]
 8001a20:	42a1      	cmp	r1, r4
 8001a22:	d001      	beq.n	8001a28 <chThdSetPriority+0x18>
 8001a24:	4281      	cmp	r1, r0
 8001a26:	d200      	bcs.n	8001a2a <chThdSetPriority+0x1a>
 8001a28:	6098      	str	r0, [r3, #8]
 8001a2a:	63d8      	str	r0, [r3, #60]	; 0x3c
 8001a2c:	f7ff ff50 	bl	80018d0 <chSchRescheduleS>
 8001a30:	2300      	movs	r3, #0
 8001a32:	f383 8811 	msr	BASEPRI, r3
 8001a36:	4620      	mov	r0, r4
 8001a38:	bd10      	pop	{r4, pc}
 8001a3a:	bf00      	nop
 8001a3c:	20000ce8 	.word	0x20000ce8

08001a40 <chThdTerminate>:
 8001a40:	2320      	movs	r3, #32
 8001a42:	f383 8811 	msr	BASEPRI, r3
 8001a46:	7f43      	ldrb	r3, [r0, #29]
 8001a48:	f043 0304 	orr.w	r3, r3, #4
 8001a4c:	7743      	strb	r3, [r0, #29]
 8001a4e:	2300      	movs	r3, #0
 8001a50:	f383 8811 	msr	BASEPRI, r3
 8001a54:	4770      	bx	lr
 8001a56:	bf00      	nop
	...

08001a60 <chThdSleep>:
 8001a60:	b508      	push	{r3, lr}
 8001a62:	4601      	mov	r1, r0
 8001a64:	2320      	movs	r3, #32
 8001a66:	f383 8811 	msr	BASEPRI, r3
 8001a6a:	2008      	movs	r0, #8
 8001a6c:	f7ff fe88 	bl	8001780 <chSchGoSleepTimeoutS>
 8001a70:	2300      	movs	r3, #0
 8001a72:	f383 8811 	msr	BASEPRI, r3
 8001a76:	bd08      	pop	{r3, pc}
	...

08001a80 <chThdSleepUntil>:
 8001a80:	b508      	push	{r3, lr}
 8001a82:	2320      	movs	r3, #32
 8001a84:	f383 8811 	msr	BASEPRI, r3
 8001a88:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001a8c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001a8e:	1a41      	subs	r1, r0, r1
 8001a90:	d002      	beq.n	8001a98 <chThdSleepUntil+0x18>
 8001a92:	2008      	movs	r0, #8
 8001a94:	f7ff fe74 	bl	8001780 <chSchGoSleepTimeoutS>
 8001a98:	2300      	movs	r3, #0
 8001a9a:	f383 8811 	msr	BASEPRI, r3
 8001a9e:	bd08      	pop	{r3, pc}

08001aa0 <chThdYield>:
 8001aa0:	b508      	push	{r3, lr}
 8001aa2:	2320      	movs	r3, #32
 8001aa4:	f383 8811 	msr	BASEPRI, r3
 8001aa8:	4b06      	ldr	r3, [pc, #24]	; (8001ac4 <chThdYield+0x24>)
 8001aaa:	681a      	ldr	r2, [r3, #0]
 8001aac:	699b      	ldr	r3, [r3, #24]
 8001aae:	6892      	ldr	r2, [r2, #8]
 8001ab0:	689b      	ldr	r3, [r3, #8]
 8001ab2:	429a      	cmp	r2, r3
 8001ab4:	d301      	bcc.n	8001aba <chThdYield+0x1a>
 8001ab6:	f7ff fecb 	bl	8001850 <chSchDoRescheduleBehind>
 8001aba:	2300      	movs	r3, #0
 8001abc:	f383 8811 	msr	BASEPRI, r3
 8001ac0:	bd08      	pop	{r3, pc}
 8001ac2:	bf00      	nop
 8001ac4:	20000ce8 	.word	0x20000ce8
	...

08001ad0 <chThdExitS>:
 8001ad0:	b538      	push	{r3, r4, r5, lr}
 8001ad2:	4b0e      	ldr	r3, [pc, #56]	; (8001b0c <chThdExitS+0x3c>)
 8001ad4:	699c      	ldr	r4, [r3, #24]
 8001ad6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ad8:	6220      	str	r0, [r4, #32]
 8001ada:	f104 0524 	add.w	r5, r4, #36	; 0x24
 8001ade:	42ab      	cmp	r3, r5
 8001ae0:	d007      	beq.n	8001af2 <chThdExitS+0x22>
 8001ae2:	681a      	ldr	r2, [r3, #0]
 8001ae4:	6262      	str	r2, [r4, #36]	; 0x24
 8001ae6:	4618      	mov	r0, r3
 8001ae8:	f7ff fe1a 	bl	8001720 <chSchReadyI>
 8001aec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001aee:	42ab      	cmp	r3, r5
 8001af0:	d1f7      	bne.n	8001ae2 <chThdExitS+0x12>
 8001af2:	7f63      	ldrb	r3, [r4, #29]
 8001af4:	079b      	lsls	r3, r3, #30
 8001af6:	d104      	bne.n	8001b02 <chThdExitS+0x32>
 8001af8:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 8001afc:	611a      	str	r2, [r3, #16]
 8001afe:	6922      	ldr	r2, [r4, #16]
 8001b00:	6153      	str	r3, [r2, #20]
 8001b02:	200f      	movs	r0, #15
 8001b04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001b08:	f7ff be22 	b.w	8001750 <chSchGoSleepS>
 8001b0c:	20000ce8 	.word	0x20000ce8

08001b10 <chThdExit>:
 8001b10:	2320      	movs	r3, #32
 8001b12:	f383 8811 	msr	BASEPRI, r3
 8001b16:	f7ff bfdb 	b.w	8001ad0 <chThdExitS>
 8001b1a:	bf00      	nop
 8001b1c:	0000      	movs	r0, r0
	...

08001b20 <chThdWait>:
 8001b20:	b538      	push	{r3, r4, r5, lr}
 8001b22:	4604      	mov	r4, r0
 8001b24:	2320      	movs	r3, #32
 8001b26:	f383 8811 	msr	BASEPRI, r3
 8001b2a:	7f03      	ldrb	r3, [r0, #28]
 8001b2c:	2b0f      	cmp	r3, #15
 8001b2e:	d007      	beq.n	8001b40 <chThdWait+0x20>
 8001b30:	4b08      	ldr	r3, [pc, #32]	; (8001b54 <chThdWait+0x34>)
 8001b32:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8001b34:	699b      	ldr	r3, [r3, #24]
 8001b36:	2009      	movs	r0, #9
 8001b38:	601a      	str	r2, [r3, #0]
 8001b3a:	6263      	str	r3, [r4, #36]	; 0x24
 8001b3c:	f7ff fe08 	bl	8001750 <chSchGoSleepS>
 8001b40:	6a25      	ldr	r5, [r4, #32]
 8001b42:	2300      	movs	r3, #0
 8001b44:	f383 8811 	msr	BASEPRI, r3
 8001b48:	4620      	mov	r0, r4
 8001b4a:	f000 f8a9 	bl	8001ca0 <chThdRelease>
 8001b4e:	4628      	mov	r0, r5
 8001b50:	bd38      	pop	{r3, r4, r5, pc}
 8001b52:	bf00      	nop
 8001b54:	20000ce8 	.word	0x20000ce8
	...

08001b60 <chThdEnqueueTimeoutS>:
 8001b60:	b161      	cbz	r1, 8001b7c <chThdEnqueueTimeoutS+0x1c>
 8001b62:	4b08      	ldr	r3, [pc, #32]	; (8001b84 <chThdEnqueueTimeoutS+0x24>)
 8001b64:	b410      	push	{r4}
 8001b66:	4602      	mov	r2, r0
 8001b68:	6844      	ldr	r4, [r0, #4]
 8001b6a:	699b      	ldr	r3, [r3, #24]
 8001b6c:	2004      	movs	r0, #4
 8001b6e:	e9c3 2400 	strd	r2, r4, [r3]
 8001b72:	6023      	str	r3, [r4, #0]
 8001b74:	6053      	str	r3, [r2, #4]
 8001b76:	bc10      	pop	{r4}
 8001b78:	f7ff be02 	b.w	8001780 <chSchGoSleepTimeoutS>
 8001b7c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001b80:	4770      	bx	lr
 8001b82:	bf00      	nop
 8001b84:	20000ce8 	.word	0x20000ce8
	...

08001b90 <chThdDequeueNextI>:
 8001b90:	6802      	ldr	r2, [r0, #0]
 8001b92:	4290      	cmp	r0, r2
 8001b94:	d009      	beq.n	8001baa <chThdDequeueNextI+0x1a>
 8001b96:	b410      	push	{r4}
 8001b98:	6814      	ldr	r4, [r2, #0]
 8001b9a:	6004      	str	r4, [r0, #0]
 8001b9c:	4603      	mov	r3, r0
 8001b9e:	6063      	str	r3, [r4, #4]
 8001ba0:	4610      	mov	r0, r2
 8001ba2:	6211      	str	r1, [r2, #32]
 8001ba4:	bc10      	pop	{r4}
 8001ba6:	f7ff bdbb 	b.w	8001720 <chSchReadyI>
 8001baa:	4770      	bx	lr
 8001bac:	0000      	movs	r0, r0
	...

08001bb0 <chThdDequeueAllI>:
 8001bb0:	b538      	push	{r3, r4, r5, lr}
 8001bb2:	6803      	ldr	r3, [r0, #0]
 8001bb4:	4298      	cmp	r0, r3
 8001bb6:	d00b      	beq.n	8001bd0 <chThdDequeueAllI+0x20>
 8001bb8:	4604      	mov	r4, r0
 8001bba:	460d      	mov	r5, r1
 8001bbc:	681a      	ldr	r2, [r3, #0]
 8001bbe:	6022      	str	r2, [r4, #0]
 8001bc0:	4618      	mov	r0, r3
 8001bc2:	6054      	str	r4, [r2, #4]
 8001bc4:	621d      	str	r5, [r3, #32]
 8001bc6:	f7ff fdab 	bl	8001720 <chSchReadyI>
 8001bca:	6823      	ldr	r3, [r4, #0]
 8001bcc:	429c      	cmp	r4, r3
 8001bce:	d1f5      	bne.n	8001bbc <chThdDequeueAllI+0xc>
 8001bd0:	bd38      	pop	{r3, r4, r5, pc}
 8001bd2:	bf00      	nop
	...

08001be0 <chTMStartMeasurementX>:
 8001be0:	4b01      	ldr	r3, [pc, #4]	; (8001be8 <chTMStartMeasurementX+0x8>)
 8001be2:	685b      	ldr	r3, [r3, #4]
 8001be4:	6083      	str	r3, [r0, #8]
 8001be6:	4770      	bx	lr
 8001be8:	e0001000 	.word	0xe0001000
 8001bec:	00000000 	.word	0x00000000

08001bf0 <chTMStopMeasurementX>:
 8001bf0:	4b0f      	ldr	r3, [pc, #60]	; (8001c30 <chTMStopMeasurementX+0x40>)
 8001bf2:	4a10      	ldr	r2, [pc, #64]	; (8001c34 <chTMStopMeasurementX+0x44>)
 8001bf4:	685b      	ldr	r3, [r3, #4]
 8001bf6:	68c1      	ldr	r1, [r0, #12]
 8001bf8:	b4f0      	push	{r4, r5, r6, r7}
 8001bfa:	6884      	ldr	r4, [r0, #8]
 8001bfc:	6f56      	ldr	r6, [r2, #116]	; 0x74
 8001bfe:	6842      	ldr	r2, [r0, #4]
 8001c00:	1b1b      	subs	r3, r3, r4
 8001c02:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
 8001c06:	1b9b      	subs	r3, r3, r6
 8001c08:	18e6      	adds	r6, r4, r3
 8001c0a:	f145 0700 	adc.w	r7, r5, #0
 8001c0e:	3101      	adds	r1, #1
 8001c10:	4293      	cmp	r3, r2
 8001c12:	e9c0 3102 	strd	r3, r1, [r0, #8]
 8001c16:	e9c0 6704 	strd	r6, r7, [r0, #16]
 8001c1a:	d805      	bhi.n	8001c28 <chTMStopMeasurementX+0x38>
 8001c1c:	6802      	ldr	r2, [r0, #0]
 8001c1e:	4293      	cmp	r3, r2
 8001c20:	bf38      	it	cc
 8001c22:	6003      	strcc	r3, [r0, #0]
 8001c24:	bcf0      	pop	{r4, r5, r6, r7}
 8001c26:	4770      	bx	lr
 8001c28:	6043      	str	r3, [r0, #4]
 8001c2a:	bcf0      	pop	{r4, r5, r6, r7}
 8001c2c:	4770      	bx	lr
 8001c2e:	bf00      	nop
 8001c30:	e0001000 	.word	0xe0001000
 8001c34:	20000ce8 	.word	0x20000ce8
	...

08001c40 <_tm_init>:
 8001c40:	b510      	push	{r4, lr}
 8001c42:	4c0c      	ldr	r4, [pc, #48]	; (8001c74 <_tm_init+0x34>)
 8001c44:	b086      	sub	sp, #24
 8001c46:	2300      	movs	r3, #0
 8001c48:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001c4c:	2200      	movs	r2, #0
 8001c4e:	4668      	mov	r0, sp
 8001c50:	6763      	str	r3, [r4, #116]	; 0x74
 8001c52:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8001c56:	9303      	str	r3, [sp, #12]
 8001c58:	2300      	movs	r3, #0
 8001c5a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001c5e:	9100      	str	r1, [sp, #0]
 8001c60:	f7ff ffbe 	bl	8001be0 <chTMStartMeasurementX>
 8001c64:	4668      	mov	r0, sp
 8001c66:	f7ff ffc3 	bl	8001bf0 <chTMStopMeasurementX>
 8001c6a:	9b02      	ldr	r3, [sp, #8]
 8001c6c:	6763      	str	r3, [r4, #116]	; 0x74
 8001c6e:	b006      	add	sp, #24
 8001c70:	bd10      	pop	{r4, pc}
 8001c72:	bf00      	nop
 8001c74:	20000ce8 	.word	0x20000ce8
	...

08001c80 <chThdAddRef>:
 8001c80:	2320      	movs	r3, #32
 8001c82:	f383 8811 	msr	BASEPRI, r3
 8001c86:	7f83      	ldrb	r3, [r0, #30]
 8001c88:	3301      	adds	r3, #1
 8001c8a:	7783      	strb	r3, [r0, #30]
 8001c8c:	2300      	movs	r3, #0
 8001c8e:	f383 8811 	msr	BASEPRI, r3
 8001c92:	4770      	bx	lr
	...

08001ca0 <chThdRelease>:
 8001ca0:	4601      	mov	r1, r0
 8001ca2:	2320      	movs	r3, #32
 8001ca4:	f383 8811 	msr	BASEPRI, r3
 8001ca8:	7f83      	ldrb	r3, [r0, #30]
 8001caa:	3b01      	subs	r3, #1
 8001cac:	b2db      	uxtb	r3, r3
 8001cae:	7783      	strb	r3, [r0, #30]
 8001cb0:	2200      	movs	r2, #0
 8001cb2:	f382 8811 	msr	BASEPRI, r2
 8001cb6:	b913      	cbnz	r3, 8001cbe <chThdRelease+0x1e>
 8001cb8:	7f03      	ldrb	r3, [r0, #28]
 8001cba:	2b0f      	cmp	r3, #15
 8001cbc:	d000      	beq.n	8001cc0 <chThdRelease+0x20>
 8001cbe:	4770      	bx	lr
 8001cc0:	7f43      	ldrb	r3, [r0, #29]
 8001cc2:	f003 0303 	and.w	r3, r3, #3
 8001cc6:	2b01      	cmp	r3, #1
 8001cc8:	d002      	beq.n	8001cd0 <chThdRelease+0x30>
 8001cca:	2b02      	cmp	r3, #2
 8001ccc:	d007      	beq.n	8001cde <chThdRelease+0x3e>
 8001cce:	4770      	bx	lr
 8001cd0:	e9d0 2304 	ldrd	r2, r3, [r0, #16]
 8001cd4:	611a      	str	r2, [r3, #16]
 8001cd6:	6902      	ldr	r2, [r0, #16]
 8001cd8:	6153      	str	r3, [r2, #20]
 8001cda:	f001 b889 	b.w	8002df0 <chHeapFree>
 8001cde:	e9d0 2304 	ldrd	r2, r3, [r0, #16]
 8001ce2:	611a      	str	r2, [r3, #16]
 8001ce4:	6902      	ldr	r2, [r0, #16]
 8001ce6:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8001ce8:	6153      	str	r3, [r2, #20]
 8001cea:	f001 b929 	b.w	8002f40 <chPoolFree>
 8001cee:	bf00      	nop

08001cf0 <chThdCreateFromHeap>:
 8001cf0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cf2:	b083      	sub	sp, #12
 8001cf4:	4616      	mov	r6, r2
 8001cf6:	461f      	mov	r7, r3
 8001cf8:	460d      	mov	r5, r1
 8001cfa:	f001 f831 	bl	8002d60 <chHeapAlloc>
 8001cfe:	b1a8      	cbz	r0, 8001d2c <chThdCreateFromHeap+0x3c>
 8001d00:	2320      	movs	r3, #32
 8001d02:	f383 8811 	msr	BASEPRI, r3
 8001d06:	9b08      	ldr	r3, [sp, #32]
 8001d08:	9300      	str	r3, [sp, #0]
 8001d0a:	4632      	mov	r2, r6
 8001d0c:	463b      	mov	r3, r7
 8001d0e:	4629      	mov	r1, r5
 8001d10:	f7ff fe16 	bl	8001940 <chThdCreateI>
 8001d14:	2301      	movs	r3, #1
 8001d16:	7743      	strb	r3, [r0, #29]
 8001d18:	2100      	movs	r1, #0
 8001d1a:	4604      	mov	r4, r0
 8001d1c:	f7ff fd58 	bl	80017d0 <chSchWakeupS>
 8001d20:	2300      	movs	r3, #0
 8001d22:	f383 8811 	msr	BASEPRI, r3
 8001d26:	4620      	mov	r0, r4
 8001d28:	b003      	add	sp, #12
 8001d2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d2c:	4604      	mov	r4, r0
 8001d2e:	e7fa      	b.n	8001d26 <chThdCreateFromHeap+0x36>

08001d30 <chThdCreateFromMemoryPool>:
 8001d30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001d34:	b082      	sub	sp, #8
 8001d36:	460e      	mov	r6, r1
 8001d38:	4617      	mov	r7, r2
 8001d3a:	4698      	mov	r8, r3
 8001d3c:	4605      	mov	r5, r0
 8001d3e:	f001 f8e7 	bl	8002f10 <chPoolAlloc>
 8001d42:	b1b8      	cbz	r0, 8001d74 <chThdCreateFromMemoryPool+0x44>
 8001d44:	2320      	movs	r3, #32
 8001d46:	f383 8811 	msr	BASEPRI, r3
 8001d4a:	6869      	ldr	r1, [r5, #4]
 8001d4c:	f8cd 8000 	str.w	r8, [sp]
 8001d50:	463b      	mov	r3, r7
 8001d52:	4632      	mov	r2, r6
 8001d54:	f7ff fdf4 	bl	8001940 <chThdCreateI>
 8001d58:	2302      	movs	r3, #2
 8001d5a:	7743      	strb	r3, [r0, #29]
 8001d5c:	6405      	str	r5, [r0, #64]	; 0x40
 8001d5e:	2100      	movs	r1, #0
 8001d60:	4604      	mov	r4, r0
 8001d62:	f7ff fd35 	bl	80017d0 <chSchWakeupS>
 8001d66:	2300      	movs	r3, #0
 8001d68:	f383 8811 	msr	BASEPRI, r3
 8001d6c:	4620      	mov	r0, r4
 8001d6e:	b002      	add	sp, #8
 8001d70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001d74:	4604      	mov	r4, r0
 8001d76:	e7f9      	b.n	8001d6c <chThdCreateFromMemoryPool+0x3c>
	...

08001d80 <chRegFirstThread>:
 8001d80:	2320      	movs	r3, #32
 8001d82:	f383 8811 	msr	BASEPRI, r3
 8001d86:	4b04      	ldr	r3, [pc, #16]	; (8001d98 <chRegFirstThread+0x18>)
 8001d88:	6918      	ldr	r0, [r3, #16]
 8001d8a:	7f83      	ldrb	r3, [r0, #30]
 8001d8c:	3301      	adds	r3, #1
 8001d8e:	7783      	strb	r3, [r0, #30]
 8001d90:	2300      	movs	r3, #0
 8001d92:	f383 8811 	msr	BASEPRI, r3
 8001d96:	4770      	bx	lr
 8001d98:	20000ce8 	.word	0x20000ce8
 8001d9c:	00000000 	.word	0x00000000

08001da0 <chRegNextThread>:
 8001da0:	b510      	push	{r4, lr}
 8001da2:	2320      	movs	r3, #32
 8001da4:	f383 8811 	msr	BASEPRI, r3
 8001da8:	4b07      	ldr	r3, [pc, #28]	; (8001dc8 <chRegNextThread+0x28>)
 8001daa:	6904      	ldr	r4, [r0, #16]
 8001dac:	429c      	cmp	r4, r3
 8001dae:	bf1d      	ittte	ne
 8001db0:	7fa3      	ldrbne	r3, [r4, #30]
 8001db2:	3301      	addne	r3, #1
 8001db4:	77a3      	strbne	r3, [r4, #30]
 8001db6:	2400      	moveq	r4, #0
 8001db8:	2300      	movs	r3, #0
 8001dba:	f383 8811 	msr	BASEPRI, r3
 8001dbe:	f7ff ff6f 	bl	8001ca0 <chThdRelease>
 8001dc2:	4620      	mov	r0, r4
 8001dc4:	bd10      	pop	{r4, pc}
 8001dc6:	bf00      	nop
 8001dc8:	20000ce8 	.word	0x20000ce8
 8001dcc:	00000000 	.word	0x00000000

08001dd0 <chSemObjectInit>:
 8001dd0:	e9c0 0000 	strd	r0, r0, [r0]
 8001dd4:	6081      	str	r1, [r0, #8]
 8001dd6:	4770      	bx	lr
	...

08001de0 <chSemResetI>:
 8001de0:	b570      	push	{r4, r5, r6, lr}
 8001de2:	6885      	ldr	r5, [r0, #8]
 8001de4:	6081      	str	r1, [r0, #8]
 8001de6:	3501      	adds	r5, #1
 8001de8:	2d00      	cmp	r5, #0
 8001dea:	dc0c      	bgt.n	8001e06 <chSemResetI+0x26>
 8001dec:	4604      	mov	r4, r0
 8001dee:	f06f 0601 	mvn.w	r6, #1
 8001df2:	6860      	ldr	r0, [r4, #4]
 8001df4:	6843      	ldr	r3, [r0, #4]
 8001df6:	6063      	str	r3, [r4, #4]
 8001df8:	601c      	str	r4, [r3, #0]
 8001dfa:	f7ff fc91 	bl	8001720 <chSchReadyI>
 8001dfe:	3501      	adds	r5, #1
 8001e00:	2d01      	cmp	r5, #1
 8001e02:	6206      	str	r6, [r0, #32]
 8001e04:	d1f5      	bne.n	8001df2 <chSemResetI+0x12>
 8001e06:	bd70      	pop	{r4, r5, r6, pc}
	...

08001e10 <chSemReset>:
 8001e10:	b508      	push	{r3, lr}
 8001e12:	2320      	movs	r3, #32
 8001e14:	f383 8811 	msr	BASEPRI, r3
 8001e18:	f7ff ffe2 	bl	8001de0 <chSemResetI>
 8001e1c:	f7ff fd58 	bl	80018d0 <chSchRescheduleS>
 8001e20:	2300      	movs	r3, #0
 8001e22:	f383 8811 	msr	BASEPRI, r3
 8001e26:	bd08      	pop	{r3, pc}
	...

08001e30 <chSemWait>:
 8001e30:	2320      	movs	r3, #32
 8001e32:	f383 8811 	msr	BASEPRI, r3
 8001e36:	6883      	ldr	r3, [r0, #8]
 8001e38:	3b01      	subs	r3, #1
 8001e3a:	2b00      	cmp	r3, #0
 8001e3c:	6083      	str	r3, [r0, #8]
 8001e3e:	db04      	blt.n	8001e4a <chSemWait+0x1a>
 8001e40:	2000      	movs	r0, #0
 8001e42:	2300      	movs	r3, #0
 8001e44:	f383 8811 	msr	BASEPRI, r3
 8001e48:	4770      	bx	lr
 8001e4a:	b510      	push	{r4, lr}
 8001e4c:	4c08      	ldr	r4, [pc, #32]	; (8001e70 <chSemWait+0x40>)
 8001e4e:	6841      	ldr	r1, [r0, #4]
 8001e50:	69a2      	ldr	r2, [r4, #24]
 8001e52:	4603      	mov	r3, r0
 8001e54:	6213      	str	r3, [r2, #32]
 8001e56:	e9c2 3100 	strd	r3, r1, [r2]
 8001e5a:	2005      	movs	r0, #5
 8001e5c:	600a      	str	r2, [r1, #0]
 8001e5e:	605a      	str	r2, [r3, #4]
 8001e60:	f7ff fc76 	bl	8001750 <chSchGoSleepS>
 8001e64:	69a3      	ldr	r3, [r4, #24]
 8001e66:	6a18      	ldr	r0, [r3, #32]
 8001e68:	2300      	movs	r3, #0
 8001e6a:	f383 8811 	msr	BASEPRI, r3
 8001e6e:	bd10      	pop	{r4, pc}
 8001e70:	20000ce8 	.word	0x20000ce8
	...

08001e80 <chSemWaitTimeout>:
 8001e80:	2320      	movs	r3, #32
 8001e82:	f383 8811 	msr	BASEPRI, r3
 8001e86:	6882      	ldr	r2, [r0, #8]
 8001e88:	1e53      	subs	r3, r2, #1
 8001e8a:	2b00      	cmp	r3, #0
 8001e8c:	6083      	str	r3, [r0, #8]
 8001e8e:	db04      	blt.n	8001e9a <chSemWaitTimeout+0x1a>
 8001e90:	2000      	movs	r0, #0
 8001e92:	2300      	movs	r3, #0
 8001e94:	f383 8811 	msr	BASEPRI, r3
 8001e98:	4770      	bx	lr
 8001e9a:	b510      	push	{r4, lr}
 8001e9c:	b179      	cbz	r1, 8001ebe <chSemWaitTimeout+0x3e>
 8001e9e:	4a0a      	ldr	r2, [pc, #40]	; (8001ec8 <chSemWaitTimeout+0x48>)
 8001ea0:	6844      	ldr	r4, [r0, #4]
 8001ea2:	6992      	ldr	r2, [r2, #24]
 8001ea4:	4603      	mov	r3, r0
 8001ea6:	6213      	str	r3, [r2, #32]
 8001ea8:	e9c2 3400 	strd	r3, r4, [r2]
 8001eac:	2005      	movs	r0, #5
 8001eae:	6022      	str	r2, [r4, #0]
 8001eb0:	605a      	str	r2, [r3, #4]
 8001eb2:	f7ff fc65 	bl	8001780 <chSchGoSleepTimeoutS>
 8001eb6:	2300      	movs	r3, #0
 8001eb8:	f383 8811 	msr	BASEPRI, r3
 8001ebc:	bd10      	pop	{r4, pc}
 8001ebe:	6082      	str	r2, [r0, #8]
 8001ec0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001ec4:	e7f7      	b.n	8001eb6 <chSemWaitTimeout+0x36>
 8001ec6:	bf00      	nop
 8001ec8:	20000ce8 	.word	0x20000ce8
 8001ecc:	00000000 	.word	0x00000000

08001ed0 <chSemWaitTimeoutS>:
 8001ed0:	4603      	mov	r3, r0
 8001ed2:	6880      	ldr	r0, [r0, #8]
 8001ed4:	1e42      	subs	r2, r0, #1
 8001ed6:	2a00      	cmp	r2, #0
 8001ed8:	609a      	str	r2, [r3, #8]
 8001eda:	db01      	blt.n	8001ee0 <chSemWaitTimeoutS+0x10>
 8001edc:	2000      	movs	r0, #0
 8001ede:	4770      	bx	lr
 8001ee0:	b410      	push	{r4}
 8001ee2:	b159      	cbz	r1, 8001efc <chSemWaitTimeoutS+0x2c>
 8001ee4:	4a08      	ldr	r2, [pc, #32]	; (8001f08 <chSemWaitTimeoutS+0x38>)
 8001ee6:	685c      	ldr	r4, [r3, #4]
 8001ee8:	6992      	ldr	r2, [r2, #24]
 8001eea:	2005      	movs	r0, #5
 8001eec:	e9c2 3400 	strd	r3, r4, [r2]
 8001ef0:	6213      	str	r3, [r2, #32]
 8001ef2:	6022      	str	r2, [r4, #0]
 8001ef4:	605a      	str	r2, [r3, #4]
 8001ef6:	bc10      	pop	{r4}
 8001ef8:	f7ff bc42 	b.w	8001780 <chSchGoSleepTimeoutS>
 8001efc:	6098      	str	r0, [r3, #8]
 8001efe:	bc10      	pop	{r4}
 8001f00:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001f04:	4770      	bx	lr
 8001f06:	bf00      	nop
 8001f08:	20000ce8 	.word	0x20000ce8
 8001f0c:	00000000 	.word	0x00000000

08001f10 <chSemSignal>:
 8001f10:	b508      	push	{r3, lr}
 8001f12:	2320      	movs	r3, #32
 8001f14:	f383 8811 	msr	BASEPRI, r3
 8001f18:	6883      	ldr	r3, [r0, #8]
 8001f1a:	3301      	adds	r3, #1
 8001f1c:	2b00      	cmp	r3, #0
 8001f1e:	6083      	str	r3, [r0, #8]
 8001f20:	dd03      	ble.n	8001f2a <chSemSignal+0x1a>
 8001f22:	2300      	movs	r3, #0
 8001f24:	f383 8811 	msr	BASEPRI, r3
 8001f28:	bd08      	pop	{r3, pc}
 8001f2a:	4603      	mov	r3, r0
 8001f2c:	6800      	ldr	r0, [r0, #0]
 8001f2e:	6802      	ldr	r2, [r0, #0]
 8001f30:	601a      	str	r2, [r3, #0]
 8001f32:	2100      	movs	r1, #0
 8001f34:	6053      	str	r3, [r2, #4]
 8001f36:	f7ff fc4b 	bl	80017d0 <chSchWakeupS>
 8001f3a:	2300      	movs	r3, #0
 8001f3c:	f383 8811 	msr	BASEPRI, r3
 8001f40:	bd08      	pop	{r3, pc}
 8001f42:	bf00      	nop
	...

08001f50 <chSemSignalI>:
 8001f50:	6883      	ldr	r3, [r0, #8]
 8001f52:	3301      	adds	r3, #1
 8001f54:	2b00      	cmp	r3, #0
 8001f56:	6083      	str	r3, [r0, #8]
 8001f58:	dd00      	ble.n	8001f5c <chSemSignalI+0xc>
 8001f5a:	4770      	bx	lr
 8001f5c:	6803      	ldr	r3, [r0, #0]
 8001f5e:	681a      	ldr	r2, [r3, #0]
 8001f60:	6002      	str	r2, [r0, #0]
 8001f62:	2100      	movs	r1, #0
 8001f64:	6050      	str	r0, [r2, #4]
 8001f66:	4618      	mov	r0, r3
 8001f68:	6219      	str	r1, [r3, #32]
 8001f6a:	f7ff bbd9 	b.w	8001720 <chSchReadyI>
 8001f6e:	bf00      	nop

08001f70 <chSemAddCounterI>:
 8001f70:	b570      	push	{r4, r5, r6, lr}
 8001f72:	1e0c      	subs	r4, r1, #0
 8001f74:	dd12      	ble.n	8001f9c <chSemAddCounterI+0x2c>
 8001f76:	4605      	mov	r5, r0
 8001f78:	2600      	movs	r6, #0
 8001f7a:	e001      	b.n	8001f80 <chSemAddCounterI+0x10>
 8001f7c:	3c01      	subs	r4, #1
 8001f7e:	d00d      	beq.n	8001f9c <chSemAddCounterI+0x2c>
 8001f80:	68ab      	ldr	r3, [r5, #8]
 8001f82:	3301      	adds	r3, #1
 8001f84:	2b00      	cmp	r3, #0
 8001f86:	60ab      	str	r3, [r5, #8]
 8001f88:	dcf8      	bgt.n	8001f7c <chSemAddCounterI+0xc>
 8001f8a:	6828      	ldr	r0, [r5, #0]
 8001f8c:	6803      	ldr	r3, [r0, #0]
 8001f8e:	602b      	str	r3, [r5, #0]
 8001f90:	605d      	str	r5, [r3, #4]
 8001f92:	f7ff fbc5 	bl	8001720 <chSchReadyI>
 8001f96:	3c01      	subs	r4, #1
 8001f98:	6206      	str	r6, [r0, #32]
 8001f9a:	d1f1      	bne.n	8001f80 <chSemAddCounterI+0x10>
 8001f9c:	bd70      	pop	{r4, r5, r6, pc}
 8001f9e:	bf00      	nop

08001fa0 <chSemSignalWait>:
 8001fa0:	b538      	push	{r3, r4, r5, lr}
 8001fa2:	460c      	mov	r4, r1
 8001fa4:	2320      	movs	r3, #32
 8001fa6:	f383 8811 	msr	BASEPRI, r3
 8001faa:	6883      	ldr	r3, [r0, #8]
 8001fac:	3301      	adds	r3, #1
 8001fae:	2b00      	cmp	r3, #0
 8001fb0:	6083      	str	r3, [r0, #8]
 8001fb2:	dd1b      	ble.n	8001fec <chSemSignalWait+0x4c>
 8001fb4:	68a3      	ldr	r3, [r4, #8]
 8001fb6:	3b01      	subs	r3, #1
 8001fb8:	2b00      	cmp	r3, #0
 8001fba:	60a3      	str	r3, [r4, #8]
 8001fbc:	db06      	blt.n	8001fcc <chSemSignalWait+0x2c>
 8001fbe:	f7ff fc87 	bl	80018d0 <chSchRescheduleS>
 8001fc2:	2000      	movs	r0, #0
 8001fc4:	2300      	movs	r3, #0
 8001fc6:	f383 8811 	msr	BASEPRI, r3
 8001fca:	bd38      	pop	{r3, r4, r5, pc}
 8001fcc:	4a0c      	ldr	r2, [pc, #48]	; (8002000 <chSemSignalWait+0x60>)
 8001fce:	6863      	ldr	r3, [r4, #4]
 8001fd0:	6995      	ldr	r5, [r2, #24]
 8001fd2:	2005      	movs	r0, #5
 8001fd4:	e9c5 4300 	strd	r4, r3, [r5]
 8001fd8:	601d      	str	r5, [r3, #0]
 8001fda:	6065      	str	r5, [r4, #4]
 8001fdc:	622c      	str	r4, [r5, #32]
 8001fde:	f7ff fbb7 	bl	8001750 <chSchGoSleepS>
 8001fe2:	6a28      	ldr	r0, [r5, #32]
 8001fe4:	2300      	movs	r3, #0
 8001fe6:	f383 8811 	msr	BASEPRI, r3
 8001fea:	bd38      	pop	{r3, r4, r5, pc}
 8001fec:	4602      	mov	r2, r0
 8001fee:	6800      	ldr	r0, [r0, #0]
 8001ff0:	6803      	ldr	r3, [r0, #0]
 8001ff2:	6013      	str	r3, [r2, #0]
 8001ff4:	605a      	str	r2, [r3, #4]
 8001ff6:	f7ff fb93 	bl	8001720 <chSchReadyI>
 8001ffa:	2300      	movs	r3, #0
 8001ffc:	6203      	str	r3, [r0, #32]
 8001ffe:	e7d9      	b.n	8001fb4 <chSemSignalWait+0x14>
 8002000:	20000ce8 	.word	0x20000ce8
	...

08002010 <chMtxObjectInit>:
 8002010:	2300      	movs	r3, #0
 8002012:	e9c0 0000 	strd	r0, r0, [r0]
 8002016:	6083      	str	r3, [r0, #8]
 8002018:	4770      	bx	lr
 800201a:	bf00      	nop
 800201c:	0000      	movs	r0, r0
	...

08002020 <chMtxLockS>:
 8002020:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002022:	4a36      	ldr	r2, [pc, #216]	; (80020fc <chMtxLockS+0xdc>)
 8002024:	6883      	ldr	r3, [r0, #8]
 8002026:	6995      	ldr	r5, [r2, #24]
 8002028:	2b00      	cmp	r3, #0
 800202a:	d03f      	beq.n	80020ac <chMtxLockS+0x8c>
 800202c:	68a9      	ldr	r1, [r5, #8]
 800202e:	689a      	ldr	r2, [r3, #8]
 8002030:	4291      	cmp	r1, r2
 8002032:	4604      	mov	r4, r0
 8002034:	d906      	bls.n	8002044 <chMtxLockS+0x24>
 8002036:	7f1a      	ldrb	r2, [r3, #28]
 8002038:	6099      	str	r1, [r3, #8]
 800203a:	2a06      	cmp	r2, #6
 800203c:	d03b      	beq.n	80020b6 <chMtxLockS+0x96>
 800203e:	2a07      	cmp	r2, #7
 8002040:	d015      	beq.n	800206e <chMtxLockS+0x4e>
 8002042:	b342      	cbz	r2, 8002096 <chMtxLockS+0x76>
 8002044:	4626      	mov	r6, r4
 8002046:	4623      	mov	r3, r4
 8002048:	e003      	b.n	8002052 <chMtxLockS+0x32>
 800204a:	6899      	ldr	r1, [r3, #8]
 800204c:	68aa      	ldr	r2, [r5, #8]
 800204e:	4291      	cmp	r1, r2
 8002050:	d32a      	bcc.n	80020a8 <chMtxLockS+0x88>
 8002052:	681b      	ldr	r3, [r3, #0]
 8002054:	429c      	cmp	r4, r3
 8002056:	d1f8      	bne.n	800204a <chMtxLockS+0x2a>
 8002058:	6873      	ldr	r3, [r6, #4]
 800205a:	2006      	movs	r0, #6
 800205c:	e9c5 6300 	strd	r6, r3, [r5]
 8002060:	601d      	str	r5, [r3, #0]
 8002062:	6075      	str	r5, [r6, #4]
 8002064:	622c      	str	r4, [r5, #32]
 8002066:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800206a:	f7ff bb71 	b.w	8001750 <chSchGoSleepS>
 800206e:	e9d3 0200 	ldrd	r0, r2, [r3]
 8002072:	6010      	str	r0, [r2, #0]
 8002074:	6a1e      	ldr	r6, [r3, #32]
 8002076:	6818      	ldr	r0, [r3, #0]
 8002078:	6042      	str	r2, [r0, #4]
 800207a:	4632      	mov	r2, r6
 800207c:	e002      	b.n	8002084 <chMtxLockS+0x64>
 800207e:	6890      	ldr	r0, [r2, #8]
 8002080:	4288      	cmp	r0, r1
 8002082:	d332      	bcc.n	80020ea <chMtxLockS+0xca>
 8002084:	6812      	ldr	r2, [r2, #0]
 8002086:	4296      	cmp	r6, r2
 8002088:	d1f9      	bne.n	800207e <chMtxLockS+0x5e>
 800208a:	6872      	ldr	r2, [r6, #4]
 800208c:	e9c3 6200 	strd	r6, r2, [r3]
 8002090:	6013      	str	r3, [r2, #0]
 8002092:	6073      	str	r3, [r6, #4]
 8002094:	e7d6      	b.n	8002044 <chMtxLockS+0x24>
 8002096:	e9d3 1200 	ldrd	r1, r2, [r3]
 800209a:	6011      	str	r1, [r2, #0]
 800209c:	6819      	ldr	r1, [r3, #0]
 800209e:	4618      	mov	r0, r3
 80020a0:	604a      	str	r2, [r1, #4]
 80020a2:	f7ff fb3d 	bl	8001720 <chSchReadyI>
 80020a6:	e7cd      	b.n	8002044 <chMtxLockS+0x24>
 80020a8:	461e      	mov	r6, r3
 80020aa:	e7d5      	b.n	8002058 <chMtxLockS+0x38>
 80020ac:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80020ae:	e9c0 5302 	strd	r5, r3, [r0, #8]
 80020b2:	63a8      	str	r0, [r5, #56]	; 0x38
 80020b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80020b6:	e9d3 0200 	ldrd	r0, r2, [r3]
 80020ba:	6010      	str	r0, [r2, #0]
 80020bc:	6a1e      	ldr	r6, [r3, #32]
 80020be:	6818      	ldr	r0, [r3, #0]
 80020c0:	4637      	mov	r7, r6
 80020c2:	6042      	str	r2, [r0, #4]
 80020c4:	4632      	mov	r2, r6
 80020c6:	e002      	b.n	80020ce <chMtxLockS+0xae>
 80020c8:	6890      	ldr	r0, [r2, #8]
 80020ca:	4288      	cmp	r0, r1
 80020cc:	d314      	bcc.n	80020f8 <chMtxLockS+0xd8>
 80020ce:	6812      	ldr	r2, [r2, #0]
 80020d0:	4296      	cmp	r6, r2
 80020d2:	d1f9      	bne.n	80020c8 <chMtxLockS+0xa8>
 80020d4:	687a      	ldr	r2, [r7, #4]
 80020d6:	68a9      	ldr	r1, [r5, #8]
 80020d8:	e9c3 7200 	strd	r7, r2, [r3]
 80020dc:	6013      	str	r3, [r2, #0]
 80020de:	607b      	str	r3, [r7, #4]
 80020e0:	68b3      	ldr	r3, [r6, #8]
 80020e2:	689a      	ldr	r2, [r3, #8]
 80020e4:	428a      	cmp	r2, r1
 80020e6:	d3a6      	bcc.n	8002036 <chMtxLockS+0x16>
 80020e8:	e7ac      	b.n	8002044 <chMtxLockS+0x24>
 80020ea:	4616      	mov	r6, r2
 80020ec:	6872      	ldr	r2, [r6, #4]
 80020ee:	e9c3 6200 	strd	r6, r2, [r3]
 80020f2:	6013      	str	r3, [r2, #0]
 80020f4:	6073      	str	r3, [r6, #4]
 80020f6:	e7a5      	b.n	8002044 <chMtxLockS+0x24>
 80020f8:	4617      	mov	r7, r2
 80020fa:	e7eb      	b.n	80020d4 <chMtxLockS+0xb4>
 80020fc:	20000ce8 	.word	0x20000ce8

08002100 <chMtxLock>:
 8002100:	b508      	push	{r3, lr}
 8002102:	2320      	movs	r3, #32
 8002104:	f383 8811 	msr	BASEPRI, r3
 8002108:	f7ff ff8a 	bl	8002020 <chMtxLockS>
 800210c:	2300      	movs	r3, #0
 800210e:	f383 8811 	msr	BASEPRI, r3
 8002112:	bd08      	pop	{r3, pc}
	...

08002120 <chMtxTryLock>:
 8002120:	4603      	mov	r3, r0
 8002122:	2220      	movs	r2, #32
 8002124:	f382 8811 	msr	BASEPRI, r2
 8002128:	6882      	ldr	r2, [r0, #8]
 800212a:	b122      	cbz	r2, 8002136 <chMtxTryLock+0x16>
 800212c:	2000      	movs	r0, #0
 800212e:	2300      	movs	r3, #0
 8002130:	f383 8811 	msr	BASEPRI, r3
 8002134:	4770      	bx	lr
 8002136:	4a05      	ldr	r2, [pc, #20]	; (800214c <chMtxTryLock+0x2c>)
 8002138:	6992      	ldr	r2, [r2, #24]
 800213a:	6082      	str	r2, [r0, #8]
 800213c:	6b91      	ldr	r1, [r2, #56]	; 0x38
 800213e:	60c1      	str	r1, [r0, #12]
 8002140:	6393      	str	r3, [r2, #56]	; 0x38
 8002142:	2001      	movs	r0, #1
 8002144:	2300      	movs	r3, #0
 8002146:	f383 8811 	msr	BASEPRI, r3
 800214a:	4770      	bx	lr
 800214c:	20000ce8 	.word	0x20000ce8

08002150 <chMtxUnlock>:
 8002150:	4b16      	ldr	r3, [pc, #88]	; (80021ac <chMtxUnlock+0x5c>)
 8002152:	b570      	push	{r4, r5, r6, lr}
 8002154:	699d      	ldr	r5, [r3, #24]
 8002156:	2320      	movs	r3, #32
 8002158:	f383 8811 	msr	BASEPRI, r3
 800215c:	6804      	ldr	r4, [r0, #0]
 800215e:	68c3      	ldr	r3, [r0, #12]
 8002160:	63ab      	str	r3, [r5, #56]	; 0x38
 8002162:	4284      	cmp	r4, r0
 8002164:	d01c      	beq.n	80021a0 <chMtxUnlock+0x50>
 8002166:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8002168:	b14b      	cbz	r3, 800217e <chMtxUnlock+0x2e>
 800216a:	681a      	ldr	r2, [r3, #0]
 800216c:	4293      	cmp	r3, r2
 800216e:	d003      	beq.n	8002178 <chMtxUnlock+0x28>
 8002170:	6892      	ldr	r2, [r2, #8]
 8002172:	4291      	cmp	r1, r2
 8002174:	bf38      	it	cc
 8002176:	4611      	movcc	r1, r2
 8002178:	68db      	ldr	r3, [r3, #12]
 800217a:	2b00      	cmp	r3, #0
 800217c:	d1f5      	bne.n	800216a <chMtxUnlock+0x1a>
 800217e:	4603      	mov	r3, r0
 8002180:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8002182:	6822      	ldr	r2, [r4, #0]
 8002184:	60a9      	str	r1, [r5, #8]
 8002186:	4620      	mov	r0, r4
 8002188:	601a      	str	r2, [r3, #0]
 800218a:	2100      	movs	r1, #0
 800218c:	6053      	str	r3, [r2, #4]
 800218e:	e9c3 4602 	strd	r4, r6, [r3, #8]
 8002192:	63a3      	str	r3, [r4, #56]	; 0x38
 8002194:	f7ff fb1c 	bl	80017d0 <chSchWakeupS>
 8002198:	2300      	movs	r3, #0
 800219a:	f383 8811 	msr	BASEPRI, r3
 800219e:	bd70      	pop	{r4, r5, r6, pc}
 80021a0:	2300      	movs	r3, #0
 80021a2:	60a3      	str	r3, [r4, #8]
 80021a4:	2300      	movs	r3, #0
 80021a6:	f383 8811 	msr	BASEPRI, r3
 80021aa:	bd70      	pop	{r4, r5, r6, pc}
 80021ac:	20000ce8 	.word	0x20000ce8

080021b0 <chMtxUnlockS>:
 80021b0:	4b12      	ldr	r3, [pc, #72]	; (80021fc <chMtxUnlockS+0x4c>)
 80021b2:	b430      	push	{r4, r5}
 80021b4:	6804      	ldr	r4, [r0, #0]
 80021b6:	699d      	ldr	r5, [r3, #24]
 80021b8:	68c3      	ldr	r3, [r0, #12]
 80021ba:	63ab      	str	r3, [r5, #56]	; 0x38
 80021bc:	4284      	cmp	r4, r0
 80021be:	d018      	beq.n	80021f2 <chMtxUnlockS+0x42>
 80021c0:	4601      	mov	r1, r0
 80021c2:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 80021c4:	b14b      	cbz	r3, 80021da <chMtxUnlockS+0x2a>
 80021c6:	681a      	ldr	r2, [r3, #0]
 80021c8:	4293      	cmp	r3, r2
 80021ca:	d003      	beq.n	80021d4 <chMtxUnlockS+0x24>
 80021cc:	6892      	ldr	r2, [r2, #8]
 80021ce:	4290      	cmp	r0, r2
 80021d0:	bf38      	it	cc
 80021d2:	4610      	movcc	r0, r2
 80021d4:	68db      	ldr	r3, [r3, #12]
 80021d6:	2b00      	cmp	r3, #0
 80021d8:	d1f5      	bne.n	80021c6 <chMtxUnlockS+0x16>
 80021da:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80021dc:	6823      	ldr	r3, [r4, #0]
 80021de:	60a8      	str	r0, [r5, #8]
 80021e0:	600b      	str	r3, [r1, #0]
 80021e2:	4620      	mov	r0, r4
 80021e4:	6059      	str	r1, [r3, #4]
 80021e6:	e9c1 4202 	strd	r4, r2, [r1, #8]
 80021ea:	63a1      	str	r1, [r4, #56]	; 0x38
 80021ec:	bc30      	pop	{r4, r5}
 80021ee:	f7ff ba97 	b.w	8001720 <chSchReadyI>
 80021f2:	2300      	movs	r3, #0
 80021f4:	60a3      	str	r3, [r4, #8]
 80021f6:	bc30      	pop	{r4, r5}
 80021f8:	4770      	bx	lr
 80021fa:	bf00      	nop
 80021fc:	20000ce8 	.word	0x20000ce8

08002200 <chMtxUnlockAll>:
 8002200:	4a13      	ldr	r2, [pc, #76]	; (8002250 <chMtxUnlockAll+0x50>)
 8002202:	b570      	push	{r4, r5, r6, lr}
 8002204:	2320      	movs	r3, #32
 8002206:	6994      	ldr	r4, [r2, #24]
 8002208:	f383 8811 	msr	BASEPRI, r3
 800220c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800220e:	b1b3      	cbz	r3, 800223e <chMtxUnlockAll+0x3e>
 8002210:	2600      	movs	r6, #0
 8002212:	681a      	ldr	r2, [r3, #0]
 8002214:	68d9      	ldr	r1, [r3, #12]
 8002216:	63a1      	str	r1, [r4, #56]	; 0x38
 8002218:	4293      	cmp	r3, r2
 800221a:	4610      	mov	r0, r2
 800221c:	d013      	beq.n	8002246 <chMtxUnlockAll+0x46>
 800221e:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8002220:	6811      	ldr	r1, [r2, #0]
 8002222:	6019      	str	r1, [r3, #0]
 8002224:	604b      	str	r3, [r1, #4]
 8002226:	e9c3 2502 	strd	r2, r5, [r3, #8]
 800222a:	6393      	str	r3, [r2, #56]	; 0x38
 800222c:	f7ff fa78 	bl	8001720 <chSchReadyI>
 8002230:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002232:	2b00      	cmp	r3, #0
 8002234:	d1ed      	bne.n	8002212 <chMtxUnlockAll+0x12>
 8002236:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8002238:	60a3      	str	r3, [r4, #8]
 800223a:	f7ff fb49 	bl	80018d0 <chSchRescheduleS>
 800223e:	2300      	movs	r3, #0
 8002240:	f383 8811 	msr	BASEPRI, r3
 8002244:	bd70      	pop	{r4, r5, r6, pc}
 8002246:	609e      	str	r6, [r3, #8]
 8002248:	460b      	mov	r3, r1
 800224a:	2b00      	cmp	r3, #0
 800224c:	d1e1      	bne.n	8002212 <chMtxUnlockAll+0x12>
 800224e:	e7f2      	b.n	8002236 <chMtxUnlockAll+0x36>
 8002250:	20000ce8 	.word	0x20000ce8
	...

08002260 <chCondObjectInit>:
 8002260:	e9c0 0000 	strd	r0, r0, [r0]
 8002264:	4770      	bx	lr
 8002266:	bf00      	nop
	...

08002270 <chCondSignal>:
 8002270:	b508      	push	{r3, lr}
 8002272:	2320      	movs	r3, #32
 8002274:	f383 8811 	msr	BASEPRI, r3
 8002278:	6802      	ldr	r2, [r0, #0]
 800227a:	4290      	cmp	r0, r2
 800227c:	d007      	beq.n	800228e <chCondSignal+0x1e>
 800227e:	6811      	ldr	r1, [r2, #0]
 8002280:	6001      	str	r1, [r0, #0]
 8002282:	4603      	mov	r3, r0
 8002284:	604b      	str	r3, [r1, #4]
 8002286:	4610      	mov	r0, r2
 8002288:	2100      	movs	r1, #0
 800228a:	f7ff faa1 	bl	80017d0 <chSchWakeupS>
 800228e:	2300      	movs	r3, #0
 8002290:	f383 8811 	msr	BASEPRI, r3
 8002294:	bd08      	pop	{r3, pc}
 8002296:	bf00      	nop
	...

080022a0 <chCondSignalI>:
 80022a0:	6803      	ldr	r3, [r0, #0]
 80022a2:	4298      	cmp	r0, r3
 80022a4:	d007      	beq.n	80022b6 <chCondSignalI+0x16>
 80022a6:	681a      	ldr	r2, [r3, #0]
 80022a8:	6002      	str	r2, [r0, #0]
 80022aa:	2100      	movs	r1, #0
 80022ac:	6050      	str	r0, [r2, #4]
 80022ae:	4618      	mov	r0, r3
 80022b0:	6219      	str	r1, [r3, #32]
 80022b2:	f7ff ba35 	b.w	8001720 <chSchReadyI>
 80022b6:	4770      	bx	lr
	...

080022c0 <chCondBroadcast>:
 80022c0:	b538      	push	{r3, r4, r5, lr}
 80022c2:	2320      	movs	r3, #32
 80022c4:	f383 8811 	msr	BASEPRI, r3
 80022c8:	6803      	ldr	r3, [r0, #0]
 80022ca:	4298      	cmp	r0, r3
 80022cc:	d00c      	beq.n	80022e8 <chCondBroadcast+0x28>
 80022ce:	4604      	mov	r4, r0
 80022d0:	f06f 0501 	mvn.w	r5, #1
 80022d4:	681a      	ldr	r2, [r3, #0]
 80022d6:	6022      	str	r2, [r4, #0]
 80022d8:	4618      	mov	r0, r3
 80022da:	6054      	str	r4, [r2, #4]
 80022dc:	f7ff fa20 	bl	8001720 <chSchReadyI>
 80022e0:	6823      	ldr	r3, [r4, #0]
 80022e2:	6205      	str	r5, [r0, #32]
 80022e4:	42a3      	cmp	r3, r4
 80022e6:	d1f5      	bne.n	80022d4 <chCondBroadcast+0x14>
 80022e8:	f7ff faf2 	bl	80018d0 <chSchRescheduleS>
 80022ec:	2300      	movs	r3, #0
 80022ee:	f383 8811 	msr	BASEPRI, r3
 80022f2:	bd38      	pop	{r3, r4, r5, pc}
	...

08002300 <chCondWaitS>:
 8002300:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002302:	4b11      	ldr	r3, [pc, #68]	; (8002348 <chCondWaitS+0x48>)
 8002304:	699c      	ldr	r4, [r3, #24]
 8002306:	6ba7      	ldr	r7, [r4, #56]	; 0x38
 8002308:	4605      	mov	r5, r0
 800230a:	4638      	mov	r0, r7
 800230c:	f7ff ff50 	bl	80021b0 <chMtxUnlockS>
 8002310:	462e      	mov	r6, r5
 8002312:	6225      	str	r5, [r4, #32]
 8002314:	462b      	mov	r3, r5
 8002316:	e003      	b.n	8002320 <chCondWaitS+0x20>
 8002318:	6899      	ldr	r1, [r3, #8]
 800231a:	68a2      	ldr	r2, [r4, #8]
 800231c:	4291      	cmp	r1, r2
 800231e:	d310      	bcc.n	8002342 <chCondWaitS+0x42>
 8002320:	681b      	ldr	r3, [r3, #0]
 8002322:	429d      	cmp	r5, r3
 8002324:	d1f8      	bne.n	8002318 <chCondWaitS+0x18>
 8002326:	6873      	ldr	r3, [r6, #4]
 8002328:	2007      	movs	r0, #7
 800232a:	e9c4 6300 	strd	r6, r3, [r4]
 800232e:	601c      	str	r4, [r3, #0]
 8002330:	6074      	str	r4, [r6, #4]
 8002332:	f7ff fa0d 	bl	8001750 <chSchGoSleepS>
 8002336:	6a24      	ldr	r4, [r4, #32]
 8002338:	4638      	mov	r0, r7
 800233a:	f7ff fe71 	bl	8002020 <chMtxLockS>
 800233e:	4620      	mov	r0, r4
 8002340:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002342:	461e      	mov	r6, r3
 8002344:	e7ef      	b.n	8002326 <chCondWaitS+0x26>
 8002346:	bf00      	nop
 8002348:	20000ce8 	.word	0x20000ce8
 800234c:	00000000 	.word	0x00000000

08002350 <chCondWait>:
 8002350:	b508      	push	{r3, lr}
 8002352:	2320      	movs	r3, #32
 8002354:	f383 8811 	msr	BASEPRI, r3
 8002358:	f7ff ffd2 	bl	8002300 <chCondWaitS>
 800235c:	2300      	movs	r3, #0
 800235e:	f383 8811 	msr	BASEPRI, r3
 8002362:	bd08      	pop	{r3, pc}
	...

08002370 <chCondWaitTimeoutS>:
 8002370:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002374:	4c13      	ldr	r4, [pc, #76]	; (80023c4 <chCondWaitTimeoutS+0x54>)
 8002376:	69a3      	ldr	r3, [r4, #24]
 8002378:	6b9f      	ldr	r7, [r3, #56]	; 0x38
 800237a:	4605      	mov	r5, r0
 800237c:	4638      	mov	r0, r7
 800237e:	4688      	mov	r8, r1
 8002380:	f7ff ff16 	bl	80021b0 <chMtxUnlockS>
 8002384:	69a4      	ldr	r4, [r4, #24]
 8002386:	462e      	mov	r6, r5
 8002388:	6225      	str	r5, [r4, #32]
 800238a:	462b      	mov	r3, r5
 800238c:	e003      	b.n	8002396 <chCondWaitTimeoutS+0x26>
 800238e:	6898      	ldr	r0, [r3, #8]
 8002390:	68a2      	ldr	r2, [r4, #8]
 8002392:	4290      	cmp	r0, r2
 8002394:	d314      	bcc.n	80023c0 <chCondWaitTimeoutS+0x50>
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	429d      	cmp	r5, r3
 800239a:	d1f8      	bne.n	800238e <chCondWaitTimeoutS+0x1e>
 800239c:	6873      	ldr	r3, [r6, #4]
 800239e:	6063      	str	r3, [r4, #4]
 80023a0:	6026      	str	r6, [r4, #0]
 80023a2:	4641      	mov	r1, r8
 80023a4:	601c      	str	r4, [r3, #0]
 80023a6:	2007      	movs	r0, #7
 80023a8:	6074      	str	r4, [r6, #4]
 80023aa:	f7ff f9e9 	bl	8001780 <chSchGoSleepTimeoutS>
 80023ae:	1c43      	adds	r3, r0, #1
 80023b0:	4604      	mov	r4, r0
 80023b2:	d002      	beq.n	80023ba <chCondWaitTimeoutS+0x4a>
 80023b4:	4638      	mov	r0, r7
 80023b6:	f7ff fe33 	bl	8002020 <chMtxLockS>
 80023ba:	4620      	mov	r0, r4
 80023bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80023c0:	461e      	mov	r6, r3
 80023c2:	e7eb      	b.n	800239c <chCondWaitTimeoutS+0x2c>
 80023c4:	20000ce8 	.word	0x20000ce8
	...

080023d0 <chCondWaitTimeout>:
 80023d0:	b508      	push	{r3, lr}
 80023d2:	2320      	movs	r3, #32
 80023d4:	f383 8811 	msr	BASEPRI, r3
 80023d8:	f7ff ffca 	bl	8002370 <chCondWaitTimeoutS>
 80023dc:	2300      	movs	r3, #0
 80023de:	f383 8811 	msr	BASEPRI, r3
 80023e2:	bd08      	pop	{r3, pc}
	...

080023f0 <chEvtRegisterMaskWithFlags>:
 80023f0:	b430      	push	{r4, r5}
 80023f2:	2420      	movs	r4, #32
 80023f4:	f384 8811 	msr	BASEPRI, r4
 80023f8:	4d06      	ldr	r5, [pc, #24]	; (8002414 <chEvtRegisterMaskWithFlags+0x24>)
 80023fa:	6804      	ldr	r4, [r0, #0]
 80023fc:	69ad      	ldr	r5, [r5, #24]
 80023fe:	600c      	str	r4, [r1, #0]
 8002400:	2400      	movs	r4, #0
 8002402:	6001      	str	r1, [r0, #0]
 8002404:	e9c1 5201 	strd	r5, r2, [r1, #4]
 8002408:	e9c1 4303 	strd	r4, r3, [r1, #12]
 800240c:	f384 8811 	msr	BASEPRI, r4
 8002410:	bc30      	pop	{r4, r5}
 8002412:	4770      	bx	lr
 8002414:	20000ce8 	.word	0x20000ce8
	...

08002420 <chEvtUnregister>:
 8002420:	2320      	movs	r3, #32
 8002422:	f383 8811 	msr	BASEPRI, r3
 8002426:	4602      	mov	r2, r0
 8002428:	e002      	b.n	8002430 <chEvtUnregister+0x10>
 800242a:	428b      	cmp	r3, r1
 800242c:	d007      	beq.n	800243e <chEvtUnregister+0x1e>
 800242e:	461a      	mov	r2, r3
 8002430:	6813      	ldr	r3, [r2, #0]
 8002432:	4283      	cmp	r3, r0
 8002434:	d1f9      	bne.n	800242a <chEvtUnregister+0xa>
 8002436:	2300      	movs	r3, #0
 8002438:	f383 8811 	msr	BASEPRI, r3
 800243c:	4770      	bx	lr
 800243e:	680b      	ldr	r3, [r1, #0]
 8002440:	6013      	str	r3, [r2, #0]
 8002442:	2300      	movs	r3, #0
 8002444:	f383 8811 	msr	BASEPRI, r3
 8002448:	4770      	bx	lr
 800244a:	bf00      	nop
 800244c:	0000      	movs	r0, r0
	...

08002450 <chEvtGetAndClearEvents>:
 8002450:	2320      	movs	r3, #32
 8002452:	f383 8811 	msr	BASEPRI, r3
 8002456:	4b05      	ldr	r3, [pc, #20]	; (800246c <chEvtGetAndClearEvents+0x1c>)
 8002458:	699a      	ldr	r2, [r3, #24]
 800245a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800245c:	ea23 0100 	bic.w	r1, r3, r0
 8002460:	6351      	str	r1, [r2, #52]	; 0x34
 8002462:	2200      	movs	r2, #0
 8002464:	f382 8811 	msr	BASEPRI, r2
 8002468:	4018      	ands	r0, r3
 800246a:	4770      	bx	lr
 800246c:	20000ce8 	.word	0x20000ce8

08002470 <chEvtAddEvents>:
 8002470:	2320      	movs	r3, #32
 8002472:	f383 8811 	msr	BASEPRI, r3
 8002476:	4b04      	ldr	r3, [pc, #16]	; (8002488 <chEvtAddEvents+0x18>)
 8002478:	699b      	ldr	r3, [r3, #24]
 800247a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800247c:	4310      	orrs	r0, r2
 800247e:	6358      	str	r0, [r3, #52]	; 0x34
 8002480:	2300      	movs	r3, #0
 8002482:	f383 8811 	msr	BASEPRI, r3
 8002486:	4770      	bx	lr
 8002488:	20000ce8 	.word	0x20000ce8
 800248c:	00000000 	.word	0x00000000

08002490 <chEvtSignalI>:
 8002490:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8002492:	7f02      	ldrb	r2, [r0, #28]
 8002494:	4319      	orrs	r1, r3
 8002496:	2a0a      	cmp	r2, #10
 8002498:	6341      	str	r1, [r0, #52]	; 0x34
 800249a:	d009      	beq.n	80024b0 <chEvtSignalI+0x20>
 800249c:	2a0b      	cmp	r2, #11
 800249e:	d000      	beq.n	80024a2 <chEvtSignalI+0x12>
 80024a0:	4770      	bx	lr
 80024a2:	6a03      	ldr	r3, [r0, #32]
 80024a4:	438b      	bics	r3, r1
 80024a6:	d1fb      	bne.n	80024a0 <chEvtSignalI+0x10>
 80024a8:	2300      	movs	r3, #0
 80024aa:	6203      	str	r3, [r0, #32]
 80024ac:	f7ff b938 	b.w	8001720 <chSchReadyI>
 80024b0:	6a03      	ldr	r3, [r0, #32]
 80024b2:	4219      	tst	r1, r3
 80024b4:	d1f8      	bne.n	80024a8 <chEvtSignalI+0x18>
 80024b6:	4770      	bx	lr
	...

080024c0 <chEvtBroadcastFlagsI>:
 80024c0:	b570      	push	{r4, r5, r6, lr}
 80024c2:	6804      	ldr	r4, [r0, #0]
 80024c4:	42a0      	cmp	r0, r4
 80024c6:	d00f      	beq.n	80024e8 <chEvtBroadcastFlagsI+0x28>
 80024c8:	4606      	mov	r6, r0
 80024ca:	460d      	mov	r5, r1
 80024cc:	68e3      	ldr	r3, [r4, #12]
 80024ce:	432b      	orrs	r3, r5
 80024d0:	60e3      	str	r3, [r4, #12]
 80024d2:	b115      	cbz	r5, 80024da <chEvtBroadcastFlagsI+0x1a>
 80024d4:	6922      	ldr	r2, [r4, #16]
 80024d6:	4213      	tst	r3, r2
 80024d8:	d003      	beq.n	80024e2 <chEvtBroadcastFlagsI+0x22>
 80024da:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 80024de:	f7ff ffd7 	bl	8002490 <chEvtSignalI>
 80024e2:	6824      	ldr	r4, [r4, #0]
 80024e4:	42a6      	cmp	r6, r4
 80024e6:	d1f1      	bne.n	80024cc <chEvtBroadcastFlagsI+0xc>
 80024e8:	bd70      	pop	{r4, r5, r6, pc}
 80024ea:	bf00      	nop
 80024ec:	0000      	movs	r0, r0
	...

080024f0 <chEvtSignal>:
 80024f0:	b508      	push	{r3, lr}
 80024f2:	2320      	movs	r3, #32
 80024f4:	f383 8811 	msr	BASEPRI, r3
 80024f8:	f7ff ffca 	bl	8002490 <chEvtSignalI>
 80024fc:	f7ff f9e8 	bl	80018d0 <chSchRescheduleS>
 8002500:	2300      	movs	r3, #0
 8002502:	f383 8811 	msr	BASEPRI, r3
 8002506:	bd08      	pop	{r3, pc}
	...

08002510 <chEvtBroadcastFlags>:
 8002510:	b508      	push	{r3, lr}
 8002512:	2320      	movs	r3, #32
 8002514:	f383 8811 	msr	BASEPRI, r3
 8002518:	f7ff ffd2 	bl	80024c0 <chEvtBroadcastFlagsI>
 800251c:	f7ff f9d8 	bl	80018d0 <chSchRescheduleS>
 8002520:	2300      	movs	r3, #0
 8002522:	f383 8811 	msr	BASEPRI, r3
 8002526:	bd08      	pop	{r3, pc}
	...

08002530 <chEvtDispatch>:
 8002530:	b1b9      	cbz	r1, 8002562 <chEvtDispatch+0x32>
 8002532:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002534:	4607      	mov	r7, r0
 8002536:	460d      	mov	r5, r1
 8002538:	2400      	movs	r4, #0
 800253a:	2601      	movs	r6, #1
 800253c:	fa25 f304 	lsr.w	r3, r5, r4
 8002540:	f013 0f01 	tst.w	r3, #1
 8002544:	fa06 f204 	lsl.w	r2, r6, r4
 8002548:	4620      	mov	r0, r4
 800254a:	d008      	beq.n	800255e <chEvtDispatch+0x2e>
 800254c:	f857 3024 	ldr.w	r3, [r7, r4, lsl #2]
 8002550:	ea25 0502 	bic.w	r5, r5, r2
 8002554:	3401      	adds	r4, #1
 8002556:	4798      	blx	r3
 8002558:	2d00      	cmp	r5, #0
 800255a:	d1ef      	bne.n	800253c <chEvtDispatch+0xc>
 800255c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800255e:	3401      	adds	r4, #1
 8002560:	e7ec      	b.n	800253c <chEvtDispatch+0xc>
 8002562:	4770      	bx	lr
	...

08002570 <chEvtWaitOne>:
 8002570:	b538      	push	{r3, r4, r5, lr}
 8002572:	4b0c      	ldr	r3, [pc, #48]	; (80025a4 <chEvtWaitOne+0x34>)
 8002574:	699d      	ldr	r5, [r3, #24]
 8002576:	2320      	movs	r3, #32
 8002578:	f383 8811 	msr	BASEPRI, r3
 800257c:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800257e:	ea13 0400 	ands.w	r4, r3, r0
 8002582:	d106      	bne.n	8002592 <chEvtWaitOne+0x22>
 8002584:	4604      	mov	r4, r0
 8002586:	6228      	str	r0, [r5, #32]
 8002588:	200a      	movs	r0, #10
 800258a:	f7ff f8e1 	bl	8001750 <chSchGoSleepS>
 800258e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002590:	401c      	ands	r4, r3
 8002592:	4260      	negs	r0, r4
 8002594:	4020      	ands	r0, r4
 8002596:	ea23 0300 	bic.w	r3, r3, r0
 800259a:	636b      	str	r3, [r5, #52]	; 0x34
 800259c:	2300      	movs	r3, #0
 800259e:	f383 8811 	msr	BASEPRI, r3
 80025a2:	bd38      	pop	{r3, r4, r5, pc}
 80025a4:	20000ce8 	.word	0x20000ce8
	...

080025b0 <chEvtWaitAny>:
 80025b0:	b538      	push	{r3, r4, r5, lr}
 80025b2:	4b0c      	ldr	r3, [pc, #48]	; (80025e4 <chEvtWaitAny+0x34>)
 80025b4:	699d      	ldr	r5, [r3, #24]
 80025b6:	2320      	movs	r3, #32
 80025b8:	f383 8811 	msr	BASEPRI, r3
 80025bc:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80025be:	ea13 0400 	ands.w	r4, r3, r0
 80025c2:	d106      	bne.n	80025d2 <chEvtWaitAny+0x22>
 80025c4:	4604      	mov	r4, r0
 80025c6:	6228      	str	r0, [r5, #32]
 80025c8:	200a      	movs	r0, #10
 80025ca:	f7ff f8c1 	bl	8001750 <chSchGoSleepS>
 80025ce:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80025d0:	401c      	ands	r4, r3
 80025d2:	ea23 0304 	bic.w	r3, r3, r4
 80025d6:	636b      	str	r3, [r5, #52]	; 0x34
 80025d8:	2300      	movs	r3, #0
 80025da:	f383 8811 	msr	BASEPRI, r3
 80025de:	4620      	mov	r0, r4
 80025e0:	bd38      	pop	{r3, r4, r5, pc}
 80025e2:	bf00      	nop
 80025e4:	20000ce8 	.word	0x20000ce8
	...

080025f0 <chEvtWaitAll>:
 80025f0:	b538      	push	{r3, r4, r5, lr}
 80025f2:	4b0b      	ldr	r3, [pc, #44]	; (8002620 <chEvtWaitAll+0x30>)
 80025f4:	4604      	mov	r4, r0
 80025f6:	699d      	ldr	r5, [r3, #24]
 80025f8:	2320      	movs	r3, #32
 80025fa:	f383 8811 	msr	BASEPRI, r3
 80025fe:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002600:	ea30 0203 	bics.w	r2, r0, r3
 8002604:	d004      	beq.n	8002610 <chEvtWaitAll+0x20>
 8002606:	6228      	str	r0, [r5, #32]
 8002608:	200b      	movs	r0, #11
 800260a:	f7ff f8a1 	bl	8001750 <chSchGoSleepS>
 800260e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002610:	ea23 0304 	bic.w	r3, r3, r4
 8002614:	636b      	str	r3, [r5, #52]	; 0x34
 8002616:	2300      	movs	r3, #0
 8002618:	f383 8811 	msr	BASEPRI, r3
 800261c:	4620      	mov	r0, r4
 800261e:	bd38      	pop	{r3, r4, r5, pc}
 8002620:	20000ce8 	.word	0x20000ce8
	...

08002630 <chEvtWaitOneTimeout>:
 8002630:	4b11      	ldr	r3, [pc, #68]	; (8002678 <chEvtWaitOneTimeout+0x48>)
 8002632:	b570      	push	{r4, r5, r6, lr}
 8002634:	699e      	ldr	r6, [r3, #24]
 8002636:	2320      	movs	r3, #32
 8002638:	f383 8811 	msr	BASEPRI, r3
 800263c:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800263e:	ea13 0400 	ands.w	r4, r3, r0
 8002642:	d10e      	bne.n	8002662 <chEvtWaitOneTimeout+0x32>
 8002644:	b919      	cbnz	r1, 800264e <chEvtWaitOneTimeout+0x1e>
 8002646:	f384 8811 	msr	BASEPRI, r4
 800264a:	4620      	mov	r0, r4
 800264c:	bd70      	pop	{r4, r5, r6, pc}
 800264e:	6230      	str	r0, [r6, #32]
 8002650:	4605      	mov	r5, r0
 8002652:	200a      	movs	r0, #10
 8002654:	f7ff f894 	bl	8001780 <chSchGoSleepTimeoutS>
 8002658:	2800      	cmp	r0, #0
 800265a:	dbf4      	blt.n	8002646 <chEvtWaitOneTimeout+0x16>
 800265c:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800265e:	ea03 0405 	and.w	r4, r3, r5
 8002662:	4262      	negs	r2, r4
 8002664:	4014      	ands	r4, r2
 8002666:	ea23 0304 	bic.w	r3, r3, r4
 800266a:	6373      	str	r3, [r6, #52]	; 0x34
 800266c:	2300      	movs	r3, #0
 800266e:	f383 8811 	msr	BASEPRI, r3
 8002672:	4620      	mov	r0, r4
 8002674:	bd70      	pop	{r4, r5, r6, pc}
 8002676:	bf00      	nop
 8002678:	20000ce8 	.word	0x20000ce8
 800267c:	00000000 	.word	0x00000000

08002680 <chEvtWaitAnyTimeout>:
 8002680:	4b10      	ldr	r3, [pc, #64]	; (80026c4 <chEvtWaitAnyTimeout+0x44>)
 8002682:	b570      	push	{r4, r5, r6, lr}
 8002684:	699e      	ldr	r6, [r3, #24]
 8002686:	2320      	movs	r3, #32
 8002688:	f383 8811 	msr	BASEPRI, r3
 800268c:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800268e:	ea13 0500 	ands.w	r5, r3, r0
 8002692:	d10e      	bne.n	80026b2 <chEvtWaitAnyTimeout+0x32>
 8002694:	b919      	cbnz	r1, 800269e <chEvtWaitAnyTimeout+0x1e>
 8002696:	f385 8811 	msr	BASEPRI, r5
 800269a:	4628      	mov	r0, r5
 800269c:	bd70      	pop	{r4, r5, r6, pc}
 800269e:	6230      	str	r0, [r6, #32]
 80026a0:	4604      	mov	r4, r0
 80026a2:	200a      	movs	r0, #10
 80026a4:	f7ff f86c 	bl	8001780 <chSchGoSleepTimeoutS>
 80026a8:	2800      	cmp	r0, #0
 80026aa:	dbf4      	blt.n	8002696 <chEvtWaitAnyTimeout+0x16>
 80026ac:	6b73      	ldr	r3, [r6, #52]	; 0x34
 80026ae:	ea03 0504 	and.w	r5, r3, r4
 80026b2:	ea23 0305 	bic.w	r3, r3, r5
 80026b6:	6373      	str	r3, [r6, #52]	; 0x34
 80026b8:	2300      	movs	r3, #0
 80026ba:	f383 8811 	msr	BASEPRI, r3
 80026be:	4628      	mov	r0, r5
 80026c0:	bd70      	pop	{r4, r5, r6, pc}
 80026c2:	bf00      	nop
 80026c4:	20000ce8 	.word	0x20000ce8
	...

080026d0 <chEvtWaitAllTimeout>:
 80026d0:	b538      	push	{r3, r4, r5, lr}
 80026d2:	4b10      	ldr	r3, [pc, #64]	; (8002714 <chEvtWaitAllTimeout+0x44>)
 80026d4:	4604      	mov	r4, r0
 80026d6:	699d      	ldr	r5, [r3, #24]
 80026d8:	2320      	movs	r3, #32
 80026da:	f383 8811 	msr	BASEPRI, r3
 80026de:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80026e0:	ea30 0203 	bics.w	r2, r0, r3
 80026e4:	d00b      	beq.n	80026fe <chEvtWaitAllTimeout+0x2e>
 80026e6:	4608      	mov	r0, r1
 80026e8:	b911      	cbnz	r1, 80026f0 <chEvtWaitAllTimeout+0x20>
 80026ea:	f380 8811 	msr	BASEPRI, r0
 80026ee:	bd38      	pop	{r3, r4, r5, pc}
 80026f0:	622c      	str	r4, [r5, #32]
 80026f2:	200b      	movs	r0, #11
 80026f4:	f7ff f844 	bl	8001780 <chSchGoSleepTimeoutS>
 80026f8:	2800      	cmp	r0, #0
 80026fa:	db08      	blt.n	800270e <chEvtWaitAllTimeout+0x3e>
 80026fc:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80026fe:	ea23 0304 	bic.w	r3, r3, r4
 8002702:	636b      	str	r3, [r5, #52]	; 0x34
 8002704:	2300      	movs	r3, #0
 8002706:	f383 8811 	msr	BASEPRI, r3
 800270a:	4620      	mov	r0, r4
 800270c:	bd38      	pop	{r3, r4, r5, pc}
 800270e:	2000      	movs	r0, #0
 8002710:	e7eb      	b.n	80026ea <chEvtWaitAllTimeout+0x1a>
 8002712:	bf00      	nop
 8002714:	20000ce8 	.word	0x20000ce8
	...

08002720 <chMsgSend>:
 8002720:	4b0e      	ldr	r3, [pc, #56]	; (800275c <chMsgSend+0x3c>)
 8002722:	b510      	push	{r4, lr}
 8002724:	2220      	movs	r2, #32
 8002726:	699c      	ldr	r4, [r3, #24]
 8002728:	f382 8811 	msr	BASEPRI, r2
 800272c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800272e:	6321      	str	r1, [r4, #48]	; 0x30
 8002730:	f100 0128 	add.w	r1, r0, #40	; 0x28
 8002734:	6062      	str	r2, [r4, #4]
 8002736:	6221      	str	r1, [r4, #32]
 8002738:	6021      	str	r1, [r4, #0]
 800273a:	6014      	str	r4, [r2, #0]
 800273c:	7f02      	ldrb	r2, [r0, #28]
 800273e:	62c4      	str	r4, [r0, #44]	; 0x2c
 8002740:	2a0e      	cmp	r2, #14
 8002742:	d007      	beq.n	8002754 <chMsgSend+0x34>
 8002744:	200c      	movs	r0, #12
 8002746:	f7ff f803 	bl	8001750 <chSchGoSleepS>
 800274a:	6a20      	ldr	r0, [r4, #32]
 800274c:	2300      	movs	r3, #0
 800274e:	f383 8811 	msr	BASEPRI, r3
 8002752:	bd10      	pop	{r4, pc}
 8002754:	f7fe ffe4 	bl	8001720 <chSchReadyI>
 8002758:	e7f4      	b.n	8002744 <chMsgSend+0x24>
 800275a:	bf00      	nop
 800275c:	20000ce8 	.word	0x20000ce8

08002760 <chMsgWait>:
 8002760:	b510      	push	{r4, lr}
 8002762:	2320      	movs	r3, #32
 8002764:	f383 8811 	msr	BASEPRI, r3
 8002768:	4c0b      	ldr	r4, [pc, #44]	; (8002798 <chMsgWait+0x38>)
 800276a:	69a2      	ldr	r2, [r4, #24]
 800276c:	4613      	mov	r3, r2
 800276e:	f853 0f28 	ldr.w	r0, [r3, #40]!
 8002772:	4298      	cmp	r0, r3
 8002774:	d008      	beq.n	8002788 <chMsgWait+0x28>
 8002776:	6801      	ldr	r1, [r0, #0]
 8002778:	6291      	str	r1, [r2, #40]	; 0x28
 800277a:	220d      	movs	r2, #13
 800277c:	604b      	str	r3, [r1, #4]
 800277e:	2300      	movs	r3, #0
 8002780:	7702      	strb	r2, [r0, #28]
 8002782:	f383 8811 	msr	BASEPRI, r3
 8002786:	bd10      	pop	{r4, pc}
 8002788:	200e      	movs	r0, #14
 800278a:	f7fe ffe1 	bl	8001750 <chSchGoSleepS>
 800278e:	69a2      	ldr	r2, [r4, #24]
 8002790:	6a90      	ldr	r0, [r2, #40]	; 0x28
 8002792:	f102 0328 	add.w	r3, r2, #40	; 0x28
 8002796:	e7ee      	b.n	8002776 <chMsgWait+0x16>
 8002798:	20000ce8 	.word	0x20000ce8
 800279c:	00000000 	.word	0x00000000

080027a0 <chMsgRelease>:
 80027a0:	b508      	push	{r3, lr}
 80027a2:	2320      	movs	r3, #32
 80027a4:	f383 8811 	msr	BASEPRI, r3
 80027a8:	f7ff f812 	bl	80017d0 <chSchWakeupS>
 80027ac:	2300      	movs	r3, #0
 80027ae:	f383 8811 	msr	BASEPRI, r3
 80027b2:	bd08      	pop	{r3, pc}
	...

080027c0 <chMBObjectInit>:
 80027c0:	b510      	push	{r4, lr}
 80027c2:	460b      	mov	r3, r1
 80027c4:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80027c8:	6041      	str	r1, [r0, #4]
 80027ca:	4604      	mov	r4, r0
 80027cc:	6003      	str	r3, [r0, #0]
 80027ce:	e9c0 3302 	strd	r3, r3, [r0, #8]
 80027d2:	4611      	mov	r1, r2
 80027d4:	301c      	adds	r0, #28
 80027d6:	f7ff fafb 	bl	8001dd0 <chSemObjectInit>
 80027da:	f104 0010 	add.w	r0, r4, #16
 80027de:	2100      	movs	r1, #0
 80027e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80027e4:	f7ff baf4 	b.w	8001dd0 <chSemObjectInit>
	...

080027f0 <chMBResetI>:
 80027f0:	b510      	push	{r4, lr}
 80027f2:	4604      	mov	r4, r0
 80027f4:	e9d4 3100 	ldrd	r3, r1, [r4]
 80027f8:	1ac9      	subs	r1, r1, r3
 80027fa:	301c      	adds	r0, #28
 80027fc:	60a3      	str	r3, [r4, #8]
 80027fe:	60e3      	str	r3, [r4, #12]
 8002800:	1089      	asrs	r1, r1, #2
 8002802:	f7ff faed 	bl	8001de0 <chSemResetI>
 8002806:	f104 0010 	add.w	r0, r4, #16
 800280a:	2100      	movs	r1, #0
 800280c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002810:	f7ff bae6 	b.w	8001de0 <chSemResetI>
	...

08002820 <chMBReset>:
 8002820:	b508      	push	{r3, lr}
 8002822:	2320      	movs	r3, #32
 8002824:	f383 8811 	msr	BASEPRI, r3
 8002828:	f7ff ffe2 	bl	80027f0 <chMBResetI>
 800282c:	f7ff f850 	bl	80018d0 <chSchRescheduleS>
 8002830:	2300      	movs	r3, #0
 8002832:	f383 8811 	msr	BASEPRI, r3
 8002836:	bd08      	pop	{r3, pc}
	...

08002840 <chMBPost>:
 8002840:	b570      	push	{r4, r5, r6, lr}
 8002842:	2320      	movs	r3, #32
 8002844:	4604      	mov	r4, r0
 8002846:	460e      	mov	r6, r1
 8002848:	f383 8811 	msr	BASEPRI, r3
 800284c:	4611      	mov	r1, r2
 800284e:	301c      	adds	r0, #28
 8002850:	f7ff fb3e 	bl	8001ed0 <chSemWaitTimeoutS>
 8002854:	4605      	mov	r5, r0
 8002856:	b978      	cbnz	r0, 8002878 <chMBPost+0x38>
 8002858:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800285c:	1d13      	adds	r3, r2, #4
 800285e:	428b      	cmp	r3, r1
 8002860:	60a3      	str	r3, [r4, #8]
 8002862:	bf28      	it	cs
 8002864:	6823      	ldrcs	r3, [r4, #0]
 8002866:	6016      	str	r6, [r2, #0]
 8002868:	f104 0010 	add.w	r0, r4, #16
 800286c:	bf28      	it	cs
 800286e:	60a3      	strcs	r3, [r4, #8]
 8002870:	f7ff fb6e 	bl	8001f50 <chSemSignalI>
 8002874:	f7ff f82c 	bl	80018d0 <chSchRescheduleS>
 8002878:	2300      	movs	r3, #0
 800287a:	f383 8811 	msr	BASEPRI, r3
 800287e:	4628      	mov	r0, r5
 8002880:	bd70      	pop	{r4, r5, r6, pc}
 8002882:	bf00      	nop
	...

08002890 <chMBPostI>:
 8002890:	b538      	push	{r3, r4, r5, lr}
 8002892:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8002894:	2b00      	cmp	r3, #0
 8002896:	dd12      	ble.n	80028be <chMBPostI+0x2e>
 8002898:	e9d0 5401 	ldrd	r5, r4, [r0, #4]
 800289c:	1d22      	adds	r2, r4, #4
 800289e:	3b01      	subs	r3, #1
 80028a0:	42aa      	cmp	r2, r5
 80028a2:	6243      	str	r3, [r0, #36]	; 0x24
 80028a4:	bf28      	it	cs
 80028a6:	6803      	ldrcs	r3, [r0, #0]
 80028a8:	6082      	str	r2, [r0, #8]
 80028aa:	6021      	str	r1, [r4, #0]
 80028ac:	f100 0010 	add.w	r0, r0, #16
 80028b0:	bf28      	it	cs
 80028b2:	f840 3c08 	strcs.w	r3, [r0, #-8]
 80028b6:	f7ff fb4b 	bl	8001f50 <chSemSignalI>
 80028ba:	2000      	movs	r0, #0
 80028bc:	bd38      	pop	{r3, r4, r5, pc}
 80028be:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80028c2:	bd38      	pop	{r3, r4, r5, pc}
	...

080028d0 <chMBPostAhead>:
 80028d0:	b570      	push	{r4, r5, r6, lr}
 80028d2:	2320      	movs	r3, #32
 80028d4:	4604      	mov	r4, r0
 80028d6:	460e      	mov	r6, r1
 80028d8:	f383 8811 	msr	BASEPRI, r3
 80028dc:	4611      	mov	r1, r2
 80028de:	301c      	adds	r0, #28
 80028e0:	f7ff faf6 	bl	8001ed0 <chSemWaitTimeoutS>
 80028e4:	4605      	mov	r5, r0
 80028e6:	b120      	cbz	r0, 80028f2 <chMBPostAhead+0x22>
 80028e8:	2300      	movs	r3, #0
 80028ea:	f383 8811 	msr	BASEPRI, r3
 80028ee:	4628      	mov	r0, r5
 80028f0:	bd70      	pop	{r4, r5, r6, pc}
 80028f2:	68e3      	ldr	r3, [r4, #12]
 80028f4:	6822      	ldr	r2, [r4, #0]
 80028f6:	3b04      	subs	r3, #4
 80028f8:	4293      	cmp	r3, r2
 80028fa:	60e3      	str	r3, [r4, #12]
 80028fc:	d202      	bcs.n	8002904 <chMBPostAhead+0x34>
 80028fe:	6863      	ldr	r3, [r4, #4]
 8002900:	3b04      	subs	r3, #4
 8002902:	60e3      	str	r3, [r4, #12]
 8002904:	601e      	str	r6, [r3, #0]
 8002906:	f104 0010 	add.w	r0, r4, #16
 800290a:	f7ff fb21 	bl	8001f50 <chSemSignalI>
 800290e:	f7fe ffdf 	bl	80018d0 <chSchRescheduleS>
 8002912:	2300      	movs	r3, #0
 8002914:	f383 8811 	msr	BASEPRI, r3
 8002918:	4628      	mov	r0, r5
 800291a:	bd70      	pop	{r4, r5, r6, pc}
 800291c:	0000      	movs	r0, r0
	...

08002920 <chMBPostAheadI>:
 8002920:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8002922:	2a00      	cmp	r2, #0
 8002924:	dd11      	ble.n	800294a <chMBPostAheadI+0x2a>
 8002926:	68c3      	ldr	r3, [r0, #12]
 8002928:	b510      	push	{r4, lr}
 800292a:	6804      	ldr	r4, [r0, #0]
 800292c:	3b04      	subs	r3, #4
 800292e:	3a01      	subs	r2, #1
 8002930:	42a3      	cmp	r3, r4
 8002932:	6242      	str	r2, [r0, #36]	; 0x24
 8002934:	60c3      	str	r3, [r0, #12]
 8002936:	d202      	bcs.n	800293e <chMBPostAheadI+0x1e>
 8002938:	6843      	ldr	r3, [r0, #4]
 800293a:	3b04      	subs	r3, #4
 800293c:	60c3      	str	r3, [r0, #12]
 800293e:	6019      	str	r1, [r3, #0]
 8002940:	3010      	adds	r0, #16
 8002942:	f7ff fb05 	bl	8001f50 <chSemSignalI>
 8002946:	2000      	movs	r0, #0
 8002948:	bd10      	pop	{r4, pc}
 800294a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800294e:	4770      	bx	lr

08002950 <chMBFetch>:
 8002950:	b570      	push	{r4, r5, r6, lr}
 8002952:	2320      	movs	r3, #32
 8002954:	4604      	mov	r4, r0
 8002956:	460e      	mov	r6, r1
 8002958:	f383 8811 	msr	BASEPRI, r3
 800295c:	4611      	mov	r1, r2
 800295e:	3010      	adds	r0, #16
 8002960:	f7ff fab6 	bl	8001ed0 <chSemWaitTimeoutS>
 8002964:	4605      	mov	r5, r0
 8002966:	b980      	cbnz	r0, 800298a <chMBFetch+0x3a>
 8002968:	68e3      	ldr	r3, [r4, #12]
 800296a:	6862      	ldr	r2, [r4, #4]
 800296c:	6819      	ldr	r1, [r3, #0]
 800296e:	3304      	adds	r3, #4
 8002970:	4293      	cmp	r3, r2
 8002972:	60e3      	str	r3, [r4, #12]
 8002974:	bf28      	it	cs
 8002976:	6823      	ldrcs	r3, [r4, #0]
 8002978:	6031      	str	r1, [r6, #0]
 800297a:	f104 001c 	add.w	r0, r4, #28
 800297e:	bf28      	it	cs
 8002980:	60e3      	strcs	r3, [r4, #12]
 8002982:	f7ff fae5 	bl	8001f50 <chSemSignalI>
 8002986:	f7fe ffa3 	bl	80018d0 <chSchRescheduleS>
 800298a:	2300      	movs	r3, #0
 800298c:	f383 8811 	msr	BASEPRI, r3
 8002990:	4628      	mov	r0, r5
 8002992:	bd70      	pop	{r4, r5, r6, pc}
	...

080029a0 <chMBFetchI>:
 80029a0:	6982      	ldr	r2, [r0, #24]
 80029a2:	2a00      	cmp	r2, #0
 80029a4:	dd14      	ble.n	80029d0 <chMBFetchI+0x30>
 80029a6:	68c3      	ldr	r3, [r0, #12]
 80029a8:	3a01      	subs	r2, #1
 80029aa:	b510      	push	{r4, lr}
 80029ac:	6182      	str	r2, [r0, #24]
 80029ae:	6842      	ldr	r2, [r0, #4]
 80029b0:	681c      	ldr	r4, [r3, #0]
 80029b2:	3304      	adds	r3, #4
 80029b4:	4293      	cmp	r3, r2
 80029b6:	60c3      	str	r3, [r0, #12]
 80029b8:	bf28      	it	cs
 80029ba:	6803      	ldrcs	r3, [r0, #0]
 80029bc:	600c      	str	r4, [r1, #0]
 80029be:	f100 001c 	add.w	r0, r0, #28
 80029c2:	bf28      	it	cs
 80029c4:	f840 3c10 	strcs.w	r3, [r0, #-16]
 80029c8:	f7ff fac2 	bl	8001f50 <chSemSignalI>
 80029cc:	2000      	movs	r0, #0
 80029ce:	bd10      	pop	{r4, pc}
 80029d0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80029d4:	4770      	bx	lr
 80029d6:	bf00      	nop
	...

080029e0 <chIQObjectInit>:
 80029e0:	b430      	push	{r4, r5}
 80029e2:	9c02      	ldr	r4, [sp, #8]
 80029e4:	6204      	str	r4, [r0, #32]
 80029e6:	2500      	movs	r5, #0
 80029e8:	440a      	add	r2, r1
 80029ea:	6085      	str	r5, [r0, #8]
 80029ec:	6102      	str	r2, [r0, #16]
 80029ee:	e9c0 0000 	strd	r0, r0, [r0]
 80029f2:	60c1      	str	r1, [r0, #12]
 80029f4:	e9c0 1105 	strd	r1, r1, [r0, #20]
 80029f8:	61c3      	str	r3, [r0, #28]
 80029fa:	bc30      	pop	{r4, r5}
 80029fc:	4770      	bx	lr
 80029fe:	bf00      	nop

08002a00 <chIQResetI>:
 8002a00:	68c2      	ldr	r2, [r0, #12]
 8002a02:	2100      	movs	r1, #0
 8002a04:	6081      	str	r1, [r0, #8]
 8002a06:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002a0a:	f06f 0101 	mvn.w	r1, #1
 8002a0e:	f7ff b8cf 	b.w	8001bb0 <chThdDequeueAllI>
 8002a12:	bf00      	nop
	...

08002a20 <chIQPutI>:
 8002a20:	b510      	push	{r4, lr}
 8002a22:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 8002a26:	42a2      	cmp	r2, r4
 8002a28:	6883      	ldr	r3, [r0, #8]
 8002a2a:	d00f      	beq.n	8002a4c <chIQPutI+0x2c>
 8002a2c:	3301      	adds	r3, #1
 8002a2e:	1c54      	adds	r4, r2, #1
 8002a30:	6083      	str	r3, [r0, #8]
 8002a32:	6144      	str	r4, [r0, #20]
 8002a34:	7011      	strb	r1, [r2, #0]
 8002a36:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
 8002a3a:	429a      	cmp	r2, r3
 8002a3c:	d301      	bcc.n	8002a42 <chIQPutI+0x22>
 8002a3e:	68c3      	ldr	r3, [r0, #12]
 8002a40:	6143      	str	r3, [r0, #20]
 8002a42:	2100      	movs	r1, #0
 8002a44:	f7ff f8a4 	bl	8001b90 <chThdDequeueNextI>
 8002a48:	2000      	movs	r0, #0
 8002a4a:	bd10      	pop	{r4, pc}
 8002a4c:	2b00      	cmp	r3, #0
 8002a4e:	d0ed      	beq.n	8002a2c <chIQPutI+0xc>
 8002a50:	f06f 0003 	mvn.w	r0, #3
 8002a54:	bd10      	pop	{r4, pc}
 8002a56:	bf00      	nop
	...

08002a60 <chIQGetTimeout>:
 8002a60:	b570      	push	{r4, r5, r6, lr}
 8002a62:	2320      	movs	r3, #32
 8002a64:	460e      	mov	r6, r1
 8002a66:	4604      	mov	r4, r0
 8002a68:	f383 8811 	msr	BASEPRI, r3
 8002a6c:	69c3      	ldr	r3, [r0, #28]
 8002a6e:	b12b      	cbz	r3, 8002a7c <chIQGetTimeout+0x1c>
 8002a70:	4798      	blx	r3
 8002a72:	e003      	b.n	8002a7c <chIQGetTimeout+0x1c>
 8002a74:	f7ff f874 	bl	8001b60 <chThdEnqueueTimeoutS>
 8002a78:	2800      	cmp	r0, #0
 8002a7a:	db15      	blt.n	8002aa8 <chIQGetTimeout+0x48>
 8002a7c:	68a5      	ldr	r5, [r4, #8]
 8002a7e:	4631      	mov	r1, r6
 8002a80:	4620      	mov	r0, r4
 8002a82:	2d00      	cmp	r5, #0
 8002a84:	d0f6      	beq.n	8002a74 <chIQGetTimeout+0x14>
 8002a86:	69a2      	ldr	r2, [r4, #24]
 8002a88:	6921      	ldr	r1, [r4, #16]
 8002a8a:	1c53      	adds	r3, r2, #1
 8002a8c:	428b      	cmp	r3, r1
 8002a8e:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8002a92:	61a3      	str	r3, [r4, #24]
 8002a94:	60a5      	str	r5, [r4, #8]
 8002a96:	bf28      	it	cs
 8002a98:	68e3      	ldrcs	r3, [r4, #12]
 8002a9a:	7810      	ldrb	r0, [r2, #0]
 8002a9c:	bf28      	it	cs
 8002a9e:	61a3      	strcs	r3, [r4, #24]
 8002aa0:	2300      	movs	r3, #0
 8002aa2:	f383 8811 	msr	BASEPRI, r3
 8002aa6:	bd70      	pop	{r4, r5, r6, pc}
 8002aa8:	f385 8811 	msr	BASEPRI, r5
 8002aac:	bd70      	pop	{r4, r5, r6, pc}
 8002aae:	bf00      	nop

08002ab0 <chIQReadTimeout>:
 8002ab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ab4:	4604      	mov	r4, r0
 8002ab6:	b083      	sub	sp, #12
 8002ab8:	4689      	mov	r9, r1
 8002aba:	4693      	mov	fp, r2
 8002abc:	461d      	mov	r5, r3
 8002abe:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8002ac2:	2720      	movs	r7, #32
 8002ac4:	f387 8811 	msr	BASEPRI, r7
 8002ac8:	2600      	movs	r6, #0
 8002aca:	9701      	str	r7, [sp, #4]
 8002acc:	46b2      	mov	sl, r6
 8002ace:	f1b8 0f00 	cmp.w	r8, #0
 8002ad2:	d005      	beq.n	8002ae0 <chIQReadTimeout+0x30>
 8002ad4:	4620      	mov	r0, r4
 8002ad6:	47c0      	blx	r8
 8002ad8:	e002      	b.n	8002ae0 <chIQReadTimeout+0x30>
 8002ada:	f7ff f841 	bl	8001b60 <chThdEnqueueTimeoutS>
 8002ade:	b9d8      	cbnz	r0, 8002b18 <chIQReadTimeout+0x68>
 8002ae0:	68a7      	ldr	r7, [r4, #8]
 8002ae2:	4629      	mov	r1, r5
 8002ae4:	4620      	mov	r0, r4
 8002ae6:	2f00      	cmp	r7, #0
 8002ae8:	d0f7      	beq.n	8002ada <chIQReadTimeout+0x2a>
 8002aea:	69a2      	ldr	r2, [r4, #24]
 8002aec:	3f01      	subs	r7, #1
 8002aee:	1c51      	adds	r1, r2, #1
 8002af0:	61a1      	str	r1, [r4, #24]
 8002af2:	60a7      	str	r7, [r4, #8]
 8002af4:	7813      	ldrb	r3, [r2, #0]
 8002af6:	f809 3b01 	strb.w	r3, [r9], #1
 8002afa:	6923      	ldr	r3, [r4, #16]
 8002afc:	69a2      	ldr	r2, [r4, #24]
 8002afe:	429a      	cmp	r2, r3
 8002b00:	bf24      	itt	cs
 8002b02:	68e3      	ldrcs	r3, [r4, #12]
 8002b04:	61a3      	strcs	r3, [r4, #24]
 8002b06:	f38a 8811 	msr	BASEPRI, sl
 8002b0a:	3601      	adds	r6, #1
 8002b0c:	45b3      	cmp	fp, r6
 8002b0e:	d005      	beq.n	8002b1c <chIQReadTimeout+0x6c>
 8002b10:	9b01      	ldr	r3, [sp, #4]
 8002b12:	f383 8811 	msr	BASEPRI, r3
 8002b16:	e7da      	b.n	8002ace <chIQReadTimeout+0x1e>
 8002b18:	f387 8811 	msr	BASEPRI, r7
 8002b1c:	4630      	mov	r0, r6
 8002b1e:	b003      	add	sp, #12
 8002b20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08002b30 <chOQObjectInit>:
 8002b30:	b430      	push	{r4, r5}
 8002b32:	9c02      	ldr	r4, [sp, #8]
 8002b34:	6082      	str	r2, [r0, #8]
 8002b36:	188d      	adds	r5, r1, r2
 8002b38:	e9c0 1503 	strd	r1, r5, [r0, #12]
 8002b3c:	e9c0 3407 	strd	r3, r4, [r0, #28]
 8002b40:	e9c0 0000 	strd	r0, r0, [r0]
 8002b44:	e9c0 1105 	strd	r1, r1, [r0, #20]
 8002b48:	bc30      	pop	{r4, r5}
 8002b4a:	4770      	bx	lr
 8002b4c:	0000      	movs	r0, r0
	...

08002b50 <chOQResetI>:
 8002b50:	b410      	push	{r4}
 8002b52:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 8002b56:	1b12      	subs	r2, r2, r4
 8002b58:	6184      	str	r4, [r0, #24]
 8002b5a:	6144      	str	r4, [r0, #20]
 8002b5c:	f06f 0101 	mvn.w	r1, #1
 8002b60:	6082      	str	r2, [r0, #8]
 8002b62:	bc10      	pop	{r4}
 8002b64:	f7ff b824 	b.w	8001bb0 <chThdDequeueAllI>
	...

08002b70 <chOQPutTimeout>:
 8002b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b72:	4604      	mov	r4, r0
 8002b74:	460f      	mov	r7, r1
 8002b76:	4616      	mov	r6, r2
 8002b78:	2320      	movs	r3, #32
 8002b7a:	f383 8811 	msr	BASEPRI, r3
 8002b7e:	e003      	b.n	8002b88 <chOQPutTimeout+0x18>
 8002b80:	f7fe ffee 	bl	8001b60 <chThdEnqueueTimeoutS>
 8002b84:	2800      	cmp	r0, #0
 8002b86:	db17      	blt.n	8002bb8 <chOQPutTimeout+0x48>
 8002b88:	68a5      	ldr	r5, [r4, #8]
 8002b8a:	4631      	mov	r1, r6
 8002b8c:	4620      	mov	r0, r4
 8002b8e:	2d00      	cmp	r5, #0
 8002b90:	d0f6      	beq.n	8002b80 <chOQPutTimeout+0x10>
 8002b92:	6963      	ldr	r3, [r4, #20]
 8002b94:	3d01      	subs	r5, #1
 8002b96:	1c5a      	adds	r2, r3, #1
 8002b98:	6162      	str	r2, [r4, #20]
 8002b9a:	60a5      	str	r5, [r4, #8]
 8002b9c:	701f      	strb	r7, [r3, #0]
 8002b9e:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8002ba2:	429a      	cmp	r2, r3
 8002ba4:	bf24      	itt	cs
 8002ba6:	68e3      	ldrcs	r3, [r4, #12]
 8002ba8:	6163      	strcs	r3, [r4, #20]
 8002baa:	69e3      	ldr	r3, [r4, #28]
 8002bac:	b103      	cbz	r3, 8002bb0 <chOQPutTimeout+0x40>
 8002bae:	4798      	blx	r3
 8002bb0:	2000      	movs	r0, #0
 8002bb2:	f380 8811 	msr	BASEPRI, r0
 8002bb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002bb8:	f385 8811 	msr	BASEPRI, r5
 8002bbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002bbe:	bf00      	nop

08002bc0 <chOQGetI>:
 8002bc0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8002bc4:	4291      	cmp	r1, r2
 8002bc6:	b538      	push	{r3, r4, r5, lr}
 8002bc8:	6883      	ldr	r3, [r0, #8]
 8002bca:	d00e      	beq.n	8002bea <chOQGetI+0x2a>
 8002bcc:	6905      	ldr	r5, [r0, #16]
 8002bce:	1c51      	adds	r1, r2, #1
 8002bd0:	3301      	adds	r3, #1
 8002bd2:	6083      	str	r3, [r0, #8]
 8002bd4:	6181      	str	r1, [r0, #24]
 8002bd6:	42a9      	cmp	r1, r5
 8002bd8:	7814      	ldrb	r4, [r2, #0]
 8002bda:	d301      	bcc.n	8002be0 <chOQGetI+0x20>
 8002bdc:	68c3      	ldr	r3, [r0, #12]
 8002bde:	6183      	str	r3, [r0, #24]
 8002be0:	2100      	movs	r1, #0
 8002be2:	f7fe ffd5 	bl	8001b90 <chThdDequeueNextI>
 8002be6:	4620      	mov	r0, r4
 8002be8:	bd38      	pop	{r3, r4, r5, pc}
 8002bea:	2b00      	cmp	r3, #0
 8002bec:	d0ee      	beq.n	8002bcc <chOQGetI+0xc>
 8002bee:	f06f 0002 	mvn.w	r0, #2
 8002bf2:	bd38      	pop	{r3, r4, r5, pc}
	...

08002c00 <chOQWriteTimeout>:
 8002c00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c04:	b083      	sub	sp, #12
 8002c06:	4604      	mov	r4, r0
 8002c08:	460d      	mov	r5, r1
 8002c0a:	4616      	mov	r6, r2
 8002c0c:	9301      	str	r3, [sp, #4]
 8002c0e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8002c12:	f04f 0920 	mov.w	r9, #32
 8002c16:	f389 8811 	msr	BASEPRI, r9
 8002c1a:	2700      	movs	r7, #0
 8002c1c:	46ba      	mov	sl, r7
 8002c1e:	68a3      	ldr	r3, [r4, #8]
 8002c20:	f105 0b01 	add.w	fp, r5, #1
 8002c24:	1e59      	subs	r1, r3, #1
 8002c26:	4620      	mov	r0, r4
 8002c28:	b1fb      	cbz	r3, 8002c6a <chOQWriteTimeout+0x6a>
 8002c2a:	6963      	ldr	r3, [r4, #20]
 8002c2c:	60a1      	str	r1, [r4, #8]
 8002c2e:	1c59      	adds	r1, r3, #1
 8002c30:	6161      	str	r1, [r4, #20]
 8002c32:	7829      	ldrb	r1, [r5, #0]
 8002c34:	7019      	strb	r1, [r3, #0]
 8002c36:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 8002c3a:	4299      	cmp	r1, r3
 8002c3c:	bf24      	itt	cs
 8002c3e:	68e3      	ldrcs	r3, [r4, #12]
 8002c40:	6163      	strcs	r3, [r4, #20]
 8002c42:	f1b8 0f00 	cmp.w	r8, #0
 8002c46:	d000      	beq.n	8002c4a <chOQWriteTimeout+0x4a>
 8002c48:	47c0      	blx	r8
 8002c4a:	f38a 8811 	msr	BASEPRI, sl
 8002c4e:	3e01      	subs	r6, #1
 8002c50:	f107 0701 	add.w	r7, r7, #1
 8002c54:	d013      	beq.n	8002c7e <chOQWriteTimeout+0x7e>
 8002c56:	f389 8811 	msr	BASEPRI, r9
 8002c5a:	68a3      	ldr	r3, [r4, #8]
 8002c5c:	465d      	mov	r5, fp
 8002c5e:	1e59      	subs	r1, r3, #1
 8002c60:	f105 0b01 	add.w	fp, r5, #1
 8002c64:	4620      	mov	r0, r4
 8002c66:	2b00      	cmp	r3, #0
 8002c68:	d1df      	bne.n	8002c2a <chOQWriteTimeout+0x2a>
 8002c6a:	9901      	ldr	r1, [sp, #4]
 8002c6c:	9300      	str	r3, [sp, #0]
 8002c6e:	4620      	mov	r0, r4
 8002c70:	f7fe ff76 	bl	8001b60 <chThdEnqueueTimeoutS>
 8002c74:	9b00      	ldr	r3, [sp, #0]
 8002c76:	2800      	cmp	r0, #0
 8002c78:	d0d1      	beq.n	8002c1e <chOQWriteTimeout+0x1e>
 8002c7a:	f383 8811 	msr	BASEPRI, r3
 8002c7e:	4638      	mov	r0, r7
 8002c80:	b003      	add	sp, #12
 8002c82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c86:	bf00      	nop
	...

08002c90 <_core_init>:
 8002c90:	4a05      	ldr	r2, [pc, #20]	; (8002ca8 <_core_init+0x18>)
 8002c92:	4b06      	ldr	r3, [pc, #24]	; (8002cac <_core_init+0x1c>)
 8002c94:	4806      	ldr	r0, [pc, #24]	; (8002cb0 <_core_init+0x20>)
 8002c96:	4907      	ldr	r1, [pc, #28]	; (8002cb4 <_core_init+0x24>)
 8002c98:	f022 0207 	bic.w	r2, r2, #7
 8002c9c:	f023 0307 	bic.w	r3, r3, #7
 8002ca0:	6002      	str	r2, [r0, #0]
 8002ca2:	600b      	str	r3, [r1, #0]
 8002ca4:	4770      	bx	lr
 8002ca6:	bf00      	nop
 8002ca8:	20001e93 	.word	0x20001e93
 8002cac:	20020000 	.word	0x20020000
 8002cb0:	20000e3c 	.word	0x20000e3c
 8002cb4:	20000e38 	.word	0x20000e38
	...

08002cc0 <chCoreAlloc>:
 8002cc0:	4603      	mov	r3, r0
 8002cc2:	2220      	movs	r2, #32
 8002cc4:	f382 8811 	msr	BASEPRI, r2
 8002cc8:	4908      	ldr	r1, [pc, #32]	; (8002cec <chCoreAlloc+0x2c>)
 8002cca:	4a09      	ldr	r2, [pc, #36]	; (8002cf0 <chCoreAlloc+0x30>)
 8002ccc:	6808      	ldr	r0, [r1, #0]
 8002cce:	6812      	ldr	r2, [r2, #0]
 8002cd0:	3307      	adds	r3, #7
 8002cd2:	f023 0307 	bic.w	r3, r3, #7
 8002cd6:	1a12      	subs	r2, r2, r0
 8002cd8:	4293      	cmp	r3, r2
 8002cda:	bf9a      	itte	ls
 8002cdc:	181b      	addls	r3, r3, r0
 8002cde:	600b      	strls	r3, [r1, #0]
 8002ce0:	2000      	movhi	r0, #0
 8002ce2:	2300      	movs	r3, #0
 8002ce4:	f383 8811 	msr	BASEPRI, r3
 8002ce8:	4770      	bx	lr
 8002cea:	bf00      	nop
 8002cec:	20000e3c 	.word	0x20000e3c
 8002cf0:	20000e38 	.word	0x20000e38
	...

08002d00 <chCoreGetStatusX>:
 8002d00:	4a02      	ldr	r2, [pc, #8]	; (8002d0c <chCoreGetStatusX+0xc>)
 8002d02:	4b03      	ldr	r3, [pc, #12]	; (8002d10 <chCoreGetStatusX+0x10>)
 8002d04:	6810      	ldr	r0, [r2, #0]
 8002d06:	681b      	ldr	r3, [r3, #0]
 8002d08:	1ac0      	subs	r0, r0, r3
 8002d0a:	4770      	bx	lr
 8002d0c:	20000e38 	.word	0x20000e38
 8002d10:	20000e3c 	.word	0x20000e3c
	...

08002d20 <_heap_init>:
 8002d20:	4b04      	ldr	r3, [pc, #16]	; (8002d34 <_heap_init+0x14>)
 8002d22:	4a05      	ldr	r2, [pc, #20]	; (8002d38 <_heap_init+0x18>)
 8002d24:	601a      	str	r2, [r3, #0]
 8002d26:	f103 0010 	add.w	r0, r3, #16
 8002d2a:	2200      	movs	r2, #0
 8002d2c:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8002d30:	f7ff b96e 	b.w	8002010 <chMtxObjectInit>
 8002d34:	20000e40 	.word	0x20000e40
 8002d38:	08002cc1 	.word	0x08002cc1
 8002d3c:	00000000 	.word	0x00000000

08002d40 <chHeapObjectInit>:
 8002d40:	2300      	movs	r3, #0
 8002d42:	3a08      	subs	r2, #8
 8002d44:	6081      	str	r1, [r0, #8]
 8002d46:	6003      	str	r3, [r0, #0]
 8002d48:	60c3      	str	r3, [r0, #12]
 8002d4a:	3010      	adds	r0, #16
 8002d4c:	e9c1 3200 	strd	r3, r2, [r1]
 8002d50:	f7ff b95e 	b.w	8002010 <chMtxObjectInit>
	...

08002d60 <chHeapAlloc>:
 8002d60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002d62:	4e20      	ldr	r6, [pc, #128]	; (8002de4 <chHeapAlloc+0x84>)
 8002d64:	2800      	cmp	r0, #0
 8002d66:	bf18      	it	ne
 8002d68:	4606      	movne	r6, r0
 8002d6a:	f106 0710 	add.w	r7, r6, #16
 8002d6e:	3107      	adds	r1, #7
 8002d70:	4638      	mov	r0, r7
 8002d72:	f021 0507 	bic.w	r5, r1, #7
 8002d76:	f106 0408 	add.w	r4, r6, #8
 8002d7a:	f7ff f9c1 	bl	8002100 <chMtxLock>
 8002d7e:	e003      	b.n	8002d88 <chHeapAlloc+0x28>
 8002d80:	6843      	ldr	r3, [r0, #4]
 8002d82:	42ab      	cmp	r3, r5
 8002d84:	d212      	bcs.n	8002dac <chHeapAlloc+0x4c>
 8002d86:	4604      	mov	r4, r0
 8002d88:	6820      	ldr	r0, [r4, #0]
 8002d8a:	2800      	cmp	r0, #0
 8002d8c:	d1f8      	bne.n	8002d80 <chHeapAlloc+0x20>
 8002d8e:	4638      	mov	r0, r7
 8002d90:	f7ff f9de 	bl	8002150 <chMtxUnlock>
 8002d94:	6833      	ldr	r3, [r6, #0]
 8002d96:	b313      	cbz	r3, 8002dde <chHeapAlloc+0x7e>
 8002d98:	f105 0008 	add.w	r0, r5, #8
 8002d9c:	4798      	blx	r3
 8002d9e:	b1f0      	cbz	r0, 8002dde <chHeapAlloc+0x7e>
 8002da0:	e9c0 6500 	strd	r6, r5, [r0]
 8002da4:	f100 0408 	add.w	r4, r0, #8
 8002da8:	4620      	mov	r0, r4
 8002daa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002dac:	f105 0208 	add.w	r2, r5, #8
 8002db0:	4293      	cmp	r3, r2
 8002db2:	6801      	ldr	r1, [r0, #0]
 8002db4:	d208      	bcs.n	8002dc8 <chHeapAlloc+0x68>
 8002db6:	6021      	str	r1, [r4, #0]
 8002db8:	4604      	mov	r4, r0
 8002dba:	4638      	mov	r0, r7
 8002dbc:	f844 6b08 	str.w	r6, [r4], #8
 8002dc0:	f7ff f9c6 	bl	8002150 <chMtxUnlock>
 8002dc4:	4620      	mov	r0, r4
 8002dc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002dc8:	eb00 0c02 	add.w	ip, r0, r2
 8002dcc:	1b5b      	subs	r3, r3, r5
 8002dce:	3b08      	subs	r3, #8
 8002dd0:	5081      	str	r1, [r0, r2]
 8002dd2:	f8cc 3004 	str.w	r3, [ip, #4]
 8002dd6:	f8c4 c000 	str.w	ip, [r4]
 8002dda:	6045      	str	r5, [r0, #4]
 8002ddc:	e7ec      	b.n	8002db8 <chHeapAlloc+0x58>
 8002dde:	2400      	movs	r4, #0
 8002de0:	e7e2      	b.n	8002da8 <chHeapAlloc+0x48>
 8002de2:	bf00      	nop
 8002de4:	20000e40 	.word	0x20000e40
	...

08002df0 <chHeapFree>:
 8002df0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002df2:	f850 5c08 	ldr.w	r5, [r0, #-8]
 8002df6:	f105 0710 	add.w	r7, r5, #16
 8002dfa:	4606      	mov	r6, r0
 8002dfc:	f1a0 0408 	sub.w	r4, r0, #8
 8002e00:	3508      	adds	r5, #8
 8002e02:	4638      	mov	r0, r7
 8002e04:	f7ff f97c 	bl	8002100 <chMtxLock>
 8002e08:	462b      	mov	r3, r5
 8002e0a:	42ab      	cmp	r3, r5
 8002e0c:	681a      	ldr	r2, [r3, #0]
 8002e0e:	d001      	beq.n	8002e14 <chHeapFree+0x24>
 8002e10:	42a3      	cmp	r3, r4
 8002e12:	d202      	bcs.n	8002e1a <chHeapFree+0x2a>
 8002e14:	b11a      	cbz	r2, 8002e1e <chHeapFree+0x2e>
 8002e16:	4294      	cmp	r4, r2
 8002e18:	d301      	bcc.n	8002e1e <chHeapFree+0x2e>
 8002e1a:	4613      	mov	r3, r2
 8002e1c:	e7f5      	b.n	8002e0a <chHeapFree+0x1a>
 8002e1e:	f846 2c08 	str.w	r2, [r6, #-8]
 8002e22:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8002e26:	601c      	str	r4, [r3, #0]
 8002e28:	f856 0c08 	ldr.w	r0, [r6, #-8]
 8002e2c:	18b1      	adds	r1, r6, r2
 8002e2e:	4281      	cmp	r1, r0
 8002e30:	d00a      	beq.n	8002e48 <chHeapFree+0x58>
 8002e32:	6859      	ldr	r1, [r3, #4]
 8002e34:	f101 0208 	add.w	r2, r1, #8
 8002e38:	441a      	add	r2, r3
 8002e3a:	4294      	cmp	r4, r2
 8002e3c:	d012      	beq.n	8002e64 <chHeapFree+0x74>
 8002e3e:	4638      	mov	r0, r7
 8002e40:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002e44:	f7ff b984 	b.w	8002150 <chMtxUnlock>
 8002e48:	6849      	ldr	r1, [r1, #4]
 8002e4a:	58b0      	ldr	r0, [r6, r2]
 8002e4c:	f846 0c08 	str.w	r0, [r6, #-8]
 8002e50:	3208      	adds	r2, #8
 8002e52:	440a      	add	r2, r1
 8002e54:	f846 2c04 	str.w	r2, [r6, #-4]
 8002e58:	6859      	ldr	r1, [r3, #4]
 8002e5a:	f101 0208 	add.w	r2, r1, #8
 8002e5e:	441a      	add	r2, r3
 8002e60:	4294      	cmp	r4, r2
 8002e62:	d1ec      	bne.n	8002e3e <chHeapFree+0x4e>
 8002e64:	e956 0202 	ldrd	r0, r2, [r6, #-8]
 8002e68:	3208      	adds	r2, #8
 8002e6a:	4411      	add	r1, r2
 8002e6c:	6018      	str	r0, [r3, #0]
 8002e6e:	6059      	str	r1, [r3, #4]
 8002e70:	4638      	mov	r0, r7
 8002e72:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002e76:	f7ff b96b 	b.w	8002150 <chMtxUnlock>
 8002e7a:	bf00      	nop
 8002e7c:	0000      	movs	r0, r0
	...

08002e80 <chHeapStatus>:
 8002e80:	b570      	push	{r4, r5, r6, lr}
 8002e82:	4c0f      	ldr	r4, [pc, #60]	; (8002ec0 <chHeapStatus+0x40>)
 8002e84:	2800      	cmp	r0, #0
 8002e86:	bf18      	it	ne
 8002e88:	4604      	movne	r4, r0
 8002e8a:	f104 0510 	add.w	r5, r4, #16
 8002e8e:	4628      	mov	r0, r5
 8002e90:	460e      	mov	r6, r1
 8002e92:	f7ff f935 	bl	8002100 <chMtxLock>
 8002e96:	68a3      	ldr	r3, [r4, #8]
 8002e98:	b173      	cbz	r3, 8002eb8 <chHeapStatus+0x38>
 8002e9a:	2200      	movs	r2, #0
 8002e9c:	4614      	mov	r4, r2
 8002e9e:	e9d3 3000 	ldrd	r3, r0, [r3]
 8002ea2:	3401      	adds	r4, #1
 8002ea4:	4402      	add	r2, r0
 8002ea6:	2b00      	cmp	r3, #0
 8002ea8:	d1f9      	bne.n	8002e9e <chHeapStatus+0x1e>
 8002eaa:	b106      	cbz	r6, 8002eae <chHeapStatus+0x2e>
 8002eac:	6032      	str	r2, [r6, #0]
 8002eae:	4628      	mov	r0, r5
 8002eb0:	f7ff f94e 	bl	8002150 <chMtxUnlock>
 8002eb4:	4620      	mov	r0, r4
 8002eb6:	bd70      	pop	{r4, r5, r6, pc}
 8002eb8:	461a      	mov	r2, r3
 8002eba:	461c      	mov	r4, r3
 8002ebc:	e7f5      	b.n	8002eaa <chHeapStatus+0x2a>
 8002ebe:	bf00      	nop
 8002ec0:	20000e40 	.word	0x20000e40
	...

08002ed0 <chPoolObjectInit>:
 8002ed0:	2300      	movs	r3, #0
 8002ed2:	e9c0 1201 	strd	r1, r2, [r0, #4]
 8002ed6:	6003      	str	r3, [r0, #0]
 8002ed8:	4770      	bx	lr
 8002eda:	bf00      	nop
 8002edc:	0000      	movs	r0, r0
	...

08002ee0 <chPoolLoadArray>:
 8002ee0:	b17a      	cbz	r2, 8002f02 <chPoolLoadArray+0x22>
 8002ee2:	b430      	push	{r4, r5}
 8002ee4:	2520      	movs	r5, #32
 8002ee6:	2400      	movs	r4, #0
 8002ee8:	f385 8811 	msr	BASEPRI, r5
 8002eec:	6803      	ldr	r3, [r0, #0]
 8002eee:	600b      	str	r3, [r1, #0]
 8002ef0:	6001      	str	r1, [r0, #0]
 8002ef2:	f384 8811 	msr	BASEPRI, r4
 8002ef6:	6843      	ldr	r3, [r0, #4]
 8002ef8:	3a01      	subs	r2, #1
 8002efa:	4419      	add	r1, r3
 8002efc:	d1f4      	bne.n	8002ee8 <chPoolLoadArray+0x8>
 8002efe:	bc30      	pop	{r4, r5}
 8002f00:	4770      	bx	lr
 8002f02:	4770      	bx	lr
	...

08002f10 <chPoolAlloc>:
 8002f10:	b508      	push	{r3, lr}
 8002f12:	2220      	movs	r2, #32
 8002f14:	4603      	mov	r3, r0
 8002f16:	f382 8811 	msr	BASEPRI, r2
 8002f1a:	6800      	ldr	r0, [r0, #0]
 8002f1c:	b128      	cbz	r0, 8002f2a <chPoolAlloc+0x1a>
 8002f1e:	6802      	ldr	r2, [r0, #0]
 8002f20:	601a      	str	r2, [r3, #0]
 8002f22:	2300      	movs	r3, #0
 8002f24:	f383 8811 	msr	BASEPRI, r3
 8002f28:	bd08      	pop	{r3, pc}
 8002f2a:	689a      	ldr	r2, [r3, #8]
 8002f2c:	2a00      	cmp	r2, #0
 8002f2e:	d0f8      	beq.n	8002f22 <chPoolAlloc+0x12>
 8002f30:	6858      	ldr	r0, [r3, #4]
 8002f32:	4790      	blx	r2
 8002f34:	2300      	movs	r3, #0
 8002f36:	f383 8811 	msr	BASEPRI, r3
 8002f3a:	bd08      	pop	{r3, pc}
 8002f3c:	0000      	movs	r0, r0
	...

08002f40 <chPoolFree>:
 8002f40:	2320      	movs	r3, #32
 8002f42:	f383 8811 	msr	BASEPRI, r3
 8002f46:	6803      	ldr	r3, [r0, #0]
 8002f48:	600b      	str	r3, [r1, #0]
 8002f4a:	2300      	movs	r3, #0
 8002f4c:	6001      	str	r1, [r0, #0]
 8002f4e:	f383 8811 	msr	BASEPRI, r3
 8002f52:	4770      	bx	lr
	...

08002f60 <SVC_Handler>:
 8002f60:	b480      	push	{r7}
 8002f62:	af00      	add	r7, sp, #0
 8002f64:	f3ef 8309 	mrs	r3, PSP
 8002f68:	3320      	adds	r3, #32
 8002f6a:	f383 8809 	msr	PSP, r3
 8002f6e:	2300      	movs	r3, #0
 8002f70:	f383 8811 	msr	BASEPRI, r3
 8002f74:	46bd      	mov	sp, r7
 8002f76:	bc80      	pop	{r7}
 8002f78:	4770      	bx	lr
 8002f7a:	bf00      	nop
 8002f7c:	0000      	movs	r0, r0
	...

08002f80 <_port_irq_epilogue>:
 8002f80:	b598      	push	{r3, r4, r7, lr}
 8002f82:	2320      	movs	r3, #32
 8002f84:	af00      	add	r7, sp, #0
 8002f86:	f383 8811 	msr	BASEPRI, r3
 8002f8a:	4b0e      	ldr	r3, [pc, #56]	; (8002fc4 <_port_irq_epilogue+0x44>)
 8002f8c:	685b      	ldr	r3, [r3, #4]
 8002f8e:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 8002f92:	d102      	bne.n	8002f9a <_port_irq_epilogue+0x1a>
 8002f94:	f383 8811 	msr	BASEPRI, r3
 8002f98:	bd98      	pop	{r3, r4, r7, pc}
 8002f9a:	f3ef 8409 	mrs	r4, PSP
 8002f9e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002fa2:	f844 3c04 	str.w	r3, [r4, #-4]
 8002fa6:	f1a4 0320 	sub.w	r3, r4, #32
 8002faa:	f383 8809 	msr	PSP, r3
 8002fae:	f7fe fc3f 	bl	8001830 <chSchIsPreemptionRequired>
 8002fb2:	b118      	cbz	r0, 8002fbc <_port_irq_epilogue+0x3c>
 8002fb4:	4b04      	ldr	r3, [pc, #16]	; (8002fc8 <_port_irq_epilogue+0x48>)
 8002fb6:	f844 3c08 	str.w	r3, [r4, #-8]
 8002fba:	bd98      	pop	{r3, r4, r7, pc}
 8002fbc:	4b03      	ldr	r3, [pc, #12]	; (8002fcc <_port_irq_epilogue+0x4c>)
 8002fbe:	f844 3c08 	str.w	r3, [r4, #-8]
 8002fc2:	bd98      	pop	{r3, r4, r7, pc}
 8002fc4:	e000ed00 	.word	0xe000ed00
 8002fc8:	080002b1 	.word	0x080002b1
 8002fcc:	080002b4 	.word	0x080002b4

08002fd0 <halInit>:
 8002fd0:	b508      	push	{r3, lr}
 8002fd2:	f000 fabd 	bl	8003550 <hal_lld_init>
 8002fd6:	4807      	ldr	r0, [pc, #28]	; (8002ff4 <halInit+0x24>)
 8002fd8:	f000 fb92 	bl	8003700 <_pal_lld_init>
 8002fdc:	f000 f830 	bl	8003040 <pwmInit>
 8002fe0:	f000 f87e 	bl	80030e0 <sdInit>
 8002fe4:	f000 f8d4 	bl	8003190 <spiInit>
 8002fe8:	f000 fe42 	bl	8003c70 <boardInit>
 8002fec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002ff0:	f000 b806 	b.w	8003000 <stInit>
 8002ff4:	08007b60 	.word	0x08007b60
	...

08003000 <stInit>:
 8003000:	f000 bb56 	b.w	80036b0 <st_lld_init>
	...

08003010 <stStartAlarm>:
 8003010:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003014:	2100      	movs	r1, #0
 8003016:	2202      	movs	r2, #2
 8003018:	6358      	str	r0, [r3, #52]	; 0x34
 800301a:	6119      	str	r1, [r3, #16]
 800301c:	60da      	str	r2, [r3, #12]
 800301e:	4770      	bx	lr

08003020 <stStopAlarm>:
 8003020:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003024:	2200      	movs	r2, #0
 8003026:	60da      	str	r2, [r3, #12]
 8003028:	4770      	bx	lr
 800302a:	bf00      	nop
 800302c:	0000      	movs	r0, r0
	...

08003030 <stSetAlarm>:
 8003030:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003034:	6358      	str	r0, [r3, #52]	; 0x34
 8003036:	4770      	bx	lr
	...

08003040 <pwmInit>:
 8003040:	f000 bd06 	b.w	8003a50 <pwm_lld_init>
	...

08003050 <pwmObjectInit>:
 8003050:	2300      	movs	r3, #0
 8003052:	2201      	movs	r2, #1
 8003054:	7002      	strb	r2, [r0, #0]
 8003056:	6043      	str	r3, [r0, #4]
 8003058:	60c3      	str	r3, [r0, #12]
 800305a:	7403      	strb	r3, [r0, #16]
 800305c:	4770      	bx	lr
 800305e:	bf00      	nop

08003060 <readt>:
 8003060:	300c      	adds	r0, #12
 8003062:	f7ff bd25 	b.w	8002ab0 <chIQReadTimeout>
 8003066:	bf00      	nop
	...

08003070 <read>:
 8003070:	300c      	adds	r0, #12
 8003072:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003076:	f7ff bd1b 	b.w	8002ab0 <chIQReadTimeout>
 800307a:	bf00      	nop
 800307c:	0000      	movs	r0, r0
	...

08003080 <writet>:
 8003080:	3030      	adds	r0, #48	; 0x30
 8003082:	f7ff bdbd 	b.w	8002c00 <chOQWriteTimeout>
 8003086:	bf00      	nop
	...

08003090 <write>:
 8003090:	3030      	adds	r0, #48	; 0x30
 8003092:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003096:	f7ff bdb3 	b.w	8002c00 <chOQWriteTimeout>
 800309a:	bf00      	nop
 800309c:	0000      	movs	r0, r0
	...

080030a0 <gett>:
 80030a0:	300c      	adds	r0, #12
 80030a2:	f7ff bcdd 	b.w	8002a60 <chIQGetTimeout>
 80030a6:	bf00      	nop
	...

080030b0 <get>:
 80030b0:	300c      	adds	r0, #12
 80030b2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80030b6:	f7ff bcd3 	b.w	8002a60 <chIQGetTimeout>
 80030ba:	bf00      	nop
 80030bc:	0000      	movs	r0, r0
	...

080030c0 <putt>:
 80030c0:	3030      	adds	r0, #48	; 0x30
 80030c2:	f7ff bd55 	b.w	8002b70 <chOQPutTimeout>
 80030c6:	bf00      	nop
	...

080030d0 <put>:
 80030d0:	3030      	adds	r0, #48	; 0x30
 80030d2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80030d6:	f7ff bd4b 	b.w	8002b70 <chOQPutTimeout>
 80030da:	bf00      	nop
 80030dc:	0000      	movs	r0, r0
	...

080030e0 <sdInit>:
 80030e0:	f000 bd66 	b.w	8003bb0 <sd_lld_init>
	...

080030f0 <sdObjectInit>:
 80030f0:	b570      	push	{r4, r5, r6, lr}
 80030f2:	4b0e      	ldr	r3, [pc, #56]	; (800312c <sdObjectInit+0x3c>)
 80030f4:	4604      	mov	r4, r0
 80030f6:	b082      	sub	sp, #8
 80030f8:	f840 3b04 	str.w	r3, [r0], #4
 80030fc:	2601      	movs	r6, #1
 80030fe:	9400      	str	r4, [sp, #0]
 8003100:	4615      	mov	r5, r2
 8003102:	460b      	mov	r3, r1
 8003104:	6060      	str	r0, [r4, #4]
 8003106:	f104 0154 	add.w	r1, r4, #84	; 0x54
 800310a:	f104 000c 	add.w	r0, r4, #12
 800310e:	7226      	strb	r6, [r4, #8]
 8003110:	2210      	movs	r2, #16
 8003112:	f7ff fc65 	bl	80029e0 <chIQObjectInit>
 8003116:	9400      	str	r4, [sp, #0]
 8003118:	462b      	mov	r3, r5
 800311a:	f104 0164 	add.w	r1, r4, #100	; 0x64
 800311e:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8003122:	2210      	movs	r2, #16
 8003124:	f7ff fd04 	bl	8002b30 <chOQObjectInit>
 8003128:	b002      	add	sp, #8
 800312a:	bd70      	pop	{r4, r5, r6, pc}
 800312c:	08007a70 	.word	0x08007a70

08003130 <sdStart>:
 8003130:	b510      	push	{r4, lr}
 8003132:	2320      	movs	r3, #32
 8003134:	4604      	mov	r4, r0
 8003136:	f383 8811 	msr	BASEPRI, r3
 800313a:	f000 fd49 	bl	8003bd0 <sd_lld_start>
 800313e:	2302      	movs	r3, #2
 8003140:	7223      	strb	r3, [r4, #8]
 8003142:	2300      	movs	r3, #0
 8003144:	f383 8811 	msr	BASEPRI, r3
 8003148:	bd10      	pop	{r4, pc}
 800314a:	bf00      	nop
 800314c:	0000      	movs	r0, r0
	...

08003150 <sdIncomingDataI>:
 8003150:	b538      	push	{r3, r4, r5, lr}
 8003152:	6943      	ldr	r3, [r0, #20]
 8003154:	4604      	mov	r4, r0
 8003156:	460d      	mov	r5, r1
 8003158:	b13b      	cbz	r3, 800316a <sdIncomingDataI+0x1a>
 800315a:	4629      	mov	r1, r5
 800315c:	f104 000c 	add.w	r0, r4, #12
 8003160:	f7ff fc5e 	bl	8002a20 <chIQPutI>
 8003164:	2800      	cmp	r0, #0
 8003166:	db0b      	blt.n	8003180 <sdIncomingDataI+0x30>
 8003168:	bd38      	pop	{r3, r4, r5, pc}
 800316a:	2104      	movs	r1, #4
 800316c:	4408      	add	r0, r1
 800316e:	f7ff f9a7 	bl	80024c0 <chEvtBroadcastFlagsI>
 8003172:	4629      	mov	r1, r5
 8003174:	f104 000c 	add.w	r0, r4, #12
 8003178:	f7ff fc52 	bl	8002a20 <chIQPutI>
 800317c:	2800      	cmp	r0, #0
 800317e:	daf3      	bge.n	8003168 <sdIncomingDataI+0x18>
 8003180:	1d20      	adds	r0, r4, #4
 8003182:	2180      	movs	r1, #128	; 0x80
 8003184:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003188:	f7ff b99a 	b.w	80024c0 <chEvtBroadcastFlagsI>
 800318c:	0000      	movs	r0, r0
	...

08003190 <spiInit>:
 8003190:	f000 bbee 	b.w	8003970 <spi_lld_init>
	...

080031a0 <spiObjectInit>:
 80031a0:	2201      	movs	r2, #1
 80031a2:	2300      	movs	r3, #0
 80031a4:	7002      	strb	r2, [r0, #0]
 80031a6:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80031aa:	300c      	adds	r0, #12
 80031ac:	f7fe bf30 	b.w	8002010 <chMtxObjectInit>

080031b0 <nvicEnableVector>:
 80031b0:	0943      	lsrs	r3, r0, #5
 80031b2:	b410      	push	{r4}
 80031b4:	009b      	lsls	r3, r3, #2
 80031b6:	f100 4460 	add.w	r4, r0, #3758096384	; 0xe0000000
 80031ba:	f504 4461 	add.w	r4, r4, #57600	; 0xe100
 80031be:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80031c2:	0109      	lsls	r1, r1, #4
 80031c4:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 80031c8:	f000 001f 	and.w	r0, r0, #31
 80031cc:	2201      	movs	r2, #1
 80031ce:	b2c9      	uxtb	r1, r1
 80031d0:	f884 1300 	strb.w	r1, [r4, #768]	; 0x300
 80031d4:	fa02 f000 	lsl.w	r0, r2, r0
 80031d8:	f8c3 0180 	str.w	r0, [r3, #384]	; 0x180
 80031dc:	bc10      	pop	{r4}
 80031de:	6018      	str	r0, [r3, #0]
 80031e0:	4770      	bx	lr
 80031e2:	bf00      	nop
	...

080031f0 <Vector6C>:
 80031f0:	b508      	push	{r3, lr}
 80031f2:	4b07      	ldr	r3, [pc, #28]	; (8003210 <Vector6C+0x20>)
 80031f4:	4a07      	ldr	r2, [pc, #28]	; (8003214 <Vector6C+0x24>)
 80031f6:	6819      	ldr	r1, [r3, #0]
 80031f8:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 80031fc:	6099      	str	r1, [r3, #8]
 80031fe:	6813      	ldr	r3, [r2, #0]
 8003200:	b10b      	cbz	r3, 8003206 <Vector6C+0x16>
 8003202:	6850      	ldr	r0, [r2, #4]
 8003204:	4798      	blx	r3
 8003206:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800320a:	f7ff beb9 	b.w	8002f80 <_port_irq_epilogue>
 800320e:	bf00      	nop
 8003210:	40026000 	.word	0x40026000
 8003214:	20000e60 	.word	0x20000e60
	...

08003220 <Vector70>:
 8003220:	4b08      	ldr	r3, [pc, #32]	; (8003244 <Vector70+0x24>)
 8003222:	4809      	ldr	r0, [pc, #36]	; (8003248 <Vector70+0x28>)
 8003224:	6819      	ldr	r1, [r3, #0]
 8003226:	6882      	ldr	r2, [r0, #8]
 8003228:	0989      	lsrs	r1, r1, #6
 800322a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800322e:	b510      	push	{r4, lr}
 8003230:	018c      	lsls	r4, r1, #6
 8003232:	609c      	str	r4, [r3, #8]
 8003234:	b10a      	cbz	r2, 800323a <Vector70+0x1a>
 8003236:	68c0      	ldr	r0, [r0, #12]
 8003238:	4790      	blx	r2
 800323a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800323e:	f7ff be9f 	b.w	8002f80 <_port_irq_epilogue>
 8003242:	bf00      	nop
 8003244:	40026000 	.word	0x40026000
 8003248:	20000e60 	.word	0x20000e60
 800324c:	00000000 	.word	0x00000000

08003250 <Vector74>:
 8003250:	4b08      	ldr	r3, [pc, #32]	; (8003274 <Vector74+0x24>)
 8003252:	4809      	ldr	r0, [pc, #36]	; (8003278 <Vector74+0x28>)
 8003254:	6819      	ldr	r1, [r3, #0]
 8003256:	6902      	ldr	r2, [r0, #16]
 8003258:	0c09      	lsrs	r1, r1, #16
 800325a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800325e:	b510      	push	{r4, lr}
 8003260:	040c      	lsls	r4, r1, #16
 8003262:	609c      	str	r4, [r3, #8]
 8003264:	b10a      	cbz	r2, 800326a <Vector74+0x1a>
 8003266:	6940      	ldr	r0, [r0, #20]
 8003268:	4790      	blx	r2
 800326a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800326e:	f7ff be87 	b.w	8002f80 <_port_irq_epilogue>
 8003272:	bf00      	nop
 8003274:	40026000 	.word	0x40026000
 8003278:	20000e60 	.word	0x20000e60
 800327c:	00000000 	.word	0x00000000

08003280 <Vector78>:
 8003280:	4b08      	ldr	r3, [pc, #32]	; (80032a4 <Vector78+0x24>)
 8003282:	4809      	ldr	r0, [pc, #36]	; (80032a8 <Vector78+0x28>)
 8003284:	6819      	ldr	r1, [r3, #0]
 8003286:	6982      	ldr	r2, [r0, #24]
 8003288:	0d89      	lsrs	r1, r1, #22
 800328a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800328e:	b510      	push	{r4, lr}
 8003290:	058c      	lsls	r4, r1, #22
 8003292:	609c      	str	r4, [r3, #8]
 8003294:	b10a      	cbz	r2, 800329a <Vector78+0x1a>
 8003296:	69c0      	ldr	r0, [r0, #28]
 8003298:	4790      	blx	r2
 800329a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800329e:	f7ff be6f 	b.w	8002f80 <_port_irq_epilogue>
 80032a2:	bf00      	nop
 80032a4:	40026000 	.word	0x40026000
 80032a8:	20000e60 	.word	0x20000e60
 80032ac:	00000000 	.word	0x00000000

080032b0 <Vector7C>:
 80032b0:	b508      	push	{r3, lr}
 80032b2:	4b07      	ldr	r3, [pc, #28]	; (80032d0 <Vector7C+0x20>)
 80032b4:	4807      	ldr	r0, [pc, #28]	; (80032d4 <Vector7C+0x24>)
 80032b6:	6859      	ldr	r1, [r3, #4]
 80032b8:	6a02      	ldr	r2, [r0, #32]
 80032ba:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 80032be:	60d9      	str	r1, [r3, #12]
 80032c0:	b10a      	cbz	r2, 80032c6 <Vector7C+0x16>
 80032c2:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80032c4:	4790      	blx	r2
 80032c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80032ca:	f7ff be59 	b.w	8002f80 <_port_irq_epilogue>
 80032ce:	bf00      	nop
 80032d0:	40026000 	.word	0x40026000
 80032d4:	20000e60 	.word	0x20000e60
	...

080032e0 <Vector80>:
 80032e0:	4b08      	ldr	r3, [pc, #32]	; (8003304 <Vector80+0x24>)
 80032e2:	4809      	ldr	r0, [pc, #36]	; (8003308 <Vector80+0x28>)
 80032e4:	6859      	ldr	r1, [r3, #4]
 80032e6:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80032e8:	0989      	lsrs	r1, r1, #6
 80032ea:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 80032ee:	b510      	push	{r4, lr}
 80032f0:	018c      	lsls	r4, r1, #6
 80032f2:	60dc      	str	r4, [r3, #12]
 80032f4:	b10a      	cbz	r2, 80032fa <Vector80+0x1a>
 80032f6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80032f8:	4790      	blx	r2
 80032fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80032fe:	f7ff be3f 	b.w	8002f80 <_port_irq_epilogue>
 8003302:	bf00      	nop
 8003304:	40026000 	.word	0x40026000
 8003308:	20000e60 	.word	0x20000e60
 800330c:	00000000 	.word	0x00000000

08003310 <Vector84>:
 8003310:	4b08      	ldr	r3, [pc, #32]	; (8003334 <Vector84+0x24>)
 8003312:	4809      	ldr	r0, [pc, #36]	; (8003338 <Vector84+0x28>)
 8003314:	6859      	ldr	r1, [r3, #4]
 8003316:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8003318:	0c09      	lsrs	r1, r1, #16
 800331a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800331e:	b510      	push	{r4, lr}
 8003320:	040c      	lsls	r4, r1, #16
 8003322:	60dc      	str	r4, [r3, #12]
 8003324:	b10a      	cbz	r2, 800332a <Vector84+0x1a>
 8003326:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003328:	4790      	blx	r2
 800332a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800332e:	f7ff be27 	b.w	8002f80 <_port_irq_epilogue>
 8003332:	bf00      	nop
 8003334:	40026000 	.word	0x40026000
 8003338:	20000e60 	.word	0x20000e60
 800333c:	00000000 	.word	0x00000000

08003340 <VectorFC>:
 8003340:	4b08      	ldr	r3, [pc, #32]	; (8003364 <VectorFC+0x24>)
 8003342:	4809      	ldr	r0, [pc, #36]	; (8003368 <VectorFC+0x28>)
 8003344:	6859      	ldr	r1, [r3, #4]
 8003346:	6b82      	ldr	r2, [r0, #56]	; 0x38
 8003348:	0d89      	lsrs	r1, r1, #22
 800334a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800334e:	b510      	push	{r4, lr}
 8003350:	058c      	lsls	r4, r1, #22
 8003352:	60dc      	str	r4, [r3, #12]
 8003354:	b10a      	cbz	r2, 800335a <VectorFC+0x1a>
 8003356:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003358:	4790      	blx	r2
 800335a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800335e:	f7ff be0f 	b.w	8002f80 <_port_irq_epilogue>
 8003362:	bf00      	nop
 8003364:	40026000 	.word	0x40026000
 8003368:	20000e60 	.word	0x20000e60
 800336c:	00000000 	.word	0x00000000

08003370 <Vector120>:
 8003370:	b508      	push	{r3, lr}
 8003372:	4b07      	ldr	r3, [pc, #28]	; (8003390 <Vector120+0x20>)
 8003374:	4807      	ldr	r0, [pc, #28]	; (8003394 <Vector120+0x24>)
 8003376:	6819      	ldr	r1, [r3, #0]
 8003378:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800337a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800337e:	6099      	str	r1, [r3, #8]
 8003380:	b10a      	cbz	r2, 8003386 <Vector120+0x16>
 8003382:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8003384:	4790      	blx	r2
 8003386:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800338a:	f7ff bdf9 	b.w	8002f80 <_port_irq_epilogue>
 800338e:	bf00      	nop
 8003390:	40026400 	.word	0x40026400
 8003394:	20000e60 	.word	0x20000e60
	...

080033a0 <Vector124>:
 80033a0:	4b08      	ldr	r3, [pc, #32]	; (80033c4 <Vector124+0x24>)
 80033a2:	4809      	ldr	r0, [pc, #36]	; (80033c8 <Vector124+0x28>)
 80033a4:	6819      	ldr	r1, [r3, #0]
 80033a6:	6c82      	ldr	r2, [r0, #72]	; 0x48
 80033a8:	0989      	lsrs	r1, r1, #6
 80033aa:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 80033ae:	b510      	push	{r4, lr}
 80033b0:	018c      	lsls	r4, r1, #6
 80033b2:	609c      	str	r4, [r3, #8]
 80033b4:	b10a      	cbz	r2, 80033ba <Vector124+0x1a>
 80033b6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80033b8:	4790      	blx	r2
 80033ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80033be:	f7ff bddf 	b.w	8002f80 <_port_irq_epilogue>
 80033c2:	bf00      	nop
 80033c4:	40026400 	.word	0x40026400
 80033c8:	20000e60 	.word	0x20000e60
 80033cc:	00000000 	.word	0x00000000

080033d0 <Vector128>:
 80033d0:	4b08      	ldr	r3, [pc, #32]	; (80033f4 <Vector128+0x24>)
 80033d2:	4809      	ldr	r0, [pc, #36]	; (80033f8 <Vector128+0x28>)
 80033d4:	6819      	ldr	r1, [r3, #0]
 80033d6:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80033d8:	0c09      	lsrs	r1, r1, #16
 80033da:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 80033de:	b510      	push	{r4, lr}
 80033e0:	040c      	lsls	r4, r1, #16
 80033e2:	609c      	str	r4, [r3, #8]
 80033e4:	b10a      	cbz	r2, 80033ea <Vector128+0x1a>
 80033e6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80033e8:	4790      	blx	r2
 80033ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80033ee:	f7ff bdc7 	b.w	8002f80 <_port_irq_epilogue>
 80033f2:	bf00      	nop
 80033f4:	40026400 	.word	0x40026400
 80033f8:	20000e60 	.word	0x20000e60
 80033fc:	00000000 	.word	0x00000000

08003400 <Vector12C>:
 8003400:	4b08      	ldr	r3, [pc, #32]	; (8003424 <Vector12C+0x24>)
 8003402:	4809      	ldr	r0, [pc, #36]	; (8003428 <Vector12C+0x28>)
 8003404:	6819      	ldr	r1, [r3, #0]
 8003406:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8003408:	0d89      	lsrs	r1, r1, #22
 800340a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800340e:	b510      	push	{r4, lr}
 8003410:	058c      	lsls	r4, r1, #22
 8003412:	609c      	str	r4, [r3, #8]
 8003414:	b10a      	cbz	r2, 800341a <Vector12C+0x1a>
 8003416:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8003418:	4790      	blx	r2
 800341a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800341e:	f7ff bdaf 	b.w	8002f80 <_port_irq_epilogue>
 8003422:	bf00      	nop
 8003424:	40026400 	.word	0x40026400
 8003428:	20000e60 	.word	0x20000e60
 800342c:	00000000 	.word	0x00000000

08003430 <Vector130>:
 8003430:	b508      	push	{r3, lr}
 8003432:	4b07      	ldr	r3, [pc, #28]	; (8003450 <Vector130+0x20>)
 8003434:	4807      	ldr	r0, [pc, #28]	; (8003454 <Vector130+0x24>)
 8003436:	6859      	ldr	r1, [r3, #4]
 8003438:	6e02      	ldr	r2, [r0, #96]	; 0x60
 800343a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800343e:	60d9      	str	r1, [r3, #12]
 8003440:	b10a      	cbz	r2, 8003446 <Vector130+0x16>
 8003442:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8003444:	4790      	blx	r2
 8003446:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800344a:	f7ff bd99 	b.w	8002f80 <_port_irq_epilogue>
 800344e:	bf00      	nop
 8003450:	40026400 	.word	0x40026400
 8003454:	20000e60 	.word	0x20000e60
	...

08003460 <Vector150>:
 8003460:	4b08      	ldr	r3, [pc, #32]	; (8003484 <Vector150+0x24>)
 8003462:	4809      	ldr	r0, [pc, #36]	; (8003488 <Vector150+0x28>)
 8003464:	6859      	ldr	r1, [r3, #4]
 8003466:	6e82      	ldr	r2, [r0, #104]	; 0x68
 8003468:	0989      	lsrs	r1, r1, #6
 800346a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800346e:	b510      	push	{r4, lr}
 8003470:	018c      	lsls	r4, r1, #6
 8003472:	60dc      	str	r4, [r3, #12]
 8003474:	b10a      	cbz	r2, 800347a <Vector150+0x1a>
 8003476:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8003478:	4790      	blx	r2
 800347a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800347e:	f7ff bd7f 	b.w	8002f80 <_port_irq_epilogue>
 8003482:	bf00      	nop
 8003484:	40026400 	.word	0x40026400
 8003488:	20000e60 	.word	0x20000e60
 800348c:	00000000 	.word	0x00000000

08003490 <Vector154>:
 8003490:	4b08      	ldr	r3, [pc, #32]	; (80034b4 <Vector154+0x24>)
 8003492:	4809      	ldr	r0, [pc, #36]	; (80034b8 <Vector154+0x28>)
 8003494:	6859      	ldr	r1, [r3, #4]
 8003496:	6f02      	ldr	r2, [r0, #112]	; 0x70
 8003498:	0c09      	lsrs	r1, r1, #16
 800349a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800349e:	b510      	push	{r4, lr}
 80034a0:	040c      	lsls	r4, r1, #16
 80034a2:	60dc      	str	r4, [r3, #12]
 80034a4:	b10a      	cbz	r2, 80034aa <Vector154+0x1a>
 80034a6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80034a8:	4790      	blx	r2
 80034aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80034ae:	f7ff bd67 	b.w	8002f80 <_port_irq_epilogue>
 80034b2:	bf00      	nop
 80034b4:	40026400 	.word	0x40026400
 80034b8:	20000e60 	.word	0x20000e60
 80034bc:	00000000 	.word	0x00000000

080034c0 <Vector158>:
 80034c0:	4b08      	ldr	r3, [pc, #32]	; (80034e4 <Vector158+0x24>)
 80034c2:	4809      	ldr	r0, [pc, #36]	; (80034e8 <Vector158+0x28>)
 80034c4:	6859      	ldr	r1, [r3, #4]
 80034c6:	6f82      	ldr	r2, [r0, #120]	; 0x78
 80034c8:	0d89      	lsrs	r1, r1, #22
 80034ca:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 80034ce:	b510      	push	{r4, lr}
 80034d0:	058c      	lsls	r4, r1, #22
 80034d2:	60dc      	str	r4, [r3, #12]
 80034d4:	b10a      	cbz	r2, 80034da <Vector158+0x1a>
 80034d6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80034d8:	4790      	blx	r2
 80034da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80034de:	f7ff bd4f 	b.w	8002f80 <_port_irq_epilogue>
 80034e2:	bf00      	nop
 80034e4:	40026400 	.word	0x40026400
 80034e8:	20000e60 	.word	0x20000e60
 80034ec:	00000000 	.word	0x00000000

080034f0 <dmaInit>:
 80034f0:	490e      	ldr	r1, [pc, #56]	; (800352c <dmaInit+0x3c>)
 80034f2:	4a0f      	ldr	r2, [pc, #60]	; (8003530 <dmaInit+0x40>)
 80034f4:	480f      	ldr	r0, [pc, #60]	; (8003534 <dmaInit+0x44>)
 80034f6:	2300      	movs	r3, #0
 80034f8:	b410      	push	{r4}
 80034fa:	600b      	str	r3, [r1, #0]
 80034fc:	4c0e      	ldr	r4, [pc, #56]	; (8003538 <dmaInit+0x48>)
 80034fe:	4619      	mov	r1, r3
 8003500:	e001      	b.n	8003506 <dmaInit+0x16>
 8003502:	f852 0c0c 	ldr.w	r0, [r2, #-12]
 8003506:	6001      	str	r1, [r0, #0]
 8003508:	f844 1033 	str.w	r1, [r4, r3, lsl #3]
 800350c:	3301      	adds	r3, #1
 800350e:	2b10      	cmp	r3, #16
 8003510:	f102 020c 	add.w	r2, r2, #12
 8003514:	d1f5      	bne.n	8003502 <dmaInit+0x12>
 8003516:	4909      	ldr	r1, [pc, #36]	; (800353c <dmaInit+0x4c>)
 8003518:	4a09      	ldr	r2, [pc, #36]	; (8003540 <dmaInit+0x50>)
 800351a:	bc10      	pop	{r4}
 800351c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003520:	608b      	str	r3, [r1, #8]
 8003522:	60cb      	str	r3, [r1, #12]
 8003524:	6093      	str	r3, [r2, #8]
 8003526:	60d3      	str	r3, [r2, #12]
 8003528:	4770      	bx	lr
 800352a:	bf00      	nop
 800352c:	20000ee0 	.word	0x20000ee0
 8003530:	08007a9c 	.word	0x08007a9c
 8003534:	40026010 	.word	0x40026010
 8003538:	20000e60 	.word	0x20000e60
 800353c:	40026000 	.word	0x40026000
 8003540:	40026400 	.word	0x40026400
	...

08003550 <hal_lld_init>:
 8003550:	4b16      	ldr	r3, [pc, #88]	; (80035ac <hal_lld_init+0x5c>)
 8003552:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003556:	691a      	ldr	r2, [r3, #16]
 8003558:	2200      	movs	r2, #0
 800355a:	b410      	push	{r4}
 800355c:	6119      	str	r1, [r3, #16]
 800355e:	611a      	str	r2, [r3, #16]
 8003560:	6958      	ldr	r0, [r3, #20]
 8003562:	6159      	str	r1, [r3, #20]
 8003564:	615a      	str	r2, [r3, #20]
 8003566:	6a18      	ldr	r0, [r3, #32]
 8003568:	4c11      	ldr	r4, [pc, #68]	; (80035b0 <hal_lld_init+0x60>)
 800356a:	f060 5080 	orn	r0, r0, #268435456	; 0x10000000
 800356e:	6218      	str	r0, [r3, #32]
 8003570:	621a      	str	r2, [r3, #32]
 8003572:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8003574:	6259      	str	r1, [r3, #36]	; 0x24
 8003576:	625a      	str	r2, [r3, #36]	; 0x24
 8003578:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800357a:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800357e:	6419      	str	r1, [r3, #64]	; 0x40
 8003580:	6821      	ldr	r1, [r4, #0]
 8003582:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8003586:	6021      	str	r1, [r4, #0]
 8003588:	6f19      	ldr	r1, [r3, #112]	; 0x70
 800358a:	f401 7140 	and.w	r1, r1, #768	; 0x300
 800358e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8003592:	d003      	beq.n	800359c <hal_lld_init+0x4c>
 8003594:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 8003598:	6719      	str	r1, [r3, #112]	; 0x70
 800359a:	671a      	str	r2, [r3, #112]	; 0x70
 800359c:	4a04      	ldr	r2, [pc, #16]	; (80035b0 <hal_lld_init+0x60>)
 800359e:	bc10      	pop	{r4}
 80035a0:	6853      	ldr	r3, [r2, #4]
 80035a2:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80035a6:	6053      	str	r3, [r2, #4]
 80035a8:	f7ff bfa2 	b.w	80034f0 <dmaInit>
 80035ac:	40023800 	.word	0x40023800
 80035b0:	40007000 	.word	0x40007000
	...

080035c0 <stm32_clock_init>:
 80035c0:	4b2a      	ldr	r3, [pc, #168]	; (800366c <stm32_clock_init+0xac>)
 80035c2:	4a2b      	ldr	r2, [pc, #172]	; (8003670 <stm32_clock_init+0xb0>)
 80035c4:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 80035c8:	f44f 4140 	mov.w	r1, #49152	; 0xc000
 80035cc:	6418      	str	r0, [r3, #64]	; 0x40
 80035ce:	6011      	str	r1, [r2, #0]
 80035d0:	681a      	ldr	r2, [r3, #0]
 80035d2:	f042 0201 	orr.w	r2, r2, #1
 80035d6:	601a      	str	r2, [r3, #0]
 80035d8:	681a      	ldr	r2, [r3, #0]
 80035da:	0792      	lsls	r2, r2, #30
 80035dc:	d5fc      	bpl.n	80035d8 <stm32_clock_init+0x18>
 80035de:	6899      	ldr	r1, [r3, #8]
 80035e0:	4a22      	ldr	r2, [pc, #136]	; (800366c <stm32_clock_init+0xac>)
 80035e2:	f021 0103 	bic.w	r1, r1, #3
 80035e6:	6099      	str	r1, [r3, #8]
 80035e8:	6899      	ldr	r1, [r3, #8]
 80035ea:	6099      	str	r1, [r3, #8]
 80035ec:	6893      	ldr	r3, [r2, #8]
 80035ee:	f013 030c 	ands.w	r3, r3, #12
 80035f2:	d1fb      	bne.n	80035ec <stm32_clock_init+0x2c>
 80035f4:	6810      	ldr	r0, [r2, #0]
 80035f6:	491d      	ldr	r1, [pc, #116]	; (800366c <stm32_clock_init+0xac>)
 80035f8:	f000 00f9 	and.w	r0, r0, #249	; 0xf9
 80035fc:	6010      	str	r0, [r2, #0]
 80035fe:	6093      	str	r3, [r2, #8]
 8003600:	6813      	ldr	r3, [r2, #0]
 8003602:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003606:	6013      	str	r3, [r2, #0]
 8003608:	680b      	ldr	r3, [r1, #0]
 800360a:	0398      	lsls	r0, r3, #14
 800360c:	d5fc      	bpl.n	8003608 <stm32_clock_init+0x48>
 800360e:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 8003610:	4a16      	ldr	r2, [pc, #88]	; (800366c <stm32_clock_init+0xac>)
 8003612:	f043 0301 	orr.w	r3, r3, #1
 8003616:	674b      	str	r3, [r1, #116]	; 0x74
 8003618:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800361a:	0799      	lsls	r1, r3, #30
 800361c:	d5fc      	bpl.n	8003618 <stm32_clock_init+0x58>
 800361e:	4b15      	ldr	r3, [pc, #84]	; (8003674 <stm32_clock_init+0xb4>)
 8003620:	6053      	str	r3, [r2, #4]
 8003622:	6813      	ldr	r3, [r2, #0]
 8003624:	4912      	ldr	r1, [pc, #72]	; (8003670 <stm32_clock_init+0xb0>)
 8003626:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800362a:	6013      	str	r3, [r2, #0]
 800362c:	684b      	ldr	r3, [r1, #4]
 800362e:	045a      	lsls	r2, r3, #17
 8003630:	d5fc      	bpl.n	800362c <stm32_clock_init+0x6c>
 8003632:	490e      	ldr	r1, [pc, #56]	; (800366c <stm32_clock_init+0xac>)
 8003634:	680b      	ldr	r3, [r1, #0]
 8003636:	019b      	lsls	r3, r3, #6
 8003638:	d5fc      	bpl.n	8003634 <stm32_clock_init+0x74>
 800363a:	4b0f      	ldr	r3, [pc, #60]	; (8003678 <stm32_clock_init+0xb8>)
 800363c:	4a0f      	ldr	r2, [pc, #60]	; (800367c <stm32_clock_init+0xbc>)
 800363e:	608a      	str	r2, [r1, #8]
 8003640:	f240 7205 	movw	r2, #1797	; 0x705
 8003644:	601a      	str	r2, [r3, #0]
 8003646:	688b      	ldr	r3, [r1, #8]
 8003648:	4a08      	ldr	r2, [pc, #32]	; (800366c <stm32_clock_init+0xac>)
 800364a:	f043 0302 	orr.w	r3, r3, #2
 800364e:	608b      	str	r3, [r1, #8]
 8003650:	6893      	ldr	r3, [r2, #8]
 8003652:	f003 030c 	and.w	r3, r3, #12
 8003656:	2b08      	cmp	r3, #8
 8003658:	d1fa      	bne.n	8003650 <stm32_clock_init+0x90>
 800365a:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800365c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003660:	6453      	str	r3, [r2, #68]	; 0x44
 8003662:	6e53      	ldr	r3, [r2, #100]	; 0x64
 8003664:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003668:	6653      	str	r3, [r2, #100]	; 0x64
 800366a:	4770      	bx	lr
 800366c:	40023800 	.word	0x40023800
 8003670:	40007000 	.word	0x40007000
 8003674:	07405408 	.word	0x07405408
 8003678:	40023c00 	.word	0x40023c00
 800367c:	38089400 	.word	0x38089400

08003680 <VectorB0>:
 8003680:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003684:	691a      	ldr	r2, [r3, #16]
 8003686:	0792      	lsls	r2, r2, #30
 8003688:	d401      	bmi.n	800368e <VectorB0+0xe>
 800368a:	f7ff bc79 	b.w	8002f80 <_port_irq_epilogue>
 800368e:	b510      	push	{r4, lr}
 8003690:	2400      	movs	r4, #0
 8003692:	611c      	str	r4, [r3, #16]
 8003694:	2320      	movs	r3, #32
 8003696:	f383 8811 	msr	BASEPRI, r3
 800369a:	f7fd ff11 	bl	80014c0 <chSysTimerHandlerI>
 800369e:	f384 8811 	msr	BASEPRI, r4
 80036a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80036a6:	f7ff bc6b 	b.w	8002f80 <_port_irq_epilogue>
 80036aa:	bf00      	nop
 80036ac:	0000      	movs	r0, r0
	...

080036b0 <st_lld_init>:
 80036b0:	4a0f      	ldr	r2, [pc, #60]	; (80036f0 <st_lld_init+0x40>)
 80036b2:	4810      	ldr	r0, [pc, #64]	; (80036f4 <st_lld_init+0x44>)
 80036b4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80036b6:	b470      	push	{r4, r5, r6}
 80036b8:	f043 0301 	orr.w	r3, r3, #1
 80036bc:	6413      	str	r3, [r2, #64]	; 0x40
 80036be:	6881      	ldr	r1, [r0, #8]
 80036c0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80036c4:	2200      	movs	r2, #0
 80036c6:	2401      	movs	r4, #1
 80036c8:	f041 0101 	orr.w	r1, r1, #1
 80036cc:	f242 06cf 	movw	r6, #8399	; 0x20cf
 80036d0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80036d4:	6081      	str	r1, [r0, #8]
 80036d6:	629e      	str	r6, [r3, #40]	; 0x28
 80036d8:	2108      	movs	r1, #8
 80036da:	62dd      	str	r5, [r3, #44]	; 0x2c
 80036dc:	201c      	movs	r0, #28
 80036de:	619a      	str	r2, [r3, #24]
 80036e0:	635a      	str	r2, [r3, #52]	; 0x34
 80036e2:	60da      	str	r2, [r3, #12]
 80036e4:	605a      	str	r2, [r3, #4]
 80036e6:	615c      	str	r4, [r3, #20]
 80036e8:	601c      	str	r4, [r3, #0]
 80036ea:	bc70      	pop	{r4, r5, r6}
 80036ec:	f7ff bd60 	b.w	80031b0 <nvicEnableVector>
 80036f0:	40023800 	.word	0x40023800
 80036f4:	e0042000 	.word	0xe0042000
	...

08003700 <_pal_lld_init>:
 8003700:	4968      	ldr	r1, [pc, #416]	; (80038a4 <_pal_lld_init+0x1a4>)
 8003702:	4a69      	ldr	r2, [pc, #420]	; (80038a8 <_pal_lld_init+0x1a8>)
 8003704:	4b69      	ldr	r3, [pc, #420]	; (80038ac <_pal_lld_init+0x1ac>)
 8003706:	b470      	push	{r4, r5, r6}
 8003708:	6b0d      	ldr	r5, [r1, #48]	; 0x30
 800370a:	f240 16ff 	movw	r6, #511	; 0x1ff
 800370e:	4335      	orrs	r5, r6
 8003710:	630d      	str	r5, [r1, #48]	; 0x30
 8003712:	6d0c      	ldr	r4, [r1, #80]	; 0x50
 8003714:	4334      	orrs	r4, r6
 8003716:	650c      	str	r4, [r1, #80]	; 0x50
 8003718:	6841      	ldr	r1, [r0, #4]
 800371a:	6051      	str	r1, [r2, #4]
 800371c:	6881      	ldr	r1, [r0, #8]
 800371e:	6091      	str	r1, [r2, #8]
 8003720:	68c1      	ldr	r1, [r0, #12]
 8003722:	60d1      	str	r1, [r2, #12]
 8003724:	6901      	ldr	r1, [r0, #16]
 8003726:	6151      	str	r1, [r2, #20]
 8003728:	6941      	ldr	r1, [r0, #20]
 800372a:	6211      	str	r1, [r2, #32]
 800372c:	6981      	ldr	r1, [r0, #24]
 800372e:	6251      	str	r1, [r2, #36]	; 0x24
 8003730:	6801      	ldr	r1, [r0, #0]
 8003732:	6011      	str	r1, [r2, #0]
 8003734:	6a02      	ldr	r2, [r0, #32]
 8003736:	605a      	str	r2, [r3, #4]
 8003738:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800373a:	609a      	str	r2, [r3, #8]
 800373c:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800373e:	60da      	str	r2, [r3, #12]
 8003740:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8003742:	615a      	str	r2, [r3, #20]
 8003744:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8003746:	621a      	str	r2, [r3, #32]
 8003748:	6b42      	ldr	r2, [r0, #52]	; 0x34
 800374a:	625a      	str	r2, [r3, #36]	; 0x24
 800374c:	69c2      	ldr	r2, [r0, #28]
 800374e:	601a      	str	r2, [r3, #0]
 8003750:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003752:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8003756:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8003758:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 800375c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800375e:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 8003762:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8003764:	f8c3 2414 	str.w	r2, [r3, #1044]	; 0x414
 8003768:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800376a:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
 800376e:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8003770:	f8c3 2424 	str.w	r2, [r3, #1060]	; 0x424
 8003774:	6b82      	ldr	r2, [r0, #56]	; 0x38
 8003776:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 800377a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800377e:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8003780:	605a      	str	r2, [r3, #4]
 8003782:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8003784:	609a      	str	r2, [r3, #8]
 8003786:	6e02      	ldr	r2, [r0, #96]	; 0x60
 8003788:	60da      	str	r2, [r3, #12]
 800378a:	6e42      	ldr	r2, [r0, #100]	; 0x64
 800378c:	615a      	str	r2, [r3, #20]
 800378e:	6e82      	ldr	r2, [r0, #104]	; 0x68
 8003790:	621a      	str	r2, [r3, #32]
 8003792:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
 8003794:	625a      	str	r2, [r3, #36]	; 0x24
 8003796:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8003798:	601a      	str	r2, [r3, #0]
 800379a:	6f42      	ldr	r2, [r0, #116]	; 0x74
 800379c:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 80037a0:	6f82      	ldr	r2, [r0, #120]	; 0x78
 80037a2:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 80037a6:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
 80037a8:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 80037ac:	f8d0 2080 	ldr.w	r2, [r0, #128]	; 0x80
 80037b0:	f8c3 2414 	str.w	r2, [r3, #1044]	; 0x414
 80037b4:	f8d0 2084 	ldr.w	r2, [r0, #132]	; 0x84
 80037b8:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
 80037bc:	f8d0 2088 	ldr.w	r2, [r0, #136]	; 0x88
 80037c0:	f8c3 2424 	str.w	r2, [r3, #1060]	; 0x424
 80037c4:	6f02      	ldr	r2, [r0, #112]	; 0x70
 80037c6:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 80037ca:	f8d0 2090 	ldr.w	r2, [r0, #144]	; 0x90
 80037ce:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 80037d2:	f8d0 2094 	ldr.w	r2, [r0, #148]	; 0x94
 80037d6:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 80037da:	f8d0 2098 	ldr.w	r2, [r0, #152]	; 0x98
 80037de:	f8c3 280c 	str.w	r2, [r3, #2060]	; 0x80c
 80037e2:	f8d0 209c 	ldr.w	r2, [r0, #156]	; 0x9c
 80037e6:	f8c3 2814 	str.w	r2, [r3, #2068]	; 0x814
 80037ea:	f8d0 20a0 	ldr.w	r2, [r0, #160]	; 0xa0
 80037ee:	f8c3 2820 	str.w	r2, [r3, #2080]	; 0x820
 80037f2:	f8d0 20a4 	ldr.w	r2, [r0, #164]	; 0xa4
 80037f6:	f8c3 2824 	str.w	r2, [r3, #2084]	; 0x824
 80037fa:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
 80037fe:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 8003802:	f503 6340 	add.w	r3, r3, #3072	; 0xc00
 8003806:	f8d0 20ac 	ldr.w	r2, [r0, #172]	; 0xac
 800380a:	605a      	str	r2, [r3, #4]
 800380c:	f8d0 20b0 	ldr.w	r2, [r0, #176]	; 0xb0
 8003810:	609a      	str	r2, [r3, #8]
 8003812:	f8d0 20b4 	ldr.w	r2, [r0, #180]	; 0xb4
 8003816:	60da      	str	r2, [r3, #12]
 8003818:	f8d0 20b8 	ldr.w	r2, [r0, #184]	; 0xb8
 800381c:	615a      	str	r2, [r3, #20]
 800381e:	f8d0 20bc 	ldr.w	r2, [r0, #188]	; 0xbc
 8003822:	621a      	str	r2, [r3, #32]
 8003824:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 8003828:	625a      	str	r2, [r3, #36]	; 0x24
 800382a:	f8d0 20a8 	ldr.w	r2, [r0, #168]	; 0xa8
 800382e:	601a      	str	r2, [r3, #0]
 8003830:	f8d0 20c8 	ldr.w	r2, [r0, #200]	; 0xc8
 8003834:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8003838:	f8d0 20cc 	ldr.w	r2, [r0, #204]	; 0xcc
 800383c:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 8003840:	f8d0 20d0 	ldr.w	r2, [r0, #208]	; 0xd0
 8003844:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 8003848:	f8d0 20d4 	ldr.w	r2, [r0, #212]	; 0xd4
 800384c:	f8c3 2414 	str.w	r2, [r3, #1044]	; 0x414
 8003850:	f8d0 20d8 	ldr.w	r2, [r0, #216]	; 0xd8
 8003854:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
 8003858:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 800385c:	f8c3 2424 	str.w	r2, [r3, #1060]	; 0x424
 8003860:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 8003864:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 8003868:	f8d0 20e4 	ldr.w	r2, [r0, #228]	; 0xe4
 800386c:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8003870:	f8d0 20e8 	ldr.w	r2, [r0, #232]	; 0xe8
 8003874:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
 8003878:	f8d0 20ec 	ldr.w	r2, [r0, #236]	; 0xec
 800387c:	f8c3 280c 	str.w	r2, [r3, #2060]	; 0x80c
 8003880:	f8d0 20f0 	ldr.w	r2, [r0, #240]	; 0xf0
 8003884:	f8c3 2814 	str.w	r2, [r3, #2068]	; 0x814
 8003888:	f8d0 20f4 	ldr.w	r2, [r0, #244]	; 0xf4
 800388c:	f8c3 2820 	str.w	r2, [r3, #2080]	; 0x820
 8003890:	f8d0 20f8 	ldr.w	r2, [r0, #248]	; 0xf8
 8003894:	f8c3 2824 	str.w	r2, [r3, #2084]	; 0x824
 8003898:	f8d0 20e0 	ldr.w	r2, [r0, #224]	; 0xe0
 800389c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 80038a0:	bc70      	pop	{r4, r5, r6}
 80038a2:	4770      	bx	lr
 80038a4:	40023800 	.word	0x40023800
 80038a8:	40020000 	.word	0x40020000
 80038ac:	40020400 	.word	0x40020400

080038b0 <_pal_lld_setgroupmode>:
 80038b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038b4:	f002 0c03 	and.w	ip, r2, #3
 80038b8:	f3c2 0780 	ubfx	r7, r2, #2, #1
 80038bc:	f3c2 06c1 	ubfx	r6, r2, #3, #2
 80038c0:	f3c2 1541 	ubfx	r5, r2, #5, #2
 80038c4:	2400      	movs	r4, #0
 80038c6:	f3c2 12c3 	ubfx	r2, r2, #7, #4
 80038ca:	f04f 0e0f 	mov.w	lr, #15
 80038ce:	f04f 0901 	mov.w	r9, #1
 80038d2:	f04f 0803 	mov.w	r8, #3
 80038d6:	e030      	b.n	800393a <_pal_lld_setgroupmode+0x8a>
 80038d8:	f8d0 b020 	ldr.w	fp, [r0, #32]
 80038dc:	ea0b 0a0a 	and.w	sl, fp, sl
 80038e0:	ea4a 0303 	orr.w	r3, sl, r3
 80038e4:	6203      	str	r3, [r0, #32]
 80038e6:	6843      	ldr	r3, [r0, #4]
 80038e8:	fa09 fa04 	lsl.w	sl, r9, r4
 80038ec:	ea23 030a 	bic.w	r3, r3, sl
 80038f0:	433b      	orrs	r3, r7
 80038f2:	6043      	str	r3, [r0, #4]
 80038f4:	0063      	lsls	r3, r4, #1
 80038f6:	f8d0 a008 	ldr.w	sl, [r0, #8]
 80038fa:	fa08 f303 	lsl.w	r3, r8, r3
 80038fe:	43db      	mvns	r3, r3
 8003900:	ea0a 0a03 	and.w	sl, sl, r3
 8003904:	ea4a 0a06 	orr.w	sl, sl, r6
 8003908:	f8c0 a008 	str.w	sl, [r0, #8]
 800390c:	f8d0 a00c 	ldr.w	sl, [r0, #12]
 8003910:	ea03 0a0a 	and.w	sl, r3, sl
 8003914:	ea4a 0a05 	orr.w	sl, sl, r5
 8003918:	f8c0 a00c 	str.w	sl, [r0, #12]
 800391c:	f8d0 a000 	ldr.w	sl, [r0]
 8003920:	ea03 030a 	and.w	r3, r3, sl
 8003924:	ea43 030c 	orr.w	r3, r3, ip
 8003928:	6003      	str	r3, [r0, #0]
 800392a:	0849      	lsrs	r1, r1, #1
 800392c:	d01b      	beq.n	8003966 <_pal_lld_setgroupmode+0xb6>
 800392e:	007f      	lsls	r7, r7, #1
 8003930:	00b6      	lsls	r6, r6, #2
 8003932:	00ad      	lsls	r5, r5, #2
 8003934:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8003938:	3401      	adds	r4, #1
 800393a:	f004 0307 	and.w	r3, r4, #7
 800393e:	009b      	lsls	r3, r3, #2
 8003940:	fa0e fa03 	lsl.w	sl, lr, r3
 8003944:	f011 0f01 	tst.w	r1, #1
 8003948:	fa02 f303 	lsl.w	r3, r2, r3
 800394c:	ea6f 0a0a 	mvn.w	sl, sl
 8003950:	d0eb      	beq.n	800392a <_pal_lld_setgroupmode+0x7a>
 8003952:	2c07      	cmp	r4, #7
 8003954:	d9c0      	bls.n	80038d8 <_pal_lld_setgroupmode+0x28>
 8003956:	f8d0 b024 	ldr.w	fp, [r0, #36]	; 0x24
 800395a:	ea0b 0a0a 	and.w	sl, fp, sl
 800395e:	ea4a 0303 	orr.w	r3, sl, r3
 8003962:	6243      	str	r3, [r0, #36]	; 0x24
 8003964:	e7bf      	b.n	80038e6 <_pal_lld_setgroupmode+0x36>
 8003966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800396a:	bf00      	nop
 800396c:	0000      	movs	r0, r0
	...

08003970 <spi_lld_init>:
 8003970:	b570      	push	{r4, r5, r6, lr}
 8003972:	4e11      	ldr	r6, [pc, #68]	; (80039b8 <spi_lld_init+0x48>)
 8003974:	4b11      	ldr	r3, [pc, #68]	; (80039bc <spi_lld_init+0x4c>)
 8003976:	4d12      	ldr	r5, [pc, #72]	; (80039c0 <spi_lld_init+0x50>)
 8003978:	4c12      	ldr	r4, [pc, #72]	; (80039c4 <spi_lld_init+0x54>)
 800397a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800397e:	4630      	mov	r0, r6
 8003980:	801a      	strh	r2, [r3, #0]
 8003982:	f7ff fc0d 	bl	80031a0 <spiObjectInit>
 8003986:	4a10      	ldr	r2, [pc, #64]	; (80039c8 <spi_lld_init+0x58>)
 8003988:	4b10      	ldr	r3, [pc, #64]	; (80039cc <spi_lld_init+0x5c>)
 800398a:	4911      	ldr	r1, [pc, #68]	; (80039d0 <spi_lld_init+0x60>)
 800398c:	61f1      	str	r1, [r6, #28]
 800398e:	4620      	mov	r0, r4
 8003990:	f105 0124 	add.w	r1, r5, #36	; 0x24
 8003994:	e9c6 5108 	strd	r5, r1, [r6, #32]
 8003998:	e9c6 230a 	strd	r2, r3, [r6, #40]	; 0x28
 800399c:	f7ff fc00 	bl	80031a0 <spiObjectInit>
 80039a0:	490c      	ldr	r1, [pc, #48]	; (80039d4 <spi_lld_init+0x64>)
 80039a2:	4a0d      	ldr	r2, [pc, #52]	; (80039d8 <spi_lld_init+0x68>)
 80039a4:	4b0d      	ldr	r3, [pc, #52]	; (80039dc <spi_lld_init+0x6c>)
 80039a6:	61e1      	str	r1, [r4, #28]
 80039a8:	f1a5 013c 	sub.w	r1, r5, #60	; 0x3c
 80039ac:	3d30      	subs	r5, #48	; 0x30
 80039ae:	e9c4 1508 	strd	r1, r5, [r4, #32]
 80039b2:	e9c4 230a 	strd	r2, r3, [r4, #40]	; 0x28
 80039b6:	bd70      	pop	{r4, r5, r6, pc}
 80039b8:	20000ee4 	.word	0x20000ee4
 80039bc:	20000f44 	.word	0x20000f44
 80039c0:	08007af0 	.word	0x08007af0
 80039c4:	20000f14 	.word	0x20000f14
 80039c8:	06010016 	.word	0x06010016
 80039cc:	06010046 	.word	0x06010046
 80039d0:	40013000 	.word	0x40013000
 80039d4:	40003800 	.word	0x40003800
 80039d8:	00010016 	.word	0x00010016
 80039dc:	00010046 	.word	0x00010046

080039e0 <VectorB8>:
 80039e0:	b538      	push	{r3, r4, r5, lr}
 80039e2:	4d17      	ldr	r5, [pc, #92]	; (8003a40 <VectorB8+0x60>)
 80039e4:	69ab      	ldr	r3, [r5, #24]
 80039e6:	691c      	ldr	r4, [r3, #16]
 80039e8:	68da      	ldr	r2, [r3, #12]
 80039ea:	4014      	ands	r4, r2
 80039ec:	b2e2      	uxtb	r2, r4
 80039ee:	43d2      	mvns	r2, r2
 80039f0:	611a      	str	r2, [r3, #16]
 80039f2:	07a3      	lsls	r3, r4, #30
 80039f4:	d504      	bpl.n	8003a00 <VectorB8+0x20>
 80039f6:	686b      	ldr	r3, [r5, #4]
 80039f8:	691b      	ldr	r3, [r3, #16]
 80039fa:	b10b      	cbz	r3, 8003a00 <VectorB8+0x20>
 80039fc:	4628      	mov	r0, r5
 80039fe:	4798      	blx	r3
 8003a00:	0760      	lsls	r0, r4, #29
 8003a02:	d504      	bpl.n	8003a0e <VectorB8+0x2e>
 8003a04:	686b      	ldr	r3, [r5, #4]
 8003a06:	699b      	ldr	r3, [r3, #24]
 8003a08:	b10b      	cbz	r3, 8003a0e <VectorB8+0x2e>
 8003a0a:	480d      	ldr	r0, [pc, #52]	; (8003a40 <VectorB8+0x60>)
 8003a0c:	4798      	blx	r3
 8003a0e:	0721      	lsls	r1, r4, #28
 8003a10:	d504      	bpl.n	8003a1c <VectorB8+0x3c>
 8003a12:	686b      	ldr	r3, [r5, #4]
 8003a14:	6a1b      	ldr	r3, [r3, #32]
 8003a16:	b10b      	cbz	r3, 8003a1c <VectorB8+0x3c>
 8003a18:	4809      	ldr	r0, [pc, #36]	; (8003a40 <VectorB8+0x60>)
 8003a1a:	4798      	blx	r3
 8003a1c:	06e2      	lsls	r2, r4, #27
 8003a1e:	d504      	bpl.n	8003a2a <VectorB8+0x4a>
 8003a20:	686b      	ldr	r3, [r5, #4]
 8003a22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003a24:	b10b      	cbz	r3, 8003a2a <VectorB8+0x4a>
 8003a26:	4806      	ldr	r0, [pc, #24]	; (8003a40 <VectorB8+0x60>)
 8003a28:	4798      	blx	r3
 8003a2a:	07e3      	lsls	r3, r4, #31
 8003a2c:	d504      	bpl.n	8003a38 <VectorB8+0x58>
 8003a2e:	686b      	ldr	r3, [r5, #4]
 8003a30:	689b      	ldr	r3, [r3, #8]
 8003a32:	b10b      	cbz	r3, 8003a38 <VectorB8+0x58>
 8003a34:	4802      	ldr	r0, [pc, #8]	; (8003a40 <VectorB8+0x60>)
 8003a36:	4798      	blx	r3
 8003a38:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003a3c:	f7ff baa0 	b.w	8002f80 <_port_irq_epilogue>
 8003a40:	20000f48 	.word	0x20000f48
	...

08003a50 <pwm_lld_init>:
 8003a50:	b510      	push	{r4, lr}
 8003a52:	4c04      	ldr	r4, [pc, #16]	; (8003a64 <pwm_lld_init+0x14>)
 8003a54:	4620      	mov	r0, r4
 8003a56:	f7ff fafb 	bl	8003050 <pwmObjectInit>
 8003a5a:	2204      	movs	r2, #4
 8003a5c:	4b02      	ldr	r3, [pc, #8]	; (8003a68 <pwm_lld_init+0x18>)
 8003a5e:	7422      	strb	r2, [r4, #16]
 8003a60:	61a3      	str	r3, [r4, #24]
 8003a62:	bd10      	pop	{r4, pc}
 8003a64:	20000f48 	.word	0x20000f48
 8003a68:	40000800 	.word	0x40000800
 8003a6c:	00000000 	.word	0x00000000

08003a70 <notify2>:
 8003a70:	4a02      	ldr	r2, [pc, #8]	; (8003a7c <notify2+0xc>)
 8003a72:	68d3      	ldr	r3, [r2, #12]
 8003a74:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003a78:	60d3      	str	r3, [r2, #12]
 8003a7a:	4770      	bx	lr
 8003a7c:	40004400 	.word	0x40004400

08003a80 <VectorD8>:
 8003a80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003a84:	4e45      	ldr	r6, [pc, #276]	; (8003b9c <VectorD8+0x11c>)
 8003a86:	6f75      	ldr	r5, [r6, #116]	; 0x74
 8003a88:	f8d5 900c 	ldr.w	r9, [r5, #12]
 8003a8c:	682b      	ldr	r3, [r5, #0]
 8003a8e:	05da      	lsls	r2, r3, #23
 8003a90:	b29c      	uxth	r4, r3
 8003a92:	d453      	bmi.n	8003b3c <VectorD8+0xbc>
 8003a94:	2320      	movs	r3, #32
 8003a96:	f383 8811 	msr	BASEPRI, r3
 8003a9a:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8003a9e:	d02d      	beq.n	8003afc <VectorD8+0x7c>
 8003aa0:	4f3f      	ldr	r7, [pc, #252]	; (8003ba0 <VectorD8+0x120>)
 8003aa2:	f1a7 0804 	sub.w	r8, r7, #4
 8003aa6:	e007      	b.n	8003ab8 <VectorD8+0x38>
 8003aa8:	06a0      	lsls	r0, r4, #26
 8003aaa:	6869      	ldr	r1, [r5, #4]
 8003aac:	d41d      	bmi.n	8003aea <VectorD8+0x6a>
 8003aae:	682c      	ldr	r4, [r5, #0]
 8003ab0:	b2a4      	uxth	r4, r4
 8003ab2:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8003ab6:	d021      	beq.n	8003afc <VectorD8+0x7c>
 8003ab8:	0723      	lsls	r3, r4, #28
 8003aba:	d0f5      	beq.n	8003aa8 <VectorD8+0x28>
 8003abc:	f014 0f08 	tst.w	r4, #8
 8003ac0:	bf0c      	ite	eq
 8003ac2:	2100      	moveq	r1, #0
 8003ac4:	2180      	movne	r1, #128	; 0x80
 8003ac6:	07e0      	lsls	r0, r4, #31
 8003ac8:	bf48      	it	mi
 8003aca:	f041 0120 	orrmi.w	r1, r1, #32
 8003ace:	07a2      	lsls	r2, r4, #30
 8003ad0:	bf48      	it	mi
 8003ad2:	f041 0140 	orrmi.w	r1, r1, #64	; 0x40
 8003ad6:	0763      	lsls	r3, r4, #29
 8003ad8:	bf48      	it	mi
 8003ada:	f441 7180 	orrmi.w	r1, r1, #256	; 0x100
 8003ade:	4638      	mov	r0, r7
 8003ae0:	f7fe fcee 	bl	80024c0 <chEvtBroadcastFlagsI>
 8003ae4:	06a0      	lsls	r0, r4, #26
 8003ae6:	6869      	ldr	r1, [r5, #4]
 8003ae8:	d5e1      	bpl.n	8003aae <VectorD8+0x2e>
 8003aea:	b2c9      	uxtb	r1, r1
 8003aec:	4640      	mov	r0, r8
 8003aee:	f7ff fb2f 	bl	8003150 <sdIncomingDataI>
 8003af2:	682c      	ldr	r4, [r5, #0]
 8003af4:	b2a4      	uxth	r4, r4
 8003af6:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8003afa:	d1dd      	bne.n	8003ab8 <VectorD8+0x38>
 8003afc:	2300      	movs	r3, #0
 8003afe:	f383 8811 	msr	BASEPRI, r3
 8003b02:	f019 0f80 	tst.w	r9, #128	; 0x80
 8003b06:	d001      	beq.n	8003b0c <VectorD8+0x8c>
 8003b08:	0622      	lsls	r2, r4, #24
 8003b0a:	d426      	bmi.n	8003b5a <VectorD8+0xda>
 8003b0c:	0663      	lsls	r3, r4, #25
 8003b0e:	d511      	bpl.n	8003b34 <VectorD8+0xb4>
 8003b10:	2320      	movs	r3, #32
 8003b12:	f383 8811 	msr	BASEPRI, r3
 8003b16:	e9d6 2311 	ldrd	r2, r3, [r6, #68]	; 0x44
 8003b1a:	429a      	cmp	r2, r3
 8003b1c:	d02a      	beq.n	8003b74 <VectorD8+0xf4>
 8003b1e:	f64f 73bf 	movw	r3, #65471	; 0xffbf
 8003b22:	ea09 0303 	and.w	r3, r9, r3
 8003b26:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8003b2a:	60eb      	str	r3, [r5, #12]
 8003b2c:	2300      	movs	r3, #0
 8003b2e:	602a      	str	r2, [r5, #0]
 8003b30:	f383 8811 	msr	BASEPRI, r3
 8003b34:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003b38:	f7ff ba22 	b.w	8002f80 <_port_irq_epilogue>
 8003b3c:	2320      	movs	r3, #32
 8003b3e:	f383 8811 	msr	BASEPRI, r3
 8003b42:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003b46:	1d30      	adds	r0, r6, #4
 8003b48:	f7fe fcba 	bl	80024c0 <chEvtBroadcastFlagsI>
 8003b4c:	f46f 7380 	mvn.w	r3, #256	; 0x100
 8003b50:	602b      	str	r3, [r5, #0]
 8003b52:	2300      	movs	r3, #0
 8003b54:	f383 8811 	msr	BASEPRI, r3
 8003b58:	e79c      	b.n	8003a94 <VectorD8+0x14>
 8003b5a:	2320      	movs	r3, #32
 8003b5c:	f383 8811 	msr	BASEPRI, r3
 8003b60:	4810      	ldr	r0, [pc, #64]	; (8003ba4 <VectorD8+0x124>)
 8003b62:	f7ff f82d 	bl	8002bc0 <chOQGetI>
 8003b66:	2800      	cmp	r0, #0
 8003b68:	db0c      	blt.n	8003b84 <VectorD8+0x104>
 8003b6a:	6068      	str	r0, [r5, #4]
 8003b6c:	2300      	movs	r3, #0
 8003b6e:	f383 8811 	msr	BASEPRI, r3
 8003b72:	e7cb      	b.n	8003b0c <VectorD8+0x8c>
 8003b74:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8003b76:	2b00      	cmp	r3, #0
 8003b78:	d0d1      	beq.n	8003b1e <VectorD8+0x9e>
 8003b7a:	2110      	movs	r1, #16
 8003b7c:	4808      	ldr	r0, [pc, #32]	; (8003ba0 <VectorD8+0x120>)
 8003b7e:	f7fe fc9f 	bl	80024c0 <chEvtBroadcastFlagsI>
 8003b82:	e7cc      	b.n	8003b1e <VectorD8+0x9e>
 8003b84:	2108      	movs	r1, #8
 8003b86:	4806      	ldr	r0, [pc, #24]	; (8003ba0 <VectorD8+0x120>)
 8003b88:	f7fe fc9a 	bl	80024c0 <chEvtBroadcastFlagsI>
 8003b8c:	f64f 733f 	movw	r3, #65343	; 0xff3f
 8003b90:	ea09 0303 	and.w	r3, r9, r3
 8003b94:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003b98:	60eb      	str	r3, [r5, #12]
 8003b9a:	e7e7      	b.n	8003b6c <VectorD8+0xec>
 8003b9c:	20000f64 	.word	0x20000f64
 8003ba0:	20000f68 	.word	0x20000f68
 8003ba4:	20000f94 	.word	0x20000f94
	...

08003bb0 <sd_lld_init>:
 8003bb0:	b510      	push	{r4, lr}
 8003bb2:	4c04      	ldr	r4, [pc, #16]	; (8003bc4 <sd_lld_init+0x14>)
 8003bb4:	4a04      	ldr	r2, [pc, #16]	; (8003bc8 <sd_lld_init+0x18>)
 8003bb6:	4620      	mov	r0, r4
 8003bb8:	2100      	movs	r1, #0
 8003bba:	f7ff fa99 	bl	80030f0 <sdObjectInit>
 8003bbe:	4b03      	ldr	r3, [pc, #12]	; (8003bcc <sd_lld_init+0x1c>)
 8003bc0:	6763      	str	r3, [r4, #116]	; 0x74
 8003bc2:	bd10      	pop	{r4, pc}
 8003bc4:	20000f64 	.word	0x20000f64
 8003bc8:	08003a71 	.word	0x08003a71
 8003bcc:	40004400 	.word	0x40004400

08003bd0 <sd_lld_start>:
 8003bd0:	b538      	push	{r3, r4, r5, lr}
 8003bd2:	4c1c      	ldr	r4, [pc, #112]	; (8003c44 <sd_lld_start+0x74>)
 8003bd4:	7a03      	ldrb	r3, [r0, #8]
 8003bd6:	2900      	cmp	r1, #0
 8003bd8:	bf18      	it	ne
 8003bda:	460c      	movne	r4, r1
 8003bdc:	2b01      	cmp	r3, #1
 8003bde:	4605      	mov	r5, r0
 8003be0:	d023      	beq.n	8003c2a <sd_lld_start+0x5a>
 8003be2:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8003be4:	4918      	ldr	r1, [pc, #96]	; (8003c48 <sd_lld_start+0x78>)
 8003be6:	6820      	ldr	r0, [r4, #0]
 8003be8:	428b      	cmp	r3, r1
 8003bea:	d019      	beq.n	8003c20 <sd_lld_start+0x50>
 8003bec:	4a17      	ldr	r2, [pc, #92]	; (8003c4c <sd_lld_start+0x7c>)
 8003bee:	4293      	cmp	r3, r2
 8003bf0:	d016      	beq.n	8003c20 <sd_lld_start+0x50>
 8003bf2:	4a17      	ldr	r2, [pc, #92]	; (8003c50 <sd_lld_start+0x80>)
 8003bf4:	fbb2 f2f0 	udiv	r2, r2, r0
 8003bf8:	609a      	str	r2, [r3, #8]
 8003bfa:	88a2      	ldrh	r2, [r4, #4]
 8003bfc:	88e0      	ldrh	r0, [r4, #6]
 8003bfe:	8921      	ldrh	r1, [r4, #8]
 8003c00:	f442 5204 	orr.w	r2, r2, #8448	; 0x2100
 8003c04:	f042 022c 	orr.w	r2, r2, #44	; 0x2c
 8003c08:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 8003c0c:	f041 0101 	orr.w	r1, r1, #1
 8003c10:	2400      	movs	r4, #0
 8003c12:	6118      	str	r0, [r3, #16]
 8003c14:	6159      	str	r1, [r3, #20]
 8003c16:	60da      	str	r2, [r3, #12]
 8003c18:	601c      	str	r4, [r3, #0]
 8003c1a:	681a      	ldr	r2, [r3, #0]
 8003c1c:	685b      	ldr	r3, [r3, #4]
 8003c1e:	bd38      	pop	{r3, r4, r5, pc}
 8003c20:	4a0c      	ldr	r2, [pc, #48]	; (8003c54 <sd_lld_start+0x84>)
 8003c22:	fbb2 f2f0 	udiv	r2, r2, r0
 8003c26:	609a      	str	r2, [r3, #8]
 8003c28:	e7e7      	b.n	8003bfa <sd_lld_start+0x2a>
 8003c2a:	4b0b      	ldr	r3, [pc, #44]	; (8003c58 <sd_lld_start+0x88>)
 8003c2c:	4298      	cmp	r0, r3
 8003c2e:	d1d8      	bne.n	8003be2 <sd_lld_start+0x12>
 8003c30:	4a0a      	ldr	r2, [pc, #40]	; (8003c5c <sd_lld_start+0x8c>)
 8003c32:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8003c34:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003c38:	6413      	str	r3, [r2, #64]	; 0x40
 8003c3a:	210c      	movs	r1, #12
 8003c3c:	2026      	movs	r0, #38	; 0x26
 8003c3e:	f7ff fab7 	bl	80031b0 <nvicEnableVector>
 8003c42:	e7ce      	b.n	8003be2 <sd_lld_start+0x12>
 8003c44:	08007b50 	.word	0x08007b50
 8003c48:	40011000 	.word	0x40011000
 8003c4c:	40011400 	.word	0x40011400
 8003c50:	0280de80 	.word	0x0280de80
 8003c54:	0501bd00 	.word	0x0501bd00
 8003c58:	20000f64 	.word	0x20000f64
 8003c5c:	40023800 	.word	0x40023800

08003c60 <__early_init>:
 8003c60:	f7ff bcae 	b.w	80035c0 <stm32_clock_init>
	...

08003c70 <boardInit>:
 8003c70:	4770      	bx	lr
 8003c72:	bf00      	nop
	...

08003c80 <tmr>:
 8003c80:	4b01      	ldr	r3, [pc, #4]	; (8003c88 <tmr+0x8>)
 8003c82:	2201      	movs	r2, #1
 8003c84:	701a      	strb	r2, [r3, #0]
 8003c86:	4770      	bx	lr
 8003c88:	20001651 	.word	0x20001651
 8003c8c:	00000000 	.word	0x00000000

08003c90 <print_line>:
 8003c90:	b570      	push	{r4, r5, r6, lr}
 8003c92:	4d08      	ldr	r5, [pc, #32]	; (8003cb4 <print_line+0x24>)
 8003c94:	244c      	movs	r4, #76	; 0x4c
 8003c96:	6828      	ldr	r0, [r5, #0]
 8003c98:	6803      	ldr	r3, [r0, #0]
 8003c9a:	212d      	movs	r1, #45	; 0x2d
 8003c9c:	689b      	ldr	r3, [r3, #8]
 8003c9e:	4798      	blx	r3
 8003ca0:	3c01      	subs	r4, #1
 8003ca2:	d1f8      	bne.n	8003c96 <print_line+0x6>
 8003ca4:	6828      	ldr	r0, [r5, #0]
 8003ca6:	4904      	ldr	r1, [pc, #16]	; (8003cb8 <print_line+0x28>)
 8003ca8:	6803      	ldr	r3, [r0, #0]
 8003caa:	2202      	movs	r2, #2
 8003cac:	681b      	ldr	r3, [r3, #0]
 8003cae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003cb2:	4718      	bx	r3
 8003cb4:	20000fdc 	.word	0x20000fdc
 8003cb8:	08007eb0 	.word	0x08007eb0
 8003cbc:	00000000 	.word	0x00000000

08003cc0 <test_printn>:
 8003cc0:	b928      	cbnz	r0, 8003cce <test_printn+0xe>
 8003cc2:	4b15      	ldr	r3, [pc, #84]	; (8003d18 <test_printn+0x58>)
 8003cc4:	6818      	ldr	r0, [r3, #0]
 8003cc6:	6803      	ldr	r3, [r0, #0]
 8003cc8:	2130      	movs	r1, #48	; 0x30
 8003cca:	689b      	ldr	r3, [r3, #8]
 8003ccc:	4718      	bx	r3
 8003cce:	b570      	push	{r4, r5, r6, lr}
 8003cd0:	b084      	sub	sp, #16
 8003cd2:	466d      	mov	r5, sp
 8003cd4:	462c      	mov	r4, r5
 8003cd6:	4e11      	ldr	r6, [pc, #68]	; (8003d1c <test_printn+0x5c>)
 8003cd8:	e000      	b.n	8003cdc <test_printn+0x1c>
 8003cda:	4614      	mov	r4, r2
 8003cdc:	fba6 2300 	umull	r2, r3, r6, r0
 8003ce0:	08db      	lsrs	r3, r3, #3
 8003ce2:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 8003ce6:	eba0 0041 	sub.w	r0, r0, r1, lsl #1
 8003cea:	f100 0130 	add.w	r1, r0, #48	; 0x30
 8003cee:	4622      	mov	r2, r4
 8003cf0:	b2c9      	uxtb	r1, r1
 8003cf2:	f802 1b01 	strb.w	r1, [r2], #1
 8003cf6:	4618      	mov	r0, r3
 8003cf8:	2b00      	cmp	r3, #0
 8003cfa:	d1ee      	bne.n	8003cda <test_printn+0x1a>
 8003cfc:	42aa      	cmp	r2, r5
 8003cfe:	d909      	bls.n	8003d14 <test_printn+0x54>
 8003d00:	4e05      	ldr	r6, [pc, #20]	; (8003d18 <test_printn+0x58>)
 8003d02:	e001      	b.n	8003d08 <test_printn+0x48>
 8003d04:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
 8003d08:	6830      	ldr	r0, [r6, #0]
 8003d0a:	6803      	ldr	r3, [r0, #0]
 8003d0c:	689b      	ldr	r3, [r3, #8]
 8003d0e:	4798      	blx	r3
 8003d10:	42a5      	cmp	r5, r4
 8003d12:	d1f7      	bne.n	8003d04 <test_printn+0x44>
 8003d14:	b004      	add	sp, #16
 8003d16:	bd70      	pop	{r4, r5, r6, pc}
 8003d18:	20000fdc 	.word	0x20000fdc
 8003d1c:	cccccccd 	.word	0xcccccccd

08003d20 <test_print>:
 8003d20:	7801      	ldrb	r1, [r0, #0]
 8003d22:	b159      	cbz	r1, 8003d3c <test_print+0x1c>
 8003d24:	b538      	push	{r3, r4, r5, lr}
 8003d26:	4d06      	ldr	r5, [pc, #24]	; (8003d40 <test_print+0x20>)
 8003d28:	4604      	mov	r4, r0
 8003d2a:	6828      	ldr	r0, [r5, #0]
 8003d2c:	6803      	ldr	r3, [r0, #0]
 8003d2e:	689b      	ldr	r3, [r3, #8]
 8003d30:	4798      	blx	r3
 8003d32:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8003d36:	2900      	cmp	r1, #0
 8003d38:	d1f7      	bne.n	8003d2a <test_print+0xa>
 8003d3a:	bd38      	pop	{r3, r4, r5, pc}
 8003d3c:	4770      	bx	lr
 8003d3e:	bf00      	nop
 8003d40:	20000fdc 	.word	0x20000fdc
	...

08003d50 <test_println>:
 8003d50:	b570      	push	{r4, r5, r6, lr}
 8003d52:	7801      	ldrb	r1, [r0, #0]
 8003d54:	b189      	cbz	r1, 8003d7a <test_println+0x2a>
 8003d56:	4d0a      	ldr	r5, [pc, #40]	; (8003d80 <test_println+0x30>)
 8003d58:	4604      	mov	r4, r0
 8003d5a:	6828      	ldr	r0, [r5, #0]
 8003d5c:	6803      	ldr	r3, [r0, #0]
 8003d5e:	689b      	ldr	r3, [r3, #8]
 8003d60:	4798      	blx	r3
 8003d62:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8003d66:	2900      	cmp	r1, #0
 8003d68:	d1f7      	bne.n	8003d5a <test_println+0xa>
 8003d6a:	6828      	ldr	r0, [r5, #0]
 8003d6c:	4905      	ldr	r1, [pc, #20]	; (8003d84 <test_println+0x34>)
 8003d6e:	6803      	ldr	r3, [r0, #0]
 8003d70:	2202      	movs	r2, #2
 8003d72:	681b      	ldr	r3, [r3, #0]
 8003d74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003d78:	4718      	bx	r3
 8003d7a:	4d01      	ldr	r5, [pc, #4]	; (8003d80 <test_println+0x30>)
 8003d7c:	e7f5      	b.n	8003d6a <test_println+0x1a>
 8003d7e:	bf00      	nop
 8003d80:	20000fdc 	.word	0x20000fdc
 8003d84:	08007eb0 	.word	0x08007eb0
	...

08003d90 <test_emit_token>:
 8003d90:	2320      	movs	r3, #32
 8003d92:	f383 8811 	msr	BASEPRI, r3
 8003d96:	4b04      	ldr	r3, [pc, #16]	; (8003da8 <test_emit_token+0x18>)
 8003d98:	681a      	ldr	r2, [r3, #0]
 8003d9a:	1c51      	adds	r1, r2, #1
 8003d9c:	6019      	str	r1, [r3, #0]
 8003d9e:	7010      	strb	r0, [r2, #0]
 8003da0:	2300      	movs	r3, #0
 8003da2:	f383 8811 	msr	BASEPRI, r3
 8003da6:	4770      	bx	lr
 8003da8:	20001678 	.word	0x20001678
 8003dac:	00000000 	.word	0x00000000

08003db0 <_test_assert>:
 8003db0:	b951      	cbnz	r1, 8003dc8 <_test_assert+0x18>
 8003db2:	b410      	push	{r4}
 8003db4:	4906      	ldr	r1, [pc, #24]	; (8003dd0 <_test_assert+0x20>)
 8003db6:	4c07      	ldr	r4, [pc, #28]	; (8003dd4 <_test_assert+0x24>)
 8003db8:	4a07      	ldr	r2, [pc, #28]	; (8003dd8 <_test_assert+0x28>)
 8003dba:	2301      	movs	r3, #1
 8003dbc:	7023      	strb	r3, [r4, #0]
 8003dbe:	6010      	str	r0, [r2, #0]
 8003dc0:	700b      	strb	r3, [r1, #0]
 8003dc2:	4618      	mov	r0, r3
 8003dc4:	bc10      	pop	{r4}
 8003dc6:	4770      	bx	lr
 8003dc8:	2300      	movs	r3, #0
 8003dca:	4618      	mov	r0, r3
 8003dcc:	4770      	bx	lr
 8003dce:	bf00      	nop
 8003dd0:	20000fe4 	.word	0x20000fe4
 8003dd4:	20001650 	.word	0x20001650
 8003dd8:	20000fe0 	.word	0x20000fe0
 8003ddc:	00000000 	.word	0x00000000

08003de0 <_test_assert_sequence>:
 8003de0:	b4f0      	push	{r4, r5, r6, r7}
 8003de2:	4e0e      	ldr	r6, [pc, #56]	; (8003e1c <_test_assert_sequence+0x3c>)
 8003de4:	4f0e      	ldr	r7, [pc, #56]	; (8003e20 <_test_assert_sequence+0x40>)
 8003de6:	6835      	ldr	r5, [r6, #0]
 8003de8:	3901      	subs	r1, #1
 8003dea:	463b      	mov	r3, r7
 8003dec:	e003      	b.n	8003df6 <_test_assert_sequence+0x16>
 8003dee:	f813 4b01 	ldrb.w	r4, [r3], #1
 8003df2:	4294      	cmp	r4, r2
 8003df4:	d108      	bne.n	8003e08 <_test_assert_sequence+0x28>
 8003df6:	429d      	cmp	r5, r3
 8003df8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8003dfc:	d8f7      	bhi.n	8003dee <_test_assert_sequence+0xe>
 8003dfe:	b91a      	cbnz	r2, 8003e08 <_test_assert_sequence+0x28>
 8003e00:	6037      	str	r7, [r6, #0]
 8003e02:	4610      	mov	r0, r2
 8003e04:	bcf0      	pop	{r4, r5, r6, r7}
 8003e06:	4770      	bx	lr
 8003e08:	4c06      	ldr	r4, [pc, #24]	; (8003e24 <_test_assert_sequence+0x44>)
 8003e0a:	4907      	ldr	r1, [pc, #28]	; (8003e28 <_test_assert_sequence+0x48>)
 8003e0c:	4b07      	ldr	r3, [pc, #28]	; (8003e2c <_test_assert_sequence+0x4c>)
 8003e0e:	2201      	movs	r2, #1
 8003e10:	7022      	strb	r2, [r4, #0]
 8003e12:	6018      	str	r0, [r3, #0]
 8003e14:	700a      	strb	r2, [r1, #0]
 8003e16:	4610      	mov	r0, r2
 8003e18:	bcf0      	pop	{r4, r5, r6, r7}
 8003e1a:	4770      	bx	lr
 8003e1c:	20001678 	.word	0x20001678
 8003e20:	20001668 	.word	0x20001668
 8003e24:	20001650 	.word	0x20001650
 8003e28:	20000fe4 	.word	0x20000fe4
 8003e2c:	20000fe0 	.word	0x20000fe0

08003e30 <_test_assert_time_window>:
 8003e30:	b410      	push	{r4}
 8003e32:	2320      	movs	r3, #32
 8003e34:	f383 8811 	msr	BASEPRI, r3
 8003e38:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8003e3c:	2300      	movs	r3, #0
 8003e3e:	6a64      	ldr	r4, [r4, #36]	; 0x24
 8003e40:	f383 8811 	msr	BASEPRI, r3
 8003e44:	1a64      	subs	r4, r4, r1
 8003e46:	1a52      	subs	r2, r2, r1
 8003e48:	4294      	cmp	r4, r2
 8003e4a:	d306      	bcc.n	8003e5a <_test_assert_time_window+0x2a>
 8003e4c:	4c04      	ldr	r4, [pc, #16]	; (8003e60 <_test_assert_time_window+0x30>)
 8003e4e:	4905      	ldr	r1, [pc, #20]	; (8003e64 <_test_assert_time_window+0x34>)
 8003e50:	4a05      	ldr	r2, [pc, #20]	; (8003e68 <_test_assert_time_window+0x38>)
 8003e52:	2301      	movs	r3, #1
 8003e54:	7023      	strb	r3, [r4, #0]
 8003e56:	700b      	strb	r3, [r1, #0]
 8003e58:	6010      	str	r0, [r2, #0]
 8003e5a:	4618      	mov	r0, r3
 8003e5c:	bc10      	pop	{r4}
 8003e5e:	4770      	bx	lr
 8003e60:	20001650 	.word	0x20001650
 8003e64:	20000fe4 	.word	0x20000fe4
 8003e68:	20000fe0 	.word	0x20000fe0
 8003e6c:	00000000 	.word	0x00000000

08003e70 <test_terminate_threads>:
 8003e70:	b538      	push	{r3, r4, r5, lr}
 8003e72:	4c06      	ldr	r4, [pc, #24]	; (8003e8c <test_terminate_threads+0x1c>)
 8003e74:	f104 0514 	add.w	r5, r4, #20
 8003e78:	f854 3b04 	ldr.w	r3, [r4], #4
 8003e7c:	4618      	mov	r0, r3
 8003e7e:	b10b      	cbz	r3, 8003e84 <test_terminate_threads+0x14>
 8003e80:	f7fd fdde 	bl	8001a40 <chThdTerminate>
 8003e84:	42ac      	cmp	r4, r5
 8003e86:	d1f7      	bne.n	8003e78 <test_terminate_threads+0x8>
 8003e88:	bd38      	pop	{r3, r4, r5, pc}
 8003e8a:	bf00      	nop
 8003e8c:	20001654 	.word	0x20001654

08003e90 <test_wait_threads>:
 8003e90:	b570      	push	{r4, r5, r6, lr}
 8003e92:	4c07      	ldr	r4, [pc, #28]	; (8003eb0 <test_wait_threads+0x20>)
 8003e94:	2600      	movs	r6, #0
 8003e96:	f104 0514 	add.w	r5, r4, #20
 8003e9a:	f854 0b04 	ldr.w	r0, [r4], #4
 8003e9e:	b118      	cbz	r0, 8003ea8 <test_wait_threads+0x18>
 8003ea0:	f7fd fe3e 	bl	8001b20 <chThdWait>
 8003ea4:	f844 6c04 	str.w	r6, [r4, #-4]
 8003ea8:	42ac      	cmp	r4, r5
 8003eaa:	d1f6      	bne.n	8003e9a <test_wait_threads+0xa>
 8003eac:	bd70      	pop	{r4, r5, r6, pc}
 8003eae:	bf00      	nop
 8003eb0:	20001654 	.word	0x20001654
	...

08003ec0 <test_wait_tick>:
 8003ec0:	b508      	push	{r3, lr}
 8003ec2:	2001      	movs	r0, #1
 8003ec4:	f7fd fdcc 	bl	8001a60 <chThdSleep>
 8003ec8:	2320      	movs	r3, #32
 8003eca:	f383 8811 	msr	BASEPRI, r3
 8003ece:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003ed2:	2300      	movs	r3, #0
 8003ed4:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8003ed6:	f383 8811 	msr	BASEPRI, r3
 8003eda:	bd08      	pop	{r3, pc}
 8003edc:	0000      	movs	r0, r0
	...

08003ee0 <test_start_timer>:
 8003ee0:	b510      	push	{r4, lr}
 8003ee2:	f242 7410 	movw	r4, #10000	; 0x2710
 8003ee6:	fb04 f400 	mul.w	r4, r4, r0
 8003eea:	490d      	ldr	r1, [pc, #52]	; (8003f20 <test_start_timer+0x40>)
 8003eec:	4b0d      	ldr	r3, [pc, #52]	; (8003f24 <test_start_timer+0x44>)
 8003eee:	f204 34e7 	addw	r4, r4, #999	; 0x3e7
 8003ef2:	fba1 2404 	umull	r2, r4, r1, r4
 8003ef6:	2200      	movs	r2, #0
 8003ef8:	701a      	strb	r2, [r3, #0]
 8003efa:	09a4      	lsrs	r4, r4, #6
 8003efc:	2320      	movs	r3, #32
 8003efe:	f383 8811 	msr	BASEPRI, r3
 8003f02:	4809      	ldr	r0, [pc, #36]	; (8003f28 <test_start_timer+0x48>)
 8003f04:	68c3      	ldr	r3, [r0, #12]
 8003f06:	b10b      	cbz	r3, 8003f0c <test_start_timer+0x2c>
 8003f08:	f7fd fb8a 	bl	8001620 <chVTDoResetI>
 8003f0c:	4621      	mov	r1, r4
 8003f0e:	2300      	movs	r3, #0
 8003f10:	4a06      	ldr	r2, [pc, #24]	; (8003f2c <test_start_timer+0x4c>)
 8003f12:	4805      	ldr	r0, [pc, #20]	; (8003f28 <test_start_timer+0x48>)
 8003f14:	f7fd fb44 	bl	80015a0 <chVTDoSetI>
 8003f18:	2300      	movs	r3, #0
 8003f1a:	f383 8811 	msr	BASEPRI, r3
 8003f1e:	bd10      	pop	{r4, pc}
 8003f20:	10624dd3 	.word	0x10624dd3
 8003f24:	20001651 	.word	0x20001651
 8003f28:	2000167c 	.word	0x2000167c
 8003f2c:	08003c81 	.word	0x08003c81

08003f30 <TestThread>:
 8003f30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f34:	4c9a      	ldr	r4, [pc, #616]	; (80041a0 <TestThread+0x270>)
 8003f36:	4d9b      	ldr	r5, [pc, #620]	; (80041a4 <TestThread+0x274>)
 8003f38:	6020      	str	r0, [r4, #0]
 8003f3a:	b085      	sub	sp, #20
 8003f3c:	489a      	ldr	r0, [pc, #616]	; (80041a8 <TestThread+0x278>)
 8003f3e:	f7ff ff07 	bl	8003d50 <test_println>
 8003f42:	489a      	ldr	r0, [pc, #616]	; (80041ac <TestThread+0x27c>)
 8003f44:	f7ff ff04 	bl	8003d50 <test_println>
 8003f48:	4899      	ldr	r0, [pc, #612]	; (80041b0 <TestThread+0x280>)
 8003f4a:	f7ff ff01 	bl	8003d50 <test_println>
 8003f4e:	212a      	movs	r1, #42	; 0x2a
 8003f50:	6820      	ldr	r0, [r4, #0]
 8003f52:	6803      	ldr	r3, [r0, #0]
 8003f54:	689b      	ldr	r3, [r3, #8]
 8003f56:	4798      	blx	r3
 8003f58:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8003f5c:	2900      	cmp	r1, #0
 8003f5e:	d1f7      	bne.n	8003f50 <TestThread+0x20>
 8003f60:	4894      	ldr	r0, [pc, #592]	; (80041b4 <TestThread+0x284>)
 8003f62:	4d95      	ldr	r5, [pc, #596]	; (80041b8 <TestThread+0x288>)
 8003f64:	f7ff fef4 	bl	8003d50 <test_println>
 8003f68:	212a      	movs	r1, #42	; 0x2a
 8003f6a:	6820      	ldr	r0, [r4, #0]
 8003f6c:	6803      	ldr	r3, [r0, #0]
 8003f6e:	689b      	ldr	r3, [r3, #8]
 8003f70:	4798      	blx	r3
 8003f72:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8003f76:	2900      	cmp	r1, #0
 8003f78:	d1f7      	bne.n	8003f6a <TestThread+0x3a>
 8003f7a:	4890      	ldr	r0, [pc, #576]	; (80041bc <TestThread+0x28c>)
 8003f7c:	4d90      	ldr	r5, [pc, #576]	; (80041c0 <TestThread+0x290>)
 8003f7e:	f7ff fee7 	bl	8003d50 <test_println>
 8003f82:	212a      	movs	r1, #42	; 0x2a
 8003f84:	6820      	ldr	r0, [r4, #0]
 8003f86:	6803      	ldr	r3, [r0, #0]
 8003f88:	689b      	ldr	r3, [r3, #8]
 8003f8a:	4798      	blx	r3
 8003f8c:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8003f90:	2900      	cmp	r1, #0
 8003f92:	d1f7      	bne.n	8003f84 <TestThread+0x54>
 8003f94:	488b      	ldr	r0, [pc, #556]	; (80041c4 <TestThread+0x294>)
 8003f96:	4d8c      	ldr	r5, [pc, #560]	; (80041c8 <TestThread+0x298>)
 8003f98:	f7ff feda 	bl	8003d50 <test_println>
 8003f9c:	212a      	movs	r1, #42	; 0x2a
 8003f9e:	6820      	ldr	r0, [r4, #0]
 8003fa0:	6803      	ldr	r3, [r0, #0]
 8003fa2:	689b      	ldr	r3, [r3, #8]
 8003fa4:	4798      	blx	r3
 8003fa6:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8003faa:	2900      	cmp	r1, #0
 8003fac:	d1f7      	bne.n	8003f9e <TestThread+0x6e>
 8003fae:	4887      	ldr	r0, [pc, #540]	; (80041cc <TestThread+0x29c>)
 8003fb0:	4d87      	ldr	r5, [pc, #540]	; (80041d0 <TestThread+0x2a0>)
 8003fb2:	f7ff fecd 	bl	8003d50 <test_println>
 8003fb6:	212a      	movs	r1, #42	; 0x2a
 8003fb8:	6820      	ldr	r0, [r4, #0]
 8003fba:	6803      	ldr	r3, [r0, #0]
 8003fbc:	689b      	ldr	r3, [r3, #8]
 8003fbe:	4798      	blx	r3
 8003fc0:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8003fc4:	2900      	cmp	r1, #0
 8003fc6:	d1f7      	bne.n	8003fb8 <TestThread+0x88>
 8003fc8:	4882      	ldr	r0, [pc, #520]	; (80041d4 <TestThread+0x2a4>)
 8003fca:	4d83      	ldr	r5, [pc, #524]	; (80041d8 <TestThread+0x2a8>)
 8003fcc:	f7ff fec0 	bl	8003d50 <test_println>
 8003fd0:	212a      	movs	r1, #42	; 0x2a
 8003fd2:	6820      	ldr	r0, [r4, #0]
 8003fd4:	6803      	ldr	r3, [r0, #0]
 8003fd6:	689b      	ldr	r3, [r3, #8]
 8003fd8:	4798      	blx	r3
 8003fda:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8003fde:	2900      	cmp	r1, #0
 8003fe0:	d1f7      	bne.n	8003fd2 <TestThread+0xa2>
 8003fe2:	487e      	ldr	r0, [pc, #504]	; (80041dc <TestThread+0x2ac>)
 8003fe4:	4d7e      	ldr	r5, [pc, #504]	; (80041e0 <TestThread+0x2b0>)
 8003fe6:	f7ff feb3 	bl	8003d50 <test_println>
 8003fea:	212a      	movs	r1, #42	; 0x2a
 8003fec:	6820      	ldr	r0, [r4, #0]
 8003fee:	6803      	ldr	r3, [r0, #0]
 8003ff0:	689b      	ldr	r3, [r3, #8]
 8003ff2:	4798      	blx	r3
 8003ff4:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8003ff8:	2900      	cmp	r1, #0
 8003ffa:	d1f7      	bne.n	8003fec <TestThread+0xbc>
 8003ffc:	4879      	ldr	r0, [pc, #484]	; (80041e4 <TestThread+0x2b4>)
 8003ffe:	4d7a      	ldr	r5, [pc, #488]	; (80041e8 <TestThread+0x2b8>)
 8004000:	f7ff fea6 	bl	8003d50 <test_println>
 8004004:	212a      	movs	r1, #42	; 0x2a
 8004006:	6820      	ldr	r0, [r4, #0]
 8004008:	6803      	ldr	r3, [r0, #0]
 800400a:	689b      	ldr	r3, [r3, #8]
 800400c:	4798      	blx	r3
 800400e:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8004012:	2900      	cmp	r1, #0
 8004014:	d1f7      	bne.n	8004006 <TestThread+0xd6>
 8004016:	4b75      	ldr	r3, [pc, #468]	; (80041ec <TestThread+0x2bc>)
 8004018:	4875      	ldr	r0, [pc, #468]	; (80041f0 <TestThread+0x2c0>)
 800401a:	9302      	str	r3, [sp, #8]
 800401c:	4b75      	ldr	r3, [pc, #468]	; (80041f4 <TestThread+0x2c4>)
 800401e:	9103      	str	r1, [sp, #12]
 8004020:	9301      	str	r3, [sp, #4]
 8004022:	f7ff fe95 	bl	8003d50 <test_println>
 8004026:	4860      	ldr	r0, [pc, #384]	; (80041a8 <TestThread+0x278>)
 8004028:	4f73      	ldr	r7, [pc, #460]	; (80041f8 <TestThread+0x2c8>)
 800402a:	f8df a1f4 	ldr.w	sl, [pc, #500]	; 8004220 <TestThread+0x2f0>
 800402e:	f8df 9208 	ldr.w	r9, [pc, #520]	; 8004238 <TestThread+0x308>
 8004032:	4e72      	ldr	r6, [pc, #456]	; (80041fc <TestThread+0x2cc>)
 8004034:	f7ff fe8c 	bl	8003d50 <test_println>
 8004038:	9903      	ldr	r1, [sp, #12]
 800403a:	4b71      	ldr	r3, [pc, #452]	; (8004200 <TestThread+0x2d0>)
 800403c:	468b      	mov	fp, r1
 800403e:	7019      	strb	r1, [r3, #0]
 8004040:	f10b 0b01 	add.w	fp, fp, #1
 8004044:	3e04      	subs	r6, #4
 8004046:	f04f 0800 	mov.w	r8, #0
 800404a:	f856 3f04 	ldr.w	r3, [r6, #4]!
 800404e:	2b00      	cmp	r3, #0
 8004050:	d07b      	beq.n	800414a <TestThread+0x21a>
 8004052:	4d6c      	ldr	r5, [pc, #432]	; (8004204 <TestThread+0x2d4>)
 8004054:	f7ff fe1c 	bl	8003c90 <print_line>
 8004058:	212d      	movs	r1, #45	; 0x2d
 800405a:	6820      	ldr	r0, [r4, #0]
 800405c:	6803      	ldr	r3, [r0, #0]
 800405e:	689b      	ldr	r3, [r3, #8]
 8004060:	4798      	blx	r3
 8004062:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8004066:	2900      	cmp	r1, #0
 8004068:	d1f7      	bne.n	800405a <TestThread+0x12a>
 800406a:	4658      	mov	r0, fp
 800406c:	f7ff fe28 	bl	8003cc0 <test_printn>
 8004070:	6820      	ldr	r0, [r4, #0]
 8004072:	4d65      	ldr	r5, [pc, #404]	; (8004208 <TestThread+0x2d8>)
 8004074:	6803      	ldr	r3, [r0, #0]
 8004076:	212e      	movs	r1, #46	; 0x2e
 8004078:	689b      	ldr	r3, [r3, #8]
 800407a:	f108 0801 	add.w	r8, r8, #1
 800407e:	4798      	blx	r3
 8004080:	4640      	mov	r0, r8
 8004082:	f7ff fe1d 	bl	8003cc0 <test_printn>
 8004086:	2120      	movs	r1, #32
 8004088:	6820      	ldr	r0, [r4, #0]
 800408a:	6803      	ldr	r3, [r0, #0]
 800408c:	689b      	ldr	r3, [r3, #8]
 800408e:	4798      	blx	r3
 8004090:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8004094:	2900      	cmp	r1, #0
 8004096:	d1f7      	bne.n	8004088 <TestThread+0x158>
 8004098:	6833      	ldr	r3, [r6, #0]
 800409a:	681d      	ldr	r5, [r3, #0]
 800409c:	7829      	ldrb	r1, [r5, #0]
 800409e:	b139      	cbz	r1, 80040b0 <TestThread+0x180>
 80040a0:	6820      	ldr	r0, [r4, #0]
 80040a2:	6803      	ldr	r3, [r0, #0]
 80040a4:	689b      	ldr	r3, [r3, #8]
 80040a6:	4798      	blx	r3
 80040a8:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 80040ac:	2900      	cmp	r1, #0
 80040ae:	d1f7      	bne.n	80040a0 <TestThread+0x170>
 80040b0:	4856      	ldr	r0, [pc, #344]	; (800420c <TestThread+0x2dc>)
 80040b2:	f7ff fe4d 	bl	8003d50 <test_println>
 80040b6:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 80040ba:	f7fd fcd1 	bl	8001a60 <chThdSleep>
 80040be:	6835      	ldr	r5, [r6, #0]
 80040c0:	4a53      	ldr	r2, [pc, #332]	; (8004210 <TestThread+0x2e0>)
 80040c2:	6869      	ldr	r1, [r5, #4]
 80040c4:	f8c7 a000 	str.w	sl, [r7]
 80040c8:	2300      	movs	r3, #0
 80040ca:	6013      	str	r3, [r2, #0]
 80040cc:	f889 3000 	strb.w	r3, [r9]
 80040d0:	e9c2 3301 	strd	r3, r3, [r2, #4]
 80040d4:	e9c2 3303 	strd	r3, r3, [r2, #12]
 80040d8:	b101      	cbz	r1, 80040dc <TestThread+0x1ac>
 80040da:	4788      	blx	r1
 80040dc:	68eb      	ldr	r3, [r5, #12]
 80040de:	4798      	blx	r3
 80040e0:	68ab      	ldr	r3, [r5, #8]
 80040e2:	b103      	cbz	r3, 80040e6 <TestThread+0x1b6>
 80040e4:	4798      	blx	r3
 80040e6:	f7ff fed3 	bl	8003e90 <test_wait_threads>
 80040ea:	f899 3000 	ldrb.w	r3, [r9]
 80040ee:	2b00      	cmp	r3, #0
 80040f0:	d034      	beq.n	800415c <TestThread+0x22c>
 80040f2:	4d48      	ldr	r5, [pc, #288]	; (8004214 <TestThread+0x2e4>)
 80040f4:	212d      	movs	r1, #45	; 0x2d
 80040f6:	6820      	ldr	r0, [r4, #0]
 80040f8:	6803      	ldr	r3, [r0, #0]
 80040fa:	689b      	ldr	r3, [r3, #8]
 80040fc:	4798      	blx	r3
 80040fe:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8004102:	2900      	cmp	r1, #0
 8004104:	d1f7      	bne.n	80040f6 <TestThread+0x1c6>
 8004106:	4b44      	ldr	r3, [pc, #272]	; (8004218 <TestThread+0x2e8>)
 8004108:	4d44      	ldr	r5, [pc, #272]	; (800421c <TestThread+0x2ec>)
 800410a:	6818      	ldr	r0, [r3, #0]
 800410c:	f7ff fdd8 	bl	8003cc0 <test_printn>
 8004110:	2120      	movs	r1, #32
 8004112:	6820      	ldr	r0, [r4, #0]
 8004114:	6803      	ldr	r3, [r0, #0]
 8004116:	689b      	ldr	r3, [r3, #8]
 8004118:	4798      	blx	r3
 800411a:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800411e:	2900      	cmp	r1, #0
 8004120:	d1f7      	bne.n	8004112 <TestThread+0x1e2>
 8004122:	683b      	ldr	r3, [r7, #0]
 8004124:	4553      	cmp	r3, sl
 8004126:	d909      	bls.n	800413c <TestThread+0x20c>
 8004128:	4d3d      	ldr	r5, [pc, #244]	; (8004220 <TestThread+0x2f0>)
 800412a:	6820      	ldr	r0, [r4, #0]
 800412c:	f815 1b01 	ldrb.w	r1, [r5], #1
 8004130:	6803      	ldr	r3, [r0, #0]
 8004132:	689b      	ldr	r3, [r3, #8]
 8004134:	4798      	blx	r3
 8004136:	683b      	ldr	r3, [r7, #0]
 8004138:	429d      	cmp	r5, r3
 800413a:	d3f6      	bcc.n	800412a <TestThread+0x1fa>
 800413c:	4839      	ldr	r0, [pc, #228]	; (8004224 <TestThread+0x2f4>)
 800413e:	f7ff fe07 	bl	8003d50 <test_println>
 8004142:	f856 3f04 	ldr.w	r3, [r6, #4]!
 8004146:	2b00      	cmp	r3, #0
 8004148:	d183      	bne.n	8004052 <TestThread+0x122>
 800414a:	9e01      	ldr	r6, [sp, #4]
 800414c:	b156      	cbz	r6, 8004164 <TestThread+0x234>
 800414e:	9b02      	ldr	r3, [sp, #8]
 8004150:	461a      	mov	r2, r3
 8004152:	f852 3f04 	ldr.w	r3, [r2, #4]!
 8004156:	9301      	str	r3, [sp, #4]
 8004158:	9202      	str	r2, [sp, #8]
 800415a:	e771      	b.n	8004040 <TestThread+0x110>
 800415c:	4832      	ldr	r0, [pc, #200]	; (8004228 <TestThread+0x2f8>)
 800415e:	f7ff fdf7 	bl	8003d50 <test_println>
 8004162:	e772      	b.n	800404a <TestThread+0x11a>
 8004164:	f7ff fd94 	bl	8003c90 <print_line>
 8004168:	4d30      	ldr	r5, [pc, #192]	; (800422c <TestThread+0x2fc>)
 800416a:	480f      	ldr	r0, [pc, #60]	; (80041a8 <TestThread+0x278>)
 800416c:	f7ff fdf0 	bl	8003d50 <test_println>
 8004170:	2146      	movs	r1, #70	; 0x46
 8004172:	6820      	ldr	r0, [r4, #0]
 8004174:	6803      	ldr	r3, [r0, #0]
 8004176:	689b      	ldr	r3, [r3, #8]
 8004178:	4798      	blx	r3
 800417a:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800417e:	2900      	cmp	r1, #0
 8004180:	d1f7      	bne.n	8004172 <TestThread+0x242>
 8004182:	4b1f      	ldr	r3, [pc, #124]	; (8004200 <TestThread+0x2d0>)
 8004184:	781b      	ldrb	r3, [r3, #0]
 8004186:	b92b      	cbnz	r3, 8004194 <TestThread+0x264>
 8004188:	4829      	ldr	r0, [pc, #164]	; (8004230 <TestThread+0x300>)
 800418a:	b005      	add	sp, #20
 800418c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004190:	f7ff bdde 	b.w	8003d50 <test_println>
 8004194:	4827      	ldr	r0, [pc, #156]	; (8004234 <TestThread+0x304>)
 8004196:	b005      	add	sp, #20
 8004198:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800419c:	f7ff bdd8 	b.w	8003d50 <test_println>
 80041a0:	20000fdc 	.word	0x20000fdc
 80041a4:	08007c60 	.word	0x08007c60
 80041a8:	08008690 	.word	0x08008690
 80041ac:	08007d40 	.word	0x08007d40
 80041b0:	08007d5c 	.word	0x08007d5c
 80041b4:	08007d60 	.word	0x08007d60
 80041b8:	08007c74 	.word	0x08007c74
 80041bc:	08007d68 	.word	0x08007d68
 80041c0:	08007c88 	.word	0x08007c88
 80041c4:	08007d80 	.word	0x08007d80
 80041c8:	08007c9c 	.word	0x08007c9c
 80041cc:	08007dc8 	.word	0x08007dc8
 80041d0:	08007cb0 	.word	0x08007cb0
 80041d4:	08007dd4 	.word	0x08007dd4
 80041d8:	08007cc4 	.word	0x08007cc4
 80041dc:	08007de0 	.word	0x08007de0
 80041e0:	08007cd8 	.word	0x08007cd8
 80041e4:	08007df8 	.word	0x08007df8
 80041e8:	08007cec 	.word	0x08007cec
 80041ec:	08007e74 	.word	0x08007e74
 80041f0:	08007e24 	.word	0x08007e24
 80041f4:	08007ee0 	.word	0x08007ee0
 80041f8:	20001678 	.word	0x20001678
 80041fc:	080084d0 	.word	0x080084d0
 8004200:	20001650 	.word	0x20001650
 8004204:	08007d00 	.word	0x08007d00
 8004208:	08007d10 	.word	0x08007d10
 800420c:	08007e4c 	.word	0x08007e4c
 8004210:	20001654 	.word	0x20001654
 8004214:	08007d14 	.word	0x08007d14
 8004218:	20000fe0 	.word	0x20000fe0
 800421c:	08007d2c 	.word	0x08007d2c
 8004220:	20001668 	.word	0x20001668
 8004224:	08007e50 	.word	0x08007e50
 8004228:	08007e54 	.word	0x08007e54
 800422c:	08007d30 	.word	0x08007d30
 8004230:	08007e60 	.word	0x08007e60
 8004234:	08007e68 	.word	0x08007e68
 8004238:	20000fe4 	.word	0x20000fe4
 800423c:	00000000 	.word	0x00000000

08004240 <thd1_execute>:
 8004240:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004242:	4f27      	ldr	r7, [pc, #156]	; (80042e0 <thd1_execute+0xa0>)
 8004244:	4e27      	ldr	r6, [pc, #156]	; (80042e4 <thd1_execute+0xa4>)
 8004246:	69bb      	ldr	r3, [r7, #24]
 8004248:	4d27      	ldr	r5, [pc, #156]	; (80042e8 <thd1_execute+0xa8>)
 800424a:	689a      	ldr	r2, [r3, #8]
 800424c:	4b27      	ldr	r3, [pc, #156]	; (80042ec <thd1_execute+0xac>)
 800424e:	6830      	ldr	r0, [r6, #0]
 8004250:	4c27      	ldr	r4, [pc, #156]	; (80042f0 <thd1_execute+0xb0>)
 8004252:	b083      	sub	sp, #12
 8004254:	3a05      	subs	r2, #5
 8004256:	9300      	str	r3, [sp, #0]
 8004258:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800425c:	462b      	mov	r3, r5
 800425e:	f7fd fb97 	bl	8001990 <chThdCreateStatic>
 8004262:	69bb      	ldr	r3, [r7, #24]
 8004264:	4923      	ldr	r1, [pc, #140]	; (80042f4 <thd1_execute+0xb4>)
 8004266:	689a      	ldr	r2, [r3, #8]
 8004268:	6873      	ldr	r3, [r6, #4]
 800426a:	6020      	str	r0, [r4, #0]
 800426c:	9100      	str	r1, [sp, #0]
 800426e:	3a04      	subs	r2, #4
 8004270:	4618      	mov	r0, r3
 8004272:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004276:	462b      	mov	r3, r5
 8004278:	f7fd fb8a 	bl	8001990 <chThdCreateStatic>
 800427c:	69ba      	ldr	r2, [r7, #24]
 800427e:	68b3      	ldr	r3, [r6, #8]
 8004280:	6892      	ldr	r2, [r2, #8]
 8004282:	491d      	ldr	r1, [pc, #116]	; (80042f8 <thd1_execute+0xb8>)
 8004284:	6060      	str	r0, [r4, #4]
 8004286:	9100      	str	r1, [sp, #0]
 8004288:	3a03      	subs	r2, #3
 800428a:	4618      	mov	r0, r3
 800428c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004290:	462b      	mov	r3, r5
 8004292:	f7fd fb7d 	bl	8001990 <chThdCreateStatic>
 8004296:	69ba      	ldr	r2, [r7, #24]
 8004298:	68f3      	ldr	r3, [r6, #12]
 800429a:	6892      	ldr	r2, [r2, #8]
 800429c:	4917      	ldr	r1, [pc, #92]	; (80042fc <thd1_execute+0xbc>)
 800429e:	60a0      	str	r0, [r4, #8]
 80042a0:	9100      	str	r1, [sp, #0]
 80042a2:	3a02      	subs	r2, #2
 80042a4:	4618      	mov	r0, r3
 80042a6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80042aa:	462b      	mov	r3, r5
 80042ac:	f7fd fb70 	bl	8001990 <chThdCreateStatic>
 80042b0:	69ba      	ldr	r2, [r7, #24]
 80042b2:	6933      	ldr	r3, [r6, #16]
 80042b4:	6892      	ldr	r2, [r2, #8]
 80042b6:	4912      	ldr	r1, [pc, #72]	; (8004300 <thd1_execute+0xc0>)
 80042b8:	60e0      	str	r0, [r4, #12]
 80042ba:	3a01      	subs	r2, #1
 80042bc:	9100      	str	r1, [sp, #0]
 80042be:	4618      	mov	r0, r3
 80042c0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80042c4:	462b      	mov	r3, r5
 80042c6:	f7fd fb63 	bl	8001990 <chThdCreateStatic>
 80042ca:	6120      	str	r0, [r4, #16]
 80042cc:	f7ff fde0 	bl	8003e90 <test_wait_threads>
 80042d0:	490c      	ldr	r1, [pc, #48]	; (8004304 <thd1_execute+0xc4>)
 80042d2:	2001      	movs	r0, #1
 80042d4:	b003      	add	sp, #12
 80042d6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80042da:	f7ff bd81 	b.w	8003de0 <_test_assert_sequence>
 80042de:	bf00      	nop
 80042e0:	20000ce8 	.word	0x20000ce8
 80042e4:	08007ec0 	.word	0x08007ec0
 80042e8:	08004311 	.word	0x08004311
 80042ec:	08007fc4 	.word	0x08007fc4
 80042f0:	20001654 	.word	0x20001654
 80042f4:	08007fb0 	.word	0x08007fb0
 80042f8:	08007fb4 	.word	0x08007fb4
 80042fc:	08007fb8 	.word	0x08007fb8
 8004300:	08007fbc 	.word	0x08007fbc
 8004304:	08007fc0 	.word	0x08007fc0
	...

08004310 <thread>:
 8004310:	7800      	ldrb	r0, [r0, #0]
 8004312:	f7ff bd3d 	b.w	8003d90 <test_emit_token>
 8004316:	bf00      	nop
	...

08004320 <thd2_execute>:
 8004320:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004322:	4f2b      	ldr	r7, [pc, #172]	; (80043d0 <thd2_execute+0xb0>)
 8004324:	4e2b      	ldr	r6, [pc, #172]	; (80043d4 <thd2_execute+0xb4>)
 8004326:	69bb      	ldr	r3, [r7, #24]
 8004328:	4d2b      	ldr	r5, [pc, #172]	; (80043d8 <thd2_execute+0xb8>)
 800432a:	689a      	ldr	r2, [r3, #8]
 800432c:	4b2b      	ldr	r3, [pc, #172]	; (80043dc <thd2_execute+0xbc>)
 800432e:	6870      	ldr	r0, [r6, #4]
 8004330:	4c2b      	ldr	r4, [pc, #172]	; (80043e0 <thd2_execute+0xc0>)
 8004332:	b083      	sub	sp, #12
 8004334:	3a04      	subs	r2, #4
 8004336:	9300      	str	r3, [sp, #0]
 8004338:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800433c:	462b      	mov	r3, r5
 800433e:	f7fd fb27 	bl	8001990 <chThdCreateStatic>
 8004342:	69bb      	ldr	r3, [r7, #24]
 8004344:	4927      	ldr	r1, [pc, #156]	; (80043e4 <thd2_execute+0xc4>)
 8004346:	689a      	ldr	r2, [r3, #8]
 8004348:	6833      	ldr	r3, [r6, #0]
 800434a:	6060      	str	r0, [r4, #4]
 800434c:	9100      	str	r1, [sp, #0]
 800434e:	3a05      	subs	r2, #5
 8004350:	4618      	mov	r0, r3
 8004352:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004356:	462b      	mov	r3, r5
 8004358:	f7fd fb1a 	bl	8001990 <chThdCreateStatic>
 800435c:	69ba      	ldr	r2, [r7, #24]
 800435e:	6933      	ldr	r3, [r6, #16]
 8004360:	6892      	ldr	r2, [r2, #8]
 8004362:	4921      	ldr	r1, [pc, #132]	; (80043e8 <thd2_execute+0xc8>)
 8004364:	6020      	str	r0, [r4, #0]
 8004366:	9100      	str	r1, [sp, #0]
 8004368:	3a01      	subs	r2, #1
 800436a:	4618      	mov	r0, r3
 800436c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004370:	462b      	mov	r3, r5
 8004372:	f7fd fb0d 	bl	8001990 <chThdCreateStatic>
 8004376:	69ba      	ldr	r2, [r7, #24]
 8004378:	68f3      	ldr	r3, [r6, #12]
 800437a:	6892      	ldr	r2, [r2, #8]
 800437c:	491b      	ldr	r1, [pc, #108]	; (80043ec <thd2_execute+0xcc>)
 800437e:	6120      	str	r0, [r4, #16]
 8004380:	9100      	str	r1, [sp, #0]
 8004382:	3a02      	subs	r2, #2
 8004384:	4618      	mov	r0, r3
 8004386:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800438a:	462b      	mov	r3, r5
 800438c:	f7fd fb00 	bl	8001990 <chThdCreateStatic>
 8004390:	2320      	movs	r3, #32
 8004392:	60e0      	str	r0, [r4, #12]
 8004394:	f383 8811 	msr	BASEPRI, r3
 8004398:	69bb      	ldr	r3, [r7, #24]
 800439a:	68b0      	ldr	r0, [r6, #8]
 800439c:	689a      	ldr	r2, [r3, #8]
 800439e:	4b14      	ldr	r3, [pc, #80]	; (80043f0 <thd2_execute+0xd0>)
 80043a0:	9300      	str	r3, [sp, #0]
 80043a2:	3a03      	subs	r2, #3
 80043a4:	462b      	mov	r3, r5
 80043a6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80043aa:	f7fd fac9 	bl	8001940 <chThdCreateI>
 80043ae:	2300      	movs	r3, #0
 80043b0:	60a0      	str	r0, [r4, #8]
 80043b2:	f383 8811 	msr	BASEPRI, r3
 80043b6:	68a0      	ldr	r0, [r4, #8]
 80043b8:	f7fd fb1a 	bl	80019f0 <chThdStart>
 80043bc:	f7ff fd68 	bl	8003e90 <test_wait_threads>
 80043c0:	490c      	ldr	r1, [pc, #48]	; (80043f4 <thd2_execute+0xd4>)
 80043c2:	2001      	movs	r0, #1
 80043c4:	b003      	add	sp, #12
 80043c6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80043ca:	f7ff bd09 	b.w	8003de0 <_test_assert_sequence>
 80043ce:	bf00      	nop
 80043d0:	20000ce8 	.word	0x20000ce8
 80043d4:	08007ec0 	.word	0x08007ec0
 80043d8:	08004311 	.word	0x08004311
 80043dc:	08007fb0 	.word	0x08007fb0
 80043e0:	20001654 	.word	0x20001654
 80043e4:	08007fc4 	.word	0x08007fc4
 80043e8:	08007fbc 	.word	0x08007fbc
 80043ec:	08007fb8 	.word	0x08007fb8
 80043f0:	08007fb4 	.word	0x08007fb4
 80043f4:	08007fc0 	.word	0x08007fc0
	...

08004400 <thd3_execute>:
 8004400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004402:	4e49      	ldr	r6, [pc, #292]	; (8004528 <thd3_execute+0x128>)
 8004404:	69b3      	ldr	r3, [r6, #24]
 8004406:	689c      	ldr	r4, [r3, #8]
 8004408:	1c65      	adds	r5, r4, #1
 800440a:	4628      	mov	r0, r5
 800440c:	f7fd fb00 	bl	8001a10 <chThdSetPriority>
 8004410:	1b01      	subs	r1, r0, r4
 8004412:	fab1 f181 	clz	r1, r1
 8004416:	4607      	mov	r7, r0
 8004418:	0949      	lsrs	r1, r1, #5
 800441a:	2001      	movs	r0, #1
 800441c:	f7ff fcc8 	bl	8003db0 <_test_assert>
 8004420:	b100      	cbz	r0, 8004424 <thd3_execute+0x24>
 8004422:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004424:	69b3      	ldr	r3, [r6, #24]
 8004426:	6899      	ldr	r1, [r3, #8]
 8004428:	1b49      	subs	r1, r1, r5
 800442a:	fab1 f181 	clz	r1, r1
 800442e:	2002      	movs	r0, #2
 8004430:	0949      	lsrs	r1, r1, #5
 8004432:	f7ff fcbd 	bl	8003db0 <_test_assert>
 8004436:	2800      	cmp	r0, #0
 8004438:	d1f3      	bne.n	8004422 <thd3_execute+0x22>
 800443a:	4638      	mov	r0, r7
 800443c:	f7fd fae8 	bl	8001a10 <chThdSetPriority>
 8004440:	1a29      	subs	r1, r5, r0
 8004442:	fab1 f181 	clz	r1, r1
 8004446:	0949      	lsrs	r1, r1, #5
 8004448:	2003      	movs	r0, #3
 800444a:	f7ff fcb1 	bl	8003db0 <_test_assert>
 800444e:	2800      	cmp	r0, #0
 8004450:	d1e7      	bne.n	8004422 <thd3_execute+0x22>
 8004452:	69b3      	ldr	r3, [r6, #24]
 8004454:	6899      	ldr	r1, [r3, #8]
 8004456:	1b09      	subs	r1, r1, r4
 8004458:	fab1 f181 	clz	r1, r1
 800445c:	2004      	movs	r0, #4
 800445e:	0949      	lsrs	r1, r1, #5
 8004460:	f7ff fca6 	bl	8003db0 <_test_assert>
 8004464:	2800      	cmp	r0, #0
 8004466:	d1dc      	bne.n	8004422 <thd3_execute+0x22>
 8004468:	2320      	movs	r3, #32
 800446a:	f383 8811 	msr	BASEPRI, r3
 800446e:	69b2      	ldr	r2, [r6, #24]
 8004470:	6893      	ldr	r3, [r2, #8]
 8004472:	3302      	adds	r3, #2
 8004474:	6093      	str	r3, [r2, #8]
 8004476:	f380 8811 	msr	BASEPRI, r0
 800447a:	69b3      	ldr	r3, [r6, #24]
 800447c:	6899      	ldr	r1, [r3, #8]
 800447e:	1ca7      	adds	r7, r4, #2
 8004480:	1bc9      	subs	r1, r1, r7
 8004482:	fab1 f181 	clz	r1, r1
 8004486:	0949      	lsrs	r1, r1, #5
 8004488:	2005      	movs	r0, #5
 800448a:	f7ff fc91 	bl	8003db0 <_test_assert>
 800448e:	2800      	cmp	r0, #0
 8004490:	d1c7      	bne.n	8004422 <thd3_execute+0x22>
 8004492:	4628      	mov	r0, r5
 8004494:	f7fd fabc 	bl	8001a10 <chThdSetPriority>
 8004498:	1b01      	subs	r1, r0, r4
 800449a:	fab1 f181 	clz	r1, r1
 800449e:	0949      	lsrs	r1, r1, #5
 80044a0:	2006      	movs	r0, #6
 80044a2:	f7ff fc85 	bl	8003db0 <_test_assert>
 80044a6:	2800      	cmp	r0, #0
 80044a8:	d1bb      	bne.n	8004422 <thd3_execute+0x22>
 80044aa:	69b3      	ldr	r3, [r6, #24]
 80044ac:	6899      	ldr	r1, [r3, #8]
 80044ae:	1bc9      	subs	r1, r1, r7
 80044b0:	fab1 f181 	clz	r1, r1
 80044b4:	0949      	lsrs	r1, r1, #5
 80044b6:	2007      	movs	r0, #7
 80044b8:	f7ff fc7a 	bl	8003db0 <_test_assert>
 80044bc:	2800      	cmp	r0, #0
 80044be:	d1b0      	bne.n	8004422 <thd3_execute+0x22>
 80044c0:	69b3      	ldr	r3, [r6, #24]
 80044c2:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80044c4:	1b4f      	subs	r7, r1, r5
 80044c6:	4279      	negs	r1, r7
 80044c8:	4179      	adcs	r1, r7
 80044ca:	2008      	movs	r0, #8
 80044cc:	f7ff fc70 	bl	8003db0 <_test_assert>
 80044d0:	2800      	cmp	r0, #0
 80044d2:	d1a6      	bne.n	8004422 <thd3_execute+0x22>
 80044d4:	1ce7      	adds	r7, r4, #3
 80044d6:	4638      	mov	r0, r7
 80044d8:	f7fd fa9a 	bl	8001a10 <chThdSetPriority>
 80044dc:	1a28      	subs	r0, r5, r0
 80044de:	4241      	negs	r1, r0
 80044e0:	4141      	adcs	r1, r0
 80044e2:	2009      	movs	r0, #9
 80044e4:	f7ff fc64 	bl	8003db0 <_test_assert>
 80044e8:	2800      	cmp	r0, #0
 80044ea:	d19a      	bne.n	8004422 <thd3_execute+0x22>
 80044ec:	69b3      	ldr	r3, [r6, #24]
 80044ee:	6899      	ldr	r1, [r3, #8]
 80044f0:	1bca      	subs	r2, r1, r7
 80044f2:	4251      	negs	r1, r2
 80044f4:	4151      	adcs	r1, r2
 80044f6:	200a      	movs	r0, #10
 80044f8:	f7ff fc5a 	bl	8003db0 <_test_assert>
 80044fc:	2800      	cmp	r0, #0
 80044fe:	d190      	bne.n	8004422 <thd3_execute+0x22>
 8004500:	69b3      	ldr	r3, [r6, #24]
 8004502:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8004504:	1bcb      	subs	r3, r1, r7
 8004506:	4259      	negs	r1, r3
 8004508:	4159      	adcs	r1, r3
 800450a:	200b      	movs	r0, #11
 800450c:	f7ff fc50 	bl	8003db0 <_test_assert>
 8004510:	2800      	cmp	r0, #0
 8004512:	d186      	bne.n	8004422 <thd3_execute+0x22>
 8004514:	2320      	movs	r3, #32
 8004516:	f383 8811 	msr	BASEPRI, r3
 800451a:	69b3      	ldr	r3, [r6, #24]
 800451c:	609c      	str	r4, [r3, #8]
 800451e:	63dc      	str	r4, [r3, #60]	; 0x3c
 8004520:	f380 8811 	msr	BASEPRI, r0
 8004524:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004526:	bf00      	nop
 8004528:	20000ce8 	.word	0x20000ce8
 800452c:	00000000 	.word	0x00000000

08004530 <thd4_execute>:
 8004530:	b570      	push	{r4, r5, r6, lr}
 8004532:	f7ff fcc5 	bl	8003ec0 <test_wait_tick>
 8004536:	2620      	movs	r6, #32
 8004538:	f386 8811 	msr	BASEPRI, r6
 800453c:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8004540:	2300      	movs	r3, #0
 8004542:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8004544:	f383 8811 	msr	BASEPRI, r3
 8004548:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800454c:	f7fd fa88 	bl	8001a60 <chThdSleep>
 8004550:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8004554:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8004558:	2001      	movs	r0, #1
 800455a:	f7ff fc69 	bl	8003e30 <_test_assert_time_window>
 800455e:	b100      	cbz	r0, 8004562 <thd4_execute+0x32>
 8004560:	bd70      	pop	{r4, r5, r6, pc}
 8004562:	f386 8811 	msr	BASEPRI, r6
 8004566:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8004568:	f380 8811 	msr	BASEPRI, r0
 800456c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004570:	f7fd fa76 	bl	8001a60 <chThdSleep>
 8004574:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8004578:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 800457c:	2002      	movs	r0, #2
 800457e:	f7ff fc57 	bl	8003e30 <_test_assert_time_window>
 8004582:	2800      	cmp	r0, #0
 8004584:	d1ec      	bne.n	8004560 <thd4_execute+0x30>
 8004586:	f386 8811 	msr	BASEPRI, r6
 800458a:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 800458c:	f380 8811 	msr	BASEPRI, r0
 8004590:	f242 7010 	movw	r0, #10000	; 0x2710
 8004594:	f7fd fa64 	bl	8001a60 <chThdSleep>
 8004598:	f504 521c 	add.w	r2, r4, #9984	; 0x2700
 800459c:	4611      	mov	r1, r2
 800459e:	3110      	adds	r1, #16
 80045a0:	3213      	adds	r2, #19
 80045a2:	2003      	movs	r0, #3
 80045a4:	f7ff fc44 	bl	8003e30 <_test_assert_time_window>
 80045a8:	2800      	cmp	r0, #0
 80045aa:	d1d9      	bne.n	8004560 <thd4_execute+0x30>
 80045ac:	f386 8811 	msr	BASEPRI, r6
 80045b0:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 80045b2:	f380 8811 	msr	BASEPRI, r0
 80045b6:	f504 757a 	add.w	r5, r4, #1000	; 0x3e8
 80045ba:	4628      	mov	r0, r5
 80045bc:	f7fd fa60 	bl	8001a80 <chThdSleepUntil>
 80045c0:	4629      	mov	r1, r5
 80045c2:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 80045c6:	2004      	movs	r0, #4
 80045c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80045cc:	f7ff bc30 	b.w	8003e30 <_test_assert_time_window>

080045d0 <sem1_execute>:
 80045d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80045d4:	4e48      	ldr	r6, [pc, #288]	; (80046f8 <sem1_execute+0x128>)
 80045d6:	4f49      	ldr	r7, [pc, #292]	; (80046fc <sem1_execute+0x12c>)
 80045d8:	69b3      	ldr	r3, [r6, #24]
 80045da:	f8d7 8000 	ldr.w	r8, [r7]
 80045de:	689a      	ldr	r2, [r3, #8]
 80045e0:	f8df 913c 	ldr.w	r9, [pc, #316]	; 8004720 <sem1_execute+0x150>
 80045e4:	4b46      	ldr	r3, [pc, #280]	; (8004700 <sem1_execute+0x130>)
 80045e6:	4d47      	ldr	r5, [pc, #284]	; (8004704 <sem1_execute+0x134>)
 80045e8:	4c47      	ldr	r4, [pc, #284]	; (8004708 <sem1_execute+0x138>)
 80045ea:	b083      	sub	sp, #12
 80045ec:	3205      	adds	r2, #5
 80045ee:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80045f2:	f8cd 9000 	str.w	r9, [sp]
 80045f6:	4640      	mov	r0, r8
 80045f8:	f7fd f9ca 	bl	8001990 <chThdCreateStatic>
 80045fc:	69b3      	ldr	r3, [r6, #24]
 80045fe:	6879      	ldr	r1, [r7, #4]
 8004600:	689a      	ldr	r2, [r3, #8]
 8004602:	4b42      	ldr	r3, [pc, #264]	; (800470c <sem1_execute+0x13c>)
 8004604:	6028      	str	r0, [r5, #0]
 8004606:	3201      	adds	r2, #1
 8004608:	4608      	mov	r0, r1
 800460a:	9300      	str	r3, [sp, #0]
 800460c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004610:	4b3b      	ldr	r3, [pc, #236]	; (8004700 <sem1_execute+0x130>)
 8004612:	f7fd f9bd 	bl	8001990 <chThdCreateStatic>
 8004616:	69b3      	ldr	r3, [r6, #24]
 8004618:	68b9      	ldr	r1, [r7, #8]
 800461a:	689a      	ldr	r2, [r3, #8]
 800461c:	4b3c      	ldr	r3, [pc, #240]	; (8004710 <sem1_execute+0x140>)
 800461e:	6068      	str	r0, [r5, #4]
 8004620:	3203      	adds	r2, #3
 8004622:	4608      	mov	r0, r1
 8004624:	9300      	str	r3, [sp, #0]
 8004626:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800462a:	4b35      	ldr	r3, [pc, #212]	; (8004700 <sem1_execute+0x130>)
 800462c:	f7fd f9b0 	bl	8001990 <chThdCreateStatic>
 8004630:	69b3      	ldr	r3, [r6, #24]
 8004632:	68f9      	ldr	r1, [r7, #12]
 8004634:	689a      	ldr	r2, [r3, #8]
 8004636:	4b37      	ldr	r3, [pc, #220]	; (8004714 <sem1_execute+0x144>)
 8004638:	60a8      	str	r0, [r5, #8]
 800463a:	3204      	adds	r2, #4
 800463c:	4608      	mov	r0, r1
 800463e:	9300      	str	r3, [sp, #0]
 8004640:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004644:	4b2e      	ldr	r3, [pc, #184]	; (8004700 <sem1_execute+0x130>)
 8004646:	f7fd f9a3 	bl	8001990 <chThdCreateStatic>
 800464a:	69b3      	ldr	r3, [r6, #24]
 800464c:	6939      	ldr	r1, [r7, #16]
 800464e:	689a      	ldr	r2, [r3, #8]
 8004650:	4b31      	ldr	r3, [pc, #196]	; (8004718 <sem1_execute+0x148>)
 8004652:	60e8      	str	r0, [r5, #12]
 8004654:	3202      	adds	r2, #2
 8004656:	4608      	mov	r0, r1
 8004658:	9300      	str	r3, [sp, #0]
 800465a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800465e:	4b28      	ldr	r3, [pc, #160]	; (8004700 <sem1_execute+0x130>)
 8004660:	f7fd f996 	bl	8001990 <chThdCreateStatic>
 8004664:	6128      	str	r0, [r5, #16]
 8004666:	4620      	mov	r0, r4
 8004668:	f7fd fc52 	bl	8001f10 <chSemSignal>
 800466c:	4620      	mov	r0, r4
 800466e:	f7fd fc4f 	bl	8001f10 <chSemSignal>
 8004672:	4620      	mov	r0, r4
 8004674:	f7fd fc4c 	bl	8001f10 <chSemSignal>
 8004678:	4620      	mov	r0, r4
 800467a:	f7fd fc49 	bl	8001f10 <chSemSignal>
 800467e:	4620      	mov	r0, r4
 8004680:	f7fd fc46 	bl	8001f10 <chSemSignal>
 8004684:	f7ff fc04 	bl	8003e90 <test_wait_threads>
 8004688:	4924      	ldr	r1, [pc, #144]	; (800471c <sem1_execute+0x14c>)
 800468a:	2001      	movs	r0, #1
 800468c:	f7ff fba8 	bl	8003de0 <_test_assert_sequence>
 8004690:	b110      	cbz	r0, 8004698 <sem1_execute+0xc8>
 8004692:	b003      	add	sp, #12
 8004694:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004698:	69b2      	ldr	r2, [r6, #24]
 800469a:	4b19      	ldr	r3, [pc, #100]	; (8004700 <sem1_execute+0x130>)
 800469c:	6892      	ldr	r2, [r2, #8]
 800469e:	f8cd 9000 	str.w	r9, [sp]
 80046a2:	4607      	mov	r7, r0
 80046a4:	3205      	adds	r2, #5
 80046a6:	4640      	mov	r0, r8
 80046a8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80046ac:	f7fd f970 	bl	8001990 <chThdCreateStatic>
 80046b0:	2620      	movs	r6, #32
 80046b2:	6028      	str	r0, [r5, #0]
 80046b4:	f386 8811 	msr	BASEPRI, r6
 80046b8:	2102      	movs	r1, #2
 80046ba:	4620      	mov	r0, r4
 80046bc:	f7fd fc58 	bl	8001f70 <chSemAddCounterI>
 80046c0:	f7fd f906 	bl	80018d0 <chSchRescheduleS>
 80046c4:	f387 8811 	msr	BASEPRI, r7
 80046c8:	f7ff fbe2 	bl	8003e90 <test_wait_threads>
 80046cc:	f386 8811 	msr	BASEPRI, r6
 80046d0:	68a1      	ldr	r1, [r4, #8]
 80046d2:	f1a1 0101 	sub.w	r1, r1, #1
 80046d6:	fab1 f181 	clz	r1, r1
 80046da:	2002      	movs	r0, #2
 80046dc:	0949      	lsrs	r1, r1, #5
 80046de:	f7ff fb67 	bl	8003db0 <_test_assert>
 80046e2:	b920      	cbnz	r0, 80046ee <sem1_execute+0x11e>
 80046e4:	f380 8811 	msr	BASEPRI, r0
 80046e8:	b003      	add	sp, #12
 80046ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80046ee:	f387 8811 	msr	BASEPRI, r7
 80046f2:	b003      	add	sp, #12
 80046f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80046f8:	20000ce8 	.word	0x20000ce8
 80046fc:	08007ec0 	.word	0x08007ec0
 8004700:	08004751 	.word	0x08004751
 8004704:	20001654 	.word	0x20001654
 8004708:	20000800 	.word	0x20000800
 800470c:	08007fb8 	.word	0x08007fb8
 8004710:	08007fb4 	.word	0x08007fb4
 8004714:	08007fb0 	.word	0x08007fb0
 8004718:	08007fc4 	.word	0x08007fc4
 800471c:	08007fc0 	.word	0x08007fc0
 8004720:	08007fbc 	.word	0x08007fbc
	...

08004730 <thread3>:
 8004730:	b510      	push	{r4, lr}
 8004732:	4c04      	ldr	r4, [pc, #16]	; (8004744 <thread3+0x14>)
 8004734:	4620      	mov	r0, r4
 8004736:	f7fd fb7b 	bl	8001e30 <chSemWait>
 800473a:	4620      	mov	r0, r4
 800473c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004740:	f7fd bbe6 	b.w	8001f10 <chSemSignal>
 8004744:	20000800 	.word	0x20000800
	...

08004750 <thread1>:
 8004750:	b510      	push	{r4, lr}
 8004752:	4604      	mov	r4, r0
 8004754:	4803      	ldr	r0, [pc, #12]	; (8004764 <thread1+0x14>)
 8004756:	f7fd fb6b 	bl	8001e30 <chSemWait>
 800475a:	7820      	ldrb	r0, [r4, #0]
 800475c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004760:	f7ff bb16 	b.w	8003d90 <test_emit_token>
 8004764:	20000800 	.word	0x20000800
	...

08004770 <sem1_setup>:
 8004770:	2100      	movs	r1, #0
 8004772:	4801      	ldr	r0, [pc, #4]	; (8004778 <sem1_setup+0x8>)
 8004774:	f7fd bb2c 	b.w	8001dd0 <chSemObjectInit>
 8004778:	20000800 	.word	0x20000800
 800477c:	00000000 	.word	0x00000000

08004780 <sem2_setup>:
 8004780:	f7ff bff6 	b.w	8004770 <sem1_setup>
	...

08004790 <sem3_setup>:
 8004790:	f7ff bfee 	b.w	8004770 <sem1_setup>
	...

080047a0 <thread2>:
 80047a0:	b508      	push	{r3, lr}
 80047a2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80047a6:	f7fd f95b 	bl	8001a60 <chThdSleep>
 80047aa:	2320      	movs	r3, #32
 80047ac:	f383 8811 	msr	BASEPRI, r3
 80047b0:	4804      	ldr	r0, [pc, #16]	; (80047c4 <thread2+0x24>)
 80047b2:	f7fd fbcd 	bl	8001f50 <chSemSignalI>
 80047b6:	f7fd f88b 	bl	80018d0 <chSchRescheduleS>
 80047ba:	2300      	movs	r3, #0
 80047bc:	f383 8811 	msr	BASEPRI, r3
 80047c0:	bd08      	pop	{r3, pc}
 80047c2:	bf00      	nop
 80047c4:	20000800 	.word	0x20000800
	...

080047d0 <sem2_execute>:
 80047d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80047d2:	4c4e      	ldr	r4, [pc, #312]	; (800490c <sem2_execute+0x13c>)
 80047d4:	b083      	sub	sp, #12
 80047d6:	2100      	movs	r1, #0
 80047d8:	4620      	mov	r0, r4
 80047da:	f7fd fb51 	bl	8001e80 <chSemWaitTimeout>
 80047de:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 80047e2:	fab1 f181 	clz	r1, r1
 80047e6:	0949      	lsrs	r1, r1, #5
 80047e8:	2001      	movs	r0, #1
 80047ea:	f7ff fae1 	bl	8003db0 <_test_assert>
 80047ee:	b108      	cbz	r0, 80047f4 <sem2_execute+0x24>
 80047f0:	b003      	add	sp, #12
 80047f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80047f4:	6821      	ldr	r1, [r4, #0]
 80047f6:	1b09      	subs	r1, r1, r4
 80047f8:	fab1 f181 	clz	r1, r1
 80047fc:	2002      	movs	r0, #2
 80047fe:	0949      	lsrs	r1, r1, #5
 8004800:	f7ff fad6 	bl	8003db0 <_test_assert>
 8004804:	2800      	cmp	r0, #0
 8004806:	d1f3      	bne.n	80047f0 <sem2_execute+0x20>
 8004808:	68a1      	ldr	r1, [r4, #8]
 800480a:	fab1 f181 	clz	r1, r1
 800480e:	0949      	lsrs	r1, r1, #5
 8004810:	2003      	movs	r0, #3
 8004812:	f7ff facd 	bl	8003db0 <_test_assert>
 8004816:	2800      	cmp	r0, #0
 8004818:	d1ea      	bne.n	80047f0 <sem2_execute+0x20>
 800481a:	4b3d      	ldr	r3, [pc, #244]	; (8004910 <sem2_execute+0x140>)
 800481c:	4a3d      	ldr	r2, [pc, #244]	; (8004914 <sem2_execute+0x144>)
 800481e:	699b      	ldr	r3, [r3, #24]
 8004820:	6811      	ldr	r1, [r2, #0]
 8004822:	689a      	ldr	r2, [r3, #8]
 8004824:	4b3c      	ldr	r3, [pc, #240]	; (8004918 <sem2_execute+0x148>)
 8004826:	9000      	str	r0, [sp, #0]
 8004828:	3a01      	subs	r2, #1
 800482a:	4608      	mov	r0, r1
 800482c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004830:	f7fd f8ae 	bl	8001990 <chThdCreateStatic>
 8004834:	4b39      	ldr	r3, [pc, #228]	; (800491c <sem2_execute+0x14c>)
 8004836:	f241 3188 	movw	r1, #5000	; 0x1388
 800483a:	6018      	str	r0, [r3, #0]
 800483c:	4620      	mov	r0, r4
 800483e:	f7fd fb1f 	bl	8001e80 <chSemWaitTimeout>
 8004842:	4605      	mov	r5, r0
 8004844:	f7ff fb24 	bl	8003e90 <test_wait_threads>
 8004848:	fab5 f185 	clz	r1, r5
 800484c:	0949      	lsrs	r1, r1, #5
 800484e:	2004      	movs	r0, #4
 8004850:	f7ff faae 	bl	8003db0 <_test_assert>
 8004854:	2800      	cmp	r0, #0
 8004856:	d1cb      	bne.n	80047f0 <sem2_execute+0x20>
 8004858:	6821      	ldr	r1, [r4, #0]
 800485a:	1b09      	subs	r1, r1, r4
 800485c:	fab1 f181 	clz	r1, r1
 8004860:	2005      	movs	r0, #5
 8004862:	0949      	lsrs	r1, r1, #5
 8004864:	f7ff faa4 	bl	8003db0 <_test_assert>
 8004868:	2800      	cmp	r0, #0
 800486a:	d1c1      	bne.n	80047f0 <sem2_execute+0x20>
 800486c:	68a1      	ldr	r1, [r4, #8]
 800486e:	fab1 f181 	clz	r1, r1
 8004872:	0949      	lsrs	r1, r1, #5
 8004874:	2006      	movs	r0, #6
 8004876:	f7ff fa9b 	bl	8003db0 <_test_assert>
 800487a:	4605      	mov	r5, r0
 800487c:	2800      	cmp	r0, #0
 800487e:	d1b7      	bne.n	80047f0 <sem2_execute+0x20>
 8004880:	f7ff fb1e 	bl	8003ec0 <test_wait_tick>
 8004884:	2320      	movs	r3, #32
 8004886:	f383 8811 	msr	BASEPRI, r3
 800488a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800488e:	6a5f      	ldr	r7, [r3, #36]	; 0x24
 8004890:	f385 8811 	msr	BASEPRI, r5
 8004894:	2541      	movs	r5, #65	; 0x41
 8004896:	4626      	mov	r6, r4
 8004898:	4628      	mov	r0, r5
 800489a:	f7ff fa79 	bl	8003d90 <test_emit_token>
 800489e:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 80048a2:	4630      	mov	r0, r6
 80048a4:	f7fd faec 	bl	8001e80 <chSemWaitTimeout>
 80048a8:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 80048ac:	fab1 f181 	clz	r1, r1
 80048b0:	0949      	lsrs	r1, r1, #5
 80048b2:	2007      	movs	r0, #7
 80048b4:	f7ff fa7c 	bl	8003db0 <_test_assert>
 80048b8:	2800      	cmp	r0, #0
 80048ba:	d199      	bne.n	80047f0 <sem2_execute+0x20>
 80048bc:	6821      	ldr	r1, [r4, #0]
 80048be:	1b09      	subs	r1, r1, r4
 80048c0:	fab1 f181 	clz	r1, r1
 80048c4:	2008      	movs	r0, #8
 80048c6:	0949      	lsrs	r1, r1, #5
 80048c8:	f7ff fa72 	bl	8003db0 <_test_assert>
 80048cc:	2800      	cmp	r0, #0
 80048ce:	d18f      	bne.n	80047f0 <sem2_execute+0x20>
 80048d0:	68a1      	ldr	r1, [r4, #8]
 80048d2:	fab1 f181 	clz	r1, r1
 80048d6:	0949      	lsrs	r1, r1, #5
 80048d8:	2009      	movs	r0, #9
 80048da:	f7ff fa69 	bl	8003db0 <_test_assert>
 80048de:	3501      	adds	r5, #1
 80048e0:	b2ed      	uxtb	r5, r5
 80048e2:	2800      	cmp	r0, #0
 80048e4:	d184      	bne.n	80047f0 <sem2_execute+0x20>
 80048e6:	2d46      	cmp	r5, #70	; 0x46
 80048e8:	d1d6      	bne.n	8004898 <sem2_execute+0xc8>
 80048ea:	490d      	ldr	r1, [pc, #52]	; (8004920 <sem2_execute+0x150>)
 80048ec:	200a      	movs	r0, #10
 80048ee:	f7ff fa77 	bl	8003de0 <_test_assert_sequence>
 80048f2:	2800      	cmp	r0, #0
 80048f4:	f47f af7c 	bne.w	80047f0 <sem2_execute+0x20>
 80048f8:	f607 12d8 	addw	r2, r7, #2520	; 0x9d8
 80048fc:	f607 11c4 	addw	r1, r7, #2500	; 0x9c4
 8004900:	200b      	movs	r0, #11
 8004902:	b003      	add	sp, #12
 8004904:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004908:	f7ff ba92 	b.w	8003e30 <_test_assert_time_window>
 800490c:	20000800 	.word	0x20000800
 8004910:	20000ce8 	.word	0x20000ce8
 8004914:	08007ec0 	.word	0x08007ec0
 8004918:	080047a1 	.word	0x080047a1
 800491c:	20001654 	.word	0x20001654
 8004920:	08007fc0 	.word	0x08007fc0
	...

08004930 <sem3_execute>:
 8004930:	b510      	push	{r4, lr}
 8004932:	4b20      	ldr	r3, [pc, #128]	; (80049b4 <sem3_execute+0x84>)
 8004934:	4a20      	ldr	r2, [pc, #128]	; (80049b8 <sem3_execute+0x88>)
 8004936:	699b      	ldr	r3, [r3, #24]
 8004938:	6810      	ldr	r0, [r2, #0]
 800493a:	689a      	ldr	r2, [r3, #8]
 800493c:	4b1f      	ldr	r3, [pc, #124]	; (80049bc <sem3_execute+0x8c>)
 800493e:	4c20      	ldr	r4, [pc, #128]	; (80049c0 <sem3_execute+0x90>)
 8004940:	b082      	sub	sp, #8
 8004942:	2100      	movs	r1, #0
 8004944:	3201      	adds	r2, #1
 8004946:	9100      	str	r1, [sp, #0]
 8004948:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800494c:	f7fd f820 	bl	8001990 <chThdCreateStatic>
 8004950:	4b1c      	ldr	r3, [pc, #112]	; (80049c4 <sem3_execute+0x94>)
 8004952:	4621      	mov	r1, r4
 8004954:	6018      	str	r0, [r3, #0]
 8004956:	4620      	mov	r0, r4
 8004958:	f7fd fb22 	bl	8001fa0 <chSemSignalWait>
 800495c:	6821      	ldr	r1, [r4, #0]
 800495e:	1b09      	subs	r1, r1, r4
 8004960:	fab1 f181 	clz	r1, r1
 8004964:	2001      	movs	r0, #1
 8004966:	0949      	lsrs	r1, r1, #5
 8004968:	f7ff fa22 	bl	8003db0 <_test_assert>
 800496c:	b108      	cbz	r0, 8004972 <sem3_execute+0x42>
 800496e:	b002      	add	sp, #8
 8004970:	bd10      	pop	{r4, pc}
 8004972:	68a1      	ldr	r1, [r4, #8]
 8004974:	fab1 f181 	clz	r1, r1
 8004978:	0949      	lsrs	r1, r1, #5
 800497a:	2002      	movs	r0, #2
 800497c:	f7ff fa18 	bl	8003db0 <_test_assert>
 8004980:	2800      	cmp	r0, #0
 8004982:	d1f4      	bne.n	800496e <sem3_execute+0x3e>
 8004984:	4621      	mov	r1, r4
 8004986:	4620      	mov	r0, r4
 8004988:	f7fd fb0a 	bl	8001fa0 <chSemSignalWait>
 800498c:	6821      	ldr	r1, [r4, #0]
 800498e:	1b09      	subs	r1, r1, r4
 8004990:	fab1 f181 	clz	r1, r1
 8004994:	2003      	movs	r0, #3
 8004996:	0949      	lsrs	r1, r1, #5
 8004998:	f7ff fa0a 	bl	8003db0 <_test_assert>
 800499c:	2800      	cmp	r0, #0
 800499e:	d1e6      	bne.n	800496e <sem3_execute+0x3e>
 80049a0:	68a1      	ldr	r1, [r4, #8]
 80049a2:	fab1 f181 	clz	r1, r1
 80049a6:	0949      	lsrs	r1, r1, #5
 80049a8:	2004      	movs	r0, #4
 80049aa:	b002      	add	sp, #8
 80049ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80049b0:	f7ff b9fe 	b.w	8003db0 <_test_assert>
 80049b4:	20000ce8 	.word	0x20000ce8
 80049b8:	08007ec0 	.word	0x08007ec0
 80049bc:	08004731 	.word	0x08004731
 80049c0:	20000800 	.word	0x20000800
 80049c4:	20001654 	.word	0x20001654
	...

080049d0 <thread4>:
 80049d0:	b508      	push	{r3, lr}
 80049d2:	2220      	movs	r2, #32
 80049d4:	f382 8811 	msr	BASEPRI, r2
 80049d8:	6883      	ldr	r3, [r0, #8]
 80049da:	2b00      	cmp	r3, #0
 80049dc:	dd05      	ble.n	80049ea <thread4+0x1a>
 80049de:	f7fc ff77 	bl	80018d0 <chSchRescheduleS>
 80049e2:	2300      	movs	r3, #0
 80049e4:	f383 8811 	msr	BASEPRI, r3
 80049e8:	bd08      	pop	{r3, pc}
 80049ea:	f7fd fab1 	bl	8001f50 <chSemSignalI>
 80049ee:	f7fc ff6f 	bl	80018d0 <chSchRescheduleS>
 80049f2:	2300      	movs	r3, #0
 80049f4:	f383 8811 	msr	BASEPRI, r3
 80049f8:	bd08      	pop	{r3, pc}
 80049fa:	bf00      	nop
 80049fc:	0000      	movs	r0, r0
	...

08004a00 <sem4_execute>:
 8004a00:	b570      	push	{r4, r5, r6, lr}
 8004a02:	b086      	sub	sp, #24
 8004a04:	a803      	add	r0, sp, #12
 8004a06:	2100      	movs	r1, #0
 8004a08:	f7fd f9e2 	bl	8001dd0 <chSemObjectInit>
 8004a0c:	a803      	add	r0, sp, #12
 8004a0e:	2100      	movs	r1, #0
 8004a10:	f7fd f9fe 	bl	8001e10 <chSemReset>
 8004a14:	2520      	movs	r5, #32
 8004a16:	f385 8811 	msr	BASEPRI, r5
 8004a1a:	9905      	ldr	r1, [sp, #20]
 8004a1c:	2900      	cmp	r1, #0
 8004a1e:	bfcc      	ite	gt
 8004a20:	2100      	movgt	r1, #0
 8004a22:	2101      	movle	r1, #1
 8004a24:	2001      	movs	r0, #1
 8004a26:	f7ff f9c3 	bl	8003db0 <_test_assert>
 8004a2a:	b120      	cbz	r0, 8004a36 <sem4_execute+0x36>
 8004a2c:	2300      	movs	r3, #0
 8004a2e:	f383 8811 	msr	BASEPRI, r3
 8004a32:	b006      	add	sp, #24
 8004a34:	bd70      	pop	{r4, r5, r6, pc}
 8004a36:	4604      	mov	r4, r0
 8004a38:	f380 8811 	msr	BASEPRI, r0
 8004a3c:	4b40      	ldr	r3, [pc, #256]	; (8004b40 <sem4_execute+0x140>)
 8004a3e:	4a41      	ldr	r2, [pc, #260]	; (8004b44 <sem4_execute+0x144>)
 8004a40:	699b      	ldr	r3, [r3, #24]
 8004a42:	6810      	ldr	r0, [r2, #0]
 8004a44:	689a      	ldr	r2, [r3, #8]
 8004a46:	4b40      	ldr	r3, [pc, #256]	; (8004b48 <sem4_execute+0x148>)
 8004a48:	a903      	add	r1, sp, #12
 8004a4a:	9100      	str	r1, [sp, #0]
 8004a4c:	3a01      	subs	r2, #1
 8004a4e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a52:	f7fc ff9d 	bl	8001990 <chThdCreateStatic>
 8004a56:	4b3d      	ldr	r3, [pc, #244]	; (8004b4c <sem4_execute+0x14c>)
 8004a58:	6018      	str	r0, [r3, #0]
 8004a5a:	a803      	add	r0, sp, #12
 8004a5c:	f7fd f9e8 	bl	8001e30 <chSemWait>
 8004a60:	f385 8811 	msr	BASEPRI, r5
 8004a64:	9905      	ldr	r1, [sp, #20]
 8004a66:	2900      	cmp	r1, #0
 8004a68:	bfcc      	ite	gt
 8004a6a:	2100      	movgt	r1, #0
 8004a6c:	2101      	movle	r1, #1
 8004a6e:	2002      	movs	r0, #2
 8004a70:	f7ff f99e 	bl	8003db0 <_test_assert>
 8004a74:	b118      	cbz	r0, 8004a7e <sem4_execute+0x7e>
 8004a76:	f384 8811 	msr	BASEPRI, r4
 8004a7a:	b006      	add	sp, #24
 8004a7c:	bd70      	pop	{r4, r5, r6, pc}
 8004a7e:	f380 8811 	msr	BASEPRI, r0
 8004a82:	f385 8811 	msr	BASEPRI, r5
 8004a86:	9b05      	ldr	r3, [sp, #20]
 8004a88:	2b00      	cmp	r3, #0
 8004a8a:	dd24      	ble.n	8004ad6 <sem4_execute+0xd6>
 8004a8c:	f7fc ff20 	bl	80018d0 <chSchRescheduleS>
 8004a90:	2400      	movs	r4, #0
 8004a92:	f384 8811 	msr	BASEPRI, r4
 8004a96:	2620      	movs	r6, #32
 8004a98:	f386 8811 	msr	BASEPRI, r6
 8004a9c:	9905      	ldr	r1, [sp, #20]
 8004a9e:	42a1      	cmp	r1, r4
 8004aa0:	f04f 0003 	mov.w	r0, #3
 8004aa4:	bfd4      	ite	le
 8004aa6:	2100      	movle	r1, #0
 8004aa8:	2101      	movgt	r1, #1
 8004aaa:	f7ff f981 	bl	8003db0 <_test_assert>
 8004aae:	4605      	mov	r5, r0
 8004ab0:	2800      	cmp	r0, #0
 8004ab2:	d1e0      	bne.n	8004a76 <sem4_execute+0x76>
 8004ab4:	f380 8811 	msr	BASEPRI, r0
 8004ab8:	f386 8811 	msr	BASEPRI, r6
 8004abc:	9905      	ldr	r1, [sp, #20]
 8004abe:	f1a1 0101 	sub.w	r1, r1, #1
 8004ac2:	fab1 f181 	clz	r1, r1
 8004ac6:	2004      	movs	r0, #4
 8004ac8:	0949      	lsrs	r1, r1, #5
 8004aca:	f7ff f971 	bl	8003db0 <_test_assert>
 8004ace:	b130      	cbz	r0, 8004ade <sem4_execute+0xde>
 8004ad0:	f385 8811 	msr	BASEPRI, r5
 8004ad4:	e7ad      	b.n	8004a32 <sem4_execute+0x32>
 8004ad6:	a803      	add	r0, sp, #12
 8004ad8:	f7fd fa3a 	bl	8001f50 <chSemSignalI>
 8004adc:	e7d6      	b.n	8004a8c <sem4_execute+0x8c>
 8004ade:	f380 8811 	msr	BASEPRI, r0
 8004ae2:	f386 8811 	msr	BASEPRI, r6
 8004ae6:	9b05      	ldr	r3, [sp, #20]
 8004ae8:	2b00      	cmp	r3, #0
 8004aea:	dd25      	ble.n	8004b38 <sem4_execute+0x138>
 8004aec:	f7fc fef0 	bl	80018d0 <chSchRescheduleS>
 8004af0:	2400      	movs	r4, #0
 8004af2:	f384 8811 	msr	BASEPRI, r4
 8004af6:	2620      	movs	r6, #32
 8004af8:	f386 8811 	msr	BASEPRI, r6
 8004afc:	9905      	ldr	r1, [sp, #20]
 8004afe:	42a1      	cmp	r1, r4
 8004b00:	f04f 0003 	mov.w	r0, #3
 8004b04:	bfd4      	ite	le
 8004b06:	2100      	movle	r1, #0
 8004b08:	2101      	movgt	r1, #1
 8004b0a:	f7ff f951 	bl	8003db0 <_test_assert>
 8004b0e:	4605      	mov	r5, r0
 8004b10:	2800      	cmp	r0, #0
 8004b12:	d1b0      	bne.n	8004a76 <sem4_execute+0x76>
 8004b14:	f380 8811 	msr	BASEPRI, r0
 8004b18:	f386 8811 	msr	BASEPRI, r6
 8004b1c:	9905      	ldr	r1, [sp, #20]
 8004b1e:	f1a1 0101 	sub.w	r1, r1, #1
 8004b22:	fab1 f181 	clz	r1, r1
 8004b26:	2005      	movs	r0, #5
 8004b28:	0949      	lsrs	r1, r1, #5
 8004b2a:	f7ff f941 	bl	8003db0 <_test_assert>
 8004b2e:	2800      	cmp	r0, #0
 8004b30:	d1ce      	bne.n	8004ad0 <sem4_execute+0xd0>
 8004b32:	f380 8811 	msr	BASEPRI, r0
 8004b36:	e77c      	b.n	8004a32 <sem4_execute+0x32>
 8004b38:	a803      	add	r0, sp, #12
 8004b3a:	f7fd fa09 	bl	8001f50 <chSemSignalI>
 8004b3e:	e7d5      	b.n	8004aec <sem4_execute+0xec>
 8004b40:	20000ce8 	.word	0x20000ce8
 8004b44:	08007ec0 	.word	0x08007ec0
 8004b48:	080049d1 	.word	0x080049d1
 8004b4c:	20001654 	.word	0x20001654

08004b50 <mtx1_execute>:
 8004b50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b52:	4f2b      	ldr	r7, [pc, #172]	; (8004c00 <mtx1_execute+0xb0>)
 8004b54:	4e2b      	ldr	r6, [pc, #172]	; (8004c04 <mtx1_execute+0xb4>)
 8004b56:	69bb      	ldr	r3, [r7, #24]
 8004b58:	482b      	ldr	r0, [pc, #172]	; (8004c08 <mtx1_execute+0xb8>)
 8004b5a:	689c      	ldr	r4, [r3, #8]
 8004b5c:	4d2b      	ldr	r5, [pc, #172]	; (8004c0c <mtx1_execute+0xbc>)
 8004b5e:	b083      	sub	sp, #12
 8004b60:	f7fd face 	bl	8002100 <chMtxLock>
 8004b64:	4b2a      	ldr	r3, [pc, #168]	; (8004c10 <mtx1_execute+0xc0>)
 8004b66:	9300      	str	r3, [sp, #0]
 8004b68:	1c62      	adds	r2, r4, #1
 8004b6a:	4b2a      	ldr	r3, [pc, #168]	; (8004c14 <mtx1_execute+0xc4>)
 8004b6c:	6830      	ldr	r0, [r6, #0]
 8004b6e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b72:	f7fc ff0d 	bl	8001990 <chThdCreateStatic>
 8004b76:	6871      	ldr	r1, [r6, #4]
 8004b78:	4b27      	ldr	r3, [pc, #156]	; (8004c18 <mtx1_execute+0xc8>)
 8004b7a:	6028      	str	r0, [r5, #0]
 8004b7c:	1ca2      	adds	r2, r4, #2
 8004b7e:	4608      	mov	r0, r1
 8004b80:	9300      	str	r3, [sp, #0]
 8004b82:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b86:	4b23      	ldr	r3, [pc, #140]	; (8004c14 <mtx1_execute+0xc4>)
 8004b88:	f7fc ff02 	bl	8001990 <chThdCreateStatic>
 8004b8c:	68b1      	ldr	r1, [r6, #8]
 8004b8e:	4b23      	ldr	r3, [pc, #140]	; (8004c1c <mtx1_execute+0xcc>)
 8004b90:	6068      	str	r0, [r5, #4]
 8004b92:	1ce2      	adds	r2, r4, #3
 8004b94:	4608      	mov	r0, r1
 8004b96:	9300      	str	r3, [sp, #0]
 8004b98:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b9c:	4b1d      	ldr	r3, [pc, #116]	; (8004c14 <mtx1_execute+0xc4>)
 8004b9e:	f7fc fef7 	bl	8001990 <chThdCreateStatic>
 8004ba2:	68f1      	ldr	r1, [r6, #12]
 8004ba4:	4b1e      	ldr	r3, [pc, #120]	; (8004c20 <mtx1_execute+0xd0>)
 8004ba6:	60a8      	str	r0, [r5, #8]
 8004ba8:	1d22      	adds	r2, r4, #4
 8004baa:	4608      	mov	r0, r1
 8004bac:	9300      	str	r3, [sp, #0]
 8004bae:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004bb2:	4b18      	ldr	r3, [pc, #96]	; (8004c14 <mtx1_execute+0xc4>)
 8004bb4:	f7fc feec 	bl	8001990 <chThdCreateStatic>
 8004bb8:	6931      	ldr	r1, [r6, #16]
 8004bba:	4b1a      	ldr	r3, [pc, #104]	; (8004c24 <mtx1_execute+0xd4>)
 8004bbc:	60e8      	str	r0, [r5, #12]
 8004bbe:	1d62      	adds	r2, r4, #5
 8004bc0:	4608      	mov	r0, r1
 8004bc2:	9300      	str	r3, [sp, #0]
 8004bc4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004bc8:	4b12      	ldr	r3, [pc, #72]	; (8004c14 <mtx1_execute+0xc4>)
 8004bca:	f7fc fee1 	bl	8001990 <chThdCreateStatic>
 8004bce:	6128      	str	r0, [r5, #16]
 8004bd0:	480d      	ldr	r0, [pc, #52]	; (8004c08 <mtx1_execute+0xb8>)
 8004bd2:	f7fd fabd 	bl	8002150 <chMtxUnlock>
 8004bd6:	f7ff f95b 	bl	8003e90 <test_wait_threads>
 8004bda:	69bb      	ldr	r3, [r7, #24]
 8004bdc:	6899      	ldr	r1, [r3, #8]
 8004bde:	1b09      	subs	r1, r1, r4
 8004be0:	fab1 f181 	clz	r1, r1
 8004be4:	2001      	movs	r0, #1
 8004be6:	0949      	lsrs	r1, r1, #5
 8004be8:	f7ff f8e2 	bl	8003db0 <_test_assert>
 8004bec:	b108      	cbz	r0, 8004bf2 <mtx1_execute+0xa2>
 8004bee:	b003      	add	sp, #12
 8004bf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004bf2:	490d      	ldr	r1, [pc, #52]	; (8004c28 <mtx1_execute+0xd8>)
 8004bf4:	2002      	movs	r0, #2
 8004bf6:	b003      	add	sp, #12
 8004bf8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004bfc:	f7ff b8f0 	b.w	8003de0 <_test_assert_sequence>
 8004c00:	20000ce8 	.word	0x20000ce8
 8004c04:	08007ec0 	.word	0x08007ec0
 8004c08:	20000814 	.word	0x20000814
 8004c0c:	20001654 	.word	0x20001654
 8004c10:	08007fc4 	.word	0x08007fc4
 8004c14:	08004c31 	.word	0x08004c31
 8004c18:	08007fb0 	.word	0x08007fb0
 8004c1c:	08007fb4 	.word	0x08007fb4
 8004c20:	08007fb8 	.word	0x08007fb8
 8004c24:	08007fbc 	.word	0x08007fbc
 8004c28:	08007fc0 	.word	0x08007fc0
 8004c2c:	00000000 	.word	0x00000000

08004c30 <thread1>:
 8004c30:	b538      	push	{r3, r4, r5, lr}
 8004c32:	4c06      	ldr	r4, [pc, #24]	; (8004c4c <thread1+0x1c>)
 8004c34:	4605      	mov	r5, r0
 8004c36:	4620      	mov	r0, r4
 8004c38:	f7fd fa62 	bl	8002100 <chMtxLock>
 8004c3c:	7828      	ldrb	r0, [r5, #0]
 8004c3e:	f7ff f8a7 	bl	8003d90 <test_emit_token>
 8004c42:	4620      	mov	r0, r4
 8004c44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004c48:	f7fd ba82 	b.w	8002150 <chMtxUnlock>
 8004c4c:	20000814 	.word	0x20000814

08004c50 <thread12>:
 8004c50:	b538      	push	{r3, r4, r5, lr}
 8004c52:	4c06      	ldr	r4, [pc, #24]	; (8004c6c <thread12+0x1c>)
 8004c54:	4605      	mov	r5, r0
 8004c56:	4620      	mov	r0, r4
 8004c58:	f7fd fa52 	bl	8002100 <chMtxLock>
 8004c5c:	7828      	ldrb	r0, [r5, #0]
 8004c5e:	f7ff f897 	bl	8003d90 <test_emit_token>
 8004c62:	4620      	mov	r0, r4
 8004c64:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004c68:	f7fd ba72 	b.w	8002150 <chMtxUnlock>
 8004c6c:	20000824 	.word	0x20000824

08004c70 <mtx1_setup>:
 8004c70:	4801      	ldr	r0, [pc, #4]	; (8004c78 <mtx1_setup+0x8>)
 8004c72:	f7fd b9cd 	b.w	8002010 <chMtxObjectInit>
 8004c76:	bf00      	nop
 8004c78:	20000814 	.word	0x20000814
 8004c7c:	00000000 	.word	0x00000000

08004c80 <mtx5_setup>:
 8004c80:	f7ff bff6 	b.w	8004c70 <mtx1_setup>
	...

08004c90 <mtx4_setup>:
 8004c90:	b508      	push	{r3, lr}
 8004c92:	4804      	ldr	r0, [pc, #16]	; (8004ca4 <mtx4_setup+0x14>)
 8004c94:	f7fd f9bc 	bl	8002010 <chMtxObjectInit>
 8004c98:	4803      	ldr	r0, [pc, #12]	; (8004ca8 <mtx4_setup+0x18>)
 8004c9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004c9e:	f7fd b9b7 	b.w	8002010 <chMtxObjectInit>
 8004ca2:	bf00      	nop
 8004ca4:	20000814 	.word	0x20000814
 8004ca8:	20000824 	.word	0x20000824
 8004cac:	00000000 	.word	0x00000000

08004cb0 <thread4b>:
 8004cb0:	b510      	push	{r4, lr}
 8004cb2:	4c06      	ldr	r4, [pc, #24]	; (8004ccc <thread4b+0x1c>)
 8004cb4:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8004cb8:	f7fc fed2 	bl	8001a60 <chThdSleep>
 8004cbc:	4620      	mov	r0, r4
 8004cbe:	f7fd fa1f 	bl	8002100 <chMtxLock>
 8004cc2:	4620      	mov	r0, r4
 8004cc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004cc8:	f7fd ba42 	b.w	8002150 <chMtxUnlock>
 8004ccc:	20000814 	.word	0x20000814

08004cd0 <thread4a>:
 8004cd0:	b510      	push	{r4, lr}
 8004cd2:	4c06      	ldr	r4, [pc, #24]	; (8004cec <thread4a+0x1c>)
 8004cd4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004cd8:	f7fc fec2 	bl	8001a60 <chThdSleep>
 8004cdc:	4620      	mov	r0, r4
 8004cde:	f7fd fa0f 	bl	8002100 <chMtxLock>
 8004ce2:	4620      	mov	r0, r4
 8004ce4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004ce8:	f7fd ba32 	b.w	8002150 <chMtxUnlock>
 8004cec:	20000824 	.word	0x20000824

08004cf0 <mtx4_execute>:
 8004cf0:	e92d 46f0 	stmdb	sp!, {r4, r5, r6, r7, r9, sl, lr}
 8004cf4:	4d8d      	ldr	r5, [pc, #564]	; (8004f2c <mtx4_execute+0x23c>)
 8004cf6:	4e8e      	ldr	r6, [pc, #568]	; (8004f30 <mtx4_execute+0x240>)
 8004cf8:	69ab      	ldr	r3, [r5, #24]
 8004cfa:	6830      	ldr	r0, [r6, #0]
 8004cfc:	689c      	ldr	r4, [r3, #8]
 8004cfe:	4b8d      	ldr	r3, [pc, #564]	; (8004f34 <mtx4_execute+0x244>)
 8004d00:	4f8d      	ldr	r7, [pc, #564]	; (8004f38 <mtx4_execute+0x248>)
 8004d02:	b085      	sub	sp, #20
 8004d04:	f104 0901 	add.w	r9, r4, #1
 8004d08:	9300      	str	r3, [sp, #0]
 8004d0a:	464a      	mov	r2, r9
 8004d0c:	4b8b      	ldr	r3, [pc, #556]	; (8004f3c <mtx4_execute+0x24c>)
 8004d0e:	9003      	str	r0, [sp, #12]
 8004d10:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d14:	f7fc fe3c 	bl	8001990 <chThdCreateStatic>
 8004d18:	6876      	ldr	r6, [r6, #4]
 8004d1a:	4b89      	ldr	r3, [pc, #548]	; (8004f40 <mtx4_execute+0x250>)
 8004d1c:	6038      	str	r0, [r7, #0]
 8004d1e:	f104 0a02 	add.w	sl, r4, #2
 8004d22:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d26:	4652      	mov	r2, sl
 8004d28:	9300      	str	r3, [sp, #0]
 8004d2a:	4630      	mov	r0, r6
 8004d2c:	4b85      	ldr	r3, [pc, #532]	; (8004f44 <mtx4_execute+0x254>)
 8004d2e:	f7fc fe2f 	bl	8001990 <chThdCreateStatic>
 8004d32:	6078      	str	r0, [r7, #4]
 8004d34:	4884      	ldr	r0, [pc, #528]	; (8004f48 <mtx4_execute+0x258>)
 8004d36:	f7fd f9e3 	bl	8002100 <chMtxLock>
 8004d3a:	69ab      	ldr	r3, [r5, #24]
 8004d3c:	6899      	ldr	r1, [r3, #8]
 8004d3e:	1b09      	subs	r1, r1, r4
 8004d40:	fab1 f181 	clz	r1, r1
 8004d44:	2001      	movs	r0, #1
 8004d46:	0949      	lsrs	r1, r1, #5
 8004d48:	f7ff f832 	bl	8003db0 <_test_assert>
 8004d4c:	b110      	cbz	r0, 8004d54 <mtx4_execute+0x64>
 8004d4e:	b005      	add	sp, #20
 8004d50:	e8bd 86f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, sl, pc}
 8004d54:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004d58:	f7fc fe82 	bl	8001a60 <chThdSleep>
 8004d5c:	69ab      	ldr	r3, [r5, #24]
 8004d5e:	6899      	ldr	r1, [r3, #8]
 8004d60:	eba1 0109 	sub.w	r1, r1, r9
 8004d64:	fab1 f181 	clz	r1, r1
 8004d68:	2002      	movs	r0, #2
 8004d6a:	0949      	lsrs	r1, r1, #5
 8004d6c:	f7ff f820 	bl	8003db0 <_test_assert>
 8004d70:	2800      	cmp	r0, #0
 8004d72:	d1ec      	bne.n	8004d4e <mtx4_execute+0x5e>
 8004d74:	4875      	ldr	r0, [pc, #468]	; (8004f4c <mtx4_execute+0x25c>)
 8004d76:	f7fd f9c3 	bl	8002100 <chMtxLock>
 8004d7a:	69ab      	ldr	r3, [r5, #24]
 8004d7c:	6899      	ldr	r1, [r3, #8]
 8004d7e:	eba1 0109 	sub.w	r1, r1, r9
 8004d82:	fab1 f181 	clz	r1, r1
 8004d86:	2003      	movs	r0, #3
 8004d88:	0949      	lsrs	r1, r1, #5
 8004d8a:	f7ff f811 	bl	8003db0 <_test_assert>
 8004d8e:	2800      	cmp	r0, #0
 8004d90:	d1dd      	bne.n	8004d4e <mtx4_execute+0x5e>
 8004d92:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004d96:	f7fc fe63 	bl	8001a60 <chThdSleep>
 8004d9a:	69ab      	ldr	r3, [r5, #24]
 8004d9c:	6899      	ldr	r1, [r3, #8]
 8004d9e:	eba1 010a 	sub.w	r1, r1, sl
 8004da2:	fab1 f181 	clz	r1, r1
 8004da6:	2004      	movs	r0, #4
 8004da8:	0949      	lsrs	r1, r1, #5
 8004daa:	f7ff f801 	bl	8003db0 <_test_assert>
 8004dae:	2800      	cmp	r0, #0
 8004db0:	d1cd      	bne.n	8004d4e <mtx4_execute+0x5e>
 8004db2:	4866      	ldr	r0, [pc, #408]	; (8004f4c <mtx4_execute+0x25c>)
 8004db4:	f7fd f9cc 	bl	8002150 <chMtxUnlock>
 8004db8:	69ab      	ldr	r3, [r5, #24]
 8004dba:	6899      	ldr	r1, [r3, #8]
 8004dbc:	eba1 0109 	sub.w	r1, r1, r9
 8004dc0:	fab1 f181 	clz	r1, r1
 8004dc4:	2005      	movs	r0, #5
 8004dc6:	0949      	lsrs	r1, r1, #5
 8004dc8:	f7fe fff2 	bl	8003db0 <_test_assert>
 8004dcc:	2800      	cmp	r0, #0
 8004dce:	d1be      	bne.n	8004d4e <mtx4_execute+0x5e>
 8004dd0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004dd4:	f7fc fe44 	bl	8001a60 <chThdSleep>
 8004dd8:	69ab      	ldr	r3, [r5, #24]
 8004dda:	6899      	ldr	r1, [r3, #8]
 8004ddc:	eba1 0109 	sub.w	r1, r1, r9
 8004de0:	fab1 f181 	clz	r1, r1
 8004de4:	2006      	movs	r0, #6
 8004de6:	0949      	lsrs	r1, r1, #5
 8004de8:	f7fe ffe2 	bl	8003db0 <_test_assert>
 8004dec:	2800      	cmp	r0, #0
 8004dee:	d1ae      	bne.n	8004d4e <mtx4_execute+0x5e>
 8004df0:	f7fd fa06 	bl	8002200 <chMtxUnlockAll>
 8004df4:	69ab      	ldr	r3, [r5, #24]
 8004df6:	6899      	ldr	r1, [r3, #8]
 8004df8:	1b09      	subs	r1, r1, r4
 8004dfa:	fab1 f181 	clz	r1, r1
 8004dfe:	2007      	movs	r0, #7
 8004e00:	0949      	lsrs	r1, r1, #5
 8004e02:	f7fe ffd5 	bl	8003db0 <_test_assert>
 8004e06:	2800      	cmp	r0, #0
 8004e08:	d1a1      	bne.n	8004d4e <mtx4_execute+0x5e>
 8004e0a:	f7ff f841 	bl	8003e90 <test_wait_threads>
 8004e0e:	4b50      	ldr	r3, [pc, #320]	; (8004f50 <mtx4_execute+0x260>)
 8004e10:	9300      	str	r3, [sp, #0]
 8004e12:	464a      	mov	r2, r9
 8004e14:	4b49      	ldr	r3, [pc, #292]	; (8004f3c <mtx4_execute+0x24c>)
 8004e16:	9803      	ldr	r0, [sp, #12]
 8004e18:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004e1c:	f7fc fdb8 	bl	8001990 <chThdCreateStatic>
 8004e20:	4b4c      	ldr	r3, [pc, #304]	; (8004f54 <mtx4_execute+0x264>)
 8004e22:	6038      	str	r0, [r7, #0]
 8004e24:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004e28:	9300      	str	r3, [sp, #0]
 8004e2a:	4652      	mov	r2, sl
 8004e2c:	4b45      	ldr	r3, [pc, #276]	; (8004f44 <mtx4_execute+0x254>)
 8004e2e:	4630      	mov	r0, r6
 8004e30:	f7fc fdae 	bl	8001990 <chThdCreateStatic>
 8004e34:	6078      	str	r0, [r7, #4]
 8004e36:	4844      	ldr	r0, [pc, #272]	; (8004f48 <mtx4_execute+0x258>)
 8004e38:	f7fd f962 	bl	8002100 <chMtxLock>
 8004e3c:	69ab      	ldr	r3, [r5, #24]
 8004e3e:	6899      	ldr	r1, [r3, #8]
 8004e40:	1b0b      	subs	r3, r1, r4
 8004e42:	4259      	negs	r1, r3
 8004e44:	4159      	adcs	r1, r3
 8004e46:	2008      	movs	r0, #8
 8004e48:	f7fe ffb2 	bl	8003db0 <_test_assert>
 8004e4c:	2800      	cmp	r0, #0
 8004e4e:	f47f af7e 	bne.w	8004d4e <mtx4_execute+0x5e>
 8004e52:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004e56:	f7fc fe03 	bl	8001a60 <chThdSleep>
 8004e5a:	69ab      	ldr	r3, [r5, #24]
 8004e5c:	6899      	ldr	r1, [r3, #8]
 8004e5e:	eba1 0e09 	sub.w	lr, r1, r9
 8004e62:	f1de 0100 	rsbs	r1, lr, #0
 8004e66:	eb41 010e 	adc.w	r1, r1, lr
 8004e6a:	2009      	movs	r0, #9
 8004e6c:	f7fe ffa0 	bl	8003db0 <_test_assert>
 8004e70:	2800      	cmp	r0, #0
 8004e72:	f47f af6c 	bne.w	8004d4e <mtx4_execute+0x5e>
 8004e76:	4835      	ldr	r0, [pc, #212]	; (8004f4c <mtx4_execute+0x25c>)
 8004e78:	f7fd f942 	bl	8002100 <chMtxLock>
 8004e7c:	69ab      	ldr	r3, [r5, #24]
 8004e7e:	6899      	ldr	r1, [r3, #8]
 8004e80:	eba1 0c09 	sub.w	ip, r1, r9
 8004e84:	f1dc 0100 	rsbs	r1, ip, #0
 8004e88:	eb41 010c 	adc.w	r1, r1, ip
 8004e8c:	200a      	movs	r0, #10
 8004e8e:	f7fe ff8f 	bl	8003db0 <_test_assert>
 8004e92:	2800      	cmp	r0, #0
 8004e94:	f47f af5b 	bne.w	8004d4e <mtx4_execute+0x5e>
 8004e98:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004e9c:	f7fc fde0 	bl	8001a60 <chThdSleep>
 8004ea0:	69ab      	ldr	r3, [r5, #24]
 8004ea2:	6899      	ldr	r1, [r3, #8]
 8004ea4:	eba1 070a 	sub.w	r7, r1, sl
 8004ea8:	4279      	negs	r1, r7
 8004eaa:	4179      	adcs	r1, r7
 8004eac:	200b      	movs	r0, #11
 8004eae:	f7fe ff7f 	bl	8003db0 <_test_assert>
 8004eb2:	4606      	mov	r6, r0
 8004eb4:	2800      	cmp	r0, #0
 8004eb6:	f47f af4a 	bne.w	8004d4e <mtx4_execute+0x5e>
 8004eba:	2320      	movs	r3, #32
 8004ebc:	f383 8811 	msr	BASEPRI, r3
 8004ec0:	4822      	ldr	r0, [pc, #136]	; (8004f4c <mtx4_execute+0x25c>)
 8004ec2:	f7fd f975 	bl	80021b0 <chMtxUnlockS>
 8004ec6:	f7fc fd03 	bl	80018d0 <chSchRescheduleS>
 8004eca:	f386 8811 	msr	BASEPRI, r6
 8004ece:	69ab      	ldr	r3, [r5, #24]
 8004ed0:	6899      	ldr	r1, [r3, #8]
 8004ed2:	eba1 0609 	sub.w	r6, r1, r9
 8004ed6:	4271      	negs	r1, r6
 8004ed8:	4171      	adcs	r1, r6
 8004eda:	200c      	movs	r0, #12
 8004edc:	f7fe ff68 	bl	8003db0 <_test_assert>
 8004ee0:	2800      	cmp	r0, #0
 8004ee2:	f47f af34 	bne.w	8004d4e <mtx4_execute+0x5e>
 8004ee6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004eea:	f7fc fdb9 	bl	8001a60 <chThdSleep>
 8004eee:	69ab      	ldr	r3, [r5, #24]
 8004ef0:	6899      	ldr	r1, [r3, #8]
 8004ef2:	eba1 0209 	sub.w	r2, r1, r9
 8004ef6:	4251      	negs	r1, r2
 8004ef8:	4151      	adcs	r1, r2
 8004efa:	200d      	movs	r0, #13
 8004efc:	f7fe ff58 	bl	8003db0 <_test_assert>
 8004f00:	2800      	cmp	r0, #0
 8004f02:	f47f af24 	bne.w	8004d4e <mtx4_execute+0x5e>
 8004f06:	f7fd f97b 	bl	8002200 <chMtxUnlockAll>
 8004f0a:	69ab      	ldr	r3, [r5, #24]
 8004f0c:	6899      	ldr	r1, [r3, #8]
 8004f0e:	1b0b      	subs	r3, r1, r4
 8004f10:	4259      	negs	r1, r3
 8004f12:	4159      	adcs	r1, r3
 8004f14:	200e      	movs	r0, #14
 8004f16:	f7fe ff4b 	bl	8003db0 <_test_assert>
 8004f1a:	2800      	cmp	r0, #0
 8004f1c:	f47f af17 	bne.w	8004d4e <mtx4_execute+0x5e>
 8004f20:	b005      	add	sp, #20
 8004f22:	e8bd 46f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, sl, lr}
 8004f26:	f7fe bfb3 	b.w	8003e90 <test_wait_threads>
 8004f2a:	bf00      	nop
 8004f2c:	20000ce8 	.word	0x20000ce8
 8004f30:	08007ec0 	.word	0x08007ec0
 8004f34:	08007fb8 	.word	0x08007fb8
 8004f38:	20001654 	.word	0x20001654
 8004f3c:	08004cd1 	.word	0x08004cd1
 8004f40:	08007fbc 	.word	0x08007fbc
 8004f44:	08004cb1 	.word	0x08004cb1
 8004f48:	20000824 	.word	0x20000824
 8004f4c:	20000814 	.word	0x20000814
 8004f50:	08007fb0 	.word	0x08007fb0
 8004f54:	08007fb4 	.word	0x08007fb4
	...

08004f60 <mtx5_execute>:
 8004f60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004f62:	4d2b      	ldr	r5, [pc, #172]	; (8005010 <mtx5_execute+0xb0>)
 8004f64:	4c2b      	ldr	r4, [pc, #172]	; (8005014 <mtx5_execute+0xb4>)
 8004f66:	69ab      	ldr	r3, [r5, #24]
 8004f68:	4620      	mov	r0, r4
 8004f6a:	689e      	ldr	r6, [r3, #8]
 8004f6c:	f7fd f8d8 	bl	8002120 <chMtxTryLock>
 8004f70:	4601      	mov	r1, r0
 8004f72:	2001      	movs	r0, #1
 8004f74:	f7fe ff1c 	bl	8003db0 <_test_assert>
 8004f78:	b100      	cbz	r0, 8004f7c <mtx5_execute+0x1c>
 8004f7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004f7c:	4620      	mov	r0, r4
 8004f7e:	f7fd f8cf 	bl	8002120 <chMtxTryLock>
 8004f82:	f080 0101 	eor.w	r1, r0, #1
 8004f86:	b2c9      	uxtb	r1, r1
 8004f88:	2002      	movs	r0, #2
 8004f8a:	f7fe ff11 	bl	8003db0 <_test_assert>
 8004f8e:	4607      	mov	r7, r0
 8004f90:	2800      	cmp	r0, #0
 8004f92:	d1f2      	bne.n	8004f7a <mtx5_execute+0x1a>
 8004f94:	2320      	movs	r3, #32
 8004f96:	f383 8811 	msr	BASEPRI, r3
 8004f9a:	4620      	mov	r0, r4
 8004f9c:	f7fd f908 	bl	80021b0 <chMtxUnlockS>
 8004fa0:	f387 8811 	msr	BASEPRI, r7
 8004fa4:	6821      	ldr	r1, [r4, #0]
 8004fa6:	1b09      	subs	r1, r1, r4
 8004fa8:	fab1 f181 	clz	r1, r1
 8004fac:	2003      	movs	r0, #3
 8004fae:	0949      	lsrs	r1, r1, #5
 8004fb0:	f7fe fefe 	bl	8003db0 <_test_assert>
 8004fb4:	2800      	cmp	r0, #0
 8004fb6:	d1e0      	bne.n	8004f7a <mtx5_execute+0x1a>
 8004fb8:	68a1      	ldr	r1, [r4, #8]
 8004fba:	fab1 f181 	clz	r1, r1
 8004fbe:	0949      	lsrs	r1, r1, #5
 8004fc0:	2004      	movs	r0, #4
 8004fc2:	f7fe fef5 	bl	8003db0 <_test_assert>
 8004fc6:	2800      	cmp	r0, #0
 8004fc8:	d1d7      	bne.n	8004f7a <mtx5_execute+0x1a>
 8004fca:	69ab      	ldr	r3, [r5, #24]
 8004fcc:	6899      	ldr	r1, [r3, #8]
 8004fce:	1b89      	subs	r1, r1, r6
 8004fd0:	fab1 f181 	clz	r1, r1
 8004fd4:	2005      	movs	r0, #5
 8004fd6:	0949      	lsrs	r1, r1, #5
 8004fd8:	f7fe feea 	bl	8003db0 <_test_assert>
 8004fdc:	2800      	cmp	r0, #0
 8004fde:	d1cc      	bne.n	8004f7a <mtx5_execute+0x1a>
 8004fe0:	4620      	mov	r0, r4
 8004fe2:	f7fd f88d 	bl	8002100 <chMtxLock>
 8004fe6:	f7fd f90b 	bl	8002200 <chMtxUnlockAll>
 8004fea:	6821      	ldr	r1, [r4, #0]
 8004fec:	1b09      	subs	r1, r1, r4
 8004fee:	fab1 f181 	clz	r1, r1
 8004ff2:	2006      	movs	r0, #6
 8004ff4:	0949      	lsrs	r1, r1, #5
 8004ff6:	f7fe fedb 	bl	8003db0 <_test_assert>
 8004ffa:	2800      	cmp	r0, #0
 8004ffc:	d1bd      	bne.n	8004f7a <mtx5_execute+0x1a>
 8004ffe:	68a1      	ldr	r1, [r4, #8]
 8005000:	fab1 f181 	clz	r1, r1
 8005004:	0949      	lsrs	r1, r1, #5
 8005006:	2007      	movs	r0, #7
 8005008:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800500c:	f7fe bed0 	b.w	8003db0 <_test_assert>
 8005010:	20000ce8 	.word	0x20000ce8
 8005014:	20000814 	.word	0x20000814
	...

08005020 <mtx6_execute>:
 8005020:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005022:	4b2f      	ldr	r3, [pc, #188]	; (80050e0 <mtx6_execute+0xc0>)
 8005024:	4f2f      	ldr	r7, [pc, #188]	; (80050e4 <mtx6_execute+0xc4>)
 8005026:	699b      	ldr	r3, [r3, #24]
 8005028:	4d2f      	ldr	r5, [pc, #188]	; (80050e8 <mtx6_execute+0xc8>)
 800502a:	689e      	ldr	r6, [r3, #8]
 800502c:	4b2f      	ldr	r3, [pc, #188]	; (80050ec <mtx6_execute+0xcc>)
 800502e:	6838      	ldr	r0, [r7, #0]
 8005030:	4c2f      	ldr	r4, [pc, #188]	; (80050f0 <mtx6_execute+0xd0>)
 8005032:	b083      	sub	sp, #12
 8005034:	1c72      	adds	r2, r6, #1
 8005036:	9300      	str	r3, [sp, #0]
 8005038:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800503c:	462b      	mov	r3, r5
 800503e:	f7fc fca7 	bl	8001990 <chThdCreateStatic>
 8005042:	687b      	ldr	r3, [r7, #4]
 8005044:	492b      	ldr	r1, [pc, #172]	; (80050f4 <mtx6_execute+0xd4>)
 8005046:	6020      	str	r0, [r4, #0]
 8005048:	1cb2      	adds	r2, r6, #2
 800504a:	9100      	str	r1, [sp, #0]
 800504c:	4618      	mov	r0, r3
 800504e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005052:	462b      	mov	r3, r5
 8005054:	f7fc fc9c 	bl	8001990 <chThdCreateStatic>
 8005058:	68bb      	ldr	r3, [r7, #8]
 800505a:	4927      	ldr	r1, [pc, #156]	; (80050f8 <mtx6_execute+0xd8>)
 800505c:	6060      	str	r0, [r4, #4]
 800505e:	1cf2      	adds	r2, r6, #3
 8005060:	9100      	str	r1, [sp, #0]
 8005062:	4618      	mov	r0, r3
 8005064:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005068:	462b      	mov	r3, r5
 800506a:	f7fc fc91 	bl	8001990 <chThdCreateStatic>
 800506e:	68fb      	ldr	r3, [r7, #12]
 8005070:	4922      	ldr	r1, [pc, #136]	; (80050fc <mtx6_execute+0xdc>)
 8005072:	60a0      	str	r0, [r4, #8]
 8005074:	1d32      	adds	r2, r6, #4
 8005076:	9100      	str	r1, [sp, #0]
 8005078:	4618      	mov	r0, r3
 800507a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800507e:	462b      	mov	r3, r5
 8005080:	f7fc fc86 	bl	8001990 <chThdCreateStatic>
 8005084:	693b      	ldr	r3, [r7, #16]
 8005086:	491e      	ldr	r1, [pc, #120]	; (8005100 <mtx6_execute+0xe0>)
 8005088:	60e0      	str	r0, [r4, #12]
 800508a:	1d72      	adds	r2, r6, #5
 800508c:	9100      	str	r1, [sp, #0]
 800508e:	4618      	mov	r0, r3
 8005090:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005094:	462b      	mov	r3, r5
 8005096:	f7fc fc7b 	bl	8001990 <chThdCreateStatic>
 800509a:	2320      	movs	r3, #32
 800509c:	6120      	str	r0, [r4, #16]
 800509e:	f383 8811 	msr	BASEPRI, r3
 80050a2:	4c18      	ldr	r4, [pc, #96]	; (8005104 <mtx6_execute+0xe4>)
 80050a4:	4620      	mov	r0, r4
 80050a6:	f7fd f8fb 	bl	80022a0 <chCondSignalI>
 80050aa:	4620      	mov	r0, r4
 80050ac:	f7fd f8f8 	bl	80022a0 <chCondSignalI>
 80050b0:	4620      	mov	r0, r4
 80050b2:	f7fd f8f5 	bl	80022a0 <chCondSignalI>
 80050b6:	4620      	mov	r0, r4
 80050b8:	f7fd f8f2 	bl	80022a0 <chCondSignalI>
 80050bc:	4620      	mov	r0, r4
 80050be:	f7fd f8ef 	bl	80022a0 <chCondSignalI>
 80050c2:	f7fc fc05 	bl	80018d0 <chSchRescheduleS>
 80050c6:	2300      	movs	r3, #0
 80050c8:	f383 8811 	msr	BASEPRI, r3
 80050cc:	f7fe fee0 	bl	8003e90 <test_wait_threads>
 80050d0:	490d      	ldr	r1, [pc, #52]	; (8005108 <mtx6_execute+0xe8>)
 80050d2:	2001      	movs	r0, #1
 80050d4:	b003      	add	sp, #12
 80050d6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80050da:	f7fe be81 	b.w	8003de0 <_test_assert_sequence>
 80050de:	bf00      	nop
 80050e0:	20000ce8 	.word	0x20000ce8
 80050e4:	08007ec0 	.word	0x08007ec0
 80050e8:	08005111 	.word	0x08005111
 80050ec:	08007fc4 	.word	0x08007fc4
 80050f0:	20001654 	.word	0x20001654
 80050f4:	08007fb0 	.word	0x08007fb0
 80050f8:	08007fb4 	.word	0x08007fb4
 80050fc:	08007fb8 	.word	0x08007fb8
 8005100:	08007fbc 	.word	0x08007fbc
 8005104:	2000080c 	.word	0x2000080c
 8005108:	08007fc0 	.word	0x08007fc0
 800510c:	00000000 	.word	0x00000000

08005110 <thread10>:
 8005110:	b538      	push	{r3, r4, r5, lr}
 8005112:	4c08      	ldr	r4, [pc, #32]	; (8005134 <thread10+0x24>)
 8005114:	4605      	mov	r5, r0
 8005116:	4620      	mov	r0, r4
 8005118:	f7fc fff2 	bl	8002100 <chMtxLock>
 800511c:	4806      	ldr	r0, [pc, #24]	; (8005138 <thread10+0x28>)
 800511e:	f7fd f917 	bl	8002350 <chCondWait>
 8005122:	7828      	ldrb	r0, [r5, #0]
 8005124:	f7fe fe34 	bl	8003d90 <test_emit_token>
 8005128:	4620      	mov	r0, r4
 800512a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800512e:	f7fd b80f 	b.w	8002150 <chMtxUnlock>
 8005132:	bf00      	nop
 8005134:	20000814 	.word	0x20000814
 8005138:	2000080c 	.word	0x2000080c
 800513c:	00000000 	.word	0x00000000

08005140 <mtx6_setup>:
 8005140:	b508      	push	{r3, lr}
 8005142:	4804      	ldr	r0, [pc, #16]	; (8005154 <mtx6_setup+0x14>)
 8005144:	f7fd f88c 	bl	8002260 <chCondObjectInit>
 8005148:	4803      	ldr	r0, [pc, #12]	; (8005158 <mtx6_setup+0x18>)
 800514a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800514e:	f7fc bf5f 	b.w	8002010 <chMtxObjectInit>
 8005152:	bf00      	nop
 8005154:	2000080c 	.word	0x2000080c
 8005158:	20000814 	.word	0x20000814
 800515c:	00000000 	.word	0x00000000

08005160 <mtx7_setup>:
 8005160:	f7ff bfee 	b.w	8005140 <mtx6_setup>
	...

08005170 <mtx8_setup>:
 8005170:	b508      	push	{r3, lr}
 8005172:	4805      	ldr	r0, [pc, #20]	; (8005188 <mtx8_setup+0x18>)
 8005174:	f7fd f874 	bl	8002260 <chCondObjectInit>
 8005178:	4804      	ldr	r0, [pc, #16]	; (800518c <mtx8_setup+0x1c>)
 800517a:	f7fc ff49 	bl	8002010 <chMtxObjectInit>
 800517e:	4804      	ldr	r0, [pc, #16]	; (8005190 <mtx8_setup+0x20>)
 8005180:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005184:	f7fc bf44 	b.w	8002010 <chMtxObjectInit>
 8005188:	2000080c 	.word	0x2000080c
 800518c:	20000814 	.word	0x20000814
 8005190:	20000824 	.word	0x20000824
	...

080051a0 <mtx7_execute>:
 80051a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80051a2:	4b24      	ldr	r3, [pc, #144]	; (8005234 <mtx7_execute+0x94>)
 80051a4:	4f24      	ldr	r7, [pc, #144]	; (8005238 <mtx7_execute+0x98>)
 80051a6:	699b      	ldr	r3, [r3, #24]
 80051a8:	4d24      	ldr	r5, [pc, #144]	; (800523c <mtx7_execute+0x9c>)
 80051aa:	689e      	ldr	r6, [r3, #8]
 80051ac:	4b24      	ldr	r3, [pc, #144]	; (8005240 <mtx7_execute+0xa0>)
 80051ae:	6838      	ldr	r0, [r7, #0]
 80051b0:	4c24      	ldr	r4, [pc, #144]	; (8005244 <mtx7_execute+0xa4>)
 80051b2:	b083      	sub	sp, #12
 80051b4:	1c72      	adds	r2, r6, #1
 80051b6:	9300      	str	r3, [sp, #0]
 80051b8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80051bc:	462b      	mov	r3, r5
 80051be:	f7fc fbe7 	bl	8001990 <chThdCreateStatic>
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	4920      	ldr	r1, [pc, #128]	; (8005248 <mtx7_execute+0xa8>)
 80051c6:	6020      	str	r0, [r4, #0]
 80051c8:	1cb2      	adds	r2, r6, #2
 80051ca:	9100      	str	r1, [sp, #0]
 80051cc:	4618      	mov	r0, r3
 80051ce:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80051d2:	462b      	mov	r3, r5
 80051d4:	f7fc fbdc 	bl	8001990 <chThdCreateStatic>
 80051d8:	68bb      	ldr	r3, [r7, #8]
 80051da:	491c      	ldr	r1, [pc, #112]	; (800524c <mtx7_execute+0xac>)
 80051dc:	6060      	str	r0, [r4, #4]
 80051de:	1cf2      	adds	r2, r6, #3
 80051e0:	9100      	str	r1, [sp, #0]
 80051e2:	4618      	mov	r0, r3
 80051e4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80051e8:	462b      	mov	r3, r5
 80051ea:	f7fc fbd1 	bl	8001990 <chThdCreateStatic>
 80051ee:	68fb      	ldr	r3, [r7, #12]
 80051f0:	4917      	ldr	r1, [pc, #92]	; (8005250 <mtx7_execute+0xb0>)
 80051f2:	60a0      	str	r0, [r4, #8]
 80051f4:	1d32      	adds	r2, r6, #4
 80051f6:	9100      	str	r1, [sp, #0]
 80051f8:	4618      	mov	r0, r3
 80051fa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80051fe:	462b      	mov	r3, r5
 8005200:	f7fc fbc6 	bl	8001990 <chThdCreateStatic>
 8005204:	693b      	ldr	r3, [r7, #16]
 8005206:	4913      	ldr	r1, [pc, #76]	; (8005254 <mtx7_execute+0xb4>)
 8005208:	60e0      	str	r0, [r4, #12]
 800520a:	1d72      	adds	r2, r6, #5
 800520c:	9100      	str	r1, [sp, #0]
 800520e:	4618      	mov	r0, r3
 8005210:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005214:	462b      	mov	r3, r5
 8005216:	f7fc fbbb 	bl	8001990 <chThdCreateStatic>
 800521a:	6120      	str	r0, [r4, #16]
 800521c:	480e      	ldr	r0, [pc, #56]	; (8005258 <mtx7_execute+0xb8>)
 800521e:	f7fd f84f 	bl	80022c0 <chCondBroadcast>
 8005222:	f7fe fe35 	bl	8003e90 <test_wait_threads>
 8005226:	490d      	ldr	r1, [pc, #52]	; (800525c <mtx7_execute+0xbc>)
 8005228:	2001      	movs	r0, #1
 800522a:	b003      	add	sp, #12
 800522c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8005230:	f7fe bdd6 	b.w	8003de0 <_test_assert_sequence>
 8005234:	20000ce8 	.word	0x20000ce8
 8005238:	08007ec0 	.word	0x08007ec0
 800523c:	08005111 	.word	0x08005111
 8005240:	08007fc4 	.word	0x08007fc4
 8005244:	20001654 	.word	0x20001654
 8005248:	08007fb0 	.word	0x08007fb0
 800524c:	08007fb4 	.word	0x08007fb4
 8005250:	08007fb8 	.word	0x08007fb8
 8005254:	08007fbc 	.word	0x08007fbc
 8005258:	2000080c 	.word	0x2000080c
 800525c:	08007fc0 	.word	0x08007fc0

08005260 <mtx8_execute>:
 8005260:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005262:	4b1b      	ldr	r3, [pc, #108]	; (80052d0 <mtx8_execute+0x70>)
 8005264:	4e1b      	ldr	r6, [pc, #108]	; (80052d4 <mtx8_execute+0x74>)
 8005266:	699b      	ldr	r3, [r3, #24]
 8005268:	6830      	ldr	r0, [r6, #0]
 800526a:	689d      	ldr	r5, [r3, #8]
 800526c:	4b1a      	ldr	r3, [pc, #104]	; (80052d8 <mtx8_execute+0x78>)
 800526e:	4c1b      	ldr	r4, [pc, #108]	; (80052dc <mtx8_execute+0x7c>)
 8005270:	4f1b      	ldr	r7, [pc, #108]	; (80052e0 <mtx8_execute+0x80>)
 8005272:	b083      	sub	sp, #12
 8005274:	1c6a      	adds	r2, r5, #1
 8005276:	9300      	str	r3, [sp, #0]
 8005278:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800527c:	4b19      	ldr	r3, [pc, #100]	; (80052e4 <mtx8_execute+0x84>)
 800527e:	f7fc fb87 	bl	8001990 <chThdCreateStatic>
 8005282:	6871      	ldr	r1, [r6, #4]
 8005284:	4b18      	ldr	r3, [pc, #96]	; (80052e8 <mtx8_execute+0x88>)
 8005286:	6020      	str	r0, [r4, #0]
 8005288:	1caa      	adds	r2, r5, #2
 800528a:	9300      	str	r3, [sp, #0]
 800528c:	4608      	mov	r0, r1
 800528e:	4b17      	ldr	r3, [pc, #92]	; (80052ec <mtx8_execute+0x8c>)
 8005290:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005294:	f7fc fb7c 	bl	8001990 <chThdCreateStatic>
 8005298:	68b1      	ldr	r1, [r6, #8]
 800529a:	4b15      	ldr	r3, [pc, #84]	; (80052f0 <mtx8_execute+0x90>)
 800529c:	6060      	str	r0, [r4, #4]
 800529e:	1cea      	adds	r2, r5, #3
 80052a0:	9300      	str	r3, [sp, #0]
 80052a2:	4608      	mov	r0, r1
 80052a4:	4b13      	ldr	r3, [pc, #76]	; (80052f4 <mtx8_execute+0x94>)
 80052a6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80052aa:	f7fc fb71 	bl	8001990 <chThdCreateStatic>
 80052ae:	60a0      	str	r0, [r4, #8]
 80052b0:	4638      	mov	r0, r7
 80052b2:	f7fc ffdd 	bl	8002270 <chCondSignal>
 80052b6:	4638      	mov	r0, r7
 80052b8:	f7fc ffda 	bl	8002270 <chCondSignal>
 80052bc:	f7fe fde8 	bl	8003e90 <test_wait_threads>
 80052c0:	490d      	ldr	r1, [pc, #52]	; (80052f8 <mtx8_execute+0x98>)
 80052c2:	2001      	movs	r0, #1
 80052c4:	b003      	add	sp, #12
 80052c6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80052ca:	f7fe bd89 	b.w	8003de0 <_test_assert_sequence>
 80052ce:	bf00      	nop
 80052d0:	20000ce8 	.word	0x20000ce8
 80052d4:	08007ec0 	.word	0x08007ec0
 80052d8:	08007fbc 	.word	0x08007fbc
 80052dc:	20001654 	.word	0x20001654
 80052e0:	2000080c 	.word	0x2000080c
 80052e4:	08005301 	.word	0x08005301
 80052e8:	08007fb4 	.word	0x08007fb4
 80052ec:	08005111 	.word	0x08005111
 80052f0:	08007fb8 	.word	0x08007fb8
 80052f4:	08004c51 	.word	0x08004c51
 80052f8:	080080a0 	.word	0x080080a0
 80052fc:	00000000 	.word	0x00000000

08005300 <thread11>:
 8005300:	b570      	push	{r4, r5, r6, lr}
 8005302:	4c0c      	ldr	r4, [pc, #48]	; (8005334 <thread11+0x34>)
 8005304:	4d0c      	ldr	r5, [pc, #48]	; (8005338 <thread11+0x38>)
 8005306:	4606      	mov	r6, r0
 8005308:	4620      	mov	r0, r4
 800530a:	f7fc fef9 	bl	8002100 <chMtxLock>
 800530e:	4628      	mov	r0, r5
 8005310:	f7fc fef6 	bl	8002100 <chMtxLock>
 8005314:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005318:	4808      	ldr	r0, [pc, #32]	; (800533c <thread11+0x3c>)
 800531a:	f7fd f859 	bl	80023d0 <chCondWaitTimeout>
 800531e:	7830      	ldrb	r0, [r6, #0]
 8005320:	f7fe fd36 	bl	8003d90 <test_emit_token>
 8005324:	4628      	mov	r0, r5
 8005326:	f7fc ff13 	bl	8002150 <chMtxUnlock>
 800532a:	4620      	mov	r0, r4
 800532c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005330:	f7fc bf0e 	b.w	8002150 <chMtxUnlock>
 8005334:	20000824 	.word	0x20000824
 8005338:	20000814 	.word	0x20000814
 800533c:	2000080c 	.word	0x2000080c

08005340 <msg1_execute>:
 8005340:	b510      	push	{r4, lr}
 8005342:	4a18      	ldr	r2, [pc, #96]	; (80053a4 <msg1_execute+0x64>)
 8005344:	4b18      	ldr	r3, [pc, #96]	; (80053a8 <msg1_execute+0x68>)
 8005346:	6991      	ldr	r1, [r2, #24]
 8005348:	6818      	ldr	r0, [r3, #0]
 800534a:	688a      	ldr	r2, [r1, #8]
 800534c:	4b17      	ldr	r3, [pc, #92]	; (80053ac <msg1_execute+0x6c>)
 800534e:	b082      	sub	sp, #8
 8005350:	3201      	adds	r2, #1
 8005352:	9100      	str	r1, [sp, #0]
 8005354:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005358:	f7fc fb1a 	bl	8001990 <chThdCreateStatic>
 800535c:	4b14      	ldr	r3, [pc, #80]	; (80053b0 <msg1_execute+0x70>)
 800535e:	6018      	str	r0, [r3, #0]
 8005360:	f7fd f9fe 	bl	8002760 <chMsgWait>
 8005364:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8005366:	4621      	mov	r1, r4
 8005368:	f7fd fa1a 	bl	80027a0 <chMsgRelease>
 800536c:	b2e0      	uxtb	r0, r4
 800536e:	f7fe fd0f 	bl	8003d90 <test_emit_token>
 8005372:	f7fd f9f5 	bl	8002760 <chMsgWait>
 8005376:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8005378:	4621      	mov	r1, r4
 800537a:	f7fd fa11 	bl	80027a0 <chMsgRelease>
 800537e:	b2e0      	uxtb	r0, r4
 8005380:	f7fe fd06 	bl	8003d90 <test_emit_token>
 8005384:	f7fd f9ec 	bl	8002760 <chMsgWait>
 8005388:	6b04      	ldr	r4, [r0, #48]	; 0x30
 800538a:	4621      	mov	r1, r4
 800538c:	f7fd fa08 	bl	80027a0 <chMsgRelease>
 8005390:	b2e0      	uxtb	r0, r4
 8005392:	f7fe fcfd 	bl	8003d90 <test_emit_token>
 8005396:	4907      	ldr	r1, [pc, #28]	; (80053b4 <msg1_execute+0x74>)
 8005398:	2001      	movs	r0, #1
 800539a:	b002      	add	sp, #8
 800539c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80053a0:	f7fe bd1e 	b.w	8003de0 <_test_assert_sequence>
 80053a4:	20000ce8 	.word	0x20000ce8
 80053a8:	08007ec0 	.word	0x08007ec0
 80053ac:	080053c1 	.word	0x080053c1
 80053b0:	20001654 	.word	0x20001654
 80053b4:	080080a0 	.word	0x080080a0
	...

080053c0 <thread>:
 80053c0:	b510      	push	{r4, lr}
 80053c2:	2141      	movs	r1, #65	; 0x41
 80053c4:	4604      	mov	r4, r0
 80053c6:	f7fd f9ab 	bl	8002720 <chMsgSend>
 80053ca:	4620      	mov	r0, r4
 80053cc:	2142      	movs	r1, #66	; 0x42
 80053ce:	f7fd f9a7 	bl	8002720 <chMsgSend>
 80053d2:	4620      	mov	r0, r4
 80053d4:	2143      	movs	r1, #67	; 0x43
 80053d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80053da:	f7fd b9a1 	b.w	8002720 <chMsgSend>
 80053de:	bf00      	nop

080053e0 <mbox1_execute>:
 80053e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80053e4:	2320      	movs	r3, #32
 80053e6:	b082      	sub	sp, #8
 80053e8:	f383 8811 	msr	BASEPRI, r3
 80053ec:	4d19      	ldr	r5, [pc, #100]	; (8005454 <mbox1_execute+0x74>)
 80053ee:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80053f0:	f1a1 0105 	sub.w	r1, r1, #5
 80053f4:	fab1 f181 	clz	r1, r1
 80053f8:	2001      	movs	r0, #1
 80053fa:	0949      	lsrs	r1, r1, #5
 80053fc:	f7fe fcd8 	bl	8003db0 <_test_assert>
 8005400:	2800      	cmp	r0, #0
 8005402:	f040 8198 	bne.w	8005736 <mbox1_execute+0x356>
 8005406:	f380 8811 	msr	BASEPRI, r0
 800540a:	2442      	movs	r4, #66	; 0x42
 800540c:	462e      	mov	r6, r5
 800540e:	4621      	mov	r1, r4
 8005410:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005414:	4630      	mov	r0, r6
 8005416:	f7fd fa13 	bl	8002840 <chMBPost>
 800541a:	fab0 f180 	clz	r1, r0
 800541e:	0949      	lsrs	r1, r1, #5
 8005420:	2002      	movs	r0, #2
 8005422:	f7fe fcc5 	bl	8003db0 <_test_assert>
 8005426:	3401      	adds	r4, #1
 8005428:	b980      	cbnz	r0, 800544c <mbox1_execute+0x6c>
 800542a:	2c46      	cmp	r4, #70	; 0x46
 800542c:	d1ef      	bne.n	800540e <mbox1_execute+0x2e>
 800542e:	2141      	movs	r1, #65	; 0x41
 8005430:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005434:	4807      	ldr	r0, [pc, #28]	; (8005454 <mbox1_execute+0x74>)
 8005436:	f7fd fa4b 	bl	80028d0 <chMBPostAhead>
 800543a:	fab0 f180 	clz	r1, r0
 800543e:	0949      	lsrs	r1, r1, #5
 8005440:	2003      	movs	r0, #3
 8005442:	f7fe fcb5 	bl	8003db0 <_test_assert>
 8005446:	2800      	cmp	r0, #0
 8005448:	f000 8180 	beq.w	800574c <mbox1_execute+0x36c>
 800544c:	b002      	add	sp, #8
 800544e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005452:	bf00      	nop
 8005454:	20000834 	.word	0x20000834
 8005458:	f380 8811 	msr	BASEPRI, r0
 800545c:	f384 8811 	msr	BASEPRI, r4
 8005460:	2141      	movs	r1, #65	; 0x41
 8005462:	48b8      	ldr	r0, [pc, #736]	; (8005744 <mbox1_execute+0x364>)
 8005464:	f7fd fa14 	bl	8002890 <chMBPostI>
 8005468:	fab0 f180 	clz	r1, r0
 800546c:	0949      	lsrs	r1, r1, #5
 800546e:	2016      	movs	r0, #22
 8005470:	f7fe fc9e 	bl	8003db0 <_test_assert>
 8005474:	2800      	cmp	r0, #0
 8005476:	d1e9      	bne.n	800544c <mbox1_execute+0x6c>
 8005478:	2142      	movs	r1, #66	; 0x42
 800547a:	48b2      	ldr	r0, [pc, #712]	; (8005744 <mbox1_execute+0x364>)
 800547c:	f7fd fa08 	bl	8002890 <chMBPostI>
 8005480:	fab0 f180 	clz	r1, r0
 8005484:	0949      	lsrs	r1, r1, #5
 8005486:	2017      	movs	r0, #23
 8005488:	f7fe fc92 	bl	8003db0 <_test_assert>
 800548c:	2800      	cmp	r0, #0
 800548e:	d1dd      	bne.n	800544c <mbox1_execute+0x6c>
 8005490:	2143      	movs	r1, #67	; 0x43
 8005492:	48ac      	ldr	r0, [pc, #688]	; (8005744 <mbox1_execute+0x364>)
 8005494:	f7fd f9fc 	bl	8002890 <chMBPostI>
 8005498:	fab0 f180 	clz	r1, r0
 800549c:	0949      	lsrs	r1, r1, #5
 800549e:	2018      	movs	r0, #24
 80054a0:	f7fe fc86 	bl	8003db0 <_test_assert>
 80054a4:	2800      	cmp	r0, #0
 80054a6:	d1d1      	bne.n	800544c <mbox1_execute+0x6c>
 80054a8:	2144      	movs	r1, #68	; 0x44
 80054aa:	48a6      	ldr	r0, [pc, #664]	; (8005744 <mbox1_execute+0x364>)
 80054ac:	f7fd f9f0 	bl	8002890 <chMBPostI>
 80054b0:	fab0 f180 	clz	r1, r0
 80054b4:	0949      	lsrs	r1, r1, #5
 80054b6:	2019      	movs	r0, #25
 80054b8:	f7fe fc7a 	bl	8003db0 <_test_assert>
 80054bc:	4606      	mov	r6, r0
 80054be:	2800      	cmp	r0, #0
 80054c0:	d1c4      	bne.n	800544c <mbox1_execute+0x6c>
 80054c2:	2145      	movs	r1, #69	; 0x45
 80054c4:	489f      	ldr	r0, [pc, #636]	; (8005744 <mbox1_execute+0x364>)
 80054c6:	f7fd f9e3 	bl	8002890 <chMBPostI>
 80054ca:	f386 8811 	msr	BASEPRI, r6
 80054ce:	fab0 f180 	clz	r1, r0
 80054d2:	0949      	lsrs	r1, r1, #5
 80054d4:	201a      	movs	r0, #26
 80054d6:	f7fe fc6b 	bl	8003db0 <_test_assert>
 80054da:	2800      	cmp	r0, #0
 80054dc:	d1b6      	bne.n	800544c <mbox1_execute+0x6c>
 80054de:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80054e2:	1ac8      	subs	r0, r1, r3
 80054e4:	4241      	negs	r1, r0
 80054e6:	4141      	adcs	r1, r0
 80054e8:	201b      	movs	r0, #27
 80054ea:	f7fe fc61 	bl	8003db0 <_test_assert>
 80054ee:	2800      	cmp	r0, #0
 80054f0:	d1ac      	bne.n	800544c <mbox1_execute+0x6c>
 80054f2:	f8df 8250 	ldr.w	r8, [pc, #592]	; 8005744 <mbox1_execute+0x364>
 80054f6:	4607      	mov	r7, r0
 80054f8:	2605      	movs	r6, #5
 80054fa:	f384 8811 	msr	BASEPRI, r4
 80054fe:	a901      	add	r1, sp, #4
 8005500:	4640      	mov	r0, r8
 8005502:	f7fd fa4d 	bl	80029a0 <chMBFetchI>
 8005506:	f387 8811 	msr	BASEPRI, r7
 800550a:	fab0 f180 	clz	r1, r0
 800550e:	0949      	lsrs	r1, r1, #5
 8005510:	201c      	movs	r0, #28
 8005512:	f7fe fc4d 	bl	8003db0 <_test_assert>
 8005516:	2800      	cmp	r0, #0
 8005518:	d198      	bne.n	800544c <mbox1_execute+0x6c>
 800551a:	f89d 0004 	ldrb.w	r0, [sp, #4]
 800551e:	f7fe fc37 	bl	8003d90 <test_emit_token>
 8005522:	3e01      	subs	r6, #1
 8005524:	d1e9      	bne.n	80054fa <mbox1_execute+0x11a>
 8005526:	4988      	ldr	r1, [pc, #544]	; (8005748 <mbox1_execute+0x368>)
 8005528:	201d      	movs	r0, #29
 800552a:	f7fe fc59 	bl	8003de0 <_test_assert_sequence>
 800552e:	2800      	cmp	r0, #0
 8005530:	d18c      	bne.n	800544c <mbox1_execute+0x6c>
 8005532:	f384 8811 	msr	BASEPRI, r4
 8005536:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8005538:	1f4a      	subs	r2, r1, #5
 800553a:	4251      	negs	r1, r2
 800553c:	4151      	adcs	r1, r2
 800553e:	201e      	movs	r0, #30
 8005540:	f7fe fc36 	bl	8003db0 <_test_assert>
 8005544:	2800      	cmp	r0, #0
 8005546:	f040 8229 	bne.w	800599c <mbox1_execute+0x5bc>
 800554a:	f386 8811 	msr	BASEPRI, r6
 800554e:	f384 8811 	msr	BASEPRI, r4
 8005552:	69a9      	ldr	r1, [r5, #24]
 8005554:	fab1 f181 	clz	r1, r1
 8005558:	0949      	lsrs	r1, r1, #5
 800555a:	201f      	movs	r0, #31
 800555c:	f7fe fc28 	bl	8003db0 <_test_assert>
 8005560:	2800      	cmp	r0, #0
 8005562:	f040 821b 	bne.w	800599c <mbox1_execute+0x5bc>
 8005566:	f386 8811 	msr	BASEPRI, r6
 800556a:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800556e:	1acb      	subs	r3, r1, r3
 8005570:	4259      	negs	r1, r3
 8005572:	4159      	adcs	r1, r3
 8005574:	2020      	movs	r0, #32
 8005576:	f7fe fc1b 	bl	8003db0 <_test_assert>
 800557a:	2800      	cmp	r0, #0
 800557c:	f47f af66 	bne.w	800544c <mbox1_execute+0x6c>
 8005580:	f384 8811 	msr	BASEPRI, r4
 8005584:	2145      	movs	r1, #69	; 0x45
 8005586:	486f      	ldr	r0, [pc, #444]	; (8005744 <mbox1_execute+0x364>)
 8005588:	f7fd f9ca 	bl	8002920 <chMBPostAheadI>
 800558c:	fab0 f180 	clz	r1, r0
 8005590:	0949      	lsrs	r1, r1, #5
 8005592:	2021      	movs	r0, #33	; 0x21
 8005594:	f7fe fc0c 	bl	8003db0 <_test_assert>
 8005598:	2800      	cmp	r0, #0
 800559a:	f47f af57 	bne.w	800544c <mbox1_execute+0x6c>
 800559e:	2144      	movs	r1, #68	; 0x44
 80055a0:	4868      	ldr	r0, [pc, #416]	; (8005744 <mbox1_execute+0x364>)
 80055a2:	f7fd f9bd 	bl	8002920 <chMBPostAheadI>
 80055a6:	fab0 f180 	clz	r1, r0
 80055aa:	0949      	lsrs	r1, r1, #5
 80055ac:	2022      	movs	r0, #34	; 0x22
 80055ae:	f7fe fbff 	bl	8003db0 <_test_assert>
 80055b2:	2800      	cmp	r0, #0
 80055b4:	f47f af4a 	bne.w	800544c <mbox1_execute+0x6c>
 80055b8:	2143      	movs	r1, #67	; 0x43
 80055ba:	4862      	ldr	r0, [pc, #392]	; (8005744 <mbox1_execute+0x364>)
 80055bc:	f7fd f9b0 	bl	8002920 <chMBPostAheadI>
 80055c0:	fab0 f180 	clz	r1, r0
 80055c4:	0949      	lsrs	r1, r1, #5
 80055c6:	2023      	movs	r0, #35	; 0x23
 80055c8:	f7fe fbf2 	bl	8003db0 <_test_assert>
 80055cc:	2800      	cmp	r0, #0
 80055ce:	f47f af3d 	bne.w	800544c <mbox1_execute+0x6c>
 80055d2:	2142      	movs	r1, #66	; 0x42
 80055d4:	485b      	ldr	r0, [pc, #364]	; (8005744 <mbox1_execute+0x364>)
 80055d6:	f7fd f9a3 	bl	8002920 <chMBPostAheadI>
 80055da:	fab0 f180 	clz	r1, r0
 80055de:	0949      	lsrs	r1, r1, #5
 80055e0:	2024      	movs	r0, #36	; 0x24
 80055e2:	f7fe fbe5 	bl	8003db0 <_test_assert>
 80055e6:	2800      	cmp	r0, #0
 80055e8:	f47f af30 	bne.w	800544c <mbox1_execute+0x6c>
 80055ec:	2141      	movs	r1, #65	; 0x41
 80055ee:	4855      	ldr	r0, [pc, #340]	; (8005744 <mbox1_execute+0x364>)
 80055f0:	f7fd f996 	bl	8002920 <chMBPostAheadI>
 80055f4:	2300      	movs	r3, #0
 80055f6:	f383 8811 	msr	BASEPRI, r3
 80055fa:	fab0 f180 	clz	r1, r0
 80055fe:	0949      	lsrs	r1, r1, #5
 8005600:	2025      	movs	r0, #37	; 0x25
 8005602:	f7fe fbd5 	bl	8003db0 <_test_assert>
 8005606:	2800      	cmp	r0, #0
 8005608:	f47f af20 	bne.w	800544c <mbox1_execute+0x6c>
 800560c:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8005610:	eba1 0803 	sub.w	r8, r1, r3
 8005614:	f1d8 0100 	rsbs	r1, r8, #0
 8005618:	eb41 0108 	adc.w	r1, r1, r8
 800561c:	2026      	movs	r0, #38	; 0x26
 800561e:	f7fe fbc7 	bl	8003db0 <_test_assert>
 8005622:	2800      	cmp	r0, #0
 8005624:	f47f af12 	bne.w	800544c <mbox1_execute+0x6c>
 8005628:	f8df 8118 	ldr.w	r8, [pc, #280]	; 8005744 <mbox1_execute+0x364>
 800562c:	4606      	mov	r6, r0
 800562e:	2405      	movs	r4, #5
 8005630:	2720      	movs	r7, #32
 8005632:	f387 8811 	msr	BASEPRI, r7
 8005636:	a901      	add	r1, sp, #4
 8005638:	4640      	mov	r0, r8
 800563a:	f7fd f9b1 	bl	80029a0 <chMBFetchI>
 800563e:	f386 8811 	msr	BASEPRI, r6
 8005642:	fab0 f180 	clz	r1, r0
 8005646:	0949      	lsrs	r1, r1, #5
 8005648:	2027      	movs	r0, #39	; 0x27
 800564a:	f7fe fbb1 	bl	8003db0 <_test_assert>
 800564e:	2800      	cmp	r0, #0
 8005650:	f47f aefc 	bne.w	800544c <mbox1_execute+0x6c>
 8005654:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8005658:	f7fe fb9a 	bl	8003d90 <test_emit_token>
 800565c:	3c01      	subs	r4, #1
 800565e:	d1e8      	bne.n	8005632 <mbox1_execute+0x252>
 8005660:	4939      	ldr	r1, [pc, #228]	; (8005748 <mbox1_execute+0x368>)
 8005662:	2028      	movs	r0, #40	; 0x28
 8005664:	f7fe fbbc 	bl	8003de0 <_test_assert_sequence>
 8005668:	2800      	cmp	r0, #0
 800566a:	f47f aeef 	bne.w	800544c <mbox1_execute+0x6c>
 800566e:	f387 8811 	msr	BASEPRI, r7
 8005672:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8005674:	f1a1 0e05 	sub.w	lr, r1, #5
 8005678:	f1de 0100 	rsbs	r1, lr, #0
 800567c:	eb41 010e 	adc.w	r1, r1, lr
 8005680:	2029      	movs	r0, #41	; 0x29
 8005682:	f7fe fb95 	bl	8003db0 <_test_assert>
 8005686:	2800      	cmp	r0, #0
 8005688:	f040 80b7 	bne.w	80057fa <mbox1_execute+0x41a>
 800568c:	f384 8811 	msr	BASEPRI, r4
 8005690:	f387 8811 	msr	BASEPRI, r7
 8005694:	69a9      	ldr	r1, [r5, #24]
 8005696:	fab1 f181 	clz	r1, r1
 800569a:	0949      	lsrs	r1, r1, #5
 800569c:	202a      	movs	r0, #42	; 0x2a
 800569e:	f7fe fb87 	bl	8003db0 <_test_assert>
 80056a2:	2800      	cmp	r0, #0
 80056a4:	f040 80a9 	bne.w	80057fa <mbox1_execute+0x41a>
 80056a8:	f384 8811 	msr	BASEPRI, r4
 80056ac:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80056b0:	eba1 0c03 	sub.w	ip, r1, r3
 80056b4:	f1dc 0100 	rsbs	r1, ip, #0
 80056b8:	eb41 010c 	adc.w	r1, r1, ip
 80056bc:	202b      	movs	r0, #43	; 0x2b
 80056be:	f7fe fb77 	bl	8003db0 <_test_assert>
 80056c2:	2800      	cmp	r0, #0
 80056c4:	f47f aec2 	bne.w	800544c <mbox1_execute+0x6c>
 80056c8:	481e      	ldr	r0, [pc, #120]	; (8005744 <mbox1_execute+0x364>)
 80056ca:	f7fd f8a9 	bl	8002820 <chMBReset>
 80056ce:	f387 8811 	msr	BASEPRI, r7
 80056d2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80056d4:	1f4e      	subs	r6, r1, #5
 80056d6:	4271      	negs	r1, r6
 80056d8:	4171      	adcs	r1, r6
 80056da:	202c      	movs	r0, #44	; 0x2c
 80056dc:	f7fe fb68 	bl	8003db0 <_test_assert>
 80056e0:	2800      	cmp	r0, #0
 80056e2:	f040 808a 	bne.w	80057fa <mbox1_execute+0x41a>
 80056e6:	f384 8811 	msr	BASEPRI, r4
 80056ea:	f387 8811 	msr	BASEPRI, r7
 80056ee:	69a9      	ldr	r1, [r5, #24]
 80056f0:	fab1 f181 	clz	r1, r1
 80056f4:	0949      	lsrs	r1, r1, #5
 80056f6:	202d      	movs	r0, #45	; 0x2d
 80056f8:	f7fe fb5a 	bl	8003db0 <_test_assert>
 80056fc:	2800      	cmp	r0, #0
 80056fe:	d17c      	bne.n	80057fa <mbox1_execute+0x41a>
 8005700:	f384 8811 	msr	BASEPRI, r4
 8005704:	f387 8811 	msr	BASEPRI, r7
 8005708:	6829      	ldr	r1, [r5, #0]
 800570a:	68ab      	ldr	r3, [r5, #8]
 800570c:	1aca      	subs	r2, r1, r3
 800570e:	4251      	negs	r1, r2
 8005710:	4151      	adcs	r1, r2
 8005712:	202e      	movs	r0, #46	; 0x2e
 8005714:	f7fe fb4c 	bl	8003db0 <_test_assert>
 8005718:	2800      	cmp	r0, #0
 800571a:	d16e      	bne.n	80057fa <mbox1_execute+0x41a>
 800571c:	f384 8811 	msr	BASEPRI, r4
 8005720:	f387 8811 	msr	BASEPRI, r7
 8005724:	6829      	ldr	r1, [r5, #0]
 8005726:	68eb      	ldr	r3, [r5, #12]
 8005728:	1acb      	subs	r3, r1, r3
 800572a:	4259      	negs	r1, r3
 800572c:	f04f 002f 	mov.w	r0, #47	; 0x2f
 8005730:	4159      	adcs	r1, r3
 8005732:	f7fe fb3d 	bl	8003db0 <_test_assert>
 8005736:	2300      	movs	r3, #0
 8005738:	f383 8811 	msr	BASEPRI, r3
 800573c:	b002      	add	sp, #8
 800573e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005742:	bf00      	nop
 8005744:	20000834 	.word	0x20000834
 8005748:	08007fc0 	.word	0x08007fc0
 800574c:	2201      	movs	r2, #1
 800574e:	2158      	movs	r1, #88	; 0x58
 8005750:	4894      	ldr	r0, [pc, #592]	; (80059a4 <mbox1_execute+0x5c4>)
 8005752:	f7fd f875 	bl	8002840 <chMBPost>
 8005756:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 800575a:	fab1 f181 	clz	r1, r1
 800575e:	0949      	lsrs	r1, r1, #5
 8005760:	2004      	movs	r0, #4
 8005762:	f7fe fb25 	bl	8003db0 <_test_assert>
 8005766:	4604      	mov	r4, r0
 8005768:	2800      	cmp	r0, #0
 800576a:	f47f ae6f 	bne.w	800544c <mbox1_execute+0x6c>
 800576e:	2620      	movs	r6, #32
 8005770:	f386 8811 	msr	BASEPRI, r6
 8005774:	2158      	movs	r1, #88	; 0x58
 8005776:	488b      	ldr	r0, [pc, #556]	; (80059a4 <mbox1_execute+0x5c4>)
 8005778:	f7fd f88a 	bl	8002890 <chMBPostI>
 800577c:	4601      	mov	r1, r0
 800577e:	f384 8811 	msr	BASEPRI, r4
 8005782:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 8005786:	fab1 f181 	clz	r1, r1
 800578a:	2005      	movs	r0, #5
 800578c:	0949      	lsrs	r1, r1, #5
 800578e:	f7fe fb0f 	bl	8003db0 <_test_assert>
 8005792:	2800      	cmp	r0, #0
 8005794:	f47f ae5a 	bne.w	800544c <mbox1_execute+0x6c>
 8005798:	2201      	movs	r2, #1
 800579a:	2158      	movs	r1, #88	; 0x58
 800579c:	4881      	ldr	r0, [pc, #516]	; (80059a4 <mbox1_execute+0x5c4>)
 800579e:	f7fd f897 	bl	80028d0 <chMBPostAhead>
 80057a2:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 80057a6:	fab1 f181 	clz	r1, r1
 80057aa:	0949      	lsrs	r1, r1, #5
 80057ac:	2006      	movs	r0, #6
 80057ae:	f7fe faff 	bl	8003db0 <_test_assert>
 80057b2:	4604      	mov	r4, r0
 80057b4:	2800      	cmp	r0, #0
 80057b6:	f47f ae49 	bne.w	800544c <mbox1_execute+0x6c>
 80057ba:	f386 8811 	msr	BASEPRI, r6
 80057be:	2158      	movs	r1, #88	; 0x58
 80057c0:	4878      	ldr	r0, [pc, #480]	; (80059a4 <mbox1_execute+0x5c4>)
 80057c2:	f7fd f8ad 	bl	8002920 <chMBPostAheadI>
 80057c6:	4601      	mov	r1, r0
 80057c8:	f384 8811 	msr	BASEPRI, r4
 80057cc:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 80057d0:	fab1 f181 	clz	r1, r1
 80057d4:	2007      	movs	r0, #7
 80057d6:	0949      	lsrs	r1, r1, #5
 80057d8:	f7fe faea 	bl	8003db0 <_test_assert>
 80057dc:	4604      	mov	r4, r0
 80057de:	2800      	cmp	r0, #0
 80057e0:	f47f ae34 	bne.w	800544c <mbox1_execute+0x6c>
 80057e4:	f386 8811 	msr	BASEPRI, r6
 80057e8:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80057ea:	fab1 f181 	clz	r1, r1
 80057ee:	0949      	lsrs	r1, r1, #5
 80057f0:	2008      	movs	r0, #8
 80057f2:	f7fe fadd 	bl	8003db0 <_test_assert>
 80057f6:	4607      	mov	r7, r0
 80057f8:	b110      	cbz	r0, 8005800 <mbox1_execute+0x420>
 80057fa:	f384 8811 	msr	BASEPRI, r4
 80057fe:	e625      	b.n	800544c <mbox1_execute+0x6c>
 8005800:	f380 8811 	msr	BASEPRI, r0
 8005804:	f386 8811 	msr	BASEPRI, r6
 8005808:	69a9      	ldr	r1, [r5, #24]
 800580a:	f1a1 0c05 	sub.w	ip, r1, #5
 800580e:	f1dc 0100 	rsbs	r1, ip, #0
 8005812:	eb41 010c 	adc.w	r1, r1, ip
 8005816:	2009      	movs	r0, #9
 8005818:	f7fe faca 	bl	8003db0 <_test_assert>
 800581c:	b110      	cbz	r0, 8005824 <mbox1_execute+0x444>
 800581e:	f387 8811 	msr	BASEPRI, r7
 8005822:	e613      	b.n	800544c <mbox1_execute+0x6c>
 8005824:	f380 8811 	msr	BASEPRI, r0
 8005828:	f386 8811 	msr	BASEPRI, r6
 800582c:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8005830:	1acc      	subs	r4, r1, r3
 8005832:	4261      	negs	r1, r4
 8005834:	f04f 000a 	mov.w	r0, #10
 8005838:	4161      	adcs	r1, r4
 800583a:	f7fe fab9 	bl	8003db0 <_test_assert>
 800583e:	2300      	movs	r3, #0
 8005840:	2800      	cmp	r0, #0
 8005842:	f47f af79 	bne.w	8005738 <mbox1_execute+0x358>
 8005846:	f383 8811 	msr	BASEPRI, r3
 800584a:	4e56      	ldr	r6, [pc, #344]	; (80059a4 <mbox1_execute+0x5c4>)
 800584c:	2405      	movs	r4, #5
 800584e:	e005      	b.n	800585c <mbox1_execute+0x47c>
 8005850:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8005854:	f7fe fa9c 	bl	8003d90 <test_emit_token>
 8005858:	3c01      	subs	r4, #1
 800585a:	d00e      	beq.n	800587a <mbox1_execute+0x49a>
 800585c:	a901      	add	r1, sp, #4
 800585e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005862:	4630      	mov	r0, r6
 8005864:	f7fd f874 	bl	8002950 <chMBFetch>
 8005868:	fab0 f180 	clz	r1, r0
 800586c:	0949      	lsrs	r1, r1, #5
 800586e:	200b      	movs	r0, #11
 8005870:	f7fe fa9e 	bl	8003db0 <_test_assert>
 8005874:	2800      	cmp	r0, #0
 8005876:	d0eb      	beq.n	8005850 <mbox1_execute+0x470>
 8005878:	e5e8      	b.n	800544c <mbox1_execute+0x6c>
 800587a:	494b      	ldr	r1, [pc, #300]	; (80059a8 <mbox1_execute+0x5c8>)
 800587c:	200c      	movs	r0, #12
 800587e:	f7fe faaf 	bl	8003de0 <_test_assert_sequence>
 8005882:	2800      	cmp	r0, #0
 8005884:	f47f ade2 	bne.w	800544c <mbox1_execute+0x6c>
 8005888:	2147      	movs	r1, #71	; 0x47
 800588a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800588e:	4845      	ldr	r0, [pc, #276]	; (80059a4 <mbox1_execute+0x5c4>)
 8005890:	f7fc ffd6 	bl	8002840 <chMBPost>
 8005894:	fab0 f180 	clz	r1, r0
 8005898:	0949      	lsrs	r1, r1, #5
 800589a:	200d      	movs	r0, #13
 800589c:	f7fe fa88 	bl	8003db0 <_test_assert>
 80058a0:	2800      	cmp	r0, #0
 80058a2:	f47f add3 	bne.w	800544c <mbox1_execute+0x6c>
 80058a6:	a901      	add	r1, sp, #4
 80058a8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80058ac:	483d      	ldr	r0, [pc, #244]	; (80059a4 <mbox1_execute+0x5c4>)
 80058ae:	f7fd f84f 	bl	8002950 <chMBFetch>
 80058b2:	fab0 f180 	clz	r1, r0
 80058b6:	0949      	lsrs	r1, r1, #5
 80058b8:	200e      	movs	r0, #14
 80058ba:	f7fe fa79 	bl	8003db0 <_test_assert>
 80058be:	2800      	cmp	r0, #0
 80058c0:	f47f adc4 	bne.w	800544c <mbox1_execute+0x6c>
 80058c4:	6829      	ldr	r1, [r5, #0]
 80058c6:	68ab      	ldr	r3, [r5, #8]
 80058c8:	1aca      	subs	r2, r1, r3
 80058ca:	4251      	negs	r1, r2
 80058cc:	4151      	adcs	r1, r2
 80058ce:	200f      	movs	r0, #15
 80058d0:	f7fe fa6e 	bl	8003db0 <_test_assert>
 80058d4:	2800      	cmp	r0, #0
 80058d6:	f47f adb9 	bne.w	800544c <mbox1_execute+0x6c>
 80058da:	6829      	ldr	r1, [r5, #0]
 80058dc:	68eb      	ldr	r3, [r5, #12]
 80058de:	1acb      	subs	r3, r1, r3
 80058e0:	4259      	negs	r1, r3
 80058e2:	4159      	adcs	r1, r3
 80058e4:	2010      	movs	r0, #16
 80058e6:	f7fe fa63 	bl	8003db0 <_test_assert>
 80058ea:	2800      	cmp	r0, #0
 80058ec:	f47f adae 	bne.w	800544c <mbox1_execute+0x6c>
 80058f0:	a901      	add	r1, sp, #4
 80058f2:	2201      	movs	r2, #1
 80058f4:	482b      	ldr	r0, [pc, #172]	; (80059a4 <mbox1_execute+0x5c4>)
 80058f6:	f7fd f82b 	bl	8002950 <chMBFetch>
 80058fa:	f100 0801 	add.w	r8, r0, #1
 80058fe:	f1d8 0100 	rsbs	r1, r8, #0
 8005902:	eb41 0108 	adc.w	r1, r1, r8
 8005906:	2011      	movs	r0, #17
 8005908:	f7fe fa52 	bl	8003db0 <_test_assert>
 800590c:	2800      	cmp	r0, #0
 800590e:	f47f ad9d 	bne.w	800544c <mbox1_execute+0x6c>
 8005912:	2620      	movs	r6, #32
 8005914:	f386 8811 	msr	BASEPRI, r6
 8005918:	4822      	ldr	r0, [pc, #136]	; (80059a4 <mbox1_execute+0x5c4>)
 800591a:	a901      	add	r1, sp, #4
 800591c:	f7fd f840 	bl	80029a0 <chMBFetchI>
 8005920:	4601      	mov	r1, r0
 8005922:	f384 8811 	msr	BASEPRI, r4
 8005926:	f101 0e01 	add.w	lr, r1, #1
 800592a:	f1de 0100 	rsbs	r1, lr, #0
 800592e:	eb41 010e 	adc.w	r1, r1, lr
 8005932:	2012      	movs	r0, #18
 8005934:	f7fe fa3c 	bl	8003db0 <_test_assert>
 8005938:	2800      	cmp	r0, #0
 800593a:	f47f ad87 	bne.w	800544c <mbox1_execute+0x6c>
 800593e:	f386 8811 	msr	BASEPRI, r6
 8005942:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8005944:	f1a1 0c05 	sub.w	ip, r1, #5
 8005948:	f1dc 0100 	rsbs	r1, ip, #0
 800594c:	eb41 010c 	adc.w	r1, r1, ip
 8005950:	2013      	movs	r0, #19
 8005952:	f7fe fa2d 	bl	8003db0 <_test_assert>
 8005956:	2800      	cmp	r0, #0
 8005958:	f47f aeed 	bne.w	8005736 <mbox1_execute+0x356>
 800595c:	2700      	movs	r7, #0
 800595e:	f387 8811 	msr	BASEPRI, r7
 8005962:	2420      	movs	r4, #32
 8005964:	f384 8811 	msr	BASEPRI, r4
 8005968:	69a9      	ldr	r1, [r5, #24]
 800596a:	fab1 f181 	clz	r1, r1
 800596e:	0949      	lsrs	r1, r1, #5
 8005970:	2014      	movs	r0, #20
 8005972:	f7fe fa1d 	bl	8003db0 <_test_assert>
 8005976:	4606      	mov	r6, r0
 8005978:	2800      	cmp	r0, #0
 800597a:	f47f af50 	bne.w	800581e <mbox1_execute+0x43e>
 800597e:	f380 8811 	msr	BASEPRI, r0
 8005982:	f384 8811 	msr	BASEPRI, r4
 8005986:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800598a:	1acf      	subs	r7, r1, r3
 800598c:	4279      	negs	r1, r7
 800598e:	4179      	adcs	r1, r7
 8005990:	2015      	movs	r0, #21
 8005992:	f7fe fa0d 	bl	8003db0 <_test_assert>
 8005996:	2800      	cmp	r0, #0
 8005998:	f43f ad5e 	beq.w	8005458 <mbox1_execute+0x78>
 800599c:	f386 8811 	msr	BASEPRI, r6
 80059a0:	e554      	b.n	800544c <mbox1_execute+0x6c>
 80059a2:	bf00      	nop
 80059a4:	20000834 	.word	0x20000834
 80059a8:	08007fc0 	.word	0x08007fc0
 80059ac:	00000000 	.word	0x00000000

080059b0 <mbox1_setup>:
 80059b0:	2205      	movs	r2, #5
 80059b2:	4902      	ldr	r1, [pc, #8]	; (80059bc <mbox1_setup+0xc>)
 80059b4:	4802      	ldr	r0, [pc, #8]	; (80059c0 <mbox1_setup+0x10>)
 80059b6:	f7fc bf03 	b.w	80027c0 <chMBObjectInit>
 80059ba:	bf00      	nop
 80059bc:	20000fe8 	.word	0x20000fe8
 80059c0:	20000834 	.word	0x20000834
	...

080059d0 <h3>:
 80059d0:	2043      	movs	r0, #67	; 0x43
 80059d2:	f7fe b9dd 	b.w	8003d90 <test_emit_token>
 80059d6:	bf00      	nop
	...

080059e0 <h2>:
 80059e0:	2042      	movs	r0, #66	; 0x42
 80059e2:	f7fe b9d5 	b.w	8003d90 <test_emit_token>
 80059e6:	bf00      	nop
	...

080059f0 <h1>:
 80059f0:	2041      	movs	r0, #65	; 0x41
 80059f2:	f7fe b9cd 	b.w	8003d90 <test_emit_token>
 80059f6:	bf00      	nop
	...

08005a00 <evt1_execute>:
 8005a00:	b510      	push	{r4, lr}
 8005a02:	4c1f      	ldr	r4, [pc, #124]	; (8005a80 <evt1_execute+0x80>)
 8005a04:	b08a      	sub	sp, #40	; 0x28
 8005a06:	4620      	mov	r0, r4
 8005a08:	4669      	mov	r1, sp
 8005a0a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8005a0e:	2201      	movs	r2, #1
 8005a10:	6024      	str	r4, [r4, #0]
 8005a12:	f7fc fced 	bl	80023f0 <chEvtRegisterMaskWithFlags>
 8005a16:	4620      	mov	r0, r4
 8005a18:	a905      	add	r1, sp, #20
 8005a1a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8005a1e:	2202      	movs	r2, #2
 8005a20:	f7fc fce6 	bl	80023f0 <chEvtRegisterMaskWithFlags>
 8005a24:	6821      	ldr	r1, [r4, #0]
 8005a26:	1b09      	subs	r1, r1, r4
 8005a28:	bf18      	it	ne
 8005a2a:	2101      	movne	r1, #1
 8005a2c:	2001      	movs	r0, #1
 8005a2e:	f7fe f9bf 	bl	8003db0 <_test_assert>
 8005a32:	b108      	cbz	r0, 8005a38 <evt1_execute+0x38>
 8005a34:	b00a      	add	sp, #40	; 0x28
 8005a36:	bd10      	pop	{r4, pc}
 8005a38:	4669      	mov	r1, sp
 8005a3a:	4620      	mov	r0, r4
 8005a3c:	f7fc fcf0 	bl	8002420 <chEvtUnregister>
 8005a40:	6821      	ldr	r1, [r4, #0]
 8005a42:	1b09      	subs	r1, r1, r4
 8005a44:	bf18      	it	ne
 8005a46:	2101      	movne	r1, #1
 8005a48:	2002      	movs	r0, #2
 8005a4a:	f7fe f9b1 	bl	8003db0 <_test_assert>
 8005a4e:	2800      	cmp	r0, #0
 8005a50:	d1f0      	bne.n	8005a34 <evt1_execute+0x34>
 8005a52:	a905      	add	r1, sp, #20
 8005a54:	4620      	mov	r0, r4
 8005a56:	f7fc fce3 	bl	8002420 <chEvtUnregister>
 8005a5a:	6821      	ldr	r1, [r4, #0]
 8005a5c:	1b09      	subs	r1, r1, r4
 8005a5e:	fab1 f181 	clz	r1, r1
 8005a62:	2003      	movs	r0, #3
 8005a64:	0949      	lsrs	r1, r1, #5
 8005a66:	f7fe f9a3 	bl	8003db0 <_test_assert>
 8005a6a:	2800      	cmp	r0, #0
 8005a6c:	d1e2      	bne.n	8005a34 <evt1_execute+0x34>
 8005a6e:	2107      	movs	r1, #7
 8005a70:	4804      	ldr	r0, [pc, #16]	; (8005a84 <evt1_execute+0x84>)
 8005a72:	f7fc fd5d 	bl	8002530 <chEvtDispatch>
 8005a76:	4904      	ldr	r1, [pc, #16]	; (8005a88 <evt1_execute+0x88>)
 8005a78:	2004      	movs	r0, #4
 8005a7a:	f7fe f9b1 	bl	8003de0 <_test_assert_sequence>
 8005a7e:	e7d9      	b.n	8005a34 <evt1_execute+0x34>
 8005a80:	2000085c 	.word	0x2000085c
 8005a84:	08008240 	.word	0x08008240
 8005a88:	080080a0 	.word	0x080080a0
 8005a8c:	00000000 	.word	0x00000000

08005a90 <evt1_setup>:
 8005a90:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005a94:	f7fc bcdc 	b.w	8002450 <chEvtGetAndClearEvents>
	...

08005aa0 <evt2_setup>:
 8005aa0:	f7ff bff6 	b.w	8005a90 <evt1_setup>
	...

08005ab0 <evt3_setup>:
 8005ab0:	f7ff bfee 	b.w	8005a90 <evt1_setup>
	...

08005ac0 <thread2>:
 8005ac0:	b508      	push	{r3, lr}
 8005ac2:	2100      	movs	r1, #0
 8005ac4:	4806      	ldr	r0, [pc, #24]	; (8005ae0 <thread2+0x20>)
 8005ac6:	f7fc fd23 	bl	8002510 <chEvtBroadcastFlags>
 8005aca:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8005ace:	f7fb ffc7 	bl	8001a60 <chThdSleep>
 8005ad2:	2100      	movs	r1, #0
 8005ad4:	4803      	ldr	r0, [pc, #12]	; (8005ae4 <thread2+0x24>)
 8005ad6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005ada:	f7fc bd19 	b.w	8002510 <chEvtBroadcastFlags>
 8005ade:	bf00      	nop
 8005ae0:	2000085c 	.word	0x2000085c
 8005ae4:	20000860 	.word	0x20000860
	...

08005af0 <thread1>:
 8005af0:	b510      	push	{r4, lr}
 8005af2:	4604      	mov	r4, r0
 8005af4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8005af8:	f7fb ffb2 	bl	8001a60 <chThdSleep>
 8005afc:	4620      	mov	r0, r4
 8005afe:	2101      	movs	r1, #1
 8005b00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005b04:	f7fc bcf4 	b.w	80024f0 <chEvtSignal>
	...

08005b10 <evt2_execute>:
 8005b10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b14:	2007      	movs	r0, #7
 8005b16:	b08d      	sub	sp, #52	; 0x34
 8005b18:	f7fc fcaa 	bl	8002470 <chEvtAddEvents>
 8005b1c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005b20:	f7fc fd26 	bl	8002570 <chEvtWaitOne>
 8005b24:	f1a0 0101 	sub.w	r1, r0, #1
 8005b28:	fab1 f181 	clz	r1, r1
 8005b2c:	0949      	lsrs	r1, r1, #5
 8005b2e:	2001      	movs	r0, #1
 8005b30:	f7fe f93e 	bl	8003db0 <_test_assert>
 8005b34:	b110      	cbz	r0, 8005b3c <evt2_execute+0x2c>
 8005b36:	b00d      	add	sp, #52	; 0x34
 8005b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b3c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005b40:	f7fc fd16 	bl	8002570 <chEvtWaitOne>
 8005b44:	f1a0 0102 	sub.w	r1, r0, #2
 8005b48:	fab1 f181 	clz	r1, r1
 8005b4c:	0949      	lsrs	r1, r1, #5
 8005b4e:	2002      	movs	r0, #2
 8005b50:	f7fe f92e 	bl	8003db0 <_test_assert>
 8005b54:	2800      	cmp	r0, #0
 8005b56:	d1ee      	bne.n	8005b36 <evt2_execute+0x26>
 8005b58:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005b5c:	f7fc fd08 	bl	8002570 <chEvtWaitOne>
 8005b60:	f1a0 0104 	sub.w	r1, r0, #4
 8005b64:	fab1 f181 	clz	r1, r1
 8005b68:	0949      	lsrs	r1, r1, #5
 8005b6a:	2003      	movs	r0, #3
 8005b6c:	f7fe f920 	bl	8003db0 <_test_assert>
 8005b70:	2800      	cmp	r0, #0
 8005b72:	d1e0      	bne.n	8005b36 <evt2_execute+0x26>
 8005b74:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005b78:	f7fc fc6a 	bl	8002450 <chEvtGetAndClearEvents>
 8005b7c:	fab0 f180 	clz	r1, r0
 8005b80:	0949      	lsrs	r1, r1, #5
 8005b82:	2004      	movs	r0, #4
 8005b84:	f7fe f914 	bl	8003db0 <_test_assert>
 8005b88:	4604      	mov	r4, r0
 8005b8a:	2800      	cmp	r0, #0
 8005b8c:	d1d3      	bne.n	8005b36 <evt2_execute+0x26>
 8005b8e:	f7fe f997 	bl	8003ec0 <test_wait_tick>
 8005b92:	f04f 0920 	mov.w	r9, #32
 8005b96:	f389 8811 	msr	BASEPRI, r9
 8005b9a:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 8005b9e:	f8d8 5024 	ldr.w	r5, [r8, #36]	; 0x24
 8005ba2:	f384 8811 	msr	BASEPRI, r4
 8005ba6:	4f76      	ldr	r7, [pc, #472]	; (8005d80 <evt2_execute+0x270>)
 8005ba8:	f8df a1f0 	ldr.w	sl, [pc, #496]	; 8005d9c <evt2_execute+0x28c>
 8005bac:	69b9      	ldr	r1, [r7, #24]
 8005bae:	f8da 6000 	ldr.w	r6, [sl]
 8005bb2:	688a      	ldr	r2, [r1, #8]
 8005bb4:	4b73      	ldr	r3, [pc, #460]	; (8005d84 <evt2_execute+0x274>)
 8005bb6:	9100      	str	r1, [sp, #0]
 8005bb8:	3a01      	subs	r2, #1
 8005bba:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005bbe:	4630      	mov	r0, r6
 8005bc0:	f7fb fee6 	bl	8001990 <chThdCreateStatic>
 8005bc4:	4c70      	ldr	r4, [pc, #448]	; (8005d88 <evt2_execute+0x278>)
 8005bc6:	6020      	str	r0, [r4, #0]
 8005bc8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005bcc:	f7fc fcd0 	bl	8002570 <chEvtWaitOne>
 8005bd0:	f205 2226 	addw	r2, r5, #550	; 0x226
 8005bd4:	4683      	mov	fp, r0
 8005bd6:	f505 71fa 	add.w	r1, r5, #500	; 0x1f4
 8005bda:	2005      	movs	r0, #5
 8005bdc:	f7fe f928 	bl	8003e30 <_test_assert_time_window>
 8005be0:	2800      	cmp	r0, #0
 8005be2:	d1a8      	bne.n	8005b36 <evt2_execute+0x26>
 8005be4:	f1ab 0101 	sub.w	r1, fp, #1
 8005be8:	fab1 f181 	clz	r1, r1
 8005bec:	0949      	lsrs	r1, r1, #5
 8005bee:	2006      	movs	r0, #6
 8005bf0:	f7fe f8de 	bl	8003db0 <_test_assert>
 8005bf4:	2800      	cmp	r0, #0
 8005bf6:	d19e      	bne.n	8005b36 <evt2_execute+0x26>
 8005bf8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005bfc:	f7fc fc28 	bl	8002450 <chEvtGetAndClearEvents>
 8005c00:	fab0 f180 	clz	r1, r0
 8005c04:	0949      	lsrs	r1, r1, #5
 8005c06:	2007      	movs	r0, #7
 8005c08:	f7fe f8d2 	bl	8003db0 <_test_assert>
 8005c0c:	2800      	cmp	r0, #0
 8005c0e:	d192      	bne.n	8005b36 <evt2_execute+0x26>
 8005c10:	f7fe f93e 	bl	8003e90 <test_wait_threads>
 8005c14:	2005      	movs	r0, #5
 8005c16:	f7fc fc2b 	bl	8002470 <chEvtAddEvents>
 8005c1a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005c1e:	f7fc fcc7 	bl	80025b0 <chEvtWaitAny>
 8005c22:	1f45      	subs	r5, r0, #5
 8005c24:	4269      	negs	r1, r5
 8005c26:	4169      	adcs	r1, r5
 8005c28:	2008      	movs	r0, #8
 8005c2a:	f7fe f8c1 	bl	8003db0 <_test_assert>
 8005c2e:	2800      	cmp	r0, #0
 8005c30:	d181      	bne.n	8005b36 <evt2_execute+0x26>
 8005c32:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005c36:	f7fc fc0b 	bl	8002450 <chEvtGetAndClearEvents>
 8005c3a:	fab0 f180 	clz	r1, r0
 8005c3e:	0949      	lsrs	r1, r1, #5
 8005c40:	2009      	movs	r0, #9
 8005c42:	f7fe f8b5 	bl	8003db0 <_test_assert>
 8005c46:	4683      	mov	fp, r0
 8005c48:	2800      	cmp	r0, #0
 8005c4a:	f47f af74 	bne.w	8005b36 <evt2_execute+0x26>
 8005c4e:	f7fe f937 	bl	8003ec0 <test_wait_tick>
 8005c52:	f389 8811 	msr	BASEPRI, r9
 8005c56:	f8d8 5024 	ldr.w	r5, [r8, #36]	; 0x24
 8005c5a:	f38b 8811 	msr	BASEPRI, fp
 8005c5e:	69b9      	ldr	r1, [r7, #24]
 8005c60:	4b48      	ldr	r3, [pc, #288]	; (8005d84 <evt2_execute+0x274>)
 8005c62:	688a      	ldr	r2, [r1, #8]
 8005c64:	9100      	str	r1, [sp, #0]
 8005c66:	3a01      	subs	r2, #1
 8005c68:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005c6c:	4630      	mov	r0, r6
 8005c6e:	f7fb fe8f 	bl	8001990 <chThdCreateStatic>
 8005c72:	6020      	str	r0, [r4, #0]
 8005c74:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005c78:	f7fc fc9a 	bl	80025b0 <chEvtWaitAny>
 8005c7c:	f205 2226 	addw	r2, r5, #550	; 0x226
 8005c80:	4606      	mov	r6, r0
 8005c82:	f505 71fa 	add.w	r1, r5, #500	; 0x1f4
 8005c86:	200a      	movs	r0, #10
 8005c88:	f7fe f8d2 	bl	8003e30 <_test_assert_time_window>
 8005c8c:	2800      	cmp	r0, #0
 8005c8e:	f47f af52 	bne.w	8005b36 <evt2_execute+0x26>
 8005c92:	1e70      	subs	r0, r6, #1
 8005c94:	4241      	negs	r1, r0
 8005c96:	4141      	adcs	r1, r0
 8005c98:	200b      	movs	r0, #11
 8005c9a:	f7fe f889 	bl	8003db0 <_test_assert>
 8005c9e:	2800      	cmp	r0, #0
 8005ca0:	f47f af49 	bne.w	8005b36 <evt2_execute+0x26>
 8005ca4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005ca8:	f7fc fbd2 	bl	8002450 <chEvtGetAndClearEvents>
 8005cac:	fab0 f180 	clz	r1, r0
 8005cb0:	0949      	lsrs	r1, r1, #5
 8005cb2:	200c      	movs	r0, #12
 8005cb4:	f7fe f87c 	bl	8003db0 <_test_assert>
 8005cb8:	4681      	mov	r9, r0
 8005cba:	2800      	cmp	r0, #0
 8005cbc:	f47f af3b 	bne.w	8005b36 <evt2_execute+0x26>
 8005cc0:	4e32      	ldr	r6, [pc, #200]	; (8005d8c <evt2_execute+0x27c>)
 8005cc2:	4d33      	ldr	r5, [pc, #204]	; (8005d90 <evt2_execute+0x280>)
 8005cc4:	f7fe f8e4 	bl	8003e90 <test_wait_threads>
 8005cc8:	4630      	mov	r0, r6
 8005cca:	a902      	add	r1, sp, #8
 8005ccc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8005cd0:	2201      	movs	r2, #1
 8005cd2:	6036      	str	r6, [r6, #0]
 8005cd4:	602d      	str	r5, [r5, #0]
 8005cd6:	f7fc fb8b 	bl	80023f0 <chEvtRegisterMaskWithFlags>
 8005cda:	4628      	mov	r0, r5
 8005cdc:	a907      	add	r1, sp, #28
 8005cde:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8005ce2:	2204      	movs	r2, #4
 8005ce4:	f7fc fb84 	bl	80023f0 <chEvtRegisterMaskWithFlags>
 8005ce8:	f7fe f8ea 	bl	8003ec0 <test_wait_tick>
 8005cec:	2320      	movs	r3, #32
 8005cee:	f383 8811 	msr	BASEPRI, r3
 8005cf2:	f8d8 8024 	ldr.w	r8, [r8, #36]	; 0x24
 8005cf6:	f389 8811 	msr	BASEPRI, r9
 8005cfa:	69ba      	ldr	r2, [r7, #24]
 8005cfc:	4b25      	ldr	r3, [pc, #148]	; (8005d94 <evt2_execute+0x284>)
 8005cfe:	6892      	ldr	r2, [r2, #8]
 8005d00:	f8da 0000 	ldr.w	r0, [sl]
 8005d04:	9300      	str	r3, [sp, #0]
 8005d06:	3a01      	subs	r2, #1
 8005d08:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005d0c:	4b22      	ldr	r3, [pc, #136]	; (8005d98 <evt2_execute+0x288>)
 8005d0e:	f7fb fe3f 	bl	8001990 <chThdCreateStatic>
 8005d12:	6020      	str	r0, [r4, #0]
 8005d14:	2005      	movs	r0, #5
 8005d16:	f7fc fc6b 	bl	80025f0 <chEvtWaitAll>
 8005d1a:	f208 2226 	addw	r2, r8, #550	; 0x226
 8005d1e:	f508 71fa 	add.w	r1, r8, #500	; 0x1f4
 8005d22:	200d      	movs	r0, #13
 8005d24:	f7fe f884 	bl	8003e30 <_test_assert_time_window>
 8005d28:	2800      	cmp	r0, #0
 8005d2a:	f47f af04 	bne.w	8005b36 <evt2_execute+0x26>
 8005d2e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005d32:	f7fc fb8d 	bl	8002450 <chEvtGetAndClearEvents>
 8005d36:	fab0 f180 	clz	r1, r0
 8005d3a:	0949      	lsrs	r1, r1, #5
 8005d3c:	200e      	movs	r0, #14
 8005d3e:	f7fe f837 	bl	8003db0 <_test_assert>
 8005d42:	2800      	cmp	r0, #0
 8005d44:	f47f aef7 	bne.w	8005b36 <evt2_execute+0x26>
 8005d48:	f7fe f8a2 	bl	8003e90 <test_wait_threads>
 8005d4c:	a902      	add	r1, sp, #8
 8005d4e:	4630      	mov	r0, r6
 8005d50:	f7fc fb66 	bl	8002420 <chEvtUnregister>
 8005d54:	a907      	add	r1, sp, #28
 8005d56:	4628      	mov	r0, r5
 8005d58:	f7fc fb62 	bl	8002420 <chEvtUnregister>
 8005d5c:	6831      	ldr	r1, [r6, #0]
 8005d5e:	1b8a      	subs	r2, r1, r6
 8005d60:	4251      	negs	r1, r2
 8005d62:	4151      	adcs	r1, r2
 8005d64:	200f      	movs	r0, #15
 8005d66:	f7fe f823 	bl	8003db0 <_test_assert>
 8005d6a:	2800      	cmp	r0, #0
 8005d6c:	f47f aee3 	bne.w	8005b36 <evt2_execute+0x26>
 8005d70:	6829      	ldr	r1, [r5, #0]
 8005d72:	1b4b      	subs	r3, r1, r5
 8005d74:	4259      	negs	r1, r3
 8005d76:	4159      	adcs	r1, r3
 8005d78:	2010      	movs	r0, #16
 8005d7a:	f7fe f819 	bl	8003db0 <_test_assert>
 8005d7e:	e6da      	b.n	8005b36 <evt2_execute+0x26>
 8005d80:	20000ce8 	.word	0x20000ce8
 8005d84:	08005af1 	.word	0x08005af1
 8005d88:	20001654 	.word	0x20001654
 8005d8c:	2000085c 	.word	0x2000085c
 8005d90:	20000860 	.word	0x20000860
 8005d94:	08007fbc 	.word	0x08007fbc
 8005d98:	08005ac1 	.word	0x08005ac1
 8005d9c:	08007ec0 	.word	0x08007ec0

08005da0 <evt3_execute>:
 8005da0:	b508      	push	{r3, lr}
 8005da2:	2100      	movs	r1, #0
 8005da4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005da8:	f7fc fc42 	bl	8002630 <chEvtWaitOneTimeout>
 8005dac:	fab0 f180 	clz	r1, r0
 8005db0:	0949      	lsrs	r1, r1, #5
 8005db2:	2001      	movs	r0, #1
 8005db4:	f7fd fffc 	bl	8003db0 <_test_assert>
 8005db8:	b100      	cbz	r0, 8005dbc <evt3_execute+0x1c>
 8005dba:	bd08      	pop	{r3, pc}
 8005dbc:	4601      	mov	r1, r0
 8005dbe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005dc2:	f7fc fc5d 	bl	8002680 <chEvtWaitAnyTimeout>
 8005dc6:	fab0 f180 	clz	r1, r0
 8005dca:	0949      	lsrs	r1, r1, #5
 8005dcc:	2002      	movs	r0, #2
 8005dce:	f7fd ffef 	bl	8003db0 <_test_assert>
 8005dd2:	2800      	cmp	r0, #0
 8005dd4:	d1f1      	bne.n	8005dba <evt3_execute+0x1a>
 8005dd6:	4601      	mov	r1, r0
 8005dd8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005ddc:	f7fc fc78 	bl	80026d0 <chEvtWaitAllTimeout>
 8005de0:	fab0 f180 	clz	r1, r0
 8005de4:	0949      	lsrs	r1, r1, #5
 8005de6:	2003      	movs	r0, #3
 8005de8:	f7fd ffe2 	bl	8003db0 <_test_assert>
 8005dec:	2800      	cmp	r0, #0
 8005dee:	d1e4      	bne.n	8005dba <evt3_execute+0x1a>
 8005df0:	210a      	movs	r1, #10
 8005df2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005df6:	f7fc fc1b 	bl	8002630 <chEvtWaitOneTimeout>
 8005dfa:	fab0 f180 	clz	r1, r0
 8005dfe:	0949      	lsrs	r1, r1, #5
 8005e00:	2004      	movs	r0, #4
 8005e02:	f7fd ffd5 	bl	8003db0 <_test_assert>
 8005e06:	2800      	cmp	r0, #0
 8005e08:	d1d7      	bne.n	8005dba <evt3_execute+0x1a>
 8005e0a:	210a      	movs	r1, #10
 8005e0c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005e10:	f7fc fc36 	bl	8002680 <chEvtWaitAnyTimeout>
 8005e14:	fab0 f180 	clz	r1, r0
 8005e18:	0949      	lsrs	r1, r1, #5
 8005e1a:	2005      	movs	r0, #5
 8005e1c:	f7fd ffc8 	bl	8003db0 <_test_assert>
 8005e20:	2800      	cmp	r0, #0
 8005e22:	d1ca      	bne.n	8005dba <evt3_execute+0x1a>
 8005e24:	210a      	movs	r1, #10
 8005e26:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005e2a:	f7fc fc51 	bl	80026d0 <chEvtWaitAllTimeout>
 8005e2e:	fab0 f180 	clz	r1, r0
 8005e32:	0949      	lsrs	r1, r1, #5
 8005e34:	2006      	movs	r0, #6
 8005e36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005e3a:	f7fd bfb9 	b.w	8003db0 <_test_assert>
 8005e3e:	bf00      	nop

08005e40 <heap1_execute>:
 8005e40:	b570      	push	{r4, r5, r6, lr}
 8005e42:	b082      	sub	sp, #8
 8005e44:	f7fc ff5c 	bl	8002d00 <chCoreGetStatusX>
 8005e48:	a901      	add	r1, sp, #4
 8005e4a:	2000      	movs	r0, #0
 8005e4c:	f7fd f818 	bl	8002e80 <chHeapStatus>
 8005e50:	2110      	movs	r1, #16
 8005e52:	2000      	movs	r0, #0
 8005e54:	f7fc ff84 	bl	8002d60 <chHeapAlloc>
 8005e58:	1c01      	adds	r1, r0, #0
 8005e5a:	4605      	mov	r5, r0
 8005e5c:	bf18      	it	ne
 8005e5e:	2101      	movne	r1, #1
 8005e60:	2001      	movs	r0, #1
 8005e62:	f7fd ffa5 	bl	8003db0 <_test_assert>
 8005e66:	b108      	cbz	r0, 8005e6c <heap1_execute+0x2c>
 8005e68:	b002      	add	sp, #8
 8005e6a:	bd70      	pop	{r4, r5, r6, pc}
 8005e6c:	4604      	mov	r4, r0
 8005e6e:	4628      	mov	r0, r5
 8005e70:	f7fc ffbe 	bl	8002df0 <chHeapFree>
 8005e74:	f06f 01ff 	mvn.w	r1, #255	; 0xff
 8005e78:	4620      	mov	r0, r4
 8005e7a:	f7fc ff71 	bl	8002d60 <chHeapAlloc>
 8005e7e:	fab0 f180 	clz	r1, r0
 8005e82:	0949      	lsrs	r1, r1, #5
 8005e84:	2002      	movs	r0, #2
 8005e86:	f7fd ff93 	bl	8003db0 <_test_assert>
 8005e8a:	2800      	cmp	r0, #0
 8005e8c:	d1ec      	bne.n	8005e68 <heap1_execute+0x28>
 8005e8e:	a901      	add	r1, sp, #4
 8005e90:	487c      	ldr	r0, [pc, #496]	; (8006084 <heap1_execute+0x244>)
 8005e92:	f7fc fff5 	bl	8002e80 <chHeapStatus>
 8005e96:	2110      	movs	r1, #16
 8005e98:	487a      	ldr	r0, [pc, #488]	; (8006084 <heap1_execute+0x244>)
 8005e9a:	f7fc ff61 	bl	8002d60 <chHeapAlloc>
 8005e9e:	2110      	movs	r1, #16
 8005ea0:	4606      	mov	r6, r0
 8005ea2:	4878      	ldr	r0, [pc, #480]	; (8006084 <heap1_execute+0x244>)
 8005ea4:	f7fc ff5c 	bl	8002d60 <chHeapAlloc>
 8005ea8:	2110      	movs	r1, #16
 8005eaa:	4605      	mov	r5, r0
 8005eac:	4875      	ldr	r0, [pc, #468]	; (8006084 <heap1_execute+0x244>)
 8005eae:	f7fc ff57 	bl	8002d60 <chHeapAlloc>
 8005eb2:	4604      	mov	r4, r0
 8005eb4:	4630      	mov	r0, r6
 8005eb6:	f7fc ff9b 	bl	8002df0 <chHeapFree>
 8005eba:	4628      	mov	r0, r5
 8005ebc:	f7fc ff98 	bl	8002df0 <chHeapFree>
 8005ec0:	4620      	mov	r0, r4
 8005ec2:	f7fc ff95 	bl	8002df0 <chHeapFree>
 8005ec6:	4669      	mov	r1, sp
 8005ec8:	486e      	ldr	r0, [pc, #440]	; (8006084 <heap1_execute+0x244>)
 8005eca:	f7fc ffd9 	bl	8002e80 <chHeapStatus>
 8005ece:	f1a0 0101 	sub.w	r1, r0, #1
 8005ed2:	fab1 f181 	clz	r1, r1
 8005ed6:	0949      	lsrs	r1, r1, #5
 8005ed8:	2003      	movs	r0, #3
 8005eda:	f7fd ff69 	bl	8003db0 <_test_assert>
 8005ede:	2800      	cmp	r0, #0
 8005ee0:	d1c2      	bne.n	8005e68 <heap1_execute+0x28>
 8005ee2:	2110      	movs	r1, #16
 8005ee4:	4867      	ldr	r0, [pc, #412]	; (8006084 <heap1_execute+0x244>)
 8005ee6:	f7fc ff3b 	bl	8002d60 <chHeapAlloc>
 8005eea:	2110      	movs	r1, #16
 8005eec:	4604      	mov	r4, r0
 8005eee:	4865      	ldr	r0, [pc, #404]	; (8006084 <heap1_execute+0x244>)
 8005ef0:	f7fc ff36 	bl	8002d60 <chHeapAlloc>
 8005ef4:	2110      	movs	r1, #16
 8005ef6:	4605      	mov	r5, r0
 8005ef8:	4862      	ldr	r0, [pc, #392]	; (8006084 <heap1_execute+0x244>)
 8005efa:	f7fc ff31 	bl	8002d60 <chHeapAlloc>
 8005efe:	f7fc ff77 	bl	8002df0 <chHeapFree>
 8005f02:	4628      	mov	r0, r5
 8005f04:	f7fc ff74 	bl	8002df0 <chHeapFree>
 8005f08:	4620      	mov	r0, r4
 8005f0a:	f7fc ff71 	bl	8002df0 <chHeapFree>
 8005f0e:	4669      	mov	r1, sp
 8005f10:	485c      	ldr	r0, [pc, #368]	; (8006084 <heap1_execute+0x244>)
 8005f12:	f7fc ffb5 	bl	8002e80 <chHeapStatus>
 8005f16:	f1a0 0101 	sub.w	r1, r0, #1
 8005f1a:	fab1 f181 	clz	r1, r1
 8005f1e:	0949      	lsrs	r1, r1, #5
 8005f20:	2004      	movs	r0, #4
 8005f22:	f7fd ff45 	bl	8003db0 <_test_assert>
 8005f26:	2800      	cmp	r0, #0
 8005f28:	d19e      	bne.n	8005e68 <heap1_execute+0x28>
 8005f2a:	2111      	movs	r1, #17
 8005f2c:	4855      	ldr	r0, [pc, #340]	; (8006084 <heap1_execute+0x244>)
 8005f2e:	f7fc ff17 	bl	8002d60 <chHeapAlloc>
 8005f32:	2110      	movs	r1, #16
 8005f34:	4604      	mov	r4, r0
 8005f36:	4853      	ldr	r0, [pc, #332]	; (8006084 <heap1_execute+0x244>)
 8005f38:	f7fc ff12 	bl	8002d60 <chHeapAlloc>
 8005f3c:	4605      	mov	r5, r0
 8005f3e:	4620      	mov	r0, r4
 8005f40:	f7fc ff56 	bl	8002df0 <chHeapFree>
 8005f44:	4669      	mov	r1, sp
 8005f46:	484f      	ldr	r0, [pc, #316]	; (8006084 <heap1_execute+0x244>)
 8005f48:	f7fc ff9a 	bl	8002e80 <chHeapStatus>
 8005f4c:	f1a0 0102 	sub.w	r1, r0, #2
 8005f50:	fab1 f181 	clz	r1, r1
 8005f54:	0949      	lsrs	r1, r1, #5
 8005f56:	2005      	movs	r0, #5
 8005f58:	f7fd ff2a 	bl	8003db0 <_test_assert>
 8005f5c:	2800      	cmp	r0, #0
 8005f5e:	d183      	bne.n	8005e68 <heap1_execute+0x28>
 8005f60:	2110      	movs	r1, #16
 8005f62:	4848      	ldr	r0, [pc, #288]	; (8006084 <heap1_execute+0x244>)
 8005f64:	f7fc fefc 	bl	8002d60 <chHeapAlloc>
 8005f68:	4669      	mov	r1, sp
 8005f6a:	4604      	mov	r4, r0
 8005f6c:	4845      	ldr	r0, [pc, #276]	; (8006084 <heap1_execute+0x244>)
 8005f6e:	f7fc ff87 	bl	8002e80 <chHeapStatus>
 8005f72:	2801      	cmp	r0, #1
 8005f74:	f000 8083 	beq.w	800607e <heap1_execute+0x23e>
 8005f78:	4669      	mov	r1, sp
 8005f7a:	4842      	ldr	r0, [pc, #264]	; (8006084 <heap1_execute+0x244>)
 8005f7c:	f7fc ff80 	bl	8002e80 <chHeapStatus>
 8005f80:	f1a0 0102 	sub.w	r1, r0, #2
 8005f84:	fab1 f181 	clz	r1, r1
 8005f88:	0949      	lsrs	r1, r1, #5
 8005f8a:	2006      	movs	r0, #6
 8005f8c:	f7fd ff10 	bl	8003db0 <_test_assert>
 8005f90:	2800      	cmp	r0, #0
 8005f92:	f47f af69 	bne.w	8005e68 <heap1_execute+0x28>
 8005f96:	4628      	mov	r0, r5
 8005f98:	f7fc ff2a 	bl	8002df0 <chHeapFree>
 8005f9c:	4620      	mov	r0, r4
 8005f9e:	f7fc ff27 	bl	8002df0 <chHeapFree>
 8005fa2:	4669      	mov	r1, sp
 8005fa4:	4837      	ldr	r0, [pc, #220]	; (8006084 <heap1_execute+0x244>)
 8005fa6:	f7fc ff6b 	bl	8002e80 <chHeapStatus>
 8005faa:	f1a0 0101 	sub.w	r1, r0, #1
 8005fae:	fab1 f181 	clz	r1, r1
 8005fb2:	0949      	lsrs	r1, r1, #5
 8005fb4:	2007      	movs	r0, #7
 8005fb6:	f7fd fefb 	bl	8003db0 <_test_assert>
 8005fba:	2800      	cmp	r0, #0
 8005fbc:	f47f af54 	bne.w	8005e68 <heap1_execute+0x28>
 8005fc0:	2110      	movs	r1, #16
 8005fc2:	4830      	ldr	r0, [pc, #192]	; (8006084 <heap1_execute+0x244>)
 8005fc4:	f7fc fecc 	bl	8002d60 <chHeapAlloc>
 8005fc8:	2110      	movs	r1, #16
 8005fca:	4605      	mov	r5, r0
 8005fcc:	482d      	ldr	r0, [pc, #180]	; (8006084 <heap1_execute+0x244>)
 8005fce:	f7fc fec7 	bl	8002d60 <chHeapAlloc>
 8005fd2:	4604      	mov	r4, r0
 8005fd4:	4628      	mov	r0, r5
 8005fd6:	f7fc ff0b 	bl	8002df0 <chHeapFree>
 8005fda:	4669      	mov	r1, sp
 8005fdc:	4829      	ldr	r0, [pc, #164]	; (8006084 <heap1_execute+0x244>)
 8005fde:	f7fc ff4f 	bl	8002e80 <chHeapStatus>
 8005fe2:	1e85      	subs	r5, r0, #2
 8005fe4:	4269      	negs	r1, r5
 8005fe6:	4169      	adcs	r1, r5
 8005fe8:	2008      	movs	r0, #8
 8005fea:	f7fd fee1 	bl	8003db0 <_test_assert>
 8005fee:	2800      	cmp	r0, #0
 8005ff0:	f47f af3a 	bne.w	8005e68 <heap1_execute+0x28>
 8005ff4:	2120      	movs	r1, #32
 8005ff6:	4823      	ldr	r0, [pc, #140]	; (8006084 <heap1_execute+0x244>)
 8005ff8:	f7fc feb2 	bl	8002d60 <chHeapAlloc>
 8005ffc:	f7fc fef8 	bl	8002df0 <chHeapFree>
 8006000:	4620      	mov	r0, r4
 8006002:	f7fc fef5 	bl	8002df0 <chHeapFree>
 8006006:	4669      	mov	r1, sp
 8006008:	481e      	ldr	r0, [pc, #120]	; (8006084 <heap1_execute+0x244>)
 800600a:	f7fc ff39 	bl	8002e80 <chHeapStatus>
 800600e:	3801      	subs	r0, #1
 8006010:	4241      	negs	r1, r0
 8006012:	4141      	adcs	r1, r0
 8006014:	2009      	movs	r0, #9
 8006016:	f7fd fecb 	bl	8003db0 <_test_assert>
 800601a:	2800      	cmp	r0, #0
 800601c:	f47f af24 	bne.w	8005e68 <heap1_execute+0x28>
 8006020:	4669      	mov	r1, sp
 8006022:	4818      	ldr	r0, [pc, #96]	; (8006084 <heap1_execute+0x244>)
 8006024:	f7fc ff2c 	bl	8002e80 <chHeapStatus>
 8006028:	9900      	ldr	r1, [sp, #0]
 800602a:	4816      	ldr	r0, [pc, #88]	; (8006084 <heap1_execute+0x244>)
 800602c:	f7fc fe98 	bl	8002d60 <chHeapAlloc>
 8006030:	4669      	mov	r1, sp
 8006032:	4604      	mov	r4, r0
 8006034:	4813      	ldr	r0, [pc, #76]	; (8006084 <heap1_execute+0x244>)
 8006036:	f7fc ff23 	bl	8002e80 <chHeapStatus>
 800603a:	fab0 f180 	clz	r1, r0
 800603e:	0949      	lsrs	r1, r1, #5
 8006040:	200a      	movs	r0, #10
 8006042:	f7fd feb5 	bl	8003db0 <_test_assert>
 8006046:	2800      	cmp	r0, #0
 8006048:	f47f af0e 	bne.w	8005e68 <heap1_execute+0x28>
 800604c:	4620      	mov	r0, r4
 800604e:	f7fc fecf 	bl	8002df0 <chHeapFree>
 8006052:	4669      	mov	r1, sp
 8006054:	480b      	ldr	r0, [pc, #44]	; (8006084 <heap1_execute+0x244>)
 8006056:	f7fc ff13 	bl	8002e80 <chHeapStatus>
 800605a:	1e42      	subs	r2, r0, #1
 800605c:	4251      	negs	r1, r2
 800605e:	4151      	adcs	r1, r2
 8006060:	200b      	movs	r0, #11
 8006062:	f7fd fea5 	bl	8003db0 <_test_assert>
 8006066:	2800      	cmp	r0, #0
 8006068:	f47f aefe 	bne.w	8005e68 <heap1_execute+0x28>
 800606c:	e9dd 1300 	ldrd	r1, r3, [sp]
 8006070:	1acb      	subs	r3, r1, r3
 8006072:	4259      	negs	r1, r3
 8006074:	4159      	adcs	r1, r3
 8006076:	200c      	movs	r0, #12
 8006078:	f7fd fe9a 	bl	8003db0 <_test_assert>
 800607c:	e6f4      	b.n	8005e68 <heap1_execute+0x28>
 800607e:	4601      	mov	r1, r0
 8006080:	e783      	b.n	8005f8a <heap1_execute+0x14a>
 8006082:	bf00      	nop
 8006084:	20001690 	.word	0x20001690
	...

08006090 <heap1_setup>:
 8006090:	f44f 62cd 	mov.w	r2, #1640	; 0x668
 8006094:	4901      	ldr	r1, [pc, #4]	; (800609c <heap1_setup+0xc>)
 8006096:	4802      	ldr	r0, [pc, #8]	; (80060a0 <heap1_setup+0x10>)
 8006098:	f7fc be52 	b.w	8002d40 <chHeapObjectInit>
 800609c:	20000fe8 	.word	0x20000fe8
 80060a0:	20001690 	.word	0x20001690
	...

080060b0 <null_provider>:
 80060b0:	2000      	movs	r0, #0
 80060b2:	4770      	bx	lr
	...

080060c0 <pools1_setup>:
 80060c0:	2200      	movs	r2, #0
 80060c2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80060c6:	4801      	ldr	r0, [pc, #4]	; (80060cc <pools1_setup+0xc>)
 80060c8:	f7fc bf02 	b.w	8002ed0 <chPoolObjectInit>
 80060cc:	20000864 	.word	0x20000864

080060d0 <pools1_execute>:
 80060d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80060d2:	4b2d      	ldr	r3, [pc, #180]	; (8006188 <pools1_execute+0xb8>)
 80060d4:	482d      	ldr	r0, [pc, #180]	; (800618c <pools1_execute+0xbc>)
 80060d6:	681d      	ldr	r5, [r3, #0]
 80060d8:	2205      	movs	r2, #5
 80060da:	4629      	mov	r1, r5
 80060dc:	4606      	mov	r6, r0
 80060de:	f7fc feff 	bl	8002ee0 <chPoolLoadArray>
 80060e2:	2405      	movs	r4, #5
 80060e4:	4630      	mov	r0, r6
 80060e6:	f7fc ff13 	bl	8002f10 <chPoolAlloc>
 80060ea:	1c01      	adds	r1, r0, #0
 80060ec:	bf18      	it	ne
 80060ee:	2101      	movne	r1, #1
 80060f0:	2001      	movs	r0, #1
 80060f2:	f7fd fe5d 	bl	8003db0 <_test_assert>
 80060f6:	bba8      	cbnz	r0, 8006164 <pools1_execute+0x94>
 80060f8:	3c01      	subs	r4, #1
 80060fa:	d1f3      	bne.n	80060e4 <pools1_execute+0x14>
 80060fc:	4823      	ldr	r0, [pc, #140]	; (800618c <pools1_execute+0xbc>)
 80060fe:	f7fc ff07 	bl	8002f10 <chPoolAlloc>
 8006102:	fab0 f180 	clz	r1, r0
 8006106:	0949      	lsrs	r1, r1, #5
 8006108:	2002      	movs	r0, #2
 800610a:	f7fd fe51 	bl	8003db0 <_test_assert>
 800610e:	bb48      	cbnz	r0, 8006164 <pools1_execute+0x94>
 8006110:	4c1f      	ldr	r4, [pc, #124]	; (8006190 <pools1_execute+0xc0>)
 8006112:	4f1e      	ldr	r7, [pc, #120]	; (800618c <pools1_execute+0xbc>)
 8006114:	f104 0610 	add.w	r6, r4, #16
 8006118:	4629      	mov	r1, r5
 800611a:	4638      	mov	r0, r7
 800611c:	f7fc ff10 	bl	8002f40 <chPoolFree>
 8006120:	42a6      	cmp	r6, r4
 8006122:	d007      	beq.n	8006134 <pools1_execute+0x64>
 8006124:	f854 5b04 	ldr.w	r5, [r4], #4
 8006128:	4638      	mov	r0, r7
 800612a:	4629      	mov	r1, r5
 800612c:	f7fc ff08 	bl	8002f40 <chPoolFree>
 8006130:	42a6      	cmp	r6, r4
 8006132:	d1f7      	bne.n	8006124 <pools1_execute+0x54>
 8006134:	4d15      	ldr	r5, [pc, #84]	; (800618c <pools1_execute+0xbc>)
 8006136:	2405      	movs	r4, #5
 8006138:	4628      	mov	r0, r5
 800613a:	f7fc fee9 	bl	8002f10 <chPoolAlloc>
 800613e:	1c01      	adds	r1, r0, #0
 8006140:	bf18      	it	ne
 8006142:	2101      	movne	r1, #1
 8006144:	2003      	movs	r0, #3
 8006146:	f7fd fe33 	bl	8003db0 <_test_assert>
 800614a:	b958      	cbnz	r0, 8006164 <pools1_execute+0x94>
 800614c:	3c01      	subs	r4, #1
 800614e:	d1f3      	bne.n	8006138 <pools1_execute+0x68>
 8006150:	480e      	ldr	r0, [pc, #56]	; (800618c <pools1_execute+0xbc>)
 8006152:	f7fc fedd 	bl	8002f10 <chPoolAlloc>
 8006156:	fab0 f180 	clz	r1, r0
 800615a:	0949      	lsrs	r1, r1, #5
 800615c:	2004      	movs	r0, #4
 800615e:	f7fd fe27 	bl	8003db0 <_test_assert>
 8006162:	b100      	cbz	r0, 8006166 <pools1_execute+0x96>
 8006164:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006166:	2110      	movs	r1, #16
 8006168:	4a0a      	ldr	r2, [pc, #40]	; (8006194 <pools1_execute+0xc4>)
 800616a:	4808      	ldr	r0, [pc, #32]	; (800618c <pools1_execute+0xbc>)
 800616c:	f7fc feb0 	bl	8002ed0 <chPoolObjectInit>
 8006170:	4806      	ldr	r0, [pc, #24]	; (800618c <pools1_execute+0xbc>)
 8006172:	f7fc fecd 	bl	8002f10 <chPoolAlloc>
 8006176:	fab0 f180 	clz	r1, r0
 800617a:	0949      	lsrs	r1, r1, #5
 800617c:	2005      	movs	r0, #5
 800617e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8006182:	f7fd be15 	b.w	8003db0 <_test_assert>
 8006186:	bf00      	nop
 8006188:	08007ec0 	.word	0x08007ec0
 800618c:	20000864 	.word	0x20000864
 8006190:	08007ec4 	.word	0x08007ec4
 8006194:	080060b1 	.word	0x080060b1
	...

080061a0 <dyn1_execute>:
 80061a0:	b570      	push	{r4, r5, r6, lr}
 80061a2:	4b34      	ldr	r3, [pc, #208]	; (8006274 <dyn1_execute+0xd4>)
 80061a4:	4834      	ldr	r0, [pc, #208]	; (8006278 <dyn1_execute+0xd8>)
 80061a6:	699b      	ldr	r3, [r3, #24]
 80061a8:	4c34      	ldr	r4, [pc, #208]	; (800627c <dyn1_execute+0xdc>)
 80061aa:	689d      	ldr	r5, [r3, #8]
 80061ac:	b084      	sub	sp, #16
 80061ae:	a903      	add	r1, sp, #12
 80061b0:	f7fc fe66 	bl	8002e80 <chHeapStatus>
 80061b4:	4b32      	ldr	r3, [pc, #200]	; (8006280 <dyn1_execute+0xe0>)
 80061b6:	9300      	str	r3, [sp, #0]
 80061b8:	1e6a      	subs	r2, r5, #1
 80061ba:	4b32      	ldr	r3, [pc, #200]	; (8006284 <dyn1_execute+0xe4>)
 80061bc:	482e      	ldr	r0, [pc, #184]	; (8006278 <dyn1_execute+0xd8>)
 80061be:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80061c2:	f7fb fd95 	bl	8001cf0 <chThdCreateFromHeap>
 80061c6:	4b30      	ldr	r3, [pc, #192]	; (8006288 <dyn1_execute+0xe8>)
 80061c8:	6020      	str	r0, [r4, #0]
 80061ca:	1eaa      	subs	r2, r5, #2
 80061cc:	9300      	str	r3, [sp, #0]
 80061ce:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80061d2:	4b2c      	ldr	r3, [pc, #176]	; (8006284 <dyn1_execute+0xe4>)
 80061d4:	4828      	ldr	r0, [pc, #160]	; (8006278 <dyn1_execute+0xd8>)
 80061d6:	f7fb fd8b 	bl	8001cf0 <chThdCreateFromHeap>
 80061da:	a902      	add	r1, sp, #8
 80061dc:	6060      	str	r0, [r4, #4]
 80061de:	4826      	ldr	r0, [pc, #152]	; (8006278 <dyn1_execute+0xd8>)
 80061e0:	f7fc fe4e 	bl	8002e80 <chHeapStatus>
 80061e4:	9902      	ldr	r1, [sp, #8]
 80061e6:	4824      	ldr	r0, [pc, #144]	; (8006278 <dyn1_execute+0xd8>)
 80061e8:	f7fc fdba 	bl	8002d60 <chHeapAlloc>
 80061ec:	4b27      	ldr	r3, [pc, #156]	; (800628c <dyn1_execute+0xec>)
 80061ee:	9300      	str	r3, [sp, #0]
 80061f0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80061f4:	4606      	mov	r6, r0
 80061f6:	1eea      	subs	r2, r5, #3
 80061f8:	4b22      	ldr	r3, [pc, #136]	; (8006284 <dyn1_execute+0xe4>)
 80061fa:	481f      	ldr	r0, [pc, #124]	; (8006278 <dyn1_execute+0xd8>)
 80061fc:	f7fb fd78 	bl	8001cf0 <chThdCreateFromHeap>
 8006200:	60a0      	str	r0, [r4, #8]
 8006202:	4630      	mov	r0, r6
 8006204:	f7fc fdf4 	bl	8002df0 <chHeapFree>
 8006208:	6821      	ldr	r1, [r4, #0]
 800620a:	b121      	cbz	r1, 8006216 <dyn1_execute+0x76>
 800620c:	6861      	ldr	r1, [r4, #4]
 800620e:	b111      	cbz	r1, 8006216 <dyn1_execute+0x76>
 8006210:	68a1      	ldr	r1, [r4, #8]
 8006212:	b331      	cbz	r1, 8006262 <dyn1_execute+0xc2>
 8006214:	2100      	movs	r1, #0
 8006216:	2001      	movs	r0, #1
 8006218:	f7fd fdca 	bl	8003db0 <_test_assert>
 800621c:	b108      	cbz	r0, 8006222 <dyn1_execute+0x82>
 800621e:	b004      	add	sp, #16
 8006220:	bd70      	pop	{r4, r5, r6, pc}
 8006222:	f7fd fe35 	bl	8003e90 <test_wait_threads>
 8006226:	491a      	ldr	r1, [pc, #104]	; (8006290 <dyn1_execute+0xf0>)
 8006228:	2002      	movs	r0, #2
 800622a:	f7fd fdd9 	bl	8003de0 <_test_assert_sequence>
 800622e:	2800      	cmp	r0, #0
 8006230:	d1f5      	bne.n	800621e <dyn1_execute+0x7e>
 8006232:	a902      	add	r1, sp, #8
 8006234:	4810      	ldr	r0, [pc, #64]	; (8006278 <dyn1_execute+0xd8>)
 8006236:	f7fc fe23 	bl	8002e80 <chHeapStatus>
 800623a:	f1a0 0101 	sub.w	r1, r0, #1
 800623e:	fab1 f181 	clz	r1, r1
 8006242:	0949      	lsrs	r1, r1, #5
 8006244:	2003      	movs	r0, #3
 8006246:	f7fd fdb3 	bl	8003db0 <_test_assert>
 800624a:	2800      	cmp	r0, #0
 800624c:	d1e7      	bne.n	800621e <dyn1_execute+0x7e>
 800624e:	e9dd 1302 	ldrd	r1, r3, [sp, #8]
 8006252:	1ac9      	subs	r1, r1, r3
 8006254:	fab1 f181 	clz	r1, r1
 8006258:	0949      	lsrs	r1, r1, #5
 800625a:	2004      	movs	r0, #4
 800625c:	f7fd fda8 	bl	8003db0 <_test_assert>
 8006260:	e7dd      	b.n	800621e <dyn1_execute+0x7e>
 8006262:	68e3      	ldr	r3, [r4, #12]
 8006264:	2b00      	cmp	r3, #0
 8006266:	d1d6      	bne.n	8006216 <dyn1_execute+0x76>
 8006268:	6921      	ldr	r1, [r4, #16]
 800626a:	fab1 f181 	clz	r1, r1
 800626e:	0949      	lsrs	r1, r1, #5
 8006270:	e7d1      	b.n	8006216 <dyn1_execute+0x76>
 8006272:	bf00      	nop
 8006274:	20000ce8 	.word	0x20000ce8
 8006278:	200016b0 	.word	0x200016b0
 800627c:	20001654 	.word	0x20001654
 8006280:	08007fbc 	.word	0x08007fbc
 8006284:	080062a1 	.word	0x080062a1
 8006288:	08007fb8 	.word	0x08007fb8
 800628c:	08007fb4 	.word	0x08007fb4
 8006290:	08008380 	.word	0x08008380
	...

080062a0 <thread>:
 80062a0:	7800      	ldrb	r0, [r0, #0]
 80062a2:	f7fd bd75 	b.w	8003d90 <test_emit_token>
 80062a6:	bf00      	nop
	...

080062b0 <dyn1_setup>:
 80062b0:	f44f 62cd 	mov.w	r2, #1640	; 0x668
 80062b4:	4901      	ldr	r1, [pc, #4]	; (80062bc <dyn1_setup+0xc>)
 80062b6:	4802      	ldr	r0, [pc, #8]	; (80062c0 <dyn1_setup+0x10>)
 80062b8:	f7fc bd42 	b.w	8002d40 <chHeapObjectInit>
 80062bc:	20000fe8 	.word	0x20000fe8
 80062c0:	200016b0 	.word	0x200016b0
	...

080062d0 <dyn3_setup>:
 80062d0:	f7ff bfee 	b.w	80062b0 <dyn1_setup>
	...

080062e0 <dyn2_execute>:
 80062e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80062e2:	4b32      	ldr	r3, [pc, #200]	; (80063ac <dyn2_execute+0xcc>)
 80062e4:	4c32      	ldr	r4, [pc, #200]	; (80063b0 <dyn2_execute+0xd0>)
 80062e6:	699b      	ldr	r3, [r3, #24]
 80062e8:	4f32      	ldr	r7, [pc, #200]	; (80063b4 <dyn2_execute+0xd4>)
 80062ea:	689d      	ldr	r5, [r3, #8]
 80062ec:	f104 0610 	add.w	r6, r4, #16
 80062f0:	f854 1b04 	ldr.w	r1, [r4], #4
 80062f4:	4638      	mov	r0, r7
 80062f6:	f7fc fe23 	bl	8002f40 <chPoolFree>
 80062fa:	42a6      	cmp	r6, r4
 80062fc:	d1f8      	bne.n	80062f0 <dyn2_execute+0x10>
 80062fe:	4b2e      	ldr	r3, [pc, #184]	; (80063b8 <dyn2_execute+0xd8>)
 8006300:	4a2e      	ldr	r2, [pc, #184]	; (80063bc <dyn2_execute+0xdc>)
 8006302:	482c      	ldr	r0, [pc, #176]	; (80063b4 <dyn2_execute+0xd4>)
 8006304:	4c2e      	ldr	r4, [pc, #184]	; (80063c0 <dyn2_execute+0xe0>)
 8006306:	1e69      	subs	r1, r5, #1
 8006308:	f7fb fd12 	bl	8001d30 <chThdCreateFromMemoryPool>
 800630c:	4b2d      	ldr	r3, [pc, #180]	; (80063c4 <dyn2_execute+0xe4>)
 800630e:	6020      	str	r0, [r4, #0]
 8006310:	4a2a      	ldr	r2, [pc, #168]	; (80063bc <dyn2_execute+0xdc>)
 8006312:	4828      	ldr	r0, [pc, #160]	; (80063b4 <dyn2_execute+0xd4>)
 8006314:	1ea9      	subs	r1, r5, #2
 8006316:	f7fb fd0b 	bl	8001d30 <chThdCreateFromMemoryPool>
 800631a:	4b2b      	ldr	r3, [pc, #172]	; (80063c8 <dyn2_execute+0xe8>)
 800631c:	6060      	str	r0, [r4, #4]
 800631e:	4a27      	ldr	r2, [pc, #156]	; (80063bc <dyn2_execute+0xdc>)
 8006320:	4824      	ldr	r0, [pc, #144]	; (80063b4 <dyn2_execute+0xd4>)
 8006322:	1ee9      	subs	r1, r5, #3
 8006324:	f7fb fd04 	bl	8001d30 <chThdCreateFromMemoryPool>
 8006328:	4b28      	ldr	r3, [pc, #160]	; (80063cc <dyn2_execute+0xec>)
 800632a:	60a0      	str	r0, [r4, #8]
 800632c:	4a23      	ldr	r2, [pc, #140]	; (80063bc <dyn2_execute+0xdc>)
 800632e:	4821      	ldr	r0, [pc, #132]	; (80063b4 <dyn2_execute+0xd4>)
 8006330:	1f29      	subs	r1, r5, #4
 8006332:	f7fb fcfd 	bl	8001d30 <chThdCreateFromMemoryPool>
 8006336:	1f69      	subs	r1, r5, #5
 8006338:	60e0      	str	r0, [r4, #12]
 800633a:	4b25      	ldr	r3, [pc, #148]	; (80063d0 <dyn2_execute+0xf0>)
 800633c:	4a1f      	ldr	r2, [pc, #124]	; (80063bc <dyn2_execute+0xdc>)
 800633e:	481d      	ldr	r0, [pc, #116]	; (80063b4 <dyn2_execute+0xd4>)
 8006340:	f7fb fcf6 	bl	8001d30 <chThdCreateFromMemoryPool>
 8006344:	6821      	ldr	r1, [r4, #0]
 8006346:	6120      	str	r0, [r4, #16]
 8006348:	b141      	cbz	r1, 800635c <dyn2_execute+0x7c>
 800634a:	6861      	ldr	r1, [r4, #4]
 800634c:	b131      	cbz	r1, 800635c <dyn2_execute+0x7c>
 800634e:	68a1      	ldr	r1, [r4, #8]
 8006350:	b121      	cbz	r1, 800635c <dyn2_execute+0x7c>
 8006352:	68e1      	ldr	r1, [r4, #12]
 8006354:	b111      	cbz	r1, 800635c <dyn2_execute+0x7c>
 8006356:	fab0 f180 	clz	r1, r0
 800635a:	0949      	lsrs	r1, r1, #5
 800635c:	2001      	movs	r0, #1
 800635e:	f7fd fd27 	bl	8003db0 <_test_assert>
 8006362:	b100      	cbz	r0, 8006366 <dyn2_execute+0x86>
 8006364:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006366:	f7fd fd93 	bl	8003e90 <test_wait_threads>
 800636a:	491a      	ldr	r1, [pc, #104]	; (80063d4 <dyn2_execute+0xf4>)
 800636c:	2002      	movs	r0, #2
 800636e:	f7fd fd37 	bl	8003de0 <_test_assert_sequence>
 8006372:	2800      	cmp	r0, #0
 8006374:	d1f6      	bne.n	8006364 <dyn2_execute+0x84>
 8006376:	4d0f      	ldr	r5, [pc, #60]	; (80063b4 <dyn2_execute+0xd4>)
 8006378:	2404      	movs	r4, #4
 800637a:	4628      	mov	r0, r5
 800637c:	f7fc fdc8 	bl	8002f10 <chPoolAlloc>
 8006380:	1c01      	adds	r1, r0, #0
 8006382:	bf18      	it	ne
 8006384:	2101      	movne	r1, #1
 8006386:	2003      	movs	r0, #3
 8006388:	f7fd fd12 	bl	8003db0 <_test_assert>
 800638c:	2800      	cmp	r0, #0
 800638e:	d1e9      	bne.n	8006364 <dyn2_execute+0x84>
 8006390:	3c01      	subs	r4, #1
 8006392:	d1f2      	bne.n	800637a <dyn2_execute+0x9a>
 8006394:	4807      	ldr	r0, [pc, #28]	; (80063b4 <dyn2_execute+0xd4>)
 8006396:	f7fc fdbb 	bl	8002f10 <chPoolAlloc>
 800639a:	fab0 f180 	clz	r1, r0
 800639e:	0949      	lsrs	r1, r1, #5
 80063a0:	2004      	movs	r0, #4
 80063a2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80063a6:	f7fd bd03 	b.w	8003db0 <_test_assert>
 80063aa:	bf00      	nop
 80063ac:	20000ce8 	.word	0x20000ce8
 80063b0:	08007ec0 	.word	0x08007ec0
 80063b4:	200016d0 	.word	0x200016d0
 80063b8:	08007fbc 	.word	0x08007fbc
 80063bc:	080062a1 	.word	0x080062a1
 80063c0:	20001654 	.word	0x20001654
 80063c4:	08007fb8 	.word	0x08007fb8
 80063c8:	08007fb4 	.word	0x08007fb4
 80063cc:	08007fb0 	.word	0x08007fb0
 80063d0:	08007fc4 	.word	0x08007fc4
 80063d4:	08008390 	.word	0x08008390
	...

080063e0 <dyn2_setup>:
 80063e0:	2200      	movs	r2, #0
 80063e2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80063e6:	4801      	ldr	r0, [pc, #4]	; (80063ec <dyn2_setup+0xc>)
 80063e8:	f7fc bd72 	b.w	8002ed0 <chPoolObjectInit>
 80063ec:	200016d0 	.word	0x200016d0

080063f0 <regfind>:
 80063f0:	b538      	push	{r3, r4, r5, lr}
 80063f2:	4605      	mov	r5, r0
 80063f4:	f7fb fcc4 	bl	8001d80 <chRegFirstThread>
 80063f8:	2400      	movs	r4, #0
 80063fa:	4603      	mov	r3, r0
 80063fc:	4618      	mov	r0, r3
 80063fe:	42ab      	cmp	r3, r5
 8006400:	bf08      	it	eq
 8006402:	f044 0401 	orreq.w	r4, r4, #1
 8006406:	f7fb fccb 	bl	8001da0 <chRegNextThread>
 800640a:	4603      	mov	r3, r0
 800640c:	2800      	cmp	r0, #0
 800640e:	d1f5      	bne.n	80063fc <regfind+0xc>
 8006410:	4620      	mov	r0, r4
 8006412:	bd38      	pop	{r3, r4, r5, pc}
	...

08006420 <dyn3_execute>:
 8006420:	b510      	push	{r4, lr}
 8006422:	4b48      	ldr	r3, [pc, #288]	; (8006544 <dyn3_execute+0x124>)
 8006424:	4948      	ldr	r1, [pc, #288]	; (8006548 <dyn3_execute+0x128>)
 8006426:	699a      	ldr	r2, [r3, #24]
 8006428:	4848      	ldr	r0, [pc, #288]	; (800654c <dyn3_execute+0x12c>)
 800642a:	6892      	ldr	r2, [r2, #8]
 800642c:	4b48      	ldr	r3, [pc, #288]	; (8006550 <dyn3_execute+0x130>)
 800642e:	b082      	sub	sp, #8
 8006430:	3a01      	subs	r2, #1
 8006432:	9100      	str	r1, [sp, #0]
 8006434:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006438:	f7fb fc5a 	bl	8001cf0 <chThdCreateFromHeap>
 800643c:	4604      	mov	r4, r0
 800643e:	2001      	movs	r0, #1
 8006440:	7fa1      	ldrb	r1, [r4, #30]
 8006442:	1a09      	subs	r1, r1, r0
 8006444:	fab1 f181 	clz	r1, r1
 8006448:	0949      	lsrs	r1, r1, #5
 800644a:	f7fd fcb1 	bl	8003db0 <_test_assert>
 800644e:	b108      	cbz	r0, 8006454 <dyn3_execute+0x34>
 8006450:	b002      	add	sp, #8
 8006452:	bd10      	pop	{r4, pc}
 8006454:	4620      	mov	r0, r4
 8006456:	f7fb fc13 	bl	8001c80 <chThdAddRef>
 800645a:	7fa1      	ldrb	r1, [r4, #30]
 800645c:	2002      	movs	r0, #2
 800645e:	1a09      	subs	r1, r1, r0
 8006460:	fab1 f181 	clz	r1, r1
 8006464:	0949      	lsrs	r1, r1, #5
 8006466:	f7fd fca3 	bl	8003db0 <_test_assert>
 800646a:	2800      	cmp	r0, #0
 800646c:	d1f0      	bne.n	8006450 <dyn3_execute+0x30>
 800646e:	4620      	mov	r0, r4
 8006470:	f7fb fc16 	bl	8001ca0 <chThdRelease>
 8006474:	7fa1      	ldrb	r1, [r4, #30]
 8006476:	f1a1 0101 	sub.w	r1, r1, #1
 800647a:	fab1 f181 	clz	r1, r1
 800647e:	2003      	movs	r0, #3
 8006480:	0949      	lsrs	r1, r1, #5
 8006482:	f7fd fc95 	bl	8003db0 <_test_assert>
 8006486:	2800      	cmp	r0, #0
 8006488:	d1e2      	bne.n	8006450 <dyn3_execute+0x30>
 800648a:	4620      	mov	r0, r4
 800648c:	f7ff ffb0 	bl	80063f0 <regfind>
 8006490:	4601      	mov	r1, r0
 8006492:	2004      	movs	r0, #4
 8006494:	f7fd fc8c 	bl	8003db0 <_test_assert>
 8006498:	2800      	cmp	r0, #0
 800649a:	d1d9      	bne.n	8006450 <dyn3_execute+0x30>
 800649c:	4620      	mov	r0, r4
 800649e:	f7ff ffa7 	bl	80063f0 <regfind>
 80064a2:	4601      	mov	r1, r0
 80064a4:	2005      	movs	r0, #5
 80064a6:	f7fd fc83 	bl	8003db0 <_test_assert>
 80064aa:	2800      	cmp	r0, #0
 80064ac:	d1d0      	bne.n	8006450 <dyn3_execute+0x30>
 80064ae:	4620      	mov	r0, r4
 80064b0:	f7fb fbf6 	bl	8001ca0 <chThdRelease>
 80064b4:	7fa1      	ldrb	r1, [r4, #30]
 80064b6:	fab1 f181 	clz	r1, r1
 80064ba:	0949      	lsrs	r1, r1, #5
 80064bc:	2006      	movs	r0, #6
 80064be:	f7fd fc77 	bl	8003db0 <_test_assert>
 80064c2:	2800      	cmp	r0, #0
 80064c4:	d1c4      	bne.n	8006450 <dyn3_execute+0x30>
 80064c6:	7f21      	ldrb	r1, [r4, #28]
 80064c8:	fab1 f181 	clz	r1, r1
 80064cc:	0949      	lsrs	r1, r1, #5
 80064ce:	2007      	movs	r0, #7
 80064d0:	f7fd fc6e 	bl	8003db0 <_test_assert>
 80064d4:	2800      	cmp	r0, #0
 80064d6:	d1bb      	bne.n	8006450 <dyn3_execute+0x30>
 80064d8:	4620      	mov	r0, r4
 80064da:	f7ff ff89 	bl	80063f0 <regfind>
 80064de:	4601      	mov	r1, r0
 80064e0:	2008      	movs	r0, #8
 80064e2:	f7fd fc65 	bl	8003db0 <_test_assert>
 80064e6:	2800      	cmp	r0, #0
 80064e8:	d1b2      	bne.n	8006450 <dyn3_execute+0x30>
 80064ea:	4620      	mov	r0, r4
 80064ec:	f7ff ff80 	bl	80063f0 <regfind>
 80064f0:	4601      	mov	r1, r0
 80064f2:	2009      	movs	r0, #9
 80064f4:	f7fd fc5c 	bl	8003db0 <_test_assert>
 80064f8:	2800      	cmp	r0, #0
 80064fa:	d1a9      	bne.n	8006450 <dyn3_execute+0x30>
 80064fc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8006500:	f7fb faae 	bl	8001a60 <chThdSleep>
 8006504:	7f21      	ldrb	r1, [r4, #28]
 8006506:	f1a1 030f 	sub.w	r3, r1, #15
 800650a:	4259      	negs	r1, r3
 800650c:	4159      	adcs	r1, r3
 800650e:	200a      	movs	r0, #10
 8006510:	f7fd fc4e 	bl	8003db0 <_test_assert>
 8006514:	2800      	cmp	r0, #0
 8006516:	d19b      	bne.n	8006450 <dyn3_execute+0x30>
 8006518:	4620      	mov	r0, r4
 800651a:	f7ff ff69 	bl	80063f0 <regfind>
 800651e:	4601      	mov	r1, r0
 8006520:	200b      	movs	r0, #11
 8006522:	f7fd fc45 	bl	8003db0 <_test_assert>
 8006526:	2800      	cmp	r0, #0
 8006528:	d192      	bne.n	8006450 <dyn3_execute+0x30>
 800652a:	4620      	mov	r0, r4
 800652c:	f7ff ff60 	bl	80063f0 <regfind>
 8006530:	f080 0101 	eor.w	r1, r0, #1
 8006534:	b2c9      	uxtb	r1, r1
 8006536:	200c      	movs	r0, #12
 8006538:	b002      	add	sp, #8
 800653a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800653e:	f7fd bc37 	b.w	8003db0 <_test_assert>
 8006542:	bf00      	nop
 8006544:	20000ce8 	.word	0x20000ce8
 8006548:	08007fbc 	.word	0x08007fbc
 800654c:	200016b0 	.word	0x200016b0
 8006550:	080062a1 	.word	0x080062a1
	...

08006560 <notify>:
 8006560:	4770      	bx	lr
 8006562:	bf00      	nop
	...

08006570 <thread1>:
 8006570:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8006574:	4801      	ldr	r0, [pc, #4]	; (800657c <thread1+0xc>)
 8006576:	f7fc ba73 	b.w	8002a60 <chIQGetTimeout>
 800657a:	bf00      	nop
 800657c:	20000870 	.word	0x20000870

08006580 <queues1_setup>:
 8006580:	b500      	push	{lr}
 8006582:	4a06      	ldr	r2, [pc, #24]	; (800659c <queues1_setup+0x1c>)
 8006584:	4b06      	ldr	r3, [pc, #24]	; (80065a0 <queues1_setup+0x20>)
 8006586:	6811      	ldr	r1, [r2, #0]
 8006588:	4806      	ldr	r0, [pc, #24]	; (80065a4 <queues1_setup+0x24>)
 800658a:	b083      	sub	sp, #12
 800658c:	2200      	movs	r2, #0
 800658e:	9200      	str	r2, [sp, #0]
 8006590:	2204      	movs	r2, #4
 8006592:	f7fc fa25 	bl	80029e0 <chIQObjectInit>
 8006596:	b003      	add	sp, #12
 8006598:	f85d fb04 	ldr.w	pc, [sp], #4
 800659c:	08007ec0 	.word	0x08007ec0
 80065a0:	08006561 	.word	0x08006561
 80065a4:	20000870 	.word	0x20000870
	...

080065b0 <thread2>:
 80065b0:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 80065b4:	2100      	movs	r1, #0
 80065b6:	4801      	ldr	r0, [pc, #4]	; (80065bc <thread2+0xc>)
 80065b8:	f7fc bada 	b.w	8002b70 <chOQPutTimeout>
 80065bc:	20000894 	.word	0x20000894

080065c0 <queues2_setup>:
 80065c0:	b500      	push	{lr}
 80065c2:	4a06      	ldr	r2, [pc, #24]	; (80065dc <queues2_setup+0x1c>)
 80065c4:	4b06      	ldr	r3, [pc, #24]	; (80065e0 <queues2_setup+0x20>)
 80065c6:	6811      	ldr	r1, [r2, #0]
 80065c8:	4806      	ldr	r0, [pc, #24]	; (80065e4 <queues2_setup+0x24>)
 80065ca:	b083      	sub	sp, #12
 80065cc:	2200      	movs	r2, #0
 80065ce:	9200      	str	r2, [sp, #0]
 80065d0:	2204      	movs	r2, #4
 80065d2:	f7fc faad 	bl	8002b30 <chOQObjectInit>
 80065d6:	b003      	add	sp, #12
 80065d8:	f85d fb04 	ldr.w	pc, [sp], #4
 80065dc:	08007ec0 	.word	0x08007ec0
 80065e0:	08006561 	.word	0x08006561
 80065e4:	20000894 	.word	0x20000894
	...

080065f0 <queues1_execute>:
 80065f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80065f4:	2620      	movs	r6, #32
 80065f6:	b082      	sub	sp, #8
 80065f8:	f386 8811 	msr	BASEPRI, r6
 80065fc:	4c99      	ldr	r4, [pc, #612]	; (8006864 <queues1_execute+0x274>)
 80065fe:	68a1      	ldr	r1, [r4, #8]
 8006600:	fab1 f181 	clz	r1, r1
 8006604:	0949      	lsrs	r1, r1, #5
 8006606:	2001      	movs	r0, #1
 8006608:	f7fd fbd2 	bl	8003db0 <_test_assert>
 800660c:	bb10      	cbnz	r0, 8006654 <queues1_execute+0x64>
 800660e:	4605      	mov	r5, r0
 8006610:	f380 8811 	msr	BASEPRI, r0
 8006614:	f386 8811 	msr	BASEPRI, r6
 8006618:	2141      	movs	r1, #65	; 0x41
 800661a:	4620      	mov	r0, r4
 800661c:	f7fc fa00 	bl	8002a20 <chIQPutI>
 8006620:	4620      	mov	r0, r4
 8006622:	2142      	movs	r1, #66	; 0x42
 8006624:	f7fc f9fc 	bl	8002a20 <chIQPutI>
 8006628:	4620      	mov	r0, r4
 800662a:	2143      	movs	r1, #67	; 0x43
 800662c:	f7fc f9f8 	bl	8002a20 <chIQPutI>
 8006630:	4620      	mov	r0, r4
 8006632:	2144      	movs	r1, #68	; 0x44
 8006634:	f7fc f9f4 	bl	8002a20 <chIQPutI>
 8006638:	f385 8811 	msr	BASEPRI, r5
 800663c:	f386 8811 	msr	BASEPRI, r6
 8006640:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8006644:	429a      	cmp	r2, r3
 8006646:	d03a      	beq.n	80066be <queues1_execute+0xce>
 8006648:	4629      	mov	r1, r5
 800664a:	2002      	movs	r0, #2
 800664c:	f7fd fbb0 	bl	8003db0 <_test_assert>
 8006650:	4605      	mov	r5, r0
 8006652:	b128      	cbz	r0, 8006660 <queues1_execute+0x70>
 8006654:	2300      	movs	r3, #0
 8006656:	f383 8811 	msr	BASEPRI, r3
 800665a:	b002      	add	sp, #8
 800665c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006660:	f380 8811 	msr	BASEPRI, r0
 8006664:	2320      	movs	r3, #32
 8006666:	f383 8811 	msr	BASEPRI, r3
 800666a:	487e      	ldr	r0, [pc, #504]	; (8006864 <queues1_execute+0x274>)
 800666c:	4629      	mov	r1, r5
 800666e:	f7fc f9d7 	bl	8002a20 <chIQPutI>
 8006672:	3004      	adds	r0, #4
 8006674:	bf14      	ite	ne
 8006676:	2100      	movne	r1, #0
 8006678:	2101      	moveq	r1, #1
 800667a:	2003      	movs	r0, #3
 800667c:	f7fd fb98 	bl	8003db0 <_test_assert>
 8006680:	b9c0      	cbnz	r0, 80066b4 <queues1_execute+0xc4>
 8006682:	f380 8811 	msr	BASEPRI, r0
 8006686:	4e77      	ldr	r6, [pc, #476]	; (8006864 <queues1_execute+0x274>)
 8006688:	2504      	movs	r5, #4
 800668a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800668e:	4630      	mov	r0, r6
 8006690:	f7fc f9e6 	bl	8002a60 <chIQGetTimeout>
 8006694:	b2c0      	uxtb	r0, r0
 8006696:	f7fd fb7b 	bl	8003d90 <test_emit_token>
 800669a:	3d01      	subs	r5, #1
 800669c:	d1f5      	bne.n	800668a <queues1_execute+0x9a>
 800669e:	2620      	movs	r6, #32
 80066a0:	f386 8811 	msr	BASEPRI, r6
 80066a4:	68a1      	ldr	r1, [r4, #8]
 80066a6:	fab1 f181 	clz	r1, r1
 80066aa:	0949      	lsrs	r1, r1, #5
 80066ac:	2004      	movs	r0, #4
 80066ae:	f7fd fb7f 	bl	8003db0 <_test_assert>
 80066b2:	b180      	cbz	r0, 80066d6 <queues1_execute+0xe6>
 80066b4:	f385 8811 	msr	BASEPRI, r5
 80066b8:	b002      	add	sp, #8
 80066ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80066be:	68a5      	ldr	r5, [r4, #8]
 80066c0:	3500      	adds	r5, #0
 80066c2:	bf18      	it	ne
 80066c4:	2501      	movne	r5, #1
 80066c6:	4629      	mov	r1, r5
 80066c8:	2002      	movs	r0, #2
 80066ca:	f7fd fb71 	bl	8003db0 <_test_assert>
 80066ce:	4605      	mov	r5, r0
 80066d0:	2800      	cmp	r0, #0
 80066d2:	d1bf      	bne.n	8006654 <queues1_execute+0x64>
 80066d4:	e7c4      	b.n	8006660 <queues1_execute+0x70>
 80066d6:	f385 8811 	msr	BASEPRI, r5
 80066da:	4963      	ldr	r1, [pc, #396]	; (8006868 <queues1_execute+0x278>)
 80066dc:	2005      	movs	r0, #5
 80066de:	f7fd fb7f 	bl	8003de0 <_test_assert_sequence>
 80066e2:	2800      	cmp	r0, #0
 80066e4:	d1b9      	bne.n	800665a <queues1_execute+0x6a>
 80066e6:	f386 8811 	msr	BASEPRI, r6
 80066ea:	2141      	movs	r1, #65	; 0x41
 80066ec:	485d      	ldr	r0, [pc, #372]	; (8006864 <queues1_execute+0x274>)
 80066ee:	f7fc f997 	bl	8002a20 <chIQPutI>
 80066f2:	2142      	movs	r1, #66	; 0x42
 80066f4:	485b      	ldr	r0, [pc, #364]	; (8006864 <queues1_execute+0x274>)
 80066f6:	f7fc f993 	bl	8002a20 <chIQPutI>
 80066fa:	2143      	movs	r1, #67	; 0x43
 80066fc:	4859      	ldr	r0, [pc, #356]	; (8006864 <queues1_execute+0x274>)
 80066fe:	f7fc f98f 	bl	8002a20 <chIQPutI>
 8006702:	2144      	movs	r1, #68	; 0x44
 8006704:	4857      	ldr	r0, [pc, #348]	; (8006864 <queues1_execute+0x274>)
 8006706:	f7fc f98b 	bl	8002a20 <chIQPutI>
 800670a:	f385 8811 	msr	BASEPRI, r5
 800670e:	f8df 8168 	ldr.w	r8, [pc, #360]	; 8006878 <queues1_execute+0x288>
 8006712:	4854      	ldr	r0, [pc, #336]	; (8006864 <queues1_execute+0x274>)
 8006714:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8006718:	462b      	mov	r3, r5
 800671a:	4639      	mov	r1, r7
 800671c:	2208      	movs	r2, #8
 800671e:	f7fc f9c7 	bl	8002ab0 <chIQReadTimeout>
 8006722:	f1a0 0104 	sub.w	r1, r0, #4
 8006726:	fab1 f181 	clz	r1, r1
 800672a:	0949      	lsrs	r1, r1, #5
 800672c:	2006      	movs	r0, #6
 800672e:	f7fd fb3f 	bl	8003db0 <_test_assert>
 8006732:	2800      	cmp	r0, #0
 8006734:	d191      	bne.n	800665a <queues1_execute+0x6a>
 8006736:	f386 8811 	msr	BASEPRI, r6
 800673a:	68a1      	ldr	r1, [r4, #8]
 800673c:	fab1 f181 	clz	r1, r1
 8006740:	0949      	lsrs	r1, r1, #5
 8006742:	2007      	movs	r0, #7
 8006744:	f7fd fb34 	bl	8003db0 <_test_assert>
 8006748:	2800      	cmp	r0, #0
 800674a:	d1b3      	bne.n	80066b4 <queues1_execute+0xc4>
 800674c:	f385 8811 	msr	BASEPRI, r5
 8006750:	f386 8811 	msr	BASEPRI, r6
 8006754:	2141      	movs	r1, #65	; 0x41
 8006756:	4843      	ldr	r0, [pc, #268]	; (8006864 <queues1_execute+0x274>)
 8006758:	f7fc f962 	bl	8002a20 <chIQPutI>
 800675c:	2142      	movs	r1, #66	; 0x42
 800675e:	4841      	ldr	r0, [pc, #260]	; (8006864 <queues1_execute+0x274>)
 8006760:	f7fc f95e 	bl	8002a20 <chIQPutI>
 8006764:	2143      	movs	r1, #67	; 0x43
 8006766:	483f      	ldr	r0, [pc, #252]	; (8006864 <queues1_execute+0x274>)
 8006768:	f7fc f95a 	bl	8002a20 <chIQPutI>
 800676c:	2144      	movs	r1, #68	; 0x44
 800676e:	483d      	ldr	r0, [pc, #244]	; (8006864 <queues1_execute+0x274>)
 8006770:	f7fc f956 	bl	8002a20 <chIQPutI>
 8006774:	f385 8811 	msr	BASEPRI, r5
 8006778:	2202      	movs	r2, #2
 800677a:	4639      	mov	r1, r7
 800677c:	462b      	mov	r3, r5
 800677e:	4839      	ldr	r0, [pc, #228]	; (8006864 <queues1_execute+0x274>)
 8006780:	f7fc f996 	bl	8002ab0 <chIQReadTimeout>
 8006784:	f1a0 0102 	sub.w	r1, r0, #2
 8006788:	fab1 f181 	clz	r1, r1
 800678c:	0949      	lsrs	r1, r1, #5
 800678e:	2008      	movs	r0, #8
 8006790:	f7fd fb0e 	bl	8003db0 <_test_assert>
 8006794:	2800      	cmp	r0, #0
 8006796:	f47f af60 	bne.w	800665a <queues1_execute+0x6a>
 800679a:	4639      	mov	r1, r7
 800679c:	462b      	mov	r3, r5
 800679e:	2202      	movs	r2, #2
 80067a0:	4830      	ldr	r0, [pc, #192]	; (8006864 <queues1_execute+0x274>)
 80067a2:	f7fc f985 	bl	8002ab0 <chIQReadTimeout>
 80067a6:	f1a0 0102 	sub.w	r1, r0, #2
 80067aa:	fab1 f181 	clz	r1, r1
 80067ae:	0949      	lsrs	r1, r1, #5
 80067b0:	2009      	movs	r0, #9
 80067b2:	f7fd fafd 	bl	8003db0 <_test_assert>
 80067b6:	2800      	cmp	r0, #0
 80067b8:	f47f af4f 	bne.w	800665a <queues1_execute+0x6a>
 80067bc:	f386 8811 	msr	BASEPRI, r6
 80067c0:	68a1      	ldr	r1, [r4, #8]
 80067c2:	fab1 f181 	clz	r1, r1
 80067c6:	0949      	lsrs	r1, r1, #5
 80067c8:	200a      	movs	r0, #10
 80067ca:	f7fd faf1 	bl	8003db0 <_test_assert>
 80067ce:	2800      	cmp	r0, #0
 80067d0:	f47f af70 	bne.w	80066b4 <queues1_execute+0xc4>
 80067d4:	f385 8811 	msr	BASEPRI, r5
 80067d8:	f386 8811 	msr	BASEPRI, r6
 80067dc:	4821      	ldr	r0, [pc, #132]	; (8006864 <queues1_execute+0x274>)
 80067de:	4629      	mov	r1, r5
 80067e0:	f7fc f91e 	bl	8002a20 <chIQPutI>
 80067e4:	481f      	ldr	r0, [pc, #124]	; (8006864 <queues1_execute+0x274>)
 80067e6:	f7fc f90b 	bl	8002a00 <chIQResetI>
 80067ea:	f385 8811 	msr	BASEPRI, r5
 80067ee:	f386 8811 	msr	BASEPRI, r6
 80067f2:	68a1      	ldr	r1, [r4, #8]
 80067f4:	fab1 f181 	clz	r1, r1
 80067f8:	0949      	lsrs	r1, r1, #5
 80067fa:	200b      	movs	r0, #11
 80067fc:	f7fd fad8 	bl	8003db0 <_test_assert>
 8006800:	2800      	cmp	r0, #0
 8006802:	f47f af57 	bne.w	80066b4 <queues1_execute+0xc4>
 8006806:	f385 8811 	msr	BASEPRI, r5
 800680a:	4b18      	ldr	r3, [pc, #96]	; (800686c <queues1_execute+0x27c>)
 800680c:	f8d8 0000 	ldr.w	r0, [r8]
 8006810:	699a      	ldr	r2, [r3, #24]
 8006812:	4b17      	ldr	r3, [pc, #92]	; (8006870 <queues1_execute+0x280>)
 8006814:	6892      	ldr	r2, [r2, #8]
 8006816:	9500      	str	r5, [sp, #0]
 8006818:	3201      	adds	r2, #1
 800681a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800681e:	f7fb f8b7 	bl	8001990 <chThdCreateStatic>
 8006822:	4b14      	ldr	r3, [pc, #80]	; (8006874 <queues1_execute+0x284>)
 8006824:	6018      	str	r0, [r3, #0]
 8006826:	f386 8811 	msr	BASEPRI, r6
 800682a:	68a1      	ldr	r1, [r4, #8]
 800682c:	fab1 f181 	clz	r1, r1
 8006830:	0949      	lsrs	r1, r1, #5
 8006832:	200c      	movs	r0, #12
 8006834:	f7fd fabc 	bl	8003db0 <_test_assert>
 8006838:	2300      	movs	r3, #0
 800683a:	b110      	cbz	r0, 8006842 <queues1_execute+0x252>
 800683c:	f383 8811 	msr	BASEPRI, r3
 8006840:	e70b      	b.n	800665a <queues1_execute+0x6a>
 8006842:	f383 8811 	msr	BASEPRI, r3
 8006846:	f7fd fb23 	bl	8003e90 <test_wait_threads>
 800684a:	210a      	movs	r1, #10
 800684c:	4805      	ldr	r0, [pc, #20]	; (8006864 <queues1_execute+0x274>)
 800684e:	f7fc f907 	bl	8002a60 <chIQGetTimeout>
 8006852:	1c43      	adds	r3, r0, #1
 8006854:	4259      	negs	r1, r3
 8006856:	4159      	adcs	r1, r3
 8006858:	200d      	movs	r0, #13
 800685a:	b002      	add	sp, #8
 800685c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006860:	f7fd baa6 	b.w	8003db0 <_test_assert>
 8006864:	20000870 	.word	0x20000870
 8006868:	08008390 	.word	0x08008390
 800686c:	20000ce8 	.word	0x20000ce8
 8006870:	08006571 	.word	0x08006571
 8006874:	20001654 	.word	0x20001654
 8006878:	08007ec0 	.word	0x08007ec0
 800687c:	00000000 	.word	0x00000000

08006880 <queues2_execute>:
 8006880:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006884:	2320      	movs	r3, #32
 8006886:	b083      	sub	sp, #12
 8006888:	f383 8811 	msr	BASEPRI, r3
 800688c:	4d85      	ldr	r5, [pc, #532]	; (8006aa4 <queues2_execute+0x224>)
 800688e:	e9d5 3205 	ldrd	r3, r2, [r5, #20]
 8006892:	429a      	cmp	r2, r3
 8006894:	d041      	beq.n	800691a <queues2_execute+0x9a>
 8006896:	2100      	movs	r1, #0
 8006898:	2001      	movs	r0, #1
 800689a:	f7fd fa89 	bl	8003db0 <_test_assert>
 800689e:	bbb0      	cbnz	r0, 800690e <queues2_execute+0x8e>
 80068a0:	f380 8811 	msr	BASEPRI, r0
 80068a4:	4e7f      	ldr	r6, [pc, #508]	; (8006aa4 <queues2_execute+0x224>)
 80068a6:	2441      	movs	r4, #65	; 0x41
 80068a8:	4621      	mov	r1, r4
 80068aa:	3401      	adds	r4, #1
 80068ac:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80068b0:	4630      	mov	r0, r6
 80068b2:	b2e4      	uxtb	r4, r4
 80068b4:	f7fc f95c 	bl	8002b70 <chOQPutTimeout>
 80068b8:	2c45      	cmp	r4, #69	; 0x45
 80068ba:	d1f5      	bne.n	80068a8 <queues2_execute+0x28>
 80068bc:	2620      	movs	r6, #32
 80068be:	f386 8811 	msr	BASEPRI, r6
 80068c2:	68a9      	ldr	r1, [r5, #8]
 80068c4:	fab1 f181 	clz	r1, r1
 80068c8:	0949      	lsrs	r1, r1, #5
 80068ca:	2002      	movs	r0, #2
 80068cc:	f7fd fa70 	bl	8003db0 <_test_assert>
 80068d0:	4607      	mov	r7, r0
 80068d2:	b9e0      	cbnz	r0, 800690e <queues2_execute+0x8e>
 80068d4:	f380 8811 	msr	BASEPRI, r0
 80068d8:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 8006aa4 <queues2_execute+0x224>
 80068dc:	4680      	mov	r8, r0
 80068de:	2404      	movs	r4, #4
 80068e0:	f386 8811 	msr	BASEPRI, r6
 80068e4:	4648      	mov	r0, r9
 80068e6:	f7fc f96b 	bl	8002bc0 <chOQGetI>
 80068ea:	f388 8811 	msr	BASEPRI, r8
 80068ee:	b2c0      	uxtb	r0, r0
 80068f0:	f7fd fa4e 	bl	8003d90 <test_emit_token>
 80068f4:	3c01      	subs	r4, #1
 80068f6:	d1f3      	bne.n	80068e0 <queues2_execute+0x60>
 80068f8:	f386 8811 	msr	BASEPRI, r6
 80068fc:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 8006900:	429a      	cmp	r2, r3
 8006902:	d02a      	beq.n	800695a <queues2_execute+0xda>
 8006904:	4639      	mov	r1, r7
 8006906:	2003      	movs	r0, #3
 8006908:	f7fd fa52 	bl	8003db0 <_test_assert>
 800690c:	b150      	cbz	r0, 8006924 <queues2_execute+0xa4>
 800690e:	2300      	movs	r3, #0
 8006910:	f383 8811 	msr	BASEPRI, r3
 8006914:	b003      	add	sp, #12
 8006916:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800691a:	68a9      	ldr	r1, [r5, #8]
 800691c:	3100      	adds	r1, #0
 800691e:	bf18      	it	ne
 8006920:	2101      	movne	r1, #1
 8006922:	e7b9      	b.n	8006898 <queues2_execute+0x18>
 8006924:	f380 8811 	msr	BASEPRI, r0
 8006928:	495f      	ldr	r1, [pc, #380]	; (8006aa8 <queues2_execute+0x228>)
 800692a:	2004      	movs	r0, #4
 800692c:	f7fd fa58 	bl	8003de0 <_test_assert_sequence>
 8006930:	4604      	mov	r4, r0
 8006932:	2800      	cmp	r0, #0
 8006934:	d1ee      	bne.n	8006914 <queues2_execute+0x94>
 8006936:	2620      	movs	r6, #32
 8006938:	f386 8811 	msr	BASEPRI, r6
 800693c:	4859      	ldr	r0, [pc, #356]	; (8006aa4 <queues2_execute+0x224>)
 800693e:	f7fc f93f 	bl	8002bc0 <chOQGetI>
 8006942:	3003      	adds	r0, #3
 8006944:	bf14      	ite	ne
 8006946:	2100      	movne	r1, #0
 8006948:	2101      	moveq	r1, #1
 800694a:	2005      	movs	r0, #5
 800694c:	f7fd fa30 	bl	8003db0 <_test_assert>
 8006950:	4603      	mov	r3, r0
 8006952:	b138      	cbz	r0, 8006964 <queues2_execute+0xe4>
 8006954:	f384 8811 	msr	BASEPRI, r4
 8006958:	e7dc      	b.n	8006914 <queues2_execute+0x94>
 800695a:	68af      	ldr	r7, [r5, #8]
 800695c:	3700      	adds	r7, #0
 800695e:	bf18      	it	ne
 8006960:	2701      	movne	r7, #1
 8006962:	e7cf      	b.n	8006904 <queues2_execute+0x84>
 8006964:	f380 8811 	msr	BASEPRI, r0
 8006968:	4f50      	ldr	r7, [pc, #320]	; (8006aac <queues2_execute+0x22c>)
 800696a:	484e      	ldr	r0, [pc, #312]	; (8006aa4 <queues2_execute+0x224>)
 800696c:	687c      	ldr	r4, [r7, #4]
 800696e:	2208      	movs	r2, #8
 8006970:	4621      	mov	r1, r4
 8006972:	f7fc f945 	bl	8002c00 <chOQWriteTimeout>
 8006976:	f1a0 0104 	sub.w	r1, r0, #4
 800697a:	fab1 f181 	clz	r1, r1
 800697e:	0949      	lsrs	r1, r1, #5
 8006980:	2006      	movs	r0, #6
 8006982:	f7fd fa15 	bl	8003db0 <_test_assert>
 8006986:	4680      	mov	r8, r0
 8006988:	2800      	cmp	r0, #0
 800698a:	d1c3      	bne.n	8006914 <queues2_execute+0x94>
 800698c:	f386 8811 	msr	BASEPRI, r6
 8006990:	68a9      	ldr	r1, [r5, #8]
 8006992:	fab1 f181 	clz	r1, r1
 8006996:	0949      	lsrs	r1, r1, #5
 8006998:	2007      	movs	r0, #7
 800699a:	f7fd fa09 	bl	8003db0 <_test_assert>
 800699e:	4681      	mov	r9, r0
 80069a0:	b110      	cbz	r0, 80069a8 <queues2_execute+0x128>
 80069a2:	f388 8811 	msr	BASEPRI, r8
 80069a6:	e7b5      	b.n	8006914 <queues2_execute+0x94>
 80069a8:	f380 8811 	msr	BASEPRI, r0
 80069ac:	4b40      	ldr	r3, [pc, #256]	; (8006ab0 <queues2_execute+0x230>)
 80069ae:	6838      	ldr	r0, [r7, #0]
 80069b0:	699a      	ldr	r2, [r3, #24]
 80069b2:	4b40      	ldr	r3, [pc, #256]	; (8006ab4 <queues2_execute+0x234>)
 80069b4:	6892      	ldr	r2, [r2, #8]
 80069b6:	f8cd 9000 	str.w	r9, [sp]
 80069ba:	3201      	adds	r2, #1
 80069bc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80069c0:	f7fa ffe6 	bl	8001990 <chThdCreateStatic>
 80069c4:	4b3c      	ldr	r3, [pc, #240]	; (8006ab8 <queues2_execute+0x238>)
 80069c6:	6018      	str	r0, [r3, #0]
 80069c8:	f386 8811 	msr	BASEPRI, r6
 80069cc:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 80069d0:	68a9      	ldr	r1, [r5, #8]
 80069d2:	1a9b      	subs	r3, r3, r2
 80069d4:	1a59      	subs	r1, r3, r1
 80069d6:	f1a1 0104 	sub.w	r1, r1, #4
 80069da:	fab1 f181 	clz	r1, r1
 80069de:	0949      	lsrs	r1, r1, #5
 80069e0:	2008      	movs	r0, #8
 80069e2:	f7fd f9e5 	bl	8003db0 <_test_assert>
 80069e6:	4607      	mov	r7, r0
 80069e8:	b110      	cbz	r0, 80069f0 <queues2_execute+0x170>
 80069ea:	f389 8811 	msr	BASEPRI, r9
 80069ee:	e791      	b.n	8006914 <queues2_execute+0x94>
 80069f0:	f380 8811 	msr	BASEPRI, r0
 80069f4:	f7fd fa4c 	bl	8003e90 <test_wait_threads>
 80069f8:	f386 8811 	msr	BASEPRI, r6
 80069fc:	4829      	ldr	r0, [pc, #164]	; (8006aa4 <queues2_execute+0x224>)
 80069fe:	f7fc f8a7 	bl	8002b50 <chOQResetI>
 8006a02:	f387 8811 	msr	BASEPRI, r7
 8006a06:	f386 8811 	msr	BASEPRI, r6
 8006a0a:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 8006a0e:	68a9      	ldr	r1, [r5, #8]
 8006a10:	1a9b      	subs	r3, r3, r2
 8006a12:	eba3 0c01 	sub.w	ip, r3, r1
 8006a16:	f1dc 0100 	rsbs	r1, ip, #0
 8006a1a:	eb41 010c 	adc.w	r1, r1, ip
 8006a1e:	2009      	movs	r0, #9
 8006a20:	f7fd f9c6 	bl	8003db0 <_test_assert>
 8006a24:	4603      	mov	r3, r0
 8006a26:	b110      	cbz	r0, 8006a2e <queues2_execute+0x1ae>
 8006a28:	f387 8811 	msr	BASEPRI, r7
 8006a2c:	e772      	b.n	8006914 <queues2_execute+0x94>
 8006a2e:	f380 8811 	msr	BASEPRI, r0
 8006a32:	2202      	movs	r2, #2
 8006a34:	4621      	mov	r1, r4
 8006a36:	481b      	ldr	r0, [pc, #108]	; (8006aa4 <queues2_execute+0x224>)
 8006a38:	f7fc f8e2 	bl	8002c00 <chOQWriteTimeout>
 8006a3c:	3802      	subs	r0, #2
 8006a3e:	4241      	negs	r1, r0
 8006a40:	4141      	adcs	r1, r0
 8006a42:	200a      	movs	r0, #10
 8006a44:	f7fd f9b4 	bl	8003db0 <_test_assert>
 8006a48:	4603      	mov	r3, r0
 8006a4a:	2800      	cmp	r0, #0
 8006a4c:	f47f af62 	bne.w	8006914 <queues2_execute+0x94>
 8006a50:	4621      	mov	r1, r4
 8006a52:	2202      	movs	r2, #2
 8006a54:	4813      	ldr	r0, [pc, #76]	; (8006aa4 <queues2_execute+0x224>)
 8006a56:	f7fc f8d3 	bl	8002c00 <chOQWriteTimeout>
 8006a5a:	1e82      	subs	r2, r0, #2
 8006a5c:	4251      	negs	r1, r2
 8006a5e:	4151      	adcs	r1, r2
 8006a60:	200b      	movs	r0, #11
 8006a62:	f7fd f9a5 	bl	8003db0 <_test_assert>
 8006a66:	2800      	cmp	r0, #0
 8006a68:	f47f af54 	bne.w	8006914 <queues2_execute+0x94>
 8006a6c:	f386 8811 	msr	BASEPRI, r6
 8006a70:	68a9      	ldr	r1, [r5, #8]
 8006a72:	fab1 f181 	clz	r1, r1
 8006a76:	0949      	lsrs	r1, r1, #5
 8006a78:	200c      	movs	r0, #12
 8006a7a:	f7fd f999 	bl	8003db0 <_test_assert>
 8006a7e:	2800      	cmp	r0, #0
 8006a80:	f47f af45 	bne.w	800690e <queues2_execute+0x8e>
 8006a84:	2100      	movs	r1, #0
 8006a86:	f381 8811 	msr	BASEPRI, r1
 8006a8a:	220a      	movs	r2, #10
 8006a8c:	4805      	ldr	r0, [pc, #20]	; (8006aa4 <queues2_execute+0x224>)
 8006a8e:	f7fc f86f 	bl	8002b70 <chOQPutTimeout>
 8006a92:	1c43      	adds	r3, r0, #1
 8006a94:	4259      	negs	r1, r3
 8006a96:	4159      	adcs	r1, r3
 8006a98:	200d      	movs	r0, #13
 8006a9a:	b003      	add	sp, #12
 8006a9c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006aa0:	f7fd b986 	b.w	8003db0 <_test_assert>
 8006aa4:	20000894 	.word	0x20000894
 8006aa8:	08008390 	.word	0x08008390
 8006aac:	08007ec0 	.word	0x08007ec0
 8006ab0:	20000ce8 	.word	0x20000ce8
 8006ab4:	080065b1 	.word	0x080065b1
 8006ab8:	20001654 	.word	0x20001654
 8006abc:	00000000 	.word	0x00000000

08006ac0 <sys2_execute>:
 8006ac0:	2320      	movs	r3, #32
 8006ac2:	f383 8811 	msr	BASEPRI, r3
 8006ac6:	b662      	cpsie	i
 8006ac8:	b672      	cpsid	i
 8006aca:	f383 8811 	msr	BASEPRI, r3
 8006ace:	b662      	cpsie	i
 8006ad0:	2300      	movs	r3, #0
 8006ad2:	f383 8811 	msr	BASEPRI, r3
 8006ad6:	b662      	cpsie	i
 8006ad8:	4770      	bx	lr
 8006ada:	bf00      	nop
 8006adc:	0000      	movs	r0, r0
	...

08006ae0 <vtcb>:
 8006ae0:	b510      	push	{r4, lr}
 8006ae2:	2320      	movs	r3, #32
 8006ae4:	f383 8811 	msr	BASEPRI, r3
 8006ae8:	2400      	movs	r4, #0
 8006aea:	f384 8811 	msr	BASEPRI, r4
 8006aee:	f383 8811 	msr	BASEPRI, r3
 8006af2:	f7fa fd25 	bl	8001540 <chSysGetStatusAndLockX>
 8006af6:	f7fa fd33 	bl	8001560 <chSysRestoreStatusX>
 8006afa:	f384 8811 	msr	BASEPRI, r4
 8006afe:	bd10      	pop	{r4, pc}

08006b00 <sys3_execute>:
 8006b00:	b538      	push	{r3, r4, r5, lr}
 8006b02:	2420      	movs	r4, #32
 8006b04:	f384 8811 	msr	BASEPRI, r4
 8006b08:	2001      	movs	r0, #1
 8006b0a:	f7fa fc81 	bl	8001410 <chSysIntegrityCheckI>
 8006b0e:	2300      	movs	r3, #0
 8006b10:	f383 8811 	msr	BASEPRI, r3
 8006b14:	f080 0101 	eor.w	r1, r0, #1
 8006b18:	b2c9      	uxtb	r1, r1
 8006b1a:	2001      	movs	r0, #1
 8006b1c:	f7fd f948 	bl	8003db0 <_test_assert>
 8006b20:	b100      	cbz	r0, 8006b24 <sys3_execute+0x24>
 8006b22:	bd38      	pop	{r3, r4, r5, pc}
 8006b24:	4605      	mov	r5, r0
 8006b26:	f384 8811 	msr	BASEPRI, r4
 8006b2a:	2002      	movs	r0, #2
 8006b2c:	f7fa fc70 	bl	8001410 <chSysIntegrityCheckI>
 8006b30:	f385 8811 	msr	BASEPRI, r5
 8006b34:	f080 0101 	eor.w	r1, r0, #1
 8006b38:	b2c9      	uxtb	r1, r1
 8006b3a:	2002      	movs	r0, #2
 8006b3c:	f7fd f938 	bl	8003db0 <_test_assert>
 8006b40:	4605      	mov	r5, r0
 8006b42:	2800      	cmp	r0, #0
 8006b44:	d1ed      	bne.n	8006b22 <sys3_execute+0x22>
 8006b46:	f384 8811 	msr	BASEPRI, r4
 8006b4a:	2004      	movs	r0, #4
 8006b4c:	f7fa fc60 	bl	8001410 <chSysIntegrityCheckI>
 8006b50:	f385 8811 	msr	BASEPRI, r5
 8006b54:	f080 0101 	eor.w	r1, r0, #1
 8006b58:	b2c9      	uxtb	r1, r1
 8006b5a:	2003      	movs	r0, #3
 8006b5c:	f7fd f928 	bl	8003db0 <_test_assert>
 8006b60:	4605      	mov	r5, r0
 8006b62:	2800      	cmp	r0, #0
 8006b64:	d1dd      	bne.n	8006b22 <sys3_execute+0x22>
 8006b66:	f384 8811 	msr	BASEPRI, r4
 8006b6a:	2008      	movs	r0, #8
 8006b6c:	f7fa fc50 	bl	8001410 <chSysIntegrityCheckI>
 8006b70:	f385 8811 	msr	BASEPRI, r5
 8006b74:	f080 0101 	eor.w	r1, r0, #1
 8006b78:	b2c9      	uxtb	r1, r1
 8006b7a:	2004      	movs	r0, #4
 8006b7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006b80:	f7fd b916 	b.w	8003db0 <_test_assert>
	...

08006b90 <sys1_execute>:
 8006b90:	b510      	push	{r4, lr}
 8006b92:	b086      	sub	sp, #24
 8006b94:	f7fa fcd4 	bl	8001540 <chSysGetStatusAndLockX>
 8006b98:	f7fa fce2 	bl	8001560 <chSysRestoreStatusX>
 8006b9c:	2420      	movs	r4, #32
 8006b9e:	f384 8811 	msr	BASEPRI, r4
 8006ba2:	f7fa fccd 	bl	8001540 <chSysGetStatusAndLockX>
 8006ba6:	f7fa fcdb 	bl	8001560 <chSysRestoreStatusX>
 8006baa:	2300      	movs	r3, #0
 8006bac:	f383 8811 	msr	BASEPRI, r3
 8006bb0:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8006bb4:	b90b      	cbnz	r3, 8006bba <sys1_execute+0x2a>
 8006bb6:	f384 8811 	msr	BASEPRI, r4
 8006bba:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8006bbe:	b913      	cbnz	r3, 8006bc6 <sys1_execute+0x36>
 8006bc0:	2320      	movs	r3, #32
 8006bc2:	f383 8811 	msr	BASEPRI, r3
 8006bc6:	2300      	movs	r3, #0
 8006bc8:	f383 8811 	msr	BASEPRI, r3
 8006bcc:	2220      	movs	r2, #32
 8006bce:	f382 8811 	msr	BASEPRI, r2
 8006bd2:	f3ef 8212 	mrs	r2, BASEPRI_MAX
 8006bd6:	b10a      	cbz	r2, 8006bdc <sys1_execute+0x4c>
 8006bd8:	f383 8811 	msr	BASEPRI, r3
 8006bdc:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8006be0:	b113      	cbz	r3, 8006be8 <sys1_execute+0x58>
 8006be2:	2300      	movs	r3, #0
 8006be4:	f383 8811 	msr	BASEPRI, r3
 8006be8:	2300      	movs	r3, #0
 8006bea:	9304      	str	r3, [sp, #16]
 8006bec:	2320      	movs	r3, #32
 8006bee:	f383 8811 	msr	BASEPRI, r3
 8006bf2:	9b04      	ldr	r3, [sp, #16]
 8006bf4:	ac01      	add	r4, sp, #4
 8006bf6:	b113      	cbz	r3, 8006bfe <sys1_execute+0x6e>
 8006bf8:	4620      	mov	r0, r4
 8006bfa:	f7fa fd11 	bl	8001620 <chVTDoResetI>
 8006bfe:	4620      	mov	r0, r4
 8006c00:	2300      	movs	r3, #0
 8006c02:	4a0c      	ldr	r2, [pc, #48]	; (8006c34 <sys1_execute+0xa4>)
 8006c04:	2101      	movs	r1, #1
 8006c06:	f7fa fccb 	bl	80015a0 <chVTDoSetI>
 8006c0a:	2400      	movs	r4, #0
 8006c0c:	f384 8811 	msr	BASEPRI, r4
 8006c10:	200a      	movs	r0, #10
 8006c12:	f7fa ff25 	bl	8001a60 <chThdSleep>
 8006c16:	2320      	movs	r3, #32
 8006c18:	f383 8811 	msr	BASEPRI, r3
 8006c1c:	9904      	ldr	r1, [sp, #16]
 8006c1e:	f384 8811 	msr	BASEPRI, r4
 8006c22:	fab1 f181 	clz	r1, r1
 8006c26:	0949      	lsrs	r1, r1, #5
 8006c28:	2001      	movs	r0, #1
 8006c2a:	f7fd f8c1 	bl	8003db0 <_test_assert>
 8006c2e:	b006      	add	sp, #24
 8006c30:	bd10      	pop	{r4, pc}
 8006c32:	bf00      	nop
 8006c34:	08006ae1 	.word	0x08006ae1
	...

08006c40 <tmo>:
 8006c40:	4770      	bx	lr
 8006c42:	bf00      	nop
	...

08006c50 <bmk13_execute>:
 8006c50:	b510      	push	{r4, lr}
 8006c52:	482f      	ldr	r0, [pc, #188]	; (8006d10 <bmk13_execute+0xc0>)
 8006c54:	4c2f      	ldr	r4, [pc, #188]	; (8006d14 <bmk13_execute+0xc4>)
 8006c56:	f7fd f863 	bl	8003d20 <test_print>
 8006c5a:	f44f 70a8 	mov.w	r0, #336	; 0x150
 8006c5e:	f7fd f82f 	bl	8003cc0 <test_printn>
 8006c62:	4620      	mov	r0, r4
 8006c64:	f7fd f874 	bl	8003d50 <test_println>
 8006c68:	482b      	ldr	r0, [pc, #172]	; (8006d18 <bmk13_execute+0xc8>)
 8006c6a:	f7fd f859 	bl	8003d20 <test_print>
 8006c6e:	2044      	movs	r0, #68	; 0x44
 8006c70:	f7fd f826 	bl	8003cc0 <test_printn>
 8006c74:	4620      	mov	r0, r4
 8006c76:	f7fd f86b 	bl	8003d50 <test_println>
 8006c7a:	4828      	ldr	r0, [pc, #160]	; (8006d1c <bmk13_execute+0xcc>)
 8006c7c:	f7fd f850 	bl	8003d20 <test_print>
 8006c80:	2014      	movs	r0, #20
 8006c82:	f7fd f81d 	bl	8003cc0 <test_printn>
 8006c86:	4620      	mov	r0, r4
 8006c88:	f7fd f862 	bl	8003d50 <test_println>
 8006c8c:	4824      	ldr	r0, [pc, #144]	; (8006d20 <bmk13_execute+0xd0>)
 8006c8e:	f7fd f847 	bl	8003d20 <test_print>
 8006c92:	200c      	movs	r0, #12
 8006c94:	f7fd f814 	bl	8003cc0 <test_printn>
 8006c98:	4620      	mov	r0, r4
 8006c9a:	f7fd f859 	bl	8003d50 <test_println>
 8006c9e:	4821      	ldr	r0, [pc, #132]	; (8006d24 <bmk13_execute+0xd4>)
 8006ca0:	f7fd f83e 	bl	8003d20 <test_print>
 8006ca4:	2004      	movs	r0, #4
 8006ca6:	f7fd f80b 	bl	8003cc0 <test_printn>
 8006caa:	4620      	mov	r0, r4
 8006cac:	f7fd f850 	bl	8003d50 <test_println>
 8006cb0:	481d      	ldr	r0, [pc, #116]	; (8006d28 <bmk13_execute+0xd8>)
 8006cb2:	f7fd f835 	bl	8003d20 <test_print>
 8006cb6:	2014      	movs	r0, #20
 8006cb8:	f7fd f802 	bl	8003cc0 <test_printn>
 8006cbc:	4620      	mov	r0, r4
 8006cbe:	f7fd f847 	bl	8003d50 <test_println>
 8006cc2:	481a      	ldr	r0, [pc, #104]	; (8006d2c <bmk13_execute+0xdc>)
 8006cc4:	f7fd f82c 	bl	8003d20 <test_print>
 8006cc8:	2010      	movs	r0, #16
 8006cca:	f7fc fff9 	bl	8003cc0 <test_printn>
 8006cce:	4620      	mov	r0, r4
 8006cd0:	f7fd f83e 	bl	8003d50 <test_println>
 8006cd4:	4816      	ldr	r0, [pc, #88]	; (8006d30 <bmk13_execute+0xe0>)
 8006cd6:	f7fd f823 	bl	8003d20 <test_print>
 8006cda:	2008      	movs	r0, #8
 8006cdc:	f7fc fff0 	bl	8003cc0 <test_printn>
 8006ce0:	4620      	mov	r0, r4
 8006ce2:	f7fd f835 	bl	8003d50 <test_println>
 8006ce6:	4813      	ldr	r0, [pc, #76]	; (8006d34 <bmk13_execute+0xe4>)
 8006ce8:	f7fd f81a 	bl	8003d20 <test_print>
 8006cec:	2024      	movs	r0, #36	; 0x24
 8006cee:	f7fc ffe7 	bl	8003cc0 <test_printn>
 8006cf2:	4620      	mov	r0, r4
 8006cf4:	f7fd f82c 	bl	8003d50 <test_println>
 8006cf8:	480f      	ldr	r0, [pc, #60]	; (8006d38 <bmk13_execute+0xe8>)
 8006cfa:	f7fd f811 	bl	8003d20 <test_print>
 8006cfe:	2028      	movs	r0, #40	; 0x28
 8006d00:	f7fc ffde 	bl	8003cc0 <test_printn>
 8006d04:	4620      	mov	r0, r4
 8006d06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006d0a:	f7fd b821 	b.w	8003d50 <test_println>
 8006d0e:	bf00      	nop
 8006d10:	08008590 	.word	0x08008590
 8006d14:	080085a0 	.word	0x080085a0
 8006d18:	080085a8 	.word	0x080085a8
 8006d1c:	080085b8 	.word	0x080085b8
 8006d20:	080085c8 	.word	0x080085c8
 8006d24:	080085d8 	.word	0x080085d8
 8006d28:	080085e8 	.word	0x080085e8
 8006d2c:	080085f8 	.word	0x080085f8
 8006d30:	08008608 	.word	0x08008608
 8006d34:	08008618 	.word	0x08008618
 8006d38:	08008628 	.word	0x08008628
 8006d3c:	00000000 	.word	0x00000000

08006d40 <thread2>:
 8006d40:	b510      	push	{r4, lr}
 8006d42:	f7fb fd0d 	bl	8002760 <chMsgWait>
 8006d46:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8006d48:	4621      	mov	r1, r4
 8006d4a:	f7fb fd29 	bl	80027a0 <chMsgRelease>
 8006d4e:	2c00      	cmp	r4, #0
 8006d50:	d1f7      	bne.n	8006d42 <thread2+0x2>
 8006d52:	bd10      	pop	{r4, pc}
	...

08006d60 <bmk6_execute>:
 8006d60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006d64:	4b15      	ldr	r3, [pc, #84]	; (8006dbc <bmk6_execute+0x5c>)
 8006d66:	4a16      	ldr	r2, [pc, #88]	; (8006dc0 <bmk6_execute+0x60>)
 8006d68:	699b      	ldr	r3, [r3, #24]
 8006d6a:	f8d2 9000 	ldr.w	r9, [r2]
 8006d6e:	689d      	ldr	r5, [r3, #8]
 8006d70:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8006dd0 <bmk6_execute+0x70>
 8006d74:	4f13      	ldr	r7, [pc, #76]	; (8006dc4 <bmk6_execute+0x64>)
 8006d76:	b083      	sub	sp, #12
 8006d78:	f7fd f8a2 	bl	8003ec0 <test_wait_tick>
 8006d7c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8006d80:	f7fd f8ae 	bl	8003ee0 <test_start_timer>
 8006d84:	2400      	movs	r4, #0
 8006d86:	3501      	adds	r5, #1
 8006d88:	4626      	mov	r6, r4
 8006d8a:	463b      	mov	r3, r7
 8006d8c:	9600      	str	r6, [sp, #0]
 8006d8e:	462a      	mov	r2, r5
 8006d90:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006d94:	4648      	mov	r0, r9
 8006d96:	f7fa fdfb 	bl	8001990 <chThdCreateStatic>
 8006d9a:	f898 3000 	ldrb.w	r3, [r8]
 8006d9e:	3401      	adds	r4, #1
 8006da0:	2b00      	cmp	r3, #0
 8006da2:	d0f2      	beq.n	8006d8a <bmk6_execute+0x2a>
 8006da4:	4808      	ldr	r0, [pc, #32]	; (8006dc8 <bmk6_execute+0x68>)
 8006da6:	f7fc ffbb 	bl	8003d20 <test_print>
 8006daa:	4620      	mov	r0, r4
 8006dac:	f7fc ff88 	bl	8003cc0 <test_printn>
 8006db0:	4806      	ldr	r0, [pc, #24]	; (8006dcc <bmk6_execute+0x6c>)
 8006db2:	b003      	add	sp, #12
 8006db4:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006db8:	f7fc bfca 	b.w	8003d50 <test_println>
 8006dbc:	20000ce8 	.word	0x20000ce8
 8006dc0:	08007ec0 	.word	0x08007ec0
 8006dc4:	08006fe1 	.word	0x08006fe1
 8006dc8:	08008660 	.word	0x08008660
 8006dcc:	08008670 	.word	0x08008670
 8006dd0:	20001651 	.word	0x20001651
	...

08006de0 <msg_loop_test>:
 8006de0:	b570      	push	{r4, r5, r6, lr}
 8006de2:	4605      	mov	r5, r0
 8006de4:	f7fd f86c 	bl	8003ec0 <test_wait_tick>
 8006de8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8006dec:	f7fd f878 	bl	8003ee0 <test_start_timer>
 8006df0:	4e07      	ldr	r6, [pc, #28]	; (8006e10 <msg_loop_test+0x30>)
 8006df2:	2400      	movs	r4, #0
 8006df4:	2101      	movs	r1, #1
 8006df6:	4628      	mov	r0, r5
 8006df8:	f7fb fc92 	bl	8002720 <chMsgSend>
 8006dfc:	7833      	ldrb	r3, [r6, #0]
 8006dfe:	3401      	adds	r4, #1
 8006e00:	2b00      	cmp	r3, #0
 8006e02:	d0f7      	beq.n	8006df4 <msg_loop_test+0x14>
 8006e04:	4628      	mov	r0, r5
 8006e06:	2100      	movs	r1, #0
 8006e08:	f7fb fc8a 	bl	8002720 <chMsgSend>
 8006e0c:	4620      	mov	r0, r4
 8006e0e:	bd70      	pop	{r4, r5, r6, pc}
 8006e10:	20001651 	.word	0x20001651
	...

08006e20 <bmk1_execute>:
 8006e20:	b510      	push	{r4, lr}
 8006e22:	4b13      	ldr	r3, [pc, #76]	; (8006e70 <bmk1_execute+0x50>)
 8006e24:	4a13      	ldr	r2, [pc, #76]	; (8006e74 <bmk1_execute+0x54>)
 8006e26:	699b      	ldr	r3, [r3, #24]
 8006e28:	6810      	ldr	r0, [r2, #0]
 8006e2a:	689a      	ldr	r2, [r3, #8]
 8006e2c:	4b12      	ldr	r3, [pc, #72]	; (8006e78 <bmk1_execute+0x58>)
 8006e2e:	b082      	sub	sp, #8
 8006e30:	2100      	movs	r1, #0
 8006e32:	3a01      	subs	r2, #1
 8006e34:	9100      	str	r1, [sp, #0]
 8006e36:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006e3a:	f7fa fda9 	bl	8001990 <chThdCreateStatic>
 8006e3e:	4b0f      	ldr	r3, [pc, #60]	; (8006e7c <bmk1_execute+0x5c>)
 8006e40:	6018      	str	r0, [r3, #0]
 8006e42:	f7ff ffcd 	bl	8006de0 <msg_loop_test>
 8006e46:	4604      	mov	r4, r0
 8006e48:	f7fd f822 	bl	8003e90 <test_wait_threads>
 8006e4c:	480c      	ldr	r0, [pc, #48]	; (8006e80 <bmk1_execute+0x60>)
 8006e4e:	f7fc ff67 	bl	8003d20 <test_print>
 8006e52:	4620      	mov	r0, r4
 8006e54:	f7fc ff34 	bl	8003cc0 <test_printn>
 8006e58:	480a      	ldr	r0, [pc, #40]	; (8006e84 <bmk1_execute+0x64>)
 8006e5a:	f7fc ff61 	bl	8003d20 <test_print>
 8006e5e:	0060      	lsls	r0, r4, #1
 8006e60:	f7fc ff2e 	bl	8003cc0 <test_printn>
 8006e64:	4808      	ldr	r0, [pc, #32]	; (8006e88 <bmk1_execute+0x68>)
 8006e66:	b002      	add	sp, #8
 8006e68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006e6c:	f7fc bf70 	b.w	8003d50 <test_println>
 8006e70:	20000ce8 	.word	0x20000ce8
 8006e74:	08007ec0 	.word	0x08007ec0
 8006e78:	08006d41 	.word	0x08006d41
 8006e7c:	20001654 	.word	0x20001654
 8006e80:	08008660 	.word	0x08008660
 8006e84:	08008640 	.word	0x08008640
 8006e88:	0800864c 	.word	0x0800864c
 8006e8c:	00000000 	.word	0x00000000

08006e90 <bmk2_execute>:
 8006e90:	b510      	push	{r4, lr}
 8006e92:	4b13      	ldr	r3, [pc, #76]	; (8006ee0 <bmk2_execute+0x50>)
 8006e94:	4a13      	ldr	r2, [pc, #76]	; (8006ee4 <bmk2_execute+0x54>)
 8006e96:	699b      	ldr	r3, [r3, #24]
 8006e98:	6810      	ldr	r0, [r2, #0]
 8006e9a:	689a      	ldr	r2, [r3, #8]
 8006e9c:	4b12      	ldr	r3, [pc, #72]	; (8006ee8 <bmk2_execute+0x58>)
 8006e9e:	b082      	sub	sp, #8
 8006ea0:	2100      	movs	r1, #0
 8006ea2:	3201      	adds	r2, #1
 8006ea4:	9100      	str	r1, [sp, #0]
 8006ea6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006eaa:	f7fa fd71 	bl	8001990 <chThdCreateStatic>
 8006eae:	4b0f      	ldr	r3, [pc, #60]	; (8006eec <bmk2_execute+0x5c>)
 8006eb0:	6018      	str	r0, [r3, #0]
 8006eb2:	f7ff ff95 	bl	8006de0 <msg_loop_test>
 8006eb6:	4604      	mov	r4, r0
 8006eb8:	f7fc ffea 	bl	8003e90 <test_wait_threads>
 8006ebc:	480c      	ldr	r0, [pc, #48]	; (8006ef0 <bmk2_execute+0x60>)
 8006ebe:	f7fc ff2f 	bl	8003d20 <test_print>
 8006ec2:	4620      	mov	r0, r4
 8006ec4:	f7fc fefc 	bl	8003cc0 <test_printn>
 8006ec8:	480a      	ldr	r0, [pc, #40]	; (8006ef4 <bmk2_execute+0x64>)
 8006eca:	f7fc ff29 	bl	8003d20 <test_print>
 8006ece:	0060      	lsls	r0, r4, #1
 8006ed0:	f7fc fef6 	bl	8003cc0 <test_printn>
 8006ed4:	4808      	ldr	r0, [pc, #32]	; (8006ef8 <bmk2_execute+0x68>)
 8006ed6:	b002      	add	sp, #8
 8006ed8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006edc:	f7fc bf38 	b.w	8003d50 <test_println>
 8006ee0:	20000ce8 	.word	0x20000ce8
 8006ee4:	08007ec0 	.word	0x08007ec0
 8006ee8:	08006d41 	.word	0x08006d41
 8006eec:	20001654 	.word	0x20001654
 8006ef0:	08008660 	.word	0x08008660
 8006ef4:	08008640 	.word	0x08008640
 8006ef8:	0800864c 	.word	0x0800864c
 8006efc:	00000000 	.word	0x00000000

08006f00 <bmk3_execute>:
 8006f00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006f04:	4f2c      	ldr	r7, [pc, #176]	; (8006fb8 <bmk3_execute+0xb8>)
 8006f06:	4e2d      	ldr	r6, [pc, #180]	; (8006fbc <bmk3_execute+0xbc>)
 8006f08:	69bb      	ldr	r3, [r7, #24]
 8006f0a:	6830      	ldr	r0, [r6, #0]
 8006f0c:	689a      	ldr	r2, [r3, #8]
 8006f0e:	4b2c      	ldr	r3, [pc, #176]	; (8006fc0 <bmk3_execute+0xc0>)
 8006f10:	4c2c      	ldr	r4, [pc, #176]	; (8006fc4 <bmk3_execute+0xc4>)
 8006f12:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8006fd4 <bmk3_execute+0xd4>
 8006f16:	b082      	sub	sp, #8
 8006f18:	2500      	movs	r5, #0
 8006f1a:	3201      	adds	r2, #1
 8006f1c:	9500      	str	r5, [sp, #0]
 8006f1e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006f22:	f7fa fd35 	bl	8001990 <chThdCreateStatic>
 8006f26:	69ba      	ldr	r2, [r7, #24]
 8006f28:	6873      	ldr	r3, [r6, #4]
 8006f2a:	6892      	ldr	r2, [r2, #8]
 8006f2c:	6020      	str	r0, [r4, #0]
 8006f2e:	3a02      	subs	r2, #2
 8006f30:	9500      	str	r5, [sp, #0]
 8006f32:	4618      	mov	r0, r3
 8006f34:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006f38:	4643      	mov	r3, r8
 8006f3a:	f7fa fd29 	bl	8001990 <chThdCreateStatic>
 8006f3e:	69ba      	ldr	r2, [r7, #24]
 8006f40:	68b3      	ldr	r3, [r6, #8]
 8006f42:	6892      	ldr	r2, [r2, #8]
 8006f44:	6060      	str	r0, [r4, #4]
 8006f46:	3a03      	subs	r2, #3
 8006f48:	9500      	str	r5, [sp, #0]
 8006f4a:	4618      	mov	r0, r3
 8006f4c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006f50:	4643      	mov	r3, r8
 8006f52:	f7fa fd1d 	bl	8001990 <chThdCreateStatic>
 8006f56:	69ba      	ldr	r2, [r7, #24]
 8006f58:	68f3      	ldr	r3, [r6, #12]
 8006f5a:	6892      	ldr	r2, [r2, #8]
 8006f5c:	60a0      	str	r0, [r4, #8]
 8006f5e:	3a04      	subs	r2, #4
 8006f60:	9500      	str	r5, [sp, #0]
 8006f62:	4618      	mov	r0, r3
 8006f64:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006f68:	4643      	mov	r3, r8
 8006f6a:	f7fa fd11 	bl	8001990 <chThdCreateStatic>
 8006f6e:	69ba      	ldr	r2, [r7, #24]
 8006f70:	6933      	ldr	r3, [r6, #16]
 8006f72:	6892      	ldr	r2, [r2, #8]
 8006f74:	60e0      	str	r0, [r4, #12]
 8006f76:	3a05      	subs	r2, #5
 8006f78:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006f7c:	4618      	mov	r0, r3
 8006f7e:	9500      	str	r5, [sp, #0]
 8006f80:	4643      	mov	r3, r8
 8006f82:	f7fa fd05 	bl	8001990 <chThdCreateStatic>
 8006f86:	6120      	str	r0, [r4, #16]
 8006f88:	6820      	ldr	r0, [r4, #0]
 8006f8a:	f7ff ff29 	bl	8006de0 <msg_loop_test>
 8006f8e:	4604      	mov	r4, r0
 8006f90:	f7fc ff7e 	bl	8003e90 <test_wait_threads>
 8006f94:	480c      	ldr	r0, [pc, #48]	; (8006fc8 <bmk3_execute+0xc8>)
 8006f96:	f7fc fec3 	bl	8003d20 <test_print>
 8006f9a:	4620      	mov	r0, r4
 8006f9c:	f7fc fe90 	bl	8003cc0 <test_printn>
 8006fa0:	480a      	ldr	r0, [pc, #40]	; (8006fcc <bmk3_execute+0xcc>)
 8006fa2:	f7fc febd 	bl	8003d20 <test_print>
 8006fa6:	0060      	lsls	r0, r4, #1
 8006fa8:	f7fc fe8a 	bl	8003cc0 <test_printn>
 8006fac:	4808      	ldr	r0, [pc, #32]	; (8006fd0 <bmk3_execute+0xd0>)
 8006fae:	b002      	add	sp, #8
 8006fb0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006fb4:	f7fc becc 	b.w	8003d50 <test_println>
 8006fb8:	20000ce8 	.word	0x20000ce8
 8006fbc:	08007ec0 	.word	0x08007ec0
 8006fc0:	08006d41 	.word	0x08006d41
 8006fc4:	20001654 	.word	0x20001654
 8006fc8:	08008660 	.word	0x08008660
 8006fcc:	08008640 	.word	0x08008640
 8006fd0:	0800864c 	.word	0x0800864c
 8006fd4:	08006fe1 	.word	0x08006fe1
	...

08006fe0 <thread1>:
 8006fe0:	f7fa bd96 	b.w	8001b10 <chThdExit>
	...

08006ff0 <bmk4_execute>:
 8006ff0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006ff4:	4b25      	ldr	r3, [pc, #148]	; (800708c <bmk4_execute+0x9c>)
 8006ff6:	4a26      	ldr	r2, [pc, #152]	; (8007090 <bmk4_execute+0xa0>)
 8006ff8:	699b      	ldr	r3, [r3, #24]
 8006ffa:	6810      	ldr	r0, [r2, #0]
 8006ffc:	689a      	ldr	r2, [r3, #8]
 8006ffe:	4b25      	ldr	r3, [pc, #148]	; (8007094 <bmk4_execute+0xa4>)
 8007000:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 80070a4 <bmk4_execute+0xb4>
 8007004:	b082      	sub	sp, #8
 8007006:	2500      	movs	r5, #0
 8007008:	3201      	adds	r2, #1
 800700a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800700e:	9500      	str	r5, [sp, #0]
 8007010:	f7fa fcbe 	bl	8001990 <chThdCreateStatic>
 8007014:	4b20      	ldr	r3, [pc, #128]	; (8007098 <bmk4_execute+0xa8>)
 8007016:	4604      	mov	r4, r0
 8007018:	6018      	str	r0, [r3, #0]
 800701a:	f7fc ff51 	bl	8003ec0 <test_wait_tick>
 800701e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8007022:	f7fc ff5d 	bl	8003ee0 <test_start_timer>
 8007026:	462e      	mov	r6, r5
 8007028:	2720      	movs	r7, #32
 800702a:	f387 8811 	msr	BASEPRI, r7
 800702e:	2100      	movs	r1, #0
 8007030:	4620      	mov	r0, r4
 8007032:	f7fa fbcd 	bl	80017d0 <chSchWakeupS>
 8007036:	4620      	mov	r0, r4
 8007038:	2100      	movs	r1, #0
 800703a:	f7fa fbc9 	bl	80017d0 <chSchWakeupS>
 800703e:	4620      	mov	r0, r4
 8007040:	2100      	movs	r1, #0
 8007042:	f7fa fbc5 	bl	80017d0 <chSchWakeupS>
 8007046:	4620      	mov	r0, r4
 8007048:	2100      	movs	r1, #0
 800704a:	f7fa fbc1 	bl	80017d0 <chSchWakeupS>
 800704e:	f386 8811 	msr	BASEPRI, r6
 8007052:	f898 3000 	ldrb.w	r3, [r8]
 8007056:	3504      	adds	r5, #4
 8007058:	2b00      	cmp	r3, #0
 800705a:	d0e6      	beq.n	800702a <bmk4_execute+0x3a>
 800705c:	f387 8811 	msr	BASEPRI, r7
 8007060:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8007064:	4620      	mov	r0, r4
 8007066:	f7fa fbb3 	bl	80017d0 <chSchWakeupS>
 800706a:	f386 8811 	msr	BASEPRI, r6
 800706e:	f7fc ff0f 	bl	8003e90 <test_wait_threads>
 8007072:	480a      	ldr	r0, [pc, #40]	; (800709c <bmk4_execute+0xac>)
 8007074:	f7fc fe54 	bl	8003d20 <test_print>
 8007078:	0068      	lsls	r0, r5, #1
 800707a:	f7fc fe21 	bl	8003cc0 <test_printn>
 800707e:	4808      	ldr	r0, [pc, #32]	; (80070a0 <bmk4_execute+0xb0>)
 8007080:	b002      	add	sp, #8
 8007082:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007086:	f7fc be63 	b.w	8003d50 <test_println>
 800708a:	bf00      	nop
 800708c:	20000ce8 	.word	0x20000ce8
 8007090:	08007ec0 	.word	0x08007ec0
 8007094:	080070b1 	.word	0x080070b1
 8007098:	20001654 	.word	0x20001654
 800709c:	08008660 	.word	0x08008660
 80070a0:	0800864c 	.word	0x0800864c
 80070a4:	20001651 	.word	0x20001651
	...

080070b0 <thread4>:
 80070b0:	4a07      	ldr	r2, [pc, #28]	; (80070d0 <thread4+0x20>)
 80070b2:	b510      	push	{r4, lr}
 80070b4:	2320      	movs	r3, #32
 80070b6:	6994      	ldr	r4, [r2, #24]
 80070b8:	f383 8811 	msr	BASEPRI, r3
 80070bc:	2003      	movs	r0, #3
 80070be:	f7fa fb47 	bl	8001750 <chSchGoSleepS>
 80070c2:	6a23      	ldr	r3, [r4, #32]
 80070c4:	2b00      	cmp	r3, #0
 80070c6:	d0f9      	beq.n	80070bc <thread4+0xc>
 80070c8:	2300      	movs	r3, #0
 80070ca:	f383 8811 	msr	BASEPRI, r3
 80070ce:	bd10      	pop	{r4, pc}
 80070d0:	20000ce8 	.word	0x20000ce8
	...

080070e0 <bmk5_execute>:
 80070e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80070e4:	4b16      	ldr	r3, [pc, #88]	; (8007140 <bmk5_execute+0x60>)
 80070e6:	4a17      	ldr	r2, [pc, #92]	; (8007144 <bmk5_execute+0x64>)
 80070e8:	699b      	ldr	r3, [r3, #24]
 80070ea:	f8d2 9000 	ldr.w	r9, [r2]
 80070ee:	689d      	ldr	r5, [r3, #8]
 80070f0:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8007154 <bmk5_execute+0x74>
 80070f4:	4f14      	ldr	r7, [pc, #80]	; (8007148 <bmk5_execute+0x68>)
 80070f6:	b083      	sub	sp, #12
 80070f8:	f7fc fee2 	bl	8003ec0 <test_wait_tick>
 80070fc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8007100:	f7fc feee 	bl	8003ee0 <test_start_timer>
 8007104:	2400      	movs	r4, #0
 8007106:	3d01      	subs	r5, #1
 8007108:	4626      	mov	r6, r4
 800710a:	463b      	mov	r3, r7
 800710c:	462a      	mov	r2, r5
 800710e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007112:	9600      	str	r6, [sp, #0]
 8007114:	4648      	mov	r0, r9
 8007116:	f7fa fc3b 	bl	8001990 <chThdCreateStatic>
 800711a:	f7fa fd01 	bl	8001b20 <chThdWait>
 800711e:	f898 3000 	ldrb.w	r3, [r8]
 8007122:	3401      	adds	r4, #1
 8007124:	2b00      	cmp	r3, #0
 8007126:	d0f0      	beq.n	800710a <bmk5_execute+0x2a>
 8007128:	4808      	ldr	r0, [pc, #32]	; (800714c <bmk5_execute+0x6c>)
 800712a:	f7fc fdf9 	bl	8003d20 <test_print>
 800712e:	4620      	mov	r0, r4
 8007130:	f7fc fdc6 	bl	8003cc0 <test_printn>
 8007134:	4806      	ldr	r0, [pc, #24]	; (8007150 <bmk5_execute+0x70>)
 8007136:	b003      	add	sp, #12
 8007138:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800713c:	f7fc be08 	b.w	8003d50 <test_println>
 8007140:	20000ce8 	.word	0x20000ce8
 8007144:	08007ec0 	.word	0x08007ec0
 8007148:	08006fe1 	.word	0x08006fe1
 800714c:	08008660 	.word	0x08008660
 8007150:	08008670 	.word	0x08008670
 8007154:	20001651 	.word	0x20001651
	...

08007160 <bmk7_execute>:
 8007160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007164:	f8df 8100 	ldr.w	r8, [pc, #256]	; 8007268 <bmk7_execute+0x108>
 8007168:	4d37      	ldr	r5, [pc, #220]	; (8007248 <bmk7_execute+0xe8>)
 800716a:	f8d8 3018 	ldr.w	r3, [r8, #24]
 800716e:	6828      	ldr	r0, [r5, #0]
 8007170:	689a      	ldr	r2, [r3, #8]
 8007172:	4b36      	ldr	r3, [pc, #216]	; (800724c <bmk7_execute+0xec>)
 8007174:	4f36      	ldr	r7, [pc, #216]	; (8007250 <bmk7_execute+0xf0>)
 8007176:	4e37      	ldr	r6, [pc, #220]	; (8007254 <bmk7_execute+0xf4>)
 8007178:	b082      	sub	sp, #8
 800717a:	2400      	movs	r4, #0
 800717c:	3205      	adds	r2, #5
 800717e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007182:	9400      	str	r4, [sp, #0]
 8007184:	f7fa fc04 	bl	8001990 <chThdCreateStatic>
 8007188:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800718c:	686b      	ldr	r3, [r5, #4]
 800718e:	6892      	ldr	r2, [r2, #8]
 8007190:	6038      	str	r0, [r7, #0]
 8007192:	3204      	adds	r2, #4
 8007194:	4618      	mov	r0, r3
 8007196:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800719a:	4b2c      	ldr	r3, [pc, #176]	; (800724c <bmk7_execute+0xec>)
 800719c:	9400      	str	r4, [sp, #0]
 800719e:	f7fa fbf7 	bl	8001990 <chThdCreateStatic>
 80071a2:	f8d8 2018 	ldr.w	r2, [r8, #24]
 80071a6:	68ab      	ldr	r3, [r5, #8]
 80071a8:	6892      	ldr	r2, [r2, #8]
 80071aa:	6078      	str	r0, [r7, #4]
 80071ac:	3203      	adds	r2, #3
 80071ae:	4618      	mov	r0, r3
 80071b0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80071b4:	4b25      	ldr	r3, [pc, #148]	; (800724c <bmk7_execute+0xec>)
 80071b6:	9400      	str	r4, [sp, #0]
 80071b8:	f7fa fbea 	bl	8001990 <chThdCreateStatic>
 80071bc:	f8d8 2018 	ldr.w	r2, [r8, #24]
 80071c0:	68eb      	ldr	r3, [r5, #12]
 80071c2:	6892      	ldr	r2, [r2, #8]
 80071c4:	60b8      	str	r0, [r7, #8]
 80071c6:	3202      	adds	r2, #2
 80071c8:	4618      	mov	r0, r3
 80071ca:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80071ce:	4b1f      	ldr	r3, [pc, #124]	; (800724c <bmk7_execute+0xec>)
 80071d0:	9400      	str	r4, [sp, #0]
 80071d2:	f7fa fbdd 	bl	8001990 <chThdCreateStatic>
 80071d6:	f8d8 2018 	ldr.w	r2, [r8, #24]
 80071da:	692b      	ldr	r3, [r5, #16]
 80071dc:	6892      	ldr	r2, [r2, #8]
 80071de:	60f8      	str	r0, [r7, #12]
 80071e0:	3201      	adds	r2, #1
 80071e2:	4618      	mov	r0, r3
 80071e4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80071e8:	4b18      	ldr	r3, [pc, #96]	; (800724c <bmk7_execute+0xec>)
 80071ea:	9400      	str	r4, [sp, #0]
 80071ec:	f7fa fbd0 	bl	8001990 <chThdCreateStatic>
 80071f0:	6138      	str	r0, [r7, #16]
 80071f2:	f7fc fe65 	bl	8003ec0 <test_wait_tick>
 80071f6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80071fa:	4d17      	ldr	r5, [pc, #92]	; (8007258 <bmk7_execute+0xf8>)
 80071fc:	f7fc fe70 	bl	8003ee0 <test_start_timer>
 8007200:	2100      	movs	r1, #0
 8007202:	4628      	mov	r0, r5
 8007204:	f7fa fe04 	bl	8001e10 <chSemReset>
 8007208:	7833      	ldrb	r3, [r6, #0]
 800720a:	3401      	adds	r4, #1
 800720c:	2b00      	cmp	r3, #0
 800720e:	d0f7      	beq.n	8007200 <bmk7_execute+0xa0>
 8007210:	f7fc fe2e 	bl	8003e70 <test_terminate_threads>
 8007214:	2100      	movs	r1, #0
 8007216:	4810      	ldr	r0, [pc, #64]	; (8007258 <bmk7_execute+0xf8>)
 8007218:	f7fa fdfa 	bl	8001e10 <chSemReset>
 800721c:	f7fc fe38 	bl	8003e90 <test_wait_threads>
 8007220:	480e      	ldr	r0, [pc, #56]	; (800725c <bmk7_execute+0xfc>)
 8007222:	f7fc fd7d 	bl	8003d20 <test_print>
 8007226:	4620      	mov	r0, r4
 8007228:	f7fc fd4a 	bl	8003cc0 <test_printn>
 800722c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8007230:	480b      	ldr	r0, [pc, #44]	; (8007260 <bmk7_execute+0x100>)
 8007232:	f7fc fd75 	bl	8003d20 <test_print>
 8007236:	0060      	lsls	r0, r4, #1
 8007238:	f7fc fd42 	bl	8003cc0 <test_printn>
 800723c:	4809      	ldr	r0, [pc, #36]	; (8007264 <bmk7_execute+0x104>)
 800723e:	b002      	add	sp, #8
 8007240:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007244:	f7fc bd84 	b.w	8003d50 <test_println>
 8007248:	08007ec0 	.word	0x08007ec0
 800724c:	08007271 	.word	0x08007271
 8007250:	20001654 	.word	0x20001654
 8007254:	20001651 	.word	0x20001651
 8007258:	20001720 	.word	0x20001720
 800725c:	08008660 	.word	0x08008660
 8007260:	08008680 	.word	0x08008680
 8007264:	0800864c 	.word	0x0800864c
 8007268:	20000ce8 	.word	0x20000ce8
 800726c:	00000000 	.word	0x00000000

08007270 <thread3>:
 8007270:	b538      	push	{r3, r4, r5, lr}
 8007272:	4c07      	ldr	r4, [pc, #28]	; (8007290 <thread3+0x20>)
 8007274:	69a3      	ldr	r3, [r4, #24]
 8007276:	7f5b      	ldrb	r3, [r3, #29]
 8007278:	075a      	lsls	r2, r3, #29
 800727a:	d407      	bmi.n	800728c <thread3+0x1c>
 800727c:	4d05      	ldr	r5, [pc, #20]	; (8007294 <thread3+0x24>)
 800727e:	4628      	mov	r0, r5
 8007280:	f7fa fdd6 	bl	8001e30 <chSemWait>
 8007284:	69a3      	ldr	r3, [r4, #24]
 8007286:	7f5b      	ldrb	r3, [r3, #29]
 8007288:	075b      	lsls	r3, r3, #29
 800728a:	d5f8      	bpl.n	800727e <thread3+0xe>
 800728c:	bd38      	pop	{r3, r4, r5, pc}
 800728e:	bf00      	nop
 8007290:	20000ce8 	.word	0x20000ce8
 8007294:	20001720 	.word	0x20001720
	...

080072a0 <bmk7_setup>:
 80072a0:	2100      	movs	r1, #0
 80072a2:	4801      	ldr	r0, [pc, #4]	; (80072a8 <bmk7_setup+0x8>)
 80072a4:	f7fa bd94 	b.w	8001dd0 <chSemObjectInit>
 80072a8:	20001720 	.word	0x20001720
 80072ac:	00000000 	.word	0x00000000

080072b0 <bmk11_setup>:
 80072b0:	2101      	movs	r1, #1
 80072b2:	4801      	ldr	r0, [pc, #4]	; (80072b8 <bmk11_setup+0x8>)
 80072b4:	f7fa bd8c 	b.w	8001dd0 <chSemObjectInit>
 80072b8:	20001720 	.word	0x20001720
 80072bc:	00000000 	.word	0x00000000

080072c0 <bmk8_execute>:
 80072c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072c4:	b084      	sub	sp, #16
 80072c6:	ac04      	add	r4, sp, #16
 80072c8:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8007398 <bmk8_execute+0xd8>
 80072cc:	4f2d      	ldr	r7, [pc, #180]	; (8007384 <bmk8_execute+0xc4>)
 80072ce:	4e2e      	ldr	r6, [pc, #184]	; (8007388 <bmk8_execute+0xc8>)
 80072d0:	4d2e      	ldr	r5, [pc, #184]	; (800738c <bmk8_execute+0xcc>)
 80072d2:	2300      	movs	r3, #0
 80072d4:	f844 3d04 	str.w	r3, [r4, #-4]!
 80072d8:	f7fc fdf2 	bl	8003ec0 <test_wait_tick>
 80072dc:	f8d8 3018 	ldr.w	r3, [r8, #24]
 80072e0:	6838      	ldr	r0, [r7, #0]
 80072e2:	689a      	ldr	r2, [r3, #8]
 80072e4:	9400      	str	r4, [sp, #0]
 80072e6:	4633      	mov	r3, r6
 80072e8:	3a01      	subs	r2, #1
 80072ea:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80072ee:	f7fa fb4f 	bl	8001990 <chThdCreateStatic>
 80072f2:	f8d8 2018 	ldr.w	r2, [r8, #24]
 80072f6:	687b      	ldr	r3, [r7, #4]
 80072f8:	6892      	ldr	r2, [r2, #8]
 80072fa:	6028      	str	r0, [r5, #0]
 80072fc:	3a01      	subs	r2, #1
 80072fe:	9400      	str	r4, [sp, #0]
 8007300:	4618      	mov	r0, r3
 8007302:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007306:	4633      	mov	r3, r6
 8007308:	f7fa fb42 	bl	8001990 <chThdCreateStatic>
 800730c:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8007310:	68bb      	ldr	r3, [r7, #8]
 8007312:	6892      	ldr	r2, [r2, #8]
 8007314:	6068      	str	r0, [r5, #4]
 8007316:	3a01      	subs	r2, #1
 8007318:	9400      	str	r4, [sp, #0]
 800731a:	4618      	mov	r0, r3
 800731c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007320:	4633      	mov	r3, r6
 8007322:	f7fa fb35 	bl	8001990 <chThdCreateStatic>
 8007326:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800732a:	68fb      	ldr	r3, [r7, #12]
 800732c:	6892      	ldr	r2, [r2, #8]
 800732e:	60a8      	str	r0, [r5, #8]
 8007330:	3a01      	subs	r2, #1
 8007332:	9400      	str	r4, [sp, #0]
 8007334:	4618      	mov	r0, r3
 8007336:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800733a:	4633      	mov	r3, r6
 800733c:	f7fa fb28 	bl	8001990 <chThdCreateStatic>
 8007340:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8007344:	693b      	ldr	r3, [r7, #16]
 8007346:	6892      	ldr	r2, [r2, #8]
 8007348:	60e8      	str	r0, [r5, #12]
 800734a:	3a01      	subs	r2, #1
 800734c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007350:	9400      	str	r4, [sp, #0]
 8007352:	4618      	mov	r0, r3
 8007354:	4633      	mov	r3, r6
 8007356:	f7fa fb1b 	bl	8001990 <chThdCreateStatic>
 800735a:	6128      	str	r0, [r5, #16]
 800735c:	f242 7010 	movw	r0, #10000	; 0x2710
 8007360:	f7fa fb7e 	bl	8001a60 <chThdSleep>
 8007364:	f7fc fd84 	bl	8003e70 <test_terminate_threads>
 8007368:	f7fc fd92 	bl	8003e90 <test_wait_threads>
 800736c:	4808      	ldr	r0, [pc, #32]	; (8007390 <bmk8_execute+0xd0>)
 800736e:	f7fc fcd7 	bl	8003d20 <test_print>
 8007372:	9803      	ldr	r0, [sp, #12]
 8007374:	f7fc fca4 	bl	8003cc0 <test_printn>
 8007378:	4806      	ldr	r0, [pc, #24]	; (8007394 <bmk8_execute+0xd4>)
 800737a:	f7fc fce9 	bl	8003d50 <test_println>
 800737e:	b004      	add	sp, #16
 8007380:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007384:	08007ec0 	.word	0x08007ec0
 8007388:	080073a1 	.word	0x080073a1
 800738c:	20001654 	.word	0x20001654
 8007390:	08008660 	.word	0x08008660
 8007394:	0800864c 	.word	0x0800864c
 8007398:	20000ce8 	.word	0x20000ce8
 800739c:	00000000 	.word	0x00000000

080073a0 <thread8>:
 80073a0:	b538      	push	{r3, r4, r5, lr}
 80073a2:	4d09      	ldr	r5, [pc, #36]	; (80073c8 <thread8+0x28>)
 80073a4:	4604      	mov	r4, r0
 80073a6:	f7fa fb7b 	bl	8001aa0 <chThdYield>
 80073aa:	f7fa fb79 	bl	8001aa0 <chThdYield>
 80073ae:	f7fa fb77 	bl	8001aa0 <chThdYield>
 80073b2:	f7fa fb75 	bl	8001aa0 <chThdYield>
 80073b6:	6823      	ldr	r3, [r4, #0]
 80073b8:	69aa      	ldr	r2, [r5, #24]
 80073ba:	3304      	adds	r3, #4
 80073bc:	6023      	str	r3, [r4, #0]
 80073be:	7f53      	ldrb	r3, [r2, #29]
 80073c0:	075b      	lsls	r3, r3, #29
 80073c2:	d5f0      	bpl.n	80073a6 <thread8+0x6>
 80073c4:	bd38      	pop	{r3, r4, r5, pc}
 80073c6:	bf00      	nop
 80073c8:	20000ce8 	.word	0x20000ce8
 80073cc:	00000000 	.word	0x00000000

080073d0 <bmk9_execute>:
 80073d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80073d2:	b083      	sub	sp, #12
 80073d4:	2500      	movs	r5, #0
 80073d6:	462b      	mov	r3, r5
 80073d8:	2210      	movs	r2, #16
 80073da:	4923      	ldr	r1, [pc, #140]	; (8007468 <bmk9_execute+0x98>)
 80073dc:	4823      	ldr	r0, [pc, #140]	; (800746c <bmk9_execute+0x9c>)
 80073de:	9500      	str	r5, [sp, #0]
 80073e0:	f7fb fafe 	bl	80029e0 <chIQObjectInit>
 80073e4:	f7fc fd6c 	bl	8003ec0 <test_wait_tick>
 80073e8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80073ec:	f7fc fd78 	bl	8003ee0 <test_start_timer>
 80073f0:	4f1f      	ldr	r7, [pc, #124]	; (8007470 <bmk9_execute+0xa0>)
 80073f2:	4c1e      	ldr	r4, [pc, #120]	; (800746c <bmk9_execute+0x9c>)
 80073f4:	462e      	mov	r6, r5
 80073f6:	2320      	movs	r3, #32
 80073f8:	f383 8811 	msr	BASEPRI, r3
 80073fc:	2100      	movs	r1, #0
 80073fe:	4620      	mov	r0, r4
 8007400:	f7fb fb0e 	bl	8002a20 <chIQPutI>
 8007404:	4620      	mov	r0, r4
 8007406:	2101      	movs	r1, #1
 8007408:	f7fb fb0a 	bl	8002a20 <chIQPutI>
 800740c:	4620      	mov	r0, r4
 800740e:	2102      	movs	r1, #2
 8007410:	f7fb fb06 	bl	8002a20 <chIQPutI>
 8007414:	4620      	mov	r0, r4
 8007416:	2103      	movs	r1, #3
 8007418:	f7fb fb02 	bl	8002a20 <chIQPutI>
 800741c:	f386 8811 	msr	BASEPRI, r6
 8007420:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8007424:	4620      	mov	r0, r4
 8007426:	f7fb fb1b 	bl	8002a60 <chIQGetTimeout>
 800742a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800742e:	4620      	mov	r0, r4
 8007430:	f7fb fb16 	bl	8002a60 <chIQGetTimeout>
 8007434:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8007438:	4620      	mov	r0, r4
 800743a:	f7fb fb11 	bl	8002a60 <chIQGetTimeout>
 800743e:	4620      	mov	r0, r4
 8007440:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8007444:	f7fb fb0c 	bl	8002a60 <chIQGetTimeout>
 8007448:	783b      	ldrb	r3, [r7, #0]
 800744a:	3501      	adds	r5, #1
 800744c:	2b00      	cmp	r3, #0
 800744e:	d0d2      	beq.n	80073f6 <bmk9_execute+0x26>
 8007450:	4808      	ldr	r0, [pc, #32]	; (8007474 <bmk9_execute+0xa4>)
 8007452:	f7fc fc65 	bl	8003d20 <test_print>
 8007456:	00a8      	lsls	r0, r5, #2
 8007458:	f7fc fc32 	bl	8003cc0 <test_printn>
 800745c:	4806      	ldr	r0, [pc, #24]	; (8007478 <bmk9_execute+0xa8>)
 800745e:	b003      	add	sp, #12
 8007460:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8007464:	f7fc bc74 	b.w	8003d50 <test_println>
 8007468:	200016dc 	.word	0x200016dc
 800746c:	200016ec 	.word	0x200016ec
 8007470:	20001651 	.word	0x20001651
 8007474:	08008660 	.word	0x08008660
 8007478:	080086a0 	.word	0x080086a0
 800747c:	00000000 	.word	0x00000000

08007480 <bmk10_execute>:
 8007480:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007484:	f7fc fd1c 	bl	8003ec0 <test_wait_tick>
 8007488:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800748c:	f7fc fd28 	bl	8003ee0 <test_start_timer>
 8007490:	2400      	movs	r4, #0
 8007492:	f8df a070 	ldr.w	sl, [pc, #112]	; 8007504 <bmk10_execute+0x84>
 8007496:	4f16      	ldr	r7, [pc, #88]	; (80074f0 <bmk10_execute+0x70>)
 8007498:	4e16      	ldr	r6, [pc, #88]	; (80074f4 <bmk10_execute+0x74>)
 800749a:	4d17      	ldr	r5, [pc, #92]	; (80074f8 <bmk10_execute+0x78>)
 800749c:	46a1      	mov	r9, r4
 800749e:	f04f 0820 	mov.w	r8, #32
 80074a2:	f388 8811 	msr	BASEPRI, r8
 80074a6:	2300      	movs	r3, #0
 80074a8:	463a      	mov	r2, r7
 80074aa:	4630      	mov	r0, r6
 80074ac:	2101      	movs	r1, #1
 80074ae:	f7fa f877 	bl	80015a0 <chVTDoSetI>
 80074b2:	463a      	mov	r2, r7
 80074b4:	2300      	movs	r3, #0
 80074b6:	f242 7110 	movw	r1, #10000	; 0x2710
 80074ba:	4628      	mov	r0, r5
 80074bc:	f7fa f870 	bl	80015a0 <chVTDoSetI>
 80074c0:	4630      	mov	r0, r6
 80074c2:	f7fa f8ad 	bl	8001620 <chVTDoResetI>
 80074c6:	4628      	mov	r0, r5
 80074c8:	f7fa f8aa 	bl	8001620 <chVTDoResetI>
 80074cc:	f389 8811 	msr	BASEPRI, r9
 80074d0:	f89a 3000 	ldrb.w	r3, [sl]
 80074d4:	3401      	adds	r4, #1
 80074d6:	2b00      	cmp	r3, #0
 80074d8:	d0e3      	beq.n	80074a2 <bmk10_execute+0x22>
 80074da:	4808      	ldr	r0, [pc, #32]	; (80074fc <bmk10_execute+0x7c>)
 80074dc:	f7fc fc20 	bl	8003d20 <test_print>
 80074e0:	0060      	lsls	r0, r4, #1
 80074e2:	f7fc fbed 	bl	8003cc0 <test_printn>
 80074e6:	4806      	ldr	r0, [pc, #24]	; (8007500 <bmk10_execute+0x80>)
 80074e8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80074ec:	f7fc bc30 	b.w	8003d50 <test_println>
 80074f0:	08006c41 	.word	0x08006c41
 80074f4:	2000172c 	.word	0x2000172c
 80074f8:	20001740 	.word	0x20001740
 80074fc:	08008660 	.word	0x08008660
 8007500:	08008560 	.word	0x08008560
 8007504:	20001651 	.word	0x20001651
	...

08007510 <bmk11_execute>:
 8007510:	b570      	push	{r4, r5, r6, lr}
 8007512:	f7fc fcd5 	bl	8003ec0 <test_wait_tick>
 8007516:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800751a:	f7fc fce1 	bl	8003ee0 <test_start_timer>
 800751e:	4e15      	ldr	r6, [pc, #84]	; (8007574 <bmk11_execute+0x64>)
 8007520:	4c15      	ldr	r4, [pc, #84]	; (8007578 <bmk11_execute+0x68>)
 8007522:	2500      	movs	r5, #0
 8007524:	4620      	mov	r0, r4
 8007526:	f7fa fc83 	bl	8001e30 <chSemWait>
 800752a:	4620      	mov	r0, r4
 800752c:	f7fa fcf0 	bl	8001f10 <chSemSignal>
 8007530:	4620      	mov	r0, r4
 8007532:	f7fa fc7d 	bl	8001e30 <chSemWait>
 8007536:	4620      	mov	r0, r4
 8007538:	f7fa fcea 	bl	8001f10 <chSemSignal>
 800753c:	4620      	mov	r0, r4
 800753e:	f7fa fc77 	bl	8001e30 <chSemWait>
 8007542:	4620      	mov	r0, r4
 8007544:	f7fa fce4 	bl	8001f10 <chSemSignal>
 8007548:	4620      	mov	r0, r4
 800754a:	f7fa fc71 	bl	8001e30 <chSemWait>
 800754e:	4620      	mov	r0, r4
 8007550:	f7fa fcde 	bl	8001f10 <chSemSignal>
 8007554:	7833      	ldrb	r3, [r6, #0]
 8007556:	3501      	adds	r5, #1
 8007558:	2b00      	cmp	r3, #0
 800755a:	d0e3      	beq.n	8007524 <bmk11_execute+0x14>
 800755c:	4807      	ldr	r0, [pc, #28]	; (800757c <bmk11_execute+0x6c>)
 800755e:	f7fc fbdf 	bl	8003d20 <test_print>
 8007562:	00a8      	lsls	r0, r5, #2
 8007564:	f7fc fbac 	bl	8003cc0 <test_printn>
 8007568:	4805      	ldr	r0, [pc, #20]	; (8007580 <bmk11_execute+0x70>)
 800756a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800756e:	f7fc bbef 	b.w	8003d50 <test_println>
 8007572:	bf00      	nop
 8007574:	20001651 	.word	0x20001651
 8007578:	20001720 	.word	0x20001720
 800757c:	08008660 	.word	0x08008660
 8007580:	08008570 	.word	0x08008570
	...

08007590 <bmk12_execute>:
 8007590:	b570      	push	{r4, r5, r6, lr}
 8007592:	f7fc fc95 	bl	8003ec0 <test_wait_tick>
 8007596:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800759a:	f7fc fca1 	bl	8003ee0 <test_start_timer>
 800759e:	4e15      	ldr	r6, [pc, #84]	; (80075f4 <bmk12_execute+0x64>)
 80075a0:	4c15      	ldr	r4, [pc, #84]	; (80075f8 <bmk12_execute+0x68>)
 80075a2:	2500      	movs	r5, #0
 80075a4:	4620      	mov	r0, r4
 80075a6:	f7fa fdab 	bl	8002100 <chMtxLock>
 80075aa:	4620      	mov	r0, r4
 80075ac:	f7fa fdd0 	bl	8002150 <chMtxUnlock>
 80075b0:	4620      	mov	r0, r4
 80075b2:	f7fa fda5 	bl	8002100 <chMtxLock>
 80075b6:	4620      	mov	r0, r4
 80075b8:	f7fa fdca 	bl	8002150 <chMtxUnlock>
 80075bc:	4620      	mov	r0, r4
 80075be:	f7fa fd9f 	bl	8002100 <chMtxLock>
 80075c2:	4620      	mov	r0, r4
 80075c4:	f7fa fdc4 	bl	8002150 <chMtxUnlock>
 80075c8:	4620      	mov	r0, r4
 80075ca:	f7fa fd99 	bl	8002100 <chMtxLock>
 80075ce:	4620      	mov	r0, r4
 80075d0:	f7fa fdbe 	bl	8002150 <chMtxUnlock>
 80075d4:	7833      	ldrb	r3, [r6, #0]
 80075d6:	3501      	adds	r5, #1
 80075d8:	2b00      	cmp	r3, #0
 80075da:	d0e3      	beq.n	80075a4 <bmk12_execute+0x14>
 80075dc:	4807      	ldr	r0, [pc, #28]	; (80075fc <bmk12_execute+0x6c>)
 80075de:	f7fc fb9f 	bl	8003d20 <test_print>
 80075e2:	00a8      	lsls	r0, r5, #2
 80075e4:	f7fc fb6c 	bl	8003cc0 <test_printn>
 80075e8:	4805      	ldr	r0, [pc, #20]	; (8007600 <bmk12_execute+0x70>)
 80075ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80075ee:	f7fc bbaf 	b.w	8003d50 <test_println>
 80075f2:	bf00      	nop
 80075f4:	20001651 	.word	0x20001651
 80075f8:	20001710 	.word	0x20001710
 80075fc:	08008660 	.word	0x08008660
 8007600:	08008580 	.word	0x08008580
	...

08007610 <bmk12_setup>:
 8007610:	4801      	ldr	r0, [pc, #4]	; (8007618 <bmk12_setup+0x8>)
 8007612:	f7fa bcfd 	b.w	8002010 <chMtxObjectInit>
 8007616:	bf00      	nop
 8007618:	20001710 	.word	0x20001710
 800761c:	00000000 	.word	0x00000000

08007620 <_ZN10chibios_rt10BaseThread4mainEv>:
 8007620:	4770      	bx	lr
 8007622:	bf00      	nop
	...

08007630 <_ZN10chibios_rt10BaseThread5startEm>:
 8007630:	6849      	ldr	r1, [r1, #4]
 8007632:	4a02      	ldr	r2, [pc, #8]	; (800763c <_ZN10chibios_rt10BaseThread5startEm+0xc>)
 8007634:	e9c0 2100 	strd	r2, r1, [r0]
 8007638:	4770      	bx	lr
 800763a:	bf00      	nop
 800763c:	080089b8 	.word	0x080089b8

08007640 <_ZN10chibios_rt15ThreadReference4stopEv>:
 8007640:	4801      	ldr	r0, [pc, #4]	; (8007648 <_ZN10chibios_rt15ThreadReference4stopEv+0x8>)
 8007642:	f7f9 bedd 	b.w	8001400 <chSysHalt>
 8007646:	bf00      	nop
 8007648:	08008960 	.word	0x08008960
 800764c:	00000000 	.word	0x00000000

08007650 <_ZN10chibios_rt15ThreadReference4waitEv>:
 8007650:	b510      	push	{r4, lr}
 8007652:	4604      	mov	r4, r0
 8007654:	6840      	ldr	r0, [r0, #4]
 8007656:	f7fa fa63 	bl	8001b20 <chThdWait>
 800765a:	2300      	movs	r3, #0
 800765c:	6063      	str	r3, [r4, #4]
 800765e:	bd10      	pop	{r4, pc}

08007660 <_ZN10chibios_rt10BaseThreadC1Ev>:
 8007660:	4a02      	ldr	r2, [pc, #8]	; (800766c <_ZN10chibios_rt10BaseThreadC1Ev+0xc>)
 8007662:	2100      	movs	r1, #0
 8007664:	e9c0 2100 	strd	r2, r1, [r0]
 8007668:	4770      	bx	lr
 800766a:	bf00      	nop
 800766c:	08008998 	.word	0x08008998

08007670 <_ZN10chibios_rt10_thd_startEPv>:
 8007670:	6803      	ldr	r3, [r0, #0]
 8007672:	685b      	ldr	r3, [r3, #4]
 8007674:	4718      	bx	r3
 8007676:	bf00      	nop
	...

08007680 <_ZN10chibios_rt10BaseThread7setNameEPKc>:
 8007680:	4b01      	ldr	r3, [pc, #4]	; (8007688 <_ZN10chibios_rt10BaseThread7setNameEPKc+0x8>)
 8007682:	699b      	ldr	r3, [r3, #24]
 8007684:	6198      	str	r0, [r3, #24]
 8007686:	4770      	bx	lr
 8007688:	20000ce8 	.word	0x20000ce8
 800768c:	00000000 	.word	0x00000000

08007690 <_ZN10chibios_rt10BaseThread4exitEl>:
 8007690:	f7fa ba3e 	b.w	8001b10 <chThdExit>
	...

080076a0 <_ZN10chibios_rt10BaseThread5sleepEm>:
 80076a0:	f7fa b9de 	b.w	8001a60 <chThdSleep>
	...

080076b0 <_exit>:
 80076b0:	b508      	push	{r3, lr}
 80076b2:	4802      	ldr	r0, [pc, #8]	; (80076bc <_exit+0xc>)
 80076b4:	f7f9 fea4 	bl	8001400 <chSysHalt>
 80076b8:	e7fe      	b.n	80076b8 <_exit+0x8>
 80076ba:	bf00      	nop
 80076bc:	080089c0 	.word	0x080089c0

080076c0 <_getpid>:
 80076c0:	2001      	movs	r0, #1
 80076c2:	4770      	bx	lr
	...

080076d0 <_kill>:
 80076d0:	4b02      	ldr	r3, [pc, #8]	; (80076dc <_kill+0xc>)
 80076d2:	2216      	movs	r2, #22
 80076d4:	601a      	str	r2, [r3, #0]
 80076d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80076da:	4770      	bx	lr
 80076dc:	20001e88 	.word	0x20001e88

080076e0 <_ZN10chibios_rt16BaseStaticThreadILi128EE5startEm>:
 80076e0:	b530      	push	{r4, r5, lr}
 80076e2:	b083      	sub	sp, #12
 80076e4:	4604      	mov	r4, r0
 80076e6:	460d      	mov	r5, r1
 80076e8:	9100      	str	r1, [sp, #0]
 80076ea:	4b07      	ldr	r3, [pc, #28]	; (8007708 <_ZN10chibios_rt16BaseStaticThreadILi128EE5startEm+0x28>)
 80076ec:	f101 0008 	add.w	r0, r1, #8
 80076f0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80076f4:	f7fa f94c 	bl	8001990 <chThdCreateStatic>
 80076f8:	4a04      	ldr	r2, [pc, #16]	; (800770c <_ZN10chibios_rt16BaseStaticThreadILi128EE5startEm+0x2c>)
 80076fa:	6068      	str	r0, [r5, #4]
 80076fc:	4603      	mov	r3, r0
 80076fe:	4620      	mov	r0, r4
 8007700:	e9c4 2300 	strd	r2, r3, [r4]
 8007704:	b003      	add	sp, #12
 8007706:	bd30      	pop	{r4, r5, pc}
 8007708:	08007671 	.word	0x08007671
 800770c:	080089b8 	.word	0x080089b8

08007710 <_ZN10chibios_rt16BaseStaticThreadILi256EE5startEm>:
 8007710:	b530      	push	{r4, r5, lr}
 8007712:	b083      	sub	sp, #12
 8007714:	4604      	mov	r4, r0
 8007716:	460d      	mov	r5, r1
 8007718:	9100      	str	r1, [sp, #0]
 800771a:	4b07      	ldr	r3, [pc, #28]	; (8007738 <_ZN10chibios_rt16BaseStaticThreadILi256EE5startEm+0x28>)
 800771c:	f101 0008 	add.w	r0, r1, #8
 8007720:	f44f 71e4 	mov.w	r1, #456	; 0x1c8
 8007724:	f7fa f934 	bl	8001990 <chThdCreateStatic>
 8007728:	4a04      	ldr	r2, [pc, #16]	; (800773c <_ZN10chibios_rt16BaseStaticThreadILi256EE5startEm+0x2c>)
 800772a:	6068      	str	r0, [r5, #4]
 800772c:	4603      	mov	r3, r0
 800772e:	4620      	mov	r0, r4
 8007730:	e9c4 2300 	strd	r2, r3, [r4]
 8007734:	b003      	add	sp, #12
 8007736:	bd30      	pop	{r4, r5, pc}
 8007738:	08007671 	.word	0x08007671
 800773c:	080089b8 	.word	0x080089b8

08007740 <_ZN15SequencerThread4mainEv>:
 8007740:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007742:	4604      	mov	r4, r0
 8007744:	4817      	ldr	r0, [pc, #92]	; (80077a4 <_ZN15SequencerThread4mainEv+0x64>)
 8007746:	4d18      	ldr	r5, [pc, #96]	; (80077a8 <_ZN15SequencerThread4mainEv+0x68>)
 8007748:	4e18      	ldr	r6, [pc, #96]	; (80077ac <_ZN15SequencerThread4mainEv+0x6c>)
 800774a:	f7ff ff99 	bl	8007680 <_ZN10chibios_rt10BaseThread7setNameEPKc>
 800774e:	f8d4 3154 	ldr.w	r3, [r4, #340]	; 0x154
 8007752:	f242 7710 	movw	r7, #10000	; 0x2710
 8007756:	781a      	ldrb	r2, [r3, #0]
 8007758:	2a04      	cmp	r2, #4
 800775a:	d806      	bhi.n	800776a <_ZN15SequencerThread4mainEv+0x2a>
 800775c:	e8df f002 	tbb	[pc, r2]
 8007760:	090c1a0d 	.word	0x090c1a0d
 8007764:	03          	.byte	0x03
 8007765:	00          	.byte	0x00
 8007766:	889a      	ldrh	r2, [r3, #4]
 8007768:	832a      	strh	r2, [r5, #24]
 800776a:	3308      	adds	r3, #8
 800776c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007770:	e7f1      	b.n	8007756 <_ZN15SequencerThread4mainEv+0x16>
 8007772:	889a      	ldrh	r2, [r3, #4]
 8007774:	836a      	strh	r2, [r5, #26]
 8007776:	e7f8      	b.n	800776a <_ZN15SequencerThread4mainEv+0x2a>
 8007778:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800777a:	6858      	ldr	r0, [r3, #4]
 800777c:	fb07 f000 	mul.w	r0, r7, r0
 8007780:	f200 30e7 	addw	r0, r0, #999	; 0x3e7
 8007784:	fba6 3000 	umull	r3, r0, r6, r0
 8007788:	0980      	lsrs	r0, r0, #6
 800778a:	f7ff ff89 	bl	80076a0 <_ZN10chibios_rt10BaseThread5sleepEm>
 800778e:	f8d4 3154 	ldr.w	r3, [r4, #340]	; 0x154
 8007792:	e7ea      	b.n	800776a <_ZN15SequencerThread4mainEv+0x2a>
 8007794:	685a      	ldr	r2, [r3, #4]
 8007796:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 800779a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800779e:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80077a2:	e7d8      	b.n	8007756 <_ZN15SequencerThread4mainEv+0x16>
 80077a4:	08008ae0 	.word	0x08008ae0
 80077a8:	40020c00 	.word	0x40020c00
 80077ac:	10624dd3 	.word	0x10624dd3

080077b0 <_ZN12TesterThread4mainEv>:
 80077b0:	b508      	push	{r3, lr}
 80077b2:	4806      	ldr	r0, [pc, #24]	; (80077cc <_ZN12TesterThread4mainEv+0x1c>)
 80077b4:	f7ff ff64 	bl	8007680 <_ZN10chibios_rt10BaseThread7setNameEPKc>
 80077b8:	4805      	ldr	r0, [pc, #20]	; (80077d0 <_ZN12TesterThread4mainEv+0x20>)
 80077ba:	f7fc fbb9 	bl	8003f30 <TestThread>
 80077be:	4b05      	ldr	r3, [pc, #20]	; (80077d4 <_ZN12TesterThread4mainEv+0x24>)
 80077c0:	7818      	ldrb	r0, [r3, #0]
 80077c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80077c6:	f7ff bf63 	b.w	8007690 <_ZN10chibios_rt10BaseThread4exitEl>
 80077ca:	bf00      	nop
 80077cc:	08008ad0 	.word	0x08008ad0
 80077d0:	20000f64 	.word	0x20000f64
 80077d4:	20001650 	.word	0x20001650
	...

080077e0 <main>:
 80077e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80077e2:	b083      	sub	sp, #12
 80077e4:	f7fb fbf4 	bl	8002fd0 <halInit>
 80077e8:	f7f9 fdba 	bl	8001360 <chSysInit>
 80077ec:	2100      	movs	r1, #0
 80077ee:	482a      	ldr	r0, [pc, #168]	; (8007898 <main+0xb8>)
 80077f0:	4c2a      	ldr	r4, [pc, #168]	; (800789c <main+0xbc>)
 80077f2:	4d2b      	ldr	r5, [pc, #172]	; (80078a0 <main+0xc0>)
 80077f4:	4e2b      	ldr	r6, [pc, #172]	; (80078a4 <main+0xc4>)
 80077f6:	4f2c      	ldr	r7, [pc, #176]	; (80078a8 <main+0xc8>)
 80077f8:	f7fb fc9a 	bl	8003130 <sdStart>
 80077fc:	f240 3282 	movw	r2, #898	; 0x382
 8007800:	2104      	movs	r1, #4
 8007802:	482a      	ldr	r0, [pc, #168]	; (80078ac <main+0xcc>)
 8007804:	f7fc f854 	bl	80038b0 <_pal_lld_setgroupmode>
 8007808:	f240 3282 	movw	r2, #898	; 0x382
 800780c:	2108      	movs	r1, #8
 800780e:	4827      	ldr	r0, [pc, #156]	; (80078ac <main+0xcc>)
 8007810:	f7fc f84e 	bl	80038b0 <_pal_lld_setgroupmode>
 8007814:	9400      	str	r4, [sp, #0]
 8007816:	f104 0008 	add.w	r0, r4, #8
 800781a:	4b23      	ldr	r3, [pc, #140]	; (80078a8 <main+0xc8>)
 800781c:	224a      	movs	r2, #74	; 0x4a
 800781e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007822:	f7fa f8b5 	bl	8001990 <chThdCreateStatic>
 8007826:	9500      	str	r5, [sp, #0]
 8007828:	4b1f      	ldr	r3, [pc, #124]	; (80078a8 <main+0xc8>)
 800782a:	6060      	str	r0, [r4, #4]
 800782c:	224a      	movs	r2, #74	; 0x4a
 800782e:	f105 0008 	add.w	r0, r5, #8
 8007832:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007836:	f7fa f8ab 	bl	8001990 <chThdCreateStatic>
 800783a:	4c1d      	ldr	r4, [pc, #116]	; (80078b0 <main+0xd0>)
 800783c:	9400      	str	r4, [sp, #0]
 800783e:	4b1a      	ldr	r3, [pc, #104]	; (80078a8 <main+0xc8>)
 8007840:	6068      	str	r0, [r5, #4]
 8007842:	224a      	movs	r2, #74	; 0x4a
 8007844:	f104 0008 	add.w	r0, r4, #8
 8007848:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800784c:	f7fa f8a0 	bl	8001990 <chThdCreateStatic>
 8007850:	9600      	str	r6, [sp, #0]
 8007852:	4b15      	ldr	r3, [pc, #84]	; (80078a8 <main+0xc8>)
 8007854:	6060      	str	r0, [r4, #4]
 8007856:	224a      	movs	r2, #74	; 0x4a
 8007858:	f106 0008 	add.w	r0, r6, #8
 800785c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007860:	f7fa f896 	bl	8001990 <chThdCreateStatic>
 8007864:	4d13      	ldr	r5, [pc, #76]	; (80078b4 <main+0xd4>)
 8007866:	6070      	str	r0, [r6, #4]
 8007868:	4c10      	ldr	r4, [pc, #64]	; (80078ac <main+0xcc>)
 800786a:	f105 0608 	add.w	r6, r5, #8
 800786e:	e003      	b.n	8007878 <main+0x98>
 8007870:	f241 3088 	movw	r0, #5000	; 0x1388
 8007874:	f7ff ff14 	bl	80076a0 <_ZN10chibios_rt10BaseThread5sleepEm>
 8007878:	6923      	ldr	r3, [r4, #16]
 800787a:	07db      	lsls	r3, r3, #31
 800787c:	d5f8      	bpl.n	8007870 <main+0x90>
 800787e:	9500      	str	r5, [sp, #0]
 8007880:	463b      	mov	r3, r7
 8007882:	2240      	movs	r2, #64	; 0x40
 8007884:	f44f 71e4 	mov.w	r1, #456	; 0x1c8
 8007888:	4630      	mov	r0, r6
 800788a:	f7fa f881 	bl	8001990 <chThdCreateStatic>
 800788e:	6068      	str	r0, [r5, #4]
 8007890:	4808      	ldr	r0, [pc, #32]	; (80078b4 <main+0xd4>)
 8007892:	f7ff fedd 	bl	8007650 <_ZN10chibios_rt15ThreadReference4waitEv>
 8007896:	e7eb      	b.n	8007870 <main+0x90>
 8007898:	20000f64 	.word	0x20000f64
 800789c:	20001928 	.word	0x20001928
 80078a0:	20001a80 	.word	0x20001a80
 80078a4:	20001d30 	.word	0x20001d30
 80078a8:	08007671 	.word	0x08007671
 80078ac:	40020000 	.word	0x40020000
 80078b0:	20001bd8 	.word	0x20001bd8
 80078b4:	20001758 	.word	0x20001758
	...

080078c0 <_GLOBAL__sub_I_main>:
 80078c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80078c4:	4c19      	ldr	r4, [pc, #100]	; (800792c <_GLOBAL__sub_I_main+0x6c>)
 80078c6:	f8df 808c 	ldr.w	r8, [pc, #140]	; 8007954 <_GLOBAL__sub_I_main+0x94>
 80078ca:	4f19      	ldr	r7, [pc, #100]	; (8007930 <_GLOBAL__sub_I_main+0x70>)
 80078cc:	4e19      	ldr	r6, [pc, #100]	; (8007934 <_GLOBAL__sub_I_main+0x74>)
 80078ce:	4d1a      	ldr	r5, [pc, #104]	; (8007938 <_GLOBAL__sub_I_main+0x78>)
 80078d0:	4620      	mov	r0, r4
 80078d2:	f7ff fec5 	bl	8007660 <_ZN10chibios_rt10BaseThreadC1Ev>
 80078d6:	4b19      	ldr	r3, [pc, #100]	; (800793c <_GLOBAL__sub_I_main+0x7c>)
 80078d8:	6023      	str	r3, [r4, #0]
 80078da:	4640      	mov	r0, r8
 80078dc:	f7ff fec0 	bl	8007660 <_ZN10chibios_rt10BaseThreadC1Ev>
 80078e0:	4c17      	ldr	r4, [pc, #92]	; (8007940 <_GLOBAL__sub_I_main+0x80>)
 80078e2:	4b18      	ldr	r3, [pc, #96]	; (8007944 <_GLOBAL__sub_I_main+0x84>)
 80078e4:	f8c8 3154 	str.w	r3, [r8, #340]	; 0x154
 80078e8:	4638      	mov	r0, r7
 80078ea:	f8c8 3150 	str.w	r3, [r8, #336]	; 0x150
 80078ee:	f8c8 5000 	str.w	r5, [r8]
 80078f2:	f7ff feb5 	bl	8007660 <_ZN10chibios_rt10BaseThreadC1Ev>
 80078f6:	4b14      	ldr	r3, [pc, #80]	; (8007948 <_GLOBAL__sub_I_main+0x88>)
 80078f8:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
 80078fc:	4630      	mov	r0, r6
 80078fe:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
 8007902:	603d      	str	r5, [r7, #0]
 8007904:	f7ff feac 	bl	8007660 <_ZN10chibios_rt10BaseThreadC1Ev>
 8007908:	4b10      	ldr	r3, [pc, #64]	; (800794c <_GLOBAL__sub_I_main+0x8c>)
 800790a:	f8c6 3154 	str.w	r3, [r6, #340]	; 0x154
 800790e:	4620      	mov	r0, r4
 8007910:	f8c6 3150 	str.w	r3, [r6, #336]	; 0x150
 8007914:	6035      	str	r5, [r6, #0]
 8007916:	f7ff fea3 	bl	8007660 <_ZN10chibios_rt10BaseThreadC1Ev>
 800791a:	4b0d      	ldr	r3, [pc, #52]	; (8007950 <_GLOBAL__sub_I_main+0x90>)
 800791c:	6025      	str	r5, [r4, #0]
 800791e:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007922:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 8007926:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800792a:	bf00      	nop
 800792c:	20001758 	.word	0x20001758
 8007930:	20001a80 	.word	0x20001a80
 8007934:	20001bd8 	.word	0x20001bd8
 8007938:	080089d8 	.word	0x080089d8
 800793c:	080089f8 	.word	0x080089f8
 8007940:	20001d30 	.word	0x20001d30
 8007944:	08008a10 	.word	0x08008a10
 8007948:	08008a40 	.word	0x08008a40
 800794c:	08008a70 	.word	0x08008a70
 8007950:	08008aa0 	.word	0x08008aa0
 8007954:	20001928 	.word	0x20001928
	...

08007960 <abort>:
 8007960:	b508      	push	{r3, lr}
 8007962:	2006      	movs	r0, #6
 8007964:	f000 f834 	bl	80079d0 <raise>
 8007968:	2001      	movs	r0, #1
 800796a:	f7ff fea1 	bl	80076b0 <_exit>
 800796e:	bf00      	nop

08007970 <_raise_r>:
 8007970:	291f      	cmp	r1, #31
 8007972:	b538      	push	{r3, r4, r5, lr}
 8007974:	d822      	bhi.n	80079bc <_raise_r+0x4c>
 8007976:	f8d0 32dc 	ldr.w	r3, [r0, #732]	; 0x2dc
 800797a:	4605      	mov	r5, r0
 800797c:	460c      	mov	r4, r1
 800797e:	b16b      	cbz	r3, 800799c <_raise_r+0x2c>
 8007980:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
 8007984:	b152      	cbz	r2, 800799c <_raise_r+0x2c>
 8007986:	2a01      	cmp	r2, #1
 8007988:	d012      	beq.n	80079b0 <_raise_r+0x40>
 800798a:	1c51      	adds	r1, r2, #1
 800798c:	d012      	beq.n	80079b4 <_raise_r+0x44>
 800798e:	2500      	movs	r5, #0
 8007990:	4620      	mov	r0, r4
 8007992:	f843 5024 	str.w	r5, [r3, r4, lsl #2]
 8007996:	4790      	blx	r2
 8007998:	4628      	mov	r0, r5
 800799a:	bd38      	pop	{r3, r4, r5, pc}
 800799c:	4628      	mov	r0, r5
 800799e:	f000 f837 	bl	8007a10 <_getpid_r>
 80079a2:	4622      	mov	r2, r4
 80079a4:	4601      	mov	r1, r0
 80079a6:	4628      	mov	r0, r5
 80079a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80079ac:	f000 b818 	b.w	80079e0 <_kill_r>
 80079b0:	2000      	movs	r0, #0
 80079b2:	bd38      	pop	{r3, r4, r5, pc}
 80079b4:	2316      	movs	r3, #22
 80079b6:	6003      	str	r3, [r0, #0]
 80079b8:	2001      	movs	r0, #1
 80079ba:	bd38      	pop	{r3, r4, r5, pc}
 80079bc:	2316      	movs	r3, #22
 80079be:	6003      	str	r3, [r0, #0]
 80079c0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80079c4:	bd38      	pop	{r3, r4, r5, pc}
 80079c6:	bf00      	nop
	...

080079d0 <raise>:
 80079d0:	4b02      	ldr	r3, [pc, #8]	; (80079dc <raise+0xc>)
 80079d2:	4601      	mov	r1, r0
 80079d4:	6818      	ldr	r0, [r3, #0]
 80079d6:	f7ff bfcb 	b.w	8007970 <_raise_r>
 80079da:	bf00      	nop
 80079dc:	200008b8 	.word	0x200008b8

080079e0 <_kill_r>:
 80079e0:	b538      	push	{r3, r4, r5, lr}
 80079e2:	460b      	mov	r3, r1
 80079e4:	4c07      	ldr	r4, [pc, #28]	; (8007a04 <_kill_r+0x24>)
 80079e6:	4605      	mov	r5, r0
 80079e8:	4611      	mov	r1, r2
 80079ea:	4618      	mov	r0, r3
 80079ec:	2300      	movs	r3, #0
 80079ee:	6023      	str	r3, [r4, #0]
 80079f0:	f7ff fe6e 	bl	80076d0 <_kill>
 80079f4:	1c43      	adds	r3, r0, #1
 80079f6:	d000      	beq.n	80079fa <_kill_r+0x1a>
 80079f8:	bd38      	pop	{r3, r4, r5, pc}
 80079fa:	6823      	ldr	r3, [r4, #0]
 80079fc:	2b00      	cmp	r3, #0
 80079fe:	d0fb      	beq.n	80079f8 <_kill_r+0x18>
 8007a00:	602b      	str	r3, [r5, #0]
 8007a02:	bd38      	pop	{r3, r4, r5, pc}
 8007a04:	20001e88 	.word	0x20001e88
	...

08007a10 <_getpid_r>:
 8007a10:	f7ff be56 	b.w	80076c0 <_getpid>
	...
 8007a20:	61686e75 	.word	0x61686e75
 8007a24:	656c646e 	.word	0x656c646e
 8007a28:	78652064 	.word	0x78652064
 8007a2c:	74706563 	.word	0x74706563
 8007a30:	006e6f69 	.word	0x006e6f69
	...
 8007a40:	656c6469 	.word	0x656c6469
	...

08007a50 <ch_debug>:
 8007a50:	6e69616d 18011600 08440404 1814100c     main......D.....
 8007a60:	1e1d1c00 00000000 00000000 00000000     ................

08007a70 <vmt>:
 8007a70:	08003091 08003071 080030d1 080030b1     .0..q0...0...0..
 8007a80:	080030c1 080030a1 08003081 08003061     .0...0...0..a0..

08007a90 <_stm32_dma_streams>:
 8007a90:	40026010 40026008 000b0000 40026028     .`.@.`.@....(`.@
 8007aa0:	40026008 000c0106 40026040 40026008     .`.@....@`.@.`.@
 8007ab0:	000d0210 40026058 40026008 000e0316     ....X`.@.`.@....
 8007ac0:	40026070 4002600c 000f0400 40026088     p`.@.`.@.....`.@
 8007ad0:	4002600c 00100506 400260a0 4002600c     .`.@.....`.@.`.@
 8007ae0:	00110610 400260b8 4002600c 002f0716     .....`.@.`.@../.
 8007af0:	40026410 40026408 00380800 40026428     .d.@.d.@..8.(d.@
 8007b00:	40026408 00390906 40026440 40026408     .d.@..9.@d.@.d.@
 8007b10:	003a0a10 40026458 40026408 003b0b16     ..:.Xd.@.d.@..;.
 8007b20:	40026470 4002640c 003c0c00 40026488     pd.@.d.@..<..d.@
 8007b30:	4002640c 00440d06 400264a0 4002640c     .d.@..D..d.@.d.@
 8007b40:	00450e10 400264b8 4002640c 00460f16     ..E..d.@.d.@..F.

08007b50 <default_config>:
 8007b50:	00009600 40000000 00000000 00000000     .......@........

08007b60 <pal_default_config>:
 8007b60:	2aa0aa00 00000000 ffffabff 40010054     ...*........T..@
 8007b70:	0000ffff 55560000 000aaa00 00082080     ......VU..... ..
 8007b80:	00000240 ffffffff 55514515 0000ffff     @........EQU....
 8007b90:	04000000 00000040 02208001 00000000     ....@..... .....
 8007ba0:	ffffffff 54451554 0000ffff 60000000     ....T.ET.......`
 8007bb0:	00060600 55000100 00000000 ffffffff     .......U........
 8007bc0:	00555055 00000fff 00000000 00000000     UPU.............
 8007bd0:	00000040 00000000 ffffffff 00000000     @...............
 8007be0:	0000ffff 00000000 00000000 00000000     ................
 8007bf0:	00000000 ffffffff 00000000 0000ffff     ................
	...
 8007c10:	ffffffff 00000000 0000ffff 00000000     ................
	...
 8007c2c:	ffffffff 00000000 0000ffff 00000000     ................
	...
 8007c48:	ffffffff 00000000 0000ffff 00000000     ................
	...
 8007c60:	202a2a2a 6e72654b 203a6c65 20202020     *** Kernel:     
 8007c70:	00002020 202a2a2a 706d6f43 64656c69       ..*** Compiled
 8007c80:	2020203a 00002020 202a2a2a 706d6f43     :     ..*** Comp
 8007c90:	72656c69 2020203a 00002020 202a2a2a     iler:     ..*** 
 8007ca0:	68637241 63657469 65727574 0000203a     Architecture: ..
 8007cb0:	202a2a2a 65726f43 72615620 746e6169     *** Core Variant
 8007cc0:	0000203a 202a2a2a 74726f50 666e4920     : ..*** Port Inf
 8007cd0:	20203a6f 00002020 202a2a2a 74616c50     o:    ..*** Plat
 8007ce0:	6d726f66 2020203a 00002020 202a2a2a     form:     ..*** 
 8007cf0:	74736554 616f4220 203a6472 00002020     Test Board:   ..
 8007d00:	202d2d2d 74736554 73614320 00002065     --- Test Case ..
 8007d10:	00002820 202d2d2d 75736552 203a746c      (..--- Result: 
 8007d20:	4c494146 20455255 00002328 00005b20     FAILURE (#.. [..
 8007d30:	616e6946 6572206c 746c7573 0000203a     Final result: ..
 8007d40:	202a2a2a 62696843 2f534f69 74205452     *** ChibiOS/RT t
 8007d50:	20747365 74697573 00000065 002a2a2a     est suite...***.
 8007d60:	2e302e33 00000030 20727041 32203620     3.0.0...Apr  6 2
 8007d70:	20383130 3631202d 3a31303a 00003132     018 - 16:01:21..
 8007d80:	20434347 2e322e37 30322031 39303731     GCC 7.2.1 201709
 8007d90:	28203430 656c6572 29657361 52415b20     04 (release) [AR
 8007da0:	6d652f4d 64646562 372d6465 6172622d     M/embedded-7-bra
 8007db0:	2068636e 69766572 6e6f6973 35353220     nch revision 255
 8007dc0:	5d343032 00000000 764d5241 454d2d37     204]....ARMv7-ME
 8007dd0:	00000000 74726f43 4d2d7865 00000034     ....Cortex-M4...
 8007de0:	61766441 6465636e 72656b20 206c656e     Advanced kernel 
 8007df0:	65646f6d 00000000 334d5453 30344632     mode....STM32F40
 8007e00:	69482037 50206867 6f667265 6e616d72     7 High Performan
 8007e10:	77206563 20687469 20505344 20646e61     ce with DSP and 
 8007e20:	00555046 694d5453 656f7263 7463656c     FPU.STMicroelect
 8007e30:	696e6f72 53207363 32334d54 442d3446     ronics STM32F4-D
 8007e40:	6f637369 79726576 00000000 00000029     iscovery....)...
 8007e50:	0000295d 202d2d2d 75736552 203a746c     ])..--- Result: 
 8007e60:	43435553 00535345 4c494146 00455255     SUCCESS.FAILURE.

08007e70 <patterns>:
 8007e70:	080084d0 08007ee0 08007fd0 080080b0     .....~..........
 8007e80:	080081d0 08008200 08008250 080082f0     ........P.......
 8007e90:	08008340 080083a0 08008470 080086b0     @.......p.......
	...
 8007eb0:	00000a0d 00000000 00000000 00000000     ................

08007ec0 <wa>:
 8007ec0:	20000fe8 20001130 20001278 200013c0     ... 0.. x.. ... 
 8007ed0:	20001508 00000000 00000000 00000000     ... ............

08007ee0 <patternthd>:
 8007ee0:	08007f70 08007f80 08007f90 08007fa0     p...............
	...
 8007f00:	65726854 2c736461 6c656420 00737961     Threads, delays.
 8007f10:	65726854 2c736461 69727020 7469726f     Threads, priorit
 8007f20:	68632079 65676e61 00000000 65726854     y change....Thre
 8007f30:	2c736461 716e6520 69756575 7420676e     ads, enqueuing t
 8007f40:	20747365 00003223 65726854 2c736461     est #2..Threads,
 8007f50:	716e6520 69756575 7420676e 20747365      enqueuing test 
 8007f60:	00003123 00000000 00000000 00000000     #1..............

08007f70 <testthd1>:
 8007f70:	08007f48 00000000 00000000 08004241     H...........AB..

08007f80 <testthd2>:
 8007f80:	08007f2c 00000000 00000000 08004321     ,...........!C..

08007f90 <testthd3>:
 8007f90:	08007f10 00000000 00000000 08004401     .............D..

08007fa0 <testthd4>:
 8007fa0:	08007f00 00000000 00000000 08004531     ............1E..
 8007fb0:	00000044 00000043 00000042 00000041     D...C...B...A...
 8007fc0:	44434241 00000045 00000000 00000000     ABCDE...........

08007fd0 <patternsem>:
 8007fd0:	08008060 08008070 08008080 08008090     `...p...........
	...
 8007ff0:	616e6942 53207972 70616d65 65726f68     Binary Semaphore
 8008000:	66202c73 74636e75 616e6f69 7974696c     s, functionality
 8008010:	00000000 616d6553 726f6870 202c7365     ....Semaphores, 
 8008020:	6d6f7461 73206369 616e6769 61772d6c     atomic signal-wa
 8008030:	00007469 616d6553 726f6870 202c7365     it..Semaphores, 
 8008040:	656d6974 0074756f 616d6553 726f6870     timeout.Semaphor
 8008050:	202c7365 75716e65 6e697565 00000067     es, enqueuing...

08008060 <testsem1>:
 8008060:	08008048 08004771 00000000 080045d1     H...qG.......E..

08008070 <testsem2>:
 8008070:	08008034 08004781 00000000 080047d1     4....G.......G..

08008080 <testsem3>:
 8008080:	08008014 08004791 00000000 08004931     .....G......1I..

08008090 <testsem4>:
 8008090:	08007ff0 00000000 00000000 08004a01     .............J..
 80080a0:	00434241 00000000 00000000 00000000     ABC.............

080080b0 <patternmtx>:
 80080b0:	08008170 08008180 08008190 080081a0     p...............
 80080c0:	080081b0 080081c0 00000000 00000000     ................
 80080d0:	646e6f43 2c726156 6f6f6220 74207473     CondVar, boost t
 80080e0:	00747365 646e6f43 2c726156 6f726220     est.CondVar, bro
 80080f0:	61636461 74207473 00747365 646e6f43     adcast test.Cond
 8008100:	2c726156 67697320 206c616e 74736574     Var, signal test
 8008110:	00000000 6574754d 2c736578 61747320     ....Mutexes, sta
 8008120:	00737574 6574754d 2c736578 69727020     tus.Mutexes, pri
 8008130:	7469726f 65722079 6e727574 00000000     ority return....
 8008140:	6574754d 2c736578 69727020 7469726f     Mutexes, priorit
 8008150:	6e652079 75657571 20676e69 74736574     y enqueuing test
	...

08008170 <testmtx1>:
 8008170:	08008140 08004c71 00000000 08004b51     @...qL......QK..

08008180 <testmtx4>:
 8008180:	08008124 08004c91 00000000 08004cf1     $....L.......L..

08008190 <testmtx5>:
 8008190:	08008114 08004c81 00000000 08004f61     .....L......aO..

080081a0 <testmtx6>:
 80081a0:	080080fc 08005141 00000000 08005021     ....AQ......!P..

080081b0 <testmtx7>:
 80081b0:	080080e4 08005161 00000000 080051a1     ....aQ.......Q..

080081c0 <testmtx8>:
 80081c0:	080080d0 08005171 00000000 08005261     ....qQ......aR..

080081d0 <patternmsg>:
 80081d0:	080081f0 00000000 00000000 00000000     ................
 80081e0:	7373654d 73656761 6f6c202c 0000706f     Messages, loop..

080081f0 <testmsg1>:
 80081f0:	080081e0 00000000 00000000 08005341     ............AS..

08008200 <patternmbox>:
 8008200:	08008230 00000000 00000000 00000000     0...............
 8008210:	6c69614d 65786f62 71202c73 69756575     Mailboxes, queui
 8008220:	6120676e 7420646e 6f656d69 00737475     ng and timeouts.

08008230 <testmbox1>:
 8008230:	08008210 080059b1 00000000 080053e1     .....Y.......S..

08008240 <evhndl>:
 8008240:	080059f1 080059e1 080059d1 00000000     .Y...Y...Y......

08008250 <patternevt>:
 8008250:	080082c0 080082d0 080082e0 00000000     ................
 8008260:	6e657645 202c7374 656d6974 7374756f     Events, timeouts
 8008270:	00000000 6e657645 202c7374 74696177     ....Events, wait
 8008280:	646e6120 6f726220 61636461 00007473      and broadcast..
 8008290:	6e657645 202c7374 69676572 61727473     Events, registra
 80082a0:	6e6f6974 646e6120 73696420 63746170     tion and dispatc
 80082b0:	00000068 00000000 00000000 00000000     h...............

080082c0 <testevt1>:
 80082c0:	08008290 08005a91 00000000 08005a01     .....Z.......Z..

080082d0 <testevt2>:
 80082d0:	08008274 08005aa1 00000000 08005b11     t....Z.......[..

080082e0 <testevt3>:
 80082e0:	08008260 08005ab1 00000000 08005da1     `....Z.......]..

080082f0 <patternheap>:
 80082f0:	08008330 00000000 00000000 00000000     0...............
 8008300:	70616548 6c61202c 61636f6c 6e6f6974     Heap, allocation
 8008310:	646e6120 61726620 6e656d67 69746174      and fragmentati
 8008320:	74206e6f 00747365 00000000 00000000     on test.........

08008330 <testheap1>:
 8008330:	08008300 08006091 00000000 08005e41     .....`......A^..

08008340 <patternpools>:
 8008340:	08008370 00000000 00000000 00000000     p...............
 8008350:	6f6d654d 50207972 736c6f6f 7571202c     Memory Pools, qu
 8008360:	2f657565 75716564 00657565 00000000     eue/dequeue.....

08008370 <testpools1>:
 8008370:	08008350 080060c1 00000000 080060d1     P....`.......`..
 8008380:	00004241 00000000 00000000 00000000     AB..............
 8008390:	44434241 00000000 00000000 00000000     ABCD............

080083a0 <patterndyn>:
 80083a0:	08008440 08008450 08008460 00000000     @...P...`.......
 80083b0:	616e7944 2063696d 73495041 6572202c     Dynamic APIs, re
 80083c0:	74736967 61207972 7220646e 72656665     gistry and refer
 80083d0:	65636e65 00000073 616e7944 2063696d     ences...Dynamic 
 80083e0:	73495041 6874202c 64616572 72632073     APIs, threads cr
 80083f0:	69746165 66206e6f 206d6f72 6f6d656d     eation from memo
 8008400:	70207972 006c6f6f 616e7944 2063696d     ry pool.Dynamic 
 8008410:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8008420:	69746165 66206e6f 206d6f72 70616568     eation from heap
	...

08008440 <testdyn1>:
 8008440:	08008408 080062b1 00000000 080061a1     .....b.......a..

08008450 <testdyn2>:
 8008450:	080083d8 080063e1 00000000 080062e1     .....c.......b..

08008460 <testdyn3>:
 8008460:	080083b0 080062d1 00000000 08006421     .....b......!d..

08008470 <patternqueues>:
 8008470:	080084b0 080084c0 00000000 00000000     ................
 8008480:	75657551 202c7365 7074756f 71207475     Queues, output q
 8008490:	65756575 00000073 75657551 202c7365     ueues...Queues, 
 80084a0:	75706e69 75712074 73657565 00000000     input queues....

080084b0 <testqueues1>:
 80084b0:	08008498 08006581 00000000 080065f1     .....e.......e..

080084c0 <testqueues2>:
 80084c0:	08008480 080065c1 00000000 08006881     .....e.......h..

080084d0 <patternsys>:
 80084d0:	08008530 08008540 08008550 00000000     0...@...P.......
 80084e0:	74737953 202c6d65 65746e69 74697267     System, integrit
 80084f0:	00000079 74737953 202c6d65 65746e69     y...System, inte
 8008500:	70757272 68207374 6c646e61 00676e69     rrupts handling.
 8008510:	74737953 202c6d65 74697263 6c616369     System, critical
 8008520:	6e6f7a20 00007365 00000000 00000000      zones..........

08008530 <testsys1>:
 8008530:	08008510 00000000 00000000 08006b91     .............k..

08008540 <testsys2>:
 8008540:	080084f4 00000000 00000000 08006ac1     .............j..

08008550 <testsys3>:
 8008550:	080084e0 00000000 00000000 08006b01     .............k..
 8008560:	6d697420 2f737265 00000053 00000000      timers/S.......
 8008570:	69617720 69732b74 6c616e67 0000532f      wait+signal/S..
 8008580:	636f6c20 6e752b6b 6b636f6c 0000532f      lock+unlock/S..
 8008590:	202d2d2d 74737953 203a6d65 00000000     --- System: ....
 80085a0:	74796220 00007365 202d2d2d 65726854      bytes..--- Thre
 80085b0:	203a6461 00000000 202d2d2d 656d6954     ad: ....--- Time
 80085c0:	203a2072 00000000 202d2d2d 616d6553     r : ....--- Sema
 80085d0:	203a6870 00000000 202d2d2d 6e657645     ph: ....--- Even
 80085e0:	203a5374 00000000 202d2d2d 6e657645     tS: ....--- Even
 80085f0:	203a4c74 00000000 202d2d2d 6574754d     tL: ....--- Mute
 8008600:	203a2078 00000000 202d2d2d 646e6f43     x : ....--- Cond
 8008610:	203a2e56 00000000 202d2d2d 75657551     V.: ....--- Queu
 8008620:	203a2065 00000000 202d2d2d 6c69614d     e : ....--- Mail
 8008630:	203a2e42 00000000 00000000 00000000     B.: ............
 8008640:	67736d20 2c532f73 00000020 78746320      msgs/S, ... ctx
 8008650:	2f637773 00000053 00000000 00000000     swc/S...........
 8008660:	202d2d2d 726f6353 203a2065 00000000     --- Score : ....
 8008670:	72687420 73646165 0000532f 00000000      threads/S......
 8008680:	73657220 64656863 73656c75 202c532f      reschedules/S, 
	...
 80086a0:	74796220 532f7365 00000000 00000000      bytes/S........

080086b0 <patternbmk>:
 80086b0:	08008890 080088e0 080088f0 08008900     ................
 80086c0:	08008910 08008920 08008930 08008940     .... ...0...@...
 80086d0:	08008950 080088a0 080088b0 080088c0     P...............
 80086e0:	080088d0 00000000 00000000 00000000     ................
 80086f0:	636e6542 72616d68 52202c6b 66204d41     Benchmark, RAM f
 8008700:	70746f6f 746e6972 00000000 636e6542     ootprint....Benc
 8008710:	72616d68 6d202c6b 78657475 6c207365     hmark, mutexes l
 8008720:	2f6b636f 6f6c6e75 00006b63 636e6542     ock/unlock..Benc
 8008730:	72616d68 73202c6b 70616d65 65726f68     hmark, semaphore
 8008740:	61772073 732f7469 616e6769 0000006c     s wait/signal...
 8008750:	636e6542 72616d68 76202c6b 75747269     Benchmark, virtu
 8008760:	74206c61 72656d69 65732073 65722f74     al timers set/re
 8008770:	00746573 636e6542 72616d68 49202c6b     set.Benchmark, I
 8008780:	51204f2f 65756575 68742073 67756f72     /O Queues throug
 8008790:	74757068 00000000 636e6542 72616d68     hput....Benchmar
 80087a0:	72202c6b 646e756f 626f7220 63206e69     k, round robin c
 80087b0:	65746e6f 73207478 63746977 676e6968     ontext switching
 80087c0:	00000000 636e6542 72616d68 6d202c6b     ....Benchmark, m
 80087d0:	20737361 63736572 75646568 202c656c     ass reschedule, 
 80087e0:	68742035 64616572 00000073 636e6542     5 threads...Benc
 80087f0:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8008800:	61657263 6f206574 00796c6e 636e6542     create only.Benc
 8008810:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8008820:	6c6c7566 63796320 0000656c 636e6542     full cycle..Benc
 8008830:	72616d68 63202c6b 65746e6f 73207478     hmark, context s
 8008840:	63746977 00000068 636e6542 72616d68     witch...Benchmar
 8008850:	6d202c6b 61737365 20736567 00003323     k, messages #3..
 8008860:	636e6542 72616d68 6d202c6b 61737365     Benchmark, messa
 8008870:	20736567 00003223 636e6542 72616d68     ges #2..Benchmar
 8008880:	6d202c6b 61737365 20736567 00003123     k, messages #1..

08008890 <testbmk1>:
 8008890:	08008878 00000000 00000000 08006e21     x...........!n..

080088a0 <testbmk10>:
 80088a0:	08008750 00000000 00000000 08007481     P............t..

080088b0 <testbmk11>:
 80088b0:	0800872c 080072b1 00000000 08007511     ,....r.......u..

080088c0 <testbmk12>:
 80088c0:	0800870c 08007611 00000000 08007591     .....v.......u..

080088d0 <testbmk13>:
 80088d0:	080086f0 00000000 00000000 08006c51     ............Ql..

080088e0 <testbmk2>:
 80088e0:	08008860 00000000 00000000 08006e91     `............n..

080088f0 <testbmk3>:
 80088f0:	08008848 00000000 00000000 08006f01     H............o..

08008900 <testbmk4>:
 8008900:	0800882c 00000000 00000000 08006ff1     ,............o..

08008910 <testbmk5>:
 8008910:	0800880c 00000000 00000000 080070e1     .............p..

08008920 <testbmk6>:
 8008920:	080087ec 00000000 00000000 08006d61     ............am..

08008930 <testbmk7>:
 8008930:	080087c4 080072a1 00000000 08007161     .....r......aq..

08008940 <testbmk8>:
 8008940:	08008798 00000000 00000000 080072c1     .............r..

08008950 <testbmk9>:
 8008950:	08008774 00000000 00000000 080073d1     t............s..
 8008960:	6f766e69 2064656b 6d696e75 6d656c70     invoked unimplem
 8008970:	65746e65 656d2064 646f6874 6f747320     ented method sto
 8008980:	00292870 00000000 00000000 00000000     p().............

08008990 <_ZTVN10chibios_rt10BaseThreadE>:
	...
 8008998:	08007641 08007621 08007631 00000000     Av..!v..1v......
	...

080089b0 <_ZTVN10chibios_rt15ThreadReferenceE>:
	...
 80089b8:	08007641 00000000 65726e55 7a696c61     Av......Unrealiz
 80089c8:	00006465 00000000                       ed......

080089d0 <_ZTV15SequencerThread>:
	...
 80089d8:	08007641 08007741 080076e1 00000000     Av..Aw...v......
	...

080089f0 <_ZTV12TesterThread>:
	...
 80089f8:	08007641 080077b1 08007711 00000000     Av...w...w......
	...

08008a10 <_ZL13LED3_sequence>:
 8008a10:	00000004 00002000 00000000 00000320     ..... ...... ...
 8008a20:	00000003 00002000 00000000 000000c8     ..... ..........
 8008a30:	00000001 00000000 00000000 00000000     ................

08008a40 <_ZL13LED4_sequence>:
 8008a40:	00000004 00001000 00000000 00000258     ............X...
 8008a50:	00000003 00001000 00000000 00000190     ................
 8008a60:	00000001 00000000 00000000 00000000     ................

08008a70 <_ZL13LED5_sequence>:
 8008a70:	00000004 00004000 00000000 00000190     .....@..........
 8008a80:	00000003 00004000 00000000 00000258     .....@......X...
 8008a90:	00000001 00000000 00000000 00000000     ................

08008aa0 <_ZL13LED6_sequence>:
 8008aa0:	00000004 00008000 00000000 000000c8     ................
 8008ab0:	00000003 00008000 00000000 00000320     ............ ...
 8008ac0:	00000001 00000000 00000000 00000000     ................
 8008ad0:	74736574 00007265 00000000 00000000     tester..........
 8008ae0:	75716573 65636e65 00000072              sequencer...
