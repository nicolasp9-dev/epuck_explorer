
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

080001c0 <Reset_Handler>:
 80001c0:	b672      	cpsid	i
 80001c2:	4821      	ldr	r0, [pc, #132]	; (8000248 <endfiniloop+0x6>)
 80001c4:	f380 8809 	msr	PSP, r0
 80001c8:	2002      	movs	r0, #2
 80001ca:	f380 8814 	msr	CONTROL, r0
 80001ce:	f3bf 8f6f 	isb	sy
 80001d2:	f008 f955 	bl	8008480 <__early_init>
 80001d6:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
 80001da:	491c      	ldr	r1, [pc, #112]	; (800024c <endfiniloop+0xa>)
 80001dc:	4a1c      	ldr	r2, [pc, #112]	; (8000250 <endfiniloop+0xe>)

080001de <msloop>:
 80001de:	4291      	cmp	r1, r2
 80001e0:	bf3c      	itt	cc
 80001e2:	f841 0b04 	strcc.w	r0, [r1], #4
 80001e6:	e7fa      	bcc.n	80001de <msloop>
 80001e8:	491a      	ldr	r1, [pc, #104]	; (8000254 <endfiniloop+0x12>)
 80001ea:	4a17      	ldr	r2, [pc, #92]	; (8000248 <endfiniloop+0x6>)

080001ec <psloop>:
 80001ec:	4291      	cmp	r1, r2
 80001ee:	bf3c      	itt	cc
 80001f0:	f841 0b04 	strcc.w	r0, [r1], #4
 80001f4:	e7fa      	bcc.n	80001ec <psloop>
 80001f6:	4918      	ldr	r1, [pc, #96]	; (8000258 <endfiniloop+0x16>)
 80001f8:	4a18      	ldr	r2, [pc, #96]	; (800025c <endfiniloop+0x1a>)
 80001fa:	4b19      	ldr	r3, [pc, #100]	; (8000260 <endfiniloop+0x1e>)

080001fc <dloop>:
 80001fc:	429a      	cmp	r2, r3
 80001fe:	bf3e      	ittt	cc
 8000200:	f851 0b04 	ldrcc.w	r0, [r1], #4
 8000204:	f842 0b04 	strcc.w	r0, [r2], #4
 8000208:	e7f8      	bcc.n	80001fc <dloop>
 800020a:	2000      	movs	r0, #0
 800020c:	4915      	ldr	r1, [pc, #84]	; (8000264 <endfiniloop+0x22>)
 800020e:	4a16      	ldr	r2, [pc, #88]	; (8000268 <endfiniloop+0x26>)

08000210 <bloop>:
 8000210:	4291      	cmp	r1, r2
 8000212:	bf3c      	itt	cc
 8000214:	f841 0b04 	strcc.w	r0, [r1], #4
 8000218:	e7fa      	bcc.n	8000210 <bloop>
 800021a:	f008 f9b1 	bl	8008580 <__late_init>
 800021e:	4c13      	ldr	r4, [pc, #76]	; (800026c <endfiniloop+0x2a>)
 8000220:	4d13      	ldr	r5, [pc, #76]	; (8000270 <endfiniloop+0x2e>)

08000222 <initloop>:
 8000222:	42ac      	cmp	r4, r5
 8000224:	da03      	bge.n	800022e <endinitloop>
 8000226:	f854 1b04 	ldr.w	r1, [r4], #4
 800022a:	4788      	blx	r1
 800022c:	e7f9      	b.n	8000222 <initloop>

0800022e <endinitloop>:
 800022e:	f007 fc3f 	bl	8007ab0 <main>
 8000232:	4c10      	ldr	r4, [pc, #64]	; (8000274 <endfiniloop+0x32>)
 8000234:	4d10      	ldr	r5, [pc, #64]	; (8000278 <endfiniloop+0x36>)

08000236 <finiloop>:
 8000236:	42ac      	cmp	r4, r5
 8000238:	da03      	bge.n	8000242 <endfiniloop>
 800023a:	f854 1b04 	ldr.w	r1, [r4], #4
 800023e:	4788      	blx	r1
 8000240:	e7f9      	b.n	8000236 <finiloop>

08000242 <endfiniloop>:
 8000242:	f008 b995 	b.w	8008570 <__default_exit>
 8000246:	0000      	.short	0x0000
 8000248:	20000800 	.word	0x20000800
 800024c:	20000000 	.word	0x20000000
 8000250:	20000400 	.word	0x20000400
 8000254:	20000400 	.word	0x20000400
 8000258:	08009c78 	.word	0x08009c78
 800025c:	20000800 	.word	0x20000800
 8000260:	20000e70 	.word	0x20000e70
 8000264:	20000e70 	.word	0x20000e70
 8000268:	20001eb0 	.word	0x20001eb0
 800026c:	080001c0 	.word	0x080001c0
 8000270:	080001c0 	.word	0x080001c0
 8000274:	080001c0 	.word	0x080001c0
 8000278:	080001c0 	.word	0x080001c0
 800027c:	00000000 	.word	0x00000000

08000280 <_port_switch>:
 8000280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000284:	f8c1 d00c 	str.w	sp, [r1, #12]
 8000288:	f8d0 d00c 	ldr.w	sp, [r0, #12]
 800028c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000290 <_port_thread_start>:
 8000290:	2300      	movs	r3, #0
 8000292:	f383 8811 	msr	BASEPRI, r3
 8000296:	4628      	mov	r0, r5
 8000298:	47a0      	blx	r4
 800029a:	2000      	movs	r0, #0
 800029c:	f008 f950 	bl	8008540 <chThdExit>

080002a0 <_port_switch_from_isr>:
 80002a0:	f008 f95e 	bl	8008560 <chSchDoReschedule>

080002a4 <_port_exit_from_isr>:
 80002a4:	df00      	svc	0
 80002a6:	e7fe      	b.n	80002a6 <_port_exit_from_isr+0x2>
	...

080002b0 <chTMStartMeasurementX.constprop.77>:
 80002b0:	4b01      	ldr	r3, [pc, #4]	; (80002b8 <chTMStartMeasurementX.constprop.77+0x8>)
 80002b2:	685b      	ldr	r3, [r3, #4]
 80002b4:	6083      	str	r3, [r0, #8]
 80002b6:	4770      	bx	lr
 80002b8:	e0001000 	.word	0xe0001000
 80002bc:	00000000 	.word	0x00000000

080002c0 <chEvtGetAndClearEvents.constprop.58>:
 80002c0:	2320      	movs	r3, #32
 80002c2:	f383 8811 	msr	BASEPRI, r3
 80002c6:	4b04      	ldr	r3, [pc, #16]	; (80002d8 <chEvtGetAndClearEvents.constprop.58+0x18>)
 80002c8:	699a      	ldr	r2, [r3, #24]
 80002ca:	2300      	movs	r3, #0
 80002cc:	6b50      	ldr	r0, [r2, #52]	; 0x34
 80002ce:	6353      	str	r3, [r2, #52]	; 0x34
 80002d0:	f383 8811 	msr	BASEPRI, r3
 80002d4:	4770      	bx	lr
 80002d6:	bf00      	nop
 80002d8:	20001370 	.word	0x20001370
 80002dc:	00000000 	.word	0x00000000

080002e0 <pwmEnableChannel.constprop.27>:
 80002e0:	b430      	push	{r4, r5}
 80002e2:	2320      	movs	r3, #32
 80002e4:	f383 8811 	msr	BASEPRI, r3
 80002e8:	4b08      	ldr	r3, [pc, #32]	; (800030c <pwmEnableChannel.constprop.27+0x2c>)
 80002ea:	699c      	ldr	r4, [r3, #24]
 80002ec:	68da      	ldr	r2, [r3, #12]
 80002ee:	f100 050c 	add.w	r5, r0, #12
 80002f2:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 80002f6:	2501      	movs	r5, #1
 80002f8:	fa05 f000 	lsl.w	r0, r5, r0
 80002fc:	4302      	orrs	r2, r0
 80002fe:	60da      	str	r2, [r3, #12]
 8000300:	6061      	str	r1, [r4, #4]
 8000302:	2300      	movs	r3, #0
 8000304:	f383 8811 	msr	BASEPRI, r3
 8000308:	bc30      	pop	{r4, r5}
 800030a:	4770      	bx	lr
 800030c:	20000e70 	.word	0x20000e70

08000310 <dmaStreamAllocate.constprop.19>:
 8000310:	b4f0      	push	{r4, r5, r6, r7}
 8000312:	4e26      	ldr	r6, [pc, #152]	; (80003ac <dmaStreamAllocate.constprop.19+0x9c>)
 8000314:	7a45      	ldrb	r5, [r0, #9]
 8000316:	6837      	ldr	r7, [r6, #0]
 8000318:	2301      	movs	r3, #1
 800031a:	fa03 f405 	lsl.w	r4, r3, r5
 800031e:	423c      	tst	r4, r7
 8000320:	d142      	bne.n	80003a8 <dmaStreamAllocate.constprop.19+0x98>
 8000322:	4b23      	ldr	r3, [pc, #140]	; (80003b0 <dmaStreamAllocate.constprop.19+0xa0>)
 8000324:	433c      	orrs	r4, r7
 8000326:	eb03 07c5 	add.w	r7, r3, r5, lsl #3
 800032a:	f014 0fff 	tst.w	r4, #255	; 0xff
 800032e:	6034      	str	r4, [r6, #0]
 8000330:	f843 1035 	str.w	r1, [r3, r5, lsl #3]
 8000334:	607a      	str	r2, [r7, #4]
 8000336:	d004      	beq.n	8000342 <dmaStreamAllocate.constprop.19+0x32>
 8000338:	4a1e      	ldr	r2, [pc, #120]	; (80003b4 <dmaStreamAllocate.constprop.19+0xa4>)
 800033a:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800033c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
 8000342:	f414 4f7f 	tst.w	r4, #65280	; 0xff00
 8000346:	d129      	bne.n	800039c <dmaStreamAllocate.constprop.19+0x8c>
 8000348:	6802      	ldr	r2, [r0, #0]
 800034a:	6813      	ldr	r3, [r2, #0]
 800034c:	f023 031f 	bic.w	r3, r3, #31
 8000350:	6013      	str	r3, [r2, #0]
 8000352:	6813      	ldr	r3, [r2, #0]
 8000354:	f013 0301 	ands.w	r3, r3, #1
 8000358:	d1fb      	bne.n	8000352 <dmaStreamAllocate.constprop.19+0x42>
 800035a:	7a04      	ldrb	r4, [r0, #8]
 800035c:	6845      	ldr	r5, [r0, #4]
 800035e:	213d      	movs	r1, #61	; 0x3d
 8000360:	40a1      	lsls	r1, r4
 8000362:	2421      	movs	r4, #33	; 0x21
 8000364:	6029      	str	r1, [r5, #0]
 8000366:	6013      	str	r3, [r2, #0]
 8000368:	6154      	str	r4, [r2, #20]
 800036a:	7a81      	ldrb	r1, [r0, #10]
 800036c:	094a      	lsrs	r2, r1, #5
 800036e:	0092      	lsls	r2, r2, #2
 8000370:	f101 4460 	add.w	r4, r1, #3758096384	; 0xe0000000
 8000374:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
 8000378:	f502 4261 	add.w	r2, r2, #57600	; 0xe100
 800037c:	2001      	movs	r0, #1
 800037e:	f504 4461 	add.w	r4, r4, #57600	; 0xe100
 8000382:	f001 011f 	and.w	r1, r1, #31
 8000386:	fa00 f101 	lsl.w	r1, r0, r1
 800038a:	25a0      	movs	r5, #160	; 0xa0
 800038c:	f884 5300 	strb.w	r5, [r4, #768]	; 0x300
 8000390:	4618      	mov	r0, r3
 8000392:	f8c2 1180 	str.w	r1, [r2, #384]	; 0x180
 8000396:	6011      	str	r1, [r2, #0]
 8000398:	bcf0      	pop	{r4, r5, r6, r7}
 800039a:	4770      	bx	lr
 800039c:	4a05      	ldr	r2, [pc, #20]	; (80003b4 <dmaStreamAllocate.constprop.19+0xa4>)
 800039e:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80003a0:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80003a4:	6313      	str	r3, [r2, #48]	; 0x30
 80003a6:	e7cf      	b.n	8000348 <dmaStreamAllocate.constprop.19+0x38>
 80003a8:	4618      	mov	r0, r3
 80003aa:	e7f5      	b.n	8000398 <dmaStreamAllocate.constprop.19+0x88>
 80003ac:	20001568 	.word	0x20001568
 80003b0:	200014e8 	.word	0x200014e8
 80003b4:	40023800 	.word	0x40023800
	...

080003c0 <spi_lld_exchange.constprop.18>:
 80003c0:	4b0f      	ldr	r3, [pc, #60]	; (8000400 <spi_lld_exchange.constprop.18+0x40>)
 80003c2:	b430      	push	{r4, r5}
 80003c4:	e9d3 2508 	ldrd	r2, r5, [r3, #32]
 80003c8:	e9d3 010a 	ldrd	r0, r1, [r3, #40]	; 0x28
 80003cc:	6812      	ldr	r2, [r2, #0]
 80003ce:	682b      	ldr	r3, [r5, #0]
 80003d0:	4c0c      	ldr	r4, [pc, #48]	; (8000404 <spi_lld_exchange.constprop.18+0x44>)
 80003d2:	60d4      	str	r4, [r2, #12]
 80003d4:	4d0c      	ldr	r5, [pc, #48]	; (8000408 <spi_lld_exchange.constprop.18+0x48>)
 80003d6:	2402      	movs	r4, #2
 80003d8:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
 80003dc:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 80003e0:	6054      	str	r4, [r2, #4]
 80003e2:	6010      	str	r0, [r2, #0]
 80003e4:	60dd      	str	r5, [r3, #12]
 80003e6:	605c      	str	r4, [r3, #4]
 80003e8:	6019      	str	r1, [r3, #0]
 80003ea:	6811      	ldr	r1, [r2, #0]
 80003ec:	f041 0101 	orr.w	r1, r1, #1
 80003f0:	6011      	str	r1, [r2, #0]
 80003f2:	681a      	ldr	r2, [r3, #0]
 80003f4:	f042 0201 	orr.w	r2, r2, #1
 80003f8:	601a      	str	r2, [r3, #0]
 80003fa:	bc30      	pop	{r4, r5}
 80003fc:	4770      	bx	lr
 80003fe:	bf00      	nop
 8000400:	2000115c 	.word	0x2000115c
 8000404:	20001648 	.word	0x20001648
 8000408:	20001d1c 	.word	0x20001d1c
 800040c:	00000000 	.word	0x00000000

08000410 <tmr>:
 8000410:	4b01      	ldr	r3, [pc, #4]	; (8000418 <tmr+0x8>)
 8000412:	2201      	movs	r2, #1
 8000414:	701a      	strb	r2, [r3, #0]
 8000416:	4770      	bx	lr
 8000418:	20001cf0 	.word	0x20001cf0
 800041c:	00000000 	.word	0x00000000

08000420 <_idle_thread>:
 8000420:	e7fe      	b.n	8000420 <_idle_thread>
 8000422:	bf00      	nop
	...

08000430 <chCoreAlloc>:
 8000430:	4603      	mov	r3, r0
 8000432:	2220      	movs	r2, #32
 8000434:	f382 8811 	msr	BASEPRI, r2
 8000438:	4908      	ldr	r1, [pc, #32]	; (800045c <chCoreAlloc+0x2c>)
 800043a:	4a09      	ldr	r2, [pc, #36]	; (8000460 <chCoreAlloc+0x30>)
 800043c:	6808      	ldr	r0, [r1, #0]
 800043e:	6812      	ldr	r2, [r2, #0]
 8000440:	3307      	adds	r3, #7
 8000442:	f023 0307 	bic.w	r3, r3, #7
 8000446:	1a12      	subs	r2, r2, r0
 8000448:	4293      	cmp	r3, r2
 800044a:	bf9a      	itte	ls
 800044c:	181b      	addls	r3, r3, r0
 800044e:	600b      	strls	r3, [r1, #0]
 8000450:	2000      	movhi	r0, #0
 8000452:	2300      	movs	r3, #0
 8000454:	f383 8811 	msr	BASEPRI, r3
 8000458:	4770      	bx	lr
 800045a:	bf00      	nop
 800045c:	20001644 	.word	0x20001644
 8000460:	20001570 	.word	0x20001570
	...

08000470 <notify2>:
 8000470:	4a02      	ldr	r2, [pc, #8]	; (800047c <notify2+0xc>)
 8000472:	68d3      	ldr	r3, [r2, #12]
 8000474:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000478:	60d3      	str	r3, [r2, #12]
 800047a:	4770      	bx	lr
 800047c:	40004400 	.word	0x40004400

08000480 <get_descriptor>:
 8000480:	2902      	cmp	r1, #2
 8000482:	d006      	beq.n	8000492 <get_descriptor+0x12>
 8000484:	2903      	cmp	r1, #3
 8000486:	d006      	beq.n	8000496 <get_descriptor+0x16>
 8000488:	2901      	cmp	r1, #1
 800048a:	4806      	ldr	r0, [pc, #24]	; (80004a4 <get_descriptor+0x24>)
 800048c:	bf18      	it	ne
 800048e:	2000      	movne	r0, #0
 8000490:	4770      	bx	lr
 8000492:	4805      	ldr	r0, [pc, #20]	; (80004a8 <get_descriptor+0x28>)
 8000494:	4770      	bx	lr
 8000496:	2a03      	cmp	r2, #3
 8000498:	bf9a      	itte	ls
 800049a:	4804      	ldrls	r0, [pc, #16]	; (80004ac <get_descriptor+0x2c>)
 800049c:	eb00 00c2 	addls.w	r0, r0, r2, lsl #3
 80004a0:	2000      	movhi	r0, #0
 80004a2:	4770      	bx	lr
 80004a4:	08009a00 	.word	0x08009a00
 80004a8:	080099a0 	.word	0x080099a0
 80004ac:	08009ac0 	.word	0x08009ac0

080004b0 <bmk12_setup>:
 80004b0:	4b02      	ldr	r3, [pc, #8]	; (80004bc <bmk12_setup+0xc>)
 80004b2:	2200      	movs	r2, #0
 80004b4:	e9c3 3300 	strd	r3, r3, [r3]
 80004b8:	609a      	str	r2, [r3, #8]
 80004ba:	4770      	bx	lr
 80004bc:	20001634 	.word	0x20001634

080004c0 <bmk11_setup>:
 80004c0:	4b02      	ldr	r3, [pc, #8]	; (80004cc <bmk11_setup+0xc>)
 80004c2:	2201      	movs	r2, #1
 80004c4:	e9c3 3300 	strd	r3, r3, [r3]
 80004c8:	609a      	str	r2, [r3, #8]
 80004ca:	4770      	bx	lr
 80004cc:	2000164c 	.word	0x2000164c

080004d0 <notify>:
 80004d0:	4770      	bx	lr
 80004d2:	bf00      	nop
	...

080004e0 <tmo>:
 80004e0:	4770      	bx	lr
 80004e2:	bf00      	nop
	...

080004f0 <bmk7_setup>:
 80004f0:	4b02      	ldr	r3, [pc, #8]	; (80004fc <bmk7_setup+0xc>)
 80004f2:	2200      	movs	r2, #0
 80004f4:	e9c3 3300 	strd	r3, r3, [r3]
 80004f8:	609a      	str	r2, [r3, #8]
 80004fa:	4770      	bx	lr
 80004fc:	2000164c 	.word	0x2000164c

08000500 <sys2_execute>:
 8000500:	2320      	movs	r3, #32
 8000502:	f383 8811 	msr	BASEPRI, r3
 8000506:	b662      	cpsie	i
 8000508:	b672      	cpsid	i
 800050a:	f383 8811 	msr	BASEPRI, r3
 800050e:	b662      	cpsie	i
 8000510:	2300      	movs	r3, #0
 8000512:	f383 8811 	msr	BASEPRI, r3
 8000516:	b662      	cpsie	i
 8000518:	4770      	bx	lr
 800051a:	bf00      	nop
 800051c:	0000      	movs	r0, r0
	...

08000520 <queues2_setup>:
 8000520:	b430      	push	{r4, r5}
 8000522:	4a08      	ldr	r2, [pc, #32]	; (8000544 <queues2_setup+0x24>)
 8000524:	4b08      	ldr	r3, [pc, #32]	; (8000548 <queues2_setup+0x28>)
 8000526:	4809      	ldr	r0, [pc, #36]	; (800054c <queues2_setup+0x2c>)
 8000528:	601b      	str	r3, [r3, #0]
 800052a:	1d15      	adds	r5, r2, #4
 800052c:	2404      	movs	r4, #4
 800052e:	2100      	movs	r1, #0
 8000530:	611d      	str	r5, [r3, #16]
 8000532:	609c      	str	r4, [r3, #8]
 8000534:	605b      	str	r3, [r3, #4]
 8000536:	60da      	str	r2, [r3, #12]
 8000538:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800053c:	e9c3 0107 	strd	r0, r1, [r3, #28]
 8000540:	bc30      	pop	{r4, r5}
 8000542:	4770      	bx	lr
 8000544:	20001660 	.word	0x20001660
 8000548:	200008a8 	.word	0x200008a8
 800054c:	080004d1 	.word	0x080004d1

08000550 <queues1_setup>:
 8000550:	4a08      	ldr	r2, [pc, #32]	; (8000574 <queues1_setup+0x24>)
 8000552:	4b09      	ldr	r3, [pc, #36]	; (8000578 <queues1_setup+0x28>)
 8000554:	4809      	ldr	r0, [pc, #36]	; (800057c <queues1_setup+0x2c>)
 8000556:	b410      	push	{r4}
 8000558:	2100      	movs	r1, #0
 800055a:	1d14      	adds	r4, r2, #4
 800055c:	611c      	str	r4, [r3, #16]
 800055e:	601b      	str	r3, [r3, #0]
 8000560:	605b      	str	r3, [r3, #4]
 8000562:	60da      	str	r2, [r3, #12]
 8000564:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8000568:	61d8      	str	r0, [r3, #28]
 800056a:	6099      	str	r1, [r3, #8]
 800056c:	6219      	str	r1, [r3, #32]
 800056e:	bc10      	pop	{r4}
 8000570:	4770      	bx	lr
 8000572:	bf00      	nop
 8000574:	20001660 	.word	0x20001660
 8000578:	20000810 	.word	0x20000810
 800057c:	080004d1 	.word	0x080004d1

08000580 <dyn2_setup>:
 8000580:	4b03      	ldr	r3, [pc, #12]	; (8000590 <dyn2_setup+0x10>)
 8000582:	2200      	movs	r2, #0
 8000584:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8000588:	e9c3 2100 	strd	r2, r1, [r3]
 800058c:	609a      	str	r2, [r3, #8]
 800058e:	4770      	bx	lr
 8000590:	20001628 	.word	0x20001628
	...

080005a0 <dyn1_setup>:
 80005a0:	4b08      	ldr	r3, [pc, #32]	; (80005c4 <dyn1_setup+0x24>)
 80005a2:	4909      	ldr	r1, [pc, #36]	; (80005c8 <dyn1_setup+0x28>)
 80005a4:	b410      	push	{r4}
 80005a6:	2200      	movs	r2, #0
 80005a8:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 80005ac:	f103 0010 	add.w	r0, r3, #16
 80005b0:	e9c1 2400 	strd	r2, r4, [r1]
 80005b4:	6099      	str	r1, [r3, #8]
 80005b6:	e9c3 0004 	strd	r0, r0, [r3, #16]
 80005ba:	601a      	str	r2, [r3, #0]
 80005bc:	60da      	str	r2, [r3, #12]
 80005be:	619a      	str	r2, [r3, #24]
 80005c0:	bc10      	pop	{r4}
 80005c2:	4770      	bx	lr
 80005c4:	200015d0 	.word	0x200015d0
 80005c8:	20001660 	.word	0x20001660
 80005cc:	00000000 	.word	0x00000000

080005d0 <dyn3_setup>:
 80005d0:	f7ff bfe6 	b.w	80005a0 <dyn1_setup>
	...

080005e0 <null_provider>:
 80005e0:	2000      	movs	r0, #0
 80005e2:	4770      	bx	lr
	...

080005f0 <pools1_setup>:
 80005f0:	4b03      	ldr	r3, [pc, #12]	; (8000600 <pools1_setup+0x10>)
 80005f2:	2200      	movs	r2, #0
 80005f4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80005f8:	e9c3 2100 	strd	r2, r1, [r3]
 80005fc:	609a      	str	r2, [r3, #8]
 80005fe:	4770      	bx	lr
 8000600:	2000089c 	.word	0x2000089c
	...

08000610 <heap1_setup>:
 8000610:	4b08      	ldr	r3, [pc, #32]	; (8000634 <heap1_setup+0x24>)
 8000612:	4909      	ldr	r1, [pc, #36]	; (8000638 <heap1_setup+0x28>)
 8000614:	b410      	push	{r4}
 8000616:	2200      	movs	r2, #0
 8000618:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 800061c:	f103 0010 	add.w	r0, r3, #16
 8000620:	e9c1 2400 	strd	r2, r4, [r1]
 8000624:	6099      	str	r1, [r3, #8]
 8000626:	e9c3 0004 	strd	r0, r0, [r3, #16]
 800062a:	601a      	str	r2, [r3, #0]
 800062c:	60da      	str	r2, [r3, #12]
 800062e:	619a      	str	r2, [r3, #24]
 8000630:	bc10      	pop	{r4}
 8000632:	4770      	bx	lr
 8000634:	20001cd0 	.word	0x20001cd0
 8000638:	20001660 	.word	0x20001660
 800063c:	00000000 	.word	0x00000000

08000640 <evt1_setup>:
 8000640:	f7ff be3e 	b.w	80002c0 <chEvtGetAndClearEvents.constprop.58>
	...

08000650 <evt3_setup>:
 8000650:	f7ff bff6 	b.w	8000640 <evt1_setup>
	...

08000660 <evt2_setup>:
 8000660:	f7ff bfee 	b.w	8000640 <evt1_setup>
	...

08000670 <mbox1_setup>:
 8000670:	b430      	push	{r4, r5}
 8000672:	4b0b      	ldr	r3, [pc, #44]	; (80006a0 <mbox1_setup+0x30>)
 8000674:	4a0b      	ldr	r2, [pc, #44]	; (80006a4 <mbox1_setup+0x34>)
 8000676:	601a      	str	r2, [r3, #0]
 8000678:	f102 0514 	add.w	r5, r2, #20
 800067c:	2405      	movs	r4, #5
 800067e:	f103 011c 	add.w	r1, r3, #28
 8000682:	2000      	movs	r0, #0
 8000684:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8000688:	f103 0210 	add.w	r2, r3, #16
 800068c:	605d      	str	r5, [r3, #4]
 800068e:	625c      	str	r4, [r3, #36]	; 0x24
 8000690:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8000694:	6219      	str	r1, [r3, #32]
 8000696:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800069a:	bc30      	pop	{r4, r5}
 800069c:	4770      	bx	lr
 800069e:	bf00      	nop
 80006a0:	20000874 	.word	0x20000874
 80006a4:	20001660 	.word	0x20001660
	...

080006b0 <mtx8_setup>:
 80006b0:	4906      	ldr	r1, [pc, #24]	; (80006cc <mtx8_setup+0x1c>)
 80006b2:	4a07      	ldr	r2, [pc, #28]	; (80006d0 <mtx8_setup+0x20>)
 80006b4:	4b07      	ldr	r3, [pc, #28]	; (80006d4 <mtx8_setup+0x24>)
 80006b6:	6009      	str	r1, [r1, #0]
 80006b8:	2000      	movs	r0, #0
 80006ba:	6049      	str	r1, [r1, #4]
 80006bc:	e9c2 2200 	strd	r2, r2, [r2]
 80006c0:	6090      	str	r0, [r2, #8]
 80006c2:	6098      	str	r0, [r3, #8]
 80006c4:	e9c3 3300 	strd	r3, r3, [r3]
 80006c8:	4770      	bx	lr
 80006ca:	bf00      	nop
 80006cc:	20000800 	.word	0x20000800
 80006d0:	20000854 	.word	0x20000854
 80006d4:	20000864 	.word	0x20000864
	...

080006e0 <mtx6_setup>:
 80006e0:	4a04      	ldr	r2, [pc, #16]	; (80006f4 <mtx6_setup+0x14>)
 80006e2:	4b05      	ldr	r3, [pc, #20]	; (80006f8 <mtx6_setup+0x18>)
 80006e4:	6012      	str	r2, [r2, #0]
 80006e6:	2100      	movs	r1, #0
 80006e8:	6052      	str	r2, [r2, #4]
 80006ea:	e9c3 3300 	strd	r3, r3, [r3]
 80006ee:	6099      	str	r1, [r3, #8]
 80006f0:	4770      	bx	lr
 80006f2:	bf00      	nop
 80006f4:	20000800 	.word	0x20000800
 80006f8:	20000854 	.word	0x20000854
 80006fc:	00000000 	.word	0x00000000

08000700 <mtx7_setup>:
 8000700:	f7ff bfee 	b.w	80006e0 <mtx6_setup>
	...

08000710 <mtx4_setup>:
 8000710:	4a04      	ldr	r2, [pc, #16]	; (8000724 <mtx4_setup+0x14>)
 8000712:	4b05      	ldr	r3, [pc, #20]	; (8000728 <mtx4_setup+0x18>)
 8000714:	6012      	str	r2, [r2, #0]
 8000716:	2100      	movs	r1, #0
 8000718:	e9c2 2101 	strd	r2, r1, [r2, #4]
 800071c:	6099      	str	r1, [r3, #8]
 800071e:	e9c3 3300 	strd	r3, r3, [r3]
 8000722:	4770      	bx	lr
 8000724:	20000854 	.word	0x20000854
 8000728:	20000864 	.word	0x20000864
 800072c:	00000000 	.word	0x00000000

08000730 <mtx1_setup>:
 8000730:	4b02      	ldr	r3, [pc, #8]	; (800073c <mtx1_setup+0xc>)
 8000732:	2200      	movs	r2, #0
 8000734:	e9c3 3300 	strd	r3, r3, [r3]
 8000738:	609a      	str	r2, [r3, #8]
 800073a:	4770      	bx	lr
 800073c:	20000854 	.word	0x20000854

08000740 <mtx5_setup>:
 8000740:	f7ff bff6 	b.w	8000730 <mtx1_setup>
	...

08000750 <sem1_setup>:
 8000750:	4b02      	ldr	r3, [pc, #8]	; (800075c <sem1_setup+0xc>)
 8000752:	2200      	movs	r2, #0
 8000754:	e9c3 3300 	strd	r3, r3, [r3]
 8000758:	609a      	str	r2, [r3, #8]
 800075a:	4770      	bx	lr
 800075c:	200008cc 	.word	0x200008cc

08000760 <sem3_setup>:
 8000760:	f7ff bff6 	b.w	8000750 <sem1_setup>
	...

08000770 <sem2_setup>:
 8000770:	f7ff bfee 	b.w	8000750 <sem1_setup>
	...

08000780 <test_printn.part.1>:
 8000780:	b320      	cbz	r0, 80007cc <test_printn.part.1+0x4c>
 8000782:	b570      	push	{r4, r5, r6, lr}
 8000784:	b084      	sub	sp, #16
 8000786:	466d      	mov	r5, sp
 8000788:	462c      	mov	r4, r5
 800078a:	4e11      	ldr	r6, [pc, #68]	; (80007d0 <test_printn.part.1+0x50>)
 800078c:	e000      	b.n	8000790 <test_printn.part.1+0x10>
 800078e:	4614      	mov	r4, r2
 8000790:	fba6 2300 	umull	r2, r3, r6, r0
 8000794:	08db      	lsrs	r3, r3, #3
 8000796:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 800079a:	eba0 0041 	sub.w	r0, r0, r1, lsl #1
 800079e:	f100 0130 	add.w	r1, r0, #48	; 0x30
 80007a2:	4622      	mov	r2, r4
 80007a4:	b2c9      	uxtb	r1, r1
 80007a6:	f802 1b01 	strb.w	r1, [r2], #1
 80007aa:	4618      	mov	r0, r3
 80007ac:	2b00      	cmp	r3, #0
 80007ae:	d1ee      	bne.n	800078e <test_printn.part.1+0xe>
 80007b0:	42aa      	cmp	r2, r5
 80007b2:	d909      	bls.n	80007c8 <test_printn.part.1+0x48>
 80007b4:	4e07      	ldr	r6, [pc, #28]	; (80007d4 <test_printn.part.1+0x54>)
 80007b6:	e001      	b.n	80007bc <test_printn.part.1+0x3c>
 80007b8:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
 80007bc:	6830      	ldr	r0, [r6, #0]
 80007be:	6803      	ldr	r3, [r0, #0]
 80007c0:	689b      	ldr	r3, [r3, #8]
 80007c2:	4798      	blx	r3
 80007c4:	42a5      	cmp	r5, r4
 80007c6:	d1f7      	bne.n	80007b8 <test_printn.part.1+0x38>
 80007c8:	b004      	add	sp, #16
 80007ca:	bd70      	pop	{r4, r5, r6, pc}
 80007cc:	4770      	bx	lr
 80007ce:	bf00      	nop
 80007d0:	cccccccd 	.word	0xcccccccd
 80007d4:	200014c0 	.word	0x200014c0
	...

080007e0 <test_printn>:
 80007e0:	b928      	cbnz	r0, 80007ee <test_printn+0xe>
 80007e2:	4b04      	ldr	r3, [pc, #16]	; (80007f4 <test_printn+0x14>)
 80007e4:	6818      	ldr	r0, [r3, #0]
 80007e6:	6803      	ldr	r3, [r0, #0]
 80007e8:	2130      	movs	r1, #48	; 0x30
 80007ea:	689b      	ldr	r3, [r3, #8]
 80007ec:	4718      	bx	r3
 80007ee:	f7ff bfc7 	b.w	8000780 <test_printn.part.1>
 80007f2:	bf00      	nop
 80007f4:	200014c0 	.word	0x200014c0
	...

08000800 <print_line>:
 8000800:	b570      	push	{r4, r5, r6, lr}
 8000802:	4d08      	ldr	r5, [pc, #32]	; (8000824 <print_line+0x24>)
 8000804:	244c      	movs	r4, #76	; 0x4c
 8000806:	6828      	ldr	r0, [r5, #0]
 8000808:	6803      	ldr	r3, [r0, #0]
 800080a:	212d      	movs	r1, #45	; 0x2d
 800080c:	689b      	ldr	r3, [r3, #8]
 800080e:	4798      	blx	r3
 8000810:	3c01      	subs	r4, #1
 8000812:	d1f8      	bne.n	8000806 <print_line+0x6>
 8000814:	6828      	ldr	r0, [r5, #0]
 8000816:	4904      	ldr	r1, [pc, #16]	; (8000828 <print_line+0x28>)
 8000818:	6803      	ldr	r3, [r0, #0]
 800081a:	2202      	movs	r2, #2
 800081c:	681b      	ldr	r3, [r3, #0]
 800081e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000822:	4718      	bx	r3
 8000824:	200014c0 	.word	0x200014c0
 8000828:	08008c14 	.word	0x08008c14
 800082c:	00000000 	.word	0x00000000

08000830 <test_terminate_threads>:
 8000830:	4b0a      	ldr	r3, [pc, #40]	; (800085c <test_terminate_threads+0x2c>)
 8000832:	b430      	push	{r4, r5}
 8000834:	f103 0014 	add.w	r0, r3, #20
 8000838:	2520      	movs	r5, #32
 800083a:	2400      	movs	r4, #0
 800083c:	f853 2b04 	ldr.w	r2, [r3], #4
 8000840:	b13a      	cbz	r2, 8000852 <test_terminate_threads+0x22>
 8000842:	f385 8811 	msr	BASEPRI, r5
 8000846:	7f51      	ldrb	r1, [r2, #29]
 8000848:	f041 0104 	orr.w	r1, r1, #4
 800084c:	7751      	strb	r1, [r2, #29]
 800084e:	f384 8811 	msr	BASEPRI, r4
 8000852:	4283      	cmp	r3, r0
 8000854:	d1f2      	bne.n	800083c <test_terminate_threads+0xc>
 8000856:	bc30      	pop	{r4, r5}
 8000858:	4770      	bx	lr
 800085a:	bf00      	nop
 800085c:	20001cf4 	.word	0x20001cf4

08000860 <_test_assert_time_window>:
 8000860:	b410      	push	{r4}
 8000862:	2320      	movs	r3, #32
 8000864:	f383 8811 	msr	BASEPRI, r3
 8000868:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 800086c:	2300      	movs	r3, #0
 800086e:	6a64      	ldr	r4, [r4, #36]	; 0x24
 8000870:	f383 8811 	msr	BASEPRI, r3
 8000874:	1a64      	subs	r4, r4, r1
 8000876:	1a52      	subs	r2, r2, r1
 8000878:	4294      	cmp	r4, r2
 800087a:	d306      	bcc.n	800088a <_test_assert_time_window+0x2a>
 800087c:	4c04      	ldr	r4, [pc, #16]	; (8000890 <_test_assert_time_window+0x30>)
 800087e:	4905      	ldr	r1, [pc, #20]	; (8000894 <_test_assert_time_window+0x34>)
 8000880:	4a05      	ldr	r2, [pc, #20]	; (8000898 <_test_assert_time_window+0x38>)
 8000882:	2301      	movs	r3, #1
 8000884:	7023      	strb	r3, [r4, #0]
 8000886:	700b      	strb	r3, [r1, #0]
 8000888:	6010      	str	r0, [r2, #0]
 800088a:	4618      	mov	r0, r3
 800088c:	bc10      	pop	{r4}
 800088e:	4770      	bx	lr
 8000890:	20001cc8 	.word	0x20001cc8
 8000894:	20001624 	.word	0x20001624
 8000898:	200015cc 	.word	0x200015cc
 800089c:	00000000 	.word	0x00000000

080008a0 <_test_assert_sequence>:
 80008a0:	b4f0      	push	{r4, r5, r6, r7}
 80008a2:	4e0e      	ldr	r6, [pc, #56]	; (80008dc <_test_assert_sequence+0x3c>)
 80008a4:	4f0e      	ldr	r7, [pc, #56]	; (80008e0 <_test_assert_sequence+0x40>)
 80008a6:	6835      	ldr	r5, [r6, #0]
 80008a8:	3901      	subs	r1, #1
 80008aa:	463b      	mov	r3, r7
 80008ac:	e003      	b.n	80008b6 <_test_assert_sequence+0x16>
 80008ae:	f813 4b01 	ldrb.w	r4, [r3], #1
 80008b2:	4294      	cmp	r4, r2
 80008b4:	d108      	bne.n	80008c8 <_test_assert_sequence+0x28>
 80008b6:	429d      	cmp	r5, r3
 80008b8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80008bc:	d8f7      	bhi.n	80008ae <_test_assert_sequence+0xe>
 80008be:	b91a      	cbnz	r2, 80008c8 <_test_assert_sequence+0x28>
 80008c0:	6037      	str	r7, [r6, #0]
 80008c2:	4610      	mov	r0, r2
 80008c4:	bcf0      	pop	{r4, r5, r6, r7}
 80008c6:	4770      	bx	lr
 80008c8:	4c06      	ldr	r4, [pc, #24]	; (80008e4 <_test_assert_sequence+0x44>)
 80008ca:	4907      	ldr	r1, [pc, #28]	; (80008e8 <_test_assert_sequence+0x48>)
 80008cc:	4b07      	ldr	r3, [pc, #28]	; (80008ec <_test_assert_sequence+0x4c>)
 80008ce:	2201      	movs	r2, #1
 80008d0:	7022      	strb	r2, [r4, #0]
 80008d2:	6018      	str	r0, [r3, #0]
 80008d4:	700a      	strb	r2, [r1, #0]
 80008d6:	4610      	mov	r0, r2
 80008d8:	bcf0      	pop	{r4, r5, r6, r7}
 80008da:	4770      	bx	lr
 80008dc:	20001d18 	.word	0x20001d18
 80008e0:	20001d08 	.word	0x20001d08
 80008e4:	20001cc8 	.word	0x20001cc8
 80008e8:	20001624 	.word	0x20001624
 80008ec:	200015cc 	.word	0x200015cc

080008f0 <_test_assert>:
 80008f0:	b951      	cbnz	r1, 8000908 <_test_assert+0x18>
 80008f2:	b410      	push	{r4}
 80008f4:	4906      	ldr	r1, [pc, #24]	; (8000910 <_test_assert+0x20>)
 80008f6:	4c07      	ldr	r4, [pc, #28]	; (8000914 <_test_assert+0x24>)
 80008f8:	4a07      	ldr	r2, [pc, #28]	; (8000918 <_test_assert+0x28>)
 80008fa:	2301      	movs	r3, #1
 80008fc:	7023      	strb	r3, [r4, #0]
 80008fe:	6010      	str	r0, [r2, #0]
 8000900:	700b      	strb	r3, [r1, #0]
 8000902:	4618      	mov	r0, r3
 8000904:	bc10      	pop	{r4}
 8000906:	4770      	bx	lr
 8000908:	2300      	movs	r3, #0
 800090a:	4618      	mov	r0, r3
 800090c:	4770      	bx	lr
 800090e:	bf00      	nop
 8000910:	20001624 	.word	0x20001624
 8000914:	20001cc8 	.word	0x20001cc8
 8000918:	200015cc 	.word	0x200015cc
 800091c:	00000000 	.word	0x00000000

08000920 <test_emit_token>:
 8000920:	2320      	movs	r3, #32
 8000922:	f383 8811 	msr	BASEPRI, r3
 8000926:	4b04      	ldr	r3, [pc, #16]	; (8000938 <test_emit_token+0x18>)
 8000928:	681a      	ldr	r2, [r3, #0]
 800092a:	1c51      	adds	r1, r2, #1
 800092c:	6019      	str	r1, [r3, #0]
 800092e:	7010      	strb	r0, [r2, #0]
 8000930:	2300      	movs	r3, #0
 8000932:	f383 8811 	msr	BASEPRI, r3
 8000936:	4770      	bx	lr
 8000938:	20001d18 	.word	0x20001d18
 800093c:	00000000 	.word	0x00000000

08000940 <h3>:
 8000940:	2043      	movs	r0, #67	; 0x43
 8000942:	f7ff bfed 	b.w	8000920 <test_emit_token>
 8000946:	bf00      	nop
	...

08000950 <h2>:
 8000950:	2042      	movs	r0, #66	; 0x42
 8000952:	f7ff bfe5 	b.w	8000920 <test_emit_token>
 8000956:	bf00      	nop
	...

08000960 <h1>:
 8000960:	2041      	movs	r0, #65	; 0x41
 8000962:	f7ff bfdd 	b.w	8000920 <test_emit_token>
 8000966:	bf00      	nop
	...

08000970 <thread.lto_priv.81>:
 8000970:	7800      	ldrb	r0, [r0, #0]
 8000972:	f7ff bfd5 	b.w	8000920 <test_emit_token>
 8000976:	bf00      	nop
	...

08000980 <thread.lto_priv.83>:
 8000980:	f7ff bff6 	b.w	8000970 <thread.lto_priv.81>
	...

08000990 <test_println>:
 8000990:	b570      	push	{r4, r5, r6, lr}
 8000992:	7801      	ldrb	r1, [r0, #0]
 8000994:	b189      	cbz	r1, 80009ba <test_println+0x2a>
 8000996:	4d0a      	ldr	r5, [pc, #40]	; (80009c0 <test_println+0x30>)
 8000998:	4604      	mov	r4, r0
 800099a:	6828      	ldr	r0, [r5, #0]
 800099c:	6803      	ldr	r3, [r0, #0]
 800099e:	689b      	ldr	r3, [r3, #8]
 80009a0:	4798      	blx	r3
 80009a2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80009a6:	2900      	cmp	r1, #0
 80009a8:	d1f7      	bne.n	800099a <test_println+0xa>
 80009aa:	6828      	ldr	r0, [r5, #0]
 80009ac:	4905      	ldr	r1, [pc, #20]	; (80009c4 <test_println+0x34>)
 80009ae:	6803      	ldr	r3, [r0, #0]
 80009b0:	2202      	movs	r2, #2
 80009b2:	681b      	ldr	r3, [r3, #0]
 80009b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80009b8:	4718      	bx	r3
 80009ba:	4d01      	ldr	r5, [pc, #4]	; (80009c0 <test_println+0x30>)
 80009bc:	e7f5      	b.n	80009aa <test_println+0x1a>
 80009be:	bf00      	nop
 80009c0:	200014c0 	.word	0x200014c0
 80009c4:	08008c14 	.word	0x08008c14
	...

080009d0 <test_print>:
 80009d0:	7801      	ldrb	r1, [r0, #0]
 80009d2:	b159      	cbz	r1, 80009ec <test_print+0x1c>
 80009d4:	b538      	push	{r3, r4, r5, lr}
 80009d6:	4d06      	ldr	r5, [pc, #24]	; (80009f0 <test_print+0x20>)
 80009d8:	4604      	mov	r4, r0
 80009da:	6828      	ldr	r0, [r5, #0]
 80009dc:	6803      	ldr	r3, [r0, #0]
 80009de:	689b      	ldr	r3, [r3, #8]
 80009e0:	4798      	blx	r3
 80009e2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80009e6:	2900      	cmp	r1, #0
 80009e8:	d1f7      	bne.n	80009da <test_print+0xa>
 80009ea:	bd38      	pop	{r3, r4, r5, pc}
 80009ec:	4770      	bx	lr
 80009ee:	bf00      	nop
 80009f0:	200014c0 	.word	0x200014c0
	...

08000a00 <spi_lld_start>:
 8000a00:	b510      	push	{r4, lr}
 8000a02:	7803      	ldrb	r3, [r0, #0]
 8000a04:	2b01      	cmp	r3, #1
 8000a06:	4604      	mov	r4, r0
 8000a08:	d01d      	beq.n	8000a46 <spi_lld_start+0x46>
 8000a0a:	69c3      	ldr	r3, [r0, #28]
 8000a0c:	6862      	ldr	r2, [r4, #4]
 8000a0e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8000a10:	8950      	ldrh	r0, [r2, #10]
 8000a12:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8000a14:	f421 41f0 	bic.w	r1, r1, #30720	; 0x7800
 8000a18:	f422 42f0 	bic.w	r2, r2, #30720	; 0x7800
 8000a1c:	f410 6f00 	tst.w	r0, #2048	; 0x800
 8000a20:	bf1c      	itt	ne
 8000a22:	f441 5120 	orrne.w	r1, r1, #10240	; 0x2800
 8000a26:	f442 5220 	orrne.w	r2, r2, #10240	; 0x2800
 8000a2a:	e9c4 120a 	strd	r1, r2, [r4, #40]	; 0x28
 8000a2e:	f440 7041 	orr.w	r0, r0, #772	; 0x304
 8000a32:	2207      	movs	r2, #7
 8000a34:	2100      	movs	r1, #0
 8000a36:	6019      	str	r1, [r3, #0]
 8000a38:	6018      	str	r0, [r3, #0]
 8000a3a:	605a      	str	r2, [r3, #4]
 8000a3c:	681a      	ldr	r2, [r3, #0]
 8000a3e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000a42:	601a      	str	r2, [r3, #0]
 8000a44:	bd10      	pop	{r4, pc}
 8000a46:	4b18      	ldr	r3, [pc, #96]	; (8000aa8 <spi_lld_start+0xa8>)
 8000a48:	4298      	cmp	r0, r3
 8000a4a:	d00c      	beq.n	8000a66 <spi_lld_start+0x66>
 8000a4c:	4b17      	ldr	r3, [pc, #92]	; (8000aac <spi_lld_start+0xac>)
 8000a4e:	4298      	cmp	r0, r3
 8000a50:	d019      	beq.n	8000a86 <spi_lld_start+0x86>
 8000a52:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 8000a56:	69e3      	ldr	r3, [r4, #28]
 8000a58:	6808      	ldr	r0, [r1, #0]
 8000a5a:	6811      	ldr	r1, [r2, #0]
 8000a5c:	f103 020c 	add.w	r2, r3, #12
 8000a60:	6082      	str	r2, [r0, #8]
 8000a62:	608a      	str	r2, [r1, #8]
 8000a64:	e7d2      	b.n	8000a0c <spi_lld_start+0xc>
 8000a66:	4602      	mov	r2, r0
 8000a68:	4911      	ldr	r1, [pc, #68]	; (8000ab0 <spi_lld_start+0xb0>)
 8000a6a:	6a00      	ldr	r0, [r0, #32]
 8000a6c:	f7ff fc50 	bl	8000310 <dmaStreamAllocate.constprop.19>
 8000a70:	4622      	mov	r2, r4
 8000a72:	4910      	ldr	r1, [pc, #64]	; (8000ab4 <spi_lld_start+0xb4>)
 8000a74:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000a76:	f7ff fc4b 	bl	8000310 <dmaStreamAllocate.constprop.19>
 8000a7a:	4a0f      	ldr	r2, [pc, #60]	; (8000ab8 <spi_lld_start+0xb8>)
 8000a7c:	6c53      	ldr	r3, [r2, #68]	; 0x44
 8000a7e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000a82:	6453      	str	r3, [r2, #68]	; 0x44
 8000a84:	e7e5      	b.n	8000a52 <spi_lld_start+0x52>
 8000a86:	4602      	mov	r2, r0
 8000a88:	4909      	ldr	r1, [pc, #36]	; (8000ab0 <spi_lld_start+0xb0>)
 8000a8a:	6a00      	ldr	r0, [r0, #32]
 8000a8c:	f7ff fc40 	bl	8000310 <dmaStreamAllocate.constprop.19>
 8000a90:	4622      	mov	r2, r4
 8000a92:	4908      	ldr	r1, [pc, #32]	; (8000ab4 <spi_lld_start+0xb4>)
 8000a94:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000a96:	f7ff fc3b 	bl	8000310 <dmaStreamAllocate.constprop.19>
 8000a9a:	4a07      	ldr	r2, [pc, #28]	; (8000ab8 <spi_lld_start+0xb8>)
 8000a9c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8000a9e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000aa2:	6413      	str	r3, [r2, #64]	; 0x40
 8000aa4:	e7d5      	b.n	8000a52 <spi_lld_start+0x52>
 8000aa6:	bf00      	nop
 8000aa8:	2000115c 	.word	0x2000115c
 8000aac:	2000118c 	.word	0x2000118c
 8000ab0:	08001941 	.word	0x08001941
 8000ab4:	08000ac1 	.word	0x08000ac1
 8000ab8:	40023800 	.word	0x40023800
 8000abc:	00000000 	.word	0x00000000

08000ac0 <spi_lld_serve_tx_interrupt>:
 8000ac0:	f011 0f0c 	tst.w	r1, #12
 8000ac4:	d100      	bne.n	8000ac8 <spi_lld_serve_tx_interrupt+0x8>
 8000ac6:	4770      	bx	lr
 8000ac8:	b672      	cpsid	i
 8000aca:	4b02      	ldr	r3, [pc, #8]	; (8000ad4 <spi_lld_serve_tx_interrupt+0x14>)
 8000acc:	4a02      	ldr	r2, [pc, #8]	; (8000ad8 <spi_lld_serve_tx_interrupt+0x18>)
 8000ace:	62da      	str	r2, [r3, #44]	; 0x2c
 8000ad0:	e7fe      	b.n	8000ad0 <spi_lld_serve_tx_interrupt+0x10>
 8000ad2:	bf00      	nop
 8000ad4:	20001370 	.word	0x20001370
 8000ad8:	08009120 	.word	0x08009120
 8000adc:	00000000 	.word	0x00000000

08000ae0 <usb_lld_start_in>:
 8000ae0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8000ae2:	b410      	push	{r4}
 8000ae4:	eb02 1441 	add.w	r4, r2, r1, lsl #5
 8000ae8:	2301      	movs	r3, #1
 8000aea:	f8d4 0900 	ldr.w	r0, [r4, #2304]	; 0x900
 8000aee:	f040 4004 	orr.w	r0, r0, #2214592512	; 0x84000000
 8000af2:	f8c4 0900 	str.w	r0, [r4, #2304]	; 0x900
 8000af6:	f8d2 0834 	ldr.w	r0, [r2, #2100]	; 0x834
 8000afa:	bc10      	pop	{r4}
 8000afc:	fa03 f101 	lsl.w	r1, r3, r1
 8000b00:	4301      	orrs	r1, r0
 8000b02:	f8c2 1834 	str.w	r1, [r2, #2100]	; 0x834
 8000b06:	4770      	bx	lr
	...

08000b10 <usb_lld_prepare_transmit>:
 8000b10:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8000b14:	b410      	push	{r4}
 8000b16:	68dc      	ldr	r4, [r3, #12]
 8000b18:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8000b1a:	6960      	ldr	r0, [r4, #20]
 8000b1c:	6843      	ldr	r3, [r0, #4]
 8000b1e:	6103      	str	r3, [r0, #16]
 8000b20:	b193      	cbz	r3, 8000b48 <usb_lld_prepare_transmit+0x38>
 8000b22:	b161      	cbz	r1, 8000b3e <usb_lld_prepare_transmit+0x2e>
 8000b24:	8a20      	ldrh	r0, [r4, #16]
 8000b26:	bc10      	pop	{r4}
 8000b28:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 8000b2c:	1e41      	subs	r1, r0, #1
 8000b2e:	4419      	add	r1, r3
 8000b30:	fbb1 f1f0 	udiv	r1, r1, r0
 8000b34:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
 8000b38:	f8c2 3910 	str.w	r3, [r2, #2320]	; 0x910
 8000b3c:	4770      	bx	lr
 8000b3e:	2b40      	cmp	r3, #64	; 0x40
 8000b40:	bf84      	itt	hi
 8000b42:	2340      	movhi	r3, #64	; 0x40
 8000b44:	6043      	strhi	r3, [r0, #4]
 8000b46:	e7ed      	b.n	8000b24 <usb_lld_prepare_transmit+0x14>
 8000b48:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 8000b4c:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8000b50:	f8c2 3910 	str.w	r3, [r2, #2320]	; 0x910
 8000b54:	bc10      	pop	{r4}
 8000b56:	4770      	bx	lr
	...

08000b60 <usb_lld_prepare_receive>:
 8000b60:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8000b64:	b470      	push	{r4, r5, r6}
 8000b66:	68de      	ldr	r6, [r3, #12]
 8000b68:	69b5      	ldr	r5, [r6, #24]
 8000b6a:	686a      	ldr	r2, [r5, #4]
 8000b6c:	612a      	str	r2, [r5, #16]
 8000b6e:	b929      	cbnz	r1, 8000b7c <usb_lld_prepare_receive+0x1c>
 8000b70:	2a40      	cmp	r2, #64	; 0x40
 8000b72:	d903      	bls.n	8000b7c <usb_lld_prepare_receive+0x1c>
 8000b74:	2240      	movs	r2, #64	; 0x40
 8000b76:	4c09      	ldr	r4, [pc, #36]	; (8000b9c <usb_lld_prepare_receive+0x3c>)
 8000b78:	606a      	str	r2, [r5, #4]
 8000b7a:	e001      	b.n	8000b80 <usb_lld_prepare_receive+0x20>
 8000b7c:	f042 44c0 	orr.w	r4, r2, #1610612736	; 0x60000000
 8000b80:	8a75      	ldrh	r5, [r6, #18]
 8000b82:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8000b84:	1e6b      	subs	r3, r5, #1
 8000b86:	eb00 1141 	add.w	r1, r0, r1, lsl #5
 8000b8a:	4413      	add	r3, r2
 8000b8c:	fbb3 f3f5 	udiv	r3, r3, r5
 8000b90:	ea44 43c3 	orr.w	r3, r4, r3, lsl #19
 8000b94:	f8c1 3b10 	str.w	r3, [r1, #2832]	; 0xb10
 8000b98:	bc70      	pop	{r4, r5, r6}
 8000b9a:	4770      	bx	lr
 8000b9c:	60000040 	.word	0x60000040

08000ba0 <otg_epout_handler.constprop.13>:
 8000ba0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ba4:	4e24      	ldr	r6, [pc, #144]	; (8000c38 <otg_epout_handler.constprop.13+0x98>)
 8000ba6:	6d37      	ldr	r7, [r6, #80]	; 0x50
 8000ba8:	eb07 1340 	add.w	r3, r7, r0, lsl #5
 8000bac:	4605      	mov	r5, r0
 8000bae:	f8d3 4b08 	ldr.w	r4, [r3, #2824]	; 0xb08
 8000bb2:	f8c3 4b08 	str.w	r4, [r3, #2824]	; 0xb08
 8000bb6:	0720      	lsls	r0, r4, #28
 8000bb8:	d50a      	bpl.n	8000bd0 <otg_epout_handler.constprop.13+0x30>
 8000bba:	f8d7 3814 	ldr.w	r3, [r7, #2068]	; 0x814
 8000bbe:	0719      	lsls	r1, r3, #28
 8000bc0:	d506      	bpl.n	8000bd0 <otg_epout_handler.constprop.13+0x30>
 8000bc2:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 8000bc6:	4629      	mov	r1, r5
 8000bc8:	68db      	ldr	r3, [r3, #12]
 8000bca:	4630      	mov	r0, r6
 8000bcc:	685b      	ldr	r3, [r3, #4]
 8000bce:	4798      	blx	r3
 8000bd0:	07e2      	lsls	r2, r4, #31
 8000bd2:	d52e      	bpl.n	8000c32 <otg_epout_handler.constprop.13+0x92>
 8000bd4:	f8d7 3814 	ldr.w	r3, [r7, #2068]	; 0x814
 8000bd8:	07db      	lsls	r3, r3, #31
 8000bda:	d52a      	bpl.n	8000c32 <otg_epout_handler.constprop.13+0x92>
 8000bdc:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 8000be0:	68d9      	ldr	r1, [r3, #12]
 8000be2:	698b      	ldr	r3, [r1, #24]
 8000be4:	6858      	ldr	r0, [r3, #4]
 8000be6:	691a      	ldr	r2, [r3, #16]
 8000be8:	4290      	cmp	r0, r2
 8000bea:	d30c      	bcc.n	8000c06 <otg_epout_handler.constprop.13+0x66>
 8000bec:	8973      	ldrh	r3, [r6, #10]
 8000bee:	68cc      	ldr	r4, [r1, #12]
 8000bf0:	4811      	ldr	r0, [pc, #68]	; (8000c38 <otg_epout_handler.constprop.13+0x98>)
 8000bf2:	2201      	movs	r2, #1
 8000bf4:	40aa      	lsls	r2, r5
 8000bf6:	ea23 0302 	bic.w	r3, r3, r2
 8000bfa:	8173      	strh	r3, [r6, #10]
 8000bfc:	4629      	mov	r1, r5
 8000bfe:	4623      	mov	r3, r4
 8000c00:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c04:	4718      	bx	r3
 8000c06:	1a12      	subs	r2, r2, r0
 8000c08:	2400      	movs	r4, #0
 8000c0a:	e9c3 2401 	strd	r2, r4, [r3, #4]
 8000c0e:	4629      	mov	r1, r5
 8000c10:	4809      	ldr	r0, [pc, #36]	; (8000c38 <otg_epout_handler.constprop.13+0x98>)
 8000c12:	f7ff ffa5 	bl	8000b60 <usb_lld_prepare_receive>
 8000c16:	2320      	movs	r3, #32
 8000c18:	f383 8811 	msr	BASEPRI, r3
 8000c1c:	6d33      	ldr	r3, [r6, #80]	; 0x50
 8000c1e:	eb03 1545 	add.w	r5, r3, r5, lsl #5
 8000c22:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	; 0xb00
 8000c26:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000c2a:	f8c5 3b00 	str.w	r3, [r5, #2816]	; 0xb00
 8000c2e:	f384 8811 	msr	BASEPRI, r4
 8000c32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c36:	bf00      	nop
 8000c38:	200011c0 	.word	0x200011c0
 8000c3c:	00000000 	.word	0x00000000

08000c40 <_pal_lld_setgroupmode>:
 8000c40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000c44:	f04f 0c03 	mov.w	ip, #3
 8000c48:	f002 0603 	and.w	r6, r2, #3
 8000c4c:	f3c2 05c1 	ubfx	r5, r2, #3, #2
 8000c50:	2400      	movs	r4, #0
 8000c52:	09d2      	lsrs	r2, r2, #7
 8000c54:	270f      	movs	r7, #15
 8000c56:	f04f 0e01 	mov.w	lr, #1
 8000c5a:	e029      	b.n	8000cb0 <_pal_lld_setgroupmode+0x70>
 8000c5c:	f8d0 9020 	ldr.w	r9, [r0, #32]
 8000c60:	ea03 0309 	and.w	r3, r3, r9
 8000c64:	ea43 0308 	orr.w	r3, r3, r8
 8000c68:	6203      	str	r3, [r0, #32]
 8000c6a:	6843      	ldr	r3, [r0, #4]
 8000c6c:	fa0e f804 	lsl.w	r8, lr, r4
 8000c70:	ea23 0308 	bic.w	r3, r3, r8
 8000c74:	6043      	str	r3, [r0, #4]
 8000c76:	0063      	lsls	r3, r4, #1
 8000c78:	f8d0 8008 	ldr.w	r8, [r0, #8]
 8000c7c:	fa0c f303 	lsl.w	r3, ip, r3
 8000c80:	43db      	mvns	r3, r3
 8000c82:	ea08 0803 	and.w	r8, r8, r3
 8000c86:	ea48 0805 	orr.w	r8, r8, r5
 8000c8a:	f8c0 8008 	str.w	r8, [r0, #8]
 8000c8e:	f8d0 800c 	ldr.w	r8, [r0, #12]
 8000c92:	ea03 0808 	and.w	r8, r3, r8
 8000c96:	f8c0 800c 	str.w	r8, [r0, #12]
 8000c9a:	f8d0 8000 	ldr.w	r8, [r0]
 8000c9e:	ea03 0308 	and.w	r3, r3, r8
 8000ca2:	4333      	orrs	r3, r6
 8000ca4:	6003      	str	r3, [r0, #0]
 8000ca6:	0849      	lsrs	r1, r1, #1
 8000ca8:	d019      	beq.n	8000cde <_pal_lld_setgroupmode+0x9e>
 8000caa:	00ad      	lsls	r5, r5, #2
 8000cac:	00b6      	lsls	r6, r6, #2
 8000cae:	3401      	adds	r4, #1
 8000cb0:	f004 0807 	and.w	r8, r4, #7
 8000cb4:	ea4f 0888 	mov.w	r8, r8, lsl #2
 8000cb8:	fa07 f308 	lsl.w	r3, r7, r8
 8000cbc:	f011 0f01 	tst.w	r1, #1
 8000cc0:	fa02 f808 	lsl.w	r8, r2, r8
 8000cc4:	ea6f 0303 	mvn.w	r3, r3
 8000cc8:	d0ed      	beq.n	8000ca6 <_pal_lld_setgroupmode+0x66>
 8000cca:	2c07      	cmp	r4, #7
 8000ccc:	d9c6      	bls.n	8000c5c <_pal_lld_setgroupmode+0x1c>
 8000cce:	f8d0 9024 	ldr.w	r9, [r0, #36]	; 0x24
 8000cd2:	ea03 0309 	and.w	r3, r3, r9
 8000cd6:	ea43 0308 	orr.w	r3, r3, r8
 8000cda:	6243      	str	r3, [r0, #36]	; 0x24
 8000cdc:	e7c5      	b.n	8000c6a <_pal_lld_setgroupmode+0x2a>
 8000cde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000ce2:	bf00      	nop
	...

08000cf0 <_usb_ep0out>:
 8000cf0:	f890 2034 	ldrb.w	r2, [r0, #52]	; 0x34
 8000cf4:	2a06      	cmp	r2, #6
 8000cf6:	d814      	bhi.n	8000d22 <_usb_ep0out+0x32>
 8000cf8:	b538      	push	{r3, r4, r5, lr}
 8000cfa:	2301      	movs	r3, #1
 8000cfc:	4093      	lsls	r3, r2
 8000cfe:	f013 0f67 	tst.w	r3, #103	; 0x67
 8000d02:	4604      	mov	r4, r0
 8000d04:	d127      	bne.n	8000d56 <_usb_ep0out+0x66>
 8000d06:	f013 0208 	ands.w	r2, r3, #8
 8000d0a:	d00b      	beq.n	8000d24 <_usb_ep0out+0x34>
 8000d0c:	68c3      	ldr	r3, [r0, #12]
 8000d0e:	699b      	ldr	r3, [r3, #24]
 8000d10:	689b      	ldr	r3, [r3, #8]
 8000d12:	b92b      	cbnz	r3, 8000d20 <_usb_ep0out+0x30>
 8000d14:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8000d16:	b103      	cbz	r3, 8000d1a <_usb_ep0out+0x2a>
 8000d18:	4798      	blx	r3
 8000d1a:	2300      	movs	r3, #0
 8000d1c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8000d20:	bd38      	pop	{r3, r4, r5, pc}
 8000d22:	4770      	bx	lr
 8000d24:	06db      	lsls	r3, r3, #27
 8000d26:	d5fb      	bpl.n	8000d20 <_usb_ep0out+0x30>
 8000d28:	68c3      	ldr	r3, [r0, #12]
 8000d2a:	2105      	movs	r1, #5
 8000d2c:	f880 1034 	strb.w	r1, [r0, #52]	; 0x34
 8000d30:	695b      	ldr	r3, [r3, #20]
 8000d32:	4611      	mov	r1, r2
 8000d34:	701a      	strb	r2, [r3, #0]
 8000d36:	60da      	str	r2, [r3, #12]
 8000d38:	e9c3 2201 	strd	r2, r2, [r3, #4]
 8000d3c:	f7ff fee8 	bl	8000b10 <usb_lld_prepare_transmit>
 8000d40:	2320      	movs	r3, #32
 8000d42:	f383 8811 	msr	BASEPRI, r3
 8000d46:	8923      	ldrh	r3, [r4, #8]
 8000d48:	f013 0101 	ands.w	r1, r3, #1
 8000d4c:	d019      	beq.n	8000d82 <_usb_ep0out+0x92>
 8000d4e:	2300      	movs	r3, #0
 8000d50:	f383 8811 	msr	BASEPRI, r3
 8000d54:	bd38      	pop	{r3, r4, r5, pc}
 8000d56:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8000d58:	6841      	ldr	r1, [r0, #4]
 8000d5a:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8000d5e:	680d      	ldr	r5, [r1, #0]
 8000d60:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000d64:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8000d68:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8000d6c:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000d70:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8000d74:	b10d      	cbz	r5, 8000d7a <_usb_ep0out+0x8a>
 8000d76:	2105      	movs	r1, #5
 8000d78:	47a8      	blx	r5
 8000d7a:	2306      	movs	r3, #6
 8000d7c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8000d80:	bd38      	pop	{r3, r4, r5, pc}
 8000d82:	f043 0301 	orr.w	r3, r3, #1
 8000d86:	8123      	strh	r3, [r4, #8]
 8000d88:	4620      	mov	r0, r4
 8000d8a:	f7ff fea9 	bl	8000ae0 <usb_lld_start_in>
 8000d8e:	e7de      	b.n	8000d4e <_usb_ep0out+0x5e>

08000d90 <_usb_ep0in>:
 8000d90:	b538      	push	{r3, r4, r5, lr}
 8000d92:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 8000d96:	4604      	mov	r4, r0
 8000d98:	2b06      	cmp	r3, #6
 8000d9a:	d831      	bhi.n	8000e00 <_usb_ep0in+0x70>
 8000d9c:	e8df f003 	tbb	[pc, r3]
 8000da0:	59380459 	.word	0x59380459
 8000da4:	3159      	.short	0x3159
 8000da6:	59          	.byte	0x59
 8000da7:	00          	.byte	0x00
 8000da8:	f890 004b 	ldrb.w	r0, [r0, #75]	; 0x4b
 8000dac:	f894 204a 	ldrb.w	r2, [r4, #74]	; 0x4a
 8000db0:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8000db2:	68e3      	ldr	r3, [r4, #12]
 8000db4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000db8:	4291      	cmp	r1, r2
 8000dba:	d22a      	bcs.n	8000e12 <_usb_ep0in+0x82>
 8000dbc:	8a18      	ldrh	r0, [r3, #16]
 8000dbe:	fbb1 f2f0 	udiv	r2, r1, r0
 8000dc2:	fb00 1212 	mls	r2, r0, r2, r1
 8000dc6:	bb22      	cbnz	r2, 8000e12 <_usb_ep0in+0x82>
 8000dc8:	695b      	ldr	r3, [r3, #20]
 8000dca:	4611      	mov	r1, r2
 8000dcc:	701a      	strb	r2, [r3, #0]
 8000dce:	60da      	str	r2, [r3, #12]
 8000dd0:	e9c3 2201 	strd	r2, r2, [r3, #4]
 8000dd4:	4620      	mov	r0, r4
 8000dd6:	f7ff fe9b 	bl	8000b10 <usb_lld_prepare_transmit>
 8000dda:	2320      	movs	r3, #32
 8000ddc:	f383 8811 	msr	BASEPRI, r3
 8000de0:	8923      	ldrh	r3, [r4, #8]
 8000de2:	f013 0101 	ands.w	r1, r3, #1
 8000de6:	d105      	bne.n	8000df4 <_usb_ep0in+0x64>
 8000de8:	f043 0301 	orr.w	r3, r3, #1
 8000dec:	8123      	strh	r3, [r4, #8]
 8000dee:	4620      	mov	r0, r4
 8000df0:	f7ff fe76 	bl	8000ae0 <usb_lld_start_in>
 8000df4:	2300      	movs	r3, #0
 8000df6:	f383 8811 	msr	BASEPRI, r3
 8000dfa:	2302      	movs	r3, #2
 8000dfc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8000e00:	bd38      	pop	{r3, r4, r5, pc}
 8000e02:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8000e04:	b103      	cbz	r3, 8000e08 <_usb_ep0in+0x78>
 8000e06:	4798      	blx	r3
 8000e08:	2300      	movs	r3, #0
 8000e0a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8000e0e:	bd38      	pop	{r3, r4, r5, pc}
 8000e10:	68c3      	ldr	r3, [r0, #12]
 8000e12:	2203      	movs	r2, #3
 8000e14:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
 8000e18:	699b      	ldr	r3, [r3, #24]
 8000e1a:	2100      	movs	r1, #0
 8000e1c:	7019      	strb	r1, [r3, #0]
 8000e1e:	60d9      	str	r1, [r3, #12]
 8000e20:	e9c3 1101 	strd	r1, r1, [r3, #4]
 8000e24:	4620      	mov	r0, r4
 8000e26:	f7ff fe9b 	bl	8000b60 <usb_lld_prepare_receive>
 8000e2a:	2320      	movs	r3, #32
 8000e2c:	f383 8811 	msr	BASEPRI, r3
 8000e30:	8963      	ldrh	r3, [r4, #10]
 8000e32:	07da      	lsls	r2, r3, #31
 8000e34:	d409      	bmi.n	8000e4a <_usb_ep0in+0xba>
 8000e36:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8000e38:	f8d1 2b00 	ldr.w	r2, [r1, #2816]	; 0xb00
 8000e3c:	f043 0301 	orr.w	r3, r3, #1
 8000e40:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8000e44:	8163      	strh	r3, [r4, #10]
 8000e46:	f8c1 2b00 	str.w	r2, [r1, #2816]	; 0xb00
 8000e4a:	2300      	movs	r3, #0
 8000e4c:	f383 8811 	msr	BASEPRI, r3
 8000e50:	bd38      	pop	{r3, r4, r5, pc}
 8000e52:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8000e54:	6841      	ldr	r1, [r0, #4]
 8000e56:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8000e5a:	680d      	ldr	r5, [r1, #0]
 8000e5c:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000e60:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8000e64:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8000e68:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000e6c:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8000e70:	b10d      	cbz	r5, 8000e76 <_usb_ep0in+0xe6>
 8000e72:	2105      	movs	r1, #5
 8000e74:	47a8      	blx	r5
 8000e76:	2306      	movs	r3, #6
 8000e78:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8000e7c:	bd38      	pop	{r3, r4, r5, pc}
 8000e7e:	bf00      	nop

08000e80 <usbStartTransmitI>:
 8000e80:	2201      	movs	r2, #1
 8000e82:	b570      	push	{r4, r5, r6, lr}
 8000e84:	fa02 f301 	lsl.w	r3, r2, r1
 8000e88:	8904      	ldrh	r4, [r0, #8]
 8000e8a:	b29b      	uxth	r3, r3
 8000e8c:	ea14 0603 	ands.w	r6, r4, r3
 8000e90:	d001      	beq.n	8000e96 <usbStartTransmitI+0x16>
 8000e92:	4610      	mov	r0, r2
 8000e94:	bd70      	pop	{r4, r5, r6, pc}
 8000e96:	4323      	orrs	r3, r4
 8000e98:	8103      	strh	r3, [r0, #8]
 8000e9a:	f7ff fe21 	bl	8000ae0 <usb_lld_start_in>
 8000e9e:	4630      	mov	r0, r6
 8000ea0:	bd70      	pop	{r4, r5, r6, pc}
 8000ea2:	bf00      	nop
	...

08000eb0 <usbStartReceiveI>:
 8000eb0:	2201      	movs	r2, #1
 8000eb2:	b470      	push	{r4, r5, r6}
 8000eb4:	fa02 f301 	lsl.w	r3, r2, r1
 8000eb8:	8944      	ldrh	r4, [r0, #10]
 8000eba:	b29b      	uxth	r3, r3
 8000ebc:	ea14 0603 	ands.w	r6, r4, r3
 8000ec0:	d002      	beq.n	8000ec8 <usbStartReceiveI+0x18>
 8000ec2:	4610      	mov	r0, r2
 8000ec4:	bc70      	pop	{r4, r5, r6}
 8000ec6:	4770      	bx	lr
 8000ec8:	6d05      	ldr	r5, [r0, #80]	; 0x50
 8000eca:	eb05 1141 	add.w	r1, r5, r1, lsl #5
 8000ece:	4323      	orrs	r3, r4
 8000ed0:	f8d1 4b00 	ldr.w	r4, [r1, #2816]	; 0xb00
 8000ed4:	8143      	strh	r3, [r0, #10]
 8000ed6:	f044 6480 	orr.w	r4, r4, #67108864	; 0x4000000
 8000eda:	4630      	mov	r0, r6
 8000edc:	f8c1 4b00 	str.w	r4, [r1, #2816]	; 0xb00
 8000ee0:	bc70      	pop	{r4, r5, r6}
 8000ee2:	4770      	bx	lr
	...

08000ef0 <inotify>:
 8000ef0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ef2:	6a04      	ldr	r4, [r0, #32]
 8000ef4:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 8000ef8:	6813      	ldr	r3, [r2, #0]
 8000efa:	7819      	ldrb	r1, [r3, #0]
 8000efc:	2904      	cmp	r1, #4
 8000efe:	d000      	beq.n	8000f02 <inotify+0x12>
 8000f00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f02:	7a21      	ldrb	r1, [r4, #8]
 8000f04:	2902      	cmp	r1, #2
 8000f06:	d1fb      	bne.n	8000f00 <inotify+0x10>
 8000f08:	7950      	ldrb	r0, [r2, #5]
 8000f0a:	895a      	ldrh	r2, [r3, #10]
 8000f0c:	2501      	movs	r5, #1
 8000f0e:	fa05 f100 	lsl.w	r1, r5, r0
 8000f12:	400a      	ands	r2, r1
 8000f14:	d1f4      	bne.n	8000f00 <inotify+0x10>
 8000f16:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8000f1a:	69e1      	ldr	r1, [r4, #28]
 8000f1c:	68de      	ldr	r6, [r3, #12]
 8000f1e:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
 8000f22:	8a76      	ldrh	r6, [r6, #18]
 8000f24:	1acb      	subs	r3, r1, r3
 8000f26:	1a1b      	subs	r3, r3, r0
 8000f28:	429e      	cmp	r6, r3
 8000f2a:	d8e9      	bhi.n	8000f00 <inotify+0x10>
 8000f2c:	f382 8811 	msr	BASEPRI, r2
 8000f30:	fbb3 f3f6 	udiv	r3, r3, r6
 8000f34:	f8d4 1254 	ldr.w	r1, [r4, #596]	; 0x254
 8000f38:	6808      	ldr	r0, [r1, #0]
 8000f3a:	7949      	ldrb	r1, [r1, #5]
 8000f3c:	eb00 0781 	add.w	r7, r0, r1, lsl #2
 8000f40:	fb06 f303 	mul.w	r3, r6, r3
 8000f44:	68fe      	ldr	r6, [r7, #12]
 8000f46:	69b6      	ldr	r6, [r6, #24]
 8000f48:	f104 070c 	add.w	r7, r4, #12
 8000f4c:	6073      	str	r3, [r6, #4]
 8000f4e:	7035      	strb	r5, [r6, #0]
 8000f50:	e9c6 2702 	strd	r2, r7, [r6, #8]
 8000f54:	f7ff fe04 	bl	8000b60 <usb_lld_prepare_receive>
 8000f58:	2320      	movs	r3, #32
 8000f5a:	f383 8811 	msr	BASEPRI, r3
 8000f5e:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8000f62:	7959      	ldrb	r1, [r3, #5]
 8000f64:	6818      	ldr	r0, [r3, #0]
 8000f66:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8000f6a:	f7ff bfa1 	b.w	8000eb0 <usbStartReceiveI>
 8000f6e:	bf00      	nop

08000f70 <sduInterruptTransmitted>:
 8000f70:	4770      	bx	lr
 8000f72:	bf00      	nop
	...

08000f80 <onotify>:
 8000f80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f82:	6a04      	ldr	r4, [r0, #32]
 8000f84:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 8000f88:	6813      	ldr	r3, [r2, #0]
 8000f8a:	7819      	ldrb	r1, [r3, #0]
 8000f8c:	2904      	cmp	r1, #4
 8000f8e:	d000      	beq.n	8000f92 <onotify+0x12>
 8000f90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f92:	7a21      	ldrb	r1, [r4, #8]
 8000f94:	2902      	cmp	r1, #2
 8000f96:	d1fb      	bne.n	8000f90 <onotify+0x10>
 8000f98:	7912      	ldrb	r2, [r2, #4]
 8000f9a:	8919      	ldrh	r1, [r3, #8]
 8000f9c:	2501      	movs	r5, #1
 8000f9e:	fa05 f302 	lsl.w	r3, r5, r2
 8000fa2:	400b      	ands	r3, r1
 8000fa4:	d1f4      	bne.n	8000f90 <onotify+0x10>
 8000fa6:	e9d4 020f 	ldrd	r0, r2, [r4, #60]	; 0x3c
 8000faa:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8000fac:	1a12      	subs	r2, r2, r0
 8000fae:	1a52      	subs	r2, r2, r1
 8000fb0:	d0ee      	beq.n	8000f90 <onotify+0x10>
 8000fb2:	f383 8811 	msr	BASEPRI, r3
 8000fb6:	f8d4 1254 	ldr.w	r1, [r4, #596]	; 0x254
 8000fba:	6808      	ldr	r0, [r1, #0]
 8000fbc:	7909      	ldrb	r1, [r1, #4]
 8000fbe:	eb00 0681 	add.w	r6, r0, r1, lsl #2
 8000fc2:	f104 0730 	add.w	r7, r4, #48	; 0x30
 8000fc6:	68f6      	ldr	r6, [r6, #12]
 8000fc8:	6976      	ldr	r6, [r6, #20]
 8000fca:	e9c6 2301 	strd	r2, r3, [r6, #4]
 8000fce:	7035      	strb	r5, [r6, #0]
 8000fd0:	60f7      	str	r7, [r6, #12]
 8000fd2:	f7ff fd9d 	bl	8000b10 <usb_lld_prepare_transmit>
 8000fd6:	2320      	movs	r3, #32
 8000fd8:	f383 8811 	msr	BASEPRI, r3
 8000fdc:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8000fe0:	7919      	ldrb	r1, [r3, #4]
 8000fe2:	6818      	ldr	r0, [r3, #0]
 8000fe4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8000fe8:	f7ff bf4a 	b.w	8000e80 <usbStartTransmitI>
 8000fec:	0000      	movs	r0, r0
	...

08000ff0 <sduRequestsHook>:
 8000ff0:	f890 3044 	ldrb.w	r3, [r0, #68]	; 0x44
 8000ff4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8000ff8:	2b20      	cmp	r3, #32
 8000ffa:	d001      	beq.n	8001000 <sduRequestsHook+0x10>
 8000ffc:	2000      	movs	r0, #0
 8000ffe:	4770      	bx	lr
 8001000:	f890 3045 	ldrb.w	r3, [r0, #69]	; 0x45
 8001004:	2b20      	cmp	r3, #32
 8001006:	d3f9      	bcc.n	8000ffc <sduRequestsHook+0xc>
 8001008:	2b21      	cmp	r3, #33	; 0x21
 800100a:	d807      	bhi.n	800101c <sduRequestsHook+0x2c>
 800100c:	4b07      	ldr	r3, [pc, #28]	; (800102c <sduRequestsHook+0x3c>)
 800100e:	6383      	str	r3, [r0, #56]	; 0x38
 8001010:	2207      	movs	r2, #7
 8001012:	2300      	movs	r3, #0
 8001014:	e9c0 230f 	strd	r2, r3, [r0, #60]	; 0x3c
 8001018:	2001      	movs	r0, #1
 800101a:	4770      	bx	lr
 800101c:	2b22      	cmp	r3, #34	; 0x22
 800101e:	d1ed      	bne.n	8000ffc <sduRequestsHook+0xc>
 8001020:	2300      	movs	r3, #0
 8001022:	e9c0 330e 	strd	r3, r3, [r0, #56]	; 0x38
 8001026:	6403      	str	r3, [r0, #64]	; 0x40
 8001028:	2001      	movs	r0, #1
 800102a:	4770      	bx	lr
 800102c:	20000834 	.word	0x20000834

08001030 <_port_irq_epilogue>:
 8001030:	2320      	movs	r3, #32
 8001032:	f383 8811 	msr	BASEPRI, r3
 8001036:	4b11      	ldr	r3, [pc, #68]	; (800107c <_port_irq_epilogue+0x4c>)
 8001038:	685b      	ldr	r3, [r3, #4]
 800103a:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 800103e:	d102      	bne.n	8001046 <_port_irq_epilogue+0x16>
 8001040:	f383 8811 	msr	BASEPRI, r3
 8001044:	4770      	bx	lr
 8001046:	b480      	push	{r7}
 8001048:	af00      	add	r7, sp, #0
 800104a:	f3ef 8309 	mrs	r3, PSP
 800104e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001052:	f843 2c04 	str.w	r2, [r3, #-4]
 8001056:	f1a3 0220 	sub.w	r2, r3, #32
 800105a:	f382 8809 	msr	PSP, r2
 800105e:	4a08      	ldr	r2, [pc, #32]	; (8001080 <_port_irq_epilogue+0x50>)
 8001060:	6811      	ldr	r1, [r2, #0]
 8001062:	6992      	ldr	r2, [r2, #24]
 8001064:	6889      	ldr	r1, [r1, #8]
 8001066:	6892      	ldr	r2, [r2, #8]
 8001068:	4291      	cmp	r1, r2
 800106a:	bf8c      	ite	hi
 800106c:	4a05      	ldrhi	r2, [pc, #20]	; (8001084 <_port_irq_epilogue+0x54>)
 800106e:	4a06      	ldrls	r2, [pc, #24]	; (8001088 <_port_irq_epilogue+0x58>)
 8001070:	f843 2c08 	str.w	r2, [r3, #-8]
 8001074:	46bd      	mov	sp, r7
 8001076:	bc80      	pop	{r7}
 8001078:	4770      	bx	lr
 800107a:	bf00      	nop
 800107c:	e000ed00 	.word	0xe000ed00
 8001080:	20001370 	.word	0x20001370
 8001084:	080002a1 	.word	0x080002a1
 8001088:	080002a4 	.word	0x080002a4
 800108c:	00000000 	.word	0x00000000

08001090 <VectorB8>:
 8001090:	b538      	push	{r3, r4, r5, lr}
 8001092:	4d17      	ldr	r5, [pc, #92]	; (80010f0 <VectorB8+0x60>)
 8001094:	69ab      	ldr	r3, [r5, #24]
 8001096:	691c      	ldr	r4, [r3, #16]
 8001098:	68da      	ldr	r2, [r3, #12]
 800109a:	4014      	ands	r4, r2
 800109c:	b2e2      	uxtb	r2, r4
 800109e:	43d2      	mvns	r2, r2
 80010a0:	611a      	str	r2, [r3, #16]
 80010a2:	07a3      	lsls	r3, r4, #30
 80010a4:	d504      	bpl.n	80010b0 <VectorB8+0x20>
 80010a6:	686b      	ldr	r3, [r5, #4]
 80010a8:	691b      	ldr	r3, [r3, #16]
 80010aa:	b10b      	cbz	r3, 80010b0 <VectorB8+0x20>
 80010ac:	4628      	mov	r0, r5
 80010ae:	4798      	blx	r3
 80010b0:	0760      	lsls	r0, r4, #29
 80010b2:	d504      	bpl.n	80010be <VectorB8+0x2e>
 80010b4:	686b      	ldr	r3, [r5, #4]
 80010b6:	699b      	ldr	r3, [r3, #24]
 80010b8:	b10b      	cbz	r3, 80010be <VectorB8+0x2e>
 80010ba:	480d      	ldr	r0, [pc, #52]	; (80010f0 <VectorB8+0x60>)
 80010bc:	4798      	blx	r3
 80010be:	0721      	lsls	r1, r4, #28
 80010c0:	d504      	bpl.n	80010cc <VectorB8+0x3c>
 80010c2:	686b      	ldr	r3, [r5, #4]
 80010c4:	6a1b      	ldr	r3, [r3, #32]
 80010c6:	b10b      	cbz	r3, 80010cc <VectorB8+0x3c>
 80010c8:	4809      	ldr	r0, [pc, #36]	; (80010f0 <VectorB8+0x60>)
 80010ca:	4798      	blx	r3
 80010cc:	06e2      	lsls	r2, r4, #27
 80010ce:	d504      	bpl.n	80010da <VectorB8+0x4a>
 80010d0:	686b      	ldr	r3, [r5, #4]
 80010d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80010d4:	b10b      	cbz	r3, 80010da <VectorB8+0x4a>
 80010d6:	4806      	ldr	r0, [pc, #24]	; (80010f0 <VectorB8+0x60>)
 80010d8:	4798      	blx	r3
 80010da:	07e3      	lsls	r3, r4, #31
 80010dc:	d504      	bpl.n	80010e8 <VectorB8+0x58>
 80010de:	686b      	ldr	r3, [r5, #4]
 80010e0:	689b      	ldr	r3, [r3, #8]
 80010e2:	b10b      	cbz	r3, 80010e8 <VectorB8+0x58>
 80010e4:	4802      	ldr	r0, [pc, #8]	; (80010f0 <VectorB8+0x60>)
 80010e6:	4798      	blx	r3
 80010e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80010ec:	f7ff bfa0 	b.w	8001030 <_port_irq_epilogue>
 80010f0:	20000e70 	.word	0x20000e70
	...

08001100 <VectorB0>:
 8001100:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001104:	f04f 4680 	mov.w	r6, #1073741824	; 0x40000000
 8001108:	6933      	ldr	r3, [r6, #16]
 800110a:	079b      	lsls	r3, r3, #30
 800110c:	d403      	bmi.n	8001116 <VectorB0+0x16>
 800110e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001112:	f7ff bf8d 	b.w	8001030 <_port_irq_epilogue>
 8001116:	2500      	movs	r5, #0
 8001118:	6135      	str	r5, [r6, #16]
 800111a:	2720      	movs	r7, #32
 800111c:	f387 8811 	msr	BASEPRI, r7
 8001120:	4c1b      	ldr	r4, [pc, #108]	; (8001190 <VectorB0+0x90>)
 8001122:	6a71      	ldr	r1, [r6, #36]	; 0x24
 8001124:	69e3      	ldr	r3, [r4, #28]
 8001126:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8001128:	f8d3 c008 	ldr.w	ip, [r3, #8]
 800112c:	1a88      	subs	r0, r1, r2
 800112e:	4560      	cmp	r0, ip
 8001130:	f104 081c 	add.w	r8, r4, #28
 8001134:	d319      	bcc.n	800116a <VectorB0+0x6a>
 8001136:	6819      	ldr	r1, [r3, #0]
 8001138:	f8d3 900c 	ldr.w	r9, [r3, #12]
 800113c:	4462      	add	r2, ip
 800113e:	4541      	cmp	r1, r8
 8001140:	62a2      	str	r2, [r4, #40]	; 0x28
 8001142:	f8c1 8004 	str.w	r8, [r1, #4]
 8001146:	61e1      	str	r1, [r4, #28]
 8001148:	60dd      	str	r5, [r3, #12]
 800114a:	bf08      	it	eq
 800114c:	60f5      	streq	r5, [r6, #12]
 800114e:	f385 8811 	msr	BASEPRI, r5
 8001152:	6918      	ldr	r0, [r3, #16]
 8001154:	47c8      	blx	r9
 8001156:	f387 8811 	msr	BASEPRI, r7
 800115a:	69e3      	ldr	r3, [r4, #28]
 800115c:	6a71      	ldr	r1, [r6, #36]	; 0x24
 800115e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8001160:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8001164:	1a88      	subs	r0, r1, r2
 8001166:	4584      	cmp	ip, r0
 8001168:	d9e5      	bls.n	8001136 <VectorB0+0x36>
 800116a:	4543      	cmp	r3, r8
 800116c:	d008      	beq.n	8001180 <VectorB0+0x80>
 800116e:	4462      	add	r2, ip
 8001170:	1a52      	subs	r2, r2, r1
 8001172:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001176:	2a02      	cmp	r2, #2
 8001178:	bf2c      	ite	cs
 800117a:	188a      	addcs	r2, r1, r2
 800117c:	1c8a      	addcc	r2, r1, #2
 800117e:	635a      	str	r2, [r3, #52]	; 0x34
 8001180:	2300      	movs	r3, #0
 8001182:	f383 8811 	msr	BASEPRI, r3
 8001186:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800118a:	f7ff bf51 	b.w	8001030 <_port_irq_epilogue>
 800118e:	bf00      	nop
 8001190:	20001370 	.word	0x20001370
	...

080011a0 <Vector158>:
 80011a0:	4b08      	ldr	r3, [pc, #32]	; (80011c4 <Vector158+0x24>)
 80011a2:	4809      	ldr	r0, [pc, #36]	; (80011c8 <Vector158+0x28>)
 80011a4:	6859      	ldr	r1, [r3, #4]
 80011a6:	6f82      	ldr	r2, [r0, #120]	; 0x78
 80011a8:	0d89      	lsrs	r1, r1, #22
 80011aa:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 80011ae:	b510      	push	{r4, lr}
 80011b0:	058c      	lsls	r4, r1, #22
 80011b2:	60dc      	str	r4, [r3, #12]
 80011b4:	b10a      	cbz	r2, 80011ba <Vector158+0x1a>
 80011b6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80011b8:	4790      	blx	r2
 80011ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80011be:	f7ff bf37 	b.w	8001030 <_port_irq_epilogue>
 80011c2:	bf00      	nop
 80011c4:	40026400 	.word	0x40026400
 80011c8:	200014e8 	.word	0x200014e8
 80011cc:	00000000 	.word	0x00000000

080011d0 <Vector154>:
 80011d0:	4b08      	ldr	r3, [pc, #32]	; (80011f4 <Vector154+0x24>)
 80011d2:	4809      	ldr	r0, [pc, #36]	; (80011f8 <Vector154+0x28>)
 80011d4:	6859      	ldr	r1, [r3, #4]
 80011d6:	6f02      	ldr	r2, [r0, #112]	; 0x70
 80011d8:	0c09      	lsrs	r1, r1, #16
 80011da:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 80011de:	b510      	push	{r4, lr}
 80011e0:	040c      	lsls	r4, r1, #16
 80011e2:	60dc      	str	r4, [r3, #12]
 80011e4:	b10a      	cbz	r2, 80011ea <Vector154+0x1a>
 80011e6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80011e8:	4790      	blx	r2
 80011ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80011ee:	f7ff bf1f 	b.w	8001030 <_port_irq_epilogue>
 80011f2:	bf00      	nop
 80011f4:	40026400 	.word	0x40026400
 80011f8:	200014e8 	.word	0x200014e8
 80011fc:	00000000 	.word	0x00000000

08001200 <Vector150>:
 8001200:	4b08      	ldr	r3, [pc, #32]	; (8001224 <Vector150+0x24>)
 8001202:	4809      	ldr	r0, [pc, #36]	; (8001228 <Vector150+0x28>)
 8001204:	6859      	ldr	r1, [r3, #4]
 8001206:	6e82      	ldr	r2, [r0, #104]	; 0x68
 8001208:	0989      	lsrs	r1, r1, #6
 800120a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800120e:	b510      	push	{r4, lr}
 8001210:	018c      	lsls	r4, r1, #6
 8001212:	60dc      	str	r4, [r3, #12]
 8001214:	b10a      	cbz	r2, 800121a <Vector150+0x1a>
 8001216:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8001218:	4790      	blx	r2
 800121a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800121e:	f7ff bf07 	b.w	8001030 <_port_irq_epilogue>
 8001222:	bf00      	nop
 8001224:	40026400 	.word	0x40026400
 8001228:	200014e8 	.word	0x200014e8
 800122c:	00000000 	.word	0x00000000

08001230 <Vector130>:
 8001230:	b508      	push	{r3, lr}
 8001232:	4b07      	ldr	r3, [pc, #28]	; (8001250 <Vector130+0x20>)
 8001234:	4807      	ldr	r0, [pc, #28]	; (8001254 <Vector130+0x24>)
 8001236:	6859      	ldr	r1, [r3, #4]
 8001238:	6e02      	ldr	r2, [r0, #96]	; 0x60
 800123a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800123e:	60d9      	str	r1, [r3, #12]
 8001240:	b10a      	cbz	r2, 8001246 <Vector130+0x16>
 8001242:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8001244:	4790      	blx	r2
 8001246:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800124a:	f7ff bef1 	b.w	8001030 <_port_irq_epilogue>
 800124e:	bf00      	nop
 8001250:	40026400 	.word	0x40026400
 8001254:	200014e8 	.word	0x200014e8
	...

08001260 <Vector12C>:
 8001260:	4b08      	ldr	r3, [pc, #32]	; (8001284 <Vector12C+0x24>)
 8001262:	4809      	ldr	r0, [pc, #36]	; (8001288 <Vector12C+0x28>)
 8001264:	6819      	ldr	r1, [r3, #0]
 8001266:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8001268:	0d89      	lsrs	r1, r1, #22
 800126a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800126e:	b510      	push	{r4, lr}
 8001270:	058c      	lsls	r4, r1, #22
 8001272:	609c      	str	r4, [r3, #8]
 8001274:	b10a      	cbz	r2, 800127a <Vector12C+0x1a>
 8001276:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8001278:	4790      	blx	r2
 800127a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800127e:	f7ff bed7 	b.w	8001030 <_port_irq_epilogue>
 8001282:	bf00      	nop
 8001284:	40026400 	.word	0x40026400
 8001288:	200014e8 	.word	0x200014e8
 800128c:	00000000 	.word	0x00000000

08001290 <Vector128>:
 8001290:	4b08      	ldr	r3, [pc, #32]	; (80012b4 <Vector128+0x24>)
 8001292:	4809      	ldr	r0, [pc, #36]	; (80012b8 <Vector128+0x28>)
 8001294:	6819      	ldr	r1, [r3, #0]
 8001296:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8001298:	0c09      	lsrs	r1, r1, #16
 800129a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800129e:	b510      	push	{r4, lr}
 80012a0:	040c      	lsls	r4, r1, #16
 80012a2:	609c      	str	r4, [r3, #8]
 80012a4:	b10a      	cbz	r2, 80012aa <Vector128+0x1a>
 80012a6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80012a8:	4790      	blx	r2
 80012aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80012ae:	f7ff bebf 	b.w	8001030 <_port_irq_epilogue>
 80012b2:	bf00      	nop
 80012b4:	40026400 	.word	0x40026400
 80012b8:	200014e8 	.word	0x200014e8
 80012bc:	00000000 	.word	0x00000000

080012c0 <Vector124>:
 80012c0:	4b08      	ldr	r3, [pc, #32]	; (80012e4 <Vector124+0x24>)
 80012c2:	4809      	ldr	r0, [pc, #36]	; (80012e8 <Vector124+0x28>)
 80012c4:	6819      	ldr	r1, [r3, #0]
 80012c6:	6c82      	ldr	r2, [r0, #72]	; 0x48
 80012c8:	0989      	lsrs	r1, r1, #6
 80012ca:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 80012ce:	b510      	push	{r4, lr}
 80012d0:	018c      	lsls	r4, r1, #6
 80012d2:	609c      	str	r4, [r3, #8]
 80012d4:	b10a      	cbz	r2, 80012da <Vector124+0x1a>
 80012d6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80012d8:	4790      	blx	r2
 80012da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80012de:	f7ff bea7 	b.w	8001030 <_port_irq_epilogue>
 80012e2:	bf00      	nop
 80012e4:	40026400 	.word	0x40026400
 80012e8:	200014e8 	.word	0x200014e8
 80012ec:	00000000 	.word	0x00000000

080012f0 <Vector120>:
 80012f0:	b508      	push	{r3, lr}
 80012f2:	4b07      	ldr	r3, [pc, #28]	; (8001310 <Vector120+0x20>)
 80012f4:	4807      	ldr	r0, [pc, #28]	; (8001314 <Vector120+0x24>)
 80012f6:	6819      	ldr	r1, [r3, #0]
 80012f8:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80012fa:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 80012fe:	6099      	str	r1, [r3, #8]
 8001300:	b10a      	cbz	r2, 8001306 <Vector120+0x16>
 8001302:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8001304:	4790      	blx	r2
 8001306:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800130a:	f7ff be91 	b.w	8001030 <_port_irq_epilogue>
 800130e:	bf00      	nop
 8001310:	40026400 	.word	0x40026400
 8001314:	200014e8 	.word	0x200014e8
	...

08001320 <VectorFC>:
 8001320:	4b08      	ldr	r3, [pc, #32]	; (8001344 <VectorFC+0x24>)
 8001322:	4809      	ldr	r0, [pc, #36]	; (8001348 <VectorFC+0x28>)
 8001324:	6859      	ldr	r1, [r3, #4]
 8001326:	6b82      	ldr	r2, [r0, #56]	; 0x38
 8001328:	0d89      	lsrs	r1, r1, #22
 800132a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800132e:	b510      	push	{r4, lr}
 8001330:	058c      	lsls	r4, r1, #22
 8001332:	60dc      	str	r4, [r3, #12]
 8001334:	b10a      	cbz	r2, 800133a <VectorFC+0x1a>
 8001336:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8001338:	4790      	blx	r2
 800133a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800133e:	f7ff be77 	b.w	8001030 <_port_irq_epilogue>
 8001342:	bf00      	nop
 8001344:	40026000 	.word	0x40026000
 8001348:	200014e8 	.word	0x200014e8
 800134c:	00000000 	.word	0x00000000

08001350 <Vector84>:
 8001350:	4b08      	ldr	r3, [pc, #32]	; (8001374 <Vector84+0x24>)
 8001352:	4809      	ldr	r0, [pc, #36]	; (8001378 <Vector84+0x28>)
 8001354:	6859      	ldr	r1, [r3, #4]
 8001356:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8001358:	0c09      	lsrs	r1, r1, #16
 800135a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800135e:	b510      	push	{r4, lr}
 8001360:	040c      	lsls	r4, r1, #16
 8001362:	60dc      	str	r4, [r3, #12]
 8001364:	b10a      	cbz	r2, 800136a <Vector84+0x1a>
 8001366:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8001368:	4790      	blx	r2
 800136a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800136e:	f7ff be5f 	b.w	8001030 <_port_irq_epilogue>
 8001372:	bf00      	nop
 8001374:	40026000 	.word	0x40026000
 8001378:	200014e8 	.word	0x200014e8
 800137c:	00000000 	.word	0x00000000

08001380 <Vector80>:
 8001380:	4b08      	ldr	r3, [pc, #32]	; (80013a4 <Vector80+0x24>)
 8001382:	4809      	ldr	r0, [pc, #36]	; (80013a8 <Vector80+0x28>)
 8001384:	6859      	ldr	r1, [r3, #4]
 8001386:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8001388:	0989      	lsrs	r1, r1, #6
 800138a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800138e:	b510      	push	{r4, lr}
 8001390:	018c      	lsls	r4, r1, #6
 8001392:	60dc      	str	r4, [r3, #12]
 8001394:	b10a      	cbz	r2, 800139a <Vector80+0x1a>
 8001396:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8001398:	4790      	blx	r2
 800139a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800139e:	f7ff be47 	b.w	8001030 <_port_irq_epilogue>
 80013a2:	bf00      	nop
 80013a4:	40026000 	.word	0x40026000
 80013a8:	200014e8 	.word	0x200014e8
 80013ac:	00000000 	.word	0x00000000

080013b0 <Vector7C>:
 80013b0:	b508      	push	{r3, lr}
 80013b2:	4b07      	ldr	r3, [pc, #28]	; (80013d0 <Vector7C+0x20>)
 80013b4:	4807      	ldr	r0, [pc, #28]	; (80013d4 <Vector7C+0x24>)
 80013b6:	6859      	ldr	r1, [r3, #4]
 80013b8:	6a02      	ldr	r2, [r0, #32]
 80013ba:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 80013be:	60d9      	str	r1, [r3, #12]
 80013c0:	b10a      	cbz	r2, 80013c6 <Vector7C+0x16>
 80013c2:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80013c4:	4790      	blx	r2
 80013c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80013ca:	f7ff be31 	b.w	8001030 <_port_irq_epilogue>
 80013ce:	bf00      	nop
 80013d0:	40026000 	.word	0x40026000
 80013d4:	200014e8 	.word	0x200014e8
	...

080013e0 <Vector78>:
 80013e0:	4b08      	ldr	r3, [pc, #32]	; (8001404 <Vector78+0x24>)
 80013e2:	4809      	ldr	r0, [pc, #36]	; (8001408 <Vector78+0x28>)
 80013e4:	6819      	ldr	r1, [r3, #0]
 80013e6:	6982      	ldr	r2, [r0, #24]
 80013e8:	0d89      	lsrs	r1, r1, #22
 80013ea:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 80013ee:	b510      	push	{r4, lr}
 80013f0:	058c      	lsls	r4, r1, #22
 80013f2:	609c      	str	r4, [r3, #8]
 80013f4:	b10a      	cbz	r2, 80013fa <Vector78+0x1a>
 80013f6:	69c0      	ldr	r0, [r0, #28]
 80013f8:	4790      	blx	r2
 80013fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80013fe:	f7ff be17 	b.w	8001030 <_port_irq_epilogue>
 8001402:	bf00      	nop
 8001404:	40026000 	.word	0x40026000
 8001408:	200014e8 	.word	0x200014e8
 800140c:	00000000 	.word	0x00000000

08001410 <Vector74>:
 8001410:	4b08      	ldr	r3, [pc, #32]	; (8001434 <Vector74+0x24>)
 8001412:	4809      	ldr	r0, [pc, #36]	; (8001438 <Vector74+0x28>)
 8001414:	6819      	ldr	r1, [r3, #0]
 8001416:	6902      	ldr	r2, [r0, #16]
 8001418:	0c09      	lsrs	r1, r1, #16
 800141a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800141e:	b510      	push	{r4, lr}
 8001420:	040c      	lsls	r4, r1, #16
 8001422:	609c      	str	r4, [r3, #8]
 8001424:	b10a      	cbz	r2, 800142a <Vector74+0x1a>
 8001426:	6940      	ldr	r0, [r0, #20]
 8001428:	4790      	blx	r2
 800142a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800142e:	f7ff bdff 	b.w	8001030 <_port_irq_epilogue>
 8001432:	bf00      	nop
 8001434:	40026000 	.word	0x40026000
 8001438:	200014e8 	.word	0x200014e8
 800143c:	00000000 	.word	0x00000000

08001440 <Vector70>:
 8001440:	4b08      	ldr	r3, [pc, #32]	; (8001464 <Vector70+0x24>)
 8001442:	4809      	ldr	r0, [pc, #36]	; (8001468 <Vector70+0x28>)
 8001444:	6819      	ldr	r1, [r3, #0]
 8001446:	6882      	ldr	r2, [r0, #8]
 8001448:	0989      	lsrs	r1, r1, #6
 800144a:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800144e:	b510      	push	{r4, lr}
 8001450:	018c      	lsls	r4, r1, #6
 8001452:	609c      	str	r4, [r3, #8]
 8001454:	b10a      	cbz	r2, 800145a <Vector70+0x1a>
 8001456:	68c0      	ldr	r0, [r0, #12]
 8001458:	4790      	blx	r2
 800145a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800145e:	f7ff bde7 	b.w	8001030 <_port_irq_epilogue>
 8001462:	bf00      	nop
 8001464:	40026000 	.word	0x40026000
 8001468:	200014e8 	.word	0x200014e8
 800146c:	00000000 	.word	0x00000000

08001470 <Vector6C>:
 8001470:	b508      	push	{r3, lr}
 8001472:	4b07      	ldr	r3, [pc, #28]	; (8001490 <Vector6C+0x20>)
 8001474:	4a07      	ldr	r2, [pc, #28]	; (8001494 <Vector6C+0x24>)
 8001476:	6819      	ldr	r1, [r3, #0]
 8001478:	f001 013d 	and.w	r1, r1, #61	; 0x3d
 800147c:	6099      	str	r1, [r3, #8]
 800147e:	6813      	ldr	r3, [r2, #0]
 8001480:	b10b      	cbz	r3, 8001486 <Vector6C+0x16>
 8001482:	6850      	ldr	r0, [r2, #4]
 8001484:	4798      	blx	r3
 8001486:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800148a:	f7ff bdd1 	b.w	8001030 <_port_irq_epilogue>
 800148e:	bf00      	nop
 8001490:	40026000 	.word	0x40026000
 8001494:	200014e8 	.word	0x200014e8
	...

080014a0 <SVC_Handler>:
 80014a0:	b480      	push	{r7}
 80014a2:	af00      	add	r7, sp, #0
 80014a4:	f3ef 8309 	mrs	r3, PSP
 80014a8:	3320      	adds	r3, #32
 80014aa:	f383 8809 	msr	PSP, r3
 80014ae:	2300      	movs	r3, #0
 80014b0:	f383 8811 	msr	BASEPRI, r3
 80014b4:	46bd      	mov	sp, r7
 80014b6:	bc80      	pop	{r7}
 80014b8:	4770      	bx	lr
 80014ba:	bf00      	nop
 80014bc:	0000      	movs	r0, r0
	...

080014c0 <chPoolAlloc>:
 80014c0:	b508      	push	{r3, lr}
 80014c2:	2220      	movs	r2, #32
 80014c4:	4603      	mov	r3, r0
 80014c6:	f382 8811 	msr	BASEPRI, r2
 80014ca:	6800      	ldr	r0, [r0, #0]
 80014cc:	b128      	cbz	r0, 80014da <chPoolAlloc+0x1a>
 80014ce:	6802      	ldr	r2, [r0, #0]
 80014d0:	601a      	str	r2, [r3, #0]
 80014d2:	2300      	movs	r3, #0
 80014d4:	f383 8811 	msr	BASEPRI, r3
 80014d8:	bd08      	pop	{r3, pc}
 80014da:	689a      	ldr	r2, [r3, #8]
 80014dc:	2a00      	cmp	r2, #0
 80014de:	d0f8      	beq.n	80014d2 <chPoolAlloc+0x12>
 80014e0:	6858      	ldr	r0, [r3, #4]
 80014e2:	4790      	blx	r2
 80014e4:	2300      	movs	r3, #0
 80014e6:	f383 8811 	msr	BASEPRI, r3
 80014ea:	bd08      	pop	{r3, pc}
 80014ec:	0000      	movs	r0, r0
	...

080014f0 <pools1_execute>:
 80014f0:	b570      	push	{r4, r5, r6, lr}
 80014f2:	4b31      	ldr	r3, [pc, #196]	; (80015b8 <pools1_execute+0xc8>)
 80014f4:	4c31      	ldr	r4, [pc, #196]	; (80015bc <pools1_execute+0xcc>)
 80014f6:	2205      	movs	r2, #5
 80014f8:	2520      	movs	r5, #32
 80014fa:	2000      	movs	r0, #0
 80014fc:	f385 8811 	msr	BASEPRI, r5
 8001500:	6821      	ldr	r1, [r4, #0]
 8001502:	6019      	str	r1, [r3, #0]
 8001504:	6023      	str	r3, [r4, #0]
 8001506:	f380 8811 	msr	BASEPRI, r0
 800150a:	6861      	ldr	r1, [r4, #4]
 800150c:	3a01      	subs	r2, #1
 800150e:	440b      	add	r3, r1
 8001510:	d1f4      	bne.n	80014fc <pools1_execute+0xc>
 8001512:	4e2a      	ldr	r6, [pc, #168]	; (80015bc <pools1_execute+0xcc>)
 8001514:	2505      	movs	r5, #5
 8001516:	4630      	mov	r0, r6
 8001518:	f7ff ffd2 	bl	80014c0 <chPoolAlloc>
 800151c:	1c01      	adds	r1, r0, #0
 800151e:	bf18      	it	ne
 8001520:	2101      	movne	r1, #1
 8001522:	2001      	movs	r0, #1
 8001524:	f7ff f9e4 	bl	80008f0 <_test_assert>
 8001528:	bba0      	cbnz	r0, 8001594 <pools1_execute+0xa4>
 800152a:	3d01      	subs	r5, #1
 800152c:	d1f3      	bne.n	8001516 <pools1_execute+0x26>
 800152e:	4823      	ldr	r0, [pc, #140]	; (80015bc <pools1_execute+0xcc>)
 8001530:	f7ff ffc6 	bl	80014c0 <chPoolAlloc>
 8001534:	fab0 f180 	clz	r1, r0
 8001538:	0949      	lsrs	r1, r1, #5
 800153a:	2002      	movs	r0, #2
 800153c:	f7ff f9d8 	bl	80008f0 <_test_assert>
 8001540:	bb40      	cbnz	r0, 8001594 <pools1_execute+0xa4>
 8001542:	4a1f      	ldr	r2, [pc, #124]	; (80015c0 <pools1_execute+0xd0>)
 8001544:	4b1c      	ldr	r3, [pc, #112]	; (80015b8 <pools1_execute+0xc8>)
 8001546:	f102 0610 	add.w	r6, r2, #16
 800154a:	2020      	movs	r0, #32
 800154c:	f380 8811 	msr	BASEPRI, r0
 8001550:	6821      	ldr	r1, [r4, #0]
 8001552:	6019      	str	r1, [r3, #0]
 8001554:	6023      	str	r3, [r4, #0]
 8001556:	f385 8811 	msr	BASEPRI, r5
 800155a:	4296      	cmp	r6, r2
 800155c:	d002      	beq.n	8001564 <pools1_execute+0x74>
 800155e:	f852 3b04 	ldr.w	r3, [r2], #4
 8001562:	e7f3      	b.n	800154c <pools1_execute+0x5c>
 8001564:	4e15      	ldr	r6, [pc, #84]	; (80015bc <pools1_execute+0xcc>)
 8001566:	2505      	movs	r5, #5
 8001568:	4630      	mov	r0, r6
 800156a:	f7ff ffa9 	bl	80014c0 <chPoolAlloc>
 800156e:	1c01      	adds	r1, r0, #0
 8001570:	bf18      	it	ne
 8001572:	2101      	movne	r1, #1
 8001574:	2003      	movs	r0, #3
 8001576:	f7ff f9bb 	bl	80008f0 <_test_assert>
 800157a:	b958      	cbnz	r0, 8001594 <pools1_execute+0xa4>
 800157c:	3d01      	subs	r5, #1
 800157e:	d1f3      	bne.n	8001568 <pools1_execute+0x78>
 8001580:	480e      	ldr	r0, [pc, #56]	; (80015bc <pools1_execute+0xcc>)
 8001582:	f7ff ff9d 	bl	80014c0 <chPoolAlloc>
 8001586:	fab0 f180 	clz	r1, r0
 800158a:	0949      	lsrs	r1, r1, #5
 800158c:	2004      	movs	r0, #4
 800158e:	f7ff f9af 	bl	80008f0 <_test_assert>
 8001592:	b100      	cbz	r0, 8001596 <pools1_execute+0xa6>
 8001594:	bd70      	pop	{r4, r5, r6, pc}
 8001596:	2210      	movs	r2, #16
 8001598:	4b0a      	ldr	r3, [pc, #40]	; (80015c4 <pools1_execute+0xd4>)
 800159a:	4808      	ldr	r0, [pc, #32]	; (80015bc <pools1_execute+0xcc>)
 800159c:	60a3      	str	r3, [r4, #8]
 800159e:	e9c4 5200 	strd	r5, r2, [r4]
 80015a2:	f7ff ff8d 	bl	80014c0 <chPoolAlloc>
 80015a6:	fab0 f180 	clz	r1, r0
 80015aa:	0949      	lsrs	r1, r1, #5
 80015ac:	2005      	movs	r0, #5
 80015ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80015b2:	f7ff b99d 	b.w	80008f0 <_test_assert>
 80015b6:	bf00      	nop
 80015b8:	20001660 	.word	0x20001660
 80015bc:	2000089c 	.word	0x2000089c
 80015c0:	08009b24 	.word	0x08009b24
 80015c4:	080005e1 	.word	0x080005e1
	...

080015d0 <chEvtUnregister>:
 80015d0:	2320      	movs	r3, #32
 80015d2:	f383 8811 	msr	BASEPRI, r3
 80015d6:	4602      	mov	r2, r0
 80015d8:	e002      	b.n	80015e0 <chEvtUnregister+0x10>
 80015da:	428b      	cmp	r3, r1
 80015dc:	d007      	beq.n	80015ee <chEvtUnregister+0x1e>
 80015de:	461a      	mov	r2, r3
 80015e0:	6813      	ldr	r3, [r2, #0]
 80015e2:	4283      	cmp	r3, r0
 80015e4:	d1f9      	bne.n	80015da <chEvtUnregister+0xa>
 80015e6:	2300      	movs	r3, #0
 80015e8:	f383 8811 	msr	BASEPRI, r3
 80015ec:	4770      	bx	lr
 80015ee:	680b      	ldr	r3, [r1, #0]
 80015f0:	6013      	str	r3, [r2, #0]
 80015f2:	2300      	movs	r3, #0
 80015f4:	f383 8811 	msr	BASEPRI, r3
 80015f8:	4770      	bx	lr
 80015fa:	bf00      	nop
 80015fc:	0000      	movs	r0, r0
	...

08001600 <evt1_execute>:
 8001600:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001604:	4c33      	ldr	r4, [pc, #204]	; (80016d4 <evt1_execute+0xd4>)
 8001606:	b08a      	sub	sp, #40	; 0x28
 8001608:	2020      	movs	r0, #32
 800160a:	6024      	str	r4, [r4, #0]
 800160c:	f380 8811 	msr	BASEPRI, r0
 8001610:	4931      	ldr	r1, [pc, #196]	; (80016d8 <evt1_execute+0xd8>)
 8001612:	6823      	ldr	r3, [r4, #0]
 8001614:	ad0a      	add	r5, sp, #40	; 0x28
 8001616:	2701      	movs	r7, #1
 8001618:	f845 3d14 	str.w	r3, [r5, #-20]!
 800161c:	698b      	ldr	r3, [r1, #24]
 800161e:	9306      	str	r3, [sp, #24]
 8001620:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001624:	2300      	movs	r3, #0
 8001626:	6025      	str	r5, [r4, #0]
 8001628:	e9cd 7307 	strd	r7, r3, [sp, #28]
 800162c:	9209      	str	r2, [sp, #36]	; 0x24
 800162e:	f383 8811 	msr	BASEPRI, r3
 8001632:	f380 8811 	msr	BASEPRI, r0
 8001636:	ae0a      	add	r6, sp, #40	; 0x28
 8001638:	6820      	ldr	r0, [r4, #0]
 800163a:	f846 0d28 	str.w	r0, [r6, #-40]!
 800163e:	6989      	ldr	r1, [r1, #24]
 8001640:	9101      	str	r1, [sp, #4]
 8001642:	f04f 0802 	mov.w	r8, #2
 8001646:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800164a:	6026      	str	r6, [r4, #0]
 800164c:	f8cd 8008 	str.w	r8, [sp, #8]
 8001650:	f383 8811 	msr	BASEPRI, r3
 8001654:	6821      	ldr	r1, [r4, #0]
 8001656:	1b09      	subs	r1, r1, r4
 8001658:	bf18      	it	ne
 800165a:	2101      	movne	r1, #1
 800165c:	4638      	mov	r0, r7
 800165e:	f7ff f947 	bl	80008f0 <_test_assert>
 8001662:	b110      	cbz	r0, 800166a <evt1_execute+0x6a>
 8001664:	b00a      	add	sp, #40	; 0x28
 8001666:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800166a:	4629      	mov	r1, r5
 800166c:	4620      	mov	r0, r4
 800166e:	f7ff ffaf 	bl	80015d0 <chEvtUnregister>
 8001672:	6821      	ldr	r1, [r4, #0]
 8001674:	1b09      	subs	r1, r1, r4
 8001676:	bf18      	it	ne
 8001678:	2101      	movne	r1, #1
 800167a:	4640      	mov	r0, r8
 800167c:	f7ff f938 	bl	80008f0 <_test_assert>
 8001680:	2800      	cmp	r0, #0
 8001682:	d1ef      	bne.n	8001664 <evt1_execute+0x64>
 8001684:	4631      	mov	r1, r6
 8001686:	4620      	mov	r0, r4
 8001688:	f7ff ffa2 	bl	80015d0 <chEvtUnregister>
 800168c:	6821      	ldr	r1, [r4, #0]
 800168e:	1b09      	subs	r1, r1, r4
 8001690:	fab1 f181 	clz	r1, r1
 8001694:	2003      	movs	r0, #3
 8001696:	0949      	lsrs	r1, r1, #5
 8001698:	f7ff f92a 	bl	80008f0 <_test_assert>
 800169c:	2800      	cmp	r0, #0
 800169e:	d1e1      	bne.n	8001664 <evt1_execute+0x64>
 80016a0:	4e0e      	ldr	r6, [pc, #56]	; (80016dc <evt1_execute+0xdc>)
 80016a2:	4604      	mov	r4, r0
 80016a4:	2507      	movs	r5, #7
 80016a6:	fa25 f304 	lsr.w	r3, r5, r4
 80016aa:	f013 0f01 	tst.w	r3, #1
 80016ae:	fa07 f204 	lsl.w	r2, r7, r4
 80016b2:	4620      	mov	r0, r4
 80016b4:	d00c      	beq.n	80016d0 <evt1_execute+0xd0>
 80016b6:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 80016ba:	ea25 0502 	bic.w	r5, r5, r2
 80016be:	3401      	adds	r4, #1
 80016c0:	4798      	blx	r3
 80016c2:	2d00      	cmp	r5, #0
 80016c4:	d1ef      	bne.n	80016a6 <evt1_execute+0xa6>
 80016c6:	4906      	ldr	r1, [pc, #24]	; (80016e0 <evt1_execute+0xe0>)
 80016c8:	2004      	movs	r0, #4
 80016ca:	f7ff f8e9 	bl	80008a0 <_test_assert_sequence>
 80016ce:	e7c9      	b.n	8001664 <evt1_execute+0x64>
 80016d0:	3401      	adds	r4, #1
 80016d2:	e7e8      	b.n	80016a6 <evt1_execute+0xa6>
 80016d4:	20000808 	.word	0x20000808
 80016d8:	20001370 	.word	0x20001370
 80016dc:	08008e40 	.word	0x08008e40
 80016e0:	08008e50 	.word	0x08008e50
	...

080016f0 <chTMStopMeasurementX>:
 80016f0:	4b0e      	ldr	r3, [pc, #56]	; (800172c <chTMStopMeasurementX+0x3c>)
 80016f2:	4a0f      	ldr	r2, [pc, #60]	; (8001730 <chTMStopMeasurementX+0x40>)
 80016f4:	685b      	ldr	r3, [r3, #4]
 80016f6:	68c1      	ldr	r1, [r0, #12]
 80016f8:	b4f0      	push	{r4, r5, r6, r7}
 80016fa:	6884      	ldr	r4, [r0, #8]
 80016fc:	6f56      	ldr	r6, [r2, #116]	; 0x74
 80016fe:	6842      	ldr	r2, [r0, #4]
 8001700:	1b1b      	subs	r3, r3, r4
 8001702:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
 8001706:	1b9b      	subs	r3, r3, r6
 8001708:	18e6      	adds	r6, r4, r3
 800170a:	f145 0700 	adc.w	r7, r5, #0
 800170e:	3101      	adds	r1, #1
 8001710:	4293      	cmp	r3, r2
 8001712:	e9c0 3102 	strd	r3, r1, [r0, #8]
 8001716:	e9c0 6704 	strd	r6, r7, [r0, #16]
 800171a:	d805      	bhi.n	8001728 <chTMStopMeasurementX+0x38>
 800171c:	6802      	ldr	r2, [r0, #0]
 800171e:	4293      	cmp	r3, r2
 8001720:	bf38      	it	cc
 8001722:	6003      	strcc	r3, [r0, #0]
 8001724:	bcf0      	pop	{r4, r5, r6, r7}
 8001726:	4770      	bx	lr
 8001728:	6043      	str	r3, [r0, #4]
 800172a:	e7fb      	b.n	8001724 <chTMStopMeasurementX+0x34>
 800172c:	e0001000 	.word	0xe0001000
 8001730:	20001370 	.word	0x20001370
	...

08001740 <chThdCreateI>:
 8001740:	3924      	subs	r1, #36	; 0x24
 8001742:	b4f0      	push	{r4, r5, r6, r7}
 8001744:	1845      	adds	r5, r0, r1
 8001746:	60c5      	str	r5, [r0, #12]
 8001748:	9e04      	ldr	r6, [sp, #16]
 800174a:	5043      	str	r3, [r0, r1]
 800174c:	4b0d      	ldr	r3, [pc, #52]	; (8001784 <chThdCreateI+0x44>)
 800174e:	490e      	ldr	r1, [pc, #56]	; (8001788 <chThdCreateI+0x48>)
 8001750:	606e      	str	r6, [r5, #4]
 8001752:	6229      	str	r1, [r5, #32]
 8001754:	6103      	str	r3, [r0, #16]
 8001756:	695d      	ldr	r5, [r3, #20]
 8001758:	63c2      	str	r2, [r0, #60]	; 0x3c
 800175a:	2101      	movs	r1, #1
 800175c:	6082      	str	r2, [r0, #8]
 800175e:	2702      	movs	r7, #2
 8001760:	f100 0624 	add.w	r6, r0, #36	; 0x24
 8001764:	2200      	movs	r2, #0
 8001766:	7781      	strb	r1, [r0, #30]
 8001768:	f100 0128 	add.w	r1, r0, #40	; 0x28
 800176c:	6145      	str	r5, [r0, #20]
 800176e:	8387      	strh	r7, [r0, #28]
 8001770:	e9c0 220d 	strd	r2, r2, [r0, #52]	; 0x34
 8001774:	6182      	str	r2, [r0, #24]
 8001776:	6128      	str	r0, [r5, #16]
 8001778:	6246      	str	r6, [r0, #36]	; 0x24
 800177a:	6158      	str	r0, [r3, #20]
 800177c:	e9c0 110a 	strd	r1, r1, [r0, #40]	; 0x28
 8001780:	bcf0      	pop	{r4, r5, r6, r7}
 8001782:	4770      	bx	lr
 8001784:	20001370 	.word	0x20001370
 8001788:	08000291 	.word	0x08000291
 800178c:	00000000 	.word	0x00000000

08001790 <wakeup>:
 8001790:	2320      	movs	r3, #32
 8001792:	f383 8811 	msr	BASEPRI, r3
 8001796:	7f03      	ldrb	r3, [r0, #28]
 8001798:	2b07      	cmp	r3, #7
 800179a:	d80e      	bhi.n	80017ba <wakeup+0x2a>
 800179c:	e8df f003 	tbb	[pc, r3]
 80017a0:	230d0d27 	.word	0x230d0d27
 80017a4:	080d0408 	.word	0x080d0408
 80017a8:	6a02      	ldr	r2, [r0, #32]
 80017aa:	6893      	ldr	r3, [r2, #8]
 80017ac:	3301      	adds	r3, #1
 80017ae:	6093      	str	r3, [r2, #8]
 80017b0:	e9d0 2300 	ldrd	r2, r3, [r0]
 80017b4:	601a      	str	r2, [r3, #0]
 80017b6:	6802      	ldr	r2, [r0, #0]
 80017b8:	6053      	str	r3, [r2, #4]
 80017ba:	b410      	push	{r4}
 80017bc:	2200      	movs	r2, #0
 80017be:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80017c2:	6881      	ldr	r1, [r0, #8]
 80017c4:	4b0c      	ldr	r3, [pc, #48]	; (80017f8 <wakeup+0x68>)
 80017c6:	6204      	str	r4, [r0, #32]
 80017c8:	7702      	strb	r2, [r0, #28]
 80017ca:	681b      	ldr	r3, [r3, #0]
 80017cc:	689a      	ldr	r2, [r3, #8]
 80017ce:	428a      	cmp	r2, r1
 80017d0:	d2fb      	bcs.n	80017ca <wakeup+0x3a>
 80017d2:	685a      	ldr	r2, [r3, #4]
 80017d4:	2100      	movs	r1, #0
 80017d6:	e9c0 3200 	strd	r3, r2, [r0]
 80017da:	6010      	str	r0, [r2, #0]
 80017dc:	6058      	str	r0, [r3, #4]
 80017de:	f381 8811 	msr	BASEPRI, r1
 80017e2:	bc10      	pop	{r4}
 80017e4:	4770      	bx	lr
 80017e6:	6a03      	ldr	r3, [r0, #32]
 80017e8:	2200      	movs	r2, #0
 80017ea:	601a      	str	r2, [r3, #0]
 80017ec:	e7e5      	b.n	80017ba <wakeup+0x2a>
 80017ee:	2300      	movs	r3, #0
 80017f0:	f383 8811 	msr	BASEPRI, r3
 80017f4:	4770      	bx	lr
 80017f6:	bf00      	nop
 80017f8:	20001370 	.word	0x20001370
 80017fc:	00000000 	.word	0x00000000

08001800 <chSchReadyI>:
 8001800:	4601      	mov	r1, r0
 8001802:	2200      	movs	r2, #0
 8001804:	4b06      	ldr	r3, [pc, #24]	; (8001820 <chSchReadyI+0x20>)
 8001806:	6880      	ldr	r0, [r0, #8]
 8001808:	770a      	strb	r2, [r1, #28]
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	689a      	ldr	r2, [r3, #8]
 800180e:	4282      	cmp	r2, r0
 8001810:	d2fb      	bcs.n	800180a <chSchReadyI+0xa>
 8001812:	685a      	ldr	r2, [r3, #4]
 8001814:	4608      	mov	r0, r1
 8001816:	e9c1 3200 	strd	r3, r2, [r1]
 800181a:	6011      	str	r1, [r2, #0]
 800181c:	6059      	str	r1, [r3, #4]
 800181e:	4770      	bx	lr
 8001820:	20001370 	.word	0x20001370
	...

08001830 <chCondSignalI.constprop.65>:
 8001830:	4b07      	ldr	r3, [pc, #28]	; (8001850 <chCondSignalI.constprop.65+0x20>)
 8001832:	681a      	ldr	r2, [r3, #0]
 8001834:	429a      	cmp	r2, r3
 8001836:	d009      	beq.n	800184c <chCondSignalI.constprop.65+0x1c>
 8001838:	6811      	ldr	r1, [r2, #0]
 800183a:	b410      	push	{r4}
 800183c:	2400      	movs	r4, #0
 800183e:	604b      	str	r3, [r1, #4]
 8001840:	6019      	str	r1, [r3, #0]
 8001842:	6214      	str	r4, [r2, #32]
 8001844:	4610      	mov	r0, r2
 8001846:	bc10      	pop	{r4}
 8001848:	f7ff bfda 	b.w	8001800 <chSchReadyI>
 800184c:	4770      	bx	lr
 800184e:	bf00      	nop
 8001850:	20000800 	.word	0x20000800
	...

08001860 <otg_epin_handler.constprop.12>:
 8001860:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001864:	4d32      	ldr	r5, [pc, #200]	; (8001930 <otg_epin_handler.constprop.12+0xd0>)
 8001866:	6d2e      	ldr	r6, [r5, #80]	; 0x50
 8001868:	eb06 1340 	add.w	r3, r6, r0, lsl #5
 800186c:	4607      	mov	r7, r0
 800186e:	f8d3 4908 	ldr.w	r4, [r3, #2312]	; 0x908
 8001872:	f8c3 4908 	str.w	r4, [r3, #2312]	; 0x908
 8001876:	07e1      	lsls	r1, r4, #31
 8001878:	d516      	bpl.n	80018a8 <otg_epin_handler.constprop.12+0x48>
 800187a:	f8d6 3810 	ldr.w	r3, [r6, #2064]	; 0x810
 800187e:	07da      	lsls	r2, r3, #31
 8001880:	d512      	bpl.n	80018a8 <otg_epin_handler.constprop.12+0x48>
 8001882:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001886:	68d9      	ldr	r1, [r3, #12]
 8001888:	694b      	ldr	r3, [r1, #20]
 800188a:	6858      	ldr	r0, [r3, #4]
 800188c:	691a      	ldr	r2, [r3, #16]
 800188e:	4290      	cmp	r0, r2
 8001890:	d32e      	bcc.n	80018f0 <otg_epin_handler.constprop.12+0x90>
 8001892:	892b      	ldrh	r3, [r5, #8]
 8001894:	f8d1 8008 	ldr.w	r8, [r1, #8]
 8001898:	2201      	movs	r2, #1
 800189a:	40ba      	lsls	r2, r7
 800189c:	ea23 0302 	bic.w	r3, r3, r2
 80018a0:	812b      	strh	r3, [r5, #8]
 80018a2:	4639      	mov	r1, r7
 80018a4:	4628      	mov	r0, r5
 80018a6:	47c0      	blx	r8
 80018a8:	0623      	lsls	r3, r4, #24
 80018aa:	d506      	bpl.n	80018ba <otg_epin_handler.constprop.12+0x5a>
 80018ac:	2301      	movs	r3, #1
 80018ae:	f8d6 2834 	ldr.w	r2, [r6, #2100]	; 0x834
 80018b2:	fa03 f707 	lsl.w	r7, r3, r7
 80018b6:	4217      	tst	r7, r2
 80018b8:	d101      	bne.n	80018be <otg_epin_handler.constprop.12+0x5e>
 80018ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80018be:	2320      	movs	r3, #32
 80018c0:	f383 8811 	msr	BASEPRI, r3
 80018c4:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 80018c6:	f8d6 3834 	ldr.w	r3, [r6, #2100]	; 0x834
 80018ca:	6e29      	ldr	r1, [r5, #96]	; 0x60
 80018cc:	433a      	orrs	r2, r7
 80018ce:	ea23 0707 	bic.w	r7, r3, r7
 80018d2:	65ea      	str	r2, [r5, #92]	; 0x5c
 80018d4:	f8c6 7834 	str.w	r7, [r6, #2100]	; 0x834
 80018d8:	b129      	cbz	r1, 80018e6 <otg_epin_handler.constprop.12+0x86>
 80018da:	2300      	movs	r3, #0
 80018dc:	662b      	str	r3, [r5, #96]	; 0x60
 80018de:	4608      	mov	r0, r1
 80018e0:	620b      	str	r3, [r1, #32]
 80018e2:	f7ff ff8d 	bl	8001800 <chSchReadyI>
 80018e6:	2300      	movs	r3, #0
 80018e8:	f383 8811 	msr	BASEPRI, r3
 80018ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80018f0:	1a12      	subs	r2, r2, r0
 80018f2:	f04f 0800 	mov.w	r8, #0
 80018f6:	e9c3 2801 	strd	r2, r8, [r3, #4]
 80018fa:	4639      	mov	r1, r7
 80018fc:	4628      	mov	r0, r5
 80018fe:	f7ff f907 	bl	8000b10 <usb_lld_prepare_transmit>
 8001902:	2320      	movs	r3, #32
 8001904:	f383 8811 	msr	BASEPRI, r3
 8001908:	6d2a      	ldr	r2, [r5, #80]	; 0x50
 800190a:	eb02 1047 	add.w	r0, r2, r7, lsl #5
 800190e:	2301      	movs	r3, #1
 8001910:	f8d0 1900 	ldr.w	r1, [r0, #2304]	; 0x900
 8001914:	f041 4104 	orr.w	r1, r1, #2214592512	; 0x84000000
 8001918:	f8c0 1900 	str.w	r1, [r0, #2304]	; 0x900
 800191c:	f8d2 1834 	ldr.w	r1, [r2, #2100]	; 0x834
 8001920:	40bb      	lsls	r3, r7
 8001922:	430b      	orrs	r3, r1
 8001924:	f8c2 3834 	str.w	r3, [r2, #2100]	; 0x834
 8001928:	f388 8811 	msr	BASEPRI, r8
 800192c:	e7bc      	b.n	80018a8 <otg_epin_handler.constprop.12+0x48>
 800192e:	bf00      	nop
 8001930:	200011c0 	.word	0x200011c0
	...

08001940 <spi_lld_serve_rx_interrupt>:
 8001940:	f011 0f0c 	tst.w	r1, #12
 8001944:	b538      	push	{r3, r4, r5, lr}
 8001946:	d138      	bne.n	80019ba <spi_lld_serve_rx_interrupt+0x7a>
 8001948:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800194a:	6813      	ldr	r3, [r2, #0]
 800194c:	6819      	ldr	r1, [r3, #0]
 800194e:	f021 011f 	bic.w	r1, r1, #31
 8001952:	6019      	str	r1, [r3, #0]
 8001954:	6819      	ldr	r1, [r3, #0]
 8001956:	07cc      	lsls	r4, r1, #31
 8001958:	d4fc      	bmi.n	8001954 <spi_lld_serve_rx_interrupt+0x14>
 800195a:	7a15      	ldrb	r5, [r2, #8]
 800195c:	6a03      	ldr	r3, [r0, #32]
 800195e:	6854      	ldr	r4, [r2, #4]
 8001960:	681a      	ldr	r2, [r3, #0]
 8001962:	213d      	movs	r1, #61	; 0x3d
 8001964:	40a9      	lsls	r1, r5
 8001966:	6021      	str	r1, [r4, #0]
 8001968:	6811      	ldr	r1, [r2, #0]
 800196a:	f021 011f 	bic.w	r1, r1, #31
 800196e:	6011      	str	r1, [r2, #0]
 8001970:	6811      	ldr	r1, [r2, #0]
 8001972:	07c9      	lsls	r1, r1, #31
 8001974:	d4fc      	bmi.n	8001970 <spi_lld_serve_rx_interrupt+0x30>
 8001976:	6842      	ldr	r2, [r0, #4]
 8001978:	6859      	ldr	r1, [r3, #4]
 800197a:	6812      	ldr	r2, [r2, #0]
 800197c:	4604      	mov	r4, r0
 800197e:	7a18      	ldrb	r0, [r3, #8]
 8001980:	233d      	movs	r3, #61	; 0x3d
 8001982:	4083      	lsls	r3, r0
 8001984:	600b      	str	r3, [r1, #0]
 8001986:	b1aa      	cbz	r2, 80019b4 <spi_lld_serve_rx_interrupt+0x74>
 8001988:	2304      	movs	r3, #4
 800198a:	7023      	strb	r3, [r4, #0]
 800198c:	4620      	mov	r0, r4
 800198e:	4790      	blx	r2
 8001990:	7823      	ldrb	r3, [r4, #0]
 8001992:	2b04      	cmp	r3, #4
 8001994:	d00e      	beq.n	80019b4 <spi_lld_serve_rx_interrupt+0x74>
 8001996:	2320      	movs	r3, #32
 8001998:	f383 8811 	msr	BASEPRI, r3
 800199c:	68a3      	ldr	r3, [r4, #8]
 800199e:	b12b      	cbz	r3, 80019ac <spi_lld_serve_rx_interrupt+0x6c>
 80019a0:	2200      	movs	r2, #0
 80019a2:	60a2      	str	r2, [r4, #8]
 80019a4:	4618      	mov	r0, r3
 80019a6:	621a      	str	r2, [r3, #32]
 80019a8:	f7ff ff2a 	bl	8001800 <chSchReadyI>
 80019ac:	2300      	movs	r3, #0
 80019ae:	f383 8811 	msr	BASEPRI, r3
 80019b2:	bd38      	pop	{r3, r4, r5, pc}
 80019b4:	2302      	movs	r3, #2
 80019b6:	7023      	strb	r3, [r4, #0]
 80019b8:	e7ed      	b.n	8001996 <spi_lld_serve_rx_interrupt+0x56>
 80019ba:	b672      	cpsid	i
 80019bc:	4b01      	ldr	r3, [pc, #4]	; (80019c4 <spi_lld_serve_rx_interrupt+0x84>)
 80019be:	4a02      	ldr	r2, [pc, #8]	; (80019c8 <spi_lld_serve_rx_interrupt+0x88>)
 80019c0:	62da      	str	r2, [r3, #44]	; 0x2c
 80019c2:	e7fe      	b.n	80019c2 <spi_lld_serve_rx_interrupt+0x82>
 80019c4:	20001370 	.word	0x20001370
 80019c8:	08009120 	.word	0x08009120
 80019cc:	00000000 	.word	0x00000000

080019d0 <chIQPutI>:
 80019d0:	b510      	push	{r4, lr}
 80019d2:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 80019d6:	42a2      	cmp	r2, r4
 80019d8:	6883      	ldr	r3, [r0, #8]
 80019da:	d01c      	beq.n	8001a16 <chIQPutI+0x46>
 80019dc:	3301      	adds	r3, #1
 80019de:	1c54      	adds	r4, r2, #1
 80019e0:	6083      	str	r3, [r0, #8]
 80019e2:	6144      	str	r4, [r0, #20]
 80019e4:	7011      	strb	r1, [r2, #0]
 80019e6:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
 80019ea:	429a      	cmp	r2, r3
 80019ec:	d20c      	bcs.n	8001a08 <chIQPutI+0x38>
 80019ee:	6803      	ldr	r3, [r0, #0]
 80019f0:	4298      	cmp	r0, r3
 80019f2:	d00e      	beq.n	8001a12 <chIQPutI+0x42>
 80019f4:	681a      	ldr	r2, [r3, #0]
 80019f6:	6002      	str	r2, [r0, #0]
 80019f8:	2400      	movs	r4, #0
 80019fa:	6050      	str	r0, [r2, #4]
 80019fc:	4618      	mov	r0, r3
 80019fe:	621c      	str	r4, [r3, #32]
 8001a00:	f7ff fefe 	bl	8001800 <chSchReadyI>
 8001a04:	4620      	mov	r0, r4
 8001a06:	bd10      	pop	{r4, pc}
 8001a08:	68c3      	ldr	r3, [r0, #12]
 8001a0a:	6143      	str	r3, [r0, #20]
 8001a0c:	6803      	ldr	r3, [r0, #0]
 8001a0e:	4298      	cmp	r0, r3
 8001a10:	d1f0      	bne.n	80019f4 <chIQPutI+0x24>
 8001a12:	2000      	movs	r0, #0
 8001a14:	bd10      	pop	{r4, pc}
 8001a16:	2b00      	cmp	r3, #0
 8001a18:	d0e0      	beq.n	80019dc <chIQPutI+0xc>
 8001a1a:	f06f 0003 	mvn.w	r0, #3
 8001a1e:	bd10      	pop	{r4, pc}

08001a20 <chOQGetI>:
 8001a20:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8001a24:	4291      	cmp	r1, r2
 8001a26:	b538      	push	{r3, r4, r5, lr}
 8001a28:	6883      	ldr	r3, [r0, #8]
 8001a2a:	d017      	beq.n	8001a5c <chOQGetI+0x3c>
 8001a2c:	6905      	ldr	r5, [r0, #16]
 8001a2e:	1c51      	adds	r1, r2, #1
 8001a30:	3301      	adds	r3, #1
 8001a32:	6083      	str	r3, [r0, #8]
 8001a34:	6181      	str	r1, [r0, #24]
 8001a36:	42a9      	cmp	r1, r5
 8001a38:	7814      	ldrb	r4, [r2, #0]
 8001a3a:	d20c      	bcs.n	8001a56 <chOQGetI+0x36>
 8001a3c:	6803      	ldr	r3, [r0, #0]
 8001a3e:	4298      	cmp	r0, r3
 8001a40:	d007      	beq.n	8001a52 <chOQGetI+0x32>
 8001a42:	681a      	ldr	r2, [r3, #0]
 8001a44:	6002      	str	r2, [r0, #0]
 8001a46:	2100      	movs	r1, #0
 8001a48:	6050      	str	r0, [r2, #4]
 8001a4a:	4618      	mov	r0, r3
 8001a4c:	6219      	str	r1, [r3, #32]
 8001a4e:	f7ff fed7 	bl	8001800 <chSchReadyI>
 8001a52:	4620      	mov	r0, r4
 8001a54:	bd38      	pop	{r3, r4, r5, pc}
 8001a56:	68c3      	ldr	r3, [r0, #12]
 8001a58:	6183      	str	r3, [r0, #24]
 8001a5a:	e7ef      	b.n	8001a3c <chOQGetI+0x1c>
 8001a5c:	2b00      	cmp	r3, #0
 8001a5e:	d0e5      	beq.n	8001a2c <chOQGetI+0xc>
 8001a60:	f06f 0002 	mvn.w	r0, #2
 8001a64:	bd38      	pop	{r3, r4, r5, pc}
 8001a66:	bf00      	nop
	...

08001a70 <chEvtSignalI>:
 8001a70:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8001a72:	7f02      	ldrb	r2, [r0, #28]
 8001a74:	4319      	orrs	r1, r3
 8001a76:	2a0a      	cmp	r2, #10
 8001a78:	6341      	str	r1, [r0, #52]	; 0x34
 8001a7a:	d009      	beq.n	8001a90 <chEvtSignalI+0x20>
 8001a7c:	2a0b      	cmp	r2, #11
 8001a7e:	d000      	beq.n	8001a82 <chEvtSignalI+0x12>
 8001a80:	4770      	bx	lr
 8001a82:	6a03      	ldr	r3, [r0, #32]
 8001a84:	438b      	bics	r3, r1
 8001a86:	d1fb      	bne.n	8001a80 <chEvtSignalI+0x10>
 8001a88:	2300      	movs	r3, #0
 8001a8a:	6203      	str	r3, [r0, #32]
 8001a8c:	f7ff beb8 	b.w	8001800 <chSchReadyI>
 8001a90:	6a03      	ldr	r3, [r0, #32]
 8001a92:	4219      	tst	r1, r3
 8001a94:	d1f8      	bne.n	8001a88 <chEvtSignalI+0x18>
 8001a96:	4770      	bx	lr
	...

08001aa0 <chEvtBroadcastFlagsI>:
 8001aa0:	b570      	push	{r4, r5, r6, lr}
 8001aa2:	6804      	ldr	r4, [r0, #0]
 8001aa4:	42a0      	cmp	r0, r4
 8001aa6:	d00f      	beq.n	8001ac8 <chEvtBroadcastFlagsI+0x28>
 8001aa8:	4606      	mov	r6, r0
 8001aaa:	460d      	mov	r5, r1
 8001aac:	68e3      	ldr	r3, [r4, #12]
 8001aae:	432b      	orrs	r3, r5
 8001ab0:	60e3      	str	r3, [r4, #12]
 8001ab2:	b115      	cbz	r5, 8001aba <chEvtBroadcastFlagsI+0x1a>
 8001ab4:	6922      	ldr	r2, [r4, #16]
 8001ab6:	4213      	tst	r3, r2
 8001ab8:	d003      	beq.n	8001ac2 <chEvtBroadcastFlagsI+0x22>
 8001aba:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 8001abe:	f7ff ffd7 	bl	8001a70 <chEvtSignalI>
 8001ac2:	6824      	ldr	r4, [r4, #0]
 8001ac4:	42a6      	cmp	r6, r4
 8001ac6:	d1f1      	bne.n	8001aac <chEvtBroadcastFlagsI+0xc>
 8001ac8:	bd70      	pop	{r4, r5, r6, pc}
 8001aca:	bf00      	nop
 8001acc:	0000      	movs	r0, r0
	...

08001ad0 <VectorD8>:
 8001ad0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001ad4:	4e4d      	ldr	r6, [pc, #308]	; (8001c0c <VectorD8+0x13c>)
 8001ad6:	6f75      	ldr	r5, [r6, #116]	; 0x74
 8001ad8:	f8d5 900c 	ldr.w	r9, [r5, #12]
 8001adc:	682b      	ldr	r3, [r5, #0]
 8001ade:	05da      	lsls	r2, r3, #23
 8001ae0:	b29c      	uxth	r4, r3
 8001ae2:	d463      	bmi.n	8001bac <VectorD8+0xdc>
 8001ae4:	2320      	movs	r3, #32
 8001ae6:	f383 8811 	msr	BASEPRI, r3
 8001aea:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8001aee:	d038      	beq.n	8001b62 <VectorD8+0x92>
 8001af0:	4f47      	ldr	r7, [pc, #284]	; (8001c10 <VectorD8+0x140>)
 8001af2:	f107 0808 	add.w	r8, r7, #8
 8001af6:	e008      	b.n	8001b0a <VectorD8+0x3a>
 8001af8:	06a0      	lsls	r0, r4, #26
 8001afa:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8001afe:	d41e      	bmi.n	8001b3e <VectorD8+0x6e>
 8001b00:	682c      	ldr	r4, [r5, #0]
 8001b02:	b2a4      	uxth	r4, r4
 8001b04:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8001b08:	d02b      	beq.n	8001b62 <VectorD8+0x92>
 8001b0a:	0723      	lsls	r3, r4, #28
 8001b0c:	d0f4      	beq.n	8001af8 <VectorD8+0x28>
 8001b0e:	f014 0f08 	tst.w	r4, #8
 8001b12:	bf0c      	ite	eq
 8001b14:	2100      	moveq	r1, #0
 8001b16:	2180      	movne	r1, #128	; 0x80
 8001b18:	07e0      	lsls	r0, r4, #31
 8001b1a:	bf48      	it	mi
 8001b1c:	f041 0120 	orrmi.w	r1, r1, #32
 8001b20:	07a2      	lsls	r2, r4, #30
 8001b22:	bf48      	it	mi
 8001b24:	f041 0140 	orrmi.w	r1, r1, #64	; 0x40
 8001b28:	0763      	lsls	r3, r4, #29
 8001b2a:	bf48      	it	mi
 8001b2c:	f441 7180 	orrmi.w	r1, r1, #256	; 0x100
 8001b30:	4638      	mov	r0, r7
 8001b32:	f7ff ffb5 	bl	8001aa0 <chEvtBroadcastFlagsI>
 8001b36:	06a0      	lsls	r0, r4, #26
 8001b38:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8001b3c:	d5e0      	bpl.n	8001b00 <VectorD8+0x30>
 8001b3e:	6973      	ldr	r3, [r6, #20]
 8001b40:	b37b      	cbz	r3, 8001ba2 <VectorD8+0xd2>
 8001b42:	fa5f f18a 	uxtb.w	r1, sl
 8001b46:	4640      	mov	r0, r8
 8001b48:	f7ff ff42 	bl	80019d0 <chIQPutI>
 8001b4c:	2800      	cmp	r0, #0
 8001b4e:	dad7      	bge.n	8001b00 <VectorD8+0x30>
 8001b50:	2180      	movs	r1, #128	; 0x80
 8001b52:	4638      	mov	r0, r7
 8001b54:	f7ff ffa4 	bl	8001aa0 <chEvtBroadcastFlagsI>
 8001b58:	682c      	ldr	r4, [r5, #0]
 8001b5a:	b2a4      	uxth	r4, r4
 8001b5c:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8001b60:	d1d3      	bne.n	8001b0a <VectorD8+0x3a>
 8001b62:	2300      	movs	r3, #0
 8001b64:	f383 8811 	msr	BASEPRI, r3
 8001b68:	f019 0f80 	tst.w	r9, #128	; 0x80
 8001b6c:	d001      	beq.n	8001b72 <VectorD8+0xa2>
 8001b6e:	0622      	lsls	r2, r4, #24
 8001b70:	d42b      	bmi.n	8001bca <VectorD8+0xfa>
 8001b72:	0663      	lsls	r3, r4, #25
 8001b74:	d511      	bpl.n	8001b9a <VectorD8+0xca>
 8001b76:	2320      	movs	r3, #32
 8001b78:	f383 8811 	msr	BASEPRI, r3
 8001b7c:	e9d6 2311 	ldrd	r2, r3, [r6, #68]	; 0x44
 8001b80:	429a      	cmp	r2, r3
 8001b82:	d02f      	beq.n	8001be4 <VectorD8+0x114>
 8001b84:	f64f 73bf 	movw	r3, #65471	; 0xffbf
 8001b88:	ea09 0303 	and.w	r3, r9, r3
 8001b8c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8001b90:	60eb      	str	r3, [r5, #12]
 8001b92:	2300      	movs	r3, #0
 8001b94:	602a      	str	r2, [r5, #0]
 8001b96:	f383 8811 	msr	BASEPRI, r3
 8001b9a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001b9e:	f7ff ba47 	b.w	8001030 <_port_irq_epilogue>
 8001ba2:	2104      	movs	r1, #4
 8001ba4:	4638      	mov	r0, r7
 8001ba6:	f7ff ff7b 	bl	8001aa0 <chEvtBroadcastFlagsI>
 8001baa:	e7ca      	b.n	8001b42 <VectorD8+0x72>
 8001bac:	2320      	movs	r3, #32
 8001bae:	f383 8811 	msr	BASEPRI, r3
 8001bb2:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001bb6:	1d30      	adds	r0, r6, #4
 8001bb8:	f7ff ff72 	bl	8001aa0 <chEvtBroadcastFlagsI>
 8001bbc:	f46f 7380 	mvn.w	r3, #256	; 0x100
 8001bc0:	602b      	str	r3, [r5, #0]
 8001bc2:	2300      	movs	r3, #0
 8001bc4:	f383 8811 	msr	BASEPRI, r3
 8001bc8:	e78c      	b.n	8001ae4 <VectorD8+0x14>
 8001bca:	2320      	movs	r3, #32
 8001bcc:	f383 8811 	msr	BASEPRI, r3
 8001bd0:	4810      	ldr	r0, [pc, #64]	; (8001c14 <VectorD8+0x144>)
 8001bd2:	f7ff ff25 	bl	8001a20 <chOQGetI>
 8001bd6:	2800      	cmp	r0, #0
 8001bd8:	db0c      	blt.n	8001bf4 <VectorD8+0x124>
 8001bda:	6068      	str	r0, [r5, #4]
 8001bdc:	2300      	movs	r3, #0
 8001bde:	f383 8811 	msr	BASEPRI, r3
 8001be2:	e7c6      	b.n	8001b72 <VectorD8+0xa2>
 8001be4:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001be6:	2b00      	cmp	r3, #0
 8001be8:	d0cc      	beq.n	8001b84 <VectorD8+0xb4>
 8001bea:	2110      	movs	r1, #16
 8001bec:	4808      	ldr	r0, [pc, #32]	; (8001c10 <VectorD8+0x140>)
 8001bee:	f7ff ff57 	bl	8001aa0 <chEvtBroadcastFlagsI>
 8001bf2:	e7c7      	b.n	8001b84 <VectorD8+0xb4>
 8001bf4:	2108      	movs	r1, #8
 8001bf6:	4806      	ldr	r0, [pc, #24]	; (8001c10 <VectorD8+0x140>)
 8001bf8:	f7ff ff52 	bl	8001aa0 <chEvtBroadcastFlagsI>
 8001bfc:	f64f 733f 	movw	r3, #65343	; 0xff3f
 8001c00:	ea09 0303 	and.w	r3, r9, r3
 8001c04:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001c08:	60eb      	str	r3, [r5, #12]
 8001c0a:	e7e7      	b.n	8001bdc <VectorD8+0x10c>
 8001c0c:	20000e8c 	.word	0x20000e8c
 8001c10:	20000e90 	.word	0x20000e90
 8001c14:	20000ebc 	.word	0x20000ebc
	...

08001c20 <sduDataReceived>:
 8001c20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001c22:	f101 0309 	add.w	r3, r1, #9
 8001c26:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
 8001c2a:	b1bc      	cbz	r4, 8001c5c <sduDataReceived+0x3c>
 8001c2c:	4607      	mov	r7, r0
 8001c2e:	460d      	mov	r5, r1
 8001c30:	2620      	movs	r6, #32
 8001c32:	f386 8811 	msr	BASEPRI, r6
 8001c36:	2104      	movs	r1, #4
 8001c38:	1860      	adds	r0, r4, r1
 8001c3a:	f7ff ff31 	bl	8001aa0 <chEvtBroadcastFlagsI>
 8001c3e:	eb07 0c85 	add.w	ip, r7, r5, lsl #2
 8001c42:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8001c46:	69e2      	ldr	r2, [r4, #28]
 8001c48:	f8dc 100c 	ldr.w	r1, [ip, #12]
 8001c4c:	1a12      	subs	r2, r2, r0
 8001c4e:	8a49      	ldrh	r1, [r1, #18]
 8001c50:	1ad3      	subs	r3, r2, r3
 8001c52:	4299      	cmp	r1, r3
 8001c54:	d903      	bls.n	8001c5e <sduDataReceived+0x3e>
 8001c56:	2300      	movs	r3, #0
 8001c58:	f383 8811 	msr	BASEPRI, r3
 8001c5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001c5e:	2000      	movs	r0, #0
 8001c60:	f380 8811 	msr	BASEPRI, r0
 8001c64:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8001c68:	fbb3 f3f1 	udiv	r3, r3, r1
 8001c6c:	6992      	ldr	r2, [r2, #24]
 8001c6e:	fb01 f303 	mul.w	r3, r1, r3
 8001c72:	340c      	adds	r4, #12
 8001c74:	2101      	movs	r1, #1
 8001c76:	e9c2 3001 	strd	r3, r0, [r2, #4]
 8001c7a:	7011      	strb	r1, [r2, #0]
 8001c7c:	60d4      	str	r4, [r2, #12]
 8001c7e:	4629      	mov	r1, r5
 8001c80:	4638      	mov	r0, r7
 8001c82:	f7fe ff6d 	bl	8000b60 <usb_lld_prepare_receive>
 8001c86:	f386 8811 	msr	BASEPRI, r6
 8001c8a:	4629      	mov	r1, r5
 8001c8c:	4638      	mov	r0, r7
 8001c8e:	f7ff f90f 	bl	8000eb0 <usbStartReceiveI>
 8001c92:	2300      	movs	r3, #0
 8001c94:	f383 8811 	msr	BASEPRI, r3
 8001c98:	e7e0      	b.n	8001c5c <sduDataReceived+0x3c>
 8001c9a:	bf00      	nop
 8001c9c:	0000      	movs	r0, r0
	...

08001ca0 <sduDataTransmitted>:
 8001ca0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ca2:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8001ca6:	699c      	ldr	r4, [r3, #24]
 8001ca8:	b37c      	cbz	r4, 8001d0a <sduDataTransmitted+0x6a>
 8001caa:	460e      	mov	r6, r1
 8001cac:	4605      	mov	r5, r0
 8001cae:	2720      	movs	r7, #32
 8001cb0:	f387 8811 	msr	BASEPRI, r7
 8001cb4:	2108      	movs	r1, #8
 8001cb6:	1d20      	adds	r0, r4, #4
 8001cb8:	f7ff fef2 	bl	8001aa0 <chEvtBroadcastFlagsI>
 8001cbc:	e9d4 130f 	ldrd	r1, r3, [r4, #60]	; 0x3c
 8001cc0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8001cc2:	1a5b      	subs	r3, r3, r1
 8001cc4:	1a9b      	subs	r3, r3, r2
 8001cc6:	d121      	bne.n	8001d0c <sduDataTransmitted+0x6c>
 8001cc8:	eb05 0186 	add.w	r1, r5, r6, lsl #2
 8001ccc:	68cb      	ldr	r3, [r1, #12]
 8001cce:	695a      	ldr	r2, [r3, #20]
 8001cd0:	6852      	ldr	r2, [r2, #4]
 8001cd2:	b1ba      	cbz	r2, 8001d04 <sduDataTransmitted+0x64>
 8001cd4:	8a1b      	ldrh	r3, [r3, #16]
 8001cd6:	3b01      	subs	r3, #1
 8001cd8:	4013      	ands	r3, r2
 8001cda:	d113      	bne.n	8001d04 <sduDataTransmitted+0x64>
 8001cdc:	f383 8811 	msr	BASEPRI, r3
 8001ce0:	68ca      	ldr	r2, [r1, #12]
 8001ce2:	6952      	ldr	r2, [r2, #20]
 8001ce4:	e9c2 3301 	strd	r3, r3, [r2, #4]
 8001ce8:	3430      	adds	r4, #48	; 0x30
 8001cea:	2101      	movs	r1, #1
 8001cec:	60d4      	str	r4, [r2, #12]
 8001cee:	7011      	strb	r1, [r2, #0]
 8001cf0:	4631      	mov	r1, r6
 8001cf2:	4628      	mov	r0, r5
 8001cf4:	f7fe ff0c 	bl	8000b10 <usb_lld_prepare_transmit>
 8001cf8:	f387 8811 	msr	BASEPRI, r7
 8001cfc:	4631      	mov	r1, r6
 8001cfe:	4628      	mov	r0, r5
 8001d00:	f7ff f8be 	bl	8000e80 <usbStartTransmitI>
 8001d04:	2300      	movs	r3, #0
 8001d06:	f383 8811 	msr	BASEPRI, r3
 8001d0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001d0c:	2100      	movs	r1, #0
 8001d0e:	f381 8811 	msr	BASEPRI, r1
 8001d12:	eb05 0286 	add.w	r2, r5, r6, lsl #2
 8001d16:	3430      	adds	r4, #48	; 0x30
 8001d18:	68d2      	ldr	r2, [r2, #12]
 8001d1a:	6952      	ldr	r2, [r2, #20]
 8001d1c:	2001      	movs	r0, #1
 8001d1e:	60d4      	str	r4, [r2, #12]
 8001d20:	e9c2 3101 	strd	r3, r1, [r2, #4]
 8001d24:	7010      	strb	r0, [r2, #0]
 8001d26:	e7e3      	b.n	8001cf0 <sduDataTransmitted+0x50>
	...

08001d30 <chMtxUnlockS>:
 8001d30:	4b12      	ldr	r3, [pc, #72]	; (8001d7c <chMtxUnlockS+0x4c>)
 8001d32:	b430      	push	{r4, r5}
 8001d34:	6804      	ldr	r4, [r0, #0]
 8001d36:	699d      	ldr	r5, [r3, #24]
 8001d38:	68c3      	ldr	r3, [r0, #12]
 8001d3a:	63ab      	str	r3, [r5, #56]	; 0x38
 8001d3c:	4284      	cmp	r4, r0
 8001d3e:	d018      	beq.n	8001d72 <chMtxUnlockS+0x42>
 8001d40:	4601      	mov	r1, r0
 8001d42:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 8001d44:	b14b      	cbz	r3, 8001d5a <chMtxUnlockS+0x2a>
 8001d46:	681a      	ldr	r2, [r3, #0]
 8001d48:	4293      	cmp	r3, r2
 8001d4a:	d003      	beq.n	8001d54 <chMtxUnlockS+0x24>
 8001d4c:	6892      	ldr	r2, [r2, #8]
 8001d4e:	4290      	cmp	r0, r2
 8001d50:	bf38      	it	cc
 8001d52:	4610      	movcc	r0, r2
 8001d54:	68db      	ldr	r3, [r3, #12]
 8001d56:	2b00      	cmp	r3, #0
 8001d58:	d1f5      	bne.n	8001d46 <chMtxUnlockS+0x16>
 8001d5a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8001d5c:	6823      	ldr	r3, [r4, #0]
 8001d5e:	60a8      	str	r0, [r5, #8]
 8001d60:	600b      	str	r3, [r1, #0]
 8001d62:	4620      	mov	r0, r4
 8001d64:	6059      	str	r1, [r3, #4]
 8001d66:	e9c1 4202 	strd	r4, r2, [r1, #8]
 8001d6a:	63a1      	str	r1, [r4, #56]	; 0x38
 8001d6c:	bc30      	pop	{r4, r5}
 8001d6e:	f7ff bd47 	b.w	8001800 <chSchReadyI>
 8001d72:	2300      	movs	r3, #0
 8001d74:	60a3      	str	r3, [r4, #8]
 8001d76:	bc30      	pop	{r4, r5}
 8001d78:	4770      	bx	lr
 8001d7a:	bf00      	nop
 8001d7c:	20001370 	.word	0x20001370

08001d80 <chSemSignalI>:
 8001d80:	6883      	ldr	r3, [r0, #8]
 8001d82:	3301      	adds	r3, #1
 8001d84:	2b00      	cmp	r3, #0
 8001d86:	6083      	str	r3, [r0, #8]
 8001d88:	dd00      	ble.n	8001d8c <chSemSignalI+0xc>
 8001d8a:	4770      	bx	lr
 8001d8c:	6803      	ldr	r3, [r0, #0]
 8001d8e:	681a      	ldr	r2, [r3, #0]
 8001d90:	6002      	str	r2, [r0, #0]
 8001d92:	2100      	movs	r1, #0
 8001d94:	6050      	str	r0, [r2, #4]
 8001d96:	4618      	mov	r0, r3
 8001d98:	6219      	str	r1, [r3, #32]
 8001d9a:	f7ff bd31 	b.w	8001800 <chSchReadyI>
 8001d9e:	bf00      	nop

08001da0 <chMBPostI.constprop.41>:
 8001da0:	b538      	push	{r3, r4, r5, lr}
 8001da2:	4b0c      	ldr	r3, [pc, #48]	; (8001dd4 <chMBPostI.constprop.41+0x34>)
 8001da4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001da6:	2a00      	cmp	r2, #0
 8001da8:	dd10      	ble.n	8001dcc <chMBPostI.constprop.41+0x2c>
 8001daa:	e9d3 5401 	ldrd	r5, r4, [r3, #4]
 8001dae:	1d21      	adds	r1, r4, #4
 8001db0:	3a01      	subs	r2, #1
 8001db2:	42a9      	cmp	r1, r5
 8001db4:	625a      	str	r2, [r3, #36]	; 0x24
 8001db6:	6099      	str	r1, [r3, #8]
 8001db8:	bf28      	it	cs
 8001dba:	681a      	ldrcs	r2, [r3, #0]
 8001dbc:	6020      	str	r0, [r4, #0]
 8001dbe:	4806      	ldr	r0, [pc, #24]	; (8001dd8 <chMBPostI.constprop.41+0x38>)
 8001dc0:	bf28      	it	cs
 8001dc2:	609a      	strcs	r2, [r3, #8]
 8001dc4:	f7ff ffdc 	bl	8001d80 <chSemSignalI>
 8001dc8:	2000      	movs	r0, #0
 8001dca:	bd38      	pop	{r3, r4, r5, pc}
 8001dcc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001dd0:	bd38      	pop	{r3, r4, r5, pc}
 8001dd2:	bf00      	nop
 8001dd4:	20000874 	.word	0x20000874
 8001dd8:	20000884 	.word	0x20000884
 8001ddc:	00000000 	.word	0x00000000

08001de0 <chMBPostAheadI.constprop.39>:
 8001de0:	4a0c      	ldr	r2, [pc, #48]	; (8001e14 <chMBPostAheadI.constprop.39+0x34>)
 8001de2:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8001de4:	2900      	cmp	r1, #0
 8001de6:	dd11      	ble.n	8001e0c <chMBPostAheadI.constprop.39+0x2c>
 8001de8:	68d3      	ldr	r3, [r2, #12]
 8001dea:	b510      	push	{r4, lr}
 8001dec:	6814      	ldr	r4, [r2, #0]
 8001dee:	3b04      	subs	r3, #4
 8001df0:	3901      	subs	r1, #1
 8001df2:	42a3      	cmp	r3, r4
 8001df4:	6251      	str	r1, [r2, #36]	; 0x24
 8001df6:	60d3      	str	r3, [r2, #12]
 8001df8:	d202      	bcs.n	8001e00 <chMBPostAheadI.constprop.39+0x20>
 8001dfa:	6853      	ldr	r3, [r2, #4]
 8001dfc:	3b04      	subs	r3, #4
 8001dfe:	60d3      	str	r3, [r2, #12]
 8001e00:	6018      	str	r0, [r3, #0]
 8001e02:	4805      	ldr	r0, [pc, #20]	; (8001e18 <chMBPostAheadI.constprop.39+0x38>)
 8001e04:	f7ff ffbc 	bl	8001d80 <chSemSignalI>
 8001e08:	2000      	movs	r0, #0
 8001e0a:	bd10      	pop	{r4, pc}
 8001e0c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001e10:	4770      	bx	lr
 8001e12:	bf00      	nop
 8001e14:	20000874 	.word	0x20000874
 8001e18:	20000884 	.word	0x20000884
 8001e1c:	00000000 	.word	0x00000000

08001e20 <chMBFetchI.constprop.37>:
 8001e20:	4b0c      	ldr	r3, [pc, #48]	; (8001e54 <chMBFetchI.constprop.37+0x34>)
 8001e22:	6999      	ldr	r1, [r3, #24]
 8001e24:	2900      	cmp	r1, #0
 8001e26:	dd12      	ble.n	8001e4e <chMBFetchI.constprop.37+0x2e>
 8001e28:	b510      	push	{r4, lr}
 8001e2a:	68da      	ldr	r2, [r3, #12]
 8001e2c:	3901      	subs	r1, #1
 8001e2e:	6199      	str	r1, [r3, #24]
 8001e30:	6859      	ldr	r1, [r3, #4]
 8001e32:	6814      	ldr	r4, [r2, #0]
 8001e34:	3204      	adds	r2, #4
 8001e36:	428a      	cmp	r2, r1
 8001e38:	60da      	str	r2, [r3, #12]
 8001e3a:	6004      	str	r4, [r0, #0]
 8001e3c:	bf28      	it	cs
 8001e3e:	681a      	ldrcs	r2, [r3, #0]
 8001e40:	4805      	ldr	r0, [pc, #20]	; (8001e58 <chMBFetchI.constprop.37+0x38>)
 8001e42:	bf28      	it	cs
 8001e44:	60da      	strcs	r2, [r3, #12]
 8001e46:	f7ff ff9b 	bl	8001d80 <chSemSignalI>
 8001e4a:	2000      	movs	r0, #0
 8001e4c:	bd10      	pop	{r4, pc}
 8001e4e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001e52:	4770      	bx	lr
 8001e54:	20000874 	.word	0x20000874
 8001e58:	20000890 	.word	0x20000890
 8001e5c:	00000000 	.word	0x00000000

08001e60 <chSemResetI>:
 8001e60:	b570      	push	{r4, r5, r6, lr}
 8001e62:	6885      	ldr	r5, [r0, #8]
 8001e64:	6081      	str	r1, [r0, #8]
 8001e66:	3501      	adds	r5, #1
 8001e68:	2d00      	cmp	r5, #0
 8001e6a:	dc0c      	bgt.n	8001e86 <chSemResetI+0x26>
 8001e6c:	4604      	mov	r4, r0
 8001e6e:	f06f 0601 	mvn.w	r6, #1
 8001e72:	6860      	ldr	r0, [r4, #4]
 8001e74:	6843      	ldr	r3, [r0, #4]
 8001e76:	6063      	str	r3, [r4, #4]
 8001e78:	601c      	str	r4, [r3, #0]
 8001e7a:	f7ff fcc1 	bl	8001800 <chSchReadyI>
 8001e7e:	3501      	adds	r5, #1
 8001e80:	2d01      	cmp	r5, #1
 8001e82:	6206      	str	r6, [r0, #32]
 8001e84:	d1f5      	bne.n	8001e72 <chSemResetI+0x12>
 8001e86:	bd70      	pop	{r4, r5, r6, pc}
	...

08001e90 <chThdDequeueAllI>:
 8001e90:	b538      	push	{r3, r4, r5, lr}
 8001e92:	6803      	ldr	r3, [r0, #0]
 8001e94:	4298      	cmp	r0, r3
 8001e96:	d00b      	beq.n	8001eb0 <chThdDequeueAllI+0x20>
 8001e98:	4604      	mov	r4, r0
 8001e9a:	460d      	mov	r5, r1
 8001e9c:	681a      	ldr	r2, [r3, #0]
 8001e9e:	6022      	str	r2, [r4, #0]
 8001ea0:	4618      	mov	r0, r3
 8001ea2:	6054      	str	r4, [r2, #4]
 8001ea4:	621d      	str	r5, [r3, #32]
 8001ea6:	f7ff fcab 	bl	8001800 <chSchReadyI>
 8001eaa:	6823      	ldr	r3, [r4, #0]
 8001eac:	429c      	cmp	r4, r3
 8001eae:	d1f5      	bne.n	8001e9c <chThdDequeueAllI+0xc>
 8001eb0:	bd38      	pop	{r3, r4, r5, pc}
 8001eb2:	bf00      	nop
	...

08001ec0 <chVTDoResetI>:
 8001ec0:	4b1a      	ldr	r3, [pc, #104]	; (8001f2c <chVTDoResetI+0x6c>)
 8001ec2:	69da      	ldr	r2, [r3, #28]
 8001ec4:	4282      	cmp	r2, r0
 8001ec6:	b410      	push	{r4}
 8001ec8:	d00f      	beq.n	8001eea <chVTDoResetI+0x2a>
 8001eca:	e9d0 2100 	ldrd	r2, r1, [r0]
 8001ece:	600a      	str	r2, [r1, #0]
 8001ed0:	6802      	ldr	r2, [r0, #0]
 8001ed2:	331c      	adds	r3, #28
 8001ed4:	2400      	movs	r4, #0
 8001ed6:	429a      	cmp	r2, r3
 8001ed8:	6051      	str	r1, [r2, #4]
 8001eda:	60c4      	str	r4, [r0, #12]
 8001edc:	d003      	beq.n	8001ee6 <chVTDoResetI+0x26>
 8001ede:	6881      	ldr	r1, [r0, #8]
 8001ee0:	6893      	ldr	r3, [r2, #8]
 8001ee2:	440b      	add	r3, r1
 8001ee4:	6093      	str	r3, [r2, #8]
 8001ee6:	bc10      	pop	{r4}
 8001ee8:	4770      	bx	lr
 8001eea:	4618      	mov	r0, r3
 8001eec:	6811      	ldr	r1, [r2, #0]
 8001eee:	f840 1f1c 	str.w	r1, [r0, #28]!
 8001ef2:	2400      	movs	r4, #0
 8001ef4:	4281      	cmp	r1, r0
 8001ef6:	6048      	str	r0, [r1, #4]
 8001ef8:	60d4      	str	r4, [r2, #12]
 8001efa:	d012      	beq.n	8001f22 <chVTDoResetI+0x62>
 8001efc:	6894      	ldr	r4, [r2, #8]
 8001efe:	6888      	ldr	r0, [r1, #8]
 8001f00:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f02:	1903      	adds	r3, r0, r4
 8001f04:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8001f08:	608b      	str	r3, [r1, #8]
 8001f0a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001f0c:	1a8a      	subs	r2, r1, r2
 8001f0e:	4293      	cmp	r3, r2
 8001f10:	d9e9      	bls.n	8001ee6 <chVTDoResetI+0x26>
 8001f12:	1a9b      	subs	r3, r3, r2
 8001f14:	2b02      	cmp	r3, #2
 8001f16:	bf2c      	ite	cs
 8001f18:	18cb      	addcs	r3, r1, r3
 8001f1a:	1c8b      	addcc	r3, r1, #2
 8001f1c:	6363      	str	r3, [r4, #52]	; 0x34
 8001f1e:	bc10      	pop	{r4}
 8001f20:	4770      	bx	lr
 8001f22:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f26:	60dc      	str	r4, [r3, #12]
 8001f28:	e7dd      	b.n	8001ee6 <chVTDoResetI+0x26>
 8001f2a:	bf00      	nop
 8001f2c:	20001370 	.word	0x20001370

08001f30 <chVTDoSetI>:
 8001f30:	b4f0      	push	{r4, r5, r6, r7}
 8001f32:	4d1c      	ldr	r5, [pc, #112]	; (8001fa4 <chVTDoSetI+0x74>)
 8001f34:	462e      	mov	r6, r5
 8001f36:	2902      	cmp	r1, #2
 8001f38:	f856 4f1c 	ldr.w	r4, [r6, #28]!
 8001f3c:	6103      	str	r3, [r0, #16]
 8001f3e:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 8001f42:	bf38      	it	cc
 8001f44:	2102      	movcc	r1, #2
 8001f46:	42b4      	cmp	r4, r6
 8001f48:	60c2      	str	r2, [r0, #12]
 8001f4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f4c:	d01b      	beq.n	8001f86 <chVTDoSetI+0x56>
 8001f4e:	6aae      	ldr	r6, [r5, #40]	; 0x28
 8001f50:	68a2      	ldr	r2, [r4, #8]
 8001f52:	4419      	add	r1, r3
 8001f54:	1b8b      	subs	r3, r1, r6
 8001f56:	429a      	cmp	r2, r3
 8001f58:	d903      	bls.n	8001f62 <chVTDoSetI+0x32>
 8001f5a:	e012      	b.n	8001f82 <chVTDoSetI+0x52>
 8001f5c:	6824      	ldr	r4, [r4, #0]
 8001f5e:	1a9b      	subs	r3, r3, r2
 8001f60:	68a2      	ldr	r2, [r4, #8]
 8001f62:	429a      	cmp	r2, r3
 8001f64:	d3fa      	bcc.n	8001f5c <chVTDoSetI+0x2c>
 8001f66:	6862      	ldr	r2, [r4, #4]
 8001f68:	e9c0 4200 	strd	r4, r2, [r0]
 8001f6c:	6010      	str	r0, [r2, #0]
 8001f6e:	6060      	str	r0, [r4, #4]
 8001f70:	6083      	str	r3, [r0, #8]
 8001f72:	68a2      	ldr	r2, [r4, #8]
 8001f74:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001f78:	1ad3      	subs	r3, r2, r3
 8001f7a:	60a3      	str	r3, [r4, #8]
 8001f7c:	6269      	str	r1, [r5, #36]	; 0x24
 8001f7e:	bcf0      	pop	{r4, r5, r6, r7}
 8001f80:	4770      	bx	lr
 8001f82:	6379      	str	r1, [r7, #52]	; 0x34
 8001f84:	e7ed      	b.n	8001f62 <chVTDoSetI+0x32>
 8001f86:	62ab      	str	r3, [r5, #40]	; 0x28
 8001f88:	18ce      	adds	r6, r1, r3
 8001f8a:	2200      	movs	r2, #0
 8001f8c:	2302      	movs	r3, #2
 8001f8e:	e9c5 0007 	strd	r0, r0, [r5, #28]
 8001f92:	e9c0 4400 	strd	r4, r4, [r0]
 8001f96:	6081      	str	r1, [r0, #8]
 8001f98:	637e      	str	r6, [r7, #52]	; 0x34
 8001f9a:	613a      	str	r2, [r7, #16]
 8001f9c:	60fb      	str	r3, [r7, #12]
 8001f9e:	bcf0      	pop	{r4, r5, r6, r7}
 8001fa0:	4770      	bx	lr
 8001fa2:	bf00      	nop
 8001fa4:	20001370 	.word	0x20001370
	...

08001fb0 <test_start_timer.constprop.6>:
 8001fb0:	b508      	push	{r3, lr}
 8001fb2:	4b0b      	ldr	r3, [pc, #44]	; (8001fe0 <test_start_timer.constprop.6+0x30>)
 8001fb4:	2200      	movs	r2, #0
 8001fb6:	701a      	strb	r2, [r3, #0]
 8001fb8:	2320      	movs	r3, #32
 8001fba:	f383 8811 	msr	BASEPRI, r3
 8001fbe:	4809      	ldr	r0, [pc, #36]	; (8001fe4 <test_start_timer.constprop.6+0x34>)
 8001fc0:	68c3      	ldr	r3, [r0, #12]
 8001fc2:	b10b      	cbz	r3, 8001fc8 <test_start_timer.constprop.6+0x18>
 8001fc4:	f7ff ff7c 	bl	8001ec0 <chVTDoResetI>
 8001fc8:	2300      	movs	r3, #0
 8001fca:	4a07      	ldr	r2, [pc, #28]	; (8001fe8 <test_start_timer.constprop.6+0x38>)
 8001fcc:	4805      	ldr	r0, [pc, #20]	; (8001fe4 <test_start_timer.constprop.6+0x34>)
 8001fce:	f242 7110 	movw	r1, #10000	; 0x2710
 8001fd2:	f7ff ffad 	bl	8001f30 <chVTDoSetI>
 8001fd6:	2300      	movs	r3, #0
 8001fd8:	f383 8811 	msr	BASEPRI, r3
 8001fdc:	bd08      	pop	{r3, pc}
 8001fde:	bf00      	nop
 8001fe0:	20001cf0 	.word	0x20001cf0
 8001fe4:	20001d20 	.word	0x20001d20
 8001fe8:	08000411 	.word	0x08000411
 8001fec:	00000000 	.word	0x00000000

08001ff0 <chSysGetStatusAndLockX.part.2>:
 8001ff0:	f3ef 8305 	mrs	r3, IPSR
 8001ff4:	2320      	movs	r3, #32
 8001ff6:	f383 8811 	msr	BASEPRI, r3
 8001ffa:	4770      	bx	lr
 8001ffc:	0000      	movs	r0, r0
	...

08002000 <chSysPolledDelayX>:
 8002000:	4a03      	ldr	r2, [pc, #12]	; (8002010 <chSysPolledDelayX+0x10>)
 8002002:	6851      	ldr	r1, [r2, #4]
 8002004:	6853      	ldr	r3, [r2, #4]
 8002006:	1a5b      	subs	r3, r3, r1
 8002008:	4298      	cmp	r0, r3
 800200a:	d8fb      	bhi.n	8002004 <chSysPolledDelayX+0x4>
 800200c:	4770      	bx	lr
 800200e:	bf00      	nop
 8002010:	e0001000 	.word	0xe0001000
	...

08002020 <Vector14C>:
 8002020:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002024:	4f75      	ldr	r7, [pc, #468]	; (80021fc <Vector14C+0x1dc>)
 8002026:	6d3d      	ldr	r5, [r7, #80]	; 0x50
 8002028:	696e      	ldr	r6, [r5, #20]
 800202a:	69ab      	ldr	r3, [r5, #24]
 800202c:	401e      	ands	r6, r3
 800202e:	04f1      	lsls	r1, r6, #19
 8002030:	616e      	str	r6, [r5, #20]
 8002032:	d42f      	bmi.n	8002094 <Vector14C+0x74>
 8002034:	04b2      	lsls	r2, r6, #18
 8002036:	bf48      	it	mi
 8002038:	f8d5 3808 	ldrmi.w	r3, [r5, #2056]	; 0x808
 800203c:	0733      	lsls	r3, r6, #28
 800203e:	d504      	bpl.n	800204a <Vector14C+0x2a>
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	68db      	ldr	r3, [r3, #12]
 8002044:	b10b      	cbz	r3, 800204a <Vector14C+0x2a>
 8002046:	486d      	ldr	r0, [pc, #436]	; (80021fc <Vector14C+0x1dc>)
 8002048:	4798      	blx	r3
 800204a:	06f4      	lsls	r4, r6, #27
 800204c:	f100 8091 	bmi.w	8002172 <Vector14C+0x152>
 8002050:	0370      	lsls	r0, r6, #13
 8002052:	f8d5 4818 	ldr.w	r4, [r5, #2072]	; 0x818
 8002056:	d50b      	bpl.n	8002070 <Vector14C+0x50>
 8002058:	07e1      	lsls	r1, r4, #31
 800205a:	f100 80c4 	bmi.w	80021e6 <Vector14C+0x1c6>
 800205e:	07a2      	lsls	r2, r4, #30
 8002060:	f100 80b4 	bmi.w	80021cc <Vector14C+0x1ac>
 8002064:	0763      	lsls	r3, r4, #29
 8002066:	f100 80b7 	bmi.w	80021d8 <Vector14C+0x1b8>
 800206a:	0727      	lsls	r7, r4, #28
 800206c:	f100 80c2 	bmi.w	80021f4 <Vector14C+0x1d4>
 8002070:	0335      	lsls	r5, r6, #12
 8002072:	d50b      	bpl.n	800208c <Vector14C+0x6c>
 8002074:	03e0      	lsls	r0, r4, #15
 8002076:	f100 8096 	bmi.w	80021a6 <Vector14C+0x186>
 800207a:	03a1      	lsls	r1, r4, #14
 800207c:	f100 8099 	bmi.w	80021b2 <Vector14C+0x192>
 8002080:	0362      	lsls	r2, r4, #13
 8002082:	f100 809c 	bmi.w	80021be <Vector14C+0x19e>
 8002086:	0323      	lsls	r3, r4, #12
 8002088:	f100 8086 	bmi.w	8002198 <Vector14C+0x178>
 800208c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002090:	f7fe bfce 	b.w	8001030 <_port_irq_epilogue>
 8002094:	2300      	movs	r3, #0
 8002096:	e9c7 3302 	strd	r3, r3, [r7, #8]
 800209a:	2102      	movs	r1, #2
 800209c:	2220      	movs	r2, #32
 800209e:	64fb      	str	r3, [r7, #76]	; 0x4c
 80020a0:	e9c7 3304 	strd	r3, r3, [r7, #16]
 80020a4:	61bb      	str	r3, [r7, #24]
 80020a6:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 80020aa:	7039      	strb	r1, [r7, #0]
 80020ac:	612a      	str	r2, [r5, #16]
 80020ae:	692c      	ldr	r4, [r5, #16]
 80020b0:	f014 0420 	ands.w	r4, r4, #32
 80020b4:	d1fb      	bne.n	80020ae <Vector14C+0x8e>
 80020b6:	200c      	movs	r0, #12
 80020b8:	f7ff ffa2 	bl	8002000 <chSysPolledDelayX>
 80020bc:	f8d7 c054 	ldr.w	ip, [r7, #84]	; 0x54
 80020c0:	f8dc 0008 	ldr.w	r0, [ip, #8]
 80020c4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
 80020c8:	3001      	adds	r0, #1
 80020ca:	22ff      	movs	r2, #255	; 0xff
 80020cc:	eb05 1344 	add.w	r3, r5, r4, lsl #5
 80020d0:	3401      	adds	r4, #1
 80020d2:	4284      	cmp	r4, r0
 80020d4:	f8c3 1900 	str.w	r1, [r3, #2304]	; 0x900
 80020d8:	f8c3 1b00 	str.w	r1, [r3, #2816]	; 0xb00
 80020dc:	f8c3 2908 	str.w	r2, [r3, #2312]	; 0x908
 80020e0:	f8c3 2b08 	str.w	r2, [r3, #2824]	; 0xb08
 80020e4:	d1f2      	bne.n	80020cc <Vector14C+0xac>
 80020e6:	f8dc 3000 	ldr.w	r3, [ip]
 80020ea:	65bb      	str	r3, [r7, #88]	; 0x58
 80020ec:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80020f0:	f8dc 1000 	ldr.w	r1, [ip]
 80020f4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80020f6:	f8c5 2818 	str.w	r2, [r5, #2072]	; 0x818
 80020fa:	f04f 1201 	mov.w	r2, #65537	; 0x10001
 80020fe:	f8c5 281c 	str.w	r2, [r5, #2076]	; 0x81c
 8002102:	2210      	movs	r2, #16
 8002104:	6269      	str	r1, [r5, #36]	; 0x24
 8002106:	611a      	str	r2, [r3, #16]
 8002108:	691c      	ldr	r4, [r3, #16]
 800210a:	f014 0410 	ands.w	r4, r4, #16
 800210e:	d1fb      	bne.n	8002108 <Vector14C+0xe8>
 8002110:	200c      	movs	r0, #12
 8002112:	f7ff ff75 	bl	8002000 <chSysPolledDelayX>
 8002116:	f8d5 3800 	ldr.w	r3, [r5, #2048]	; 0x800
 800211a:	6879      	ldr	r1, [r7, #4]
 800211c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800211e:	f8d1 8000 	ldr.w	r8, [r1]
 8002122:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8002126:	f8c5 3800 	str.w	r3, [r5, #2048]	; 0x800
 800212a:	69ab      	ldr	r3, [r5, #24]
 800212c:	f443 2340 	orr.w	r3, r3, #786432	; 0xc0000
 8002130:	f043 0310 	orr.w	r3, r3, #16
 8002134:	61ab      	str	r3, [r5, #24]
 8002136:	2309      	movs	r3, #9
 8002138:	f8c5 3810 	str.w	r3, [r5, #2064]	; 0x810
 800213c:	f8c5 3814 	str.w	r3, [r5, #2068]	; 0x814
 8002140:	4b2f      	ldr	r3, [pc, #188]	; (8002200 <Vector14C+0x1e0>)
 8002142:	f8c5 4b10 	str.w	r4, [r5, #2832]	; 0xb10
 8002146:	f8c5 3b00 	str.w	r3, [r5, #2816]	; 0xb00
 800214a:	f8c5 4910 	str.w	r4, [r5, #2320]	; 0x910
 800214e:	f8c5 3900 	str.w	r3, [r5, #2304]	; 0x900
 8002152:	f102 0310 	add.w	r3, r2, #16
 8002156:	65bb      	str	r3, [r7, #88]	; 0x58
 8002158:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800215c:	4b29      	ldr	r3, [pc, #164]	; (8002204 <Vector14C+0x1e4>)
 800215e:	62aa      	str	r2, [r5, #40]	; 0x28
 8002160:	60fb      	str	r3, [r7, #12]
 8002162:	f1b8 0f00 	cmp.w	r8, #0
 8002166:	f43f af65 	beq.w	8002034 <Vector14C+0x14>
 800216a:	4621      	mov	r1, r4
 800216c:	4823      	ldr	r0, [pc, #140]	; (80021fc <Vector14C+0x1dc>)
 800216e:	47c0      	blx	r8
 8002170:	e760      	b.n	8002034 <Vector14C+0x14>
 8002172:	2320      	movs	r3, #32
 8002174:	f383 8811 	msr	BASEPRI, r3
 8002178:	69ab      	ldr	r3, [r5, #24]
 800217a:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800217c:	f023 0310 	bic.w	r3, r3, #16
 8002180:	61ab      	str	r3, [r5, #24]
 8002182:	b12a      	cbz	r2, 8002190 <Vector14C+0x170>
 8002184:	2300      	movs	r3, #0
 8002186:	663b      	str	r3, [r7, #96]	; 0x60
 8002188:	4610      	mov	r0, r2
 800218a:	6213      	str	r3, [r2, #32]
 800218c:	f7ff fb38 	bl	8001800 <chSchReadyI>
 8002190:	2300      	movs	r3, #0
 8002192:	f383 8811 	msr	BASEPRI, r3
 8002196:	e75b      	b.n	8002050 <Vector14C+0x30>
 8002198:	2003      	movs	r0, #3
 800219a:	f7fe fd01 	bl	8000ba0 <otg_epout_handler.constprop.13>
 800219e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80021a2:	f7fe bf45 	b.w	8001030 <_port_irq_epilogue>
 80021a6:	2000      	movs	r0, #0
 80021a8:	f7fe fcfa 	bl	8000ba0 <otg_epout_handler.constprop.13>
 80021ac:	03a1      	lsls	r1, r4, #14
 80021ae:	f57f af67 	bpl.w	8002080 <Vector14C+0x60>
 80021b2:	2001      	movs	r0, #1
 80021b4:	f7fe fcf4 	bl	8000ba0 <otg_epout_handler.constprop.13>
 80021b8:	0362      	lsls	r2, r4, #13
 80021ba:	f57f af64 	bpl.w	8002086 <Vector14C+0x66>
 80021be:	2002      	movs	r0, #2
 80021c0:	f7fe fcee 	bl	8000ba0 <otg_epout_handler.constprop.13>
 80021c4:	0323      	lsls	r3, r4, #12
 80021c6:	f57f af61 	bpl.w	800208c <Vector14C+0x6c>
 80021ca:	e7e5      	b.n	8002198 <Vector14C+0x178>
 80021cc:	2001      	movs	r0, #1
 80021ce:	f7ff fb47 	bl	8001860 <otg_epin_handler.constprop.12>
 80021d2:	0763      	lsls	r3, r4, #29
 80021d4:	f57f af49 	bpl.w	800206a <Vector14C+0x4a>
 80021d8:	2002      	movs	r0, #2
 80021da:	f7ff fb41 	bl	8001860 <otg_epin_handler.constprop.12>
 80021de:	0727      	lsls	r7, r4, #28
 80021e0:	f57f af46 	bpl.w	8002070 <Vector14C+0x50>
 80021e4:	e006      	b.n	80021f4 <Vector14C+0x1d4>
 80021e6:	2000      	movs	r0, #0
 80021e8:	f7ff fb3a 	bl	8001860 <otg_epin_handler.constprop.12>
 80021ec:	07a2      	lsls	r2, r4, #30
 80021ee:	f57f af39 	bpl.w	8002064 <Vector14C+0x44>
 80021f2:	e7eb      	b.n	80021cc <Vector14C+0x1ac>
 80021f4:	2003      	movs	r0, #3
 80021f6:	f7ff fb33 	bl	8001860 <otg_epin_handler.constprop.12>
 80021fa:	e739      	b.n	8002070 <Vector14C+0x50>
 80021fc:	200011c0 	.word	0x200011c0
 8002200:	10008040 	.word	0x10008040
 8002204:	08008db0 	.word	0x08008db0
	...

08002210 <chSysIntegrityCheckI>:
 8002210:	07c2      	lsls	r2, r0, #31
 8002212:	b410      	push	{r4}
 8002214:	d512      	bpl.n	800223c <chSysIntegrityCheckI+0x2c>
 8002216:	4b29      	ldr	r3, [pc, #164]	; (80022bc <chSysIntegrityCheckI+0xac>)
 8002218:	e9d3 1400 	ldrd	r1, r4, [r3]
 800221c:	4299      	cmp	r1, r3
 800221e:	d041      	beq.n	80022a4 <chSysIntegrityCheckI+0x94>
 8002220:	2200      	movs	r2, #0
 8002222:	6809      	ldr	r1, [r1, #0]
 8002224:	4299      	cmp	r1, r3
 8002226:	f102 0201 	add.w	r2, r2, #1
 800222a:	d1fa      	bne.n	8002222 <chSysIntegrityCheckI+0x12>
 800222c:	428c      	cmp	r4, r1
 800222e:	d036      	beq.n	800229e <chSysIntegrityCheckI+0x8e>
 8002230:	6864      	ldr	r4, [r4, #4]
 8002232:	429c      	cmp	r4, r3
 8002234:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8002238:	d1fa      	bne.n	8002230 <chSysIntegrityCheckI+0x20>
 800223a:	bb82      	cbnz	r2, 800229e <chSysIntegrityCheckI+0x8e>
 800223c:	0783      	lsls	r3, r0, #30
 800223e:	d513      	bpl.n	8002268 <chSysIntegrityCheckI+0x58>
 8002240:	4c1e      	ldr	r4, [pc, #120]	; (80022bc <chSysIntegrityCheckI+0xac>)
 8002242:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8002246:	341c      	adds	r4, #28
 8002248:	42a2      	cmp	r2, r4
 800224a:	d02f      	beq.n	80022ac <chSysIntegrityCheckI+0x9c>
 800224c:	2300      	movs	r3, #0
 800224e:	6812      	ldr	r2, [r2, #0]
 8002250:	42a2      	cmp	r2, r4
 8002252:	f103 0301 	add.w	r3, r3, #1
 8002256:	d1fa      	bne.n	800224e <chSysIntegrityCheckI+0x3e>
 8002258:	4291      	cmp	r1, r2
 800225a:	d020      	beq.n	800229e <chSysIntegrityCheckI+0x8e>
 800225c:	6849      	ldr	r1, [r1, #4]
 800225e:	42a1      	cmp	r1, r4
 8002260:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8002264:	d1fa      	bne.n	800225c <chSysIntegrityCheckI+0x4c>
 8002266:	b9d3      	cbnz	r3, 800229e <chSysIntegrityCheckI+0x8e>
 8002268:	f010 0004 	ands.w	r0, r0, #4
 800226c:	d015      	beq.n	800229a <chSysIntegrityCheckI+0x8a>
 800226e:	4b13      	ldr	r3, [pc, #76]	; (80022bc <chSysIntegrityCheckI+0xac>)
 8002270:	e9d3 2104 	ldrd	r2, r1, [r3, #16]
 8002274:	429a      	cmp	r2, r3
 8002276:	f04f 0000 	mov.w	r0, #0
 800227a:	d01b      	beq.n	80022b4 <chSysIntegrityCheckI+0xa4>
 800227c:	6912      	ldr	r2, [r2, #16]
 800227e:	429a      	cmp	r2, r3
 8002280:	f100 0001 	add.w	r0, r0, #1
 8002284:	d1fa      	bne.n	800227c <chSysIntegrityCheckI+0x6c>
 8002286:	4291      	cmp	r1, r2
 8002288:	d009      	beq.n	800229e <chSysIntegrityCheckI+0x8e>
 800228a:	6949      	ldr	r1, [r1, #20]
 800228c:	4299      	cmp	r1, r3
 800228e:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 8002292:	d1fa      	bne.n	800228a <chSysIntegrityCheckI+0x7a>
 8002294:	3000      	adds	r0, #0
 8002296:	bf18      	it	ne
 8002298:	2001      	movne	r0, #1
 800229a:	bc10      	pop	{r4}
 800229c:	4770      	bx	lr
 800229e:	2001      	movs	r0, #1
 80022a0:	bc10      	pop	{r4}
 80022a2:	4770      	bx	lr
 80022a4:	429c      	cmp	r4, r3
 80022a6:	d0c9      	beq.n	800223c <chSysIntegrityCheckI+0x2c>
 80022a8:	2200      	movs	r2, #0
 80022aa:	e7c1      	b.n	8002230 <chSysIntegrityCheckI+0x20>
 80022ac:	42a1      	cmp	r1, r4
 80022ae:	d0db      	beq.n	8002268 <chSysIntegrityCheckI+0x58>
 80022b0:	2300      	movs	r3, #0
 80022b2:	e7d3      	b.n	800225c <chSysIntegrityCheckI+0x4c>
 80022b4:	4291      	cmp	r1, r2
 80022b6:	d1e8      	bne.n	800228a <chSysIntegrityCheckI+0x7a>
 80022b8:	e7ef      	b.n	800229a <chSysIntegrityCheckI+0x8a>
 80022ba:	bf00      	nop
 80022bc:	20001370 	.word	0x20001370

080022c0 <sys3_execute>:
 80022c0:	b538      	push	{r3, r4, r5, lr}
 80022c2:	2420      	movs	r4, #32
 80022c4:	f384 8811 	msr	BASEPRI, r4
 80022c8:	2001      	movs	r0, #1
 80022ca:	f7ff ffa1 	bl	8002210 <chSysIntegrityCheckI>
 80022ce:	2300      	movs	r3, #0
 80022d0:	f383 8811 	msr	BASEPRI, r3
 80022d4:	f080 0101 	eor.w	r1, r0, #1
 80022d8:	b2c9      	uxtb	r1, r1
 80022da:	2001      	movs	r0, #1
 80022dc:	f7fe fb08 	bl	80008f0 <_test_assert>
 80022e0:	b100      	cbz	r0, 80022e4 <sys3_execute+0x24>
 80022e2:	bd38      	pop	{r3, r4, r5, pc}
 80022e4:	4605      	mov	r5, r0
 80022e6:	f384 8811 	msr	BASEPRI, r4
 80022ea:	2002      	movs	r0, #2
 80022ec:	f7ff ff90 	bl	8002210 <chSysIntegrityCheckI>
 80022f0:	f385 8811 	msr	BASEPRI, r5
 80022f4:	f080 0101 	eor.w	r1, r0, #1
 80022f8:	b2c9      	uxtb	r1, r1
 80022fa:	2002      	movs	r0, #2
 80022fc:	f7fe faf8 	bl	80008f0 <_test_assert>
 8002300:	4605      	mov	r5, r0
 8002302:	2800      	cmp	r0, #0
 8002304:	d1ed      	bne.n	80022e2 <sys3_execute+0x22>
 8002306:	f384 8811 	msr	BASEPRI, r4
 800230a:	2004      	movs	r0, #4
 800230c:	f7ff ff80 	bl	8002210 <chSysIntegrityCheckI>
 8002310:	f385 8811 	msr	BASEPRI, r5
 8002314:	f080 0101 	eor.w	r1, r0, #1
 8002318:	b2c9      	uxtb	r1, r1
 800231a:	2003      	movs	r0, #3
 800231c:	f7fe fae8 	bl	80008f0 <_test_assert>
 8002320:	4605      	mov	r5, r0
 8002322:	2800      	cmp	r0, #0
 8002324:	d1dd      	bne.n	80022e2 <sys3_execute+0x22>
 8002326:	f384 8811 	msr	BASEPRI, r4
 800232a:	2008      	movs	r0, #8
 800232c:	f7ff ff70 	bl	8002210 <chSysIntegrityCheckI>
 8002330:	f385 8811 	msr	BASEPRI, r5
 8002334:	f080 0101 	eor.w	r1, r0, #1
 8002338:	b2c9      	uxtb	r1, r1
 800233a:	2004      	movs	r0, #4
 800233c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002340:	f7fe bad6 	b.w	80008f0 <_test_assert>
	...

08002350 <BusFault_Handler>:
 8002350:	b672      	cpsid	i
 8002352:	4b02      	ldr	r3, [pc, #8]	; (800235c <BusFault_Handler+0xc>)
 8002354:	4a02      	ldr	r2, [pc, #8]	; (8002360 <BusFault_Handler+0x10>)
 8002356:	62da      	str	r2, [r3, #44]	; 0x2c
 8002358:	e7fe      	b.n	8002358 <BusFault_Handler+0x8>
 800235a:	bf00      	nop
 800235c:	20001370 	.word	0x20001370
 8002360:	08008900 	.word	0x08008900
	...

08002370 <_strtok.constprop.2>:
 8002370:	b538      	push	{r3, r4, r5, lr}
 8002372:	460d      	mov	r5, r1
 8002374:	b198      	cbz	r0, 800239e <_strtok.constprop.2+0x2e>
 8002376:	4604      	mov	r4, r0
 8002378:	6028      	str	r0, [r5, #0]
 800237a:	490d      	ldr	r1, [pc, #52]	; (80023b0 <_strtok.constprop.2+0x40>)
 800237c:	4620      	mov	r0, r4
 800237e:	f006 f957 	bl	8008630 <strspn>
 8002382:	4404      	add	r4, r0
 8002384:	4620      	mov	r0, r4
 8002386:	490a      	ldr	r1, [pc, #40]	; (80023b0 <_strtok.constprop.2+0x40>)
 8002388:	f006 f92a 	bl	80085e0 <strpbrk>
 800238c:	b168      	cbz	r0, 80023aa <_strtok.constprop.2+0x3a>
 800238e:	1c42      	adds	r2, r0, #1
 8002390:	2300      	movs	r3, #0
 8002392:	602a      	str	r2, [r5, #0]
 8002394:	7003      	strb	r3, [r0, #0]
 8002396:	7823      	ldrb	r3, [r4, #0]
 8002398:	b123      	cbz	r3, 80023a4 <_strtok.constprop.2+0x34>
 800239a:	4620      	mov	r0, r4
 800239c:	bd38      	pop	{r3, r4, r5, pc}
 800239e:	680c      	ldr	r4, [r1, #0]
 80023a0:	2c00      	cmp	r4, #0
 80023a2:	d1ea      	bne.n	800237a <_strtok.constprop.2+0xa>
 80023a4:	2400      	movs	r4, #0
 80023a6:	4620      	mov	r0, r4
 80023a8:	bd38      	pop	{r3, r4, r5, pc}
 80023aa:	6028      	str	r0, [r5, #0]
 80023ac:	e7f3      	b.n	8002396 <_strtok.constprop.2+0x26>
 80023ae:	bf00      	nop
 80023b0:	080088f0 	.word	0x080088f0
	...

080023c0 <chprintf.lto_priv.88>:
 80023c0:	b40e      	push	{r1, r2, r3}
 80023c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023c6:	b086      	sub	sp, #24
 80023c8:	af0f      	add	r7, sp, #60	; 0x3c
 80023ca:	4604      	mov	r4, r0
 80023cc:	f857 6b04 	ldr.w	r6, [r7], #4
 80023d0:	9702      	str	r7, [sp, #8]
 80023d2:	f04f 0800 	mov.w	r8, #0
 80023d6:	7831      	ldrb	r1, [r6, #0]
 80023d8:	1c72      	adds	r2, r6, #1
 80023da:	b161      	cbz	r1, 80023f6 <chprintf.lto_priv.88+0x36>
 80023dc:	2925      	cmp	r1, #37	; 0x25
 80023de:	d010      	beq.n	8002402 <chprintf.lto_priv.88+0x42>
 80023e0:	6823      	ldr	r3, [r4, #0]
 80023e2:	4616      	mov	r6, r2
 80023e4:	689b      	ldr	r3, [r3, #8]
 80023e6:	4620      	mov	r0, r4
 80023e8:	4798      	blx	r3
 80023ea:	7831      	ldrb	r1, [r6, #0]
 80023ec:	f108 0801 	add.w	r8, r8, #1
 80023f0:	1c72      	adds	r2, r6, #1
 80023f2:	2900      	cmp	r1, #0
 80023f4:	d1f2      	bne.n	80023dc <chprintf.lto_priv.88+0x1c>
 80023f6:	4640      	mov	r0, r8
 80023f8:	b006      	add	sp, #24
 80023fa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023fe:	b003      	add	sp, #12
 8002400:	4770      	bx	lr
 8002402:	7871      	ldrb	r1, [r6, #1]
 8002404:	292d      	cmp	r1, #45	; 0x2d
 8002406:	bf03      	ittte	eq
 8002408:	78b1      	ldrbeq	r1, [r6, #2]
 800240a:	1cb2      	addeq	r2, r6, #2
 800240c:	f04f 0c01 	moveq.w	ip, #1
 8002410:	f04f 0c00 	movne.w	ip, #0
 8002414:	2930      	cmp	r1, #48	; 0x30
 8002416:	bf03      	ittte	eq
 8002418:	7851      	ldrbeq	r1, [r2, #1]
 800241a:	3201      	addeq	r2, #1
 800241c:	f04f 0a30 	moveq.w	sl, #48	; 0x30
 8002420:	f04f 0a20 	movne.w	sl, #32
 8002424:	3201      	adds	r2, #1
 8002426:	2500      	movs	r5, #0
 8002428:	e005      	b.n	8002436 <chprintf.lto_priv.88+0x76>
 800242a:	783b      	ldrb	r3, [r7, #0]
 800242c:	3704      	adds	r7, #4
 800242e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8002432:	eb03 0540 	add.w	r5, r3, r0, lsl #1
 8002436:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800243a:	b2db      	uxtb	r3, r3
 800243c:	2b09      	cmp	r3, #9
 800243e:	4696      	mov	lr, r2
 8002440:	eb05 0085 	add.w	r0, r5, r5, lsl #2
 8002444:	d9f3      	bls.n	800242e <chprintf.lto_priv.88+0x6e>
 8002446:	292a      	cmp	r1, #42	; 0x2a
 8002448:	d0ef      	beq.n	800242a <chprintf.lto_priv.88+0x6a>
 800244a:	292e      	cmp	r1, #46	; 0x2e
 800244c:	f04f 0200 	mov.w	r2, #0
 8002450:	d048      	beq.n	80024e4 <chprintf.lto_priv.88+0x124>
 8002452:	f001 03df 	and.w	r3, r1, #223	; 0xdf
 8002456:	2b4c      	cmp	r3, #76	; 0x4c
 8002458:	f10e 0601 	add.w	r6, lr, #1
 800245c:	d04e      	beq.n	80024fc <chprintf.lto_priv.88+0x13c>
 800245e:	f1a1 0341 	sub.w	r3, r1, #65	; 0x41
 8002462:	f1a1 0044 	sub.w	r0, r1, #68	; 0x44
 8002466:	b2db      	uxtb	r3, r3
 8002468:	2834      	cmp	r0, #52	; 0x34
 800246a:	f200 8116 	bhi.w	800269a <chprintf.lto_priv.88+0x2da>
 800246e:	e8df f010 	tbh	[pc, r0, lsl #1]
 8002472:	0165      	.short	0x0165
 8002474:	01140114 	.word	0x01140114
 8002478:	01140114 	.word	0x01140114
 800247c:	01140165 	.word	0x01140165
 8002480:	01140114 	.word	0x01140114
 8002484:	01140114 	.word	0x01140114
 8002488:	01140110 	.word	0x01140110
 800248c:	01140114 	.word	0x01140114
 8002490:	01140114 	.word	0x01140114
 8002494:	011400e1 	.word	0x011400e1
 8002498:	016e0114 	.word	0x016e0114
 800249c:	01140114 	.word	0x01140114
 80024a0:	01140114 	.word	0x01140114
 80024a4:	01140114 	.word	0x01140114
 80024a8:	01140114 	.word	0x01140114
 80024ac:	01140114 	.word	0x01140114
 80024b0:	0165008f 	.word	0x0165008f
 80024b4:	01140114 	.word	0x01140114
 80024b8:	01140114 	.word	0x01140114
 80024bc:	01140165 	.word	0x01140165
 80024c0:	01140114 	.word	0x01140114
 80024c4:	01140114 	.word	0x01140114
 80024c8:	01140110 	.word	0x01140110
 80024cc:	01140114 	.word	0x01140114
 80024d0:	0114006d 	.word	0x0114006d
 80024d4:	011400e1 	.word	0x011400e1
 80024d8:	016e0114 	.word	0x016e0114
 80024dc:	783b      	ldrb	r3, [r7, #0]
 80024de:	3704      	adds	r7, #4
 80024e0:	eb03 0240 	add.w	r2, r3, r0, lsl #1
 80024e4:	f81e 1b01 	ldrb.w	r1, [lr], #1
 80024e8:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 80024ec:	b2db      	uxtb	r3, r3
 80024ee:	2b09      	cmp	r3, #9
 80024f0:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 80024f4:	d9f4      	bls.n	80024e0 <chprintf.lto_priv.88+0x120>
 80024f6:	292a      	cmp	r1, #42	; 0x2a
 80024f8:	d0f0      	beq.n	80024dc <chprintf.lto_priv.88+0x11c>
 80024fa:	e7aa      	b.n	8002452 <chprintf.lto_priv.88+0x92>
 80024fc:	f89e 3000 	ldrb.w	r3, [lr]
 8002500:	b30b      	cbz	r3, 8002546 <chprintf.lto_priv.88+0x186>
 8002502:	f1a3 0144 	sub.w	r1, r3, #68	; 0x44
 8002506:	2934      	cmp	r1, #52	; 0x34
 8002508:	f200 80c9 	bhi.w	800269e <chprintf.lto_priv.88+0x2de>
 800250c:	e8df f001 	tbb	[pc, r1]
 8002510:	c7c7c7d7 	.word	0xc7c7c7d7
 8002514:	c7c7d7c7 	.word	0xc7c7d7c7
 8002518:	c2c7c7c7 	.word	0xc2c7c7c7
 800251c:	c7c7c7c7 	.word	0xc7c7c7c7
 8002520:	c7c793c7 	.word	0xc7c793c7
 8002524:	c7c7c7d4 	.word	0xc7c7c7d4
 8002528:	c7c7c7c7 	.word	0xc7c7c7c7
 800252c:	41c7c7c7 	.word	0x41c7c7c7
 8002530:	c7c7c7d7 	.word	0xc7c7c7d7
 8002534:	c7c7d7c7 	.word	0xc7c7d7c7
 8002538:	c2c7c7c7 	.word	0xc2c7c7c7
 800253c:	1fc7c7c7 	.word	0x1fc7c7c7
 8002540:	c7c793c7 	.word	0xc7c793c7
 8002544:	d4          	.byte	0xd4
 8002545:	00          	.byte	0x00
 8002546:	460b      	mov	r3, r1
 8002548:	4676      	mov	r6, lr
 800254a:	e7da      	b.n	8002502 <chprintf.lto_priv.88+0x142>
 800254c:	4676      	mov	r6, lr
 800254e:	f8d7 9000 	ldr.w	r9, [r7]
 8002552:	3704      	adds	r7, #4
 8002554:	f1b9 0f00 	cmp.w	r9, #0
 8002558:	f000 80fd 	beq.w	8002756 <chprintf.lto_priv.88+0x396>
 800255c:	f899 3000 	ldrb.w	r3, [r9]
 8002560:	4648      	mov	r0, r9
 8002562:	2a00      	cmp	r2, #0
 8002564:	f040 80fe 	bne.w	8002764 <chprintf.lto_priv.88+0x3a4>
 8002568:	2b00      	cmp	r3, #0
 800256a:	f000 810c 	beq.w	8002786 <chprintf.lto_priv.88+0x3c6>
 800256e:	f647 72fe 	movw	r2, #32766	; 0x7ffe
 8002572:	464b      	mov	r3, r9
 8002574:	e001      	b.n	800257a <chprintf.lto_priv.88+0x1ba>
 8002576:	3a01      	subs	r2, #1
 8002578:	d403      	bmi.n	8002582 <chprintf.lto_priv.88+0x1c2>
 800257a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800257e:	2900      	cmp	r1, #0
 8002580:	d1f9      	bne.n	8002576 <chprintf.lto_priv.88+0x1b6>
 8002582:	1a1b      	subs	r3, r3, r0
 8002584:	1aed      	subs	r5, r5, r3
 8002586:	3b01      	subs	r3, #1
 8002588:	9300      	str	r3, [sp, #0]
 800258a:	f04f 0a20 	mov.w	sl, #32
 800258e:	e00b      	b.n	80025a8 <chprintf.lto_priv.88+0x1e8>
 8002590:	4676      	mov	r6, lr
 8002592:	f10d 0918 	add.w	r9, sp, #24
 8002596:	683b      	ldr	r3, [r7, #0]
 8002598:	f809 3d0c 	strb.w	r3, [r9, #-12]!
 800259c:	2300      	movs	r3, #0
 800259e:	3d01      	subs	r5, #1
 80025a0:	3704      	adds	r7, #4
 80025a2:	9300      	str	r3, [sp, #0]
 80025a4:	f04f 0a20 	mov.w	sl, #32
 80025a8:	2d00      	cmp	r5, #0
 80025aa:	db1e      	blt.n	80025ea <chprintf.lto_priv.88+0x22a>
 80025ac:	f1bc 0f00 	cmp.w	ip, #0
 80025b0:	d17e      	bne.n	80026b0 <chprintf.lto_priv.88+0x2f0>
 80025b2:	426b      	negs	r3, r5
 80025b4:	2d00      	cmp	r5, #0
 80025b6:	d07a      	beq.n	80026ae <chprintf.lto_priv.88+0x2ee>
 80025b8:	f899 1000 	ldrb.w	r1, [r9]
 80025bc:	6822      	ldr	r2, [r4, #0]
 80025be:	292d      	cmp	r1, #45	; 0x2d
 80025c0:	6892      	ldr	r2, [r2, #8]
 80025c2:	f000 80a8 	beq.w	8002716 <chprintf.lto_priv.88+0x356>
 80025c6:	469b      	mov	fp, r3
 80025c8:	e001      	b.n	80025ce <chprintf.lto_priv.88+0x20e>
 80025ca:	6823      	ldr	r3, [r4, #0]
 80025cc:	689a      	ldr	r2, [r3, #8]
 80025ce:	4651      	mov	r1, sl
 80025d0:	4620      	mov	r0, r4
 80025d2:	4790      	blx	r2
 80025d4:	f11b 0b01 	adds.w	fp, fp, #1
 80025d8:	d1f7      	bne.n	80025ca <chprintf.lto_priv.88+0x20a>
 80025da:	9a00      	ldr	r2, [sp, #0]
 80025dc:	2a00      	cmp	r2, #0
 80025de:	465b      	mov	r3, fp
 80025e0:	44a8      	add	r8, r5
 80025e2:	f6ff aef8 	blt.w	80023d6 <chprintf.lto_priv.88+0x16>
 80025e6:	461d      	mov	r5, r3
 80025e8:	e004      	b.n	80025f4 <chprintf.lto_priv.88+0x234>
 80025ea:	9b00      	ldr	r3, [sp, #0]
 80025ec:	2b00      	cmp	r3, #0
 80025ee:	f6ff aef2 	blt.w	80023d6 <chprintf.lto_priv.88+0x16>
 80025f2:	2500      	movs	r5, #0
 80025f4:	f8dd b000 	ldr.w	fp, [sp]
 80025f8:	6823      	ldr	r3, [r4, #0]
 80025fa:	f819 1b01 	ldrb.w	r1, [r9], #1
 80025fe:	689b      	ldr	r3, [r3, #8]
 8002600:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8002604:	4620      	mov	r0, r4
 8002606:	4798      	blx	r3
 8002608:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
 800260c:	d1f4      	bne.n	80025f8 <chprintf.lto_priv.88+0x238>
 800260e:	9b00      	ldr	r3, [sp, #0]
 8002610:	f108 0801 	add.w	r8, r8, #1
 8002614:	4443      	add	r3, r8
 8002616:	4698      	mov	r8, r3
 8002618:	2d00      	cmp	r5, #0
 800261a:	f43f aedc 	beq.w	80023d6 <chprintf.lto_priv.88+0x16>
 800261e:	46a9      	mov	r9, r5
 8002620:	6823      	ldr	r3, [r4, #0]
 8002622:	4651      	mov	r1, sl
 8002624:	689b      	ldr	r3, [r3, #8]
 8002626:	4620      	mov	r0, r4
 8002628:	4798      	blx	r3
 800262a:	f1b9 0901 	subs.w	r9, r9, #1
 800262e:	d1f7      	bne.n	8002620 <chprintf.lto_priv.88+0x260>
 8002630:	44a8      	add	r8, r5
 8002632:	e6d0      	b.n	80023d6 <chprintf.lto_priv.88+0x16>
 8002634:	4676      	mov	r6, lr
 8002636:	f04f 090a 	mov.w	r9, #10
 800263a:	f857 2b04 	ldr.w	r2, [r7], #4
 800263e:	f10d 0117 	add.w	r1, sp, #23
 8002642:	e000      	b.n	8002646 <chprintf.lto_priv.88+0x286>
 8002644:	4601      	mov	r1, r0
 8002646:	fbb2 fef9 	udiv	lr, r2, r9
 800264a:	fb09 221e 	mls	r2, r9, lr, r2
 800264e:	f102 0330 	add.w	r3, r2, #48	; 0x30
 8002652:	2b39      	cmp	r3, #57	; 0x39
 8002654:	bfc8      	it	gt
 8002656:	f102 0337 	addgt.w	r3, r2, #55	; 0x37
 800265a:	b2db      	uxtb	r3, r3
 800265c:	4672      	mov	r2, lr
 800265e:	f801 3c01 	strb.w	r3, [r1, #-1]
 8002662:	1e48      	subs	r0, r1, #1
 8002664:	2a00      	cmp	r2, #0
 8002666:	d1ed      	bne.n	8002644 <chprintf.lto_priv.88+0x284>
 8002668:	f10d 0217 	add.w	r2, sp, #23
 800266c:	eba2 0b00 	sub.w	fp, r2, r0
 8002670:	f10d 090c 	add.w	r9, sp, #12
 8002674:	464a      	mov	r2, r9
 8002676:	4458      	add	r0, fp
 8002678:	e001      	b.n	800267e <chprintf.lto_priv.88+0x2be>
 800267a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800267e:	f802 3b01 	strb.w	r3, [r2], #1
 8002682:	4281      	cmp	r1, r0
 8002684:	d1f9      	bne.n	800267a <chprintf.lto_priv.88+0x2ba>
 8002686:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
 800268a:	eba5 050b 	sub.w	r5, r5, fp
 800268e:	9300      	str	r3, [sp, #0]
 8002690:	e78a      	b.n	80025a8 <chprintf.lto_priv.88+0x1e8>
 8002692:	4676      	mov	r6, lr
 8002694:	f04f 0908 	mov.w	r9, #8
 8002698:	e7cf      	b.n	800263a <chprintf.lto_priv.88+0x27a>
 800269a:	4676      	mov	r6, lr
 800269c:	460b      	mov	r3, r1
 800269e:	f10d 0918 	add.w	r9, sp, #24
 80026a2:	3d01      	subs	r5, #1
 80026a4:	f809 3d0c 	strb.w	r3, [r9, #-12]!
 80026a8:	2300      	movs	r3, #0
 80026aa:	9300      	str	r3, [sp, #0]
 80026ac:	e77c      	b.n	80025a8 <chprintf.lto_priv.88+0x1e8>
 80026ae:	461d      	mov	r5, r3
 80026b0:	9b00      	ldr	r3, [sp, #0]
 80026b2:	2b00      	cmp	r3, #0
 80026b4:	da9e      	bge.n	80025f4 <chprintf.lto_priv.88+0x234>
 80026b6:	e7af      	b.n	8002618 <chprintf.lto_priv.88+0x258>
 80026b8:	f04f 0910 	mov.w	r9, #16
 80026bc:	e7bd      	b.n	800263a <chprintf.lto_priv.88+0x27a>
 80026be:	1d39      	adds	r1, r7, #4
 80026c0:	683a      	ldr	r2, [r7, #0]
 80026c2:	460f      	mov	r7, r1
 80026c4:	2a00      	cmp	r2, #0
 80026c6:	db55      	blt.n	8002774 <chprintf.lto_priv.88+0x3b4>
 80026c8:	f10d 090c 	add.w	r9, sp, #12
 80026cc:	4648      	mov	r0, r9
 80026ce:	f100 030b 	add.w	r3, r0, #11
 80026d2:	9300      	str	r3, [sp, #0]
 80026d4:	4619      	mov	r1, r3
 80026d6:	4b2f      	ldr	r3, [pc, #188]	; (8002794 <chprintf.lto_priv.88+0x3d4>)
 80026d8:	fba3 e302 	umull	lr, r3, r3, r2
 80026dc:	08db      	lsrs	r3, r3, #3
 80026de:	eb03 0b83 	add.w	fp, r3, r3, lsl #2
 80026e2:	469e      	mov	lr, r3
 80026e4:	eba2 034b 	sub.w	r3, r2, fp, lsl #1
 80026e8:	3330      	adds	r3, #48	; 0x30
 80026ea:	b2db      	uxtb	r3, r3
 80026ec:	4672      	mov	r2, lr
 80026ee:	f801 3d01 	strb.w	r3, [r1, #-1]!
 80026f2:	2a00      	cmp	r2, #0
 80026f4:	d1ef      	bne.n	80026d6 <chprintf.lto_priv.88+0x316>
 80026f6:	9a00      	ldr	r2, [sp, #0]
 80026f8:	1a52      	subs	r2, r2, r1
 80026fa:	4402      	add	r2, r0
 80026fc:	e001      	b.n	8002702 <chprintf.lto_priv.88+0x342>
 80026fe:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8002702:	f800 3b01 	strb.w	r3, [r0], #1
 8002706:	4290      	cmp	r0, r2
 8002708:	d1f9      	bne.n	80026fe <chprintf.lto_priv.88+0x33e>
 800270a:	eba0 0009 	sub.w	r0, r0, r9
 800270e:	1e43      	subs	r3, r0, #1
 8002710:	1a2d      	subs	r5, r5, r0
 8002712:	9300      	str	r3, [sp, #0]
 8002714:	e748      	b.n	80025a8 <chprintf.lto_priv.88+0x1e8>
 8002716:	f1ba 0f30 	cmp.w	sl, #48	; 0x30
 800271a:	f47f af54 	bne.w	80025c6 <chprintf.lto_priv.88+0x206>
 800271e:	4620      	mov	r0, r4
 8002720:	9301      	str	r3, [sp, #4]
 8002722:	4790      	blx	r2
 8002724:	9b00      	ldr	r3, [sp, #0]
 8002726:	6822      	ldr	r2, [r4, #0]
 8002728:	3b01      	subs	r3, #1
 800272a:	9300      	str	r3, [sp, #0]
 800272c:	9b01      	ldr	r3, [sp, #4]
 800272e:	6892      	ldr	r2, [r2, #8]
 8002730:	f108 0801 	add.w	r8, r8, #1
 8002734:	f109 0901 	add.w	r9, r9, #1
 8002738:	469b      	mov	fp, r3
 800273a:	e748      	b.n	80025ce <chprintf.lto_priv.88+0x20e>
 800273c:	4639      	mov	r1, r7
 800273e:	2b19      	cmp	r3, #25
 8002740:	f851 2b04 	ldr.w	r2, [r1], #4
 8002744:	4676      	mov	r6, lr
 8002746:	bf88      	it	hi
 8002748:	460f      	movhi	r7, r1
 800274a:	d8bb      	bhi.n	80026c4 <chprintf.lto_priv.88+0x304>
 800274c:	e7b8      	b.n	80026c0 <chprintf.lto_priv.88+0x300>
 800274e:	4676      	mov	r6, lr
 8002750:	f04f 0910 	mov.w	r9, #16
 8002754:	e771      	b.n	800263a <chprintf.lto_priv.88+0x27a>
 8002756:	4810      	ldr	r0, [pc, #64]	; (8002798 <chprintf.lto_priv.88+0x3d8>)
 8002758:	4681      	mov	r9, r0
 800275a:	2a00      	cmp	r2, #0
 800275c:	f43f af07 	beq.w	800256e <chprintf.lto_priv.88+0x1ae>
 8002760:	3a01      	subs	r2, #1
 8002762:	e706      	b.n	8002572 <chprintf.lto_priv.88+0x1b2>
 8002764:	2b00      	cmp	r3, #0
 8002766:	d1fb      	bne.n	8002760 <chprintf.lto_priv.88+0x3a0>
 8002768:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800276c:	9300      	str	r3, [sp, #0]
 800276e:	f04f 0a20 	mov.w	sl, #32
 8002772:	e719      	b.n	80025a8 <chprintf.lto_priv.88+0x1e8>
 8002774:	232d      	movs	r3, #45	; 0x2d
 8002776:	4252      	negs	r2, r2
 8002778:	f88d 300c 	strb.w	r3, [sp, #12]
 800277c:	f10d 000d 	add.w	r0, sp, #13
 8002780:	f10d 090c 	add.w	r9, sp, #12
 8002784:	e7a3      	b.n	80026ce <chprintf.lto_priv.88+0x30e>
 8002786:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800278a:	9300      	str	r3, [sp, #0]
 800278c:	f04f 0a20 	mov.w	sl, #32
 8002790:	e70c      	b.n	80025ac <chprintf.lto_priv.88+0x1ec>
 8002792:	bf00      	nop
 8002794:	cccccccd 	.word	0xcccccccd
 8002798:	08008aa0 	.word	0x08008aa0
 800279c:	00000000 	.word	0x00000000

080027a0 <cmd_systime>:
 80027a0:	2900      	cmp	r1, #0
 80027a2:	dd03      	ble.n	80027ac <cmd_systime+0xc>
 80027a4:	4a07      	ldr	r2, [pc, #28]	; (80027c4 <cmd_systime+0x24>)
 80027a6:	4908      	ldr	r1, [pc, #32]	; (80027c8 <cmd_systime+0x28>)
 80027a8:	f7ff be0a 	b.w	80023c0 <chprintf.lto_priv.88>
 80027ac:	2320      	movs	r3, #32
 80027ae:	f383 8811 	msr	BASEPRI, r3
 80027b2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80027b6:	2300      	movs	r3, #0
 80027b8:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80027ba:	f383 8811 	msr	BASEPRI, r3
 80027be:	4903      	ldr	r1, [pc, #12]	; (80027cc <cmd_systime+0x2c>)
 80027c0:	f7ff bdfe 	b.w	80023c0 <chprintf.lto_priv.88>
 80027c4:	08008cc0 	.word	0x08008cc0
 80027c8:	08008cc8 	.word	0x08008cc8
 80027cc:	08008cd4 	.word	0x08008cd4

080027d0 <cmd_info>:
 80027d0:	2900      	cmp	r1, #0
 80027d2:	dd03      	ble.n	80027dc <cmd_info+0xc>
 80027d4:	4a19      	ldr	r2, [pc, #100]	; (800283c <cmd_info+0x6c>)
 80027d6:	491a      	ldr	r1, [pc, #104]	; (8002840 <cmd_info+0x70>)
 80027d8:	f7ff bdf2 	b.w	80023c0 <chprintf.lto_priv.88>
 80027dc:	b510      	push	{r4, lr}
 80027de:	4a19      	ldr	r2, [pc, #100]	; (8002844 <cmd_info+0x74>)
 80027e0:	4919      	ldr	r1, [pc, #100]	; (8002848 <cmd_info+0x78>)
 80027e2:	b082      	sub	sp, #8
 80027e4:	4604      	mov	r4, r0
 80027e6:	f7ff fdeb 	bl	80023c0 <chprintf.lto_priv.88>
 80027ea:	4a18      	ldr	r2, [pc, #96]	; (800284c <cmd_info+0x7c>)
 80027ec:	4918      	ldr	r1, [pc, #96]	; (8002850 <cmd_info+0x80>)
 80027ee:	4620      	mov	r0, r4
 80027f0:	f7ff fde6 	bl	80023c0 <chprintf.lto_priv.88>
 80027f4:	4a17      	ldr	r2, [pc, #92]	; (8002854 <cmd_info+0x84>)
 80027f6:	4918      	ldr	r1, [pc, #96]	; (8002858 <cmd_info+0x88>)
 80027f8:	4620      	mov	r0, r4
 80027fa:	f7ff fde1 	bl	80023c0 <chprintf.lto_priv.88>
 80027fe:	4a17      	ldr	r2, [pc, #92]	; (800285c <cmd_info+0x8c>)
 8002800:	4917      	ldr	r1, [pc, #92]	; (8002860 <cmd_info+0x90>)
 8002802:	4620      	mov	r0, r4
 8002804:	f7ff fddc 	bl	80023c0 <chprintf.lto_priv.88>
 8002808:	4a16      	ldr	r2, [pc, #88]	; (8002864 <cmd_info+0x94>)
 800280a:	4917      	ldr	r1, [pc, #92]	; (8002868 <cmd_info+0x98>)
 800280c:	4620      	mov	r0, r4
 800280e:	f7ff fdd7 	bl	80023c0 <chprintf.lto_priv.88>
 8002812:	4a16      	ldr	r2, [pc, #88]	; (800286c <cmd_info+0x9c>)
 8002814:	4916      	ldr	r1, [pc, #88]	; (8002870 <cmd_info+0xa0>)
 8002816:	4620      	mov	r0, r4
 8002818:	f7ff fdd2 	bl	80023c0 <chprintf.lto_priv.88>
 800281c:	4a15      	ldr	r2, [pc, #84]	; (8002874 <cmd_info+0xa4>)
 800281e:	4916      	ldr	r1, [pc, #88]	; (8002878 <cmd_info+0xa8>)
 8002820:	4620      	mov	r0, r4
 8002822:	f7ff fdcd 	bl	80023c0 <chprintf.lto_priv.88>
 8002826:	4b15      	ldr	r3, [pc, #84]	; (800287c <cmd_info+0xac>)
 8002828:	9300      	str	r3, [sp, #0]
 800282a:	4620      	mov	r0, r4
 800282c:	4b14      	ldr	r3, [pc, #80]	; (8002880 <cmd_info+0xb0>)
 800282e:	4a15      	ldr	r2, [pc, #84]	; (8002884 <cmd_info+0xb4>)
 8002830:	4915      	ldr	r1, [pc, #84]	; (8002888 <cmd_info+0xb8>)
 8002832:	f7ff fdc5 	bl	80023c0 <chprintf.lto_priv.88>
 8002836:	b002      	add	sp, #8
 8002838:	bd10      	pop	{r4, pc}
 800283a:	bf00      	nop
 800283c:	08008ab0 	.word	0x08008ab0
 8002840:	08008cc8 	.word	0x08008cc8
 8002844:	08008ab8 	.word	0x08008ab8
 8002848:	08008ac0 	.word	0x08008ac0
 800284c:	08008ad4 	.word	0x08008ad4
 8002850:	08008b1c 	.word	0x08008b1c
 8002854:	08008b30 	.word	0x08008b30
 8002858:	08008b3c 	.word	0x08008b3c
 800285c:	08008b50 	.word	0x08008b50
 8002860:	08008b5c 	.word	0x08008b5c
 8002864:	08008b70 	.word	0x08008b70
 8002868:	08008b88 	.word	0x08008b88
 800286c:	08008b9c 	.word	0x08008b9c
 8002870:	08008bc8 	.word	0x08008bc8
 8002874:	08008bdc 	.word	0x08008bdc
 8002878:	08008c04 	.word	0x08008c04
 800287c:	08008c40 	.word	0x08008c40
 8002880:	08008c18 	.word	0x08008c18
 8002884:	08008c1c 	.word	0x08008c1c
 8002888:	08008c28 	.word	0x08008c28
 800288c:	00000000 	.word	0x00000000

08002890 <bmk13_execute>:
 8002890:	b510      	push	{r4, lr}
 8002892:	482f      	ldr	r0, [pc, #188]	; (8002950 <bmk13_execute+0xc0>)
 8002894:	4c2f      	ldr	r4, [pc, #188]	; (8002954 <bmk13_execute+0xc4>)
 8002896:	f7fe f89b 	bl	80009d0 <test_print>
 800289a:	f44f 70a8 	mov.w	r0, #336	; 0x150
 800289e:	f7fd ff6f 	bl	8000780 <test_printn.part.1>
 80028a2:	4620      	mov	r0, r4
 80028a4:	f7fe f874 	bl	8000990 <test_println>
 80028a8:	482b      	ldr	r0, [pc, #172]	; (8002958 <bmk13_execute+0xc8>)
 80028aa:	f7fe f891 	bl	80009d0 <test_print>
 80028ae:	2044      	movs	r0, #68	; 0x44
 80028b0:	f7fd ff66 	bl	8000780 <test_printn.part.1>
 80028b4:	4620      	mov	r0, r4
 80028b6:	f7fe f86b 	bl	8000990 <test_println>
 80028ba:	4828      	ldr	r0, [pc, #160]	; (800295c <bmk13_execute+0xcc>)
 80028bc:	f7fe f888 	bl	80009d0 <test_print>
 80028c0:	2014      	movs	r0, #20
 80028c2:	f7fd ff5d 	bl	8000780 <test_printn.part.1>
 80028c6:	4620      	mov	r0, r4
 80028c8:	f7fe f862 	bl	8000990 <test_println>
 80028cc:	4824      	ldr	r0, [pc, #144]	; (8002960 <bmk13_execute+0xd0>)
 80028ce:	f7fe f87f 	bl	80009d0 <test_print>
 80028d2:	200c      	movs	r0, #12
 80028d4:	f7fd ff54 	bl	8000780 <test_printn.part.1>
 80028d8:	4620      	mov	r0, r4
 80028da:	f7fe f859 	bl	8000990 <test_println>
 80028de:	4821      	ldr	r0, [pc, #132]	; (8002964 <bmk13_execute+0xd4>)
 80028e0:	f7fe f876 	bl	80009d0 <test_print>
 80028e4:	2004      	movs	r0, #4
 80028e6:	f7fd ff4b 	bl	8000780 <test_printn.part.1>
 80028ea:	4620      	mov	r0, r4
 80028ec:	f7fe f850 	bl	8000990 <test_println>
 80028f0:	481d      	ldr	r0, [pc, #116]	; (8002968 <bmk13_execute+0xd8>)
 80028f2:	f7fe f86d 	bl	80009d0 <test_print>
 80028f6:	2014      	movs	r0, #20
 80028f8:	f7fd ff42 	bl	8000780 <test_printn.part.1>
 80028fc:	4620      	mov	r0, r4
 80028fe:	f7fe f847 	bl	8000990 <test_println>
 8002902:	481a      	ldr	r0, [pc, #104]	; (800296c <bmk13_execute+0xdc>)
 8002904:	f7fe f864 	bl	80009d0 <test_print>
 8002908:	2010      	movs	r0, #16
 800290a:	f7fd ff39 	bl	8000780 <test_printn.part.1>
 800290e:	4620      	mov	r0, r4
 8002910:	f7fe f83e 	bl	8000990 <test_println>
 8002914:	4816      	ldr	r0, [pc, #88]	; (8002970 <bmk13_execute+0xe0>)
 8002916:	f7fe f85b 	bl	80009d0 <test_print>
 800291a:	2008      	movs	r0, #8
 800291c:	f7fd ff30 	bl	8000780 <test_printn.part.1>
 8002920:	4620      	mov	r0, r4
 8002922:	f7fe f835 	bl	8000990 <test_println>
 8002926:	4813      	ldr	r0, [pc, #76]	; (8002974 <bmk13_execute+0xe4>)
 8002928:	f7fe f852 	bl	80009d0 <test_print>
 800292c:	2024      	movs	r0, #36	; 0x24
 800292e:	f7fd ff27 	bl	8000780 <test_printn.part.1>
 8002932:	4620      	mov	r0, r4
 8002934:	f7fe f82c 	bl	8000990 <test_println>
 8002938:	480f      	ldr	r0, [pc, #60]	; (8002978 <bmk13_execute+0xe8>)
 800293a:	f7fe f849 	bl	80009d0 <test_print>
 800293e:	2028      	movs	r0, #40	; 0x28
 8002940:	f7fd ff1e 	bl	8000780 <test_printn.part.1>
 8002944:	4620      	mov	r0, r4
 8002946:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800294a:	f7fe b821 	b.w	8000990 <test_println>
 800294e:	bf00      	nop
 8002950:	08008970 	.word	0x08008970
 8002954:	08008980 	.word	0x08008980
 8002958:	08008988 	.word	0x08008988
 800295c:	08008998 	.word	0x08008998
 8002960:	080089a8 	.word	0x080089a8
 8002964:	080089b8 	.word	0x080089b8
 8002968:	080089c8 	.word	0x080089c8
 800296c:	080089d8 	.word	0x080089d8
 8002970:	080089e8 	.word	0x080089e8
 8002974:	080089f8 	.word	0x080089f8
 8002978:	08008a08 	.word	0x08008a08
 800297c:	00000000 	.word	0x00000000

08002980 <_usb_ep0setup>:
 8002980:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8002984:	2300      	movs	r3, #0
 8002986:	b570      	push	{r4, r5, r6, lr}
 8002988:	f880 3034 	strb.w	r3, [r0, #52]	; 0x34
 800298c:	68cb      	ldr	r3, [r1, #12]
 800298e:	6842      	ldr	r2, [r0, #4]
 8002990:	6a1b      	ldr	r3, [r3, #32]
 8002992:	6819      	ldr	r1, [r3, #0]
 8002994:	685b      	ldr	r3, [r3, #4]
 8002996:	6483      	str	r3, [r0, #72]	; 0x48
 8002998:	6441      	str	r1, [r0, #68]	; 0x44
 800299a:	6893      	ldr	r3, [r2, #8]
 800299c:	4604      	mov	r4, r0
 800299e:	2b00      	cmp	r3, #0
 80029a0:	d037      	beq.n	8002a12 <_usb_ep0setup+0x92>
 80029a2:	4798      	blx	r3
 80029a4:	2800      	cmp	r0, #0
 80029a6:	d034      	beq.n	8002a12 <_usb_ep0setup+0x92>
 80029a8:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80029aa:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80029ae:	f894 004b 	ldrb.w	r0, [r4, #75]	; 0x4b
 80029b2:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80029b6:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80029ba:	428b      	cmp	r3, r1
 80029bc:	bf2c      	ite	cs
 80029be:	460b      	movcs	r3, r1
 80029c0:	63e3      	strcc	r3, [r4, #60]	; 0x3c
 80029c2:	0610      	lsls	r0, r2, #24
 80029c4:	68e1      	ldr	r1, [r4, #12]
 80029c6:	f100 80a6 	bmi.w	8002b16 <_usb_ep0setup+0x196>
 80029ca:	2b00      	cmp	r3, #0
 80029cc:	f000 8089 	beq.w	8002ae2 <_usb_ep0setup+0x162>
 80029d0:	2204      	movs	r2, #4
 80029d2:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
 80029d6:	698a      	ldr	r2, [r1, #24]
 80029d8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80029da:	60d1      	str	r1, [r2, #12]
 80029dc:	2100      	movs	r1, #0
 80029de:	6053      	str	r3, [r2, #4]
 80029e0:	7011      	strb	r1, [r2, #0]
 80029e2:	6091      	str	r1, [r2, #8]
 80029e4:	4620      	mov	r0, r4
 80029e6:	f7fe f8bb 	bl	8000b60 <usb_lld_prepare_receive>
 80029ea:	2320      	movs	r3, #32
 80029ec:	f383 8811 	msr	BASEPRI, r3
 80029f0:	8963      	ldrh	r3, [r4, #10]
 80029f2:	07da      	lsls	r2, r3, #31
 80029f4:	d409      	bmi.n	8002a0a <_usb_ep0setup+0x8a>
 80029f6:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80029f8:	f8d1 2b00 	ldr.w	r2, [r1, #2816]	; 0xb00
 80029fc:	f043 0301 	orr.w	r3, r3, #1
 8002a00:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002a04:	8163      	strh	r3, [r4, #10]
 8002a06:	f8c1 2b00 	str.w	r2, [r1, #2816]	; 0xb00
 8002a0a:	2300      	movs	r3, #0
 8002a0c:	f383 8811 	msr	BASEPRI, r3
 8002a10:	bd70      	pop	{r4, r5, r6, pc}
 8002a12:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8002a16:	f012 0560 	ands.w	r5, r2, #96	; 0x60
 8002a1a:	4610      	mov	r0, r2
 8002a1c:	d016      	beq.n	8002a4c <_usb_ep0setup+0xcc>
 8002a1e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002a20:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8002a24:	6861      	ldr	r1, [r4, #4]
 8002a26:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8002a2a:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8002a2e:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8002a32:	680d      	ldr	r5, [r1, #0]
 8002a34:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8002a38:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8002a3c:	b115      	cbz	r5, 8002a44 <_usb_ep0setup+0xc4>
 8002a3e:	2105      	movs	r1, #5
 8002a40:	4620      	mov	r0, r4
 8002a42:	47a8      	blx	r5
 8002a44:	2306      	movs	r3, #6
 8002a46:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8002a4a:	bd70      	pop	{r4, r5, r6, pc}
 8002a4c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002a50:	f002 037f 	and.w	r3, r2, #127	; 0x7f
 8002a54:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8002a58:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8002a5c:	f000 810b 	beq.w	8002c76 <_usb_ep0setup+0x2f6>
 8002a60:	d917      	bls.n	8002a92 <_usb_ep0setup+0x112>
 8002a62:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8002a66:	f000 80ed 	beq.w	8002c44 <_usb_ep0setup+0x2c4>
 8002a6a:	f240 808c 	bls.w	8002b86 <_usb_ep0setup+0x206>
 8002a6e:	f5b3 6f10 	cmp.w	r3, #2304	; 0x900
 8002a72:	d066      	beq.n	8002b42 <_usb_ep0setup+0x1c2>
 8002a74:	f640 4102 	movw	r1, #3074	; 0xc02
 8002a78:	428b      	cmp	r3, r1
 8002a7a:	f000 80ca 	beq.w	8002c12 <_usb_ep0setup+0x292>
 8002a7e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8002a82:	d1cc      	bne.n	8002a1e <_usb_ep0setup+0x9e>
 8002a84:	f104 034f 	add.w	r3, r4, #79	; 0x4f
 8002a88:	2101      	movs	r1, #1
 8002a8a:	6425      	str	r5, [r4, #64]	; 0x40
 8002a8c:	e9c4 310e 	strd	r3, r1, [r4, #56]	; 0x38
 8002a90:	e78d      	b.n	80029ae <_usb_ep0setup+0x2e>
 8002a92:	2b02      	cmp	r3, #2
 8002a94:	f000 80a4 	beq.w	8002be0 <_usb_ep0setup+0x260>
 8002a98:	f240 809a 	bls.w	8002bd0 <_usb_ep0setup+0x250>
 8002a9c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002aa0:	d062      	beq.n	8002b68 <_usb_ep0setup+0x1e8>
 8002aa2:	f5b3 7f81 	cmp.w	r3, #258	; 0x102
 8002aa6:	d1ba      	bne.n	8002a1e <_usb_ep0setup+0x9e>
 8002aa8:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8002aac:	2b00      	cmp	r3, #0
 8002aae:	d1b6      	bne.n	8002a1e <_usb_ep0setup+0x9e>
 8002ab0:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8002ab4:	f013 010f 	ands.w	r1, r3, #15
 8002ab8:	d00c      	beq.n	8002ad4 <_usb_ep0setup+0x154>
 8002aba:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8002abc:	f013 0f80 	tst.w	r3, #128	; 0x80
 8002ac0:	eb02 1341 	add.w	r3, r2, r1, lsl #5
 8002ac4:	f040 80f2 	bne.w	8002cac <_usb_ep0setup+0x32c>
 8002ac8:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8002acc:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8002ad0:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8002ad4:	2300      	movs	r3, #0
 8002ad6:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 8002ada:	6423      	str	r3, [r4, #64]	; 0x40
 8002adc:	0603      	lsls	r3, r0, #24
 8002ade:	68e1      	ldr	r1, [r4, #12]
 8002ae0:	d425      	bmi.n	8002b2e <_usb_ep0setup+0x1ae>
 8002ae2:	2305      	movs	r3, #5
 8002ae4:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8002ae8:	694b      	ldr	r3, [r1, #20]
 8002aea:	2100      	movs	r1, #0
 8002aec:	e9c3 1101 	strd	r1, r1, [r3, #4]
 8002af0:	7019      	strb	r1, [r3, #0]
 8002af2:	60d9      	str	r1, [r3, #12]
 8002af4:	4620      	mov	r0, r4
 8002af6:	f7fe f80b 	bl	8000b10 <usb_lld_prepare_transmit>
 8002afa:	2320      	movs	r3, #32
 8002afc:	f383 8811 	msr	BASEPRI, r3
 8002b00:	8923      	ldrh	r3, [r4, #8]
 8002b02:	f013 0101 	ands.w	r1, r3, #1
 8002b06:	d180      	bne.n	8002a0a <_usb_ep0setup+0x8a>
 8002b08:	f043 0301 	orr.w	r3, r3, #1
 8002b0c:	8123      	strh	r3, [r4, #8]
 8002b0e:	4620      	mov	r0, r4
 8002b10:	f7fd ffe6 	bl	8000ae0 <usb_lld_start_in>
 8002b14:	e779      	b.n	8002a0a <_usb_ep0setup+0x8a>
 8002b16:	b153      	cbz	r3, 8002b2e <_usb_ep0setup+0x1ae>
 8002b18:	2201      	movs	r2, #1
 8002b1a:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
 8002b1e:	694a      	ldr	r2, [r1, #20]
 8002b20:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8002b22:	60d1      	str	r1, [r2, #12]
 8002b24:	2100      	movs	r1, #0
 8002b26:	6053      	str	r3, [r2, #4]
 8002b28:	7011      	strb	r1, [r2, #0]
 8002b2a:	6091      	str	r1, [r2, #8]
 8002b2c:	e7e2      	b.n	8002af4 <_usb_ep0setup+0x174>
 8002b2e:	2303      	movs	r3, #3
 8002b30:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8002b34:	698b      	ldr	r3, [r1, #24]
 8002b36:	2100      	movs	r1, #0
 8002b38:	7019      	strb	r1, [r3, #0]
 8002b3a:	60d9      	str	r1, [r3, #12]
 8002b3c:	e9c3 1101 	strd	r1, r1, [r3, #4]
 8002b40:	e750      	b.n	80029e4 <_usb_ep0setup+0x64>
 8002b42:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8002b46:	f884 304f 	strb.w	r3, [r4, #79]	; 0x4f
 8002b4a:	2b00      	cmp	r3, #0
 8002b4c:	f040 80a2 	bne.w	8002c94 <_usb_ep0setup+0x314>
 8002b50:	2303      	movs	r3, #3
 8002b52:	7023      	strb	r3, [r4, #0]
 8002b54:	6863      	ldr	r3, [r4, #4]
 8002b56:	681b      	ldr	r3, [r3, #0]
 8002b58:	2b00      	cmp	r3, #0
 8002b5a:	d0bb      	beq.n	8002ad4 <_usb_ep0setup+0x154>
 8002b5c:	4620      	mov	r0, r4
 8002b5e:	2102      	movs	r1, #2
 8002b60:	4798      	blx	r3
 8002b62:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8002b66:	e7b5      	b.n	8002ad4 <_usb_ep0setup+0x154>
 8002b68:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8002b6c:	2b01      	cmp	r3, #1
 8002b6e:	f47f af56 	bne.w	8002a1e <_usb_ep0setup+0x9e>
 8002b72:	f8b4 304c 	ldrh.w	r3, [r4, #76]	; 0x4c
 8002b76:	63a5      	str	r5, [r4, #56]	; 0x38
 8002b78:	f023 0302 	bic.w	r3, r3, #2
 8002b7c:	e9c4 550f 	strd	r5, r5, [r4, #60]	; 0x3c
 8002b80:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 8002b84:	e7aa      	b.n	8002adc <_usb_ep0setup+0x15c>
 8002b86:	f240 3202 	movw	r2, #770	; 0x302
 8002b8a:	4293      	cmp	r3, r2
 8002b8c:	d043      	beq.n	8002c16 <_usb_ep0setup+0x296>
 8002b8e:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8002b92:	f47f af44 	bne.w	8002a1e <_usb_ep0setup+0x9e>
 8002b96:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8002b9a:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8002b9e:	d199      	bne.n	8002ad4 <_usb_ep0setup+0x154>
 8002ba0:	f894 1046 	ldrb.w	r1, [r4, #70]	; 0x46
 8002ba4:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8002ba6:	f884 104e 	strb.w	r1, [r4, #78]	; 0x4e
 8002baa:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 8002bae:	6860      	ldr	r0, [r4, #4]
 8002bb0:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8002bb4:	6805      	ldr	r5, [r0, #0]
 8002bb6:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8002bba:	f8c2 3800 	str.w	r3, [r2, #2048]	; 0x800
 8002bbe:	b115      	cbz	r5, 8002bc6 <_usb_ep0setup+0x246>
 8002bc0:	2101      	movs	r1, #1
 8002bc2:	4620      	mov	r0, r4
 8002bc4:	47a8      	blx	r5
 8002bc6:	2303      	movs	r3, #3
 8002bc8:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8002bcc:	7023      	strb	r3, [r4, #0]
 8002bce:	e781      	b.n	8002ad4 <_usb_ep0setup+0x154>
 8002bd0:	b9e3      	cbnz	r3, 8002c0c <_usb_ep0setup+0x28c>
 8002bd2:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 8002bd6:	2102      	movs	r1, #2
 8002bd8:	6423      	str	r3, [r4, #64]	; 0x40
 8002bda:	e9c4 010e 	strd	r0, r1, [r4, #56]	; 0x38
 8002bde:	e6e6      	b.n	80029ae <_usb_ep0setup+0x2e>
 8002be0:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 8002be4:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002be6:	0605      	lsls	r5, r0, #24
 8002be8:	f000 010f 	and.w	r1, r0, #15
 8002bec:	d455      	bmi.n	8002c9a <_usb_ep0setup+0x31a>
 8002bee:	3158      	adds	r1, #88	; 0x58
 8002bf0:	0149      	lsls	r1, r1, #5
 8002bf2:	5859      	ldr	r1, [r3, r1]
 8002bf4:	040e      	lsls	r6, r1, #16
 8002bf6:	f57f af13 	bpl.w	8002a20 <_usb_ep0setup+0xa0>
 8002bfa:	028b      	lsls	r3, r1, #10
 8002bfc:	d554      	bpl.n	8002ca8 <_usb_ep0setup+0x328>
 8002bfe:	4b32      	ldr	r3, [pc, #200]	; (8002cc8 <_usb_ep0setup+0x348>)
 8002c00:	63a3      	str	r3, [r4, #56]	; 0x38
 8002c02:	2102      	movs	r1, #2
 8002c04:	2300      	movs	r3, #0
 8002c06:	e9c4 130f 	strd	r1, r3, [r4, #60]	; 0x3c
 8002c0a:	e6d0      	b.n	80029ae <_usb_ep0setup+0x2e>
 8002c0c:	2b01      	cmp	r3, #1
 8002c0e:	f47f af06 	bne.w	8002a1e <_usb_ep0setup+0x9e>
 8002c12:	4b2e      	ldr	r3, [pc, #184]	; (8002ccc <_usb_ep0setup+0x34c>)
 8002c14:	e7f4      	b.n	8002c00 <_usb_ep0setup+0x280>
 8002c16:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	f47f aeff 	bne.w	8002a1e <_usb_ep0setup+0x9e>
 8002c20:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8002c24:	f013 010f 	ands.w	r1, r3, #15
 8002c28:	f43f af54 	beq.w	8002ad4 <_usb_ep0setup+0x154>
 8002c2c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8002c2e:	061d      	lsls	r5, r3, #24
 8002c30:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 8002c34:	d441      	bmi.n	8002cba <_usb_ep0setup+0x33a>
 8002c36:	f8d2 3b00 	ldr.w	r3, [r2, #2816]	; 0xb00
 8002c3a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002c3e:	f8c2 3b00 	str.w	r3, [r2, #2816]	; 0xb00
 8002c42:	e747      	b.n	8002ad4 <_usb_ep0setup+0x154>
 8002c44:	f894 0049 	ldrb.w	r0, [r4, #73]	; 0x49
 8002c48:	6861      	ldr	r1, [r4, #4]
 8002c4a:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8002c4e:	684e      	ldr	r6, [r1, #4]
 8002c50:	f894 2046 	ldrb.w	r2, [r4, #70]	; 0x46
 8002c54:	f894 1047 	ldrb.w	r1, [r4, #71]	; 0x47
 8002c58:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8002c5c:	4620      	mov	r0, r4
 8002c5e:	47b0      	blx	r6
 8002c60:	2800      	cmp	r0, #0
 8002c62:	f43f aedc 	beq.w	8002a1e <_usb_ep0setup+0x9e>
 8002c66:	e9d0 1300 	ldrd	r1, r3, [r0]
 8002c6a:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8002c6e:	6425      	str	r5, [r4, #64]	; 0x40
 8002c70:	e9c4 310e 	strd	r3, r1, [r4, #56]	; 0x38
 8002c74:	e69b      	b.n	80029ae <_usb_ep0setup+0x2e>
 8002c76:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8002c7a:	2b01      	cmp	r3, #1
 8002c7c:	f47f aecf 	bne.w	8002a1e <_usb_ep0setup+0x9e>
 8002c80:	f8b4 304c 	ldrh.w	r3, [r4, #76]	; 0x4c
 8002c84:	63a5      	str	r5, [r4, #56]	; 0x38
 8002c86:	f043 0302 	orr.w	r3, r3, #2
 8002c8a:	e9c4 550f 	strd	r5, r5, [r4, #60]	; 0x3c
 8002c8e:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 8002c92:	e723      	b.n	8002adc <_usb_ep0setup+0x15c>
 8002c94:	2304      	movs	r3, #4
 8002c96:	7023      	strb	r3, [r4, #0]
 8002c98:	e75c      	b.n	8002b54 <_usb_ep0setup+0x1d4>
 8002c9a:	3148      	adds	r1, #72	; 0x48
 8002c9c:	0149      	lsls	r1, r1, #5
 8002c9e:	5859      	ldr	r1, [r3, r1]
 8002ca0:	0408      	lsls	r0, r1, #16
 8002ca2:	f57f aebd 	bpl.w	8002a20 <_usb_ep0setup+0xa0>
 8002ca6:	e7a8      	b.n	8002bfa <_usb_ep0setup+0x27a>
 8002ca8:	4b09      	ldr	r3, [pc, #36]	; (8002cd0 <_usb_ep0setup+0x350>)
 8002caa:	e7a9      	b.n	8002c00 <_usb_ep0setup+0x280>
 8002cac:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8002cb0:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8002cb4:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8002cb8:	e70c      	b.n	8002ad4 <_usb_ep0setup+0x154>
 8002cba:	f8d2 3900 	ldr.w	r3, [r2, #2304]	; 0x900
 8002cbe:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002cc2:	f8c2 3900 	str.w	r3, [r2, #2304]	; 0x900
 8002cc6:	e705      	b.n	8002ad4 <_usb_ep0setup+0x154>
 8002cc8:	08008e70 	.word	0x08008e70
 8002ccc:	08009b40 	.word	0x08009b40
 8002cd0:	08008920 	.word	0x08008920
	...

08002ce0 <usbInitEndpointI>:
 8002ce0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002ce4:	6953      	ldr	r3, [r2, #20]
 8002ce6:	460d      	mov	r5, r1
 8002ce8:	b12b      	cbz	r3, 8002cf6 <usbInitEndpointI+0x16>
 8002cea:	2100      	movs	r1, #0
 8002cec:	6019      	str	r1, [r3, #0]
 8002cee:	6059      	str	r1, [r3, #4]
 8002cf0:	6099      	str	r1, [r3, #8]
 8002cf2:	60d9      	str	r1, [r3, #12]
 8002cf4:	6119      	str	r1, [r3, #16]
 8002cf6:	6993      	ldr	r3, [r2, #24]
 8002cf8:	b12b      	cbz	r3, 8002d06 <usbInitEndpointI+0x26>
 8002cfa:	2100      	movs	r1, #0
 8002cfc:	6019      	str	r1, [r3, #0]
 8002cfe:	6059      	str	r1, [r3, #4]
 8002d00:	6099      	str	r1, [r3, #8]
 8002d02:	60d9      	str	r1, [r3, #12]
 8002d04:	6119      	str	r1, [r3, #16]
 8002d06:	6813      	ldr	r3, [r2, #0]
 8002d08:	fa0f f885 	sxth.w	r8, r5
 8002d0c:	eb00 0788 	add.w	r7, r0, r8, lsl #2
 8002d10:	f003 0303 	and.w	r3, r3, #3
 8002d14:	2b02      	cmp	r3, #2
 8002d16:	60fa      	str	r2, [r7, #12]
 8002d18:	f000 8097 	beq.w	8002e4a <usbInitEndpointI+0x16a>
 8002d1c:	2b03      	cmp	r3, #3
 8002d1e:	f000 8091 	beq.w	8002e44 <usbInitEndpointI+0x164>
 8002d22:	4c4b      	ldr	r4, [pc, #300]	; (8002e50 <usbInitEndpointI+0x170>)
 8002d24:	494b      	ldr	r1, [pc, #300]	; (8002e54 <usbInitEndpointI+0x174>)
 8002d26:	2b01      	cmp	r3, #1
 8002d28:	bf0c      	ite	eq
 8002d2a:	46a1      	moveq	r9, r4
 8002d2c:	4689      	movne	r9, r1
 8002d2e:	6d04      	ldr	r4, [r0, #80]	; 0x50
 8002d30:	68d6      	ldr	r6, [r2, #12]
 8002d32:	0169      	lsls	r1, r5, #5
 8002d34:	1863      	adds	r3, r4, r1
 8002d36:	f04f 0c00 	mov.w	ip, #0
 8002d3a:	f8c3 cb10 	str.w	ip, [r3, #2832]	; 0xb10
 8002d3e:	f105 0310 	add.w	r3, r5, #16
 8002d42:	f04f 0c01 	mov.w	ip, #1
 8002d46:	fa0c f303 	lsl.w	r3, ip, r3
 8002d4a:	2e00      	cmp	r6, #0
 8002d4c:	d04b      	beq.n	8002de6 <usbInitEndpointI+0x106>
 8002d4e:	f8b2 c012 	ldrh.w	ip, [r2, #18]
 8002d52:	f105 0658 	add.w	r6, r5, #88	; 0x58
 8002d56:	0176      	lsls	r6, r6, #5
 8002d58:	ea4c 0c09 	orr.w	ip, ip, r9
 8002d5c:	f844 c006 	str.w	ip, [r4, r6]
 8002d60:	f8d4 681c 	ldr.w	r6, [r4, #2076]	; 0x81c
 8002d64:	4333      	orrs	r3, r6
 8002d66:	f8c4 381c 	str.w	r3, [r4, #2076]	; 0x81c
 8002d6a:	1866      	adds	r6, r4, r1
 8002d6c:	f8d2 c008 	ldr.w	ip, [r2, #8]
 8002d70:	2300      	movs	r3, #0
 8002d72:	01a9      	lsls	r1, r5, #6
 8002d74:	f8c6 3910 	str.w	r3, [r6, #2320]	; 0x910
 8002d78:	f041 0120 	orr.w	r1, r1, #32
 8002d7c:	1e6b      	subs	r3, r5, #1
 8002d7e:	f1bc 0f00 	cmp.w	ip, #0
 8002d82:	d03f      	beq.n	8002e04 <usbInitEndpointI+0x124>
 8002d84:	f8b2 c01c 	ldrh.w	ip, [r2, #28]
 8002d88:	8a16      	ldrh	r6, [r2, #16]
 8002d8a:	f1bc 0f01 	cmp.w	ip, #1
 8002d8e:	ea4f 0296 	mov.w	r2, r6, lsr #2
 8002d92:	f103 0340 	add.w	r3, r3, #64	; 0x40
 8002d96:	6d86      	ldr	r6, [r0, #88]	; 0x58
 8002d98:	bf88      	it	hi
 8002d9a:	fb0c f202 	mulhi.w	r2, ip, r2
 8002d9e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002da2:	eb02 0c06 	add.w	ip, r2, r6
 8002da6:	ea46 4202 	orr.w	r2, r6, r2, lsl #16
 8002daa:	f8c0 c058 	str.w	ip, [r0, #88]	; 0x58
 8002dae:	605a      	str	r2, [r3, #4]
 8002db0:	6121      	str	r1, [r4, #16]
 8002db2:	6923      	ldr	r3, [r4, #16]
 8002db4:	069a      	lsls	r2, r3, #26
 8002db6:	d4fc      	bmi.n	8002db2 <usbInitEndpointI+0xd2>
 8002db8:	200c      	movs	r0, #12
 8002dba:	f7ff f921 	bl	8002000 <chSysPolledDelayX>
 8002dbe:	68fb      	ldr	r3, [r7, #12]
 8002dc0:	8a1b      	ldrh	r3, [r3, #16]
 8002dc2:	f105 0248 	add.w	r2, r5, #72	; 0x48
 8002dc6:	ea43 5385 	orr.w	r3, r3, r5, lsl #22
 8002dca:	0152      	lsls	r2, r2, #5
 8002dcc:	ea43 0309 	orr.w	r3, r3, r9
 8002dd0:	50a3      	str	r3, [r4, r2]
 8002dd2:	2101      	movs	r1, #1
 8002dd4:	f8d4 381c 	ldr.w	r3, [r4, #2076]	; 0x81c
 8002dd8:	fa01 f505 	lsl.w	r5, r1, r5
 8002ddc:	431d      	orrs	r5, r3
 8002dde:	f8c4 581c 	str.w	r5, [r4, #2076]	; 0x81c
 8002de2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002de6:	eb04 1c48 	add.w	ip, r4, r8, lsl #5
 8002dea:	f8dc 6b00 	ldr.w	r6, [ip, #2816]	; 0xb00
 8002dee:	f426 4600 	bic.w	r6, r6, #32768	; 0x8000
 8002df2:	f8cc 6b00 	str.w	r6, [ip, #2816]	; 0xb00
 8002df6:	f8d4 681c 	ldr.w	r6, [r4, #2076]	; 0x81c
 8002dfa:	ea26 0303 	bic.w	r3, r6, r3
 8002dfe:	f8c4 381c 	str.w	r3, [r4, #2076]	; 0x81c
 8002e02:	e7b2      	b.n	8002d6a <usbInitEndpointI+0x8a>
 8002e04:	f105 033f 	add.w	r3, r5, #63	; 0x3f
 8002e08:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002e0c:	4a12      	ldr	r2, [pc, #72]	; (8002e58 <usbInitEndpointI+0x178>)
 8002e0e:	605a      	str	r2, [r3, #4]
 8002e10:	6121      	str	r1, [r4, #16]
 8002e12:	6923      	ldr	r3, [r4, #16]
 8002e14:	069b      	lsls	r3, r3, #26
 8002e16:	d4fc      	bmi.n	8002e12 <usbInitEndpointI+0x132>
 8002e18:	eb04 1848 	add.w	r8, r4, r8, lsl #5
 8002e1c:	200c      	movs	r0, #12
 8002e1e:	f7ff f8ef 	bl	8002000 <chSysPolledDelayX>
 8002e22:	f8d8 3900 	ldr.w	r3, [r8, #2304]	; 0x900
 8002e26:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8002e2a:	f8c8 3900 	str.w	r3, [r8, #2304]	; 0x900
 8002e2e:	f8d4 381c 	ldr.w	r3, [r4, #2076]	; 0x81c
 8002e32:	2101      	movs	r1, #1
 8002e34:	fa01 f505 	lsl.w	r5, r1, r5
 8002e38:	ea23 0505 	bic.w	r5, r3, r5
 8002e3c:	f8c4 581c 	str.w	r5, [r4, #2076]	; 0x81c
 8002e40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002e44:	f8df 9014 	ldr.w	r9, [pc, #20]	; 8002e5c <usbInitEndpointI+0x17c>
 8002e48:	e771      	b.n	8002d2e <usbInitEndpointI+0x4e>
 8002e4a:	f8df 9014 	ldr.w	r9, [pc, #20]	; 8002e60 <usbInitEndpointI+0x180>
 8002e4e:	e76e      	b.n	8002d2e <usbInitEndpointI+0x4e>
 8002e50:	10048000 	.word	0x10048000
 8002e54:	10008000 	.word	0x10008000
 8002e58:	02000400 	.word	0x02000400
 8002e5c:	100c8000 	.word	0x100c8000
 8002e60:	10088000 	.word	0x10088000
	...

08002e70 <usb_event>:
 8002e70:	2902      	cmp	r1, #2
 8002e72:	d147      	bne.n	8002f04 <usb_event+0x94>
 8002e74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002e76:	4606      	mov	r6, r0
 8002e78:	460d      	mov	r5, r1
 8002e7a:	2320      	movs	r3, #32
 8002e7c:	f383 8811 	msr	BASEPRI, r3
 8002e80:	4c21      	ldr	r4, [pc, #132]	; (8002f08 <usb_event+0x98>)
 8002e82:	4a22      	ldr	r2, [pc, #136]	; (8002f0c <usb_event+0x9c>)
 8002e84:	2101      	movs	r1, #1
 8002e86:	f7ff ff2b 	bl	8002ce0 <usbInitEndpointI>
 8002e8a:	4629      	mov	r1, r5
 8002e8c:	4630      	mov	r0, r6
 8002e8e:	4a20      	ldr	r2, [pc, #128]	; (8002f10 <usb_event+0xa0>)
 8002e90:	f7ff ff26 	bl	8002ce0 <usbInitEndpointI>
 8002e94:	f104 070c 	add.w	r7, r4, #12
 8002e98:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 8002e9c:	69a3      	ldr	r3, [r4, #24]
 8002e9e:	6816      	ldr	r6, [r2, #0]
 8002ea0:	6263      	str	r3, [r4, #36]	; 0x24
 8002ea2:	4638      	mov	r0, r7
 8002ea4:	2500      	movs	r5, #0
 8002ea6:	f06f 0101 	mvn.w	r1, #1
 8002eaa:	6223      	str	r3, [r4, #32]
 8002eac:	6165      	str	r5, [r4, #20]
 8002eae:	f7fe ffef 	bl	8001e90 <chThdDequeueAllI>
 8002eb2:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 8002eb6:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8002eba:	1a9b      	subs	r3, r3, r2
 8002ebc:	f06f 0101 	mvn.w	r1, #1
 8002ec0:	64a2      	str	r2, [r4, #72]	; 0x48
 8002ec2:	6462      	str	r2, [r4, #68]	; 0x44
 8002ec4:	63a3      	str	r3, [r4, #56]	; 0x38
 8002ec6:	f7fe ffe3 	bl	8001e90 <chThdDequeueAllI>
 8002eca:	1d20      	adds	r0, r4, #4
 8002ecc:	2101      	movs	r1, #1
 8002ece:	f7fe fde7 	bl	8001aa0 <chEvtBroadcastFlagsI>
 8002ed2:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8002ed6:	7959      	ldrb	r1, [r3, #5]
 8002ed8:	eb06 0381 	add.w	r3, r6, r1, lsl #2
 8002edc:	4630      	mov	r0, r6
 8002ede:	68da      	ldr	r2, [r3, #12]
 8002ee0:	6993      	ldr	r3, [r2, #24]
 8002ee2:	8a52      	ldrh	r2, [r2, #18]
 8002ee4:	605a      	str	r2, [r3, #4]
 8002ee6:	2201      	movs	r2, #1
 8002ee8:	701a      	strb	r2, [r3, #0]
 8002eea:	e9c3 5702 	strd	r5, r7, [r3, #8]
 8002eee:	f7fd fe37 	bl	8000b60 <usb_lld_prepare_receive>
 8002ef2:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8002ef6:	4630      	mov	r0, r6
 8002ef8:	7959      	ldrb	r1, [r3, #5]
 8002efa:	f7fd ffd9 	bl	8000eb0 <usbStartReceiveI>
 8002efe:	f385 8811 	msr	BASEPRI, r5
 8002f02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002f04:	4770      	bx	lr
 8002f06:	bf00      	nop
 8002f08:	20000f04 	.word	0x20000f04
 8002f0c:	08008de0 	.word	0x08008de0
 8002f10:	08008e10 	.word	0x08008e10
	...

08002f20 <chThdYield>:
 8002f20:	b538      	push	{r3, r4, r5, lr}
 8002f22:	2320      	movs	r3, #32
 8002f24:	f383 8811 	msr	BASEPRI, r3
 8002f28:	4a11      	ldr	r2, [pc, #68]	; (8002f70 <chThdYield+0x50>)
 8002f2a:	6810      	ldr	r0, [r2, #0]
 8002f2c:	6994      	ldr	r4, [r2, #24]
 8002f2e:	6883      	ldr	r3, [r0, #8]
 8002f30:	68a1      	ldr	r1, [r4, #8]
 8002f32:	428b      	cmp	r3, r1
 8002f34:	d203      	bcs.n	8002f3e <chThdYield+0x1e>
 8002f36:	2300      	movs	r3, #0
 8002f38:	f383 8811 	msr	BASEPRI, r3
 8002f3c:	bd38      	pop	{r3, r4, r5, pc}
 8002f3e:	6803      	ldr	r3, [r0, #0]
 8002f40:	6013      	str	r3, [r2, #0]
 8002f42:	605a      	str	r2, [r3, #4]
 8002f44:	2501      	movs	r5, #1
 8002f46:	6190      	str	r0, [r2, #24]
 8002f48:	2200      	movs	r2, #0
 8002f4a:	7705      	strb	r5, [r0, #28]
 8002f4c:	7722      	strb	r2, [r4, #28]
 8002f4e:	e000      	b.n	8002f52 <chThdYield+0x32>
 8002f50:	681b      	ldr	r3, [r3, #0]
 8002f52:	689a      	ldr	r2, [r3, #8]
 8002f54:	4291      	cmp	r1, r2
 8002f56:	d9fb      	bls.n	8002f50 <chThdYield+0x30>
 8002f58:	685a      	ldr	r2, [r3, #4]
 8002f5a:	4621      	mov	r1, r4
 8002f5c:	e9c4 3200 	strd	r3, r2, [r4]
 8002f60:	6014      	str	r4, [r2, #0]
 8002f62:	605c      	str	r4, [r3, #4]
 8002f64:	f7fd f98c 	bl	8000280 <_port_switch>
 8002f68:	2300      	movs	r3, #0
 8002f6a:	f383 8811 	msr	BASEPRI, r3
 8002f6e:	bd38      	pop	{r3, r4, r5, pc}
 8002f70:	20001370 	.word	0x20001370
	...

08002f80 <thread8>:
 8002f80:	b538      	push	{r3, r4, r5, lr}
 8002f82:	4d09      	ldr	r5, [pc, #36]	; (8002fa8 <thread8+0x28>)
 8002f84:	4604      	mov	r4, r0
 8002f86:	f7ff ffcb 	bl	8002f20 <chThdYield>
 8002f8a:	f7ff ffc9 	bl	8002f20 <chThdYield>
 8002f8e:	f7ff ffc7 	bl	8002f20 <chThdYield>
 8002f92:	f7ff ffc5 	bl	8002f20 <chThdYield>
 8002f96:	6823      	ldr	r3, [r4, #0]
 8002f98:	69aa      	ldr	r2, [r5, #24]
 8002f9a:	3304      	adds	r3, #4
 8002f9c:	6023      	str	r3, [r4, #0]
 8002f9e:	7f53      	ldrb	r3, [r2, #29]
 8002fa0:	075b      	lsls	r3, r3, #29
 8002fa2:	d5f0      	bpl.n	8002f86 <thread8+0x6>
 8002fa4:	bd38      	pop	{r3, r4, r5, pc}
 8002fa6:	bf00      	nop
 8002fa8:	20001370 	.word	0x20001370
 8002fac:	00000000 	.word	0x00000000

08002fb0 <chSchDoRescheduleAhead>:
 8002fb0:	4a0d      	ldr	r2, [pc, #52]	; (8002fe8 <chSchDoRescheduleAhead+0x38>)
 8002fb2:	6810      	ldr	r0, [r2, #0]
 8002fb4:	b430      	push	{r4, r5}
 8002fb6:	6803      	ldr	r3, [r0, #0]
 8002fb8:	6994      	ldr	r4, [r2, #24]
 8002fba:	6013      	str	r3, [r2, #0]
 8002fbc:	68a1      	ldr	r1, [r4, #8]
 8002fbe:	605a      	str	r2, [r3, #4]
 8002fc0:	2501      	movs	r5, #1
 8002fc2:	6190      	str	r0, [r2, #24]
 8002fc4:	2200      	movs	r2, #0
 8002fc6:	7705      	strb	r5, [r0, #28]
 8002fc8:	7722      	strb	r2, [r4, #28]
 8002fca:	e000      	b.n	8002fce <chSchDoRescheduleAhead+0x1e>
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	689a      	ldr	r2, [r3, #8]
 8002fd0:	4291      	cmp	r1, r2
 8002fd2:	d3fb      	bcc.n	8002fcc <chSchDoRescheduleAhead+0x1c>
 8002fd4:	685a      	ldr	r2, [r3, #4]
 8002fd6:	4621      	mov	r1, r4
 8002fd8:	e9c4 3200 	strd	r3, r2, [r4]
 8002fdc:	6014      	str	r4, [r2, #0]
 8002fde:	605c      	str	r4, [r3, #4]
 8002fe0:	bc30      	pop	{r4, r5}
 8002fe2:	f7fd b94d 	b.w	8000280 <_port_switch>
 8002fe6:	bf00      	nop
 8002fe8:	20001370 	.word	0x20001370
 8002fec:	00000000 	.word	0x00000000

08002ff0 <chSchRescheduleS>:
 8002ff0:	4b04      	ldr	r3, [pc, #16]	; (8003004 <chSchRescheduleS+0x14>)
 8002ff2:	681a      	ldr	r2, [r3, #0]
 8002ff4:	699b      	ldr	r3, [r3, #24]
 8002ff6:	6892      	ldr	r2, [r2, #8]
 8002ff8:	689b      	ldr	r3, [r3, #8]
 8002ffa:	429a      	cmp	r2, r3
 8002ffc:	d800      	bhi.n	8003000 <chSchRescheduleS+0x10>
 8002ffe:	4770      	bx	lr
 8003000:	f7ff bfd6 	b.w	8002fb0 <chSchDoRescheduleAhead>
 8003004:	20001370 	.word	0x20001370
	...

08003010 <thread4.lto_priv.97>:
 8003010:	b508      	push	{r3, lr}
 8003012:	2220      	movs	r2, #32
 8003014:	f382 8811 	msr	BASEPRI, r2
 8003018:	6883      	ldr	r3, [r0, #8]
 800301a:	2b00      	cmp	r3, #0
 800301c:	dd05      	ble.n	800302a <thread4.lto_priv.97+0x1a>
 800301e:	f7ff ffe7 	bl	8002ff0 <chSchRescheduleS>
 8003022:	2300      	movs	r3, #0
 8003024:	f383 8811 	msr	BASEPRI, r3
 8003028:	bd08      	pop	{r3, pc}
 800302a:	f7fe fea9 	bl	8001d80 <chSemSignalI>
 800302e:	f7ff ffdf 	bl	8002ff0 <chSchRescheduleS>
 8003032:	2300      	movs	r3, #0
 8003034:	f383 8811 	msr	BASEPRI, r3
 8003038:	bd08      	pop	{r3, pc}
 800303a:	bf00      	nop
 800303c:	0000      	movs	r0, r0
	...

08003040 <chMtxUnlockAll>:
 8003040:	4a13      	ldr	r2, [pc, #76]	; (8003090 <chMtxUnlockAll+0x50>)
 8003042:	b570      	push	{r4, r5, r6, lr}
 8003044:	2320      	movs	r3, #32
 8003046:	6994      	ldr	r4, [r2, #24]
 8003048:	f383 8811 	msr	BASEPRI, r3
 800304c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800304e:	b1b3      	cbz	r3, 800307e <chMtxUnlockAll+0x3e>
 8003050:	2600      	movs	r6, #0
 8003052:	681a      	ldr	r2, [r3, #0]
 8003054:	68d9      	ldr	r1, [r3, #12]
 8003056:	63a1      	str	r1, [r4, #56]	; 0x38
 8003058:	4293      	cmp	r3, r2
 800305a:	4610      	mov	r0, r2
 800305c:	d013      	beq.n	8003086 <chMtxUnlockAll+0x46>
 800305e:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8003060:	6811      	ldr	r1, [r2, #0]
 8003062:	6019      	str	r1, [r3, #0]
 8003064:	604b      	str	r3, [r1, #4]
 8003066:	e9c3 2502 	strd	r2, r5, [r3, #8]
 800306a:	6393      	str	r3, [r2, #56]	; 0x38
 800306c:	f7fe fbc8 	bl	8001800 <chSchReadyI>
 8003070:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003072:	2b00      	cmp	r3, #0
 8003074:	d1ed      	bne.n	8003052 <chMtxUnlockAll+0x12>
 8003076:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003078:	60a3      	str	r3, [r4, #8]
 800307a:	f7ff ffb9 	bl	8002ff0 <chSchRescheduleS>
 800307e:	2300      	movs	r3, #0
 8003080:	f383 8811 	msr	BASEPRI, r3
 8003084:	bd70      	pop	{r4, r5, r6, pc}
 8003086:	609e      	str	r6, [r3, #8]
 8003088:	460b      	mov	r3, r1
 800308a:	2b00      	cmp	r3, #0
 800308c:	d1e1      	bne.n	8003052 <chMtxUnlockAll+0x12>
 800308e:	e7f2      	b.n	8003076 <chMtxUnlockAll+0x36>
 8003090:	20001370 	.word	0x20001370
	...

080030a0 <chThdSetPriority>:
 80030a0:	b510      	push	{r4, lr}
 80030a2:	2320      	movs	r3, #32
 80030a4:	f383 8811 	msr	BASEPRI, r3
 80030a8:	4b08      	ldr	r3, [pc, #32]	; (80030cc <chThdSetPriority+0x2c>)
 80030aa:	699b      	ldr	r3, [r3, #24]
 80030ac:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80030ae:	6899      	ldr	r1, [r3, #8]
 80030b0:	42a1      	cmp	r1, r4
 80030b2:	d001      	beq.n	80030b8 <chThdSetPriority+0x18>
 80030b4:	4281      	cmp	r1, r0
 80030b6:	d200      	bcs.n	80030ba <chThdSetPriority+0x1a>
 80030b8:	6098      	str	r0, [r3, #8]
 80030ba:	63d8      	str	r0, [r3, #60]	; 0x3c
 80030bc:	f7ff ff98 	bl	8002ff0 <chSchRescheduleS>
 80030c0:	2300      	movs	r3, #0
 80030c2:	f383 8811 	msr	BASEPRI, r3
 80030c6:	4620      	mov	r0, r4
 80030c8:	bd10      	pop	{r4, pc}
 80030ca:	bf00      	nop
 80030cc:	20001370 	.word	0x20001370

080030d0 <thd3_execute>:
 80030d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80030d2:	4e49      	ldr	r6, [pc, #292]	; (80031f8 <thd3_execute+0x128>)
 80030d4:	69b3      	ldr	r3, [r6, #24]
 80030d6:	689c      	ldr	r4, [r3, #8]
 80030d8:	1c65      	adds	r5, r4, #1
 80030da:	4628      	mov	r0, r5
 80030dc:	f7ff ffe0 	bl	80030a0 <chThdSetPriority>
 80030e0:	1b01      	subs	r1, r0, r4
 80030e2:	fab1 f181 	clz	r1, r1
 80030e6:	4607      	mov	r7, r0
 80030e8:	0949      	lsrs	r1, r1, #5
 80030ea:	2001      	movs	r0, #1
 80030ec:	f7fd fc00 	bl	80008f0 <_test_assert>
 80030f0:	b100      	cbz	r0, 80030f4 <thd3_execute+0x24>
 80030f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80030f4:	69b3      	ldr	r3, [r6, #24]
 80030f6:	6899      	ldr	r1, [r3, #8]
 80030f8:	1b49      	subs	r1, r1, r5
 80030fa:	fab1 f181 	clz	r1, r1
 80030fe:	2002      	movs	r0, #2
 8003100:	0949      	lsrs	r1, r1, #5
 8003102:	f7fd fbf5 	bl	80008f0 <_test_assert>
 8003106:	2800      	cmp	r0, #0
 8003108:	d1f3      	bne.n	80030f2 <thd3_execute+0x22>
 800310a:	4638      	mov	r0, r7
 800310c:	f7ff ffc8 	bl	80030a0 <chThdSetPriority>
 8003110:	1a29      	subs	r1, r5, r0
 8003112:	fab1 f181 	clz	r1, r1
 8003116:	0949      	lsrs	r1, r1, #5
 8003118:	2003      	movs	r0, #3
 800311a:	f7fd fbe9 	bl	80008f0 <_test_assert>
 800311e:	2800      	cmp	r0, #0
 8003120:	d1e7      	bne.n	80030f2 <thd3_execute+0x22>
 8003122:	69b3      	ldr	r3, [r6, #24]
 8003124:	6899      	ldr	r1, [r3, #8]
 8003126:	1b09      	subs	r1, r1, r4
 8003128:	fab1 f181 	clz	r1, r1
 800312c:	2004      	movs	r0, #4
 800312e:	0949      	lsrs	r1, r1, #5
 8003130:	f7fd fbde 	bl	80008f0 <_test_assert>
 8003134:	2800      	cmp	r0, #0
 8003136:	d1dc      	bne.n	80030f2 <thd3_execute+0x22>
 8003138:	2320      	movs	r3, #32
 800313a:	f383 8811 	msr	BASEPRI, r3
 800313e:	69b2      	ldr	r2, [r6, #24]
 8003140:	6893      	ldr	r3, [r2, #8]
 8003142:	3302      	adds	r3, #2
 8003144:	6093      	str	r3, [r2, #8]
 8003146:	f380 8811 	msr	BASEPRI, r0
 800314a:	69b3      	ldr	r3, [r6, #24]
 800314c:	6899      	ldr	r1, [r3, #8]
 800314e:	1ca7      	adds	r7, r4, #2
 8003150:	1bc9      	subs	r1, r1, r7
 8003152:	fab1 f181 	clz	r1, r1
 8003156:	0949      	lsrs	r1, r1, #5
 8003158:	2005      	movs	r0, #5
 800315a:	f7fd fbc9 	bl	80008f0 <_test_assert>
 800315e:	2800      	cmp	r0, #0
 8003160:	d1c7      	bne.n	80030f2 <thd3_execute+0x22>
 8003162:	4628      	mov	r0, r5
 8003164:	f7ff ff9c 	bl	80030a0 <chThdSetPriority>
 8003168:	1b01      	subs	r1, r0, r4
 800316a:	fab1 f181 	clz	r1, r1
 800316e:	0949      	lsrs	r1, r1, #5
 8003170:	2006      	movs	r0, #6
 8003172:	f7fd fbbd 	bl	80008f0 <_test_assert>
 8003176:	2800      	cmp	r0, #0
 8003178:	d1bb      	bne.n	80030f2 <thd3_execute+0x22>
 800317a:	69b3      	ldr	r3, [r6, #24]
 800317c:	6899      	ldr	r1, [r3, #8]
 800317e:	1bc9      	subs	r1, r1, r7
 8003180:	fab1 f181 	clz	r1, r1
 8003184:	0949      	lsrs	r1, r1, #5
 8003186:	2007      	movs	r0, #7
 8003188:	f7fd fbb2 	bl	80008f0 <_test_assert>
 800318c:	2800      	cmp	r0, #0
 800318e:	d1b0      	bne.n	80030f2 <thd3_execute+0x22>
 8003190:	69b3      	ldr	r3, [r6, #24]
 8003192:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8003194:	1b4f      	subs	r7, r1, r5
 8003196:	4279      	negs	r1, r7
 8003198:	4179      	adcs	r1, r7
 800319a:	2008      	movs	r0, #8
 800319c:	f7fd fba8 	bl	80008f0 <_test_assert>
 80031a0:	2800      	cmp	r0, #0
 80031a2:	d1a6      	bne.n	80030f2 <thd3_execute+0x22>
 80031a4:	1ce7      	adds	r7, r4, #3
 80031a6:	4638      	mov	r0, r7
 80031a8:	f7ff ff7a 	bl	80030a0 <chThdSetPriority>
 80031ac:	1a28      	subs	r0, r5, r0
 80031ae:	4241      	negs	r1, r0
 80031b0:	4141      	adcs	r1, r0
 80031b2:	2009      	movs	r0, #9
 80031b4:	f7fd fb9c 	bl	80008f0 <_test_assert>
 80031b8:	2800      	cmp	r0, #0
 80031ba:	d19a      	bne.n	80030f2 <thd3_execute+0x22>
 80031bc:	69b3      	ldr	r3, [r6, #24]
 80031be:	6899      	ldr	r1, [r3, #8]
 80031c0:	1bca      	subs	r2, r1, r7
 80031c2:	4251      	negs	r1, r2
 80031c4:	4151      	adcs	r1, r2
 80031c6:	200a      	movs	r0, #10
 80031c8:	f7fd fb92 	bl	80008f0 <_test_assert>
 80031cc:	2800      	cmp	r0, #0
 80031ce:	d190      	bne.n	80030f2 <thd3_execute+0x22>
 80031d0:	69b3      	ldr	r3, [r6, #24]
 80031d2:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80031d4:	1bcb      	subs	r3, r1, r7
 80031d6:	4259      	negs	r1, r3
 80031d8:	4159      	adcs	r1, r3
 80031da:	200b      	movs	r0, #11
 80031dc:	f7fd fb88 	bl	80008f0 <_test_assert>
 80031e0:	2800      	cmp	r0, #0
 80031e2:	d186      	bne.n	80030f2 <thd3_execute+0x22>
 80031e4:	2320      	movs	r3, #32
 80031e6:	f383 8811 	msr	BASEPRI, r3
 80031ea:	69b3      	ldr	r3, [r6, #24]
 80031ec:	609c      	str	r4, [r3, #8]
 80031ee:	63dc      	str	r4, [r3, #60]	; 0x3c
 80031f0:	f380 8811 	msr	BASEPRI, r0
 80031f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80031f6:	bf00      	nop
 80031f8:	20001370 	.word	0x20001370
 80031fc:	00000000 	.word	0x00000000

08003200 <chSysRestoreStatusX.part.3>:
 8003200:	b510      	push	{r4, lr}
 8003202:	f3ef 8405 	mrs	r4, IPSR
 8003206:	f3c4 0408 	ubfx	r4, r4, #0, #9
 800320a:	b11c      	cbz	r4, 8003214 <chSysRestoreStatusX.part.3+0x14>
 800320c:	2300      	movs	r3, #0
 800320e:	f383 8811 	msr	BASEPRI, r3
 8003212:	bd10      	pop	{r4, pc}
 8003214:	f7ff feec 	bl	8002ff0 <chSchRescheduleS>
 8003218:	f384 8811 	msr	BASEPRI, r4
 800321c:	bd10      	pop	{r4, pc}
 800321e:	bf00      	nop

08003220 <vtcb>:
 8003220:	b508      	push	{r3, lr}
 8003222:	2320      	movs	r3, #32
 8003224:	f383 8811 	msr	BASEPRI, r3
 8003228:	2200      	movs	r2, #0
 800322a:	f382 8811 	msr	BASEPRI, r2
 800322e:	f383 8811 	msr	BASEPRI, r3
 8003232:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8003236:	b91b      	cbnz	r3, 8003240 <vtcb+0x20>
 8003238:	f7fe feda 	bl	8001ff0 <chSysGetStatusAndLockX.part.2>
 800323c:	f7ff ffe0 	bl	8003200 <chSysRestoreStatusX.part.3>
 8003240:	2300      	movs	r3, #0
 8003242:	f383 8811 	msr	BASEPRI, r3
 8003246:	bd08      	pop	{r3, pc}
	...

08003250 <chSchWakeupS>:
 8003250:	4b14      	ldr	r3, [pc, #80]	; (80032a4 <chSchWakeupS+0x54>)
 8003252:	b470      	push	{r4, r5, r6}
 8003254:	699e      	ldr	r6, [r3, #24]
 8003256:	6885      	ldr	r5, [r0, #8]
 8003258:	4604      	mov	r4, r0
 800325a:	68b0      	ldr	r0, [r6, #8]
 800325c:	6221      	str	r1, [r4, #32]
 800325e:	4285      	cmp	r5, r0
 8003260:	f04f 0200 	mov.w	r2, #0
 8003264:	d80b      	bhi.n	800327e <chSchWakeupS+0x2e>
 8003266:	7722      	strb	r2, [r4, #28]
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	689a      	ldr	r2, [r3, #8]
 800326c:	4295      	cmp	r5, r2
 800326e:	d9fb      	bls.n	8003268 <chSchWakeupS+0x18>
 8003270:	685a      	ldr	r2, [r3, #4]
 8003272:	e9c4 3200 	strd	r3, r2, [r4]
 8003276:	6014      	str	r4, [r2, #0]
 8003278:	605c      	str	r4, [r3, #4]
 800327a:	bc70      	pop	{r4, r5, r6}
 800327c:	4770      	bx	lr
 800327e:	7732      	strb	r2, [r6, #28]
 8003280:	461a      	mov	r2, r3
 8003282:	6812      	ldr	r2, [r2, #0]
 8003284:	6891      	ldr	r1, [r2, #8]
 8003286:	4288      	cmp	r0, r1
 8003288:	d9fb      	bls.n	8003282 <chSchWakeupS+0x32>
 800328a:	6851      	ldr	r1, [r2, #4]
 800328c:	6071      	str	r1, [r6, #4]
 800328e:	2001      	movs	r0, #1
 8003290:	6032      	str	r2, [r6, #0]
 8003292:	600e      	str	r6, [r1, #0]
 8003294:	6056      	str	r6, [r2, #4]
 8003296:	7720      	strb	r0, [r4, #28]
 8003298:	4631      	mov	r1, r6
 800329a:	4620      	mov	r0, r4
 800329c:	619c      	str	r4, [r3, #24]
 800329e:	bc70      	pop	{r4, r5, r6}
 80032a0:	f7fc bfee 	b.w	8000280 <_port_switch>
 80032a4:	20001370 	.word	0x20001370
	...

080032b0 <chThdCreateFromMemoryPool.constprop.74>:
 80032b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80032b2:	4d10      	ldr	r5, [pc, #64]	; (80032f4 <chThdCreateFromMemoryPool.constprop.74+0x44>)
 80032b4:	b083      	sub	sp, #12
 80032b6:	4606      	mov	r6, r0
 80032b8:	4628      	mov	r0, r5
 80032ba:	460f      	mov	r7, r1
 80032bc:	f7fe f900 	bl	80014c0 <chPoolAlloc>
 80032c0:	b1a8      	cbz	r0, 80032ee <chThdCreateFromMemoryPool.constprop.74+0x3e>
 80032c2:	2320      	movs	r3, #32
 80032c4:	f383 8811 	msr	BASEPRI, r3
 80032c8:	4b0b      	ldr	r3, [pc, #44]	; (80032f8 <chThdCreateFromMemoryPool.constprop.74+0x48>)
 80032ca:	6869      	ldr	r1, [r5, #4]
 80032cc:	9700      	str	r7, [sp, #0]
 80032ce:	4632      	mov	r2, r6
 80032d0:	f7fe fa36 	bl	8001740 <chThdCreateI>
 80032d4:	2302      	movs	r3, #2
 80032d6:	7743      	strb	r3, [r0, #29]
 80032d8:	6405      	str	r5, [r0, #64]	; 0x40
 80032da:	2100      	movs	r1, #0
 80032dc:	4604      	mov	r4, r0
 80032de:	f7ff ffb7 	bl	8003250 <chSchWakeupS>
 80032e2:	2300      	movs	r3, #0
 80032e4:	f383 8811 	msr	BASEPRI, r3
 80032e8:	4620      	mov	r0, r4
 80032ea:	b003      	add	sp, #12
 80032ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80032ee:	4604      	mov	r4, r0
 80032f0:	e7fa      	b.n	80032e8 <chThdCreateFromMemoryPool.constprop.74+0x38>
 80032f2:	bf00      	nop
 80032f4:	20001628 	.word	0x20001628
 80032f8:	08000981 	.word	0x08000981
 80032fc:	00000000 	.word	0x00000000

08003300 <chCondSignal.constprop.66>:
 8003300:	b508      	push	{r3, lr}
 8003302:	2320      	movs	r3, #32
 8003304:	f383 8811 	msr	BASEPRI, r3
 8003308:	4b06      	ldr	r3, [pc, #24]	; (8003324 <chCondSignal.constprop.66+0x24>)
 800330a:	6818      	ldr	r0, [r3, #0]
 800330c:	4298      	cmp	r0, r3
 800330e:	d005      	beq.n	800331c <chCondSignal.constprop.66+0x1c>
 8003310:	6802      	ldr	r2, [r0, #0]
 8003312:	601a      	str	r2, [r3, #0]
 8003314:	6053      	str	r3, [r2, #4]
 8003316:	2100      	movs	r1, #0
 8003318:	f7ff ff9a 	bl	8003250 <chSchWakeupS>
 800331c:	2300      	movs	r3, #0
 800331e:	f383 8811 	msr	BASEPRI, r3
 8003322:	bd08      	pop	{r3, pc}
 8003324:	20000800 	.word	0x20000800
	...

08003330 <chMtxUnlock>:
 8003330:	4b16      	ldr	r3, [pc, #88]	; (800338c <chMtxUnlock+0x5c>)
 8003332:	b570      	push	{r4, r5, r6, lr}
 8003334:	699d      	ldr	r5, [r3, #24]
 8003336:	2320      	movs	r3, #32
 8003338:	f383 8811 	msr	BASEPRI, r3
 800333c:	6804      	ldr	r4, [r0, #0]
 800333e:	68c3      	ldr	r3, [r0, #12]
 8003340:	63ab      	str	r3, [r5, #56]	; 0x38
 8003342:	4284      	cmp	r4, r0
 8003344:	d01c      	beq.n	8003380 <chMtxUnlock+0x50>
 8003346:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8003348:	b14b      	cbz	r3, 800335e <chMtxUnlock+0x2e>
 800334a:	681a      	ldr	r2, [r3, #0]
 800334c:	4293      	cmp	r3, r2
 800334e:	d003      	beq.n	8003358 <chMtxUnlock+0x28>
 8003350:	6892      	ldr	r2, [r2, #8]
 8003352:	4291      	cmp	r1, r2
 8003354:	bf38      	it	cc
 8003356:	4611      	movcc	r1, r2
 8003358:	68db      	ldr	r3, [r3, #12]
 800335a:	2b00      	cmp	r3, #0
 800335c:	d1f5      	bne.n	800334a <chMtxUnlock+0x1a>
 800335e:	4603      	mov	r3, r0
 8003360:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8003362:	6822      	ldr	r2, [r4, #0]
 8003364:	60a9      	str	r1, [r5, #8]
 8003366:	4620      	mov	r0, r4
 8003368:	601a      	str	r2, [r3, #0]
 800336a:	2100      	movs	r1, #0
 800336c:	6053      	str	r3, [r2, #4]
 800336e:	e9c3 4602 	strd	r4, r6, [r3, #8]
 8003372:	63a3      	str	r3, [r4, #56]	; 0x38
 8003374:	f7ff ff6c 	bl	8003250 <chSchWakeupS>
 8003378:	2300      	movs	r3, #0
 800337a:	f383 8811 	msr	BASEPRI, r3
 800337e:	bd70      	pop	{r4, r5, r6, pc}
 8003380:	2300      	movs	r3, #0
 8003382:	60a3      	str	r3, [r4, #8]
 8003384:	2300      	movs	r3, #0
 8003386:	f383 8811 	msr	BASEPRI, r3
 800338a:	bd70      	pop	{r4, r5, r6, pc}
 800338c:	20001370 	.word	0x20001370

08003390 <chSemSignal>:
 8003390:	b508      	push	{r3, lr}
 8003392:	2320      	movs	r3, #32
 8003394:	f383 8811 	msr	BASEPRI, r3
 8003398:	6883      	ldr	r3, [r0, #8]
 800339a:	3301      	adds	r3, #1
 800339c:	2b00      	cmp	r3, #0
 800339e:	6083      	str	r3, [r0, #8]
 80033a0:	dd03      	ble.n	80033aa <chSemSignal+0x1a>
 80033a2:	2300      	movs	r3, #0
 80033a4:	f383 8811 	msr	BASEPRI, r3
 80033a8:	bd08      	pop	{r3, pc}
 80033aa:	4603      	mov	r3, r0
 80033ac:	6800      	ldr	r0, [r0, #0]
 80033ae:	6802      	ldr	r2, [r0, #0]
 80033b0:	601a      	str	r2, [r3, #0]
 80033b2:	2100      	movs	r1, #0
 80033b4:	6053      	str	r3, [r2, #4]
 80033b6:	f7ff ff4b 	bl	8003250 <chSchWakeupS>
 80033ba:	2300      	movs	r3, #0
 80033bc:	f383 8811 	msr	BASEPRI, r3
 80033c0:	bd08      	pop	{r3, pc}
 80033c2:	bf00      	nop
	...

080033d0 <chThdCreateStatic>:
 80033d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033d2:	9e06      	ldr	r6, [sp, #24]
 80033d4:	4604      	mov	r4, r0
 80033d6:	2520      	movs	r5, #32
 80033d8:	f385 8811 	msr	BASEPRI, r5
 80033dc:	3924      	subs	r1, #36	; 0x24
 80033de:	1845      	adds	r5, r0, r1
 80033e0:	60c5      	str	r5, [r0, #12]
 80033e2:	4f12      	ldr	r7, [pc, #72]	; (800342c <chThdCreateStatic+0x5c>)
 80033e4:	5043      	str	r3, [r0, r1]
 80033e6:	4b12      	ldr	r3, [pc, #72]	; (8003430 <chThdCreateStatic+0x60>)
 80033e8:	606e      	str	r6, [r5, #4]
 80033ea:	622f      	str	r7, [r5, #32]
 80033ec:	6103      	str	r3, [r0, #16]
 80033ee:	6959      	ldr	r1, [r3, #20]
 80033f0:	63c2      	str	r2, [r0, #60]	; 0x3c
 80033f2:	6082      	str	r2, [r0, #8]
 80033f4:	2500      	movs	r5, #0
 80033f6:	f100 0228 	add.w	r2, r0, #40	; 0x28
 80033fa:	f04f 0c02 	mov.w	ip, #2
 80033fe:	f100 0624 	add.w	r6, r0, #36	; 0x24
 8003402:	2701      	movs	r7, #1
 8003404:	6141      	str	r1, [r0, #20]
 8003406:	f8a0 c01c 	strh.w	ip, [r0, #28]
 800340a:	7787      	strb	r7, [r0, #30]
 800340c:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8003410:	6185      	str	r5, [r0, #24]
 8003412:	6108      	str	r0, [r1, #16]
 8003414:	4629      	mov	r1, r5
 8003416:	e9c0 6209 	strd	r6, r2, [r0, #36]	; 0x24
 800341a:	62c2      	str	r2, [r0, #44]	; 0x2c
 800341c:	6158      	str	r0, [r3, #20]
 800341e:	f7ff ff17 	bl	8003250 <chSchWakeupS>
 8003422:	f385 8811 	msr	BASEPRI, r5
 8003426:	4620      	mov	r0, r4
 8003428:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800342a:	bf00      	nop
 800342c:	08000291 	.word	0x08000291
 8003430:	20001370 	.word	0x20001370
	...

08003440 <chSchGoSleepS>:
 8003440:	4b07      	ldr	r3, [pc, #28]	; (8003460 <chSchGoSleepS+0x20>)
 8003442:	6999      	ldr	r1, [r3, #24]
 8003444:	681a      	ldr	r2, [r3, #0]
 8003446:	b410      	push	{r4}
 8003448:	7708      	strb	r0, [r1, #28]
 800344a:	6810      	ldr	r0, [r2, #0]
 800344c:	6018      	str	r0, [r3, #0]
 800344e:	2401      	movs	r4, #1
 8003450:	6043      	str	r3, [r0, #4]
 8003452:	7714      	strb	r4, [r2, #28]
 8003454:	4610      	mov	r0, r2
 8003456:	bc10      	pop	{r4}
 8003458:	619a      	str	r2, [r3, #24]
 800345a:	f7fc bf11 	b.w	8000280 <_port_switch>
 800345e:	bf00      	nop
 8003460:	20001370 	.word	0x20001370
	...

08003470 <chSemSignalWait.constprop.70>:
 8003470:	b538      	push	{r3, r4, r5, lr}
 8003472:	2320      	movs	r3, #32
 8003474:	f383 8811 	msr	BASEPRI, r3
 8003478:	4c15      	ldr	r4, [pc, #84]	; (80034d0 <chSemSignalWait.constprop.70+0x60>)
 800347a:	68a3      	ldr	r3, [r4, #8]
 800347c:	3301      	adds	r3, #1
 800347e:	2b00      	cmp	r3, #0
 8003480:	60a3      	str	r3, [r4, #8]
 8003482:	dd1a      	ble.n	80034ba <chSemSignalWait.constprop.70+0x4a>
 8003484:	3b01      	subs	r3, #1
 8003486:	2b00      	cmp	r3, #0
 8003488:	60a3      	str	r3, [r4, #8]
 800348a:	db06      	blt.n	800349a <chSemSignalWait.constprop.70+0x2a>
 800348c:	f7ff fdb0 	bl	8002ff0 <chSchRescheduleS>
 8003490:	2000      	movs	r0, #0
 8003492:	2300      	movs	r3, #0
 8003494:	f383 8811 	msr	BASEPRI, r3
 8003498:	bd38      	pop	{r3, r4, r5, pc}
 800349a:	4a0e      	ldr	r2, [pc, #56]	; (80034d4 <chSemSignalWait.constprop.70+0x64>)
 800349c:	6863      	ldr	r3, [r4, #4]
 800349e:	6995      	ldr	r5, [r2, #24]
 80034a0:	2005      	movs	r0, #5
 80034a2:	e9c5 4300 	strd	r4, r3, [r5]
 80034a6:	601d      	str	r5, [r3, #0]
 80034a8:	622c      	str	r4, [r5, #32]
 80034aa:	6065      	str	r5, [r4, #4]
 80034ac:	f7ff ffc8 	bl	8003440 <chSchGoSleepS>
 80034b0:	6a28      	ldr	r0, [r5, #32]
 80034b2:	2300      	movs	r3, #0
 80034b4:	f383 8811 	msr	BASEPRI, r3
 80034b8:	bd38      	pop	{r3, r4, r5, pc}
 80034ba:	6820      	ldr	r0, [r4, #0]
 80034bc:	6803      	ldr	r3, [r0, #0]
 80034be:	6023      	str	r3, [r4, #0]
 80034c0:	605c      	str	r4, [r3, #4]
 80034c2:	f7fe f99d 	bl	8001800 <chSchReadyI>
 80034c6:	2200      	movs	r2, #0
 80034c8:	68a3      	ldr	r3, [r4, #8]
 80034ca:	6202      	str	r2, [r0, #32]
 80034cc:	e7da      	b.n	8003484 <chSemSignalWait.constprop.70+0x14>
 80034ce:	bf00      	nop
 80034d0:	200008cc 	.word	0x200008cc
 80034d4:	20001370 	.word	0x20001370
	...

080034e0 <sem3_execute>:
 80034e0:	b510      	push	{r4, lr}
 80034e2:	4a1e      	ldr	r2, [pc, #120]	; (800355c <sem3_execute+0x7c>)
 80034e4:	4b1e      	ldr	r3, [pc, #120]	; (8003560 <sem3_execute+0x80>)
 80034e6:	6992      	ldr	r2, [r2, #24]
 80034e8:	481e      	ldr	r0, [pc, #120]	; (8003564 <sem3_execute+0x84>)
 80034ea:	6892      	ldr	r2, [r2, #8]
 80034ec:	4c1e      	ldr	r4, [pc, #120]	; (8003568 <sem3_execute+0x88>)
 80034ee:	b082      	sub	sp, #8
 80034f0:	2100      	movs	r1, #0
 80034f2:	3201      	adds	r2, #1
 80034f4:	9100      	str	r1, [sp, #0]
 80034f6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80034fa:	f7ff ff69 	bl	80033d0 <chThdCreateStatic>
 80034fe:	4b1b      	ldr	r3, [pc, #108]	; (800356c <sem3_execute+0x8c>)
 8003500:	6018      	str	r0, [r3, #0]
 8003502:	f7ff ffb5 	bl	8003470 <chSemSignalWait.constprop.70>
 8003506:	6821      	ldr	r1, [r4, #0]
 8003508:	1b09      	subs	r1, r1, r4
 800350a:	fab1 f181 	clz	r1, r1
 800350e:	2001      	movs	r0, #1
 8003510:	0949      	lsrs	r1, r1, #5
 8003512:	f7fd f9ed 	bl	80008f0 <_test_assert>
 8003516:	b108      	cbz	r0, 800351c <sem3_execute+0x3c>
 8003518:	b002      	add	sp, #8
 800351a:	bd10      	pop	{r4, pc}
 800351c:	68a1      	ldr	r1, [r4, #8]
 800351e:	fab1 f181 	clz	r1, r1
 8003522:	0949      	lsrs	r1, r1, #5
 8003524:	2002      	movs	r0, #2
 8003526:	f7fd f9e3 	bl	80008f0 <_test_assert>
 800352a:	2800      	cmp	r0, #0
 800352c:	d1f4      	bne.n	8003518 <sem3_execute+0x38>
 800352e:	f7ff ff9f 	bl	8003470 <chSemSignalWait.constprop.70>
 8003532:	6821      	ldr	r1, [r4, #0]
 8003534:	1b09      	subs	r1, r1, r4
 8003536:	fab1 f181 	clz	r1, r1
 800353a:	2003      	movs	r0, #3
 800353c:	0949      	lsrs	r1, r1, #5
 800353e:	f7fd f9d7 	bl	80008f0 <_test_assert>
 8003542:	2800      	cmp	r0, #0
 8003544:	d1e8      	bne.n	8003518 <sem3_execute+0x38>
 8003546:	68a1      	ldr	r1, [r4, #8]
 8003548:	fab1 f181 	clz	r1, r1
 800354c:	0949      	lsrs	r1, r1, #5
 800354e:	2004      	movs	r0, #4
 8003550:	b002      	add	sp, #8
 8003552:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003556:	f7fd b9cb 	b.w	80008f0 <_test_assert>
 800355a:	bf00      	nop
 800355c:	20001370 	.word	0x20001370
 8003560:	080054a1 	.word	0x080054a1
 8003564:	20001660 	.word	0x20001660
 8003568:	200008cc 	.word	0x200008cc
 800356c:	20001cf4 	.word	0x20001cf4

08003570 <chEvtWaitOne.constprop.54>:
 8003570:	4a0b      	ldr	r2, [pc, #44]	; (80035a0 <chEvtWaitOne.constprop.54+0x30>)
 8003572:	b510      	push	{r4, lr}
 8003574:	2320      	movs	r3, #32
 8003576:	6994      	ldr	r4, [r2, #24]
 8003578:	f383 8811 	msr	BASEPRI, r3
 800357c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800357e:	b933      	cbnz	r3, 800358e <chEvtWaitOne.constprop.54+0x1e>
 8003580:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003584:	6223      	str	r3, [r4, #32]
 8003586:	200a      	movs	r0, #10
 8003588:	f7ff ff5a 	bl	8003440 <chSchGoSleepS>
 800358c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800358e:	4258      	negs	r0, r3
 8003590:	4018      	ands	r0, r3
 8003592:	ea23 0300 	bic.w	r3, r3, r0
 8003596:	6363      	str	r3, [r4, #52]	; 0x34
 8003598:	2300      	movs	r3, #0
 800359a:	f383 8811 	msr	BASEPRI, r3
 800359e:	bd10      	pop	{r4, pc}
 80035a0:	20001370 	.word	0x20001370
	...

080035b0 <chEvtWaitAny.constprop.53>:
 80035b0:	4a09      	ldr	r2, [pc, #36]	; (80035d8 <chEvtWaitAny.constprop.53+0x28>)
 80035b2:	b510      	push	{r4, lr}
 80035b4:	2320      	movs	r3, #32
 80035b6:	6994      	ldr	r4, [r2, #24]
 80035b8:	f383 8811 	msr	BASEPRI, r3
 80035bc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80035be:	b930      	cbnz	r0, 80035ce <chEvtWaitAny.constprop.53+0x1e>
 80035c0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80035c4:	200a      	movs	r0, #10
 80035c6:	6223      	str	r3, [r4, #32]
 80035c8:	f7ff ff3a 	bl	8003440 <chSchGoSleepS>
 80035cc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80035ce:	2300      	movs	r3, #0
 80035d0:	6363      	str	r3, [r4, #52]	; 0x34
 80035d2:	f383 8811 	msr	BASEPRI, r3
 80035d6:	bd10      	pop	{r4, pc}
 80035d8:	20001370 	.word	0x20001370
 80035dc:	00000000 	.word	0x00000000

080035e0 <thread4.lto_priv.98>:
 80035e0:	4a07      	ldr	r2, [pc, #28]	; (8003600 <thread4.lto_priv.98+0x20>)
 80035e2:	b510      	push	{r4, lr}
 80035e4:	2320      	movs	r3, #32
 80035e6:	6994      	ldr	r4, [r2, #24]
 80035e8:	f383 8811 	msr	BASEPRI, r3
 80035ec:	2003      	movs	r0, #3
 80035ee:	f7ff ff27 	bl	8003440 <chSchGoSleepS>
 80035f2:	6a23      	ldr	r3, [r4, #32]
 80035f4:	2b00      	cmp	r3, #0
 80035f6:	d0f9      	beq.n	80035ec <thread4.lto_priv.98+0xc>
 80035f8:	2300      	movs	r3, #0
 80035fa:	f383 8811 	msr	BASEPRI, r3
 80035fe:	bd10      	pop	{r4, pc}
 8003600:	20001370 	.word	0x20001370
	...

08003610 <chSchGoSleepTimeoutS>:
 8003610:	b530      	push	{r4, r5, lr}
 8003612:	1c4b      	adds	r3, r1, #1
 8003614:	b087      	sub	sp, #28
 8003616:	d012      	beq.n	800363e <chSchGoSleepTimeoutS+0x2e>
 8003618:	4c0c      	ldr	r4, [pc, #48]	; (800364c <chSchGoSleepTimeoutS+0x3c>)
 800361a:	4a0d      	ldr	r2, [pc, #52]	; (8003650 <chSchGoSleepTimeoutS+0x40>)
 800361c:	69a3      	ldr	r3, [r4, #24]
 800361e:	4605      	mov	r5, r0
 8003620:	a801      	add	r0, sp, #4
 8003622:	f7fe fc85 	bl	8001f30 <chVTDoSetI>
 8003626:	4628      	mov	r0, r5
 8003628:	f7ff ff0a 	bl	8003440 <chSchGoSleepS>
 800362c:	9b04      	ldr	r3, [sp, #16]
 800362e:	b113      	cbz	r3, 8003636 <chSchGoSleepTimeoutS+0x26>
 8003630:	a801      	add	r0, sp, #4
 8003632:	f7fe fc45 	bl	8001ec0 <chVTDoResetI>
 8003636:	69a3      	ldr	r3, [r4, #24]
 8003638:	6a18      	ldr	r0, [r3, #32]
 800363a:	b007      	add	sp, #28
 800363c:	bd30      	pop	{r4, r5, pc}
 800363e:	4c03      	ldr	r4, [pc, #12]	; (800364c <chSchGoSleepTimeoutS+0x3c>)
 8003640:	f7ff fefe 	bl	8003440 <chSchGoSleepS>
 8003644:	69a3      	ldr	r3, [r4, #24]
 8003646:	6a18      	ldr	r0, [r3, #32]
 8003648:	b007      	add	sp, #28
 800364a:	bd30      	pop	{r4, r5, pc}
 800364c:	20001370 	.word	0x20001370
 8003650:	08001791 	.word	0x08001791
	...

08003660 <chSemWaitTimeout.constprop.72>:
 8003660:	2320      	movs	r3, #32
 8003662:	f383 8811 	msr	BASEPRI, r3
 8003666:	4b10      	ldr	r3, [pc, #64]	; (80036a8 <chSemWaitTimeout.constprop.72+0x48>)
 8003668:	6899      	ldr	r1, [r3, #8]
 800366a:	1e4a      	subs	r2, r1, #1
 800366c:	2a00      	cmp	r2, #0
 800366e:	609a      	str	r2, [r3, #8]
 8003670:	db04      	blt.n	800367c <chSemWaitTimeout.constprop.72+0x1c>
 8003672:	2000      	movs	r0, #0
 8003674:	2300      	movs	r3, #0
 8003676:	f383 8811 	msr	BASEPRI, r3
 800367a:	4770      	bx	lr
 800367c:	b180      	cbz	r0, 80036a0 <chSemWaitTimeout.constprop.72+0x40>
 800367e:	4a0b      	ldr	r2, [pc, #44]	; (80036ac <chSemWaitTimeout.constprop.72+0x4c>)
 8003680:	b510      	push	{r4, lr}
 8003682:	6992      	ldr	r2, [r2, #24]
 8003684:	685c      	ldr	r4, [r3, #4]
 8003686:	6213      	str	r3, [r2, #32]
 8003688:	e9c2 3400 	strd	r3, r4, [r2]
 800368c:	4601      	mov	r1, r0
 800368e:	6022      	str	r2, [r4, #0]
 8003690:	2005      	movs	r0, #5
 8003692:	605a      	str	r2, [r3, #4]
 8003694:	f7ff ffbc 	bl	8003610 <chSchGoSleepTimeoutS>
 8003698:	2300      	movs	r3, #0
 800369a:	f383 8811 	msr	BASEPRI, r3
 800369e:	bd10      	pop	{r4, pc}
 80036a0:	6099      	str	r1, [r3, #8]
 80036a2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80036a6:	e7e5      	b.n	8003674 <chSemWaitTimeout.constprop.72+0x14>
 80036a8:	200008cc 	.word	0x200008cc
 80036ac:	20001370 	.word	0x20001370

080036b0 <evt3_execute>:
 80036b0:	b570      	push	{r4, r5, r6, lr}
 80036b2:	4c55      	ldr	r4, [pc, #340]	; (8003808 <evt3_execute+0x158>)
 80036b4:	2320      	movs	r3, #32
 80036b6:	69a2      	ldr	r2, [r4, #24]
 80036b8:	f383 8811 	msr	BASEPRI, r3
 80036bc:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80036be:	b93b      	cbnz	r3, 80036d0 <evt3_execute+0x20>
 80036c0:	f383 8811 	msr	BASEPRI, r3
 80036c4:	2101      	movs	r1, #1
 80036c6:	2001      	movs	r0, #1
 80036c8:	f7fd f912 	bl	80008f0 <_test_assert>
 80036cc:	b180      	cbz	r0, 80036f0 <evt3_execute+0x40>
 80036ce:	bd70      	pop	{r4, r5, r6, pc}
 80036d0:	4259      	negs	r1, r3
 80036d2:	4019      	ands	r1, r3
 80036d4:	ea23 0301 	bic.w	r3, r3, r1
 80036d8:	6353      	str	r3, [r2, #52]	; 0x34
 80036da:	2300      	movs	r3, #0
 80036dc:	f383 8811 	msr	BASEPRI, r3
 80036e0:	fab1 f181 	clz	r1, r1
 80036e4:	0949      	lsrs	r1, r1, #5
 80036e6:	2001      	movs	r0, #1
 80036e8:	f7fd f902 	bl	80008f0 <_test_assert>
 80036ec:	2800      	cmp	r0, #0
 80036ee:	d1ee      	bne.n	80036ce <evt3_execute+0x1e>
 80036f0:	69a3      	ldr	r3, [r4, #24]
 80036f2:	2220      	movs	r2, #32
 80036f4:	f382 8811 	msr	BASEPRI, r2
 80036f8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80036fa:	2a00      	cmp	r2, #0
 80036fc:	d06f      	beq.n	80037de <evt3_execute+0x12e>
 80036fe:	6358      	str	r0, [r3, #52]	; 0x34
 8003700:	f380 8811 	msr	BASEPRI, r0
 8003704:	4601      	mov	r1, r0
 8003706:	2002      	movs	r0, #2
 8003708:	f7fd f8f2 	bl	80008f0 <_test_assert>
 800370c:	2800      	cmp	r0, #0
 800370e:	d1de      	bne.n	80036ce <evt3_execute+0x1e>
 8003710:	69a3      	ldr	r3, [r4, #24]
 8003712:	2220      	movs	r2, #32
 8003714:	f382 8811 	msr	BASEPRI, r2
 8003718:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800371a:	3201      	adds	r2, #1
 800371c:	d063      	beq.n	80037e6 <evt3_execute+0x136>
 800371e:	f380 8811 	msr	BASEPRI, r0
 8003722:	2001      	movs	r0, #1
 8003724:	4601      	mov	r1, r0
 8003726:	2003      	movs	r0, #3
 8003728:	f7fd f8e2 	bl	80008f0 <_test_assert>
 800372c:	2800      	cmp	r0, #0
 800372e:	d1ce      	bne.n	80036ce <evt3_execute+0x1e>
 8003730:	69a6      	ldr	r6, [r4, #24]
 8003732:	2320      	movs	r3, #32
 8003734:	f383 8811 	msr	BASEPRI, r3
 8003738:	6b75      	ldr	r5, [r6, #52]	; 0x34
 800373a:	b94d      	cbnz	r5, 8003750 <evt3_execute+0xa0>
 800373c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003740:	210a      	movs	r1, #10
 8003742:	6233      	str	r3, [r6, #32]
 8003744:	4608      	mov	r0, r1
 8003746:	f7ff ff63 	bl	8003610 <chSchGoSleepTimeoutS>
 800374a:	2800      	cmp	r0, #0
 800374c:	db4f      	blt.n	80037ee <evt3_execute+0x13e>
 800374e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8003750:	4269      	negs	r1, r5
 8003752:	4029      	ands	r1, r5
 8003754:	ea25 0501 	bic.w	r5, r5, r1
 8003758:	6375      	str	r5, [r6, #52]	; 0x34
 800375a:	2300      	movs	r3, #0
 800375c:	f383 8811 	msr	BASEPRI, r3
 8003760:	fab1 f181 	clz	r1, r1
 8003764:	0949      	lsrs	r1, r1, #5
 8003766:	2004      	movs	r0, #4
 8003768:	f7fd f8c2 	bl	80008f0 <_test_assert>
 800376c:	2800      	cmp	r0, #0
 800376e:	d1ae      	bne.n	80036ce <evt3_execute+0x1e>
 8003770:	69a6      	ldr	r6, [r4, #24]
 8003772:	2320      	movs	r3, #32
 8003774:	f383 8811 	msr	BASEPRI, r3
 8003778:	6b75      	ldr	r5, [r6, #52]	; 0x34
 800377a:	b94d      	cbnz	r5, 8003790 <evt3_execute+0xe0>
 800377c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003780:	210a      	movs	r1, #10
 8003782:	6233      	str	r3, [r6, #32]
 8003784:	4608      	mov	r0, r1
 8003786:	f7ff ff43 	bl	8003610 <chSchGoSleepTimeoutS>
 800378a:	2800      	cmp	r0, #0
 800378c:	db33      	blt.n	80037f6 <evt3_execute+0x146>
 800378e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8003790:	2300      	movs	r3, #0
 8003792:	6373      	str	r3, [r6, #52]	; 0x34
 8003794:	f383 8811 	msr	BASEPRI, r3
 8003798:	fab5 f185 	clz	r1, r5
 800379c:	0949      	lsrs	r1, r1, #5
 800379e:	2005      	movs	r0, #5
 80037a0:	f7fd f8a6 	bl	80008f0 <_test_assert>
 80037a4:	4605      	mov	r5, r0
 80037a6:	2800      	cmp	r0, #0
 80037a8:	d191      	bne.n	80036ce <evt3_execute+0x1e>
 80037aa:	69a4      	ldr	r4, [r4, #24]
 80037ac:	2320      	movs	r3, #32
 80037ae:	f383 8811 	msr	BASEPRI, r3
 80037b2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80037b4:	3301      	adds	r3, #1
 80037b6:	d008      	beq.n	80037ca <evt3_execute+0x11a>
 80037b8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80037bc:	6223      	str	r3, [r4, #32]
 80037be:	210a      	movs	r1, #10
 80037c0:	200b      	movs	r0, #11
 80037c2:	f7ff ff25 	bl	8003610 <chSchGoSleepTimeoutS>
 80037c6:	2800      	cmp	r0, #0
 80037c8:	db19      	blt.n	80037fe <evt3_execute+0x14e>
 80037ca:	2300      	movs	r3, #0
 80037cc:	6363      	str	r3, [r4, #52]	; 0x34
 80037ce:	f383 8811 	msr	BASEPRI, r3
 80037d2:	4629      	mov	r1, r5
 80037d4:	2006      	movs	r0, #6
 80037d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80037da:	f7fd b889 	b.w	80008f0 <_test_assert>
 80037de:	f382 8811 	msr	BASEPRI, r2
 80037e2:	2101      	movs	r1, #1
 80037e4:	e78f      	b.n	8003706 <evt3_execute+0x56>
 80037e6:	6358      	str	r0, [r3, #52]	; 0x34
 80037e8:	f380 8811 	msr	BASEPRI, r0
 80037ec:	e79a      	b.n	8003724 <evt3_execute+0x74>
 80037ee:	f385 8811 	msr	BASEPRI, r5
 80037f2:	2101      	movs	r1, #1
 80037f4:	e7b7      	b.n	8003766 <evt3_execute+0xb6>
 80037f6:	f385 8811 	msr	BASEPRI, r5
 80037fa:	2101      	movs	r1, #1
 80037fc:	e7cf      	b.n	800379e <evt3_execute+0xee>
 80037fe:	f385 8811 	msr	BASEPRI, r5
 8003802:	2501      	movs	r5, #1
 8003804:	e7e5      	b.n	80037d2 <evt3_execute+0x122>
 8003806:	bf00      	nop
 8003808:	20001370 	.word	0x20001370
 800380c:	00000000 	.word	0x00000000

08003810 <chSemWaitTimeoutS>:
 8003810:	6883      	ldr	r3, [r0, #8]
 8003812:	3b01      	subs	r3, #1
 8003814:	2b00      	cmp	r3, #0
 8003816:	6083      	str	r3, [r0, #8]
 8003818:	db01      	blt.n	800381e <chSemWaitTimeoutS+0xe>
 800381a:	2000      	movs	r0, #0
 800381c:	4770      	bx	lr
 800381e:	4b07      	ldr	r3, [pc, #28]	; (800383c <chSemWaitTimeoutS+0x2c>)
 8003820:	699b      	ldr	r3, [r3, #24]
 8003822:	b410      	push	{r4}
 8003824:	6218      	str	r0, [r3, #32]
 8003826:	6018      	str	r0, [r3, #0]
 8003828:	6844      	ldr	r4, [r0, #4]
 800382a:	605c      	str	r4, [r3, #4]
 800382c:	4602      	mov	r2, r0
 800382e:	6023      	str	r3, [r4, #0]
 8003830:	2005      	movs	r0, #5
 8003832:	6053      	str	r3, [r2, #4]
 8003834:	bc10      	pop	{r4}
 8003836:	f7ff beeb 	b.w	8003610 <chSchGoSleepTimeoutS>
 800383a:	bf00      	nop
 800383c:	20001370 	.word	0x20001370

08003840 <chMBPost.constprop.42>:
 8003840:	b570      	push	{r4, r5, r6, lr}
 8003842:	2320      	movs	r3, #32
 8003844:	4606      	mov	r6, r0
 8003846:	f383 8811 	msr	BASEPRI, r3
 800384a:	4c0d      	ldr	r4, [pc, #52]	; (8003880 <chMBPost.constprop.42+0x40>)
 800384c:	f104 001c 	add.w	r0, r4, #28
 8003850:	f7ff ffde 	bl	8003810 <chSemWaitTimeoutS>
 8003854:	4605      	mov	r5, r0
 8003856:	b968      	cbnz	r0, 8003874 <chMBPost.constprop.42+0x34>
 8003858:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800385c:	1d13      	adds	r3, r2, #4
 800385e:	428b      	cmp	r3, r1
 8003860:	60a3      	str	r3, [r4, #8]
 8003862:	4808      	ldr	r0, [pc, #32]	; (8003884 <chMBPost.constprop.42+0x44>)
 8003864:	6016      	str	r6, [r2, #0]
 8003866:	bf24      	itt	cs
 8003868:	6823      	ldrcs	r3, [r4, #0]
 800386a:	60a3      	strcs	r3, [r4, #8]
 800386c:	f7fe fa88 	bl	8001d80 <chSemSignalI>
 8003870:	f7ff fbbe 	bl	8002ff0 <chSchRescheduleS>
 8003874:	2300      	movs	r3, #0
 8003876:	f383 8811 	msr	BASEPRI, r3
 800387a:	4628      	mov	r0, r5
 800387c:	bd70      	pop	{r4, r5, r6, pc}
 800387e:	bf00      	nop
 8003880:	20000874 	.word	0x20000874
 8003884:	20000884 	.word	0x20000884
	...

08003890 <chMBPostAhead.constprop.40>:
 8003890:	b570      	push	{r4, r5, r6, lr}
 8003892:	2320      	movs	r3, #32
 8003894:	4606      	mov	r6, r0
 8003896:	f383 8811 	msr	BASEPRI, r3
 800389a:	4c10      	ldr	r4, [pc, #64]	; (80038dc <chMBPostAhead.constprop.40+0x4c>)
 800389c:	f104 001c 	add.w	r0, r4, #28
 80038a0:	f7ff ffb6 	bl	8003810 <chSemWaitTimeoutS>
 80038a4:	4605      	mov	r5, r0
 80038a6:	b120      	cbz	r0, 80038b2 <chMBPostAhead.constprop.40+0x22>
 80038a8:	2300      	movs	r3, #0
 80038aa:	f383 8811 	msr	BASEPRI, r3
 80038ae:	4628      	mov	r0, r5
 80038b0:	bd70      	pop	{r4, r5, r6, pc}
 80038b2:	68e3      	ldr	r3, [r4, #12]
 80038b4:	6822      	ldr	r2, [r4, #0]
 80038b6:	3b04      	subs	r3, #4
 80038b8:	4293      	cmp	r3, r2
 80038ba:	60e3      	str	r3, [r4, #12]
 80038bc:	d202      	bcs.n	80038c4 <chMBPostAhead.constprop.40+0x34>
 80038be:	6863      	ldr	r3, [r4, #4]
 80038c0:	3b04      	subs	r3, #4
 80038c2:	60e3      	str	r3, [r4, #12]
 80038c4:	601e      	str	r6, [r3, #0]
 80038c6:	4806      	ldr	r0, [pc, #24]	; (80038e0 <chMBPostAhead.constprop.40+0x50>)
 80038c8:	f7fe fa5a 	bl	8001d80 <chSemSignalI>
 80038cc:	f7ff fb90 	bl	8002ff0 <chSchRescheduleS>
 80038d0:	2300      	movs	r3, #0
 80038d2:	f383 8811 	msr	BASEPRI, r3
 80038d6:	4628      	mov	r0, r5
 80038d8:	bd70      	pop	{r4, r5, r6, pc}
 80038da:	bf00      	nop
 80038dc:	20000874 	.word	0x20000874
 80038e0:	20000884 	.word	0x20000884
	...

080038f0 <chMBFetch.constprop.38>:
 80038f0:	b570      	push	{r4, r5, r6, lr}
 80038f2:	2320      	movs	r3, #32
 80038f4:	4606      	mov	r6, r0
 80038f6:	f383 8811 	msr	BASEPRI, r3
 80038fa:	4c0d      	ldr	r4, [pc, #52]	; (8003930 <chMBFetch.constprop.38+0x40>)
 80038fc:	f104 0010 	add.w	r0, r4, #16
 8003900:	f7ff ff86 	bl	8003810 <chSemWaitTimeoutS>
 8003904:	4605      	mov	r5, r0
 8003906:	b970      	cbnz	r0, 8003926 <chMBFetch.constprop.38+0x36>
 8003908:	68e3      	ldr	r3, [r4, #12]
 800390a:	6862      	ldr	r2, [r4, #4]
 800390c:	6819      	ldr	r1, [r3, #0]
 800390e:	4809      	ldr	r0, [pc, #36]	; (8003934 <chMBFetch.constprop.38+0x44>)
 8003910:	3304      	adds	r3, #4
 8003912:	4293      	cmp	r3, r2
 8003914:	60e3      	str	r3, [r4, #12]
 8003916:	6031      	str	r1, [r6, #0]
 8003918:	bf24      	itt	cs
 800391a:	6823      	ldrcs	r3, [r4, #0]
 800391c:	60e3      	strcs	r3, [r4, #12]
 800391e:	f7fe fa2f 	bl	8001d80 <chSemSignalI>
 8003922:	f7ff fb65 	bl	8002ff0 <chSchRescheduleS>
 8003926:	2300      	movs	r3, #0
 8003928:	f383 8811 	msr	BASEPRI, r3
 800392c:	4628      	mov	r0, r5
 800392e:	bd70      	pop	{r4, r5, r6, pc}
 8003930:	20000874 	.word	0x20000874
 8003934:	20000890 	.word	0x20000890
	...

08003940 <mbox1_execute>:
 8003940:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003942:	2320      	movs	r3, #32
 8003944:	b083      	sub	sp, #12
 8003946:	f383 8811 	msr	BASEPRI, r3
 800394a:	4dd1      	ldr	r5, [pc, #836]	; (8003c90 <mbox1_execute+0x350>)
 800394c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800394e:	f1a1 0105 	sub.w	r1, r1, #5
 8003952:	fab1 f181 	clz	r1, r1
 8003956:	2001      	movs	r0, #1
 8003958:	0949      	lsrs	r1, r1, #5
 800395a:	f7fc ffc9 	bl	80008f0 <_test_assert>
 800395e:	2800      	cmp	r0, #0
 8003960:	f040 8191 	bne.w	8003c86 <mbox1_execute+0x346>
 8003964:	f380 8811 	msr	BASEPRI, r0
 8003968:	2442      	movs	r4, #66	; 0x42
 800396a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800396e:	4620      	mov	r0, r4
 8003970:	f7ff ff66 	bl	8003840 <chMBPost.constprop.42>
 8003974:	fab0 f180 	clz	r1, r0
 8003978:	0949      	lsrs	r1, r1, #5
 800397a:	2002      	movs	r0, #2
 800397c:	f7fc ffb8 	bl	80008f0 <_test_assert>
 8003980:	3401      	adds	r4, #1
 8003982:	b978      	cbnz	r0, 80039a4 <mbox1_execute+0x64>
 8003984:	2c46      	cmp	r4, #70	; 0x46
 8003986:	d1f0      	bne.n	800396a <mbox1_execute+0x2a>
 8003988:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800398c:	2041      	movs	r0, #65	; 0x41
 800398e:	f7ff ff7f 	bl	8003890 <chMBPostAhead.constprop.40>
 8003992:	fab0 f180 	clz	r1, r0
 8003996:	0949      	lsrs	r1, r1, #5
 8003998:	2003      	movs	r0, #3
 800399a:	f7fc ffa9 	bl	80008f0 <_test_assert>
 800399e:	2800      	cmp	r0, #0
 80039a0:	f000 817e 	beq.w	8003ca0 <mbox1_execute+0x360>
 80039a4:	b003      	add	sp, #12
 80039a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80039a8:	f380 8811 	msr	BASEPRI, r0
 80039ac:	f384 8811 	msr	BASEPRI, r4
 80039b0:	2041      	movs	r0, #65	; 0x41
 80039b2:	f7fe f9f5 	bl	8001da0 <chMBPostI.constprop.41>
 80039b6:	fab0 f180 	clz	r1, r0
 80039ba:	0949      	lsrs	r1, r1, #5
 80039bc:	2016      	movs	r0, #22
 80039be:	f7fc ff97 	bl	80008f0 <_test_assert>
 80039c2:	2800      	cmp	r0, #0
 80039c4:	d1ee      	bne.n	80039a4 <mbox1_execute+0x64>
 80039c6:	2042      	movs	r0, #66	; 0x42
 80039c8:	f7fe f9ea 	bl	8001da0 <chMBPostI.constprop.41>
 80039cc:	fab0 f180 	clz	r1, r0
 80039d0:	0949      	lsrs	r1, r1, #5
 80039d2:	2017      	movs	r0, #23
 80039d4:	f7fc ff8c 	bl	80008f0 <_test_assert>
 80039d8:	2800      	cmp	r0, #0
 80039da:	d1e3      	bne.n	80039a4 <mbox1_execute+0x64>
 80039dc:	2043      	movs	r0, #67	; 0x43
 80039de:	f7fe f9df 	bl	8001da0 <chMBPostI.constprop.41>
 80039e2:	fab0 f180 	clz	r1, r0
 80039e6:	0949      	lsrs	r1, r1, #5
 80039e8:	2018      	movs	r0, #24
 80039ea:	f7fc ff81 	bl	80008f0 <_test_assert>
 80039ee:	2800      	cmp	r0, #0
 80039f0:	d1d8      	bne.n	80039a4 <mbox1_execute+0x64>
 80039f2:	2044      	movs	r0, #68	; 0x44
 80039f4:	f7fe f9d4 	bl	8001da0 <chMBPostI.constprop.41>
 80039f8:	fab0 f180 	clz	r1, r0
 80039fc:	0949      	lsrs	r1, r1, #5
 80039fe:	2019      	movs	r0, #25
 8003a00:	f7fc ff76 	bl	80008f0 <_test_assert>
 8003a04:	4606      	mov	r6, r0
 8003a06:	2800      	cmp	r0, #0
 8003a08:	d1cc      	bne.n	80039a4 <mbox1_execute+0x64>
 8003a0a:	2045      	movs	r0, #69	; 0x45
 8003a0c:	f7fe f9c8 	bl	8001da0 <chMBPostI.constprop.41>
 8003a10:	f386 8811 	msr	BASEPRI, r6
 8003a14:	fab0 f180 	clz	r1, r0
 8003a18:	0949      	lsrs	r1, r1, #5
 8003a1a:	201a      	movs	r0, #26
 8003a1c:	f7fc ff68 	bl	80008f0 <_test_assert>
 8003a20:	2800      	cmp	r0, #0
 8003a22:	d1bf      	bne.n	80039a4 <mbox1_execute+0x64>
 8003a24:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8003a28:	eba1 0c03 	sub.w	ip, r1, r3
 8003a2c:	f1dc 0100 	rsbs	r1, ip, #0
 8003a30:	eb41 010c 	adc.w	r1, r1, ip
 8003a34:	201b      	movs	r0, #27
 8003a36:	f7fc ff5b 	bl	80008f0 <_test_assert>
 8003a3a:	2800      	cmp	r0, #0
 8003a3c:	d1b2      	bne.n	80039a4 <mbox1_execute+0x64>
 8003a3e:	4607      	mov	r7, r0
 8003a40:	2605      	movs	r6, #5
 8003a42:	f384 8811 	msr	BASEPRI, r4
 8003a46:	a801      	add	r0, sp, #4
 8003a48:	f7fe f9ea 	bl	8001e20 <chMBFetchI.constprop.37>
 8003a4c:	f387 8811 	msr	BASEPRI, r7
 8003a50:	fab0 f180 	clz	r1, r0
 8003a54:	0949      	lsrs	r1, r1, #5
 8003a56:	201c      	movs	r0, #28
 8003a58:	f7fc ff4a 	bl	80008f0 <_test_assert>
 8003a5c:	2800      	cmp	r0, #0
 8003a5e:	d1a1      	bne.n	80039a4 <mbox1_execute+0x64>
 8003a60:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8003a64:	f7fc ff5c 	bl	8000920 <test_emit_token>
 8003a68:	3e01      	subs	r6, #1
 8003a6a:	d1ea      	bne.n	8003a42 <mbox1_execute+0x102>
 8003a6c:	4989      	ldr	r1, [pc, #548]	; (8003c94 <mbox1_execute+0x354>)
 8003a6e:	201d      	movs	r0, #29
 8003a70:	f7fc ff16 	bl	80008a0 <_test_assert_sequence>
 8003a74:	2800      	cmp	r0, #0
 8003a76:	d195      	bne.n	80039a4 <mbox1_execute+0x64>
 8003a78:	f384 8811 	msr	BASEPRI, r4
 8003a7c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8003a7e:	1f4f      	subs	r7, r1, #5
 8003a80:	4279      	negs	r1, r7
 8003a82:	4179      	adcs	r1, r7
 8003a84:	201e      	movs	r0, #30
 8003a86:	f7fc ff33 	bl	80008f0 <_test_assert>
 8003a8a:	2800      	cmp	r0, #0
 8003a8c:	f040 8223 	bne.w	8003ed6 <mbox1_execute+0x596>
 8003a90:	f386 8811 	msr	BASEPRI, r6
 8003a94:	f384 8811 	msr	BASEPRI, r4
 8003a98:	69a9      	ldr	r1, [r5, #24]
 8003a9a:	fab1 f181 	clz	r1, r1
 8003a9e:	0949      	lsrs	r1, r1, #5
 8003aa0:	201f      	movs	r0, #31
 8003aa2:	f7fc ff25 	bl	80008f0 <_test_assert>
 8003aa6:	2800      	cmp	r0, #0
 8003aa8:	f040 8215 	bne.w	8003ed6 <mbox1_execute+0x596>
 8003aac:	f386 8811 	msr	BASEPRI, r6
 8003ab0:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8003ab4:	1aca      	subs	r2, r1, r3
 8003ab6:	4251      	negs	r1, r2
 8003ab8:	4151      	adcs	r1, r2
 8003aba:	2020      	movs	r0, #32
 8003abc:	f7fc ff18 	bl	80008f0 <_test_assert>
 8003ac0:	2800      	cmp	r0, #0
 8003ac2:	f47f af6f 	bne.w	80039a4 <mbox1_execute+0x64>
 8003ac6:	f384 8811 	msr	BASEPRI, r4
 8003aca:	2045      	movs	r0, #69	; 0x45
 8003acc:	f7fe f988 	bl	8001de0 <chMBPostAheadI.constprop.39>
 8003ad0:	fab0 f180 	clz	r1, r0
 8003ad4:	0949      	lsrs	r1, r1, #5
 8003ad6:	2021      	movs	r0, #33	; 0x21
 8003ad8:	f7fc ff0a 	bl	80008f0 <_test_assert>
 8003adc:	2800      	cmp	r0, #0
 8003ade:	f47f af61 	bne.w	80039a4 <mbox1_execute+0x64>
 8003ae2:	2044      	movs	r0, #68	; 0x44
 8003ae4:	f7fe f97c 	bl	8001de0 <chMBPostAheadI.constprop.39>
 8003ae8:	fab0 f180 	clz	r1, r0
 8003aec:	0949      	lsrs	r1, r1, #5
 8003aee:	2022      	movs	r0, #34	; 0x22
 8003af0:	f7fc fefe 	bl	80008f0 <_test_assert>
 8003af4:	2800      	cmp	r0, #0
 8003af6:	f47f af55 	bne.w	80039a4 <mbox1_execute+0x64>
 8003afa:	2043      	movs	r0, #67	; 0x43
 8003afc:	f7fe f970 	bl	8001de0 <chMBPostAheadI.constprop.39>
 8003b00:	fab0 f180 	clz	r1, r0
 8003b04:	0949      	lsrs	r1, r1, #5
 8003b06:	2023      	movs	r0, #35	; 0x23
 8003b08:	f7fc fef2 	bl	80008f0 <_test_assert>
 8003b0c:	2800      	cmp	r0, #0
 8003b0e:	f47f af49 	bne.w	80039a4 <mbox1_execute+0x64>
 8003b12:	2042      	movs	r0, #66	; 0x42
 8003b14:	f7fe f964 	bl	8001de0 <chMBPostAheadI.constprop.39>
 8003b18:	fab0 f180 	clz	r1, r0
 8003b1c:	0949      	lsrs	r1, r1, #5
 8003b1e:	2024      	movs	r0, #36	; 0x24
 8003b20:	f7fc fee6 	bl	80008f0 <_test_assert>
 8003b24:	2800      	cmp	r0, #0
 8003b26:	f47f af3d 	bne.w	80039a4 <mbox1_execute+0x64>
 8003b2a:	2041      	movs	r0, #65	; 0x41
 8003b2c:	f7fe f958 	bl	8001de0 <chMBPostAheadI.constprop.39>
 8003b30:	2300      	movs	r3, #0
 8003b32:	f383 8811 	msr	BASEPRI, r3
 8003b36:	fab0 f180 	clz	r1, r0
 8003b3a:	0949      	lsrs	r1, r1, #5
 8003b3c:	2025      	movs	r0, #37	; 0x25
 8003b3e:	f7fc fed7 	bl	80008f0 <_test_assert>
 8003b42:	2800      	cmp	r0, #0
 8003b44:	f47f af2e 	bne.w	80039a4 <mbox1_execute+0x64>
 8003b48:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8003b4c:	1acb      	subs	r3, r1, r3
 8003b4e:	4259      	negs	r1, r3
 8003b50:	4159      	adcs	r1, r3
 8003b52:	2026      	movs	r0, #38	; 0x26
 8003b54:	f7fc fecc 	bl	80008f0 <_test_assert>
 8003b58:	2800      	cmp	r0, #0
 8003b5a:	f47f af23 	bne.w	80039a4 <mbox1_execute+0x64>
 8003b5e:	4606      	mov	r6, r0
 8003b60:	2405      	movs	r4, #5
 8003b62:	2720      	movs	r7, #32
 8003b64:	f387 8811 	msr	BASEPRI, r7
 8003b68:	a801      	add	r0, sp, #4
 8003b6a:	f7fe f959 	bl	8001e20 <chMBFetchI.constprop.37>
 8003b6e:	f386 8811 	msr	BASEPRI, r6
 8003b72:	fab0 f180 	clz	r1, r0
 8003b76:	0949      	lsrs	r1, r1, #5
 8003b78:	2027      	movs	r0, #39	; 0x27
 8003b7a:	f7fc feb9 	bl	80008f0 <_test_assert>
 8003b7e:	2800      	cmp	r0, #0
 8003b80:	f47f af10 	bne.w	80039a4 <mbox1_execute+0x64>
 8003b84:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8003b88:	f7fc feca 	bl	8000920 <test_emit_token>
 8003b8c:	3c01      	subs	r4, #1
 8003b8e:	d1e9      	bne.n	8003b64 <mbox1_execute+0x224>
 8003b90:	4940      	ldr	r1, [pc, #256]	; (8003c94 <mbox1_execute+0x354>)
 8003b92:	2028      	movs	r0, #40	; 0x28
 8003b94:	f7fc fe84 	bl	80008a0 <_test_assert_sequence>
 8003b98:	2800      	cmp	r0, #0
 8003b9a:	f47f af03 	bne.w	80039a4 <mbox1_execute+0x64>
 8003b9e:	f387 8811 	msr	BASEPRI, r7
 8003ba2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8003ba4:	f1a1 0e05 	sub.w	lr, r1, #5
 8003ba8:	f1de 0100 	rsbs	r1, lr, #0
 8003bac:	eb41 010e 	adc.w	r1, r1, lr
 8003bb0:	2029      	movs	r0, #41	; 0x29
 8003bb2:	f7fc fe9d 	bl	80008f0 <_test_assert>
 8003bb6:	2800      	cmp	r0, #0
 8003bb8:	f040 80c5 	bne.w	8003d46 <mbox1_execute+0x406>
 8003bbc:	f384 8811 	msr	BASEPRI, r4
 8003bc0:	f387 8811 	msr	BASEPRI, r7
 8003bc4:	69a9      	ldr	r1, [r5, #24]
 8003bc6:	fab1 f181 	clz	r1, r1
 8003bca:	0949      	lsrs	r1, r1, #5
 8003bcc:	202a      	movs	r0, #42	; 0x2a
 8003bce:	f7fc fe8f 	bl	80008f0 <_test_assert>
 8003bd2:	2800      	cmp	r0, #0
 8003bd4:	f040 80b7 	bne.w	8003d46 <mbox1_execute+0x406>
 8003bd8:	f384 8811 	msr	BASEPRI, r4
 8003bdc:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8003be0:	eba1 0c03 	sub.w	ip, r1, r3
 8003be4:	f1dc 0100 	rsbs	r1, ip, #0
 8003be8:	eb41 010c 	adc.w	r1, r1, ip
 8003bec:	202b      	movs	r0, #43	; 0x2b
 8003bee:	f7fc fe7f 	bl	80008f0 <_test_assert>
 8003bf2:	2800      	cmp	r0, #0
 8003bf4:	f47f aed6 	bne.w	80039a4 <mbox1_execute+0x64>
 8003bf8:	f387 8811 	msr	BASEPRI, r7
 8003bfc:	e9d5 3200 	ldrd	r3, r2, [r5]
 8003c00:	1ad2      	subs	r2, r2, r3
 8003c02:	1091      	asrs	r1, r2, #2
 8003c04:	4824      	ldr	r0, [pc, #144]	; (8003c98 <mbox1_execute+0x358>)
 8003c06:	60ab      	str	r3, [r5, #8]
 8003c08:	60eb      	str	r3, [r5, #12]
 8003c0a:	f7fe f929 	bl	8001e60 <chSemResetI>
 8003c0e:	4621      	mov	r1, r4
 8003c10:	4822      	ldr	r0, [pc, #136]	; (8003c9c <mbox1_execute+0x35c>)
 8003c12:	f7fe f925 	bl	8001e60 <chSemResetI>
 8003c16:	f7ff f9eb 	bl	8002ff0 <chSchRescheduleS>
 8003c1a:	f384 8811 	msr	BASEPRI, r4
 8003c1e:	f387 8811 	msr	BASEPRI, r7
 8003c22:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8003c24:	1f4e      	subs	r6, r1, #5
 8003c26:	4271      	negs	r1, r6
 8003c28:	4171      	adcs	r1, r6
 8003c2a:	202c      	movs	r0, #44	; 0x2c
 8003c2c:	f7fc fe60 	bl	80008f0 <_test_assert>
 8003c30:	2800      	cmp	r0, #0
 8003c32:	f040 8088 	bne.w	8003d46 <mbox1_execute+0x406>
 8003c36:	f384 8811 	msr	BASEPRI, r4
 8003c3a:	f387 8811 	msr	BASEPRI, r7
 8003c3e:	69a9      	ldr	r1, [r5, #24]
 8003c40:	fab1 f181 	clz	r1, r1
 8003c44:	0949      	lsrs	r1, r1, #5
 8003c46:	202d      	movs	r0, #45	; 0x2d
 8003c48:	f7fc fe52 	bl	80008f0 <_test_assert>
 8003c4c:	2800      	cmp	r0, #0
 8003c4e:	d17a      	bne.n	8003d46 <mbox1_execute+0x406>
 8003c50:	f384 8811 	msr	BASEPRI, r4
 8003c54:	f387 8811 	msr	BASEPRI, r7
 8003c58:	6829      	ldr	r1, [r5, #0]
 8003c5a:	68ab      	ldr	r3, [r5, #8]
 8003c5c:	1aca      	subs	r2, r1, r3
 8003c5e:	4251      	negs	r1, r2
 8003c60:	4151      	adcs	r1, r2
 8003c62:	202e      	movs	r0, #46	; 0x2e
 8003c64:	f7fc fe44 	bl	80008f0 <_test_assert>
 8003c68:	2800      	cmp	r0, #0
 8003c6a:	d16c      	bne.n	8003d46 <mbox1_execute+0x406>
 8003c6c:	f384 8811 	msr	BASEPRI, r4
 8003c70:	f387 8811 	msr	BASEPRI, r7
 8003c74:	6829      	ldr	r1, [r5, #0]
 8003c76:	68eb      	ldr	r3, [r5, #12]
 8003c78:	1acb      	subs	r3, r1, r3
 8003c7a:	4259      	negs	r1, r3
 8003c7c:	f04f 002f 	mov.w	r0, #47	; 0x2f
 8003c80:	4159      	adcs	r1, r3
 8003c82:	f7fc fe35 	bl	80008f0 <_test_assert>
 8003c86:	2300      	movs	r3, #0
 8003c88:	f383 8811 	msr	BASEPRI, r3
 8003c8c:	b003      	add	sp, #12
 8003c8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003c90:	20000874 	.word	0x20000874
 8003c94:	08008e90 	.word	0x08008e90
 8003c98:	20000890 	.word	0x20000890
 8003c9c:	20000884 	.word	0x20000884
 8003ca0:	2101      	movs	r1, #1
 8003ca2:	2058      	movs	r0, #88	; 0x58
 8003ca4:	f7ff fdcc 	bl	8003840 <chMBPost.constprop.42>
 8003ca8:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8003cac:	fab1 f181 	clz	r1, r1
 8003cb0:	0949      	lsrs	r1, r1, #5
 8003cb2:	2004      	movs	r0, #4
 8003cb4:	f7fc fe1c 	bl	80008f0 <_test_assert>
 8003cb8:	4604      	mov	r4, r0
 8003cba:	2800      	cmp	r0, #0
 8003cbc:	f47f ae72 	bne.w	80039a4 <mbox1_execute+0x64>
 8003cc0:	2620      	movs	r6, #32
 8003cc2:	f386 8811 	msr	BASEPRI, r6
 8003cc6:	2058      	movs	r0, #88	; 0x58
 8003cc8:	f7fe f86a 	bl	8001da0 <chMBPostI.constprop.41>
 8003ccc:	4601      	mov	r1, r0
 8003cce:	f384 8811 	msr	BASEPRI, r4
 8003cd2:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 8003cd6:	fab1 f181 	clz	r1, r1
 8003cda:	2005      	movs	r0, #5
 8003cdc:	0949      	lsrs	r1, r1, #5
 8003cde:	f7fc fe07 	bl	80008f0 <_test_assert>
 8003ce2:	2800      	cmp	r0, #0
 8003ce4:	f47f ae5e 	bne.w	80039a4 <mbox1_execute+0x64>
 8003ce8:	2101      	movs	r1, #1
 8003cea:	2058      	movs	r0, #88	; 0x58
 8003cec:	f7ff fdd0 	bl	8003890 <chMBPostAhead.constprop.40>
 8003cf0:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8003cf4:	fab1 f181 	clz	r1, r1
 8003cf8:	0949      	lsrs	r1, r1, #5
 8003cfa:	2006      	movs	r0, #6
 8003cfc:	f7fc fdf8 	bl	80008f0 <_test_assert>
 8003d00:	4604      	mov	r4, r0
 8003d02:	2800      	cmp	r0, #0
 8003d04:	f47f ae4e 	bne.w	80039a4 <mbox1_execute+0x64>
 8003d08:	f386 8811 	msr	BASEPRI, r6
 8003d0c:	2058      	movs	r0, #88	; 0x58
 8003d0e:	f7fe f867 	bl	8001de0 <chMBPostAheadI.constprop.39>
 8003d12:	4601      	mov	r1, r0
 8003d14:	f384 8811 	msr	BASEPRI, r4
 8003d18:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 8003d1c:	fab1 f181 	clz	r1, r1
 8003d20:	2007      	movs	r0, #7
 8003d22:	0949      	lsrs	r1, r1, #5
 8003d24:	f7fc fde4 	bl	80008f0 <_test_assert>
 8003d28:	4604      	mov	r4, r0
 8003d2a:	2800      	cmp	r0, #0
 8003d2c:	f47f ae3a 	bne.w	80039a4 <mbox1_execute+0x64>
 8003d30:	f386 8811 	msr	BASEPRI, r6
 8003d34:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8003d36:	fab1 f181 	clz	r1, r1
 8003d3a:	0949      	lsrs	r1, r1, #5
 8003d3c:	2008      	movs	r0, #8
 8003d3e:	f7fc fdd7 	bl	80008f0 <_test_assert>
 8003d42:	4607      	mov	r7, r0
 8003d44:	b110      	cbz	r0, 8003d4c <mbox1_execute+0x40c>
 8003d46:	f384 8811 	msr	BASEPRI, r4
 8003d4a:	e62b      	b.n	80039a4 <mbox1_execute+0x64>
 8003d4c:	f380 8811 	msr	BASEPRI, r0
 8003d50:	f386 8811 	msr	BASEPRI, r6
 8003d54:	69a9      	ldr	r1, [r5, #24]
 8003d56:	f1a1 0e05 	sub.w	lr, r1, #5
 8003d5a:	f1de 0100 	rsbs	r1, lr, #0
 8003d5e:	eb41 010e 	adc.w	r1, r1, lr
 8003d62:	2009      	movs	r0, #9
 8003d64:	f7fc fdc4 	bl	80008f0 <_test_assert>
 8003d68:	b110      	cbz	r0, 8003d70 <mbox1_execute+0x430>
 8003d6a:	f387 8811 	msr	BASEPRI, r7
 8003d6e:	e619      	b.n	80039a4 <mbox1_execute+0x64>
 8003d70:	f380 8811 	msr	BASEPRI, r0
 8003d74:	f386 8811 	msr	BASEPRI, r6
 8003d78:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8003d7c:	eba1 0c03 	sub.w	ip, r1, r3
 8003d80:	f1dc 0100 	rsbs	r1, ip, #0
 8003d84:	f04f 000a 	mov.w	r0, #10
 8003d88:	eb41 010c 	adc.w	r1, r1, ip
 8003d8c:	f7fc fdb0 	bl	80008f0 <_test_assert>
 8003d90:	2300      	movs	r3, #0
 8003d92:	2800      	cmp	r0, #0
 8003d94:	f47f af78 	bne.w	8003c88 <mbox1_execute+0x348>
 8003d98:	f383 8811 	msr	BASEPRI, r3
 8003d9c:	2405      	movs	r4, #5
 8003d9e:	e005      	b.n	8003dac <mbox1_execute+0x46c>
 8003da0:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8003da4:	f7fc fdbc 	bl	8000920 <test_emit_token>
 8003da8:	3c01      	subs	r4, #1
 8003daa:	d00d      	beq.n	8003dc8 <mbox1_execute+0x488>
 8003dac:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003db0:	a801      	add	r0, sp, #4
 8003db2:	f7ff fd9d 	bl	80038f0 <chMBFetch.constprop.38>
 8003db6:	fab0 f180 	clz	r1, r0
 8003dba:	0949      	lsrs	r1, r1, #5
 8003dbc:	200b      	movs	r0, #11
 8003dbe:	f7fc fd97 	bl	80008f0 <_test_assert>
 8003dc2:	2800      	cmp	r0, #0
 8003dc4:	d0ec      	beq.n	8003da0 <mbox1_execute+0x460>
 8003dc6:	e5ed      	b.n	80039a4 <mbox1_execute+0x64>
 8003dc8:	4944      	ldr	r1, [pc, #272]	; (8003edc <mbox1_execute+0x59c>)
 8003dca:	200c      	movs	r0, #12
 8003dcc:	f7fc fd68 	bl	80008a0 <_test_assert_sequence>
 8003dd0:	2800      	cmp	r0, #0
 8003dd2:	f47f ade7 	bne.w	80039a4 <mbox1_execute+0x64>
 8003dd6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003dda:	2047      	movs	r0, #71	; 0x47
 8003ddc:	f7ff fd30 	bl	8003840 <chMBPost.constprop.42>
 8003de0:	fab0 f180 	clz	r1, r0
 8003de4:	0949      	lsrs	r1, r1, #5
 8003de6:	200d      	movs	r0, #13
 8003de8:	f7fc fd82 	bl	80008f0 <_test_assert>
 8003dec:	2800      	cmp	r0, #0
 8003dee:	f47f add9 	bne.w	80039a4 <mbox1_execute+0x64>
 8003df2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003df6:	a801      	add	r0, sp, #4
 8003df8:	f7ff fd7a 	bl	80038f0 <chMBFetch.constprop.38>
 8003dfc:	fab0 f180 	clz	r1, r0
 8003e00:	0949      	lsrs	r1, r1, #5
 8003e02:	200e      	movs	r0, #14
 8003e04:	f7fc fd74 	bl	80008f0 <_test_assert>
 8003e08:	2800      	cmp	r0, #0
 8003e0a:	f47f adcb 	bne.w	80039a4 <mbox1_execute+0x64>
 8003e0e:	6829      	ldr	r1, [r5, #0]
 8003e10:	68ab      	ldr	r3, [r5, #8]
 8003e12:	1acf      	subs	r7, r1, r3
 8003e14:	4279      	negs	r1, r7
 8003e16:	4179      	adcs	r1, r7
 8003e18:	200f      	movs	r0, #15
 8003e1a:	f7fc fd69 	bl	80008f0 <_test_assert>
 8003e1e:	2800      	cmp	r0, #0
 8003e20:	f47f adc0 	bne.w	80039a4 <mbox1_execute+0x64>
 8003e24:	6829      	ldr	r1, [r5, #0]
 8003e26:	68eb      	ldr	r3, [r5, #12]
 8003e28:	1ace      	subs	r6, r1, r3
 8003e2a:	4271      	negs	r1, r6
 8003e2c:	4171      	adcs	r1, r6
 8003e2e:	2010      	movs	r0, #16
 8003e30:	f7fc fd5e 	bl	80008f0 <_test_assert>
 8003e34:	2800      	cmp	r0, #0
 8003e36:	f47f adb5 	bne.w	80039a4 <mbox1_execute+0x64>
 8003e3a:	2101      	movs	r1, #1
 8003e3c:	a801      	add	r0, sp, #4
 8003e3e:	f7ff fd57 	bl	80038f0 <chMBFetch.constprop.38>
 8003e42:	3001      	adds	r0, #1
 8003e44:	4241      	negs	r1, r0
 8003e46:	4141      	adcs	r1, r0
 8003e48:	2011      	movs	r0, #17
 8003e4a:	f7fc fd51 	bl	80008f0 <_test_assert>
 8003e4e:	2800      	cmp	r0, #0
 8003e50:	f47f ada8 	bne.w	80039a4 <mbox1_execute+0x64>
 8003e54:	2620      	movs	r6, #32
 8003e56:	f386 8811 	msr	BASEPRI, r6
 8003e5a:	a801      	add	r0, sp, #4
 8003e5c:	f7fd ffe0 	bl	8001e20 <chMBFetchI.constprop.37>
 8003e60:	4601      	mov	r1, r0
 8003e62:	f384 8811 	msr	BASEPRI, r4
 8003e66:	1c4a      	adds	r2, r1, #1
 8003e68:	4251      	negs	r1, r2
 8003e6a:	4151      	adcs	r1, r2
 8003e6c:	2012      	movs	r0, #18
 8003e6e:	f7fc fd3f 	bl	80008f0 <_test_assert>
 8003e72:	2800      	cmp	r0, #0
 8003e74:	f47f ad96 	bne.w	80039a4 <mbox1_execute+0x64>
 8003e78:	f386 8811 	msr	BASEPRI, r6
 8003e7c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8003e7e:	1f4b      	subs	r3, r1, #5
 8003e80:	4259      	negs	r1, r3
 8003e82:	4159      	adcs	r1, r3
 8003e84:	2013      	movs	r0, #19
 8003e86:	f7fc fd33 	bl	80008f0 <_test_assert>
 8003e8a:	2800      	cmp	r0, #0
 8003e8c:	f47f aefb 	bne.w	8003c86 <mbox1_execute+0x346>
 8003e90:	2700      	movs	r7, #0
 8003e92:	f387 8811 	msr	BASEPRI, r7
 8003e96:	2420      	movs	r4, #32
 8003e98:	f384 8811 	msr	BASEPRI, r4
 8003e9c:	69a9      	ldr	r1, [r5, #24]
 8003e9e:	fab1 f181 	clz	r1, r1
 8003ea2:	0949      	lsrs	r1, r1, #5
 8003ea4:	2014      	movs	r0, #20
 8003ea6:	f7fc fd23 	bl	80008f0 <_test_assert>
 8003eaa:	4606      	mov	r6, r0
 8003eac:	2800      	cmp	r0, #0
 8003eae:	f47f af5c 	bne.w	8003d6a <mbox1_execute+0x42a>
 8003eb2:	f380 8811 	msr	BASEPRI, r0
 8003eb6:	f384 8811 	msr	BASEPRI, r4
 8003eba:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8003ebe:	eba1 0e03 	sub.w	lr, r1, r3
 8003ec2:	f1de 0100 	rsbs	r1, lr, #0
 8003ec6:	eb41 010e 	adc.w	r1, r1, lr
 8003eca:	2015      	movs	r0, #21
 8003ecc:	f7fc fd10 	bl	80008f0 <_test_assert>
 8003ed0:	2800      	cmp	r0, #0
 8003ed2:	f43f ad69 	beq.w	80039a8 <mbox1_execute+0x68>
 8003ed6:	f386 8811 	msr	BASEPRI, r6
 8003eda:	e563      	b.n	80039a4 <mbox1_execute+0x64>
 8003edc:	08008e90 	.word	0x08008e90

08003ee0 <chThdEnqueueTimeoutS>:
 8003ee0:	b161      	cbz	r1, 8003efc <chThdEnqueueTimeoutS+0x1c>
 8003ee2:	4b08      	ldr	r3, [pc, #32]	; (8003f04 <chThdEnqueueTimeoutS+0x24>)
 8003ee4:	699b      	ldr	r3, [r3, #24]
 8003ee6:	b410      	push	{r4}
 8003ee8:	6018      	str	r0, [r3, #0]
 8003eea:	6844      	ldr	r4, [r0, #4]
 8003eec:	605c      	str	r4, [r3, #4]
 8003eee:	4602      	mov	r2, r0
 8003ef0:	6023      	str	r3, [r4, #0]
 8003ef2:	2004      	movs	r0, #4
 8003ef4:	6053      	str	r3, [r2, #4]
 8003ef6:	bc10      	pop	{r4}
 8003ef8:	f7ff bb8a 	b.w	8003610 <chSchGoSleepTimeoutS>
 8003efc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003f00:	4770      	bx	lr
 8003f02:	bf00      	nop
 8003f04:	20001370 	.word	0x20001370
	...

08003f10 <chOQWriteTimeout>:
 8003f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f14:	b083      	sub	sp, #12
 8003f16:	4604      	mov	r4, r0
 8003f18:	460d      	mov	r5, r1
 8003f1a:	4616      	mov	r6, r2
 8003f1c:	9301      	str	r3, [sp, #4]
 8003f1e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8003f22:	f04f 0920 	mov.w	r9, #32
 8003f26:	f389 8811 	msr	BASEPRI, r9
 8003f2a:	2700      	movs	r7, #0
 8003f2c:	46ba      	mov	sl, r7
 8003f2e:	68a3      	ldr	r3, [r4, #8]
 8003f30:	f105 0b01 	add.w	fp, r5, #1
 8003f34:	1e59      	subs	r1, r3, #1
 8003f36:	4620      	mov	r0, r4
 8003f38:	b1fb      	cbz	r3, 8003f7a <chOQWriteTimeout+0x6a>
 8003f3a:	6963      	ldr	r3, [r4, #20]
 8003f3c:	60a1      	str	r1, [r4, #8]
 8003f3e:	1c59      	adds	r1, r3, #1
 8003f40:	6161      	str	r1, [r4, #20]
 8003f42:	7829      	ldrb	r1, [r5, #0]
 8003f44:	7019      	strb	r1, [r3, #0]
 8003f46:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 8003f4a:	4299      	cmp	r1, r3
 8003f4c:	bf24      	itt	cs
 8003f4e:	68e3      	ldrcs	r3, [r4, #12]
 8003f50:	6163      	strcs	r3, [r4, #20]
 8003f52:	f1b8 0f00 	cmp.w	r8, #0
 8003f56:	d000      	beq.n	8003f5a <chOQWriteTimeout+0x4a>
 8003f58:	47c0      	blx	r8
 8003f5a:	f38a 8811 	msr	BASEPRI, sl
 8003f5e:	3e01      	subs	r6, #1
 8003f60:	f107 0701 	add.w	r7, r7, #1
 8003f64:	d013      	beq.n	8003f8e <chOQWriteTimeout+0x7e>
 8003f66:	f389 8811 	msr	BASEPRI, r9
 8003f6a:	68a3      	ldr	r3, [r4, #8]
 8003f6c:	465d      	mov	r5, fp
 8003f6e:	1e59      	subs	r1, r3, #1
 8003f70:	f105 0b01 	add.w	fp, r5, #1
 8003f74:	4620      	mov	r0, r4
 8003f76:	2b00      	cmp	r3, #0
 8003f78:	d1df      	bne.n	8003f3a <chOQWriteTimeout+0x2a>
 8003f7a:	9901      	ldr	r1, [sp, #4]
 8003f7c:	9300      	str	r3, [sp, #0]
 8003f7e:	4620      	mov	r0, r4
 8003f80:	f7ff ffae 	bl	8003ee0 <chThdEnqueueTimeoutS>
 8003f84:	9b00      	ldr	r3, [sp, #0]
 8003f86:	2800      	cmp	r0, #0
 8003f88:	d0d1      	beq.n	8003f2e <chOQWriteTimeout+0x1e>
 8003f8a:	f383 8811 	msr	BASEPRI, r3
 8003f8e:	4638      	mov	r0, r7
 8003f90:	b003      	add	sp, #12
 8003f92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003f96:	bf00      	nop
	...

08003fa0 <writet.lto_priv.106>:
 8003fa0:	3030      	adds	r0, #48	; 0x30
 8003fa2:	f7ff bfb5 	b.w	8003f10 <chOQWriteTimeout>
 8003fa6:	bf00      	nop
	...

08003fb0 <write.lto_priv.118>:
 8003fb0:	3030      	adds	r0, #48	; 0x30
 8003fb2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003fb6:	f7ff bfab 	b.w	8003f10 <chOQWriteTimeout>
 8003fba:	bf00      	nop
 8003fbc:	0000      	movs	r0, r0
	...

08003fc0 <writet.lto_priv.105>:
 8003fc0:	3030      	adds	r0, #48	; 0x30
 8003fc2:	f7ff bfa5 	b.w	8003f10 <chOQWriteTimeout>
 8003fc6:	bf00      	nop
	...

08003fd0 <write.lto_priv.117>:
 8003fd0:	3030      	adds	r0, #48	; 0x30
 8003fd2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003fd6:	f7ff bf9b 	b.w	8003f10 <chOQWriteTimeout>
 8003fda:	bf00      	nop
 8003fdc:	0000      	movs	r0, r0
	...

08003fe0 <chOQPutTimeout>:
 8003fe0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003fe2:	4604      	mov	r4, r0
 8003fe4:	460f      	mov	r7, r1
 8003fe6:	4616      	mov	r6, r2
 8003fe8:	2320      	movs	r3, #32
 8003fea:	f383 8811 	msr	BASEPRI, r3
 8003fee:	e003      	b.n	8003ff8 <chOQPutTimeout+0x18>
 8003ff0:	f7ff ff76 	bl	8003ee0 <chThdEnqueueTimeoutS>
 8003ff4:	2800      	cmp	r0, #0
 8003ff6:	db17      	blt.n	8004028 <chOQPutTimeout+0x48>
 8003ff8:	68a5      	ldr	r5, [r4, #8]
 8003ffa:	4631      	mov	r1, r6
 8003ffc:	4620      	mov	r0, r4
 8003ffe:	2d00      	cmp	r5, #0
 8004000:	d0f6      	beq.n	8003ff0 <chOQPutTimeout+0x10>
 8004002:	6963      	ldr	r3, [r4, #20]
 8004004:	3d01      	subs	r5, #1
 8004006:	1c5a      	adds	r2, r3, #1
 8004008:	6162      	str	r2, [r4, #20]
 800400a:	60a5      	str	r5, [r4, #8]
 800400c:	701f      	strb	r7, [r3, #0]
 800400e:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8004012:	429a      	cmp	r2, r3
 8004014:	bf24      	itt	cs
 8004016:	68e3      	ldrcs	r3, [r4, #12]
 8004018:	6163      	strcs	r3, [r4, #20]
 800401a:	69e3      	ldr	r3, [r4, #28]
 800401c:	b103      	cbz	r3, 8004020 <chOQPutTimeout+0x40>
 800401e:	4798      	blx	r3
 8004020:	2000      	movs	r0, #0
 8004022:	f380 8811 	msr	BASEPRI, r0
 8004026:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004028:	f385 8811 	msr	BASEPRI, r5
 800402c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800402e:	bf00      	nop

08004030 <thread2.lto_priv.101>:
 8004030:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 8004034:	2100      	movs	r1, #0
 8004036:	4801      	ldr	r0, [pc, #4]	; (800403c <thread2.lto_priv.101+0xc>)
 8004038:	f7ff bfd2 	b.w	8003fe0 <chOQPutTimeout>
 800403c:	200008a8 	.word	0x200008a8

08004040 <putt.lto_priv.110>:
 8004040:	3030      	adds	r0, #48	; 0x30
 8004042:	f7ff bfcd 	b.w	8003fe0 <chOQPutTimeout>
 8004046:	bf00      	nop
	...

08004050 <put.lto_priv.114>:
 8004050:	3030      	adds	r0, #48	; 0x30
 8004052:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004056:	f7ff bfc3 	b.w	8003fe0 <chOQPutTimeout>
 800405a:	bf00      	nop
 800405c:	0000      	movs	r0, r0
	...

08004060 <putt.lto_priv.109>:
 8004060:	3030      	adds	r0, #48	; 0x30
 8004062:	f7ff bfbd 	b.w	8003fe0 <chOQPutTimeout>
 8004066:	bf00      	nop
	...

08004070 <put.lto_priv.113>:
 8004070:	3030      	adds	r0, #48	; 0x30
 8004072:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004076:	f7ff bfb3 	b.w	8003fe0 <chOQPutTimeout>
 800407a:	bf00      	nop
 800407c:	0000      	movs	r0, r0
	...

08004080 <chIQReadTimeout>:
 8004080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004084:	4604      	mov	r4, r0
 8004086:	b083      	sub	sp, #12
 8004088:	4689      	mov	r9, r1
 800408a:	4693      	mov	fp, r2
 800408c:	461d      	mov	r5, r3
 800408e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8004092:	2720      	movs	r7, #32
 8004094:	f387 8811 	msr	BASEPRI, r7
 8004098:	2600      	movs	r6, #0
 800409a:	9701      	str	r7, [sp, #4]
 800409c:	46b2      	mov	sl, r6
 800409e:	f1b8 0f00 	cmp.w	r8, #0
 80040a2:	d005      	beq.n	80040b0 <chIQReadTimeout+0x30>
 80040a4:	4620      	mov	r0, r4
 80040a6:	47c0      	blx	r8
 80040a8:	e002      	b.n	80040b0 <chIQReadTimeout+0x30>
 80040aa:	f7ff ff19 	bl	8003ee0 <chThdEnqueueTimeoutS>
 80040ae:	b9d8      	cbnz	r0, 80040e8 <chIQReadTimeout+0x68>
 80040b0:	68a7      	ldr	r7, [r4, #8]
 80040b2:	4629      	mov	r1, r5
 80040b4:	4620      	mov	r0, r4
 80040b6:	2f00      	cmp	r7, #0
 80040b8:	d0f7      	beq.n	80040aa <chIQReadTimeout+0x2a>
 80040ba:	69a2      	ldr	r2, [r4, #24]
 80040bc:	3f01      	subs	r7, #1
 80040be:	1c51      	adds	r1, r2, #1
 80040c0:	61a1      	str	r1, [r4, #24]
 80040c2:	60a7      	str	r7, [r4, #8]
 80040c4:	7813      	ldrb	r3, [r2, #0]
 80040c6:	f809 3b01 	strb.w	r3, [r9], #1
 80040ca:	6923      	ldr	r3, [r4, #16]
 80040cc:	69a2      	ldr	r2, [r4, #24]
 80040ce:	429a      	cmp	r2, r3
 80040d0:	bf24      	itt	cs
 80040d2:	68e3      	ldrcs	r3, [r4, #12]
 80040d4:	61a3      	strcs	r3, [r4, #24]
 80040d6:	f38a 8811 	msr	BASEPRI, sl
 80040da:	3601      	adds	r6, #1
 80040dc:	45b3      	cmp	fp, r6
 80040de:	d005      	beq.n	80040ec <chIQReadTimeout+0x6c>
 80040e0:	9b01      	ldr	r3, [sp, #4]
 80040e2:	f383 8811 	msr	BASEPRI, r3
 80040e6:	e7da      	b.n	800409e <chIQReadTimeout+0x1e>
 80040e8:	f387 8811 	msr	BASEPRI, r7
 80040ec:	4630      	mov	r0, r6
 80040ee:	b003      	add	sp, #12
 80040f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08004100 <readt.lto_priv.104>:
 8004100:	300c      	adds	r0, #12
 8004102:	f7ff bfbd 	b.w	8004080 <chIQReadTimeout>
 8004106:	bf00      	nop
	...

08004110 <read.lto_priv.116>:
 8004110:	300c      	adds	r0, #12
 8004112:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004116:	f7ff bfb3 	b.w	8004080 <chIQReadTimeout>
 800411a:	bf00      	nop
 800411c:	0000      	movs	r0, r0
	...

08004120 <readt.lto_priv.103>:
 8004120:	300c      	adds	r0, #12
 8004122:	f7ff bfad 	b.w	8004080 <chIQReadTimeout>
 8004126:	bf00      	nop
	...

08004130 <read.lto_priv.115>:
 8004130:	300c      	adds	r0, #12
 8004132:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004136:	f7ff bfa3 	b.w	8004080 <chIQReadTimeout>
 800413a:	bf00      	nop
 800413c:	0000      	movs	r0, r0
	...

08004140 <chIQGetTimeout>:
 8004140:	b570      	push	{r4, r5, r6, lr}
 8004142:	2320      	movs	r3, #32
 8004144:	460e      	mov	r6, r1
 8004146:	4604      	mov	r4, r0
 8004148:	f383 8811 	msr	BASEPRI, r3
 800414c:	69c3      	ldr	r3, [r0, #28]
 800414e:	b12b      	cbz	r3, 800415c <chIQGetTimeout+0x1c>
 8004150:	4798      	blx	r3
 8004152:	e003      	b.n	800415c <chIQGetTimeout+0x1c>
 8004154:	f7ff fec4 	bl	8003ee0 <chThdEnqueueTimeoutS>
 8004158:	2800      	cmp	r0, #0
 800415a:	db15      	blt.n	8004188 <chIQGetTimeout+0x48>
 800415c:	68a5      	ldr	r5, [r4, #8]
 800415e:	4631      	mov	r1, r6
 8004160:	4620      	mov	r0, r4
 8004162:	2d00      	cmp	r5, #0
 8004164:	d0f6      	beq.n	8004154 <chIQGetTimeout+0x14>
 8004166:	69a2      	ldr	r2, [r4, #24]
 8004168:	6921      	ldr	r1, [r4, #16]
 800416a:	1c53      	adds	r3, r2, #1
 800416c:	428b      	cmp	r3, r1
 800416e:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8004172:	61a3      	str	r3, [r4, #24]
 8004174:	60a5      	str	r5, [r4, #8]
 8004176:	bf28      	it	cs
 8004178:	68e3      	ldrcs	r3, [r4, #12]
 800417a:	7810      	ldrb	r0, [r2, #0]
 800417c:	bf28      	it	cs
 800417e:	61a3      	strcs	r3, [r4, #24]
 8004180:	2300      	movs	r3, #0
 8004182:	f383 8811 	msr	BASEPRI, r3
 8004186:	bd70      	pop	{r4, r5, r6, pc}
 8004188:	f385 8811 	msr	BASEPRI, r5
 800418c:	bd70      	pop	{r4, r5, r6, pc}
 800418e:	bf00      	nop

08004190 <thread1.lto_priv.95>:
 8004190:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8004194:	4801      	ldr	r0, [pc, #4]	; (800419c <thread1.lto_priv.95+0xc>)
 8004196:	f7ff bfd3 	b.w	8004140 <chIQGetTimeout>
 800419a:	bf00      	nop
 800419c:	20000810 	.word	0x20000810

080041a0 <gett.lto_priv.108>:
 80041a0:	300c      	adds	r0, #12
 80041a2:	f7ff bfcd 	b.w	8004140 <chIQGetTimeout>
 80041a6:	bf00      	nop
	...

080041b0 <get.lto_priv.112>:
 80041b0:	300c      	adds	r0, #12
 80041b2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80041b6:	f7ff bfc3 	b.w	8004140 <chIQGetTimeout>
 80041ba:	bf00      	nop
 80041bc:	0000      	movs	r0, r0
	...

080041c0 <gett.lto_priv.107>:
 80041c0:	300c      	adds	r0, #12
 80041c2:	f7ff bfbd 	b.w	8004140 <chIQGetTimeout>
 80041c6:	bf00      	nop
	...

080041d0 <get.lto_priv.111>:
 80041d0:	300c      	adds	r0, #12
 80041d2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80041d6:	f7ff bfb3 	b.w	8004140 <chIQGetTimeout>
 80041da:	bf00      	nop
 80041dc:	0000      	movs	r0, r0
	...

080041e0 <chThdSleepUntil>:
 80041e0:	b508      	push	{r3, lr}
 80041e2:	2320      	movs	r3, #32
 80041e4:	f383 8811 	msr	BASEPRI, r3
 80041e8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80041ec:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80041ee:	1a41      	subs	r1, r0, r1
 80041f0:	d002      	beq.n	80041f8 <chThdSleepUntil+0x18>
 80041f2:	2008      	movs	r0, #8
 80041f4:	f7ff fa0c 	bl	8003610 <chSchGoSleepTimeoutS>
 80041f8:	2300      	movs	r3, #0
 80041fa:	f383 8811 	msr	BASEPRI, r3
 80041fe:	bd08      	pop	{r3, pc}

08004200 <chThdSleep>:
 8004200:	b508      	push	{r3, lr}
 8004202:	4601      	mov	r1, r0
 8004204:	2320      	movs	r3, #32
 8004206:	f383 8811 	msr	BASEPRI, r3
 800420a:	2008      	movs	r0, #8
 800420c:	f7ff fa00 	bl	8003610 <chSchGoSleepTimeoutS>
 8004210:	2300      	movs	r3, #0
 8004212:	f383 8811 	msr	BASEPRI, r3
 8004216:	bd08      	pop	{r3, pc}
	...

08004220 <sys1_execute>:
 8004220:	b510      	push	{r4, lr}
 8004222:	b086      	sub	sp, #24
 8004224:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8004228:	b91b      	cbnz	r3, 8004232 <sys1_execute+0x12>
 800422a:	f7fd fee1 	bl	8001ff0 <chSysGetStatusAndLockX.part.2>
 800422e:	f7fe ffe7 	bl	8003200 <chSysRestoreStatusX.part.3>
 8004232:	2320      	movs	r3, #32
 8004234:	f383 8811 	msr	BASEPRI, r3
 8004238:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800423c:	b91b      	cbnz	r3, 8004246 <sys1_execute+0x26>
 800423e:	f7fd fed7 	bl	8001ff0 <chSysGetStatusAndLockX.part.2>
 8004242:	f7fe ffdd 	bl	8003200 <chSysRestoreStatusX.part.3>
 8004246:	2300      	movs	r3, #0
 8004248:	f383 8811 	msr	BASEPRI, r3
 800424c:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8004250:	b913      	cbnz	r3, 8004258 <sys1_execute+0x38>
 8004252:	2320      	movs	r3, #32
 8004254:	f383 8811 	msr	BASEPRI, r3
 8004258:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800425c:	b913      	cbnz	r3, 8004264 <sys1_execute+0x44>
 800425e:	2320      	movs	r3, #32
 8004260:	f383 8811 	msr	BASEPRI, r3
 8004264:	2300      	movs	r3, #0
 8004266:	f383 8811 	msr	BASEPRI, r3
 800426a:	2220      	movs	r2, #32
 800426c:	f382 8811 	msr	BASEPRI, r2
 8004270:	f3ef 8212 	mrs	r2, BASEPRI_MAX
 8004274:	b10a      	cbz	r2, 800427a <sys1_execute+0x5a>
 8004276:	f383 8811 	msr	BASEPRI, r3
 800427a:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800427e:	b113      	cbz	r3, 8004286 <sys1_execute+0x66>
 8004280:	2300      	movs	r3, #0
 8004282:	f383 8811 	msr	BASEPRI, r3
 8004286:	2300      	movs	r3, #0
 8004288:	9304      	str	r3, [sp, #16]
 800428a:	2320      	movs	r3, #32
 800428c:	f383 8811 	msr	BASEPRI, r3
 8004290:	9b04      	ldr	r3, [sp, #16]
 8004292:	ac01      	add	r4, sp, #4
 8004294:	b113      	cbz	r3, 800429c <sys1_execute+0x7c>
 8004296:	4620      	mov	r0, r4
 8004298:	f7fd fe12 	bl	8001ec0 <chVTDoResetI>
 800429c:	4620      	mov	r0, r4
 800429e:	2300      	movs	r3, #0
 80042a0:	4a0b      	ldr	r2, [pc, #44]	; (80042d0 <sys1_execute+0xb0>)
 80042a2:	2101      	movs	r1, #1
 80042a4:	f7fd fe44 	bl	8001f30 <chVTDoSetI>
 80042a8:	2400      	movs	r4, #0
 80042aa:	f384 8811 	msr	BASEPRI, r4
 80042ae:	200a      	movs	r0, #10
 80042b0:	f7ff ffa6 	bl	8004200 <chThdSleep>
 80042b4:	2320      	movs	r3, #32
 80042b6:	f383 8811 	msr	BASEPRI, r3
 80042ba:	9904      	ldr	r1, [sp, #16]
 80042bc:	f384 8811 	msr	BASEPRI, r4
 80042c0:	fab1 f181 	clz	r1, r1
 80042c4:	0949      	lsrs	r1, r1, #5
 80042c6:	2001      	movs	r0, #1
 80042c8:	f7fc fb12 	bl	80008f0 <_test_assert>
 80042cc:	b006      	add	sp, #24
 80042ce:	bd10      	pop	{r4, pc}
 80042d0:	08003221 	.word	0x08003221
	...

080042e0 <thread1.lto_priv.94>:
 80042e0:	b510      	push	{r4, lr}
 80042e2:	4604      	mov	r4, r0
 80042e4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80042e8:	f7ff ff8a 	bl	8004200 <chThdSleep>
 80042ec:	2320      	movs	r3, #32
 80042ee:	f383 8811 	msr	BASEPRI, r3
 80042f2:	2101      	movs	r1, #1
 80042f4:	4620      	mov	r0, r4
 80042f6:	f7fd fbbb 	bl	8001a70 <chEvtSignalI>
 80042fa:	f7fe fe79 	bl	8002ff0 <chSchRescheduleS>
 80042fe:	2300      	movs	r3, #0
 8004300:	f383 8811 	msr	BASEPRI, r3
 8004304:	bd10      	pop	{r4, pc}
 8004306:	bf00      	nop
	...

08004310 <thread2.lto_priv.100>:
 8004310:	b538      	push	{r3, r4, r5, lr}
 8004312:	2520      	movs	r5, #32
 8004314:	f385 8811 	msr	BASEPRI, r5
 8004318:	2100      	movs	r1, #0
 800431a:	480b      	ldr	r0, [pc, #44]	; (8004348 <thread2.lto_priv.100+0x38>)
 800431c:	f7fd fbc0 	bl	8001aa0 <chEvtBroadcastFlagsI>
 8004320:	2400      	movs	r4, #0
 8004322:	f7fe fe65 	bl	8002ff0 <chSchRescheduleS>
 8004326:	f384 8811 	msr	BASEPRI, r4
 800432a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800432e:	f7ff ff67 	bl	8004200 <chThdSleep>
 8004332:	f385 8811 	msr	BASEPRI, r5
 8004336:	4805      	ldr	r0, [pc, #20]	; (800434c <thread2.lto_priv.100+0x3c>)
 8004338:	4621      	mov	r1, r4
 800433a:	f7fd fbb1 	bl	8001aa0 <chEvtBroadcastFlagsI>
 800433e:	f7fe fe57 	bl	8002ff0 <chSchRescheduleS>
 8004342:	f384 8811 	msr	BASEPRI, r4
 8004346:	bd38      	pop	{r3, r4, r5, pc}
 8004348:	20000808 	.word	0x20000808
 800434c:	2000080c 	.word	0x2000080c

08004350 <thread2.lto_priv.99>:
 8004350:	b508      	push	{r3, lr}
 8004352:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004356:	f7ff ff53 	bl	8004200 <chThdSleep>
 800435a:	2320      	movs	r3, #32
 800435c:	f383 8811 	msr	BASEPRI, r3
 8004360:	4804      	ldr	r0, [pc, #16]	; (8004374 <thread2.lto_priv.99+0x24>)
 8004362:	f7fd fd0d 	bl	8001d80 <chSemSignalI>
 8004366:	f7fe fe43 	bl	8002ff0 <chSchRescheduleS>
 800436a:	2300      	movs	r3, #0
 800436c:	f383 8811 	msr	BASEPRI, r3
 8004370:	bd08      	pop	{r3, pc}
 8004372:	bf00      	nop
 8004374:	200008cc 	.word	0x200008cc
	...

08004380 <test_wait_tick>:
 8004380:	b508      	push	{r3, lr}
 8004382:	2001      	movs	r0, #1
 8004384:	f7ff ff3c 	bl	8004200 <chThdSleep>
 8004388:	2320      	movs	r3, #32
 800438a:	f383 8811 	msr	BASEPRI, r3
 800438e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004392:	2300      	movs	r3, #0
 8004394:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8004396:	f383 8811 	msr	BASEPRI, r3
 800439a:	bd08      	pop	{r3, pc}
 800439c:	0000      	movs	r0, r0
	...

080043a0 <bmk10_execute>:
 80043a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80043a4:	f7ff ffec 	bl	8004380 <test_wait_tick>
 80043a8:	f7fd fe02 	bl	8001fb0 <test_start_timer.constprop.6>
 80043ac:	2400      	movs	r4, #0
 80043ae:	f8df a070 	ldr.w	sl, [pc, #112]	; 8004420 <bmk10_execute+0x80>
 80043b2:	4f16      	ldr	r7, [pc, #88]	; (800440c <bmk10_execute+0x6c>)
 80043b4:	4e16      	ldr	r6, [pc, #88]	; (8004410 <bmk10_execute+0x70>)
 80043b6:	4d17      	ldr	r5, [pc, #92]	; (8004414 <bmk10_execute+0x74>)
 80043b8:	46a1      	mov	r9, r4
 80043ba:	f04f 0820 	mov.w	r8, #32
 80043be:	f388 8811 	msr	BASEPRI, r8
 80043c2:	2300      	movs	r3, #0
 80043c4:	463a      	mov	r2, r7
 80043c6:	4630      	mov	r0, r6
 80043c8:	2101      	movs	r1, #1
 80043ca:	f7fd fdb1 	bl	8001f30 <chVTDoSetI>
 80043ce:	463a      	mov	r2, r7
 80043d0:	2300      	movs	r3, #0
 80043d2:	f242 7110 	movw	r1, #10000	; 0x2710
 80043d6:	4628      	mov	r0, r5
 80043d8:	f7fd fdaa 	bl	8001f30 <chVTDoSetI>
 80043dc:	4630      	mov	r0, r6
 80043de:	f7fd fd6f 	bl	8001ec0 <chVTDoResetI>
 80043e2:	4628      	mov	r0, r5
 80043e4:	f7fd fd6c 	bl	8001ec0 <chVTDoResetI>
 80043e8:	f389 8811 	msr	BASEPRI, r9
 80043ec:	f89a 3000 	ldrb.w	r3, [sl]
 80043f0:	3401      	adds	r4, #1
 80043f2:	2b00      	cmp	r3, #0
 80043f4:	d0e3      	beq.n	80043be <bmk10_execute+0x1e>
 80043f6:	4808      	ldr	r0, [pc, #32]	; (8004418 <bmk10_execute+0x78>)
 80043f8:	f7fc faea 	bl	80009d0 <test_print>
 80043fc:	0060      	lsls	r0, r4, #1
 80043fe:	f7fc f9ef 	bl	80007e0 <test_printn>
 8004402:	4806      	ldr	r0, [pc, #24]	; (800441c <bmk10_execute+0x7c>)
 8004404:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004408:	f7fc bac2 	b.w	8000990 <test_println>
 800440c:	080004e1 	.word	0x080004e1
 8004410:	20001d34 	.word	0x20001d34
 8004414:	20001d48 	.word	0x20001d48
 8004418:	08008930 	.word	0x08008930
 800441c:	08008940 	.word	0x08008940
 8004420:	20001cf0 	.word	0x20001cf0
	...

08004430 <bmk9_execute>:
 8004430:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004432:	4b26      	ldr	r3, [pc, #152]	; (80044cc <bmk9_execute+0x9c>)
 8004434:	4c26      	ldr	r4, [pc, #152]	; (80044d0 <bmk9_execute+0xa0>)
 8004436:	4f27      	ldr	r7, [pc, #156]	; (80044d4 <bmk9_execute+0xa4>)
 8004438:	60e3      	str	r3, [r4, #12]
 800443a:	f103 0210 	add.w	r2, r3, #16
 800443e:	2500      	movs	r5, #0
 8004440:	6122      	str	r2, [r4, #16]
 8004442:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8004446:	6024      	str	r4, [r4, #0]
 8004448:	6064      	str	r4, [r4, #4]
 800444a:	60a5      	str	r5, [r4, #8]
 800444c:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8004450:	f7ff ff96 	bl	8004380 <test_wait_tick>
 8004454:	f7fd fdac 	bl	8001fb0 <test_start_timer.constprop.6>
 8004458:	462e      	mov	r6, r5
 800445a:	2320      	movs	r3, #32
 800445c:	f383 8811 	msr	BASEPRI, r3
 8004460:	2100      	movs	r1, #0
 8004462:	4620      	mov	r0, r4
 8004464:	f7fd fab4 	bl	80019d0 <chIQPutI>
 8004468:	4620      	mov	r0, r4
 800446a:	2101      	movs	r1, #1
 800446c:	f7fd fab0 	bl	80019d0 <chIQPutI>
 8004470:	4620      	mov	r0, r4
 8004472:	2102      	movs	r1, #2
 8004474:	f7fd faac 	bl	80019d0 <chIQPutI>
 8004478:	4620      	mov	r0, r4
 800447a:	2103      	movs	r1, #3
 800447c:	f7fd faa8 	bl	80019d0 <chIQPutI>
 8004480:	f386 8811 	msr	BASEPRI, r6
 8004484:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8004488:	4620      	mov	r0, r4
 800448a:	f7ff fe59 	bl	8004140 <chIQGetTimeout>
 800448e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8004492:	4620      	mov	r0, r4
 8004494:	f7ff fe54 	bl	8004140 <chIQGetTimeout>
 8004498:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800449c:	4620      	mov	r0, r4
 800449e:	f7ff fe4f 	bl	8004140 <chIQGetTimeout>
 80044a2:	4620      	mov	r0, r4
 80044a4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80044a8:	f7ff fe4a 	bl	8004140 <chIQGetTimeout>
 80044ac:	783b      	ldrb	r3, [r7, #0]
 80044ae:	3501      	adds	r5, #1
 80044b0:	2b00      	cmp	r3, #0
 80044b2:	d0d2      	beq.n	800445a <bmk9_execute+0x2a>
 80044b4:	4808      	ldr	r0, [pc, #32]	; (80044d8 <bmk9_execute+0xa8>)
 80044b6:	f7fc fa8b 	bl	80009d0 <test_print>
 80044ba:	00a8      	lsls	r0, r5, #2
 80044bc:	f7fc f990 	bl	80007e0 <test_printn>
 80044c0:	4806      	ldr	r0, [pc, #24]	; (80044dc <bmk9_execute+0xac>)
 80044c2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80044c6:	f7fc ba63 	b.w	8000990 <test_println>
 80044ca:	bf00      	nop
 80044cc:	200015f0 	.word	0x200015f0
 80044d0:	20001600 	.word	0x20001600
 80044d4:	20001cf0 	.word	0x20001cf0
 80044d8:	08008930 	.word	0x08008930
 80044dc:	08008a70 	.word	0x08008a70

080044e0 <bmk6_execute>:
 80044e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80044e4:	4b14      	ldr	r3, [pc, #80]	; (8004538 <bmk6_execute+0x58>)
 80044e6:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8004548 <bmk6_execute+0x68>
 80044ea:	699b      	ldr	r3, [r3, #24]
 80044ec:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800454c <bmk6_execute+0x6c>
 80044f0:	689d      	ldr	r5, [r3, #8]
 80044f2:	4f12      	ldr	r7, [pc, #72]	; (800453c <bmk6_execute+0x5c>)
 80044f4:	b083      	sub	sp, #12
 80044f6:	f7ff ff43 	bl	8004380 <test_wait_tick>
 80044fa:	f7fd fd59 	bl	8001fb0 <test_start_timer.constprop.6>
 80044fe:	2400      	movs	r4, #0
 8004500:	3501      	adds	r5, #1
 8004502:	4626      	mov	r6, r4
 8004504:	4643      	mov	r3, r8
 8004506:	9600      	str	r6, [sp, #0]
 8004508:	462a      	mov	r2, r5
 800450a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800450e:	4638      	mov	r0, r7
 8004510:	f7fe ff5e 	bl	80033d0 <chThdCreateStatic>
 8004514:	f899 3000 	ldrb.w	r3, [r9]
 8004518:	3401      	adds	r4, #1
 800451a:	2b00      	cmp	r3, #0
 800451c:	d0f2      	beq.n	8004504 <bmk6_execute+0x24>
 800451e:	4808      	ldr	r0, [pc, #32]	; (8004540 <bmk6_execute+0x60>)
 8004520:	f7fc fa56 	bl	80009d0 <test_print>
 8004524:	4620      	mov	r0, r4
 8004526:	f7fc f95b 	bl	80007e0 <test_printn>
 800452a:	4806      	ldr	r0, [pc, #24]	; (8004544 <bmk6_execute+0x64>)
 800452c:	b003      	add	sp, #12
 800452e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004532:	f7fc ba2d 	b.w	8000990 <test_println>
 8004536:	bf00      	nop
 8004538:	20001370 	.word	0x20001370
 800453c:	20001660 	.word	0x20001660
 8004540:	08008930 	.word	0x08008930
 8004544:	08008a30 	.word	0x08008a30
 8004548:	20001cf0 	.word	0x20001cf0
 800454c:	08008551 	.word	0x08008551

08004550 <thd4_execute>:
 8004550:	b570      	push	{r4, r5, r6, lr}
 8004552:	f7ff ff15 	bl	8004380 <test_wait_tick>
 8004556:	2620      	movs	r6, #32
 8004558:	f386 8811 	msr	BASEPRI, r6
 800455c:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8004560:	2300      	movs	r3, #0
 8004562:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8004564:	f383 8811 	msr	BASEPRI, r3
 8004568:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800456c:	f7ff fe48 	bl	8004200 <chThdSleep>
 8004570:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8004574:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8004578:	2001      	movs	r0, #1
 800457a:	f7fc f971 	bl	8000860 <_test_assert_time_window>
 800457e:	b100      	cbz	r0, 8004582 <thd4_execute+0x32>
 8004580:	bd70      	pop	{r4, r5, r6, pc}
 8004582:	f386 8811 	msr	BASEPRI, r6
 8004586:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8004588:	f380 8811 	msr	BASEPRI, r0
 800458c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004590:	f7ff fe36 	bl	8004200 <chThdSleep>
 8004594:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8004598:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 800459c:	2002      	movs	r0, #2
 800459e:	f7fc f95f 	bl	8000860 <_test_assert_time_window>
 80045a2:	2800      	cmp	r0, #0
 80045a4:	d1ec      	bne.n	8004580 <thd4_execute+0x30>
 80045a6:	f386 8811 	msr	BASEPRI, r6
 80045aa:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 80045ac:	f380 8811 	msr	BASEPRI, r0
 80045b0:	f242 7010 	movw	r0, #10000	; 0x2710
 80045b4:	f7ff fe24 	bl	8004200 <chThdSleep>
 80045b8:	f504 521c 	add.w	r2, r4, #9984	; 0x2700
 80045bc:	4611      	mov	r1, r2
 80045be:	3110      	adds	r1, #16
 80045c0:	3213      	adds	r2, #19
 80045c2:	2003      	movs	r0, #3
 80045c4:	f7fc f94c 	bl	8000860 <_test_assert_time_window>
 80045c8:	2800      	cmp	r0, #0
 80045ca:	d1d9      	bne.n	8004580 <thd4_execute+0x30>
 80045cc:	f386 8811 	msr	BASEPRI, r6
 80045d0:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 80045d2:	f380 8811 	msr	BASEPRI, r0
 80045d6:	f504 757a 	add.w	r5, r4, #1000	; 0x3e8
 80045da:	4628      	mov	r0, r5
 80045dc:	f7ff fe00 	bl	80041e0 <chThdSleepUntil>
 80045e0:	4629      	mov	r1, r5
 80045e2:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 80045e6:	2004      	movs	r0, #4
 80045e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80045ec:	f7fc b938 	b.w	8000860 <_test_assert_time_window>

080045f0 <chMsgWait>:
 80045f0:	b510      	push	{r4, lr}
 80045f2:	2320      	movs	r3, #32
 80045f4:	f383 8811 	msr	BASEPRI, r3
 80045f8:	4c0b      	ldr	r4, [pc, #44]	; (8004628 <chMsgWait+0x38>)
 80045fa:	69a2      	ldr	r2, [r4, #24]
 80045fc:	4613      	mov	r3, r2
 80045fe:	f853 0f28 	ldr.w	r0, [r3, #40]!
 8004602:	4298      	cmp	r0, r3
 8004604:	d008      	beq.n	8004618 <chMsgWait+0x28>
 8004606:	6801      	ldr	r1, [r0, #0]
 8004608:	6291      	str	r1, [r2, #40]	; 0x28
 800460a:	220d      	movs	r2, #13
 800460c:	604b      	str	r3, [r1, #4]
 800460e:	2300      	movs	r3, #0
 8004610:	7702      	strb	r2, [r0, #28]
 8004612:	f383 8811 	msr	BASEPRI, r3
 8004616:	bd10      	pop	{r4, pc}
 8004618:	200e      	movs	r0, #14
 800461a:	f7fe ff11 	bl	8003440 <chSchGoSleepS>
 800461e:	69a2      	ldr	r2, [r4, #24]
 8004620:	6a90      	ldr	r0, [r2, #40]	; 0x28
 8004622:	f102 0328 	add.w	r3, r2, #40	; 0x28
 8004626:	e7ee      	b.n	8004606 <chMsgWait+0x16>
 8004628:	20001370 	.word	0x20001370
 800462c:	00000000 	.word	0x00000000

08004630 <thread2.lto_priv.102>:
 8004630:	b570      	push	{r4, r5, r6, lr}
 8004632:	2620      	movs	r6, #32
 8004634:	2500      	movs	r5, #0
 8004636:	f7ff ffdb 	bl	80045f0 <chMsgWait>
 800463a:	6b04      	ldr	r4, [r0, #48]	; 0x30
 800463c:	f386 8811 	msr	BASEPRI, r6
 8004640:	4621      	mov	r1, r4
 8004642:	f7fe fe05 	bl	8003250 <chSchWakeupS>
 8004646:	f385 8811 	msr	BASEPRI, r5
 800464a:	2c00      	cmp	r4, #0
 800464c:	d1f3      	bne.n	8004636 <thread2.lto_priv.102+0x6>
 800464e:	bd70      	pop	{r4, r5, r6, pc}

08004650 <msg1_execute>:
 8004650:	b570      	push	{r4, r5, r6, lr}
 8004652:	4a1f      	ldr	r2, [pc, #124]	; (80046d0 <msg1_execute+0x80>)
 8004654:	4b1f      	ldr	r3, [pc, #124]	; (80046d4 <msg1_execute+0x84>)
 8004656:	6991      	ldr	r1, [r2, #24]
 8004658:	481f      	ldr	r0, [pc, #124]	; (80046d8 <msg1_execute+0x88>)
 800465a:	688a      	ldr	r2, [r1, #8]
 800465c:	b082      	sub	sp, #8
 800465e:	3201      	adds	r2, #1
 8004660:	9100      	str	r1, [sp, #0]
 8004662:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004666:	f7fe feb3 	bl	80033d0 <chThdCreateStatic>
 800466a:	4b1c      	ldr	r3, [pc, #112]	; (80046dc <msg1_execute+0x8c>)
 800466c:	6018      	str	r0, [r3, #0]
 800466e:	f7ff ffbf 	bl	80045f0 <chMsgWait>
 8004672:	2520      	movs	r5, #32
 8004674:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8004676:	f385 8811 	msr	BASEPRI, r5
 800467a:	4631      	mov	r1, r6
 800467c:	f7fe fde8 	bl	8003250 <chSchWakeupS>
 8004680:	2400      	movs	r4, #0
 8004682:	f384 8811 	msr	BASEPRI, r4
 8004686:	b2f0      	uxtb	r0, r6
 8004688:	f7fc f94a 	bl	8000920 <test_emit_token>
 800468c:	f7ff ffb0 	bl	80045f0 <chMsgWait>
 8004690:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8004692:	f385 8811 	msr	BASEPRI, r5
 8004696:	4631      	mov	r1, r6
 8004698:	f7fe fdda 	bl	8003250 <chSchWakeupS>
 800469c:	f384 8811 	msr	BASEPRI, r4
 80046a0:	b2f0      	uxtb	r0, r6
 80046a2:	f7fc f93d 	bl	8000920 <test_emit_token>
 80046a6:	f7ff ffa3 	bl	80045f0 <chMsgWait>
 80046aa:	6b06      	ldr	r6, [r0, #48]	; 0x30
 80046ac:	f385 8811 	msr	BASEPRI, r5
 80046b0:	4631      	mov	r1, r6
 80046b2:	f7fe fdcd 	bl	8003250 <chSchWakeupS>
 80046b6:	f384 8811 	msr	BASEPRI, r4
 80046ba:	b2f0      	uxtb	r0, r6
 80046bc:	f7fc f930 	bl	8000920 <test_emit_token>
 80046c0:	4907      	ldr	r1, [pc, #28]	; (80046e0 <msg1_execute+0x90>)
 80046c2:	2001      	movs	r0, #1
 80046c4:	b002      	add	sp, #8
 80046c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80046ca:	f7fc b8e9 	b.w	80008a0 <_test_assert_sequence>
 80046ce:	bf00      	nop
 80046d0:	20001370 	.word	0x20001370
 80046d4:	08004761 	.word	0x08004761
 80046d8:	20001660 	.word	0x20001660
 80046dc:	20001cf4 	.word	0x20001cf4
 80046e0:	08008e50 	.word	0x08008e50
	...

080046f0 <chMsgSend>:
 80046f0:	4b0e      	ldr	r3, [pc, #56]	; (800472c <chMsgSend+0x3c>)
 80046f2:	b510      	push	{r4, lr}
 80046f4:	2220      	movs	r2, #32
 80046f6:	699c      	ldr	r4, [r3, #24]
 80046f8:	f382 8811 	msr	BASEPRI, r2
 80046fc:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8004700:	6222      	str	r2, [r4, #32]
 8004702:	6022      	str	r2, [r4, #0]
 8004704:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8004706:	6062      	str	r2, [r4, #4]
 8004708:	6321      	str	r1, [r4, #48]	; 0x30
 800470a:	6014      	str	r4, [r2, #0]
 800470c:	7f02      	ldrb	r2, [r0, #28]
 800470e:	62c4      	str	r4, [r0, #44]	; 0x2c
 8004710:	2a0e      	cmp	r2, #14
 8004712:	d007      	beq.n	8004724 <chMsgSend+0x34>
 8004714:	200c      	movs	r0, #12
 8004716:	f7fe fe93 	bl	8003440 <chSchGoSleepS>
 800471a:	6a20      	ldr	r0, [r4, #32]
 800471c:	2300      	movs	r3, #0
 800471e:	f383 8811 	msr	BASEPRI, r3
 8004722:	bd10      	pop	{r4, pc}
 8004724:	f7fd f86c 	bl	8001800 <chSchReadyI>
 8004728:	e7f4      	b.n	8004714 <chMsgSend+0x24>
 800472a:	bf00      	nop
 800472c:	20001370 	.word	0x20001370

08004730 <msg_loop_test>:
 8004730:	b570      	push	{r4, r5, r6, lr}
 8004732:	4605      	mov	r5, r0
 8004734:	f7ff fe24 	bl	8004380 <test_wait_tick>
 8004738:	f7fd fc3a 	bl	8001fb0 <test_start_timer.constprop.6>
 800473c:	4e07      	ldr	r6, [pc, #28]	; (800475c <msg_loop_test+0x2c>)
 800473e:	2400      	movs	r4, #0
 8004740:	2101      	movs	r1, #1
 8004742:	4628      	mov	r0, r5
 8004744:	f7ff ffd4 	bl	80046f0 <chMsgSend>
 8004748:	7833      	ldrb	r3, [r6, #0]
 800474a:	3401      	adds	r4, #1
 800474c:	2b00      	cmp	r3, #0
 800474e:	d0f7      	beq.n	8004740 <msg_loop_test+0x10>
 8004750:	4628      	mov	r0, r5
 8004752:	2100      	movs	r1, #0
 8004754:	f7ff ffcc 	bl	80046f0 <chMsgSend>
 8004758:	4620      	mov	r0, r4
 800475a:	bd70      	pop	{r4, r5, r6, pc}
 800475c:	20001cf0 	.word	0x20001cf0

08004760 <thread.lto_priv.82>:
 8004760:	b510      	push	{r4, lr}
 8004762:	2141      	movs	r1, #65	; 0x41
 8004764:	4604      	mov	r4, r0
 8004766:	f7ff ffc3 	bl	80046f0 <chMsgSend>
 800476a:	4620      	mov	r0, r4
 800476c:	2142      	movs	r1, #66	; 0x42
 800476e:	f7ff ffbf 	bl	80046f0 <chMsgSend>
 8004772:	4620      	mov	r0, r4
 8004774:	2143      	movs	r1, #67	; 0x43
 8004776:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800477a:	f7ff bfb9 	b.w	80046f0 <chMsgSend>
 800477e:	bf00      	nop

08004780 <chMtxLockS>:
 8004780:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004782:	4a36      	ldr	r2, [pc, #216]	; (800485c <chMtxLockS+0xdc>)
 8004784:	6883      	ldr	r3, [r0, #8]
 8004786:	6995      	ldr	r5, [r2, #24]
 8004788:	2b00      	cmp	r3, #0
 800478a:	d03f      	beq.n	800480c <chMtxLockS+0x8c>
 800478c:	68a9      	ldr	r1, [r5, #8]
 800478e:	689a      	ldr	r2, [r3, #8]
 8004790:	4291      	cmp	r1, r2
 8004792:	4604      	mov	r4, r0
 8004794:	d906      	bls.n	80047a4 <chMtxLockS+0x24>
 8004796:	7f1a      	ldrb	r2, [r3, #28]
 8004798:	6099      	str	r1, [r3, #8]
 800479a:	2a06      	cmp	r2, #6
 800479c:	d03b      	beq.n	8004816 <chMtxLockS+0x96>
 800479e:	2a07      	cmp	r2, #7
 80047a0:	d015      	beq.n	80047ce <chMtxLockS+0x4e>
 80047a2:	b342      	cbz	r2, 80047f6 <chMtxLockS+0x76>
 80047a4:	4626      	mov	r6, r4
 80047a6:	4623      	mov	r3, r4
 80047a8:	e003      	b.n	80047b2 <chMtxLockS+0x32>
 80047aa:	6899      	ldr	r1, [r3, #8]
 80047ac:	68aa      	ldr	r2, [r5, #8]
 80047ae:	4291      	cmp	r1, r2
 80047b0:	d32a      	bcc.n	8004808 <chMtxLockS+0x88>
 80047b2:	681b      	ldr	r3, [r3, #0]
 80047b4:	429c      	cmp	r4, r3
 80047b6:	d1f8      	bne.n	80047aa <chMtxLockS+0x2a>
 80047b8:	6873      	ldr	r3, [r6, #4]
 80047ba:	2006      	movs	r0, #6
 80047bc:	e9c5 6300 	strd	r6, r3, [r5]
 80047c0:	601d      	str	r5, [r3, #0]
 80047c2:	6075      	str	r5, [r6, #4]
 80047c4:	622c      	str	r4, [r5, #32]
 80047c6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80047ca:	f7fe be39 	b.w	8003440 <chSchGoSleepS>
 80047ce:	e9d3 0200 	ldrd	r0, r2, [r3]
 80047d2:	6010      	str	r0, [r2, #0]
 80047d4:	6a1e      	ldr	r6, [r3, #32]
 80047d6:	6818      	ldr	r0, [r3, #0]
 80047d8:	6042      	str	r2, [r0, #4]
 80047da:	4632      	mov	r2, r6
 80047dc:	e002      	b.n	80047e4 <chMtxLockS+0x64>
 80047de:	6890      	ldr	r0, [r2, #8]
 80047e0:	4288      	cmp	r0, r1
 80047e2:	d332      	bcc.n	800484a <chMtxLockS+0xca>
 80047e4:	6812      	ldr	r2, [r2, #0]
 80047e6:	4296      	cmp	r6, r2
 80047e8:	d1f9      	bne.n	80047de <chMtxLockS+0x5e>
 80047ea:	6872      	ldr	r2, [r6, #4]
 80047ec:	e9c3 6200 	strd	r6, r2, [r3]
 80047f0:	6013      	str	r3, [r2, #0]
 80047f2:	6073      	str	r3, [r6, #4]
 80047f4:	e7d6      	b.n	80047a4 <chMtxLockS+0x24>
 80047f6:	e9d3 1200 	ldrd	r1, r2, [r3]
 80047fa:	6011      	str	r1, [r2, #0]
 80047fc:	6819      	ldr	r1, [r3, #0]
 80047fe:	4618      	mov	r0, r3
 8004800:	604a      	str	r2, [r1, #4]
 8004802:	f7fc fffd 	bl	8001800 <chSchReadyI>
 8004806:	e7cd      	b.n	80047a4 <chMtxLockS+0x24>
 8004808:	461e      	mov	r6, r3
 800480a:	e7d5      	b.n	80047b8 <chMtxLockS+0x38>
 800480c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800480e:	e9c0 5302 	strd	r5, r3, [r0, #8]
 8004812:	63a8      	str	r0, [r5, #56]	; 0x38
 8004814:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004816:	e9d3 0200 	ldrd	r0, r2, [r3]
 800481a:	6010      	str	r0, [r2, #0]
 800481c:	6a1e      	ldr	r6, [r3, #32]
 800481e:	6818      	ldr	r0, [r3, #0]
 8004820:	4637      	mov	r7, r6
 8004822:	6042      	str	r2, [r0, #4]
 8004824:	4632      	mov	r2, r6
 8004826:	e002      	b.n	800482e <chMtxLockS+0xae>
 8004828:	6890      	ldr	r0, [r2, #8]
 800482a:	4288      	cmp	r0, r1
 800482c:	d314      	bcc.n	8004858 <chMtxLockS+0xd8>
 800482e:	6812      	ldr	r2, [r2, #0]
 8004830:	4296      	cmp	r6, r2
 8004832:	d1f9      	bne.n	8004828 <chMtxLockS+0xa8>
 8004834:	687a      	ldr	r2, [r7, #4]
 8004836:	68a9      	ldr	r1, [r5, #8]
 8004838:	e9c3 7200 	strd	r7, r2, [r3]
 800483c:	6013      	str	r3, [r2, #0]
 800483e:	607b      	str	r3, [r7, #4]
 8004840:	68b3      	ldr	r3, [r6, #8]
 8004842:	689a      	ldr	r2, [r3, #8]
 8004844:	428a      	cmp	r2, r1
 8004846:	d3a6      	bcc.n	8004796 <chMtxLockS+0x16>
 8004848:	e7ac      	b.n	80047a4 <chMtxLockS+0x24>
 800484a:	4616      	mov	r6, r2
 800484c:	6872      	ldr	r2, [r6, #4]
 800484e:	e9c3 6200 	strd	r6, r2, [r3]
 8004852:	6013      	str	r3, [r2, #0]
 8004854:	6073      	str	r3, [r6, #4]
 8004856:	e7a5      	b.n	80047a4 <chMtxLockS+0x24>
 8004858:	4617      	mov	r7, r2
 800485a:	e7eb      	b.n	8004834 <chMtxLockS+0xb4>
 800485c:	20001370 	.word	0x20001370

08004860 <chMtxLock>:
 8004860:	b508      	push	{r3, lr}
 8004862:	2320      	movs	r3, #32
 8004864:	f383 8811 	msr	BASEPRI, r3
 8004868:	f7ff ff8a 	bl	8004780 <chMtxLockS>
 800486c:	2300      	movs	r3, #0
 800486e:	f383 8811 	msr	BASEPRI, r3
 8004872:	bd08      	pop	{r3, pc}
	...

08004880 <bmk12_execute>:
 8004880:	b570      	push	{r4, r5, r6, lr}
 8004882:	f7ff fd7d 	bl	8004380 <test_wait_tick>
 8004886:	f7fd fb93 	bl	8001fb0 <test_start_timer.constprop.6>
 800488a:	4e15      	ldr	r6, [pc, #84]	; (80048e0 <bmk12_execute+0x60>)
 800488c:	4c15      	ldr	r4, [pc, #84]	; (80048e4 <bmk12_execute+0x64>)
 800488e:	2500      	movs	r5, #0
 8004890:	4620      	mov	r0, r4
 8004892:	f7ff ffe5 	bl	8004860 <chMtxLock>
 8004896:	4620      	mov	r0, r4
 8004898:	f7fe fd4a 	bl	8003330 <chMtxUnlock>
 800489c:	4620      	mov	r0, r4
 800489e:	f7ff ffdf 	bl	8004860 <chMtxLock>
 80048a2:	4620      	mov	r0, r4
 80048a4:	f7fe fd44 	bl	8003330 <chMtxUnlock>
 80048a8:	4620      	mov	r0, r4
 80048aa:	f7ff ffd9 	bl	8004860 <chMtxLock>
 80048ae:	4620      	mov	r0, r4
 80048b0:	f7fe fd3e 	bl	8003330 <chMtxUnlock>
 80048b4:	4620      	mov	r0, r4
 80048b6:	f7ff ffd3 	bl	8004860 <chMtxLock>
 80048ba:	4620      	mov	r0, r4
 80048bc:	f7fe fd38 	bl	8003330 <chMtxUnlock>
 80048c0:	7833      	ldrb	r3, [r6, #0]
 80048c2:	3501      	adds	r5, #1
 80048c4:	2b00      	cmp	r3, #0
 80048c6:	d0e3      	beq.n	8004890 <bmk12_execute+0x10>
 80048c8:	4807      	ldr	r0, [pc, #28]	; (80048e8 <bmk12_execute+0x68>)
 80048ca:	f7fc f881 	bl	80009d0 <test_print>
 80048ce:	00a8      	lsls	r0, r5, #2
 80048d0:	f7fb ff86 	bl	80007e0 <test_printn>
 80048d4:	4805      	ldr	r0, [pc, #20]	; (80048ec <bmk12_execute+0x6c>)
 80048d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80048da:	f7fc b859 	b.w	8000990 <test_println>
 80048de:	bf00      	nop
 80048e0:	20001cf0 	.word	0x20001cf0
 80048e4:	20001634 	.word	0x20001634
 80048e8:	08008930 	.word	0x08008930
 80048ec:	08008960 	.word	0x08008960

080048f0 <thread11>:
 80048f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80048f2:	4607      	mov	r7, r0
 80048f4:	481b      	ldr	r0, [pc, #108]	; (8004964 <thread11+0x74>)
 80048f6:	f7ff ffb3 	bl	8004860 <chMtxLock>
 80048fa:	481b      	ldr	r0, [pc, #108]	; (8004968 <thread11+0x78>)
 80048fc:	f7ff ffb0 	bl	8004860 <chMtxLock>
 8004900:	2320      	movs	r3, #32
 8004902:	f383 8811 	msr	BASEPRI, r3
 8004906:	4d19      	ldr	r5, [pc, #100]	; (800496c <thread11+0x7c>)
 8004908:	69ab      	ldr	r3, [r5, #24]
 800490a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800490c:	4630      	mov	r0, r6
 800490e:	f7fd fa0f 	bl	8001d30 <chMtxUnlockS>
 8004912:	4b17      	ldr	r3, [pc, #92]	; (8004970 <thread11+0x80>)
 8004914:	69ac      	ldr	r4, [r5, #24]
 8004916:	4618      	mov	r0, r3
 8004918:	6223      	str	r3, [r4, #32]
 800491a:	e003      	b.n	8004924 <thread11+0x34>
 800491c:	6899      	ldr	r1, [r3, #8]
 800491e:	68a2      	ldr	r2, [r4, #8]
 8004920:	4291      	cmp	r1, r2
 8004922:	d302      	bcc.n	800492a <thread11+0x3a>
 8004924:	681b      	ldr	r3, [r3, #0]
 8004926:	4283      	cmp	r3, r0
 8004928:	d1f8      	bne.n	800491c <thread11+0x2c>
 800492a:	685a      	ldr	r2, [r3, #4]
 800492c:	2007      	movs	r0, #7
 800492e:	e9c4 3200 	strd	r3, r2, [r4]
 8004932:	6014      	str	r4, [r2, #0]
 8004934:	605c      	str	r4, [r3, #4]
 8004936:	f7fe fd83 	bl	8003440 <chSchGoSleepS>
 800493a:	69ab      	ldr	r3, [r5, #24]
 800493c:	6a1b      	ldr	r3, [r3, #32]
 800493e:	3301      	adds	r3, #1
 8004940:	d002      	beq.n	8004948 <thread11+0x58>
 8004942:	4630      	mov	r0, r6
 8004944:	f7ff ff1c 	bl	8004780 <chMtxLockS>
 8004948:	2300      	movs	r3, #0
 800494a:	f383 8811 	msr	BASEPRI, r3
 800494e:	7838      	ldrb	r0, [r7, #0]
 8004950:	f7fb ffe6 	bl	8000920 <test_emit_token>
 8004954:	4804      	ldr	r0, [pc, #16]	; (8004968 <thread11+0x78>)
 8004956:	f7fe fceb 	bl	8003330 <chMtxUnlock>
 800495a:	4802      	ldr	r0, [pc, #8]	; (8004964 <thread11+0x74>)
 800495c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004960:	f7fe bce6 	b.w	8003330 <chMtxUnlock>
 8004964:	20000864 	.word	0x20000864
 8004968:	20000854 	.word	0x20000854
 800496c:	20001370 	.word	0x20001370
 8004970:	20000800 	.word	0x20000800
	...

08004980 <thread10>:
 8004980:	b570      	push	{r4, r5, r6, lr}
 8004982:	4606      	mov	r6, r0
 8004984:	4816      	ldr	r0, [pc, #88]	; (80049e0 <thread10+0x60>)
 8004986:	f7ff ff6b 	bl	8004860 <chMtxLock>
 800498a:	2320      	movs	r3, #32
 800498c:	f383 8811 	msr	BASEPRI, r3
 8004990:	4b14      	ldr	r3, [pc, #80]	; (80049e4 <thread10+0x64>)
 8004992:	699c      	ldr	r4, [r3, #24]
 8004994:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8004996:	4628      	mov	r0, r5
 8004998:	f7fd f9ca 	bl	8001d30 <chMtxUnlockS>
 800499c:	4812      	ldr	r0, [pc, #72]	; (80049e8 <thread10+0x68>)
 800499e:	6220      	str	r0, [r4, #32]
 80049a0:	4603      	mov	r3, r0
 80049a2:	e003      	b.n	80049ac <thread10+0x2c>
 80049a4:	6899      	ldr	r1, [r3, #8]
 80049a6:	68a2      	ldr	r2, [r4, #8]
 80049a8:	4291      	cmp	r1, r2
 80049aa:	d302      	bcc.n	80049b2 <thread10+0x32>
 80049ac:	681b      	ldr	r3, [r3, #0]
 80049ae:	4283      	cmp	r3, r0
 80049b0:	d1f8      	bne.n	80049a4 <thread10+0x24>
 80049b2:	685a      	ldr	r2, [r3, #4]
 80049b4:	2007      	movs	r0, #7
 80049b6:	e9c4 3200 	strd	r3, r2, [r4]
 80049ba:	6014      	str	r4, [r2, #0]
 80049bc:	605c      	str	r4, [r3, #4]
 80049be:	f7fe fd3f 	bl	8003440 <chSchGoSleepS>
 80049c2:	4628      	mov	r0, r5
 80049c4:	f7ff fedc 	bl	8004780 <chMtxLockS>
 80049c8:	2300      	movs	r3, #0
 80049ca:	f383 8811 	msr	BASEPRI, r3
 80049ce:	7830      	ldrb	r0, [r6, #0]
 80049d0:	f7fb ffa6 	bl	8000920 <test_emit_token>
 80049d4:	4802      	ldr	r0, [pc, #8]	; (80049e0 <thread10+0x60>)
 80049d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80049da:	f7fe bca9 	b.w	8003330 <chMtxUnlock>
 80049de:	bf00      	nop
 80049e0:	20000854 	.word	0x20000854
 80049e4:	20001370 	.word	0x20001370
 80049e8:	20000800 	.word	0x20000800
 80049ec:	00000000 	.word	0x00000000

080049f0 <thread12>:
 80049f0:	b538      	push	{r3, r4, r5, lr}
 80049f2:	4c06      	ldr	r4, [pc, #24]	; (8004a0c <thread12+0x1c>)
 80049f4:	4605      	mov	r5, r0
 80049f6:	4620      	mov	r0, r4
 80049f8:	f7ff ff32 	bl	8004860 <chMtxLock>
 80049fc:	7828      	ldrb	r0, [r5, #0]
 80049fe:	f7fb ff8f 	bl	8000920 <test_emit_token>
 8004a02:	4620      	mov	r0, r4
 8004a04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004a08:	f7fe bc92 	b.w	8003330 <chMtxUnlock>
 8004a0c:	20000864 	.word	0x20000864

08004a10 <mtx5_execute>:
 8004a10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a12:	4d37      	ldr	r5, [pc, #220]	; (8004af0 <mtx5_execute+0xe0>)
 8004a14:	69aa      	ldr	r2, [r5, #24]
 8004a16:	2320      	movs	r3, #32
 8004a18:	6896      	ldr	r6, [r2, #8]
 8004a1a:	f383 8811 	msr	BASEPRI, r3
 8004a1e:	4c35      	ldr	r4, [pc, #212]	; (8004af4 <mtx5_execute+0xe4>)
 8004a20:	68a3      	ldr	r3, [r4, #8]
 8004a22:	2b00      	cmp	r3, #0
 8004a24:	d057      	beq.n	8004ad6 <mtx5_execute+0xc6>
 8004a26:	2100      	movs	r1, #0
 8004a28:	2300      	movs	r3, #0
 8004a2a:	f383 8811 	msr	BASEPRI, r3
 8004a2e:	2001      	movs	r0, #1
 8004a30:	f7fb ff5e 	bl	80008f0 <_test_assert>
 8004a34:	4601      	mov	r1, r0
 8004a36:	b100      	cbz	r0, 8004a3a <mtx5_execute+0x2a>
 8004a38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004a3a:	2320      	movs	r3, #32
 8004a3c:	f383 8811 	msr	BASEPRI, r3
 8004a40:	68a3      	ldr	r3, [r4, #8]
 8004a42:	2b00      	cmp	r3, #0
 8004a44:	d04e      	beq.n	8004ae4 <mtx5_execute+0xd4>
 8004a46:	2101      	movs	r1, #1
 8004a48:	2300      	movs	r3, #0
 8004a4a:	f383 8811 	msr	BASEPRI, r3
 8004a4e:	2002      	movs	r0, #2
 8004a50:	f7fb ff4e 	bl	80008f0 <_test_assert>
 8004a54:	4607      	mov	r7, r0
 8004a56:	2800      	cmp	r0, #0
 8004a58:	d1ee      	bne.n	8004a38 <mtx5_execute+0x28>
 8004a5a:	2320      	movs	r3, #32
 8004a5c:	f383 8811 	msr	BASEPRI, r3
 8004a60:	4824      	ldr	r0, [pc, #144]	; (8004af4 <mtx5_execute+0xe4>)
 8004a62:	f7fd f965 	bl	8001d30 <chMtxUnlockS>
 8004a66:	f387 8811 	msr	BASEPRI, r7
 8004a6a:	6821      	ldr	r1, [r4, #0]
 8004a6c:	1b09      	subs	r1, r1, r4
 8004a6e:	fab1 f181 	clz	r1, r1
 8004a72:	2003      	movs	r0, #3
 8004a74:	0949      	lsrs	r1, r1, #5
 8004a76:	f7fb ff3b 	bl	80008f0 <_test_assert>
 8004a7a:	2800      	cmp	r0, #0
 8004a7c:	d1dc      	bne.n	8004a38 <mtx5_execute+0x28>
 8004a7e:	68a1      	ldr	r1, [r4, #8]
 8004a80:	fab1 f181 	clz	r1, r1
 8004a84:	0949      	lsrs	r1, r1, #5
 8004a86:	2004      	movs	r0, #4
 8004a88:	f7fb ff32 	bl	80008f0 <_test_assert>
 8004a8c:	2800      	cmp	r0, #0
 8004a8e:	d1d3      	bne.n	8004a38 <mtx5_execute+0x28>
 8004a90:	69ab      	ldr	r3, [r5, #24]
 8004a92:	6899      	ldr	r1, [r3, #8]
 8004a94:	1b89      	subs	r1, r1, r6
 8004a96:	fab1 f181 	clz	r1, r1
 8004a9a:	2005      	movs	r0, #5
 8004a9c:	0949      	lsrs	r1, r1, #5
 8004a9e:	f7fb ff27 	bl	80008f0 <_test_assert>
 8004aa2:	2800      	cmp	r0, #0
 8004aa4:	d1c8      	bne.n	8004a38 <mtx5_execute+0x28>
 8004aa6:	4813      	ldr	r0, [pc, #76]	; (8004af4 <mtx5_execute+0xe4>)
 8004aa8:	f7ff feda 	bl	8004860 <chMtxLock>
 8004aac:	f7fe fac8 	bl	8003040 <chMtxUnlockAll>
 8004ab0:	6821      	ldr	r1, [r4, #0]
 8004ab2:	1b09      	subs	r1, r1, r4
 8004ab4:	fab1 f181 	clz	r1, r1
 8004ab8:	2006      	movs	r0, #6
 8004aba:	0949      	lsrs	r1, r1, #5
 8004abc:	f7fb ff18 	bl	80008f0 <_test_assert>
 8004ac0:	2800      	cmp	r0, #0
 8004ac2:	d1b9      	bne.n	8004a38 <mtx5_execute+0x28>
 8004ac4:	68a1      	ldr	r1, [r4, #8]
 8004ac6:	fab1 f181 	clz	r1, r1
 8004aca:	0949      	lsrs	r1, r1, #5
 8004acc:	2007      	movs	r0, #7
 8004ace:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004ad2:	f7fb bf0d 	b.w	80008f0 <_test_assert>
 8004ad6:	69ab      	ldr	r3, [r5, #24]
 8004ad8:	60a3      	str	r3, [r4, #8]
 8004ada:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004adc:	60e2      	str	r2, [r4, #12]
 8004ade:	639c      	str	r4, [r3, #56]	; 0x38
 8004ae0:	2101      	movs	r1, #1
 8004ae2:	e7a1      	b.n	8004a28 <mtx5_execute+0x18>
 8004ae4:	69ab      	ldr	r3, [r5, #24]
 8004ae6:	60a3      	str	r3, [r4, #8]
 8004ae8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004aea:	60e2      	str	r2, [r4, #12]
 8004aec:	639c      	str	r4, [r3, #56]	; 0x38
 8004aee:	e7ab      	b.n	8004a48 <mtx5_execute+0x38>
 8004af0:	20001370 	.word	0x20001370
 8004af4:	20000854 	.word	0x20000854
	...

08004b00 <thread4a>:
 8004b00:	b510      	push	{r4, lr}
 8004b02:	4c06      	ldr	r4, [pc, #24]	; (8004b1c <thread4a+0x1c>)
 8004b04:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004b08:	f7ff fb7a 	bl	8004200 <chThdSleep>
 8004b0c:	4620      	mov	r0, r4
 8004b0e:	f7ff fea7 	bl	8004860 <chMtxLock>
 8004b12:	4620      	mov	r0, r4
 8004b14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004b18:	f7fe bc0a 	b.w	8003330 <chMtxUnlock>
 8004b1c:	20000864 	.word	0x20000864

08004b20 <thread4b>:
 8004b20:	b510      	push	{r4, lr}
 8004b22:	4c06      	ldr	r4, [pc, #24]	; (8004b3c <thread4b+0x1c>)
 8004b24:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8004b28:	f7ff fb6a 	bl	8004200 <chThdSleep>
 8004b2c:	4620      	mov	r0, r4
 8004b2e:	f7ff fe97 	bl	8004860 <chMtxLock>
 8004b32:	4620      	mov	r0, r4
 8004b34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004b38:	f7fe bbfa 	b.w	8003330 <chMtxUnlock>
 8004b3c:	20000854 	.word	0x20000854

08004b40 <thread1.lto_priv.93>:
 8004b40:	b538      	push	{r3, r4, r5, lr}
 8004b42:	4c06      	ldr	r4, [pc, #24]	; (8004b5c <thread1.lto_priv.93+0x1c>)
 8004b44:	4605      	mov	r5, r0
 8004b46:	4620      	mov	r0, r4
 8004b48:	f7ff fe8a 	bl	8004860 <chMtxLock>
 8004b4c:	7828      	ldrb	r0, [r5, #0]
 8004b4e:	f7fb fee7 	bl	8000920 <test_emit_token>
 8004b52:	4620      	mov	r0, r4
 8004b54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004b58:	f7fe bbea 	b.w	8003330 <chMtxUnlock>
 8004b5c:	20000854 	.word	0x20000854

08004b60 <chHeapStatus>:
 8004b60:	b570      	push	{r4, r5, r6, lr}
 8004b62:	4c11      	ldr	r4, [pc, #68]	; (8004ba8 <chHeapStatus+0x48>)
 8004b64:	2800      	cmp	r0, #0
 8004b66:	bf18      	it	ne
 8004b68:	4604      	movne	r4, r0
 8004b6a:	f104 0510 	add.w	r5, r4, #16
 8004b6e:	4628      	mov	r0, r5
 8004b70:	460e      	mov	r6, r1
 8004b72:	f7ff fe75 	bl	8004860 <chMtxLock>
 8004b76:	68a3      	ldr	r3, [r4, #8]
 8004b78:	b16b      	cbz	r3, 8004b96 <chHeapStatus+0x36>
 8004b7a:	2200      	movs	r2, #0
 8004b7c:	4614      	mov	r4, r2
 8004b7e:	e9d3 3000 	ldrd	r3, r0, [r3]
 8004b82:	3401      	adds	r4, #1
 8004b84:	4402      	add	r2, r0
 8004b86:	2b00      	cmp	r3, #0
 8004b88:	d1f9      	bne.n	8004b7e <chHeapStatus+0x1e>
 8004b8a:	4628      	mov	r0, r5
 8004b8c:	6032      	str	r2, [r6, #0]
 8004b8e:	f7fe fbcf 	bl	8003330 <chMtxUnlock>
 8004b92:	4620      	mov	r0, r4
 8004b94:	bd70      	pop	{r4, r5, r6, pc}
 8004b96:	461a      	mov	r2, r3
 8004b98:	461c      	mov	r4, r3
 8004b9a:	4628      	mov	r0, r5
 8004b9c:	6032      	str	r2, [r6, #0]
 8004b9e:	f7fe fbc7 	bl	8003330 <chMtxUnlock>
 8004ba2:	4620      	mov	r0, r4
 8004ba4:	bd70      	pop	{r4, r5, r6, pc}
 8004ba6:	bf00      	nop
 8004ba8:	200014c8 	.word	0x200014c8
 8004bac:	00000000 	.word	0x00000000

08004bb0 <cmd_mem>:
 8004bb0:	b530      	push	{r4, r5, lr}
 8004bb2:	2900      	cmp	r1, #0
 8004bb4:	b083      	sub	sp, #12
 8004bb6:	dd04      	ble.n	8004bc2 <cmd_mem+0x12>
 8004bb8:	490f      	ldr	r1, [pc, #60]	; (8004bf8 <cmd_mem+0x48>)
 8004bba:	f7fd fc01 	bl	80023c0 <chprintf.lto_priv.88>
 8004bbe:	b003      	add	sp, #12
 8004bc0:	bd30      	pop	{r4, r5, pc}
 8004bc2:	4604      	mov	r4, r0
 8004bc4:	a901      	add	r1, sp, #4
 8004bc6:	2000      	movs	r0, #0
 8004bc8:	f7ff ffca 	bl	8004b60 <chHeapStatus>
 8004bcc:	4a0b      	ldr	r2, [pc, #44]	; (8004bfc <cmd_mem+0x4c>)
 8004bce:	4b0c      	ldr	r3, [pc, #48]	; (8004c00 <cmd_mem+0x50>)
 8004bd0:	6812      	ldr	r2, [r2, #0]
 8004bd2:	681b      	ldr	r3, [r3, #0]
 8004bd4:	490b      	ldr	r1, [pc, #44]	; (8004c04 <cmd_mem+0x54>)
 8004bd6:	1ad2      	subs	r2, r2, r3
 8004bd8:	4605      	mov	r5, r0
 8004bda:	4620      	mov	r0, r4
 8004bdc:	f7fd fbf0 	bl	80023c0 <chprintf.lto_priv.88>
 8004be0:	462a      	mov	r2, r5
 8004be2:	4909      	ldr	r1, [pc, #36]	; (8004c08 <cmd_mem+0x58>)
 8004be4:	4620      	mov	r0, r4
 8004be6:	f7fd fbeb 	bl	80023c0 <chprintf.lto_priv.88>
 8004bea:	4620      	mov	r0, r4
 8004bec:	9a01      	ldr	r2, [sp, #4]
 8004bee:	4907      	ldr	r1, [pc, #28]	; (8004c0c <cmd_mem+0x5c>)
 8004bf0:	f7fd fbe6 	bl	80023c0 <chprintf.lto_priv.88>
 8004bf4:	b003      	add	sp, #12
 8004bf6:	bd30      	pop	{r4, r5, pc}
 8004bf8:	08008c50 	.word	0x08008c50
 8004bfc:	20001570 	.word	0x20001570
 8004c00:	20001644 	.word	0x20001644
 8004c04:	08008c60 	.word	0x08008c60
 8004c08:	08008c80 	.word	0x08008c80
 8004c0c:	08008c98 	.word	0x08008c98

08004c10 <chHeapFree>:
 8004c10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c12:	f850 5c08 	ldr.w	r5, [r0, #-8]
 8004c16:	f105 0710 	add.w	r7, r5, #16
 8004c1a:	4606      	mov	r6, r0
 8004c1c:	f1a0 0408 	sub.w	r4, r0, #8
 8004c20:	3508      	adds	r5, #8
 8004c22:	4638      	mov	r0, r7
 8004c24:	f7ff fe1c 	bl	8004860 <chMtxLock>
 8004c28:	462b      	mov	r3, r5
 8004c2a:	42ab      	cmp	r3, r5
 8004c2c:	681a      	ldr	r2, [r3, #0]
 8004c2e:	d001      	beq.n	8004c34 <chHeapFree+0x24>
 8004c30:	42a3      	cmp	r3, r4
 8004c32:	d202      	bcs.n	8004c3a <chHeapFree+0x2a>
 8004c34:	b11a      	cbz	r2, 8004c3e <chHeapFree+0x2e>
 8004c36:	4294      	cmp	r4, r2
 8004c38:	d301      	bcc.n	8004c3e <chHeapFree+0x2e>
 8004c3a:	4613      	mov	r3, r2
 8004c3c:	e7f5      	b.n	8004c2a <chHeapFree+0x1a>
 8004c3e:	f846 2c08 	str.w	r2, [r6, #-8]
 8004c42:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8004c46:	601c      	str	r4, [r3, #0]
 8004c48:	f856 0c08 	ldr.w	r0, [r6, #-8]
 8004c4c:	18b1      	adds	r1, r6, r2
 8004c4e:	4281      	cmp	r1, r0
 8004c50:	d00a      	beq.n	8004c68 <chHeapFree+0x58>
 8004c52:	6859      	ldr	r1, [r3, #4]
 8004c54:	f101 0208 	add.w	r2, r1, #8
 8004c58:	441a      	add	r2, r3
 8004c5a:	4294      	cmp	r4, r2
 8004c5c:	d012      	beq.n	8004c84 <chHeapFree+0x74>
 8004c5e:	4638      	mov	r0, r7
 8004c60:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004c64:	f7fe bb64 	b.w	8003330 <chMtxUnlock>
 8004c68:	6849      	ldr	r1, [r1, #4]
 8004c6a:	58b0      	ldr	r0, [r6, r2]
 8004c6c:	f846 0c08 	str.w	r0, [r6, #-8]
 8004c70:	3208      	adds	r2, #8
 8004c72:	440a      	add	r2, r1
 8004c74:	f846 2c04 	str.w	r2, [r6, #-4]
 8004c78:	6859      	ldr	r1, [r3, #4]
 8004c7a:	f101 0208 	add.w	r2, r1, #8
 8004c7e:	441a      	add	r2, r3
 8004c80:	4294      	cmp	r4, r2
 8004c82:	d1ec      	bne.n	8004c5e <chHeapFree+0x4e>
 8004c84:	e956 0202 	ldrd	r0, r2, [r6, #-8]
 8004c88:	3208      	adds	r2, #8
 8004c8a:	4411      	add	r1, r2
 8004c8c:	6018      	str	r0, [r3, #0]
 8004c8e:	6059      	str	r1, [r3, #4]
 8004c90:	4638      	mov	r0, r7
 8004c92:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004c96:	f7fe bb4b 	b.w	8003330 <chMtxUnlock>
 8004c9a:	bf00      	nop
 8004c9c:	0000      	movs	r0, r0
	...

08004ca0 <chThdRelease>:
 8004ca0:	b430      	push	{r4, r5}
 8004ca2:	2120      	movs	r1, #32
 8004ca4:	f381 8811 	msr	BASEPRI, r1
 8004ca8:	7f83      	ldrb	r3, [r0, #30]
 8004caa:	3b01      	subs	r3, #1
 8004cac:	b2db      	uxtb	r3, r3
 8004cae:	7783      	strb	r3, [r0, #30]
 8004cb0:	2400      	movs	r4, #0
 8004cb2:	f384 8811 	msr	BASEPRI, r4
 8004cb6:	b91b      	cbnz	r3, 8004cc0 <chThdRelease+0x20>
 8004cb8:	7f04      	ldrb	r4, [r0, #28]
 8004cba:	2c0f      	cmp	r4, #15
 8004cbc:	4602      	mov	r2, r0
 8004cbe:	d001      	beq.n	8004cc4 <chThdRelease+0x24>
 8004cc0:	bc30      	pop	{r4, r5}
 8004cc2:	4770      	bx	lr
 8004cc4:	7f44      	ldrb	r4, [r0, #29]
 8004cc6:	f004 0403 	and.w	r4, r4, #3
 8004cca:	2c01      	cmp	r4, #1
 8004ccc:	d00f      	beq.n	8004cee <chThdRelease+0x4e>
 8004cce:	2c02      	cmp	r4, #2
 8004cd0:	d1f6      	bne.n	8004cc0 <chThdRelease+0x20>
 8004cd2:	e9d0 0404 	ldrd	r0, r4, [r0, #16]
 8004cd6:	6120      	str	r0, [r4, #16]
 8004cd8:	6915      	ldr	r5, [r2, #16]
 8004cda:	6c10      	ldr	r0, [r2, #64]	; 0x40
 8004cdc:	616c      	str	r4, [r5, #20]
 8004cde:	f381 8811 	msr	BASEPRI, r1
 8004ce2:	6801      	ldr	r1, [r0, #0]
 8004ce4:	6011      	str	r1, [r2, #0]
 8004ce6:	6002      	str	r2, [r0, #0]
 8004ce8:	f383 8811 	msr	BASEPRI, r3
 8004cec:	e7e8      	b.n	8004cc0 <chThdRelease+0x20>
 8004cee:	e9d0 1304 	ldrd	r1, r3, [r0, #16]
 8004cf2:	6119      	str	r1, [r3, #16]
 8004cf4:	6902      	ldr	r2, [r0, #16]
 8004cf6:	bc30      	pop	{r4, r5}
 8004cf8:	6153      	str	r3, [r2, #20]
 8004cfa:	f7ff bf89 	b.w	8004c10 <chHeapFree>
 8004cfe:	bf00      	nop

08004d00 <chRegNextThread>:
 8004d00:	b510      	push	{r4, lr}
 8004d02:	2320      	movs	r3, #32
 8004d04:	f383 8811 	msr	BASEPRI, r3
 8004d08:	4b07      	ldr	r3, [pc, #28]	; (8004d28 <chRegNextThread+0x28>)
 8004d0a:	6904      	ldr	r4, [r0, #16]
 8004d0c:	429c      	cmp	r4, r3
 8004d0e:	bf1d      	ittte	ne
 8004d10:	7fa3      	ldrbne	r3, [r4, #30]
 8004d12:	3301      	addne	r3, #1
 8004d14:	77a3      	strbne	r3, [r4, #30]
 8004d16:	2400      	moveq	r4, #0
 8004d18:	2300      	movs	r3, #0
 8004d1a:	f383 8811 	msr	BASEPRI, r3
 8004d1e:	f7ff ffbf 	bl	8004ca0 <chThdRelease>
 8004d22:	4620      	mov	r0, r4
 8004d24:	bd10      	pop	{r4, pc}
 8004d26:	bf00      	nop
 8004d28:	20001370 	.word	0x20001370
 8004d2c:	00000000 	.word	0x00000000

08004d30 <cmd_threads>:
 8004d30:	2900      	cmp	r1, #0
 8004d32:	dd02      	ble.n	8004d3a <cmd_threads+0xa>
 8004d34:	4916      	ldr	r1, [pc, #88]	; (8004d90 <cmd_threads+0x60>)
 8004d36:	f7fd bb43 	b.w	80023c0 <chprintf.lto_priv.88>
 8004d3a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d3c:	4915      	ldr	r1, [pc, #84]	; (8004d94 <cmd_threads+0x64>)
 8004d3e:	b085      	sub	sp, #20
 8004d40:	4605      	mov	r5, r0
 8004d42:	f7fd fb3d 	bl	80023c0 <chprintf.lto_priv.88>
 8004d46:	2320      	movs	r3, #32
 8004d48:	f383 8811 	msr	BASEPRI, r3
 8004d4c:	4b12      	ldr	r3, [pc, #72]	; (8004d98 <cmd_threads+0x68>)
 8004d4e:	691c      	ldr	r4, [r3, #16]
 8004d50:	7fa3      	ldrb	r3, [r4, #30]
 8004d52:	3301      	adds	r3, #1
 8004d54:	77a3      	strb	r3, [r4, #30]
 8004d56:	2300      	movs	r3, #0
 8004d58:	f383 8811 	msr	BASEPRI, r3
 8004d5c:	4f0f      	ldr	r7, [pc, #60]	; (8004d9c <cmd_threads+0x6c>)
 8004d5e:	4e10      	ldr	r6, [pc, #64]	; (8004da0 <cmd_threads+0x70>)
 8004d60:	7f22      	ldrb	r2, [r4, #28]
 8004d62:	68e3      	ldr	r3, [r4, #12]
 8004d64:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8004d68:	9202      	str	r2, [sp, #8]
 8004d6a:	7fa2      	ldrb	r2, [r4, #30]
 8004d6c:	3a01      	subs	r2, #1
 8004d6e:	9201      	str	r2, [sp, #4]
 8004d70:	68a2      	ldr	r2, [r4, #8]
 8004d72:	9200      	str	r2, [sp, #0]
 8004d74:	4631      	mov	r1, r6
 8004d76:	4622      	mov	r2, r4
 8004d78:	4628      	mov	r0, r5
 8004d7a:	f7fd fb21 	bl	80023c0 <chprintf.lto_priv.88>
 8004d7e:	4620      	mov	r0, r4
 8004d80:	f7ff ffbe 	bl	8004d00 <chRegNextThread>
 8004d84:	4604      	mov	r4, r0
 8004d86:	2800      	cmp	r0, #0
 8004d88:	d1ea      	bne.n	8004d60 <cmd_threads+0x30>
 8004d8a:	b005      	add	sp, #20
 8004d8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004d8e:	bf00      	nop
 8004d90:	08008d00 	.word	0x08008d00
 8004d94:	08008d14 	.word	0x08008d14
 8004d98:	20001370 	.word	0x20001370
 8004d9c:	08009130 	.word	0x08009130
 8004da0:	08008d3c 	.word	0x08008d3c
	...

08004db0 <regfind>:
 8004db0:	b538      	push	{r3, r4, r5, lr}
 8004db2:	4605      	mov	r5, r0
 8004db4:	2320      	movs	r3, #32
 8004db6:	f383 8811 	msr	BASEPRI, r3
 8004dba:	4b0a      	ldr	r3, [pc, #40]	; (8004de4 <regfind+0x34>)
 8004dbc:	691b      	ldr	r3, [r3, #16]
 8004dbe:	7f9a      	ldrb	r2, [r3, #30]
 8004dc0:	3201      	adds	r2, #1
 8004dc2:	779a      	strb	r2, [r3, #30]
 8004dc4:	2400      	movs	r4, #0
 8004dc6:	f384 8811 	msr	BASEPRI, r4
 8004dca:	4618      	mov	r0, r3
 8004dcc:	42ab      	cmp	r3, r5
 8004dce:	bf08      	it	eq
 8004dd0:	f044 0401 	orreq.w	r4, r4, #1
 8004dd4:	f7ff ff94 	bl	8004d00 <chRegNextThread>
 8004dd8:	4603      	mov	r3, r0
 8004dda:	2800      	cmp	r0, #0
 8004ddc:	d1f5      	bne.n	8004dca <regfind+0x1a>
 8004dde:	4620      	mov	r0, r4
 8004de0:	bd38      	pop	{r3, r4, r5, pc}
 8004de2:	bf00      	nop
 8004de4:	20001370 	.word	0x20001370
	...

08004df0 <chHeapAlloc>:
 8004df0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004df2:	4e20      	ldr	r6, [pc, #128]	; (8004e74 <chHeapAlloc+0x84>)
 8004df4:	2800      	cmp	r0, #0
 8004df6:	bf18      	it	ne
 8004df8:	4606      	movne	r6, r0
 8004dfa:	f106 0710 	add.w	r7, r6, #16
 8004dfe:	3107      	adds	r1, #7
 8004e00:	4638      	mov	r0, r7
 8004e02:	f021 0507 	bic.w	r5, r1, #7
 8004e06:	f106 0408 	add.w	r4, r6, #8
 8004e0a:	f7ff fd29 	bl	8004860 <chMtxLock>
 8004e0e:	e003      	b.n	8004e18 <chHeapAlloc+0x28>
 8004e10:	6843      	ldr	r3, [r0, #4]
 8004e12:	42ab      	cmp	r3, r5
 8004e14:	d212      	bcs.n	8004e3c <chHeapAlloc+0x4c>
 8004e16:	4604      	mov	r4, r0
 8004e18:	6820      	ldr	r0, [r4, #0]
 8004e1a:	2800      	cmp	r0, #0
 8004e1c:	d1f8      	bne.n	8004e10 <chHeapAlloc+0x20>
 8004e1e:	4638      	mov	r0, r7
 8004e20:	f7fe fa86 	bl	8003330 <chMtxUnlock>
 8004e24:	6833      	ldr	r3, [r6, #0]
 8004e26:	b313      	cbz	r3, 8004e6e <chHeapAlloc+0x7e>
 8004e28:	f105 0008 	add.w	r0, r5, #8
 8004e2c:	4798      	blx	r3
 8004e2e:	b1f0      	cbz	r0, 8004e6e <chHeapAlloc+0x7e>
 8004e30:	e9c0 6500 	strd	r6, r5, [r0]
 8004e34:	f100 0408 	add.w	r4, r0, #8
 8004e38:	4620      	mov	r0, r4
 8004e3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004e3c:	f105 0208 	add.w	r2, r5, #8
 8004e40:	4293      	cmp	r3, r2
 8004e42:	6801      	ldr	r1, [r0, #0]
 8004e44:	d208      	bcs.n	8004e58 <chHeapAlloc+0x68>
 8004e46:	6021      	str	r1, [r4, #0]
 8004e48:	4604      	mov	r4, r0
 8004e4a:	4638      	mov	r0, r7
 8004e4c:	f844 6b08 	str.w	r6, [r4], #8
 8004e50:	f7fe fa6e 	bl	8003330 <chMtxUnlock>
 8004e54:	4620      	mov	r0, r4
 8004e56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004e58:	eb00 0c02 	add.w	ip, r0, r2
 8004e5c:	1b5b      	subs	r3, r3, r5
 8004e5e:	3b08      	subs	r3, #8
 8004e60:	5081      	str	r1, [r0, r2]
 8004e62:	f8cc 3004 	str.w	r3, [ip, #4]
 8004e66:	f8c4 c000 	str.w	ip, [r4]
 8004e6a:	6045      	str	r5, [r0, #4]
 8004e6c:	e7ec      	b.n	8004e48 <chHeapAlloc+0x58>
 8004e6e:	2400      	movs	r4, #0
 8004e70:	e7e2      	b.n	8004e38 <chHeapAlloc+0x48>
 8004e72:	bf00      	nop
 8004e74:	200014c8 	.word	0x200014c8
	...

08004e80 <heap1_execute>:
 8004e80:	b570      	push	{r4, r5, r6, lr}
 8004e82:	b082      	sub	sp, #8
 8004e84:	4669      	mov	r1, sp
 8004e86:	2000      	movs	r0, #0
 8004e88:	f7ff fe6a 	bl	8004b60 <chHeapStatus>
 8004e8c:	2110      	movs	r1, #16
 8004e8e:	2000      	movs	r0, #0
 8004e90:	f7ff ffae 	bl	8004df0 <chHeapAlloc>
 8004e94:	1c01      	adds	r1, r0, #0
 8004e96:	4605      	mov	r5, r0
 8004e98:	bf18      	it	ne
 8004e9a:	2101      	movne	r1, #1
 8004e9c:	2001      	movs	r0, #1
 8004e9e:	f7fb fd27 	bl	80008f0 <_test_assert>
 8004ea2:	b108      	cbz	r0, 8004ea8 <heap1_execute+0x28>
 8004ea4:	b002      	add	sp, #8
 8004ea6:	bd70      	pop	{r4, r5, r6, pc}
 8004ea8:	4604      	mov	r4, r0
 8004eaa:	4628      	mov	r0, r5
 8004eac:	f7ff feb0 	bl	8004c10 <chHeapFree>
 8004eb0:	f06f 01ff 	mvn.w	r1, #255	; 0xff
 8004eb4:	4620      	mov	r0, r4
 8004eb6:	f7ff ff9b 	bl	8004df0 <chHeapAlloc>
 8004eba:	fab0 f180 	clz	r1, r0
 8004ebe:	0949      	lsrs	r1, r1, #5
 8004ec0:	2002      	movs	r0, #2
 8004ec2:	f7fb fd15 	bl	80008f0 <_test_assert>
 8004ec6:	2800      	cmp	r0, #0
 8004ec8:	d1ec      	bne.n	8004ea4 <heap1_execute+0x24>
 8004eca:	4669      	mov	r1, sp
 8004ecc:	487c      	ldr	r0, [pc, #496]	; (80050c0 <heap1_execute+0x240>)
 8004ece:	f7ff fe47 	bl	8004b60 <chHeapStatus>
 8004ed2:	2110      	movs	r1, #16
 8004ed4:	487a      	ldr	r0, [pc, #488]	; (80050c0 <heap1_execute+0x240>)
 8004ed6:	f7ff ff8b 	bl	8004df0 <chHeapAlloc>
 8004eda:	2110      	movs	r1, #16
 8004edc:	4606      	mov	r6, r0
 8004ede:	4878      	ldr	r0, [pc, #480]	; (80050c0 <heap1_execute+0x240>)
 8004ee0:	f7ff ff86 	bl	8004df0 <chHeapAlloc>
 8004ee4:	2110      	movs	r1, #16
 8004ee6:	4605      	mov	r5, r0
 8004ee8:	4875      	ldr	r0, [pc, #468]	; (80050c0 <heap1_execute+0x240>)
 8004eea:	f7ff ff81 	bl	8004df0 <chHeapAlloc>
 8004eee:	4604      	mov	r4, r0
 8004ef0:	4630      	mov	r0, r6
 8004ef2:	f7ff fe8d 	bl	8004c10 <chHeapFree>
 8004ef6:	4628      	mov	r0, r5
 8004ef8:	f7ff fe8a 	bl	8004c10 <chHeapFree>
 8004efc:	4620      	mov	r0, r4
 8004efe:	f7ff fe87 	bl	8004c10 <chHeapFree>
 8004f02:	a901      	add	r1, sp, #4
 8004f04:	486e      	ldr	r0, [pc, #440]	; (80050c0 <heap1_execute+0x240>)
 8004f06:	f7ff fe2b 	bl	8004b60 <chHeapStatus>
 8004f0a:	f1a0 0101 	sub.w	r1, r0, #1
 8004f0e:	fab1 f181 	clz	r1, r1
 8004f12:	0949      	lsrs	r1, r1, #5
 8004f14:	2003      	movs	r0, #3
 8004f16:	f7fb fceb 	bl	80008f0 <_test_assert>
 8004f1a:	2800      	cmp	r0, #0
 8004f1c:	d1c2      	bne.n	8004ea4 <heap1_execute+0x24>
 8004f1e:	2110      	movs	r1, #16
 8004f20:	4867      	ldr	r0, [pc, #412]	; (80050c0 <heap1_execute+0x240>)
 8004f22:	f7ff ff65 	bl	8004df0 <chHeapAlloc>
 8004f26:	2110      	movs	r1, #16
 8004f28:	4604      	mov	r4, r0
 8004f2a:	4865      	ldr	r0, [pc, #404]	; (80050c0 <heap1_execute+0x240>)
 8004f2c:	f7ff ff60 	bl	8004df0 <chHeapAlloc>
 8004f30:	2110      	movs	r1, #16
 8004f32:	4605      	mov	r5, r0
 8004f34:	4862      	ldr	r0, [pc, #392]	; (80050c0 <heap1_execute+0x240>)
 8004f36:	f7ff ff5b 	bl	8004df0 <chHeapAlloc>
 8004f3a:	f7ff fe69 	bl	8004c10 <chHeapFree>
 8004f3e:	4628      	mov	r0, r5
 8004f40:	f7ff fe66 	bl	8004c10 <chHeapFree>
 8004f44:	4620      	mov	r0, r4
 8004f46:	f7ff fe63 	bl	8004c10 <chHeapFree>
 8004f4a:	a901      	add	r1, sp, #4
 8004f4c:	485c      	ldr	r0, [pc, #368]	; (80050c0 <heap1_execute+0x240>)
 8004f4e:	f7ff fe07 	bl	8004b60 <chHeapStatus>
 8004f52:	f1a0 0101 	sub.w	r1, r0, #1
 8004f56:	fab1 f181 	clz	r1, r1
 8004f5a:	0949      	lsrs	r1, r1, #5
 8004f5c:	2004      	movs	r0, #4
 8004f5e:	f7fb fcc7 	bl	80008f0 <_test_assert>
 8004f62:	2800      	cmp	r0, #0
 8004f64:	d19e      	bne.n	8004ea4 <heap1_execute+0x24>
 8004f66:	2111      	movs	r1, #17
 8004f68:	4855      	ldr	r0, [pc, #340]	; (80050c0 <heap1_execute+0x240>)
 8004f6a:	f7ff ff41 	bl	8004df0 <chHeapAlloc>
 8004f6e:	2110      	movs	r1, #16
 8004f70:	4604      	mov	r4, r0
 8004f72:	4853      	ldr	r0, [pc, #332]	; (80050c0 <heap1_execute+0x240>)
 8004f74:	f7ff ff3c 	bl	8004df0 <chHeapAlloc>
 8004f78:	4605      	mov	r5, r0
 8004f7a:	4620      	mov	r0, r4
 8004f7c:	f7ff fe48 	bl	8004c10 <chHeapFree>
 8004f80:	a901      	add	r1, sp, #4
 8004f82:	484f      	ldr	r0, [pc, #316]	; (80050c0 <heap1_execute+0x240>)
 8004f84:	f7ff fdec 	bl	8004b60 <chHeapStatus>
 8004f88:	f1a0 0102 	sub.w	r1, r0, #2
 8004f8c:	fab1 f181 	clz	r1, r1
 8004f90:	0949      	lsrs	r1, r1, #5
 8004f92:	2005      	movs	r0, #5
 8004f94:	f7fb fcac 	bl	80008f0 <_test_assert>
 8004f98:	2800      	cmp	r0, #0
 8004f9a:	d183      	bne.n	8004ea4 <heap1_execute+0x24>
 8004f9c:	2110      	movs	r1, #16
 8004f9e:	4848      	ldr	r0, [pc, #288]	; (80050c0 <heap1_execute+0x240>)
 8004fa0:	f7ff ff26 	bl	8004df0 <chHeapAlloc>
 8004fa4:	a901      	add	r1, sp, #4
 8004fa6:	4604      	mov	r4, r0
 8004fa8:	4845      	ldr	r0, [pc, #276]	; (80050c0 <heap1_execute+0x240>)
 8004faa:	f7ff fdd9 	bl	8004b60 <chHeapStatus>
 8004fae:	2801      	cmp	r0, #1
 8004fb0:	f000 8083 	beq.w	80050ba <heap1_execute+0x23a>
 8004fb4:	a901      	add	r1, sp, #4
 8004fb6:	4842      	ldr	r0, [pc, #264]	; (80050c0 <heap1_execute+0x240>)
 8004fb8:	f7ff fdd2 	bl	8004b60 <chHeapStatus>
 8004fbc:	f1a0 0102 	sub.w	r1, r0, #2
 8004fc0:	fab1 f181 	clz	r1, r1
 8004fc4:	0949      	lsrs	r1, r1, #5
 8004fc6:	2006      	movs	r0, #6
 8004fc8:	f7fb fc92 	bl	80008f0 <_test_assert>
 8004fcc:	2800      	cmp	r0, #0
 8004fce:	f47f af69 	bne.w	8004ea4 <heap1_execute+0x24>
 8004fd2:	4628      	mov	r0, r5
 8004fd4:	f7ff fe1c 	bl	8004c10 <chHeapFree>
 8004fd8:	4620      	mov	r0, r4
 8004fda:	f7ff fe19 	bl	8004c10 <chHeapFree>
 8004fde:	a901      	add	r1, sp, #4
 8004fe0:	4837      	ldr	r0, [pc, #220]	; (80050c0 <heap1_execute+0x240>)
 8004fe2:	f7ff fdbd 	bl	8004b60 <chHeapStatus>
 8004fe6:	f1a0 0101 	sub.w	r1, r0, #1
 8004fea:	fab1 f181 	clz	r1, r1
 8004fee:	0949      	lsrs	r1, r1, #5
 8004ff0:	2007      	movs	r0, #7
 8004ff2:	f7fb fc7d 	bl	80008f0 <_test_assert>
 8004ff6:	2800      	cmp	r0, #0
 8004ff8:	f47f af54 	bne.w	8004ea4 <heap1_execute+0x24>
 8004ffc:	2110      	movs	r1, #16
 8004ffe:	4830      	ldr	r0, [pc, #192]	; (80050c0 <heap1_execute+0x240>)
 8005000:	f7ff fef6 	bl	8004df0 <chHeapAlloc>
 8005004:	2110      	movs	r1, #16
 8005006:	4605      	mov	r5, r0
 8005008:	482d      	ldr	r0, [pc, #180]	; (80050c0 <heap1_execute+0x240>)
 800500a:	f7ff fef1 	bl	8004df0 <chHeapAlloc>
 800500e:	4604      	mov	r4, r0
 8005010:	4628      	mov	r0, r5
 8005012:	f7ff fdfd 	bl	8004c10 <chHeapFree>
 8005016:	a901      	add	r1, sp, #4
 8005018:	4829      	ldr	r0, [pc, #164]	; (80050c0 <heap1_execute+0x240>)
 800501a:	f7ff fda1 	bl	8004b60 <chHeapStatus>
 800501e:	1e85      	subs	r5, r0, #2
 8005020:	4269      	negs	r1, r5
 8005022:	4169      	adcs	r1, r5
 8005024:	2008      	movs	r0, #8
 8005026:	f7fb fc63 	bl	80008f0 <_test_assert>
 800502a:	2800      	cmp	r0, #0
 800502c:	f47f af3a 	bne.w	8004ea4 <heap1_execute+0x24>
 8005030:	2120      	movs	r1, #32
 8005032:	4823      	ldr	r0, [pc, #140]	; (80050c0 <heap1_execute+0x240>)
 8005034:	f7ff fedc 	bl	8004df0 <chHeapAlloc>
 8005038:	f7ff fdea 	bl	8004c10 <chHeapFree>
 800503c:	4620      	mov	r0, r4
 800503e:	f7ff fde7 	bl	8004c10 <chHeapFree>
 8005042:	a901      	add	r1, sp, #4
 8005044:	481e      	ldr	r0, [pc, #120]	; (80050c0 <heap1_execute+0x240>)
 8005046:	f7ff fd8b 	bl	8004b60 <chHeapStatus>
 800504a:	3801      	subs	r0, #1
 800504c:	4241      	negs	r1, r0
 800504e:	4141      	adcs	r1, r0
 8005050:	2009      	movs	r0, #9
 8005052:	f7fb fc4d 	bl	80008f0 <_test_assert>
 8005056:	2800      	cmp	r0, #0
 8005058:	f47f af24 	bne.w	8004ea4 <heap1_execute+0x24>
 800505c:	a901      	add	r1, sp, #4
 800505e:	4818      	ldr	r0, [pc, #96]	; (80050c0 <heap1_execute+0x240>)
 8005060:	f7ff fd7e 	bl	8004b60 <chHeapStatus>
 8005064:	9901      	ldr	r1, [sp, #4]
 8005066:	4816      	ldr	r0, [pc, #88]	; (80050c0 <heap1_execute+0x240>)
 8005068:	f7ff fec2 	bl	8004df0 <chHeapAlloc>
 800506c:	a901      	add	r1, sp, #4
 800506e:	4604      	mov	r4, r0
 8005070:	4813      	ldr	r0, [pc, #76]	; (80050c0 <heap1_execute+0x240>)
 8005072:	f7ff fd75 	bl	8004b60 <chHeapStatus>
 8005076:	fab0 f180 	clz	r1, r0
 800507a:	0949      	lsrs	r1, r1, #5
 800507c:	200a      	movs	r0, #10
 800507e:	f7fb fc37 	bl	80008f0 <_test_assert>
 8005082:	2800      	cmp	r0, #0
 8005084:	f47f af0e 	bne.w	8004ea4 <heap1_execute+0x24>
 8005088:	4620      	mov	r0, r4
 800508a:	f7ff fdc1 	bl	8004c10 <chHeapFree>
 800508e:	a901      	add	r1, sp, #4
 8005090:	480b      	ldr	r0, [pc, #44]	; (80050c0 <heap1_execute+0x240>)
 8005092:	f7ff fd65 	bl	8004b60 <chHeapStatus>
 8005096:	1e42      	subs	r2, r0, #1
 8005098:	4251      	negs	r1, r2
 800509a:	4151      	adcs	r1, r2
 800509c:	200b      	movs	r0, #11
 800509e:	f7fb fc27 	bl	80008f0 <_test_assert>
 80050a2:	2800      	cmp	r0, #0
 80050a4:	f47f aefe 	bne.w	8004ea4 <heap1_execute+0x24>
 80050a8:	e9dd 3100 	ldrd	r3, r1, [sp]
 80050ac:	1acb      	subs	r3, r1, r3
 80050ae:	4259      	negs	r1, r3
 80050b0:	4159      	adcs	r1, r3
 80050b2:	200c      	movs	r0, #12
 80050b4:	f7fb fc1c 	bl	80008f0 <_test_assert>
 80050b8:	e6f4      	b.n	8004ea4 <heap1_execute+0x24>
 80050ba:	4601      	mov	r1, r0
 80050bc:	e783      	b.n	8004fc6 <heap1_execute+0x146>
 80050be:	bf00      	nop
 80050c0:	20001cd0 	.word	0x20001cd0
	...

080050d0 <chThdCreateFromHeap>:
 80050d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80050d2:	b083      	sub	sp, #12
 80050d4:	4616      	mov	r6, r2
 80050d6:	461f      	mov	r7, r3
 80050d8:	460d      	mov	r5, r1
 80050da:	f7ff fe89 	bl	8004df0 <chHeapAlloc>
 80050de:	b1a8      	cbz	r0, 800510c <chThdCreateFromHeap+0x3c>
 80050e0:	2320      	movs	r3, #32
 80050e2:	f383 8811 	msr	BASEPRI, r3
 80050e6:	9b08      	ldr	r3, [sp, #32]
 80050e8:	9300      	str	r3, [sp, #0]
 80050ea:	4632      	mov	r2, r6
 80050ec:	463b      	mov	r3, r7
 80050ee:	4629      	mov	r1, r5
 80050f0:	f7fc fb26 	bl	8001740 <chThdCreateI>
 80050f4:	2301      	movs	r3, #1
 80050f6:	7743      	strb	r3, [r0, #29]
 80050f8:	2100      	movs	r1, #0
 80050fa:	4604      	mov	r4, r0
 80050fc:	f7fe f8a8 	bl	8003250 <chSchWakeupS>
 8005100:	2300      	movs	r3, #0
 8005102:	f383 8811 	msr	BASEPRI, r3
 8005106:	4620      	mov	r0, r4
 8005108:	b003      	add	sp, #12
 800510a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800510c:	4604      	mov	r4, r0
 800510e:	e7fa      	b.n	8005106 <chThdCreateFromHeap+0x36>

08005110 <dyn3_execute>:
 8005110:	b510      	push	{r4, lr}
 8005112:	4b4a      	ldr	r3, [pc, #296]	; (800523c <dyn3_execute+0x12c>)
 8005114:	494a      	ldr	r1, [pc, #296]	; (8005240 <dyn3_execute+0x130>)
 8005116:	699a      	ldr	r2, [r3, #24]
 8005118:	484a      	ldr	r0, [pc, #296]	; (8005244 <dyn3_execute+0x134>)
 800511a:	6892      	ldr	r2, [r2, #8]
 800511c:	4b4a      	ldr	r3, [pc, #296]	; (8005248 <dyn3_execute+0x138>)
 800511e:	b082      	sub	sp, #8
 8005120:	3a01      	subs	r2, #1
 8005122:	9100      	str	r1, [sp, #0]
 8005124:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005128:	f7ff ffd2 	bl	80050d0 <chThdCreateFromHeap>
 800512c:	4604      	mov	r4, r0
 800512e:	2001      	movs	r0, #1
 8005130:	7fa1      	ldrb	r1, [r4, #30]
 8005132:	1a09      	subs	r1, r1, r0
 8005134:	fab1 f181 	clz	r1, r1
 8005138:	0949      	lsrs	r1, r1, #5
 800513a:	f7fb fbd9 	bl	80008f0 <_test_assert>
 800513e:	b108      	cbz	r0, 8005144 <dyn3_execute+0x34>
 8005140:	b002      	add	sp, #8
 8005142:	bd10      	pop	{r4, pc}
 8005144:	2320      	movs	r3, #32
 8005146:	f383 8811 	msr	BASEPRI, r3
 800514a:	7fa3      	ldrb	r3, [r4, #30]
 800514c:	3301      	adds	r3, #1
 800514e:	77a3      	strb	r3, [r4, #30]
 8005150:	f380 8811 	msr	BASEPRI, r0
 8005154:	7fa1      	ldrb	r1, [r4, #30]
 8005156:	2002      	movs	r0, #2
 8005158:	1a09      	subs	r1, r1, r0
 800515a:	fab1 f181 	clz	r1, r1
 800515e:	0949      	lsrs	r1, r1, #5
 8005160:	f7fb fbc6 	bl	80008f0 <_test_assert>
 8005164:	2800      	cmp	r0, #0
 8005166:	d1eb      	bne.n	8005140 <dyn3_execute+0x30>
 8005168:	4620      	mov	r0, r4
 800516a:	f7ff fd99 	bl	8004ca0 <chThdRelease>
 800516e:	7fa1      	ldrb	r1, [r4, #30]
 8005170:	f1a1 0101 	sub.w	r1, r1, #1
 8005174:	fab1 f181 	clz	r1, r1
 8005178:	2003      	movs	r0, #3
 800517a:	0949      	lsrs	r1, r1, #5
 800517c:	f7fb fbb8 	bl	80008f0 <_test_assert>
 8005180:	2800      	cmp	r0, #0
 8005182:	d1dd      	bne.n	8005140 <dyn3_execute+0x30>
 8005184:	4620      	mov	r0, r4
 8005186:	f7ff fe13 	bl	8004db0 <regfind>
 800518a:	4601      	mov	r1, r0
 800518c:	2004      	movs	r0, #4
 800518e:	f7fb fbaf 	bl	80008f0 <_test_assert>
 8005192:	2800      	cmp	r0, #0
 8005194:	d1d4      	bne.n	8005140 <dyn3_execute+0x30>
 8005196:	4620      	mov	r0, r4
 8005198:	f7ff fe0a 	bl	8004db0 <regfind>
 800519c:	4601      	mov	r1, r0
 800519e:	2005      	movs	r0, #5
 80051a0:	f7fb fba6 	bl	80008f0 <_test_assert>
 80051a4:	2800      	cmp	r0, #0
 80051a6:	d1cb      	bne.n	8005140 <dyn3_execute+0x30>
 80051a8:	4620      	mov	r0, r4
 80051aa:	f7ff fd79 	bl	8004ca0 <chThdRelease>
 80051ae:	7fa1      	ldrb	r1, [r4, #30]
 80051b0:	fab1 f181 	clz	r1, r1
 80051b4:	0949      	lsrs	r1, r1, #5
 80051b6:	2006      	movs	r0, #6
 80051b8:	f7fb fb9a 	bl	80008f0 <_test_assert>
 80051bc:	2800      	cmp	r0, #0
 80051be:	d1bf      	bne.n	8005140 <dyn3_execute+0x30>
 80051c0:	7f21      	ldrb	r1, [r4, #28]
 80051c2:	fab1 f181 	clz	r1, r1
 80051c6:	0949      	lsrs	r1, r1, #5
 80051c8:	2007      	movs	r0, #7
 80051ca:	f7fb fb91 	bl	80008f0 <_test_assert>
 80051ce:	2800      	cmp	r0, #0
 80051d0:	d1b6      	bne.n	8005140 <dyn3_execute+0x30>
 80051d2:	4620      	mov	r0, r4
 80051d4:	f7ff fdec 	bl	8004db0 <regfind>
 80051d8:	4601      	mov	r1, r0
 80051da:	2008      	movs	r0, #8
 80051dc:	f7fb fb88 	bl	80008f0 <_test_assert>
 80051e0:	2800      	cmp	r0, #0
 80051e2:	d1ad      	bne.n	8005140 <dyn3_execute+0x30>
 80051e4:	4620      	mov	r0, r4
 80051e6:	f7ff fde3 	bl	8004db0 <regfind>
 80051ea:	4601      	mov	r1, r0
 80051ec:	2009      	movs	r0, #9
 80051ee:	f7fb fb7f 	bl	80008f0 <_test_assert>
 80051f2:	2800      	cmp	r0, #0
 80051f4:	d1a4      	bne.n	8005140 <dyn3_execute+0x30>
 80051f6:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80051fa:	f7ff f801 	bl	8004200 <chThdSleep>
 80051fe:	7f21      	ldrb	r1, [r4, #28]
 8005200:	f1a1 030f 	sub.w	r3, r1, #15
 8005204:	4259      	negs	r1, r3
 8005206:	4159      	adcs	r1, r3
 8005208:	200a      	movs	r0, #10
 800520a:	f7fb fb71 	bl	80008f0 <_test_assert>
 800520e:	2800      	cmp	r0, #0
 8005210:	d196      	bne.n	8005140 <dyn3_execute+0x30>
 8005212:	4620      	mov	r0, r4
 8005214:	f7ff fdcc 	bl	8004db0 <regfind>
 8005218:	4601      	mov	r1, r0
 800521a:	200b      	movs	r0, #11
 800521c:	f7fb fb68 	bl	80008f0 <_test_assert>
 8005220:	2800      	cmp	r0, #0
 8005222:	d18d      	bne.n	8005140 <dyn3_execute+0x30>
 8005224:	4620      	mov	r0, r4
 8005226:	f7ff fdc3 	bl	8004db0 <regfind>
 800522a:	f080 0101 	eor.w	r1, r0, #1
 800522e:	b2c9      	uxtb	r1, r1
 8005230:	200c      	movs	r0, #12
 8005232:	b002      	add	sp, #8
 8005234:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005238:	f7fb bb5a 	b.w	80008f0 <_test_assert>
 800523c:	20001370 	.word	0x20001370
 8005240:	08008da0 	.word	0x08008da0
 8005244:	200015d0 	.word	0x200015d0
 8005248:	08000981 	.word	0x08000981
 800524c:	00000000 	.word	0x00000000

08005250 <chSemWait>:
 8005250:	2320      	movs	r3, #32
 8005252:	f383 8811 	msr	BASEPRI, r3
 8005256:	6883      	ldr	r3, [r0, #8]
 8005258:	3b01      	subs	r3, #1
 800525a:	2b00      	cmp	r3, #0
 800525c:	6083      	str	r3, [r0, #8]
 800525e:	db04      	blt.n	800526a <chSemWait+0x1a>
 8005260:	2000      	movs	r0, #0
 8005262:	2300      	movs	r3, #0
 8005264:	f383 8811 	msr	BASEPRI, r3
 8005268:	4770      	bx	lr
 800526a:	b510      	push	{r4, lr}
 800526c:	4c08      	ldr	r4, [pc, #32]	; (8005290 <chSemWait+0x40>)
 800526e:	69a2      	ldr	r2, [r4, #24]
 8005270:	6210      	str	r0, [r2, #32]
 8005272:	6010      	str	r0, [r2, #0]
 8005274:	6841      	ldr	r1, [r0, #4]
 8005276:	6051      	str	r1, [r2, #4]
 8005278:	4603      	mov	r3, r0
 800527a:	600a      	str	r2, [r1, #0]
 800527c:	2005      	movs	r0, #5
 800527e:	605a      	str	r2, [r3, #4]
 8005280:	f7fe f8de 	bl	8003440 <chSchGoSleepS>
 8005284:	69a3      	ldr	r3, [r4, #24]
 8005286:	6a18      	ldr	r0, [r3, #32]
 8005288:	2300      	movs	r3, #0
 800528a:	f383 8811 	msr	BASEPRI, r3
 800528e:	bd10      	pop	{r4, pc}
 8005290:	20001370 	.word	0x20001370
	...

080052a0 <bmk11_execute>:
 80052a0:	b570      	push	{r4, r5, r6, lr}
 80052a2:	f7ff f86d 	bl	8004380 <test_wait_tick>
 80052a6:	f7fc fe83 	bl	8001fb0 <test_start_timer.constprop.6>
 80052aa:	4e15      	ldr	r6, [pc, #84]	; (8005300 <bmk11_execute+0x60>)
 80052ac:	4c15      	ldr	r4, [pc, #84]	; (8005304 <bmk11_execute+0x64>)
 80052ae:	2500      	movs	r5, #0
 80052b0:	4620      	mov	r0, r4
 80052b2:	f7ff ffcd 	bl	8005250 <chSemWait>
 80052b6:	4620      	mov	r0, r4
 80052b8:	f7fe f86a 	bl	8003390 <chSemSignal>
 80052bc:	4620      	mov	r0, r4
 80052be:	f7ff ffc7 	bl	8005250 <chSemWait>
 80052c2:	4620      	mov	r0, r4
 80052c4:	f7fe f864 	bl	8003390 <chSemSignal>
 80052c8:	4620      	mov	r0, r4
 80052ca:	f7ff ffc1 	bl	8005250 <chSemWait>
 80052ce:	4620      	mov	r0, r4
 80052d0:	f7fe f85e 	bl	8003390 <chSemSignal>
 80052d4:	4620      	mov	r0, r4
 80052d6:	f7ff ffbb 	bl	8005250 <chSemWait>
 80052da:	4620      	mov	r0, r4
 80052dc:	f7fe f858 	bl	8003390 <chSemSignal>
 80052e0:	7833      	ldrb	r3, [r6, #0]
 80052e2:	3501      	adds	r5, #1
 80052e4:	2b00      	cmp	r3, #0
 80052e6:	d0e3      	beq.n	80052b0 <bmk11_execute+0x10>
 80052e8:	4807      	ldr	r0, [pc, #28]	; (8005308 <bmk11_execute+0x68>)
 80052ea:	f7fb fb71 	bl	80009d0 <test_print>
 80052ee:	00a8      	lsls	r0, r5, #2
 80052f0:	f7fb fa76 	bl	80007e0 <test_printn>
 80052f4:	4805      	ldr	r0, [pc, #20]	; (800530c <bmk11_execute+0x6c>)
 80052f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80052fa:	f7fb bb49 	b.w	8000990 <test_println>
 80052fe:	bf00      	nop
 8005300:	20001cf0 	.word	0x20001cf0
 8005304:	2000164c 	.word	0x2000164c
 8005308:	08008930 	.word	0x08008930
 800530c:	08008950 	.word	0x08008950

08005310 <thread3.lto_priv.91>:
 8005310:	b538      	push	{r3, r4, r5, lr}
 8005312:	4c07      	ldr	r4, [pc, #28]	; (8005330 <thread3.lto_priv.91+0x20>)
 8005314:	69a3      	ldr	r3, [r4, #24]
 8005316:	7f5b      	ldrb	r3, [r3, #29]
 8005318:	075a      	lsls	r2, r3, #29
 800531a:	d407      	bmi.n	800532c <thread3.lto_priv.91+0x1c>
 800531c:	4d05      	ldr	r5, [pc, #20]	; (8005334 <thread3.lto_priv.91+0x24>)
 800531e:	4628      	mov	r0, r5
 8005320:	f7ff ff96 	bl	8005250 <chSemWait>
 8005324:	69a3      	ldr	r3, [r4, #24]
 8005326:	7f5b      	ldrb	r3, [r3, #29]
 8005328:	075b      	lsls	r3, r3, #29
 800532a:	d5f8      	bpl.n	800531e <thread3.lto_priv.91+0xe>
 800532c:	bd38      	pop	{r3, r4, r5, pc}
 800532e:	bf00      	nop
 8005330:	20001370 	.word	0x20001370
 8005334:	2000164c 	.word	0x2000164c
	...

08005340 <sem4_execute>:
 8005340:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005342:	b087      	sub	sp, #28
 8005344:	ac03      	add	r4, sp, #12
 8005346:	2500      	movs	r5, #0
 8005348:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800534c:	9505      	str	r5, [sp, #20]
 800534e:	2620      	movs	r6, #32
 8005350:	f386 8811 	msr	BASEPRI, r6
 8005354:	4629      	mov	r1, r5
 8005356:	4620      	mov	r0, r4
 8005358:	f7fc fd82 	bl	8001e60 <chSemResetI>
 800535c:	f7fd fe48 	bl	8002ff0 <chSchRescheduleS>
 8005360:	f385 8811 	msr	BASEPRI, r5
 8005364:	f386 8811 	msr	BASEPRI, r6
 8005368:	9905      	ldr	r1, [sp, #20]
 800536a:	42a9      	cmp	r1, r5
 800536c:	bfcc      	ite	gt
 800536e:	2100      	movgt	r1, #0
 8005370:	2101      	movle	r1, #1
 8005372:	2001      	movs	r0, #1
 8005374:	f7fb fabc 	bl	80008f0 <_test_assert>
 8005378:	b118      	cbz	r0, 8005382 <sem4_execute+0x42>
 800537a:	f385 8811 	msr	BASEPRI, r5
 800537e:	b007      	add	sp, #28
 8005380:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005382:	4607      	mov	r7, r0
 8005384:	f380 8811 	msr	BASEPRI, r0
 8005388:	4a41      	ldr	r2, [pc, #260]	; (8005490 <sem4_execute+0x150>)
 800538a:	4b42      	ldr	r3, [pc, #264]	; (8005494 <sem4_execute+0x154>)
 800538c:	6992      	ldr	r2, [r2, #24]
 800538e:	4842      	ldr	r0, [pc, #264]	; (8005498 <sem4_execute+0x158>)
 8005390:	6892      	ldr	r2, [r2, #8]
 8005392:	9400      	str	r4, [sp, #0]
 8005394:	3a01      	subs	r2, #1
 8005396:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800539a:	f7fe f819 	bl	80033d0 <chThdCreateStatic>
 800539e:	4b3f      	ldr	r3, [pc, #252]	; (800549c <sem4_execute+0x15c>)
 80053a0:	6018      	str	r0, [r3, #0]
 80053a2:	4620      	mov	r0, r4
 80053a4:	f7ff ff54 	bl	8005250 <chSemWait>
 80053a8:	f386 8811 	msr	BASEPRI, r6
 80053ac:	9905      	ldr	r1, [sp, #20]
 80053ae:	2900      	cmp	r1, #0
 80053b0:	bfcc      	ite	gt
 80053b2:	2100      	movgt	r1, #0
 80053b4:	2101      	movle	r1, #1
 80053b6:	2002      	movs	r0, #2
 80053b8:	f7fb fa9a 	bl	80008f0 <_test_assert>
 80053bc:	b118      	cbz	r0, 80053c6 <sem4_execute+0x86>
 80053be:	f387 8811 	msr	BASEPRI, r7
 80053c2:	b007      	add	sp, #28
 80053c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80053c6:	f380 8811 	msr	BASEPRI, r0
 80053ca:	f386 8811 	msr	BASEPRI, r6
 80053ce:	9b05      	ldr	r3, [sp, #20]
 80053d0:	2b00      	cmp	r3, #0
 80053d2:	dd24      	ble.n	800541e <sem4_execute+0xde>
 80053d4:	f7fd fe0c 	bl	8002ff0 <chSchRescheduleS>
 80053d8:	2500      	movs	r5, #0
 80053da:	f385 8811 	msr	BASEPRI, r5
 80053de:	2720      	movs	r7, #32
 80053e0:	f387 8811 	msr	BASEPRI, r7
 80053e4:	9905      	ldr	r1, [sp, #20]
 80053e6:	42a9      	cmp	r1, r5
 80053e8:	f04f 0003 	mov.w	r0, #3
 80053ec:	bfd4      	ite	le
 80053ee:	2100      	movle	r1, #0
 80053f0:	2101      	movgt	r1, #1
 80053f2:	f7fb fa7d 	bl	80008f0 <_test_assert>
 80053f6:	4606      	mov	r6, r0
 80053f8:	2800      	cmp	r0, #0
 80053fa:	d1be      	bne.n	800537a <sem4_execute+0x3a>
 80053fc:	f380 8811 	msr	BASEPRI, r0
 8005400:	f387 8811 	msr	BASEPRI, r7
 8005404:	9905      	ldr	r1, [sp, #20]
 8005406:	f1a1 0101 	sub.w	r1, r1, #1
 800540a:	fab1 f181 	clz	r1, r1
 800540e:	2004      	movs	r0, #4
 8005410:	0949      	lsrs	r1, r1, #5
 8005412:	f7fb fa6d 	bl	80008f0 <_test_assert>
 8005416:	b130      	cbz	r0, 8005426 <sem4_execute+0xe6>
 8005418:	f386 8811 	msr	BASEPRI, r6
 800541c:	e7af      	b.n	800537e <sem4_execute+0x3e>
 800541e:	4620      	mov	r0, r4
 8005420:	f7fc fcae 	bl	8001d80 <chSemSignalI>
 8005424:	e7d6      	b.n	80053d4 <sem4_execute+0x94>
 8005426:	f380 8811 	msr	BASEPRI, r0
 800542a:	f387 8811 	msr	BASEPRI, r7
 800542e:	9b05      	ldr	r3, [sp, #20]
 8005430:	2b00      	cmp	r3, #0
 8005432:	dd28      	ble.n	8005486 <sem4_execute+0x146>
 8005434:	f7fd fddc 	bl	8002ff0 <chSchRescheduleS>
 8005438:	2400      	movs	r4, #0
 800543a:	f384 8811 	msr	BASEPRI, r4
 800543e:	2620      	movs	r6, #32
 8005440:	f386 8811 	msr	BASEPRI, r6
 8005444:	9905      	ldr	r1, [sp, #20]
 8005446:	42a1      	cmp	r1, r4
 8005448:	f04f 0003 	mov.w	r0, #3
 800544c:	bfd4      	ite	le
 800544e:	2100      	movle	r1, #0
 8005450:	2101      	movgt	r1, #1
 8005452:	f7fb fa4d 	bl	80008f0 <_test_assert>
 8005456:	4605      	mov	r5, r0
 8005458:	b110      	cbz	r0, 8005460 <sem4_execute+0x120>
 800545a:	f384 8811 	msr	BASEPRI, r4
 800545e:	e78e      	b.n	800537e <sem4_execute+0x3e>
 8005460:	f380 8811 	msr	BASEPRI, r0
 8005464:	f386 8811 	msr	BASEPRI, r6
 8005468:	9905      	ldr	r1, [sp, #20]
 800546a:	f1a1 0101 	sub.w	r1, r1, #1
 800546e:	fab1 f181 	clz	r1, r1
 8005472:	2005      	movs	r0, #5
 8005474:	0949      	lsrs	r1, r1, #5
 8005476:	f7fb fa3b 	bl	80008f0 <_test_assert>
 800547a:	2800      	cmp	r0, #0
 800547c:	f47f af7d 	bne.w	800537a <sem4_execute+0x3a>
 8005480:	f380 8811 	msr	BASEPRI, r0
 8005484:	e77b      	b.n	800537e <sem4_execute+0x3e>
 8005486:	4620      	mov	r0, r4
 8005488:	f7fc fc7a 	bl	8001d80 <chSemSignalI>
 800548c:	e7d2      	b.n	8005434 <sem4_execute+0xf4>
 800548e:	bf00      	nop
 8005490:	20001370 	.word	0x20001370
 8005494:	08003011 	.word	0x08003011
 8005498:	20001660 	.word	0x20001660
 800549c:	20001cf4 	.word	0x20001cf4

080054a0 <thread3.lto_priv.90>:
 80054a0:	b510      	push	{r4, lr}
 80054a2:	4c04      	ldr	r4, [pc, #16]	; (80054b4 <thread3.lto_priv.90+0x14>)
 80054a4:	4620      	mov	r0, r4
 80054a6:	f7ff fed3 	bl	8005250 <chSemWait>
 80054aa:	4620      	mov	r0, r4
 80054ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80054b0:	f7fd bf6e 	b.w	8003390 <chSemSignal>
 80054b4:	200008cc 	.word	0x200008cc
	...

080054c0 <thread1.lto_priv.92>:
 80054c0:	b510      	push	{r4, lr}
 80054c2:	4604      	mov	r4, r0
 80054c4:	4803      	ldr	r0, [pc, #12]	; (80054d4 <thread1.lto_priv.92+0x14>)
 80054c6:	f7ff fec3 	bl	8005250 <chSemWait>
 80054ca:	7820      	ldrb	r0, [r4, #0]
 80054cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80054d0:	f7fb ba26 	b.w	8000920 <test_emit_token>
 80054d4:	200008cc 	.word	0x200008cc
	...

080054e0 <chThdSuspendS>:
 80054e0:	b510      	push	{r4, lr}
 80054e2:	4c05      	ldr	r4, [pc, #20]	; (80054f8 <chThdSuspendS+0x18>)
 80054e4:	69a3      	ldr	r3, [r4, #24]
 80054e6:	6003      	str	r3, [r0, #0]
 80054e8:	4602      	mov	r2, r0
 80054ea:	621a      	str	r2, [r3, #32]
 80054ec:	2003      	movs	r0, #3
 80054ee:	f7fd ffa7 	bl	8003440 <chSchGoSleepS>
 80054f2:	69a3      	ldr	r3, [r4, #24]
 80054f4:	6a18      	ldr	r0, [r3, #32]
 80054f6:	bd10      	pop	{r4, pc}
 80054f8:	20001370 	.word	0x20001370
 80054fc:	00000000 	.word	0x00000000

08005500 <usb_lld_pump>:
 8005500:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8005504:	4bb7      	ldr	r3, [pc, #732]	; (80057e4 <usb_lld_pump+0x2e4>)
 8005506:	49b8      	ldr	r1, [pc, #736]	; (80057e8 <usb_lld_pump+0x2e8>)
 8005508:	699a      	ldr	r2, [r3, #24]
 800550a:	6d05      	ldr	r5, [r0, #80]	; 0x50
 800550c:	6191      	str	r1, [r2, #24]
 800550e:	b087      	sub	sp, #28
 8005510:	2320      	movs	r3, #32
 8005512:	f383 8811 	msr	BASEPRI, r3
 8005516:	9300      	str	r3, [sp, #0]
 8005518:	f100 0360 	add.w	r3, r0, #96	; 0x60
 800551c:	46a9      	mov	r9, r5
 800551e:	9305      	str	r3, [sp, #20]
 8005520:	4605      	mov	r5, r0
 8005522:	782b      	ldrb	r3, [r5, #0]
 8005524:	2b01      	cmp	r3, #1
 8005526:	d005      	beq.n	8005534 <usb_lld_pump+0x34>
 8005528:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 800552a:	b963      	cbnz	r3, 8005546 <usb_lld_pump+0x46>
 800552c:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8005530:	06db      	lsls	r3, r3, #27
 8005532:	d408      	bmi.n	8005546 <usb_lld_pump+0x46>
 8005534:	f8d9 3018 	ldr.w	r3, [r9, #24]
 8005538:	9805      	ldr	r0, [sp, #20]
 800553a:	f043 0310 	orr.w	r3, r3, #16
 800553e:	f8c9 3018 	str.w	r3, [r9, #24]
 8005542:	f7ff ffcd 	bl	80054e0 <chThdSuspendS>
 8005546:	2300      	movs	r3, #0
 8005548:	f383 8811 	msr	BASEPRI, r3
 800554c:	469a      	mov	sl, r3
 800554e:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8005552:	f013 0310 	ands.w	r3, r3, #16
 8005556:	d058      	beq.n	800560a <usb_lld_pump+0x10a>
 8005558:	6d2a      	ldr	r2, [r5, #80]	; 0x50
 800555a:	6a13      	ldr	r3, [r2, #32]
 800555c:	f403 11f0 	and.w	r1, r3, #1966080	; 0x1e0000
 8005560:	f5b1 2f80 	cmp.w	r1, #262144	; 0x40000
 8005564:	d024      	beq.n	80055b0 <usb_lld_pump+0xb0>
 8005566:	f5b1 2f40 	cmp.w	r1, #786432	; 0xc0000
 800556a:	d1f0      	bne.n	800554e <usb_lld_pump+0x4e>
 800556c:	f003 010f 	and.w	r1, r3, #15
 8005570:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8005574:	f3c3 130a 	ubfx	r3, r3, #4, #11
 8005578:	68c9      	ldr	r1, [r1, #12]
 800557a:	3303      	adds	r3, #3
 800557c:	089b      	lsrs	r3, r3, #2
 800557e:	6a0c      	ldr	r4, [r1, #32]
 8005580:	d0e5      	beq.n	800554e <usb_lld_pump+0x4e>
 8005582:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8005586:	2102      	movs	r1, #2
 8005588:	6816      	ldr	r6, [r2, #0]
 800558a:	1e58      	subs	r0, r3, #1
 800558c:	b149      	cbz	r1, 80055a2 <usb_lld_pump+0xa2>
 800558e:	4603      	mov	r3, r0
 8005590:	f844 6b04 	str.w	r6, [r4], #4
 8005594:	3901      	subs	r1, #1
 8005596:	2b00      	cmp	r3, #0
 8005598:	d0d9      	beq.n	800554e <usb_lld_pump+0x4e>
 800559a:	6816      	ldr	r6, [r2, #0]
 800559c:	1e58      	subs	r0, r3, #1
 800559e:	2900      	cmp	r1, #0
 80055a0:	d1f5      	bne.n	800558e <usb_lld_pump+0x8e>
 80055a2:	2800      	cmp	r0, #0
 80055a4:	d0d3      	beq.n	800554e <usb_lld_pump+0x4e>
 80055a6:	3b02      	subs	r3, #2
 80055a8:	6810      	ldr	r0, [r2, #0]
 80055aa:	2b00      	cmp	r3, #0
 80055ac:	d1f5      	bne.n	800559a <usb_lld_pump+0x9a>
 80055ae:	e7ce      	b.n	800554e <usb_lld_pump+0x4e>
 80055b0:	f003 060f 	and.w	r6, r3, #15
 80055b4:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 80055b8:	f3c3 140a 	ubfx	r4, r3, #4, #11
 80055bc:	68f3      	ldr	r3, [r6, #12]
 80055be:	699f      	ldr	r7, [r3, #24]
 80055c0:	783b      	ldrb	r3, [r7, #0]
 80055c2:	68f8      	ldr	r0, [r7, #12]
 80055c4:	2b00      	cmp	r3, #0
 80055c6:	d13b      	bne.n	8005640 <usb_lld_pump+0x140>
 80055c8:	e9d7 1301 	ldrd	r1, r3, [r7, #4]
 80055cc:	1cce      	adds	r6, r1, #3
 80055ce:	1ce1      	adds	r1, r4, #3
 80055d0:	1af6      	subs	r6, r6, r3
 80055d2:	0889      	lsrs	r1, r1, #2
 80055d4:	ea4f 0696 	mov.w	r6, r6, lsr #2
 80055d8:	d00e      	beq.n	80055f8 <usb_lld_pump+0xf8>
 80055da:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80055de:	4684      	mov	ip, r0
 80055e0:	4696      	mov	lr, r2
 80055e2:	f8de 2000 	ldr.w	r2, [lr]
 80055e6:	1e4b      	subs	r3, r1, #1
 80055e8:	b316      	cbz	r6, 8005630 <usb_lld_pump+0x130>
 80055ea:	4619      	mov	r1, r3
 80055ec:	f84c 2b04 	str.w	r2, [ip], #4
 80055f0:	3e01      	subs	r6, #1
 80055f2:	2900      	cmp	r1, #0
 80055f4:	d1f5      	bne.n	80055e2 <usb_lld_pump+0xe2>
 80055f6:	68bb      	ldr	r3, [r7, #8]
 80055f8:	4420      	add	r0, r4
 80055fa:	60f8      	str	r0, [r7, #12]
 80055fc:	4423      	add	r3, r4
 80055fe:	60bb      	str	r3, [r7, #8]
 8005600:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8005604:	f013 0310 	ands.w	r3, r3, #16
 8005608:	d1a6      	bne.n	8005558 <usb_lld_pump+0x58>
 800560a:	2601      	movs	r6, #1
 800560c:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 800560e:	fa06 f60a 	lsl.w	r6, r6, sl
 8005612:	4216      	tst	r6, r2
 8005614:	d14f      	bne.n	80056b6 <usb_lld_pump+0x1b6>
 8005616:	f10a 0301 	add.w	r3, sl, #1
 800561a:	9302      	str	r3, [sp, #8]
 800561c:	6d6b      	ldr	r3, [r5, #84]	; 0x54
 800561e:	f89d a008 	ldrb.w	sl, [sp, #8]
 8005622:	689b      	ldr	r3, [r3, #8]
 8005624:	459a      	cmp	sl, r3
 8005626:	d992      	bls.n	800554e <usb_lld_pump+0x4e>
 8005628:	9b00      	ldr	r3, [sp, #0]
 800562a:	f383 8811 	msr	BASEPRI, r3
 800562e:	e778      	b.n	8005522 <usb_lld_pump+0x22>
 8005630:	2b00      	cmp	r3, #0
 8005632:	d0e0      	beq.n	80055f6 <usb_lld_pump+0xf6>
 8005634:	3902      	subs	r1, #2
 8005636:	f8de 3000 	ldr.w	r3, [lr]
 800563a:	2900      	cmp	r1, #0
 800563c:	d1d1      	bne.n	80055e2 <usb_lld_pump+0xe2>
 800563e:	e7da      	b.n	80055f6 <usb_lld_pump+0xf6>
 8005640:	b33c      	cbz	r4, 8005692 <usb_lld_pump+0x192>
 8005642:	6941      	ldr	r1, [r0, #20]
 8005644:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8005648:	46a4      	mov	ip, r4
 800564a:	f1bc 0f03 	cmp.w	ip, #3
 800564e:	d907      	bls.n	8005660 <usb_lld_pump+0x160>
 8005650:	6903      	ldr	r3, [r0, #16]
 8005652:	428b      	cmp	r3, r1
 8005654:	d804      	bhi.n	8005660 <usb_lld_pump+0x160>
 8005656:	68c1      	ldr	r1, [r0, #12]
 8005658:	6141      	str	r1, [r0, #20]
 800565a:	f1bc 0f03 	cmp.w	ip, #3
 800565e:	d8f7      	bhi.n	8005650 <usb_lld_pump+0x150>
 8005660:	f8d2 e000 	ldr.w	lr, [r2]
 8005664:	2300      	movs	r3, #0
 8005666:	fa2e f703 	lsr.w	r7, lr, r3
 800566a:	f101 0801 	add.w	r8, r1, #1
 800566e:	f8c0 8014 	str.w	r8, [r0, #20]
 8005672:	700f      	strb	r7, [r1, #0]
 8005674:	e9d0 1704 	ldrd	r1, r7, [r0, #16]
 8005678:	428f      	cmp	r7, r1
 800567a:	bf24      	itt	cs
 800567c:	68c1      	ldrcs	r1, [r0, #12]
 800567e:	6141      	strcs	r1, [r0, #20]
 8005680:	f1bc 0c01 	subs.w	ip, ip, #1
 8005684:	f103 0308 	add.w	r3, r3, #8
 8005688:	d003      	beq.n	8005692 <usb_lld_pump+0x192>
 800568a:	2b20      	cmp	r3, #32
 800568c:	6941      	ldr	r1, [r0, #20]
 800568e:	d1ea      	bne.n	8005666 <usb_lld_pump+0x166>
 8005690:	e7db      	b.n	800564a <usb_lld_pump+0x14a>
 8005692:	9b00      	ldr	r3, [sp, #0]
 8005694:	f383 8811 	msr	BASEPRI, r3
 8005698:	6883      	ldr	r3, [r0, #8]
 800569a:	4423      	add	r3, r4
 800569c:	6083      	str	r3, [r0, #8]
 800569e:	2100      	movs	r1, #0
 80056a0:	f7fc fbf6 	bl	8001e90 <chThdDequeueAllI>
 80056a4:	f7fd fca4 	bl	8002ff0 <chSchRescheduleS>
 80056a8:	2300      	movs	r3, #0
 80056aa:	f383 8811 	msr	BASEPRI, r3
 80056ae:	68f3      	ldr	r3, [r6, #12]
 80056b0:	699f      	ldr	r7, [r3, #24]
 80056b2:	68bb      	ldr	r3, [r7, #8]
 80056b4:	e7a2      	b.n	80055fc <usb_lld_pump+0xfc>
 80056b6:	9a00      	ldr	r2, [sp, #0]
 80056b8:	f382 8811 	msr	BASEPRI, r2
 80056bc:	f8d9 1008 	ldr.w	r1, [r9, #8]
 80056c0:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 80056c2:	f021 0101 	bic.w	r1, r1, #1
 80056c6:	ea22 0206 	bic.w	r2, r2, r6
 80056ca:	f8c9 1008 	str.w	r1, [r9, #8]
 80056ce:	65ea      	str	r2, [r5, #92]	; 0x5c
 80056d0:	f383 8811 	msr	BASEPRI, r3
 80056d4:	eb05 038a 	add.w	r3, r5, sl, lsl #2
 80056d8:	461f      	mov	r7, r3
 80056da:	68d9      	ldr	r1, [r3, #12]
 80056dc:	694a      	ldr	r2, [r1, #20]
 80056de:	e9d2 3001 	ldrd	r3, r0, [r2, #4]
 80056e2:	4298      	cmp	r0, r3
 80056e4:	f080 80b5 	bcs.w	8005852 <usb_lld_pump+0x352>
 80056e8:	f8d5 e050 	ldr.w	lr, [r5, #80]	; 0x50
 80056ec:	8a0c      	ldrh	r4, [r1, #16]
 80056ee:	ea4f 184a 	mov.w	r8, sl, lsl #5
 80056f2:	eb0e 0c08 	add.w	ip, lr, r8
 80056f6:	1a1b      	subs	r3, r3, r0
 80056f8:	f8dc 0918 	ldr.w	r0, [ip, #2328]	; 0x918
 80056fc:	429c      	cmp	r4, r3
 80056fe:	bf28      	it	cs
 8005700:	461c      	movcs	r4, r3
 8005702:	b283      	uxth	r3, r0
 8005704:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 8005708:	f200 80b0 	bhi.w	800586c <usb_lld_pump+0x36c>
 800570c:	f10a 0301 	add.w	r3, sl, #1
 8005710:	9302      	str	r3, [sp, #8]
 8005712:	031b      	lsls	r3, r3, #12
 8005714:	e9cd 9603 	strd	r9, r6, [sp, #12]
 8005718:	9301      	str	r3, [sp, #4]
 800571a:	46b9      	mov	r9, r7
 800571c:	9e01      	ldr	r6, [sp, #4]
 800571e:	7813      	ldrb	r3, [r2, #0]
 8005720:	68d0      	ldr	r0, [r2, #12]
 8005722:	44b6      	add	lr, r6
 8005724:	2b00      	cmp	r3, #0
 8005726:	d07d      	beq.n	8005824 <usb_lld_pump+0x324>
 8005728:	b1fc      	cbz	r4, 800576a <usb_lld_pump+0x26a>
 800572a:	f8d0 b010 	ldr.w	fp, [r0, #16]
 800572e:	4622      	mov	r2, r4
 8005730:	0897      	lsrs	r7, r2, #2
 8005732:	6983      	ldr	r3, [r0, #24]
 8005734:	d05d      	beq.n	80057f2 <usb_lld_pump+0x2f2>
 8005736:	ebbb 0103 	subs.w	r1, fp, r3
 800573a:	bf48      	it	mi
 800573c:	3103      	addmi	r1, #3
 800573e:	108e      	asrs	r6, r1, #2
 8005740:	42be      	cmp	r6, r7
 8005742:	bf28      	it	cs
 8005744:	463e      	movcs	r6, r7
 8005746:	00b1      	lsls	r1, r6, #2
 8005748:	1a52      	subs	r2, r2, r1
 800574a:	2e00      	cmp	r6, #0
 800574c:	d07b      	beq.n	8005846 <usb_lld_pump+0x346>
 800574e:	4419      	add	r1, r3
 8005750:	f853 6b04 	ldr.w	r6, [r3], #4
 8005754:	f8ce 6000 	str.w	r6, [lr]
 8005758:	428b      	cmp	r3, r1
 800575a:	d1f9      	bne.n	8005750 <usb_lld_pump+0x250>
 800575c:	4559      	cmp	r1, fp
 800575e:	6181      	str	r1, [r0, #24]
 8005760:	d344      	bcc.n	80057ec <usb_lld_pump+0x2ec>
 8005762:	68c3      	ldr	r3, [r0, #12]
 8005764:	6183      	str	r3, [r0, #24]
 8005766:	2a00      	cmp	r2, #0
 8005768:	d1e2      	bne.n	8005730 <usb_lld_pump+0x230>
 800576a:	9b00      	ldr	r3, [sp, #0]
 800576c:	f383 8811 	msr	BASEPRI, r3
 8005770:	6883      	ldr	r3, [r0, #8]
 8005772:	4423      	add	r3, r4
 8005774:	6083      	str	r3, [r0, #8]
 8005776:	2100      	movs	r1, #0
 8005778:	f7fc fb8a 	bl	8001e90 <chThdDequeueAllI>
 800577c:	f7fd fc38 	bl	8002ff0 <chSchRescheduleS>
 8005780:	2300      	movs	r3, #0
 8005782:	f383 8811 	msr	BASEPRI, r3
 8005786:	f8d9 100c 	ldr.w	r1, [r9, #12]
 800578a:	694a      	ldr	r2, [r1, #20]
 800578c:	e9d2 0301 	ldrd	r0, r3, [r2, #4]
 8005790:	441c      	add	r4, r3
 8005792:	42a0      	cmp	r0, r4
 8005794:	6094      	str	r4, [r2, #8]
 8005796:	d958      	bls.n	800584a <usb_lld_pump+0x34a>
 8005798:	f8d5 e050 	ldr.w	lr, [r5, #80]	; 0x50
 800579c:	f8b1 c010 	ldrh.w	ip, [r1, #16]
 80057a0:	eb0e 0a08 	add.w	sl, lr, r8
 80057a4:	1b04      	subs	r4, r0, r4
 80057a6:	f8da 3918 	ldr.w	r3, [sl, #2328]	; 0x918
 80057aa:	4564      	cmp	r4, ip
 80057ac:	bf28      	it	cs
 80057ae:	4664      	movcs	r4, ip
 80057b0:	b29b      	uxth	r3, r3
 80057b2:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 80057b6:	d9b1      	bls.n	800571c <usb_lld_pump+0x21c>
 80057b8:	e9dd 9603 	ldrd	r9, r6, [sp, #12]
 80057bc:	2200      	movs	r2, #0
 80057be:	9b00      	ldr	r3, [sp, #0]
 80057c0:	f383 8811 	msr	BASEPRI, r3
 80057c4:	f8d9 3008 	ldr.w	r3, [r9, #8]
 80057c8:	f043 0301 	orr.w	r3, r3, #1
 80057cc:	f8c9 3008 	str.w	r3, [r9, #8]
 80057d0:	b922      	cbnz	r2, 80057dc <usb_lld_pump+0x2dc>
 80057d2:	f8d9 3834 	ldr.w	r3, [r9, #2100]	; 0x834
 80057d6:	431e      	orrs	r6, r3
 80057d8:	f8c9 6834 	str.w	r6, [r9, #2100]	; 0x834
 80057dc:	2300      	movs	r3, #0
 80057de:	f383 8811 	msr	BASEPRI, r3
 80057e2:	e71b      	b.n	800561c <usb_lld_pump+0x11c>
 80057e4:	20001370 	.word	0x20001370
 80057e8:	08009980 	.word	0x08009980
 80057ec:	2a00      	cmp	r2, #0
 80057ee:	d0bc      	beq.n	800576a <usb_lld_pump+0x26a>
 80057f0:	460b      	mov	r3, r1
 80057f2:	2100      	movs	r1, #0
 80057f4:	460e      	mov	r6, r1
 80057f6:	1c5f      	adds	r7, r3, #1
 80057f8:	6187      	str	r7, [r0, #24]
 80057fa:	781b      	ldrb	r3, [r3, #0]
 80057fc:	455f      	cmp	r7, fp
 80057fe:	fa03 f301 	lsl.w	r3, r3, r1
 8005802:	ea46 0603 	orr.w	r6, r6, r3
 8005806:	bf24      	itt	cs
 8005808:	68c3      	ldrcs	r3, [r0, #12]
 800580a:	6183      	strcs	r3, [r0, #24]
 800580c:	3a01      	subs	r2, #1
 800580e:	d004      	beq.n	800581a <usb_lld_pump+0x31a>
 8005810:	2918      	cmp	r1, #24
 8005812:	d002      	beq.n	800581a <usb_lld_pump+0x31a>
 8005814:	3108      	adds	r1, #8
 8005816:	6983      	ldr	r3, [r0, #24]
 8005818:	e7ed      	b.n	80057f6 <usb_lld_pump+0x2f6>
 800581a:	f8ce 6000 	str.w	r6, [lr]
 800581e:	2a00      	cmp	r2, #0
 8005820:	d186      	bne.n	8005730 <usb_lld_pump+0x230>
 8005822:	e7a2      	b.n	800576a <usb_lld_pump+0x26a>
 8005824:	1ce3      	adds	r3, r4, #3
 8005826:	089b      	lsrs	r3, r3, #2
 8005828:	d00a      	beq.n	8005840 <usb_lld_pump+0x340>
 800582a:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 800582e:	4603      	mov	r3, r0
 8005830:	f853 6b04 	ldr.w	r6, [r3], #4
 8005834:	f8ce 6000 	str.w	r6, [lr]
 8005838:	428b      	cmp	r3, r1
 800583a:	d1f9      	bne.n	8005830 <usb_lld_pump+0x330>
 800583c:	f8d9 100c 	ldr.w	r1, [r9, #12]
 8005840:	4420      	add	r0, r4
 8005842:	60d0      	str	r0, [r2, #12]
 8005844:	e7a1      	b.n	800578a <usb_lld_pump+0x28a>
 8005846:	4619      	mov	r1, r3
 8005848:	e788      	b.n	800575c <usb_lld_pump+0x25c>
 800584a:	e9dd 9603 	ldrd	r9, r6, [sp, #12]
 800584e:	2201      	movs	r2, #1
 8005850:	e7b5      	b.n	80057be <usb_lld_pump+0x2be>
 8005852:	9b00      	ldr	r3, [sp, #0]
 8005854:	f383 8811 	msr	BASEPRI, r3
 8005858:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800585c:	f10a 0201 	add.w	r2, sl, #1
 8005860:	f043 0301 	orr.w	r3, r3, #1
 8005864:	9202      	str	r2, [sp, #8]
 8005866:	f8c9 3008 	str.w	r3, [r9, #8]
 800586a:	e7b7      	b.n	80057dc <usb_lld_pump+0x2dc>
 800586c:	9b00      	ldr	r3, [sp, #0]
 800586e:	f383 8811 	msr	BASEPRI, r3
 8005872:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8005876:	f10a 0201 	add.w	r2, sl, #1
 800587a:	f043 0301 	orr.w	r3, r3, #1
 800587e:	9202      	str	r2, [sp, #8]
 8005880:	f8c9 3008 	str.w	r3, [r9, #8]
 8005884:	e7a5      	b.n	80057d2 <usb_lld_pump+0x2d2>
 8005886:	bf00      	nop
	...

08005890 <spiSend>:
 8005890:	b570      	push	{r4, r5, r6, lr}
 8005892:	2320      	movs	r3, #32
 8005894:	f383 8811 	msr	BASEPRI, r3
 8005898:	e9d0 4308 	ldrd	r4, r3, [r0, #32]
 800589c:	2503      	movs	r5, #3
 800589e:	7005      	strb	r5, [r0, #0]
 80058a0:	6824      	ldr	r4, [r4, #0]
 80058a2:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
 80058a4:	681b      	ldr	r3, [r3, #0]
 80058a6:	4e0c      	ldr	r6, [pc, #48]	; (80058d8 <spiSend+0x48>)
 80058a8:	60e6      	str	r6, [r4, #12]
 80058aa:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
 80058ae:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80058b0:	6061      	str	r1, [r4, #4]
 80058b2:	6026      	str	r6, [r4, #0]
 80058b4:	60da      	str	r2, [r3, #12]
 80058b6:	6059      	str	r1, [r3, #4]
 80058b8:	601d      	str	r5, [r3, #0]
 80058ba:	6822      	ldr	r2, [r4, #0]
 80058bc:	f042 0201 	orr.w	r2, r2, #1
 80058c0:	6022      	str	r2, [r4, #0]
 80058c2:	681a      	ldr	r2, [r3, #0]
 80058c4:	f042 0201 	orr.w	r2, r2, #1
 80058c8:	601a      	str	r2, [r3, #0]
 80058ca:	3008      	adds	r0, #8
 80058cc:	f7ff fe08 	bl	80054e0 <chThdSuspendS>
 80058d0:	2300      	movs	r3, #0
 80058d2:	f383 8811 	msr	BASEPRI, r3
 80058d6:	bd70      	pop	{r4, r5, r6, pc}
 80058d8:	2000156c 	.word	0x2000156c
 80058dc:	00000000 	.word	0x00000000

080058e0 <lis302dlWriteRegister.part.0.constprop.5>:
 80058e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80058e2:	4684      	mov	ip, r0
 80058e4:	2720      	movs	r7, #32
 80058e6:	f387 8811 	msr	BASEPRI, r7
 80058ea:	4d10      	ldr	r5, [pc, #64]	; (800592c <lis302dlWriteRegister.part.0.constprop.5+0x4c>)
 80058ec:	686a      	ldr	r2, [r5, #4]
 80058ee:	8913      	ldrh	r3, [r2, #8]
 80058f0:	6852      	ldr	r2, [r2, #4]
 80058f2:	2401      	movs	r4, #1
 80058f4:	fa04 f303 	lsl.w	r3, r4, r3
 80058f8:	b29b      	uxth	r3, r3
 80058fa:	8353      	strh	r3, [r2, #26]
 80058fc:	2600      	movs	r6, #0
 80058fe:	f386 8811 	msr	BASEPRI, r6
 8005902:	4b0b      	ldr	r3, [pc, #44]	; (8005930 <lis302dlWriteRegister.part.0.constprop.5+0x50>)
 8005904:	4628      	mov	r0, r5
 8005906:	7059      	strb	r1, [r3, #1]
 8005908:	461a      	mov	r2, r3
 800590a:	2102      	movs	r1, #2
 800590c:	f883 c000 	strb.w	ip, [r3]
 8005910:	f7ff ffbe 	bl	8005890 <spiSend>
 8005914:	f387 8811 	msr	BASEPRI, r7
 8005918:	686b      	ldr	r3, [r5, #4]
 800591a:	891a      	ldrh	r2, [r3, #8]
 800591c:	685b      	ldr	r3, [r3, #4]
 800591e:	4094      	lsls	r4, r2
 8005920:	b2a4      	uxth	r4, r4
 8005922:	831c      	strh	r4, [r3, #24]
 8005924:	f386 8811 	msr	BASEPRI, r6
 8005928:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800592a:	bf00      	nop
 800592c:	2000115c 	.word	0x2000115c
 8005930:	20001d1c 	.word	0x20001d1c
	...

08005940 <Thread1>:
 8005940:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8005944:	4b79      	ldr	r3, [pc, #484]	; (8005b2c <Thread1+0x1ec>)
 8005946:	4a7a      	ldr	r2, [pc, #488]	; (8005b30 <Thread1+0x1f0>)
 8005948:	699b      	ldr	r3, [r3, #24]
 800594a:	b083      	sub	sp, #12
 800594c:	619a      	str	r2, [r3, #24]
 800594e:	2143      	movs	r1, #67	; 0x43
 8005950:	2020      	movs	r0, #32
 8005952:	f7ff ffc5 	bl	80058e0 <lis302dlWriteRegister.part.0.constprop.5>
 8005956:	2100      	movs	r1, #0
 8005958:	2021      	movs	r0, #33	; 0x21
 800595a:	f7ff ffc1 	bl	80058e0 <lis302dlWriteRegister.part.0.constprop.5>
 800595e:	2100      	movs	r1, #0
 8005960:	2022      	movs	r0, #34	; 0x22
 8005962:	f7ff ffbd 	bl	80058e0 <lis302dlWriteRegister.part.0.constprop.5>
 8005966:	2320      	movs	r3, #32
 8005968:	f383 8811 	msr	BASEPRI, r3
 800596c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005970:	2300      	movs	r3, #0
 8005972:	f8d2 9024 	ldr.w	r9, [r2, #36]	; 0x24
 8005976:	f383 8811 	msr	BASEPRI, r3
 800597a:	4d6e      	ldr	r5, [pc, #440]	; (8005b34 <Thread1+0x1f4>)
 800597c:	f8df 81cc 	ldr.w	r8, [pc, #460]	; 8005b4c <Thread1+0x20c>
 8005980:	f8df a1c4 	ldr.w	sl, [pc, #452]	; 8005b48 <Thread1+0x208>
 8005984:	4e6c      	ldr	r6, [pc, #432]	; (8005b38 <Thread1+0x1f8>)
 8005986:	e016      	b.n	80059b6 <Thread1+0x76>
 8005988:	2002      	movs	r0, #2
 800598a:	f7fa fca9 	bl	80002e0 <pwmEnableChannel.constprop.27>
 800598e:	2100      	movs	r1, #0
 8005990:	4608      	mov	r0, r1
 8005992:	f7fa fca5 	bl	80002e0 <pwmEnableChannel.constprop.27>
 8005996:	2c00      	cmp	r4, #0
 8005998:	f2c0 80bf 	blt.w	8005b1a <Thread1+0x1da>
 800599c:	4621      	mov	r1, r4
 800599e:	2003      	movs	r0, #3
 80059a0:	f7fa fc9e 	bl	80002e0 <pwmEnableChannel.constprop.27>
 80059a4:	2100      	movs	r1, #0
 80059a6:	2001      	movs	r0, #1
 80059a8:	f7fa fc9a 	bl	80002e0 <pwmEnableChannel.constprop.27>
 80059ac:	f509 797a 	add.w	r9, r9, #1000	; 0x3e8
 80059b0:	4648      	mov	r0, r9
 80059b2:	f7fe fc15 	bl	80041e0 <chThdSleepUntil>
 80059b6:	78af      	ldrb	r7, [r5, #2]
 80059b8:	78b4      	ldrb	r4, [r6, #2]
 80059ba:	7868      	ldrb	r0, [r5, #1]
 80059bc:	7871      	ldrb	r1, [r6, #1]
 80059be:	782a      	ldrb	r2, [r5, #0]
 80059c0:	7833      	ldrb	r3, [r6, #0]
 80059c2:	70ef      	strb	r7, [r5, #3]
 80059c4:	70f4      	strb	r4, [r6, #3]
 80059c6:	70a8      	strb	r0, [r5, #2]
 80059c8:	70b1      	strb	r1, [r6, #2]
 80059ca:	706a      	strb	r2, [r5, #1]
 80059cc:	7073      	strb	r3, [r6, #1]
 80059ce:	f04f 0b20 	mov.w	fp, #32
 80059d2:	f38b 8811 	msr	BASEPRI, fp
 80059d6:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80059da:	8913      	ldrh	r3, [r2, #8]
 80059dc:	6852      	ldr	r2, [r2, #4]
 80059de:	2401      	movs	r4, #1
 80059e0:	fa04 f303 	lsl.w	r3, r4, r3
 80059e4:	b29b      	uxth	r3, r3
 80059e6:	8353      	strh	r3, [r2, #26]
 80059e8:	2700      	movs	r7, #0
 80059ea:	f387 8811 	msr	BASEPRI, r7
 80059ee:	4a53      	ldr	r2, [pc, #332]	; (8005b3c <Thread1+0x1fc>)
 80059f0:	f64f 73a9 	movw	r3, #65449	; 0xffa9
 80059f4:	8013      	strh	r3, [r2, #0]
 80059f6:	f38b 8811 	msr	BASEPRI, fp
 80059fa:	2203      	movs	r2, #3
 80059fc:	f888 2000 	strb.w	r2, [r8]
 8005a00:	9201      	str	r2, [sp, #4]
 8005a02:	f7fa fcdd 	bl	80003c0 <spi_lld_exchange.constprop.18>
 8005a06:	484e      	ldr	r0, [pc, #312]	; (8005b40 <Thread1+0x200>)
 8005a08:	f7ff fd6a 	bl	80054e0 <chThdSuspendS>
 8005a0c:	f387 8811 	msr	BASEPRI, r7
 8005a10:	f38b 8811 	msr	BASEPRI, fp
 8005a14:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8005a18:	890b      	ldrh	r3, [r1, #8]
 8005a1a:	6849      	ldr	r1, [r1, #4]
 8005a1c:	fa04 f303 	lsl.w	r3, r4, r3
 8005a20:	b29b      	uxth	r3, r3
 8005a22:	830b      	strh	r3, [r1, #24]
 8005a24:	f387 8811 	msr	BASEPRI, r7
 8005a28:	4b46      	ldr	r3, [pc, #280]	; (8005b44 <Thread1+0x204>)
 8005a2a:	785b      	ldrb	r3, [r3, #1]
 8005a2c:	702b      	strb	r3, [r5, #0]
 8005a2e:	f38b 8811 	msr	BASEPRI, fp
 8005a32:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8005a36:	890b      	ldrh	r3, [r1, #8]
 8005a38:	6849      	ldr	r1, [r1, #4]
 8005a3a:	fa04 f303 	lsl.w	r3, r4, r3
 8005a3e:	b29b      	uxth	r3, r3
 8005a40:	834b      	strh	r3, [r1, #26]
 8005a42:	f387 8811 	msr	BASEPRI, r7
 8005a46:	4a3d      	ldr	r2, [pc, #244]	; (8005b3c <Thread1+0x1fc>)
 8005a48:	f64f 73ab 	movw	r3, #65451	; 0xffab
 8005a4c:	8013      	strh	r3, [r2, #0]
 8005a4e:	f38b 8811 	msr	BASEPRI, fp
 8005a52:	9a01      	ldr	r2, [sp, #4]
 8005a54:	f888 2000 	strb.w	r2, [r8]
 8005a58:	f7fa fcb2 	bl	80003c0 <spi_lld_exchange.constprop.18>
 8005a5c:	4838      	ldr	r0, [pc, #224]	; (8005b40 <Thread1+0x200>)
 8005a5e:	f7ff fd3f 	bl	80054e0 <chThdSuspendS>
 8005a62:	f387 8811 	msr	BASEPRI, r7
 8005a66:	f38b 8811 	msr	BASEPRI, fp
 8005a6a:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8005a6e:	8913      	ldrh	r3, [r2, #8]
 8005a70:	6852      	ldr	r2, [r2, #4]
 8005a72:	fa04 f303 	lsl.w	r3, r4, r3
 8005a76:	b29b      	uxth	r3, r3
 8005a78:	8313      	strh	r3, [r2, #24]
 8005a7a:	f387 8811 	msr	BASEPRI, r7
 8005a7e:	4b31      	ldr	r3, [pc, #196]	; (8005b44 <Thread1+0x204>)
 8005a80:	785b      	ldrb	r3, [r3, #1]
 8005a82:	7033      	strb	r3, [r6, #0]
 8005a84:	f38b 8811 	msr	BASEPRI, fp
 8005a88:	f8da 2004 	ldr.w	r2, [sl, #4]
 8005a8c:	8913      	ldrh	r3, [r2, #8]
 8005a8e:	6852      	ldr	r2, [r2, #4]
 8005a90:	fa04 f303 	lsl.w	r3, r4, r3
 8005a94:	b29b      	uxth	r3, r3
 8005a96:	8353      	strh	r3, [r2, #26]
 8005a98:	f387 8811 	msr	BASEPRI, r7
 8005a9c:	2104      	movs	r1, #4
 8005a9e:	4a25      	ldr	r2, [pc, #148]	; (8005b34 <Thread1+0x1f4>)
 8005aa0:	4829      	ldr	r0, [pc, #164]	; (8005b48 <Thread1+0x208>)
 8005aa2:	f7ff fef5 	bl	8005890 <spiSend>
 8005aa6:	4828      	ldr	r0, [pc, #160]	; (8005b48 <Thread1+0x208>)
 8005aa8:	4a23      	ldr	r2, [pc, #140]	; (8005b38 <Thread1+0x1f8>)
 8005aaa:	2104      	movs	r1, #4
 8005aac:	f7ff fef0 	bl	8005890 <spiSend>
 8005ab0:	f38b 8811 	msr	BASEPRI, fp
 8005ab4:	f8da 3004 	ldr.w	r3, [sl, #4]
 8005ab8:	891a      	ldrh	r2, [r3, #8]
 8005aba:	685b      	ldr	r3, [r3, #4]
 8005abc:	4094      	lsls	r4, r2
 8005abe:	b2a4      	uxth	r4, r4
 8005ac0:	831c      	strh	r4, [r3, #24]
 8005ac2:	f387 8811 	msr	BASEPRI, r7
 8005ac6:	f995 1001 	ldrsb.w	r1, [r5, #1]
 8005aca:	f995 4000 	ldrsb.w	r4, [r5]
 8005ace:	f995 2002 	ldrsb.w	r2, [r5, #2]
 8005ad2:	f995 3003 	ldrsb.w	r3, [r5, #3]
 8005ad6:	440c      	add	r4, r1
 8005ad8:	4414      	add	r4, r2
 8005ada:	18e4      	adds	r4, r4, r3
 8005adc:	f996 1000 	ldrsb.w	r1, [r6]
 8005ae0:	f996 3001 	ldrsb.w	r3, [r6, #1]
 8005ae4:	f996 2002 	ldrsb.w	r2, [r6, #2]
 8005ae8:	4419      	add	r1, r3
 8005aea:	f996 3003 	ldrsb.w	r3, [r6, #3]
 8005aee:	4411      	add	r1, r2
 8005af0:	bf48      	it	mi
 8005af2:	3403      	addmi	r4, #3
 8005af4:	18c9      	adds	r1, r1, r3
 8005af6:	bf48      	it	mi
 8005af8:	3103      	addmi	r1, #3
 8005afa:	1089      	asrs	r1, r1, #2
 8005afc:	ea4f 04a4 	mov.w	r4, r4, asr #2
 8005b00:	f57f af42 	bpl.w	8005988 <Thread1+0x48>
 8005b04:	4249      	negs	r1, r1
 8005b06:	2000      	movs	r0, #0
 8005b08:	f7fa fbea 	bl	80002e0 <pwmEnableChannel.constprop.27>
 8005b0c:	2100      	movs	r1, #0
 8005b0e:	2002      	movs	r0, #2
 8005b10:	f7fa fbe6 	bl	80002e0 <pwmEnableChannel.constprop.27>
 8005b14:	2c00      	cmp	r4, #0
 8005b16:	f6bf af41 	bge.w	800599c <Thread1+0x5c>
 8005b1a:	4261      	negs	r1, r4
 8005b1c:	2001      	movs	r0, #1
 8005b1e:	f7fa fbdf 	bl	80002e0 <pwmEnableChannel.constprop.27>
 8005b22:	2100      	movs	r1, #0
 8005b24:	2003      	movs	r0, #3
 8005b26:	f7fa fbdb 	bl	80002e0 <pwmEnableChannel.constprop.27>
 8005b2a:	e73f      	b.n	80059ac <Thread1+0x6c>
 8005b2c:	20001370 	.word	0x20001370
 8005b30:	08008820 	.word	0x08008820
 8005b34:	20001ea8 	.word	0x20001ea8
 8005b38:	20001eac 	.word	0x20001eac
 8005b3c:	20001d1c 	.word	0x20001d1c
 8005b40:	20001164 	.word	0x20001164
 8005b44:	20001648 	.word	0x20001648
 8005b48:	2000118c 	.word	0x2000118c
 8005b4c:	2000115c 	.word	0x2000115c

08005b50 <chThdWait>:
 8005b50:	b538      	push	{r3, r4, r5, lr}
 8005b52:	4604      	mov	r4, r0
 8005b54:	2320      	movs	r3, #32
 8005b56:	f383 8811 	msr	BASEPRI, r3
 8005b5a:	7f03      	ldrb	r3, [r0, #28]
 8005b5c:	2b0f      	cmp	r3, #15
 8005b5e:	d007      	beq.n	8005b70 <chThdWait+0x20>
 8005b60:	4b08      	ldr	r3, [pc, #32]	; (8005b84 <chThdWait+0x34>)
 8005b62:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8005b64:	699b      	ldr	r3, [r3, #24]
 8005b66:	2009      	movs	r0, #9
 8005b68:	601a      	str	r2, [r3, #0]
 8005b6a:	6263      	str	r3, [r4, #36]	; 0x24
 8005b6c:	f7fd fc68 	bl	8003440 <chSchGoSleepS>
 8005b70:	6a25      	ldr	r5, [r4, #32]
 8005b72:	2300      	movs	r3, #0
 8005b74:	f383 8811 	msr	BASEPRI, r3
 8005b78:	4620      	mov	r0, r4
 8005b7a:	f7ff f891 	bl	8004ca0 <chThdRelease>
 8005b7e:	4628      	mov	r0, r5
 8005b80:	bd38      	pop	{r3, r4, r5, pc}
 8005b82:	bf00      	nop
 8005b84:	20001370 	.word	0x20001370
	...

08005b90 <cmd_test>:
 8005b90:	2900      	cmp	r1, #0
 8005b92:	dd02      	ble.n	8005b9a <cmd_test+0xa>
 8005b94:	490e      	ldr	r1, [pc, #56]	; (8005bd0 <cmd_test+0x40>)
 8005b96:	f7fc bc13 	b.w	80023c0 <chprintf.lto_priv.88>
 8005b9a:	b510      	push	{r4, lr}
 8005b9c:	4a0d      	ldr	r2, [pc, #52]	; (8005bd4 <cmd_test+0x44>)
 8005b9e:	4b0e      	ldr	r3, [pc, #56]	; (8005bd8 <cmd_test+0x48>)
 8005ba0:	6992      	ldr	r2, [r2, #24]
 8005ba2:	b082      	sub	sp, #8
 8005ba4:	4604      	mov	r4, r0
 8005ba6:	6892      	ldr	r2, [r2, #8]
 8005ba8:	9000      	str	r0, [sp, #0]
 8005baa:	f44f 71e4 	mov.w	r1, #456	; 0x1c8
 8005bae:	2000      	movs	r0, #0
 8005bb0:	f7ff fa8e 	bl	80050d0 <chThdCreateFromHeap>
 8005bb4:	b120      	cbz	r0, 8005bc0 <cmd_test+0x30>
 8005bb6:	b002      	add	sp, #8
 8005bb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005bbc:	f7ff bfc8 	b.w	8005b50 <chThdWait>
 8005bc0:	4906      	ldr	r1, [pc, #24]	; (8005bdc <cmd_test+0x4c>)
 8005bc2:	4620      	mov	r0, r4
 8005bc4:	b002      	add	sp, #8
 8005bc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005bca:	f7fc bbf9 	b.w	80023c0 <chprintf.lto_priv.88>
 8005bce:	bf00      	nop
 8005bd0:	08008ce0 	.word	0x08008ce0
 8005bd4:	20001370 	.word	0x20001370
 8005bd8:	080074f1 	.word	0x080074f1
 8005bdc:	08008cf0 	.word	0x08008cf0

08005be0 <bmk5_execute>:
 8005be0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005be4:	4b15      	ldr	r3, [pc, #84]	; (8005c3c <bmk5_execute+0x5c>)
 8005be6:	f8df 9064 	ldr.w	r9, [pc, #100]	; 8005c4c <bmk5_execute+0x6c>
 8005bea:	699b      	ldr	r3, [r3, #24]
 8005bec:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8005c50 <bmk5_execute+0x70>
 8005bf0:	689d      	ldr	r5, [r3, #8]
 8005bf2:	4f13      	ldr	r7, [pc, #76]	; (8005c40 <bmk5_execute+0x60>)
 8005bf4:	b083      	sub	sp, #12
 8005bf6:	f7fe fbc3 	bl	8004380 <test_wait_tick>
 8005bfa:	f7fc f9d9 	bl	8001fb0 <test_start_timer.constprop.6>
 8005bfe:	2400      	movs	r4, #0
 8005c00:	3d01      	subs	r5, #1
 8005c02:	4626      	mov	r6, r4
 8005c04:	4643      	mov	r3, r8
 8005c06:	462a      	mov	r2, r5
 8005c08:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005c0c:	9600      	str	r6, [sp, #0]
 8005c0e:	4638      	mov	r0, r7
 8005c10:	f7fd fbde 	bl	80033d0 <chThdCreateStatic>
 8005c14:	f7ff ff9c 	bl	8005b50 <chThdWait>
 8005c18:	f899 3000 	ldrb.w	r3, [r9]
 8005c1c:	3401      	adds	r4, #1
 8005c1e:	2b00      	cmp	r3, #0
 8005c20:	d0f0      	beq.n	8005c04 <bmk5_execute+0x24>
 8005c22:	4808      	ldr	r0, [pc, #32]	; (8005c44 <bmk5_execute+0x64>)
 8005c24:	f7fa fed4 	bl	80009d0 <test_print>
 8005c28:	4620      	mov	r0, r4
 8005c2a:	f7fa fdd9 	bl	80007e0 <test_printn>
 8005c2e:	4806      	ldr	r0, [pc, #24]	; (8005c48 <bmk5_execute+0x68>)
 8005c30:	b003      	add	sp, #12
 8005c32:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005c36:	f7fa beab 	b.w	8000990 <test_println>
 8005c3a:	bf00      	nop
 8005c3c:	20001370 	.word	0x20001370
 8005c40:	20001660 	.word	0x20001660
 8005c44:	08008930 	.word	0x08008930
 8005c48:	08008a30 	.word	0x08008a30
 8005c4c:	20001cf0 	.word	0x20001cf0
 8005c50:	08008551 	.word	0x08008551
	...

08005c60 <test_wait_threads>:
 8005c60:	b570      	push	{r4, r5, r6, lr}
 8005c62:	4c07      	ldr	r4, [pc, #28]	; (8005c80 <test_wait_threads+0x20>)
 8005c64:	2600      	movs	r6, #0
 8005c66:	f104 0514 	add.w	r5, r4, #20
 8005c6a:	f854 0b04 	ldr.w	r0, [r4], #4
 8005c6e:	b118      	cbz	r0, 8005c78 <test_wait_threads+0x18>
 8005c70:	f7ff ff6e 	bl	8005b50 <chThdWait>
 8005c74:	f844 6c04 	str.w	r6, [r4, #-4]
 8005c78:	42ac      	cmp	r4, r5
 8005c7a:	d1f6      	bne.n	8005c6a <test_wait_threads+0xa>
 8005c7c:	bd70      	pop	{r4, r5, r6, pc}
 8005c7e:	bf00      	nop
 8005c80:	20001cf4 	.word	0x20001cf4
	...

08005c90 <bmk8_execute>:
 8005c90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005c94:	b084      	sub	sp, #16
 8005c96:	ac04      	add	r4, sp, #16
 8005c98:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8005d68 <bmk8_execute+0xd8>
 8005c9c:	4f2d      	ldr	r7, [pc, #180]	; (8005d54 <bmk8_execute+0xc4>)
 8005c9e:	4e2e      	ldr	r6, [pc, #184]	; (8005d58 <bmk8_execute+0xc8>)
 8005ca0:	4d2e      	ldr	r5, [pc, #184]	; (8005d5c <bmk8_execute+0xcc>)
 8005ca2:	2300      	movs	r3, #0
 8005ca4:	f844 3d04 	str.w	r3, [r4, #-4]!
 8005ca8:	f7fe fb6a 	bl	8004380 <test_wait_tick>
 8005cac:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8005cb0:	689a      	ldr	r2, [r3, #8]
 8005cb2:	9400      	str	r4, [sp, #0]
 8005cb4:	463b      	mov	r3, r7
 8005cb6:	3a01      	subs	r2, #1
 8005cb8:	4630      	mov	r0, r6
 8005cba:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005cbe:	f7fd fb87 	bl	80033d0 <chThdCreateStatic>
 8005cc2:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8005cc6:	6028      	str	r0, [r5, #0]
 8005cc8:	689a      	ldr	r2, [r3, #8]
 8005cca:	9400      	str	r4, [sp, #0]
 8005ccc:	463b      	mov	r3, r7
 8005cce:	3a01      	subs	r2, #1
 8005cd0:	f506 70a4 	add.w	r0, r6, #328	; 0x148
 8005cd4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005cd8:	f7fd fb7a 	bl	80033d0 <chThdCreateStatic>
 8005cdc:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8005ce0:	6068      	str	r0, [r5, #4]
 8005ce2:	689a      	ldr	r2, [r3, #8]
 8005ce4:	9400      	str	r4, [sp, #0]
 8005ce6:	463b      	mov	r3, r7
 8005ce8:	3a01      	subs	r2, #1
 8005cea:	f506 7024 	add.w	r0, r6, #656	; 0x290
 8005cee:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005cf2:	f7fd fb6d 	bl	80033d0 <chThdCreateStatic>
 8005cf6:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8005cfa:	60a8      	str	r0, [r5, #8]
 8005cfc:	689a      	ldr	r2, [r3, #8]
 8005cfe:	9400      	str	r4, [sp, #0]
 8005d00:	463b      	mov	r3, r7
 8005d02:	3a01      	subs	r2, #1
 8005d04:	f506 7076 	add.w	r0, r6, #984	; 0x3d8
 8005d08:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005d0c:	f7fd fb60 	bl	80033d0 <chThdCreateStatic>
 8005d10:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8005d14:	60e8      	str	r0, [r5, #12]
 8005d16:	689a      	ldr	r2, [r3, #8]
 8005d18:	9400      	str	r4, [sp, #0]
 8005d1a:	3a01      	subs	r2, #1
 8005d1c:	463b      	mov	r3, r7
 8005d1e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005d22:	f506 60a4 	add.w	r0, r6, #1312	; 0x520
 8005d26:	f7fd fb53 	bl	80033d0 <chThdCreateStatic>
 8005d2a:	6128      	str	r0, [r5, #16]
 8005d2c:	f242 7010 	movw	r0, #10000	; 0x2710
 8005d30:	f7fe fa66 	bl	8004200 <chThdSleep>
 8005d34:	f7fa fd7c 	bl	8000830 <test_terminate_threads>
 8005d38:	f7ff ff92 	bl	8005c60 <test_wait_threads>
 8005d3c:	4808      	ldr	r0, [pc, #32]	; (8005d60 <bmk8_execute+0xd0>)
 8005d3e:	f7fa fe47 	bl	80009d0 <test_print>
 8005d42:	9803      	ldr	r0, [sp, #12]
 8005d44:	f7fa fd4c 	bl	80007e0 <test_printn>
 8005d48:	4806      	ldr	r0, [pc, #24]	; (8005d64 <bmk8_execute+0xd4>)
 8005d4a:	f7fa fe21 	bl	8000990 <test_println>
 8005d4e:	b004      	add	sp, #16
 8005d50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005d54:	08002f81 	.word	0x08002f81
 8005d58:	20001660 	.word	0x20001660
 8005d5c:	20001cf4 	.word	0x20001cf4
 8005d60:	08008930 	.word	0x08008930
 8005d64:	08008a60 	.word	0x08008a60
 8005d68:	20001370 	.word	0x20001370
 8005d6c:	00000000 	.word	0x00000000

08005d70 <bmk7_execute>:
 8005d70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005d74:	4e3a      	ldr	r6, [pc, #232]	; (8005e60 <bmk7_execute+0xf0>)
 8005d76:	4b3b      	ldr	r3, [pc, #236]	; (8005e64 <bmk7_execute+0xf4>)
 8005d78:	69b2      	ldr	r2, [r6, #24]
 8005d7a:	483b      	ldr	r0, [pc, #236]	; (8005e68 <bmk7_execute+0xf8>)
 8005d7c:	6892      	ldr	r2, [r2, #8]
 8005d7e:	4d3b      	ldr	r5, [pc, #236]	; (8005e6c <bmk7_execute+0xfc>)
 8005d80:	f8df 810c 	ldr.w	r8, [pc, #268]	; 8005e90 <bmk7_execute+0x120>
 8005d84:	4f3a      	ldr	r7, [pc, #232]	; (8005e70 <bmk7_execute+0x100>)
 8005d86:	b082      	sub	sp, #8
 8005d88:	2400      	movs	r4, #0
 8005d8a:	3205      	adds	r2, #5
 8005d8c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005d90:	9400      	str	r4, [sp, #0]
 8005d92:	f7fd fb1d 	bl	80033d0 <chThdCreateStatic>
 8005d96:	69b3      	ldr	r3, [r6, #24]
 8005d98:	6028      	str	r0, [r5, #0]
 8005d9a:	689a      	ldr	r2, [r3, #8]
 8005d9c:	4835      	ldr	r0, [pc, #212]	; (8005e74 <bmk7_execute+0x104>)
 8005d9e:	4b31      	ldr	r3, [pc, #196]	; (8005e64 <bmk7_execute+0xf4>)
 8005da0:	9400      	str	r4, [sp, #0]
 8005da2:	3204      	adds	r2, #4
 8005da4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005da8:	f7fd fb12 	bl	80033d0 <chThdCreateStatic>
 8005dac:	69b3      	ldr	r3, [r6, #24]
 8005dae:	6068      	str	r0, [r5, #4]
 8005db0:	689a      	ldr	r2, [r3, #8]
 8005db2:	4831      	ldr	r0, [pc, #196]	; (8005e78 <bmk7_execute+0x108>)
 8005db4:	4b2b      	ldr	r3, [pc, #172]	; (8005e64 <bmk7_execute+0xf4>)
 8005db6:	9400      	str	r4, [sp, #0]
 8005db8:	3203      	adds	r2, #3
 8005dba:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005dbe:	f7fd fb07 	bl	80033d0 <chThdCreateStatic>
 8005dc2:	69b3      	ldr	r3, [r6, #24]
 8005dc4:	60a8      	str	r0, [r5, #8]
 8005dc6:	689a      	ldr	r2, [r3, #8]
 8005dc8:	482c      	ldr	r0, [pc, #176]	; (8005e7c <bmk7_execute+0x10c>)
 8005dca:	4b26      	ldr	r3, [pc, #152]	; (8005e64 <bmk7_execute+0xf4>)
 8005dcc:	9400      	str	r4, [sp, #0]
 8005dce:	3202      	adds	r2, #2
 8005dd0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005dd4:	f7fd fafc 	bl	80033d0 <chThdCreateStatic>
 8005dd8:	69b3      	ldr	r3, [r6, #24]
 8005dda:	60e8      	str	r0, [r5, #12]
 8005ddc:	689a      	ldr	r2, [r3, #8]
 8005dde:	4828      	ldr	r0, [pc, #160]	; (8005e80 <bmk7_execute+0x110>)
 8005de0:	4b20      	ldr	r3, [pc, #128]	; (8005e64 <bmk7_execute+0xf4>)
 8005de2:	9400      	str	r4, [sp, #0]
 8005de4:	3201      	adds	r2, #1
 8005de6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005dea:	f7fd faf1 	bl	80033d0 <chThdCreateStatic>
 8005dee:	6128      	str	r0, [r5, #16]
 8005df0:	f7fe fac6 	bl	8004380 <test_wait_tick>
 8005df4:	f7fc f8dc 	bl	8001fb0 <test_start_timer.constprop.6>
 8005df8:	4625      	mov	r5, r4
 8005dfa:	2620      	movs	r6, #32
 8005dfc:	f386 8811 	msr	BASEPRI, r6
 8005e00:	2100      	movs	r1, #0
 8005e02:	4638      	mov	r0, r7
 8005e04:	f7fc f82c 	bl	8001e60 <chSemResetI>
 8005e08:	f7fd f8f2 	bl	8002ff0 <chSchRescheduleS>
 8005e0c:	f385 8811 	msr	BASEPRI, r5
 8005e10:	f898 3000 	ldrb.w	r3, [r8]
 8005e14:	3401      	adds	r4, #1
 8005e16:	2b00      	cmp	r3, #0
 8005e18:	d0f0      	beq.n	8005dfc <bmk7_execute+0x8c>
 8005e1a:	f7fa fd09 	bl	8000830 <test_terminate_threads>
 8005e1e:	f386 8811 	msr	BASEPRI, r6
 8005e22:	2100      	movs	r1, #0
 8005e24:	4812      	ldr	r0, [pc, #72]	; (8005e70 <bmk7_execute+0x100>)
 8005e26:	f7fc f81b 	bl	8001e60 <chSemResetI>
 8005e2a:	f7fd f8e1 	bl	8002ff0 <chSchRescheduleS>
 8005e2e:	f385 8811 	msr	BASEPRI, r5
 8005e32:	f7ff ff15 	bl	8005c60 <test_wait_threads>
 8005e36:	4813      	ldr	r0, [pc, #76]	; (8005e84 <bmk7_execute+0x114>)
 8005e38:	f7fa fdca 	bl	80009d0 <test_print>
 8005e3c:	4620      	mov	r0, r4
 8005e3e:	f7fa fccf 	bl	80007e0 <test_printn>
 8005e42:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8005e46:	4810      	ldr	r0, [pc, #64]	; (8005e88 <bmk7_execute+0x118>)
 8005e48:	f7fa fdc2 	bl	80009d0 <test_print>
 8005e4c:	0060      	lsls	r0, r4, #1
 8005e4e:	f7fa fcc7 	bl	80007e0 <test_printn>
 8005e52:	480e      	ldr	r0, [pc, #56]	; (8005e8c <bmk7_execute+0x11c>)
 8005e54:	b002      	add	sp, #8
 8005e56:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005e5a:	f7fa bd99 	b.w	8000990 <test_println>
 8005e5e:	bf00      	nop
 8005e60:	20001370 	.word	0x20001370
 8005e64:	08005311 	.word	0x08005311
 8005e68:	20001660 	.word	0x20001660
 8005e6c:	20001cf4 	.word	0x20001cf4
 8005e70:	2000164c 	.word	0x2000164c
 8005e74:	200017a8 	.word	0x200017a8
 8005e78:	200018f0 	.word	0x200018f0
 8005e7c:	20001a38 	.word	0x20001a38
 8005e80:	20001b80 	.word	0x20001b80
 8005e84:	08008930 	.word	0x08008930
 8005e88:	08008a40 	.word	0x08008a40
 8005e8c:	08008a60 	.word	0x08008a60
 8005e90:	20001cf0 	.word	0x20001cf0
	...

08005ea0 <bmk4_execute>:
 8005ea0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005ea4:	4a23      	ldr	r2, [pc, #140]	; (8005f34 <bmk4_execute+0x94>)
 8005ea6:	4b24      	ldr	r3, [pc, #144]	; (8005f38 <bmk4_execute+0x98>)
 8005ea8:	6992      	ldr	r2, [r2, #24]
 8005eaa:	4824      	ldr	r0, [pc, #144]	; (8005f3c <bmk4_execute+0x9c>)
 8005eac:	6892      	ldr	r2, [r2, #8]
 8005eae:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8005f4c <bmk4_execute+0xac>
 8005eb2:	b082      	sub	sp, #8
 8005eb4:	2500      	movs	r5, #0
 8005eb6:	3201      	adds	r2, #1
 8005eb8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005ebc:	9500      	str	r5, [sp, #0]
 8005ebe:	f7fd fa87 	bl	80033d0 <chThdCreateStatic>
 8005ec2:	4b1f      	ldr	r3, [pc, #124]	; (8005f40 <bmk4_execute+0xa0>)
 8005ec4:	4604      	mov	r4, r0
 8005ec6:	6018      	str	r0, [r3, #0]
 8005ec8:	f7fe fa5a 	bl	8004380 <test_wait_tick>
 8005ecc:	f7fc f870 	bl	8001fb0 <test_start_timer.constprop.6>
 8005ed0:	462e      	mov	r6, r5
 8005ed2:	2720      	movs	r7, #32
 8005ed4:	f387 8811 	msr	BASEPRI, r7
 8005ed8:	2100      	movs	r1, #0
 8005eda:	4620      	mov	r0, r4
 8005edc:	f7fd f9b8 	bl	8003250 <chSchWakeupS>
 8005ee0:	4620      	mov	r0, r4
 8005ee2:	2100      	movs	r1, #0
 8005ee4:	f7fd f9b4 	bl	8003250 <chSchWakeupS>
 8005ee8:	4620      	mov	r0, r4
 8005eea:	2100      	movs	r1, #0
 8005eec:	f7fd f9b0 	bl	8003250 <chSchWakeupS>
 8005ef0:	4620      	mov	r0, r4
 8005ef2:	2100      	movs	r1, #0
 8005ef4:	f7fd f9ac 	bl	8003250 <chSchWakeupS>
 8005ef8:	f386 8811 	msr	BASEPRI, r6
 8005efc:	f898 3000 	ldrb.w	r3, [r8]
 8005f00:	3504      	adds	r5, #4
 8005f02:	2b00      	cmp	r3, #0
 8005f04:	d0e6      	beq.n	8005ed4 <bmk4_execute+0x34>
 8005f06:	f387 8811 	msr	BASEPRI, r7
 8005f0a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005f0e:	4620      	mov	r0, r4
 8005f10:	f7fd f99e 	bl	8003250 <chSchWakeupS>
 8005f14:	f386 8811 	msr	BASEPRI, r6
 8005f18:	f7ff fea2 	bl	8005c60 <test_wait_threads>
 8005f1c:	4809      	ldr	r0, [pc, #36]	; (8005f44 <bmk4_execute+0xa4>)
 8005f1e:	f7fa fd57 	bl	80009d0 <test_print>
 8005f22:	0068      	lsls	r0, r5, #1
 8005f24:	f7fa fc5c 	bl	80007e0 <test_printn>
 8005f28:	4807      	ldr	r0, [pc, #28]	; (8005f48 <bmk4_execute+0xa8>)
 8005f2a:	b002      	add	sp, #8
 8005f2c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005f30:	f7fa bd2e 	b.w	8000990 <test_println>
 8005f34:	20001370 	.word	0x20001370
 8005f38:	080035e1 	.word	0x080035e1
 8005f3c:	20001660 	.word	0x20001660
 8005f40:	20001cf4 	.word	0x20001cf4
 8005f44:	08008930 	.word	0x08008930
 8005f48:	08008a60 	.word	0x08008a60
 8005f4c:	20001cf0 	.word	0x20001cf0

08005f50 <bmk3_execute>:
 8005f50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005f54:	4f2c      	ldr	r7, [pc, #176]	; (8006008 <bmk3_execute+0xb8>)
 8005f56:	4d2d      	ldr	r5, [pc, #180]	; (800600c <bmk3_execute+0xbc>)
 8005f58:	69ba      	ldr	r2, [r7, #24]
 8005f5a:	4b2d      	ldr	r3, [pc, #180]	; (8006010 <bmk3_execute+0xc0>)
 8005f5c:	6892      	ldr	r2, [r2, #8]
 8005f5e:	4c2d      	ldr	r4, [pc, #180]	; (8006014 <bmk3_execute+0xc4>)
 8005f60:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8006024 <bmk3_execute+0xd4>
 8005f64:	b082      	sub	sp, #8
 8005f66:	2600      	movs	r6, #0
 8005f68:	3201      	adds	r2, #1
 8005f6a:	4628      	mov	r0, r5
 8005f6c:	9600      	str	r6, [sp, #0]
 8005f6e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005f72:	f7fd fa2d 	bl	80033d0 <chThdCreateStatic>
 8005f76:	69bb      	ldr	r3, [r7, #24]
 8005f78:	6020      	str	r0, [r4, #0]
 8005f7a:	689a      	ldr	r2, [r3, #8]
 8005f7c:	9600      	str	r6, [sp, #0]
 8005f7e:	4643      	mov	r3, r8
 8005f80:	3a02      	subs	r2, #2
 8005f82:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8005f86:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005f8a:	f7fd fa21 	bl	80033d0 <chThdCreateStatic>
 8005f8e:	69bb      	ldr	r3, [r7, #24]
 8005f90:	6060      	str	r0, [r4, #4]
 8005f92:	689a      	ldr	r2, [r3, #8]
 8005f94:	9600      	str	r6, [sp, #0]
 8005f96:	4643      	mov	r3, r8
 8005f98:	3a03      	subs	r2, #3
 8005f9a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8005f9e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005fa2:	f7fd fa15 	bl	80033d0 <chThdCreateStatic>
 8005fa6:	69bb      	ldr	r3, [r7, #24]
 8005fa8:	60a0      	str	r0, [r4, #8]
 8005faa:	689a      	ldr	r2, [r3, #8]
 8005fac:	9600      	str	r6, [sp, #0]
 8005fae:	4643      	mov	r3, r8
 8005fb0:	3a04      	subs	r2, #4
 8005fb2:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8005fb6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005fba:	f7fd fa09 	bl	80033d0 <chThdCreateStatic>
 8005fbe:	69bb      	ldr	r3, [r7, #24]
 8005fc0:	60e0      	str	r0, [r4, #12]
 8005fc2:	689a      	ldr	r2, [r3, #8]
 8005fc4:	9600      	str	r6, [sp, #0]
 8005fc6:	3a05      	subs	r2, #5
 8005fc8:	4643      	mov	r3, r8
 8005fca:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005fce:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8005fd2:	f7fd f9fd 	bl	80033d0 <chThdCreateStatic>
 8005fd6:	6120      	str	r0, [r4, #16]
 8005fd8:	6820      	ldr	r0, [r4, #0]
 8005fda:	f7fe fba9 	bl	8004730 <msg_loop_test>
 8005fde:	4604      	mov	r4, r0
 8005fe0:	f7ff fe3e 	bl	8005c60 <test_wait_threads>
 8005fe4:	480c      	ldr	r0, [pc, #48]	; (8006018 <bmk3_execute+0xc8>)
 8005fe6:	f7fa fcf3 	bl	80009d0 <test_print>
 8005fea:	4620      	mov	r0, r4
 8005fec:	f7fa fbf8 	bl	80007e0 <test_printn>
 8005ff0:	480a      	ldr	r0, [pc, #40]	; (800601c <bmk3_execute+0xcc>)
 8005ff2:	f7fa fced 	bl	80009d0 <test_print>
 8005ff6:	0060      	lsls	r0, r4, #1
 8005ff8:	f7fa fbf2 	bl	80007e0 <test_printn>
 8005ffc:	4808      	ldr	r0, [pc, #32]	; (8006020 <bmk3_execute+0xd0>)
 8005ffe:	b002      	add	sp, #8
 8006000:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006004:	f7fa bcc4 	b.w	8000990 <test_println>
 8006008:	20001370 	.word	0x20001370
 800600c:	20001660 	.word	0x20001660
 8006010:	08004631 	.word	0x08004631
 8006014:	20001cf4 	.word	0x20001cf4
 8006018:	08008930 	.word	0x08008930
 800601c:	08008a20 	.word	0x08008a20
 8006020:	08008a60 	.word	0x08008a60
 8006024:	08008551 	.word	0x08008551
	...

08006030 <bmk2_execute>:
 8006030:	b510      	push	{r4, lr}
 8006032:	4a13      	ldr	r2, [pc, #76]	; (8006080 <bmk2_execute+0x50>)
 8006034:	4b13      	ldr	r3, [pc, #76]	; (8006084 <bmk2_execute+0x54>)
 8006036:	6992      	ldr	r2, [r2, #24]
 8006038:	4813      	ldr	r0, [pc, #76]	; (8006088 <bmk2_execute+0x58>)
 800603a:	6892      	ldr	r2, [r2, #8]
 800603c:	b082      	sub	sp, #8
 800603e:	2100      	movs	r1, #0
 8006040:	3201      	adds	r2, #1
 8006042:	9100      	str	r1, [sp, #0]
 8006044:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006048:	f7fd f9c2 	bl	80033d0 <chThdCreateStatic>
 800604c:	4b0f      	ldr	r3, [pc, #60]	; (800608c <bmk2_execute+0x5c>)
 800604e:	6018      	str	r0, [r3, #0]
 8006050:	f7fe fb6e 	bl	8004730 <msg_loop_test>
 8006054:	4604      	mov	r4, r0
 8006056:	f7ff fe03 	bl	8005c60 <test_wait_threads>
 800605a:	480d      	ldr	r0, [pc, #52]	; (8006090 <bmk2_execute+0x60>)
 800605c:	f7fa fcb8 	bl	80009d0 <test_print>
 8006060:	4620      	mov	r0, r4
 8006062:	f7fa fbbd 	bl	80007e0 <test_printn>
 8006066:	480b      	ldr	r0, [pc, #44]	; (8006094 <bmk2_execute+0x64>)
 8006068:	f7fa fcb2 	bl	80009d0 <test_print>
 800606c:	0060      	lsls	r0, r4, #1
 800606e:	f7fa fbb7 	bl	80007e0 <test_printn>
 8006072:	4809      	ldr	r0, [pc, #36]	; (8006098 <bmk2_execute+0x68>)
 8006074:	b002      	add	sp, #8
 8006076:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800607a:	f7fa bc89 	b.w	8000990 <test_println>
 800607e:	bf00      	nop
 8006080:	20001370 	.word	0x20001370
 8006084:	08004631 	.word	0x08004631
 8006088:	20001660 	.word	0x20001660
 800608c:	20001cf4 	.word	0x20001cf4
 8006090:	08008930 	.word	0x08008930
 8006094:	08008a20 	.word	0x08008a20
 8006098:	08008a60 	.word	0x08008a60
 800609c:	00000000 	.word	0x00000000

080060a0 <bmk1_execute>:
 80060a0:	b510      	push	{r4, lr}
 80060a2:	4a13      	ldr	r2, [pc, #76]	; (80060f0 <bmk1_execute+0x50>)
 80060a4:	4b13      	ldr	r3, [pc, #76]	; (80060f4 <bmk1_execute+0x54>)
 80060a6:	6992      	ldr	r2, [r2, #24]
 80060a8:	4813      	ldr	r0, [pc, #76]	; (80060f8 <bmk1_execute+0x58>)
 80060aa:	6892      	ldr	r2, [r2, #8]
 80060ac:	b082      	sub	sp, #8
 80060ae:	2100      	movs	r1, #0
 80060b0:	3a01      	subs	r2, #1
 80060b2:	9100      	str	r1, [sp, #0]
 80060b4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80060b8:	f7fd f98a 	bl	80033d0 <chThdCreateStatic>
 80060bc:	4b0f      	ldr	r3, [pc, #60]	; (80060fc <bmk1_execute+0x5c>)
 80060be:	6018      	str	r0, [r3, #0]
 80060c0:	f7fe fb36 	bl	8004730 <msg_loop_test>
 80060c4:	4604      	mov	r4, r0
 80060c6:	f7ff fdcb 	bl	8005c60 <test_wait_threads>
 80060ca:	480d      	ldr	r0, [pc, #52]	; (8006100 <bmk1_execute+0x60>)
 80060cc:	f7fa fc80 	bl	80009d0 <test_print>
 80060d0:	4620      	mov	r0, r4
 80060d2:	f7fa fb85 	bl	80007e0 <test_printn>
 80060d6:	480b      	ldr	r0, [pc, #44]	; (8006104 <bmk1_execute+0x64>)
 80060d8:	f7fa fc7a 	bl	80009d0 <test_print>
 80060dc:	0060      	lsls	r0, r4, #1
 80060de:	f7fa fb7f 	bl	80007e0 <test_printn>
 80060e2:	4809      	ldr	r0, [pc, #36]	; (8006108 <bmk1_execute+0x68>)
 80060e4:	b002      	add	sp, #8
 80060e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80060ea:	f7fa bc51 	b.w	8000990 <test_println>
 80060ee:	bf00      	nop
 80060f0:	20001370 	.word	0x20001370
 80060f4:	08004631 	.word	0x08004631
 80060f8:	20001660 	.word	0x20001660
 80060fc:	20001cf4 	.word	0x20001cf4
 8006100:	08008930 	.word	0x08008930
 8006104:	08008a20 	.word	0x08008a20
 8006108:	08008a60 	.word	0x08008a60
 800610c:	00000000 	.word	0x00000000

08006110 <queues2_execute>:
 8006110:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006114:	2320      	movs	r3, #32
 8006116:	b083      	sub	sp, #12
 8006118:	f383 8811 	msr	BASEPRI, r3
 800611c:	4d84      	ldr	r5, [pc, #528]	; (8006330 <queues2_execute+0x220>)
 800611e:	e9d5 3205 	ldrd	r3, r2, [r5, #20]
 8006122:	429a      	cmp	r2, r3
 8006124:	d041      	beq.n	80061aa <queues2_execute+0x9a>
 8006126:	2100      	movs	r1, #0
 8006128:	2001      	movs	r0, #1
 800612a:	f7fa fbe1 	bl	80008f0 <_test_assert>
 800612e:	bbb0      	cbnz	r0, 800619e <queues2_execute+0x8e>
 8006130:	f380 8811 	msr	BASEPRI, r0
 8006134:	4e7e      	ldr	r6, [pc, #504]	; (8006330 <queues2_execute+0x220>)
 8006136:	2441      	movs	r4, #65	; 0x41
 8006138:	4621      	mov	r1, r4
 800613a:	3401      	adds	r4, #1
 800613c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006140:	4630      	mov	r0, r6
 8006142:	b2e4      	uxtb	r4, r4
 8006144:	f7fd ff4c 	bl	8003fe0 <chOQPutTimeout>
 8006148:	2c45      	cmp	r4, #69	; 0x45
 800614a:	d1f5      	bne.n	8006138 <queues2_execute+0x28>
 800614c:	2620      	movs	r6, #32
 800614e:	f386 8811 	msr	BASEPRI, r6
 8006152:	68a9      	ldr	r1, [r5, #8]
 8006154:	fab1 f181 	clz	r1, r1
 8006158:	0949      	lsrs	r1, r1, #5
 800615a:	2002      	movs	r0, #2
 800615c:	f7fa fbc8 	bl	80008f0 <_test_assert>
 8006160:	4607      	mov	r7, r0
 8006162:	b9e0      	cbnz	r0, 800619e <queues2_execute+0x8e>
 8006164:	f380 8811 	msr	BASEPRI, r0
 8006168:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 8006330 <queues2_execute+0x220>
 800616c:	4680      	mov	r8, r0
 800616e:	2404      	movs	r4, #4
 8006170:	f386 8811 	msr	BASEPRI, r6
 8006174:	4648      	mov	r0, r9
 8006176:	f7fb fc53 	bl	8001a20 <chOQGetI>
 800617a:	f388 8811 	msr	BASEPRI, r8
 800617e:	b2c0      	uxtb	r0, r0
 8006180:	f7fa fbce 	bl	8000920 <test_emit_token>
 8006184:	3c01      	subs	r4, #1
 8006186:	d1f3      	bne.n	8006170 <queues2_execute+0x60>
 8006188:	f386 8811 	msr	BASEPRI, r6
 800618c:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 8006190:	429a      	cmp	r2, r3
 8006192:	d029      	beq.n	80061e8 <queues2_execute+0xd8>
 8006194:	4639      	mov	r1, r7
 8006196:	2003      	movs	r0, #3
 8006198:	f7fa fbaa 	bl	80008f0 <_test_assert>
 800619c:	b150      	cbz	r0, 80061b4 <queues2_execute+0xa4>
 800619e:	2300      	movs	r3, #0
 80061a0:	f383 8811 	msr	BASEPRI, r3
 80061a4:	b003      	add	sp, #12
 80061a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80061aa:	68a9      	ldr	r1, [r5, #8]
 80061ac:	3100      	adds	r1, #0
 80061ae:	bf18      	it	ne
 80061b0:	2101      	movne	r1, #1
 80061b2:	e7b9      	b.n	8006128 <queues2_execute+0x18>
 80061b4:	f380 8811 	msr	BASEPRI, r0
 80061b8:	495e      	ldr	r1, [pc, #376]	; (8006334 <queues2_execute+0x224>)
 80061ba:	2004      	movs	r0, #4
 80061bc:	f7fa fb70 	bl	80008a0 <_test_assert_sequence>
 80061c0:	4604      	mov	r4, r0
 80061c2:	2800      	cmp	r0, #0
 80061c4:	d1ee      	bne.n	80061a4 <queues2_execute+0x94>
 80061c6:	2620      	movs	r6, #32
 80061c8:	f386 8811 	msr	BASEPRI, r6
 80061cc:	4858      	ldr	r0, [pc, #352]	; (8006330 <queues2_execute+0x220>)
 80061ce:	f7fb fc27 	bl	8001a20 <chOQGetI>
 80061d2:	3003      	adds	r0, #3
 80061d4:	bf14      	ite	ne
 80061d6:	2100      	movne	r1, #0
 80061d8:	2101      	moveq	r1, #1
 80061da:	2005      	movs	r0, #5
 80061dc:	f7fa fb88 	bl	80008f0 <_test_assert>
 80061e0:	b138      	cbz	r0, 80061f2 <queues2_execute+0xe2>
 80061e2:	f384 8811 	msr	BASEPRI, r4
 80061e6:	e7dd      	b.n	80061a4 <queues2_execute+0x94>
 80061e8:	68af      	ldr	r7, [r5, #8]
 80061ea:	3700      	adds	r7, #0
 80061ec:	bf18      	it	ne
 80061ee:	2701      	movne	r7, #1
 80061f0:	e7d0      	b.n	8006194 <queues2_execute+0x84>
 80061f2:	f380 8811 	msr	BASEPRI, r0
 80061f6:	2208      	movs	r2, #8
 80061f8:	4603      	mov	r3, r0
 80061fa:	494f      	ldr	r1, [pc, #316]	; (8006338 <queues2_execute+0x228>)
 80061fc:	484c      	ldr	r0, [pc, #304]	; (8006330 <queues2_execute+0x220>)
 80061fe:	f7fd fe87 	bl	8003f10 <chOQWriteTimeout>
 8006202:	f1a0 0104 	sub.w	r1, r0, #4
 8006206:	fab1 f181 	clz	r1, r1
 800620a:	0949      	lsrs	r1, r1, #5
 800620c:	2006      	movs	r0, #6
 800620e:	f7fa fb6f 	bl	80008f0 <_test_assert>
 8006212:	4604      	mov	r4, r0
 8006214:	2800      	cmp	r0, #0
 8006216:	d1c5      	bne.n	80061a4 <queues2_execute+0x94>
 8006218:	f386 8811 	msr	BASEPRI, r6
 800621c:	68a9      	ldr	r1, [r5, #8]
 800621e:	fab1 f181 	clz	r1, r1
 8006222:	0949      	lsrs	r1, r1, #5
 8006224:	2007      	movs	r0, #7
 8006226:	f7fa fb63 	bl	80008f0 <_test_assert>
 800622a:	4607      	mov	r7, r0
 800622c:	2800      	cmp	r0, #0
 800622e:	d1d8      	bne.n	80061e2 <queues2_execute+0xd2>
 8006230:	f380 8811 	msr	BASEPRI, r0
 8006234:	4a41      	ldr	r2, [pc, #260]	; (800633c <queues2_execute+0x22c>)
 8006236:	4b42      	ldr	r3, [pc, #264]	; (8006340 <queues2_execute+0x230>)
 8006238:	6992      	ldr	r2, [r2, #24]
 800623a:	4842      	ldr	r0, [pc, #264]	; (8006344 <queues2_execute+0x234>)
 800623c:	6892      	ldr	r2, [r2, #8]
 800623e:	9700      	str	r7, [sp, #0]
 8006240:	3201      	adds	r2, #1
 8006242:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006246:	f7fd f8c3 	bl	80033d0 <chThdCreateStatic>
 800624a:	4b3f      	ldr	r3, [pc, #252]	; (8006348 <queues2_execute+0x238>)
 800624c:	6018      	str	r0, [r3, #0]
 800624e:	f386 8811 	msr	BASEPRI, r6
 8006252:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 8006256:	68a9      	ldr	r1, [r5, #8]
 8006258:	1a9b      	subs	r3, r3, r2
 800625a:	1a59      	subs	r1, r3, r1
 800625c:	f1a1 0104 	sub.w	r1, r1, #4
 8006260:	fab1 f181 	clz	r1, r1
 8006264:	0949      	lsrs	r1, r1, #5
 8006266:	2008      	movs	r0, #8
 8006268:	f7fa fb42 	bl	80008f0 <_test_assert>
 800626c:	4604      	mov	r4, r0
 800626e:	b110      	cbz	r0, 8006276 <queues2_execute+0x166>
 8006270:	f387 8811 	msr	BASEPRI, r7
 8006274:	e796      	b.n	80061a4 <queues2_execute+0x94>
 8006276:	f380 8811 	msr	BASEPRI, r0
 800627a:	f7ff fcf1 	bl	8005c60 <test_wait_threads>
 800627e:	f386 8811 	msr	BASEPRI, r6
 8006282:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 8006286:	482a      	ldr	r0, [pc, #168]	; (8006330 <queues2_execute+0x220>)
 8006288:	61aa      	str	r2, [r5, #24]
 800628a:	1a9b      	subs	r3, r3, r2
 800628c:	f06f 0101 	mvn.w	r1, #1
 8006290:	616a      	str	r2, [r5, #20]
 8006292:	60ab      	str	r3, [r5, #8]
 8006294:	f7fb fdfc 	bl	8001e90 <chThdDequeueAllI>
 8006298:	f384 8811 	msr	BASEPRI, r4
 800629c:	f386 8811 	msr	BASEPRI, r6
 80062a0:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 80062a4:	68a9      	ldr	r1, [r5, #8]
 80062a6:	1a9b      	subs	r3, r3, r2
 80062a8:	1a5f      	subs	r7, r3, r1
 80062aa:	4279      	negs	r1, r7
 80062ac:	4179      	adcs	r1, r7
 80062ae:	2009      	movs	r0, #9
 80062b0:	f7fa fb1e 	bl	80008f0 <_test_assert>
 80062b4:	4603      	mov	r3, r0
 80062b6:	2800      	cmp	r0, #0
 80062b8:	d193      	bne.n	80061e2 <queues2_execute+0xd2>
 80062ba:	f380 8811 	msr	BASEPRI, r0
 80062be:	2202      	movs	r2, #2
 80062c0:	491d      	ldr	r1, [pc, #116]	; (8006338 <queues2_execute+0x228>)
 80062c2:	481b      	ldr	r0, [pc, #108]	; (8006330 <queues2_execute+0x220>)
 80062c4:	f7fd fe24 	bl	8003f10 <chOQWriteTimeout>
 80062c8:	3802      	subs	r0, #2
 80062ca:	4241      	negs	r1, r0
 80062cc:	4141      	adcs	r1, r0
 80062ce:	200a      	movs	r0, #10
 80062d0:	f7fa fb0e 	bl	80008f0 <_test_assert>
 80062d4:	4603      	mov	r3, r0
 80062d6:	2800      	cmp	r0, #0
 80062d8:	f47f af64 	bne.w	80061a4 <queues2_execute+0x94>
 80062dc:	2202      	movs	r2, #2
 80062de:	4916      	ldr	r1, [pc, #88]	; (8006338 <queues2_execute+0x228>)
 80062e0:	4813      	ldr	r0, [pc, #76]	; (8006330 <queues2_execute+0x220>)
 80062e2:	f7fd fe15 	bl	8003f10 <chOQWriteTimeout>
 80062e6:	1e82      	subs	r2, r0, #2
 80062e8:	4251      	negs	r1, r2
 80062ea:	4151      	adcs	r1, r2
 80062ec:	200b      	movs	r0, #11
 80062ee:	f7fa faff 	bl	80008f0 <_test_assert>
 80062f2:	2800      	cmp	r0, #0
 80062f4:	f47f af56 	bne.w	80061a4 <queues2_execute+0x94>
 80062f8:	f386 8811 	msr	BASEPRI, r6
 80062fc:	68a9      	ldr	r1, [r5, #8]
 80062fe:	fab1 f181 	clz	r1, r1
 8006302:	0949      	lsrs	r1, r1, #5
 8006304:	200c      	movs	r0, #12
 8006306:	f7fa faf3 	bl	80008f0 <_test_assert>
 800630a:	2800      	cmp	r0, #0
 800630c:	f47f af47 	bne.w	800619e <queues2_execute+0x8e>
 8006310:	2100      	movs	r1, #0
 8006312:	f381 8811 	msr	BASEPRI, r1
 8006316:	220a      	movs	r2, #10
 8006318:	4805      	ldr	r0, [pc, #20]	; (8006330 <queues2_execute+0x220>)
 800631a:	f7fd fe61 	bl	8003fe0 <chOQPutTimeout>
 800631e:	1c43      	adds	r3, r0, #1
 8006320:	4259      	negs	r1, r3
 8006322:	4159      	adcs	r1, r3
 8006324:	200d      	movs	r0, #13
 8006326:	b003      	add	sp, #12
 8006328:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800632c:	f7fa bae0 	b.w	80008f0 <_test_assert>
 8006330:	200008a8 	.word	0x200008a8
 8006334:	08009040 	.word	0x08009040
 8006338:	200017a8 	.word	0x200017a8
 800633c:	20001370 	.word	0x20001370
 8006340:	08004031 	.word	0x08004031
 8006344:	20001660 	.word	0x20001660
 8006348:	20001cf4 	.word	0x20001cf4
 800634c:	00000000 	.word	0x00000000

08006350 <queues1_execute>:
 8006350:	b570      	push	{r4, r5, r6, lr}
 8006352:	2620      	movs	r6, #32
 8006354:	b082      	sub	sp, #8
 8006356:	f386 8811 	msr	BASEPRI, r6
 800635a:	4c99      	ldr	r4, [pc, #612]	; (80065c0 <queues1_execute+0x270>)
 800635c:	68a1      	ldr	r1, [r4, #8]
 800635e:	fab1 f181 	clz	r1, r1
 8006362:	0949      	lsrs	r1, r1, #5
 8006364:	2001      	movs	r0, #1
 8006366:	f7fa fac3 	bl	80008f0 <_test_assert>
 800636a:	bb10      	cbnz	r0, 80063b2 <queues1_execute+0x62>
 800636c:	4605      	mov	r5, r0
 800636e:	f380 8811 	msr	BASEPRI, r0
 8006372:	f386 8811 	msr	BASEPRI, r6
 8006376:	2141      	movs	r1, #65	; 0x41
 8006378:	4620      	mov	r0, r4
 800637a:	f7fb fb29 	bl	80019d0 <chIQPutI>
 800637e:	4620      	mov	r0, r4
 8006380:	2142      	movs	r1, #66	; 0x42
 8006382:	f7fb fb25 	bl	80019d0 <chIQPutI>
 8006386:	4620      	mov	r0, r4
 8006388:	2143      	movs	r1, #67	; 0x43
 800638a:	f7fb fb21 	bl	80019d0 <chIQPutI>
 800638e:	4620      	mov	r0, r4
 8006390:	2144      	movs	r1, #68	; 0x44
 8006392:	f7fb fb1d 	bl	80019d0 <chIQPutI>
 8006396:	f385 8811 	msr	BASEPRI, r5
 800639a:	f386 8811 	msr	BASEPRI, r6
 800639e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 80063a2:	429a      	cmp	r2, r3
 80063a4:	d038      	beq.n	8006418 <queues1_execute+0xc8>
 80063a6:	4629      	mov	r1, r5
 80063a8:	2002      	movs	r0, #2
 80063aa:	f7fa faa1 	bl	80008f0 <_test_assert>
 80063ae:	4605      	mov	r5, r0
 80063b0:	b120      	cbz	r0, 80063bc <queues1_execute+0x6c>
 80063b2:	2300      	movs	r3, #0
 80063b4:	f383 8811 	msr	BASEPRI, r3
 80063b8:	b002      	add	sp, #8
 80063ba:	bd70      	pop	{r4, r5, r6, pc}
 80063bc:	f380 8811 	msr	BASEPRI, r0
 80063c0:	2320      	movs	r3, #32
 80063c2:	f383 8811 	msr	BASEPRI, r3
 80063c6:	487e      	ldr	r0, [pc, #504]	; (80065c0 <queues1_execute+0x270>)
 80063c8:	4629      	mov	r1, r5
 80063ca:	f7fb fb01 	bl	80019d0 <chIQPutI>
 80063ce:	3004      	adds	r0, #4
 80063d0:	bf14      	ite	ne
 80063d2:	2100      	movne	r1, #0
 80063d4:	2101      	moveq	r1, #1
 80063d6:	2003      	movs	r0, #3
 80063d8:	f7fa fa8a 	bl	80008f0 <_test_assert>
 80063dc:	b9c0      	cbnz	r0, 8006410 <queues1_execute+0xc0>
 80063de:	f380 8811 	msr	BASEPRI, r0
 80063e2:	4e77      	ldr	r6, [pc, #476]	; (80065c0 <queues1_execute+0x270>)
 80063e4:	2504      	movs	r5, #4
 80063e6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80063ea:	4630      	mov	r0, r6
 80063ec:	f7fd fea8 	bl	8004140 <chIQGetTimeout>
 80063f0:	b2c0      	uxtb	r0, r0
 80063f2:	f7fa fa95 	bl	8000920 <test_emit_token>
 80063f6:	3d01      	subs	r5, #1
 80063f8:	d1f5      	bne.n	80063e6 <queues1_execute+0x96>
 80063fa:	2620      	movs	r6, #32
 80063fc:	f386 8811 	msr	BASEPRI, r6
 8006400:	68a1      	ldr	r1, [r4, #8]
 8006402:	fab1 f181 	clz	r1, r1
 8006406:	0949      	lsrs	r1, r1, #5
 8006408:	2004      	movs	r0, #4
 800640a:	f7fa fa71 	bl	80008f0 <_test_assert>
 800640e:	b178      	cbz	r0, 8006430 <queues1_execute+0xe0>
 8006410:	f385 8811 	msr	BASEPRI, r5
 8006414:	b002      	add	sp, #8
 8006416:	bd70      	pop	{r4, r5, r6, pc}
 8006418:	68a5      	ldr	r5, [r4, #8]
 800641a:	3500      	adds	r5, #0
 800641c:	bf18      	it	ne
 800641e:	2501      	movne	r5, #1
 8006420:	4629      	mov	r1, r5
 8006422:	2002      	movs	r0, #2
 8006424:	f7fa fa64 	bl	80008f0 <_test_assert>
 8006428:	4605      	mov	r5, r0
 800642a:	2800      	cmp	r0, #0
 800642c:	d1c1      	bne.n	80063b2 <queues1_execute+0x62>
 800642e:	e7c5      	b.n	80063bc <queues1_execute+0x6c>
 8006430:	f385 8811 	msr	BASEPRI, r5
 8006434:	4963      	ldr	r1, [pc, #396]	; (80065c4 <queues1_execute+0x274>)
 8006436:	2005      	movs	r0, #5
 8006438:	f7fa fa32 	bl	80008a0 <_test_assert_sequence>
 800643c:	2800      	cmp	r0, #0
 800643e:	d1bb      	bne.n	80063b8 <queues1_execute+0x68>
 8006440:	f386 8811 	msr	BASEPRI, r6
 8006444:	2141      	movs	r1, #65	; 0x41
 8006446:	485e      	ldr	r0, [pc, #376]	; (80065c0 <queues1_execute+0x270>)
 8006448:	f7fb fac2 	bl	80019d0 <chIQPutI>
 800644c:	2142      	movs	r1, #66	; 0x42
 800644e:	485c      	ldr	r0, [pc, #368]	; (80065c0 <queues1_execute+0x270>)
 8006450:	f7fb fabe 	bl	80019d0 <chIQPutI>
 8006454:	2143      	movs	r1, #67	; 0x43
 8006456:	485a      	ldr	r0, [pc, #360]	; (80065c0 <queues1_execute+0x270>)
 8006458:	f7fb faba 	bl	80019d0 <chIQPutI>
 800645c:	2144      	movs	r1, #68	; 0x44
 800645e:	4858      	ldr	r0, [pc, #352]	; (80065c0 <queues1_execute+0x270>)
 8006460:	f7fb fab6 	bl	80019d0 <chIQPutI>
 8006464:	f385 8811 	msr	BASEPRI, r5
 8006468:	4957      	ldr	r1, [pc, #348]	; (80065c8 <queues1_execute+0x278>)
 800646a:	4855      	ldr	r0, [pc, #340]	; (80065c0 <queues1_execute+0x270>)
 800646c:	2208      	movs	r2, #8
 800646e:	462b      	mov	r3, r5
 8006470:	f7fd fe06 	bl	8004080 <chIQReadTimeout>
 8006474:	f1a0 0104 	sub.w	r1, r0, #4
 8006478:	fab1 f181 	clz	r1, r1
 800647c:	0949      	lsrs	r1, r1, #5
 800647e:	2006      	movs	r0, #6
 8006480:	f7fa fa36 	bl	80008f0 <_test_assert>
 8006484:	2800      	cmp	r0, #0
 8006486:	d197      	bne.n	80063b8 <queues1_execute+0x68>
 8006488:	f386 8811 	msr	BASEPRI, r6
 800648c:	68a1      	ldr	r1, [r4, #8]
 800648e:	fab1 f181 	clz	r1, r1
 8006492:	0949      	lsrs	r1, r1, #5
 8006494:	2007      	movs	r0, #7
 8006496:	f7fa fa2b 	bl	80008f0 <_test_assert>
 800649a:	2800      	cmp	r0, #0
 800649c:	d1b8      	bne.n	8006410 <queues1_execute+0xc0>
 800649e:	f385 8811 	msr	BASEPRI, r5
 80064a2:	f386 8811 	msr	BASEPRI, r6
 80064a6:	2141      	movs	r1, #65	; 0x41
 80064a8:	4845      	ldr	r0, [pc, #276]	; (80065c0 <queues1_execute+0x270>)
 80064aa:	f7fb fa91 	bl	80019d0 <chIQPutI>
 80064ae:	2142      	movs	r1, #66	; 0x42
 80064b0:	4843      	ldr	r0, [pc, #268]	; (80065c0 <queues1_execute+0x270>)
 80064b2:	f7fb fa8d 	bl	80019d0 <chIQPutI>
 80064b6:	2143      	movs	r1, #67	; 0x43
 80064b8:	4841      	ldr	r0, [pc, #260]	; (80065c0 <queues1_execute+0x270>)
 80064ba:	f7fb fa89 	bl	80019d0 <chIQPutI>
 80064be:	2144      	movs	r1, #68	; 0x44
 80064c0:	483f      	ldr	r0, [pc, #252]	; (80065c0 <queues1_execute+0x270>)
 80064c2:	f7fb fa85 	bl	80019d0 <chIQPutI>
 80064c6:	f385 8811 	msr	BASEPRI, r5
 80064ca:	493f      	ldr	r1, [pc, #252]	; (80065c8 <queues1_execute+0x278>)
 80064cc:	483c      	ldr	r0, [pc, #240]	; (80065c0 <queues1_execute+0x270>)
 80064ce:	2202      	movs	r2, #2
 80064d0:	462b      	mov	r3, r5
 80064d2:	f7fd fdd5 	bl	8004080 <chIQReadTimeout>
 80064d6:	f1a0 0102 	sub.w	r1, r0, #2
 80064da:	fab1 f181 	clz	r1, r1
 80064de:	0949      	lsrs	r1, r1, #5
 80064e0:	2008      	movs	r0, #8
 80064e2:	f7fa fa05 	bl	80008f0 <_test_assert>
 80064e6:	2800      	cmp	r0, #0
 80064e8:	f47f af66 	bne.w	80063b8 <queues1_execute+0x68>
 80064ec:	4936      	ldr	r1, [pc, #216]	; (80065c8 <queues1_execute+0x278>)
 80064ee:	4834      	ldr	r0, [pc, #208]	; (80065c0 <queues1_execute+0x270>)
 80064f0:	462b      	mov	r3, r5
 80064f2:	2202      	movs	r2, #2
 80064f4:	f7fd fdc4 	bl	8004080 <chIQReadTimeout>
 80064f8:	f1a0 0102 	sub.w	r1, r0, #2
 80064fc:	fab1 f181 	clz	r1, r1
 8006500:	0949      	lsrs	r1, r1, #5
 8006502:	2009      	movs	r0, #9
 8006504:	f7fa f9f4 	bl	80008f0 <_test_assert>
 8006508:	2800      	cmp	r0, #0
 800650a:	f47f af55 	bne.w	80063b8 <queues1_execute+0x68>
 800650e:	f386 8811 	msr	BASEPRI, r6
 8006512:	68a1      	ldr	r1, [r4, #8]
 8006514:	fab1 f181 	clz	r1, r1
 8006518:	0949      	lsrs	r1, r1, #5
 800651a:	200a      	movs	r0, #10
 800651c:	f7fa f9e8 	bl	80008f0 <_test_assert>
 8006520:	2800      	cmp	r0, #0
 8006522:	f47f af75 	bne.w	8006410 <queues1_execute+0xc0>
 8006526:	f385 8811 	msr	BASEPRI, r5
 800652a:	f386 8811 	msr	BASEPRI, r6
 800652e:	4824      	ldr	r0, [pc, #144]	; (80065c0 <queues1_execute+0x270>)
 8006530:	4629      	mov	r1, r5
 8006532:	f7fb fa4d 	bl	80019d0 <chIQPutI>
 8006536:	68e3      	ldr	r3, [r4, #12]
 8006538:	4821      	ldr	r0, [pc, #132]	; (80065c0 <queues1_execute+0x270>)
 800653a:	60a5      	str	r5, [r4, #8]
 800653c:	f06f 0101 	mvn.w	r1, #1
 8006540:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8006544:	f7fb fca4 	bl	8001e90 <chThdDequeueAllI>
 8006548:	f385 8811 	msr	BASEPRI, r5
 800654c:	f386 8811 	msr	BASEPRI, r6
 8006550:	68a1      	ldr	r1, [r4, #8]
 8006552:	fab1 f181 	clz	r1, r1
 8006556:	0949      	lsrs	r1, r1, #5
 8006558:	200b      	movs	r0, #11
 800655a:	f7fa f9c9 	bl	80008f0 <_test_assert>
 800655e:	2800      	cmp	r0, #0
 8006560:	f47f af56 	bne.w	8006410 <queues1_execute+0xc0>
 8006564:	f385 8811 	msr	BASEPRI, r5
 8006568:	4a18      	ldr	r2, [pc, #96]	; (80065cc <queues1_execute+0x27c>)
 800656a:	4b19      	ldr	r3, [pc, #100]	; (80065d0 <queues1_execute+0x280>)
 800656c:	6992      	ldr	r2, [r2, #24]
 800656e:	4819      	ldr	r0, [pc, #100]	; (80065d4 <queues1_execute+0x284>)
 8006570:	6892      	ldr	r2, [r2, #8]
 8006572:	9500      	str	r5, [sp, #0]
 8006574:	3201      	adds	r2, #1
 8006576:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800657a:	f7fc ff29 	bl	80033d0 <chThdCreateStatic>
 800657e:	4b16      	ldr	r3, [pc, #88]	; (80065d8 <queues1_execute+0x288>)
 8006580:	6018      	str	r0, [r3, #0]
 8006582:	f386 8811 	msr	BASEPRI, r6
 8006586:	68a1      	ldr	r1, [r4, #8]
 8006588:	fab1 f181 	clz	r1, r1
 800658c:	0949      	lsrs	r1, r1, #5
 800658e:	200c      	movs	r0, #12
 8006590:	f7fa f9ae 	bl	80008f0 <_test_assert>
 8006594:	2300      	movs	r3, #0
 8006596:	b110      	cbz	r0, 800659e <queues1_execute+0x24e>
 8006598:	f383 8811 	msr	BASEPRI, r3
 800659c:	e70c      	b.n	80063b8 <queues1_execute+0x68>
 800659e:	f383 8811 	msr	BASEPRI, r3
 80065a2:	f7ff fb5d 	bl	8005c60 <test_wait_threads>
 80065a6:	210a      	movs	r1, #10
 80065a8:	4805      	ldr	r0, [pc, #20]	; (80065c0 <queues1_execute+0x270>)
 80065aa:	f7fd fdc9 	bl	8004140 <chIQGetTimeout>
 80065ae:	1c43      	adds	r3, r0, #1
 80065b0:	4259      	negs	r1, r3
 80065b2:	4159      	adcs	r1, r3
 80065b4:	200d      	movs	r0, #13
 80065b6:	b002      	add	sp, #8
 80065b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80065bc:	f7fa b998 	b.w	80008f0 <_test_assert>
 80065c0:	20000810 	.word	0x20000810
 80065c4:	08009040 	.word	0x08009040
 80065c8:	200017a8 	.word	0x200017a8
 80065cc:	20001370 	.word	0x20001370
 80065d0:	08004191 	.word	0x08004191
 80065d4:	20001660 	.word	0x20001660
 80065d8:	20001cf4 	.word	0x20001cf4
 80065dc:	00000000 	.word	0x00000000

080065e0 <dyn2_execute>:
 80065e0:	4a31      	ldr	r2, [pc, #196]	; (80066a8 <dyn2_execute+0xc8>)
 80065e2:	6991      	ldr	r1, [r2, #24]
 80065e4:	4a31      	ldr	r2, [pc, #196]	; (80066ac <dyn2_execute+0xcc>)
 80065e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80065e8:	4b31      	ldr	r3, [pc, #196]	; (80066b0 <dyn2_execute+0xd0>)
 80065ea:	688d      	ldr	r5, [r1, #8]
 80065ec:	4931      	ldr	r1, [pc, #196]	; (80066b4 <dyn2_execute+0xd4>)
 80065ee:	f103 070c 	add.w	r7, r3, #12
 80065f2:	2620      	movs	r6, #32
 80065f4:	2400      	movs	r4, #0
 80065f6:	f386 8811 	msr	BASEPRI, r6
 80065fa:	6808      	ldr	r0, [r1, #0]
 80065fc:	6010      	str	r0, [r2, #0]
 80065fe:	600a      	str	r2, [r1, #0]
 8006600:	f384 8811 	msr	BASEPRI, r4
 8006604:	429f      	cmp	r7, r3
 8006606:	d002      	beq.n	800660e <dyn2_execute+0x2e>
 8006608:	f853 2b04 	ldr.w	r2, [r3], #4
 800660c:	e7f3      	b.n	80065f6 <dyn2_execute+0x16>
 800660e:	492a      	ldr	r1, [pc, #168]	; (80066b8 <dyn2_execute+0xd8>)
 8006610:	4c2a      	ldr	r4, [pc, #168]	; (80066bc <dyn2_execute+0xdc>)
 8006612:	1e68      	subs	r0, r5, #1
 8006614:	f7fc fe4c 	bl	80032b0 <chThdCreateFromMemoryPool.constprop.74>
 8006618:	4929      	ldr	r1, [pc, #164]	; (80066c0 <dyn2_execute+0xe0>)
 800661a:	6020      	str	r0, [r4, #0]
 800661c:	1ea8      	subs	r0, r5, #2
 800661e:	f7fc fe47 	bl	80032b0 <chThdCreateFromMemoryPool.constprop.74>
 8006622:	4928      	ldr	r1, [pc, #160]	; (80066c4 <dyn2_execute+0xe4>)
 8006624:	6060      	str	r0, [r4, #4]
 8006626:	1ee8      	subs	r0, r5, #3
 8006628:	f7fc fe42 	bl	80032b0 <chThdCreateFromMemoryPool.constprop.74>
 800662c:	4926      	ldr	r1, [pc, #152]	; (80066c8 <dyn2_execute+0xe8>)
 800662e:	60a0      	str	r0, [r4, #8]
 8006630:	1f28      	subs	r0, r5, #4
 8006632:	f7fc fe3d 	bl	80032b0 <chThdCreateFromMemoryPool.constprop.74>
 8006636:	4925      	ldr	r1, [pc, #148]	; (80066cc <dyn2_execute+0xec>)
 8006638:	60e0      	str	r0, [r4, #12]
 800663a:	1f68      	subs	r0, r5, #5
 800663c:	f7fc fe38 	bl	80032b0 <chThdCreateFromMemoryPool.constprop.74>
 8006640:	6821      	ldr	r1, [r4, #0]
 8006642:	6120      	str	r0, [r4, #16]
 8006644:	b141      	cbz	r1, 8006658 <dyn2_execute+0x78>
 8006646:	6861      	ldr	r1, [r4, #4]
 8006648:	b131      	cbz	r1, 8006658 <dyn2_execute+0x78>
 800664a:	68a1      	ldr	r1, [r4, #8]
 800664c:	b121      	cbz	r1, 8006658 <dyn2_execute+0x78>
 800664e:	68e1      	ldr	r1, [r4, #12]
 8006650:	b111      	cbz	r1, 8006658 <dyn2_execute+0x78>
 8006652:	fab0 f180 	clz	r1, r0
 8006656:	0949      	lsrs	r1, r1, #5
 8006658:	2001      	movs	r0, #1
 800665a:	f7fa f949 	bl	80008f0 <_test_assert>
 800665e:	b100      	cbz	r0, 8006662 <dyn2_execute+0x82>
 8006660:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006662:	f7ff fafd 	bl	8005c60 <test_wait_threads>
 8006666:	491a      	ldr	r1, [pc, #104]	; (80066d0 <dyn2_execute+0xf0>)
 8006668:	2002      	movs	r0, #2
 800666a:	f7fa f919 	bl	80008a0 <_test_assert_sequence>
 800666e:	2800      	cmp	r0, #0
 8006670:	d1f6      	bne.n	8006660 <dyn2_execute+0x80>
 8006672:	4d10      	ldr	r5, [pc, #64]	; (80066b4 <dyn2_execute+0xd4>)
 8006674:	2404      	movs	r4, #4
 8006676:	4628      	mov	r0, r5
 8006678:	f7fa ff22 	bl	80014c0 <chPoolAlloc>
 800667c:	1c01      	adds	r1, r0, #0
 800667e:	bf18      	it	ne
 8006680:	2101      	movne	r1, #1
 8006682:	2003      	movs	r0, #3
 8006684:	f7fa f934 	bl	80008f0 <_test_assert>
 8006688:	2800      	cmp	r0, #0
 800668a:	d1e9      	bne.n	8006660 <dyn2_execute+0x80>
 800668c:	3c01      	subs	r4, #1
 800668e:	d1f2      	bne.n	8006676 <dyn2_execute+0x96>
 8006690:	4808      	ldr	r0, [pc, #32]	; (80066b4 <dyn2_execute+0xd4>)
 8006692:	f7fa ff15 	bl	80014c0 <chPoolAlloc>
 8006696:	fab0 f180 	clz	r1, r0
 800669a:	0949      	lsrs	r1, r1, #5
 800669c:	2004      	movs	r0, #4
 800669e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80066a2:	f7fa b925 	b.w	80008f0 <_test_assert>
 80066a6:	bf00      	nop
 80066a8:	20001370 	.word	0x20001370
 80066ac:	20001660 	.word	0x20001660
 80066b0:	08009b24 	.word	0x08009b24
 80066b4:	20001628 	.word	0x20001628
 80066b8:	08008da0 	.word	0x08008da0
 80066bc:	20001cf4 	.word	0x20001cf4
 80066c0:	08008d90 	.word	0x08008d90
 80066c4:	08008d94 	.word	0x08008d94
 80066c8:	08009668 	.word	0x08009668
 80066cc:	08008e94 	.word	0x08008e94
 80066d0:	08009040 	.word	0x08009040
	...

080066e0 <dyn1_execute>:
 80066e0:	b570      	push	{r4, r5, r6, lr}
 80066e2:	4b34      	ldr	r3, [pc, #208]	; (80067b4 <dyn1_execute+0xd4>)
 80066e4:	4834      	ldr	r0, [pc, #208]	; (80067b8 <dyn1_execute+0xd8>)
 80066e6:	699b      	ldr	r3, [r3, #24]
 80066e8:	4c34      	ldr	r4, [pc, #208]	; (80067bc <dyn1_execute+0xdc>)
 80066ea:	689d      	ldr	r5, [r3, #8]
 80066ec:	b084      	sub	sp, #16
 80066ee:	a902      	add	r1, sp, #8
 80066f0:	f7fe fa36 	bl	8004b60 <chHeapStatus>
 80066f4:	4b32      	ldr	r3, [pc, #200]	; (80067c0 <dyn1_execute+0xe0>)
 80066f6:	9300      	str	r3, [sp, #0]
 80066f8:	1e6a      	subs	r2, r5, #1
 80066fa:	4b32      	ldr	r3, [pc, #200]	; (80067c4 <dyn1_execute+0xe4>)
 80066fc:	482e      	ldr	r0, [pc, #184]	; (80067b8 <dyn1_execute+0xd8>)
 80066fe:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006702:	f7fe fce5 	bl	80050d0 <chThdCreateFromHeap>
 8006706:	4b30      	ldr	r3, [pc, #192]	; (80067c8 <dyn1_execute+0xe8>)
 8006708:	6020      	str	r0, [r4, #0]
 800670a:	1eaa      	subs	r2, r5, #2
 800670c:	9300      	str	r3, [sp, #0]
 800670e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006712:	4b2c      	ldr	r3, [pc, #176]	; (80067c4 <dyn1_execute+0xe4>)
 8006714:	4828      	ldr	r0, [pc, #160]	; (80067b8 <dyn1_execute+0xd8>)
 8006716:	f7fe fcdb 	bl	80050d0 <chThdCreateFromHeap>
 800671a:	a903      	add	r1, sp, #12
 800671c:	6060      	str	r0, [r4, #4]
 800671e:	4826      	ldr	r0, [pc, #152]	; (80067b8 <dyn1_execute+0xd8>)
 8006720:	f7fe fa1e 	bl	8004b60 <chHeapStatus>
 8006724:	9903      	ldr	r1, [sp, #12]
 8006726:	4824      	ldr	r0, [pc, #144]	; (80067b8 <dyn1_execute+0xd8>)
 8006728:	f7fe fb62 	bl	8004df0 <chHeapAlloc>
 800672c:	4b27      	ldr	r3, [pc, #156]	; (80067cc <dyn1_execute+0xec>)
 800672e:	9300      	str	r3, [sp, #0]
 8006730:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006734:	4606      	mov	r6, r0
 8006736:	1eea      	subs	r2, r5, #3
 8006738:	4b22      	ldr	r3, [pc, #136]	; (80067c4 <dyn1_execute+0xe4>)
 800673a:	481f      	ldr	r0, [pc, #124]	; (80067b8 <dyn1_execute+0xd8>)
 800673c:	f7fe fcc8 	bl	80050d0 <chThdCreateFromHeap>
 8006740:	60a0      	str	r0, [r4, #8]
 8006742:	4630      	mov	r0, r6
 8006744:	f7fe fa64 	bl	8004c10 <chHeapFree>
 8006748:	6821      	ldr	r1, [r4, #0]
 800674a:	b121      	cbz	r1, 8006756 <dyn1_execute+0x76>
 800674c:	6861      	ldr	r1, [r4, #4]
 800674e:	b111      	cbz	r1, 8006756 <dyn1_execute+0x76>
 8006750:	68a1      	ldr	r1, [r4, #8]
 8006752:	b331      	cbz	r1, 80067a2 <dyn1_execute+0xc2>
 8006754:	2100      	movs	r1, #0
 8006756:	2001      	movs	r0, #1
 8006758:	f7fa f8ca 	bl	80008f0 <_test_assert>
 800675c:	b108      	cbz	r0, 8006762 <dyn1_execute+0x82>
 800675e:	b004      	add	sp, #16
 8006760:	bd70      	pop	{r4, r5, r6, pc}
 8006762:	f7ff fa7d 	bl	8005c60 <test_wait_threads>
 8006766:	491a      	ldr	r1, [pc, #104]	; (80067d0 <dyn1_execute+0xf0>)
 8006768:	2002      	movs	r0, #2
 800676a:	f7fa f899 	bl	80008a0 <_test_assert_sequence>
 800676e:	2800      	cmp	r0, #0
 8006770:	d1f5      	bne.n	800675e <dyn1_execute+0x7e>
 8006772:	a903      	add	r1, sp, #12
 8006774:	4810      	ldr	r0, [pc, #64]	; (80067b8 <dyn1_execute+0xd8>)
 8006776:	f7fe f9f3 	bl	8004b60 <chHeapStatus>
 800677a:	f1a0 0101 	sub.w	r1, r0, #1
 800677e:	fab1 f181 	clz	r1, r1
 8006782:	0949      	lsrs	r1, r1, #5
 8006784:	2003      	movs	r0, #3
 8006786:	f7fa f8b3 	bl	80008f0 <_test_assert>
 800678a:	2800      	cmp	r0, #0
 800678c:	d1e7      	bne.n	800675e <dyn1_execute+0x7e>
 800678e:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8006792:	1ac9      	subs	r1, r1, r3
 8006794:	fab1 f181 	clz	r1, r1
 8006798:	0949      	lsrs	r1, r1, #5
 800679a:	2004      	movs	r0, #4
 800679c:	f7fa f8a8 	bl	80008f0 <_test_assert>
 80067a0:	e7dd      	b.n	800675e <dyn1_execute+0x7e>
 80067a2:	68e3      	ldr	r3, [r4, #12]
 80067a4:	2b00      	cmp	r3, #0
 80067a6:	d1d6      	bne.n	8006756 <dyn1_execute+0x76>
 80067a8:	6921      	ldr	r1, [r4, #16]
 80067aa:	fab1 f181 	clz	r1, r1
 80067ae:	0949      	lsrs	r1, r1, #5
 80067b0:	e7d1      	b.n	8006756 <dyn1_execute+0x76>
 80067b2:	bf00      	nop
 80067b4:	20001370 	.word	0x20001370
 80067b8:	200015d0 	.word	0x200015d0
 80067bc:	20001cf4 	.word	0x20001cf4
 80067c0:	08008da0 	.word	0x08008da0
 80067c4:	08000981 	.word	0x08000981
 80067c8:	08008d90 	.word	0x08008d90
 80067cc:	08008d94 	.word	0x08008d94
 80067d0:	08008d80 	.word	0x08008d80
	...

080067e0 <evt2_execute>:
 80067e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067e4:	2520      	movs	r5, #32
 80067e6:	b08f      	sub	sp, #60	; 0x3c
 80067e8:	f385 8811 	msr	BASEPRI, r5
 80067ec:	4ca9      	ldr	r4, [pc, #676]	; (8006a94 <evt2_execute+0x2b4>)
 80067ee:	69a2      	ldr	r2, [r4, #24]
 80067f0:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80067f2:	f043 0307 	orr.w	r3, r3, #7
 80067f6:	6353      	str	r3, [r2, #52]	; 0x34
 80067f8:	2300      	movs	r3, #0
 80067fa:	f383 8811 	msr	BASEPRI, r3
 80067fe:	f7fc feb7 	bl	8003570 <chEvtWaitOne.constprop.54>
 8006802:	f1a0 0101 	sub.w	r1, r0, #1
 8006806:	fab1 f181 	clz	r1, r1
 800680a:	0949      	lsrs	r1, r1, #5
 800680c:	2001      	movs	r0, #1
 800680e:	f7fa f86f 	bl	80008f0 <_test_assert>
 8006812:	b110      	cbz	r0, 800681a <evt2_execute+0x3a>
 8006814:	b00f      	add	sp, #60	; 0x3c
 8006816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800681a:	f7fc fea9 	bl	8003570 <chEvtWaitOne.constprop.54>
 800681e:	f1a0 0102 	sub.w	r1, r0, #2
 8006822:	fab1 f181 	clz	r1, r1
 8006826:	0949      	lsrs	r1, r1, #5
 8006828:	2002      	movs	r0, #2
 800682a:	f7fa f861 	bl	80008f0 <_test_assert>
 800682e:	2800      	cmp	r0, #0
 8006830:	d1f0      	bne.n	8006814 <evt2_execute+0x34>
 8006832:	f7fc fe9d 	bl	8003570 <chEvtWaitOne.constprop.54>
 8006836:	f1a0 0104 	sub.w	r1, r0, #4
 800683a:	fab1 f181 	clz	r1, r1
 800683e:	0949      	lsrs	r1, r1, #5
 8006840:	2003      	movs	r0, #3
 8006842:	f7fa f855 	bl	80008f0 <_test_assert>
 8006846:	2800      	cmp	r0, #0
 8006848:	d1e4      	bne.n	8006814 <evt2_execute+0x34>
 800684a:	f7f9 fd39 	bl	80002c0 <chEvtGetAndClearEvents.constprop.58>
 800684e:	fab0 f180 	clz	r1, r0
 8006852:	0949      	lsrs	r1, r1, #5
 8006854:	2004      	movs	r0, #4
 8006856:	f7fa f84b 	bl	80008f0 <_test_assert>
 800685a:	4606      	mov	r6, r0
 800685c:	2800      	cmp	r0, #0
 800685e:	d1d9      	bne.n	8006814 <evt2_execute+0x34>
 8006860:	f7fd fd8e 	bl	8004380 <test_wait_tick>
 8006864:	f385 8811 	msr	BASEPRI, r5
 8006868:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 800686c:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
 8006870:	f386 8811 	msr	BASEPRI, r6
 8006874:	69a1      	ldr	r1, [r4, #24]
 8006876:	4b88      	ldr	r3, [pc, #544]	; (8006a98 <evt2_execute+0x2b8>)
 8006878:	688a      	ldr	r2, [r1, #8]
 800687a:	4888      	ldr	r0, [pc, #544]	; (8006a9c <evt2_execute+0x2bc>)
 800687c:	9100      	str	r1, [sp, #0]
 800687e:	3a01      	subs	r2, #1
 8006880:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006884:	f7fc fda4 	bl	80033d0 <chThdCreateStatic>
 8006888:	4e85      	ldr	r6, [pc, #532]	; (8006aa0 <evt2_execute+0x2c0>)
 800688a:	6030      	str	r0, [r6, #0]
 800688c:	f7fc fe70 	bl	8003570 <chEvtWaitOne.constprop.54>
 8006890:	f207 2226 	addw	r2, r7, #550	; 0x226
 8006894:	4681      	mov	r9, r0
 8006896:	f507 71fa 	add.w	r1, r7, #500	; 0x1f4
 800689a:	2005      	movs	r0, #5
 800689c:	f7f9 ffe0 	bl	8000860 <_test_assert_time_window>
 80068a0:	2800      	cmp	r0, #0
 80068a2:	d1b7      	bne.n	8006814 <evt2_execute+0x34>
 80068a4:	f1a9 0101 	sub.w	r1, r9, #1
 80068a8:	fab1 f181 	clz	r1, r1
 80068ac:	0949      	lsrs	r1, r1, #5
 80068ae:	2006      	movs	r0, #6
 80068b0:	f7fa f81e 	bl	80008f0 <_test_assert>
 80068b4:	2800      	cmp	r0, #0
 80068b6:	d1ad      	bne.n	8006814 <evt2_execute+0x34>
 80068b8:	f7f9 fd02 	bl	80002c0 <chEvtGetAndClearEvents.constprop.58>
 80068bc:	fab0 f180 	clz	r1, r0
 80068c0:	0949      	lsrs	r1, r1, #5
 80068c2:	2007      	movs	r0, #7
 80068c4:	f7fa f814 	bl	80008f0 <_test_assert>
 80068c8:	4607      	mov	r7, r0
 80068ca:	2800      	cmp	r0, #0
 80068cc:	d1a2      	bne.n	8006814 <evt2_execute+0x34>
 80068ce:	f7ff f9c7 	bl	8005c60 <test_wait_threads>
 80068d2:	f385 8811 	msr	BASEPRI, r5
 80068d6:	69a2      	ldr	r2, [r4, #24]
 80068d8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80068da:	f043 0305 	orr.w	r3, r3, #5
 80068de:	6353      	str	r3, [r2, #52]	; 0x34
 80068e0:	f387 8811 	msr	BASEPRI, r7
 80068e4:	f7fc fe64 	bl	80035b0 <chEvtWaitAny.constprop.53>
 80068e8:	1f47      	subs	r7, r0, #5
 80068ea:	4279      	negs	r1, r7
 80068ec:	4179      	adcs	r1, r7
 80068ee:	2008      	movs	r0, #8
 80068f0:	f7f9 fffe 	bl	80008f0 <_test_assert>
 80068f4:	2800      	cmp	r0, #0
 80068f6:	d18d      	bne.n	8006814 <evt2_execute+0x34>
 80068f8:	f7f9 fce2 	bl	80002c0 <chEvtGetAndClearEvents.constprop.58>
 80068fc:	fab0 f180 	clz	r1, r0
 8006900:	0949      	lsrs	r1, r1, #5
 8006902:	2009      	movs	r0, #9
 8006904:	f7f9 fff4 	bl	80008f0 <_test_assert>
 8006908:	4607      	mov	r7, r0
 800690a:	2800      	cmp	r0, #0
 800690c:	d182      	bne.n	8006814 <evt2_execute+0x34>
 800690e:	f7fd fd37 	bl	8004380 <test_wait_tick>
 8006912:	f385 8811 	msr	BASEPRI, r5
 8006916:	f8d8 5024 	ldr.w	r5, [r8, #36]	; 0x24
 800691a:	f387 8811 	msr	BASEPRI, r7
 800691e:	69a1      	ldr	r1, [r4, #24]
 8006920:	4b5d      	ldr	r3, [pc, #372]	; (8006a98 <evt2_execute+0x2b8>)
 8006922:	688a      	ldr	r2, [r1, #8]
 8006924:	485d      	ldr	r0, [pc, #372]	; (8006a9c <evt2_execute+0x2bc>)
 8006926:	9100      	str	r1, [sp, #0]
 8006928:	3a01      	subs	r2, #1
 800692a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800692e:	f7fc fd4f 	bl	80033d0 <chThdCreateStatic>
 8006932:	6030      	str	r0, [r6, #0]
 8006934:	f7fc fe3c 	bl	80035b0 <chEvtWaitAny.constprop.53>
 8006938:	f205 2226 	addw	r2, r5, #550	; 0x226
 800693c:	4607      	mov	r7, r0
 800693e:	f505 71fa 	add.w	r1, r5, #500	; 0x1f4
 8006942:	200a      	movs	r0, #10
 8006944:	f7f9 ff8c 	bl	8000860 <_test_assert_time_window>
 8006948:	2800      	cmp	r0, #0
 800694a:	f47f af63 	bne.w	8006814 <evt2_execute+0x34>
 800694e:	1e78      	subs	r0, r7, #1
 8006950:	4241      	negs	r1, r0
 8006952:	4141      	adcs	r1, r0
 8006954:	200b      	movs	r0, #11
 8006956:	f7f9 ffcb 	bl	80008f0 <_test_assert>
 800695a:	2800      	cmp	r0, #0
 800695c:	f47f af5a 	bne.w	8006814 <evt2_execute+0x34>
 8006960:	f7f9 fcae 	bl	80002c0 <chEvtGetAndClearEvents.constprop.58>
 8006964:	fab0 f180 	clz	r1, r0
 8006968:	0949      	lsrs	r1, r1, #5
 800696a:	200c      	movs	r0, #12
 800696c:	f7f9 ffc0 	bl	80008f0 <_test_assert>
 8006970:	4683      	mov	fp, r0
 8006972:	2800      	cmp	r0, #0
 8006974:	f47f af4e 	bne.w	8006814 <evt2_execute+0x34>
 8006978:	4f4a      	ldr	r7, [pc, #296]	; (8006aa4 <evt2_execute+0x2c4>)
 800697a:	4d4b      	ldr	r5, [pc, #300]	; (8006aa8 <evt2_execute+0x2c8>)
 800697c:	f7ff f970 	bl	8005c60 <test_wait_threads>
 8006980:	f04f 0a20 	mov.w	sl, #32
 8006984:	603f      	str	r7, [r7, #0]
 8006986:	602d      	str	r5, [r5, #0]
 8006988:	f38a 8811 	msr	BASEPRI, sl
 800698c:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 8006990:	683a      	ldr	r2, [r7, #0]
 8006992:	f849 2d28 	str.w	r2, [r9, #-40]!
 8006996:	69a0      	ldr	r0, [r4, #24]
 8006998:	f8cd b01c 	str.w	fp, [sp, #28]
 800699c:	2101      	movs	r1, #1
 800699e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80069a2:	e9cd 0105 	strd	r0, r1, [sp, #20]
 80069a6:	f8c7 9000 	str.w	r9, [r7]
 80069aa:	9208      	str	r2, [sp, #32]
 80069ac:	f38b 8811 	msr	BASEPRI, fp
 80069b0:	f38a 8811 	msr	BASEPRI, sl
 80069b4:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80069b8:	6829      	ldr	r1, [r5, #0]
 80069ba:	f848 1d14 	str.w	r1, [r8, #-20]!
 80069be:	69a0      	ldr	r0, [r4, #24]
 80069c0:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80069c4:	2104      	movs	r1, #4
 80069c6:	920d      	str	r2, [sp, #52]	; 0x34
 80069c8:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80069cc:	f8c5 8000 	str.w	r8, [r5]
 80069d0:	f38b 8811 	msr	BASEPRI, fp
 80069d4:	f7fd fcd4 	bl	8004380 <test_wait_tick>
 80069d8:	f38a 8811 	msr	BASEPRI, sl
 80069dc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80069e0:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80069e2:	9302      	str	r3, [sp, #8]
 80069e4:	f38b 8811 	msr	BASEPRI, fp
 80069e8:	69a3      	ldr	r3, [r4, #24]
 80069ea:	4930      	ldr	r1, [pc, #192]	; (8006aac <evt2_execute+0x2cc>)
 80069ec:	689a      	ldr	r2, [r3, #8]
 80069ee:	482b      	ldr	r0, [pc, #172]	; (8006a9c <evt2_execute+0x2bc>)
 80069f0:	9100      	str	r1, [sp, #0]
 80069f2:	4b2f      	ldr	r3, [pc, #188]	; (8006ab0 <evt2_execute+0x2d0>)
 80069f4:	3a01      	subs	r2, #1
 80069f6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80069fa:	f7fc fce9 	bl	80033d0 <chThdCreateStatic>
 80069fe:	9b02      	ldr	r3, [sp, #8]
 8006a00:	6030      	str	r0, [r6, #0]
 8006a02:	f503 71fa 	add.w	r1, r3, #500	; 0x1f4
 8006a06:	69a4      	ldr	r4, [r4, #24]
 8006a08:	f38a 8811 	msr	BASEPRI, sl
 8006a0c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006a0e:	f003 0205 	and.w	r2, r3, #5
 8006a12:	2a05      	cmp	r2, #5
 8006a14:	d007      	beq.n	8006a26 <evt2_execute+0x246>
 8006a16:	2305      	movs	r3, #5
 8006a18:	6223      	str	r3, [r4, #32]
 8006a1a:	200b      	movs	r0, #11
 8006a1c:	9103      	str	r1, [sp, #12]
 8006a1e:	f7fc fd0f 	bl	8003440 <chSchGoSleepS>
 8006a22:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006a24:	9903      	ldr	r1, [sp, #12]
 8006a26:	f023 0305 	bic.w	r3, r3, #5
 8006a2a:	6363      	str	r3, [r4, #52]	; 0x34
 8006a2c:	2300      	movs	r3, #0
 8006a2e:	f383 8811 	msr	BASEPRI, r3
 8006a32:	9b02      	ldr	r3, [sp, #8]
 8006a34:	200d      	movs	r0, #13
 8006a36:	f203 2226 	addw	r2, r3, #550	; 0x226
 8006a3a:	f7f9 ff11 	bl	8000860 <_test_assert_time_window>
 8006a3e:	2800      	cmp	r0, #0
 8006a40:	f47f aee8 	bne.w	8006814 <evt2_execute+0x34>
 8006a44:	f7f9 fc3c 	bl	80002c0 <chEvtGetAndClearEvents.constprop.58>
 8006a48:	fab0 f180 	clz	r1, r0
 8006a4c:	0949      	lsrs	r1, r1, #5
 8006a4e:	200e      	movs	r0, #14
 8006a50:	f7f9 ff4e 	bl	80008f0 <_test_assert>
 8006a54:	2800      	cmp	r0, #0
 8006a56:	f47f aedd 	bne.w	8006814 <evt2_execute+0x34>
 8006a5a:	f7ff f901 	bl	8005c60 <test_wait_threads>
 8006a5e:	4649      	mov	r1, r9
 8006a60:	4810      	ldr	r0, [pc, #64]	; (8006aa4 <evt2_execute+0x2c4>)
 8006a62:	f7fa fdb5 	bl	80015d0 <chEvtUnregister>
 8006a66:	4641      	mov	r1, r8
 8006a68:	480f      	ldr	r0, [pc, #60]	; (8006aa8 <evt2_execute+0x2c8>)
 8006a6a:	f7fa fdb1 	bl	80015d0 <chEvtUnregister>
 8006a6e:	6839      	ldr	r1, [r7, #0]
 8006a70:	1bca      	subs	r2, r1, r7
 8006a72:	4251      	negs	r1, r2
 8006a74:	4151      	adcs	r1, r2
 8006a76:	200f      	movs	r0, #15
 8006a78:	f7f9 ff3a 	bl	80008f0 <_test_assert>
 8006a7c:	2800      	cmp	r0, #0
 8006a7e:	f47f aec9 	bne.w	8006814 <evt2_execute+0x34>
 8006a82:	6829      	ldr	r1, [r5, #0]
 8006a84:	1b4b      	subs	r3, r1, r5
 8006a86:	4259      	negs	r1, r3
 8006a88:	4159      	adcs	r1, r3
 8006a8a:	2010      	movs	r0, #16
 8006a8c:	f7f9 ff30 	bl	80008f0 <_test_assert>
 8006a90:	e6c0      	b.n	8006814 <evt2_execute+0x34>
 8006a92:	bf00      	nop
 8006a94:	20001370 	.word	0x20001370
 8006a98:	080042e1 	.word	0x080042e1
 8006a9c:	20001660 	.word	0x20001660
 8006aa0:	20001cf4 	.word	0x20001cf4
 8006aa4:	20000808 	.word	0x20000808
 8006aa8:	2000080c 	.word	0x2000080c
 8006aac:	08008da0 	.word	0x08008da0
 8006ab0:	08004311 	.word	0x08004311
	...

08006ac0 <mtx8_execute>:
 8006ac0:	b570      	push	{r4, r5, r6, lr}
 8006ac2:	4b19      	ldr	r3, [pc, #100]	; (8006b28 <mtx8_execute+0x68>)
 8006ac4:	4d19      	ldr	r5, [pc, #100]	; (8006b2c <mtx8_execute+0x6c>)
 8006ac6:	699b      	ldr	r3, [r3, #24]
 8006ac8:	4a19      	ldr	r2, [pc, #100]	; (8006b30 <mtx8_execute+0x70>)
 8006aca:	689e      	ldr	r6, [r3, #8]
 8006acc:	4b19      	ldr	r3, [pc, #100]	; (8006b34 <mtx8_execute+0x74>)
 8006ace:	4c1a      	ldr	r4, [pc, #104]	; (8006b38 <mtx8_execute+0x78>)
 8006ad0:	b082      	sub	sp, #8
 8006ad2:	4628      	mov	r0, r5
 8006ad4:	9200      	str	r2, [sp, #0]
 8006ad6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006ada:	1c72      	adds	r2, r6, #1
 8006adc:	f7fc fc78 	bl	80033d0 <chThdCreateStatic>
 8006ae0:	4b16      	ldr	r3, [pc, #88]	; (8006b3c <mtx8_execute+0x7c>)
 8006ae2:	6020      	str	r0, [r4, #0]
 8006ae4:	1cb2      	adds	r2, r6, #2
 8006ae6:	9300      	str	r3, [sp, #0]
 8006ae8:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8006aec:	4b14      	ldr	r3, [pc, #80]	; (8006b40 <mtx8_execute+0x80>)
 8006aee:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006af2:	f7fc fc6d 	bl	80033d0 <chThdCreateStatic>
 8006af6:	4b13      	ldr	r3, [pc, #76]	; (8006b44 <mtx8_execute+0x84>)
 8006af8:	6060      	str	r0, [r4, #4]
 8006afa:	1cf2      	adds	r2, r6, #3
 8006afc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006b00:	9300      	str	r3, [sp, #0]
 8006b02:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8006b06:	4b10      	ldr	r3, [pc, #64]	; (8006b48 <mtx8_execute+0x88>)
 8006b08:	f7fc fc62 	bl	80033d0 <chThdCreateStatic>
 8006b0c:	60a0      	str	r0, [r4, #8]
 8006b0e:	f7fc fbf7 	bl	8003300 <chCondSignal.constprop.66>
 8006b12:	f7fc fbf5 	bl	8003300 <chCondSignal.constprop.66>
 8006b16:	f7ff f8a3 	bl	8005c60 <test_wait_threads>
 8006b1a:	490c      	ldr	r1, [pc, #48]	; (8006b4c <mtx8_execute+0x8c>)
 8006b1c:	2001      	movs	r0, #1
 8006b1e:	b002      	add	sp, #8
 8006b20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006b24:	f7f9 bebc 	b.w	80008a0 <_test_assert_sequence>
 8006b28:	20001370 	.word	0x20001370
 8006b2c:	20001660 	.word	0x20001660
 8006b30:	08008da0 	.word	0x08008da0
 8006b34:	080048f1 	.word	0x080048f1
 8006b38:	20001cf4 	.word	0x20001cf4
 8006b3c:	08008d94 	.word	0x08008d94
 8006b40:	08004981 	.word	0x08004981
 8006b44:	08008d90 	.word	0x08008d90
 8006b48:	080049f1 	.word	0x080049f1
 8006b4c:	08008e50 	.word	0x08008e50

08006b50 <mtx7_execute>:
 8006b50:	b530      	push	{r4, r5, lr}
 8006b52:	4b2c      	ldr	r3, [pc, #176]	; (8006c04 <mtx7_execute+0xb4>)
 8006b54:	4a2c      	ldr	r2, [pc, #176]	; (8006c08 <mtx7_execute+0xb8>)
 8006b56:	6999      	ldr	r1, [r3, #24]
 8006b58:	482c      	ldr	r0, [pc, #176]	; (8006c0c <mtx7_execute+0xbc>)
 8006b5a:	688d      	ldr	r5, [r1, #8]
 8006b5c:	4b2c      	ldr	r3, [pc, #176]	; (8006c10 <mtx7_execute+0xc0>)
 8006b5e:	4c2d      	ldr	r4, [pc, #180]	; (8006c14 <mtx7_execute+0xc4>)
 8006b60:	b083      	sub	sp, #12
 8006b62:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006b66:	9200      	str	r2, [sp, #0]
 8006b68:	1c6a      	adds	r2, r5, #1
 8006b6a:	f7fc fc31 	bl	80033d0 <chThdCreateStatic>
 8006b6e:	4b2a      	ldr	r3, [pc, #168]	; (8006c18 <mtx7_execute+0xc8>)
 8006b70:	6020      	str	r0, [r4, #0]
 8006b72:	1caa      	adds	r2, r5, #2
 8006b74:	9300      	str	r3, [sp, #0]
 8006b76:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006b7a:	4b25      	ldr	r3, [pc, #148]	; (8006c10 <mtx7_execute+0xc0>)
 8006b7c:	4827      	ldr	r0, [pc, #156]	; (8006c1c <mtx7_execute+0xcc>)
 8006b7e:	f7fc fc27 	bl	80033d0 <chThdCreateStatic>
 8006b82:	4b27      	ldr	r3, [pc, #156]	; (8006c20 <mtx7_execute+0xd0>)
 8006b84:	6060      	str	r0, [r4, #4]
 8006b86:	1cea      	adds	r2, r5, #3
 8006b88:	9300      	str	r3, [sp, #0]
 8006b8a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006b8e:	4b20      	ldr	r3, [pc, #128]	; (8006c10 <mtx7_execute+0xc0>)
 8006b90:	4824      	ldr	r0, [pc, #144]	; (8006c24 <mtx7_execute+0xd4>)
 8006b92:	f7fc fc1d 	bl	80033d0 <chThdCreateStatic>
 8006b96:	4b24      	ldr	r3, [pc, #144]	; (8006c28 <mtx7_execute+0xd8>)
 8006b98:	60a0      	str	r0, [r4, #8]
 8006b9a:	1d2a      	adds	r2, r5, #4
 8006b9c:	9300      	str	r3, [sp, #0]
 8006b9e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006ba2:	4b1b      	ldr	r3, [pc, #108]	; (8006c10 <mtx7_execute+0xc0>)
 8006ba4:	4821      	ldr	r0, [pc, #132]	; (8006c2c <mtx7_execute+0xdc>)
 8006ba6:	f7fc fc13 	bl	80033d0 <chThdCreateStatic>
 8006baa:	4b21      	ldr	r3, [pc, #132]	; (8006c30 <mtx7_execute+0xe0>)
 8006bac:	60e0      	str	r0, [r4, #12]
 8006bae:	1d6a      	adds	r2, r5, #5
 8006bb0:	9300      	str	r3, [sp, #0]
 8006bb2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006bb6:	4b16      	ldr	r3, [pc, #88]	; (8006c10 <mtx7_execute+0xc0>)
 8006bb8:	481e      	ldr	r0, [pc, #120]	; (8006c34 <mtx7_execute+0xe4>)
 8006bba:	f7fc fc09 	bl	80033d0 <chThdCreateStatic>
 8006bbe:	2320      	movs	r3, #32
 8006bc0:	6120      	str	r0, [r4, #16]
 8006bc2:	f383 8811 	msr	BASEPRI, r3
 8006bc6:	4c1c      	ldr	r4, [pc, #112]	; (8006c38 <mtx7_execute+0xe8>)
 8006bc8:	6823      	ldr	r3, [r4, #0]
 8006bca:	42a3      	cmp	r3, r4
 8006bcc:	d00b      	beq.n	8006be6 <mtx7_execute+0x96>
 8006bce:	f06f 0501 	mvn.w	r5, #1
 8006bd2:	681a      	ldr	r2, [r3, #0]
 8006bd4:	6022      	str	r2, [r4, #0]
 8006bd6:	4618      	mov	r0, r3
 8006bd8:	6054      	str	r4, [r2, #4]
 8006bda:	f7fa fe11 	bl	8001800 <chSchReadyI>
 8006bde:	6823      	ldr	r3, [r4, #0]
 8006be0:	6205      	str	r5, [r0, #32]
 8006be2:	42a3      	cmp	r3, r4
 8006be4:	d1f5      	bne.n	8006bd2 <mtx7_execute+0x82>
 8006be6:	f7fc fa03 	bl	8002ff0 <chSchRescheduleS>
 8006bea:	2300      	movs	r3, #0
 8006bec:	f383 8811 	msr	BASEPRI, r3
 8006bf0:	f7ff f836 	bl	8005c60 <test_wait_threads>
 8006bf4:	4911      	ldr	r1, [pc, #68]	; (8006c3c <mtx7_execute+0xec>)
 8006bf6:	2001      	movs	r0, #1
 8006bf8:	b003      	add	sp, #12
 8006bfa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006bfe:	f7f9 be4f 	b.w	80008a0 <_test_assert_sequence>
 8006c02:	bf00      	nop
 8006c04:	20001370 	.word	0x20001370
 8006c08:	08008e94 	.word	0x08008e94
 8006c0c:	20001660 	.word	0x20001660
 8006c10:	08004981 	.word	0x08004981
 8006c14:	20001cf4 	.word	0x20001cf4
 8006c18:	08009668 	.word	0x08009668
 8006c1c:	200017a8 	.word	0x200017a8
 8006c20:	08008d94 	.word	0x08008d94
 8006c24:	200018f0 	.word	0x200018f0
 8006c28:	08008d90 	.word	0x08008d90
 8006c2c:	20001a38 	.word	0x20001a38
 8006c30:	08008da0 	.word	0x08008da0
 8006c34:	20001b80 	.word	0x20001b80
 8006c38:	20000800 	.word	0x20000800
 8006c3c:	08008e90 	.word	0x08008e90

08006c40 <mtx6_execute>:
 8006c40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006c42:	4b2c      	ldr	r3, [pc, #176]	; (8006cf4 <mtx6_execute+0xb4>)
 8006c44:	4e2c      	ldr	r6, [pc, #176]	; (8006cf8 <mtx6_execute+0xb8>)
 8006c46:	699b      	ldr	r3, [r3, #24]
 8006c48:	4d2c      	ldr	r5, [pc, #176]	; (8006cfc <mtx6_execute+0xbc>)
 8006c4a:	689f      	ldr	r7, [r3, #8]
 8006c4c:	4b2c      	ldr	r3, [pc, #176]	; (8006d00 <mtx6_execute+0xc0>)
 8006c4e:	4c2d      	ldr	r4, [pc, #180]	; (8006d04 <mtx6_execute+0xc4>)
 8006c50:	b083      	sub	sp, #12
 8006c52:	1c7a      	adds	r2, r7, #1
 8006c54:	9300      	str	r3, [sp, #0]
 8006c56:	4628      	mov	r0, r5
 8006c58:	4633      	mov	r3, r6
 8006c5a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006c5e:	f7fc fbb7 	bl	80033d0 <chThdCreateStatic>
 8006c62:	4929      	ldr	r1, [pc, #164]	; (8006d08 <mtx6_execute+0xc8>)
 8006c64:	6020      	str	r0, [r4, #0]
 8006c66:	1cba      	adds	r2, r7, #2
 8006c68:	4633      	mov	r3, r6
 8006c6a:	9100      	str	r1, [sp, #0]
 8006c6c:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8006c70:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006c74:	f7fc fbac 	bl	80033d0 <chThdCreateStatic>
 8006c78:	4924      	ldr	r1, [pc, #144]	; (8006d0c <mtx6_execute+0xcc>)
 8006c7a:	6060      	str	r0, [r4, #4]
 8006c7c:	1cfa      	adds	r2, r7, #3
 8006c7e:	4633      	mov	r3, r6
 8006c80:	9100      	str	r1, [sp, #0]
 8006c82:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8006c86:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006c8a:	f7fc fba1 	bl	80033d0 <chThdCreateStatic>
 8006c8e:	4920      	ldr	r1, [pc, #128]	; (8006d10 <mtx6_execute+0xd0>)
 8006c90:	60a0      	str	r0, [r4, #8]
 8006c92:	1d3a      	adds	r2, r7, #4
 8006c94:	4633      	mov	r3, r6
 8006c96:	9100      	str	r1, [sp, #0]
 8006c98:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8006c9c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006ca0:	f7fc fb96 	bl	80033d0 <chThdCreateStatic>
 8006ca4:	491b      	ldr	r1, [pc, #108]	; (8006d14 <mtx6_execute+0xd4>)
 8006ca6:	60e0      	str	r0, [r4, #12]
 8006ca8:	4633      	mov	r3, r6
 8006caa:	9100      	str	r1, [sp, #0]
 8006cac:	1d7a      	adds	r2, r7, #5
 8006cae:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8006cb2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006cb6:	f7fc fb8b 	bl	80033d0 <chThdCreateStatic>
 8006cba:	2320      	movs	r3, #32
 8006cbc:	6120      	str	r0, [r4, #16]
 8006cbe:	f383 8811 	msr	BASEPRI, r3
 8006cc2:	f7fa fdb5 	bl	8001830 <chCondSignalI.constprop.65>
 8006cc6:	f7fa fdb3 	bl	8001830 <chCondSignalI.constprop.65>
 8006cca:	f7fa fdb1 	bl	8001830 <chCondSignalI.constprop.65>
 8006cce:	f7fa fdaf 	bl	8001830 <chCondSignalI.constprop.65>
 8006cd2:	f7fa fdad 	bl	8001830 <chCondSignalI.constprop.65>
 8006cd6:	f7fc f98b 	bl	8002ff0 <chSchRescheduleS>
 8006cda:	2300      	movs	r3, #0
 8006cdc:	f383 8811 	msr	BASEPRI, r3
 8006ce0:	f7fe ffbe 	bl	8005c60 <test_wait_threads>
 8006ce4:	490c      	ldr	r1, [pc, #48]	; (8006d18 <mtx6_execute+0xd8>)
 8006ce6:	2001      	movs	r0, #1
 8006ce8:	b003      	add	sp, #12
 8006cea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8006cee:	f7f9 bdd7 	b.w	80008a0 <_test_assert_sequence>
 8006cf2:	bf00      	nop
 8006cf4:	20001370 	.word	0x20001370
 8006cf8:	08004981 	.word	0x08004981
 8006cfc:	20001660 	.word	0x20001660
 8006d00:	08008e94 	.word	0x08008e94
 8006d04:	20001cf4 	.word	0x20001cf4
 8006d08:	08009668 	.word	0x08009668
 8006d0c:	08008d94 	.word	0x08008d94
 8006d10:	08008d90 	.word	0x08008d90
 8006d14:	08008da0 	.word	0x08008da0
 8006d18:	08008e90 	.word	0x08008e90
 8006d1c:	00000000 	.word	0x00000000

08006d20 <mtx4_execute>:
 8006d20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d24:	4d87      	ldr	r5, [pc, #540]	; (8006f44 <mtx4_execute+0x224>)
 8006d26:	4a88      	ldr	r2, [pc, #544]	; (8006f48 <mtx4_execute+0x228>)
 8006d28:	69a9      	ldr	r1, [r5, #24]
 8006d2a:	4b88      	ldr	r3, [pc, #544]	; (8006f4c <mtx4_execute+0x22c>)
 8006d2c:	688c      	ldr	r4, [r1, #8]
 8006d2e:	4888      	ldr	r0, [pc, #544]	; (8006f50 <mtx4_execute+0x230>)
 8006d30:	4e88      	ldr	r6, [pc, #544]	; (8006f54 <mtx4_execute+0x234>)
 8006d32:	b082      	sub	sp, #8
 8006d34:	1c67      	adds	r7, r4, #1
 8006d36:	9200      	str	r2, [sp, #0]
 8006d38:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006d3c:	463a      	mov	r2, r7
 8006d3e:	f7fc fb47 	bl	80033d0 <chThdCreateStatic>
 8006d42:	f104 0802 	add.w	r8, r4, #2
 8006d46:	4b84      	ldr	r3, [pc, #528]	; (8006f58 <mtx4_execute+0x238>)
 8006d48:	6030      	str	r0, [r6, #0]
 8006d4a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006d4e:	4642      	mov	r2, r8
 8006d50:	9300      	str	r3, [sp, #0]
 8006d52:	4882      	ldr	r0, [pc, #520]	; (8006f5c <mtx4_execute+0x23c>)
 8006d54:	4b82      	ldr	r3, [pc, #520]	; (8006f60 <mtx4_execute+0x240>)
 8006d56:	f7fc fb3b 	bl	80033d0 <chThdCreateStatic>
 8006d5a:	6070      	str	r0, [r6, #4]
 8006d5c:	4881      	ldr	r0, [pc, #516]	; (8006f64 <mtx4_execute+0x244>)
 8006d5e:	f7fd fd7f 	bl	8004860 <chMtxLock>
 8006d62:	69ab      	ldr	r3, [r5, #24]
 8006d64:	6899      	ldr	r1, [r3, #8]
 8006d66:	1b09      	subs	r1, r1, r4
 8006d68:	fab1 f181 	clz	r1, r1
 8006d6c:	2001      	movs	r0, #1
 8006d6e:	0949      	lsrs	r1, r1, #5
 8006d70:	f7f9 fdbe 	bl	80008f0 <_test_assert>
 8006d74:	b110      	cbz	r0, 8006d7c <mtx4_execute+0x5c>
 8006d76:	b002      	add	sp, #8
 8006d78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006d7c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8006d80:	f7fd fa3e 	bl	8004200 <chThdSleep>
 8006d84:	69ab      	ldr	r3, [r5, #24]
 8006d86:	6899      	ldr	r1, [r3, #8]
 8006d88:	1bc9      	subs	r1, r1, r7
 8006d8a:	fab1 f181 	clz	r1, r1
 8006d8e:	2002      	movs	r0, #2
 8006d90:	0949      	lsrs	r1, r1, #5
 8006d92:	f7f9 fdad 	bl	80008f0 <_test_assert>
 8006d96:	2800      	cmp	r0, #0
 8006d98:	d1ed      	bne.n	8006d76 <mtx4_execute+0x56>
 8006d9a:	4873      	ldr	r0, [pc, #460]	; (8006f68 <mtx4_execute+0x248>)
 8006d9c:	f7fd fd60 	bl	8004860 <chMtxLock>
 8006da0:	69ab      	ldr	r3, [r5, #24]
 8006da2:	6899      	ldr	r1, [r3, #8]
 8006da4:	1bc9      	subs	r1, r1, r7
 8006da6:	fab1 f181 	clz	r1, r1
 8006daa:	2003      	movs	r0, #3
 8006dac:	0949      	lsrs	r1, r1, #5
 8006dae:	f7f9 fd9f 	bl	80008f0 <_test_assert>
 8006db2:	2800      	cmp	r0, #0
 8006db4:	d1df      	bne.n	8006d76 <mtx4_execute+0x56>
 8006db6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8006dba:	f7fd fa21 	bl	8004200 <chThdSleep>
 8006dbe:	69ab      	ldr	r3, [r5, #24]
 8006dc0:	6899      	ldr	r1, [r3, #8]
 8006dc2:	eba1 0108 	sub.w	r1, r1, r8
 8006dc6:	fab1 f181 	clz	r1, r1
 8006dca:	2004      	movs	r0, #4
 8006dcc:	0949      	lsrs	r1, r1, #5
 8006dce:	f7f9 fd8f 	bl	80008f0 <_test_assert>
 8006dd2:	2800      	cmp	r0, #0
 8006dd4:	d1cf      	bne.n	8006d76 <mtx4_execute+0x56>
 8006dd6:	4864      	ldr	r0, [pc, #400]	; (8006f68 <mtx4_execute+0x248>)
 8006dd8:	f7fc faaa 	bl	8003330 <chMtxUnlock>
 8006ddc:	69ab      	ldr	r3, [r5, #24]
 8006dde:	6899      	ldr	r1, [r3, #8]
 8006de0:	1bc9      	subs	r1, r1, r7
 8006de2:	fab1 f181 	clz	r1, r1
 8006de6:	2005      	movs	r0, #5
 8006de8:	0949      	lsrs	r1, r1, #5
 8006dea:	f7f9 fd81 	bl	80008f0 <_test_assert>
 8006dee:	2800      	cmp	r0, #0
 8006df0:	d1c1      	bne.n	8006d76 <mtx4_execute+0x56>
 8006df2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8006df6:	f7fd fa03 	bl	8004200 <chThdSleep>
 8006dfa:	69ab      	ldr	r3, [r5, #24]
 8006dfc:	6899      	ldr	r1, [r3, #8]
 8006dfe:	1bc9      	subs	r1, r1, r7
 8006e00:	fab1 f181 	clz	r1, r1
 8006e04:	2006      	movs	r0, #6
 8006e06:	0949      	lsrs	r1, r1, #5
 8006e08:	f7f9 fd72 	bl	80008f0 <_test_assert>
 8006e0c:	2800      	cmp	r0, #0
 8006e0e:	d1b2      	bne.n	8006d76 <mtx4_execute+0x56>
 8006e10:	f7fc f916 	bl	8003040 <chMtxUnlockAll>
 8006e14:	69ab      	ldr	r3, [r5, #24]
 8006e16:	6899      	ldr	r1, [r3, #8]
 8006e18:	1b09      	subs	r1, r1, r4
 8006e1a:	fab1 f181 	clz	r1, r1
 8006e1e:	2007      	movs	r0, #7
 8006e20:	0949      	lsrs	r1, r1, #5
 8006e22:	f7f9 fd65 	bl	80008f0 <_test_assert>
 8006e26:	2800      	cmp	r0, #0
 8006e28:	d1a5      	bne.n	8006d76 <mtx4_execute+0x56>
 8006e2a:	f7fe ff19 	bl	8005c60 <test_wait_threads>
 8006e2e:	4b4f      	ldr	r3, [pc, #316]	; (8006f6c <mtx4_execute+0x24c>)
 8006e30:	9300      	str	r3, [sp, #0]
 8006e32:	463a      	mov	r2, r7
 8006e34:	4b45      	ldr	r3, [pc, #276]	; (8006f4c <mtx4_execute+0x22c>)
 8006e36:	4846      	ldr	r0, [pc, #280]	; (8006f50 <mtx4_execute+0x230>)
 8006e38:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006e3c:	f7fc fac8 	bl	80033d0 <chThdCreateStatic>
 8006e40:	4b4b      	ldr	r3, [pc, #300]	; (8006f70 <mtx4_execute+0x250>)
 8006e42:	6030      	str	r0, [r6, #0]
 8006e44:	4642      	mov	r2, r8
 8006e46:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006e4a:	9300      	str	r3, [sp, #0]
 8006e4c:	4843      	ldr	r0, [pc, #268]	; (8006f5c <mtx4_execute+0x23c>)
 8006e4e:	4b44      	ldr	r3, [pc, #272]	; (8006f60 <mtx4_execute+0x240>)
 8006e50:	f7fc fabe 	bl	80033d0 <chThdCreateStatic>
 8006e54:	6070      	str	r0, [r6, #4]
 8006e56:	4843      	ldr	r0, [pc, #268]	; (8006f64 <mtx4_execute+0x244>)
 8006e58:	f7fd fd02 	bl	8004860 <chMtxLock>
 8006e5c:	69ab      	ldr	r3, [r5, #24]
 8006e5e:	6899      	ldr	r1, [r3, #8]
 8006e60:	1b0a      	subs	r2, r1, r4
 8006e62:	4251      	negs	r1, r2
 8006e64:	4151      	adcs	r1, r2
 8006e66:	2008      	movs	r0, #8
 8006e68:	f7f9 fd42 	bl	80008f0 <_test_assert>
 8006e6c:	2800      	cmp	r0, #0
 8006e6e:	d182      	bne.n	8006d76 <mtx4_execute+0x56>
 8006e70:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8006e74:	f7fd f9c4 	bl	8004200 <chThdSleep>
 8006e78:	69ab      	ldr	r3, [r5, #24]
 8006e7a:	6899      	ldr	r1, [r3, #8]
 8006e7c:	1bcb      	subs	r3, r1, r7
 8006e7e:	4259      	negs	r1, r3
 8006e80:	4159      	adcs	r1, r3
 8006e82:	2009      	movs	r0, #9
 8006e84:	f7f9 fd34 	bl	80008f0 <_test_assert>
 8006e88:	2800      	cmp	r0, #0
 8006e8a:	f47f af74 	bne.w	8006d76 <mtx4_execute+0x56>
 8006e8e:	4836      	ldr	r0, [pc, #216]	; (8006f68 <mtx4_execute+0x248>)
 8006e90:	f7fd fce6 	bl	8004860 <chMtxLock>
 8006e94:	69ab      	ldr	r3, [r5, #24]
 8006e96:	6899      	ldr	r1, [r3, #8]
 8006e98:	eba1 0e07 	sub.w	lr, r1, r7
 8006e9c:	f1de 0100 	rsbs	r1, lr, #0
 8006ea0:	eb41 010e 	adc.w	r1, r1, lr
 8006ea4:	200a      	movs	r0, #10
 8006ea6:	f7f9 fd23 	bl	80008f0 <_test_assert>
 8006eaa:	2800      	cmp	r0, #0
 8006eac:	f47f af63 	bne.w	8006d76 <mtx4_execute+0x56>
 8006eb0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8006eb4:	f7fd f9a4 	bl	8004200 <chThdSleep>
 8006eb8:	69ab      	ldr	r3, [r5, #24]
 8006eba:	6899      	ldr	r1, [r3, #8]
 8006ebc:	eba1 0c08 	sub.w	ip, r1, r8
 8006ec0:	f1dc 0100 	rsbs	r1, ip, #0
 8006ec4:	eb41 010c 	adc.w	r1, r1, ip
 8006ec8:	200b      	movs	r0, #11
 8006eca:	f7f9 fd11 	bl	80008f0 <_test_assert>
 8006ece:	4606      	mov	r6, r0
 8006ed0:	2800      	cmp	r0, #0
 8006ed2:	f47f af50 	bne.w	8006d76 <mtx4_execute+0x56>
 8006ed6:	2320      	movs	r3, #32
 8006ed8:	f383 8811 	msr	BASEPRI, r3
 8006edc:	4822      	ldr	r0, [pc, #136]	; (8006f68 <mtx4_execute+0x248>)
 8006ede:	f7fa ff27 	bl	8001d30 <chMtxUnlockS>
 8006ee2:	f7fc f885 	bl	8002ff0 <chSchRescheduleS>
 8006ee6:	f386 8811 	msr	BASEPRI, r6
 8006eea:	69ab      	ldr	r3, [r5, #24]
 8006eec:	6899      	ldr	r1, [r3, #8]
 8006eee:	1bce      	subs	r6, r1, r7
 8006ef0:	4271      	negs	r1, r6
 8006ef2:	4171      	adcs	r1, r6
 8006ef4:	200c      	movs	r0, #12
 8006ef6:	f7f9 fcfb 	bl	80008f0 <_test_assert>
 8006efa:	2800      	cmp	r0, #0
 8006efc:	f47f af3b 	bne.w	8006d76 <mtx4_execute+0x56>
 8006f00:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8006f04:	f7fd f97c 	bl	8004200 <chThdSleep>
 8006f08:	69ab      	ldr	r3, [r5, #24]
 8006f0a:	6899      	ldr	r1, [r3, #8]
 8006f0c:	1bca      	subs	r2, r1, r7
 8006f0e:	4251      	negs	r1, r2
 8006f10:	4151      	adcs	r1, r2
 8006f12:	200d      	movs	r0, #13
 8006f14:	f7f9 fcec 	bl	80008f0 <_test_assert>
 8006f18:	2800      	cmp	r0, #0
 8006f1a:	f47f af2c 	bne.w	8006d76 <mtx4_execute+0x56>
 8006f1e:	f7fc f88f 	bl	8003040 <chMtxUnlockAll>
 8006f22:	69ab      	ldr	r3, [r5, #24]
 8006f24:	6899      	ldr	r1, [r3, #8]
 8006f26:	1b0b      	subs	r3, r1, r4
 8006f28:	4259      	negs	r1, r3
 8006f2a:	4159      	adcs	r1, r3
 8006f2c:	200e      	movs	r0, #14
 8006f2e:	f7f9 fcdf 	bl	80008f0 <_test_assert>
 8006f32:	2800      	cmp	r0, #0
 8006f34:	f47f af1f 	bne.w	8006d76 <mtx4_execute+0x56>
 8006f38:	b002      	add	sp, #8
 8006f3a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006f3e:	f7fe be8f 	b.w	8005c60 <test_wait_threads>
 8006f42:	bf00      	nop
 8006f44:	20001370 	.word	0x20001370
 8006f48:	08008d90 	.word	0x08008d90
 8006f4c:	08004b01 	.word	0x08004b01
 8006f50:	20001660 	.word	0x20001660
 8006f54:	20001cf4 	.word	0x20001cf4
 8006f58:	08008da0 	.word	0x08008da0
 8006f5c:	200017a8 	.word	0x200017a8
 8006f60:	08004b21 	.word	0x08004b21
 8006f64:	20000864 	.word	0x20000864
 8006f68:	20000854 	.word	0x20000854
 8006f6c:	08009668 	.word	0x08009668
 8006f70:	08008d94 	.word	0x08008d94
	...

08006f80 <mtx1_execute>:
 8006f80:	b570      	push	{r4, r5, r6, lr}
 8006f82:	4e29      	ldr	r6, [pc, #164]	; (8007028 <mtx1_execute+0xa8>)
 8006f84:	4829      	ldr	r0, [pc, #164]	; (800702c <mtx1_execute+0xac>)
 8006f86:	69b3      	ldr	r3, [r6, #24]
 8006f88:	4d29      	ldr	r5, [pc, #164]	; (8007030 <mtx1_execute+0xb0>)
 8006f8a:	689c      	ldr	r4, [r3, #8]
 8006f8c:	b082      	sub	sp, #8
 8006f8e:	f7fd fc67 	bl	8004860 <chMtxLock>
 8006f92:	4b28      	ldr	r3, [pc, #160]	; (8007034 <mtx1_execute+0xb4>)
 8006f94:	9300      	str	r3, [sp, #0]
 8006f96:	1c62      	adds	r2, r4, #1
 8006f98:	4b27      	ldr	r3, [pc, #156]	; (8007038 <mtx1_execute+0xb8>)
 8006f9a:	4828      	ldr	r0, [pc, #160]	; (800703c <mtx1_execute+0xbc>)
 8006f9c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006fa0:	f7fc fa16 	bl	80033d0 <chThdCreateStatic>
 8006fa4:	4b26      	ldr	r3, [pc, #152]	; (8007040 <mtx1_execute+0xc0>)
 8006fa6:	6028      	str	r0, [r5, #0]
 8006fa8:	1ca2      	adds	r2, r4, #2
 8006faa:	9300      	str	r3, [sp, #0]
 8006fac:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006fb0:	4b21      	ldr	r3, [pc, #132]	; (8007038 <mtx1_execute+0xb8>)
 8006fb2:	4824      	ldr	r0, [pc, #144]	; (8007044 <mtx1_execute+0xc4>)
 8006fb4:	f7fc fa0c 	bl	80033d0 <chThdCreateStatic>
 8006fb8:	4b23      	ldr	r3, [pc, #140]	; (8007048 <mtx1_execute+0xc8>)
 8006fba:	6068      	str	r0, [r5, #4]
 8006fbc:	1ce2      	adds	r2, r4, #3
 8006fbe:	9300      	str	r3, [sp, #0]
 8006fc0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006fc4:	4b1c      	ldr	r3, [pc, #112]	; (8007038 <mtx1_execute+0xb8>)
 8006fc6:	4821      	ldr	r0, [pc, #132]	; (800704c <mtx1_execute+0xcc>)
 8006fc8:	f7fc fa02 	bl	80033d0 <chThdCreateStatic>
 8006fcc:	4b20      	ldr	r3, [pc, #128]	; (8007050 <mtx1_execute+0xd0>)
 8006fce:	60a8      	str	r0, [r5, #8]
 8006fd0:	1d22      	adds	r2, r4, #4
 8006fd2:	9300      	str	r3, [sp, #0]
 8006fd4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006fd8:	4b17      	ldr	r3, [pc, #92]	; (8007038 <mtx1_execute+0xb8>)
 8006fda:	481e      	ldr	r0, [pc, #120]	; (8007054 <mtx1_execute+0xd4>)
 8006fdc:	f7fc f9f8 	bl	80033d0 <chThdCreateStatic>
 8006fe0:	4b1d      	ldr	r3, [pc, #116]	; (8007058 <mtx1_execute+0xd8>)
 8006fe2:	60e8      	str	r0, [r5, #12]
 8006fe4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006fe8:	1d62      	adds	r2, r4, #5
 8006fea:	9300      	str	r3, [sp, #0]
 8006fec:	481b      	ldr	r0, [pc, #108]	; (800705c <mtx1_execute+0xdc>)
 8006fee:	4b12      	ldr	r3, [pc, #72]	; (8007038 <mtx1_execute+0xb8>)
 8006ff0:	f7fc f9ee 	bl	80033d0 <chThdCreateStatic>
 8006ff4:	6128      	str	r0, [r5, #16]
 8006ff6:	480d      	ldr	r0, [pc, #52]	; (800702c <mtx1_execute+0xac>)
 8006ff8:	f7fc f99a 	bl	8003330 <chMtxUnlock>
 8006ffc:	f7fe fe30 	bl	8005c60 <test_wait_threads>
 8007000:	69b3      	ldr	r3, [r6, #24]
 8007002:	6899      	ldr	r1, [r3, #8]
 8007004:	1b09      	subs	r1, r1, r4
 8007006:	fab1 f181 	clz	r1, r1
 800700a:	2001      	movs	r0, #1
 800700c:	0949      	lsrs	r1, r1, #5
 800700e:	f7f9 fc6f 	bl	80008f0 <_test_assert>
 8007012:	b108      	cbz	r0, 8007018 <mtx1_execute+0x98>
 8007014:	b002      	add	sp, #8
 8007016:	bd70      	pop	{r4, r5, r6, pc}
 8007018:	4911      	ldr	r1, [pc, #68]	; (8007060 <mtx1_execute+0xe0>)
 800701a:	2002      	movs	r0, #2
 800701c:	b002      	add	sp, #8
 800701e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007022:	f7f9 bc3d 	b.w	80008a0 <_test_assert_sequence>
 8007026:	bf00      	nop
 8007028:	20001370 	.word	0x20001370
 800702c:	20000854 	.word	0x20000854
 8007030:	20001cf4 	.word	0x20001cf4
 8007034:	08008e94 	.word	0x08008e94
 8007038:	08004b41 	.word	0x08004b41
 800703c:	20001660 	.word	0x20001660
 8007040:	08009668 	.word	0x08009668
 8007044:	200017a8 	.word	0x200017a8
 8007048:	08008d94 	.word	0x08008d94
 800704c:	200018f0 	.word	0x200018f0
 8007050:	08008d90 	.word	0x08008d90
 8007054:	20001a38 	.word	0x20001a38
 8007058:	08008da0 	.word	0x08008da0
 800705c:	20001b80 	.word	0x20001b80
 8007060:	08008e90 	.word	0x08008e90
	...

08007070 <sem2_execute>:
 8007070:	b570      	push	{r4, r5, r6, lr}
 8007072:	2320      	movs	r3, #32
 8007074:	b082      	sub	sp, #8
 8007076:	f383 8811 	msr	BASEPRI, r3
 800707a:	4c4b      	ldr	r4, [pc, #300]	; (80071a8 <sem2_execute+0x138>)
 800707c:	68a3      	ldr	r3, [r4, #8]
 800707e:	3b01      	subs	r3, #1
 8007080:	bf5a      	itte	pl
 8007082:	60a3      	strpl	r3, [r4, #8]
 8007084:	2100      	movpl	r1, #0
 8007086:	2101      	movmi	r1, #1
 8007088:	2300      	movs	r3, #0
 800708a:	f383 8811 	msr	BASEPRI, r3
 800708e:	2001      	movs	r0, #1
 8007090:	f7f9 fc2e 	bl	80008f0 <_test_assert>
 8007094:	b108      	cbz	r0, 800709a <sem2_execute+0x2a>
 8007096:	b002      	add	sp, #8
 8007098:	bd70      	pop	{r4, r5, r6, pc}
 800709a:	6821      	ldr	r1, [r4, #0]
 800709c:	1b09      	subs	r1, r1, r4
 800709e:	fab1 f181 	clz	r1, r1
 80070a2:	2002      	movs	r0, #2
 80070a4:	0949      	lsrs	r1, r1, #5
 80070a6:	f7f9 fc23 	bl	80008f0 <_test_assert>
 80070aa:	2800      	cmp	r0, #0
 80070ac:	d1f3      	bne.n	8007096 <sem2_execute+0x26>
 80070ae:	68a1      	ldr	r1, [r4, #8]
 80070b0:	fab1 f181 	clz	r1, r1
 80070b4:	0949      	lsrs	r1, r1, #5
 80070b6:	2003      	movs	r0, #3
 80070b8:	f7f9 fc1a 	bl	80008f0 <_test_assert>
 80070bc:	4601      	mov	r1, r0
 80070be:	2800      	cmp	r0, #0
 80070c0:	d1e9      	bne.n	8007096 <sem2_execute+0x26>
 80070c2:	4a3a      	ldr	r2, [pc, #232]	; (80071ac <sem2_execute+0x13c>)
 80070c4:	4b3a      	ldr	r3, [pc, #232]	; (80071b0 <sem2_execute+0x140>)
 80070c6:	6992      	ldr	r2, [r2, #24]
 80070c8:	483a      	ldr	r0, [pc, #232]	; (80071b4 <sem2_execute+0x144>)
 80070ca:	6892      	ldr	r2, [r2, #8]
 80070cc:	9100      	str	r1, [sp, #0]
 80070ce:	3a01      	subs	r2, #1
 80070d0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80070d4:	f7fc f97c 	bl	80033d0 <chThdCreateStatic>
 80070d8:	4b37      	ldr	r3, [pc, #220]	; (80071b8 <sem2_execute+0x148>)
 80070da:	6018      	str	r0, [r3, #0]
 80070dc:	f241 3088 	movw	r0, #5000	; 0x1388
 80070e0:	f7fc fabe 	bl	8003660 <chSemWaitTimeout.constprop.72>
 80070e4:	4605      	mov	r5, r0
 80070e6:	f7fe fdbb 	bl	8005c60 <test_wait_threads>
 80070ea:	fab5 f185 	clz	r1, r5
 80070ee:	0949      	lsrs	r1, r1, #5
 80070f0:	2004      	movs	r0, #4
 80070f2:	f7f9 fbfd 	bl	80008f0 <_test_assert>
 80070f6:	2800      	cmp	r0, #0
 80070f8:	d1cd      	bne.n	8007096 <sem2_execute+0x26>
 80070fa:	6821      	ldr	r1, [r4, #0]
 80070fc:	1b09      	subs	r1, r1, r4
 80070fe:	fab1 f181 	clz	r1, r1
 8007102:	2005      	movs	r0, #5
 8007104:	0949      	lsrs	r1, r1, #5
 8007106:	f7f9 fbf3 	bl	80008f0 <_test_assert>
 800710a:	2800      	cmp	r0, #0
 800710c:	d1c3      	bne.n	8007096 <sem2_execute+0x26>
 800710e:	68a1      	ldr	r1, [r4, #8]
 8007110:	fab1 f181 	clz	r1, r1
 8007114:	0949      	lsrs	r1, r1, #5
 8007116:	2006      	movs	r0, #6
 8007118:	f7f9 fbea 	bl	80008f0 <_test_assert>
 800711c:	4605      	mov	r5, r0
 800711e:	2800      	cmp	r0, #0
 8007120:	d1b9      	bne.n	8007096 <sem2_execute+0x26>
 8007122:	f7fd f92d 	bl	8004380 <test_wait_tick>
 8007126:	2320      	movs	r3, #32
 8007128:	f383 8811 	msr	BASEPRI, r3
 800712c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8007130:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 8007132:	f385 8811 	msr	BASEPRI, r5
 8007136:	2541      	movs	r5, #65	; 0x41
 8007138:	4628      	mov	r0, r5
 800713a:	f7f9 fbf1 	bl	8000920 <test_emit_token>
 800713e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8007142:	f7fc fa8d 	bl	8003660 <chSemWaitTimeout.constprop.72>
 8007146:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 800714a:	fab1 f181 	clz	r1, r1
 800714e:	0949      	lsrs	r1, r1, #5
 8007150:	2007      	movs	r0, #7
 8007152:	f7f9 fbcd 	bl	80008f0 <_test_assert>
 8007156:	2800      	cmp	r0, #0
 8007158:	d19d      	bne.n	8007096 <sem2_execute+0x26>
 800715a:	6821      	ldr	r1, [r4, #0]
 800715c:	1b09      	subs	r1, r1, r4
 800715e:	fab1 f181 	clz	r1, r1
 8007162:	2008      	movs	r0, #8
 8007164:	0949      	lsrs	r1, r1, #5
 8007166:	f7f9 fbc3 	bl	80008f0 <_test_assert>
 800716a:	2800      	cmp	r0, #0
 800716c:	d193      	bne.n	8007096 <sem2_execute+0x26>
 800716e:	68a1      	ldr	r1, [r4, #8]
 8007170:	fab1 f181 	clz	r1, r1
 8007174:	0949      	lsrs	r1, r1, #5
 8007176:	2009      	movs	r0, #9
 8007178:	f7f9 fbba 	bl	80008f0 <_test_assert>
 800717c:	3501      	adds	r5, #1
 800717e:	b2ed      	uxtb	r5, r5
 8007180:	2800      	cmp	r0, #0
 8007182:	d188      	bne.n	8007096 <sem2_execute+0x26>
 8007184:	2d46      	cmp	r5, #70	; 0x46
 8007186:	d1d7      	bne.n	8007138 <sem2_execute+0xc8>
 8007188:	490c      	ldr	r1, [pc, #48]	; (80071bc <sem2_execute+0x14c>)
 800718a:	200a      	movs	r0, #10
 800718c:	f7f9 fb88 	bl	80008a0 <_test_assert_sequence>
 8007190:	2800      	cmp	r0, #0
 8007192:	d180      	bne.n	8007096 <sem2_execute+0x26>
 8007194:	f606 12d8 	addw	r2, r6, #2520	; 0x9d8
 8007198:	f606 11c4 	addw	r1, r6, #2500	; 0x9c4
 800719c:	200b      	movs	r0, #11
 800719e:	b002      	add	sp, #8
 80071a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80071a4:	f7f9 bb5c 	b.w	8000860 <_test_assert_time_window>
 80071a8:	200008cc 	.word	0x200008cc
 80071ac:	20001370 	.word	0x20001370
 80071b0:	08004351 	.word	0x08004351
 80071b4:	20001660 	.word	0x20001660
 80071b8:	20001cf4 	.word	0x20001cf4
 80071bc:	08008e90 	.word	0x08008e90

080071c0 <sem1_execute>:
 80071c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80071c2:	4d4b      	ldr	r5, [pc, #300]	; (80072f0 <sem1_execute+0x130>)
 80071c4:	4f4b      	ldr	r7, [pc, #300]	; (80072f4 <sem1_execute+0x134>)
 80071c6:	69aa      	ldr	r2, [r5, #24]
 80071c8:	4b4b      	ldr	r3, [pc, #300]	; (80072f8 <sem1_execute+0x138>)
 80071ca:	6892      	ldr	r2, [r2, #8]
 80071cc:	484b      	ldr	r0, [pc, #300]	; (80072fc <sem1_execute+0x13c>)
 80071ce:	4c4c      	ldr	r4, [pc, #304]	; (8007300 <sem1_execute+0x140>)
 80071d0:	b083      	sub	sp, #12
 80071d2:	3205      	adds	r2, #5
 80071d4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80071d8:	9700      	str	r7, [sp, #0]
 80071da:	f7fc f8f9 	bl	80033d0 <chThdCreateStatic>
 80071de:	69ab      	ldr	r3, [r5, #24]
 80071e0:	689a      	ldr	r2, [r3, #8]
 80071e2:	4b48      	ldr	r3, [pc, #288]	; (8007304 <sem1_execute+0x144>)
 80071e4:	6020      	str	r0, [r4, #0]
 80071e6:	3201      	adds	r2, #1
 80071e8:	9300      	str	r3, [sp, #0]
 80071ea:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80071ee:	4b42      	ldr	r3, [pc, #264]	; (80072f8 <sem1_execute+0x138>)
 80071f0:	4845      	ldr	r0, [pc, #276]	; (8007308 <sem1_execute+0x148>)
 80071f2:	f7fc f8ed 	bl	80033d0 <chThdCreateStatic>
 80071f6:	69aa      	ldr	r2, [r5, #24]
 80071f8:	4b44      	ldr	r3, [pc, #272]	; (800730c <sem1_execute+0x14c>)
 80071fa:	6892      	ldr	r2, [r2, #8]
 80071fc:	6060      	str	r0, [r4, #4]
 80071fe:	3203      	adds	r2, #3
 8007200:	9300      	str	r3, [sp, #0]
 8007202:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007206:	4b3c      	ldr	r3, [pc, #240]	; (80072f8 <sem1_execute+0x138>)
 8007208:	4841      	ldr	r0, [pc, #260]	; (8007310 <sem1_execute+0x150>)
 800720a:	f7fc f8e1 	bl	80033d0 <chThdCreateStatic>
 800720e:	69aa      	ldr	r2, [r5, #24]
 8007210:	4b40      	ldr	r3, [pc, #256]	; (8007314 <sem1_execute+0x154>)
 8007212:	6892      	ldr	r2, [r2, #8]
 8007214:	60a0      	str	r0, [r4, #8]
 8007216:	3204      	adds	r2, #4
 8007218:	9300      	str	r3, [sp, #0]
 800721a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800721e:	4b36      	ldr	r3, [pc, #216]	; (80072f8 <sem1_execute+0x138>)
 8007220:	483d      	ldr	r0, [pc, #244]	; (8007318 <sem1_execute+0x158>)
 8007222:	f7fc f8d5 	bl	80033d0 <chThdCreateStatic>
 8007226:	69aa      	ldr	r2, [r5, #24]
 8007228:	4b3c      	ldr	r3, [pc, #240]	; (800731c <sem1_execute+0x15c>)
 800722a:	6892      	ldr	r2, [r2, #8]
 800722c:	60e0      	str	r0, [r4, #12]
 800722e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007232:	3202      	adds	r2, #2
 8007234:	9300      	str	r3, [sp, #0]
 8007236:	483a      	ldr	r0, [pc, #232]	; (8007320 <sem1_execute+0x160>)
 8007238:	4b2f      	ldr	r3, [pc, #188]	; (80072f8 <sem1_execute+0x138>)
 800723a:	f7fc f8c9 	bl	80033d0 <chThdCreateStatic>
 800723e:	6120      	str	r0, [r4, #16]
 8007240:	4838      	ldr	r0, [pc, #224]	; (8007324 <sem1_execute+0x164>)
 8007242:	f7fc f8a5 	bl	8003390 <chSemSignal>
 8007246:	4837      	ldr	r0, [pc, #220]	; (8007324 <sem1_execute+0x164>)
 8007248:	f7fc f8a2 	bl	8003390 <chSemSignal>
 800724c:	4835      	ldr	r0, [pc, #212]	; (8007324 <sem1_execute+0x164>)
 800724e:	f7fc f89f 	bl	8003390 <chSemSignal>
 8007252:	4834      	ldr	r0, [pc, #208]	; (8007324 <sem1_execute+0x164>)
 8007254:	f7fc f89c 	bl	8003390 <chSemSignal>
 8007258:	4832      	ldr	r0, [pc, #200]	; (8007324 <sem1_execute+0x164>)
 800725a:	f7fc f899 	bl	8003390 <chSemSignal>
 800725e:	f7fe fcff 	bl	8005c60 <test_wait_threads>
 8007262:	4931      	ldr	r1, [pc, #196]	; (8007328 <sem1_execute+0x168>)
 8007264:	2001      	movs	r0, #1
 8007266:	f7f9 fb1b 	bl	80008a0 <_test_assert_sequence>
 800726a:	b108      	cbz	r0, 8007270 <sem1_execute+0xb0>
 800726c:	b003      	add	sp, #12
 800726e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007270:	69aa      	ldr	r2, [r5, #24]
 8007272:	4b21      	ldr	r3, [pc, #132]	; (80072f8 <sem1_execute+0x138>)
 8007274:	6892      	ldr	r2, [r2, #8]
 8007276:	9700      	str	r7, [sp, #0]
 8007278:	4606      	mov	r6, r0
 800727a:	3205      	adds	r2, #5
 800727c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007280:	481e      	ldr	r0, [pc, #120]	; (80072fc <sem1_execute+0x13c>)
 8007282:	f7fc f8a5 	bl	80033d0 <chThdCreateStatic>
 8007286:	2320      	movs	r3, #32
 8007288:	6020      	str	r0, [r4, #0]
 800728a:	f383 8811 	msr	BASEPRI, r3
 800728e:	2502      	movs	r5, #2
 8007290:	4c24      	ldr	r4, [pc, #144]	; (8007324 <sem1_execute+0x164>)
 8007292:	e002      	b.n	800729a <sem1_execute+0xda>
 8007294:	2d01      	cmp	r5, #1
 8007296:	d00e      	beq.n	80072b6 <sem1_execute+0xf6>
 8007298:	2501      	movs	r5, #1
 800729a:	68a3      	ldr	r3, [r4, #8]
 800729c:	3301      	adds	r3, #1
 800729e:	2b00      	cmp	r3, #0
 80072a0:	60a3      	str	r3, [r4, #8]
 80072a2:	dcf7      	bgt.n	8007294 <sem1_execute+0xd4>
 80072a4:	6820      	ldr	r0, [r4, #0]
 80072a6:	6803      	ldr	r3, [r0, #0]
 80072a8:	6023      	str	r3, [r4, #0]
 80072aa:	605c      	str	r4, [r3, #4]
 80072ac:	f7fa faa8 	bl	8001800 <chSchReadyI>
 80072b0:	2d01      	cmp	r5, #1
 80072b2:	6206      	str	r6, [r0, #32]
 80072b4:	d1f0      	bne.n	8007298 <sem1_execute+0xd8>
 80072b6:	f7fb fe9b 	bl	8002ff0 <chSchRescheduleS>
 80072ba:	2500      	movs	r5, #0
 80072bc:	f385 8811 	msr	BASEPRI, r5
 80072c0:	f7fe fcce 	bl	8005c60 <test_wait_threads>
 80072c4:	2320      	movs	r3, #32
 80072c6:	f383 8811 	msr	BASEPRI, r3
 80072ca:	68a1      	ldr	r1, [r4, #8]
 80072cc:	f1a1 0101 	sub.w	r1, r1, #1
 80072d0:	fab1 f181 	clz	r1, r1
 80072d4:	2002      	movs	r0, #2
 80072d6:	0949      	lsrs	r1, r1, #5
 80072d8:	f7f9 fb0a 	bl	80008f0 <_test_assert>
 80072dc:	b918      	cbnz	r0, 80072e6 <sem1_execute+0x126>
 80072de:	f380 8811 	msr	BASEPRI, r0
 80072e2:	b003      	add	sp, #12
 80072e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80072e6:	f385 8811 	msr	BASEPRI, r5
 80072ea:	b003      	add	sp, #12
 80072ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80072ee:	bf00      	nop
 80072f0:	20001370 	.word	0x20001370
 80072f4:	08008da0 	.word	0x08008da0
 80072f8:	080054c1 	.word	0x080054c1
 80072fc:	20001660 	.word	0x20001660
 8007300:	20001cf4 	.word	0x20001cf4
 8007304:	08008d90 	.word	0x08008d90
 8007308:	200017a8 	.word	0x200017a8
 800730c:	08008d94 	.word	0x08008d94
 8007310:	200018f0 	.word	0x200018f0
 8007314:	08009668 	.word	0x08009668
 8007318:	20001a38 	.word	0x20001a38
 800731c:	08008e94 	.word	0x08008e94
 8007320:	20001b80 	.word	0x20001b80
 8007324:	200008cc 	.word	0x200008cc
 8007328:	08008e90 	.word	0x08008e90
 800732c:	00000000 	.word	0x00000000

08007330 <thd2_execute>:
 8007330:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007334:	4f2d      	ldr	r7, [pc, #180]	; (80073ec <thd2_execute+0xbc>)
 8007336:	4e2e      	ldr	r6, [pc, #184]	; (80073f0 <thd2_execute+0xc0>)
 8007338:	69bb      	ldr	r3, [r7, #24]
 800733a:	4d2e      	ldr	r5, [pc, #184]	; (80073f4 <thd2_execute+0xc4>)
 800733c:	689a      	ldr	r2, [r3, #8]
 800733e:	4b2e      	ldr	r3, [pc, #184]	; (80073f8 <thd2_execute+0xc8>)
 8007340:	4c2e      	ldr	r4, [pc, #184]	; (80073fc <thd2_execute+0xcc>)
 8007342:	b082      	sub	sp, #8
 8007344:	3a04      	subs	r2, #4
 8007346:	9300      	str	r3, [sp, #0]
 8007348:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 800734c:	4633      	mov	r3, r6
 800734e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007352:	f7fc f83d 	bl	80033d0 <chThdCreateStatic>
 8007356:	69bb      	ldr	r3, [r7, #24]
 8007358:	4929      	ldr	r1, [pc, #164]	; (8007400 <thd2_execute+0xd0>)
 800735a:	689a      	ldr	r2, [r3, #8]
 800735c:	6060      	str	r0, [r4, #4]
 800735e:	4633      	mov	r3, r6
 8007360:	9100      	str	r1, [sp, #0]
 8007362:	3a05      	subs	r2, #5
 8007364:	4628      	mov	r0, r5
 8007366:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800736a:	f7fc f831 	bl	80033d0 <chThdCreateStatic>
 800736e:	69bb      	ldr	r3, [r7, #24]
 8007370:	4924      	ldr	r1, [pc, #144]	; (8007404 <thd2_execute+0xd4>)
 8007372:	689a      	ldr	r2, [r3, #8]
 8007374:	6020      	str	r0, [r4, #0]
 8007376:	4633      	mov	r3, r6
 8007378:	9100      	str	r1, [sp, #0]
 800737a:	3a01      	subs	r2, #1
 800737c:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8007380:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007384:	f7fc f824 	bl	80033d0 <chThdCreateStatic>
 8007388:	69bb      	ldr	r3, [r7, #24]
 800738a:	491f      	ldr	r1, [pc, #124]	; (8007408 <thd2_execute+0xd8>)
 800738c:	689a      	ldr	r2, [r3, #8]
 800738e:	6120      	str	r0, [r4, #16]
 8007390:	9100      	str	r1, [sp, #0]
 8007392:	3a02      	subs	r2, #2
 8007394:	4633      	mov	r3, r6
 8007396:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 800739a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800739e:	f7fc f817 	bl	80033d0 <chThdCreateStatic>
 80073a2:	f04f 0820 	mov.w	r8, #32
 80073a6:	60e0      	str	r0, [r4, #12]
 80073a8:	f388 8811 	msr	BASEPRI, r8
 80073ac:	69ba      	ldr	r2, [r7, #24]
 80073ae:	4b17      	ldr	r3, [pc, #92]	; (800740c <thd2_execute+0xdc>)
 80073b0:	6892      	ldr	r2, [r2, #8]
 80073b2:	9300      	str	r3, [sp, #0]
 80073b4:	3a03      	subs	r2, #3
 80073b6:	4633      	mov	r3, r6
 80073b8:	f505 7024 	add.w	r0, r5, #656	; 0x290
 80073bc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80073c0:	f7fa f9be 	bl	8001740 <chThdCreateI>
 80073c4:	2500      	movs	r5, #0
 80073c6:	60a0      	str	r0, [r4, #8]
 80073c8:	f385 8811 	msr	BASEPRI, r5
 80073cc:	68a0      	ldr	r0, [r4, #8]
 80073ce:	f388 8811 	msr	BASEPRI, r8
 80073d2:	f7fa fa15 	bl	8001800 <chSchReadyI>
 80073d6:	f385 8811 	msr	BASEPRI, r5
 80073da:	f7fe fc41 	bl	8005c60 <test_wait_threads>
 80073de:	490c      	ldr	r1, [pc, #48]	; (8007410 <thd2_execute+0xe0>)
 80073e0:	2001      	movs	r0, #1
 80073e2:	b002      	add	sp, #8
 80073e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80073e8:	f7f9 ba5a 	b.w	80008a0 <_test_assert_sequence>
 80073ec:	20001370 	.word	0x20001370
 80073f0:	08000971 	.word	0x08000971
 80073f4:	20001660 	.word	0x20001660
 80073f8:	08009668 	.word	0x08009668
 80073fc:	20001cf4 	.word	0x20001cf4
 8007400:	08008e94 	.word	0x08008e94
 8007404:	08008da0 	.word	0x08008da0
 8007408:	08008d90 	.word	0x08008d90
 800740c:	08008d94 	.word	0x08008d94
 8007410:	08008e90 	.word	0x08008e90
	...

08007420 <thd1_execute>:
 8007420:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007422:	4f27      	ldr	r7, [pc, #156]	; (80074c0 <thd1_execute+0xa0>)
 8007424:	4e27      	ldr	r6, [pc, #156]	; (80074c4 <thd1_execute+0xa4>)
 8007426:	69bb      	ldr	r3, [r7, #24]
 8007428:	4d27      	ldr	r5, [pc, #156]	; (80074c8 <thd1_execute+0xa8>)
 800742a:	689a      	ldr	r2, [r3, #8]
 800742c:	4b27      	ldr	r3, [pc, #156]	; (80074cc <thd1_execute+0xac>)
 800742e:	4c28      	ldr	r4, [pc, #160]	; (80074d0 <thd1_execute+0xb0>)
 8007430:	b083      	sub	sp, #12
 8007432:	3a05      	subs	r2, #5
 8007434:	9300      	str	r3, [sp, #0]
 8007436:	4628      	mov	r0, r5
 8007438:	4633      	mov	r3, r6
 800743a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800743e:	f7fb ffc7 	bl	80033d0 <chThdCreateStatic>
 8007442:	69bb      	ldr	r3, [r7, #24]
 8007444:	4923      	ldr	r1, [pc, #140]	; (80074d4 <thd1_execute+0xb4>)
 8007446:	689a      	ldr	r2, [r3, #8]
 8007448:	6020      	str	r0, [r4, #0]
 800744a:	4633      	mov	r3, r6
 800744c:	9100      	str	r1, [sp, #0]
 800744e:	3a04      	subs	r2, #4
 8007450:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8007454:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007458:	f7fb ffba 	bl	80033d0 <chThdCreateStatic>
 800745c:	69bb      	ldr	r3, [r7, #24]
 800745e:	491e      	ldr	r1, [pc, #120]	; (80074d8 <thd1_execute+0xb8>)
 8007460:	689a      	ldr	r2, [r3, #8]
 8007462:	6060      	str	r0, [r4, #4]
 8007464:	4633      	mov	r3, r6
 8007466:	9100      	str	r1, [sp, #0]
 8007468:	3a03      	subs	r2, #3
 800746a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 800746e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007472:	f7fb ffad 	bl	80033d0 <chThdCreateStatic>
 8007476:	69bb      	ldr	r3, [r7, #24]
 8007478:	4918      	ldr	r1, [pc, #96]	; (80074dc <thd1_execute+0xbc>)
 800747a:	689a      	ldr	r2, [r3, #8]
 800747c:	60a0      	str	r0, [r4, #8]
 800747e:	4633      	mov	r3, r6
 8007480:	9100      	str	r1, [sp, #0]
 8007482:	3a02      	subs	r2, #2
 8007484:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8007488:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800748c:	f7fb ffa0 	bl	80033d0 <chThdCreateStatic>
 8007490:	69bb      	ldr	r3, [r7, #24]
 8007492:	4913      	ldr	r1, [pc, #76]	; (80074e0 <thd1_execute+0xc0>)
 8007494:	689a      	ldr	r2, [r3, #8]
 8007496:	60e0      	str	r0, [r4, #12]
 8007498:	3a01      	subs	r2, #1
 800749a:	4633      	mov	r3, r6
 800749c:	9100      	str	r1, [sp, #0]
 800749e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 80074a2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80074a6:	f7fb ff93 	bl	80033d0 <chThdCreateStatic>
 80074aa:	6120      	str	r0, [r4, #16]
 80074ac:	f7fe fbd8 	bl	8005c60 <test_wait_threads>
 80074b0:	490c      	ldr	r1, [pc, #48]	; (80074e4 <thd1_execute+0xc4>)
 80074b2:	2001      	movs	r0, #1
 80074b4:	b003      	add	sp, #12
 80074b6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80074ba:	f7f9 b9f1 	b.w	80008a0 <_test_assert_sequence>
 80074be:	bf00      	nop
 80074c0:	20001370 	.word	0x20001370
 80074c4:	08000971 	.word	0x08000971
 80074c8:	20001660 	.word	0x20001660
 80074cc:	08008e94 	.word	0x08008e94
 80074d0:	20001cf4 	.word	0x20001cf4
 80074d4:	08009668 	.word	0x08009668
 80074d8:	08008d94 	.word	0x08008d94
 80074dc:	08008d90 	.word	0x08008d90
 80074e0:	08008da0 	.word	0x08008da0
 80074e4:	08008e90 	.word	0x08008e90
	...

080074f0 <TestThread>:
 80074f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80074f4:	4ca0      	ldr	r4, [pc, #640]	; (8007778 <TestThread+0x288>)
 80074f6:	4da1      	ldr	r5, [pc, #644]	; (800777c <TestThread+0x28c>)
 80074f8:	6020      	str	r0, [r4, #0]
 80074fa:	b085      	sub	sp, #20
 80074fc:	48a0      	ldr	r0, [pc, #640]	; (8007780 <TestThread+0x290>)
 80074fe:	f7f9 fa47 	bl	8000990 <test_println>
 8007502:	48a0      	ldr	r0, [pc, #640]	; (8007784 <TestThread+0x294>)
 8007504:	f7f9 fa44 	bl	8000990 <test_println>
 8007508:	489f      	ldr	r0, [pc, #636]	; (8007788 <TestThread+0x298>)
 800750a:	f7f9 fa41 	bl	8000990 <test_println>
 800750e:	212a      	movs	r1, #42	; 0x2a
 8007510:	6820      	ldr	r0, [r4, #0]
 8007512:	6803      	ldr	r3, [r0, #0]
 8007514:	689b      	ldr	r3, [r3, #8]
 8007516:	4798      	blx	r3
 8007518:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800751c:	2900      	cmp	r1, #0
 800751e:	d1f7      	bne.n	8007510 <TestThread+0x20>
 8007520:	489a      	ldr	r0, [pc, #616]	; (800778c <TestThread+0x29c>)
 8007522:	4d9b      	ldr	r5, [pc, #620]	; (8007790 <TestThread+0x2a0>)
 8007524:	f7f9 fa34 	bl	8000990 <test_println>
 8007528:	212a      	movs	r1, #42	; 0x2a
 800752a:	6820      	ldr	r0, [r4, #0]
 800752c:	6803      	ldr	r3, [r0, #0]
 800752e:	689b      	ldr	r3, [r3, #8]
 8007530:	4798      	blx	r3
 8007532:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8007536:	2900      	cmp	r1, #0
 8007538:	d1f7      	bne.n	800752a <TestThread+0x3a>
 800753a:	4896      	ldr	r0, [pc, #600]	; (8007794 <TestThread+0x2a4>)
 800753c:	4d96      	ldr	r5, [pc, #600]	; (8007798 <TestThread+0x2a8>)
 800753e:	f7f9 fa27 	bl	8000990 <test_println>
 8007542:	212a      	movs	r1, #42	; 0x2a
 8007544:	6820      	ldr	r0, [r4, #0]
 8007546:	6803      	ldr	r3, [r0, #0]
 8007548:	689b      	ldr	r3, [r3, #8]
 800754a:	4798      	blx	r3
 800754c:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8007550:	2900      	cmp	r1, #0
 8007552:	d1f7      	bne.n	8007544 <TestThread+0x54>
 8007554:	4891      	ldr	r0, [pc, #580]	; (800779c <TestThread+0x2ac>)
 8007556:	4d92      	ldr	r5, [pc, #584]	; (80077a0 <TestThread+0x2b0>)
 8007558:	f7f9 fa1a 	bl	8000990 <test_println>
 800755c:	212a      	movs	r1, #42	; 0x2a
 800755e:	6820      	ldr	r0, [r4, #0]
 8007560:	6803      	ldr	r3, [r0, #0]
 8007562:	689b      	ldr	r3, [r3, #8]
 8007564:	4798      	blx	r3
 8007566:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800756a:	2900      	cmp	r1, #0
 800756c:	d1f7      	bne.n	800755e <TestThread+0x6e>
 800756e:	488d      	ldr	r0, [pc, #564]	; (80077a4 <TestThread+0x2b4>)
 8007570:	4d8d      	ldr	r5, [pc, #564]	; (80077a8 <TestThread+0x2b8>)
 8007572:	f7f9 fa0d 	bl	8000990 <test_println>
 8007576:	212a      	movs	r1, #42	; 0x2a
 8007578:	6820      	ldr	r0, [r4, #0]
 800757a:	6803      	ldr	r3, [r0, #0]
 800757c:	689b      	ldr	r3, [r3, #8]
 800757e:	4798      	blx	r3
 8007580:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8007584:	2900      	cmp	r1, #0
 8007586:	d1f7      	bne.n	8007578 <TestThread+0x88>
 8007588:	4888      	ldr	r0, [pc, #544]	; (80077ac <TestThread+0x2bc>)
 800758a:	4d89      	ldr	r5, [pc, #548]	; (80077b0 <TestThread+0x2c0>)
 800758c:	f7f9 fa00 	bl	8000990 <test_println>
 8007590:	212a      	movs	r1, #42	; 0x2a
 8007592:	6820      	ldr	r0, [r4, #0]
 8007594:	6803      	ldr	r3, [r0, #0]
 8007596:	689b      	ldr	r3, [r3, #8]
 8007598:	4798      	blx	r3
 800759a:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800759e:	2900      	cmp	r1, #0
 80075a0:	d1f7      	bne.n	8007592 <TestThread+0xa2>
 80075a2:	4884      	ldr	r0, [pc, #528]	; (80077b4 <TestThread+0x2c4>)
 80075a4:	4d84      	ldr	r5, [pc, #528]	; (80077b8 <TestThread+0x2c8>)
 80075a6:	f7f9 f9f3 	bl	8000990 <test_println>
 80075aa:	212a      	movs	r1, #42	; 0x2a
 80075ac:	6820      	ldr	r0, [r4, #0]
 80075ae:	6803      	ldr	r3, [r0, #0]
 80075b0:	689b      	ldr	r3, [r3, #8]
 80075b2:	4798      	blx	r3
 80075b4:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 80075b8:	2900      	cmp	r1, #0
 80075ba:	d1f7      	bne.n	80075ac <TestThread+0xbc>
 80075bc:	487f      	ldr	r0, [pc, #508]	; (80077bc <TestThread+0x2cc>)
 80075be:	4d80      	ldr	r5, [pc, #512]	; (80077c0 <TestThread+0x2d0>)
 80075c0:	f7f9 f9e6 	bl	8000990 <test_println>
 80075c4:	212a      	movs	r1, #42	; 0x2a
 80075c6:	6820      	ldr	r0, [r4, #0]
 80075c8:	6803      	ldr	r3, [r0, #0]
 80075ca:	689b      	ldr	r3, [r3, #8]
 80075cc:	4798      	blx	r3
 80075ce:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 80075d2:	2900      	cmp	r1, #0
 80075d4:	d1f7      	bne.n	80075c6 <TestThread+0xd6>
 80075d6:	4b7b      	ldr	r3, [pc, #492]	; (80077c4 <TestThread+0x2d4>)
 80075d8:	487b      	ldr	r0, [pc, #492]	; (80077c8 <TestThread+0x2d8>)
 80075da:	9302      	str	r3, [sp, #8]
 80075dc:	4b7b      	ldr	r3, [pc, #492]	; (80077cc <TestThread+0x2dc>)
 80075de:	9103      	str	r1, [sp, #12]
 80075e0:	9301      	str	r3, [sp, #4]
 80075e2:	f7f9 f9d5 	bl	8000990 <test_println>
 80075e6:	4866      	ldr	r0, [pc, #408]	; (8007780 <TestThread+0x290>)
 80075e8:	f8df 8218 	ldr.w	r8, [pc, #536]	; 8007804 <TestThread+0x314>
 80075ec:	4f78      	ldr	r7, [pc, #480]	; (80077d0 <TestThread+0x2e0>)
 80075ee:	f8df a218 	ldr.w	sl, [pc, #536]	; 8007808 <TestThread+0x318>
 80075f2:	f7f9 f9cd 	bl	8000990 <test_println>
 80075f6:	4b77      	ldr	r3, [pc, #476]	; (80077d4 <TestThread+0x2e4>)
 80075f8:	9903      	ldr	r1, [sp, #12]
 80075fa:	7019      	strb	r1, [r3, #0]
 80075fc:	4b76      	ldr	r3, [pc, #472]	; (80077d8 <TestThread+0x2e8>)
 80075fe:	468b      	mov	fp, r1
 8007600:	f10b 0b01 	add.w	fp, fp, #1
 8007604:	2600      	movs	r6, #0
 8007606:	2b00      	cmp	r3, #0
 8007608:	f000 8089 	beq.w	800771e <TestThread+0x22e>
 800760c:	4d73      	ldr	r5, [pc, #460]	; (80077dc <TestThread+0x2ec>)
 800760e:	f7f9 f8f7 	bl	8000800 <print_line>
 8007612:	212d      	movs	r1, #45	; 0x2d
 8007614:	6820      	ldr	r0, [r4, #0]
 8007616:	6803      	ldr	r3, [r0, #0]
 8007618:	689b      	ldr	r3, [r3, #8]
 800761a:	4798      	blx	r3
 800761c:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8007620:	2900      	cmp	r1, #0
 8007622:	d1f7      	bne.n	8007614 <TestThread+0x124>
 8007624:	4658      	mov	r0, fp
 8007626:	f7f9 f8db 	bl	80007e0 <test_printn>
 800762a:	6820      	ldr	r0, [r4, #0]
 800762c:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 800780c <TestThread+0x31c>
 8007630:	6803      	ldr	r3, [r0, #0]
 8007632:	212e      	movs	r1, #46	; 0x2e
 8007634:	689b      	ldr	r3, [r3, #8]
 8007636:	1c75      	adds	r5, r6, #1
 8007638:	4798      	blx	r3
 800763a:	4628      	mov	r0, r5
 800763c:	f7f9 f8d0 	bl	80007e0 <test_printn>
 8007640:	2120      	movs	r1, #32
 8007642:	6820      	ldr	r0, [r4, #0]
 8007644:	6803      	ldr	r3, [r0, #0]
 8007646:	689b      	ldr	r3, [r3, #8]
 8007648:	4798      	blx	r3
 800764a:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800764e:	2900      	cmp	r1, #0
 8007650:	d1f7      	bne.n	8007642 <TestThread+0x152>
 8007652:	f858 3026 	ldr.w	r3, [r8, r6, lsl #2]
 8007656:	f8d3 9000 	ldr.w	r9, [r3]
 800765a:	f899 1000 	ldrb.w	r1, [r9]
 800765e:	b139      	cbz	r1, 8007670 <TestThread+0x180>
 8007660:	6820      	ldr	r0, [r4, #0]
 8007662:	6803      	ldr	r3, [r0, #0]
 8007664:	689b      	ldr	r3, [r3, #8]
 8007666:	4798      	blx	r3
 8007668:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800766c:	2900      	cmp	r1, #0
 800766e:	d1f7      	bne.n	8007660 <TestThread+0x170>
 8007670:	485b      	ldr	r0, [pc, #364]	; (80077e0 <TestThread+0x2f0>)
 8007672:	f7f9 f98d 	bl	8000990 <test_println>
 8007676:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 800767a:	f7fc fdc1 	bl	8004200 <chThdSleep>
 800767e:	4a59      	ldr	r2, [pc, #356]	; (80077e4 <TestThread+0x2f4>)
 8007680:	4b59      	ldr	r3, [pc, #356]	; (80077e8 <TestThread+0x2f8>)
 8007682:	603b      	str	r3, [r7, #0]
 8007684:	2300      	movs	r3, #0
 8007686:	f858 9026 	ldr.w	r9, [r8, r6, lsl #2]
 800768a:	6113      	str	r3, [r2, #16]
 800768c:	e9c2 3300 	strd	r3, r3, [r2]
 8007690:	e9c2 3302 	strd	r3, r3, [r2, #8]
 8007694:	f8d9 2004 	ldr.w	r2, [r9, #4]
 8007698:	f88a 3000 	strb.w	r3, [sl]
 800769c:	b102      	cbz	r2, 80076a0 <TestThread+0x1b0>
 800769e:	4790      	blx	r2
 80076a0:	f8d9 300c 	ldr.w	r3, [r9, #12]
 80076a4:	4798      	blx	r3
 80076a6:	f8d9 3008 	ldr.w	r3, [r9, #8]
 80076aa:	b103      	cbz	r3, 80076ae <TestThread+0x1be>
 80076ac:	4798      	blx	r3
 80076ae:	f7fe fad7 	bl	8005c60 <test_wait_threads>
 80076b2:	f89a 3000 	ldrb.w	r3, [sl]
 80076b6:	2b00      	cmp	r3, #0
 80076b8:	d03c      	beq.n	8007734 <TestThread+0x244>
 80076ba:	f8df 9154 	ldr.w	r9, [pc, #340]	; 8007810 <TestThread+0x320>
 80076be:	212d      	movs	r1, #45	; 0x2d
 80076c0:	6820      	ldr	r0, [r4, #0]
 80076c2:	6803      	ldr	r3, [r0, #0]
 80076c4:	689b      	ldr	r3, [r3, #8]
 80076c6:	4798      	blx	r3
 80076c8:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 80076cc:	2900      	cmp	r1, #0
 80076ce:	d1f7      	bne.n	80076c0 <TestThread+0x1d0>
 80076d0:	4b46      	ldr	r3, [pc, #280]	; (80077ec <TestThread+0x2fc>)
 80076d2:	f8df 9140 	ldr.w	r9, [pc, #320]	; 8007814 <TestThread+0x324>
 80076d6:	6818      	ldr	r0, [r3, #0]
 80076d8:	f7f9 f882 	bl	80007e0 <test_printn>
 80076dc:	2120      	movs	r1, #32
 80076de:	6820      	ldr	r0, [r4, #0]
 80076e0:	6803      	ldr	r3, [r0, #0]
 80076e2:	689b      	ldr	r3, [r3, #8]
 80076e4:	4798      	blx	r3
 80076e6:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 80076ea:	2900      	cmp	r1, #0
 80076ec:	d1f7      	bne.n	80076de <TestThread+0x1ee>
 80076ee:	683b      	ldr	r3, [r7, #0]
 80076f0:	4a3d      	ldr	r2, [pc, #244]	; (80077e8 <TestThread+0x2f8>)
 80076f2:	4293      	cmp	r3, r2
 80076f4:	d909      	bls.n	800770a <TestThread+0x21a>
 80076f6:	4691      	mov	r9, r2
 80076f8:	6820      	ldr	r0, [r4, #0]
 80076fa:	f819 1b01 	ldrb.w	r1, [r9], #1
 80076fe:	6803      	ldr	r3, [r0, #0]
 8007700:	689b      	ldr	r3, [r3, #8]
 8007702:	4798      	blx	r3
 8007704:	683b      	ldr	r3, [r7, #0]
 8007706:	4599      	cmp	r9, r3
 8007708:	d3f6      	bcc.n	80076f8 <TestThread+0x208>
 800770a:	4839      	ldr	r0, [pc, #228]	; (80077f0 <TestThread+0x300>)
 800770c:	f7f9 f940 	bl	8000990 <test_println>
 8007710:	eb08 0386 	add.w	r3, r8, r6, lsl #2
 8007714:	462e      	mov	r6, r5
 8007716:	685b      	ldr	r3, [r3, #4]
 8007718:	2b00      	cmp	r3, #0
 800771a:	f47f af77 	bne.w	800760c <TestThread+0x11c>
 800771e:	9a01      	ldr	r2, [sp, #4]
 8007720:	b162      	cbz	r2, 800773c <TestThread+0x24c>
 8007722:	6813      	ldr	r3, [r2, #0]
 8007724:	4690      	mov	r8, r2
 8007726:	9a02      	ldr	r2, [sp, #8]
 8007728:	4611      	mov	r1, r2
 800772a:	f851 2f04 	ldr.w	r2, [r1, #4]!
 800772e:	9201      	str	r2, [sp, #4]
 8007730:	9102      	str	r1, [sp, #8]
 8007732:	e765      	b.n	8007600 <TestThread+0x110>
 8007734:	482f      	ldr	r0, [pc, #188]	; (80077f4 <TestThread+0x304>)
 8007736:	f7f9 f92b 	bl	8000990 <test_println>
 800773a:	e7e9      	b.n	8007710 <TestThread+0x220>
 800773c:	f7f9 f860 	bl	8000800 <print_line>
 8007740:	4d2d      	ldr	r5, [pc, #180]	; (80077f8 <TestThread+0x308>)
 8007742:	480f      	ldr	r0, [pc, #60]	; (8007780 <TestThread+0x290>)
 8007744:	f7f9 f924 	bl	8000990 <test_println>
 8007748:	2146      	movs	r1, #70	; 0x46
 800774a:	6820      	ldr	r0, [r4, #0]
 800774c:	6803      	ldr	r3, [r0, #0]
 800774e:	689b      	ldr	r3, [r3, #8]
 8007750:	4798      	blx	r3
 8007752:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8007756:	2900      	cmp	r1, #0
 8007758:	d1f7      	bne.n	800774a <TestThread+0x25a>
 800775a:	4b1e      	ldr	r3, [pc, #120]	; (80077d4 <TestThread+0x2e4>)
 800775c:	781b      	ldrb	r3, [r3, #0]
 800775e:	b92b      	cbnz	r3, 800776c <TestThread+0x27c>
 8007760:	4826      	ldr	r0, [pc, #152]	; (80077fc <TestThread+0x30c>)
 8007762:	b005      	add	sp, #20
 8007764:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007768:	f7f9 b912 	b.w	8000990 <test_println>
 800776c:	4824      	ldr	r0, [pc, #144]	; (8007800 <TestThread+0x310>)
 800776e:	b005      	add	sp, #20
 8007770:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007774:	f7f9 b90c 	b.w	8000990 <test_println>
 8007778:	200014c0 	.word	0x200014c0
 800777c:	080086e0 	.word	0x080086e0
 8007780:	080090f4 	.word	0x080090f4
 8007784:	080087c0 	.word	0x080087c0
 8007788:	080087dc 	.word	0x080087dc
 800778c:	08008ab8 	.word	0x08008ab8
 8007790:	080086f4 	.word	0x080086f4
 8007794:	080087e0 	.word	0x080087e0
 8007798:	08008708 	.word	0x08008708
 800779c:	08008ad4 	.word	0x08008ad4
 80077a0:	0800871c 	.word	0x0800871c
 80077a4:	08008b30 	.word	0x08008b30
 80077a8:	08008730 	.word	0x08008730
 80077ac:	08008b50 	.word	0x08008b50
 80077b0:	08008744 	.word	0x08008744
 80077b4:	08008b70 	.word	0x08008b70
 80077b8:	08008758 	.word	0x08008758
 80077bc:	08008b9c 	.word	0x08008b9c
 80077c0:	0800876c 	.word	0x0800876c
 80077c4:	08008f74 	.word	0x08008f74
 80077c8:	08008bdc 	.word	0x08008bdc
 80077cc:	08008fe0 	.word	0x08008fe0
 80077d0:	20001d18 	.word	0x20001d18
 80077d4:	20001cc8 	.word	0x20001cc8
 80077d8:	08009910 	.word	0x08009910
 80077dc:	08008780 	.word	0x08008780
 80077e0:	080087f8 	.word	0x080087f8
 80077e4:	20001cf4 	.word	0x20001cf4
 80077e8:	20001d08 	.word	0x20001d08
 80077ec:	200015cc 	.word	0x200015cc
 80077f0:	080087fc 	.word	0x080087fc
 80077f4:	08008800 	.word	0x08008800
 80077f8:	080087b0 	.word	0x080087b0
 80077fc:	0800880c 	.word	0x0800880c
 8007800:	08008814 	.word	0x08008814
 8007804:	08008fd0 	.word	0x08008fd0
 8007808:	20001624 	.word	0x20001624
 800780c:	08008790 	.word	0x08008790
 8007810:	08008794 	.word	0x08008794
 8007814:	080087ac 	.word	0x080087ac
	...

08007820 <chThdExitS>:
 8007820:	b538      	push	{r3, r4, r5, lr}
 8007822:	4b0e      	ldr	r3, [pc, #56]	; (800785c <chThdExitS+0x3c>)
 8007824:	699c      	ldr	r4, [r3, #24]
 8007826:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007828:	6220      	str	r0, [r4, #32]
 800782a:	f104 0524 	add.w	r5, r4, #36	; 0x24
 800782e:	42ab      	cmp	r3, r5
 8007830:	d007      	beq.n	8007842 <chThdExitS+0x22>
 8007832:	681a      	ldr	r2, [r3, #0]
 8007834:	6262      	str	r2, [r4, #36]	; 0x24
 8007836:	4618      	mov	r0, r3
 8007838:	f7f9 ffe2 	bl	8001800 <chSchReadyI>
 800783c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800783e:	42ab      	cmp	r3, r5
 8007840:	d1f7      	bne.n	8007832 <chThdExitS+0x12>
 8007842:	7f63      	ldrb	r3, [r4, #29]
 8007844:	079b      	lsls	r3, r3, #30
 8007846:	d104      	bne.n	8007852 <chThdExitS+0x32>
 8007848:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 800784c:	611a      	str	r2, [r3, #16]
 800784e:	6922      	ldr	r2, [r4, #16]
 8007850:	6153      	str	r3, [r2, #20]
 8007852:	200f      	movs	r0, #15
 8007854:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007858:	f7fb bdf2 	b.w	8003440 <chSchGoSleepS>
 800785c:	20001370 	.word	0x20001370

08007860 <shell_thread>:
 8007860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007864:	4b7f      	ldr	r3, [pc, #508]	; (8007a64 <shell_thread+0x204>)
 8007866:	6804      	ldr	r4, [r0, #0]
 8007868:	699b      	ldr	r3, [r3, #24]
 800786a:	4a7f      	ldr	r2, [pc, #508]	; (8007a68 <shell_thread+0x208>)
 800786c:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8007870:	497e      	ldr	r1, [pc, #504]	; (8007a6c <shell_thread+0x20c>)
 8007872:	619a      	str	r2, [r3, #24]
 8007874:	b099      	sub	sp, #100	; 0x64
 8007876:	4620      	mov	r0, r4
 8007878:	f7fa fda2 	bl	80023c0 <chprintf.lto_priv.88>
 800787c:	f8df 8220 	ldr.w	r8, [pc, #544]	; 8007aa0 <shell_thread+0x240>
 8007880:	ae08      	add	r6, sp, #32
 8007882:	f10d 075f 	add.w	r7, sp, #95	; 0x5f
 8007886:	4641      	mov	r1, r8
 8007888:	4620      	mov	r0, r4
 800788a:	f7fa fd99 	bl	80023c0 <chprintf.lto_priv.88>
 800788e:	6822      	ldr	r2, [r4, #0]
 8007890:	4635      	mov	r5, r6
 8007892:	6853      	ldr	r3, [r2, #4]
 8007894:	f10d 0107 	add.w	r1, sp, #7
 8007898:	2201      	movs	r2, #1
 800789a:	4620      	mov	r0, r4
 800789c:	4798      	blx	r3
 800789e:	2800      	cmp	r0, #0
 80078a0:	d070      	beq.n	8007984 <shell_thread+0x124>
 80078a2:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80078a6:	2b04      	cmp	r3, #4
 80078a8:	d068      	beq.n	800797c <shell_thread+0x11c>
 80078aa:	2b08      	cmp	r3, #8
 80078ac:	d012      	beq.n	80078d4 <shell_thread+0x74>
 80078ae:	2b7f      	cmp	r3, #127	; 0x7f
 80078b0:	4619      	mov	r1, r3
 80078b2:	4620      	mov	r0, r4
 80078b4:	d00e      	beq.n	80078d4 <shell_thread+0x74>
 80078b6:	2b0d      	cmp	r3, #13
 80078b8:	d021      	beq.n	80078fe <shell_thread+0x9e>
 80078ba:	2b1f      	cmp	r3, #31
 80078bc:	6822      	ldr	r2, [r4, #0]
 80078be:	d9e8      	bls.n	8007892 <shell_thread+0x32>
 80078c0:	42bd      	cmp	r5, r7
 80078c2:	d2e6      	bcs.n	8007892 <shell_thread+0x32>
 80078c4:	6893      	ldr	r3, [r2, #8]
 80078c6:	4798      	blx	r3
 80078c8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80078cc:	702b      	strb	r3, [r5, #0]
 80078ce:	6822      	ldr	r2, [r4, #0]
 80078d0:	3501      	adds	r5, #1
 80078d2:	e7de      	b.n	8007892 <shell_thread+0x32>
 80078d4:	42b5      	cmp	r5, r6
 80078d6:	4619      	mov	r1, r3
 80078d8:	4620      	mov	r0, r4
 80078da:	6822      	ldr	r2, [r4, #0]
 80078dc:	d0d9      	beq.n	8007892 <shell_thread+0x32>
 80078de:	6893      	ldr	r3, [r2, #8]
 80078e0:	4798      	blx	r3
 80078e2:	6823      	ldr	r3, [r4, #0]
 80078e4:	2120      	movs	r1, #32
 80078e6:	689b      	ldr	r3, [r3, #8]
 80078e8:	4620      	mov	r0, r4
 80078ea:	4798      	blx	r3
 80078ec:	6823      	ldr	r3, [r4, #0]
 80078ee:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80078f2:	689b      	ldr	r3, [r3, #8]
 80078f4:	4620      	mov	r0, r4
 80078f6:	4798      	blx	r3
 80078f8:	3d01      	subs	r5, #1
 80078fa:	6822      	ldr	r2, [r4, #0]
 80078fc:	e7c9      	b.n	8007892 <shell_thread+0x32>
 80078fe:	495c      	ldr	r1, [pc, #368]	; (8007a70 <shell_thread+0x210>)
 8007900:	f7fa fd5e 	bl	80023c0 <chprintf.lto_priv.88>
 8007904:	2300      	movs	r3, #0
 8007906:	a902      	add	r1, sp, #8
 8007908:	702b      	strb	r3, [r5, #0]
 800790a:	4630      	mov	r0, r6
 800790c:	461d      	mov	r5, r3
 800790e:	f7fa fd2f 	bl	8002370 <_strtok.constprop.2>
 8007912:	a902      	add	r1, sp, #8
 8007914:	4683      	mov	fp, r0
 8007916:	2000      	movs	r0, #0
 8007918:	f10d 0a0c 	add.w	sl, sp, #12
 800791c:	f7fa fd28 	bl	8002370 <_strtok.constprop.2>
 8007920:	b150      	cbz	r0, 8007938 <shell_thread+0xd8>
 8007922:	2d04      	cmp	r5, #4
 8007924:	d023      	beq.n	800796e <shell_thread+0x10e>
 8007926:	f84a 0b04 	str.w	r0, [sl], #4
 800792a:	a902      	add	r1, sp, #8
 800792c:	2000      	movs	r0, #0
 800792e:	3501      	adds	r5, #1
 8007930:	f7fa fd1e 	bl	8002370 <_strtok.constprop.2>
 8007934:	2800      	cmp	r0, #0
 8007936:	d1f4      	bne.n	8007922 <shell_thread+0xc2>
 8007938:	ab18      	add	r3, sp, #96	; 0x60
 800793a:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 800793e:	f843 0c54 	str.w	r0, [r3, #-84]
 8007942:	f1bb 0f00 	cmp.w	fp, #0
 8007946:	d09e      	beq.n	8007886 <shell_thread+0x26>
 8007948:	494a      	ldr	r1, [pc, #296]	; (8007a74 <shell_thread+0x214>)
 800794a:	4658      	mov	r0, fp
 800794c:	f000 fe20 	bl	8008590 <strcasecmp>
 8007950:	b9e8      	cbnz	r0, 800798e <shell_thread+0x12e>
 8007952:	bb45      	cbnz	r5, 80079a6 <shell_thread+0x146>
 8007954:	2320      	movs	r3, #32
 8007956:	f383 8811 	msr	BASEPRI, r3
 800795a:	2100      	movs	r1, #0
 800795c:	4846      	ldr	r0, [pc, #280]	; (8007a78 <shell_thread+0x218>)
 800795e:	f7fa f89f 	bl	8001aa0 <chEvtBroadcastFlagsI>
 8007962:	2000      	movs	r0, #0
 8007964:	f7ff ff5c 	bl	8007820 <chThdExitS>
 8007968:	b019      	add	sp, #100	; 0x64
 800796a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800796e:	4943      	ldr	r1, [pc, #268]	; (8007a7c <shell_thread+0x21c>)
 8007970:	4620      	mov	r0, r4
 8007972:	f7fa fd25 	bl	80023c0 <chprintf.lto_priv.88>
 8007976:	2300      	movs	r3, #0
 8007978:	9307      	str	r3, [sp, #28]
 800797a:	e784      	b.n	8007886 <shell_thread+0x26>
 800797c:	4940      	ldr	r1, [pc, #256]	; (8007a80 <shell_thread+0x220>)
 800797e:	4620      	mov	r0, r4
 8007980:	f7fa fd1e 	bl	80023c0 <chprintf.lto_priv.88>
 8007984:	4620      	mov	r0, r4
 8007986:	493f      	ldr	r1, [pc, #252]	; (8007a84 <shell_thread+0x224>)
 8007988:	f7fa fd1a 	bl	80023c0 <chprintf.lto_priv.88>
 800798c:	e7e2      	b.n	8007954 <shell_thread+0xf4>
 800798e:	493e      	ldr	r1, [pc, #248]	; (8007a88 <shell_thread+0x228>)
 8007990:	4658      	mov	r0, fp
 8007992:	f000 fdfd 	bl	8008590 <strcasecmp>
 8007996:	b960      	cbnz	r0, 80079b2 <shell_thread+0x152>
 8007998:	b305      	cbz	r5, 80079dc <shell_thread+0x17c>
 800799a:	4a3b      	ldr	r2, [pc, #236]	; (8007a88 <shell_thread+0x228>)
 800799c:	493b      	ldr	r1, [pc, #236]	; (8007a8c <shell_thread+0x22c>)
 800799e:	4620      	mov	r0, r4
 80079a0:	f7fa fd0e 	bl	80023c0 <chprintf.lto_priv.88>
 80079a4:	e76f      	b.n	8007886 <shell_thread+0x26>
 80079a6:	4a33      	ldr	r2, [pc, #204]	; (8007a74 <shell_thread+0x214>)
 80079a8:	4938      	ldr	r1, [pc, #224]	; (8007a8c <shell_thread+0x22c>)
 80079aa:	4620      	mov	r0, r4
 80079ac:	f7fa fd08 	bl	80023c0 <chprintf.lto_priv.88>
 80079b0:	e769      	b.n	8007886 <shell_thread+0x26>
 80079b2:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 8007aa4 <shell_thread+0x244>
 80079b6:	f8da 0000 	ldr.w	r0, [sl]
 80079ba:	b918      	cbnz	r0, 80079c4 <shell_thread+0x164>
 80079bc:	e036      	b.n	8007a2c <shell_thread+0x1cc>
 80079be:	f85a 0f08 	ldr.w	r0, [sl, #8]!
 80079c2:	b398      	cbz	r0, 8007a2c <shell_thread+0x1cc>
 80079c4:	4659      	mov	r1, fp
 80079c6:	f000 fde3 	bl	8008590 <strcasecmp>
 80079ca:	2800      	cmp	r0, #0
 80079cc:	d1f7      	bne.n	80079be <shell_thread+0x15e>
 80079ce:	f8da 3004 	ldr.w	r3, [sl, #4]
 80079d2:	aa03      	add	r2, sp, #12
 80079d4:	4629      	mov	r1, r5
 80079d6:	4620      	mov	r0, r4
 80079d8:	4798      	blx	r3
 80079da:	e754      	b.n	8007886 <shell_thread+0x26>
 80079dc:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8007aa4 <shell_thread+0x244>
 80079e0:	492b      	ldr	r1, [pc, #172]	; (8007a90 <shell_thread+0x230>)
 80079e2:	4620      	mov	r0, r4
 80079e4:	f7fa fcec 	bl	80023c0 <chprintf.lto_priv.88>
 80079e8:	f8da 2000 	ldr.w	r2, [sl]
 80079ec:	b142      	cbz	r2, 8007a00 <shell_thread+0x1a0>
 80079ee:	4d29      	ldr	r5, [pc, #164]	; (8007a94 <shell_thread+0x234>)
 80079f0:	4629      	mov	r1, r5
 80079f2:	4620      	mov	r0, r4
 80079f4:	f7fa fce4 	bl	80023c0 <chprintf.lto_priv.88>
 80079f8:	f85a 2f08 	ldr.w	r2, [sl, #8]!
 80079fc:	2a00      	cmp	r2, #0
 80079fe:	d1f7      	bne.n	80079f0 <shell_thread+0x190>
 8007a00:	f1b9 0f00 	cmp.w	r9, #0
 8007a04:	d00d      	beq.n	8007a22 <shell_thread+0x1c2>
 8007a06:	f8d9 2000 	ldr.w	r2, [r9]
 8007a0a:	b152      	cbz	r2, 8007a22 <shell_thread+0x1c2>
 8007a0c:	f8df a084 	ldr.w	sl, [pc, #132]	; 8007a94 <shell_thread+0x234>
 8007a10:	464d      	mov	r5, r9
 8007a12:	4651      	mov	r1, sl
 8007a14:	4620      	mov	r0, r4
 8007a16:	f7fa fcd3 	bl	80023c0 <chprintf.lto_priv.88>
 8007a1a:	f855 2f08 	ldr.w	r2, [r5, #8]!
 8007a1e:	2a00      	cmp	r2, #0
 8007a20:	d1f7      	bne.n	8007a12 <shell_thread+0x1b2>
 8007a22:	4913      	ldr	r1, [pc, #76]	; (8007a70 <shell_thread+0x210>)
 8007a24:	4620      	mov	r0, r4
 8007a26:	f7fa fccb 	bl	80023c0 <chprintf.lto_priv.88>
 8007a2a:	e72c      	b.n	8007886 <shell_thread+0x26>
 8007a2c:	f1b9 0f00 	cmp.w	r9, #0
 8007a30:	d00d      	beq.n	8007a4e <shell_thread+0x1ee>
 8007a32:	f8d9 0000 	ldr.w	r0, [r9]
 8007a36:	b150      	cbz	r0, 8007a4e <shell_thread+0x1ee>
 8007a38:	46ca      	mov	sl, r9
 8007a3a:	e002      	b.n	8007a42 <shell_thread+0x1e2>
 8007a3c:	f85a 0f08 	ldr.w	r0, [sl, #8]!
 8007a40:	b128      	cbz	r0, 8007a4e <shell_thread+0x1ee>
 8007a42:	4659      	mov	r1, fp
 8007a44:	f000 fda4 	bl	8008590 <strcasecmp>
 8007a48:	2800      	cmp	r0, #0
 8007a4a:	d1f7      	bne.n	8007a3c <shell_thread+0x1dc>
 8007a4c:	e7bf      	b.n	80079ce <shell_thread+0x16e>
 8007a4e:	465a      	mov	r2, fp
 8007a50:	4911      	ldr	r1, [pc, #68]	; (8007a98 <shell_thread+0x238>)
 8007a52:	4620      	mov	r0, r4
 8007a54:	f7fa fcb4 	bl	80023c0 <chprintf.lto_priv.88>
 8007a58:	4910      	ldr	r1, [pc, #64]	; (8007a9c <shell_thread+0x23c>)
 8007a5a:	4620      	mov	r0, r4
 8007a5c:	f7fa fcb0 	bl	80023c0 <chprintf.lto_priv.88>
 8007a60:	e711      	b.n	8007886 <shell_thread+0x26>
 8007a62:	bf00      	nop
 8007a64:	20001370 	.word	0x20001370
 8007a68:	08009070 	.word	0x08009070
 8007a6c:	08009078 	.word	0x08009078
 8007a70:	08008c14 	.word	0x08008c14
 8007a74:	080090c0 	.word	0x080090c0
 8007a78:	20001658 	.word	0x20001658
 8007a7c:	080090a8 	.word	0x080090a8
 8007a80:	08009098 	.word	0x08009098
 8007a84:	0800909c 	.word	0x0800909c
 8007a88:	080090c8 	.word	0x080090c8
 8007a8c:	08008cc8 	.word	0x08008cc8
 8007a90:	080090d0 	.word	0x080090d0
 8007a94:	080090e8 	.word	0x080090e8
 8007a98:	080090ec 	.word	0x080090ec
 8007a9c:	080090f0 	.word	0x080090f0
 8007aa0:	08009090 	.word	0x08009090
 8007aa4:	2000083c 	.word	0x2000083c
	...

08007ab0 <main>:
 8007ab0:	4b1a      	ldr	r3, [pc, #104]	; (8007b1c <main+0x6c>)
 8007ab2:	4c1b      	ldr	r4, [pc, #108]	; (8007b20 <main+0x70>)
 8007ab4:	691a      	ldr	r2, [r3, #16]
 8007ab6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8007aba:	2200      	movs	r2, #0
 8007abc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8007ac0:	6119      	str	r1, [r3, #16]
 8007ac2:	611a      	str	r2, [r3, #16]
 8007ac4:	6958      	ldr	r0, [r3, #20]
 8007ac6:	6159      	str	r1, [r3, #20]
 8007ac8:	615a      	str	r2, [r3, #20]
 8007aca:	6a18      	ldr	r0, [r3, #32]
 8007acc:	f060 5080 	orn	r0, r0, #268435456	; 0x10000000
 8007ad0:	6218      	str	r0, [r3, #32]
 8007ad2:	621a      	str	r2, [r3, #32]
 8007ad4:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8007ad6:	6259      	str	r1, [r3, #36]	; 0x24
 8007ad8:	625a      	str	r2, [r3, #36]	; 0x24
 8007ada:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8007adc:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8007ae0:	6419      	str	r1, [r3, #64]	; 0x40
 8007ae2:	6821      	ldr	r1, [r4, #0]
 8007ae4:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8007ae8:	6021      	str	r1, [r4, #0]
 8007aea:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8007aec:	f401 7140 	and.w	r1, r1, #768	; 0x300
 8007af0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8007af4:	b08b      	sub	sp, #44	; 0x2c
 8007af6:	d003      	beq.n	8007b00 <main+0x50>
 8007af8:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 8007afc:	6719      	str	r1, [r3, #112]	; 0x70
 8007afe:	671a      	str	r2, [r3, #112]	; 0x70
 8007b00:	4907      	ldr	r1, [pc, #28]	; (8007b20 <main+0x70>)
 8007b02:	4c08      	ldr	r4, [pc, #32]	; (8007b24 <main+0x74>)
 8007b04:	684b      	ldr	r3, [r1, #4]
 8007b06:	4a08      	ldr	r2, [pc, #32]	; (8007b28 <main+0x78>)
 8007b08:	4808      	ldr	r0, [pc, #32]	; (8007b2c <main+0x7c>)
 8007b0a:	4e09      	ldr	r6, [pc, #36]	; (8007b30 <main+0x80>)
 8007b0c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8007b10:	604b      	str	r3, [r1, #4]
 8007b12:	2300      	movs	r3, #0
 8007b14:	6023      	str	r3, [r4, #0]
 8007b16:	461d      	mov	r5, r3
 8007b18:	e00e      	b.n	8007b38 <main+0x88>
 8007b1a:	bf00      	nop
 8007b1c:	40023800 	.word	0x40023800
 8007b20:	40007000 	.word	0x40007000
 8007b24:	20001568 	.word	0x20001568
 8007b28:	0800883c 	.word	0x0800883c
 8007b2c:	40026010 	.word	0x40026010
 8007b30:	200014e8 	.word	0x200014e8
 8007b34:	f852 0c0c 	ldr.w	r0, [r2, #-12]
 8007b38:	6005      	str	r5, [r0, #0]
 8007b3a:	f846 5033 	str.w	r5, [r6, r3, lsl #3]
 8007b3e:	3301      	adds	r3, #1
 8007b40:	2b10      	cmp	r3, #16
 8007b42:	f102 020c 	add.w	r2, r2, #12
 8007b46:	d1f5      	bne.n	8007b34 <main+0x84>
 8007b48:	f8df a380 	ldr.w	sl, [pc, #896]	; 8007ecc <main+0x41c>
 8007b4c:	4acb      	ldr	r2, [pc, #812]	; (8007e7c <main+0x3cc>)
 8007b4e:	9303      	str	r3, [sp, #12]
 8007b50:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8007b54:	f8ca 3008 	str.w	r3, [sl, #8]
 8007b58:	f8ca 300c 	str.w	r3, [sl, #12]
 8007b5c:	6093      	str	r3, [r2, #8]
 8007b5e:	60d3      	str	r3, [r2, #12]
 8007b60:	f5a2 5230 	sub.w	r2, r2, #11264	; 0x2c00
 8007b64:	4617      	mov	r7, r2
 8007b66:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8007b68:	f8df 9364 	ldr.w	r9, [pc, #868]	; 8007ed0 <main+0x420>
 8007b6c:	f8df b364 	ldr.w	fp, [pc, #868]	; 8007ed4 <main+0x424>
 8007b70:	f8df 8364 	ldr.w	r8, [pc, #868]	; 8007ed8 <main+0x428>
 8007b74:	f8df e364 	ldr.w	lr, [pc, #868]	; 8007edc <main+0x42c>
 8007b78:	49c1      	ldr	r1, [pc, #772]	; (8007e80 <main+0x3d0>)
 8007b7a:	f8df c364 	ldr.w	ip, [pc, #868]	; 8007ee0 <main+0x430>
 8007b7e:	4ec1      	ldr	r6, [pc, #772]	; (8007e84 <main+0x3d4>)
 8007b80:	4cc1      	ldr	r4, [pc, #772]	; (8007e88 <main+0x3d8>)
 8007b82:	48c2      	ldr	r0, [pc, #776]	; (8007e8c <main+0x3dc>)
 8007b84:	f240 1aff 	movw	sl, #511	; 0x1ff
 8007b88:	ea42 020a 	orr.w	r2, r2, sl
 8007b8c:	633a      	str	r2, [r7, #48]	; 0x30
 8007b8e:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8007b90:	ea42 0a0a 	orr.w	sl, r2, sl
 8007b94:	f8c7 a050 	str.w	sl, [r7, #80]	; 0x50
 8007b98:	f46f 4aa8 	mvn.w	sl, #21504	; 0x5400
 8007b9c:	f8c9 5004 	str.w	r5, [r9, #4]
 8007ba0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007ba4:	f8c9 a008 	str.w	sl, [r9, #8]
 8007ba8:	f8df a338 	ldr.w	sl, [pc, #824]	; 8007ee4 <main+0x434>
 8007bac:	f8c9 b00c 	str.w	fp, [r9, #12]
 8007bb0:	f8c9 2014 	str.w	r2, [r9, #20]
 8007bb4:	f8c9 a020 	str.w	sl, [r9, #32]
 8007bb8:	f8df a32c 	ldr.w	sl, [pc, #812]	; 8007ee8 <main+0x438>
 8007bbc:	f8c9 a024 	str.w	sl, [r9, #36]	; 0x24
 8007bc0:	f10a 5a2a 	add.w	sl, sl, #713031680	; 0x2a800000
 8007bc4:	f50a 1ab0 	add.w	sl, sl, #1441792	; 0x160000
 8007bc8:	f8c9 a000 	str.w	sl, [r9]
 8007bcc:	f44f 7910 	mov.w	r9, #576	; 0x240
 8007bd0:	f8c8 9004 	str.w	r9, [r8, #4]
 8007bd4:	f8df a314 	ldr.w	sl, [pc, #788]	; 8007eec <main+0x43c>
 8007bd8:	f8c8 3008 	str.w	r3, [r8, #8]
 8007bdc:	f04f 6980 	mov.w	r9, #67108864	; 0x4000000
 8007be0:	f8c8 a00c 	str.w	sl, [r8, #12]
 8007be4:	f8c8 2014 	str.w	r2, [r8, #20]
 8007be8:	f8c8 9020 	str.w	r9, [r8, #32]
 8007bec:	f8df 9300 	ldr.w	r9, [pc, #768]	; 8007ef0 <main+0x440>
 8007bf0:	f8df b300 	ldr.w	fp, [pc, #768]	; 8007ef4 <main+0x444>
 8007bf4:	f04f 0a40 	mov.w	sl, #64	; 0x40
 8007bf8:	f8c8 a024 	str.w	sl, [r8, #36]	; 0x24
 8007bfc:	f8c8 9000 	str.w	r9, [r8]
 8007c00:	f109 49aa 	add.w	r9, r9, #1426063360	; 0x55000000
 8007c04:	f5a9 0943 	sub.w	r9, r9, #12779520	; 0xc30000
 8007c08:	f6a9 392c 	subw	r9, r9, #2860	; 0xb2c
 8007c0c:	f8ce 5004 	str.w	r5, [lr, #4]
 8007c10:	f8ce 3008 	str.w	r3, [lr, #8]
 8007c14:	f8ce 900c 	str.w	r9, [lr, #12]
 8007c18:	f04f 49c0 	mov.w	r9, #1610612736	; 0x60000000
 8007c1c:	f8ce 2014 	str.w	r2, [lr, #20]
 8007c20:	f8df 82d4 	ldr.w	r8, [pc, #724]	; 8007ef8 <main+0x448>
 8007c24:	f8ce 9020 	str.w	r9, [lr, #32]
 8007c28:	f8df 92d0 	ldr.w	r9, [pc, #720]	; 8007efc <main+0x44c>
 8007c2c:	f8ce 8024 	str.w	r8, [lr, #36]	; 0x24
 8007c30:	4657      	mov	r7, sl
 8007c32:	f8ce 9000 	str.w	r9, [lr]
 8007c36:	f8df 82c8 	ldr.w	r8, [pc, #712]	; 8007f00 <main+0x450>
 8007c3a:	f8df e2c8 	ldr.w	lr, [pc, #712]	; 8007f04 <main+0x454>
 8007c3e:	f8cc 5004 	str.w	r5, [ip, #4]
 8007c42:	f640 79ff 	movw	r9, #4095	; 0xfff
 8007c46:	f8cc 3008 	str.w	r3, [ip, #8]
 8007c4a:	f8cc 800c 	str.w	r8, [ip, #12]
 8007c4e:	f8cc 9014 	str.w	r9, [ip, #20]
 8007c52:	f8cc 5020 	str.w	r5, [ip, #32]
 8007c56:	f8cc 5024 	str.w	r5, [ip, #36]	; 0x24
 8007c5a:	f8cc e000 	str.w	lr, [ip]
 8007c5e:	6075      	str	r5, [r6, #4]
 8007c60:	60b3      	str	r3, [r6, #8]
 8007c62:	60f5      	str	r5, [r6, #12]
 8007c64:	6172      	str	r2, [r6, #20]
 8007c66:	6235      	str	r5, [r6, #32]
 8007c68:	6275      	str	r5, [r6, #36]	; 0x24
 8007c6a:	6037      	str	r7, [r6, #0]
 8007c6c:	6065      	str	r5, [r4, #4]
 8007c6e:	60a3      	str	r3, [r4, #8]
 8007c70:	60e5      	str	r5, [r4, #12]
 8007c72:	6162      	str	r2, [r4, #20]
 8007c74:	6225      	str	r5, [r4, #32]
 8007c76:	6265      	str	r5, [r4, #36]	; 0x24
 8007c78:	6025      	str	r5, [r4, #0]
 8007c7a:	6045      	str	r5, [r0, #4]
 8007c7c:	6083      	str	r3, [r0, #8]
 8007c7e:	60c5      	str	r5, [r0, #12]
 8007c80:	6142      	str	r2, [r0, #20]
 8007c82:	6205      	str	r5, [r0, #32]
 8007c84:	6245      	str	r5, [r0, #36]	; 0x24
 8007c86:	6005      	str	r5, [r0, #0]
 8007c88:	604d      	str	r5, [r1, #4]
 8007c8a:	608b      	str	r3, [r1, #8]
 8007c8c:	60cd      	str	r5, [r1, #12]
 8007c8e:	614a      	str	r2, [r1, #20]
 8007c90:	620d      	str	r5, [r1, #32]
 8007c92:	624d      	str	r5, [r1, #36]	; 0x24
 8007c94:	600d      	str	r5, [r1, #0]
 8007c96:	f8c1 5404 	str.w	r5, [r1, #1028]	; 0x404
 8007c9a:	f8c1 3408 	str.w	r3, [r1, #1032]	; 0x408
 8007c9e:	f8c1 540c 	str.w	r5, [r1, #1036]	; 0x40c
 8007ca2:	f8c1 2414 	str.w	r2, [r1, #1044]	; 0x414
 8007ca6:	f8c1 5420 	str.w	r5, [r1, #1056]	; 0x420
 8007caa:	f8c1 5424 	str.w	r5, [r1, #1060]	; 0x424
 8007cae:	f8c1 5400 	str.w	r5, [r1, #1024]	; 0x400
 8007cb2:	4977      	ldr	r1, [pc, #476]	; (8007e90 <main+0x3e0>)
 8007cb4:	f8df 8250 	ldr.w	r8, [pc, #592]	; 8007f08 <main+0x458>
 8007cb8:	4c75      	ldr	r4, [pc, #468]	; (8007e90 <main+0x3e0>)
 8007cba:	f841 8b04 	str.w	r8, [r1], #4
 8007cbe:	460f      	mov	r7, r1
 8007cc0:	4621      	mov	r1, r4
 8007cc2:	f104 0874 	add.w	r8, r4, #116	; 0x74
 8007cc6:	6165      	str	r5, [r4, #20]
 8007cc8:	62a5      	str	r5, [r4, #40]	; 0x28
 8007cca:	62e4      	str	r4, [r4, #44]	; 0x2c
 8007ccc:	9c03      	ldr	r4, [sp, #12]
 8007cce:	638c      	str	r4, [r1, #56]	; 0x38
 8007cd0:	f5a0 30ea 	sub.w	r0, r0, #119808	; 0x1d400
 8007cd4:	460c      	mov	r4, r1
 8007cd6:	6748      	str	r0, [r1, #116]	; 0x74
 8007cd8:	f8df c230 	ldr.w	ip, [pc, #560]	; 8007f0c <main+0x45c>
 8007cdc:	4a6d      	ldr	r2, [pc, #436]	; (8007e94 <main+0x3e4>)
 8007cde:	f8df 9230 	ldr.w	r9, [pc, #560]	; 8007f10 <main+0x460>
 8007ce2:	f8c1 8040 	str.w	r8, [r1, #64]	; 0x40
 8007ce6:	4638      	mov	r0, r7
 8007ce8:	340c      	adds	r4, #12
 8007cea:	460f      	mov	r7, r1
 8007cec:	64ca      	str	r2, [r1, #76]	; 0x4c
 8007cee:	6048      	str	r0, [r1, #4]
 8007cf0:	e9c1 4403 	strd	r4, r4, [r1, #12]
 8007cf4:	f101 0030 	add.w	r0, r1, #48	; 0x30
 8007cf8:	6509      	str	r1, [r1, #80]	; 0x50
 8007cfa:	460a      	mov	r2, r1
 8007cfc:	3154      	adds	r1, #84	; 0x54
 8007cfe:	f04f 0801 	mov.w	r8, #1
 8007d02:	f8df a210 	ldr.w	sl, [pc, #528]	; 8007f14 <main+0x464>
 8007d06:	61b9      	str	r1, [r7, #24]
 8007d08:	3264      	adds	r2, #100	; 0x64
 8007d0a:	e9c7 1108 	strd	r1, r1, [r7, #32]
 8007d0e:	f10c 0424 	add.w	r4, ip, #36	; 0x24
 8007d12:	2104      	movs	r1, #4
 8007d14:	61fa      	str	r2, [r7, #28]
 8007d16:	63fa      	str	r2, [r7, #60]	; 0x3c
 8007d18:	e9c7 2211 	strd	r2, r2, [r7, #68]	; 0x44
 8007d1c:	e9c7 000c 	strd	r0, r0, [r7, #48]	; 0x30
 8007d20:	f887 8008 	strb.w	r8, [r7, #8]
 8007d24:	f889 8000 	strb.w	r8, [r9]
 8007d28:	f8c9 5004 	str.w	r5, [r9, #4]
 8007d2c:	f8c9 500c 	str.w	r5, [r9, #12]
 8007d30:	4f59      	ldr	r7, [pc, #356]	; (8007e98 <main+0x3e8>)
 8007d32:	f889 1010 	strb.w	r1, [r9, #16]
 8007d36:	f8cb 4024 	str.w	r4, [fp, #36]	; 0x24
 8007d3a:	4c58      	ldr	r4, [pc, #352]	; (8007e9c <main+0x3ec>)
 8007d3c:	f8ca 401c 	str.w	r4, [sl, #28]
 8007d40:	4c57      	ldr	r4, [pc, #348]	; (8007ea0 <main+0x3f0>)
 8007d42:	4e58      	ldr	r6, [pc, #352]	; (8007ea4 <main+0x3f4>)
 8007d44:	f8cb 701c 	str.w	r7, [fp, #28]
 8007d48:	f10b 020c 	add.w	r2, fp, #12
 8007d4c:	f507 3784 	add.w	r7, r7, #67584	; 0x10800
 8007d50:	f8df e1c4 	ldr.w	lr, [pc, #452]	; 8007f18 <main+0x468>
 8007d54:	4854      	ldr	r0, [pc, #336]	; (8007ea8 <main+0x3f8>)
 8007d56:	4955      	ldr	r1, [pc, #340]	; (8007eac <main+0x3fc>)
 8007d58:	f8c9 e018 	str.w	lr, [r9, #24]
 8007d5c:	f8cb c020 	str.w	ip, [fp, #32]
 8007d60:	f1ac 0e3c 	sub.w	lr, ip, #60	; 0x3c
 8007d64:	e9cb 2203 	strd	r2, r2, [fp, #12]
 8007d68:	f8ca 4028 	str.w	r4, [sl, #40]	; 0x28
 8007d6c:	f10a 020c 	add.w	r2, sl, #12
 8007d70:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 8007d74:	3430      	adds	r4, #48	; 0x30
 8007d76:	f8ca e020 	str.w	lr, [sl, #32]
 8007d7a:	e9cb 010a 	strd	r0, r1, [fp, #40]	; 0x28
 8007d7e:	f8ca c024 	str.w	ip, [sl, #36]	; 0x24
 8007d82:	f8ca 402c 	str.w	r4, [sl, #44]	; 0x2c
 8007d86:	e9ca 2203 	strd	r2, r2, [sl, #12]
 8007d8a:	f88b 8000 	strb.w	r8, [fp]
 8007d8e:	e9cb 5501 	strd	r5, r5, [fp, #4]
 8007d92:	f8cb 5014 	str.w	r5, [fp, #20]
 8007d96:	4846      	ldr	r0, [pc, #280]	; (8007eb0 <main+0x400>)
 8007d98:	f88a 8000 	strb.w	r8, [sl]
 8007d9c:	e9ca 5501 	strd	r5, r5, [sl, #4]
 8007da0:	f8ca 5014 	str.w	r5, [sl, #20]
 8007da4:	f886 8000 	strb.w	r8, [r6]
 8007da8:	61f5      	str	r5, [r6, #28]
 8007daa:	62b5      	str	r5, [r6, #40]	; 0x28
 8007dac:	6235      	str	r5, [r6, #32]
 8007dae:	62f5      	str	r5, [r6, #44]	; 0x2c
 8007db0:	6275      	str	r5, [r6, #36]	; 0x24
 8007db2:	6335      	str	r5, [r6, #48]	; 0x30
 8007db4:	e9c6 5501 	strd	r5, r5, [r6, #4]
 8007db8:	6635      	str	r5, [r6, #96]	; 0x60
 8007dba:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8007dbc:	6675      	str	r5, [r6, #100]	; 0x64
 8007dbe:	f04f 41a0 	mov.w	r1, #1342177280	; 0x50000000
 8007dc2:	e9c6 1014 	strd	r1, r0, [r6, #80]	; 0x50
 8007dc6:	ea42 0208 	orr.w	r2, r2, r8
 8007dca:	483a      	ldr	r0, [pc, #232]	; (8007eb4 <main+0x404>)
 8007dcc:	643a      	str	r2, [r7, #64]	; 0x40
 8007dce:	6882      	ldr	r2, [r0, #8]
 8007dd0:	4939      	ldr	r1, [pc, #228]	; (8007eb8 <main+0x408>)
 8007dd2:	4f3a      	ldr	r7, [pc, #232]	; (8007ebc <main+0x40c>)
 8007dd4:	4c3a      	ldr	r4, [pc, #232]	; (8007ec0 <main+0x410>)
 8007dd6:	f8df c144 	ldr.w	ip, [pc, #324]	; 8007f1c <main+0x46c>
 8007dda:	ea42 0208 	orr.w	r2, r2, r8
 8007dde:	6082      	str	r2, [r0, #8]
 8007de0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8007de4:	f242 00cf 	movw	r0, #8399	; 0x20cf
 8007de8:	6290      	str	r0, [r2, #40]	; 0x28
 8007dea:	62d3      	str	r3, [r2, #44]	; 0x2c
 8007dec:	2080      	movs	r0, #128	; 0x80
 8007dee:	6195      	str	r5, [r2, #24]
 8007df0:	6355      	str	r5, [r2, #52]	; 0x34
 8007df2:	60d5      	str	r5, [r2, #12]
 8007df4:	6055      	str	r5, [r2, #4]
 8007df6:	f8c2 8014 	str.w	r8, [r2, #20]
 8007dfa:	f8c2 8000 	str.w	r8, [r2]
 8007dfe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007e02:	f887 031c 	strb.w	r0, [r7, #796]	; 0x31c
 8007e06:	f8c7 2180 	str.w	r2, [r7, #384]	; 0x180
 8007e0a:	603a      	str	r2, [r7, #0]
 8007e0c:	608d      	str	r5, [r1, #8]
 8007e0e:	68ca      	ldr	r2, [r1, #12]
 8007e10:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
 8007e14:	4002      	ands	r2, r0
 8007e16:	4314      	orrs	r4, r2
 8007e18:	60cc      	str	r4, [r1, #12]
 8007e1a:	f8dc 000c 	ldr.w	r0, [ip, #12]
 8007e1e:	4c29      	ldr	r4, [pc, #164]	; (8007ec4 <main+0x414>)
 8007e20:	4a29      	ldr	r2, [pc, #164]	; (8007ec8 <main+0x418>)
 8007e22:	f040 7080 	orr.w	r0, r0, #16777216	; 0x1000000
 8007e26:	f8cc 000c 	str.w	r0, [ip, #12]
 8007e2a:	6820      	ldr	r0, [r4, #0]
 8007e2c:	6052      	str	r2, [r2, #4]
 8007e2e:	ea40 0008 	orr.w	r0, r0, r8
 8007e32:	6020      	str	r0, [r4, #0]
 8007e34:	f04f 0720 	mov.w	r7, #32
 8007e38:	f102 041c 	add.w	r4, r2, #28
 8007e3c:	f89d 000c 	ldrb.w	r0, [sp, #12]
 8007e40:	77c8      	strb	r0, [r1, #31]
 8007e42:	f881 7022 	strb.w	r7, [r1, #34]	; 0x22
 8007e46:	a804      	add	r0, sp, #16
 8007e48:	6095      	str	r5, [r2, #8]
 8007e4a:	6012      	str	r2, [r2, #0]
 8007e4c:	e9c2 2204 	strd	r2, r2, [r2, #16]
 8007e50:	e9c2 3509 	strd	r3, r5, [r2, #36]	; 0x24
 8007e54:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8007e58:	e9c2 4407 	strd	r4, r4, [r2, #28]
 8007e5c:	2300      	movs	r3, #0
 8007e5e:	2400      	movs	r4, #0
 8007e60:	e9cd 3408 	strd	r3, r4, [sp, #32]
 8007e64:	6755      	str	r5, [r2, #116]	; 0x74
 8007e66:	e9cd 5505 	strd	r5, r5, [sp, #20]
 8007e6a:	9507      	str	r5, [sp, #28]
 8007e6c:	f7f8 fa20 	bl	80002b0 <chTMStartMeasurementX.constprop.77>
 8007e70:	a804      	add	r0, sp, #16
 8007e72:	f7f9 fc3d 	bl	80016f0 <chTMStopMeasurementX>
 8007e76:	9a03      	ldr	r2, [sp, #12]
 8007e78:	e052      	b.n	8007f20 <main+0x470>
 8007e7a:	bf00      	nop
 8007e7c:	40026400 	.word	0x40026400
 8007e80:	40021c00 	.word	0x40021c00
 8007e84:	40021000 	.word	0x40021000
 8007e88:	40021400 	.word	0x40021400
 8007e8c:	40021800 	.word	0x40021800
 8007e90:	20000e8c 	.word	0x20000e8c
 8007e94:	08000471 	.word	0x08000471
 8007e98:	40013000 	.word	0x40013000
 8007e9c:	40003800 	.word	0x40003800
 8007ea0:	00010016 	.word	0x00010016
 8007ea4:	200011c0 	.word	0x200011c0
 8007ea8:	06010016 	.word	0x06010016
 8007eac:	06010046 	.word	0x06010046
 8007eb0:	08008e60 	.word	0x08008e60
 8007eb4:	e0042000 	.word	0xe0042000
 8007eb8:	e000ed00 	.word	0xe000ed00
 8007ebc:	e000e100 	.word	0xe000e100
 8007ec0:	05fa0300 	.word	0x05fa0300
 8007ec4:	e0001000 	.word	0xe0001000
 8007ec8:	20001370 	.word	0x20001370
 8007ecc:	40026000 	.word	0x40026000
 8007ed0:	40020000 	.word	0x40020000
 8007ed4:	40010054 	.word	0x40010054
 8007ed8:	40020400 	.word	0x40020400
 8007edc:	40020800 	.word	0x40020800
 8007ee0:	40020c00 	.word	0x40020c00
 8007ee4:	55560000 	.word	0x55560000
 8007ee8:	000aaa00 	.word	0x000aaa00
 8007eec:	55514515 	.word	0x55514515
 8007ef0:	00082080 	.word	0x00082080
 8007ef4:	2000115c 	.word	0x2000115c
 8007ef8:	00060600 	.word	0x00060600
 8007efc:	02208001 	.word	0x02208001
 8007f00:	00555055 	.word	0x00555055
 8007f04:	55000100 	.word	0x55000100
 8007f08:	08009ae0 	.word	0x08009ae0
 8007f0c:	08008890 	.word	0x08008890
 8007f10:	20000e70 	.word	0x20000e70
 8007f14:	2000118c 	.word	0x2000118c
 8007f18:	40000800 	.word	0x40000800
 8007f1c:	e000edf0 	.word	0xe000edf0
 8007f20:	4bc5      	ldr	r3, [pc, #788]	; (8008238 <main+0x788>)
 8007f22:	48c6      	ldr	r0, [pc, #792]	; (800823c <main+0x78c>)
 8007f24:	4cc6      	ldr	r4, [pc, #792]	; (8008240 <main+0x790>)
 8007f26:	49c7      	ldr	r1, [pc, #796]	; (8008244 <main+0x794>)
 8007f28:	f8df e380 	ldr.w	lr, [pc, #896]	; 80082ac <main+0x7fc>
 8007f2c:	f882 504d 	strb.w	r5, [r2, #77]	; 0x4d
 8007f30:	2740      	movs	r7, #64	; 0x40
 8007f32:	6397      	str	r7, [r2, #56]	; 0x38
 8007f34:	e9c2 571a 	strd	r5, r7, [r2, #104]	; 0x68
 8007f38:	9f06      	ldr	r7, [sp, #24]
 8007f3a:	6757      	str	r7, [r2, #116]	; 0x74
 8007f3c:	f103 0c10 	add.w	ip, r3, #16
 8007f40:	6957      	ldr	r7, [r2, #20]
 8007f42:	6655      	str	r5, [r2, #100]	; 0x64
 8007f44:	e9c3 cc04 	strd	ip, ip, [r3, #16]
 8007f48:	f020 0007 	bic.w	r0, r0, #7
 8007f4c:	f102 0c30 	add.w	ip, r2, #48	; 0x30
 8007f50:	6020      	str	r0, [r4, #0]
 8007f52:	f021 0107 	bic.w	r1, r1, #7
 8007f56:	f882 804e 	strb.w	r8, [r2, #78]	; 0x4e
 8007f5a:	6495      	str	r5, [r2, #72]	; 0x48
 8007f5c:	6412      	str	r2, [r2, #64]	; 0x40
 8007f5e:	6457      	str	r7, [r2, #68]	; 0x44
 8007f60:	619d      	str	r5, [r3, #24]
 8007f62:	f102 0454 	add.w	r4, r2, #84	; 0x54
 8007f66:	f8c7 c010 	str.w	ip, [r7, #16]
 8007f6a:	48b7      	ldr	r0, [pc, #732]	; (8008248 <main+0x798>)
 8007f6c:	f882 804c 	strb.w	r8, [r2, #76]	; 0x4c
 8007f70:	e9c2 cc05 	strd	ip, ip, [r2, #20]
 8007f74:	f102 0c58 	add.w	ip, r2, #88	; 0x58
 8007f78:	e9c3 5502 	strd	r5, r5, [r3, #8]
 8007f7c:	6554      	str	r4, [r2, #84]	; 0x54
 8007f7e:	6018      	str	r0, [r3, #0]
 8007f80:	e9c2 cc16 	strd	ip, ip, [r2, #88]	; 0x58
 8007f84:	f8ce 1000 	str.w	r1, [lr]
 8007f88:	f385 8811 	msr	BASEPRI, r5
 8007f8c:	b662      	cpsie	i
 8007f8e:	6993      	ldr	r3, [r2, #24]
 8007f90:	49ae      	ldr	r1, [pc, #696]	; (800824c <main+0x79c>)
 8007f92:	4caf      	ldr	r4, [pc, #700]	; (8008250 <main+0x7a0>)
 8007f94:	6199      	str	r1, [r3, #24]
 8007f96:	f102 0078 	add.w	r0, r2, #120	; 0x78
 8007f9a:	9500      	str	r5, [sp, #0]
 8007f9c:	4642      	mov	r2, r8
 8007f9e:	4bad      	ldr	r3, [pc, #692]	; (8008254 <main+0x7a4>)
 8007fa0:	4fad      	ldr	r7, [pc, #692]	; (8008258 <main+0x7a8>)
 8007fa2:	21d8      	movs	r1, #216	; 0xd8
 8007fa4:	f7fb fa14 	bl	80033d0 <chThdCreateStatic>
 8007fa8:	4623      	mov	r3, r4
 8007faa:	4aac      	ldr	r2, [pc, #688]	; (800825c <main+0x7ac>)
 8007fac:	49ac      	ldr	r1, [pc, #688]	; (8008260 <main+0x7b0>)
 8007fae:	6181      	str	r1, [r0, #24]
 8007fb0:	f843 2b04 	str.w	r2, [r3], #4
 8007fb4:	f504 7015 	add.w	r0, r4, #596	; 0x254
 8007fb8:	4aaa      	ldr	r2, [pc, #680]	; (8008264 <main+0x7b4>)
 8007fba:	f8df c2f4 	ldr.w	ip, [pc, #756]	; 80082b0 <main+0x800>
 8007fbe:	f8c4 c028 	str.w	ip, [r4, #40]	; 0x28
 8007fc2:	f44f 7e80 	mov.w	lr, #256	; 0x100
 8007fc6:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8007fca:	f104 010c 	add.w	r1, r4, #12
 8007fce:	f8c4 e038 	str.w	lr, [r4, #56]	; 0x38
 8007fd2:	6420      	str	r0, [r4, #64]	; 0x40
 8007fd4:	f504 7eaa 	add.w	lr, r4, #340	; 0x154
 8007fd8:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8007fdc:	64e7      	str	r7, [r4, #76]	; 0x4c
 8007fde:	f884 8008 	strb.w	r8, [r4, #8]
 8007fe2:	6165      	str	r5, [r4, #20]
 8007fe4:	62e4      	str	r4, [r4, #44]	; 0x2c
 8007fe6:	6524      	str	r4, [r4, #80]	; 0x50
 8007fe8:	6063      	str	r3, [r4, #4]
 8007fea:	e9c4 1103 	strd	r1, r1, [r4, #12]
 8007fee:	f8c4 c018 	str.w	ip, [r4, #24]
 8007ff2:	e9c4 cc08 	strd	ip, ip, [r4, #32]
 8007ff6:	f8c4 e01c 	str.w	lr, [r4, #28]
 8007ffa:	f8c4 e03c 	str.w	lr, [r4, #60]	; 0x3c
 8007ffe:	e9c4 ee11 	strd	lr, lr, [r4, #68]	; 0x44
 8008002:	e9c4 000c 	strd	r0, r0, [r4, #48]	; 0x30
 8008006:	6012      	str	r2, [r2, #0]
 8008008:	2720      	movs	r7, #32
 800800a:	f387 8811 	msr	BASEPRI, r7
 800800e:	4a96      	ldr	r2, [pc, #600]	; (8008268 <main+0x7b8>)
 8008010:	61f4      	str	r4, [r6, #28]
 8008012:	2302      	movs	r3, #2
 8008014:	62b4      	str	r4, [r6, #40]	; 0x28
 8008016:	6234      	str	r4, [r6, #32]
 8008018:	f8c4 2254 	str.w	r2, [r4, #596]	; 0x254
 800801c:	7223      	strb	r3, [r4, #8]
 800801e:	f385 8811 	msr	BASEPRI, r5
 8008022:	6d32      	ldr	r2, [r6, #80]	; 0x50
 8008024:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8008026:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 800802a:	6393      	str	r3, [r2, #56]	; 0x38
 800802c:	f242 7010 	movw	r0, #10000	; 0x2710
 8008030:	f7fc f8e6 	bl	8004200 <chThdSleep>
 8008034:	f387 8811 	msr	BASEPRI, r7
 8008038:	7832      	ldrb	r2, [r6, #0]
 800803a:	4b8c      	ldr	r3, [pc, #560]	; (800826c <main+0x7bc>)
 800803c:	6073      	str	r3, [r6, #4]
 800803e:	4542      	cmp	r2, r8
 8008040:	e9c6 5503 	strd	r5, r5, [r6, #12]
 8008044:	e9c6 5505 	strd	r5, r5, [r6, #20]
 8008048:	f000 8166 	beq.w	8008318 <main+0x868>
 800804c:	2302      	movs	r3, #2
 800804e:	7033      	strb	r3, [r6, #0]
 8008050:	2300      	movs	r3, #0
 8008052:	f383 8811 	msr	BASEPRI, r3
 8008056:	6d32      	ldr	r2, [r6, #80]	; 0x50
 8008058:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800805a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800805e:	6393      	str	r3, [r2, #56]	; 0x38
 8008060:	2320      	movs	r3, #32
 8008062:	f383 8811 	msr	BASEPRI, r3
 8008066:	4b82      	ldr	r3, [pc, #520]	; (8008270 <main+0x7c0>)
 8008068:	7a1b      	ldrb	r3, [r3, #8]
 800806a:	2b01      	cmp	r3, #1
 800806c:	f000 8146 	beq.w	80082fc <main+0x84c>
 8008070:	4b7f      	ldr	r3, [pc, #508]	; (8008270 <main+0x7c0>)
 8008072:	4a80      	ldr	r2, [pc, #512]	; (8008274 <main+0x7c4>)
 8008074:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008076:	4293      	cmp	r3, r2
 8008078:	f000 813c 	beq.w	80082f4 <main+0x844>
 800807c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008080:	4293      	cmp	r3, r2
 8008082:	f000 8137 	beq.w	80082f4 <main+0x844>
 8008086:	f240 4245 	movw	r2, #1093	; 0x445
 800808a:	609a      	str	r2, [r3, #8]
 800808c:	f244 0040 	movw	r0, #16448	; 0x4040
 8008090:	2101      	movs	r1, #1
 8008092:	f242 122c 	movw	r2, #8492	; 0x212c
 8008096:	2500      	movs	r5, #0
 8008098:	6118      	str	r0, [r3, #16]
 800809a:	6159      	str	r1, [r3, #20]
 800809c:	60da      	str	r2, [r3, #12]
 800809e:	601d      	str	r5, [r3, #0]
 80080a0:	681a      	ldr	r2, [r3, #0]
 80080a2:	685b      	ldr	r3, [r3, #4]
 80080a4:	4b72      	ldr	r3, [pc, #456]	; (8008270 <main+0x7c0>)
 80080a6:	2602      	movs	r6, #2
 80080a8:	721e      	strb	r6, [r3, #8]
 80080aa:	f385 8811 	msr	BASEPRI, r5
 80080ae:	f240 3282 	movw	r2, #898	; 0x382
 80080b2:	2104      	movs	r1, #4
 80080b4:	4870      	ldr	r0, [pc, #448]	; (8008278 <main+0x7c8>)
 80080b6:	f7f8 fdc3 	bl	8000c40 <_pal_lld_setgroupmode>
 80080ba:	f240 3282 	movw	r2, #898	; 0x382
 80080be:	2108      	movs	r1, #8
 80080c0:	486d      	ldr	r0, [pc, #436]	; (8008278 <main+0x7c8>)
 80080c2:	f7f8 fdbd 	bl	8000c40 <_pal_lld_setgroupmode>
 80080c6:	2720      	movs	r7, #32
 80080c8:	f387 8811 	msr	BASEPRI, r7
 80080cc:	4b6b      	ldr	r3, [pc, #428]	; (800827c <main+0x7cc>)
 80080ce:	486c      	ldr	r0, [pc, #432]	; (8008280 <main+0x7d0>)
 80080d0:	f8cb 3004 	str.w	r3, [fp, #4]
 80080d4:	f7f8 fc94 	bl	8000a00 <spi_lld_start>
 80080d8:	f88b 6000 	strb.w	r6, [fp]
 80080dc:	f385 8811 	msr	BASEPRI, r5
 80080e0:	f387 8811 	msr	BASEPRI, r7
 80080e4:	4b67      	ldr	r3, [pc, #412]	; (8008284 <main+0x7d4>)
 80080e6:	4868      	ldr	r0, [pc, #416]	; (8008288 <main+0x7d8>)
 80080e8:	f8ca 3004 	str.w	r3, [sl, #4]
 80080ec:	f7f8 fc88 	bl	8000a00 <spi_lld_start>
 80080f0:	f88a 6000 	strb.w	r6, [sl]
 80080f4:	f385 8811 	msr	BASEPRI, r5
 80080f8:	4e64      	ldr	r6, [pc, #400]	; (800828c <main+0x7dc>)
 80080fa:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80080fe:	4630      	mov	r0, r6
 8008100:	8331      	strh	r1, [r6, #24]
 8008102:	2219      	movs	r2, #25
 8008104:	f7f8 fd9c 	bl	8000c40 <_pal_lld_setgroupmode>
 8008108:	f240 229a 	movw	r2, #666	; 0x29a
 800810c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8008110:	f7f8 fd96 	bl	8000c40 <_pal_lld_setgroupmode>
 8008114:	f240 2282 	movw	r2, #642	; 0x282
 8008118:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800811c:	f7f8 fd90 	bl	8000c40 <_pal_lld_setgroupmode>
 8008120:	f240 229a 	movw	r2, #666	; 0x29a
 8008124:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8008128:	f7f8 fd8a 	bl	8000c40 <_pal_lld_setgroupmode>
 800812c:	f387 8811 	msr	BASEPRI, r7
 8008130:	f899 3000 	ldrb.w	r3, [r9]
 8008134:	4a56      	ldr	r2, [pc, #344]	; (8008290 <main+0x7e0>)
 8008136:	f8c9 2004 	str.w	r2, [r9, #4]
 800813a:	2b01      	cmp	r3, #1
 800813c:	f04f 0280 	mov.w	r2, #128	; 0x80
 8008140:	f8c9 2008 	str.w	r2, [r9, #8]
 8008144:	f000 80b6 	beq.w	80082b4 <main+0x804>
 8008148:	f8d9 3018 	ldr.w	r3, [r9, #24]
 800814c:	601d      	str	r5, [r3, #0]
 800814e:	635d      	str	r5, [r3, #52]	; 0x34
 8008150:	639d      	str	r5, [r3, #56]	; 0x38
 8008152:	63dd      	str	r5, [r3, #60]	; 0x3c
 8008154:	641d      	str	r5, [r3, #64]	; 0x40
 8008156:	625d      	str	r5, [r3, #36]	; 0x24
 8008158:	f8d9 2014 	ldr.w	r2, [r9, #20]
 800815c:	494d      	ldr	r1, [pc, #308]	; (8008294 <main+0x7e4>)
 800815e:	0952      	lsrs	r2, r2, #5
 8008160:	fba1 1202 	umull	r1, r2, r1, r2
 8008164:	09d2      	lsrs	r2, r2, #7
 8008166:	3a01      	subs	r2, #1
 8008168:	217f      	movs	r1, #127	; 0x7f
 800816a:	629a      	str	r2, [r3, #40]	; 0x28
 800816c:	2500      	movs	r5, #0
 800816e:	62d9      	str	r1, [r3, #44]	; 0x2c
 8008170:	f241 1611 	movw	r6, #4369	; 0x1111
 8008174:	2001      	movs	r0, #1
 8008176:	2185      	movs	r1, #133	; 0x85
 8008178:	2202      	movs	r2, #2
 800817a:	605d      	str	r5, [r3, #4]
 800817c:	621e      	str	r6, [r3, #32]
 800817e:	6158      	str	r0, [r3, #20]
 8008180:	611d      	str	r5, [r3, #16]
 8008182:	60dd      	str	r5, [r3, #12]
 8008184:	6019      	str	r1, [r3, #0]
 8008186:	f8c9 500c 	str.w	r5, [r9, #12]
 800818a:	f889 2000 	strb.w	r2, [r9]
 800818e:	f385 8811 	msr	BASEPRI, r5
 8008192:	f44f 7281 	mov.w	r2, #258	; 0x102
 8008196:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800819a:	483f      	ldr	r0, [pc, #252]	; (8008298 <main+0x7e8>)
 800819c:	4e3f      	ldr	r6, [pc, #252]	; (800829c <main+0x7ec>)
 800819e:	4f40      	ldr	r7, [pc, #256]	; (80082a0 <main+0x7f0>)
 80081a0:	f7f8 fd4e 	bl	8000c40 <_pal_lld_setgroupmode>
 80081a4:	f44f 7281 	mov.w	r2, #258	; 0x102
 80081a8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80081ac:	483a      	ldr	r0, [pc, #232]	; (8008298 <main+0x7e8>)
 80081ae:	f7f8 fd47 	bl	8000c40 <_pal_lld_setgroupmode>
 80081b2:	f44f 7281 	mov.w	r2, #258	; 0x102
 80081b6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80081ba:	4837      	ldr	r0, [pc, #220]	; (8008298 <main+0x7e8>)
 80081bc:	f7f8 fd40 	bl	8000c40 <_pal_lld_setgroupmode>
 80081c0:	f44f 7281 	mov.w	r2, #258	; 0x102
 80081c4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80081c8:	4833      	ldr	r0, [pc, #204]	; (8008298 <main+0x7e8>)
 80081ca:	f7f8 fd39 	bl	8000c40 <_pal_lld_setgroupmode>
 80081ce:	9500      	str	r5, [sp, #0]
 80081d0:	4b34      	ldr	r3, [pc, #208]	; (80082a4 <main+0x7f4>)
 80081d2:	4835      	ldr	r0, [pc, #212]	; (80082a8 <main+0x7f8>)
 80081d4:	224a      	movs	r2, #74	; 0x4a
 80081d6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80081da:	f7fb f8f9 	bl	80033d0 <chThdCreateStatic>
 80081de:	b145      	cbz	r5, 80081f2 <main+0x742>
 80081e0:	7f2b      	ldrb	r3, [r5, #28]
 80081e2:	2b0f      	cmp	r3, #15
 80081e4:	d01f      	beq.n	8008226 <main+0x776>
 80081e6:	f241 3088 	movw	r0, #5000	; 0x1388
 80081ea:	f7fc f809 	bl	8004200 <chThdSleep>
 80081ee:	2d00      	cmp	r5, #0
 80081f0:	d1f6      	bne.n	80081e0 <main+0x730>
 80081f2:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 80081f6:	681b      	ldr	r3, [r3, #0]
 80081f8:	781b      	ldrb	r3, [r3, #0]
 80081fa:	2b04      	cmp	r3, #4
 80081fc:	d009      	beq.n	8008212 <main+0x762>
 80081fe:	f241 3088 	movw	r0, #5000	; 0x1388
 8008202:	f7fb fffd 	bl	8004200 <chThdSleep>
 8008206:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 800820a:	681b      	ldr	r3, [r3, #0]
 800820c:	781b      	ldrb	r3, [r3, #0]
 800820e:	2b04      	cmp	r3, #4
 8008210:	d1f5      	bne.n	80081fe <main+0x74e>
 8008212:	9600      	str	r6, [sp, #0]
 8008214:	463b      	mov	r3, r7
 8008216:	2240      	movs	r2, #64	; 0x40
 8008218:	f640 01c8 	movw	r1, #2248	; 0x8c8
 800821c:	2000      	movs	r0, #0
 800821e:	f7fc ff57 	bl	80050d0 <chThdCreateFromHeap>
 8008222:	4605      	mov	r5, r0
 8008224:	e7df      	b.n	80081e6 <main+0x736>
 8008226:	4628      	mov	r0, r5
 8008228:	f7fc fd3a 	bl	8004ca0 <chThdRelease>
 800822c:	f241 3088 	movw	r0, #5000	; 0x1388
 8008230:	f7fb ffe6 	bl	8004200 <chThdSleep>
 8008234:	e7dd      	b.n	80081f2 <main+0x742>
 8008236:	bf00      	nop
 8008238:	200014c8 	.word	0x200014c8
 800823c:	20001eb7 	.word	0x20001eb7
 8008240:	20001644 	.word	0x20001644
 8008244:	20020000 	.word	0x20020000
 8008248:	08000431 	.word	0x08000431
 800824c:	08008a80 	.word	0x08008a80
 8008250:	20000f04 	.word	0x20000f04
 8008254:	08000421 	.word	0x08000421
 8008258:	08000f81 	.word	0x08000f81
 800825c:	08009b00 	.word	0x08009b00
 8008260:	08008e80 	.word	0x08008e80
 8008264:	20001658 	.word	0x20001658
 8008268:	08009050 	.word	0x08009050
 800826c:	08009990 	.word	0x08009990
 8008270:	20000e8c 	.word	0x20000e8c
 8008274:	40011000 	.word	0x40011000
 8008278:	40020000 	.word	0x40020000
 800827c:	08009100 	.word	0x08009100
 8008280:	2000115c 	.word	0x2000115c
 8008284:	08009110 	.word	0x08009110
 8008288:	2000118c 	.word	0x2000118c
 800828c:	40020400 	.word	0x40020400
 8008290:	08009000 	.word	0x08009000
 8008294:	0a7c5ac5 	.word	0x0a7c5ac5
 8008298:	40020c00 	.word	0x40020c00
 800829c:	08009060 	.word	0x08009060
 80082a0:	08007861 	.word	0x08007861
 80082a4:	08005941 	.word	0x08005941
 80082a8:	20001d60 	.word	0x20001d60
 80082ac:	20001570 	.word	0x20001570
 80082b0:	08000ef1 	.word	0x08000ef1
 80082b4:	4a6b      	ldr	r2, [pc, #428]	; (8008464 <main+0x9b4>)
 80082b6:	496c      	ldr	r1, [pc, #432]	; (8008468 <main+0x9b8>)
 80082b8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80082ba:	f043 0304 	orr.w	r3, r3, #4
 80082be:	6413      	str	r3, [r2, #64]	; 0x40
 80082c0:	6a10      	ldr	r0, [r2, #32]
 80082c2:	f8d9 3018 	ldr.w	r3, [r9, #24]
 80082c6:	f040 0004 	orr.w	r0, r0, #4
 80082ca:	6210      	str	r0, [r2, #32]
 80082cc:	6215      	str	r5, [r2, #32]
 80082ce:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80082d2:	2270      	movs	r2, #112	; 0x70
 80082d4:	f881 231e 	strb.w	r2, [r1, #798]	; 0x31e
 80082d8:	f8c1 0180 	str.w	r0, [r1, #384]	; 0x180
 80082dc:	6008      	str	r0, [r1, #0]
 80082de:	f101 5114 	add.w	r1, r1, #620756992	; 0x25000000
 80082e2:	f646 0268 	movw	r2, #26728	; 0x6868
 80082e6:	f501 415c 	add.w	r1, r1, #56320	; 0xdc00
 80082ea:	619a      	str	r2, [r3, #24]
 80082ec:	f8c9 1014 	str.w	r1, [r9, #20]
 80082f0:	61da      	str	r2, [r3, #28]
 80082f2:	e731      	b.n	8008158 <main+0x6a8>
 80082f4:	f640 028b 	movw	r2, #2187	; 0x88b
 80082f8:	609a      	str	r2, [r3, #8]
 80082fa:	e6c7      	b.n	800808c <main+0x5dc>
 80082fc:	4959      	ldr	r1, [pc, #356]	; (8008464 <main+0x9b4>)
 80082fe:	4b5a      	ldr	r3, [pc, #360]	; (8008468 <main+0x9b8>)
 8008300:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8008302:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8008306:	640a      	str	r2, [r1, #64]	; 0x40
 8008308:	2240      	movs	r2, #64	; 0x40
 800830a:	21c0      	movs	r1, #192	; 0xc0
 800830c:	f883 1326 	strb.w	r1, [r3, #806]	; 0x326
 8008310:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 8008314:	605a      	str	r2, [r3, #4]
 8008316:	e6ab      	b.n	8008070 <main+0x5c0>
 8008318:	9203      	str	r2, [sp, #12]
 800831a:	4a52      	ldr	r2, [pc, #328]	; (8008464 <main+0x9b4>)
 800831c:	f8d6 8050 	ldr.w	r8, [r6, #80]	; 0x50
 8008320:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8008322:	65f5      	str	r5, [r6, #92]	; 0x5c
 8008324:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008328:	6353      	str	r3, [r2, #52]	; 0x34
 800832a:	6953      	ldr	r3, [r2, #20]
 800832c:	494f      	ldr	r1, [pc, #316]	; (800846c <main+0x9bc>)
 800832e:	f8df c148 	ldr.w	ip, [pc, #328]	; 8008478 <main+0x9c8>
 8008332:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008336:	6153      	str	r3, [r2, #20]
 8008338:	6155      	str	r5, [r2, #20]
 800833a:	4a4b      	ldr	r2, [pc, #300]	; (8008468 <main+0x9b8>)
 800833c:	23e0      	movs	r3, #224	; 0xe0
 800833e:	f882 3343 	strb.w	r3, [r2, #835]	; 0x343
 8008342:	2308      	movs	r3, #8
 8008344:	f8c2 3188 	str.w	r3, [r2, #392]	; 0x188
 8008348:	6093      	str	r3, [r2, #8]
 800834a:	f44f 2350 	mov.w	r3, #851968	; 0xd0000
 800834e:	f8c8 100c 	str.w	r1, [r8, #12]
 8008352:	4638      	mov	r0, r7
 8008354:	f8c8 c800 	str.w	ip, [r8, #2048]	; 0x800
 8008358:	f8c8 5e00 	str.w	r5, [r8, #3584]	; 0xe00
 800835c:	f8c8 3038 	str.w	r3, [r8, #56]	; 0x38
 8008360:	f7f9 fe4e 	bl	8002000 <chSysPolledDelayX>
 8008364:	9a03      	ldr	r2, [sp, #12]
 8008366:	f8c8 2010 	str.w	r2, [r8, #16]
 800836a:	f8d8 5010 	ldr.w	r5, [r8, #16]
 800836e:	f015 0501 	ands.w	r5, r5, #1
 8008372:	d1fa      	bne.n	800836a <main+0x8ba>
 8008374:	200c      	movs	r0, #12
 8008376:	f7f9 fe43 	bl	8002000 <chSysPolledDelayX>
 800837a:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800837e:	2b00      	cmp	r3, #0
 8008380:	dafb      	bge.n	800837a <main+0x8ca>
 8008382:	e9d6 c314 	ldrd	ip, r3, [r6, #80]	; 0x50
 8008386:	689a      	ldr	r2, [r3, #8]
 8008388:	2300      	movs	r3, #0
 800838a:	3201      	adds	r2, #1
 800838c:	9203      	str	r2, [sp, #12]
 800838e:	f8c8 3008 	str.w	r3, [r8, #8]
 8008392:	e01b      	b.n	80083cc <main+0x91c>
 8008394:	f8c2 3900 	str.w	r3, [r2, #2304]	; 0x900
 8008398:	eb0c 0001 	add.w	r0, ip, r1
 800839c:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80083a0:	f8c0 3910 	str.w	r3, [r0, #2320]	; 0x910
 80083a4:	f8c0 7908 	str.w	r7, [r0, #2312]	; 0x908
 80083a8:	f8d2 eb00 	ldr.w	lr, [r2, #2816]	; 0xb00
 80083ac:	f1be 0f00 	cmp.w	lr, #0
 80083b0:	db4e      	blt.n	8008450 <main+0x9a0>
 80083b2:	f8c2 3b00 	str.w	r3, [r2, #2816]	; 0xb00
 80083b6:	4461      	add	r1, ip
 80083b8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80083bc:	f8c1 3b10 	str.w	r3, [r1, #2832]	; 0xb10
 80083c0:	f8c1 2b08 	str.w	r2, [r1, #2824]	; 0xb08
 80083c4:	9a03      	ldr	r2, [sp, #12]
 80083c6:	3501      	adds	r5, #1
 80083c8:	4295      	cmp	r5, r2
 80083ca:	d011      	beq.n	80083f0 <main+0x940>
 80083cc:	0169      	lsls	r1, r5, #5
 80083ce:	eb0c 0201 	add.w	r2, ip, r1
 80083d2:	f8d2 0900 	ldr.w	r0, [r2, #2304]	; 0x900
 80083d6:	2800      	cmp	r0, #0
 80083d8:	dadc      	bge.n	8008394 <main+0x8e4>
 80083da:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80083de:	f8c2 0900 	str.w	r0, [r2, #2304]	; 0x900
 80083e2:	4610      	mov	r0, r2
 80083e4:	f8d0 e908 	ldr.w	lr, [r0, #2312]	; 0x908
 80083e8:	f01e 0f02 	tst.w	lr, #2
 80083ec:	d0fa      	beq.n	80083e4 <main+0x934>
 80083ee:	e7d3      	b.n	8008398 <main+0x8e8>
 80083f0:	6872      	ldr	r2, [r6, #4]
 80083f2:	68d2      	ldr	r2, [r2, #12]
 80083f4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80083f8:	f8cc 181c 	str.w	r1, [ip, #2076]	; 0x81c
 80083fc:	f8c8 3810 	str.w	r3, [r8, #2064]	; 0x810
 8008400:	f8c8 3814 	str.w	r3, [r8, #2068]	; 0x814
 8008404:	f8c8 381c 	str.w	r3, [r8, #2076]	; 0x81c
 8008408:	b1ea      	cbz	r2, 8008446 <main+0x996>
 800840a:	f243 0308 	movw	r3, #12296	; 0x3008
 800840e:	f8c8 3018 	str.w	r3, [r8, #24]
 8008412:	6e73      	ldr	r3, [r6, #100]	; 0x64
 8008414:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8008418:	f8c8 2014 	str.w	r2, [r8, #20]
 800841c:	b963      	cbnz	r3, 8008438 <main+0x988>
 800841e:	4b14      	ldr	r3, [pc, #80]	; (8008470 <main+0x9c0>)
 8008420:	9600      	str	r6, [sp, #0]
 8008422:	2202      	movs	r2, #2
 8008424:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8008428:	4812      	ldr	r0, [pc, #72]	; (8008474 <main+0x9c4>)
 800842a:	f7f9 f989 	bl	8001740 <chThdCreateI>
 800842e:	6670      	str	r0, [r6, #100]	; 0x64
 8008430:	f7f9 f9e6 	bl	8001800 <chSchReadyI>
 8008434:	f7fa fddc 	bl	8002ff0 <chSchRescheduleS>
 8008438:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800843c:	f043 0301 	orr.w	r3, r3, #1
 8008440:	f8c8 3008 	str.w	r3, [r8, #8]
 8008444:	e602      	b.n	800804c <main+0x59c>
 8008446:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 800844a:	f8c8 3018 	str.w	r3, [r8, #24]
 800844e:	e7e0      	b.n	8008412 <main+0x962>
 8008450:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 8008454:	f8c2 7b00 	str.w	r7, [r2, #2816]	; 0xb00
 8008458:	f8d0 2b08 	ldr.w	r2, [r0, #2824]	; 0xb08
 800845c:	06d2      	lsls	r2, r2, #27
 800845e:	d5fb      	bpl.n	8008458 <main+0x9a8>
 8008460:	e7a9      	b.n	80083b6 <main+0x906>
 8008462:	bf00      	nop
 8008464:	40023800 	.word	0x40023800
 8008468:	e000e100 	.word	0xe000e100
 800846c:	40001440 	.word	0x40001440
 8008470:	08005501 	.word	0x08005501
 8008474:	20001228 	.word	0x20001228
 8008478:	02200003 	.word	0x02200003
 800847c:	00000000 	.word	0x00000000

08008480 <__early_init>:
 8008480:	4b2a      	ldr	r3, [pc, #168]	; (800852c <__early_init+0xac>)
 8008482:	4a2b      	ldr	r2, [pc, #172]	; (8008530 <__early_init+0xb0>)
 8008484:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 8008488:	f44f 4140 	mov.w	r1, #49152	; 0xc000
 800848c:	6418      	str	r0, [r3, #64]	; 0x40
 800848e:	6011      	str	r1, [r2, #0]
 8008490:	681a      	ldr	r2, [r3, #0]
 8008492:	f042 0201 	orr.w	r2, r2, #1
 8008496:	601a      	str	r2, [r3, #0]
 8008498:	681a      	ldr	r2, [r3, #0]
 800849a:	0792      	lsls	r2, r2, #30
 800849c:	d5fc      	bpl.n	8008498 <__early_init+0x18>
 800849e:	6899      	ldr	r1, [r3, #8]
 80084a0:	4a22      	ldr	r2, [pc, #136]	; (800852c <__early_init+0xac>)
 80084a2:	f021 0103 	bic.w	r1, r1, #3
 80084a6:	6099      	str	r1, [r3, #8]
 80084a8:	6899      	ldr	r1, [r3, #8]
 80084aa:	6099      	str	r1, [r3, #8]
 80084ac:	6893      	ldr	r3, [r2, #8]
 80084ae:	f013 030c 	ands.w	r3, r3, #12
 80084b2:	d1fb      	bne.n	80084ac <__early_init+0x2c>
 80084b4:	6810      	ldr	r0, [r2, #0]
 80084b6:	491d      	ldr	r1, [pc, #116]	; (800852c <__early_init+0xac>)
 80084b8:	f000 00f9 	and.w	r0, r0, #249	; 0xf9
 80084bc:	6010      	str	r0, [r2, #0]
 80084be:	6093      	str	r3, [r2, #8]
 80084c0:	6813      	ldr	r3, [r2, #0]
 80084c2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80084c6:	6013      	str	r3, [r2, #0]
 80084c8:	680b      	ldr	r3, [r1, #0]
 80084ca:	0398      	lsls	r0, r3, #14
 80084cc:	d5fc      	bpl.n	80084c8 <__early_init+0x48>
 80084ce:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 80084d0:	4a16      	ldr	r2, [pc, #88]	; (800852c <__early_init+0xac>)
 80084d2:	f043 0301 	orr.w	r3, r3, #1
 80084d6:	674b      	str	r3, [r1, #116]	; 0x74
 80084d8:	6f53      	ldr	r3, [r2, #116]	; 0x74
 80084da:	0799      	lsls	r1, r3, #30
 80084dc:	d5fc      	bpl.n	80084d8 <__early_init+0x58>
 80084de:	4b15      	ldr	r3, [pc, #84]	; (8008534 <__early_init+0xb4>)
 80084e0:	6053      	str	r3, [r2, #4]
 80084e2:	6813      	ldr	r3, [r2, #0]
 80084e4:	4912      	ldr	r1, [pc, #72]	; (8008530 <__early_init+0xb0>)
 80084e6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80084ea:	6013      	str	r3, [r2, #0]
 80084ec:	684b      	ldr	r3, [r1, #4]
 80084ee:	045a      	lsls	r2, r3, #17
 80084f0:	d5fc      	bpl.n	80084ec <__early_init+0x6c>
 80084f2:	490e      	ldr	r1, [pc, #56]	; (800852c <__early_init+0xac>)
 80084f4:	680b      	ldr	r3, [r1, #0]
 80084f6:	019b      	lsls	r3, r3, #6
 80084f8:	d5fc      	bpl.n	80084f4 <__early_init+0x74>
 80084fa:	4b0f      	ldr	r3, [pc, #60]	; (8008538 <__early_init+0xb8>)
 80084fc:	4a0f      	ldr	r2, [pc, #60]	; (800853c <__early_init+0xbc>)
 80084fe:	608a      	str	r2, [r1, #8]
 8008500:	f240 7205 	movw	r2, #1797	; 0x705
 8008504:	601a      	str	r2, [r3, #0]
 8008506:	688b      	ldr	r3, [r1, #8]
 8008508:	4a08      	ldr	r2, [pc, #32]	; (800852c <__early_init+0xac>)
 800850a:	f043 0302 	orr.w	r3, r3, #2
 800850e:	608b      	str	r3, [r1, #8]
 8008510:	6893      	ldr	r3, [r2, #8]
 8008512:	f003 030c 	and.w	r3, r3, #12
 8008516:	2b08      	cmp	r3, #8
 8008518:	d1fa      	bne.n	8008510 <__early_init+0x90>
 800851a:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800851c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8008520:	6453      	str	r3, [r2, #68]	; 0x44
 8008522:	6e53      	ldr	r3, [r2, #100]	; 0x64
 8008524:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8008528:	6653      	str	r3, [r2, #100]	; 0x64
 800852a:	4770      	bx	lr
 800852c:	40023800 	.word	0x40023800
 8008530:	40007000 	.word	0x40007000
 8008534:	07405408 	.word	0x07405408
 8008538:	40023c00 	.word	0x40023c00
 800853c:	38089400 	.word	0x38089400

08008540 <chThdExit>:
 8008540:	2320      	movs	r3, #32
 8008542:	f383 8811 	msr	BASEPRI, r3
 8008546:	f7ff b96b 	b.w	8007820 <chThdExitS>
 800854a:	bf00      	nop
 800854c:	0000      	movs	r0, r0
	...

08008550 <thread1.lto_priv.96>:
 8008550:	f7ff bff6 	b.w	8008540 <chThdExit>
	...

08008560 <chSchDoReschedule>:
 8008560:	f7fa bd26 	b.w	8002fb0 <chSchDoRescheduleAhead>
	...

08008570 <__default_exit>:
 8008570:	e7fe      	b.n	8008570 <__default_exit>
 8008572:	bf00      	nop
	...

08008580 <__late_init>:
 8008580:	4770      	bx	lr
 8008582:	bf00      	nop
	...

08008590 <strcasecmp>:
 8008590:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008592:	4607      	mov	r7, r0
 8008594:	460e      	mov	r6, r1
 8008596:	f817 4b01 	ldrb.w	r4, [r7], #1
 800859a:	f000 f869 	bl	8008670 <__locale_ctype_ptr>
 800859e:	4420      	add	r0, r4
 80085a0:	f816 5b01 	ldrb.w	r5, [r6], #1
 80085a4:	7843      	ldrb	r3, [r0, #1]
 80085a6:	f003 0303 	and.w	r3, r3, #3
 80085aa:	2b01      	cmp	r3, #1
 80085ac:	bf08      	it	eq
 80085ae:	3420      	addeq	r4, #32
 80085b0:	f000 f85e 	bl	8008670 <__locale_ctype_ptr>
 80085b4:	4428      	add	r0, r5
 80085b6:	7843      	ldrb	r3, [r0, #1]
 80085b8:	f003 0303 	and.w	r3, r3, #3
 80085bc:	2b01      	cmp	r3, #1
 80085be:	d004      	beq.n	80085ca <strcasecmp+0x3a>
 80085c0:	1b60      	subs	r0, r4, r5
 80085c2:	d101      	bne.n	80085c8 <strcasecmp+0x38>
 80085c4:	2d00      	cmp	r5, #0
 80085c6:	d1e6      	bne.n	8008596 <strcasecmp+0x6>
 80085c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80085ca:	f105 0020 	add.w	r0, r5, #32
 80085ce:	1a20      	subs	r0, r4, r0
 80085d0:	d0e1      	beq.n	8008596 <strcasecmp+0x6>
 80085d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080085e0 <strpbrk>:
 80085e0:	b430      	push	{r4, r5}
 80085e2:	7804      	ldrb	r4, [r0, #0]
 80085e4:	b1dc      	cbz	r4, 800861e <strpbrk+0x3e>
 80085e6:	780d      	ldrb	r5, [r1, #0]
 80085e8:	b19d      	cbz	r5, 8008612 <strpbrk+0x32>
 80085ea:	42ac      	cmp	r4, r5
 80085ec:	d00f      	beq.n	800860e <strpbrk+0x2e>
 80085ee:	460a      	mov	r2, r1
 80085f0:	e001      	b.n	80085f6 <strpbrk+0x16>
 80085f2:	429c      	cmp	r4, r3
 80085f4:	d00b      	beq.n	800860e <strpbrk+0x2e>
 80085f6:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80085fa:	2b00      	cmp	r3, #0
 80085fc:	d1f9      	bne.n	80085f2 <strpbrk+0x12>
 80085fe:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 8008602:	2c00      	cmp	r4, #0
 8008604:	d1f0      	bne.n	80085e8 <strpbrk+0x8>
 8008606:	7813      	ldrb	r3, [r2, #0]
 8008608:	2b00      	cmp	r3, #0
 800860a:	bf08      	it	eq
 800860c:	2000      	moveq	r0, #0
 800860e:	bc30      	pop	{r4, r5}
 8008610:	4770      	bx	lr
 8008612:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 8008616:	460a      	mov	r2, r1
 8008618:	2c00      	cmp	r4, #0
 800861a:	d1e5      	bne.n	80085e8 <strpbrk+0x8>
 800861c:	e7f3      	b.n	8008606 <strpbrk+0x26>
 800861e:	4620      	mov	r0, r4
 8008620:	e7f5      	b.n	800860e <strpbrk+0x2e>
 8008622:	bf00      	nop
	...

08008630 <strspn>:
 8008630:	b470      	push	{r4, r5, r6}
 8008632:	7804      	ldrb	r4, [r0, #0]
 8008634:	b1a4      	cbz	r4, 8008660 <strspn+0x30>
 8008636:	780d      	ldrb	r5, [r1, #0]
 8008638:	4606      	mov	r6, r0
 800863a:	b14d      	cbz	r5, 8008650 <strspn+0x20>
 800863c:	42a5      	cmp	r5, r4
 800863e:	d00a      	beq.n	8008656 <strspn+0x26>
 8008640:	460a      	mov	r2, r1
 8008642:	e001      	b.n	8008648 <strspn+0x18>
 8008644:	42a3      	cmp	r3, r4
 8008646:	d006      	beq.n	8008656 <strspn+0x26>
 8008648:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800864c:	2b00      	cmp	r3, #0
 800864e:	d1f9      	bne.n	8008644 <strspn+0x14>
 8008650:	1b80      	subs	r0, r0, r6
 8008652:	bc70      	pop	{r4, r5, r6}
 8008654:	4770      	bx	lr
 8008656:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 800865a:	2c00      	cmp	r4, #0
 800865c:	d1ed      	bne.n	800863a <strspn+0xa>
 800865e:	e7f7      	b.n	8008650 <strspn+0x20>
 8008660:	4620      	mov	r0, r4
 8008662:	e7f6      	b.n	8008652 <strspn+0x22>
	...

08008670 <__locale_ctype_ptr>:
 8008670:	4b04      	ldr	r3, [pc, #16]	; (8008684 <__locale_ctype_ptr+0x14>)
 8008672:	4a05      	ldr	r2, [pc, #20]	; (8008688 <__locale_ctype_ptr+0x18>)
 8008674:	681b      	ldr	r3, [r3, #0]
 8008676:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008678:	2b00      	cmp	r3, #0
 800867a:	bf08      	it	eq
 800867c:	4613      	moveq	r3, r2
 800867e:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
 8008682:	4770      	bx	lr
 8008684:	20000a44 	.word	0x20000a44
 8008688:	200008d8 	.word	0x200008d8
 800868c:	00000000 	.word	0x00000000

08008690 <__ascii_mbtowc>:
 8008690:	b082      	sub	sp, #8
 8008692:	b149      	cbz	r1, 80086a8 <__ascii_mbtowc+0x18>
 8008694:	b15a      	cbz	r2, 80086ae <__ascii_mbtowc+0x1e>
 8008696:	b16b      	cbz	r3, 80086b4 <__ascii_mbtowc+0x24>
 8008698:	7813      	ldrb	r3, [r2, #0]
 800869a:	600b      	str	r3, [r1, #0]
 800869c:	7812      	ldrb	r2, [r2, #0]
 800869e:	1c10      	adds	r0, r2, #0
 80086a0:	bf18      	it	ne
 80086a2:	2001      	movne	r0, #1
 80086a4:	b002      	add	sp, #8
 80086a6:	4770      	bx	lr
 80086a8:	a901      	add	r1, sp, #4
 80086aa:	2a00      	cmp	r2, #0
 80086ac:	d1f3      	bne.n	8008696 <__ascii_mbtowc+0x6>
 80086ae:	4610      	mov	r0, r2
 80086b0:	b002      	add	sp, #8
 80086b2:	4770      	bx	lr
 80086b4:	f06f 0001 	mvn.w	r0, #1
 80086b8:	e7f4      	b.n	80086a4 <__ascii_mbtowc+0x14>
 80086ba:	bf00      	nop
 80086bc:	0000      	movs	r0, r0
	...

080086c0 <__ascii_wctomb>:
 80086c0:	b121      	cbz	r1, 80086cc <__ascii_wctomb+0xc>
 80086c2:	2aff      	cmp	r2, #255	; 0xff
 80086c4:	d804      	bhi.n	80086d0 <__ascii_wctomb+0x10>
 80086c6:	700a      	strb	r2, [r1, #0]
 80086c8:	2001      	movs	r0, #1
 80086ca:	4770      	bx	lr
 80086cc:	4608      	mov	r0, r1
 80086ce:	4770      	bx	lr
 80086d0:	238a      	movs	r3, #138	; 0x8a
 80086d2:	6003      	str	r3, [r0, #0]
 80086d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80086d8:	4770      	bx	lr
 80086da:	bf00      	nop
 80086dc:	0000      	movs	r0, r0
 80086de:	0000      	movs	r0, r0
 80086e0:	202a2a2a 	.word	0x202a2a2a
 80086e4:	6e72654b 	.word	0x6e72654b
 80086e8:	203a6c65 	.word	0x203a6c65
 80086ec:	20202020 	.word	0x20202020
 80086f0:	00002020 	.word	0x00002020
 80086f4:	202a2a2a 	.word	0x202a2a2a
 80086f8:	706d6f43 	.word	0x706d6f43
 80086fc:	64656c69 	.word	0x64656c69
 8008700:	2020203a 	.word	0x2020203a
 8008704:	00002020 	.word	0x00002020
 8008708:	202a2a2a 	.word	0x202a2a2a
 800870c:	706d6f43 	.word	0x706d6f43
 8008710:	72656c69 	.word	0x72656c69
 8008714:	2020203a 	.word	0x2020203a
 8008718:	00002020 	.word	0x00002020
 800871c:	202a2a2a 	.word	0x202a2a2a
 8008720:	68637241 	.word	0x68637241
 8008724:	63657469 	.word	0x63657469
 8008728:	65727574 	.word	0x65727574
 800872c:	0000203a 	.word	0x0000203a
 8008730:	202a2a2a 	.word	0x202a2a2a
 8008734:	65726f43 	.word	0x65726f43
 8008738:	72615620 	.word	0x72615620
 800873c:	746e6169 	.word	0x746e6169
 8008740:	0000203a 	.word	0x0000203a
 8008744:	202a2a2a 	.word	0x202a2a2a
 8008748:	74726f50 	.word	0x74726f50
 800874c:	666e4920 	.word	0x666e4920
 8008750:	20203a6f 	.word	0x20203a6f
 8008754:	00002020 	.word	0x00002020
 8008758:	202a2a2a 	.word	0x202a2a2a
 800875c:	74616c50 	.word	0x74616c50
 8008760:	6d726f66 	.word	0x6d726f66
 8008764:	2020203a 	.word	0x2020203a
 8008768:	00002020 	.word	0x00002020
 800876c:	202a2a2a 	.word	0x202a2a2a
 8008770:	74736554 	.word	0x74736554
 8008774:	616f4220 	.word	0x616f4220
 8008778:	203a6472 	.word	0x203a6472
 800877c:	00002020 	.word	0x00002020
 8008780:	202d2d2d 	.word	0x202d2d2d
 8008784:	74736554 	.word	0x74736554
 8008788:	73614320 	.word	0x73614320
 800878c:	00002065 	.word	0x00002065
 8008790:	00002820 	.word	0x00002820
 8008794:	202d2d2d 	.word	0x202d2d2d
 8008798:	75736552 	.word	0x75736552
 800879c:	203a746c 	.word	0x203a746c
 80087a0:	4c494146 	.word	0x4c494146
 80087a4:	20455255 	.word	0x20455255
 80087a8:	00002328 	.word	0x00002328
 80087ac:	00005b20 	.word	0x00005b20
 80087b0:	616e6946 	.word	0x616e6946
 80087b4:	6572206c 	.word	0x6572206c
 80087b8:	746c7573 	.word	0x746c7573
 80087bc:	0000203a 	.word	0x0000203a
 80087c0:	202a2a2a 	.word	0x202a2a2a
 80087c4:	62696843 	.word	0x62696843
 80087c8:	2f534f69 	.word	0x2f534f69
 80087cc:	74205452 	.word	0x74205452
 80087d0:	20747365 	.word	0x20747365
 80087d4:	74697573 	.word	0x74697573
 80087d8:	00000065 	.word	0x00000065
 80087dc:	002a2a2a 	.word	0x002a2a2a
 80087e0:	20727041 	.word	0x20727041
 80087e4:	32203620 	.word	0x32203620
 80087e8:	20383130 	.word	0x20383130
 80087ec:	3631202d 	.word	0x3631202d
 80087f0:	3a31303a 	.word	0x3a31303a
 80087f4:	00003432 	.word	0x00003432
 80087f8:	00000029 	.word	0x00000029
 80087fc:	0000295d 	.word	0x0000295d
 8008800:	202d2d2d 	.word	0x202d2d2d
 8008804:	75736552 	.word	0x75736552
 8008808:	203a746c 	.word	0x203a746c
 800880c:	43435553 	.word	0x43435553
 8008810:	00535345 	.word	0x00535345
 8008814:	4c494146 	.word	0x4c494146
 8008818:	00455255 	.word	0x00455255
 800881c:	00000000 	.word	0x00000000
 8008820:	64616572 	.word	0x64616572
 8008824:	00007265 	.word	0x00007265
	...

08008830 <_stm32_dma_streams>:
 8008830:	40026010 40026008 000b0000 40026028     .`.@.`.@....(`.@
 8008840:	40026008 000c0106 40026040 40026008     .`.@....@`.@.`.@
 8008850:	000d0210 40026058 40026008 000e0316     ....X`.@.`.@....
 8008860:	40026070 4002600c 000f0400 40026088     p`.@.`.@.....`.@
 8008870:	4002600c 00100506 400260a0 4002600c     .`.@.....`.@.`.@
 8008880:	00110610 400260b8 4002600c 002f0716     .....`.@.`.@../.
 8008890:	40026410 40026408 00380800 40026428     .d.@.d.@..8.(d.@
 80088a0:	40026408 00390906 40026440 40026408     .d.@..9.@d.@.d.@
 80088b0:	003a0a10 40026458 40026408 003b0b16     ..:.Xd.@.d.@..;.
 80088c0:	40026470 4002640c 003c0c00 40026488     pd.@.d.@..<..d.@
 80088d0:	4002640c 00440d06 400264a0 4002640c     .d.@..D..d.@.d.@
 80088e0:	00450e10 400264b8 4002640c 00460f16     ..E..d.@.d.@..F.
 80088f0:	00000920 00000000 00000000 00000000      ...............
 8008900:	61686e75 656c646e 78652064 74706563     unhandled except
 8008910:	006e6f69 00000000 00000000 00000000     ion.............

08008920 <active_status>:
	...
 8008930:	202d2d2d 726f6353 203a2065 00000000     --- Score : ....
 8008940:	6d697420 2f737265 00000053 00000000      timers/S.......
 8008950:	69617720 69732b74 6c616e67 0000532f      wait+signal/S..
 8008960:	636f6c20 6e752b6b 6b636f6c 0000532f      lock+unlock/S..
 8008970:	202d2d2d 74737953 203a6d65 00000000     --- System: ....
 8008980:	74796220 00007365 202d2d2d 65726854      bytes..--- Thre
 8008990:	203a6461 00000000 202d2d2d 656d6954     ad: ....--- Time
 80089a0:	203a2072 00000000 202d2d2d 616d6553     r : ....--- Sema
 80089b0:	203a6870 00000000 202d2d2d 6e657645     ph: ....--- Even
 80089c0:	203a5374 00000000 202d2d2d 6e657645     tS: ....--- Even
 80089d0:	203a4c74 00000000 202d2d2d 6574754d     tL: ....--- Mute
 80089e0:	203a2078 00000000 202d2d2d 646e6f43     x : ....--- Cond
 80089f0:	203a2e56 00000000 202d2d2d 75657551     V.: ....--- Queu
 8008a00:	203a2065 00000000 202d2d2d 6c69614d     e : ....--- Mail
 8008a10:	203a2e42 00000000 00000000 00000000     B.: ............
 8008a20:	67736d20 2c532f73 00000020 00000000      msgs/S, .......
 8008a30:	72687420 73646165 0000532f 00000000      threads/S......
 8008a40:	73657220 64656863 73656c75 202c532f      reschedules/S, 
	...
 8008a60:	78746320 2f637773 00000053 00000000      ctxswc/S.......
 8008a70:	74796220 532f7365 00000000 00000000      bytes/S........

08008a80 <ch_debug>:
 8008a80:	6e69616d 18011600 08440404 1814100c     main......D.....
 8008a90:	1e1d1c00 00000000 00000000 00000000     ................
 8008aa0:	6c756e28 0000296c 00000000 00000000     (null)..........
 8008ab0:	6f666e69 00000000 2e302e33 00000030     info....3.0.0...
 8008ac0:	6e72654b 203a6c65 20202020 73252020     Kernel:       %s
 8008ad0:	00000a0d 20434347 2e322e37 30322031     ....GCC 7.2.1 20
 8008ae0:	39303731 28203430 656c6572 29657361     170904 (release)
 8008af0:	52415b20 6d652f4d 64646562 372d6465      [ARM/embedded-7
 8008b00:	6172622d 2068636e 69766572 6e6f6973     -branch revision
 8008b10:	35353220 5d343032 00000000 706d6f43      255204]....Comp
 8008b20:	72656c69 2020203a 73252020 00000a0d     iler:     %s....
 8008b30:	764d5241 454d2d37 00000000 68637241     ARMv7-ME....Arch
 8008b40:	63657469 65727574 7325203a 00000a0d     itecture: %s....
 8008b50:	74726f43 4d2d7865 00000034 65726f43     Cortex-M4...Core
 8008b60:	72615620 746e6169 7325203a 00000a0d      Variant: %s....
 8008b70:	61766441 6465636e 72656b20 206c656e     Advanced kernel 
 8008b80:	65646f6d 00000000 74726f50 666e4920     mode....Port Inf
 8008b90:	20203a6f 73252020 00000a0d 334d5453     o:    %s....STM3
 8008ba0:	30344632 69482037 50206867 6f667265     2F407 High Perfo
 8008bb0:	6e616d72 77206563 20687469 20505344     rmance with DSP 
 8008bc0:	20646e61 00555046 74616c50 6d726f66     and FPU.Platform
 8008bd0:	2020203a 73252020 00000a0d 694d5453     :     %s....STMi
 8008be0:	656f7263 7463656c 696e6f72 53207363     croelectronics S
 8008bf0:	32334d54 442d3446 6f637369 79726576     TM32F4-Discovery
 8008c00:	00000000 72616f42 20203a64 20202020     ....Board:      
 8008c10:	73252020 00000a0d 00202d20 20727041       %s.... - .Apr 
 8008c20:	32203620 00383130 6c697542 69742064      6 2018.Build ti
 8008c30:	203a656d 73252020 73257325 00000a0d     me:   %s%s%s....
 8008c40:	303a3631 35323a31 00000000 00000000     16:01:25........
 8008c50:	67617355 6d203a65 0a0d6d65 00000000     Usage: mem......
 8008c60:	65726f63 65726620 656d2065 79726f6d     core free memory
 8008c70:	25203a20 79622075 0d736574 0000000a      : %u bytes.....
 8008c80:	70616568 61726620 6e656d67 20207374     heap fragments  
 8008c90:	25203a20 000a0d75 70616568 65726620      : %u...heap fre
 8008ca0:	6f742065 206c6174 25203a20 79622075     e total  : %u by
 8008cb0:	0d736574 0000000a 00000000 00000000     tes.............
 8008cc0:	74737973 00656d69 67617355 25203a65     systime.Usage: %
 8008cd0:	000a0d73 0d756c25 0000000a 00000000     s...%lu.........
 8008ce0:	67617355 74203a65 0d747365 0000000a     Usage: test.....
 8008cf0:	2074756f 6d20666f 726f6d65 000a0d79     out of memory...
 8008d00:	67617355 74203a65 61657268 0a0d7364     Usage: threads..
 8008d10:	00000000 20202020 72646461 20202020     ....    addr    
 8008d20:	63617473 7270206b 72206f69 20736665     stack prio refs 
 8008d30:	20202020 74617473 000a0d65 6c383025         state...%08l
 8008d40:	30252078 20786c38 756c3425 6c342520     x %08lx %4lu %4l
 8008d50:	39252075 000a0d73 00000000 00000000     u %9s...........

08008d60 <commands>:
 8008d60:	0800963c 08004bb1 08009640 08004d31     <....K..@...1M..
 8008d70:	08009518 08005b91 00000000 00000000     .....[..........
 8008d80:	00004241 00000000 00000000 00000000     AB..............
 8008d90:	00000042 00000043 00000000 00000000     B...C...........
 8008da0:	00000041 00000000 00000000 00000000     A...............

08008db0 <ep0config>:
 8008db0:	00000000 08002981 08000d91 08000cf1     .....)..........
 8008dc0:	00400040 20001574 20001574 00000001     @.@.t.. t.. ....
 8008dd0:	20001588 00000000 00000000 00000000     ... ............

08008de0 <ep1config>:
 8008de0:	00000002 00000000 08001ca1 08001c21     ............!...
 8008df0:	00400040 20001590 200015a4 00000002     @.@.... ... ....
	...

08008e10 <ep2config>:
 8008e10:	00000003 00000000 08000f71 00000000     ........q.......
 8008e20:	00000010 200015b8 00000000 00000001     ....... ........
	...

08008e40 <evhndl>:
 8008e40:	08000961 08000951 08000941 00000000     a...Q...A.......
 8008e50:	00434241 00000000 00000000 00000000     ABC.............

08008e60 <fsparams>:
 8008e60:	00000080 00000140 00000003 00000000     ....@...........

08008e70 <halted_status>:
 8008e70:	00000001 00000000 00000000 00000000     ................
 8008e80:	656c6469 00000000 00000000 00000000     idle............
 8008e90:	44434241 00000045 00000000 00000000     ABCDE...........

08008ea0 <patternbmk>:
 8008ea0:	080096e0 08009730 08009740 08009750     ....0...@...P...
 8008eb0:	08009760 08009770 08009780 08009790     `...p...........
 8008ec0:	080097a0 080096f0 08009700 08009710     ................
 8008ed0:	08009720 00000000 00000000 00000000      ...............

08008ee0 <patterndyn>:
 8008ee0:	080097b0 080097c0 080097d0 00000000     ................

08008ef0 <patternevt>:
 8008ef0:	080097e0 080097f0 08009800 00000000     ................

08008f00 <patternheap>:
 8008f00:	08009810 00000000 00000000 00000000     ................

08008f10 <patternmbox>:
 8008f10:	08009820 00000000 00000000 00000000      ...............

08008f20 <patternmsg>:
 8008f20:	08009830 00000000 00000000 00000000     0...............

08008f30 <patternmtx>:
 8008f30:	08009840 08009850 08009860 08009870     @...P...`...p...
 8008f40:	08009880 08009890 00000000 00000000     ................

08008f50 <patternpools>:
 8008f50:	080098a0 00000000 00000000 00000000     ................

08008f60 <patternqueues>:
 8008f60:	080098b0 080098c0 00000000 00000000     ................

08008f70 <patterns>:
 8008f70:	08008fd0 08008fe0 08008fb0 08008f30     ............0...
 8008f80:	08008f20 08008f10 08008ef0 08008f00      ...............
 8008f90:	08008f50 08008ee0 08008f60 08008ea0     P.......`.......
	...

08008fb0 <patternsem>:
 8008fb0:	080098d0 080098e0 080098f0 08009900     ................
	...

08008fd0 <patternsys>:
 8008fd0:	08009910 08009920 08009930 00000000     .... ...0.......

08008fe0 <patternthd>:
 8008fe0:	08009940 08009950 08009960 08009970     @...P...`...p...
	...

08009000 <pwmcfg>:
 8009000:	000186a0 00000080 00000000 00000001     ................
 8009010:	00000000 00000001 00000000 00000001     ................
 8009020:	00000000 00000001 00000000 00000000     ................
	...
 8009040:	44434241 00000000 00000000 00000000     ABCD............

08009050 <serusbcfg>:
 8009050:	200011c0 00020101 00000000 00000000     ... ............

08009060 <shell_cfg1>:
 8009060:	20000f04 08008d60 00000000 00000000     ... `...........
 8009070:	6c656873 0000006c 68430a0d 4f696269     shell.....ChibiO
 8009080:	54522f53 65685320 0a0d6c6c 00000000     S/RT Shell......
 8009090:	203e6863 00000000 0000445e 6f6c0a0d     ch> ....^D....lo
 80090a0:	74756f67 00000000 206f6f74 796e616d     gout....too many
 80090b0:	67726120 6e656d75 0a0d7374 00000000      arguments......
 80090c0:	74697865 00000000 706c6568 00000000     exit....help....
 80090d0:	6d6d6f43 73646e61 6568203a 6520706c     Commands: help e
 80090e0:	20746978 00000000 00207325 00007325     xit ....%s .%s..
 80090f0:	0a0d3f20 00000000 00000000 00000000      ?..............

08009100 <spi1cfg>:
 8009100:	00000000 40021000 001b0003 00000000     .......@........

08009110 <spi2cfg>:
 8009110:	00000000 40020400 0000000c 00000000     .......@........
 8009120:	20414d44 6c696166 00657275 00000000     DMA failure.....

08009130 <states.7666>:
 8009130:	08009648 08009650 08009658 08009660     H...P...X...`...
 8009140:	0800966c 08009674 0800967c 08009684     l...t...|.......
 8009150:	0800968c 08009698 080096a0 080096a8     ................
 8009160:	080096b4 080096bc 080096c4 080096cc     ................
 8009170:	636e6542 72616d68 52202c6b 66204d41     Benchmark, RAM f
 8009180:	70746f6f 746e6972 00000000 636e6542     ootprint....Benc
 8009190:	72616d68 6d202c6b 78657475 6c207365     hmark, mutexes l
 80091a0:	2f6b636f 6f6c6e75 00006b63 636e6542     ock/unlock..Benc
 80091b0:	72616d68 73202c6b 70616d65 65726f68     hmark, semaphore
 80091c0:	61772073 732f7469 616e6769 0000006c     s wait/signal...
 80091d0:	636e6542 72616d68 76202c6b 75747269     Benchmark, virtu
 80091e0:	74206c61 72656d69 65732073 65722f74     al timers set/re
 80091f0:	00746573 636e6542 72616d68 49202c6b     set.Benchmark, I
 8009200:	51204f2f 65756575 68742073 67756f72     /O Queues throug
 8009210:	74757068 00000000 636e6542 72616d68     hput....Benchmar
 8009220:	72202c6b 646e756f 626f7220 63206e69     k, round robin c
 8009230:	65746e6f 73207478 63746977 676e6968     ontext switching
 8009240:	00000000 636e6542 72616d68 6d202c6b     ....Benchmark, m
 8009250:	20737361 63736572 75646568 202c656c     ass reschedule, 
 8009260:	68742035 64616572 00000073 636e6542     5 threads...Benc
 8009270:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8009280:	61657263 6f206574 00796c6e 636e6542     create only.Benc
 8009290:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 80092a0:	6c6c7566 63796320 0000656c 636e6542     full cycle..Benc
 80092b0:	72616d68 63202c6b 65746e6f 73207478     hmark, context s
 80092c0:	63746977 00000068 636e6542 72616d68     witch...Benchmar
 80092d0:	6d202c6b 61737365 20736567 00003323     k, messages #3..
 80092e0:	636e6542 72616d68 6d202c6b 61737365     Benchmark, messa
 80092f0:	20736567 00003223 636e6542 72616d68     ges #2..Benchmar
 8009300:	6d202c6b 61737365 20736567 00003123     k, messages #1..
 8009310:	75657551 202c7365 7074756f 71207475     Queues, output q
 8009320:	65756575 00000073 75657551 202c7365     ueues...Queues, 
 8009330:	75706e69 75712074 73657565 00000000     input queues....
 8009340:	616e7944 2063696d 73495041 6572202c     Dynamic APIs, re
 8009350:	74736967 61207972 7220646e 72656665     gistry and refer
 8009360:	65636e65 00000073 616e7944 2063696d     ences...Dynamic 
 8009370:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8009380:	69746165 66206e6f 206d6f72 6f6d656d     eation from memo
 8009390:	70207972 006c6f6f 616e7944 2063696d     ry pool.Dynamic 
 80093a0:	73495041 6874202c 64616572 72632073     APIs, threads cr
 80093b0:	69746165 66206e6f 206d6f72 70616568     eation from heap
 80093c0:	00000000 6f6d654d 50207972 736c6f6f     ....Memory Pools
 80093d0:	7571202c 2f657565 75716564 00657565     , queue/dequeue.
 80093e0:	70616548 6c61202c 61636f6c 6e6f6974     Heap, allocation
 80093f0:	646e6120 61726620 6e656d67 69746174      and fragmentati
 8009400:	74206e6f 00747365 6e657645 202c7374     on test.Events, 
 8009410:	656d6974 7374756f 00000000 6e657645     timeouts....Even
 8009420:	202c7374 74696177 646e6120 6f726220     ts, wait and bro
 8009430:	61636461 00007473 6e657645 202c7374     adcast..Events, 
 8009440:	69676572 61727473 6e6f6974 646e6120     registration and
 8009450:	73696420 63746170 00000068 6c69614d      dispatch...Mail
 8009460:	65786f62 71202c73 69756575 6120676e     boxes, queuing a
 8009470:	7420646e 6f656d69 00737475 7373654d     nd timeouts.Mess
 8009480:	73656761 6f6c202c 0000706f 646e6f43     ages, loop..Cond
 8009490:	2c726156 6f6f6220 74207473 00747365     Var, boost test.
 80094a0:	646e6f43 2c726156 6f726220 61636461     CondVar, broadca
 80094b0:	74207473 00747365 646e6f43 2c726156     st test.CondVar,
 80094c0:	67697320 206c616e 74736574 00000000      signal test....
 80094d0:	6574754d 2c736578 61747320 00737574     Mutexes, status.
 80094e0:	6574754d 2c736578 69727020 7469726f     Mutexes, priorit
 80094f0:	65722079 6e727574 00000000 6574754d     y return....Mute
 8009500:	2c736578 69727020 7469726f 6e652079     xes, priority en
 8009510:	75657571 20676e69 74736574 00000000     queuing test....
 8009520:	616e6942 53207972 70616d65 65726f68     Binary Semaphore
 8009530:	66202c73 74636e75 616e6f69 7974696c     s, functionality
 8009540:	00000000 616d6553 726f6870 202c7365     ....Semaphores, 
 8009550:	6d6f7461 73206369 616e6769 61772d6c     atomic signal-wa
 8009560:	00007469 616d6553 726f6870 202c7365     it..Semaphores, 
 8009570:	656d6974 0074756f 616d6553 726f6870     timeout.Semaphor
 8009580:	202c7365 75716e65 6e697565 00000067     es, enqueuing...
 8009590:	65726854 2c736461 6c656420 00737961     Threads, delays.
 80095a0:	65726854 2c736461 69727020 7469726f     Threads, priorit
 80095b0:	68632079 65676e61 00000000 65726854     y change....Thre
 80095c0:	2c736461 716e6520 69756575 7420676e     ads, enqueuing t
 80095d0:	20747365 00003223 65726854 2c736461     est #2..Threads,
 80095e0:	716e6520 69756575 7420676e 20747365      enqueuing test 
 80095f0:	00003123 74737953 202c6d65 65746e69     #1..System, inte
 8009600:	74697267 00000079 74737953 202c6d65     grity...System, 
 8009610:	65746e69 70757272 68207374 6c646e61     interrupts handl
 8009620:	00676e69 74737953 202c6d65 74697263     ing.System, crit
 8009630:	6c616369 6e6f7a20 00007365 006d656d     ical zones..mem.
 8009640:	65726874 00736461 44414552 00000059     threads.READY...
 8009650:	52525543 00544e45 54535457 00545241     CURRENT.WTSTART.
 8009660:	50535553 45444e45 00000044 55455551     SUSPENDED...QUEU
 8009670:	00004445 45535457 0000004d 544d5457     ED..WTSEM...WTMT
 8009680:	00000058 4f435457 0000444e 45454c53     X...WTCOND..SLEE
 8009690:	474e4950 00000000 58455457 00005449     PING....WTEXIT..
 80096a0:	524f5457 00545645 4e415457 54564544     WTOREVT.WTANDEVT
 80096b0:	00000000 4d444e53 00514753 4d444e53     ....SNDMSGQ.SNDM
 80096c0:	00004753 534d5457 00000047 414e4946     SG..WTMSG...FINA
 80096d0:	0000004c 00000000 00000000 00000000     L...............

080096e0 <testbmk1>:
 80096e0:	080092f8 00000000 00000000 080060a1     .............`..

080096f0 <testbmk10>:
 80096f0:	080091d0 00000000 00000000 080043a1     .............C..

08009700 <testbmk11>:
 8009700:	080091ac 080004c1 00000000 080052a1     .............R..

08009710 <testbmk12>:
 8009710:	0800918c 080004b1 00000000 08004881     .............H..

08009720 <testbmk13>:
 8009720:	08009170 00000000 00000000 08002891     p............(..

08009730 <testbmk2>:
 8009730:	080092e0 00000000 00000000 08006031     ............1`..

08009740 <testbmk3>:
 8009740:	080092c8 00000000 00000000 08005f51     ............Q_..

08009750 <testbmk4>:
 8009750:	080092ac 00000000 00000000 08005ea1     .............^..

08009760 <testbmk5>:
 8009760:	0800928c 00000000 00000000 08005be1     .............[..

08009770 <testbmk6>:
 8009770:	0800926c 00000000 00000000 080044e1     l............D..

08009780 <testbmk7>:
 8009780:	08009244 080004f1 00000000 08005d71     D...........q]..

08009790 <testbmk8>:
 8009790:	08009218 00000000 00000000 08005c91     .............\..

080097a0 <testbmk9>:
 80097a0:	080091f4 00000000 00000000 08004431     ............1D..

080097b0 <testdyn1>:
 80097b0:	08009398 080005a1 00000000 080066e1     .............f..

080097c0 <testdyn2>:
 80097c0:	08009368 08000581 00000000 080065e1     h............e..

080097d0 <testdyn3>:
 80097d0:	08009340 080005d1 00000000 08005111     @............Q..

080097e0 <testevt1>:
 80097e0:	08009438 08000641 00000000 08001601     8...A...........

080097f0 <testevt2>:
 80097f0:	0800941c 08000661 00000000 080067e1     ....a........g..

08009800 <testevt3>:
 8009800:	08009408 08000651 00000000 080036b1     ....Q........6..

08009810 <testheap1>:
 8009810:	080093e0 08000611 00000000 08004e81     .............N..

08009820 <testmbox1>:
 8009820:	0800945c 08000671 00000000 08003941     \...q.......A9..

08009830 <testmsg1>:
 8009830:	0800947c 00000000 00000000 08004651     |...........QF..

08009840 <testmtx1>:
 8009840:	080094fc 08000731 00000000 08006f81     ....1........o..

08009850 <testmtx4>:
 8009850:	080094e0 08000711 00000000 08006d21     ............!m..

08009860 <testmtx5>:
 8009860:	080094d0 08000741 00000000 08004a11     ....A........J..

08009870 <testmtx6>:
 8009870:	080094b8 080006e1 00000000 08006c41     ............Al..

08009880 <testmtx7>:
 8009880:	080094a0 08000701 00000000 08006b51     ............Qk..

08009890 <testmtx8>:
 8009890:	0800948c 080006b1 00000000 08006ac1     .............j..

080098a0 <testpools1>:
 80098a0:	080093c4 080005f1 00000000 080014f1     ................

080098b0 <testqueues1>:
 80098b0:	08009328 08000551 00000000 08006351     (...Q.......Qc..

080098c0 <testqueues2>:
 80098c0:	08009310 08000521 00000000 08006111     ....!........a..

080098d0 <testsem1>:
 80098d0:	08009578 08000751 00000000 080071c1     x...Q........q..

080098e0 <testsem2>:
 80098e0:	08009564 08000771 00000000 08007071     d...q.......qp..

080098f0 <testsem3>:
 80098f0:	08009544 08000761 00000000 080034e1     D...a........4..

08009900 <testsem4>:
 8009900:	08009520 00000000 00000000 08005341      ...........AS..

08009910 <testsys1>:
 8009910:	08009624 00000000 00000000 08004221     $...........!B..

08009920 <testsys2>:
 8009920:	08009608 00000000 00000000 08000501     ................

08009930 <testsys3>:
 8009930:	080095f4 00000000 00000000 080022c1     ............."..

08009940 <testthd1>:
 8009940:	080095d8 00000000 00000000 08007421     ............!t..

08009950 <testthd2>:
 8009950:	080095bc 00000000 00000000 08007331     ............1s..

08009960 <testthd3>:
 8009960:	080095a0 00000000 00000000 080030d1     .............0..

08009970 <testthd4>:
 8009970:	08009590 00000000 00000000 08004551     ............QE..
 8009980:	5f627375 5f646c6c 706d7570 00000000     usb_lld_pump....

08009990 <usbcfg>:
 8009990:	08002e71 08000481 08000ff1 00000000     q...............

080099a0 <vcom_configuration_descriptor>:
 80099a0:	00000043 080099b0 00000000 00000000     C...............

080099b0 <vcom_configuration_descriptor_data>:
 80099b0:	00430209 c0000102 00040932 02020100     ..C.....2.......
 80099c0:	24050001 05011000 01000124 02022404     ...$....$....$..
 80099d0:	00062405 82050701 ff000803 00010409     .$..............
 80099e0:	00000a02 01050700 00004002 02810507     .........@......
 80099f0:	00000040 00000000 00000000 00000000     @...............

08009a00 <vcom_device_descriptor>:
 8009a00:	00000012 08009a10 00000000 00000000     ................

08009a10 <vcom_device_descriptor_data>:
 8009a10:	01100112 40000002 57400483 02010200     .......@..@W....
 8009a20:	00000103 00000000 00000000 00000000     ................

08009a30 <vcom_string0>:
 8009a30:	04090304 00000000 00000000 00000000     ................

08009a40 <vcom_string1>:
 8009a40:	00530326 004d0054 00630069 006f0072     &.S.T.M.i.c.r.o.
 8009a50:	006c0065 00630065 00720074 006e006f     e.l.e.c.t.r.o.n.
 8009a60:	00630069 00000073 00000000 00000000     i.c.s...........

08009a70 <vcom_string2>:
 8009a70:	00430338 00690068 00690062 0053004f     8.C.h.i.b.i.O.S.
 8009a80:	0052002f 00200054 00690056 00740072     /.R.T. .V.i.r.t.
 8009a90:	00610075 0020006c 004f0043 0020004d     u.a.l. .C.O.M. .
 8009aa0:	006f0050 00740072 00000000 00000000     P.o.r.t.........

08009ab0 <vcom_string3>:
 8009ab0:	00330308 00310030 00000000 00000000     ..3.0.1.........

08009ac0 <vcom_strings>:
 8009ac0:	00000004 08009a30 00000026 08009a40     ....0...&...@...
 8009ad0:	00000038 08009a70 00000008 08009ab0     8...p...........

08009ae0 <vmt.lto_priv.86>:
 8009ae0:	08003fd1 08004131 08004071 080041d1     .?..1A..q@...A..
 8009af0:	08004061 080041c1 08003fc1 08004121     a@...A...?..!A..

08009b00 <vmt.lto_priv.87>:
 8009b00:	08003fb1 08004111 08004051 080041b1     .?...A..Q@...A..
 8009b10:	08004041 080041a1 08003fa1 08004101     A@...A...?...A..

08009b20 <wa>:
 8009b20:	20001660 200017a8 200018f0 20001a38     `.. ... ... 8.. 
 8009b30:	20001b80 00000000 00000000 00000000     ... ............

08009b40 <zero_status>:
	...
 8009b50:	49534f50 00000058 00000000 00000000     POSIX...........
 8009b60:	0000002e 00000000 00000000 00000000     ................

08009b70 <_ctype_>:
 8009b70:	20202000 20202020 28282020 20282828     .         ((((( 
 8009b80:	20202020 20202020 20202020 20202020                     
 8009b90:	10108820 10101010 10101010 10101010      ...............
 8009ba0:	04040410 04040404 10040404 10101010     ................
 8009bb0:	41411010 41414141 01010101 01010101     ..AAAAAA........
 8009bc0:	01010101 01010101 01010101 10101010     ................
 8009bd0:	42421010 42424242 02020202 02020202     ..BBBBBB........
 8009be0:	02020202 02020202 02020202 10101010     ................
 8009bf0:	00000020 00000000 00000000 00000000      ...............
	...
