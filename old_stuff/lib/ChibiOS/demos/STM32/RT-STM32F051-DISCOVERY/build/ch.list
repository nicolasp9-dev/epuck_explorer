
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

080000c0 <Reset_Handler>:
 80000c0:	b672      	cpsid	i
 80000c2:	4820      	ldr	r0, [pc, #128]	; (8000144 <endfiniloop+0x4>)
 80000c4:	f380 8809 	msr	PSP, r0
 80000c8:	2002      	movs	r0, #2
 80000ca:	f380 8814 	msr	CONTROL, r0
 80000ce:	f3bf 8f6f 	isb	sy
 80000d2:	f005 fa65 	bl	80055a0 <__early_init>
 80000d6:	481c      	ldr	r0, [pc, #112]	; (8000148 <endfiniloop+0x8>)
 80000d8:	491c      	ldr	r1, [pc, #112]	; (800014c <endfiniloop+0xc>)
 80000da:	4a1d      	ldr	r2, [pc, #116]	; (8000150 <endfiniloop+0x10>)

080000dc <msloop>:
 80000dc:	4291      	cmp	r1, r2
 80000de:	da02      	bge.n	80000e6 <endmsloop>
 80000e0:	6008      	str	r0, [r1, #0]
 80000e2:	3104      	adds	r1, #4
 80000e4:	e7fa      	b.n	80000dc <msloop>

080000e6 <endmsloop>:
 80000e6:	491b      	ldr	r1, [pc, #108]	; (8000154 <endfiniloop+0x14>)
 80000e8:	4a16      	ldr	r2, [pc, #88]	; (8000144 <endfiniloop+0x4>)

080000ea <psloop>:
 80000ea:	4291      	cmp	r1, r2
 80000ec:	da02      	bge.n	80000f4 <endpsloop>
 80000ee:	6008      	str	r0, [r1, #0]
 80000f0:	3104      	adds	r1, #4
 80000f2:	e7fa      	b.n	80000ea <psloop>

080000f4 <endpsloop>:
 80000f4:	4918      	ldr	r1, [pc, #96]	; (8000158 <endfiniloop+0x18>)
 80000f6:	4a19      	ldr	r2, [pc, #100]	; (800015c <endfiniloop+0x1c>)
 80000f8:	4b19      	ldr	r3, [pc, #100]	; (8000160 <endfiniloop+0x20>)

080000fa <dloop>:
 80000fa:	429a      	cmp	r2, r3
 80000fc:	da04      	bge.n	8000108 <enddloop>
 80000fe:	6808      	ldr	r0, [r1, #0]
 8000100:	6010      	str	r0, [r2, #0]
 8000102:	3104      	adds	r1, #4
 8000104:	3204      	adds	r2, #4
 8000106:	e7f8      	b.n	80000fa <dloop>

08000108 <enddloop>:
 8000108:	2000      	movs	r0, #0
 800010a:	4916      	ldr	r1, [pc, #88]	; (8000164 <endfiniloop+0x24>)
 800010c:	4a16      	ldr	r2, [pc, #88]	; (8000168 <endfiniloop+0x28>)

0800010e <bloop>:
 800010e:	4291      	cmp	r1, r2
 8000110:	da02      	bge.n	8000118 <endbloop>
 8000112:	6008      	str	r0, [r1, #0]
 8000114:	3104      	adds	r1, #4
 8000116:	e7fa      	b.n	800010e <bloop>

08000118 <endbloop>:
 8000118:	f005 fad2 	bl	80056c0 <__late_init>
 800011c:	4c13      	ldr	r4, [pc, #76]	; (800016c <endfiniloop+0x2c>)
 800011e:	4d14      	ldr	r5, [pc, #80]	; (8000170 <endfiniloop+0x30>)

08000120 <initloop>:
 8000120:	42ac      	cmp	r4, r5
 8000122:	da03      	bge.n	800012c <endinitloop>
 8000124:	6821      	ldr	r1, [r4, #0]
 8000126:	4788      	blx	r1
 8000128:	3404      	adds	r4, #4
 800012a:	e7f9      	b.n	8000120 <initloop>

0800012c <endinitloop>:
 800012c:	f004 fef8 	bl	8004f20 <main>
 8000130:	4c10      	ldr	r4, [pc, #64]	; (8000174 <endfiniloop+0x34>)
 8000132:	4d11      	ldr	r5, [pc, #68]	; (8000178 <endfiniloop+0x38>)

08000134 <finiloop>:
 8000134:	42ac      	cmp	r4, r5
 8000136:	da03      	bge.n	8000140 <endfiniloop>
 8000138:	6821      	ldr	r1, [r4, #0]
 800013a:	4788      	blx	r1
 800013c:	3404      	adds	r4, #4
 800013e:	e7f9      	b.n	8000134 <finiloop>

08000140 <endfiniloop>:
 8000140:	490e      	ldr	r1, [pc, #56]	; (800017c <endfiniloop+0x3c>)
 8000142:	4708      	bx	r1
 8000144:	20000600 	.word	0x20000600
 8000148:	55555555 	.word	0x55555555
 800014c:	20000000 	.word	0x20000000
 8000150:	20000400 	.word	0x20000400
 8000154:	20000400 	.word	0x20000400
 8000158:	08006438 	.word	0x08006438
 800015c:	20000600 	.word	0x20000600
 8000160:	200006b8 	.word	0x200006b8
 8000164:	200006b8 	.word	0x200006b8
 8000168:	200012c8 	.word	0x200012c8
 800016c:	080000c0 	.word	0x080000c0
 8000170:	080000c0 	.word	0x080000c0
 8000174:	080000c0 	.word	0x080000c0
 8000178:	080000c0 	.word	0x080000c0
 800017c:	080056b1 	.word	0x080056b1

08000180 <_port_switch>:
 8000180:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000182:	4644      	mov	r4, r8
 8000184:	464d      	mov	r5, r9
 8000186:	4656      	mov	r6, sl
 8000188:	465f      	mov	r7, fp
 800018a:	b4f0      	push	{r4, r5, r6, r7}
 800018c:	466b      	mov	r3, sp
 800018e:	60cb      	str	r3, [r1, #12]
 8000190:	68c3      	ldr	r3, [r0, #12]
 8000192:	469d      	mov	sp, r3
 8000194:	bcf0      	pop	{r4, r5, r6, r7}
 8000196:	46a0      	mov	r8, r4
 8000198:	46a9      	mov	r9, r5
 800019a:	46b2      	mov	sl, r6
 800019c:	46bb      	mov	fp, r7
 800019e:	bdf0      	pop	{r4, r5, r6, r7, pc}

080001a0 <_port_thread_start>:
 80001a0:	b662      	cpsie	i
 80001a2:	1c28      	adds	r0, r5, #0
 80001a4:	47a0      	blx	r4
 80001a6:	2000      	movs	r0, #0
 80001a8:	f005 fa52 	bl	8005650 <chThdExit>

080001ac <_port_switch_from_isr>:
 80001ac:	f005 fa78 	bl	80056a0 <chSchDoReschedule>

080001b0 <_port_exit_from_isr>:
 80001b0:	4a01      	ldr	r2, [pc, #4]	; (80001b8 <_port_exit_from_isr+0x8>)
 80001b2:	4b02      	ldr	r3, [pc, #8]	; (80001bc <_port_exit_from_isr+0xc>)
 80001b4:	6013      	str	r3, [r2, #0]
 80001b6:	e7fe      	b.n	80001b6 <_port_exit_from_isr+0x6>
 80001b8:	e000ed04 	.word	0xe000ed04
 80001bc:	80000000 	.word	0x80000000

080001c0 <__udivsi3>:
 80001c0:	2200      	movs	r2, #0
 80001c2:	0843      	lsrs	r3, r0, #1
 80001c4:	428b      	cmp	r3, r1
 80001c6:	d374      	bcc.n	80002b2 <__udivsi3+0xf2>
 80001c8:	0903      	lsrs	r3, r0, #4
 80001ca:	428b      	cmp	r3, r1
 80001cc:	d35f      	bcc.n	800028e <__udivsi3+0xce>
 80001ce:	0a03      	lsrs	r3, r0, #8
 80001d0:	428b      	cmp	r3, r1
 80001d2:	d344      	bcc.n	800025e <__udivsi3+0x9e>
 80001d4:	0b03      	lsrs	r3, r0, #12
 80001d6:	428b      	cmp	r3, r1
 80001d8:	d328      	bcc.n	800022c <__udivsi3+0x6c>
 80001da:	0c03      	lsrs	r3, r0, #16
 80001dc:	428b      	cmp	r3, r1
 80001de:	d30d      	bcc.n	80001fc <__udivsi3+0x3c>
 80001e0:	22ff      	movs	r2, #255	; 0xff
 80001e2:	0209      	lsls	r1, r1, #8
 80001e4:	ba12      	rev	r2, r2
 80001e6:	0c03      	lsrs	r3, r0, #16
 80001e8:	428b      	cmp	r3, r1
 80001ea:	d302      	bcc.n	80001f2 <__udivsi3+0x32>
 80001ec:	1212      	asrs	r2, r2, #8
 80001ee:	0209      	lsls	r1, r1, #8
 80001f0:	d065      	beq.n	80002be <__udivsi3+0xfe>
 80001f2:	0b03      	lsrs	r3, r0, #12
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d319      	bcc.n	800022c <__udivsi3+0x6c>
 80001f8:	e000      	b.n	80001fc <__udivsi3+0x3c>
 80001fa:	0a09      	lsrs	r1, r1, #8
 80001fc:	0bc3      	lsrs	r3, r0, #15
 80001fe:	428b      	cmp	r3, r1
 8000200:	d301      	bcc.n	8000206 <__udivsi3+0x46>
 8000202:	03cb      	lsls	r3, r1, #15
 8000204:	1ac0      	subs	r0, r0, r3
 8000206:	4152      	adcs	r2, r2
 8000208:	0b83      	lsrs	r3, r0, #14
 800020a:	428b      	cmp	r3, r1
 800020c:	d301      	bcc.n	8000212 <__udivsi3+0x52>
 800020e:	038b      	lsls	r3, r1, #14
 8000210:	1ac0      	subs	r0, r0, r3
 8000212:	4152      	adcs	r2, r2
 8000214:	0b43      	lsrs	r3, r0, #13
 8000216:	428b      	cmp	r3, r1
 8000218:	d301      	bcc.n	800021e <__udivsi3+0x5e>
 800021a:	034b      	lsls	r3, r1, #13
 800021c:	1ac0      	subs	r0, r0, r3
 800021e:	4152      	adcs	r2, r2
 8000220:	0b03      	lsrs	r3, r0, #12
 8000222:	428b      	cmp	r3, r1
 8000224:	d301      	bcc.n	800022a <__udivsi3+0x6a>
 8000226:	030b      	lsls	r3, r1, #12
 8000228:	1ac0      	subs	r0, r0, r3
 800022a:	4152      	adcs	r2, r2
 800022c:	0ac3      	lsrs	r3, r0, #11
 800022e:	428b      	cmp	r3, r1
 8000230:	d301      	bcc.n	8000236 <__udivsi3+0x76>
 8000232:	02cb      	lsls	r3, r1, #11
 8000234:	1ac0      	subs	r0, r0, r3
 8000236:	4152      	adcs	r2, r2
 8000238:	0a83      	lsrs	r3, r0, #10
 800023a:	428b      	cmp	r3, r1
 800023c:	d301      	bcc.n	8000242 <__udivsi3+0x82>
 800023e:	028b      	lsls	r3, r1, #10
 8000240:	1ac0      	subs	r0, r0, r3
 8000242:	4152      	adcs	r2, r2
 8000244:	0a43      	lsrs	r3, r0, #9
 8000246:	428b      	cmp	r3, r1
 8000248:	d301      	bcc.n	800024e <__udivsi3+0x8e>
 800024a:	024b      	lsls	r3, r1, #9
 800024c:	1ac0      	subs	r0, r0, r3
 800024e:	4152      	adcs	r2, r2
 8000250:	0a03      	lsrs	r3, r0, #8
 8000252:	428b      	cmp	r3, r1
 8000254:	d301      	bcc.n	800025a <__udivsi3+0x9a>
 8000256:	020b      	lsls	r3, r1, #8
 8000258:	1ac0      	subs	r0, r0, r3
 800025a:	4152      	adcs	r2, r2
 800025c:	d2cd      	bcs.n	80001fa <__udivsi3+0x3a>
 800025e:	09c3      	lsrs	r3, r0, #7
 8000260:	428b      	cmp	r3, r1
 8000262:	d301      	bcc.n	8000268 <__udivsi3+0xa8>
 8000264:	01cb      	lsls	r3, r1, #7
 8000266:	1ac0      	subs	r0, r0, r3
 8000268:	4152      	adcs	r2, r2
 800026a:	0983      	lsrs	r3, r0, #6
 800026c:	428b      	cmp	r3, r1
 800026e:	d301      	bcc.n	8000274 <__udivsi3+0xb4>
 8000270:	018b      	lsls	r3, r1, #6
 8000272:	1ac0      	subs	r0, r0, r3
 8000274:	4152      	adcs	r2, r2
 8000276:	0943      	lsrs	r3, r0, #5
 8000278:	428b      	cmp	r3, r1
 800027a:	d301      	bcc.n	8000280 <__udivsi3+0xc0>
 800027c:	014b      	lsls	r3, r1, #5
 800027e:	1ac0      	subs	r0, r0, r3
 8000280:	4152      	adcs	r2, r2
 8000282:	0903      	lsrs	r3, r0, #4
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__udivsi3+0xcc>
 8000288:	010b      	lsls	r3, r1, #4
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	08c3      	lsrs	r3, r0, #3
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__udivsi3+0xd8>
 8000294:	00cb      	lsls	r3, r1, #3
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0883      	lsrs	r3, r0, #2
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__udivsi3+0xe4>
 80002a0:	008b      	lsls	r3, r1, #2
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0843      	lsrs	r3, r0, #1
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__udivsi3+0xf0>
 80002ac:	004b      	lsls	r3, r1, #1
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	1a41      	subs	r1, r0, r1
 80002b4:	d200      	bcs.n	80002b8 <__udivsi3+0xf8>
 80002b6:	4601      	mov	r1, r0
 80002b8:	4152      	adcs	r2, r2
 80002ba:	4610      	mov	r0, r2
 80002bc:	4770      	bx	lr
 80002be:	e7ff      	b.n	80002c0 <__udivsi3+0x100>
 80002c0:	b501      	push	{r0, lr}
 80002c2:	2000      	movs	r0, #0
 80002c4:	f000 f80c 	bl	80002e0 <__aeabi_idiv0>
 80002c8:	bd02      	pop	{r1, pc}
 80002ca:	46c0      	nop			; (mov r8, r8)

080002cc <__aeabi_uidivmod>:
 80002cc:	2900      	cmp	r1, #0
 80002ce:	d0f7      	beq.n	80002c0 <__udivsi3+0x100>
 80002d0:	e776      	b.n	80001c0 <__udivsi3>
 80002d2:	4770      	bx	lr
	...

080002e0 <__aeabi_idiv0>:
 80002e0:	4770      	bx	lr
 80002e2:	46c0      	nop			; (mov r8, r8)
	...

080002f0 <chEvtGetAndClearEvents.constprop.36>:
 80002f0:	b672      	cpsid	i
 80002f2:	2200      	movs	r2, #0
 80002f4:	4b02      	ldr	r3, [pc, #8]	; (8000300 <chEvtGetAndClearEvents.constprop.36+0x10>)
 80002f6:	699b      	ldr	r3, [r3, #24]
 80002f8:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80002fa:	635a      	str	r2, [r3, #52]	; 0x34
 80002fc:	b662      	cpsie	i
 80002fe:	4770      	bx	lr
 8000300:	20000738 	.word	0x20000738
	...

08000310 <_pal_lld_setgroupmode.constprop.5>:
 8000310:	2307      	movs	r3, #7
 8000312:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000314:	4646      	mov	r6, r8
 8000316:	4698      	mov	r8, r3
 8000318:	3308      	adds	r3, #8
 800031a:	46d6      	mov	lr, sl
 800031c:	464f      	mov	r7, r9
 800031e:	469c      	mov	ip, r3
 8000320:	2103      	movs	r1, #3
 8000322:	2390      	movs	r3, #144	; 0x90
 8000324:	b5c0      	push	{r6, r7, lr}
 8000326:	2200      	movs	r2, #0
 8000328:	2502      	movs	r5, #2
 800032a:	2601      	movs	r6, #1
 800032c:	05db      	lsls	r3, r3, #23
 800032e:	468a      	mov	sl, r1
 8000330:	e01a      	b.n	8000368 <_pal_lld_setgroupmode.constprop.5+0x58>
 8000332:	6a1f      	ldr	r7, [r3, #32]
 8000334:	4039      	ands	r1, r7
 8000336:	4321      	orrs	r1, r4
 8000338:	6219      	str	r1, [r3, #32]
 800033a:	0034      	movs	r4, r6
 800033c:	4094      	lsls	r4, r2
 800033e:	4657      	mov	r7, sl
 8000340:	6859      	ldr	r1, [r3, #4]
 8000342:	43a1      	bics	r1, r4
 8000344:	0054      	lsls	r4, r2, #1
 8000346:	40a7      	lsls	r7, r4
 8000348:	43fc      	mvns	r4, r7
 800034a:	6059      	str	r1, [r3, #4]
 800034c:	6899      	ldr	r1, [r3, #8]
 800034e:	4021      	ands	r1, r4
 8000350:	6099      	str	r1, [r3, #8]
 8000352:	68d9      	ldr	r1, [r3, #12]
 8000354:	4021      	ands	r1, r4
 8000356:	60d9      	str	r1, [r3, #12]
 8000358:	6819      	ldr	r1, [r3, #0]
 800035a:	4021      	ands	r1, r4
 800035c:	4329      	orrs	r1, r5
 800035e:	6019      	str	r1, [r3, #0]
 8000360:	0840      	lsrs	r0, r0, #1
 8000362:	d012      	beq.n	800038a <_pal_lld_setgroupmode.constprop.5+0x7a>
 8000364:	00ad      	lsls	r5, r5, #2
 8000366:	3201      	adds	r2, #1
 8000368:	4206      	tst	r6, r0
 800036a:	d0f9      	beq.n	8000360 <_pal_lld_setgroupmode.constprop.5+0x50>
 800036c:	4641      	mov	r1, r8
 800036e:	4667      	mov	r7, ip
 8000370:	4011      	ands	r1, r2
 8000372:	0089      	lsls	r1, r1, #2
 8000374:	0034      	movs	r4, r6
 8000376:	408f      	lsls	r7, r1
 8000378:	408c      	lsls	r4, r1
 800037a:	43f9      	mvns	r1, r7
 800037c:	2a07      	cmp	r2, #7
 800037e:	d9d8      	bls.n	8000332 <_pal_lld_setgroupmode.constprop.5+0x22>
 8000380:	6a5f      	ldr	r7, [r3, #36]	; 0x24
 8000382:	4039      	ands	r1, r7
 8000384:	4321      	orrs	r1, r4
 8000386:	6259      	str	r1, [r3, #36]	; 0x24
 8000388:	e7d7      	b.n	800033a <_pal_lld_setgroupmode.constprop.5+0x2a>
 800038a:	bc1c      	pop	{r2, r3, r4}
 800038c:	4690      	mov	r8, r2
 800038e:	4699      	mov	r9, r3
 8000390:	46a2      	mov	sl, r4
 8000392:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080003a0 <tmr>:
 80003a0:	2201      	movs	r2, #1
 80003a2:	4b01      	ldr	r3, [pc, #4]	; (80003a8 <tmr+0x8>)
 80003a4:	701a      	strb	r2, [r3, #0]
 80003a6:	4770      	bx	lr
 80003a8:	20000fd0 	.word	0x20000fd0
 80003ac:	00000000 	.word	0x00000000

080003b0 <_idle_thread>:
 80003b0:	e7fe      	b.n	80003b0 <_idle_thread>
 80003b2:	46c0      	nop			; (mov r8, r8)
	...

080003c0 <chCoreAlloc>:
 80003c0:	b672      	cpsid	i
 80003c2:	2207      	movs	r2, #7
 80003c4:	1dc3      	adds	r3, r0, #7
 80003c6:	4393      	bics	r3, r2
 80003c8:	4906      	ldr	r1, [pc, #24]	; (80003e4 <chCoreAlloc+0x24>)
 80003ca:	4a07      	ldr	r2, [pc, #28]	; (80003e8 <chCoreAlloc+0x28>)
 80003cc:	6808      	ldr	r0, [r1, #0]
 80003ce:	6812      	ldr	r2, [r2, #0]
 80003d0:	1a12      	subs	r2, r2, r0
 80003d2:	4293      	cmp	r3, r2
 80003d4:	d803      	bhi.n	80003de <chCoreAlloc+0x1e>
 80003d6:	18c3      	adds	r3, r0, r3
 80003d8:	600b      	str	r3, [r1, #0]
 80003da:	b662      	cpsie	i
 80003dc:	4770      	bx	lr
 80003de:	2000      	movs	r0, #0
 80003e0:	e7fb      	b.n	80003da <chCoreAlloc+0x1a>
 80003e2:	46c0      	nop			; (mov r8, r8)
 80003e4:	2000092c 	.word	0x2000092c
 80003e8:	200008b0 	.word	0x200008b0
 80003ec:	00000000 	.word	0x00000000

080003f0 <notify1>:
 80003f0:	2180      	movs	r1, #128	; 0x80
 80003f2:	4a02      	ldr	r2, [pc, #8]	; (80003fc <notify1+0xc>)
 80003f4:	6813      	ldr	r3, [r2, #0]
 80003f6:	430b      	orrs	r3, r1
 80003f8:	6013      	str	r3, [r2, #0]
 80003fa:	4770      	bx	lr
 80003fc:	40013800 	.word	0x40013800

08000400 <bmk12_setup>:
 8000400:	2200      	movs	r2, #0
 8000402:	4b02      	ldr	r3, [pc, #8]	; (800040c <bmk12_setup+0xc>)
 8000404:	601b      	str	r3, [r3, #0]
 8000406:	605b      	str	r3, [r3, #4]
 8000408:	609a      	str	r2, [r3, #8]
 800040a:	4770      	bx	lr
 800040c:	2000091c 	.word	0x2000091c

08000410 <bmk11_setup>:
 8000410:	2201      	movs	r2, #1
 8000412:	4b02      	ldr	r3, [pc, #8]	; (800041c <bmk11_setup+0xc>)
 8000414:	601b      	str	r3, [r3, #0]
 8000416:	605b      	str	r3, [r3, #4]
 8000418:	609a      	str	r2, [r3, #8]
 800041a:	4770      	bx	lr
 800041c:	20000930 	.word	0x20000930

08000420 <notify>:
 8000420:	4770      	bx	lr
 8000422:	46c0      	nop			; (mov r8, r8)
	...

08000430 <tmo>:
 8000430:	4770      	bx	lr
 8000432:	46c0      	nop			; (mov r8, r8)
	...

08000440 <bmk7_setup>:
 8000440:	2200      	movs	r2, #0
 8000442:	4b02      	ldr	r3, [pc, #8]	; (800044c <bmk7_setup+0xc>)
 8000444:	601b      	str	r3, [r3, #0]
 8000446:	605b      	str	r3, [r3, #4]
 8000448:	609a      	str	r2, [r3, #8]
 800044a:	4770      	bx	lr
 800044c:	20000930 	.word	0x20000930

08000450 <sys2_execute>:
 8000450:	b672      	cpsid	i
 8000452:	b672      	cpsid	i
 8000454:	b672      	cpsid	i
 8000456:	b662      	cpsie	i
 8000458:	4770      	bx	lr
 800045a:	46c0      	nop			; (mov r8, r8)
 800045c:	0000      	movs	r0, r0
	...

08000460 <queues2_setup>:
 8000460:	2204      	movs	r2, #4
 8000462:	4b07      	ldr	r3, [pc, #28]	; (8000480 <queues2_setup+0x20>)
 8000464:	609a      	str	r2, [r3, #8]
 8000466:	4a07      	ldr	r2, [pc, #28]	; (8000484 <queues2_setup+0x24>)
 8000468:	601b      	str	r3, [r3, #0]
 800046a:	60da      	str	r2, [r3, #12]
 800046c:	619a      	str	r2, [r3, #24]
 800046e:	615a      	str	r2, [r3, #20]
 8000470:	3204      	adds	r2, #4
 8000472:	611a      	str	r2, [r3, #16]
 8000474:	4a04      	ldr	r2, [pc, #16]	; (8000488 <queues2_setup+0x28>)
 8000476:	605b      	str	r3, [r3, #4]
 8000478:	61da      	str	r2, [r3, #28]
 800047a:	2200      	movs	r2, #0
 800047c:	621a      	str	r2, [r3, #32]
 800047e:	4770      	bx	lr
 8000480:	20000688 	.word	0x20000688
 8000484:	20000940 	.word	0x20000940
 8000488:	08000421 	.word	0x08000421
 800048c:	00000000 	.word	0x00000000

08000490 <queues1_setup>:
 8000490:	2100      	movs	r1, #0
 8000492:	4b07      	ldr	r3, [pc, #28]	; (80004b0 <queues1_setup+0x20>)
 8000494:	4a07      	ldr	r2, [pc, #28]	; (80004b4 <queues1_setup+0x24>)
 8000496:	601b      	str	r3, [r3, #0]
 8000498:	60da      	str	r2, [r3, #12]
 800049a:	619a      	str	r2, [r3, #24]
 800049c:	615a      	str	r2, [r3, #20]
 800049e:	3204      	adds	r2, #4
 80004a0:	611a      	str	r2, [r3, #16]
 80004a2:	4a05      	ldr	r2, [pc, #20]	; (80004b8 <queues1_setup+0x28>)
 80004a4:	605b      	str	r3, [r3, #4]
 80004a6:	6099      	str	r1, [r3, #8]
 80004a8:	61da      	str	r2, [r3, #28]
 80004aa:	6219      	str	r1, [r3, #32]
 80004ac:	4770      	bx	lr
 80004ae:	46c0      	nop			; (mov r8, r8)
 80004b0:	20000610 	.word	0x20000610
 80004b4:	20000940 	.word	0x20000940
 80004b8:	08000421 	.word	0x08000421
 80004bc:	00000000 	.word	0x00000000

080004c0 <dyn2_setup>:
 80004c0:	21a4      	movs	r1, #164	; 0xa4
 80004c2:	2200      	movs	r2, #0
 80004c4:	4b02      	ldr	r3, [pc, #8]	; (80004d0 <dyn2_setup+0x10>)
 80004c6:	0049      	lsls	r1, r1, #1
 80004c8:	601a      	str	r2, [r3, #0]
 80004ca:	6059      	str	r1, [r3, #4]
 80004cc:	609a      	str	r2, [r3, #8]
 80004ce:	4770      	bx	lr
 80004d0:	20000910 	.word	0x20000910
	...

080004e0 <dyn1_setup>:
 80004e0:	20cc      	movs	r0, #204	; 0xcc
 80004e2:	2200      	movs	r2, #0
 80004e4:	4b06      	ldr	r3, [pc, #24]	; (8000500 <dyn1_setup+0x20>)
 80004e6:	4907      	ldr	r1, [pc, #28]	; (8000504 <dyn1_setup+0x24>)
 80004e8:	00c0      	lsls	r0, r0, #3
 80004ea:	6099      	str	r1, [r3, #8]
 80004ec:	600a      	str	r2, [r1, #0]
 80004ee:	6048      	str	r0, [r1, #4]
 80004f0:	0019      	movs	r1, r3
 80004f2:	3110      	adds	r1, #16
 80004f4:	601a      	str	r2, [r3, #0]
 80004f6:	60da      	str	r2, [r3, #12]
 80004f8:	6119      	str	r1, [r3, #16]
 80004fa:	6159      	str	r1, [r3, #20]
 80004fc:	619a      	str	r2, [r3, #24]
 80004fe:	4770      	bx	lr
 8000500:	200008b8 	.word	0x200008b8
 8000504:	20000940 	.word	0x20000940
	...

08000510 <dyn3_setup>:
 8000510:	b510      	push	{r4, lr}
 8000512:	f7ff ffe5 	bl	80004e0 <dyn1_setup>
 8000516:	bd10      	pop	{r4, pc}
	...

08000520 <null_provider>:
 8000520:	2000      	movs	r0, #0
 8000522:	4770      	bx	lr
	...

08000530 <pools1_setup>:
 8000530:	21a4      	movs	r1, #164	; 0xa4
 8000532:	2200      	movs	r2, #0
 8000534:	4b02      	ldr	r3, [pc, #8]	; (8000540 <pools1_setup+0x10>)
 8000536:	0049      	lsls	r1, r1, #1
 8000538:	601a      	str	r2, [r3, #0]
 800053a:	6059      	str	r1, [r3, #4]
 800053c:	609a      	str	r2, [r3, #8]
 800053e:	4770      	bx	lr
 8000540:	2000067c 	.word	0x2000067c
	...

08000550 <heap1_setup>:
 8000550:	20cc      	movs	r0, #204	; 0xcc
 8000552:	2200      	movs	r2, #0
 8000554:	4b06      	ldr	r3, [pc, #24]	; (8000570 <heap1_setup+0x20>)
 8000556:	4907      	ldr	r1, [pc, #28]	; (8000574 <heap1_setup+0x24>)
 8000558:	00c0      	lsls	r0, r0, #3
 800055a:	6099      	str	r1, [r3, #8]
 800055c:	600a      	str	r2, [r1, #0]
 800055e:	6048      	str	r0, [r1, #4]
 8000560:	0019      	movs	r1, r3
 8000562:	3110      	adds	r1, #16
 8000564:	601a      	str	r2, [r3, #0]
 8000566:	60da      	str	r2, [r3, #12]
 8000568:	6119      	str	r1, [r3, #16]
 800056a:	6159      	str	r1, [r3, #20]
 800056c:	619a      	str	r2, [r3, #24]
 800056e:	4770      	bx	lr
 8000570:	20000fb0 	.word	0x20000fb0
 8000574:	20000940 	.word	0x20000940
	...

08000580 <evt1_setup>:
 8000580:	b510      	push	{r4, lr}
 8000582:	f7ff feb5 	bl	80002f0 <chEvtGetAndClearEvents.constprop.36>
 8000586:	bd10      	pop	{r4, pc}
	...

08000590 <evt3_setup>:
 8000590:	b510      	push	{r4, lr}
 8000592:	f7ff fff5 	bl	8000580 <evt1_setup>
 8000596:	bd10      	pop	{r4, pc}
	...

080005a0 <evt2_setup>:
 80005a0:	b510      	push	{r4, lr}
 80005a2:	f7ff ffed 	bl	8000580 <evt1_setup>
 80005a6:	bd10      	pop	{r4, pc}
	...

080005b0 <mbox1_setup>:
 80005b0:	4b09      	ldr	r3, [pc, #36]	; (80005d8 <mbox1_setup+0x28>)
 80005b2:	4a0a      	ldr	r2, [pc, #40]	; (80005dc <mbox1_setup+0x2c>)
 80005b4:	601a      	str	r2, [r3, #0]
 80005b6:	60da      	str	r2, [r3, #12]
 80005b8:	609a      	str	r2, [r3, #8]
 80005ba:	3214      	adds	r2, #20
 80005bc:	605a      	str	r2, [r3, #4]
 80005be:	001a      	movs	r2, r3
 80005c0:	321c      	adds	r2, #28
 80005c2:	61da      	str	r2, [r3, #28]
 80005c4:	621a      	str	r2, [r3, #32]
 80005c6:	2205      	movs	r2, #5
 80005c8:	625a      	str	r2, [r3, #36]	; 0x24
 80005ca:	001a      	movs	r2, r3
 80005cc:	3210      	adds	r2, #16
 80005ce:	611a      	str	r2, [r3, #16]
 80005d0:	615a      	str	r2, [r3, #20]
 80005d2:	2200      	movs	r2, #0
 80005d4:	619a      	str	r2, [r3, #24]
 80005d6:	4770      	bx	lr
 80005d8:	20000654 	.word	0x20000654
 80005dc:	20000940 	.word	0x20000940

080005e0 <mtx8_setup>:
 80005e0:	2200      	movs	r2, #0
 80005e2:	4b06      	ldr	r3, [pc, #24]	; (80005fc <mtx8_setup+0x1c>)
 80005e4:	601b      	str	r3, [r3, #0]
 80005e6:	605b      	str	r3, [r3, #4]
 80005e8:	4b05      	ldr	r3, [pc, #20]	; (8000600 <mtx8_setup+0x20>)
 80005ea:	601b      	str	r3, [r3, #0]
 80005ec:	605b      	str	r3, [r3, #4]
 80005ee:	609a      	str	r2, [r3, #8]
 80005f0:	4b04      	ldr	r3, [pc, #16]	; (8000604 <mtx8_setup+0x24>)
 80005f2:	601b      	str	r3, [r3, #0]
 80005f4:	605b      	str	r3, [r3, #4]
 80005f6:	609a      	str	r2, [r3, #8]
 80005f8:	4770      	bx	lr
 80005fa:	46c0      	nop			; (mov r8, r8)
 80005fc:	20000600 	.word	0x20000600
 8000600:	20000634 	.word	0x20000634
 8000604:	20000644 	.word	0x20000644
	...

08000610 <mtx6_setup>:
 8000610:	2200      	movs	r2, #0
 8000612:	4b04      	ldr	r3, [pc, #16]	; (8000624 <mtx6_setup+0x14>)
 8000614:	601b      	str	r3, [r3, #0]
 8000616:	605b      	str	r3, [r3, #4]
 8000618:	4b03      	ldr	r3, [pc, #12]	; (8000628 <mtx6_setup+0x18>)
 800061a:	601b      	str	r3, [r3, #0]
 800061c:	605b      	str	r3, [r3, #4]
 800061e:	609a      	str	r2, [r3, #8]
 8000620:	4770      	bx	lr
 8000622:	46c0      	nop			; (mov r8, r8)
 8000624:	20000600 	.word	0x20000600
 8000628:	20000634 	.word	0x20000634
 800062c:	00000000 	.word	0x00000000

08000630 <mtx7_setup>:
 8000630:	b510      	push	{r4, lr}
 8000632:	f7ff ffed 	bl	8000610 <mtx6_setup>
 8000636:	bd10      	pop	{r4, pc}
	...

08000640 <mtx4_setup>:
 8000640:	2200      	movs	r2, #0
 8000642:	4b04      	ldr	r3, [pc, #16]	; (8000654 <mtx4_setup+0x14>)
 8000644:	601b      	str	r3, [r3, #0]
 8000646:	605b      	str	r3, [r3, #4]
 8000648:	609a      	str	r2, [r3, #8]
 800064a:	4b03      	ldr	r3, [pc, #12]	; (8000658 <mtx4_setup+0x18>)
 800064c:	601b      	str	r3, [r3, #0]
 800064e:	605b      	str	r3, [r3, #4]
 8000650:	609a      	str	r2, [r3, #8]
 8000652:	4770      	bx	lr
 8000654:	20000634 	.word	0x20000634
 8000658:	20000644 	.word	0x20000644
 800065c:	00000000 	.word	0x00000000

08000660 <mtx1_setup>:
 8000660:	2200      	movs	r2, #0
 8000662:	4b02      	ldr	r3, [pc, #8]	; (800066c <mtx1_setup+0xc>)
 8000664:	601b      	str	r3, [r3, #0]
 8000666:	605b      	str	r3, [r3, #4]
 8000668:	609a      	str	r2, [r3, #8]
 800066a:	4770      	bx	lr
 800066c:	20000634 	.word	0x20000634

08000670 <mtx5_setup>:
 8000670:	b510      	push	{r4, lr}
 8000672:	f7ff fff5 	bl	8000660 <mtx1_setup>
 8000676:	bd10      	pop	{r4, pc}
	...

08000680 <sem1_setup>:
 8000680:	2200      	movs	r2, #0
 8000682:	4b02      	ldr	r3, [pc, #8]	; (800068c <sem1_setup+0xc>)
 8000684:	601b      	str	r3, [r3, #0]
 8000686:	605b      	str	r3, [r3, #4]
 8000688:	609a      	str	r2, [r3, #8]
 800068a:	4770      	bx	lr
 800068c:	200006ac 	.word	0x200006ac

08000690 <sem3_setup>:
 8000690:	b510      	push	{r4, lr}
 8000692:	f7ff fff5 	bl	8000680 <sem1_setup>
 8000696:	bd10      	pop	{r4, pc}
	...

080006a0 <sem2_setup>:
 80006a0:	b510      	push	{r4, lr}
 80006a2:	f7ff ffed 	bl	8000680 <sem1_setup>
 80006a6:	bd10      	pop	{r4, pc}
	...

080006b0 <test_printn.part.1>:
 80006b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80006b2:	46c6      	mov	lr, r8
 80006b4:	b500      	push	{lr}
 80006b6:	0006      	movs	r6, r0
 80006b8:	b084      	sub	sp, #16
 80006ba:	2800      	cmp	r0, #0
 80006bc:	d020      	beq.n	8000700 <test_printn.part.1+0x50>
 80006be:	46e8      	mov	r8, sp
 80006c0:	4645      	mov	r5, r8
 80006c2:	e000      	b.n	80006c6 <test_printn.part.1+0x16>
 80006c4:	003d      	movs	r5, r7
 80006c6:	0030      	movs	r0, r6
 80006c8:	210a      	movs	r1, #10
 80006ca:	f7ff fdff 	bl	80002cc <__aeabi_uidivmod>
 80006ce:	3130      	adds	r1, #48	; 0x30
 80006d0:	b2cc      	uxtb	r4, r1
 80006d2:	0030      	movs	r0, r6
 80006d4:	702c      	strb	r4, [r5, #0]
 80006d6:	210a      	movs	r1, #10
 80006d8:	f7ff fd72 	bl	80001c0 <__udivsi3>
 80006dc:	1c6f      	adds	r7, r5, #1
 80006de:	1e06      	subs	r6, r0, #0
 80006e0:	d1f0      	bne.n	80006c4 <test_printn.part.1+0x14>
 80006e2:	4547      	cmp	r7, r8
 80006e4:	d90c      	bls.n	8000700 <test_printn.part.1+0x50>
 80006e6:	466b      	mov	r3, sp
 80006e8:	4e07      	ldr	r6, [pc, #28]	; (8000708 <test_printn.part.1+0x58>)
 80006ea:	1e5f      	subs	r7, r3, #1
 80006ec:	e000      	b.n	80006f0 <test_printn.part.1+0x40>
 80006ee:	782c      	ldrb	r4, [r5, #0]
 80006f0:	6830      	ldr	r0, [r6, #0]
 80006f2:	0021      	movs	r1, r4
 80006f4:	6803      	ldr	r3, [r0, #0]
 80006f6:	3d01      	subs	r5, #1
 80006f8:	689b      	ldr	r3, [r3, #8]
 80006fa:	4798      	blx	r3
 80006fc:	42af      	cmp	r7, r5
 80006fe:	d1f6      	bne.n	80006ee <test_printn.part.1+0x3e>
 8000700:	b004      	add	sp, #16
 8000702:	bc04      	pop	{r2}
 8000704:	4690      	mov	r8, r2
 8000706:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000708:	20000888 	.word	0x20000888
 800070c:	00000000 	.word	0x00000000

08000710 <test_printn>:
 8000710:	b510      	push	{r4, lr}
 8000712:	2800      	cmp	r0, #0
 8000714:	d106      	bne.n	8000724 <test_printn+0x14>
 8000716:	4b05      	ldr	r3, [pc, #20]	; (800072c <test_printn+0x1c>)
 8000718:	2130      	movs	r1, #48	; 0x30
 800071a:	6818      	ldr	r0, [r3, #0]
 800071c:	6803      	ldr	r3, [r0, #0]
 800071e:	689b      	ldr	r3, [r3, #8]
 8000720:	4798      	blx	r3
 8000722:	bd10      	pop	{r4, pc}
 8000724:	f7ff ffc4 	bl	80006b0 <test_printn.part.1>
 8000728:	e7fb      	b.n	8000722 <test_printn+0x12>
 800072a:	46c0      	nop			; (mov r8, r8)
 800072c:	20000888 	.word	0x20000888

08000730 <print_line>:
 8000730:	b570      	push	{r4, r5, r6, lr}
 8000732:	244c      	movs	r4, #76	; 0x4c
 8000734:	4d07      	ldr	r5, [pc, #28]	; (8000754 <print_line+0x24>)
 8000736:	6828      	ldr	r0, [r5, #0]
 8000738:	212d      	movs	r1, #45	; 0x2d
 800073a:	6803      	ldr	r3, [r0, #0]
 800073c:	3c01      	subs	r4, #1
 800073e:	689b      	ldr	r3, [r3, #8]
 8000740:	4798      	blx	r3
 8000742:	2c00      	cmp	r4, #0
 8000744:	d1f7      	bne.n	8000736 <print_line+0x6>
 8000746:	6828      	ldr	r0, [r5, #0]
 8000748:	2202      	movs	r2, #2
 800074a:	6803      	ldr	r3, [r0, #0]
 800074c:	4902      	ldr	r1, [pc, #8]	; (8000758 <print_line+0x28>)
 800074e:	681b      	ldr	r3, [r3, #0]
 8000750:	4798      	blx	r3
 8000752:	bd70      	pop	{r4, r5, r6, pc}
 8000754:	20000888 	.word	0x20000888
 8000758:	08005c70 	.word	0x08005c70
 800075c:	00000000 	.word	0x00000000

08000760 <test_terminate_threads>:
 8000760:	4b08      	ldr	r3, [pc, #32]	; (8000784 <test_terminate_threads+0x24>)
 8000762:	b510      	push	{r4, lr}
 8000764:	0018      	movs	r0, r3
 8000766:	2404      	movs	r4, #4
 8000768:	3014      	adds	r0, #20
 800076a:	681a      	ldr	r2, [r3, #0]
 800076c:	2a00      	cmp	r2, #0
 800076e:	d004      	beq.n	800077a <test_terminate_threads+0x1a>
 8000770:	b672      	cpsid	i
 8000772:	7f51      	ldrb	r1, [r2, #29]
 8000774:	4321      	orrs	r1, r4
 8000776:	7751      	strb	r1, [r2, #29]
 8000778:	b662      	cpsie	i
 800077a:	3304      	adds	r3, #4
 800077c:	4283      	cmp	r3, r0
 800077e:	d1f4      	bne.n	800076a <test_terminate_threads+0xa>
 8000780:	bd10      	pop	{r4, pc}
 8000782:	46c0      	nop			; (mov r8, r8)
 8000784:	20000fd4 	.word	0x20000fd4
	...

08000790 <_test_assert_time_window>:
 8000790:	b672      	cpsid	i
 8000792:	2380      	movs	r3, #128	; 0x80
 8000794:	05db      	lsls	r3, r3, #23
 8000796:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000798:	b662      	cpsie	i
 800079a:	1a5b      	subs	r3, r3, r1
 800079c:	1a52      	subs	r2, r2, r1
 800079e:	2100      	movs	r1, #0
 80007a0:	4293      	cmp	r3, r2
 80007a2:	d307      	bcc.n	80007b4 <_test_assert_time_window+0x24>
 80007a4:	2301      	movs	r3, #1
 80007a6:	4a04      	ldr	r2, [pc, #16]	; (80007b8 <_test_assert_time_window+0x28>)
 80007a8:	3101      	adds	r1, #1
 80007aa:	7013      	strb	r3, [r2, #0]
 80007ac:	4a03      	ldr	r2, [pc, #12]	; (80007bc <_test_assert_time_window+0x2c>)
 80007ae:	7013      	strb	r3, [r2, #0]
 80007b0:	4b03      	ldr	r3, [pc, #12]	; (80007c0 <_test_assert_time_window+0x30>)
 80007b2:	6018      	str	r0, [r3, #0]
 80007b4:	0008      	movs	r0, r1
 80007b6:	4770      	bx	lr
 80007b8:	20000fa8 	.word	0x20000fa8
 80007bc:	2000090c 	.word	0x2000090c
 80007c0:	200008b4 	.word	0x200008b4
	...

080007d0 <_test_assert_sequence>:
 80007d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007d2:	4e0e      	ldr	r6, [pc, #56]	; (800080c <_test_assert_sequence+0x3c>)
 80007d4:	4f0e      	ldr	r7, [pc, #56]	; (8000810 <_test_assert_sequence+0x40>)
 80007d6:	6835      	ldr	r5, [r6, #0]
 80007d8:	003b      	movs	r3, r7
 80007da:	e004      	b.n	80007e6 <_test_assert_sequence+0x16>
 80007dc:	7824      	ldrb	r4, [r4, #0]
 80007de:	3101      	adds	r1, #1
 80007e0:	3301      	adds	r3, #1
 80007e2:	4294      	cmp	r4, r2
 80007e4:	d108      	bne.n	80007f8 <_test_assert_sequence+0x28>
 80007e6:	780a      	ldrb	r2, [r1, #0]
 80007e8:	001c      	movs	r4, r3
 80007ea:	42ab      	cmp	r3, r5
 80007ec:	d3f6      	bcc.n	80007dc <_test_assert_sequence+0xc>
 80007ee:	2a00      	cmp	r2, #0
 80007f0:	d102      	bne.n	80007f8 <_test_assert_sequence+0x28>
 80007f2:	6037      	str	r7, [r6, #0]
 80007f4:	2000      	movs	r0, #0
 80007f6:	e007      	b.n	8000808 <_test_assert_sequence+0x38>
 80007f8:	2301      	movs	r3, #1
 80007fa:	4a06      	ldr	r2, [pc, #24]	; (8000814 <_test_assert_sequence+0x44>)
 80007fc:	7013      	strb	r3, [r2, #0]
 80007fe:	4a06      	ldr	r2, [pc, #24]	; (8000818 <_test_assert_sequence+0x48>)
 8000800:	7013      	strb	r3, [r2, #0]
 8000802:	4b06      	ldr	r3, [pc, #24]	; (800081c <_test_assert_sequence+0x4c>)
 8000804:	6018      	str	r0, [r3, #0]
 8000806:	2001      	movs	r0, #1
 8000808:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800080a:	46c0      	nop			; (mov r8, r8)
 800080c:	20000ff8 	.word	0x20000ff8
 8000810:	20000fe8 	.word	0x20000fe8
 8000814:	20000fa8 	.word	0x20000fa8
 8000818:	2000090c 	.word	0x2000090c
 800081c:	200008b4 	.word	0x200008b4

08000820 <_test_assert>:
 8000820:	2300      	movs	r3, #0
 8000822:	2900      	cmp	r1, #0
 8000824:	d107      	bne.n	8000836 <_test_assert+0x16>
 8000826:	4a05      	ldr	r2, [pc, #20]	; (800083c <_test_assert+0x1c>)
 8000828:	3301      	adds	r3, #1
 800082a:	7013      	strb	r3, [r2, #0]
 800082c:	4a04      	ldr	r2, [pc, #16]	; (8000840 <_test_assert+0x20>)
 800082e:	7013      	strb	r3, [r2, #0]
 8000830:	4b04      	ldr	r3, [pc, #16]	; (8000844 <_test_assert+0x24>)
 8000832:	6018      	str	r0, [r3, #0]
 8000834:	2301      	movs	r3, #1
 8000836:	0018      	movs	r0, r3
 8000838:	4770      	bx	lr
 800083a:	46c0      	nop			; (mov r8, r8)
 800083c:	20000fa8 	.word	0x20000fa8
 8000840:	2000090c 	.word	0x2000090c
 8000844:	200008b4 	.word	0x200008b4
	...

08000850 <test_emit_token>:
 8000850:	b672      	cpsid	i
 8000852:	4a03      	ldr	r2, [pc, #12]	; (8000860 <test_emit_token+0x10>)
 8000854:	6813      	ldr	r3, [r2, #0]
 8000856:	1c59      	adds	r1, r3, #1
 8000858:	6011      	str	r1, [r2, #0]
 800085a:	7018      	strb	r0, [r3, #0]
 800085c:	b662      	cpsie	i
 800085e:	4770      	bx	lr
 8000860:	20000ff8 	.word	0x20000ff8
	...

08000870 <h3>:
 8000870:	b510      	push	{r4, lr}
 8000872:	2043      	movs	r0, #67	; 0x43
 8000874:	f7ff ffec 	bl	8000850 <test_emit_token>
 8000878:	bd10      	pop	{r4, pc}
 800087a:	46c0      	nop			; (mov r8, r8)
 800087c:	0000      	movs	r0, r0
	...

08000880 <h2>:
 8000880:	b510      	push	{r4, lr}
 8000882:	2042      	movs	r0, #66	; 0x42
 8000884:	f7ff ffe4 	bl	8000850 <test_emit_token>
 8000888:	bd10      	pop	{r4, pc}
 800088a:	46c0      	nop			; (mov r8, r8)
 800088c:	0000      	movs	r0, r0
	...

08000890 <h1>:
 8000890:	b510      	push	{r4, lr}
 8000892:	2041      	movs	r0, #65	; 0x41
 8000894:	f7ff ffdc 	bl	8000850 <test_emit_token>
 8000898:	bd10      	pop	{r4, pc}
 800089a:	46c0      	nop			; (mov r8, r8)
 800089c:	0000      	movs	r0, r0
	...

080008a0 <thread.lto_priv.58>:
 80008a0:	b510      	push	{r4, lr}
 80008a2:	7800      	ldrb	r0, [r0, #0]
 80008a4:	f7ff ffd4 	bl	8000850 <test_emit_token>
 80008a8:	bd10      	pop	{r4, pc}
 80008aa:	46c0      	nop			; (mov r8, r8)
 80008ac:	0000      	movs	r0, r0
	...

080008b0 <thread.lto_priv.60>:
 80008b0:	b510      	push	{r4, lr}
 80008b2:	f7ff fff5 	bl	80008a0 <thread.lto_priv.58>
 80008b6:	bd10      	pop	{r4, pc}
	...

080008c0 <test_println>:
 80008c0:	b570      	push	{r4, r5, r6, lr}
 80008c2:	7801      	ldrb	r1, [r0, #0]
 80008c4:	0004      	movs	r4, r0
 80008c6:	4d09      	ldr	r5, [pc, #36]	; (80008ec <test_println+0x2c>)
 80008c8:	2900      	cmp	r1, #0
 80008ca:	d007      	beq.n	80008dc <test_println+0x1c>
 80008cc:	6828      	ldr	r0, [r5, #0]
 80008ce:	3401      	adds	r4, #1
 80008d0:	6803      	ldr	r3, [r0, #0]
 80008d2:	689b      	ldr	r3, [r3, #8]
 80008d4:	4798      	blx	r3
 80008d6:	7821      	ldrb	r1, [r4, #0]
 80008d8:	2900      	cmp	r1, #0
 80008da:	d1f7      	bne.n	80008cc <test_println+0xc>
 80008dc:	6828      	ldr	r0, [r5, #0]
 80008de:	2202      	movs	r2, #2
 80008e0:	6803      	ldr	r3, [r0, #0]
 80008e2:	4903      	ldr	r1, [pc, #12]	; (80008f0 <test_println+0x30>)
 80008e4:	681b      	ldr	r3, [r3, #0]
 80008e6:	4798      	blx	r3
 80008e8:	bd70      	pop	{r4, r5, r6, pc}
 80008ea:	46c0      	nop			; (mov r8, r8)
 80008ec:	20000888 	.word	0x20000888
 80008f0:	08005c70 	.word	0x08005c70
	...

08000900 <test_print>:
 8000900:	b570      	push	{r4, r5, r6, lr}
 8000902:	7801      	ldrb	r1, [r0, #0]
 8000904:	0004      	movs	r4, r0
 8000906:	2900      	cmp	r1, #0
 8000908:	d008      	beq.n	800091c <test_print+0x1c>
 800090a:	4d05      	ldr	r5, [pc, #20]	; (8000920 <test_print+0x20>)
 800090c:	6828      	ldr	r0, [r5, #0]
 800090e:	3401      	adds	r4, #1
 8000910:	6803      	ldr	r3, [r0, #0]
 8000912:	689b      	ldr	r3, [r3, #8]
 8000914:	4798      	blx	r3
 8000916:	7821      	ldrb	r1, [r4, #0]
 8000918:	2900      	cmp	r1, #0
 800091a:	d1f7      	bne.n	800090c <test_print+0xc>
 800091c:	bd70      	pop	{r4, r5, r6, pc}
 800091e:	46c0      	nop			; (mov r8, r8)
 8000920:	20000888 	.word	0x20000888
	...

08000930 <_port_irq_epilogue.part.0>:
 8000930:	b580      	push	{r7, lr}
 8000932:	af00      	add	r7, sp, #0
 8000934:	b672      	cpsid	i
 8000936:	f3ef 8309 	mrs	r3, PSP
 800093a:	3b20      	subs	r3, #32
 800093c:	f383 8809 	msr	PSP, r3
 8000940:	2280      	movs	r2, #128	; 0x80
 8000942:	0452      	lsls	r2, r2, #17
 8000944:	61da      	str	r2, [r3, #28]
 8000946:	4a07      	ldr	r2, [pc, #28]	; (8000964 <_port_irq_epilogue.part.0+0x34>)
 8000948:	6811      	ldr	r1, [r2, #0]
 800094a:	6992      	ldr	r2, [r2, #24]
 800094c:	6889      	ldr	r1, [r1, #8]
 800094e:	6892      	ldr	r2, [r2, #8]
 8000950:	4291      	cmp	r1, r2
 8000952:	d803      	bhi.n	800095c <_port_irq_epilogue.part.0+0x2c>
 8000954:	4a04      	ldr	r2, [pc, #16]	; (8000968 <_port_irq_epilogue.part.0+0x38>)
 8000956:	619a      	str	r2, [r3, #24]
 8000958:	46bd      	mov	sp, r7
 800095a:	bd80      	pop	{r7, pc}
 800095c:	4a03      	ldr	r2, [pc, #12]	; (800096c <_port_irq_epilogue.part.0+0x3c>)
 800095e:	619a      	str	r2, [r3, #24]
 8000960:	e7fa      	b.n	8000958 <_port_irq_epilogue.part.0+0x28>
 8000962:	46c0      	nop			; (mov r8, r8)
 8000964:	20000738 	.word	0x20000738
 8000968:	080001b0 	.word	0x080001b0
 800096c:	080001ad 	.word	0x080001ad

08000970 <NMI_Handler>:
 8000970:	b580      	push	{r7, lr}
 8000972:	af00      	add	r7, sp, #0
 8000974:	f3ef 8309 	mrs	r3, PSP
 8000978:	3320      	adds	r3, #32
 800097a:	f383 8809 	msr	PSP, r3
 800097e:	b662      	cpsie	i
 8000980:	46bd      	mov	sp, r7
 8000982:	bd80      	pop	{r7, pc}
	...

08000990 <chPoolAlloc>:
 8000990:	b510      	push	{r4, lr}
 8000992:	0003      	movs	r3, r0
 8000994:	b672      	cpsid	i
 8000996:	6800      	ldr	r0, [r0, #0]
 8000998:	2800      	cmp	r0, #0
 800099a:	d003      	beq.n	80009a4 <chPoolAlloc+0x14>
 800099c:	6802      	ldr	r2, [r0, #0]
 800099e:	601a      	str	r2, [r3, #0]
 80009a0:	b662      	cpsie	i
 80009a2:	bd10      	pop	{r4, pc}
 80009a4:	689a      	ldr	r2, [r3, #8]
 80009a6:	2a00      	cmp	r2, #0
 80009a8:	d0fa      	beq.n	80009a0 <chPoolAlloc+0x10>
 80009aa:	6858      	ldr	r0, [r3, #4]
 80009ac:	4790      	blx	r2
 80009ae:	e7f7      	b.n	80009a0 <chPoolAlloc+0x10>

080009b0 <pools1_execute>:
 80009b0:	b570      	push	{r4, r5, r6, lr}
 80009b2:	4e2f      	ldr	r6, [pc, #188]	; (8000a70 <pools1_execute+0xc0>)
 80009b4:	2205      	movs	r2, #5
 80009b6:	0033      	movs	r3, r6
 80009b8:	4c2e      	ldr	r4, [pc, #184]	; (8000a74 <pools1_execute+0xc4>)
 80009ba:	b672      	cpsid	i
 80009bc:	6821      	ldr	r1, [r4, #0]
 80009be:	6023      	str	r3, [r4, #0]
 80009c0:	6019      	str	r1, [r3, #0]
 80009c2:	b662      	cpsie	i
 80009c4:	6861      	ldr	r1, [r4, #4]
 80009c6:	3a01      	subs	r2, #1
 80009c8:	468c      	mov	ip, r1
 80009ca:	4463      	add	r3, ip
 80009cc:	2a00      	cmp	r2, #0
 80009ce:	d1f4      	bne.n	80009ba <pools1_execute+0xa>
 80009d0:	2505      	movs	r5, #5
 80009d2:	0020      	movs	r0, r4
 80009d4:	f7ff ffdc 	bl	8000990 <chPoolAlloc>
 80009d8:	1e41      	subs	r1, r0, #1
 80009da:	4188      	sbcs	r0, r1
 80009dc:	b2c1      	uxtb	r1, r0
 80009de:	2001      	movs	r0, #1
 80009e0:	f7ff ff1e 	bl	8000820 <_test_assert>
 80009e4:	2800      	cmp	r0, #0
 80009e6:	d141      	bne.n	8000a6c <pools1_execute+0xbc>
 80009e8:	3d01      	subs	r5, #1
 80009ea:	2d00      	cmp	r5, #0
 80009ec:	d1f1      	bne.n	80009d2 <pools1_execute+0x22>
 80009ee:	0020      	movs	r0, r4
 80009f0:	f7ff ffce 	bl	8000990 <chPoolAlloc>
 80009f4:	4241      	negs	r1, r0
 80009f6:	4141      	adcs	r1, r0
 80009f8:	2002      	movs	r0, #2
 80009fa:	b2c9      	uxtb	r1, r1
 80009fc:	f7ff ff10 	bl	8000820 <_test_assert>
 8000a00:	2800      	cmp	r0, #0
 8000a02:	d133      	bne.n	8000a6c <pools1_execute+0xbc>
 8000a04:	2200      	movs	r2, #0
 8000a06:	491c      	ldr	r1, [pc, #112]	; (8000a78 <pools1_execute+0xc8>)
 8000a08:	b672      	cpsid	i
 8000a0a:	6823      	ldr	r3, [r4, #0]
 8000a0c:	6033      	str	r3, [r6, #0]
 8000a0e:	6026      	str	r6, [r4, #0]
 8000a10:	b662      	cpsie	i
 8000a12:	3204      	adds	r2, #4
 8000a14:	2a14      	cmp	r2, #20
 8000a16:	d001      	beq.n	8000a1c <pools1_execute+0x6c>
 8000a18:	5856      	ldr	r6, [r2, r1]
 8000a1a:	e7f5      	b.n	8000a08 <pools1_execute+0x58>
 8000a1c:	2505      	movs	r5, #5
 8000a1e:	0020      	movs	r0, r4
 8000a20:	f7ff ffb6 	bl	8000990 <chPoolAlloc>
 8000a24:	1e41      	subs	r1, r0, #1
 8000a26:	4188      	sbcs	r0, r1
 8000a28:	b2c1      	uxtb	r1, r0
 8000a2a:	2003      	movs	r0, #3
 8000a2c:	f7ff fef8 	bl	8000820 <_test_assert>
 8000a30:	2800      	cmp	r0, #0
 8000a32:	d11b      	bne.n	8000a6c <pools1_execute+0xbc>
 8000a34:	3d01      	subs	r5, #1
 8000a36:	2d00      	cmp	r5, #0
 8000a38:	d1f1      	bne.n	8000a1e <pools1_execute+0x6e>
 8000a3a:	0020      	movs	r0, r4
 8000a3c:	f7ff ffa8 	bl	8000990 <chPoolAlloc>
 8000a40:	4241      	negs	r1, r0
 8000a42:	4141      	adcs	r1, r0
 8000a44:	2004      	movs	r0, #4
 8000a46:	b2c9      	uxtb	r1, r1
 8000a48:	f7ff feea 	bl	8000820 <_test_assert>
 8000a4c:	2800      	cmp	r0, #0
 8000a4e:	d10d      	bne.n	8000a6c <pools1_execute+0xbc>
 8000a50:	2310      	movs	r3, #16
 8000a52:	6063      	str	r3, [r4, #4]
 8000a54:	4b09      	ldr	r3, [pc, #36]	; (8000a7c <pools1_execute+0xcc>)
 8000a56:	0020      	movs	r0, r4
 8000a58:	6025      	str	r5, [r4, #0]
 8000a5a:	60a3      	str	r3, [r4, #8]
 8000a5c:	f7ff ff98 	bl	8000990 <chPoolAlloc>
 8000a60:	4241      	negs	r1, r0
 8000a62:	4141      	adcs	r1, r0
 8000a64:	2005      	movs	r0, #5
 8000a66:	b2c9      	uxtb	r1, r1
 8000a68:	f7ff feda 	bl	8000820 <_test_assert>
 8000a6c:	bd70      	pop	{r4, r5, r6, pc}
 8000a6e:	46c0      	nop			; (mov r8, r8)
 8000a70:	20000940 	.word	0x20000940
 8000a74:	2000067c 	.word	0x2000067c
 8000a78:	08006420 	.word	0x08006420
 8000a7c:	08000521 	.word	0x08000521

08000a80 <chEvtUnregister>:
 8000a80:	b672      	cpsid	i
 8000a82:	0002      	movs	r2, r0
 8000a84:	e002      	b.n	8000a8c <chEvtUnregister+0xc>
 8000a86:	428b      	cmp	r3, r1
 8000a88:	d005      	beq.n	8000a96 <chEvtUnregister+0x16>
 8000a8a:	001a      	movs	r2, r3
 8000a8c:	6813      	ldr	r3, [r2, #0]
 8000a8e:	4283      	cmp	r3, r0
 8000a90:	d1f9      	bne.n	8000a86 <chEvtUnregister+0x6>
 8000a92:	b662      	cpsie	i
 8000a94:	4770      	bx	lr
 8000a96:	680b      	ldr	r3, [r1, #0]
 8000a98:	6013      	str	r3, [r2, #0]
 8000a9a:	e7fa      	b.n	8000a92 <chEvtUnregister+0x12>
 8000a9c:	0000      	movs	r0, r0
	...

08000aa0 <evt1_execute>:
 8000aa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000aa2:	4c30      	ldr	r4, [pc, #192]	; (8000b64 <evt1_execute+0xc4>)
 8000aa4:	b08d      	sub	sp, #52	; 0x34
 8000aa6:	6024      	str	r4, [r4, #0]
 8000aa8:	b672      	cpsid	i
 8000aaa:	492f      	ldr	r1, [pc, #188]	; (8000b68 <evt1_execute+0xc8>)
 8000aac:	6823      	ldr	r3, [r4, #0]
 8000aae:	ad07      	add	r5, sp, #28
 8000ab0:	9307      	str	r3, [sp, #28]
 8000ab2:	698b      	ldr	r3, [r1, #24]
 8000ab4:	2200      	movs	r2, #0
 8000ab6:	606b      	str	r3, [r5, #4]
 8000ab8:	2301      	movs	r3, #1
 8000aba:	60ab      	str	r3, [r5, #8]
 8000abc:	3b02      	subs	r3, #2
 8000abe:	6025      	str	r5, [r4, #0]
 8000ac0:	60ea      	str	r2, [r5, #12]
 8000ac2:	612b      	str	r3, [r5, #16]
 8000ac4:	b662      	cpsie	i
 8000ac6:	b672      	cpsid	i
 8000ac8:	6989      	ldr	r1, [r1, #24]
 8000aca:	6820      	ldr	r0, [r4, #0]
 8000acc:	9101      	str	r1, [sp, #4]
 8000ace:	9103      	str	r1, [sp, #12]
 8000ad0:	2102      	movs	r1, #2
 8000ad2:	9002      	str	r0, [sp, #8]
 8000ad4:	a802      	add	r0, sp, #8
 8000ad6:	6020      	str	r0, [r4, #0]
 8000ad8:	9104      	str	r1, [sp, #16]
 8000ada:	9205      	str	r2, [sp, #20]
 8000adc:	9306      	str	r3, [sp, #24]
 8000ade:	b662      	cpsie	i
 8000ae0:	6823      	ldr	r3, [r4, #0]
 8000ae2:	2001      	movs	r0, #1
 8000ae4:	1b19      	subs	r1, r3, r4
 8000ae6:	1e4b      	subs	r3, r1, #1
 8000ae8:	4199      	sbcs	r1, r3
 8000aea:	b2c9      	uxtb	r1, r1
 8000aec:	f7ff fe98 	bl	8000820 <_test_assert>
 8000af0:	2800      	cmp	r0, #0
 8000af2:	d001      	beq.n	8000af8 <evt1_execute+0x58>
 8000af4:	b00d      	add	sp, #52	; 0x34
 8000af6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000af8:	0029      	movs	r1, r5
 8000afa:	0020      	movs	r0, r4
 8000afc:	f7ff ffc0 	bl	8000a80 <chEvtUnregister>
 8000b00:	6823      	ldr	r3, [r4, #0]
 8000b02:	2002      	movs	r0, #2
 8000b04:	1b19      	subs	r1, r3, r4
 8000b06:	1e4b      	subs	r3, r1, #1
 8000b08:	4199      	sbcs	r1, r3
 8000b0a:	b2c9      	uxtb	r1, r1
 8000b0c:	f7ff fe88 	bl	8000820 <_test_assert>
 8000b10:	2800      	cmp	r0, #0
 8000b12:	d1ef      	bne.n	8000af4 <evt1_execute+0x54>
 8000b14:	0020      	movs	r0, r4
 8000b16:	a902      	add	r1, sp, #8
 8000b18:	f7ff ffb2 	bl	8000a80 <chEvtUnregister>
 8000b1c:	6823      	ldr	r3, [r4, #0]
 8000b1e:	2003      	movs	r0, #3
 8000b20:	1b1c      	subs	r4, r3, r4
 8000b22:	4261      	negs	r1, r4
 8000b24:	4161      	adcs	r1, r4
 8000b26:	b2c9      	uxtb	r1, r1
 8000b28:	f7ff fe7a 	bl	8000820 <_test_assert>
 8000b2c:	2800      	cmp	r0, #0
 8000b2e:	d1e1      	bne.n	8000af4 <evt1_execute+0x54>
 8000b30:	2507      	movs	r5, #7
 8000b32:	2400      	movs	r4, #0
 8000b34:	2601      	movs	r6, #1
 8000b36:	4f0d      	ldr	r7, [pc, #52]	; (8000b6c <evt1_execute+0xcc>)
 8000b38:	002b      	movs	r3, r5
 8000b3a:	40e3      	lsrs	r3, r4
 8000b3c:	421e      	tst	r6, r3
 8000b3e:	d00e      	beq.n	8000b5e <evt1_execute+0xbe>
 8000b40:	0033      	movs	r3, r6
 8000b42:	40a3      	lsls	r3, r4
 8000b44:	439d      	bics	r5, r3
 8000b46:	00a3      	lsls	r3, r4, #2
 8000b48:	0020      	movs	r0, r4
 8000b4a:	58fb      	ldr	r3, [r7, r3]
 8000b4c:	4798      	blx	r3
 8000b4e:	3401      	adds	r4, #1
 8000b50:	2d00      	cmp	r5, #0
 8000b52:	d1f1      	bne.n	8000b38 <evt1_execute+0x98>
 8000b54:	4906      	ldr	r1, [pc, #24]	; (8000b70 <evt1_execute+0xd0>)
 8000b56:	2004      	movs	r0, #4
 8000b58:	f7ff fe3a 	bl	80007d0 <_test_assert_sequence>
 8000b5c:	e7ca      	b.n	8000af4 <evt1_execute+0x54>
 8000b5e:	3401      	adds	r4, #1
 8000b60:	e7ea      	b.n	8000b38 <evt1_execute+0x98>
 8000b62:	46c0      	nop			; (mov r8, r8)
 8000b64:	20000608 	.word	0x20000608
 8000b68:	20000738 	.word	0x20000738
 8000b6c:	080058d0 	.word	0x080058d0
 8000b70:	080058e0 	.word	0x080058e0
	...

08000b80 <wakeup>:
 8000b80:	b672      	cpsid	i
 8000b82:	7f03      	ldrb	r3, [r0, #28]
 8000b84:	2b07      	cmp	r3, #7
 8000b86:	d80c      	bhi.n	8000ba2 <wakeup+0x22>
 8000b88:	4a11      	ldr	r2, [pc, #68]	; (8000bd0 <wakeup+0x50>)
 8000b8a:	009b      	lsls	r3, r3, #2
 8000b8c:	58d3      	ldr	r3, [r2, r3]
 8000b8e:	469f      	mov	pc, r3
 8000b90:	6a02      	ldr	r2, [r0, #32]
 8000b92:	6893      	ldr	r3, [r2, #8]
 8000b94:	3301      	adds	r3, #1
 8000b96:	6093      	str	r3, [r2, #8]
 8000b98:	6802      	ldr	r2, [r0, #0]
 8000b9a:	6843      	ldr	r3, [r0, #4]
 8000b9c:	601a      	str	r2, [r3, #0]
 8000b9e:	6802      	ldr	r2, [r0, #0]
 8000ba0:	6053      	str	r3, [r2, #4]
 8000ba2:	2301      	movs	r3, #1
 8000ba4:	425b      	negs	r3, r3
 8000ba6:	6203      	str	r3, [r0, #32]
 8000ba8:	2300      	movs	r3, #0
 8000baa:	6882      	ldr	r2, [r0, #8]
 8000bac:	7703      	strb	r3, [r0, #28]
 8000bae:	4b09      	ldr	r3, [pc, #36]	; (8000bd4 <wakeup+0x54>)
 8000bb0:	681b      	ldr	r3, [r3, #0]
 8000bb2:	6899      	ldr	r1, [r3, #8]
 8000bb4:	4291      	cmp	r1, r2
 8000bb6:	d2fb      	bcs.n	8000bb0 <wakeup+0x30>
 8000bb8:	685a      	ldr	r2, [r3, #4]
 8000bba:	6003      	str	r3, [r0, #0]
 8000bbc:	6042      	str	r2, [r0, #4]
 8000bbe:	6010      	str	r0, [r2, #0]
 8000bc0:	6058      	str	r0, [r3, #4]
 8000bc2:	b662      	cpsie	i
 8000bc4:	4770      	bx	lr
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	6a03      	ldr	r3, [r0, #32]
 8000bca:	601a      	str	r2, [r3, #0]
 8000bcc:	e7e9      	b.n	8000ba2 <wakeup+0x22>
 8000bce:	46c0      	nop			; (mov r8, r8)
 8000bd0:	080056d0 	.word	0x080056d0
 8000bd4:	20000738 	.word	0x20000738
	...

08000be0 <chSchReadyI>:
 8000be0:	2300      	movs	r3, #0
 8000be2:	6882      	ldr	r2, [r0, #8]
 8000be4:	7703      	strb	r3, [r0, #28]
 8000be6:	4b05      	ldr	r3, [pc, #20]	; (8000bfc <chSchReadyI+0x1c>)
 8000be8:	681b      	ldr	r3, [r3, #0]
 8000bea:	6899      	ldr	r1, [r3, #8]
 8000bec:	4291      	cmp	r1, r2
 8000bee:	d2fb      	bcs.n	8000be8 <chSchReadyI+0x8>
 8000bf0:	685a      	ldr	r2, [r3, #4]
 8000bf2:	6003      	str	r3, [r0, #0]
 8000bf4:	6042      	str	r2, [r0, #4]
 8000bf6:	6010      	str	r0, [r2, #0]
 8000bf8:	6058      	str	r0, [r3, #4]
 8000bfa:	4770      	bx	lr
 8000bfc:	20000738 	.word	0x20000738

08000c00 <chCondSignalI.constprop.43>:
 8000c00:	4b06      	ldr	r3, [pc, #24]	; (8000c1c <chCondSignalI.constprop.43+0x1c>)
 8000c02:	b510      	push	{r4, lr}
 8000c04:	6818      	ldr	r0, [r3, #0]
 8000c06:	4298      	cmp	r0, r3
 8000c08:	d006      	beq.n	8000c18 <chCondSignalI.constprop.43+0x18>
 8000c0a:	6802      	ldr	r2, [r0, #0]
 8000c0c:	6053      	str	r3, [r2, #4]
 8000c0e:	601a      	str	r2, [r3, #0]
 8000c10:	2300      	movs	r3, #0
 8000c12:	6203      	str	r3, [r0, #32]
 8000c14:	f7ff ffe4 	bl	8000be0 <chSchReadyI>
 8000c18:	bd10      	pop	{r4, pc}
 8000c1a:	46c0      	nop			; (mov r8, r8)
 8000c1c:	20000600 	.word	0x20000600

08000c20 <chIQPutI>:
 8000c20:	b510      	push	{r4, lr}
 8000c22:	6942      	ldr	r2, [r0, #20]
 8000c24:	6984      	ldr	r4, [r0, #24]
 8000c26:	6883      	ldr	r3, [r0, #8]
 8000c28:	42a2      	cmp	r2, r4
 8000c2a:	d018      	beq.n	8000c5e <chIQPutI+0x3e>
 8000c2c:	3301      	adds	r3, #1
 8000c2e:	6083      	str	r3, [r0, #8]
 8000c30:	1c53      	adds	r3, r2, #1
 8000c32:	6143      	str	r3, [r0, #20]
 8000c34:	7011      	strb	r1, [r2, #0]
 8000c36:	6943      	ldr	r3, [r0, #20]
 8000c38:	6902      	ldr	r2, [r0, #16]
 8000c3a:	4293      	cmp	r3, r2
 8000c3c:	d20c      	bcs.n	8000c58 <chIQPutI+0x38>
 8000c3e:	6803      	ldr	r3, [r0, #0]
 8000c40:	2400      	movs	r4, #0
 8000c42:	4298      	cmp	r0, r3
 8000c44:	d006      	beq.n	8000c54 <chIQPutI+0x34>
 8000c46:	681a      	ldr	r2, [r3, #0]
 8000c48:	6002      	str	r2, [r0, #0]
 8000c4a:	6050      	str	r0, [r2, #4]
 8000c4c:	621c      	str	r4, [r3, #32]
 8000c4e:	0018      	movs	r0, r3
 8000c50:	f7ff ffc6 	bl	8000be0 <chSchReadyI>
 8000c54:	0020      	movs	r0, r4
 8000c56:	bd10      	pop	{r4, pc}
 8000c58:	68c3      	ldr	r3, [r0, #12]
 8000c5a:	6143      	str	r3, [r0, #20]
 8000c5c:	e7ef      	b.n	8000c3e <chIQPutI+0x1e>
 8000c5e:	2b00      	cmp	r3, #0
 8000c60:	d0e4      	beq.n	8000c2c <chIQPutI+0xc>
 8000c62:	2404      	movs	r4, #4
 8000c64:	4264      	negs	r4, r4
 8000c66:	e7f5      	b.n	8000c54 <chIQPutI+0x34>
	...

08000c70 <chOQGetI>:
 8000c70:	6982      	ldr	r2, [r0, #24]
 8000c72:	6941      	ldr	r1, [r0, #20]
 8000c74:	b510      	push	{r4, lr}
 8000c76:	6883      	ldr	r3, [r0, #8]
 8000c78:	4291      	cmp	r1, r2
 8000c7a:	d017      	beq.n	8000cac <chOQGetI+0x3c>
 8000c7c:	3301      	adds	r3, #1
 8000c7e:	6083      	str	r3, [r0, #8]
 8000c80:	1c53      	adds	r3, r2, #1
 8000c82:	6183      	str	r3, [r0, #24]
 8000c84:	7814      	ldrb	r4, [r2, #0]
 8000c86:	6902      	ldr	r2, [r0, #16]
 8000c88:	4293      	cmp	r3, r2
 8000c8a:	d20c      	bcs.n	8000ca6 <chOQGetI+0x36>
 8000c8c:	6803      	ldr	r3, [r0, #0]
 8000c8e:	4298      	cmp	r0, r3
 8000c90:	d007      	beq.n	8000ca2 <chOQGetI+0x32>
 8000c92:	681a      	ldr	r2, [r3, #0]
 8000c94:	6002      	str	r2, [r0, #0]
 8000c96:	6050      	str	r0, [r2, #4]
 8000c98:	2200      	movs	r2, #0
 8000c9a:	0018      	movs	r0, r3
 8000c9c:	621a      	str	r2, [r3, #32]
 8000c9e:	f7ff ff9f 	bl	8000be0 <chSchReadyI>
 8000ca2:	0020      	movs	r0, r4
 8000ca4:	bd10      	pop	{r4, pc}
 8000ca6:	68c3      	ldr	r3, [r0, #12]
 8000ca8:	6183      	str	r3, [r0, #24]
 8000caa:	e7ef      	b.n	8000c8c <chOQGetI+0x1c>
 8000cac:	2b00      	cmp	r3, #0
 8000cae:	d0e5      	beq.n	8000c7c <chOQGetI+0xc>
 8000cb0:	2003      	movs	r0, #3
 8000cb2:	4240      	negs	r0, r0
 8000cb4:	e7f6      	b.n	8000ca4 <chOQGetI+0x34>
 8000cb6:	46c0      	nop			; (mov r8, r8)
	...

08000cc0 <chEvtSignalI>:
 8000cc0:	b510      	push	{r4, lr}
 8000cc2:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8000cc4:	4319      	orrs	r1, r3
 8000cc6:	7f03      	ldrb	r3, [r0, #28]
 8000cc8:	6341      	str	r1, [r0, #52]	; 0x34
 8000cca:	2b0a      	cmp	r3, #10
 8000ccc:	d00b      	beq.n	8000ce6 <chEvtSignalI+0x26>
 8000cce:	2b0b      	cmp	r3, #11
 8000cd0:	d000      	beq.n	8000cd4 <chEvtSignalI+0x14>
 8000cd2:	bd10      	pop	{r4, pc}
 8000cd4:	6a03      	ldr	r3, [r0, #32]
 8000cd6:	4019      	ands	r1, r3
 8000cd8:	428b      	cmp	r3, r1
 8000cda:	d1fa      	bne.n	8000cd2 <chEvtSignalI+0x12>
 8000cdc:	2300      	movs	r3, #0
 8000cde:	6203      	str	r3, [r0, #32]
 8000ce0:	f7ff ff7e 	bl	8000be0 <chSchReadyI>
 8000ce4:	e7f5      	b.n	8000cd2 <chEvtSignalI+0x12>
 8000ce6:	6a03      	ldr	r3, [r0, #32]
 8000ce8:	420b      	tst	r3, r1
 8000cea:	d0f2      	beq.n	8000cd2 <chEvtSignalI+0x12>
 8000cec:	2300      	movs	r3, #0
 8000cee:	6203      	str	r3, [r0, #32]
 8000cf0:	f7ff ff76 	bl	8000be0 <chSchReadyI>
 8000cf4:	e7ed      	b.n	8000cd2 <chEvtSignalI+0x12>
 8000cf6:	46c0      	nop			; (mov r8, r8)
	...

08000d00 <chEvtBroadcastFlagsI>:
 8000d00:	b570      	push	{r4, r5, r6, lr}
 8000d02:	6804      	ldr	r4, [r0, #0]
 8000d04:	0006      	movs	r6, r0
 8000d06:	000d      	movs	r5, r1
 8000d08:	42a0      	cmp	r0, r4
 8000d0a:	d00e      	beq.n	8000d2a <chEvtBroadcastFlagsI+0x2a>
 8000d0c:	68e3      	ldr	r3, [r4, #12]
 8000d0e:	432b      	orrs	r3, r5
 8000d10:	60e3      	str	r3, [r4, #12]
 8000d12:	2d00      	cmp	r5, #0
 8000d14:	d002      	beq.n	8000d1c <chEvtBroadcastFlagsI+0x1c>
 8000d16:	6922      	ldr	r2, [r4, #16]
 8000d18:	421a      	tst	r2, r3
 8000d1a:	d003      	beq.n	8000d24 <chEvtBroadcastFlagsI+0x24>
 8000d1c:	68a1      	ldr	r1, [r4, #8]
 8000d1e:	6860      	ldr	r0, [r4, #4]
 8000d20:	f7ff ffce 	bl	8000cc0 <chEvtSignalI>
 8000d24:	6824      	ldr	r4, [r4, #0]
 8000d26:	42a6      	cmp	r6, r4
 8000d28:	d1f0      	bne.n	8000d0c <chEvtBroadcastFlagsI+0xc>
 8000d2a:	bd70      	pop	{r4, r5, r6, pc}
 8000d2c:	0000      	movs	r0, r0
	...

08000d30 <chMtxUnlockS>:
 8000d30:	4b11      	ldr	r3, [pc, #68]	; (8000d78 <chMtxUnlockS+0x48>)
 8000d32:	b570      	push	{r4, r5, r6, lr}
 8000d34:	6801      	ldr	r1, [r0, #0]
 8000d36:	699d      	ldr	r5, [r3, #24]
 8000d38:	68c3      	ldr	r3, [r0, #12]
 8000d3a:	63ab      	str	r3, [r5, #56]	; 0x38
 8000d3c:	4281      	cmp	r1, r0
 8000d3e:	d018      	beq.n	8000d72 <chMtxUnlockS+0x42>
 8000d40:	6bec      	ldr	r4, [r5, #60]	; 0x3c
 8000d42:	2b00      	cmp	r3, #0
 8000d44:	d009      	beq.n	8000d5a <chMtxUnlockS+0x2a>
 8000d46:	681a      	ldr	r2, [r3, #0]
 8000d48:	4293      	cmp	r3, r2
 8000d4a:	d003      	beq.n	8000d54 <chMtxUnlockS+0x24>
 8000d4c:	6892      	ldr	r2, [r2, #8]
 8000d4e:	4294      	cmp	r4, r2
 8000d50:	d200      	bcs.n	8000d54 <chMtxUnlockS+0x24>
 8000d52:	0014      	movs	r4, r2
 8000d54:	68db      	ldr	r3, [r3, #12]
 8000d56:	2b00      	cmp	r3, #0
 8000d58:	d1f5      	bne.n	8000d46 <chMtxUnlockS+0x16>
 8000d5a:	680b      	ldr	r3, [r1, #0]
 8000d5c:	60ac      	str	r4, [r5, #8]
 8000d5e:	6003      	str	r3, [r0, #0]
 8000d60:	6058      	str	r0, [r3, #4]
 8000d62:	6b8b      	ldr	r3, [r1, #56]	; 0x38
 8000d64:	6081      	str	r1, [r0, #8]
 8000d66:	60c3      	str	r3, [r0, #12]
 8000d68:	6388      	str	r0, [r1, #56]	; 0x38
 8000d6a:	0008      	movs	r0, r1
 8000d6c:	f7ff ff38 	bl	8000be0 <chSchReadyI>
 8000d70:	bd70      	pop	{r4, r5, r6, pc}
 8000d72:	2300      	movs	r3, #0
 8000d74:	608b      	str	r3, [r1, #8]
 8000d76:	e7fb      	b.n	8000d70 <chMtxUnlockS+0x40>
 8000d78:	20000738 	.word	0x20000738
 8000d7c:	00000000 	.word	0x00000000

08000d80 <chSemSignalI>:
 8000d80:	6883      	ldr	r3, [r0, #8]
 8000d82:	b510      	push	{r4, lr}
 8000d84:	3301      	adds	r3, #1
 8000d86:	6083      	str	r3, [r0, #8]
 8000d88:	2b00      	cmp	r3, #0
 8000d8a:	dd00      	ble.n	8000d8e <chSemSignalI+0xe>
 8000d8c:	bd10      	pop	{r4, pc}
 8000d8e:	6803      	ldr	r3, [r0, #0]
 8000d90:	681a      	ldr	r2, [r3, #0]
 8000d92:	6002      	str	r2, [r0, #0]
 8000d94:	6050      	str	r0, [r2, #4]
 8000d96:	2200      	movs	r2, #0
 8000d98:	0018      	movs	r0, r3
 8000d9a:	621a      	str	r2, [r3, #32]
 8000d9c:	f7ff ff20 	bl	8000be0 <chSchReadyI>
 8000da0:	e7f4      	b.n	8000d8c <chSemSignalI+0xc>
 8000da2:	46c0      	nop			; (mov r8, r8)
	...

08000db0 <chMBPostI.constprop.19>:
 8000db0:	4b0c      	ldr	r3, [pc, #48]	; (8000de4 <chMBPostI.constprop.19+0x34>)
 8000db2:	b510      	push	{r4, lr}
 8000db4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000db6:	2a00      	cmp	r2, #0
 8000db8:	dd11      	ble.n	8000dde <chMBPostI.constprop.19+0x2e>
 8000dba:	6899      	ldr	r1, [r3, #8]
 8000dbc:	3a01      	subs	r2, #1
 8000dbe:	625a      	str	r2, [r3, #36]	; 0x24
 8000dc0:	1d0a      	adds	r2, r1, #4
 8000dc2:	609a      	str	r2, [r3, #8]
 8000dc4:	6008      	str	r0, [r1, #0]
 8000dc6:	6859      	ldr	r1, [r3, #4]
 8000dc8:	428a      	cmp	r2, r1
 8000dca:	d205      	bcs.n	8000dd8 <chMBPostI.constprop.19+0x28>
 8000dcc:	3310      	adds	r3, #16
 8000dce:	0018      	movs	r0, r3
 8000dd0:	f7ff ffd6 	bl	8000d80 <chSemSignalI>
 8000dd4:	2000      	movs	r0, #0
 8000dd6:	bd10      	pop	{r4, pc}
 8000dd8:	681a      	ldr	r2, [r3, #0]
 8000dda:	609a      	str	r2, [r3, #8]
 8000ddc:	e7f6      	b.n	8000dcc <chMBPostI.constprop.19+0x1c>
 8000dde:	2001      	movs	r0, #1
 8000de0:	4240      	negs	r0, r0
 8000de2:	e7f8      	b.n	8000dd6 <chMBPostI.constprop.19+0x26>
 8000de4:	20000654 	.word	0x20000654
	...

08000df0 <chMBPostAheadI.constprop.17>:
 8000df0:	4b0d      	ldr	r3, [pc, #52]	; (8000e28 <chMBPostAheadI.constprop.17+0x38>)
 8000df2:	b510      	push	{r4, lr}
 8000df4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000df6:	2a00      	cmp	r2, #0
 8000df8:	dd12      	ble.n	8000e20 <chMBPostAheadI.constprop.17+0x30>
 8000dfa:	3a01      	subs	r2, #1
 8000dfc:	625a      	str	r2, [r3, #36]	; 0x24
 8000dfe:	68da      	ldr	r2, [r3, #12]
 8000e00:	6819      	ldr	r1, [r3, #0]
 8000e02:	3a04      	subs	r2, #4
 8000e04:	60da      	str	r2, [r3, #12]
 8000e06:	428a      	cmp	r2, r1
 8000e08:	d306      	bcc.n	8000e18 <chMBPostAheadI.constprop.17+0x28>
 8000e0a:	3310      	adds	r3, #16
 8000e0c:	6010      	str	r0, [r2, #0]
 8000e0e:	0018      	movs	r0, r3
 8000e10:	f7ff ffb6 	bl	8000d80 <chSemSignalI>
 8000e14:	2000      	movs	r0, #0
 8000e16:	bd10      	pop	{r4, pc}
 8000e18:	685a      	ldr	r2, [r3, #4]
 8000e1a:	3a04      	subs	r2, #4
 8000e1c:	60da      	str	r2, [r3, #12]
 8000e1e:	e7f4      	b.n	8000e0a <chMBPostAheadI.constprop.17+0x1a>
 8000e20:	2001      	movs	r0, #1
 8000e22:	4240      	negs	r0, r0
 8000e24:	e7f7      	b.n	8000e16 <chMBPostAheadI.constprop.17+0x26>
 8000e26:	46c0      	nop			; (mov r8, r8)
 8000e28:	20000654 	.word	0x20000654
 8000e2c:	00000000 	.word	0x00000000

08000e30 <chMBFetchI.constprop.15>:
 8000e30:	4b0c      	ldr	r3, [pc, #48]	; (8000e64 <chMBFetchI.constprop.15+0x34>)
 8000e32:	b510      	push	{r4, lr}
 8000e34:	699a      	ldr	r2, [r3, #24]
 8000e36:	2a00      	cmp	r2, #0
 8000e38:	dd11      	ble.n	8000e5e <chMBFetchI.constprop.15+0x2e>
 8000e3a:	68d9      	ldr	r1, [r3, #12]
 8000e3c:	3a01      	subs	r2, #1
 8000e3e:	619a      	str	r2, [r3, #24]
 8000e40:	1d0a      	adds	r2, r1, #4
 8000e42:	6809      	ldr	r1, [r1, #0]
 8000e44:	60da      	str	r2, [r3, #12]
 8000e46:	6001      	str	r1, [r0, #0]
 8000e48:	6859      	ldr	r1, [r3, #4]
 8000e4a:	428a      	cmp	r2, r1
 8000e4c:	d301      	bcc.n	8000e52 <chMBFetchI.constprop.15+0x22>
 8000e4e:	681a      	ldr	r2, [r3, #0]
 8000e50:	60da      	str	r2, [r3, #12]
 8000e52:	331c      	adds	r3, #28
 8000e54:	0018      	movs	r0, r3
 8000e56:	f7ff ff93 	bl	8000d80 <chSemSignalI>
 8000e5a:	2000      	movs	r0, #0
 8000e5c:	e001      	b.n	8000e62 <chMBFetchI.constprop.15+0x32>
 8000e5e:	2001      	movs	r0, #1
 8000e60:	4240      	negs	r0, r0
 8000e62:	bd10      	pop	{r4, pc}
 8000e64:	20000654 	.word	0x20000654
	...

08000e70 <chSemResetI>:
 8000e70:	b570      	push	{r4, r5, r6, lr}
 8000e72:	6884      	ldr	r4, [r0, #8]
 8000e74:	0005      	movs	r5, r0
 8000e76:	3401      	adds	r4, #1
 8000e78:	6081      	str	r1, [r0, #8]
 8000e7a:	2c00      	cmp	r4, #0
 8000e7c:	dc0b      	bgt.n	8000e96 <chSemResetI+0x26>
 8000e7e:	2602      	movs	r6, #2
 8000e80:	4276      	negs	r6, r6
 8000e82:	6868      	ldr	r0, [r5, #4]
 8000e84:	3401      	adds	r4, #1
 8000e86:	6843      	ldr	r3, [r0, #4]
 8000e88:	606b      	str	r3, [r5, #4]
 8000e8a:	601d      	str	r5, [r3, #0]
 8000e8c:	f7ff fea8 	bl	8000be0 <chSchReadyI>
 8000e90:	6206      	str	r6, [r0, #32]
 8000e92:	2c01      	cmp	r4, #1
 8000e94:	d1f5      	bne.n	8000e82 <chSemResetI+0x12>
 8000e96:	bd70      	pop	{r4, r5, r6, pc}
	...

08000ea0 <chVTDoResetI>:
 8000ea0:	4b1b      	ldr	r3, [pc, #108]	; (8000f10 <chVTDoResetI+0x70>)
 8000ea2:	b510      	push	{r4, lr}
 8000ea4:	69da      	ldr	r2, [r3, #28]
 8000ea6:	4282      	cmp	r2, r0
 8000ea8:	d00f      	beq.n	8000eca <chVTDoResetI+0x2a>
 8000eaa:	6841      	ldr	r1, [r0, #4]
 8000eac:	6802      	ldr	r2, [r0, #0]
 8000eae:	331c      	adds	r3, #28
 8000eb0:	600a      	str	r2, [r1, #0]
 8000eb2:	6802      	ldr	r2, [r0, #0]
 8000eb4:	6051      	str	r1, [r2, #4]
 8000eb6:	2100      	movs	r1, #0
 8000eb8:	60c1      	str	r1, [r0, #12]
 8000eba:	429a      	cmp	r2, r3
 8000ebc:	d004      	beq.n	8000ec8 <chVTDoResetI+0x28>
 8000ebe:	6891      	ldr	r1, [r2, #8]
 8000ec0:	6883      	ldr	r3, [r0, #8]
 8000ec2:	468c      	mov	ip, r1
 8000ec4:	4463      	add	r3, ip
 8000ec6:	6093      	str	r3, [r2, #8]
 8000ec8:	bd10      	pop	{r4, pc}
 8000eca:	0018      	movs	r0, r3
 8000ecc:	2400      	movs	r4, #0
 8000ece:	6811      	ldr	r1, [r2, #0]
 8000ed0:	301c      	adds	r0, #28
 8000ed2:	61d9      	str	r1, [r3, #28]
 8000ed4:	6048      	str	r0, [r1, #4]
 8000ed6:	60d4      	str	r4, [r2, #12]
 8000ed8:	4281      	cmp	r1, r0
 8000eda:	d014      	beq.n	8000f06 <chVTDoResetI+0x66>
 8000edc:	6888      	ldr	r0, [r1, #8]
 8000ede:	6892      	ldr	r2, [r2, #8]
 8000ee0:	4684      	mov	ip, r0
 8000ee2:	4462      	add	r2, ip
 8000ee4:	608a      	str	r2, [r1, #8]
 8000ee6:	2180      	movs	r1, #128	; 0x80
 8000ee8:	05c9      	lsls	r1, r1, #23
 8000eea:	6a49      	ldr	r1, [r1, #36]	; 0x24
 8000eec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000eee:	1acb      	subs	r3, r1, r3
 8000ef0:	429a      	cmp	r2, r3
 8000ef2:	d9e9      	bls.n	8000ec8 <chVTDoResetI+0x28>
 8000ef4:	1ad2      	subs	r2, r2, r3
 8000ef6:	2a02      	cmp	r2, #2
 8000ef8:	d200      	bcs.n	8000efc <chVTDoResetI+0x5c>
 8000efa:	2202      	movs	r2, #2
 8000efc:	2380      	movs	r3, #128	; 0x80
 8000efe:	1852      	adds	r2, r2, r1
 8000f00:	05db      	lsls	r3, r3, #23
 8000f02:	635a      	str	r2, [r3, #52]	; 0x34
 8000f04:	e7e0      	b.n	8000ec8 <chVTDoResetI+0x28>
 8000f06:	2380      	movs	r3, #128	; 0x80
 8000f08:	05db      	lsls	r3, r3, #23
 8000f0a:	60dc      	str	r4, [r3, #12]
 8000f0c:	e7dc      	b.n	8000ec8 <chVTDoResetI+0x28>
 8000f0e:	46c0      	nop			; (mov r8, r8)
 8000f10:	20000738 	.word	0x20000738
	...

08000f20 <chVTDoSetI>:
 8000f20:	6103      	str	r3, [r0, #16]
 8000f22:	2380      	movs	r3, #128	; 0x80
 8000f24:	05db      	lsls	r3, r3, #23
 8000f26:	60c2      	str	r2, [r0, #12]
 8000f28:	b570      	push	{r4, r5, r6, lr}
 8000f2a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000f2c:	2902      	cmp	r1, #2
 8000f2e:	d200      	bcs.n	8000f32 <chVTDoSetI+0x12>
 8000f30:	2102      	movs	r1, #2
 8000f32:	4d19      	ldr	r5, [pc, #100]	; (8000f98 <chVTDoSetI+0x78>)
 8000f34:	002c      	movs	r4, r5
 8000f36:	69eb      	ldr	r3, [r5, #28]
 8000f38:	341c      	adds	r4, #28
 8000f3a:	42a3      	cmp	r3, r4
 8000f3c:	d01c      	beq.n	8000f78 <chVTDoSetI+0x58>
 8000f3e:	1889      	adds	r1, r1, r2
 8000f40:	689c      	ldr	r4, [r3, #8]
 8000f42:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 8000f44:	1a8a      	subs	r2, r1, r2
 8000f46:	4294      	cmp	r4, r2
 8000f48:	d903      	bls.n	8000f52 <chVTDoSetI+0x32>
 8000f4a:	e011      	b.n	8000f70 <chVTDoSetI+0x50>
 8000f4c:	681b      	ldr	r3, [r3, #0]
 8000f4e:	1b12      	subs	r2, r2, r4
 8000f50:	689c      	ldr	r4, [r3, #8]
 8000f52:	4294      	cmp	r4, r2
 8000f54:	d3fa      	bcc.n	8000f4c <chVTDoSetI+0x2c>
 8000f56:	6859      	ldr	r1, [r3, #4]
 8000f58:	6003      	str	r3, [r0, #0]
 8000f5a:	6041      	str	r1, [r0, #4]
 8000f5c:	6008      	str	r0, [r1, #0]
 8000f5e:	6058      	str	r0, [r3, #4]
 8000f60:	6082      	str	r2, [r0, #8]
 8000f62:	6899      	ldr	r1, [r3, #8]
 8000f64:	1a8a      	subs	r2, r1, r2
 8000f66:	609a      	str	r2, [r3, #8]
 8000f68:	2301      	movs	r3, #1
 8000f6a:	425b      	negs	r3, r3
 8000f6c:	626b      	str	r3, [r5, #36]	; 0x24
 8000f6e:	bd70      	pop	{r4, r5, r6, pc}
 8000f70:	2680      	movs	r6, #128	; 0x80
 8000f72:	05f6      	lsls	r6, r6, #23
 8000f74:	6371      	str	r1, [r6, #52]	; 0x34
 8000f76:	e7ec      	b.n	8000f52 <chVTDoSetI+0x32>
 8000f78:	62aa      	str	r2, [r5, #40]	; 0x28
 8000f7a:	61e8      	str	r0, [r5, #28]
 8000f7c:	6228      	str	r0, [r5, #32]
 8000f7e:	6003      	str	r3, [r0, #0]
 8000f80:	6043      	str	r3, [r0, #4]
 8000f82:	2380      	movs	r3, #128	; 0x80
 8000f84:	6081      	str	r1, [r0, #8]
 8000f86:	1889      	adds	r1, r1, r2
 8000f88:	2200      	movs	r2, #0
 8000f8a:	05db      	lsls	r3, r3, #23
 8000f8c:	6359      	str	r1, [r3, #52]	; 0x34
 8000f8e:	611a      	str	r2, [r3, #16]
 8000f90:	3202      	adds	r2, #2
 8000f92:	60da      	str	r2, [r3, #12]
 8000f94:	e7eb      	b.n	8000f6e <chVTDoSetI+0x4e>
 8000f96:	46c0      	nop			; (mov r8, r8)
 8000f98:	20000738 	.word	0x20000738
 8000f9c:	00000000 	.word	0x00000000

08000fa0 <test_start_timer.constprop.1>:
 8000fa0:	2200      	movs	r2, #0
 8000fa2:	4b09      	ldr	r3, [pc, #36]	; (8000fc8 <test_start_timer.constprop.1+0x28>)
 8000fa4:	b510      	push	{r4, lr}
 8000fa6:	701a      	strb	r2, [r3, #0]
 8000fa8:	b672      	cpsid	i
 8000faa:	4c08      	ldr	r4, [pc, #32]	; (8000fcc <test_start_timer.constprop.1+0x2c>)
 8000fac:	68e3      	ldr	r3, [r4, #12]
 8000fae:	2b00      	cmp	r3, #0
 8000fb0:	d002      	beq.n	8000fb8 <test_start_timer.constprop.1+0x18>
 8000fb2:	0020      	movs	r0, r4
 8000fb4:	f7ff ff74 	bl	8000ea0 <chVTDoResetI>
 8000fb8:	2300      	movs	r3, #0
 8000fba:	4a05      	ldr	r2, [pc, #20]	; (8000fd0 <test_start_timer.constprop.1+0x30>)
 8000fbc:	4905      	ldr	r1, [pc, #20]	; (8000fd4 <test_start_timer.constprop.1+0x34>)
 8000fbe:	0020      	movs	r0, r4
 8000fc0:	f7ff ffae 	bl	8000f20 <chVTDoSetI>
 8000fc4:	b662      	cpsie	i
 8000fc6:	bd10      	pop	{r4, pc}
 8000fc8:	20000fd0 	.word	0x20000fd0
 8000fcc:	20000ffc 	.word	0x20000ffc
 8000fd0:	080003a1 	.word	0x080003a1
 8000fd4:	00002710 	.word	0x00002710
	...

08000fe0 <chSysGetStatusAndLockX>:
 8000fe0:	f3ef 8010 	mrs	r0, PRIMASK
 8000fe4:	07c3      	lsls	r3, r0, #31
 8000fe6:	d402      	bmi.n	8000fee <chSysGetStatusAndLockX+0xe>
 8000fe8:	f3ef 8305 	mrs	r3, IPSR
 8000fec:	b672      	cpsid	i
 8000fee:	4770      	bx	lr

08000ff0 <chSysIntegrityCheckI>:
 8000ff0:	b530      	push	{r4, r5, lr}
 8000ff2:	0005      	movs	r5, r0
 8000ff4:	07c3      	lsls	r3, r0, #31
 8000ff6:	d512      	bpl.n	800101e <chSysIntegrityCheckI+0x2e>
 8000ff8:	4b26      	ldr	r3, [pc, #152]	; (8001094 <chSysIntegrityCheckI+0xa4>)
 8000ffa:	2200      	movs	r2, #0
 8000ffc:	6819      	ldr	r1, [r3, #0]
 8000ffe:	685c      	ldr	r4, [r3, #4]
 8001000:	4299      	cmp	r1, r3
 8001002:	d039      	beq.n	8001078 <chSysIntegrityCheckI+0x88>
 8001004:	6809      	ldr	r1, [r1, #0]
 8001006:	3201      	adds	r2, #1
 8001008:	4299      	cmp	r1, r3
 800100a:	d1fb      	bne.n	8001004 <chSysIntegrityCheckI+0x14>
 800100c:	428c      	cmp	r4, r1
 800100e:	d036      	beq.n	800107e <chSysIntegrityCheckI+0x8e>
 8001010:	6864      	ldr	r4, [r4, #4]
 8001012:	3a01      	subs	r2, #1
 8001014:	429c      	cmp	r4, r3
 8001016:	d1fb      	bne.n	8001010 <chSysIntegrityCheckI+0x20>
 8001018:	2001      	movs	r0, #1
 800101a:	2a00      	cmp	r2, #0
 800101c:	d12b      	bne.n	8001076 <chSysIntegrityCheckI+0x86>
 800101e:	07ab      	lsls	r3, r5, #30
 8001020:	d513      	bpl.n	800104a <chSysIntegrityCheckI+0x5a>
 8001022:	491c      	ldr	r1, [pc, #112]	; (8001094 <chSysIntegrityCheckI+0xa4>)
 8001024:	69ca      	ldr	r2, [r1, #28]
 8001026:	6a0c      	ldr	r4, [r1, #32]
 8001028:	311c      	adds	r1, #28
 800102a:	428a      	cmp	r2, r1
 800102c:	d029      	beq.n	8001082 <chSysIntegrityCheckI+0x92>
 800102e:	2300      	movs	r3, #0
 8001030:	6812      	ldr	r2, [r2, #0]
 8001032:	3301      	adds	r3, #1
 8001034:	428a      	cmp	r2, r1
 8001036:	d1fb      	bne.n	8001030 <chSysIntegrityCheckI+0x40>
 8001038:	4294      	cmp	r4, r2
 800103a:	d020      	beq.n	800107e <chSysIntegrityCheckI+0x8e>
 800103c:	6864      	ldr	r4, [r4, #4]
 800103e:	3b01      	subs	r3, #1
 8001040:	428c      	cmp	r4, r1
 8001042:	d1fb      	bne.n	800103c <chSysIntegrityCheckI+0x4c>
 8001044:	2001      	movs	r0, #1
 8001046:	2b00      	cmp	r3, #0
 8001048:	d115      	bne.n	8001076 <chSysIntegrityCheckI+0x86>
 800104a:	2000      	movs	r0, #0
 800104c:	076b      	lsls	r3, r5, #29
 800104e:	d512      	bpl.n	8001076 <chSysIntegrityCheckI+0x86>
 8001050:	4b10      	ldr	r3, [pc, #64]	; (8001094 <chSysIntegrityCheckI+0xa4>)
 8001052:	2200      	movs	r2, #0
 8001054:	6919      	ldr	r1, [r3, #16]
 8001056:	695c      	ldr	r4, [r3, #20]
 8001058:	4299      	cmp	r1, r3
 800105a:	d017      	beq.n	800108c <chSysIntegrityCheckI+0x9c>
 800105c:	6909      	ldr	r1, [r1, #16]
 800105e:	3201      	adds	r2, #1
 8001060:	4299      	cmp	r1, r3
 8001062:	d1fb      	bne.n	800105c <chSysIntegrityCheckI+0x6c>
 8001064:	428c      	cmp	r4, r1
 8001066:	d00a      	beq.n	800107e <chSysIntegrityCheckI+0x8e>
 8001068:	6964      	ldr	r4, [r4, #20]
 800106a:	3a01      	subs	r2, #1
 800106c:	429c      	cmp	r4, r3
 800106e:	d1fb      	bne.n	8001068 <chSysIntegrityCheckI+0x78>
 8001070:	1e50      	subs	r0, r2, #1
 8001072:	4182      	sbcs	r2, r0
 8001074:	b2d0      	uxtb	r0, r2
 8001076:	bd30      	pop	{r4, r5, pc}
 8001078:	429c      	cmp	r4, r3
 800107a:	d1c9      	bne.n	8001010 <chSysIntegrityCheckI+0x20>
 800107c:	e7cf      	b.n	800101e <chSysIntegrityCheckI+0x2e>
 800107e:	2001      	movs	r0, #1
 8001080:	e7f9      	b.n	8001076 <chSysIntegrityCheckI+0x86>
 8001082:	4294      	cmp	r4, r2
 8001084:	d0e1      	beq.n	800104a <chSysIntegrityCheckI+0x5a>
 8001086:	2300      	movs	r3, #0
 8001088:	0011      	movs	r1, r2
 800108a:	e7d7      	b.n	800103c <chSysIntegrityCheckI+0x4c>
 800108c:	428c      	cmp	r4, r1
 800108e:	d1eb      	bne.n	8001068 <chSysIntegrityCheckI+0x78>
 8001090:	e7f1      	b.n	8001076 <chSysIntegrityCheckI+0x86>
 8001092:	46c0      	nop			; (mov r8, r8)
 8001094:	20000738 	.word	0x20000738
	...

080010a0 <sys3_execute>:
 80010a0:	b510      	push	{r4, lr}
 80010a2:	b672      	cpsid	i
 80010a4:	2001      	movs	r0, #1
 80010a6:	f7ff ffa3 	bl	8000ff0 <chSysIntegrityCheckI>
 80010aa:	b662      	cpsie	i
 80010ac:	2401      	movs	r4, #1
 80010ae:	4060      	eors	r0, r4
 80010b0:	b2c1      	uxtb	r1, r0
 80010b2:	2001      	movs	r0, #1
 80010b4:	f7ff fbb4 	bl	8000820 <_test_assert>
 80010b8:	2800      	cmp	r0, #0
 80010ba:	d000      	beq.n	80010be <sys3_execute+0x1e>
 80010bc:	bd10      	pop	{r4, pc}
 80010be:	b672      	cpsid	i
 80010c0:	3002      	adds	r0, #2
 80010c2:	f7ff ff95 	bl	8000ff0 <chSysIntegrityCheckI>
 80010c6:	b662      	cpsie	i
 80010c8:	4060      	eors	r0, r4
 80010ca:	b2c1      	uxtb	r1, r0
 80010cc:	2002      	movs	r0, #2
 80010ce:	f7ff fba7 	bl	8000820 <_test_assert>
 80010d2:	2800      	cmp	r0, #0
 80010d4:	d1f2      	bne.n	80010bc <sys3_execute+0x1c>
 80010d6:	b672      	cpsid	i
 80010d8:	3004      	adds	r0, #4
 80010da:	f7ff ff89 	bl	8000ff0 <chSysIntegrityCheckI>
 80010de:	b662      	cpsie	i
 80010e0:	4060      	eors	r0, r4
 80010e2:	b2c1      	uxtb	r1, r0
 80010e4:	2003      	movs	r0, #3
 80010e6:	f7ff fb9b 	bl	8000820 <_test_assert>
 80010ea:	2800      	cmp	r0, #0
 80010ec:	d1e6      	bne.n	80010bc <sys3_execute+0x1c>
 80010ee:	b672      	cpsid	i
 80010f0:	3008      	adds	r0, #8
 80010f2:	f7ff ff7d 	bl	8000ff0 <chSysIntegrityCheckI>
 80010f6:	b662      	cpsie	i
 80010f8:	4044      	eors	r4, r0
 80010fa:	b2e1      	uxtb	r1, r4
 80010fc:	2004      	movs	r0, #4
 80010fe:	f7ff fb8f 	bl	8000820 <_test_assert>
 8001102:	e7db      	b.n	80010bc <sys3_execute+0x1c>
	...

08001110 <BusFault_Handler>:
 8001110:	b672      	cpsid	i
 8001112:	4b02      	ldr	r3, [pc, #8]	; (800111c <BusFault_Handler+0xc>)
 8001114:	4a02      	ldr	r2, [pc, #8]	; (8001120 <BusFault_Handler+0x10>)
 8001116:	62da      	str	r2, [r3, #44]	; 0x2c
 8001118:	e7fe      	b.n	8001118 <BusFault_Handler+0x8>
 800111a:	46c0      	nop			; (mov r8, r8)
 800111c:	20000738 	.word	0x20000738
 8001120:	08005710 	.word	0x08005710
	...

08001130 <bmk13_execute>:
 8001130:	b510      	push	{r4, lr}
 8001132:	482e      	ldr	r0, [pc, #184]	; (80011ec <bmk13_execute+0xbc>)
 8001134:	f7ff fbe4 	bl	8000900 <test_print>
 8001138:	20a8      	movs	r0, #168	; 0xa8
 800113a:	0040      	lsls	r0, r0, #1
 800113c:	f7ff fab8 	bl	80006b0 <test_printn.part.1>
 8001140:	4c2b      	ldr	r4, [pc, #172]	; (80011f0 <bmk13_execute+0xc0>)
 8001142:	0020      	movs	r0, r4
 8001144:	f7ff fbbc 	bl	80008c0 <test_println>
 8001148:	482a      	ldr	r0, [pc, #168]	; (80011f4 <bmk13_execute+0xc4>)
 800114a:	f7ff fbd9 	bl	8000900 <test_print>
 800114e:	2044      	movs	r0, #68	; 0x44
 8001150:	f7ff faae 	bl	80006b0 <test_printn.part.1>
 8001154:	0020      	movs	r0, r4
 8001156:	f7ff fbb3 	bl	80008c0 <test_println>
 800115a:	4827      	ldr	r0, [pc, #156]	; (80011f8 <bmk13_execute+0xc8>)
 800115c:	f7ff fbd0 	bl	8000900 <test_print>
 8001160:	2014      	movs	r0, #20
 8001162:	f7ff faa5 	bl	80006b0 <test_printn.part.1>
 8001166:	0020      	movs	r0, r4
 8001168:	f7ff fbaa 	bl	80008c0 <test_println>
 800116c:	4823      	ldr	r0, [pc, #140]	; (80011fc <bmk13_execute+0xcc>)
 800116e:	f7ff fbc7 	bl	8000900 <test_print>
 8001172:	200c      	movs	r0, #12
 8001174:	f7ff fa9c 	bl	80006b0 <test_printn.part.1>
 8001178:	0020      	movs	r0, r4
 800117a:	f7ff fba1 	bl	80008c0 <test_println>
 800117e:	4820      	ldr	r0, [pc, #128]	; (8001200 <bmk13_execute+0xd0>)
 8001180:	f7ff fbbe 	bl	8000900 <test_print>
 8001184:	2004      	movs	r0, #4
 8001186:	f7ff fa93 	bl	80006b0 <test_printn.part.1>
 800118a:	0020      	movs	r0, r4
 800118c:	f7ff fb98 	bl	80008c0 <test_println>
 8001190:	481c      	ldr	r0, [pc, #112]	; (8001204 <bmk13_execute+0xd4>)
 8001192:	f7ff fbb5 	bl	8000900 <test_print>
 8001196:	2014      	movs	r0, #20
 8001198:	f7ff fa8a 	bl	80006b0 <test_printn.part.1>
 800119c:	0020      	movs	r0, r4
 800119e:	f7ff fb8f 	bl	80008c0 <test_println>
 80011a2:	4819      	ldr	r0, [pc, #100]	; (8001208 <bmk13_execute+0xd8>)
 80011a4:	f7ff fbac 	bl	8000900 <test_print>
 80011a8:	2010      	movs	r0, #16
 80011aa:	f7ff fa81 	bl	80006b0 <test_printn.part.1>
 80011ae:	0020      	movs	r0, r4
 80011b0:	f7ff fb86 	bl	80008c0 <test_println>
 80011b4:	4815      	ldr	r0, [pc, #84]	; (800120c <bmk13_execute+0xdc>)
 80011b6:	f7ff fba3 	bl	8000900 <test_print>
 80011ba:	2008      	movs	r0, #8
 80011bc:	f7ff fa78 	bl	80006b0 <test_printn.part.1>
 80011c0:	0020      	movs	r0, r4
 80011c2:	f7ff fb7d 	bl	80008c0 <test_println>
 80011c6:	4812      	ldr	r0, [pc, #72]	; (8001210 <bmk13_execute+0xe0>)
 80011c8:	f7ff fb9a 	bl	8000900 <test_print>
 80011cc:	2024      	movs	r0, #36	; 0x24
 80011ce:	f7ff fa6f 	bl	80006b0 <test_printn.part.1>
 80011d2:	0020      	movs	r0, r4
 80011d4:	f7ff fb74 	bl	80008c0 <test_println>
 80011d8:	480e      	ldr	r0, [pc, #56]	; (8001214 <bmk13_execute+0xe4>)
 80011da:	f7ff fb91 	bl	8000900 <test_print>
 80011de:	2028      	movs	r0, #40	; 0x28
 80011e0:	f7ff fa66 	bl	80006b0 <test_printn.part.1>
 80011e4:	0020      	movs	r0, r4
 80011e6:	f7ff fb6b 	bl	80008c0 <test_println>
 80011ea:	bd10      	pop	{r4, pc}
 80011ec:	08005770 	.word	0x08005770
 80011f0:	08005780 	.word	0x08005780
 80011f4:	08005788 	.word	0x08005788
 80011f8:	08005798 	.word	0x08005798
 80011fc:	080057a8 	.word	0x080057a8
 8001200:	080057b8 	.word	0x080057b8
 8001204:	080057c8 	.word	0x080057c8
 8001208:	080057d8 	.word	0x080057d8
 800120c:	080057e8 	.word	0x080057e8
 8001210:	080057f8 	.word	0x080057f8
 8001214:	08005808 	.word	0x08005808
	...

08001220 <VectorAC>:
 8001220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001222:	4647      	mov	r7, r8
 8001224:	46ce      	mov	lr, r9
 8001226:	4d3f      	ldr	r5, [pc, #252]	; (8001324 <VectorAC+0x104>)
 8001228:	b580      	push	{r7, lr}
 800122a:	6f6e      	ldr	r6, [r5, #116]	; 0x74
 800122c:	46f0      	mov	r8, lr
 800122e:	6837      	ldr	r7, [r6, #0]
 8001230:	69f4      	ldr	r4, [r6, #28]
 8001232:	6234      	str	r4, [r6, #32]
 8001234:	0723      	lsls	r3, r4, #28
 8001236:	d11c      	bne.n	8001272 <VectorAC+0x52>
 8001238:	05e3      	lsls	r3, r4, #23
 800123a:	d431      	bmi.n	80012a0 <VectorAC+0x80>
 800123c:	06a3      	lsls	r3, r4, #26
 800123e:	d438      	bmi.n	80012b2 <VectorAC+0x92>
 8001240:	2380      	movs	r3, #128	; 0x80
 8001242:	423b      	tst	r3, r7
 8001244:	d001      	beq.n	800124a <VectorAC+0x2a>
 8001246:	4223      	tst	r3, r4
 8001248:	d143      	bne.n	80012d2 <VectorAC+0xb2>
 800124a:	0663      	lsls	r3, r4, #25
 800124c:	d508      	bpl.n	8001260 <VectorAC+0x40>
 800124e:	b672      	cpsid	i
 8001250:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8001252:	6caa      	ldr	r2, [r5, #72]	; 0x48
 8001254:	4293      	cmp	r3, r2
 8001256:	d047      	beq.n	80012e8 <VectorAC+0xc8>
 8001258:	2340      	movs	r3, #64	; 0x40
 800125a:	439f      	bics	r7, r3
 800125c:	6037      	str	r7, [r6, #0]
 800125e:	b662      	cpsie	i
 8001260:	4643      	mov	r3, r8
 8001262:	330f      	adds	r3, #15
 8001264:	d001      	beq.n	800126a <VectorAC+0x4a>
 8001266:	f7ff fb63 	bl	8000930 <_port_irq_epilogue.part.0>
 800126a:	bc0c      	pop	{r2, r3}
 800126c:	4690      	mov	r8, r2
 800126e:	4699      	mov	r9, r3
 8001270:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001272:	0721      	lsls	r1, r4, #28
 8001274:	0fc9      	lsrs	r1, r1, #31
 8001276:	01c9      	lsls	r1, r1, #7
 8001278:	07e3      	lsls	r3, r4, #31
 800127a:	d501      	bpl.n	8001280 <VectorAC+0x60>
 800127c:	2320      	movs	r3, #32
 800127e:	4319      	orrs	r1, r3
 8001280:	07a3      	lsls	r3, r4, #30
 8001282:	d501      	bpl.n	8001288 <VectorAC+0x68>
 8001284:	2340      	movs	r3, #64	; 0x40
 8001286:	4319      	orrs	r1, r3
 8001288:	0763      	lsls	r3, r4, #29
 800128a:	d502      	bpl.n	8001292 <VectorAC+0x72>
 800128c:	2380      	movs	r3, #128	; 0x80
 800128e:	005b      	lsls	r3, r3, #1
 8001290:	4319      	orrs	r1, r3
 8001292:	b672      	cpsid	i
 8001294:	1d28      	adds	r0, r5, #4
 8001296:	f7ff fd33 	bl	8000d00 <chEvtBroadcastFlagsI>
 800129a:	b662      	cpsie	i
 800129c:	05e3      	lsls	r3, r4, #23
 800129e:	d5cd      	bpl.n	800123c <VectorAC+0x1c>
 80012a0:	b672      	cpsid	i
 80012a2:	2180      	movs	r1, #128	; 0x80
 80012a4:	1d28      	adds	r0, r5, #4
 80012a6:	0089      	lsls	r1, r1, #2
 80012a8:	f7ff fd2a 	bl	8000d00 <chEvtBroadcastFlagsI>
 80012ac:	b662      	cpsie	i
 80012ae:	06a3      	lsls	r3, r4, #26
 80012b0:	d5c6      	bpl.n	8001240 <VectorAC+0x20>
 80012b2:	b672      	cpsid	i
 80012b4:	8cb3      	ldrh	r3, [r6, #36]	; 0x24
 80012b6:	b2db      	uxtb	r3, r3
 80012b8:	4699      	mov	r9, r3
 80012ba:	696b      	ldr	r3, [r5, #20]
 80012bc:	2b00      	cmp	r3, #0
 80012be:	d01b      	beq.n	80012f8 <VectorAC+0xd8>
 80012c0:	0028      	movs	r0, r5
 80012c2:	4649      	mov	r1, r9
 80012c4:	300c      	adds	r0, #12
 80012c6:	f7ff fcab 	bl	8000c20 <chIQPutI>
 80012ca:	2800      	cmp	r0, #0
 80012cc:	db19      	blt.n	8001302 <VectorAC+0xe2>
 80012ce:	b662      	cpsie	i
 80012d0:	e7b6      	b.n	8001240 <VectorAC+0x20>
 80012d2:	b672      	cpsid	i
 80012d4:	0028      	movs	r0, r5
 80012d6:	3030      	adds	r0, #48	; 0x30
 80012d8:	f7ff fcca 	bl	8000c70 <chOQGetI>
 80012dc:	2800      	cmp	r0, #0
 80012de:	db15      	blt.n	800130c <VectorAC+0xec>
 80012e0:	b280      	uxth	r0, r0
 80012e2:	8530      	strh	r0, [r6, #40]	; 0x28
 80012e4:	b662      	cpsie	i
 80012e6:	e7b0      	b.n	800124a <VectorAC+0x2a>
 80012e8:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80012ea:	2b00      	cmp	r3, #0
 80012ec:	d0b4      	beq.n	8001258 <VectorAC+0x38>
 80012ee:	1d28      	adds	r0, r5, #4
 80012f0:	2110      	movs	r1, #16
 80012f2:	f7ff fd05 	bl	8000d00 <chEvtBroadcastFlagsI>
 80012f6:	e7af      	b.n	8001258 <VectorAC+0x38>
 80012f8:	1d28      	adds	r0, r5, #4
 80012fa:	2104      	movs	r1, #4
 80012fc:	f7ff fd00 	bl	8000d00 <chEvtBroadcastFlagsI>
 8001300:	e7de      	b.n	80012c0 <VectorAC+0xa0>
 8001302:	1d28      	adds	r0, r5, #4
 8001304:	2180      	movs	r1, #128	; 0x80
 8001306:	f7ff fcfb 	bl	8000d00 <chEvtBroadcastFlagsI>
 800130a:	e7e0      	b.n	80012ce <VectorAC+0xae>
 800130c:	1d28      	adds	r0, r5, #4
 800130e:	2108      	movs	r1, #8
 8001310:	f7ff fcf6 	bl	8000d00 <chEvtBroadcastFlagsI>
 8001314:	23c0      	movs	r3, #192	; 0xc0
 8001316:	003a      	movs	r2, r7
 8001318:	439a      	bics	r2, r3
 800131a:	0013      	movs	r3, r2
 800131c:	2240      	movs	r2, #64	; 0x40
 800131e:	4313      	orrs	r3, r2
 8001320:	6033      	str	r3, [r6, #0]
 8001322:	e7df      	b.n	80012e4 <VectorAC+0xc4>
 8001324:	200006b8 	.word	0x200006b8
	...

08001330 <Vector7C>:
 8001330:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001332:	2580      	movs	r5, #128	; 0x80
 8001334:	46ce      	mov	lr, r9
 8001336:	4647      	mov	r7, r8
 8001338:	05ed      	lsls	r5, r5, #23
 800133a:	692b      	ldr	r3, [r5, #16]
 800133c:	b580      	push	{r7, lr}
 800133e:	46f0      	mov	r8, lr
 8001340:	079b      	lsls	r3, r3, #30
 8001342:	d408      	bmi.n	8001356 <Vector7C+0x26>
 8001344:	4643      	mov	r3, r8
 8001346:	330f      	adds	r3, #15
 8001348:	d001      	beq.n	800134e <Vector7C+0x1e>
 800134a:	f7ff faf1 	bl	8000930 <_port_irq_epilogue.part.0>
 800134e:	bc0c      	pop	{r2, r3}
 8001350:	4690      	mov	r8, r2
 8001352:	4699      	mov	r9, r3
 8001354:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001356:	2300      	movs	r3, #0
 8001358:	612b      	str	r3, [r5, #16]
 800135a:	b672      	cpsid	i
 800135c:	4c19      	ldr	r4, [pc, #100]	; (80013c4 <Vector7C+0x94>)
 800135e:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8001360:	69e3      	ldr	r3, [r4, #28]
 8001362:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8001364:	6899      	ldr	r1, [r3, #8]
 8001366:	1a86      	subs	r6, r0, r2
 8001368:	428e      	cmp	r6, r1
 800136a:	d31c      	bcc.n	80013a6 <Vector7C+0x76>
 800136c:	0026      	movs	r6, r4
 800136e:	2700      	movs	r7, #0
 8001370:	361c      	adds	r6, #28
 8001372:	46a9      	mov	r9, r5
 8001374:	e00b      	b.n	800138e <Vector7C+0x5e>
 8001376:	b662      	cpsie	i
 8001378:	6918      	ldr	r0, [r3, #16]
 800137a:	4788      	blx	r1
 800137c:	b672      	cpsid	i
 800137e:	464a      	mov	r2, r9
 8001380:	69e3      	ldr	r3, [r4, #28]
 8001382:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8001384:	6899      	ldr	r1, [r3, #8]
 8001386:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8001388:	1a85      	subs	r5, r0, r2
 800138a:	42a9      	cmp	r1, r5
 800138c:	d80b      	bhi.n	80013a6 <Vector7C+0x76>
 800138e:	1852      	adds	r2, r2, r1
 8001390:	62a2      	str	r2, [r4, #40]	; 0x28
 8001392:	681a      	ldr	r2, [r3, #0]
 8001394:	68d9      	ldr	r1, [r3, #12]
 8001396:	6056      	str	r6, [r2, #4]
 8001398:	61e2      	str	r2, [r4, #28]
 800139a:	60df      	str	r7, [r3, #12]
 800139c:	42b2      	cmp	r2, r6
 800139e:	d1ea      	bne.n	8001376 <Vector7C+0x46>
 80013a0:	464a      	mov	r2, r9
 80013a2:	60d7      	str	r7, [r2, #12]
 80013a4:	e7e7      	b.n	8001376 <Vector7C+0x46>
 80013a6:	4c08      	ldr	r4, [pc, #32]	; (80013c8 <Vector7C+0x98>)
 80013a8:	42a3      	cmp	r3, r4
 80013aa:	d007      	beq.n	80013bc <Vector7C+0x8c>
 80013ac:	188a      	adds	r2, r1, r2
 80013ae:	1a12      	subs	r2, r2, r0
 80013b0:	2a02      	cmp	r2, #2
 80013b2:	d305      	bcc.n	80013c0 <Vector7C+0x90>
 80013b4:	2380      	movs	r3, #128	; 0x80
 80013b6:	1812      	adds	r2, r2, r0
 80013b8:	05db      	lsls	r3, r3, #23
 80013ba:	635a      	str	r2, [r3, #52]	; 0x34
 80013bc:	b662      	cpsie	i
 80013be:	e7c1      	b.n	8001344 <Vector7C+0x14>
 80013c0:	2202      	movs	r2, #2
 80013c2:	e7f7      	b.n	80013b4 <Vector7C+0x84>
 80013c4:	20000738 	.word	0x20000738
 80013c8:	20000754 	.word	0x20000754
 80013cc:	00000000 	.word	0x00000000

080013d0 <chThdYield>:
 80013d0:	b510      	push	{r4, lr}
 80013d2:	b672      	cpsid	i
 80013d4:	4c0e      	ldr	r4, [pc, #56]	; (8001410 <chThdYield+0x40>)
 80013d6:	6820      	ldr	r0, [r4, #0]
 80013d8:	69a1      	ldr	r1, [r4, #24]
 80013da:	6883      	ldr	r3, [r0, #8]
 80013dc:	688a      	ldr	r2, [r1, #8]
 80013de:	4293      	cmp	r3, r2
 80013e0:	d201      	bcs.n	80013e6 <chThdYield+0x16>
 80013e2:	b662      	cpsie	i
 80013e4:	bd10      	pop	{r4, pc}
 80013e6:	6803      	ldr	r3, [r0, #0]
 80013e8:	605c      	str	r4, [r3, #4]
 80013ea:	6023      	str	r3, [r4, #0]
 80013ec:	61a0      	str	r0, [r4, #24]
 80013ee:	2401      	movs	r4, #1
 80013f0:	7704      	strb	r4, [r0, #28]
 80013f2:	2400      	movs	r4, #0
 80013f4:	770c      	strb	r4, [r1, #28]
 80013f6:	e000      	b.n	80013fa <chThdYield+0x2a>
 80013f8:	681b      	ldr	r3, [r3, #0]
 80013fa:	689c      	ldr	r4, [r3, #8]
 80013fc:	42a2      	cmp	r2, r4
 80013fe:	d9fb      	bls.n	80013f8 <chThdYield+0x28>
 8001400:	685a      	ldr	r2, [r3, #4]
 8001402:	600b      	str	r3, [r1, #0]
 8001404:	604a      	str	r2, [r1, #4]
 8001406:	6011      	str	r1, [r2, #0]
 8001408:	6059      	str	r1, [r3, #4]
 800140a:	f7fe feb9 	bl	8000180 <_port_switch>
 800140e:	e7e8      	b.n	80013e2 <chThdYield+0x12>
 8001410:	20000738 	.word	0x20000738
	...

08001420 <thread8>:
 8001420:	b570      	push	{r4, r5, r6, lr}
 8001422:	0004      	movs	r4, r0
 8001424:	2504      	movs	r5, #4
 8001426:	4e08      	ldr	r6, [pc, #32]	; (8001448 <thread8+0x28>)
 8001428:	f7ff ffd2 	bl	80013d0 <chThdYield>
 800142c:	f7ff ffd0 	bl	80013d0 <chThdYield>
 8001430:	f7ff ffce 	bl	80013d0 <chThdYield>
 8001434:	f7ff ffcc 	bl	80013d0 <chThdYield>
 8001438:	6823      	ldr	r3, [r4, #0]
 800143a:	3304      	adds	r3, #4
 800143c:	6023      	str	r3, [r4, #0]
 800143e:	69b3      	ldr	r3, [r6, #24]
 8001440:	7f5b      	ldrb	r3, [r3, #29]
 8001442:	421d      	tst	r5, r3
 8001444:	d0f0      	beq.n	8001428 <thread8+0x8>
 8001446:	bd70      	pop	{r4, r5, r6, pc}
 8001448:	20000738 	.word	0x20000738
 800144c:	00000000 	.word	0x00000000

08001450 <chSchDoRescheduleAhead>:
 8001450:	b510      	push	{r4, lr}
 8001452:	2401      	movs	r4, #1
 8001454:	4a0b      	ldr	r2, [pc, #44]	; (8001484 <chSchDoRescheduleAhead+0x34>)
 8001456:	6810      	ldr	r0, [r2, #0]
 8001458:	6991      	ldr	r1, [r2, #24]
 800145a:	6803      	ldr	r3, [r0, #0]
 800145c:	605a      	str	r2, [r3, #4]
 800145e:	6013      	str	r3, [r2, #0]
 8001460:	6190      	str	r0, [r2, #24]
 8001462:	688a      	ldr	r2, [r1, #8]
 8001464:	7704      	strb	r4, [r0, #28]
 8001466:	2400      	movs	r4, #0
 8001468:	770c      	strb	r4, [r1, #28]
 800146a:	e000      	b.n	800146e <chSchDoRescheduleAhead+0x1e>
 800146c:	681b      	ldr	r3, [r3, #0]
 800146e:	689c      	ldr	r4, [r3, #8]
 8001470:	42a2      	cmp	r2, r4
 8001472:	d3fb      	bcc.n	800146c <chSchDoRescheduleAhead+0x1c>
 8001474:	685a      	ldr	r2, [r3, #4]
 8001476:	600b      	str	r3, [r1, #0]
 8001478:	604a      	str	r2, [r1, #4]
 800147a:	6011      	str	r1, [r2, #0]
 800147c:	6059      	str	r1, [r3, #4]
 800147e:	f7fe fe7f 	bl	8000180 <_port_switch>
 8001482:	bd10      	pop	{r4, pc}
 8001484:	20000738 	.word	0x20000738
	...

08001490 <chSchRescheduleS>:
 8001490:	4b05      	ldr	r3, [pc, #20]	; (80014a8 <chSchRescheduleS+0x18>)
 8001492:	b510      	push	{r4, lr}
 8001494:	681a      	ldr	r2, [r3, #0]
 8001496:	699b      	ldr	r3, [r3, #24]
 8001498:	6892      	ldr	r2, [r2, #8]
 800149a:	689b      	ldr	r3, [r3, #8]
 800149c:	429a      	cmp	r2, r3
 800149e:	d901      	bls.n	80014a4 <chSchRescheduleS+0x14>
 80014a0:	f7ff ffd6 	bl	8001450 <chSchDoRescheduleAhead>
 80014a4:	bd10      	pop	{r4, pc}
 80014a6:	46c0      	nop			; (mov r8, r8)
 80014a8:	20000738 	.word	0x20000738
 80014ac:	00000000 	.word	0x00000000

080014b0 <thread4.lto_priv.72>:
 80014b0:	b510      	push	{r4, lr}
 80014b2:	b672      	cpsid	i
 80014b4:	6883      	ldr	r3, [r0, #8]
 80014b6:	2b00      	cmp	r3, #0
 80014b8:	dd03      	ble.n	80014c2 <thread4.lto_priv.72+0x12>
 80014ba:	f7ff ffe9 	bl	8001490 <chSchRescheduleS>
 80014be:	b662      	cpsie	i
 80014c0:	bd10      	pop	{r4, pc}
 80014c2:	f7ff fc5d 	bl	8000d80 <chSemSignalI>
 80014c6:	e7f8      	b.n	80014ba <thread4.lto_priv.72+0xa>
	...

080014d0 <chMtxUnlockAll>:
 80014d0:	4b11      	ldr	r3, [pc, #68]	; (8001518 <chMtxUnlockAll+0x48>)
 80014d2:	b570      	push	{r4, r5, r6, lr}
 80014d4:	699c      	ldr	r4, [r3, #24]
 80014d6:	b672      	cpsid	i
 80014d8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80014da:	2b00      	cmp	r3, #0
 80014dc:	d019      	beq.n	8001512 <chMtxUnlockAll+0x42>
 80014de:	2500      	movs	r5, #0
 80014e0:	e00b      	b.n	80014fa <chMtxUnlockAll+0x2a>
 80014e2:	6802      	ldr	r2, [r0, #0]
 80014e4:	601a      	str	r2, [r3, #0]
 80014e6:	6053      	str	r3, [r2, #4]
 80014e8:	6b82      	ldr	r2, [r0, #56]	; 0x38
 80014ea:	6098      	str	r0, [r3, #8]
 80014ec:	60da      	str	r2, [r3, #12]
 80014ee:	6383      	str	r3, [r0, #56]	; 0x38
 80014f0:	f7ff fb76 	bl	8000be0 <chSchReadyI>
 80014f4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80014f6:	2b00      	cmp	r3, #0
 80014f8:	d007      	beq.n	800150a <chMtxUnlockAll+0x3a>
 80014fa:	68da      	ldr	r2, [r3, #12]
 80014fc:	6818      	ldr	r0, [r3, #0]
 80014fe:	63a2      	str	r2, [r4, #56]	; 0x38
 8001500:	4283      	cmp	r3, r0
 8001502:	d1ee      	bne.n	80014e2 <chMtxUnlockAll+0x12>
 8001504:	609d      	str	r5, [r3, #8]
 8001506:	1e13      	subs	r3, r2, #0
 8001508:	d1f7      	bne.n	80014fa <chMtxUnlockAll+0x2a>
 800150a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800150c:	60a3      	str	r3, [r4, #8]
 800150e:	f7ff ffbf 	bl	8001490 <chSchRescheduleS>
 8001512:	b662      	cpsie	i
 8001514:	bd70      	pop	{r4, r5, r6, pc}
 8001516:	46c0      	nop			; (mov r8, r8)
 8001518:	20000738 	.word	0x20000738
 800151c:	00000000 	.word	0x00000000

08001520 <chThdSetPriority>:
 8001520:	b510      	push	{r4, lr}
 8001522:	b672      	cpsid	i
 8001524:	4b07      	ldr	r3, [pc, #28]	; (8001544 <chThdSetPriority+0x24>)
 8001526:	699b      	ldr	r3, [r3, #24]
 8001528:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800152a:	689a      	ldr	r2, [r3, #8]
 800152c:	42a2      	cmp	r2, r4
 800152e:	d001      	beq.n	8001534 <chThdSetPriority+0x14>
 8001530:	4282      	cmp	r2, r0
 8001532:	d200      	bcs.n	8001536 <chThdSetPriority+0x16>
 8001534:	6098      	str	r0, [r3, #8]
 8001536:	63d8      	str	r0, [r3, #60]	; 0x3c
 8001538:	f7ff ffaa 	bl	8001490 <chSchRescheduleS>
 800153c:	b662      	cpsie	i
 800153e:	0020      	movs	r0, r4
 8001540:	bd10      	pop	{r4, pc}
 8001542:	46c0      	nop			; (mov r8, r8)
 8001544:	20000738 	.word	0x20000738
	...

08001550 <thd3_execute>:
 8001550:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001552:	4e49      	ldr	r6, [pc, #292]	; (8001678 <thd3_execute+0x128>)
 8001554:	69b3      	ldr	r3, [r6, #24]
 8001556:	689c      	ldr	r4, [r3, #8]
 8001558:	1c65      	adds	r5, r4, #1
 800155a:	0028      	movs	r0, r5
 800155c:	f7ff ffe0 	bl	8001520 <chThdSetPriority>
 8001560:	1b01      	subs	r1, r0, r4
 8001562:	424b      	negs	r3, r1
 8001564:	4159      	adcs	r1, r3
 8001566:	0007      	movs	r7, r0
 8001568:	b2c9      	uxtb	r1, r1
 800156a:	2001      	movs	r0, #1
 800156c:	f7ff f958 	bl	8000820 <_test_assert>
 8001570:	2800      	cmp	r0, #0
 8001572:	d000      	beq.n	8001576 <thd3_execute+0x26>
 8001574:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001576:	69b3      	ldr	r3, [r6, #24]
 8001578:	3002      	adds	r0, #2
 800157a:	6899      	ldr	r1, [r3, #8]
 800157c:	1b49      	subs	r1, r1, r5
 800157e:	424b      	negs	r3, r1
 8001580:	4159      	adcs	r1, r3
 8001582:	b2c9      	uxtb	r1, r1
 8001584:	f7ff f94c 	bl	8000820 <_test_assert>
 8001588:	2800      	cmp	r0, #0
 800158a:	d1f3      	bne.n	8001574 <thd3_execute+0x24>
 800158c:	0038      	movs	r0, r7
 800158e:	f7ff ffc7 	bl	8001520 <chThdSetPriority>
 8001592:	1a28      	subs	r0, r5, r0
 8001594:	4241      	negs	r1, r0
 8001596:	4141      	adcs	r1, r0
 8001598:	2003      	movs	r0, #3
 800159a:	b2c9      	uxtb	r1, r1
 800159c:	f7ff f940 	bl	8000820 <_test_assert>
 80015a0:	2800      	cmp	r0, #0
 80015a2:	d1e7      	bne.n	8001574 <thd3_execute+0x24>
 80015a4:	69b3      	ldr	r3, [r6, #24]
 80015a6:	3004      	adds	r0, #4
 80015a8:	6899      	ldr	r1, [r3, #8]
 80015aa:	1b09      	subs	r1, r1, r4
 80015ac:	424b      	negs	r3, r1
 80015ae:	4159      	adcs	r1, r3
 80015b0:	b2c9      	uxtb	r1, r1
 80015b2:	f7ff f935 	bl	8000820 <_test_assert>
 80015b6:	2800      	cmp	r0, #0
 80015b8:	d1dc      	bne.n	8001574 <thd3_execute+0x24>
 80015ba:	b672      	cpsid	i
 80015bc:	69b2      	ldr	r2, [r6, #24]
 80015be:	6893      	ldr	r3, [r2, #8]
 80015c0:	3302      	adds	r3, #2
 80015c2:	6093      	str	r3, [r2, #8]
 80015c4:	b662      	cpsie	i
 80015c6:	69b3      	ldr	r3, [r6, #24]
 80015c8:	1ca7      	adds	r7, r4, #2
 80015ca:	6899      	ldr	r1, [r3, #8]
 80015cc:	3005      	adds	r0, #5
 80015ce:	1bc9      	subs	r1, r1, r7
 80015d0:	424b      	negs	r3, r1
 80015d2:	4159      	adcs	r1, r3
 80015d4:	b2c9      	uxtb	r1, r1
 80015d6:	f7ff f923 	bl	8000820 <_test_assert>
 80015da:	2800      	cmp	r0, #0
 80015dc:	d1ca      	bne.n	8001574 <thd3_execute+0x24>
 80015de:	0028      	movs	r0, r5
 80015e0:	f7ff ff9e 	bl	8001520 <chThdSetPriority>
 80015e4:	1b00      	subs	r0, r0, r4
 80015e6:	4241      	negs	r1, r0
 80015e8:	4141      	adcs	r1, r0
 80015ea:	2006      	movs	r0, #6
 80015ec:	b2c9      	uxtb	r1, r1
 80015ee:	f7ff f917 	bl	8000820 <_test_assert>
 80015f2:	2800      	cmp	r0, #0
 80015f4:	d1be      	bne.n	8001574 <thd3_execute+0x24>
 80015f6:	69b3      	ldr	r3, [r6, #24]
 80015f8:	3007      	adds	r0, #7
 80015fa:	6899      	ldr	r1, [r3, #8]
 80015fc:	1bc9      	subs	r1, r1, r7
 80015fe:	424f      	negs	r7, r1
 8001600:	4179      	adcs	r1, r7
 8001602:	b2c9      	uxtb	r1, r1
 8001604:	f7ff f90c 	bl	8000820 <_test_assert>
 8001608:	2800      	cmp	r0, #0
 800160a:	d1b3      	bne.n	8001574 <thd3_execute+0x24>
 800160c:	69b3      	ldr	r3, [r6, #24]
 800160e:	3008      	adds	r0, #8
 8001610:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001612:	1b49      	subs	r1, r1, r5
 8001614:	424b      	negs	r3, r1
 8001616:	4159      	adcs	r1, r3
 8001618:	b2c9      	uxtb	r1, r1
 800161a:	f7ff f901 	bl	8000820 <_test_assert>
 800161e:	2800      	cmp	r0, #0
 8001620:	d1a8      	bne.n	8001574 <thd3_execute+0x24>
 8001622:	1ce7      	adds	r7, r4, #3
 8001624:	0038      	movs	r0, r7
 8001626:	f7ff ff7b 	bl	8001520 <chThdSetPriority>
 800162a:	1a29      	subs	r1, r5, r0
 800162c:	424d      	negs	r5, r1
 800162e:	4169      	adcs	r1, r5
 8001630:	2009      	movs	r0, #9
 8001632:	b2c9      	uxtb	r1, r1
 8001634:	f7ff f8f4 	bl	8000820 <_test_assert>
 8001638:	2800      	cmp	r0, #0
 800163a:	d19b      	bne.n	8001574 <thd3_execute+0x24>
 800163c:	69b3      	ldr	r3, [r6, #24]
 800163e:	300a      	adds	r0, #10
 8001640:	6899      	ldr	r1, [r3, #8]
 8001642:	1bc9      	subs	r1, r1, r7
 8001644:	424b      	negs	r3, r1
 8001646:	4159      	adcs	r1, r3
 8001648:	b2c9      	uxtb	r1, r1
 800164a:	f7ff f8e9 	bl	8000820 <_test_assert>
 800164e:	2800      	cmp	r0, #0
 8001650:	d000      	beq.n	8001654 <thd3_execute+0x104>
 8001652:	e78f      	b.n	8001574 <thd3_execute+0x24>
 8001654:	69b3      	ldr	r3, [r6, #24]
 8001656:	300b      	adds	r0, #11
 8001658:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800165a:	1bc9      	subs	r1, r1, r7
 800165c:	424b      	negs	r3, r1
 800165e:	4159      	adcs	r1, r3
 8001660:	b2c9      	uxtb	r1, r1
 8001662:	f7ff f8dd 	bl	8000820 <_test_assert>
 8001666:	2800      	cmp	r0, #0
 8001668:	d000      	beq.n	800166c <thd3_execute+0x11c>
 800166a:	e783      	b.n	8001574 <thd3_execute+0x24>
 800166c:	b672      	cpsid	i
 800166e:	69b3      	ldr	r3, [r6, #24]
 8001670:	609c      	str	r4, [r3, #8]
 8001672:	63dc      	str	r4, [r3, #60]	; 0x3c
 8001674:	b662      	cpsie	i
 8001676:	e77d      	b.n	8001574 <thd3_execute+0x24>
 8001678:	20000738 	.word	0x20000738
 800167c:	00000000 	.word	0x00000000

08001680 <chSysRestoreStatusX.part.3>:
 8001680:	b510      	push	{r4, lr}
 8001682:	f3ef 8305 	mrs	r3, IPSR
 8001686:	05db      	lsls	r3, r3, #23
 8001688:	d101      	bne.n	800168e <chSysRestoreStatusX.part.3+0xe>
 800168a:	f7ff ff01 	bl	8001490 <chSchRescheduleS>
 800168e:	b662      	cpsie	i
 8001690:	bd10      	pop	{r4, pc}
 8001692:	46c0      	nop			; (mov r8, r8)
	...

080016a0 <vtcb>:
 80016a0:	b510      	push	{r4, lr}
 80016a2:	b672      	cpsid	i
 80016a4:	b662      	cpsie	i
 80016a6:	b672      	cpsid	i
 80016a8:	f7ff fc9a 	bl	8000fe0 <chSysGetStatusAndLockX>
 80016ac:	07c3      	lsls	r3, r0, #31
 80016ae:	d401      	bmi.n	80016b4 <vtcb+0x14>
 80016b0:	f7ff ffe6 	bl	8001680 <chSysRestoreStatusX.part.3>
 80016b4:	b662      	cpsie	i
 80016b6:	bd10      	pop	{r4, pc}
	...

080016c0 <chSchWakeupS>:
 80016c0:	4b12      	ldr	r3, [pc, #72]	; (800170c <chSchWakeupS+0x4c>)
 80016c2:	6201      	str	r1, [r0, #32]
 80016c4:	6999      	ldr	r1, [r3, #24]
 80016c6:	b570      	push	{r4, r5, r6, lr}
 80016c8:	6882      	ldr	r2, [r0, #8]
 80016ca:	688c      	ldr	r4, [r1, #8]
 80016cc:	42a2      	cmp	r2, r4
 80016ce:	d80b      	bhi.n	80016e8 <chSchWakeupS+0x28>
 80016d0:	2100      	movs	r1, #0
 80016d2:	7701      	strb	r1, [r0, #28]
 80016d4:	681b      	ldr	r3, [r3, #0]
 80016d6:	6899      	ldr	r1, [r3, #8]
 80016d8:	428a      	cmp	r2, r1
 80016da:	d9fb      	bls.n	80016d4 <chSchWakeupS+0x14>
 80016dc:	685a      	ldr	r2, [r3, #4]
 80016de:	6003      	str	r3, [r0, #0]
 80016e0:	6042      	str	r2, [r0, #4]
 80016e2:	6010      	str	r0, [r2, #0]
 80016e4:	6058      	str	r0, [r3, #4]
 80016e6:	bd70      	pop	{r4, r5, r6, pc}
 80016e8:	2200      	movs	r2, #0
 80016ea:	770a      	strb	r2, [r1, #28]
 80016ec:	001a      	movs	r2, r3
 80016ee:	6812      	ldr	r2, [r2, #0]
 80016f0:	6895      	ldr	r5, [r2, #8]
 80016f2:	42ac      	cmp	r4, r5
 80016f4:	d9fb      	bls.n	80016ee <chSchWakeupS+0x2e>
 80016f6:	6854      	ldr	r4, [r2, #4]
 80016f8:	600a      	str	r2, [r1, #0]
 80016fa:	604c      	str	r4, [r1, #4]
 80016fc:	6021      	str	r1, [r4, #0]
 80016fe:	6051      	str	r1, [r2, #4]
 8001700:	6198      	str	r0, [r3, #24]
 8001702:	2301      	movs	r3, #1
 8001704:	7703      	strb	r3, [r0, #28]
 8001706:	f7fe fd3b 	bl	8000180 <_port_switch>
 800170a:	e7ec      	b.n	80016e6 <chSchWakeupS+0x26>
 800170c:	20000738 	.word	0x20000738

08001710 <chThdCreateFromMemoryPool.constprop.52>:
 8001710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001712:	4d18      	ldr	r5, [pc, #96]	; (8001774 <chThdCreateFromMemoryPool.constprop.52+0x64>)
 8001714:	0006      	movs	r6, r0
 8001716:	0028      	movs	r0, r5
 8001718:	000f      	movs	r7, r1
 800171a:	f7ff f939 	bl	8000990 <chPoolAlloc>
 800171e:	1e04      	subs	r4, r0, #0
 8001720:	d025      	beq.n	800176e <chThdCreateFromMemoryPool.constprop.52+0x5e>
 8001722:	b672      	cpsid	i
 8001724:	686b      	ldr	r3, [r5, #4]
 8001726:	4a14      	ldr	r2, [pc, #80]	; (8001778 <chThdCreateFromMemoryPool.constprop.52+0x68>)
 8001728:	3b24      	subs	r3, #36	; 0x24
 800172a:	18c3      	adds	r3, r0, r3
 800172c:	60c3      	str	r3, [r0, #12]
 800172e:	611a      	str	r2, [r3, #16]
 8001730:	4a12      	ldr	r2, [pc, #72]	; (800177c <chThdCreateFromMemoryPool.constprop.52+0x6c>)
 8001732:	615f      	str	r7, [r3, #20]
 8001734:	621a      	str	r2, [r3, #32]
 8001736:	2300      	movs	r3, #0
 8001738:	2101      	movs	r1, #1
 800173a:	2202      	movs	r2, #2
 800173c:	6383      	str	r3, [r0, #56]	; 0x38
 800173e:	6343      	str	r3, [r0, #52]	; 0x34
 8001740:	6183      	str	r3, [r0, #24]
 8001742:	4b0f      	ldr	r3, [pc, #60]	; (8001780 <chThdCreateFromMemoryPool.constprop.52+0x70>)
 8001744:	7781      	strb	r1, [r0, #30]
 8001746:	6103      	str	r3, [r0, #16]
 8001748:	6959      	ldr	r1, [r3, #20]
 800174a:	6086      	str	r6, [r0, #8]
 800174c:	6141      	str	r1, [r0, #20]
 800174e:	7702      	strb	r2, [r0, #28]
 8001750:	63c6      	str	r6, [r0, #60]	; 0x3c
 8001752:	6108      	str	r0, [r1, #16]
 8001754:	6158      	str	r0, [r3, #20]
 8001756:	0003      	movs	r3, r0
 8001758:	3324      	adds	r3, #36	; 0x24
 800175a:	6243      	str	r3, [r0, #36]	; 0x24
 800175c:	3304      	adds	r3, #4
 800175e:	6283      	str	r3, [r0, #40]	; 0x28
 8001760:	62c3      	str	r3, [r0, #44]	; 0x2c
 8001762:	7742      	strb	r2, [r0, #29]
 8001764:	6405      	str	r5, [r0, #64]	; 0x40
 8001766:	2100      	movs	r1, #0
 8001768:	f7ff ffaa 	bl	80016c0 <chSchWakeupS>
 800176c:	b662      	cpsie	i
 800176e:	0020      	movs	r0, r4
 8001770:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001772:	46c0      	nop			; (mov r8, r8)
 8001774:	20000910 	.word	0x20000910
 8001778:	080008b1 	.word	0x080008b1
 800177c:	080001a1 	.word	0x080001a1
 8001780:	20000738 	.word	0x20000738
	...

08001790 <chCondSignal.constprop.44>:
 8001790:	b510      	push	{r4, lr}
 8001792:	b672      	cpsid	i
 8001794:	4b05      	ldr	r3, [pc, #20]	; (80017ac <chCondSignal.constprop.44+0x1c>)
 8001796:	6818      	ldr	r0, [r3, #0]
 8001798:	4298      	cmp	r0, r3
 800179a:	d005      	beq.n	80017a8 <chCondSignal.constprop.44+0x18>
 800179c:	6802      	ldr	r2, [r0, #0]
 800179e:	2100      	movs	r1, #0
 80017a0:	601a      	str	r2, [r3, #0]
 80017a2:	6053      	str	r3, [r2, #4]
 80017a4:	f7ff ff8c 	bl	80016c0 <chSchWakeupS>
 80017a8:	b662      	cpsie	i
 80017aa:	bd10      	pop	{r4, pc}
 80017ac:	20000600 	.word	0x20000600

080017b0 <chMtxUnlock>:
 80017b0:	4b13      	ldr	r3, [pc, #76]	; (8001800 <chMtxUnlock+0x50>)
 80017b2:	b570      	push	{r4, r5, r6, lr}
 80017b4:	699d      	ldr	r5, [r3, #24]
 80017b6:	b672      	cpsid	i
 80017b8:	68c3      	ldr	r3, [r0, #12]
 80017ba:	6804      	ldr	r4, [r0, #0]
 80017bc:	63ab      	str	r3, [r5, #56]	; 0x38
 80017be:	4284      	cmp	r4, r0
 80017c0:	d01a      	beq.n	80017f8 <chMtxUnlock+0x48>
 80017c2:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 80017c4:	2b00      	cmp	r3, #0
 80017c6:	d009      	beq.n	80017dc <chMtxUnlock+0x2c>
 80017c8:	681a      	ldr	r2, [r3, #0]
 80017ca:	4293      	cmp	r3, r2
 80017cc:	d003      	beq.n	80017d6 <chMtxUnlock+0x26>
 80017ce:	6892      	ldr	r2, [r2, #8]
 80017d0:	4291      	cmp	r1, r2
 80017d2:	d200      	bcs.n	80017d6 <chMtxUnlock+0x26>
 80017d4:	0011      	movs	r1, r2
 80017d6:	68db      	ldr	r3, [r3, #12]
 80017d8:	2b00      	cmp	r3, #0
 80017da:	d1f5      	bne.n	80017c8 <chMtxUnlock+0x18>
 80017dc:	6823      	ldr	r3, [r4, #0]
 80017de:	60a9      	str	r1, [r5, #8]
 80017e0:	6003      	str	r3, [r0, #0]
 80017e2:	6058      	str	r0, [r3, #4]
 80017e4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80017e6:	6084      	str	r4, [r0, #8]
 80017e8:	60c3      	str	r3, [r0, #12]
 80017ea:	2100      	movs	r1, #0
 80017ec:	63a0      	str	r0, [r4, #56]	; 0x38
 80017ee:	0020      	movs	r0, r4
 80017f0:	f7ff ff66 	bl	80016c0 <chSchWakeupS>
 80017f4:	b662      	cpsie	i
 80017f6:	bd70      	pop	{r4, r5, r6, pc}
 80017f8:	2300      	movs	r3, #0
 80017fa:	60a3      	str	r3, [r4, #8]
 80017fc:	e7fa      	b.n	80017f4 <chMtxUnlock+0x44>
 80017fe:	46c0      	nop			; (mov r8, r8)
 8001800:	20000738 	.word	0x20000738
	...

08001810 <chSemSignal>:
 8001810:	b510      	push	{r4, lr}
 8001812:	b672      	cpsid	i
 8001814:	6883      	ldr	r3, [r0, #8]
 8001816:	3301      	adds	r3, #1
 8001818:	6083      	str	r3, [r0, #8]
 800181a:	2b00      	cmp	r3, #0
 800181c:	dd01      	ble.n	8001822 <chSemSignal+0x12>
 800181e:	b662      	cpsie	i
 8001820:	bd10      	pop	{r4, pc}
 8001822:	6803      	ldr	r3, [r0, #0]
 8001824:	2100      	movs	r1, #0
 8001826:	681a      	ldr	r2, [r3, #0]
 8001828:	6002      	str	r2, [r0, #0]
 800182a:	6050      	str	r0, [r2, #4]
 800182c:	0018      	movs	r0, r3
 800182e:	f7ff ff47 	bl	80016c0 <chSchWakeupS>
 8001832:	e7f4      	b.n	800181e <chSemSignal+0xe>
	...

08001840 <chThdCreateStatic>:
 8001840:	b510      	push	{r4, lr}
 8001842:	0004      	movs	r4, r0
 8001844:	b672      	cpsid	i
 8001846:	3924      	subs	r1, #36	; 0x24
 8001848:	1841      	adds	r1, r0, r1
 800184a:	60c1      	str	r1, [r0, #12]
 800184c:	610b      	str	r3, [r1, #16]
 800184e:	9b02      	ldr	r3, [sp, #8]
 8001850:	614b      	str	r3, [r1, #20]
 8001852:	4b0f      	ldr	r3, [pc, #60]	; (8001890 <chThdCreateStatic+0x50>)
 8001854:	620b      	str	r3, [r1, #32]
 8001856:	2300      	movs	r3, #0
 8001858:	6383      	str	r3, [r0, #56]	; 0x38
 800185a:	6343      	str	r3, [r0, #52]	; 0x34
 800185c:	6183      	str	r3, [r0, #24]
 800185e:	3302      	adds	r3, #2
 8001860:	8383      	strh	r3, [r0, #28]
 8001862:	3b01      	subs	r3, #1
 8001864:	7783      	strb	r3, [r0, #30]
 8001866:	4b0b      	ldr	r3, [pc, #44]	; (8001894 <chThdCreateStatic+0x54>)
 8001868:	6082      	str	r2, [r0, #8]
 800186a:	6103      	str	r3, [r0, #16]
 800186c:	63c2      	str	r2, [r0, #60]	; 0x3c
 800186e:	695a      	ldr	r2, [r3, #20]
 8001870:	2100      	movs	r1, #0
 8001872:	6142      	str	r2, [r0, #20]
 8001874:	6110      	str	r0, [r2, #16]
 8001876:	6158      	str	r0, [r3, #20]
 8001878:	0003      	movs	r3, r0
 800187a:	3324      	adds	r3, #36	; 0x24
 800187c:	6243      	str	r3, [r0, #36]	; 0x24
 800187e:	3304      	adds	r3, #4
 8001880:	6283      	str	r3, [r0, #40]	; 0x28
 8001882:	62c3      	str	r3, [r0, #44]	; 0x2c
 8001884:	f7ff ff1c 	bl	80016c0 <chSchWakeupS>
 8001888:	b662      	cpsie	i
 800188a:	0020      	movs	r0, r4
 800188c:	bd10      	pop	{r4, pc}
 800188e:	46c0      	nop			; (mov r8, r8)
 8001890:	080001a1 	.word	0x080001a1
 8001894:	20000738 	.word	0x20000738
	...

080018a0 <chSchGoSleepS>:
 80018a0:	4b06      	ldr	r3, [pc, #24]	; (80018bc <chSchGoSleepS+0x1c>)
 80018a2:	b510      	push	{r4, lr}
 80018a4:	6999      	ldr	r1, [r3, #24]
 80018a6:	7708      	strb	r0, [r1, #28]
 80018a8:	6818      	ldr	r0, [r3, #0]
 80018aa:	6802      	ldr	r2, [r0, #0]
 80018ac:	6053      	str	r3, [r2, #4]
 80018ae:	601a      	str	r2, [r3, #0]
 80018b0:	6198      	str	r0, [r3, #24]
 80018b2:	2301      	movs	r3, #1
 80018b4:	7703      	strb	r3, [r0, #28]
 80018b6:	f7fe fc63 	bl	8000180 <_port_switch>
 80018ba:	bd10      	pop	{r4, pc}
 80018bc:	20000738 	.word	0x20000738

080018c0 <chSemSignalWait.constprop.48>:
 80018c0:	b570      	push	{r4, r5, r6, lr}
 80018c2:	b672      	cpsid	i
 80018c4:	4c12      	ldr	r4, [pc, #72]	; (8001910 <chSemSignalWait.constprop.48+0x50>)
 80018c6:	68a3      	ldr	r3, [r4, #8]
 80018c8:	3301      	adds	r3, #1
 80018ca:	60a3      	str	r3, [r4, #8]
 80018cc:	2b00      	cmp	r3, #0
 80018ce:	dd15      	ble.n	80018fc <chSemSignalWait.constprop.48+0x3c>
 80018d0:	3b01      	subs	r3, #1
 80018d2:	60a3      	str	r3, [r4, #8]
 80018d4:	2b00      	cmp	r3, #0
 80018d6:	db04      	blt.n	80018e2 <chSemSignalWait.constprop.48+0x22>
 80018d8:	f7ff fdda 	bl	8001490 <chSchRescheduleS>
 80018dc:	2000      	movs	r0, #0
 80018de:	b662      	cpsie	i
 80018e0:	bd70      	pop	{r4, r5, r6, pc}
 80018e2:	4b0c      	ldr	r3, [pc, #48]	; (8001914 <chSemSignalWait.constprop.48+0x54>)
 80018e4:	2005      	movs	r0, #5
 80018e6:	699d      	ldr	r5, [r3, #24]
 80018e8:	6863      	ldr	r3, [r4, #4]
 80018ea:	602c      	str	r4, [r5, #0]
 80018ec:	606b      	str	r3, [r5, #4]
 80018ee:	601d      	str	r5, [r3, #0]
 80018f0:	6065      	str	r5, [r4, #4]
 80018f2:	622c      	str	r4, [r5, #32]
 80018f4:	f7ff ffd4 	bl	80018a0 <chSchGoSleepS>
 80018f8:	6a28      	ldr	r0, [r5, #32]
 80018fa:	e7f0      	b.n	80018de <chSemSignalWait.constprop.48+0x1e>
 80018fc:	6820      	ldr	r0, [r4, #0]
 80018fe:	6803      	ldr	r3, [r0, #0]
 8001900:	6023      	str	r3, [r4, #0]
 8001902:	605c      	str	r4, [r3, #4]
 8001904:	f7ff f96c 	bl	8000be0 <chSchReadyI>
 8001908:	2300      	movs	r3, #0
 800190a:	6203      	str	r3, [r0, #32]
 800190c:	68a3      	ldr	r3, [r4, #8]
 800190e:	e7df      	b.n	80018d0 <chSemSignalWait.constprop.48+0x10>
 8001910:	200006ac 	.word	0x200006ac
 8001914:	20000738 	.word	0x20000738
	...

08001920 <sem3_execute>:
 8001920:	4b1d      	ldr	r3, [pc, #116]	; (8001998 <sem3_execute+0x78>)
 8001922:	21a4      	movs	r1, #164	; 0xa4
 8001924:	699b      	ldr	r3, [r3, #24]
 8001926:	b510      	push	{r4, lr}
 8001928:	689a      	ldr	r2, [r3, #8]
 800192a:	2300      	movs	r3, #0
 800192c:	b082      	sub	sp, #8
 800192e:	0049      	lsls	r1, r1, #1
 8001930:	3201      	adds	r2, #1
 8001932:	9300      	str	r3, [sp, #0]
 8001934:	4819      	ldr	r0, [pc, #100]	; (800199c <sem3_execute+0x7c>)
 8001936:	4b1a      	ldr	r3, [pc, #104]	; (80019a0 <sem3_execute+0x80>)
 8001938:	f7ff ff82 	bl	8001840 <chThdCreateStatic>
 800193c:	4b19      	ldr	r3, [pc, #100]	; (80019a4 <sem3_execute+0x84>)
 800193e:	6018      	str	r0, [r3, #0]
 8001940:	f7ff ffbe 	bl	80018c0 <chSemSignalWait.constprop.48>
 8001944:	4c18      	ldr	r4, [pc, #96]	; (80019a8 <sem3_execute+0x88>)
 8001946:	2001      	movs	r0, #1
 8001948:	6823      	ldr	r3, [r4, #0]
 800194a:	1b19      	subs	r1, r3, r4
 800194c:	424b      	negs	r3, r1
 800194e:	4159      	adcs	r1, r3
 8001950:	b2c9      	uxtb	r1, r1
 8001952:	f7fe ff65 	bl	8000820 <_test_assert>
 8001956:	2800      	cmp	r0, #0
 8001958:	d001      	beq.n	800195e <sem3_execute+0x3e>
 800195a:	b002      	add	sp, #8
 800195c:	bd10      	pop	{r4, pc}
 800195e:	68a1      	ldr	r1, [r4, #8]
 8001960:	3002      	adds	r0, #2
 8001962:	424b      	negs	r3, r1
 8001964:	4159      	adcs	r1, r3
 8001966:	b2c9      	uxtb	r1, r1
 8001968:	f7fe ff5a 	bl	8000820 <_test_assert>
 800196c:	2800      	cmp	r0, #0
 800196e:	d1f4      	bne.n	800195a <sem3_execute+0x3a>
 8001970:	f7ff ffa6 	bl	80018c0 <chSemSignalWait.constprop.48>
 8001974:	6823      	ldr	r3, [r4, #0]
 8001976:	2003      	movs	r0, #3
 8001978:	1b19      	subs	r1, r3, r4
 800197a:	424b      	negs	r3, r1
 800197c:	4159      	adcs	r1, r3
 800197e:	b2c9      	uxtb	r1, r1
 8001980:	f7fe ff4e 	bl	8000820 <_test_assert>
 8001984:	2800      	cmp	r0, #0
 8001986:	d1e8      	bne.n	800195a <sem3_execute+0x3a>
 8001988:	68a1      	ldr	r1, [r4, #8]
 800198a:	3004      	adds	r0, #4
 800198c:	424b      	negs	r3, r1
 800198e:	4159      	adcs	r1, r3
 8001990:	b2c9      	uxtb	r1, r1
 8001992:	f7fe ff45 	bl	8000820 <_test_assert>
 8001996:	e7e0      	b.n	800195a <sem3_execute+0x3a>
 8001998:	20000738 	.word	0x20000738
 800199c:	20000940 	.word	0x20000940
 80019a0:	08003571 	.word	0x08003571
 80019a4:	20000fd4 	.word	0x20000fd4
 80019a8:	200006ac 	.word	0x200006ac
 80019ac:	00000000 	.word	0x00000000

080019b0 <chEvtWaitOne.constprop.32>:
 80019b0:	4b09      	ldr	r3, [pc, #36]	; (80019d8 <chEvtWaitOne.constprop.32+0x28>)
 80019b2:	b510      	push	{r4, lr}
 80019b4:	699c      	ldr	r4, [r3, #24]
 80019b6:	b672      	cpsid	i
 80019b8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80019ba:	2b00      	cmp	r3, #0
 80019bc:	d105      	bne.n	80019ca <chEvtWaitOne.constprop.32+0x1a>
 80019be:	3b01      	subs	r3, #1
 80019c0:	6223      	str	r3, [r4, #32]
 80019c2:	200a      	movs	r0, #10
 80019c4:	f7ff ff6c 	bl	80018a0 <chSchGoSleepS>
 80019c8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80019ca:	4258      	negs	r0, r3
 80019cc:	4018      	ands	r0, r3
 80019ce:	4383      	bics	r3, r0
 80019d0:	6363      	str	r3, [r4, #52]	; 0x34
 80019d2:	b662      	cpsie	i
 80019d4:	bd10      	pop	{r4, pc}
 80019d6:	46c0      	nop			; (mov r8, r8)
 80019d8:	20000738 	.word	0x20000738
 80019dc:	00000000 	.word	0x00000000

080019e0 <chEvtWaitAny.constprop.31>:
 80019e0:	4b08      	ldr	r3, [pc, #32]	; (8001a04 <chEvtWaitAny.constprop.31+0x24>)
 80019e2:	b510      	push	{r4, lr}
 80019e4:	699c      	ldr	r4, [r3, #24]
 80019e6:	b672      	cpsid	i
 80019e8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80019ea:	2800      	cmp	r0, #0
 80019ec:	d106      	bne.n	80019fc <chEvtWaitAny.constprop.31+0x1c>
 80019ee:	2301      	movs	r3, #1
 80019f0:	425b      	negs	r3, r3
 80019f2:	300a      	adds	r0, #10
 80019f4:	6223      	str	r3, [r4, #32]
 80019f6:	f7ff ff53 	bl	80018a0 <chSchGoSleepS>
 80019fa:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80019fc:	2300      	movs	r3, #0
 80019fe:	6363      	str	r3, [r4, #52]	; 0x34
 8001a00:	b662      	cpsie	i
 8001a02:	bd10      	pop	{r4, pc}
 8001a04:	20000738 	.word	0x20000738
	...

08001a10 <thread4.lto_priv.73>:
 8001a10:	4b05      	ldr	r3, [pc, #20]	; (8001a28 <thread4.lto_priv.73+0x18>)
 8001a12:	b510      	push	{r4, lr}
 8001a14:	699c      	ldr	r4, [r3, #24]
 8001a16:	b672      	cpsid	i
 8001a18:	2003      	movs	r0, #3
 8001a1a:	f7ff ff41 	bl	80018a0 <chSchGoSleepS>
 8001a1e:	6a23      	ldr	r3, [r4, #32]
 8001a20:	2b00      	cmp	r3, #0
 8001a22:	d0f9      	beq.n	8001a18 <thread4.lto_priv.73+0x8>
 8001a24:	b662      	cpsie	i
 8001a26:	bd10      	pop	{r4, pc}
 8001a28:	20000738 	.word	0x20000738
 8001a2c:	00000000 	.word	0x00000000

08001a30 <chSchGoSleepTimeoutS>:
 8001a30:	b530      	push	{r4, r5, lr}
 8001a32:	0005      	movs	r5, r0
 8001a34:	b087      	sub	sp, #28
 8001a36:	1c4b      	adds	r3, r1, #1
 8001a38:	d012      	beq.n	8001a60 <chSchGoSleepTimeoutS+0x30>
 8001a3a:	4c0b      	ldr	r4, [pc, #44]	; (8001a68 <chSchGoSleepTimeoutS+0x38>)
 8001a3c:	4a0b      	ldr	r2, [pc, #44]	; (8001a6c <chSchGoSleepTimeoutS+0x3c>)
 8001a3e:	69a3      	ldr	r3, [r4, #24]
 8001a40:	a801      	add	r0, sp, #4
 8001a42:	f7ff fa6d 	bl	8000f20 <chVTDoSetI>
 8001a46:	0028      	movs	r0, r5
 8001a48:	f7ff ff2a 	bl	80018a0 <chSchGoSleepS>
 8001a4c:	9b04      	ldr	r3, [sp, #16]
 8001a4e:	2b00      	cmp	r3, #0
 8001a50:	d002      	beq.n	8001a58 <chSchGoSleepTimeoutS+0x28>
 8001a52:	a801      	add	r0, sp, #4
 8001a54:	f7ff fa24 	bl	8000ea0 <chVTDoResetI>
 8001a58:	69a3      	ldr	r3, [r4, #24]
 8001a5a:	6a18      	ldr	r0, [r3, #32]
 8001a5c:	b007      	add	sp, #28
 8001a5e:	bd30      	pop	{r4, r5, pc}
 8001a60:	f7ff ff1e 	bl	80018a0 <chSchGoSleepS>
 8001a64:	4c00      	ldr	r4, [pc, #0]	; (8001a68 <chSchGoSleepTimeoutS+0x38>)
 8001a66:	e7f7      	b.n	8001a58 <chSchGoSleepTimeoutS+0x28>
 8001a68:	20000738 	.word	0x20000738
 8001a6c:	08000b81 	.word	0x08000b81

08001a70 <chSemWaitTimeout.constprop.50>:
 8001a70:	b510      	push	{r4, lr}
 8001a72:	0001      	movs	r1, r0
 8001a74:	b672      	cpsid	i
 8001a76:	4b0d      	ldr	r3, [pc, #52]	; (8001aac <chSemWaitTimeout.constprop.50+0x3c>)
 8001a78:	2000      	movs	r0, #0
 8001a7a:	689c      	ldr	r4, [r3, #8]
 8001a7c:	1e62      	subs	r2, r4, #1
 8001a7e:	609a      	str	r2, [r3, #8]
 8001a80:	2a00      	cmp	r2, #0
 8001a82:	db01      	blt.n	8001a88 <chSemWaitTimeout.constprop.50+0x18>
 8001a84:	b662      	cpsie	i
 8001a86:	bd10      	pop	{r4, pc}
 8001a88:	2900      	cmp	r1, #0
 8001a8a:	d00b      	beq.n	8001aa4 <chSemWaitTimeout.constprop.50+0x34>
 8001a8c:	4a08      	ldr	r2, [pc, #32]	; (8001ab0 <chSemWaitTimeout.constprop.50+0x40>)
 8001a8e:	6858      	ldr	r0, [r3, #4]
 8001a90:	6992      	ldr	r2, [r2, #24]
 8001a92:	6050      	str	r0, [r2, #4]
 8001a94:	6013      	str	r3, [r2, #0]
 8001a96:	6213      	str	r3, [r2, #32]
 8001a98:	6002      	str	r2, [r0, #0]
 8001a9a:	605a      	str	r2, [r3, #4]
 8001a9c:	2005      	movs	r0, #5
 8001a9e:	f7ff ffc7 	bl	8001a30 <chSchGoSleepTimeoutS>
 8001aa2:	e7ef      	b.n	8001a84 <chSemWaitTimeout.constprop.50+0x14>
 8001aa4:	609c      	str	r4, [r3, #8]
 8001aa6:	3801      	subs	r0, #1
 8001aa8:	e7ec      	b.n	8001a84 <chSemWaitTimeout.constprop.50+0x14>
 8001aaa:	46c0      	nop			; (mov r8, r8)
 8001aac:	200006ac 	.word	0x200006ac
 8001ab0:	20000738 	.word	0x20000738
	...

08001ac0 <evt3_execute>:
 8001ac0:	b570      	push	{r4, r5, r6, lr}
 8001ac2:	4c47      	ldr	r4, [pc, #284]	; (8001be0 <evt3_execute+0x120>)
 8001ac4:	69a2      	ldr	r2, [r4, #24]
 8001ac6:	b672      	cpsid	i
 8001ac8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001aca:	2b00      	cmp	r3, #0
 8001acc:	d107      	bne.n	8001ade <evt3_execute+0x1e>
 8001ace:	b662      	cpsie	i
 8001ad0:	2101      	movs	r1, #1
 8001ad2:	2001      	movs	r0, #1
 8001ad4:	f7fe fea4 	bl	8000820 <_test_assert>
 8001ad8:	2800      	cmp	r0, #0
 8001ada:	d00d      	beq.n	8001af8 <evt3_execute+0x38>
 8001adc:	bd70      	pop	{r4, r5, r6, pc}
 8001ade:	4259      	negs	r1, r3
 8001ae0:	4019      	ands	r1, r3
 8001ae2:	438b      	bics	r3, r1
 8001ae4:	6353      	str	r3, [r2, #52]	; 0x34
 8001ae6:	b662      	cpsie	i
 8001ae8:	424b      	negs	r3, r1
 8001aea:	4159      	adcs	r1, r3
 8001aec:	2001      	movs	r0, #1
 8001aee:	b2c9      	uxtb	r1, r1
 8001af0:	f7fe fe96 	bl	8000820 <_test_assert>
 8001af4:	2800      	cmp	r0, #0
 8001af6:	d1f1      	bne.n	8001adc <evt3_execute+0x1c>
 8001af8:	69a3      	ldr	r3, [r4, #24]
 8001afa:	b672      	cpsid	i
 8001afc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001afe:	2a00      	cmp	r2, #0
 8001b00:	d05e      	beq.n	8001bc0 <evt3_execute+0x100>
 8001b02:	6358      	str	r0, [r3, #52]	; 0x34
 8001b04:	b662      	cpsie	i
 8001b06:	2100      	movs	r1, #0
 8001b08:	2002      	movs	r0, #2
 8001b0a:	f7fe fe89 	bl	8000820 <_test_assert>
 8001b0e:	2800      	cmp	r0, #0
 8001b10:	d1e4      	bne.n	8001adc <evt3_execute+0x1c>
 8001b12:	69a3      	ldr	r3, [r4, #24]
 8001b14:	b672      	cpsid	i
 8001b16:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001b18:	3201      	adds	r2, #1
 8001b1a:	d054      	beq.n	8001bc6 <evt3_execute+0x106>
 8001b1c:	b662      	cpsie	i
 8001b1e:	3001      	adds	r0, #1
 8001b20:	0001      	movs	r1, r0
 8001b22:	2003      	movs	r0, #3
 8001b24:	f7fe fe7c 	bl	8000820 <_test_assert>
 8001b28:	2800      	cmp	r0, #0
 8001b2a:	d1d7      	bne.n	8001adc <evt3_execute+0x1c>
 8001b2c:	69a5      	ldr	r5, [r4, #24]
 8001b2e:	b672      	cpsid	i
 8001b30:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8001b32:	2b00      	cmp	r3, #0
 8001b34:	d108      	bne.n	8001b48 <evt3_execute+0x88>
 8001b36:	3b01      	subs	r3, #1
 8001b38:	622b      	str	r3, [r5, #32]
 8001b3a:	210a      	movs	r1, #10
 8001b3c:	300a      	adds	r0, #10
 8001b3e:	f7ff ff77 	bl	8001a30 <chSchGoSleepTimeoutS>
 8001b42:	2800      	cmp	r0, #0
 8001b44:	db42      	blt.n	8001bcc <evt3_execute+0x10c>
 8001b46:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8001b48:	4259      	negs	r1, r3
 8001b4a:	4019      	ands	r1, r3
 8001b4c:	438b      	bics	r3, r1
 8001b4e:	636b      	str	r3, [r5, #52]	; 0x34
 8001b50:	b662      	cpsie	i
 8001b52:	424b      	negs	r3, r1
 8001b54:	4159      	adcs	r1, r3
 8001b56:	b2c9      	uxtb	r1, r1
 8001b58:	2004      	movs	r0, #4
 8001b5a:	f7fe fe61 	bl	8000820 <_test_assert>
 8001b5e:	2800      	cmp	r0, #0
 8001b60:	d1bc      	bne.n	8001adc <evt3_execute+0x1c>
 8001b62:	69a5      	ldr	r5, [r4, #24]
 8001b64:	b672      	cpsid	i
 8001b66:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8001b68:	2b00      	cmp	r3, #0
 8001b6a:	d108      	bne.n	8001b7e <evt3_execute+0xbe>
 8001b6c:	3b01      	subs	r3, #1
 8001b6e:	622b      	str	r3, [r5, #32]
 8001b70:	210a      	movs	r1, #10
 8001b72:	300a      	adds	r0, #10
 8001b74:	f7ff ff5c 	bl	8001a30 <chSchGoSleepTimeoutS>
 8001b78:	2800      	cmp	r0, #0
 8001b7a:	db2a      	blt.n	8001bd2 <evt3_execute+0x112>
 8001b7c:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8001b7e:	2200      	movs	r2, #0
 8001b80:	636a      	str	r2, [r5, #52]	; 0x34
 8001b82:	b662      	cpsie	i
 8001b84:	4259      	negs	r1, r3
 8001b86:	4159      	adcs	r1, r3
 8001b88:	b2c9      	uxtb	r1, r1
 8001b8a:	2005      	movs	r0, #5
 8001b8c:	f7fe fe48 	bl	8000820 <_test_assert>
 8001b90:	1e05      	subs	r5, r0, #0
 8001b92:	d1a3      	bne.n	8001adc <evt3_execute+0x1c>
 8001b94:	69a4      	ldr	r4, [r4, #24]
 8001b96:	b672      	cpsid	i
 8001b98:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001b9a:	3301      	adds	r3, #1
 8001b9c:	d008      	beq.n	8001bb0 <evt3_execute+0xf0>
 8001b9e:	2301      	movs	r3, #1
 8001ba0:	425b      	negs	r3, r3
 8001ba2:	6223      	str	r3, [r4, #32]
 8001ba4:	210a      	movs	r1, #10
 8001ba6:	200b      	movs	r0, #11
 8001ba8:	f7ff ff42 	bl	8001a30 <chSchGoSleepTimeoutS>
 8001bac:	2800      	cmp	r0, #0
 8001bae:	db13      	blt.n	8001bd8 <evt3_execute+0x118>
 8001bb0:	2300      	movs	r3, #0
 8001bb2:	6363      	str	r3, [r4, #52]	; 0x34
 8001bb4:	b662      	cpsie	i
 8001bb6:	0029      	movs	r1, r5
 8001bb8:	2006      	movs	r0, #6
 8001bba:	f7fe fe31 	bl	8000820 <_test_assert>
 8001bbe:	e78d      	b.n	8001adc <evt3_execute+0x1c>
 8001bc0:	b662      	cpsie	i
 8001bc2:	2101      	movs	r1, #1
 8001bc4:	e7a0      	b.n	8001b08 <evt3_execute+0x48>
 8001bc6:	6358      	str	r0, [r3, #52]	; 0x34
 8001bc8:	b662      	cpsie	i
 8001bca:	e7a9      	b.n	8001b20 <evt3_execute+0x60>
 8001bcc:	b662      	cpsie	i
 8001bce:	2101      	movs	r1, #1
 8001bd0:	e7c2      	b.n	8001b58 <evt3_execute+0x98>
 8001bd2:	b662      	cpsie	i
 8001bd4:	2101      	movs	r1, #1
 8001bd6:	e7d8      	b.n	8001b8a <evt3_execute+0xca>
 8001bd8:	b662      	cpsie	i
 8001bda:	3501      	adds	r5, #1
 8001bdc:	e7eb      	b.n	8001bb6 <evt3_execute+0xf6>
 8001bde:	46c0      	nop			; (mov r8, r8)
 8001be0:	20000738 	.word	0x20000738
	...

08001bf0 <chSemWaitTimeoutS>:
 8001bf0:	6883      	ldr	r3, [r0, #8]
 8001bf2:	b510      	push	{r4, lr}
 8001bf4:	3b01      	subs	r3, #1
 8001bf6:	0002      	movs	r2, r0
 8001bf8:	6083      	str	r3, [r0, #8]
 8001bfa:	2000      	movs	r0, #0
 8001bfc:	2b00      	cmp	r3, #0
 8001bfe:	da0a      	bge.n	8001c16 <chSemWaitTimeoutS+0x26>
 8001c00:	4b05      	ldr	r3, [pc, #20]	; (8001c18 <chSemWaitTimeoutS+0x28>)
 8001c02:	699b      	ldr	r3, [r3, #24]
 8001c04:	621a      	str	r2, [r3, #32]
 8001c06:	601a      	str	r2, [r3, #0]
 8001c08:	6850      	ldr	r0, [r2, #4]
 8001c0a:	6058      	str	r0, [r3, #4]
 8001c0c:	6003      	str	r3, [r0, #0]
 8001c0e:	6053      	str	r3, [r2, #4]
 8001c10:	2005      	movs	r0, #5
 8001c12:	f7ff ff0d 	bl	8001a30 <chSchGoSleepTimeoutS>
 8001c16:	bd10      	pop	{r4, pc}
 8001c18:	20000738 	.word	0x20000738
 8001c1c:	00000000 	.word	0x00000000

08001c20 <chMBPost.constprop.20>:
 8001c20:	b570      	push	{r4, r5, r6, lr}
 8001c22:	0006      	movs	r6, r0
 8001c24:	b672      	cpsid	i
 8001c26:	4c0d      	ldr	r4, [pc, #52]	; (8001c5c <chMBPost.constprop.20+0x3c>)
 8001c28:	0020      	movs	r0, r4
 8001c2a:	301c      	adds	r0, #28
 8001c2c:	f7ff ffe0 	bl	8001bf0 <chSemWaitTimeoutS>
 8001c30:	1e05      	subs	r5, r0, #0
 8001c32:	d002      	beq.n	8001c3a <chMBPost.constprop.20+0x1a>
 8001c34:	b662      	cpsie	i
 8001c36:	0028      	movs	r0, r5
 8001c38:	bd70      	pop	{r4, r5, r6, pc}
 8001c3a:	68a2      	ldr	r2, [r4, #8]
 8001c3c:	1d13      	adds	r3, r2, #4
 8001c3e:	60a3      	str	r3, [r4, #8]
 8001c40:	6016      	str	r6, [r2, #0]
 8001c42:	6862      	ldr	r2, [r4, #4]
 8001c44:	4293      	cmp	r3, r2
 8001c46:	d301      	bcc.n	8001c4c <chMBPost.constprop.20+0x2c>
 8001c48:	6823      	ldr	r3, [r4, #0]
 8001c4a:	60a3      	str	r3, [r4, #8]
 8001c4c:	0020      	movs	r0, r4
 8001c4e:	3010      	adds	r0, #16
 8001c50:	f7ff f896 	bl	8000d80 <chSemSignalI>
 8001c54:	f7ff fc1c 	bl	8001490 <chSchRescheduleS>
 8001c58:	e7ec      	b.n	8001c34 <chMBPost.constprop.20+0x14>
 8001c5a:	46c0      	nop			; (mov r8, r8)
 8001c5c:	20000654 	.word	0x20000654

08001c60 <chMBPostAhead.constprop.18>:
 8001c60:	b570      	push	{r4, r5, r6, lr}
 8001c62:	0006      	movs	r6, r0
 8001c64:	b672      	cpsid	i
 8001c66:	4c0d      	ldr	r4, [pc, #52]	; (8001c9c <chMBPostAhead.constprop.18+0x3c>)
 8001c68:	0020      	movs	r0, r4
 8001c6a:	301c      	adds	r0, #28
 8001c6c:	f7ff ffc0 	bl	8001bf0 <chSemWaitTimeoutS>
 8001c70:	1e05      	subs	r5, r0, #0
 8001c72:	d002      	beq.n	8001c7a <chMBPostAhead.constprop.18+0x1a>
 8001c74:	b662      	cpsie	i
 8001c76:	0028      	movs	r0, r5
 8001c78:	bd70      	pop	{r4, r5, r6, pc}
 8001c7a:	68e3      	ldr	r3, [r4, #12]
 8001c7c:	6822      	ldr	r2, [r4, #0]
 8001c7e:	3b04      	subs	r3, #4
 8001c80:	60e3      	str	r3, [r4, #12]
 8001c82:	4293      	cmp	r3, r2
 8001c84:	d202      	bcs.n	8001c8c <chMBPostAhead.constprop.18+0x2c>
 8001c86:	6863      	ldr	r3, [r4, #4]
 8001c88:	3b04      	subs	r3, #4
 8001c8a:	60e3      	str	r3, [r4, #12]
 8001c8c:	0020      	movs	r0, r4
 8001c8e:	601e      	str	r6, [r3, #0]
 8001c90:	3010      	adds	r0, #16
 8001c92:	f7ff f875 	bl	8000d80 <chSemSignalI>
 8001c96:	f7ff fbfb 	bl	8001490 <chSchRescheduleS>
 8001c9a:	e7eb      	b.n	8001c74 <chMBPostAhead.constprop.18+0x14>
 8001c9c:	20000654 	.word	0x20000654

08001ca0 <chMBFetch.constprop.16>:
 8001ca0:	b570      	push	{r4, r5, r6, lr}
 8001ca2:	0006      	movs	r6, r0
 8001ca4:	b672      	cpsid	i
 8001ca6:	4c0d      	ldr	r4, [pc, #52]	; (8001cdc <chMBFetch.constprop.16+0x3c>)
 8001ca8:	0020      	movs	r0, r4
 8001caa:	3010      	adds	r0, #16
 8001cac:	f7ff ffa0 	bl	8001bf0 <chSemWaitTimeoutS>
 8001cb0:	1e05      	subs	r5, r0, #0
 8001cb2:	d10f      	bne.n	8001cd4 <chMBFetch.constprop.16+0x34>
 8001cb4:	68e2      	ldr	r2, [r4, #12]
 8001cb6:	1d13      	adds	r3, r2, #4
 8001cb8:	6812      	ldr	r2, [r2, #0]
 8001cba:	60e3      	str	r3, [r4, #12]
 8001cbc:	6032      	str	r2, [r6, #0]
 8001cbe:	6862      	ldr	r2, [r4, #4]
 8001cc0:	4293      	cmp	r3, r2
 8001cc2:	d301      	bcc.n	8001cc8 <chMBFetch.constprop.16+0x28>
 8001cc4:	6823      	ldr	r3, [r4, #0]
 8001cc6:	60e3      	str	r3, [r4, #12]
 8001cc8:	0020      	movs	r0, r4
 8001cca:	301c      	adds	r0, #28
 8001ccc:	f7ff f858 	bl	8000d80 <chSemSignalI>
 8001cd0:	f7ff fbde 	bl	8001490 <chSchRescheduleS>
 8001cd4:	b662      	cpsie	i
 8001cd6:	0028      	movs	r0, r5
 8001cd8:	bd70      	pop	{r4, r5, r6, pc}
 8001cda:	46c0      	nop			; (mov r8, r8)
 8001cdc:	20000654 	.word	0x20000654

08001ce0 <mbox1_execute>:
 8001ce0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001ce2:	b083      	sub	sp, #12
 8001ce4:	b672      	cpsid	i
 8001ce6:	4d17      	ldr	r5, [pc, #92]	; (8001d44 <mbox1_execute+0x64>)
 8001ce8:	2001      	movs	r0, #1
 8001cea:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8001cec:	1f59      	subs	r1, r3, #5
 8001cee:	424b      	negs	r3, r1
 8001cf0:	4159      	adcs	r1, r3
 8001cf2:	b2c9      	uxtb	r1, r1
 8001cf4:	f7fe fd94 	bl	8000820 <_test_assert>
 8001cf8:	2800      	cmp	r0, #0
 8001cfa:	d000      	beq.n	8001cfe <mbox1_execute+0x1e>
 8001cfc:	e1fa      	b.n	80020f4 <mbox1_execute+0x414>
 8001cfe:	b662      	cpsie	i
 8001d00:	2442      	movs	r4, #66	; 0x42
 8001d02:	2101      	movs	r1, #1
 8001d04:	0020      	movs	r0, r4
 8001d06:	4249      	negs	r1, r1
 8001d08:	f7ff ff8a 	bl	8001c20 <chMBPost.constprop.20>
 8001d0c:	4241      	negs	r1, r0
 8001d0e:	4141      	adcs	r1, r0
 8001d10:	2002      	movs	r0, #2
 8001d12:	b2c9      	uxtb	r1, r1
 8001d14:	f7fe fd84 	bl	8000820 <_test_assert>
 8001d18:	2800      	cmp	r0, #0
 8001d1a:	d110      	bne.n	8001d3e <mbox1_execute+0x5e>
 8001d1c:	3401      	adds	r4, #1
 8001d1e:	2c46      	cmp	r4, #70	; 0x46
 8001d20:	d1ef      	bne.n	8001d02 <mbox1_execute+0x22>
 8001d22:	2101      	movs	r1, #1
 8001d24:	3041      	adds	r0, #65	; 0x41
 8001d26:	4249      	negs	r1, r1
 8001d28:	f7ff ff9a 	bl	8001c60 <chMBPostAhead.constprop.18>
 8001d2c:	4241      	negs	r1, r0
 8001d2e:	4141      	adcs	r1, r0
 8001d30:	2003      	movs	r0, #3
 8001d32:	b2c9      	uxtb	r1, r1
 8001d34:	f7fe fd74 	bl	8000820 <_test_assert>
 8001d38:	2800      	cmp	r0, #0
 8001d3a:	d100      	bne.n	8001d3e <mbox1_execute+0x5e>
 8001d3c:	e1dc      	b.n	80020f8 <mbox1_execute+0x418>
 8001d3e:	b003      	add	sp, #12
 8001d40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d42:	46c0      	nop			; (mov r8, r8)
 8001d44:	20000654 	.word	0x20000654
 8001d48:	4ea9      	ldr	r6, [pc, #676]	; (8001ff0 <mbox1_execute+0x310>)
 8001d4a:	200c      	movs	r0, #12
 8001d4c:	0031      	movs	r1, r6
 8001d4e:	f7fe fd3f 	bl	80007d0 <_test_assert_sequence>
 8001d52:	2800      	cmp	r0, #0
 8001d54:	d1f3      	bne.n	8001d3e <mbox1_execute+0x5e>
 8001d56:	2101      	movs	r1, #1
 8001d58:	3047      	adds	r0, #71	; 0x47
 8001d5a:	4249      	negs	r1, r1
 8001d5c:	f7ff ff60 	bl	8001c20 <chMBPost.constprop.20>
 8001d60:	4241      	negs	r1, r0
 8001d62:	4141      	adcs	r1, r0
 8001d64:	200d      	movs	r0, #13
 8001d66:	b2c9      	uxtb	r1, r1
 8001d68:	f7fe fd5a 	bl	8000820 <_test_assert>
 8001d6c:	2800      	cmp	r0, #0
 8001d6e:	d1e6      	bne.n	8001d3e <mbox1_execute+0x5e>
 8001d70:	2101      	movs	r1, #1
 8001d72:	a801      	add	r0, sp, #4
 8001d74:	4249      	negs	r1, r1
 8001d76:	f7ff ff93 	bl	8001ca0 <chMBFetch.constprop.16>
 8001d7a:	4241      	negs	r1, r0
 8001d7c:	4141      	adcs	r1, r0
 8001d7e:	200e      	movs	r0, #14
 8001d80:	b2c9      	uxtb	r1, r1
 8001d82:	f7fe fd4d 	bl	8000820 <_test_assert>
 8001d86:	2800      	cmp	r0, #0
 8001d88:	d1d9      	bne.n	8001d3e <mbox1_execute+0x5e>
 8001d8a:	682b      	ldr	r3, [r5, #0]
 8001d8c:	68aa      	ldr	r2, [r5, #8]
 8001d8e:	300f      	adds	r0, #15
 8001d90:	1a99      	subs	r1, r3, r2
 8001d92:	424b      	negs	r3, r1
 8001d94:	4159      	adcs	r1, r3
 8001d96:	b2c9      	uxtb	r1, r1
 8001d98:	f7fe fd42 	bl	8000820 <_test_assert>
 8001d9c:	2800      	cmp	r0, #0
 8001d9e:	d1ce      	bne.n	8001d3e <mbox1_execute+0x5e>
 8001da0:	682b      	ldr	r3, [r5, #0]
 8001da2:	68ea      	ldr	r2, [r5, #12]
 8001da4:	3010      	adds	r0, #16
 8001da6:	1a99      	subs	r1, r3, r2
 8001da8:	424b      	negs	r3, r1
 8001daa:	4159      	adcs	r1, r3
 8001dac:	b2c9      	uxtb	r1, r1
 8001dae:	f7fe fd37 	bl	8000820 <_test_assert>
 8001db2:	2800      	cmp	r0, #0
 8001db4:	d1c3      	bne.n	8001d3e <mbox1_execute+0x5e>
 8001db6:	2101      	movs	r1, #1
 8001db8:	a801      	add	r0, sp, #4
 8001dba:	f7ff ff71 	bl	8001ca0 <chMBFetch.constprop.16>
 8001dbe:	1c41      	adds	r1, r0, #1
 8001dc0:	4248      	negs	r0, r1
 8001dc2:	4141      	adcs	r1, r0
 8001dc4:	2011      	movs	r0, #17
 8001dc6:	b2c9      	uxtb	r1, r1
 8001dc8:	f7fe fd2a 	bl	8000820 <_test_assert>
 8001dcc:	2800      	cmp	r0, #0
 8001dce:	d1b6      	bne.n	8001d3e <mbox1_execute+0x5e>
 8001dd0:	b672      	cpsid	i
 8001dd2:	a801      	add	r0, sp, #4
 8001dd4:	f7ff f82c 	bl	8000e30 <chMBFetchI.constprop.15>
 8001dd8:	b662      	cpsie	i
 8001dda:	1c41      	adds	r1, r0, #1
 8001ddc:	4248      	negs	r0, r1
 8001dde:	4141      	adcs	r1, r0
 8001de0:	2012      	movs	r0, #18
 8001de2:	b2c9      	uxtb	r1, r1
 8001de4:	f7fe fd1c 	bl	8000820 <_test_assert>
 8001de8:	2800      	cmp	r0, #0
 8001dea:	d1a8      	bne.n	8001d3e <mbox1_execute+0x5e>
 8001dec:	b672      	cpsid	i
 8001dee:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8001df0:	3013      	adds	r0, #19
 8001df2:	1f59      	subs	r1, r3, #5
 8001df4:	424b      	negs	r3, r1
 8001df6:	4159      	adcs	r1, r3
 8001df8:	b2c9      	uxtb	r1, r1
 8001dfa:	f7fe fd11 	bl	8000820 <_test_assert>
 8001dfe:	2800      	cmp	r0, #0
 8001e00:	d000      	beq.n	8001e04 <mbox1_execute+0x124>
 8001e02:	e177      	b.n	80020f4 <mbox1_execute+0x414>
 8001e04:	b662      	cpsie	i
 8001e06:	b672      	cpsid	i
 8001e08:	69a9      	ldr	r1, [r5, #24]
 8001e0a:	2014      	movs	r0, #20
 8001e0c:	424b      	negs	r3, r1
 8001e0e:	4159      	adcs	r1, r3
 8001e10:	b2c9      	uxtb	r1, r1
 8001e12:	f7fe fd05 	bl	8000820 <_test_assert>
 8001e16:	2800      	cmp	r0, #0
 8001e18:	d000      	beq.n	8001e1c <mbox1_execute+0x13c>
 8001e1a:	e16b      	b.n	80020f4 <mbox1_execute+0x414>
 8001e1c:	b662      	cpsie	i
 8001e1e:	b672      	cpsid	i
 8001e20:	68eb      	ldr	r3, [r5, #12]
 8001e22:	68aa      	ldr	r2, [r5, #8]
 8001e24:	2015      	movs	r0, #21
 8001e26:	1a99      	subs	r1, r3, r2
 8001e28:	424b      	negs	r3, r1
 8001e2a:	4159      	adcs	r1, r3
 8001e2c:	b2c9      	uxtb	r1, r1
 8001e2e:	f7fe fcf7 	bl	8000820 <_test_assert>
 8001e32:	2800      	cmp	r0, #0
 8001e34:	d000      	beq.n	8001e38 <mbox1_execute+0x158>
 8001e36:	e15d      	b.n	80020f4 <mbox1_execute+0x414>
 8001e38:	b662      	cpsie	i
 8001e3a:	b672      	cpsid	i
 8001e3c:	2041      	movs	r0, #65	; 0x41
 8001e3e:	f7fe ffb7 	bl	8000db0 <chMBPostI.constprop.19>
 8001e42:	4241      	negs	r1, r0
 8001e44:	4141      	adcs	r1, r0
 8001e46:	2016      	movs	r0, #22
 8001e48:	b2c9      	uxtb	r1, r1
 8001e4a:	f7fe fce9 	bl	8000820 <_test_assert>
 8001e4e:	2800      	cmp	r0, #0
 8001e50:	d000      	beq.n	8001e54 <mbox1_execute+0x174>
 8001e52:	e774      	b.n	8001d3e <mbox1_execute+0x5e>
 8001e54:	3042      	adds	r0, #66	; 0x42
 8001e56:	f7fe ffab 	bl	8000db0 <chMBPostI.constprop.19>
 8001e5a:	4241      	negs	r1, r0
 8001e5c:	4141      	adcs	r1, r0
 8001e5e:	2017      	movs	r0, #23
 8001e60:	b2c9      	uxtb	r1, r1
 8001e62:	f7fe fcdd 	bl	8000820 <_test_assert>
 8001e66:	2800      	cmp	r0, #0
 8001e68:	d000      	beq.n	8001e6c <mbox1_execute+0x18c>
 8001e6a:	e768      	b.n	8001d3e <mbox1_execute+0x5e>
 8001e6c:	3043      	adds	r0, #67	; 0x43
 8001e6e:	f7fe ff9f 	bl	8000db0 <chMBPostI.constprop.19>
 8001e72:	4241      	negs	r1, r0
 8001e74:	4141      	adcs	r1, r0
 8001e76:	2018      	movs	r0, #24
 8001e78:	b2c9      	uxtb	r1, r1
 8001e7a:	f7fe fcd1 	bl	8000820 <_test_assert>
 8001e7e:	2800      	cmp	r0, #0
 8001e80:	d000      	beq.n	8001e84 <mbox1_execute+0x1a4>
 8001e82:	e75c      	b.n	8001d3e <mbox1_execute+0x5e>
 8001e84:	3044      	adds	r0, #68	; 0x44
 8001e86:	f7fe ff93 	bl	8000db0 <chMBPostI.constprop.19>
 8001e8a:	4241      	negs	r1, r0
 8001e8c:	4141      	adcs	r1, r0
 8001e8e:	2019      	movs	r0, #25
 8001e90:	b2c9      	uxtb	r1, r1
 8001e92:	f7fe fcc5 	bl	8000820 <_test_assert>
 8001e96:	2800      	cmp	r0, #0
 8001e98:	d000      	beq.n	8001e9c <mbox1_execute+0x1bc>
 8001e9a:	e750      	b.n	8001d3e <mbox1_execute+0x5e>
 8001e9c:	3045      	adds	r0, #69	; 0x45
 8001e9e:	f7fe ff87 	bl	8000db0 <chMBPostI.constprop.19>
 8001ea2:	b662      	cpsie	i
 8001ea4:	4241      	negs	r1, r0
 8001ea6:	4141      	adcs	r1, r0
 8001ea8:	201a      	movs	r0, #26
 8001eaa:	b2c9      	uxtb	r1, r1
 8001eac:	f7fe fcb8 	bl	8000820 <_test_assert>
 8001eb0:	2800      	cmp	r0, #0
 8001eb2:	d000      	beq.n	8001eb6 <mbox1_execute+0x1d6>
 8001eb4:	e743      	b.n	8001d3e <mbox1_execute+0x5e>
 8001eb6:	68eb      	ldr	r3, [r5, #12]
 8001eb8:	68aa      	ldr	r2, [r5, #8]
 8001eba:	301b      	adds	r0, #27
 8001ebc:	1a99      	subs	r1, r3, r2
 8001ebe:	424b      	negs	r3, r1
 8001ec0:	4159      	adcs	r1, r3
 8001ec2:	b2c9      	uxtb	r1, r1
 8001ec4:	f7fe fcac 	bl	8000820 <_test_assert>
 8001ec8:	2800      	cmp	r0, #0
 8001eca:	d000      	beq.n	8001ece <mbox1_execute+0x1ee>
 8001ecc:	e737      	b.n	8001d3e <mbox1_execute+0x5e>
 8001ece:	2405      	movs	r4, #5
 8001ed0:	271c      	movs	r7, #28
 8001ed2:	b672      	cpsid	i
 8001ed4:	a801      	add	r0, sp, #4
 8001ed6:	f7fe ffab 	bl	8000e30 <chMBFetchI.constprop.15>
 8001eda:	b662      	cpsie	i
 8001edc:	4241      	negs	r1, r0
 8001ede:	4141      	adcs	r1, r0
 8001ee0:	0038      	movs	r0, r7
 8001ee2:	b2c9      	uxtb	r1, r1
 8001ee4:	f7fe fc9c 	bl	8000820 <_test_assert>
 8001ee8:	2800      	cmp	r0, #0
 8001eea:	d000      	beq.n	8001eee <mbox1_execute+0x20e>
 8001eec:	e727      	b.n	8001d3e <mbox1_execute+0x5e>
 8001eee:	9b01      	ldr	r3, [sp, #4]
 8001ef0:	3c01      	subs	r4, #1
 8001ef2:	b2d8      	uxtb	r0, r3
 8001ef4:	f7fe fcac 	bl	8000850 <test_emit_token>
 8001ef8:	2c00      	cmp	r4, #0
 8001efa:	d1ea      	bne.n	8001ed2 <mbox1_execute+0x1f2>
 8001efc:	0031      	movs	r1, r6
 8001efe:	201d      	movs	r0, #29
 8001f00:	f7fe fc66 	bl	80007d0 <_test_assert_sequence>
 8001f04:	2800      	cmp	r0, #0
 8001f06:	d000      	beq.n	8001f0a <mbox1_execute+0x22a>
 8001f08:	e719      	b.n	8001d3e <mbox1_execute+0x5e>
 8001f0a:	b672      	cpsid	i
 8001f0c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8001f0e:	301e      	adds	r0, #30
 8001f10:	1f59      	subs	r1, r3, #5
 8001f12:	424b      	negs	r3, r1
 8001f14:	4159      	adcs	r1, r3
 8001f16:	b2c9      	uxtb	r1, r1
 8001f18:	f7fe fc82 	bl	8000820 <_test_assert>
 8001f1c:	2800      	cmp	r0, #0
 8001f1e:	d000      	beq.n	8001f22 <mbox1_execute+0x242>
 8001f20:	e0e8      	b.n	80020f4 <mbox1_execute+0x414>
 8001f22:	b662      	cpsie	i
 8001f24:	b672      	cpsid	i
 8001f26:	69a9      	ldr	r1, [r5, #24]
 8001f28:	201f      	movs	r0, #31
 8001f2a:	424b      	negs	r3, r1
 8001f2c:	4159      	adcs	r1, r3
 8001f2e:	b2c9      	uxtb	r1, r1
 8001f30:	f7fe fc76 	bl	8000820 <_test_assert>
 8001f34:	2800      	cmp	r0, #0
 8001f36:	d000      	beq.n	8001f3a <mbox1_execute+0x25a>
 8001f38:	e0dc      	b.n	80020f4 <mbox1_execute+0x414>
 8001f3a:	b662      	cpsie	i
 8001f3c:	68eb      	ldr	r3, [r5, #12]
 8001f3e:	68aa      	ldr	r2, [r5, #8]
 8001f40:	2020      	movs	r0, #32
 8001f42:	1a99      	subs	r1, r3, r2
 8001f44:	424b      	negs	r3, r1
 8001f46:	4159      	adcs	r1, r3
 8001f48:	b2c9      	uxtb	r1, r1
 8001f4a:	f7fe fc69 	bl	8000820 <_test_assert>
 8001f4e:	2800      	cmp	r0, #0
 8001f50:	d000      	beq.n	8001f54 <mbox1_execute+0x274>
 8001f52:	e6f4      	b.n	8001d3e <mbox1_execute+0x5e>
 8001f54:	b672      	cpsid	i
 8001f56:	3045      	adds	r0, #69	; 0x45
 8001f58:	f7fe ff4a 	bl	8000df0 <chMBPostAheadI.constprop.17>
 8001f5c:	4241      	negs	r1, r0
 8001f5e:	4141      	adcs	r1, r0
 8001f60:	2021      	movs	r0, #33	; 0x21
 8001f62:	b2c9      	uxtb	r1, r1
 8001f64:	f7fe fc5c 	bl	8000820 <_test_assert>
 8001f68:	2800      	cmp	r0, #0
 8001f6a:	d000      	beq.n	8001f6e <mbox1_execute+0x28e>
 8001f6c:	e6e7      	b.n	8001d3e <mbox1_execute+0x5e>
 8001f6e:	3044      	adds	r0, #68	; 0x44
 8001f70:	f7fe ff3e 	bl	8000df0 <chMBPostAheadI.constprop.17>
 8001f74:	4241      	negs	r1, r0
 8001f76:	4141      	adcs	r1, r0
 8001f78:	2022      	movs	r0, #34	; 0x22
 8001f7a:	b2c9      	uxtb	r1, r1
 8001f7c:	f7fe fc50 	bl	8000820 <_test_assert>
 8001f80:	2800      	cmp	r0, #0
 8001f82:	d000      	beq.n	8001f86 <mbox1_execute+0x2a6>
 8001f84:	e6db      	b.n	8001d3e <mbox1_execute+0x5e>
 8001f86:	3043      	adds	r0, #67	; 0x43
 8001f88:	f7fe ff32 	bl	8000df0 <chMBPostAheadI.constprop.17>
 8001f8c:	4241      	negs	r1, r0
 8001f8e:	4141      	adcs	r1, r0
 8001f90:	2023      	movs	r0, #35	; 0x23
 8001f92:	b2c9      	uxtb	r1, r1
 8001f94:	f7fe fc44 	bl	8000820 <_test_assert>
 8001f98:	2800      	cmp	r0, #0
 8001f9a:	d000      	beq.n	8001f9e <mbox1_execute+0x2be>
 8001f9c:	e6cf      	b.n	8001d3e <mbox1_execute+0x5e>
 8001f9e:	3042      	adds	r0, #66	; 0x42
 8001fa0:	f7fe ff26 	bl	8000df0 <chMBPostAheadI.constprop.17>
 8001fa4:	4241      	negs	r1, r0
 8001fa6:	4141      	adcs	r1, r0
 8001fa8:	2024      	movs	r0, #36	; 0x24
 8001faa:	b2c9      	uxtb	r1, r1
 8001fac:	f7fe fc38 	bl	8000820 <_test_assert>
 8001fb0:	2800      	cmp	r0, #0
 8001fb2:	d000      	beq.n	8001fb6 <mbox1_execute+0x2d6>
 8001fb4:	e6c3      	b.n	8001d3e <mbox1_execute+0x5e>
 8001fb6:	3041      	adds	r0, #65	; 0x41
 8001fb8:	f7fe ff1a 	bl	8000df0 <chMBPostAheadI.constprop.17>
 8001fbc:	b662      	cpsie	i
 8001fbe:	4241      	negs	r1, r0
 8001fc0:	4141      	adcs	r1, r0
 8001fc2:	2025      	movs	r0, #37	; 0x25
 8001fc4:	b2c9      	uxtb	r1, r1
 8001fc6:	f7fe fc2b 	bl	8000820 <_test_assert>
 8001fca:	2800      	cmp	r0, #0
 8001fcc:	d000      	beq.n	8001fd0 <mbox1_execute+0x2f0>
 8001fce:	e6b6      	b.n	8001d3e <mbox1_execute+0x5e>
 8001fd0:	68eb      	ldr	r3, [r5, #12]
 8001fd2:	68aa      	ldr	r2, [r5, #8]
 8001fd4:	3026      	adds	r0, #38	; 0x26
 8001fd6:	1a99      	subs	r1, r3, r2
 8001fd8:	424b      	negs	r3, r1
 8001fda:	4159      	adcs	r1, r3
 8001fdc:	b2c9      	uxtb	r1, r1
 8001fde:	f7fe fc1f 	bl	8000820 <_test_assert>
 8001fe2:	2800      	cmp	r0, #0
 8001fe4:	d000      	beq.n	8001fe8 <mbox1_execute+0x308>
 8001fe6:	e6aa      	b.n	8001d3e <mbox1_execute+0x5e>
 8001fe8:	2405      	movs	r4, #5
 8001fea:	2727      	movs	r7, #39	; 0x27
 8001fec:	e002      	b.n	8001ff4 <mbox1_execute+0x314>
 8001fee:	46c0      	nop			; (mov r8, r8)
 8001ff0:	08005b00 	.word	0x08005b00
 8001ff4:	b672      	cpsid	i
 8001ff6:	a801      	add	r0, sp, #4
 8001ff8:	f7fe ff1a 	bl	8000e30 <chMBFetchI.constprop.15>
 8001ffc:	b662      	cpsie	i
 8001ffe:	4241      	negs	r1, r0
 8002000:	4141      	adcs	r1, r0
 8002002:	0038      	movs	r0, r7
 8002004:	b2c9      	uxtb	r1, r1
 8002006:	f7fe fc0b 	bl	8000820 <_test_assert>
 800200a:	2800      	cmp	r0, #0
 800200c:	d000      	beq.n	8002010 <mbox1_execute+0x330>
 800200e:	e696      	b.n	8001d3e <mbox1_execute+0x5e>
 8002010:	9b01      	ldr	r3, [sp, #4]
 8002012:	3c01      	subs	r4, #1
 8002014:	b2d8      	uxtb	r0, r3
 8002016:	f7fe fc1b 	bl	8000850 <test_emit_token>
 800201a:	2c00      	cmp	r4, #0
 800201c:	d1ea      	bne.n	8001ff4 <mbox1_execute+0x314>
 800201e:	0031      	movs	r1, r6
 8002020:	2028      	movs	r0, #40	; 0x28
 8002022:	f7fe fbd5 	bl	80007d0 <_test_assert_sequence>
 8002026:	2800      	cmp	r0, #0
 8002028:	d000      	beq.n	800202c <mbox1_execute+0x34c>
 800202a:	e688      	b.n	8001d3e <mbox1_execute+0x5e>
 800202c:	b672      	cpsid	i
 800202e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002030:	3029      	adds	r0, #41	; 0x29
 8002032:	1f59      	subs	r1, r3, #5
 8002034:	424b      	negs	r3, r1
 8002036:	4159      	adcs	r1, r3
 8002038:	b2c9      	uxtb	r1, r1
 800203a:	f7fe fbf1 	bl	8000820 <_test_assert>
 800203e:	2800      	cmp	r0, #0
 8002040:	d158      	bne.n	80020f4 <mbox1_execute+0x414>
 8002042:	b662      	cpsie	i
 8002044:	b672      	cpsid	i
 8002046:	69a9      	ldr	r1, [r5, #24]
 8002048:	202a      	movs	r0, #42	; 0x2a
 800204a:	424b      	negs	r3, r1
 800204c:	4159      	adcs	r1, r3
 800204e:	b2c9      	uxtb	r1, r1
 8002050:	f7fe fbe6 	bl	8000820 <_test_assert>
 8002054:	2800      	cmp	r0, #0
 8002056:	d14d      	bne.n	80020f4 <mbox1_execute+0x414>
 8002058:	b662      	cpsie	i
 800205a:	68eb      	ldr	r3, [r5, #12]
 800205c:	68aa      	ldr	r2, [r5, #8]
 800205e:	202b      	movs	r0, #43	; 0x2b
 8002060:	1a99      	subs	r1, r3, r2
 8002062:	424b      	negs	r3, r1
 8002064:	4159      	adcs	r1, r3
 8002066:	b2c9      	uxtb	r1, r1
 8002068:	f7fe fbda 	bl	8000820 <_test_assert>
 800206c:	2800      	cmp	r0, #0
 800206e:	d000      	beq.n	8002072 <mbox1_execute+0x392>
 8002070:	e665      	b.n	8001d3e <mbox1_execute+0x5e>
 8002072:	b672      	cpsid	i
 8002074:	0028      	movs	r0, r5
 8002076:	6829      	ldr	r1, [r5, #0]
 8002078:	686b      	ldr	r3, [r5, #4]
 800207a:	60a9      	str	r1, [r5, #8]
 800207c:	60e9      	str	r1, [r5, #12]
 800207e:	1a59      	subs	r1, r3, r1
 8002080:	1089      	asrs	r1, r1, #2
 8002082:	301c      	adds	r0, #28
 8002084:	f7fe fef4 	bl	8000e70 <chSemResetI>
 8002088:	0028      	movs	r0, r5
 800208a:	0021      	movs	r1, r4
 800208c:	3010      	adds	r0, #16
 800208e:	f7fe feef 	bl	8000e70 <chSemResetI>
 8002092:	f7ff f9fd 	bl	8001490 <chSchRescheduleS>
 8002096:	b662      	cpsie	i
 8002098:	b672      	cpsid	i
 800209a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800209c:	202c      	movs	r0, #44	; 0x2c
 800209e:	1f59      	subs	r1, r3, #5
 80020a0:	424b      	negs	r3, r1
 80020a2:	4159      	adcs	r1, r3
 80020a4:	b2c9      	uxtb	r1, r1
 80020a6:	f7fe fbbb 	bl	8000820 <_test_assert>
 80020aa:	2800      	cmp	r0, #0
 80020ac:	d122      	bne.n	80020f4 <mbox1_execute+0x414>
 80020ae:	b662      	cpsie	i
 80020b0:	b672      	cpsid	i
 80020b2:	69a9      	ldr	r1, [r5, #24]
 80020b4:	202d      	movs	r0, #45	; 0x2d
 80020b6:	424b      	negs	r3, r1
 80020b8:	4159      	adcs	r1, r3
 80020ba:	b2c9      	uxtb	r1, r1
 80020bc:	f7fe fbb0 	bl	8000820 <_test_assert>
 80020c0:	2800      	cmp	r0, #0
 80020c2:	d117      	bne.n	80020f4 <mbox1_execute+0x414>
 80020c4:	b662      	cpsie	i
 80020c6:	b672      	cpsid	i
 80020c8:	682b      	ldr	r3, [r5, #0]
 80020ca:	68aa      	ldr	r2, [r5, #8]
 80020cc:	202e      	movs	r0, #46	; 0x2e
 80020ce:	1a99      	subs	r1, r3, r2
 80020d0:	424b      	negs	r3, r1
 80020d2:	4159      	adcs	r1, r3
 80020d4:	b2c9      	uxtb	r1, r1
 80020d6:	f7fe fba3 	bl	8000820 <_test_assert>
 80020da:	2800      	cmp	r0, #0
 80020dc:	d10a      	bne.n	80020f4 <mbox1_execute+0x414>
 80020de:	b662      	cpsie	i
 80020e0:	b672      	cpsid	i
 80020e2:	68eb      	ldr	r3, [r5, #12]
 80020e4:	6829      	ldr	r1, [r5, #0]
 80020e6:	202f      	movs	r0, #47	; 0x2f
 80020e8:	1ac9      	subs	r1, r1, r3
 80020ea:	424b      	negs	r3, r1
 80020ec:	4159      	adcs	r1, r3
 80020ee:	b2c9      	uxtb	r1, r1
 80020f0:	f7fe fb96 	bl	8000820 <_test_assert>
 80020f4:	b662      	cpsie	i
 80020f6:	e622      	b.n	8001d3e <mbox1_execute+0x5e>
 80020f8:	2101      	movs	r1, #1
 80020fa:	3058      	adds	r0, #88	; 0x58
 80020fc:	f7ff fd90 	bl	8001c20 <chMBPost.constprop.20>
 8002100:	3001      	adds	r0, #1
 8002102:	4241      	negs	r1, r0
 8002104:	4141      	adcs	r1, r0
 8002106:	2004      	movs	r0, #4
 8002108:	b2c9      	uxtb	r1, r1
 800210a:	f7fe fb89 	bl	8000820 <_test_assert>
 800210e:	2800      	cmp	r0, #0
 8002110:	d000      	beq.n	8002114 <mbox1_execute+0x434>
 8002112:	e614      	b.n	8001d3e <mbox1_execute+0x5e>
 8002114:	b672      	cpsid	i
 8002116:	3058      	adds	r0, #88	; 0x58
 8002118:	f7fe fe4a 	bl	8000db0 <chMBPostI.constprop.19>
 800211c:	b662      	cpsie	i
 800211e:	3001      	adds	r0, #1
 8002120:	4241      	negs	r1, r0
 8002122:	4141      	adcs	r1, r0
 8002124:	2005      	movs	r0, #5
 8002126:	b2c9      	uxtb	r1, r1
 8002128:	f7fe fb7a 	bl	8000820 <_test_assert>
 800212c:	2800      	cmp	r0, #0
 800212e:	d000      	beq.n	8002132 <mbox1_execute+0x452>
 8002130:	e605      	b.n	8001d3e <mbox1_execute+0x5e>
 8002132:	2101      	movs	r1, #1
 8002134:	3058      	adds	r0, #88	; 0x58
 8002136:	f7ff fd93 	bl	8001c60 <chMBPostAhead.constprop.18>
 800213a:	3001      	adds	r0, #1
 800213c:	4241      	negs	r1, r0
 800213e:	4141      	adcs	r1, r0
 8002140:	2006      	movs	r0, #6
 8002142:	b2c9      	uxtb	r1, r1
 8002144:	f7fe fb6c 	bl	8000820 <_test_assert>
 8002148:	2800      	cmp	r0, #0
 800214a:	d000      	beq.n	800214e <mbox1_execute+0x46e>
 800214c:	e5f7      	b.n	8001d3e <mbox1_execute+0x5e>
 800214e:	b672      	cpsid	i
 8002150:	3058      	adds	r0, #88	; 0x58
 8002152:	f7fe fe4d 	bl	8000df0 <chMBPostAheadI.constprop.17>
 8002156:	b662      	cpsie	i
 8002158:	1c41      	adds	r1, r0, #1
 800215a:	4248      	negs	r0, r1
 800215c:	4141      	adcs	r1, r0
 800215e:	2007      	movs	r0, #7
 8002160:	b2c9      	uxtb	r1, r1
 8002162:	f7fe fb5d 	bl	8000820 <_test_assert>
 8002166:	2800      	cmp	r0, #0
 8002168:	d000      	beq.n	800216c <mbox1_execute+0x48c>
 800216a:	e5e8      	b.n	8001d3e <mbox1_execute+0x5e>
 800216c:	b672      	cpsid	i
 800216e:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002170:	3008      	adds	r0, #8
 8002172:	424b      	negs	r3, r1
 8002174:	4159      	adcs	r1, r3
 8002176:	b2c9      	uxtb	r1, r1
 8002178:	f7fe fb52 	bl	8000820 <_test_assert>
 800217c:	2800      	cmp	r0, #0
 800217e:	d1b9      	bne.n	80020f4 <mbox1_execute+0x414>
 8002180:	b662      	cpsie	i
 8002182:	b672      	cpsid	i
 8002184:	69ab      	ldr	r3, [r5, #24]
 8002186:	2009      	movs	r0, #9
 8002188:	1f59      	subs	r1, r3, #5
 800218a:	424b      	negs	r3, r1
 800218c:	4159      	adcs	r1, r3
 800218e:	b2c9      	uxtb	r1, r1
 8002190:	f7fe fb46 	bl	8000820 <_test_assert>
 8002194:	2800      	cmp	r0, #0
 8002196:	d1ad      	bne.n	80020f4 <mbox1_execute+0x414>
 8002198:	b662      	cpsie	i
 800219a:	b672      	cpsid	i
 800219c:	68eb      	ldr	r3, [r5, #12]
 800219e:	68aa      	ldr	r2, [r5, #8]
 80021a0:	200a      	movs	r0, #10
 80021a2:	1a99      	subs	r1, r3, r2
 80021a4:	424b      	negs	r3, r1
 80021a6:	4159      	adcs	r1, r3
 80021a8:	b2c9      	uxtb	r1, r1
 80021aa:	f7fe fb39 	bl	8000820 <_test_assert>
 80021ae:	2800      	cmp	r0, #0
 80021b0:	d1a0      	bne.n	80020f4 <mbox1_execute+0x414>
 80021b2:	b662      	cpsie	i
 80021b4:	2701      	movs	r7, #1
 80021b6:	2405      	movs	r4, #5
 80021b8:	427f      	negs	r7, r7
 80021ba:	260b      	movs	r6, #11
 80021bc:	e007      	b.n	80021ce <mbox1_execute+0x4ee>
 80021be:	9b01      	ldr	r3, [sp, #4]
 80021c0:	3c01      	subs	r4, #1
 80021c2:	b2d8      	uxtb	r0, r3
 80021c4:	f7fe fb44 	bl	8000850 <test_emit_token>
 80021c8:	2c00      	cmp	r4, #0
 80021ca:	d100      	bne.n	80021ce <mbox1_execute+0x4ee>
 80021cc:	e5bc      	b.n	8001d48 <mbox1_execute+0x68>
 80021ce:	0039      	movs	r1, r7
 80021d0:	a801      	add	r0, sp, #4
 80021d2:	f7ff fd65 	bl	8001ca0 <chMBFetch.constprop.16>
 80021d6:	4241      	negs	r1, r0
 80021d8:	4141      	adcs	r1, r0
 80021da:	0030      	movs	r0, r6
 80021dc:	b2c9      	uxtb	r1, r1
 80021de:	f7fe fb1f 	bl	8000820 <_test_assert>
 80021e2:	2800      	cmp	r0, #0
 80021e4:	d0eb      	beq.n	80021be <mbox1_execute+0x4de>
 80021e6:	e5aa      	b.n	8001d3e <mbox1_execute+0x5e>
	...

080021f0 <chThdEnqueueTimeoutS>:
 80021f0:	b510      	push	{r4, lr}
 80021f2:	2900      	cmp	r1, #0
 80021f4:	d00a      	beq.n	800220c <chThdEnqueueTimeoutS+0x1c>
 80021f6:	4b07      	ldr	r3, [pc, #28]	; (8002214 <chThdEnqueueTimeoutS+0x24>)
 80021f8:	699b      	ldr	r3, [r3, #24]
 80021fa:	6018      	str	r0, [r3, #0]
 80021fc:	6842      	ldr	r2, [r0, #4]
 80021fe:	605a      	str	r2, [r3, #4]
 8002200:	6013      	str	r3, [r2, #0]
 8002202:	6043      	str	r3, [r0, #4]
 8002204:	2004      	movs	r0, #4
 8002206:	f7ff fc13 	bl	8001a30 <chSchGoSleepTimeoutS>
 800220a:	bd10      	pop	{r4, pc}
 800220c:	2001      	movs	r0, #1
 800220e:	4240      	negs	r0, r0
 8002210:	e7fb      	b.n	800220a <chThdEnqueueTimeoutS+0x1a>
 8002212:	46c0      	nop			; (mov r8, r8)
 8002214:	20000738 	.word	0x20000738
	...

08002220 <chOQWriteTimeout>:
 8002220:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002222:	464f      	mov	r7, r9
 8002224:	4646      	mov	r6, r8
 8002226:	46d6      	mov	lr, sl
 8002228:	4699      	mov	r9, r3
 800222a:	69c3      	ldr	r3, [r0, #28]
 800222c:	b5c0      	push	{r6, r7, lr}
 800222e:	0004      	movs	r4, r0
 8002230:	000e      	movs	r6, r1
 8002232:	0015      	movs	r5, r2
 8002234:	4698      	mov	r8, r3
 8002236:	b672      	cpsid	i
 8002238:	2700      	movs	r7, #0
 800223a:	68a3      	ldr	r3, [r4, #8]
 800223c:	2b00      	cmp	r3, #0
 800223e:	d01d      	beq.n	800227c <chOQWriteTimeout+0x5c>
 8002240:	3b01      	subs	r3, #1
 8002242:	60a3      	str	r3, [r4, #8]
 8002244:	1c73      	adds	r3, r6, #1
 8002246:	469a      	mov	sl, r3
 8002248:	6963      	ldr	r3, [r4, #20]
 800224a:	1c5a      	adds	r2, r3, #1
 800224c:	6162      	str	r2, [r4, #20]
 800224e:	7832      	ldrb	r2, [r6, #0]
 8002250:	701a      	strb	r2, [r3, #0]
 8002252:	6963      	ldr	r3, [r4, #20]
 8002254:	6922      	ldr	r2, [r4, #16]
 8002256:	4293      	cmp	r3, r2
 8002258:	d301      	bcc.n	800225e <chOQWriteTimeout+0x3e>
 800225a:	68e3      	ldr	r3, [r4, #12]
 800225c:	6163      	str	r3, [r4, #20]
 800225e:	4643      	mov	r3, r8
 8002260:	2b00      	cmp	r3, #0
 8002262:	d001      	beq.n	8002268 <chOQWriteTimeout+0x48>
 8002264:	0020      	movs	r0, r4
 8002266:	47c0      	blx	r8
 8002268:	b662      	cpsie	i
 800226a:	3d01      	subs	r5, #1
 800226c:	3701      	adds	r7, #1
 800226e:	2d00      	cmp	r5, #0
 8002270:	d00b      	beq.n	800228a <chOQWriteTimeout+0x6a>
 8002272:	b672      	cpsid	i
 8002274:	68a3      	ldr	r3, [r4, #8]
 8002276:	4656      	mov	r6, sl
 8002278:	2b00      	cmp	r3, #0
 800227a:	d1e1      	bne.n	8002240 <chOQWriteTimeout+0x20>
 800227c:	4649      	mov	r1, r9
 800227e:	0020      	movs	r0, r4
 8002280:	f7ff ffb6 	bl	80021f0 <chThdEnqueueTimeoutS>
 8002284:	2800      	cmp	r0, #0
 8002286:	d0d8      	beq.n	800223a <chOQWriteTimeout+0x1a>
 8002288:	b662      	cpsie	i
 800228a:	0038      	movs	r0, r7
 800228c:	bc1c      	pop	{r2, r3, r4}
 800228e:	4690      	mov	r8, r2
 8002290:	4699      	mov	r9, r3
 8002292:	46a2      	mov	sl, r4
 8002294:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002296:	46c0      	nop			; (mov r8, r8)
	...

080022a0 <writet>:
 80022a0:	b510      	push	{r4, lr}
 80022a2:	3030      	adds	r0, #48	; 0x30
 80022a4:	f7ff ffbc 	bl	8002220 <chOQWriteTimeout>
 80022a8:	bd10      	pop	{r4, pc}
 80022aa:	46c0      	nop			; (mov r8, r8)
 80022ac:	0000      	movs	r0, r0
	...

080022b0 <write>:
 80022b0:	2301      	movs	r3, #1
 80022b2:	b510      	push	{r4, lr}
 80022b4:	3030      	adds	r0, #48	; 0x30
 80022b6:	425b      	negs	r3, r3
 80022b8:	f7ff ffb2 	bl	8002220 <chOQWriteTimeout>
 80022bc:	bd10      	pop	{r4, pc}
 80022be:	46c0      	nop			; (mov r8, r8)

080022c0 <chOQPutTimeout>:
 80022c0:	b570      	push	{r4, r5, r6, lr}
 80022c2:	0004      	movs	r4, r0
 80022c4:	000e      	movs	r6, r1
 80022c6:	0015      	movs	r5, r2
 80022c8:	b672      	cpsid	i
 80022ca:	e005      	b.n	80022d8 <chOQPutTimeout+0x18>
 80022cc:	0029      	movs	r1, r5
 80022ce:	0020      	movs	r0, r4
 80022d0:	f7ff ff8e 	bl	80021f0 <chThdEnqueueTimeoutS>
 80022d4:	2800      	cmp	r0, #0
 80022d6:	db16      	blt.n	8002306 <chOQPutTimeout+0x46>
 80022d8:	68a3      	ldr	r3, [r4, #8]
 80022da:	2b00      	cmp	r3, #0
 80022dc:	d0f6      	beq.n	80022cc <chOQPutTimeout+0xc>
 80022de:	3b01      	subs	r3, #1
 80022e0:	60a3      	str	r3, [r4, #8]
 80022e2:	6963      	ldr	r3, [r4, #20]
 80022e4:	1c5a      	adds	r2, r3, #1
 80022e6:	6162      	str	r2, [r4, #20]
 80022e8:	701e      	strb	r6, [r3, #0]
 80022ea:	6963      	ldr	r3, [r4, #20]
 80022ec:	6922      	ldr	r2, [r4, #16]
 80022ee:	4293      	cmp	r3, r2
 80022f0:	d301      	bcc.n	80022f6 <chOQPutTimeout+0x36>
 80022f2:	68e3      	ldr	r3, [r4, #12]
 80022f4:	6163      	str	r3, [r4, #20]
 80022f6:	69e3      	ldr	r3, [r4, #28]
 80022f8:	2b00      	cmp	r3, #0
 80022fa:	d001      	beq.n	8002300 <chOQPutTimeout+0x40>
 80022fc:	0020      	movs	r0, r4
 80022fe:	4798      	blx	r3
 8002300:	b662      	cpsie	i
 8002302:	2000      	movs	r0, #0
 8002304:	bd70      	pop	{r4, r5, r6, pc}
 8002306:	b662      	cpsie	i
 8002308:	e7fc      	b.n	8002304 <chOQPutTimeout+0x44>
 800230a:	46c0      	nop			; (mov r8, r8)
 800230c:	0000      	movs	r0, r0
	...

08002310 <thread2.lto_priv.76>:
 8002310:	22fa      	movs	r2, #250	; 0xfa
 8002312:	b510      	push	{r4, lr}
 8002314:	00d2      	lsls	r2, r2, #3
 8002316:	2100      	movs	r1, #0
 8002318:	4801      	ldr	r0, [pc, #4]	; (8002320 <thread2.lto_priv.76+0x10>)
 800231a:	f7ff ffd1 	bl	80022c0 <chOQPutTimeout>
 800231e:	bd10      	pop	{r4, pc}
 8002320:	20000688 	.word	0x20000688
	...

08002330 <putt>:
 8002330:	b510      	push	{r4, lr}
 8002332:	3030      	adds	r0, #48	; 0x30
 8002334:	f7ff ffc4 	bl	80022c0 <chOQPutTimeout>
 8002338:	bd10      	pop	{r4, pc}
 800233a:	46c0      	nop			; (mov r8, r8)
 800233c:	0000      	movs	r0, r0
	...

08002340 <put>:
 8002340:	2201      	movs	r2, #1
 8002342:	b510      	push	{r4, lr}
 8002344:	3030      	adds	r0, #48	; 0x30
 8002346:	4252      	negs	r2, r2
 8002348:	f7ff ffba 	bl	80022c0 <chOQPutTimeout>
 800234c:	bd10      	pop	{r4, pc}
 800234e:	46c0      	nop			; (mov r8, r8)

08002350 <chIQReadTimeout>:
 8002350:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002352:	46ce      	mov	lr, r9
 8002354:	4647      	mov	r7, r8
 8002356:	0004      	movs	r4, r0
 8002358:	b580      	push	{r7, lr}
 800235a:	4689      	mov	r9, r1
 800235c:	4690      	mov	r8, r2
 800235e:	001d      	movs	r5, r3
 8002360:	69c7      	ldr	r7, [r0, #28]
 8002362:	b672      	cpsid	i
 8002364:	2600      	movs	r6, #0
 8002366:	2f00      	cmp	r7, #0
 8002368:	d008      	beq.n	800237c <chIQReadTimeout+0x2c>
 800236a:	0020      	movs	r0, r4
 800236c:	47b8      	blx	r7
 800236e:	e005      	b.n	800237c <chIQReadTimeout+0x2c>
 8002370:	0029      	movs	r1, r5
 8002372:	0020      	movs	r0, r4
 8002374:	f7ff ff3c 	bl	80021f0 <chThdEnqueueTimeoutS>
 8002378:	2800      	cmp	r0, #0
 800237a:	d116      	bne.n	80023aa <chIQReadTimeout+0x5a>
 800237c:	68a3      	ldr	r3, [r4, #8]
 800237e:	2b00      	cmp	r3, #0
 8002380:	d0f6      	beq.n	8002370 <chIQReadTimeout+0x20>
 8002382:	3b01      	subs	r3, #1
 8002384:	60a3      	str	r3, [r4, #8]
 8002386:	69a3      	ldr	r3, [r4, #24]
 8002388:	1c5a      	adds	r2, r3, #1
 800238a:	61a2      	str	r2, [r4, #24]
 800238c:	464a      	mov	r2, r9
 800238e:	781b      	ldrb	r3, [r3, #0]
 8002390:	5593      	strb	r3, [r2, r6]
 8002392:	69a3      	ldr	r3, [r4, #24]
 8002394:	6922      	ldr	r2, [r4, #16]
 8002396:	4293      	cmp	r3, r2
 8002398:	d301      	bcc.n	800239e <chIQReadTimeout+0x4e>
 800239a:	68e3      	ldr	r3, [r4, #12]
 800239c:	61a3      	str	r3, [r4, #24]
 800239e:	b662      	cpsie	i
 80023a0:	3601      	adds	r6, #1
 80023a2:	45b0      	cmp	r8, r6
 80023a4:	d002      	beq.n	80023ac <chIQReadTimeout+0x5c>
 80023a6:	b672      	cpsid	i
 80023a8:	e7dd      	b.n	8002366 <chIQReadTimeout+0x16>
 80023aa:	b662      	cpsie	i
 80023ac:	0030      	movs	r0, r6
 80023ae:	bc0c      	pop	{r2, r3}
 80023b0:	4690      	mov	r8, r2
 80023b2:	4699      	mov	r9, r3
 80023b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80023b6:	46c0      	nop			; (mov r8, r8)
	...

080023c0 <readt>:
 80023c0:	b510      	push	{r4, lr}
 80023c2:	300c      	adds	r0, #12
 80023c4:	f7ff ffc4 	bl	8002350 <chIQReadTimeout>
 80023c8:	bd10      	pop	{r4, pc}
 80023ca:	46c0      	nop			; (mov r8, r8)
 80023cc:	0000      	movs	r0, r0
	...

080023d0 <read>:
 80023d0:	2301      	movs	r3, #1
 80023d2:	b510      	push	{r4, lr}
 80023d4:	300c      	adds	r0, #12
 80023d6:	425b      	negs	r3, r3
 80023d8:	f7ff ffba 	bl	8002350 <chIQReadTimeout>
 80023dc:	bd10      	pop	{r4, pc}
 80023de:	46c0      	nop			; (mov r8, r8)

080023e0 <chIQGetTimeout>:
 80023e0:	b570      	push	{r4, r5, r6, lr}
 80023e2:	0004      	movs	r4, r0
 80023e4:	000d      	movs	r5, r1
 80023e6:	b672      	cpsid	i
 80023e8:	69c3      	ldr	r3, [r0, #28]
 80023ea:	2b00      	cmp	r3, #0
 80023ec:	d007      	beq.n	80023fe <chIQGetTimeout+0x1e>
 80023ee:	4798      	blx	r3
 80023f0:	e005      	b.n	80023fe <chIQGetTimeout+0x1e>
 80023f2:	0029      	movs	r1, r5
 80023f4:	0020      	movs	r0, r4
 80023f6:	f7ff fefb 	bl	80021f0 <chThdEnqueueTimeoutS>
 80023fa:	2800      	cmp	r0, #0
 80023fc:	db0d      	blt.n	800241a <chIQGetTimeout+0x3a>
 80023fe:	68a3      	ldr	r3, [r4, #8]
 8002400:	2b00      	cmp	r3, #0
 8002402:	d0f6      	beq.n	80023f2 <chIQGetTimeout+0x12>
 8002404:	69a2      	ldr	r2, [r4, #24]
 8002406:	3b01      	subs	r3, #1
 8002408:	60a3      	str	r3, [r4, #8]
 800240a:	1c53      	adds	r3, r2, #1
 800240c:	61a3      	str	r3, [r4, #24]
 800240e:	7810      	ldrb	r0, [r2, #0]
 8002410:	6922      	ldr	r2, [r4, #16]
 8002412:	4293      	cmp	r3, r2
 8002414:	d301      	bcc.n	800241a <chIQGetTimeout+0x3a>
 8002416:	68e3      	ldr	r3, [r4, #12]
 8002418:	61a3      	str	r3, [r4, #24]
 800241a:	b662      	cpsie	i
 800241c:	bd70      	pop	{r4, r5, r6, pc}
 800241e:	46c0      	nop			; (mov r8, r8)

08002420 <thread1.lto_priv.70>:
 8002420:	21fa      	movs	r1, #250	; 0xfa
 8002422:	b510      	push	{r4, lr}
 8002424:	00c9      	lsls	r1, r1, #3
 8002426:	4802      	ldr	r0, [pc, #8]	; (8002430 <thread1.lto_priv.70+0x10>)
 8002428:	f7ff ffda 	bl	80023e0 <chIQGetTimeout>
 800242c:	bd10      	pop	{r4, pc}
 800242e:	46c0      	nop			; (mov r8, r8)
 8002430:	20000610 	.word	0x20000610
	...

08002440 <gett>:
 8002440:	b510      	push	{r4, lr}
 8002442:	300c      	adds	r0, #12
 8002444:	f7ff ffcc 	bl	80023e0 <chIQGetTimeout>
 8002448:	bd10      	pop	{r4, pc}
 800244a:	46c0      	nop			; (mov r8, r8)
 800244c:	0000      	movs	r0, r0
	...

08002450 <get>:
 8002450:	2101      	movs	r1, #1
 8002452:	b510      	push	{r4, lr}
 8002454:	300c      	adds	r0, #12
 8002456:	4249      	negs	r1, r1
 8002458:	f7ff ffc2 	bl	80023e0 <chIQGetTimeout>
 800245c:	bd10      	pop	{r4, pc}
 800245e:	46c0      	nop			; (mov r8, r8)

08002460 <chThdSleep>:
 8002460:	b510      	push	{r4, lr}
 8002462:	0001      	movs	r1, r0
 8002464:	b672      	cpsid	i
 8002466:	2008      	movs	r0, #8
 8002468:	f7ff fae2 	bl	8001a30 <chSchGoSleepTimeoutS>
 800246c:	b662      	cpsie	i
 800246e:	bd10      	pop	{r4, pc}

08002470 <Thread1>:
 8002470:	b570      	push	{r4, r5, r6, lr}
 8002472:	2480      	movs	r4, #128	; 0x80
 8002474:	4b07      	ldr	r3, [pc, #28]	; (8002494 <Thread1+0x24>)
 8002476:	4a08      	ldr	r2, [pc, #32]	; (8002498 <Thread1+0x28>)
 8002478:	699b      	ldr	r3, [r3, #24]
 800247a:	4d08      	ldr	r5, [pc, #32]	; (800249c <Thread1+0x2c>)
 800247c:	619a      	str	r2, [r3, #24]
 800247e:	0064      	lsls	r4, r4, #1
 8002480:	836c      	strh	r4, [r5, #26]
 8002482:	4807      	ldr	r0, [pc, #28]	; (80024a0 <Thread1+0x30>)
 8002484:	f7ff ffec 	bl	8002460 <chThdSleep>
 8002488:	832c      	strh	r4, [r5, #24]
 800248a:	4805      	ldr	r0, [pc, #20]	; (80024a0 <Thread1+0x30>)
 800248c:	f7ff ffe8 	bl	8002460 <chThdSleep>
 8002490:	e7f6      	b.n	8002480 <Thread1+0x10>
 8002492:	46c0      	nop			; (mov r8, r8)
 8002494:	20000738 	.word	0x20000738
 8002498:	080056f0 	.word	0x080056f0
 800249c:	48000800 	.word	0x48000800
 80024a0:	00001388 	.word	0x00001388
	...

080024b0 <Thread2>:
 80024b0:	b570      	push	{r4, r5, r6, lr}
 80024b2:	2480      	movs	r4, #128	; 0x80
 80024b4:	4b07      	ldr	r3, [pc, #28]	; (80024d4 <Thread2+0x24>)
 80024b6:	4a08      	ldr	r2, [pc, #32]	; (80024d8 <Thread2+0x28>)
 80024b8:	699b      	ldr	r3, [r3, #24]
 80024ba:	4d08      	ldr	r5, [pc, #32]	; (80024dc <Thread2+0x2c>)
 80024bc:	619a      	str	r2, [r3, #24]
 80024be:	00a4      	lsls	r4, r4, #2
 80024c0:	836c      	strh	r4, [r5, #26]
 80024c2:	4807      	ldr	r0, [pc, #28]	; (80024e0 <Thread2+0x30>)
 80024c4:	f7ff ffcc 	bl	8002460 <chThdSleep>
 80024c8:	832c      	strh	r4, [r5, #24]
 80024ca:	4805      	ldr	r0, [pc, #20]	; (80024e0 <Thread2+0x30>)
 80024cc:	f7ff ffc8 	bl	8002460 <chThdSleep>
 80024d0:	e7f6      	b.n	80024c0 <Thread2+0x10>
 80024d2:	46c0      	nop			; (mov r8, r8)
 80024d4:	20000738 	.word	0x20000738
 80024d8:	08005700 	.word	0x08005700
 80024dc:	48000800 	.word	0x48000800
 80024e0:	000009c4 	.word	0x000009c4
	...

080024f0 <sys1_execute>:
 80024f0:	b500      	push	{lr}
 80024f2:	b087      	sub	sp, #28
 80024f4:	f7fe fd74 	bl	8000fe0 <chSysGetStatusAndLockX>
 80024f8:	07c3      	lsls	r3, r0, #31
 80024fa:	d401      	bmi.n	8002500 <sys1_execute+0x10>
 80024fc:	f7ff f8c0 	bl	8001680 <chSysRestoreStatusX.part.3>
 8002500:	b672      	cpsid	i
 8002502:	f7fe fd6d 	bl	8000fe0 <chSysGetStatusAndLockX>
 8002506:	07c3      	lsls	r3, r0, #31
 8002508:	d401      	bmi.n	800250e <sys1_execute+0x1e>
 800250a:	f7ff f8b9 	bl	8001680 <chSysRestoreStatusX.part.3>
 800250e:	b662      	cpsie	i
 8002510:	f3ef 8310 	mrs	r3, PRIMASK
 8002514:	07db      	lsls	r3, r3, #31
 8002516:	d400      	bmi.n	800251a <sys1_execute+0x2a>
 8002518:	b672      	cpsid	i
 800251a:	f3ef 8310 	mrs	r3, PRIMASK
 800251e:	07db      	lsls	r3, r3, #31
 8002520:	d400      	bmi.n	8002524 <sys1_execute+0x34>
 8002522:	b672      	cpsid	i
 8002524:	b662      	cpsie	i
 8002526:	b672      	cpsid	i
 8002528:	f3ef 8310 	mrs	r3, PRIMASK
 800252c:	07db      	lsls	r3, r3, #31
 800252e:	d500      	bpl.n	8002532 <sys1_execute+0x42>
 8002530:	b662      	cpsie	i
 8002532:	f3ef 8310 	mrs	r3, PRIMASK
 8002536:	07db      	lsls	r3, r3, #31
 8002538:	d500      	bpl.n	800253c <sys1_execute+0x4c>
 800253a:	b662      	cpsie	i
 800253c:	2300      	movs	r3, #0
 800253e:	9304      	str	r3, [sp, #16]
 8002540:	b672      	cpsid	i
 8002542:	9b04      	ldr	r3, [sp, #16]
 8002544:	2b00      	cmp	r3, #0
 8002546:	d002      	beq.n	800254e <sys1_execute+0x5e>
 8002548:	a801      	add	r0, sp, #4
 800254a:	f7fe fca9 	bl	8000ea0 <chVTDoResetI>
 800254e:	2300      	movs	r3, #0
 8002550:	4a09      	ldr	r2, [pc, #36]	; (8002578 <sys1_execute+0x88>)
 8002552:	2101      	movs	r1, #1
 8002554:	a801      	add	r0, sp, #4
 8002556:	f7fe fce3 	bl	8000f20 <chVTDoSetI>
 800255a:	b662      	cpsie	i
 800255c:	200a      	movs	r0, #10
 800255e:	f7ff ff7f 	bl	8002460 <chThdSleep>
 8002562:	b672      	cpsid	i
 8002564:	9904      	ldr	r1, [sp, #16]
 8002566:	b662      	cpsie	i
 8002568:	424b      	negs	r3, r1
 800256a:	4159      	adcs	r1, r3
 800256c:	2001      	movs	r0, #1
 800256e:	b2c9      	uxtb	r1, r1
 8002570:	f7fe f956 	bl	8000820 <_test_assert>
 8002574:	b007      	add	sp, #28
 8002576:	bd00      	pop	{pc}
 8002578:	080016a1 	.word	0x080016a1
 800257c:	00000000 	.word	0x00000000

08002580 <thread1.lto_priv.69>:
 8002580:	b510      	push	{r4, lr}
 8002582:	0004      	movs	r4, r0
 8002584:	20fa      	movs	r0, #250	; 0xfa
 8002586:	0040      	lsls	r0, r0, #1
 8002588:	f7ff ff6a 	bl	8002460 <chThdSleep>
 800258c:	b672      	cpsid	i
 800258e:	2101      	movs	r1, #1
 8002590:	0020      	movs	r0, r4
 8002592:	f7fe fb95 	bl	8000cc0 <chEvtSignalI>
 8002596:	f7fe ff7b 	bl	8001490 <chSchRescheduleS>
 800259a:	b662      	cpsie	i
 800259c:	bd10      	pop	{r4, pc}
 800259e:	46c0      	nop			; (mov r8, r8)

080025a0 <thread2.lto_priv.75>:
 80025a0:	b510      	push	{r4, lr}
 80025a2:	b672      	cpsid	i
 80025a4:	2100      	movs	r1, #0
 80025a6:	4809      	ldr	r0, [pc, #36]	; (80025cc <thread2.lto_priv.75+0x2c>)
 80025a8:	f7fe fbaa 	bl	8000d00 <chEvtBroadcastFlagsI>
 80025ac:	f7fe ff70 	bl	8001490 <chSchRescheduleS>
 80025b0:	b662      	cpsie	i
 80025b2:	20fa      	movs	r0, #250	; 0xfa
 80025b4:	0040      	lsls	r0, r0, #1
 80025b6:	f7ff ff53 	bl	8002460 <chThdSleep>
 80025ba:	b672      	cpsid	i
 80025bc:	2100      	movs	r1, #0
 80025be:	4804      	ldr	r0, [pc, #16]	; (80025d0 <thread2.lto_priv.75+0x30>)
 80025c0:	f7fe fb9e 	bl	8000d00 <chEvtBroadcastFlagsI>
 80025c4:	f7fe ff64 	bl	8001490 <chSchRescheduleS>
 80025c8:	b662      	cpsie	i
 80025ca:	bd10      	pop	{r4, pc}
 80025cc:	20000608 	.word	0x20000608
 80025d0:	2000060c 	.word	0x2000060c
	...

080025e0 <thread2.lto_priv.74>:
 80025e0:	20fa      	movs	r0, #250	; 0xfa
 80025e2:	b510      	push	{r4, lr}
 80025e4:	0040      	lsls	r0, r0, #1
 80025e6:	f7ff ff3b 	bl	8002460 <chThdSleep>
 80025ea:	b672      	cpsid	i
 80025ec:	4803      	ldr	r0, [pc, #12]	; (80025fc <thread2.lto_priv.74+0x1c>)
 80025ee:	f7fe fbc7 	bl	8000d80 <chSemSignalI>
 80025f2:	f7fe ff4d 	bl	8001490 <chSchRescheduleS>
 80025f6:	b662      	cpsie	i
 80025f8:	bd10      	pop	{r4, pc}
 80025fa:	46c0      	nop			; (mov r8, r8)
 80025fc:	200006ac 	.word	0x200006ac

08002600 <test_wait_tick>:
 8002600:	b510      	push	{r4, lr}
 8002602:	2001      	movs	r0, #1
 8002604:	f7ff ff2c 	bl	8002460 <chThdSleep>
 8002608:	b672      	cpsid	i
 800260a:	2380      	movs	r3, #128	; 0x80
 800260c:	05db      	lsls	r3, r3, #23
 800260e:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8002610:	b662      	cpsie	i
 8002612:	bd10      	pop	{r4, pc}
	...

08002620 <bmk10_execute>:
 8002620:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002622:	46c6      	mov	lr, r8
 8002624:	b500      	push	{lr}
 8002626:	f7ff ffeb 	bl	8002600 <test_wait_tick>
 800262a:	f7fe fcb9 	bl	8000fa0 <test_start_timer.constprop.1>
 800262e:	4b15      	ldr	r3, [pc, #84]	; (8002684 <bmk10_execute+0x64>)
 8002630:	2400      	movs	r4, #0
 8002632:	4698      	mov	r8, r3
 8002634:	4f14      	ldr	r7, [pc, #80]	; (8002688 <bmk10_execute+0x68>)
 8002636:	4e15      	ldr	r6, [pc, #84]	; (800268c <bmk10_execute+0x6c>)
 8002638:	4d15      	ldr	r5, [pc, #84]	; (8002690 <bmk10_execute+0x70>)
 800263a:	b672      	cpsid	i
 800263c:	2300      	movs	r3, #0
 800263e:	003a      	movs	r2, r7
 8002640:	0030      	movs	r0, r6
 8002642:	2101      	movs	r1, #1
 8002644:	f7fe fc6c 	bl	8000f20 <chVTDoSetI>
 8002648:	2300      	movs	r3, #0
 800264a:	003a      	movs	r2, r7
 800264c:	4911      	ldr	r1, [pc, #68]	; (8002694 <bmk10_execute+0x74>)
 800264e:	0028      	movs	r0, r5
 8002650:	f7fe fc66 	bl	8000f20 <chVTDoSetI>
 8002654:	0030      	movs	r0, r6
 8002656:	f7fe fc23 	bl	8000ea0 <chVTDoResetI>
 800265a:	0028      	movs	r0, r5
 800265c:	f7fe fc20 	bl	8000ea0 <chVTDoResetI>
 8002660:	b662      	cpsie	i
 8002662:	4643      	mov	r3, r8
 8002664:	781b      	ldrb	r3, [r3, #0]
 8002666:	3401      	adds	r4, #1
 8002668:	2b00      	cmp	r3, #0
 800266a:	d0e6      	beq.n	800263a <bmk10_execute+0x1a>
 800266c:	480a      	ldr	r0, [pc, #40]	; (8002698 <bmk10_execute+0x78>)
 800266e:	f7fe f947 	bl	8000900 <test_print>
 8002672:	0060      	lsls	r0, r4, #1
 8002674:	f7fe f84c 	bl	8000710 <test_printn>
 8002678:	4808      	ldr	r0, [pc, #32]	; (800269c <bmk10_execute+0x7c>)
 800267a:	f7fe f921 	bl	80008c0 <test_println>
 800267e:	bc04      	pop	{r2}
 8002680:	4690      	mov	r8, r2
 8002682:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002684:	20000fd0 	.word	0x20000fd0
 8002688:	08000431 	.word	0x08000431
 800268c:	20001010 	.word	0x20001010
 8002690:	20001024 	.word	0x20001024
 8002694:	00002710 	.word	0x00002710
 8002698:	08005730 	.word	0x08005730
 800269c:	08005740 	.word	0x08005740

080026a0 <bmk9_execute>:
 80026a0:	2200      	movs	r2, #0
 80026a2:	b570      	push	{r4, r5, r6, lr}
 80026a4:	2500      	movs	r5, #0
 80026a6:	4c22      	ldr	r4, [pc, #136]	; (8002730 <bmk9_execute+0x90>)
 80026a8:	4b22      	ldr	r3, [pc, #136]	; (8002734 <bmk9_execute+0x94>)
 80026aa:	6024      	str	r4, [r4, #0]
 80026ac:	60e3      	str	r3, [r4, #12]
 80026ae:	61a3      	str	r3, [r4, #24]
 80026b0:	6163      	str	r3, [r4, #20]
 80026b2:	6064      	str	r4, [r4, #4]
 80026b4:	3310      	adds	r3, #16
 80026b6:	60a2      	str	r2, [r4, #8]
 80026b8:	6123      	str	r3, [r4, #16]
 80026ba:	61e2      	str	r2, [r4, #28]
 80026bc:	6222      	str	r2, [r4, #32]
 80026be:	f7ff ff9f 	bl	8002600 <test_wait_tick>
 80026c2:	f7fe fc6d 	bl	8000fa0 <test_start_timer.constprop.1>
 80026c6:	4e1c      	ldr	r6, [pc, #112]	; (8002738 <bmk9_execute+0x98>)
 80026c8:	b672      	cpsid	i
 80026ca:	2100      	movs	r1, #0
 80026cc:	0020      	movs	r0, r4
 80026ce:	f7fe faa7 	bl	8000c20 <chIQPutI>
 80026d2:	2101      	movs	r1, #1
 80026d4:	0020      	movs	r0, r4
 80026d6:	f7fe faa3 	bl	8000c20 <chIQPutI>
 80026da:	2102      	movs	r1, #2
 80026dc:	0020      	movs	r0, r4
 80026de:	f7fe fa9f 	bl	8000c20 <chIQPutI>
 80026e2:	2103      	movs	r1, #3
 80026e4:	0020      	movs	r0, r4
 80026e6:	f7fe fa9b 	bl	8000c20 <chIQPutI>
 80026ea:	b662      	cpsie	i
 80026ec:	2101      	movs	r1, #1
 80026ee:	0020      	movs	r0, r4
 80026f0:	4249      	negs	r1, r1
 80026f2:	f7ff fe75 	bl	80023e0 <chIQGetTimeout>
 80026f6:	2101      	movs	r1, #1
 80026f8:	0020      	movs	r0, r4
 80026fa:	4249      	negs	r1, r1
 80026fc:	f7ff fe70 	bl	80023e0 <chIQGetTimeout>
 8002700:	2101      	movs	r1, #1
 8002702:	0020      	movs	r0, r4
 8002704:	4249      	negs	r1, r1
 8002706:	f7ff fe6b 	bl	80023e0 <chIQGetTimeout>
 800270a:	2101      	movs	r1, #1
 800270c:	0020      	movs	r0, r4
 800270e:	4249      	negs	r1, r1
 8002710:	f7ff fe66 	bl	80023e0 <chIQGetTimeout>
 8002714:	7833      	ldrb	r3, [r6, #0]
 8002716:	3501      	adds	r5, #1
 8002718:	2b00      	cmp	r3, #0
 800271a:	d0d5      	beq.n	80026c8 <bmk9_execute+0x28>
 800271c:	4807      	ldr	r0, [pc, #28]	; (800273c <bmk9_execute+0x9c>)
 800271e:	f7fe f8ef 	bl	8000900 <test_print>
 8002722:	00a8      	lsls	r0, r5, #2
 8002724:	f7fd fff4 	bl	8000710 <test_printn>
 8002728:	4805      	ldr	r0, [pc, #20]	; (8002740 <bmk9_execute+0xa0>)
 800272a:	f7fe f8c9 	bl	80008c0 <test_println>
 800272e:	bd70      	pop	{r4, r5, r6, pc}
 8002730:	200008e8 	.word	0x200008e8
 8002734:	200008d8 	.word	0x200008d8
 8002738:	20000fd0 	.word	0x20000fd0
 800273c:	08005730 	.word	0x08005730
 8002740:	08005870 	.word	0x08005870
	...

08002750 <bmk6_execute>:
 8002750:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002752:	46ce      	mov	lr, r9
 8002754:	4647      	mov	r7, r8
 8002756:	b580      	push	{r7, lr}
 8002758:	4b14      	ldr	r3, [pc, #80]	; (80027ac <bmk6_execute+0x5c>)
 800275a:	b083      	sub	sp, #12
 800275c:	699b      	ldr	r3, [r3, #24]
 800275e:	2400      	movs	r4, #0
 8002760:	689d      	ldr	r5, [r3, #8]
 8002762:	f7ff ff4d 	bl	8002600 <test_wait_tick>
 8002766:	f7fe fc1b 	bl	8000fa0 <test_start_timer.constprop.1>
 800276a:	4b11      	ldr	r3, [pc, #68]	; (80027b0 <bmk6_execute+0x60>)
 800276c:	2600      	movs	r6, #0
 800276e:	4699      	mov	r9, r3
 8002770:	4b10      	ldr	r3, [pc, #64]	; (80027b4 <bmk6_execute+0x64>)
 8002772:	4f11      	ldr	r7, [pc, #68]	; (80027b8 <bmk6_execute+0x68>)
 8002774:	4698      	mov	r8, r3
 8002776:	3501      	adds	r5, #1
 8002778:	21a4      	movs	r1, #164	; 0xa4
 800277a:	464b      	mov	r3, r9
 800277c:	9600      	str	r6, [sp, #0]
 800277e:	002a      	movs	r2, r5
 8002780:	0049      	lsls	r1, r1, #1
 8002782:	4640      	mov	r0, r8
 8002784:	f7ff f85c 	bl	8001840 <chThdCreateStatic>
 8002788:	783b      	ldrb	r3, [r7, #0]
 800278a:	3401      	adds	r4, #1
 800278c:	2b00      	cmp	r3, #0
 800278e:	d0f3      	beq.n	8002778 <bmk6_execute+0x28>
 8002790:	480a      	ldr	r0, [pc, #40]	; (80027bc <bmk6_execute+0x6c>)
 8002792:	f7fe f8b5 	bl	8000900 <test_print>
 8002796:	0020      	movs	r0, r4
 8002798:	f7fd ffba 	bl	8000710 <test_printn>
 800279c:	4808      	ldr	r0, [pc, #32]	; (80027c0 <bmk6_execute+0x70>)
 800279e:	f7fe f88f 	bl	80008c0 <test_println>
 80027a2:	b003      	add	sp, #12
 80027a4:	bc0c      	pop	{r2, r3}
 80027a6:	4690      	mov	r8, r2
 80027a8:	4699      	mov	r9, r3
 80027aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80027ac:	20000738 	.word	0x20000738
 80027b0:	08005691 	.word	0x08005691
 80027b4:	20000940 	.word	0x20000940
 80027b8:	20000fd0 	.word	0x20000fd0
 80027bc:	08005730 	.word	0x08005730
 80027c0:	08005830 	.word	0x08005830
	...

080027d0 <thd4_execute>:
 80027d0:	b570      	push	{r4, r5, r6, lr}
 80027d2:	f7ff ff15 	bl	8002600 <test_wait_tick>
 80027d6:	b672      	cpsid	i
 80027d8:	2580      	movs	r5, #128	; 0x80
 80027da:	05ed      	lsls	r5, r5, #23
 80027dc:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 80027de:	b662      	cpsie	i
 80027e0:	20fa      	movs	r0, #250	; 0xfa
 80027e2:	0080      	lsls	r0, r0, #2
 80027e4:	f7ff fe3c 	bl	8002460 <chThdSleep>
 80027e8:	4b1e      	ldr	r3, [pc, #120]	; (8002864 <thd4_execute+0x94>)
 80027ea:	2001      	movs	r0, #1
 80027ec:	18e2      	adds	r2, r4, r3
 80027ee:	3b03      	subs	r3, #3
 80027f0:	18e1      	adds	r1, r4, r3
 80027f2:	f7fd ffcd 	bl	8000790 <_test_assert_time_window>
 80027f6:	2800      	cmp	r0, #0
 80027f8:	d000      	beq.n	80027fc <thd4_execute+0x2c>
 80027fa:	bd70      	pop	{r4, r5, r6, pc}
 80027fc:	b672      	cpsid	i
 80027fe:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002800:	b662      	cpsie	i
 8002802:	20fa      	movs	r0, #250	; 0xfa
 8002804:	0080      	lsls	r0, r0, #2
 8002806:	f7ff fe2b 	bl	8002460 <chThdSleep>
 800280a:	4b16      	ldr	r3, [pc, #88]	; (8002864 <thd4_execute+0x94>)
 800280c:	2002      	movs	r0, #2
 800280e:	18e2      	adds	r2, r4, r3
 8002810:	3b03      	subs	r3, #3
 8002812:	18e1      	adds	r1, r4, r3
 8002814:	f7fd ffbc 	bl	8000790 <_test_assert_time_window>
 8002818:	2800      	cmp	r0, #0
 800281a:	d1ee      	bne.n	80027fa <thd4_execute+0x2a>
 800281c:	b672      	cpsid	i
 800281e:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002820:	b662      	cpsie	i
 8002822:	4811      	ldr	r0, [pc, #68]	; (8002868 <thd4_execute+0x98>)
 8002824:	f7ff fe1c 	bl	8002460 <chThdSleep>
 8002828:	4b10      	ldr	r3, [pc, #64]	; (800286c <thd4_execute+0x9c>)
 800282a:	2003      	movs	r0, #3
 800282c:	18e2      	adds	r2, r4, r3
 800282e:	4b0e      	ldr	r3, [pc, #56]	; (8002868 <thd4_execute+0x98>)
 8002830:	18e1      	adds	r1, r4, r3
 8002832:	f7fd ffad 	bl	8000790 <_test_assert_time_window>
 8002836:	2800      	cmp	r0, #0
 8002838:	d1df      	bne.n	80027fa <thd4_execute+0x2a>
 800283a:	b672      	cpsid	i
 800283c:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 800283e:	b662      	cpsie	i
 8002840:	23fa      	movs	r3, #250	; 0xfa
 8002842:	009b      	lsls	r3, r3, #2
 8002844:	18e6      	adds	r6, r4, r3
 8002846:	b672      	cpsid	i
 8002848:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800284a:	1a71      	subs	r1, r6, r1
 800284c:	d002      	beq.n	8002854 <thd4_execute+0x84>
 800284e:	3008      	adds	r0, #8
 8002850:	f7ff f8ee 	bl	8001a30 <chSchGoSleepTimeoutS>
 8002854:	b662      	cpsie	i
 8002856:	4b03      	ldr	r3, [pc, #12]	; (8002864 <thd4_execute+0x94>)
 8002858:	0031      	movs	r1, r6
 800285a:	18e2      	adds	r2, r4, r3
 800285c:	2004      	movs	r0, #4
 800285e:	f7fd ff97 	bl	8000790 <_test_assert_time_window>
 8002862:	e7ca      	b.n	80027fa <thd4_execute+0x2a>
 8002864:	000003eb 	.word	0x000003eb
 8002868:	00002710 	.word	0x00002710
 800286c:	00002713 	.word	0x00002713

08002870 <chMsgWait>:
 8002870:	b510      	push	{r4, lr}
 8002872:	b672      	cpsid	i
 8002874:	4c0a      	ldr	r4, [pc, #40]	; (80028a0 <chMsgWait+0x30>)
 8002876:	69a3      	ldr	r3, [r4, #24]
 8002878:	001a      	movs	r2, r3
 800287a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 800287c:	3228      	adds	r2, #40	; 0x28
 800287e:	4290      	cmp	r0, r2
 8002880:	d006      	beq.n	8002890 <chMsgWait+0x20>
 8002882:	6801      	ldr	r1, [r0, #0]
 8002884:	6299      	str	r1, [r3, #40]	; 0x28
 8002886:	230d      	movs	r3, #13
 8002888:	604a      	str	r2, [r1, #4]
 800288a:	7703      	strb	r3, [r0, #28]
 800288c:	b662      	cpsie	i
 800288e:	bd10      	pop	{r4, pc}
 8002890:	200e      	movs	r0, #14
 8002892:	f7ff f805 	bl	80018a0 <chSchGoSleepS>
 8002896:	69a3      	ldr	r3, [r4, #24]
 8002898:	001a      	movs	r2, r3
 800289a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 800289c:	3228      	adds	r2, #40	; 0x28
 800289e:	e7f0      	b.n	8002882 <chMsgWait+0x12>
 80028a0:	20000738 	.word	0x20000738
	...

080028b0 <thread2.lto_priv.77>:
 80028b0:	b510      	push	{r4, lr}
 80028b2:	f7ff ffdd 	bl	8002870 <chMsgWait>
 80028b6:	6b04      	ldr	r4, [r0, #48]	; 0x30
 80028b8:	b672      	cpsid	i
 80028ba:	0021      	movs	r1, r4
 80028bc:	f7fe ff00 	bl	80016c0 <chSchWakeupS>
 80028c0:	b662      	cpsie	i
 80028c2:	2c00      	cmp	r4, #0
 80028c4:	d1f5      	bne.n	80028b2 <thread2.lto_priv.77+0x2>
 80028c6:	bd10      	pop	{r4, pc}
	...

080028d0 <msg1_execute>:
 80028d0:	21a4      	movs	r1, #164	; 0xa4
 80028d2:	b510      	push	{r4, lr}
 80028d4:	4b19      	ldr	r3, [pc, #100]	; (800293c <msg1_execute+0x6c>)
 80028d6:	b082      	sub	sp, #8
 80028d8:	699b      	ldr	r3, [r3, #24]
 80028da:	0049      	lsls	r1, r1, #1
 80028dc:	689a      	ldr	r2, [r3, #8]
 80028de:	4818      	ldr	r0, [pc, #96]	; (8002940 <msg1_execute+0x70>)
 80028e0:	3201      	adds	r2, #1
 80028e2:	9300      	str	r3, [sp, #0]
 80028e4:	4b17      	ldr	r3, [pc, #92]	; (8002944 <msg1_execute+0x74>)
 80028e6:	f7fe ffab 	bl	8001840 <chThdCreateStatic>
 80028ea:	4b17      	ldr	r3, [pc, #92]	; (8002948 <msg1_execute+0x78>)
 80028ec:	6018      	str	r0, [r3, #0]
 80028ee:	f7ff ffbf 	bl	8002870 <chMsgWait>
 80028f2:	6b04      	ldr	r4, [r0, #48]	; 0x30
 80028f4:	b672      	cpsid	i
 80028f6:	0021      	movs	r1, r4
 80028f8:	f7fe fee2 	bl	80016c0 <chSchWakeupS>
 80028fc:	b662      	cpsie	i
 80028fe:	b2e0      	uxtb	r0, r4
 8002900:	f7fd ffa6 	bl	8000850 <test_emit_token>
 8002904:	f7ff ffb4 	bl	8002870 <chMsgWait>
 8002908:	6b04      	ldr	r4, [r0, #48]	; 0x30
 800290a:	b672      	cpsid	i
 800290c:	0021      	movs	r1, r4
 800290e:	f7fe fed7 	bl	80016c0 <chSchWakeupS>
 8002912:	b662      	cpsie	i
 8002914:	b2e0      	uxtb	r0, r4
 8002916:	f7fd ff9b 	bl	8000850 <test_emit_token>
 800291a:	f7ff ffa9 	bl	8002870 <chMsgWait>
 800291e:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8002920:	b672      	cpsid	i
 8002922:	0021      	movs	r1, r4
 8002924:	f7fe fecc 	bl	80016c0 <chSchWakeupS>
 8002928:	b662      	cpsie	i
 800292a:	b2e0      	uxtb	r0, r4
 800292c:	f7fd ff90 	bl	8000850 <test_emit_token>
 8002930:	4906      	ldr	r1, [pc, #24]	; (800294c <msg1_execute+0x7c>)
 8002932:	2001      	movs	r0, #1
 8002934:	f7fd ff4c 	bl	80007d0 <_test_assert_sequence>
 8002938:	b002      	add	sp, #8
 800293a:	bd10      	pop	{r4, pc}
 800293c:	20000738 	.word	0x20000738
 8002940:	20000940 	.word	0x20000940
 8002944:	080029c1 	.word	0x080029c1
 8002948:	20000fd4 	.word	0x20000fd4
 800294c:	080058e0 	.word	0x080058e0

08002950 <chMsgSend>:
 8002950:	4b0c      	ldr	r3, [pc, #48]	; (8002984 <chMsgSend+0x34>)
 8002952:	b510      	push	{r4, lr}
 8002954:	699c      	ldr	r4, [r3, #24]
 8002956:	b672      	cpsid	i
 8002958:	0003      	movs	r3, r0
 800295a:	3328      	adds	r3, #40	; 0x28
 800295c:	6223      	str	r3, [r4, #32]
 800295e:	6023      	str	r3, [r4, #0]
 8002960:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002962:	6321      	str	r1, [r4, #48]	; 0x30
 8002964:	6063      	str	r3, [r4, #4]
 8002966:	601c      	str	r4, [r3, #0]
 8002968:	7f03      	ldrb	r3, [r0, #28]
 800296a:	62c4      	str	r4, [r0, #44]	; 0x2c
 800296c:	2b0e      	cmp	r3, #14
 800296e:	d005      	beq.n	800297c <chMsgSend+0x2c>
 8002970:	200c      	movs	r0, #12
 8002972:	f7fe ff95 	bl	80018a0 <chSchGoSleepS>
 8002976:	6a20      	ldr	r0, [r4, #32]
 8002978:	b662      	cpsie	i
 800297a:	bd10      	pop	{r4, pc}
 800297c:	f7fe f930 	bl	8000be0 <chSchReadyI>
 8002980:	e7f6      	b.n	8002970 <chMsgSend+0x20>
 8002982:	46c0      	nop			; (mov r8, r8)
 8002984:	20000738 	.word	0x20000738
	...

08002990 <msg_loop_test>:
 8002990:	b570      	push	{r4, r5, r6, lr}
 8002992:	2400      	movs	r4, #0
 8002994:	0005      	movs	r5, r0
 8002996:	f7ff fe33 	bl	8002600 <test_wait_tick>
 800299a:	f7fe fb01 	bl	8000fa0 <test_start_timer.constprop.1>
 800299e:	4e07      	ldr	r6, [pc, #28]	; (80029bc <msg_loop_test+0x2c>)
 80029a0:	2101      	movs	r1, #1
 80029a2:	0028      	movs	r0, r5
 80029a4:	f7ff ffd4 	bl	8002950 <chMsgSend>
 80029a8:	7833      	ldrb	r3, [r6, #0]
 80029aa:	3401      	adds	r4, #1
 80029ac:	2b00      	cmp	r3, #0
 80029ae:	d0f7      	beq.n	80029a0 <msg_loop_test+0x10>
 80029b0:	0028      	movs	r0, r5
 80029b2:	2100      	movs	r1, #0
 80029b4:	f7ff ffcc 	bl	8002950 <chMsgSend>
 80029b8:	0020      	movs	r0, r4
 80029ba:	bd70      	pop	{r4, r5, r6, pc}
 80029bc:	20000fd0 	.word	0x20000fd0

080029c0 <thread.lto_priv.59>:
 80029c0:	b510      	push	{r4, lr}
 80029c2:	0004      	movs	r4, r0
 80029c4:	2141      	movs	r1, #65	; 0x41
 80029c6:	f7ff ffc3 	bl	8002950 <chMsgSend>
 80029ca:	2142      	movs	r1, #66	; 0x42
 80029cc:	0020      	movs	r0, r4
 80029ce:	f7ff ffbf 	bl	8002950 <chMsgSend>
 80029d2:	2143      	movs	r1, #67	; 0x43
 80029d4:	0020      	movs	r0, r4
 80029d6:	f7ff ffbb 	bl	8002950 <chMsgSend>
 80029da:	bd10      	pop	{r4, pc}
 80029dc:	0000      	movs	r0, r0
	...

080029e0 <chMtxLockS>:
 80029e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80029e2:	0005      	movs	r5, r0
 80029e4:	4b35      	ldr	r3, [pc, #212]	; (8002abc <chMtxLockS+0xdc>)
 80029e6:	6880      	ldr	r0, [r0, #8]
 80029e8:	699c      	ldr	r4, [r3, #24]
 80029ea:	2800      	cmp	r0, #0
 80029ec:	d03d      	beq.n	8002a6a <chMtxLockS+0x8a>
 80029ee:	68a2      	ldr	r2, [r4, #8]
 80029f0:	6883      	ldr	r3, [r0, #8]
 80029f2:	429a      	cmp	r2, r3
 80029f4:	d907      	bls.n	8002a06 <chMtxLockS+0x26>
 80029f6:	7f03      	ldrb	r3, [r0, #28]
 80029f8:	6082      	str	r2, [r0, #8]
 80029fa:	2b06      	cmp	r3, #6
 80029fc:	d03a      	beq.n	8002a74 <chMtxLockS+0x94>
 80029fe:	2b07      	cmp	r3, #7
 8002a00:	d015      	beq.n	8002a2e <chMtxLockS+0x4e>
 8002a02:	2b00      	cmp	r3, #0
 8002a04:	d027      	beq.n	8002a56 <chMtxLockS+0x76>
 8002a06:	002a      	movs	r2, r5
 8002a08:	002b      	movs	r3, r5
 8002a0a:	e003      	b.n	8002a14 <chMtxLockS+0x34>
 8002a0c:	6899      	ldr	r1, [r3, #8]
 8002a0e:	68a0      	ldr	r0, [r4, #8]
 8002a10:	4281      	cmp	r1, r0
 8002a12:	d328      	bcc.n	8002a66 <chMtxLockS+0x86>
 8002a14:	681b      	ldr	r3, [r3, #0]
 8002a16:	429d      	cmp	r5, r3
 8002a18:	d1f8      	bne.n	8002a0c <chMtxLockS+0x2c>
 8002a1a:	6853      	ldr	r3, [r2, #4]
 8002a1c:	6022      	str	r2, [r4, #0]
 8002a1e:	6063      	str	r3, [r4, #4]
 8002a20:	2006      	movs	r0, #6
 8002a22:	601c      	str	r4, [r3, #0]
 8002a24:	6054      	str	r4, [r2, #4]
 8002a26:	6225      	str	r5, [r4, #32]
 8002a28:	f7fe ff3a 	bl	80018a0 <chSchGoSleepS>
 8002a2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a2e:	6843      	ldr	r3, [r0, #4]
 8002a30:	6801      	ldr	r1, [r0, #0]
 8002a32:	6019      	str	r1, [r3, #0]
 8002a34:	6801      	ldr	r1, [r0, #0]
 8002a36:	604b      	str	r3, [r1, #4]
 8002a38:	6a01      	ldr	r1, [r0, #32]
 8002a3a:	000b      	movs	r3, r1
 8002a3c:	e002      	b.n	8002a44 <chMtxLockS+0x64>
 8002a3e:	689e      	ldr	r6, [r3, #8]
 8002a40:	4296      	cmp	r6, r2
 8002a42:	d331      	bcc.n	8002aa8 <chMtxLockS+0xc8>
 8002a44:	681b      	ldr	r3, [r3, #0]
 8002a46:	4299      	cmp	r1, r3
 8002a48:	d1f9      	bne.n	8002a3e <chMtxLockS+0x5e>
 8002a4a:	684b      	ldr	r3, [r1, #4]
 8002a4c:	6001      	str	r1, [r0, #0]
 8002a4e:	6043      	str	r3, [r0, #4]
 8002a50:	6018      	str	r0, [r3, #0]
 8002a52:	6048      	str	r0, [r1, #4]
 8002a54:	e7d7      	b.n	8002a06 <chMtxLockS+0x26>
 8002a56:	6843      	ldr	r3, [r0, #4]
 8002a58:	6802      	ldr	r2, [r0, #0]
 8002a5a:	601a      	str	r2, [r3, #0]
 8002a5c:	6802      	ldr	r2, [r0, #0]
 8002a5e:	6053      	str	r3, [r2, #4]
 8002a60:	f7fe f8be 	bl	8000be0 <chSchReadyI>
 8002a64:	e7cf      	b.n	8002a06 <chMtxLockS+0x26>
 8002a66:	001a      	movs	r2, r3
 8002a68:	e7d7      	b.n	8002a1a <chMtxLockS+0x3a>
 8002a6a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002a6c:	60ac      	str	r4, [r5, #8]
 8002a6e:	60eb      	str	r3, [r5, #12]
 8002a70:	63a5      	str	r5, [r4, #56]	; 0x38
 8002a72:	e7db      	b.n	8002a2c <chMtxLockS+0x4c>
 8002a74:	6843      	ldr	r3, [r0, #4]
 8002a76:	6801      	ldr	r1, [r0, #0]
 8002a78:	6019      	str	r1, [r3, #0]
 8002a7a:	6801      	ldr	r1, [r0, #0]
 8002a7c:	604b      	str	r3, [r1, #4]
 8002a7e:	6a01      	ldr	r1, [r0, #32]
 8002a80:	000e      	movs	r6, r1
 8002a82:	000b      	movs	r3, r1
 8002a84:	e002      	b.n	8002a8c <chMtxLockS+0xac>
 8002a86:	689f      	ldr	r7, [r3, #8]
 8002a88:	4297      	cmp	r7, r2
 8002a8a:	d314      	bcc.n	8002ab6 <chMtxLockS+0xd6>
 8002a8c:	681b      	ldr	r3, [r3, #0]
 8002a8e:	4299      	cmp	r1, r3
 8002a90:	d1f9      	bne.n	8002a86 <chMtxLockS+0xa6>
 8002a92:	6873      	ldr	r3, [r6, #4]
 8002a94:	6006      	str	r6, [r0, #0]
 8002a96:	6043      	str	r3, [r0, #4]
 8002a98:	6018      	str	r0, [r3, #0]
 8002a9a:	6070      	str	r0, [r6, #4]
 8002a9c:	6888      	ldr	r0, [r1, #8]
 8002a9e:	68a2      	ldr	r2, [r4, #8]
 8002aa0:	6883      	ldr	r3, [r0, #8]
 8002aa2:	4293      	cmp	r3, r2
 8002aa4:	d3a7      	bcc.n	80029f6 <chMtxLockS+0x16>
 8002aa6:	e7ae      	b.n	8002a06 <chMtxLockS+0x26>
 8002aa8:	0019      	movs	r1, r3
 8002aaa:	684b      	ldr	r3, [r1, #4]
 8002aac:	6001      	str	r1, [r0, #0]
 8002aae:	6043      	str	r3, [r0, #4]
 8002ab0:	6018      	str	r0, [r3, #0]
 8002ab2:	6048      	str	r0, [r1, #4]
 8002ab4:	e7a7      	b.n	8002a06 <chMtxLockS+0x26>
 8002ab6:	001e      	movs	r6, r3
 8002ab8:	e7eb      	b.n	8002a92 <chMtxLockS+0xb2>
 8002aba:	46c0      	nop			; (mov r8, r8)
 8002abc:	20000738 	.word	0x20000738

08002ac0 <chMtxLock>:
 8002ac0:	b510      	push	{r4, lr}
 8002ac2:	b672      	cpsid	i
 8002ac4:	f7ff ff8c 	bl	80029e0 <chMtxLockS>
 8002ac8:	b662      	cpsie	i
 8002aca:	bd10      	pop	{r4, pc}
 8002acc:	0000      	movs	r0, r0
	...

08002ad0 <bmk12_execute>:
 8002ad0:	b570      	push	{r4, r5, r6, lr}
 8002ad2:	2500      	movs	r5, #0
 8002ad4:	f7ff fd94 	bl	8002600 <test_wait_tick>
 8002ad8:	f7fe fa62 	bl	8000fa0 <test_start_timer.constprop.1>
 8002adc:	4c13      	ldr	r4, [pc, #76]	; (8002b2c <bmk12_execute+0x5c>)
 8002ade:	4e14      	ldr	r6, [pc, #80]	; (8002b30 <bmk12_execute+0x60>)
 8002ae0:	0020      	movs	r0, r4
 8002ae2:	f7ff ffed 	bl	8002ac0 <chMtxLock>
 8002ae6:	0020      	movs	r0, r4
 8002ae8:	f7fe fe62 	bl	80017b0 <chMtxUnlock>
 8002aec:	0020      	movs	r0, r4
 8002aee:	f7ff ffe7 	bl	8002ac0 <chMtxLock>
 8002af2:	0020      	movs	r0, r4
 8002af4:	f7fe fe5c 	bl	80017b0 <chMtxUnlock>
 8002af8:	0020      	movs	r0, r4
 8002afa:	f7ff ffe1 	bl	8002ac0 <chMtxLock>
 8002afe:	0020      	movs	r0, r4
 8002b00:	f7fe fe56 	bl	80017b0 <chMtxUnlock>
 8002b04:	0020      	movs	r0, r4
 8002b06:	f7ff ffdb 	bl	8002ac0 <chMtxLock>
 8002b0a:	0020      	movs	r0, r4
 8002b0c:	f7fe fe50 	bl	80017b0 <chMtxUnlock>
 8002b10:	7833      	ldrb	r3, [r6, #0]
 8002b12:	3501      	adds	r5, #1
 8002b14:	2b00      	cmp	r3, #0
 8002b16:	d0e3      	beq.n	8002ae0 <bmk12_execute+0x10>
 8002b18:	4806      	ldr	r0, [pc, #24]	; (8002b34 <bmk12_execute+0x64>)
 8002b1a:	f7fd fef1 	bl	8000900 <test_print>
 8002b1e:	00a8      	lsls	r0, r5, #2
 8002b20:	f7fd fdf6 	bl	8000710 <test_printn>
 8002b24:	4804      	ldr	r0, [pc, #16]	; (8002b38 <bmk12_execute+0x68>)
 8002b26:	f7fd fecb 	bl	80008c0 <test_println>
 8002b2a:	bd70      	pop	{r4, r5, r6, pc}
 8002b2c:	2000091c 	.word	0x2000091c
 8002b30:	20000fd0 	.word	0x20000fd0
 8002b34:	08005730 	.word	0x08005730
 8002b38:	08005760 	.word	0x08005760
 8002b3c:	00000000 	.word	0x00000000

08002b40 <thread11>:
 8002b40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002b42:	46c6      	mov	lr, r8
 8002b44:	4d1d      	ldr	r5, [pc, #116]	; (8002bbc <thread11+0x7c>)
 8002b46:	b500      	push	{lr}
 8002b48:	4680      	mov	r8, r0
 8002b4a:	0028      	movs	r0, r5
 8002b4c:	f7ff ffb8 	bl	8002ac0 <chMtxLock>
 8002b50:	4e1b      	ldr	r6, [pc, #108]	; (8002bc0 <thread11+0x80>)
 8002b52:	0030      	movs	r0, r6
 8002b54:	f7ff ffb4 	bl	8002ac0 <chMtxLock>
 8002b58:	b672      	cpsid	i
 8002b5a:	4c1a      	ldr	r4, [pc, #104]	; (8002bc4 <thread11+0x84>)
 8002b5c:	69a3      	ldr	r3, [r4, #24]
 8002b5e:	6b9f      	ldr	r7, [r3, #56]	; 0x38
 8002b60:	0038      	movs	r0, r7
 8002b62:	f7fe f8e5 	bl	8000d30 <chMtxUnlockS>
 8002b66:	4918      	ldr	r1, [pc, #96]	; (8002bc8 <thread11+0x88>)
 8002b68:	69a2      	ldr	r2, [r4, #24]
 8002b6a:	000b      	movs	r3, r1
 8002b6c:	6211      	str	r1, [r2, #32]
 8002b6e:	e004      	b.n	8002b7a <thread11+0x3a>
 8002b70:	6898      	ldr	r0, [r3, #8]
 8002b72:	4684      	mov	ip, r0
 8002b74:	6890      	ldr	r0, [r2, #8]
 8002b76:	4584      	cmp	ip, r0
 8002b78:	d302      	bcc.n	8002b80 <thread11+0x40>
 8002b7a:	681b      	ldr	r3, [r3, #0]
 8002b7c:	428b      	cmp	r3, r1
 8002b7e:	d1f7      	bne.n	8002b70 <thread11+0x30>
 8002b80:	6859      	ldr	r1, [r3, #4]
 8002b82:	6013      	str	r3, [r2, #0]
 8002b84:	6051      	str	r1, [r2, #4]
 8002b86:	2007      	movs	r0, #7
 8002b88:	600a      	str	r2, [r1, #0]
 8002b8a:	605a      	str	r2, [r3, #4]
 8002b8c:	f7fe fe88 	bl	80018a0 <chSchGoSleepS>
 8002b90:	69a3      	ldr	r3, [r4, #24]
 8002b92:	6a1b      	ldr	r3, [r3, #32]
 8002b94:	3301      	adds	r3, #1
 8002b96:	d002      	beq.n	8002b9e <thread11+0x5e>
 8002b98:	0038      	movs	r0, r7
 8002b9a:	f7ff ff21 	bl	80029e0 <chMtxLockS>
 8002b9e:	b662      	cpsie	i
 8002ba0:	4643      	mov	r3, r8
 8002ba2:	7818      	ldrb	r0, [r3, #0]
 8002ba4:	f7fd fe54 	bl	8000850 <test_emit_token>
 8002ba8:	0030      	movs	r0, r6
 8002baa:	f7fe fe01 	bl	80017b0 <chMtxUnlock>
 8002bae:	0028      	movs	r0, r5
 8002bb0:	f7fe fdfe 	bl	80017b0 <chMtxUnlock>
 8002bb4:	bc04      	pop	{r2}
 8002bb6:	4690      	mov	r8, r2
 8002bb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002bba:	46c0      	nop			; (mov r8, r8)
 8002bbc:	20000644 	.word	0x20000644
 8002bc0:	20000634 	.word	0x20000634
 8002bc4:	20000738 	.word	0x20000738
 8002bc8:	20000600 	.word	0x20000600
 8002bcc:	00000000 	.word	0x00000000

08002bd0 <thread10>:
 8002bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bd2:	4d15      	ldr	r5, [pc, #84]	; (8002c28 <thread10+0x58>)
 8002bd4:	0007      	movs	r7, r0
 8002bd6:	0028      	movs	r0, r5
 8002bd8:	f7ff ff72 	bl	8002ac0 <chMtxLock>
 8002bdc:	b672      	cpsid	i
 8002bde:	4b13      	ldr	r3, [pc, #76]	; (8002c2c <thread10+0x5c>)
 8002be0:	699c      	ldr	r4, [r3, #24]
 8002be2:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8002be4:	0030      	movs	r0, r6
 8002be6:	f7fe f8a3 	bl	8000d30 <chMtxUnlockS>
 8002bea:	4a11      	ldr	r2, [pc, #68]	; (8002c30 <thread10+0x60>)
 8002bec:	6222      	str	r2, [r4, #32]
 8002bee:	0013      	movs	r3, r2
 8002bf0:	e003      	b.n	8002bfa <thread10+0x2a>
 8002bf2:	6899      	ldr	r1, [r3, #8]
 8002bf4:	68a0      	ldr	r0, [r4, #8]
 8002bf6:	4281      	cmp	r1, r0
 8002bf8:	d302      	bcc.n	8002c00 <thread10+0x30>
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	4293      	cmp	r3, r2
 8002bfe:	d1f8      	bne.n	8002bf2 <thread10+0x22>
 8002c00:	685a      	ldr	r2, [r3, #4]
 8002c02:	6023      	str	r3, [r4, #0]
 8002c04:	6062      	str	r2, [r4, #4]
 8002c06:	2007      	movs	r0, #7
 8002c08:	6014      	str	r4, [r2, #0]
 8002c0a:	605c      	str	r4, [r3, #4]
 8002c0c:	f7fe fe48 	bl	80018a0 <chSchGoSleepS>
 8002c10:	0030      	movs	r0, r6
 8002c12:	f7ff fee5 	bl	80029e0 <chMtxLockS>
 8002c16:	b662      	cpsie	i
 8002c18:	7838      	ldrb	r0, [r7, #0]
 8002c1a:	f7fd fe19 	bl	8000850 <test_emit_token>
 8002c1e:	0028      	movs	r0, r5
 8002c20:	f7fe fdc6 	bl	80017b0 <chMtxUnlock>
 8002c24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002c26:	46c0      	nop			; (mov r8, r8)
 8002c28:	20000634 	.word	0x20000634
 8002c2c:	20000738 	.word	0x20000738
 8002c30:	20000600 	.word	0x20000600
	...

08002c40 <thread12>:
 8002c40:	b570      	push	{r4, r5, r6, lr}
 8002c42:	0005      	movs	r5, r0
 8002c44:	4c05      	ldr	r4, [pc, #20]	; (8002c5c <thread12+0x1c>)
 8002c46:	0020      	movs	r0, r4
 8002c48:	f7ff ff3a 	bl	8002ac0 <chMtxLock>
 8002c4c:	7828      	ldrb	r0, [r5, #0]
 8002c4e:	f7fd fdff 	bl	8000850 <test_emit_token>
 8002c52:	0020      	movs	r0, r4
 8002c54:	f7fe fdac 	bl	80017b0 <chMtxUnlock>
 8002c58:	bd70      	pop	{r4, r5, r6, pc}
 8002c5a:	46c0      	nop			; (mov r8, r8)
 8002c5c:	20000644 	.word	0x20000644

08002c60 <mtx5_execute>:
 8002c60:	b570      	push	{r4, r5, r6, lr}
 8002c62:	4d31      	ldr	r5, [pc, #196]	; (8002d28 <mtx5_execute+0xc8>)
 8002c64:	69ab      	ldr	r3, [r5, #24]
 8002c66:	689e      	ldr	r6, [r3, #8]
 8002c68:	b672      	cpsid	i
 8002c6a:	4c30      	ldr	r4, [pc, #192]	; (8002d2c <mtx5_execute+0xcc>)
 8002c6c:	2100      	movs	r1, #0
 8002c6e:	68a3      	ldr	r3, [r4, #8]
 8002c70:	2b00      	cmp	r3, #0
 8002c72:	d04c      	beq.n	8002d0e <mtx5_execute+0xae>
 8002c74:	b662      	cpsie	i
 8002c76:	2001      	movs	r0, #1
 8002c78:	f7fd fdd2 	bl	8000820 <_test_assert>
 8002c7c:	2800      	cmp	r0, #0
 8002c7e:	d000      	beq.n	8002c82 <mtx5_execute+0x22>
 8002c80:	bd70      	pop	{r4, r5, r6, pc}
 8002c82:	b672      	cpsid	i
 8002c84:	68a3      	ldr	r3, [r4, #8]
 8002c86:	2b00      	cmp	r3, #0
 8002c88:	d048      	beq.n	8002d1c <mtx5_execute+0xbc>
 8002c8a:	2001      	movs	r0, #1
 8002c8c:	b662      	cpsie	i
 8002c8e:	0001      	movs	r1, r0
 8002c90:	2002      	movs	r0, #2
 8002c92:	f7fd fdc5 	bl	8000820 <_test_assert>
 8002c96:	2800      	cmp	r0, #0
 8002c98:	d1f2      	bne.n	8002c80 <mtx5_execute+0x20>
 8002c9a:	b672      	cpsid	i
 8002c9c:	0020      	movs	r0, r4
 8002c9e:	f7fe f847 	bl	8000d30 <chMtxUnlockS>
 8002ca2:	b662      	cpsie	i
 8002ca4:	6823      	ldr	r3, [r4, #0]
 8002ca6:	2003      	movs	r0, #3
 8002ca8:	1b19      	subs	r1, r3, r4
 8002caa:	424b      	negs	r3, r1
 8002cac:	4159      	adcs	r1, r3
 8002cae:	b2c9      	uxtb	r1, r1
 8002cb0:	f7fd fdb6 	bl	8000820 <_test_assert>
 8002cb4:	2800      	cmp	r0, #0
 8002cb6:	d1e3      	bne.n	8002c80 <mtx5_execute+0x20>
 8002cb8:	68a1      	ldr	r1, [r4, #8]
 8002cba:	3004      	adds	r0, #4
 8002cbc:	424b      	negs	r3, r1
 8002cbe:	4159      	adcs	r1, r3
 8002cc0:	b2c9      	uxtb	r1, r1
 8002cc2:	f7fd fdad 	bl	8000820 <_test_assert>
 8002cc6:	2800      	cmp	r0, #0
 8002cc8:	d1da      	bne.n	8002c80 <mtx5_execute+0x20>
 8002cca:	69ab      	ldr	r3, [r5, #24]
 8002ccc:	3005      	adds	r0, #5
 8002cce:	6899      	ldr	r1, [r3, #8]
 8002cd0:	1b89      	subs	r1, r1, r6
 8002cd2:	424e      	negs	r6, r1
 8002cd4:	4171      	adcs	r1, r6
 8002cd6:	b2c9      	uxtb	r1, r1
 8002cd8:	f7fd fda2 	bl	8000820 <_test_assert>
 8002cdc:	2800      	cmp	r0, #0
 8002cde:	d1cf      	bne.n	8002c80 <mtx5_execute+0x20>
 8002ce0:	0020      	movs	r0, r4
 8002ce2:	f7ff feed 	bl	8002ac0 <chMtxLock>
 8002ce6:	f7fe fbf3 	bl	80014d0 <chMtxUnlockAll>
 8002cea:	6823      	ldr	r3, [r4, #0]
 8002cec:	2006      	movs	r0, #6
 8002cee:	1b19      	subs	r1, r3, r4
 8002cf0:	424b      	negs	r3, r1
 8002cf2:	4159      	adcs	r1, r3
 8002cf4:	b2c9      	uxtb	r1, r1
 8002cf6:	f7fd fd93 	bl	8000820 <_test_assert>
 8002cfa:	2800      	cmp	r0, #0
 8002cfc:	d1c0      	bne.n	8002c80 <mtx5_execute+0x20>
 8002cfe:	68a1      	ldr	r1, [r4, #8]
 8002d00:	3007      	adds	r0, #7
 8002d02:	424b      	negs	r3, r1
 8002d04:	4159      	adcs	r1, r3
 8002d06:	b2c9      	uxtb	r1, r1
 8002d08:	f7fd fd8a 	bl	8000820 <_test_assert>
 8002d0c:	e7b8      	b.n	8002c80 <mtx5_execute+0x20>
 8002d0e:	69ab      	ldr	r3, [r5, #24]
 8002d10:	3101      	adds	r1, #1
 8002d12:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002d14:	60a3      	str	r3, [r4, #8]
 8002d16:	60e2      	str	r2, [r4, #12]
 8002d18:	639c      	str	r4, [r3, #56]	; 0x38
 8002d1a:	e7ab      	b.n	8002c74 <mtx5_execute+0x14>
 8002d1c:	69ab      	ldr	r3, [r5, #24]
 8002d1e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002d20:	60a3      	str	r3, [r4, #8]
 8002d22:	60e2      	str	r2, [r4, #12]
 8002d24:	639c      	str	r4, [r3, #56]	; 0x38
 8002d26:	e7b1      	b.n	8002c8c <mtx5_execute+0x2c>
 8002d28:	20000738 	.word	0x20000738
 8002d2c:	20000634 	.word	0x20000634

08002d30 <thread4a>:
 8002d30:	20fa      	movs	r0, #250	; 0xfa
 8002d32:	b510      	push	{r4, lr}
 8002d34:	0040      	lsls	r0, r0, #1
 8002d36:	f7ff fb93 	bl	8002460 <chThdSleep>
 8002d3a:	4c04      	ldr	r4, [pc, #16]	; (8002d4c <thread4a+0x1c>)
 8002d3c:	0020      	movs	r0, r4
 8002d3e:	f7ff febf 	bl	8002ac0 <chMtxLock>
 8002d42:	0020      	movs	r0, r4
 8002d44:	f7fe fd34 	bl	80017b0 <chMtxUnlock>
 8002d48:	bd10      	pop	{r4, pc}
 8002d4a:	46c0      	nop			; (mov r8, r8)
 8002d4c:	20000644 	.word	0x20000644

08002d50 <thread4b>:
 8002d50:	b510      	push	{r4, lr}
 8002d52:	4805      	ldr	r0, [pc, #20]	; (8002d68 <thread4b+0x18>)
 8002d54:	f7ff fb84 	bl	8002460 <chThdSleep>
 8002d58:	4c04      	ldr	r4, [pc, #16]	; (8002d6c <thread4b+0x1c>)
 8002d5a:	0020      	movs	r0, r4
 8002d5c:	f7ff feb0 	bl	8002ac0 <chMtxLock>
 8002d60:	0020      	movs	r0, r4
 8002d62:	f7fe fd25 	bl	80017b0 <chMtxUnlock>
 8002d66:	bd10      	pop	{r4, pc}
 8002d68:	000005dc 	.word	0x000005dc
 8002d6c:	20000634 	.word	0x20000634

08002d70 <thread1.lto_priv.68>:
 8002d70:	b570      	push	{r4, r5, r6, lr}
 8002d72:	0005      	movs	r5, r0
 8002d74:	4c05      	ldr	r4, [pc, #20]	; (8002d8c <thread1.lto_priv.68+0x1c>)
 8002d76:	0020      	movs	r0, r4
 8002d78:	f7ff fea2 	bl	8002ac0 <chMtxLock>
 8002d7c:	7828      	ldrb	r0, [r5, #0]
 8002d7e:	f7fd fd67 	bl	8000850 <test_emit_token>
 8002d82:	0020      	movs	r0, r4
 8002d84:	f7fe fd14 	bl	80017b0 <chMtxUnlock>
 8002d88:	bd70      	pop	{r4, r5, r6, pc}
 8002d8a:	46c0      	nop			; (mov r8, r8)
 8002d8c:	20000634 	.word	0x20000634

08002d90 <chHeapStatus>:
 8002d90:	b570      	push	{r4, r5, r6, lr}
 8002d92:	0004      	movs	r4, r0
 8002d94:	000e      	movs	r6, r1
 8002d96:	2800      	cmp	r0, #0
 8002d98:	d016      	beq.n	8002dc8 <chHeapStatus+0x38>
 8002d9a:	0025      	movs	r5, r4
 8002d9c:	3510      	adds	r5, #16
 8002d9e:	0028      	movs	r0, r5
 8002da0:	f7ff fe8e 	bl	8002ac0 <chMtxLock>
 8002da4:	68a3      	ldr	r3, [r4, #8]
 8002da6:	2200      	movs	r2, #0
 8002da8:	2400      	movs	r4, #0
 8002daa:	2b00      	cmp	r3, #0
 8002dac:	d006      	beq.n	8002dbc <chHeapStatus+0x2c>
 8002dae:	6859      	ldr	r1, [r3, #4]
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	468c      	mov	ip, r1
 8002db4:	3401      	adds	r4, #1
 8002db6:	4462      	add	r2, ip
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	d1f8      	bne.n	8002dae <chHeapStatus+0x1e>
 8002dbc:	0028      	movs	r0, r5
 8002dbe:	6032      	str	r2, [r6, #0]
 8002dc0:	f7fe fcf6 	bl	80017b0 <chMtxUnlock>
 8002dc4:	0020      	movs	r0, r4
 8002dc6:	bd70      	pop	{r4, r5, r6, pc}
 8002dc8:	4c00      	ldr	r4, [pc, #0]	; (8002dcc <chHeapStatus+0x3c>)
 8002dca:	e7e6      	b.n	8002d9a <chHeapStatus+0xa>
 8002dcc:	20000890 	.word	0x20000890

08002dd0 <chHeapFree>:
 8002dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002dd2:	0004      	movs	r4, r0
 8002dd4:	3c08      	subs	r4, #8
 8002dd6:	6826      	ldr	r6, [r4, #0]
 8002dd8:	0007      	movs	r7, r0
 8002dda:	0035      	movs	r5, r6
 8002ddc:	3610      	adds	r6, #16
 8002dde:	3508      	adds	r5, #8
 8002de0:	0030      	movs	r0, r6
 8002de2:	f7ff fe6d 	bl	8002ac0 <chMtxLock>
 8002de6:	002b      	movs	r3, r5
 8002de8:	681a      	ldr	r2, [r3, #0]
 8002dea:	42ab      	cmp	r3, r5
 8002dec:	d001      	beq.n	8002df2 <chHeapFree+0x22>
 8002dee:	42a3      	cmp	r3, r4
 8002df0:	d203      	bcs.n	8002dfa <chHeapFree+0x2a>
 8002df2:	2a00      	cmp	r2, #0
 8002df4:	d003      	beq.n	8002dfe <chHeapFree+0x2e>
 8002df6:	4294      	cmp	r4, r2
 8002df8:	d301      	bcc.n	8002dfe <chHeapFree+0x2e>
 8002dfa:	0013      	movs	r3, r2
 8002dfc:	e7f4      	b.n	8002de8 <chHeapFree+0x18>
 8002dfe:	6022      	str	r2, [r4, #0]
 8002e00:	601c      	str	r4, [r3, #0]
 8002e02:	6862      	ldr	r2, [r4, #4]
 8002e04:	6821      	ldr	r1, [r4, #0]
 8002e06:	18bf      	adds	r7, r7, r2
 8002e08:	428f      	cmp	r7, r1
 8002e0a:	d009      	beq.n	8002e20 <chHeapFree+0x50>
 8002e0c:	6859      	ldr	r1, [r3, #4]
 8002e0e:	000a      	movs	r2, r1
 8002e10:	3208      	adds	r2, #8
 8002e12:	189a      	adds	r2, r3, r2
 8002e14:	4294      	cmp	r4, r2
 8002e16:	d010      	beq.n	8002e3a <chHeapFree+0x6a>
 8002e18:	0030      	movs	r0, r6
 8002e1a:	f7fe fcc9 	bl	80017b0 <chMtxUnlock>
 8002e1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e20:	6879      	ldr	r1, [r7, #4]
 8002e22:	3208      	adds	r2, #8
 8002e24:	468c      	mov	ip, r1
 8002e26:	4462      	add	r2, ip
 8002e28:	6062      	str	r2, [r4, #4]
 8002e2a:	6859      	ldr	r1, [r3, #4]
 8002e2c:	683a      	ldr	r2, [r7, #0]
 8002e2e:	6022      	str	r2, [r4, #0]
 8002e30:	000a      	movs	r2, r1
 8002e32:	3208      	adds	r2, #8
 8002e34:	189a      	adds	r2, r3, r2
 8002e36:	4294      	cmp	r4, r2
 8002e38:	d1ee      	bne.n	8002e18 <chHeapFree+0x48>
 8002e3a:	6862      	ldr	r2, [r4, #4]
 8002e3c:	3208      	adds	r2, #8
 8002e3e:	1851      	adds	r1, r2, r1
 8002e40:	6822      	ldr	r2, [r4, #0]
 8002e42:	6059      	str	r1, [r3, #4]
 8002e44:	601a      	str	r2, [r3, #0]
 8002e46:	e7e7      	b.n	8002e18 <chHeapFree+0x48>
	...

08002e50 <chThdRelease>:
 8002e50:	b510      	push	{r4, lr}
 8002e52:	b672      	cpsid	i
 8002e54:	7f83      	ldrb	r3, [r0, #30]
 8002e56:	3b01      	subs	r3, #1
 8002e58:	b2db      	uxtb	r3, r3
 8002e5a:	7783      	strb	r3, [r0, #30]
 8002e5c:	b662      	cpsie	i
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	d102      	bne.n	8002e68 <chThdRelease+0x18>
 8002e62:	7f03      	ldrb	r3, [r0, #28]
 8002e64:	2b0f      	cmp	r3, #15
 8002e66:	d000      	beq.n	8002e6a <chThdRelease+0x1a>
 8002e68:	bd10      	pop	{r4, pc}
 8002e6a:	7f42      	ldrb	r2, [r0, #29]
 8002e6c:	3b0c      	subs	r3, #12
 8002e6e:	4013      	ands	r3, r2
 8002e70:	2b01      	cmp	r3, #1
 8002e72:	d00d      	beq.n	8002e90 <chThdRelease+0x40>
 8002e74:	2b02      	cmp	r3, #2
 8002e76:	d1f7      	bne.n	8002e68 <chThdRelease+0x18>
 8002e78:	6943      	ldr	r3, [r0, #20]
 8002e7a:	6902      	ldr	r2, [r0, #16]
 8002e7c:	611a      	str	r2, [r3, #16]
 8002e7e:	6902      	ldr	r2, [r0, #16]
 8002e80:	6153      	str	r3, [r2, #20]
 8002e82:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8002e84:	b672      	cpsid	i
 8002e86:	681a      	ldr	r2, [r3, #0]
 8002e88:	6002      	str	r2, [r0, #0]
 8002e8a:	6018      	str	r0, [r3, #0]
 8002e8c:	b662      	cpsie	i
 8002e8e:	e7eb      	b.n	8002e68 <chThdRelease+0x18>
 8002e90:	6902      	ldr	r2, [r0, #16]
 8002e92:	6943      	ldr	r3, [r0, #20]
 8002e94:	611a      	str	r2, [r3, #16]
 8002e96:	6902      	ldr	r2, [r0, #16]
 8002e98:	6153      	str	r3, [r2, #20]
 8002e9a:	f7ff ff99 	bl	8002dd0 <chHeapFree>
 8002e9e:	e7e3      	b.n	8002e68 <chThdRelease+0x18>

08002ea0 <regfind>:
 8002ea0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002ea2:	0007      	movs	r7, r0
 8002ea4:	b672      	cpsid	i
 8002ea6:	4e13      	ldr	r6, [pc, #76]	; (8002ef4 <regfind+0x54>)
 8002ea8:	6930      	ldr	r0, [r6, #16]
 8002eaa:	7f83      	ldrb	r3, [r0, #30]
 8002eac:	3301      	adds	r3, #1
 8002eae:	7783      	strb	r3, [r0, #30]
 8002eb0:	b662      	cpsie	i
 8002eb2:	1a3d      	subs	r5, r7, r0
 8002eb4:	426b      	negs	r3, r5
 8002eb6:	415d      	adcs	r5, r3
 8002eb8:	b2ed      	uxtb	r5, r5
 8002eba:	b672      	cpsid	i
 8002ebc:	6904      	ldr	r4, [r0, #16]
 8002ebe:	42b4      	cmp	r4, r6
 8002ec0:	d101      	bne.n	8002ec6 <regfind+0x26>
 8002ec2:	e015      	b.n	8002ef0 <regfind+0x50>
 8002ec4:	001c      	movs	r4, r3
 8002ec6:	7fa3      	ldrb	r3, [r4, #30]
 8002ec8:	3301      	adds	r3, #1
 8002eca:	77a3      	strb	r3, [r4, #30]
 8002ecc:	b662      	cpsie	i
 8002ece:	f7ff ffbf 	bl	8002e50 <chThdRelease>
 8002ed2:	1b3b      	subs	r3, r7, r4
 8002ed4:	425a      	negs	r2, r3
 8002ed6:	4153      	adcs	r3, r2
 8002ed8:	431d      	orrs	r5, r3
 8002eda:	b672      	cpsid	i
 8002edc:	6923      	ldr	r3, [r4, #16]
 8002ede:	0020      	movs	r0, r4
 8002ee0:	42b3      	cmp	r3, r6
 8002ee2:	d1ef      	bne.n	8002ec4 <regfind+0x24>
 8002ee4:	b662      	cpsie	i
 8002ee6:	0020      	movs	r0, r4
 8002ee8:	f7ff ffb2 	bl	8002e50 <chThdRelease>
 8002eec:	0028      	movs	r0, r5
 8002eee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002ef0:	0004      	movs	r4, r0
 8002ef2:	e7f7      	b.n	8002ee4 <regfind+0x44>
 8002ef4:	20000738 	.word	0x20000738
	...

08002f00 <chHeapAlloc>:
 8002f00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002f02:	46c6      	mov	lr, r8
 8002f04:	0007      	movs	r7, r0
 8002f06:	b500      	push	{lr}
 8002f08:	2800      	cmp	r0, #0
 8002f0a:	d030      	beq.n	8002f6e <chHeapAlloc+0x6e>
 8002f0c:	2307      	movs	r3, #7
 8002f0e:	1dce      	adds	r6, r1, #7
 8002f10:	439e      	bics	r6, r3
 8002f12:	3309      	adds	r3, #9
 8002f14:	4698      	mov	r8, r3
 8002f16:	003d      	movs	r5, r7
 8002f18:	44b8      	add	r8, r7
 8002f1a:	4640      	mov	r0, r8
 8002f1c:	3508      	adds	r5, #8
 8002f1e:	f7ff fdcf 	bl	8002ac0 <chMtxLock>
 8002f22:	e003      	b.n	8002f2c <chHeapAlloc+0x2c>
 8002f24:	6863      	ldr	r3, [r4, #4]
 8002f26:	42b3      	cmp	r3, r6
 8002f28:	d214      	bcs.n	8002f54 <chHeapAlloc+0x54>
 8002f2a:	0025      	movs	r5, r4
 8002f2c:	682c      	ldr	r4, [r5, #0]
 8002f2e:	2c00      	cmp	r4, #0
 8002f30:	d1f8      	bne.n	8002f24 <chHeapAlloc+0x24>
 8002f32:	4640      	mov	r0, r8
 8002f34:	f7fe fc3c 	bl	80017b0 <chMtxUnlock>
 8002f38:	683b      	ldr	r3, [r7, #0]
 8002f3a:	2b00      	cmp	r3, #0
 8002f3c:	d021      	beq.n	8002f82 <chHeapAlloc+0x82>
 8002f3e:	0030      	movs	r0, r6
 8002f40:	3008      	adds	r0, #8
 8002f42:	4798      	blx	r3
 8002f44:	2800      	cmp	r0, #0
 8002f46:	d01c      	beq.n	8002f82 <chHeapAlloc+0x82>
 8002f48:	6007      	str	r7, [r0, #0]
 8002f4a:	6046      	str	r6, [r0, #4]
 8002f4c:	3008      	adds	r0, #8
 8002f4e:	bc04      	pop	{r2}
 8002f50:	4690      	mov	r8, r2
 8002f52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002f54:	0032      	movs	r2, r6
 8002f56:	3208      	adds	r2, #8
 8002f58:	6821      	ldr	r1, [r4, #0]
 8002f5a:	4293      	cmp	r3, r2
 8002f5c:	d209      	bcs.n	8002f72 <chHeapAlloc+0x72>
 8002f5e:	6029      	str	r1, [r5, #0]
 8002f60:	4640      	mov	r0, r8
 8002f62:	6027      	str	r7, [r4, #0]
 8002f64:	f7fe fc24 	bl	80017b0 <chMtxUnlock>
 8002f68:	0020      	movs	r0, r4
 8002f6a:	3008      	adds	r0, #8
 8002f6c:	e7ef      	b.n	8002f4e <chHeapAlloc+0x4e>
 8002f6e:	4f06      	ldr	r7, [pc, #24]	; (8002f88 <chHeapAlloc+0x88>)
 8002f70:	e7cc      	b.n	8002f0c <chHeapAlloc+0xc>
 8002f72:	1b9b      	subs	r3, r3, r6
 8002f74:	18a2      	adds	r2, r4, r2
 8002f76:	3b08      	subs	r3, #8
 8002f78:	6011      	str	r1, [r2, #0]
 8002f7a:	6053      	str	r3, [r2, #4]
 8002f7c:	602a      	str	r2, [r5, #0]
 8002f7e:	6066      	str	r6, [r4, #4]
 8002f80:	e7ee      	b.n	8002f60 <chHeapAlloc+0x60>
 8002f82:	2000      	movs	r0, #0
 8002f84:	e7e3      	b.n	8002f4e <chHeapAlloc+0x4e>
 8002f86:	46c0      	nop			; (mov r8, r8)
 8002f88:	20000890 	.word	0x20000890
 8002f8c:	00000000 	.word	0x00000000

08002f90 <chThdCreateFromHeap.constprop.53>:
 8002f90:	b570      	push	{r4, r5, r6, lr}
 8002f92:	000e      	movs	r6, r1
 8002f94:	21a4      	movs	r1, #164	; 0xa4
 8002f96:	0005      	movs	r5, r0
 8002f98:	0049      	lsls	r1, r1, #1
 8002f9a:	4816      	ldr	r0, [pc, #88]	; (8002ff4 <chThdCreateFromHeap.constprop.53+0x64>)
 8002f9c:	f7ff ffb0 	bl	8002f00 <chHeapAlloc>
 8002fa0:	1e04      	subs	r4, r0, #0
 8002fa2:	d024      	beq.n	8002fee <chThdCreateFromHeap.constprop.53+0x5e>
 8002fa4:	b672      	cpsid	i
 8002fa6:	0003      	movs	r3, r0
 8002fa8:	4a13      	ldr	r2, [pc, #76]	; (8002ff8 <chThdCreateFromHeap.constprop.53+0x68>)
 8002faa:	3325      	adds	r3, #37	; 0x25
 8002fac:	33ff      	adds	r3, #255	; 0xff
 8002fae:	60c3      	str	r3, [r0, #12]
 8002fb0:	611a      	str	r2, [r3, #16]
 8002fb2:	4a12      	ldr	r2, [pc, #72]	; (8002ffc <chThdCreateFromHeap.constprop.53+0x6c>)
 8002fb4:	615e      	str	r6, [r3, #20]
 8002fb6:	621a      	str	r2, [r3, #32]
 8002fb8:	2302      	movs	r3, #2
 8002fba:	7703      	strb	r3, [r0, #28]
 8002fbc:	2300      	movs	r3, #0
 8002fbe:	2201      	movs	r2, #1
 8002fc0:	6383      	str	r3, [r0, #56]	; 0x38
 8002fc2:	6343      	str	r3, [r0, #52]	; 0x34
 8002fc4:	6183      	str	r3, [r0, #24]
 8002fc6:	4b0e      	ldr	r3, [pc, #56]	; (8003000 <chThdCreateFromHeap.constprop.53+0x70>)
 8002fc8:	6085      	str	r5, [r0, #8]
 8002fca:	6103      	str	r3, [r0, #16]
 8002fcc:	6959      	ldr	r1, [r3, #20]
 8002fce:	63c5      	str	r5, [r0, #60]	; 0x3c
 8002fd0:	6141      	str	r1, [r0, #20]
 8002fd2:	7782      	strb	r2, [r0, #30]
 8002fd4:	6108      	str	r0, [r1, #16]
 8002fd6:	6158      	str	r0, [r3, #20]
 8002fd8:	0003      	movs	r3, r0
 8002fda:	3324      	adds	r3, #36	; 0x24
 8002fdc:	6243      	str	r3, [r0, #36]	; 0x24
 8002fde:	3304      	adds	r3, #4
 8002fe0:	6283      	str	r3, [r0, #40]	; 0x28
 8002fe2:	62c3      	str	r3, [r0, #44]	; 0x2c
 8002fe4:	7742      	strb	r2, [r0, #29]
 8002fe6:	2100      	movs	r1, #0
 8002fe8:	f7fe fb6a 	bl	80016c0 <chSchWakeupS>
 8002fec:	b662      	cpsie	i
 8002fee:	0020      	movs	r0, r4
 8002ff0:	bd70      	pop	{r4, r5, r6, pc}
 8002ff2:	46c0      	nop			; (mov r8, r8)
 8002ff4:	200008b8 	.word	0x200008b8
 8002ff8:	080008b1 	.word	0x080008b1
 8002ffc:	080001a1 	.word	0x080001a1
 8003000:	20000738 	.word	0x20000738
	...

08003010 <dyn3_execute>:
 8003010:	4b45      	ldr	r3, [pc, #276]	; (8003128 <dyn3_execute+0x118>)
 8003012:	b510      	push	{r4, lr}
 8003014:	699b      	ldr	r3, [r3, #24]
 8003016:	4945      	ldr	r1, [pc, #276]	; (800312c <dyn3_execute+0x11c>)
 8003018:	6898      	ldr	r0, [r3, #8]
 800301a:	3801      	subs	r0, #1
 800301c:	f7ff ffb8 	bl	8002f90 <chThdCreateFromHeap.constprop.53>
 8003020:	7f81      	ldrb	r1, [r0, #30]
 8003022:	0004      	movs	r4, r0
 8003024:	3901      	subs	r1, #1
 8003026:	424b      	negs	r3, r1
 8003028:	4159      	adcs	r1, r3
 800302a:	2001      	movs	r0, #1
 800302c:	b2c9      	uxtb	r1, r1
 800302e:	f7fd fbf7 	bl	8000820 <_test_assert>
 8003032:	2800      	cmp	r0, #0
 8003034:	d000      	beq.n	8003038 <dyn3_execute+0x28>
 8003036:	bd10      	pop	{r4, pc}
 8003038:	b672      	cpsid	i
 800303a:	7fa3      	ldrb	r3, [r4, #30]
 800303c:	3301      	adds	r3, #1
 800303e:	77a3      	strb	r3, [r4, #30]
 8003040:	b662      	cpsie	i
 8003042:	7fa1      	ldrb	r1, [r4, #30]
 8003044:	3002      	adds	r0, #2
 8003046:	3902      	subs	r1, #2
 8003048:	424b      	negs	r3, r1
 800304a:	4159      	adcs	r1, r3
 800304c:	b2c9      	uxtb	r1, r1
 800304e:	f7fd fbe7 	bl	8000820 <_test_assert>
 8003052:	2800      	cmp	r0, #0
 8003054:	d1ef      	bne.n	8003036 <dyn3_execute+0x26>
 8003056:	0020      	movs	r0, r4
 8003058:	f7ff fefa 	bl	8002e50 <chThdRelease>
 800305c:	7fa1      	ldrb	r1, [r4, #30]
 800305e:	2003      	movs	r0, #3
 8003060:	3901      	subs	r1, #1
 8003062:	424b      	negs	r3, r1
 8003064:	4159      	adcs	r1, r3
 8003066:	b2c9      	uxtb	r1, r1
 8003068:	f7fd fbda 	bl	8000820 <_test_assert>
 800306c:	2800      	cmp	r0, #0
 800306e:	d1e2      	bne.n	8003036 <dyn3_execute+0x26>
 8003070:	0020      	movs	r0, r4
 8003072:	f7ff ff15 	bl	8002ea0 <regfind>
 8003076:	0001      	movs	r1, r0
 8003078:	2004      	movs	r0, #4
 800307a:	f7fd fbd1 	bl	8000820 <_test_assert>
 800307e:	2800      	cmp	r0, #0
 8003080:	d1d9      	bne.n	8003036 <dyn3_execute+0x26>
 8003082:	0020      	movs	r0, r4
 8003084:	f7ff ff0c 	bl	8002ea0 <regfind>
 8003088:	0001      	movs	r1, r0
 800308a:	2005      	movs	r0, #5
 800308c:	f7fd fbc8 	bl	8000820 <_test_assert>
 8003090:	2800      	cmp	r0, #0
 8003092:	d1d0      	bne.n	8003036 <dyn3_execute+0x26>
 8003094:	0020      	movs	r0, r4
 8003096:	f7ff fedb 	bl	8002e50 <chThdRelease>
 800309a:	7fa1      	ldrb	r1, [r4, #30]
 800309c:	2006      	movs	r0, #6
 800309e:	424b      	negs	r3, r1
 80030a0:	4159      	adcs	r1, r3
 80030a2:	b2c9      	uxtb	r1, r1
 80030a4:	f7fd fbbc 	bl	8000820 <_test_assert>
 80030a8:	2800      	cmp	r0, #0
 80030aa:	d1c4      	bne.n	8003036 <dyn3_execute+0x26>
 80030ac:	7f21      	ldrb	r1, [r4, #28]
 80030ae:	3007      	adds	r0, #7
 80030b0:	424b      	negs	r3, r1
 80030b2:	4159      	adcs	r1, r3
 80030b4:	b2c9      	uxtb	r1, r1
 80030b6:	f7fd fbb3 	bl	8000820 <_test_assert>
 80030ba:	2800      	cmp	r0, #0
 80030bc:	d1bb      	bne.n	8003036 <dyn3_execute+0x26>
 80030be:	0020      	movs	r0, r4
 80030c0:	f7ff feee 	bl	8002ea0 <regfind>
 80030c4:	0001      	movs	r1, r0
 80030c6:	2008      	movs	r0, #8
 80030c8:	f7fd fbaa 	bl	8000820 <_test_assert>
 80030cc:	2800      	cmp	r0, #0
 80030ce:	d1b2      	bne.n	8003036 <dyn3_execute+0x26>
 80030d0:	0020      	movs	r0, r4
 80030d2:	f7ff fee5 	bl	8002ea0 <regfind>
 80030d6:	0001      	movs	r1, r0
 80030d8:	2009      	movs	r0, #9
 80030da:	f7fd fba1 	bl	8000820 <_test_assert>
 80030de:	2800      	cmp	r0, #0
 80030e0:	d1a9      	bne.n	8003036 <dyn3_execute+0x26>
 80030e2:	30f5      	adds	r0, #245	; 0xf5
 80030e4:	30ff      	adds	r0, #255	; 0xff
 80030e6:	f7ff f9bb 	bl	8002460 <chThdSleep>
 80030ea:	7f21      	ldrb	r1, [r4, #28]
 80030ec:	200a      	movs	r0, #10
 80030ee:	390f      	subs	r1, #15
 80030f0:	424b      	negs	r3, r1
 80030f2:	4159      	adcs	r1, r3
 80030f4:	b2c9      	uxtb	r1, r1
 80030f6:	f7fd fb93 	bl	8000820 <_test_assert>
 80030fa:	2800      	cmp	r0, #0
 80030fc:	d19b      	bne.n	8003036 <dyn3_execute+0x26>
 80030fe:	0020      	movs	r0, r4
 8003100:	f7ff fece 	bl	8002ea0 <regfind>
 8003104:	0001      	movs	r1, r0
 8003106:	200b      	movs	r0, #11
 8003108:	f7fd fb8a 	bl	8000820 <_test_assert>
 800310c:	2800      	cmp	r0, #0
 800310e:	d000      	beq.n	8003112 <dyn3_execute+0x102>
 8003110:	e791      	b.n	8003036 <dyn3_execute+0x26>
 8003112:	0020      	movs	r0, r4
 8003114:	f7ff fec4 	bl	8002ea0 <regfind>
 8003118:	2101      	movs	r1, #1
 800311a:	4041      	eors	r1, r0
 800311c:	b2c9      	uxtb	r1, r1
 800311e:	200c      	movs	r0, #12
 8003120:	f7fd fb7e 	bl	8000820 <_test_assert>
 8003124:	e787      	b.n	8003036 <dyn3_execute+0x26>
 8003126:	46c0      	nop			; (mov r8, r8)
 8003128:	20000738 	.word	0x20000738
 800312c:	080058c0 	.word	0x080058c0

08003130 <heap1_execute>:
 8003130:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003132:	b083      	sub	sp, #12
 8003134:	4669      	mov	r1, sp
 8003136:	2000      	movs	r0, #0
 8003138:	f7ff fe2a 	bl	8002d90 <chHeapStatus>
 800313c:	2110      	movs	r1, #16
 800313e:	2000      	movs	r0, #0
 8003140:	f7ff fede 	bl	8002f00 <chHeapAlloc>
 8003144:	0001      	movs	r1, r0
 8003146:	1e4b      	subs	r3, r1, #1
 8003148:	4199      	sbcs	r1, r3
 800314a:	0004      	movs	r4, r0
 800314c:	b2c9      	uxtb	r1, r1
 800314e:	2001      	movs	r0, #1
 8003150:	f7fd fb66 	bl	8000820 <_test_assert>
 8003154:	2800      	cmp	r0, #0
 8003156:	d001      	beq.n	800315c <heap1_execute+0x2c>
 8003158:	b003      	add	sp, #12
 800315a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800315c:	0020      	movs	r0, r4
 800315e:	f7ff fe37 	bl	8002dd0 <chHeapFree>
 8003162:	4982      	ldr	r1, [pc, #520]	; (800336c <heap1_execute+0x23c>)
 8003164:	2000      	movs	r0, #0
 8003166:	f7ff fecb 	bl	8002f00 <chHeapAlloc>
 800316a:	4241      	negs	r1, r0
 800316c:	4141      	adcs	r1, r0
 800316e:	2002      	movs	r0, #2
 8003170:	b2c9      	uxtb	r1, r1
 8003172:	f7fd fb55 	bl	8000820 <_test_assert>
 8003176:	2800      	cmp	r0, #0
 8003178:	d1ee      	bne.n	8003158 <heap1_execute+0x28>
 800317a:	4c7d      	ldr	r4, [pc, #500]	; (8003370 <heap1_execute+0x240>)
 800317c:	4669      	mov	r1, sp
 800317e:	0020      	movs	r0, r4
 8003180:	f7ff fe06 	bl	8002d90 <chHeapStatus>
 8003184:	2110      	movs	r1, #16
 8003186:	0020      	movs	r0, r4
 8003188:	f7ff feba 	bl	8002f00 <chHeapAlloc>
 800318c:	2110      	movs	r1, #16
 800318e:	0007      	movs	r7, r0
 8003190:	0020      	movs	r0, r4
 8003192:	f7ff feb5 	bl	8002f00 <chHeapAlloc>
 8003196:	2110      	movs	r1, #16
 8003198:	0006      	movs	r6, r0
 800319a:	0020      	movs	r0, r4
 800319c:	f7ff feb0 	bl	8002f00 <chHeapAlloc>
 80031a0:	0005      	movs	r5, r0
 80031a2:	0038      	movs	r0, r7
 80031a4:	f7ff fe14 	bl	8002dd0 <chHeapFree>
 80031a8:	0030      	movs	r0, r6
 80031aa:	f7ff fe11 	bl	8002dd0 <chHeapFree>
 80031ae:	0028      	movs	r0, r5
 80031b0:	f7ff fe0e 	bl	8002dd0 <chHeapFree>
 80031b4:	a901      	add	r1, sp, #4
 80031b6:	0020      	movs	r0, r4
 80031b8:	f7ff fdea 	bl	8002d90 <chHeapStatus>
 80031bc:	3801      	subs	r0, #1
 80031be:	4241      	negs	r1, r0
 80031c0:	4141      	adcs	r1, r0
 80031c2:	2003      	movs	r0, #3
 80031c4:	b2c9      	uxtb	r1, r1
 80031c6:	f7fd fb2b 	bl	8000820 <_test_assert>
 80031ca:	2800      	cmp	r0, #0
 80031cc:	d1c4      	bne.n	8003158 <heap1_execute+0x28>
 80031ce:	2110      	movs	r1, #16
 80031d0:	0020      	movs	r0, r4
 80031d2:	f7ff fe95 	bl	8002f00 <chHeapAlloc>
 80031d6:	2110      	movs	r1, #16
 80031d8:	0005      	movs	r5, r0
 80031da:	0020      	movs	r0, r4
 80031dc:	f7ff fe90 	bl	8002f00 <chHeapAlloc>
 80031e0:	0006      	movs	r6, r0
 80031e2:	2110      	movs	r1, #16
 80031e4:	0020      	movs	r0, r4
 80031e6:	f7ff fe8b 	bl	8002f00 <chHeapAlloc>
 80031ea:	f7ff fdf1 	bl	8002dd0 <chHeapFree>
 80031ee:	0030      	movs	r0, r6
 80031f0:	f7ff fdee 	bl	8002dd0 <chHeapFree>
 80031f4:	0028      	movs	r0, r5
 80031f6:	f7ff fdeb 	bl	8002dd0 <chHeapFree>
 80031fa:	a901      	add	r1, sp, #4
 80031fc:	0020      	movs	r0, r4
 80031fe:	f7ff fdc7 	bl	8002d90 <chHeapStatus>
 8003202:	3801      	subs	r0, #1
 8003204:	4241      	negs	r1, r0
 8003206:	4141      	adcs	r1, r0
 8003208:	2004      	movs	r0, #4
 800320a:	b2c9      	uxtb	r1, r1
 800320c:	f7fd fb08 	bl	8000820 <_test_assert>
 8003210:	2800      	cmp	r0, #0
 8003212:	d1a1      	bne.n	8003158 <heap1_execute+0x28>
 8003214:	2111      	movs	r1, #17
 8003216:	0020      	movs	r0, r4
 8003218:	f7ff fe72 	bl	8002f00 <chHeapAlloc>
 800321c:	2110      	movs	r1, #16
 800321e:	0005      	movs	r5, r0
 8003220:	0020      	movs	r0, r4
 8003222:	f7ff fe6d 	bl	8002f00 <chHeapAlloc>
 8003226:	0006      	movs	r6, r0
 8003228:	0028      	movs	r0, r5
 800322a:	f7ff fdd1 	bl	8002dd0 <chHeapFree>
 800322e:	a901      	add	r1, sp, #4
 8003230:	0020      	movs	r0, r4
 8003232:	f7ff fdad 	bl	8002d90 <chHeapStatus>
 8003236:	3802      	subs	r0, #2
 8003238:	4241      	negs	r1, r0
 800323a:	4141      	adcs	r1, r0
 800323c:	2005      	movs	r0, #5
 800323e:	b2c9      	uxtb	r1, r1
 8003240:	f7fd faee 	bl	8000820 <_test_assert>
 8003244:	2800      	cmp	r0, #0
 8003246:	d000      	beq.n	800324a <heap1_execute+0x11a>
 8003248:	e786      	b.n	8003158 <heap1_execute+0x28>
 800324a:	2110      	movs	r1, #16
 800324c:	0020      	movs	r0, r4
 800324e:	f7ff fe57 	bl	8002f00 <chHeapAlloc>
 8003252:	a901      	add	r1, sp, #4
 8003254:	0005      	movs	r5, r0
 8003256:	0020      	movs	r0, r4
 8003258:	f7ff fd9a 	bl	8002d90 <chHeapStatus>
 800325c:	2101      	movs	r1, #1
 800325e:	2801      	cmp	r0, #1
 8003260:	d007      	beq.n	8003272 <heap1_execute+0x142>
 8003262:	a901      	add	r1, sp, #4
 8003264:	0020      	movs	r0, r4
 8003266:	f7ff fd93 	bl	8002d90 <chHeapStatus>
 800326a:	1e81      	subs	r1, r0, #2
 800326c:	4248      	negs	r0, r1
 800326e:	4141      	adcs	r1, r0
 8003270:	b2c9      	uxtb	r1, r1
 8003272:	2006      	movs	r0, #6
 8003274:	f7fd fad4 	bl	8000820 <_test_assert>
 8003278:	2800      	cmp	r0, #0
 800327a:	d000      	beq.n	800327e <heap1_execute+0x14e>
 800327c:	e76c      	b.n	8003158 <heap1_execute+0x28>
 800327e:	0030      	movs	r0, r6
 8003280:	f7ff fda6 	bl	8002dd0 <chHeapFree>
 8003284:	0028      	movs	r0, r5
 8003286:	f7ff fda3 	bl	8002dd0 <chHeapFree>
 800328a:	a901      	add	r1, sp, #4
 800328c:	0020      	movs	r0, r4
 800328e:	f7ff fd7f 	bl	8002d90 <chHeapStatus>
 8003292:	1e41      	subs	r1, r0, #1
 8003294:	4248      	negs	r0, r1
 8003296:	4141      	adcs	r1, r0
 8003298:	2007      	movs	r0, #7
 800329a:	b2c9      	uxtb	r1, r1
 800329c:	f7fd fac0 	bl	8000820 <_test_assert>
 80032a0:	2800      	cmp	r0, #0
 80032a2:	d000      	beq.n	80032a6 <heap1_execute+0x176>
 80032a4:	e758      	b.n	8003158 <heap1_execute+0x28>
 80032a6:	2110      	movs	r1, #16
 80032a8:	0020      	movs	r0, r4
 80032aa:	f7ff fe29 	bl	8002f00 <chHeapAlloc>
 80032ae:	2110      	movs	r1, #16
 80032b0:	0006      	movs	r6, r0
 80032b2:	0020      	movs	r0, r4
 80032b4:	f7ff fe24 	bl	8002f00 <chHeapAlloc>
 80032b8:	0005      	movs	r5, r0
 80032ba:	0030      	movs	r0, r6
 80032bc:	f7ff fd88 	bl	8002dd0 <chHeapFree>
 80032c0:	a901      	add	r1, sp, #4
 80032c2:	0020      	movs	r0, r4
 80032c4:	f7ff fd64 	bl	8002d90 <chHeapStatus>
 80032c8:	1e81      	subs	r1, r0, #2
 80032ca:	4248      	negs	r0, r1
 80032cc:	4141      	adcs	r1, r0
 80032ce:	2008      	movs	r0, #8
 80032d0:	b2c9      	uxtb	r1, r1
 80032d2:	f7fd faa5 	bl	8000820 <_test_assert>
 80032d6:	2800      	cmp	r0, #0
 80032d8:	d000      	beq.n	80032dc <heap1_execute+0x1ac>
 80032da:	e73d      	b.n	8003158 <heap1_execute+0x28>
 80032dc:	2120      	movs	r1, #32
 80032de:	0020      	movs	r0, r4
 80032e0:	f7ff fe0e 	bl	8002f00 <chHeapAlloc>
 80032e4:	f7ff fd74 	bl	8002dd0 <chHeapFree>
 80032e8:	0028      	movs	r0, r5
 80032ea:	f7ff fd71 	bl	8002dd0 <chHeapFree>
 80032ee:	a901      	add	r1, sp, #4
 80032f0:	0020      	movs	r0, r4
 80032f2:	f7ff fd4d 	bl	8002d90 <chHeapStatus>
 80032f6:	1e41      	subs	r1, r0, #1
 80032f8:	4248      	negs	r0, r1
 80032fa:	4141      	adcs	r1, r0
 80032fc:	2009      	movs	r0, #9
 80032fe:	b2c9      	uxtb	r1, r1
 8003300:	f7fd fa8e 	bl	8000820 <_test_assert>
 8003304:	2800      	cmp	r0, #0
 8003306:	d000      	beq.n	800330a <heap1_execute+0x1da>
 8003308:	e726      	b.n	8003158 <heap1_execute+0x28>
 800330a:	a901      	add	r1, sp, #4
 800330c:	0020      	movs	r0, r4
 800330e:	f7ff fd3f 	bl	8002d90 <chHeapStatus>
 8003312:	9901      	ldr	r1, [sp, #4]
 8003314:	0020      	movs	r0, r4
 8003316:	f7ff fdf3 	bl	8002f00 <chHeapAlloc>
 800331a:	a901      	add	r1, sp, #4
 800331c:	0005      	movs	r5, r0
 800331e:	0020      	movs	r0, r4
 8003320:	f7ff fd36 	bl	8002d90 <chHeapStatus>
 8003324:	4241      	negs	r1, r0
 8003326:	4141      	adcs	r1, r0
 8003328:	200a      	movs	r0, #10
 800332a:	b2c9      	uxtb	r1, r1
 800332c:	f7fd fa78 	bl	8000820 <_test_assert>
 8003330:	2800      	cmp	r0, #0
 8003332:	d000      	beq.n	8003336 <heap1_execute+0x206>
 8003334:	e710      	b.n	8003158 <heap1_execute+0x28>
 8003336:	0028      	movs	r0, r5
 8003338:	f7ff fd4a 	bl	8002dd0 <chHeapFree>
 800333c:	a901      	add	r1, sp, #4
 800333e:	0020      	movs	r0, r4
 8003340:	f7ff fd26 	bl	8002d90 <chHeapStatus>
 8003344:	1e41      	subs	r1, r0, #1
 8003346:	4248      	negs	r0, r1
 8003348:	4141      	adcs	r1, r0
 800334a:	200b      	movs	r0, #11
 800334c:	b2c9      	uxtb	r1, r1
 800334e:	f7fd fa67 	bl	8000820 <_test_assert>
 8003352:	2800      	cmp	r0, #0
 8003354:	d000      	beq.n	8003358 <heap1_execute+0x228>
 8003356:	e6ff      	b.n	8003158 <heap1_execute+0x28>
 8003358:	9b01      	ldr	r3, [sp, #4]
 800335a:	9a00      	ldr	r2, [sp, #0]
 800335c:	300c      	adds	r0, #12
 800335e:	1a99      	subs	r1, r3, r2
 8003360:	424b      	negs	r3, r1
 8003362:	4159      	adcs	r1, r3
 8003364:	b2c9      	uxtb	r1, r1
 8003366:	f7fd fa5b 	bl	8000820 <_test_assert>
 800336a:	e6f5      	b.n	8003158 <heap1_execute+0x28>
 800336c:	ffffff00 	.word	0xffffff00
 8003370:	20000fb0 	.word	0x20000fb0
	...

08003380 <chSemWait>:
 8003380:	b510      	push	{r4, lr}
 8003382:	0002      	movs	r2, r0
 8003384:	b672      	cpsid	i
 8003386:	6883      	ldr	r3, [r0, #8]
 8003388:	3b01      	subs	r3, #1
 800338a:	6083      	str	r3, [r0, #8]
 800338c:	2000      	movs	r0, #0
 800338e:	2b00      	cmp	r3, #0
 8003390:	db01      	blt.n	8003396 <chSemWait+0x16>
 8003392:	b662      	cpsie	i
 8003394:	bd10      	pop	{r4, pc}
 8003396:	4c07      	ldr	r4, [pc, #28]	; (80033b4 <chSemWait+0x34>)
 8003398:	3005      	adds	r0, #5
 800339a:	69a3      	ldr	r3, [r4, #24]
 800339c:	621a      	str	r2, [r3, #32]
 800339e:	601a      	str	r2, [r3, #0]
 80033a0:	6851      	ldr	r1, [r2, #4]
 80033a2:	6059      	str	r1, [r3, #4]
 80033a4:	600b      	str	r3, [r1, #0]
 80033a6:	6053      	str	r3, [r2, #4]
 80033a8:	f7fe fa7a 	bl	80018a0 <chSchGoSleepS>
 80033ac:	69a3      	ldr	r3, [r4, #24]
 80033ae:	6a18      	ldr	r0, [r3, #32]
 80033b0:	e7ef      	b.n	8003392 <chSemWait+0x12>
 80033b2:	46c0      	nop			; (mov r8, r8)
 80033b4:	20000738 	.word	0x20000738
	...

080033c0 <bmk11_execute>:
 80033c0:	b570      	push	{r4, r5, r6, lr}
 80033c2:	2500      	movs	r5, #0
 80033c4:	f7ff f91c 	bl	8002600 <test_wait_tick>
 80033c8:	f7fd fdea 	bl	8000fa0 <test_start_timer.constprop.1>
 80033cc:	4c13      	ldr	r4, [pc, #76]	; (800341c <bmk11_execute+0x5c>)
 80033ce:	4e14      	ldr	r6, [pc, #80]	; (8003420 <bmk11_execute+0x60>)
 80033d0:	0020      	movs	r0, r4
 80033d2:	f7ff ffd5 	bl	8003380 <chSemWait>
 80033d6:	0020      	movs	r0, r4
 80033d8:	f7fe fa1a 	bl	8001810 <chSemSignal>
 80033dc:	0020      	movs	r0, r4
 80033de:	f7ff ffcf 	bl	8003380 <chSemWait>
 80033e2:	0020      	movs	r0, r4
 80033e4:	f7fe fa14 	bl	8001810 <chSemSignal>
 80033e8:	0020      	movs	r0, r4
 80033ea:	f7ff ffc9 	bl	8003380 <chSemWait>
 80033ee:	0020      	movs	r0, r4
 80033f0:	f7fe fa0e 	bl	8001810 <chSemSignal>
 80033f4:	0020      	movs	r0, r4
 80033f6:	f7ff ffc3 	bl	8003380 <chSemWait>
 80033fa:	0020      	movs	r0, r4
 80033fc:	f7fe fa08 	bl	8001810 <chSemSignal>
 8003400:	7833      	ldrb	r3, [r6, #0]
 8003402:	3501      	adds	r5, #1
 8003404:	2b00      	cmp	r3, #0
 8003406:	d0e3      	beq.n	80033d0 <bmk11_execute+0x10>
 8003408:	4806      	ldr	r0, [pc, #24]	; (8003424 <bmk11_execute+0x64>)
 800340a:	f7fd fa79 	bl	8000900 <test_print>
 800340e:	00a8      	lsls	r0, r5, #2
 8003410:	f7fd f97e 	bl	8000710 <test_printn>
 8003414:	4804      	ldr	r0, [pc, #16]	; (8003428 <bmk11_execute+0x68>)
 8003416:	f7fd fa53 	bl	80008c0 <test_println>
 800341a:	bd70      	pop	{r4, r5, r6, pc}
 800341c:	20000930 	.word	0x20000930
 8003420:	20000fd0 	.word	0x20000fd0
 8003424:	08005730 	.word	0x08005730
 8003428:	08005750 	.word	0x08005750
 800342c:	00000000 	.word	0x00000000

08003430 <thread3.lto_priv.66>:
 8003430:	b570      	push	{r4, r5, r6, lr}
 8003432:	4c07      	ldr	r4, [pc, #28]	; (8003450 <thread3.lto_priv.66+0x20>)
 8003434:	69a3      	ldr	r3, [r4, #24]
 8003436:	7f5b      	ldrb	r3, [r3, #29]
 8003438:	075b      	lsls	r3, r3, #29
 800343a:	d408      	bmi.n	800344e <thread3.lto_priv.66+0x1e>
 800343c:	2504      	movs	r5, #4
 800343e:	4e05      	ldr	r6, [pc, #20]	; (8003454 <thread3.lto_priv.66+0x24>)
 8003440:	0030      	movs	r0, r6
 8003442:	f7ff ff9d 	bl	8003380 <chSemWait>
 8003446:	69a3      	ldr	r3, [r4, #24]
 8003448:	7f5b      	ldrb	r3, [r3, #29]
 800344a:	421d      	tst	r5, r3
 800344c:	d0f8      	beq.n	8003440 <thread3.lto_priv.66+0x10>
 800344e:	bd70      	pop	{r4, r5, r6, pc}
 8003450:	20000738 	.word	0x20000738
 8003454:	20000930 	.word	0x20000930
	...

08003460 <sem4_execute>:
 8003460:	2300      	movs	r3, #0
 8003462:	b510      	push	{r4, lr}
 8003464:	b086      	sub	sp, #24
 8003466:	ac03      	add	r4, sp, #12
 8003468:	9403      	str	r4, [sp, #12]
 800346a:	6064      	str	r4, [r4, #4]
 800346c:	60a3      	str	r3, [r4, #8]
 800346e:	b672      	cpsid	i
 8003470:	2100      	movs	r1, #0
 8003472:	0020      	movs	r0, r4
 8003474:	f7fd fcfc 	bl	8000e70 <chSemResetI>
 8003478:	f7fe f80a 	bl	8001490 <chSchRescheduleS>
 800347c:	b662      	cpsie	i
 800347e:	b672      	cpsid	i
 8003480:	9905      	ldr	r1, [sp, #20]
 8003482:	2001      	movs	r0, #1
 8003484:	1e4b      	subs	r3, r1, #1
 8003486:	4319      	orrs	r1, r3
 8003488:	0fc9      	lsrs	r1, r1, #31
 800348a:	f7fd f9c9 	bl	8000820 <_test_assert>
 800348e:	2800      	cmp	r0, #0
 8003490:	d002      	beq.n	8003498 <sem4_execute+0x38>
 8003492:	b662      	cpsie	i
 8003494:	b006      	add	sp, #24
 8003496:	bd10      	pop	{r4, pc}
 8003498:	b662      	cpsie	i
 800349a:	21a4      	movs	r1, #164	; 0xa4
 800349c:	4b2d      	ldr	r3, [pc, #180]	; (8003554 <sem4_execute+0xf4>)
 800349e:	0049      	lsls	r1, r1, #1
 80034a0:	699b      	ldr	r3, [r3, #24]
 80034a2:	482d      	ldr	r0, [pc, #180]	; (8003558 <sem4_execute+0xf8>)
 80034a4:	689a      	ldr	r2, [r3, #8]
 80034a6:	9400      	str	r4, [sp, #0]
 80034a8:	3a01      	subs	r2, #1
 80034aa:	4b2c      	ldr	r3, [pc, #176]	; (800355c <sem4_execute+0xfc>)
 80034ac:	f7fe f9c8 	bl	8001840 <chThdCreateStatic>
 80034b0:	4b2b      	ldr	r3, [pc, #172]	; (8003560 <sem4_execute+0x100>)
 80034b2:	6018      	str	r0, [r3, #0]
 80034b4:	0020      	movs	r0, r4
 80034b6:	f7ff ff63 	bl	8003380 <chSemWait>
 80034ba:	b672      	cpsid	i
 80034bc:	9905      	ldr	r1, [sp, #20]
 80034be:	2002      	movs	r0, #2
 80034c0:	1e4b      	subs	r3, r1, #1
 80034c2:	4319      	orrs	r1, r3
 80034c4:	0fc9      	lsrs	r1, r1, #31
 80034c6:	f7fd f9ab 	bl	8000820 <_test_assert>
 80034ca:	2800      	cmp	r0, #0
 80034cc:	d1e1      	bne.n	8003492 <sem4_execute+0x32>
 80034ce:	b662      	cpsie	i
 80034d0:	b672      	cpsid	i
 80034d2:	68a3      	ldr	r3, [r4, #8]
 80034d4:	2b00      	cmp	r3, #0
 80034d6:	dd35      	ble.n	8003544 <sem4_execute+0xe4>
 80034d8:	f7fd ffda 	bl	8001490 <chSchRescheduleS>
 80034dc:	b662      	cpsie	i
 80034de:	b672      	cpsid	i
 80034e0:	9b05      	ldr	r3, [sp, #20]
 80034e2:	2003      	movs	r0, #3
 80034e4:	17d9      	asrs	r1, r3, #31
 80034e6:	1ac9      	subs	r1, r1, r3
 80034e8:	0fc9      	lsrs	r1, r1, #31
 80034ea:	f7fd f999 	bl	8000820 <_test_assert>
 80034ee:	2800      	cmp	r0, #0
 80034f0:	d1cf      	bne.n	8003492 <sem4_execute+0x32>
 80034f2:	b662      	cpsie	i
 80034f4:	b672      	cpsid	i
 80034f6:	9b05      	ldr	r3, [sp, #20]
 80034f8:	2004      	movs	r0, #4
 80034fa:	1e59      	subs	r1, r3, #1
 80034fc:	424b      	negs	r3, r1
 80034fe:	4159      	adcs	r1, r3
 8003500:	b2c9      	uxtb	r1, r1
 8003502:	f7fd f98d 	bl	8000820 <_test_assert>
 8003506:	2800      	cmp	r0, #0
 8003508:	d1c3      	bne.n	8003492 <sem4_execute+0x32>
 800350a:	b662      	cpsie	i
 800350c:	b672      	cpsid	i
 800350e:	68a3      	ldr	r3, [r4, #8]
 8003510:	2b00      	cmp	r3, #0
 8003512:	dd1b      	ble.n	800354c <sem4_execute+0xec>
 8003514:	f7fd ffbc 	bl	8001490 <chSchRescheduleS>
 8003518:	b662      	cpsie	i
 800351a:	b672      	cpsid	i
 800351c:	9b05      	ldr	r3, [sp, #20]
 800351e:	2003      	movs	r0, #3
 8003520:	17d9      	asrs	r1, r3, #31
 8003522:	1ac9      	subs	r1, r1, r3
 8003524:	0fc9      	lsrs	r1, r1, #31
 8003526:	f7fd f97b 	bl	8000820 <_test_assert>
 800352a:	2800      	cmp	r0, #0
 800352c:	d1b1      	bne.n	8003492 <sem4_execute+0x32>
 800352e:	b662      	cpsie	i
 8003530:	b672      	cpsid	i
 8003532:	9b05      	ldr	r3, [sp, #20]
 8003534:	2005      	movs	r0, #5
 8003536:	1e59      	subs	r1, r3, #1
 8003538:	424b      	negs	r3, r1
 800353a:	4159      	adcs	r1, r3
 800353c:	b2c9      	uxtb	r1, r1
 800353e:	f7fd f96f 	bl	8000820 <_test_assert>
 8003542:	e7a6      	b.n	8003492 <sem4_execute+0x32>
 8003544:	0020      	movs	r0, r4
 8003546:	f7fd fc1b 	bl	8000d80 <chSemSignalI>
 800354a:	e7c5      	b.n	80034d8 <sem4_execute+0x78>
 800354c:	0020      	movs	r0, r4
 800354e:	f7fd fc17 	bl	8000d80 <chSemSignalI>
 8003552:	e7df      	b.n	8003514 <sem4_execute+0xb4>
 8003554:	20000738 	.word	0x20000738
 8003558:	20000940 	.word	0x20000940
 800355c:	080014b1 	.word	0x080014b1
 8003560:	20000fd4 	.word	0x20000fd4
	...

08003570 <thread3.lto_priv.65>:
 8003570:	b510      	push	{r4, lr}
 8003572:	4c04      	ldr	r4, [pc, #16]	; (8003584 <thread3.lto_priv.65+0x14>)
 8003574:	0020      	movs	r0, r4
 8003576:	f7ff ff03 	bl	8003380 <chSemWait>
 800357a:	0020      	movs	r0, r4
 800357c:	f7fe f948 	bl	8001810 <chSemSignal>
 8003580:	bd10      	pop	{r4, pc}
 8003582:	46c0      	nop			; (mov r8, r8)
 8003584:	200006ac 	.word	0x200006ac
	...

08003590 <thread1.lto_priv.67>:
 8003590:	b510      	push	{r4, lr}
 8003592:	0004      	movs	r4, r0
 8003594:	4803      	ldr	r0, [pc, #12]	; (80035a4 <thread1.lto_priv.67+0x14>)
 8003596:	f7ff fef3 	bl	8003380 <chSemWait>
 800359a:	7820      	ldrb	r0, [r4, #0]
 800359c:	f7fd f958 	bl	8000850 <test_emit_token>
 80035a0:	bd10      	pop	{r4, pc}
 80035a2:	46c0      	nop			; (mov r8, r8)
 80035a4:	200006ac 	.word	0x200006ac
	...

080035b0 <chThdWait>:
 80035b0:	b570      	push	{r4, r5, r6, lr}
 80035b2:	0004      	movs	r4, r0
 80035b4:	b672      	cpsid	i
 80035b6:	7f03      	ldrb	r3, [r0, #28]
 80035b8:	2b0f      	cmp	r3, #15
 80035ba:	d007      	beq.n	80035cc <chThdWait+0x1c>
 80035bc:	4b07      	ldr	r3, [pc, #28]	; (80035dc <chThdWait+0x2c>)
 80035be:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80035c0:	699b      	ldr	r3, [r3, #24]
 80035c2:	601a      	str	r2, [r3, #0]
 80035c4:	6243      	str	r3, [r0, #36]	; 0x24
 80035c6:	2009      	movs	r0, #9
 80035c8:	f7fe f96a 	bl	80018a0 <chSchGoSleepS>
 80035cc:	6a25      	ldr	r5, [r4, #32]
 80035ce:	b662      	cpsie	i
 80035d0:	0020      	movs	r0, r4
 80035d2:	f7ff fc3d 	bl	8002e50 <chThdRelease>
 80035d6:	0028      	movs	r0, r5
 80035d8:	bd70      	pop	{r4, r5, r6, pc}
 80035da:	46c0      	nop			; (mov r8, r8)
 80035dc:	20000738 	.word	0x20000738

080035e0 <bmk5_execute>:
 80035e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80035e2:	46ce      	mov	lr, r9
 80035e4:	4647      	mov	r7, r8
 80035e6:	b580      	push	{r7, lr}
 80035e8:	4b15      	ldr	r3, [pc, #84]	; (8003640 <bmk5_execute+0x60>)
 80035ea:	b083      	sub	sp, #12
 80035ec:	699b      	ldr	r3, [r3, #24]
 80035ee:	2400      	movs	r4, #0
 80035f0:	689d      	ldr	r5, [r3, #8]
 80035f2:	f7ff f805 	bl	8002600 <test_wait_tick>
 80035f6:	f7fd fcd3 	bl	8000fa0 <test_start_timer.constprop.1>
 80035fa:	4b12      	ldr	r3, [pc, #72]	; (8003644 <bmk5_execute+0x64>)
 80035fc:	2600      	movs	r6, #0
 80035fe:	4699      	mov	r9, r3
 8003600:	4b11      	ldr	r3, [pc, #68]	; (8003648 <bmk5_execute+0x68>)
 8003602:	4f12      	ldr	r7, [pc, #72]	; (800364c <bmk5_execute+0x6c>)
 8003604:	4698      	mov	r8, r3
 8003606:	3d01      	subs	r5, #1
 8003608:	21a4      	movs	r1, #164	; 0xa4
 800360a:	464b      	mov	r3, r9
 800360c:	002a      	movs	r2, r5
 800360e:	0049      	lsls	r1, r1, #1
 8003610:	9600      	str	r6, [sp, #0]
 8003612:	4640      	mov	r0, r8
 8003614:	f7fe f914 	bl	8001840 <chThdCreateStatic>
 8003618:	f7ff ffca 	bl	80035b0 <chThdWait>
 800361c:	783b      	ldrb	r3, [r7, #0]
 800361e:	3401      	adds	r4, #1
 8003620:	2b00      	cmp	r3, #0
 8003622:	d0f1      	beq.n	8003608 <bmk5_execute+0x28>
 8003624:	480a      	ldr	r0, [pc, #40]	; (8003650 <bmk5_execute+0x70>)
 8003626:	f7fd f96b 	bl	8000900 <test_print>
 800362a:	0020      	movs	r0, r4
 800362c:	f7fd f870 	bl	8000710 <test_printn>
 8003630:	4808      	ldr	r0, [pc, #32]	; (8003654 <bmk5_execute+0x74>)
 8003632:	f7fd f945 	bl	80008c0 <test_println>
 8003636:	b003      	add	sp, #12
 8003638:	bc0c      	pop	{r2, r3}
 800363a:	4690      	mov	r8, r2
 800363c:	4699      	mov	r9, r3
 800363e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003640:	20000738 	.word	0x20000738
 8003644:	08005691 	.word	0x08005691
 8003648:	20000940 	.word	0x20000940
 800364c:	20000fd0 	.word	0x20000fd0
 8003650:	08005730 	.word	0x08005730
 8003654:	08005830 	.word	0x08005830
	...

08003660 <test_wait_threads>:
 8003660:	b570      	push	{r4, r5, r6, lr}
 8003662:	4c07      	ldr	r4, [pc, #28]	; (8003680 <test_wait_threads+0x20>)
 8003664:	2600      	movs	r6, #0
 8003666:	0025      	movs	r5, r4
 8003668:	3514      	adds	r5, #20
 800366a:	6820      	ldr	r0, [r4, #0]
 800366c:	2800      	cmp	r0, #0
 800366e:	d002      	beq.n	8003676 <test_wait_threads+0x16>
 8003670:	f7ff ff9e 	bl	80035b0 <chThdWait>
 8003674:	6026      	str	r6, [r4, #0]
 8003676:	3404      	adds	r4, #4
 8003678:	42ac      	cmp	r4, r5
 800367a:	d1f6      	bne.n	800366a <test_wait_threads+0xa>
 800367c:	bd70      	pop	{r4, r5, r6, pc}
 800367e:	46c0      	nop			; (mov r8, r8)
 8003680:	20000fd4 	.word	0x20000fd4
	...

08003690 <bmk8_execute>:
 8003690:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003692:	46ce      	mov	lr, r9
 8003694:	4647      	mov	r7, r8
 8003696:	2300      	movs	r3, #0
 8003698:	b580      	push	{r7, lr}
 800369a:	b085      	sub	sp, #20
 800369c:	9303      	str	r3, [sp, #12]
 800369e:	f7fe ffaf 	bl	8002600 <test_wait_tick>
 80036a2:	4b2d      	ldr	r3, [pc, #180]	; (8003758 <bmk8_execute+0xc8>)
 80036a4:	27a4      	movs	r7, #164	; 0xa4
 80036a6:	4698      	mov	r8, r3
 80036a8:	4b2c      	ldr	r3, [pc, #176]	; (800375c <bmk8_execute+0xcc>)
 80036aa:	4c2d      	ldr	r4, [pc, #180]	; (8003760 <bmk8_execute+0xd0>)
 80036ac:	4699      	mov	r9, r3
 80036ae:	699b      	ldr	r3, [r3, #24]
 80036b0:	007f      	lsls	r7, r7, #1
 80036b2:	689a      	ldr	r2, [r3, #8]
 80036b4:	ae03      	add	r6, sp, #12
 80036b6:	4643      	mov	r3, r8
 80036b8:	0039      	movs	r1, r7
 80036ba:	3a01      	subs	r2, #1
 80036bc:	9600      	str	r6, [sp, #0]
 80036be:	0020      	movs	r0, r4
 80036c0:	f7fe f8be 	bl	8001840 <chThdCreateStatic>
 80036c4:	464b      	mov	r3, r9
 80036c6:	699b      	ldr	r3, [r3, #24]
 80036c8:	4d26      	ldr	r5, [pc, #152]	; (8003764 <bmk8_execute+0xd4>)
 80036ca:	689a      	ldr	r2, [r3, #8]
 80036cc:	6028      	str	r0, [r5, #0]
 80036ce:	4643      	mov	r3, r8
 80036d0:	0039      	movs	r1, r7
 80036d2:	3a01      	subs	r2, #1
 80036d4:	19e0      	adds	r0, r4, r7
 80036d6:	9600      	str	r6, [sp, #0]
 80036d8:	f7fe f8b2 	bl	8001840 <chThdCreateStatic>
 80036dc:	464b      	mov	r3, r9
 80036de:	699b      	ldr	r3, [r3, #24]
 80036e0:	6068      	str	r0, [r5, #4]
 80036e2:	689a      	ldr	r2, [r3, #8]
 80036e4:	23a4      	movs	r3, #164	; 0xa4
 80036e6:	009b      	lsls	r3, r3, #2
 80036e8:	18e0      	adds	r0, r4, r3
 80036ea:	0039      	movs	r1, r7
 80036ec:	4643      	mov	r3, r8
 80036ee:	3a01      	subs	r2, #1
 80036f0:	9600      	str	r6, [sp, #0]
 80036f2:	f7fe f8a5 	bl	8001840 <chThdCreateStatic>
 80036f6:	464b      	mov	r3, r9
 80036f8:	699b      	ldr	r3, [r3, #24]
 80036fa:	60a8      	str	r0, [r5, #8]
 80036fc:	689a      	ldr	r2, [r3, #8]
 80036fe:	23f6      	movs	r3, #246	; 0xf6
 8003700:	009b      	lsls	r3, r3, #2
 8003702:	18e0      	adds	r0, r4, r3
 8003704:	0039      	movs	r1, r7
 8003706:	4643      	mov	r3, r8
 8003708:	3a01      	subs	r2, #1
 800370a:	9600      	str	r6, [sp, #0]
 800370c:	f7fe f898 	bl	8001840 <chThdCreateStatic>
 8003710:	464b      	mov	r3, r9
 8003712:	699b      	ldr	r3, [r3, #24]
 8003714:	0039      	movs	r1, r7
 8003716:	689a      	ldr	r2, [r3, #8]
 8003718:	23a4      	movs	r3, #164	; 0xa4
 800371a:	00db      	lsls	r3, r3, #3
 800371c:	3a01      	subs	r2, #1
 800371e:	60e8      	str	r0, [r5, #12]
 8003720:	18e0      	adds	r0, r4, r3
 8003722:	9600      	str	r6, [sp, #0]
 8003724:	4643      	mov	r3, r8
 8003726:	f7fe f88b 	bl	8001840 <chThdCreateStatic>
 800372a:	6128      	str	r0, [r5, #16]
 800372c:	480e      	ldr	r0, [pc, #56]	; (8003768 <bmk8_execute+0xd8>)
 800372e:	f7fe fe97 	bl	8002460 <chThdSleep>
 8003732:	f7fd f815 	bl	8000760 <test_terminate_threads>
 8003736:	f7ff ff93 	bl	8003660 <test_wait_threads>
 800373a:	480c      	ldr	r0, [pc, #48]	; (800376c <bmk8_execute+0xdc>)
 800373c:	f7fd f8e0 	bl	8000900 <test_print>
 8003740:	9803      	ldr	r0, [sp, #12]
 8003742:	f7fc ffe5 	bl	8000710 <test_printn>
 8003746:	480a      	ldr	r0, [pc, #40]	; (8003770 <bmk8_execute+0xe0>)
 8003748:	f7fd f8ba 	bl	80008c0 <test_println>
 800374c:	b005      	add	sp, #20
 800374e:	bc0c      	pop	{r2, r3}
 8003750:	4690      	mov	r8, r2
 8003752:	4699      	mov	r9, r3
 8003754:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003756:	46c0      	nop			; (mov r8, r8)
 8003758:	08001421 	.word	0x08001421
 800375c:	20000738 	.word	0x20000738
 8003760:	20000940 	.word	0x20000940
 8003764:	20000fd4 	.word	0x20000fd4
 8003768:	00002710 	.word	0x00002710
 800376c:	08005730 	.word	0x08005730
 8003770:	08005860 	.word	0x08005860
	...

08003780 <bmk7_execute>:
 8003780:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003782:	46c6      	mov	lr, r8
 8003784:	2700      	movs	r7, #0
 8003786:	21a4      	movs	r1, #164	; 0xa4
 8003788:	b500      	push	{lr}
 800378a:	4b3e      	ldr	r3, [pc, #248]	; (8003884 <bmk7_execute+0x104>)
 800378c:	4e3e      	ldr	r6, [pc, #248]	; (8003888 <bmk7_execute+0x108>)
 800378e:	4698      	mov	r8, r3
 8003790:	699b      	ldr	r3, [r3, #24]
 8003792:	4c3e      	ldr	r4, [pc, #248]	; (800388c <bmk7_execute+0x10c>)
 8003794:	689a      	ldr	r2, [r3, #8]
 8003796:	b082      	sub	sp, #8
 8003798:	0033      	movs	r3, r6
 800379a:	3205      	adds	r2, #5
 800379c:	0049      	lsls	r1, r1, #1
 800379e:	0020      	movs	r0, r4
 80037a0:	9700      	str	r7, [sp, #0]
 80037a2:	f7fe f84d 	bl	8001840 <chThdCreateStatic>
 80037a6:	4643      	mov	r3, r8
 80037a8:	4d39      	ldr	r5, [pc, #228]	; (8003890 <bmk7_execute+0x110>)
 80037aa:	21a4      	movs	r1, #164	; 0xa4
 80037ac:	6028      	str	r0, [r5, #0]
 80037ae:	0020      	movs	r0, r4
 80037b0:	699b      	ldr	r3, [r3, #24]
 80037b2:	3049      	adds	r0, #73	; 0x49
 80037b4:	689a      	ldr	r2, [r3, #8]
 80037b6:	0049      	lsls	r1, r1, #1
 80037b8:	0033      	movs	r3, r6
 80037ba:	3204      	adds	r2, #4
 80037bc:	30ff      	adds	r0, #255	; 0xff
 80037be:	9700      	str	r7, [sp, #0]
 80037c0:	f7fe f83e 	bl	8001840 <chThdCreateStatic>
 80037c4:	4643      	mov	r3, r8
 80037c6:	699b      	ldr	r3, [r3, #24]
 80037c8:	21a4      	movs	r1, #164	; 0xa4
 80037ca:	689a      	ldr	r2, [r3, #8]
 80037cc:	23a4      	movs	r3, #164	; 0xa4
 80037ce:	009b      	lsls	r3, r3, #2
 80037d0:	6068      	str	r0, [r5, #4]
 80037d2:	3203      	adds	r2, #3
 80037d4:	18e0      	adds	r0, r4, r3
 80037d6:	0049      	lsls	r1, r1, #1
 80037d8:	0033      	movs	r3, r6
 80037da:	9700      	str	r7, [sp, #0]
 80037dc:	f7fe f830 	bl	8001840 <chThdCreateStatic>
 80037e0:	4643      	mov	r3, r8
 80037e2:	699b      	ldr	r3, [r3, #24]
 80037e4:	21a4      	movs	r1, #164	; 0xa4
 80037e6:	689a      	ldr	r2, [r3, #8]
 80037e8:	23f6      	movs	r3, #246	; 0xf6
 80037ea:	009b      	lsls	r3, r3, #2
 80037ec:	60a8      	str	r0, [r5, #8]
 80037ee:	3202      	adds	r2, #2
 80037f0:	18e0      	adds	r0, r4, r3
 80037f2:	0049      	lsls	r1, r1, #1
 80037f4:	0033      	movs	r3, r6
 80037f6:	9700      	str	r7, [sp, #0]
 80037f8:	f7fe f822 	bl	8001840 <chThdCreateStatic>
 80037fc:	4643      	mov	r3, r8
 80037fe:	699b      	ldr	r3, [r3, #24]
 8003800:	21a4      	movs	r1, #164	; 0xa4
 8003802:	689a      	ldr	r2, [r3, #8]
 8003804:	23a4      	movs	r3, #164	; 0xa4
 8003806:	00db      	lsls	r3, r3, #3
 8003808:	60e8      	str	r0, [r5, #12]
 800380a:	3201      	adds	r2, #1
 800380c:	18e0      	adds	r0, r4, r3
 800380e:	0049      	lsls	r1, r1, #1
 8003810:	0033      	movs	r3, r6
 8003812:	9700      	str	r7, [sp, #0]
 8003814:	f7fe f814 	bl	8001840 <chThdCreateStatic>
 8003818:	2400      	movs	r4, #0
 800381a:	6128      	str	r0, [r5, #16]
 800381c:	f7fe fef0 	bl	8002600 <test_wait_tick>
 8003820:	f7fd fbbe 	bl	8000fa0 <test_start_timer.constprop.1>
 8003824:	4d1b      	ldr	r5, [pc, #108]	; (8003894 <bmk7_execute+0x114>)
 8003826:	4e1c      	ldr	r6, [pc, #112]	; (8003898 <bmk7_execute+0x118>)
 8003828:	b672      	cpsid	i
 800382a:	2100      	movs	r1, #0
 800382c:	0028      	movs	r0, r5
 800382e:	f7fd fb1f 	bl	8000e70 <chSemResetI>
 8003832:	f7fd fe2d 	bl	8001490 <chSchRescheduleS>
 8003836:	b662      	cpsie	i
 8003838:	7833      	ldrb	r3, [r6, #0]
 800383a:	3401      	adds	r4, #1
 800383c:	2b00      	cmp	r3, #0
 800383e:	d0f3      	beq.n	8003828 <bmk7_execute+0xa8>
 8003840:	f7fc ff8e 	bl	8000760 <test_terminate_threads>
 8003844:	b672      	cpsid	i
 8003846:	2100      	movs	r1, #0
 8003848:	0028      	movs	r0, r5
 800384a:	f7fd fb11 	bl	8000e70 <chSemResetI>
 800384e:	f7fd fe1f 	bl	8001490 <chSchRescheduleS>
 8003852:	b662      	cpsie	i
 8003854:	f7ff ff04 	bl	8003660 <test_wait_threads>
 8003858:	4810      	ldr	r0, [pc, #64]	; (800389c <bmk7_execute+0x11c>)
 800385a:	f7fd f851 	bl	8000900 <test_print>
 800385e:	0020      	movs	r0, r4
 8003860:	f7fc ff56 	bl	8000710 <test_printn>
 8003864:	480e      	ldr	r0, [pc, #56]	; (80038a0 <bmk7_execute+0x120>)
 8003866:	f7fd f84b 	bl	8000900 <test_print>
 800386a:	0060      	lsls	r0, r4, #1
 800386c:	1900      	adds	r0, r0, r4
 800386e:	0040      	lsls	r0, r0, #1
 8003870:	f7fc ff4e 	bl	8000710 <test_printn>
 8003874:	480b      	ldr	r0, [pc, #44]	; (80038a4 <bmk7_execute+0x124>)
 8003876:	f7fd f823 	bl	80008c0 <test_println>
 800387a:	b002      	add	sp, #8
 800387c:	bc04      	pop	{r2}
 800387e:	4690      	mov	r8, r2
 8003880:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003882:	46c0      	nop			; (mov r8, r8)
 8003884:	20000738 	.word	0x20000738
 8003888:	08003431 	.word	0x08003431
 800388c:	20000940 	.word	0x20000940
 8003890:	20000fd4 	.word	0x20000fd4
 8003894:	20000930 	.word	0x20000930
 8003898:	20000fd0 	.word	0x20000fd0
 800389c:	08005730 	.word	0x08005730
 80038a0:	08005840 	.word	0x08005840
 80038a4:	08005860 	.word	0x08005860
	...

080038b0 <bmk4_execute>:
 80038b0:	4b20      	ldr	r3, [pc, #128]	; (8003934 <bmk4_execute+0x84>)
 80038b2:	21a4      	movs	r1, #164	; 0xa4
 80038b4:	699b      	ldr	r3, [r3, #24]
 80038b6:	b570      	push	{r4, r5, r6, lr}
 80038b8:	689a      	ldr	r2, [r3, #8]
 80038ba:	2300      	movs	r3, #0
 80038bc:	b082      	sub	sp, #8
 80038be:	3201      	adds	r2, #1
 80038c0:	0049      	lsls	r1, r1, #1
 80038c2:	9300      	str	r3, [sp, #0]
 80038c4:	481c      	ldr	r0, [pc, #112]	; (8003938 <bmk4_execute+0x88>)
 80038c6:	4b1d      	ldr	r3, [pc, #116]	; (800393c <bmk4_execute+0x8c>)
 80038c8:	f7fd ffba 	bl	8001840 <chThdCreateStatic>
 80038cc:	2500      	movs	r5, #0
 80038ce:	4b1c      	ldr	r3, [pc, #112]	; (8003940 <bmk4_execute+0x90>)
 80038d0:	0004      	movs	r4, r0
 80038d2:	6018      	str	r0, [r3, #0]
 80038d4:	f7fe fe94 	bl	8002600 <test_wait_tick>
 80038d8:	f7fd fb62 	bl	8000fa0 <test_start_timer.constprop.1>
 80038dc:	4e19      	ldr	r6, [pc, #100]	; (8003944 <bmk4_execute+0x94>)
 80038de:	b672      	cpsid	i
 80038e0:	2100      	movs	r1, #0
 80038e2:	0020      	movs	r0, r4
 80038e4:	f7fd feec 	bl	80016c0 <chSchWakeupS>
 80038e8:	0020      	movs	r0, r4
 80038ea:	2100      	movs	r1, #0
 80038ec:	f7fd fee8 	bl	80016c0 <chSchWakeupS>
 80038f0:	0020      	movs	r0, r4
 80038f2:	2100      	movs	r1, #0
 80038f4:	f7fd fee4 	bl	80016c0 <chSchWakeupS>
 80038f8:	2100      	movs	r1, #0
 80038fa:	0020      	movs	r0, r4
 80038fc:	f7fd fee0 	bl	80016c0 <chSchWakeupS>
 8003900:	b662      	cpsie	i
 8003902:	7833      	ldrb	r3, [r6, #0]
 8003904:	3504      	adds	r5, #4
 8003906:	2b00      	cmp	r3, #0
 8003908:	d0e9      	beq.n	80038de <bmk4_execute+0x2e>
 800390a:	b672      	cpsid	i
 800390c:	2101      	movs	r1, #1
 800390e:	0020      	movs	r0, r4
 8003910:	4249      	negs	r1, r1
 8003912:	f7fd fed5 	bl	80016c0 <chSchWakeupS>
 8003916:	b662      	cpsie	i
 8003918:	f7ff fea2 	bl	8003660 <test_wait_threads>
 800391c:	480a      	ldr	r0, [pc, #40]	; (8003948 <bmk4_execute+0x98>)
 800391e:	f7fc ffef 	bl	8000900 <test_print>
 8003922:	0068      	lsls	r0, r5, #1
 8003924:	f7fc fef4 	bl	8000710 <test_printn>
 8003928:	4808      	ldr	r0, [pc, #32]	; (800394c <bmk4_execute+0x9c>)
 800392a:	f7fc ffc9 	bl	80008c0 <test_println>
 800392e:	b002      	add	sp, #8
 8003930:	bd70      	pop	{r4, r5, r6, pc}
 8003932:	46c0      	nop			; (mov r8, r8)
 8003934:	20000738 	.word	0x20000738
 8003938:	20000940 	.word	0x20000940
 800393c:	08001a11 	.word	0x08001a11
 8003940:	20000fd4 	.word	0x20000fd4
 8003944:	20000fd0 	.word	0x20000fd0
 8003948:	08005730 	.word	0x08005730
 800394c:	08005860 	.word	0x08005860

08003950 <bmk3_execute>:
 8003950:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003952:	46ce      	mov	lr, r9
 8003954:	4647      	mov	r7, r8
 8003956:	26a4      	movs	r6, #164	; 0xa4
 8003958:	b580      	push	{r7, lr}
 800395a:	2700      	movs	r7, #0
 800395c:	4b2e      	ldr	r3, [pc, #184]	; (8003a18 <bmk3_execute+0xc8>)
 800395e:	4c2f      	ldr	r4, [pc, #188]	; (8003a1c <bmk3_execute+0xcc>)
 8003960:	4698      	mov	r8, r3
 8003962:	699b      	ldr	r3, [r3, #24]
 8003964:	b083      	sub	sp, #12
 8003966:	689a      	ldr	r2, [r3, #8]
 8003968:	0076      	lsls	r6, r6, #1
 800396a:	0031      	movs	r1, r6
 800396c:	3201      	adds	r2, #1
 800396e:	9700      	str	r7, [sp, #0]
 8003970:	4b2b      	ldr	r3, [pc, #172]	; (8003a20 <bmk3_execute+0xd0>)
 8003972:	0020      	movs	r0, r4
 8003974:	f7fd ff64 	bl	8001840 <chThdCreateStatic>
 8003978:	4b2a      	ldr	r3, [pc, #168]	; (8003a24 <bmk3_execute+0xd4>)
 800397a:	4d2b      	ldr	r5, [pc, #172]	; (8003a28 <bmk3_execute+0xd8>)
 800397c:	4699      	mov	r9, r3
 800397e:	4643      	mov	r3, r8
 8003980:	699b      	ldr	r3, [r3, #24]
 8003982:	6028      	str	r0, [r5, #0]
 8003984:	689a      	ldr	r2, [r3, #8]
 8003986:	19a0      	adds	r0, r4, r6
 8003988:	464b      	mov	r3, r9
 800398a:	0031      	movs	r1, r6
 800398c:	3a02      	subs	r2, #2
 800398e:	9700      	str	r7, [sp, #0]
 8003990:	f7fd ff56 	bl	8001840 <chThdCreateStatic>
 8003994:	4643      	mov	r3, r8
 8003996:	699b      	ldr	r3, [r3, #24]
 8003998:	6068      	str	r0, [r5, #4]
 800399a:	689a      	ldr	r2, [r3, #8]
 800399c:	23a4      	movs	r3, #164	; 0xa4
 800399e:	009b      	lsls	r3, r3, #2
 80039a0:	18e0      	adds	r0, r4, r3
 80039a2:	0031      	movs	r1, r6
 80039a4:	464b      	mov	r3, r9
 80039a6:	3a03      	subs	r2, #3
 80039a8:	9700      	str	r7, [sp, #0]
 80039aa:	f7fd ff49 	bl	8001840 <chThdCreateStatic>
 80039ae:	4643      	mov	r3, r8
 80039b0:	699b      	ldr	r3, [r3, #24]
 80039b2:	60a8      	str	r0, [r5, #8]
 80039b4:	689a      	ldr	r2, [r3, #8]
 80039b6:	23f6      	movs	r3, #246	; 0xf6
 80039b8:	009b      	lsls	r3, r3, #2
 80039ba:	18e0      	adds	r0, r4, r3
 80039bc:	0031      	movs	r1, r6
 80039be:	464b      	mov	r3, r9
 80039c0:	3a04      	subs	r2, #4
 80039c2:	9700      	str	r7, [sp, #0]
 80039c4:	f7fd ff3c 	bl	8001840 <chThdCreateStatic>
 80039c8:	4643      	mov	r3, r8
 80039ca:	699b      	ldr	r3, [r3, #24]
 80039cc:	0031      	movs	r1, r6
 80039ce:	689a      	ldr	r2, [r3, #8]
 80039d0:	23a4      	movs	r3, #164	; 0xa4
 80039d2:	00db      	lsls	r3, r3, #3
 80039d4:	3a05      	subs	r2, #5
 80039d6:	60e8      	str	r0, [r5, #12]
 80039d8:	18e0      	adds	r0, r4, r3
 80039da:	9700      	str	r7, [sp, #0]
 80039dc:	464b      	mov	r3, r9
 80039de:	f7fd ff2f 	bl	8001840 <chThdCreateStatic>
 80039e2:	6128      	str	r0, [r5, #16]
 80039e4:	6828      	ldr	r0, [r5, #0]
 80039e6:	f7fe ffd3 	bl	8002990 <msg_loop_test>
 80039ea:	0004      	movs	r4, r0
 80039ec:	f7ff fe38 	bl	8003660 <test_wait_threads>
 80039f0:	480e      	ldr	r0, [pc, #56]	; (8003a2c <bmk3_execute+0xdc>)
 80039f2:	f7fc ff85 	bl	8000900 <test_print>
 80039f6:	0020      	movs	r0, r4
 80039f8:	f7fc fe8a 	bl	8000710 <test_printn>
 80039fc:	480c      	ldr	r0, [pc, #48]	; (8003a30 <bmk3_execute+0xe0>)
 80039fe:	f7fc ff7f 	bl	8000900 <test_print>
 8003a02:	0060      	lsls	r0, r4, #1
 8003a04:	f7fc fe84 	bl	8000710 <test_printn>
 8003a08:	480a      	ldr	r0, [pc, #40]	; (8003a34 <bmk3_execute+0xe4>)
 8003a0a:	f7fc ff59 	bl	80008c0 <test_println>
 8003a0e:	b003      	add	sp, #12
 8003a10:	bc0c      	pop	{r2, r3}
 8003a12:	4690      	mov	r8, r2
 8003a14:	4699      	mov	r9, r3
 8003a16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003a18:	20000738 	.word	0x20000738
 8003a1c:	20000940 	.word	0x20000940
 8003a20:	080028b1 	.word	0x080028b1
 8003a24:	08005691 	.word	0x08005691
 8003a28:	20000fd4 	.word	0x20000fd4
 8003a2c:	08005730 	.word	0x08005730
 8003a30:	08005820 	.word	0x08005820
 8003a34:	08005860 	.word	0x08005860
	...

08003a40 <bmk2_execute>:
 8003a40:	4b12      	ldr	r3, [pc, #72]	; (8003a8c <bmk2_execute+0x4c>)
 8003a42:	21a4      	movs	r1, #164	; 0xa4
 8003a44:	699b      	ldr	r3, [r3, #24]
 8003a46:	b510      	push	{r4, lr}
 8003a48:	689a      	ldr	r2, [r3, #8]
 8003a4a:	2300      	movs	r3, #0
 8003a4c:	b082      	sub	sp, #8
 8003a4e:	3201      	adds	r2, #1
 8003a50:	0049      	lsls	r1, r1, #1
 8003a52:	9300      	str	r3, [sp, #0]
 8003a54:	480e      	ldr	r0, [pc, #56]	; (8003a90 <bmk2_execute+0x50>)
 8003a56:	4b0f      	ldr	r3, [pc, #60]	; (8003a94 <bmk2_execute+0x54>)
 8003a58:	f7fd fef2 	bl	8001840 <chThdCreateStatic>
 8003a5c:	4b0e      	ldr	r3, [pc, #56]	; (8003a98 <bmk2_execute+0x58>)
 8003a5e:	6018      	str	r0, [r3, #0]
 8003a60:	f7fe ff96 	bl	8002990 <msg_loop_test>
 8003a64:	0004      	movs	r4, r0
 8003a66:	f7ff fdfb 	bl	8003660 <test_wait_threads>
 8003a6a:	480c      	ldr	r0, [pc, #48]	; (8003a9c <bmk2_execute+0x5c>)
 8003a6c:	f7fc ff48 	bl	8000900 <test_print>
 8003a70:	0020      	movs	r0, r4
 8003a72:	f7fc fe4d 	bl	8000710 <test_printn>
 8003a76:	480a      	ldr	r0, [pc, #40]	; (8003aa0 <bmk2_execute+0x60>)
 8003a78:	f7fc ff42 	bl	8000900 <test_print>
 8003a7c:	0060      	lsls	r0, r4, #1
 8003a7e:	f7fc fe47 	bl	8000710 <test_printn>
 8003a82:	4808      	ldr	r0, [pc, #32]	; (8003aa4 <bmk2_execute+0x64>)
 8003a84:	f7fc ff1c 	bl	80008c0 <test_println>
 8003a88:	b002      	add	sp, #8
 8003a8a:	bd10      	pop	{r4, pc}
 8003a8c:	20000738 	.word	0x20000738
 8003a90:	20000940 	.word	0x20000940
 8003a94:	080028b1 	.word	0x080028b1
 8003a98:	20000fd4 	.word	0x20000fd4
 8003a9c:	08005730 	.word	0x08005730
 8003aa0:	08005820 	.word	0x08005820
 8003aa4:	08005860 	.word	0x08005860
	...

08003ab0 <bmk1_execute>:
 8003ab0:	4b12      	ldr	r3, [pc, #72]	; (8003afc <bmk1_execute+0x4c>)
 8003ab2:	21a4      	movs	r1, #164	; 0xa4
 8003ab4:	699b      	ldr	r3, [r3, #24]
 8003ab6:	b510      	push	{r4, lr}
 8003ab8:	689a      	ldr	r2, [r3, #8]
 8003aba:	2300      	movs	r3, #0
 8003abc:	b082      	sub	sp, #8
 8003abe:	3a01      	subs	r2, #1
 8003ac0:	0049      	lsls	r1, r1, #1
 8003ac2:	9300      	str	r3, [sp, #0]
 8003ac4:	480e      	ldr	r0, [pc, #56]	; (8003b00 <bmk1_execute+0x50>)
 8003ac6:	4b0f      	ldr	r3, [pc, #60]	; (8003b04 <bmk1_execute+0x54>)
 8003ac8:	f7fd feba 	bl	8001840 <chThdCreateStatic>
 8003acc:	4b0e      	ldr	r3, [pc, #56]	; (8003b08 <bmk1_execute+0x58>)
 8003ace:	6018      	str	r0, [r3, #0]
 8003ad0:	f7fe ff5e 	bl	8002990 <msg_loop_test>
 8003ad4:	0004      	movs	r4, r0
 8003ad6:	f7ff fdc3 	bl	8003660 <test_wait_threads>
 8003ada:	480c      	ldr	r0, [pc, #48]	; (8003b0c <bmk1_execute+0x5c>)
 8003adc:	f7fc ff10 	bl	8000900 <test_print>
 8003ae0:	0020      	movs	r0, r4
 8003ae2:	f7fc fe15 	bl	8000710 <test_printn>
 8003ae6:	480a      	ldr	r0, [pc, #40]	; (8003b10 <bmk1_execute+0x60>)
 8003ae8:	f7fc ff0a 	bl	8000900 <test_print>
 8003aec:	0060      	lsls	r0, r4, #1
 8003aee:	f7fc fe0f 	bl	8000710 <test_printn>
 8003af2:	4808      	ldr	r0, [pc, #32]	; (8003b14 <bmk1_execute+0x64>)
 8003af4:	f7fc fee4 	bl	80008c0 <test_println>
 8003af8:	b002      	add	sp, #8
 8003afa:	bd10      	pop	{r4, pc}
 8003afc:	20000738 	.word	0x20000738
 8003b00:	20000940 	.word	0x20000940
 8003b04:	080028b1 	.word	0x080028b1
 8003b08:	20000fd4 	.word	0x20000fd4
 8003b0c:	08005730 	.word	0x08005730
 8003b10:	08005820 	.word	0x08005820
 8003b14:	08005860 	.word	0x08005860
	...

08003b20 <queues2_execute>:
 8003b20:	b570      	push	{r4, r5, r6, lr}
 8003b22:	b082      	sub	sp, #8
 8003b24:	b672      	cpsid	i
 8003b26:	4d7a      	ldr	r5, [pc, #488]	; (8003d10 <queues2_execute+0x1f0>)
 8003b28:	2100      	movs	r1, #0
 8003b2a:	69ab      	ldr	r3, [r5, #24]
 8003b2c:	696a      	ldr	r2, [r5, #20]
 8003b2e:	4293      	cmp	r3, r2
 8003b30:	d036      	beq.n	8003ba0 <queues2_execute+0x80>
 8003b32:	2001      	movs	r0, #1
 8003b34:	f7fc fe74 	bl	8000820 <_test_assert>
 8003b38:	2800      	cmp	r0, #0
 8003b3a:	d12e      	bne.n	8003b9a <queues2_execute+0x7a>
 8003b3c:	b662      	cpsie	i
 8003b3e:	2441      	movs	r4, #65	; 0x41
 8003b40:	2201      	movs	r2, #1
 8003b42:	0021      	movs	r1, r4
 8003b44:	3401      	adds	r4, #1
 8003b46:	4252      	negs	r2, r2
 8003b48:	0028      	movs	r0, r5
 8003b4a:	b2e4      	uxtb	r4, r4
 8003b4c:	f7fe fbb8 	bl	80022c0 <chOQPutTimeout>
 8003b50:	2c45      	cmp	r4, #69	; 0x45
 8003b52:	d1f5      	bne.n	8003b40 <queues2_execute+0x20>
 8003b54:	b672      	cpsid	i
 8003b56:	68a9      	ldr	r1, [r5, #8]
 8003b58:	2002      	movs	r0, #2
 8003b5a:	424b      	negs	r3, r1
 8003b5c:	4159      	adcs	r1, r3
 8003b5e:	b2c9      	uxtb	r1, r1
 8003b60:	f7fc fe5e 	bl	8000820 <_test_assert>
 8003b64:	1e06      	subs	r6, r0, #0
 8003b66:	d118      	bne.n	8003b9a <queues2_execute+0x7a>
 8003b68:	b662      	cpsie	i
 8003b6a:	2404      	movs	r4, #4
 8003b6c:	b672      	cpsid	i
 8003b6e:	0028      	movs	r0, r5
 8003b70:	f7fd f87e 	bl	8000c70 <chOQGetI>
 8003b74:	b662      	cpsie	i
 8003b76:	b2c0      	uxtb	r0, r0
 8003b78:	3c01      	subs	r4, #1
 8003b7a:	f7fc fe69 	bl	8000850 <test_emit_token>
 8003b7e:	2c00      	cmp	r4, #0
 8003b80:	d1f4      	bne.n	8003b6c <queues2_execute+0x4c>
 8003b82:	b672      	cpsid	i
 8003b84:	696b      	ldr	r3, [r5, #20]
 8003b86:	69aa      	ldr	r2, [r5, #24]
 8003b88:	4293      	cmp	r3, r2
 8003b8a:	d100      	bne.n	8003b8e <queues2_execute+0x6e>
 8003b8c:	e0ba      	b.n	8003d04 <queues2_execute+0x1e4>
 8003b8e:	0031      	movs	r1, r6
 8003b90:	2003      	movs	r0, #3
 8003b92:	f7fc fe45 	bl	8000820 <_test_assert>
 8003b96:	2800      	cmp	r0, #0
 8003b98:	d007      	beq.n	8003baa <queues2_execute+0x8a>
 8003b9a:	b662      	cpsie	i
 8003b9c:	b002      	add	sp, #8
 8003b9e:	bd70      	pop	{r4, r5, r6, pc}
 8003ba0:	68a9      	ldr	r1, [r5, #8]
 8003ba2:	1e4b      	subs	r3, r1, #1
 8003ba4:	4199      	sbcs	r1, r3
 8003ba6:	b2c9      	uxtb	r1, r1
 8003ba8:	e7c3      	b.n	8003b32 <queues2_execute+0x12>
 8003baa:	b662      	cpsie	i
 8003bac:	4959      	ldr	r1, [pc, #356]	; (8003d14 <queues2_execute+0x1f4>)
 8003bae:	2004      	movs	r0, #4
 8003bb0:	f7fc fe0e 	bl	80007d0 <_test_assert_sequence>
 8003bb4:	2800      	cmp	r0, #0
 8003bb6:	d1f1      	bne.n	8003b9c <queues2_execute+0x7c>
 8003bb8:	b672      	cpsid	i
 8003bba:	0028      	movs	r0, r5
 8003bbc:	f7fd f858 	bl	8000c70 <chOQGetI>
 8003bc0:	3003      	adds	r0, #3
 8003bc2:	4241      	negs	r1, r0
 8003bc4:	4141      	adcs	r1, r0
 8003bc6:	2005      	movs	r0, #5
 8003bc8:	b2c9      	uxtb	r1, r1
 8003bca:	f7fc fe29 	bl	8000820 <_test_assert>
 8003bce:	2800      	cmp	r0, #0
 8003bd0:	d1e3      	bne.n	8003b9a <queues2_execute+0x7a>
 8003bd2:	b662      	cpsie	i
 8003bd4:	4c50      	ldr	r4, [pc, #320]	; (8003d18 <queues2_execute+0x1f8>)
 8003bd6:	2300      	movs	r3, #0
 8003bd8:	0021      	movs	r1, r4
 8003bda:	2208      	movs	r2, #8
 8003bdc:	0028      	movs	r0, r5
 8003bde:	f7fe fb1f 	bl	8002220 <chOQWriteTimeout>
 8003be2:	3804      	subs	r0, #4
 8003be4:	4241      	negs	r1, r0
 8003be6:	4141      	adcs	r1, r0
 8003be8:	2006      	movs	r0, #6
 8003bea:	b2c9      	uxtb	r1, r1
 8003bec:	f7fc fe18 	bl	8000820 <_test_assert>
 8003bf0:	2800      	cmp	r0, #0
 8003bf2:	d1d3      	bne.n	8003b9c <queues2_execute+0x7c>
 8003bf4:	b672      	cpsid	i
 8003bf6:	68a9      	ldr	r1, [r5, #8]
 8003bf8:	3007      	adds	r0, #7
 8003bfa:	424b      	negs	r3, r1
 8003bfc:	4159      	adcs	r1, r3
 8003bfe:	b2c9      	uxtb	r1, r1
 8003c00:	f7fc fe0e 	bl	8000820 <_test_assert>
 8003c04:	1e03      	subs	r3, r0, #0
 8003c06:	d1c8      	bne.n	8003b9a <queues2_execute+0x7a>
 8003c08:	b662      	cpsie	i
 8003c0a:	0020      	movs	r0, r4
 8003c0c:	21a4      	movs	r1, #164	; 0xa4
 8003c0e:	4a43      	ldr	r2, [pc, #268]	; (8003d1c <queues2_execute+0x1fc>)
 8003c10:	3849      	subs	r0, #73	; 0x49
 8003c12:	6992      	ldr	r2, [r2, #24]
 8003c14:	0049      	lsls	r1, r1, #1
 8003c16:	6892      	ldr	r2, [r2, #8]
 8003c18:	38ff      	subs	r0, #255	; 0xff
 8003c1a:	9300      	str	r3, [sp, #0]
 8003c1c:	3201      	adds	r2, #1
 8003c1e:	4b40      	ldr	r3, [pc, #256]	; (8003d20 <queues2_execute+0x200>)
 8003c20:	f7fd fe0e 	bl	8001840 <chThdCreateStatic>
 8003c24:	4b3f      	ldr	r3, [pc, #252]	; (8003d24 <queues2_execute+0x204>)
 8003c26:	6018      	str	r0, [r3, #0]
 8003c28:	b672      	cpsid	i
 8003c2a:	692b      	ldr	r3, [r5, #16]
 8003c2c:	68ea      	ldr	r2, [r5, #12]
 8003c2e:	2008      	movs	r0, #8
 8003c30:	1a99      	subs	r1, r3, r2
 8003c32:	68ab      	ldr	r3, [r5, #8]
 8003c34:	1ac9      	subs	r1, r1, r3
 8003c36:	3904      	subs	r1, #4
 8003c38:	424b      	negs	r3, r1
 8003c3a:	4159      	adcs	r1, r3
 8003c3c:	b2c9      	uxtb	r1, r1
 8003c3e:	f7fc fdef 	bl	8000820 <_test_assert>
 8003c42:	2800      	cmp	r0, #0
 8003c44:	d1a9      	bne.n	8003b9a <queues2_execute+0x7a>
 8003c46:	b662      	cpsie	i
 8003c48:	f7ff fd0a 	bl	8003660 <test_wait_threads>
 8003c4c:	b672      	cpsid	i
 8003c4e:	68eb      	ldr	r3, [r5, #12]
 8003c50:	692a      	ldr	r2, [r5, #16]
 8003c52:	6828      	ldr	r0, [r5, #0]
 8003c54:	61ab      	str	r3, [r5, #24]
 8003c56:	616b      	str	r3, [r5, #20]
 8003c58:	1ad3      	subs	r3, r2, r3
 8003c5a:	60ab      	str	r3, [r5, #8]
 8003c5c:	42a8      	cmp	r0, r5
 8003c5e:	d00a      	beq.n	8003c76 <queues2_execute+0x156>
 8003c60:	2602      	movs	r6, #2
 8003c62:	4276      	negs	r6, r6
 8003c64:	6803      	ldr	r3, [r0, #0]
 8003c66:	605d      	str	r5, [r3, #4]
 8003c68:	602b      	str	r3, [r5, #0]
 8003c6a:	6206      	str	r6, [r0, #32]
 8003c6c:	f7fc ffb8 	bl	8000be0 <chSchReadyI>
 8003c70:	6828      	ldr	r0, [r5, #0]
 8003c72:	42a8      	cmp	r0, r5
 8003c74:	d1f6      	bne.n	8003c64 <queues2_execute+0x144>
 8003c76:	b662      	cpsie	i
 8003c78:	b672      	cpsid	i
 8003c7a:	692b      	ldr	r3, [r5, #16]
 8003c7c:	68ea      	ldr	r2, [r5, #12]
 8003c7e:	2009      	movs	r0, #9
 8003c80:	1a99      	subs	r1, r3, r2
 8003c82:	68ab      	ldr	r3, [r5, #8]
 8003c84:	1ac9      	subs	r1, r1, r3
 8003c86:	424b      	negs	r3, r1
 8003c88:	4159      	adcs	r1, r3
 8003c8a:	b2c9      	uxtb	r1, r1
 8003c8c:	f7fc fdc8 	bl	8000820 <_test_assert>
 8003c90:	1e03      	subs	r3, r0, #0
 8003c92:	d000      	beq.n	8003c96 <queues2_execute+0x176>
 8003c94:	e781      	b.n	8003b9a <queues2_execute+0x7a>
 8003c96:	b662      	cpsie	i
 8003c98:	2202      	movs	r2, #2
 8003c9a:	0021      	movs	r1, r4
 8003c9c:	0028      	movs	r0, r5
 8003c9e:	f7fe fabf 	bl	8002220 <chOQWriteTimeout>
 8003ca2:	1e81      	subs	r1, r0, #2
 8003ca4:	4248      	negs	r0, r1
 8003ca6:	4141      	adcs	r1, r0
 8003ca8:	200a      	movs	r0, #10
 8003caa:	b2c9      	uxtb	r1, r1
 8003cac:	f7fc fdb8 	bl	8000820 <_test_assert>
 8003cb0:	1e03      	subs	r3, r0, #0
 8003cb2:	d000      	beq.n	8003cb6 <queues2_execute+0x196>
 8003cb4:	e772      	b.n	8003b9c <queues2_execute+0x7c>
 8003cb6:	0021      	movs	r1, r4
 8003cb8:	2202      	movs	r2, #2
 8003cba:	0028      	movs	r0, r5
 8003cbc:	f7fe fab0 	bl	8002220 <chOQWriteTimeout>
 8003cc0:	1e81      	subs	r1, r0, #2
 8003cc2:	4248      	negs	r0, r1
 8003cc4:	4141      	adcs	r1, r0
 8003cc6:	200b      	movs	r0, #11
 8003cc8:	b2c9      	uxtb	r1, r1
 8003cca:	f7fc fda9 	bl	8000820 <_test_assert>
 8003cce:	2800      	cmp	r0, #0
 8003cd0:	d000      	beq.n	8003cd4 <queues2_execute+0x1b4>
 8003cd2:	e763      	b.n	8003b9c <queues2_execute+0x7c>
 8003cd4:	b672      	cpsid	i
 8003cd6:	68a9      	ldr	r1, [r5, #8]
 8003cd8:	300c      	adds	r0, #12
 8003cda:	424b      	negs	r3, r1
 8003cdc:	4159      	adcs	r1, r3
 8003cde:	b2c9      	uxtb	r1, r1
 8003ce0:	f7fc fd9e 	bl	8000820 <_test_assert>
 8003ce4:	1e01      	subs	r1, r0, #0
 8003ce6:	d000      	beq.n	8003cea <queues2_execute+0x1ca>
 8003ce8:	e757      	b.n	8003b9a <queues2_execute+0x7a>
 8003cea:	b662      	cpsie	i
 8003cec:	220a      	movs	r2, #10
 8003cee:	0028      	movs	r0, r5
 8003cf0:	f7fe fae6 	bl	80022c0 <chOQPutTimeout>
 8003cf4:	1c41      	adds	r1, r0, #1
 8003cf6:	4248      	negs	r0, r1
 8003cf8:	4141      	adcs	r1, r0
 8003cfa:	200d      	movs	r0, #13
 8003cfc:	b2c9      	uxtb	r1, r1
 8003cfe:	f7fc fd8f 	bl	8000820 <_test_assert>
 8003d02:	e74b      	b.n	8003b9c <queues2_execute+0x7c>
 8003d04:	68ae      	ldr	r6, [r5, #8]
 8003d06:	1e73      	subs	r3, r6, #1
 8003d08:	419e      	sbcs	r6, r3
 8003d0a:	b2f6      	uxtb	r6, r6
 8003d0c:	e73f      	b.n	8003b8e <queues2_execute+0x6e>
 8003d0e:	46c0      	nop			; (mov r8, r8)
 8003d10:	20000688 	.word	0x20000688
 8003d14:	08005c80 	.word	0x08005c80
 8003d18:	20000a88 	.word	0x20000a88
 8003d1c:	20000738 	.word	0x20000738
 8003d20:	08002311 	.word	0x08002311
 8003d24:	20000fd4 	.word	0x20000fd4
	...

08003d30 <queues1_execute>:
 8003d30:	b570      	push	{r4, r5, r6, lr}
 8003d32:	b082      	sub	sp, #8
 8003d34:	b672      	cpsid	i
 8003d36:	4c8d      	ldr	r4, [pc, #564]	; (8003f6c <queues1_execute+0x23c>)
 8003d38:	2001      	movs	r0, #1
 8003d3a:	68a1      	ldr	r1, [r4, #8]
 8003d3c:	424b      	negs	r3, r1
 8003d3e:	4159      	adcs	r1, r3
 8003d40:	b2c9      	uxtb	r1, r1
 8003d42:	f7fc fd6d 	bl	8000820 <_test_assert>
 8003d46:	1e05      	subs	r5, r0, #0
 8003d48:	d11e      	bne.n	8003d88 <queues1_execute+0x58>
 8003d4a:	b662      	cpsie	i
 8003d4c:	b672      	cpsid	i
 8003d4e:	2141      	movs	r1, #65	; 0x41
 8003d50:	0020      	movs	r0, r4
 8003d52:	f7fc ff65 	bl	8000c20 <chIQPutI>
 8003d56:	2142      	movs	r1, #66	; 0x42
 8003d58:	0020      	movs	r0, r4
 8003d5a:	f7fc ff61 	bl	8000c20 <chIQPutI>
 8003d5e:	2143      	movs	r1, #67	; 0x43
 8003d60:	0020      	movs	r0, r4
 8003d62:	f7fc ff5d 	bl	8000c20 <chIQPutI>
 8003d66:	2144      	movs	r1, #68	; 0x44
 8003d68:	0020      	movs	r0, r4
 8003d6a:	f7fc ff59 	bl	8000c20 <chIQPutI>
 8003d6e:	b662      	cpsie	i
 8003d70:	b672      	cpsid	i
 8003d72:	69a3      	ldr	r3, [r4, #24]
 8003d74:	6962      	ldr	r2, [r4, #20]
 8003d76:	4293      	cmp	r3, r2
 8003d78:	d100      	bne.n	8003d7c <queues1_execute+0x4c>
 8003d7a:	e0eb      	b.n	8003f54 <queues1_execute+0x224>
 8003d7c:	0029      	movs	r1, r5
 8003d7e:	2002      	movs	r0, #2
 8003d80:	f7fc fd4e 	bl	8000820 <_test_assert>
 8003d84:	2800      	cmp	r0, #0
 8003d86:	d002      	beq.n	8003d8e <queues1_execute+0x5e>
 8003d88:	b662      	cpsie	i
 8003d8a:	b002      	add	sp, #8
 8003d8c:	bd70      	pop	{r4, r5, r6, pc}
 8003d8e:	b662      	cpsie	i
 8003d90:	b672      	cpsid	i
 8003d92:	2100      	movs	r1, #0
 8003d94:	0020      	movs	r0, r4
 8003d96:	f7fc ff43 	bl	8000c20 <chIQPutI>
 8003d9a:	3004      	adds	r0, #4
 8003d9c:	4241      	negs	r1, r0
 8003d9e:	4141      	adcs	r1, r0
 8003da0:	2003      	movs	r0, #3
 8003da2:	b2c9      	uxtb	r1, r1
 8003da4:	f7fc fd3c 	bl	8000820 <_test_assert>
 8003da8:	2800      	cmp	r0, #0
 8003daa:	d1ed      	bne.n	8003d88 <queues1_execute+0x58>
 8003dac:	b662      	cpsie	i
 8003dae:	2504      	movs	r5, #4
 8003db0:	2101      	movs	r1, #1
 8003db2:	0020      	movs	r0, r4
 8003db4:	4249      	negs	r1, r1
 8003db6:	f7fe fb13 	bl	80023e0 <chIQGetTimeout>
 8003dba:	3d01      	subs	r5, #1
 8003dbc:	b2c0      	uxtb	r0, r0
 8003dbe:	f7fc fd47 	bl	8000850 <test_emit_token>
 8003dc2:	2d00      	cmp	r5, #0
 8003dc4:	d1f4      	bne.n	8003db0 <queues1_execute+0x80>
 8003dc6:	b672      	cpsid	i
 8003dc8:	68a1      	ldr	r1, [r4, #8]
 8003dca:	2004      	movs	r0, #4
 8003dcc:	424b      	negs	r3, r1
 8003dce:	4159      	adcs	r1, r3
 8003dd0:	b2c9      	uxtb	r1, r1
 8003dd2:	f7fc fd25 	bl	8000820 <_test_assert>
 8003dd6:	2800      	cmp	r0, #0
 8003dd8:	d1d6      	bne.n	8003d88 <queues1_execute+0x58>
 8003dda:	b662      	cpsie	i
 8003ddc:	4964      	ldr	r1, [pc, #400]	; (8003f70 <queues1_execute+0x240>)
 8003dde:	2005      	movs	r0, #5
 8003de0:	f7fc fcf6 	bl	80007d0 <_test_assert_sequence>
 8003de4:	2800      	cmp	r0, #0
 8003de6:	d1d0      	bne.n	8003d8a <queues1_execute+0x5a>
 8003de8:	b672      	cpsid	i
 8003dea:	2141      	movs	r1, #65	; 0x41
 8003dec:	0020      	movs	r0, r4
 8003dee:	f7fc ff17 	bl	8000c20 <chIQPutI>
 8003df2:	2142      	movs	r1, #66	; 0x42
 8003df4:	0020      	movs	r0, r4
 8003df6:	f7fc ff13 	bl	8000c20 <chIQPutI>
 8003dfa:	2143      	movs	r1, #67	; 0x43
 8003dfc:	0020      	movs	r0, r4
 8003dfe:	f7fc ff0f 	bl	8000c20 <chIQPutI>
 8003e02:	2144      	movs	r1, #68	; 0x44
 8003e04:	0020      	movs	r0, r4
 8003e06:	f7fc ff0b 	bl	8000c20 <chIQPutI>
 8003e0a:	b662      	cpsie	i
 8003e0c:	4e59      	ldr	r6, [pc, #356]	; (8003f74 <queues1_execute+0x244>)
 8003e0e:	2300      	movs	r3, #0
 8003e10:	0031      	movs	r1, r6
 8003e12:	2208      	movs	r2, #8
 8003e14:	0020      	movs	r0, r4
 8003e16:	f7fe fa9b 	bl	8002350 <chIQReadTimeout>
 8003e1a:	3804      	subs	r0, #4
 8003e1c:	4241      	negs	r1, r0
 8003e1e:	4141      	adcs	r1, r0
 8003e20:	2006      	movs	r0, #6
 8003e22:	b2c9      	uxtb	r1, r1
 8003e24:	f7fc fcfc 	bl	8000820 <_test_assert>
 8003e28:	2800      	cmp	r0, #0
 8003e2a:	d1ae      	bne.n	8003d8a <queues1_execute+0x5a>
 8003e2c:	b672      	cpsid	i
 8003e2e:	68a1      	ldr	r1, [r4, #8]
 8003e30:	3007      	adds	r0, #7
 8003e32:	424b      	negs	r3, r1
 8003e34:	4159      	adcs	r1, r3
 8003e36:	b2c9      	uxtb	r1, r1
 8003e38:	f7fc fcf2 	bl	8000820 <_test_assert>
 8003e3c:	2800      	cmp	r0, #0
 8003e3e:	d1a3      	bne.n	8003d88 <queues1_execute+0x58>
 8003e40:	b662      	cpsie	i
 8003e42:	b672      	cpsid	i
 8003e44:	2141      	movs	r1, #65	; 0x41
 8003e46:	0020      	movs	r0, r4
 8003e48:	f7fc feea 	bl	8000c20 <chIQPutI>
 8003e4c:	2142      	movs	r1, #66	; 0x42
 8003e4e:	0020      	movs	r0, r4
 8003e50:	f7fc fee6 	bl	8000c20 <chIQPutI>
 8003e54:	2143      	movs	r1, #67	; 0x43
 8003e56:	0020      	movs	r0, r4
 8003e58:	f7fc fee2 	bl	8000c20 <chIQPutI>
 8003e5c:	2144      	movs	r1, #68	; 0x44
 8003e5e:	0020      	movs	r0, r4
 8003e60:	f7fc fede 	bl	8000c20 <chIQPutI>
 8003e64:	b662      	cpsie	i
 8003e66:	2300      	movs	r3, #0
 8003e68:	0031      	movs	r1, r6
 8003e6a:	2202      	movs	r2, #2
 8003e6c:	0020      	movs	r0, r4
 8003e6e:	f7fe fa6f 	bl	8002350 <chIQReadTimeout>
 8003e72:	1e81      	subs	r1, r0, #2
 8003e74:	4248      	negs	r0, r1
 8003e76:	4141      	adcs	r1, r0
 8003e78:	2008      	movs	r0, #8
 8003e7a:	b2c9      	uxtb	r1, r1
 8003e7c:	f7fc fcd0 	bl	8000820 <_test_assert>
 8003e80:	2800      	cmp	r0, #0
 8003e82:	d000      	beq.n	8003e86 <queues1_execute+0x156>
 8003e84:	e781      	b.n	8003d8a <queues1_execute+0x5a>
 8003e86:	0031      	movs	r1, r6
 8003e88:	2300      	movs	r3, #0
 8003e8a:	2202      	movs	r2, #2
 8003e8c:	0020      	movs	r0, r4
 8003e8e:	f7fe fa5f 	bl	8002350 <chIQReadTimeout>
 8003e92:	1e81      	subs	r1, r0, #2
 8003e94:	4248      	negs	r0, r1
 8003e96:	4141      	adcs	r1, r0
 8003e98:	2009      	movs	r0, #9
 8003e9a:	b2c9      	uxtb	r1, r1
 8003e9c:	f7fc fcc0 	bl	8000820 <_test_assert>
 8003ea0:	2800      	cmp	r0, #0
 8003ea2:	d000      	beq.n	8003ea6 <queues1_execute+0x176>
 8003ea4:	e771      	b.n	8003d8a <queues1_execute+0x5a>
 8003ea6:	b672      	cpsid	i
 8003ea8:	68a1      	ldr	r1, [r4, #8]
 8003eaa:	300a      	adds	r0, #10
 8003eac:	424b      	negs	r3, r1
 8003eae:	4159      	adcs	r1, r3
 8003eb0:	b2c9      	uxtb	r1, r1
 8003eb2:	f7fc fcb5 	bl	8000820 <_test_assert>
 8003eb6:	2800      	cmp	r0, #0
 8003eb8:	d000      	beq.n	8003ebc <queues1_execute+0x18c>
 8003eba:	e765      	b.n	8003d88 <queues1_execute+0x58>
 8003ebc:	b662      	cpsie	i
 8003ebe:	b672      	cpsid	i
 8003ec0:	0029      	movs	r1, r5
 8003ec2:	0020      	movs	r0, r4
 8003ec4:	f7fc feac 	bl	8000c20 <chIQPutI>
 8003ec8:	68e3      	ldr	r3, [r4, #12]
 8003eca:	6820      	ldr	r0, [r4, #0]
 8003ecc:	61a3      	str	r3, [r4, #24]
 8003ece:	6163      	str	r3, [r4, #20]
 8003ed0:	60a5      	str	r5, [r4, #8]
 8003ed2:	42a0      	cmp	r0, r4
 8003ed4:	d00a      	beq.n	8003eec <queues1_execute+0x1bc>
 8003ed6:	2502      	movs	r5, #2
 8003ed8:	426d      	negs	r5, r5
 8003eda:	6803      	ldr	r3, [r0, #0]
 8003edc:	605c      	str	r4, [r3, #4]
 8003ede:	6023      	str	r3, [r4, #0]
 8003ee0:	6205      	str	r5, [r0, #32]
 8003ee2:	f7fc fe7d 	bl	8000be0 <chSchReadyI>
 8003ee6:	6820      	ldr	r0, [r4, #0]
 8003ee8:	42a0      	cmp	r0, r4
 8003eea:	d1f6      	bne.n	8003eda <queues1_execute+0x1aa>
 8003eec:	b662      	cpsie	i
 8003eee:	b672      	cpsid	i
 8003ef0:	68a1      	ldr	r1, [r4, #8]
 8003ef2:	200b      	movs	r0, #11
 8003ef4:	424b      	negs	r3, r1
 8003ef6:	4159      	adcs	r1, r3
 8003ef8:	b2c9      	uxtb	r1, r1
 8003efa:	f7fc fc91 	bl	8000820 <_test_assert>
 8003efe:	2800      	cmp	r0, #0
 8003f00:	d000      	beq.n	8003f04 <queues1_execute+0x1d4>
 8003f02:	e741      	b.n	8003d88 <queues1_execute+0x58>
 8003f04:	b662      	cpsie	i
 8003f06:	21a4      	movs	r1, #164	; 0xa4
 8003f08:	4b1b      	ldr	r3, [pc, #108]	; (8003f78 <queues1_execute+0x248>)
 8003f0a:	0049      	lsls	r1, r1, #1
 8003f0c:	699b      	ldr	r3, [r3, #24]
 8003f0e:	689a      	ldr	r2, [r3, #8]
 8003f10:	9000      	str	r0, [sp, #0]
 8003f12:	3201      	adds	r2, #1
 8003f14:	4b19      	ldr	r3, [pc, #100]	; (8003f7c <queues1_execute+0x24c>)
 8003f16:	481a      	ldr	r0, [pc, #104]	; (8003f80 <queues1_execute+0x250>)
 8003f18:	f7fd fc92 	bl	8001840 <chThdCreateStatic>
 8003f1c:	4b19      	ldr	r3, [pc, #100]	; (8003f84 <queues1_execute+0x254>)
 8003f1e:	6018      	str	r0, [r3, #0]
 8003f20:	b672      	cpsid	i
 8003f22:	68a1      	ldr	r1, [r4, #8]
 8003f24:	200c      	movs	r0, #12
 8003f26:	424b      	negs	r3, r1
 8003f28:	4159      	adcs	r1, r3
 8003f2a:	b2c9      	uxtb	r1, r1
 8003f2c:	f7fc fc78 	bl	8000820 <_test_assert>
 8003f30:	2800      	cmp	r0, #0
 8003f32:	d000      	beq.n	8003f36 <queues1_execute+0x206>
 8003f34:	e728      	b.n	8003d88 <queues1_execute+0x58>
 8003f36:	b662      	cpsie	i
 8003f38:	f7ff fb92 	bl	8003660 <test_wait_threads>
 8003f3c:	210a      	movs	r1, #10
 8003f3e:	0020      	movs	r0, r4
 8003f40:	f7fe fa4e 	bl	80023e0 <chIQGetTimeout>
 8003f44:	1c41      	adds	r1, r0, #1
 8003f46:	4248      	negs	r0, r1
 8003f48:	4141      	adcs	r1, r0
 8003f4a:	200d      	movs	r0, #13
 8003f4c:	b2c9      	uxtb	r1, r1
 8003f4e:	f7fc fc67 	bl	8000820 <_test_assert>
 8003f52:	e71a      	b.n	8003d8a <queues1_execute+0x5a>
 8003f54:	68a5      	ldr	r5, [r4, #8]
 8003f56:	2002      	movs	r0, #2
 8003f58:	1e6b      	subs	r3, r5, #1
 8003f5a:	419d      	sbcs	r5, r3
 8003f5c:	b2ed      	uxtb	r5, r5
 8003f5e:	0029      	movs	r1, r5
 8003f60:	f7fc fc5e 	bl	8000820 <_test_assert>
 8003f64:	2800      	cmp	r0, #0
 8003f66:	d000      	beq.n	8003f6a <queues1_execute+0x23a>
 8003f68:	e70e      	b.n	8003d88 <queues1_execute+0x58>
 8003f6a:	e710      	b.n	8003d8e <queues1_execute+0x5e>
 8003f6c:	20000610 	.word	0x20000610
 8003f70:	08005c80 	.word	0x08005c80
 8003f74:	20000a88 	.word	0x20000a88
 8003f78:	20000738 	.word	0x20000738
 8003f7c:	08002421 	.word	0x08002421
 8003f80:	20000940 	.word	0x20000940
 8003f84:	20000fd4 	.word	0x20000fd4
	...

08003f90 <dyn2_execute>:
 8003f90:	4b33      	ldr	r3, [pc, #204]	; (8004060 <dyn2_execute+0xd0>)
 8003f92:	b570      	push	{r4, r5, r6, lr}
 8003f94:	699b      	ldr	r3, [r3, #24]
 8003f96:	4a33      	ldr	r2, [pc, #204]	; (8004064 <dyn2_execute+0xd4>)
 8003f98:	689e      	ldr	r6, [r3, #8]
 8003f9a:	2300      	movs	r3, #0
 8003f9c:	4c32      	ldr	r4, [pc, #200]	; (8004068 <dyn2_execute+0xd8>)
 8003f9e:	4933      	ldr	r1, [pc, #204]	; (800406c <dyn2_execute+0xdc>)
 8003fa0:	b672      	cpsid	i
 8003fa2:	6820      	ldr	r0, [r4, #0]
 8003fa4:	6010      	str	r0, [r2, #0]
 8003fa6:	6022      	str	r2, [r4, #0]
 8003fa8:	b662      	cpsie	i
 8003faa:	3304      	adds	r3, #4
 8003fac:	2b10      	cmp	r3, #16
 8003fae:	d001      	beq.n	8003fb4 <dyn2_execute+0x24>
 8003fb0:	585a      	ldr	r2, [r3, r1]
 8003fb2:	e7f5      	b.n	8003fa0 <dyn2_execute+0x10>
 8003fb4:	492e      	ldr	r1, [pc, #184]	; (8004070 <dyn2_execute+0xe0>)
 8003fb6:	1e70      	subs	r0, r6, #1
 8003fb8:	f7fd fbaa 	bl	8001710 <chThdCreateFromMemoryPool.constprop.52>
 8003fbc:	4d2d      	ldr	r5, [pc, #180]	; (8004074 <dyn2_execute+0xe4>)
 8003fbe:	492e      	ldr	r1, [pc, #184]	; (8004078 <dyn2_execute+0xe8>)
 8003fc0:	6028      	str	r0, [r5, #0]
 8003fc2:	1eb0      	subs	r0, r6, #2
 8003fc4:	f7fd fba4 	bl	8001710 <chThdCreateFromMemoryPool.constprop.52>
 8003fc8:	492c      	ldr	r1, [pc, #176]	; (800407c <dyn2_execute+0xec>)
 8003fca:	6068      	str	r0, [r5, #4]
 8003fcc:	1ef0      	subs	r0, r6, #3
 8003fce:	f7fd fb9f 	bl	8001710 <chThdCreateFromMemoryPool.constprop.52>
 8003fd2:	492b      	ldr	r1, [pc, #172]	; (8004080 <dyn2_execute+0xf0>)
 8003fd4:	60a8      	str	r0, [r5, #8]
 8003fd6:	1f30      	subs	r0, r6, #4
 8003fd8:	f7fd fb9a 	bl	8001710 <chThdCreateFromMemoryPool.constprop.52>
 8003fdc:	4929      	ldr	r1, [pc, #164]	; (8004084 <dyn2_execute+0xf4>)
 8003fde:	60e8      	str	r0, [r5, #12]
 8003fe0:	1f70      	subs	r0, r6, #5
 8003fe2:	f7fd fb95 	bl	8001710 <chThdCreateFromMemoryPool.constprop.52>
 8003fe6:	682b      	ldr	r3, [r5, #0]
 8003fe8:	6128      	str	r0, [r5, #16]
 8003fea:	2b00      	cmp	r3, #0
 8003fec:	d031      	beq.n	8004052 <dyn2_execute+0xc2>
 8003fee:	686b      	ldr	r3, [r5, #4]
 8003ff0:	2b00      	cmp	r3, #0
 8003ff2:	d02e      	beq.n	8004052 <dyn2_execute+0xc2>
 8003ff4:	68ab      	ldr	r3, [r5, #8]
 8003ff6:	2b00      	cmp	r3, #0
 8003ff8:	d02b      	beq.n	8004052 <dyn2_execute+0xc2>
 8003ffa:	68eb      	ldr	r3, [r5, #12]
 8003ffc:	2b00      	cmp	r3, #0
 8003ffe:	d028      	beq.n	8004052 <dyn2_execute+0xc2>
 8004000:	4241      	negs	r1, r0
 8004002:	4141      	adcs	r1, r0
 8004004:	2001      	movs	r0, #1
 8004006:	b2c9      	uxtb	r1, r1
 8004008:	f7fc fc0a 	bl	8000820 <_test_assert>
 800400c:	2800      	cmp	r0, #0
 800400e:	d126      	bne.n	800405e <dyn2_execute+0xce>
 8004010:	f7ff fb26 	bl	8003660 <test_wait_threads>
 8004014:	491c      	ldr	r1, [pc, #112]	; (8004088 <dyn2_execute+0xf8>)
 8004016:	2002      	movs	r0, #2
 8004018:	f7fc fbda 	bl	80007d0 <_test_assert_sequence>
 800401c:	2800      	cmp	r0, #0
 800401e:	d11e      	bne.n	800405e <dyn2_execute+0xce>
 8004020:	2504      	movs	r5, #4
 8004022:	0020      	movs	r0, r4
 8004024:	f7fc fcb4 	bl	8000990 <chPoolAlloc>
 8004028:	1e41      	subs	r1, r0, #1
 800402a:	4188      	sbcs	r0, r1
 800402c:	b2c1      	uxtb	r1, r0
 800402e:	2003      	movs	r0, #3
 8004030:	f7fc fbf6 	bl	8000820 <_test_assert>
 8004034:	2800      	cmp	r0, #0
 8004036:	d112      	bne.n	800405e <dyn2_execute+0xce>
 8004038:	3d01      	subs	r5, #1
 800403a:	2d00      	cmp	r5, #0
 800403c:	d1f1      	bne.n	8004022 <dyn2_execute+0x92>
 800403e:	0020      	movs	r0, r4
 8004040:	f7fc fca6 	bl	8000990 <chPoolAlloc>
 8004044:	4241      	negs	r1, r0
 8004046:	4141      	adcs	r1, r0
 8004048:	2004      	movs	r0, #4
 800404a:	b2c9      	uxtb	r1, r1
 800404c:	f7fc fbe8 	bl	8000820 <_test_assert>
 8004050:	e005      	b.n	800405e <dyn2_execute+0xce>
 8004052:	2100      	movs	r1, #0
 8004054:	2001      	movs	r0, #1
 8004056:	f7fc fbe3 	bl	8000820 <_test_assert>
 800405a:	2800      	cmp	r0, #0
 800405c:	d0d8      	beq.n	8004010 <dyn2_execute+0x80>
 800405e:	bd70      	pop	{r4, r5, r6, pc}
 8004060:	20000738 	.word	0x20000738
 8004064:	20000940 	.word	0x20000940
 8004068:	20000910 	.word	0x20000910
 800406c:	08006420 	.word	0x08006420
 8004070:	080058c0 	.word	0x080058c0
 8004074:	20000fd4 	.word	0x20000fd4
 8004078:	080058b0 	.word	0x080058b0
 800407c:	080058b4 	.word	0x080058b4
 8004080:	080058b8 	.word	0x080058b8
 8004084:	08005b04 	.word	0x08005b04
 8004088:	08005c80 	.word	0x08005c80
 800408c:	00000000 	.word	0x00000000

08004090 <dyn1_execute>:
 8004090:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004092:	4b2f      	ldr	r3, [pc, #188]	; (8004150 <dyn1_execute+0xc0>)
 8004094:	4e2f      	ldr	r6, [pc, #188]	; (8004154 <dyn1_execute+0xc4>)
 8004096:	699b      	ldr	r3, [r3, #24]
 8004098:	b083      	sub	sp, #12
 800409a:	689d      	ldr	r5, [r3, #8]
 800409c:	4669      	mov	r1, sp
 800409e:	0030      	movs	r0, r6
 80040a0:	f7fe fe76 	bl	8002d90 <chHeapStatus>
 80040a4:	492c      	ldr	r1, [pc, #176]	; (8004158 <dyn1_execute+0xc8>)
 80040a6:	1e68      	subs	r0, r5, #1
 80040a8:	f7fe ff72 	bl	8002f90 <chThdCreateFromHeap.constprop.53>
 80040ac:	4c2b      	ldr	r4, [pc, #172]	; (800415c <dyn1_execute+0xcc>)
 80040ae:	492c      	ldr	r1, [pc, #176]	; (8004160 <dyn1_execute+0xd0>)
 80040b0:	6020      	str	r0, [r4, #0]
 80040b2:	1ea8      	subs	r0, r5, #2
 80040b4:	f7fe ff6c 	bl	8002f90 <chThdCreateFromHeap.constprop.53>
 80040b8:	a901      	add	r1, sp, #4
 80040ba:	6060      	str	r0, [r4, #4]
 80040bc:	0030      	movs	r0, r6
 80040be:	f7fe fe67 	bl	8002d90 <chHeapStatus>
 80040c2:	9901      	ldr	r1, [sp, #4]
 80040c4:	0030      	movs	r0, r6
 80040c6:	f7fe ff1b 	bl	8002f00 <chHeapAlloc>
 80040ca:	4926      	ldr	r1, [pc, #152]	; (8004164 <dyn1_execute+0xd4>)
 80040cc:	0007      	movs	r7, r0
 80040ce:	1ee8      	subs	r0, r5, #3
 80040d0:	f7fe ff5e 	bl	8002f90 <chThdCreateFromHeap.constprop.53>
 80040d4:	60a0      	str	r0, [r4, #8]
 80040d6:	0038      	movs	r0, r7
 80040d8:	f7fe fe7a 	bl	8002dd0 <chHeapFree>
 80040dc:	6823      	ldr	r3, [r4, #0]
 80040de:	2b00      	cmp	r3, #0
 80040e0:	d02c      	beq.n	800413c <dyn1_execute+0xac>
 80040e2:	6863      	ldr	r3, [r4, #4]
 80040e4:	2100      	movs	r1, #0
 80040e6:	2b00      	cmp	r3, #0
 80040e8:	d002      	beq.n	80040f0 <dyn1_execute+0x60>
 80040ea:	68a3      	ldr	r3, [r4, #8]
 80040ec:	2b00      	cmp	r3, #0
 80040ee:	d027      	beq.n	8004140 <dyn1_execute+0xb0>
 80040f0:	2001      	movs	r0, #1
 80040f2:	f7fc fb95 	bl	8000820 <_test_assert>
 80040f6:	2800      	cmp	r0, #0
 80040f8:	d001      	beq.n	80040fe <dyn1_execute+0x6e>
 80040fa:	b003      	add	sp, #12
 80040fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80040fe:	f7ff faaf 	bl	8003660 <test_wait_threads>
 8004102:	4919      	ldr	r1, [pc, #100]	; (8004168 <dyn1_execute+0xd8>)
 8004104:	2002      	movs	r0, #2
 8004106:	f7fc fb63 	bl	80007d0 <_test_assert_sequence>
 800410a:	2800      	cmp	r0, #0
 800410c:	d1f5      	bne.n	80040fa <dyn1_execute+0x6a>
 800410e:	a901      	add	r1, sp, #4
 8004110:	0030      	movs	r0, r6
 8004112:	f7fe fe3d 	bl	8002d90 <chHeapStatus>
 8004116:	3801      	subs	r0, #1
 8004118:	4241      	negs	r1, r0
 800411a:	4141      	adcs	r1, r0
 800411c:	2003      	movs	r0, #3
 800411e:	b2c9      	uxtb	r1, r1
 8004120:	f7fc fb7e 	bl	8000820 <_test_assert>
 8004124:	2800      	cmp	r0, #0
 8004126:	d1e8      	bne.n	80040fa <dyn1_execute+0x6a>
 8004128:	9b01      	ldr	r3, [sp, #4]
 800412a:	9a00      	ldr	r2, [sp, #0]
 800412c:	3004      	adds	r0, #4
 800412e:	1a99      	subs	r1, r3, r2
 8004130:	424b      	negs	r3, r1
 8004132:	4159      	adcs	r1, r3
 8004134:	b2c9      	uxtb	r1, r1
 8004136:	f7fc fb73 	bl	8000820 <_test_assert>
 800413a:	e7de      	b.n	80040fa <dyn1_execute+0x6a>
 800413c:	2100      	movs	r1, #0
 800413e:	e7d7      	b.n	80040f0 <dyn1_execute+0x60>
 8004140:	68e3      	ldr	r3, [r4, #12]
 8004142:	2b00      	cmp	r3, #0
 8004144:	d1d4      	bne.n	80040f0 <dyn1_execute+0x60>
 8004146:	6921      	ldr	r1, [r4, #16]
 8004148:	424b      	negs	r3, r1
 800414a:	4159      	adcs	r1, r3
 800414c:	b2c9      	uxtb	r1, r1
 800414e:	e7cf      	b.n	80040f0 <dyn1_execute+0x60>
 8004150:	20000738 	.word	0x20000738
 8004154:	200008b8 	.word	0x200008b8
 8004158:	080058c0 	.word	0x080058c0
 800415c:	20000fd4 	.word	0x20000fd4
 8004160:	080058b0 	.word	0x080058b0
 8004164:	080058b4 	.word	0x080058b4
 8004168:	080058a0 	.word	0x080058a0
 800416c:	00000000 	.word	0x00000000

08004170 <evt2_execute>:
 8004170:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004172:	46de      	mov	lr, fp
 8004174:	4657      	mov	r7, sl
 8004176:	464e      	mov	r6, r9
 8004178:	4645      	mov	r5, r8
 800417a:	b5e0      	push	{r5, r6, r7, lr}
 800417c:	b08f      	sub	sp, #60	; 0x3c
 800417e:	b672      	cpsid	i
 8004180:	2307      	movs	r3, #7
 8004182:	4ca8      	ldr	r4, [pc, #672]	; (8004424 <evt2_execute+0x2b4>)
 8004184:	69a2      	ldr	r2, [r4, #24]
 8004186:	6b51      	ldr	r1, [r2, #52]	; 0x34
 8004188:	430b      	orrs	r3, r1
 800418a:	6353      	str	r3, [r2, #52]	; 0x34
 800418c:	b662      	cpsie	i
 800418e:	f7fd fc0f 	bl	80019b0 <chEvtWaitOne.constprop.32>
 8004192:	3801      	subs	r0, #1
 8004194:	4241      	negs	r1, r0
 8004196:	4141      	adcs	r1, r0
 8004198:	2001      	movs	r0, #1
 800419a:	b2c9      	uxtb	r1, r1
 800419c:	f7fc fb40 	bl	8000820 <_test_assert>
 80041a0:	2800      	cmp	r0, #0
 80041a2:	d006      	beq.n	80041b2 <evt2_execute+0x42>
 80041a4:	b00f      	add	sp, #60	; 0x3c
 80041a6:	bc3c      	pop	{r2, r3, r4, r5}
 80041a8:	4690      	mov	r8, r2
 80041aa:	4699      	mov	r9, r3
 80041ac:	46a2      	mov	sl, r4
 80041ae:	46ab      	mov	fp, r5
 80041b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80041b2:	f7fd fbfd 	bl	80019b0 <chEvtWaitOne.constprop.32>
 80041b6:	3802      	subs	r0, #2
 80041b8:	4241      	negs	r1, r0
 80041ba:	4141      	adcs	r1, r0
 80041bc:	2002      	movs	r0, #2
 80041be:	b2c9      	uxtb	r1, r1
 80041c0:	f7fc fb2e 	bl	8000820 <_test_assert>
 80041c4:	2800      	cmp	r0, #0
 80041c6:	d1ed      	bne.n	80041a4 <evt2_execute+0x34>
 80041c8:	f7fd fbf2 	bl	80019b0 <chEvtWaitOne.constprop.32>
 80041cc:	3804      	subs	r0, #4
 80041ce:	4241      	negs	r1, r0
 80041d0:	4141      	adcs	r1, r0
 80041d2:	2003      	movs	r0, #3
 80041d4:	b2c9      	uxtb	r1, r1
 80041d6:	f7fc fb23 	bl	8000820 <_test_assert>
 80041da:	2800      	cmp	r0, #0
 80041dc:	d1e2      	bne.n	80041a4 <evt2_execute+0x34>
 80041de:	f7fc f887 	bl	80002f0 <chEvtGetAndClearEvents.constprop.36>
 80041e2:	4241      	negs	r1, r0
 80041e4:	4141      	adcs	r1, r0
 80041e6:	2004      	movs	r0, #4
 80041e8:	b2c9      	uxtb	r1, r1
 80041ea:	f7fc fb19 	bl	8000820 <_test_assert>
 80041ee:	2800      	cmp	r0, #0
 80041f0:	d1d8      	bne.n	80041a4 <evt2_execute+0x34>
 80041f2:	f7fe fa05 	bl	8002600 <test_wait_tick>
 80041f6:	b672      	cpsid	i
 80041f8:	2380      	movs	r3, #128	; 0x80
 80041fa:	05db      	lsls	r3, r3, #23
 80041fc:	4699      	mov	r9, r3
 80041fe:	6a5f      	ldr	r7, [r3, #36]	; 0x24
 8004200:	b662      	cpsie	i
 8004202:	4a89      	ldr	r2, [pc, #548]	; (8004428 <evt2_execute+0x2b8>)
 8004204:	21a4      	movs	r1, #164	; 0xa4
 8004206:	4690      	mov	r8, r2
 8004208:	69a3      	ldr	r3, [r4, #24]
 800420a:	4e88      	ldr	r6, [pc, #544]	; (800442c <evt2_execute+0x2bc>)
 800420c:	689a      	ldr	r2, [r3, #8]
 800420e:	0049      	lsls	r1, r1, #1
 8004210:	3a01      	subs	r2, #1
 8004212:	9300      	str	r3, [sp, #0]
 8004214:	0030      	movs	r0, r6
 8004216:	4643      	mov	r3, r8
 8004218:	f7fd fb12 	bl	8001840 <chThdCreateStatic>
 800421c:	4d84      	ldr	r5, [pc, #528]	; (8004430 <evt2_execute+0x2c0>)
 800421e:	6028      	str	r0, [r5, #0]
 8004220:	f7fd fbc6 	bl	80019b0 <chEvtWaitOne.constprop.32>
 8004224:	0039      	movs	r1, r7
 8004226:	4b83      	ldr	r3, [pc, #524]	; (8004434 <evt2_execute+0x2c4>)
 8004228:	31f5      	adds	r1, #245	; 0xf5
 800422a:	4682      	mov	sl, r0
 800422c:	18fa      	adds	r2, r7, r3
 800422e:	31ff      	adds	r1, #255	; 0xff
 8004230:	2005      	movs	r0, #5
 8004232:	f7fc faad 	bl	8000790 <_test_assert_time_window>
 8004236:	2800      	cmp	r0, #0
 8004238:	d1b4      	bne.n	80041a4 <evt2_execute+0x34>
 800423a:	4651      	mov	r1, sl
 800423c:	3901      	subs	r1, #1
 800423e:	424b      	negs	r3, r1
 8004240:	4159      	adcs	r1, r3
 8004242:	3006      	adds	r0, #6
 8004244:	b2c9      	uxtb	r1, r1
 8004246:	f7fc faeb 	bl	8000820 <_test_assert>
 800424a:	2800      	cmp	r0, #0
 800424c:	d1aa      	bne.n	80041a4 <evt2_execute+0x34>
 800424e:	f7fc f84f 	bl	80002f0 <chEvtGetAndClearEvents.constprop.36>
 8004252:	4241      	negs	r1, r0
 8004254:	4141      	adcs	r1, r0
 8004256:	2007      	movs	r0, #7
 8004258:	b2c9      	uxtb	r1, r1
 800425a:	f7fc fae1 	bl	8000820 <_test_assert>
 800425e:	2800      	cmp	r0, #0
 8004260:	d1a0      	bne.n	80041a4 <evt2_execute+0x34>
 8004262:	f7ff f9fd 	bl	8003660 <test_wait_threads>
 8004266:	b672      	cpsid	i
 8004268:	2305      	movs	r3, #5
 800426a:	69a2      	ldr	r2, [r4, #24]
 800426c:	6b51      	ldr	r1, [r2, #52]	; 0x34
 800426e:	430b      	orrs	r3, r1
 8004270:	6353      	str	r3, [r2, #52]	; 0x34
 8004272:	b662      	cpsie	i
 8004274:	f7fd fbb4 	bl	80019e0 <chEvtWaitAny.constprop.31>
 8004278:	1f41      	subs	r1, r0, #5
 800427a:	4248      	negs	r0, r1
 800427c:	4141      	adcs	r1, r0
 800427e:	2008      	movs	r0, #8
 8004280:	b2c9      	uxtb	r1, r1
 8004282:	f7fc facd 	bl	8000820 <_test_assert>
 8004286:	2800      	cmp	r0, #0
 8004288:	d000      	beq.n	800428c <evt2_execute+0x11c>
 800428a:	e78b      	b.n	80041a4 <evt2_execute+0x34>
 800428c:	f7fc f830 	bl	80002f0 <chEvtGetAndClearEvents.constprop.36>
 8004290:	4241      	negs	r1, r0
 8004292:	4141      	adcs	r1, r0
 8004294:	2009      	movs	r0, #9
 8004296:	b2c9      	uxtb	r1, r1
 8004298:	f7fc fac2 	bl	8000820 <_test_assert>
 800429c:	2800      	cmp	r0, #0
 800429e:	d000      	beq.n	80042a2 <evt2_execute+0x132>
 80042a0:	e780      	b.n	80041a4 <evt2_execute+0x34>
 80042a2:	f7fe f9ad 	bl	8002600 <test_wait_tick>
 80042a6:	b672      	cpsid	i
 80042a8:	464b      	mov	r3, r9
 80042aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80042ac:	4699      	mov	r9, r3
 80042ae:	b662      	cpsie	i
 80042b0:	21a4      	movs	r1, #164	; 0xa4
 80042b2:	69a3      	ldr	r3, [r4, #24]
 80042b4:	0049      	lsls	r1, r1, #1
 80042b6:	689a      	ldr	r2, [r3, #8]
 80042b8:	0030      	movs	r0, r6
 80042ba:	3a01      	subs	r2, #1
 80042bc:	9300      	str	r3, [sp, #0]
 80042be:	4643      	mov	r3, r8
 80042c0:	f7fd fabe 	bl	8001840 <chThdCreateStatic>
 80042c4:	6028      	str	r0, [r5, #0]
 80042c6:	f7fd fb8b 	bl	80019e0 <chEvtWaitAny.constprop.31>
 80042ca:	4649      	mov	r1, r9
 80042cc:	4a59      	ldr	r2, [pc, #356]	; (8004434 <evt2_execute+0x2c4>)
 80042ce:	31f5      	adds	r1, #245	; 0xf5
 80042d0:	0007      	movs	r7, r0
 80042d2:	444a      	add	r2, r9
 80042d4:	31ff      	adds	r1, #255	; 0xff
 80042d6:	200a      	movs	r0, #10
 80042d8:	f7fc fa5a 	bl	8000790 <_test_assert_time_window>
 80042dc:	2800      	cmp	r0, #0
 80042de:	d000      	beq.n	80042e2 <evt2_execute+0x172>
 80042e0:	e760      	b.n	80041a4 <evt2_execute+0x34>
 80042e2:	3f01      	subs	r7, #1
 80042e4:	4279      	negs	r1, r7
 80042e6:	4179      	adcs	r1, r7
 80042e8:	300b      	adds	r0, #11
 80042ea:	b2c9      	uxtb	r1, r1
 80042ec:	f7fc fa98 	bl	8000820 <_test_assert>
 80042f0:	2800      	cmp	r0, #0
 80042f2:	d000      	beq.n	80042f6 <evt2_execute+0x186>
 80042f4:	e756      	b.n	80041a4 <evt2_execute+0x34>
 80042f6:	f7fb fffb 	bl	80002f0 <chEvtGetAndClearEvents.constprop.36>
 80042fa:	4241      	negs	r1, r0
 80042fc:	4141      	adcs	r1, r0
 80042fe:	200c      	movs	r0, #12
 8004300:	b2c9      	uxtb	r1, r1
 8004302:	f7fc fa8d 	bl	8000820 <_test_assert>
 8004306:	4683      	mov	fp, r0
 8004308:	2800      	cmp	r0, #0
 800430a:	d000      	beq.n	800430e <evt2_execute+0x19e>
 800430c:	e74a      	b.n	80041a4 <evt2_execute+0x34>
 800430e:	f7ff f9a7 	bl	8003660 <test_wait_threads>
 8004312:	4b49      	ldr	r3, [pc, #292]	; (8004438 <evt2_execute+0x2c8>)
 8004314:	4f49      	ldr	r7, [pc, #292]	; (800443c <evt2_execute+0x2cc>)
 8004316:	4698      	mov	r8, r3
 8004318:	601b      	str	r3, [r3, #0]
 800431a:	603f      	str	r7, [r7, #0]
 800431c:	b672      	cpsid	i
 800431e:	ab04      	add	r3, sp, #16
 8004320:	469a      	mov	sl, r3
 8004322:	4643      	mov	r3, r8
 8004324:	681b      	ldr	r3, [r3, #0]
 8004326:	4652      	mov	r2, sl
 8004328:	9304      	str	r3, [sp, #16]
 800432a:	4643      	mov	r3, r8
 800432c:	601a      	str	r2, [r3, #0]
 800432e:	4653      	mov	r3, sl
 8004330:	69a2      	ldr	r2, [r4, #24]
 8004332:	605a      	str	r2, [r3, #4]
 8004334:	4652      	mov	r2, sl
 8004336:	2301      	movs	r3, #1
 8004338:	6093      	str	r3, [r2, #8]
 800433a:	4653      	mov	r3, sl
 800433c:	465a      	mov	r2, fp
 800433e:	60da      	str	r2, [r3, #12]
 8004340:	2301      	movs	r3, #1
 8004342:	4652      	mov	r2, sl
 8004344:	425b      	negs	r3, r3
 8004346:	6113      	str	r3, [r2, #16]
 8004348:	b662      	cpsie	i
 800434a:	b672      	cpsid	i
 800434c:	aa09      	add	r2, sp, #36	; 0x24
 800434e:	4691      	mov	r9, r2
 8004350:	683a      	ldr	r2, [r7, #0]
 8004352:	69a1      	ldr	r1, [r4, #24]
 8004354:	9209      	str	r2, [sp, #36]	; 0x24
 8004356:	464a      	mov	r2, r9
 8004358:	6051      	str	r1, [r2, #4]
 800435a:	603a      	str	r2, [r7, #0]
 800435c:	4649      	mov	r1, r9
 800435e:	2204      	movs	r2, #4
 8004360:	608a      	str	r2, [r1, #8]
 8004362:	464a      	mov	r2, r9
 8004364:	4659      	mov	r1, fp
 8004366:	6113      	str	r3, [r2, #16]
 8004368:	60d1      	str	r1, [r2, #12]
 800436a:	b662      	cpsie	i
 800436c:	f7fe f948 	bl	8002600 <test_wait_tick>
 8004370:	b672      	cpsid	i
 8004372:	2380      	movs	r3, #128	; 0x80
 8004374:	05db      	lsls	r3, r3, #23
 8004376:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004378:	469b      	mov	fp, r3
 800437a:	b662      	cpsie	i
 800437c:	23fa      	movs	r3, #250	; 0xfa
 800437e:	21a4      	movs	r1, #164	; 0xa4
 8004380:	005b      	lsls	r3, r3, #1
 8004382:	445b      	add	r3, fp
 8004384:	9303      	str	r3, [sp, #12]
 8004386:	69a3      	ldr	r3, [r4, #24]
 8004388:	0049      	lsls	r1, r1, #1
 800438a:	689a      	ldr	r2, [r3, #8]
 800438c:	4b2c      	ldr	r3, [pc, #176]	; (8004440 <evt2_execute+0x2d0>)
 800438e:	3a01      	subs	r2, #1
 8004390:	9300      	str	r3, [sp, #0]
 8004392:	0030      	movs	r0, r6
 8004394:	4b2b      	ldr	r3, [pc, #172]	; (8004444 <evt2_execute+0x2d4>)
 8004396:	f7fd fa53 	bl	8001840 <chThdCreateStatic>
 800439a:	69a4      	ldr	r4, [r4, #24]
 800439c:	6028      	str	r0, [r5, #0]
 800439e:	b672      	cpsid	i
 80043a0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80043a2:	2205      	movs	r2, #5
 80043a4:	0019      	movs	r1, r3
 80043a6:	4011      	ands	r1, r2
 80043a8:	4291      	cmp	r1, r2
 80043aa:	d004      	beq.n	80043b6 <evt2_execute+0x246>
 80043ac:	6222      	str	r2, [r4, #32]
 80043ae:	200b      	movs	r0, #11
 80043b0:	f7fd fa76 	bl	80018a0 <chSchGoSleepS>
 80043b4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80043b6:	2205      	movs	r2, #5
 80043b8:	4393      	bics	r3, r2
 80043ba:	6363      	str	r3, [r4, #52]	; 0x34
 80043bc:	b662      	cpsie	i
 80043be:	4a1d      	ldr	r2, [pc, #116]	; (8004434 <evt2_execute+0x2c4>)
 80043c0:	9903      	ldr	r1, [sp, #12]
 80043c2:	445a      	add	r2, fp
 80043c4:	200d      	movs	r0, #13
 80043c6:	f7fc f9e3 	bl	8000790 <_test_assert_time_window>
 80043ca:	2800      	cmp	r0, #0
 80043cc:	d000      	beq.n	80043d0 <evt2_execute+0x260>
 80043ce:	e6e9      	b.n	80041a4 <evt2_execute+0x34>
 80043d0:	f7fb ff8e 	bl	80002f0 <chEvtGetAndClearEvents.constprop.36>
 80043d4:	4241      	negs	r1, r0
 80043d6:	4141      	adcs	r1, r0
 80043d8:	200e      	movs	r0, #14
 80043da:	b2c9      	uxtb	r1, r1
 80043dc:	f7fc fa20 	bl	8000820 <_test_assert>
 80043e0:	2800      	cmp	r0, #0
 80043e2:	d000      	beq.n	80043e6 <evt2_execute+0x276>
 80043e4:	e6de      	b.n	80041a4 <evt2_execute+0x34>
 80043e6:	f7ff f93b 	bl	8003660 <test_wait_threads>
 80043ea:	4651      	mov	r1, sl
 80043ec:	4640      	mov	r0, r8
 80043ee:	f7fc fb47 	bl	8000a80 <chEvtUnregister>
 80043f2:	4649      	mov	r1, r9
 80043f4:	0038      	movs	r0, r7
 80043f6:	f7fc fb43 	bl	8000a80 <chEvtUnregister>
 80043fa:	4643      	mov	r3, r8
 80043fc:	681a      	ldr	r2, [r3, #0]
 80043fe:	200f      	movs	r0, #15
 8004400:	1ad1      	subs	r1, r2, r3
 8004402:	424b      	negs	r3, r1
 8004404:	4159      	adcs	r1, r3
 8004406:	b2c9      	uxtb	r1, r1
 8004408:	f7fc fa0a 	bl	8000820 <_test_assert>
 800440c:	2800      	cmp	r0, #0
 800440e:	d000      	beq.n	8004412 <evt2_execute+0x2a2>
 8004410:	e6c8      	b.n	80041a4 <evt2_execute+0x34>
 8004412:	683b      	ldr	r3, [r7, #0]
 8004414:	3010      	adds	r0, #16
 8004416:	1bdf      	subs	r7, r3, r7
 8004418:	4279      	negs	r1, r7
 800441a:	4179      	adcs	r1, r7
 800441c:	b2c9      	uxtb	r1, r1
 800441e:	f7fc f9ff 	bl	8000820 <_test_assert>
 8004422:	e6bf      	b.n	80041a4 <evt2_execute+0x34>
 8004424:	20000738 	.word	0x20000738
 8004428:	08002581 	.word	0x08002581
 800442c:	20000940 	.word	0x20000940
 8004430:	20000fd4 	.word	0x20000fd4
 8004434:	00000226 	.word	0x00000226
 8004438:	20000608 	.word	0x20000608
 800443c:	2000060c 	.word	0x2000060c
 8004440:	080058c0 	.word	0x080058c0
 8004444:	080025a1 	.word	0x080025a1
	...

08004450 <mtx8_execute>:
 8004450:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004452:	27a4      	movs	r7, #164	; 0xa4
 8004454:	4b17      	ldr	r3, [pc, #92]	; (80044b4 <mtx8_execute+0x64>)
 8004456:	4c18      	ldr	r4, [pc, #96]	; (80044b8 <mtx8_execute+0x68>)
 8004458:	699b      	ldr	r3, [r3, #24]
 800445a:	b083      	sub	sp, #12
 800445c:	689d      	ldr	r5, [r3, #8]
 800445e:	4b17      	ldr	r3, [pc, #92]	; (80044bc <mtx8_execute+0x6c>)
 8004460:	007f      	lsls	r7, r7, #1
 8004462:	1c6a      	adds	r2, r5, #1
 8004464:	9300      	str	r3, [sp, #0]
 8004466:	0039      	movs	r1, r7
 8004468:	4b15      	ldr	r3, [pc, #84]	; (80044c0 <mtx8_execute+0x70>)
 800446a:	0020      	movs	r0, r4
 800446c:	f7fd f9e8 	bl	8001840 <chThdCreateStatic>
 8004470:	4e14      	ldr	r6, [pc, #80]	; (80044c4 <mtx8_execute+0x74>)
 8004472:	4b15      	ldr	r3, [pc, #84]	; (80044c8 <mtx8_execute+0x78>)
 8004474:	6030      	str	r0, [r6, #0]
 8004476:	1caa      	adds	r2, r5, #2
 8004478:	9300      	str	r3, [sp, #0]
 800447a:	0039      	movs	r1, r7
 800447c:	19e0      	adds	r0, r4, r7
 800447e:	4b13      	ldr	r3, [pc, #76]	; (80044cc <mtx8_execute+0x7c>)
 8004480:	f7fd f9de 	bl	8001840 <chThdCreateStatic>
 8004484:	23a4      	movs	r3, #164	; 0xa4
 8004486:	009b      	lsls	r3, r3, #2
 8004488:	6070      	str	r0, [r6, #4]
 800448a:	18e0      	adds	r0, r4, r3
 800448c:	4b10      	ldr	r3, [pc, #64]	; (80044d0 <mtx8_execute+0x80>)
 800448e:	1cea      	adds	r2, r5, #3
 8004490:	0039      	movs	r1, r7
 8004492:	9300      	str	r3, [sp, #0]
 8004494:	4b0f      	ldr	r3, [pc, #60]	; (80044d4 <mtx8_execute+0x84>)
 8004496:	f7fd f9d3 	bl	8001840 <chThdCreateStatic>
 800449a:	60b0      	str	r0, [r6, #8]
 800449c:	f7fd f978 	bl	8001790 <chCondSignal.constprop.44>
 80044a0:	f7fd f976 	bl	8001790 <chCondSignal.constprop.44>
 80044a4:	f7ff f8dc 	bl	8003660 <test_wait_threads>
 80044a8:	490b      	ldr	r1, [pc, #44]	; (80044d8 <mtx8_execute+0x88>)
 80044aa:	2001      	movs	r0, #1
 80044ac:	f7fc f990 	bl	80007d0 <_test_assert_sequence>
 80044b0:	b003      	add	sp, #12
 80044b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80044b4:	20000738 	.word	0x20000738
 80044b8:	20000940 	.word	0x20000940
 80044bc:	080058c0 	.word	0x080058c0
 80044c0:	08002b41 	.word	0x08002b41
 80044c4:	20000fd4 	.word	0x20000fd4
 80044c8:	080058b4 	.word	0x080058b4
 80044cc:	08002bd1 	.word	0x08002bd1
 80044d0:	080058b0 	.word	0x080058b0
 80044d4:	08002c41 	.word	0x08002c41
 80044d8:	080058e0 	.word	0x080058e0
 80044dc:	00000000 	.word	0x00000000

080044e0 <mtx7_execute>:
 80044e0:	21a4      	movs	r1, #164	; 0xa4
 80044e2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80044e4:	4b2d      	ldr	r3, [pc, #180]	; (800459c <mtx7_execute+0xbc>)
 80044e6:	4f2e      	ldr	r7, [pc, #184]	; (80045a0 <mtx7_execute+0xc0>)
 80044e8:	699b      	ldr	r3, [r3, #24]
 80044ea:	4c2e      	ldr	r4, [pc, #184]	; (80045a4 <mtx7_execute+0xc4>)
 80044ec:	689d      	ldr	r5, [r3, #8]
 80044ee:	4b2e      	ldr	r3, [pc, #184]	; (80045a8 <mtx7_execute+0xc8>)
 80044f0:	b083      	sub	sp, #12
 80044f2:	1c6a      	adds	r2, r5, #1
 80044f4:	9300      	str	r3, [sp, #0]
 80044f6:	0049      	lsls	r1, r1, #1
 80044f8:	003b      	movs	r3, r7
 80044fa:	0020      	movs	r0, r4
 80044fc:	f7fd f9a0 	bl	8001840 <chThdCreateStatic>
 8004500:	4e2a      	ldr	r6, [pc, #168]	; (80045ac <mtx7_execute+0xcc>)
 8004502:	21a4      	movs	r1, #164	; 0xa4
 8004504:	6030      	str	r0, [r6, #0]
 8004506:	0020      	movs	r0, r4
 8004508:	4b29      	ldr	r3, [pc, #164]	; (80045b0 <mtx7_execute+0xd0>)
 800450a:	3049      	adds	r0, #73	; 0x49
 800450c:	1caa      	adds	r2, r5, #2
 800450e:	9300      	str	r3, [sp, #0]
 8004510:	0049      	lsls	r1, r1, #1
 8004512:	003b      	movs	r3, r7
 8004514:	30ff      	adds	r0, #255	; 0xff
 8004516:	f7fd f993 	bl	8001840 <chThdCreateStatic>
 800451a:	23a4      	movs	r3, #164	; 0xa4
 800451c:	21a4      	movs	r1, #164	; 0xa4
 800451e:	009b      	lsls	r3, r3, #2
 8004520:	6070      	str	r0, [r6, #4]
 8004522:	18e0      	adds	r0, r4, r3
 8004524:	4b23      	ldr	r3, [pc, #140]	; (80045b4 <mtx7_execute+0xd4>)
 8004526:	1cea      	adds	r2, r5, #3
 8004528:	9300      	str	r3, [sp, #0]
 800452a:	0049      	lsls	r1, r1, #1
 800452c:	003b      	movs	r3, r7
 800452e:	f7fd f987 	bl	8001840 <chThdCreateStatic>
 8004532:	23f6      	movs	r3, #246	; 0xf6
 8004534:	21a4      	movs	r1, #164	; 0xa4
 8004536:	009b      	lsls	r3, r3, #2
 8004538:	60b0      	str	r0, [r6, #8]
 800453a:	18e0      	adds	r0, r4, r3
 800453c:	4b1e      	ldr	r3, [pc, #120]	; (80045b8 <mtx7_execute+0xd8>)
 800453e:	1d2a      	adds	r2, r5, #4
 8004540:	9300      	str	r3, [sp, #0]
 8004542:	0049      	lsls	r1, r1, #1
 8004544:	003b      	movs	r3, r7
 8004546:	f7fd f97b 	bl	8001840 <chThdCreateStatic>
 800454a:	23a4      	movs	r3, #164	; 0xa4
 800454c:	21a4      	movs	r1, #164	; 0xa4
 800454e:	00db      	lsls	r3, r3, #3
 8004550:	60f0      	str	r0, [r6, #12]
 8004552:	18e0      	adds	r0, r4, r3
 8004554:	4b19      	ldr	r3, [pc, #100]	; (80045bc <mtx7_execute+0xdc>)
 8004556:	1d6a      	adds	r2, r5, #5
 8004558:	9300      	str	r3, [sp, #0]
 800455a:	0049      	lsls	r1, r1, #1
 800455c:	003b      	movs	r3, r7
 800455e:	f7fd f96f 	bl	8001840 <chThdCreateStatic>
 8004562:	6130      	str	r0, [r6, #16]
 8004564:	b672      	cpsid	i
 8004566:	4c16      	ldr	r4, [pc, #88]	; (80045c0 <mtx7_execute+0xe0>)
 8004568:	6820      	ldr	r0, [r4, #0]
 800456a:	42a0      	cmp	r0, r4
 800456c:	d00a      	beq.n	8004584 <mtx7_execute+0xa4>
 800456e:	2502      	movs	r5, #2
 8004570:	426d      	negs	r5, r5
 8004572:	6803      	ldr	r3, [r0, #0]
 8004574:	6023      	str	r3, [r4, #0]
 8004576:	605c      	str	r4, [r3, #4]
 8004578:	f7fc fb32 	bl	8000be0 <chSchReadyI>
 800457c:	6205      	str	r5, [r0, #32]
 800457e:	6820      	ldr	r0, [r4, #0]
 8004580:	42a0      	cmp	r0, r4
 8004582:	d1f6      	bne.n	8004572 <mtx7_execute+0x92>
 8004584:	f7fc ff84 	bl	8001490 <chSchRescheduleS>
 8004588:	b662      	cpsie	i
 800458a:	f7ff f869 	bl	8003660 <test_wait_threads>
 800458e:	490d      	ldr	r1, [pc, #52]	; (80045c4 <mtx7_execute+0xe4>)
 8004590:	2001      	movs	r0, #1
 8004592:	f7fc f91d 	bl	80007d0 <_test_assert_sequence>
 8004596:	b003      	add	sp, #12
 8004598:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800459a:	46c0      	nop			; (mov r8, r8)
 800459c:	20000738 	.word	0x20000738
 80045a0:	08002bd1 	.word	0x08002bd1
 80045a4:	20000940 	.word	0x20000940
 80045a8:	08005b04 	.word	0x08005b04
 80045ac:	20000fd4 	.word	0x20000fd4
 80045b0:	080058b8 	.word	0x080058b8
 80045b4:	080058b4 	.word	0x080058b4
 80045b8:	080058b0 	.word	0x080058b0
 80045bc:	080058c0 	.word	0x080058c0
 80045c0:	20000600 	.word	0x20000600
 80045c4:	08005b00 	.word	0x08005b00
	...

080045d0 <mtx6_execute>:
 80045d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80045d2:	4b2b      	ldr	r3, [pc, #172]	; (8004680 <mtx6_execute+0xb0>)
 80045d4:	46c6      	mov	lr, r8
 80045d6:	699b      	ldr	r3, [r3, #24]
 80045d8:	27a4      	movs	r7, #164	; 0xa4
 80045da:	689d      	ldr	r5, [r3, #8]
 80045dc:	4b29      	ldr	r3, [pc, #164]	; (8004684 <mtx6_execute+0xb4>)
 80045de:	b500      	push	{lr}
 80045e0:	4698      	mov	r8, r3
 80045e2:	4c29      	ldr	r4, [pc, #164]	; (8004688 <mtx6_execute+0xb8>)
 80045e4:	4b29      	ldr	r3, [pc, #164]	; (800468c <mtx6_execute+0xbc>)
 80045e6:	b082      	sub	sp, #8
 80045e8:	007f      	lsls	r7, r7, #1
 80045ea:	1c6a      	adds	r2, r5, #1
 80045ec:	9300      	str	r3, [sp, #0]
 80045ee:	0039      	movs	r1, r7
 80045f0:	4643      	mov	r3, r8
 80045f2:	0020      	movs	r0, r4
 80045f4:	f7fd f924 	bl	8001840 <chThdCreateStatic>
 80045f8:	4e25      	ldr	r6, [pc, #148]	; (8004690 <mtx6_execute+0xc0>)
 80045fa:	4b26      	ldr	r3, [pc, #152]	; (8004694 <mtx6_execute+0xc4>)
 80045fc:	6030      	str	r0, [r6, #0]
 80045fe:	1caa      	adds	r2, r5, #2
 8004600:	9300      	str	r3, [sp, #0]
 8004602:	0039      	movs	r1, r7
 8004604:	4643      	mov	r3, r8
 8004606:	19e0      	adds	r0, r4, r7
 8004608:	f7fd f91a 	bl	8001840 <chThdCreateStatic>
 800460c:	23a4      	movs	r3, #164	; 0xa4
 800460e:	009b      	lsls	r3, r3, #2
 8004610:	6070      	str	r0, [r6, #4]
 8004612:	18e0      	adds	r0, r4, r3
 8004614:	4b20      	ldr	r3, [pc, #128]	; (8004698 <mtx6_execute+0xc8>)
 8004616:	1cea      	adds	r2, r5, #3
 8004618:	9300      	str	r3, [sp, #0]
 800461a:	0039      	movs	r1, r7
 800461c:	4643      	mov	r3, r8
 800461e:	f7fd f90f 	bl	8001840 <chThdCreateStatic>
 8004622:	23f6      	movs	r3, #246	; 0xf6
 8004624:	009b      	lsls	r3, r3, #2
 8004626:	60b0      	str	r0, [r6, #8]
 8004628:	18e0      	adds	r0, r4, r3
 800462a:	4b1c      	ldr	r3, [pc, #112]	; (800469c <mtx6_execute+0xcc>)
 800462c:	1d2a      	adds	r2, r5, #4
 800462e:	9300      	str	r3, [sp, #0]
 8004630:	0039      	movs	r1, r7
 8004632:	4643      	mov	r3, r8
 8004634:	f7fd f904 	bl	8001840 <chThdCreateStatic>
 8004638:	23a4      	movs	r3, #164	; 0xa4
 800463a:	00db      	lsls	r3, r3, #3
 800463c:	60f0      	str	r0, [r6, #12]
 800463e:	18e0      	adds	r0, r4, r3
 8004640:	4b17      	ldr	r3, [pc, #92]	; (80046a0 <mtx6_execute+0xd0>)
 8004642:	1d6a      	adds	r2, r5, #5
 8004644:	9300      	str	r3, [sp, #0]
 8004646:	0039      	movs	r1, r7
 8004648:	4643      	mov	r3, r8
 800464a:	f7fd f8f9 	bl	8001840 <chThdCreateStatic>
 800464e:	6130      	str	r0, [r6, #16]
 8004650:	b672      	cpsid	i
 8004652:	f7fc fad5 	bl	8000c00 <chCondSignalI.constprop.43>
 8004656:	f7fc fad3 	bl	8000c00 <chCondSignalI.constprop.43>
 800465a:	f7fc fad1 	bl	8000c00 <chCondSignalI.constprop.43>
 800465e:	f7fc facf 	bl	8000c00 <chCondSignalI.constprop.43>
 8004662:	f7fc facd 	bl	8000c00 <chCondSignalI.constprop.43>
 8004666:	f7fc ff13 	bl	8001490 <chSchRescheduleS>
 800466a:	b662      	cpsie	i
 800466c:	f7fe fff8 	bl	8003660 <test_wait_threads>
 8004670:	490c      	ldr	r1, [pc, #48]	; (80046a4 <mtx6_execute+0xd4>)
 8004672:	2001      	movs	r0, #1
 8004674:	f7fc f8ac 	bl	80007d0 <_test_assert_sequence>
 8004678:	b002      	add	sp, #8
 800467a:	bc04      	pop	{r2}
 800467c:	4690      	mov	r8, r2
 800467e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004680:	20000738 	.word	0x20000738
 8004684:	08002bd1 	.word	0x08002bd1
 8004688:	20000940 	.word	0x20000940
 800468c:	08005b04 	.word	0x08005b04
 8004690:	20000fd4 	.word	0x20000fd4
 8004694:	080058b8 	.word	0x080058b8
 8004698:	080058b4 	.word	0x080058b4
 800469c:	080058b0 	.word	0x080058b0
 80046a0:	080058c0 	.word	0x080058c0
 80046a4:	08005b00 	.word	0x08005b00
	...

080046b0 <mtx4_execute>:
 80046b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80046b2:	46de      	mov	lr, fp
 80046b4:	4657      	mov	r7, sl
 80046b6:	464e      	mov	r6, r9
 80046b8:	4645      	mov	r5, r8
 80046ba:	b5e0      	push	{r5, r6, r7, lr}
 80046bc:	4d8f      	ldr	r5, [pc, #572]	; (80048fc <mtx4_execute+0x24c>)
 80046be:	21a4      	movs	r1, #164	; 0xa4
 80046c0:	69ab      	ldr	r3, [r5, #24]
 80046c2:	4f8f      	ldr	r7, [pc, #572]	; (8004900 <mtx4_execute+0x250>)
 80046c4:	689c      	ldr	r4, [r3, #8]
 80046c6:	b083      	sub	sp, #12
 80046c8:	1c63      	adds	r3, r4, #1
 80046ca:	4698      	mov	r8, r3
 80046cc:	1ca3      	adds	r3, r4, #2
 80046ce:	4699      	mov	r9, r3
 80046d0:	4b8c      	ldr	r3, [pc, #560]	; (8004904 <mtx4_execute+0x254>)
 80046d2:	4642      	mov	r2, r8
 80046d4:	469b      	mov	fp, r3
 80046d6:	4b8c      	ldr	r3, [pc, #560]	; (8004908 <mtx4_execute+0x258>)
 80046d8:	0049      	lsls	r1, r1, #1
 80046da:	9300      	str	r3, [sp, #0]
 80046dc:	0038      	movs	r0, r7
 80046de:	465b      	mov	r3, fp
 80046e0:	f7fd f8ae 	bl	8001840 <chThdCreateStatic>
 80046e4:	4b89      	ldr	r3, [pc, #548]	; (800490c <mtx4_execute+0x25c>)
 80046e6:	21a4      	movs	r1, #164	; 0xa4
 80046e8:	469a      	mov	sl, r3
 80046ea:	4e89      	ldr	r6, [pc, #548]	; (8004910 <mtx4_execute+0x260>)
 80046ec:	4b89      	ldr	r3, [pc, #548]	; (8004914 <mtx4_execute+0x264>)
 80046ee:	6030      	str	r0, [r6, #0]
 80046f0:	0049      	lsls	r1, r1, #1
 80046f2:	9300      	str	r3, [sp, #0]
 80046f4:	464a      	mov	r2, r9
 80046f6:	4653      	mov	r3, sl
 80046f8:	4887      	ldr	r0, [pc, #540]	; (8004918 <mtx4_execute+0x268>)
 80046fa:	f7fd f8a1 	bl	8001840 <chThdCreateStatic>
 80046fe:	6070      	str	r0, [r6, #4]
 8004700:	4886      	ldr	r0, [pc, #536]	; (800491c <mtx4_execute+0x26c>)
 8004702:	f7fe f9dd 	bl	8002ac0 <chMtxLock>
 8004706:	69ab      	ldr	r3, [r5, #24]
 8004708:	2001      	movs	r0, #1
 800470a:	6899      	ldr	r1, [r3, #8]
 800470c:	1b09      	subs	r1, r1, r4
 800470e:	424b      	negs	r3, r1
 8004710:	4159      	adcs	r1, r3
 8004712:	b2c9      	uxtb	r1, r1
 8004714:	f7fc f884 	bl	8000820 <_test_assert>
 8004718:	2800      	cmp	r0, #0
 800471a:	d006      	beq.n	800472a <mtx4_execute+0x7a>
 800471c:	b003      	add	sp, #12
 800471e:	bc3c      	pop	{r2, r3, r4, r5}
 8004720:	4690      	mov	r8, r2
 8004722:	4699      	mov	r9, r3
 8004724:	46a2      	mov	sl, r4
 8004726:	46ab      	mov	fp, r5
 8004728:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800472a:	20fa      	movs	r0, #250	; 0xfa
 800472c:	0080      	lsls	r0, r0, #2
 800472e:	f7fd fe97 	bl	8002460 <chThdSleep>
 8004732:	69ab      	ldr	r3, [r5, #24]
 8004734:	2002      	movs	r0, #2
 8004736:	6899      	ldr	r1, [r3, #8]
 8004738:	4643      	mov	r3, r8
 800473a:	1ac9      	subs	r1, r1, r3
 800473c:	424b      	negs	r3, r1
 800473e:	4159      	adcs	r1, r3
 8004740:	b2c9      	uxtb	r1, r1
 8004742:	f7fc f86d 	bl	8000820 <_test_assert>
 8004746:	2800      	cmp	r0, #0
 8004748:	d1e8      	bne.n	800471c <mtx4_execute+0x6c>
 800474a:	4875      	ldr	r0, [pc, #468]	; (8004920 <mtx4_execute+0x270>)
 800474c:	f7fe f9b8 	bl	8002ac0 <chMtxLock>
 8004750:	69ab      	ldr	r3, [r5, #24]
 8004752:	2003      	movs	r0, #3
 8004754:	6899      	ldr	r1, [r3, #8]
 8004756:	4643      	mov	r3, r8
 8004758:	1ac9      	subs	r1, r1, r3
 800475a:	424b      	negs	r3, r1
 800475c:	4159      	adcs	r1, r3
 800475e:	b2c9      	uxtb	r1, r1
 8004760:	f7fc f85e 	bl	8000820 <_test_assert>
 8004764:	2800      	cmp	r0, #0
 8004766:	d1d9      	bne.n	800471c <mtx4_execute+0x6c>
 8004768:	20fa      	movs	r0, #250	; 0xfa
 800476a:	0080      	lsls	r0, r0, #2
 800476c:	f7fd fe78 	bl	8002460 <chThdSleep>
 8004770:	69ab      	ldr	r3, [r5, #24]
 8004772:	2004      	movs	r0, #4
 8004774:	6899      	ldr	r1, [r3, #8]
 8004776:	464b      	mov	r3, r9
 8004778:	1ac9      	subs	r1, r1, r3
 800477a:	424b      	negs	r3, r1
 800477c:	4159      	adcs	r1, r3
 800477e:	b2c9      	uxtb	r1, r1
 8004780:	f7fc f84e 	bl	8000820 <_test_assert>
 8004784:	2800      	cmp	r0, #0
 8004786:	d1c9      	bne.n	800471c <mtx4_execute+0x6c>
 8004788:	4865      	ldr	r0, [pc, #404]	; (8004920 <mtx4_execute+0x270>)
 800478a:	f7fd f811 	bl	80017b0 <chMtxUnlock>
 800478e:	69ab      	ldr	r3, [r5, #24]
 8004790:	2005      	movs	r0, #5
 8004792:	6899      	ldr	r1, [r3, #8]
 8004794:	4643      	mov	r3, r8
 8004796:	1ac9      	subs	r1, r1, r3
 8004798:	424b      	negs	r3, r1
 800479a:	4159      	adcs	r1, r3
 800479c:	b2c9      	uxtb	r1, r1
 800479e:	f7fc f83f 	bl	8000820 <_test_assert>
 80047a2:	2800      	cmp	r0, #0
 80047a4:	d1ba      	bne.n	800471c <mtx4_execute+0x6c>
 80047a6:	20fa      	movs	r0, #250	; 0xfa
 80047a8:	0080      	lsls	r0, r0, #2
 80047aa:	f7fd fe59 	bl	8002460 <chThdSleep>
 80047ae:	69ab      	ldr	r3, [r5, #24]
 80047b0:	2006      	movs	r0, #6
 80047b2:	6899      	ldr	r1, [r3, #8]
 80047b4:	4643      	mov	r3, r8
 80047b6:	1ac9      	subs	r1, r1, r3
 80047b8:	424b      	negs	r3, r1
 80047ba:	4159      	adcs	r1, r3
 80047bc:	b2c9      	uxtb	r1, r1
 80047be:	f7fc f82f 	bl	8000820 <_test_assert>
 80047c2:	2800      	cmp	r0, #0
 80047c4:	d1aa      	bne.n	800471c <mtx4_execute+0x6c>
 80047c6:	f7fc fe83 	bl	80014d0 <chMtxUnlockAll>
 80047ca:	69ab      	ldr	r3, [r5, #24]
 80047cc:	2007      	movs	r0, #7
 80047ce:	6899      	ldr	r1, [r3, #8]
 80047d0:	1b09      	subs	r1, r1, r4
 80047d2:	424b      	negs	r3, r1
 80047d4:	4159      	adcs	r1, r3
 80047d6:	b2c9      	uxtb	r1, r1
 80047d8:	f7fc f822 	bl	8000820 <_test_assert>
 80047dc:	2800      	cmp	r0, #0
 80047de:	d19d      	bne.n	800471c <mtx4_execute+0x6c>
 80047e0:	f7fe ff3e 	bl	8003660 <test_wait_threads>
 80047e4:	21a4      	movs	r1, #164	; 0xa4
 80047e6:	4b4f      	ldr	r3, [pc, #316]	; (8004924 <mtx4_execute+0x274>)
 80047e8:	4642      	mov	r2, r8
 80047ea:	9300      	str	r3, [sp, #0]
 80047ec:	0049      	lsls	r1, r1, #1
 80047ee:	465b      	mov	r3, fp
 80047f0:	0038      	movs	r0, r7
 80047f2:	f7fd f825 	bl	8001840 <chThdCreateStatic>
 80047f6:	21a4      	movs	r1, #164	; 0xa4
 80047f8:	4b4b      	ldr	r3, [pc, #300]	; (8004928 <mtx4_execute+0x278>)
 80047fa:	6030      	str	r0, [r6, #0]
 80047fc:	0049      	lsls	r1, r1, #1
 80047fe:	9300      	str	r3, [sp, #0]
 8004800:	464a      	mov	r2, r9
 8004802:	4653      	mov	r3, sl
 8004804:	4844      	ldr	r0, [pc, #272]	; (8004918 <mtx4_execute+0x268>)
 8004806:	f7fd f81b 	bl	8001840 <chThdCreateStatic>
 800480a:	6070      	str	r0, [r6, #4]
 800480c:	4843      	ldr	r0, [pc, #268]	; (800491c <mtx4_execute+0x26c>)
 800480e:	f7fe f957 	bl	8002ac0 <chMtxLock>
 8004812:	69ab      	ldr	r3, [r5, #24]
 8004814:	2008      	movs	r0, #8
 8004816:	6899      	ldr	r1, [r3, #8]
 8004818:	1b09      	subs	r1, r1, r4
 800481a:	424b      	negs	r3, r1
 800481c:	4159      	adcs	r1, r3
 800481e:	b2c9      	uxtb	r1, r1
 8004820:	f7fb fffe 	bl	8000820 <_test_assert>
 8004824:	2800      	cmp	r0, #0
 8004826:	d000      	beq.n	800482a <mtx4_execute+0x17a>
 8004828:	e778      	b.n	800471c <mtx4_execute+0x6c>
 800482a:	20fa      	movs	r0, #250	; 0xfa
 800482c:	0080      	lsls	r0, r0, #2
 800482e:	f7fd fe17 	bl	8002460 <chThdSleep>
 8004832:	69ab      	ldr	r3, [r5, #24]
 8004834:	2009      	movs	r0, #9
 8004836:	6899      	ldr	r1, [r3, #8]
 8004838:	4643      	mov	r3, r8
 800483a:	1ac9      	subs	r1, r1, r3
 800483c:	424b      	negs	r3, r1
 800483e:	4159      	adcs	r1, r3
 8004840:	b2c9      	uxtb	r1, r1
 8004842:	f7fb ffed 	bl	8000820 <_test_assert>
 8004846:	2800      	cmp	r0, #0
 8004848:	d000      	beq.n	800484c <mtx4_execute+0x19c>
 800484a:	e767      	b.n	800471c <mtx4_execute+0x6c>
 800484c:	4834      	ldr	r0, [pc, #208]	; (8004920 <mtx4_execute+0x270>)
 800484e:	f7fe f937 	bl	8002ac0 <chMtxLock>
 8004852:	69ab      	ldr	r3, [r5, #24]
 8004854:	200a      	movs	r0, #10
 8004856:	6899      	ldr	r1, [r3, #8]
 8004858:	4643      	mov	r3, r8
 800485a:	1ac9      	subs	r1, r1, r3
 800485c:	424b      	negs	r3, r1
 800485e:	4159      	adcs	r1, r3
 8004860:	b2c9      	uxtb	r1, r1
 8004862:	f7fb ffdd 	bl	8000820 <_test_assert>
 8004866:	2800      	cmp	r0, #0
 8004868:	d000      	beq.n	800486c <mtx4_execute+0x1bc>
 800486a:	e757      	b.n	800471c <mtx4_execute+0x6c>
 800486c:	20fa      	movs	r0, #250	; 0xfa
 800486e:	0080      	lsls	r0, r0, #2
 8004870:	f7fd fdf6 	bl	8002460 <chThdSleep>
 8004874:	69ab      	ldr	r3, [r5, #24]
 8004876:	200b      	movs	r0, #11
 8004878:	6899      	ldr	r1, [r3, #8]
 800487a:	464b      	mov	r3, r9
 800487c:	1ac9      	subs	r1, r1, r3
 800487e:	424b      	negs	r3, r1
 8004880:	4159      	adcs	r1, r3
 8004882:	b2c9      	uxtb	r1, r1
 8004884:	f7fb ffcc 	bl	8000820 <_test_assert>
 8004888:	2800      	cmp	r0, #0
 800488a:	d000      	beq.n	800488e <mtx4_execute+0x1de>
 800488c:	e746      	b.n	800471c <mtx4_execute+0x6c>
 800488e:	b672      	cpsid	i
 8004890:	4823      	ldr	r0, [pc, #140]	; (8004920 <mtx4_execute+0x270>)
 8004892:	f7fc fa4d 	bl	8000d30 <chMtxUnlockS>
 8004896:	f7fc fdfb 	bl	8001490 <chSchRescheduleS>
 800489a:	b662      	cpsie	i
 800489c:	69ab      	ldr	r3, [r5, #24]
 800489e:	200c      	movs	r0, #12
 80048a0:	6899      	ldr	r1, [r3, #8]
 80048a2:	4643      	mov	r3, r8
 80048a4:	1ac9      	subs	r1, r1, r3
 80048a6:	424b      	negs	r3, r1
 80048a8:	4159      	adcs	r1, r3
 80048aa:	b2c9      	uxtb	r1, r1
 80048ac:	f7fb ffb8 	bl	8000820 <_test_assert>
 80048b0:	2800      	cmp	r0, #0
 80048b2:	d000      	beq.n	80048b6 <mtx4_execute+0x206>
 80048b4:	e732      	b.n	800471c <mtx4_execute+0x6c>
 80048b6:	20fa      	movs	r0, #250	; 0xfa
 80048b8:	0080      	lsls	r0, r0, #2
 80048ba:	f7fd fdd1 	bl	8002460 <chThdSleep>
 80048be:	69ab      	ldr	r3, [r5, #24]
 80048c0:	200d      	movs	r0, #13
 80048c2:	6899      	ldr	r1, [r3, #8]
 80048c4:	4643      	mov	r3, r8
 80048c6:	1ac9      	subs	r1, r1, r3
 80048c8:	424b      	negs	r3, r1
 80048ca:	4159      	adcs	r1, r3
 80048cc:	b2c9      	uxtb	r1, r1
 80048ce:	f7fb ffa7 	bl	8000820 <_test_assert>
 80048d2:	2800      	cmp	r0, #0
 80048d4:	d000      	beq.n	80048d8 <mtx4_execute+0x228>
 80048d6:	e721      	b.n	800471c <mtx4_execute+0x6c>
 80048d8:	f7fc fdfa 	bl	80014d0 <chMtxUnlockAll>
 80048dc:	69ab      	ldr	r3, [r5, #24]
 80048de:	200e      	movs	r0, #14
 80048e0:	6899      	ldr	r1, [r3, #8]
 80048e2:	1b09      	subs	r1, r1, r4
 80048e4:	424c      	negs	r4, r1
 80048e6:	4161      	adcs	r1, r4
 80048e8:	b2c9      	uxtb	r1, r1
 80048ea:	f7fb ff99 	bl	8000820 <_test_assert>
 80048ee:	2800      	cmp	r0, #0
 80048f0:	d000      	beq.n	80048f4 <mtx4_execute+0x244>
 80048f2:	e713      	b.n	800471c <mtx4_execute+0x6c>
 80048f4:	f7fe feb4 	bl	8003660 <test_wait_threads>
 80048f8:	e710      	b.n	800471c <mtx4_execute+0x6c>
 80048fa:	46c0      	nop			; (mov r8, r8)
 80048fc:	20000738 	.word	0x20000738
 8004900:	20000940 	.word	0x20000940
 8004904:	08002d31 	.word	0x08002d31
 8004908:	080058b0 	.word	0x080058b0
 800490c:	08002d51 	.word	0x08002d51
 8004910:	20000fd4 	.word	0x20000fd4
 8004914:	080058c0 	.word	0x080058c0
 8004918:	20000a88 	.word	0x20000a88
 800491c:	20000644 	.word	0x20000644
 8004920:	20000634 	.word	0x20000634
 8004924:	080058b8 	.word	0x080058b8
 8004928:	080058b4 	.word	0x080058b4
 800492c:	00000000 	.word	0x00000000

08004930 <mtx1_execute>:
 8004930:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004932:	46ce      	mov	lr, r9
 8004934:	4647      	mov	r7, r8
 8004936:	4b31      	ldr	r3, [pc, #196]	; (80049fc <mtx1_execute+0xcc>)
 8004938:	b580      	push	{r7, lr}
 800493a:	4698      	mov	r8, r3
 800493c:	699b      	ldr	r3, [r3, #24]
 800493e:	b083      	sub	sp, #12
 8004940:	689d      	ldr	r5, [r3, #8]
 8004942:	4b2f      	ldr	r3, [pc, #188]	; (8004a00 <mtx1_execute+0xd0>)
 8004944:	0018      	movs	r0, r3
 8004946:	4699      	mov	r9, r3
 8004948:	f7fe f8ba 	bl	8002ac0 <chMtxLock>
 800494c:	21a4      	movs	r1, #164	; 0xa4
 800494e:	4f2d      	ldr	r7, [pc, #180]	; (8004a04 <mtx1_execute+0xd4>)
 8004950:	4c2d      	ldr	r4, [pc, #180]	; (8004a08 <mtx1_execute+0xd8>)
 8004952:	4b2e      	ldr	r3, [pc, #184]	; (8004a0c <mtx1_execute+0xdc>)
 8004954:	1c6a      	adds	r2, r5, #1
 8004956:	9300      	str	r3, [sp, #0]
 8004958:	0049      	lsls	r1, r1, #1
 800495a:	003b      	movs	r3, r7
 800495c:	0020      	movs	r0, r4
 800495e:	f7fc ff6f 	bl	8001840 <chThdCreateStatic>
 8004962:	4e2b      	ldr	r6, [pc, #172]	; (8004a10 <mtx1_execute+0xe0>)
 8004964:	21a4      	movs	r1, #164	; 0xa4
 8004966:	6030      	str	r0, [r6, #0]
 8004968:	0020      	movs	r0, r4
 800496a:	4b2a      	ldr	r3, [pc, #168]	; (8004a14 <mtx1_execute+0xe4>)
 800496c:	3049      	adds	r0, #73	; 0x49
 800496e:	1caa      	adds	r2, r5, #2
 8004970:	9300      	str	r3, [sp, #0]
 8004972:	0049      	lsls	r1, r1, #1
 8004974:	003b      	movs	r3, r7
 8004976:	30ff      	adds	r0, #255	; 0xff
 8004978:	f7fc ff62 	bl	8001840 <chThdCreateStatic>
 800497c:	23a4      	movs	r3, #164	; 0xa4
 800497e:	21a4      	movs	r1, #164	; 0xa4
 8004980:	009b      	lsls	r3, r3, #2
 8004982:	6070      	str	r0, [r6, #4]
 8004984:	18e0      	adds	r0, r4, r3
 8004986:	4b24      	ldr	r3, [pc, #144]	; (8004a18 <mtx1_execute+0xe8>)
 8004988:	1cea      	adds	r2, r5, #3
 800498a:	9300      	str	r3, [sp, #0]
 800498c:	0049      	lsls	r1, r1, #1
 800498e:	003b      	movs	r3, r7
 8004990:	f7fc ff56 	bl	8001840 <chThdCreateStatic>
 8004994:	23f6      	movs	r3, #246	; 0xf6
 8004996:	21a4      	movs	r1, #164	; 0xa4
 8004998:	009b      	lsls	r3, r3, #2
 800499a:	60b0      	str	r0, [r6, #8]
 800499c:	18e0      	adds	r0, r4, r3
 800499e:	4b1f      	ldr	r3, [pc, #124]	; (8004a1c <mtx1_execute+0xec>)
 80049a0:	1d2a      	adds	r2, r5, #4
 80049a2:	9300      	str	r3, [sp, #0]
 80049a4:	0049      	lsls	r1, r1, #1
 80049a6:	003b      	movs	r3, r7
 80049a8:	f7fc ff4a 	bl	8001840 <chThdCreateStatic>
 80049ac:	23a4      	movs	r3, #164	; 0xa4
 80049ae:	21a4      	movs	r1, #164	; 0xa4
 80049b0:	00db      	lsls	r3, r3, #3
 80049b2:	60f0      	str	r0, [r6, #12]
 80049b4:	18e0      	adds	r0, r4, r3
 80049b6:	4b1a      	ldr	r3, [pc, #104]	; (8004a20 <mtx1_execute+0xf0>)
 80049b8:	0049      	lsls	r1, r1, #1
 80049ba:	1d6a      	adds	r2, r5, #5
 80049bc:	9300      	str	r3, [sp, #0]
 80049be:	003b      	movs	r3, r7
 80049c0:	f7fc ff3e 	bl	8001840 <chThdCreateStatic>
 80049c4:	6130      	str	r0, [r6, #16]
 80049c6:	4648      	mov	r0, r9
 80049c8:	f7fc fef2 	bl	80017b0 <chMtxUnlock>
 80049cc:	f7fe fe48 	bl	8003660 <test_wait_threads>
 80049d0:	4643      	mov	r3, r8
 80049d2:	699b      	ldr	r3, [r3, #24]
 80049d4:	2001      	movs	r0, #1
 80049d6:	6899      	ldr	r1, [r3, #8]
 80049d8:	1b49      	subs	r1, r1, r5
 80049da:	424b      	negs	r3, r1
 80049dc:	4159      	adcs	r1, r3
 80049de:	b2c9      	uxtb	r1, r1
 80049e0:	f7fb ff1e 	bl	8000820 <_test_assert>
 80049e4:	2800      	cmp	r0, #0
 80049e6:	d103      	bne.n	80049f0 <mtx1_execute+0xc0>
 80049e8:	490e      	ldr	r1, [pc, #56]	; (8004a24 <mtx1_execute+0xf4>)
 80049ea:	3002      	adds	r0, #2
 80049ec:	f7fb fef0 	bl	80007d0 <_test_assert_sequence>
 80049f0:	b003      	add	sp, #12
 80049f2:	bc0c      	pop	{r2, r3}
 80049f4:	4690      	mov	r8, r2
 80049f6:	4699      	mov	r9, r3
 80049f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80049fa:	46c0      	nop			; (mov r8, r8)
 80049fc:	20000738 	.word	0x20000738
 8004a00:	20000634 	.word	0x20000634
 8004a04:	08002d71 	.word	0x08002d71
 8004a08:	20000940 	.word	0x20000940
 8004a0c:	08005b04 	.word	0x08005b04
 8004a10:	20000fd4 	.word	0x20000fd4
 8004a14:	080058b8 	.word	0x080058b8
 8004a18:	080058b4 	.word	0x080058b4
 8004a1c:	080058b0 	.word	0x080058b0
 8004a20:	080058c0 	.word	0x080058c0
 8004a24:	08005b00 	.word	0x08005b00
	...

08004a30 <sem2_execute>:
 8004a30:	b570      	push	{r4, r5, r6, lr}
 8004a32:	b082      	sub	sp, #8
 8004a34:	b672      	cpsid	i
 8004a36:	4c47      	ldr	r4, [pc, #284]	; (8004b54 <sem2_execute+0x124>)
 8004a38:	2101      	movs	r1, #1
 8004a3a:	68a3      	ldr	r3, [r4, #8]
 8004a3c:	3b01      	subs	r3, #1
 8004a3e:	d401      	bmi.n	8004a44 <sem2_execute+0x14>
 8004a40:	2100      	movs	r1, #0
 8004a42:	60a3      	str	r3, [r4, #8]
 8004a44:	b662      	cpsie	i
 8004a46:	2001      	movs	r0, #1
 8004a48:	f7fb feea 	bl	8000820 <_test_assert>
 8004a4c:	2800      	cmp	r0, #0
 8004a4e:	d001      	beq.n	8004a54 <sem2_execute+0x24>
 8004a50:	b002      	add	sp, #8
 8004a52:	bd70      	pop	{r4, r5, r6, pc}
 8004a54:	6823      	ldr	r3, [r4, #0]
 8004a56:	3002      	adds	r0, #2
 8004a58:	1b19      	subs	r1, r3, r4
 8004a5a:	424b      	negs	r3, r1
 8004a5c:	4159      	adcs	r1, r3
 8004a5e:	b2c9      	uxtb	r1, r1
 8004a60:	f7fb fede 	bl	8000820 <_test_assert>
 8004a64:	2800      	cmp	r0, #0
 8004a66:	d1f3      	bne.n	8004a50 <sem2_execute+0x20>
 8004a68:	68a1      	ldr	r1, [r4, #8]
 8004a6a:	3003      	adds	r0, #3
 8004a6c:	424b      	negs	r3, r1
 8004a6e:	4159      	adcs	r1, r3
 8004a70:	b2c9      	uxtb	r1, r1
 8004a72:	f7fb fed5 	bl	8000820 <_test_assert>
 8004a76:	2800      	cmp	r0, #0
 8004a78:	d1ea      	bne.n	8004a50 <sem2_execute+0x20>
 8004a7a:	21a4      	movs	r1, #164	; 0xa4
 8004a7c:	4b36      	ldr	r3, [pc, #216]	; (8004b58 <sem2_execute+0x128>)
 8004a7e:	0049      	lsls	r1, r1, #1
 8004a80:	699b      	ldr	r3, [r3, #24]
 8004a82:	689a      	ldr	r2, [r3, #8]
 8004a84:	9000      	str	r0, [sp, #0]
 8004a86:	3a01      	subs	r2, #1
 8004a88:	4b34      	ldr	r3, [pc, #208]	; (8004b5c <sem2_execute+0x12c>)
 8004a8a:	4835      	ldr	r0, [pc, #212]	; (8004b60 <sem2_execute+0x130>)
 8004a8c:	f7fc fed8 	bl	8001840 <chThdCreateStatic>
 8004a90:	4b34      	ldr	r3, [pc, #208]	; (8004b64 <sem2_execute+0x134>)
 8004a92:	6018      	str	r0, [r3, #0]
 8004a94:	4834      	ldr	r0, [pc, #208]	; (8004b68 <sem2_execute+0x138>)
 8004a96:	f7fc ffeb 	bl	8001a70 <chSemWaitTimeout.constprop.50>
 8004a9a:	0005      	movs	r5, r0
 8004a9c:	f7fe fde0 	bl	8003660 <test_wait_threads>
 8004aa0:	4269      	negs	r1, r5
 8004aa2:	4169      	adcs	r1, r5
 8004aa4:	2004      	movs	r0, #4
 8004aa6:	b2c9      	uxtb	r1, r1
 8004aa8:	f7fb feba 	bl	8000820 <_test_assert>
 8004aac:	2800      	cmp	r0, #0
 8004aae:	d1cf      	bne.n	8004a50 <sem2_execute+0x20>
 8004ab0:	6823      	ldr	r3, [r4, #0]
 8004ab2:	3005      	adds	r0, #5
 8004ab4:	1b19      	subs	r1, r3, r4
 8004ab6:	424b      	negs	r3, r1
 8004ab8:	4159      	adcs	r1, r3
 8004aba:	b2c9      	uxtb	r1, r1
 8004abc:	f7fb feb0 	bl	8000820 <_test_assert>
 8004ac0:	2800      	cmp	r0, #0
 8004ac2:	d1c5      	bne.n	8004a50 <sem2_execute+0x20>
 8004ac4:	68a1      	ldr	r1, [r4, #8]
 8004ac6:	3006      	adds	r0, #6
 8004ac8:	424b      	negs	r3, r1
 8004aca:	4159      	adcs	r1, r3
 8004acc:	b2c9      	uxtb	r1, r1
 8004ace:	f7fb fea7 	bl	8000820 <_test_assert>
 8004ad2:	2800      	cmp	r0, #0
 8004ad4:	d1bc      	bne.n	8004a50 <sem2_execute+0x20>
 8004ad6:	f7fd fd93 	bl	8002600 <test_wait_tick>
 8004ada:	b672      	cpsid	i
 8004adc:	2380      	movs	r3, #128	; 0x80
 8004ade:	05db      	lsls	r3, r3, #23
 8004ae0:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 8004ae2:	b662      	cpsie	i
 8004ae4:	2541      	movs	r5, #65	; 0x41
 8004ae6:	0028      	movs	r0, r5
 8004ae8:	f7fb feb2 	bl	8000850 <test_emit_token>
 8004aec:	20fa      	movs	r0, #250	; 0xfa
 8004aee:	0040      	lsls	r0, r0, #1
 8004af0:	f7fc ffbe 	bl	8001a70 <chSemWaitTimeout.constprop.50>
 8004af4:	3001      	adds	r0, #1
 8004af6:	4241      	negs	r1, r0
 8004af8:	4141      	adcs	r1, r0
 8004afa:	2007      	movs	r0, #7
 8004afc:	b2c9      	uxtb	r1, r1
 8004afe:	f7fb fe8f 	bl	8000820 <_test_assert>
 8004b02:	2800      	cmp	r0, #0
 8004b04:	d1a4      	bne.n	8004a50 <sem2_execute+0x20>
 8004b06:	6823      	ldr	r3, [r4, #0]
 8004b08:	3008      	adds	r0, #8
 8004b0a:	1b19      	subs	r1, r3, r4
 8004b0c:	424b      	negs	r3, r1
 8004b0e:	4159      	adcs	r1, r3
 8004b10:	b2c9      	uxtb	r1, r1
 8004b12:	f7fb fe85 	bl	8000820 <_test_assert>
 8004b16:	2800      	cmp	r0, #0
 8004b18:	d19a      	bne.n	8004a50 <sem2_execute+0x20>
 8004b1a:	68a1      	ldr	r1, [r4, #8]
 8004b1c:	3009      	adds	r0, #9
 8004b1e:	424b      	negs	r3, r1
 8004b20:	4159      	adcs	r1, r3
 8004b22:	b2c9      	uxtb	r1, r1
 8004b24:	f7fb fe7c 	bl	8000820 <_test_assert>
 8004b28:	2800      	cmp	r0, #0
 8004b2a:	d000      	beq.n	8004b2e <sem2_execute+0xfe>
 8004b2c:	e790      	b.n	8004a50 <sem2_execute+0x20>
 8004b2e:	3501      	adds	r5, #1
 8004b30:	b2ed      	uxtb	r5, r5
 8004b32:	2d46      	cmp	r5, #70	; 0x46
 8004b34:	d1d7      	bne.n	8004ae6 <sem2_execute+0xb6>
 8004b36:	490d      	ldr	r1, [pc, #52]	; (8004b6c <sem2_execute+0x13c>)
 8004b38:	300a      	adds	r0, #10
 8004b3a:	f7fb fe49 	bl	80007d0 <_test_assert_sequence>
 8004b3e:	2800      	cmp	r0, #0
 8004b40:	d000      	beq.n	8004b44 <sem2_execute+0x114>
 8004b42:	e785      	b.n	8004a50 <sem2_execute+0x20>
 8004b44:	4b0a      	ldr	r3, [pc, #40]	; (8004b70 <sem2_execute+0x140>)
 8004b46:	300b      	adds	r0, #11
 8004b48:	18f2      	adds	r2, r6, r3
 8004b4a:	4b0a      	ldr	r3, [pc, #40]	; (8004b74 <sem2_execute+0x144>)
 8004b4c:	18f1      	adds	r1, r6, r3
 8004b4e:	f7fb fe1f 	bl	8000790 <_test_assert_time_window>
 8004b52:	e77d      	b.n	8004a50 <sem2_execute+0x20>
 8004b54:	200006ac 	.word	0x200006ac
 8004b58:	20000738 	.word	0x20000738
 8004b5c:	080025e1 	.word	0x080025e1
 8004b60:	20000940 	.word	0x20000940
 8004b64:	20000fd4 	.word	0x20000fd4
 8004b68:	00001388 	.word	0x00001388
 8004b6c:	08005b00 	.word	0x08005b00
 8004b70:	000009d8 	.word	0x000009d8
 8004b74:	000009c4 	.word	0x000009c4
	...

08004b80 <sem1_execute>:
 8004b80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b82:	46ce      	mov	lr, r9
 8004b84:	4647      	mov	r7, r8
 8004b86:	21a4      	movs	r1, #164	; 0xa4
 8004b88:	b580      	push	{r7, lr}
 8004b8a:	4b4e      	ldr	r3, [pc, #312]	; (8004cc4 <sem1_execute+0x144>)
 8004b8c:	4f4e      	ldr	r7, [pc, #312]	; (8004cc8 <sem1_execute+0x148>)
 8004b8e:	4698      	mov	r8, r3
 8004b90:	699b      	ldr	r3, [r3, #24]
 8004b92:	4e4e      	ldr	r6, [pc, #312]	; (8004ccc <sem1_execute+0x14c>)
 8004b94:	689a      	ldr	r2, [r3, #8]
 8004b96:	4b4e      	ldr	r3, [pc, #312]	; (8004cd0 <sem1_execute+0x150>)
 8004b98:	b083      	sub	sp, #12
 8004b9a:	3205      	adds	r2, #5
 8004b9c:	9300      	str	r3, [sp, #0]
 8004b9e:	0049      	lsls	r1, r1, #1
 8004ba0:	4699      	mov	r9, r3
 8004ba2:	0030      	movs	r0, r6
 8004ba4:	003b      	movs	r3, r7
 8004ba6:	f7fc fe4b 	bl	8001840 <chThdCreateStatic>
 8004baa:	4643      	mov	r3, r8
 8004bac:	4d49      	ldr	r5, [pc, #292]	; (8004cd4 <sem1_execute+0x154>)
 8004bae:	21a4      	movs	r1, #164	; 0xa4
 8004bb0:	6028      	str	r0, [r5, #0]
 8004bb2:	0030      	movs	r0, r6
 8004bb4:	699b      	ldr	r3, [r3, #24]
 8004bb6:	3049      	adds	r0, #73	; 0x49
 8004bb8:	689a      	ldr	r2, [r3, #8]
 8004bba:	4b47      	ldr	r3, [pc, #284]	; (8004cd8 <sem1_execute+0x158>)
 8004bbc:	3201      	adds	r2, #1
 8004bbe:	9300      	str	r3, [sp, #0]
 8004bc0:	0049      	lsls	r1, r1, #1
 8004bc2:	003b      	movs	r3, r7
 8004bc4:	30ff      	adds	r0, #255	; 0xff
 8004bc6:	f7fc fe3b 	bl	8001840 <chThdCreateStatic>
 8004bca:	4643      	mov	r3, r8
 8004bcc:	699b      	ldr	r3, [r3, #24]
 8004bce:	21a4      	movs	r1, #164	; 0xa4
 8004bd0:	689a      	ldr	r2, [r3, #8]
 8004bd2:	23a4      	movs	r3, #164	; 0xa4
 8004bd4:	009b      	lsls	r3, r3, #2
 8004bd6:	6068      	str	r0, [r5, #4]
 8004bd8:	18f0      	adds	r0, r6, r3
 8004bda:	4b40      	ldr	r3, [pc, #256]	; (8004cdc <sem1_execute+0x15c>)
 8004bdc:	3203      	adds	r2, #3
 8004bde:	9300      	str	r3, [sp, #0]
 8004be0:	0049      	lsls	r1, r1, #1
 8004be2:	003b      	movs	r3, r7
 8004be4:	f7fc fe2c 	bl	8001840 <chThdCreateStatic>
 8004be8:	4643      	mov	r3, r8
 8004bea:	699b      	ldr	r3, [r3, #24]
 8004bec:	21a4      	movs	r1, #164	; 0xa4
 8004bee:	689a      	ldr	r2, [r3, #8]
 8004bf0:	23f6      	movs	r3, #246	; 0xf6
 8004bf2:	009b      	lsls	r3, r3, #2
 8004bf4:	60a8      	str	r0, [r5, #8]
 8004bf6:	18f0      	adds	r0, r6, r3
 8004bf8:	4b39      	ldr	r3, [pc, #228]	; (8004ce0 <sem1_execute+0x160>)
 8004bfa:	3204      	adds	r2, #4
 8004bfc:	9300      	str	r3, [sp, #0]
 8004bfe:	0049      	lsls	r1, r1, #1
 8004c00:	003b      	movs	r3, r7
 8004c02:	f7fc fe1d 	bl	8001840 <chThdCreateStatic>
 8004c06:	4643      	mov	r3, r8
 8004c08:	699b      	ldr	r3, [r3, #24]
 8004c0a:	21a4      	movs	r1, #164	; 0xa4
 8004c0c:	689a      	ldr	r2, [r3, #8]
 8004c0e:	23a4      	movs	r3, #164	; 0xa4
 8004c10:	00db      	lsls	r3, r3, #3
 8004c12:	60e8      	str	r0, [r5, #12]
 8004c14:	18f0      	adds	r0, r6, r3
 8004c16:	4b33      	ldr	r3, [pc, #204]	; (8004ce4 <sem1_execute+0x164>)
 8004c18:	0049      	lsls	r1, r1, #1
 8004c1a:	3202      	adds	r2, #2
 8004c1c:	9300      	str	r3, [sp, #0]
 8004c1e:	003b      	movs	r3, r7
 8004c20:	f7fc fe0e 	bl	8001840 <chThdCreateStatic>
 8004c24:	4c30      	ldr	r4, [pc, #192]	; (8004ce8 <sem1_execute+0x168>)
 8004c26:	6128      	str	r0, [r5, #16]
 8004c28:	0020      	movs	r0, r4
 8004c2a:	f7fc fdf1 	bl	8001810 <chSemSignal>
 8004c2e:	0020      	movs	r0, r4
 8004c30:	f7fc fdee 	bl	8001810 <chSemSignal>
 8004c34:	0020      	movs	r0, r4
 8004c36:	f7fc fdeb 	bl	8001810 <chSemSignal>
 8004c3a:	0020      	movs	r0, r4
 8004c3c:	f7fc fde8 	bl	8001810 <chSemSignal>
 8004c40:	0020      	movs	r0, r4
 8004c42:	f7fc fde5 	bl	8001810 <chSemSignal>
 8004c46:	f7fe fd0b 	bl	8003660 <test_wait_threads>
 8004c4a:	4928      	ldr	r1, [pc, #160]	; (8004cec <sem1_execute+0x16c>)
 8004c4c:	2001      	movs	r0, #1
 8004c4e:	f7fb fdbf 	bl	80007d0 <_test_assert_sequence>
 8004c52:	2800      	cmp	r0, #0
 8004c54:	d004      	beq.n	8004c60 <sem1_execute+0xe0>
 8004c56:	b003      	add	sp, #12
 8004c58:	bc0c      	pop	{r2, r3}
 8004c5a:	4690      	mov	r8, r2
 8004c5c:	4699      	mov	r9, r3
 8004c5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004c60:	4643      	mov	r3, r8
 8004c62:	699b      	ldr	r3, [r3, #24]
 8004c64:	21a4      	movs	r1, #164	; 0xa4
 8004c66:	689a      	ldr	r2, [r3, #8]
 8004c68:	464b      	mov	r3, r9
 8004c6a:	3205      	adds	r2, #5
 8004c6c:	9300      	str	r3, [sp, #0]
 8004c6e:	0049      	lsls	r1, r1, #1
 8004c70:	003b      	movs	r3, r7
 8004c72:	0030      	movs	r0, r6
 8004c74:	f7fc fde4 	bl	8001840 <chThdCreateStatic>
 8004c78:	6028      	str	r0, [r5, #0]
 8004c7a:	b672      	cpsid	i
 8004c7c:	2502      	movs	r5, #2
 8004c7e:	2600      	movs	r6, #0
 8004c80:	e002      	b.n	8004c88 <sem1_execute+0x108>
 8004c82:	2d01      	cmp	r5, #1
 8004c84:	d00e      	beq.n	8004ca4 <sem1_execute+0x124>
 8004c86:	2501      	movs	r5, #1
 8004c88:	68a3      	ldr	r3, [r4, #8]
 8004c8a:	3301      	adds	r3, #1
 8004c8c:	60a3      	str	r3, [r4, #8]
 8004c8e:	2b00      	cmp	r3, #0
 8004c90:	dcf7      	bgt.n	8004c82 <sem1_execute+0x102>
 8004c92:	6820      	ldr	r0, [r4, #0]
 8004c94:	6803      	ldr	r3, [r0, #0]
 8004c96:	6023      	str	r3, [r4, #0]
 8004c98:	605c      	str	r4, [r3, #4]
 8004c9a:	f7fb ffa1 	bl	8000be0 <chSchReadyI>
 8004c9e:	6206      	str	r6, [r0, #32]
 8004ca0:	2d01      	cmp	r5, #1
 8004ca2:	d1f0      	bne.n	8004c86 <sem1_execute+0x106>
 8004ca4:	f7fc fbf4 	bl	8001490 <chSchRescheduleS>
 8004ca8:	b662      	cpsie	i
 8004caa:	f7fe fcd9 	bl	8003660 <test_wait_threads>
 8004cae:	b672      	cpsid	i
 8004cb0:	68a1      	ldr	r1, [r4, #8]
 8004cb2:	2002      	movs	r0, #2
 8004cb4:	3901      	subs	r1, #1
 8004cb6:	424b      	negs	r3, r1
 8004cb8:	4159      	adcs	r1, r3
 8004cba:	b2c9      	uxtb	r1, r1
 8004cbc:	f7fb fdb0 	bl	8000820 <_test_assert>
 8004cc0:	b662      	cpsie	i
 8004cc2:	e7c8      	b.n	8004c56 <sem1_execute+0xd6>
 8004cc4:	20000738 	.word	0x20000738
 8004cc8:	08003591 	.word	0x08003591
 8004ccc:	20000940 	.word	0x20000940
 8004cd0:	080058c0 	.word	0x080058c0
 8004cd4:	20000fd4 	.word	0x20000fd4
 8004cd8:	080058b0 	.word	0x080058b0
 8004cdc:	080058b4 	.word	0x080058b4
 8004ce0:	080058b8 	.word	0x080058b8
 8004ce4:	08005b04 	.word	0x08005b04
 8004ce8:	200006ac 	.word	0x200006ac
 8004cec:	08005b00 	.word	0x08005b00

08004cf0 <thd2_execute>:
 8004cf0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004cf2:	4b46      	ldr	r3, [pc, #280]	; (8004e0c <thd2_execute+0x11c>)
 8004cf4:	4e46      	ldr	r6, [pc, #280]	; (8004e10 <thd2_execute+0x120>)
 8004cf6:	4647      	mov	r7, r8
 8004cf8:	4698      	mov	r8, r3
 8004cfa:	69b3      	ldr	r3, [r6, #24]
 8004cfc:	46ce      	mov	lr, r9
 8004cfe:	689a      	ldr	r2, [r3, #8]
 8004d00:	23a4      	movs	r3, #164	; 0xa4
 8004d02:	005b      	lsls	r3, r3, #1
 8004d04:	4699      	mov	r9, r3
 8004d06:	b580      	push	{r7, lr}
 8004d08:	4d42      	ldr	r5, [pc, #264]	; (8004e14 <thd2_execute+0x124>)
 8004d0a:	4b43      	ldr	r3, [pc, #268]	; (8004e18 <thd2_execute+0x128>)
 8004d0c:	b083      	sub	sp, #12
 8004d0e:	002c      	movs	r4, r5
 8004d10:	9300      	str	r3, [sp, #0]
 8004d12:	4649      	mov	r1, r9
 8004d14:	4643      	mov	r3, r8
 8004d16:	3a04      	subs	r2, #4
 8004d18:	0028      	movs	r0, r5
 8004d1a:	f7fc fd91 	bl	8001840 <chThdCreateStatic>
 8004d1e:	69b3      	ldr	r3, [r6, #24]
 8004d20:	4f3e      	ldr	r7, [pc, #248]	; (8004e1c <thd2_execute+0x12c>)
 8004d22:	689a      	ldr	r2, [r3, #8]
 8004d24:	3c49      	subs	r4, #73	; 0x49
 8004d26:	4b3e      	ldr	r3, [pc, #248]	; (8004e20 <thd2_execute+0x130>)
 8004d28:	3cff      	subs	r4, #255	; 0xff
 8004d2a:	6078      	str	r0, [r7, #4]
 8004d2c:	4649      	mov	r1, r9
 8004d2e:	9300      	str	r3, [sp, #0]
 8004d30:	3a05      	subs	r2, #5
 8004d32:	4643      	mov	r3, r8
 8004d34:	0020      	movs	r0, r4
 8004d36:	f7fc fd83 	bl	8001840 <chThdCreateStatic>
 8004d3a:	69b3      	ldr	r3, [r6, #24]
 8004d3c:	6038      	str	r0, [r7, #0]
 8004d3e:	689a      	ldr	r2, [r3, #8]
 8004d40:	23f6      	movs	r3, #246	; 0xf6
 8004d42:	009b      	lsls	r3, r3, #2
 8004d44:	18e8      	adds	r0, r5, r3
 8004d46:	4b37      	ldr	r3, [pc, #220]	; (8004e24 <thd2_execute+0x134>)
 8004d48:	4649      	mov	r1, r9
 8004d4a:	9300      	str	r3, [sp, #0]
 8004d4c:	3a01      	subs	r2, #1
 8004d4e:	4643      	mov	r3, r8
 8004d50:	f7fc fd76 	bl	8001840 <chThdCreateStatic>
 8004d54:	69b3      	ldr	r3, [r6, #24]
 8004d56:	6138      	str	r0, [r7, #16]
 8004d58:	689a      	ldr	r2, [r3, #8]
 8004d5a:	23a4      	movs	r3, #164	; 0xa4
 8004d5c:	009b      	lsls	r3, r3, #2
 8004d5e:	18e8      	adds	r0, r5, r3
 8004d60:	4b31      	ldr	r3, [pc, #196]	; (8004e28 <thd2_execute+0x138>)
 8004d62:	3a02      	subs	r2, #2
 8004d64:	9300      	str	r3, [sp, #0]
 8004d66:	4649      	mov	r1, r9
 8004d68:	4643      	mov	r3, r8
 8004d6a:	f7fc fd69 	bl	8001840 <chThdCreateStatic>
 8004d6e:	60f8      	str	r0, [r7, #12]
 8004d70:	b672      	cpsid	i
 8004d72:	229b      	movs	r2, #155	; 0x9b
 8004d74:	69b3      	ldr	r3, [r6, #24]
 8004d76:	0092      	lsls	r2, r2, #2
 8004d78:	18a9      	adds	r1, r5, r2
 8004d7a:	3230      	adds	r2, #48	; 0x30
 8004d7c:	689b      	ldr	r3, [r3, #8]
 8004d7e:	50a1      	str	r1, [r4, r2]
 8004d80:	4641      	mov	r1, r8
 8004d82:	3229      	adds	r2, #41	; 0x29
 8004d84:	32ff      	adds	r2, #255	; 0xff
 8004d86:	50a1      	str	r1, [r4, r2]
 8004d88:	4928      	ldr	r1, [pc, #160]	; (8004e2c <thd2_execute+0x13c>)
 8004d8a:	3204      	adds	r2, #4
 8004d8c:	50a1      	str	r1, [r4, r2]
 8004d8e:	4928      	ldr	r1, [pc, #160]	; (8004e30 <thd2_execute+0x140>)
 8004d90:	320c      	adds	r2, #12
 8004d92:	50a1      	str	r1, [r4, r2]
 8004d94:	3a3d      	subs	r2, #61	; 0x3d
 8004d96:	3b03      	subs	r3, #3
 8004d98:	3aff      	subs	r2, #255	; 0xff
 8004d9a:	50a3      	str	r3, [r4, r2]
 8004d9c:	3234      	adds	r2, #52	; 0x34
 8004d9e:	50a3      	str	r3, [r4, r2]
 8004da0:	2300      	movs	r3, #0
 8004da2:	3a04      	subs	r2, #4
 8004da4:	50a3      	str	r3, [r4, r2]
 8004da6:	3a04      	subs	r2, #4
 8004da8:	50a3      	str	r3, [r4, r2]
 8004daa:	3a1c      	subs	r2, #28
 8004dac:	50a3      	str	r3, [r4, r2]
 8004dae:	23ab      	movs	r3, #171	; 0xab
 8004db0:	2202      	movs	r2, #2
 8004db2:	009b      	lsls	r3, r3, #2
 8004db4:	52e2      	strh	r2, [r4, r3]
 8004db6:	4b1f      	ldr	r3, [pc, #124]	; (8004e34 <thd2_execute+0x144>)
 8004db8:	3a01      	subs	r2, #1
 8004dba:	54e2      	strb	r2, [r4, r3]
 8004dbc:	6972      	ldr	r2, [r6, #20]
 8004dbe:	3b0e      	subs	r3, #14
 8004dc0:	50e6      	str	r6, [r4, r3]
 8004dc2:	3304      	adds	r3, #4
 8004dc4:	50e2      	str	r2, [r4, r3]
 8004dc6:	002b      	movs	r3, r5
 8004dc8:	0029      	movs	r1, r5
 8004dca:	444b      	add	r3, r9
 8004dcc:	6113      	str	r3, [r2, #16]
 8004dce:	22ad      	movs	r2, #173	; 0xad
 8004dd0:	316d      	adds	r1, #109	; 0x6d
 8004dd2:	31ff      	adds	r1, #255	; 0xff
 8004dd4:	0092      	lsls	r2, r2, #2
 8004dd6:	3571      	adds	r5, #113	; 0x71
 8004dd8:	50a1      	str	r1, [r4, r2]
 8004dda:	35ff      	adds	r5, #255	; 0xff
 8004ddc:	3204      	adds	r2, #4
 8004dde:	50a5      	str	r5, [r4, r2]
 8004de0:	3204      	adds	r2, #4
 8004de2:	6173      	str	r3, [r6, #20]
 8004de4:	50a5      	str	r5, [r4, r2]
 8004de6:	60bb      	str	r3, [r7, #8]
 8004de8:	b662      	cpsie	i
 8004dea:	68b8      	ldr	r0, [r7, #8]
 8004dec:	b672      	cpsid	i
 8004dee:	f7fb fef7 	bl	8000be0 <chSchReadyI>
 8004df2:	b662      	cpsie	i
 8004df4:	f7fe fc34 	bl	8003660 <test_wait_threads>
 8004df8:	490f      	ldr	r1, [pc, #60]	; (8004e38 <thd2_execute+0x148>)
 8004dfa:	2001      	movs	r0, #1
 8004dfc:	f7fb fce8 	bl	80007d0 <_test_assert_sequence>
 8004e00:	b003      	add	sp, #12
 8004e02:	bc0c      	pop	{r2, r3}
 8004e04:	4690      	mov	r8, r2
 8004e06:	4699      	mov	r9, r3
 8004e08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004e0a:	46c0      	nop			; (mov r8, r8)
 8004e0c:	080008a1 	.word	0x080008a1
 8004e10:	20000738 	.word	0x20000738
 8004e14:	20000a88 	.word	0x20000a88
 8004e18:	080058b8 	.word	0x080058b8
 8004e1c:	20000fd4 	.word	0x20000fd4
 8004e20:	08005b04 	.word	0x08005b04
 8004e24:	080058c0 	.word	0x080058c0
 8004e28:	080058b0 	.word	0x080058b0
 8004e2c:	080058b4 	.word	0x080058b4
 8004e30:	080001a1 	.word	0x080001a1
 8004e34:	000002ae 	.word	0x000002ae
 8004e38:	08005b00 	.word	0x08005b00
 8004e3c:	00000000 	.word	0x00000000

08004e40 <thd1_execute>:
 8004e40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004e42:	46c6      	mov	lr, r8
 8004e44:	4b29      	ldr	r3, [pc, #164]	; (8004eec <thd1_execute+0xac>)
 8004e46:	26a4      	movs	r6, #164	; 0xa4
 8004e48:	4698      	mov	r8, r3
 8004e4a:	b500      	push	{lr}
 8004e4c:	699b      	ldr	r3, [r3, #24]
 8004e4e:	4f28      	ldr	r7, [pc, #160]	; (8004ef0 <thd1_execute+0xb0>)
 8004e50:	4c28      	ldr	r4, [pc, #160]	; (8004ef4 <thd1_execute+0xb4>)
 8004e52:	689a      	ldr	r2, [r3, #8]
 8004e54:	4b28      	ldr	r3, [pc, #160]	; (8004ef8 <thd1_execute+0xb8>)
 8004e56:	b082      	sub	sp, #8
 8004e58:	0076      	lsls	r6, r6, #1
 8004e5a:	9300      	str	r3, [sp, #0]
 8004e5c:	0031      	movs	r1, r6
 8004e5e:	003b      	movs	r3, r7
 8004e60:	3a05      	subs	r2, #5
 8004e62:	0020      	movs	r0, r4
 8004e64:	f7fc fcec 	bl	8001840 <chThdCreateStatic>
 8004e68:	4643      	mov	r3, r8
 8004e6a:	699b      	ldr	r3, [r3, #24]
 8004e6c:	4d23      	ldr	r5, [pc, #140]	; (8004efc <thd1_execute+0xbc>)
 8004e6e:	689a      	ldr	r2, [r3, #8]
 8004e70:	4b23      	ldr	r3, [pc, #140]	; (8004f00 <thd1_execute+0xc0>)
 8004e72:	6028      	str	r0, [r5, #0]
 8004e74:	0031      	movs	r1, r6
 8004e76:	9300      	str	r3, [sp, #0]
 8004e78:	3a04      	subs	r2, #4
 8004e7a:	003b      	movs	r3, r7
 8004e7c:	19a0      	adds	r0, r4, r6
 8004e7e:	f7fc fcdf 	bl	8001840 <chThdCreateStatic>
 8004e82:	4643      	mov	r3, r8
 8004e84:	699b      	ldr	r3, [r3, #24]
 8004e86:	6068      	str	r0, [r5, #4]
 8004e88:	689a      	ldr	r2, [r3, #8]
 8004e8a:	23a4      	movs	r3, #164	; 0xa4
 8004e8c:	009b      	lsls	r3, r3, #2
 8004e8e:	18e0      	adds	r0, r4, r3
 8004e90:	4b1c      	ldr	r3, [pc, #112]	; (8004f04 <thd1_execute+0xc4>)
 8004e92:	0031      	movs	r1, r6
 8004e94:	9300      	str	r3, [sp, #0]
 8004e96:	3a03      	subs	r2, #3
 8004e98:	003b      	movs	r3, r7
 8004e9a:	f7fc fcd1 	bl	8001840 <chThdCreateStatic>
 8004e9e:	4643      	mov	r3, r8
 8004ea0:	699b      	ldr	r3, [r3, #24]
 8004ea2:	60a8      	str	r0, [r5, #8]
 8004ea4:	689a      	ldr	r2, [r3, #8]
 8004ea6:	23f6      	movs	r3, #246	; 0xf6
 8004ea8:	009b      	lsls	r3, r3, #2
 8004eaa:	18e0      	adds	r0, r4, r3
 8004eac:	4b16      	ldr	r3, [pc, #88]	; (8004f08 <thd1_execute+0xc8>)
 8004eae:	0031      	movs	r1, r6
 8004eb0:	9300      	str	r3, [sp, #0]
 8004eb2:	3a02      	subs	r2, #2
 8004eb4:	003b      	movs	r3, r7
 8004eb6:	f7fc fcc3 	bl	8001840 <chThdCreateStatic>
 8004eba:	4643      	mov	r3, r8
 8004ebc:	699b      	ldr	r3, [r3, #24]
 8004ebe:	60e8      	str	r0, [r5, #12]
 8004ec0:	689a      	ldr	r2, [r3, #8]
 8004ec2:	23a4      	movs	r3, #164	; 0xa4
 8004ec4:	00db      	lsls	r3, r3, #3
 8004ec6:	18e0      	adds	r0, r4, r3
 8004ec8:	4b10      	ldr	r3, [pc, #64]	; (8004f0c <thd1_execute+0xcc>)
 8004eca:	3a01      	subs	r2, #1
 8004ecc:	0031      	movs	r1, r6
 8004ece:	9300      	str	r3, [sp, #0]
 8004ed0:	003b      	movs	r3, r7
 8004ed2:	f7fc fcb5 	bl	8001840 <chThdCreateStatic>
 8004ed6:	6128      	str	r0, [r5, #16]
 8004ed8:	f7fe fbc2 	bl	8003660 <test_wait_threads>
 8004edc:	490c      	ldr	r1, [pc, #48]	; (8004f10 <thd1_execute+0xd0>)
 8004ede:	2001      	movs	r0, #1
 8004ee0:	f7fb fc76 	bl	80007d0 <_test_assert_sequence>
 8004ee4:	b002      	add	sp, #8
 8004ee6:	bc04      	pop	{r2}
 8004ee8:	4690      	mov	r8, r2
 8004eea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004eec:	20000738 	.word	0x20000738
 8004ef0:	080008a1 	.word	0x080008a1
 8004ef4:	20000940 	.word	0x20000940
 8004ef8:	08005b04 	.word	0x08005b04
 8004efc:	20000fd4 	.word	0x20000fd4
 8004f00:	080058b8 	.word	0x080058b8
 8004f04:	080058b4 	.word	0x080058b4
 8004f08:	080058b0 	.word	0x080058b0
 8004f0c:	080058c0 	.word	0x080058c0
 8004f10:	08005b00 	.word	0x08005b00
	...

08004f20 <main>:
 8004f20:	4bac      	ldr	r3, [pc, #688]	; (80051d4 <main+0x2b4>)
 8004f22:	2101      	movs	r1, #1
 8004f24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004f26:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004f28:	46de      	mov	lr, fp
 8004f2a:	2200      	movs	r2, #0
 8004f2c:	4657      	mov	r7, sl
 8004f2e:	464e      	mov	r6, r9
 8004f30:	4645      	mov	r5, r8
 8004f32:	4249      	negs	r1, r1
 8004f34:	b5e0      	push	{r5, r6, r7, lr}
 8004f36:	6299      	str	r1, [r3, #40]	; 0x28
 8004f38:	629a      	str	r2, [r3, #40]	; 0x28
 8004f3a:	6918      	ldr	r0, [r3, #16]
 8004f3c:	6119      	str	r1, [r3, #16]
 8004f3e:	611a      	str	r2, [r3, #16]
 8004f40:	68d8      	ldr	r0, [r3, #12]
 8004f42:	49a5      	ldr	r1, [pc, #660]	; (80051d8 <main+0x2b8>)
 8004f44:	b085      	sub	sp, #20
 8004f46:	4301      	orrs	r1, r0
 8004f48:	60d9      	str	r1, [r3, #12]
 8004f4a:	2180      	movs	r1, #128	; 0x80
 8004f4c:	60da      	str	r2, [r3, #12]
 8004f4e:	69d8      	ldr	r0, [r3, #28]
 8004f50:	0549      	lsls	r1, r1, #21
 8004f52:	4301      	orrs	r1, r0
 8004f54:	61d9      	str	r1, [r3, #28]
 8004f56:	2180      	movs	r1, #128	; 0x80
 8004f58:	48a0      	ldr	r0, [pc, #640]	; (80051dc <main+0x2bc>)
 8004f5a:	0049      	lsls	r1, r1, #1
 8004f5c:	6804      	ldr	r4, [r0, #0]
 8004f5e:	4321      	orrs	r1, r4
 8004f60:	6001      	str	r1, [r0, #0]
 8004f62:	20c0      	movs	r0, #192	; 0xc0
 8004f64:	6a19      	ldr	r1, [r3, #32]
 8004f66:	0080      	lsls	r0, r0, #2
 8004f68:	4001      	ands	r1, r0
 8004f6a:	3801      	subs	r0, #1
 8004f6c:	38ff      	subs	r0, #255	; 0xff
 8004f6e:	4281      	cmp	r1, r0
 8004f70:	d003      	beq.n	8004f7a <main+0x5a>
 8004f72:	2180      	movs	r1, #128	; 0x80
 8004f74:	0249      	lsls	r1, r1, #9
 8004f76:	6219      	str	r1, [r3, #32]
 8004f78:	621a      	str	r2, [r3, #32]
 8004f7a:	2280      	movs	r2, #128	; 0x80
 8004f7c:	4b95      	ldr	r3, [pc, #596]	; (80051d4 <main+0x2b4>)
 8004f7e:	0212      	lsls	r2, r2, #8
 8004f80:	6a19      	ldr	r1, [r3, #32]
 8004f82:	4211      	tst	r1, r2
 8004f84:	d107      	bne.n	8004f96 <main+0x76>
 8004f86:	2180      	movs	r1, #128	; 0x80
 8004f88:	6a18      	ldr	r0, [r3, #32]
 8004f8a:	0089      	lsls	r1, r1, #2
 8004f8c:	4301      	orrs	r1, r0
 8004f8e:	6219      	str	r1, [r3, #32]
 8004f90:	6a19      	ldr	r1, [r3, #32]
 8004f92:	430a      	orrs	r2, r1
 8004f94:	621a      	str	r2, [r3, #32]
 8004f96:	23bc      	movs	r3, #188	; 0xbc
 8004f98:	4c8e      	ldr	r4, [pc, #568]	; (80051d4 <main+0x2b4>)
 8004f9a:	03db      	lsls	r3, r3, #15
 8004f9c:	6962      	ldr	r2, [r4, #20]
 8004f9e:	21fc      	movs	r1, #252	; 0xfc
 8004fa0:	4313      	orrs	r3, r2
 8004fa2:	2290      	movs	r2, #144	; 0x90
 8004fa4:	6163      	str	r3, [r4, #20]
 8004fa6:	2300      	movs	r3, #0
 8004fa8:	20a0      	movs	r0, #160	; 0xa0
 8004faa:	05d2      	lsls	r2, r2, #23
 8004fac:	0609      	lsls	r1, r1, #24
 8004fae:	6053      	str	r3, [r2, #4]
 8004fb0:	6091      	str	r1, [r2, #8]
 8004fb2:	498b      	ldr	r1, [pc, #556]	; (80051e0 <main+0x2c0>)
 8004fb4:	0580      	lsls	r0, r0, #22
 8004fb6:	60d1      	str	r1, [r2, #12]
 8004fb8:	498a      	ldr	r1, [pc, #552]	; (80051e4 <main+0x2c4>)
 8004fba:	4d8b      	ldr	r5, [pc, #556]	; (80051e8 <main+0x2c8>)
 8004fbc:	6151      	str	r1, [r2, #20]
 8004fbe:	6213      	str	r3, [r2, #32]
 8004fc0:	6253      	str	r3, [r2, #36]	; 0x24
 8004fc2:	6010      	str	r0, [r2, #0]
 8004fc4:	20fc      	movs	r0, #252	; 0xfc
 8004fc6:	4a89      	ldr	r2, [pc, #548]	; (80051ec <main+0x2cc>)
 8004fc8:	0080      	lsls	r0, r0, #2
 8004fca:	6053      	str	r3, [r2, #4]
 8004fcc:	6090      	str	r0, [r2, #8]
 8004fce:	4888      	ldr	r0, [pc, #544]	; (80051f0 <main+0x2d0>)
 8004fd0:	2701      	movs	r7, #1
 8004fd2:	60d0      	str	r0, [r2, #12]
 8004fd4:	6151      	str	r1, [r2, #20]
 8004fd6:	6213      	str	r3, [r2, #32]
 8004fd8:	6253      	str	r3, [r2, #36]	; 0x24
 8004fda:	6013      	str	r3, [r2, #0]
 8004fdc:	4a85      	ldr	r2, [pc, #532]	; (80051f4 <main+0x2d4>)
 8004fde:	427f      	negs	r7, r7
 8004fe0:	6053      	str	r3, [r2, #4]
 8004fe2:	6095      	str	r5, [r2, #8]
 8004fe4:	4d84      	ldr	r5, [pc, #528]	; (80051f8 <main+0x2d8>)
 8004fe6:	4e85      	ldr	r6, [pc, #532]	; (80051fc <main+0x2dc>)
 8004fe8:	60d5      	str	r5, [r2, #12]
 8004fea:	4d85      	ldr	r5, [pc, #532]	; (8005200 <main+0x2e0>)
 8004fec:	6155      	str	r5, [r2, #20]
 8004fee:	25a0      	movs	r5, #160	; 0xa0
 8004ff0:	02ed      	lsls	r5, r5, #11
 8004ff2:	6213      	str	r3, [r2, #32]
 8004ff4:	6253      	str	r3, [r2, #36]	; 0x24
 8004ff6:	6015      	str	r5, [r2, #0]
 8004ff8:	4a82      	ldr	r2, [pc, #520]	; (8005204 <main+0x2e4>)
 8004ffa:	6053      	str	r3, [r2, #4]
 8004ffc:	6093      	str	r3, [r2, #8]
 8004ffe:	60d0      	str	r0, [r2, #12]
 8005000:	6151      	str	r1, [r2, #20]
 8005002:	4881      	ldr	r0, [pc, #516]	; (8005208 <main+0x2e8>)
 8005004:	6213      	str	r3, [r2, #32]
 8005006:	6253      	str	r3, [r2, #36]	; 0x24
 8005008:	6013      	str	r3, [r2, #0]
 800500a:	4a80      	ldr	r2, [pc, #512]	; (800520c <main+0x2ec>)
 800500c:	6053      	str	r3, [r2, #4]
 800500e:	6093      	str	r3, [r2, #8]
 8005010:	60d0      	str	r0, [r2, #12]
 8005012:	6151      	str	r1, [r2, #20]
 8005014:	6213      	str	r3, [r2, #32]
 8005016:	497e      	ldr	r1, [pc, #504]	; (8005210 <main+0x2f0>)
 8005018:	6253      	str	r3, [r2, #36]	; 0x24
 800501a:	6013      	str	r3, [r2, #0]
 800501c:	4a7d      	ldr	r2, [pc, #500]	; (8005214 <main+0x2f4>)
 800501e:	487d      	ldr	r0, [pc, #500]	; (8005214 <main+0x2f4>)
 8005020:	c202      	stmia	r2!, {r1}
 8005022:	497c      	ldr	r1, [pc, #496]	; (8005214 <main+0x2f4>)
 8005024:	0005      	movs	r5, r0
 8005026:	604a      	str	r2, [r1, #4]
 8005028:	2101      	movs	r1, #1
 800502a:	4a7a      	ldr	r2, [pc, #488]	; (8005214 <main+0x2f4>)
 800502c:	6143      	str	r3, [r0, #20]
 800502e:	7211      	strb	r1, [r2, #8]
 8005030:	320c      	adds	r2, #12
 8005032:	60c2      	str	r2, [r0, #12]
 8005034:	6102      	str	r2, [r0, #16]
 8005036:	0002      	movs	r2, r0
 8005038:	3254      	adds	r2, #84	; 0x54
 800503a:	6182      	str	r2, [r0, #24]
 800503c:	6242      	str	r2, [r0, #36]	; 0x24
 800503e:	6202      	str	r2, [r0, #32]
 8005040:	3210      	adds	r2, #16
 8005042:	61c2      	str	r2, [r0, #28]
 8005044:	63ea      	str	r2, [r5, #60]	; 0x3c
 8005046:	64aa      	str	r2, [r5, #72]	; 0x48
 8005048:	646a      	str	r2, [r5, #68]	; 0x44
 800504a:	3210      	adds	r2, #16
 800504c:	642a      	str	r2, [r5, #64]	; 0x40
 800504e:	4a72      	ldr	r2, [pc, #456]	; (8005218 <main+0x2f8>)
 8005050:	6283      	str	r3, [r0, #40]	; 0x28
 8005052:	64ea      	str	r2, [r5, #76]	; 0x4c
 8005054:	002a      	movs	r2, r5
 8005056:	62c0      	str	r0, [r0, #44]	; 0x2c
 8005058:	3030      	adds	r0, #48	; 0x30
 800505a:	6328      	str	r0, [r5, #48]	; 0x30
 800505c:	6368      	str	r0, [r5, #52]	; 0x34
 800505e:	2010      	movs	r0, #16
 8005060:	6515      	str	r5, [r2, #80]	; 0x50
 8005062:	4a6e      	ldr	r2, [pc, #440]	; (800521c <main+0x2fc>)
 8005064:	63a8      	str	r0, [r5, #56]	; 0x38
 8005066:	676a      	str	r2, [r5, #116]	; 0x74
 8005068:	4a6d      	ldr	r2, [pc, #436]	; (8005220 <main+0x300>)
 800506a:	486e      	ldr	r0, [pc, #440]	; (8005224 <main+0x304>)
 800506c:	67aa      	str	r2, [r5, #120]	; 0x78
 800506e:	69e2      	ldr	r2, [r4, #28]
 8005070:	4d6d      	ldr	r5, [pc, #436]	; (8005228 <main+0x308>)
 8005072:	430a      	orrs	r2, r1
 8005074:	61e2      	str	r2, [r4, #28]
 8005076:	6882      	ldr	r2, [r0, #8]
 8005078:	430a      	orrs	r2, r1
 800507a:	6082      	str	r2, [r0, #8]
 800507c:	2280      	movs	r2, #128	; 0x80
 800507e:	486b      	ldr	r0, [pc, #428]	; (800522c <main+0x30c>)
 8005080:	05d2      	lsls	r2, r2, #23
 8005082:	6290      	str	r0, [r2, #40]	; 0x28
 8005084:	62d7      	str	r7, [r2, #44]	; 0x2c
 8005086:	6193      	str	r3, [r2, #24]
 8005088:	6353      	str	r3, [r2, #52]	; 0x34
 800508a:	60d3      	str	r3, [r2, #12]
 800508c:	6053      	str	r3, [r2, #4]
 800508e:	6151      	str	r1, [r2, #20]
 8005090:	6011      	str	r1, [r2, #0]
 8005092:	22cf      	movs	r2, #207	; 0xcf
 8005094:	2080      	movs	r0, #128	; 0x80
 8005096:	0092      	lsls	r2, r2, #2
 8005098:	50a8      	str	r0, [r5, r2]
 800509a:	3abd      	subs	r2, #189	; 0xbd
 800509c:	3aff      	subs	r2, #255	; 0xff
 800509e:	4690      	mov	r8, r2
 80050a0:	2280      	movs	r2, #128	; 0x80
 80050a2:	4640      	mov	r0, r8
 80050a4:	0212      	lsls	r2, r2, #8
 80050a6:	502a      	str	r2, [r5, r0]
 80050a8:	4861      	ldr	r0, [pc, #388]	; (8005230 <main+0x310>)
 80050aa:	602a      	str	r2, [r5, #0]
 80050ac:	6a02      	ldr	r2, [r0, #32]
 80050ae:	4032      	ands	r2, r6
 80050b0:	6202      	str	r2, [r0, #32]
 80050b2:	4860      	ldr	r0, [pc, #384]	; (8005234 <main+0x314>)
 80050b4:	4e60      	ldr	r6, [pc, #384]	; (8005238 <main+0x318>)
 80050b6:	0002      	movs	r2, r0
 80050b8:	321c      	adds	r2, #28
 80050ba:	61c2      	str	r2, [r0, #28]
 80050bc:	6202      	str	r2, [r0, #32]
 80050be:	4a5f      	ldr	r2, [pc, #380]	; (800523c <main+0x31c>)
 80050c0:	6247      	str	r7, [r0, #36]	; 0x24
 80050c2:	3207      	adds	r2, #7
 80050c4:	3708      	adds	r7, #8
 80050c6:	43ba      	bics	r2, r7
 80050c8:	6032      	str	r2, [r6, #0]
 80050ca:	4a5d      	ldr	r2, [pc, #372]	; (8005240 <main+0x320>)
 80050cc:	6000      	str	r0, [r0, #0]
 80050ce:	43ba      	bics	r2, r7
 80050d0:	4f5c      	ldr	r7, [pc, #368]	; (8005244 <main+0x324>)
 80050d2:	6040      	str	r0, [r0, #4]
 80050d4:	6083      	str	r3, [r0, #8]
 80050d6:	6283      	str	r3, [r0, #40]	; 0x28
 80050d8:	603a      	str	r2, [r7, #0]
 80050da:	4a5b      	ldr	r2, [pc, #364]	; (8005248 <main+0x328>)
 80050dc:	4f5b      	ldr	r7, [pc, #364]	; (800524c <main+0x32c>)
 80050de:	6093      	str	r3, [r2, #8]
 80050e0:	6017      	str	r7, [r2, #0]
 80050e2:	0017      	movs	r7, r2
 80050e4:	3710      	adds	r7, #16
 80050e6:	6117      	str	r7, [r2, #16]
 80050e8:	6157      	str	r7, [r2, #20]
 80050ea:	60d3      	str	r3, [r2, #12]
 80050ec:	6193      	str	r3, [r2, #24]
 80050ee:	2240      	movs	r2, #64	; 0x40
 80050f0:	0007      	movs	r7, r0
 80050f2:	6382      	str	r2, [r0, #56]	; 0x38
 80050f4:	66c2      	str	r2, [r0, #108]	; 0x6c
 80050f6:	0002      	movs	r2, r0
 80050f8:	3754      	adds	r7, #84	; 0x54
 80050fa:	3230      	adds	r2, #48	; 0x30
 80050fc:	6102      	str	r2, [r0, #16]
 80050fe:	6142      	str	r2, [r0, #20]
 8005100:	6547      	str	r7, [r0, #84]	; 0x54
 8005102:	6182      	str	r2, [r0, #24]
 8005104:	0007      	movs	r7, r0
 8005106:	224c      	movs	r2, #76	; 0x4c
 8005108:	3758      	adds	r7, #88	; 0x58
 800510a:	5281      	strh	r1, [r0, r2]
 800510c:	3202      	adds	r2, #2
 800510e:	6683      	str	r3, [r0, #104]	; 0x68
 8005110:	6643      	str	r3, [r0, #100]	; 0x64
 8005112:	6400      	str	r0, [r0, #64]	; 0x40
 8005114:	6440      	str	r0, [r0, #68]	; 0x44
 8005116:	6587      	str	r7, [r0, #88]	; 0x58
 8005118:	65c7      	str	r7, [r0, #92]	; 0x5c
 800511a:	6483      	str	r3, [r0, #72]	; 0x48
 800511c:	5481      	strb	r1, [r0, r2]
 800511e:	b662      	cpsie	i
 8005120:	494b      	ldr	r1, [pc, #300]	; (8005250 <main+0x330>)
 8005122:	6982      	ldr	r2, [r0, #24]
 8005124:	3078      	adds	r0, #120	; 0x78
 8005126:	6191      	str	r1, [r2, #24]
 8005128:	9300      	str	r3, [sp, #0]
 800512a:	2201      	movs	r2, #1
 800512c:	4b49      	ldr	r3, [pc, #292]	; (8005254 <main+0x334>)
 800512e:	21d8      	movs	r1, #216	; 0xd8
 8005130:	f7fc fb86 	bl	8001840 <chThdCreateStatic>
 8005134:	4b48      	ldr	r3, [pc, #288]	; (8005258 <main+0x338>)
 8005136:	6183      	str	r3, [r0, #24]
 8005138:	b672      	cpsid	i
 800513a:	4b36      	ldr	r3, [pc, #216]	; (8005214 <main+0x2f4>)
 800513c:	7a1b      	ldrb	r3, [r3, #8]
 800513e:	2b01      	cmp	r3, #1
 8005140:	d10d      	bne.n	800515e <main+0x23e>
 8005142:	2380      	movs	r3, #128	; 0x80
 8005144:	69a2      	ldr	r2, [r4, #24]
 8005146:	01db      	lsls	r3, r3, #7
 8005148:	4313      	orrs	r3, r2
 800514a:	61a3      	str	r3, [r4, #24]
 800514c:	23db      	movs	r3, #219	; 0xdb
 800514e:	22c0      	movs	r2, #192	; 0xc0
 8005150:	009b      	lsls	r3, r3, #2
 8005152:	50ea      	str	r2, [r5, r3]
 8005154:	2380      	movs	r3, #128	; 0x80
 8005156:	4642      	mov	r2, r8
 8005158:	051b      	lsls	r3, r3, #20
 800515a:	50ab      	str	r3, [r5, r2]
 800515c:	602b      	str	r3, [r5, #0]
 800515e:	2196      	movs	r1, #150	; 0x96
 8005160:	4b2c      	ldr	r3, [pc, #176]	; (8005214 <main+0x2f4>)
 8005162:	0209      	lsls	r1, r1, #8
 8005164:	6f5c      	ldr	r4, [r3, #116]	; 0x74
 8005166:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8005168:	0018      	movs	r0, r3
 800516a:	9302      	str	r3, [sp, #8]
 800516c:	f7fb f828 	bl	80001c0 <__udivsi3>
 8005170:	4b3a      	ldr	r3, [pc, #232]	; (800525c <main+0x33c>)
 8005172:	b280      	uxth	r0, r0
 8005174:	81a0      	strh	r0, [r4, #12]
 8005176:	6063      	str	r3, [r4, #4]
 8005178:	2301      	movs	r3, #1
 800517a:	60a3      	str	r3, [r4, #8]
 800517c:	232e      	movs	r3, #46	; 0x2e
 800517e:	33ff      	adds	r3, #255	; 0xff
 8005180:	6023      	str	r3, [r4, #0]
 8005182:	3b2f      	subs	r3, #47	; 0x2f
 8005184:	3bff      	subs	r3, #255	; 0xff
 8005186:	4a23      	ldr	r2, [pc, #140]	; (8005214 <main+0x2f4>)
 8005188:	6223      	str	r3, [r4, #32]
 800518a:	3303      	adds	r3, #3
 800518c:	7213      	strb	r3, [r2, #8]
 800518e:	b662      	cpsie	i
 8005190:	2080      	movs	r0, #128	; 0x80
 8005192:	0080      	lsls	r0, r0, #2
 8005194:	f7fb f8bc 	bl	8000310 <_pal_lld_setgroupmode.constprop.5>
 8005198:	2080      	movs	r0, #128	; 0x80
 800519a:	00c0      	lsls	r0, r0, #3
 800519c:	f7fb f8b8 	bl	8000310 <_pal_lld_setgroupmode.constprop.5>
 80051a0:	2400      	movs	r4, #0
 80051a2:	21a4      	movs	r1, #164	; 0xa4
 80051a4:	9400      	str	r4, [sp, #0]
 80051a6:	4b2e      	ldr	r3, [pc, #184]	; (8005260 <main+0x340>)
 80051a8:	2240      	movs	r2, #64	; 0x40
 80051aa:	0049      	lsls	r1, r1, #1
 80051ac:	482d      	ldr	r0, [pc, #180]	; (8005264 <main+0x344>)
 80051ae:	f7fc fb47 	bl	8001840 <chThdCreateStatic>
 80051b2:	21a4      	movs	r1, #164	; 0xa4
 80051b4:	9400      	str	r4, [sp, #0]
 80051b6:	4b2c      	ldr	r3, [pc, #176]	; (8005268 <main+0x348>)
 80051b8:	2240      	movs	r2, #64	; 0x40
 80051ba:	0049      	lsls	r1, r1, #1
 80051bc:	482b      	ldr	r0, [pc, #172]	; (800526c <main+0x34c>)
 80051be:	f7fc fb3f 	bl	8001840 <chThdCreateStatic>
 80051c2:	4b2b      	ldr	r3, [pc, #172]	; (8005270 <main+0x350>)
 80051c4:	4c2b      	ldr	r4, [pc, #172]	; (8005274 <main+0x354>)
 80051c6:	4698      	mov	r8, r3
 80051c8:	4b2b      	ldr	r3, [pc, #172]	; (8005278 <main+0x358>)
 80051ca:	4f2c      	ldr	r7, [pc, #176]	; (800527c <main+0x35c>)
 80051cc:	469a      	mov	sl, r3
 80051ce:	4b2c      	ldr	r3, [pc, #176]	; (8005280 <main+0x360>)
 80051d0:	469b      	mov	fp, r3
 80051d2:	e05a      	b.n	800528a <main+0x36a>
 80051d4:	40021000 	.word	0x40021000
 80051d8:	ffbfffff 	.word	0xffbfffff
 80051dc:	40007000 	.word	0x40007000
 80051e0:	65555554 	.word	0x65555554
 80051e4:	0000ffff 	.word	0x0000ffff
 80051e8:	f00f0000 	.word	0xf00f0000
 80051ec:	48000400 	.word	0x48000400
 80051f0:	55555555 	.word	0x55555555
 80051f4:	48000800 	.word	0x48000800
 80051f8:	05505555 	.word	0x05505555
 80051fc:	ff00ffff 	.word	0xff00ffff
 8005200:	0000fcff 	.word	0x0000fcff
 8005204:	48000c00 	.word	0x48000c00
 8005208:	55555550 	.word	0x55555550
 800520c:	48001400 	.word	0x48001400
 8005210:	08006400 	.word	0x08006400
 8005214:	200006b8 	.word	0x200006b8
 8005218:	080003f1 	.word	0x080003f1
 800521c:	40013800 	.word	0x40013800
 8005220:	02dc6c00 	.word	0x02dc6c00
 8005224:	40015800 	.word	0x40015800
 8005228:	e000e100 	.word	0xe000e100
 800522c:	000012bf 	.word	0x000012bf
 8005230:	e000ed00 	.word	0xe000ed00
 8005234:	20000738 	.word	0x20000738
 8005238:	2000092c 	.word	0x2000092c
 800523c:	200012c8 	.word	0x200012c8
 8005240:	20002000 	.word	0x20002000
 8005244:	200008b0 	.word	0x200008b0
 8005248:	20000890 	.word	0x20000890
 800524c:	080003c1 	.word	0x080003c1
 8005250:	08005880 	.word	0x08005880
 8005254:	080003b1 	.word	0x080003b1
 8005258:	080059d0 	.word	0x080059d0
 800525c:	00004040 	.word	0x00004040
 8005260:	08002471 	.word	0x08002471
 8005264:	20001038 	.word	0x20001038
 8005268:	080024b1 	.word	0x080024b1
 800526c:	20001180 	.word	0x20001180
 8005270:	20000ff8 	.word	0x20000ff8
 8005274:	20000888 	.word	0x20000888
 8005278:	2000090c 	.word	0x2000090c
 800527c:	20000fd4 	.word	0x20000fd4
 8005280:	200008b4 	.word	0x200008b4
 8005284:	489e      	ldr	r0, [pc, #632]	; (8005500 <main+0x5e0>)
 8005286:	f7fd f8eb 	bl	8002460 <chThdSleep>
 800528a:	2390      	movs	r3, #144	; 0x90
 800528c:	05db      	lsls	r3, r3, #23
 800528e:	691b      	ldr	r3, [r3, #16]
 8005290:	07db      	lsls	r3, r3, #31
 8005292:	d5f7      	bpl.n	8005284 <main+0x364>
 8005294:	4b9b      	ldr	r3, [pc, #620]	; (8005504 <main+0x5e4>)
 8005296:	489c      	ldr	r0, [pc, #624]	; (8005508 <main+0x5e8>)
 8005298:	6023      	str	r3, [r4, #0]
 800529a:	f7fb fb11 	bl	80008c0 <test_println>
 800529e:	489b      	ldr	r0, [pc, #620]	; (800550c <main+0x5ec>)
 80052a0:	f7fb fb0e 	bl	80008c0 <test_println>
 80052a4:	489a      	ldr	r0, [pc, #616]	; (8005510 <main+0x5f0>)
 80052a6:	f7fb fb0b 	bl	80008c0 <test_println>
 80052aa:	212a      	movs	r1, #42	; 0x2a
 80052ac:	4d99      	ldr	r5, [pc, #612]	; (8005514 <main+0x5f4>)
 80052ae:	6820      	ldr	r0, [r4, #0]
 80052b0:	3501      	adds	r5, #1
 80052b2:	6803      	ldr	r3, [r0, #0]
 80052b4:	689b      	ldr	r3, [r3, #8]
 80052b6:	4798      	blx	r3
 80052b8:	7829      	ldrb	r1, [r5, #0]
 80052ba:	2900      	cmp	r1, #0
 80052bc:	d1f7      	bne.n	80052ae <main+0x38e>
 80052be:	4896      	ldr	r0, [pc, #600]	; (8005518 <main+0x5f8>)
 80052c0:	f7fb fafe 	bl	80008c0 <test_println>
 80052c4:	212a      	movs	r1, #42	; 0x2a
 80052c6:	4d95      	ldr	r5, [pc, #596]	; (800551c <main+0x5fc>)
 80052c8:	6820      	ldr	r0, [r4, #0]
 80052ca:	3501      	adds	r5, #1
 80052cc:	6803      	ldr	r3, [r0, #0]
 80052ce:	689b      	ldr	r3, [r3, #8]
 80052d0:	4798      	blx	r3
 80052d2:	7829      	ldrb	r1, [r5, #0]
 80052d4:	2900      	cmp	r1, #0
 80052d6:	d1f7      	bne.n	80052c8 <main+0x3a8>
 80052d8:	4891      	ldr	r0, [pc, #580]	; (8005520 <main+0x600>)
 80052da:	f7fb faf1 	bl	80008c0 <test_println>
 80052de:	212a      	movs	r1, #42	; 0x2a
 80052e0:	4d90      	ldr	r5, [pc, #576]	; (8005524 <main+0x604>)
 80052e2:	6820      	ldr	r0, [r4, #0]
 80052e4:	3501      	adds	r5, #1
 80052e6:	6803      	ldr	r3, [r0, #0]
 80052e8:	689b      	ldr	r3, [r3, #8]
 80052ea:	4798      	blx	r3
 80052ec:	7829      	ldrb	r1, [r5, #0]
 80052ee:	2900      	cmp	r1, #0
 80052f0:	d1f7      	bne.n	80052e2 <main+0x3c2>
 80052f2:	488d      	ldr	r0, [pc, #564]	; (8005528 <main+0x608>)
 80052f4:	f7fb fae4 	bl	80008c0 <test_println>
 80052f8:	212a      	movs	r1, #42	; 0x2a
 80052fa:	4d8c      	ldr	r5, [pc, #560]	; (800552c <main+0x60c>)
 80052fc:	6820      	ldr	r0, [r4, #0]
 80052fe:	3501      	adds	r5, #1
 8005300:	6803      	ldr	r3, [r0, #0]
 8005302:	689b      	ldr	r3, [r3, #8]
 8005304:	4798      	blx	r3
 8005306:	7829      	ldrb	r1, [r5, #0]
 8005308:	2900      	cmp	r1, #0
 800530a:	d1f7      	bne.n	80052fc <main+0x3dc>
 800530c:	4888      	ldr	r0, [pc, #544]	; (8005530 <main+0x610>)
 800530e:	f7fb fad7 	bl	80008c0 <test_println>
 8005312:	212a      	movs	r1, #42	; 0x2a
 8005314:	4d87      	ldr	r5, [pc, #540]	; (8005534 <main+0x614>)
 8005316:	6820      	ldr	r0, [r4, #0]
 8005318:	3501      	adds	r5, #1
 800531a:	6803      	ldr	r3, [r0, #0]
 800531c:	689b      	ldr	r3, [r3, #8]
 800531e:	4798      	blx	r3
 8005320:	7829      	ldrb	r1, [r5, #0]
 8005322:	2900      	cmp	r1, #0
 8005324:	d1f7      	bne.n	8005316 <main+0x3f6>
 8005326:	4884      	ldr	r0, [pc, #528]	; (8005538 <main+0x618>)
 8005328:	f7fb faca 	bl	80008c0 <test_println>
 800532c:	212a      	movs	r1, #42	; 0x2a
 800532e:	4d83      	ldr	r5, [pc, #524]	; (800553c <main+0x61c>)
 8005330:	6820      	ldr	r0, [r4, #0]
 8005332:	3501      	adds	r5, #1
 8005334:	6803      	ldr	r3, [r0, #0]
 8005336:	689b      	ldr	r3, [r3, #8]
 8005338:	4798      	blx	r3
 800533a:	7829      	ldrb	r1, [r5, #0]
 800533c:	2900      	cmp	r1, #0
 800533e:	d1f7      	bne.n	8005330 <main+0x410>
 8005340:	487f      	ldr	r0, [pc, #508]	; (8005540 <main+0x620>)
 8005342:	f7fb fabd 	bl	80008c0 <test_println>
 8005346:	212a      	movs	r1, #42	; 0x2a
 8005348:	4d7e      	ldr	r5, [pc, #504]	; (8005544 <main+0x624>)
 800534a:	6820      	ldr	r0, [r4, #0]
 800534c:	3501      	adds	r5, #1
 800534e:	6803      	ldr	r3, [r0, #0]
 8005350:	689b      	ldr	r3, [r3, #8]
 8005352:	4798      	blx	r3
 8005354:	7829      	ldrb	r1, [r5, #0]
 8005356:	2900      	cmp	r1, #0
 8005358:	d1f7      	bne.n	800534a <main+0x42a>
 800535a:	252a      	movs	r5, #42	; 0x2a
 800535c:	487a      	ldr	r0, [pc, #488]	; (8005548 <main+0x628>)
 800535e:	f7fb faaf 	bl	80008c0 <test_println>
 8005362:	0029      	movs	r1, r5
 8005364:	4e79      	ldr	r6, [pc, #484]	; (800554c <main+0x62c>)
 8005366:	6820      	ldr	r0, [r4, #0]
 8005368:	3601      	adds	r6, #1
 800536a:	6803      	ldr	r3, [r0, #0]
 800536c:	689b      	ldr	r3, [r3, #8]
 800536e:	4798      	blx	r3
 8005370:	7831      	ldrb	r1, [r6, #0]
 8005372:	2900      	cmp	r1, #0
 8005374:	d1f7      	bne.n	8005366 <main+0x446>
 8005376:	000d      	movs	r5, r1
 8005378:	4875      	ldr	r0, [pc, #468]	; (8005550 <main+0x630>)
 800537a:	f7fb faa1 	bl	80008c0 <test_println>
 800537e:	4862      	ldr	r0, [pc, #392]	; (8005508 <main+0x5e8>)
 8005380:	f7fb fa9e 	bl	80008c0 <test_println>
 8005384:	4b73      	ldr	r3, [pc, #460]	; (8005554 <main+0x634>)
 8005386:	4e74      	ldr	r6, [pc, #464]	; (8005558 <main+0x638>)
 8005388:	701d      	strb	r5, [r3, #0]
 800538a:	2301      	movs	r3, #1
 800538c:	9302      	str	r3, [sp, #8]
 800538e:	4b73      	ldr	r3, [pc, #460]	; (800555c <main+0x63c>)
 8005390:	9303      	str	r3, [sp, #12]
 8005392:	4b73      	ldr	r3, [pc, #460]	; (8005560 <main+0x640>)
 8005394:	2200      	movs	r2, #0
 8005396:	4691      	mov	r9, r2
 8005398:	2b00      	cmp	r3, #0
 800539a:	d100      	bne.n	800539e <main+0x47e>
 800539c:	e084      	b.n	80054a8 <main+0x588>
 800539e:	f7fb f9c7 	bl	8000730 <print_line>
 80053a2:	212d      	movs	r1, #45	; 0x2d
 80053a4:	4d6f      	ldr	r5, [pc, #444]	; (8005564 <main+0x644>)
 80053a6:	6820      	ldr	r0, [r4, #0]
 80053a8:	3501      	adds	r5, #1
 80053aa:	6803      	ldr	r3, [r0, #0]
 80053ac:	689b      	ldr	r3, [r3, #8]
 80053ae:	4798      	blx	r3
 80053b0:	7829      	ldrb	r1, [r5, #0]
 80053b2:	2900      	cmp	r1, #0
 80053b4:	d1f7      	bne.n	80053a6 <main+0x486>
 80053b6:	9802      	ldr	r0, [sp, #8]
 80053b8:	f7fb f9aa 	bl	8000710 <test_printn>
 80053bc:	6820      	ldr	r0, [r4, #0]
 80053be:	212e      	movs	r1, #46	; 0x2e
 80053c0:	6803      	ldr	r3, [r0, #0]
 80053c2:	689b      	ldr	r3, [r3, #8]
 80053c4:	4798      	blx	r3
 80053c6:	2301      	movs	r3, #1
 80053c8:	469c      	mov	ip, r3
 80053ca:	44e1      	add	r9, ip
 80053cc:	4648      	mov	r0, r9
 80053ce:	f7fb f99f 	bl	8000710 <test_printn>
 80053d2:	2120      	movs	r1, #32
 80053d4:	4d64      	ldr	r5, [pc, #400]	; (8005568 <main+0x648>)
 80053d6:	6820      	ldr	r0, [r4, #0]
 80053d8:	3501      	adds	r5, #1
 80053da:	6803      	ldr	r3, [r0, #0]
 80053dc:	689b      	ldr	r3, [r3, #8]
 80053de:	4798      	blx	r3
 80053e0:	7829      	ldrb	r1, [r5, #0]
 80053e2:	2900      	cmp	r1, #0
 80053e4:	d1f7      	bne.n	80053d6 <main+0x4b6>
 80053e6:	6833      	ldr	r3, [r6, #0]
 80053e8:	681d      	ldr	r5, [r3, #0]
 80053ea:	7829      	ldrb	r1, [r5, #0]
 80053ec:	2900      	cmp	r1, #0
 80053ee:	d007      	beq.n	8005400 <main+0x4e0>
 80053f0:	6820      	ldr	r0, [r4, #0]
 80053f2:	3501      	adds	r5, #1
 80053f4:	6803      	ldr	r3, [r0, #0]
 80053f6:	689b      	ldr	r3, [r3, #8]
 80053f8:	4798      	blx	r3
 80053fa:	7829      	ldrb	r1, [r5, #0]
 80053fc:	2900      	cmp	r1, #0
 80053fe:	d1f7      	bne.n	80053f0 <main+0x4d0>
 8005400:	485a      	ldr	r0, [pc, #360]	; (800556c <main+0x64c>)
 8005402:	f7fb fa5d 	bl	80008c0 <test_println>
 8005406:	20fa      	movs	r0, #250	; 0xfa
 8005408:	00c0      	lsls	r0, r0, #3
 800540a:	f7fd f829 	bl	8002460 <chThdSleep>
 800540e:	4643      	mov	r3, r8
 8005410:	4a57      	ldr	r2, [pc, #348]	; (8005570 <main+0x650>)
 8005412:	6835      	ldr	r5, [r6, #0]
 8005414:	601a      	str	r2, [r3, #0]
 8005416:	2300      	movs	r3, #0
 8005418:	4652      	mov	r2, sl
 800541a:	603b      	str	r3, [r7, #0]
 800541c:	607b      	str	r3, [r7, #4]
 800541e:	60bb      	str	r3, [r7, #8]
 8005420:	60fb      	str	r3, [r7, #12]
 8005422:	613b      	str	r3, [r7, #16]
 8005424:	7013      	strb	r3, [r2, #0]
 8005426:	686b      	ldr	r3, [r5, #4]
 8005428:	2b00      	cmp	r3, #0
 800542a:	d000      	beq.n	800542e <main+0x50e>
 800542c:	4798      	blx	r3
 800542e:	68eb      	ldr	r3, [r5, #12]
 8005430:	4798      	blx	r3
 8005432:	68ab      	ldr	r3, [r5, #8]
 8005434:	2b00      	cmp	r3, #0
 8005436:	d000      	beq.n	800543a <main+0x51a>
 8005438:	4798      	blx	r3
 800543a:	f7fe f911 	bl	8003660 <test_wait_threads>
 800543e:	4653      	mov	r3, sl
 8005440:	781b      	ldrb	r3, [r3, #0]
 8005442:	2b00      	cmp	r3, #0
 8005444:	d03c      	beq.n	80054c0 <main+0x5a0>
 8005446:	212d      	movs	r1, #45	; 0x2d
 8005448:	4d4a      	ldr	r5, [pc, #296]	; (8005574 <main+0x654>)
 800544a:	6820      	ldr	r0, [r4, #0]
 800544c:	3501      	adds	r5, #1
 800544e:	6803      	ldr	r3, [r0, #0]
 8005450:	689b      	ldr	r3, [r3, #8]
 8005452:	4798      	blx	r3
 8005454:	7829      	ldrb	r1, [r5, #0]
 8005456:	2900      	cmp	r1, #0
 8005458:	d1f7      	bne.n	800544a <main+0x52a>
 800545a:	465b      	mov	r3, fp
 800545c:	6818      	ldr	r0, [r3, #0]
 800545e:	f7fb f957 	bl	8000710 <test_printn>
 8005462:	2120      	movs	r1, #32
 8005464:	4d44      	ldr	r5, [pc, #272]	; (8005578 <main+0x658>)
 8005466:	6820      	ldr	r0, [r4, #0]
 8005468:	3501      	adds	r5, #1
 800546a:	6803      	ldr	r3, [r0, #0]
 800546c:	689b      	ldr	r3, [r3, #8]
 800546e:	4798      	blx	r3
 8005470:	7829      	ldrb	r1, [r5, #0]
 8005472:	2900      	cmp	r1, #0
 8005474:	d1f7      	bne.n	8005466 <main+0x546>
 8005476:	4643      	mov	r3, r8
 8005478:	4a3d      	ldr	r2, [pc, #244]	; (8005570 <main+0x650>)
 800547a:	681b      	ldr	r3, [r3, #0]
 800547c:	4293      	cmp	r3, r2
 800547e:	d90b      	bls.n	8005498 <main+0x578>
 8005480:	0013      	movs	r3, r2
 8005482:	6820      	ldr	r0, [r4, #0]
 8005484:	1c5d      	adds	r5, r3, #1
 8005486:	7819      	ldrb	r1, [r3, #0]
 8005488:	6803      	ldr	r3, [r0, #0]
 800548a:	689b      	ldr	r3, [r3, #8]
 800548c:	4798      	blx	r3
 800548e:	4642      	mov	r2, r8
 8005490:	6812      	ldr	r2, [r2, #0]
 8005492:	002b      	movs	r3, r5
 8005494:	4295      	cmp	r5, r2
 8005496:	d3f4      	bcc.n	8005482 <main+0x562>
 8005498:	4838      	ldr	r0, [pc, #224]	; (800557c <main+0x65c>)
 800549a:	f7fb fa11 	bl	80008c0 <test_println>
 800549e:	6873      	ldr	r3, [r6, #4]
 80054a0:	3604      	adds	r6, #4
 80054a2:	2b00      	cmp	r3, #0
 80054a4:	d000      	beq.n	80054a8 <main+0x588>
 80054a6:	e77a      	b.n	800539e <main+0x47e>
 80054a8:	9a02      	ldr	r2, [sp, #8]
 80054aa:	9e03      	ldr	r6, [sp, #12]
 80054ac:	3201      	adds	r2, #1
 80054ae:	9202      	str	r2, [sp, #8]
 80054b0:	2e00      	cmp	r6, #0
 80054b2:	d009      	beq.n	80054c8 <main+0x5a8>
 80054b4:	4932      	ldr	r1, [pc, #200]	; (8005580 <main+0x660>)
 80054b6:	0092      	lsls	r2, r2, #2
 80054b8:	588a      	ldr	r2, [r1, r2]
 80054ba:	6833      	ldr	r3, [r6, #0]
 80054bc:	9203      	str	r2, [sp, #12]
 80054be:	e769      	b.n	8005394 <main+0x474>
 80054c0:	4830      	ldr	r0, [pc, #192]	; (8005584 <main+0x664>)
 80054c2:	f7fb f9fd 	bl	80008c0 <test_println>
 80054c6:	e7ea      	b.n	800549e <main+0x57e>
 80054c8:	f7fb f932 	bl	8000730 <print_line>
 80054cc:	480e      	ldr	r0, [pc, #56]	; (8005508 <main+0x5e8>)
 80054ce:	f7fb f9f7 	bl	80008c0 <test_println>
 80054d2:	2146      	movs	r1, #70	; 0x46
 80054d4:	4d2c      	ldr	r5, [pc, #176]	; (8005588 <main+0x668>)
 80054d6:	6820      	ldr	r0, [r4, #0]
 80054d8:	3501      	adds	r5, #1
 80054da:	6803      	ldr	r3, [r0, #0]
 80054dc:	689b      	ldr	r3, [r3, #8]
 80054de:	4798      	blx	r3
 80054e0:	7829      	ldrb	r1, [r5, #0]
 80054e2:	2900      	cmp	r1, #0
 80054e4:	d1f7      	bne.n	80054d6 <main+0x5b6>
 80054e6:	4b1b      	ldr	r3, [pc, #108]	; (8005554 <main+0x634>)
 80054e8:	781b      	ldrb	r3, [r3, #0]
 80054ea:	2b00      	cmp	r3, #0
 80054ec:	d103      	bne.n	80054f6 <main+0x5d6>
 80054ee:	4827      	ldr	r0, [pc, #156]	; (800558c <main+0x66c>)
 80054f0:	f7fb f9e6 	bl	80008c0 <test_println>
 80054f4:	e6c6      	b.n	8005284 <main+0x364>
 80054f6:	4826      	ldr	r0, [pc, #152]	; (8005590 <main+0x670>)
 80054f8:	f7fb f9e2 	bl	80008c0 <test_println>
 80054fc:	e6c2      	b.n	8005284 <main+0x364>
 80054fe:	46c0      	nop			; (mov r8, r8)
 8005500:	00001388 	.word	0x00001388
 8005504:	200006b8 	.word	0x200006b8
 8005508:	08005850 	.word	0x08005850
 800550c:	080059d8 	.word	0x080059d8
 8005510:	080059f4 	.word	0x080059f4
 8005514:	080058f0 	.word	0x080058f0
 8005518:	080059f8 	.word	0x080059f8
 800551c:	08005904 	.word	0x08005904
 8005520:	08005a00 	.word	0x08005a00
 8005524:	08005918 	.word	0x08005918
 8005528:	08005a18 	.word	0x08005a18
 800552c:	0800592c 	.word	0x0800592c
 8005530:	08005a60 	.word	0x08005a60
 8005534:	08005940 	.word	0x08005940
 8005538:	08005a68 	.word	0x08005a68
 800553c:	08005954 	.word	0x08005954
 8005540:	08005a74 	.word	0x08005a74
 8005544:	08005968 	.word	0x08005968
 8005548:	08005a8c 	.word	0x08005a8c
 800554c:	0800597c 	.word	0x0800597c
 8005550:	08005abc 	.word	0x08005abc
 8005554:	20000fa8 	.word	0x20000fa8
 8005558:	08005c40 	.word	0x08005c40
 800555c:	08005c50 	.word	0x08005c50
 8005560:	08006390 	.word	0x08006390
 8005564:	08005990 	.word	0x08005990
 8005568:	080059a0 	.word	0x080059a0
 800556c:	08005ad4 	.word	0x08005ad4
 8005570:	20000fe8 	.word	0x20000fe8
 8005574:	080059a4 	.word	0x080059a4
 8005578:	080059bc 	.word	0x080059bc
 800557c:	08005ad8 	.word	0x08005ad8
 8005580:	08005be0 	.word	0x08005be0
 8005584:	08005adc 	.word	0x08005adc
 8005588:	080059c0 	.word	0x080059c0
 800558c:	08005ae8 	.word	0x08005ae8
 8005590:	08005af0 	.word	0x08005af0
	...

080055a0 <__early_init>:
 80055a0:	2101      	movs	r1, #1
 80055a2:	4b26      	ldr	r3, [pc, #152]	; (800563c <__early_init+0x9c>)
 80055a4:	681a      	ldr	r2, [r3, #0]
 80055a6:	430a      	orrs	r2, r1
 80055a8:	601a      	str	r2, [r3, #0]
 80055aa:	3101      	adds	r1, #1
 80055ac:	681a      	ldr	r2, [r3, #0]
 80055ae:	4211      	tst	r1, r2
 80055b0:	d0fc      	beq.n	80055ac <__early_init+0xc>
 80055b2:	2103      	movs	r1, #3
 80055b4:	685a      	ldr	r2, [r3, #4]
 80055b6:	438a      	bics	r2, r1
 80055b8:	605a      	str	r2, [r3, #4]
 80055ba:	685a      	ldr	r2, [r3, #4]
 80055bc:	3109      	adds	r1, #9
 80055be:	605a      	str	r2, [r3, #4]
 80055c0:	4a1e      	ldr	r2, [pc, #120]	; (800563c <__early_init+0x9c>)
 80055c2:	6853      	ldr	r3, [r2, #4]
 80055c4:	400b      	ands	r3, r1
 80055c6:	d1fc      	bne.n	80055c2 <__early_init+0x22>
 80055c8:	21f9      	movs	r1, #249	; 0xf9
 80055ca:	6810      	ldr	r0, [r2, #0]
 80055cc:	4001      	ands	r1, r0
 80055ce:	6011      	str	r1, [r2, #0]
 80055d0:	2101      	movs	r1, #1
 80055d2:	6053      	str	r3, [r2, #4]
 80055d4:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80055d6:	430b      	orrs	r3, r1
 80055d8:	6353      	str	r3, [r2, #52]	; 0x34
 80055da:	4a18      	ldr	r2, [pc, #96]	; (800563c <__early_init+0x9c>)
 80055dc:	3101      	adds	r1, #1
 80055de:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80055e0:	4219      	tst	r1, r3
 80055e2:	d0fc      	beq.n	80055de <__early_init+0x3e>
 80055e4:	2101      	movs	r1, #1
 80055e6:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80055e8:	430b      	orrs	r3, r1
 80055ea:	6253      	str	r3, [r2, #36]	; 0x24
 80055ec:	4a13      	ldr	r2, [pc, #76]	; (800563c <__early_init+0x9c>)
 80055ee:	3101      	adds	r1, #1
 80055f0:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80055f2:	4219      	tst	r1, r3
 80055f4:	d0fc      	beq.n	80055f0 <__early_init+0x50>
 80055f6:	23a1      	movs	r3, #161	; 0xa1
 80055f8:	039b      	lsls	r3, r3, #14
 80055fa:	6053      	str	r3, [r2, #4]
 80055fc:	2300      	movs	r3, #0
 80055fe:	62d3      	str	r3, [r2, #44]	; 0x2c
 8005600:	6313      	str	r3, [r2, #48]	; 0x30
 8005602:	2380      	movs	r3, #128	; 0x80
 8005604:	6811      	ldr	r1, [r2, #0]
 8005606:	045b      	lsls	r3, r3, #17
 8005608:	430b      	orrs	r3, r1
 800560a:	2180      	movs	r1, #128	; 0x80
 800560c:	6013      	str	r3, [r2, #0]
 800560e:	4a0b      	ldr	r2, [pc, #44]	; (800563c <__early_init+0x9c>)
 8005610:	0489      	lsls	r1, r1, #18
 8005612:	6813      	ldr	r3, [r2, #0]
 8005614:	420b      	tst	r3, r1
 8005616:	d0fc      	beq.n	8005612 <__early_init+0x72>
 8005618:	2111      	movs	r1, #17
 800561a:	4b09      	ldr	r3, [pc, #36]	; (8005640 <__early_init+0xa0>)
 800561c:	6019      	str	r1, [r3, #0]
 800561e:	6853      	ldr	r3, [r2, #4]
 8005620:	390f      	subs	r1, #15
 8005622:	430b      	orrs	r3, r1
 8005624:	6053      	str	r3, [r2, #4]
 8005626:	4a05      	ldr	r2, [pc, #20]	; (800563c <__early_init+0x9c>)
 8005628:	310a      	adds	r1, #10
 800562a:	6853      	ldr	r3, [r2, #4]
 800562c:	400b      	ands	r3, r1
 800562e:	2b08      	cmp	r3, #8
 8005630:	d1fb      	bne.n	800562a <__early_init+0x8a>
 8005632:	2101      	movs	r1, #1
 8005634:	6993      	ldr	r3, [r2, #24]
 8005636:	430b      	orrs	r3, r1
 8005638:	6193      	str	r3, [r2, #24]
 800563a:	4770      	bx	lr
 800563c:	40021000 	.word	0x40021000
 8005640:	40022000 	.word	0x40022000
	...

08005650 <chThdExit>:
 8005650:	b570      	push	{r4, r5, r6, lr}
 8005652:	b672      	cpsid	i
 8005654:	4b0d      	ldr	r3, [pc, #52]	; (800568c <chThdExit+0x3c>)
 8005656:	699c      	ldr	r4, [r3, #24]
 8005658:	0025      	movs	r5, r4
 800565a:	6220      	str	r0, [r4, #32]
 800565c:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800565e:	3524      	adds	r5, #36	; 0x24
 8005660:	42a8      	cmp	r0, r5
 8005662:	d006      	beq.n	8005672 <chThdExit+0x22>
 8005664:	6803      	ldr	r3, [r0, #0]
 8005666:	6263      	str	r3, [r4, #36]	; 0x24
 8005668:	f7fb faba 	bl	8000be0 <chSchReadyI>
 800566c:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800566e:	42a8      	cmp	r0, r5
 8005670:	d1f8      	bne.n	8005664 <chThdExit+0x14>
 8005672:	7f63      	ldrb	r3, [r4, #29]
 8005674:	079b      	lsls	r3, r3, #30
 8005676:	d104      	bne.n	8005682 <chThdExit+0x32>
 8005678:	6922      	ldr	r2, [r4, #16]
 800567a:	6963      	ldr	r3, [r4, #20]
 800567c:	611a      	str	r2, [r3, #16]
 800567e:	6922      	ldr	r2, [r4, #16]
 8005680:	6153      	str	r3, [r2, #20]
 8005682:	200f      	movs	r0, #15
 8005684:	f7fc f90c 	bl	80018a0 <chSchGoSleepS>
 8005688:	bd70      	pop	{r4, r5, r6, pc}
 800568a:	46c0      	nop			; (mov r8, r8)
 800568c:	20000738 	.word	0x20000738

08005690 <thread1.lto_priv.71>:
 8005690:	b510      	push	{r4, lr}
 8005692:	f7ff ffdd 	bl	8005650 <chThdExit>
 8005696:	bd10      	pop	{r4, pc}
	...

080056a0 <chSchDoReschedule>:
 80056a0:	b510      	push	{r4, lr}
 80056a2:	f7fb fed5 	bl	8001450 <chSchDoRescheduleAhead>
 80056a6:	bd10      	pop	{r4, pc}
	...

080056b0 <__default_exit>:
 80056b0:	e7fe      	b.n	80056b0 <__default_exit>
 80056b2:	46c0      	nop			; (mov r8, r8)
	...

080056c0 <__late_init>:
 80056c0:	4770      	bx	lr
 80056c2:	46c0      	nop			; (mov r8, r8)
	...
 80056d0:	08000bc2 	.word	0x08000bc2
 80056d4:	08000ba2 	.word	0x08000ba2
 80056d8:	08000ba2 	.word	0x08000ba2
 80056dc:	08000bc6 	.word	0x08000bc6
 80056e0:	08000b98 	.word	0x08000b98
 80056e4:	08000b90 	.word	0x08000b90
 80056e8:	08000ba2 	.word	0x08000ba2
 80056ec:	08000b98 	.word	0x08000b98
 80056f0:	6e696c62 	.word	0x6e696c62
 80056f4:	3172656b 	.word	0x3172656b
	...
 8005700:	6e696c62 	.word	0x6e696c62
 8005704:	3272656b 	.word	0x3272656b
	...
 8005710:	61686e75 	.word	0x61686e75
 8005714:	656c646e 	.word	0x656c646e
 8005718:	78652064 	.word	0x78652064
 800571c:	74706563 	.word	0x74706563
 8005720:	006e6f69 	.word	0x006e6f69
	...
 8005730:	202d2d2d 	.word	0x202d2d2d
 8005734:	726f6353 	.word	0x726f6353
 8005738:	203a2065 	.word	0x203a2065
 800573c:	00000000 	.word	0x00000000
 8005740:	6d697420 	.word	0x6d697420
 8005744:	2f737265 	.word	0x2f737265
 8005748:	00000053 	.word	0x00000053
 800574c:	00000000 	.word	0x00000000
 8005750:	69617720 	.word	0x69617720
 8005754:	69732b74 	.word	0x69732b74
 8005758:	6c616e67 	.word	0x6c616e67
 800575c:	0000532f 	.word	0x0000532f
 8005760:	636f6c20 	.word	0x636f6c20
 8005764:	6e752b6b 	.word	0x6e752b6b
 8005768:	6b636f6c 	.word	0x6b636f6c
 800576c:	0000532f 	.word	0x0000532f
 8005770:	202d2d2d 	.word	0x202d2d2d
 8005774:	74737953 	.word	0x74737953
 8005778:	203a6d65 	.word	0x203a6d65
 800577c:	00000000 	.word	0x00000000
 8005780:	74796220 	.word	0x74796220
 8005784:	00007365 	.word	0x00007365
 8005788:	202d2d2d 	.word	0x202d2d2d
 800578c:	65726854 	.word	0x65726854
 8005790:	203a6461 	.word	0x203a6461
 8005794:	00000000 	.word	0x00000000
 8005798:	202d2d2d 	.word	0x202d2d2d
 800579c:	656d6954 	.word	0x656d6954
 80057a0:	203a2072 	.word	0x203a2072
 80057a4:	00000000 	.word	0x00000000
 80057a8:	202d2d2d 	.word	0x202d2d2d
 80057ac:	616d6553 	.word	0x616d6553
 80057b0:	203a6870 	.word	0x203a6870
 80057b4:	00000000 	.word	0x00000000
 80057b8:	202d2d2d 	.word	0x202d2d2d
 80057bc:	6e657645 	.word	0x6e657645
 80057c0:	203a5374 	.word	0x203a5374
 80057c4:	00000000 	.word	0x00000000
 80057c8:	202d2d2d 	.word	0x202d2d2d
 80057cc:	6e657645 	.word	0x6e657645
 80057d0:	203a4c74 	.word	0x203a4c74
 80057d4:	00000000 	.word	0x00000000
 80057d8:	202d2d2d 	.word	0x202d2d2d
 80057dc:	6574754d 	.word	0x6574754d
 80057e0:	203a2078 	.word	0x203a2078
 80057e4:	00000000 	.word	0x00000000
 80057e8:	202d2d2d 	.word	0x202d2d2d
 80057ec:	646e6f43 	.word	0x646e6f43
 80057f0:	203a2e56 	.word	0x203a2e56
 80057f4:	00000000 	.word	0x00000000
 80057f8:	202d2d2d 	.word	0x202d2d2d
 80057fc:	75657551 	.word	0x75657551
 8005800:	203a2065 	.word	0x203a2065
 8005804:	00000000 	.word	0x00000000
 8005808:	202d2d2d 	.word	0x202d2d2d
 800580c:	6c69614d 	.word	0x6c69614d
 8005810:	203a2e42 	.word	0x203a2e42
	...
 8005820:	67736d20 	.word	0x67736d20
 8005824:	2c532f73 	.word	0x2c532f73
 8005828:	00000020 	.word	0x00000020
 800582c:	00000000 	.word	0x00000000
 8005830:	72687420 	.word	0x72687420
 8005834:	73646165 	.word	0x73646165
 8005838:	0000532f 	.word	0x0000532f
 800583c:	00000000 	.word	0x00000000
 8005840:	73657220 	.word	0x73657220
 8005844:	64656863 	.word	0x64656863
 8005848:	73656c75 	.word	0x73656c75
 800584c:	202c532f 	.word	0x202c532f
	...
 8005860:	78746320 	.word	0x78746320
 8005864:	2f637773 	.word	0x2f637773
 8005868:	00000053 	.word	0x00000053
 800586c:	00000000 	.word	0x00000000
 8005870:	74796220 	.word	0x74796220
 8005874:	532f7365 	.word	0x532f7365
	...

08005880 <ch_debug>:
 8005880:	6e69616d 18011600 08440404 1814100c     main......D.....
 8005890:	1e1d1c00 00000000 00000000 00000000     ................
 80058a0:	00004241 00000000 00000000 00000000     AB..............
 80058b0:	00000042 00000043 00000044 00000000     B...C...D.......
 80058c0:	00000041 00000000 00000000 00000000     A...............

080058d0 <evhndl>:
 80058d0:	08000891 08000881 08000871 00000000     ........q.......
 80058e0:	00434241 00000000 00000000 00000000     ABC.............
 80058f0:	202a2a2a 6e72654b 203a6c65 20202020     *** Kernel:     
 8005900:	00002020 202a2a2a 706d6f43 64656c69       ..*** Compiled
 8005910:	2020203a 00002020 202a2a2a 706d6f43     :     ..*** Comp
 8005920:	72656c69 2020203a 00002020 202a2a2a     iler:     ..*** 
 8005930:	68637241 63657469 65727574 0000203a     Architecture: ..
 8005940:	202a2a2a 65726f43 72615620 746e6169     *** Core Variant
 8005950:	0000203a 202a2a2a 74726f50 666e4920     : ..*** Port Inf
 8005960:	20203a6f 00002020 202a2a2a 74616c50     o:    ..*** Plat
 8005970:	6d726f66 2020203a 00002020 202a2a2a     form:     ..*** 
 8005980:	74736554 616f4220 203a6472 00002020     Test Board:   ..
 8005990:	202d2d2d 74736554 73614320 00002065     --- Test Case ..
 80059a0:	00002820 202d2d2d 75736552 203a746c      (..--- Result: 
 80059b0:	4c494146 20455255 00002328 00005b20     FAILURE (#.. [..
 80059c0:	616e6946 6572206c 746c7573 0000203a     Final result: ..
 80059d0:	656c6469 00000000 202a2a2a 62696843     idle....*** Chib
 80059e0:	2f534f69 74205452 20747365 74697573     iOS/RT test suit
 80059f0:	00000065 002a2a2a 2e302e33 00000030     e...***.3.0.0...
 8005a00:	20727041 32203620 20383130 3631202d     Apr  6 2018 - 16
 8005a10:	3a30303a 00003233 20434347 2e322e37     :00:32..GCC 7.2.
 8005a20:	30322031 39303731 28203430 656c6572     1 20170904 (rele
 8005a30:	29657361 52415b20 6d652f4d 64646562     ase) [ARM/embedd
 8005a40:	372d6465 6172622d 2068636e 69766572     ed-7-branch revi
 8005a50:	6e6f6973 35353220 5d343032 00000000     sion 255204]....
 8005a60:	764d5241 004d2d36 74726f43 4d2d7865     ARMv6-M.Cortex-M
 8005a70:	00000030 65657250 6974706d 74206e6f     0...Preemption t
 8005a80:	756f7268 4e206867 0000494d 334d5453     hrough NMI..STM3
 8005a90:	35304632 20387831 72746e45 654c2079     2F051x8 Entry Le
 8005aa0:	206c6576 6964654d 44206d75 69736e65     vel Medium Densi
 8005ab0:	64207974 63697665 00007365 53205453     ty devices..ST S
 8005ac0:	32334d54 442d3046 6f637369 79726576     TM32F0-Discovery
 8005ad0:	00000000 00000029 0000295d 202d2d2d     ....)...])..--- 
 8005ae0:	75736552 203a746c 43435553 00535345     Result: SUCCESS.
 8005af0:	4c494146 00455255 00000000 00000000     FAILURE.........
 8005b00:	44434241 00000045 00000000 00000000     ABCDE...........

08005b10 <patternbmk>:
 8005b10:	08006160 080061b0 080061c0 080061d0     `a...a...a...a..
 8005b20:	080061e0 080061f0 08006200 08006210     .a...a...b...b..
 8005b30:	08006220 08006170 08006180 08006190      b..pa...a...a..
 8005b40:	080061a0 00000000 00000000 00000000     .a..............

08005b50 <patterndyn>:
 8005b50:	08006230 08006240 08006250 00000000     0b..@b..Pb......

08005b60 <patternevt>:
 8005b60:	08006260 08006270 08006280 00000000     `b..pb...b......

08005b70 <patternheap>:
 8005b70:	08006290 00000000 00000000 00000000     .b..............

08005b80 <patternmbox>:
 8005b80:	080062a0 00000000 00000000 00000000     .b..............

08005b90 <patternmsg>:
 8005b90:	080062b0 00000000 00000000 00000000     .b..............

08005ba0 <patternmtx>:
 8005ba0:	080062c0 080062d0 080062e0 080062f0     .b...b...b...b..
 8005bb0:	08006300 08006310 00000000 00000000     .c...c..........

08005bc0 <patternpools>:
 8005bc0:	08006320 00000000 00000000 00000000      c..............

08005bd0 <patternqueues>:
 8005bd0:	08006330 08006340 00000000 00000000     0c..@c..........

08005be0 <patterns>:
 8005be0:	08005c40 08005c50 08005c20 08005ba0     @\..P\.. \...[..
 8005bf0:	08005b90 08005b80 08005b60 08005b70     .[...[..`[..p[..
 8005c00:	08005bc0 08005b50 08005bd0 08005b10     .[..P[...[...[..
	...

08005c20 <patternsem>:
 8005c20:	08006350 08006360 08006370 08006380     Pc..`c..pc...c..
	...

08005c40 <patternsys>:
 8005c40:	08006390 080063a0 080063b0 00000000     .c...c...c......

08005c50 <patternthd>:
 8005c50:	080063c0 080063d0 080063e0 080063f0     .c...c...c...c..
	...
 8005c70:	00000a0d 00000000 00000000 00000000     ................
 8005c80:	44434241 00000000 00000000 00000000     ABCD............
 8005c90:	636e6542 72616d68 52202c6b 66204d41     Benchmark, RAM f
 8005ca0:	70746f6f 746e6972 00000000 636e6542     ootprint....Benc
 8005cb0:	72616d68 6d202c6b 78657475 6c207365     hmark, mutexes l
 8005cc0:	2f6b636f 6f6c6e75 00006b63 636e6542     ock/unlock..Benc
 8005cd0:	72616d68 73202c6b 70616d65 65726f68     hmark, semaphore
 8005ce0:	61772073 732f7469 616e6769 0000006c     s wait/signal...
 8005cf0:	636e6542 72616d68 76202c6b 75747269     Benchmark, virtu
 8005d00:	74206c61 72656d69 65732073 65722f74     al timers set/re
 8005d10:	00746573 636e6542 72616d68 49202c6b     set.Benchmark, I
 8005d20:	51204f2f 65756575 68742073 67756f72     /O Queues throug
 8005d30:	74757068 00000000 636e6542 72616d68     hput....Benchmar
 8005d40:	72202c6b 646e756f 626f7220 63206e69     k, round robin c
 8005d50:	65746e6f 73207478 63746977 676e6968     ontext switching
 8005d60:	00000000 636e6542 72616d68 6d202c6b     ....Benchmark, m
 8005d70:	20737361 63736572 75646568 202c656c     ass reschedule, 
 8005d80:	68742035 64616572 00000073 636e6542     5 threads...Benc
 8005d90:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8005da0:	61657263 6f206574 00796c6e 636e6542     create only.Benc
 8005db0:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8005dc0:	6c6c7566 63796320 0000656c 636e6542     full cycle..Benc
 8005dd0:	72616d68 63202c6b 65746e6f 73207478     hmark, context s
 8005de0:	63746977 00000068 636e6542 72616d68     witch...Benchmar
 8005df0:	6d202c6b 61737365 20736567 00003323     k, messages #3..
 8005e00:	636e6542 72616d68 6d202c6b 61737365     Benchmark, messa
 8005e10:	20736567 00003223 636e6542 72616d68     ges #2..Benchmar
 8005e20:	6d202c6b 61737365 20736567 00003123     k, messages #1..
 8005e30:	75657551 202c7365 7074756f 71207475     Queues, output q
 8005e40:	65756575 00000073 75657551 202c7365     ueues...Queues, 
 8005e50:	75706e69 75712074 73657565 00000000     input queues....
 8005e60:	616e7944 2063696d 73495041 6572202c     Dynamic APIs, re
 8005e70:	74736967 61207972 7220646e 72656665     gistry and refer
 8005e80:	65636e65 00000073 616e7944 2063696d     ences...Dynamic 
 8005e90:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8005ea0:	69746165 66206e6f 206d6f72 6f6d656d     eation from memo
 8005eb0:	70207972 006c6f6f 616e7944 2063696d     ry pool.Dynamic 
 8005ec0:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8005ed0:	69746165 66206e6f 206d6f72 70616568     eation from heap
 8005ee0:	00000000 6f6d654d 50207972 736c6f6f     ....Memory Pools
 8005ef0:	7571202c 2f657565 75716564 00657565     , queue/dequeue.
 8005f00:	70616548 6c61202c 61636f6c 6e6f6974     Heap, allocation
 8005f10:	646e6120 61726620 6e656d67 69746174      and fragmentati
 8005f20:	74206e6f 00747365 6e657645 202c7374     on test.Events, 
 8005f30:	656d6974 7374756f 00000000 6e657645     timeouts....Even
 8005f40:	202c7374 74696177 646e6120 6f726220     ts, wait and bro
 8005f50:	61636461 00007473 6e657645 202c7374     adcast..Events, 
 8005f60:	69676572 61727473 6e6f6974 646e6120     registration and
 8005f70:	73696420 63746170 00000068 6c69614d      dispatch...Mail
 8005f80:	65786f62 71202c73 69756575 6120676e     boxes, queuing a
 8005f90:	7420646e 6f656d69 00737475 7373654d     nd timeouts.Mess
 8005fa0:	73656761 6f6c202c 0000706f 646e6f43     ages, loop..Cond
 8005fb0:	2c726156 6f6f6220 74207473 00747365     Var, boost test.
 8005fc0:	646e6f43 2c726156 6f726220 61636461     CondVar, broadca
 8005fd0:	74207473 00747365 646e6f43 2c726156     st test.CondVar,
 8005fe0:	67697320 206c616e 74736574 00000000      signal test....
 8005ff0:	6574754d 2c736578 61747320 00737574     Mutexes, status.
 8006000:	6574754d 2c736578 69727020 7469726f     Mutexes, priorit
 8006010:	65722079 6e727574 00000000 6574754d     y return....Mute
 8006020:	2c736578 69727020 7469726f 6e652079     xes, priority en
 8006030:	75657571 20676e69 74736574 00000000     queuing test....
 8006040:	616e6942 53207972 70616d65 65726f68     Binary Semaphore
 8006050:	66202c73 74636e75 616e6f69 7974696c     s, functionality
 8006060:	00000000 616d6553 726f6870 202c7365     ....Semaphores, 
 8006070:	6d6f7461 73206369 616e6769 61772d6c     atomic signal-wa
 8006080:	00007469 616d6553 726f6870 202c7365     it..Semaphores, 
 8006090:	656d6974 0074756f 616d6553 726f6870     timeout.Semaphor
 80060a0:	202c7365 75716e65 6e697565 00000067     es, enqueuing...
 80060b0:	65726854 2c736461 6c656420 00737961     Threads, delays.
 80060c0:	65726854 2c736461 69727020 7469726f     Threads, priorit
 80060d0:	68632079 65676e61 00000000 65726854     y change....Thre
 80060e0:	2c736461 716e6520 69756575 7420676e     ads, enqueuing t
 80060f0:	20747365 00003223 65726854 2c736461     est #2..Threads,
 8006100:	716e6520 69756575 7420676e 20747365      enqueuing test 
 8006110:	00003123 74737953 202c6d65 65746e69     #1..System, inte
 8006120:	74697267 00000079 74737953 202c6d65     grity...System, 
 8006130:	65746e69 70757272 68207374 6c646e61     interrupts handl
 8006140:	00676e69 74737953 202c6d65 74697263     ing.System, crit
 8006150:	6c616369 6e6f7a20 00007365 00000000     ical zones......

08006160 <testbmk1>:
 8006160:	08005e18 00000000 00000000 08003ab1     .^...........:..

08006170 <testbmk10>:
 8006170:	08005cf0 00000000 00000000 08002621     .\..........!&..

08006180 <testbmk11>:
 8006180:	08005ccc 08000411 00000000 080033c1     .\...........3..

08006190 <testbmk12>:
 8006190:	08005cac 08000401 00000000 08002ad1     .\...........*..

080061a0 <testbmk13>:
 80061a0:	08005c90 00000000 00000000 08001131     .\..........1...

080061b0 <testbmk2>:
 80061b0:	08005e00 00000000 00000000 08003a41     .^..........A:..

080061c0 <testbmk3>:
 80061c0:	08005de8 00000000 00000000 08003951     .]..........Q9..

080061d0 <testbmk4>:
 80061d0:	08005dcc 00000000 00000000 080038b1     .]...........8..

080061e0 <testbmk5>:
 80061e0:	08005dac 00000000 00000000 080035e1     .]...........5..

080061f0 <testbmk6>:
 80061f0:	08005d8c 00000000 00000000 08002751     .]..........Q'..

08006200 <testbmk7>:
 8006200:	08005d64 08000441 00000000 08003781     d]..A........7..

08006210 <testbmk8>:
 8006210:	08005d38 00000000 00000000 08003691     8]...........6..

08006220 <testbmk9>:
 8006220:	08005d14 00000000 00000000 080026a1     .]...........&..

08006230 <testdyn1>:
 8006230:	08005eb8 080004e1 00000000 08004091     .^...........@..

08006240 <testdyn2>:
 8006240:	08005e88 080004c1 00000000 08003f91     .^...........?..

08006250 <testdyn3>:
 8006250:	08005e60 08000511 00000000 08003011     `^...........0..

08006260 <testevt1>:
 8006260:	08005f58 08000581 00000000 08000aa1     X_..............

08006270 <testevt2>:
 8006270:	08005f3c 080005a1 00000000 08004171     <_..........qA..

08006280 <testevt3>:
 8006280:	08005f28 08000591 00000000 08001ac1     (_..............

08006290 <testheap1>:
 8006290:	08005f00 08000551 00000000 08003131     ._..Q.......11..

080062a0 <testmbox1>:
 80062a0:	08005f7c 080005b1 00000000 08001ce1     |_..............

080062b0 <testmsg1>:
 80062b0:	08005f9c 00000000 00000000 080028d1     ._...........(..

080062c0 <testmtx1>:
 80062c0:	0800601c 08000661 00000000 08004931     .`..a.......1I..

080062d0 <testmtx4>:
 80062d0:	08006000 08000641 00000000 080046b1     .`..A........F..

080062e0 <testmtx5>:
 80062e0:	08005ff0 08000671 00000000 08002c61     ._..q.......a,..

080062f0 <testmtx6>:
 80062f0:	08005fd8 08000611 00000000 080045d1     ._...........E..

08006300 <testmtx7>:
 8006300:	08005fc0 08000631 00000000 080044e1     ._..1........D..

08006310 <testmtx8>:
 8006310:	08005fac 080005e1 00000000 08004451     ._..........QD..

08006320 <testpools1>:
 8006320:	08005ee4 08000531 00000000 080009b1     .^..1...........

08006330 <testqueues1>:
 8006330:	08005e48 08000491 00000000 08003d31     H^..........1=..

08006340 <testqueues2>:
 8006340:	08005e30 08000461 00000000 08003b21     0^..a.......!;..

08006350 <testsem1>:
 8006350:	08006098 08000681 00000000 08004b81     .`...........K..

08006360 <testsem2>:
 8006360:	08006084 080006a1 00000000 08004a31     .`..........1J..

08006370 <testsem3>:
 8006370:	08006064 08000691 00000000 08001921     d`..........!...

08006380 <testsem4>:
 8006380:	08006040 00000000 00000000 08003461     @`..........a4..

08006390 <testsys1>:
 8006390:	08006144 00000000 00000000 080024f1     Da...........$..

080063a0 <testsys2>:
 80063a0:	08006128 00000000 00000000 08000451     (a..........Q...

080063b0 <testsys3>:
 80063b0:	08006114 00000000 00000000 080010a1     .a..............

080063c0 <testthd1>:
 80063c0:	080060f8 00000000 00000000 08004e41     .`..........AN..

080063d0 <testthd2>:
 80063d0:	080060dc 00000000 00000000 08004cf1     .`...........L..

080063e0 <testthd3>:
 80063e0:	080060c0 00000000 00000000 08001551     .`..........Q...

080063f0 <testthd4>:
 80063f0:	080060b0 00000000 00000000 080027d1     .`...........'..

08006400 <vmt>:
 8006400:	080022b1 080023d1 08002341 08002451     ."...#..A#..Q$..
 8006410:	08002331 08002441 080022a1 080023c1     1#..A$..."...#..

08006420 <wa>:
 8006420:	20000940 20000a88 20000bd0 20000d18     @.. ... ... ... 
 8006430:	20000e60                                `.. 
