
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080001a1

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x00001e80 memsz 0x00001e80 flags rwx
    LOAD off    0x00020500 vaddr 0x20000500 paddr 0x08001e80 align 2**16
         filesz 0x00000000 memsz 0x000004c8 flags rw-
    LOAD off    0x00020000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000500 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000001a0  08000000  08000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ce0  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000000  08001e80  08001e80  00011e80  2**0
                  CONTENTS
  3 .mstack       00000400  20000000  20000000  00020000  2**0
                  ALLOC
  4 .pstack       00000100  20000400  20000400  00020000  2**0
                  ALLOC
  5 .data         00000000  20000500  20000500  00011e80  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          000004c8  20000500  08001e80  00020500  2**3
                  ALLOC
  7 .ram0         00000000  200009c8  200009c8  00011e80  2**2
                  CONTENTS
  8 .ram1         00000000  00000000  00000000  00011e80  2**2
                  CONTENTS
  9 .ram2         00000000  00000000  00000000  00011e80  2**2
                  CONTENTS
 10 .ram3         00000000  00000000  00000000  00011e80  2**2
                  CONTENTS
 11 .ram4         00000000  10000000  10000000  00011e80  2**2
                  CONTENTS
 12 .ram5         00000000  00000000  00000000  00011e80  2**2
                  CONTENTS
 13 .ram6         00000000  00000000  00000000  00011e80  2**2
                  CONTENTS
 14 .ram7         00000000  00000000  00000000  00011e80  2**2
                  CONTENTS
 15 .ARM.attributes 0000002d  00000000  00000000  00011e80  2**0
                  CONTENTS, READONLY
 16 .comment      0000007e  00000000  00000000  00011ead  2**0
                  CONTENTS, READONLY
 17 .debug_info   00005db9  00000000  00000000  00011f2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_abbrev 000007ab  00000000  00000000  00017ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_loc    000024ea  00000000  00000000  0001848f  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 000001b8  00000000  00000000  0001a979  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_ranges 00000e40  00000000  00000000  0001ab31  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_line   000015b5  00000000  00000000  0001b971  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_str    000017e9  00000000  00000000  0001cf26  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_frame  000005b8  00000000  00000000  0001e710  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080001a0 l    d  .text	00000000 .text
08001e80 l    d  .textalign	00000000 .textalign
20000000 l    d  .mstack	00000000 .mstack
20000400 l    d  .pstack	00000000 .pstack
20000500 l    d  .data	00000000 .data
20000500 l    d  .bss	00000000 .bss
200009c8 l    d  .ram0	00000000 .ram0
00000000 l    d  .ram1	00000000 .ram1
00000000 l    d  .ram2	00000000 .ram2
00000000 l    d  .ram3	00000000 .ram3
10000000 l    d  .ram4	00000000 .ram4
00000000 l    d  .ram5	00000000 .ram5
00000000 l    d  .ram6	00000000 .ram6
00000000 l    d  .ram7	00000000 .ram7
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 
08000290 l     F .text	0000003c osalThreadDequeueNextI.constprop.15
080002d0 l     F .text	00000098 _pal_lld_setgroupmode.constprop.4
08000370 l     F .text	00000034 _test_assert_time_window.constprop.1
080003b0 l     F .text	00000010 notify1
080003c0 l     F .text	0000000c test_002_002_setup
080003d0 l     F .text	0000000c test_002_005_setup
080003e0 l     F .text	0000000c test_002_004_setup
080003f0 l     F .text	0000000c test_002_003_setup
08000400 l     F .text	0000000c test_002_001_setup
08000410 l     F .text	00000018 test_001_001_execute
08000430 l     F .text	00000038 test_println
08000470 l     F .text	00000060 test_printn
080004d0 l     F .text	00000028 _test_assert
08000500 l     F .text	0000002c print_line
08000530 l     F .text	00000058 _port_irq_epilogue
08000590 l     F .text	000001a8 VectorD4
08000740 l     F .text	000000d8 VectorB0
08000820 l     F .text	0000001a SVC_Handler
08000840 l     F .text	0000002c chSemSignalI.part.2
08000870 l     F .text	00000004 _unhandled_exception
08000870 l     F .text	00000004 BusFault_Handler
08000870 l     F .text	00000004 UsageFault_Handler
08000870 l     F .text	00000004 Vector1C
08000870 l     F .text	00000004 Vector20
08000870 l     F .text	00000004 Vector24
08000870 l     F .text	00000004 Vector28
08000870 l     F .text	00000004 HardFault_Handler
08000870 l     F .text	00000004 DebugMon_Handler
08000870 l     F .text	00000004 Vector34
08000870 l     F .text	00000004 PendSV_Handler
08000870 l     F .text	00000004 SysTick_Handler
08000870 l     F .text	00000004 Vector40
08000870 l     F .text	00000004 Vector44
08000870 l     F .text	00000004 Vector48
08000870 l     F .text	00000004 Vector4C
08000870 l     F .text	00000004 Vector50
08000870 l     F .text	00000004 Vector54
08000870 l     F .text	00000004 Vector58
08000870 l     F .text	00000004 Vector5C
08000870 l     F .text	00000004 Vector60
08000870 l     F .text	00000004 Vector64
08000870 l     F .text	00000004 Vector68
08000870 l     F .text	00000004 Vector6C
08000870 l     F .text	00000004 Vector70
08000870 l     F .text	00000004 Vector74
08000870 l     F .text	00000004 Vector78
08000870 l     F .text	00000004 Vector7C
08000870 l     F .text	00000004 Vector80
08000870 l     F .text	00000004 Vector84
08000870 l     F .text	00000004 Vector88
08000870 l     F .text	00000004 Vector8C
08000870 l     F .text	00000004 Vector90
08000870 l     F .text	00000004 Vector94
08000870 l     F .text	00000004 Vector98
08000870 l     F .text	00000004 Vector9C
08000870 l     F .text	00000004 VectorA0
08000870 l     F .text	00000004 VectorA4
08000870 l     F .text	00000004 VectorA8
08000870 l     F .text	00000004 VectorAC
08000870 l     F .text	00000004 NMI_Handler
08000870 l     F .text	00000004 VectorB4
08000870 l     F .text	00000004 VectorB8
08000870 l     F .text	00000004 VectorBC
08000870 l     F .text	00000004 VectorC0
08000870 l     F .text	00000004 VectorC4
08000870 l     F .text	00000004 VectorC8
08000870 l     F .text	00000004 VectorCC
08000870 l     F .text	00000004 VectorD0
08000870 l     F .text	00000004 MemManage_Handler
08000870 l     F .text	00000004 VectorD8
08000870 l     F .text	00000004 VectorDC
08000870 l     F .text	00000004 VectorE0
08000870 l     F .text	00000004 VectorE4
08000870 l     F .text	00000004 VectorE8
08000870 l     F .text	00000004 VectorEC
08000870 l     F .text	00000004 VectorF0
08000870 l     F .text	00000004 VectorF4
08000870 l     F .text	00000004 VectorF8
08000870 l     F .text	00000004 VectorFC
08000870 l     F .text	00000004 Vector100
08000870 l     F .text	00000004 Vector104
08000870 l     F .text	00000004 Vector108
08000870 l     F .text	00000004 Vector10C
08000870 l     F .text	00000004 Vector110
08000870 l     F .text	00000004 Vector114
08000870 l     F .text	00000004 Vector118
08000870 l     F .text	00000004 Vector11C
08000870 l     F .text	00000004 Vector120
08000870 l     F .text	00000004 Vector124
08000870 l     F .text	00000004 Vector128
08000870 l     F .text	00000004 Vector12C
08000870 l     F .text	00000004 Vector130
08000870 l     F .text	00000004 Vector134
08000870 l     F .text	00000004 Vector138
08000870 l     F .text	00000004 Vector13C
08000870 l     F .text	00000004 Vector140
08000870 l     F .text	00000004 Vector144
08000870 l     F .text	00000004 Vector148
08000870 l     F .text	00000004 Vector14C
08000870 l     F .text	00000004 Vector150
08000870 l     F .text	00000004 Vector154
08000870 l     F .text	00000004 Vector158
08000870 l     F .text	00000004 Vector15C
08000870 l     F .text	00000004 Vector160
08000870 l     F .text	00000004 Vector164
08000870 l     F .text	00000004 Vector168
08000870 l     F .text	00000004 Vector16C
08000870 l     F .text	00000004 Vector170
08000870 l     F .text	00000004 Vector174
08000870 l     F .text	00000004 Vector178
08000870 l     F .text	00000004 Vector17C
08000870 l     F .text	00000004 Vector180
08000870 l     F .text	00000004 Vector184
08000870 l     F .text	00000004 Vector188
08000870 l     F .text	00000004 Vector18C
08000870 l     F .text	00000004 Vector190
08000870 l     F .text	00000004 Vector194
08000870 l     F .text	00000004 Vector198
08000870 l     F .text	00000004 Vector19C
08000880 l     F .text	0000006c chSemReset.constprop.20
080008f0 l     F .text	00000006 test_002_003_teardown
08000900 l     F .text	00000004 test_002_002_teardown
08000910 l     F .text	00000004 test_002_001_teardown
08000920 l     F .text	0000006c chSchGoSleepTimeoutS
08000990 l     F .text	0000003c chEvtWaitAnyTimeoutS.constprop.17
080009d0 l     F .text	00000108 test_002_005_execute
08000ae0 l     F .text	000000ac test_002_004_execute
08000b90 l     F .text	00000044 chSemWaitTimeout
08000be0 l     F .text	000000d4 test_002_003_execute
08000cc0 l     F .text	0000009c test_002_002_execute
08000d60 l     F .text	000000e8 test_002_001_execute
08000e50 l     F .text	00000086 oqWriteTimeout
08000ee0 l     F .text	00000006 writet
08000ef0 l     F .text	00000008 write
08000f00 l     F .text	0000004e oqPutTimeout
08000f50 l     F .text	00000006 putt
08000f60 l     F .text	00000008 put
08000f70 l     F .text	00000074 iqReadTimeout
08000ff0 l     F .text	00000006 readt
08001000 l     F .text	00000008 read
08001010 l     F .text	0000004e iqGetTimeout
08001060 l     F .text	00000006 gett
08001070 l     F .text	00000008 get
08001080 l     F .text	00000018 chThdSleep
080010a0 l     F .text	00000348 Thread3
080013f0 l     F .text	0000006c Thread2
08001460 l     F .text	0000006c Thread1
080014d0 l     F .text	000000b4 test_001_002_execute
08001930 l     F .text	000000ec test_support
20000500 l     O .bss	0000007c SD1
2000057c l     O .bss	00000004 gsem1
20000580 l     O .bss	00000004 gsem2
20000584 l     O .bss	00000004 gtr1
20000588 l     O .bss	00000074 nil
200005fc l     O .bss	00000004 sem1
20000600 l     O .bss	00000004 test_chp
20000604 l     O .bss	00000004 test_failure_message
20000608 l     O .bss	00000001 test_global_fail
20000609 l     O .bss	00000001 test_local_fail
2000060c l     O .bss	00000004 test_step
20000610 l     O .bss	00000010 test_tokens_buffer
20000620 l     O .bss	00000004 test_tokp
20000624 l     O .bss	00000004 tr1
20000628 l     O .bss	000000e8 waThread1
20000710 l     O .bss	000000e8 waThread2
200007f8 l     O .bss	000000e8 waThread3
200008e0 l     O .bss	000000e8 wa_test_support
08001ba0 l     O .text	00000064 nil_thd_configs
08001d30 l     O .text	00000010 test_001_001
08001d40 l     O .text	00000010 test_001_002
08001d50 l     O .text	00000010 test_002_001
08001d60 l     O .text	00000010 test_002_002
08001d70 l     O .text	00000010 test_002_003
08001db0 l     O .text	00000010 test_002_004
08001df0 l     O .text	00000010 test_002_005
08001e20 l     O .text	0000000c test_sequence_001
08001e30 l     O .text	00000018 test_sequence_002
08001e50 l     O .text	0000000c test_suite
08001e60 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 build/obj/crt0_v7m.o
080001be l       .text	00000000 msloop
080001cc l       .text	00000000 psloop
080001dc l       .text	00000000 dloop
080001f0 l       .text	00000000 bloop
08000202 l       .text	00000000 initloop
0800020e l       .text	00000000 endinitloop
08000216 l       .text	00000000 finiloop
08000222 l       .text	00000000 endfiniloop
00000000 l    df *ABS*	00000000 build/obj/nilcoreasm_v7m.o
00000000 l       *ABS*	00000000 CONTEXT_OFFSET
e000ed04 l       *ABS*	00000000 SCB_ICSR
10000000 l       *ABS*	00000000 ICSR_PENDSVSET
10000000 g       startup	00000000 __ram4_start__
00000000 g       .ram1	00000000 __ram1_free__
00000000 g       startup	00000000 __ram6_start__
08000000 g     O startup	000001a0 _vectors
200009c8 g       .ram0	00000000 __ram0_free__
200009c8 g       .ram0	00000000 __heap_base__
08001e80 g       .mstack	00000000 _etext
08001910 g     F .text	00000018 chSchRescheduleS
00000000 g       *ABS*	00000000 __ram5_end__
00000000 g       *ABS*	00000000 __ram5_size__
080001a0 g       startup	00000000 __fini_array_end
20000500 g       .pstack	00000000 __main_thread_stack_end__
20000500 g       .bss	00000000 _bss_start
2000a000 g       *ABS*	00000000 __heap_end__
00000000 g       *ABS*	00000000 __ram1_size__
00000000 g       .ram7	00000000 __ram7_free__
00002000 g       *ABS*	00000000 __ram4_size__
00000000 g       *ABS*	00000000 __ram1_end__
10002000 g       *ABS*	00000000 __ram4_end__
0000a000 g       *ABS*	00000000 __ram0_size__
08001a20 g     F .text	00000004 chSysHalt
200009c8 g       .bss	00000000 _bss_end
080001a0 g     F .text	00000000 Reset_Handler
00000000 g       .ram5	00000000 __ram5_free__
08001a30 g     F .text	00000002 __default_exit
00000000 g       *ABS*	00000000 __ram6_end__
00000000 g       .ram6	00000000 __ram6_free__
00000000 g       *ABS*	00000000 __ram7_size__
08000260 g     F .text	00000000 _port_switch
08001a40 g     F .text	00000002 __late_init
00000000 g       startup	00000000 __ram7_start__
00000000 g       *ABS*	00000000 __ram3_size__
08001e80 g       *ABS*	00000000 _textdata
00000000 g       startup	00000000 _text
080001a0 g       startup	00000000 __fini_array_start
00000000 g       *ABS*	00000000 __ram3_end__
00000000 g       *ABS*	00000000 __ram2_size__
00000000 g       startup	00000000 __ram1_start__
08001590 g     F .text	000002e0 main
00000000 g       *ABS*	00000000 __ram6_size__
00000000 g       .ram3	00000000 __ram3_free__
080001a0 g       startup	00000000 __init_array_end
08000270 g     F .text	00000000 _port_thread_start
00000000 g       *ABS*	00000000 __ram2_end__
20000400 g       .pstack	00000000 __process_stack_base__
20000500 g       .data	00000000 _data
00000000 g       startup	00000000 __ram2_start__
08000282 g     F .text	00000000 _port_switch_from_isr
00000000 g       *ABS*	00000000 __ram7_end__
20000400 g       .mstack	00000000 __main_stack_end__
20000500 g       .data	00000000 _edata
20000400 g       .pstack	00000000 __main_thread_stack_base__
20000000 g       startup	00000000 __ram0_start__
08000286 g       .text	00000000 _port_exit_from_isr
080001a0 g       startup	00000000 __init_array_start
00000000 g       startup	00000000 __ram5_start__
00000000 g       .ram2	00000000 __ram2_free__
10000000 g       .ram4	00000000 __ram4_free__
2000a000 g       *ABS*	00000000 __ram0_end__
20000000 g       .mstack	00000000 __main_stack_base__
00000400 g       *ABS*	00000000 __main_stack_size__
20000500 g       .pstack	00000000 __process_stack_end__
08001870 g     F .text	0000009c __early_init
00000000 g       startup	00000000 __ram3_start__
00000100 g       *ABS*	00000000 __process_stack_size__


