
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

080001c0 <Reset_Handler>:
 80001c0:	b672      	cpsid	i
 80001c2:	482e      	ldr	r0, [pc, #184]	; (800027c <endfiniloop+0x4>)
 80001c4:	f380 8809 	msr	PSP, r0
 80001c8:	f240 0000 	movw	r0, #0
 80001cc:	f2cc 0000 	movt	r0, #49152	; 0xc000
 80001d0:	f64e 7134 	movw	r1, #61236	; 0xef34
 80001d4:	f2ce 0100 	movt	r1, #57344	; 0xe000
 80001d8:	6008      	str	r0, [r1, #0]
 80001da:	f240 0000 	movw	r0, #0
 80001de:	f2c0 00f0 	movt	r0, #240	; 0xf0
 80001e2:	f64e 5188 	movw	r1, #60808	; 0xed88
 80001e6:	f2ce 0100 	movt	r1, #57344	; 0xe000
 80001ea:	6008      	str	r0, [r1, #0]
 80001ec:	f04f 0000 	mov.w	r0, #0
 80001f0:	eee1 0a10 	vmsr	fpscr, r0
 80001f4:	f64e 713c 	movw	r1, #61244	; 0xef3c
 80001f8:	f2ce 0100 	movt	r1, #57344	; 0xe000
 80001fc:	6008      	str	r0, [r1, #0]
 80001fe:	2006      	movs	r0, #6
 8000200:	f380 8814 	msr	CONTROL, r0
 8000204:	f3bf 8f6f 	isb	sy
 8000208:	f005 fcea 	bl	8005be0 <__early_init>
 800020c:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
 8000210:	491b      	ldr	r1, [pc, #108]	; (8000280 <endfiniloop+0x8>)
 8000212:	4a1c      	ldr	r2, [pc, #112]	; (8000284 <endfiniloop+0xc>)

08000214 <msloop>:
 8000214:	4291      	cmp	r1, r2
 8000216:	bf3c      	itt	cc
 8000218:	f841 0b04 	strcc.w	r0, [r1], #4
 800021c:	e7fa      	bcc.n	8000214 <msloop>
 800021e:	491a      	ldr	r1, [pc, #104]	; (8000288 <endfiniloop+0x10>)
 8000220:	4a16      	ldr	r2, [pc, #88]	; (800027c <endfiniloop+0x4>)

08000222 <psloop>:
 8000222:	4291      	cmp	r1, r2
 8000224:	bf3c      	itt	cc
 8000226:	f841 0b04 	strcc.w	r0, [r1], #4
 800022a:	e7fa      	bcc.n	8000222 <psloop>
 800022c:	4917      	ldr	r1, [pc, #92]	; (800028c <endfiniloop+0x14>)
 800022e:	4a18      	ldr	r2, [pc, #96]	; (8000290 <endfiniloop+0x18>)
 8000230:	4b18      	ldr	r3, [pc, #96]	; (8000294 <endfiniloop+0x1c>)

08000232 <dloop>:
 8000232:	429a      	cmp	r2, r3
 8000234:	bf3e      	ittt	cc
 8000236:	f851 0b04 	ldrcc.w	r0, [r1], #4
 800023a:	f842 0b04 	strcc.w	r0, [r2], #4
 800023e:	e7f8      	bcc.n	8000232 <dloop>
 8000240:	2000      	movs	r0, #0
 8000242:	4915      	ldr	r1, [pc, #84]	; (8000298 <endfiniloop+0x20>)
 8000244:	4a15      	ldr	r2, [pc, #84]	; (800029c <endfiniloop+0x24>)

08000246 <bloop>:
 8000246:	4291      	cmp	r1, r2
 8000248:	bf3c      	itt	cc
 800024a:	f841 0b04 	strcc.w	r0, [r1], #4
 800024e:	e7fa      	bcc.n	8000246 <bloop>
 8000250:	f005 fd66 	bl	8005d20 <__late_init>
 8000254:	4c12      	ldr	r4, [pc, #72]	; (80002a0 <endfiniloop+0x28>)
 8000256:	4d13      	ldr	r5, [pc, #76]	; (80002a4 <endfiniloop+0x2c>)

08000258 <initloop>:
 8000258:	42ac      	cmp	r4, r5
 800025a:	da03      	bge.n	8000264 <endinitloop>
 800025c:	f854 1b04 	ldr.w	r1, [r4], #4
 8000260:	4788      	blx	r1
 8000262:	e7f9      	b.n	8000258 <initloop>

08000264 <endinitloop>:
 8000264:	f005 f8e4 	bl	8005430 <main>
 8000268:	4c0f      	ldr	r4, [pc, #60]	; (80002a8 <endfiniloop+0x30>)
 800026a:	4d10      	ldr	r5, [pc, #64]	; (80002ac <endfiniloop+0x34>)

0800026c <finiloop>:
 800026c:	42ac      	cmp	r4, r5
 800026e:	da03      	bge.n	8000278 <endfiniloop>
 8000270:	f854 1b04 	ldr.w	r1, [r4], #4
 8000274:	4788      	blx	r1
 8000276:	e7f9      	b.n	800026c <finiloop>

08000278 <endfiniloop>:
 8000278:	f005 bd4a 	b.w	8005d10 <__default_exit>
 800027c:	20000800 	.word	0x20000800
 8000280:	20000000 	.word	0x20000000
 8000284:	20000400 	.word	0x20000400
 8000288:	20000400 	.word	0x20000400
 800028c:	08006a78 	.word	0x08006a78
 8000290:	20000800 	.word	0x20000800
 8000294:	200008b8 	.word	0x200008b8
 8000298:	200008b8 	.word	0x200008b8
 800029c:	20001730 	.word	0x20001730
 80002a0:	080001c0 	.word	0x080001c0
 80002a4:	080001c0 	.word	0x080001c0
 80002a8:	080001c0 	.word	0x080001c0
 80002ac:	080001c0 	.word	0x080001c0

080002b0 <_port_switch>:
 80002b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80002b4:	ed2d 8a10 	vpush	{s16-s31}
 80002b8:	f8c1 d00c 	str.w	sp, [r1, #12]
 80002bc:	f8d0 d00c 	ldr.w	sp, [r0, #12]
 80002c0:	ecbd 8a10 	vpop	{s16-s31}
 80002c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080002c8 <_port_thread_start>:
 80002c8:	2300      	movs	r3, #0
 80002ca:	f383 8811 	msr	BASEPRI, r3
 80002ce:	4628      	mov	r0, r5
 80002d0:	47a0      	blx	r4
 80002d2:	2000      	movs	r0, #0
 80002d4:	f005 fce4 	bl	8005ca0 <chThdExit>

080002d8 <_port_switch_from_isr>:
 80002d8:	f005 fd12 	bl	8005d00 <chSchDoReschedule>

080002dc <_port_exit_from_isr>:
 80002dc:	df00      	svc	0
 80002de:	e7fe      	b.n	80002de <_port_exit_from_isr+0x2>

080002e0 <chTMStartMeasurementX.constprop.56>:
 80002e0:	4b01      	ldr	r3, [pc, #4]	; (80002e8 <chTMStartMeasurementX.constprop.56+0x8>)
 80002e2:	685b      	ldr	r3, [r3, #4]
 80002e4:	6083      	str	r3, [r0, #8]
 80002e6:	4770      	bx	lr
 80002e8:	e0001000 	.word	0xe0001000
 80002ec:	00000000 	.word	0x00000000

080002f0 <chEvtGetAndClearEvents.constprop.36>:
 80002f0:	2320      	movs	r3, #32
 80002f2:	f383 8811 	msr	BASEPRI, r3
 80002f6:	4b04      	ldr	r3, [pc, #16]	; (8000308 <chEvtGetAndClearEvents.constprop.36+0x18>)
 80002f8:	699a      	ldr	r2, [r3, #24]
 80002fa:	2300      	movs	r3, #0
 80002fc:	6b50      	ldr	r0, [r2, #52]	; 0x34
 80002fe:	6353      	str	r3, [r2, #52]	; 0x34
 8000300:	f383 8811 	msr	BASEPRI, r3
 8000304:	4770      	bx	lr
 8000306:	bf00      	nop
 8000308:	20000930 	.word	0x20000930
 800030c:	00000000 	.word	0x00000000

08000310 <_pal_lld_setgroupmode.constprop.5>:
 8000310:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000314:	4a24      	ldr	r2, [pc, #144]	; (80003a8 <_pal_lld_setgroupmode.constprop.5+0x98>)
 8000316:	2100      	movs	r1, #0
 8000318:	2402      	movs	r4, #2
 800031a:	2607      	movs	r6, #7
 800031c:	250f      	movs	r5, #15
 800031e:	f04f 0c01 	mov.w	ip, #1
 8000322:	2703      	movs	r7, #3
 8000324:	e026      	b.n	8000374 <_pal_lld_setgroupmode.constprop.5+0x64>
 8000326:	f8d2 8020 	ldr.w	r8, [r2, #32]
 800032a:	ea03 0308 	and.w	r3, r3, r8
 800032e:	ea43 030e 	orr.w	r3, r3, lr
 8000332:	6213      	str	r3, [r2, #32]
 8000334:	6853      	ldr	r3, [r2, #4]
 8000336:	fa0c fe01 	lsl.w	lr, ip, r1
 800033a:	ea23 030e 	bic.w	r3, r3, lr
 800033e:	6053      	str	r3, [r2, #4]
 8000340:	004b      	lsls	r3, r1, #1
 8000342:	f8d2 e008 	ldr.w	lr, [r2, #8]
 8000346:	fa07 f303 	lsl.w	r3, r7, r3
 800034a:	43db      	mvns	r3, r3
 800034c:	ea0e 0e03 	and.w	lr, lr, r3
 8000350:	f8c2 e008 	str.w	lr, [r2, #8]
 8000354:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8000358:	ea03 0e0e 	and.w	lr, r3, lr
 800035c:	f8c2 e00c 	str.w	lr, [r2, #12]
 8000360:	f8d2 e000 	ldr.w	lr, [r2]
 8000364:	ea03 030e 	and.w	r3, r3, lr
 8000368:	4323      	orrs	r3, r4
 800036a:	6013      	str	r3, [r2, #0]
 800036c:	0840      	lsrs	r0, r0, #1
 800036e:	d018      	beq.n	80003a2 <_pal_lld_setgroupmode.constprop.5+0x92>
 8000370:	00a4      	lsls	r4, r4, #2
 8000372:	3101      	adds	r1, #1
 8000374:	f001 0e07 	and.w	lr, r1, #7
 8000378:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800037c:	fa05 f30e 	lsl.w	r3, r5, lr
 8000380:	f010 0f01 	tst.w	r0, #1
 8000384:	fa06 fe0e 	lsl.w	lr, r6, lr
 8000388:	ea6f 0303 	mvn.w	r3, r3
 800038c:	d0ee      	beq.n	800036c <_pal_lld_setgroupmode.constprop.5+0x5c>
 800038e:	2907      	cmp	r1, #7
 8000390:	d9c9      	bls.n	8000326 <_pal_lld_setgroupmode.constprop.5+0x16>
 8000392:	f8d2 8024 	ldr.w	r8, [r2, #36]	; 0x24
 8000396:	ea03 0308 	and.w	r3, r3, r8
 800039a:	ea43 030e 	orr.w	r3, r3, lr
 800039e:	6253      	str	r3, [r2, #36]	; 0x24
 80003a0:	e7c8      	b.n	8000334 <_pal_lld_setgroupmode.constprop.5+0x24>
 80003a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80003a6:	bf00      	nop
 80003a8:	40020000 	.word	0x40020000
 80003ac:	00000000 	.word	0x00000000

080003b0 <tmr>:
 80003b0:	4b01      	ldr	r3, [pc, #4]	; (80003b8 <tmr+0x8>)
 80003b2:	2201      	movs	r2, #1
 80003b4:	701a      	strb	r2, [r3, #0]
 80003b6:	4770      	bx	lr
 80003b8:	200014f8 	.word	0x200014f8
 80003bc:	00000000 	.word	0x00000000

080003c0 <_idle_thread>:
 80003c0:	e7fe      	b.n	80003c0 <_idle_thread>
 80003c2:	bf00      	nop
	...

080003d0 <chCoreAlloc>:
 80003d0:	4603      	mov	r3, r0
 80003d2:	2220      	movs	r2, #32
 80003d4:	f382 8811 	msr	BASEPRI, r2
 80003d8:	4908      	ldr	r1, [pc, #32]	; (80003fc <chCoreAlloc+0x2c>)
 80003da:	4a09      	ldr	r2, [pc, #36]	; (8000400 <chCoreAlloc+0x30>)
 80003dc:	6808      	ldr	r0, [r1, #0]
 80003de:	6812      	ldr	r2, [r2, #0]
 80003e0:	3307      	adds	r3, #7
 80003e2:	f023 0307 	bic.w	r3, r3, #7
 80003e6:	1a12      	subs	r2, r2, r0
 80003e8:	4293      	cmp	r3, r2
 80003ea:	bf9a      	itte	ls
 80003ec:	181b      	addls	r3, r3, r0
 80003ee:	600b      	strls	r3, [r1, #0]
 80003f0:	2000      	movhi	r0, #0
 80003f2:	2300      	movs	r3, #0
 80003f4:	f383 8811 	msr	BASEPRI, r3
 80003f8:	4770      	bx	lr
 80003fa:	bf00      	nop
 80003fc:	20000bac 	.word	0x20000bac
 8000400:	20000b30 	.word	0x20000b30
	...

08000410 <notify2>:
 8000410:	4a02      	ldr	r2, [pc, #8]	; (800041c <notify2+0xc>)
 8000412:	68d3      	ldr	r3, [r2, #12]
 8000414:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000418:	60d3      	str	r3, [r2, #12]
 800041a:	4770      	bx	lr
 800041c:	40004400 	.word	0x40004400

08000420 <bmk12_setup>:
 8000420:	4b02      	ldr	r3, [pc, #8]	; (800042c <bmk12_setup+0xc>)
 8000422:	2200      	movs	r2, #0
 8000424:	e9c3 3300 	strd	r3, r3, [r3]
 8000428:	609a      	str	r2, [r3, #8]
 800042a:	4770      	bx	lr
 800042c:	20000b9c 	.word	0x20000b9c

08000430 <bmk11_setup>:
 8000430:	4b02      	ldr	r3, [pc, #8]	; (800043c <bmk11_setup+0xc>)
 8000432:	2201      	movs	r2, #1
 8000434:	e9c3 3300 	strd	r3, r3, [r3]
 8000438:	609a      	str	r2, [r3, #8]
 800043a:	4770      	bx	lr
 800043c:	20000bb0 	.word	0x20000bb0

08000440 <notify>:
 8000440:	4770      	bx	lr
 8000442:	bf00      	nop
	...

08000450 <tmo>:
 8000450:	4770      	bx	lr
 8000452:	bf00      	nop
	...

08000460 <bmk7_setup>:
 8000460:	4b02      	ldr	r3, [pc, #8]	; (800046c <bmk7_setup+0xc>)
 8000462:	2200      	movs	r2, #0
 8000464:	e9c3 3300 	strd	r3, r3, [r3]
 8000468:	609a      	str	r2, [r3, #8]
 800046a:	4770      	bx	lr
 800046c:	20000bb0 	.word	0x20000bb0

08000470 <sys2_execute>:
 8000470:	2320      	movs	r3, #32
 8000472:	f383 8811 	msr	BASEPRI, r3
 8000476:	b662      	cpsie	i
 8000478:	b672      	cpsid	i
 800047a:	f383 8811 	msr	BASEPRI, r3
 800047e:	b662      	cpsie	i
 8000480:	2300      	movs	r3, #0
 8000482:	f383 8811 	msr	BASEPRI, r3
 8000486:	b662      	cpsie	i
 8000488:	4770      	bx	lr
 800048a:	bf00      	nop
 800048c:	0000      	movs	r0, r0
	...

08000490 <queues2_setup>:
 8000490:	b430      	push	{r4, r5}
 8000492:	4a08      	ldr	r2, [pc, #32]	; (80004b4 <queues2_setup+0x24>)
 8000494:	4b08      	ldr	r3, [pc, #32]	; (80004b8 <queues2_setup+0x28>)
 8000496:	4809      	ldr	r0, [pc, #36]	; (80004bc <queues2_setup+0x2c>)
 8000498:	601b      	str	r3, [r3, #0]
 800049a:	1d15      	adds	r5, r2, #4
 800049c:	2404      	movs	r4, #4
 800049e:	2100      	movs	r1, #0
 80004a0:	611d      	str	r5, [r3, #16]
 80004a2:	609c      	str	r4, [r3, #8]
 80004a4:	605b      	str	r3, [r3, #4]
 80004a6:	60da      	str	r2, [r3, #12]
 80004a8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80004ac:	e9c3 0107 	strd	r0, r1, [r3, #28]
 80004b0:	bc30      	pop	{r4, r5}
 80004b2:	4770      	bx	lr
 80004b4:	20000bc0 	.word	0x20000bc0
 80004b8:	20000888 	.word	0x20000888
 80004bc:	08000441 	.word	0x08000441

080004c0 <queues1_setup>:
 80004c0:	4a08      	ldr	r2, [pc, #32]	; (80004e4 <queues1_setup+0x24>)
 80004c2:	4b09      	ldr	r3, [pc, #36]	; (80004e8 <queues1_setup+0x28>)
 80004c4:	4809      	ldr	r0, [pc, #36]	; (80004ec <queues1_setup+0x2c>)
 80004c6:	b410      	push	{r4}
 80004c8:	2100      	movs	r1, #0
 80004ca:	1d14      	adds	r4, r2, #4
 80004cc:	611c      	str	r4, [r3, #16]
 80004ce:	601b      	str	r3, [r3, #0]
 80004d0:	605b      	str	r3, [r3, #4]
 80004d2:	60da      	str	r2, [r3, #12]
 80004d4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80004d8:	61d8      	str	r0, [r3, #28]
 80004da:	6099      	str	r1, [r3, #8]
 80004dc:	6219      	str	r1, [r3, #32]
 80004de:	f85d 4b04 	ldr.w	r4, [sp], #4
 80004e2:	4770      	bx	lr
 80004e4:	20000bc0 	.word	0x20000bc0
 80004e8:	20000810 	.word	0x20000810
 80004ec:	08000441 	.word	0x08000441

080004f0 <dyn2_setup>:
 80004f0:	4b03      	ldr	r3, [pc, #12]	; (8000500 <dyn2_setup+0x10>)
 80004f2:	2200      	movs	r2, #0
 80004f4:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 80004f8:	e9c3 2100 	strd	r2, r1, [r3]
 80004fc:	609a      	str	r2, [r3, #8]
 80004fe:	4770      	bx	lr
 8000500:	20000b90 	.word	0x20000b90
	...

08000510 <dyn1_setup>:
 8000510:	4b09      	ldr	r3, [pc, #36]	; (8000538 <dyn1_setup+0x28>)
 8000512:	490a      	ldr	r1, [pc, #40]	; (800053c <dyn1_setup+0x2c>)
 8000514:	b410      	push	{r4}
 8000516:	2200      	movs	r2, #0
 8000518:	f640 1408 	movw	r4, #2312	; 0x908
 800051c:	f103 0010 	add.w	r0, r3, #16
 8000520:	e9c1 2400 	strd	r2, r4, [r1]
 8000524:	6099      	str	r1, [r3, #8]
 8000526:	e9c3 0004 	strd	r0, r0, [r3, #16]
 800052a:	601a      	str	r2, [r3, #0]
 800052c:	60da      	str	r2, [r3, #12]
 800052e:	619a      	str	r2, [r3, #24]
 8000530:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000534:	4770      	bx	lr
 8000536:	bf00      	nop
 8000538:	20000b38 	.word	0x20000b38
 800053c:	20000bc0 	.word	0x20000bc0

08000540 <dyn3_setup>:
 8000540:	f7ff bfe6 	b.w	8000510 <dyn1_setup>
	...

08000550 <null_provider>:
 8000550:	2000      	movs	r0, #0
 8000552:	4770      	bx	lr
	...

08000560 <pools1_setup>:
 8000560:	4b03      	ldr	r3, [pc, #12]	; (8000570 <pools1_setup+0x10>)
 8000562:	2200      	movs	r2, #0
 8000564:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8000568:	e9c3 2100 	strd	r2, r1, [r3]
 800056c:	609a      	str	r2, [r3, #8]
 800056e:	4770      	bx	lr
 8000570:	2000087c 	.word	0x2000087c
	...

08000580 <heap1_setup>:
 8000580:	4b09      	ldr	r3, [pc, #36]	; (80005a8 <heap1_setup+0x28>)
 8000582:	490a      	ldr	r1, [pc, #40]	; (80005ac <heap1_setup+0x2c>)
 8000584:	b410      	push	{r4}
 8000586:	2200      	movs	r2, #0
 8000588:	f640 1408 	movw	r4, #2312	; 0x908
 800058c:	f103 0010 	add.w	r0, r3, #16
 8000590:	e9c1 2400 	strd	r2, r4, [r1]
 8000594:	6099      	str	r1, [r3, #8]
 8000596:	e9c3 0004 	strd	r0, r0, [r3, #16]
 800059a:	601a      	str	r2, [r3, #0]
 800059c:	60da      	str	r2, [r3, #12]
 800059e:	619a      	str	r2, [r3, #24]
 80005a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80005a4:	4770      	bx	lr
 80005a6:	bf00      	nop
 80005a8:	200014d8 	.word	0x200014d8
 80005ac:	20000bc0 	.word	0x20000bc0

080005b0 <evt1_setup>:
 80005b0:	f7ff be9e 	b.w	80002f0 <chEvtGetAndClearEvents.constprop.36>
	...

080005c0 <evt3_setup>:
 80005c0:	f7ff bff6 	b.w	80005b0 <evt1_setup>
	...

080005d0 <evt2_setup>:
 80005d0:	f7ff bfee 	b.w	80005b0 <evt1_setup>
	...

080005e0 <mbox1_setup>:
 80005e0:	b430      	push	{r4, r5}
 80005e2:	4b0b      	ldr	r3, [pc, #44]	; (8000610 <mbox1_setup+0x30>)
 80005e4:	4a0b      	ldr	r2, [pc, #44]	; (8000614 <mbox1_setup+0x34>)
 80005e6:	601a      	str	r2, [r3, #0]
 80005e8:	f102 0514 	add.w	r5, r2, #20
 80005ec:	2405      	movs	r4, #5
 80005ee:	f103 011c 	add.w	r1, r3, #28
 80005f2:	2000      	movs	r0, #0
 80005f4:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80005f8:	f103 0210 	add.w	r2, r3, #16
 80005fc:	605d      	str	r5, [r3, #4]
 80005fe:	625c      	str	r4, [r3, #36]	; 0x24
 8000600:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8000604:	6219      	str	r1, [r3, #32]
 8000606:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800060a:	bc30      	pop	{r4, r5}
 800060c:	4770      	bx	lr
 800060e:	bf00      	nop
 8000610:	20000854 	.word	0x20000854
 8000614:	20000bc0 	.word	0x20000bc0
	...

08000620 <mtx8_setup>:
 8000620:	4906      	ldr	r1, [pc, #24]	; (800063c <mtx8_setup+0x1c>)
 8000622:	4a07      	ldr	r2, [pc, #28]	; (8000640 <mtx8_setup+0x20>)
 8000624:	4b07      	ldr	r3, [pc, #28]	; (8000644 <mtx8_setup+0x24>)
 8000626:	6009      	str	r1, [r1, #0]
 8000628:	2000      	movs	r0, #0
 800062a:	6049      	str	r1, [r1, #4]
 800062c:	e9c2 2200 	strd	r2, r2, [r2]
 8000630:	6090      	str	r0, [r2, #8]
 8000632:	6098      	str	r0, [r3, #8]
 8000634:	e9c3 3300 	strd	r3, r3, [r3]
 8000638:	4770      	bx	lr
 800063a:	bf00      	nop
 800063c:	20000800 	.word	0x20000800
 8000640:	20000834 	.word	0x20000834
 8000644:	20000844 	.word	0x20000844
	...

08000650 <mtx6_setup>:
 8000650:	4a04      	ldr	r2, [pc, #16]	; (8000664 <mtx6_setup+0x14>)
 8000652:	4b05      	ldr	r3, [pc, #20]	; (8000668 <mtx6_setup+0x18>)
 8000654:	6012      	str	r2, [r2, #0]
 8000656:	2100      	movs	r1, #0
 8000658:	6052      	str	r2, [r2, #4]
 800065a:	e9c3 3300 	strd	r3, r3, [r3]
 800065e:	6099      	str	r1, [r3, #8]
 8000660:	4770      	bx	lr
 8000662:	bf00      	nop
 8000664:	20000800 	.word	0x20000800
 8000668:	20000834 	.word	0x20000834
 800066c:	00000000 	.word	0x00000000

08000670 <mtx7_setup>:
 8000670:	f7ff bfee 	b.w	8000650 <mtx6_setup>
	...

08000680 <mtx4_setup>:
 8000680:	4a04      	ldr	r2, [pc, #16]	; (8000694 <mtx4_setup+0x14>)
 8000682:	4b05      	ldr	r3, [pc, #20]	; (8000698 <mtx4_setup+0x18>)
 8000684:	6012      	str	r2, [r2, #0]
 8000686:	2100      	movs	r1, #0
 8000688:	e9c2 2101 	strd	r2, r1, [r2, #4]
 800068c:	6099      	str	r1, [r3, #8]
 800068e:	e9c3 3300 	strd	r3, r3, [r3]
 8000692:	4770      	bx	lr
 8000694:	20000834 	.word	0x20000834
 8000698:	20000844 	.word	0x20000844
 800069c:	00000000 	.word	0x00000000

080006a0 <mtx1_setup>:
 80006a0:	4b02      	ldr	r3, [pc, #8]	; (80006ac <mtx1_setup+0xc>)
 80006a2:	2200      	movs	r2, #0
 80006a4:	e9c3 3300 	strd	r3, r3, [r3]
 80006a8:	609a      	str	r2, [r3, #8]
 80006aa:	4770      	bx	lr
 80006ac:	20000834 	.word	0x20000834

080006b0 <mtx5_setup>:
 80006b0:	f7ff bff6 	b.w	80006a0 <mtx1_setup>
	...

080006c0 <sem1_setup>:
 80006c0:	4b02      	ldr	r3, [pc, #8]	; (80006cc <sem1_setup+0xc>)
 80006c2:	2200      	movs	r2, #0
 80006c4:	e9c3 3300 	strd	r3, r3, [r3]
 80006c8:	609a      	str	r2, [r3, #8]
 80006ca:	4770      	bx	lr
 80006cc:	200008ac 	.word	0x200008ac

080006d0 <sem3_setup>:
 80006d0:	f7ff bff6 	b.w	80006c0 <sem1_setup>
	...

080006e0 <sem2_setup>:
 80006e0:	f7ff bfee 	b.w	80006c0 <sem1_setup>
	...

080006f0 <test_printn.part.1>:
 80006f0:	b320      	cbz	r0, 800073c <test_printn.part.1+0x4c>
 80006f2:	b570      	push	{r4, r5, r6, lr}
 80006f4:	b084      	sub	sp, #16
 80006f6:	466d      	mov	r5, sp
 80006f8:	462c      	mov	r4, r5
 80006fa:	4e11      	ldr	r6, [pc, #68]	; (8000740 <test_printn.part.1+0x50>)
 80006fc:	e000      	b.n	8000700 <test_printn.part.1+0x10>
 80006fe:	4614      	mov	r4, r2
 8000700:	fba6 2300 	umull	r2, r3, r6, r0
 8000704:	08db      	lsrs	r3, r3, #3
 8000706:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 800070a:	eba0 0041 	sub.w	r0, r0, r1, lsl #1
 800070e:	f100 0130 	add.w	r1, r0, #48	; 0x30
 8000712:	4622      	mov	r2, r4
 8000714:	b2c9      	uxtb	r1, r1
 8000716:	f802 1b01 	strb.w	r1, [r2], #1
 800071a:	4618      	mov	r0, r3
 800071c:	2b00      	cmp	r3, #0
 800071e:	d1ee      	bne.n	80006fe <test_printn.part.1+0xe>
 8000720:	42aa      	cmp	r2, r5
 8000722:	d909      	bls.n	8000738 <test_printn.part.1+0x48>
 8000724:	4e07      	ldr	r6, [pc, #28]	; (8000744 <test_printn.part.1+0x54>)
 8000726:	e001      	b.n	800072c <test_printn.part.1+0x3c>
 8000728:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
 800072c:	6830      	ldr	r0, [r6, #0]
 800072e:	6803      	ldr	r3, [r0, #0]
 8000730:	689b      	ldr	r3, [r3, #8]
 8000732:	4798      	blx	r3
 8000734:	42a5      	cmp	r5, r4
 8000736:	d1f7      	bne.n	8000728 <test_printn.part.1+0x38>
 8000738:	b004      	add	sp, #16
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	4770      	bx	lr
 800073e:	bf00      	nop
 8000740:	cccccccd 	.word	0xcccccccd
 8000744:	20000b08 	.word	0x20000b08
	...

08000750 <test_printn>:
 8000750:	b928      	cbnz	r0, 800075e <test_printn+0xe>
 8000752:	4b04      	ldr	r3, [pc, #16]	; (8000764 <test_printn+0x14>)
 8000754:	6818      	ldr	r0, [r3, #0]
 8000756:	6803      	ldr	r3, [r0, #0]
 8000758:	2130      	movs	r1, #48	; 0x30
 800075a:	689b      	ldr	r3, [r3, #8]
 800075c:	4718      	bx	r3
 800075e:	f7ff bfc7 	b.w	80006f0 <test_printn.part.1>
 8000762:	bf00      	nop
 8000764:	20000b08 	.word	0x20000b08
	...

08000770 <print_line>:
 8000770:	b570      	push	{r4, r5, r6, lr}
 8000772:	4d08      	ldr	r5, [pc, #32]	; (8000794 <print_line+0x24>)
 8000774:	244c      	movs	r4, #76	; 0x4c
 8000776:	6828      	ldr	r0, [r5, #0]
 8000778:	6803      	ldr	r3, [r0, #0]
 800077a:	212d      	movs	r1, #45	; 0x2d
 800077c:	689b      	ldr	r3, [r3, #8]
 800077e:	4798      	blx	r3
 8000780:	3c01      	subs	r4, #1
 8000782:	d1f8      	bne.n	8000776 <print_line+0x6>
 8000784:	6828      	ldr	r0, [r5, #0]
 8000786:	4904      	ldr	r1, [pc, #16]	; (8000798 <print_line+0x28>)
 8000788:	6803      	ldr	r3, [r0, #0]
 800078a:	2202      	movs	r2, #2
 800078c:	681b      	ldr	r3, [r3, #0]
 800078e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000792:	4718      	bx	r3
 8000794:	20000b08 	.word	0x20000b08
 8000798:	080062b0 	.word	0x080062b0
 800079c:	00000000 	.word	0x00000000

080007a0 <test_terminate_threads>:
 80007a0:	4b0a      	ldr	r3, [pc, #40]	; (80007cc <test_terminate_threads+0x2c>)
 80007a2:	b430      	push	{r4, r5}
 80007a4:	f103 0014 	add.w	r0, r3, #20
 80007a8:	2520      	movs	r5, #32
 80007aa:	2400      	movs	r4, #0
 80007ac:	f853 2b04 	ldr.w	r2, [r3], #4
 80007b0:	b13a      	cbz	r2, 80007c2 <test_terminate_threads+0x22>
 80007b2:	f385 8811 	msr	BASEPRI, r5
 80007b6:	7f51      	ldrb	r1, [r2, #29]
 80007b8:	f041 0104 	orr.w	r1, r1, #4
 80007bc:	7751      	strb	r1, [r2, #29]
 80007be:	f384 8811 	msr	BASEPRI, r4
 80007c2:	4283      	cmp	r3, r0
 80007c4:	d1f2      	bne.n	80007ac <test_terminate_threads+0xc>
 80007c6:	bc30      	pop	{r4, r5}
 80007c8:	4770      	bx	lr
 80007ca:	bf00      	nop
 80007cc:	200014fc 	.word	0x200014fc

080007d0 <_test_assert_time_window>:
 80007d0:	b410      	push	{r4}
 80007d2:	2320      	movs	r3, #32
 80007d4:	f383 8811 	msr	BASEPRI, r3
 80007d8:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 80007dc:	2300      	movs	r3, #0
 80007de:	6a64      	ldr	r4, [r4, #36]	; 0x24
 80007e0:	f383 8811 	msr	BASEPRI, r3
 80007e4:	1a64      	subs	r4, r4, r1
 80007e6:	1a52      	subs	r2, r2, r1
 80007e8:	4294      	cmp	r4, r2
 80007ea:	d306      	bcc.n	80007fa <_test_assert_time_window+0x2a>
 80007ec:	4c05      	ldr	r4, [pc, #20]	; (8000804 <_test_assert_time_window+0x34>)
 80007ee:	4906      	ldr	r1, [pc, #24]	; (8000808 <_test_assert_time_window+0x38>)
 80007f0:	4a06      	ldr	r2, [pc, #24]	; (800080c <_test_assert_time_window+0x3c>)
 80007f2:	2301      	movs	r3, #1
 80007f4:	7023      	strb	r3, [r4, #0]
 80007f6:	700b      	strb	r3, [r1, #0]
 80007f8:	6010      	str	r0, [r2, #0]
 80007fa:	4618      	mov	r0, r3
 80007fc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000800:	4770      	bx	lr
 8000802:	bf00      	nop
 8000804:	200014d0 	.word	0x200014d0
 8000808:	20000b8c 	.word	0x20000b8c
 800080c:	20000b34 	.word	0x20000b34

08000810 <_test_assert_sequence>:
 8000810:	b4f0      	push	{r4, r5, r6, r7}
 8000812:	4e0e      	ldr	r6, [pc, #56]	; (800084c <_test_assert_sequence+0x3c>)
 8000814:	4f0e      	ldr	r7, [pc, #56]	; (8000850 <_test_assert_sequence+0x40>)
 8000816:	6835      	ldr	r5, [r6, #0]
 8000818:	3901      	subs	r1, #1
 800081a:	463b      	mov	r3, r7
 800081c:	e003      	b.n	8000826 <_test_assert_sequence+0x16>
 800081e:	f813 4b01 	ldrb.w	r4, [r3], #1
 8000822:	4294      	cmp	r4, r2
 8000824:	d108      	bne.n	8000838 <_test_assert_sequence+0x28>
 8000826:	429d      	cmp	r5, r3
 8000828:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800082c:	d8f7      	bhi.n	800081e <_test_assert_sequence+0xe>
 800082e:	b91a      	cbnz	r2, 8000838 <_test_assert_sequence+0x28>
 8000830:	6037      	str	r7, [r6, #0]
 8000832:	4610      	mov	r0, r2
 8000834:	bcf0      	pop	{r4, r5, r6, r7}
 8000836:	4770      	bx	lr
 8000838:	4c06      	ldr	r4, [pc, #24]	; (8000854 <_test_assert_sequence+0x44>)
 800083a:	4907      	ldr	r1, [pc, #28]	; (8000858 <_test_assert_sequence+0x48>)
 800083c:	4b07      	ldr	r3, [pc, #28]	; (800085c <_test_assert_sequence+0x4c>)
 800083e:	2201      	movs	r2, #1
 8000840:	7022      	strb	r2, [r4, #0]
 8000842:	6018      	str	r0, [r3, #0]
 8000844:	700a      	strb	r2, [r1, #0]
 8000846:	4610      	mov	r0, r2
 8000848:	bcf0      	pop	{r4, r5, r6, r7}
 800084a:	4770      	bx	lr
 800084c:	20001520 	.word	0x20001520
 8000850:	20001510 	.word	0x20001510
 8000854:	200014d0 	.word	0x200014d0
 8000858:	20000b8c 	.word	0x20000b8c
 800085c:	20000b34 	.word	0x20000b34

08000860 <_test_assert>:
 8000860:	b959      	cbnz	r1, 800087a <_test_assert+0x1a>
 8000862:	b410      	push	{r4}
 8000864:	4906      	ldr	r1, [pc, #24]	; (8000880 <_test_assert+0x20>)
 8000866:	4c07      	ldr	r4, [pc, #28]	; (8000884 <_test_assert+0x24>)
 8000868:	4a07      	ldr	r2, [pc, #28]	; (8000888 <_test_assert+0x28>)
 800086a:	2301      	movs	r3, #1
 800086c:	7023      	strb	r3, [r4, #0]
 800086e:	6010      	str	r0, [r2, #0]
 8000870:	700b      	strb	r3, [r1, #0]
 8000872:	4618      	mov	r0, r3
 8000874:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000878:	4770      	bx	lr
 800087a:	2300      	movs	r3, #0
 800087c:	4618      	mov	r0, r3
 800087e:	4770      	bx	lr
 8000880:	20000b8c 	.word	0x20000b8c
 8000884:	200014d0 	.word	0x200014d0
 8000888:	20000b34 	.word	0x20000b34
 800088c:	00000000 	.word	0x00000000

08000890 <test_emit_token>:
 8000890:	2320      	movs	r3, #32
 8000892:	f383 8811 	msr	BASEPRI, r3
 8000896:	4b04      	ldr	r3, [pc, #16]	; (80008a8 <test_emit_token+0x18>)
 8000898:	681a      	ldr	r2, [r3, #0]
 800089a:	1c51      	adds	r1, r2, #1
 800089c:	6019      	str	r1, [r3, #0]
 800089e:	7010      	strb	r0, [r2, #0]
 80008a0:	2300      	movs	r3, #0
 80008a2:	f383 8811 	msr	BASEPRI, r3
 80008a6:	4770      	bx	lr
 80008a8:	20001520 	.word	0x20001520
 80008ac:	00000000 	.word	0x00000000

080008b0 <h3>:
 80008b0:	2043      	movs	r0, #67	; 0x43
 80008b2:	f7ff bfed 	b.w	8000890 <test_emit_token>
 80008b6:	bf00      	nop
	...

080008c0 <h2>:
 80008c0:	2042      	movs	r0, #66	; 0x42
 80008c2:	f7ff bfe5 	b.w	8000890 <test_emit_token>
 80008c6:	bf00      	nop
	...

080008d0 <h1>:
 80008d0:	2041      	movs	r0, #65	; 0x41
 80008d2:	f7ff bfdd 	b.w	8000890 <test_emit_token>
 80008d6:	bf00      	nop
	...

080008e0 <thread.lto_priv.59>:
 80008e0:	7800      	ldrb	r0, [r0, #0]
 80008e2:	f7ff bfd5 	b.w	8000890 <test_emit_token>
 80008e6:	bf00      	nop
	...

080008f0 <thread.lto_priv.61>:
 80008f0:	f7ff bff6 	b.w	80008e0 <thread.lto_priv.59>
	...

08000900 <test_println>:
 8000900:	b570      	push	{r4, r5, r6, lr}
 8000902:	7801      	ldrb	r1, [r0, #0]
 8000904:	b189      	cbz	r1, 800092a <test_println+0x2a>
 8000906:	4d0a      	ldr	r5, [pc, #40]	; (8000930 <test_println+0x30>)
 8000908:	4604      	mov	r4, r0
 800090a:	6828      	ldr	r0, [r5, #0]
 800090c:	6803      	ldr	r3, [r0, #0]
 800090e:	689b      	ldr	r3, [r3, #8]
 8000910:	4798      	blx	r3
 8000912:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000916:	2900      	cmp	r1, #0
 8000918:	d1f7      	bne.n	800090a <test_println+0xa>
 800091a:	6828      	ldr	r0, [r5, #0]
 800091c:	4905      	ldr	r1, [pc, #20]	; (8000934 <test_println+0x34>)
 800091e:	6803      	ldr	r3, [r0, #0]
 8000920:	2202      	movs	r2, #2
 8000922:	681b      	ldr	r3, [r3, #0]
 8000924:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000928:	4718      	bx	r3
 800092a:	4d01      	ldr	r5, [pc, #4]	; (8000930 <test_println+0x30>)
 800092c:	e7f5      	b.n	800091a <test_println+0x1a>
 800092e:	bf00      	nop
 8000930:	20000b08 	.word	0x20000b08
 8000934:	080062b0 	.word	0x080062b0
	...

08000940 <test_print>:
 8000940:	7801      	ldrb	r1, [r0, #0]
 8000942:	b159      	cbz	r1, 800095c <test_print+0x1c>
 8000944:	b538      	push	{r3, r4, r5, lr}
 8000946:	4d06      	ldr	r5, [pc, #24]	; (8000960 <test_print+0x20>)
 8000948:	4604      	mov	r4, r0
 800094a:	6828      	ldr	r0, [r5, #0]
 800094c:	6803      	ldr	r3, [r0, #0]
 800094e:	689b      	ldr	r3, [r3, #8]
 8000950:	4798      	blx	r3
 8000952:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000956:	2900      	cmp	r1, #0
 8000958:	d1f7      	bne.n	800094a <test_print+0xa>
 800095a:	bd38      	pop	{r3, r4, r5, pc}
 800095c:	4770      	bx	lr
 800095e:	bf00      	nop
 8000960:	20000b08 	.word	0x20000b08
	...

08000970 <_port_irq_epilogue>:
 8000970:	2320      	movs	r3, #32
 8000972:	f383 8811 	msr	BASEPRI, r3
 8000976:	4b14      	ldr	r3, [pc, #80]	; (80009c8 <_port_irq_epilogue+0x58>)
 8000978:	685b      	ldr	r3, [r3, #4]
 800097a:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 800097e:	d102      	bne.n	8000986 <_port_irq_epilogue+0x16>
 8000980:	f383 8811 	msr	BASEPRI, r3
 8000984:	4770      	bx	lr
 8000986:	b480      	push	{r7}
 8000988:	af00      	add	r7, sp, #0
 800098a:	eef1 3a10 	vmrs	r3, fpscr
 800098e:	f3ef 8309 	mrs	r3, PSP
 8000992:	4a0e      	ldr	r2, [pc, #56]	; (80009cc <_port_irq_epilogue+0x5c>)
 8000994:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8000998:	68d2      	ldr	r2, [r2, #12]
 800099a:	f843 2c08 	str.w	r2, [r3, #-8]
 800099e:	f843 1c4c 	str.w	r1, [r3, #-76]
 80009a2:	f1a3 0268 	sub.w	r2, r3, #104	; 0x68
 80009a6:	f382 8809 	msr	PSP, r2
 80009aa:	4a09      	ldr	r2, [pc, #36]	; (80009d0 <_port_irq_epilogue+0x60>)
 80009ac:	6811      	ldr	r1, [r2, #0]
 80009ae:	6992      	ldr	r2, [r2, #24]
 80009b0:	6889      	ldr	r1, [r1, #8]
 80009b2:	6892      	ldr	r2, [r2, #8]
 80009b4:	4291      	cmp	r1, r2
 80009b6:	bf8c      	ite	hi
 80009b8:	4a06      	ldrhi	r2, [pc, #24]	; (80009d4 <_port_irq_epilogue+0x64>)
 80009ba:	4a07      	ldrls	r2, [pc, #28]	; (80009d8 <_port_irq_epilogue+0x68>)
 80009bc:	f843 2c50 	str.w	r2, [r3, #-80]
 80009c0:	46bd      	mov	sp, r7
 80009c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009c6:	4770      	bx	lr
 80009c8:	e000ed00 	.word	0xe000ed00
 80009cc:	e000ef30 	.word	0xe000ef30
 80009d0:	20000930 	.word	0x20000930
 80009d4:	080002d9 	.word	0x080002d9
 80009d8:	080002dc 	.word	0x080002dc
 80009dc:	00000000 	.word	0x00000000

080009e0 <VectorB0>:
 80009e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009e4:	f04f 4680 	mov.w	r6, #1073741824	; 0x40000000
 80009e8:	6933      	ldr	r3, [r6, #16]
 80009ea:	079b      	lsls	r3, r3, #30
 80009ec:	d403      	bmi.n	80009f6 <VectorB0+0x16>
 80009ee:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009f2:	f7ff bfbd 	b.w	8000970 <_port_irq_epilogue>
 80009f6:	2500      	movs	r5, #0
 80009f8:	6135      	str	r5, [r6, #16]
 80009fa:	2720      	movs	r7, #32
 80009fc:	f387 8811 	msr	BASEPRI, r7
 8000a00:	4c1b      	ldr	r4, [pc, #108]	; (8000a70 <VectorB0+0x90>)
 8000a02:	6a71      	ldr	r1, [r6, #36]	; 0x24
 8000a04:	69e3      	ldr	r3, [r4, #28]
 8000a06:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000a08:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8000a0c:	1a88      	subs	r0, r1, r2
 8000a0e:	4560      	cmp	r0, ip
 8000a10:	f104 081c 	add.w	r8, r4, #28
 8000a14:	d319      	bcc.n	8000a4a <VectorB0+0x6a>
 8000a16:	6819      	ldr	r1, [r3, #0]
 8000a18:	f8d3 900c 	ldr.w	r9, [r3, #12]
 8000a1c:	4462      	add	r2, ip
 8000a1e:	4541      	cmp	r1, r8
 8000a20:	62a2      	str	r2, [r4, #40]	; 0x28
 8000a22:	f8c1 8004 	str.w	r8, [r1, #4]
 8000a26:	61e1      	str	r1, [r4, #28]
 8000a28:	60dd      	str	r5, [r3, #12]
 8000a2a:	bf08      	it	eq
 8000a2c:	60f5      	streq	r5, [r6, #12]
 8000a2e:	f385 8811 	msr	BASEPRI, r5
 8000a32:	6918      	ldr	r0, [r3, #16]
 8000a34:	47c8      	blx	r9
 8000a36:	f387 8811 	msr	BASEPRI, r7
 8000a3a:	69e3      	ldr	r3, [r4, #28]
 8000a3c:	6a71      	ldr	r1, [r6, #36]	; 0x24
 8000a3e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000a40:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8000a44:	1a88      	subs	r0, r1, r2
 8000a46:	4584      	cmp	ip, r0
 8000a48:	d9e5      	bls.n	8000a16 <VectorB0+0x36>
 8000a4a:	4543      	cmp	r3, r8
 8000a4c:	d008      	beq.n	8000a60 <VectorB0+0x80>
 8000a4e:	4462      	add	r2, ip
 8000a50:	1a52      	subs	r2, r2, r1
 8000a52:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000a56:	2a02      	cmp	r2, #2
 8000a58:	bf2c      	ite	cs
 8000a5a:	188a      	addcs	r2, r1, r2
 8000a5c:	1c8a      	addcc	r2, r1, #2
 8000a5e:	635a      	str	r2, [r3, #52]	; 0x34
 8000a60:	2300      	movs	r3, #0
 8000a62:	f383 8811 	msr	BASEPRI, r3
 8000a66:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a6a:	f7ff bf81 	b.w	8000970 <_port_irq_epilogue>
 8000a6e:	bf00      	nop
 8000a70:	20000930 	.word	0x20000930
	...

08000a80 <SVC_Handler>:
 8000a80:	b480      	push	{r7}
 8000a82:	4a09      	ldr	r2, [pc, #36]	; (8000aa8 <SVC_Handler+0x28>)
 8000a84:	6853      	ldr	r3, [r2, #4]
 8000a86:	f023 0301 	bic.w	r3, r3, #1
 8000a8a:	af00      	add	r7, sp, #0
 8000a8c:	6053      	str	r3, [r2, #4]
 8000a8e:	f3ef 8309 	mrs	r3, PSP
 8000a92:	3368      	adds	r3, #104	; 0x68
 8000a94:	f383 8809 	msr	PSP, r3
 8000a98:	2300      	movs	r3, #0
 8000a9a:	f383 8811 	msr	BASEPRI, r3
 8000a9e:	46bd      	mov	sp, r7
 8000aa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop
 8000aa8:	e000ef30 	.word	0xe000ef30
 8000aac:	00000000 	.word	0x00000000

08000ab0 <chPoolAlloc>:
 8000ab0:	b508      	push	{r3, lr}
 8000ab2:	2220      	movs	r2, #32
 8000ab4:	4603      	mov	r3, r0
 8000ab6:	f382 8811 	msr	BASEPRI, r2
 8000aba:	6800      	ldr	r0, [r0, #0]
 8000abc:	b128      	cbz	r0, 8000aca <chPoolAlloc+0x1a>
 8000abe:	6802      	ldr	r2, [r0, #0]
 8000ac0:	601a      	str	r2, [r3, #0]
 8000ac2:	2300      	movs	r3, #0
 8000ac4:	f383 8811 	msr	BASEPRI, r3
 8000ac8:	bd08      	pop	{r3, pc}
 8000aca:	689a      	ldr	r2, [r3, #8]
 8000acc:	2a00      	cmp	r2, #0
 8000ace:	d0f8      	beq.n	8000ac2 <chPoolAlloc+0x12>
 8000ad0:	6858      	ldr	r0, [r3, #4]
 8000ad2:	4790      	blx	r2
 8000ad4:	2300      	movs	r3, #0
 8000ad6:	f383 8811 	msr	BASEPRI, r3
 8000ada:	bd08      	pop	{r3, pc}
 8000adc:	0000      	movs	r0, r0
	...

08000ae0 <pools1_execute>:
 8000ae0:	b570      	push	{r4, r5, r6, lr}
 8000ae2:	4b31      	ldr	r3, [pc, #196]	; (8000ba8 <pools1_execute+0xc8>)
 8000ae4:	4c31      	ldr	r4, [pc, #196]	; (8000bac <pools1_execute+0xcc>)
 8000ae6:	2205      	movs	r2, #5
 8000ae8:	2520      	movs	r5, #32
 8000aea:	2000      	movs	r0, #0
 8000aec:	f385 8811 	msr	BASEPRI, r5
 8000af0:	6821      	ldr	r1, [r4, #0]
 8000af2:	6019      	str	r1, [r3, #0]
 8000af4:	6023      	str	r3, [r4, #0]
 8000af6:	f380 8811 	msr	BASEPRI, r0
 8000afa:	6861      	ldr	r1, [r4, #4]
 8000afc:	3a01      	subs	r2, #1
 8000afe:	440b      	add	r3, r1
 8000b00:	d1f4      	bne.n	8000aec <pools1_execute+0xc>
 8000b02:	4e2a      	ldr	r6, [pc, #168]	; (8000bac <pools1_execute+0xcc>)
 8000b04:	2505      	movs	r5, #5
 8000b06:	4630      	mov	r0, r6
 8000b08:	f7ff ffd2 	bl	8000ab0 <chPoolAlloc>
 8000b0c:	1c01      	adds	r1, r0, #0
 8000b0e:	bf18      	it	ne
 8000b10:	2101      	movne	r1, #1
 8000b12:	2001      	movs	r0, #1
 8000b14:	f7ff fea4 	bl	8000860 <_test_assert>
 8000b18:	bba0      	cbnz	r0, 8000b84 <pools1_execute+0xa4>
 8000b1a:	3d01      	subs	r5, #1
 8000b1c:	d1f3      	bne.n	8000b06 <pools1_execute+0x26>
 8000b1e:	4823      	ldr	r0, [pc, #140]	; (8000bac <pools1_execute+0xcc>)
 8000b20:	f7ff ffc6 	bl	8000ab0 <chPoolAlloc>
 8000b24:	fab0 f180 	clz	r1, r0
 8000b28:	0949      	lsrs	r1, r1, #5
 8000b2a:	2002      	movs	r0, #2
 8000b2c:	f7ff fe98 	bl	8000860 <_test_assert>
 8000b30:	bb40      	cbnz	r0, 8000b84 <pools1_execute+0xa4>
 8000b32:	4a1f      	ldr	r2, [pc, #124]	; (8000bb0 <pools1_execute+0xd0>)
 8000b34:	4b1c      	ldr	r3, [pc, #112]	; (8000ba8 <pools1_execute+0xc8>)
 8000b36:	f102 0610 	add.w	r6, r2, #16
 8000b3a:	2020      	movs	r0, #32
 8000b3c:	f380 8811 	msr	BASEPRI, r0
 8000b40:	6821      	ldr	r1, [r4, #0]
 8000b42:	6019      	str	r1, [r3, #0]
 8000b44:	6023      	str	r3, [r4, #0]
 8000b46:	f385 8811 	msr	BASEPRI, r5
 8000b4a:	4296      	cmp	r6, r2
 8000b4c:	d002      	beq.n	8000b54 <pools1_execute+0x74>
 8000b4e:	f852 3b04 	ldr.w	r3, [r2], #4
 8000b52:	e7f3      	b.n	8000b3c <pools1_execute+0x5c>
 8000b54:	4e15      	ldr	r6, [pc, #84]	; (8000bac <pools1_execute+0xcc>)
 8000b56:	2505      	movs	r5, #5
 8000b58:	4630      	mov	r0, r6
 8000b5a:	f7ff ffa9 	bl	8000ab0 <chPoolAlloc>
 8000b5e:	1c01      	adds	r1, r0, #0
 8000b60:	bf18      	it	ne
 8000b62:	2101      	movne	r1, #1
 8000b64:	2003      	movs	r0, #3
 8000b66:	f7ff fe7b 	bl	8000860 <_test_assert>
 8000b6a:	b958      	cbnz	r0, 8000b84 <pools1_execute+0xa4>
 8000b6c:	3d01      	subs	r5, #1
 8000b6e:	d1f3      	bne.n	8000b58 <pools1_execute+0x78>
 8000b70:	480e      	ldr	r0, [pc, #56]	; (8000bac <pools1_execute+0xcc>)
 8000b72:	f7ff ff9d 	bl	8000ab0 <chPoolAlloc>
 8000b76:	fab0 f180 	clz	r1, r0
 8000b7a:	0949      	lsrs	r1, r1, #5
 8000b7c:	2004      	movs	r0, #4
 8000b7e:	f7ff fe6f 	bl	8000860 <_test_assert>
 8000b82:	b100      	cbz	r0, 8000b86 <pools1_execute+0xa6>
 8000b84:	bd70      	pop	{r4, r5, r6, pc}
 8000b86:	2210      	movs	r2, #16
 8000b88:	4b0a      	ldr	r3, [pc, #40]	; (8000bb4 <pools1_execute+0xd4>)
 8000b8a:	4808      	ldr	r0, [pc, #32]	; (8000bac <pools1_execute+0xcc>)
 8000b8c:	60a3      	str	r3, [r4, #8]
 8000b8e:	e9c4 5200 	strd	r5, r2, [r4]
 8000b92:	f7ff ff8d 	bl	8000ab0 <chPoolAlloc>
 8000b96:	fab0 f180 	clz	r1, r0
 8000b9a:	0949      	lsrs	r1, r1, #5
 8000b9c:	2005      	movs	r0, #5
 8000b9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000ba2:	f7ff be5d 	b.w	8000860 <_test_assert>
 8000ba6:	bf00      	nop
 8000ba8:	20000bc0 	.word	0x20000bc0
 8000bac:	2000087c 	.word	0x2000087c
 8000bb0:	08006a64 	.word	0x08006a64
 8000bb4:	08000551 	.word	0x08000551
	...

08000bc0 <chEvtUnregister>:
 8000bc0:	2320      	movs	r3, #32
 8000bc2:	f383 8811 	msr	BASEPRI, r3
 8000bc6:	4602      	mov	r2, r0
 8000bc8:	e002      	b.n	8000bd0 <chEvtUnregister+0x10>
 8000bca:	428b      	cmp	r3, r1
 8000bcc:	d007      	beq.n	8000bde <chEvtUnregister+0x1e>
 8000bce:	461a      	mov	r2, r3
 8000bd0:	6813      	ldr	r3, [r2, #0]
 8000bd2:	4283      	cmp	r3, r0
 8000bd4:	d1f9      	bne.n	8000bca <chEvtUnregister+0xa>
 8000bd6:	2300      	movs	r3, #0
 8000bd8:	f383 8811 	msr	BASEPRI, r3
 8000bdc:	4770      	bx	lr
 8000bde:	680b      	ldr	r3, [r1, #0]
 8000be0:	6013      	str	r3, [r2, #0]
 8000be2:	2300      	movs	r3, #0
 8000be4:	f383 8811 	msr	BASEPRI, r3
 8000be8:	4770      	bx	lr
 8000bea:	bf00      	nop
 8000bec:	0000      	movs	r0, r0
	...

08000bf0 <evt1_execute>:
 8000bf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000bf4:	4c33      	ldr	r4, [pc, #204]	; (8000cc4 <evt1_execute+0xd4>)
 8000bf6:	b08a      	sub	sp, #40	; 0x28
 8000bf8:	2020      	movs	r0, #32
 8000bfa:	6024      	str	r4, [r4, #0]
 8000bfc:	f380 8811 	msr	BASEPRI, r0
 8000c00:	4931      	ldr	r1, [pc, #196]	; (8000cc8 <evt1_execute+0xd8>)
 8000c02:	6823      	ldr	r3, [r4, #0]
 8000c04:	ad0a      	add	r5, sp, #40	; 0x28
 8000c06:	2701      	movs	r7, #1
 8000c08:	f845 3d14 	str.w	r3, [r5, #-20]!
 8000c0c:	698b      	ldr	r3, [r1, #24]
 8000c0e:	9306      	str	r3, [sp, #24]
 8000c10:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000c14:	2300      	movs	r3, #0
 8000c16:	6025      	str	r5, [r4, #0]
 8000c18:	e9cd 7307 	strd	r7, r3, [sp, #28]
 8000c1c:	9209      	str	r2, [sp, #36]	; 0x24
 8000c1e:	f383 8811 	msr	BASEPRI, r3
 8000c22:	f380 8811 	msr	BASEPRI, r0
 8000c26:	ae0a      	add	r6, sp, #40	; 0x28
 8000c28:	6820      	ldr	r0, [r4, #0]
 8000c2a:	f846 0d28 	str.w	r0, [r6, #-40]!
 8000c2e:	6989      	ldr	r1, [r1, #24]
 8000c30:	9101      	str	r1, [sp, #4]
 8000c32:	f04f 0802 	mov.w	r8, #2
 8000c36:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8000c3a:	6026      	str	r6, [r4, #0]
 8000c3c:	f8cd 8008 	str.w	r8, [sp, #8]
 8000c40:	f383 8811 	msr	BASEPRI, r3
 8000c44:	6821      	ldr	r1, [r4, #0]
 8000c46:	1b09      	subs	r1, r1, r4
 8000c48:	bf18      	it	ne
 8000c4a:	2101      	movne	r1, #1
 8000c4c:	4638      	mov	r0, r7
 8000c4e:	f7ff fe07 	bl	8000860 <_test_assert>
 8000c52:	b110      	cbz	r0, 8000c5a <evt1_execute+0x6a>
 8000c54:	b00a      	add	sp, #40	; 0x28
 8000c56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c5a:	4629      	mov	r1, r5
 8000c5c:	4620      	mov	r0, r4
 8000c5e:	f7ff ffaf 	bl	8000bc0 <chEvtUnregister>
 8000c62:	6821      	ldr	r1, [r4, #0]
 8000c64:	1b09      	subs	r1, r1, r4
 8000c66:	bf18      	it	ne
 8000c68:	2101      	movne	r1, #1
 8000c6a:	4640      	mov	r0, r8
 8000c6c:	f7ff fdf8 	bl	8000860 <_test_assert>
 8000c70:	2800      	cmp	r0, #0
 8000c72:	d1ef      	bne.n	8000c54 <evt1_execute+0x64>
 8000c74:	4631      	mov	r1, r6
 8000c76:	4620      	mov	r0, r4
 8000c78:	f7ff ffa2 	bl	8000bc0 <chEvtUnregister>
 8000c7c:	6821      	ldr	r1, [r4, #0]
 8000c7e:	1b09      	subs	r1, r1, r4
 8000c80:	fab1 f181 	clz	r1, r1
 8000c84:	2003      	movs	r0, #3
 8000c86:	0949      	lsrs	r1, r1, #5
 8000c88:	f7ff fdea 	bl	8000860 <_test_assert>
 8000c8c:	2800      	cmp	r0, #0
 8000c8e:	d1e1      	bne.n	8000c54 <evt1_execute+0x64>
 8000c90:	4e0e      	ldr	r6, [pc, #56]	; (8000ccc <evt1_execute+0xdc>)
 8000c92:	4604      	mov	r4, r0
 8000c94:	2507      	movs	r5, #7
 8000c96:	fa25 f304 	lsr.w	r3, r5, r4
 8000c9a:	f013 0f01 	tst.w	r3, #1
 8000c9e:	fa07 f204 	lsl.w	r2, r7, r4
 8000ca2:	4620      	mov	r0, r4
 8000ca4:	d00c      	beq.n	8000cc0 <evt1_execute+0xd0>
 8000ca6:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8000caa:	ea25 0502 	bic.w	r5, r5, r2
 8000cae:	3401      	adds	r4, #1
 8000cb0:	4798      	blx	r3
 8000cb2:	2d00      	cmp	r5, #0
 8000cb4:	d1ef      	bne.n	8000c96 <evt1_execute+0xa6>
 8000cb6:	4906      	ldr	r1, [pc, #24]	; (8000cd0 <evt1_execute+0xe0>)
 8000cb8:	2004      	movs	r0, #4
 8000cba:	f7ff fda9 	bl	8000810 <_test_assert_sequence>
 8000cbe:	e7c9      	b.n	8000c54 <evt1_execute+0x64>
 8000cc0:	3401      	adds	r4, #1
 8000cc2:	e7e8      	b.n	8000c96 <evt1_execute+0xa6>
 8000cc4:	20000808 	.word	0x20000808
 8000cc8:	20000930 	.word	0x20000930
 8000ccc:	08005f00 	.word	0x08005f00
 8000cd0:	08005f10 	.word	0x08005f10
	...

08000ce0 <chTMStopMeasurementX>:
 8000ce0:	4b0e      	ldr	r3, [pc, #56]	; (8000d1c <chTMStopMeasurementX+0x3c>)
 8000ce2:	4a0f      	ldr	r2, [pc, #60]	; (8000d20 <chTMStopMeasurementX+0x40>)
 8000ce4:	685b      	ldr	r3, [r3, #4]
 8000ce6:	68c1      	ldr	r1, [r0, #12]
 8000ce8:	b4f0      	push	{r4, r5, r6, r7}
 8000cea:	6884      	ldr	r4, [r0, #8]
 8000cec:	6f56      	ldr	r6, [r2, #116]	; 0x74
 8000cee:	6842      	ldr	r2, [r0, #4]
 8000cf0:	1b1b      	subs	r3, r3, r4
 8000cf2:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
 8000cf6:	1b9b      	subs	r3, r3, r6
 8000cf8:	18e6      	adds	r6, r4, r3
 8000cfa:	f145 0700 	adc.w	r7, r5, #0
 8000cfe:	3101      	adds	r1, #1
 8000d00:	4293      	cmp	r3, r2
 8000d02:	e9c0 3102 	strd	r3, r1, [r0, #8]
 8000d06:	e9c0 6704 	strd	r6, r7, [r0, #16]
 8000d0a:	d805      	bhi.n	8000d18 <chTMStopMeasurementX+0x38>
 8000d0c:	6802      	ldr	r2, [r0, #0]
 8000d0e:	4293      	cmp	r3, r2
 8000d10:	bf38      	it	cc
 8000d12:	6003      	strcc	r3, [r0, #0]
 8000d14:	bcf0      	pop	{r4, r5, r6, r7}
 8000d16:	4770      	bx	lr
 8000d18:	6043      	str	r3, [r0, #4]
 8000d1a:	e7fb      	b.n	8000d14 <chTMStopMeasurementX+0x34>
 8000d1c:	e0001000 	.word	0xe0001000
 8000d20:	20000930 	.word	0x20000930
	...

08000d30 <wakeup>:
 8000d30:	2320      	movs	r3, #32
 8000d32:	f383 8811 	msr	BASEPRI, r3
 8000d36:	7f03      	ldrb	r3, [r0, #28]
 8000d38:	2b07      	cmp	r3, #7
 8000d3a:	d80e      	bhi.n	8000d5a <wakeup+0x2a>
 8000d3c:	e8df f003 	tbb	[pc, r3]
 8000d40:	240d0d28 	.word	0x240d0d28
 8000d44:	080d0408 	.word	0x080d0408
 8000d48:	6a02      	ldr	r2, [r0, #32]
 8000d4a:	6893      	ldr	r3, [r2, #8]
 8000d4c:	3301      	adds	r3, #1
 8000d4e:	6093      	str	r3, [r2, #8]
 8000d50:	e9d0 2300 	ldrd	r2, r3, [r0]
 8000d54:	601a      	str	r2, [r3, #0]
 8000d56:	6802      	ldr	r2, [r0, #0]
 8000d58:	6053      	str	r3, [r2, #4]
 8000d5a:	b410      	push	{r4}
 8000d5c:	2200      	movs	r2, #0
 8000d5e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000d62:	6881      	ldr	r1, [r0, #8]
 8000d64:	4b0c      	ldr	r3, [pc, #48]	; (8000d98 <wakeup+0x68>)
 8000d66:	6204      	str	r4, [r0, #32]
 8000d68:	7702      	strb	r2, [r0, #28]
 8000d6a:	681b      	ldr	r3, [r3, #0]
 8000d6c:	689a      	ldr	r2, [r3, #8]
 8000d6e:	428a      	cmp	r2, r1
 8000d70:	d2fb      	bcs.n	8000d6a <wakeup+0x3a>
 8000d72:	685a      	ldr	r2, [r3, #4]
 8000d74:	2100      	movs	r1, #0
 8000d76:	e9c0 3200 	strd	r3, r2, [r0]
 8000d7a:	6010      	str	r0, [r2, #0]
 8000d7c:	6058      	str	r0, [r3, #4]
 8000d7e:	f381 8811 	msr	BASEPRI, r1
 8000d82:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000d86:	4770      	bx	lr
 8000d88:	6a03      	ldr	r3, [r0, #32]
 8000d8a:	2200      	movs	r2, #0
 8000d8c:	601a      	str	r2, [r3, #0]
 8000d8e:	e7e4      	b.n	8000d5a <wakeup+0x2a>
 8000d90:	2300      	movs	r3, #0
 8000d92:	f383 8811 	msr	BASEPRI, r3
 8000d96:	4770      	bx	lr
 8000d98:	20000930 	.word	0x20000930
 8000d9c:	00000000 	.word	0x00000000

08000da0 <chSchReadyI>:
 8000da0:	4601      	mov	r1, r0
 8000da2:	2200      	movs	r2, #0
 8000da4:	4b06      	ldr	r3, [pc, #24]	; (8000dc0 <chSchReadyI+0x20>)
 8000da6:	6880      	ldr	r0, [r0, #8]
 8000da8:	770a      	strb	r2, [r1, #28]
 8000daa:	681b      	ldr	r3, [r3, #0]
 8000dac:	689a      	ldr	r2, [r3, #8]
 8000dae:	4282      	cmp	r2, r0
 8000db0:	d2fb      	bcs.n	8000daa <chSchReadyI+0xa>
 8000db2:	685a      	ldr	r2, [r3, #4]
 8000db4:	4608      	mov	r0, r1
 8000db6:	e9c1 3200 	strd	r3, r2, [r1]
 8000dba:	6011      	str	r1, [r2, #0]
 8000dbc:	6059      	str	r1, [r3, #4]
 8000dbe:	4770      	bx	lr
 8000dc0:	20000930 	.word	0x20000930
	...

08000dd0 <chCondSignalI.constprop.43>:
 8000dd0:	4b07      	ldr	r3, [pc, #28]	; (8000df0 <chCondSignalI.constprop.43+0x20>)
 8000dd2:	681a      	ldr	r2, [r3, #0]
 8000dd4:	429a      	cmp	r2, r3
 8000dd6:	d00a      	beq.n	8000dee <chCondSignalI.constprop.43+0x1e>
 8000dd8:	6811      	ldr	r1, [r2, #0]
 8000dda:	b410      	push	{r4}
 8000ddc:	2400      	movs	r4, #0
 8000dde:	604b      	str	r3, [r1, #4]
 8000de0:	6019      	str	r1, [r3, #0]
 8000de2:	6214      	str	r4, [r2, #32]
 8000de4:	4610      	mov	r0, r2
 8000de6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000dea:	f7ff bfd9 	b.w	8000da0 <chSchReadyI>
 8000dee:	4770      	bx	lr
 8000df0:	20000800 	.word	0x20000800
	...

08000e00 <chIQPutI>:
 8000e00:	b510      	push	{r4, lr}
 8000e02:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 8000e06:	42a2      	cmp	r2, r4
 8000e08:	6883      	ldr	r3, [r0, #8]
 8000e0a:	d01c      	beq.n	8000e46 <chIQPutI+0x46>
 8000e0c:	3301      	adds	r3, #1
 8000e0e:	1c54      	adds	r4, r2, #1
 8000e10:	6083      	str	r3, [r0, #8]
 8000e12:	6144      	str	r4, [r0, #20]
 8000e14:	7011      	strb	r1, [r2, #0]
 8000e16:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
 8000e1a:	429a      	cmp	r2, r3
 8000e1c:	d20c      	bcs.n	8000e38 <chIQPutI+0x38>
 8000e1e:	6803      	ldr	r3, [r0, #0]
 8000e20:	4298      	cmp	r0, r3
 8000e22:	d00e      	beq.n	8000e42 <chIQPutI+0x42>
 8000e24:	681a      	ldr	r2, [r3, #0]
 8000e26:	6002      	str	r2, [r0, #0]
 8000e28:	2400      	movs	r4, #0
 8000e2a:	6050      	str	r0, [r2, #4]
 8000e2c:	4618      	mov	r0, r3
 8000e2e:	621c      	str	r4, [r3, #32]
 8000e30:	f7ff ffb6 	bl	8000da0 <chSchReadyI>
 8000e34:	4620      	mov	r0, r4
 8000e36:	bd10      	pop	{r4, pc}
 8000e38:	68c3      	ldr	r3, [r0, #12]
 8000e3a:	6143      	str	r3, [r0, #20]
 8000e3c:	6803      	ldr	r3, [r0, #0]
 8000e3e:	4298      	cmp	r0, r3
 8000e40:	d1f0      	bne.n	8000e24 <chIQPutI+0x24>
 8000e42:	2000      	movs	r0, #0
 8000e44:	bd10      	pop	{r4, pc}
 8000e46:	2b00      	cmp	r3, #0
 8000e48:	d0e0      	beq.n	8000e0c <chIQPutI+0xc>
 8000e4a:	f06f 0003 	mvn.w	r0, #3
 8000e4e:	bd10      	pop	{r4, pc}

08000e50 <chOQGetI>:
 8000e50:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8000e54:	4291      	cmp	r1, r2
 8000e56:	b538      	push	{r3, r4, r5, lr}
 8000e58:	6883      	ldr	r3, [r0, #8]
 8000e5a:	d017      	beq.n	8000e8c <chOQGetI+0x3c>
 8000e5c:	6905      	ldr	r5, [r0, #16]
 8000e5e:	1c51      	adds	r1, r2, #1
 8000e60:	3301      	adds	r3, #1
 8000e62:	6083      	str	r3, [r0, #8]
 8000e64:	6181      	str	r1, [r0, #24]
 8000e66:	42a9      	cmp	r1, r5
 8000e68:	7814      	ldrb	r4, [r2, #0]
 8000e6a:	d20c      	bcs.n	8000e86 <chOQGetI+0x36>
 8000e6c:	6803      	ldr	r3, [r0, #0]
 8000e6e:	4298      	cmp	r0, r3
 8000e70:	d007      	beq.n	8000e82 <chOQGetI+0x32>
 8000e72:	681a      	ldr	r2, [r3, #0]
 8000e74:	6002      	str	r2, [r0, #0]
 8000e76:	2100      	movs	r1, #0
 8000e78:	6050      	str	r0, [r2, #4]
 8000e7a:	4618      	mov	r0, r3
 8000e7c:	6219      	str	r1, [r3, #32]
 8000e7e:	f7ff ff8f 	bl	8000da0 <chSchReadyI>
 8000e82:	4620      	mov	r0, r4
 8000e84:	bd38      	pop	{r3, r4, r5, pc}
 8000e86:	68c3      	ldr	r3, [r0, #12]
 8000e88:	6183      	str	r3, [r0, #24]
 8000e8a:	e7ef      	b.n	8000e6c <chOQGetI+0x1c>
 8000e8c:	2b00      	cmp	r3, #0
 8000e8e:	d0e5      	beq.n	8000e5c <chOQGetI+0xc>
 8000e90:	f06f 0002 	mvn.w	r0, #2
 8000e94:	bd38      	pop	{r3, r4, r5, pc}
 8000e96:	bf00      	nop
	...

08000ea0 <chEvtSignalI>:
 8000ea0:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8000ea2:	7f02      	ldrb	r2, [r0, #28]
 8000ea4:	4319      	orrs	r1, r3
 8000ea6:	2a0a      	cmp	r2, #10
 8000ea8:	6341      	str	r1, [r0, #52]	; 0x34
 8000eaa:	d009      	beq.n	8000ec0 <chEvtSignalI+0x20>
 8000eac:	2a0b      	cmp	r2, #11
 8000eae:	d000      	beq.n	8000eb2 <chEvtSignalI+0x12>
 8000eb0:	4770      	bx	lr
 8000eb2:	6a03      	ldr	r3, [r0, #32]
 8000eb4:	438b      	bics	r3, r1
 8000eb6:	d1fb      	bne.n	8000eb0 <chEvtSignalI+0x10>
 8000eb8:	2300      	movs	r3, #0
 8000eba:	6203      	str	r3, [r0, #32]
 8000ebc:	f7ff bf70 	b.w	8000da0 <chSchReadyI>
 8000ec0:	6a03      	ldr	r3, [r0, #32]
 8000ec2:	4219      	tst	r1, r3
 8000ec4:	d1f8      	bne.n	8000eb8 <chEvtSignalI+0x18>
 8000ec6:	4770      	bx	lr
	...

08000ed0 <chEvtBroadcastFlagsI>:
 8000ed0:	b570      	push	{r4, r5, r6, lr}
 8000ed2:	6804      	ldr	r4, [r0, #0]
 8000ed4:	42a0      	cmp	r0, r4
 8000ed6:	d00f      	beq.n	8000ef8 <chEvtBroadcastFlagsI+0x28>
 8000ed8:	4606      	mov	r6, r0
 8000eda:	460d      	mov	r5, r1
 8000edc:	68e3      	ldr	r3, [r4, #12]
 8000ede:	432b      	orrs	r3, r5
 8000ee0:	60e3      	str	r3, [r4, #12]
 8000ee2:	b115      	cbz	r5, 8000eea <chEvtBroadcastFlagsI+0x1a>
 8000ee4:	6922      	ldr	r2, [r4, #16]
 8000ee6:	4213      	tst	r3, r2
 8000ee8:	d003      	beq.n	8000ef2 <chEvtBroadcastFlagsI+0x22>
 8000eea:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 8000eee:	f7ff ffd7 	bl	8000ea0 <chEvtSignalI>
 8000ef2:	6824      	ldr	r4, [r4, #0]
 8000ef4:	42a6      	cmp	r6, r4
 8000ef6:	d1f1      	bne.n	8000edc <chEvtBroadcastFlagsI+0xc>
 8000ef8:	bd70      	pop	{r4, r5, r6, pc}
 8000efa:	bf00      	nop
 8000efc:	0000      	movs	r0, r0
	...

08000f00 <VectorD8>:
 8000f00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f04:	4e4d      	ldr	r6, [pc, #308]	; (800103c <VectorD8+0x13c>)
 8000f06:	6f75      	ldr	r5, [r6, #116]	; 0x74
 8000f08:	f8d5 900c 	ldr.w	r9, [r5, #12]
 8000f0c:	682b      	ldr	r3, [r5, #0]
 8000f0e:	05da      	lsls	r2, r3, #23
 8000f10:	b29c      	uxth	r4, r3
 8000f12:	d463      	bmi.n	8000fdc <VectorD8+0xdc>
 8000f14:	2320      	movs	r3, #32
 8000f16:	f383 8811 	msr	BASEPRI, r3
 8000f1a:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000f1e:	d038      	beq.n	8000f92 <VectorD8+0x92>
 8000f20:	4f47      	ldr	r7, [pc, #284]	; (8001040 <VectorD8+0x140>)
 8000f22:	f107 0808 	add.w	r8, r7, #8
 8000f26:	e008      	b.n	8000f3a <VectorD8+0x3a>
 8000f28:	06a0      	lsls	r0, r4, #26
 8000f2a:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8000f2e:	d41e      	bmi.n	8000f6e <VectorD8+0x6e>
 8000f30:	682c      	ldr	r4, [r5, #0]
 8000f32:	b2a4      	uxth	r4, r4
 8000f34:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000f38:	d02b      	beq.n	8000f92 <VectorD8+0x92>
 8000f3a:	0723      	lsls	r3, r4, #28
 8000f3c:	d0f4      	beq.n	8000f28 <VectorD8+0x28>
 8000f3e:	f014 0f08 	tst.w	r4, #8
 8000f42:	bf0c      	ite	eq
 8000f44:	2100      	moveq	r1, #0
 8000f46:	2180      	movne	r1, #128	; 0x80
 8000f48:	07e0      	lsls	r0, r4, #31
 8000f4a:	bf48      	it	mi
 8000f4c:	f041 0120 	orrmi.w	r1, r1, #32
 8000f50:	07a2      	lsls	r2, r4, #30
 8000f52:	bf48      	it	mi
 8000f54:	f041 0140 	orrmi.w	r1, r1, #64	; 0x40
 8000f58:	0763      	lsls	r3, r4, #29
 8000f5a:	bf48      	it	mi
 8000f5c:	f441 7180 	orrmi.w	r1, r1, #256	; 0x100
 8000f60:	4638      	mov	r0, r7
 8000f62:	f7ff ffb5 	bl	8000ed0 <chEvtBroadcastFlagsI>
 8000f66:	06a0      	lsls	r0, r4, #26
 8000f68:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8000f6c:	d5e0      	bpl.n	8000f30 <VectorD8+0x30>
 8000f6e:	6973      	ldr	r3, [r6, #20]
 8000f70:	b37b      	cbz	r3, 8000fd2 <VectorD8+0xd2>
 8000f72:	fa5f f18a 	uxtb.w	r1, sl
 8000f76:	4640      	mov	r0, r8
 8000f78:	f7ff ff42 	bl	8000e00 <chIQPutI>
 8000f7c:	2800      	cmp	r0, #0
 8000f7e:	dad7      	bge.n	8000f30 <VectorD8+0x30>
 8000f80:	2180      	movs	r1, #128	; 0x80
 8000f82:	4638      	mov	r0, r7
 8000f84:	f7ff ffa4 	bl	8000ed0 <chEvtBroadcastFlagsI>
 8000f88:	682c      	ldr	r4, [r5, #0]
 8000f8a:	b2a4      	uxth	r4, r4
 8000f8c:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000f90:	d1d3      	bne.n	8000f3a <VectorD8+0x3a>
 8000f92:	2300      	movs	r3, #0
 8000f94:	f383 8811 	msr	BASEPRI, r3
 8000f98:	f019 0f80 	tst.w	r9, #128	; 0x80
 8000f9c:	d001      	beq.n	8000fa2 <VectorD8+0xa2>
 8000f9e:	0622      	lsls	r2, r4, #24
 8000fa0:	d42b      	bmi.n	8000ffa <VectorD8+0xfa>
 8000fa2:	0663      	lsls	r3, r4, #25
 8000fa4:	d511      	bpl.n	8000fca <VectorD8+0xca>
 8000fa6:	2320      	movs	r3, #32
 8000fa8:	f383 8811 	msr	BASEPRI, r3
 8000fac:	e9d6 2311 	ldrd	r2, r3, [r6, #68]	; 0x44
 8000fb0:	429a      	cmp	r2, r3
 8000fb2:	d02f      	beq.n	8001014 <VectorD8+0x114>
 8000fb4:	f64f 73bf 	movw	r3, #65471	; 0xffbf
 8000fb8:	ea09 0303 	and.w	r3, r9, r3
 8000fbc:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8000fc0:	60eb      	str	r3, [r5, #12]
 8000fc2:	2300      	movs	r3, #0
 8000fc4:	602a      	str	r2, [r5, #0]
 8000fc6:	f383 8811 	msr	BASEPRI, r3
 8000fca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000fce:	f7ff bccf 	b.w	8000970 <_port_irq_epilogue>
 8000fd2:	2104      	movs	r1, #4
 8000fd4:	4638      	mov	r0, r7
 8000fd6:	f7ff ff7b 	bl	8000ed0 <chEvtBroadcastFlagsI>
 8000fda:	e7ca      	b.n	8000f72 <VectorD8+0x72>
 8000fdc:	2320      	movs	r3, #32
 8000fde:	f383 8811 	msr	BASEPRI, r3
 8000fe2:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000fe6:	1d30      	adds	r0, r6, #4
 8000fe8:	f7ff ff72 	bl	8000ed0 <chEvtBroadcastFlagsI>
 8000fec:	f46f 7380 	mvn.w	r3, #256	; 0x100
 8000ff0:	602b      	str	r3, [r5, #0]
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	f383 8811 	msr	BASEPRI, r3
 8000ff8:	e78c      	b.n	8000f14 <VectorD8+0x14>
 8000ffa:	2320      	movs	r3, #32
 8000ffc:	f383 8811 	msr	BASEPRI, r3
 8001000:	4810      	ldr	r0, [pc, #64]	; (8001044 <VectorD8+0x144>)
 8001002:	f7ff ff25 	bl	8000e50 <chOQGetI>
 8001006:	2800      	cmp	r0, #0
 8001008:	db0c      	blt.n	8001024 <VectorD8+0x124>
 800100a:	6068      	str	r0, [r5, #4]
 800100c:	2300      	movs	r3, #0
 800100e:	f383 8811 	msr	BASEPRI, r3
 8001012:	e7c6      	b.n	8000fa2 <VectorD8+0xa2>
 8001014:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001016:	2b00      	cmp	r3, #0
 8001018:	d0cc      	beq.n	8000fb4 <VectorD8+0xb4>
 800101a:	2110      	movs	r1, #16
 800101c:	4808      	ldr	r0, [pc, #32]	; (8001040 <VectorD8+0x140>)
 800101e:	f7ff ff57 	bl	8000ed0 <chEvtBroadcastFlagsI>
 8001022:	e7c7      	b.n	8000fb4 <VectorD8+0xb4>
 8001024:	2108      	movs	r1, #8
 8001026:	4806      	ldr	r0, [pc, #24]	; (8001040 <VectorD8+0x140>)
 8001028:	f7ff ff52 	bl	8000ed0 <chEvtBroadcastFlagsI>
 800102c:	f64f 733f 	movw	r3, #65343	; 0xff3f
 8001030:	ea09 0303 	and.w	r3, r9, r3
 8001034:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001038:	60eb      	str	r3, [r5, #12]
 800103a:	e7e7      	b.n	800100c <VectorD8+0x10c>
 800103c:	200008b8 	.word	0x200008b8
 8001040:	200008bc 	.word	0x200008bc
 8001044:	200008e8 	.word	0x200008e8
	...

08001050 <chMtxUnlockS>:
 8001050:	4b12      	ldr	r3, [pc, #72]	; (800109c <chMtxUnlockS+0x4c>)
 8001052:	b430      	push	{r4, r5}
 8001054:	6804      	ldr	r4, [r0, #0]
 8001056:	699d      	ldr	r5, [r3, #24]
 8001058:	68c3      	ldr	r3, [r0, #12]
 800105a:	63ab      	str	r3, [r5, #56]	; 0x38
 800105c:	4284      	cmp	r4, r0
 800105e:	d018      	beq.n	8001092 <chMtxUnlockS+0x42>
 8001060:	4601      	mov	r1, r0
 8001062:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 8001064:	b14b      	cbz	r3, 800107a <chMtxUnlockS+0x2a>
 8001066:	681a      	ldr	r2, [r3, #0]
 8001068:	4293      	cmp	r3, r2
 800106a:	d003      	beq.n	8001074 <chMtxUnlockS+0x24>
 800106c:	6892      	ldr	r2, [r2, #8]
 800106e:	4290      	cmp	r0, r2
 8001070:	bf38      	it	cc
 8001072:	4610      	movcc	r0, r2
 8001074:	68db      	ldr	r3, [r3, #12]
 8001076:	2b00      	cmp	r3, #0
 8001078:	d1f5      	bne.n	8001066 <chMtxUnlockS+0x16>
 800107a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800107c:	6823      	ldr	r3, [r4, #0]
 800107e:	60a8      	str	r0, [r5, #8]
 8001080:	600b      	str	r3, [r1, #0]
 8001082:	4620      	mov	r0, r4
 8001084:	6059      	str	r1, [r3, #4]
 8001086:	e9c1 4202 	strd	r4, r2, [r1, #8]
 800108a:	63a1      	str	r1, [r4, #56]	; 0x38
 800108c:	bc30      	pop	{r4, r5}
 800108e:	f7ff be87 	b.w	8000da0 <chSchReadyI>
 8001092:	2300      	movs	r3, #0
 8001094:	60a3      	str	r3, [r4, #8]
 8001096:	bc30      	pop	{r4, r5}
 8001098:	4770      	bx	lr
 800109a:	bf00      	nop
 800109c:	20000930 	.word	0x20000930

080010a0 <chSemSignalI>:
 80010a0:	6883      	ldr	r3, [r0, #8]
 80010a2:	3301      	adds	r3, #1
 80010a4:	2b00      	cmp	r3, #0
 80010a6:	6083      	str	r3, [r0, #8]
 80010a8:	dd00      	ble.n	80010ac <chSemSignalI+0xc>
 80010aa:	4770      	bx	lr
 80010ac:	6803      	ldr	r3, [r0, #0]
 80010ae:	681a      	ldr	r2, [r3, #0]
 80010b0:	6002      	str	r2, [r0, #0]
 80010b2:	2100      	movs	r1, #0
 80010b4:	6050      	str	r0, [r2, #4]
 80010b6:	4618      	mov	r0, r3
 80010b8:	6219      	str	r1, [r3, #32]
 80010ba:	f7ff be71 	b.w	8000da0 <chSchReadyI>
 80010be:	bf00      	nop

080010c0 <chMBPostI.constprop.19>:
 80010c0:	b538      	push	{r3, r4, r5, lr}
 80010c2:	4b0c      	ldr	r3, [pc, #48]	; (80010f4 <chMBPostI.constprop.19+0x34>)
 80010c4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80010c6:	2a00      	cmp	r2, #0
 80010c8:	dd10      	ble.n	80010ec <chMBPostI.constprop.19+0x2c>
 80010ca:	e9d3 5401 	ldrd	r5, r4, [r3, #4]
 80010ce:	1d21      	adds	r1, r4, #4
 80010d0:	3a01      	subs	r2, #1
 80010d2:	42a9      	cmp	r1, r5
 80010d4:	625a      	str	r2, [r3, #36]	; 0x24
 80010d6:	6099      	str	r1, [r3, #8]
 80010d8:	bf28      	it	cs
 80010da:	681a      	ldrcs	r2, [r3, #0]
 80010dc:	6020      	str	r0, [r4, #0]
 80010de:	4806      	ldr	r0, [pc, #24]	; (80010f8 <chMBPostI.constprop.19+0x38>)
 80010e0:	bf28      	it	cs
 80010e2:	609a      	strcs	r2, [r3, #8]
 80010e4:	f7ff ffdc 	bl	80010a0 <chSemSignalI>
 80010e8:	2000      	movs	r0, #0
 80010ea:	bd38      	pop	{r3, r4, r5, pc}
 80010ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80010f0:	bd38      	pop	{r3, r4, r5, pc}
 80010f2:	bf00      	nop
 80010f4:	20000854 	.word	0x20000854
 80010f8:	20000864 	.word	0x20000864
 80010fc:	00000000 	.word	0x00000000

08001100 <chMBPostAheadI.constprop.17>:
 8001100:	4a0c      	ldr	r2, [pc, #48]	; (8001134 <chMBPostAheadI.constprop.17+0x34>)
 8001102:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8001104:	2900      	cmp	r1, #0
 8001106:	dd11      	ble.n	800112c <chMBPostAheadI.constprop.17+0x2c>
 8001108:	68d3      	ldr	r3, [r2, #12]
 800110a:	b510      	push	{r4, lr}
 800110c:	6814      	ldr	r4, [r2, #0]
 800110e:	3b04      	subs	r3, #4
 8001110:	3901      	subs	r1, #1
 8001112:	42a3      	cmp	r3, r4
 8001114:	6251      	str	r1, [r2, #36]	; 0x24
 8001116:	60d3      	str	r3, [r2, #12]
 8001118:	d202      	bcs.n	8001120 <chMBPostAheadI.constprop.17+0x20>
 800111a:	6853      	ldr	r3, [r2, #4]
 800111c:	3b04      	subs	r3, #4
 800111e:	60d3      	str	r3, [r2, #12]
 8001120:	6018      	str	r0, [r3, #0]
 8001122:	4805      	ldr	r0, [pc, #20]	; (8001138 <chMBPostAheadI.constprop.17+0x38>)
 8001124:	f7ff ffbc 	bl	80010a0 <chSemSignalI>
 8001128:	2000      	movs	r0, #0
 800112a:	bd10      	pop	{r4, pc}
 800112c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001130:	4770      	bx	lr
 8001132:	bf00      	nop
 8001134:	20000854 	.word	0x20000854
 8001138:	20000864 	.word	0x20000864
 800113c:	00000000 	.word	0x00000000

08001140 <chMBFetchI.constprop.15>:
 8001140:	4b0c      	ldr	r3, [pc, #48]	; (8001174 <chMBFetchI.constprop.15+0x34>)
 8001142:	6999      	ldr	r1, [r3, #24]
 8001144:	2900      	cmp	r1, #0
 8001146:	dd12      	ble.n	800116e <chMBFetchI.constprop.15+0x2e>
 8001148:	b510      	push	{r4, lr}
 800114a:	68da      	ldr	r2, [r3, #12]
 800114c:	3901      	subs	r1, #1
 800114e:	6199      	str	r1, [r3, #24]
 8001150:	6859      	ldr	r1, [r3, #4]
 8001152:	6814      	ldr	r4, [r2, #0]
 8001154:	3204      	adds	r2, #4
 8001156:	428a      	cmp	r2, r1
 8001158:	60da      	str	r2, [r3, #12]
 800115a:	6004      	str	r4, [r0, #0]
 800115c:	bf28      	it	cs
 800115e:	681a      	ldrcs	r2, [r3, #0]
 8001160:	4805      	ldr	r0, [pc, #20]	; (8001178 <chMBFetchI.constprop.15+0x38>)
 8001162:	bf28      	it	cs
 8001164:	60da      	strcs	r2, [r3, #12]
 8001166:	f7ff ff9b 	bl	80010a0 <chSemSignalI>
 800116a:	2000      	movs	r0, #0
 800116c:	bd10      	pop	{r4, pc}
 800116e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001172:	4770      	bx	lr
 8001174:	20000854 	.word	0x20000854
 8001178:	20000870 	.word	0x20000870
 800117c:	00000000 	.word	0x00000000

08001180 <chSemResetI>:
 8001180:	b570      	push	{r4, r5, r6, lr}
 8001182:	6885      	ldr	r5, [r0, #8]
 8001184:	6081      	str	r1, [r0, #8]
 8001186:	3501      	adds	r5, #1
 8001188:	2d00      	cmp	r5, #0
 800118a:	dc0c      	bgt.n	80011a6 <chSemResetI+0x26>
 800118c:	4604      	mov	r4, r0
 800118e:	f06f 0601 	mvn.w	r6, #1
 8001192:	6860      	ldr	r0, [r4, #4]
 8001194:	6843      	ldr	r3, [r0, #4]
 8001196:	6063      	str	r3, [r4, #4]
 8001198:	601c      	str	r4, [r3, #0]
 800119a:	f7ff fe01 	bl	8000da0 <chSchReadyI>
 800119e:	3501      	adds	r5, #1
 80011a0:	2d01      	cmp	r5, #1
 80011a2:	6206      	str	r6, [r0, #32]
 80011a4:	d1f5      	bne.n	8001192 <chSemResetI+0x12>
 80011a6:	bd70      	pop	{r4, r5, r6, pc}
	...

080011b0 <chVTDoResetI>:
 80011b0:	4b1b      	ldr	r3, [pc, #108]	; (8001220 <chVTDoResetI+0x70>)
 80011b2:	69da      	ldr	r2, [r3, #28]
 80011b4:	4282      	cmp	r2, r0
 80011b6:	b410      	push	{r4}
 80011b8:	d010      	beq.n	80011dc <chVTDoResetI+0x2c>
 80011ba:	e9d0 2100 	ldrd	r2, r1, [r0]
 80011be:	600a      	str	r2, [r1, #0]
 80011c0:	6802      	ldr	r2, [r0, #0]
 80011c2:	331c      	adds	r3, #28
 80011c4:	2400      	movs	r4, #0
 80011c6:	429a      	cmp	r2, r3
 80011c8:	6051      	str	r1, [r2, #4]
 80011ca:	60c4      	str	r4, [r0, #12]
 80011cc:	d003      	beq.n	80011d6 <chVTDoResetI+0x26>
 80011ce:	6881      	ldr	r1, [r0, #8]
 80011d0:	6893      	ldr	r3, [r2, #8]
 80011d2:	440b      	add	r3, r1
 80011d4:	6093      	str	r3, [r2, #8]
 80011d6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80011da:	4770      	bx	lr
 80011dc:	4618      	mov	r0, r3
 80011de:	6811      	ldr	r1, [r2, #0]
 80011e0:	f840 1f1c 	str.w	r1, [r0, #28]!
 80011e4:	2400      	movs	r4, #0
 80011e6:	4281      	cmp	r1, r0
 80011e8:	6048      	str	r0, [r1, #4]
 80011ea:	60d4      	str	r4, [r2, #12]
 80011ec:	d013      	beq.n	8001216 <chVTDoResetI+0x66>
 80011ee:	6894      	ldr	r4, [r2, #8]
 80011f0:	6888      	ldr	r0, [r1, #8]
 80011f2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80011f4:	1903      	adds	r3, r0, r4
 80011f6:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 80011fa:	608b      	str	r3, [r1, #8]
 80011fc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80011fe:	1a8a      	subs	r2, r1, r2
 8001200:	4293      	cmp	r3, r2
 8001202:	d9e8      	bls.n	80011d6 <chVTDoResetI+0x26>
 8001204:	1a9b      	subs	r3, r3, r2
 8001206:	2b02      	cmp	r3, #2
 8001208:	bf2c      	ite	cs
 800120a:	18cb      	addcs	r3, r1, r3
 800120c:	1c8b      	addcc	r3, r1, #2
 800120e:	6363      	str	r3, [r4, #52]	; 0x34
 8001210:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001214:	4770      	bx	lr
 8001216:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800121a:	60dc      	str	r4, [r3, #12]
 800121c:	e7db      	b.n	80011d6 <chVTDoResetI+0x26>
 800121e:	bf00      	nop
 8001220:	20000930 	.word	0x20000930
	...

08001230 <chVTDoSetI>:
 8001230:	b4f0      	push	{r4, r5, r6, r7}
 8001232:	4d1c      	ldr	r5, [pc, #112]	; (80012a4 <chVTDoSetI+0x74>)
 8001234:	462e      	mov	r6, r5
 8001236:	2902      	cmp	r1, #2
 8001238:	f856 4f1c 	ldr.w	r4, [r6, #28]!
 800123c:	6103      	str	r3, [r0, #16]
 800123e:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 8001242:	bf38      	it	cc
 8001244:	2102      	movcc	r1, #2
 8001246:	42b4      	cmp	r4, r6
 8001248:	60c2      	str	r2, [r0, #12]
 800124a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800124c:	d01b      	beq.n	8001286 <chVTDoSetI+0x56>
 800124e:	6aae      	ldr	r6, [r5, #40]	; 0x28
 8001250:	68a2      	ldr	r2, [r4, #8]
 8001252:	4419      	add	r1, r3
 8001254:	1b8b      	subs	r3, r1, r6
 8001256:	429a      	cmp	r2, r3
 8001258:	d903      	bls.n	8001262 <chVTDoSetI+0x32>
 800125a:	e012      	b.n	8001282 <chVTDoSetI+0x52>
 800125c:	6824      	ldr	r4, [r4, #0]
 800125e:	1a9b      	subs	r3, r3, r2
 8001260:	68a2      	ldr	r2, [r4, #8]
 8001262:	429a      	cmp	r2, r3
 8001264:	d3fa      	bcc.n	800125c <chVTDoSetI+0x2c>
 8001266:	6862      	ldr	r2, [r4, #4]
 8001268:	e9c0 4200 	strd	r4, r2, [r0]
 800126c:	6010      	str	r0, [r2, #0]
 800126e:	6060      	str	r0, [r4, #4]
 8001270:	6083      	str	r3, [r0, #8]
 8001272:	68a2      	ldr	r2, [r4, #8]
 8001274:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001278:	1ad3      	subs	r3, r2, r3
 800127a:	60a3      	str	r3, [r4, #8]
 800127c:	6269      	str	r1, [r5, #36]	; 0x24
 800127e:	bcf0      	pop	{r4, r5, r6, r7}
 8001280:	4770      	bx	lr
 8001282:	6379      	str	r1, [r7, #52]	; 0x34
 8001284:	e7ed      	b.n	8001262 <chVTDoSetI+0x32>
 8001286:	62ab      	str	r3, [r5, #40]	; 0x28
 8001288:	18ce      	adds	r6, r1, r3
 800128a:	2200      	movs	r2, #0
 800128c:	2302      	movs	r3, #2
 800128e:	e9c5 0007 	strd	r0, r0, [r5, #28]
 8001292:	e9c0 4400 	strd	r4, r4, [r0]
 8001296:	6081      	str	r1, [r0, #8]
 8001298:	637e      	str	r6, [r7, #52]	; 0x34
 800129a:	613a      	str	r2, [r7, #16]
 800129c:	60fb      	str	r3, [r7, #12]
 800129e:	bcf0      	pop	{r4, r5, r6, r7}
 80012a0:	4770      	bx	lr
 80012a2:	bf00      	nop
 80012a4:	20000930 	.word	0x20000930
	...

080012b0 <test_start_timer.constprop.1>:
 80012b0:	b508      	push	{r3, lr}
 80012b2:	4b0b      	ldr	r3, [pc, #44]	; (80012e0 <test_start_timer.constprop.1+0x30>)
 80012b4:	2200      	movs	r2, #0
 80012b6:	701a      	strb	r2, [r3, #0]
 80012b8:	2320      	movs	r3, #32
 80012ba:	f383 8811 	msr	BASEPRI, r3
 80012be:	4809      	ldr	r0, [pc, #36]	; (80012e4 <test_start_timer.constprop.1+0x34>)
 80012c0:	68c3      	ldr	r3, [r0, #12]
 80012c2:	b10b      	cbz	r3, 80012c8 <test_start_timer.constprop.1+0x18>
 80012c4:	f7ff ff74 	bl	80011b0 <chVTDoResetI>
 80012c8:	2300      	movs	r3, #0
 80012ca:	4a07      	ldr	r2, [pc, #28]	; (80012e8 <test_start_timer.constprop.1+0x38>)
 80012cc:	4805      	ldr	r0, [pc, #20]	; (80012e4 <test_start_timer.constprop.1+0x34>)
 80012ce:	f242 7110 	movw	r1, #10000	; 0x2710
 80012d2:	f7ff ffad 	bl	8001230 <chVTDoSetI>
 80012d6:	2300      	movs	r3, #0
 80012d8:	f383 8811 	msr	BASEPRI, r3
 80012dc:	bd08      	pop	{r3, pc}
 80012de:	bf00      	nop
 80012e0:	200014f8 	.word	0x200014f8
 80012e4:	20001524 	.word	0x20001524
 80012e8:	080003b1 	.word	0x080003b1
 80012ec:	00000000 	.word	0x00000000

080012f0 <chSysGetStatusAndLockX.part.2>:
 80012f0:	f3ef 8305 	mrs	r3, IPSR
 80012f4:	2320      	movs	r3, #32
 80012f6:	f383 8811 	msr	BASEPRI, r3
 80012fa:	4770      	bx	lr
 80012fc:	0000      	movs	r0, r0
	...

08001300 <chSysIntegrityCheckI>:
 8001300:	07c2      	lsls	r2, r0, #31
 8001302:	b410      	push	{r4}
 8001304:	d512      	bpl.n	800132c <chSysIntegrityCheckI+0x2c>
 8001306:	4b2a      	ldr	r3, [pc, #168]	; (80013b0 <chSysIntegrityCheckI+0xb0>)
 8001308:	e9d3 1400 	ldrd	r1, r4, [r3]
 800130c:	4299      	cmp	r1, r3
 800130e:	d043      	beq.n	8001398 <chSysIntegrityCheckI+0x98>
 8001310:	2200      	movs	r2, #0
 8001312:	6809      	ldr	r1, [r1, #0]
 8001314:	4299      	cmp	r1, r3
 8001316:	f102 0201 	add.w	r2, r2, #1
 800131a:	d1fa      	bne.n	8001312 <chSysIntegrityCheckI+0x12>
 800131c:	428c      	cmp	r4, r1
 800131e:	d037      	beq.n	8001390 <chSysIntegrityCheckI+0x90>
 8001320:	6864      	ldr	r4, [r4, #4]
 8001322:	429c      	cmp	r4, r3
 8001324:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8001328:	d1fa      	bne.n	8001320 <chSysIntegrityCheckI+0x20>
 800132a:	bb8a      	cbnz	r2, 8001390 <chSysIntegrityCheckI+0x90>
 800132c:	0783      	lsls	r3, r0, #30
 800132e:	d513      	bpl.n	8001358 <chSysIntegrityCheckI+0x58>
 8001330:	4c1f      	ldr	r4, [pc, #124]	; (80013b0 <chSysIntegrityCheckI+0xb0>)
 8001332:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8001336:	341c      	adds	r4, #28
 8001338:	42a2      	cmp	r2, r4
 800133a:	d031      	beq.n	80013a0 <chSysIntegrityCheckI+0xa0>
 800133c:	2300      	movs	r3, #0
 800133e:	6812      	ldr	r2, [r2, #0]
 8001340:	42a2      	cmp	r2, r4
 8001342:	f103 0301 	add.w	r3, r3, #1
 8001346:	d1fa      	bne.n	800133e <chSysIntegrityCheckI+0x3e>
 8001348:	4291      	cmp	r1, r2
 800134a:	d021      	beq.n	8001390 <chSysIntegrityCheckI+0x90>
 800134c:	6849      	ldr	r1, [r1, #4]
 800134e:	42a1      	cmp	r1, r4
 8001350:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8001354:	d1fa      	bne.n	800134c <chSysIntegrityCheckI+0x4c>
 8001356:	b9db      	cbnz	r3, 8001390 <chSysIntegrityCheckI+0x90>
 8001358:	f010 0004 	ands.w	r0, r0, #4
 800135c:	d015      	beq.n	800138a <chSysIntegrityCheckI+0x8a>
 800135e:	4b14      	ldr	r3, [pc, #80]	; (80013b0 <chSysIntegrityCheckI+0xb0>)
 8001360:	e9d3 2104 	ldrd	r2, r1, [r3, #16]
 8001364:	429a      	cmp	r2, r3
 8001366:	f04f 0000 	mov.w	r0, #0
 800136a:	d01d      	beq.n	80013a8 <chSysIntegrityCheckI+0xa8>
 800136c:	6912      	ldr	r2, [r2, #16]
 800136e:	429a      	cmp	r2, r3
 8001370:	f100 0001 	add.w	r0, r0, #1
 8001374:	d1fa      	bne.n	800136c <chSysIntegrityCheckI+0x6c>
 8001376:	4291      	cmp	r1, r2
 8001378:	d00a      	beq.n	8001390 <chSysIntegrityCheckI+0x90>
 800137a:	6949      	ldr	r1, [r1, #20]
 800137c:	4299      	cmp	r1, r3
 800137e:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 8001382:	d1fa      	bne.n	800137a <chSysIntegrityCheckI+0x7a>
 8001384:	3000      	adds	r0, #0
 8001386:	bf18      	it	ne
 8001388:	2001      	movne	r0, #1
 800138a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800138e:	4770      	bx	lr
 8001390:	2001      	movs	r0, #1
 8001392:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001396:	4770      	bx	lr
 8001398:	429c      	cmp	r4, r3
 800139a:	d0c7      	beq.n	800132c <chSysIntegrityCheckI+0x2c>
 800139c:	2200      	movs	r2, #0
 800139e:	e7bf      	b.n	8001320 <chSysIntegrityCheckI+0x20>
 80013a0:	42a1      	cmp	r1, r4
 80013a2:	d0d9      	beq.n	8001358 <chSysIntegrityCheckI+0x58>
 80013a4:	2300      	movs	r3, #0
 80013a6:	e7d1      	b.n	800134c <chSysIntegrityCheckI+0x4c>
 80013a8:	4291      	cmp	r1, r2
 80013aa:	d1e6      	bne.n	800137a <chSysIntegrityCheckI+0x7a>
 80013ac:	e7ed      	b.n	800138a <chSysIntegrityCheckI+0x8a>
 80013ae:	bf00      	nop
 80013b0:	20000930 	.word	0x20000930
	...

080013c0 <sys3_execute>:
 80013c0:	b538      	push	{r3, r4, r5, lr}
 80013c2:	2420      	movs	r4, #32
 80013c4:	f384 8811 	msr	BASEPRI, r4
 80013c8:	2001      	movs	r0, #1
 80013ca:	f7ff ff99 	bl	8001300 <chSysIntegrityCheckI>
 80013ce:	2300      	movs	r3, #0
 80013d0:	f383 8811 	msr	BASEPRI, r3
 80013d4:	f080 0101 	eor.w	r1, r0, #1
 80013d8:	b2c9      	uxtb	r1, r1
 80013da:	2001      	movs	r0, #1
 80013dc:	f7ff fa40 	bl	8000860 <_test_assert>
 80013e0:	b100      	cbz	r0, 80013e4 <sys3_execute+0x24>
 80013e2:	bd38      	pop	{r3, r4, r5, pc}
 80013e4:	4605      	mov	r5, r0
 80013e6:	f384 8811 	msr	BASEPRI, r4
 80013ea:	2002      	movs	r0, #2
 80013ec:	f7ff ff88 	bl	8001300 <chSysIntegrityCheckI>
 80013f0:	f385 8811 	msr	BASEPRI, r5
 80013f4:	f080 0101 	eor.w	r1, r0, #1
 80013f8:	b2c9      	uxtb	r1, r1
 80013fa:	2002      	movs	r0, #2
 80013fc:	f7ff fa30 	bl	8000860 <_test_assert>
 8001400:	4605      	mov	r5, r0
 8001402:	2800      	cmp	r0, #0
 8001404:	d1ed      	bne.n	80013e2 <sys3_execute+0x22>
 8001406:	f384 8811 	msr	BASEPRI, r4
 800140a:	2004      	movs	r0, #4
 800140c:	f7ff ff78 	bl	8001300 <chSysIntegrityCheckI>
 8001410:	f385 8811 	msr	BASEPRI, r5
 8001414:	f080 0101 	eor.w	r1, r0, #1
 8001418:	b2c9      	uxtb	r1, r1
 800141a:	2003      	movs	r0, #3
 800141c:	f7ff fa20 	bl	8000860 <_test_assert>
 8001420:	4605      	mov	r5, r0
 8001422:	2800      	cmp	r0, #0
 8001424:	d1dd      	bne.n	80013e2 <sys3_execute+0x22>
 8001426:	f384 8811 	msr	BASEPRI, r4
 800142a:	2008      	movs	r0, #8
 800142c:	f7ff ff68 	bl	8001300 <chSysIntegrityCheckI>
 8001430:	f385 8811 	msr	BASEPRI, r5
 8001434:	f080 0101 	eor.w	r1, r0, #1
 8001438:	b2c9      	uxtb	r1, r1
 800143a:	2004      	movs	r0, #4
 800143c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001440:	f7ff ba0e 	b.w	8000860 <_test_assert>
	...

08001450 <BusFault_Handler>:
 8001450:	b672      	cpsid	i
 8001452:	4b02      	ldr	r3, [pc, #8]	; (800145c <BusFault_Handler+0xc>)
 8001454:	4a02      	ldr	r2, [pc, #8]	; (8001460 <BusFault_Handler+0x10>)
 8001456:	62da      	str	r2, [r3, #44]	; 0x2c
 8001458:	e7fe      	b.n	8001458 <BusFault_Handler+0x8>
 800145a:	bf00      	nop
 800145c:	20000930 	.word	0x20000930
 8001460:	08005d40 	.word	0x08005d40
	...

08001470 <bmk13_execute>:
 8001470:	b510      	push	{r4, lr}
 8001472:	482f      	ldr	r0, [pc, #188]	; (8001530 <bmk13_execute+0xc0>)
 8001474:	4c2f      	ldr	r4, [pc, #188]	; (8001534 <bmk13_execute+0xc4>)
 8001476:	f7ff fa63 	bl	8000940 <test_print>
 800147a:	f44f 70ec 	mov.w	r0, #472	; 0x1d8
 800147e:	f7ff f937 	bl	80006f0 <test_printn.part.1>
 8001482:	4620      	mov	r0, r4
 8001484:	f7ff fa3c 	bl	8000900 <test_println>
 8001488:	482b      	ldr	r0, [pc, #172]	; (8001538 <bmk13_execute+0xc8>)
 800148a:	f7ff fa59 	bl	8000940 <test_print>
 800148e:	2044      	movs	r0, #68	; 0x44
 8001490:	f7ff f92e 	bl	80006f0 <test_printn.part.1>
 8001494:	4620      	mov	r0, r4
 8001496:	f7ff fa33 	bl	8000900 <test_println>
 800149a:	4828      	ldr	r0, [pc, #160]	; (800153c <bmk13_execute+0xcc>)
 800149c:	f7ff fa50 	bl	8000940 <test_print>
 80014a0:	2014      	movs	r0, #20
 80014a2:	f7ff f925 	bl	80006f0 <test_printn.part.1>
 80014a6:	4620      	mov	r0, r4
 80014a8:	f7ff fa2a 	bl	8000900 <test_println>
 80014ac:	4824      	ldr	r0, [pc, #144]	; (8001540 <bmk13_execute+0xd0>)
 80014ae:	f7ff fa47 	bl	8000940 <test_print>
 80014b2:	200c      	movs	r0, #12
 80014b4:	f7ff f91c 	bl	80006f0 <test_printn.part.1>
 80014b8:	4620      	mov	r0, r4
 80014ba:	f7ff fa21 	bl	8000900 <test_println>
 80014be:	4821      	ldr	r0, [pc, #132]	; (8001544 <bmk13_execute+0xd4>)
 80014c0:	f7ff fa3e 	bl	8000940 <test_print>
 80014c4:	2004      	movs	r0, #4
 80014c6:	f7ff f913 	bl	80006f0 <test_printn.part.1>
 80014ca:	4620      	mov	r0, r4
 80014cc:	f7ff fa18 	bl	8000900 <test_println>
 80014d0:	481d      	ldr	r0, [pc, #116]	; (8001548 <bmk13_execute+0xd8>)
 80014d2:	f7ff fa35 	bl	8000940 <test_print>
 80014d6:	2014      	movs	r0, #20
 80014d8:	f7ff f90a 	bl	80006f0 <test_printn.part.1>
 80014dc:	4620      	mov	r0, r4
 80014de:	f7ff fa0f 	bl	8000900 <test_println>
 80014e2:	481a      	ldr	r0, [pc, #104]	; (800154c <bmk13_execute+0xdc>)
 80014e4:	f7ff fa2c 	bl	8000940 <test_print>
 80014e8:	2010      	movs	r0, #16
 80014ea:	f7ff f901 	bl	80006f0 <test_printn.part.1>
 80014ee:	4620      	mov	r0, r4
 80014f0:	f7ff fa06 	bl	8000900 <test_println>
 80014f4:	4816      	ldr	r0, [pc, #88]	; (8001550 <bmk13_execute+0xe0>)
 80014f6:	f7ff fa23 	bl	8000940 <test_print>
 80014fa:	2008      	movs	r0, #8
 80014fc:	f7ff f8f8 	bl	80006f0 <test_printn.part.1>
 8001500:	4620      	mov	r0, r4
 8001502:	f7ff f9fd 	bl	8000900 <test_println>
 8001506:	4813      	ldr	r0, [pc, #76]	; (8001554 <bmk13_execute+0xe4>)
 8001508:	f7ff fa1a 	bl	8000940 <test_print>
 800150c:	2024      	movs	r0, #36	; 0x24
 800150e:	f7ff f8ef 	bl	80006f0 <test_printn.part.1>
 8001512:	4620      	mov	r0, r4
 8001514:	f7ff f9f4 	bl	8000900 <test_println>
 8001518:	480f      	ldr	r0, [pc, #60]	; (8001558 <bmk13_execute+0xe8>)
 800151a:	f7ff fa11 	bl	8000940 <test_print>
 800151e:	2028      	movs	r0, #40	; 0x28
 8001520:	f7ff f8e6 	bl	80006f0 <test_printn.part.1>
 8001524:	4620      	mov	r0, r4
 8001526:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800152a:	f7ff b9e9 	b.w	8000900 <test_println>
 800152e:	bf00      	nop
 8001530:	08005da0 	.word	0x08005da0
 8001534:	08005db0 	.word	0x08005db0
 8001538:	08005db8 	.word	0x08005db8
 800153c:	08005dc8 	.word	0x08005dc8
 8001540:	08005dd8 	.word	0x08005dd8
 8001544:	08005de8 	.word	0x08005de8
 8001548:	08005df8 	.word	0x08005df8
 800154c:	08005e08 	.word	0x08005e08
 8001550:	08005e18 	.word	0x08005e18
 8001554:	08005e28 	.word	0x08005e28
 8001558:	08005e38 	.word	0x08005e38
 800155c:	00000000 	.word	0x00000000

08001560 <chThdYield>:
 8001560:	b538      	push	{r3, r4, r5, lr}
 8001562:	2320      	movs	r3, #32
 8001564:	f383 8811 	msr	BASEPRI, r3
 8001568:	4a11      	ldr	r2, [pc, #68]	; (80015b0 <chThdYield+0x50>)
 800156a:	6810      	ldr	r0, [r2, #0]
 800156c:	6994      	ldr	r4, [r2, #24]
 800156e:	6883      	ldr	r3, [r0, #8]
 8001570:	68a1      	ldr	r1, [r4, #8]
 8001572:	428b      	cmp	r3, r1
 8001574:	d203      	bcs.n	800157e <chThdYield+0x1e>
 8001576:	2300      	movs	r3, #0
 8001578:	f383 8811 	msr	BASEPRI, r3
 800157c:	bd38      	pop	{r3, r4, r5, pc}
 800157e:	6803      	ldr	r3, [r0, #0]
 8001580:	6013      	str	r3, [r2, #0]
 8001582:	605a      	str	r2, [r3, #4]
 8001584:	2501      	movs	r5, #1
 8001586:	6190      	str	r0, [r2, #24]
 8001588:	2200      	movs	r2, #0
 800158a:	7705      	strb	r5, [r0, #28]
 800158c:	7722      	strb	r2, [r4, #28]
 800158e:	e000      	b.n	8001592 <chThdYield+0x32>
 8001590:	681b      	ldr	r3, [r3, #0]
 8001592:	689a      	ldr	r2, [r3, #8]
 8001594:	4291      	cmp	r1, r2
 8001596:	d9fb      	bls.n	8001590 <chThdYield+0x30>
 8001598:	685a      	ldr	r2, [r3, #4]
 800159a:	4621      	mov	r1, r4
 800159c:	e9c4 3200 	strd	r3, r2, [r4]
 80015a0:	6014      	str	r4, [r2, #0]
 80015a2:	605c      	str	r4, [r3, #4]
 80015a4:	f7fe fe84 	bl	80002b0 <_port_switch>
 80015a8:	2300      	movs	r3, #0
 80015aa:	f383 8811 	msr	BASEPRI, r3
 80015ae:	bd38      	pop	{r3, r4, r5, pc}
 80015b0:	20000930 	.word	0x20000930
	...

080015c0 <thread8>:
 80015c0:	b538      	push	{r3, r4, r5, lr}
 80015c2:	4d09      	ldr	r5, [pc, #36]	; (80015e8 <thread8+0x28>)
 80015c4:	4604      	mov	r4, r0
 80015c6:	f7ff ffcb 	bl	8001560 <chThdYield>
 80015ca:	f7ff ffc9 	bl	8001560 <chThdYield>
 80015ce:	f7ff ffc7 	bl	8001560 <chThdYield>
 80015d2:	f7ff ffc5 	bl	8001560 <chThdYield>
 80015d6:	6823      	ldr	r3, [r4, #0]
 80015d8:	69aa      	ldr	r2, [r5, #24]
 80015da:	3304      	adds	r3, #4
 80015dc:	6023      	str	r3, [r4, #0]
 80015de:	7f53      	ldrb	r3, [r2, #29]
 80015e0:	075b      	lsls	r3, r3, #29
 80015e2:	d5f0      	bpl.n	80015c6 <thread8+0x6>
 80015e4:	bd38      	pop	{r3, r4, r5, pc}
 80015e6:	bf00      	nop
 80015e8:	20000930 	.word	0x20000930
 80015ec:	00000000 	.word	0x00000000

080015f0 <chSchDoRescheduleAhead>:
 80015f0:	4a0d      	ldr	r2, [pc, #52]	; (8001628 <chSchDoRescheduleAhead+0x38>)
 80015f2:	6810      	ldr	r0, [r2, #0]
 80015f4:	b430      	push	{r4, r5}
 80015f6:	6803      	ldr	r3, [r0, #0]
 80015f8:	6994      	ldr	r4, [r2, #24]
 80015fa:	6013      	str	r3, [r2, #0]
 80015fc:	68a1      	ldr	r1, [r4, #8]
 80015fe:	605a      	str	r2, [r3, #4]
 8001600:	2501      	movs	r5, #1
 8001602:	6190      	str	r0, [r2, #24]
 8001604:	2200      	movs	r2, #0
 8001606:	7705      	strb	r5, [r0, #28]
 8001608:	7722      	strb	r2, [r4, #28]
 800160a:	e000      	b.n	800160e <chSchDoRescheduleAhead+0x1e>
 800160c:	681b      	ldr	r3, [r3, #0]
 800160e:	689a      	ldr	r2, [r3, #8]
 8001610:	4291      	cmp	r1, r2
 8001612:	d3fb      	bcc.n	800160c <chSchDoRescheduleAhead+0x1c>
 8001614:	685a      	ldr	r2, [r3, #4]
 8001616:	4621      	mov	r1, r4
 8001618:	e9c4 3200 	strd	r3, r2, [r4]
 800161c:	6014      	str	r4, [r2, #0]
 800161e:	605c      	str	r4, [r3, #4]
 8001620:	bc30      	pop	{r4, r5}
 8001622:	f7fe be45 	b.w	80002b0 <_port_switch>
 8001626:	bf00      	nop
 8001628:	20000930 	.word	0x20000930
 800162c:	00000000 	.word	0x00000000

08001630 <chSchRescheduleS>:
 8001630:	4b04      	ldr	r3, [pc, #16]	; (8001644 <chSchRescheduleS+0x14>)
 8001632:	681a      	ldr	r2, [r3, #0]
 8001634:	699b      	ldr	r3, [r3, #24]
 8001636:	6892      	ldr	r2, [r2, #8]
 8001638:	689b      	ldr	r3, [r3, #8]
 800163a:	429a      	cmp	r2, r3
 800163c:	d800      	bhi.n	8001640 <chSchRescheduleS+0x10>
 800163e:	4770      	bx	lr
 8001640:	f7ff bfd6 	b.w	80015f0 <chSchDoRescheduleAhead>
 8001644:	20000930 	.word	0x20000930
	...

08001650 <thread4.lto_priv.73>:
 8001650:	b508      	push	{r3, lr}
 8001652:	2220      	movs	r2, #32
 8001654:	f382 8811 	msr	BASEPRI, r2
 8001658:	6883      	ldr	r3, [r0, #8]
 800165a:	2b00      	cmp	r3, #0
 800165c:	dd05      	ble.n	800166a <thread4.lto_priv.73+0x1a>
 800165e:	f7ff ffe7 	bl	8001630 <chSchRescheduleS>
 8001662:	2300      	movs	r3, #0
 8001664:	f383 8811 	msr	BASEPRI, r3
 8001668:	bd08      	pop	{r3, pc}
 800166a:	f7ff fd19 	bl	80010a0 <chSemSignalI>
 800166e:	f7ff ffdf 	bl	8001630 <chSchRescheduleS>
 8001672:	2300      	movs	r3, #0
 8001674:	f383 8811 	msr	BASEPRI, r3
 8001678:	bd08      	pop	{r3, pc}
 800167a:	bf00      	nop
 800167c:	0000      	movs	r0, r0
	...

08001680 <chMtxUnlockAll>:
 8001680:	4a13      	ldr	r2, [pc, #76]	; (80016d0 <chMtxUnlockAll+0x50>)
 8001682:	b570      	push	{r4, r5, r6, lr}
 8001684:	2320      	movs	r3, #32
 8001686:	6994      	ldr	r4, [r2, #24]
 8001688:	f383 8811 	msr	BASEPRI, r3
 800168c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800168e:	b1b3      	cbz	r3, 80016be <chMtxUnlockAll+0x3e>
 8001690:	2600      	movs	r6, #0
 8001692:	681a      	ldr	r2, [r3, #0]
 8001694:	68d9      	ldr	r1, [r3, #12]
 8001696:	63a1      	str	r1, [r4, #56]	; 0x38
 8001698:	4293      	cmp	r3, r2
 800169a:	4610      	mov	r0, r2
 800169c:	d013      	beq.n	80016c6 <chMtxUnlockAll+0x46>
 800169e:	6b95      	ldr	r5, [r2, #56]	; 0x38
 80016a0:	6811      	ldr	r1, [r2, #0]
 80016a2:	6019      	str	r1, [r3, #0]
 80016a4:	604b      	str	r3, [r1, #4]
 80016a6:	e9c3 2502 	strd	r2, r5, [r3, #8]
 80016aa:	6393      	str	r3, [r2, #56]	; 0x38
 80016ac:	f7ff fb78 	bl	8000da0 <chSchReadyI>
 80016b0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80016b2:	2b00      	cmp	r3, #0
 80016b4:	d1ed      	bne.n	8001692 <chMtxUnlockAll+0x12>
 80016b6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80016b8:	60a3      	str	r3, [r4, #8]
 80016ba:	f7ff ffb9 	bl	8001630 <chSchRescheduleS>
 80016be:	2300      	movs	r3, #0
 80016c0:	f383 8811 	msr	BASEPRI, r3
 80016c4:	bd70      	pop	{r4, r5, r6, pc}
 80016c6:	609e      	str	r6, [r3, #8]
 80016c8:	460b      	mov	r3, r1
 80016ca:	2b00      	cmp	r3, #0
 80016cc:	d1e1      	bne.n	8001692 <chMtxUnlockAll+0x12>
 80016ce:	e7f2      	b.n	80016b6 <chMtxUnlockAll+0x36>
 80016d0:	20000930 	.word	0x20000930
	...

080016e0 <chThdSetPriority>:
 80016e0:	b510      	push	{r4, lr}
 80016e2:	2320      	movs	r3, #32
 80016e4:	f383 8811 	msr	BASEPRI, r3
 80016e8:	4b08      	ldr	r3, [pc, #32]	; (800170c <chThdSetPriority+0x2c>)
 80016ea:	699b      	ldr	r3, [r3, #24]
 80016ec:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80016ee:	6899      	ldr	r1, [r3, #8]
 80016f0:	42a1      	cmp	r1, r4
 80016f2:	d001      	beq.n	80016f8 <chThdSetPriority+0x18>
 80016f4:	4281      	cmp	r1, r0
 80016f6:	d200      	bcs.n	80016fa <chThdSetPriority+0x1a>
 80016f8:	6098      	str	r0, [r3, #8]
 80016fa:	63d8      	str	r0, [r3, #60]	; 0x3c
 80016fc:	f7ff ff98 	bl	8001630 <chSchRescheduleS>
 8001700:	2300      	movs	r3, #0
 8001702:	f383 8811 	msr	BASEPRI, r3
 8001706:	4620      	mov	r0, r4
 8001708:	bd10      	pop	{r4, pc}
 800170a:	bf00      	nop
 800170c:	20000930 	.word	0x20000930

08001710 <thd3_execute>:
 8001710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001712:	4e49      	ldr	r6, [pc, #292]	; (8001838 <thd3_execute+0x128>)
 8001714:	69b3      	ldr	r3, [r6, #24]
 8001716:	689c      	ldr	r4, [r3, #8]
 8001718:	1c65      	adds	r5, r4, #1
 800171a:	4628      	mov	r0, r5
 800171c:	f7ff ffe0 	bl	80016e0 <chThdSetPriority>
 8001720:	1b01      	subs	r1, r0, r4
 8001722:	fab1 f181 	clz	r1, r1
 8001726:	4607      	mov	r7, r0
 8001728:	0949      	lsrs	r1, r1, #5
 800172a:	2001      	movs	r0, #1
 800172c:	f7ff f898 	bl	8000860 <_test_assert>
 8001730:	b100      	cbz	r0, 8001734 <thd3_execute+0x24>
 8001732:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001734:	69b3      	ldr	r3, [r6, #24]
 8001736:	6899      	ldr	r1, [r3, #8]
 8001738:	1b49      	subs	r1, r1, r5
 800173a:	fab1 f181 	clz	r1, r1
 800173e:	2002      	movs	r0, #2
 8001740:	0949      	lsrs	r1, r1, #5
 8001742:	f7ff f88d 	bl	8000860 <_test_assert>
 8001746:	2800      	cmp	r0, #0
 8001748:	d1f3      	bne.n	8001732 <thd3_execute+0x22>
 800174a:	4638      	mov	r0, r7
 800174c:	f7ff ffc8 	bl	80016e0 <chThdSetPriority>
 8001750:	1a29      	subs	r1, r5, r0
 8001752:	fab1 f181 	clz	r1, r1
 8001756:	0949      	lsrs	r1, r1, #5
 8001758:	2003      	movs	r0, #3
 800175a:	f7ff f881 	bl	8000860 <_test_assert>
 800175e:	2800      	cmp	r0, #0
 8001760:	d1e7      	bne.n	8001732 <thd3_execute+0x22>
 8001762:	69b3      	ldr	r3, [r6, #24]
 8001764:	6899      	ldr	r1, [r3, #8]
 8001766:	1b09      	subs	r1, r1, r4
 8001768:	fab1 f181 	clz	r1, r1
 800176c:	2004      	movs	r0, #4
 800176e:	0949      	lsrs	r1, r1, #5
 8001770:	f7ff f876 	bl	8000860 <_test_assert>
 8001774:	2800      	cmp	r0, #0
 8001776:	d1dc      	bne.n	8001732 <thd3_execute+0x22>
 8001778:	2320      	movs	r3, #32
 800177a:	f383 8811 	msr	BASEPRI, r3
 800177e:	69b2      	ldr	r2, [r6, #24]
 8001780:	6893      	ldr	r3, [r2, #8]
 8001782:	3302      	adds	r3, #2
 8001784:	6093      	str	r3, [r2, #8]
 8001786:	f380 8811 	msr	BASEPRI, r0
 800178a:	69b3      	ldr	r3, [r6, #24]
 800178c:	6899      	ldr	r1, [r3, #8]
 800178e:	1ca7      	adds	r7, r4, #2
 8001790:	1bc9      	subs	r1, r1, r7
 8001792:	fab1 f181 	clz	r1, r1
 8001796:	0949      	lsrs	r1, r1, #5
 8001798:	2005      	movs	r0, #5
 800179a:	f7ff f861 	bl	8000860 <_test_assert>
 800179e:	2800      	cmp	r0, #0
 80017a0:	d1c7      	bne.n	8001732 <thd3_execute+0x22>
 80017a2:	4628      	mov	r0, r5
 80017a4:	f7ff ff9c 	bl	80016e0 <chThdSetPriority>
 80017a8:	1b01      	subs	r1, r0, r4
 80017aa:	fab1 f181 	clz	r1, r1
 80017ae:	0949      	lsrs	r1, r1, #5
 80017b0:	2006      	movs	r0, #6
 80017b2:	f7ff f855 	bl	8000860 <_test_assert>
 80017b6:	2800      	cmp	r0, #0
 80017b8:	d1bb      	bne.n	8001732 <thd3_execute+0x22>
 80017ba:	69b3      	ldr	r3, [r6, #24]
 80017bc:	6899      	ldr	r1, [r3, #8]
 80017be:	1bc9      	subs	r1, r1, r7
 80017c0:	fab1 f181 	clz	r1, r1
 80017c4:	0949      	lsrs	r1, r1, #5
 80017c6:	2007      	movs	r0, #7
 80017c8:	f7ff f84a 	bl	8000860 <_test_assert>
 80017cc:	2800      	cmp	r0, #0
 80017ce:	d1b0      	bne.n	8001732 <thd3_execute+0x22>
 80017d0:	69b3      	ldr	r3, [r6, #24]
 80017d2:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80017d4:	1b4f      	subs	r7, r1, r5
 80017d6:	4279      	negs	r1, r7
 80017d8:	4179      	adcs	r1, r7
 80017da:	2008      	movs	r0, #8
 80017dc:	f7ff f840 	bl	8000860 <_test_assert>
 80017e0:	2800      	cmp	r0, #0
 80017e2:	d1a6      	bne.n	8001732 <thd3_execute+0x22>
 80017e4:	1ce7      	adds	r7, r4, #3
 80017e6:	4638      	mov	r0, r7
 80017e8:	f7ff ff7a 	bl	80016e0 <chThdSetPriority>
 80017ec:	1a28      	subs	r0, r5, r0
 80017ee:	4241      	negs	r1, r0
 80017f0:	4141      	adcs	r1, r0
 80017f2:	2009      	movs	r0, #9
 80017f4:	f7ff f834 	bl	8000860 <_test_assert>
 80017f8:	2800      	cmp	r0, #0
 80017fa:	d19a      	bne.n	8001732 <thd3_execute+0x22>
 80017fc:	69b3      	ldr	r3, [r6, #24]
 80017fe:	6899      	ldr	r1, [r3, #8]
 8001800:	1bca      	subs	r2, r1, r7
 8001802:	4251      	negs	r1, r2
 8001804:	4151      	adcs	r1, r2
 8001806:	200a      	movs	r0, #10
 8001808:	f7ff f82a 	bl	8000860 <_test_assert>
 800180c:	2800      	cmp	r0, #0
 800180e:	d190      	bne.n	8001732 <thd3_execute+0x22>
 8001810:	69b3      	ldr	r3, [r6, #24]
 8001812:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001814:	1bcb      	subs	r3, r1, r7
 8001816:	4259      	negs	r1, r3
 8001818:	4159      	adcs	r1, r3
 800181a:	200b      	movs	r0, #11
 800181c:	f7ff f820 	bl	8000860 <_test_assert>
 8001820:	2800      	cmp	r0, #0
 8001822:	d186      	bne.n	8001732 <thd3_execute+0x22>
 8001824:	2320      	movs	r3, #32
 8001826:	f383 8811 	msr	BASEPRI, r3
 800182a:	69b3      	ldr	r3, [r6, #24]
 800182c:	609c      	str	r4, [r3, #8]
 800182e:	63dc      	str	r4, [r3, #60]	; 0x3c
 8001830:	f380 8811 	msr	BASEPRI, r0
 8001834:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001836:	bf00      	nop
 8001838:	20000930 	.word	0x20000930
 800183c:	00000000 	.word	0x00000000

08001840 <chSysRestoreStatusX.part.3>:
 8001840:	b510      	push	{r4, lr}
 8001842:	f3ef 8405 	mrs	r4, IPSR
 8001846:	f3c4 0408 	ubfx	r4, r4, #0, #9
 800184a:	b11c      	cbz	r4, 8001854 <chSysRestoreStatusX.part.3+0x14>
 800184c:	2300      	movs	r3, #0
 800184e:	f383 8811 	msr	BASEPRI, r3
 8001852:	bd10      	pop	{r4, pc}
 8001854:	f7ff feec 	bl	8001630 <chSchRescheduleS>
 8001858:	f384 8811 	msr	BASEPRI, r4
 800185c:	bd10      	pop	{r4, pc}
 800185e:	bf00      	nop

08001860 <vtcb>:
 8001860:	b508      	push	{r3, lr}
 8001862:	2320      	movs	r3, #32
 8001864:	f383 8811 	msr	BASEPRI, r3
 8001868:	2200      	movs	r2, #0
 800186a:	f382 8811 	msr	BASEPRI, r2
 800186e:	f383 8811 	msr	BASEPRI, r3
 8001872:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8001876:	b91b      	cbnz	r3, 8001880 <vtcb+0x20>
 8001878:	f7ff fd3a 	bl	80012f0 <chSysGetStatusAndLockX.part.2>
 800187c:	f7ff ffe0 	bl	8001840 <chSysRestoreStatusX.part.3>
 8001880:	2300      	movs	r3, #0
 8001882:	f383 8811 	msr	BASEPRI, r3
 8001886:	bd08      	pop	{r3, pc}
	...

08001890 <chSchWakeupS>:
 8001890:	4b14      	ldr	r3, [pc, #80]	; (80018e4 <chSchWakeupS+0x54>)
 8001892:	b470      	push	{r4, r5, r6}
 8001894:	699e      	ldr	r6, [r3, #24]
 8001896:	6885      	ldr	r5, [r0, #8]
 8001898:	4604      	mov	r4, r0
 800189a:	68b0      	ldr	r0, [r6, #8]
 800189c:	6221      	str	r1, [r4, #32]
 800189e:	4285      	cmp	r5, r0
 80018a0:	f04f 0200 	mov.w	r2, #0
 80018a4:	d80b      	bhi.n	80018be <chSchWakeupS+0x2e>
 80018a6:	7722      	strb	r2, [r4, #28]
 80018a8:	681b      	ldr	r3, [r3, #0]
 80018aa:	689a      	ldr	r2, [r3, #8]
 80018ac:	4295      	cmp	r5, r2
 80018ae:	d9fb      	bls.n	80018a8 <chSchWakeupS+0x18>
 80018b0:	685a      	ldr	r2, [r3, #4]
 80018b2:	e9c4 3200 	strd	r3, r2, [r4]
 80018b6:	6014      	str	r4, [r2, #0]
 80018b8:	605c      	str	r4, [r3, #4]
 80018ba:	bc70      	pop	{r4, r5, r6}
 80018bc:	4770      	bx	lr
 80018be:	7732      	strb	r2, [r6, #28]
 80018c0:	461a      	mov	r2, r3
 80018c2:	6812      	ldr	r2, [r2, #0]
 80018c4:	6891      	ldr	r1, [r2, #8]
 80018c6:	4288      	cmp	r0, r1
 80018c8:	d9fb      	bls.n	80018c2 <chSchWakeupS+0x32>
 80018ca:	6851      	ldr	r1, [r2, #4]
 80018cc:	6071      	str	r1, [r6, #4]
 80018ce:	2001      	movs	r0, #1
 80018d0:	6032      	str	r2, [r6, #0]
 80018d2:	600e      	str	r6, [r1, #0]
 80018d4:	6056      	str	r6, [r2, #4]
 80018d6:	7720      	strb	r0, [r4, #28]
 80018d8:	4631      	mov	r1, r6
 80018da:	4620      	mov	r0, r4
 80018dc:	619c      	str	r4, [r3, #24]
 80018de:	bc70      	pop	{r4, r5, r6}
 80018e0:	f7fe bce6 	b.w	80002b0 <_port_switch>
 80018e4:	20000930 	.word	0x20000930
	...

080018f0 <chThdCreateFromMemoryPool.constprop.52>:
 80018f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80018f2:	4e1c      	ldr	r6, [pc, #112]	; (8001964 <chThdCreateFromMemoryPool.constprop.52+0x74>)
 80018f4:	4605      	mov	r5, r0
 80018f6:	4630      	mov	r0, r6
 80018f8:	460f      	mov	r7, r1
 80018fa:	f7ff f8d9 	bl	8000ab0 <chPoolAlloc>
 80018fe:	4604      	mov	r4, r0
 8001900:	b368      	cbz	r0, 800195e <chThdCreateFromMemoryPool.constprop.52+0x6e>
 8001902:	2320      	movs	r3, #32
 8001904:	f383 8811 	msr	BASEPRI, r3
 8001908:	6873      	ldr	r3, [r6, #4]
 800190a:	f8df c064 	ldr.w	ip, [pc, #100]	; 8001970 <chThdCreateFromMemoryPool.constprop.52+0x80>
 800190e:	4a16      	ldr	r2, [pc, #88]	; (8001968 <chThdCreateFromMemoryPool.constprop.52+0x78>)
 8001910:	4916      	ldr	r1, [pc, #88]	; (800196c <chThdCreateFromMemoryPool.constprop.52+0x7c>)
 8001912:	3b64      	subs	r3, #100	; 0x64
 8001914:	4403      	add	r3, r0
 8001916:	60c3      	str	r3, [r0, #12]
 8001918:	e9c3 c710 	strd	ip, r7, [r3, #64]	; 0x40
 800191c:	6619      	str	r1, [r3, #96]	; 0x60
 800191e:	6102      	str	r2, [r0, #16]
 8001920:	f8d2 c014 	ldr.w	ip, [r2, #20]
 8001924:	63c5      	str	r5, [r0, #60]	; 0x3c
 8001926:	2301      	movs	r3, #1
 8001928:	6085      	str	r5, [r0, #8]
 800192a:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800192e:	2500      	movs	r5, #0
 8001930:	7783      	strb	r3, [r0, #30]
 8001932:	2702      	movs	r7, #2
 8001934:	f100 0328 	add.w	r3, r0, #40	; 0x28
 8001938:	f8c0 c014 	str.w	ip, [r0, #20]
 800193c:	7707      	strb	r7, [r0, #28]
 800193e:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8001942:	6185      	str	r5, [r0, #24]
 8001944:	f8cc 0010 	str.w	r0, [ip, #16]
 8001948:	6241      	str	r1, [r0, #36]	; 0x24
 800194a:	7747      	strb	r7, [r0, #29]
 800194c:	6406      	str	r6, [r0, #64]	; 0x40
 800194e:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8001952:	4629      	mov	r1, r5
 8001954:	6150      	str	r0, [r2, #20]
 8001956:	f7ff ff9b 	bl	8001890 <chSchWakeupS>
 800195a:	f385 8811 	msr	BASEPRI, r5
 800195e:	4620      	mov	r0, r4
 8001960:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001962:	bf00      	nop
 8001964:	20000b90 	.word	0x20000b90
 8001968:	20000930 	.word	0x20000930
 800196c:	080002c9 	.word	0x080002c9
 8001970:	080008f1 	.word	0x080008f1
	...

08001980 <chCondSignal.constprop.44>:
 8001980:	b508      	push	{r3, lr}
 8001982:	2320      	movs	r3, #32
 8001984:	f383 8811 	msr	BASEPRI, r3
 8001988:	4b06      	ldr	r3, [pc, #24]	; (80019a4 <chCondSignal.constprop.44+0x24>)
 800198a:	6818      	ldr	r0, [r3, #0]
 800198c:	4298      	cmp	r0, r3
 800198e:	d005      	beq.n	800199c <chCondSignal.constprop.44+0x1c>
 8001990:	6802      	ldr	r2, [r0, #0]
 8001992:	601a      	str	r2, [r3, #0]
 8001994:	6053      	str	r3, [r2, #4]
 8001996:	2100      	movs	r1, #0
 8001998:	f7ff ff7a 	bl	8001890 <chSchWakeupS>
 800199c:	2300      	movs	r3, #0
 800199e:	f383 8811 	msr	BASEPRI, r3
 80019a2:	bd08      	pop	{r3, pc}
 80019a4:	20000800 	.word	0x20000800
	...

080019b0 <chMtxUnlock>:
 80019b0:	4b16      	ldr	r3, [pc, #88]	; (8001a0c <chMtxUnlock+0x5c>)
 80019b2:	b570      	push	{r4, r5, r6, lr}
 80019b4:	699d      	ldr	r5, [r3, #24]
 80019b6:	2320      	movs	r3, #32
 80019b8:	f383 8811 	msr	BASEPRI, r3
 80019bc:	6804      	ldr	r4, [r0, #0]
 80019be:	68c3      	ldr	r3, [r0, #12]
 80019c0:	63ab      	str	r3, [r5, #56]	; 0x38
 80019c2:	4284      	cmp	r4, r0
 80019c4:	d01c      	beq.n	8001a00 <chMtxUnlock+0x50>
 80019c6:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 80019c8:	b14b      	cbz	r3, 80019de <chMtxUnlock+0x2e>
 80019ca:	681a      	ldr	r2, [r3, #0]
 80019cc:	4293      	cmp	r3, r2
 80019ce:	d003      	beq.n	80019d8 <chMtxUnlock+0x28>
 80019d0:	6892      	ldr	r2, [r2, #8]
 80019d2:	4291      	cmp	r1, r2
 80019d4:	bf38      	it	cc
 80019d6:	4611      	movcc	r1, r2
 80019d8:	68db      	ldr	r3, [r3, #12]
 80019da:	2b00      	cmp	r3, #0
 80019dc:	d1f5      	bne.n	80019ca <chMtxUnlock+0x1a>
 80019de:	4603      	mov	r3, r0
 80019e0:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 80019e2:	6822      	ldr	r2, [r4, #0]
 80019e4:	60a9      	str	r1, [r5, #8]
 80019e6:	4620      	mov	r0, r4
 80019e8:	601a      	str	r2, [r3, #0]
 80019ea:	2100      	movs	r1, #0
 80019ec:	6053      	str	r3, [r2, #4]
 80019ee:	e9c3 4602 	strd	r4, r6, [r3, #8]
 80019f2:	63a3      	str	r3, [r4, #56]	; 0x38
 80019f4:	f7ff ff4c 	bl	8001890 <chSchWakeupS>
 80019f8:	2300      	movs	r3, #0
 80019fa:	f383 8811 	msr	BASEPRI, r3
 80019fe:	bd70      	pop	{r4, r5, r6, pc}
 8001a00:	2300      	movs	r3, #0
 8001a02:	60a3      	str	r3, [r4, #8]
 8001a04:	2300      	movs	r3, #0
 8001a06:	f383 8811 	msr	BASEPRI, r3
 8001a0a:	bd70      	pop	{r4, r5, r6, pc}
 8001a0c:	20000930 	.word	0x20000930

08001a10 <chSemSignal>:
 8001a10:	b508      	push	{r3, lr}
 8001a12:	2320      	movs	r3, #32
 8001a14:	f383 8811 	msr	BASEPRI, r3
 8001a18:	6883      	ldr	r3, [r0, #8]
 8001a1a:	3301      	adds	r3, #1
 8001a1c:	2b00      	cmp	r3, #0
 8001a1e:	6083      	str	r3, [r0, #8]
 8001a20:	dd03      	ble.n	8001a2a <chSemSignal+0x1a>
 8001a22:	2300      	movs	r3, #0
 8001a24:	f383 8811 	msr	BASEPRI, r3
 8001a28:	bd08      	pop	{r3, pc}
 8001a2a:	4603      	mov	r3, r0
 8001a2c:	6800      	ldr	r0, [r0, #0]
 8001a2e:	6802      	ldr	r2, [r0, #0]
 8001a30:	601a      	str	r2, [r3, #0]
 8001a32:	2100      	movs	r1, #0
 8001a34:	6053      	str	r3, [r2, #4]
 8001a36:	f7ff ff2b 	bl	8001890 <chSchWakeupS>
 8001a3a:	2300      	movs	r3, #0
 8001a3c:	f383 8811 	msr	BASEPRI, r3
 8001a40:	bd08      	pop	{r3, pc}
 8001a42:	bf00      	nop
	...

08001a50 <chThdCreateStatic>:
 8001a50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a52:	9d06      	ldr	r5, [sp, #24]
 8001a54:	4604      	mov	r4, r0
 8001a56:	2620      	movs	r6, #32
 8001a58:	f386 8811 	msr	BASEPRI, r6
 8001a5c:	3964      	subs	r1, #100	; 0x64
 8001a5e:	4401      	add	r1, r0
 8001a60:	4e12      	ldr	r6, [pc, #72]	; (8001aac <chThdCreateStatic+0x5c>)
 8001a62:	4f13      	ldr	r7, [pc, #76]	; (8001ab0 <chThdCreateStatic+0x60>)
 8001a64:	60c1      	str	r1, [r0, #12]
 8001a66:	e9c1 3510 	strd	r3, r5, [r1, #64]	; 0x40
 8001a6a:	660f      	str	r7, [r1, #96]	; 0x60
 8001a6c:	6106      	str	r6, [r0, #16]
 8001a6e:	6971      	ldr	r1, [r6, #20]
 8001a70:	6141      	str	r1, [r0, #20]
 8001a72:	2302      	movs	r3, #2
 8001a74:	2500      	movs	r5, #0
 8001a76:	8383      	strh	r3, [r0, #28]
 8001a78:	f04f 0c01 	mov.w	ip, #1
 8001a7c:	f100 0328 	add.w	r3, r0, #40	; 0x28
 8001a80:	f100 0724 	add.w	r7, r0, #36	; 0x24
 8001a84:	6082      	str	r2, [r0, #8]
 8001a86:	63c2      	str	r2, [r0, #60]	; 0x3c
 8001a88:	f880 c01e 	strb.w	ip, [r0, #30]
 8001a8c:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8001a90:	6185      	str	r5, [r0, #24]
 8001a92:	6108      	str	r0, [r1, #16]
 8001a94:	4629      	mov	r1, r5
 8001a96:	e9c0 7309 	strd	r7, r3, [r0, #36]	; 0x24
 8001a9a:	62c3      	str	r3, [r0, #44]	; 0x2c
 8001a9c:	6170      	str	r0, [r6, #20]
 8001a9e:	f7ff fef7 	bl	8001890 <chSchWakeupS>
 8001aa2:	f385 8811 	msr	BASEPRI, r5
 8001aa6:	4620      	mov	r0, r4
 8001aa8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001aaa:	bf00      	nop
 8001aac:	20000930 	.word	0x20000930
 8001ab0:	080002c9 	.word	0x080002c9
	...

08001ac0 <chSchGoSleepS>:
 8001ac0:	4b07      	ldr	r3, [pc, #28]	; (8001ae0 <chSchGoSleepS+0x20>)
 8001ac2:	6999      	ldr	r1, [r3, #24]
 8001ac4:	681a      	ldr	r2, [r3, #0]
 8001ac6:	b410      	push	{r4}
 8001ac8:	7708      	strb	r0, [r1, #28]
 8001aca:	6810      	ldr	r0, [r2, #0]
 8001acc:	6018      	str	r0, [r3, #0]
 8001ace:	2401      	movs	r4, #1
 8001ad0:	6043      	str	r3, [r0, #4]
 8001ad2:	7714      	strb	r4, [r2, #28]
 8001ad4:	4610      	mov	r0, r2
 8001ad6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001ada:	619a      	str	r2, [r3, #24]
 8001adc:	f7fe bbe8 	b.w	80002b0 <_port_switch>
 8001ae0:	20000930 	.word	0x20000930
	...

08001af0 <chSemSignalWait.constprop.48>:
 8001af0:	b538      	push	{r3, r4, r5, lr}
 8001af2:	2320      	movs	r3, #32
 8001af4:	f383 8811 	msr	BASEPRI, r3
 8001af8:	4c15      	ldr	r4, [pc, #84]	; (8001b50 <chSemSignalWait.constprop.48+0x60>)
 8001afa:	68a3      	ldr	r3, [r4, #8]
 8001afc:	3301      	adds	r3, #1
 8001afe:	2b00      	cmp	r3, #0
 8001b00:	60a3      	str	r3, [r4, #8]
 8001b02:	dd1a      	ble.n	8001b3a <chSemSignalWait.constprop.48+0x4a>
 8001b04:	3b01      	subs	r3, #1
 8001b06:	2b00      	cmp	r3, #0
 8001b08:	60a3      	str	r3, [r4, #8]
 8001b0a:	db06      	blt.n	8001b1a <chSemSignalWait.constprop.48+0x2a>
 8001b0c:	f7ff fd90 	bl	8001630 <chSchRescheduleS>
 8001b10:	2000      	movs	r0, #0
 8001b12:	2300      	movs	r3, #0
 8001b14:	f383 8811 	msr	BASEPRI, r3
 8001b18:	bd38      	pop	{r3, r4, r5, pc}
 8001b1a:	4a0e      	ldr	r2, [pc, #56]	; (8001b54 <chSemSignalWait.constprop.48+0x64>)
 8001b1c:	6863      	ldr	r3, [r4, #4]
 8001b1e:	6995      	ldr	r5, [r2, #24]
 8001b20:	2005      	movs	r0, #5
 8001b22:	e9c5 4300 	strd	r4, r3, [r5]
 8001b26:	601d      	str	r5, [r3, #0]
 8001b28:	622c      	str	r4, [r5, #32]
 8001b2a:	6065      	str	r5, [r4, #4]
 8001b2c:	f7ff ffc8 	bl	8001ac0 <chSchGoSleepS>
 8001b30:	6a28      	ldr	r0, [r5, #32]
 8001b32:	2300      	movs	r3, #0
 8001b34:	f383 8811 	msr	BASEPRI, r3
 8001b38:	bd38      	pop	{r3, r4, r5, pc}
 8001b3a:	6820      	ldr	r0, [r4, #0]
 8001b3c:	6803      	ldr	r3, [r0, #0]
 8001b3e:	6023      	str	r3, [r4, #0]
 8001b40:	605c      	str	r4, [r3, #4]
 8001b42:	f7ff f92d 	bl	8000da0 <chSchReadyI>
 8001b46:	2200      	movs	r2, #0
 8001b48:	68a3      	ldr	r3, [r4, #8]
 8001b4a:	6202      	str	r2, [r0, #32]
 8001b4c:	e7da      	b.n	8001b04 <chSemSignalWait.constprop.48+0x14>
 8001b4e:	bf00      	nop
 8001b50:	200008ac 	.word	0x200008ac
 8001b54:	20000930 	.word	0x20000930
	...

08001b60 <sem3_execute>:
 8001b60:	b510      	push	{r4, lr}
 8001b62:	4a1e      	ldr	r2, [pc, #120]	; (8001bdc <sem3_execute+0x7c>)
 8001b64:	4b1e      	ldr	r3, [pc, #120]	; (8001be0 <sem3_execute+0x80>)
 8001b66:	6992      	ldr	r2, [r2, #24]
 8001b68:	481e      	ldr	r0, [pc, #120]	; (8001be4 <sem3_execute+0x84>)
 8001b6a:	6892      	ldr	r2, [r2, #8]
 8001b6c:	4c1e      	ldr	r4, [pc, #120]	; (8001be8 <sem3_execute+0x88>)
 8001b6e:	b082      	sub	sp, #8
 8001b70:	2100      	movs	r1, #0
 8001b72:	3201      	adds	r2, #1
 8001b74:	9100      	str	r1, [sp, #0]
 8001b76:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8001b7a:	f7ff ff69 	bl	8001a50 <chThdCreateStatic>
 8001b7e:	4b1b      	ldr	r3, [pc, #108]	; (8001bec <sem3_execute+0x8c>)
 8001b80:	6018      	str	r0, [r3, #0]
 8001b82:	f7ff ffb5 	bl	8001af0 <chSemSignalWait.constprop.48>
 8001b86:	6821      	ldr	r1, [r4, #0]
 8001b88:	1b09      	subs	r1, r1, r4
 8001b8a:	fab1 f181 	clz	r1, r1
 8001b8e:	2001      	movs	r0, #1
 8001b90:	0949      	lsrs	r1, r1, #5
 8001b92:	f7fe fe65 	bl	8000860 <_test_assert>
 8001b96:	b108      	cbz	r0, 8001b9c <sem3_execute+0x3c>
 8001b98:	b002      	add	sp, #8
 8001b9a:	bd10      	pop	{r4, pc}
 8001b9c:	68a1      	ldr	r1, [r4, #8]
 8001b9e:	fab1 f181 	clz	r1, r1
 8001ba2:	0949      	lsrs	r1, r1, #5
 8001ba4:	2002      	movs	r0, #2
 8001ba6:	f7fe fe5b 	bl	8000860 <_test_assert>
 8001baa:	2800      	cmp	r0, #0
 8001bac:	d1f4      	bne.n	8001b98 <sem3_execute+0x38>
 8001bae:	f7ff ff9f 	bl	8001af0 <chSemSignalWait.constprop.48>
 8001bb2:	6821      	ldr	r1, [r4, #0]
 8001bb4:	1b09      	subs	r1, r1, r4
 8001bb6:	fab1 f181 	clz	r1, r1
 8001bba:	2003      	movs	r0, #3
 8001bbc:	0949      	lsrs	r1, r1, #5
 8001bbe:	f7fe fe4f 	bl	8000860 <_test_assert>
 8001bc2:	2800      	cmp	r0, #0
 8001bc4:	d1e8      	bne.n	8001b98 <sem3_execute+0x38>
 8001bc6:	68a1      	ldr	r1, [r4, #8]
 8001bc8:	fab1 f181 	clz	r1, r1
 8001bcc:	0949      	lsrs	r1, r1, #5
 8001bce:	2004      	movs	r0, #4
 8001bd0:	b002      	add	sp, #8
 8001bd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001bd6:	f7fe be43 	b.w	8000860 <_test_assert>
 8001bda:	bf00      	nop
 8001bdc:	20000930 	.word	0x20000930
 8001be0:	08003a41 	.word	0x08003a41
 8001be4:	20000bc0 	.word	0x20000bc0
 8001be8:	200008ac 	.word	0x200008ac
 8001bec:	200014fc 	.word	0x200014fc

08001bf0 <chEvtWaitOne.constprop.32>:
 8001bf0:	4a0b      	ldr	r2, [pc, #44]	; (8001c20 <chEvtWaitOne.constprop.32+0x30>)
 8001bf2:	b510      	push	{r4, lr}
 8001bf4:	2320      	movs	r3, #32
 8001bf6:	6994      	ldr	r4, [r2, #24]
 8001bf8:	f383 8811 	msr	BASEPRI, r3
 8001bfc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001bfe:	b933      	cbnz	r3, 8001c0e <chEvtWaitOne.constprop.32+0x1e>
 8001c00:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001c04:	6223      	str	r3, [r4, #32]
 8001c06:	200a      	movs	r0, #10
 8001c08:	f7ff ff5a 	bl	8001ac0 <chSchGoSleepS>
 8001c0c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001c0e:	4258      	negs	r0, r3
 8001c10:	4018      	ands	r0, r3
 8001c12:	ea23 0300 	bic.w	r3, r3, r0
 8001c16:	6363      	str	r3, [r4, #52]	; 0x34
 8001c18:	2300      	movs	r3, #0
 8001c1a:	f383 8811 	msr	BASEPRI, r3
 8001c1e:	bd10      	pop	{r4, pc}
 8001c20:	20000930 	.word	0x20000930
	...

08001c30 <chEvtWaitAny.constprop.31>:
 8001c30:	4a09      	ldr	r2, [pc, #36]	; (8001c58 <chEvtWaitAny.constprop.31+0x28>)
 8001c32:	b510      	push	{r4, lr}
 8001c34:	2320      	movs	r3, #32
 8001c36:	6994      	ldr	r4, [r2, #24]
 8001c38:	f383 8811 	msr	BASEPRI, r3
 8001c3c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001c3e:	b930      	cbnz	r0, 8001c4e <chEvtWaitAny.constprop.31+0x1e>
 8001c40:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001c44:	200a      	movs	r0, #10
 8001c46:	6223      	str	r3, [r4, #32]
 8001c48:	f7ff ff3a 	bl	8001ac0 <chSchGoSleepS>
 8001c4c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001c4e:	2300      	movs	r3, #0
 8001c50:	6363      	str	r3, [r4, #52]	; 0x34
 8001c52:	f383 8811 	msr	BASEPRI, r3
 8001c56:	bd10      	pop	{r4, pc}
 8001c58:	20000930 	.word	0x20000930
 8001c5c:	00000000 	.word	0x00000000

08001c60 <thread4.lto_priv.74>:
 8001c60:	4a07      	ldr	r2, [pc, #28]	; (8001c80 <thread4.lto_priv.74+0x20>)
 8001c62:	b510      	push	{r4, lr}
 8001c64:	2320      	movs	r3, #32
 8001c66:	6994      	ldr	r4, [r2, #24]
 8001c68:	f383 8811 	msr	BASEPRI, r3
 8001c6c:	2003      	movs	r0, #3
 8001c6e:	f7ff ff27 	bl	8001ac0 <chSchGoSleepS>
 8001c72:	6a23      	ldr	r3, [r4, #32]
 8001c74:	2b00      	cmp	r3, #0
 8001c76:	d0f9      	beq.n	8001c6c <thread4.lto_priv.74+0xc>
 8001c78:	2300      	movs	r3, #0
 8001c7a:	f383 8811 	msr	BASEPRI, r3
 8001c7e:	bd10      	pop	{r4, pc}
 8001c80:	20000930 	.word	0x20000930
	...

08001c90 <chSchGoSleepTimeoutS>:
 8001c90:	b530      	push	{r4, r5, lr}
 8001c92:	1c4b      	adds	r3, r1, #1
 8001c94:	b087      	sub	sp, #28
 8001c96:	d012      	beq.n	8001cbe <chSchGoSleepTimeoutS+0x2e>
 8001c98:	4c0c      	ldr	r4, [pc, #48]	; (8001ccc <chSchGoSleepTimeoutS+0x3c>)
 8001c9a:	4a0d      	ldr	r2, [pc, #52]	; (8001cd0 <chSchGoSleepTimeoutS+0x40>)
 8001c9c:	69a3      	ldr	r3, [r4, #24]
 8001c9e:	4605      	mov	r5, r0
 8001ca0:	a801      	add	r0, sp, #4
 8001ca2:	f7ff fac5 	bl	8001230 <chVTDoSetI>
 8001ca6:	4628      	mov	r0, r5
 8001ca8:	f7ff ff0a 	bl	8001ac0 <chSchGoSleepS>
 8001cac:	9b04      	ldr	r3, [sp, #16]
 8001cae:	b113      	cbz	r3, 8001cb6 <chSchGoSleepTimeoutS+0x26>
 8001cb0:	a801      	add	r0, sp, #4
 8001cb2:	f7ff fa7d 	bl	80011b0 <chVTDoResetI>
 8001cb6:	69a3      	ldr	r3, [r4, #24]
 8001cb8:	6a18      	ldr	r0, [r3, #32]
 8001cba:	b007      	add	sp, #28
 8001cbc:	bd30      	pop	{r4, r5, pc}
 8001cbe:	4c03      	ldr	r4, [pc, #12]	; (8001ccc <chSchGoSleepTimeoutS+0x3c>)
 8001cc0:	f7ff fefe 	bl	8001ac0 <chSchGoSleepS>
 8001cc4:	69a3      	ldr	r3, [r4, #24]
 8001cc6:	6a18      	ldr	r0, [r3, #32]
 8001cc8:	b007      	add	sp, #28
 8001cca:	bd30      	pop	{r4, r5, pc}
 8001ccc:	20000930 	.word	0x20000930
 8001cd0:	08000d31 	.word	0x08000d31
	...

08001ce0 <chSemWaitTimeout.constprop.50>:
 8001ce0:	2320      	movs	r3, #32
 8001ce2:	f383 8811 	msr	BASEPRI, r3
 8001ce6:	4b10      	ldr	r3, [pc, #64]	; (8001d28 <chSemWaitTimeout.constprop.50+0x48>)
 8001ce8:	6899      	ldr	r1, [r3, #8]
 8001cea:	1e4a      	subs	r2, r1, #1
 8001cec:	2a00      	cmp	r2, #0
 8001cee:	609a      	str	r2, [r3, #8]
 8001cf0:	db04      	blt.n	8001cfc <chSemWaitTimeout.constprop.50+0x1c>
 8001cf2:	2000      	movs	r0, #0
 8001cf4:	2300      	movs	r3, #0
 8001cf6:	f383 8811 	msr	BASEPRI, r3
 8001cfa:	4770      	bx	lr
 8001cfc:	b180      	cbz	r0, 8001d20 <chSemWaitTimeout.constprop.50+0x40>
 8001cfe:	4a0b      	ldr	r2, [pc, #44]	; (8001d2c <chSemWaitTimeout.constprop.50+0x4c>)
 8001d00:	b510      	push	{r4, lr}
 8001d02:	6992      	ldr	r2, [r2, #24]
 8001d04:	685c      	ldr	r4, [r3, #4]
 8001d06:	6213      	str	r3, [r2, #32]
 8001d08:	e9c2 3400 	strd	r3, r4, [r2]
 8001d0c:	4601      	mov	r1, r0
 8001d0e:	6022      	str	r2, [r4, #0]
 8001d10:	2005      	movs	r0, #5
 8001d12:	605a      	str	r2, [r3, #4]
 8001d14:	f7ff ffbc 	bl	8001c90 <chSchGoSleepTimeoutS>
 8001d18:	2300      	movs	r3, #0
 8001d1a:	f383 8811 	msr	BASEPRI, r3
 8001d1e:	bd10      	pop	{r4, pc}
 8001d20:	6099      	str	r1, [r3, #8]
 8001d22:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001d26:	e7e5      	b.n	8001cf4 <chSemWaitTimeout.constprop.50+0x14>
 8001d28:	200008ac 	.word	0x200008ac
 8001d2c:	20000930 	.word	0x20000930

08001d30 <evt3_execute>:
 8001d30:	b570      	push	{r4, r5, r6, lr}
 8001d32:	4c55      	ldr	r4, [pc, #340]	; (8001e88 <evt3_execute+0x158>)
 8001d34:	2320      	movs	r3, #32
 8001d36:	69a2      	ldr	r2, [r4, #24]
 8001d38:	f383 8811 	msr	BASEPRI, r3
 8001d3c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001d3e:	b93b      	cbnz	r3, 8001d50 <evt3_execute+0x20>
 8001d40:	f383 8811 	msr	BASEPRI, r3
 8001d44:	2101      	movs	r1, #1
 8001d46:	2001      	movs	r0, #1
 8001d48:	f7fe fd8a 	bl	8000860 <_test_assert>
 8001d4c:	b180      	cbz	r0, 8001d70 <evt3_execute+0x40>
 8001d4e:	bd70      	pop	{r4, r5, r6, pc}
 8001d50:	4259      	negs	r1, r3
 8001d52:	4019      	ands	r1, r3
 8001d54:	ea23 0301 	bic.w	r3, r3, r1
 8001d58:	6353      	str	r3, [r2, #52]	; 0x34
 8001d5a:	2300      	movs	r3, #0
 8001d5c:	f383 8811 	msr	BASEPRI, r3
 8001d60:	fab1 f181 	clz	r1, r1
 8001d64:	0949      	lsrs	r1, r1, #5
 8001d66:	2001      	movs	r0, #1
 8001d68:	f7fe fd7a 	bl	8000860 <_test_assert>
 8001d6c:	2800      	cmp	r0, #0
 8001d6e:	d1ee      	bne.n	8001d4e <evt3_execute+0x1e>
 8001d70:	69a3      	ldr	r3, [r4, #24]
 8001d72:	2220      	movs	r2, #32
 8001d74:	f382 8811 	msr	BASEPRI, r2
 8001d78:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001d7a:	2a00      	cmp	r2, #0
 8001d7c:	d06f      	beq.n	8001e5e <evt3_execute+0x12e>
 8001d7e:	6358      	str	r0, [r3, #52]	; 0x34
 8001d80:	f380 8811 	msr	BASEPRI, r0
 8001d84:	4601      	mov	r1, r0
 8001d86:	2002      	movs	r0, #2
 8001d88:	f7fe fd6a 	bl	8000860 <_test_assert>
 8001d8c:	2800      	cmp	r0, #0
 8001d8e:	d1de      	bne.n	8001d4e <evt3_execute+0x1e>
 8001d90:	69a3      	ldr	r3, [r4, #24]
 8001d92:	2220      	movs	r2, #32
 8001d94:	f382 8811 	msr	BASEPRI, r2
 8001d98:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001d9a:	3201      	adds	r2, #1
 8001d9c:	d063      	beq.n	8001e66 <evt3_execute+0x136>
 8001d9e:	f380 8811 	msr	BASEPRI, r0
 8001da2:	2001      	movs	r0, #1
 8001da4:	4601      	mov	r1, r0
 8001da6:	2003      	movs	r0, #3
 8001da8:	f7fe fd5a 	bl	8000860 <_test_assert>
 8001dac:	2800      	cmp	r0, #0
 8001dae:	d1ce      	bne.n	8001d4e <evt3_execute+0x1e>
 8001db0:	69a6      	ldr	r6, [r4, #24]
 8001db2:	2320      	movs	r3, #32
 8001db4:	f383 8811 	msr	BASEPRI, r3
 8001db8:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001dba:	b94d      	cbnz	r5, 8001dd0 <evt3_execute+0xa0>
 8001dbc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001dc0:	210a      	movs	r1, #10
 8001dc2:	6233      	str	r3, [r6, #32]
 8001dc4:	4608      	mov	r0, r1
 8001dc6:	f7ff ff63 	bl	8001c90 <chSchGoSleepTimeoutS>
 8001dca:	2800      	cmp	r0, #0
 8001dcc:	db4f      	blt.n	8001e6e <evt3_execute+0x13e>
 8001dce:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001dd0:	4269      	negs	r1, r5
 8001dd2:	4029      	ands	r1, r5
 8001dd4:	ea25 0501 	bic.w	r5, r5, r1
 8001dd8:	6375      	str	r5, [r6, #52]	; 0x34
 8001dda:	2300      	movs	r3, #0
 8001ddc:	f383 8811 	msr	BASEPRI, r3
 8001de0:	fab1 f181 	clz	r1, r1
 8001de4:	0949      	lsrs	r1, r1, #5
 8001de6:	2004      	movs	r0, #4
 8001de8:	f7fe fd3a 	bl	8000860 <_test_assert>
 8001dec:	2800      	cmp	r0, #0
 8001dee:	d1ae      	bne.n	8001d4e <evt3_execute+0x1e>
 8001df0:	69a6      	ldr	r6, [r4, #24]
 8001df2:	2320      	movs	r3, #32
 8001df4:	f383 8811 	msr	BASEPRI, r3
 8001df8:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001dfa:	b94d      	cbnz	r5, 8001e10 <evt3_execute+0xe0>
 8001dfc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001e00:	210a      	movs	r1, #10
 8001e02:	6233      	str	r3, [r6, #32]
 8001e04:	4608      	mov	r0, r1
 8001e06:	f7ff ff43 	bl	8001c90 <chSchGoSleepTimeoutS>
 8001e0a:	2800      	cmp	r0, #0
 8001e0c:	db33      	blt.n	8001e76 <evt3_execute+0x146>
 8001e0e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001e10:	2300      	movs	r3, #0
 8001e12:	6373      	str	r3, [r6, #52]	; 0x34
 8001e14:	f383 8811 	msr	BASEPRI, r3
 8001e18:	fab5 f185 	clz	r1, r5
 8001e1c:	0949      	lsrs	r1, r1, #5
 8001e1e:	2005      	movs	r0, #5
 8001e20:	f7fe fd1e 	bl	8000860 <_test_assert>
 8001e24:	4605      	mov	r5, r0
 8001e26:	2800      	cmp	r0, #0
 8001e28:	d191      	bne.n	8001d4e <evt3_execute+0x1e>
 8001e2a:	69a4      	ldr	r4, [r4, #24]
 8001e2c:	2320      	movs	r3, #32
 8001e2e:	f383 8811 	msr	BASEPRI, r3
 8001e32:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001e34:	3301      	adds	r3, #1
 8001e36:	d008      	beq.n	8001e4a <evt3_execute+0x11a>
 8001e38:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001e3c:	6223      	str	r3, [r4, #32]
 8001e3e:	210a      	movs	r1, #10
 8001e40:	200b      	movs	r0, #11
 8001e42:	f7ff ff25 	bl	8001c90 <chSchGoSleepTimeoutS>
 8001e46:	2800      	cmp	r0, #0
 8001e48:	db19      	blt.n	8001e7e <evt3_execute+0x14e>
 8001e4a:	2300      	movs	r3, #0
 8001e4c:	6363      	str	r3, [r4, #52]	; 0x34
 8001e4e:	f383 8811 	msr	BASEPRI, r3
 8001e52:	4629      	mov	r1, r5
 8001e54:	2006      	movs	r0, #6
 8001e56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001e5a:	f7fe bd01 	b.w	8000860 <_test_assert>
 8001e5e:	f382 8811 	msr	BASEPRI, r2
 8001e62:	2101      	movs	r1, #1
 8001e64:	e78f      	b.n	8001d86 <evt3_execute+0x56>
 8001e66:	6358      	str	r0, [r3, #52]	; 0x34
 8001e68:	f380 8811 	msr	BASEPRI, r0
 8001e6c:	e79a      	b.n	8001da4 <evt3_execute+0x74>
 8001e6e:	f385 8811 	msr	BASEPRI, r5
 8001e72:	2101      	movs	r1, #1
 8001e74:	e7b7      	b.n	8001de6 <evt3_execute+0xb6>
 8001e76:	f385 8811 	msr	BASEPRI, r5
 8001e7a:	2101      	movs	r1, #1
 8001e7c:	e7cf      	b.n	8001e1e <evt3_execute+0xee>
 8001e7e:	f385 8811 	msr	BASEPRI, r5
 8001e82:	2501      	movs	r5, #1
 8001e84:	e7e5      	b.n	8001e52 <evt3_execute+0x122>
 8001e86:	bf00      	nop
 8001e88:	20000930 	.word	0x20000930
 8001e8c:	00000000 	.word	0x00000000

08001e90 <chSemWaitTimeoutS>:
 8001e90:	6883      	ldr	r3, [r0, #8]
 8001e92:	3b01      	subs	r3, #1
 8001e94:	2b00      	cmp	r3, #0
 8001e96:	6083      	str	r3, [r0, #8]
 8001e98:	db01      	blt.n	8001e9e <chSemWaitTimeoutS+0xe>
 8001e9a:	2000      	movs	r0, #0
 8001e9c:	4770      	bx	lr
 8001e9e:	4b07      	ldr	r3, [pc, #28]	; (8001ebc <chSemWaitTimeoutS+0x2c>)
 8001ea0:	699b      	ldr	r3, [r3, #24]
 8001ea2:	b410      	push	{r4}
 8001ea4:	6218      	str	r0, [r3, #32]
 8001ea6:	6018      	str	r0, [r3, #0]
 8001ea8:	6844      	ldr	r4, [r0, #4]
 8001eaa:	605c      	str	r4, [r3, #4]
 8001eac:	4602      	mov	r2, r0
 8001eae:	6023      	str	r3, [r4, #0]
 8001eb0:	2005      	movs	r0, #5
 8001eb2:	6053      	str	r3, [r2, #4]
 8001eb4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001eb8:	f7ff beea 	b.w	8001c90 <chSchGoSleepTimeoutS>
 8001ebc:	20000930 	.word	0x20000930

08001ec0 <chMBPost.constprop.20>:
 8001ec0:	b570      	push	{r4, r5, r6, lr}
 8001ec2:	2320      	movs	r3, #32
 8001ec4:	4606      	mov	r6, r0
 8001ec6:	f383 8811 	msr	BASEPRI, r3
 8001eca:	4c0d      	ldr	r4, [pc, #52]	; (8001f00 <chMBPost.constprop.20+0x40>)
 8001ecc:	f104 001c 	add.w	r0, r4, #28
 8001ed0:	f7ff ffde 	bl	8001e90 <chSemWaitTimeoutS>
 8001ed4:	4605      	mov	r5, r0
 8001ed6:	b968      	cbnz	r0, 8001ef4 <chMBPost.constprop.20+0x34>
 8001ed8:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8001edc:	1d13      	adds	r3, r2, #4
 8001ede:	428b      	cmp	r3, r1
 8001ee0:	60a3      	str	r3, [r4, #8]
 8001ee2:	4808      	ldr	r0, [pc, #32]	; (8001f04 <chMBPost.constprop.20+0x44>)
 8001ee4:	6016      	str	r6, [r2, #0]
 8001ee6:	bf24      	itt	cs
 8001ee8:	6823      	ldrcs	r3, [r4, #0]
 8001eea:	60a3      	strcs	r3, [r4, #8]
 8001eec:	f7ff f8d8 	bl	80010a0 <chSemSignalI>
 8001ef0:	f7ff fb9e 	bl	8001630 <chSchRescheduleS>
 8001ef4:	2300      	movs	r3, #0
 8001ef6:	f383 8811 	msr	BASEPRI, r3
 8001efa:	4628      	mov	r0, r5
 8001efc:	bd70      	pop	{r4, r5, r6, pc}
 8001efe:	bf00      	nop
 8001f00:	20000854 	.word	0x20000854
 8001f04:	20000864 	.word	0x20000864
	...

08001f10 <chMBPostAhead.constprop.18>:
 8001f10:	b570      	push	{r4, r5, r6, lr}
 8001f12:	2320      	movs	r3, #32
 8001f14:	4606      	mov	r6, r0
 8001f16:	f383 8811 	msr	BASEPRI, r3
 8001f1a:	4c10      	ldr	r4, [pc, #64]	; (8001f5c <chMBPostAhead.constprop.18+0x4c>)
 8001f1c:	f104 001c 	add.w	r0, r4, #28
 8001f20:	f7ff ffb6 	bl	8001e90 <chSemWaitTimeoutS>
 8001f24:	4605      	mov	r5, r0
 8001f26:	b120      	cbz	r0, 8001f32 <chMBPostAhead.constprop.18+0x22>
 8001f28:	2300      	movs	r3, #0
 8001f2a:	f383 8811 	msr	BASEPRI, r3
 8001f2e:	4628      	mov	r0, r5
 8001f30:	bd70      	pop	{r4, r5, r6, pc}
 8001f32:	68e3      	ldr	r3, [r4, #12]
 8001f34:	6822      	ldr	r2, [r4, #0]
 8001f36:	3b04      	subs	r3, #4
 8001f38:	4293      	cmp	r3, r2
 8001f3a:	60e3      	str	r3, [r4, #12]
 8001f3c:	d202      	bcs.n	8001f44 <chMBPostAhead.constprop.18+0x34>
 8001f3e:	6863      	ldr	r3, [r4, #4]
 8001f40:	3b04      	subs	r3, #4
 8001f42:	60e3      	str	r3, [r4, #12]
 8001f44:	601e      	str	r6, [r3, #0]
 8001f46:	4806      	ldr	r0, [pc, #24]	; (8001f60 <chMBPostAhead.constprop.18+0x50>)
 8001f48:	f7ff f8aa 	bl	80010a0 <chSemSignalI>
 8001f4c:	f7ff fb70 	bl	8001630 <chSchRescheduleS>
 8001f50:	2300      	movs	r3, #0
 8001f52:	f383 8811 	msr	BASEPRI, r3
 8001f56:	4628      	mov	r0, r5
 8001f58:	bd70      	pop	{r4, r5, r6, pc}
 8001f5a:	bf00      	nop
 8001f5c:	20000854 	.word	0x20000854
 8001f60:	20000864 	.word	0x20000864
	...

08001f70 <chMBFetch.constprop.16>:
 8001f70:	b570      	push	{r4, r5, r6, lr}
 8001f72:	2320      	movs	r3, #32
 8001f74:	4606      	mov	r6, r0
 8001f76:	f383 8811 	msr	BASEPRI, r3
 8001f7a:	4c0d      	ldr	r4, [pc, #52]	; (8001fb0 <chMBFetch.constprop.16+0x40>)
 8001f7c:	f104 0010 	add.w	r0, r4, #16
 8001f80:	f7ff ff86 	bl	8001e90 <chSemWaitTimeoutS>
 8001f84:	4605      	mov	r5, r0
 8001f86:	b970      	cbnz	r0, 8001fa6 <chMBFetch.constprop.16+0x36>
 8001f88:	68e3      	ldr	r3, [r4, #12]
 8001f8a:	6862      	ldr	r2, [r4, #4]
 8001f8c:	6819      	ldr	r1, [r3, #0]
 8001f8e:	4809      	ldr	r0, [pc, #36]	; (8001fb4 <chMBFetch.constprop.16+0x44>)
 8001f90:	3304      	adds	r3, #4
 8001f92:	4293      	cmp	r3, r2
 8001f94:	60e3      	str	r3, [r4, #12]
 8001f96:	6031      	str	r1, [r6, #0]
 8001f98:	bf24      	itt	cs
 8001f9a:	6823      	ldrcs	r3, [r4, #0]
 8001f9c:	60e3      	strcs	r3, [r4, #12]
 8001f9e:	f7ff f87f 	bl	80010a0 <chSemSignalI>
 8001fa2:	f7ff fb45 	bl	8001630 <chSchRescheduleS>
 8001fa6:	2300      	movs	r3, #0
 8001fa8:	f383 8811 	msr	BASEPRI, r3
 8001fac:	4628      	mov	r0, r5
 8001fae:	bd70      	pop	{r4, r5, r6, pc}
 8001fb0:	20000854 	.word	0x20000854
 8001fb4:	20000870 	.word	0x20000870
	...

08001fc0 <mbox1_execute>:
 8001fc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001fc2:	2320      	movs	r3, #32
 8001fc4:	b083      	sub	sp, #12
 8001fc6:	f383 8811 	msr	BASEPRI, r3
 8001fca:	4dd1      	ldr	r5, [pc, #836]	; (8002310 <mbox1_execute+0x350>)
 8001fcc:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8001fce:	f1a1 0105 	sub.w	r1, r1, #5
 8001fd2:	fab1 f181 	clz	r1, r1
 8001fd6:	2001      	movs	r0, #1
 8001fd8:	0949      	lsrs	r1, r1, #5
 8001fda:	f7fe fc41 	bl	8000860 <_test_assert>
 8001fde:	2800      	cmp	r0, #0
 8001fe0:	f040 8191 	bne.w	8002306 <mbox1_execute+0x346>
 8001fe4:	f380 8811 	msr	BASEPRI, r0
 8001fe8:	2442      	movs	r4, #66	; 0x42
 8001fea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001fee:	4620      	mov	r0, r4
 8001ff0:	f7ff ff66 	bl	8001ec0 <chMBPost.constprop.20>
 8001ff4:	fab0 f180 	clz	r1, r0
 8001ff8:	0949      	lsrs	r1, r1, #5
 8001ffa:	2002      	movs	r0, #2
 8001ffc:	f7fe fc30 	bl	8000860 <_test_assert>
 8002000:	3401      	adds	r4, #1
 8002002:	b978      	cbnz	r0, 8002024 <mbox1_execute+0x64>
 8002004:	2c46      	cmp	r4, #70	; 0x46
 8002006:	d1f0      	bne.n	8001fea <mbox1_execute+0x2a>
 8002008:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800200c:	2041      	movs	r0, #65	; 0x41
 800200e:	f7ff ff7f 	bl	8001f10 <chMBPostAhead.constprop.18>
 8002012:	fab0 f180 	clz	r1, r0
 8002016:	0949      	lsrs	r1, r1, #5
 8002018:	2003      	movs	r0, #3
 800201a:	f7fe fc21 	bl	8000860 <_test_assert>
 800201e:	2800      	cmp	r0, #0
 8002020:	f000 817e 	beq.w	8002320 <mbox1_execute+0x360>
 8002024:	b003      	add	sp, #12
 8002026:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002028:	f380 8811 	msr	BASEPRI, r0
 800202c:	f384 8811 	msr	BASEPRI, r4
 8002030:	2041      	movs	r0, #65	; 0x41
 8002032:	f7ff f845 	bl	80010c0 <chMBPostI.constprop.19>
 8002036:	fab0 f180 	clz	r1, r0
 800203a:	0949      	lsrs	r1, r1, #5
 800203c:	2016      	movs	r0, #22
 800203e:	f7fe fc0f 	bl	8000860 <_test_assert>
 8002042:	2800      	cmp	r0, #0
 8002044:	d1ee      	bne.n	8002024 <mbox1_execute+0x64>
 8002046:	2042      	movs	r0, #66	; 0x42
 8002048:	f7ff f83a 	bl	80010c0 <chMBPostI.constprop.19>
 800204c:	fab0 f180 	clz	r1, r0
 8002050:	0949      	lsrs	r1, r1, #5
 8002052:	2017      	movs	r0, #23
 8002054:	f7fe fc04 	bl	8000860 <_test_assert>
 8002058:	2800      	cmp	r0, #0
 800205a:	d1e3      	bne.n	8002024 <mbox1_execute+0x64>
 800205c:	2043      	movs	r0, #67	; 0x43
 800205e:	f7ff f82f 	bl	80010c0 <chMBPostI.constprop.19>
 8002062:	fab0 f180 	clz	r1, r0
 8002066:	0949      	lsrs	r1, r1, #5
 8002068:	2018      	movs	r0, #24
 800206a:	f7fe fbf9 	bl	8000860 <_test_assert>
 800206e:	2800      	cmp	r0, #0
 8002070:	d1d8      	bne.n	8002024 <mbox1_execute+0x64>
 8002072:	2044      	movs	r0, #68	; 0x44
 8002074:	f7ff f824 	bl	80010c0 <chMBPostI.constprop.19>
 8002078:	fab0 f180 	clz	r1, r0
 800207c:	0949      	lsrs	r1, r1, #5
 800207e:	2019      	movs	r0, #25
 8002080:	f7fe fbee 	bl	8000860 <_test_assert>
 8002084:	4606      	mov	r6, r0
 8002086:	2800      	cmp	r0, #0
 8002088:	d1cc      	bne.n	8002024 <mbox1_execute+0x64>
 800208a:	2045      	movs	r0, #69	; 0x45
 800208c:	f7ff f818 	bl	80010c0 <chMBPostI.constprop.19>
 8002090:	f386 8811 	msr	BASEPRI, r6
 8002094:	fab0 f180 	clz	r1, r0
 8002098:	0949      	lsrs	r1, r1, #5
 800209a:	201a      	movs	r0, #26
 800209c:	f7fe fbe0 	bl	8000860 <_test_assert>
 80020a0:	2800      	cmp	r0, #0
 80020a2:	d1bf      	bne.n	8002024 <mbox1_execute+0x64>
 80020a4:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80020a8:	eba1 0c03 	sub.w	ip, r1, r3
 80020ac:	f1dc 0100 	rsbs	r1, ip, #0
 80020b0:	eb41 010c 	adc.w	r1, r1, ip
 80020b4:	201b      	movs	r0, #27
 80020b6:	f7fe fbd3 	bl	8000860 <_test_assert>
 80020ba:	2800      	cmp	r0, #0
 80020bc:	d1b2      	bne.n	8002024 <mbox1_execute+0x64>
 80020be:	4607      	mov	r7, r0
 80020c0:	2605      	movs	r6, #5
 80020c2:	f384 8811 	msr	BASEPRI, r4
 80020c6:	a801      	add	r0, sp, #4
 80020c8:	f7ff f83a 	bl	8001140 <chMBFetchI.constprop.15>
 80020cc:	f387 8811 	msr	BASEPRI, r7
 80020d0:	fab0 f180 	clz	r1, r0
 80020d4:	0949      	lsrs	r1, r1, #5
 80020d6:	201c      	movs	r0, #28
 80020d8:	f7fe fbc2 	bl	8000860 <_test_assert>
 80020dc:	2800      	cmp	r0, #0
 80020de:	d1a1      	bne.n	8002024 <mbox1_execute+0x64>
 80020e0:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80020e4:	f7fe fbd4 	bl	8000890 <test_emit_token>
 80020e8:	3e01      	subs	r6, #1
 80020ea:	d1ea      	bne.n	80020c2 <mbox1_execute+0x102>
 80020ec:	4989      	ldr	r1, [pc, #548]	; (8002314 <mbox1_execute+0x354>)
 80020ee:	201d      	movs	r0, #29
 80020f0:	f7fe fb8e 	bl	8000810 <_test_assert_sequence>
 80020f4:	2800      	cmp	r0, #0
 80020f6:	d195      	bne.n	8002024 <mbox1_execute+0x64>
 80020f8:	f384 8811 	msr	BASEPRI, r4
 80020fc:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80020fe:	1f4f      	subs	r7, r1, #5
 8002100:	4279      	negs	r1, r7
 8002102:	4179      	adcs	r1, r7
 8002104:	201e      	movs	r0, #30
 8002106:	f7fe fbab 	bl	8000860 <_test_assert>
 800210a:	2800      	cmp	r0, #0
 800210c:	f040 8223 	bne.w	8002556 <mbox1_execute+0x596>
 8002110:	f386 8811 	msr	BASEPRI, r6
 8002114:	f384 8811 	msr	BASEPRI, r4
 8002118:	69a9      	ldr	r1, [r5, #24]
 800211a:	fab1 f181 	clz	r1, r1
 800211e:	0949      	lsrs	r1, r1, #5
 8002120:	201f      	movs	r0, #31
 8002122:	f7fe fb9d 	bl	8000860 <_test_assert>
 8002126:	2800      	cmp	r0, #0
 8002128:	f040 8215 	bne.w	8002556 <mbox1_execute+0x596>
 800212c:	f386 8811 	msr	BASEPRI, r6
 8002130:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002134:	1aca      	subs	r2, r1, r3
 8002136:	4251      	negs	r1, r2
 8002138:	4151      	adcs	r1, r2
 800213a:	2020      	movs	r0, #32
 800213c:	f7fe fb90 	bl	8000860 <_test_assert>
 8002140:	2800      	cmp	r0, #0
 8002142:	f47f af6f 	bne.w	8002024 <mbox1_execute+0x64>
 8002146:	f384 8811 	msr	BASEPRI, r4
 800214a:	2045      	movs	r0, #69	; 0x45
 800214c:	f7fe ffd8 	bl	8001100 <chMBPostAheadI.constprop.17>
 8002150:	fab0 f180 	clz	r1, r0
 8002154:	0949      	lsrs	r1, r1, #5
 8002156:	2021      	movs	r0, #33	; 0x21
 8002158:	f7fe fb82 	bl	8000860 <_test_assert>
 800215c:	2800      	cmp	r0, #0
 800215e:	f47f af61 	bne.w	8002024 <mbox1_execute+0x64>
 8002162:	2044      	movs	r0, #68	; 0x44
 8002164:	f7fe ffcc 	bl	8001100 <chMBPostAheadI.constprop.17>
 8002168:	fab0 f180 	clz	r1, r0
 800216c:	0949      	lsrs	r1, r1, #5
 800216e:	2022      	movs	r0, #34	; 0x22
 8002170:	f7fe fb76 	bl	8000860 <_test_assert>
 8002174:	2800      	cmp	r0, #0
 8002176:	f47f af55 	bne.w	8002024 <mbox1_execute+0x64>
 800217a:	2043      	movs	r0, #67	; 0x43
 800217c:	f7fe ffc0 	bl	8001100 <chMBPostAheadI.constprop.17>
 8002180:	fab0 f180 	clz	r1, r0
 8002184:	0949      	lsrs	r1, r1, #5
 8002186:	2023      	movs	r0, #35	; 0x23
 8002188:	f7fe fb6a 	bl	8000860 <_test_assert>
 800218c:	2800      	cmp	r0, #0
 800218e:	f47f af49 	bne.w	8002024 <mbox1_execute+0x64>
 8002192:	2042      	movs	r0, #66	; 0x42
 8002194:	f7fe ffb4 	bl	8001100 <chMBPostAheadI.constprop.17>
 8002198:	fab0 f180 	clz	r1, r0
 800219c:	0949      	lsrs	r1, r1, #5
 800219e:	2024      	movs	r0, #36	; 0x24
 80021a0:	f7fe fb5e 	bl	8000860 <_test_assert>
 80021a4:	2800      	cmp	r0, #0
 80021a6:	f47f af3d 	bne.w	8002024 <mbox1_execute+0x64>
 80021aa:	2041      	movs	r0, #65	; 0x41
 80021ac:	f7fe ffa8 	bl	8001100 <chMBPostAheadI.constprop.17>
 80021b0:	2300      	movs	r3, #0
 80021b2:	f383 8811 	msr	BASEPRI, r3
 80021b6:	fab0 f180 	clz	r1, r0
 80021ba:	0949      	lsrs	r1, r1, #5
 80021bc:	2025      	movs	r0, #37	; 0x25
 80021be:	f7fe fb4f 	bl	8000860 <_test_assert>
 80021c2:	2800      	cmp	r0, #0
 80021c4:	f47f af2e 	bne.w	8002024 <mbox1_execute+0x64>
 80021c8:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80021cc:	1acb      	subs	r3, r1, r3
 80021ce:	4259      	negs	r1, r3
 80021d0:	4159      	adcs	r1, r3
 80021d2:	2026      	movs	r0, #38	; 0x26
 80021d4:	f7fe fb44 	bl	8000860 <_test_assert>
 80021d8:	2800      	cmp	r0, #0
 80021da:	f47f af23 	bne.w	8002024 <mbox1_execute+0x64>
 80021de:	4606      	mov	r6, r0
 80021e0:	2405      	movs	r4, #5
 80021e2:	2720      	movs	r7, #32
 80021e4:	f387 8811 	msr	BASEPRI, r7
 80021e8:	a801      	add	r0, sp, #4
 80021ea:	f7fe ffa9 	bl	8001140 <chMBFetchI.constprop.15>
 80021ee:	f386 8811 	msr	BASEPRI, r6
 80021f2:	fab0 f180 	clz	r1, r0
 80021f6:	0949      	lsrs	r1, r1, #5
 80021f8:	2027      	movs	r0, #39	; 0x27
 80021fa:	f7fe fb31 	bl	8000860 <_test_assert>
 80021fe:	2800      	cmp	r0, #0
 8002200:	f47f af10 	bne.w	8002024 <mbox1_execute+0x64>
 8002204:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8002208:	f7fe fb42 	bl	8000890 <test_emit_token>
 800220c:	3c01      	subs	r4, #1
 800220e:	d1e9      	bne.n	80021e4 <mbox1_execute+0x224>
 8002210:	4940      	ldr	r1, [pc, #256]	; (8002314 <mbox1_execute+0x354>)
 8002212:	2028      	movs	r0, #40	; 0x28
 8002214:	f7fe fafc 	bl	8000810 <_test_assert_sequence>
 8002218:	2800      	cmp	r0, #0
 800221a:	f47f af03 	bne.w	8002024 <mbox1_execute+0x64>
 800221e:	f387 8811 	msr	BASEPRI, r7
 8002222:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002224:	f1a1 0e05 	sub.w	lr, r1, #5
 8002228:	f1de 0100 	rsbs	r1, lr, #0
 800222c:	eb41 010e 	adc.w	r1, r1, lr
 8002230:	2029      	movs	r0, #41	; 0x29
 8002232:	f7fe fb15 	bl	8000860 <_test_assert>
 8002236:	2800      	cmp	r0, #0
 8002238:	f040 80c5 	bne.w	80023c6 <mbox1_execute+0x406>
 800223c:	f384 8811 	msr	BASEPRI, r4
 8002240:	f387 8811 	msr	BASEPRI, r7
 8002244:	69a9      	ldr	r1, [r5, #24]
 8002246:	fab1 f181 	clz	r1, r1
 800224a:	0949      	lsrs	r1, r1, #5
 800224c:	202a      	movs	r0, #42	; 0x2a
 800224e:	f7fe fb07 	bl	8000860 <_test_assert>
 8002252:	2800      	cmp	r0, #0
 8002254:	f040 80b7 	bne.w	80023c6 <mbox1_execute+0x406>
 8002258:	f384 8811 	msr	BASEPRI, r4
 800225c:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002260:	eba1 0c03 	sub.w	ip, r1, r3
 8002264:	f1dc 0100 	rsbs	r1, ip, #0
 8002268:	eb41 010c 	adc.w	r1, r1, ip
 800226c:	202b      	movs	r0, #43	; 0x2b
 800226e:	f7fe faf7 	bl	8000860 <_test_assert>
 8002272:	2800      	cmp	r0, #0
 8002274:	f47f aed6 	bne.w	8002024 <mbox1_execute+0x64>
 8002278:	f387 8811 	msr	BASEPRI, r7
 800227c:	e9d5 3200 	ldrd	r3, r2, [r5]
 8002280:	1ad2      	subs	r2, r2, r3
 8002282:	1091      	asrs	r1, r2, #2
 8002284:	4824      	ldr	r0, [pc, #144]	; (8002318 <mbox1_execute+0x358>)
 8002286:	60ab      	str	r3, [r5, #8]
 8002288:	60eb      	str	r3, [r5, #12]
 800228a:	f7fe ff79 	bl	8001180 <chSemResetI>
 800228e:	4621      	mov	r1, r4
 8002290:	4822      	ldr	r0, [pc, #136]	; (800231c <mbox1_execute+0x35c>)
 8002292:	f7fe ff75 	bl	8001180 <chSemResetI>
 8002296:	f7ff f9cb 	bl	8001630 <chSchRescheduleS>
 800229a:	f384 8811 	msr	BASEPRI, r4
 800229e:	f387 8811 	msr	BASEPRI, r7
 80022a2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80022a4:	1f4e      	subs	r6, r1, #5
 80022a6:	4271      	negs	r1, r6
 80022a8:	4171      	adcs	r1, r6
 80022aa:	202c      	movs	r0, #44	; 0x2c
 80022ac:	f7fe fad8 	bl	8000860 <_test_assert>
 80022b0:	2800      	cmp	r0, #0
 80022b2:	f040 8088 	bne.w	80023c6 <mbox1_execute+0x406>
 80022b6:	f384 8811 	msr	BASEPRI, r4
 80022ba:	f387 8811 	msr	BASEPRI, r7
 80022be:	69a9      	ldr	r1, [r5, #24]
 80022c0:	fab1 f181 	clz	r1, r1
 80022c4:	0949      	lsrs	r1, r1, #5
 80022c6:	202d      	movs	r0, #45	; 0x2d
 80022c8:	f7fe faca 	bl	8000860 <_test_assert>
 80022cc:	2800      	cmp	r0, #0
 80022ce:	d17a      	bne.n	80023c6 <mbox1_execute+0x406>
 80022d0:	f384 8811 	msr	BASEPRI, r4
 80022d4:	f387 8811 	msr	BASEPRI, r7
 80022d8:	6829      	ldr	r1, [r5, #0]
 80022da:	68ab      	ldr	r3, [r5, #8]
 80022dc:	1aca      	subs	r2, r1, r3
 80022de:	4251      	negs	r1, r2
 80022e0:	4151      	adcs	r1, r2
 80022e2:	202e      	movs	r0, #46	; 0x2e
 80022e4:	f7fe fabc 	bl	8000860 <_test_assert>
 80022e8:	2800      	cmp	r0, #0
 80022ea:	d16c      	bne.n	80023c6 <mbox1_execute+0x406>
 80022ec:	f384 8811 	msr	BASEPRI, r4
 80022f0:	f387 8811 	msr	BASEPRI, r7
 80022f4:	6829      	ldr	r1, [r5, #0]
 80022f6:	68eb      	ldr	r3, [r5, #12]
 80022f8:	1acb      	subs	r3, r1, r3
 80022fa:	4259      	negs	r1, r3
 80022fc:	f04f 002f 	mov.w	r0, #47	; 0x2f
 8002300:	4159      	adcs	r1, r3
 8002302:	f7fe faad 	bl	8000860 <_test_assert>
 8002306:	2300      	movs	r3, #0
 8002308:	f383 8811 	msr	BASEPRI, r3
 800230c:	b003      	add	sp, #12
 800230e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002310:	20000854 	.word	0x20000854
 8002314:	08006140 	.word	0x08006140
 8002318:	20000870 	.word	0x20000870
 800231c:	20000864 	.word	0x20000864
 8002320:	2101      	movs	r1, #1
 8002322:	2058      	movs	r0, #88	; 0x58
 8002324:	f7ff fdcc 	bl	8001ec0 <chMBPost.constprop.20>
 8002328:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 800232c:	fab1 f181 	clz	r1, r1
 8002330:	0949      	lsrs	r1, r1, #5
 8002332:	2004      	movs	r0, #4
 8002334:	f7fe fa94 	bl	8000860 <_test_assert>
 8002338:	4604      	mov	r4, r0
 800233a:	2800      	cmp	r0, #0
 800233c:	f47f ae72 	bne.w	8002024 <mbox1_execute+0x64>
 8002340:	2620      	movs	r6, #32
 8002342:	f386 8811 	msr	BASEPRI, r6
 8002346:	2058      	movs	r0, #88	; 0x58
 8002348:	f7fe feba 	bl	80010c0 <chMBPostI.constprop.19>
 800234c:	4601      	mov	r1, r0
 800234e:	f384 8811 	msr	BASEPRI, r4
 8002352:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 8002356:	fab1 f181 	clz	r1, r1
 800235a:	2005      	movs	r0, #5
 800235c:	0949      	lsrs	r1, r1, #5
 800235e:	f7fe fa7f 	bl	8000860 <_test_assert>
 8002362:	2800      	cmp	r0, #0
 8002364:	f47f ae5e 	bne.w	8002024 <mbox1_execute+0x64>
 8002368:	2101      	movs	r1, #1
 800236a:	2058      	movs	r0, #88	; 0x58
 800236c:	f7ff fdd0 	bl	8001f10 <chMBPostAhead.constprop.18>
 8002370:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8002374:	fab1 f181 	clz	r1, r1
 8002378:	0949      	lsrs	r1, r1, #5
 800237a:	2006      	movs	r0, #6
 800237c:	f7fe fa70 	bl	8000860 <_test_assert>
 8002380:	4604      	mov	r4, r0
 8002382:	2800      	cmp	r0, #0
 8002384:	f47f ae4e 	bne.w	8002024 <mbox1_execute+0x64>
 8002388:	f386 8811 	msr	BASEPRI, r6
 800238c:	2058      	movs	r0, #88	; 0x58
 800238e:	f7fe feb7 	bl	8001100 <chMBPostAheadI.constprop.17>
 8002392:	4601      	mov	r1, r0
 8002394:	f384 8811 	msr	BASEPRI, r4
 8002398:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 800239c:	fab1 f181 	clz	r1, r1
 80023a0:	2007      	movs	r0, #7
 80023a2:	0949      	lsrs	r1, r1, #5
 80023a4:	f7fe fa5c 	bl	8000860 <_test_assert>
 80023a8:	4604      	mov	r4, r0
 80023aa:	2800      	cmp	r0, #0
 80023ac:	f47f ae3a 	bne.w	8002024 <mbox1_execute+0x64>
 80023b0:	f386 8811 	msr	BASEPRI, r6
 80023b4:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80023b6:	fab1 f181 	clz	r1, r1
 80023ba:	0949      	lsrs	r1, r1, #5
 80023bc:	2008      	movs	r0, #8
 80023be:	f7fe fa4f 	bl	8000860 <_test_assert>
 80023c2:	4607      	mov	r7, r0
 80023c4:	b110      	cbz	r0, 80023cc <mbox1_execute+0x40c>
 80023c6:	f384 8811 	msr	BASEPRI, r4
 80023ca:	e62b      	b.n	8002024 <mbox1_execute+0x64>
 80023cc:	f380 8811 	msr	BASEPRI, r0
 80023d0:	f386 8811 	msr	BASEPRI, r6
 80023d4:	69a9      	ldr	r1, [r5, #24]
 80023d6:	f1a1 0e05 	sub.w	lr, r1, #5
 80023da:	f1de 0100 	rsbs	r1, lr, #0
 80023de:	eb41 010e 	adc.w	r1, r1, lr
 80023e2:	2009      	movs	r0, #9
 80023e4:	f7fe fa3c 	bl	8000860 <_test_assert>
 80023e8:	b110      	cbz	r0, 80023f0 <mbox1_execute+0x430>
 80023ea:	f387 8811 	msr	BASEPRI, r7
 80023ee:	e619      	b.n	8002024 <mbox1_execute+0x64>
 80023f0:	f380 8811 	msr	BASEPRI, r0
 80023f4:	f386 8811 	msr	BASEPRI, r6
 80023f8:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80023fc:	eba1 0c03 	sub.w	ip, r1, r3
 8002400:	f1dc 0100 	rsbs	r1, ip, #0
 8002404:	f04f 000a 	mov.w	r0, #10
 8002408:	eb41 010c 	adc.w	r1, r1, ip
 800240c:	f7fe fa28 	bl	8000860 <_test_assert>
 8002410:	2300      	movs	r3, #0
 8002412:	2800      	cmp	r0, #0
 8002414:	f47f af78 	bne.w	8002308 <mbox1_execute+0x348>
 8002418:	f383 8811 	msr	BASEPRI, r3
 800241c:	2405      	movs	r4, #5
 800241e:	e005      	b.n	800242c <mbox1_execute+0x46c>
 8002420:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8002424:	f7fe fa34 	bl	8000890 <test_emit_token>
 8002428:	3c01      	subs	r4, #1
 800242a:	d00d      	beq.n	8002448 <mbox1_execute+0x488>
 800242c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002430:	a801      	add	r0, sp, #4
 8002432:	f7ff fd9d 	bl	8001f70 <chMBFetch.constprop.16>
 8002436:	fab0 f180 	clz	r1, r0
 800243a:	0949      	lsrs	r1, r1, #5
 800243c:	200b      	movs	r0, #11
 800243e:	f7fe fa0f 	bl	8000860 <_test_assert>
 8002442:	2800      	cmp	r0, #0
 8002444:	d0ec      	beq.n	8002420 <mbox1_execute+0x460>
 8002446:	e5ed      	b.n	8002024 <mbox1_execute+0x64>
 8002448:	4944      	ldr	r1, [pc, #272]	; (800255c <mbox1_execute+0x59c>)
 800244a:	200c      	movs	r0, #12
 800244c:	f7fe f9e0 	bl	8000810 <_test_assert_sequence>
 8002450:	2800      	cmp	r0, #0
 8002452:	f47f ade7 	bne.w	8002024 <mbox1_execute+0x64>
 8002456:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800245a:	2047      	movs	r0, #71	; 0x47
 800245c:	f7ff fd30 	bl	8001ec0 <chMBPost.constprop.20>
 8002460:	fab0 f180 	clz	r1, r0
 8002464:	0949      	lsrs	r1, r1, #5
 8002466:	200d      	movs	r0, #13
 8002468:	f7fe f9fa 	bl	8000860 <_test_assert>
 800246c:	2800      	cmp	r0, #0
 800246e:	f47f add9 	bne.w	8002024 <mbox1_execute+0x64>
 8002472:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002476:	a801      	add	r0, sp, #4
 8002478:	f7ff fd7a 	bl	8001f70 <chMBFetch.constprop.16>
 800247c:	fab0 f180 	clz	r1, r0
 8002480:	0949      	lsrs	r1, r1, #5
 8002482:	200e      	movs	r0, #14
 8002484:	f7fe f9ec 	bl	8000860 <_test_assert>
 8002488:	2800      	cmp	r0, #0
 800248a:	f47f adcb 	bne.w	8002024 <mbox1_execute+0x64>
 800248e:	6829      	ldr	r1, [r5, #0]
 8002490:	68ab      	ldr	r3, [r5, #8]
 8002492:	1acf      	subs	r7, r1, r3
 8002494:	4279      	negs	r1, r7
 8002496:	4179      	adcs	r1, r7
 8002498:	200f      	movs	r0, #15
 800249a:	f7fe f9e1 	bl	8000860 <_test_assert>
 800249e:	2800      	cmp	r0, #0
 80024a0:	f47f adc0 	bne.w	8002024 <mbox1_execute+0x64>
 80024a4:	6829      	ldr	r1, [r5, #0]
 80024a6:	68eb      	ldr	r3, [r5, #12]
 80024a8:	1ace      	subs	r6, r1, r3
 80024aa:	4271      	negs	r1, r6
 80024ac:	4171      	adcs	r1, r6
 80024ae:	2010      	movs	r0, #16
 80024b0:	f7fe f9d6 	bl	8000860 <_test_assert>
 80024b4:	2800      	cmp	r0, #0
 80024b6:	f47f adb5 	bne.w	8002024 <mbox1_execute+0x64>
 80024ba:	2101      	movs	r1, #1
 80024bc:	a801      	add	r0, sp, #4
 80024be:	f7ff fd57 	bl	8001f70 <chMBFetch.constprop.16>
 80024c2:	3001      	adds	r0, #1
 80024c4:	4241      	negs	r1, r0
 80024c6:	4141      	adcs	r1, r0
 80024c8:	2011      	movs	r0, #17
 80024ca:	f7fe f9c9 	bl	8000860 <_test_assert>
 80024ce:	2800      	cmp	r0, #0
 80024d0:	f47f ada8 	bne.w	8002024 <mbox1_execute+0x64>
 80024d4:	2620      	movs	r6, #32
 80024d6:	f386 8811 	msr	BASEPRI, r6
 80024da:	a801      	add	r0, sp, #4
 80024dc:	f7fe fe30 	bl	8001140 <chMBFetchI.constprop.15>
 80024e0:	4601      	mov	r1, r0
 80024e2:	f384 8811 	msr	BASEPRI, r4
 80024e6:	1c4a      	adds	r2, r1, #1
 80024e8:	4251      	negs	r1, r2
 80024ea:	4151      	adcs	r1, r2
 80024ec:	2012      	movs	r0, #18
 80024ee:	f7fe f9b7 	bl	8000860 <_test_assert>
 80024f2:	2800      	cmp	r0, #0
 80024f4:	f47f ad96 	bne.w	8002024 <mbox1_execute+0x64>
 80024f8:	f386 8811 	msr	BASEPRI, r6
 80024fc:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80024fe:	1f4b      	subs	r3, r1, #5
 8002500:	4259      	negs	r1, r3
 8002502:	4159      	adcs	r1, r3
 8002504:	2013      	movs	r0, #19
 8002506:	f7fe f9ab 	bl	8000860 <_test_assert>
 800250a:	2800      	cmp	r0, #0
 800250c:	f47f aefb 	bne.w	8002306 <mbox1_execute+0x346>
 8002510:	2700      	movs	r7, #0
 8002512:	f387 8811 	msr	BASEPRI, r7
 8002516:	2420      	movs	r4, #32
 8002518:	f384 8811 	msr	BASEPRI, r4
 800251c:	69a9      	ldr	r1, [r5, #24]
 800251e:	fab1 f181 	clz	r1, r1
 8002522:	0949      	lsrs	r1, r1, #5
 8002524:	2014      	movs	r0, #20
 8002526:	f7fe f99b 	bl	8000860 <_test_assert>
 800252a:	4606      	mov	r6, r0
 800252c:	2800      	cmp	r0, #0
 800252e:	f47f af5c 	bne.w	80023ea <mbox1_execute+0x42a>
 8002532:	f380 8811 	msr	BASEPRI, r0
 8002536:	f384 8811 	msr	BASEPRI, r4
 800253a:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800253e:	eba1 0e03 	sub.w	lr, r1, r3
 8002542:	f1de 0100 	rsbs	r1, lr, #0
 8002546:	eb41 010e 	adc.w	r1, r1, lr
 800254a:	2015      	movs	r0, #21
 800254c:	f7fe f988 	bl	8000860 <_test_assert>
 8002550:	2800      	cmp	r0, #0
 8002552:	f43f ad69 	beq.w	8002028 <mbox1_execute+0x68>
 8002556:	f386 8811 	msr	BASEPRI, r6
 800255a:	e563      	b.n	8002024 <mbox1_execute+0x64>
 800255c:	08006140 	.word	0x08006140

08002560 <chThdEnqueueTimeoutS>:
 8002560:	b169      	cbz	r1, 800257e <chThdEnqueueTimeoutS+0x1e>
 8002562:	4b08      	ldr	r3, [pc, #32]	; (8002584 <chThdEnqueueTimeoutS+0x24>)
 8002564:	699b      	ldr	r3, [r3, #24]
 8002566:	b410      	push	{r4}
 8002568:	6018      	str	r0, [r3, #0]
 800256a:	6844      	ldr	r4, [r0, #4]
 800256c:	605c      	str	r4, [r3, #4]
 800256e:	4602      	mov	r2, r0
 8002570:	6023      	str	r3, [r4, #0]
 8002572:	2004      	movs	r0, #4
 8002574:	6053      	str	r3, [r2, #4]
 8002576:	f85d 4b04 	ldr.w	r4, [sp], #4
 800257a:	f7ff bb89 	b.w	8001c90 <chSchGoSleepTimeoutS>
 800257e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002582:	4770      	bx	lr
 8002584:	20000930 	.word	0x20000930
	...

08002590 <chOQWriteTimeout>:
 8002590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002594:	b083      	sub	sp, #12
 8002596:	4604      	mov	r4, r0
 8002598:	460d      	mov	r5, r1
 800259a:	4616      	mov	r6, r2
 800259c:	9301      	str	r3, [sp, #4]
 800259e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 80025a2:	f04f 0920 	mov.w	r9, #32
 80025a6:	f389 8811 	msr	BASEPRI, r9
 80025aa:	2700      	movs	r7, #0
 80025ac:	46ba      	mov	sl, r7
 80025ae:	68a3      	ldr	r3, [r4, #8]
 80025b0:	f105 0b01 	add.w	fp, r5, #1
 80025b4:	1e59      	subs	r1, r3, #1
 80025b6:	4620      	mov	r0, r4
 80025b8:	b1fb      	cbz	r3, 80025fa <chOQWriteTimeout+0x6a>
 80025ba:	6963      	ldr	r3, [r4, #20]
 80025bc:	60a1      	str	r1, [r4, #8]
 80025be:	1c59      	adds	r1, r3, #1
 80025c0:	6161      	str	r1, [r4, #20]
 80025c2:	7829      	ldrb	r1, [r5, #0]
 80025c4:	7019      	strb	r1, [r3, #0]
 80025c6:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 80025ca:	4299      	cmp	r1, r3
 80025cc:	bf24      	itt	cs
 80025ce:	68e3      	ldrcs	r3, [r4, #12]
 80025d0:	6163      	strcs	r3, [r4, #20]
 80025d2:	f1b8 0f00 	cmp.w	r8, #0
 80025d6:	d000      	beq.n	80025da <chOQWriteTimeout+0x4a>
 80025d8:	47c0      	blx	r8
 80025da:	f38a 8811 	msr	BASEPRI, sl
 80025de:	3e01      	subs	r6, #1
 80025e0:	f107 0701 	add.w	r7, r7, #1
 80025e4:	d013      	beq.n	800260e <chOQWriteTimeout+0x7e>
 80025e6:	f389 8811 	msr	BASEPRI, r9
 80025ea:	68a3      	ldr	r3, [r4, #8]
 80025ec:	465d      	mov	r5, fp
 80025ee:	1e59      	subs	r1, r3, #1
 80025f0:	f105 0b01 	add.w	fp, r5, #1
 80025f4:	4620      	mov	r0, r4
 80025f6:	2b00      	cmp	r3, #0
 80025f8:	d1df      	bne.n	80025ba <chOQWriteTimeout+0x2a>
 80025fa:	9901      	ldr	r1, [sp, #4]
 80025fc:	9300      	str	r3, [sp, #0]
 80025fe:	4620      	mov	r0, r4
 8002600:	f7ff ffae 	bl	8002560 <chThdEnqueueTimeoutS>
 8002604:	9b00      	ldr	r3, [sp, #0]
 8002606:	2800      	cmp	r0, #0
 8002608:	d0d1      	beq.n	80025ae <chOQWriteTimeout+0x1e>
 800260a:	f383 8811 	msr	BASEPRI, r3
 800260e:	4638      	mov	r0, r7
 8002610:	b003      	add	sp, #12
 8002612:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002616:	bf00      	nop
	...

08002620 <writet>:
 8002620:	3030      	adds	r0, #48	; 0x30
 8002622:	f7ff bfb5 	b.w	8002590 <chOQWriteTimeout>
 8002626:	bf00      	nop
	...

08002630 <write>:
 8002630:	3030      	adds	r0, #48	; 0x30
 8002632:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002636:	f7ff bfab 	b.w	8002590 <chOQWriteTimeout>
 800263a:	bf00      	nop
 800263c:	0000      	movs	r0, r0
	...

08002640 <chOQPutTimeout>:
 8002640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002642:	4604      	mov	r4, r0
 8002644:	460f      	mov	r7, r1
 8002646:	4616      	mov	r6, r2
 8002648:	2320      	movs	r3, #32
 800264a:	f383 8811 	msr	BASEPRI, r3
 800264e:	e003      	b.n	8002658 <chOQPutTimeout+0x18>
 8002650:	f7ff ff86 	bl	8002560 <chThdEnqueueTimeoutS>
 8002654:	2800      	cmp	r0, #0
 8002656:	db17      	blt.n	8002688 <chOQPutTimeout+0x48>
 8002658:	68a5      	ldr	r5, [r4, #8]
 800265a:	4631      	mov	r1, r6
 800265c:	4620      	mov	r0, r4
 800265e:	2d00      	cmp	r5, #0
 8002660:	d0f6      	beq.n	8002650 <chOQPutTimeout+0x10>
 8002662:	6963      	ldr	r3, [r4, #20]
 8002664:	3d01      	subs	r5, #1
 8002666:	1c5a      	adds	r2, r3, #1
 8002668:	6162      	str	r2, [r4, #20]
 800266a:	60a5      	str	r5, [r4, #8]
 800266c:	701f      	strb	r7, [r3, #0]
 800266e:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8002672:	429a      	cmp	r2, r3
 8002674:	bf24      	itt	cs
 8002676:	68e3      	ldrcs	r3, [r4, #12]
 8002678:	6163      	strcs	r3, [r4, #20]
 800267a:	69e3      	ldr	r3, [r4, #28]
 800267c:	b103      	cbz	r3, 8002680 <chOQPutTimeout+0x40>
 800267e:	4798      	blx	r3
 8002680:	2000      	movs	r0, #0
 8002682:	f380 8811 	msr	BASEPRI, r0
 8002686:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002688:	f385 8811 	msr	BASEPRI, r5
 800268c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800268e:	bf00      	nop

08002690 <thread2.lto_priv.77>:
 8002690:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 8002694:	2100      	movs	r1, #0
 8002696:	4801      	ldr	r0, [pc, #4]	; (800269c <thread2.lto_priv.77+0xc>)
 8002698:	f7ff bfd2 	b.w	8002640 <chOQPutTimeout>
 800269c:	20000888 	.word	0x20000888

080026a0 <putt>:
 80026a0:	3030      	adds	r0, #48	; 0x30
 80026a2:	f7ff bfcd 	b.w	8002640 <chOQPutTimeout>
 80026a6:	bf00      	nop
	...

080026b0 <put>:
 80026b0:	3030      	adds	r0, #48	; 0x30
 80026b2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80026b6:	f7ff bfc3 	b.w	8002640 <chOQPutTimeout>
 80026ba:	bf00      	nop
 80026bc:	0000      	movs	r0, r0
	...

080026c0 <chIQReadTimeout>:
 80026c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80026c4:	4604      	mov	r4, r0
 80026c6:	b083      	sub	sp, #12
 80026c8:	4689      	mov	r9, r1
 80026ca:	4693      	mov	fp, r2
 80026cc:	461d      	mov	r5, r3
 80026ce:	f8d0 801c 	ldr.w	r8, [r0, #28]
 80026d2:	2720      	movs	r7, #32
 80026d4:	f387 8811 	msr	BASEPRI, r7
 80026d8:	2600      	movs	r6, #0
 80026da:	9701      	str	r7, [sp, #4]
 80026dc:	46b2      	mov	sl, r6
 80026de:	f1b8 0f00 	cmp.w	r8, #0
 80026e2:	d005      	beq.n	80026f0 <chIQReadTimeout+0x30>
 80026e4:	4620      	mov	r0, r4
 80026e6:	47c0      	blx	r8
 80026e8:	e002      	b.n	80026f0 <chIQReadTimeout+0x30>
 80026ea:	f7ff ff39 	bl	8002560 <chThdEnqueueTimeoutS>
 80026ee:	b9d8      	cbnz	r0, 8002728 <chIQReadTimeout+0x68>
 80026f0:	68a7      	ldr	r7, [r4, #8]
 80026f2:	4629      	mov	r1, r5
 80026f4:	4620      	mov	r0, r4
 80026f6:	2f00      	cmp	r7, #0
 80026f8:	d0f7      	beq.n	80026ea <chIQReadTimeout+0x2a>
 80026fa:	69a2      	ldr	r2, [r4, #24]
 80026fc:	3f01      	subs	r7, #1
 80026fe:	1c51      	adds	r1, r2, #1
 8002700:	61a1      	str	r1, [r4, #24]
 8002702:	60a7      	str	r7, [r4, #8]
 8002704:	7813      	ldrb	r3, [r2, #0]
 8002706:	f809 3b01 	strb.w	r3, [r9], #1
 800270a:	6923      	ldr	r3, [r4, #16]
 800270c:	69a2      	ldr	r2, [r4, #24]
 800270e:	429a      	cmp	r2, r3
 8002710:	bf24      	itt	cs
 8002712:	68e3      	ldrcs	r3, [r4, #12]
 8002714:	61a3      	strcs	r3, [r4, #24]
 8002716:	f38a 8811 	msr	BASEPRI, sl
 800271a:	3601      	adds	r6, #1
 800271c:	45b3      	cmp	fp, r6
 800271e:	d005      	beq.n	800272c <chIQReadTimeout+0x6c>
 8002720:	9b01      	ldr	r3, [sp, #4]
 8002722:	f383 8811 	msr	BASEPRI, r3
 8002726:	e7da      	b.n	80026de <chIQReadTimeout+0x1e>
 8002728:	f387 8811 	msr	BASEPRI, r7
 800272c:	4630      	mov	r0, r6
 800272e:	b003      	add	sp, #12
 8002730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08002740 <readt>:
 8002740:	300c      	adds	r0, #12
 8002742:	f7ff bfbd 	b.w	80026c0 <chIQReadTimeout>
 8002746:	bf00      	nop
	...

08002750 <read>:
 8002750:	300c      	adds	r0, #12
 8002752:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002756:	f7ff bfb3 	b.w	80026c0 <chIQReadTimeout>
 800275a:	bf00      	nop
 800275c:	0000      	movs	r0, r0
	...

08002760 <chIQGetTimeout>:
 8002760:	b570      	push	{r4, r5, r6, lr}
 8002762:	2320      	movs	r3, #32
 8002764:	460e      	mov	r6, r1
 8002766:	4604      	mov	r4, r0
 8002768:	f383 8811 	msr	BASEPRI, r3
 800276c:	69c3      	ldr	r3, [r0, #28]
 800276e:	b12b      	cbz	r3, 800277c <chIQGetTimeout+0x1c>
 8002770:	4798      	blx	r3
 8002772:	e003      	b.n	800277c <chIQGetTimeout+0x1c>
 8002774:	f7ff fef4 	bl	8002560 <chThdEnqueueTimeoutS>
 8002778:	2800      	cmp	r0, #0
 800277a:	db15      	blt.n	80027a8 <chIQGetTimeout+0x48>
 800277c:	68a5      	ldr	r5, [r4, #8]
 800277e:	4631      	mov	r1, r6
 8002780:	4620      	mov	r0, r4
 8002782:	2d00      	cmp	r5, #0
 8002784:	d0f6      	beq.n	8002774 <chIQGetTimeout+0x14>
 8002786:	69a2      	ldr	r2, [r4, #24]
 8002788:	6921      	ldr	r1, [r4, #16]
 800278a:	1c53      	adds	r3, r2, #1
 800278c:	428b      	cmp	r3, r1
 800278e:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8002792:	61a3      	str	r3, [r4, #24]
 8002794:	60a5      	str	r5, [r4, #8]
 8002796:	bf28      	it	cs
 8002798:	68e3      	ldrcs	r3, [r4, #12]
 800279a:	7810      	ldrb	r0, [r2, #0]
 800279c:	bf28      	it	cs
 800279e:	61a3      	strcs	r3, [r4, #24]
 80027a0:	2300      	movs	r3, #0
 80027a2:	f383 8811 	msr	BASEPRI, r3
 80027a6:	bd70      	pop	{r4, r5, r6, pc}
 80027a8:	f385 8811 	msr	BASEPRI, r5
 80027ac:	bd70      	pop	{r4, r5, r6, pc}
 80027ae:	bf00      	nop

080027b0 <thread1.lto_priv.71>:
 80027b0:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80027b4:	4801      	ldr	r0, [pc, #4]	; (80027bc <thread1.lto_priv.71+0xc>)
 80027b6:	f7ff bfd3 	b.w	8002760 <chIQGetTimeout>
 80027ba:	bf00      	nop
 80027bc:	20000810 	.word	0x20000810

080027c0 <gett>:
 80027c0:	300c      	adds	r0, #12
 80027c2:	f7ff bfcd 	b.w	8002760 <chIQGetTimeout>
 80027c6:	bf00      	nop
	...

080027d0 <get>:
 80027d0:	300c      	adds	r0, #12
 80027d2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80027d6:	f7ff bfc3 	b.w	8002760 <chIQGetTimeout>
 80027da:	bf00      	nop
 80027dc:	0000      	movs	r0, r0
	...

080027e0 <chThdSleep>:
 80027e0:	b508      	push	{r3, lr}
 80027e2:	4601      	mov	r1, r0
 80027e4:	2320      	movs	r3, #32
 80027e6:	f383 8811 	msr	BASEPRI, r3
 80027ea:	2008      	movs	r0, #8
 80027ec:	f7ff fa50 	bl	8001c90 <chSchGoSleepTimeoutS>
 80027f0:	2300      	movs	r3, #0
 80027f2:	f383 8811 	msr	BASEPRI, r3
 80027f6:	bd08      	pop	{r3, pc}
	...

08002800 <Thread1>:
 8002800:	b508      	push	{r3, lr}
 8002802:	4b09      	ldr	r3, [pc, #36]	; (8002828 <Thread1+0x28>)
 8002804:	4a09      	ldr	r2, [pc, #36]	; (800282c <Thread1+0x2c>)
 8002806:	699b      	ldr	r3, [r3, #24]
 8002808:	4c09      	ldr	r4, [pc, #36]	; (8002830 <Thread1+0x30>)
 800280a:	619a      	str	r2, [r3, #24]
 800280c:	f44f 5500 	mov.w	r5, #8192	; 0x2000
 8002810:	462e      	mov	r6, r5
 8002812:	8326      	strh	r6, [r4, #24]
 8002814:	f241 3088 	movw	r0, #5000	; 0x1388
 8002818:	f7ff ffe2 	bl	80027e0 <chThdSleep>
 800281c:	8365      	strh	r5, [r4, #26]
 800281e:	f241 3088 	movw	r0, #5000	; 0x1388
 8002822:	f7ff ffdd 	bl	80027e0 <chThdSleep>
 8002826:	e7f4      	b.n	8002812 <Thread1+0x12>
 8002828:	20000930 	.word	0x20000930
 800282c:	08005d30 	.word	0x08005d30
 8002830:	40020c00 	.word	0x40020c00
	...

08002840 <sys1_execute>:
 8002840:	b510      	push	{r4, lr}
 8002842:	b086      	sub	sp, #24
 8002844:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8002848:	b91b      	cbnz	r3, 8002852 <sys1_execute+0x12>
 800284a:	f7fe fd51 	bl	80012f0 <chSysGetStatusAndLockX.part.2>
 800284e:	f7fe fff7 	bl	8001840 <chSysRestoreStatusX.part.3>
 8002852:	2320      	movs	r3, #32
 8002854:	f383 8811 	msr	BASEPRI, r3
 8002858:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800285c:	b91b      	cbnz	r3, 8002866 <sys1_execute+0x26>
 800285e:	f7fe fd47 	bl	80012f0 <chSysGetStatusAndLockX.part.2>
 8002862:	f7fe ffed 	bl	8001840 <chSysRestoreStatusX.part.3>
 8002866:	2300      	movs	r3, #0
 8002868:	f383 8811 	msr	BASEPRI, r3
 800286c:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8002870:	b913      	cbnz	r3, 8002878 <sys1_execute+0x38>
 8002872:	2320      	movs	r3, #32
 8002874:	f383 8811 	msr	BASEPRI, r3
 8002878:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800287c:	b913      	cbnz	r3, 8002884 <sys1_execute+0x44>
 800287e:	2320      	movs	r3, #32
 8002880:	f383 8811 	msr	BASEPRI, r3
 8002884:	2300      	movs	r3, #0
 8002886:	f383 8811 	msr	BASEPRI, r3
 800288a:	2220      	movs	r2, #32
 800288c:	f382 8811 	msr	BASEPRI, r2
 8002890:	f3ef 8212 	mrs	r2, BASEPRI_MAX
 8002894:	b10a      	cbz	r2, 800289a <sys1_execute+0x5a>
 8002896:	f383 8811 	msr	BASEPRI, r3
 800289a:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800289e:	b113      	cbz	r3, 80028a6 <sys1_execute+0x66>
 80028a0:	2300      	movs	r3, #0
 80028a2:	f383 8811 	msr	BASEPRI, r3
 80028a6:	2300      	movs	r3, #0
 80028a8:	9304      	str	r3, [sp, #16]
 80028aa:	2320      	movs	r3, #32
 80028ac:	f383 8811 	msr	BASEPRI, r3
 80028b0:	9b04      	ldr	r3, [sp, #16]
 80028b2:	ac01      	add	r4, sp, #4
 80028b4:	b113      	cbz	r3, 80028bc <sys1_execute+0x7c>
 80028b6:	4620      	mov	r0, r4
 80028b8:	f7fe fc7a 	bl	80011b0 <chVTDoResetI>
 80028bc:	4620      	mov	r0, r4
 80028be:	2300      	movs	r3, #0
 80028c0:	4a0b      	ldr	r2, [pc, #44]	; (80028f0 <sys1_execute+0xb0>)
 80028c2:	2101      	movs	r1, #1
 80028c4:	f7fe fcb4 	bl	8001230 <chVTDoSetI>
 80028c8:	2400      	movs	r4, #0
 80028ca:	f384 8811 	msr	BASEPRI, r4
 80028ce:	200a      	movs	r0, #10
 80028d0:	f7ff ff86 	bl	80027e0 <chThdSleep>
 80028d4:	2320      	movs	r3, #32
 80028d6:	f383 8811 	msr	BASEPRI, r3
 80028da:	9904      	ldr	r1, [sp, #16]
 80028dc:	f384 8811 	msr	BASEPRI, r4
 80028e0:	fab1 f181 	clz	r1, r1
 80028e4:	0949      	lsrs	r1, r1, #5
 80028e6:	2001      	movs	r0, #1
 80028e8:	f7fd ffba 	bl	8000860 <_test_assert>
 80028ec:	b006      	add	sp, #24
 80028ee:	bd10      	pop	{r4, pc}
 80028f0:	08001861 	.word	0x08001861
	...

08002900 <thread1.lto_priv.70>:
 8002900:	b510      	push	{r4, lr}
 8002902:	4604      	mov	r4, r0
 8002904:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002908:	f7ff ff6a 	bl	80027e0 <chThdSleep>
 800290c:	2320      	movs	r3, #32
 800290e:	f383 8811 	msr	BASEPRI, r3
 8002912:	2101      	movs	r1, #1
 8002914:	4620      	mov	r0, r4
 8002916:	f7fe fac3 	bl	8000ea0 <chEvtSignalI>
 800291a:	f7fe fe89 	bl	8001630 <chSchRescheduleS>
 800291e:	2300      	movs	r3, #0
 8002920:	f383 8811 	msr	BASEPRI, r3
 8002924:	bd10      	pop	{r4, pc}
 8002926:	bf00      	nop
	...

08002930 <thread2.lto_priv.76>:
 8002930:	b538      	push	{r3, r4, r5, lr}
 8002932:	2520      	movs	r5, #32
 8002934:	f385 8811 	msr	BASEPRI, r5
 8002938:	2100      	movs	r1, #0
 800293a:	480b      	ldr	r0, [pc, #44]	; (8002968 <thread2.lto_priv.76+0x38>)
 800293c:	f7fe fac8 	bl	8000ed0 <chEvtBroadcastFlagsI>
 8002940:	2400      	movs	r4, #0
 8002942:	f7fe fe75 	bl	8001630 <chSchRescheduleS>
 8002946:	f384 8811 	msr	BASEPRI, r4
 800294a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800294e:	f7ff ff47 	bl	80027e0 <chThdSleep>
 8002952:	f385 8811 	msr	BASEPRI, r5
 8002956:	4805      	ldr	r0, [pc, #20]	; (800296c <thread2.lto_priv.76+0x3c>)
 8002958:	4621      	mov	r1, r4
 800295a:	f7fe fab9 	bl	8000ed0 <chEvtBroadcastFlagsI>
 800295e:	f7fe fe67 	bl	8001630 <chSchRescheduleS>
 8002962:	f384 8811 	msr	BASEPRI, r4
 8002966:	bd38      	pop	{r3, r4, r5, pc}
 8002968:	20000808 	.word	0x20000808
 800296c:	2000080c 	.word	0x2000080c

08002970 <thread2.lto_priv.75>:
 8002970:	b508      	push	{r3, lr}
 8002972:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002976:	f7ff ff33 	bl	80027e0 <chThdSleep>
 800297a:	2320      	movs	r3, #32
 800297c:	f383 8811 	msr	BASEPRI, r3
 8002980:	4804      	ldr	r0, [pc, #16]	; (8002994 <thread2.lto_priv.75+0x24>)
 8002982:	f7fe fb8d 	bl	80010a0 <chSemSignalI>
 8002986:	f7fe fe53 	bl	8001630 <chSchRescheduleS>
 800298a:	2300      	movs	r3, #0
 800298c:	f383 8811 	msr	BASEPRI, r3
 8002990:	bd08      	pop	{r3, pc}
 8002992:	bf00      	nop
 8002994:	200008ac 	.word	0x200008ac
	...

080029a0 <test_wait_tick>:
 80029a0:	b508      	push	{r3, lr}
 80029a2:	2001      	movs	r0, #1
 80029a4:	f7ff ff1c 	bl	80027e0 <chThdSleep>
 80029a8:	2320      	movs	r3, #32
 80029aa:	f383 8811 	msr	BASEPRI, r3
 80029ae:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80029b2:	2300      	movs	r3, #0
 80029b4:	6a50      	ldr	r0, [r2, #36]	; 0x24
 80029b6:	f383 8811 	msr	BASEPRI, r3
 80029ba:	bd08      	pop	{r3, pc}
 80029bc:	0000      	movs	r0, r0
	...

080029c0 <bmk10_execute>:
 80029c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80029c4:	f7ff ffec 	bl	80029a0 <test_wait_tick>
 80029c8:	f7fe fc72 	bl	80012b0 <test_start_timer.constprop.1>
 80029cc:	2400      	movs	r4, #0
 80029ce:	f8df a070 	ldr.w	sl, [pc, #112]	; 8002a40 <bmk10_execute+0x80>
 80029d2:	4f16      	ldr	r7, [pc, #88]	; (8002a2c <bmk10_execute+0x6c>)
 80029d4:	4e16      	ldr	r6, [pc, #88]	; (8002a30 <bmk10_execute+0x70>)
 80029d6:	4d17      	ldr	r5, [pc, #92]	; (8002a34 <bmk10_execute+0x74>)
 80029d8:	46a1      	mov	r9, r4
 80029da:	f04f 0820 	mov.w	r8, #32
 80029de:	f388 8811 	msr	BASEPRI, r8
 80029e2:	2300      	movs	r3, #0
 80029e4:	463a      	mov	r2, r7
 80029e6:	4630      	mov	r0, r6
 80029e8:	2101      	movs	r1, #1
 80029ea:	f7fe fc21 	bl	8001230 <chVTDoSetI>
 80029ee:	463a      	mov	r2, r7
 80029f0:	2300      	movs	r3, #0
 80029f2:	f242 7110 	movw	r1, #10000	; 0x2710
 80029f6:	4628      	mov	r0, r5
 80029f8:	f7fe fc1a 	bl	8001230 <chVTDoSetI>
 80029fc:	4630      	mov	r0, r6
 80029fe:	f7fe fbd7 	bl	80011b0 <chVTDoResetI>
 8002a02:	4628      	mov	r0, r5
 8002a04:	f7fe fbd4 	bl	80011b0 <chVTDoResetI>
 8002a08:	f389 8811 	msr	BASEPRI, r9
 8002a0c:	f89a 3000 	ldrb.w	r3, [sl]
 8002a10:	3401      	adds	r4, #1
 8002a12:	2b00      	cmp	r3, #0
 8002a14:	d0e3      	beq.n	80029de <bmk10_execute+0x1e>
 8002a16:	4808      	ldr	r0, [pc, #32]	; (8002a38 <bmk10_execute+0x78>)
 8002a18:	f7fd ff92 	bl	8000940 <test_print>
 8002a1c:	0060      	lsls	r0, r4, #1
 8002a1e:	f7fd fe97 	bl	8000750 <test_printn>
 8002a22:	4806      	ldr	r0, [pc, #24]	; (8002a3c <bmk10_execute+0x7c>)
 8002a24:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002a28:	f7fd bf6a 	b.w	8000900 <test_println>
 8002a2c:	08000451 	.word	0x08000451
 8002a30:	20001538 	.word	0x20001538
 8002a34:	2000154c 	.word	0x2000154c
 8002a38:	08005d60 	.word	0x08005d60
 8002a3c:	08005d70 	.word	0x08005d70
 8002a40:	200014f8 	.word	0x200014f8
	...

08002a50 <bmk9_execute>:
 8002a50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a52:	4b26      	ldr	r3, [pc, #152]	; (8002aec <bmk9_execute+0x9c>)
 8002a54:	4c26      	ldr	r4, [pc, #152]	; (8002af0 <bmk9_execute+0xa0>)
 8002a56:	4f27      	ldr	r7, [pc, #156]	; (8002af4 <bmk9_execute+0xa4>)
 8002a58:	60e3      	str	r3, [r4, #12]
 8002a5a:	f103 0210 	add.w	r2, r3, #16
 8002a5e:	2500      	movs	r5, #0
 8002a60:	6122      	str	r2, [r4, #16]
 8002a62:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8002a66:	6024      	str	r4, [r4, #0]
 8002a68:	6064      	str	r4, [r4, #4]
 8002a6a:	60a5      	str	r5, [r4, #8]
 8002a6c:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8002a70:	f7ff ff96 	bl	80029a0 <test_wait_tick>
 8002a74:	f7fe fc1c 	bl	80012b0 <test_start_timer.constprop.1>
 8002a78:	462e      	mov	r6, r5
 8002a7a:	2320      	movs	r3, #32
 8002a7c:	f383 8811 	msr	BASEPRI, r3
 8002a80:	2100      	movs	r1, #0
 8002a82:	4620      	mov	r0, r4
 8002a84:	f7fe f9bc 	bl	8000e00 <chIQPutI>
 8002a88:	4620      	mov	r0, r4
 8002a8a:	2101      	movs	r1, #1
 8002a8c:	f7fe f9b8 	bl	8000e00 <chIQPutI>
 8002a90:	4620      	mov	r0, r4
 8002a92:	2102      	movs	r1, #2
 8002a94:	f7fe f9b4 	bl	8000e00 <chIQPutI>
 8002a98:	4620      	mov	r0, r4
 8002a9a:	2103      	movs	r1, #3
 8002a9c:	f7fe f9b0 	bl	8000e00 <chIQPutI>
 8002aa0:	f386 8811 	msr	BASEPRI, r6
 8002aa4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002aa8:	4620      	mov	r0, r4
 8002aaa:	f7ff fe59 	bl	8002760 <chIQGetTimeout>
 8002aae:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002ab2:	4620      	mov	r0, r4
 8002ab4:	f7ff fe54 	bl	8002760 <chIQGetTimeout>
 8002ab8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002abc:	4620      	mov	r0, r4
 8002abe:	f7ff fe4f 	bl	8002760 <chIQGetTimeout>
 8002ac2:	4620      	mov	r0, r4
 8002ac4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002ac8:	f7ff fe4a 	bl	8002760 <chIQGetTimeout>
 8002acc:	783b      	ldrb	r3, [r7, #0]
 8002ace:	3501      	adds	r5, #1
 8002ad0:	2b00      	cmp	r3, #0
 8002ad2:	d0d2      	beq.n	8002a7a <bmk9_execute+0x2a>
 8002ad4:	4808      	ldr	r0, [pc, #32]	; (8002af8 <bmk9_execute+0xa8>)
 8002ad6:	f7fd ff33 	bl	8000940 <test_print>
 8002ada:	00a8      	lsls	r0, r5, #2
 8002adc:	f7fd fe38 	bl	8000750 <test_printn>
 8002ae0:	4806      	ldr	r0, [pc, #24]	; (8002afc <bmk9_execute+0xac>)
 8002ae2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002ae6:	f7fd bf0b 	b.w	8000900 <test_println>
 8002aea:	bf00      	nop
 8002aec:	20000b58 	.word	0x20000b58
 8002af0:	20000b68 	.word	0x20000b68
 8002af4:	200014f8 	.word	0x200014f8
 8002af8:	08005d60 	.word	0x08005d60
 8002afc:	08005ea0 	.word	0x08005ea0

08002b00 <bmk6_execute>:
 8002b00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002b04:	4b14      	ldr	r3, [pc, #80]	; (8002b58 <bmk6_execute+0x58>)
 8002b06:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8002b68 <bmk6_execute+0x68>
 8002b0a:	699b      	ldr	r3, [r3, #24]
 8002b0c:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8002b6c <bmk6_execute+0x6c>
 8002b10:	689d      	ldr	r5, [r3, #8]
 8002b12:	4f12      	ldr	r7, [pc, #72]	; (8002b5c <bmk6_execute+0x5c>)
 8002b14:	b083      	sub	sp, #12
 8002b16:	f7ff ff43 	bl	80029a0 <test_wait_tick>
 8002b1a:	f7fe fbc9 	bl	80012b0 <test_start_timer.constprop.1>
 8002b1e:	2400      	movs	r4, #0
 8002b20:	3501      	adds	r5, #1
 8002b22:	4626      	mov	r6, r4
 8002b24:	4643      	mov	r3, r8
 8002b26:	9600      	str	r6, [sp, #0]
 8002b28:	462a      	mov	r2, r5
 8002b2a:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8002b2e:	4638      	mov	r0, r7
 8002b30:	f7fe ff8e 	bl	8001a50 <chThdCreateStatic>
 8002b34:	f899 3000 	ldrb.w	r3, [r9]
 8002b38:	3401      	adds	r4, #1
 8002b3a:	2b00      	cmp	r3, #0
 8002b3c:	d0f2      	beq.n	8002b24 <bmk6_execute+0x24>
 8002b3e:	4808      	ldr	r0, [pc, #32]	; (8002b60 <bmk6_execute+0x60>)
 8002b40:	f7fd fefe 	bl	8000940 <test_print>
 8002b44:	4620      	mov	r0, r4
 8002b46:	f7fd fe03 	bl	8000750 <test_printn>
 8002b4a:	4806      	ldr	r0, [pc, #24]	; (8002b64 <bmk6_execute+0x64>)
 8002b4c:	b003      	add	sp, #12
 8002b4e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002b52:	f7fd bed5 	b.w	8000900 <test_println>
 8002b56:	bf00      	nop
 8002b58:	20000930 	.word	0x20000930
 8002b5c:	20000bc0 	.word	0x20000bc0
 8002b60:	08005d60 	.word	0x08005d60
 8002b64:	08005e60 	.word	0x08005e60
 8002b68:	200014f8 	.word	0x200014f8
 8002b6c:	08005cf1 	.word	0x08005cf1

08002b70 <thd4_execute>:
 8002b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b72:	f7ff ff15 	bl	80029a0 <test_wait_tick>
 8002b76:	2620      	movs	r6, #32
 8002b78:	f386 8811 	msr	BASEPRI, r6
 8002b7c:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8002b80:	2300      	movs	r3, #0
 8002b82:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002b84:	f383 8811 	msr	BASEPRI, r3
 8002b88:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002b8c:	f7ff fe28 	bl	80027e0 <chThdSleep>
 8002b90:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8002b94:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8002b98:	2001      	movs	r0, #1
 8002b9a:	f7fd fe19 	bl	80007d0 <_test_assert_time_window>
 8002b9e:	b100      	cbz	r0, 8002ba2 <thd4_execute+0x32>
 8002ba0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002ba2:	f386 8811 	msr	BASEPRI, r6
 8002ba6:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002ba8:	f380 8811 	msr	BASEPRI, r0
 8002bac:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002bb0:	f7ff fe16 	bl	80027e0 <chThdSleep>
 8002bb4:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8002bb8:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8002bbc:	2002      	movs	r0, #2
 8002bbe:	f7fd fe07 	bl	80007d0 <_test_assert_time_window>
 8002bc2:	2800      	cmp	r0, #0
 8002bc4:	d1ec      	bne.n	8002ba0 <thd4_execute+0x30>
 8002bc6:	f386 8811 	msr	BASEPRI, r6
 8002bca:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002bcc:	f380 8811 	msr	BASEPRI, r0
 8002bd0:	f242 7010 	movw	r0, #10000	; 0x2710
 8002bd4:	f7ff fe04 	bl	80027e0 <chThdSleep>
 8002bd8:	f504 521c 	add.w	r2, r4, #9984	; 0x2700
 8002bdc:	4611      	mov	r1, r2
 8002bde:	3110      	adds	r1, #16
 8002be0:	3213      	adds	r2, #19
 8002be2:	2003      	movs	r0, #3
 8002be4:	f7fd fdf4 	bl	80007d0 <_test_assert_time_window>
 8002be8:	2800      	cmp	r0, #0
 8002bea:	d1d9      	bne.n	8002ba0 <thd4_execute+0x30>
 8002bec:	f386 8811 	msr	BASEPRI, r6
 8002bf0:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 8002bf2:	f380 8811 	msr	BASEPRI, r0
 8002bf6:	f507 747a 	add.w	r4, r7, #1000	; 0x3e8
 8002bfa:	f386 8811 	msr	BASEPRI, r6
 8002bfe:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002c00:	1a61      	subs	r1, r4, r1
 8002c02:	d002      	beq.n	8002c0a <thd4_execute+0x9a>
 8002c04:	2008      	movs	r0, #8
 8002c06:	f7ff f843 	bl	8001c90 <chSchGoSleepTimeoutS>
 8002c0a:	2300      	movs	r3, #0
 8002c0c:	f383 8811 	msr	BASEPRI, r3
 8002c10:	2004      	movs	r0, #4
 8002c12:	f207 32eb 	addw	r2, r7, #1003	; 0x3eb
 8002c16:	4621      	mov	r1, r4
 8002c18:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002c1c:	f7fd bdd8 	b.w	80007d0 <_test_assert_time_window>

08002c20 <chMsgWait>:
 8002c20:	b510      	push	{r4, lr}
 8002c22:	2320      	movs	r3, #32
 8002c24:	f383 8811 	msr	BASEPRI, r3
 8002c28:	4c0b      	ldr	r4, [pc, #44]	; (8002c58 <chMsgWait+0x38>)
 8002c2a:	69a2      	ldr	r2, [r4, #24]
 8002c2c:	4613      	mov	r3, r2
 8002c2e:	f853 0f28 	ldr.w	r0, [r3, #40]!
 8002c32:	4298      	cmp	r0, r3
 8002c34:	d008      	beq.n	8002c48 <chMsgWait+0x28>
 8002c36:	6801      	ldr	r1, [r0, #0]
 8002c38:	6291      	str	r1, [r2, #40]	; 0x28
 8002c3a:	220d      	movs	r2, #13
 8002c3c:	604b      	str	r3, [r1, #4]
 8002c3e:	2300      	movs	r3, #0
 8002c40:	7702      	strb	r2, [r0, #28]
 8002c42:	f383 8811 	msr	BASEPRI, r3
 8002c46:	bd10      	pop	{r4, pc}
 8002c48:	200e      	movs	r0, #14
 8002c4a:	f7fe ff39 	bl	8001ac0 <chSchGoSleepS>
 8002c4e:	69a2      	ldr	r2, [r4, #24]
 8002c50:	6a90      	ldr	r0, [r2, #40]	; 0x28
 8002c52:	f102 0328 	add.w	r3, r2, #40	; 0x28
 8002c56:	e7ee      	b.n	8002c36 <chMsgWait+0x16>
 8002c58:	20000930 	.word	0x20000930
 8002c5c:	00000000 	.word	0x00000000

08002c60 <thread2.lto_priv.78>:
 8002c60:	b570      	push	{r4, r5, r6, lr}
 8002c62:	2620      	movs	r6, #32
 8002c64:	2500      	movs	r5, #0
 8002c66:	f7ff ffdb 	bl	8002c20 <chMsgWait>
 8002c6a:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8002c6c:	f386 8811 	msr	BASEPRI, r6
 8002c70:	4621      	mov	r1, r4
 8002c72:	f7fe fe0d 	bl	8001890 <chSchWakeupS>
 8002c76:	f385 8811 	msr	BASEPRI, r5
 8002c7a:	2c00      	cmp	r4, #0
 8002c7c:	d1f3      	bne.n	8002c66 <thread2.lto_priv.78+0x6>
 8002c7e:	bd70      	pop	{r4, r5, r6, pc}

08002c80 <msg1_execute>:
 8002c80:	b570      	push	{r4, r5, r6, lr}
 8002c82:	4a1f      	ldr	r2, [pc, #124]	; (8002d00 <msg1_execute+0x80>)
 8002c84:	4b1f      	ldr	r3, [pc, #124]	; (8002d04 <msg1_execute+0x84>)
 8002c86:	6991      	ldr	r1, [r2, #24]
 8002c88:	481f      	ldr	r0, [pc, #124]	; (8002d08 <msg1_execute+0x88>)
 8002c8a:	688a      	ldr	r2, [r1, #8]
 8002c8c:	b082      	sub	sp, #8
 8002c8e:	3201      	adds	r2, #1
 8002c90:	9100      	str	r1, [sp, #0]
 8002c92:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8002c96:	f7fe fedb 	bl	8001a50 <chThdCreateStatic>
 8002c9a:	4b1c      	ldr	r3, [pc, #112]	; (8002d0c <msg1_execute+0x8c>)
 8002c9c:	6018      	str	r0, [r3, #0]
 8002c9e:	f7ff ffbf 	bl	8002c20 <chMsgWait>
 8002ca2:	2520      	movs	r5, #32
 8002ca4:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002ca6:	f385 8811 	msr	BASEPRI, r5
 8002caa:	4631      	mov	r1, r6
 8002cac:	f7fe fdf0 	bl	8001890 <chSchWakeupS>
 8002cb0:	2400      	movs	r4, #0
 8002cb2:	f384 8811 	msr	BASEPRI, r4
 8002cb6:	b2f0      	uxtb	r0, r6
 8002cb8:	f7fd fdea 	bl	8000890 <test_emit_token>
 8002cbc:	f7ff ffb0 	bl	8002c20 <chMsgWait>
 8002cc0:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002cc2:	f385 8811 	msr	BASEPRI, r5
 8002cc6:	4631      	mov	r1, r6
 8002cc8:	f7fe fde2 	bl	8001890 <chSchWakeupS>
 8002ccc:	f384 8811 	msr	BASEPRI, r4
 8002cd0:	b2f0      	uxtb	r0, r6
 8002cd2:	f7fd fddd 	bl	8000890 <test_emit_token>
 8002cd6:	f7ff ffa3 	bl	8002c20 <chMsgWait>
 8002cda:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002cdc:	f385 8811 	msr	BASEPRI, r5
 8002ce0:	4631      	mov	r1, r6
 8002ce2:	f7fe fdd5 	bl	8001890 <chSchWakeupS>
 8002ce6:	f384 8811 	msr	BASEPRI, r4
 8002cea:	b2f0      	uxtb	r0, r6
 8002cec:	f7fd fdd0 	bl	8000890 <test_emit_token>
 8002cf0:	4907      	ldr	r1, [pc, #28]	; (8002d10 <msg1_execute+0x90>)
 8002cf2:	2001      	movs	r0, #1
 8002cf4:	b002      	add	sp, #8
 8002cf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002cfa:	f7fd bd89 	b.w	8000810 <_test_assert_sequence>
 8002cfe:	bf00      	nop
 8002d00:	20000930 	.word	0x20000930
 8002d04:	08002d91 	.word	0x08002d91
 8002d08:	20000bc0 	.word	0x20000bc0
 8002d0c:	200014fc 	.word	0x200014fc
 8002d10:	08005f10 	.word	0x08005f10
	...

08002d20 <chMsgSend>:
 8002d20:	4b0e      	ldr	r3, [pc, #56]	; (8002d5c <chMsgSend+0x3c>)
 8002d22:	b510      	push	{r4, lr}
 8002d24:	2220      	movs	r2, #32
 8002d26:	699c      	ldr	r4, [r3, #24]
 8002d28:	f382 8811 	msr	BASEPRI, r2
 8002d2c:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8002d30:	6222      	str	r2, [r4, #32]
 8002d32:	6022      	str	r2, [r4, #0]
 8002d34:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8002d36:	6062      	str	r2, [r4, #4]
 8002d38:	6321      	str	r1, [r4, #48]	; 0x30
 8002d3a:	6014      	str	r4, [r2, #0]
 8002d3c:	7f02      	ldrb	r2, [r0, #28]
 8002d3e:	62c4      	str	r4, [r0, #44]	; 0x2c
 8002d40:	2a0e      	cmp	r2, #14
 8002d42:	d007      	beq.n	8002d54 <chMsgSend+0x34>
 8002d44:	200c      	movs	r0, #12
 8002d46:	f7fe febb 	bl	8001ac0 <chSchGoSleepS>
 8002d4a:	6a20      	ldr	r0, [r4, #32]
 8002d4c:	2300      	movs	r3, #0
 8002d4e:	f383 8811 	msr	BASEPRI, r3
 8002d52:	bd10      	pop	{r4, pc}
 8002d54:	f7fe f824 	bl	8000da0 <chSchReadyI>
 8002d58:	e7f4      	b.n	8002d44 <chMsgSend+0x24>
 8002d5a:	bf00      	nop
 8002d5c:	20000930 	.word	0x20000930

08002d60 <msg_loop_test>:
 8002d60:	b570      	push	{r4, r5, r6, lr}
 8002d62:	4605      	mov	r5, r0
 8002d64:	f7ff fe1c 	bl	80029a0 <test_wait_tick>
 8002d68:	f7fe faa2 	bl	80012b0 <test_start_timer.constprop.1>
 8002d6c:	4e07      	ldr	r6, [pc, #28]	; (8002d8c <msg_loop_test+0x2c>)
 8002d6e:	2400      	movs	r4, #0
 8002d70:	2101      	movs	r1, #1
 8002d72:	4628      	mov	r0, r5
 8002d74:	f7ff ffd4 	bl	8002d20 <chMsgSend>
 8002d78:	7833      	ldrb	r3, [r6, #0]
 8002d7a:	3401      	adds	r4, #1
 8002d7c:	2b00      	cmp	r3, #0
 8002d7e:	d0f7      	beq.n	8002d70 <msg_loop_test+0x10>
 8002d80:	4628      	mov	r0, r5
 8002d82:	2100      	movs	r1, #0
 8002d84:	f7ff ffcc 	bl	8002d20 <chMsgSend>
 8002d88:	4620      	mov	r0, r4
 8002d8a:	bd70      	pop	{r4, r5, r6, pc}
 8002d8c:	200014f8 	.word	0x200014f8

08002d90 <thread.lto_priv.60>:
 8002d90:	b510      	push	{r4, lr}
 8002d92:	2141      	movs	r1, #65	; 0x41
 8002d94:	4604      	mov	r4, r0
 8002d96:	f7ff ffc3 	bl	8002d20 <chMsgSend>
 8002d9a:	4620      	mov	r0, r4
 8002d9c:	2142      	movs	r1, #66	; 0x42
 8002d9e:	f7ff ffbf 	bl	8002d20 <chMsgSend>
 8002da2:	4620      	mov	r0, r4
 8002da4:	2143      	movs	r1, #67	; 0x43
 8002da6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002daa:	f7ff bfb9 	b.w	8002d20 <chMsgSend>
 8002dae:	bf00      	nop

08002db0 <chMtxLockS>:
 8002db0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002db2:	4a36      	ldr	r2, [pc, #216]	; (8002e8c <chMtxLockS+0xdc>)
 8002db4:	6883      	ldr	r3, [r0, #8]
 8002db6:	6995      	ldr	r5, [r2, #24]
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	d03f      	beq.n	8002e3c <chMtxLockS+0x8c>
 8002dbc:	68a9      	ldr	r1, [r5, #8]
 8002dbe:	689a      	ldr	r2, [r3, #8]
 8002dc0:	4291      	cmp	r1, r2
 8002dc2:	4604      	mov	r4, r0
 8002dc4:	d906      	bls.n	8002dd4 <chMtxLockS+0x24>
 8002dc6:	7f1a      	ldrb	r2, [r3, #28]
 8002dc8:	6099      	str	r1, [r3, #8]
 8002dca:	2a06      	cmp	r2, #6
 8002dcc:	d03b      	beq.n	8002e46 <chMtxLockS+0x96>
 8002dce:	2a07      	cmp	r2, #7
 8002dd0:	d015      	beq.n	8002dfe <chMtxLockS+0x4e>
 8002dd2:	b342      	cbz	r2, 8002e26 <chMtxLockS+0x76>
 8002dd4:	4626      	mov	r6, r4
 8002dd6:	4623      	mov	r3, r4
 8002dd8:	e003      	b.n	8002de2 <chMtxLockS+0x32>
 8002dda:	6899      	ldr	r1, [r3, #8]
 8002ddc:	68aa      	ldr	r2, [r5, #8]
 8002dde:	4291      	cmp	r1, r2
 8002de0:	d32a      	bcc.n	8002e38 <chMtxLockS+0x88>
 8002de2:	681b      	ldr	r3, [r3, #0]
 8002de4:	429c      	cmp	r4, r3
 8002de6:	d1f8      	bne.n	8002dda <chMtxLockS+0x2a>
 8002de8:	6873      	ldr	r3, [r6, #4]
 8002dea:	2006      	movs	r0, #6
 8002dec:	e9c5 6300 	strd	r6, r3, [r5]
 8002df0:	601d      	str	r5, [r3, #0]
 8002df2:	6075      	str	r5, [r6, #4]
 8002df4:	622c      	str	r4, [r5, #32]
 8002df6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002dfa:	f7fe be61 	b.w	8001ac0 <chSchGoSleepS>
 8002dfe:	e9d3 0200 	ldrd	r0, r2, [r3]
 8002e02:	6010      	str	r0, [r2, #0]
 8002e04:	6a1e      	ldr	r6, [r3, #32]
 8002e06:	6818      	ldr	r0, [r3, #0]
 8002e08:	6042      	str	r2, [r0, #4]
 8002e0a:	4632      	mov	r2, r6
 8002e0c:	e002      	b.n	8002e14 <chMtxLockS+0x64>
 8002e0e:	6890      	ldr	r0, [r2, #8]
 8002e10:	4288      	cmp	r0, r1
 8002e12:	d332      	bcc.n	8002e7a <chMtxLockS+0xca>
 8002e14:	6812      	ldr	r2, [r2, #0]
 8002e16:	4296      	cmp	r6, r2
 8002e18:	d1f9      	bne.n	8002e0e <chMtxLockS+0x5e>
 8002e1a:	6872      	ldr	r2, [r6, #4]
 8002e1c:	e9c3 6200 	strd	r6, r2, [r3]
 8002e20:	6013      	str	r3, [r2, #0]
 8002e22:	6073      	str	r3, [r6, #4]
 8002e24:	e7d6      	b.n	8002dd4 <chMtxLockS+0x24>
 8002e26:	e9d3 1200 	ldrd	r1, r2, [r3]
 8002e2a:	6011      	str	r1, [r2, #0]
 8002e2c:	6819      	ldr	r1, [r3, #0]
 8002e2e:	4618      	mov	r0, r3
 8002e30:	604a      	str	r2, [r1, #4]
 8002e32:	f7fd ffb5 	bl	8000da0 <chSchReadyI>
 8002e36:	e7cd      	b.n	8002dd4 <chMtxLockS+0x24>
 8002e38:	461e      	mov	r6, r3
 8002e3a:	e7d5      	b.n	8002de8 <chMtxLockS+0x38>
 8002e3c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8002e3e:	e9c0 5302 	strd	r5, r3, [r0, #8]
 8002e42:	63a8      	str	r0, [r5, #56]	; 0x38
 8002e44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e46:	e9d3 0200 	ldrd	r0, r2, [r3]
 8002e4a:	6010      	str	r0, [r2, #0]
 8002e4c:	6a1e      	ldr	r6, [r3, #32]
 8002e4e:	6818      	ldr	r0, [r3, #0]
 8002e50:	4637      	mov	r7, r6
 8002e52:	6042      	str	r2, [r0, #4]
 8002e54:	4632      	mov	r2, r6
 8002e56:	e002      	b.n	8002e5e <chMtxLockS+0xae>
 8002e58:	6890      	ldr	r0, [r2, #8]
 8002e5a:	4288      	cmp	r0, r1
 8002e5c:	d314      	bcc.n	8002e88 <chMtxLockS+0xd8>
 8002e5e:	6812      	ldr	r2, [r2, #0]
 8002e60:	4296      	cmp	r6, r2
 8002e62:	d1f9      	bne.n	8002e58 <chMtxLockS+0xa8>
 8002e64:	687a      	ldr	r2, [r7, #4]
 8002e66:	68a9      	ldr	r1, [r5, #8]
 8002e68:	e9c3 7200 	strd	r7, r2, [r3]
 8002e6c:	6013      	str	r3, [r2, #0]
 8002e6e:	607b      	str	r3, [r7, #4]
 8002e70:	68b3      	ldr	r3, [r6, #8]
 8002e72:	689a      	ldr	r2, [r3, #8]
 8002e74:	428a      	cmp	r2, r1
 8002e76:	d3a6      	bcc.n	8002dc6 <chMtxLockS+0x16>
 8002e78:	e7ac      	b.n	8002dd4 <chMtxLockS+0x24>
 8002e7a:	4616      	mov	r6, r2
 8002e7c:	6872      	ldr	r2, [r6, #4]
 8002e7e:	e9c3 6200 	strd	r6, r2, [r3]
 8002e82:	6013      	str	r3, [r2, #0]
 8002e84:	6073      	str	r3, [r6, #4]
 8002e86:	e7a5      	b.n	8002dd4 <chMtxLockS+0x24>
 8002e88:	4617      	mov	r7, r2
 8002e8a:	e7eb      	b.n	8002e64 <chMtxLockS+0xb4>
 8002e8c:	20000930 	.word	0x20000930

08002e90 <chMtxLock>:
 8002e90:	b508      	push	{r3, lr}
 8002e92:	2320      	movs	r3, #32
 8002e94:	f383 8811 	msr	BASEPRI, r3
 8002e98:	f7ff ff8a 	bl	8002db0 <chMtxLockS>
 8002e9c:	2300      	movs	r3, #0
 8002e9e:	f383 8811 	msr	BASEPRI, r3
 8002ea2:	bd08      	pop	{r3, pc}
	...

08002eb0 <bmk12_execute>:
 8002eb0:	b570      	push	{r4, r5, r6, lr}
 8002eb2:	f7ff fd75 	bl	80029a0 <test_wait_tick>
 8002eb6:	f7fe f9fb 	bl	80012b0 <test_start_timer.constprop.1>
 8002eba:	4e15      	ldr	r6, [pc, #84]	; (8002f10 <bmk12_execute+0x60>)
 8002ebc:	4c15      	ldr	r4, [pc, #84]	; (8002f14 <bmk12_execute+0x64>)
 8002ebe:	2500      	movs	r5, #0
 8002ec0:	4620      	mov	r0, r4
 8002ec2:	f7ff ffe5 	bl	8002e90 <chMtxLock>
 8002ec6:	4620      	mov	r0, r4
 8002ec8:	f7fe fd72 	bl	80019b0 <chMtxUnlock>
 8002ecc:	4620      	mov	r0, r4
 8002ece:	f7ff ffdf 	bl	8002e90 <chMtxLock>
 8002ed2:	4620      	mov	r0, r4
 8002ed4:	f7fe fd6c 	bl	80019b0 <chMtxUnlock>
 8002ed8:	4620      	mov	r0, r4
 8002eda:	f7ff ffd9 	bl	8002e90 <chMtxLock>
 8002ede:	4620      	mov	r0, r4
 8002ee0:	f7fe fd66 	bl	80019b0 <chMtxUnlock>
 8002ee4:	4620      	mov	r0, r4
 8002ee6:	f7ff ffd3 	bl	8002e90 <chMtxLock>
 8002eea:	4620      	mov	r0, r4
 8002eec:	f7fe fd60 	bl	80019b0 <chMtxUnlock>
 8002ef0:	7833      	ldrb	r3, [r6, #0]
 8002ef2:	3501      	adds	r5, #1
 8002ef4:	2b00      	cmp	r3, #0
 8002ef6:	d0e3      	beq.n	8002ec0 <bmk12_execute+0x10>
 8002ef8:	4807      	ldr	r0, [pc, #28]	; (8002f18 <bmk12_execute+0x68>)
 8002efa:	f7fd fd21 	bl	8000940 <test_print>
 8002efe:	00a8      	lsls	r0, r5, #2
 8002f00:	f7fd fc26 	bl	8000750 <test_printn>
 8002f04:	4805      	ldr	r0, [pc, #20]	; (8002f1c <bmk12_execute+0x6c>)
 8002f06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002f0a:	f7fd bcf9 	b.w	8000900 <test_println>
 8002f0e:	bf00      	nop
 8002f10:	200014f8 	.word	0x200014f8
 8002f14:	20000b9c 	.word	0x20000b9c
 8002f18:	08005d60 	.word	0x08005d60
 8002f1c:	08005d90 	.word	0x08005d90

08002f20 <thread11>:
 8002f20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f22:	4607      	mov	r7, r0
 8002f24:	481b      	ldr	r0, [pc, #108]	; (8002f94 <thread11+0x74>)
 8002f26:	f7ff ffb3 	bl	8002e90 <chMtxLock>
 8002f2a:	481b      	ldr	r0, [pc, #108]	; (8002f98 <thread11+0x78>)
 8002f2c:	f7ff ffb0 	bl	8002e90 <chMtxLock>
 8002f30:	2320      	movs	r3, #32
 8002f32:	f383 8811 	msr	BASEPRI, r3
 8002f36:	4d19      	ldr	r5, [pc, #100]	; (8002f9c <thread11+0x7c>)
 8002f38:	69ab      	ldr	r3, [r5, #24]
 8002f3a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 8002f3c:	4630      	mov	r0, r6
 8002f3e:	f7fe f887 	bl	8001050 <chMtxUnlockS>
 8002f42:	4b17      	ldr	r3, [pc, #92]	; (8002fa0 <thread11+0x80>)
 8002f44:	69ac      	ldr	r4, [r5, #24]
 8002f46:	4618      	mov	r0, r3
 8002f48:	6223      	str	r3, [r4, #32]
 8002f4a:	e003      	b.n	8002f54 <thread11+0x34>
 8002f4c:	6899      	ldr	r1, [r3, #8]
 8002f4e:	68a2      	ldr	r2, [r4, #8]
 8002f50:	4291      	cmp	r1, r2
 8002f52:	d302      	bcc.n	8002f5a <thread11+0x3a>
 8002f54:	681b      	ldr	r3, [r3, #0]
 8002f56:	4283      	cmp	r3, r0
 8002f58:	d1f8      	bne.n	8002f4c <thread11+0x2c>
 8002f5a:	685a      	ldr	r2, [r3, #4]
 8002f5c:	2007      	movs	r0, #7
 8002f5e:	e9c4 3200 	strd	r3, r2, [r4]
 8002f62:	6014      	str	r4, [r2, #0]
 8002f64:	605c      	str	r4, [r3, #4]
 8002f66:	f7fe fdab 	bl	8001ac0 <chSchGoSleepS>
 8002f6a:	69ab      	ldr	r3, [r5, #24]
 8002f6c:	6a1b      	ldr	r3, [r3, #32]
 8002f6e:	3301      	adds	r3, #1
 8002f70:	d002      	beq.n	8002f78 <thread11+0x58>
 8002f72:	4630      	mov	r0, r6
 8002f74:	f7ff ff1c 	bl	8002db0 <chMtxLockS>
 8002f78:	2300      	movs	r3, #0
 8002f7a:	f383 8811 	msr	BASEPRI, r3
 8002f7e:	7838      	ldrb	r0, [r7, #0]
 8002f80:	f7fd fc86 	bl	8000890 <test_emit_token>
 8002f84:	4804      	ldr	r0, [pc, #16]	; (8002f98 <thread11+0x78>)
 8002f86:	f7fe fd13 	bl	80019b0 <chMtxUnlock>
 8002f8a:	4802      	ldr	r0, [pc, #8]	; (8002f94 <thread11+0x74>)
 8002f8c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002f90:	f7fe bd0e 	b.w	80019b0 <chMtxUnlock>
 8002f94:	20000844 	.word	0x20000844
 8002f98:	20000834 	.word	0x20000834
 8002f9c:	20000930 	.word	0x20000930
 8002fa0:	20000800 	.word	0x20000800
	...

08002fb0 <thread10>:
 8002fb0:	b570      	push	{r4, r5, r6, lr}
 8002fb2:	4606      	mov	r6, r0
 8002fb4:	4816      	ldr	r0, [pc, #88]	; (8003010 <thread10+0x60>)
 8002fb6:	f7ff ff6b 	bl	8002e90 <chMtxLock>
 8002fba:	2320      	movs	r3, #32
 8002fbc:	f383 8811 	msr	BASEPRI, r3
 8002fc0:	4b14      	ldr	r3, [pc, #80]	; (8003014 <thread10+0x64>)
 8002fc2:	699c      	ldr	r4, [r3, #24]
 8002fc4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8002fc6:	4628      	mov	r0, r5
 8002fc8:	f7fe f842 	bl	8001050 <chMtxUnlockS>
 8002fcc:	4812      	ldr	r0, [pc, #72]	; (8003018 <thread10+0x68>)
 8002fce:	6220      	str	r0, [r4, #32]
 8002fd0:	4603      	mov	r3, r0
 8002fd2:	e003      	b.n	8002fdc <thread10+0x2c>
 8002fd4:	6899      	ldr	r1, [r3, #8]
 8002fd6:	68a2      	ldr	r2, [r4, #8]
 8002fd8:	4291      	cmp	r1, r2
 8002fda:	d302      	bcc.n	8002fe2 <thread10+0x32>
 8002fdc:	681b      	ldr	r3, [r3, #0]
 8002fde:	4283      	cmp	r3, r0
 8002fe0:	d1f8      	bne.n	8002fd4 <thread10+0x24>
 8002fe2:	685a      	ldr	r2, [r3, #4]
 8002fe4:	2007      	movs	r0, #7
 8002fe6:	e9c4 3200 	strd	r3, r2, [r4]
 8002fea:	6014      	str	r4, [r2, #0]
 8002fec:	605c      	str	r4, [r3, #4]
 8002fee:	f7fe fd67 	bl	8001ac0 <chSchGoSleepS>
 8002ff2:	4628      	mov	r0, r5
 8002ff4:	f7ff fedc 	bl	8002db0 <chMtxLockS>
 8002ff8:	2300      	movs	r3, #0
 8002ffa:	f383 8811 	msr	BASEPRI, r3
 8002ffe:	7830      	ldrb	r0, [r6, #0]
 8003000:	f7fd fc46 	bl	8000890 <test_emit_token>
 8003004:	4802      	ldr	r0, [pc, #8]	; (8003010 <thread10+0x60>)
 8003006:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800300a:	f7fe bcd1 	b.w	80019b0 <chMtxUnlock>
 800300e:	bf00      	nop
 8003010:	20000834 	.word	0x20000834
 8003014:	20000930 	.word	0x20000930
 8003018:	20000800 	.word	0x20000800
 800301c:	00000000 	.word	0x00000000

08003020 <thread12>:
 8003020:	b538      	push	{r3, r4, r5, lr}
 8003022:	4c06      	ldr	r4, [pc, #24]	; (800303c <thread12+0x1c>)
 8003024:	4605      	mov	r5, r0
 8003026:	4620      	mov	r0, r4
 8003028:	f7ff ff32 	bl	8002e90 <chMtxLock>
 800302c:	7828      	ldrb	r0, [r5, #0]
 800302e:	f7fd fc2f 	bl	8000890 <test_emit_token>
 8003032:	4620      	mov	r0, r4
 8003034:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003038:	f7fe bcba 	b.w	80019b0 <chMtxUnlock>
 800303c:	20000844 	.word	0x20000844

08003040 <mtx5_execute>:
 8003040:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003042:	4d37      	ldr	r5, [pc, #220]	; (8003120 <mtx5_execute+0xe0>)
 8003044:	69aa      	ldr	r2, [r5, #24]
 8003046:	2320      	movs	r3, #32
 8003048:	6896      	ldr	r6, [r2, #8]
 800304a:	f383 8811 	msr	BASEPRI, r3
 800304e:	4c35      	ldr	r4, [pc, #212]	; (8003124 <mtx5_execute+0xe4>)
 8003050:	68a3      	ldr	r3, [r4, #8]
 8003052:	2b00      	cmp	r3, #0
 8003054:	d057      	beq.n	8003106 <mtx5_execute+0xc6>
 8003056:	2100      	movs	r1, #0
 8003058:	2300      	movs	r3, #0
 800305a:	f383 8811 	msr	BASEPRI, r3
 800305e:	2001      	movs	r0, #1
 8003060:	f7fd fbfe 	bl	8000860 <_test_assert>
 8003064:	4601      	mov	r1, r0
 8003066:	b100      	cbz	r0, 800306a <mtx5_execute+0x2a>
 8003068:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800306a:	2320      	movs	r3, #32
 800306c:	f383 8811 	msr	BASEPRI, r3
 8003070:	68a3      	ldr	r3, [r4, #8]
 8003072:	2b00      	cmp	r3, #0
 8003074:	d04e      	beq.n	8003114 <mtx5_execute+0xd4>
 8003076:	2101      	movs	r1, #1
 8003078:	2300      	movs	r3, #0
 800307a:	f383 8811 	msr	BASEPRI, r3
 800307e:	2002      	movs	r0, #2
 8003080:	f7fd fbee 	bl	8000860 <_test_assert>
 8003084:	4607      	mov	r7, r0
 8003086:	2800      	cmp	r0, #0
 8003088:	d1ee      	bne.n	8003068 <mtx5_execute+0x28>
 800308a:	2320      	movs	r3, #32
 800308c:	f383 8811 	msr	BASEPRI, r3
 8003090:	4824      	ldr	r0, [pc, #144]	; (8003124 <mtx5_execute+0xe4>)
 8003092:	f7fd ffdd 	bl	8001050 <chMtxUnlockS>
 8003096:	f387 8811 	msr	BASEPRI, r7
 800309a:	6821      	ldr	r1, [r4, #0]
 800309c:	1b09      	subs	r1, r1, r4
 800309e:	fab1 f181 	clz	r1, r1
 80030a2:	2003      	movs	r0, #3
 80030a4:	0949      	lsrs	r1, r1, #5
 80030a6:	f7fd fbdb 	bl	8000860 <_test_assert>
 80030aa:	2800      	cmp	r0, #0
 80030ac:	d1dc      	bne.n	8003068 <mtx5_execute+0x28>
 80030ae:	68a1      	ldr	r1, [r4, #8]
 80030b0:	fab1 f181 	clz	r1, r1
 80030b4:	0949      	lsrs	r1, r1, #5
 80030b6:	2004      	movs	r0, #4
 80030b8:	f7fd fbd2 	bl	8000860 <_test_assert>
 80030bc:	2800      	cmp	r0, #0
 80030be:	d1d3      	bne.n	8003068 <mtx5_execute+0x28>
 80030c0:	69ab      	ldr	r3, [r5, #24]
 80030c2:	6899      	ldr	r1, [r3, #8]
 80030c4:	1b89      	subs	r1, r1, r6
 80030c6:	fab1 f181 	clz	r1, r1
 80030ca:	2005      	movs	r0, #5
 80030cc:	0949      	lsrs	r1, r1, #5
 80030ce:	f7fd fbc7 	bl	8000860 <_test_assert>
 80030d2:	2800      	cmp	r0, #0
 80030d4:	d1c8      	bne.n	8003068 <mtx5_execute+0x28>
 80030d6:	4813      	ldr	r0, [pc, #76]	; (8003124 <mtx5_execute+0xe4>)
 80030d8:	f7ff feda 	bl	8002e90 <chMtxLock>
 80030dc:	f7fe fad0 	bl	8001680 <chMtxUnlockAll>
 80030e0:	6821      	ldr	r1, [r4, #0]
 80030e2:	1b09      	subs	r1, r1, r4
 80030e4:	fab1 f181 	clz	r1, r1
 80030e8:	2006      	movs	r0, #6
 80030ea:	0949      	lsrs	r1, r1, #5
 80030ec:	f7fd fbb8 	bl	8000860 <_test_assert>
 80030f0:	2800      	cmp	r0, #0
 80030f2:	d1b9      	bne.n	8003068 <mtx5_execute+0x28>
 80030f4:	68a1      	ldr	r1, [r4, #8]
 80030f6:	fab1 f181 	clz	r1, r1
 80030fa:	0949      	lsrs	r1, r1, #5
 80030fc:	2007      	movs	r0, #7
 80030fe:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003102:	f7fd bbad 	b.w	8000860 <_test_assert>
 8003106:	69ab      	ldr	r3, [r5, #24]
 8003108:	60a3      	str	r3, [r4, #8]
 800310a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800310c:	60e2      	str	r2, [r4, #12]
 800310e:	639c      	str	r4, [r3, #56]	; 0x38
 8003110:	2101      	movs	r1, #1
 8003112:	e7a1      	b.n	8003058 <mtx5_execute+0x18>
 8003114:	69ab      	ldr	r3, [r5, #24]
 8003116:	60a3      	str	r3, [r4, #8]
 8003118:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800311a:	60e2      	str	r2, [r4, #12]
 800311c:	639c      	str	r4, [r3, #56]	; 0x38
 800311e:	e7ab      	b.n	8003078 <mtx5_execute+0x38>
 8003120:	20000930 	.word	0x20000930
 8003124:	20000834 	.word	0x20000834
	...

08003130 <thread4a>:
 8003130:	b510      	push	{r4, lr}
 8003132:	4c06      	ldr	r4, [pc, #24]	; (800314c <thread4a+0x1c>)
 8003134:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003138:	f7ff fb52 	bl	80027e0 <chThdSleep>
 800313c:	4620      	mov	r0, r4
 800313e:	f7ff fea7 	bl	8002e90 <chMtxLock>
 8003142:	4620      	mov	r0, r4
 8003144:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003148:	f7fe bc32 	b.w	80019b0 <chMtxUnlock>
 800314c:	20000844 	.word	0x20000844

08003150 <thread4b>:
 8003150:	b510      	push	{r4, lr}
 8003152:	4c06      	ldr	r4, [pc, #24]	; (800316c <thread4b+0x1c>)
 8003154:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8003158:	f7ff fb42 	bl	80027e0 <chThdSleep>
 800315c:	4620      	mov	r0, r4
 800315e:	f7ff fe97 	bl	8002e90 <chMtxLock>
 8003162:	4620      	mov	r0, r4
 8003164:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003168:	f7fe bc22 	b.w	80019b0 <chMtxUnlock>
 800316c:	20000834 	.word	0x20000834

08003170 <thread1.lto_priv.69>:
 8003170:	b538      	push	{r3, r4, r5, lr}
 8003172:	4c06      	ldr	r4, [pc, #24]	; (800318c <thread1.lto_priv.69+0x1c>)
 8003174:	4605      	mov	r5, r0
 8003176:	4620      	mov	r0, r4
 8003178:	f7ff fe8a 	bl	8002e90 <chMtxLock>
 800317c:	7828      	ldrb	r0, [r5, #0]
 800317e:	f7fd fb87 	bl	8000890 <test_emit_token>
 8003182:	4620      	mov	r0, r4
 8003184:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003188:	f7fe bc12 	b.w	80019b0 <chMtxUnlock>
 800318c:	20000834 	.word	0x20000834

08003190 <chHeapStatus>:
 8003190:	b570      	push	{r4, r5, r6, lr}
 8003192:	4c11      	ldr	r4, [pc, #68]	; (80031d8 <chHeapStatus+0x48>)
 8003194:	2800      	cmp	r0, #0
 8003196:	bf18      	it	ne
 8003198:	4604      	movne	r4, r0
 800319a:	f104 0510 	add.w	r5, r4, #16
 800319e:	4628      	mov	r0, r5
 80031a0:	460e      	mov	r6, r1
 80031a2:	f7ff fe75 	bl	8002e90 <chMtxLock>
 80031a6:	68a3      	ldr	r3, [r4, #8]
 80031a8:	b16b      	cbz	r3, 80031c6 <chHeapStatus+0x36>
 80031aa:	2200      	movs	r2, #0
 80031ac:	4614      	mov	r4, r2
 80031ae:	e9d3 3000 	ldrd	r3, r0, [r3]
 80031b2:	3401      	adds	r4, #1
 80031b4:	4402      	add	r2, r0
 80031b6:	2b00      	cmp	r3, #0
 80031b8:	d1f9      	bne.n	80031ae <chHeapStatus+0x1e>
 80031ba:	4628      	mov	r0, r5
 80031bc:	6032      	str	r2, [r6, #0]
 80031be:	f7fe fbf7 	bl	80019b0 <chMtxUnlock>
 80031c2:	4620      	mov	r0, r4
 80031c4:	bd70      	pop	{r4, r5, r6, pc}
 80031c6:	461a      	mov	r2, r3
 80031c8:	461c      	mov	r4, r3
 80031ca:	4628      	mov	r0, r5
 80031cc:	6032      	str	r2, [r6, #0]
 80031ce:	f7fe fbef 	bl	80019b0 <chMtxUnlock>
 80031d2:	4620      	mov	r0, r4
 80031d4:	bd70      	pop	{r4, r5, r6, pc}
 80031d6:	bf00      	nop
 80031d8:	20000b10 	.word	0x20000b10
 80031dc:	00000000 	.word	0x00000000

080031e0 <chHeapFree>:
 80031e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80031e2:	f850 5c08 	ldr.w	r5, [r0, #-8]
 80031e6:	f105 0710 	add.w	r7, r5, #16
 80031ea:	4606      	mov	r6, r0
 80031ec:	f1a0 0408 	sub.w	r4, r0, #8
 80031f0:	3508      	adds	r5, #8
 80031f2:	4638      	mov	r0, r7
 80031f4:	f7ff fe4c 	bl	8002e90 <chMtxLock>
 80031f8:	462b      	mov	r3, r5
 80031fa:	42ab      	cmp	r3, r5
 80031fc:	681a      	ldr	r2, [r3, #0]
 80031fe:	d001      	beq.n	8003204 <chHeapFree+0x24>
 8003200:	42a3      	cmp	r3, r4
 8003202:	d202      	bcs.n	800320a <chHeapFree+0x2a>
 8003204:	b11a      	cbz	r2, 800320e <chHeapFree+0x2e>
 8003206:	4294      	cmp	r4, r2
 8003208:	d301      	bcc.n	800320e <chHeapFree+0x2e>
 800320a:	4613      	mov	r3, r2
 800320c:	e7f5      	b.n	80031fa <chHeapFree+0x1a>
 800320e:	f846 2c08 	str.w	r2, [r6, #-8]
 8003212:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8003216:	601c      	str	r4, [r3, #0]
 8003218:	f856 0c08 	ldr.w	r0, [r6, #-8]
 800321c:	18b1      	adds	r1, r6, r2
 800321e:	4281      	cmp	r1, r0
 8003220:	d00a      	beq.n	8003238 <chHeapFree+0x58>
 8003222:	6859      	ldr	r1, [r3, #4]
 8003224:	f101 0208 	add.w	r2, r1, #8
 8003228:	441a      	add	r2, r3
 800322a:	4294      	cmp	r4, r2
 800322c:	d012      	beq.n	8003254 <chHeapFree+0x74>
 800322e:	4638      	mov	r0, r7
 8003230:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003234:	f7fe bbbc 	b.w	80019b0 <chMtxUnlock>
 8003238:	6849      	ldr	r1, [r1, #4]
 800323a:	58b0      	ldr	r0, [r6, r2]
 800323c:	f846 0c08 	str.w	r0, [r6, #-8]
 8003240:	3208      	adds	r2, #8
 8003242:	440a      	add	r2, r1
 8003244:	f846 2c04 	str.w	r2, [r6, #-4]
 8003248:	6859      	ldr	r1, [r3, #4]
 800324a:	f101 0208 	add.w	r2, r1, #8
 800324e:	441a      	add	r2, r3
 8003250:	4294      	cmp	r4, r2
 8003252:	d1ec      	bne.n	800322e <chHeapFree+0x4e>
 8003254:	e956 0202 	ldrd	r0, r2, [r6, #-8]
 8003258:	3208      	adds	r2, #8
 800325a:	4411      	add	r1, r2
 800325c:	6018      	str	r0, [r3, #0]
 800325e:	6059      	str	r1, [r3, #4]
 8003260:	4638      	mov	r0, r7
 8003262:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003266:	f7fe bba3 	b.w	80019b0 <chMtxUnlock>
 800326a:	bf00      	nop
 800326c:	0000      	movs	r0, r0
	...

08003270 <chThdRelease>:
 8003270:	b430      	push	{r4, r5}
 8003272:	2120      	movs	r1, #32
 8003274:	f381 8811 	msr	BASEPRI, r1
 8003278:	7f83      	ldrb	r3, [r0, #30]
 800327a:	3b01      	subs	r3, #1
 800327c:	b2db      	uxtb	r3, r3
 800327e:	7783      	strb	r3, [r0, #30]
 8003280:	2400      	movs	r4, #0
 8003282:	f384 8811 	msr	BASEPRI, r4
 8003286:	b91b      	cbnz	r3, 8003290 <chThdRelease+0x20>
 8003288:	7f04      	ldrb	r4, [r0, #28]
 800328a:	2c0f      	cmp	r4, #15
 800328c:	4602      	mov	r2, r0
 800328e:	d001      	beq.n	8003294 <chThdRelease+0x24>
 8003290:	bc30      	pop	{r4, r5}
 8003292:	4770      	bx	lr
 8003294:	7f44      	ldrb	r4, [r0, #29]
 8003296:	f004 0403 	and.w	r4, r4, #3
 800329a:	2c01      	cmp	r4, #1
 800329c:	d00f      	beq.n	80032be <chThdRelease+0x4e>
 800329e:	2c02      	cmp	r4, #2
 80032a0:	d1f6      	bne.n	8003290 <chThdRelease+0x20>
 80032a2:	e9d0 0404 	ldrd	r0, r4, [r0, #16]
 80032a6:	6120      	str	r0, [r4, #16]
 80032a8:	6915      	ldr	r5, [r2, #16]
 80032aa:	6c10      	ldr	r0, [r2, #64]	; 0x40
 80032ac:	616c      	str	r4, [r5, #20]
 80032ae:	f381 8811 	msr	BASEPRI, r1
 80032b2:	6801      	ldr	r1, [r0, #0]
 80032b4:	6011      	str	r1, [r2, #0]
 80032b6:	6002      	str	r2, [r0, #0]
 80032b8:	f383 8811 	msr	BASEPRI, r3
 80032bc:	e7e8      	b.n	8003290 <chThdRelease+0x20>
 80032be:	e9d0 1304 	ldrd	r1, r3, [r0, #16]
 80032c2:	6119      	str	r1, [r3, #16]
 80032c4:	6902      	ldr	r2, [r0, #16]
 80032c6:	bc30      	pop	{r4, r5}
 80032c8:	6153      	str	r3, [r2, #20]
 80032ca:	f7ff bf89 	b.w	80031e0 <chHeapFree>
 80032ce:	bf00      	nop

080032d0 <regfind>:
 80032d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80032d4:	4680      	mov	r8, r0
 80032d6:	2520      	movs	r5, #32
 80032d8:	f385 8811 	msr	BASEPRI, r5
 80032dc:	4f18      	ldr	r7, [pc, #96]	; (8003340 <regfind+0x70>)
 80032de:	6938      	ldr	r0, [r7, #16]
 80032e0:	7f83      	ldrb	r3, [r0, #30]
 80032e2:	3301      	adds	r3, #1
 80032e4:	7783      	strb	r3, [r0, #30]
 80032e6:	2600      	movs	r6, #0
 80032e8:	f386 8811 	msr	BASEPRI, r6
 80032ec:	eba8 0900 	sub.w	r9, r8, r0
 80032f0:	fab9 f989 	clz	r9, r9
 80032f4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80032f8:	f385 8811 	msr	BASEPRI, r5
 80032fc:	6904      	ldr	r4, [r0, #16]
 80032fe:	42bc      	cmp	r4, r7
 8003300:	bf08      	it	eq
 8003302:	4604      	moveq	r4, r0
 8003304:	d101      	bne.n	800330a <regfind+0x3a>
 8003306:	e011      	b.n	800332c <regfind+0x5c>
 8003308:	461c      	mov	r4, r3
 800330a:	7fa3      	ldrb	r3, [r4, #30]
 800330c:	3301      	adds	r3, #1
 800330e:	77a3      	strb	r3, [r4, #30]
 8003310:	f386 8811 	msr	BASEPRI, r6
 8003314:	f7ff ffac 	bl	8003270 <chThdRelease>
 8003318:	45a0      	cmp	r8, r4
 800331a:	bf08      	it	eq
 800331c:	f049 0901 	orreq.w	r9, r9, #1
 8003320:	f385 8811 	msr	BASEPRI, r5
 8003324:	6923      	ldr	r3, [r4, #16]
 8003326:	42bb      	cmp	r3, r7
 8003328:	4620      	mov	r0, r4
 800332a:	d1ed      	bne.n	8003308 <regfind+0x38>
 800332c:	2300      	movs	r3, #0
 800332e:	f383 8811 	msr	BASEPRI, r3
 8003332:	4620      	mov	r0, r4
 8003334:	f7ff ff9c 	bl	8003270 <chThdRelease>
 8003338:	4648      	mov	r0, r9
 800333a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800333e:	bf00      	nop
 8003340:	20000930 	.word	0x20000930
	...

08003350 <chHeapAlloc>:
 8003350:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003352:	4e20      	ldr	r6, [pc, #128]	; (80033d4 <chHeapAlloc+0x84>)
 8003354:	2800      	cmp	r0, #0
 8003356:	bf18      	it	ne
 8003358:	4606      	movne	r6, r0
 800335a:	f106 0710 	add.w	r7, r6, #16
 800335e:	3107      	adds	r1, #7
 8003360:	4638      	mov	r0, r7
 8003362:	f021 0507 	bic.w	r5, r1, #7
 8003366:	f106 0408 	add.w	r4, r6, #8
 800336a:	f7ff fd91 	bl	8002e90 <chMtxLock>
 800336e:	e003      	b.n	8003378 <chHeapAlloc+0x28>
 8003370:	6843      	ldr	r3, [r0, #4]
 8003372:	42ab      	cmp	r3, r5
 8003374:	d212      	bcs.n	800339c <chHeapAlloc+0x4c>
 8003376:	4604      	mov	r4, r0
 8003378:	6820      	ldr	r0, [r4, #0]
 800337a:	2800      	cmp	r0, #0
 800337c:	d1f8      	bne.n	8003370 <chHeapAlloc+0x20>
 800337e:	4638      	mov	r0, r7
 8003380:	f7fe fb16 	bl	80019b0 <chMtxUnlock>
 8003384:	6833      	ldr	r3, [r6, #0]
 8003386:	b313      	cbz	r3, 80033ce <chHeapAlloc+0x7e>
 8003388:	f105 0008 	add.w	r0, r5, #8
 800338c:	4798      	blx	r3
 800338e:	b1f0      	cbz	r0, 80033ce <chHeapAlloc+0x7e>
 8003390:	e9c0 6500 	strd	r6, r5, [r0]
 8003394:	f100 0408 	add.w	r4, r0, #8
 8003398:	4620      	mov	r0, r4
 800339a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800339c:	f105 0208 	add.w	r2, r5, #8
 80033a0:	4293      	cmp	r3, r2
 80033a2:	6801      	ldr	r1, [r0, #0]
 80033a4:	d208      	bcs.n	80033b8 <chHeapAlloc+0x68>
 80033a6:	6021      	str	r1, [r4, #0]
 80033a8:	4604      	mov	r4, r0
 80033aa:	4638      	mov	r0, r7
 80033ac:	f844 6b08 	str.w	r6, [r4], #8
 80033b0:	f7fe fafe 	bl	80019b0 <chMtxUnlock>
 80033b4:	4620      	mov	r0, r4
 80033b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80033b8:	eb00 0c02 	add.w	ip, r0, r2
 80033bc:	1b5b      	subs	r3, r3, r5
 80033be:	3b08      	subs	r3, #8
 80033c0:	5081      	str	r1, [r0, r2]
 80033c2:	f8cc 3004 	str.w	r3, [ip, #4]
 80033c6:	f8c4 c000 	str.w	ip, [r4]
 80033ca:	6045      	str	r5, [r0, #4]
 80033cc:	e7ec      	b.n	80033a8 <chHeapAlloc+0x58>
 80033ce:	2400      	movs	r4, #0
 80033d0:	e7e2      	b.n	8003398 <chHeapAlloc+0x48>
 80033d2:	bf00      	nop
 80033d4:	20000b10 	.word	0x20000b10
	...

080033e0 <chThdCreateFromHeap.constprop.53>:
 80033e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033e2:	4605      	mov	r5, r0
 80033e4:	460e      	mov	r6, r1
 80033e6:	481b      	ldr	r0, [pc, #108]	; (8003454 <chThdCreateFromHeap.constprop.53+0x74>)
 80033e8:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 80033ec:	f7ff ffb0 	bl	8003350 <chHeapAlloc>
 80033f0:	4604      	mov	r4, r0
 80033f2:	b360      	cbz	r0, 800344e <chThdCreateFromHeap.constprop.53+0x6e>
 80033f4:	2320      	movs	r3, #32
 80033f6:	f383 8811 	msr	BASEPRI, r3
 80033fa:	4a17      	ldr	r2, [pc, #92]	; (8003458 <chThdCreateFromHeap.constprop.53+0x78>)
 80033fc:	6102      	str	r2, [r0, #16]
 80033fe:	6957      	ldr	r7, [r2, #20]
 8003400:	f8c0 61b0 	str.w	r6, [r0, #432]	; 0x1b0
 8003404:	f500 71b6 	add.w	r1, r0, #364	; 0x16c
 8003408:	2302      	movs	r3, #2
 800340a:	6085      	str	r5, [r0, #8]
 800340c:	60c1      	str	r1, [r0, #12]
 800340e:	63c5      	str	r5, [r0, #60]	; 0x3c
 8003410:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8003414:	2500      	movs	r5, #0
 8003416:	7703      	strb	r3, [r0, #28]
 8003418:	f8df e040 	ldr.w	lr, [pc, #64]	; 800345c <chThdCreateFromHeap.constprop.53+0x7c>
 800341c:	f8df c040 	ldr.w	ip, [pc, #64]	; 8003460 <chThdCreateFromHeap.constprop.53+0x80>
 8003420:	6147      	str	r7, [r0, #20]
 8003422:	2601      	movs	r6, #1
 8003424:	f100 0328 	add.w	r3, r0, #40	; 0x28
 8003428:	f8c0 e1ac 	str.w	lr, [r0, #428]	; 0x1ac
 800342c:	f8c0 c1cc 	str.w	ip, [r0, #460]	; 0x1cc
 8003430:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8003434:	6185      	str	r5, [r0, #24]
 8003436:	7786      	strb	r6, [r0, #30]
 8003438:	6138      	str	r0, [r7, #16]
 800343a:	6241      	str	r1, [r0, #36]	; 0x24
 800343c:	7746      	strb	r6, [r0, #29]
 800343e:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8003442:	4629      	mov	r1, r5
 8003444:	6150      	str	r0, [r2, #20]
 8003446:	f7fe fa23 	bl	8001890 <chSchWakeupS>
 800344a:	f385 8811 	msr	BASEPRI, r5
 800344e:	4620      	mov	r0, r4
 8003450:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003452:	bf00      	nop
 8003454:	20000b38 	.word	0x20000b38
 8003458:	20000930 	.word	0x20000930
 800345c:	080008f1 	.word	0x080008f1
 8003460:	080002c9 	.word	0x080002c9
	...

08003470 <dyn3_execute>:
 8003470:	4b46      	ldr	r3, [pc, #280]	; (800358c <dyn3_execute+0x11c>)
 8003472:	4947      	ldr	r1, [pc, #284]	; (8003590 <dyn3_execute+0x120>)
 8003474:	699b      	ldr	r3, [r3, #24]
 8003476:	6898      	ldr	r0, [r3, #8]
 8003478:	b510      	push	{r4, lr}
 800347a:	3801      	subs	r0, #1
 800347c:	f7ff ffb0 	bl	80033e0 <chThdCreateFromHeap.constprop.53>
 8003480:	4604      	mov	r4, r0
 8003482:	2001      	movs	r0, #1
 8003484:	7fa1      	ldrb	r1, [r4, #30]
 8003486:	1a09      	subs	r1, r1, r0
 8003488:	fab1 f181 	clz	r1, r1
 800348c:	0949      	lsrs	r1, r1, #5
 800348e:	f7fd f9e7 	bl	8000860 <_test_assert>
 8003492:	b100      	cbz	r0, 8003496 <dyn3_execute+0x26>
 8003494:	bd10      	pop	{r4, pc}
 8003496:	2320      	movs	r3, #32
 8003498:	f383 8811 	msr	BASEPRI, r3
 800349c:	7fa3      	ldrb	r3, [r4, #30]
 800349e:	3301      	adds	r3, #1
 80034a0:	77a3      	strb	r3, [r4, #30]
 80034a2:	f380 8811 	msr	BASEPRI, r0
 80034a6:	7fa1      	ldrb	r1, [r4, #30]
 80034a8:	2002      	movs	r0, #2
 80034aa:	1a09      	subs	r1, r1, r0
 80034ac:	fab1 f181 	clz	r1, r1
 80034b0:	0949      	lsrs	r1, r1, #5
 80034b2:	f7fd f9d5 	bl	8000860 <_test_assert>
 80034b6:	2800      	cmp	r0, #0
 80034b8:	d1ec      	bne.n	8003494 <dyn3_execute+0x24>
 80034ba:	4620      	mov	r0, r4
 80034bc:	f7ff fed8 	bl	8003270 <chThdRelease>
 80034c0:	7fa1      	ldrb	r1, [r4, #30]
 80034c2:	f1a1 0101 	sub.w	r1, r1, #1
 80034c6:	fab1 f181 	clz	r1, r1
 80034ca:	2003      	movs	r0, #3
 80034cc:	0949      	lsrs	r1, r1, #5
 80034ce:	f7fd f9c7 	bl	8000860 <_test_assert>
 80034d2:	2800      	cmp	r0, #0
 80034d4:	d1de      	bne.n	8003494 <dyn3_execute+0x24>
 80034d6:	4620      	mov	r0, r4
 80034d8:	f7ff fefa 	bl	80032d0 <regfind>
 80034dc:	4601      	mov	r1, r0
 80034de:	2004      	movs	r0, #4
 80034e0:	f7fd f9be 	bl	8000860 <_test_assert>
 80034e4:	2800      	cmp	r0, #0
 80034e6:	d1d5      	bne.n	8003494 <dyn3_execute+0x24>
 80034e8:	4620      	mov	r0, r4
 80034ea:	f7ff fef1 	bl	80032d0 <regfind>
 80034ee:	4601      	mov	r1, r0
 80034f0:	2005      	movs	r0, #5
 80034f2:	f7fd f9b5 	bl	8000860 <_test_assert>
 80034f6:	2800      	cmp	r0, #0
 80034f8:	d1cc      	bne.n	8003494 <dyn3_execute+0x24>
 80034fa:	4620      	mov	r0, r4
 80034fc:	f7ff feb8 	bl	8003270 <chThdRelease>
 8003500:	7fa1      	ldrb	r1, [r4, #30]
 8003502:	fab1 f181 	clz	r1, r1
 8003506:	0949      	lsrs	r1, r1, #5
 8003508:	2006      	movs	r0, #6
 800350a:	f7fd f9a9 	bl	8000860 <_test_assert>
 800350e:	2800      	cmp	r0, #0
 8003510:	d1c0      	bne.n	8003494 <dyn3_execute+0x24>
 8003512:	7f21      	ldrb	r1, [r4, #28]
 8003514:	fab1 f181 	clz	r1, r1
 8003518:	0949      	lsrs	r1, r1, #5
 800351a:	2007      	movs	r0, #7
 800351c:	f7fd f9a0 	bl	8000860 <_test_assert>
 8003520:	2800      	cmp	r0, #0
 8003522:	d1b7      	bne.n	8003494 <dyn3_execute+0x24>
 8003524:	4620      	mov	r0, r4
 8003526:	f7ff fed3 	bl	80032d0 <regfind>
 800352a:	4601      	mov	r1, r0
 800352c:	2008      	movs	r0, #8
 800352e:	f7fd f997 	bl	8000860 <_test_assert>
 8003532:	2800      	cmp	r0, #0
 8003534:	d1ae      	bne.n	8003494 <dyn3_execute+0x24>
 8003536:	4620      	mov	r0, r4
 8003538:	f7ff feca 	bl	80032d0 <regfind>
 800353c:	4601      	mov	r1, r0
 800353e:	2009      	movs	r0, #9
 8003540:	f7fd f98e 	bl	8000860 <_test_assert>
 8003544:	2800      	cmp	r0, #0
 8003546:	d1a5      	bne.n	8003494 <dyn3_execute+0x24>
 8003548:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800354c:	f7ff f948 	bl	80027e0 <chThdSleep>
 8003550:	7f21      	ldrb	r1, [r4, #28]
 8003552:	f1a1 030f 	sub.w	r3, r1, #15
 8003556:	4259      	negs	r1, r3
 8003558:	4159      	adcs	r1, r3
 800355a:	200a      	movs	r0, #10
 800355c:	f7fd f980 	bl	8000860 <_test_assert>
 8003560:	2800      	cmp	r0, #0
 8003562:	d197      	bne.n	8003494 <dyn3_execute+0x24>
 8003564:	4620      	mov	r0, r4
 8003566:	f7ff feb3 	bl	80032d0 <regfind>
 800356a:	4601      	mov	r1, r0
 800356c:	200b      	movs	r0, #11
 800356e:	f7fd f977 	bl	8000860 <_test_assert>
 8003572:	2800      	cmp	r0, #0
 8003574:	d18e      	bne.n	8003494 <dyn3_execute+0x24>
 8003576:	4620      	mov	r0, r4
 8003578:	f7ff feaa 	bl	80032d0 <regfind>
 800357c:	f080 0101 	eor.w	r1, r0, #1
 8003580:	b2c9      	uxtb	r1, r1
 8003582:	200c      	movs	r0, #12
 8003584:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003588:	f7fd b96a 	b.w	8000860 <_test_assert>
 800358c:	20000930 	.word	0x20000930
 8003590:	08005ef0 	.word	0x08005ef0
	...

080035a0 <heap1_execute>:
 80035a0:	b570      	push	{r4, r5, r6, lr}
 80035a2:	b082      	sub	sp, #8
 80035a4:	4669      	mov	r1, sp
 80035a6:	2000      	movs	r0, #0
 80035a8:	f7ff fdf2 	bl	8003190 <chHeapStatus>
 80035ac:	2110      	movs	r1, #16
 80035ae:	2000      	movs	r0, #0
 80035b0:	f7ff fece 	bl	8003350 <chHeapAlloc>
 80035b4:	1c01      	adds	r1, r0, #0
 80035b6:	4605      	mov	r5, r0
 80035b8:	bf18      	it	ne
 80035ba:	2101      	movne	r1, #1
 80035bc:	2001      	movs	r0, #1
 80035be:	f7fd f94f 	bl	8000860 <_test_assert>
 80035c2:	b108      	cbz	r0, 80035c8 <heap1_execute+0x28>
 80035c4:	b002      	add	sp, #8
 80035c6:	bd70      	pop	{r4, r5, r6, pc}
 80035c8:	4604      	mov	r4, r0
 80035ca:	4628      	mov	r0, r5
 80035cc:	f7ff fe08 	bl	80031e0 <chHeapFree>
 80035d0:	f06f 01ff 	mvn.w	r1, #255	; 0xff
 80035d4:	4620      	mov	r0, r4
 80035d6:	f7ff febb 	bl	8003350 <chHeapAlloc>
 80035da:	fab0 f180 	clz	r1, r0
 80035de:	0949      	lsrs	r1, r1, #5
 80035e0:	2002      	movs	r0, #2
 80035e2:	f7fd f93d 	bl	8000860 <_test_assert>
 80035e6:	2800      	cmp	r0, #0
 80035e8:	d1ec      	bne.n	80035c4 <heap1_execute+0x24>
 80035ea:	4669      	mov	r1, sp
 80035ec:	487c      	ldr	r0, [pc, #496]	; (80037e0 <heap1_execute+0x240>)
 80035ee:	f7ff fdcf 	bl	8003190 <chHeapStatus>
 80035f2:	2110      	movs	r1, #16
 80035f4:	487a      	ldr	r0, [pc, #488]	; (80037e0 <heap1_execute+0x240>)
 80035f6:	f7ff feab 	bl	8003350 <chHeapAlloc>
 80035fa:	2110      	movs	r1, #16
 80035fc:	4606      	mov	r6, r0
 80035fe:	4878      	ldr	r0, [pc, #480]	; (80037e0 <heap1_execute+0x240>)
 8003600:	f7ff fea6 	bl	8003350 <chHeapAlloc>
 8003604:	2110      	movs	r1, #16
 8003606:	4605      	mov	r5, r0
 8003608:	4875      	ldr	r0, [pc, #468]	; (80037e0 <heap1_execute+0x240>)
 800360a:	f7ff fea1 	bl	8003350 <chHeapAlloc>
 800360e:	4604      	mov	r4, r0
 8003610:	4630      	mov	r0, r6
 8003612:	f7ff fde5 	bl	80031e0 <chHeapFree>
 8003616:	4628      	mov	r0, r5
 8003618:	f7ff fde2 	bl	80031e0 <chHeapFree>
 800361c:	4620      	mov	r0, r4
 800361e:	f7ff fddf 	bl	80031e0 <chHeapFree>
 8003622:	a901      	add	r1, sp, #4
 8003624:	486e      	ldr	r0, [pc, #440]	; (80037e0 <heap1_execute+0x240>)
 8003626:	f7ff fdb3 	bl	8003190 <chHeapStatus>
 800362a:	f1a0 0101 	sub.w	r1, r0, #1
 800362e:	fab1 f181 	clz	r1, r1
 8003632:	0949      	lsrs	r1, r1, #5
 8003634:	2003      	movs	r0, #3
 8003636:	f7fd f913 	bl	8000860 <_test_assert>
 800363a:	2800      	cmp	r0, #0
 800363c:	d1c2      	bne.n	80035c4 <heap1_execute+0x24>
 800363e:	2110      	movs	r1, #16
 8003640:	4867      	ldr	r0, [pc, #412]	; (80037e0 <heap1_execute+0x240>)
 8003642:	f7ff fe85 	bl	8003350 <chHeapAlloc>
 8003646:	2110      	movs	r1, #16
 8003648:	4604      	mov	r4, r0
 800364a:	4865      	ldr	r0, [pc, #404]	; (80037e0 <heap1_execute+0x240>)
 800364c:	f7ff fe80 	bl	8003350 <chHeapAlloc>
 8003650:	2110      	movs	r1, #16
 8003652:	4605      	mov	r5, r0
 8003654:	4862      	ldr	r0, [pc, #392]	; (80037e0 <heap1_execute+0x240>)
 8003656:	f7ff fe7b 	bl	8003350 <chHeapAlloc>
 800365a:	f7ff fdc1 	bl	80031e0 <chHeapFree>
 800365e:	4628      	mov	r0, r5
 8003660:	f7ff fdbe 	bl	80031e0 <chHeapFree>
 8003664:	4620      	mov	r0, r4
 8003666:	f7ff fdbb 	bl	80031e0 <chHeapFree>
 800366a:	a901      	add	r1, sp, #4
 800366c:	485c      	ldr	r0, [pc, #368]	; (80037e0 <heap1_execute+0x240>)
 800366e:	f7ff fd8f 	bl	8003190 <chHeapStatus>
 8003672:	f1a0 0101 	sub.w	r1, r0, #1
 8003676:	fab1 f181 	clz	r1, r1
 800367a:	0949      	lsrs	r1, r1, #5
 800367c:	2004      	movs	r0, #4
 800367e:	f7fd f8ef 	bl	8000860 <_test_assert>
 8003682:	2800      	cmp	r0, #0
 8003684:	d19e      	bne.n	80035c4 <heap1_execute+0x24>
 8003686:	2111      	movs	r1, #17
 8003688:	4855      	ldr	r0, [pc, #340]	; (80037e0 <heap1_execute+0x240>)
 800368a:	f7ff fe61 	bl	8003350 <chHeapAlloc>
 800368e:	2110      	movs	r1, #16
 8003690:	4604      	mov	r4, r0
 8003692:	4853      	ldr	r0, [pc, #332]	; (80037e0 <heap1_execute+0x240>)
 8003694:	f7ff fe5c 	bl	8003350 <chHeapAlloc>
 8003698:	4605      	mov	r5, r0
 800369a:	4620      	mov	r0, r4
 800369c:	f7ff fda0 	bl	80031e0 <chHeapFree>
 80036a0:	a901      	add	r1, sp, #4
 80036a2:	484f      	ldr	r0, [pc, #316]	; (80037e0 <heap1_execute+0x240>)
 80036a4:	f7ff fd74 	bl	8003190 <chHeapStatus>
 80036a8:	f1a0 0102 	sub.w	r1, r0, #2
 80036ac:	fab1 f181 	clz	r1, r1
 80036b0:	0949      	lsrs	r1, r1, #5
 80036b2:	2005      	movs	r0, #5
 80036b4:	f7fd f8d4 	bl	8000860 <_test_assert>
 80036b8:	2800      	cmp	r0, #0
 80036ba:	d183      	bne.n	80035c4 <heap1_execute+0x24>
 80036bc:	2110      	movs	r1, #16
 80036be:	4848      	ldr	r0, [pc, #288]	; (80037e0 <heap1_execute+0x240>)
 80036c0:	f7ff fe46 	bl	8003350 <chHeapAlloc>
 80036c4:	a901      	add	r1, sp, #4
 80036c6:	4604      	mov	r4, r0
 80036c8:	4845      	ldr	r0, [pc, #276]	; (80037e0 <heap1_execute+0x240>)
 80036ca:	f7ff fd61 	bl	8003190 <chHeapStatus>
 80036ce:	2801      	cmp	r0, #1
 80036d0:	f000 8083 	beq.w	80037da <heap1_execute+0x23a>
 80036d4:	a901      	add	r1, sp, #4
 80036d6:	4842      	ldr	r0, [pc, #264]	; (80037e0 <heap1_execute+0x240>)
 80036d8:	f7ff fd5a 	bl	8003190 <chHeapStatus>
 80036dc:	f1a0 0102 	sub.w	r1, r0, #2
 80036e0:	fab1 f181 	clz	r1, r1
 80036e4:	0949      	lsrs	r1, r1, #5
 80036e6:	2006      	movs	r0, #6
 80036e8:	f7fd f8ba 	bl	8000860 <_test_assert>
 80036ec:	2800      	cmp	r0, #0
 80036ee:	f47f af69 	bne.w	80035c4 <heap1_execute+0x24>
 80036f2:	4628      	mov	r0, r5
 80036f4:	f7ff fd74 	bl	80031e0 <chHeapFree>
 80036f8:	4620      	mov	r0, r4
 80036fa:	f7ff fd71 	bl	80031e0 <chHeapFree>
 80036fe:	a901      	add	r1, sp, #4
 8003700:	4837      	ldr	r0, [pc, #220]	; (80037e0 <heap1_execute+0x240>)
 8003702:	f7ff fd45 	bl	8003190 <chHeapStatus>
 8003706:	f1a0 0101 	sub.w	r1, r0, #1
 800370a:	fab1 f181 	clz	r1, r1
 800370e:	0949      	lsrs	r1, r1, #5
 8003710:	2007      	movs	r0, #7
 8003712:	f7fd f8a5 	bl	8000860 <_test_assert>
 8003716:	2800      	cmp	r0, #0
 8003718:	f47f af54 	bne.w	80035c4 <heap1_execute+0x24>
 800371c:	2110      	movs	r1, #16
 800371e:	4830      	ldr	r0, [pc, #192]	; (80037e0 <heap1_execute+0x240>)
 8003720:	f7ff fe16 	bl	8003350 <chHeapAlloc>
 8003724:	2110      	movs	r1, #16
 8003726:	4605      	mov	r5, r0
 8003728:	482d      	ldr	r0, [pc, #180]	; (80037e0 <heap1_execute+0x240>)
 800372a:	f7ff fe11 	bl	8003350 <chHeapAlloc>
 800372e:	4604      	mov	r4, r0
 8003730:	4628      	mov	r0, r5
 8003732:	f7ff fd55 	bl	80031e0 <chHeapFree>
 8003736:	a901      	add	r1, sp, #4
 8003738:	4829      	ldr	r0, [pc, #164]	; (80037e0 <heap1_execute+0x240>)
 800373a:	f7ff fd29 	bl	8003190 <chHeapStatus>
 800373e:	1e85      	subs	r5, r0, #2
 8003740:	4269      	negs	r1, r5
 8003742:	4169      	adcs	r1, r5
 8003744:	2008      	movs	r0, #8
 8003746:	f7fd f88b 	bl	8000860 <_test_assert>
 800374a:	2800      	cmp	r0, #0
 800374c:	f47f af3a 	bne.w	80035c4 <heap1_execute+0x24>
 8003750:	2120      	movs	r1, #32
 8003752:	4823      	ldr	r0, [pc, #140]	; (80037e0 <heap1_execute+0x240>)
 8003754:	f7ff fdfc 	bl	8003350 <chHeapAlloc>
 8003758:	f7ff fd42 	bl	80031e0 <chHeapFree>
 800375c:	4620      	mov	r0, r4
 800375e:	f7ff fd3f 	bl	80031e0 <chHeapFree>
 8003762:	a901      	add	r1, sp, #4
 8003764:	481e      	ldr	r0, [pc, #120]	; (80037e0 <heap1_execute+0x240>)
 8003766:	f7ff fd13 	bl	8003190 <chHeapStatus>
 800376a:	3801      	subs	r0, #1
 800376c:	4241      	negs	r1, r0
 800376e:	4141      	adcs	r1, r0
 8003770:	2009      	movs	r0, #9
 8003772:	f7fd f875 	bl	8000860 <_test_assert>
 8003776:	2800      	cmp	r0, #0
 8003778:	f47f af24 	bne.w	80035c4 <heap1_execute+0x24>
 800377c:	a901      	add	r1, sp, #4
 800377e:	4818      	ldr	r0, [pc, #96]	; (80037e0 <heap1_execute+0x240>)
 8003780:	f7ff fd06 	bl	8003190 <chHeapStatus>
 8003784:	9901      	ldr	r1, [sp, #4]
 8003786:	4816      	ldr	r0, [pc, #88]	; (80037e0 <heap1_execute+0x240>)
 8003788:	f7ff fde2 	bl	8003350 <chHeapAlloc>
 800378c:	a901      	add	r1, sp, #4
 800378e:	4604      	mov	r4, r0
 8003790:	4813      	ldr	r0, [pc, #76]	; (80037e0 <heap1_execute+0x240>)
 8003792:	f7ff fcfd 	bl	8003190 <chHeapStatus>
 8003796:	fab0 f180 	clz	r1, r0
 800379a:	0949      	lsrs	r1, r1, #5
 800379c:	200a      	movs	r0, #10
 800379e:	f7fd f85f 	bl	8000860 <_test_assert>
 80037a2:	2800      	cmp	r0, #0
 80037a4:	f47f af0e 	bne.w	80035c4 <heap1_execute+0x24>
 80037a8:	4620      	mov	r0, r4
 80037aa:	f7ff fd19 	bl	80031e0 <chHeapFree>
 80037ae:	a901      	add	r1, sp, #4
 80037b0:	480b      	ldr	r0, [pc, #44]	; (80037e0 <heap1_execute+0x240>)
 80037b2:	f7ff fced 	bl	8003190 <chHeapStatus>
 80037b6:	1e42      	subs	r2, r0, #1
 80037b8:	4251      	negs	r1, r2
 80037ba:	4151      	adcs	r1, r2
 80037bc:	200b      	movs	r0, #11
 80037be:	f7fd f84f 	bl	8000860 <_test_assert>
 80037c2:	2800      	cmp	r0, #0
 80037c4:	f47f aefe 	bne.w	80035c4 <heap1_execute+0x24>
 80037c8:	e9dd 3100 	ldrd	r3, r1, [sp]
 80037cc:	1acb      	subs	r3, r1, r3
 80037ce:	4259      	negs	r1, r3
 80037d0:	4159      	adcs	r1, r3
 80037d2:	200c      	movs	r0, #12
 80037d4:	f7fd f844 	bl	8000860 <_test_assert>
 80037d8:	e6f4      	b.n	80035c4 <heap1_execute+0x24>
 80037da:	4601      	mov	r1, r0
 80037dc:	e783      	b.n	80036e6 <heap1_execute+0x146>
 80037de:	bf00      	nop
 80037e0:	200014d8 	.word	0x200014d8
	...

080037f0 <chSemWait>:
 80037f0:	2320      	movs	r3, #32
 80037f2:	f383 8811 	msr	BASEPRI, r3
 80037f6:	6883      	ldr	r3, [r0, #8]
 80037f8:	3b01      	subs	r3, #1
 80037fa:	2b00      	cmp	r3, #0
 80037fc:	6083      	str	r3, [r0, #8]
 80037fe:	db04      	blt.n	800380a <chSemWait+0x1a>
 8003800:	2000      	movs	r0, #0
 8003802:	2300      	movs	r3, #0
 8003804:	f383 8811 	msr	BASEPRI, r3
 8003808:	4770      	bx	lr
 800380a:	b510      	push	{r4, lr}
 800380c:	4c08      	ldr	r4, [pc, #32]	; (8003830 <chSemWait+0x40>)
 800380e:	69a2      	ldr	r2, [r4, #24]
 8003810:	6210      	str	r0, [r2, #32]
 8003812:	6010      	str	r0, [r2, #0]
 8003814:	6841      	ldr	r1, [r0, #4]
 8003816:	6051      	str	r1, [r2, #4]
 8003818:	4603      	mov	r3, r0
 800381a:	600a      	str	r2, [r1, #0]
 800381c:	2005      	movs	r0, #5
 800381e:	605a      	str	r2, [r3, #4]
 8003820:	f7fe f94e 	bl	8001ac0 <chSchGoSleepS>
 8003824:	69a3      	ldr	r3, [r4, #24]
 8003826:	6a18      	ldr	r0, [r3, #32]
 8003828:	2300      	movs	r3, #0
 800382a:	f383 8811 	msr	BASEPRI, r3
 800382e:	bd10      	pop	{r4, pc}
 8003830:	20000930 	.word	0x20000930
	...

08003840 <bmk11_execute>:
 8003840:	b570      	push	{r4, r5, r6, lr}
 8003842:	f7ff f8ad 	bl	80029a0 <test_wait_tick>
 8003846:	f7fd fd33 	bl	80012b0 <test_start_timer.constprop.1>
 800384a:	4e15      	ldr	r6, [pc, #84]	; (80038a0 <bmk11_execute+0x60>)
 800384c:	4c15      	ldr	r4, [pc, #84]	; (80038a4 <bmk11_execute+0x64>)
 800384e:	2500      	movs	r5, #0
 8003850:	4620      	mov	r0, r4
 8003852:	f7ff ffcd 	bl	80037f0 <chSemWait>
 8003856:	4620      	mov	r0, r4
 8003858:	f7fe f8da 	bl	8001a10 <chSemSignal>
 800385c:	4620      	mov	r0, r4
 800385e:	f7ff ffc7 	bl	80037f0 <chSemWait>
 8003862:	4620      	mov	r0, r4
 8003864:	f7fe f8d4 	bl	8001a10 <chSemSignal>
 8003868:	4620      	mov	r0, r4
 800386a:	f7ff ffc1 	bl	80037f0 <chSemWait>
 800386e:	4620      	mov	r0, r4
 8003870:	f7fe f8ce 	bl	8001a10 <chSemSignal>
 8003874:	4620      	mov	r0, r4
 8003876:	f7ff ffbb 	bl	80037f0 <chSemWait>
 800387a:	4620      	mov	r0, r4
 800387c:	f7fe f8c8 	bl	8001a10 <chSemSignal>
 8003880:	7833      	ldrb	r3, [r6, #0]
 8003882:	3501      	adds	r5, #1
 8003884:	2b00      	cmp	r3, #0
 8003886:	d0e3      	beq.n	8003850 <bmk11_execute+0x10>
 8003888:	4807      	ldr	r0, [pc, #28]	; (80038a8 <bmk11_execute+0x68>)
 800388a:	f7fd f859 	bl	8000940 <test_print>
 800388e:	00a8      	lsls	r0, r5, #2
 8003890:	f7fc ff5e 	bl	8000750 <test_printn>
 8003894:	4805      	ldr	r0, [pc, #20]	; (80038ac <bmk11_execute+0x6c>)
 8003896:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800389a:	f7fd b831 	b.w	8000900 <test_println>
 800389e:	bf00      	nop
 80038a0:	200014f8 	.word	0x200014f8
 80038a4:	20000bb0 	.word	0x20000bb0
 80038a8:	08005d60 	.word	0x08005d60
 80038ac:	08005d80 	.word	0x08005d80

080038b0 <thread3.lto_priv.67>:
 80038b0:	b538      	push	{r3, r4, r5, lr}
 80038b2:	4c07      	ldr	r4, [pc, #28]	; (80038d0 <thread3.lto_priv.67+0x20>)
 80038b4:	69a3      	ldr	r3, [r4, #24]
 80038b6:	7f5b      	ldrb	r3, [r3, #29]
 80038b8:	075a      	lsls	r2, r3, #29
 80038ba:	d407      	bmi.n	80038cc <thread3.lto_priv.67+0x1c>
 80038bc:	4d05      	ldr	r5, [pc, #20]	; (80038d4 <thread3.lto_priv.67+0x24>)
 80038be:	4628      	mov	r0, r5
 80038c0:	f7ff ff96 	bl	80037f0 <chSemWait>
 80038c4:	69a3      	ldr	r3, [r4, #24]
 80038c6:	7f5b      	ldrb	r3, [r3, #29]
 80038c8:	075b      	lsls	r3, r3, #29
 80038ca:	d5f8      	bpl.n	80038be <thread3.lto_priv.67+0xe>
 80038cc:	bd38      	pop	{r3, r4, r5, pc}
 80038ce:	bf00      	nop
 80038d0:	20000930 	.word	0x20000930
 80038d4:	20000bb0 	.word	0x20000bb0
	...

080038e0 <sem4_execute>:
 80038e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80038e2:	b087      	sub	sp, #28
 80038e4:	ac03      	add	r4, sp, #12
 80038e6:	2500      	movs	r5, #0
 80038e8:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80038ec:	9505      	str	r5, [sp, #20]
 80038ee:	2620      	movs	r6, #32
 80038f0:	f386 8811 	msr	BASEPRI, r6
 80038f4:	4629      	mov	r1, r5
 80038f6:	4620      	mov	r0, r4
 80038f8:	f7fd fc42 	bl	8001180 <chSemResetI>
 80038fc:	f7fd fe98 	bl	8001630 <chSchRescheduleS>
 8003900:	f385 8811 	msr	BASEPRI, r5
 8003904:	f386 8811 	msr	BASEPRI, r6
 8003908:	9905      	ldr	r1, [sp, #20]
 800390a:	42a9      	cmp	r1, r5
 800390c:	bfcc      	ite	gt
 800390e:	2100      	movgt	r1, #0
 8003910:	2101      	movle	r1, #1
 8003912:	2001      	movs	r0, #1
 8003914:	f7fc ffa4 	bl	8000860 <_test_assert>
 8003918:	b118      	cbz	r0, 8003922 <sem4_execute+0x42>
 800391a:	f385 8811 	msr	BASEPRI, r5
 800391e:	b007      	add	sp, #28
 8003920:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003922:	4607      	mov	r7, r0
 8003924:	f380 8811 	msr	BASEPRI, r0
 8003928:	4a41      	ldr	r2, [pc, #260]	; (8003a30 <sem4_execute+0x150>)
 800392a:	4b42      	ldr	r3, [pc, #264]	; (8003a34 <sem4_execute+0x154>)
 800392c:	6992      	ldr	r2, [r2, #24]
 800392e:	4842      	ldr	r0, [pc, #264]	; (8003a38 <sem4_execute+0x158>)
 8003930:	6892      	ldr	r2, [r2, #8]
 8003932:	9400      	str	r4, [sp, #0]
 8003934:	3a01      	subs	r2, #1
 8003936:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 800393a:	f7fe f889 	bl	8001a50 <chThdCreateStatic>
 800393e:	4b3f      	ldr	r3, [pc, #252]	; (8003a3c <sem4_execute+0x15c>)
 8003940:	6018      	str	r0, [r3, #0]
 8003942:	4620      	mov	r0, r4
 8003944:	f7ff ff54 	bl	80037f0 <chSemWait>
 8003948:	f386 8811 	msr	BASEPRI, r6
 800394c:	9905      	ldr	r1, [sp, #20]
 800394e:	2900      	cmp	r1, #0
 8003950:	bfcc      	ite	gt
 8003952:	2100      	movgt	r1, #0
 8003954:	2101      	movle	r1, #1
 8003956:	2002      	movs	r0, #2
 8003958:	f7fc ff82 	bl	8000860 <_test_assert>
 800395c:	b118      	cbz	r0, 8003966 <sem4_execute+0x86>
 800395e:	f387 8811 	msr	BASEPRI, r7
 8003962:	b007      	add	sp, #28
 8003964:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003966:	f380 8811 	msr	BASEPRI, r0
 800396a:	f386 8811 	msr	BASEPRI, r6
 800396e:	9b05      	ldr	r3, [sp, #20]
 8003970:	2b00      	cmp	r3, #0
 8003972:	dd24      	ble.n	80039be <sem4_execute+0xde>
 8003974:	f7fd fe5c 	bl	8001630 <chSchRescheduleS>
 8003978:	2500      	movs	r5, #0
 800397a:	f385 8811 	msr	BASEPRI, r5
 800397e:	2720      	movs	r7, #32
 8003980:	f387 8811 	msr	BASEPRI, r7
 8003984:	9905      	ldr	r1, [sp, #20]
 8003986:	42a9      	cmp	r1, r5
 8003988:	f04f 0003 	mov.w	r0, #3
 800398c:	bfd4      	ite	le
 800398e:	2100      	movle	r1, #0
 8003990:	2101      	movgt	r1, #1
 8003992:	f7fc ff65 	bl	8000860 <_test_assert>
 8003996:	4606      	mov	r6, r0
 8003998:	2800      	cmp	r0, #0
 800399a:	d1be      	bne.n	800391a <sem4_execute+0x3a>
 800399c:	f380 8811 	msr	BASEPRI, r0
 80039a0:	f387 8811 	msr	BASEPRI, r7
 80039a4:	9905      	ldr	r1, [sp, #20]
 80039a6:	f1a1 0101 	sub.w	r1, r1, #1
 80039aa:	fab1 f181 	clz	r1, r1
 80039ae:	2004      	movs	r0, #4
 80039b0:	0949      	lsrs	r1, r1, #5
 80039b2:	f7fc ff55 	bl	8000860 <_test_assert>
 80039b6:	b130      	cbz	r0, 80039c6 <sem4_execute+0xe6>
 80039b8:	f386 8811 	msr	BASEPRI, r6
 80039bc:	e7af      	b.n	800391e <sem4_execute+0x3e>
 80039be:	4620      	mov	r0, r4
 80039c0:	f7fd fb6e 	bl	80010a0 <chSemSignalI>
 80039c4:	e7d6      	b.n	8003974 <sem4_execute+0x94>
 80039c6:	f380 8811 	msr	BASEPRI, r0
 80039ca:	f387 8811 	msr	BASEPRI, r7
 80039ce:	9b05      	ldr	r3, [sp, #20]
 80039d0:	2b00      	cmp	r3, #0
 80039d2:	dd28      	ble.n	8003a26 <sem4_execute+0x146>
 80039d4:	f7fd fe2c 	bl	8001630 <chSchRescheduleS>
 80039d8:	2400      	movs	r4, #0
 80039da:	f384 8811 	msr	BASEPRI, r4
 80039de:	2620      	movs	r6, #32
 80039e0:	f386 8811 	msr	BASEPRI, r6
 80039e4:	9905      	ldr	r1, [sp, #20]
 80039e6:	42a1      	cmp	r1, r4
 80039e8:	f04f 0003 	mov.w	r0, #3
 80039ec:	bfd4      	ite	le
 80039ee:	2100      	movle	r1, #0
 80039f0:	2101      	movgt	r1, #1
 80039f2:	f7fc ff35 	bl	8000860 <_test_assert>
 80039f6:	4605      	mov	r5, r0
 80039f8:	b110      	cbz	r0, 8003a00 <sem4_execute+0x120>
 80039fa:	f384 8811 	msr	BASEPRI, r4
 80039fe:	e78e      	b.n	800391e <sem4_execute+0x3e>
 8003a00:	f380 8811 	msr	BASEPRI, r0
 8003a04:	f386 8811 	msr	BASEPRI, r6
 8003a08:	9905      	ldr	r1, [sp, #20]
 8003a0a:	f1a1 0101 	sub.w	r1, r1, #1
 8003a0e:	fab1 f181 	clz	r1, r1
 8003a12:	2005      	movs	r0, #5
 8003a14:	0949      	lsrs	r1, r1, #5
 8003a16:	f7fc ff23 	bl	8000860 <_test_assert>
 8003a1a:	2800      	cmp	r0, #0
 8003a1c:	f47f af7d 	bne.w	800391a <sem4_execute+0x3a>
 8003a20:	f380 8811 	msr	BASEPRI, r0
 8003a24:	e77b      	b.n	800391e <sem4_execute+0x3e>
 8003a26:	4620      	mov	r0, r4
 8003a28:	f7fd fb3a 	bl	80010a0 <chSemSignalI>
 8003a2c:	e7d2      	b.n	80039d4 <sem4_execute+0xf4>
 8003a2e:	bf00      	nop
 8003a30:	20000930 	.word	0x20000930
 8003a34:	08001651 	.word	0x08001651
 8003a38:	20000bc0 	.word	0x20000bc0
 8003a3c:	200014fc 	.word	0x200014fc

08003a40 <thread3.lto_priv.66>:
 8003a40:	b510      	push	{r4, lr}
 8003a42:	4c04      	ldr	r4, [pc, #16]	; (8003a54 <thread3.lto_priv.66+0x14>)
 8003a44:	4620      	mov	r0, r4
 8003a46:	f7ff fed3 	bl	80037f0 <chSemWait>
 8003a4a:	4620      	mov	r0, r4
 8003a4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003a50:	f7fd bfde 	b.w	8001a10 <chSemSignal>
 8003a54:	200008ac 	.word	0x200008ac
	...

08003a60 <thread1.lto_priv.68>:
 8003a60:	b510      	push	{r4, lr}
 8003a62:	4604      	mov	r4, r0
 8003a64:	4803      	ldr	r0, [pc, #12]	; (8003a74 <thread1.lto_priv.68+0x14>)
 8003a66:	f7ff fec3 	bl	80037f0 <chSemWait>
 8003a6a:	7820      	ldrb	r0, [r4, #0]
 8003a6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003a70:	f7fc bf0e 	b.w	8000890 <test_emit_token>
 8003a74:	200008ac 	.word	0x200008ac
	...

08003a80 <chThdWait>:
 8003a80:	b538      	push	{r3, r4, r5, lr}
 8003a82:	4604      	mov	r4, r0
 8003a84:	2320      	movs	r3, #32
 8003a86:	f383 8811 	msr	BASEPRI, r3
 8003a8a:	7f03      	ldrb	r3, [r0, #28]
 8003a8c:	2b0f      	cmp	r3, #15
 8003a8e:	d007      	beq.n	8003aa0 <chThdWait+0x20>
 8003a90:	4b08      	ldr	r3, [pc, #32]	; (8003ab4 <chThdWait+0x34>)
 8003a92:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003a94:	699b      	ldr	r3, [r3, #24]
 8003a96:	2009      	movs	r0, #9
 8003a98:	601a      	str	r2, [r3, #0]
 8003a9a:	6263      	str	r3, [r4, #36]	; 0x24
 8003a9c:	f7fe f810 	bl	8001ac0 <chSchGoSleepS>
 8003aa0:	6a25      	ldr	r5, [r4, #32]
 8003aa2:	2300      	movs	r3, #0
 8003aa4:	f383 8811 	msr	BASEPRI, r3
 8003aa8:	4620      	mov	r0, r4
 8003aaa:	f7ff fbe1 	bl	8003270 <chThdRelease>
 8003aae:	4628      	mov	r0, r5
 8003ab0:	bd38      	pop	{r3, r4, r5, pc}
 8003ab2:	bf00      	nop
 8003ab4:	20000930 	.word	0x20000930
	...

08003ac0 <bmk5_execute>:
 8003ac0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003ac4:	4b15      	ldr	r3, [pc, #84]	; (8003b1c <bmk5_execute+0x5c>)
 8003ac6:	f8df 9064 	ldr.w	r9, [pc, #100]	; 8003b2c <bmk5_execute+0x6c>
 8003aca:	699b      	ldr	r3, [r3, #24]
 8003acc:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8003b30 <bmk5_execute+0x70>
 8003ad0:	689d      	ldr	r5, [r3, #8]
 8003ad2:	4f13      	ldr	r7, [pc, #76]	; (8003b20 <bmk5_execute+0x60>)
 8003ad4:	b083      	sub	sp, #12
 8003ad6:	f7fe ff63 	bl	80029a0 <test_wait_tick>
 8003ada:	f7fd fbe9 	bl	80012b0 <test_start_timer.constprop.1>
 8003ade:	2400      	movs	r4, #0
 8003ae0:	3d01      	subs	r5, #1
 8003ae2:	4626      	mov	r6, r4
 8003ae4:	4643      	mov	r3, r8
 8003ae6:	462a      	mov	r2, r5
 8003ae8:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003aec:	9600      	str	r6, [sp, #0]
 8003aee:	4638      	mov	r0, r7
 8003af0:	f7fd ffae 	bl	8001a50 <chThdCreateStatic>
 8003af4:	f7ff ffc4 	bl	8003a80 <chThdWait>
 8003af8:	f899 3000 	ldrb.w	r3, [r9]
 8003afc:	3401      	adds	r4, #1
 8003afe:	2b00      	cmp	r3, #0
 8003b00:	d0f0      	beq.n	8003ae4 <bmk5_execute+0x24>
 8003b02:	4808      	ldr	r0, [pc, #32]	; (8003b24 <bmk5_execute+0x64>)
 8003b04:	f7fc ff1c 	bl	8000940 <test_print>
 8003b08:	4620      	mov	r0, r4
 8003b0a:	f7fc fe21 	bl	8000750 <test_printn>
 8003b0e:	4806      	ldr	r0, [pc, #24]	; (8003b28 <bmk5_execute+0x68>)
 8003b10:	b003      	add	sp, #12
 8003b12:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003b16:	f7fc bef3 	b.w	8000900 <test_println>
 8003b1a:	bf00      	nop
 8003b1c:	20000930 	.word	0x20000930
 8003b20:	20000bc0 	.word	0x20000bc0
 8003b24:	08005d60 	.word	0x08005d60
 8003b28:	08005e60 	.word	0x08005e60
 8003b2c:	200014f8 	.word	0x200014f8
 8003b30:	08005cf1 	.word	0x08005cf1
	...

08003b40 <test_wait_threads>:
 8003b40:	b570      	push	{r4, r5, r6, lr}
 8003b42:	4c07      	ldr	r4, [pc, #28]	; (8003b60 <test_wait_threads+0x20>)
 8003b44:	2600      	movs	r6, #0
 8003b46:	f104 0514 	add.w	r5, r4, #20
 8003b4a:	f854 0b04 	ldr.w	r0, [r4], #4
 8003b4e:	b118      	cbz	r0, 8003b58 <test_wait_threads+0x18>
 8003b50:	f7ff ff96 	bl	8003a80 <chThdWait>
 8003b54:	f844 6c04 	str.w	r6, [r4, #-4]
 8003b58:	42ac      	cmp	r4, r5
 8003b5a:	d1f6      	bne.n	8003b4a <test_wait_threads+0xa>
 8003b5c:	bd70      	pop	{r4, r5, r6, pc}
 8003b5e:	bf00      	nop
 8003b60:	200014fc 	.word	0x200014fc
	...

08003b70 <bmk8_execute>:
 8003b70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003b74:	b084      	sub	sp, #16
 8003b76:	ac04      	add	r4, sp, #16
 8003b78:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8003c48 <bmk8_execute+0xd8>
 8003b7c:	4f2d      	ldr	r7, [pc, #180]	; (8003c34 <bmk8_execute+0xc4>)
 8003b7e:	4e2e      	ldr	r6, [pc, #184]	; (8003c38 <bmk8_execute+0xc8>)
 8003b80:	4d2e      	ldr	r5, [pc, #184]	; (8003c3c <bmk8_execute+0xcc>)
 8003b82:	2300      	movs	r3, #0
 8003b84:	f844 3d04 	str.w	r3, [r4, #-4]!
 8003b88:	f7fe ff0a 	bl	80029a0 <test_wait_tick>
 8003b8c:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003b90:	689a      	ldr	r2, [r3, #8]
 8003b92:	9400      	str	r4, [sp, #0]
 8003b94:	463b      	mov	r3, r7
 8003b96:	3a01      	subs	r2, #1
 8003b98:	4630      	mov	r0, r6
 8003b9a:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003b9e:	f7fd ff57 	bl	8001a50 <chThdCreateStatic>
 8003ba2:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003ba6:	6028      	str	r0, [r5, #0]
 8003ba8:	689a      	ldr	r2, [r3, #8]
 8003baa:	9400      	str	r4, [sp, #0]
 8003bac:	463b      	mov	r3, r7
 8003bae:	3a01      	subs	r2, #1
 8003bb0:	f506 70e8 	add.w	r0, r6, #464	; 0x1d0
 8003bb4:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003bb8:	f7fd ff4a 	bl	8001a50 <chThdCreateStatic>
 8003bbc:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003bc0:	6068      	str	r0, [r5, #4]
 8003bc2:	689a      	ldr	r2, [r3, #8]
 8003bc4:	9400      	str	r4, [sp, #0]
 8003bc6:	463b      	mov	r3, r7
 8003bc8:	3a01      	subs	r2, #1
 8003bca:	f506 7068 	add.w	r0, r6, #928	; 0x3a0
 8003bce:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003bd2:	f7fd ff3d 	bl	8001a50 <chThdCreateStatic>
 8003bd6:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003bda:	60a8      	str	r0, [r5, #8]
 8003bdc:	689a      	ldr	r2, [r3, #8]
 8003bde:	9400      	str	r4, [sp, #0]
 8003be0:	463b      	mov	r3, r7
 8003be2:	3a01      	subs	r2, #1
 8003be4:	f506 60ae 	add.w	r0, r6, #1392	; 0x570
 8003be8:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003bec:	f7fd ff30 	bl	8001a50 <chThdCreateStatic>
 8003bf0:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003bf4:	60e8      	str	r0, [r5, #12]
 8003bf6:	689a      	ldr	r2, [r3, #8]
 8003bf8:	9400      	str	r4, [sp, #0]
 8003bfa:	3a01      	subs	r2, #1
 8003bfc:	463b      	mov	r3, r7
 8003bfe:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003c02:	f506 60e8 	add.w	r0, r6, #1856	; 0x740
 8003c06:	f7fd ff23 	bl	8001a50 <chThdCreateStatic>
 8003c0a:	6128      	str	r0, [r5, #16]
 8003c0c:	f242 7010 	movw	r0, #10000	; 0x2710
 8003c10:	f7fe fde6 	bl	80027e0 <chThdSleep>
 8003c14:	f7fc fdc4 	bl	80007a0 <test_terminate_threads>
 8003c18:	f7ff ff92 	bl	8003b40 <test_wait_threads>
 8003c1c:	4808      	ldr	r0, [pc, #32]	; (8003c40 <bmk8_execute+0xd0>)
 8003c1e:	f7fc fe8f 	bl	8000940 <test_print>
 8003c22:	9803      	ldr	r0, [sp, #12]
 8003c24:	f7fc fd94 	bl	8000750 <test_printn>
 8003c28:	4806      	ldr	r0, [pc, #24]	; (8003c44 <bmk8_execute+0xd4>)
 8003c2a:	f7fc fe69 	bl	8000900 <test_println>
 8003c2e:	b004      	add	sp, #16
 8003c30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003c34:	080015c1 	.word	0x080015c1
 8003c38:	20000bc0 	.word	0x20000bc0
 8003c3c:	200014fc 	.word	0x200014fc
 8003c40:	08005d60 	.word	0x08005d60
 8003c44:	08005e90 	.word	0x08005e90
 8003c48:	20000930 	.word	0x20000930
 8003c4c:	00000000 	.word	0x00000000

08003c50 <bmk7_execute>:
 8003c50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003c54:	4e3a      	ldr	r6, [pc, #232]	; (8003d40 <bmk7_execute+0xf0>)
 8003c56:	4b3b      	ldr	r3, [pc, #236]	; (8003d44 <bmk7_execute+0xf4>)
 8003c58:	69b2      	ldr	r2, [r6, #24]
 8003c5a:	483b      	ldr	r0, [pc, #236]	; (8003d48 <bmk7_execute+0xf8>)
 8003c5c:	6892      	ldr	r2, [r2, #8]
 8003c5e:	4d3b      	ldr	r5, [pc, #236]	; (8003d4c <bmk7_execute+0xfc>)
 8003c60:	f8df 810c 	ldr.w	r8, [pc, #268]	; 8003d70 <bmk7_execute+0x120>
 8003c64:	4f3a      	ldr	r7, [pc, #232]	; (8003d50 <bmk7_execute+0x100>)
 8003c66:	b082      	sub	sp, #8
 8003c68:	2400      	movs	r4, #0
 8003c6a:	3205      	adds	r2, #5
 8003c6c:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003c70:	9400      	str	r4, [sp, #0]
 8003c72:	f7fd feed 	bl	8001a50 <chThdCreateStatic>
 8003c76:	69b3      	ldr	r3, [r6, #24]
 8003c78:	6028      	str	r0, [r5, #0]
 8003c7a:	689a      	ldr	r2, [r3, #8]
 8003c7c:	4835      	ldr	r0, [pc, #212]	; (8003d54 <bmk7_execute+0x104>)
 8003c7e:	4b31      	ldr	r3, [pc, #196]	; (8003d44 <bmk7_execute+0xf4>)
 8003c80:	9400      	str	r4, [sp, #0]
 8003c82:	3204      	adds	r2, #4
 8003c84:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003c88:	f7fd fee2 	bl	8001a50 <chThdCreateStatic>
 8003c8c:	69b3      	ldr	r3, [r6, #24]
 8003c8e:	6068      	str	r0, [r5, #4]
 8003c90:	689a      	ldr	r2, [r3, #8]
 8003c92:	4831      	ldr	r0, [pc, #196]	; (8003d58 <bmk7_execute+0x108>)
 8003c94:	4b2b      	ldr	r3, [pc, #172]	; (8003d44 <bmk7_execute+0xf4>)
 8003c96:	9400      	str	r4, [sp, #0]
 8003c98:	3203      	adds	r2, #3
 8003c9a:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003c9e:	f7fd fed7 	bl	8001a50 <chThdCreateStatic>
 8003ca2:	69b3      	ldr	r3, [r6, #24]
 8003ca4:	60a8      	str	r0, [r5, #8]
 8003ca6:	689a      	ldr	r2, [r3, #8]
 8003ca8:	482c      	ldr	r0, [pc, #176]	; (8003d5c <bmk7_execute+0x10c>)
 8003caa:	4b26      	ldr	r3, [pc, #152]	; (8003d44 <bmk7_execute+0xf4>)
 8003cac:	9400      	str	r4, [sp, #0]
 8003cae:	3202      	adds	r2, #2
 8003cb0:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003cb4:	f7fd fecc 	bl	8001a50 <chThdCreateStatic>
 8003cb8:	69b3      	ldr	r3, [r6, #24]
 8003cba:	60e8      	str	r0, [r5, #12]
 8003cbc:	689a      	ldr	r2, [r3, #8]
 8003cbe:	4828      	ldr	r0, [pc, #160]	; (8003d60 <bmk7_execute+0x110>)
 8003cc0:	4b20      	ldr	r3, [pc, #128]	; (8003d44 <bmk7_execute+0xf4>)
 8003cc2:	9400      	str	r4, [sp, #0]
 8003cc4:	3201      	adds	r2, #1
 8003cc6:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003cca:	f7fd fec1 	bl	8001a50 <chThdCreateStatic>
 8003cce:	6128      	str	r0, [r5, #16]
 8003cd0:	f7fe fe66 	bl	80029a0 <test_wait_tick>
 8003cd4:	f7fd faec 	bl	80012b0 <test_start_timer.constprop.1>
 8003cd8:	4625      	mov	r5, r4
 8003cda:	2620      	movs	r6, #32
 8003cdc:	f386 8811 	msr	BASEPRI, r6
 8003ce0:	2100      	movs	r1, #0
 8003ce2:	4638      	mov	r0, r7
 8003ce4:	f7fd fa4c 	bl	8001180 <chSemResetI>
 8003ce8:	f7fd fca2 	bl	8001630 <chSchRescheduleS>
 8003cec:	f385 8811 	msr	BASEPRI, r5
 8003cf0:	f898 3000 	ldrb.w	r3, [r8]
 8003cf4:	3401      	adds	r4, #1
 8003cf6:	2b00      	cmp	r3, #0
 8003cf8:	d0f0      	beq.n	8003cdc <bmk7_execute+0x8c>
 8003cfa:	f7fc fd51 	bl	80007a0 <test_terminate_threads>
 8003cfe:	f386 8811 	msr	BASEPRI, r6
 8003d02:	2100      	movs	r1, #0
 8003d04:	4812      	ldr	r0, [pc, #72]	; (8003d50 <bmk7_execute+0x100>)
 8003d06:	f7fd fa3b 	bl	8001180 <chSemResetI>
 8003d0a:	f7fd fc91 	bl	8001630 <chSchRescheduleS>
 8003d0e:	f385 8811 	msr	BASEPRI, r5
 8003d12:	f7ff ff15 	bl	8003b40 <test_wait_threads>
 8003d16:	4813      	ldr	r0, [pc, #76]	; (8003d64 <bmk7_execute+0x114>)
 8003d18:	f7fc fe12 	bl	8000940 <test_print>
 8003d1c:	4620      	mov	r0, r4
 8003d1e:	f7fc fd17 	bl	8000750 <test_printn>
 8003d22:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8003d26:	4810      	ldr	r0, [pc, #64]	; (8003d68 <bmk7_execute+0x118>)
 8003d28:	f7fc fe0a 	bl	8000940 <test_print>
 8003d2c:	0060      	lsls	r0, r4, #1
 8003d2e:	f7fc fd0f 	bl	8000750 <test_printn>
 8003d32:	480e      	ldr	r0, [pc, #56]	; (8003d6c <bmk7_execute+0x11c>)
 8003d34:	b002      	add	sp, #8
 8003d36:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003d3a:	f7fc bde1 	b.w	8000900 <test_println>
 8003d3e:	bf00      	nop
 8003d40:	20000930 	.word	0x20000930
 8003d44:	080038b1 	.word	0x080038b1
 8003d48:	20000bc0 	.word	0x20000bc0
 8003d4c:	200014fc 	.word	0x200014fc
 8003d50:	20000bb0 	.word	0x20000bb0
 8003d54:	20000d90 	.word	0x20000d90
 8003d58:	20000f60 	.word	0x20000f60
 8003d5c:	20001130 	.word	0x20001130
 8003d60:	20001300 	.word	0x20001300
 8003d64:	08005d60 	.word	0x08005d60
 8003d68:	08005e70 	.word	0x08005e70
 8003d6c:	08005e90 	.word	0x08005e90
 8003d70:	200014f8 	.word	0x200014f8
	...

08003d80 <bmk4_execute>:
 8003d80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d84:	4a23      	ldr	r2, [pc, #140]	; (8003e14 <bmk4_execute+0x94>)
 8003d86:	4b24      	ldr	r3, [pc, #144]	; (8003e18 <bmk4_execute+0x98>)
 8003d88:	6992      	ldr	r2, [r2, #24]
 8003d8a:	4824      	ldr	r0, [pc, #144]	; (8003e1c <bmk4_execute+0x9c>)
 8003d8c:	6892      	ldr	r2, [r2, #8]
 8003d8e:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8003e2c <bmk4_execute+0xac>
 8003d92:	b082      	sub	sp, #8
 8003d94:	2500      	movs	r5, #0
 8003d96:	3201      	adds	r2, #1
 8003d98:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003d9c:	9500      	str	r5, [sp, #0]
 8003d9e:	f7fd fe57 	bl	8001a50 <chThdCreateStatic>
 8003da2:	4b1f      	ldr	r3, [pc, #124]	; (8003e20 <bmk4_execute+0xa0>)
 8003da4:	4604      	mov	r4, r0
 8003da6:	6018      	str	r0, [r3, #0]
 8003da8:	f7fe fdfa 	bl	80029a0 <test_wait_tick>
 8003dac:	f7fd fa80 	bl	80012b0 <test_start_timer.constprop.1>
 8003db0:	462e      	mov	r6, r5
 8003db2:	2720      	movs	r7, #32
 8003db4:	f387 8811 	msr	BASEPRI, r7
 8003db8:	2100      	movs	r1, #0
 8003dba:	4620      	mov	r0, r4
 8003dbc:	f7fd fd68 	bl	8001890 <chSchWakeupS>
 8003dc0:	4620      	mov	r0, r4
 8003dc2:	2100      	movs	r1, #0
 8003dc4:	f7fd fd64 	bl	8001890 <chSchWakeupS>
 8003dc8:	4620      	mov	r0, r4
 8003dca:	2100      	movs	r1, #0
 8003dcc:	f7fd fd60 	bl	8001890 <chSchWakeupS>
 8003dd0:	4620      	mov	r0, r4
 8003dd2:	2100      	movs	r1, #0
 8003dd4:	f7fd fd5c 	bl	8001890 <chSchWakeupS>
 8003dd8:	f386 8811 	msr	BASEPRI, r6
 8003ddc:	f898 3000 	ldrb.w	r3, [r8]
 8003de0:	3504      	adds	r5, #4
 8003de2:	2b00      	cmp	r3, #0
 8003de4:	d0e6      	beq.n	8003db4 <bmk4_execute+0x34>
 8003de6:	f387 8811 	msr	BASEPRI, r7
 8003dea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003dee:	4620      	mov	r0, r4
 8003df0:	f7fd fd4e 	bl	8001890 <chSchWakeupS>
 8003df4:	f386 8811 	msr	BASEPRI, r6
 8003df8:	f7ff fea2 	bl	8003b40 <test_wait_threads>
 8003dfc:	4809      	ldr	r0, [pc, #36]	; (8003e24 <bmk4_execute+0xa4>)
 8003dfe:	f7fc fd9f 	bl	8000940 <test_print>
 8003e02:	0068      	lsls	r0, r5, #1
 8003e04:	f7fc fca4 	bl	8000750 <test_printn>
 8003e08:	4807      	ldr	r0, [pc, #28]	; (8003e28 <bmk4_execute+0xa8>)
 8003e0a:	b002      	add	sp, #8
 8003e0c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003e10:	f7fc bd76 	b.w	8000900 <test_println>
 8003e14:	20000930 	.word	0x20000930
 8003e18:	08001c61 	.word	0x08001c61
 8003e1c:	20000bc0 	.word	0x20000bc0
 8003e20:	200014fc 	.word	0x200014fc
 8003e24:	08005d60 	.word	0x08005d60
 8003e28:	08005e90 	.word	0x08005e90
 8003e2c:	200014f8 	.word	0x200014f8

08003e30 <bmk3_execute>:
 8003e30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e34:	4f2c      	ldr	r7, [pc, #176]	; (8003ee8 <bmk3_execute+0xb8>)
 8003e36:	4d2d      	ldr	r5, [pc, #180]	; (8003eec <bmk3_execute+0xbc>)
 8003e38:	69ba      	ldr	r2, [r7, #24]
 8003e3a:	4b2d      	ldr	r3, [pc, #180]	; (8003ef0 <bmk3_execute+0xc0>)
 8003e3c:	6892      	ldr	r2, [r2, #8]
 8003e3e:	4c2d      	ldr	r4, [pc, #180]	; (8003ef4 <bmk3_execute+0xc4>)
 8003e40:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8003f04 <bmk3_execute+0xd4>
 8003e44:	b082      	sub	sp, #8
 8003e46:	2600      	movs	r6, #0
 8003e48:	3201      	adds	r2, #1
 8003e4a:	4628      	mov	r0, r5
 8003e4c:	9600      	str	r6, [sp, #0]
 8003e4e:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003e52:	f7fd fdfd 	bl	8001a50 <chThdCreateStatic>
 8003e56:	69bb      	ldr	r3, [r7, #24]
 8003e58:	6020      	str	r0, [r4, #0]
 8003e5a:	689a      	ldr	r2, [r3, #8]
 8003e5c:	9600      	str	r6, [sp, #0]
 8003e5e:	4643      	mov	r3, r8
 8003e60:	3a02      	subs	r2, #2
 8003e62:	f505 70e8 	add.w	r0, r5, #464	; 0x1d0
 8003e66:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003e6a:	f7fd fdf1 	bl	8001a50 <chThdCreateStatic>
 8003e6e:	69bb      	ldr	r3, [r7, #24]
 8003e70:	6060      	str	r0, [r4, #4]
 8003e72:	689a      	ldr	r2, [r3, #8]
 8003e74:	9600      	str	r6, [sp, #0]
 8003e76:	4643      	mov	r3, r8
 8003e78:	3a03      	subs	r2, #3
 8003e7a:	f505 7068 	add.w	r0, r5, #928	; 0x3a0
 8003e7e:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003e82:	f7fd fde5 	bl	8001a50 <chThdCreateStatic>
 8003e86:	69bb      	ldr	r3, [r7, #24]
 8003e88:	60a0      	str	r0, [r4, #8]
 8003e8a:	689a      	ldr	r2, [r3, #8]
 8003e8c:	9600      	str	r6, [sp, #0]
 8003e8e:	4643      	mov	r3, r8
 8003e90:	3a04      	subs	r2, #4
 8003e92:	f505 60ae 	add.w	r0, r5, #1392	; 0x570
 8003e96:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003e9a:	f7fd fdd9 	bl	8001a50 <chThdCreateStatic>
 8003e9e:	69bb      	ldr	r3, [r7, #24]
 8003ea0:	60e0      	str	r0, [r4, #12]
 8003ea2:	689a      	ldr	r2, [r3, #8]
 8003ea4:	9600      	str	r6, [sp, #0]
 8003ea6:	3a05      	subs	r2, #5
 8003ea8:	4643      	mov	r3, r8
 8003eaa:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003eae:	f505 60e8 	add.w	r0, r5, #1856	; 0x740
 8003eb2:	f7fd fdcd 	bl	8001a50 <chThdCreateStatic>
 8003eb6:	6120      	str	r0, [r4, #16]
 8003eb8:	6820      	ldr	r0, [r4, #0]
 8003eba:	f7fe ff51 	bl	8002d60 <msg_loop_test>
 8003ebe:	4604      	mov	r4, r0
 8003ec0:	f7ff fe3e 	bl	8003b40 <test_wait_threads>
 8003ec4:	480c      	ldr	r0, [pc, #48]	; (8003ef8 <bmk3_execute+0xc8>)
 8003ec6:	f7fc fd3b 	bl	8000940 <test_print>
 8003eca:	4620      	mov	r0, r4
 8003ecc:	f7fc fc40 	bl	8000750 <test_printn>
 8003ed0:	480a      	ldr	r0, [pc, #40]	; (8003efc <bmk3_execute+0xcc>)
 8003ed2:	f7fc fd35 	bl	8000940 <test_print>
 8003ed6:	0060      	lsls	r0, r4, #1
 8003ed8:	f7fc fc3a 	bl	8000750 <test_printn>
 8003edc:	4808      	ldr	r0, [pc, #32]	; (8003f00 <bmk3_execute+0xd0>)
 8003ede:	b002      	add	sp, #8
 8003ee0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003ee4:	f7fc bd0c 	b.w	8000900 <test_println>
 8003ee8:	20000930 	.word	0x20000930
 8003eec:	20000bc0 	.word	0x20000bc0
 8003ef0:	08002c61 	.word	0x08002c61
 8003ef4:	200014fc 	.word	0x200014fc
 8003ef8:	08005d60 	.word	0x08005d60
 8003efc:	08005e50 	.word	0x08005e50
 8003f00:	08005e90 	.word	0x08005e90
 8003f04:	08005cf1 	.word	0x08005cf1
	...

08003f10 <bmk2_execute>:
 8003f10:	b510      	push	{r4, lr}
 8003f12:	4a13      	ldr	r2, [pc, #76]	; (8003f60 <bmk2_execute+0x50>)
 8003f14:	4b13      	ldr	r3, [pc, #76]	; (8003f64 <bmk2_execute+0x54>)
 8003f16:	6992      	ldr	r2, [r2, #24]
 8003f18:	4813      	ldr	r0, [pc, #76]	; (8003f68 <bmk2_execute+0x58>)
 8003f1a:	6892      	ldr	r2, [r2, #8]
 8003f1c:	b082      	sub	sp, #8
 8003f1e:	2100      	movs	r1, #0
 8003f20:	3201      	adds	r2, #1
 8003f22:	9100      	str	r1, [sp, #0]
 8003f24:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003f28:	f7fd fd92 	bl	8001a50 <chThdCreateStatic>
 8003f2c:	4b0f      	ldr	r3, [pc, #60]	; (8003f6c <bmk2_execute+0x5c>)
 8003f2e:	6018      	str	r0, [r3, #0]
 8003f30:	f7fe ff16 	bl	8002d60 <msg_loop_test>
 8003f34:	4604      	mov	r4, r0
 8003f36:	f7ff fe03 	bl	8003b40 <test_wait_threads>
 8003f3a:	480d      	ldr	r0, [pc, #52]	; (8003f70 <bmk2_execute+0x60>)
 8003f3c:	f7fc fd00 	bl	8000940 <test_print>
 8003f40:	4620      	mov	r0, r4
 8003f42:	f7fc fc05 	bl	8000750 <test_printn>
 8003f46:	480b      	ldr	r0, [pc, #44]	; (8003f74 <bmk2_execute+0x64>)
 8003f48:	f7fc fcfa 	bl	8000940 <test_print>
 8003f4c:	0060      	lsls	r0, r4, #1
 8003f4e:	f7fc fbff 	bl	8000750 <test_printn>
 8003f52:	4809      	ldr	r0, [pc, #36]	; (8003f78 <bmk2_execute+0x68>)
 8003f54:	b002      	add	sp, #8
 8003f56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003f5a:	f7fc bcd1 	b.w	8000900 <test_println>
 8003f5e:	bf00      	nop
 8003f60:	20000930 	.word	0x20000930
 8003f64:	08002c61 	.word	0x08002c61
 8003f68:	20000bc0 	.word	0x20000bc0
 8003f6c:	200014fc 	.word	0x200014fc
 8003f70:	08005d60 	.word	0x08005d60
 8003f74:	08005e50 	.word	0x08005e50
 8003f78:	08005e90 	.word	0x08005e90
 8003f7c:	00000000 	.word	0x00000000

08003f80 <bmk1_execute>:
 8003f80:	b510      	push	{r4, lr}
 8003f82:	4a13      	ldr	r2, [pc, #76]	; (8003fd0 <bmk1_execute+0x50>)
 8003f84:	4b13      	ldr	r3, [pc, #76]	; (8003fd4 <bmk1_execute+0x54>)
 8003f86:	6992      	ldr	r2, [r2, #24]
 8003f88:	4813      	ldr	r0, [pc, #76]	; (8003fd8 <bmk1_execute+0x58>)
 8003f8a:	6892      	ldr	r2, [r2, #8]
 8003f8c:	b082      	sub	sp, #8
 8003f8e:	2100      	movs	r1, #0
 8003f90:	3a01      	subs	r2, #1
 8003f92:	9100      	str	r1, [sp, #0]
 8003f94:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8003f98:	f7fd fd5a 	bl	8001a50 <chThdCreateStatic>
 8003f9c:	4b0f      	ldr	r3, [pc, #60]	; (8003fdc <bmk1_execute+0x5c>)
 8003f9e:	6018      	str	r0, [r3, #0]
 8003fa0:	f7fe fede 	bl	8002d60 <msg_loop_test>
 8003fa4:	4604      	mov	r4, r0
 8003fa6:	f7ff fdcb 	bl	8003b40 <test_wait_threads>
 8003faa:	480d      	ldr	r0, [pc, #52]	; (8003fe0 <bmk1_execute+0x60>)
 8003fac:	f7fc fcc8 	bl	8000940 <test_print>
 8003fb0:	4620      	mov	r0, r4
 8003fb2:	f7fc fbcd 	bl	8000750 <test_printn>
 8003fb6:	480b      	ldr	r0, [pc, #44]	; (8003fe4 <bmk1_execute+0x64>)
 8003fb8:	f7fc fcc2 	bl	8000940 <test_print>
 8003fbc:	0060      	lsls	r0, r4, #1
 8003fbe:	f7fc fbc7 	bl	8000750 <test_printn>
 8003fc2:	4809      	ldr	r0, [pc, #36]	; (8003fe8 <bmk1_execute+0x68>)
 8003fc4:	b002      	add	sp, #8
 8003fc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003fca:	f7fc bc99 	b.w	8000900 <test_println>
 8003fce:	bf00      	nop
 8003fd0:	20000930 	.word	0x20000930
 8003fd4:	08002c61 	.word	0x08002c61
 8003fd8:	20000bc0 	.word	0x20000bc0
 8003fdc:	200014fc 	.word	0x200014fc
 8003fe0:	08005d60 	.word	0x08005d60
 8003fe4:	08005e50 	.word	0x08005e50
 8003fe8:	08005e90 	.word	0x08005e90
 8003fec:	00000000 	.word	0x00000000

08003ff0 <queues2_execute>:
 8003ff0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003ff4:	2320      	movs	r3, #32
 8003ff6:	b083      	sub	sp, #12
 8003ff8:	f383 8811 	msr	BASEPRI, r3
 8003ffc:	4d8a      	ldr	r5, [pc, #552]	; (8004228 <queues2_execute+0x238>)
 8003ffe:	e9d5 3205 	ldrd	r3, r2, [r5, #20]
 8004002:	429a      	cmp	r2, r3
 8004004:	d041      	beq.n	800408a <queues2_execute+0x9a>
 8004006:	2100      	movs	r1, #0
 8004008:	2001      	movs	r0, #1
 800400a:	f7fc fc29 	bl	8000860 <_test_assert>
 800400e:	bbb0      	cbnz	r0, 800407e <queues2_execute+0x8e>
 8004010:	f380 8811 	msr	BASEPRI, r0
 8004014:	4e84      	ldr	r6, [pc, #528]	; (8004228 <queues2_execute+0x238>)
 8004016:	2441      	movs	r4, #65	; 0x41
 8004018:	4621      	mov	r1, r4
 800401a:	3401      	adds	r4, #1
 800401c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004020:	4630      	mov	r0, r6
 8004022:	b2e4      	uxtb	r4, r4
 8004024:	f7fe fb0c 	bl	8002640 <chOQPutTimeout>
 8004028:	2c45      	cmp	r4, #69	; 0x45
 800402a:	d1f5      	bne.n	8004018 <queues2_execute+0x28>
 800402c:	2620      	movs	r6, #32
 800402e:	f386 8811 	msr	BASEPRI, r6
 8004032:	68a9      	ldr	r1, [r5, #8]
 8004034:	fab1 f181 	clz	r1, r1
 8004038:	0949      	lsrs	r1, r1, #5
 800403a:	2002      	movs	r0, #2
 800403c:	f7fc fc10 	bl	8000860 <_test_assert>
 8004040:	4607      	mov	r7, r0
 8004042:	b9e0      	cbnz	r0, 800407e <queues2_execute+0x8e>
 8004044:	f380 8811 	msr	BASEPRI, r0
 8004048:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 8004228 <queues2_execute+0x238>
 800404c:	4680      	mov	r8, r0
 800404e:	2404      	movs	r4, #4
 8004050:	f386 8811 	msr	BASEPRI, r6
 8004054:	4648      	mov	r0, r9
 8004056:	f7fc fefb 	bl	8000e50 <chOQGetI>
 800405a:	f388 8811 	msr	BASEPRI, r8
 800405e:	b2c0      	uxtb	r0, r0
 8004060:	f7fc fc16 	bl	8000890 <test_emit_token>
 8004064:	3c01      	subs	r4, #1
 8004066:	d1f3      	bne.n	8004050 <queues2_execute+0x60>
 8004068:	f386 8811 	msr	BASEPRI, r6
 800406c:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 8004070:	429a      	cmp	r2, r3
 8004072:	d029      	beq.n	80040c8 <queues2_execute+0xd8>
 8004074:	4639      	mov	r1, r7
 8004076:	2003      	movs	r0, #3
 8004078:	f7fc fbf2 	bl	8000860 <_test_assert>
 800407c:	b150      	cbz	r0, 8004094 <queues2_execute+0xa4>
 800407e:	2300      	movs	r3, #0
 8004080:	f383 8811 	msr	BASEPRI, r3
 8004084:	b003      	add	sp, #12
 8004086:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800408a:	68a9      	ldr	r1, [r5, #8]
 800408c:	3100      	adds	r1, #0
 800408e:	bf18      	it	ne
 8004090:	2101      	movne	r1, #1
 8004092:	e7b9      	b.n	8004008 <queues2_execute+0x18>
 8004094:	f380 8811 	msr	BASEPRI, r0
 8004098:	4964      	ldr	r1, [pc, #400]	; (800422c <queues2_execute+0x23c>)
 800409a:	2004      	movs	r0, #4
 800409c:	f7fc fbb8 	bl	8000810 <_test_assert_sequence>
 80040a0:	4604      	mov	r4, r0
 80040a2:	2800      	cmp	r0, #0
 80040a4:	d1ee      	bne.n	8004084 <queues2_execute+0x94>
 80040a6:	2620      	movs	r6, #32
 80040a8:	f386 8811 	msr	BASEPRI, r6
 80040ac:	485e      	ldr	r0, [pc, #376]	; (8004228 <queues2_execute+0x238>)
 80040ae:	f7fc fecf 	bl	8000e50 <chOQGetI>
 80040b2:	3003      	adds	r0, #3
 80040b4:	bf14      	ite	ne
 80040b6:	2100      	movne	r1, #0
 80040b8:	2101      	moveq	r1, #1
 80040ba:	2005      	movs	r0, #5
 80040bc:	f7fc fbd0 	bl	8000860 <_test_assert>
 80040c0:	b138      	cbz	r0, 80040d2 <queues2_execute+0xe2>
 80040c2:	f384 8811 	msr	BASEPRI, r4
 80040c6:	e7dd      	b.n	8004084 <queues2_execute+0x94>
 80040c8:	68af      	ldr	r7, [r5, #8]
 80040ca:	3700      	adds	r7, #0
 80040cc:	bf18      	it	ne
 80040ce:	2701      	movne	r7, #1
 80040d0:	e7d0      	b.n	8004074 <queues2_execute+0x84>
 80040d2:	f380 8811 	msr	BASEPRI, r0
 80040d6:	2208      	movs	r2, #8
 80040d8:	4603      	mov	r3, r0
 80040da:	4955      	ldr	r1, [pc, #340]	; (8004230 <queues2_execute+0x240>)
 80040dc:	4852      	ldr	r0, [pc, #328]	; (8004228 <queues2_execute+0x238>)
 80040de:	f7fe fa57 	bl	8002590 <chOQWriteTimeout>
 80040e2:	f1a0 0104 	sub.w	r1, r0, #4
 80040e6:	fab1 f181 	clz	r1, r1
 80040ea:	0949      	lsrs	r1, r1, #5
 80040ec:	2006      	movs	r0, #6
 80040ee:	f7fc fbb7 	bl	8000860 <_test_assert>
 80040f2:	4604      	mov	r4, r0
 80040f4:	2800      	cmp	r0, #0
 80040f6:	d1c5      	bne.n	8004084 <queues2_execute+0x94>
 80040f8:	f386 8811 	msr	BASEPRI, r6
 80040fc:	68a9      	ldr	r1, [r5, #8]
 80040fe:	fab1 f181 	clz	r1, r1
 8004102:	0949      	lsrs	r1, r1, #5
 8004104:	2007      	movs	r0, #7
 8004106:	f7fc fbab 	bl	8000860 <_test_assert>
 800410a:	4607      	mov	r7, r0
 800410c:	2800      	cmp	r0, #0
 800410e:	d1d8      	bne.n	80040c2 <queues2_execute+0xd2>
 8004110:	f380 8811 	msr	BASEPRI, r0
 8004114:	4a47      	ldr	r2, [pc, #284]	; (8004234 <queues2_execute+0x244>)
 8004116:	4b48      	ldr	r3, [pc, #288]	; (8004238 <queues2_execute+0x248>)
 8004118:	6992      	ldr	r2, [r2, #24]
 800411a:	4848      	ldr	r0, [pc, #288]	; (800423c <queues2_execute+0x24c>)
 800411c:	6892      	ldr	r2, [r2, #8]
 800411e:	9700      	str	r7, [sp, #0]
 8004120:	3201      	adds	r2, #1
 8004122:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004126:	f7fd fc93 	bl	8001a50 <chThdCreateStatic>
 800412a:	4b45      	ldr	r3, [pc, #276]	; (8004240 <queues2_execute+0x250>)
 800412c:	6018      	str	r0, [r3, #0]
 800412e:	f386 8811 	msr	BASEPRI, r6
 8004132:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 8004136:	68a9      	ldr	r1, [r5, #8]
 8004138:	1a9b      	subs	r3, r3, r2
 800413a:	1a59      	subs	r1, r3, r1
 800413c:	f1a1 0104 	sub.w	r1, r1, #4
 8004140:	fab1 f181 	clz	r1, r1
 8004144:	0949      	lsrs	r1, r1, #5
 8004146:	2008      	movs	r0, #8
 8004148:	f7fc fb8a 	bl	8000860 <_test_assert>
 800414c:	b110      	cbz	r0, 8004154 <queues2_execute+0x164>
 800414e:	f387 8811 	msr	BASEPRI, r7
 8004152:	e797      	b.n	8004084 <queues2_execute+0x94>
 8004154:	f380 8811 	msr	BASEPRI, r0
 8004158:	f7ff fcf2 	bl	8003b40 <test_wait_threads>
 800415c:	f386 8811 	msr	BASEPRI, r6
 8004160:	e9d5 1203 	ldrd	r1, r2, [r5, #12]
 8004164:	682b      	ldr	r3, [r5, #0]
 8004166:	61a9      	str	r1, [r5, #24]
 8004168:	1a52      	subs	r2, r2, r1
 800416a:	42ab      	cmp	r3, r5
 800416c:	6169      	str	r1, [r5, #20]
 800416e:	60aa      	str	r2, [r5, #8]
 8004170:	d00b      	beq.n	800418a <queues2_execute+0x19a>
 8004172:	f06f 0401 	mvn.w	r4, #1
 8004176:	681a      	ldr	r2, [r3, #0]
 8004178:	602a      	str	r2, [r5, #0]
 800417a:	6055      	str	r5, [r2, #4]
 800417c:	4618      	mov	r0, r3
 800417e:	621c      	str	r4, [r3, #32]
 8004180:	f7fc fe0e 	bl	8000da0 <chSchReadyI>
 8004184:	682b      	ldr	r3, [r5, #0]
 8004186:	42ab      	cmp	r3, r5
 8004188:	d1f5      	bne.n	8004176 <queues2_execute+0x186>
 800418a:	2400      	movs	r4, #0
 800418c:	f384 8811 	msr	BASEPRI, r4
 8004190:	2620      	movs	r6, #32
 8004192:	f386 8811 	msr	BASEPRI, r6
 8004196:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 800419a:	68a9      	ldr	r1, [r5, #8]
 800419c:	1a9b      	subs	r3, r3, r2
 800419e:	1a5f      	subs	r7, r3, r1
 80041a0:	4279      	negs	r1, r7
 80041a2:	4179      	adcs	r1, r7
 80041a4:	2009      	movs	r0, #9
 80041a6:	f7fc fb5b 	bl	8000860 <_test_assert>
 80041aa:	4603      	mov	r3, r0
 80041ac:	2800      	cmp	r0, #0
 80041ae:	d188      	bne.n	80040c2 <queues2_execute+0xd2>
 80041b0:	f380 8811 	msr	BASEPRI, r0
 80041b4:	2202      	movs	r2, #2
 80041b6:	491e      	ldr	r1, [pc, #120]	; (8004230 <queues2_execute+0x240>)
 80041b8:	481b      	ldr	r0, [pc, #108]	; (8004228 <queues2_execute+0x238>)
 80041ba:	f7fe f9e9 	bl	8002590 <chOQWriteTimeout>
 80041be:	3802      	subs	r0, #2
 80041c0:	4241      	negs	r1, r0
 80041c2:	4141      	adcs	r1, r0
 80041c4:	200a      	movs	r0, #10
 80041c6:	f7fc fb4b 	bl	8000860 <_test_assert>
 80041ca:	4603      	mov	r3, r0
 80041cc:	2800      	cmp	r0, #0
 80041ce:	f47f af59 	bne.w	8004084 <queues2_execute+0x94>
 80041d2:	2202      	movs	r2, #2
 80041d4:	4916      	ldr	r1, [pc, #88]	; (8004230 <queues2_execute+0x240>)
 80041d6:	4814      	ldr	r0, [pc, #80]	; (8004228 <queues2_execute+0x238>)
 80041d8:	f7fe f9da 	bl	8002590 <chOQWriteTimeout>
 80041dc:	1e82      	subs	r2, r0, #2
 80041de:	4251      	negs	r1, r2
 80041e0:	4151      	adcs	r1, r2
 80041e2:	200b      	movs	r0, #11
 80041e4:	f7fc fb3c 	bl	8000860 <_test_assert>
 80041e8:	4604      	mov	r4, r0
 80041ea:	2800      	cmp	r0, #0
 80041ec:	f47f af4a 	bne.w	8004084 <queues2_execute+0x94>
 80041f0:	f386 8811 	msr	BASEPRI, r6
 80041f4:	68a9      	ldr	r1, [r5, #8]
 80041f6:	fab1 f181 	clz	r1, r1
 80041fa:	0949      	lsrs	r1, r1, #5
 80041fc:	200c      	movs	r0, #12
 80041fe:	f7fc fb2f 	bl	8000860 <_test_assert>
 8004202:	4601      	mov	r1, r0
 8004204:	2800      	cmp	r0, #0
 8004206:	f47f af5c 	bne.w	80040c2 <queues2_execute+0xd2>
 800420a:	f380 8811 	msr	BASEPRI, r0
 800420e:	220a      	movs	r2, #10
 8004210:	4805      	ldr	r0, [pc, #20]	; (8004228 <queues2_execute+0x238>)
 8004212:	f7fe fa15 	bl	8002640 <chOQPutTimeout>
 8004216:	1c43      	adds	r3, r0, #1
 8004218:	4259      	negs	r1, r3
 800421a:	4159      	adcs	r1, r3
 800421c:	200d      	movs	r0, #13
 800421e:	b003      	add	sp, #12
 8004220:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004224:	f7fc bb1c 	b.w	8000860 <_test_assert>
 8004228:	20000888 	.word	0x20000888
 800422c:	080062c0 	.word	0x080062c0
 8004230:	20000d90 	.word	0x20000d90
 8004234:	20000930 	.word	0x20000930
 8004238:	08002691 	.word	0x08002691
 800423c:	20000bc0 	.word	0x20000bc0
 8004240:	200014fc 	.word	0x200014fc
	...

08004250 <queues1_execute>:
 8004250:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004252:	2620      	movs	r6, #32
 8004254:	b083      	sub	sp, #12
 8004256:	f386 8811 	msr	BASEPRI, r6
 800425a:	4c9f      	ldr	r4, [pc, #636]	; (80044d8 <queues1_execute+0x288>)
 800425c:	68a1      	ldr	r1, [r4, #8]
 800425e:	fab1 f181 	clz	r1, r1
 8004262:	0949      	lsrs	r1, r1, #5
 8004264:	2001      	movs	r0, #1
 8004266:	f7fc fafb 	bl	8000860 <_test_assert>
 800426a:	bb10      	cbnz	r0, 80042b2 <queues1_execute+0x62>
 800426c:	4605      	mov	r5, r0
 800426e:	f380 8811 	msr	BASEPRI, r0
 8004272:	f386 8811 	msr	BASEPRI, r6
 8004276:	2141      	movs	r1, #65	; 0x41
 8004278:	4620      	mov	r0, r4
 800427a:	f7fc fdc1 	bl	8000e00 <chIQPutI>
 800427e:	4620      	mov	r0, r4
 8004280:	2142      	movs	r1, #66	; 0x42
 8004282:	f7fc fdbd 	bl	8000e00 <chIQPutI>
 8004286:	4620      	mov	r0, r4
 8004288:	2143      	movs	r1, #67	; 0x43
 800428a:	f7fc fdb9 	bl	8000e00 <chIQPutI>
 800428e:	4620      	mov	r0, r4
 8004290:	2144      	movs	r1, #68	; 0x44
 8004292:	f7fc fdb5 	bl	8000e00 <chIQPutI>
 8004296:	f385 8811 	msr	BASEPRI, r5
 800429a:	f386 8811 	msr	BASEPRI, r6
 800429e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 80042a2:	429a      	cmp	r2, r3
 80042a4:	d038      	beq.n	8004318 <queues1_execute+0xc8>
 80042a6:	4629      	mov	r1, r5
 80042a8:	2002      	movs	r0, #2
 80042aa:	f7fc fad9 	bl	8000860 <_test_assert>
 80042ae:	4605      	mov	r5, r0
 80042b0:	b120      	cbz	r0, 80042bc <queues1_execute+0x6c>
 80042b2:	2300      	movs	r3, #0
 80042b4:	f383 8811 	msr	BASEPRI, r3
 80042b8:	b003      	add	sp, #12
 80042ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80042bc:	f380 8811 	msr	BASEPRI, r0
 80042c0:	2320      	movs	r3, #32
 80042c2:	f383 8811 	msr	BASEPRI, r3
 80042c6:	4884      	ldr	r0, [pc, #528]	; (80044d8 <queues1_execute+0x288>)
 80042c8:	4629      	mov	r1, r5
 80042ca:	f7fc fd99 	bl	8000e00 <chIQPutI>
 80042ce:	3004      	adds	r0, #4
 80042d0:	bf14      	ite	ne
 80042d2:	2100      	movne	r1, #0
 80042d4:	2101      	moveq	r1, #1
 80042d6:	2003      	movs	r0, #3
 80042d8:	f7fc fac2 	bl	8000860 <_test_assert>
 80042dc:	b9c0      	cbnz	r0, 8004310 <queues1_execute+0xc0>
 80042de:	f380 8811 	msr	BASEPRI, r0
 80042e2:	4e7d      	ldr	r6, [pc, #500]	; (80044d8 <queues1_execute+0x288>)
 80042e4:	2504      	movs	r5, #4
 80042e6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80042ea:	4630      	mov	r0, r6
 80042ec:	f7fe fa38 	bl	8002760 <chIQGetTimeout>
 80042f0:	b2c0      	uxtb	r0, r0
 80042f2:	f7fc facd 	bl	8000890 <test_emit_token>
 80042f6:	3d01      	subs	r5, #1
 80042f8:	d1f5      	bne.n	80042e6 <queues1_execute+0x96>
 80042fa:	2620      	movs	r6, #32
 80042fc:	f386 8811 	msr	BASEPRI, r6
 8004300:	68a1      	ldr	r1, [r4, #8]
 8004302:	fab1 f181 	clz	r1, r1
 8004306:	0949      	lsrs	r1, r1, #5
 8004308:	2004      	movs	r0, #4
 800430a:	f7fc faa9 	bl	8000860 <_test_assert>
 800430e:	b178      	cbz	r0, 8004330 <queues1_execute+0xe0>
 8004310:	f385 8811 	msr	BASEPRI, r5
 8004314:	b003      	add	sp, #12
 8004316:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004318:	68a5      	ldr	r5, [r4, #8]
 800431a:	3500      	adds	r5, #0
 800431c:	bf18      	it	ne
 800431e:	2501      	movne	r5, #1
 8004320:	4629      	mov	r1, r5
 8004322:	2002      	movs	r0, #2
 8004324:	f7fc fa9c 	bl	8000860 <_test_assert>
 8004328:	4605      	mov	r5, r0
 800432a:	2800      	cmp	r0, #0
 800432c:	d1c1      	bne.n	80042b2 <queues1_execute+0x62>
 800432e:	e7c5      	b.n	80042bc <queues1_execute+0x6c>
 8004330:	f385 8811 	msr	BASEPRI, r5
 8004334:	4969      	ldr	r1, [pc, #420]	; (80044dc <queues1_execute+0x28c>)
 8004336:	2005      	movs	r0, #5
 8004338:	f7fc fa6a 	bl	8000810 <_test_assert_sequence>
 800433c:	2800      	cmp	r0, #0
 800433e:	d1bb      	bne.n	80042b8 <queues1_execute+0x68>
 8004340:	f386 8811 	msr	BASEPRI, r6
 8004344:	2141      	movs	r1, #65	; 0x41
 8004346:	4864      	ldr	r0, [pc, #400]	; (80044d8 <queues1_execute+0x288>)
 8004348:	f7fc fd5a 	bl	8000e00 <chIQPutI>
 800434c:	2142      	movs	r1, #66	; 0x42
 800434e:	4862      	ldr	r0, [pc, #392]	; (80044d8 <queues1_execute+0x288>)
 8004350:	f7fc fd56 	bl	8000e00 <chIQPutI>
 8004354:	2143      	movs	r1, #67	; 0x43
 8004356:	4860      	ldr	r0, [pc, #384]	; (80044d8 <queues1_execute+0x288>)
 8004358:	f7fc fd52 	bl	8000e00 <chIQPutI>
 800435c:	2144      	movs	r1, #68	; 0x44
 800435e:	485e      	ldr	r0, [pc, #376]	; (80044d8 <queues1_execute+0x288>)
 8004360:	f7fc fd4e 	bl	8000e00 <chIQPutI>
 8004364:	f385 8811 	msr	BASEPRI, r5
 8004368:	495d      	ldr	r1, [pc, #372]	; (80044e0 <queues1_execute+0x290>)
 800436a:	485b      	ldr	r0, [pc, #364]	; (80044d8 <queues1_execute+0x288>)
 800436c:	2208      	movs	r2, #8
 800436e:	462b      	mov	r3, r5
 8004370:	f7fe f9a6 	bl	80026c0 <chIQReadTimeout>
 8004374:	f1a0 0104 	sub.w	r1, r0, #4
 8004378:	fab1 f181 	clz	r1, r1
 800437c:	0949      	lsrs	r1, r1, #5
 800437e:	2006      	movs	r0, #6
 8004380:	f7fc fa6e 	bl	8000860 <_test_assert>
 8004384:	2800      	cmp	r0, #0
 8004386:	d197      	bne.n	80042b8 <queues1_execute+0x68>
 8004388:	f386 8811 	msr	BASEPRI, r6
 800438c:	68a1      	ldr	r1, [r4, #8]
 800438e:	fab1 f181 	clz	r1, r1
 8004392:	0949      	lsrs	r1, r1, #5
 8004394:	2007      	movs	r0, #7
 8004396:	f7fc fa63 	bl	8000860 <_test_assert>
 800439a:	2800      	cmp	r0, #0
 800439c:	d1b8      	bne.n	8004310 <queues1_execute+0xc0>
 800439e:	f385 8811 	msr	BASEPRI, r5
 80043a2:	f386 8811 	msr	BASEPRI, r6
 80043a6:	2141      	movs	r1, #65	; 0x41
 80043a8:	484b      	ldr	r0, [pc, #300]	; (80044d8 <queues1_execute+0x288>)
 80043aa:	f7fc fd29 	bl	8000e00 <chIQPutI>
 80043ae:	2142      	movs	r1, #66	; 0x42
 80043b0:	4849      	ldr	r0, [pc, #292]	; (80044d8 <queues1_execute+0x288>)
 80043b2:	f7fc fd25 	bl	8000e00 <chIQPutI>
 80043b6:	2143      	movs	r1, #67	; 0x43
 80043b8:	4847      	ldr	r0, [pc, #284]	; (80044d8 <queues1_execute+0x288>)
 80043ba:	f7fc fd21 	bl	8000e00 <chIQPutI>
 80043be:	2144      	movs	r1, #68	; 0x44
 80043c0:	4845      	ldr	r0, [pc, #276]	; (80044d8 <queues1_execute+0x288>)
 80043c2:	f7fc fd1d 	bl	8000e00 <chIQPutI>
 80043c6:	f385 8811 	msr	BASEPRI, r5
 80043ca:	4945      	ldr	r1, [pc, #276]	; (80044e0 <queues1_execute+0x290>)
 80043cc:	4842      	ldr	r0, [pc, #264]	; (80044d8 <queues1_execute+0x288>)
 80043ce:	2202      	movs	r2, #2
 80043d0:	462b      	mov	r3, r5
 80043d2:	f7fe f975 	bl	80026c0 <chIQReadTimeout>
 80043d6:	f1a0 0102 	sub.w	r1, r0, #2
 80043da:	fab1 f181 	clz	r1, r1
 80043de:	0949      	lsrs	r1, r1, #5
 80043e0:	2008      	movs	r0, #8
 80043e2:	f7fc fa3d 	bl	8000860 <_test_assert>
 80043e6:	2800      	cmp	r0, #0
 80043e8:	f47f af66 	bne.w	80042b8 <queues1_execute+0x68>
 80043ec:	493c      	ldr	r1, [pc, #240]	; (80044e0 <queues1_execute+0x290>)
 80043ee:	483a      	ldr	r0, [pc, #232]	; (80044d8 <queues1_execute+0x288>)
 80043f0:	462b      	mov	r3, r5
 80043f2:	2202      	movs	r2, #2
 80043f4:	f7fe f964 	bl	80026c0 <chIQReadTimeout>
 80043f8:	f1a0 0102 	sub.w	r1, r0, #2
 80043fc:	fab1 f181 	clz	r1, r1
 8004400:	0949      	lsrs	r1, r1, #5
 8004402:	2009      	movs	r0, #9
 8004404:	f7fc fa2c 	bl	8000860 <_test_assert>
 8004408:	2800      	cmp	r0, #0
 800440a:	f47f af55 	bne.w	80042b8 <queues1_execute+0x68>
 800440e:	f386 8811 	msr	BASEPRI, r6
 8004412:	68a1      	ldr	r1, [r4, #8]
 8004414:	fab1 f181 	clz	r1, r1
 8004418:	0949      	lsrs	r1, r1, #5
 800441a:	200a      	movs	r0, #10
 800441c:	f7fc fa20 	bl	8000860 <_test_assert>
 8004420:	2800      	cmp	r0, #0
 8004422:	f47f af75 	bne.w	8004310 <queues1_execute+0xc0>
 8004426:	f385 8811 	msr	BASEPRI, r5
 800442a:	f386 8811 	msr	BASEPRI, r6
 800442e:	482a      	ldr	r0, [pc, #168]	; (80044d8 <queues1_execute+0x288>)
 8004430:	4629      	mov	r1, r5
 8004432:	f7fc fce5 	bl	8000e00 <chIQPutI>
 8004436:	6823      	ldr	r3, [r4, #0]
 8004438:	68e2      	ldr	r2, [r4, #12]
 800443a:	60a5      	str	r5, [r4, #8]
 800443c:	42a3      	cmp	r3, r4
 800443e:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8004442:	d00b      	beq.n	800445c <queues1_execute+0x20c>
 8004444:	f06f 0501 	mvn.w	r5, #1
 8004448:	681a      	ldr	r2, [r3, #0]
 800444a:	6022      	str	r2, [r4, #0]
 800444c:	6054      	str	r4, [r2, #4]
 800444e:	4618      	mov	r0, r3
 8004450:	621d      	str	r5, [r3, #32]
 8004452:	f7fc fca5 	bl	8000da0 <chSchReadyI>
 8004456:	6823      	ldr	r3, [r4, #0]
 8004458:	42a3      	cmp	r3, r4
 800445a:	d1f5      	bne.n	8004448 <queues1_execute+0x1f8>
 800445c:	2700      	movs	r7, #0
 800445e:	f387 8811 	msr	BASEPRI, r7
 8004462:	2620      	movs	r6, #32
 8004464:	f386 8811 	msr	BASEPRI, r6
 8004468:	68a1      	ldr	r1, [r4, #8]
 800446a:	fab1 f181 	clz	r1, r1
 800446e:	0949      	lsrs	r1, r1, #5
 8004470:	200b      	movs	r0, #11
 8004472:	f7fc f9f5 	bl	8000860 <_test_assert>
 8004476:	4605      	mov	r5, r0
 8004478:	b110      	cbz	r0, 8004480 <queues1_execute+0x230>
 800447a:	f387 8811 	msr	BASEPRI, r7
 800447e:	e71b      	b.n	80042b8 <queues1_execute+0x68>
 8004480:	f380 8811 	msr	BASEPRI, r0
 8004484:	4a17      	ldr	r2, [pc, #92]	; (80044e4 <queues1_execute+0x294>)
 8004486:	4b18      	ldr	r3, [pc, #96]	; (80044e8 <queues1_execute+0x298>)
 8004488:	6992      	ldr	r2, [r2, #24]
 800448a:	4818      	ldr	r0, [pc, #96]	; (80044ec <queues1_execute+0x29c>)
 800448c:	6892      	ldr	r2, [r2, #8]
 800448e:	9500      	str	r5, [sp, #0]
 8004490:	3201      	adds	r2, #1
 8004492:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004496:	f7fd fadb 	bl	8001a50 <chThdCreateStatic>
 800449a:	4b15      	ldr	r3, [pc, #84]	; (80044f0 <queues1_execute+0x2a0>)
 800449c:	6018      	str	r0, [r3, #0]
 800449e:	f386 8811 	msr	BASEPRI, r6
 80044a2:	68a1      	ldr	r1, [r4, #8]
 80044a4:	fab1 f181 	clz	r1, r1
 80044a8:	0949      	lsrs	r1, r1, #5
 80044aa:	200c      	movs	r0, #12
 80044ac:	f7fc f9d8 	bl	8000860 <_test_assert>
 80044b0:	2800      	cmp	r0, #0
 80044b2:	f47f af2d 	bne.w	8004310 <queues1_execute+0xc0>
 80044b6:	f380 8811 	msr	BASEPRI, r0
 80044ba:	f7ff fb41 	bl	8003b40 <test_wait_threads>
 80044be:	210a      	movs	r1, #10
 80044c0:	4805      	ldr	r0, [pc, #20]	; (80044d8 <queues1_execute+0x288>)
 80044c2:	f7fe f94d 	bl	8002760 <chIQGetTimeout>
 80044c6:	1c43      	adds	r3, r0, #1
 80044c8:	4259      	negs	r1, r3
 80044ca:	4159      	adcs	r1, r3
 80044cc:	200d      	movs	r0, #13
 80044ce:	b003      	add	sp, #12
 80044d0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80044d4:	f7fc b9c4 	b.w	8000860 <_test_assert>
 80044d8:	20000810 	.word	0x20000810
 80044dc:	080062c0 	.word	0x080062c0
 80044e0:	20000d90 	.word	0x20000d90
 80044e4:	20000930 	.word	0x20000930
 80044e8:	080027b1 	.word	0x080027b1
 80044ec:	20000bc0 	.word	0x20000bc0
 80044f0:	200014fc 	.word	0x200014fc
	...

08004500 <dyn2_execute>:
 8004500:	4a31      	ldr	r2, [pc, #196]	; (80045c8 <dyn2_execute+0xc8>)
 8004502:	6991      	ldr	r1, [r2, #24]
 8004504:	4a31      	ldr	r2, [pc, #196]	; (80045cc <dyn2_execute+0xcc>)
 8004506:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004508:	4b31      	ldr	r3, [pc, #196]	; (80045d0 <dyn2_execute+0xd0>)
 800450a:	688d      	ldr	r5, [r1, #8]
 800450c:	4931      	ldr	r1, [pc, #196]	; (80045d4 <dyn2_execute+0xd4>)
 800450e:	f103 070c 	add.w	r7, r3, #12
 8004512:	2620      	movs	r6, #32
 8004514:	2400      	movs	r4, #0
 8004516:	f386 8811 	msr	BASEPRI, r6
 800451a:	6808      	ldr	r0, [r1, #0]
 800451c:	6010      	str	r0, [r2, #0]
 800451e:	600a      	str	r2, [r1, #0]
 8004520:	f384 8811 	msr	BASEPRI, r4
 8004524:	429f      	cmp	r7, r3
 8004526:	d002      	beq.n	800452e <dyn2_execute+0x2e>
 8004528:	f853 2b04 	ldr.w	r2, [r3], #4
 800452c:	e7f3      	b.n	8004516 <dyn2_execute+0x16>
 800452e:	492a      	ldr	r1, [pc, #168]	; (80045d8 <dyn2_execute+0xd8>)
 8004530:	4c2a      	ldr	r4, [pc, #168]	; (80045dc <dyn2_execute+0xdc>)
 8004532:	1e68      	subs	r0, r5, #1
 8004534:	f7fd f9dc 	bl	80018f0 <chThdCreateFromMemoryPool.constprop.52>
 8004538:	4929      	ldr	r1, [pc, #164]	; (80045e0 <dyn2_execute+0xe0>)
 800453a:	6020      	str	r0, [r4, #0]
 800453c:	1ea8      	subs	r0, r5, #2
 800453e:	f7fd f9d7 	bl	80018f0 <chThdCreateFromMemoryPool.constprop.52>
 8004542:	4928      	ldr	r1, [pc, #160]	; (80045e4 <dyn2_execute+0xe4>)
 8004544:	6060      	str	r0, [r4, #4]
 8004546:	1ee8      	subs	r0, r5, #3
 8004548:	f7fd f9d2 	bl	80018f0 <chThdCreateFromMemoryPool.constprop.52>
 800454c:	4926      	ldr	r1, [pc, #152]	; (80045e8 <dyn2_execute+0xe8>)
 800454e:	60a0      	str	r0, [r4, #8]
 8004550:	1f28      	subs	r0, r5, #4
 8004552:	f7fd f9cd 	bl	80018f0 <chThdCreateFromMemoryPool.constprop.52>
 8004556:	4925      	ldr	r1, [pc, #148]	; (80045ec <dyn2_execute+0xec>)
 8004558:	60e0      	str	r0, [r4, #12]
 800455a:	1f68      	subs	r0, r5, #5
 800455c:	f7fd f9c8 	bl	80018f0 <chThdCreateFromMemoryPool.constprop.52>
 8004560:	6821      	ldr	r1, [r4, #0]
 8004562:	6120      	str	r0, [r4, #16]
 8004564:	b141      	cbz	r1, 8004578 <dyn2_execute+0x78>
 8004566:	6861      	ldr	r1, [r4, #4]
 8004568:	b131      	cbz	r1, 8004578 <dyn2_execute+0x78>
 800456a:	68a1      	ldr	r1, [r4, #8]
 800456c:	b121      	cbz	r1, 8004578 <dyn2_execute+0x78>
 800456e:	68e1      	ldr	r1, [r4, #12]
 8004570:	b111      	cbz	r1, 8004578 <dyn2_execute+0x78>
 8004572:	fab0 f180 	clz	r1, r0
 8004576:	0949      	lsrs	r1, r1, #5
 8004578:	2001      	movs	r0, #1
 800457a:	f7fc f971 	bl	8000860 <_test_assert>
 800457e:	b100      	cbz	r0, 8004582 <dyn2_execute+0x82>
 8004580:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004582:	f7ff fadd 	bl	8003b40 <test_wait_threads>
 8004586:	491a      	ldr	r1, [pc, #104]	; (80045f0 <dyn2_execute+0xf0>)
 8004588:	2002      	movs	r0, #2
 800458a:	f7fc f941 	bl	8000810 <_test_assert_sequence>
 800458e:	2800      	cmp	r0, #0
 8004590:	d1f6      	bne.n	8004580 <dyn2_execute+0x80>
 8004592:	4d10      	ldr	r5, [pc, #64]	; (80045d4 <dyn2_execute+0xd4>)
 8004594:	2404      	movs	r4, #4
 8004596:	4628      	mov	r0, r5
 8004598:	f7fc fa8a 	bl	8000ab0 <chPoolAlloc>
 800459c:	1c01      	adds	r1, r0, #0
 800459e:	bf18      	it	ne
 80045a0:	2101      	movne	r1, #1
 80045a2:	2003      	movs	r0, #3
 80045a4:	f7fc f95c 	bl	8000860 <_test_assert>
 80045a8:	2800      	cmp	r0, #0
 80045aa:	d1e9      	bne.n	8004580 <dyn2_execute+0x80>
 80045ac:	3c01      	subs	r4, #1
 80045ae:	d1f2      	bne.n	8004596 <dyn2_execute+0x96>
 80045b0:	4808      	ldr	r0, [pc, #32]	; (80045d4 <dyn2_execute+0xd4>)
 80045b2:	f7fc fa7d 	bl	8000ab0 <chPoolAlloc>
 80045b6:	fab0 f180 	clz	r1, r0
 80045ba:	0949      	lsrs	r1, r1, #5
 80045bc:	2004      	movs	r0, #4
 80045be:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80045c2:	f7fc b94d 	b.w	8000860 <_test_assert>
 80045c6:	bf00      	nop
 80045c8:	20000930 	.word	0x20000930
 80045cc:	20000bc0 	.word	0x20000bc0
 80045d0:	08006a64 	.word	0x08006a64
 80045d4:	20000b90 	.word	0x20000b90
 80045d8:	08005ef0 	.word	0x08005ef0
 80045dc:	200014fc 	.word	0x200014fc
 80045e0:	08005ee0 	.word	0x08005ee0
 80045e4:	08005ee4 	.word	0x08005ee4
 80045e8:	08005ee8 	.word	0x08005ee8
 80045ec:	08006144 	.word	0x08006144
 80045f0:	080062c0 	.word	0x080062c0
	...

08004600 <dyn1_execute>:
 8004600:	b570      	push	{r4, r5, r6, lr}
 8004602:	4b2c      	ldr	r3, [pc, #176]	; (80046b4 <dyn1_execute+0xb4>)
 8004604:	482c      	ldr	r0, [pc, #176]	; (80046b8 <dyn1_execute+0xb8>)
 8004606:	699b      	ldr	r3, [r3, #24]
 8004608:	4c2c      	ldr	r4, [pc, #176]	; (80046bc <dyn1_execute+0xbc>)
 800460a:	689d      	ldr	r5, [r3, #8]
 800460c:	b082      	sub	sp, #8
 800460e:	4669      	mov	r1, sp
 8004610:	f7fe fdbe 	bl	8003190 <chHeapStatus>
 8004614:	492a      	ldr	r1, [pc, #168]	; (80046c0 <dyn1_execute+0xc0>)
 8004616:	1e68      	subs	r0, r5, #1
 8004618:	f7fe fee2 	bl	80033e0 <chThdCreateFromHeap.constprop.53>
 800461c:	4929      	ldr	r1, [pc, #164]	; (80046c4 <dyn1_execute+0xc4>)
 800461e:	6020      	str	r0, [r4, #0]
 8004620:	1ea8      	subs	r0, r5, #2
 8004622:	f7fe fedd 	bl	80033e0 <chThdCreateFromHeap.constprop.53>
 8004626:	a901      	add	r1, sp, #4
 8004628:	6060      	str	r0, [r4, #4]
 800462a:	4823      	ldr	r0, [pc, #140]	; (80046b8 <dyn1_execute+0xb8>)
 800462c:	f7fe fdb0 	bl	8003190 <chHeapStatus>
 8004630:	9901      	ldr	r1, [sp, #4]
 8004632:	4821      	ldr	r0, [pc, #132]	; (80046b8 <dyn1_execute+0xb8>)
 8004634:	f7fe fe8c 	bl	8003350 <chHeapAlloc>
 8004638:	4923      	ldr	r1, [pc, #140]	; (80046c8 <dyn1_execute+0xc8>)
 800463a:	4606      	mov	r6, r0
 800463c:	1ee8      	subs	r0, r5, #3
 800463e:	f7fe fecf 	bl	80033e0 <chThdCreateFromHeap.constprop.53>
 8004642:	60a0      	str	r0, [r4, #8]
 8004644:	4630      	mov	r0, r6
 8004646:	f7fe fdcb 	bl	80031e0 <chHeapFree>
 800464a:	6821      	ldr	r1, [r4, #0]
 800464c:	b121      	cbz	r1, 8004658 <dyn1_execute+0x58>
 800464e:	6861      	ldr	r1, [r4, #4]
 8004650:	b111      	cbz	r1, 8004658 <dyn1_execute+0x58>
 8004652:	68a1      	ldr	r1, [r4, #8]
 8004654:	b331      	cbz	r1, 80046a4 <dyn1_execute+0xa4>
 8004656:	2100      	movs	r1, #0
 8004658:	2001      	movs	r0, #1
 800465a:	f7fc f901 	bl	8000860 <_test_assert>
 800465e:	b108      	cbz	r0, 8004664 <dyn1_execute+0x64>
 8004660:	b002      	add	sp, #8
 8004662:	bd70      	pop	{r4, r5, r6, pc}
 8004664:	f7ff fa6c 	bl	8003b40 <test_wait_threads>
 8004668:	4918      	ldr	r1, [pc, #96]	; (80046cc <dyn1_execute+0xcc>)
 800466a:	2002      	movs	r0, #2
 800466c:	f7fc f8d0 	bl	8000810 <_test_assert_sequence>
 8004670:	2800      	cmp	r0, #0
 8004672:	d1f5      	bne.n	8004660 <dyn1_execute+0x60>
 8004674:	a901      	add	r1, sp, #4
 8004676:	4810      	ldr	r0, [pc, #64]	; (80046b8 <dyn1_execute+0xb8>)
 8004678:	f7fe fd8a 	bl	8003190 <chHeapStatus>
 800467c:	f1a0 0101 	sub.w	r1, r0, #1
 8004680:	fab1 f181 	clz	r1, r1
 8004684:	0949      	lsrs	r1, r1, #5
 8004686:	2003      	movs	r0, #3
 8004688:	f7fc f8ea 	bl	8000860 <_test_assert>
 800468c:	2800      	cmp	r0, #0
 800468e:	d1e7      	bne.n	8004660 <dyn1_execute+0x60>
 8004690:	e9dd 3100 	ldrd	r3, r1, [sp]
 8004694:	1ac9      	subs	r1, r1, r3
 8004696:	fab1 f181 	clz	r1, r1
 800469a:	0949      	lsrs	r1, r1, #5
 800469c:	2004      	movs	r0, #4
 800469e:	f7fc f8df 	bl	8000860 <_test_assert>
 80046a2:	e7dd      	b.n	8004660 <dyn1_execute+0x60>
 80046a4:	68e3      	ldr	r3, [r4, #12]
 80046a6:	2b00      	cmp	r3, #0
 80046a8:	d1d6      	bne.n	8004658 <dyn1_execute+0x58>
 80046aa:	6921      	ldr	r1, [r4, #16]
 80046ac:	fab1 f181 	clz	r1, r1
 80046b0:	0949      	lsrs	r1, r1, #5
 80046b2:	e7d1      	b.n	8004658 <dyn1_execute+0x58>
 80046b4:	20000930 	.word	0x20000930
 80046b8:	20000b38 	.word	0x20000b38
 80046bc:	200014fc 	.word	0x200014fc
 80046c0:	08005ef0 	.word	0x08005ef0
 80046c4:	08005ee0 	.word	0x08005ee0
 80046c8:	08005ee4 	.word	0x08005ee4
 80046cc:	08005ed0 	.word	0x08005ed0

080046d0 <evt2_execute>:
 80046d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80046d4:	2520      	movs	r5, #32
 80046d6:	b08f      	sub	sp, #60	; 0x3c
 80046d8:	f385 8811 	msr	BASEPRI, r5
 80046dc:	4ca9      	ldr	r4, [pc, #676]	; (8004984 <evt2_execute+0x2b4>)
 80046de:	69a2      	ldr	r2, [r4, #24]
 80046e0:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80046e2:	f043 0307 	orr.w	r3, r3, #7
 80046e6:	6353      	str	r3, [r2, #52]	; 0x34
 80046e8:	2300      	movs	r3, #0
 80046ea:	f383 8811 	msr	BASEPRI, r3
 80046ee:	f7fd fa7f 	bl	8001bf0 <chEvtWaitOne.constprop.32>
 80046f2:	f1a0 0101 	sub.w	r1, r0, #1
 80046f6:	fab1 f181 	clz	r1, r1
 80046fa:	0949      	lsrs	r1, r1, #5
 80046fc:	2001      	movs	r0, #1
 80046fe:	f7fc f8af 	bl	8000860 <_test_assert>
 8004702:	b110      	cbz	r0, 800470a <evt2_execute+0x3a>
 8004704:	b00f      	add	sp, #60	; 0x3c
 8004706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800470a:	f7fd fa71 	bl	8001bf0 <chEvtWaitOne.constprop.32>
 800470e:	f1a0 0102 	sub.w	r1, r0, #2
 8004712:	fab1 f181 	clz	r1, r1
 8004716:	0949      	lsrs	r1, r1, #5
 8004718:	2002      	movs	r0, #2
 800471a:	f7fc f8a1 	bl	8000860 <_test_assert>
 800471e:	2800      	cmp	r0, #0
 8004720:	d1f0      	bne.n	8004704 <evt2_execute+0x34>
 8004722:	f7fd fa65 	bl	8001bf0 <chEvtWaitOne.constprop.32>
 8004726:	f1a0 0104 	sub.w	r1, r0, #4
 800472a:	fab1 f181 	clz	r1, r1
 800472e:	0949      	lsrs	r1, r1, #5
 8004730:	2003      	movs	r0, #3
 8004732:	f7fc f895 	bl	8000860 <_test_assert>
 8004736:	2800      	cmp	r0, #0
 8004738:	d1e4      	bne.n	8004704 <evt2_execute+0x34>
 800473a:	f7fb fdd9 	bl	80002f0 <chEvtGetAndClearEvents.constprop.36>
 800473e:	fab0 f180 	clz	r1, r0
 8004742:	0949      	lsrs	r1, r1, #5
 8004744:	2004      	movs	r0, #4
 8004746:	f7fc f88b 	bl	8000860 <_test_assert>
 800474a:	4606      	mov	r6, r0
 800474c:	2800      	cmp	r0, #0
 800474e:	d1d9      	bne.n	8004704 <evt2_execute+0x34>
 8004750:	f7fe f926 	bl	80029a0 <test_wait_tick>
 8004754:	f385 8811 	msr	BASEPRI, r5
 8004758:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 800475c:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
 8004760:	f386 8811 	msr	BASEPRI, r6
 8004764:	69a1      	ldr	r1, [r4, #24]
 8004766:	4b88      	ldr	r3, [pc, #544]	; (8004988 <evt2_execute+0x2b8>)
 8004768:	688a      	ldr	r2, [r1, #8]
 800476a:	4888      	ldr	r0, [pc, #544]	; (800498c <evt2_execute+0x2bc>)
 800476c:	9100      	str	r1, [sp, #0]
 800476e:	3a01      	subs	r2, #1
 8004770:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004774:	f7fd f96c 	bl	8001a50 <chThdCreateStatic>
 8004778:	4e85      	ldr	r6, [pc, #532]	; (8004990 <evt2_execute+0x2c0>)
 800477a:	6030      	str	r0, [r6, #0]
 800477c:	f7fd fa38 	bl	8001bf0 <chEvtWaitOne.constprop.32>
 8004780:	f207 2226 	addw	r2, r7, #550	; 0x226
 8004784:	4681      	mov	r9, r0
 8004786:	f507 71fa 	add.w	r1, r7, #500	; 0x1f4
 800478a:	2005      	movs	r0, #5
 800478c:	f7fc f820 	bl	80007d0 <_test_assert_time_window>
 8004790:	2800      	cmp	r0, #0
 8004792:	d1b7      	bne.n	8004704 <evt2_execute+0x34>
 8004794:	f1a9 0101 	sub.w	r1, r9, #1
 8004798:	fab1 f181 	clz	r1, r1
 800479c:	0949      	lsrs	r1, r1, #5
 800479e:	2006      	movs	r0, #6
 80047a0:	f7fc f85e 	bl	8000860 <_test_assert>
 80047a4:	2800      	cmp	r0, #0
 80047a6:	d1ad      	bne.n	8004704 <evt2_execute+0x34>
 80047a8:	f7fb fda2 	bl	80002f0 <chEvtGetAndClearEvents.constprop.36>
 80047ac:	fab0 f180 	clz	r1, r0
 80047b0:	0949      	lsrs	r1, r1, #5
 80047b2:	2007      	movs	r0, #7
 80047b4:	f7fc f854 	bl	8000860 <_test_assert>
 80047b8:	4607      	mov	r7, r0
 80047ba:	2800      	cmp	r0, #0
 80047bc:	d1a2      	bne.n	8004704 <evt2_execute+0x34>
 80047be:	f7ff f9bf 	bl	8003b40 <test_wait_threads>
 80047c2:	f385 8811 	msr	BASEPRI, r5
 80047c6:	69a2      	ldr	r2, [r4, #24]
 80047c8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80047ca:	f043 0305 	orr.w	r3, r3, #5
 80047ce:	6353      	str	r3, [r2, #52]	; 0x34
 80047d0:	f387 8811 	msr	BASEPRI, r7
 80047d4:	f7fd fa2c 	bl	8001c30 <chEvtWaitAny.constprop.31>
 80047d8:	1f47      	subs	r7, r0, #5
 80047da:	4279      	negs	r1, r7
 80047dc:	4179      	adcs	r1, r7
 80047de:	2008      	movs	r0, #8
 80047e0:	f7fc f83e 	bl	8000860 <_test_assert>
 80047e4:	2800      	cmp	r0, #0
 80047e6:	d18d      	bne.n	8004704 <evt2_execute+0x34>
 80047e8:	f7fb fd82 	bl	80002f0 <chEvtGetAndClearEvents.constprop.36>
 80047ec:	fab0 f180 	clz	r1, r0
 80047f0:	0949      	lsrs	r1, r1, #5
 80047f2:	2009      	movs	r0, #9
 80047f4:	f7fc f834 	bl	8000860 <_test_assert>
 80047f8:	4607      	mov	r7, r0
 80047fa:	2800      	cmp	r0, #0
 80047fc:	d182      	bne.n	8004704 <evt2_execute+0x34>
 80047fe:	f7fe f8cf 	bl	80029a0 <test_wait_tick>
 8004802:	f385 8811 	msr	BASEPRI, r5
 8004806:	f8d8 5024 	ldr.w	r5, [r8, #36]	; 0x24
 800480a:	f387 8811 	msr	BASEPRI, r7
 800480e:	69a1      	ldr	r1, [r4, #24]
 8004810:	4b5d      	ldr	r3, [pc, #372]	; (8004988 <evt2_execute+0x2b8>)
 8004812:	688a      	ldr	r2, [r1, #8]
 8004814:	485d      	ldr	r0, [pc, #372]	; (800498c <evt2_execute+0x2bc>)
 8004816:	9100      	str	r1, [sp, #0]
 8004818:	3a01      	subs	r2, #1
 800481a:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 800481e:	f7fd f917 	bl	8001a50 <chThdCreateStatic>
 8004822:	6030      	str	r0, [r6, #0]
 8004824:	f7fd fa04 	bl	8001c30 <chEvtWaitAny.constprop.31>
 8004828:	f205 2226 	addw	r2, r5, #550	; 0x226
 800482c:	4607      	mov	r7, r0
 800482e:	f505 71fa 	add.w	r1, r5, #500	; 0x1f4
 8004832:	200a      	movs	r0, #10
 8004834:	f7fb ffcc 	bl	80007d0 <_test_assert_time_window>
 8004838:	2800      	cmp	r0, #0
 800483a:	f47f af63 	bne.w	8004704 <evt2_execute+0x34>
 800483e:	1e78      	subs	r0, r7, #1
 8004840:	4241      	negs	r1, r0
 8004842:	4141      	adcs	r1, r0
 8004844:	200b      	movs	r0, #11
 8004846:	f7fc f80b 	bl	8000860 <_test_assert>
 800484a:	2800      	cmp	r0, #0
 800484c:	f47f af5a 	bne.w	8004704 <evt2_execute+0x34>
 8004850:	f7fb fd4e 	bl	80002f0 <chEvtGetAndClearEvents.constprop.36>
 8004854:	fab0 f180 	clz	r1, r0
 8004858:	0949      	lsrs	r1, r1, #5
 800485a:	200c      	movs	r0, #12
 800485c:	f7fc f800 	bl	8000860 <_test_assert>
 8004860:	4683      	mov	fp, r0
 8004862:	2800      	cmp	r0, #0
 8004864:	f47f af4e 	bne.w	8004704 <evt2_execute+0x34>
 8004868:	4f4a      	ldr	r7, [pc, #296]	; (8004994 <evt2_execute+0x2c4>)
 800486a:	4d4b      	ldr	r5, [pc, #300]	; (8004998 <evt2_execute+0x2c8>)
 800486c:	f7ff f968 	bl	8003b40 <test_wait_threads>
 8004870:	f04f 0a20 	mov.w	sl, #32
 8004874:	603f      	str	r7, [r7, #0]
 8004876:	602d      	str	r5, [r5, #0]
 8004878:	f38a 8811 	msr	BASEPRI, sl
 800487c:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 8004880:	683a      	ldr	r2, [r7, #0]
 8004882:	f849 2d28 	str.w	r2, [r9, #-40]!
 8004886:	69a0      	ldr	r0, [r4, #24]
 8004888:	f8cd b01c 	str.w	fp, [sp, #28]
 800488c:	2101      	movs	r1, #1
 800488e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004892:	e9cd 0105 	strd	r0, r1, [sp, #20]
 8004896:	f8c7 9000 	str.w	r9, [r7]
 800489a:	9208      	str	r2, [sp, #32]
 800489c:	f38b 8811 	msr	BASEPRI, fp
 80048a0:	f38a 8811 	msr	BASEPRI, sl
 80048a4:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80048a8:	6829      	ldr	r1, [r5, #0]
 80048aa:	f848 1d14 	str.w	r1, [r8, #-20]!
 80048ae:	69a0      	ldr	r0, [r4, #24]
 80048b0:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80048b4:	2104      	movs	r1, #4
 80048b6:	920d      	str	r2, [sp, #52]	; 0x34
 80048b8:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80048bc:	f8c5 8000 	str.w	r8, [r5]
 80048c0:	f38b 8811 	msr	BASEPRI, fp
 80048c4:	f7fe f86c 	bl	80029a0 <test_wait_tick>
 80048c8:	f38a 8811 	msr	BASEPRI, sl
 80048cc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80048d0:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80048d2:	9302      	str	r3, [sp, #8]
 80048d4:	f38b 8811 	msr	BASEPRI, fp
 80048d8:	69a3      	ldr	r3, [r4, #24]
 80048da:	4930      	ldr	r1, [pc, #192]	; (800499c <evt2_execute+0x2cc>)
 80048dc:	689a      	ldr	r2, [r3, #8]
 80048de:	482b      	ldr	r0, [pc, #172]	; (800498c <evt2_execute+0x2bc>)
 80048e0:	9100      	str	r1, [sp, #0]
 80048e2:	4b2f      	ldr	r3, [pc, #188]	; (80049a0 <evt2_execute+0x2d0>)
 80048e4:	3a01      	subs	r2, #1
 80048e6:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 80048ea:	f7fd f8b1 	bl	8001a50 <chThdCreateStatic>
 80048ee:	9b02      	ldr	r3, [sp, #8]
 80048f0:	6030      	str	r0, [r6, #0]
 80048f2:	f503 71fa 	add.w	r1, r3, #500	; 0x1f4
 80048f6:	69a4      	ldr	r4, [r4, #24]
 80048f8:	f38a 8811 	msr	BASEPRI, sl
 80048fc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80048fe:	f003 0205 	and.w	r2, r3, #5
 8004902:	2a05      	cmp	r2, #5
 8004904:	d007      	beq.n	8004916 <evt2_execute+0x246>
 8004906:	2305      	movs	r3, #5
 8004908:	6223      	str	r3, [r4, #32]
 800490a:	200b      	movs	r0, #11
 800490c:	9103      	str	r1, [sp, #12]
 800490e:	f7fd f8d7 	bl	8001ac0 <chSchGoSleepS>
 8004912:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004914:	9903      	ldr	r1, [sp, #12]
 8004916:	f023 0305 	bic.w	r3, r3, #5
 800491a:	6363      	str	r3, [r4, #52]	; 0x34
 800491c:	2300      	movs	r3, #0
 800491e:	f383 8811 	msr	BASEPRI, r3
 8004922:	9b02      	ldr	r3, [sp, #8]
 8004924:	200d      	movs	r0, #13
 8004926:	f203 2226 	addw	r2, r3, #550	; 0x226
 800492a:	f7fb ff51 	bl	80007d0 <_test_assert_time_window>
 800492e:	2800      	cmp	r0, #0
 8004930:	f47f aee8 	bne.w	8004704 <evt2_execute+0x34>
 8004934:	f7fb fcdc 	bl	80002f0 <chEvtGetAndClearEvents.constprop.36>
 8004938:	fab0 f180 	clz	r1, r0
 800493c:	0949      	lsrs	r1, r1, #5
 800493e:	200e      	movs	r0, #14
 8004940:	f7fb ff8e 	bl	8000860 <_test_assert>
 8004944:	2800      	cmp	r0, #0
 8004946:	f47f aedd 	bne.w	8004704 <evt2_execute+0x34>
 800494a:	f7ff f8f9 	bl	8003b40 <test_wait_threads>
 800494e:	4649      	mov	r1, r9
 8004950:	4810      	ldr	r0, [pc, #64]	; (8004994 <evt2_execute+0x2c4>)
 8004952:	f7fc f935 	bl	8000bc0 <chEvtUnregister>
 8004956:	4641      	mov	r1, r8
 8004958:	480f      	ldr	r0, [pc, #60]	; (8004998 <evt2_execute+0x2c8>)
 800495a:	f7fc f931 	bl	8000bc0 <chEvtUnregister>
 800495e:	6839      	ldr	r1, [r7, #0]
 8004960:	1bca      	subs	r2, r1, r7
 8004962:	4251      	negs	r1, r2
 8004964:	4151      	adcs	r1, r2
 8004966:	200f      	movs	r0, #15
 8004968:	f7fb ff7a 	bl	8000860 <_test_assert>
 800496c:	2800      	cmp	r0, #0
 800496e:	f47f aec9 	bne.w	8004704 <evt2_execute+0x34>
 8004972:	6829      	ldr	r1, [r5, #0]
 8004974:	1b4b      	subs	r3, r1, r5
 8004976:	4259      	negs	r1, r3
 8004978:	4159      	adcs	r1, r3
 800497a:	2010      	movs	r0, #16
 800497c:	f7fb ff70 	bl	8000860 <_test_assert>
 8004980:	e6c0      	b.n	8004704 <evt2_execute+0x34>
 8004982:	bf00      	nop
 8004984:	20000930 	.word	0x20000930
 8004988:	08002901 	.word	0x08002901
 800498c:	20000bc0 	.word	0x20000bc0
 8004990:	200014fc 	.word	0x200014fc
 8004994:	20000808 	.word	0x20000808
 8004998:	2000080c 	.word	0x2000080c
 800499c:	08005ef0 	.word	0x08005ef0
 80049a0:	08002931 	.word	0x08002931
	...

080049b0 <mtx8_execute>:
 80049b0:	b570      	push	{r4, r5, r6, lr}
 80049b2:	4b19      	ldr	r3, [pc, #100]	; (8004a18 <mtx8_execute+0x68>)
 80049b4:	4d19      	ldr	r5, [pc, #100]	; (8004a1c <mtx8_execute+0x6c>)
 80049b6:	699b      	ldr	r3, [r3, #24]
 80049b8:	4a19      	ldr	r2, [pc, #100]	; (8004a20 <mtx8_execute+0x70>)
 80049ba:	689e      	ldr	r6, [r3, #8]
 80049bc:	4b19      	ldr	r3, [pc, #100]	; (8004a24 <mtx8_execute+0x74>)
 80049be:	4c1a      	ldr	r4, [pc, #104]	; (8004a28 <mtx8_execute+0x78>)
 80049c0:	b082      	sub	sp, #8
 80049c2:	4628      	mov	r0, r5
 80049c4:	9200      	str	r2, [sp, #0]
 80049c6:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 80049ca:	1c72      	adds	r2, r6, #1
 80049cc:	f7fd f840 	bl	8001a50 <chThdCreateStatic>
 80049d0:	4b16      	ldr	r3, [pc, #88]	; (8004a2c <mtx8_execute+0x7c>)
 80049d2:	6020      	str	r0, [r4, #0]
 80049d4:	1cb2      	adds	r2, r6, #2
 80049d6:	9300      	str	r3, [sp, #0]
 80049d8:	f505 70e8 	add.w	r0, r5, #464	; 0x1d0
 80049dc:	4b14      	ldr	r3, [pc, #80]	; (8004a30 <mtx8_execute+0x80>)
 80049de:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 80049e2:	f7fd f835 	bl	8001a50 <chThdCreateStatic>
 80049e6:	4b13      	ldr	r3, [pc, #76]	; (8004a34 <mtx8_execute+0x84>)
 80049e8:	6060      	str	r0, [r4, #4]
 80049ea:	1cf2      	adds	r2, r6, #3
 80049ec:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 80049f0:	9300      	str	r3, [sp, #0]
 80049f2:	f505 7068 	add.w	r0, r5, #928	; 0x3a0
 80049f6:	4b10      	ldr	r3, [pc, #64]	; (8004a38 <mtx8_execute+0x88>)
 80049f8:	f7fd f82a 	bl	8001a50 <chThdCreateStatic>
 80049fc:	60a0      	str	r0, [r4, #8]
 80049fe:	f7fc ffbf 	bl	8001980 <chCondSignal.constprop.44>
 8004a02:	f7fc ffbd 	bl	8001980 <chCondSignal.constprop.44>
 8004a06:	f7ff f89b 	bl	8003b40 <test_wait_threads>
 8004a0a:	490c      	ldr	r1, [pc, #48]	; (8004a3c <mtx8_execute+0x8c>)
 8004a0c:	2001      	movs	r0, #1
 8004a0e:	b002      	add	sp, #8
 8004a10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004a14:	f7fb befc 	b.w	8000810 <_test_assert_sequence>
 8004a18:	20000930 	.word	0x20000930
 8004a1c:	20000bc0 	.word	0x20000bc0
 8004a20:	08005ef0 	.word	0x08005ef0
 8004a24:	08002f21 	.word	0x08002f21
 8004a28:	200014fc 	.word	0x200014fc
 8004a2c:	08005ee4 	.word	0x08005ee4
 8004a30:	08002fb1 	.word	0x08002fb1
 8004a34:	08005ee0 	.word	0x08005ee0
 8004a38:	08003021 	.word	0x08003021
 8004a3c:	08005f10 	.word	0x08005f10

08004a40 <mtx7_execute>:
 8004a40:	b530      	push	{r4, r5, lr}
 8004a42:	4b2c      	ldr	r3, [pc, #176]	; (8004af4 <mtx7_execute+0xb4>)
 8004a44:	4a2c      	ldr	r2, [pc, #176]	; (8004af8 <mtx7_execute+0xb8>)
 8004a46:	6999      	ldr	r1, [r3, #24]
 8004a48:	482c      	ldr	r0, [pc, #176]	; (8004afc <mtx7_execute+0xbc>)
 8004a4a:	688d      	ldr	r5, [r1, #8]
 8004a4c:	4b2c      	ldr	r3, [pc, #176]	; (8004b00 <mtx7_execute+0xc0>)
 8004a4e:	4c2d      	ldr	r4, [pc, #180]	; (8004b04 <mtx7_execute+0xc4>)
 8004a50:	b083      	sub	sp, #12
 8004a52:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004a56:	9200      	str	r2, [sp, #0]
 8004a58:	1c6a      	adds	r2, r5, #1
 8004a5a:	f7fc fff9 	bl	8001a50 <chThdCreateStatic>
 8004a5e:	4b2a      	ldr	r3, [pc, #168]	; (8004b08 <mtx7_execute+0xc8>)
 8004a60:	6020      	str	r0, [r4, #0]
 8004a62:	1caa      	adds	r2, r5, #2
 8004a64:	9300      	str	r3, [sp, #0]
 8004a66:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004a6a:	4b25      	ldr	r3, [pc, #148]	; (8004b00 <mtx7_execute+0xc0>)
 8004a6c:	4827      	ldr	r0, [pc, #156]	; (8004b0c <mtx7_execute+0xcc>)
 8004a6e:	f7fc ffef 	bl	8001a50 <chThdCreateStatic>
 8004a72:	4b27      	ldr	r3, [pc, #156]	; (8004b10 <mtx7_execute+0xd0>)
 8004a74:	6060      	str	r0, [r4, #4]
 8004a76:	1cea      	adds	r2, r5, #3
 8004a78:	9300      	str	r3, [sp, #0]
 8004a7a:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004a7e:	4b20      	ldr	r3, [pc, #128]	; (8004b00 <mtx7_execute+0xc0>)
 8004a80:	4824      	ldr	r0, [pc, #144]	; (8004b14 <mtx7_execute+0xd4>)
 8004a82:	f7fc ffe5 	bl	8001a50 <chThdCreateStatic>
 8004a86:	4b24      	ldr	r3, [pc, #144]	; (8004b18 <mtx7_execute+0xd8>)
 8004a88:	60a0      	str	r0, [r4, #8]
 8004a8a:	1d2a      	adds	r2, r5, #4
 8004a8c:	9300      	str	r3, [sp, #0]
 8004a8e:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004a92:	4b1b      	ldr	r3, [pc, #108]	; (8004b00 <mtx7_execute+0xc0>)
 8004a94:	4821      	ldr	r0, [pc, #132]	; (8004b1c <mtx7_execute+0xdc>)
 8004a96:	f7fc ffdb 	bl	8001a50 <chThdCreateStatic>
 8004a9a:	4b21      	ldr	r3, [pc, #132]	; (8004b20 <mtx7_execute+0xe0>)
 8004a9c:	60e0      	str	r0, [r4, #12]
 8004a9e:	1d6a      	adds	r2, r5, #5
 8004aa0:	9300      	str	r3, [sp, #0]
 8004aa2:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004aa6:	4b16      	ldr	r3, [pc, #88]	; (8004b00 <mtx7_execute+0xc0>)
 8004aa8:	481e      	ldr	r0, [pc, #120]	; (8004b24 <mtx7_execute+0xe4>)
 8004aaa:	f7fc ffd1 	bl	8001a50 <chThdCreateStatic>
 8004aae:	2320      	movs	r3, #32
 8004ab0:	6120      	str	r0, [r4, #16]
 8004ab2:	f383 8811 	msr	BASEPRI, r3
 8004ab6:	4c1c      	ldr	r4, [pc, #112]	; (8004b28 <mtx7_execute+0xe8>)
 8004ab8:	6823      	ldr	r3, [r4, #0]
 8004aba:	42a3      	cmp	r3, r4
 8004abc:	d00b      	beq.n	8004ad6 <mtx7_execute+0x96>
 8004abe:	f06f 0501 	mvn.w	r5, #1
 8004ac2:	681a      	ldr	r2, [r3, #0]
 8004ac4:	6022      	str	r2, [r4, #0]
 8004ac6:	4618      	mov	r0, r3
 8004ac8:	6054      	str	r4, [r2, #4]
 8004aca:	f7fc f969 	bl	8000da0 <chSchReadyI>
 8004ace:	6823      	ldr	r3, [r4, #0]
 8004ad0:	6205      	str	r5, [r0, #32]
 8004ad2:	42a3      	cmp	r3, r4
 8004ad4:	d1f5      	bne.n	8004ac2 <mtx7_execute+0x82>
 8004ad6:	f7fc fdab 	bl	8001630 <chSchRescheduleS>
 8004ada:	2300      	movs	r3, #0
 8004adc:	f383 8811 	msr	BASEPRI, r3
 8004ae0:	f7ff f82e 	bl	8003b40 <test_wait_threads>
 8004ae4:	4911      	ldr	r1, [pc, #68]	; (8004b2c <mtx7_execute+0xec>)
 8004ae6:	2001      	movs	r0, #1
 8004ae8:	b003      	add	sp, #12
 8004aea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004aee:	f7fb be8f 	b.w	8000810 <_test_assert_sequence>
 8004af2:	bf00      	nop
 8004af4:	20000930 	.word	0x20000930
 8004af8:	08006144 	.word	0x08006144
 8004afc:	20000bc0 	.word	0x20000bc0
 8004b00:	08002fb1 	.word	0x08002fb1
 8004b04:	200014fc 	.word	0x200014fc
 8004b08:	08005ee8 	.word	0x08005ee8
 8004b0c:	20000d90 	.word	0x20000d90
 8004b10:	08005ee4 	.word	0x08005ee4
 8004b14:	20000f60 	.word	0x20000f60
 8004b18:	08005ee0 	.word	0x08005ee0
 8004b1c:	20001130 	.word	0x20001130
 8004b20:	08005ef0 	.word	0x08005ef0
 8004b24:	20001300 	.word	0x20001300
 8004b28:	20000800 	.word	0x20000800
 8004b2c:	08006140 	.word	0x08006140

08004b30 <mtx6_execute>:
 8004b30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b32:	4b2c      	ldr	r3, [pc, #176]	; (8004be4 <mtx6_execute+0xb4>)
 8004b34:	4e2c      	ldr	r6, [pc, #176]	; (8004be8 <mtx6_execute+0xb8>)
 8004b36:	699b      	ldr	r3, [r3, #24]
 8004b38:	4d2c      	ldr	r5, [pc, #176]	; (8004bec <mtx6_execute+0xbc>)
 8004b3a:	689f      	ldr	r7, [r3, #8]
 8004b3c:	4b2c      	ldr	r3, [pc, #176]	; (8004bf0 <mtx6_execute+0xc0>)
 8004b3e:	4c2d      	ldr	r4, [pc, #180]	; (8004bf4 <mtx6_execute+0xc4>)
 8004b40:	b083      	sub	sp, #12
 8004b42:	1c7a      	adds	r2, r7, #1
 8004b44:	9300      	str	r3, [sp, #0]
 8004b46:	4628      	mov	r0, r5
 8004b48:	4633      	mov	r3, r6
 8004b4a:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004b4e:	f7fc ff7f 	bl	8001a50 <chThdCreateStatic>
 8004b52:	4929      	ldr	r1, [pc, #164]	; (8004bf8 <mtx6_execute+0xc8>)
 8004b54:	6020      	str	r0, [r4, #0]
 8004b56:	1cba      	adds	r2, r7, #2
 8004b58:	4633      	mov	r3, r6
 8004b5a:	9100      	str	r1, [sp, #0]
 8004b5c:	f505 70e8 	add.w	r0, r5, #464	; 0x1d0
 8004b60:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004b64:	f7fc ff74 	bl	8001a50 <chThdCreateStatic>
 8004b68:	4924      	ldr	r1, [pc, #144]	; (8004bfc <mtx6_execute+0xcc>)
 8004b6a:	6060      	str	r0, [r4, #4]
 8004b6c:	1cfa      	adds	r2, r7, #3
 8004b6e:	4633      	mov	r3, r6
 8004b70:	9100      	str	r1, [sp, #0]
 8004b72:	f505 7068 	add.w	r0, r5, #928	; 0x3a0
 8004b76:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004b7a:	f7fc ff69 	bl	8001a50 <chThdCreateStatic>
 8004b7e:	4920      	ldr	r1, [pc, #128]	; (8004c00 <mtx6_execute+0xd0>)
 8004b80:	60a0      	str	r0, [r4, #8]
 8004b82:	1d3a      	adds	r2, r7, #4
 8004b84:	4633      	mov	r3, r6
 8004b86:	9100      	str	r1, [sp, #0]
 8004b88:	f505 60ae 	add.w	r0, r5, #1392	; 0x570
 8004b8c:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004b90:	f7fc ff5e 	bl	8001a50 <chThdCreateStatic>
 8004b94:	491b      	ldr	r1, [pc, #108]	; (8004c04 <mtx6_execute+0xd4>)
 8004b96:	60e0      	str	r0, [r4, #12]
 8004b98:	4633      	mov	r3, r6
 8004b9a:	9100      	str	r1, [sp, #0]
 8004b9c:	1d7a      	adds	r2, r7, #5
 8004b9e:	f505 60e8 	add.w	r0, r5, #1856	; 0x740
 8004ba2:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004ba6:	f7fc ff53 	bl	8001a50 <chThdCreateStatic>
 8004baa:	2320      	movs	r3, #32
 8004bac:	6120      	str	r0, [r4, #16]
 8004bae:	f383 8811 	msr	BASEPRI, r3
 8004bb2:	f7fc f90d 	bl	8000dd0 <chCondSignalI.constprop.43>
 8004bb6:	f7fc f90b 	bl	8000dd0 <chCondSignalI.constprop.43>
 8004bba:	f7fc f909 	bl	8000dd0 <chCondSignalI.constprop.43>
 8004bbe:	f7fc f907 	bl	8000dd0 <chCondSignalI.constprop.43>
 8004bc2:	f7fc f905 	bl	8000dd0 <chCondSignalI.constprop.43>
 8004bc6:	f7fc fd33 	bl	8001630 <chSchRescheduleS>
 8004bca:	2300      	movs	r3, #0
 8004bcc:	f383 8811 	msr	BASEPRI, r3
 8004bd0:	f7fe ffb6 	bl	8003b40 <test_wait_threads>
 8004bd4:	490c      	ldr	r1, [pc, #48]	; (8004c08 <mtx6_execute+0xd8>)
 8004bd6:	2001      	movs	r0, #1
 8004bd8:	b003      	add	sp, #12
 8004bda:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004bde:	f7fb be17 	b.w	8000810 <_test_assert_sequence>
 8004be2:	bf00      	nop
 8004be4:	20000930 	.word	0x20000930
 8004be8:	08002fb1 	.word	0x08002fb1
 8004bec:	20000bc0 	.word	0x20000bc0
 8004bf0:	08006144 	.word	0x08006144
 8004bf4:	200014fc 	.word	0x200014fc
 8004bf8:	08005ee8 	.word	0x08005ee8
 8004bfc:	08005ee4 	.word	0x08005ee4
 8004c00:	08005ee0 	.word	0x08005ee0
 8004c04:	08005ef0 	.word	0x08005ef0
 8004c08:	08006140 	.word	0x08006140
 8004c0c:	00000000 	.word	0x00000000

08004c10 <mtx4_execute>:
 8004c10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004c14:	4d87      	ldr	r5, [pc, #540]	; (8004e34 <mtx4_execute+0x224>)
 8004c16:	4a88      	ldr	r2, [pc, #544]	; (8004e38 <mtx4_execute+0x228>)
 8004c18:	69a9      	ldr	r1, [r5, #24]
 8004c1a:	4b88      	ldr	r3, [pc, #544]	; (8004e3c <mtx4_execute+0x22c>)
 8004c1c:	688c      	ldr	r4, [r1, #8]
 8004c1e:	4888      	ldr	r0, [pc, #544]	; (8004e40 <mtx4_execute+0x230>)
 8004c20:	4e88      	ldr	r6, [pc, #544]	; (8004e44 <mtx4_execute+0x234>)
 8004c22:	b082      	sub	sp, #8
 8004c24:	1c67      	adds	r7, r4, #1
 8004c26:	9200      	str	r2, [sp, #0]
 8004c28:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004c2c:	463a      	mov	r2, r7
 8004c2e:	f7fc ff0f 	bl	8001a50 <chThdCreateStatic>
 8004c32:	f104 0802 	add.w	r8, r4, #2
 8004c36:	4b84      	ldr	r3, [pc, #528]	; (8004e48 <mtx4_execute+0x238>)
 8004c38:	6030      	str	r0, [r6, #0]
 8004c3a:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004c3e:	4642      	mov	r2, r8
 8004c40:	9300      	str	r3, [sp, #0]
 8004c42:	4882      	ldr	r0, [pc, #520]	; (8004e4c <mtx4_execute+0x23c>)
 8004c44:	4b82      	ldr	r3, [pc, #520]	; (8004e50 <mtx4_execute+0x240>)
 8004c46:	f7fc ff03 	bl	8001a50 <chThdCreateStatic>
 8004c4a:	6070      	str	r0, [r6, #4]
 8004c4c:	4881      	ldr	r0, [pc, #516]	; (8004e54 <mtx4_execute+0x244>)
 8004c4e:	f7fe f91f 	bl	8002e90 <chMtxLock>
 8004c52:	69ab      	ldr	r3, [r5, #24]
 8004c54:	6899      	ldr	r1, [r3, #8]
 8004c56:	1b09      	subs	r1, r1, r4
 8004c58:	fab1 f181 	clz	r1, r1
 8004c5c:	2001      	movs	r0, #1
 8004c5e:	0949      	lsrs	r1, r1, #5
 8004c60:	f7fb fdfe 	bl	8000860 <_test_assert>
 8004c64:	b110      	cbz	r0, 8004c6c <mtx4_execute+0x5c>
 8004c66:	b002      	add	sp, #8
 8004c68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004c6c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004c70:	f7fd fdb6 	bl	80027e0 <chThdSleep>
 8004c74:	69ab      	ldr	r3, [r5, #24]
 8004c76:	6899      	ldr	r1, [r3, #8]
 8004c78:	1bc9      	subs	r1, r1, r7
 8004c7a:	fab1 f181 	clz	r1, r1
 8004c7e:	2002      	movs	r0, #2
 8004c80:	0949      	lsrs	r1, r1, #5
 8004c82:	f7fb fded 	bl	8000860 <_test_assert>
 8004c86:	2800      	cmp	r0, #0
 8004c88:	d1ed      	bne.n	8004c66 <mtx4_execute+0x56>
 8004c8a:	4873      	ldr	r0, [pc, #460]	; (8004e58 <mtx4_execute+0x248>)
 8004c8c:	f7fe f900 	bl	8002e90 <chMtxLock>
 8004c90:	69ab      	ldr	r3, [r5, #24]
 8004c92:	6899      	ldr	r1, [r3, #8]
 8004c94:	1bc9      	subs	r1, r1, r7
 8004c96:	fab1 f181 	clz	r1, r1
 8004c9a:	2003      	movs	r0, #3
 8004c9c:	0949      	lsrs	r1, r1, #5
 8004c9e:	f7fb fddf 	bl	8000860 <_test_assert>
 8004ca2:	2800      	cmp	r0, #0
 8004ca4:	d1df      	bne.n	8004c66 <mtx4_execute+0x56>
 8004ca6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004caa:	f7fd fd99 	bl	80027e0 <chThdSleep>
 8004cae:	69ab      	ldr	r3, [r5, #24]
 8004cb0:	6899      	ldr	r1, [r3, #8]
 8004cb2:	eba1 0108 	sub.w	r1, r1, r8
 8004cb6:	fab1 f181 	clz	r1, r1
 8004cba:	2004      	movs	r0, #4
 8004cbc:	0949      	lsrs	r1, r1, #5
 8004cbe:	f7fb fdcf 	bl	8000860 <_test_assert>
 8004cc2:	2800      	cmp	r0, #0
 8004cc4:	d1cf      	bne.n	8004c66 <mtx4_execute+0x56>
 8004cc6:	4864      	ldr	r0, [pc, #400]	; (8004e58 <mtx4_execute+0x248>)
 8004cc8:	f7fc fe72 	bl	80019b0 <chMtxUnlock>
 8004ccc:	69ab      	ldr	r3, [r5, #24]
 8004cce:	6899      	ldr	r1, [r3, #8]
 8004cd0:	1bc9      	subs	r1, r1, r7
 8004cd2:	fab1 f181 	clz	r1, r1
 8004cd6:	2005      	movs	r0, #5
 8004cd8:	0949      	lsrs	r1, r1, #5
 8004cda:	f7fb fdc1 	bl	8000860 <_test_assert>
 8004cde:	2800      	cmp	r0, #0
 8004ce0:	d1c1      	bne.n	8004c66 <mtx4_execute+0x56>
 8004ce2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004ce6:	f7fd fd7b 	bl	80027e0 <chThdSleep>
 8004cea:	69ab      	ldr	r3, [r5, #24]
 8004cec:	6899      	ldr	r1, [r3, #8]
 8004cee:	1bc9      	subs	r1, r1, r7
 8004cf0:	fab1 f181 	clz	r1, r1
 8004cf4:	2006      	movs	r0, #6
 8004cf6:	0949      	lsrs	r1, r1, #5
 8004cf8:	f7fb fdb2 	bl	8000860 <_test_assert>
 8004cfc:	2800      	cmp	r0, #0
 8004cfe:	d1b2      	bne.n	8004c66 <mtx4_execute+0x56>
 8004d00:	f7fc fcbe 	bl	8001680 <chMtxUnlockAll>
 8004d04:	69ab      	ldr	r3, [r5, #24]
 8004d06:	6899      	ldr	r1, [r3, #8]
 8004d08:	1b09      	subs	r1, r1, r4
 8004d0a:	fab1 f181 	clz	r1, r1
 8004d0e:	2007      	movs	r0, #7
 8004d10:	0949      	lsrs	r1, r1, #5
 8004d12:	f7fb fda5 	bl	8000860 <_test_assert>
 8004d16:	2800      	cmp	r0, #0
 8004d18:	d1a5      	bne.n	8004c66 <mtx4_execute+0x56>
 8004d1a:	f7fe ff11 	bl	8003b40 <test_wait_threads>
 8004d1e:	4b4f      	ldr	r3, [pc, #316]	; (8004e5c <mtx4_execute+0x24c>)
 8004d20:	9300      	str	r3, [sp, #0]
 8004d22:	463a      	mov	r2, r7
 8004d24:	4b45      	ldr	r3, [pc, #276]	; (8004e3c <mtx4_execute+0x22c>)
 8004d26:	4846      	ldr	r0, [pc, #280]	; (8004e40 <mtx4_execute+0x230>)
 8004d28:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004d2c:	f7fc fe90 	bl	8001a50 <chThdCreateStatic>
 8004d30:	4b4b      	ldr	r3, [pc, #300]	; (8004e60 <mtx4_execute+0x250>)
 8004d32:	6030      	str	r0, [r6, #0]
 8004d34:	4642      	mov	r2, r8
 8004d36:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004d3a:	9300      	str	r3, [sp, #0]
 8004d3c:	4843      	ldr	r0, [pc, #268]	; (8004e4c <mtx4_execute+0x23c>)
 8004d3e:	4b44      	ldr	r3, [pc, #272]	; (8004e50 <mtx4_execute+0x240>)
 8004d40:	f7fc fe86 	bl	8001a50 <chThdCreateStatic>
 8004d44:	6070      	str	r0, [r6, #4]
 8004d46:	4843      	ldr	r0, [pc, #268]	; (8004e54 <mtx4_execute+0x244>)
 8004d48:	f7fe f8a2 	bl	8002e90 <chMtxLock>
 8004d4c:	69ab      	ldr	r3, [r5, #24]
 8004d4e:	6899      	ldr	r1, [r3, #8]
 8004d50:	1b0a      	subs	r2, r1, r4
 8004d52:	4251      	negs	r1, r2
 8004d54:	4151      	adcs	r1, r2
 8004d56:	2008      	movs	r0, #8
 8004d58:	f7fb fd82 	bl	8000860 <_test_assert>
 8004d5c:	2800      	cmp	r0, #0
 8004d5e:	d182      	bne.n	8004c66 <mtx4_execute+0x56>
 8004d60:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004d64:	f7fd fd3c 	bl	80027e0 <chThdSleep>
 8004d68:	69ab      	ldr	r3, [r5, #24]
 8004d6a:	6899      	ldr	r1, [r3, #8]
 8004d6c:	1bcb      	subs	r3, r1, r7
 8004d6e:	4259      	negs	r1, r3
 8004d70:	4159      	adcs	r1, r3
 8004d72:	2009      	movs	r0, #9
 8004d74:	f7fb fd74 	bl	8000860 <_test_assert>
 8004d78:	2800      	cmp	r0, #0
 8004d7a:	f47f af74 	bne.w	8004c66 <mtx4_execute+0x56>
 8004d7e:	4836      	ldr	r0, [pc, #216]	; (8004e58 <mtx4_execute+0x248>)
 8004d80:	f7fe f886 	bl	8002e90 <chMtxLock>
 8004d84:	69ab      	ldr	r3, [r5, #24]
 8004d86:	6899      	ldr	r1, [r3, #8]
 8004d88:	eba1 0e07 	sub.w	lr, r1, r7
 8004d8c:	f1de 0100 	rsbs	r1, lr, #0
 8004d90:	eb41 010e 	adc.w	r1, r1, lr
 8004d94:	200a      	movs	r0, #10
 8004d96:	f7fb fd63 	bl	8000860 <_test_assert>
 8004d9a:	2800      	cmp	r0, #0
 8004d9c:	f47f af63 	bne.w	8004c66 <mtx4_execute+0x56>
 8004da0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004da4:	f7fd fd1c 	bl	80027e0 <chThdSleep>
 8004da8:	69ab      	ldr	r3, [r5, #24]
 8004daa:	6899      	ldr	r1, [r3, #8]
 8004dac:	eba1 0c08 	sub.w	ip, r1, r8
 8004db0:	f1dc 0100 	rsbs	r1, ip, #0
 8004db4:	eb41 010c 	adc.w	r1, r1, ip
 8004db8:	200b      	movs	r0, #11
 8004dba:	f7fb fd51 	bl	8000860 <_test_assert>
 8004dbe:	4606      	mov	r6, r0
 8004dc0:	2800      	cmp	r0, #0
 8004dc2:	f47f af50 	bne.w	8004c66 <mtx4_execute+0x56>
 8004dc6:	2320      	movs	r3, #32
 8004dc8:	f383 8811 	msr	BASEPRI, r3
 8004dcc:	4822      	ldr	r0, [pc, #136]	; (8004e58 <mtx4_execute+0x248>)
 8004dce:	f7fc f93f 	bl	8001050 <chMtxUnlockS>
 8004dd2:	f7fc fc2d 	bl	8001630 <chSchRescheduleS>
 8004dd6:	f386 8811 	msr	BASEPRI, r6
 8004dda:	69ab      	ldr	r3, [r5, #24]
 8004ddc:	6899      	ldr	r1, [r3, #8]
 8004dde:	1bce      	subs	r6, r1, r7
 8004de0:	4271      	negs	r1, r6
 8004de2:	4171      	adcs	r1, r6
 8004de4:	200c      	movs	r0, #12
 8004de6:	f7fb fd3b 	bl	8000860 <_test_assert>
 8004dea:	2800      	cmp	r0, #0
 8004dec:	f47f af3b 	bne.w	8004c66 <mtx4_execute+0x56>
 8004df0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004df4:	f7fd fcf4 	bl	80027e0 <chThdSleep>
 8004df8:	69ab      	ldr	r3, [r5, #24]
 8004dfa:	6899      	ldr	r1, [r3, #8]
 8004dfc:	1bca      	subs	r2, r1, r7
 8004dfe:	4251      	negs	r1, r2
 8004e00:	4151      	adcs	r1, r2
 8004e02:	200d      	movs	r0, #13
 8004e04:	f7fb fd2c 	bl	8000860 <_test_assert>
 8004e08:	2800      	cmp	r0, #0
 8004e0a:	f47f af2c 	bne.w	8004c66 <mtx4_execute+0x56>
 8004e0e:	f7fc fc37 	bl	8001680 <chMtxUnlockAll>
 8004e12:	69ab      	ldr	r3, [r5, #24]
 8004e14:	6899      	ldr	r1, [r3, #8]
 8004e16:	1b0b      	subs	r3, r1, r4
 8004e18:	4259      	negs	r1, r3
 8004e1a:	4159      	adcs	r1, r3
 8004e1c:	200e      	movs	r0, #14
 8004e1e:	f7fb fd1f 	bl	8000860 <_test_assert>
 8004e22:	2800      	cmp	r0, #0
 8004e24:	f47f af1f 	bne.w	8004c66 <mtx4_execute+0x56>
 8004e28:	b002      	add	sp, #8
 8004e2a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004e2e:	f7fe be87 	b.w	8003b40 <test_wait_threads>
 8004e32:	bf00      	nop
 8004e34:	20000930 	.word	0x20000930
 8004e38:	08005ee0 	.word	0x08005ee0
 8004e3c:	08003131 	.word	0x08003131
 8004e40:	20000bc0 	.word	0x20000bc0
 8004e44:	200014fc 	.word	0x200014fc
 8004e48:	08005ef0 	.word	0x08005ef0
 8004e4c:	20000d90 	.word	0x20000d90
 8004e50:	08003151 	.word	0x08003151
 8004e54:	20000844 	.word	0x20000844
 8004e58:	20000834 	.word	0x20000834
 8004e5c:	08005ee8 	.word	0x08005ee8
 8004e60:	08005ee4 	.word	0x08005ee4
	...

08004e70 <mtx1_execute>:
 8004e70:	b570      	push	{r4, r5, r6, lr}
 8004e72:	4e29      	ldr	r6, [pc, #164]	; (8004f18 <mtx1_execute+0xa8>)
 8004e74:	4829      	ldr	r0, [pc, #164]	; (8004f1c <mtx1_execute+0xac>)
 8004e76:	69b3      	ldr	r3, [r6, #24]
 8004e78:	4d29      	ldr	r5, [pc, #164]	; (8004f20 <mtx1_execute+0xb0>)
 8004e7a:	689c      	ldr	r4, [r3, #8]
 8004e7c:	b082      	sub	sp, #8
 8004e7e:	f7fe f807 	bl	8002e90 <chMtxLock>
 8004e82:	4b28      	ldr	r3, [pc, #160]	; (8004f24 <mtx1_execute+0xb4>)
 8004e84:	9300      	str	r3, [sp, #0]
 8004e86:	1c62      	adds	r2, r4, #1
 8004e88:	4b27      	ldr	r3, [pc, #156]	; (8004f28 <mtx1_execute+0xb8>)
 8004e8a:	4828      	ldr	r0, [pc, #160]	; (8004f2c <mtx1_execute+0xbc>)
 8004e8c:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004e90:	f7fc fdde 	bl	8001a50 <chThdCreateStatic>
 8004e94:	4b26      	ldr	r3, [pc, #152]	; (8004f30 <mtx1_execute+0xc0>)
 8004e96:	6028      	str	r0, [r5, #0]
 8004e98:	1ca2      	adds	r2, r4, #2
 8004e9a:	9300      	str	r3, [sp, #0]
 8004e9c:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004ea0:	4b21      	ldr	r3, [pc, #132]	; (8004f28 <mtx1_execute+0xb8>)
 8004ea2:	4824      	ldr	r0, [pc, #144]	; (8004f34 <mtx1_execute+0xc4>)
 8004ea4:	f7fc fdd4 	bl	8001a50 <chThdCreateStatic>
 8004ea8:	4b23      	ldr	r3, [pc, #140]	; (8004f38 <mtx1_execute+0xc8>)
 8004eaa:	6068      	str	r0, [r5, #4]
 8004eac:	1ce2      	adds	r2, r4, #3
 8004eae:	9300      	str	r3, [sp, #0]
 8004eb0:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004eb4:	4b1c      	ldr	r3, [pc, #112]	; (8004f28 <mtx1_execute+0xb8>)
 8004eb6:	4821      	ldr	r0, [pc, #132]	; (8004f3c <mtx1_execute+0xcc>)
 8004eb8:	f7fc fdca 	bl	8001a50 <chThdCreateStatic>
 8004ebc:	4b20      	ldr	r3, [pc, #128]	; (8004f40 <mtx1_execute+0xd0>)
 8004ebe:	60a8      	str	r0, [r5, #8]
 8004ec0:	1d22      	adds	r2, r4, #4
 8004ec2:	9300      	str	r3, [sp, #0]
 8004ec4:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004ec8:	4b17      	ldr	r3, [pc, #92]	; (8004f28 <mtx1_execute+0xb8>)
 8004eca:	481e      	ldr	r0, [pc, #120]	; (8004f44 <mtx1_execute+0xd4>)
 8004ecc:	f7fc fdc0 	bl	8001a50 <chThdCreateStatic>
 8004ed0:	4b1d      	ldr	r3, [pc, #116]	; (8004f48 <mtx1_execute+0xd8>)
 8004ed2:	60e8      	str	r0, [r5, #12]
 8004ed4:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004ed8:	1d62      	adds	r2, r4, #5
 8004eda:	9300      	str	r3, [sp, #0]
 8004edc:	481b      	ldr	r0, [pc, #108]	; (8004f4c <mtx1_execute+0xdc>)
 8004ede:	4b12      	ldr	r3, [pc, #72]	; (8004f28 <mtx1_execute+0xb8>)
 8004ee0:	f7fc fdb6 	bl	8001a50 <chThdCreateStatic>
 8004ee4:	6128      	str	r0, [r5, #16]
 8004ee6:	480d      	ldr	r0, [pc, #52]	; (8004f1c <mtx1_execute+0xac>)
 8004ee8:	f7fc fd62 	bl	80019b0 <chMtxUnlock>
 8004eec:	f7fe fe28 	bl	8003b40 <test_wait_threads>
 8004ef0:	69b3      	ldr	r3, [r6, #24]
 8004ef2:	6899      	ldr	r1, [r3, #8]
 8004ef4:	1b09      	subs	r1, r1, r4
 8004ef6:	fab1 f181 	clz	r1, r1
 8004efa:	2001      	movs	r0, #1
 8004efc:	0949      	lsrs	r1, r1, #5
 8004efe:	f7fb fcaf 	bl	8000860 <_test_assert>
 8004f02:	b108      	cbz	r0, 8004f08 <mtx1_execute+0x98>
 8004f04:	b002      	add	sp, #8
 8004f06:	bd70      	pop	{r4, r5, r6, pc}
 8004f08:	4911      	ldr	r1, [pc, #68]	; (8004f50 <mtx1_execute+0xe0>)
 8004f0a:	2002      	movs	r0, #2
 8004f0c:	b002      	add	sp, #8
 8004f0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004f12:	f7fb bc7d 	b.w	8000810 <_test_assert_sequence>
 8004f16:	bf00      	nop
 8004f18:	20000930 	.word	0x20000930
 8004f1c:	20000834 	.word	0x20000834
 8004f20:	200014fc 	.word	0x200014fc
 8004f24:	08006144 	.word	0x08006144
 8004f28:	08003171 	.word	0x08003171
 8004f2c:	20000bc0 	.word	0x20000bc0
 8004f30:	08005ee8 	.word	0x08005ee8
 8004f34:	20000d90 	.word	0x20000d90
 8004f38:	08005ee4 	.word	0x08005ee4
 8004f3c:	20000f60 	.word	0x20000f60
 8004f40:	08005ee0 	.word	0x08005ee0
 8004f44:	20001130 	.word	0x20001130
 8004f48:	08005ef0 	.word	0x08005ef0
 8004f4c:	20001300 	.word	0x20001300
 8004f50:	08006140 	.word	0x08006140
	...

08004f60 <sem2_execute>:
 8004f60:	b570      	push	{r4, r5, r6, lr}
 8004f62:	2320      	movs	r3, #32
 8004f64:	b082      	sub	sp, #8
 8004f66:	f383 8811 	msr	BASEPRI, r3
 8004f6a:	4c4b      	ldr	r4, [pc, #300]	; (8005098 <sem2_execute+0x138>)
 8004f6c:	68a3      	ldr	r3, [r4, #8]
 8004f6e:	3b01      	subs	r3, #1
 8004f70:	bf5a      	itte	pl
 8004f72:	60a3      	strpl	r3, [r4, #8]
 8004f74:	2100      	movpl	r1, #0
 8004f76:	2101      	movmi	r1, #1
 8004f78:	2300      	movs	r3, #0
 8004f7a:	f383 8811 	msr	BASEPRI, r3
 8004f7e:	2001      	movs	r0, #1
 8004f80:	f7fb fc6e 	bl	8000860 <_test_assert>
 8004f84:	b108      	cbz	r0, 8004f8a <sem2_execute+0x2a>
 8004f86:	b002      	add	sp, #8
 8004f88:	bd70      	pop	{r4, r5, r6, pc}
 8004f8a:	6821      	ldr	r1, [r4, #0]
 8004f8c:	1b09      	subs	r1, r1, r4
 8004f8e:	fab1 f181 	clz	r1, r1
 8004f92:	2002      	movs	r0, #2
 8004f94:	0949      	lsrs	r1, r1, #5
 8004f96:	f7fb fc63 	bl	8000860 <_test_assert>
 8004f9a:	2800      	cmp	r0, #0
 8004f9c:	d1f3      	bne.n	8004f86 <sem2_execute+0x26>
 8004f9e:	68a1      	ldr	r1, [r4, #8]
 8004fa0:	fab1 f181 	clz	r1, r1
 8004fa4:	0949      	lsrs	r1, r1, #5
 8004fa6:	2003      	movs	r0, #3
 8004fa8:	f7fb fc5a 	bl	8000860 <_test_assert>
 8004fac:	4601      	mov	r1, r0
 8004fae:	2800      	cmp	r0, #0
 8004fb0:	d1e9      	bne.n	8004f86 <sem2_execute+0x26>
 8004fb2:	4a3a      	ldr	r2, [pc, #232]	; (800509c <sem2_execute+0x13c>)
 8004fb4:	4b3a      	ldr	r3, [pc, #232]	; (80050a0 <sem2_execute+0x140>)
 8004fb6:	6992      	ldr	r2, [r2, #24]
 8004fb8:	483a      	ldr	r0, [pc, #232]	; (80050a4 <sem2_execute+0x144>)
 8004fba:	6892      	ldr	r2, [r2, #8]
 8004fbc:	9100      	str	r1, [sp, #0]
 8004fbe:	3a01      	subs	r2, #1
 8004fc0:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8004fc4:	f7fc fd44 	bl	8001a50 <chThdCreateStatic>
 8004fc8:	4b37      	ldr	r3, [pc, #220]	; (80050a8 <sem2_execute+0x148>)
 8004fca:	6018      	str	r0, [r3, #0]
 8004fcc:	f241 3088 	movw	r0, #5000	; 0x1388
 8004fd0:	f7fc fe86 	bl	8001ce0 <chSemWaitTimeout.constprop.50>
 8004fd4:	4605      	mov	r5, r0
 8004fd6:	f7fe fdb3 	bl	8003b40 <test_wait_threads>
 8004fda:	fab5 f185 	clz	r1, r5
 8004fde:	0949      	lsrs	r1, r1, #5
 8004fe0:	2004      	movs	r0, #4
 8004fe2:	f7fb fc3d 	bl	8000860 <_test_assert>
 8004fe6:	2800      	cmp	r0, #0
 8004fe8:	d1cd      	bne.n	8004f86 <sem2_execute+0x26>
 8004fea:	6821      	ldr	r1, [r4, #0]
 8004fec:	1b09      	subs	r1, r1, r4
 8004fee:	fab1 f181 	clz	r1, r1
 8004ff2:	2005      	movs	r0, #5
 8004ff4:	0949      	lsrs	r1, r1, #5
 8004ff6:	f7fb fc33 	bl	8000860 <_test_assert>
 8004ffa:	2800      	cmp	r0, #0
 8004ffc:	d1c3      	bne.n	8004f86 <sem2_execute+0x26>
 8004ffe:	68a1      	ldr	r1, [r4, #8]
 8005000:	fab1 f181 	clz	r1, r1
 8005004:	0949      	lsrs	r1, r1, #5
 8005006:	2006      	movs	r0, #6
 8005008:	f7fb fc2a 	bl	8000860 <_test_assert>
 800500c:	4605      	mov	r5, r0
 800500e:	2800      	cmp	r0, #0
 8005010:	d1b9      	bne.n	8004f86 <sem2_execute+0x26>
 8005012:	f7fd fcc5 	bl	80029a0 <test_wait_tick>
 8005016:	2320      	movs	r3, #32
 8005018:	f383 8811 	msr	BASEPRI, r3
 800501c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8005020:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 8005022:	f385 8811 	msr	BASEPRI, r5
 8005026:	2541      	movs	r5, #65	; 0x41
 8005028:	4628      	mov	r0, r5
 800502a:	f7fb fc31 	bl	8000890 <test_emit_token>
 800502e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8005032:	f7fc fe55 	bl	8001ce0 <chSemWaitTimeout.constprop.50>
 8005036:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 800503a:	fab1 f181 	clz	r1, r1
 800503e:	0949      	lsrs	r1, r1, #5
 8005040:	2007      	movs	r0, #7
 8005042:	f7fb fc0d 	bl	8000860 <_test_assert>
 8005046:	2800      	cmp	r0, #0
 8005048:	d19d      	bne.n	8004f86 <sem2_execute+0x26>
 800504a:	6821      	ldr	r1, [r4, #0]
 800504c:	1b09      	subs	r1, r1, r4
 800504e:	fab1 f181 	clz	r1, r1
 8005052:	2008      	movs	r0, #8
 8005054:	0949      	lsrs	r1, r1, #5
 8005056:	f7fb fc03 	bl	8000860 <_test_assert>
 800505a:	2800      	cmp	r0, #0
 800505c:	d193      	bne.n	8004f86 <sem2_execute+0x26>
 800505e:	68a1      	ldr	r1, [r4, #8]
 8005060:	fab1 f181 	clz	r1, r1
 8005064:	0949      	lsrs	r1, r1, #5
 8005066:	2009      	movs	r0, #9
 8005068:	f7fb fbfa 	bl	8000860 <_test_assert>
 800506c:	3501      	adds	r5, #1
 800506e:	b2ed      	uxtb	r5, r5
 8005070:	2800      	cmp	r0, #0
 8005072:	d188      	bne.n	8004f86 <sem2_execute+0x26>
 8005074:	2d46      	cmp	r5, #70	; 0x46
 8005076:	d1d7      	bne.n	8005028 <sem2_execute+0xc8>
 8005078:	490c      	ldr	r1, [pc, #48]	; (80050ac <sem2_execute+0x14c>)
 800507a:	200a      	movs	r0, #10
 800507c:	f7fb fbc8 	bl	8000810 <_test_assert_sequence>
 8005080:	2800      	cmp	r0, #0
 8005082:	d180      	bne.n	8004f86 <sem2_execute+0x26>
 8005084:	f606 12d8 	addw	r2, r6, #2520	; 0x9d8
 8005088:	f606 11c4 	addw	r1, r6, #2500	; 0x9c4
 800508c:	200b      	movs	r0, #11
 800508e:	b002      	add	sp, #8
 8005090:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005094:	f7fb bb9c 	b.w	80007d0 <_test_assert_time_window>
 8005098:	200008ac 	.word	0x200008ac
 800509c:	20000930 	.word	0x20000930
 80050a0:	08002971 	.word	0x08002971
 80050a4:	20000bc0 	.word	0x20000bc0
 80050a8:	200014fc 	.word	0x200014fc
 80050ac:	08006140 	.word	0x08006140

080050b0 <sem1_execute>:
 80050b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80050b2:	4d4b      	ldr	r5, [pc, #300]	; (80051e0 <sem1_execute+0x130>)
 80050b4:	4f4b      	ldr	r7, [pc, #300]	; (80051e4 <sem1_execute+0x134>)
 80050b6:	69aa      	ldr	r2, [r5, #24]
 80050b8:	4b4b      	ldr	r3, [pc, #300]	; (80051e8 <sem1_execute+0x138>)
 80050ba:	6892      	ldr	r2, [r2, #8]
 80050bc:	484b      	ldr	r0, [pc, #300]	; (80051ec <sem1_execute+0x13c>)
 80050be:	4c4c      	ldr	r4, [pc, #304]	; (80051f0 <sem1_execute+0x140>)
 80050c0:	b083      	sub	sp, #12
 80050c2:	3205      	adds	r2, #5
 80050c4:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 80050c8:	9700      	str	r7, [sp, #0]
 80050ca:	f7fc fcc1 	bl	8001a50 <chThdCreateStatic>
 80050ce:	69ab      	ldr	r3, [r5, #24]
 80050d0:	689a      	ldr	r2, [r3, #8]
 80050d2:	4b48      	ldr	r3, [pc, #288]	; (80051f4 <sem1_execute+0x144>)
 80050d4:	6020      	str	r0, [r4, #0]
 80050d6:	3201      	adds	r2, #1
 80050d8:	9300      	str	r3, [sp, #0]
 80050da:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 80050de:	4b42      	ldr	r3, [pc, #264]	; (80051e8 <sem1_execute+0x138>)
 80050e0:	4845      	ldr	r0, [pc, #276]	; (80051f8 <sem1_execute+0x148>)
 80050e2:	f7fc fcb5 	bl	8001a50 <chThdCreateStatic>
 80050e6:	69aa      	ldr	r2, [r5, #24]
 80050e8:	4b44      	ldr	r3, [pc, #272]	; (80051fc <sem1_execute+0x14c>)
 80050ea:	6892      	ldr	r2, [r2, #8]
 80050ec:	6060      	str	r0, [r4, #4]
 80050ee:	3203      	adds	r2, #3
 80050f0:	9300      	str	r3, [sp, #0]
 80050f2:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 80050f6:	4b3c      	ldr	r3, [pc, #240]	; (80051e8 <sem1_execute+0x138>)
 80050f8:	4841      	ldr	r0, [pc, #260]	; (8005200 <sem1_execute+0x150>)
 80050fa:	f7fc fca9 	bl	8001a50 <chThdCreateStatic>
 80050fe:	69aa      	ldr	r2, [r5, #24]
 8005100:	4b40      	ldr	r3, [pc, #256]	; (8005204 <sem1_execute+0x154>)
 8005102:	6892      	ldr	r2, [r2, #8]
 8005104:	60a0      	str	r0, [r4, #8]
 8005106:	3204      	adds	r2, #4
 8005108:	9300      	str	r3, [sp, #0]
 800510a:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 800510e:	4b36      	ldr	r3, [pc, #216]	; (80051e8 <sem1_execute+0x138>)
 8005110:	483d      	ldr	r0, [pc, #244]	; (8005208 <sem1_execute+0x158>)
 8005112:	f7fc fc9d 	bl	8001a50 <chThdCreateStatic>
 8005116:	69aa      	ldr	r2, [r5, #24]
 8005118:	4b3c      	ldr	r3, [pc, #240]	; (800520c <sem1_execute+0x15c>)
 800511a:	6892      	ldr	r2, [r2, #8]
 800511c:	60e0      	str	r0, [r4, #12]
 800511e:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8005122:	3202      	adds	r2, #2
 8005124:	9300      	str	r3, [sp, #0]
 8005126:	483a      	ldr	r0, [pc, #232]	; (8005210 <sem1_execute+0x160>)
 8005128:	4b2f      	ldr	r3, [pc, #188]	; (80051e8 <sem1_execute+0x138>)
 800512a:	f7fc fc91 	bl	8001a50 <chThdCreateStatic>
 800512e:	6120      	str	r0, [r4, #16]
 8005130:	4838      	ldr	r0, [pc, #224]	; (8005214 <sem1_execute+0x164>)
 8005132:	f7fc fc6d 	bl	8001a10 <chSemSignal>
 8005136:	4837      	ldr	r0, [pc, #220]	; (8005214 <sem1_execute+0x164>)
 8005138:	f7fc fc6a 	bl	8001a10 <chSemSignal>
 800513c:	4835      	ldr	r0, [pc, #212]	; (8005214 <sem1_execute+0x164>)
 800513e:	f7fc fc67 	bl	8001a10 <chSemSignal>
 8005142:	4834      	ldr	r0, [pc, #208]	; (8005214 <sem1_execute+0x164>)
 8005144:	f7fc fc64 	bl	8001a10 <chSemSignal>
 8005148:	4832      	ldr	r0, [pc, #200]	; (8005214 <sem1_execute+0x164>)
 800514a:	f7fc fc61 	bl	8001a10 <chSemSignal>
 800514e:	f7fe fcf7 	bl	8003b40 <test_wait_threads>
 8005152:	4931      	ldr	r1, [pc, #196]	; (8005218 <sem1_execute+0x168>)
 8005154:	2001      	movs	r0, #1
 8005156:	f7fb fb5b 	bl	8000810 <_test_assert_sequence>
 800515a:	b108      	cbz	r0, 8005160 <sem1_execute+0xb0>
 800515c:	b003      	add	sp, #12
 800515e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005160:	69aa      	ldr	r2, [r5, #24]
 8005162:	4b21      	ldr	r3, [pc, #132]	; (80051e8 <sem1_execute+0x138>)
 8005164:	6892      	ldr	r2, [r2, #8]
 8005166:	9700      	str	r7, [sp, #0]
 8005168:	4606      	mov	r6, r0
 800516a:	3205      	adds	r2, #5
 800516c:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8005170:	481e      	ldr	r0, [pc, #120]	; (80051ec <sem1_execute+0x13c>)
 8005172:	f7fc fc6d 	bl	8001a50 <chThdCreateStatic>
 8005176:	2320      	movs	r3, #32
 8005178:	6020      	str	r0, [r4, #0]
 800517a:	f383 8811 	msr	BASEPRI, r3
 800517e:	2502      	movs	r5, #2
 8005180:	4c24      	ldr	r4, [pc, #144]	; (8005214 <sem1_execute+0x164>)
 8005182:	e002      	b.n	800518a <sem1_execute+0xda>
 8005184:	2d01      	cmp	r5, #1
 8005186:	d00e      	beq.n	80051a6 <sem1_execute+0xf6>
 8005188:	2501      	movs	r5, #1
 800518a:	68a3      	ldr	r3, [r4, #8]
 800518c:	3301      	adds	r3, #1
 800518e:	2b00      	cmp	r3, #0
 8005190:	60a3      	str	r3, [r4, #8]
 8005192:	dcf7      	bgt.n	8005184 <sem1_execute+0xd4>
 8005194:	6820      	ldr	r0, [r4, #0]
 8005196:	6803      	ldr	r3, [r0, #0]
 8005198:	6023      	str	r3, [r4, #0]
 800519a:	605c      	str	r4, [r3, #4]
 800519c:	f7fb fe00 	bl	8000da0 <chSchReadyI>
 80051a0:	2d01      	cmp	r5, #1
 80051a2:	6206      	str	r6, [r0, #32]
 80051a4:	d1f0      	bne.n	8005188 <sem1_execute+0xd8>
 80051a6:	f7fc fa43 	bl	8001630 <chSchRescheduleS>
 80051aa:	2500      	movs	r5, #0
 80051ac:	f385 8811 	msr	BASEPRI, r5
 80051b0:	f7fe fcc6 	bl	8003b40 <test_wait_threads>
 80051b4:	2320      	movs	r3, #32
 80051b6:	f383 8811 	msr	BASEPRI, r3
 80051ba:	68a1      	ldr	r1, [r4, #8]
 80051bc:	f1a1 0101 	sub.w	r1, r1, #1
 80051c0:	fab1 f181 	clz	r1, r1
 80051c4:	2002      	movs	r0, #2
 80051c6:	0949      	lsrs	r1, r1, #5
 80051c8:	f7fb fb4a 	bl	8000860 <_test_assert>
 80051cc:	b918      	cbnz	r0, 80051d6 <sem1_execute+0x126>
 80051ce:	f380 8811 	msr	BASEPRI, r0
 80051d2:	b003      	add	sp, #12
 80051d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80051d6:	f385 8811 	msr	BASEPRI, r5
 80051da:	b003      	add	sp, #12
 80051dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80051de:	bf00      	nop
 80051e0:	20000930 	.word	0x20000930
 80051e4:	08005ef0 	.word	0x08005ef0
 80051e8:	08003a61 	.word	0x08003a61
 80051ec:	20000bc0 	.word	0x20000bc0
 80051f0:	200014fc 	.word	0x200014fc
 80051f4:	08005ee0 	.word	0x08005ee0
 80051f8:	20000d90 	.word	0x20000d90
 80051fc:	08005ee4 	.word	0x08005ee4
 8005200:	20000f60 	.word	0x20000f60
 8005204:	08005ee8 	.word	0x08005ee8
 8005208:	20001130 	.word	0x20001130
 800520c:	08006144 	.word	0x08006144
 8005210:	20001300 	.word	0x20001300
 8005214:	200008ac 	.word	0x200008ac
 8005218:	08006140 	.word	0x08006140
 800521c:	00000000 	.word	0x00000000

08005220 <thd2_execute>:
 8005220:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005224:	4d41      	ldr	r5, [pc, #260]	; (800532c <thd2_execute+0x10c>)
 8005226:	4f42      	ldr	r7, [pc, #264]	; (8005330 <thd2_execute+0x110>)
 8005228:	69ab      	ldr	r3, [r5, #24]
 800522a:	4c42      	ldr	r4, [pc, #264]	; (8005334 <thd2_execute+0x114>)
 800522c:	689a      	ldr	r2, [r3, #8]
 800522e:	4b42      	ldr	r3, [pc, #264]	; (8005338 <thd2_execute+0x118>)
 8005230:	4e42      	ldr	r6, [pc, #264]	; (800533c <thd2_execute+0x11c>)
 8005232:	b082      	sub	sp, #8
 8005234:	3a04      	subs	r2, #4
 8005236:	9300      	str	r3, [sp, #0]
 8005238:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 800523c:	463b      	mov	r3, r7
 800523e:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8005242:	f7fc fc05 	bl	8001a50 <chThdCreateStatic>
 8005246:	69ab      	ldr	r3, [r5, #24]
 8005248:	493d      	ldr	r1, [pc, #244]	; (8005340 <thd2_execute+0x120>)
 800524a:	689a      	ldr	r2, [r3, #8]
 800524c:	6070      	str	r0, [r6, #4]
 800524e:	463b      	mov	r3, r7
 8005250:	9100      	str	r1, [sp, #0]
 8005252:	3a05      	subs	r2, #5
 8005254:	4620      	mov	r0, r4
 8005256:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 800525a:	f7fc fbf9 	bl	8001a50 <chThdCreateStatic>
 800525e:	69ab      	ldr	r3, [r5, #24]
 8005260:	4938      	ldr	r1, [pc, #224]	; (8005344 <thd2_execute+0x124>)
 8005262:	689a      	ldr	r2, [r3, #8]
 8005264:	6030      	str	r0, [r6, #0]
 8005266:	463b      	mov	r3, r7
 8005268:	9100      	str	r1, [sp, #0]
 800526a:	3a01      	subs	r2, #1
 800526c:	f504 60e8 	add.w	r0, r4, #1856	; 0x740
 8005270:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8005274:	f7fc fbec 	bl	8001a50 <chThdCreateStatic>
 8005278:	69ab      	ldr	r3, [r5, #24]
 800527a:	4933      	ldr	r1, [pc, #204]	; (8005348 <thd2_execute+0x128>)
 800527c:	689a      	ldr	r2, [r3, #8]
 800527e:	6130      	str	r0, [r6, #16]
 8005280:	9100      	str	r1, [sp, #0]
 8005282:	3a02      	subs	r2, #2
 8005284:	463b      	mov	r3, r7
 8005286:	f504 60ae 	add.w	r0, r4, #1392	; 0x570
 800528a:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 800528e:	f7fc fbdf 	bl	8001a50 <chThdCreateStatic>
 8005292:	2220      	movs	r2, #32
 8005294:	60f0      	str	r0, [r6, #12]
 8005296:	f382 8811 	msr	BASEPRI, r2
 800529a:	e9d5 1305 	ldrd	r1, r3, [r5, #20]
 800529e:	689b      	ldr	r3, [r3, #8]
 80052a0:	f8c4 754c 	str.w	r7, [r4, #1356]	; 0x54c
 80052a4:	3b03      	subs	r3, #3
 80052a6:	f204 570c 	addw	r7, r4, #1292	; 0x50c
 80052aa:	f8c4 33a8 	str.w	r3, [r4, #936]	; 0x3a8
 80052ae:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
 80052b2:	f8c4 73ac 	str.w	r7, [r4, #940]	; 0x3ac
 80052b6:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80052ba:	2700      	movs	r7, #0
 80052bc:	f8df e090 	ldr.w	lr, [pc, #144]	; 8005350 <thd2_execute+0x130>
 80052c0:	f8df c090 	ldr.w	ip, [pc, #144]	; 8005354 <thd2_execute+0x134>
 80052c4:	f8c4 13b4 	str.w	r1, [r4, #948]	; 0x3b4
 80052c8:	2002      	movs	r0, #2
 80052ca:	f04f 0801 	mov.w	r8, #1
 80052ce:	f8a4 03bc 	strh.w	r0, [r4, #956]	; 0x3bc
 80052d2:	f8c4 53b0 	str.w	r5, [r4, #944]	; 0x3b0
 80052d6:	f8c4 e550 	str.w	lr, [r4, #1360]	; 0x550
 80052da:	f8c4 c56c 	str.w	ip, [r4, #1388]	; 0x56c
 80052de:	f504 7071 	add.w	r0, r4, #964	; 0x3c4
 80052e2:	f8c4 73d8 	str.w	r7, [r4, #984]	; 0x3d8
 80052e6:	f8c4 73d4 	str.w	r7, [r4, #980]	; 0x3d4
 80052ea:	f8c4 73b8 	str.w	r7, [r4, #952]	; 0x3b8
 80052ee:	f884 83be 	strb.w	r8, [r4, #958]	; 0x3be
 80052f2:	610b      	str	r3, [r1, #16]
 80052f4:	f504 7172 	add.w	r1, r4, #968	; 0x3c8
 80052f8:	616b      	str	r3, [r5, #20]
 80052fa:	60b3      	str	r3, [r6, #8]
 80052fc:	f8c4 03c4 	str.w	r0, [r4, #964]	; 0x3c4
 8005300:	f8c4 13c8 	str.w	r1, [r4, #968]	; 0x3c8
 8005304:	f8c4 13cc 	str.w	r1, [r4, #972]	; 0x3cc
 8005308:	f387 8811 	msr	BASEPRI, r7
 800530c:	68b0      	ldr	r0, [r6, #8]
 800530e:	f382 8811 	msr	BASEPRI, r2
 8005312:	f7fb fd45 	bl	8000da0 <chSchReadyI>
 8005316:	f387 8811 	msr	BASEPRI, r7
 800531a:	f7fe fc11 	bl	8003b40 <test_wait_threads>
 800531e:	490b      	ldr	r1, [pc, #44]	; (800534c <thd2_execute+0x12c>)
 8005320:	4640      	mov	r0, r8
 8005322:	b002      	add	sp, #8
 8005324:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005328:	f7fb ba72 	b.w	8000810 <_test_assert_sequence>
 800532c:	20000930 	.word	0x20000930
 8005330:	080008e1 	.word	0x080008e1
 8005334:	20000bc0 	.word	0x20000bc0
 8005338:	08005ee8 	.word	0x08005ee8
 800533c:	200014fc 	.word	0x200014fc
 8005340:	08006144 	.word	0x08006144
 8005344:	08005ef0 	.word	0x08005ef0
 8005348:	08005ee0 	.word	0x08005ee0
 800534c:	08006140 	.word	0x08006140
 8005350:	08005ee4 	.word	0x08005ee4
 8005354:	080002c9 	.word	0x080002c9
	...

08005360 <thd1_execute>:
 8005360:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005362:	4f27      	ldr	r7, [pc, #156]	; (8005400 <thd1_execute+0xa0>)
 8005364:	4e27      	ldr	r6, [pc, #156]	; (8005404 <thd1_execute+0xa4>)
 8005366:	69bb      	ldr	r3, [r7, #24]
 8005368:	4d27      	ldr	r5, [pc, #156]	; (8005408 <thd1_execute+0xa8>)
 800536a:	689a      	ldr	r2, [r3, #8]
 800536c:	4b27      	ldr	r3, [pc, #156]	; (800540c <thd1_execute+0xac>)
 800536e:	4c28      	ldr	r4, [pc, #160]	; (8005410 <thd1_execute+0xb0>)
 8005370:	b083      	sub	sp, #12
 8005372:	3a05      	subs	r2, #5
 8005374:	9300      	str	r3, [sp, #0]
 8005376:	4628      	mov	r0, r5
 8005378:	4633      	mov	r3, r6
 800537a:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 800537e:	f7fc fb67 	bl	8001a50 <chThdCreateStatic>
 8005382:	69bb      	ldr	r3, [r7, #24]
 8005384:	4923      	ldr	r1, [pc, #140]	; (8005414 <thd1_execute+0xb4>)
 8005386:	689a      	ldr	r2, [r3, #8]
 8005388:	6020      	str	r0, [r4, #0]
 800538a:	4633      	mov	r3, r6
 800538c:	9100      	str	r1, [sp, #0]
 800538e:	3a04      	subs	r2, #4
 8005390:	f505 70e8 	add.w	r0, r5, #464	; 0x1d0
 8005394:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8005398:	f7fc fb5a 	bl	8001a50 <chThdCreateStatic>
 800539c:	69bb      	ldr	r3, [r7, #24]
 800539e:	491e      	ldr	r1, [pc, #120]	; (8005418 <thd1_execute+0xb8>)
 80053a0:	689a      	ldr	r2, [r3, #8]
 80053a2:	6060      	str	r0, [r4, #4]
 80053a4:	4633      	mov	r3, r6
 80053a6:	9100      	str	r1, [sp, #0]
 80053a8:	3a03      	subs	r2, #3
 80053aa:	f505 7068 	add.w	r0, r5, #928	; 0x3a0
 80053ae:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 80053b2:	f7fc fb4d 	bl	8001a50 <chThdCreateStatic>
 80053b6:	69bb      	ldr	r3, [r7, #24]
 80053b8:	4918      	ldr	r1, [pc, #96]	; (800541c <thd1_execute+0xbc>)
 80053ba:	689a      	ldr	r2, [r3, #8]
 80053bc:	60a0      	str	r0, [r4, #8]
 80053be:	4633      	mov	r3, r6
 80053c0:	9100      	str	r1, [sp, #0]
 80053c2:	3a02      	subs	r2, #2
 80053c4:	f505 60ae 	add.w	r0, r5, #1392	; 0x570
 80053c8:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 80053cc:	f7fc fb40 	bl	8001a50 <chThdCreateStatic>
 80053d0:	69bb      	ldr	r3, [r7, #24]
 80053d2:	4913      	ldr	r1, [pc, #76]	; (8005420 <thd1_execute+0xc0>)
 80053d4:	689a      	ldr	r2, [r3, #8]
 80053d6:	60e0      	str	r0, [r4, #12]
 80053d8:	3a01      	subs	r2, #1
 80053da:	4633      	mov	r3, r6
 80053dc:	9100      	str	r1, [sp, #0]
 80053de:	f505 60e8 	add.w	r0, r5, #1856	; 0x740
 80053e2:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 80053e6:	f7fc fb33 	bl	8001a50 <chThdCreateStatic>
 80053ea:	6120      	str	r0, [r4, #16]
 80053ec:	f7fe fba8 	bl	8003b40 <test_wait_threads>
 80053f0:	490c      	ldr	r1, [pc, #48]	; (8005424 <thd1_execute+0xc4>)
 80053f2:	2001      	movs	r0, #1
 80053f4:	b003      	add	sp, #12
 80053f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80053fa:	f7fb ba09 	b.w	8000810 <_test_assert_sequence>
 80053fe:	bf00      	nop
 8005400:	20000930 	.word	0x20000930
 8005404:	080008e1 	.word	0x080008e1
 8005408:	20000bc0 	.word	0x20000bc0
 800540c:	08006144 	.word	0x08006144
 8005410:	200014fc 	.word	0x200014fc
 8005414:	08005ee8 	.word	0x08005ee8
 8005418:	08005ee4 	.word	0x08005ee4
 800541c:	08005ee0 	.word	0x08005ee0
 8005420:	08005ef0 	.word	0x08005ef0
 8005424:	08006140 	.word	0x08006140
	...

08005430 <main>:
 8005430:	4bc8      	ldr	r3, [pc, #800]	; (8005754 <main+0x324>)
 8005432:	4cc9      	ldr	r4, [pc, #804]	; (8005758 <main+0x328>)
 8005434:	691a      	ldr	r2, [r3, #16]
 8005436:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800543a:	2200      	movs	r2, #0
 800543c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8005440:	6119      	str	r1, [r3, #16]
 8005442:	611a      	str	r2, [r3, #16]
 8005444:	6958      	ldr	r0, [r3, #20]
 8005446:	6159      	str	r1, [r3, #20]
 8005448:	615a      	str	r2, [r3, #20]
 800544a:	6a18      	ldr	r0, [r3, #32]
 800544c:	f060 5080 	orn	r0, r0, #268435456	; 0x10000000
 8005450:	6218      	str	r0, [r3, #32]
 8005452:	621a      	str	r2, [r3, #32]
 8005454:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8005456:	6259      	str	r1, [r3, #36]	; 0x24
 8005458:	625a      	str	r2, [r3, #36]	; 0x24
 800545a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800545c:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8005460:	6419      	str	r1, [r3, #64]	; 0x40
 8005462:	6821      	ldr	r1, [r4, #0]
 8005464:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8005468:	6021      	str	r1, [r4, #0]
 800546a:	6f19      	ldr	r1, [r3, #112]	; 0x70
 800546c:	f401 7140 	and.w	r1, r1, #768	; 0x300
 8005470:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8005474:	b08d      	sub	sp, #52	; 0x34
 8005476:	d003      	beq.n	8005480 <main+0x50>
 8005478:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 800547c:	6719      	str	r1, [r3, #112]	; 0x70
 800547e:	671a      	str	r2, [r3, #112]	; 0x70
 8005480:	4fb5      	ldr	r7, [pc, #724]	; (8005758 <main+0x328>)
 8005482:	4db4      	ldr	r5, [pc, #720]	; (8005754 <main+0x324>)
 8005484:	687b      	ldr	r3, [r7, #4]
 8005486:	4ab5      	ldr	r2, [pc, #724]	; (800575c <main+0x32c>)
 8005488:	f8df 8314 	ldr.w	r8, [pc, #788]	; 80057a0 <main+0x370>
 800548c:	f8df c314 	ldr.w	ip, [pc, #788]	; 80057a4 <main+0x374>
 8005490:	f8df a314 	ldr.w	sl, [pc, #788]	; 80057a8 <main+0x378>
 8005494:	f8df 9314 	ldr.w	r9, [pc, #788]	; 80057ac <main+0x37c>
 8005498:	4eb1      	ldr	r6, [pc, #708]	; (8005760 <main+0x330>)
 800549a:	4cb2      	ldr	r4, [pc, #712]	; (8005764 <main+0x334>)
 800549c:	48b2      	ldr	r0, [pc, #712]	; (8005768 <main+0x338>)
 800549e:	49b3      	ldr	r1, [pc, #716]	; (800576c <main+0x33c>)
 80054a0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80054a4:	607b      	str	r3, [r7, #4]
 80054a6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80054a8:	4fb1      	ldr	r7, [pc, #708]	; (8005770 <main+0x340>)
 80054aa:	f043 031f 	orr.w	r3, r3, #31
 80054ae:	632b      	str	r3, [r5, #48]	; 0x30
 80054b0:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 80054b2:	f043 0e1f 	orr.w	lr, r3, #31
 80054b6:	f8c5 e050 	str.w	lr, [r5, #80]	; 0x50
 80054ba:	2300      	movs	r3, #0
 80054bc:	f46f 4ea8 	mvn.w	lr, #21504	; 0x5400
 80054c0:	6053      	str	r3, [r2, #4]
 80054c2:	f8c2 e008 	str.w	lr, [r2, #8]
 80054c6:	f8c2 800c 	str.w	r8, [r2, #12]
 80054ca:	f64f 78ff 	movw	r8, #65535	; 0xffff
 80054ce:	f8c2 8014 	str.w	r8, [r2, #20]
 80054d2:	f8c2 a020 	str.w	sl, [r2, #32]
 80054d6:	f8c2 9024 	str.w	r9, [r2, #36]	; 0x24
 80054da:	f44f 7910 	mov.w	r9, #576	; 0x240
 80054de:	6017      	str	r7, [r2, #0]
 80054e0:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 80054e4:	f8cc 9004 	str.w	r9, [ip, #4]
 80054e8:	4fa2      	ldr	r7, [pc, #648]	; (8005774 <main+0x344>)
 80054ea:	f8cc a008 	str.w	sl, [ip, #8]
 80054ee:	f04f 6980 	mov.w	r9, #67108864	; 0x4000000
 80054f2:	f8cc 700c 	str.w	r7, [ip, #12]
 80054f6:	f8cc 8014 	str.w	r8, [ip, #20]
 80054fa:	f8cc 9020 	str.w	r9, [ip, #32]
 80054fe:	f8df 92b0 	ldr.w	r9, [pc, #688]	; 80057b0 <main+0x380>
 8005502:	f8df e274 	ldr.w	lr, [pc, #628]	; 8005778 <main+0x348>
 8005506:	4f9c      	ldr	r7, [pc, #624]	; (8005778 <main+0x348>)
 8005508:	2240      	movs	r2, #64	; 0x40
 800550a:	f8cc 2024 	str.w	r2, [ip, #36]	; 0x24
 800550e:	f8cc 9000 	str.w	r9, [ip]
 8005512:	f109 49aa 	add.w	r9, r9, #1426063360	; 0x55000000
 8005516:	f5a9 0943 	sub.w	r9, r9, #12779520	; 0xc30000
 800551a:	f6a9 392c 	subw	r9, r9, #2860	; 0xb2c
 800551e:	6073      	str	r3, [r6, #4]
 8005520:	f8c6 a008 	str.w	sl, [r6, #8]
 8005524:	f8c6 900c 	str.w	r9, [r6, #12]
 8005528:	f04f 49c0 	mov.w	r9, #1610612736	; 0x60000000
 800552c:	f8c6 8014 	str.w	r8, [r6, #20]
 8005530:	f8df c280 	ldr.w	ip, [pc, #640]	; 80057b4 <main+0x384>
 8005534:	f8c6 9020 	str.w	r9, [r6, #32]
 8005538:	f8df 927c 	ldr.w	r9, [pc, #636]	; 80057b8 <main+0x388>
 800553c:	f8c6 c024 	str.w	ip, [r6, #36]	; 0x24
 8005540:	f8c6 9000 	str.w	r9, [r6]
 8005544:	f8df c274 	ldr.w	ip, [pc, #628]	; 80057bc <main+0x38c>
 8005548:	f8df 9274 	ldr.w	r9, [pc, #628]	; 80057c0 <main+0x390>
 800554c:	6063      	str	r3, [r4, #4]
 800554e:	f640 76ff 	movw	r6, #4095	; 0xfff
 8005552:	f8c4 a008 	str.w	sl, [r4, #8]
 8005556:	f8c4 c00c 	str.w	ip, [r4, #12]
 800555a:	6166      	str	r6, [r4, #20]
 800555c:	f04f 0c0f 	mov.w	ip, #15
 8005560:	6223      	str	r3, [r4, #32]
 8005562:	2603      	movs	r6, #3
 8005564:	6263      	str	r3, [r4, #36]	; 0x24
 8005566:	f8c4 9000 	str.w	r9, [r4]
 800556a:	4c84      	ldr	r4, [pc, #528]	; (800577c <main+0x34c>)
 800556c:	6043      	str	r3, [r0, #4]
 800556e:	f8c0 a008 	str.w	sl, [r0, #8]
 8005572:	60c3      	str	r3, [r0, #12]
 8005574:	f8c0 8014 	str.w	r8, [r0, #20]
 8005578:	6203      	str	r3, [r0, #32]
 800557a:	6243      	str	r3, [r0, #36]	; 0x24
 800557c:	6002      	str	r2, [r0, #0]
 800557e:	604b      	str	r3, [r1, #4]
 8005580:	f8c1 c008 	str.w	ip, [r1, #8]
 8005584:	60cb      	str	r3, [r1, #12]
 8005586:	614e      	str	r6, [r1, #20]
 8005588:	620b      	str	r3, [r1, #32]
 800558a:	624b      	str	r3, [r1, #36]	; 0x24
 800558c:	600b      	str	r3, [r1, #0]
 800558e:	f84e 4b04 	str.w	r4, [lr], #4
 8005592:	f04f 0901 	mov.w	r9, #1
 8005596:	f107 0164 	add.w	r1, r7, #100	; 0x64
 800559a:	f107 0054 	add.w	r0, r7, #84	; 0x54
 800559e:	f107 060c 	add.w	r6, r7, #12
 80055a2:	f107 0430 	add.w	r4, r7, #48	; 0x30
 80055a6:	f04f 0c10 	mov.w	ip, #16
 80055aa:	617b      	str	r3, [r7, #20]
 80055ac:	62bb      	str	r3, [r7, #40]	; 0x28
 80055ae:	f8c7 e004 	str.w	lr, [r7, #4]
 80055b2:	e9c7 6603 	strd	r6, r6, [r7, #12]
 80055b6:	61b8      	str	r0, [r7, #24]
 80055b8:	e9c7 0008 	strd	r0, r0, [r7, #32]
 80055bc:	61f9      	str	r1, [r7, #28]
 80055be:	63f9      	str	r1, [r7, #60]	; 0x3c
 80055c0:	64b9      	str	r1, [r7, #72]	; 0x48
 80055c2:	e9c7 440c 	strd	r4, r4, [r7, #48]	; 0x30
 80055c6:	f8c7 c038 	str.w	ip, [r7, #56]	; 0x38
 80055ca:	62ff      	str	r7, [r7, #44]	; 0x2c
 80055cc:	f887 9008 	strb.w	r9, [r7, #8]
 80055d0:	6479      	str	r1, [r7, #68]	; 0x44
 80055d2:	6c29      	ldr	r1, [r5, #64]	; 0x40
 80055d4:	f8df e1ec 	ldr.w	lr, [pc, #492]	; 80057c4 <main+0x394>
 80055d8:	653f      	str	r7, [r7, #80]	; 0x50
 80055da:	ea41 0109 	orr.w	r1, r1, r9
 80055de:	6429      	str	r1, [r5, #64]	; 0x40
 80055e0:	f8de 1008 	ldr.w	r1, [lr, #8]
 80055e4:	4866      	ldr	r0, [pc, #408]	; (8005780 <main+0x350>)
 80055e6:	4e67      	ldr	r6, [pc, #412]	; (8005784 <main+0x354>)
 80055e8:	4c67      	ldr	r4, [pc, #412]	; (8005788 <main+0x358>)
 80055ea:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 80057c8 <main+0x398>
 80055ee:	ea41 0109 	orr.w	r1, r1, r9
 80055f2:	f8ce 1008 	str.w	r1, [lr, #8]
 80055f6:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80055fa:	f242 0ecf 	movw	lr, #8399	; 0x20cf
 80055fe:	f8c1 e028 	str.w	lr, [r1, #40]	; 0x28
 8005602:	f8c1 a02c 	str.w	sl, [r1, #44]	; 0x2c
 8005606:	f04f 0e80 	mov.w	lr, #128	; 0x80
 800560a:	618b      	str	r3, [r1, #24]
 800560c:	634b      	str	r3, [r1, #52]	; 0x34
 800560e:	60cb      	str	r3, [r1, #12]
 8005610:	604b      	str	r3, [r1, #4]
 8005612:	f8c1 9014 	str.w	r9, [r1, #20]
 8005616:	f8c1 9000 	str.w	r9, [r1]
 800561a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
 800561e:	f886 e31c 	strb.w	lr, [r6, #796]	; 0x31c
 8005622:	f8c6 1180 	str.w	r1, [r6, #384]	; 0x180
 8005626:	6031      	str	r1, [r6, #0]
 8005628:	6083      	str	r3, [r0, #8]
 800562a:	68c1      	ldr	r1, [r0, #12]
 800562c:	f64f 0eff 	movw	lr, #63743	; 0xf8ff
 8005630:	ea01 010e 	and.w	r1, r1, lr
 8005634:	430c      	orrs	r4, r1
 8005636:	60c4      	str	r4, [r0, #12]
 8005638:	f8d8 100c 	ldr.w	r1, [r8, #12]
 800563c:	f8df e18c 	ldr.w	lr, [pc, #396]	; 80057cc <main+0x39c>
 8005640:	4c52      	ldr	r4, [pc, #328]	; (800578c <main+0x35c>)
 8005642:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
 8005646:	f8c8 100c 	str.w	r1, [r8, #12]
 800564a:	f8de 1000 	ldr.w	r1, [lr]
 800564e:	f8df 8180 	ldr.w	r8, [pc, #384]	; 80057d0 <main+0x3a0>
 8005652:	f8c7 804c 	str.w	r8, [r7, #76]	; 0x4c
 8005656:	ea41 0109 	orr.w	r1, r1, r9
 800565a:	f8ce 1000 	str.w	r1, [lr]
 800565e:	f04f 0820 	mov.w	r8, #32
 8005662:	f880 c01f 	strb.w	ip, [r0, #31]
 8005666:	f107 0e74 	add.w	lr, r7, #116	; 0x74
 800566a:	f8df c168 	ldr.w	ip, [pc, #360]	; 80057d4 <main+0x3a4>
 800566e:	f880 8022 	strb.w	r8, [r0, #34]	; 0x22
 8005672:	f104 011c 	add.w	r1, r4, #28
 8005676:	f8c7 e040 	str.w	lr, [r7, #64]	; 0x40
 800567a:	f8c7 c074 	str.w	ip, [r7, #116]	; 0x74
 800567e:	60a3      	str	r3, [r4, #8]
 8005680:	a806      	add	r0, sp, #24
 8005682:	e9c4 4400 	strd	r4, r4, [r4]
 8005686:	f04f 0b00 	mov.w	fp, #0
 800568a:	e9c4 4404 	strd	r4, r4, [r4, #16]
 800568e:	e9c4 a309 	strd	sl, r3, [r4, #36]	; 0x24
 8005692:	f8cd a018 	str.w	sl, [sp, #24]
 8005696:	f04f 0a00 	mov.w	sl, #0
 800569a:	6763      	str	r3, [r4, #116]	; 0x74
 800569c:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80056a0:	9309      	str	r3, [sp, #36]	; 0x24
 80056a2:	9304      	str	r3, [sp, #16]
 80056a4:	e9c4 1107 	strd	r1, r1, [r4, #28]
 80056a8:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 80056ac:	f7fa fe18 	bl	80002e0 <chTMStartMeasurementX.constprop.56>
 80056b0:	a806      	add	r0, sp, #24
 80056b2:	f7fb fb15 	bl	8000ce0 <chTMStopMeasurementX>
 80056b6:	9b08      	ldr	r3, [sp, #32]
 80056b8:	9303      	str	r3, [sp, #12]
 80056ba:	2340      	movs	r3, #64	; 0x40
 80056bc:	63a3      	str	r3, [r4, #56]	; 0x38
 80056be:	9b04      	ldr	r3, [sp, #16]
 80056c0:	4933      	ldr	r1, [pc, #204]	; (8005790 <main+0x360>)
 80056c2:	f8df c114 	ldr.w	ip, [pc, #276]	; 80057d8 <main+0x3a8>
 80056c6:	f8d4 e014 	ldr.w	lr, [r4, #20]
 80056ca:	f8df a110 	ldr.w	sl, [pc, #272]	; 80057dc <main+0x3ac>
 80056ce:	4831      	ldr	r0, [pc, #196]	; (8005794 <main+0x364>)
 80056d0:	f8c4 e044 	str.w	lr, [r4, #68]	; 0x44
 80056d4:	2240      	movs	r2, #64	; 0x40
 80056d6:	e9c4 321a 	strd	r3, r2, [r4, #104]	; 0x68
 80056da:	9a03      	ldr	r2, [sp, #12]
 80056dc:	6762      	str	r2, [r4, #116]	; 0x74
 80056de:	f101 0210 	add.w	r2, r1, #16
 80056e2:	e9c1 2204 	strd	r2, r2, [r1, #16]
 80056e6:	f02c 0c07 	bic.w	ip, ip, #7
 80056ea:	f104 0230 	add.w	r2, r4, #48	; 0x30
 80056ee:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 80056f2:	6663      	str	r3, [r4, #100]	; 0x64
 80056f4:	f884 904e 	strb.w	r9, [r4, #78]	; 0x4e
 80056f8:	64a3      	str	r3, [r4, #72]	; 0x48
 80056fa:	6424      	str	r4, [r4, #64]	; 0x40
 80056fc:	618b      	str	r3, [r1, #24]
 80056fe:	f8ca c000 	str.w	ip, [sl]
 8005702:	f8ce 2010 	str.w	r2, [lr, #16]
 8005706:	f8df c0d8 	ldr.w	ip, [pc, #216]	; 80057e0 <main+0x3b0>
 800570a:	f8df e0d8 	ldr.w	lr, [pc, #216]	; 80057e4 <main+0x3b4>
 800570e:	f884 904c 	strb.w	r9, [r4, #76]	; 0x4c
 8005712:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8005716:	f104 0254 	add.w	r2, r4, #84	; 0x54
 800571a:	f020 0007 	bic.w	r0, r0, #7
 800571e:	6562      	str	r2, [r4, #84]	; 0x54
 8005720:	f104 0258 	add.w	r2, r4, #88	; 0x58
 8005724:	e9c1 3302 	strd	r3, r3, [r1, #8]
 8005728:	f8c1 e000 	str.w	lr, [r1]
 800572c:	e9c4 2216 	strd	r2, r2, [r4, #88]	; 0x58
 8005730:	f8cc 0000 	str.w	r0, [ip]
 8005734:	f383 8811 	msr	BASEPRI, r3
 8005738:	b662      	cpsie	i
 800573a:	69a2      	ldr	r2, [r4, #24]
 800573c:	4916      	ldr	r1, [pc, #88]	; (8005798 <main+0x368>)
 800573e:	6191      	str	r1, [r2, #24]
 8005740:	f104 0078 	add.w	r0, r4, #120	; 0x78
 8005744:	9300      	str	r3, [sp, #0]
 8005746:	464a      	mov	r2, r9
 8005748:	4b14      	ldr	r3, [pc, #80]	; (800579c <main+0x36c>)
 800574a:	f44f 71b0 	mov.w	r1, #352	; 0x160
 800574e:	f7fc f97f 	bl	8001a50 <chThdCreateStatic>
 8005752:	e049      	b.n	80057e8 <main+0x3b8>
 8005754:	40023800 	.word	0x40023800
 8005758:	40007000 	.word	0x40007000
 800575c:	40020000 	.word	0x40020000
 8005760:	40020800 	.word	0x40020800
 8005764:	40020c00 	.word	0x40020c00
 8005768:	40021000 	.word	0x40021000
 800576c:	40021c00 	.word	0x40021c00
 8005770:	2aa0aa00 	.word	0x2aa0aa00
 8005774:	55114515 	.word	0x55114515
 8005778:	200008b8 	.word	0x200008b8
 800577c:	08006a40 	.word	0x08006a40
 8005780:	e000ed00 	.word	0xe000ed00
 8005784:	e000e100 	.word	0xe000e100
 8005788:	05fa0300 	.word	0x05fa0300
 800578c:	20000930 	.word	0x20000930
 8005790:	20000b10 	.word	0x20000b10
 8005794:	20010000 	.word	0x20010000
 8005798:	08005eb0 	.word	0x08005eb0
 800579c:	080003c1 	.word	0x080003c1
 80057a0:	40010054 	.word	0x40010054
 80057a4:	40020400 	.word	0x40020400
 80057a8:	55560000 	.word	0x55560000
 80057ac:	000aaa00 	.word	0x000aaa00
 80057b0:	00082080 	.word	0x00082080
 80057b4:	00060600 	.word	0x00060600
 80057b8:	02208001 	.word	0x02208001
 80057bc:	00555055 	.word	0x00555055
 80057c0:	55000100 	.word	0x55000100
 80057c4:	e0042000 	.word	0xe0042000
 80057c8:	e000edf0 	.word	0xe000edf0
 80057cc:	e0001000 	.word	0xe0001000
 80057d0:	08000411 	.word	0x08000411
 80057d4:	40004400 	.word	0x40004400
 80057d8:	20001737 	.word	0x20001737
 80057dc:	20000bac 	.word	0x20000bac
 80057e0:	20000b30 	.word	0x20000b30
 80057e4:	080003d1 	.word	0x080003d1
 80057e8:	4b23      	ldr	r3, [pc, #140]	; (8005878 <main+0x448>)
 80057ea:	6183      	str	r3, [r0, #24]
 80057ec:	f388 8811 	msr	BASEPRI, r8
 80057f0:	7a3b      	ldrb	r3, [r7, #8]
 80057f2:	454b      	cmp	r3, r9
 80057f4:	d10a      	bne.n	800580c <main+0x3dc>
 80057f6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80057f8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80057fc:	642b      	str	r3, [r5, #64]	; 0x40
 80057fe:	22c0      	movs	r2, #192	; 0xc0
 8005800:	2340      	movs	r3, #64	; 0x40
 8005802:	f886 2326 	strb.w	r2, [r6, #806]	; 0x326
 8005806:	f8c6 3184 	str.w	r3, [r6, #388]	; 0x184
 800580a:	6073      	str	r3, [r6, #4]
 800580c:	4b1b      	ldr	r3, [pc, #108]	; (800587c <main+0x44c>)
 800580e:	4a1c      	ldr	r2, [pc, #112]	; (8005880 <main+0x450>)
 8005810:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005812:	4293      	cmp	r3, r2
 8005814:	f000 818e 	beq.w	8005b34 <main+0x704>
 8005818:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800581c:	4293      	cmp	r3, r2
 800581e:	f000 8189 	beq.w	8005b34 <main+0x704>
 8005822:	f240 4245 	movw	r2, #1093	; 0x445
 8005826:	609a      	str	r2, [r3, #8]
 8005828:	f244 0240 	movw	r2, #16448	; 0x4040
 800582c:	2001      	movs	r0, #1
 800582e:	f242 112c 	movw	r1, #8492	; 0x212c
 8005832:	2400      	movs	r4, #0
 8005834:	611a      	str	r2, [r3, #16]
 8005836:	6158      	str	r0, [r3, #20]
 8005838:	60d9      	str	r1, [r3, #12]
 800583a:	601c      	str	r4, [r3, #0]
 800583c:	6819      	ldr	r1, [r3, #0]
 800583e:	685b      	ldr	r3, [r3, #4]
 8005840:	4b0e      	ldr	r3, [pc, #56]	; (800587c <main+0x44c>)
 8005842:	2202      	movs	r2, #2
 8005844:	721a      	strb	r2, [r3, #8]
 8005846:	f384 8811 	msr	BASEPRI, r4
 800584a:	2004      	movs	r0, #4
 800584c:	f7fa fd60 	bl	8000310 <_pal_lld_setgroupmode.constprop.5>
 8005850:	2008      	movs	r0, #8
 8005852:	f7fa fd5d 	bl	8000310 <_pal_lld_setgroupmode.constprop.5>
 8005856:	9400      	str	r4, [sp, #0]
 8005858:	4b0a      	ldr	r3, [pc, #40]	; (8005884 <main+0x454>)
 800585a:	480b      	ldr	r0, [pc, #44]	; (8005888 <main+0x458>)
 800585c:	f8df 802c 	ldr.w	r8, [pc, #44]	; 800588c <main+0x45c>
 8005860:	f8df 902c 	ldr.w	r9, [pc, #44]	; 8005890 <main+0x460>
 8005864:	f8df a02c 	ldr.w	sl, [pc, #44]	; 8005894 <main+0x464>
 8005868:	f8df b02c 	ldr.w	fp, [pc, #44]	; 8005898 <main+0x468>
 800586c:	2240      	movs	r2, #64	; 0x40
 800586e:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8005872:	f7fc f8ed 	bl	8001a50 <chThdCreateStatic>
 8005876:	e015      	b.n	80058a4 <main+0x474>
 8005878:	08006000 	.word	0x08006000
 800587c:	200008b8 	.word	0x200008b8
 8005880:	40011000 	.word	0x40011000
 8005884:	08002801 	.word	0x08002801
 8005888:	20001560 	.word	0x20001560
 800588c:	20000b08 	.word	0x20000b08
 8005890:	20001520 	.word	0x20001520
 8005894:	20000b8c 	.word	0x20000b8c
 8005898:	200014fc 	.word	0x200014fc
 800589c:	f241 3088 	movw	r0, #5000	; 0x1388
 80058a0:	f7fc ff9e 	bl	80027e0 <chThdSleep>
 80058a4:	4ba5      	ldr	r3, [pc, #660]	; (8005b3c <main+0x70c>)
 80058a6:	691b      	ldr	r3, [r3, #16]
 80058a8:	07db      	lsls	r3, r3, #31
 80058aa:	d5f7      	bpl.n	800589c <main+0x46c>
 80058ac:	4ba4      	ldr	r3, [pc, #656]	; (8005b40 <main+0x710>)
 80058ae:	48a5      	ldr	r0, [pc, #660]	; (8005b44 <main+0x714>)
 80058b0:	f8c8 3000 	str.w	r3, [r8]
 80058b4:	f7fb f824 	bl	8000900 <test_println>
 80058b8:	48a3      	ldr	r0, [pc, #652]	; (8005b48 <main+0x718>)
 80058ba:	4ca4      	ldr	r4, [pc, #656]	; (8005b4c <main+0x71c>)
 80058bc:	f7fb f820 	bl	8000900 <test_println>
 80058c0:	48a3      	ldr	r0, [pc, #652]	; (8005b50 <main+0x720>)
 80058c2:	f7fb f81d 	bl	8000900 <test_println>
 80058c6:	212a      	movs	r1, #42	; 0x2a
 80058c8:	f8d8 0000 	ldr.w	r0, [r8]
 80058cc:	6803      	ldr	r3, [r0, #0]
 80058ce:	689b      	ldr	r3, [r3, #8]
 80058d0:	4798      	blx	r3
 80058d2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80058d6:	2900      	cmp	r1, #0
 80058d8:	d1f6      	bne.n	80058c8 <main+0x498>
 80058da:	489e      	ldr	r0, [pc, #632]	; (8005b54 <main+0x724>)
 80058dc:	4c9e      	ldr	r4, [pc, #632]	; (8005b58 <main+0x728>)
 80058de:	f7fb f80f 	bl	8000900 <test_println>
 80058e2:	212a      	movs	r1, #42	; 0x2a
 80058e4:	f8d8 0000 	ldr.w	r0, [r8]
 80058e8:	6803      	ldr	r3, [r0, #0]
 80058ea:	689b      	ldr	r3, [r3, #8]
 80058ec:	4798      	blx	r3
 80058ee:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80058f2:	2900      	cmp	r1, #0
 80058f4:	d1f6      	bne.n	80058e4 <main+0x4b4>
 80058f6:	4899      	ldr	r0, [pc, #612]	; (8005b5c <main+0x72c>)
 80058f8:	4c99      	ldr	r4, [pc, #612]	; (8005b60 <main+0x730>)
 80058fa:	f7fb f801 	bl	8000900 <test_println>
 80058fe:	212a      	movs	r1, #42	; 0x2a
 8005900:	f8d8 0000 	ldr.w	r0, [r8]
 8005904:	6803      	ldr	r3, [r0, #0]
 8005906:	689b      	ldr	r3, [r3, #8]
 8005908:	4798      	blx	r3
 800590a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800590e:	2900      	cmp	r1, #0
 8005910:	d1f6      	bne.n	8005900 <main+0x4d0>
 8005912:	4894      	ldr	r0, [pc, #592]	; (8005b64 <main+0x734>)
 8005914:	4c94      	ldr	r4, [pc, #592]	; (8005b68 <main+0x738>)
 8005916:	f7fa fff3 	bl	8000900 <test_println>
 800591a:	212a      	movs	r1, #42	; 0x2a
 800591c:	f8d8 0000 	ldr.w	r0, [r8]
 8005920:	6803      	ldr	r3, [r0, #0]
 8005922:	689b      	ldr	r3, [r3, #8]
 8005924:	4798      	blx	r3
 8005926:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800592a:	2900      	cmp	r1, #0
 800592c:	d1f6      	bne.n	800591c <main+0x4ec>
 800592e:	488f      	ldr	r0, [pc, #572]	; (8005b6c <main+0x73c>)
 8005930:	4c8f      	ldr	r4, [pc, #572]	; (8005b70 <main+0x740>)
 8005932:	f7fa ffe5 	bl	8000900 <test_println>
 8005936:	212a      	movs	r1, #42	; 0x2a
 8005938:	f8d8 0000 	ldr.w	r0, [r8]
 800593c:	6803      	ldr	r3, [r0, #0]
 800593e:	689b      	ldr	r3, [r3, #8]
 8005940:	4798      	blx	r3
 8005942:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005946:	2900      	cmp	r1, #0
 8005948:	d1f6      	bne.n	8005938 <main+0x508>
 800594a:	488a      	ldr	r0, [pc, #552]	; (8005b74 <main+0x744>)
 800594c:	4c8a      	ldr	r4, [pc, #552]	; (8005b78 <main+0x748>)
 800594e:	f7fa ffd7 	bl	8000900 <test_println>
 8005952:	212a      	movs	r1, #42	; 0x2a
 8005954:	f8d8 0000 	ldr.w	r0, [r8]
 8005958:	6803      	ldr	r3, [r0, #0]
 800595a:	689b      	ldr	r3, [r3, #8]
 800595c:	4798      	blx	r3
 800595e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005962:	2900      	cmp	r1, #0
 8005964:	d1f6      	bne.n	8005954 <main+0x524>
 8005966:	4885      	ldr	r0, [pc, #532]	; (8005b7c <main+0x74c>)
 8005968:	4c85      	ldr	r4, [pc, #532]	; (8005b80 <main+0x750>)
 800596a:	f7fa ffc9 	bl	8000900 <test_println>
 800596e:	212a      	movs	r1, #42	; 0x2a
 8005970:	f8d8 0000 	ldr.w	r0, [r8]
 8005974:	6803      	ldr	r3, [r0, #0]
 8005976:	689b      	ldr	r3, [r3, #8]
 8005978:	4798      	blx	r3
 800597a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800597e:	2900      	cmp	r1, #0
 8005980:	d1f6      	bne.n	8005970 <main+0x540>
 8005982:	4880      	ldr	r0, [pc, #512]	; (8005b84 <main+0x754>)
 8005984:	4c80      	ldr	r4, [pc, #512]	; (8005b88 <main+0x758>)
 8005986:	f7fa ffbb 	bl	8000900 <test_println>
 800598a:	212a      	movs	r1, #42	; 0x2a
 800598c:	f8d8 0000 	ldr.w	r0, [r8]
 8005990:	6803      	ldr	r3, [r0, #0]
 8005992:	689b      	ldr	r3, [r3, #8]
 8005994:	4798      	blx	r3
 8005996:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800599a:	2900      	cmp	r1, #0
 800599c:	d1f6      	bne.n	800598c <main+0x55c>
 800599e:	4b7b      	ldr	r3, [pc, #492]	; (8005b8c <main+0x75c>)
 80059a0:	487b      	ldr	r0, [pc, #492]	; (8005b90 <main+0x760>)
 80059a2:	9305      	str	r3, [sp, #20]
 80059a4:	4b7b      	ldr	r3, [pc, #492]	; (8005b94 <main+0x764>)
 80059a6:	9103      	str	r1, [sp, #12]
 80059a8:	9304      	str	r3, [sp, #16]
 80059aa:	f7fa ffa9 	bl	8000900 <test_println>
 80059ae:	4865      	ldr	r0, [pc, #404]	; (8005b44 <main+0x714>)
 80059b0:	4e79      	ldr	r6, [pc, #484]	; (8005b98 <main+0x768>)
 80059b2:	f7fa ffa5 	bl	8000900 <test_println>
 80059b6:	4b79      	ldr	r3, [pc, #484]	; (8005b9c <main+0x76c>)
 80059b8:	9903      	ldr	r1, [sp, #12]
 80059ba:	7019      	strb	r1, [r3, #0]
 80059bc:	4b78      	ldr	r3, [pc, #480]	; (8005ba0 <main+0x770>)
 80059be:	9a03      	ldr	r2, [sp, #12]
 80059c0:	3201      	adds	r2, #1
 80059c2:	9203      	str	r2, [sp, #12]
 80059c4:	2500      	movs	r5, #0
 80059c6:	2b00      	cmp	r3, #0
 80059c8:	f000 808b 	beq.w	8005ae2 <main+0x6b2>
 80059cc:	4c75      	ldr	r4, [pc, #468]	; (8005ba4 <main+0x774>)
 80059ce:	f7fa fecf 	bl	8000770 <print_line>
 80059d2:	212d      	movs	r1, #45	; 0x2d
 80059d4:	f8d8 0000 	ldr.w	r0, [r8]
 80059d8:	6803      	ldr	r3, [r0, #0]
 80059da:	689b      	ldr	r3, [r3, #8]
 80059dc:	4798      	blx	r3
 80059de:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80059e2:	2900      	cmp	r1, #0
 80059e4:	d1f6      	bne.n	80059d4 <main+0x5a4>
 80059e6:	9803      	ldr	r0, [sp, #12]
 80059e8:	4c6f      	ldr	r4, [pc, #444]	; (8005ba8 <main+0x778>)
 80059ea:	f7fa feb1 	bl	8000750 <test_printn>
 80059ee:	f8d8 0000 	ldr.w	r0, [r8]
 80059f2:	6803      	ldr	r3, [r0, #0]
 80059f4:	212e      	movs	r1, #46	; 0x2e
 80059f6:	689b      	ldr	r3, [r3, #8]
 80059f8:	1c6f      	adds	r7, r5, #1
 80059fa:	4798      	blx	r3
 80059fc:	4638      	mov	r0, r7
 80059fe:	f7fa fea7 	bl	8000750 <test_printn>
 8005a02:	2120      	movs	r1, #32
 8005a04:	f8d8 0000 	ldr.w	r0, [r8]
 8005a08:	6803      	ldr	r3, [r0, #0]
 8005a0a:	689b      	ldr	r3, [r3, #8]
 8005a0c:	4798      	blx	r3
 8005a0e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005a12:	2900      	cmp	r1, #0
 8005a14:	d1f6      	bne.n	8005a04 <main+0x5d4>
 8005a16:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005a1a:	681c      	ldr	r4, [r3, #0]
 8005a1c:	7821      	ldrb	r1, [r4, #0]
 8005a1e:	b141      	cbz	r1, 8005a32 <main+0x602>
 8005a20:	f8d8 0000 	ldr.w	r0, [r8]
 8005a24:	6803      	ldr	r3, [r0, #0]
 8005a26:	689b      	ldr	r3, [r3, #8]
 8005a28:	4798      	blx	r3
 8005a2a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005a2e:	2900      	cmp	r1, #0
 8005a30:	d1f6      	bne.n	8005a20 <main+0x5f0>
 8005a32:	485e      	ldr	r0, [pc, #376]	; (8005bac <main+0x77c>)
 8005a34:	f7fa ff64 	bl	8000900 <test_println>
 8005a38:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8005a3c:	f7fc fed0 	bl	80027e0 <chThdSleep>
 8005a40:	4b5b      	ldr	r3, [pc, #364]	; (8005bb0 <main+0x780>)
 8005a42:	f8c9 3000 	str.w	r3, [r9]
 8005a46:	2300      	movs	r3, #0
 8005a48:	f856 4025 	ldr.w	r4, [r6, r5, lsl #2]
 8005a4c:	f8cb 3010 	str.w	r3, [fp, #16]
 8005a50:	e9cb 3300 	strd	r3, r3, [fp]
 8005a54:	e9cb 3302 	strd	r3, r3, [fp, #8]
 8005a58:	6862      	ldr	r2, [r4, #4]
 8005a5a:	f88a 3000 	strb.w	r3, [sl]
 8005a5e:	b102      	cbz	r2, 8005a62 <main+0x632>
 8005a60:	4790      	blx	r2
 8005a62:	68e3      	ldr	r3, [r4, #12]
 8005a64:	4798      	blx	r3
 8005a66:	68a3      	ldr	r3, [r4, #8]
 8005a68:	b103      	cbz	r3, 8005a6c <main+0x63c>
 8005a6a:	4798      	blx	r3
 8005a6c:	f7fe f868 	bl	8003b40 <test_wait_threads>
 8005a70:	f89a 3000 	ldrb.w	r3, [sl]
 8005a74:	2b00      	cmp	r3, #0
 8005a76:	d03e      	beq.n	8005af6 <main+0x6c6>
 8005a78:	4c4e      	ldr	r4, [pc, #312]	; (8005bb4 <main+0x784>)
 8005a7a:	212d      	movs	r1, #45	; 0x2d
 8005a7c:	f8d8 0000 	ldr.w	r0, [r8]
 8005a80:	6803      	ldr	r3, [r0, #0]
 8005a82:	689b      	ldr	r3, [r3, #8]
 8005a84:	4798      	blx	r3
 8005a86:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005a8a:	2900      	cmp	r1, #0
 8005a8c:	d1f6      	bne.n	8005a7c <main+0x64c>
 8005a8e:	4b4a      	ldr	r3, [pc, #296]	; (8005bb8 <main+0x788>)
 8005a90:	4c4a      	ldr	r4, [pc, #296]	; (8005bbc <main+0x78c>)
 8005a92:	6818      	ldr	r0, [r3, #0]
 8005a94:	f7fa fe5c 	bl	8000750 <test_printn>
 8005a98:	2120      	movs	r1, #32
 8005a9a:	f8d8 0000 	ldr.w	r0, [r8]
 8005a9e:	6803      	ldr	r3, [r0, #0]
 8005aa0:	689b      	ldr	r3, [r3, #8]
 8005aa2:	4798      	blx	r3
 8005aa4:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005aa8:	2900      	cmp	r1, #0
 8005aaa:	d1f6      	bne.n	8005a9a <main+0x66a>
 8005aac:	f8d9 3000 	ldr.w	r3, [r9]
 8005ab0:	4a3f      	ldr	r2, [pc, #252]	; (8005bb0 <main+0x780>)
 8005ab2:	4293      	cmp	r3, r2
 8005ab4:	d90b      	bls.n	8005ace <main+0x69e>
 8005ab6:	4614      	mov	r4, r2
 8005ab8:	f8d8 0000 	ldr.w	r0, [r8]
 8005abc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005ac0:	6803      	ldr	r3, [r0, #0]
 8005ac2:	689b      	ldr	r3, [r3, #8]
 8005ac4:	4798      	blx	r3
 8005ac6:	f8d9 3000 	ldr.w	r3, [r9]
 8005aca:	429c      	cmp	r4, r3
 8005acc:	d3f4      	bcc.n	8005ab8 <main+0x688>
 8005ace:	483c      	ldr	r0, [pc, #240]	; (8005bc0 <main+0x790>)
 8005ad0:	f7fa ff16 	bl	8000900 <test_println>
 8005ad4:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 8005ad8:	463d      	mov	r5, r7
 8005ada:	685b      	ldr	r3, [r3, #4]
 8005adc:	2b00      	cmp	r3, #0
 8005ade:	f47f af75 	bne.w	80059cc <main+0x59c>
 8005ae2:	9e04      	ldr	r6, [sp, #16]
 8005ae4:	b15e      	cbz	r6, 8005afe <main+0x6ce>
 8005ae6:	9a05      	ldr	r2, [sp, #20]
 8005ae8:	6833      	ldr	r3, [r6, #0]
 8005aea:	4611      	mov	r1, r2
 8005aec:	f851 2f04 	ldr.w	r2, [r1, #4]!
 8005af0:	9204      	str	r2, [sp, #16]
 8005af2:	9105      	str	r1, [sp, #20]
 8005af4:	e763      	b.n	80059be <main+0x58e>
 8005af6:	4833      	ldr	r0, [pc, #204]	; (8005bc4 <main+0x794>)
 8005af8:	f7fa ff02 	bl	8000900 <test_println>
 8005afc:	e7ea      	b.n	8005ad4 <main+0x6a4>
 8005afe:	f7fa fe37 	bl	8000770 <print_line>
 8005b02:	4c31      	ldr	r4, [pc, #196]	; (8005bc8 <main+0x798>)
 8005b04:	480f      	ldr	r0, [pc, #60]	; (8005b44 <main+0x714>)
 8005b06:	f7fa fefb 	bl	8000900 <test_println>
 8005b0a:	2146      	movs	r1, #70	; 0x46
 8005b0c:	f8d8 0000 	ldr.w	r0, [r8]
 8005b10:	6803      	ldr	r3, [r0, #0]
 8005b12:	689b      	ldr	r3, [r3, #8]
 8005b14:	4798      	blx	r3
 8005b16:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005b1a:	2900      	cmp	r1, #0
 8005b1c:	d1f6      	bne.n	8005b0c <main+0x6dc>
 8005b1e:	4b1f      	ldr	r3, [pc, #124]	; (8005b9c <main+0x76c>)
 8005b20:	781b      	ldrb	r3, [r3, #0]
 8005b22:	b91b      	cbnz	r3, 8005b2c <main+0x6fc>
 8005b24:	4829      	ldr	r0, [pc, #164]	; (8005bcc <main+0x79c>)
 8005b26:	f7fa feeb 	bl	8000900 <test_println>
 8005b2a:	e6b7      	b.n	800589c <main+0x46c>
 8005b2c:	4828      	ldr	r0, [pc, #160]	; (8005bd0 <main+0x7a0>)
 8005b2e:	f7fa fee7 	bl	8000900 <test_println>
 8005b32:	e6b3      	b.n	800589c <main+0x46c>
 8005b34:	f640 028b 	movw	r2, #2187	; 0x88b
 8005b38:	609a      	str	r2, [r3, #8]
 8005b3a:	e675      	b.n	8005828 <main+0x3f8>
 8005b3c:	40020000 	.word	0x40020000
 8005b40:	200008b8 	.word	0x200008b8
 8005b44:	08005e80 	.word	0x08005e80
 8005b48:	08006008 	.word	0x08006008
 8005b4c:	08005f20 	.word	0x08005f20
 8005b50:	08006024 	.word	0x08006024
 8005b54:	08006028 	.word	0x08006028
 8005b58:	08005f34 	.word	0x08005f34
 8005b5c:	08006030 	.word	0x08006030
 8005b60:	08005f48 	.word	0x08005f48
 8005b64:	08006048 	.word	0x08006048
 8005b68:	08005f5c 	.word	0x08005f5c
 8005b6c:	08006090 	.word	0x08006090
 8005b70:	08005f70 	.word	0x08005f70
 8005b74:	0800609c 	.word	0x0800609c
 8005b78:	08005f84 	.word	0x08005f84
 8005b7c:	080060a8 	.word	0x080060a8
 8005b80:	08005f98 	.word	0x08005f98
 8005b84:	080060c0 	.word	0x080060c0
 8005b88:	08005fac 	.word	0x08005fac
 8005b8c:	08006224 	.word	0x08006224
 8005b90:	080060f0 	.word	0x080060f0
 8005b94:	08006290 	.word	0x08006290
 8005b98:	08006280 	.word	0x08006280
 8005b9c:	200014d0 	.word	0x200014d0
 8005ba0:	080069d0 	.word	0x080069d0
 8005ba4:	08005fc0 	.word	0x08005fc0
 8005ba8:	08005fd0 	.word	0x08005fd0
 8005bac:	08006118 	.word	0x08006118
 8005bb0:	20001510 	.word	0x20001510
 8005bb4:	08005fd4 	.word	0x08005fd4
 8005bb8:	20000b34 	.word	0x20000b34
 8005bbc:	08005fec 	.word	0x08005fec
 8005bc0:	0800611c 	.word	0x0800611c
 8005bc4:	08006120 	.word	0x08006120
 8005bc8:	08005ff0 	.word	0x08005ff0
 8005bcc:	0800612c 	.word	0x0800612c
 8005bd0:	08006134 	.word	0x08006134
	...

08005be0 <__early_init>:
 8005be0:	4b2a      	ldr	r3, [pc, #168]	; (8005c8c <__early_init+0xac>)
 8005be2:	4a2b      	ldr	r2, [pc, #172]	; (8005c90 <__early_init+0xb0>)
 8005be4:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 8005be8:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005bec:	6418      	str	r0, [r3, #64]	; 0x40
 8005bee:	6011      	str	r1, [r2, #0]
 8005bf0:	681a      	ldr	r2, [r3, #0]
 8005bf2:	f042 0201 	orr.w	r2, r2, #1
 8005bf6:	601a      	str	r2, [r3, #0]
 8005bf8:	681a      	ldr	r2, [r3, #0]
 8005bfa:	0792      	lsls	r2, r2, #30
 8005bfc:	d5fc      	bpl.n	8005bf8 <__early_init+0x18>
 8005bfe:	6899      	ldr	r1, [r3, #8]
 8005c00:	4a22      	ldr	r2, [pc, #136]	; (8005c8c <__early_init+0xac>)
 8005c02:	f021 0103 	bic.w	r1, r1, #3
 8005c06:	6099      	str	r1, [r3, #8]
 8005c08:	6899      	ldr	r1, [r3, #8]
 8005c0a:	6099      	str	r1, [r3, #8]
 8005c0c:	6893      	ldr	r3, [r2, #8]
 8005c0e:	f013 030c 	ands.w	r3, r3, #12
 8005c12:	d1fb      	bne.n	8005c0c <__early_init+0x2c>
 8005c14:	6810      	ldr	r0, [r2, #0]
 8005c16:	491d      	ldr	r1, [pc, #116]	; (8005c8c <__early_init+0xac>)
 8005c18:	f000 00f9 	and.w	r0, r0, #249	; 0xf9
 8005c1c:	6010      	str	r0, [r2, #0]
 8005c1e:	6093      	str	r3, [r2, #8]
 8005c20:	6813      	ldr	r3, [r2, #0]
 8005c22:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005c26:	6013      	str	r3, [r2, #0]
 8005c28:	680b      	ldr	r3, [r1, #0]
 8005c2a:	0398      	lsls	r0, r3, #14
 8005c2c:	d5fc      	bpl.n	8005c28 <__early_init+0x48>
 8005c2e:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 8005c30:	4a16      	ldr	r2, [pc, #88]	; (8005c8c <__early_init+0xac>)
 8005c32:	f043 0301 	orr.w	r3, r3, #1
 8005c36:	674b      	str	r3, [r1, #116]	; 0x74
 8005c38:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8005c3a:	0799      	lsls	r1, r3, #30
 8005c3c:	d5fc      	bpl.n	8005c38 <__early_init+0x58>
 8005c3e:	4b15      	ldr	r3, [pc, #84]	; (8005c94 <__early_init+0xb4>)
 8005c40:	6053      	str	r3, [r2, #4]
 8005c42:	6813      	ldr	r3, [r2, #0]
 8005c44:	4912      	ldr	r1, [pc, #72]	; (8005c90 <__early_init+0xb0>)
 8005c46:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8005c4a:	6013      	str	r3, [r2, #0]
 8005c4c:	684b      	ldr	r3, [r1, #4]
 8005c4e:	045a      	lsls	r2, r3, #17
 8005c50:	d5fc      	bpl.n	8005c4c <__early_init+0x6c>
 8005c52:	490e      	ldr	r1, [pc, #56]	; (8005c8c <__early_init+0xac>)
 8005c54:	680b      	ldr	r3, [r1, #0]
 8005c56:	019b      	lsls	r3, r3, #6
 8005c58:	d5fc      	bpl.n	8005c54 <__early_init+0x74>
 8005c5a:	4b0f      	ldr	r3, [pc, #60]	; (8005c98 <__early_init+0xb8>)
 8005c5c:	4a0f      	ldr	r2, [pc, #60]	; (8005c9c <__early_init+0xbc>)
 8005c5e:	608a      	str	r2, [r1, #8]
 8005c60:	f240 7202 	movw	r2, #1794	; 0x702
 8005c64:	601a      	str	r2, [r3, #0]
 8005c66:	688b      	ldr	r3, [r1, #8]
 8005c68:	4a08      	ldr	r2, [pc, #32]	; (8005c8c <__early_init+0xac>)
 8005c6a:	f043 0302 	orr.w	r3, r3, #2
 8005c6e:	608b      	str	r3, [r1, #8]
 8005c70:	6893      	ldr	r3, [r2, #8]
 8005c72:	f003 030c 	and.w	r3, r3, #12
 8005c76:	2b08      	cmp	r3, #8
 8005c78:	d1fa      	bne.n	8005c70 <__early_init+0x90>
 8005c7a:	6c53      	ldr	r3, [r2, #68]	; 0x44
 8005c7c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005c80:	6453      	str	r3, [r2, #68]	; 0x44
 8005c82:	6e53      	ldr	r3, [r2, #100]	; 0x64
 8005c84:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005c88:	6653      	str	r3, [r2, #100]	; 0x64
 8005c8a:	4770      	bx	lr
 8005c8c:	40023800 	.word	0x40023800
 8005c90:	40007000 	.word	0x40007000
 8005c94:	07415408 	.word	0x07415408
 8005c98:	40023c00 	.word	0x40023c00
 8005c9c:	38081000 	.word	0x38081000

08005ca0 <chThdExit>:
 8005ca0:	b538      	push	{r3, r4, r5, lr}
 8005ca2:	2220      	movs	r2, #32
 8005ca4:	4603      	mov	r3, r0
 8005ca6:	f382 8811 	msr	BASEPRI, r2
 8005caa:	4a0e      	ldr	r2, [pc, #56]	; (8005ce4 <chThdExit+0x44>)
 8005cac:	6994      	ldr	r4, [r2, #24]
 8005cae:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005cb0:	6223      	str	r3, [r4, #32]
 8005cb2:	f104 0524 	add.w	r5, r4, #36	; 0x24
 8005cb6:	42a8      	cmp	r0, r5
 8005cb8:	d006      	beq.n	8005cc8 <chThdExit+0x28>
 8005cba:	6803      	ldr	r3, [r0, #0]
 8005cbc:	6263      	str	r3, [r4, #36]	; 0x24
 8005cbe:	f7fb f86f 	bl	8000da0 <chSchReadyI>
 8005cc2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005cc4:	42a8      	cmp	r0, r5
 8005cc6:	d1f8      	bne.n	8005cba <chThdExit+0x1a>
 8005cc8:	7f63      	ldrb	r3, [r4, #29]
 8005cca:	079b      	lsls	r3, r3, #30
 8005ccc:	d104      	bne.n	8005cd8 <chThdExit+0x38>
 8005cce:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 8005cd2:	611a      	str	r2, [r3, #16]
 8005cd4:	6922      	ldr	r2, [r4, #16]
 8005cd6:	6153      	str	r3, [r2, #20]
 8005cd8:	200f      	movs	r0, #15
 8005cda:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005cde:	f7fb beef 	b.w	8001ac0 <chSchGoSleepS>
 8005ce2:	bf00      	nop
 8005ce4:	20000930 	.word	0x20000930
	...

08005cf0 <thread1.lto_priv.72>:
 8005cf0:	f7ff bfd6 	b.w	8005ca0 <chThdExit>
	...

08005d00 <chSchDoReschedule>:
 8005d00:	f7fb bc76 	b.w	80015f0 <chSchDoRescheduleAhead>
	...

08005d10 <__default_exit>:
 8005d10:	e7fe      	b.n	8005d10 <__default_exit>
 8005d12:	bf00      	nop
	...

08005d20 <__late_init>:
 8005d20:	4770      	bx	lr
 8005d22:	bf00      	nop
	...
 8005d30:	6e696c62 	.word	0x6e696c62
 8005d34:	0072656b 	.word	0x0072656b
	...
 8005d40:	61686e75 	.word	0x61686e75
 8005d44:	656c646e 	.word	0x656c646e
 8005d48:	78652064 	.word	0x78652064
 8005d4c:	74706563 	.word	0x74706563
 8005d50:	006e6f69 	.word	0x006e6f69
	...
 8005d60:	202d2d2d 	.word	0x202d2d2d
 8005d64:	726f6353 	.word	0x726f6353
 8005d68:	203a2065 	.word	0x203a2065
 8005d6c:	00000000 	.word	0x00000000
 8005d70:	6d697420 	.word	0x6d697420
 8005d74:	2f737265 	.word	0x2f737265
 8005d78:	00000053 	.word	0x00000053
 8005d7c:	00000000 	.word	0x00000000
 8005d80:	69617720 	.word	0x69617720
 8005d84:	69732b74 	.word	0x69732b74
 8005d88:	6c616e67 	.word	0x6c616e67
 8005d8c:	0000532f 	.word	0x0000532f
 8005d90:	636f6c20 	.word	0x636f6c20
 8005d94:	6e752b6b 	.word	0x6e752b6b
 8005d98:	6b636f6c 	.word	0x6b636f6c
 8005d9c:	0000532f 	.word	0x0000532f
 8005da0:	202d2d2d 	.word	0x202d2d2d
 8005da4:	74737953 	.word	0x74737953
 8005da8:	203a6d65 	.word	0x203a6d65
 8005dac:	00000000 	.word	0x00000000
 8005db0:	74796220 	.word	0x74796220
 8005db4:	00007365 	.word	0x00007365
 8005db8:	202d2d2d 	.word	0x202d2d2d
 8005dbc:	65726854 	.word	0x65726854
 8005dc0:	203a6461 	.word	0x203a6461
 8005dc4:	00000000 	.word	0x00000000
 8005dc8:	202d2d2d 	.word	0x202d2d2d
 8005dcc:	656d6954 	.word	0x656d6954
 8005dd0:	203a2072 	.word	0x203a2072
 8005dd4:	00000000 	.word	0x00000000
 8005dd8:	202d2d2d 	.word	0x202d2d2d
 8005ddc:	616d6553 	.word	0x616d6553
 8005de0:	203a6870 	.word	0x203a6870
 8005de4:	00000000 	.word	0x00000000
 8005de8:	202d2d2d 	.word	0x202d2d2d
 8005dec:	6e657645 	.word	0x6e657645
 8005df0:	203a5374 	.word	0x203a5374
 8005df4:	00000000 	.word	0x00000000
 8005df8:	202d2d2d 	.word	0x202d2d2d
 8005dfc:	6e657645 	.word	0x6e657645
 8005e00:	203a4c74 	.word	0x203a4c74
 8005e04:	00000000 	.word	0x00000000
 8005e08:	202d2d2d 	.word	0x202d2d2d
 8005e0c:	6574754d 	.word	0x6574754d
 8005e10:	203a2078 	.word	0x203a2078
 8005e14:	00000000 	.word	0x00000000
 8005e18:	202d2d2d 	.word	0x202d2d2d
 8005e1c:	646e6f43 	.word	0x646e6f43
 8005e20:	203a2e56 	.word	0x203a2e56
 8005e24:	00000000 	.word	0x00000000
 8005e28:	202d2d2d 	.word	0x202d2d2d
 8005e2c:	75657551 	.word	0x75657551
 8005e30:	203a2065 	.word	0x203a2065
 8005e34:	00000000 	.word	0x00000000
 8005e38:	202d2d2d 	.word	0x202d2d2d
 8005e3c:	6c69614d 	.word	0x6c69614d
 8005e40:	203a2e42 	.word	0x203a2e42
	...
 8005e50:	67736d20 	.word	0x67736d20
 8005e54:	2c532f73 	.word	0x2c532f73
 8005e58:	00000020 	.word	0x00000020
 8005e5c:	00000000 	.word	0x00000000
 8005e60:	72687420 	.word	0x72687420
 8005e64:	73646165 	.word	0x73646165
 8005e68:	0000532f 	.word	0x0000532f
 8005e6c:	00000000 	.word	0x00000000
 8005e70:	73657220 	.word	0x73657220
 8005e74:	64656863 	.word	0x64656863
 8005e78:	73656c75 	.word	0x73656c75
 8005e7c:	202c532f 	.word	0x202c532f
	...
 8005e90:	78746320 	.word	0x78746320
 8005e94:	2f637773 	.word	0x2f637773
 8005e98:	00000053 	.word	0x00000053
 8005e9c:	00000000 	.word	0x00000000
 8005ea0:	74796220 	.word	0x74796220
 8005ea4:	532f7365 	.word	0x532f7365
	...

08005eb0 <ch_debug>:
 8005eb0:	6e69616d 18011600 08440404 1814100c     main......D.....
 8005ec0:	1e1d1c00 00000000 00000000 00000000     ................
 8005ed0:	00004241 00000000 00000000 00000000     AB..............
 8005ee0:	00000042 00000043 00000044 00000000     B...C...D.......
 8005ef0:	00000041 00000000 00000000 00000000     A...............

08005f00 <evhndl>:
 8005f00:	080008d1 080008c1 080008b1 00000000     ................
 8005f10:	00434241 00000000 00000000 00000000     ABC.............
 8005f20:	202a2a2a 6e72654b 203a6c65 20202020     *** Kernel:     
 8005f30:	00002020 202a2a2a 706d6f43 64656c69       ..*** Compiled
 8005f40:	2020203a 00002020 202a2a2a 706d6f43     :     ..*** Comp
 8005f50:	72656c69 2020203a 00002020 202a2a2a     iler:     ..*** 
 8005f60:	68637241 63657469 65727574 0000203a     Architecture: ..
 8005f70:	202a2a2a 65726f43 72615620 746e6169     *** Core Variant
 8005f80:	0000203a 202a2a2a 74726f50 666e4920     : ..*** Port Inf
 8005f90:	20203a6f 00002020 202a2a2a 74616c50     o:    ..*** Plat
 8005fa0:	6d726f66 2020203a 00002020 202a2a2a     form:     ..*** 
 8005fb0:	74736554 616f4220 203a6472 00002020     Test Board:   ..
 8005fc0:	202d2d2d 74736554 73614320 00002065     --- Test Case ..
 8005fd0:	00002820 202d2d2d 75736552 203a746c      (..--- Result: 
 8005fe0:	4c494146 20455255 00002328 00005b20     FAILURE (#.. [..
 8005ff0:	616e6946 6572206c 746c7573 0000203a     Final result: ..
 8006000:	656c6469 00000000 202a2a2a 62696843     idle....*** Chib
 8006010:	2f534f69 74205452 20747365 74697573     iOS/RT test suit
 8006020:	00000065 002a2a2a 2e302e33 00000030     e...***.3.0.0...
 8006030:	20727041 32203620 20383130 3631202d     Apr  6 2018 - 16
 8006040:	3a31303a 00003131 20434347 2e322e37     :01:11..GCC 7.2.
 8006050:	30322031 39303731 28203430 656c6572     1 20170904 (rele
 8006060:	29657361 52415b20 6d652f4d 64646562     ase) [ARM/embedd
 8006070:	372d6465 6172622d 2068636e 69766572     ed-7-branch revi
 8006080:	6e6f6973 35353220 5d343032 00000000     sion 255204]....
 8006090:	764d5241 454d2d37 00000000 74726f43     ARMv7-ME....Cort
 80060a0:	4d2d7865 00004634 61766441 6465636e     ex-M4F..Advanced
 80060b0:	72656b20 206c656e 65646f6d 00000000      kernel mode....
 80060c0:	334d5453 30344632 20437831 68676948     STM32F401xC High
 80060d0:	72655020 6d726f66 65636e61 74697720      Performance wit
 80060e0:	53442068 6e612050 50462064 00000055     h DSP and FPU...
 80060f0:	694d5453 656f7263 7463656c 696e6f72     STMicroelectroni
 8006100:	53207363 32334d54 31303446 69442d43     cs STM32F401C-Di
 8006110:	766f6373 00797265 00000029 0000295d     scovery.)...])..
 8006120:	202d2d2d 75736552 203a746c 43435553     --- Result: SUCC
 8006130:	00535345 4c494146 00455255 00000000     ESS.FAILURE.....
 8006140:	44434241 00000045 00000000 00000000     ABCDE...........

08006150 <patternbmk>:
 8006150:	080067a0 080067f0 08006800 08006810     .g...g...h...h..
 8006160:	08006820 08006830 08006840 08006850      h..0h..@h..Ph..
 8006170:	08006860 080067b0 080067c0 080067d0     `h...g...g...g..
 8006180:	080067e0 00000000 00000000 00000000     .g..............

08006190 <patterndyn>:
 8006190:	08006870 08006880 08006890 00000000     ph...h...h......

080061a0 <patternevt>:
 80061a0:	080068a0 080068b0 080068c0 00000000     .h...h...h......

080061b0 <patternheap>:
 80061b0:	080068d0 00000000 00000000 00000000     .h..............

080061c0 <patternmbox>:
 80061c0:	080068e0 00000000 00000000 00000000     .h..............

080061d0 <patternmsg>:
 80061d0:	080068f0 00000000 00000000 00000000     .h..............

080061e0 <patternmtx>:
 80061e0:	08006900 08006910 08006920 08006930     .i...i.. i..0i..
 80061f0:	08006940 08006950 00000000 00000000     @i..Pi..........

08006200 <patternpools>:
 8006200:	08006960 00000000 00000000 00000000     `i..............

08006210 <patternqueues>:
 8006210:	08006970 08006980 00000000 00000000     pi...i..........

08006220 <patterns>:
 8006220:	08006280 08006290 08006260 080061e0     .b...b..`b...a..
 8006230:	080061d0 080061c0 080061a0 080061b0     .a...a...a...a..
 8006240:	08006200 08006190 08006210 08006150     .b...a...b..Pa..
	...

08006260 <patternsem>:
 8006260:	08006990 080069a0 080069b0 080069c0     .i...i...i...i..
	...

08006280 <patternsys>:
 8006280:	080069d0 080069e0 080069f0 00000000     .i...i...i......

08006290 <patternthd>:
 8006290:	08006a00 08006a10 08006a20 08006a30     .j...j.. j..0j..
	...
 80062b0:	00000a0d 00000000 00000000 00000000     ................
 80062c0:	44434241 00000000 00000000 00000000     ABCD............
 80062d0:	636e6542 72616d68 52202c6b 66204d41     Benchmark, RAM f
 80062e0:	70746f6f 746e6972 00000000 636e6542     ootprint....Benc
 80062f0:	72616d68 6d202c6b 78657475 6c207365     hmark, mutexes l
 8006300:	2f6b636f 6f6c6e75 00006b63 636e6542     ock/unlock..Benc
 8006310:	72616d68 73202c6b 70616d65 65726f68     hmark, semaphore
 8006320:	61772073 732f7469 616e6769 0000006c     s wait/signal...
 8006330:	636e6542 72616d68 76202c6b 75747269     Benchmark, virtu
 8006340:	74206c61 72656d69 65732073 65722f74     al timers set/re
 8006350:	00746573 636e6542 72616d68 49202c6b     set.Benchmark, I
 8006360:	51204f2f 65756575 68742073 67756f72     /O Queues throug
 8006370:	74757068 00000000 636e6542 72616d68     hput....Benchmar
 8006380:	72202c6b 646e756f 626f7220 63206e69     k, round robin c
 8006390:	65746e6f 73207478 63746977 676e6968     ontext switching
 80063a0:	00000000 636e6542 72616d68 6d202c6b     ....Benchmark, m
 80063b0:	20737361 63736572 75646568 202c656c     ass reschedule, 
 80063c0:	68742035 64616572 00000073 636e6542     5 threads...Benc
 80063d0:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 80063e0:	61657263 6f206574 00796c6e 636e6542     create only.Benc
 80063f0:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8006400:	6c6c7566 63796320 0000656c 636e6542     full cycle..Benc
 8006410:	72616d68 63202c6b 65746e6f 73207478     hmark, context s
 8006420:	63746977 00000068 636e6542 72616d68     witch...Benchmar
 8006430:	6d202c6b 61737365 20736567 00003323     k, messages #3..
 8006440:	636e6542 72616d68 6d202c6b 61737365     Benchmark, messa
 8006450:	20736567 00003223 636e6542 72616d68     ges #2..Benchmar
 8006460:	6d202c6b 61737365 20736567 00003123     k, messages #1..
 8006470:	75657551 202c7365 7074756f 71207475     Queues, output q
 8006480:	65756575 00000073 75657551 202c7365     ueues...Queues, 
 8006490:	75706e69 75712074 73657565 00000000     input queues....
 80064a0:	616e7944 2063696d 73495041 6572202c     Dynamic APIs, re
 80064b0:	74736967 61207972 7220646e 72656665     gistry and refer
 80064c0:	65636e65 00000073 616e7944 2063696d     ences...Dynamic 
 80064d0:	73495041 6874202c 64616572 72632073     APIs, threads cr
 80064e0:	69746165 66206e6f 206d6f72 6f6d656d     eation from memo
 80064f0:	70207972 006c6f6f 616e7944 2063696d     ry pool.Dynamic 
 8006500:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8006510:	69746165 66206e6f 206d6f72 70616568     eation from heap
 8006520:	00000000 6f6d654d 50207972 736c6f6f     ....Memory Pools
 8006530:	7571202c 2f657565 75716564 00657565     , queue/dequeue.
 8006540:	70616548 6c61202c 61636f6c 6e6f6974     Heap, allocation
 8006550:	646e6120 61726620 6e656d67 69746174      and fragmentati
 8006560:	74206e6f 00747365 6e657645 202c7374     on test.Events, 
 8006570:	656d6974 7374756f 00000000 6e657645     timeouts....Even
 8006580:	202c7374 74696177 646e6120 6f726220     ts, wait and bro
 8006590:	61636461 00007473 6e657645 202c7374     adcast..Events, 
 80065a0:	69676572 61727473 6e6f6974 646e6120     registration and
 80065b0:	73696420 63746170 00000068 6c69614d      dispatch...Mail
 80065c0:	65786f62 71202c73 69756575 6120676e     boxes, queuing a
 80065d0:	7420646e 6f656d69 00737475 7373654d     nd timeouts.Mess
 80065e0:	73656761 6f6c202c 0000706f 646e6f43     ages, loop..Cond
 80065f0:	2c726156 6f6f6220 74207473 00747365     Var, boost test.
 8006600:	646e6f43 2c726156 6f726220 61636461     CondVar, broadca
 8006610:	74207473 00747365 646e6f43 2c726156     st test.CondVar,
 8006620:	67697320 206c616e 74736574 00000000      signal test....
 8006630:	6574754d 2c736578 61747320 00737574     Mutexes, status.
 8006640:	6574754d 2c736578 69727020 7469726f     Mutexes, priorit
 8006650:	65722079 6e727574 00000000 6574754d     y return....Mute
 8006660:	2c736578 69727020 7469726f 6e652079     xes, priority en
 8006670:	75657571 20676e69 74736574 00000000     queuing test....
 8006680:	616e6942 53207972 70616d65 65726f68     Binary Semaphore
 8006690:	66202c73 74636e75 616e6f69 7974696c     s, functionality
 80066a0:	00000000 616d6553 726f6870 202c7365     ....Semaphores, 
 80066b0:	6d6f7461 73206369 616e6769 61772d6c     atomic signal-wa
 80066c0:	00007469 616d6553 726f6870 202c7365     it..Semaphores, 
 80066d0:	656d6974 0074756f 616d6553 726f6870     timeout.Semaphor
 80066e0:	202c7365 75716e65 6e697565 00000067     es, enqueuing...
 80066f0:	65726854 2c736461 6c656420 00737961     Threads, delays.
 8006700:	65726854 2c736461 69727020 7469726f     Threads, priorit
 8006710:	68632079 65676e61 00000000 65726854     y change....Thre
 8006720:	2c736461 716e6520 69756575 7420676e     ads, enqueuing t
 8006730:	20747365 00003223 65726854 2c736461     est #2..Threads,
 8006740:	716e6520 69756575 7420676e 20747365      enqueuing test 
 8006750:	00003123 74737953 202c6d65 65746e69     #1..System, inte
 8006760:	74697267 00000079 74737953 202c6d65     grity...System, 
 8006770:	65746e69 70757272 68207374 6c646e61     interrupts handl
 8006780:	00676e69 74737953 202c6d65 74697263     ing.System, crit
 8006790:	6c616369 6e6f7a20 00007365 00000000     ical zones......

080067a0 <testbmk1>:
 80067a0:	08006458 00000000 00000000 08003f81     Xd...........?..

080067b0 <testbmk10>:
 80067b0:	08006330 00000000 00000000 080029c1     0c...........)..

080067c0 <testbmk11>:
 80067c0:	0800630c 08000431 00000000 08003841     .c..1.......A8..

080067d0 <testbmk12>:
 80067d0:	080062ec 08000421 00000000 08002eb1     .b..!...........

080067e0 <testbmk13>:
 80067e0:	080062d0 00000000 00000000 08001471     .b..........q...

080067f0 <testbmk2>:
 80067f0:	08006440 00000000 00000000 08003f11     @d...........?..

08006800 <testbmk3>:
 8006800:	08006428 00000000 00000000 08003e31     (d..........1>..

08006810 <testbmk4>:
 8006810:	0800640c 00000000 00000000 08003d81     .d...........=..

08006820 <testbmk5>:
 8006820:	080063ec 00000000 00000000 08003ac1     .c...........:..

08006830 <testbmk6>:
 8006830:	080063cc 00000000 00000000 08002b01     .c...........+..

08006840 <testbmk7>:
 8006840:	080063a4 08000461 00000000 08003c51     .c..a.......Q<..

08006850 <testbmk8>:
 8006850:	08006378 00000000 00000000 08003b71     xc..........q;..

08006860 <testbmk9>:
 8006860:	08006354 00000000 00000000 08002a51     Tc..........Q*..

08006870 <testdyn1>:
 8006870:	080064f8 08000511 00000000 08004601     .d...........F..

08006880 <testdyn2>:
 8006880:	080064c8 080004f1 00000000 08004501     .d...........E..

08006890 <testdyn3>:
 8006890:	080064a0 08000541 00000000 08003471     .d..A.......q4..

080068a0 <testevt1>:
 80068a0:	08006598 080005b1 00000000 08000bf1     .e..............

080068b0 <testevt2>:
 80068b0:	0800657c 080005d1 00000000 080046d1     |e...........F..

080068c0 <testevt3>:
 80068c0:	08006568 080005c1 00000000 08001d31     he..........1...

080068d0 <testheap1>:
 80068d0:	08006540 08000581 00000000 080035a1     @e...........5..

080068e0 <testmbox1>:
 80068e0:	080065bc 080005e1 00000000 08001fc1     .e..............

080068f0 <testmsg1>:
 80068f0:	080065dc 00000000 00000000 08002c81     .e...........,..

08006900 <testmtx1>:
 8006900:	0800665c 080006a1 00000000 08004e71     \f..........qN..

08006910 <testmtx4>:
 8006910:	08006640 08000681 00000000 08004c11     @f...........L..

08006920 <testmtx5>:
 8006920:	08006630 080006b1 00000000 08003041     0f..........A0..

08006930 <testmtx6>:
 8006930:	08006618 08000651 00000000 08004b31     .f..Q.......1K..

08006940 <testmtx7>:
 8006940:	08006600 08000671 00000000 08004a41     .f..q.......AJ..

08006950 <testmtx8>:
 8006950:	080065ec 08000621 00000000 080049b1     .e..!........I..

08006960 <testpools1>:
 8006960:	08006524 08000561 00000000 08000ae1     $e..a...........

08006970 <testqueues1>:
 8006970:	08006488 080004c1 00000000 08004251     .d..........QB..

08006980 <testqueues2>:
 8006980:	08006470 08000491 00000000 08003ff1     pd...........?..

08006990 <testsem1>:
 8006990:	080066d8 080006c1 00000000 080050b1     .f...........P..

080069a0 <testsem2>:
 80069a0:	080066c4 080006e1 00000000 08004f61     .f..........aO..

080069b0 <testsem3>:
 80069b0:	080066a4 080006d1 00000000 08001b61     .f..........a...

080069c0 <testsem4>:
 80069c0:	08006680 00000000 00000000 080038e1     .f...........8..

080069d0 <testsys1>:
 80069d0:	08006784 00000000 00000000 08002841     .g..........A(..

080069e0 <testsys2>:
 80069e0:	08006768 00000000 00000000 08000471     hg..........q...

080069f0 <testsys3>:
 80069f0:	08006754 00000000 00000000 080013c1     Tg..............

08006a00 <testthd1>:
 8006a00:	08006738 00000000 00000000 08005361     8g..........aS..

08006a10 <testthd2>:
 8006a10:	0800671c 00000000 00000000 08005221     .g..........!R..

08006a20 <testthd3>:
 8006a20:	08006700 00000000 00000000 08001711     .g..............

08006a30 <testthd4>:
 8006a30:	080066f0 00000000 00000000 08002b71     .f..........q+..

08006a40 <vmt>:
 8006a40:	08002631 08002751 080026b1 080027d1     1&..Q'...&...'..
 8006a50:	080026a1 080027c1 08002621 08002741     .&...'..!&..A'..

08006a60 <wa>:
 8006a60:	20000bc0 20000d90 20000f60 20001130     ... ... `.. 0.. 
 8006a70:	20001300                                ... 
