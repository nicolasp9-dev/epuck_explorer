
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080000c1

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x00000e60 memsz 0x00000e60 flags rwx
    LOAD off    0x00020500 vaddr 0x20000500 paddr 0x08000e60 align 2**16
         filesz 0x00000000 memsz 0x00000398 flags rw-
    LOAD off    0x00020000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000500 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000c0  08000000  08000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000da0  080000c0  080000c0  000100c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000000  08000e60  08000e60  00010e60  2**0
                  CONTENTS
  3 .mstack       00000400  20000000  20000000  00020000  2**0
                  ALLOC
  4 .pstack       00000100  20000400  20000400  00020000  2**0
                  ALLOC
  5 .data         00000000  20000500  20000500  00010e60  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000398  20000500  08000e60  00020500  2**3
                  ALLOC
  7 .ram0         00000000  20000898  20000898  00010e60  2**2
                  CONTENTS
  8 .ram1         00000000  00000000  00000000  00010e60  2**2
                  CONTENTS
  9 .ram2         00000000  00000000  00000000  00010e60  2**2
                  CONTENTS
 10 .ram3         00000000  00000000  00000000  00010e60  2**2
                  CONTENTS
 11 .ram4         00000000  00000000  00000000  00010e60  2**2
                  CONTENTS
 12 .ram5         00000000  00000000  00000000  00010e60  2**2
                  CONTENTS
 13 .ram6         00000000  00000000  00000000  00010e60  2**2
                  CONTENTS
 14 .ram7         00000000  00000000  00000000  00010e60  2**2
                  CONTENTS
 15 .ARM.attributes 0000002b  00000000  00000000  00010e60  2**0
                  CONTENTS, READONLY
 16 .comment      0000007e  00000000  00000000  00010e8b  2**0
                  CONTENTS, READONLY
 17 .debug_info   00003692  00000000  00000000  00010f09  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_abbrev 00000680  00000000  00000000  0001459b  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_loc    0000136d  00000000  00000000  00014c1b  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 00000118  00000000  00000000  00015f88  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_ranges 00000508  00000000  00000000  000160a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_line   00000d0a  00000000  00000000  000165a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_str    00000f90  00000000  00000000  000172b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_frame  0000036c  00000000  00000000  00018244  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000c0 l    d  .text	00000000 .text
08000e60 l    d  .textalign	00000000 .textalign
20000000 l    d  .mstack	00000000 .mstack
20000400 l    d  .pstack	00000000 .pstack
20000500 l    d  .data	00000000 .data
20000500 l    d  .bss	00000000 .bss
20000898 l    d  .ram0	00000000 .ram0
00000000 l    d  .ram1	00000000 .ram1
00000000 l    d  .ram2	00000000 .ram2
00000000 l    d  .ram3	00000000 .ram3
00000000 l    d  .ram4	00000000 .ram4
00000000 l    d  .ram5	00000000 .ram5
00000000 l    d  .ram6	00000000 .ram6
00000000 l    d  .ram7	00000000 .ram7
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 
080002f0 l     F .text	00000038 osalThreadDequeueNextI.constprop.13
08000330 l     F .text	00000084 _pal_lld_setgroupmode.constprop.2
080003c0 l     F .text	00000010 notify1
080003d0 l     F .text	00000040 _port_irq_epilogue
08000410 l     F .text	00000014 NMI_Handler
08000430 l     F .text	00000004 _unhandled_exception
08000430 l     F .text	00000004 BusFault_Handler
08000430 l     F .text	00000004 UsageFault_Handler
08000430 l     F .text	00000004 Vector1C
08000430 l     F .text	00000004 Vector20
08000430 l     F .text	00000004 Vector24
08000430 l     F .text	00000004 Vector28
08000430 l     F .text	00000004 SVC_Handler
08000430 l     F .text	00000004 DebugMon_Handler
08000430 l     F .text	00000004 Vector34
08000430 l     F .text	00000004 PendSV_Handler
08000430 l     F .text	00000004 SysTick_Handler
08000430 l     F .text	00000004 Vector40
08000430 l     F .text	00000004 Vector44
08000430 l     F .text	00000004 Vector48
08000430 l     F .text	00000004 Vector4C
08000430 l     F .text	00000004 Vector50
08000430 l     F .text	00000004 Vector54
08000430 l     F .text	00000004 Vector58
08000430 l     F .text	00000004 Vector5C
08000430 l     F .text	00000004 Vector60
08000430 l     F .text	00000004 Vector64
08000430 l     F .text	00000004 Vector68
08000430 l     F .text	00000004 Vector6C
08000430 l     F .text	00000004 Vector70
08000430 l     F .text	00000004 Vector74
08000430 l     F .text	00000004 Vector78
08000430 l     F .text	00000004 HardFault_Handler
08000430 l     F .text	00000004 Vector80
08000430 l     F .text	00000004 Vector84
08000430 l     F .text	00000004 Vector88
08000430 l     F .text	00000004 Vector8C
08000430 l     F .text	00000004 Vector90
08000430 l     F .text	00000004 Vector94
08000430 l     F .text	00000004 Vector98
08000430 l     F .text	00000004 Vector9C
08000430 l     F .text	00000004 VectorA0
08000430 l     F .text	00000004 VectorA4
08000430 l     F .text	00000004 VectorA8
08000430 l     F .text	00000004 MemManage_Handler
08000430 l     F .text	00000004 VectorB0
08000430 l     F .text	00000004 VectorB4
08000430 l     F .text	00000004 VectorB8
08000430 l     F .text	00000004 VectorBC
08000440 l     F .text	00000080 chSchGoSleepTimeoutS
080004c0 l     F .text	00000030 chSemWaitTimeoutS
080004f0 l     F .text	0000007a oqWriteTimeout
08000570 l     F .text	0000000a writet
08000580 l     F .text	0000000c write
08000590 l     F .text	0000004e oqPutTimeout
080005e0 l     F .text	0000000a putt
080005f0 l     F .text	0000000c put
08000600 l     F .text	0000006a iqReadTimeout
08000670 l     F .text	0000000a readt
08000680 l     F .text	0000000c read
08000690 l     F .text	00000042 iqGetTimeout
080006e0 l     F .text	0000000a gett
080006f0 l     F .text	0000000c get
08000700 l     F .text	00000010 chThdSleep
08000710 l     F .text	00000098 Thread3
080007b0 l     F .text	00000024 Thread2
080007e0 l     F .text	00000024 Thread1
08000810 l     F .text	00000194 VectorAC
080009b0 l     F .text	000000b4 Vector7C
200005e0 l     O .bss	000000e8 waThread1
20000500 l     O .bss	0000007c SD1
2000057c l     O .bss	00000060 nil
200006c8 l     O .bss	000000e8 waThread2
200007b0 l     O .bss	000000e8 waThread3
08000dc0 l     O .text	00000050 nil_thd_configs
08000e40 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 build/obj/crt0_v6m.o
080000dc l       .text	00000000 msloop
080000e6 l       .text	00000000 endmsloop
080000ea l       .text	00000000 psloop
080000f4 l       .text	00000000 endpsloop
080000fa l       .text	00000000 dloop
08000108 l       .text	00000000 enddloop
0800010e l       .text	00000000 bloop
08000118 l       .text	00000000 endbloop
08000120 l       .text	00000000 initloop
0800012c l       .text	00000000 endinitloop
08000134 l       .text	00000000 finiloop
08000140 l       .text	00000000 endfiniloop
00000000 l    df *ABS*	00000000 build/obj/nilcoreasm_v6m.o
00000000 l       *ABS*	00000000 CONTEXT_OFFSET
e000ed04 l       *ABS*	00000000 SCB_ICSR
10000000 l       *ABS*	00000000 ICSR_PENDSVSET
80000000 l       *ABS*	00000000 ICSR_NMIPENDSET
00000000 l    df *ABS*	00000000 _udivsi3.o
080001c0 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 g       startup	00000000 __ram4_start__
00000000 g       .ram1	00000000 __ram1_free__
00000000 g       startup	00000000 __ram6_start__
08000000 g     O startup	000000c0 _vectors
20000898 g       .ram0	00000000 __ram0_free__
20000898 g       .ram0	00000000 __heap_base__
08000e60 g       .mstack	00000000 _etext
08000d60 g     F .text	00000018 chSchRescheduleS
00000000 g       *ABS*	00000000 __ram5_end__
00000000 g       *ABS*	00000000 __ram5_size__
080000c0 g       startup	00000000 __fini_array_end
20000500 g       .pstack	00000000 __main_thread_stack_end__
080001c0 g     F .text	0000010a .hidden __udivsi3
20000500 g       .bss	00000000 _bss_start
20002000 g       *ABS*	00000000 __heap_end__
00000000 g       *ABS*	00000000 __ram1_size__
00000000 g       .ram7	00000000 __ram7_free__
00000000 g       *ABS*	00000000 __ram4_size__
00000000 g       *ABS*	00000000 __ram1_end__
00000000 g       *ABS*	00000000 __ram4_end__
00002000 g       *ABS*	00000000 __ram0_size__
08000d80 g     F .text	00000004 chSysHalt
20000898 g       .bss	00000000 _bss_end
080000c0 g     F .text	00000000 Reset_Handler
00000000 g       .ram5	00000000 __ram5_free__
08000d90 g     F .text	00000002 __default_exit
00000000 g       *ABS*	00000000 __ram6_end__
00000000 g       .ram6	00000000 __ram6_free__
00000000 g       *ABS*	00000000 __ram7_size__
08000180 g     F .text	00000000 _port_switch
08000da0 g     F .text	00000002 __late_init
00000000 g       startup	00000000 __ram7_start__
080002e0  w    F .text	00000002 .hidden __aeabi_ldiv0
00000000 g       *ABS*	00000000 __ram3_size__
08000e60 g       *ABS*	00000000 _textdata
00000000 g       startup	00000000 _text
080000c0 g       startup	00000000 __fini_array_start
00000000 g       *ABS*	00000000 __ram3_end__
00000000 g       *ABS*	00000000 __ram2_size__
00000000 g       startup	00000000 __ram1_start__
08000a70 g     F .text	00000238 main
00000000 g       *ABS*	00000000 __ram6_size__
080001c0 g     F .text	00000000 .hidden __aeabi_uidiv
00000000 g       .ram3	00000000 __ram3_free__
080000c0 g       startup	00000000 __init_array_end
080001a0 g     F .text	00000000 _port_thread_start
00000000 g       *ABS*	00000000 __ram2_end__
20000400 g       .pstack	00000000 __process_stack_base__
20000500 g       .data	00000000 _data
00000000 g       startup	00000000 __ram2_start__
080001ac g     F .text	00000000 _port_switch_from_isr
00000000 g       *ABS*	00000000 __ram7_end__
20000400 g       .mstack	00000000 __main_stack_end__
080002cc g     F .text	00000008 .hidden __aeabi_uidivmod
20000500 g       .data	00000000 _edata
20000400 g       .pstack	00000000 __main_thread_stack_base__
20000000 g       startup	00000000 __ram0_start__
080001b0 g       .text	00000000 _port_exit_from_isr
080002e0  w    F .text	00000002 .hidden __aeabi_idiv0
080000c0 g       startup	00000000 __init_array_start
00000000 g       startup	00000000 __ram5_start__
00000000 g       .ram2	00000000 __ram2_free__
00000000 g       .ram4	00000000 __ram4_free__
20002000 g       *ABS*	00000000 __ram0_end__
20000000 g       .mstack	00000000 __main_stack_base__
00000400 g       *ABS*	00000000 __main_stack_size__
20000500 g       .pstack	00000000 __process_stack_end__
08000cb0 g     F .text	000000a4 __early_init
00000000 g       startup	00000000 __ram3_start__
00000100 g       *ABS*	00000000 __process_stack_size__


