
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

080001c0 <Reset_Handler>:
 80001c0:	b672      	cpsid	i
 80001c2:	4821      	ldr	r0, [pc, #132]	; (8000248 <endfiniloop+0x6>)
 80001c4:	f380 8809 	msr	PSP, r0
 80001c8:	2002      	movs	r0, #2
 80001ca:	f380 8814 	msr	CONTROL, r0
 80001ce:	f3bf 8f6f 	isb	sy
 80001d2:	f005 fc45 	bl	8005a60 <__early_init>
 80001d6:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
 80001da:	491c      	ldr	r1, [pc, #112]	; (800024c <endfiniloop+0xa>)
 80001dc:	4a1c      	ldr	r2, [pc, #112]	; (8000250 <endfiniloop+0xe>)

080001de <msloop>:
 80001de:	4291      	cmp	r1, r2
 80001e0:	bf3c      	itt	cc
 80001e2:	f841 0b04 	strcc.w	r0, [r1], #4
 80001e6:	e7fa      	bcc.n	80001de <msloop>
 80001e8:	491a      	ldr	r1, [pc, #104]	; (8000254 <endfiniloop+0x12>)
 80001ea:	4a17      	ldr	r2, [pc, #92]	; (8000248 <endfiniloop+0x6>)

080001ec <psloop>:
 80001ec:	4291      	cmp	r1, r2
 80001ee:	bf3c      	itt	cc
 80001f0:	f841 0b04 	strcc.w	r0, [r1], #4
 80001f4:	e7fa      	bcc.n	80001ec <psloop>
 80001f6:	4918      	ldr	r1, [pc, #96]	; (8000258 <endfiniloop+0x16>)
 80001f8:	4a18      	ldr	r2, [pc, #96]	; (800025c <endfiniloop+0x1a>)
 80001fa:	4b19      	ldr	r3, [pc, #100]	; (8000260 <endfiniloop+0x1e>)

080001fc <dloop>:
 80001fc:	429a      	cmp	r2, r3
 80001fe:	bf3e      	ittt	cc
 8000200:	f851 0b04 	ldrcc.w	r0, [r1], #4
 8000204:	f842 0b04 	strcc.w	r0, [r2], #4
 8000208:	e7f8      	bcc.n	80001fc <dloop>
 800020a:	2000      	movs	r0, #0
 800020c:	4915      	ldr	r1, [pc, #84]	; (8000264 <endfiniloop+0x22>)
 800020e:	4a16      	ldr	r2, [pc, #88]	; (8000268 <endfiniloop+0x26>)

08000210 <bloop>:
 8000210:	4291      	cmp	r1, r2
 8000212:	bf3c      	itt	cc
 8000214:	f841 0b04 	strcc.w	r0, [r1], #4
 8000218:	e7fa      	bcc.n	8000210 <bloop>
 800021a:	f005 fcb9 	bl	8005b90 <__late_init>
 800021e:	4c13      	ldr	r4, [pc, #76]	; (800026c <endfiniloop+0x2a>)
 8000220:	4d13      	ldr	r5, [pc, #76]	; (8000270 <endfiniloop+0x2e>)

08000222 <initloop>:
 8000222:	42ac      	cmp	r4, r5
 8000224:	da03      	bge.n	800022e <endinitloop>
 8000226:	f854 1b04 	ldr.w	r1, [r4], #4
 800022a:	4788      	blx	r1
 800022c:	e7f9      	b.n	8000222 <initloop>

0800022e <endinitloop>:
 800022e:	f005 f877 	bl	8005320 <main>
 8000232:	4c10      	ldr	r4, [pc, #64]	; (8000274 <endfiniloop+0x32>)
 8000234:	4d10      	ldr	r5, [pc, #64]	; (8000278 <endfiniloop+0x36>)

08000236 <finiloop>:
 8000236:	42ac      	cmp	r4, r5
 8000238:	da03      	bge.n	8000242 <endfiniloop>
 800023a:	f854 1b04 	ldr.w	r1, [r4], #4
 800023e:	4788      	blx	r1
 8000240:	e7f9      	b.n	8000236 <finiloop>

08000242 <endfiniloop>:
 8000242:	f005 bc9d 	b.w	8005b80 <__default_exit>
 8000246:	0000      	.short	0x0000
 8000248:	20000800 	.word	0x20000800
 800024c:	20000000 	.word	0x20000000
 8000250:	20000400 	.word	0x20000400
 8000254:	20000400 	.word	0x20000400
 8000258:	080068e8 	.word	0x080068e8
 800025c:	20000800 	.word	0x20000800
 8000260:	200008b8 	.word	0x200008b8
 8000264:	200008b8 	.word	0x200008b8
 8000268:	20001378 	.word	0x20001378
 800026c:	080001c0 	.word	0x080001c0
 8000270:	080001c0 	.word	0x080001c0
 8000274:	080001c0 	.word	0x080001c0
 8000278:	080001c0 	.word	0x080001c0
 800027c:	00000000 	.word	0x00000000

08000280 <_port_switch>:
 8000280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000284:	f8c1 d00c 	str.w	sp, [r1, #12]
 8000288:	f8d0 d00c 	ldr.w	sp, [r0, #12]
 800028c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000290 <_port_thread_start>:
 8000290:	2300      	movs	r3, #0
 8000292:	f383 8811 	msr	BASEPRI, r3
 8000296:	4628      	mov	r0, r5
 8000298:	47a0      	blx	r4
 800029a:	2000      	movs	r0, #0
 800029c:	f005 fc38 	bl	8005b10 <chThdExit>

080002a0 <_port_switch_from_isr>:
 80002a0:	f005 fc66 	bl	8005b70 <chSchDoReschedule>

080002a4 <_port_exit_from_isr>:
 80002a4:	df00      	svc	0
 80002a6:	e7fe      	b.n	80002a6 <_port_exit_from_isr+0x2>
	...

080002b0 <chTMStartMeasurementX.constprop.55>:
 80002b0:	4b01      	ldr	r3, [pc, #4]	; (80002b8 <chTMStartMeasurementX.constprop.55+0x8>)
 80002b2:	685b      	ldr	r3, [r3, #4]
 80002b4:	6083      	str	r3, [r0, #8]
 80002b6:	4770      	bx	lr
 80002b8:	e0001000 	.word	0xe0001000
 80002bc:	00000000 	.word	0x00000000

080002c0 <chEvtGetAndClearEvents.constprop.35>:
 80002c0:	2320      	movs	r3, #32
 80002c2:	f383 8811 	msr	BASEPRI, r3
 80002c6:	4b04      	ldr	r3, [pc, #16]	; (80002d8 <chEvtGetAndClearEvents.constprop.35+0x18>)
 80002c8:	699a      	ldr	r2, [r3, #24]
 80002ca:	2300      	movs	r3, #0
 80002cc:	6b50      	ldr	r0, [r2, #52]	; 0x34
 80002ce:	6353      	str	r3, [r2, #52]	; 0x34
 80002d0:	f383 8811 	msr	BASEPRI, r3
 80002d4:	4770      	bx	lr
 80002d6:	bf00      	nop
 80002d8:	20000930 	.word	0x20000930
 80002dc:	00000000 	.word	0x00000000

080002e0 <tmr>:
 80002e0:	4b01      	ldr	r3, [pc, #4]	; (80002e8 <tmr+0x8>)
 80002e2:	2201      	movs	r2, #1
 80002e4:	701a      	strb	r2, [r3, #0]
 80002e6:	4770      	bx	lr
 80002e8:	200011c8 	.word	0x200011c8
 80002ec:	00000000 	.word	0x00000000

080002f0 <_idle_thread>:
 80002f0:	e7fe      	b.n	80002f0 <_idle_thread>
 80002f2:	bf00      	nop
	...

08000300 <chCoreAlloc>:
 8000300:	4603      	mov	r3, r0
 8000302:	2220      	movs	r2, #32
 8000304:	f382 8811 	msr	BASEPRI, r2
 8000308:	4908      	ldr	r1, [pc, #32]	; (800032c <chCoreAlloc+0x2c>)
 800030a:	4a09      	ldr	r2, [pc, #36]	; (8000330 <chCoreAlloc+0x30>)
 800030c:	6808      	ldr	r0, [r1, #0]
 800030e:	6812      	ldr	r2, [r2, #0]
 8000310:	3307      	adds	r3, #7
 8000312:	f023 0307 	bic.w	r3, r3, #7
 8000316:	1a12      	subs	r2, r2, r0
 8000318:	4293      	cmp	r3, r2
 800031a:	bf9a      	itte	ls
 800031c:	181b      	addls	r3, r3, r0
 800031e:	600b      	strls	r3, [r1, #0]
 8000320:	2000      	movhi	r0, #0
 8000322:	2300      	movs	r3, #0
 8000324:	f383 8811 	msr	BASEPRI, r3
 8000328:	4770      	bx	lr
 800032a:	bf00      	nop
 800032c:	20000b24 	.word	0x20000b24
 8000330:	20000aa8 	.word	0x20000aa8
	...

08000340 <notify2>:
 8000340:	4a02      	ldr	r2, [pc, #8]	; (800034c <notify2+0xc>)
 8000342:	68d3      	ldr	r3, [r2, #12]
 8000344:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000348:	60d3      	str	r3, [r2, #12]
 800034a:	4770      	bx	lr
 800034c:	40004400 	.word	0x40004400

08000350 <bmk12_setup>:
 8000350:	4b02      	ldr	r3, [pc, #8]	; (800035c <bmk12_setup+0xc>)
 8000352:	2200      	movs	r2, #0
 8000354:	e9c3 3300 	strd	r3, r3, [r3]
 8000358:	609a      	str	r2, [r3, #8]
 800035a:	4770      	bx	lr
 800035c:	20000b14 	.word	0x20000b14

08000360 <bmk11_setup>:
 8000360:	4b02      	ldr	r3, [pc, #8]	; (800036c <bmk11_setup+0xc>)
 8000362:	2201      	movs	r2, #1
 8000364:	e9c3 3300 	strd	r3, r3, [r3]
 8000368:	609a      	str	r2, [r3, #8]
 800036a:	4770      	bx	lr
 800036c:	20000b28 	.word	0x20000b28

08000370 <notify>:
 8000370:	4770      	bx	lr
 8000372:	bf00      	nop
	...

08000380 <tmo>:
 8000380:	4770      	bx	lr
 8000382:	bf00      	nop
	...

08000390 <bmk7_setup>:
 8000390:	4b02      	ldr	r3, [pc, #8]	; (800039c <bmk7_setup+0xc>)
 8000392:	2200      	movs	r2, #0
 8000394:	e9c3 3300 	strd	r3, r3, [r3]
 8000398:	609a      	str	r2, [r3, #8]
 800039a:	4770      	bx	lr
 800039c:	20000b28 	.word	0x20000b28

080003a0 <sys2_execute>:
 80003a0:	2320      	movs	r3, #32
 80003a2:	f383 8811 	msr	BASEPRI, r3
 80003a6:	b662      	cpsie	i
 80003a8:	b672      	cpsid	i
 80003aa:	f383 8811 	msr	BASEPRI, r3
 80003ae:	b662      	cpsie	i
 80003b0:	2300      	movs	r3, #0
 80003b2:	f383 8811 	msr	BASEPRI, r3
 80003b6:	b662      	cpsie	i
 80003b8:	4770      	bx	lr
 80003ba:	bf00      	nop
 80003bc:	0000      	movs	r0, r0
	...

080003c0 <queues2_setup>:
 80003c0:	b430      	push	{r4, r5}
 80003c2:	4a08      	ldr	r2, [pc, #32]	; (80003e4 <queues2_setup+0x24>)
 80003c4:	4b08      	ldr	r3, [pc, #32]	; (80003e8 <queues2_setup+0x28>)
 80003c6:	4809      	ldr	r0, [pc, #36]	; (80003ec <queues2_setup+0x2c>)
 80003c8:	601b      	str	r3, [r3, #0]
 80003ca:	1d15      	adds	r5, r2, #4
 80003cc:	2404      	movs	r4, #4
 80003ce:	2100      	movs	r1, #0
 80003d0:	611d      	str	r5, [r3, #16]
 80003d2:	609c      	str	r4, [r3, #8]
 80003d4:	605b      	str	r3, [r3, #4]
 80003d6:	60da      	str	r2, [r3, #12]
 80003d8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80003dc:	e9c3 0107 	strd	r0, r1, [r3, #28]
 80003e0:	bc30      	pop	{r4, r5}
 80003e2:	4770      	bx	lr
 80003e4:	20000b38 	.word	0x20000b38
 80003e8:	20000888 	.word	0x20000888
 80003ec:	08000371 	.word	0x08000371

080003f0 <queues1_setup>:
 80003f0:	4a08      	ldr	r2, [pc, #32]	; (8000414 <queues1_setup+0x24>)
 80003f2:	4b09      	ldr	r3, [pc, #36]	; (8000418 <queues1_setup+0x28>)
 80003f4:	4809      	ldr	r0, [pc, #36]	; (800041c <queues1_setup+0x2c>)
 80003f6:	b410      	push	{r4}
 80003f8:	2100      	movs	r1, #0
 80003fa:	1d14      	adds	r4, r2, #4
 80003fc:	611c      	str	r4, [r3, #16]
 80003fe:	601b      	str	r3, [r3, #0]
 8000400:	605b      	str	r3, [r3, #4]
 8000402:	60da      	str	r2, [r3, #12]
 8000404:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8000408:	61d8      	str	r0, [r3, #28]
 800040a:	6099      	str	r1, [r3, #8]
 800040c:	6219      	str	r1, [r3, #32]
 800040e:	bc10      	pop	{r4}
 8000410:	4770      	bx	lr
 8000412:	bf00      	nop
 8000414:	20000b38 	.word	0x20000b38
 8000418:	20000810 	.word	0x20000810
 800041c:	08000371 	.word	0x08000371

08000420 <dyn2_setup>:
 8000420:	4b03      	ldr	r3, [pc, #12]	; (8000430 <dyn2_setup+0x10>)
 8000422:	2200      	movs	r2, #0
 8000424:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8000428:	e9c3 2100 	strd	r2, r1, [r3]
 800042c:	609a      	str	r2, [r3, #8]
 800042e:	4770      	bx	lr
 8000430:	20000b08 	.word	0x20000b08
	...

08000440 <dyn1_setup>:
 8000440:	4b08      	ldr	r3, [pc, #32]	; (8000464 <dyn1_setup+0x24>)
 8000442:	4909      	ldr	r1, [pc, #36]	; (8000468 <dyn1_setup+0x28>)
 8000444:	b410      	push	{r4}
 8000446:	2200      	movs	r2, #0
 8000448:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 800044c:	f103 0010 	add.w	r0, r3, #16
 8000450:	e9c1 2400 	strd	r2, r4, [r1]
 8000454:	6099      	str	r1, [r3, #8]
 8000456:	e9c3 0004 	strd	r0, r0, [r3, #16]
 800045a:	601a      	str	r2, [r3, #0]
 800045c:	60da      	str	r2, [r3, #12]
 800045e:	619a      	str	r2, [r3, #24]
 8000460:	bc10      	pop	{r4}
 8000462:	4770      	bx	lr
 8000464:	20000ab0 	.word	0x20000ab0
 8000468:	20000b38 	.word	0x20000b38
 800046c:	00000000 	.word	0x00000000

08000470 <dyn3_setup>:
 8000470:	f7ff bfe6 	b.w	8000440 <dyn1_setup>
	...

08000480 <null_provider>:
 8000480:	2000      	movs	r0, #0
 8000482:	4770      	bx	lr
	...

08000490 <pools1_setup>:
 8000490:	4b03      	ldr	r3, [pc, #12]	; (80004a0 <pools1_setup+0x10>)
 8000492:	2200      	movs	r2, #0
 8000494:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8000498:	e9c3 2100 	strd	r2, r1, [r3]
 800049c:	609a      	str	r2, [r3, #8]
 800049e:	4770      	bx	lr
 80004a0:	2000087c 	.word	0x2000087c
	...

080004b0 <heap1_setup>:
 80004b0:	4b08      	ldr	r3, [pc, #32]	; (80004d4 <heap1_setup+0x24>)
 80004b2:	4909      	ldr	r1, [pc, #36]	; (80004d8 <heap1_setup+0x28>)
 80004b4:	b410      	push	{r4}
 80004b6:	2200      	movs	r2, #0
 80004b8:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 80004bc:	f103 0010 	add.w	r0, r3, #16
 80004c0:	e9c1 2400 	strd	r2, r4, [r1]
 80004c4:	6099      	str	r1, [r3, #8]
 80004c6:	e9c3 0004 	strd	r0, r0, [r3, #16]
 80004ca:	601a      	str	r2, [r3, #0]
 80004cc:	60da      	str	r2, [r3, #12]
 80004ce:	619a      	str	r2, [r3, #24]
 80004d0:	bc10      	pop	{r4}
 80004d2:	4770      	bx	lr
 80004d4:	200011a8 	.word	0x200011a8
 80004d8:	20000b38 	.word	0x20000b38
 80004dc:	00000000 	.word	0x00000000

080004e0 <evt1_setup>:
 80004e0:	f7ff beee 	b.w	80002c0 <chEvtGetAndClearEvents.constprop.35>
	...

080004f0 <evt3_setup>:
 80004f0:	f7ff bff6 	b.w	80004e0 <evt1_setup>
	...

08000500 <evt2_setup>:
 8000500:	f7ff bfee 	b.w	80004e0 <evt1_setup>
	...

08000510 <mbox1_setup>:
 8000510:	b430      	push	{r4, r5}
 8000512:	4b0b      	ldr	r3, [pc, #44]	; (8000540 <mbox1_setup+0x30>)
 8000514:	4a0b      	ldr	r2, [pc, #44]	; (8000544 <mbox1_setup+0x34>)
 8000516:	601a      	str	r2, [r3, #0]
 8000518:	f102 0514 	add.w	r5, r2, #20
 800051c:	2405      	movs	r4, #5
 800051e:	f103 011c 	add.w	r1, r3, #28
 8000522:	2000      	movs	r0, #0
 8000524:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8000528:	f103 0210 	add.w	r2, r3, #16
 800052c:	605d      	str	r5, [r3, #4]
 800052e:	625c      	str	r4, [r3, #36]	; 0x24
 8000530:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8000534:	6219      	str	r1, [r3, #32]
 8000536:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800053a:	bc30      	pop	{r4, r5}
 800053c:	4770      	bx	lr
 800053e:	bf00      	nop
 8000540:	20000854 	.word	0x20000854
 8000544:	20000b38 	.word	0x20000b38
	...

08000550 <mtx8_setup>:
 8000550:	4906      	ldr	r1, [pc, #24]	; (800056c <mtx8_setup+0x1c>)
 8000552:	4a07      	ldr	r2, [pc, #28]	; (8000570 <mtx8_setup+0x20>)
 8000554:	4b07      	ldr	r3, [pc, #28]	; (8000574 <mtx8_setup+0x24>)
 8000556:	6009      	str	r1, [r1, #0]
 8000558:	2000      	movs	r0, #0
 800055a:	6049      	str	r1, [r1, #4]
 800055c:	e9c2 2200 	strd	r2, r2, [r2]
 8000560:	6090      	str	r0, [r2, #8]
 8000562:	6098      	str	r0, [r3, #8]
 8000564:	e9c3 3300 	strd	r3, r3, [r3]
 8000568:	4770      	bx	lr
 800056a:	bf00      	nop
 800056c:	20000800 	.word	0x20000800
 8000570:	20000834 	.word	0x20000834
 8000574:	20000844 	.word	0x20000844
	...

08000580 <mtx6_setup>:
 8000580:	4a04      	ldr	r2, [pc, #16]	; (8000594 <mtx6_setup+0x14>)
 8000582:	4b05      	ldr	r3, [pc, #20]	; (8000598 <mtx6_setup+0x18>)
 8000584:	6012      	str	r2, [r2, #0]
 8000586:	2100      	movs	r1, #0
 8000588:	6052      	str	r2, [r2, #4]
 800058a:	e9c3 3300 	strd	r3, r3, [r3]
 800058e:	6099      	str	r1, [r3, #8]
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop
 8000594:	20000800 	.word	0x20000800
 8000598:	20000834 	.word	0x20000834
 800059c:	00000000 	.word	0x00000000

080005a0 <mtx7_setup>:
 80005a0:	f7ff bfee 	b.w	8000580 <mtx6_setup>
	...

080005b0 <mtx4_setup>:
 80005b0:	4a04      	ldr	r2, [pc, #16]	; (80005c4 <mtx4_setup+0x14>)
 80005b2:	4b05      	ldr	r3, [pc, #20]	; (80005c8 <mtx4_setup+0x18>)
 80005b4:	6012      	str	r2, [r2, #0]
 80005b6:	2100      	movs	r1, #0
 80005b8:	e9c2 2101 	strd	r2, r1, [r2, #4]
 80005bc:	6099      	str	r1, [r3, #8]
 80005be:	e9c3 3300 	strd	r3, r3, [r3]
 80005c2:	4770      	bx	lr
 80005c4:	20000834 	.word	0x20000834
 80005c8:	20000844 	.word	0x20000844
 80005cc:	00000000 	.word	0x00000000

080005d0 <mtx1_setup>:
 80005d0:	4b02      	ldr	r3, [pc, #8]	; (80005dc <mtx1_setup+0xc>)
 80005d2:	2200      	movs	r2, #0
 80005d4:	e9c3 3300 	strd	r3, r3, [r3]
 80005d8:	609a      	str	r2, [r3, #8]
 80005da:	4770      	bx	lr
 80005dc:	20000834 	.word	0x20000834

080005e0 <mtx5_setup>:
 80005e0:	f7ff bff6 	b.w	80005d0 <mtx1_setup>
	...

080005f0 <sem1_setup>:
 80005f0:	4b02      	ldr	r3, [pc, #8]	; (80005fc <sem1_setup+0xc>)
 80005f2:	2200      	movs	r2, #0
 80005f4:	e9c3 3300 	strd	r3, r3, [r3]
 80005f8:	609a      	str	r2, [r3, #8]
 80005fa:	4770      	bx	lr
 80005fc:	200008ac 	.word	0x200008ac

08000600 <sem3_setup>:
 8000600:	f7ff bff6 	b.w	80005f0 <sem1_setup>
	...

08000610 <sem2_setup>:
 8000610:	f7ff bfee 	b.w	80005f0 <sem1_setup>
	...

08000620 <test_printn.part.1>:
 8000620:	b320      	cbz	r0, 800066c <test_printn.part.1+0x4c>
 8000622:	b570      	push	{r4, r5, r6, lr}
 8000624:	b084      	sub	sp, #16
 8000626:	466d      	mov	r5, sp
 8000628:	462c      	mov	r4, r5
 800062a:	4e11      	ldr	r6, [pc, #68]	; (8000670 <test_printn.part.1+0x50>)
 800062c:	e000      	b.n	8000630 <test_printn.part.1+0x10>
 800062e:	4614      	mov	r4, r2
 8000630:	fba6 2300 	umull	r2, r3, r6, r0
 8000634:	08db      	lsrs	r3, r3, #3
 8000636:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 800063a:	eba0 0041 	sub.w	r0, r0, r1, lsl #1
 800063e:	f100 0130 	add.w	r1, r0, #48	; 0x30
 8000642:	4622      	mov	r2, r4
 8000644:	b2c9      	uxtb	r1, r1
 8000646:	f802 1b01 	strb.w	r1, [r2], #1
 800064a:	4618      	mov	r0, r3
 800064c:	2b00      	cmp	r3, #0
 800064e:	d1ee      	bne.n	800062e <test_printn.part.1+0xe>
 8000650:	42aa      	cmp	r2, r5
 8000652:	d909      	bls.n	8000668 <test_printn.part.1+0x48>
 8000654:	4e07      	ldr	r6, [pc, #28]	; (8000674 <test_printn.part.1+0x54>)
 8000656:	e001      	b.n	800065c <test_printn.part.1+0x3c>
 8000658:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
 800065c:	6830      	ldr	r0, [r6, #0]
 800065e:	6803      	ldr	r3, [r0, #0]
 8000660:	689b      	ldr	r3, [r3, #8]
 8000662:	4798      	blx	r3
 8000664:	42a5      	cmp	r5, r4
 8000666:	d1f7      	bne.n	8000658 <test_printn.part.1+0x38>
 8000668:	b004      	add	sp, #16
 800066a:	bd70      	pop	{r4, r5, r6, pc}
 800066c:	4770      	bx	lr
 800066e:	bf00      	nop
 8000670:	cccccccd 	.word	0xcccccccd
 8000674:	20000a80 	.word	0x20000a80
	...

08000680 <test_printn>:
 8000680:	b928      	cbnz	r0, 800068e <test_printn+0xe>
 8000682:	4b04      	ldr	r3, [pc, #16]	; (8000694 <test_printn+0x14>)
 8000684:	6818      	ldr	r0, [r3, #0]
 8000686:	6803      	ldr	r3, [r0, #0]
 8000688:	2130      	movs	r1, #48	; 0x30
 800068a:	689b      	ldr	r3, [r3, #8]
 800068c:	4718      	bx	r3
 800068e:	f7ff bfc7 	b.w	8000620 <test_printn.part.1>
 8000692:	bf00      	nop
 8000694:	20000a80 	.word	0x20000a80
	...

080006a0 <print_line>:
 80006a0:	b570      	push	{r4, r5, r6, lr}
 80006a2:	4d08      	ldr	r5, [pc, #32]	; (80006c4 <print_line+0x24>)
 80006a4:	244c      	movs	r4, #76	; 0x4c
 80006a6:	6828      	ldr	r0, [r5, #0]
 80006a8:	6803      	ldr	r3, [r0, #0]
 80006aa:	212d      	movs	r1, #45	; 0x2d
 80006ac:	689b      	ldr	r3, [r3, #8]
 80006ae:	4798      	blx	r3
 80006b0:	3c01      	subs	r4, #1
 80006b2:	d1f8      	bne.n	80006a6 <print_line+0x6>
 80006b4:	6828      	ldr	r0, [r5, #0]
 80006b6:	4904      	ldr	r1, [pc, #16]	; (80006c8 <print_line+0x28>)
 80006b8:	6803      	ldr	r3, [r0, #0]
 80006ba:	2202      	movs	r2, #2
 80006bc:	681b      	ldr	r3, [r3, #0]
 80006be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80006c2:	4718      	bx	r3
 80006c4:	20000a80 	.word	0x20000a80
 80006c8:	08006120 	.word	0x08006120
 80006cc:	00000000 	.word	0x00000000

080006d0 <test_terminate_threads>:
 80006d0:	4b0a      	ldr	r3, [pc, #40]	; (80006fc <test_terminate_threads+0x2c>)
 80006d2:	b430      	push	{r4, r5}
 80006d4:	f103 0014 	add.w	r0, r3, #20
 80006d8:	2520      	movs	r5, #32
 80006da:	2400      	movs	r4, #0
 80006dc:	f853 2b04 	ldr.w	r2, [r3], #4
 80006e0:	b13a      	cbz	r2, 80006f2 <test_terminate_threads+0x22>
 80006e2:	f385 8811 	msr	BASEPRI, r5
 80006e6:	7f51      	ldrb	r1, [r2, #29]
 80006e8:	f041 0104 	orr.w	r1, r1, #4
 80006ec:	7751      	strb	r1, [r2, #29]
 80006ee:	f384 8811 	msr	BASEPRI, r4
 80006f2:	4283      	cmp	r3, r0
 80006f4:	d1f2      	bne.n	80006dc <test_terminate_threads+0xc>
 80006f6:	bc30      	pop	{r4, r5}
 80006f8:	4770      	bx	lr
 80006fa:	bf00      	nop
 80006fc:	200011cc 	.word	0x200011cc

08000700 <_test_assert_time_window>:
 8000700:	b410      	push	{r4}
 8000702:	2320      	movs	r3, #32
 8000704:	f383 8811 	msr	BASEPRI, r3
 8000708:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 800070c:	2300      	movs	r3, #0
 800070e:	6a64      	ldr	r4, [r4, #36]	; 0x24
 8000710:	f383 8811 	msr	BASEPRI, r3
 8000714:	1a64      	subs	r4, r4, r1
 8000716:	1a52      	subs	r2, r2, r1
 8000718:	4294      	cmp	r4, r2
 800071a:	d306      	bcc.n	800072a <_test_assert_time_window+0x2a>
 800071c:	4c04      	ldr	r4, [pc, #16]	; (8000730 <_test_assert_time_window+0x30>)
 800071e:	4905      	ldr	r1, [pc, #20]	; (8000734 <_test_assert_time_window+0x34>)
 8000720:	4a05      	ldr	r2, [pc, #20]	; (8000738 <_test_assert_time_window+0x38>)
 8000722:	2301      	movs	r3, #1
 8000724:	7023      	strb	r3, [r4, #0]
 8000726:	700b      	strb	r3, [r1, #0]
 8000728:	6010      	str	r0, [r2, #0]
 800072a:	4618      	mov	r0, r3
 800072c:	bc10      	pop	{r4}
 800072e:	4770      	bx	lr
 8000730:	200011a0 	.word	0x200011a0
 8000734:	20000b04 	.word	0x20000b04
 8000738:	20000aac 	.word	0x20000aac
 800073c:	00000000 	.word	0x00000000

08000740 <_test_assert_sequence>:
 8000740:	b4f0      	push	{r4, r5, r6, r7}
 8000742:	4e0e      	ldr	r6, [pc, #56]	; (800077c <_test_assert_sequence+0x3c>)
 8000744:	4f0e      	ldr	r7, [pc, #56]	; (8000780 <_test_assert_sequence+0x40>)
 8000746:	6835      	ldr	r5, [r6, #0]
 8000748:	3901      	subs	r1, #1
 800074a:	463b      	mov	r3, r7
 800074c:	e003      	b.n	8000756 <_test_assert_sequence+0x16>
 800074e:	f813 4b01 	ldrb.w	r4, [r3], #1
 8000752:	4294      	cmp	r4, r2
 8000754:	d108      	bne.n	8000768 <_test_assert_sequence+0x28>
 8000756:	429d      	cmp	r5, r3
 8000758:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800075c:	d8f7      	bhi.n	800074e <_test_assert_sequence+0xe>
 800075e:	b91a      	cbnz	r2, 8000768 <_test_assert_sequence+0x28>
 8000760:	6037      	str	r7, [r6, #0]
 8000762:	4610      	mov	r0, r2
 8000764:	bcf0      	pop	{r4, r5, r6, r7}
 8000766:	4770      	bx	lr
 8000768:	4c06      	ldr	r4, [pc, #24]	; (8000784 <_test_assert_sequence+0x44>)
 800076a:	4907      	ldr	r1, [pc, #28]	; (8000788 <_test_assert_sequence+0x48>)
 800076c:	4b07      	ldr	r3, [pc, #28]	; (800078c <_test_assert_sequence+0x4c>)
 800076e:	2201      	movs	r2, #1
 8000770:	7022      	strb	r2, [r4, #0]
 8000772:	6018      	str	r0, [r3, #0]
 8000774:	700a      	strb	r2, [r1, #0]
 8000776:	4610      	mov	r0, r2
 8000778:	bcf0      	pop	{r4, r5, r6, r7}
 800077a:	4770      	bx	lr
 800077c:	200011f0 	.word	0x200011f0
 8000780:	200011e0 	.word	0x200011e0
 8000784:	200011a0 	.word	0x200011a0
 8000788:	20000b04 	.word	0x20000b04
 800078c:	20000aac 	.word	0x20000aac

08000790 <_test_assert>:
 8000790:	b951      	cbnz	r1, 80007a8 <_test_assert+0x18>
 8000792:	b410      	push	{r4}
 8000794:	4906      	ldr	r1, [pc, #24]	; (80007b0 <_test_assert+0x20>)
 8000796:	4c07      	ldr	r4, [pc, #28]	; (80007b4 <_test_assert+0x24>)
 8000798:	4a07      	ldr	r2, [pc, #28]	; (80007b8 <_test_assert+0x28>)
 800079a:	2301      	movs	r3, #1
 800079c:	7023      	strb	r3, [r4, #0]
 800079e:	6010      	str	r0, [r2, #0]
 80007a0:	700b      	strb	r3, [r1, #0]
 80007a2:	4618      	mov	r0, r3
 80007a4:	bc10      	pop	{r4}
 80007a6:	4770      	bx	lr
 80007a8:	2300      	movs	r3, #0
 80007aa:	4618      	mov	r0, r3
 80007ac:	4770      	bx	lr
 80007ae:	bf00      	nop
 80007b0:	20000b04 	.word	0x20000b04
 80007b4:	200011a0 	.word	0x200011a0
 80007b8:	20000aac 	.word	0x20000aac
 80007bc:	00000000 	.word	0x00000000

080007c0 <test_emit_token>:
 80007c0:	2320      	movs	r3, #32
 80007c2:	f383 8811 	msr	BASEPRI, r3
 80007c6:	4b04      	ldr	r3, [pc, #16]	; (80007d8 <test_emit_token+0x18>)
 80007c8:	681a      	ldr	r2, [r3, #0]
 80007ca:	1c51      	adds	r1, r2, #1
 80007cc:	6019      	str	r1, [r3, #0]
 80007ce:	7010      	strb	r0, [r2, #0]
 80007d0:	2300      	movs	r3, #0
 80007d2:	f383 8811 	msr	BASEPRI, r3
 80007d6:	4770      	bx	lr
 80007d8:	200011f0 	.word	0x200011f0
 80007dc:	00000000 	.word	0x00000000

080007e0 <h3>:
 80007e0:	2043      	movs	r0, #67	; 0x43
 80007e2:	f7ff bfed 	b.w	80007c0 <test_emit_token>
 80007e6:	bf00      	nop
	...

080007f0 <h2>:
 80007f0:	2042      	movs	r0, #66	; 0x42
 80007f2:	f7ff bfe5 	b.w	80007c0 <test_emit_token>
 80007f6:	bf00      	nop
	...

08000800 <h1>:
 8000800:	2041      	movs	r0, #65	; 0x41
 8000802:	f7ff bfdd 	b.w	80007c0 <test_emit_token>
 8000806:	bf00      	nop
	...

08000810 <thread.lto_priv.58>:
 8000810:	7800      	ldrb	r0, [r0, #0]
 8000812:	f7ff bfd5 	b.w	80007c0 <test_emit_token>
 8000816:	bf00      	nop
	...

08000820 <thread.lto_priv.60>:
 8000820:	f7ff bff6 	b.w	8000810 <thread.lto_priv.58>
	...

08000830 <test_println>:
 8000830:	b570      	push	{r4, r5, r6, lr}
 8000832:	7801      	ldrb	r1, [r0, #0]
 8000834:	b189      	cbz	r1, 800085a <test_println+0x2a>
 8000836:	4d0a      	ldr	r5, [pc, #40]	; (8000860 <test_println+0x30>)
 8000838:	4604      	mov	r4, r0
 800083a:	6828      	ldr	r0, [r5, #0]
 800083c:	6803      	ldr	r3, [r0, #0]
 800083e:	689b      	ldr	r3, [r3, #8]
 8000840:	4798      	blx	r3
 8000842:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000846:	2900      	cmp	r1, #0
 8000848:	d1f7      	bne.n	800083a <test_println+0xa>
 800084a:	6828      	ldr	r0, [r5, #0]
 800084c:	4905      	ldr	r1, [pc, #20]	; (8000864 <test_println+0x34>)
 800084e:	6803      	ldr	r3, [r0, #0]
 8000850:	2202      	movs	r2, #2
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000858:	4718      	bx	r3
 800085a:	4d01      	ldr	r5, [pc, #4]	; (8000860 <test_println+0x30>)
 800085c:	e7f5      	b.n	800084a <test_println+0x1a>
 800085e:	bf00      	nop
 8000860:	20000a80 	.word	0x20000a80
 8000864:	08006120 	.word	0x08006120
	...

08000870 <test_print>:
 8000870:	7801      	ldrb	r1, [r0, #0]
 8000872:	b159      	cbz	r1, 800088c <test_print+0x1c>
 8000874:	b538      	push	{r3, r4, r5, lr}
 8000876:	4d06      	ldr	r5, [pc, #24]	; (8000890 <test_print+0x20>)
 8000878:	4604      	mov	r4, r0
 800087a:	6828      	ldr	r0, [r5, #0]
 800087c:	6803      	ldr	r3, [r0, #0]
 800087e:	689b      	ldr	r3, [r3, #8]
 8000880:	4798      	blx	r3
 8000882:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000886:	2900      	cmp	r1, #0
 8000888:	d1f7      	bne.n	800087a <test_print+0xa>
 800088a:	bd38      	pop	{r3, r4, r5, pc}
 800088c:	4770      	bx	lr
 800088e:	bf00      	nop
 8000890:	20000a80 	.word	0x20000a80
	...

080008a0 <_port_irq_epilogue>:
 80008a0:	2320      	movs	r3, #32
 80008a2:	f383 8811 	msr	BASEPRI, r3
 80008a6:	4b11      	ldr	r3, [pc, #68]	; (80008ec <_port_irq_epilogue+0x4c>)
 80008a8:	685b      	ldr	r3, [r3, #4]
 80008aa:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 80008ae:	d102      	bne.n	80008b6 <_port_irq_epilogue+0x16>
 80008b0:	f383 8811 	msr	BASEPRI, r3
 80008b4:	4770      	bx	lr
 80008b6:	b480      	push	{r7}
 80008b8:	af00      	add	r7, sp, #0
 80008ba:	f3ef 8309 	mrs	r3, PSP
 80008be:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80008c2:	f843 2c04 	str.w	r2, [r3, #-4]
 80008c6:	f1a3 0220 	sub.w	r2, r3, #32
 80008ca:	f382 8809 	msr	PSP, r2
 80008ce:	4a08      	ldr	r2, [pc, #32]	; (80008f0 <_port_irq_epilogue+0x50>)
 80008d0:	6811      	ldr	r1, [r2, #0]
 80008d2:	6992      	ldr	r2, [r2, #24]
 80008d4:	6889      	ldr	r1, [r1, #8]
 80008d6:	6892      	ldr	r2, [r2, #8]
 80008d8:	4291      	cmp	r1, r2
 80008da:	bf8c      	ite	hi
 80008dc:	4a05      	ldrhi	r2, [pc, #20]	; (80008f4 <_port_irq_epilogue+0x54>)
 80008de:	4a06      	ldrls	r2, [pc, #24]	; (80008f8 <_port_irq_epilogue+0x58>)
 80008e0:	f843 2c08 	str.w	r2, [r3, #-8]
 80008e4:	46bd      	mov	sp, r7
 80008e6:	bc80      	pop	{r7}
 80008e8:	4770      	bx	lr
 80008ea:	bf00      	nop
 80008ec:	e000ed00 	.word	0xe000ed00
 80008f0:	20000930 	.word	0x20000930
 80008f4:	080002a1 	.word	0x080002a1
 80008f8:	080002a4 	.word	0x080002a4
 80008fc:	00000000 	.word	0x00000000

08000900 <VectorB0>:
 8000900:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000904:	f04f 4680 	mov.w	r6, #1073741824	; 0x40000000
 8000908:	6933      	ldr	r3, [r6, #16]
 800090a:	079b      	lsls	r3, r3, #30
 800090c:	d403      	bmi.n	8000916 <VectorB0+0x16>
 800090e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000912:	f7ff bfc5 	b.w	80008a0 <_port_irq_epilogue>
 8000916:	2500      	movs	r5, #0
 8000918:	6135      	str	r5, [r6, #16]
 800091a:	2720      	movs	r7, #32
 800091c:	f387 8811 	msr	BASEPRI, r7
 8000920:	4c1b      	ldr	r4, [pc, #108]	; (8000990 <VectorB0+0x90>)
 8000922:	6a71      	ldr	r1, [r6, #36]	; 0x24
 8000924:	69e3      	ldr	r3, [r4, #28]
 8000926:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000928:	f8d3 c008 	ldr.w	ip, [r3, #8]
 800092c:	1a88      	subs	r0, r1, r2
 800092e:	4560      	cmp	r0, ip
 8000930:	f104 081c 	add.w	r8, r4, #28
 8000934:	d319      	bcc.n	800096a <VectorB0+0x6a>
 8000936:	6819      	ldr	r1, [r3, #0]
 8000938:	f8d3 900c 	ldr.w	r9, [r3, #12]
 800093c:	4462      	add	r2, ip
 800093e:	4541      	cmp	r1, r8
 8000940:	62a2      	str	r2, [r4, #40]	; 0x28
 8000942:	f8c1 8004 	str.w	r8, [r1, #4]
 8000946:	61e1      	str	r1, [r4, #28]
 8000948:	60dd      	str	r5, [r3, #12]
 800094a:	bf08      	it	eq
 800094c:	60f5      	streq	r5, [r6, #12]
 800094e:	f385 8811 	msr	BASEPRI, r5
 8000952:	6918      	ldr	r0, [r3, #16]
 8000954:	47c8      	blx	r9
 8000956:	f387 8811 	msr	BASEPRI, r7
 800095a:	69e3      	ldr	r3, [r4, #28]
 800095c:	6a71      	ldr	r1, [r6, #36]	; 0x24
 800095e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000960:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8000964:	1a88      	subs	r0, r1, r2
 8000966:	4584      	cmp	ip, r0
 8000968:	d9e5      	bls.n	8000936 <VectorB0+0x36>
 800096a:	4543      	cmp	r3, r8
 800096c:	d008      	beq.n	8000980 <VectorB0+0x80>
 800096e:	4462      	add	r2, ip
 8000970:	1a52      	subs	r2, r2, r1
 8000972:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000976:	2a02      	cmp	r2, #2
 8000978:	bf2c      	ite	cs
 800097a:	188a      	addcs	r2, r1, r2
 800097c:	1c8a      	addcc	r2, r1, #2
 800097e:	635a      	str	r2, [r3, #52]	; 0x34
 8000980:	2300      	movs	r3, #0
 8000982:	f383 8811 	msr	BASEPRI, r3
 8000986:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800098a:	f7ff bf89 	b.w	80008a0 <_port_irq_epilogue>
 800098e:	bf00      	nop
 8000990:	20000930 	.word	0x20000930
	...

080009a0 <SVC_Handler>:
 80009a0:	b480      	push	{r7}
 80009a2:	af00      	add	r7, sp, #0
 80009a4:	f3ef 8309 	mrs	r3, PSP
 80009a8:	3320      	adds	r3, #32
 80009aa:	f383 8809 	msr	PSP, r3
 80009ae:	2300      	movs	r3, #0
 80009b0:	f383 8811 	msr	BASEPRI, r3
 80009b4:	46bd      	mov	sp, r7
 80009b6:	bc80      	pop	{r7}
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop
 80009bc:	0000      	movs	r0, r0
	...

080009c0 <chPoolAlloc>:
 80009c0:	b508      	push	{r3, lr}
 80009c2:	2220      	movs	r2, #32
 80009c4:	4603      	mov	r3, r0
 80009c6:	f382 8811 	msr	BASEPRI, r2
 80009ca:	6800      	ldr	r0, [r0, #0]
 80009cc:	b128      	cbz	r0, 80009da <chPoolAlloc+0x1a>
 80009ce:	6802      	ldr	r2, [r0, #0]
 80009d0:	601a      	str	r2, [r3, #0]
 80009d2:	2300      	movs	r3, #0
 80009d4:	f383 8811 	msr	BASEPRI, r3
 80009d8:	bd08      	pop	{r3, pc}
 80009da:	689a      	ldr	r2, [r3, #8]
 80009dc:	2a00      	cmp	r2, #0
 80009de:	d0f8      	beq.n	80009d2 <chPoolAlloc+0x12>
 80009e0:	6858      	ldr	r0, [r3, #4]
 80009e2:	4790      	blx	r2
 80009e4:	2300      	movs	r3, #0
 80009e6:	f383 8811 	msr	BASEPRI, r3
 80009ea:	bd08      	pop	{r3, pc}
 80009ec:	0000      	movs	r0, r0
	...

080009f0 <pools1_execute>:
 80009f0:	b570      	push	{r4, r5, r6, lr}
 80009f2:	4b31      	ldr	r3, [pc, #196]	; (8000ab8 <pools1_execute+0xc8>)
 80009f4:	4c31      	ldr	r4, [pc, #196]	; (8000abc <pools1_execute+0xcc>)
 80009f6:	2205      	movs	r2, #5
 80009f8:	2520      	movs	r5, #32
 80009fa:	2000      	movs	r0, #0
 80009fc:	f385 8811 	msr	BASEPRI, r5
 8000a00:	6821      	ldr	r1, [r4, #0]
 8000a02:	6019      	str	r1, [r3, #0]
 8000a04:	6023      	str	r3, [r4, #0]
 8000a06:	f380 8811 	msr	BASEPRI, r0
 8000a0a:	6861      	ldr	r1, [r4, #4]
 8000a0c:	3a01      	subs	r2, #1
 8000a0e:	440b      	add	r3, r1
 8000a10:	d1f4      	bne.n	80009fc <pools1_execute+0xc>
 8000a12:	4e2a      	ldr	r6, [pc, #168]	; (8000abc <pools1_execute+0xcc>)
 8000a14:	2505      	movs	r5, #5
 8000a16:	4630      	mov	r0, r6
 8000a18:	f7ff ffd2 	bl	80009c0 <chPoolAlloc>
 8000a1c:	1c01      	adds	r1, r0, #0
 8000a1e:	bf18      	it	ne
 8000a20:	2101      	movne	r1, #1
 8000a22:	2001      	movs	r0, #1
 8000a24:	f7ff feb4 	bl	8000790 <_test_assert>
 8000a28:	bba0      	cbnz	r0, 8000a94 <pools1_execute+0xa4>
 8000a2a:	3d01      	subs	r5, #1
 8000a2c:	d1f3      	bne.n	8000a16 <pools1_execute+0x26>
 8000a2e:	4823      	ldr	r0, [pc, #140]	; (8000abc <pools1_execute+0xcc>)
 8000a30:	f7ff ffc6 	bl	80009c0 <chPoolAlloc>
 8000a34:	fab0 f180 	clz	r1, r0
 8000a38:	0949      	lsrs	r1, r1, #5
 8000a3a:	2002      	movs	r0, #2
 8000a3c:	f7ff fea8 	bl	8000790 <_test_assert>
 8000a40:	bb40      	cbnz	r0, 8000a94 <pools1_execute+0xa4>
 8000a42:	4a1f      	ldr	r2, [pc, #124]	; (8000ac0 <pools1_execute+0xd0>)
 8000a44:	4b1c      	ldr	r3, [pc, #112]	; (8000ab8 <pools1_execute+0xc8>)
 8000a46:	f102 0610 	add.w	r6, r2, #16
 8000a4a:	2020      	movs	r0, #32
 8000a4c:	f380 8811 	msr	BASEPRI, r0
 8000a50:	6821      	ldr	r1, [r4, #0]
 8000a52:	6019      	str	r1, [r3, #0]
 8000a54:	6023      	str	r3, [r4, #0]
 8000a56:	f385 8811 	msr	BASEPRI, r5
 8000a5a:	4296      	cmp	r6, r2
 8000a5c:	d002      	beq.n	8000a64 <pools1_execute+0x74>
 8000a5e:	f852 3b04 	ldr.w	r3, [r2], #4
 8000a62:	e7f3      	b.n	8000a4c <pools1_execute+0x5c>
 8000a64:	4e15      	ldr	r6, [pc, #84]	; (8000abc <pools1_execute+0xcc>)
 8000a66:	2505      	movs	r5, #5
 8000a68:	4630      	mov	r0, r6
 8000a6a:	f7ff ffa9 	bl	80009c0 <chPoolAlloc>
 8000a6e:	1c01      	adds	r1, r0, #0
 8000a70:	bf18      	it	ne
 8000a72:	2101      	movne	r1, #1
 8000a74:	2003      	movs	r0, #3
 8000a76:	f7ff fe8b 	bl	8000790 <_test_assert>
 8000a7a:	b958      	cbnz	r0, 8000a94 <pools1_execute+0xa4>
 8000a7c:	3d01      	subs	r5, #1
 8000a7e:	d1f3      	bne.n	8000a68 <pools1_execute+0x78>
 8000a80:	480e      	ldr	r0, [pc, #56]	; (8000abc <pools1_execute+0xcc>)
 8000a82:	f7ff ff9d 	bl	80009c0 <chPoolAlloc>
 8000a86:	fab0 f180 	clz	r1, r0
 8000a8a:	0949      	lsrs	r1, r1, #5
 8000a8c:	2004      	movs	r0, #4
 8000a8e:	f7ff fe7f 	bl	8000790 <_test_assert>
 8000a92:	b100      	cbz	r0, 8000a96 <pools1_execute+0xa6>
 8000a94:	bd70      	pop	{r4, r5, r6, pc}
 8000a96:	2210      	movs	r2, #16
 8000a98:	4b0a      	ldr	r3, [pc, #40]	; (8000ac4 <pools1_execute+0xd4>)
 8000a9a:	4808      	ldr	r0, [pc, #32]	; (8000abc <pools1_execute+0xcc>)
 8000a9c:	60a3      	str	r3, [r4, #8]
 8000a9e:	e9c4 5200 	strd	r5, r2, [r4]
 8000aa2:	f7ff ff8d 	bl	80009c0 <chPoolAlloc>
 8000aa6:	fab0 f180 	clz	r1, r0
 8000aaa:	0949      	lsrs	r1, r1, #5
 8000aac:	2005      	movs	r0, #5
 8000aae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000ab2:	f7ff be6d 	b.w	8000790 <_test_assert>
 8000ab6:	bf00      	nop
 8000ab8:	20000b38 	.word	0x20000b38
 8000abc:	2000087c 	.word	0x2000087c
 8000ac0:	080068d4 	.word	0x080068d4
 8000ac4:	08000481 	.word	0x08000481
	...

08000ad0 <chEvtUnregister>:
 8000ad0:	2320      	movs	r3, #32
 8000ad2:	f383 8811 	msr	BASEPRI, r3
 8000ad6:	4602      	mov	r2, r0
 8000ad8:	e002      	b.n	8000ae0 <chEvtUnregister+0x10>
 8000ada:	428b      	cmp	r3, r1
 8000adc:	d007      	beq.n	8000aee <chEvtUnregister+0x1e>
 8000ade:	461a      	mov	r2, r3
 8000ae0:	6813      	ldr	r3, [r2, #0]
 8000ae2:	4283      	cmp	r3, r0
 8000ae4:	d1f9      	bne.n	8000ada <chEvtUnregister+0xa>
 8000ae6:	2300      	movs	r3, #0
 8000ae8:	f383 8811 	msr	BASEPRI, r3
 8000aec:	4770      	bx	lr
 8000aee:	680b      	ldr	r3, [r1, #0]
 8000af0:	6013      	str	r3, [r2, #0]
 8000af2:	2300      	movs	r3, #0
 8000af4:	f383 8811 	msr	BASEPRI, r3
 8000af8:	4770      	bx	lr
 8000afa:	bf00      	nop
 8000afc:	0000      	movs	r0, r0
	...

08000b00 <evt1_execute>:
 8000b00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b04:	4c33      	ldr	r4, [pc, #204]	; (8000bd4 <evt1_execute+0xd4>)
 8000b06:	b08a      	sub	sp, #40	; 0x28
 8000b08:	2020      	movs	r0, #32
 8000b0a:	6024      	str	r4, [r4, #0]
 8000b0c:	f380 8811 	msr	BASEPRI, r0
 8000b10:	4931      	ldr	r1, [pc, #196]	; (8000bd8 <evt1_execute+0xd8>)
 8000b12:	6823      	ldr	r3, [r4, #0]
 8000b14:	ad0a      	add	r5, sp, #40	; 0x28
 8000b16:	2701      	movs	r7, #1
 8000b18:	f845 3d14 	str.w	r3, [r5, #-20]!
 8000b1c:	698b      	ldr	r3, [r1, #24]
 8000b1e:	9306      	str	r3, [sp, #24]
 8000b20:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000b24:	2300      	movs	r3, #0
 8000b26:	6025      	str	r5, [r4, #0]
 8000b28:	e9cd 7307 	strd	r7, r3, [sp, #28]
 8000b2c:	9209      	str	r2, [sp, #36]	; 0x24
 8000b2e:	f383 8811 	msr	BASEPRI, r3
 8000b32:	f380 8811 	msr	BASEPRI, r0
 8000b36:	ae0a      	add	r6, sp, #40	; 0x28
 8000b38:	6820      	ldr	r0, [r4, #0]
 8000b3a:	f846 0d28 	str.w	r0, [r6, #-40]!
 8000b3e:	6989      	ldr	r1, [r1, #24]
 8000b40:	9101      	str	r1, [sp, #4]
 8000b42:	f04f 0802 	mov.w	r8, #2
 8000b46:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8000b4a:	6026      	str	r6, [r4, #0]
 8000b4c:	f8cd 8008 	str.w	r8, [sp, #8]
 8000b50:	f383 8811 	msr	BASEPRI, r3
 8000b54:	6821      	ldr	r1, [r4, #0]
 8000b56:	1b09      	subs	r1, r1, r4
 8000b58:	bf18      	it	ne
 8000b5a:	2101      	movne	r1, #1
 8000b5c:	4638      	mov	r0, r7
 8000b5e:	f7ff fe17 	bl	8000790 <_test_assert>
 8000b62:	b110      	cbz	r0, 8000b6a <evt1_execute+0x6a>
 8000b64:	b00a      	add	sp, #40	; 0x28
 8000b66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000b6a:	4629      	mov	r1, r5
 8000b6c:	4620      	mov	r0, r4
 8000b6e:	f7ff ffaf 	bl	8000ad0 <chEvtUnregister>
 8000b72:	6821      	ldr	r1, [r4, #0]
 8000b74:	1b09      	subs	r1, r1, r4
 8000b76:	bf18      	it	ne
 8000b78:	2101      	movne	r1, #1
 8000b7a:	4640      	mov	r0, r8
 8000b7c:	f7ff fe08 	bl	8000790 <_test_assert>
 8000b80:	2800      	cmp	r0, #0
 8000b82:	d1ef      	bne.n	8000b64 <evt1_execute+0x64>
 8000b84:	4631      	mov	r1, r6
 8000b86:	4620      	mov	r0, r4
 8000b88:	f7ff ffa2 	bl	8000ad0 <chEvtUnregister>
 8000b8c:	6821      	ldr	r1, [r4, #0]
 8000b8e:	1b09      	subs	r1, r1, r4
 8000b90:	fab1 f181 	clz	r1, r1
 8000b94:	2003      	movs	r0, #3
 8000b96:	0949      	lsrs	r1, r1, #5
 8000b98:	f7ff fdfa 	bl	8000790 <_test_assert>
 8000b9c:	2800      	cmp	r0, #0
 8000b9e:	d1e1      	bne.n	8000b64 <evt1_execute+0x64>
 8000ba0:	4e0e      	ldr	r6, [pc, #56]	; (8000bdc <evt1_execute+0xdc>)
 8000ba2:	4604      	mov	r4, r0
 8000ba4:	2507      	movs	r5, #7
 8000ba6:	fa25 f304 	lsr.w	r3, r5, r4
 8000baa:	f013 0f01 	tst.w	r3, #1
 8000bae:	fa07 f204 	lsl.w	r2, r7, r4
 8000bb2:	4620      	mov	r0, r4
 8000bb4:	d00c      	beq.n	8000bd0 <evt1_execute+0xd0>
 8000bb6:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8000bba:	ea25 0502 	bic.w	r5, r5, r2
 8000bbe:	3401      	adds	r4, #1
 8000bc0:	4798      	blx	r3
 8000bc2:	2d00      	cmp	r5, #0
 8000bc4:	d1ef      	bne.n	8000ba6 <evt1_execute+0xa6>
 8000bc6:	4906      	ldr	r1, [pc, #24]	; (8000be0 <evt1_execute+0xe0>)
 8000bc8:	2004      	movs	r0, #4
 8000bca:	f7ff fdb9 	bl	8000740 <_test_assert_sequence>
 8000bce:	e7c9      	b.n	8000b64 <evt1_execute+0x64>
 8000bd0:	3401      	adds	r4, #1
 8000bd2:	e7e8      	b.n	8000ba6 <evt1_execute+0xa6>
 8000bd4:	20000808 	.word	0x20000808
 8000bd8:	20000930 	.word	0x20000930
 8000bdc:	08005d70 	.word	0x08005d70
 8000be0:	08005d80 	.word	0x08005d80
	...

08000bf0 <chTMStopMeasurementX>:
 8000bf0:	4b0e      	ldr	r3, [pc, #56]	; (8000c2c <chTMStopMeasurementX+0x3c>)
 8000bf2:	4a0f      	ldr	r2, [pc, #60]	; (8000c30 <chTMStopMeasurementX+0x40>)
 8000bf4:	685b      	ldr	r3, [r3, #4]
 8000bf6:	68c1      	ldr	r1, [r0, #12]
 8000bf8:	b4f0      	push	{r4, r5, r6, r7}
 8000bfa:	6884      	ldr	r4, [r0, #8]
 8000bfc:	6f56      	ldr	r6, [r2, #116]	; 0x74
 8000bfe:	6842      	ldr	r2, [r0, #4]
 8000c00:	1b1b      	subs	r3, r3, r4
 8000c02:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
 8000c06:	1b9b      	subs	r3, r3, r6
 8000c08:	18e6      	adds	r6, r4, r3
 8000c0a:	f145 0700 	adc.w	r7, r5, #0
 8000c0e:	3101      	adds	r1, #1
 8000c10:	4293      	cmp	r3, r2
 8000c12:	e9c0 3102 	strd	r3, r1, [r0, #8]
 8000c16:	e9c0 6704 	strd	r6, r7, [r0, #16]
 8000c1a:	d805      	bhi.n	8000c28 <chTMStopMeasurementX+0x38>
 8000c1c:	6802      	ldr	r2, [r0, #0]
 8000c1e:	4293      	cmp	r3, r2
 8000c20:	bf38      	it	cc
 8000c22:	6003      	strcc	r3, [r0, #0]
 8000c24:	bcf0      	pop	{r4, r5, r6, r7}
 8000c26:	4770      	bx	lr
 8000c28:	6043      	str	r3, [r0, #4]
 8000c2a:	e7fb      	b.n	8000c24 <chTMStopMeasurementX+0x34>
 8000c2c:	e0001000 	.word	0xe0001000
 8000c30:	20000930 	.word	0x20000930
	...

08000c40 <wakeup>:
 8000c40:	2320      	movs	r3, #32
 8000c42:	f383 8811 	msr	BASEPRI, r3
 8000c46:	7f03      	ldrb	r3, [r0, #28]
 8000c48:	2b07      	cmp	r3, #7
 8000c4a:	d80e      	bhi.n	8000c6a <wakeup+0x2a>
 8000c4c:	e8df f003 	tbb	[pc, r3]
 8000c50:	230d0d27 	.word	0x230d0d27
 8000c54:	080d0408 	.word	0x080d0408
 8000c58:	6a02      	ldr	r2, [r0, #32]
 8000c5a:	6893      	ldr	r3, [r2, #8]
 8000c5c:	3301      	adds	r3, #1
 8000c5e:	6093      	str	r3, [r2, #8]
 8000c60:	e9d0 2300 	ldrd	r2, r3, [r0]
 8000c64:	601a      	str	r2, [r3, #0]
 8000c66:	6802      	ldr	r2, [r0, #0]
 8000c68:	6053      	str	r3, [r2, #4]
 8000c6a:	b410      	push	{r4}
 8000c6c:	2200      	movs	r2, #0
 8000c6e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000c72:	6881      	ldr	r1, [r0, #8]
 8000c74:	4b0c      	ldr	r3, [pc, #48]	; (8000ca8 <wakeup+0x68>)
 8000c76:	6204      	str	r4, [r0, #32]
 8000c78:	7702      	strb	r2, [r0, #28]
 8000c7a:	681b      	ldr	r3, [r3, #0]
 8000c7c:	689a      	ldr	r2, [r3, #8]
 8000c7e:	428a      	cmp	r2, r1
 8000c80:	d2fb      	bcs.n	8000c7a <wakeup+0x3a>
 8000c82:	685a      	ldr	r2, [r3, #4]
 8000c84:	2100      	movs	r1, #0
 8000c86:	e9c0 3200 	strd	r3, r2, [r0]
 8000c8a:	6010      	str	r0, [r2, #0]
 8000c8c:	6058      	str	r0, [r3, #4]
 8000c8e:	f381 8811 	msr	BASEPRI, r1
 8000c92:	bc10      	pop	{r4}
 8000c94:	4770      	bx	lr
 8000c96:	6a03      	ldr	r3, [r0, #32]
 8000c98:	2200      	movs	r2, #0
 8000c9a:	601a      	str	r2, [r3, #0]
 8000c9c:	e7e5      	b.n	8000c6a <wakeup+0x2a>
 8000c9e:	2300      	movs	r3, #0
 8000ca0:	f383 8811 	msr	BASEPRI, r3
 8000ca4:	4770      	bx	lr
 8000ca6:	bf00      	nop
 8000ca8:	20000930 	.word	0x20000930
 8000cac:	00000000 	.word	0x00000000

08000cb0 <chSchReadyI>:
 8000cb0:	4601      	mov	r1, r0
 8000cb2:	2200      	movs	r2, #0
 8000cb4:	4b06      	ldr	r3, [pc, #24]	; (8000cd0 <chSchReadyI+0x20>)
 8000cb6:	6880      	ldr	r0, [r0, #8]
 8000cb8:	770a      	strb	r2, [r1, #28]
 8000cba:	681b      	ldr	r3, [r3, #0]
 8000cbc:	689a      	ldr	r2, [r3, #8]
 8000cbe:	4282      	cmp	r2, r0
 8000cc0:	d2fb      	bcs.n	8000cba <chSchReadyI+0xa>
 8000cc2:	685a      	ldr	r2, [r3, #4]
 8000cc4:	4608      	mov	r0, r1
 8000cc6:	e9c1 3200 	strd	r3, r2, [r1]
 8000cca:	6011      	str	r1, [r2, #0]
 8000ccc:	6059      	str	r1, [r3, #4]
 8000cce:	4770      	bx	lr
 8000cd0:	20000930 	.word	0x20000930
	...

08000ce0 <chCondSignalI.constprop.42>:
 8000ce0:	4b07      	ldr	r3, [pc, #28]	; (8000d00 <chCondSignalI.constprop.42+0x20>)
 8000ce2:	681a      	ldr	r2, [r3, #0]
 8000ce4:	429a      	cmp	r2, r3
 8000ce6:	d009      	beq.n	8000cfc <chCondSignalI.constprop.42+0x1c>
 8000ce8:	6811      	ldr	r1, [r2, #0]
 8000cea:	b410      	push	{r4}
 8000cec:	2400      	movs	r4, #0
 8000cee:	604b      	str	r3, [r1, #4]
 8000cf0:	6019      	str	r1, [r3, #0]
 8000cf2:	6214      	str	r4, [r2, #32]
 8000cf4:	4610      	mov	r0, r2
 8000cf6:	bc10      	pop	{r4}
 8000cf8:	f7ff bfda 	b.w	8000cb0 <chSchReadyI>
 8000cfc:	4770      	bx	lr
 8000cfe:	bf00      	nop
 8000d00:	20000800 	.word	0x20000800
	...

08000d10 <chIQPutI>:
 8000d10:	b510      	push	{r4, lr}
 8000d12:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 8000d16:	42a2      	cmp	r2, r4
 8000d18:	6883      	ldr	r3, [r0, #8]
 8000d1a:	d01c      	beq.n	8000d56 <chIQPutI+0x46>
 8000d1c:	3301      	adds	r3, #1
 8000d1e:	1c54      	adds	r4, r2, #1
 8000d20:	6083      	str	r3, [r0, #8]
 8000d22:	6144      	str	r4, [r0, #20]
 8000d24:	7011      	strb	r1, [r2, #0]
 8000d26:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
 8000d2a:	429a      	cmp	r2, r3
 8000d2c:	d20c      	bcs.n	8000d48 <chIQPutI+0x38>
 8000d2e:	6803      	ldr	r3, [r0, #0]
 8000d30:	4298      	cmp	r0, r3
 8000d32:	d00e      	beq.n	8000d52 <chIQPutI+0x42>
 8000d34:	681a      	ldr	r2, [r3, #0]
 8000d36:	6002      	str	r2, [r0, #0]
 8000d38:	2400      	movs	r4, #0
 8000d3a:	6050      	str	r0, [r2, #4]
 8000d3c:	4618      	mov	r0, r3
 8000d3e:	621c      	str	r4, [r3, #32]
 8000d40:	f7ff ffb6 	bl	8000cb0 <chSchReadyI>
 8000d44:	4620      	mov	r0, r4
 8000d46:	bd10      	pop	{r4, pc}
 8000d48:	68c3      	ldr	r3, [r0, #12]
 8000d4a:	6143      	str	r3, [r0, #20]
 8000d4c:	6803      	ldr	r3, [r0, #0]
 8000d4e:	4298      	cmp	r0, r3
 8000d50:	d1f0      	bne.n	8000d34 <chIQPutI+0x24>
 8000d52:	2000      	movs	r0, #0
 8000d54:	bd10      	pop	{r4, pc}
 8000d56:	2b00      	cmp	r3, #0
 8000d58:	d0e0      	beq.n	8000d1c <chIQPutI+0xc>
 8000d5a:	f06f 0003 	mvn.w	r0, #3
 8000d5e:	bd10      	pop	{r4, pc}

08000d60 <chOQGetI>:
 8000d60:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8000d64:	4291      	cmp	r1, r2
 8000d66:	b538      	push	{r3, r4, r5, lr}
 8000d68:	6883      	ldr	r3, [r0, #8]
 8000d6a:	d017      	beq.n	8000d9c <chOQGetI+0x3c>
 8000d6c:	6905      	ldr	r5, [r0, #16]
 8000d6e:	1c51      	adds	r1, r2, #1
 8000d70:	3301      	adds	r3, #1
 8000d72:	6083      	str	r3, [r0, #8]
 8000d74:	6181      	str	r1, [r0, #24]
 8000d76:	42a9      	cmp	r1, r5
 8000d78:	7814      	ldrb	r4, [r2, #0]
 8000d7a:	d20c      	bcs.n	8000d96 <chOQGetI+0x36>
 8000d7c:	6803      	ldr	r3, [r0, #0]
 8000d7e:	4298      	cmp	r0, r3
 8000d80:	d007      	beq.n	8000d92 <chOQGetI+0x32>
 8000d82:	681a      	ldr	r2, [r3, #0]
 8000d84:	6002      	str	r2, [r0, #0]
 8000d86:	2100      	movs	r1, #0
 8000d88:	6050      	str	r0, [r2, #4]
 8000d8a:	4618      	mov	r0, r3
 8000d8c:	6219      	str	r1, [r3, #32]
 8000d8e:	f7ff ff8f 	bl	8000cb0 <chSchReadyI>
 8000d92:	4620      	mov	r0, r4
 8000d94:	bd38      	pop	{r3, r4, r5, pc}
 8000d96:	68c3      	ldr	r3, [r0, #12]
 8000d98:	6183      	str	r3, [r0, #24]
 8000d9a:	e7ef      	b.n	8000d7c <chOQGetI+0x1c>
 8000d9c:	2b00      	cmp	r3, #0
 8000d9e:	d0e5      	beq.n	8000d6c <chOQGetI+0xc>
 8000da0:	f06f 0002 	mvn.w	r0, #2
 8000da4:	bd38      	pop	{r3, r4, r5, pc}
 8000da6:	bf00      	nop
	...

08000db0 <chEvtSignalI>:
 8000db0:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8000db2:	7f02      	ldrb	r2, [r0, #28]
 8000db4:	4319      	orrs	r1, r3
 8000db6:	2a0a      	cmp	r2, #10
 8000db8:	6341      	str	r1, [r0, #52]	; 0x34
 8000dba:	d009      	beq.n	8000dd0 <chEvtSignalI+0x20>
 8000dbc:	2a0b      	cmp	r2, #11
 8000dbe:	d000      	beq.n	8000dc2 <chEvtSignalI+0x12>
 8000dc0:	4770      	bx	lr
 8000dc2:	6a03      	ldr	r3, [r0, #32]
 8000dc4:	438b      	bics	r3, r1
 8000dc6:	d1fb      	bne.n	8000dc0 <chEvtSignalI+0x10>
 8000dc8:	2300      	movs	r3, #0
 8000dca:	6203      	str	r3, [r0, #32]
 8000dcc:	f7ff bf70 	b.w	8000cb0 <chSchReadyI>
 8000dd0:	6a03      	ldr	r3, [r0, #32]
 8000dd2:	4219      	tst	r1, r3
 8000dd4:	d1f8      	bne.n	8000dc8 <chEvtSignalI+0x18>
 8000dd6:	4770      	bx	lr
	...

08000de0 <chEvtBroadcastFlagsI>:
 8000de0:	b570      	push	{r4, r5, r6, lr}
 8000de2:	6804      	ldr	r4, [r0, #0]
 8000de4:	42a0      	cmp	r0, r4
 8000de6:	d00f      	beq.n	8000e08 <chEvtBroadcastFlagsI+0x28>
 8000de8:	4606      	mov	r6, r0
 8000dea:	460d      	mov	r5, r1
 8000dec:	68e3      	ldr	r3, [r4, #12]
 8000dee:	432b      	orrs	r3, r5
 8000df0:	60e3      	str	r3, [r4, #12]
 8000df2:	b115      	cbz	r5, 8000dfa <chEvtBroadcastFlagsI+0x1a>
 8000df4:	6922      	ldr	r2, [r4, #16]
 8000df6:	4213      	tst	r3, r2
 8000df8:	d003      	beq.n	8000e02 <chEvtBroadcastFlagsI+0x22>
 8000dfa:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 8000dfe:	f7ff ffd7 	bl	8000db0 <chEvtSignalI>
 8000e02:	6824      	ldr	r4, [r4, #0]
 8000e04:	42a6      	cmp	r6, r4
 8000e06:	d1f1      	bne.n	8000dec <chEvtBroadcastFlagsI+0xc>
 8000e08:	bd70      	pop	{r4, r5, r6, pc}
 8000e0a:	bf00      	nop
 8000e0c:	0000      	movs	r0, r0
	...

08000e10 <VectorD8>:
 8000e10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e14:	4e4d      	ldr	r6, [pc, #308]	; (8000f4c <VectorD8+0x13c>)
 8000e16:	6f75      	ldr	r5, [r6, #116]	; 0x74
 8000e18:	f8d5 900c 	ldr.w	r9, [r5, #12]
 8000e1c:	682b      	ldr	r3, [r5, #0]
 8000e1e:	05da      	lsls	r2, r3, #23
 8000e20:	b29c      	uxth	r4, r3
 8000e22:	d463      	bmi.n	8000eec <VectorD8+0xdc>
 8000e24:	2320      	movs	r3, #32
 8000e26:	f383 8811 	msr	BASEPRI, r3
 8000e2a:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000e2e:	d038      	beq.n	8000ea2 <VectorD8+0x92>
 8000e30:	4f47      	ldr	r7, [pc, #284]	; (8000f50 <VectorD8+0x140>)
 8000e32:	f107 0808 	add.w	r8, r7, #8
 8000e36:	e008      	b.n	8000e4a <VectorD8+0x3a>
 8000e38:	06a0      	lsls	r0, r4, #26
 8000e3a:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8000e3e:	d41e      	bmi.n	8000e7e <VectorD8+0x6e>
 8000e40:	682c      	ldr	r4, [r5, #0]
 8000e42:	b2a4      	uxth	r4, r4
 8000e44:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000e48:	d02b      	beq.n	8000ea2 <VectorD8+0x92>
 8000e4a:	0723      	lsls	r3, r4, #28
 8000e4c:	d0f4      	beq.n	8000e38 <VectorD8+0x28>
 8000e4e:	f014 0f08 	tst.w	r4, #8
 8000e52:	bf0c      	ite	eq
 8000e54:	2100      	moveq	r1, #0
 8000e56:	2180      	movne	r1, #128	; 0x80
 8000e58:	07e0      	lsls	r0, r4, #31
 8000e5a:	bf48      	it	mi
 8000e5c:	f041 0120 	orrmi.w	r1, r1, #32
 8000e60:	07a2      	lsls	r2, r4, #30
 8000e62:	bf48      	it	mi
 8000e64:	f041 0140 	orrmi.w	r1, r1, #64	; 0x40
 8000e68:	0763      	lsls	r3, r4, #29
 8000e6a:	bf48      	it	mi
 8000e6c:	f441 7180 	orrmi.w	r1, r1, #256	; 0x100
 8000e70:	4638      	mov	r0, r7
 8000e72:	f7ff ffb5 	bl	8000de0 <chEvtBroadcastFlagsI>
 8000e76:	06a0      	lsls	r0, r4, #26
 8000e78:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8000e7c:	d5e0      	bpl.n	8000e40 <VectorD8+0x30>
 8000e7e:	6973      	ldr	r3, [r6, #20]
 8000e80:	b37b      	cbz	r3, 8000ee2 <VectorD8+0xd2>
 8000e82:	fa5f f18a 	uxtb.w	r1, sl
 8000e86:	4640      	mov	r0, r8
 8000e88:	f7ff ff42 	bl	8000d10 <chIQPutI>
 8000e8c:	2800      	cmp	r0, #0
 8000e8e:	dad7      	bge.n	8000e40 <VectorD8+0x30>
 8000e90:	2180      	movs	r1, #128	; 0x80
 8000e92:	4638      	mov	r0, r7
 8000e94:	f7ff ffa4 	bl	8000de0 <chEvtBroadcastFlagsI>
 8000e98:	682c      	ldr	r4, [r5, #0]
 8000e9a:	b2a4      	uxth	r4, r4
 8000e9c:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000ea0:	d1d3      	bne.n	8000e4a <VectorD8+0x3a>
 8000ea2:	2300      	movs	r3, #0
 8000ea4:	f383 8811 	msr	BASEPRI, r3
 8000ea8:	f019 0f80 	tst.w	r9, #128	; 0x80
 8000eac:	d001      	beq.n	8000eb2 <VectorD8+0xa2>
 8000eae:	0622      	lsls	r2, r4, #24
 8000eb0:	d42b      	bmi.n	8000f0a <VectorD8+0xfa>
 8000eb2:	0663      	lsls	r3, r4, #25
 8000eb4:	d511      	bpl.n	8000eda <VectorD8+0xca>
 8000eb6:	2320      	movs	r3, #32
 8000eb8:	f383 8811 	msr	BASEPRI, r3
 8000ebc:	e9d6 2311 	ldrd	r2, r3, [r6, #68]	; 0x44
 8000ec0:	429a      	cmp	r2, r3
 8000ec2:	d02f      	beq.n	8000f24 <VectorD8+0x114>
 8000ec4:	f64f 73bf 	movw	r3, #65471	; 0xffbf
 8000ec8:	ea09 0303 	and.w	r3, r9, r3
 8000ecc:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8000ed0:	60eb      	str	r3, [r5, #12]
 8000ed2:	2300      	movs	r3, #0
 8000ed4:	602a      	str	r2, [r5, #0]
 8000ed6:	f383 8811 	msr	BASEPRI, r3
 8000eda:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ede:	f7ff bcdf 	b.w	80008a0 <_port_irq_epilogue>
 8000ee2:	2104      	movs	r1, #4
 8000ee4:	4638      	mov	r0, r7
 8000ee6:	f7ff ff7b 	bl	8000de0 <chEvtBroadcastFlagsI>
 8000eea:	e7ca      	b.n	8000e82 <VectorD8+0x72>
 8000eec:	2320      	movs	r3, #32
 8000eee:	f383 8811 	msr	BASEPRI, r3
 8000ef2:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000ef6:	1d30      	adds	r0, r6, #4
 8000ef8:	f7ff ff72 	bl	8000de0 <chEvtBroadcastFlagsI>
 8000efc:	f46f 7380 	mvn.w	r3, #256	; 0x100
 8000f00:	602b      	str	r3, [r5, #0]
 8000f02:	2300      	movs	r3, #0
 8000f04:	f383 8811 	msr	BASEPRI, r3
 8000f08:	e78c      	b.n	8000e24 <VectorD8+0x14>
 8000f0a:	2320      	movs	r3, #32
 8000f0c:	f383 8811 	msr	BASEPRI, r3
 8000f10:	4810      	ldr	r0, [pc, #64]	; (8000f54 <VectorD8+0x144>)
 8000f12:	f7ff ff25 	bl	8000d60 <chOQGetI>
 8000f16:	2800      	cmp	r0, #0
 8000f18:	db0c      	blt.n	8000f34 <VectorD8+0x124>
 8000f1a:	6068      	str	r0, [r5, #4]
 8000f1c:	2300      	movs	r3, #0
 8000f1e:	f383 8811 	msr	BASEPRI, r3
 8000f22:	e7c6      	b.n	8000eb2 <VectorD8+0xa2>
 8000f24:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8000f26:	2b00      	cmp	r3, #0
 8000f28:	d0cc      	beq.n	8000ec4 <VectorD8+0xb4>
 8000f2a:	2110      	movs	r1, #16
 8000f2c:	4808      	ldr	r0, [pc, #32]	; (8000f50 <VectorD8+0x140>)
 8000f2e:	f7ff ff57 	bl	8000de0 <chEvtBroadcastFlagsI>
 8000f32:	e7c7      	b.n	8000ec4 <VectorD8+0xb4>
 8000f34:	2108      	movs	r1, #8
 8000f36:	4806      	ldr	r0, [pc, #24]	; (8000f50 <VectorD8+0x140>)
 8000f38:	f7ff ff52 	bl	8000de0 <chEvtBroadcastFlagsI>
 8000f3c:	f64f 733f 	movw	r3, #65343	; 0xff3f
 8000f40:	ea09 0303 	and.w	r3, r9, r3
 8000f44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f48:	60eb      	str	r3, [r5, #12]
 8000f4a:	e7e7      	b.n	8000f1c <VectorD8+0x10c>
 8000f4c:	200008b8 	.word	0x200008b8
 8000f50:	200008bc 	.word	0x200008bc
 8000f54:	200008e8 	.word	0x200008e8
	...

08000f60 <chMtxUnlockS>:
 8000f60:	4b12      	ldr	r3, [pc, #72]	; (8000fac <chMtxUnlockS+0x4c>)
 8000f62:	b430      	push	{r4, r5}
 8000f64:	6804      	ldr	r4, [r0, #0]
 8000f66:	699d      	ldr	r5, [r3, #24]
 8000f68:	68c3      	ldr	r3, [r0, #12]
 8000f6a:	63ab      	str	r3, [r5, #56]	; 0x38
 8000f6c:	4284      	cmp	r4, r0
 8000f6e:	d018      	beq.n	8000fa2 <chMtxUnlockS+0x42>
 8000f70:	4601      	mov	r1, r0
 8000f72:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 8000f74:	b14b      	cbz	r3, 8000f8a <chMtxUnlockS+0x2a>
 8000f76:	681a      	ldr	r2, [r3, #0]
 8000f78:	4293      	cmp	r3, r2
 8000f7a:	d003      	beq.n	8000f84 <chMtxUnlockS+0x24>
 8000f7c:	6892      	ldr	r2, [r2, #8]
 8000f7e:	4290      	cmp	r0, r2
 8000f80:	bf38      	it	cc
 8000f82:	4610      	movcc	r0, r2
 8000f84:	68db      	ldr	r3, [r3, #12]
 8000f86:	2b00      	cmp	r3, #0
 8000f88:	d1f5      	bne.n	8000f76 <chMtxUnlockS+0x16>
 8000f8a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8000f8c:	6823      	ldr	r3, [r4, #0]
 8000f8e:	60a8      	str	r0, [r5, #8]
 8000f90:	600b      	str	r3, [r1, #0]
 8000f92:	4620      	mov	r0, r4
 8000f94:	6059      	str	r1, [r3, #4]
 8000f96:	e9c1 4202 	strd	r4, r2, [r1, #8]
 8000f9a:	63a1      	str	r1, [r4, #56]	; 0x38
 8000f9c:	bc30      	pop	{r4, r5}
 8000f9e:	f7ff be87 	b.w	8000cb0 <chSchReadyI>
 8000fa2:	2300      	movs	r3, #0
 8000fa4:	60a3      	str	r3, [r4, #8]
 8000fa6:	bc30      	pop	{r4, r5}
 8000fa8:	4770      	bx	lr
 8000faa:	bf00      	nop
 8000fac:	20000930 	.word	0x20000930

08000fb0 <chSemSignalI>:
 8000fb0:	6883      	ldr	r3, [r0, #8]
 8000fb2:	3301      	adds	r3, #1
 8000fb4:	2b00      	cmp	r3, #0
 8000fb6:	6083      	str	r3, [r0, #8]
 8000fb8:	dd00      	ble.n	8000fbc <chSemSignalI+0xc>
 8000fba:	4770      	bx	lr
 8000fbc:	6803      	ldr	r3, [r0, #0]
 8000fbe:	681a      	ldr	r2, [r3, #0]
 8000fc0:	6002      	str	r2, [r0, #0]
 8000fc2:	2100      	movs	r1, #0
 8000fc4:	6050      	str	r0, [r2, #4]
 8000fc6:	4618      	mov	r0, r3
 8000fc8:	6219      	str	r1, [r3, #32]
 8000fca:	f7ff be71 	b.w	8000cb0 <chSchReadyI>
 8000fce:	bf00      	nop

08000fd0 <chMBPostI.constprop.18>:
 8000fd0:	b538      	push	{r3, r4, r5, lr}
 8000fd2:	4b0c      	ldr	r3, [pc, #48]	; (8001004 <chMBPostI.constprop.18+0x34>)
 8000fd4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000fd6:	2a00      	cmp	r2, #0
 8000fd8:	dd10      	ble.n	8000ffc <chMBPostI.constprop.18+0x2c>
 8000fda:	e9d3 5401 	ldrd	r5, r4, [r3, #4]
 8000fde:	1d21      	adds	r1, r4, #4
 8000fe0:	3a01      	subs	r2, #1
 8000fe2:	42a9      	cmp	r1, r5
 8000fe4:	625a      	str	r2, [r3, #36]	; 0x24
 8000fe6:	6099      	str	r1, [r3, #8]
 8000fe8:	bf28      	it	cs
 8000fea:	681a      	ldrcs	r2, [r3, #0]
 8000fec:	6020      	str	r0, [r4, #0]
 8000fee:	4806      	ldr	r0, [pc, #24]	; (8001008 <chMBPostI.constprop.18+0x38>)
 8000ff0:	bf28      	it	cs
 8000ff2:	609a      	strcs	r2, [r3, #8]
 8000ff4:	f7ff ffdc 	bl	8000fb0 <chSemSignalI>
 8000ff8:	2000      	movs	r0, #0
 8000ffa:	bd38      	pop	{r3, r4, r5, pc}
 8000ffc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001000:	bd38      	pop	{r3, r4, r5, pc}
 8001002:	bf00      	nop
 8001004:	20000854 	.word	0x20000854
 8001008:	20000864 	.word	0x20000864
 800100c:	00000000 	.word	0x00000000

08001010 <chMBPostAheadI.constprop.16>:
 8001010:	4a0c      	ldr	r2, [pc, #48]	; (8001044 <chMBPostAheadI.constprop.16+0x34>)
 8001012:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8001014:	2900      	cmp	r1, #0
 8001016:	dd11      	ble.n	800103c <chMBPostAheadI.constprop.16+0x2c>
 8001018:	68d3      	ldr	r3, [r2, #12]
 800101a:	b510      	push	{r4, lr}
 800101c:	6814      	ldr	r4, [r2, #0]
 800101e:	3b04      	subs	r3, #4
 8001020:	3901      	subs	r1, #1
 8001022:	42a3      	cmp	r3, r4
 8001024:	6251      	str	r1, [r2, #36]	; 0x24
 8001026:	60d3      	str	r3, [r2, #12]
 8001028:	d202      	bcs.n	8001030 <chMBPostAheadI.constprop.16+0x20>
 800102a:	6853      	ldr	r3, [r2, #4]
 800102c:	3b04      	subs	r3, #4
 800102e:	60d3      	str	r3, [r2, #12]
 8001030:	6018      	str	r0, [r3, #0]
 8001032:	4805      	ldr	r0, [pc, #20]	; (8001048 <chMBPostAheadI.constprop.16+0x38>)
 8001034:	f7ff ffbc 	bl	8000fb0 <chSemSignalI>
 8001038:	2000      	movs	r0, #0
 800103a:	bd10      	pop	{r4, pc}
 800103c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001040:	4770      	bx	lr
 8001042:	bf00      	nop
 8001044:	20000854 	.word	0x20000854
 8001048:	20000864 	.word	0x20000864
 800104c:	00000000 	.word	0x00000000

08001050 <chMBFetchI.constprop.14>:
 8001050:	4b0c      	ldr	r3, [pc, #48]	; (8001084 <chMBFetchI.constprop.14+0x34>)
 8001052:	6999      	ldr	r1, [r3, #24]
 8001054:	2900      	cmp	r1, #0
 8001056:	dd12      	ble.n	800107e <chMBFetchI.constprop.14+0x2e>
 8001058:	b510      	push	{r4, lr}
 800105a:	68da      	ldr	r2, [r3, #12]
 800105c:	3901      	subs	r1, #1
 800105e:	6199      	str	r1, [r3, #24]
 8001060:	6859      	ldr	r1, [r3, #4]
 8001062:	6814      	ldr	r4, [r2, #0]
 8001064:	3204      	adds	r2, #4
 8001066:	428a      	cmp	r2, r1
 8001068:	60da      	str	r2, [r3, #12]
 800106a:	6004      	str	r4, [r0, #0]
 800106c:	bf28      	it	cs
 800106e:	681a      	ldrcs	r2, [r3, #0]
 8001070:	4805      	ldr	r0, [pc, #20]	; (8001088 <chMBFetchI.constprop.14+0x38>)
 8001072:	bf28      	it	cs
 8001074:	60da      	strcs	r2, [r3, #12]
 8001076:	f7ff ff9b 	bl	8000fb0 <chSemSignalI>
 800107a:	2000      	movs	r0, #0
 800107c:	bd10      	pop	{r4, pc}
 800107e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001082:	4770      	bx	lr
 8001084:	20000854 	.word	0x20000854
 8001088:	20000870 	.word	0x20000870
 800108c:	00000000 	.word	0x00000000

08001090 <chSemResetI>:
 8001090:	b570      	push	{r4, r5, r6, lr}
 8001092:	6885      	ldr	r5, [r0, #8]
 8001094:	6081      	str	r1, [r0, #8]
 8001096:	3501      	adds	r5, #1
 8001098:	2d00      	cmp	r5, #0
 800109a:	dc0c      	bgt.n	80010b6 <chSemResetI+0x26>
 800109c:	4604      	mov	r4, r0
 800109e:	f06f 0601 	mvn.w	r6, #1
 80010a2:	6860      	ldr	r0, [r4, #4]
 80010a4:	6843      	ldr	r3, [r0, #4]
 80010a6:	6063      	str	r3, [r4, #4]
 80010a8:	601c      	str	r4, [r3, #0]
 80010aa:	f7ff fe01 	bl	8000cb0 <chSchReadyI>
 80010ae:	3501      	adds	r5, #1
 80010b0:	2d01      	cmp	r5, #1
 80010b2:	6206      	str	r6, [r0, #32]
 80010b4:	d1f5      	bne.n	80010a2 <chSemResetI+0x12>
 80010b6:	bd70      	pop	{r4, r5, r6, pc}
	...

080010c0 <chVTDoResetI>:
 80010c0:	4b1a      	ldr	r3, [pc, #104]	; (800112c <chVTDoResetI+0x6c>)
 80010c2:	69da      	ldr	r2, [r3, #28]
 80010c4:	4282      	cmp	r2, r0
 80010c6:	b410      	push	{r4}
 80010c8:	d00f      	beq.n	80010ea <chVTDoResetI+0x2a>
 80010ca:	e9d0 2100 	ldrd	r2, r1, [r0]
 80010ce:	600a      	str	r2, [r1, #0]
 80010d0:	6802      	ldr	r2, [r0, #0]
 80010d2:	331c      	adds	r3, #28
 80010d4:	2400      	movs	r4, #0
 80010d6:	429a      	cmp	r2, r3
 80010d8:	6051      	str	r1, [r2, #4]
 80010da:	60c4      	str	r4, [r0, #12]
 80010dc:	d003      	beq.n	80010e6 <chVTDoResetI+0x26>
 80010de:	6881      	ldr	r1, [r0, #8]
 80010e0:	6893      	ldr	r3, [r2, #8]
 80010e2:	440b      	add	r3, r1
 80010e4:	6093      	str	r3, [r2, #8]
 80010e6:	bc10      	pop	{r4}
 80010e8:	4770      	bx	lr
 80010ea:	4618      	mov	r0, r3
 80010ec:	6811      	ldr	r1, [r2, #0]
 80010ee:	f840 1f1c 	str.w	r1, [r0, #28]!
 80010f2:	2400      	movs	r4, #0
 80010f4:	4281      	cmp	r1, r0
 80010f6:	6048      	str	r0, [r1, #4]
 80010f8:	60d4      	str	r4, [r2, #12]
 80010fa:	d012      	beq.n	8001122 <chVTDoResetI+0x62>
 80010fc:	6894      	ldr	r4, [r2, #8]
 80010fe:	6888      	ldr	r0, [r1, #8]
 8001100:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001102:	1903      	adds	r3, r0, r4
 8001104:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8001108:	608b      	str	r3, [r1, #8]
 800110a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800110c:	1a8a      	subs	r2, r1, r2
 800110e:	4293      	cmp	r3, r2
 8001110:	d9e9      	bls.n	80010e6 <chVTDoResetI+0x26>
 8001112:	1a9b      	subs	r3, r3, r2
 8001114:	2b02      	cmp	r3, #2
 8001116:	bf2c      	ite	cs
 8001118:	18cb      	addcs	r3, r1, r3
 800111a:	1c8b      	addcc	r3, r1, #2
 800111c:	6363      	str	r3, [r4, #52]	; 0x34
 800111e:	bc10      	pop	{r4}
 8001120:	4770      	bx	lr
 8001122:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001126:	60dc      	str	r4, [r3, #12]
 8001128:	e7dd      	b.n	80010e6 <chVTDoResetI+0x26>
 800112a:	bf00      	nop
 800112c:	20000930 	.word	0x20000930

08001130 <chVTDoSetI>:
 8001130:	b4f0      	push	{r4, r5, r6, r7}
 8001132:	4d1c      	ldr	r5, [pc, #112]	; (80011a4 <chVTDoSetI+0x74>)
 8001134:	462e      	mov	r6, r5
 8001136:	2902      	cmp	r1, #2
 8001138:	f856 4f1c 	ldr.w	r4, [r6, #28]!
 800113c:	6103      	str	r3, [r0, #16]
 800113e:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 8001142:	bf38      	it	cc
 8001144:	2102      	movcc	r1, #2
 8001146:	42b4      	cmp	r4, r6
 8001148:	60c2      	str	r2, [r0, #12]
 800114a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800114c:	d01b      	beq.n	8001186 <chVTDoSetI+0x56>
 800114e:	6aae      	ldr	r6, [r5, #40]	; 0x28
 8001150:	68a2      	ldr	r2, [r4, #8]
 8001152:	4419      	add	r1, r3
 8001154:	1b8b      	subs	r3, r1, r6
 8001156:	429a      	cmp	r2, r3
 8001158:	d903      	bls.n	8001162 <chVTDoSetI+0x32>
 800115a:	e012      	b.n	8001182 <chVTDoSetI+0x52>
 800115c:	6824      	ldr	r4, [r4, #0]
 800115e:	1a9b      	subs	r3, r3, r2
 8001160:	68a2      	ldr	r2, [r4, #8]
 8001162:	429a      	cmp	r2, r3
 8001164:	d3fa      	bcc.n	800115c <chVTDoSetI+0x2c>
 8001166:	6862      	ldr	r2, [r4, #4]
 8001168:	e9c0 4200 	strd	r4, r2, [r0]
 800116c:	6010      	str	r0, [r2, #0]
 800116e:	6060      	str	r0, [r4, #4]
 8001170:	6083      	str	r3, [r0, #8]
 8001172:	68a2      	ldr	r2, [r4, #8]
 8001174:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001178:	1ad3      	subs	r3, r2, r3
 800117a:	60a3      	str	r3, [r4, #8]
 800117c:	6269      	str	r1, [r5, #36]	; 0x24
 800117e:	bcf0      	pop	{r4, r5, r6, r7}
 8001180:	4770      	bx	lr
 8001182:	6379      	str	r1, [r7, #52]	; 0x34
 8001184:	e7ed      	b.n	8001162 <chVTDoSetI+0x32>
 8001186:	62ab      	str	r3, [r5, #40]	; 0x28
 8001188:	18ce      	adds	r6, r1, r3
 800118a:	2200      	movs	r2, #0
 800118c:	2302      	movs	r3, #2
 800118e:	e9c5 0007 	strd	r0, r0, [r5, #28]
 8001192:	e9c0 4400 	strd	r4, r4, [r0]
 8001196:	6081      	str	r1, [r0, #8]
 8001198:	637e      	str	r6, [r7, #52]	; 0x34
 800119a:	613a      	str	r2, [r7, #16]
 800119c:	60fb      	str	r3, [r7, #12]
 800119e:	bcf0      	pop	{r4, r5, r6, r7}
 80011a0:	4770      	bx	lr
 80011a2:	bf00      	nop
 80011a4:	20000930 	.word	0x20000930
	...

080011b0 <test_start_timer.constprop.1>:
 80011b0:	b508      	push	{r3, lr}
 80011b2:	4b0b      	ldr	r3, [pc, #44]	; (80011e0 <test_start_timer.constprop.1+0x30>)
 80011b4:	2200      	movs	r2, #0
 80011b6:	701a      	strb	r2, [r3, #0]
 80011b8:	2320      	movs	r3, #32
 80011ba:	f383 8811 	msr	BASEPRI, r3
 80011be:	4809      	ldr	r0, [pc, #36]	; (80011e4 <test_start_timer.constprop.1+0x34>)
 80011c0:	68c3      	ldr	r3, [r0, #12]
 80011c2:	b10b      	cbz	r3, 80011c8 <test_start_timer.constprop.1+0x18>
 80011c4:	f7ff ff7c 	bl	80010c0 <chVTDoResetI>
 80011c8:	2300      	movs	r3, #0
 80011ca:	4a07      	ldr	r2, [pc, #28]	; (80011e8 <test_start_timer.constprop.1+0x38>)
 80011cc:	4805      	ldr	r0, [pc, #20]	; (80011e4 <test_start_timer.constprop.1+0x34>)
 80011ce:	f242 7110 	movw	r1, #10000	; 0x2710
 80011d2:	f7ff ffad 	bl	8001130 <chVTDoSetI>
 80011d6:	2300      	movs	r3, #0
 80011d8:	f383 8811 	msr	BASEPRI, r3
 80011dc:	bd08      	pop	{r3, pc}
 80011de:	bf00      	nop
 80011e0:	200011c8 	.word	0x200011c8
 80011e4:	200011f4 	.word	0x200011f4
 80011e8:	080002e1 	.word	0x080002e1
 80011ec:	00000000 	.word	0x00000000

080011f0 <chSysGetStatusAndLockX.part.2>:
 80011f0:	f3ef 8305 	mrs	r3, IPSR
 80011f4:	2320      	movs	r3, #32
 80011f6:	f383 8811 	msr	BASEPRI, r3
 80011fa:	4770      	bx	lr
 80011fc:	0000      	movs	r0, r0
	...

08001200 <chSysIntegrityCheckI>:
 8001200:	07c2      	lsls	r2, r0, #31
 8001202:	b410      	push	{r4}
 8001204:	d512      	bpl.n	800122c <chSysIntegrityCheckI+0x2c>
 8001206:	4b29      	ldr	r3, [pc, #164]	; (80012ac <chSysIntegrityCheckI+0xac>)
 8001208:	e9d3 1400 	ldrd	r1, r4, [r3]
 800120c:	4299      	cmp	r1, r3
 800120e:	d041      	beq.n	8001294 <chSysIntegrityCheckI+0x94>
 8001210:	2200      	movs	r2, #0
 8001212:	6809      	ldr	r1, [r1, #0]
 8001214:	4299      	cmp	r1, r3
 8001216:	f102 0201 	add.w	r2, r2, #1
 800121a:	d1fa      	bne.n	8001212 <chSysIntegrityCheckI+0x12>
 800121c:	428c      	cmp	r4, r1
 800121e:	d036      	beq.n	800128e <chSysIntegrityCheckI+0x8e>
 8001220:	6864      	ldr	r4, [r4, #4]
 8001222:	429c      	cmp	r4, r3
 8001224:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8001228:	d1fa      	bne.n	8001220 <chSysIntegrityCheckI+0x20>
 800122a:	bb82      	cbnz	r2, 800128e <chSysIntegrityCheckI+0x8e>
 800122c:	0783      	lsls	r3, r0, #30
 800122e:	d513      	bpl.n	8001258 <chSysIntegrityCheckI+0x58>
 8001230:	4c1e      	ldr	r4, [pc, #120]	; (80012ac <chSysIntegrityCheckI+0xac>)
 8001232:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8001236:	341c      	adds	r4, #28
 8001238:	42a2      	cmp	r2, r4
 800123a:	d02f      	beq.n	800129c <chSysIntegrityCheckI+0x9c>
 800123c:	2300      	movs	r3, #0
 800123e:	6812      	ldr	r2, [r2, #0]
 8001240:	42a2      	cmp	r2, r4
 8001242:	f103 0301 	add.w	r3, r3, #1
 8001246:	d1fa      	bne.n	800123e <chSysIntegrityCheckI+0x3e>
 8001248:	4291      	cmp	r1, r2
 800124a:	d020      	beq.n	800128e <chSysIntegrityCheckI+0x8e>
 800124c:	6849      	ldr	r1, [r1, #4]
 800124e:	42a1      	cmp	r1, r4
 8001250:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8001254:	d1fa      	bne.n	800124c <chSysIntegrityCheckI+0x4c>
 8001256:	b9d3      	cbnz	r3, 800128e <chSysIntegrityCheckI+0x8e>
 8001258:	f010 0004 	ands.w	r0, r0, #4
 800125c:	d015      	beq.n	800128a <chSysIntegrityCheckI+0x8a>
 800125e:	4b13      	ldr	r3, [pc, #76]	; (80012ac <chSysIntegrityCheckI+0xac>)
 8001260:	e9d3 2104 	ldrd	r2, r1, [r3, #16]
 8001264:	429a      	cmp	r2, r3
 8001266:	f04f 0000 	mov.w	r0, #0
 800126a:	d01b      	beq.n	80012a4 <chSysIntegrityCheckI+0xa4>
 800126c:	6912      	ldr	r2, [r2, #16]
 800126e:	429a      	cmp	r2, r3
 8001270:	f100 0001 	add.w	r0, r0, #1
 8001274:	d1fa      	bne.n	800126c <chSysIntegrityCheckI+0x6c>
 8001276:	4291      	cmp	r1, r2
 8001278:	d009      	beq.n	800128e <chSysIntegrityCheckI+0x8e>
 800127a:	6949      	ldr	r1, [r1, #20]
 800127c:	4299      	cmp	r1, r3
 800127e:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 8001282:	d1fa      	bne.n	800127a <chSysIntegrityCheckI+0x7a>
 8001284:	3000      	adds	r0, #0
 8001286:	bf18      	it	ne
 8001288:	2001      	movne	r0, #1
 800128a:	bc10      	pop	{r4}
 800128c:	4770      	bx	lr
 800128e:	2001      	movs	r0, #1
 8001290:	bc10      	pop	{r4}
 8001292:	4770      	bx	lr
 8001294:	429c      	cmp	r4, r3
 8001296:	d0c9      	beq.n	800122c <chSysIntegrityCheckI+0x2c>
 8001298:	2200      	movs	r2, #0
 800129a:	e7c1      	b.n	8001220 <chSysIntegrityCheckI+0x20>
 800129c:	42a1      	cmp	r1, r4
 800129e:	d0db      	beq.n	8001258 <chSysIntegrityCheckI+0x58>
 80012a0:	2300      	movs	r3, #0
 80012a2:	e7d3      	b.n	800124c <chSysIntegrityCheckI+0x4c>
 80012a4:	4291      	cmp	r1, r2
 80012a6:	d1e8      	bne.n	800127a <chSysIntegrityCheckI+0x7a>
 80012a8:	e7ef      	b.n	800128a <chSysIntegrityCheckI+0x8a>
 80012aa:	bf00      	nop
 80012ac:	20000930 	.word	0x20000930

080012b0 <sys3_execute>:
 80012b0:	b538      	push	{r3, r4, r5, lr}
 80012b2:	2420      	movs	r4, #32
 80012b4:	f384 8811 	msr	BASEPRI, r4
 80012b8:	2001      	movs	r0, #1
 80012ba:	f7ff ffa1 	bl	8001200 <chSysIntegrityCheckI>
 80012be:	2300      	movs	r3, #0
 80012c0:	f383 8811 	msr	BASEPRI, r3
 80012c4:	f080 0101 	eor.w	r1, r0, #1
 80012c8:	b2c9      	uxtb	r1, r1
 80012ca:	2001      	movs	r0, #1
 80012cc:	f7ff fa60 	bl	8000790 <_test_assert>
 80012d0:	b100      	cbz	r0, 80012d4 <sys3_execute+0x24>
 80012d2:	bd38      	pop	{r3, r4, r5, pc}
 80012d4:	4605      	mov	r5, r0
 80012d6:	f384 8811 	msr	BASEPRI, r4
 80012da:	2002      	movs	r0, #2
 80012dc:	f7ff ff90 	bl	8001200 <chSysIntegrityCheckI>
 80012e0:	f385 8811 	msr	BASEPRI, r5
 80012e4:	f080 0101 	eor.w	r1, r0, #1
 80012e8:	b2c9      	uxtb	r1, r1
 80012ea:	2002      	movs	r0, #2
 80012ec:	f7ff fa50 	bl	8000790 <_test_assert>
 80012f0:	4605      	mov	r5, r0
 80012f2:	2800      	cmp	r0, #0
 80012f4:	d1ed      	bne.n	80012d2 <sys3_execute+0x22>
 80012f6:	f384 8811 	msr	BASEPRI, r4
 80012fa:	2004      	movs	r0, #4
 80012fc:	f7ff ff80 	bl	8001200 <chSysIntegrityCheckI>
 8001300:	f385 8811 	msr	BASEPRI, r5
 8001304:	f080 0101 	eor.w	r1, r0, #1
 8001308:	b2c9      	uxtb	r1, r1
 800130a:	2003      	movs	r0, #3
 800130c:	f7ff fa40 	bl	8000790 <_test_assert>
 8001310:	4605      	mov	r5, r0
 8001312:	2800      	cmp	r0, #0
 8001314:	d1dd      	bne.n	80012d2 <sys3_execute+0x22>
 8001316:	f384 8811 	msr	BASEPRI, r4
 800131a:	2008      	movs	r0, #8
 800131c:	f7ff ff70 	bl	8001200 <chSysIntegrityCheckI>
 8001320:	f385 8811 	msr	BASEPRI, r5
 8001324:	f080 0101 	eor.w	r1, r0, #1
 8001328:	b2c9      	uxtb	r1, r1
 800132a:	2004      	movs	r0, #4
 800132c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001330:	f7ff ba2e 	b.w	8000790 <_test_assert>
	...

08001340 <BusFault_Handler>:
 8001340:	b672      	cpsid	i
 8001342:	4b02      	ldr	r3, [pc, #8]	; (800134c <BusFault_Handler+0xc>)
 8001344:	4a02      	ldr	r2, [pc, #8]	; (8001350 <BusFault_Handler+0x10>)
 8001346:	62da      	str	r2, [r3, #44]	; 0x2c
 8001348:	e7fe      	b.n	8001348 <BusFault_Handler+0x8>
 800134a:	bf00      	nop
 800134c:	20000930 	.word	0x20000930
 8001350:	08005bb0 	.word	0x08005bb0
	...

08001360 <bmk13_execute>:
 8001360:	b510      	push	{r4, lr}
 8001362:	482f      	ldr	r0, [pc, #188]	; (8001420 <bmk13_execute+0xc0>)
 8001364:	4c2f      	ldr	r4, [pc, #188]	; (8001424 <bmk13_execute+0xc4>)
 8001366:	f7ff fa83 	bl	8000870 <test_print>
 800136a:	f44f 70a8 	mov.w	r0, #336	; 0x150
 800136e:	f7ff f957 	bl	8000620 <test_printn.part.1>
 8001372:	4620      	mov	r0, r4
 8001374:	f7ff fa5c 	bl	8000830 <test_println>
 8001378:	482b      	ldr	r0, [pc, #172]	; (8001428 <bmk13_execute+0xc8>)
 800137a:	f7ff fa79 	bl	8000870 <test_print>
 800137e:	2044      	movs	r0, #68	; 0x44
 8001380:	f7ff f94e 	bl	8000620 <test_printn.part.1>
 8001384:	4620      	mov	r0, r4
 8001386:	f7ff fa53 	bl	8000830 <test_println>
 800138a:	4828      	ldr	r0, [pc, #160]	; (800142c <bmk13_execute+0xcc>)
 800138c:	f7ff fa70 	bl	8000870 <test_print>
 8001390:	2014      	movs	r0, #20
 8001392:	f7ff f945 	bl	8000620 <test_printn.part.1>
 8001396:	4620      	mov	r0, r4
 8001398:	f7ff fa4a 	bl	8000830 <test_println>
 800139c:	4824      	ldr	r0, [pc, #144]	; (8001430 <bmk13_execute+0xd0>)
 800139e:	f7ff fa67 	bl	8000870 <test_print>
 80013a2:	200c      	movs	r0, #12
 80013a4:	f7ff f93c 	bl	8000620 <test_printn.part.1>
 80013a8:	4620      	mov	r0, r4
 80013aa:	f7ff fa41 	bl	8000830 <test_println>
 80013ae:	4821      	ldr	r0, [pc, #132]	; (8001434 <bmk13_execute+0xd4>)
 80013b0:	f7ff fa5e 	bl	8000870 <test_print>
 80013b4:	2004      	movs	r0, #4
 80013b6:	f7ff f933 	bl	8000620 <test_printn.part.1>
 80013ba:	4620      	mov	r0, r4
 80013bc:	f7ff fa38 	bl	8000830 <test_println>
 80013c0:	481d      	ldr	r0, [pc, #116]	; (8001438 <bmk13_execute+0xd8>)
 80013c2:	f7ff fa55 	bl	8000870 <test_print>
 80013c6:	2014      	movs	r0, #20
 80013c8:	f7ff f92a 	bl	8000620 <test_printn.part.1>
 80013cc:	4620      	mov	r0, r4
 80013ce:	f7ff fa2f 	bl	8000830 <test_println>
 80013d2:	481a      	ldr	r0, [pc, #104]	; (800143c <bmk13_execute+0xdc>)
 80013d4:	f7ff fa4c 	bl	8000870 <test_print>
 80013d8:	2010      	movs	r0, #16
 80013da:	f7ff f921 	bl	8000620 <test_printn.part.1>
 80013de:	4620      	mov	r0, r4
 80013e0:	f7ff fa26 	bl	8000830 <test_println>
 80013e4:	4816      	ldr	r0, [pc, #88]	; (8001440 <bmk13_execute+0xe0>)
 80013e6:	f7ff fa43 	bl	8000870 <test_print>
 80013ea:	2008      	movs	r0, #8
 80013ec:	f7ff f918 	bl	8000620 <test_printn.part.1>
 80013f0:	4620      	mov	r0, r4
 80013f2:	f7ff fa1d 	bl	8000830 <test_println>
 80013f6:	4813      	ldr	r0, [pc, #76]	; (8001444 <bmk13_execute+0xe4>)
 80013f8:	f7ff fa3a 	bl	8000870 <test_print>
 80013fc:	2024      	movs	r0, #36	; 0x24
 80013fe:	f7ff f90f 	bl	8000620 <test_printn.part.1>
 8001402:	4620      	mov	r0, r4
 8001404:	f7ff fa14 	bl	8000830 <test_println>
 8001408:	480f      	ldr	r0, [pc, #60]	; (8001448 <bmk13_execute+0xe8>)
 800140a:	f7ff fa31 	bl	8000870 <test_print>
 800140e:	2028      	movs	r0, #40	; 0x28
 8001410:	f7ff f906 	bl	8000620 <test_printn.part.1>
 8001414:	4620      	mov	r0, r4
 8001416:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800141a:	f7ff ba09 	b.w	8000830 <test_println>
 800141e:	bf00      	nop
 8001420:	08005c10 	.word	0x08005c10
 8001424:	08005c20 	.word	0x08005c20
 8001428:	08005c28 	.word	0x08005c28
 800142c:	08005c38 	.word	0x08005c38
 8001430:	08005c48 	.word	0x08005c48
 8001434:	08005c58 	.word	0x08005c58
 8001438:	08005c68 	.word	0x08005c68
 800143c:	08005c78 	.word	0x08005c78
 8001440:	08005c88 	.word	0x08005c88
 8001444:	08005c98 	.word	0x08005c98
 8001448:	08005ca8 	.word	0x08005ca8
 800144c:	00000000 	.word	0x00000000

08001450 <chThdYield>:
 8001450:	b538      	push	{r3, r4, r5, lr}
 8001452:	2320      	movs	r3, #32
 8001454:	f383 8811 	msr	BASEPRI, r3
 8001458:	4a11      	ldr	r2, [pc, #68]	; (80014a0 <chThdYield+0x50>)
 800145a:	6810      	ldr	r0, [r2, #0]
 800145c:	6994      	ldr	r4, [r2, #24]
 800145e:	6883      	ldr	r3, [r0, #8]
 8001460:	68a1      	ldr	r1, [r4, #8]
 8001462:	428b      	cmp	r3, r1
 8001464:	d203      	bcs.n	800146e <chThdYield+0x1e>
 8001466:	2300      	movs	r3, #0
 8001468:	f383 8811 	msr	BASEPRI, r3
 800146c:	bd38      	pop	{r3, r4, r5, pc}
 800146e:	6803      	ldr	r3, [r0, #0]
 8001470:	6013      	str	r3, [r2, #0]
 8001472:	605a      	str	r2, [r3, #4]
 8001474:	2501      	movs	r5, #1
 8001476:	6190      	str	r0, [r2, #24]
 8001478:	2200      	movs	r2, #0
 800147a:	7705      	strb	r5, [r0, #28]
 800147c:	7722      	strb	r2, [r4, #28]
 800147e:	e000      	b.n	8001482 <chThdYield+0x32>
 8001480:	681b      	ldr	r3, [r3, #0]
 8001482:	689a      	ldr	r2, [r3, #8]
 8001484:	4291      	cmp	r1, r2
 8001486:	d9fb      	bls.n	8001480 <chThdYield+0x30>
 8001488:	685a      	ldr	r2, [r3, #4]
 800148a:	4621      	mov	r1, r4
 800148c:	e9c4 3200 	strd	r3, r2, [r4]
 8001490:	6014      	str	r4, [r2, #0]
 8001492:	605c      	str	r4, [r3, #4]
 8001494:	f7fe fef4 	bl	8000280 <_port_switch>
 8001498:	2300      	movs	r3, #0
 800149a:	f383 8811 	msr	BASEPRI, r3
 800149e:	bd38      	pop	{r3, r4, r5, pc}
 80014a0:	20000930 	.word	0x20000930
	...

080014b0 <thread8>:
 80014b0:	b538      	push	{r3, r4, r5, lr}
 80014b2:	4d09      	ldr	r5, [pc, #36]	; (80014d8 <thread8+0x28>)
 80014b4:	4604      	mov	r4, r0
 80014b6:	f7ff ffcb 	bl	8001450 <chThdYield>
 80014ba:	f7ff ffc9 	bl	8001450 <chThdYield>
 80014be:	f7ff ffc7 	bl	8001450 <chThdYield>
 80014c2:	f7ff ffc5 	bl	8001450 <chThdYield>
 80014c6:	6823      	ldr	r3, [r4, #0]
 80014c8:	69aa      	ldr	r2, [r5, #24]
 80014ca:	3304      	adds	r3, #4
 80014cc:	6023      	str	r3, [r4, #0]
 80014ce:	7f53      	ldrb	r3, [r2, #29]
 80014d0:	075b      	lsls	r3, r3, #29
 80014d2:	d5f0      	bpl.n	80014b6 <thread8+0x6>
 80014d4:	bd38      	pop	{r3, r4, r5, pc}
 80014d6:	bf00      	nop
 80014d8:	20000930 	.word	0x20000930
 80014dc:	00000000 	.word	0x00000000

080014e0 <chSchDoRescheduleAhead>:
 80014e0:	4a0d      	ldr	r2, [pc, #52]	; (8001518 <chSchDoRescheduleAhead+0x38>)
 80014e2:	6810      	ldr	r0, [r2, #0]
 80014e4:	b430      	push	{r4, r5}
 80014e6:	6803      	ldr	r3, [r0, #0]
 80014e8:	6994      	ldr	r4, [r2, #24]
 80014ea:	6013      	str	r3, [r2, #0]
 80014ec:	68a1      	ldr	r1, [r4, #8]
 80014ee:	605a      	str	r2, [r3, #4]
 80014f0:	2501      	movs	r5, #1
 80014f2:	6190      	str	r0, [r2, #24]
 80014f4:	2200      	movs	r2, #0
 80014f6:	7705      	strb	r5, [r0, #28]
 80014f8:	7722      	strb	r2, [r4, #28]
 80014fa:	e000      	b.n	80014fe <chSchDoRescheduleAhead+0x1e>
 80014fc:	681b      	ldr	r3, [r3, #0]
 80014fe:	689a      	ldr	r2, [r3, #8]
 8001500:	4291      	cmp	r1, r2
 8001502:	d3fb      	bcc.n	80014fc <chSchDoRescheduleAhead+0x1c>
 8001504:	685a      	ldr	r2, [r3, #4]
 8001506:	4621      	mov	r1, r4
 8001508:	e9c4 3200 	strd	r3, r2, [r4]
 800150c:	6014      	str	r4, [r2, #0]
 800150e:	605c      	str	r4, [r3, #4]
 8001510:	bc30      	pop	{r4, r5}
 8001512:	f7fe beb5 	b.w	8000280 <_port_switch>
 8001516:	bf00      	nop
 8001518:	20000930 	.word	0x20000930
 800151c:	00000000 	.word	0x00000000

08001520 <chSchRescheduleS>:
 8001520:	4b04      	ldr	r3, [pc, #16]	; (8001534 <chSchRescheduleS+0x14>)
 8001522:	681a      	ldr	r2, [r3, #0]
 8001524:	699b      	ldr	r3, [r3, #24]
 8001526:	6892      	ldr	r2, [r2, #8]
 8001528:	689b      	ldr	r3, [r3, #8]
 800152a:	429a      	cmp	r2, r3
 800152c:	d800      	bhi.n	8001530 <chSchRescheduleS+0x10>
 800152e:	4770      	bx	lr
 8001530:	f7ff bfd6 	b.w	80014e0 <chSchDoRescheduleAhead>
 8001534:	20000930 	.word	0x20000930
	...

08001540 <thread4.lto_priv.72>:
 8001540:	b508      	push	{r3, lr}
 8001542:	2220      	movs	r2, #32
 8001544:	f382 8811 	msr	BASEPRI, r2
 8001548:	6883      	ldr	r3, [r0, #8]
 800154a:	2b00      	cmp	r3, #0
 800154c:	dd05      	ble.n	800155a <thread4.lto_priv.72+0x1a>
 800154e:	f7ff ffe7 	bl	8001520 <chSchRescheduleS>
 8001552:	2300      	movs	r3, #0
 8001554:	f383 8811 	msr	BASEPRI, r3
 8001558:	bd08      	pop	{r3, pc}
 800155a:	f7ff fd29 	bl	8000fb0 <chSemSignalI>
 800155e:	f7ff ffdf 	bl	8001520 <chSchRescheduleS>
 8001562:	2300      	movs	r3, #0
 8001564:	f383 8811 	msr	BASEPRI, r3
 8001568:	bd08      	pop	{r3, pc}
 800156a:	bf00      	nop
 800156c:	0000      	movs	r0, r0
	...

08001570 <chMtxUnlockAll>:
 8001570:	4a13      	ldr	r2, [pc, #76]	; (80015c0 <chMtxUnlockAll+0x50>)
 8001572:	b570      	push	{r4, r5, r6, lr}
 8001574:	2320      	movs	r3, #32
 8001576:	6994      	ldr	r4, [r2, #24]
 8001578:	f383 8811 	msr	BASEPRI, r3
 800157c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800157e:	b1b3      	cbz	r3, 80015ae <chMtxUnlockAll+0x3e>
 8001580:	2600      	movs	r6, #0
 8001582:	681a      	ldr	r2, [r3, #0]
 8001584:	68d9      	ldr	r1, [r3, #12]
 8001586:	63a1      	str	r1, [r4, #56]	; 0x38
 8001588:	4293      	cmp	r3, r2
 800158a:	4610      	mov	r0, r2
 800158c:	d013      	beq.n	80015b6 <chMtxUnlockAll+0x46>
 800158e:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8001590:	6811      	ldr	r1, [r2, #0]
 8001592:	6019      	str	r1, [r3, #0]
 8001594:	604b      	str	r3, [r1, #4]
 8001596:	e9c3 2502 	strd	r2, r5, [r3, #8]
 800159a:	6393      	str	r3, [r2, #56]	; 0x38
 800159c:	f7ff fb88 	bl	8000cb0 <chSchReadyI>
 80015a0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80015a2:	2b00      	cmp	r3, #0
 80015a4:	d1ed      	bne.n	8001582 <chMtxUnlockAll+0x12>
 80015a6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80015a8:	60a3      	str	r3, [r4, #8]
 80015aa:	f7ff ffb9 	bl	8001520 <chSchRescheduleS>
 80015ae:	2300      	movs	r3, #0
 80015b0:	f383 8811 	msr	BASEPRI, r3
 80015b4:	bd70      	pop	{r4, r5, r6, pc}
 80015b6:	609e      	str	r6, [r3, #8]
 80015b8:	460b      	mov	r3, r1
 80015ba:	2b00      	cmp	r3, #0
 80015bc:	d1e1      	bne.n	8001582 <chMtxUnlockAll+0x12>
 80015be:	e7f2      	b.n	80015a6 <chMtxUnlockAll+0x36>
 80015c0:	20000930 	.word	0x20000930
	...

080015d0 <chThdSetPriority>:
 80015d0:	b510      	push	{r4, lr}
 80015d2:	2320      	movs	r3, #32
 80015d4:	f383 8811 	msr	BASEPRI, r3
 80015d8:	4b08      	ldr	r3, [pc, #32]	; (80015fc <chThdSetPriority+0x2c>)
 80015da:	699b      	ldr	r3, [r3, #24]
 80015dc:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80015de:	6899      	ldr	r1, [r3, #8]
 80015e0:	42a1      	cmp	r1, r4
 80015e2:	d001      	beq.n	80015e8 <chThdSetPriority+0x18>
 80015e4:	4281      	cmp	r1, r0
 80015e6:	d200      	bcs.n	80015ea <chThdSetPriority+0x1a>
 80015e8:	6098      	str	r0, [r3, #8]
 80015ea:	63d8      	str	r0, [r3, #60]	; 0x3c
 80015ec:	f7ff ff98 	bl	8001520 <chSchRescheduleS>
 80015f0:	2300      	movs	r3, #0
 80015f2:	f383 8811 	msr	BASEPRI, r3
 80015f6:	4620      	mov	r0, r4
 80015f8:	bd10      	pop	{r4, pc}
 80015fa:	bf00      	nop
 80015fc:	20000930 	.word	0x20000930

08001600 <thd3_execute>:
 8001600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001602:	4e49      	ldr	r6, [pc, #292]	; (8001728 <thd3_execute+0x128>)
 8001604:	69b3      	ldr	r3, [r6, #24]
 8001606:	689c      	ldr	r4, [r3, #8]
 8001608:	1c65      	adds	r5, r4, #1
 800160a:	4628      	mov	r0, r5
 800160c:	f7ff ffe0 	bl	80015d0 <chThdSetPriority>
 8001610:	1b01      	subs	r1, r0, r4
 8001612:	fab1 f181 	clz	r1, r1
 8001616:	4607      	mov	r7, r0
 8001618:	0949      	lsrs	r1, r1, #5
 800161a:	2001      	movs	r0, #1
 800161c:	f7ff f8b8 	bl	8000790 <_test_assert>
 8001620:	b100      	cbz	r0, 8001624 <thd3_execute+0x24>
 8001622:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001624:	69b3      	ldr	r3, [r6, #24]
 8001626:	6899      	ldr	r1, [r3, #8]
 8001628:	1b49      	subs	r1, r1, r5
 800162a:	fab1 f181 	clz	r1, r1
 800162e:	2002      	movs	r0, #2
 8001630:	0949      	lsrs	r1, r1, #5
 8001632:	f7ff f8ad 	bl	8000790 <_test_assert>
 8001636:	2800      	cmp	r0, #0
 8001638:	d1f3      	bne.n	8001622 <thd3_execute+0x22>
 800163a:	4638      	mov	r0, r7
 800163c:	f7ff ffc8 	bl	80015d0 <chThdSetPriority>
 8001640:	1a29      	subs	r1, r5, r0
 8001642:	fab1 f181 	clz	r1, r1
 8001646:	0949      	lsrs	r1, r1, #5
 8001648:	2003      	movs	r0, #3
 800164a:	f7ff f8a1 	bl	8000790 <_test_assert>
 800164e:	2800      	cmp	r0, #0
 8001650:	d1e7      	bne.n	8001622 <thd3_execute+0x22>
 8001652:	69b3      	ldr	r3, [r6, #24]
 8001654:	6899      	ldr	r1, [r3, #8]
 8001656:	1b09      	subs	r1, r1, r4
 8001658:	fab1 f181 	clz	r1, r1
 800165c:	2004      	movs	r0, #4
 800165e:	0949      	lsrs	r1, r1, #5
 8001660:	f7ff f896 	bl	8000790 <_test_assert>
 8001664:	2800      	cmp	r0, #0
 8001666:	d1dc      	bne.n	8001622 <thd3_execute+0x22>
 8001668:	2320      	movs	r3, #32
 800166a:	f383 8811 	msr	BASEPRI, r3
 800166e:	69b2      	ldr	r2, [r6, #24]
 8001670:	6893      	ldr	r3, [r2, #8]
 8001672:	3302      	adds	r3, #2
 8001674:	6093      	str	r3, [r2, #8]
 8001676:	f380 8811 	msr	BASEPRI, r0
 800167a:	69b3      	ldr	r3, [r6, #24]
 800167c:	6899      	ldr	r1, [r3, #8]
 800167e:	1ca7      	adds	r7, r4, #2
 8001680:	1bc9      	subs	r1, r1, r7
 8001682:	fab1 f181 	clz	r1, r1
 8001686:	0949      	lsrs	r1, r1, #5
 8001688:	2005      	movs	r0, #5
 800168a:	f7ff f881 	bl	8000790 <_test_assert>
 800168e:	2800      	cmp	r0, #0
 8001690:	d1c7      	bne.n	8001622 <thd3_execute+0x22>
 8001692:	4628      	mov	r0, r5
 8001694:	f7ff ff9c 	bl	80015d0 <chThdSetPriority>
 8001698:	1b01      	subs	r1, r0, r4
 800169a:	fab1 f181 	clz	r1, r1
 800169e:	0949      	lsrs	r1, r1, #5
 80016a0:	2006      	movs	r0, #6
 80016a2:	f7ff f875 	bl	8000790 <_test_assert>
 80016a6:	2800      	cmp	r0, #0
 80016a8:	d1bb      	bne.n	8001622 <thd3_execute+0x22>
 80016aa:	69b3      	ldr	r3, [r6, #24]
 80016ac:	6899      	ldr	r1, [r3, #8]
 80016ae:	1bc9      	subs	r1, r1, r7
 80016b0:	fab1 f181 	clz	r1, r1
 80016b4:	0949      	lsrs	r1, r1, #5
 80016b6:	2007      	movs	r0, #7
 80016b8:	f7ff f86a 	bl	8000790 <_test_assert>
 80016bc:	2800      	cmp	r0, #0
 80016be:	d1b0      	bne.n	8001622 <thd3_execute+0x22>
 80016c0:	69b3      	ldr	r3, [r6, #24]
 80016c2:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80016c4:	1b4f      	subs	r7, r1, r5
 80016c6:	4279      	negs	r1, r7
 80016c8:	4179      	adcs	r1, r7
 80016ca:	2008      	movs	r0, #8
 80016cc:	f7ff f860 	bl	8000790 <_test_assert>
 80016d0:	2800      	cmp	r0, #0
 80016d2:	d1a6      	bne.n	8001622 <thd3_execute+0x22>
 80016d4:	1ce7      	adds	r7, r4, #3
 80016d6:	4638      	mov	r0, r7
 80016d8:	f7ff ff7a 	bl	80015d0 <chThdSetPriority>
 80016dc:	1a28      	subs	r0, r5, r0
 80016de:	4241      	negs	r1, r0
 80016e0:	4141      	adcs	r1, r0
 80016e2:	2009      	movs	r0, #9
 80016e4:	f7ff f854 	bl	8000790 <_test_assert>
 80016e8:	2800      	cmp	r0, #0
 80016ea:	d19a      	bne.n	8001622 <thd3_execute+0x22>
 80016ec:	69b3      	ldr	r3, [r6, #24]
 80016ee:	6899      	ldr	r1, [r3, #8]
 80016f0:	1bca      	subs	r2, r1, r7
 80016f2:	4251      	negs	r1, r2
 80016f4:	4151      	adcs	r1, r2
 80016f6:	200a      	movs	r0, #10
 80016f8:	f7ff f84a 	bl	8000790 <_test_assert>
 80016fc:	2800      	cmp	r0, #0
 80016fe:	d190      	bne.n	8001622 <thd3_execute+0x22>
 8001700:	69b3      	ldr	r3, [r6, #24]
 8001702:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001704:	1bcb      	subs	r3, r1, r7
 8001706:	4259      	negs	r1, r3
 8001708:	4159      	adcs	r1, r3
 800170a:	200b      	movs	r0, #11
 800170c:	f7ff f840 	bl	8000790 <_test_assert>
 8001710:	2800      	cmp	r0, #0
 8001712:	d186      	bne.n	8001622 <thd3_execute+0x22>
 8001714:	2320      	movs	r3, #32
 8001716:	f383 8811 	msr	BASEPRI, r3
 800171a:	69b3      	ldr	r3, [r6, #24]
 800171c:	609c      	str	r4, [r3, #8]
 800171e:	63dc      	str	r4, [r3, #60]	; 0x3c
 8001720:	f380 8811 	msr	BASEPRI, r0
 8001724:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001726:	bf00      	nop
 8001728:	20000930 	.word	0x20000930
 800172c:	00000000 	.word	0x00000000

08001730 <chSysRestoreStatusX.part.3>:
 8001730:	b510      	push	{r4, lr}
 8001732:	f3ef 8405 	mrs	r4, IPSR
 8001736:	f3c4 0408 	ubfx	r4, r4, #0, #9
 800173a:	b11c      	cbz	r4, 8001744 <chSysRestoreStatusX.part.3+0x14>
 800173c:	2300      	movs	r3, #0
 800173e:	f383 8811 	msr	BASEPRI, r3
 8001742:	bd10      	pop	{r4, pc}
 8001744:	f7ff feec 	bl	8001520 <chSchRescheduleS>
 8001748:	f384 8811 	msr	BASEPRI, r4
 800174c:	bd10      	pop	{r4, pc}
 800174e:	bf00      	nop

08001750 <vtcb>:
 8001750:	b508      	push	{r3, lr}
 8001752:	2320      	movs	r3, #32
 8001754:	f383 8811 	msr	BASEPRI, r3
 8001758:	2200      	movs	r2, #0
 800175a:	f382 8811 	msr	BASEPRI, r2
 800175e:	f383 8811 	msr	BASEPRI, r3
 8001762:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8001766:	b91b      	cbnz	r3, 8001770 <vtcb+0x20>
 8001768:	f7ff fd42 	bl	80011f0 <chSysGetStatusAndLockX.part.2>
 800176c:	f7ff ffe0 	bl	8001730 <chSysRestoreStatusX.part.3>
 8001770:	2300      	movs	r3, #0
 8001772:	f383 8811 	msr	BASEPRI, r3
 8001776:	bd08      	pop	{r3, pc}
	...

08001780 <chSchWakeupS>:
 8001780:	4b14      	ldr	r3, [pc, #80]	; (80017d4 <chSchWakeupS+0x54>)
 8001782:	b470      	push	{r4, r5, r6}
 8001784:	699e      	ldr	r6, [r3, #24]
 8001786:	6885      	ldr	r5, [r0, #8]
 8001788:	4604      	mov	r4, r0
 800178a:	68b0      	ldr	r0, [r6, #8]
 800178c:	6221      	str	r1, [r4, #32]
 800178e:	4285      	cmp	r5, r0
 8001790:	f04f 0200 	mov.w	r2, #0
 8001794:	d80b      	bhi.n	80017ae <chSchWakeupS+0x2e>
 8001796:	7722      	strb	r2, [r4, #28]
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	689a      	ldr	r2, [r3, #8]
 800179c:	4295      	cmp	r5, r2
 800179e:	d9fb      	bls.n	8001798 <chSchWakeupS+0x18>
 80017a0:	685a      	ldr	r2, [r3, #4]
 80017a2:	e9c4 3200 	strd	r3, r2, [r4]
 80017a6:	6014      	str	r4, [r2, #0]
 80017a8:	605c      	str	r4, [r3, #4]
 80017aa:	bc70      	pop	{r4, r5, r6}
 80017ac:	4770      	bx	lr
 80017ae:	7732      	strb	r2, [r6, #28]
 80017b0:	461a      	mov	r2, r3
 80017b2:	6812      	ldr	r2, [r2, #0]
 80017b4:	6891      	ldr	r1, [r2, #8]
 80017b6:	4288      	cmp	r0, r1
 80017b8:	d9fb      	bls.n	80017b2 <chSchWakeupS+0x32>
 80017ba:	6851      	ldr	r1, [r2, #4]
 80017bc:	6071      	str	r1, [r6, #4]
 80017be:	2001      	movs	r0, #1
 80017c0:	6032      	str	r2, [r6, #0]
 80017c2:	600e      	str	r6, [r1, #0]
 80017c4:	6056      	str	r6, [r2, #4]
 80017c6:	7720      	strb	r0, [r4, #28]
 80017c8:	4631      	mov	r1, r6
 80017ca:	4620      	mov	r0, r4
 80017cc:	619c      	str	r4, [r3, #24]
 80017ce:	bc70      	pop	{r4, r5, r6}
 80017d0:	f7fe bd56 	b.w	8000280 <_port_switch>
 80017d4:	20000930 	.word	0x20000930
	...

080017e0 <chThdCreateFromMemoryPool.constprop.51>:
 80017e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80017e4:	4e1d      	ldr	r6, [pc, #116]	; (800185c <chThdCreateFromMemoryPool.constprop.51+0x7c>)
 80017e6:	4607      	mov	r7, r0
 80017e8:	4630      	mov	r0, r6
 80017ea:	4688      	mov	r8, r1
 80017ec:	f7ff f8e8 	bl	80009c0 <chPoolAlloc>
 80017f0:	4604      	mov	r4, r0
 80017f2:	b380      	cbz	r0, 8001856 <chThdCreateFromMemoryPool.constprop.51+0x76>
 80017f4:	2320      	movs	r3, #32
 80017f6:	f383 8811 	msr	BASEPRI, r3
 80017fa:	6873      	ldr	r3, [r6, #4]
 80017fc:	4a18      	ldr	r2, [pc, #96]	; (8001860 <chThdCreateFromMemoryPool.constprop.51+0x80>)
 80017fe:	4919      	ldr	r1, [pc, #100]	; (8001864 <chThdCreateFromMemoryPool.constprop.51+0x84>)
 8001800:	3b24      	subs	r3, #36	; 0x24
 8001802:	18c5      	adds	r5, r0, r3
 8001804:	60c5      	str	r5, [r0, #12]
 8001806:	50c2      	str	r2, [r0, r3]
 8001808:	4a17      	ldr	r2, [pc, #92]	; (8001868 <chThdCreateFromMemoryPool.constprop.51+0x88>)
 800180a:	f8c5 8004 	str.w	r8, [r5, #4]
 800180e:	6229      	str	r1, [r5, #32]
 8001810:	6102      	str	r2, [r0, #16]
 8001812:	f8d2 e014 	ldr.w	lr, [r2, #20]
 8001816:	f8c0 e014 	str.w	lr, [r0, #20]
 800181a:	2301      	movs	r3, #1
 800181c:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8001820:	f04f 0c02 	mov.w	ip, #2
 8001824:	2500      	movs	r5, #0
 8001826:	7783      	strb	r3, [r0, #30]
 8001828:	f100 0328 	add.w	r3, r0, #40	; 0x28
 800182c:	6087      	str	r7, [r0, #8]
 800182e:	63c7      	str	r7, [r0, #60]	; 0x3c
 8001830:	f880 c01c 	strb.w	ip, [r0, #28]
 8001834:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8001838:	6185      	str	r5, [r0, #24]
 800183a:	f8ce 0010 	str.w	r0, [lr, #16]
 800183e:	6241      	str	r1, [r0, #36]	; 0x24
 8001840:	f880 c01d 	strb.w	ip, [r0, #29]
 8001844:	6406      	str	r6, [r0, #64]	; 0x40
 8001846:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800184a:	4629      	mov	r1, r5
 800184c:	6150      	str	r0, [r2, #20]
 800184e:	f7ff ff97 	bl	8001780 <chSchWakeupS>
 8001852:	f385 8811 	msr	BASEPRI, r5
 8001856:	4620      	mov	r0, r4
 8001858:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800185c:	20000b08 	.word	0x20000b08
 8001860:	08000821 	.word	0x08000821
 8001864:	08000291 	.word	0x08000291
 8001868:	20000930 	.word	0x20000930
 800186c:	00000000 	.word	0x00000000

08001870 <chCondSignal.constprop.43>:
 8001870:	b508      	push	{r3, lr}
 8001872:	2320      	movs	r3, #32
 8001874:	f383 8811 	msr	BASEPRI, r3
 8001878:	4b06      	ldr	r3, [pc, #24]	; (8001894 <chCondSignal.constprop.43+0x24>)
 800187a:	6818      	ldr	r0, [r3, #0]
 800187c:	4298      	cmp	r0, r3
 800187e:	d005      	beq.n	800188c <chCondSignal.constprop.43+0x1c>
 8001880:	6802      	ldr	r2, [r0, #0]
 8001882:	601a      	str	r2, [r3, #0]
 8001884:	6053      	str	r3, [r2, #4]
 8001886:	2100      	movs	r1, #0
 8001888:	f7ff ff7a 	bl	8001780 <chSchWakeupS>
 800188c:	2300      	movs	r3, #0
 800188e:	f383 8811 	msr	BASEPRI, r3
 8001892:	bd08      	pop	{r3, pc}
 8001894:	20000800 	.word	0x20000800
	...

080018a0 <chMtxUnlock>:
 80018a0:	4b16      	ldr	r3, [pc, #88]	; (80018fc <chMtxUnlock+0x5c>)
 80018a2:	b570      	push	{r4, r5, r6, lr}
 80018a4:	699d      	ldr	r5, [r3, #24]
 80018a6:	2320      	movs	r3, #32
 80018a8:	f383 8811 	msr	BASEPRI, r3
 80018ac:	6804      	ldr	r4, [r0, #0]
 80018ae:	68c3      	ldr	r3, [r0, #12]
 80018b0:	63ab      	str	r3, [r5, #56]	; 0x38
 80018b2:	4284      	cmp	r4, r0
 80018b4:	d01c      	beq.n	80018f0 <chMtxUnlock+0x50>
 80018b6:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 80018b8:	b14b      	cbz	r3, 80018ce <chMtxUnlock+0x2e>
 80018ba:	681a      	ldr	r2, [r3, #0]
 80018bc:	4293      	cmp	r3, r2
 80018be:	d003      	beq.n	80018c8 <chMtxUnlock+0x28>
 80018c0:	6892      	ldr	r2, [r2, #8]
 80018c2:	4291      	cmp	r1, r2
 80018c4:	bf38      	it	cc
 80018c6:	4611      	movcc	r1, r2
 80018c8:	68db      	ldr	r3, [r3, #12]
 80018ca:	2b00      	cmp	r3, #0
 80018cc:	d1f5      	bne.n	80018ba <chMtxUnlock+0x1a>
 80018ce:	4603      	mov	r3, r0
 80018d0:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 80018d2:	6822      	ldr	r2, [r4, #0]
 80018d4:	60a9      	str	r1, [r5, #8]
 80018d6:	4620      	mov	r0, r4
 80018d8:	601a      	str	r2, [r3, #0]
 80018da:	2100      	movs	r1, #0
 80018dc:	6053      	str	r3, [r2, #4]
 80018de:	e9c3 4602 	strd	r4, r6, [r3, #8]
 80018e2:	63a3      	str	r3, [r4, #56]	; 0x38
 80018e4:	f7ff ff4c 	bl	8001780 <chSchWakeupS>
 80018e8:	2300      	movs	r3, #0
 80018ea:	f383 8811 	msr	BASEPRI, r3
 80018ee:	bd70      	pop	{r4, r5, r6, pc}
 80018f0:	2300      	movs	r3, #0
 80018f2:	60a3      	str	r3, [r4, #8]
 80018f4:	2300      	movs	r3, #0
 80018f6:	f383 8811 	msr	BASEPRI, r3
 80018fa:	bd70      	pop	{r4, r5, r6, pc}
 80018fc:	20000930 	.word	0x20000930

08001900 <chSemSignal>:
 8001900:	b508      	push	{r3, lr}
 8001902:	2320      	movs	r3, #32
 8001904:	f383 8811 	msr	BASEPRI, r3
 8001908:	6883      	ldr	r3, [r0, #8]
 800190a:	3301      	adds	r3, #1
 800190c:	2b00      	cmp	r3, #0
 800190e:	6083      	str	r3, [r0, #8]
 8001910:	dd03      	ble.n	800191a <chSemSignal+0x1a>
 8001912:	2300      	movs	r3, #0
 8001914:	f383 8811 	msr	BASEPRI, r3
 8001918:	bd08      	pop	{r3, pc}
 800191a:	4603      	mov	r3, r0
 800191c:	6800      	ldr	r0, [r0, #0]
 800191e:	6802      	ldr	r2, [r0, #0]
 8001920:	601a      	str	r2, [r3, #0]
 8001922:	2100      	movs	r1, #0
 8001924:	6053      	str	r3, [r2, #4]
 8001926:	f7ff ff2b 	bl	8001780 <chSchWakeupS>
 800192a:	2300      	movs	r3, #0
 800192c:	f383 8811 	msr	BASEPRI, r3
 8001930:	bd08      	pop	{r3, pc}
 8001932:	bf00      	nop
	...

08001940 <chThdCreateStatic>:
 8001940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001942:	9e06      	ldr	r6, [sp, #24]
 8001944:	4604      	mov	r4, r0
 8001946:	2520      	movs	r5, #32
 8001948:	f385 8811 	msr	BASEPRI, r5
 800194c:	3924      	subs	r1, #36	; 0x24
 800194e:	1845      	adds	r5, r0, r1
 8001950:	60c5      	str	r5, [r0, #12]
 8001952:	4f12      	ldr	r7, [pc, #72]	; (800199c <chThdCreateStatic+0x5c>)
 8001954:	5043      	str	r3, [r0, r1]
 8001956:	4b12      	ldr	r3, [pc, #72]	; (80019a0 <chThdCreateStatic+0x60>)
 8001958:	606e      	str	r6, [r5, #4]
 800195a:	622f      	str	r7, [r5, #32]
 800195c:	6103      	str	r3, [r0, #16]
 800195e:	6959      	ldr	r1, [r3, #20]
 8001960:	63c2      	str	r2, [r0, #60]	; 0x3c
 8001962:	6082      	str	r2, [r0, #8]
 8001964:	2500      	movs	r5, #0
 8001966:	f100 0228 	add.w	r2, r0, #40	; 0x28
 800196a:	f04f 0c02 	mov.w	ip, #2
 800196e:	f100 0624 	add.w	r6, r0, #36	; 0x24
 8001972:	2701      	movs	r7, #1
 8001974:	6141      	str	r1, [r0, #20]
 8001976:	f8a0 c01c 	strh.w	ip, [r0, #28]
 800197a:	7787      	strb	r7, [r0, #30]
 800197c:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8001980:	6185      	str	r5, [r0, #24]
 8001982:	6108      	str	r0, [r1, #16]
 8001984:	4629      	mov	r1, r5
 8001986:	e9c0 6209 	strd	r6, r2, [r0, #36]	; 0x24
 800198a:	62c2      	str	r2, [r0, #44]	; 0x2c
 800198c:	6158      	str	r0, [r3, #20]
 800198e:	f7ff fef7 	bl	8001780 <chSchWakeupS>
 8001992:	f385 8811 	msr	BASEPRI, r5
 8001996:	4620      	mov	r0, r4
 8001998:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800199a:	bf00      	nop
 800199c:	08000291 	.word	0x08000291
 80019a0:	20000930 	.word	0x20000930
	...

080019b0 <chSchGoSleepS>:
 80019b0:	4b07      	ldr	r3, [pc, #28]	; (80019d0 <chSchGoSleepS+0x20>)
 80019b2:	6999      	ldr	r1, [r3, #24]
 80019b4:	681a      	ldr	r2, [r3, #0]
 80019b6:	b410      	push	{r4}
 80019b8:	7708      	strb	r0, [r1, #28]
 80019ba:	6810      	ldr	r0, [r2, #0]
 80019bc:	6018      	str	r0, [r3, #0]
 80019be:	2401      	movs	r4, #1
 80019c0:	6043      	str	r3, [r0, #4]
 80019c2:	7714      	strb	r4, [r2, #28]
 80019c4:	4610      	mov	r0, r2
 80019c6:	bc10      	pop	{r4}
 80019c8:	619a      	str	r2, [r3, #24]
 80019ca:	f7fe bc59 	b.w	8000280 <_port_switch>
 80019ce:	bf00      	nop
 80019d0:	20000930 	.word	0x20000930
	...

080019e0 <chSemSignalWait.constprop.47>:
 80019e0:	b538      	push	{r3, r4, r5, lr}
 80019e2:	2320      	movs	r3, #32
 80019e4:	f383 8811 	msr	BASEPRI, r3
 80019e8:	4c15      	ldr	r4, [pc, #84]	; (8001a40 <chSemSignalWait.constprop.47+0x60>)
 80019ea:	68a3      	ldr	r3, [r4, #8]
 80019ec:	3301      	adds	r3, #1
 80019ee:	2b00      	cmp	r3, #0
 80019f0:	60a3      	str	r3, [r4, #8]
 80019f2:	dd1a      	ble.n	8001a2a <chSemSignalWait.constprop.47+0x4a>
 80019f4:	3b01      	subs	r3, #1
 80019f6:	2b00      	cmp	r3, #0
 80019f8:	60a3      	str	r3, [r4, #8]
 80019fa:	db06      	blt.n	8001a0a <chSemSignalWait.constprop.47+0x2a>
 80019fc:	f7ff fd90 	bl	8001520 <chSchRescheduleS>
 8001a00:	2000      	movs	r0, #0
 8001a02:	2300      	movs	r3, #0
 8001a04:	f383 8811 	msr	BASEPRI, r3
 8001a08:	bd38      	pop	{r3, r4, r5, pc}
 8001a0a:	4a0e      	ldr	r2, [pc, #56]	; (8001a44 <chSemSignalWait.constprop.47+0x64>)
 8001a0c:	6863      	ldr	r3, [r4, #4]
 8001a0e:	6995      	ldr	r5, [r2, #24]
 8001a10:	2005      	movs	r0, #5
 8001a12:	e9c5 4300 	strd	r4, r3, [r5]
 8001a16:	601d      	str	r5, [r3, #0]
 8001a18:	622c      	str	r4, [r5, #32]
 8001a1a:	6065      	str	r5, [r4, #4]
 8001a1c:	f7ff ffc8 	bl	80019b0 <chSchGoSleepS>
 8001a20:	6a28      	ldr	r0, [r5, #32]
 8001a22:	2300      	movs	r3, #0
 8001a24:	f383 8811 	msr	BASEPRI, r3
 8001a28:	bd38      	pop	{r3, r4, r5, pc}
 8001a2a:	6820      	ldr	r0, [r4, #0]
 8001a2c:	6803      	ldr	r3, [r0, #0]
 8001a2e:	6023      	str	r3, [r4, #0]
 8001a30:	605c      	str	r4, [r3, #4]
 8001a32:	f7ff f93d 	bl	8000cb0 <chSchReadyI>
 8001a36:	2200      	movs	r2, #0
 8001a38:	68a3      	ldr	r3, [r4, #8]
 8001a3a:	6202      	str	r2, [r0, #32]
 8001a3c:	e7da      	b.n	80019f4 <chSemSignalWait.constprop.47+0x14>
 8001a3e:	bf00      	nop
 8001a40:	200008ac 	.word	0x200008ac
 8001a44:	20000930 	.word	0x20000930
	...

08001a50 <sem3_execute>:
 8001a50:	b510      	push	{r4, lr}
 8001a52:	4a1e      	ldr	r2, [pc, #120]	; (8001acc <sem3_execute+0x7c>)
 8001a54:	4b1e      	ldr	r3, [pc, #120]	; (8001ad0 <sem3_execute+0x80>)
 8001a56:	6992      	ldr	r2, [r2, #24]
 8001a58:	481e      	ldr	r0, [pc, #120]	; (8001ad4 <sem3_execute+0x84>)
 8001a5a:	6892      	ldr	r2, [r2, #8]
 8001a5c:	4c1e      	ldr	r4, [pc, #120]	; (8001ad8 <sem3_execute+0x88>)
 8001a5e:	b082      	sub	sp, #8
 8001a60:	2100      	movs	r1, #0
 8001a62:	3201      	adds	r2, #1
 8001a64:	9100      	str	r1, [sp, #0]
 8001a66:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8001a6a:	f7ff ff69 	bl	8001940 <chThdCreateStatic>
 8001a6e:	4b1b      	ldr	r3, [pc, #108]	; (8001adc <sem3_execute+0x8c>)
 8001a70:	6018      	str	r0, [r3, #0]
 8001a72:	f7ff ffb5 	bl	80019e0 <chSemSignalWait.constprop.47>
 8001a76:	6821      	ldr	r1, [r4, #0]
 8001a78:	1b09      	subs	r1, r1, r4
 8001a7a:	fab1 f181 	clz	r1, r1
 8001a7e:	2001      	movs	r0, #1
 8001a80:	0949      	lsrs	r1, r1, #5
 8001a82:	f7fe fe85 	bl	8000790 <_test_assert>
 8001a86:	b108      	cbz	r0, 8001a8c <sem3_execute+0x3c>
 8001a88:	b002      	add	sp, #8
 8001a8a:	bd10      	pop	{r4, pc}
 8001a8c:	68a1      	ldr	r1, [r4, #8]
 8001a8e:	fab1 f181 	clz	r1, r1
 8001a92:	0949      	lsrs	r1, r1, #5
 8001a94:	2002      	movs	r0, #2
 8001a96:	f7fe fe7b 	bl	8000790 <_test_assert>
 8001a9a:	2800      	cmp	r0, #0
 8001a9c:	d1f4      	bne.n	8001a88 <sem3_execute+0x38>
 8001a9e:	f7ff ff9f 	bl	80019e0 <chSemSignalWait.constprop.47>
 8001aa2:	6821      	ldr	r1, [r4, #0]
 8001aa4:	1b09      	subs	r1, r1, r4
 8001aa6:	fab1 f181 	clz	r1, r1
 8001aaa:	2003      	movs	r0, #3
 8001aac:	0949      	lsrs	r1, r1, #5
 8001aae:	f7fe fe6f 	bl	8000790 <_test_assert>
 8001ab2:	2800      	cmp	r0, #0
 8001ab4:	d1e8      	bne.n	8001a88 <sem3_execute+0x38>
 8001ab6:	68a1      	ldr	r1, [r4, #8]
 8001ab8:	fab1 f181 	clz	r1, r1
 8001abc:	0949      	lsrs	r1, r1, #5
 8001abe:	2004      	movs	r0, #4
 8001ac0:	b002      	add	sp, #8
 8001ac2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001ac6:	f7fe be63 	b.w	8000790 <_test_assert>
 8001aca:	bf00      	nop
 8001acc:	20000930 	.word	0x20000930
 8001ad0:	08003931 	.word	0x08003931
 8001ad4:	20000b38 	.word	0x20000b38
 8001ad8:	200008ac 	.word	0x200008ac
 8001adc:	200011cc 	.word	0x200011cc

08001ae0 <chEvtWaitOne.constprop.31>:
 8001ae0:	4a0b      	ldr	r2, [pc, #44]	; (8001b10 <chEvtWaitOne.constprop.31+0x30>)
 8001ae2:	b510      	push	{r4, lr}
 8001ae4:	2320      	movs	r3, #32
 8001ae6:	6994      	ldr	r4, [r2, #24]
 8001ae8:	f383 8811 	msr	BASEPRI, r3
 8001aec:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001aee:	b933      	cbnz	r3, 8001afe <chEvtWaitOne.constprop.31+0x1e>
 8001af0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001af4:	6223      	str	r3, [r4, #32]
 8001af6:	200a      	movs	r0, #10
 8001af8:	f7ff ff5a 	bl	80019b0 <chSchGoSleepS>
 8001afc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001afe:	4258      	negs	r0, r3
 8001b00:	4018      	ands	r0, r3
 8001b02:	ea23 0300 	bic.w	r3, r3, r0
 8001b06:	6363      	str	r3, [r4, #52]	; 0x34
 8001b08:	2300      	movs	r3, #0
 8001b0a:	f383 8811 	msr	BASEPRI, r3
 8001b0e:	bd10      	pop	{r4, pc}
 8001b10:	20000930 	.word	0x20000930
	...

08001b20 <chEvtWaitAny.constprop.30>:
 8001b20:	4a09      	ldr	r2, [pc, #36]	; (8001b48 <chEvtWaitAny.constprop.30+0x28>)
 8001b22:	b510      	push	{r4, lr}
 8001b24:	2320      	movs	r3, #32
 8001b26:	6994      	ldr	r4, [r2, #24]
 8001b28:	f383 8811 	msr	BASEPRI, r3
 8001b2c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001b2e:	b930      	cbnz	r0, 8001b3e <chEvtWaitAny.constprop.30+0x1e>
 8001b30:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001b34:	200a      	movs	r0, #10
 8001b36:	6223      	str	r3, [r4, #32]
 8001b38:	f7ff ff3a 	bl	80019b0 <chSchGoSleepS>
 8001b3c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001b3e:	2300      	movs	r3, #0
 8001b40:	6363      	str	r3, [r4, #52]	; 0x34
 8001b42:	f383 8811 	msr	BASEPRI, r3
 8001b46:	bd10      	pop	{r4, pc}
 8001b48:	20000930 	.word	0x20000930
 8001b4c:	00000000 	.word	0x00000000

08001b50 <thread4.lto_priv.73>:
 8001b50:	4a07      	ldr	r2, [pc, #28]	; (8001b70 <thread4.lto_priv.73+0x20>)
 8001b52:	b510      	push	{r4, lr}
 8001b54:	2320      	movs	r3, #32
 8001b56:	6994      	ldr	r4, [r2, #24]
 8001b58:	f383 8811 	msr	BASEPRI, r3
 8001b5c:	2003      	movs	r0, #3
 8001b5e:	f7ff ff27 	bl	80019b0 <chSchGoSleepS>
 8001b62:	6a23      	ldr	r3, [r4, #32]
 8001b64:	2b00      	cmp	r3, #0
 8001b66:	d0f9      	beq.n	8001b5c <thread4.lto_priv.73+0xc>
 8001b68:	2300      	movs	r3, #0
 8001b6a:	f383 8811 	msr	BASEPRI, r3
 8001b6e:	bd10      	pop	{r4, pc}
 8001b70:	20000930 	.word	0x20000930
	...

08001b80 <chSchGoSleepTimeoutS>:
 8001b80:	b530      	push	{r4, r5, lr}
 8001b82:	1c4b      	adds	r3, r1, #1
 8001b84:	b087      	sub	sp, #28
 8001b86:	d012      	beq.n	8001bae <chSchGoSleepTimeoutS+0x2e>
 8001b88:	4c0c      	ldr	r4, [pc, #48]	; (8001bbc <chSchGoSleepTimeoutS+0x3c>)
 8001b8a:	4a0d      	ldr	r2, [pc, #52]	; (8001bc0 <chSchGoSleepTimeoutS+0x40>)
 8001b8c:	69a3      	ldr	r3, [r4, #24]
 8001b8e:	4605      	mov	r5, r0
 8001b90:	a801      	add	r0, sp, #4
 8001b92:	f7ff facd 	bl	8001130 <chVTDoSetI>
 8001b96:	4628      	mov	r0, r5
 8001b98:	f7ff ff0a 	bl	80019b0 <chSchGoSleepS>
 8001b9c:	9b04      	ldr	r3, [sp, #16]
 8001b9e:	b113      	cbz	r3, 8001ba6 <chSchGoSleepTimeoutS+0x26>
 8001ba0:	a801      	add	r0, sp, #4
 8001ba2:	f7ff fa8d 	bl	80010c0 <chVTDoResetI>
 8001ba6:	69a3      	ldr	r3, [r4, #24]
 8001ba8:	6a18      	ldr	r0, [r3, #32]
 8001baa:	b007      	add	sp, #28
 8001bac:	bd30      	pop	{r4, r5, pc}
 8001bae:	4c03      	ldr	r4, [pc, #12]	; (8001bbc <chSchGoSleepTimeoutS+0x3c>)
 8001bb0:	f7ff fefe 	bl	80019b0 <chSchGoSleepS>
 8001bb4:	69a3      	ldr	r3, [r4, #24]
 8001bb6:	6a18      	ldr	r0, [r3, #32]
 8001bb8:	b007      	add	sp, #28
 8001bba:	bd30      	pop	{r4, r5, pc}
 8001bbc:	20000930 	.word	0x20000930
 8001bc0:	08000c41 	.word	0x08000c41
	...

08001bd0 <chSemWaitTimeout.constprop.49>:
 8001bd0:	2320      	movs	r3, #32
 8001bd2:	f383 8811 	msr	BASEPRI, r3
 8001bd6:	4b10      	ldr	r3, [pc, #64]	; (8001c18 <chSemWaitTimeout.constprop.49+0x48>)
 8001bd8:	6899      	ldr	r1, [r3, #8]
 8001bda:	1e4a      	subs	r2, r1, #1
 8001bdc:	2a00      	cmp	r2, #0
 8001bde:	609a      	str	r2, [r3, #8]
 8001be0:	db04      	blt.n	8001bec <chSemWaitTimeout.constprop.49+0x1c>
 8001be2:	2000      	movs	r0, #0
 8001be4:	2300      	movs	r3, #0
 8001be6:	f383 8811 	msr	BASEPRI, r3
 8001bea:	4770      	bx	lr
 8001bec:	b180      	cbz	r0, 8001c10 <chSemWaitTimeout.constprop.49+0x40>
 8001bee:	4a0b      	ldr	r2, [pc, #44]	; (8001c1c <chSemWaitTimeout.constprop.49+0x4c>)
 8001bf0:	b510      	push	{r4, lr}
 8001bf2:	6992      	ldr	r2, [r2, #24]
 8001bf4:	685c      	ldr	r4, [r3, #4]
 8001bf6:	6213      	str	r3, [r2, #32]
 8001bf8:	e9c2 3400 	strd	r3, r4, [r2]
 8001bfc:	4601      	mov	r1, r0
 8001bfe:	6022      	str	r2, [r4, #0]
 8001c00:	2005      	movs	r0, #5
 8001c02:	605a      	str	r2, [r3, #4]
 8001c04:	f7ff ffbc 	bl	8001b80 <chSchGoSleepTimeoutS>
 8001c08:	2300      	movs	r3, #0
 8001c0a:	f383 8811 	msr	BASEPRI, r3
 8001c0e:	bd10      	pop	{r4, pc}
 8001c10:	6099      	str	r1, [r3, #8]
 8001c12:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001c16:	e7e5      	b.n	8001be4 <chSemWaitTimeout.constprop.49+0x14>
 8001c18:	200008ac 	.word	0x200008ac
 8001c1c:	20000930 	.word	0x20000930

08001c20 <evt3_execute>:
 8001c20:	b570      	push	{r4, r5, r6, lr}
 8001c22:	4c55      	ldr	r4, [pc, #340]	; (8001d78 <evt3_execute+0x158>)
 8001c24:	2320      	movs	r3, #32
 8001c26:	69a2      	ldr	r2, [r4, #24]
 8001c28:	f383 8811 	msr	BASEPRI, r3
 8001c2c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001c2e:	b93b      	cbnz	r3, 8001c40 <evt3_execute+0x20>
 8001c30:	f383 8811 	msr	BASEPRI, r3
 8001c34:	2101      	movs	r1, #1
 8001c36:	2001      	movs	r0, #1
 8001c38:	f7fe fdaa 	bl	8000790 <_test_assert>
 8001c3c:	b180      	cbz	r0, 8001c60 <evt3_execute+0x40>
 8001c3e:	bd70      	pop	{r4, r5, r6, pc}
 8001c40:	4259      	negs	r1, r3
 8001c42:	4019      	ands	r1, r3
 8001c44:	ea23 0301 	bic.w	r3, r3, r1
 8001c48:	6353      	str	r3, [r2, #52]	; 0x34
 8001c4a:	2300      	movs	r3, #0
 8001c4c:	f383 8811 	msr	BASEPRI, r3
 8001c50:	fab1 f181 	clz	r1, r1
 8001c54:	0949      	lsrs	r1, r1, #5
 8001c56:	2001      	movs	r0, #1
 8001c58:	f7fe fd9a 	bl	8000790 <_test_assert>
 8001c5c:	2800      	cmp	r0, #0
 8001c5e:	d1ee      	bne.n	8001c3e <evt3_execute+0x1e>
 8001c60:	69a3      	ldr	r3, [r4, #24]
 8001c62:	2220      	movs	r2, #32
 8001c64:	f382 8811 	msr	BASEPRI, r2
 8001c68:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001c6a:	2a00      	cmp	r2, #0
 8001c6c:	d06f      	beq.n	8001d4e <evt3_execute+0x12e>
 8001c6e:	6358      	str	r0, [r3, #52]	; 0x34
 8001c70:	f380 8811 	msr	BASEPRI, r0
 8001c74:	4601      	mov	r1, r0
 8001c76:	2002      	movs	r0, #2
 8001c78:	f7fe fd8a 	bl	8000790 <_test_assert>
 8001c7c:	2800      	cmp	r0, #0
 8001c7e:	d1de      	bne.n	8001c3e <evt3_execute+0x1e>
 8001c80:	69a3      	ldr	r3, [r4, #24]
 8001c82:	2220      	movs	r2, #32
 8001c84:	f382 8811 	msr	BASEPRI, r2
 8001c88:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001c8a:	3201      	adds	r2, #1
 8001c8c:	d063      	beq.n	8001d56 <evt3_execute+0x136>
 8001c8e:	f380 8811 	msr	BASEPRI, r0
 8001c92:	2001      	movs	r0, #1
 8001c94:	4601      	mov	r1, r0
 8001c96:	2003      	movs	r0, #3
 8001c98:	f7fe fd7a 	bl	8000790 <_test_assert>
 8001c9c:	2800      	cmp	r0, #0
 8001c9e:	d1ce      	bne.n	8001c3e <evt3_execute+0x1e>
 8001ca0:	69a6      	ldr	r6, [r4, #24]
 8001ca2:	2320      	movs	r3, #32
 8001ca4:	f383 8811 	msr	BASEPRI, r3
 8001ca8:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001caa:	b94d      	cbnz	r5, 8001cc0 <evt3_execute+0xa0>
 8001cac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001cb0:	210a      	movs	r1, #10
 8001cb2:	6233      	str	r3, [r6, #32]
 8001cb4:	4608      	mov	r0, r1
 8001cb6:	f7ff ff63 	bl	8001b80 <chSchGoSleepTimeoutS>
 8001cba:	2800      	cmp	r0, #0
 8001cbc:	db4f      	blt.n	8001d5e <evt3_execute+0x13e>
 8001cbe:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001cc0:	4269      	negs	r1, r5
 8001cc2:	4029      	ands	r1, r5
 8001cc4:	ea25 0501 	bic.w	r5, r5, r1
 8001cc8:	6375      	str	r5, [r6, #52]	; 0x34
 8001cca:	2300      	movs	r3, #0
 8001ccc:	f383 8811 	msr	BASEPRI, r3
 8001cd0:	fab1 f181 	clz	r1, r1
 8001cd4:	0949      	lsrs	r1, r1, #5
 8001cd6:	2004      	movs	r0, #4
 8001cd8:	f7fe fd5a 	bl	8000790 <_test_assert>
 8001cdc:	2800      	cmp	r0, #0
 8001cde:	d1ae      	bne.n	8001c3e <evt3_execute+0x1e>
 8001ce0:	69a6      	ldr	r6, [r4, #24]
 8001ce2:	2320      	movs	r3, #32
 8001ce4:	f383 8811 	msr	BASEPRI, r3
 8001ce8:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001cea:	b94d      	cbnz	r5, 8001d00 <evt3_execute+0xe0>
 8001cec:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001cf0:	210a      	movs	r1, #10
 8001cf2:	6233      	str	r3, [r6, #32]
 8001cf4:	4608      	mov	r0, r1
 8001cf6:	f7ff ff43 	bl	8001b80 <chSchGoSleepTimeoutS>
 8001cfa:	2800      	cmp	r0, #0
 8001cfc:	db33      	blt.n	8001d66 <evt3_execute+0x146>
 8001cfe:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001d00:	2300      	movs	r3, #0
 8001d02:	6373      	str	r3, [r6, #52]	; 0x34
 8001d04:	f383 8811 	msr	BASEPRI, r3
 8001d08:	fab5 f185 	clz	r1, r5
 8001d0c:	0949      	lsrs	r1, r1, #5
 8001d0e:	2005      	movs	r0, #5
 8001d10:	f7fe fd3e 	bl	8000790 <_test_assert>
 8001d14:	4605      	mov	r5, r0
 8001d16:	2800      	cmp	r0, #0
 8001d18:	d191      	bne.n	8001c3e <evt3_execute+0x1e>
 8001d1a:	69a4      	ldr	r4, [r4, #24]
 8001d1c:	2320      	movs	r3, #32
 8001d1e:	f383 8811 	msr	BASEPRI, r3
 8001d22:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001d24:	3301      	adds	r3, #1
 8001d26:	d008      	beq.n	8001d3a <evt3_execute+0x11a>
 8001d28:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001d2c:	6223      	str	r3, [r4, #32]
 8001d2e:	210a      	movs	r1, #10
 8001d30:	200b      	movs	r0, #11
 8001d32:	f7ff ff25 	bl	8001b80 <chSchGoSleepTimeoutS>
 8001d36:	2800      	cmp	r0, #0
 8001d38:	db19      	blt.n	8001d6e <evt3_execute+0x14e>
 8001d3a:	2300      	movs	r3, #0
 8001d3c:	6363      	str	r3, [r4, #52]	; 0x34
 8001d3e:	f383 8811 	msr	BASEPRI, r3
 8001d42:	4629      	mov	r1, r5
 8001d44:	2006      	movs	r0, #6
 8001d46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001d4a:	f7fe bd21 	b.w	8000790 <_test_assert>
 8001d4e:	f382 8811 	msr	BASEPRI, r2
 8001d52:	2101      	movs	r1, #1
 8001d54:	e78f      	b.n	8001c76 <evt3_execute+0x56>
 8001d56:	6358      	str	r0, [r3, #52]	; 0x34
 8001d58:	f380 8811 	msr	BASEPRI, r0
 8001d5c:	e79a      	b.n	8001c94 <evt3_execute+0x74>
 8001d5e:	f385 8811 	msr	BASEPRI, r5
 8001d62:	2101      	movs	r1, #1
 8001d64:	e7b7      	b.n	8001cd6 <evt3_execute+0xb6>
 8001d66:	f385 8811 	msr	BASEPRI, r5
 8001d6a:	2101      	movs	r1, #1
 8001d6c:	e7cf      	b.n	8001d0e <evt3_execute+0xee>
 8001d6e:	f385 8811 	msr	BASEPRI, r5
 8001d72:	2501      	movs	r5, #1
 8001d74:	e7e5      	b.n	8001d42 <evt3_execute+0x122>
 8001d76:	bf00      	nop
 8001d78:	20000930 	.word	0x20000930
 8001d7c:	00000000 	.word	0x00000000

08001d80 <chSemWaitTimeoutS>:
 8001d80:	6883      	ldr	r3, [r0, #8]
 8001d82:	3b01      	subs	r3, #1
 8001d84:	2b00      	cmp	r3, #0
 8001d86:	6083      	str	r3, [r0, #8]
 8001d88:	db01      	blt.n	8001d8e <chSemWaitTimeoutS+0xe>
 8001d8a:	2000      	movs	r0, #0
 8001d8c:	4770      	bx	lr
 8001d8e:	4b07      	ldr	r3, [pc, #28]	; (8001dac <chSemWaitTimeoutS+0x2c>)
 8001d90:	699b      	ldr	r3, [r3, #24]
 8001d92:	b410      	push	{r4}
 8001d94:	6218      	str	r0, [r3, #32]
 8001d96:	6018      	str	r0, [r3, #0]
 8001d98:	6844      	ldr	r4, [r0, #4]
 8001d9a:	605c      	str	r4, [r3, #4]
 8001d9c:	4602      	mov	r2, r0
 8001d9e:	6023      	str	r3, [r4, #0]
 8001da0:	2005      	movs	r0, #5
 8001da2:	6053      	str	r3, [r2, #4]
 8001da4:	bc10      	pop	{r4}
 8001da6:	f7ff beeb 	b.w	8001b80 <chSchGoSleepTimeoutS>
 8001daa:	bf00      	nop
 8001dac:	20000930 	.word	0x20000930

08001db0 <chMBPost.constprop.19>:
 8001db0:	b570      	push	{r4, r5, r6, lr}
 8001db2:	2320      	movs	r3, #32
 8001db4:	4606      	mov	r6, r0
 8001db6:	f383 8811 	msr	BASEPRI, r3
 8001dba:	4c0d      	ldr	r4, [pc, #52]	; (8001df0 <chMBPost.constprop.19+0x40>)
 8001dbc:	f104 001c 	add.w	r0, r4, #28
 8001dc0:	f7ff ffde 	bl	8001d80 <chSemWaitTimeoutS>
 8001dc4:	4605      	mov	r5, r0
 8001dc6:	b968      	cbnz	r0, 8001de4 <chMBPost.constprop.19+0x34>
 8001dc8:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8001dcc:	1d13      	adds	r3, r2, #4
 8001dce:	428b      	cmp	r3, r1
 8001dd0:	60a3      	str	r3, [r4, #8]
 8001dd2:	4808      	ldr	r0, [pc, #32]	; (8001df4 <chMBPost.constprop.19+0x44>)
 8001dd4:	6016      	str	r6, [r2, #0]
 8001dd6:	bf24      	itt	cs
 8001dd8:	6823      	ldrcs	r3, [r4, #0]
 8001dda:	60a3      	strcs	r3, [r4, #8]
 8001ddc:	f7ff f8e8 	bl	8000fb0 <chSemSignalI>
 8001de0:	f7ff fb9e 	bl	8001520 <chSchRescheduleS>
 8001de4:	2300      	movs	r3, #0
 8001de6:	f383 8811 	msr	BASEPRI, r3
 8001dea:	4628      	mov	r0, r5
 8001dec:	bd70      	pop	{r4, r5, r6, pc}
 8001dee:	bf00      	nop
 8001df0:	20000854 	.word	0x20000854
 8001df4:	20000864 	.word	0x20000864
	...

08001e00 <chMBPostAhead.constprop.17>:
 8001e00:	b570      	push	{r4, r5, r6, lr}
 8001e02:	2320      	movs	r3, #32
 8001e04:	4606      	mov	r6, r0
 8001e06:	f383 8811 	msr	BASEPRI, r3
 8001e0a:	4c10      	ldr	r4, [pc, #64]	; (8001e4c <chMBPostAhead.constprop.17+0x4c>)
 8001e0c:	f104 001c 	add.w	r0, r4, #28
 8001e10:	f7ff ffb6 	bl	8001d80 <chSemWaitTimeoutS>
 8001e14:	4605      	mov	r5, r0
 8001e16:	b120      	cbz	r0, 8001e22 <chMBPostAhead.constprop.17+0x22>
 8001e18:	2300      	movs	r3, #0
 8001e1a:	f383 8811 	msr	BASEPRI, r3
 8001e1e:	4628      	mov	r0, r5
 8001e20:	bd70      	pop	{r4, r5, r6, pc}
 8001e22:	68e3      	ldr	r3, [r4, #12]
 8001e24:	6822      	ldr	r2, [r4, #0]
 8001e26:	3b04      	subs	r3, #4
 8001e28:	4293      	cmp	r3, r2
 8001e2a:	60e3      	str	r3, [r4, #12]
 8001e2c:	d202      	bcs.n	8001e34 <chMBPostAhead.constprop.17+0x34>
 8001e2e:	6863      	ldr	r3, [r4, #4]
 8001e30:	3b04      	subs	r3, #4
 8001e32:	60e3      	str	r3, [r4, #12]
 8001e34:	601e      	str	r6, [r3, #0]
 8001e36:	4806      	ldr	r0, [pc, #24]	; (8001e50 <chMBPostAhead.constprop.17+0x50>)
 8001e38:	f7ff f8ba 	bl	8000fb0 <chSemSignalI>
 8001e3c:	f7ff fb70 	bl	8001520 <chSchRescheduleS>
 8001e40:	2300      	movs	r3, #0
 8001e42:	f383 8811 	msr	BASEPRI, r3
 8001e46:	4628      	mov	r0, r5
 8001e48:	bd70      	pop	{r4, r5, r6, pc}
 8001e4a:	bf00      	nop
 8001e4c:	20000854 	.word	0x20000854
 8001e50:	20000864 	.word	0x20000864
	...

08001e60 <chMBFetch.constprop.15>:
 8001e60:	b570      	push	{r4, r5, r6, lr}
 8001e62:	2320      	movs	r3, #32
 8001e64:	4606      	mov	r6, r0
 8001e66:	f383 8811 	msr	BASEPRI, r3
 8001e6a:	4c0d      	ldr	r4, [pc, #52]	; (8001ea0 <chMBFetch.constprop.15+0x40>)
 8001e6c:	f104 0010 	add.w	r0, r4, #16
 8001e70:	f7ff ff86 	bl	8001d80 <chSemWaitTimeoutS>
 8001e74:	4605      	mov	r5, r0
 8001e76:	b970      	cbnz	r0, 8001e96 <chMBFetch.constprop.15+0x36>
 8001e78:	68e3      	ldr	r3, [r4, #12]
 8001e7a:	6862      	ldr	r2, [r4, #4]
 8001e7c:	6819      	ldr	r1, [r3, #0]
 8001e7e:	4809      	ldr	r0, [pc, #36]	; (8001ea4 <chMBFetch.constprop.15+0x44>)
 8001e80:	3304      	adds	r3, #4
 8001e82:	4293      	cmp	r3, r2
 8001e84:	60e3      	str	r3, [r4, #12]
 8001e86:	6031      	str	r1, [r6, #0]
 8001e88:	bf24      	itt	cs
 8001e8a:	6823      	ldrcs	r3, [r4, #0]
 8001e8c:	60e3      	strcs	r3, [r4, #12]
 8001e8e:	f7ff f88f 	bl	8000fb0 <chSemSignalI>
 8001e92:	f7ff fb45 	bl	8001520 <chSchRescheduleS>
 8001e96:	2300      	movs	r3, #0
 8001e98:	f383 8811 	msr	BASEPRI, r3
 8001e9c:	4628      	mov	r0, r5
 8001e9e:	bd70      	pop	{r4, r5, r6, pc}
 8001ea0:	20000854 	.word	0x20000854
 8001ea4:	20000870 	.word	0x20000870
	...

08001eb0 <mbox1_execute>:
 8001eb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001eb2:	2320      	movs	r3, #32
 8001eb4:	b083      	sub	sp, #12
 8001eb6:	f383 8811 	msr	BASEPRI, r3
 8001eba:	4dd1      	ldr	r5, [pc, #836]	; (8002200 <mbox1_execute+0x350>)
 8001ebc:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8001ebe:	f1a1 0105 	sub.w	r1, r1, #5
 8001ec2:	fab1 f181 	clz	r1, r1
 8001ec6:	2001      	movs	r0, #1
 8001ec8:	0949      	lsrs	r1, r1, #5
 8001eca:	f7fe fc61 	bl	8000790 <_test_assert>
 8001ece:	2800      	cmp	r0, #0
 8001ed0:	f040 8191 	bne.w	80021f6 <mbox1_execute+0x346>
 8001ed4:	f380 8811 	msr	BASEPRI, r0
 8001ed8:	2442      	movs	r4, #66	; 0x42
 8001eda:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001ede:	4620      	mov	r0, r4
 8001ee0:	f7ff ff66 	bl	8001db0 <chMBPost.constprop.19>
 8001ee4:	fab0 f180 	clz	r1, r0
 8001ee8:	0949      	lsrs	r1, r1, #5
 8001eea:	2002      	movs	r0, #2
 8001eec:	f7fe fc50 	bl	8000790 <_test_assert>
 8001ef0:	3401      	adds	r4, #1
 8001ef2:	b978      	cbnz	r0, 8001f14 <mbox1_execute+0x64>
 8001ef4:	2c46      	cmp	r4, #70	; 0x46
 8001ef6:	d1f0      	bne.n	8001eda <mbox1_execute+0x2a>
 8001ef8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001efc:	2041      	movs	r0, #65	; 0x41
 8001efe:	f7ff ff7f 	bl	8001e00 <chMBPostAhead.constprop.17>
 8001f02:	fab0 f180 	clz	r1, r0
 8001f06:	0949      	lsrs	r1, r1, #5
 8001f08:	2003      	movs	r0, #3
 8001f0a:	f7fe fc41 	bl	8000790 <_test_assert>
 8001f0e:	2800      	cmp	r0, #0
 8001f10:	f000 817e 	beq.w	8002210 <mbox1_execute+0x360>
 8001f14:	b003      	add	sp, #12
 8001f16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f18:	f380 8811 	msr	BASEPRI, r0
 8001f1c:	f384 8811 	msr	BASEPRI, r4
 8001f20:	2041      	movs	r0, #65	; 0x41
 8001f22:	f7ff f855 	bl	8000fd0 <chMBPostI.constprop.18>
 8001f26:	fab0 f180 	clz	r1, r0
 8001f2a:	0949      	lsrs	r1, r1, #5
 8001f2c:	2016      	movs	r0, #22
 8001f2e:	f7fe fc2f 	bl	8000790 <_test_assert>
 8001f32:	2800      	cmp	r0, #0
 8001f34:	d1ee      	bne.n	8001f14 <mbox1_execute+0x64>
 8001f36:	2042      	movs	r0, #66	; 0x42
 8001f38:	f7ff f84a 	bl	8000fd0 <chMBPostI.constprop.18>
 8001f3c:	fab0 f180 	clz	r1, r0
 8001f40:	0949      	lsrs	r1, r1, #5
 8001f42:	2017      	movs	r0, #23
 8001f44:	f7fe fc24 	bl	8000790 <_test_assert>
 8001f48:	2800      	cmp	r0, #0
 8001f4a:	d1e3      	bne.n	8001f14 <mbox1_execute+0x64>
 8001f4c:	2043      	movs	r0, #67	; 0x43
 8001f4e:	f7ff f83f 	bl	8000fd0 <chMBPostI.constprop.18>
 8001f52:	fab0 f180 	clz	r1, r0
 8001f56:	0949      	lsrs	r1, r1, #5
 8001f58:	2018      	movs	r0, #24
 8001f5a:	f7fe fc19 	bl	8000790 <_test_assert>
 8001f5e:	2800      	cmp	r0, #0
 8001f60:	d1d8      	bne.n	8001f14 <mbox1_execute+0x64>
 8001f62:	2044      	movs	r0, #68	; 0x44
 8001f64:	f7ff f834 	bl	8000fd0 <chMBPostI.constprop.18>
 8001f68:	fab0 f180 	clz	r1, r0
 8001f6c:	0949      	lsrs	r1, r1, #5
 8001f6e:	2019      	movs	r0, #25
 8001f70:	f7fe fc0e 	bl	8000790 <_test_assert>
 8001f74:	4606      	mov	r6, r0
 8001f76:	2800      	cmp	r0, #0
 8001f78:	d1cc      	bne.n	8001f14 <mbox1_execute+0x64>
 8001f7a:	2045      	movs	r0, #69	; 0x45
 8001f7c:	f7ff f828 	bl	8000fd0 <chMBPostI.constprop.18>
 8001f80:	f386 8811 	msr	BASEPRI, r6
 8001f84:	fab0 f180 	clz	r1, r0
 8001f88:	0949      	lsrs	r1, r1, #5
 8001f8a:	201a      	movs	r0, #26
 8001f8c:	f7fe fc00 	bl	8000790 <_test_assert>
 8001f90:	2800      	cmp	r0, #0
 8001f92:	d1bf      	bne.n	8001f14 <mbox1_execute+0x64>
 8001f94:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8001f98:	eba1 0c03 	sub.w	ip, r1, r3
 8001f9c:	f1dc 0100 	rsbs	r1, ip, #0
 8001fa0:	eb41 010c 	adc.w	r1, r1, ip
 8001fa4:	201b      	movs	r0, #27
 8001fa6:	f7fe fbf3 	bl	8000790 <_test_assert>
 8001faa:	2800      	cmp	r0, #0
 8001fac:	d1b2      	bne.n	8001f14 <mbox1_execute+0x64>
 8001fae:	4607      	mov	r7, r0
 8001fb0:	2605      	movs	r6, #5
 8001fb2:	f384 8811 	msr	BASEPRI, r4
 8001fb6:	a801      	add	r0, sp, #4
 8001fb8:	f7ff f84a 	bl	8001050 <chMBFetchI.constprop.14>
 8001fbc:	f387 8811 	msr	BASEPRI, r7
 8001fc0:	fab0 f180 	clz	r1, r0
 8001fc4:	0949      	lsrs	r1, r1, #5
 8001fc6:	201c      	movs	r0, #28
 8001fc8:	f7fe fbe2 	bl	8000790 <_test_assert>
 8001fcc:	2800      	cmp	r0, #0
 8001fce:	d1a1      	bne.n	8001f14 <mbox1_execute+0x64>
 8001fd0:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8001fd4:	f7fe fbf4 	bl	80007c0 <test_emit_token>
 8001fd8:	3e01      	subs	r6, #1
 8001fda:	d1ea      	bne.n	8001fb2 <mbox1_execute+0x102>
 8001fdc:	4989      	ldr	r1, [pc, #548]	; (8002204 <mbox1_execute+0x354>)
 8001fde:	201d      	movs	r0, #29
 8001fe0:	f7fe fbae 	bl	8000740 <_test_assert_sequence>
 8001fe4:	2800      	cmp	r0, #0
 8001fe6:	d195      	bne.n	8001f14 <mbox1_execute+0x64>
 8001fe8:	f384 8811 	msr	BASEPRI, r4
 8001fec:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8001fee:	1f4f      	subs	r7, r1, #5
 8001ff0:	4279      	negs	r1, r7
 8001ff2:	4179      	adcs	r1, r7
 8001ff4:	201e      	movs	r0, #30
 8001ff6:	f7fe fbcb 	bl	8000790 <_test_assert>
 8001ffa:	2800      	cmp	r0, #0
 8001ffc:	f040 8223 	bne.w	8002446 <mbox1_execute+0x596>
 8002000:	f386 8811 	msr	BASEPRI, r6
 8002004:	f384 8811 	msr	BASEPRI, r4
 8002008:	69a9      	ldr	r1, [r5, #24]
 800200a:	fab1 f181 	clz	r1, r1
 800200e:	0949      	lsrs	r1, r1, #5
 8002010:	201f      	movs	r0, #31
 8002012:	f7fe fbbd 	bl	8000790 <_test_assert>
 8002016:	2800      	cmp	r0, #0
 8002018:	f040 8215 	bne.w	8002446 <mbox1_execute+0x596>
 800201c:	f386 8811 	msr	BASEPRI, r6
 8002020:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002024:	1aca      	subs	r2, r1, r3
 8002026:	4251      	negs	r1, r2
 8002028:	4151      	adcs	r1, r2
 800202a:	2020      	movs	r0, #32
 800202c:	f7fe fbb0 	bl	8000790 <_test_assert>
 8002030:	2800      	cmp	r0, #0
 8002032:	f47f af6f 	bne.w	8001f14 <mbox1_execute+0x64>
 8002036:	f384 8811 	msr	BASEPRI, r4
 800203a:	2045      	movs	r0, #69	; 0x45
 800203c:	f7fe ffe8 	bl	8001010 <chMBPostAheadI.constprop.16>
 8002040:	fab0 f180 	clz	r1, r0
 8002044:	0949      	lsrs	r1, r1, #5
 8002046:	2021      	movs	r0, #33	; 0x21
 8002048:	f7fe fba2 	bl	8000790 <_test_assert>
 800204c:	2800      	cmp	r0, #0
 800204e:	f47f af61 	bne.w	8001f14 <mbox1_execute+0x64>
 8002052:	2044      	movs	r0, #68	; 0x44
 8002054:	f7fe ffdc 	bl	8001010 <chMBPostAheadI.constprop.16>
 8002058:	fab0 f180 	clz	r1, r0
 800205c:	0949      	lsrs	r1, r1, #5
 800205e:	2022      	movs	r0, #34	; 0x22
 8002060:	f7fe fb96 	bl	8000790 <_test_assert>
 8002064:	2800      	cmp	r0, #0
 8002066:	f47f af55 	bne.w	8001f14 <mbox1_execute+0x64>
 800206a:	2043      	movs	r0, #67	; 0x43
 800206c:	f7fe ffd0 	bl	8001010 <chMBPostAheadI.constprop.16>
 8002070:	fab0 f180 	clz	r1, r0
 8002074:	0949      	lsrs	r1, r1, #5
 8002076:	2023      	movs	r0, #35	; 0x23
 8002078:	f7fe fb8a 	bl	8000790 <_test_assert>
 800207c:	2800      	cmp	r0, #0
 800207e:	f47f af49 	bne.w	8001f14 <mbox1_execute+0x64>
 8002082:	2042      	movs	r0, #66	; 0x42
 8002084:	f7fe ffc4 	bl	8001010 <chMBPostAheadI.constprop.16>
 8002088:	fab0 f180 	clz	r1, r0
 800208c:	0949      	lsrs	r1, r1, #5
 800208e:	2024      	movs	r0, #36	; 0x24
 8002090:	f7fe fb7e 	bl	8000790 <_test_assert>
 8002094:	2800      	cmp	r0, #0
 8002096:	f47f af3d 	bne.w	8001f14 <mbox1_execute+0x64>
 800209a:	2041      	movs	r0, #65	; 0x41
 800209c:	f7fe ffb8 	bl	8001010 <chMBPostAheadI.constprop.16>
 80020a0:	2300      	movs	r3, #0
 80020a2:	f383 8811 	msr	BASEPRI, r3
 80020a6:	fab0 f180 	clz	r1, r0
 80020aa:	0949      	lsrs	r1, r1, #5
 80020ac:	2025      	movs	r0, #37	; 0x25
 80020ae:	f7fe fb6f 	bl	8000790 <_test_assert>
 80020b2:	2800      	cmp	r0, #0
 80020b4:	f47f af2e 	bne.w	8001f14 <mbox1_execute+0x64>
 80020b8:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80020bc:	1acb      	subs	r3, r1, r3
 80020be:	4259      	negs	r1, r3
 80020c0:	4159      	adcs	r1, r3
 80020c2:	2026      	movs	r0, #38	; 0x26
 80020c4:	f7fe fb64 	bl	8000790 <_test_assert>
 80020c8:	2800      	cmp	r0, #0
 80020ca:	f47f af23 	bne.w	8001f14 <mbox1_execute+0x64>
 80020ce:	4606      	mov	r6, r0
 80020d0:	2405      	movs	r4, #5
 80020d2:	2720      	movs	r7, #32
 80020d4:	f387 8811 	msr	BASEPRI, r7
 80020d8:	a801      	add	r0, sp, #4
 80020da:	f7fe ffb9 	bl	8001050 <chMBFetchI.constprop.14>
 80020de:	f386 8811 	msr	BASEPRI, r6
 80020e2:	fab0 f180 	clz	r1, r0
 80020e6:	0949      	lsrs	r1, r1, #5
 80020e8:	2027      	movs	r0, #39	; 0x27
 80020ea:	f7fe fb51 	bl	8000790 <_test_assert>
 80020ee:	2800      	cmp	r0, #0
 80020f0:	f47f af10 	bne.w	8001f14 <mbox1_execute+0x64>
 80020f4:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80020f8:	f7fe fb62 	bl	80007c0 <test_emit_token>
 80020fc:	3c01      	subs	r4, #1
 80020fe:	d1e9      	bne.n	80020d4 <mbox1_execute+0x224>
 8002100:	4940      	ldr	r1, [pc, #256]	; (8002204 <mbox1_execute+0x354>)
 8002102:	2028      	movs	r0, #40	; 0x28
 8002104:	f7fe fb1c 	bl	8000740 <_test_assert_sequence>
 8002108:	2800      	cmp	r0, #0
 800210a:	f47f af03 	bne.w	8001f14 <mbox1_execute+0x64>
 800210e:	f387 8811 	msr	BASEPRI, r7
 8002112:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002114:	f1a1 0e05 	sub.w	lr, r1, #5
 8002118:	f1de 0100 	rsbs	r1, lr, #0
 800211c:	eb41 010e 	adc.w	r1, r1, lr
 8002120:	2029      	movs	r0, #41	; 0x29
 8002122:	f7fe fb35 	bl	8000790 <_test_assert>
 8002126:	2800      	cmp	r0, #0
 8002128:	f040 80c5 	bne.w	80022b6 <mbox1_execute+0x406>
 800212c:	f384 8811 	msr	BASEPRI, r4
 8002130:	f387 8811 	msr	BASEPRI, r7
 8002134:	69a9      	ldr	r1, [r5, #24]
 8002136:	fab1 f181 	clz	r1, r1
 800213a:	0949      	lsrs	r1, r1, #5
 800213c:	202a      	movs	r0, #42	; 0x2a
 800213e:	f7fe fb27 	bl	8000790 <_test_assert>
 8002142:	2800      	cmp	r0, #0
 8002144:	f040 80b7 	bne.w	80022b6 <mbox1_execute+0x406>
 8002148:	f384 8811 	msr	BASEPRI, r4
 800214c:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002150:	eba1 0c03 	sub.w	ip, r1, r3
 8002154:	f1dc 0100 	rsbs	r1, ip, #0
 8002158:	eb41 010c 	adc.w	r1, r1, ip
 800215c:	202b      	movs	r0, #43	; 0x2b
 800215e:	f7fe fb17 	bl	8000790 <_test_assert>
 8002162:	2800      	cmp	r0, #0
 8002164:	f47f aed6 	bne.w	8001f14 <mbox1_execute+0x64>
 8002168:	f387 8811 	msr	BASEPRI, r7
 800216c:	e9d5 3200 	ldrd	r3, r2, [r5]
 8002170:	1ad2      	subs	r2, r2, r3
 8002172:	1091      	asrs	r1, r2, #2
 8002174:	4824      	ldr	r0, [pc, #144]	; (8002208 <mbox1_execute+0x358>)
 8002176:	60ab      	str	r3, [r5, #8]
 8002178:	60eb      	str	r3, [r5, #12]
 800217a:	f7fe ff89 	bl	8001090 <chSemResetI>
 800217e:	4621      	mov	r1, r4
 8002180:	4822      	ldr	r0, [pc, #136]	; (800220c <mbox1_execute+0x35c>)
 8002182:	f7fe ff85 	bl	8001090 <chSemResetI>
 8002186:	f7ff f9cb 	bl	8001520 <chSchRescheduleS>
 800218a:	f384 8811 	msr	BASEPRI, r4
 800218e:	f387 8811 	msr	BASEPRI, r7
 8002192:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002194:	1f4e      	subs	r6, r1, #5
 8002196:	4271      	negs	r1, r6
 8002198:	4171      	adcs	r1, r6
 800219a:	202c      	movs	r0, #44	; 0x2c
 800219c:	f7fe faf8 	bl	8000790 <_test_assert>
 80021a0:	2800      	cmp	r0, #0
 80021a2:	f040 8088 	bne.w	80022b6 <mbox1_execute+0x406>
 80021a6:	f384 8811 	msr	BASEPRI, r4
 80021aa:	f387 8811 	msr	BASEPRI, r7
 80021ae:	69a9      	ldr	r1, [r5, #24]
 80021b0:	fab1 f181 	clz	r1, r1
 80021b4:	0949      	lsrs	r1, r1, #5
 80021b6:	202d      	movs	r0, #45	; 0x2d
 80021b8:	f7fe faea 	bl	8000790 <_test_assert>
 80021bc:	2800      	cmp	r0, #0
 80021be:	d17a      	bne.n	80022b6 <mbox1_execute+0x406>
 80021c0:	f384 8811 	msr	BASEPRI, r4
 80021c4:	f387 8811 	msr	BASEPRI, r7
 80021c8:	6829      	ldr	r1, [r5, #0]
 80021ca:	68ab      	ldr	r3, [r5, #8]
 80021cc:	1aca      	subs	r2, r1, r3
 80021ce:	4251      	negs	r1, r2
 80021d0:	4151      	adcs	r1, r2
 80021d2:	202e      	movs	r0, #46	; 0x2e
 80021d4:	f7fe fadc 	bl	8000790 <_test_assert>
 80021d8:	2800      	cmp	r0, #0
 80021da:	d16c      	bne.n	80022b6 <mbox1_execute+0x406>
 80021dc:	f384 8811 	msr	BASEPRI, r4
 80021e0:	f387 8811 	msr	BASEPRI, r7
 80021e4:	6829      	ldr	r1, [r5, #0]
 80021e6:	68eb      	ldr	r3, [r5, #12]
 80021e8:	1acb      	subs	r3, r1, r3
 80021ea:	4259      	negs	r1, r3
 80021ec:	f04f 002f 	mov.w	r0, #47	; 0x2f
 80021f0:	4159      	adcs	r1, r3
 80021f2:	f7fe facd 	bl	8000790 <_test_assert>
 80021f6:	2300      	movs	r3, #0
 80021f8:	f383 8811 	msr	BASEPRI, r3
 80021fc:	b003      	add	sp, #12
 80021fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002200:	20000854 	.word	0x20000854
 8002204:	08005fb0 	.word	0x08005fb0
 8002208:	20000870 	.word	0x20000870
 800220c:	20000864 	.word	0x20000864
 8002210:	2101      	movs	r1, #1
 8002212:	2058      	movs	r0, #88	; 0x58
 8002214:	f7ff fdcc 	bl	8001db0 <chMBPost.constprop.19>
 8002218:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 800221c:	fab1 f181 	clz	r1, r1
 8002220:	0949      	lsrs	r1, r1, #5
 8002222:	2004      	movs	r0, #4
 8002224:	f7fe fab4 	bl	8000790 <_test_assert>
 8002228:	4604      	mov	r4, r0
 800222a:	2800      	cmp	r0, #0
 800222c:	f47f ae72 	bne.w	8001f14 <mbox1_execute+0x64>
 8002230:	2620      	movs	r6, #32
 8002232:	f386 8811 	msr	BASEPRI, r6
 8002236:	2058      	movs	r0, #88	; 0x58
 8002238:	f7fe feca 	bl	8000fd0 <chMBPostI.constprop.18>
 800223c:	4601      	mov	r1, r0
 800223e:	f384 8811 	msr	BASEPRI, r4
 8002242:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 8002246:	fab1 f181 	clz	r1, r1
 800224a:	2005      	movs	r0, #5
 800224c:	0949      	lsrs	r1, r1, #5
 800224e:	f7fe fa9f 	bl	8000790 <_test_assert>
 8002252:	2800      	cmp	r0, #0
 8002254:	f47f ae5e 	bne.w	8001f14 <mbox1_execute+0x64>
 8002258:	2101      	movs	r1, #1
 800225a:	2058      	movs	r0, #88	; 0x58
 800225c:	f7ff fdd0 	bl	8001e00 <chMBPostAhead.constprop.17>
 8002260:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8002264:	fab1 f181 	clz	r1, r1
 8002268:	0949      	lsrs	r1, r1, #5
 800226a:	2006      	movs	r0, #6
 800226c:	f7fe fa90 	bl	8000790 <_test_assert>
 8002270:	4604      	mov	r4, r0
 8002272:	2800      	cmp	r0, #0
 8002274:	f47f ae4e 	bne.w	8001f14 <mbox1_execute+0x64>
 8002278:	f386 8811 	msr	BASEPRI, r6
 800227c:	2058      	movs	r0, #88	; 0x58
 800227e:	f7fe fec7 	bl	8001010 <chMBPostAheadI.constprop.16>
 8002282:	4601      	mov	r1, r0
 8002284:	f384 8811 	msr	BASEPRI, r4
 8002288:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 800228c:	fab1 f181 	clz	r1, r1
 8002290:	2007      	movs	r0, #7
 8002292:	0949      	lsrs	r1, r1, #5
 8002294:	f7fe fa7c 	bl	8000790 <_test_assert>
 8002298:	4604      	mov	r4, r0
 800229a:	2800      	cmp	r0, #0
 800229c:	f47f ae3a 	bne.w	8001f14 <mbox1_execute+0x64>
 80022a0:	f386 8811 	msr	BASEPRI, r6
 80022a4:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80022a6:	fab1 f181 	clz	r1, r1
 80022aa:	0949      	lsrs	r1, r1, #5
 80022ac:	2008      	movs	r0, #8
 80022ae:	f7fe fa6f 	bl	8000790 <_test_assert>
 80022b2:	4607      	mov	r7, r0
 80022b4:	b110      	cbz	r0, 80022bc <mbox1_execute+0x40c>
 80022b6:	f384 8811 	msr	BASEPRI, r4
 80022ba:	e62b      	b.n	8001f14 <mbox1_execute+0x64>
 80022bc:	f380 8811 	msr	BASEPRI, r0
 80022c0:	f386 8811 	msr	BASEPRI, r6
 80022c4:	69a9      	ldr	r1, [r5, #24]
 80022c6:	f1a1 0e05 	sub.w	lr, r1, #5
 80022ca:	f1de 0100 	rsbs	r1, lr, #0
 80022ce:	eb41 010e 	adc.w	r1, r1, lr
 80022d2:	2009      	movs	r0, #9
 80022d4:	f7fe fa5c 	bl	8000790 <_test_assert>
 80022d8:	b110      	cbz	r0, 80022e0 <mbox1_execute+0x430>
 80022da:	f387 8811 	msr	BASEPRI, r7
 80022de:	e619      	b.n	8001f14 <mbox1_execute+0x64>
 80022e0:	f380 8811 	msr	BASEPRI, r0
 80022e4:	f386 8811 	msr	BASEPRI, r6
 80022e8:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80022ec:	eba1 0c03 	sub.w	ip, r1, r3
 80022f0:	f1dc 0100 	rsbs	r1, ip, #0
 80022f4:	f04f 000a 	mov.w	r0, #10
 80022f8:	eb41 010c 	adc.w	r1, r1, ip
 80022fc:	f7fe fa48 	bl	8000790 <_test_assert>
 8002300:	2300      	movs	r3, #0
 8002302:	2800      	cmp	r0, #0
 8002304:	f47f af78 	bne.w	80021f8 <mbox1_execute+0x348>
 8002308:	f383 8811 	msr	BASEPRI, r3
 800230c:	2405      	movs	r4, #5
 800230e:	e005      	b.n	800231c <mbox1_execute+0x46c>
 8002310:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8002314:	f7fe fa54 	bl	80007c0 <test_emit_token>
 8002318:	3c01      	subs	r4, #1
 800231a:	d00d      	beq.n	8002338 <mbox1_execute+0x488>
 800231c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002320:	a801      	add	r0, sp, #4
 8002322:	f7ff fd9d 	bl	8001e60 <chMBFetch.constprop.15>
 8002326:	fab0 f180 	clz	r1, r0
 800232a:	0949      	lsrs	r1, r1, #5
 800232c:	200b      	movs	r0, #11
 800232e:	f7fe fa2f 	bl	8000790 <_test_assert>
 8002332:	2800      	cmp	r0, #0
 8002334:	d0ec      	beq.n	8002310 <mbox1_execute+0x460>
 8002336:	e5ed      	b.n	8001f14 <mbox1_execute+0x64>
 8002338:	4944      	ldr	r1, [pc, #272]	; (800244c <mbox1_execute+0x59c>)
 800233a:	200c      	movs	r0, #12
 800233c:	f7fe fa00 	bl	8000740 <_test_assert_sequence>
 8002340:	2800      	cmp	r0, #0
 8002342:	f47f ade7 	bne.w	8001f14 <mbox1_execute+0x64>
 8002346:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800234a:	2047      	movs	r0, #71	; 0x47
 800234c:	f7ff fd30 	bl	8001db0 <chMBPost.constprop.19>
 8002350:	fab0 f180 	clz	r1, r0
 8002354:	0949      	lsrs	r1, r1, #5
 8002356:	200d      	movs	r0, #13
 8002358:	f7fe fa1a 	bl	8000790 <_test_assert>
 800235c:	2800      	cmp	r0, #0
 800235e:	f47f add9 	bne.w	8001f14 <mbox1_execute+0x64>
 8002362:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002366:	a801      	add	r0, sp, #4
 8002368:	f7ff fd7a 	bl	8001e60 <chMBFetch.constprop.15>
 800236c:	fab0 f180 	clz	r1, r0
 8002370:	0949      	lsrs	r1, r1, #5
 8002372:	200e      	movs	r0, #14
 8002374:	f7fe fa0c 	bl	8000790 <_test_assert>
 8002378:	2800      	cmp	r0, #0
 800237a:	f47f adcb 	bne.w	8001f14 <mbox1_execute+0x64>
 800237e:	6829      	ldr	r1, [r5, #0]
 8002380:	68ab      	ldr	r3, [r5, #8]
 8002382:	1acf      	subs	r7, r1, r3
 8002384:	4279      	negs	r1, r7
 8002386:	4179      	adcs	r1, r7
 8002388:	200f      	movs	r0, #15
 800238a:	f7fe fa01 	bl	8000790 <_test_assert>
 800238e:	2800      	cmp	r0, #0
 8002390:	f47f adc0 	bne.w	8001f14 <mbox1_execute+0x64>
 8002394:	6829      	ldr	r1, [r5, #0]
 8002396:	68eb      	ldr	r3, [r5, #12]
 8002398:	1ace      	subs	r6, r1, r3
 800239a:	4271      	negs	r1, r6
 800239c:	4171      	adcs	r1, r6
 800239e:	2010      	movs	r0, #16
 80023a0:	f7fe f9f6 	bl	8000790 <_test_assert>
 80023a4:	2800      	cmp	r0, #0
 80023a6:	f47f adb5 	bne.w	8001f14 <mbox1_execute+0x64>
 80023aa:	2101      	movs	r1, #1
 80023ac:	a801      	add	r0, sp, #4
 80023ae:	f7ff fd57 	bl	8001e60 <chMBFetch.constprop.15>
 80023b2:	3001      	adds	r0, #1
 80023b4:	4241      	negs	r1, r0
 80023b6:	4141      	adcs	r1, r0
 80023b8:	2011      	movs	r0, #17
 80023ba:	f7fe f9e9 	bl	8000790 <_test_assert>
 80023be:	2800      	cmp	r0, #0
 80023c0:	f47f ada8 	bne.w	8001f14 <mbox1_execute+0x64>
 80023c4:	2620      	movs	r6, #32
 80023c6:	f386 8811 	msr	BASEPRI, r6
 80023ca:	a801      	add	r0, sp, #4
 80023cc:	f7fe fe40 	bl	8001050 <chMBFetchI.constprop.14>
 80023d0:	4601      	mov	r1, r0
 80023d2:	f384 8811 	msr	BASEPRI, r4
 80023d6:	1c4a      	adds	r2, r1, #1
 80023d8:	4251      	negs	r1, r2
 80023da:	4151      	adcs	r1, r2
 80023dc:	2012      	movs	r0, #18
 80023de:	f7fe f9d7 	bl	8000790 <_test_assert>
 80023e2:	2800      	cmp	r0, #0
 80023e4:	f47f ad96 	bne.w	8001f14 <mbox1_execute+0x64>
 80023e8:	f386 8811 	msr	BASEPRI, r6
 80023ec:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80023ee:	1f4b      	subs	r3, r1, #5
 80023f0:	4259      	negs	r1, r3
 80023f2:	4159      	adcs	r1, r3
 80023f4:	2013      	movs	r0, #19
 80023f6:	f7fe f9cb 	bl	8000790 <_test_assert>
 80023fa:	2800      	cmp	r0, #0
 80023fc:	f47f aefb 	bne.w	80021f6 <mbox1_execute+0x346>
 8002400:	2700      	movs	r7, #0
 8002402:	f387 8811 	msr	BASEPRI, r7
 8002406:	2420      	movs	r4, #32
 8002408:	f384 8811 	msr	BASEPRI, r4
 800240c:	69a9      	ldr	r1, [r5, #24]
 800240e:	fab1 f181 	clz	r1, r1
 8002412:	0949      	lsrs	r1, r1, #5
 8002414:	2014      	movs	r0, #20
 8002416:	f7fe f9bb 	bl	8000790 <_test_assert>
 800241a:	4606      	mov	r6, r0
 800241c:	2800      	cmp	r0, #0
 800241e:	f47f af5c 	bne.w	80022da <mbox1_execute+0x42a>
 8002422:	f380 8811 	msr	BASEPRI, r0
 8002426:	f384 8811 	msr	BASEPRI, r4
 800242a:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800242e:	eba1 0e03 	sub.w	lr, r1, r3
 8002432:	f1de 0100 	rsbs	r1, lr, #0
 8002436:	eb41 010e 	adc.w	r1, r1, lr
 800243a:	2015      	movs	r0, #21
 800243c:	f7fe f9a8 	bl	8000790 <_test_assert>
 8002440:	2800      	cmp	r0, #0
 8002442:	f43f ad69 	beq.w	8001f18 <mbox1_execute+0x68>
 8002446:	f386 8811 	msr	BASEPRI, r6
 800244a:	e563      	b.n	8001f14 <mbox1_execute+0x64>
 800244c:	08005fb0 	.word	0x08005fb0

08002450 <chThdEnqueueTimeoutS>:
 8002450:	b161      	cbz	r1, 800246c <chThdEnqueueTimeoutS+0x1c>
 8002452:	4b08      	ldr	r3, [pc, #32]	; (8002474 <chThdEnqueueTimeoutS+0x24>)
 8002454:	699b      	ldr	r3, [r3, #24]
 8002456:	b410      	push	{r4}
 8002458:	6018      	str	r0, [r3, #0]
 800245a:	6844      	ldr	r4, [r0, #4]
 800245c:	605c      	str	r4, [r3, #4]
 800245e:	4602      	mov	r2, r0
 8002460:	6023      	str	r3, [r4, #0]
 8002462:	2004      	movs	r0, #4
 8002464:	6053      	str	r3, [r2, #4]
 8002466:	bc10      	pop	{r4}
 8002468:	f7ff bb8a 	b.w	8001b80 <chSchGoSleepTimeoutS>
 800246c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002470:	4770      	bx	lr
 8002472:	bf00      	nop
 8002474:	20000930 	.word	0x20000930
	...

08002480 <chOQWriteTimeout>:
 8002480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002484:	b083      	sub	sp, #12
 8002486:	4604      	mov	r4, r0
 8002488:	460d      	mov	r5, r1
 800248a:	4616      	mov	r6, r2
 800248c:	9301      	str	r3, [sp, #4]
 800248e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8002492:	f04f 0920 	mov.w	r9, #32
 8002496:	f389 8811 	msr	BASEPRI, r9
 800249a:	2700      	movs	r7, #0
 800249c:	46ba      	mov	sl, r7
 800249e:	68a3      	ldr	r3, [r4, #8]
 80024a0:	f105 0b01 	add.w	fp, r5, #1
 80024a4:	1e59      	subs	r1, r3, #1
 80024a6:	4620      	mov	r0, r4
 80024a8:	b1fb      	cbz	r3, 80024ea <chOQWriteTimeout+0x6a>
 80024aa:	6963      	ldr	r3, [r4, #20]
 80024ac:	60a1      	str	r1, [r4, #8]
 80024ae:	1c59      	adds	r1, r3, #1
 80024b0:	6161      	str	r1, [r4, #20]
 80024b2:	7829      	ldrb	r1, [r5, #0]
 80024b4:	7019      	strb	r1, [r3, #0]
 80024b6:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 80024ba:	4299      	cmp	r1, r3
 80024bc:	bf24      	itt	cs
 80024be:	68e3      	ldrcs	r3, [r4, #12]
 80024c0:	6163      	strcs	r3, [r4, #20]
 80024c2:	f1b8 0f00 	cmp.w	r8, #0
 80024c6:	d000      	beq.n	80024ca <chOQWriteTimeout+0x4a>
 80024c8:	47c0      	blx	r8
 80024ca:	f38a 8811 	msr	BASEPRI, sl
 80024ce:	3e01      	subs	r6, #1
 80024d0:	f107 0701 	add.w	r7, r7, #1
 80024d4:	d013      	beq.n	80024fe <chOQWriteTimeout+0x7e>
 80024d6:	f389 8811 	msr	BASEPRI, r9
 80024da:	68a3      	ldr	r3, [r4, #8]
 80024dc:	465d      	mov	r5, fp
 80024de:	1e59      	subs	r1, r3, #1
 80024e0:	f105 0b01 	add.w	fp, r5, #1
 80024e4:	4620      	mov	r0, r4
 80024e6:	2b00      	cmp	r3, #0
 80024e8:	d1df      	bne.n	80024aa <chOQWriteTimeout+0x2a>
 80024ea:	9901      	ldr	r1, [sp, #4]
 80024ec:	9300      	str	r3, [sp, #0]
 80024ee:	4620      	mov	r0, r4
 80024f0:	f7ff ffae 	bl	8002450 <chThdEnqueueTimeoutS>
 80024f4:	9b00      	ldr	r3, [sp, #0]
 80024f6:	2800      	cmp	r0, #0
 80024f8:	d0d1      	beq.n	800249e <chOQWriteTimeout+0x1e>
 80024fa:	f383 8811 	msr	BASEPRI, r3
 80024fe:	4638      	mov	r0, r7
 8002500:	b003      	add	sp, #12
 8002502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002506:	bf00      	nop
	...

08002510 <writet>:
 8002510:	3030      	adds	r0, #48	; 0x30
 8002512:	f7ff bfb5 	b.w	8002480 <chOQWriteTimeout>
 8002516:	bf00      	nop
	...

08002520 <write>:
 8002520:	3030      	adds	r0, #48	; 0x30
 8002522:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002526:	f7ff bfab 	b.w	8002480 <chOQWriteTimeout>
 800252a:	bf00      	nop
 800252c:	0000      	movs	r0, r0
	...

08002530 <chOQPutTimeout>:
 8002530:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002532:	4604      	mov	r4, r0
 8002534:	460f      	mov	r7, r1
 8002536:	4616      	mov	r6, r2
 8002538:	2320      	movs	r3, #32
 800253a:	f383 8811 	msr	BASEPRI, r3
 800253e:	e003      	b.n	8002548 <chOQPutTimeout+0x18>
 8002540:	f7ff ff86 	bl	8002450 <chThdEnqueueTimeoutS>
 8002544:	2800      	cmp	r0, #0
 8002546:	db17      	blt.n	8002578 <chOQPutTimeout+0x48>
 8002548:	68a5      	ldr	r5, [r4, #8]
 800254a:	4631      	mov	r1, r6
 800254c:	4620      	mov	r0, r4
 800254e:	2d00      	cmp	r5, #0
 8002550:	d0f6      	beq.n	8002540 <chOQPutTimeout+0x10>
 8002552:	6963      	ldr	r3, [r4, #20]
 8002554:	3d01      	subs	r5, #1
 8002556:	1c5a      	adds	r2, r3, #1
 8002558:	6162      	str	r2, [r4, #20]
 800255a:	60a5      	str	r5, [r4, #8]
 800255c:	701f      	strb	r7, [r3, #0]
 800255e:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8002562:	429a      	cmp	r2, r3
 8002564:	bf24      	itt	cs
 8002566:	68e3      	ldrcs	r3, [r4, #12]
 8002568:	6163      	strcs	r3, [r4, #20]
 800256a:	69e3      	ldr	r3, [r4, #28]
 800256c:	b103      	cbz	r3, 8002570 <chOQPutTimeout+0x40>
 800256e:	4798      	blx	r3
 8002570:	2000      	movs	r0, #0
 8002572:	f380 8811 	msr	BASEPRI, r0
 8002576:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002578:	f385 8811 	msr	BASEPRI, r5
 800257c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800257e:	bf00      	nop

08002580 <thread2.lto_priv.76>:
 8002580:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 8002584:	2100      	movs	r1, #0
 8002586:	4801      	ldr	r0, [pc, #4]	; (800258c <thread2.lto_priv.76+0xc>)
 8002588:	f7ff bfd2 	b.w	8002530 <chOQPutTimeout>
 800258c:	20000888 	.word	0x20000888

08002590 <putt>:
 8002590:	3030      	adds	r0, #48	; 0x30
 8002592:	f7ff bfcd 	b.w	8002530 <chOQPutTimeout>
 8002596:	bf00      	nop
	...

080025a0 <put>:
 80025a0:	3030      	adds	r0, #48	; 0x30
 80025a2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80025a6:	f7ff bfc3 	b.w	8002530 <chOQPutTimeout>
 80025aa:	bf00      	nop
 80025ac:	0000      	movs	r0, r0
	...

080025b0 <chIQReadTimeout>:
 80025b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025b4:	4604      	mov	r4, r0
 80025b6:	b083      	sub	sp, #12
 80025b8:	4689      	mov	r9, r1
 80025ba:	4693      	mov	fp, r2
 80025bc:	461d      	mov	r5, r3
 80025be:	f8d0 801c 	ldr.w	r8, [r0, #28]
 80025c2:	2720      	movs	r7, #32
 80025c4:	f387 8811 	msr	BASEPRI, r7
 80025c8:	2600      	movs	r6, #0
 80025ca:	9701      	str	r7, [sp, #4]
 80025cc:	46b2      	mov	sl, r6
 80025ce:	f1b8 0f00 	cmp.w	r8, #0
 80025d2:	d005      	beq.n	80025e0 <chIQReadTimeout+0x30>
 80025d4:	4620      	mov	r0, r4
 80025d6:	47c0      	blx	r8
 80025d8:	e002      	b.n	80025e0 <chIQReadTimeout+0x30>
 80025da:	f7ff ff39 	bl	8002450 <chThdEnqueueTimeoutS>
 80025de:	b9d8      	cbnz	r0, 8002618 <chIQReadTimeout+0x68>
 80025e0:	68a7      	ldr	r7, [r4, #8]
 80025e2:	4629      	mov	r1, r5
 80025e4:	4620      	mov	r0, r4
 80025e6:	2f00      	cmp	r7, #0
 80025e8:	d0f7      	beq.n	80025da <chIQReadTimeout+0x2a>
 80025ea:	69a2      	ldr	r2, [r4, #24]
 80025ec:	3f01      	subs	r7, #1
 80025ee:	1c51      	adds	r1, r2, #1
 80025f0:	61a1      	str	r1, [r4, #24]
 80025f2:	60a7      	str	r7, [r4, #8]
 80025f4:	7813      	ldrb	r3, [r2, #0]
 80025f6:	f809 3b01 	strb.w	r3, [r9], #1
 80025fa:	6923      	ldr	r3, [r4, #16]
 80025fc:	69a2      	ldr	r2, [r4, #24]
 80025fe:	429a      	cmp	r2, r3
 8002600:	bf24      	itt	cs
 8002602:	68e3      	ldrcs	r3, [r4, #12]
 8002604:	61a3      	strcs	r3, [r4, #24]
 8002606:	f38a 8811 	msr	BASEPRI, sl
 800260a:	3601      	adds	r6, #1
 800260c:	45b3      	cmp	fp, r6
 800260e:	d005      	beq.n	800261c <chIQReadTimeout+0x6c>
 8002610:	9b01      	ldr	r3, [sp, #4]
 8002612:	f383 8811 	msr	BASEPRI, r3
 8002616:	e7da      	b.n	80025ce <chIQReadTimeout+0x1e>
 8002618:	f387 8811 	msr	BASEPRI, r7
 800261c:	4630      	mov	r0, r6
 800261e:	b003      	add	sp, #12
 8002620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08002630 <readt>:
 8002630:	300c      	adds	r0, #12
 8002632:	f7ff bfbd 	b.w	80025b0 <chIQReadTimeout>
 8002636:	bf00      	nop
	...

08002640 <read>:
 8002640:	300c      	adds	r0, #12
 8002642:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002646:	f7ff bfb3 	b.w	80025b0 <chIQReadTimeout>
 800264a:	bf00      	nop
 800264c:	0000      	movs	r0, r0
	...

08002650 <chIQGetTimeout>:
 8002650:	b570      	push	{r4, r5, r6, lr}
 8002652:	2320      	movs	r3, #32
 8002654:	460e      	mov	r6, r1
 8002656:	4604      	mov	r4, r0
 8002658:	f383 8811 	msr	BASEPRI, r3
 800265c:	69c3      	ldr	r3, [r0, #28]
 800265e:	b12b      	cbz	r3, 800266c <chIQGetTimeout+0x1c>
 8002660:	4798      	blx	r3
 8002662:	e003      	b.n	800266c <chIQGetTimeout+0x1c>
 8002664:	f7ff fef4 	bl	8002450 <chThdEnqueueTimeoutS>
 8002668:	2800      	cmp	r0, #0
 800266a:	db15      	blt.n	8002698 <chIQGetTimeout+0x48>
 800266c:	68a5      	ldr	r5, [r4, #8]
 800266e:	4631      	mov	r1, r6
 8002670:	4620      	mov	r0, r4
 8002672:	2d00      	cmp	r5, #0
 8002674:	d0f6      	beq.n	8002664 <chIQGetTimeout+0x14>
 8002676:	69a2      	ldr	r2, [r4, #24]
 8002678:	6921      	ldr	r1, [r4, #16]
 800267a:	1c53      	adds	r3, r2, #1
 800267c:	428b      	cmp	r3, r1
 800267e:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8002682:	61a3      	str	r3, [r4, #24]
 8002684:	60a5      	str	r5, [r4, #8]
 8002686:	bf28      	it	cs
 8002688:	68e3      	ldrcs	r3, [r4, #12]
 800268a:	7810      	ldrb	r0, [r2, #0]
 800268c:	bf28      	it	cs
 800268e:	61a3      	strcs	r3, [r4, #24]
 8002690:	2300      	movs	r3, #0
 8002692:	f383 8811 	msr	BASEPRI, r3
 8002696:	bd70      	pop	{r4, r5, r6, pc}
 8002698:	f385 8811 	msr	BASEPRI, r5
 800269c:	bd70      	pop	{r4, r5, r6, pc}
 800269e:	bf00      	nop

080026a0 <thread1.lto_priv.70>:
 80026a0:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80026a4:	4801      	ldr	r0, [pc, #4]	; (80026ac <thread1.lto_priv.70+0xc>)
 80026a6:	f7ff bfd3 	b.w	8002650 <chIQGetTimeout>
 80026aa:	bf00      	nop
 80026ac:	20000810 	.word	0x20000810

080026b0 <gett>:
 80026b0:	300c      	adds	r0, #12
 80026b2:	f7ff bfcd 	b.w	8002650 <chIQGetTimeout>
 80026b6:	bf00      	nop
	...

080026c0 <get>:
 80026c0:	300c      	adds	r0, #12
 80026c2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80026c6:	f7ff bfc3 	b.w	8002650 <chIQGetTimeout>
 80026ca:	bf00      	nop
 80026cc:	0000      	movs	r0, r0
	...

080026d0 <chThdSleep>:
 80026d0:	b508      	push	{r3, lr}
 80026d2:	4601      	mov	r1, r0
 80026d4:	2320      	movs	r3, #32
 80026d6:	f383 8811 	msr	BASEPRI, r3
 80026da:	2008      	movs	r0, #8
 80026dc:	f7ff fa50 	bl	8001b80 <chSchGoSleepTimeoutS>
 80026e0:	2300      	movs	r3, #0
 80026e2:	f383 8811 	msr	BASEPRI, r3
 80026e6:	bd08      	pop	{r3, pc}
	...

080026f0 <Thread1>:
 80026f0:	b508      	push	{r3, lr}
 80026f2:	4b09      	ldr	r3, [pc, #36]	; (8002718 <Thread1+0x28>)
 80026f4:	4a09      	ldr	r2, [pc, #36]	; (800271c <Thread1+0x2c>)
 80026f6:	699b      	ldr	r3, [r3, #24]
 80026f8:	4c09      	ldr	r4, [pc, #36]	; (8002720 <Thread1+0x30>)
 80026fa:	619a      	str	r2, [r3, #24]
 80026fc:	2520      	movs	r5, #32
 80026fe:	462e      	mov	r6, r5
 8002700:	8366      	strh	r6, [r4, #26]
 8002702:	f241 3088 	movw	r0, #5000	; 0x1388
 8002706:	f7ff ffe3 	bl	80026d0 <chThdSleep>
 800270a:	8325      	strh	r5, [r4, #24]
 800270c:	f241 3088 	movw	r0, #5000	; 0x1388
 8002710:	f7ff ffde 	bl	80026d0 <chThdSleep>
 8002714:	e7f4      	b.n	8002700 <Thread1+0x10>
 8002716:	bf00      	nop
 8002718:	20000930 	.word	0x20000930
 800271c:	08005ba0 	.word	0x08005ba0
 8002720:	40020000 	.word	0x40020000
	...

08002730 <sys1_execute>:
 8002730:	b510      	push	{r4, lr}
 8002732:	b086      	sub	sp, #24
 8002734:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8002738:	b91b      	cbnz	r3, 8002742 <sys1_execute+0x12>
 800273a:	f7fe fd59 	bl	80011f0 <chSysGetStatusAndLockX.part.2>
 800273e:	f7fe fff7 	bl	8001730 <chSysRestoreStatusX.part.3>
 8002742:	2320      	movs	r3, #32
 8002744:	f383 8811 	msr	BASEPRI, r3
 8002748:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800274c:	b91b      	cbnz	r3, 8002756 <sys1_execute+0x26>
 800274e:	f7fe fd4f 	bl	80011f0 <chSysGetStatusAndLockX.part.2>
 8002752:	f7fe ffed 	bl	8001730 <chSysRestoreStatusX.part.3>
 8002756:	2300      	movs	r3, #0
 8002758:	f383 8811 	msr	BASEPRI, r3
 800275c:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8002760:	b913      	cbnz	r3, 8002768 <sys1_execute+0x38>
 8002762:	2320      	movs	r3, #32
 8002764:	f383 8811 	msr	BASEPRI, r3
 8002768:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800276c:	b913      	cbnz	r3, 8002774 <sys1_execute+0x44>
 800276e:	2320      	movs	r3, #32
 8002770:	f383 8811 	msr	BASEPRI, r3
 8002774:	2300      	movs	r3, #0
 8002776:	f383 8811 	msr	BASEPRI, r3
 800277a:	2220      	movs	r2, #32
 800277c:	f382 8811 	msr	BASEPRI, r2
 8002780:	f3ef 8212 	mrs	r2, BASEPRI_MAX
 8002784:	b10a      	cbz	r2, 800278a <sys1_execute+0x5a>
 8002786:	f383 8811 	msr	BASEPRI, r3
 800278a:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800278e:	b113      	cbz	r3, 8002796 <sys1_execute+0x66>
 8002790:	2300      	movs	r3, #0
 8002792:	f383 8811 	msr	BASEPRI, r3
 8002796:	2300      	movs	r3, #0
 8002798:	9304      	str	r3, [sp, #16]
 800279a:	2320      	movs	r3, #32
 800279c:	f383 8811 	msr	BASEPRI, r3
 80027a0:	9b04      	ldr	r3, [sp, #16]
 80027a2:	ac01      	add	r4, sp, #4
 80027a4:	b113      	cbz	r3, 80027ac <sys1_execute+0x7c>
 80027a6:	4620      	mov	r0, r4
 80027a8:	f7fe fc8a 	bl	80010c0 <chVTDoResetI>
 80027ac:	4620      	mov	r0, r4
 80027ae:	2300      	movs	r3, #0
 80027b0:	4a0b      	ldr	r2, [pc, #44]	; (80027e0 <sys1_execute+0xb0>)
 80027b2:	2101      	movs	r1, #1
 80027b4:	f7fe fcbc 	bl	8001130 <chVTDoSetI>
 80027b8:	2400      	movs	r4, #0
 80027ba:	f384 8811 	msr	BASEPRI, r4
 80027be:	200a      	movs	r0, #10
 80027c0:	f7ff ff86 	bl	80026d0 <chThdSleep>
 80027c4:	2320      	movs	r3, #32
 80027c6:	f383 8811 	msr	BASEPRI, r3
 80027ca:	9904      	ldr	r1, [sp, #16]
 80027cc:	f384 8811 	msr	BASEPRI, r4
 80027d0:	fab1 f181 	clz	r1, r1
 80027d4:	0949      	lsrs	r1, r1, #5
 80027d6:	2001      	movs	r0, #1
 80027d8:	f7fd ffda 	bl	8000790 <_test_assert>
 80027dc:	b006      	add	sp, #24
 80027de:	bd10      	pop	{r4, pc}
 80027e0:	08001751 	.word	0x08001751
	...

080027f0 <thread1.lto_priv.69>:
 80027f0:	b510      	push	{r4, lr}
 80027f2:	4604      	mov	r4, r0
 80027f4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80027f8:	f7ff ff6a 	bl	80026d0 <chThdSleep>
 80027fc:	2320      	movs	r3, #32
 80027fe:	f383 8811 	msr	BASEPRI, r3
 8002802:	2101      	movs	r1, #1
 8002804:	4620      	mov	r0, r4
 8002806:	f7fe fad3 	bl	8000db0 <chEvtSignalI>
 800280a:	f7fe fe89 	bl	8001520 <chSchRescheduleS>
 800280e:	2300      	movs	r3, #0
 8002810:	f383 8811 	msr	BASEPRI, r3
 8002814:	bd10      	pop	{r4, pc}
 8002816:	bf00      	nop
	...

08002820 <thread2.lto_priv.75>:
 8002820:	b538      	push	{r3, r4, r5, lr}
 8002822:	2520      	movs	r5, #32
 8002824:	f385 8811 	msr	BASEPRI, r5
 8002828:	2100      	movs	r1, #0
 800282a:	480b      	ldr	r0, [pc, #44]	; (8002858 <thread2.lto_priv.75+0x38>)
 800282c:	f7fe fad8 	bl	8000de0 <chEvtBroadcastFlagsI>
 8002830:	2400      	movs	r4, #0
 8002832:	f7fe fe75 	bl	8001520 <chSchRescheduleS>
 8002836:	f384 8811 	msr	BASEPRI, r4
 800283a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800283e:	f7ff ff47 	bl	80026d0 <chThdSleep>
 8002842:	f385 8811 	msr	BASEPRI, r5
 8002846:	4805      	ldr	r0, [pc, #20]	; (800285c <thread2.lto_priv.75+0x3c>)
 8002848:	4621      	mov	r1, r4
 800284a:	f7fe fac9 	bl	8000de0 <chEvtBroadcastFlagsI>
 800284e:	f7fe fe67 	bl	8001520 <chSchRescheduleS>
 8002852:	f384 8811 	msr	BASEPRI, r4
 8002856:	bd38      	pop	{r3, r4, r5, pc}
 8002858:	20000808 	.word	0x20000808
 800285c:	2000080c 	.word	0x2000080c

08002860 <thread2.lto_priv.74>:
 8002860:	b508      	push	{r3, lr}
 8002862:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002866:	f7ff ff33 	bl	80026d0 <chThdSleep>
 800286a:	2320      	movs	r3, #32
 800286c:	f383 8811 	msr	BASEPRI, r3
 8002870:	4804      	ldr	r0, [pc, #16]	; (8002884 <thread2.lto_priv.74+0x24>)
 8002872:	f7fe fb9d 	bl	8000fb0 <chSemSignalI>
 8002876:	f7fe fe53 	bl	8001520 <chSchRescheduleS>
 800287a:	2300      	movs	r3, #0
 800287c:	f383 8811 	msr	BASEPRI, r3
 8002880:	bd08      	pop	{r3, pc}
 8002882:	bf00      	nop
 8002884:	200008ac 	.word	0x200008ac
	...

08002890 <test_wait_tick>:
 8002890:	b508      	push	{r3, lr}
 8002892:	2001      	movs	r0, #1
 8002894:	f7ff ff1c 	bl	80026d0 <chThdSleep>
 8002898:	2320      	movs	r3, #32
 800289a:	f383 8811 	msr	BASEPRI, r3
 800289e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80028a2:	2300      	movs	r3, #0
 80028a4:	6a50      	ldr	r0, [r2, #36]	; 0x24
 80028a6:	f383 8811 	msr	BASEPRI, r3
 80028aa:	bd08      	pop	{r3, pc}
 80028ac:	0000      	movs	r0, r0
	...

080028b0 <bmk10_execute>:
 80028b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80028b4:	f7ff ffec 	bl	8002890 <test_wait_tick>
 80028b8:	f7fe fc7a 	bl	80011b0 <test_start_timer.constprop.1>
 80028bc:	2400      	movs	r4, #0
 80028be:	f8df a070 	ldr.w	sl, [pc, #112]	; 8002930 <bmk10_execute+0x80>
 80028c2:	4f16      	ldr	r7, [pc, #88]	; (800291c <bmk10_execute+0x6c>)
 80028c4:	4e16      	ldr	r6, [pc, #88]	; (8002920 <bmk10_execute+0x70>)
 80028c6:	4d17      	ldr	r5, [pc, #92]	; (8002924 <bmk10_execute+0x74>)
 80028c8:	46a1      	mov	r9, r4
 80028ca:	f04f 0820 	mov.w	r8, #32
 80028ce:	f388 8811 	msr	BASEPRI, r8
 80028d2:	2300      	movs	r3, #0
 80028d4:	463a      	mov	r2, r7
 80028d6:	4630      	mov	r0, r6
 80028d8:	2101      	movs	r1, #1
 80028da:	f7fe fc29 	bl	8001130 <chVTDoSetI>
 80028de:	463a      	mov	r2, r7
 80028e0:	2300      	movs	r3, #0
 80028e2:	f242 7110 	movw	r1, #10000	; 0x2710
 80028e6:	4628      	mov	r0, r5
 80028e8:	f7fe fc22 	bl	8001130 <chVTDoSetI>
 80028ec:	4630      	mov	r0, r6
 80028ee:	f7fe fbe7 	bl	80010c0 <chVTDoResetI>
 80028f2:	4628      	mov	r0, r5
 80028f4:	f7fe fbe4 	bl	80010c0 <chVTDoResetI>
 80028f8:	f389 8811 	msr	BASEPRI, r9
 80028fc:	f89a 3000 	ldrb.w	r3, [sl]
 8002900:	3401      	adds	r4, #1
 8002902:	2b00      	cmp	r3, #0
 8002904:	d0e3      	beq.n	80028ce <bmk10_execute+0x1e>
 8002906:	4808      	ldr	r0, [pc, #32]	; (8002928 <bmk10_execute+0x78>)
 8002908:	f7fd ffb2 	bl	8000870 <test_print>
 800290c:	0060      	lsls	r0, r4, #1
 800290e:	f7fd feb7 	bl	8000680 <test_printn>
 8002912:	4806      	ldr	r0, [pc, #24]	; (800292c <bmk10_execute+0x7c>)
 8002914:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002918:	f7fd bf8a 	b.w	8000830 <test_println>
 800291c:	08000381 	.word	0x08000381
 8002920:	20001208 	.word	0x20001208
 8002924:	2000121c 	.word	0x2000121c
 8002928:	08005bd0 	.word	0x08005bd0
 800292c:	08005be0 	.word	0x08005be0
 8002930:	200011c8 	.word	0x200011c8
	...

08002940 <bmk9_execute>:
 8002940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002942:	4b26      	ldr	r3, [pc, #152]	; (80029dc <bmk9_execute+0x9c>)
 8002944:	4c26      	ldr	r4, [pc, #152]	; (80029e0 <bmk9_execute+0xa0>)
 8002946:	4f27      	ldr	r7, [pc, #156]	; (80029e4 <bmk9_execute+0xa4>)
 8002948:	60e3      	str	r3, [r4, #12]
 800294a:	f103 0210 	add.w	r2, r3, #16
 800294e:	2500      	movs	r5, #0
 8002950:	6122      	str	r2, [r4, #16]
 8002952:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8002956:	6024      	str	r4, [r4, #0]
 8002958:	6064      	str	r4, [r4, #4]
 800295a:	60a5      	str	r5, [r4, #8]
 800295c:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8002960:	f7ff ff96 	bl	8002890 <test_wait_tick>
 8002964:	f7fe fc24 	bl	80011b0 <test_start_timer.constprop.1>
 8002968:	462e      	mov	r6, r5
 800296a:	2320      	movs	r3, #32
 800296c:	f383 8811 	msr	BASEPRI, r3
 8002970:	2100      	movs	r1, #0
 8002972:	4620      	mov	r0, r4
 8002974:	f7fe f9cc 	bl	8000d10 <chIQPutI>
 8002978:	4620      	mov	r0, r4
 800297a:	2101      	movs	r1, #1
 800297c:	f7fe f9c8 	bl	8000d10 <chIQPutI>
 8002980:	4620      	mov	r0, r4
 8002982:	2102      	movs	r1, #2
 8002984:	f7fe f9c4 	bl	8000d10 <chIQPutI>
 8002988:	4620      	mov	r0, r4
 800298a:	2103      	movs	r1, #3
 800298c:	f7fe f9c0 	bl	8000d10 <chIQPutI>
 8002990:	f386 8811 	msr	BASEPRI, r6
 8002994:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002998:	4620      	mov	r0, r4
 800299a:	f7ff fe59 	bl	8002650 <chIQGetTimeout>
 800299e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80029a2:	4620      	mov	r0, r4
 80029a4:	f7ff fe54 	bl	8002650 <chIQGetTimeout>
 80029a8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80029ac:	4620      	mov	r0, r4
 80029ae:	f7ff fe4f 	bl	8002650 <chIQGetTimeout>
 80029b2:	4620      	mov	r0, r4
 80029b4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80029b8:	f7ff fe4a 	bl	8002650 <chIQGetTimeout>
 80029bc:	783b      	ldrb	r3, [r7, #0]
 80029be:	3501      	adds	r5, #1
 80029c0:	2b00      	cmp	r3, #0
 80029c2:	d0d2      	beq.n	800296a <bmk9_execute+0x2a>
 80029c4:	4808      	ldr	r0, [pc, #32]	; (80029e8 <bmk9_execute+0xa8>)
 80029c6:	f7fd ff53 	bl	8000870 <test_print>
 80029ca:	00a8      	lsls	r0, r5, #2
 80029cc:	f7fd fe58 	bl	8000680 <test_printn>
 80029d0:	4806      	ldr	r0, [pc, #24]	; (80029ec <bmk9_execute+0xac>)
 80029d2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80029d6:	f7fd bf2b 	b.w	8000830 <test_println>
 80029da:	bf00      	nop
 80029dc:	20000ad0 	.word	0x20000ad0
 80029e0:	20000ae0 	.word	0x20000ae0
 80029e4:	200011c8 	.word	0x200011c8
 80029e8:	08005bd0 	.word	0x08005bd0
 80029ec:	08005d10 	.word	0x08005d10

080029f0 <bmk6_execute>:
 80029f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80029f4:	4b14      	ldr	r3, [pc, #80]	; (8002a48 <bmk6_execute+0x58>)
 80029f6:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8002a58 <bmk6_execute+0x68>
 80029fa:	699b      	ldr	r3, [r3, #24]
 80029fc:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8002a5c <bmk6_execute+0x6c>
 8002a00:	689d      	ldr	r5, [r3, #8]
 8002a02:	4f12      	ldr	r7, [pc, #72]	; (8002a4c <bmk6_execute+0x5c>)
 8002a04:	b083      	sub	sp, #12
 8002a06:	f7ff ff43 	bl	8002890 <test_wait_tick>
 8002a0a:	f7fe fbd1 	bl	80011b0 <test_start_timer.constprop.1>
 8002a0e:	2400      	movs	r4, #0
 8002a10:	3501      	adds	r5, #1
 8002a12:	4626      	mov	r6, r4
 8002a14:	4643      	mov	r3, r8
 8002a16:	9600      	str	r6, [sp, #0]
 8002a18:	462a      	mov	r2, r5
 8002a1a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8002a1e:	4638      	mov	r0, r7
 8002a20:	f7fe ff8e 	bl	8001940 <chThdCreateStatic>
 8002a24:	f899 3000 	ldrb.w	r3, [r9]
 8002a28:	3401      	adds	r4, #1
 8002a2a:	2b00      	cmp	r3, #0
 8002a2c:	d0f2      	beq.n	8002a14 <bmk6_execute+0x24>
 8002a2e:	4808      	ldr	r0, [pc, #32]	; (8002a50 <bmk6_execute+0x60>)
 8002a30:	f7fd ff1e 	bl	8000870 <test_print>
 8002a34:	4620      	mov	r0, r4
 8002a36:	f7fd fe23 	bl	8000680 <test_printn>
 8002a3a:	4806      	ldr	r0, [pc, #24]	; (8002a54 <bmk6_execute+0x64>)
 8002a3c:	b003      	add	sp, #12
 8002a3e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002a42:	f7fd bef5 	b.w	8000830 <test_println>
 8002a46:	bf00      	nop
 8002a48:	20000930 	.word	0x20000930
 8002a4c:	20000b38 	.word	0x20000b38
 8002a50:	08005bd0 	.word	0x08005bd0
 8002a54:	08005cd0 	.word	0x08005cd0
 8002a58:	200011c8 	.word	0x200011c8
 8002a5c:	08005b61 	.word	0x08005b61

08002a60 <thd4_execute>:
 8002a60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a62:	f7ff ff15 	bl	8002890 <test_wait_tick>
 8002a66:	2620      	movs	r6, #32
 8002a68:	f386 8811 	msr	BASEPRI, r6
 8002a6c:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8002a70:	2300      	movs	r3, #0
 8002a72:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002a74:	f383 8811 	msr	BASEPRI, r3
 8002a78:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002a7c:	f7ff fe28 	bl	80026d0 <chThdSleep>
 8002a80:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8002a84:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8002a88:	2001      	movs	r0, #1
 8002a8a:	f7fd fe39 	bl	8000700 <_test_assert_time_window>
 8002a8e:	b100      	cbz	r0, 8002a92 <thd4_execute+0x32>
 8002a90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a92:	f386 8811 	msr	BASEPRI, r6
 8002a96:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002a98:	f380 8811 	msr	BASEPRI, r0
 8002a9c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002aa0:	f7ff fe16 	bl	80026d0 <chThdSleep>
 8002aa4:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8002aa8:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8002aac:	2002      	movs	r0, #2
 8002aae:	f7fd fe27 	bl	8000700 <_test_assert_time_window>
 8002ab2:	2800      	cmp	r0, #0
 8002ab4:	d1ec      	bne.n	8002a90 <thd4_execute+0x30>
 8002ab6:	f386 8811 	msr	BASEPRI, r6
 8002aba:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002abc:	f380 8811 	msr	BASEPRI, r0
 8002ac0:	f242 7010 	movw	r0, #10000	; 0x2710
 8002ac4:	f7ff fe04 	bl	80026d0 <chThdSleep>
 8002ac8:	f504 521c 	add.w	r2, r4, #9984	; 0x2700
 8002acc:	4611      	mov	r1, r2
 8002ace:	3110      	adds	r1, #16
 8002ad0:	3213      	adds	r2, #19
 8002ad2:	2003      	movs	r0, #3
 8002ad4:	f7fd fe14 	bl	8000700 <_test_assert_time_window>
 8002ad8:	2800      	cmp	r0, #0
 8002ada:	d1d9      	bne.n	8002a90 <thd4_execute+0x30>
 8002adc:	f386 8811 	msr	BASEPRI, r6
 8002ae0:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 8002ae2:	f380 8811 	msr	BASEPRI, r0
 8002ae6:	f507 747a 	add.w	r4, r7, #1000	; 0x3e8
 8002aea:	f386 8811 	msr	BASEPRI, r6
 8002aee:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002af0:	1a61      	subs	r1, r4, r1
 8002af2:	d002      	beq.n	8002afa <thd4_execute+0x9a>
 8002af4:	2008      	movs	r0, #8
 8002af6:	f7ff f843 	bl	8001b80 <chSchGoSleepTimeoutS>
 8002afa:	2300      	movs	r3, #0
 8002afc:	f383 8811 	msr	BASEPRI, r3
 8002b00:	2004      	movs	r0, #4
 8002b02:	f207 32eb 	addw	r2, r7, #1003	; 0x3eb
 8002b06:	4621      	mov	r1, r4
 8002b08:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002b0c:	f7fd bdf8 	b.w	8000700 <_test_assert_time_window>

08002b10 <chMsgWait>:
 8002b10:	b510      	push	{r4, lr}
 8002b12:	2320      	movs	r3, #32
 8002b14:	f383 8811 	msr	BASEPRI, r3
 8002b18:	4c0b      	ldr	r4, [pc, #44]	; (8002b48 <chMsgWait+0x38>)
 8002b1a:	69a2      	ldr	r2, [r4, #24]
 8002b1c:	4613      	mov	r3, r2
 8002b1e:	f853 0f28 	ldr.w	r0, [r3, #40]!
 8002b22:	4298      	cmp	r0, r3
 8002b24:	d008      	beq.n	8002b38 <chMsgWait+0x28>
 8002b26:	6801      	ldr	r1, [r0, #0]
 8002b28:	6291      	str	r1, [r2, #40]	; 0x28
 8002b2a:	220d      	movs	r2, #13
 8002b2c:	604b      	str	r3, [r1, #4]
 8002b2e:	2300      	movs	r3, #0
 8002b30:	7702      	strb	r2, [r0, #28]
 8002b32:	f383 8811 	msr	BASEPRI, r3
 8002b36:	bd10      	pop	{r4, pc}
 8002b38:	200e      	movs	r0, #14
 8002b3a:	f7fe ff39 	bl	80019b0 <chSchGoSleepS>
 8002b3e:	69a2      	ldr	r2, [r4, #24]
 8002b40:	6a90      	ldr	r0, [r2, #40]	; 0x28
 8002b42:	f102 0328 	add.w	r3, r2, #40	; 0x28
 8002b46:	e7ee      	b.n	8002b26 <chMsgWait+0x16>
 8002b48:	20000930 	.word	0x20000930
 8002b4c:	00000000 	.word	0x00000000

08002b50 <thread2.lto_priv.77>:
 8002b50:	b570      	push	{r4, r5, r6, lr}
 8002b52:	2620      	movs	r6, #32
 8002b54:	2500      	movs	r5, #0
 8002b56:	f7ff ffdb 	bl	8002b10 <chMsgWait>
 8002b5a:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8002b5c:	f386 8811 	msr	BASEPRI, r6
 8002b60:	4621      	mov	r1, r4
 8002b62:	f7fe fe0d 	bl	8001780 <chSchWakeupS>
 8002b66:	f385 8811 	msr	BASEPRI, r5
 8002b6a:	2c00      	cmp	r4, #0
 8002b6c:	d1f3      	bne.n	8002b56 <thread2.lto_priv.77+0x6>
 8002b6e:	bd70      	pop	{r4, r5, r6, pc}

08002b70 <msg1_execute>:
 8002b70:	b570      	push	{r4, r5, r6, lr}
 8002b72:	4a1f      	ldr	r2, [pc, #124]	; (8002bf0 <msg1_execute+0x80>)
 8002b74:	4b1f      	ldr	r3, [pc, #124]	; (8002bf4 <msg1_execute+0x84>)
 8002b76:	6991      	ldr	r1, [r2, #24]
 8002b78:	481f      	ldr	r0, [pc, #124]	; (8002bf8 <msg1_execute+0x88>)
 8002b7a:	688a      	ldr	r2, [r1, #8]
 8002b7c:	b082      	sub	sp, #8
 8002b7e:	3201      	adds	r2, #1
 8002b80:	9100      	str	r1, [sp, #0]
 8002b82:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8002b86:	f7fe fedb 	bl	8001940 <chThdCreateStatic>
 8002b8a:	4b1c      	ldr	r3, [pc, #112]	; (8002bfc <msg1_execute+0x8c>)
 8002b8c:	6018      	str	r0, [r3, #0]
 8002b8e:	f7ff ffbf 	bl	8002b10 <chMsgWait>
 8002b92:	2520      	movs	r5, #32
 8002b94:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002b96:	f385 8811 	msr	BASEPRI, r5
 8002b9a:	4631      	mov	r1, r6
 8002b9c:	f7fe fdf0 	bl	8001780 <chSchWakeupS>
 8002ba0:	2400      	movs	r4, #0
 8002ba2:	f384 8811 	msr	BASEPRI, r4
 8002ba6:	b2f0      	uxtb	r0, r6
 8002ba8:	f7fd fe0a 	bl	80007c0 <test_emit_token>
 8002bac:	f7ff ffb0 	bl	8002b10 <chMsgWait>
 8002bb0:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002bb2:	f385 8811 	msr	BASEPRI, r5
 8002bb6:	4631      	mov	r1, r6
 8002bb8:	f7fe fde2 	bl	8001780 <chSchWakeupS>
 8002bbc:	f384 8811 	msr	BASEPRI, r4
 8002bc0:	b2f0      	uxtb	r0, r6
 8002bc2:	f7fd fdfd 	bl	80007c0 <test_emit_token>
 8002bc6:	f7ff ffa3 	bl	8002b10 <chMsgWait>
 8002bca:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002bcc:	f385 8811 	msr	BASEPRI, r5
 8002bd0:	4631      	mov	r1, r6
 8002bd2:	f7fe fdd5 	bl	8001780 <chSchWakeupS>
 8002bd6:	f384 8811 	msr	BASEPRI, r4
 8002bda:	b2f0      	uxtb	r0, r6
 8002bdc:	f7fd fdf0 	bl	80007c0 <test_emit_token>
 8002be0:	4907      	ldr	r1, [pc, #28]	; (8002c00 <msg1_execute+0x90>)
 8002be2:	2001      	movs	r0, #1
 8002be4:	b002      	add	sp, #8
 8002be6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002bea:	f7fd bda9 	b.w	8000740 <_test_assert_sequence>
 8002bee:	bf00      	nop
 8002bf0:	20000930 	.word	0x20000930
 8002bf4:	08002c81 	.word	0x08002c81
 8002bf8:	20000b38 	.word	0x20000b38
 8002bfc:	200011cc 	.word	0x200011cc
 8002c00:	08005d80 	.word	0x08005d80
	...

08002c10 <chMsgSend>:
 8002c10:	4b0e      	ldr	r3, [pc, #56]	; (8002c4c <chMsgSend+0x3c>)
 8002c12:	b510      	push	{r4, lr}
 8002c14:	2220      	movs	r2, #32
 8002c16:	699c      	ldr	r4, [r3, #24]
 8002c18:	f382 8811 	msr	BASEPRI, r2
 8002c1c:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8002c20:	6222      	str	r2, [r4, #32]
 8002c22:	6022      	str	r2, [r4, #0]
 8002c24:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8002c26:	6062      	str	r2, [r4, #4]
 8002c28:	6321      	str	r1, [r4, #48]	; 0x30
 8002c2a:	6014      	str	r4, [r2, #0]
 8002c2c:	7f02      	ldrb	r2, [r0, #28]
 8002c2e:	62c4      	str	r4, [r0, #44]	; 0x2c
 8002c30:	2a0e      	cmp	r2, #14
 8002c32:	d007      	beq.n	8002c44 <chMsgSend+0x34>
 8002c34:	200c      	movs	r0, #12
 8002c36:	f7fe febb 	bl	80019b0 <chSchGoSleepS>
 8002c3a:	6a20      	ldr	r0, [r4, #32]
 8002c3c:	2300      	movs	r3, #0
 8002c3e:	f383 8811 	msr	BASEPRI, r3
 8002c42:	bd10      	pop	{r4, pc}
 8002c44:	f7fe f834 	bl	8000cb0 <chSchReadyI>
 8002c48:	e7f4      	b.n	8002c34 <chMsgSend+0x24>
 8002c4a:	bf00      	nop
 8002c4c:	20000930 	.word	0x20000930

08002c50 <msg_loop_test>:
 8002c50:	b570      	push	{r4, r5, r6, lr}
 8002c52:	4605      	mov	r5, r0
 8002c54:	f7ff fe1c 	bl	8002890 <test_wait_tick>
 8002c58:	f7fe faaa 	bl	80011b0 <test_start_timer.constprop.1>
 8002c5c:	4e07      	ldr	r6, [pc, #28]	; (8002c7c <msg_loop_test+0x2c>)
 8002c5e:	2400      	movs	r4, #0
 8002c60:	2101      	movs	r1, #1
 8002c62:	4628      	mov	r0, r5
 8002c64:	f7ff ffd4 	bl	8002c10 <chMsgSend>
 8002c68:	7833      	ldrb	r3, [r6, #0]
 8002c6a:	3401      	adds	r4, #1
 8002c6c:	2b00      	cmp	r3, #0
 8002c6e:	d0f7      	beq.n	8002c60 <msg_loop_test+0x10>
 8002c70:	4628      	mov	r0, r5
 8002c72:	2100      	movs	r1, #0
 8002c74:	f7ff ffcc 	bl	8002c10 <chMsgSend>
 8002c78:	4620      	mov	r0, r4
 8002c7a:	bd70      	pop	{r4, r5, r6, pc}
 8002c7c:	200011c8 	.word	0x200011c8

08002c80 <thread.lto_priv.59>:
 8002c80:	b510      	push	{r4, lr}
 8002c82:	2141      	movs	r1, #65	; 0x41
 8002c84:	4604      	mov	r4, r0
 8002c86:	f7ff ffc3 	bl	8002c10 <chMsgSend>
 8002c8a:	4620      	mov	r0, r4
 8002c8c:	2142      	movs	r1, #66	; 0x42
 8002c8e:	f7ff ffbf 	bl	8002c10 <chMsgSend>
 8002c92:	4620      	mov	r0, r4
 8002c94:	2143      	movs	r1, #67	; 0x43
 8002c96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c9a:	f7ff bfb9 	b.w	8002c10 <chMsgSend>
 8002c9e:	bf00      	nop

08002ca0 <chMtxLockS>:
 8002ca0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002ca2:	4a36      	ldr	r2, [pc, #216]	; (8002d7c <chMtxLockS+0xdc>)
 8002ca4:	6883      	ldr	r3, [r0, #8]
 8002ca6:	6995      	ldr	r5, [r2, #24]
 8002ca8:	2b00      	cmp	r3, #0
 8002caa:	d03f      	beq.n	8002d2c <chMtxLockS+0x8c>
 8002cac:	68a9      	ldr	r1, [r5, #8]
 8002cae:	689a      	ldr	r2, [r3, #8]
 8002cb0:	4291      	cmp	r1, r2
 8002cb2:	4604      	mov	r4, r0
 8002cb4:	d906      	bls.n	8002cc4 <chMtxLockS+0x24>
 8002cb6:	7f1a      	ldrb	r2, [r3, #28]
 8002cb8:	6099      	str	r1, [r3, #8]
 8002cba:	2a06      	cmp	r2, #6
 8002cbc:	d03b      	beq.n	8002d36 <chMtxLockS+0x96>
 8002cbe:	2a07      	cmp	r2, #7
 8002cc0:	d015      	beq.n	8002cee <chMtxLockS+0x4e>
 8002cc2:	b342      	cbz	r2, 8002d16 <chMtxLockS+0x76>
 8002cc4:	4626      	mov	r6, r4
 8002cc6:	4623      	mov	r3, r4
 8002cc8:	e003      	b.n	8002cd2 <chMtxLockS+0x32>
 8002cca:	6899      	ldr	r1, [r3, #8]
 8002ccc:	68aa      	ldr	r2, [r5, #8]
 8002cce:	4291      	cmp	r1, r2
 8002cd0:	d32a      	bcc.n	8002d28 <chMtxLockS+0x88>
 8002cd2:	681b      	ldr	r3, [r3, #0]
 8002cd4:	429c      	cmp	r4, r3
 8002cd6:	d1f8      	bne.n	8002cca <chMtxLockS+0x2a>
 8002cd8:	6873      	ldr	r3, [r6, #4]
 8002cda:	2006      	movs	r0, #6
 8002cdc:	e9c5 6300 	strd	r6, r3, [r5]
 8002ce0:	601d      	str	r5, [r3, #0]
 8002ce2:	6075      	str	r5, [r6, #4]
 8002ce4:	622c      	str	r4, [r5, #32]
 8002ce6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002cea:	f7fe be61 	b.w	80019b0 <chSchGoSleepS>
 8002cee:	e9d3 0200 	ldrd	r0, r2, [r3]
 8002cf2:	6010      	str	r0, [r2, #0]
 8002cf4:	6a1e      	ldr	r6, [r3, #32]
 8002cf6:	6818      	ldr	r0, [r3, #0]
 8002cf8:	6042      	str	r2, [r0, #4]
 8002cfa:	4632      	mov	r2, r6
 8002cfc:	e002      	b.n	8002d04 <chMtxLockS+0x64>
 8002cfe:	6890      	ldr	r0, [r2, #8]
 8002d00:	4288      	cmp	r0, r1
 8002d02:	d332      	bcc.n	8002d6a <chMtxLockS+0xca>
 8002d04:	6812      	ldr	r2, [r2, #0]
 8002d06:	4296      	cmp	r6, r2
 8002d08:	d1f9      	bne.n	8002cfe <chMtxLockS+0x5e>
 8002d0a:	6872      	ldr	r2, [r6, #4]
 8002d0c:	e9c3 6200 	strd	r6, r2, [r3]
 8002d10:	6013      	str	r3, [r2, #0]
 8002d12:	6073      	str	r3, [r6, #4]
 8002d14:	e7d6      	b.n	8002cc4 <chMtxLockS+0x24>
 8002d16:	e9d3 1200 	ldrd	r1, r2, [r3]
 8002d1a:	6011      	str	r1, [r2, #0]
 8002d1c:	6819      	ldr	r1, [r3, #0]
 8002d1e:	4618      	mov	r0, r3
 8002d20:	604a      	str	r2, [r1, #4]
 8002d22:	f7fd ffc5 	bl	8000cb0 <chSchReadyI>
 8002d26:	e7cd      	b.n	8002cc4 <chMtxLockS+0x24>
 8002d28:	461e      	mov	r6, r3
 8002d2a:	e7d5      	b.n	8002cd8 <chMtxLockS+0x38>
 8002d2c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8002d2e:	e9c0 5302 	strd	r5, r3, [r0, #8]
 8002d32:	63a8      	str	r0, [r5, #56]	; 0x38
 8002d34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002d36:	e9d3 0200 	ldrd	r0, r2, [r3]
 8002d3a:	6010      	str	r0, [r2, #0]
 8002d3c:	6a1e      	ldr	r6, [r3, #32]
 8002d3e:	6818      	ldr	r0, [r3, #0]
 8002d40:	4637      	mov	r7, r6
 8002d42:	6042      	str	r2, [r0, #4]
 8002d44:	4632      	mov	r2, r6
 8002d46:	e002      	b.n	8002d4e <chMtxLockS+0xae>
 8002d48:	6890      	ldr	r0, [r2, #8]
 8002d4a:	4288      	cmp	r0, r1
 8002d4c:	d314      	bcc.n	8002d78 <chMtxLockS+0xd8>
 8002d4e:	6812      	ldr	r2, [r2, #0]
 8002d50:	4296      	cmp	r6, r2
 8002d52:	d1f9      	bne.n	8002d48 <chMtxLockS+0xa8>
 8002d54:	687a      	ldr	r2, [r7, #4]
 8002d56:	68a9      	ldr	r1, [r5, #8]
 8002d58:	e9c3 7200 	strd	r7, r2, [r3]
 8002d5c:	6013      	str	r3, [r2, #0]
 8002d5e:	607b      	str	r3, [r7, #4]
 8002d60:	68b3      	ldr	r3, [r6, #8]
 8002d62:	689a      	ldr	r2, [r3, #8]
 8002d64:	428a      	cmp	r2, r1
 8002d66:	d3a6      	bcc.n	8002cb6 <chMtxLockS+0x16>
 8002d68:	e7ac      	b.n	8002cc4 <chMtxLockS+0x24>
 8002d6a:	4616      	mov	r6, r2
 8002d6c:	6872      	ldr	r2, [r6, #4]
 8002d6e:	e9c3 6200 	strd	r6, r2, [r3]
 8002d72:	6013      	str	r3, [r2, #0]
 8002d74:	6073      	str	r3, [r6, #4]
 8002d76:	e7a5      	b.n	8002cc4 <chMtxLockS+0x24>
 8002d78:	4617      	mov	r7, r2
 8002d7a:	e7eb      	b.n	8002d54 <chMtxLockS+0xb4>
 8002d7c:	20000930 	.word	0x20000930

08002d80 <chMtxLock>:
 8002d80:	b508      	push	{r3, lr}
 8002d82:	2320      	movs	r3, #32
 8002d84:	f383 8811 	msr	BASEPRI, r3
 8002d88:	f7ff ff8a 	bl	8002ca0 <chMtxLockS>
 8002d8c:	2300      	movs	r3, #0
 8002d8e:	f383 8811 	msr	BASEPRI, r3
 8002d92:	bd08      	pop	{r3, pc}
	...

08002da0 <bmk12_execute>:
 8002da0:	b570      	push	{r4, r5, r6, lr}
 8002da2:	f7ff fd75 	bl	8002890 <test_wait_tick>
 8002da6:	f7fe fa03 	bl	80011b0 <test_start_timer.constprop.1>
 8002daa:	4e15      	ldr	r6, [pc, #84]	; (8002e00 <bmk12_execute+0x60>)
 8002dac:	4c15      	ldr	r4, [pc, #84]	; (8002e04 <bmk12_execute+0x64>)
 8002dae:	2500      	movs	r5, #0
 8002db0:	4620      	mov	r0, r4
 8002db2:	f7ff ffe5 	bl	8002d80 <chMtxLock>
 8002db6:	4620      	mov	r0, r4
 8002db8:	f7fe fd72 	bl	80018a0 <chMtxUnlock>
 8002dbc:	4620      	mov	r0, r4
 8002dbe:	f7ff ffdf 	bl	8002d80 <chMtxLock>
 8002dc2:	4620      	mov	r0, r4
 8002dc4:	f7fe fd6c 	bl	80018a0 <chMtxUnlock>
 8002dc8:	4620      	mov	r0, r4
 8002dca:	f7ff ffd9 	bl	8002d80 <chMtxLock>
 8002dce:	4620      	mov	r0, r4
 8002dd0:	f7fe fd66 	bl	80018a0 <chMtxUnlock>
 8002dd4:	4620      	mov	r0, r4
 8002dd6:	f7ff ffd3 	bl	8002d80 <chMtxLock>
 8002dda:	4620      	mov	r0, r4
 8002ddc:	f7fe fd60 	bl	80018a0 <chMtxUnlock>
 8002de0:	7833      	ldrb	r3, [r6, #0]
 8002de2:	3501      	adds	r5, #1
 8002de4:	2b00      	cmp	r3, #0
 8002de6:	d0e3      	beq.n	8002db0 <bmk12_execute+0x10>
 8002de8:	4807      	ldr	r0, [pc, #28]	; (8002e08 <bmk12_execute+0x68>)
 8002dea:	f7fd fd41 	bl	8000870 <test_print>
 8002dee:	00a8      	lsls	r0, r5, #2
 8002df0:	f7fd fc46 	bl	8000680 <test_printn>
 8002df4:	4805      	ldr	r0, [pc, #20]	; (8002e0c <bmk12_execute+0x6c>)
 8002df6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002dfa:	f7fd bd19 	b.w	8000830 <test_println>
 8002dfe:	bf00      	nop
 8002e00:	200011c8 	.word	0x200011c8
 8002e04:	20000b14 	.word	0x20000b14
 8002e08:	08005bd0 	.word	0x08005bd0
 8002e0c:	08005c00 	.word	0x08005c00

08002e10 <thread11>:
 8002e10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002e12:	4607      	mov	r7, r0
 8002e14:	481b      	ldr	r0, [pc, #108]	; (8002e84 <thread11+0x74>)
 8002e16:	f7ff ffb3 	bl	8002d80 <chMtxLock>
 8002e1a:	481b      	ldr	r0, [pc, #108]	; (8002e88 <thread11+0x78>)
 8002e1c:	f7ff ffb0 	bl	8002d80 <chMtxLock>
 8002e20:	2320      	movs	r3, #32
 8002e22:	f383 8811 	msr	BASEPRI, r3
 8002e26:	4d19      	ldr	r5, [pc, #100]	; (8002e8c <thread11+0x7c>)
 8002e28:	69ab      	ldr	r3, [r5, #24]
 8002e2a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 8002e2c:	4630      	mov	r0, r6
 8002e2e:	f7fe f897 	bl	8000f60 <chMtxUnlockS>
 8002e32:	4b17      	ldr	r3, [pc, #92]	; (8002e90 <thread11+0x80>)
 8002e34:	69ac      	ldr	r4, [r5, #24]
 8002e36:	4618      	mov	r0, r3
 8002e38:	6223      	str	r3, [r4, #32]
 8002e3a:	e003      	b.n	8002e44 <thread11+0x34>
 8002e3c:	6899      	ldr	r1, [r3, #8]
 8002e3e:	68a2      	ldr	r2, [r4, #8]
 8002e40:	4291      	cmp	r1, r2
 8002e42:	d302      	bcc.n	8002e4a <thread11+0x3a>
 8002e44:	681b      	ldr	r3, [r3, #0]
 8002e46:	4283      	cmp	r3, r0
 8002e48:	d1f8      	bne.n	8002e3c <thread11+0x2c>
 8002e4a:	685a      	ldr	r2, [r3, #4]
 8002e4c:	2007      	movs	r0, #7
 8002e4e:	e9c4 3200 	strd	r3, r2, [r4]
 8002e52:	6014      	str	r4, [r2, #0]
 8002e54:	605c      	str	r4, [r3, #4]
 8002e56:	f7fe fdab 	bl	80019b0 <chSchGoSleepS>
 8002e5a:	69ab      	ldr	r3, [r5, #24]
 8002e5c:	6a1b      	ldr	r3, [r3, #32]
 8002e5e:	3301      	adds	r3, #1
 8002e60:	d002      	beq.n	8002e68 <thread11+0x58>
 8002e62:	4630      	mov	r0, r6
 8002e64:	f7ff ff1c 	bl	8002ca0 <chMtxLockS>
 8002e68:	2300      	movs	r3, #0
 8002e6a:	f383 8811 	msr	BASEPRI, r3
 8002e6e:	7838      	ldrb	r0, [r7, #0]
 8002e70:	f7fd fca6 	bl	80007c0 <test_emit_token>
 8002e74:	4804      	ldr	r0, [pc, #16]	; (8002e88 <thread11+0x78>)
 8002e76:	f7fe fd13 	bl	80018a0 <chMtxUnlock>
 8002e7a:	4802      	ldr	r0, [pc, #8]	; (8002e84 <thread11+0x74>)
 8002e7c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002e80:	f7fe bd0e 	b.w	80018a0 <chMtxUnlock>
 8002e84:	20000844 	.word	0x20000844
 8002e88:	20000834 	.word	0x20000834
 8002e8c:	20000930 	.word	0x20000930
 8002e90:	20000800 	.word	0x20000800
	...

08002ea0 <thread10>:
 8002ea0:	b570      	push	{r4, r5, r6, lr}
 8002ea2:	4606      	mov	r6, r0
 8002ea4:	4816      	ldr	r0, [pc, #88]	; (8002f00 <thread10+0x60>)
 8002ea6:	f7ff ff6b 	bl	8002d80 <chMtxLock>
 8002eaa:	2320      	movs	r3, #32
 8002eac:	f383 8811 	msr	BASEPRI, r3
 8002eb0:	4b14      	ldr	r3, [pc, #80]	; (8002f04 <thread10+0x64>)
 8002eb2:	699c      	ldr	r4, [r3, #24]
 8002eb4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8002eb6:	4628      	mov	r0, r5
 8002eb8:	f7fe f852 	bl	8000f60 <chMtxUnlockS>
 8002ebc:	4812      	ldr	r0, [pc, #72]	; (8002f08 <thread10+0x68>)
 8002ebe:	6220      	str	r0, [r4, #32]
 8002ec0:	4603      	mov	r3, r0
 8002ec2:	e003      	b.n	8002ecc <thread10+0x2c>
 8002ec4:	6899      	ldr	r1, [r3, #8]
 8002ec6:	68a2      	ldr	r2, [r4, #8]
 8002ec8:	4291      	cmp	r1, r2
 8002eca:	d302      	bcc.n	8002ed2 <thread10+0x32>
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	4283      	cmp	r3, r0
 8002ed0:	d1f8      	bne.n	8002ec4 <thread10+0x24>
 8002ed2:	685a      	ldr	r2, [r3, #4]
 8002ed4:	2007      	movs	r0, #7
 8002ed6:	e9c4 3200 	strd	r3, r2, [r4]
 8002eda:	6014      	str	r4, [r2, #0]
 8002edc:	605c      	str	r4, [r3, #4]
 8002ede:	f7fe fd67 	bl	80019b0 <chSchGoSleepS>
 8002ee2:	4628      	mov	r0, r5
 8002ee4:	f7ff fedc 	bl	8002ca0 <chMtxLockS>
 8002ee8:	2300      	movs	r3, #0
 8002eea:	f383 8811 	msr	BASEPRI, r3
 8002eee:	7830      	ldrb	r0, [r6, #0]
 8002ef0:	f7fd fc66 	bl	80007c0 <test_emit_token>
 8002ef4:	4802      	ldr	r0, [pc, #8]	; (8002f00 <thread10+0x60>)
 8002ef6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002efa:	f7fe bcd1 	b.w	80018a0 <chMtxUnlock>
 8002efe:	bf00      	nop
 8002f00:	20000834 	.word	0x20000834
 8002f04:	20000930 	.word	0x20000930
 8002f08:	20000800 	.word	0x20000800
 8002f0c:	00000000 	.word	0x00000000

08002f10 <thread12>:
 8002f10:	b538      	push	{r3, r4, r5, lr}
 8002f12:	4c06      	ldr	r4, [pc, #24]	; (8002f2c <thread12+0x1c>)
 8002f14:	4605      	mov	r5, r0
 8002f16:	4620      	mov	r0, r4
 8002f18:	f7ff ff32 	bl	8002d80 <chMtxLock>
 8002f1c:	7828      	ldrb	r0, [r5, #0]
 8002f1e:	f7fd fc4f 	bl	80007c0 <test_emit_token>
 8002f22:	4620      	mov	r0, r4
 8002f24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002f28:	f7fe bcba 	b.w	80018a0 <chMtxUnlock>
 8002f2c:	20000844 	.word	0x20000844

08002f30 <mtx5_execute>:
 8002f30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f32:	4d37      	ldr	r5, [pc, #220]	; (8003010 <mtx5_execute+0xe0>)
 8002f34:	69aa      	ldr	r2, [r5, #24]
 8002f36:	2320      	movs	r3, #32
 8002f38:	6896      	ldr	r6, [r2, #8]
 8002f3a:	f383 8811 	msr	BASEPRI, r3
 8002f3e:	4c35      	ldr	r4, [pc, #212]	; (8003014 <mtx5_execute+0xe4>)
 8002f40:	68a3      	ldr	r3, [r4, #8]
 8002f42:	2b00      	cmp	r3, #0
 8002f44:	d057      	beq.n	8002ff6 <mtx5_execute+0xc6>
 8002f46:	2100      	movs	r1, #0
 8002f48:	2300      	movs	r3, #0
 8002f4a:	f383 8811 	msr	BASEPRI, r3
 8002f4e:	2001      	movs	r0, #1
 8002f50:	f7fd fc1e 	bl	8000790 <_test_assert>
 8002f54:	4601      	mov	r1, r0
 8002f56:	b100      	cbz	r0, 8002f5a <mtx5_execute+0x2a>
 8002f58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002f5a:	2320      	movs	r3, #32
 8002f5c:	f383 8811 	msr	BASEPRI, r3
 8002f60:	68a3      	ldr	r3, [r4, #8]
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	d04e      	beq.n	8003004 <mtx5_execute+0xd4>
 8002f66:	2101      	movs	r1, #1
 8002f68:	2300      	movs	r3, #0
 8002f6a:	f383 8811 	msr	BASEPRI, r3
 8002f6e:	2002      	movs	r0, #2
 8002f70:	f7fd fc0e 	bl	8000790 <_test_assert>
 8002f74:	4607      	mov	r7, r0
 8002f76:	2800      	cmp	r0, #0
 8002f78:	d1ee      	bne.n	8002f58 <mtx5_execute+0x28>
 8002f7a:	2320      	movs	r3, #32
 8002f7c:	f383 8811 	msr	BASEPRI, r3
 8002f80:	4824      	ldr	r0, [pc, #144]	; (8003014 <mtx5_execute+0xe4>)
 8002f82:	f7fd ffed 	bl	8000f60 <chMtxUnlockS>
 8002f86:	f387 8811 	msr	BASEPRI, r7
 8002f8a:	6821      	ldr	r1, [r4, #0]
 8002f8c:	1b09      	subs	r1, r1, r4
 8002f8e:	fab1 f181 	clz	r1, r1
 8002f92:	2003      	movs	r0, #3
 8002f94:	0949      	lsrs	r1, r1, #5
 8002f96:	f7fd fbfb 	bl	8000790 <_test_assert>
 8002f9a:	2800      	cmp	r0, #0
 8002f9c:	d1dc      	bne.n	8002f58 <mtx5_execute+0x28>
 8002f9e:	68a1      	ldr	r1, [r4, #8]
 8002fa0:	fab1 f181 	clz	r1, r1
 8002fa4:	0949      	lsrs	r1, r1, #5
 8002fa6:	2004      	movs	r0, #4
 8002fa8:	f7fd fbf2 	bl	8000790 <_test_assert>
 8002fac:	2800      	cmp	r0, #0
 8002fae:	d1d3      	bne.n	8002f58 <mtx5_execute+0x28>
 8002fb0:	69ab      	ldr	r3, [r5, #24]
 8002fb2:	6899      	ldr	r1, [r3, #8]
 8002fb4:	1b89      	subs	r1, r1, r6
 8002fb6:	fab1 f181 	clz	r1, r1
 8002fba:	2005      	movs	r0, #5
 8002fbc:	0949      	lsrs	r1, r1, #5
 8002fbe:	f7fd fbe7 	bl	8000790 <_test_assert>
 8002fc2:	2800      	cmp	r0, #0
 8002fc4:	d1c8      	bne.n	8002f58 <mtx5_execute+0x28>
 8002fc6:	4813      	ldr	r0, [pc, #76]	; (8003014 <mtx5_execute+0xe4>)
 8002fc8:	f7ff feda 	bl	8002d80 <chMtxLock>
 8002fcc:	f7fe fad0 	bl	8001570 <chMtxUnlockAll>
 8002fd0:	6821      	ldr	r1, [r4, #0]
 8002fd2:	1b09      	subs	r1, r1, r4
 8002fd4:	fab1 f181 	clz	r1, r1
 8002fd8:	2006      	movs	r0, #6
 8002fda:	0949      	lsrs	r1, r1, #5
 8002fdc:	f7fd fbd8 	bl	8000790 <_test_assert>
 8002fe0:	2800      	cmp	r0, #0
 8002fe2:	d1b9      	bne.n	8002f58 <mtx5_execute+0x28>
 8002fe4:	68a1      	ldr	r1, [r4, #8]
 8002fe6:	fab1 f181 	clz	r1, r1
 8002fea:	0949      	lsrs	r1, r1, #5
 8002fec:	2007      	movs	r0, #7
 8002fee:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002ff2:	f7fd bbcd 	b.w	8000790 <_test_assert>
 8002ff6:	69ab      	ldr	r3, [r5, #24]
 8002ff8:	60a3      	str	r3, [r4, #8]
 8002ffa:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002ffc:	60e2      	str	r2, [r4, #12]
 8002ffe:	639c      	str	r4, [r3, #56]	; 0x38
 8003000:	2101      	movs	r1, #1
 8003002:	e7a1      	b.n	8002f48 <mtx5_execute+0x18>
 8003004:	69ab      	ldr	r3, [r5, #24]
 8003006:	60a3      	str	r3, [r4, #8]
 8003008:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800300a:	60e2      	str	r2, [r4, #12]
 800300c:	639c      	str	r4, [r3, #56]	; 0x38
 800300e:	e7ab      	b.n	8002f68 <mtx5_execute+0x38>
 8003010:	20000930 	.word	0x20000930
 8003014:	20000834 	.word	0x20000834
	...

08003020 <thread4a>:
 8003020:	b510      	push	{r4, lr}
 8003022:	4c06      	ldr	r4, [pc, #24]	; (800303c <thread4a+0x1c>)
 8003024:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003028:	f7ff fb52 	bl	80026d0 <chThdSleep>
 800302c:	4620      	mov	r0, r4
 800302e:	f7ff fea7 	bl	8002d80 <chMtxLock>
 8003032:	4620      	mov	r0, r4
 8003034:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003038:	f7fe bc32 	b.w	80018a0 <chMtxUnlock>
 800303c:	20000844 	.word	0x20000844

08003040 <thread4b>:
 8003040:	b510      	push	{r4, lr}
 8003042:	4c06      	ldr	r4, [pc, #24]	; (800305c <thread4b+0x1c>)
 8003044:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8003048:	f7ff fb42 	bl	80026d0 <chThdSleep>
 800304c:	4620      	mov	r0, r4
 800304e:	f7ff fe97 	bl	8002d80 <chMtxLock>
 8003052:	4620      	mov	r0, r4
 8003054:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003058:	f7fe bc22 	b.w	80018a0 <chMtxUnlock>
 800305c:	20000834 	.word	0x20000834

08003060 <thread1.lto_priv.68>:
 8003060:	b538      	push	{r3, r4, r5, lr}
 8003062:	4c06      	ldr	r4, [pc, #24]	; (800307c <thread1.lto_priv.68+0x1c>)
 8003064:	4605      	mov	r5, r0
 8003066:	4620      	mov	r0, r4
 8003068:	f7ff fe8a 	bl	8002d80 <chMtxLock>
 800306c:	7828      	ldrb	r0, [r5, #0]
 800306e:	f7fd fba7 	bl	80007c0 <test_emit_token>
 8003072:	4620      	mov	r0, r4
 8003074:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003078:	f7fe bc12 	b.w	80018a0 <chMtxUnlock>
 800307c:	20000834 	.word	0x20000834

08003080 <chHeapStatus>:
 8003080:	b570      	push	{r4, r5, r6, lr}
 8003082:	4c11      	ldr	r4, [pc, #68]	; (80030c8 <chHeapStatus+0x48>)
 8003084:	2800      	cmp	r0, #0
 8003086:	bf18      	it	ne
 8003088:	4604      	movne	r4, r0
 800308a:	f104 0510 	add.w	r5, r4, #16
 800308e:	4628      	mov	r0, r5
 8003090:	460e      	mov	r6, r1
 8003092:	f7ff fe75 	bl	8002d80 <chMtxLock>
 8003096:	68a3      	ldr	r3, [r4, #8]
 8003098:	b16b      	cbz	r3, 80030b6 <chHeapStatus+0x36>
 800309a:	2200      	movs	r2, #0
 800309c:	4614      	mov	r4, r2
 800309e:	e9d3 3000 	ldrd	r3, r0, [r3]
 80030a2:	3401      	adds	r4, #1
 80030a4:	4402      	add	r2, r0
 80030a6:	2b00      	cmp	r3, #0
 80030a8:	d1f9      	bne.n	800309e <chHeapStatus+0x1e>
 80030aa:	4628      	mov	r0, r5
 80030ac:	6032      	str	r2, [r6, #0]
 80030ae:	f7fe fbf7 	bl	80018a0 <chMtxUnlock>
 80030b2:	4620      	mov	r0, r4
 80030b4:	bd70      	pop	{r4, r5, r6, pc}
 80030b6:	461a      	mov	r2, r3
 80030b8:	461c      	mov	r4, r3
 80030ba:	4628      	mov	r0, r5
 80030bc:	6032      	str	r2, [r6, #0]
 80030be:	f7fe fbef 	bl	80018a0 <chMtxUnlock>
 80030c2:	4620      	mov	r0, r4
 80030c4:	bd70      	pop	{r4, r5, r6, pc}
 80030c6:	bf00      	nop
 80030c8:	20000a88 	.word	0x20000a88
 80030cc:	00000000 	.word	0x00000000

080030d0 <chHeapFree>:
 80030d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80030d2:	f850 5c08 	ldr.w	r5, [r0, #-8]
 80030d6:	f105 0710 	add.w	r7, r5, #16
 80030da:	4606      	mov	r6, r0
 80030dc:	f1a0 0408 	sub.w	r4, r0, #8
 80030e0:	3508      	adds	r5, #8
 80030e2:	4638      	mov	r0, r7
 80030e4:	f7ff fe4c 	bl	8002d80 <chMtxLock>
 80030e8:	462b      	mov	r3, r5
 80030ea:	42ab      	cmp	r3, r5
 80030ec:	681a      	ldr	r2, [r3, #0]
 80030ee:	d001      	beq.n	80030f4 <chHeapFree+0x24>
 80030f0:	42a3      	cmp	r3, r4
 80030f2:	d202      	bcs.n	80030fa <chHeapFree+0x2a>
 80030f4:	b11a      	cbz	r2, 80030fe <chHeapFree+0x2e>
 80030f6:	4294      	cmp	r4, r2
 80030f8:	d301      	bcc.n	80030fe <chHeapFree+0x2e>
 80030fa:	4613      	mov	r3, r2
 80030fc:	e7f5      	b.n	80030ea <chHeapFree+0x1a>
 80030fe:	f846 2c08 	str.w	r2, [r6, #-8]
 8003102:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8003106:	601c      	str	r4, [r3, #0]
 8003108:	f856 0c08 	ldr.w	r0, [r6, #-8]
 800310c:	18b1      	adds	r1, r6, r2
 800310e:	4281      	cmp	r1, r0
 8003110:	d00a      	beq.n	8003128 <chHeapFree+0x58>
 8003112:	6859      	ldr	r1, [r3, #4]
 8003114:	f101 0208 	add.w	r2, r1, #8
 8003118:	441a      	add	r2, r3
 800311a:	4294      	cmp	r4, r2
 800311c:	d012      	beq.n	8003144 <chHeapFree+0x74>
 800311e:	4638      	mov	r0, r7
 8003120:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003124:	f7fe bbbc 	b.w	80018a0 <chMtxUnlock>
 8003128:	6849      	ldr	r1, [r1, #4]
 800312a:	58b0      	ldr	r0, [r6, r2]
 800312c:	f846 0c08 	str.w	r0, [r6, #-8]
 8003130:	3208      	adds	r2, #8
 8003132:	440a      	add	r2, r1
 8003134:	f846 2c04 	str.w	r2, [r6, #-4]
 8003138:	6859      	ldr	r1, [r3, #4]
 800313a:	f101 0208 	add.w	r2, r1, #8
 800313e:	441a      	add	r2, r3
 8003140:	4294      	cmp	r4, r2
 8003142:	d1ec      	bne.n	800311e <chHeapFree+0x4e>
 8003144:	e956 0202 	ldrd	r0, r2, [r6, #-8]
 8003148:	3208      	adds	r2, #8
 800314a:	4411      	add	r1, r2
 800314c:	6018      	str	r0, [r3, #0]
 800314e:	6059      	str	r1, [r3, #4]
 8003150:	4638      	mov	r0, r7
 8003152:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003156:	f7fe bba3 	b.w	80018a0 <chMtxUnlock>
 800315a:	bf00      	nop
 800315c:	0000      	movs	r0, r0
	...

08003160 <chThdRelease>:
 8003160:	b430      	push	{r4, r5}
 8003162:	2120      	movs	r1, #32
 8003164:	f381 8811 	msr	BASEPRI, r1
 8003168:	7f83      	ldrb	r3, [r0, #30]
 800316a:	3b01      	subs	r3, #1
 800316c:	b2db      	uxtb	r3, r3
 800316e:	7783      	strb	r3, [r0, #30]
 8003170:	2400      	movs	r4, #0
 8003172:	f384 8811 	msr	BASEPRI, r4
 8003176:	b91b      	cbnz	r3, 8003180 <chThdRelease+0x20>
 8003178:	7f04      	ldrb	r4, [r0, #28]
 800317a:	2c0f      	cmp	r4, #15
 800317c:	4602      	mov	r2, r0
 800317e:	d001      	beq.n	8003184 <chThdRelease+0x24>
 8003180:	bc30      	pop	{r4, r5}
 8003182:	4770      	bx	lr
 8003184:	7f44      	ldrb	r4, [r0, #29]
 8003186:	f004 0403 	and.w	r4, r4, #3
 800318a:	2c01      	cmp	r4, #1
 800318c:	d00f      	beq.n	80031ae <chThdRelease+0x4e>
 800318e:	2c02      	cmp	r4, #2
 8003190:	d1f6      	bne.n	8003180 <chThdRelease+0x20>
 8003192:	e9d0 0404 	ldrd	r0, r4, [r0, #16]
 8003196:	6120      	str	r0, [r4, #16]
 8003198:	6915      	ldr	r5, [r2, #16]
 800319a:	6c10      	ldr	r0, [r2, #64]	; 0x40
 800319c:	616c      	str	r4, [r5, #20]
 800319e:	f381 8811 	msr	BASEPRI, r1
 80031a2:	6801      	ldr	r1, [r0, #0]
 80031a4:	6011      	str	r1, [r2, #0]
 80031a6:	6002      	str	r2, [r0, #0]
 80031a8:	f383 8811 	msr	BASEPRI, r3
 80031ac:	e7e8      	b.n	8003180 <chThdRelease+0x20>
 80031ae:	e9d0 1304 	ldrd	r1, r3, [r0, #16]
 80031b2:	6119      	str	r1, [r3, #16]
 80031b4:	6902      	ldr	r2, [r0, #16]
 80031b6:	bc30      	pop	{r4, r5}
 80031b8:	6153      	str	r3, [r2, #20]
 80031ba:	f7ff bf89 	b.w	80030d0 <chHeapFree>
 80031be:	bf00      	nop

080031c0 <regfind>:
 80031c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80031c4:	4680      	mov	r8, r0
 80031c6:	2520      	movs	r5, #32
 80031c8:	f385 8811 	msr	BASEPRI, r5
 80031cc:	4f18      	ldr	r7, [pc, #96]	; (8003230 <regfind+0x70>)
 80031ce:	6938      	ldr	r0, [r7, #16]
 80031d0:	7f83      	ldrb	r3, [r0, #30]
 80031d2:	3301      	adds	r3, #1
 80031d4:	7783      	strb	r3, [r0, #30]
 80031d6:	2600      	movs	r6, #0
 80031d8:	f386 8811 	msr	BASEPRI, r6
 80031dc:	eba8 0900 	sub.w	r9, r8, r0
 80031e0:	fab9 f989 	clz	r9, r9
 80031e4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80031e8:	f385 8811 	msr	BASEPRI, r5
 80031ec:	6904      	ldr	r4, [r0, #16]
 80031ee:	42bc      	cmp	r4, r7
 80031f0:	bf08      	it	eq
 80031f2:	4604      	moveq	r4, r0
 80031f4:	d101      	bne.n	80031fa <regfind+0x3a>
 80031f6:	e011      	b.n	800321c <regfind+0x5c>
 80031f8:	461c      	mov	r4, r3
 80031fa:	7fa3      	ldrb	r3, [r4, #30]
 80031fc:	3301      	adds	r3, #1
 80031fe:	77a3      	strb	r3, [r4, #30]
 8003200:	f386 8811 	msr	BASEPRI, r6
 8003204:	f7ff ffac 	bl	8003160 <chThdRelease>
 8003208:	45a0      	cmp	r8, r4
 800320a:	bf08      	it	eq
 800320c:	f049 0901 	orreq.w	r9, r9, #1
 8003210:	f385 8811 	msr	BASEPRI, r5
 8003214:	6923      	ldr	r3, [r4, #16]
 8003216:	42bb      	cmp	r3, r7
 8003218:	4620      	mov	r0, r4
 800321a:	d1ed      	bne.n	80031f8 <regfind+0x38>
 800321c:	2300      	movs	r3, #0
 800321e:	f383 8811 	msr	BASEPRI, r3
 8003222:	4620      	mov	r0, r4
 8003224:	f7ff ff9c 	bl	8003160 <chThdRelease>
 8003228:	4648      	mov	r0, r9
 800322a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800322e:	bf00      	nop
 8003230:	20000930 	.word	0x20000930
	...

08003240 <chHeapAlloc>:
 8003240:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003242:	4e20      	ldr	r6, [pc, #128]	; (80032c4 <chHeapAlloc+0x84>)
 8003244:	2800      	cmp	r0, #0
 8003246:	bf18      	it	ne
 8003248:	4606      	movne	r6, r0
 800324a:	f106 0710 	add.w	r7, r6, #16
 800324e:	3107      	adds	r1, #7
 8003250:	4638      	mov	r0, r7
 8003252:	f021 0507 	bic.w	r5, r1, #7
 8003256:	f106 0408 	add.w	r4, r6, #8
 800325a:	f7ff fd91 	bl	8002d80 <chMtxLock>
 800325e:	e003      	b.n	8003268 <chHeapAlloc+0x28>
 8003260:	6843      	ldr	r3, [r0, #4]
 8003262:	42ab      	cmp	r3, r5
 8003264:	d212      	bcs.n	800328c <chHeapAlloc+0x4c>
 8003266:	4604      	mov	r4, r0
 8003268:	6820      	ldr	r0, [r4, #0]
 800326a:	2800      	cmp	r0, #0
 800326c:	d1f8      	bne.n	8003260 <chHeapAlloc+0x20>
 800326e:	4638      	mov	r0, r7
 8003270:	f7fe fb16 	bl	80018a0 <chMtxUnlock>
 8003274:	6833      	ldr	r3, [r6, #0]
 8003276:	b313      	cbz	r3, 80032be <chHeapAlloc+0x7e>
 8003278:	f105 0008 	add.w	r0, r5, #8
 800327c:	4798      	blx	r3
 800327e:	b1f0      	cbz	r0, 80032be <chHeapAlloc+0x7e>
 8003280:	e9c0 6500 	strd	r6, r5, [r0]
 8003284:	f100 0408 	add.w	r4, r0, #8
 8003288:	4620      	mov	r0, r4
 800328a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800328c:	f105 0208 	add.w	r2, r5, #8
 8003290:	4293      	cmp	r3, r2
 8003292:	6801      	ldr	r1, [r0, #0]
 8003294:	d208      	bcs.n	80032a8 <chHeapAlloc+0x68>
 8003296:	6021      	str	r1, [r4, #0]
 8003298:	4604      	mov	r4, r0
 800329a:	4638      	mov	r0, r7
 800329c:	f844 6b08 	str.w	r6, [r4], #8
 80032a0:	f7fe fafe 	bl	80018a0 <chMtxUnlock>
 80032a4:	4620      	mov	r0, r4
 80032a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80032a8:	eb00 0c02 	add.w	ip, r0, r2
 80032ac:	1b5b      	subs	r3, r3, r5
 80032ae:	3b08      	subs	r3, #8
 80032b0:	5081      	str	r1, [r0, r2]
 80032b2:	f8cc 3004 	str.w	r3, [ip, #4]
 80032b6:	f8c4 c000 	str.w	ip, [r4]
 80032ba:	6045      	str	r5, [r0, #4]
 80032bc:	e7ec      	b.n	8003298 <chHeapAlloc+0x58>
 80032be:	2400      	movs	r4, #0
 80032c0:	e7e2      	b.n	8003288 <chHeapAlloc+0x48>
 80032c2:	bf00      	nop
 80032c4:	20000a88 	.word	0x20000a88
	...

080032d0 <chThdCreateFromHeap.constprop.52>:
 80032d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80032d2:	4605      	mov	r5, r0
 80032d4:	460e      	mov	r6, r1
 80032d6:	481b      	ldr	r0, [pc, #108]	; (8003344 <chThdCreateFromHeap.constprop.52+0x74>)
 80032d8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80032dc:	f7ff ffb0 	bl	8003240 <chHeapAlloc>
 80032e0:	4604      	mov	r4, r0
 80032e2:	b360      	cbz	r0, 800333e <chThdCreateFromHeap.constprop.52+0x6e>
 80032e4:	2320      	movs	r3, #32
 80032e6:	f383 8811 	msr	BASEPRI, r3
 80032ea:	4a17      	ldr	r2, [pc, #92]	; (8003348 <chThdCreateFromHeap.constprop.52+0x78>)
 80032ec:	6102      	str	r2, [r0, #16]
 80032ee:	6957      	ldr	r7, [r2, #20]
 80032f0:	f8c0 6128 	str.w	r6, [r0, #296]	; 0x128
 80032f4:	f500 7192 	add.w	r1, r0, #292	; 0x124
 80032f8:	2302      	movs	r3, #2
 80032fa:	6085      	str	r5, [r0, #8]
 80032fc:	60c1      	str	r1, [r0, #12]
 80032fe:	63c5      	str	r5, [r0, #60]	; 0x3c
 8003300:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8003304:	2500      	movs	r5, #0
 8003306:	7703      	strb	r3, [r0, #28]
 8003308:	f8df e040 	ldr.w	lr, [pc, #64]	; 800334c <chThdCreateFromHeap.constprop.52+0x7c>
 800330c:	f8df c040 	ldr.w	ip, [pc, #64]	; 8003350 <chThdCreateFromHeap.constprop.52+0x80>
 8003310:	6147      	str	r7, [r0, #20]
 8003312:	2601      	movs	r6, #1
 8003314:	f100 0328 	add.w	r3, r0, #40	; 0x28
 8003318:	f8c0 e124 	str.w	lr, [r0, #292]	; 0x124
 800331c:	f8c0 c144 	str.w	ip, [r0, #324]	; 0x144
 8003320:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8003324:	6185      	str	r5, [r0, #24]
 8003326:	7786      	strb	r6, [r0, #30]
 8003328:	6138      	str	r0, [r7, #16]
 800332a:	6241      	str	r1, [r0, #36]	; 0x24
 800332c:	7746      	strb	r6, [r0, #29]
 800332e:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8003332:	4629      	mov	r1, r5
 8003334:	6150      	str	r0, [r2, #20]
 8003336:	f7fe fa23 	bl	8001780 <chSchWakeupS>
 800333a:	f385 8811 	msr	BASEPRI, r5
 800333e:	4620      	mov	r0, r4
 8003340:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003342:	bf00      	nop
 8003344:	20000ab0 	.word	0x20000ab0
 8003348:	20000930 	.word	0x20000930
 800334c:	08000821 	.word	0x08000821
 8003350:	08000291 	.word	0x08000291
	...

08003360 <dyn3_execute>:
 8003360:	4b46      	ldr	r3, [pc, #280]	; (800347c <dyn3_execute+0x11c>)
 8003362:	4947      	ldr	r1, [pc, #284]	; (8003480 <dyn3_execute+0x120>)
 8003364:	699b      	ldr	r3, [r3, #24]
 8003366:	6898      	ldr	r0, [r3, #8]
 8003368:	b510      	push	{r4, lr}
 800336a:	3801      	subs	r0, #1
 800336c:	f7ff ffb0 	bl	80032d0 <chThdCreateFromHeap.constprop.52>
 8003370:	4604      	mov	r4, r0
 8003372:	2001      	movs	r0, #1
 8003374:	7fa1      	ldrb	r1, [r4, #30]
 8003376:	1a09      	subs	r1, r1, r0
 8003378:	fab1 f181 	clz	r1, r1
 800337c:	0949      	lsrs	r1, r1, #5
 800337e:	f7fd fa07 	bl	8000790 <_test_assert>
 8003382:	b100      	cbz	r0, 8003386 <dyn3_execute+0x26>
 8003384:	bd10      	pop	{r4, pc}
 8003386:	2320      	movs	r3, #32
 8003388:	f383 8811 	msr	BASEPRI, r3
 800338c:	7fa3      	ldrb	r3, [r4, #30]
 800338e:	3301      	adds	r3, #1
 8003390:	77a3      	strb	r3, [r4, #30]
 8003392:	f380 8811 	msr	BASEPRI, r0
 8003396:	7fa1      	ldrb	r1, [r4, #30]
 8003398:	2002      	movs	r0, #2
 800339a:	1a09      	subs	r1, r1, r0
 800339c:	fab1 f181 	clz	r1, r1
 80033a0:	0949      	lsrs	r1, r1, #5
 80033a2:	f7fd f9f5 	bl	8000790 <_test_assert>
 80033a6:	2800      	cmp	r0, #0
 80033a8:	d1ec      	bne.n	8003384 <dyn3_execute+0x24>
 80033aa:	4620      	mov	r0, r4
 80033ac:	f7ff fed8 	bl	8003160 <chThdRelease>
 80033b0:	7fa1      	ldrb	r1, [r4, #30]
 80033b2:	f1a1 0101 	sub.w	r1, r1, #1
 80033b6:	fab1 f181 	clz	r1, r1
 80033ba:	2003      	movs	r0, #3
 80033bc:	0949      	lsrs	r1, r1, #5
 80033be:	f7fd f9e7 	bl	8000790 <_test_assert>
 80033c2:	2800      	cmp	r0, #0
 80033c4:	d1de      	bne.n	8003384 <dyn3_execute+0x24>
 80033c6:	4620      	mov	r0, r4
 80033c8:	f7ff fefa 	bl	80031c0 <regfind>
 80033cc:	4601      	mov	r1, r0
 80033ce:	2004      	movs	r0, #4
 80033d0:	f7fd f9de 	bl	8000790 <_test_assert>
 80033d4:	2800      	cmp	r0, #0
 80033d6:	d1d5      	bne.n	8003384 <dyn3_execute+0x24>
 80033d8:	4620      	mov	r0, r4
 80033da:	f7ff fef1 	bl	80031c0 <regfind>
 80033de:	4601      	mov	r1, r0
 80033e0:	2005      	movs	r0, #5
 80033e2:	f7fd f9d5 	bl	8000790 <_test_assert>
 80033e6:	2800      	cmp	r0, #0
 80033e8:	d1cc      	bne.n	8003384 <dyn3_execute+0x24>
 80033ea:	4620      	mov	r0, r4
 80033ec:	f7ff feb8 	bl	8003160 <chThdRelease>
 80033f0:	7fa1      	ldrb	r1, [r4, #30]
 80033f2:	fab1 f181 	clz	r1, r1
 80033f6:	0949      	lsrs	r1, r1, #5
 80033f8:	2006      	movs	r0, #6
 80033fa:	f7fd f9c9 	bl	8000790 <_test_assert>
 80033fe:	2800      	cmp	r0, #0
 8003400:	d1c0      	bne.n	8003384 <dyn3_execute+0x24>
 8003402:	7f21      	ldrb	r1, [r4, #28]
 8003404:	fab1 f181 	clz	r1, r1
 8003408:	0949      	lsrs	r1, r1, #5
 800340a:	2007      	movs	r0, #7
 800340c:	f7fd f9c0 	bl	8000790 <_test_assert>
 8003410:	2800      	cmp	r0, #0
 8003412:	d1b7      	bne.n	8003384 <dyn3_execute+0x24>
 8003414:	4620      	mov	r0, r4
 8003416:	f7ff fed3 	bl	80031c0 <regfind>
 800341a:	4601      	mov	r1, r0
 800341c:	2008      	movs	r0, #8
 800341e:	f7fd f9b7 	bl	8000790 <_test_assert>
 8003422:	2800      	cmp	r0, #0
 8003424:	d1ae      	bne.n	8003384 <dyn3_execute+0x24>
 8003426:	4620      	mov	r0, r4
 8003428:	f7ff feca 	bl	80031c0 <regfind>
 800342c:	4601      	mov	r1, r0
 800342e:	2009      	movs	r0, #9
 8003430:	f7fd f9ae 	bl	8000790 <_test_assert>
 8003434:	2800      	cmp	r0, #0
 8003436:	d1a5      	bne.n	8003384 <dyn3_execute+0x24>
 8003438:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800343c:	f7ff f948 	bl	80026d0 <chThdSleep>
 8003440:	7f21      	ldrb	r1, [r4, #28]
 8003442:	f1a1 030f 	sub.w	r3, r1, #15
 8003446:	4259      	negs	r1, r3
 8003448:	4159      	adcs	r1, r3
 800344a:	200a      	movs	r0, #10
 800344c:	f7fd f9a0 	bl	8000790 <_test_assert>
 8003450:	2800      	cmp	r0, #0
 8003452:	d197      	bne.n	8003384 <dyn3_execute+0x24>
 8003454:	4620      	mov	r0, r4
 8003456:	f7ff feb3 	bl	80031c0 <regfind>
 800345a:	4601      	mov	r1, r0
 800345c:	200b      	movs	r0, #11
 800345e:	f7fd f997 	bl	8000790 <_test_assert>
 8003462:	2800      	cmp	r0, #0
 8003464:	d18e      	bne.n	8003384 <dyn3_execute+0x24>
 8003466:	4620      	mov	r0, r4
 8003468:	f7ff feaa 	bl	80031c0 <regfind>
 800346c:	f080 0101 	eor.w	r1, r0, #1
 8003470:	b2c9      	uxtb	r1, r1
 8003472:	200c      	movs	r0, #12
 8003474:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003478:	f7fd b98a 	b.w	8000790 <_test_assert>
 800347c:	20000930 	.word	0x20000930
 8003480:	08005d60 	.word	0x08005d60
	...

08003490 <heap1_execute>:
 8003490:	b570      	push	{r4, r5, r6, lr}
 8003492:	b082      	sub	sp, #8
 8003494:	4669      	mov	r1, sp
 8003496:	2000      	movs	r0, #0
 8003498:	f7ff fdf2 	bl	8003080 <chHeapStatus>
 800349c:	2110      	movs	r1, #16
 800349e:	2000      	movs	r0, #0
 80034a0:	f7ff fece 	bl	8003240 <chHeapAlloc>
 80034a4:	1c01      	adds	r1, r0, #0
 80034a6:	4605      	mov	r5, r0
 80034a8:	bf18      	it	ne
 80034aa:	2101      	movne	r1, #1
 80034ac:	2001      	movs	r0, #1
 80034ae:	f7fd f96f 	bl	8000790 <_test_assert>
 80034b2:	b108      	cbz	r0, 80034b8 <heap1_execute+0x28>
 80034b4:	b002      	add	sp, #8
 80034b6:	bd70      	pop	{r4, r5, r6, pc}
 80034b8:	4604      	mov	r4, r0
 80034ba:	4628      	mov	r0, r5
 80034bc:	f7ff fe08 	bl	80030d0 <chHeapFree>
 80034c0:	f06f 01ff 	mvn.w	r1, #255	; 0xff
 80034c4:	4620      	mov	r0, r4
 80034c6:	f7ff febb 	bl	8003240 <chHeapAlloc>
 80034ca:	fab0 f180 	clz	r1, r0
 80034ce:	0949      	lsrs	r1, r1, #5
 80034d0:	2002      	movs	r0, #2
 80034d2:	f7fd f95d 	bl	8000790 <_test_assert>
 80034d6:	2800      	cmp	r0, #0
 80034d8:	d1ec      	bne.n	80034b4 <heap1_execute+0x24>
 80034da:	4669      	mov	r1, sp
 80034dc:	487c      	ldr	r0, [pc, #496]	; (80036d0 <heap1_execute+0x240>)
 80034de:	f7ff fdcf 	bl	8003080 <chHeapStatus>
 80034e2:	2110      	movs	r1, #16
 80034e4:	487a      	ldr	r0, [pc, #488]	; (80036d0 <heap1_execute+0x240>)
 80034e6:	f7ff feab 	bl	8003240 <chHeapAlloc>
 80034ea:	2110      	movs	r1, #16
 80034ec:	4606      	mov	r6, r0
 80034ee:	4878      	ldr	r0, [pc, #480]	; (80036d0 <heap1_execute+0x240>)
 80034f0:	f7ff fea6 	bl	8003240 <chHeapAlloc>
 80034f4:	2110      	movs	r1, #16
 80034f6:	4605      	mov	r5, r0
 80034f8:	4875      	ldr	r0, [pc, #468]	; (80036d0 <heap1_execute+0x240>)
 80034fa:	f7ff fea1 	bl	8003240 <chHeapAlloc>
 80034fe:	4604      	mov	r4, r0
 8003500:	4630      	mov	r0, r6
 8003502:	f7ff fde5 	bl	80030d0 <chHeapFree>
 8003506:	4628      	mov	r0, r5
 8003508:	f7ff fde2 	bl	80030d0 <chHeapFree>
 800350c:	4620      	mov	r0, r4
 800350e:	f7ff fddf 	bl	80030d0 <chHeapFree>
 8003512:	a901      	add	r1, sp, #4
 8003514:	486e      	ldr	r0, [pc, #440]	; (80036d0 <heap1_execute+0x240>)
 8003516:	f7ff fdb3 	bl	8003080 <chHeapStatus>
 800351a:	f1a0 0101 	sub.w	r1, r0, #1
 800351e:	fab1 f181 	clz	r1, r1
 8003522:	0949      	lsrs	r1, r1, #5
 8003524:	2003      	movs	r0, #3
 8003526:	f7fd f933 	bl	8000790 <_test_assert>
 800352a:	2800      	cmp	r0, #0
 800352c:	d1c2      	bne.n	80034b4 <heap1_execute+0x24>
 800352e:	2110      	movs	r1, #16
 8003530:	4867      	ldr	r0, [pc, #412]	; (80036d0 <heap1_execute+0x240>)
 8003532:	f7ff fe85 	bl	8003240 <chHeapAlloc>
 8003536:	2110      	movs	r1, #16
 8003538:	4604      	mov	r4, r0
 800353a:	4865      	ldr	r0, [pc, #404]	; (80036d0 <heap1_execute+0x240>)
 800353c:	f7ff fe80 	bl	8003240 <chHeapAlloc>
 8003540:	2110      	movs	r1, #16
 8003542:	4605      	mov	r5, r0
 8003544:	4862      	ldr	r0, [pc, #392]	; (80036d0 <heap1_execute+0x240>)
 8003546:	f7ff fe7b 	bl	8003240 <chHeapAlloc>
 800354a:	f7ff fdc1 	bl	80030d0 <chHeapFree>
 800354e:	4628      	mov	r0, r5
 8003550:	f7ff fdbe 	bl	80030d0 <chHeapFree>
 8003554:	4620      	mov	r0, r4
 8003556:	f7ff fdbb 	bl	80030d0 <chHeapFree>
 800355a:	a901      	add	r1, sp, #4
 800355c:	485c      	ldr	r0, [pc, #368]	; (80036d0 <heap1_execute+0x240>)
 800355e:	f7ff fd8f 	bl	8003080 <chHeapStatus>
 8003562:	f1a0 0101 	sub.w	r1, r0, #1
 8003566:	fab1 f181 	clz	r1, r1
 800356a:	0949      	lsrs	r1, r1, #5
 800356c:	2004      	movs	r0, #4
 800356e:	f7fd f90f 	bl	8000790 <_test_assert>
 8003572:	2800      	cmp	r0, #0
 8003574:	d19e      	bne.n	80034b4 <heap1_execute+0x24>
 8003576:	2111      	movs	r1, #17
 8003578:	4855      	ldr	r0, [pc, #340]	; (80036d0 <heap1_execute+0x240>)
 800357a:	f7ff fe61 	bl	8003240 <chHeapAlloc>
 800357e:	2110      	movs	r1, #16
 8003580:	4604      	mov	r4, r0
 8003582:	4853      	ldr	r0, [pc, #332]	; (80036d0 <heap1_execute+0x240>)
 8003584:	f7ff fe5c 	bl	8003240 <chHeapAlloc>
 8003588:	4605      	mov	r5, r0
 800358a:	4620      	mov	r0, r4
 800358c:	f7ff fda0 	bl	80030d0 <chHeapFree>
 8003590:	a901      	add	r1, sp, #4
 8003592:	484f      	ldr	r0, [pc, #316]	; (80036d0 <heap1_execute+0x240>)
 8003594:	f7ff fd74 	bl	8003080 <chHeapStatus>
 8003598:	f1a0 0102 	sub.w	r1, r0, #2
 800359c:	fab1 f181 	clz	r1, r1
 80035a0:	0949      	lsrs	r1, r1, #5
 80035a2:	2005      	movs	r0, #5
 80035a4:	f7fd f8f4 	bl	8000790 <_test_assert>
 80035a8:	2800      	cmp	r0, #0
 80035aa:	d183      	bne.n	80034b4 <heap1_execute+0x24>
 80035ac:	2110      	movs	r1, #16
 80035ae:	4848      	ldr	r0, [pc, #288]	; (80036d0 <heap1_execute+0x240>)
 80035b0:	f7ff fe46 	bl	8003240 <chHeapAlloc>
 80035b4:	a901      	add	r1, sp, #4
 80035b6:	4604      	mov	r4, r0
 80035b8:	4845      	ldr	r0, [pc, #276]	; (80036d0 <heap1_execute+0x240>)
 80035ba:	f7ff fd61 	bl	8003080 <chHeapStatus>
 80035be:	2801      	cmp	r0, #1
 80035c0:	f000 8083 	beq.w	80036ca <heap1_execute+0x23a>
 80035c4:	a901      	add	r1, sp, #4
 80035c6:	4842      	ldr	r0, [pc, #264]	; (80036d0 <heap1_execute+0x240>)
 80035c8:	f7ff fd5a 	bl	8003080 <chHeapStatus>
 80035cc:	f1a0 0102 	sub.w	r1, r0, #2
 80035d0:	fab1 f181 	clz	r1, r1
 80035d4:	0949      	lsrs	r1, r1, #5
 80035d6:	2006      	movs	r0, #6
 80035d8:	f7fd f8da 	bl	8000790 <_test_assert>
 80035dc:	2800      	cmp	r0, #0
 80035de:	f47f af69 	bne.w	80034b4 <heap1_execute+0x24>
 80035e2:	4628      	mov	r0, r5
 80035e4:	f7ff fd74 	bl	80030d0 <chHeapFree>
 80035e8:	4620      	mov	r0, r4
 80035ea:	f7ff fd71 	bl	80030d0 <chHeapFree>
 80035ee:	a901      	add	r1, sp, #4
 80035f0:	4837      	ldr	r0, [pc, #220]	; (80036d0 <heap1_execute+0x240>)
 80035f2:	f7ff fd45 	bl	8003080 <chHeapStatus>
 80035f6:	f1a0 0101 	sub.w	r1, r0, #1
 80035fa:	fab1 f181 	clz	r1, r1
 80035fe:	0949      	lsrs	r1, r1, #5
 8003600:	2007      	movs	r0, #7
 8003602:	f7fd f8c5 	bl	8000790 <_test_assert>
 8003606:	2800      	cmp	r0, #0
 8003608:	f47f af54 	bne.w	80034b4 <heap1_execute+0x24>
 800360c:	2110      	movs	r1, #16
 800360e:	4830      	ldr	r0, [pc, #192]	; (80036d0 <heap1_execute+0x240>)
 8003610:	f7ff fe16 	bl	8003240 <chHeapAlloc>
 8003614:	2110      	movs	r1, #16
 8003616:	4605      	mov	r5, r0
 8003618:	482d      	ldr	r0, [pc, #180]	; (80036d0 <heap1_execute+0x240>)
 800361a:	f7ff fe11 	bl	8003240 <chHeapAlloc>
 800361e:	4604      	mov	r4, r0
 8003620:	4628      	mov	r0, r5
 8003622:	f7ff fd55 	bl	80030d0 <chHeapFree>
 8003626:	a901      	add	r1, sp, #4
 8003628:	4829      	ldr	r0, [pc, #164]	; (80036d0 <heap1_execute+0x240>)
 800362a:	f7ff fd29 	bl	8003080 <chHeapStatus>
 800362e:	1e85      	subs	r5, r0, #2
 8003630:	4269      	negs	r1, r5
 8003632:	4169      	adcs	r1, r5
 8003634:	2008      	movs	r0, #8
 8003636:	f7fd f8ab 	bl	8000790 <_test_assert>
 800363a:	2800      	cmp	r0, #0
 800363c:	f47f af3a 	bne.w	80034b4 <heap1_execute+0x24>
 8003640:	2120      	movs	r1, #32
 8003642:	4823      	ldr	r0, [pc, #140]	; (80036d0 <heap1_execute+0x240>)
 8003644:	f7ff fdfc 	bl	8003240 <chHeapAlloc>
 8003648:	f7ff fd42 	bl	80030d0 <chHeapFree>
 800364c:	4620      	mov	r0, r4
 800364e:	f7ff fd3f 	bl	80030d0 <chHeapFree>
 8003652:	a901      	add	r1, sp, #4
 8003654:	481e      	ldr	r0, [pc, #120]	; (80036d0 <heap1_execute+0x240>)
 8003656:	f7ff fd13 	bl	8003080 <chHeapStatus>
 800365a:	3801      	subs	r0, #1
 800365c:	4241      	negs	r1, r0
 800365e:	4141      	adcs	r1, r0
 8003660:	2009      	movs	r0, #9
 8003662:	f7fd f895 	bl	8000790 <_test_assert>
 8003666:	2800      	cmp	r0, #0
 8003668:	f47f af24 	bne.w	80034b4 <heap1_execute+0x24>
 800366c:	a901      	add	r1, sp, #4
 800366e:	4818      	ldr	r0, [pc, #96]	; (80036d0 <heap1_execute+0x240>)
 8003670:	f7ff fd06 	bl	8003080 <chHeapStatus>
 8003674:	9901      	ldr	r1, [sp, #4]
 8003676:	4816      	ldr	r0, [pc, #88]	; (80036d0 <heap1_execute+0x240>)
 8003678:	f7ff fde2 	bl	8003240 <chHeapAlloc>
 800367c:	a901      	add	r1, sp, #4
 800367e:	4604      	mov	r4, r0
 8003680:	4813      	ldr	r0, [pc, #76]	; (80036d0 <heap1_execute+0x240>)
 8003682:	f7ff fcfd 	bl	8003080 <chHeapStatus>
 8003686:	fab0 f180 	clz	r1, r0
 800368a:	0949      	lsrs	r1, r1, #5
 800368c:	200a      	movs	r0, #10
 800368e:	f7fd f87f 	bl	8000790 <_test_assert>
 8003692:	2800      	cmp	r0, #0
 8003694:	f47f af0e 	bne.w	80034b4 <heap1_execute+0x24>
 8003698:	4620      	mov	r0, r4
 800369a:	f7ff fd19 	bl	80030d0 <chHeapFree>
 800369e:	a901      	add	r1, sp, #4
 80036a0:	480b      	ldr	r0, [pc, #44]	; (80036d0 <heap1_execute+0x240>)
 80036a2:	f7ff fced 	bl	8003080 <chHeapStatus>
 80036a6:	1e42      	subs	r2, r0, #1
 80036a8:	4251      	negs	r1, r2
 80036aa:	4151      	adcs	r1, r2
 80036ac:	200b      	movs	r0, #11
 80036ae:	f7fd f86f 	bl	8000790 <_test_assert>
 80036b2:	2800      	cmp	r0, #0
 80036b4:	f47f aefe 	bne.w	80034b4 <heap1_execute+0x24>
 80036b8:	e9dd 3100 	ldrd	r3, r1, [sp]
 80036bc:	1acb      	subs	r3, r1, r3
 80036be:	4259      	negs	r1, r3
 80036c0:	4159      	adcs	r1, r3
 80036c2:	200c      	movs	r0, #12
 80036c4:	f7fd f864 	bl	8000790 <_test_assert>
 80036c8:	e6f4      	b.n	80034b4 <heap1_execute+0x24>
 80036ca:	4601      	mov	r1, r0
 80036cc:	e783      	b.n	80035d6 <heap1_execute+0x146>
 80036ce:	bf00      	nop
 80036d0:	200011a8 	.word	0x200011a8
	...

080036e0 <chSemWait>:
 80036e0:	2320      	movs	r3, #32
 80036e2:	f383 8811 	msr	BASEPRI, r3
 80036e6:	6883      	ldr	r3, [r0, #8]
 80036e8:	3b01      	subs	r3, #1
 80036ea:	2b00      	cmp	r3, #0
 80036ec:	6083      	str	r3, [r0, #8]
 80036ee:	db04      	blt.n	80036fa <chSemWait+0x1a>
 80036f0:	2000      	movs	r0, #0
 80036f2:	2300      	movs	r3, #0
 80036f4:	f383 8811 	msr	BASEPRI, r3
 80036f8:	4770      	bx	lr
 80036fa:	b510      	push	{r4, lr}
 80036fc:	4c08      	ldr	r4, [pc, #32]	; (8003720 <chSemWait+0x40>)
 80036fe:	69a2      	ldr	r2, [r4, #24]
 8003700:	6210      	str	r0, [r2, #32]
 8003702:	6010      	str	r0, [r2, #0]
 8003704:	6841      	ldr	r1, [r0, #4]
 8003706:	6051      	str	r1, [r2, #4]
 8003708:	4603      	mov	r3, r0
 800370a:	600a      	str	r2, [r1, #0]
 800370c:	2005      	movs	r0, #5
 800370e:	605a      	str	r2, [r3, #4]
 8003710:	f7fe f94e 	bl	80019b0 <chSchGoSleepS>
 8003714:	69a3      	ldr	r3, [r4, #24]
 8003716:	6a18      	ldr	r0, [r3, #32]
 8003718:	2300      	movs	r3, #0
 800371a:	f383 8811 	msr	BASEPRI, r3
 800371e:	bd10      	pop	{r4, pc}
 8003720:	20000930 	.word	0x20000930
	...

08003730 <bmk11_execute>:
 8003730:	b570      	push	{r4, r5, r6, lr}
 8003732:	f7ff f8ad 	bl	8002890 <test_wait_tick>
 8003736:	f7fd fd3b 	bl	80011b0 <test_start_timer.constprop.1>
 800373a:	4e15      	ldr	r6, [pc, #84]	; (8003790 <bmk11_execute+0x60>)
 800373c:	4c15      	ldr	r4, [pc, #84]	; (8003794 <bmk11_execute+0x64>)
 800373e:	2500      	movs	r5, #0
 8003740:	4620      	mov	r0, r4
 8003742:	f7ff ffcd 	bl	80036e0 <chSemWait>
 8003746:	4620      	mov	r0, r4
 8003748:	f7fe f8da 	bl	8001900 <chSemSignal>
 800374c:	4620      	mov	r0, r4
 800374e:	f7ff ffc7 	bl	80036e0 <chSemWait>
 8003752:	4620      	mov	r0, r4
 8003754:	f7fe f8d4 	bl	8001900 <chSemSignal>
 8003758:	4620      	mov	r0, r4
 800375a:	f7ff ffc1 	bl	80036e0 <chSemWait>
 800375e:	4620      	mov	r0, r4
 8003760:	f7fe f8ce 	bl	8001900 <chSemSignal>
 8003764:	4620      	mov	r0, r4
 8003766:	f7ff ffbb 	bl	80036e0 <chSemWait>
 800376a:	4620      	mov	r0, r4
 800376c:	f7fe f8c8 	bl	8001900 <chSemSignal>
 8003770:	7833      	ldrb	r3, [r6, #0]
 8003772:	3501      	adds	r5, #1
 8003774:	2b00      	cmp	r3, #0
 8003776:	d0e3      	beq.n	8003740 <bmk11_execute+0x10>
 8003778:	4807      	ldr	r0, [pc, #28]	; (8003798 <bmk11_execute+0x68>)
 800377a:	f7fd f879 	bl	8000870 <test_print>
 800377e:	00a8      	lsls	r0, r5, #2
 8003780:	f7fc ff7e 	bl	8000680 <test_printn>
 8003784:	4805      	ldr	r0, [pc, #20]	; (800379c <bmk11_execute+0x6c>)
 8003786:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800378a:	f7fd b851 	b.w	8000830 <test_println>
 800378e:	bf00      	nop
 8003790:	200011c8 	.word	0x200011c8
 8003794:	20000b28 	.word	0x20000b28
 8003798:	08005bd0 	.word	0x08005bd0
 800379c:	08005bf0 	.word	0x08005bf0

080037a0 <thread3.lto_priv.66>:
 80037a0:	b538      	push	{r3, r4, r5, lr}
 80037a2:	4c07      	ldr	r4, [pc, #28]	; (80037c0 <thread3.lto_priv.66+0x20>)
 80037a4:	69a3      	ldr	r3, [r4, #24]
 80037a6:	7f5b      	ldrb	r3, [r3, #29]
 80037a8:	075a      	lsls	r2, r3, #29
 80037aa:	d407      	bmi.n	80037bc <thread3.lto_priv.66+0x1c>
 80037ac:	4d05      	ldr	r5, [pc, #20]	; (80037c4 <thread3.lto_priv.66+0x24>)
 80037ae:	4628      	mov	r0, r5
 80037b0:	f7ff ff96 	bl	80036e0 <chSemWait>
 80037b4:	69a3      	ldr	r3, [r4, #24]
 80037b6:	7f5b      	ldrb	r3, [r3, #29]
 80037b8:	075b      	lsls	r3, r3, #29
 80037ba:	d5f8      	bpl.n	80037ae <thread3.lto_priv.66+0xe>
 80037bc:	bd38      	pop	{r3, r4, r5, pc}
 80037be:	bf00      	nop
 80037c0:	20000930 	.word	0x20000930
 80037c4:	20000b28 	.word	0x20000b28
	...

080037d0 <sem4_execute>:
 80037d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80037d2:	b087      	sub	sp, #28
 80037d4:	ac03      	add	r4, sp, #12
 80037d6:	2500      	movs	r5, #0
 80037d8:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80037dc:	9505      	str	r5, [sp, #20]
 80037de:	2620      	movs	r6, #32
 80037e0:	f386 8811 	msr	BASEPRI, r6
 80037e4:	4629      	mov	r1, r5
 80037e6:	4620      	mov	r0, r4
 80037e8:	f7fd fc52 	bl	8001090 <chSemResetI>
 80037ec:	f7fd fe98 	bl	8001520 <chSchRescheduleS>
 80037f0:	f385 8811 	msr	BASEPRI, r5
 80037f4:	f386 8811 	msr	BASEPRI, r6
 80037f8:	9905      	ldr	r1, [sp, #20]
 80037fa:	42a9      	cmp	r1, r5
 80037fc:	bfcc      	ite	gt
 80037fe:	2100      	movgt	r1, #0
 8003800:	2101      	movle	r1, #1
 8003802:	2001      	movs	r0, #1
 8003804:	f7fc ffc4 	bl	8000790 <_test_assert>
 8003808:	b118      	cbz	r0, 8003812 <sem4_execute+0x42>
 800380a:	f385 8811 	msr	BASEPRI, r5
 800380e:	b007      	add	sp, #28
 8003810:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003812:	4607      	mov	r7, r0
 8003814:	f380 8811 	msr	BASEPRI, r0
 8003818:	4a41      	ldr	r2, [pc, #260]	; (8003920 <sem4_execute+0x150>)
 800381a:	4b42      	ldr	r3, [pc, #264]	; (8003924 <sem4_execute+0x154>)
 800381c:	6992      	ldr	r2, [r2, #24]
 800381e:	4842      	ldr	r0, [pc, #264]	; (8003928 <sem4_execute+0x158>)
 8003820:	6892      	ldr	r2, [r2, #8]
 8003822:	9400      	str	r4, [sp, #0]
 8003824:	3a01      	subs	r2, #1
 8003826:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800382a:	f7fe f889 	bl	8001940 <chThdCreateStatic>
 800382e:	4b3f      	ldr	r3, [pc, #252]	; (800392c <sem4_execute+0x15c>)
 8003830:	6018      	str	r0, [r3, #0]
 8003832:	4620      	mov	r0, r4
 8003834:	f7ff ff54 	bl	80036e0 <chSemWait>
 8003838:	f386 8811 	msr	BASEPRI, r6
 800383c:	9905      	ldr	r1, [sp, #20]
 800383e:	2900      	cmp	r1, #0
 8003840:	bfcc      	ite	gt
 8003842:	2100      	movgt	r1, #0
 8003844:	2101      	movle	r1, #1
 8003846:	2002      	movs	r0, #2
 8003848:	f7fc ffa2 	bl	8000790 <_test_assert>
 800384c:	b118      	cbz	r0, 8003856 <sem4_execute+0x86>
 800384e:	f387 8811 	msr	BASEPRI, r7
 8003852:	b007      	add	sp, #28
 8003854:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003856:	f380 8811 	msr	BASEPRI, r0
 800385a:	f386 8811 	msr	BASEPRI, r6
 800385e:	9b05      	ldr	r3, [sp, #20]
 8003860:	2b00      	cmp	r3, #0
 8003862:	dd24      	ble.n	80038ae <sem4_execute+0xde>
 8003864:	f7fd fe5c 	bl	8001520 <chSchRescheduleS>
 8003868:	2500      	movs	r5, #0
 800386a:	f385 8811 	msr	BASEPRI, r5
 800386e:	2720      	movs	r7, #32
 8003870:	f387 8811 	msr	BASEPRI, r7
 8003874:	9905      	ldr	r1, [sp, #20]
 8003876:	42a9      	cmp	r1, r5
 8003878:	f04f 0003 	mov.w	r0, #3
 800387c:	bfd4      	ite	le
 800387e:	2100      	movle	r1, #0
 8003880:	2101      	movgt	r1, #1
 8003882:	f7fc ff85 	bl	8000790 <_test_assert>
 8003886:	4606      	mov	r6, r0
 8003888:	2800      	cmp	r0, #0
 800388a:	d1be      	bne.n	800380a <sem4_execute+0x3a>
 800388c:	f380 8811 	msr	BASEPRI, r0
 8003890:	f387 8811 	msr	BASEPRI, r7
 8003894:	9905      	ldr	r1, [sp, #20]
 8003896:	f1a1 0101 	sub.w	r1, r1, #1
 800389a:	fab1 f181 	clz	r1, r1
 800389e:	2004      	movs	r0, #4
 80038a0:	0949      	lsrs	r1, r1, #5
 80038a2:	f7fc ff75 	bl	8000790 <_test_assert>
 80038a6:	b130      	cbz	r0, 80038b6 <sem4_execute+0xe6>
 80038a8:	f386 8811 	msr	BASEPRI, r6
 80038ac:	e7af      	b.n	800380e <sem4_execute+0x3e>
 80038ae:	4620      	mov	r0, r4
 80038b0:	f7fd fb7e 	bl	8000fb0 <chSemSignalI>
 80038b4:	e7d6      	b.n	8003864 <sem4_execute+0x94>
 80038b6:	f380 8811 	msr	BASEPRI, r0
 80038ba:	f387 8811 	msr	BASEPRI, r7
 80038be:	9b05      	ldr	r3, [sp, #20]
 80038c0:	2b00      	cmp	r3, #0
 80038c2:	dd28      	ble.n	8003916 <sem4_execute+0x146>
 80038c4:	f7fd fe2c 	bl	8001520 <chSchRescheduleS>
 80038c8:	2400      	movs	r4, #0
 80038ca:	f384 8811 	msr	BASEPRI, r4
 80038ce:	2620      	movs	r6, #32
 80038d0:	f386 8811 	msr	BASEPRI, r6
 80038d4:	9905      	ldr	r1, [sp, #20]
 80038d6:	42a1      	cmp	r1, r4
 80038d8:	f04f 0003 	mov.w	r0, #3
 80038dc:	bfd4      	ite	le
 80038de:	2100      	movle	r1, #0
 80038e0:	2101      	movgt	r1, #1
 80038e2:	f7fc ff55 	bl	8000790 <_test_assert>
 80038e6:	4605      	mov	r5, r0
 80038e8:	b110      	cbz	r0, 80038f0 <sem4_execute+0x120>
 80038ea:	f384 8811 	msr	BASEPRI, r4
 80038ee:	e78e      	b.n	800380e <sem4_execute+0x3e>
 80038f0:	f380 8811 	msr	BASEPRI, r0
 80038f4:	f386 8811 	msr	BASEPRI, r6
 80038f8:	9905      	ldr	r1, [sp, #20]
 80038fa:	f1a1 0101 	sub.w	r1, r1, #1
 80038fe:	fab1 f181 	clz	r1, r1
 8003902:	2005      	movs	r0, #5
 8003904:	0949      	lsrs	r1, r1, #5
 8003906:	f7fc ff43 	bl	8000790 <_test_assert>
 800390a:	2800      	cmp	r0, #0
 800390c:	f47f af7d 	bne.w	800380a <sem4_execute+0x3a>
 8003910:	f380 8811 	msr	BASEPRI, r0
 8003914:	e77b      	b.n	800380e <sem4_execute+0x3e>
 8003916:	4620      	mov	r0, r4
 8003918:	f7fd fb4a 	bl	8000fb0 <chSemSignalI>
 800391c:	e7d2      	b.n	80038c4 <sem4_execute+0xf4>
 800391e:	bf00      	nop
 8003920:	20000930 	.word	0x20000930
 8003924:	08001541 	.word	0x08001541
 8003928:	20000b38 	.word	0x20000b38
 800392c:	200011cc 	.word	0x200011cc

08003930 <thread3.lto_priv.65>:
 8003930:	b510      	push	{r4, lr}
 8003932:	4c04      	ldr	r4, [pc, #16]	; (8003944 <thread3.lto_priv.65+0x14>)
 8003934:	4620      	mov	r0, r4
 8003936:	f7ff fed3 	bl	80036e0 <chSemWait>
 800393a:	4620      	mov	r0, r4
 800393c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003940:	f7fd bfde 	b.w	8001900 <chSemSignal>
 8003944:	200008ac 	.word	0x200008ac
	...

08003950 <thread1.lto_priv.67>:
 8003950:	b510      	push	{r4, lr}
 8003952:	4604      	mov	r4, r0
 8003954:	4803      	ldr	r0, [pc, #12]	; (8003964 <thread1.lto_priv.67+0x14>)
 8003956:	f7ff fec3 	bl	80036e0 <chSemWait>
 800395a:	7820      	ldrb	r0, [r4, #0]
 800395c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003960:	f7fc bf2e 	b.w	80007c0 <test_emit_token>
 8003964:	200008ac 	.word	0x200008ac
	...

08003970 <chThdWait>:
 8003970:	b538      	push	{r3, r4, r5, lr}
 8003972:	4604      	mov	r4, r0
 8003974:	2320      	movs	r3, #32
 8003976:	f383 8811 	msr	BASEPRI, r3
 800397a:	7f03      	ldrb	r3, [r0, #28]
 800397c:	2b0f      	cmp	r3, #15
 800397e:	d007      	beq.n	8003990 <chThdWait+0x20>
 8003980:	4b08      	ldr	r3, [pc, #32]	; (80039a4 <chThdWait+0x34>)
 8003982:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003984:	699b      	ldr	r3, [r3, #24]
 8003986:	2009      	movs	r0, #9
 8003988:	601a      	str	r2, [r3, #0]
 800398a:	6263      	str	r3, [r4, #36]	; 0x24
 800398c:	f7fe f810 	bl	80019b0 <chSchGoSleepS>
 8003990:	6a25      	ldr	r5, [r4, #32]
 8003992:	2300      	movs	r3, #0
 8003994:	f383 8811 	msr	BASEPRI, r3
 8003998:	4620      	mov	r0, r4
 800399a:	f7ff fbe1 	bl	8003160 <chThdRelease>
 800399e:	4628      	mov	r0, r5
 80039a0:	bd38      	pop	{r3, r4, r5, pc}
 80039a2:	bf00      	nop
 80039a4:	20000930 	.word	0x20000930
	...

080039b0 <bmk5_execute>:
 80039b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80039b4:	4b15      	ldr	r3, [pc, #84]	; (8003a0c <bmk5_execute+0x5c>)
 80039b6:	f8df 9064 	ldr.w	r9, [pc, #100]	; 8003a1c <bmk5_execute+0x6c>
 80039ba:	699b      	ldr	r3, [r3, #24]
 80039bc:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8003a20 <bmk5_execute+0x70>
 80039c0:	689d      	ldr	r5, [r3, #8]
 80039c2:	4f13      	ldr	r7, [pc, #76]	; (8003a10 <bmk5_execute+0x60>)
 80039c4:	b083      	sub	sp, #12
 80039c6:	f7fe ff63 	bl	8002890 <test_wait_tick>
 80039ca:	f7fd fbf1 	bl	80011b0 <test_start_timer.constprop.1>
 80039ce:	2400      	movs	r4, #0
 80039d0:	3d01      	subs	r5, #1
 80039d2:	4626      	mov	r6, r4
 80039d4:	4643      	mov	r3, r8
 80039d6:	462a      	mov	r2, r5
 80039d8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80039dc:	9600      	str	r6, [sp, #0]
 80039de:	4638      	mov	r0, r7
 80039e0:	f7fd ffae 	bl	8001940 <chThdCreateStatic>
 80039e4:	f7ff ffc4 	bl	8003970 <chThdWait>
 80039e8:	f899 3000 	ldrb.w	r3, [r9]
 80039ec:	3401      	adds	r4, #1
 80039ee:	2b00      	cmp	r3, #0
 80039f0:	d0f0      	beq.n	80039d4 <bmk5_execute+0x24>
 80039f2:	4808      	ldr	r0, [pc, #32]	; (8003a14 <bmk5_execute+0x64>)
 80039f4:	f7fc ff3c 	bl	8000870 <test_print>
 80039f8:	4620      	mov	r0, r4
 80039fa:	f7fc fe41 	bl	8000680 <test_printn>
 80039fe:	4806      	ldr	r0, [pc, #24]	; (8003a18 <bmk5_execute+0x68>)
 8003a00:	b003      	add	sp, #12
 8003a02:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003a06:	f7fc bf13 	b.w	8000830 <test_println>
 8003a0a:	bf00      	nop
 8003a0c:	20000930 	.word	0x20000930
 8003a10:	20000b38 	.word	0x20000b38
 8003a14:	08005bd0 	.word	0x08005bd0
 8003a18:	08005cd0 	.word	0x08005cd0
 8003a1c:	200011c8 	.word	0x200011c8
 8003a20:	08005b61 	.word	0x08005b61
	...

08003a30 <test_wait_threads>:
 8003a30:	b570      	push	{r4, r5, r6, lr}
 8003a32:	4c07      	ldr	r4, [pc, #28]	; (8003a50 <test_wait_threads+0x20>)
 8003a34:	2600      	movs	r6, #0
 8003a36:	f104 0514 	add.w	r5, r4, #20
 8003a3a:	f854 0b04 	ldr.w	r0, [r4], #4
 8003a3e:	b118      	cbz	r0, 8003a48 <test_wait_threads+0x18>
 8003a40:	f7ff ff96 	bl	8003970 <chThdWait>
 8003a44:	f844 6c04 	str.w	r6, [r4, #-4]
 8003a48:	42ac      	cmp	r4, r5
 8003a4a:	d1f6      	bne.n	8003a3a <test_wait_threads+0xa>
 8003a4c:	bd70      	pop	{r4, r5, r6, pc}
 8003a4e:	bf00      	nop
 8003a50:	200011cc 	.word	0x200011cc
	...

08003a60 <bmk8_execute>:
 8003a60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003a64:	b084      	sub	sp, #16
 8003a66:	ac04      	add	r4, sp, #16
 8003a68:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8003b38 <bmk8_execute+0xd8>
 8003a6c:	4f2d      	ldr	r7, [pc, #180]	; (8003b24 <bmk8_execute+0xc4>)
 8003a6e:	4e2e      	ldr	r6, [pc, #184]	; (8003b28 <bmk8_execute+0xc8>)
 8003a70:	4d2e      	ldr	r5, [pc, #184]	; (8003b2c <bmk8_execute+0xcc>)
 8003a72:	2300      	movs	r3, #0
 8003a74:	f844 3d04 	str.w	r3, [r4, #-4]!
 8003a78:	f7fe ff0a 	bl	8002890 <test_wait_tick>
 8003a7c:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003a80:	689a      	ldr	r2, [r3, #8]
 8003a82:	9400      	str	r4, [sp, #0]
 8003a84:	463b      	mov	r3, r7
 8003a86:	3a01      	subs	r2, #1
 8003a88:	4630      	mov	r0, r6
 8003a8a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003a8e:	f7fd ff57 	bl	8001940 <chThdCreateStatic>
 8003a92:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003a96:	6028      	str	r0, [r5, #0]
 8003a98:	689a      	ldr	r2, [r3, #8]
 8003a9a:	9400      	str	r4, [sp, #0]
 8003a9c:	463b      	mov	r3, r7
 8003a9e:	3a01      	subs	r2, #1
 8003aa0:	f506 70a4 	add.w	r0, r6, #328	; 0x148
 8003aa4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003aa8:	f7fd ff4a 	bl	8001940 <chThdCreateStatic>
 8003aac:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003ab0:	6068      	str	r0, [r5, #4]
 8003ab2:	689a      	ldr	r2, [r3, #8]
 8003ab4:	9400      	str	r4, [sp, #0]
 8003ab6:	463b      	mov	r3, r7
 8003ab8:	3a01      	subs	r2, #1
 8003aba:	f506 7024 	add.w	r0, r6, #656	; 0x290
 8003abe:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003ac2:	f7fd ff3d 	bl	8001940 <chThdCreateStatic>
 8003ac6:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003aca:	60a8      	str	r0, [r5, #8]
 8003acc:	689a      	ldr	r2, [r3, #8]
 8003ace:	9400      	str	r4, [sp, #0]
 8003ad0:	463b      	mov	r3, r7
 8003ad2:	3a01      	subs	r2, #1
 8003ad4:	f506 7076 	add.w	r0, r6, #984	; 0x3d8
 8003ad8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003adc:	f7fd ff30 	bl	8001940 <chThdCreateStatic>
 8003ae0:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003ae4:	60e8      	str	r0, [r5, #12]
 8003ae6:	689a      	ldr	r2, [r3, #8]
 8003ae8:	9400      	str	r4, [sp, #0]
 8003aea:	3a01      	subs	r2, #1
 8003aec:	463b      	mov	r3, r7
 8003aee:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003af2:	f506 60a4 	add.w	r0, r6, #1312	; 0x520
 8003af6:	f7fd ff23 	bl	8001940 <chThdCreateStatic>
 8003afa:	6128      	str	r0, [r5, #16]
 8003afc:	f242 7010 	movw	r0, #10000	; 0x2710
 8003b00:	f7fe fde6 	bl	80026d0 <chThdSleep>
 8003b04:	f7fc fde4 	bl	80006d0 <test_terminate_threads>
 8003b08:	f7ff ff92 	bl	8003a30 <test_wait_threads>
 8003b0c:	4808      	ldr	r0, [pc, #32]	; (8003b30 <bmk8_execute+0xd0>)
 8003b0e:	f7fc feaf 	bl	8000870 <test_print>
 8003b12:	9803      	ldr	r0, [sp, #12]
 8003b14:	f7fc fdb4 	bl	8000680 <test_printn>
 8003b18:	4806      	ldr	r0, [pc, #24]	; (8003b34 <bmk8_execute+0xd4>)
 8003b1a:	f7fc fe89 	bl	8000830 <test_println>
 8003b1e:	b004      	add	sp, #16
 8003b20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003b24:	080014b1 	.word	0x080014b1
 8003b28:	20000b38 	.word	0x20000b38
 8003b2c:	200011cc 	.word	0x200011cc
 8003b30:	08005bd0 	.word	0x08005bd0
 8003b34:	08005d00 	.word	0x08005d00
 8003b38:	20000930 	.word	0x20000930
 8003b3c:	00000000 	.word	0x00000000

08003b40 <bmk7_execute>:
 8003b40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003b44:	4e3a      	ldr	r6, [pc, #232]	; (8003c30 <bmk7_execute+0xf0>)
 8003b46:	4b3b      	ldr	r3, [pc, #236]	; (8003c34 <bmk7_execute+0xf4>)
 8003b48:	69b2      	ldr	r2, [r6, #24]
 8003b4a:	483b      	ldr	r0, [pc, #236]	; (8003c38 <bmk7_execute+0xf8>)
 8003b4c:	6892      	ldr	r2, [r2, #8]
 8003b4e:	4d3b      	ldr	r5, [pc, #236]	; (8003c3c <bmk7_execute+0xfc>)
 8003b50:	f8df 810c 	ldr.w	r8, [pc, #268]	; 8003c60 <bmk7_execute+0x120>
 8003b54:	4f3a      	ldr	r7, [pc, #232]	; (8003c40 <bmk7_execute+0x100>)
 8003b56:	b082      	sub	sp, #8
 8003b58:	2400      	movs	r4, #0
 8003b5a:	3205      	adds	r2, #5
 8003b5c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b60:	9400      	str	r4, [sp, #0]
 8003b62:	f7fd feed 	bl	8001940 <chThdCreateStatic>
 8003b66:	69b3      	ldr	r3, [r6, #24]
 8003b68:	6028      	str	r0, [r5, #0]
 8003b6a:	689a      	ldr	r2, [r3, #8]
 8003b6c:	4835      	ldr	r0, [pc, #212]	; (8003c44 <bmk7_execute+0x104>)
 8003b6e:	4b31      	ldr	r3, [pc, #196]	; (8003c34 <bmk7_execute+0xf4>)
 8003b70:	9400      	str	r4, [sp, #0]
 8003b72:	3204      	adds	r2, #4
 8003b74:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b78:	f7fd fee2 	bl	8001940 <chThdCreateStatic>
 8003b7c:	69b3      	ldr	r3, [r6, #24]
 8003b7e:	6068      	str	r0, [r5, #4]
 8003b80:	689a      	ldr	r2, [r3, #8]
 8003b82:	4831      	ldr	r0, [pc, #196]	; (8003c48 <bmk7_execute+0x108>)
 8003b84:	4b2b      	ldr	r3, [pc, #172]	; (8003c34 <bmk7_execute+0xf4>)
 8003b86:	9400      	str	r4, [sp, #0]
 8003b88:	3203      	adds	r2, #3
 8003b8a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b8e:	f7fd fed7 	bl	8001940 <chThdCreateStatic>
 8003b92:	69b3      	ldr	r3, [r6, #24]
 8003b94:	60a8      	str	r0, [r5, #8]
 8003b96:	689a      	ldr	r2, [r3, #8]
 8003b98:	482c      	ldr	r0, [pc, #176]	; (8003c4c <bmk7_execute+0x10c>)
 8003b9a:	4b26      	ldr	r3, [pc, #152]	; (8003c34 <bmk7_execute+0xf4>)
 8003b9c:	9400      	str	r4, [sp, #0]
 8003b9e:	3202      	adds	r2, #2
 8003ba0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003ba4:	f7fd fecc 	bl	8001940 <chThdCreateStatic>
 8003ba8:	69b3      	ldr	r3, [r6, #24]
 8003baa:	60e8      	str	r0, [r5, #12]
 8003bac:	689a      	ldr	r2, [r3, #8]
 8003bae:	4828      	ldr	r0, [pc, #160]	; (8003c50 <bmk7_execute+0x110>)
 8003bb0:	4b20      	ldr	r3, [pc, #128]	; (8003c34 <bmk7_execute+0xf4>)
 8003bb2:	9400      	str	r4, [sp, #0]
 8003bb4:	3201      	adds	r2, #1
 8003bb6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003bba:	f7fd fec1 	bl	8001940 <chThdCreateStatic>
 8003bbe:	6128      	str	r0, [r5, #16]
 8003bc0:	f7fe fe66 	bl	8002890 <test_wait_tick>
 8003bc4:	f7fd faf4 	bl	80011b0 <test_start_timer.constprop.1>
 8003bc8:	4625      	mov	r5, r4
 8003bca:	2620      	movs	r6, #32
 8003bcc:	f386 8811 	msr	BASEPRI, r6
 8003bd0:	2100      	movs	r1, #0
 8003bd2:	4638      	mov	r0, r7
 8003bd4:	f7fd fa5c 	bl	8001090 <chSemResetI>
 8003bd8:	f7fd fca2 	bl	8001520 <chSchRescheduleS>
 8003bdc:	f385 8811 	msr	BASEPRI, r5
 8003be0:	f898 3000 	ldrb.w	r3, [r8]
 8003be4:	3401      	adds	r4, #1
 8003be6:	2b00      	cmp	r3, #0
 8003be8:	d0f0      	beq.n	8003bcc <bmk7_execute+0x8c>
 8003bea:	f7fc fd71 	bl	80006d0 <test_terminate_threads>
 8003bee:	f386 8811 	msr	BASEPRI, r6
 8003bf2:	2100      	movs	r1, #0
 8003bf4:	4812      	ldr	r0, [pc, #72]	; (8003c40 <bmk7_execute+0x100>)
 8003bf6:	f7fd fa4b 	bl	8001090 <chSemResetI>
 8003bfa:	f7fd fc91 	bl	8001520 <chSchRescheduleS>
 8003bfe:	f385 8811 	msr	BASEPRI, r5
 8003c02:	f7ff ff15 	bl	8003a30 <test_wait_threads>
 8003c06:	4813      	ldr	r0, [pc, #76]	; (8003c54 <bmk7_execute+0x114>)
 8003c08:	f7fc fe32 	bl	8000870 <test_print>
 8003c0c:	4620      	mov	r0, r4
 8003c0e:	f7fc fd37 	bl	8000680 <test_printn>
 8003c12:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8003c16:	4810      	ldr	r0, [pc, #64]	; (8003c58 <bmk7_execute+0x118>)
 8003c18:	f7fc fe2a 	bl	8000870 <test_print>
 8003c1c:	0060      	lsls	r0, r4, #1
 8003c1e:	f7fc fd2f 	bl	8000680 <test_printn>
 8003c22:	480e      	ldr	r0, [pc, #56]	; (8003c5c <bmk7_execute+0x11c>)
 8003c24:	b002      	add	sp, #8
 8003c26:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003c2a:	f7fc be01 	b.w	8000830 <test_println>
 8003c2e:	bf00      	nop
 8003c30:	20000930 	.word	0x20000930
 8003c34:	080037a1 	.word	0x080037a1
 8003c38:	20000b38 	.word	0x20000b38
 8003c3c:	200011cc 	.word	0x200011cc
 8003c40:	20000b28 	.word	0x20000b28
 8003c44:	20000c80 	.word	0x20000c80
 8003c48:	20000dc8 	.word	0x20000dc8
 8003c4c:	20000f10 	.word	0x20000f10
 8003c50:	20001058 	.word	0x20001058
 8003c54:	08005bd0 	.word	0x08005bd0
 8003c58:	08005ce0 	.word	0x08005ce0
 8003c5c:	08005d00 	.word	0x08005d00
 8003c60:	200011c8 	.word	0x200011c8
	...

08003c70 <bmk4_execute>:
 8003c70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003c74:	4a23      	ldr	r2, [pc, #140]	; (8003d04 <bmk4_execute+0x94>)
 8003c76:	4b24      	ldr	r3, [pc, #144]	; (8003d08 <bmk4_execute+0x98>)
 8003c78:	6992      	ldr	r2, [r2, #24]
 8003c7a:	4824      	ldr	r0, [pc, #144]	; (8003d0c <bmk4_execute+0x9c>)
 8003c7c:	6892      	ldr	r2, [r2, #8]
 8003c7e:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8003d1c <bmk4_execute+0xac>
 8003c82:	b082      	sub	sp, #8
 8003c84:	2500      	movs	r5, #0
 8003c86:	3201      	adds	r2, #1
 8003c88:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003c8c:	9500      	str	r5, [sp, #0]
 8003c8e:	f7fd fe57 	bl	8001940 <chThdCreateStatic>
 8003c92:	4b1f      	ldr	r3, [pc, #124]	; (8003d10 <bmk4_execute+0xa0>)
 8003c94:	4604      	mov	r4, r0
 8003c96:	6018      	str	r0, [r3, #0]
 8003c98:	f7fe fdfa 	bl	8002890 <test_wait_tick>
 8003c9c:	f7fd fa88 	bl	80011b0 <test_start_timer.constprop.1>
 8003ca0:	462e      	mov	r6, r5
 8003ca2:	2720      	movs	r7, #32
 8003ca4:	f387 8811 	msr	BASEPRI, r7
 8003ca8:	2100      	movs	r1, #0
 8003caa:	4620      	mov	r0, r4
 8003cac:	f7fd fd68 	bl	8001780 <chSchWakeupS>
 8003cb0:	4620      	mov	r0, r4
 8003cb2:	2100      	movs	r1, #0
 8003cb4:	f7fd fd64 	bl	8001780 <chSchWakeupS>
 8003cb8:	4620      	mov	r0, r4
 8003cba:	2100      	movs	r1, #0
 8003cbc:	f7fd fd60 	bl	8001780 <chSchWakeupS>
 8003cc0:	4620      	mov	r0, r4
 8003cc2:	2100      	movs	r1, #0
 8003cc4:	f7fd fd5c 	bl	8001780 <chSchWakeupS>
 8003cc8:	f386 8811 	msr	BASEPRI, r6
 8003ccc:	f898 3000 	ldrb.w	r3, [r8]
 8003cd0:	3504      	adds	r5, #4
 8003cd2:	2b00      	cmp	r3, #0
 8003cd4:	d0e6      	beq.n	8003ca4 <bmk4_execute+0x34>
 8003cd6:	f387 8811 	msr	BASEPRI, r7
 8003cda:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003cde:	4620      	mov	r0, r4
 8003ce0:	f7fd fd4e 	bl	8001780 <chSchWakeupS>
 8003ce4:	f386 8811 	msr	BASEPRI, r6
 8003ce8:	f7ff fea2 	bl	8003a30 <test_wait_threads>
 8003cec:	4809      	ldr	r0, [pc, #36]	; (8003d14 <bmk4_execute+0xa4>)
 8003cee:	f7fc fdbf 	bl	8000870 <test_print>
 8003cf2:	0068      	lsls	r0, r5, #1
 8003cf4:	f7fc fcc4 	bl	8000680 <test_printn>
 8003cf8:	4807      	ldr	r0, [pc, #28]	; (8003d18 <bmk4_execute+0xa8>)
 8003cfa:	b002      	add	sp, #8
 8003cfc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003d00:	f7fc bd96 	b.w	8000830 <test_println>
 8003d04:	20000930 	.word	0x20000930
 8003d08:	08001b51 	.word	0x08001b51
 8003d0c:	20000b38 	.word	0x20000b38
 8003d10:	200011cc 	.word	0x200011cc
 8003d14:	08005bd0 	.word	0x08005bd0
 8003d18:	08005d00 	.word	0x08005d00
 8003d1c:	200011c8 	.word	0x200011c8

08003d20 <bmk3_execute>:
 8003d20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d24:	4f2c      	ldr	r7, [pc, #176]	; (8003dd8 <bmk3_execute+0xb8>)
 8003d26:	4d2d      	ldr	r5, [pc, #180]	; (8003ddc <bmk3_execute+0xbc>)
 8003d28:	69ba      	ldr	r2, [r7, #24]
 8003d2a:	4b2d      	ldr	r3, [pc, #180]	; (8003de0 <bmk3_execute+0xc0>)
 8003d2c:	6892      	ldr	r2, [r2, #8]
 8003d2e:	4c2d      	ldr	r4, [pc, #180]	; (8003de4 <bmk3_execute+0xc4>)
 8003d30:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8003df4 <bmk3_execute+0xd4>
 8003d34:	b082      	sub	sp, #8
 8003d36:	2600      	movs	r6, #0
 8003d38:	3201      	adds	r2, #1
 8003d3a:	4628      	mov	r0, r5
 8003d3c:	9600      	str	r6, [sp, #0]
 8003d3e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d42:	f7fd fdfd 	bl	8001940 <chThdCreateStatic>
 8003d46:	69bb      	ldr	r3, [r7, #24]
 8003d48:	6020      	str	r0, [r4, #0]
 8003d4a:	689a      	ldr	r2, [r3, #8]
 8003d4c:	9600      	str	r6, [sp, #0]
 8003d4e:	4643      	mov	r3, r8
 8003d50:	3a02      	subs	r2, #2
 8003d52:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8003d56:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d5a:	f7fd fdf1 	bl	8001940 <chThdCreateStatic>
 8003d5e:	69bb      	ldr	r3, [r7, #24]
 8003d60:	6060      	str	r0, [r4, #4]
 8003d62:	689a      	ldr	r2, [r3, #8]
 8003d64:	9600      	str	r6, [sp, #0]
 8003d66:	4643      	mov	r3, r8
 8003d68:	3a03      	subs	r2, #3
 8003d6a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8003d6e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d72:	f7fd fde5 	bl	8001940 <chThdCreateStatic>
 8003d76:	69bb      	ldr	r3, [r7, #24]
 8003d78:	60a0      	str	r0, [r4, #8]
 8003d7a:	689a      	ldr	r2, [r3, #8]
 8003d7c:	9600      	str	r6, [sp, #0]
 8003d7e:	4643      	mov	r3, r8
 8003d80:	3a04      	subs	r2, #4
 8003d82:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8003d86:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d8a:	f7fd fdd9 	bl	8001940 <chThdCreateStatic>
 8003d8e:	69bb      	ldr	r3, [r7, #24]
 8003d90:	60e0      	str	r0, [r4, #12]
 8003d92:	689a      	ldr	r2, [r3, #8]
 8003d94:	9600      	str	r6, [sp, #0]
 8003d96:	3a05      	subs	r2, #5
 8003d98:	4643      	mov	r3, r8
 8003d9a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d9e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8003da2:	f7fd fdcd 	bl	8001940 <chThdCreateStatic>
 8003da6:	6120      	str	r0, [r4, #16]
 8003da8:	6820      	ldr	r0, [r4, #0]
 8003daa:	f7fe ff51 	bl	8002c50 <msg_loop_test>
 8003dae:	4604      	mov	r4, r0
 8003db0:	f7ff fe3e 	bl	8003a30 <test_wait_threads>
 8003db4:	480c      	ldr	r0, [pc, #48]	; (8003de8 <bmk3_execute+0xc8>)
 8003db6:	f7fc fd5b 	bl	8000870 <test_print>
 8003dba:	4620      	mov	r0, r4
 8003dbc:	f7fc fc60 	bl	8000680 <test_printn>
 8003dc0:	480a      	ldr	r0, [pc, #40]	; (8003dec <bmk3_execute+0xcc>)
 8003dc2:	f7fc fd55 	bl	8000870 <test_print>
 8003dc6:	0060      	lsls	r0, r4, #1
 8003dc8:	f7fc fc5a 	bl	8000680 <test_printn>
 8003dcc:	4808      	ldr	r0, [pc, #32]	; (8003df0 <bmk3_execute+0xd0>)
 8003dce:	b002      	add	sp, #8
 8003dd0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003dd4:	f7fc bd2c 	b.w	8000830 <test_println>
 8003dd8:	20000930 	.word	0x20000930
 8003ddc:	20000b38 	.word	0x20000b38
 8003de0:	08002b51 	.word	0x08002b51
 8003de4:	200011cc 	.word	0x200011cc
 8003de8:	08005bd0 	.word	0x08005bd0
 8003dec:	08005cc0 	.word	0x08005cc0
 8003df0:	08005d00 	.word	0x08005d00
 8003df4:	08005b61 	.word	0x08005b61
	...

08003e00 <bmk2_execute>:
 8003e00:	b510      	push	{r4, lr}
 8003e02:	4a13      	ldr	r2, [pc, #76]	; (8003e50 <bmk2_execute+0x50>)
 8003e04:	4b13      	ldr	r3, [pc, #76]	; (8003e54 <bmk2_execute+0x54>)
 8003e06:	6992      	ldr	r2, [r2, #24]
 8003e08:	4813      	ldr	r0, [pc, #76]	; (8003e58 <bmk2_execute+0x58>)
 8003e0a:	6892      	ldr	r2, [r2, #8]
 8003e0c:	b082      	sub	sp, #8
 8003e0e:	2100      	movs	r1, #0
 8003e10:	3201      	adds	r2, #1
 8003e12:	9100      	str	r1, [sp, #0]
 8003e14:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003e18:	f7fd fd92 	bl	8001940 <chThdCreateStatic>
 8003e1c:	4b0f      	ldr	r3, [pc, #60]	; (8003e5c <bmk2_execute+0x5c>)
 8003e1e:	6018      	str	r0, [r3, #0]
 8003e20:	f7fe ff16 	bl	8002c50 <msg_loop_test>
 8003e24:	4604      	mov	r4, r0
 8003e26:	f7ff fe03 	bl	8003a30 <test_wait_threads>
 8003e2a:	480d      	ldr	r0, [pc, #52]	; (8003e60 <bmk2_execute+0x60>)
 8003e2c:	f7fc fd20 	bl	8000870 <test_print>
 8003e30:	4620      	mov	r0, r4
 8003e32:	f7fc fc25 	bl	8000680 <test_printn>
 8003e36:	480b      	ldr	r0, [pc, #44]	; (8003e64 <bmk2_execute+0x64>)
 8003e38:	f7fc fd1a 	bl	8000870 <test_print>
 8003e3c:	0060      	lsls	r0, r4, #1
 8003e3e:	f7fc fc1f 	bl	8000680 <test_printn>
 8003e42:	4809      	ldr	r0, [pc, #36]	; (8003e68 <bmk2_execute+0x68>)
 8003e44:	b002      	add	sp, #8
 8003e46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e4a:	f7fc bcf1 	b.w	8000830 <test_println>
 8003e4e:	bf00      	nop
 8003e50:	20000930 	.word	0x20000930
 8003e54:	08002b51 	.word	0x08002b51
 8003e58:	20000b38 	.word	0x20000b38
 8003e5c:	200011cc 	.word	0x200011cc
 8003e60:	08005bd0 	.word	0x08005bd0
 8003e64:	08005cc0 	.word	0x08005cc0
 8003e68:	08005d00 	.word	0x08005d00
 8003e6c:	00000000 	.word	0x00000000

08003e70 <bmk1_execute>:
 8003e70:	b510      	push	{r4, lr}
 8003e72:	4a13      	ldr	r2, [pc, #76]	; (8003ec0 <bmk1_execute+0x50>)
 8003e74:	4b13      	ldr	r3, [pc, #76]	; (8003ec4 <bmk1_execute+0x54>)
 8003e76:	6992      	ldr	r2, [r2, #24]
 8003e78:	4813      	ldr	r0, [pc, #76]	; (8003ec8 <bmk1_execute+0x58>)
 8003e7a:	6892      	ldr	r2, [r2, #8]
 8003e7c:	b082      	sub	sp, #8
 8003e7e:	2100      	movs	r1, #0
 8003e80:	3a01      	subs	r2, #1
 8003e82:	9100      	str	r1, [sp, #0]
 8003e84:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003e88:	f7fd fd5a 	bl	8001940 <chThdCreateStatic>
 8003e8c:	4b0f      	ldr	r3, [pc, #60]	; (8003ecc <bmk1_execute+0x5c>)
 8003e8e:	6018      	str	r0, [r3, #0]
 8003e90:	f7fe fede 	bl	8002c50 <msg_loop_test>
 8003e94:	4604      	mov	r4, r0
 8003e96:	f7ff fdcb 	bl	8003a30 <test_wait_threads>
 8003e9a:	480d      	ldr	r0, [pc, #52]	; (8003ed0 <bmk1_execute+0x60>)
 8003e9c:	f7fc fce8 	bl	8000870 <test_print>
 8003ea0:	4620      	mov	r0, r4
 8003ea2:	f7fc fbed 	bl	8000680 <test_printn>
 8003ea6:	480b      	ldr	r0, [pc, #44]	; (8003ed4 <bmk1_execute+0x64>)
 8003ea8:	f7fc fce2 	bl	8000870 <test_print>
 8003eac:	0060      	lsls	r0, r4, #1
 8003eae:	f7fc fbe7 	bl	8000680 <test_printn>
 8003eb2:	4809      	ldr	r0, [pc, #36]	; (8003ed8 <bmk1_execute+0x68>)
 8003eb4:	b002      	add	sp, #8
 8003eb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003eba:	f7fc bcb9 	b.w	8000830 <test_println>
 8003ebe:	bf00      	nop
 8003ec0:	20000930 	.word	0x20000930
 8003ec4:	08002b51 	.word	0x08002b51
 8003ec8:	20000b38 	.word	0x20000b38
 8003ecc:	200011cc 	.word	0x200011cc
 8003ed0:	08005bd0 	.word	0x08005bd0
 8003ed4:	08005cc0 	.word	0x08005cc0
 8003ed8:	08005d00 	.word	0x08005d00
 8003edc:	00000000 	.word	0x00000000

08003ee0 <queues2_execute>:
 8003ee0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003ee4:	2320      	movs	r3, #32
 8003ee6:	b083      	sub	sp, #12
 8003ee8:	f383 8811 	msr	BASEPRI, r3
 8003eec:	4d8a      	ldr	r5, [pc, #552]	; (8004118 <queues2_execute+0x238>)
 8003eee:	e9d5 3205 	ldrd	r3, r2, [r5, #20]
 8003ef2:	429a      	cmp	r2, r3
 8003ef4:	d041      	beq.n	8003f7a <queues2_execute+0x9a>
 8003ef6:	2100      	movs	r1, #0
 8003ef8:	2001      	movs	r0, #1
 8003efa:	f7fc fc49 	bl	8000790 <_test_assert>
 8003efe:	bbb0      	cbnz	r0, 8003f6e <queues2_execute+0x8e>
 8003f00:	f380 8811 	msr	BASEPRI, r0
 8003f04:	4e84      	ldr	r6, [pc, #528]	; (8004118 <queues2_execute+0x238>)
 8003f06:	2441      	movs	r4, #65	; 0x41
 8003f08:	4621      	mov	r1, r4
 8003f0a:	3401      	adds	r4, #1
 8003f0c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003f10:	4630      	mov	r0, r6
 8003f12:	b2e4      	uxtb	r4, r4
 8003f14:	f7fe fb0c 	bl	8002530 <chOQPutTimeout>
 8003f18:	2c45      	cmp	r4, #69	; 0x45
 8003f1a:	d1f5      	bne.n	8003f08 <queues2_execute+0x28>
 8003f1c:	2620      	movs	r6, #32
 8003f1e:	f386 8811 	msr	BASEPRI, r6
 8003f22:	68a9      	ldr	r1, [r5, #8]
 8003f24:	fab1 f181 	clz	r1, r1
 8003f28:	0949      	lsrs	r1, r1, #5
 8003f2a:	2002      	movs	r0, #2
 8003f2c:	f7fc fc30 	bl	8000790 <_test_assert>
 8003f30:	4607      	mov	r7, r0
 8003f32:	b9e0      	cbnz	r0, 8003f6e <queues2_execute+0x8e>
 8003f34:	f380 8811 	msr	BASEPRI, r0
 8003f38:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 8004118 <queues2_execute+0x238>
 8003f3c:	4680      	mov	r8, r0
 8003f3e:	2404      	movs	r4, #4
 8003f40:	f386 8811 	msr	BASEPRI, r6
 8003f44:	4648      	mov	r0, r9
 8003f46:	f7fc ff0b 	bl	8000d60 <chOQGetI>
 8003f4a:	f388 8811 	msr	BASEPRI, r8
 8003f4e:	b2c0      	uxtb	r0, r0
 8003f50:	f7fc fc36 	bl	80007c0 <test_emit_token>
 8003f54:	3c01      	subs	r4, #1
 8003f56:	d1f3      	bne.n	8003f40 <queues2_execute+0x60>
 8003f58:	f386 8811 	msr	BASEPRI, r6
 8003f5c:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 8003f60:	429a      	cmp	r2, r3
 8003f62:	d029      	beq.n	8003fb8 <queues2_execute+0xd8>
 8003f64:	4639      	mov	r1, r7
 8003f66:	2003      	movs	r0, #3
 8003f68:	f7fc fc12 	bl	8000790 <_test_assert>
 8003f6c:	b150      	cbz	r0, 8003f84 <queues2_execute+0xa4>
 8003f6e:	2300      	movs	r3, #0
 8003f70:	f383 8811 	msr	BASEPRI, r3
 8003f74:	b003      	add	sp, #12
 8003f76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003f7a:	68a9      	ldr	r1, [r5, #8]
 8003f7c:	3100      	adds	r1, #0
 8003f7e:	bf18      	it	ne
 8003f80:	2101      	movne	r1, #1
 8003f82:	e7b9      	b.n	8003ef8 <queues2_execute+0x18>
 8003f84:	f380 8811 	msr	BASEPRI, r0
 8003f88:	4964      	ldr	r1, [pc, #400]	; (800411c <queues2_execute+0x23c>)
 8003f8a:	2004      	movs	r0, #4
 8003f8c:	f7fc fbd8 	bl	8000740 <_test_assert_sequence>
 8003f90:	4604      	mov	r4, r0
 8003f92:	2800      	cmp	r0, #0
 8003f94:	d1ee      	bne.n	8003f74 <queues2_execute+0x94>
 8003f96:	2620      	movs	r6, #32
 8003f98:	f386 8811 	msr	BASEPRI, r6
 8003f9c:	485e      	ldr	r0, [pc, #376]	; (8004118 <queues2_execute+0x238>)
 8003f9e:	f7fc fedf 	bl	8000d60 <chOQGetI>
 8003fa2:	3003      	adds	r0, #3
 8003fa4:	bf14      	ite	ne
 8003fa6:	2100      	movne	r1, #0
 8003fa8:	2101      	moveq	r1, #1
 8003faa:	2005      	movs	r0, #5
 8003fac:	f7fc fbf0 	bl	8000790 <_test_assert>
 8003fb0:	b138      	cbz	r0, 8003fc2 <queues2_execute+0xe2>
 8003fb2:	f384 8811 	msr	BASEPRI, r4
 8003fb6:	e7dd      	b.n	8003f74 <queues2_execute+0x94>
 8003fb8:	68af      	ldr	r7, [r5, #8]
 8003fba:	3700      	adds	r7, #0
 8003fbc:	bf18      	it	ne
 8003fbe:	2701      	movne	r7, #1
 8003fc0:	e7d0      	b.n	8003f64 <queues2_execute+0x84>
 8003fc2:	f380 8811 	msr	BASEPRI, r0
 8003fc6:	2208      	movs	r2, #8
 8003fc8:	4603      	mov	r3, r0
 8003fca:	4955      	ldr	r1, [pc, #340]	; (8004120 <queues2_execute+0x240>)
 8003fcc:	4852      	ldr	r0, [pc, #328]	; (8004118 <queues2_execute+0x238>)
 8003fce:	f7fe fa57 	bl	8002480 <chOQWriteTimeout>
 8003fd2:	f1a0 0104 	sub.w	r1, r0, #4
 8003fd6:	fab1 f181 	clz	r1, r1
 8003fda:	0949      	lsrs	r1, r1, #5
 8003fdc:	2006      	movs	r0, #6
 8003fde:	f7fc fbd7 	bl	8000790 <_test_assert>
 8003fe2:	4604      	mov	r4, r0
 8003fe4:	2800      	cmp	r0, #0
 8003fe6:	d1c5      	bne.n	8003f74 <queues2_execute+0x94>
 8003fe8:	f386 8811 	msr	BASEPRI, r6
 8003fec:	68a9      	ldr	r1, [r5, #8]
 8003fee:	fab1 f181 	clz	r1, r1
 8003ff2:	0949      	lsrs	r1, r1, #5
 8003ff4:	2007      	movs	r0, #7
 8003ff6:	f7fc fbcb 	bl	8000790 <_test_assert>
 8003ffa:	4607      	mov	r7, r0
 8003ffc:	2800      	cmp	r0, #0
 8003ffe:	d1d8      	bne.n	8003fb2 <queues2_execute+0xd2>
 8004000:	f380 8811 	msr	BASEPRI, r0
 8004004:	4a47      	ldr	r2, [pc, #284]	; (8004124 <queues2_execute+0x244>)
 8004006:	4b48      	ldr	r3, [pc, #288]	; (8004128 <queues2_execute+0x248>)
 8004008:	6992      	ldr	r2, [r2, #24]
 800400a:	4848      	ldr	r0, [pc, #288]	; (800412c <queues2_execute+0x24c>)
 800400c:	6892      	ldr	r2, [r2, #8]
 800400e:	9700      	str	r7, [sp, #0]
 8004010:	3201      	adds	r2, #1
 8004012:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004016:	f7fd fc93 	bl	8001940 <chThdCreateStatic>
 800401a:	4b45      	ldr	r3, [pc, #276]	; (8004130 <queues2_execute+0x250>)
 800401c:	6018      	str	r0, [r3, #0]
 800401e:	f386 8811 	msr	BASEPRI, r6
 8004022:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 8004026:	68a9      	ldr	r1, [r5, #8]
 8004028:	1a9b      	subs	r3, r3, r2
 800402a:	1a59      	subs	r1, r3, r1
 800402c:	f1a1 0104 	sub.w	r1, r1, #4
 8004030:	fab1 f181 	clz	r1, r1
 8004034:	0949      	lsrs	r1, r1, #5
 8004036:	2008      	movs	r0, #8
 8004038:	f7fc fbaa 	bl	8000790 <_test_assert>
 800403c:	b110      	cbz	r0, 8004044 <queues2_execute+0x164>
 800403e:	f387 8811 	msr	BASEPRI, r7
 8004042:	e797      	b.n	8003f74 <queues2_execute+0x94>
 8004044:	f380 8811 	msr	BASEPRI, r0
 8004048:	f7ff fcf2 	bl	8003a30 <test_wait_threads>
 800404c:	f386 8811 	msr	BASEPRI, r6
 8004050:	e9d5 1203 	ldrd	r1, r2, [r5, #12]
 8004054:	682b      	ldr	r3, [r5, #0]
 8004056:	61a9      	str	r1, [r5, #24]
 8004058:	1a52      	subs	r2, r2, r1
 800405a:	42ab      	cmp	r3, r5
 800405c:	6169      	str	r1, [r5, #20]
 800405e:	60aa      	str	r2, [r5, #8]
 8004060:	d00b      	beq.n	800407a <queues2_execute+0x19a>
 8004062:	f06f 0401 	mvn.w	r4, #1
 8004066:	681a      	ldr	r2, [r3, #0]
 8004068:	602a      	str	r2, [r5, #0]
 800406a:	6055      	str	r5, [r2, #4]
 800406c:	4618      	mov	r0, r3
 800406e:	621c      	str	r4, [r3, #32]
 8004070:	f7fc fe1e 	bl	8000cb0 <chSchReadyI>
 8004074:	682b      	ldr	r3, [r5, #0]
 8004076:	42ab      	cmp	r3, r5
 8004078:	d1f5      	bne.n	8004066 <queues2_execute+0x186>
 800407a:	2400      	movs	r4, #0
 800407c:	f384 8811 	msr	BASEPRI, r4
 8004080:	2620      	movs	r6, #32
 8004082:	f386 8811 	msr	BASEPRI, r6
 8004086:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 800408a:	68a9      	ldr	r1, [r5, #8]
 800408c:	1a9b      	subs	r3, r3, r2
 800408e:	1a5f      	subs	r7, r3, r1
 8004090:	4279      	negs	r1, r7
 8004092:	4179      	adcs	r1, r7
 8004094:	2009      	movs	r0, #9
 8004096:	f7fc fb7b 	bl	8000790 <_test_assert>
 800409a:	4603      	mov	r3, r0
 800409c:	2800      	cmp	r0, #0
 800409e:	d188      	bne.n	8003fb2 <queues2_execute+0xd2>
 80040a0:	f380 8811 	msr	BASEPRI, r0
 80040a4:	2202      	movs	r2, #2
 80040a6:	491e      	ldr	r1, [pc, #120]	; (8004120 <queues2_execute+0x240>)
 80040a8:	481b      	ldr	r0, [pc, #108]	; (8004118 <queues2_execute+0x238>)
 80040aa:	f7fe f9e9 	bl	8002480 <chOQWriteTimeout>
 80040ae:	3802      	subs	r0, #2
 80040b0:	4241      	negs	r1, r0
 80040b2:	4141      	adcs	r1, r0
 80040b4:	200a      	movs	r0, #10
 80040b6:	f7fc fb6b 	bl	8000790 <_test_assert>
 80040ba:	4603      	mov	r3, r0
 80040bc:	2800      	cmp	r0, #0
 80040be:	f47f af59 	bne.w	8003f74 <queues2_execute+0x94>
 80040c2:	2202      	movs	r2, #2
 80040c4:	4916      	ldr	r1, [pc, #88]	; (8004120 <queues2_execute+0x240>)
 80040c6:	4814      	ldr	r0, [pc, #80]	; (8004118 <queues2_execute+0x238>)
 80040c8:	f7fe f9da 	bl	8002480 <chOQWriteTimeout>
 80040cc:	1e82      	subs	r2, r0, #2
 80040ce:	4251      	negs	r1, r2
 80040d0:	4151      	adcs	r1, r2
 80040d2:	200b      	movs	r0, #11
 80040d4:	f7fc fb5c 	bl	8000790 <_test_assert>
 80040d8:	4604      	mov	r4, r0
 80040da:	2800      	cmp	r0, #0
 80040dc:	f47f af4a 	bne.w	8003f74 <queues2_execute+0x94>
 80040e0:	f386 8811 	msr	BASEPRI, r6
 80040e4:	68a9      	ldr	r1, [r5, #8]
 80040e6:	fab1 f181 	clz	r1, r1
 80040ea:	0949      	lsrs	r1, r1, #5
 80040ec:	200c      	movs	r0, #12
 80040ee:	f7fc fb4f 	bl	8000790 <_test_assert>
 80040f2:	4601      	mov	r1, r0
 80040f4:	2800      	cmp	r0, #0
 80040f6:	f47f af5c 	bne.w	8003fb2 <queues2_execute+0xd2>
 80040fa:	f380 8811 	msr	BASEPRI, r0
 80040fe:	220a      	movs	r2, #10
 8004100:	4805      	ldr	r0, [pc, #20]	; (8004118 <queues2_execute+0x238>)
 8004102:	f7fe fa15 	bl	8002530 <chOQPutTimeout>
 8004106:	1c43      	adds	r3, r0, #1
 8004108:	4259      	negs	r1, r3
 800410a:	4159      	adcs	r1, r3
 800410c:	200d      	movs	r0, #13
 800410e:	b003      	add	sp, #12
 8004110:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004114:	f7fc bb3c 	b.w	8000790 <_test_assert>
 8004118:	20000888 	.word	0x20000888
 800411c:	08006130 	.word	0x08006130
 8004120:	20000c80 	.word	0x20000c80
 8004124:	20000930 	.word	0x20000930
 8004128:	08002581 	.word	0x08002581
 800412c:	20000b38 	.word	0x20000b38
 8004130:	200011cc 	.word	0x200011cc
	...

08004140 <queues1_execute>:
 8004140:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004142:	2620      	movs	r6, #32
 8004144:	b083      	sub	sp, #12
 8004146:	f386 8811 	msr	BASEPRI, r6
 800414a:	4c9f      	ldr	r4, [pc, #636]	; (80043c8 <queues1_execute+0x288>)
 800414c:	68a1      	ldr	r1, [r4, #8]
 800414e:	fab1 f181 	clz	r1, r1
 8004152:	0949      	lsrs	r1, r1, #5
 8004154:	2001      	movs	r0, #1
 8004156:	f7fc fb1b 	bl	8000790 <_test_assert>
 800415a:	bb10      	cbnz	r0, 80041a2 <queues1_execute+0x62>
 800415c:	4605      	mov	r5, r0
 800415e:	f380 8811 	msr	BASEPRI, r0
 8004162:	f386 8811 	msr	BASEPRI, r6
 8004166:	2141      	movs	r1, #65	; 0x41
 8004168:	4620      	mov	r0, r4
 800416a:	f7fc fdd1 	bl	8000d10 <chIQPutI>
 800416e:	4620      	mov	r0, r4
 8004170:	2142      	movs	r1, #66	; 0x42
 8004172:	f7fc fdcd 	bl	8000d10 <chIQPutI>
 8004176:	4620      	mov	r0, r4
 8004178:	2143      	movs	r1, #67	; 0x43
 800417a:	f7fc fdc9 	bl	8000d10 <chIQPutI>
 800417e:	4620      	mov	r0, r4
 8004180:	2144      	movs	r1, #68	; 0x44
 8004182:	f7fc fdc5 	bl	8000d10 <chIQPutI>
 8004186:	f385 8811 	msr	BASEPRI, r5
 800418a:	f386 8811 	msr	BASEPRI, r6
 800418e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8004192:	429a      	cmp	r2, r3
 8004194:	d038      	beq.n	8004208 <queues1_execute+0xc8>
 8004196:	4629      	mov	r1, r5
 8004198:	2002      	movs	r0, #2
 800419a:	f7fc faf9 	bl	8000790 <_test_assert>
 800419e:	4605      	mov	r5, r0
 80041a0:	b120      	cbz	r0, 80041ac <queues1_execute+0x6c>
 80041a2:	2300      	movs	r3, #0
 80041a4:	f383 8811 	msr	BASEPRI, r3
 80041a8:	b003      	add	sp, #12
 80041aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80041ac:	f380 8811 	msr	BASEPRI, r0
 80041b0:	2320      	movs	r3, #32
 80041b2:	f383 8811 	msr	BASEPRI, r3
 80041b6:	4884      	ldr	r0, [pc, #528]	; (80043c8 <queues1_execute+0x288>)
 80041b8:	4629      	mov	r1, r5
 80041ba:	f7fc fda9 	bl	8000d10 <chIQPutI>
 80041be:	3004      	adds	r0, #4
 80041c0:	bf14      	ite	ne
 80041c2:	2100      	movne	r1, #0
 80041c4:	2101      	moveq	r1, #1
 80041c6:	2003      	movs	r0, #3
 80041c8:	f7fc fae2 	bl	8000790 <_test_assert>
 80041cc:	b9c0      	cbnz	r0, 8004200 <queues1_execute+0xc0>
 80041ce:	f380 8811 	msr	BASEPRI, r0
 80041d2:	4e7d      	ldr	r6, [pc, #500]	; (80043c8 <queues1_execute+0x288>)
 80041d4:	2504      	movs	r5, #4
 80041d6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80041da:	4630      	mov	r0, r6
 80041dc:	f7fe fa38 	bl	8002650 <chIQGetTimeout>
 80041e0:	b2c0      	uxtb	r0, r0
 80041e2:	f7fc faed 	bl	80007c0 <test_emit_token>
 80041e6:	3d01      	subs	r5, #1
 80041e8:	d1f5      	bne.n	80041d6 <queues1_execute+0x96>
 80041ea:	2620      	movs	r6, #32
 80041ec:	f386 8811 	msr	BASEPRI, r6
 80041f0:	68a1      	ldr	r1, [r4, #8]
 80041f2:	fab1 f181 	clz	r1, r1
 80041f6:	0949      	lsrs	r1, r1, #5
 80041f8:	2004      	movs	r0, #4
 80041fa:	f7fc fac9 	bl	8000790 <_test_assert>
 80041fe:	b178      	cbz	r0, 8004220 <queues1_execute+0xe0>
 8004200:	f385 8811 	msr	BASEPRI, r5
 8004204:	b003      	add	sp, #12
 8004206:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004208:	68a5      	ldr	r5, [r4, #8]
 800420a:	3500      	adds	r5, #0
 800420c:	bf18      	it	ne
 800420e:	2501      	movne	r5, #1
 8004210:	4629      	mov	r1, r5
 8004212:	2002      	movs	r0, #2
 8004214:	f7fc fabc 	bl	8000790 <_test_assert>
 8004218:	4605      	mov	r5, r0
 800421a:	2800      	cmp	r0, #0
 800421c:	d1c1      	bne.n	80041a2 <queues1_execute+0x62>
 800421e:	e7c5      	b.n	80041ac <queues1_execute+0x6c>
 8004220:	f385 8811 	msr	BASEPRI, r5
 8004224:	4969      	ldr	r1, [pc, #420]	; (80043cc <queues1_execute+0x28c>)
 8004226:	2005      	movs	r0, #5
 8004228:	f7fc fa8a 	bl	8000740 <_test_assert_sequence>
 800422c:	2800      	cmp	r0, #0
 800422e:	d1bb      	bne.n	80041a8 <queues1_execute+0x68>
 8004230:	f386 8811 	msr	BASEPRI, r6
 8004234:	2141      	movs	r1, #65	; 0x41
 8004236:	4864      	ldr	r0, [pc, #400]	; (80043c8 <queues1_execute+0x288>)
 8004238:	f7fc fd6a 	bl	8000d10 <chIQPutI>
 800423c:	2142      	movs	r1, #66	; 0x42
 800423e:	4862      	ldr	r0, [pc, #392]	; (80043c8 <queues1_execute+0x288>)
 8004240:	f7fc fd66 	bl	8000d10 <chIQPutI>
 8004244:	2143      	movs	r1, #67	; 0x43
 8004246:	4860      	ldr	r0, [pc, #384]	; (80043c8 <queues1_execute+0x288>)
 8004248:	f7fc fd62 	bl	8000d10 <chIQPutI>
 800424c:	2144      	movs	r1, #68	; 0x44
 800424e:	485e      	ldr	r0, [pc, #376]	; (80043c8 <queues1_execute+0x288>)
 8004250:	f7fc fd5e 	bl	8000d10 <chIQPutI>
 8004254:	f385 8811 	msr	BASEPRI, r5
 8004258:	495d      	ldr	r1, [pc, #372]	; (80043d0 <queues1_execute+0x290>)
 800425a:	485b      	ldr	r0, [pc, #364]	; (80043c8 <queues1_execute+0x288>)
 800425c:	2208      	movs	r2, #8
 800425e:	462b      	mov	r3, r5
 8004260:	f7fe f9a6 	bl	80025b0 <chIQReadTimeout>
 8004264:	f1a0 0104 	sub.w	r1, r0, #4
 8004268:	fab1 f181 	clz	r1, r1
 800426c:	0949      	lsrs	r1, r1, #5
 800426e:	2006      	movs	r0, #6
 8004270:	f7fc fa8e 	bl	8000790 <_test_assert>
 8004274:	2800      	cmp	r0, #0
 8004276:	d197      	bne.n	80041a8 <queues1_execute+0x68>
 8004278:	f386 8811 	msr	BASEPRI, r6
 800427c:	68a1      	ldr	r1, [r4, #8]
 800427e:	fab1 f181 	clz	r1, r1
 8004282:	0949      	lsrs	r1, r1, #5
 8004284:	2007      	movs	r0, #7
 8004286:	f7fc fa83 	bl	8000790 <_test_assert>
 800428a:	2800      	cmp	r0, #0
 800428c:	d1b8      	bne.n	8004200 <queues1_execute+0xc0>
 800428e:	f385 8811 	msr	BASEPRI, r5
 8004292:	f386 8811 	msr	BASEPRI, r6
 8004296:	2141      	movs	r1, #65	; 0x41
 8004298:	484b      	ldr	r0, [pc, #300]	; (80043c8 <queues1_execute+0x288>)
 800429a:	f7fc fd39 	bl	8000d10 <chIQPutI>
 800429e:	2142      	movs	r1, #66	; 0x42
 80042a0:	4849      	ldr	r0, [pc, #292]	; (80043c8 <queues1_execute+0x288>)
 80042a2:	f7fc fd35 	bl	8000d10 <chIQPutI>
 80042a6:	2143      	movs	r1, #67	; 0x43
 80042a8:	4847      	ldr	r0, [pc, #284]	; (80043c8 <queues1_execute+0x288>)
 80042aa:	f7fc fd31 	bl	8000d10 <chIQPutI>
 80042ae:	2144      	movs	r1, #68	; 0x44
 80042b0:	4845      	ldr	r0, [pc, #276]	; (80043c8 <queues1_execute+0x288>)
 80042b2:	f7fc fd2d 	bl	8000d10 <chIQPutI>
 80042b6:	f385 8811 	msr	BASEPRI, r5
 80042ba:	4945      	ldr	r1, [pc, #276]	; (80043d0 <queues1_execute+0x290>)
 80042bc:	4842      	ldr	r0, [pc, #264]	; (80043c8 <queues1_execute+0x288>)
 80042be:	2202      	movs	r2, #2
 80042c0:	462b      	mov	r3, r5
 80042c2:	f7fe f975 	bl	80025b0 <chIQReadTimeout>
 80042c6:	f1a0 0102 	sub.w	r1, r0, #2
 80042ca:	fab1 f181 	clz	r1, r1
 80042ce:	0949      	lsrs	r1, r1, #5
 80042d0:	2008      	movs	r0, #8
 80042d2:	f7fc fa5d 	bl	8000790 <_test_assert>
 80042d6:	2800      	cmp	r0, #0
 80042d8:	f47f af66 	bne.w	80041a8 <queues1_execute+0x68>
 80042dc:	493c      	ldr	r1, [pc, #240]	; (80043d0 <queues1_execute+0x290>)
 80042de:	483a      	ldr	r0, [pc, #232]	; (80043c8 <queues1_execute+0x288>)
 80042e0:	462b      	mov	r3, r5
 80042e2:	2202      	movs	r2, #2
 80042e4:	f7fe f964 	bl	80025b0 <chIQReadTimeout>
 80042e8:	f1a0 0102 	sub.w	r1, r0, #2
 80042ec:	fab1 f181 	clz	r1, r1
 80042f0:	0949      	lsrs	r1, r1, #5
 80042f2:	2009      	movs	r0, #9
 80042f4:	f7fc fa4c 	bl	8000790 <_test_assert>
 80042f8:	2800      	cmp	r0, #0
 80042fa:	f47f af55 	bne.w	80041a8 <queues1_execute+0x68>
 80042fe:	f386 8811 	msr	BASEPRI, r6
 8004302:	68a1      	ldr	r1, [r4, #8]
 8004304:	fab1 f181 	clz	r1, r1
 8004308:	0949      	lsrs	r1, r1, #5
 800430a:	200a      	movs	r0, #10
 800430c:	f7fc fa40 	bl	8000790 <_test_assert>
 8004310:	2800      	cmp	r0, #0
 8004312:	f47f af75 	bne.w	8004200 <queues1_execute+0xc0>
 8004316:	f385 8811 	msr	BASEPRI, r5
 800431a:	f386 8811 	msr	BASEPRI, r6
 800431e:	482a      	ldr	r0, [pc, #168]	; (80043c8 <queues1_execute+0x288>)
 8004320:	4629      	mov	r1, r5
 8004322:	f7fc fcf5 	bl	8000d10 <chIQPutI>
 8004326:	6823      	ldr	r3, [r4, #0]
 8004328:	68e2      	ldr	r2, [r4, #12]
 800432a:	60a5      	str	r5, [r4, #8]
 800432c:	42a3      	cmp	r3, r4
 800432e:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8004332:	d00b      	beq.n	800434c <queues1_execute+0x20c>
 8004334:	f06f 0501 	mvn.w	r5, #1
 8004338:	681a      	ldr	r2, [r3, #0]
 800433a:	6022      	str	r2, [r4, #0]
 800433c:	6054      	str	r4, [r2, #4]
 800433e:	4618      	mov	r0, r3
 8004340:	621d      	str	r5, [r3, #32]
 8004342:	f7fc fcb5 	bl	8000cb0 <chSchReadyI>
 8004346:	6823      	ldr	r3, [r4, #0]
 8004348:	42a3      	cmp	r3, r4
 800434a:	d1f5      	bne.n	8004338 <queues1_execute+0x1f8>
 800434c:	2700      	movs	r7, #0
 800434e:	f387 8811 	msr	BASEPRI, r7
 8004352:	2620      	movs	r6, #32
 8004354:	f386 8811 	msr	BASEPRI, r6
 8004358:	68a1      	ldr	r1, [r4, #8]
 800435a:	fab1 f181 	clz	r1, r1
 800435e:	0949      	lsrs	r1, r1, #5
 8004360:	200b      	movs	r0, #11
 8004362:	f7fc fa15 	bl	8000790 <_test_assert>
 8004366:	4605      	mov	r5, r0
 8004368:	b110      	cbz	r0, 8004370 <queues1_execute+0x230>
 800436a:	f387 8811 	msr	BASEPRI, r7
 800436e:	e71b      	b.n	80041a8 <queues1_execute+0x68>
 8004370:	f380 8811 	msr	BASEPRI, r0
 8004374:	4a17      	ldr	r2, [pc, #92]	; (80043d4 <queues1_execute+0x294>)
 8004376:	4b18      	ldr	r3, [pc, #96]	; (80043d8 <queues1_execute+0x298>)
 8004378:	6992      	ldr	r2, [r2, #24]
 800437a:	4818      	ldr	r0, [pc, #96]	; (80043dc <queues1_execute+0x29c>)
 800437c:	6892      	ldr	r2, [r2, #8]
 800437e:	9500      	str	r5, [sp, #0]
 8004380:	3201      	adds	r2, #1
 8004382:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004386:	f7fd fadb 	bl	8001940 <chThdCreateStatic>
 800438a:	4b15      	ldr	r3, [pc, #84]	; (80043e0 <queues1_execute+0x2a0>)
 800438c:	6018      	str	r0, [r3, #0]
 800438e:	f386 8811 	msr	BASEPRI, r6
 8004392:	68a1      	ldr	r1, [r4, #8]
 8004394:	fab1 f181 	clz	r1, r1
 8004398:	0949      	lsrs	r1, r1, #5
 800439a:	200c      	movs	r0, #12
 800439c:	f7fc f9f8 	bl	8000790 <_test_assert>
 80043a0:	2800      	cmp	r0, #0
 80043a2:	f47f af2d 	bne.w	8004200 <queues1_execute+0xc0>
 80043a6:	f380 8811 	msr	BASEPRI, r0
 80043aa:	f7ff fb41 	bl	8003a30 <test_wait_threads>
 80043ae:	210a      	movs	r1, #10
 80043b0:	4805      	ldr	r0, [pc, #20]	; (80043c8 <queues1_execute+0x288>)
 80043b2:	f7fe f94d 	bl	8002650 <chIQGetTimeout>
 80043b6:	1c43      	adds	r3, r0, #1
 80043b8:	4259      	negs	r1, r3
 80043ba:	4159      	adcs	r1, r3
 80043bc:	200d      	movs	r0, #13
 80043be:	b003      	add	sp, #12
 80043c0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80043c4:	f7fc b9e4 	b.w	8000790 <_test_assert>
 80043c8:	20000810 	.word	0x20000810
 80043cc:	08006130 	.word	0x08006130
 80043d0:	20000c80 	.word	0x20000c80
 80043d4:	20000930 	.word	0x20000930
 80043d8:	080026a1 	.word	0x080026a1
 80043dc:	20000b38 	.word	0x20000b38
 80043e0:	200011cc 	.word	0x200011cc
	...

080043f0 <dyn2_execute>:
 80043f0:	4a31      	ldr	r2, [pc, #196]	; (80044b8 <dyn2_execute+0xc8>)
 80043f2:	6991      	ldr	r1, [r2, #24]
 80043f4:	4a31      	ldr	r2, [pc, #196]	; (80044bc <dyn2_execute+0xcc>)
 80043f6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043f8:	4b31      	ldr	r3, [pc, #196]	; (80044c0 <dyn2_execute+0xd0>)
 80043fa:	688d      	ldr	r5, [r1, #8]
 80043fc:	4931      	ldr	r1, [pc, #196]	; (80044c4 <dyn2_execute+0xd4>)
 80043fe:	f103 070c 	add.w	r7, r3, #12
 8004402:	2620      	movs	r6, #32
 8004404:	2400      	movs	r4, #0
 8004406:	f386 8811 	msr	BASEPRI, r6
 800440a:	6808      	ldr	r0, [r1, #0]
 800440c:	6010      	str	r0, [r2, #0]
 800440e:	600a      	str	r2, [r1, #0]
 8004410:	f384 8811 	msr	BASEPRI, r4
 8004414:	429f      	cmp	r7, r3
 8004416:	d002      	beq.n	800441e <dyn2_execute+0x2e>
 8004418:	f853 2b04 	ldr.w	r2, [r3], #4
 800441c:	e7f3      	b.n	8004406 <dyn2_execute+0x16>
 800441e:	492a      	ldr	r1, [pc, #168]	; (80044c8 <dyn2_execute+0xd8>)
 8004420:	4c2a      	ldr	r4, [pc, #168]	; (80044cc <dyn2_execute+0xdc>)
 8004422:	1e68      	subs	r0, r5, #1
 8004424:	f7fd f9dc 	bl	80017e0 <chThdCreateFromMemoryPool.constprop.51>
 8004428:	4929      	ldr	r1, [pc, #164]	; (80044d0 <dyn2_execute+0xe0>)
 800442a:	6020      	str	r0, [r4, #0]
 800442c:	1ea8      	subs	r0, r5, #2
 800442e:	f7fd f9d7 	bl	80017e0 <chThdCreateFromMemoryPool.constprop.51>
 8004432:	4928      	ldr	r1, [pc, #160]	; (80044d4 <dyn2_execute+0xe4>)
 8004434:	6060      	str	r0, [r4, #4]
 8004436:	1ee8      	subs	r0, r5, #3
 8004438:	f7fd f9d2 	bl	80017e0 <chThdCreateFromMemoryPool.constprop.51>
 800443c:	4926      	ldr	r1, [pc, #152]	; (80044d8 <dyn2_execute+0xe8>)
 800443e:	60a0      	str	r0, [r4, #8]
 8004440:	1f28      	subs	r0, r5, #4
 8004442:	f7fd f9cd 	bl	80017e0 <chThdCreateFromMemoryPool.constprop.51>
 8004446:	4925      	ldr	r1, [pc, #148]	; (80044dc <dyn2_execute+0xec>)
 8004448:	60e0      	str	r0, [r4, #12]
 800444a:	1f68      	subs	r0, r5, #5
 800444c:	f7fd f9c8 	bl	80017e0 <chThdCreateFromMemoryPool.constprop.51>
 8004450:	6821      	ldr	r1, [r4, #0]
 8004452:	6120      	str	r0, [r4, #16]
 8004454:	b141      	cbz	r1, 8004468 <dyn2_execute+0x78>
 8004456:	6861      	ldr	r1, [r4, #4]
 8004458:	b131      	cbz	r1, 8004468 <dyn2_execute+0x78>
 800445a:	68a1      	ldr	r1, [r4, #8]
 800445c:	b121      	cbz	r1, 8004468 <dyn2_execute+0x78>
 800445e:	68e1      	ldr	r1, [r4, #12]
 8004460:	b111      	cbz	r1, 8004468 <dyn2_execute+0x78>
 8004462:	fab0 f180 	clz	r1, r0
 8004466:	0949      	lsrs	r1, r1, #5
 8004468:	2001      	movs	r0, #1
 800446a:	f7fc f991 	bl	8000790 <_test_assert>
 800446e:	b100      	cbz	r0, 8004472 <dyn2_execute+0x82>
 8004470:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004472:	f7ff fadd 	bl	8003a30 <test_wait_threads>
 8004476:	491a      	ldr	r1, [pc, #104]	; (80044e0 <dyn2_execute+0xf0>)
 8004478:	2002      	movs	r0, #2
 800447a:	f7fc f961 	bl	8000740 <_test_assert_sequence>
 800447e:	2800      	cmp	r0, #0
 8004480:	d1f6      	bne.n	8004470 <dyn2_execute+0x80>
 8004482:	4d10      	ldr	r5, [pc, #64]	; (80044c4 <dyn2_execute+0xd4>)
 8004484:	2404      	movs	r4, #4
 8004486:	4628      	mov	r0, r5
 8004488:	f7fc fa9a 	bl	80009c0 <chPoolAlloc>
 800448c:	1c01      	adds	r1, r0, #0
 800448e:	bf18      	it	ne
 8004490:	2101      	movne	r1, #1
 8004492:	2003      	movs	r0, #3
 8004494:	f7fc f97c 	bl	8000790 <_test_assert>
 8004498:	2800      	cmp	r0, #0
 800449a:	d1e9      	bne.n	8004470 <dyn2_execute+0x80>
 800449c:	3c01      	subs	r4, #1
 800449e:	d1f2      	bne.n	8004486 <dyn2_execute+0x96>
 80044a0:	4808      	ldr	r0, [pc, #32]	; (80044c4 <dyn2_execute+0xd4>)
 80044a2:	f7fc fa8d 	bl	80009c0 <chPoolAlloc>
 80044a6:	fab0 f180 	clz	r1, r0
 80044aa:	0949      	lsrs	r1, r1, #5
 80044ac:	2004      	movs	r0, #4
 80044ae:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80044b2:	f7fc b96d 	b.w	8000790 <_test_assert>
 80044b6:	bf00      	nop
 80044b8:	20000930 	.word	0x20000930
 80044bc:	20000b38 	.word	0x20000b38
 80044c0:	080068d4 	.word	0x080068d4
 80044c4:	20000b08 	.word	0x20000b08
 80044c8:	08005d60 	.word	0x08005d60
 80044cc:	200011cc 	.word	0x200011cc
 80044d0:	08005d50 	.word	0x08005d50
 80044d4:	08005d54 	.word	0x08005d54
 80044d8:	08005d58 	.word	0x08005d58
 80044dc:	08005fb4 	.word	0x08005fb4
 80044e0:	08006130 	.word	0x08006130
	...

080044f0 <dyn1_execute>:
 80044f0:	b570      	push	{r4, r5, r6, lr}
 80044f2:	4b2c      	ldr	r3, [pc, #176]	; (80045a4 <dyn1_execute+0xb4>)
 80044f4:	482c      	ldr	r0, [pc, #176]	; (80045a8 <dyn1_execute+0xb8>)
 80044f6:	699b      	ldr	r3, [r3, #24]
 80044f8:	4c2c      	ldr	r4, [pc, #176]	; (80045ac <dyn1_execute+0xbc>)
 80044fa:	689d      	ldr	r5, [r3, #8]
 80044fc:	b082      	sub	sp, #8
 80044fe:	4669      	mov	r1, sp
 8004500:	f7fe fdbe 	bl	8003080 <chHeapStatus>
 8004504:	492a      	ldr	r1, [pc, #168]	; (80045b0 <dyn1_execute+0xc0>)
 8004506:	1e68      	subs	r0, r5, #1
 8004508:	f7fe fee2 	bl	80032d0 <chThdCreateFromHeap.constprop.52>
 800450c:	4929      	ldr	r1, [pc, #164]	; (80045b4 <dyn1_execute+0xc4>)
 800450e:	6020      	str	r0, [r4, #0]
 8004510:	1ea8      	subs	r0, r5, #2
 8004512:	f7fe fedd 	bl	80032d0 <chThdCreateFromHeap.constprop.52>
 8004516:	a901      	add	r1, sp, #4
 8004518:	6060      	str	r0, [r4, #4]
 800451a:	4823      	ldr	r0, [pc, #140]	; (80045a8 <dyn1_execute+0xb8>)
 800451c:	f7fe fdb0 	bl	8003080 <chHeapStatus>
 8004520:	9901      	ldr	r1, [sp, #4]
 8004522:	4821      	ldr	r0, [pc, #132]	; (80045a8 <dyn1_execute+0xb8>)
 8004524:	f7fe fe8c 	bl	8003240 <chHeapAlloc>
 8004528:	4923      	ldr	r1, [pc, #140]	; (80045b8 <dyn1_execute+0xc8>)
 800452a:	4606      	mov	r6, r0
 800452c:	1ee8      	subs	r0, r5, #3
 800452e:	f7fe fecf 	bl	80032d0 <chThdCreateFromHeap.constprop.52>
 8004532:	60a0      	str	r0, [r4, #8]
 8004534:	4630      	mov	r0, r6
 8004536:	f7fe fdcb 	bl	80030d0 <chHeapFree>
 800453a:	6821      	ldr	r1, [r4, #0]
 800453c:	b121      	cbz	r1, 8004548 <dyn1_execute+0x58>
 800453e:	6861      	ldr	r1, [r4, #4]
 8004540:	b111      	cbz	r1, 8004548 <dyn1_execute+0x58>
 8004542:	68a1      	ldr	r1, [r4, #8]
 8004544:	b331      	cbz	r1, 8004594 <dyn1_execute+0xa4>
 8004546:	2100      	movs	r1, #0
 8004548:	2001      	movs	r0, #1
 800454a:	f7fc f921 	bl	8000790 <_test_assert>
 800454e:	b108      	cbz	r0, 8004554 <dyn1_execute+0x64>
 8004550:	b002      	add	sp, #8
 8004552:	bd70      	pop	{r4, r5, r6, pc}
 8004554:	f7ff fa6c 	bl	8003a30 <test_wait_threads>
 8004558:	4918      	ldr	r1, [pc, #96]	; (80045bc <dyn1_execute+0xcc>)
 800455a:	2002      	movs	r0, #2
 800455c:	f7fc f8f0 	bl	8000740 <_test_assert_sequence>
 8004560:	2800      	cmp	r0, #0
 8004562:	d1f5      	bne.n	8004550 <dyn1_execute+0x60>
 8004564:	a901      	add	r1, sp, #4
 8004566:	4810      	ldr	r0, [pc, #64]	; (80045a8 <dyn1_execute+0xb8>)
 8004568:	f7fe fd8a 	bl	8003080 <chHeapStatus>
 800456c:	f1a0 0101 	sub.w	r1, r0, #1
 8004570:	fab1 f181 	clz	r1, r1
 8004574:	0949      	lsrs	r1, r1, #5
 8004576:	2003      	movs	r0, #3
 8004578:	f7fc f90a 	bl	8000790 <_test_assert>
 800457c:	2800      	cmp	r0, #0
 800457e:	d1e7      	bne.n	8004550 <dyn1_execute+0x60>
 8004580:	e9dd 3100 	ldrd	r3, r1, [sp]
 8004584:	1ac9      	subs	r1, r1, r3
 8004586:	fab1 f181 	clz	r1, r1
 800458a:	0949      	lsrs	r1, r1, #5
 800458c:	2004      	movs	r0, #4
 800458e:	f7fc f8ff 	bl	8000790 <_test_assert>
 8004592:	e7dd      	b.n	8004550 <dyn1_execute+0x60>
 8004594:	68e3      	ldr	r3, [r4, #12]
 8004596:	2b00      	cmp	r3, #0
 8004598:	d1d6      	bne.n	8004548 <dyn1_execute+0x58>
 800459a:	6921      	ldr	r1, [r4, #16]
 800459c:	fab1 f181 	clz	r1, r1
 80045a0:	0949      	lsrs	r1, r1, #5
 80045a2:	e7d1      	b.n	8004548 <dyn1_execute+0x58>
 80045a4:	20000930 	.word	0x20000930
 80045a8:	20000ab0 	.word	0x20000ab0
 80045ac:	200011cc 	.word	0x200011cc
 80045b0:	08005d60 	.word	0x08005d60
 80045b4:	08005d50 	.word	0x08005d50
 80045b8:	08005d54 	.word	0x08005d54
 80045bc:	08005d40 	.word	0x08005d40

080045c0 <evt2_execute>:
 80045c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80045c4:	2520      	movs	r5, #32
 80045c6:	b08f      	sub	sp, #60	; 0x3c
 80045c8:	f385 8811 	msr	BASEPRI, r5
 80045cc:	4ca9      	ldr	r4, [pc, #676]	; (8004874 <evt2_execute+0x2b4>)
 80045ce:	69a2      	ldr	r2, [r4, #24]
 80045d0:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80045d2:	f043 0307 	orr.w	r3, r3, #7
 80045d6:	6353      	str	r3, [r2, #52]	; 0x34
 80045d8:	2300      	movs	r3, #0
 80045da:	f383 8811 	msr	BASEPRI, r3
 80045de:	f7fd fa7f 	bl	8001ae0 <chEvtWaitOne.constprop.31>
 80045e2:	f1a0 0101 	sub.w	r1, r0, #1
 80045e6:	fab1 f181 	clz	r1, r1
 80045ea:	0949      	lsrs	r1, r1, #5
 80045ec:	2001      	movs	r0, #1
 80045ee:	f7fc f8cf 	bl	8000790 <_test_assert>
 80045f2:	b110      	cbz	r0, 80045fa <evt2_execute+0x3a>
 80045f4:	b00f      	add	sp, #60	; 0x3c
 80045f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80045fa:	f7fd fa71 	bl	8001ae0 <chEvtWaitOne.constprop.31>
 80045fe:	f1a0 0102 	sub.w	r1, r0, #2
 8004602:	fab1 f181 	clz	r1, r1
 8004606:	0949      	lsrs	r1, r1, #5
 8004608:	2002      	movs	r0, #2
 800460a:	f7fc f8c1 	bl	8000790 <_test_assert>
 800460e:	2800      	cmp	r0, #0
 8004610:	d1f0      	bne.n	80045f4 <evt2_execute+0x34>
 8004612:	f7fd fa65 	bl	8001ae0 <chEvtWaitOne.constprop.31>
 8004616:	f1a0 0104 	sub.w	r1, r0, #4
 800461a:	fab1 f181 	clz	r1, r1
 800461e:	0949      	lsrs	r1, r1, #5
 8004620:	2003      	movs	r0, #3
 8004622:	f7fc f8b5 	bl	8000790 <_test_assert>
 8004626:	2800      	cmp	r0, #0
 8004628:	d1e4      	bne.n	80045f4 <evt2_execute+0x34>
 800462a:	f7fb fe49 	bl	80002c0 <chEvtGetAndClearEvents.constprop.35>
 800462e:	fab0 f180 	clz	r1, r0
 8004632:	0949      	lsrs	r1, r1, #5
 8004634:	2004      	movs	r0, #4
 8004636:	f7fc f8ab 	bl	8000790 <_test_assert>
 800463a:	4606      	mov	r6, r0
 800463c:	2800      	cmp	r0, #0
 800463e:	d1d9      	bne.n	80045f4 <evt2_execute+0x34>
 8004640:	f7fe f926 	bl	8002890 <test_wait_tick>
 8004644:	f385 8811 	msr	BASEPRI, r5
 8004648:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 800464c:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
 8004650:	f386 8811 	msr	BASEPRI, r6
 8004654:	69a1      	ldr	r1, [r4, #24]
 8004656:	4b88      	ldr	r3, [pc, #544]	; (8004878 <evt2_execute+0x2b8>)
 8004658:	688a      	ldr	r2, [r1, #8]
 800465a:	4888      	ldr	r0, [pc, #544]	; (800487c <evt2_execute+0x2bc>)
 800465c:	9100      	str	r1, [sp, #0]
 800465e:	3a01      	subs	r2, #1
 8004660:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004664:	f7fd f96c 	bl	8001940 <chThdCreateStatic>
 8004668:	4e85      	ldr	r6, [pc, #532]	; (8004880 <evt2_execute+0x2c0>)
 800466a:	6030      	str	r0, [r6, #0]
 800466c:	f7fd fa38 	bl	8001ae0 <chEvtWaitOne.constprop.31>
 8004670:	f207 2226 	addw	r2, r7, #550	; 0x226
 8004674:	4681      	mov	r9, r0
 8004676:	f507 71fa 	add.w	r1, r7, #500	; 0x1f4
 800467a:	2005      	movs	r0, #5
 800467c:	f7fc f840 	bl	8000700 <_test_assert_time_window>
 8004680:	2800      	cmp	r0, #0
 8004682:	d1b7      	bne.n	80045f4 <evt2_execute+0x34>
 8004684:	f1a9 0101 	sub.w	r1, r9, #1
 8004688:	fab1 f181 	clz	r1, r1
 800468c:	0949      	lsrs	r1, r1, #5
 800468e:	2006      	movs	r0, #6
 8004690:	f7fc f87e 	bl	8000790 <_test_assert>
 8004694:	2800      	cmp	r0, #0
 8004696:	d1ad      	bne.n	80045f4 <evt2_execute+0x34>
 8004698:	f7fb fe12 	bl	80002c0 <chEvtGetAndClearEvents.constprop.35>
 800469c:	fab0 f180 	clz	r1, r0
 80046a0:	0949      	lsrs	r1, r1, #5
 80046a2:	2007      	movs	r0, #7
 80046a4:	f7fc f874 	bl	8000790 <_test_assert>
 80046a8:	4607      	mov	r7, r0
 80046aa:	2800      	cmp	r0, #0
 80046ac:	d1a2      	bne.n	80045f4 <evt2_execute+0x34>
 80046ae:	f7ff f9bf 	bl	8003a30 <test_wait_threads>
 80046b2:	f385 8811 	msr	BASEPRI, r5
 80046b6:	69a2      	ldr	r2, [r4, #24]
 80046b8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80046ba:	f043 0305 	orr.w	r3, r3, #5
 80046be:	6353      	str	r3, [r2, #52]	; 0x34
 80046c0:	f387 8811 	msr	BASEPRI, r7
 80046c4:	f7fd fa2c 	bl	8001b20 <chEvtWaitAny.constprop.30>
 80046c8:	1f47      	subs	r7, r0, #5
 80046ca:	4279      	negs	r1, r7
 80046cc:	4179      	adcs	r1, r7
 80046ce:	2008      	movs	r0, #8
 80046d0:	f7fc f85e 	bl	8000790 <_test_assert>
 80046d4:	2800      	cmp	r0, #0
 80046d6:	d18d      	bne.n	80045f4 <evt2_execute+0x34>
 80046d8:	f7fb fdf2 	bl	80002c0 <chEvtGetAndClearEvents.constprop.35>
 80046dc:	fab0 f180 	clz	r1, r0
 80046e0:	0949      	lsrs	r1, r1, #5
 80046e2:	2009      	movs	r0, #9
 80046e4:	f7fc f854 	bl	8000790 <_test_assert>
 80046e8:	4607      	mov	r7, r0
 80046ea:	2800      	cmp	r0, #0
 80046ec:	d182      	bne.n	80045f4 <evt2_execute+0x34>
 80046ee:	f7fe f8cf 	bl	8002890 <test_wait_tick>
 80046f2:	f385 8811 	msr	BASEPRI, r5
 80046f6:	f8d8 5024 	ldr.w	r5, [r8, #36]	; 0x24
 80046fa:	f387 8811 	msr	BASEPRI, r7
 80046fe:	69a1      	ldr	r1, [r4, #24]
 8004700:	4b5d      	ldr	r3, [pc, #372]	; (8004878 <evt2_execute+0x2b8>)
 8004702:	688a      	ldr	r2, [r1, #8]
 8004704:	485d      	ldr	r0, [pc, #372]	; (800487c <evt2_execute+0x2bc>)
 8004706:	9100      	str	r1, [sp, #0]
 8004708:	3a01      	subs	r2, #1
 800470a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800470e:	f7fd f917 	bl	8001940 <chThdCreateStatic>
 8004712:	6030      	str	r0, [r6, #0]
 8004714:	f7fd fa04 	bl	8001b20 <chEvtWaitAny.constprop.30>
 8004718:	f205 2226 	addw	r2, r5, #550	; 0x226
 800471c:	4607      	mov	r7, r0
 800471e:	f505 71fa 	add.w	r1, r5, #500	; 0x1f4
 8004722:	200a      	movs	r0, #10
 8004724:	f7fb ffec 	bl	8000700 <_test_assert_time_window>
 8004728:	2800      	cmp	r0, #0
 800472a:	f47f af63 	bne.w	80045f4 <evt2_execute+0x34>
 800472e:	1e78      	subs	r0, r7, #1
 8004730:	4241      	negs	r1, r0
 8004732:	4141      	adcs	r1, r0
 8004734:	200b      	movs	r0, #11
 8004736:	f7fc f82b 	bl	8000790 <_test_assert>
 800473a:	2800      	cmp	r0, #0
 800473c:	f47f af5a 	bne.w	80045f4 <evt2_execute+0x34>
 8004740:	f7fb fdbe 	bl	80002c0 <chEvtGetAndClearEvents.constprop.35>
 8004744:	fab0 f180 	clz	r1, r0
 8004748:	0949      	lsrs	r1, r1, #5
 800474a:	200c      	movs	r0, #12
 800474c:	f7fc f820 	bl	8000790 <_test_assert>
 8004750:	4683      	mov	fp, r0
 8004752:	2800      	cmp	r0, #0
 8004754:	f47f af4e 	bne.w	80045f4 <evt2_execute+0x34>
 8004758:	4f4a      	ldr	r7, [pc, #296]	; (8004884 <evt2_execute+0x2c4>)
 800475a:	4d4b      	ldr	r5, [pc, #300]	; (8004888 <evt2_execute+0x2c8>)
 800475c:	f7ff f968 	bl	8003a30 <test_wait_threads>
 8004760:	f04f 0a20 	mov.w	sl, #32
 8004764:	603f      	str	r7, [r7, #0]
 8004766:	602d      	str	r5, [r5, #0]
 8004768:	f38a 8811 	msr	BASEPRI, sl
 800476c:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 8004770:	683a      	ldr	r2, [r7, #0]
 8004772:	f849 2d28 	str.w	r2, [r9, #-40]!
 8004776:	69a0      	ldr	r0, [r4, #24]
 8004778:	f8cd b01c 	str.w	fp, [sp, #28]
 800477c:	2101      	movs	r1, #1
 800477e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004782:	e9cd 0105 	strd	r0, r1, [sp, #20]
 8004786:	f8c7 9000 	str.w	r9, [r7]
 800478a:	9208      	str	r2, [sp, #32]
 800478c:	f38b 8811 	msr	BASEPRI, fp
 8004790:	f38a 8811 	msr	BASEPRI, sl
 8004794:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8004798:	6829      	ldr	r1, [r5, #0]
 800479a:	f848 1d14 	str.w	r1, [r8, #-20]!
 800479e:	69a0      	ldr	r0, [r4, #24]
 80047a0:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80047a4:	2104      	movs	r1, #4
 80047a6:	920d      	str	r2, [sp, #52]	; 0x34
 80047a8:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80047ac:	f8c5 8000 	str.w	r8, [r5]
 80047b0:	f38b 8811 	msr	BASEPRI, fp
 80047b4:	f7fe f86c 	bl	8002890 <test_wait_tick>
 80047b8:	f38a 8811 	msr	BASEPRI, sl
 80047bc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80047c0:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80047c2:	9302      	str	r3, [sp, #8]
 80047c4:	f38b 8811 	msr	BASEPRI, fp
 80047c8:	69a3      	ldr	r3, [r4, #24]
 80047ca:	4930      	ldr	r1, [pc, #192]	; (800488c <evt2_execute+0x2cc>)
 80047cc:	689a      	ldr	r2, [r3, #8]
 80047ce:	482b      	ldr	r0, [pc, #172]	; (800487c <evt2_execute+0x2bc>)
 80047d0:	9100      	str	r1, [sp, #0]
 80047d2:	4b2f      	ldr	r3, [pc, #188]	; (8004890 <evt2_execute+0x2d0>)
 80047d4:	3a01      	subs	r2, #1
 80047d6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80047da:	f7fd f8b1 	bl	8001940 <chThdCreateStatic>
 80047de:	9b02      	ldr	r3, [sp, #8]
 80047e0:	6030      	str	r0, [r6, #0]
 80047e2:	f503 71fa 	add.w	r1, r3, #500	; 0x1f4
 80047e6:	69a4      	ldr	r4, [r4, #24]
 80047e8:	f38a 8811 	msr	BASEPRI, sl
 80047ec:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80047ee:	f003 0205 	and.w	r2, r3, #5
 80047f2:	2a05      	cmp	r2, #5
 80047f4:	d007      	beq.n	8004806 <evt2_execute+0x246>
 80047f6:	2305      	movs	r3, #5
 80047f8:	6223      	str	r3, [r4, #32]
 80047fa:	200b      	movs	r0, #11
 80047fc:	9103      	str	r1, [sp, #12]
 80047fe:	f7fd f8d7 	bl	80019b0 <chSchGoSleepS>
 8004802:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004804:	9903      	ldr	r1, [sp, #12]
 8004806:	f023 0305 	bic.w	r3, r3, #5
 800480a:	6363      	str	r3, [r4, #52]	; 0x34
 800480c:	2300      	movs	r3, #0
 800480e:	f383 8811 	msr	BASEPRI, r3
 8004812:	9b02      	ldr	r3, [sp, #8]
 8004814:	200d      	movs	r0, #13
 8004816:	f203 2226 	addw	r2, r3, #550	; 0x226
 800481a:	f7fb ff71 	bl	8000700 <_test_assert_time_window>
 800481e:	2800      	cmp	r0, #0
 8004820:	f47f aee8 	bne.w	80045f4 <evt2_execute+0x34>
 8004824:	f7fb fd4c 	bl	80002c0 <chEvtGetAndClearEvents.constprop.35>
 8004828:	fab0 f180 	clz	r1, r0
 800482c:	0949      	lsrs	r1, r1, #5
 800482e:	200e      	movs	r0, #14
 8004830:	f7fb ffae 	bl	8000790 <_test_assert>
 8004834:	2800      	cmp	r0, #0
 8004836:	f47f aedd 	bne.w	80045f4 <evt2_execute+0x34>
 800483a:	f7ff f8f9 	bl	8003a30 <test_wait_threads>
 800483e:	4649      	mov	r1, r9
 8004840:	4810      	ldr	r0, [pc, #64]	; (8004884 <evt2_execute+0x2c4>)
 8004842:	f7fc f945 	bl	8000ad0 <chEvtUnregister>
 8004846:	4641      	mov	r1, r8
 8004848:	480f      	ldr	r0, [pc, #60]	; (8004888 <evt2_execute+0x2c8>)
 800484a:	f7fc f941 	bl	8000ad0 <chEvtUnregister>
 800484e:	6839      	ldr	r1, [r7, #0]
 8004850:	1bca      	subs	r2, r1, r7
 8004852:	4251      	negs	r1, r2
 8004854:	4151      	adcs	r1, r2
 8004856:	200f      	movs	r0, #15
 8004858:	f7fb ff9a 	bl	8000790 <_test_assert>
 800485c:	2800      	cmp	r0, #0
 800485e:	f47f aec9 	bne.w	80045f4 <evt2_execute+0x34>
 8004862:	6829      	ldr	r1, [r5, #0]
 8004864:	1b4b      	subs	r3, r1, r5
 8004866:	4259      	negs	r1, r3
 8004868:	4159      	adcs	r1, r3
 800486a:	2010      	movs	r0, #16
 800486c:	f7fb ff90 	bl	8000790 <_test_assert>
 8004870:	e6c0      	b.n	80045f4 <evt2_execute+0x34>
 8004872:	bf00      	nop
 8004874:	20000930 	.word	0x20000930
 8004878:	080027f1 	.word	0x080027f1
 800487c:	20000b38 	.word	0x20000b38
 8004880:	200011cc 	.word	0x200011cc
 8004884:	20000808 	.word	0x20000808
 8004888:	2000080c 	.word	0x2000080c
 800488c:	08005d60 	.word	0x08005d60
 8004890:	08002821 	.word	0x08002821
	...

080048a0 <mtx8_execute>:
 80048a0:	b570      	push	{r4, r5, r6, lr}
 80048a2:	4b19      	ldr	r3, [pc, #100]	; (8004908 <mtx8_execute+0x68>)
 80048a4:	4d19      	ldr	r5, [pc, #100]	; (800490c <mtx8_execute+0x6c>)
 80048a6:	699b      	ldr	r3, [r3, #24]
 80048a8:	4a19      	ldr	r2, [pc, #100]	; (8004910 <mtx8_execute+0x70>)
 80048aa:	689e      	ldr	r6, [r3, #8]
 80048ac:	4b19      	ldr	r3, [pc, #100]	; (8004914 <mtx8_execute+0x74>)
 80048ae:	4c1a      	ldr	r4, [pc, #104]	; (8004918 <mtx8_execute+0x78>)
 80048b0:	b082      	sub	sp, #8
 80048b2:	4628      	mov	r0, r5
 80048b4:	9200      	str	r2, [sp, #0]
 80048b6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80048ba:	1c72      	adds	r2, r6, #1
 80048bc:	f7fd f840 	bl	8001940 <chThdCreateStatic>
 80048c0:	4b16      	ldr	r3, [pc, #88]	; (800491c <mtx8_execute+0x7c>)
 80048c2:	6020      	str	r0, [r4, #0]
 80048c4:	1cb2      	adds	r2, r6, #2
 80048c6:	9300      	str	r3, [sp, #0]
 80048c8:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 80048cc:	4b14      	ldr	r3, [pc, #80]	; (8004920 <mtx8_execute+0x80>)
 80048ce:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80048d2:	f7fd f835 	bl	8001940 <chThdCreateStatic>
 80048d6:	4b13      	ldr	r3, [pc, #76]	; (8004924 <mtx8_execute+0x84>)
 80048d8:	6060      	str	r0, [r4, #4]
 80048da:	1cf2      	adds	r2, r6, #3
 80048dc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80048e0:	9300      	str	r3, [sp, #0]
 80048e2:	f505 7024 	add.w	r0, r5, #656	; 0x290
 80048e6:	4b10      	ldr	r3, [pc, #64]	; (8004928 <mtx8_execute+0x88>)
 80048e8:	f7fd f82a 	bl	8001940 <chThdCreateStatic>
 80048ec:	60a0      	str	r0, [r4, #8]
 80048ee:	f7fc ffbf 	bl	8001870 <chCondSignal.constprop.43>
 80048f2:	f7fc ffbd 	bl	8001870 <chCondSignal.constprop.43>
 80048f6:	f7ff f89b 	bl	8003a30 <test_wait_threads>
 80048fa:	490c      	ldr	r1, [pc, #48]	; (800492c <mtx8_execute+0x8c>)
 80048fc:	2001      	movs	r0, #1
 80048fe:	b002      	add	sp, #8
 8004900:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004904:	f7fb bf1c 	b.w	8000740 <_test_assert_sequence>
 8004908:	20000930 	.word	0x20000930
 800490c:	20000b38 	.word	0x20000b38
 8004910:	08005d60 	.word	0x08005d60
 8004914:	08002e11 	.word	0x08002e11
 8004918:	200011cc 	.word	0x200011cc
 800491c:	08005d54 	.word	0x08005d54
 8004920:	08002ea1 	.word	0x08002ea1
 8004924:	08005d50 	.word	0x08005d50
 8004928:	08002f11 	.word	0x08002f11
 800492c:	08005d80 	.word	0x08005d80

08004930 <mtx7_execute>:
 8004930:	b530      	push	{r4, r5, lr}
 8004932:	4b2c      	ldr	r3, [pc, #176]	; (80049e4 <mtx7_execute+0xb4>)
 8004934:	4a2c      	ldr	r2, [pc, #176]	; (80049e8 <mtx7_execute+0xb8>)
 8004936:	6999      	ldr	r1, [r3, #24]
 8004938:	482c      	ldr	r0, [pc, #176]	; (80049ec <mtx7_execute+0xbc>)
 800493a:	688d      	ldr	r5, [r1, #8]
 800493c:	4b2c      	ldr	r3, [pc, #176]	; (80049f0 <mtx7_execute+0xc0>)
 800493e:	4c2d      	ldr	r4, [pc, #180]	; (80049f4 <mtx7_execute+0xc4>)
 8004940:	b083      	sub	sp, #12
 8004942:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004946:	9200      	str	r2, [sp, #0]
 8004948:	1c6a      	adds	r2, r5, #1
 800494a:	f7fc fff9 	bl	8001940 <chThdCreateStatic>
 800494e:	4b2a      	ldr	r3, [pc, #168]	; (80049f8 <mtx7_execute+0xc8>)
 8004950:	6020      	str	r0, [r4, #0]
 8004952:	1caa      	adds	r2, r5, #2
 8004954:	9300      	str	r3, [sp, #0]
 8004956:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800495a:	4b25      	ldr	r3, [pc, #148]	; (80049f0 <mtx7_execute+0xc0>)
 800495c:	4827      	ldr	r0, [pc, #156]	; (80049fc <mtx7_execute+0xcc>)
 800495e:	f7fc ffef 	bl	8001940 <chThdCreateStatic>
 8004962:	4b27      	ldr	r3, [pc, #156]	; (8004a00 <mtx7_execute+0xd0>)
 8004964:	6060      	str	r0, [r4, #4]
 8004966:	1cea      	adds	r2, r5, #3
 8004968:	9300      	str	r3, [sp, #0]
 800496a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800496e:	4b20      	ldr	r3, [pc, #128]	; (80049f0 <mtx7_execute+0xc0>)
 8004970:	4824      	ldr	r0, [pc, #144]	; (8004a04 <mtx7_execute+0xd4>)
 8004972:	f7fc ffe5 	bl	8001940 <chThdCreateStatic>
 8004976:	4b24      	ldr	r3, [pc, #144]	; (8004a08 <mtx7_execute+0xd8>)
 8004978:	60a0      	str	r0, [r4, #8]
 800497a:	1d2a      	adds	r2, r5, #4
 800497c:	9300      	str	r3, [sp, #0]
 800497e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004982:	4b1b      	ldr	r3, [pc, #108]	; (80049f0 <mtx7_execute+0xc0>)
 8004984:	4821      	ldr	r0, [pc, #132]	; (8004a0c <mtx7_execute+0xdc>)
 8004986:	f7fc ffdb 	bl	8001940 <chThdCreateStatic>
 800498a:	4b21      	ldr	r3, [pc, #132]	; (8004a10 <mtx7_execute+0xe0>)
 800498c:	60e0      	str	r0, [r4, #12]
 800498e:	1d6a      	adds	r2, r5, #5
 8004990:	9300      	str	r3, [sp, #0]
 8004992:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004996:	4b16      	ldr	r3, [pc, #88]	; (80049f0 <mtx7_execute+0xc0>)
 8004998:	481e      	ldr	r0, [pc, #120]	; (8004a14 <mtx7_execute+0xe4>)
 800499a:	f7fc ffd1 	bl	8001940 <chThdCreateStatic>
 800499e:	2320      	movs	r3, #32
 80049a0:	6120      	str	r0, [r4, #16]
 80049a2:	f383 8811 	msr	BASEPRI, r3
 80049a6:	4c1c      	ldr	r4, [pc, #112]	; (8004a18 <mtx7_execute+0xe8>)
 80049a8:	6823      	ldr	r3, [r4, #0]
 80049aa:	42a3      	cmp	r3, r4
 80049ac:	d00b      	beq.n	80049c6 <mtx7_execute+0x96>
 80049ae:	f06f 0501 	mvn.w	r5, #1
 80049b2:	681a      	ldr	r2, [r3, #0]
 80049b4:	6022      	str	r2, [r4, #0]
 80049b6:	4618      	mov	r0, r3
 80049b8:	6054      	str	r4, [r2, #4]
 80049ba:	f7fc f979 	bl	8000cb0 <chSchReadyI>
 80049be:	6823      	ldr	r3, [r4, #0]
 80049c0:	6205      	str	r5, [r0, #32]
 80049c2:	42a3      	cmp	r3, r4
 80049c4:	d1f5      	bne.n	80049b2 <mtx7_execute+0x82>
 80049c6:	f7fc fdab 	bl	8001520 <chSchRescheduleS>
 80049ca:	2300      	movs	r3, #0
 80049cc:	f383 8811 	msr	BASEPRI, r3
 80049d0:	f7ff f82e 	bl	8003a30 <test_wait_threads>
 80049d4:	4911      	ldr	r1, [pc, #68]	; (8004a1c <mtx7_execute+0xec>)
 80049d6:	2001      	movs	r0, #1
 80049d8:	b003      	add	sp, #12
 80049da:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80049de:	f7fb beaf 	b.w	8000740 <_test_assert_sequence>
 80049e2:	bf00      	nop
 80049e4:	20000930 	.word	0x20000930
 80049e8:	08005fb4 	.word	0x08005fb4
 80049ec:	20000b38 	.word	0x20000b38
 80049f0:	08002ea1 	.word	0x08002ea1
 80049f4:	200011cc 	.word	0x200011cc
 80049f8:	08005d58 	.word	0x08005d58
 80049fc:	20000c80 	.word	0x20000c80
 8004a00:	08005d54 	.word	0x08005d54
 8004a04:	20000dc8 	.word	0x20000dc8
 8004a08:	08005d50 	.word	0x08005d50
 8004a0c:	20000f10 	.word	0x20000f10
 8004a10:	08005d60 	.word	0x08005d60
 8004a14:	20001058 	.word	0x20001058
 8004a18:	20000800 	.word	0x20000800
 8004a1c:	08005fb0 	.word	0x08005fb0

08004a20 <mtx6_execute>:
 8004a20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a22:	4b2c      	ldr	r3, [pc, #176]	; (8004ad4 <mtx6_execute+0xb4>)
 8004a24:	4e2c      	ldr	r6, [pc, #176]	; (8004ad8 <mtx6_execute+0xb8>)
 8004a26:	699b      	ldr	r3, [r3, #24]
 8004a28:	4d2c      	ldr	r5, [pc, #176]	; (8004adc <mtx6_execute+0xbc>)
 8004a2a:	689f      	ldr	r7, [r3, #8]
 8004a2c:	4b2c      	ldr	r3, [pc, #176]	; (8004ae0 <mtx6_execute+0xc0>)
 8004a2e:	4c2d      	ldr	r4, [pc, #180]	; (8004ae4 <mtx6_execute+0xc4>)
 8004a30:	b083      	sub	sp, #12
 8004a32:	1c7a      	adds	r2, r7, #1
 8004a34:	9300      	str	r3, [sp, #0]
 8004a36:	4628      	mov	r0, r5
 8004a38:	4633      	mov	r3, r6
 8004a3a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a3e:	f7fc ff7f 	bl	8001940 <chThdCreateStatic>
 8004a42:	4929      	ldr	r1, [pc, #164]	; (8004ae8 <mtx6_execute+0xc8>)
 8004a44:	6020      	str	r0, [r4, #0]
 8004a46:	1cba      	adds	r2, r7, #2
 8004a48:	4633      	mov	r3, r6
 8004a4a:	9100      	str	r1, [sp, #0]
 8004a4c:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8004a50:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a54:	f7fc ff74 	bl	8001940 <chThdCreateStatic>
 8004a58:	4924      	ldr	r1, [pc, #144]	; (8004aec <mtx6_execute+0xcc>)
 8004a5a:	6060      	str	r0, [r4, #4]
 8004a5c:	1cfa      	adds	r2, r7, #3
 8004a5e:	4633      	mov	r3, r6
 8004a60:	9100      	str	r1, [sp, #0]
 8004a62:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8004a66:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a6a:	f7fc ff69 	bl	8001940 <chThdCreateStatic>
 8004a6e:	4920      	ldr	r1, [pc, #128]	; (8004af0 <mtx6_execute+0xd0>)
 8004a70:	60a0      	str	r0, [r4, #8]
 8004a72:	1d3a      	adds	r2, r7, #4
 8004a74:	4633      	mov	r3, r6
 8004a76:	9100      	str	r1, [sp, #0]
 8004a78:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8004a7c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a80:	f7fc ff5e 	bl	8001940 <chThdCreateStatic>
 8004a84:	491b      	ldr	r1, [pc, #108]	; (8004af4 <mtx6_execute+0xd4>)
 8004a86:	60e0      	str	r0, [r4, #12]
 8004a88:	4633      	mov	r3, r6
 8004a8a:	9100      	str	r1, [sp, #0]
 8004a8c:	1d7a      	adds	r2, r7, #5
 8004a8e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8004a92:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a96:	f7fc ff53 	bl	8001940 <chThdCreateStatic>
 8004a9a:	2320      	movs	r3, #32
 8004a9c:	6120      	str	r0, [r4, #16]
 8004a9e:	f383 8811 	msr	BASEPRI, r3
 8004aa2:	f7fc f91d 	bl	8000ce0 <chCondSignalI.constprop.42>
 8004aa6:	f7fc f91b 	bl	8000ce0 <chCondSignalI.constprop.42>
 8004aaa:	f7fc f919 	bl	8000ce0 <chCondSignalI.constprop.42>
 8004aae:	f7fc f917 	bl	8000ce0 <chCondSignalI.constprop.42>
 8004ab2:	f7fc f915 	bl	8000ce0 <chCondSignalI.constprop.42>
 8004ab6:	f7fc fd33 	bl	8001520 <chSchRescheduleS>
 8004aba:	2300      	movs	r3, #0
 8004abc:	f383 8811 	msr	BASEPRI, r3
 8004ac0:	f7fe ffb6 	bl	8003a30 <test_wait_threads>
 8004ac4:	490c      	ldr	r1, [pc, #48]	; (8004af8 <mtx6_execute+0xd8>)
 8004ac6:	2001      	movs	r0, #1
 8004ac8:	b003      	add	sp, #12
 8004aca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004ace:	f7fb be37 	b.w	8000740 <_test_assert_sequence>
 8004ad2:	bf00      	nop
 8004ad4:	20000930 	.word	0x20000930
 8004ad8:	08002ea1 	.word	0x08002ea1
 8004adc:	20000b38 	.word	0x20000b38
 8004ae0:	08005fb4 	.word	0x08005fb4
 8004ae4:	200011cc 	.word	0x200011cc
 8004ae8:	08005d58 	.word	0x08005d58
 8004aec:	08005d54 	.word	0x08005d54
 8004af0:	08005d50 	.word	0x08005d50
 8004af4:	08005d60 	.word	0x08005d60
 8004af8:	08005fb0 	.word	0x08005fb0
 8004afc:	00000000 	.word	0x00000000

08004b00 <mtx4_execute>:
 8004b00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b04:	4d87      	ldr	r5, [pc, #540]	; (8004d24 <mtx4_execute+0x224>)
 8004b06:	4a88      	ldr	r2, [pc, #544]	; (8004d28 <mtx4_execute+0x228>)
 8004b08:	69a9      	ldr	r1, [r5, #24]
 8004b0a:	4b88      	ldr	r3, [pc, #544]	; (8004d2c <mtx4_execute+0x22c>)
 8004b0c:	688c      	ldr	r4, [r1, #8]
 8004b0e:	4888      	ldr	r0, [pc, #544]	; (8004d30 <mtx4_execute+0x230>)
 8004b10:	4e88      	ldr	r6, [pc, #544]	; (8004d34 <mtx4_execute+0x234>)
 8004b12:	b082      	sub	sp, #8
 8004b14:	1c67      	adds	r7, r4, #1
 8004b16:	9200      	str	r2, [sp, #0]
 8004b18:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b1c:	463a      	mov	r2, r7
 8004b1e:	f7fc ff0f 	bl	8001940 <chThdCreateStatic>
 8004b22:	f104 0802 	add.w	r8, r4, #2
 8004b26:	4b84      	ldr	r3, [pc, #528]	; (8004d38 <mtx4_execute+0x238>)
 8004b28:	6030      	str	r0, [r6, #0]
 8004b2a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b2e:	4642      	mov	r2, r8
 8004b30:	9300      	str	r3, [sp, #0]
 8004b32:	4882      	ldr	r0, [pc, #520]	; (8004d3c <mtx4_execute+0x23c>)
 8004b34:	4b82      	ldr	r3, [pc, #520]	; (8004d40 <mtx4_execute+0x240>)
 8004b36:	f7fc ff03 	bl	8001940 <chThdCreateStatic>
 8004b3a:	6070      	str	r0, [r6, #4]
 8004b3c:	4881      	ldr	r0, [pc, #516]	; (8004d44 <mtx4_execute+0x244>)
 8004b3e:	f7fe f91f 	bl	8002d80 <chMtxLock>
 8004b42:	69ab      	ldr	r3, [r5, #24]
 8004b44:	6899      	ldr	r1, [r3, #8]
 8004b46:	1b09      	subs	r1, r1, r4
 8004b48:	fab1 f181 	clz	r1, r1
 8004b4c:	2001      	movs	r0, #1
 8004b4e:	0949      	lsrs	r1, r1, #5
 8004b50:	f7fb fe1e 	bl	8000790 <_test_assert>
 8004b54:	b110      	cbz	r0, 8004b5c <mtx4_execute+0x5c>
 8004b56:	b002      	add	sp, #8
 8004b58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b5c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004b60:	f7fd fdb6 	bl	80026d0 <chThdSleep>
 8004b64:	69ab      	ldr	r3, [r5, #24]
 8004b66:	6899      	ldr	r1, [r3, #8]
 8004b68:	1bc9      	subs	r1, r1, r7
 8004b6a:	fab1 f181 	clz	r1, r1
 8004b6e:	2002      	movs	r0, #2
 8004b70:	0949      	lsrs	r1, r1, #5
 8004b72:	f7fb fe0d 	bl	8000790 <_test_assert>
 8004b76:	2800      	cmp	r0, #0
 8004b78:	d1ed      	bne.n	8004b56 <mtx4_execute+0x56>
 8004b7a:	4873      	ldr	r0, [pc, #460]	; (8004d48 <mtx4_execute+0x248>)
 8004b7c:	f7fe f900 	bl	8002d80 <chMtxLock>
 8004b80:	69ab      	ldr	r3, [r5, #24]
 8004b82:	6899      	ldr	r1, [r3, #8]
 8004b84:	1bc9      	subs	r1, r1, r7
 8004b86:	fab1 f181 	clz	r1, r1
 8004b8a:	2003      	movs	r0, #3
 8004b8c:	0949      	lsrs	r1, r1, #5
 8004b8e:	f7fb fdff 	bl	8000790 <_test_assert>
 8004b92:	2800      	cmp	r0, #0
 8004b94:	d1df      	bne.n	8004b56 <mtx4_execute+0x56>
 8004b96:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004b9a:	f7fd fd99 	bl	80026d0 <chThdSleep>
 8004b9e:	69ab      	ldr	r3, [r5, #24]
 8004ba0:	6899      	ldr	r1, [r3, #8]
 8004ba2:	eba1 0108 	sub.w	r1, r1, r8
 8004ba6:	fab1 f181 	clz	r1, r1
 8004baa:	2004      	movs	r0, #4
 8004bac:	0949      	lsrs	r1, r1, #5
 8004bae:	f7fb fdef 	bl	8000790 <_test_assert>
 8004bb2:	2800      	cmp	r0, #0
 8004bb4:	d1cf      	bne.n	8004b56 <mtx4_execute+0x56>
 8004bb6:	4864      	ldr	r0, [pc, #400]	; (8004d48 <mtx4_execute+0x248>)
 8004bb8:	f7fc fe72 	bl	80018a0 <chMtxUnlock>
 8004bbc:	69ab      	ldr	r3, [r5, #24]
 8004bbe:	6899      	ldr	r1, [r3, #8]
 8004bc0:	1bc9      	subs	r1, r1, r7
 8004bc2:	fab1 f181 	clz	r1, r1
 8004bc6:	2005      	movs	r0, #5
 8004bc8:	0949      	lsrs	r1, r1, #5
 8004bca:	f7fb fde1 	bl	8000790 <_test_assert>
 8004bce:	2800      	cmp	r0, #0
 8004bd0:	d1c1      	bne.n	8004b56 <mtx4_execute+0x56>
 8004bd2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004bd6:	f7fd fd7b 	bl	80026d0 <chThdSleep>
 8004bda:	69ab      	ldr	r3, [r5, #24]
 8004bdc:	6899      	ldr	r1, [r3, #8]
 8004bde:	1bc9      	subs	r1, r1, r7
 8004be0:	fab1 f181 	clz	r1, r1
 8004be4:	2006      	movs	r0, #6
 8004be6:	0949      	lsrs	r1, r1, #5
 8004be8:	f7fb fdd2 	bl	8000790 <_test_assert>
 8004bec:	2800      	cmp	r0, #0
 8004bee:	d1b2      	bne.n	8004b56 <mtx4_execute+0x56>
 8004bf0:	f7fc fcbe 	bl	8001570 <chMtxUnlockAll>
 8004bf4:	69ab      	ldr	r3, [r5, #24]
 8004bf6:	6899      	ldr	r1, [r3, #8]
 8004bf8:	1b09      	subs	r1, r1, r4
 8004bfa:	fab1 f181 	clz	r1, r1
 8004bfe:	2007      	movs	r0, #7
 8004c00:	0949      	lsrs	r1, r1, #5
 8004c02:	f7fb fdc5 	bl	8000790 <_test_assert>
 8004c06:	2800      	cmp	r0, #0
 8004c08:	d1a5      	bne.n	8004b56 <mtx4_execute+0x56>
 8004c0a:	f7fe ff11 	bl	8003a30 <test_wait_threads>
 8004c0e:	4b4f      	ldr	r3, [pc, #316]	; (8004d4c <mtx4_execute+0x24c>)
 8004c10:	9300      	str	r3, [sp, #0]
 8004c12:	463a      	mov	r2, r7
 8004c14:	4b45      	ldr	r3, [pc, #276]	; (8004d2c <mtx4_execute+0x22c>)
 8004c16:	4846      	ldr	r0, [pc, #280]	; (8004d30 <mtx4_execute+0x230>)
 8004c18:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004c1c:	f7fc fe90 	bl	8001940 <chThdCreateStatic>
 8004c20:	4b4b      	ldr	r3, [pc, #300]	; (8004d50 <mtx4_execute+0x250>)
 8004c22:	6030      	str	r0, [r6, #0]
 8004c24:	4642      	mov	r2, r8
 8004c26:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004c2a:	9300      	str	r3, [sp, #0]
 8004c2c:	4843      	ldr	r0, [pc, #268]	; (8004d3c <mtx4_execute+0x23c>)
 8004c2e:	4b44      	ldr	r3, [pc, #272]	; (8004d40 <mtx4_execute+0x240>)
 8004c30:	f7fc fe86 	bl	8001940 <chThdCreateStatic>
 8004c34:	6070      	str	r0, [r6, #4]
 8004c36:	4843      	ldr	r0, [pc, #268]	; (8004d44 <mtx4_execute+0x244>)
 8004c38:	f7fe f8a2 	bl	8002d80 <chMtxLock>
 8004c3c:	69ab      	ldr	r3, [r5, #24]
 8004c3e:	6899      	ldr	r1, [r3, #8]
 8004c40:	1b0a      	subs	r2, r1, r4
 8004c42:	4251      	negs	r1, r2
 8004c44:	4151      	adcs	r1, r2
 8004c46:	2008      	movs	r0, #8
 8004c48:	f7fb fda2 	bl	8000790 <_test_assert>
 8004c4c:	2800      	cmp	r0, #0
 8004c4e:	d182      	bne.n	8004b56 <mtx4_execute+0x56>
 8004c50:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004c54:	f7fd fd3c 	bl	80026d0 <chThdSleep>
 8004c58:	69ab      	ldr	r3, [r5, #24]
 8004c5a:	6899      	ldr	r1, [r3, #8]
 8004c5c:	1bcb      	subs	r3, r1, r7
 8004c5e:	4259      	negs	r1, r3
 8004c60:	4159      	adcs	r1, r3
 8004c62:	2009      	movs	r0, #9
 8004c64:	f7fb fd94 	bl	8000790 <_test_assert>
 8004c68:	2800      	cmp	r0, #0
 8004c6a:	f47f af74 	bne.w	8004b56 <mtx4_execute+0x56>
 8004c6e:	4836      	ldr	r0, [pc, #216]	; (8004d48 <mtx4_execute+0x248>)
 8004c70:	f7fe f886 	bl	8002d80 <chMtxLock>
 8004c74:	69ab      	ldr	r3, [r5, #24]
 8004c76:	6899      	ldr	r1, [r3, #8]
 8004c78:	eba1 0e07 	sub.w	lr, r1, r7
 8004c7c:	f1de 0100 	rsbs	r1, lr, #0
 8004c80:	eb41 010e 	adc.w	r1, r1, lr
 8004c84:	200a      	movs	r0, #10
 8004c86:	f7fb fd83 	bl	8000790 <_test_assert>
 8004c8a:	2800      	cmp	r0, #0
 8004c8c:	f47f af63 	bne.w	8004b56 <mtx4_execute+0x56>
 8004c90:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004c94:	f7fd fd1c 	bl	80026d0 <chThdSleep>
 8004c98:	69ab      	ldr	r3, [r5, #24]
 8004c9a:	6899      	ldr	r1, [r3, #8]
 8004c9c:	eba1 0c08 	sub.w	ip, r1, r8
 8004ca0:	f1dc 0100 	rsbs	r1, ip, #0
 8004ca4:	eb41 010c 	adc.w	r1, r1, ip
 8004ca8:	200b      	movs	r0, #11
 8004caa:	f7fb fd71 	bl	8000790 <_test_assert>
 8004cae:	4606      	mov	r6, r0
 8004cb0:	2800      	cmp	r0, #0
 8004cb2:	f47f af50 	bne.w	8004b56 <mtx4_execute+0x56>
 8004cb6:	2320      	movs	r3, #32
 8004cb8:	f383 8811 	msr	BASEPRI, r3
 8004cbc:	4822      	ldr	r0, [pc, #136]	; (8004d48 <mtx4_execute+0x248>)
 8004cbe:	f7fc f94f 	bl	8000f60 <chMtxUnlockS>
 8004cc2:	f7fc fc2d 	bl	8001520 <chSchRescheduleS>
 8004cc6:	f386 8811 	msr	BASEPRI, r6
 8004cca:	69ab      	ldr	r3, [r5, #24]
 8004ccc:	6899      	ldr	r1, [r3, #8]
 8004cce:	1bce      	subs	r6, r1, r7
 8004cd0:	4271      	negs	r1, r6
 8004cd2:	4171      	adcs	r1, r6
 8004cd4:	200c      	movs	r0, #12
 8004cd6:	f7fb fd5b 	bl	8000790 <_test_assert>
 8004cda:	2800      	cmp	r0, #0
 8004cdc:	f47f af3b 	bne.w	8004b56 <mtx4_execute+0x56>
 8004ce0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004ce4:	f7fd fcf4 	bl	80026d0 <chThdSleep>
 8004ce8:	69ab      	ldr	r3, [r5, #24]
 8004cea:	6899      	ldr	r1, [r3, #8]
 8004cec:	1bca      	subs	r2, r1, r7
 8004cee:	4251      	negs	r1, r2
 8004cf0:	4151      	adcs	r1, r2
 8004cf2:	200d      	movs	r0, #13
 8004cf4:	f7fb fd4c 	bl	8000790 <_test_assert>
 8004cf8:	2800      	cmp	r0, #0
 8004cfa:	f47f af2c 	bne.w	8004b56 <mtx4_execute+0x56>
 8004cfe:	f7fc fc37 	bl	8001570 <chMtxUnlockAll>
 8004d02:	69ab      	ldr	r3, [r5, #24]
 8004d04:	6899      	ldr	r1, [r3, #8]
 8004d06:	1b0b      	subs	r3, r1, r4
 8004d08:	4259      	negs	r1, r3
 8004d0a:	4159      	adcs	r1, r3
 8004d0c:	200e      	movs	r0, #14
 8004d0e:	f7fb fd3f 	bl	8000790 <_test_assert>
 8004d12:	2800      	cmp	r0, #0
 8004d14:	f47f af1f 	bne.w	8004b56 <mtx4_execute+0x56>
 8004d18:	b002      	add	sp, #8
 8004d1a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004d1e:	f7fe be87 	b.w	8003a30 <test_wait_threads>
 8004d22:	bf00      	nop
 8004d24:	20000930 	.word	0x20000930
 8004d28:	08005d50 	.word	0x08005d50
 8004d2c:	08003021 	.word	0x08003021
 8004d30:	20000b38 	.word	0x20000b38
 8004d34:	200011cc 	.word	0x200011cc
 8004d38:	08005d60 	.word	0x08005d60
 8004d3c:	20000c80 	.word	0x20000c80
 8004d40:	08003041 	.word	0x08003041
 8004d44:	20000844 	.word	0x20000844
 8004d48:	20000834 	.word	0x20000834
 8004d4c:	08005d58 	.word	0x08005d58
 8004d50:	08005d54 	.word	0x08005d54
	...

08004d60 <mtx1_execute>:
 8004d60:	b570      	push	{r4, r5, r6, lr}
 8004d62:	4e29      	ldr	r6, [pc, #164]	; (8004e08 <mtx1_execute+0xa8>)
 8004d64:	4829      	ldr	r0, [pc, #164]	; (8004e0c <mtx1_execute+0xac>)
 8004d66:	69b3      	ldr	r3, [r6, #24]
 8004d68:	4d29      	ldr	r5, [pc, #164]	; (8004e10 <mtx1_execute+0xb0>)
 8004d6a:	689c      	ldr	r4, [r3, #8]
 8004d6c:	b082      	sub	sp, #8
 8004d6e:	f7fe f807 	bl	8002d80 <chMtxLock>
 8004d72:	4b28      	ldr	r3, [pc, #160]	; (8004e14 <mtx1_execute+0xb4>)
 8004d74:	9300      	str	r3, [sp, #0]
 8004d76:	1c62      	adds	r2, r4, #1
 8004d78:	4b27      	ldr	r3, [pc, #156]	; (8004e18 <mtx1_execute+0xb8>)
 8004d7a:	4828      	ldr	r0, [pc, #160]	; (8004e1c <mtx1_execute+0xbc>)
 8004d7c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d80:	f7fc fdde 	bl	8001940 <chThdCreateStatic>
 8004d84:	4b26      	ldr	r3, [pc, #152]	; (8004e20 <mtx1_execute+0xc0>)
 8004d86:	6028      	str	r0, [r5, #0]
 8004d88:	1ca2      	adds	r2, r4, #2
 8004d8a:	9300      	str	r3, [sp, #0]
 8004d8c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d90:	4b21      	ldr	r3, [pc, #132]	; (8004e18 <mtx1_execute+0xb8>)
 8004d92:	4824      	ldr	r0, [pc, #144]	; (8004e24 <mtx1_execute+0xc4>)
 8004d94:	f7fc fdd4 	bl	8001940 <chThdCreateStatic>
 8004d98:	4b23      	ldr	r3, [pc, #140]	; (8004e28 <mtx1_execute+0xc8>)
 8004d9a:	6068      	str	r0, [r5, #4]
 8004d9c:	1ce2      	adds	r2, r4, #3
 8004d9e:	9300      	str	r3, [sp, #0]
 8004da0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004da4:	4b1c      	ldr	r3, [pc, #112]	; (8004e18 <mtx1_execute+0xb8>)
 8004da6:	4821      	ldr	r0, [pc, #132]	; (8004e2c <mtx1_execute+0xcc>)
 8004da8:	f7fc fdca 	bl	8001940 <chThdCreateStatic>
 8004dac:	4b20      	ldr	r3, [pc, #128]	; (8004e30 <mtx1_execute+0xd0>)
 8004dae:	60a8      	str	r0, [r5, #8]
 8004db0:	1d22      	adds	r2, r4, #4
 8004db2:	9300      	str	r3, [sp, #0]
 8004db4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004db8:	4b17      	ldr	r3, [pc, #92]	; (8004e18 <mtx1_execute+0xb8>)
 8004dba:	481e      	ldr	r0, [pc, #120]	; (8004e34 <mtx1_execute+0xd4>)
 8004dbc:	f7fc fdc0 	bl	8001940 <chThdCreateStatic>
 8004dc0:	4b1d      	ldr	r3, [pc, #116]	; (8004e38 <mtx1_execute+0xd8>)
 8004dc2:	60e8      	str	r0, [r5, #12]
 8004dc4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004dc8:	1d62      	adds	r2, r4, #5
 8004dca:	9300      	str	r3, [sp, #0]
 8004dcc:	481b      	ldr	r0, [pc, #108]	; (8004e3c <mtx1_execute+0xdc>)
 8004dce:	4b12      	ldr	r3, [pc, #72]	; (8004e18 <mtx1_execute+0xb8>)
 8004dd0:	f7fc fdb6 	bl	8001940 <chThdCreateStatic>
 8004dd4:	6128      	str	r0, [r5, #16]
 8004dd6:	480d      	ldr	r0, [pc, #52]	; (8004e0c <mtx1_execute+0xac>)
 8004dd8:	f7fc fd62 	bl	80018a0 <chMtxUnlock>
 8004ddc:	f7fe fe28 	bl	8003a30 <test_wait_threads>
 8004de0:	69b3      	ldr	r3, [r6, #24]
 8004de2:	6899      	ldr	r1, [r3, #8]
 8004de4:	1b09      	subs	r1, r1, r4
 8004de6:	fab1 f181 	clz	r1, r1
 8004dea:	2001      	movs	r0, #1
 8004dec:	0949      	lsrs	r1, r1, #5
 8004dee:	f7fb fccf 	bl	8000790 <_test_assert>
 8004df2:	b108      	cbz	r0, 8004df8 <mtx1_execute+0x98>
 8004df4:	b002      	add	sp, #8
 8004df6:	bd70      	pop	{r4, r5, r6, pc}
 8004df8:	4911      	ldr	r1, [pc, #68]	; (8004e40 <mtx1_execute+0xe0>)
 8004dfa:	2002      	movs	r0, #2
 8004dfc:	b002      	add	sp, #8
 8004dfe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004e02:	f7fb bc9d 	b.w	8000740 <_test_assert_sequence>
 8004e06:	bf00      	nop
 8004e08:	20000930 	.word	0x20000930
 8004e0c:	20000834 	.word	0x20000834
 8004e10:	200011cc 	.word	0x200011cc
 8004e14:	08005fb4 	.word	0x08005fb4
 8004e18:	08003061 	.word	0x08003061
 8004e1c:	20000b38 	.word	0x20000b38
 8004e20:	08005d58 	.word	0x08005d58
 8004e24:	20000c80 	.word	0x20000c80
 8004e28:	08005d54 	.word	0x08005d54
 8004e2c:	20000dc8 	.word	0x20000dc8
 8004e30:	08005d50 	.word	0x08005d50
 8004e34:	20000f10 	.word	0x20000f10
 8004e38:	08005d60 	.word	0x08005d60
 8004e3c:	20001058 	.word	0x20001058
 8004e40:	08005fb0 	.word	0x08005fb0
	...

08004e50 <sem2_execute>:
 8004e50:	b570      	push	{r4, r5, r6, lr}
 8004e52:	2320      	movs	r3, #32
 8004e54:	b082      	sub	sp, #8
 8004e56:	f383 8811 	msr	BASEPRI, r3
 8004e5a:	4c4b      	ldr	r4, [pc, #300]	; (8004f88 <sem2_execute+0x138>)
 8004e5c:	68a3      	ldr	r3, [r4, #8]
 8004e5e:	3b01      	subs	r3, #1
 8004e60:	bf5a      	itte	pl
 8004e62:	60a3      	strpl	r3, [r4, #8]
 8004e64:	2100      	movpl	r1, #0
 8004e66:	2101      	movmi	r1, #1
 8004e68:	2300      	movs	r3, #0
 8004e6a:	f383 8811 	msr	BASEPRI, r3
 8004e6e:	2001      	movs	r0, #1
 8004e70:	f7fb fc8e 	bl	8000790 <_test_assert>
 8004e74:	b108      	cbz	r0, 8004e7a <sem2_execute+0x2a>
 8004e76:	b002      	add	sp, #8
 8004e78:	bd70      	pop	{r4, r5, r6, pc}
 8004e7a:	6821      	ldr	r1, [r4, #0]
 8004e7c:	1b09      	subs	r1, r1, r4
 8004e7e:	fab1 f181 	clz	r1, r1
 8004e82:	2002      	movs	r0, #2
 8004e84:	0949      	lsrs	r1, r1, #5
 8004e86:	f7fb fc83 	bl	8000790 <_test_assert>
 8004e8a:	2800      	cmp	r0, #0
 8004e8c:	d1f3      	bne.n	8004e76 <sem2_execute+0x26>
 8004e8e:	68a1      	ldr	r1, [r4, #8]
 8004e90:	fab1 f181 	clz	r1, r1
 8004e94:	0949      	lsrs	r1, r1, #5
 8004e96:	2003      	movs	r0, #3
 8004e98:	f7fb fc7a 	bl	8000790 <_test_assert>
 8004e9c:	4601      	mov	r1, r0
 8004e9e:	2800      	cmp	r0, #0
 8004ea0:	d1e9      	bne.n	8004e76 <sem2_execute+0x26>
 8004ea2:	4a3a      	ldr	r2, [pc, #232]	; (8004f8c <sem2_execute+0x13c>)
 8004ea4:	4b3a      	ldr	r3, [pc, #232]	; (8004f90 <sem2_execute+0x140>)
 8004ea6:	6992      	ldr	r2, [r2, #24]
 8004ea8:	483a      	ldr	r0, [pc, #232]	; (8004f94 <sem2_execute+0x144>)
 8004eaa:	6892      	ldr	r2, [r2, #8]
 8004eac:	9100      	str	r1, [sp, #0]
 8004eae:	3a01      	subs	r2, #1
 8004eb0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004eb4:	f7fc fd44 	bl	8001940 <chThdCreateStatic>
 8004eb8:	4b37      	ldr	r3, [pc, #220]	; (8004f98 <sem2_execute+0x148>)
 8004eba:	6018      	str	r0, [r3, #0]
 8004ebc:	f241 3088 	movw	r0, #5000	; 0x1388
 8004ec0:	f7fc fe86 	bl	8001bd0 <chSemWaitTimeout.constprop.49>
 8004ec4:	4605      	mov	r5, r0
 8004ec6:	f7fe fdb3 	bl	8003a30 <test_wait_threads>
 8004eca:	fab5 f185 	clz	r1, r5
 8004ece:	0949      	lsrs	r1, r1, #5
 8004ed0:	2004      	movs	r0, #4
 8004ed2:	f7fb fc5d 	bl	8000790 <_test_assert>
 8004ed6:	2800      	cmp	r0, #0
 8004ed8:	d1cd      	bne.n	8004e76 <sem2_execute+0x26>
 8004eda:	6821      	ldr	r1, [r4, #0]
 8004edc:	1b09      	subs	r1, r1, r4
 8004ede:	fab1 f181 	clz	r1, r1
 8004ee2:	2005      	movs	r0, #5
 8004ee4:	0949      	lsrs	r1, r1, #5
 8004ee6:	f7fb fc53 	bl	8000790 <_test_assert>
 8004eea:	2800      	cmp	r0, #0
 8004eec:	d1c3      	bne.n	8004e76 <sem2_execute+0x26>
 8004eee:	68a1      	ldr	r1, [r4, #8]
 8004ef0:	fab1 f181 	clz	r1, r1
 8004ef4:	0949      	lsrs	r1, r1, #5
 8004ef6:	2006      	movs	r0, #6
 8004ef8:	f7fb fc4a 	bl	8000790 <_test_assert>
 8004efc:	4605      	mov	r5, r0
 8004efe:	2800      	cmp	r0, #0
 8004f00:	d1b9      	bne.n	8004e76 <sem2_execute+0x26>
 8004f02:	f7fd fcc5 	bl	8002890 <test_wait_tick>
 8004f06:	2320      	movs	r3, #32
 8004f08:	f383 8811 	msr	BASEPRI, r3
 8004f0c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004f10:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 8004f12:	f385 8811 	msr	BASEPRI, r5
 8004f16:	2541      	movs	r5, #65	; 0x41
 8004f18:	4628      	mov	r0, r5
 8004f1a:	f7fb fc51 	bl	80007c0 <test_emit_token>
 8004f1e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004f22:	f7fc fe55 	bl	8001bd0 <chSemWaitTimeout.constprop.49>
 8004f26:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8004f2a:	fab1 f181 	clz	r1, r1
 8004f2e:	0949      	lsrs	r1, r1, #5
 8004f30:	2007      	movs	r0, #7
 8004f32:	f7fb fc2d 	bl	8000790 <_test_assert>
 8004f36:	2800      	cmp	r0, #0
 8004f38:	d19d      	bne.n	8004e76 <sem2_execute+0x26>
 8004f3a:	6821      	ldr	r1, [r4, #0]
 8004f3c:	1b09      	subs	r1, r1, r4
 8004f3e:	fab1 f181 	clz	r1, r1
 8004f42:	2008      	movs	r0, #8
 8004f44:	0949      	lsrs	r1, r1, #5
 8004f46:	f7fb fc23 	bl	8000790 <_test_assert>
 8004f4a:	2800      	cmp	r0, #0
 8004f4c:	d193      	bne.n	8004e76 <sem2_execute+0x26>
 8004f4e:	68a1      	ldr	r1, [r4, #8]
 8004f50:	fab1 f181 	clz	r1, r1
 8004f54:	0949      	lsrs	r1, r1, #5
 8004f56:	2009      	movs	r0, #9
 8004f58:	f7fb fc1a 	bl	8000790 <_test_assert>
 8004f5c:	3501      	adds	r5, #1
 8004f5e:	b2ed      	uxtb	r5, r5
 8004f60:	2800      	cmp	r0, #0
 8004f62:	d188      	bne.n	8004e76 <sem2_execute+0x26>
 8004f64:	2d46      	cmp	r5, #70	; 0x46
 8004f66:	d1d7      	bne.n	8004f18 <sem2_execute+0xc8>
 8004f68:	490c      	ldr	r1, [pc, #48]	; (8004f9c <sem2_execute+0x14c>)
 8004f6a:	200a      	movs	r0, #10
 8004f6c:	f7fb fbe8 	bl	8000740 <_test_assert_sequence>
 8004f70:	2800      	cmp	r0, #0
 8004f72:	d180      	bne.n	8004e76 <sem2_execute+0x26>
 8004f74:	f606 12d8 	addw	r2, r6, #2520	; 0x9d8
 8004f78:	f606 11c4 	addw	r1, r6, #2500	; 0x9c4
 8004f7c:	200b      	movs	r0, #11
 8004f7e:	b002      	add	sp, #8
 8004f80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004f84:	f7fb bbbc 	b.w	8000700 <_test_assert_time_window>
 8004f88:	200008ac 	.word	0x200008ac
 8004f8c:	20000930 	.word	0x20000930
 8004f90:	08002861 	.word	0x08002861
 8004f94:	20000b38 	.word	0x20000b38
 8004f98:	200011cc 	.word	0x200011cc
 8004f9c:	08005fb0 	.word	0x08005fb0

08004fa0 <sem1_execute>:
 8004fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004fa2:	4d4b      	ldr	r5, [pc, #300]	; (80050d0 <sem1_execute+0x130>)
 8004fa4:	4f4b      	ldr	r7, [pc, #300]	; (80050d4 <sem1_execute+0x134>)
 8004fa6:	69aa      	ldr	r2, [r5, #24]
 8004fa8:	4b4b      	ldr	r3, [pc, #300]	; (80050d8 <sem1_execute+0x138>)
 8004faa:	6892      	ldr	r2, [r2, #8]
 8004fac:	484b      	ldr	r0, [pc, #300]	; (80050dc <sem1_execute+0x13c>)
 8004fae:	4c4c      	ldr	r4, [pc, #304]	; (80050e0 <sem1_execute+0x140>)
 8004fb0:	b083      	sub	sp, #12
 8004fb2:	3205      	adds	r2, #5
 8004fb4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fb8:	9700      	str	r7, [sp, #0]
 8004fba:	f7fc fcc1 	bl	8001940 <chThdCreateStatic>
 8004fbe:	69ab      	ldr	r3, [r5, #24]
 8004fc0:	689a      	ldr	r2, [r3, #8]
 8004fc2:	4b48      	ldr	r3, [pc, #288]	; (80050e4 <sem1_execute+0x144>)
 8004fc4:	6020      	str	r0, [r4, #0]
 8004fc6:	3201      	adds	r2, #1
 8004fc8:	9300      	str	r3, [sp, #0]
 8004fca:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fce:	4b42      	ldr	r3, [pc, #264]	; (80050d8 <sem1_execute+0x138>)
 8004fd0:	4845      	ldr	r0, [pc, #276]	; (80050e8 <sem1_execute+0x148>)
 8004fd2:	f7fc fcb5 	bl	8001940 <chThdCreateStatic>
 8004fd6:	69aa      	ldr	r2, [r5, #24]
 8004fd8:	4b44      	ldr	r3, [pc, #272]	; (80050ec <sem1_execute+0x14c>)
 8004fda:	6892      	ldr	r2, [r2, #8]
 8004fdc:	6060      	str	r0, [r4, #4]
 8004fde:	3203      	adds	r2, #3
 8004fe0:	9300      	str	r3, [sp, #0]
 8004fe2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fe6:	4b3c      	ldr	r3, [pc, #240]	; (80050d8 <sem1_execute+0x138>)
 8004fe8:	4841      	ldr	r0, [pc, #260]	; (80050f0 <sem1_execute+0x150>)
 8004fea:	f7fc fca9 	bl	8001940 <chThdCreateStatic>
 8004fee:	69aa      	ldr	r2, [r5, #24]
 8004ff0:	4b40      	ldr	r3, [pc, #256]	; (80050f4 <sem1_execute+0x154>)
 8004ff2:	6892      	ldr	r2, [r2, #8]
 8004ff4:	60a0      	str	r0, [r4, #8]
 8004ff6:	3204      	adds	r2, #4
 8004ff8:	9300      	str	r3, [sp, #0]
 8004ffa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004ffe:	4b36      	ldr	r3, [pc, #216]	; (80050d8 <sem1_execute+0x138>)
 8005000:	483d      	ldr	r0, [pc, #244]	; (80050f8 <sem1_execute+0x158>)
 8005002:	f7fc fc9d 	bl	8001940 <chThdCreateStatic>
 8005006:	69aa      	ldr	r2, [r5, #24]
 8005008:	4b3c      	ldr	r3, [pc, #240]	; (80050fc <sem1_execute+0x15c>)
 800500a:	6892      	ldr	r2, [r2, #8]
 800500c:	60e0      	str	r0, [r4, #12]
 800500e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005012:	3202      	adds	r2, #2
 8005014:	9300      	str	r3, [sp, #0]
 8005016:	483a      	ldr	r0, [pc, #232]	; (8005100 <sem1_execute+0x160>)
 8005018:	4b2f      	ldr	r3, [pc, #188]	; (80050d8 <sem1_execute+0x138>)
 800501a:	f7fc fc91 	bl	8001940 <chThdCreateStatic>
 800501e:	6120      	str	r0, [r4, #16]
 8005020:	4838      	ldr	r0, [pc, #224]	; (8005104 <sem1_execute+0x164>)
 8005022:	f7fc fc6d 	bl	8001900 <chSemSignal>
 8005026:	4837      	ldr	r0, [pc, #220]	; (8005104 <sem1_execute+0x164>)
 8005028:	f7fc fc6a 	bl	8001900 <chSemSignal>
 800502c:	4835      	ldr	r0, [pc, #212]	; (8005104 <sem1_execute+0x164>)
 800502e:	f7fc fc67 	bl	8001900 <chSemSignal>
 8005032:	4834      	ldr	r0, [pc, #208]	; (8005104 <sem1_execute+0x164>)
 8005034:	f7fc fc64 	bl	8001900 <chSemSignal>
 8005038:	4832      	ldr	r0, [pc, #200]	; (8005104 <sem1_execute+0x164>)
 800503a:	f7fc fc61 	bl	8001900 <chSemSignal>
 800503e:	f7fe fcf7 	bl	8003a30 <test_wait_threads>
 8005042:	4931      	ldr	r1, [pc, #196]	; (8005108 <sem1_execute+0x168>)
 8005044:	2001      	movs	r0, #1
 8005046:	f7fb fb7b 	bl	8000740 <_test_assert_sequence>
 800504a:	b108      	cbz	r0, 8005050 <sem1_execute+0xb0>
 800504c:	b003      	add	sp, #12
 800504e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005050:	69aa      	ldr	r2, [r5, #24]
 8005052:	4b21      	ldr	r3, [pc, #132]	; (80050d8 <sem1_execute+0x138>)
 8005054:	6892      	ldr	r2, [r2, #8]
 8005056:	9700      	str	r7, [sp, #0]
 8005058:	4606      	mov	r6, r0
 800505a:	3205      	adds	r2, #5
 800505c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005060:	481e      	ldr	r0, [pc, #120]	; (80050dc <sem1_execute+0x13c>)
 8005062:	f7fc fc6d 	bl	8001940 <chThdCreateStatic>
 8005066:	2320      	movs	r3, #32
 8005068:	6020      	str	r0, [r4, #0]
 800506a:	f383 8811 	msr	BASEPRI, r3
 800506e:	2502      	movs	r5, #2
 8005070:	4c24      	ldr	r4, [pc, #144]	; (8005104 <sem1_execute+0x164>)
 8005072:	e002      	b.n	800507a <sem1_execute+0xda>
 8005074:	2d01      	cmp	r5, #1
 8005076:	d00e      	beq.n	8005096 <sem1_execute+0xf6>
 8005078:	2501      	movs	r5, #1
 800507a:	68a3      	ldr	r3, [r4, #8]
 800507c:	3301      	adds	r3, #1
 800507e:	2b00      	cmp	r3, #0
 8005080:	60a3      	str	r3, [r4, #8]
 8005082:	dcf7      	bgt.n	8005074 <sem1_execute+0xd4>
 8005084:	6820      	ldr	r0, [r4, #0]
 8005086:	6803      	ldr	r3, [r0, #0]
 8005088:	6023      	str	r3, [r4, #0]
 800508a:	605c      	str	r4, [r3, #4]
 800508c:	f7fb fe10 	bl	8000cb0 <chSchReadyI>
 8005090:	2d01      	cmp	r5, #1
 8005092:	6206      	str	r6, [r0, #32]
 8005094:	d1f0      	bne.n	8005078 <sem1_execute+0xd8>
 8005096:	f7fc fa43 	bl	8001520 <chSchRescheduleS>
 800509a:	2500      	movs	r5, #0
 800509c:	f385 8811 	msr	BASEPRI, r5
 80050a0:	f7fe fcc6 	bl	8003a30 <test_wait_threads>
 80050a4:	2320      	movs	r3, #32
 80050a6:	f383 8811 	msr	BASEPRI, r3
 80050aa:	68a1      	ldr	r1, [r4, #8]
 80050ac:	f1a1 0101 	sub.w	r1, r1, #1
 80050b0:	fab1 f181 	clz	r1, r1
 80050b4:	2002      	movs	r0, #2
 80050b6:	0949      	lsrs	r1, r1, #5
 80050b8:	f7fb fb6a 	bl	8000790 <_test_assert>
 80050bc:	b918      	cbnz	r0, 80050c6 <sem1_execute+0x126>
 80050be:	f380 8811 	msr	BASEPRI, r0
 80050c2:	b003      	add	sp, #12
 80050c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80050c6:	f385 8811 	msr	BASEPRI, r5
 80050ca:	b003      	add	sp, #12
 80050cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80050ce:	bf00      	nop
 80050d0:	20000930 	.word	0x20000930
 80050d4:	08005d60 	.word	0x08005d60
 80050d8:	08003951 	.word	0x08003951
 80050dc:	20000b38 	.word	0x20000b38
 80050e0:	200011cc 	.word	0x200011cc
 80050e4:	08005d50 	.word	0x08005d50
 80050e8:	20000c80 	.word	0x20000c80
 80050ec:	08005d54 	.word	0x08005d54
 80050f0:	20000dc8 	.word	0x20000dc8
 80050f4:	08005d58 	.word	0x08005d58
 80050f8:	20000f10 	.word	0x20000f10
 80050fc:	08005fb4 	.word	0x08005fb4
 8005100:	20001058 	.word	0x20001058
 8005104:	200008ac 	.word	0x200008ac
 8005108:	08005fb0 	.word	0x08005fb0
 800510c:	00000000 	.word	0x00000000

08005110 <thd2_execute>:
 8005110:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005114:	4d41      	ldr	r5, [pc, #260]	; (800521c <thd2_execute+0x10c>)
 8005116:	4f42      	ldr	r7, [pc, #264]	; (8005220 <thd2_execute+0x110>)
 8005118:	69ab      	ldr	r3, [r5, #24]
 800511a:	4c42      	ldr	r4, [pc, #264]	; (8005224 <thd2_execute+0x114>)
 800511c:	689a      	ldr	r2, [r3, #8]
 800511e:	4b42      	ldr	r3, [pc, #264]	; (8005228 <thd2_execute+0x118>)
 8005120:	4e42      	ldr	r6, [pc, #264]	; (800522c <thd2_execute+0x11c>)
 8005122:	b082      	sub	sp, #8
 8005124:	3a04      	subs	r2, #4
 8005126:	9300      	str	r3, [sp, #0]
 8005128:	f504 70a4 	add.w	r0, r4, #328	; 0x148
 800512c:	463b      	mov	r3, r7
 800512e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005132:	f7fc fc05 	bl	8001940 <chThdCreateStatic>
 8005136:	69ab      	ldr	r3, [r5, #24]
 8005138:	493d      	ldr	r1, [pc, #244]	; (8005230 <thd2_execute+0x120>)
 800513a:	689a      	ldr	r2, [r3, #8]
 800513c:	6070      	str	r0, [r6, #4]
 800513e:	463b      	mov	r3, r7
 8005140:	9100      	str	r1, [sp, #0]
 8005142:	3a05      	subs	r2, #5
 8005144:	4620      	mov	r0, r4
 8005146:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800514a:	f7fc fbf9 	bl	8001940 <chThdCreateStatic>
 800514e:	69ab      	ldr	r3, [r5, #24]
 8005150:	4938      	ldr	r1, [pc, #224]	; (8005234 <thd2_execute+0x124>)
 8005152:	689a      	ldr	r2, [r3, #8]
 8005154:	6030      	str	r0, [r6, #0]
 8005156:	463b      	mov	r3, r7
 8005158:	9100      	str	r1, [sp, #0]
 800515a:	3a01      	subs	r2, #1
 800515c:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8005160:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005164:	f7fc fbec 	bl	8001940 <chThdCreateStatic>
 8005168:	69ab      	ldr	r3, [r5, #24]
 800516a:	4933      	ldr	r1, [pc, #204]	; (8005238 <thd2_execute+0x128>)
 800516c:	689a      	ldr	r2, [r3, #8]
 800516e:	6130      	str	r0, [r6, #16]
 8005170:	9100      	str	r1, [sp, #0]
 8005172:	3a02      	subs	r2, #2
 8005174:	463b      	mov	r3, r7
 8005176:	f504 7076 	add.w	r0, r4, #984	; 0x3d8
 800517a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800517e:	f7fc fbdf 	bl	8001940 <chThdCreateStatic>
 8005182:	2220      	movs	r2, #32
 8005184:	60f0      	str	r0, [r6, #12]
 8005186:	f382 8811 	msr	BASEPRI, r2
 800518a:	e9d5 1305 	ldrd	r1, r3, [r5, #20]
 800518e:	689b      	ldr	r3, [r3, #8]
 8005190:	f8c4 73b4 	str.w	r7, [r4, #948]	; 0x3b4
 8005194:	3b03      	subs	r3, #3
 8005196:	f504 776d 	add.w	r7, r4, #948	; 0x3b4
 800519a:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 800519e:	f8c4 32cc 	str.w	r3, [r4, #716]	; 0x2cc
 80051a2:	f8c4 729c 	str.w	r7, [r4, #668]	; 0x29c
 80051a6:	f504 7324 	add.w	r3, r4, #656	; 0x290
 80051aa:	2700      	movs	r7, #0
 80051ac:	f8df e090 	ldr.w	lr, [pc, #144]	; 8005240 <thd2_execute+0x130>
 80051b0:	f8df c090 	ldr.w	ip, [pc, #144]	; 8005244 <thd2_execute+0x134>
 80051b4:	f8c4 12a4 	str.w	r1, [r4, #676]	; 0x2a4
 80051b8:	2002      	movs	r0, #2
 80051ba:	f04f 0801 	mov.w	r8, #1
 80051be:	f8a4 02ac 	strh.w	r0, [r4, #684]	; 0x2ac
 80051c2:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
 80051c6:	f8c4 e3b8 	str.w	lr, [r4, #952]	; 0x3b8
 80051ca:	f8c4 c3d4 	str.w	ip, [r4, #980]	; 0x3d4
 80051ce:	f504 702d 	add.w	r0, r4, #692	; 0x2b4
 80051d2:	f8c4 72c8 	str.w	r7, [r4, #712]	; 0x2c8
 80051d6:	f8c4 72c4 	str.w	r7, [r4, #708]	; 0x2c4
 80051da:	f8c4 72a8 	str.w	r7, [r4, #680]	; 0x2a8
 80051de:	f884 82ae 	strb.w	r8, [r4, #686]	; 0x2ae
 80051e2:	610b      	str	r3, [r1, #16]
 80051e4:	f504 712e 	add.w	r1, r4, #696	; 0x2b8
 80051e8:	616b      	str	r3, [r5, #20]
 80051ea:	60b3      	str	r3, [r6, #8]
 80051ec:	f8c4 02b4 	str.w	r0, [r4, #692]	; 0x2b4
 80051f0:	f8c4 12b8 	str.w	r1, [r4, #696]	; 0x2b8
 80051f4:	f8c4 12bc 	str.w	r1, [r4, #700]	; 0x2bc
 80051f8:	f387 8811 	msr	BASEPRI, r7
 80051fc:	68b0      	ldr	r0, [r6, #8]
 80051fe:	f382 8811 	msr	BASEPRI, r2
 8005202:	f7fb fd55 	bl	8000cb0 <chSchReadyI>
 8005206:	f387 8811 	msr	BASEPRI, r7
 800520a:	f7fe fc11 	bl	8003a30 <test_wait_threads>
 800520e:	490b      	ldr	r1, [pc, #44]	; (800523c <thd2_execute+0x12c>)
 8005210:	4640      	mov	r0, r8
 8005212:	b002      	add	sp, #8
 8005214:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005218:	f7fb ba92 	b.w	8000740 <_test_assert_sequence>
 800521c:	20000930 	.word	0x20000930
 8005220:	08000811 	.word	0x08000811
 8005224:	20000b38 	.word	0x20000b38
 8005228:	08005d58 	.word	0x08005d58
 800522c:	200011cc 	.word	0x200011cc
 8005230:	08005fb4 	.word	0x08005fb4
 8005234:	08005d60 	.word	0x08005d60
 8005238:	08005d50 	.word	0x08005d50
 800523c:	08005fb0 	.word	0x08005fb0
 8005240:	08005d54 	.word	0x08005d54
 8005244:	08000291 	.word	0x08000291
	...

08005250 <thd1_execute>:
 8005250:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005252:	4f27      	ldr	r7, [pc, #156]	; (80052f0 <thd1_execute+0xa0>)
 8005254:	4e27      	ldr	r6, [pc, #156]	; (80052f4 <thd1_execute+0xa4>)
 8005256:	69bb      	ldr	r3, [r7, #24]
 8005258:	4d27      	ldr	r5, [pc, #156]	; (80052f8 <thd1_execute+0xa8>)
 800525a:	689a      	ldr	r2, [r3, #8]
 800525c:	4b27      	ldr	r3, [pc, #156]	; (80052fc <thd1_execute+0xac>)
 800525e:	4c28      	ldr	r4, [pc, #160]	; (8005300 <thd1_execute+0xb0>)
 8005260:	b083      	sub	sp, #12
 8005262:	3a05      	subs	r2, #5
 8005264:	9300      	str	r3, [sp, #0]
 8005266:	4628      	mov	r0, r5
 8005268:	4633      	mov	r3, r6
 800526a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800526e:	f7fc fb67 	bl	8001940 <chThdCreateStatic>
 8005272:	69bb      	ldr	r3, [r7, #24]
 8005274:	4923      	ldr	r1, [pc, #140]	; (8005304 <thd1_execute+0xb4>)
 8005276:	689a      	ldr	r2, [r3, #8]
 8005278:	6020      	str	r0, [r4, #0]
 800527a:	4633      	mov	r3, r6
 800527c:	9100      	str	r1, [sp, #0]
 800527e:	3a04      	subs	r2, #4
 8005280:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8005284:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005288:	f7fc fb5a 	bl	8001940 <chThdCreateStatic>
 800528c:	69bb      	ldr	r3, [r7, #24]
 800528e:	491e      	ldr	r1, [pc, #120]	; (8005308 <thd1_execute+0xb8>)
 8005290:	689a      	ldr	r2, [r3, #8]
 8005292:	6060      	str	r0, [r4, #4]
 8005294:	4633      	mov	r3, r6
 8005296:	9100      	str	r1, [sp, #0]
 8005298:	3a03      	subs	r2, #3
 800529a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 800529e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80052a2:	f7fc fb4d 	bl	8001940 <chThdCreateStatic>
 80052a6:	69bb      	ldr	r3, [r7, #24]
 80052a8:	4918      	ldr	r1, [pc, #96]	; (800530c <thd1_execute+0xbc>)
 80052aa:	689a      	ldr	r2, [r3, #8]
 80052ac:	60a0      	str	r0, [r4, #8]
 80052ae:	4633      	mov	r3, r6
 80052b0:	9100      	str	r1, [sp, #0]
 80052b2:	3a02      	subs	r2, #2
 80052b4:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 80052b8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80052bc:	f7fc fb40 	bl	8001940 <chThdCreateStatic>
 80052c0:	69bb      	ldr	r3, [r7, #24]
 80052c2:	4913      	ldr	r1, [pc, #76]	; (8005310 <thd1_execute+0xc0>)
 80052c4:	689a      	ldr	r2, [r3, #8]
 80052c6:	60e0      	str	r0, [r4, #12]
 80052c8:	3a01      	subs	r2, #1
 80052ca:	4633      	mov	r3, r6
 80052cc:	9100      	str	r1, [sp, #0]
 80052ce:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 80052d2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80052d6:	f7fc fb33 	bl	8001940 <chThdCreateStatic>
 80052da:	6120      	str	r0, [r4, #16]
 80052dc:	f7fe fba8 	bl	8003a30 <test_wait_threads>
 80052e0:	490c      	ldr	r1, [pc, #48]	; (8005314 <thd1_execute+0xc4>)
 80052e2:	2001      	movs	r0, #1
 80052e4:	b003      	add	sp, #12
 80052e6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80052ea:	f7fb ba29 	b.w	8000740 <_test_assert_sequence>
 80052ee:	bf00      	nop
 80052f0:	20000930 	.word	0x20000930
 80052f4:	08000811 	.word	0x08000811
 80052f8:	20000b38 	.word	0x20000b38
 80052fc:	08005fb4 	.word	0x08005fb4
 8005300:	200011cc 	.word	0x200011cc
 8005304:	08005d58 	.word	0x08005d58
 8005308:	08005d54 	.word	0x08005d54
 800530c:	08005d50 	.word	0x08005d50
 8005310:	08005d60 	.word	0x08005d60
 8005314:	08005fb0 	.word	0x08005fb0
	...

08005320 <main>:
 8005320:	4bbf      	ldr	r3, [pc, #764]	; (8005620 <main+0x300>)
 8005322:	4cc0      	ldr	r4, [pc, #768]	; (8005624 <main+0x304>)
 8005324:	691a      	ldr	r2, [r3, #16]
 8005326:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800532a:	2200      	movs	r2, #0
 800532c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8005330:	6119      	str	r1, [r3, #16]
 8005332:	611a      	str	r2, [r3, #16]
 8005334:	6958      	ldr	r0, [r3, #20]
 8005336:	6159      	str	r1, [r3, #20]
 8005338:	615a      	str	r2, [r3, #20]
 800533a:	6a18      	ldr	r0, [r3, #32]
 800533c:	f060 5080 	orn	r0, r0, #268435456	; 0x10000000
 8005340:	6218      	str	r0, [r3, #32]
 8005342:	621a      	str	r2, [r3, #32]
 8005344:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8005346:	6259      	str	r1, [r3, #36]	; 0x24
 8005348:	625a      	str	r2, [r3, #36]	; 0x24
 800534a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800534c:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8005350:	6419      	str	r1, [r3, #64]	; 0x40
 8005352:	6821      	ldr	r1, [r4, #0]
 8005354:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8005358:	6021      	str	r1, [r4, #0]
 800535a:	6f19      	ldr	r1, [r3, #112]	; 0x70
 800535c:	f401 7140 	and.w	r1, r1, #768	; 0x300
 8005360:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8005364:	b08d      	sub	sp, #52	; 0x34
 8005366:	d003      	beq.n	8005370 <main+0x50>
 8005368:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 800536c:	6719      	str	r1, [r3, #112]	; 0x70
 800536e:	671a      	str	r2, [r3, #112]	; 0x70
 8005370:	4cac      	ldr	r4, [pc, #688]	; (8005624 <main+0x304>)
 8005372:	4eab      	ldr	r6, [pc, #684]	; (8005620 <main+0x300>)
 8005374:	6863      	ldr	r3, [r4, #4]
 8005376:	f8df c300 	ldr.w	ip, [pc, #768]	; 8005678 <main+0x358>
 800537a:	f8df 8300 	ldr.w	r8, [pc, #768]	; 800567c <main+0x35c>
 800537e:	4faa      	ldr	r7, [pc, #680]	; (8005628 <main+0x308>)
 8005380:	f8df e2fc 	ldr.w	lr, [pc, #764]	; 8005680 <main+0x360>
 8005384:	4da9      	ldr	r5, [pc, #676]	; (800562c <main+0x30c>)
 8005386:	48aa      	ldr	r0, [pc, #680]	; (8005630 <main+0x310>)
 8005388:	49aa      	ldr	r1, [pc, #680]	; (8005634 <main+0x314>)
 800538a:	4aab      	ldr	r2, [pc, #684]	; (8005638 <main+0x318>)
 800538c:	f8df 92f4 	ldr.w	r9, [pc, #756]	; 8005684 <main+0x364>
 8005390:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8005394:	6063      	str	r3, [r4, #4]
 8005396:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8005398:	f043 031f 	orr.w	r3, r3, #31
 800539c:	6333      	str	r3, [r6, #48]	; 0x30
 800539e:	6d33      	ldr	r3, [r6, #80]	; 0x50
 80053a0:	f043 031f 	orr.w	r3, r3, #31
 80053a4:	2400      	movs	r4, #0
 80053a6:	6533      	str	r3, [r6, #80]	; 0x50
 80053a8:	f46f 638a 	mvn.w	r3, #1104	; 0x450
 80053ac:	f8cc 4004 	str.w	r4, [ip, #4]
 80053b0:	f64f 7adf 	movw	sl, #65503	; 0xffdf
 80053b4:	f8cc 3008 	str.w	r3, [ip, #8]
 80053b8:	f8cc 800c 	str.w	r8, [ip, #12]
 80053bc:	f44f 43ee 	mov.w	r3, #30464	; 0x7700
 80053c0:	f44f 282a 	mov.w	r8, #696320	; 0xaa000
 80053c4:	f8cc a014 	str.w	sl, [ip, #20]
 80053c8:	f8cc 3020 	str.w	r3, [ip, #32]
 80053cc:	f8cc 8024 	str.w	r8, [ip, #36]	; 0x24
 80053d0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80053d4:	f8cc e000 	str.w	lr, [ip]
 80053d8:	f04f 3855 	mov.w	r8, #1431655765	; 0x55555555
 80053dc:	f64f 7eff 	movw	lr, #65535	; 0xffff
 80053e0:	f04f 0c80 	mov.w	ip, #128	; 0x80
 80053e4:	607c      	str	r4, [r7, #4]
 80053e6:	60bb      	str	r3, [r7, #8]
 80053e8:	f8c7 800c 	str.w	r8, [r7, #12]
 80053ec:	f8c7 e014 	str.w	lr, [r7, #20]
 80053f0:	623c      	str	r4, [r7, #32]
 80053f2:	627c      	str	r4, [r7, #36]	; 0x24
 80053f4:	f8c7 c000 	str.w	ip, [r7]
 80053f8:	4f90      	ldr	r7, [pc, #576]	; (800563c <main+0x31c>)
 80053fa:	4e90      	ldr	r6, [pc, #576]	; (800563c <main+0x31c>)
 80053fc:	606c      	str	r4, [r5, #4]
 80053fe:	60ab      	str	r3, [r5, #8]
 8005400:	f8c5 900c 	str.w	r9, [r5, #12]
 8005404:	f8c5 e014 	str.w	lr, [r5, #20]
 8005408:	f04f 0945 	mov.w	r9, #69	; 0x45
 800540c:	622c      	str	r4, [r5, #32]
 800540e:	626c      	str	r4, [r5, #36]	; 0x24
 8005410:	602c      	str	r4, [r5, #0]
 8005412:	4d8b      	ldr	r5, [pc, #556]	; (8005640 <main+0x320>)
 8005414:	6044      	str	r4, [r0, #4]
 8005416:	6083      	str	r3, [r0, #8]
 8005418:	f8c0 800c 	str.w	r8, [r0, #12]
 800541c:	f8c0 e014 	str.w	lr, [r0, #20]
 8005420:	6204      	str	r4, [r0, #32]
 8005422:	6244      	str	r4, [r0, #36]	; 0x24
 8005424:	6004      	str	r4, [r0, #0]
 8005426:	604c      	str	r4, [r1, #4]
 8005428:	487d      	ldr	r0, [pc, #500]	; (8005620 <main+0x300>)
 800542a:	608b      	str	r3, [r1, #8]
 800542c:	f8c1 900c 	str.w	r9, [r1, #12]
 8005430:	f8c1 e014 	str.w	lr, [r1, #20]
 8005434:	620c      	str	r4, [r1, #32]
 8005436:	624c      	str	r4, [r1, #36]	; 0x24
 8005438:	600c      	str	r4, [r1, #0]
 800543a:	6054      	str	r4, [r2, #4]
 800543c:	6093      	str	r3, [r2, #8]
 800543e:	60d4      	str	r4, [r2, #12]
 8005440:	f8c2 e014 	str.w	lr, [r2, #20]
 8005444:	6214      	str	r4, [r2, #32]
 8005446:	6254      	str	r4, [r2, #36]	; 0x24
 8005448:	6014      	str	r4, [r2, #0]
 800544a:	f847 5b04 	str.w	r5, [r7], #4
 800544e:	f04f 0b01 	mov.w	fp, #1
 8005452:	f106 0264 	add.w	r2, r6, #100	; 0x64
 8005456:	f106 0154 	add.w	r1, r6, #84	; 0x54
 800545a:	f106 0e0c 	add.w	lr, r6, #12
 800545e:	f106 0530 	add.w	r5, r6, #48	; 0x30
 8005462:	f04f 0810 	mov.w	r8, #16
 8005466:	6077      	str	r7, [r6, #4]
 8005468:	e9c6 ee03 	strd	lr, lr, [r6, #12]
 800546c:	61b1      	str	r1, [r6, #24]
 800546e:	e9c6 1108 	strd	r1, r1, [r6, #32]
 8005472:	61f2      	str	r2, [r6, #28]
 8005474:	63f2      	str	r2, [r6, #60]	; 0x3c
 8005476:	64b2      	str	r2, [r6, #72]	; 0x48
 8005478:	e9c6 550c 	strd	r5, r5, [r6, #48]	; 0x30
 800547c:	f8c6 8038 	str.w	r8, [r6, #56]	; 0x38
 8005480:	6174      	str	r4, [r6, #20]
 8005482:	62b4      	str	r4, [r6, #40]	; 0x28
 8005484:	62f6      	str	r6, [r6, #44]	; 0x2c
 8005486:	f886 b008 	strb.w	fp, [r6, #8]
 800548a:	6472      	str	r2, [r6, #68]	; 0x44
 800548c:	6c01      	ldr	r1, [r0, #64]	; 0x40
 800548e:	4864      	ldr	r0, [pc, #400]	; (8005620 <main+0x300>)
 8005490:	f8df e1f4 	ldr.w	lr, [pc, #500]	; 8005688 <main+0x368>
 8005494:	4a6b      	ldr	r2, [pc, #428]	; (8005644 <main+0x324>)
 8005496:	4f6c      	ldr	r7, [pc, #432]	; (8005648 <main+0x328>)
 8005498:	4635      	mov	r5, r6
 800549a:	ea41 010b 	orr.w	r1, r1, fp
 800549e:	652e      	str	r6, [r5, #80]	; 0x50
 80054a0:	6401      	str	r1, [r0, #64]	; 0x40
 80054a2:	f8de 1008 	ldr.w	r1, [lr, #8]
 80054a6:	4d69      	ldr	r5, [pc, #420]	; (800564c <main+0x32c>)
 80054a8:	ea41 010b 	orr.w	r1, r1, fp
 80054ac:	f8ce 1008 	str.w	r1, [lr, #8]
 80054b0:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80054b4:	f242 0ecf 	movw	lr, #8399	; 0x20cf
 80054b8:	f8c1 e028 	str.w	lr, [r1, #40]	; 0x28
 80054bc:	f04f 5e80 	mov.w	lr, #268435456	; 0x10000000
 80054c0:	62cb      	str	r3, [r1, #44]	; 0x2c
 80054c2:	618c      	str	r4, [r1, #24]
 80054c4:	634c      	str	r4, [r1, #52]	; 0x34
 80054c6:	60cc      	str	r4, [r1, #12]
 80054c8:	604c      	str	r4, [r1, #4]
 80054ca:	f8c1 b014 	str.w	fp, [r1, #20]
 80054ce:	f8c1 b000 	str.w	fp, [r1]
 80054d2:	f887 c31c 	strb.w	ip, [r7, #796]	; 0x31c
 80054d6:	f8c7 e180 	str.w	lr, [r7, #384]	; 0x180
 80054da:	f8c7 e000 	str.w	lr, [r7]
 80054de:	6094      	str	r4, [r2, #8]
 80054e0:	68d1      	ldr	r1, [r2, #12]
 80054e2:	f8df e1a8 	ldr.w	lr, [pc, #424]	; 800568c <main+0x36c>
 80054e6:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
 80054ea:	ea01 010c 	and.w	r1, r1, ip
 80054ee:	430d      	orrs	r5, r1
 80054f0:	60d5      	str	r5, [r2, #12]
 80054f2:	f8de 100c 	ldr.w	r1, [lr, #12]
 80054f6:	f8df c198 	ldr.w	ip, [pc, #408]	; 8005690 <main+0x370>
 80054fa:	4d55      	ldr	r5, [pc, #340]	; (8005650 <main+0x330>)
 80054fc:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
 8005500:	f8ce 100c 	str.w	r1, [lr, #12]
 8005504:	f8dc 1000 	ldr.w	r1, [ip]
 8005508:	f8df e188 	ldr.w	lr, [pc, #392]	; 8005694 <main+0x374>
 800550c:	f8c6 e04c 	str.w	lr, [r6, #76]	; 0x4c
 8005510:	ea41 010b 	orr.w	r1, r1, fp
 8005514:	f04f 0a20 	mov.w	sl, #32
 8005518:	f8cc 1000 	str.w	r1, [ip]
 800551c:	a806      	add	r0, sp, #24
 800551e:	f882 801f 	strb.w	r8, [r2, #31]
 8005522:	f106 0c74 	add.w	ip, r6, #116	; 0x74
 8005526:	f882 a022 	strb.w	sl, [r2, #34]	; 0x22
 800552a:	494a      	ldr	r1, [pc, #296]	; (8005654 <main+0x334>)
 800552c:	f8c6 c040 	str.w	ip, [r6, #64]	; 0x40
 8005530:	f105 021c 	add.w	r2, r5, #28
 8005534:	f04f 0800 	mov.w	r8, #0
 8005538:	f04f 0900 	mov.w	r9, #0
 800553c:	6771      	str	r1, [r6, #116]	; 0x74
 800553e:	60ac      	str	r4, [r5, #8]
 8005540:	e9c5 5500 	strd	r5, r5, [r5]
 8005544:	e9c5 5504 	strd	r5, r5, [r5, #16]
 8005548:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
 800554c:	9306      	str	r3, [sp, #24]
 800554e:	e9c5 2207 	strd	r2, r2, [r5, #28]
 8005552:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
 8005556:	676c      	str	r4, [r5, #116]	; 0x74
 8005558:	e9cd 4407 	strd	r4, r4, [sp, #28]
 800555c:	9409      	str	r4, [sp, #36]	; 0x24
 800555e:	f7fa fea7 	bl	80002b0 <chTMStartMeasurementX.constprop.55>
 8005562:	a806      	add	r0, sp, #24
 8005564:	f7fb fb44 	bl	8000bf0 <chTMStopMeasurementX>
 8005568:	4a3b      	ldr	r2, [pc, #236]	; (8005658 <main+0x338>)
 800556a:	f8d5 c014 	ldr.w	ip, [r5, #20]
 800556e:	9b08      	ldr	r3, [sp, #32]
 8005570:	676b      	str	r3, [r5, #116]	; 0x74
 8005572:	f04f 0840 	mov.w	r8, #64	; 0x40
 8005576:	f105 0330 	add.w	r3, r5, #48	; 0x30
 800557a:	f102 0e10 	add.w	lr, r2, #16
 800557e:	f8c5 c044 	str.w	ip, [r5, #68]	; 0x44
 8005582:	f885 404d 	strb.w	r4, [r5, #77]	; 0x4d
 8005586:	e9c5 4419 	strd	r4, r4, [r5, #100]	; 0x64
 800558a:	f885 b04e 	strb.w	fp, [r5, #78]	; 0x4e
 800558e:	64ac      	str	r4, [r5, #72]	; 0x48
 8005590:	642d      	str	r5, [r5, #64]	; 0x40
 8005592:	6194      	str	r4, [r2, #24]
 8005594:	e9c2 ee04 	strd	lr, lr, [r2, #16]
 8005598:	f8c5 8038 	str.w	r8, [r5, #56]	; 0x38
 800559c:	f8c5 806c 	str.w	r8, [r5, #108]	; 0x6c
 80055a0:	f8cc 3010 	str.w	r3, [ip, #16]
 80055a4:	e9c5 3305 	strd	r3, r3, [r5, #20]
 80055a8:	f105 0354 	add.w	r3, r5, #84	; 0x54
 80055ac:	656b      	str	r3, [r5, #84]	; 0x54
 80055ae:	4b2b      	ldr	r3, [pc, #172]	; (800565c <main+0x33c>)
 80055b0:	6013      	str	r3, [r2, #0]
 80055b2:	482b      	ldr	r0, [pc, #172]	; (8005660 <main+0x340>)
 80055b4:	492b      	ldr	r1, [pc, #172]	; (8005664 <main+0x344>)
 80055b6:	f8df c0e0 	ldr.w	ip, [pc, #224]	; 8005698 <main+0x378>
 80055ba:	f885 b04c 	strb.w	fp, [r5, #76]	; 0x4c
 80055be:	f105 0358 	add.w	r3, r5, #88	; 0x58
 80055c2:	e9c5 3316 	strd	r3, r3, [r5, #88]	; 0x58
 80055c6:	4b28      	ldr	r3, [pc, #160]	; (8005668 <main+0x348>)
 80055c8:	f020 0007 	bic.w	r0, r0, #7
 80055cc:	f021 0107 	bic.w	r1, r1, #7
 80055d0:	e9c2 4402 	strd	r4, r4, [r2, #8]
 80055d4:	f8cc 0000 	str.w	r0, [ip]
 80055d8:	6019      	str	r1, [r3, #0]
 80055da:	f384 8811 	msr	BASEPRI, r4
 80055de:	b662      	cpsie	i
 80055e0:	69ab      	ldr	r3, [r5, #24]
 80055e2:	4a22      	ldr	r2, [pc, #136]	; (800566c <main+0x34c>)
 80055e4:	619a      	str	r2, [r3, #24]
 80055e6:	f105 0078 	add.w	r0, r5, #120	; 0x78
 80055ea:	465a      	mov	r2, fp
 80055ec:	9400      	str	r4, [sp, #0]
 80055ee:	4b20      	ldr	r3, [pc, #128]	; (8005670 <main+0x350>)
 80055f0:	21d8      	movs	r1, #216	; 0xd8
 80055f2:	f7fc f9a5 	bl	8001940 <chThdCreateStatic>
 80055f6:	4b1f      	ldr	r3, [pc, #124]	; (8005674 <main+0x354>)
 80055f8:	6183      	str	r3, [r0, #24]
 80055fa:	f38a 8811 	msr	BASEPRI, sl
 80055fe:	7a33      	ldrb	r3, [r6, #8]
 8005600:	455b      	cmp	r3, fp
 8005602:	d14b      	bne.n	800569c <main+0x37c>
 8005604:	4906      	ldr	r1, [pc, #24]	; (8005620 <main+0x300>)
 8005606:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005608:	22c0      	movs	r2, #192	; 0xc0
 800560a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800560e:	640b      	str	r3, [r1, #64]	; 0x40
 8005610:	f887 2326 	strb.w	r2, [r7, #806]	; 0x326
 8005614:	f8c7 8184 	str.w	r8, [r7, #388]	; 0x184
 8005618:	f8c7 8004 	str.w	r8, [r7, #4]
 800561c:	e03e      	b.n	800569c <main+0x37c>
 800561e:	bf00      	nop
 8005620:	40023800 	.word	0x40023800
 8005624:	40007000 	.word	0x40007000
 8005628:	40020400 	.word	0x40020400
 800562c:	40020800 	.word	0x40020800
 8005630:	40020c00 	.word	0x40020c00
 8005634:	40021000 	.word	0x40021000
 8005638:	40021c00 	.word	0x40021c00
 800563c:	200008b8 	.word	0x200008b8
 8005640:	080068b0 	.word	0x080068b0
 8005644:	e000ed00 	.word	0xe000ed00
 8005648:	e000e100 	.word	0xe000e100
 800564c:	05fa0300 	.word	0x05fa0300
 8005650:	20000930 	.word	0x20000930
 8005654:	40004400 	.word	0x40004400
 8005658:	20000a88 	.word	0x20000a88
 800565c:	08000301 	.word	0x08000301
 8005660:	2000137f 	.word	0x2000137f
 8005664:	20018000 	.word	0x20018000
 8005668:	20000aa8 	.word	0x20000aa8
 800566c:	08005d20 	.word	0x08005d20
 8005670:	080002f1 	.word	0x080002f1
 8005674:	08005e70 	.word	0x08005e70
 8005678:	40020000 	.word	0x40020000
 800567c:	64155105 	.word	0x64155105
 8005680:	2a8004a0 	.word	0x2a8004a0
 8005684:	51555555 	.word	0x51555555
 8005688:	e0042000 	.word	0xe0042000
 800568c:	e000edf0 	.word	0xe000edf0
 8005690:	e0001000 	.word	0xe0001000
 8005694:	08000341 	.word	0x08000341
 8005698:	20000b24 	.word	0x20000b24
 800569c:	4b17      	ldr	r3, [pc, #92]	; (80056fc <main+0x3dc>)
 800569e:	4a18      	ldr	r2, [pc, #96]	; (8005700 <main+0x3e0>)
 80056a0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80056a2:	4293      	cmp	r3, r2
 80056a4:	f000 8186 	beq.w	80059b4 <main+0x694>
 80056a8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80056ac:	4293      	cmp	r3, r2
 80056ae:	f000 8181 	beq.w	80059b4 <main+0x694>
 80056b2:	f240 4245 	movw	r2, #1093	; 0x445
 80056b6:	609a      	str	r2, [r3, #8]
 80056b8:	f244 0140 	movw	r1, #16448	; 0x4040
 80056bc:	2401      	movs	r4, #1
 80056be:	f242 102c 	movw	r0, #8492	; 0x212c
 80056c2:	2200      	movs	r2, #0
 80056c4:	6119      	str	r1, [r3, #16]
 80056c6:	615c      	str	r4, [r3, #20]
 80056c8:	60d8      	str	r0, [r3, #12]
 80056ca:	601a      	str	r2, [r3, #0]
 80056cc:	6818      	ldr	r0, [r3, #0]
 80056ce:	685b      	ldr	r3, [r3, #4]
 80056d0:	4b0a      	ldr	r3, [pc, #40]	; (80056fc <main+0x3dc>)
 80056d2:	2102      	movs	r1, #2
 80056d4:	7219      	strb	r1, [r3, #8]
 80056d6:	f382 8811 	msr	BASEPRI, r2
 80056da:	4b0a      	ldr	r3, [pc, #40]	; (8005704 <main+0x3e4>)
 80056dc:	9200      	str	r2, [sp, #0]
 80056de:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80056e2:	2240      	movs	r2, #64	; 0x40
 80056e4:	4808      	ldr	r0, [pc, #32]	; (8005708 <main+0x3e8>)
 80056e6:	f8df 8024 	ldr.w	r8, [pc, #36]	; 800570c <main+0x3ec>
 80056ea:	f8df 9024 	ldr.w	r9, [pc, #36]	; 8005710 <main+0x3f0>
 80056ee:	f8df a024 	ldr.w	sl, [pc, #36]	; 8005714 <main+0x3f4>
 80056f2:	f8df b024 	ldr.w	fp, [pc, #36]	; 8005718 <main+0x3f8>
 80056f6:	f7fc f923 	bl	8001940 <chThdCreateStatic>
 80056fa:	e013      	b.n	8005724 <main+0x404>
 80056fc:	200008b8 	.word	0x200008b8
 8005700:	40011000 	.word	0x40011000
 8005704:	080026f1 	.word	0x080026f1
 8005708:	20001230 	.word	0x20001230
 800570c:	20000a80 	.word	0x20000a80
 8005710:	200011f0 	.word	0x200011f0
 8005714:	20000b04 	.word	0x20000b04
 8005718:	200011cc 	.word	0x200011cc
 800571c:	f241 3088 	movw	r0, #5000	; 0x1388
 8005720:	f7fc ffd6 	bl	80026d0 <chThdSleep>
 8005724:	4ba5      	ldr	r3, [pc, #660]	; (80059bc <main+0x69c>)
 8005726:	691b      	ldr	r3, [r3, #16]
 8005728:	049b      	lsls	r3, r3, #18
 800572a:	d4f7      	bmi.n	800571c <main+0x3fc>
 800572c:	4ba4      	ldr	r3, [pc, #656]	; (80059c0 <main+0x6a0>)
 800572e:	48a5      	ldr	r0, [pc, #660]	; (80059c4 <main+0x6a4>)
 8005730:	f8c8 3000 	str.w	r3, [r8]
 8005734:	f7fb f87c 	bl	8000830 <test_println>
 8005738:	48a3      	ldr	r0, [pc, #652]	; (80059c8 <main+0x6a8>)
 800573a:	4ca4      	ldr	r4, [pc, #656]	; (80059cc <main+0x6ac>)
 800573c:	f7fb f878 	bl	8000830 <test_println>
 8005740:	48a3      	ldr	r0, [pc, #652]	; (80059d0 <main+0x6b0>)
 8005742:	f7fb f875 	bl	8000830 <test_println>
 8005746:	212a      	movs	r1, #42	; 0x2a
 8005748:	f8d8 0000 	ldr.w	r0, [r8]
 800574c:	6803      	ldr	r3, [r0, #0]
 800574e:	689b      	ldr	r3, [r3, #8]
 8005750:	4798      	blx	r3
 8005752:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005756:	2900      	cmp	r1, #0
 8005758:	d1f6      	bne.n	8005748 <main+0x428>
 800575a:	489e      	ldr	r0, [pc, #632]	; (80059d4 <main+0x6b4>)
 800575c:	4c9e      	ldr	r4, [pc, #632]	; (80059d8 <main+0x6b8>)
 800575e:	f7fb f867 	bl	8000830 <test_println>
 8005762:	212a      	movs	r1, #42	; 0x2a
 8005764:	f8d8 0000 	ldr.w	r0, [r8]
 8005768:	6803      	ldr	r3, [r0, #0]
 800576a:	689b      	ldr	r3, [r3, #8]
 800576c:	4798      	blx	r3
 800576e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005772:	2900      	cmp	r1, #0
 8005774:	d1f6      	bne.n	8005764 <main+0x444>
 8005776:	4899      	ldr	r0, [pc, #612]	; (80059dc <main+0x6bc>)
 8005778:	4c99      	ldr	r4, [pc, #612]	; (80059e0 <main+0x6c0>)
 800577a:	f7fb f859 	bl	8000830 <test_println>
 800577e:	212a      	movs	r1, #42	; 0x2a
 8005780:	f8d8 0000 	ldr.w	r0, [r8]
 8005784:	6803      	ldr	r3, [r0, #0]
 8005786:	689b      	ldr	r3, [r3, #8]
 8005788:	4798      	blx	r3
 800578a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800578e:	2900      	cmp	r1, #0
 8005790:	d1f6      	bne.n	8005780 <main+0x460>
 8005792:	4894      	ldr	r0, [pc, #592]	; (80059e4 <main+0x6c4>)
 8005794:	4c94      	ldr	r4, [pc, #592]	; (80059e8 <main+0x6c8>)
 8005796:	f7fb f84b 	bl	8000830 <test_println>
 800579a:	212a      	movs	r1, #42	; 0x2a
 800579c:	f8d8 0000 	ldr.w	r0, [r8]
 80057a0:	6803      	ldr	r3, [r0, #0]
 80057a2:	689b      	ldr	r3, [r3, #8]
 80057a4:	4798      	blx	r3
 80057a6:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80057aa:	2900      	cmp	r1, #0
 80057ac:	d1f6      	bne.n	800579c <main+0x47c>
 80057ae:	488f      	ldr	r0, [pc, #572]	; (80059ec <main+0x6cc>)
 80057b0:	4c8f      	ldr	r4, [pc, #572]	; (80059f0 <main+0x6d0>)
 80057b2:	f7fb f83d 	bl	8000830 <test_println>
 80057b6:	212a      	movs	r1, #42	; 0x2a
 80057b8:	f8d8 0000 	ldr.w	r0, [r8]
 80057bc:	6803      	ldr	r3, [r0, #0]
 80057be:	689b      	ldr	r3, [r3, #8]
 80057c0:	4798      	blx	r3
 80057c2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80057c6:	2900      	cmp	r1, #0
 80057c8:	d1f6      	bne.n	80057b8 <main+0x498>
 80057ca:	488a      	ldr	r0, [pc, #552]	; (80059f4 <main+0x6d4>)
 80057cc:	4c8a      	ldr	r4, [pc, #552]	; (80059f8 <main+0x6d8>)
 80057ce:	f7fb f82f 	bl	8000830 <test_println>
 80057d2:	212a      	movs	r1, #42	; 0x2a
 80057d4:	f8d8 0000 	ldr.w	r0, [r8]
 80057d8:	6803      	ldr	r3, [r0, #0]
 80057da:	689b      	ldr	r3, [r3, #8]
 80057dc:	4798      	blx	r3
 80057de:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80057e2:	2900      	cmp	r1, #0
 80057e4:	d1f6      	bne.n	80057d4 <main+0x4b4>
 80057e6:	4885      	ldr	r0, [pc, #532]	; (80059fc <main+0x6dc>)
 80057e8:	4c85      	ldr	r4, [pc, #532]	; (8005a00 <main+0x6e0>)
 80057ea:	f7fb f821 	bl	8000830 <test_println>
 80057ee:	212a      	movs	r1, #42	; 0x2a
 80057f0:	f8d8 0000 	ldr.w	r0, [r8]
 80057f4:	6803      	ldr	r3, [r0, #0]
 80057f6:	689b      	ldr	r3, [r3, #8]
 80057f8:	4798      	blx	r3
 80057fa:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80057fe:	2900      	cmp	r1, #0
 8005800:	d1f6      	bne.n	80057f0 <main+0x4d0>
 8005802:	4880      	ldr	r0, [pc, #512]	; (8005a04 <main+0x6e4>)
 8005804:	4c80      	ldr	r4, [pc, #512]	; (8005a08 <main+0x6e8>)
 8005806:	f7fb f813 	bl	8000830 <test_println>
 800580a:	212a      	movs	r1, #42	; 0x2a
 800580c:	f8d8 0000 	ldr.w	r0, [r8]
 8005810:	6803      	ldr	r3, [r0, #0]
 8005812:	689b      	ldr	r3, [r3, #8]
 8005814:	4798      	blx	r3
 8005816:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800581a:	2900      	cmp	r1, #0
 800581c:	d1f6      	bne.n	800580c <main+0x4ec>
 800581e:	4b7b      	ldr	r3, [pc, #492]	; (8005a0c <main+0x6ec>)
 8005820:	487b      	ldr	r0, [pc, #492]	; (8005a10 <main+0x6f0>)
 8005822:	9305      	str	r3, [sp, #20]
 8005824:	4b7b      	ldr	r3, [pc, #492]	; (8005a14 <main+0x6f4>)
 8005826:	9103      	str	r1, [sp, #12]
 8005828:	9304      	str	r3, [sp, #16]
 800582a:	f7fb f801 	bl	8000830 <test_println>
 800582e:	4865      	ldr	r0, [pc, #404]	; (80059c4 <main+0x6a4>)
 8005830:	4e79      	ldr	r6, [pc, #484]	; (8005a18 <main+0x6f8>)
 8005832:	f7fa fffd 	bl	8000830 <test_println>
 8005836:	4b79      	ldr	r3, [pc, #484]	; (8005a1c <main+0x6fc>)
 8005838:	9903      	ldr	r1, [sp, #12]
 800583a:	7019      	strb	r1, [r3, #0]
 800583c:	4b78      	ldr	r3, [pc, #480]	; (8005a20 <main+0x700>)
 800583e:	9a03      	ldr	r2, [sp, #12]
 8005840:	3201      	adds	r2, #1
 8005842:	9203      	str	r2, [sp, #12]
 8005844:	2500      	movs	r5, #0
 8005846:	2b00      	cmp	r3, #0
 8005848:	f000 808b 	beq.w	8005962 <main+0x642>
 800584c:	4c75      	ldr	r4, [pc, #468]	; (8005a24 <main+0x704>)
 800584e:	f7fa ff27 	bl	80006a0 <print_line>
 8005852:	212d      	movs	r1, #45	; 0x2d
 8005854:	f8d8 0000 	ldr.w	r0, [r8]
 8005858:	6803      	ldr	r3, [r0, #0]
 800585a:	689b      	ldr	r3, [r3, #8]
 800585c:	4798      	blx	r3
 800585e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005862:	2900      	cmp	r1, #0
 8005864:	d1f6      	bne.n	8005854 <main+0x534>
 8005866:	9803      	ldr	r0, [sp, #12]
 8005868:	4c6f      	ldr	r4, [pc, #444]	; (8005a28 <main+0x708>)
 800586a:	f7fa ff09 	bl	8000680 <test_printn>
 800586e:	f8d8 0000 	ldr.w	r0, [r8]
 8005872:	6803      	ldr	r3, [r0, #0]
 8005874:	212e      	movs	r1, #46	; 0x2e
 8005876:	689b      	ldr	r3, [r3, #8]
 8005878:	1c6f      	adds	r7, r5, #1
 800587a:	4798      	blx	r3
 800587c:	4638      	mov	r0, r7
 800587e:	f7fa feff 	bl	8000680 <test_printn>
 8005882:	2120      	movs	r1, #32
 8005884:	f8d8 0000 	ldr.w	r0, [r8]
 8005888:	6803      	ldr	r3, [r0, #0]
 800588a:	689b      	ldr	r3, [r3, #8]
 800588c:	4798      	blx	r3
 800588e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005892:	2900      	cmp	r1, #0
 8005894:	d1f6      	bne.n	8005884 <main+0x564>
 8005896:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800589a:	681c      	ldr	r4, [r3, #0]
 800589c:	7821      	ldrb	r1, [r4, #0]
 800589e:	b141      	cbz	r1, 80058b2 <main+0x592>
 80058a0:	f8d8 0000 	ldr.w	r0, [r8]
 80058a4:	6803      	ldr	r3, [r0, #0]
 80058a6:	689b      	ldr	r3, [r3, #8]
 80058a8:	4798      	blx	r3
 80058aa:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80058ae:	2900      	cmp	r1, #0
 80058b0:	d1f6      	bne.n	80058a0 <main+0x580>
 80058b2:	485e      	ldr	r0, [pc, #376]	; (8005a2c <main+0x70c>)
 80058b4:	f7fa ffbc 	bl	8000830 <test_println>
 80058b8:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 80058bc:	f7fc ff08 	bl	80026d0 <chThdSleep>
 80058c0:	4b5b      	ldr	r3, [pc, #364]	; (8005a30 <main+0x710>)
 80058c2:	f8c9 3000 	str.w	r3, [r9]
 80058c6:	2300      	movs	r3, #0
 80058c8:	f856 4025 	ldr.w	r4, [r6, r5, lsl #2]
 80058cc:	f8cb 3010 	str.w	r3, [fp, #16]
 80058d0:	e9cb 3300 	strd	r3, r3, [fp]
 80058d4:	e9cb 3302 	strd	r3, r3, [fp, #8]
 80058d8:	6862      	ldr	r2, [r4, #4]
 80058da:	f88a 3000 	strb.w	r3, [sl]
 80058de:	b102      	cbz	r2, 80058e2 <main+0x5c2>
 80058e0:	4790      	blx	r2
 80058e2:	68e3      	ldr	r3, [r4, #12]
 80058e4:	4798      	blx	r3
 80058e6:	68a3      	ldr	r3, [r4, #8]
 80058e8:	b103      	cbz	r3, 80058ec <main+0x5cc>
 80058ea:	4798      	blx	r3
 80058ec:	f7fe f8a0 	bl	8003a30 <test_wait_threads>
 80058f0:	f89a 3000 	ldrb.w	r3, [sl]
 80058f4:	2b00      	cmp	r3, #0
 80058f6:	d03e      	beq.n	8005976 <main+0x656>
 80058f8:	4c4e      	ldr	r4, [pc, #312]	; (8005a34 <main+0x714>)
 80058fa:	212d      	movs	r1, #45	; 0x2d
 80058fc:	f8d8 0000 	ldr.w	r0, [r8]
 8005900:	6803      	ldr	r3, [r0, #0]
 8005902:	689b      	ldr	r3, [r3, #8]
 8005904:	4798      	blx	r3
 8005906:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800590a:	2900      	cmp	r1, #0
 800590c:	d1f6      	bne.n	80058fc <main+0x5dc>
 800590e:	4b4a      	ldr	r3, [pc, #296]	; (8005a38 <main+0x718>)
 8005910:	4c4a      	ldr	r4, [pc, #296]	; (8005a3c <main+0x71c>)
 8005912:	6818      	ldr	r0, [r3, #0]
 8005914:	f7fa feb4 	bl	8000680 <test_printn>
 8005918:	2120      	movs	r1, #32
 800591a:	f8d8 0000 	ldr.w	r0, [r8]
 800591e:	6803      	ldr	r3, [r0, #0]
 8005920:	689b      	ldr	r3, [r3, #8]
 8005922:	4798      	blx	r3
 8005924:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005928:	2900      	cmp	r1, #0
 800592a:	d1f6      	bne.n	800591a <main+0x5fa>
 800592c:	f8d9 3000 	ldr.w	r3, [r9]
 8005930:	4a3f      	ldr	r2, [pc, #252]	; (8005a30 <main+0x710>)
 8005932:	4293      	cmp	r3, r2
 8005934:	d90b      	bls.n	800594e <main+0x62e>
 8005936:	4614      	mov	r4, r2
 8005938:	f8d8 0000 	ldr.w	r0, [r8]
 800593c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005940:	6803      	ldr	r3, [r0, #0]
 8005942:	689b      	ldr	r3, [r3, #8]
 8005944:	4798      	blx	r3
 8005946:	f8d9 3000 	ldr.w	r3, [r9]
 800594a:	429c      	cmp	r4, r3
 800594c:	d3f4      	bcc.n	8005938 <main+0x618>
 800594e:	483c      	ldr	r0, [pc, #240]	; (8005a40 <main+0x720>)
 8005950:	f7fa ff6e 	bl	8000830 <test_println>
 8005954:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 8005958:	463d      	mov	r5, r7
 800595a:	685b      	ldr	r3, [r3, #4]
 800595c:	2b00      	cmp	r3, #0
 800595e:	f47f af75 	bne.w	800584c <main+0x52c>
 8005962:	9e04      	ldr	r6, [sp, #16]
 8005964:	b15e      	cbz	r6, 800597e <main+0x65e>
 8005966:	9a05      	ldr	r2, [sp, #20]
 8005968:	6833      	ldr	r3, [r6, #0]
 800596a:	4611      	mov	r1, r2
 800596c:	f851 2f04 	ldr.w	r2, [r1, #4]!
 8005970:	9204      	str	r2, [sp, #16]
 8005972:	9105      	str	r1, [sp, #20]
 8005974:	e763      	b.n	800583e <main+0x51e>
 8005976:	4833      	ldr	r0, [pc, #204]	; (8005a44 <main+0x724>)
 8005978:	f7fa ff5a 	bl	8000830 <test_println>
 800597c:	e7ea      	b.n	8005954 <main+0x634>
 800597e:	f7fa fe8f 	bl	80006a0 <print_line>
 8005982:	4c31      	ldr	r4, [pc, #196]	; (8005a48 <main+0x728>)
 8005984:	480f      	ldr	r0, [pc, #60]	; (80059c4 <main+0x6a4>)
 8005986:	f7fa ff53 	bl	8000830 <test_println>
 800598a:	2146      	movs	r1, #70	; 0x46
 800598c:	f8d8 0000 	ldr.w	r0, [r8]
 8005990:	6803      	ldr	r3, [r0, #0]
 8005992:	689b      	ldr	r3, [r3, #8]
 8005994:	4798      	blx	r3
 8005996:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800599a:	2900      	cmp	r1, #0
 800599c:	d1f6      	bne.n	800598c <main+0x66c>
 800599e:	4b1f      	ldr	r3, [pc, #124]	; (8005a1c <main+0x6fc>)
 80059a0:	781b      	ldrb	r3, [r3, #0]
 80059a2:	b91b      	cbnz	r3, 80059ac <main+0x68c>
 80059a4:	4829      	ldr	r0, [pc, #164]	; (8005a4c <main+0x72c>)
 80059a6:	f7fa ff43 	bl	8000830 <test_println>
 80059aa:	e6b7      	b.n	800571c <main+0x3fc>
 80059ac:	4828      	ldr	r0, [pc, #160]	; (8005a50 <main+0x730>)
 80059ae:	f7fa ff3f 	bl	8000830 <test_println>
 80059b2:	e6b3      	b.n	800571c <main+0x3fc>
 80059b4:	f640 028b 	movw	r2, #2187	; 0x88b
 80059b8:	609a      	str	r2, [r3, #8]
 80059ba:	e67d      	b.n	80056b8 <main+0x398>
 80059bc:	40020800 	.word	0x40020800
 80059c0:	200008b8 	.word	0x200008b8
 80059c4:	08005cf0 	.word	0x08005cf0
 80059c8:	08005e78 	.word	0x08005e78
 80059cc:	08005d90 	.word	0x08005d90
 80059d0:	08005e94 	.word	0x08005e94
 80059d4:	08005e98 	.word	0x08005e98
 80059d8:	08005da4 	.word	0x08005da4
 80059dc:	08005ea0 	.word	0x08005ea0
 80059e0:	08005db8 	.word	0x08005db8
 80059e4:	08005eb8 	.word	0x08005eb8
 80059e8:	08005dcc 	.word	0x08005dcc
 80059ec:	08005f00 	.word	0x08005f00
 80059f0:	08005de0 	.word	0x08005de0
 80059f4:	08005f0c 	.word	0x08005f0c
 80059f8:	08005df4 	.word	0x08005df4
 80059fc:	08005f18 	.word	0x08005f18
 8005a00:	08005e08 	.word	0x08005e08
 8005a04:	08005f30 	.word	0x08005f30
 8005a08:	08005e1c 	.word	0x08005e1c
 8005a0c:	08006094 	.word	0x08006094
 8005a10:	08005f60 	.word	0x08005f60
 8005a14:	08006100 	.word	0x08006100
 8005a18:	080060f0 	.word	0x080060f0
 8005a1c:	200011a0 	.word	0x200011a0
 8005a20:	08006840 	.word	0x08006840
 8005a24:	08005e30 	.word	0x08005e30
 8005a28:	08005e40 	.word	0x08005e40
 8005a2c:	08005f84 	.word	0x08005f84
 8005a30:	200011e0 	.word	0x200011e0
 8005a34:	08005e44 	.word	0x08005e44
 8005a38:	20000aac 	.word	0x20000aac
 8005a3c:	08005e5c 	.word	0x08005e5c
 8005a40:	08005f88 	.word	0x08005f88
 8005a44:	08005f8c 	.word	0x08005f8c
 8005a48:	08005e60 	.word	0x08005e60
 8005a4c:	08005f98 	.word	0x08005f98
 8005a50:	08005fa0 	.word	0x08005fa0
	...

08005a60 <__early_init>:
 8005a60:	4b26      	ldr	r3, [pc, #152]	; (8005afc <__early_init+0x9c>)
 8005a62:	4a27      	ldr	r2, [pc, #156]	; (8005b00 <__early_init+0xa0>)
 8005a64:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 8005a68:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005a6c:	6418      	str	r0, [r3, #64]	; 0x40
 8005a6e:	6011      	str	r1, [r2, #0]
 8005a70:	681a      	ldr	r2, [r3, #0]
 8005a72:	f042 0201 	orr.w	r2, r2, #1
 8005a76:	601a      	str	r2, [r3, #0]
 8005a78:	681a      	ldr	r2, [r3, #0]
 8005a7a:	0792      	lsls	r2, r2, #30
 8005a7c:	d5fc      	bpl.n	8005a78 <__early_init+0x18>
 8005a7e:	6899      	ldr	r1, [r3, #8]
 8005a80:	4a1e      	ldr	r2, [pc, #120]	; (8005afc <__early_init+0x9c>)
 8005a82:	f021 0103 	bic.w	r1, r1, #3
 8005a86:	6099      	str	r1, [r3, #8]
 8005a88:	6899      	ldr	r1, [r3, #8]
 8005a8a:	6099      	str	r1, [r3, #8]
 8005a8c:	6893      	ldr	r3, [r2, #8]
 8005a8e:	f013 030c 	ands.w	r3, r3, #12
 8005a92:	d1fb      	bne.n	8005a8c <__early_init+0x2c>
 8005a94:	6810      	ldr	r0, [r2, #0]
 8005a96:	4919      	ldr	r1, [pc, #100]	; (8005afc <__early_init+0x9c>)
 8005a98:	f000 00f9 	and.w	r0, r0, #249	; 0xf9
 8005a9c:	6010      	str	r0, [r2, #0]
 8005a9e:	6093      	str	r3, [r2, #8]
 8005aa0:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8005aa2:	f043 0301 	orr.w	r3, r3, #1
 8005aa6:	6753      	str	r3, [r2, #116]	; 0x74
 8005aa8:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 8005aaa:	0798      	lsls	r0, r3, #30
 8005aac:	d5fc      	bpl.n	8005aa8 <__early_init+0x48>
 8005aae:	4b15      	ldr	r3, [pc, #84]	; (8005b04 <__early_init+0xa4>)
 8005ab0:	604b      	str	r3, [r1, #4]
 8005ab2:	680b      	ldr	r3, [r1, #0]
 8005ab4:	4a12      	ldr	r2, [pc, #72]	; (8005b00 <__early_init+0xa0>)
 8005ab6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8005aba:	600b      	str	r3, [r1, #0]
 8005abc:	6853      	ldr	r3, [r2, #4]
 8005abe:	0459      	lsls	r1, r3, #17
 8005ac0:	d5fc      	bpl.n	8005abc <__early_init+0x5c>
 8005ac2:	490e      	ldr	r1, [pc, #56]	; (8005afc <__early_init+0x9c>)
 8005ac4:	680b      	ldr	r3, [r1, #0]
 8005ac6:	019b      	lsls	r3, r3, #6
 8005ac8:	d5fc      	bpl.n	8005ac4 <__early_init+0x64>
 8005aca:	4b0f      	ldr	r3, [pc, #60]	; (8005b08 <__early_init+0xa8>)
 8005acc:	4a0f      	ldr	r2, [pc, #60]	; (8005b0c <__early_init+0xac>)
 8005ace:	608a      	str	r2, [r1, #8]
 8005ad0:	f240 7202 	movw	r2, #1794	; 0x702
 8005ad4:	601a      	str	r2, [r3, #0]
 8005ad6:	688b      	ldr	r3, [r1, #8]
 8005ad8:	4a08      	ldr	r2, [pc, #32]	; (8005afc <__early_init+0x9c>)
 8005ada:	f043 0302 	orr.w	r3, r3, #2
 8005ade:	608b      	str	r3, [r1, #8]
 8005ae0:	6893      	ldr	r3, [r2, #8]
 8005ae2:	f003 030c 	and.w	r3, r3, #12
 8005ae6:	2b08      	cmp	r3, #8
 8005ae8:	d1fa      	bne.n	8005ae0 <__early_init+0x80>
 8005aea:	6c53      	ldr	r3, [r2, #68]	; 0x44
 8005aec:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005af0:	6453      	str	r3, [r2, #68]	; 0x44
 8005af2:	6e53      	ldr	r3, [r2, #100]	; 0x64
 8005af4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005af8:	6653      	str	r3, [r2, #100]	; 0x64
 8005afa:	4770      	bx	lr
 8005afc:	40023800 	.word	0x40023800
 8005b00:	40007000 	.word	0x40007000
 8005b04:	07015410 	.word	0x07015410
 8005b08:	40023c00 	.word	0x40023c00
 8005b0c:	38081000 	.word	0x38081000

08005b10 <chThdExit>:
 8005b10:	b538      	push	{r3, r4, r5, lr}
 8005b12:	2220      	movs	r2, #32
 8005b14:	4603      	mov	r3, r0
 8005b16:	f382 8811 	msr	BASEPRI, r2
 8005b1a:	4a0e      	ldr	r2, [pc, #56]	; (8005b54 <chThdExit+0x44>)
 8005b1c:	6994      	ldr	r4, [r2, #24]
 8005b1e:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005b20:	6223      	str	r3, [r4, #32]
 8005b22:	f104 0524 	add.w	r5, r4, #36	; 0x24
 8005b26:	42a8      	cmp	r0, r5
 8005b28:	d006      	beq.n	8005b38 <chThdExit+0x28>
 8005b2a:	6803      	ldr	r3, [r0, #0]
 8005b2c:	6263      	str	r3, [r4, #36]	; 0x24
 8005b2e:	f7fb f8bf 	bl	8000cb0 <chSchReadyI>
 8005b32:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005b34:	42a8      	cmp	r0, r5
 8005b36:	d1f8      	bne.n	8005b2a <chThdExit+0x1a>
 8005b38:	7f63      	ldrb	r3, [r4, #29]
 8005b3a:	079b      	lsls	r3, r3, #30
 8005b3c:	d104      	bne.n	8005b48 <chThdExit+0x38>
 8005b3e:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 8005b42:	611a      	str	r2, [r3, #16]
 8005b44:	6922      	ldr	r2, [r4, #16]
 8005b46:	6153      	str	r3, [r2, #20]
 8005b48:	200f      	movs	r0, #15
 8005b4a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005b4e:	f7fb bf2f 	b.w	80019b0 <chSchGoSleepS>
 8005b52:	bf00      	nop
 8005b54:	20000930 	.word	0x20000930
	...

08005b60 <thread1.lto_priv.71>:
 8005b60:	f7ff bfd6 	b.w	8005b10 <chThdExit>
	...

08005b70 <chSchDoReschedule>:
 8005b70:	f7fb bcb6 	b.w	80014e0 <chSchDoRescheduleAhead>
	...

08005b80 <__default_exit>:
 8005b80:	e7fe      	b.n	8005b80 <__default_exit>
 8005b82:	bf00      	nop
	...

08005b90 <__late_init>:
 8005b90:	4770      	bx	lr
 8005b92:	bf00      	nop
	...
 8005ba0:	6e696c62 	.word	0x6e696c62
 8005ba4:	0072656b 	.word	0x0072656b
	...
 8005bb0:	61686e75 	.word	0x61686e75
 8005bb4:	656c646e 	.word	0x656c646e
 8005bb8:	78652064 	.word	0x78652064
 8005bbc:	74706563 	.word	0x74706563
 8005bc0:	006e6f69 	.word	0x006e6f69
	...
 8005bd0:	202d2d2d 	.word	0x202d2d2d
 8005bd4:	726f6353 	.word	0x726f6353
 8005bd8:	203a2065 	.word	0x203a2065
 8005bdc:	00000000 	.word	0x00000000
 8005be0:	6d697420 	.word	0x6d697420
 8005be4:	2f737265 	.word	0x2f737265
 8005be8:	00000053 	.word	0x00000053
 8005bec:	00000000 	.word	0x00000000
 8005bf0:	69617720 	.word	0x69617720
 8005bf4:	69732b74 	.word	0x69732b74
 8005bf8:	6c616e67 	.word	0x6c616e67
 8005bfc:	0000532f 	.word	0x0000532f
 8005c00:	636f6c20 	.word	0x636f6c20
 8005c04:	6e752b6b 	.word	0x6e752b6b
 8005c08:	6b636f6c 	.word	0x6b636f6c
 8005c0c:	0000532f 	.word	0x0000532f
 8005c10:	202d2d2d 	.word	0x202d2d2d
 8005c14:	74737953 	.word	0x74737953
 8005c18:	203a6d65 	.word	0x203a6d65
 8005c1c:	00000000 	.word	0x00000000
 8005c20:	74796220 	.word	0x74796220
 8005c24:	00007365 	.word	0x00007365
 8005c28:	202d2d2d 	.word	0x202d2d2d
 8005c2c:	65726854 	.word	0x65726854
 8005c30:	203a6461 	.word	0x203a6461
 8005c34:	00000000 	.word	0x00000000
 8005c38:	202d2d2d 	.word	0x202d2d2d
 8005c3c:	656d6954 	.word	0x656d6954
 8005c40:	203a2072 	.word	0x203a2072
 8005c44:	00000000 	.word	0x00000000
 8005c48:	202d2d2d 	.word	0x202d2d2d
 8005c4c:	616d6553 	.word	0x616d6553
 8005c50:	203a6870 	.word	0x203a6870
 8005c54:	00000000 	.word	0x00000000
 8005c58:	202d2d2d 	.word	0x202d2d2d
 8005c5c:	6e657645 	.word	0x6e657645
 8005c60:	203a5374 	.word	0x203a5374
 8005c64:	00000000 	.word	0x00000000
 8005c68:	202d2d2d 	.word	0x202d2d2d
 8005c6c:	6e657645 	.word	0x6e657645
 8005c70:	203a4c74 	.word	0x203a4c74
 8005c74:	00000000 	.word	0x00000000
 8005c78:	202d2d2d 	.word	0x202d2d2d
 8005c7c:	6574754d 	.word	0x6574754d
 8005c80:	203a2078 	.word	0x203a2078
 8005c84:	00000000 	.word	0x00000000
 8005c88:	202d2d2d 	.word	0x202d2d2d
 8005c8c:	646e6f43 	.word	0x646e6f43
 8005c90:	203a2e56 	.word	0x203a2e56
 8005c94:	00000000 	.word	0x00000000
 8005c98:	202d2d2d 	.word	0x202d2d2d
 8005c9c:	75657551 	.word	0x75657551
 8005ca0:	203a2065 	.word	0x203a2065
 8005ca4:	00000000 	.word	0x00000000
 8005ca8:	202d2d2d 	.word	0x202d2d2d
 8005cac:	6c69614d 	.word	0x6c69614d
 8005cb0:	203a2e42 	.word	0x203a2e42
	...
 8005cc0:	67736d20 	.word	0x67736d20
 8005cc4:	2c532f73 	.word	0x2c532f73
 8005cc8:	00000020 	.word	0x00000020
 8005ccc:	00000000 	.word	0x00000000
 8005cd0:	72687420 	.word	0x72687420
 8005cd4:	73646165 	.word	0x73646165
 8005cd8:	0000532f 	.word	0x0000532f
 8005cdc:	00000000 	.word	0x00000000
 8005ce0:	73657220 	.word	0x73657220
 8005ce4:	64656863 	.word	0x64656863
 8005ce8:	73656c75 	.word	0x73656c75
 8005cec:	202c532f 	.word	0x202c532f
	...
 8005d00:	78746320 	.word	0x78746320
 8005d04:	2f637773 	.word	0x2f637773
 8005d08:	00000053 	.word	0x00000053
 8005d0c:	00000000 	.word	0x00000000
 8005d10:	74796220 	.word	0x74796220
 8005d14:	532f7365 	.word	0x532f7365
	...

08005d20 <ch_debug>:
 8005d20:	6e69616d 18011600 08440404 1814100c     main......D.....
 8005d30:	1e1d1c00 00000000 00000000 00000000     ................
 8005d40:	00004241 00000000 00000000 00000000     AB..............
 8005d50:	00000042 00000043 00000044 00000000     B...C...D.......
 8005d60:	00000041 00000000 00000000 00000000     A...............

08005d70 <evhndl>:
 8005d70:	08000801 080007f1 080007e1 00000000     ................
 8005d80:	00434241 00000000 00000000 00000000     ABC.............
 8005d90:	202a2a2a 6e72654b 203a6c65 20202020     *** Kernel:     
 8005da0:	00002020 202a2a2a 706d6f43 64656c69       ..*** Compiled
 8005db0:	2020203a 00002020 202a2a2a 706d6f43     :     ..*** Comp
 8005dc0:	72656c69 2020203a 00002020 202a2a2a     iler:     ..*** 
 8005dd0:	68637241 63657469 65727574 0000203a     Architecture: ..
 8005de0:	202a2a2a 65726f43 72615620 746e6169     *** Core Variant
 8005df0:	0000203a 202a2a2a 74726f50 666e4920     : ..*** Port Inf
 8005e00:	20203a6f 00002020 202a2a2a 74616c50     o:    ..*** Plat
 8005e10:	6d726f66 2020203a 00002020 202a2a2a     form:     ..*** 
 8005e20:	74736554 616f4220 203a6472 00002020     Test Board:   ..
 8005e30:	202d2d2d 74736554 73614320 00002065     --- Test Case ..
 8005e40:	00002820 202d2d2d 75736552 203a746c      (..--- Result: 
 8005e50:	4c494146 20455255 00002328 00005b20     FAILURE (#.. [..
 8005e60:	616e6946 6572206c 746c7573 0000203a     Final result: ..
 8005e70:	656c6469 00000000 202a2a2a 62696843     idle....*** Chib
 8005e80:	2f534f69 74205452 20747365 74697573     iOS/RT test suit
 8005e90:	00000065 002a2a2a 2e302e33 00000030     e...***.3.0.0...
 8005ea0:	20727041 32203620 20383130 3631202d     Apr  6 2018 - 16
 8005eb0:	3a31303a 00003431 20434347 2e322e37     :01:14..GCC 7.2.
 8005ec0:	30322031 39303731 28203430 656c6572     1 20170904 (rele
 8005ed0:	29657361 52415b20 6d652f4d 64646562     ase) [ARM/embedd
 8005ee0:	372d6465 6172622d 2068636e 69766572     ed-7-branch revi
 8005ef0:	6e6f6973 35353220 5d343032 00000000     sion 255204]....
 8005f00:	764d5241 454d2d37 00000000 74726f43     ARMv7-ME....Cort
 8005f10:	4d2d7865 00000034 61766441 6465636e     ex-M4...Advanced
 8005f20:	72656b20 206c656e 65646f6d 00000000      kernel mode....
 8005f30:	334d5453 30344632 20457831 68676948     STM32F401xE High
 8005f40:	72655020 6d726f66 65636e61 74697720      Performance wit
 8005f50:	53442068 6e612050 50462064 00000055     h DSP and FPU...
 8005f60:	694d5453 656f7263 7463656c 696e6f72     STMicroelectroni
 8005f70:	4e207363 454c4355 34462d4f 45523130     cs NUCLEO-F401RE
 8005f80:	00000000 00000029 0000295d 202d2d2d     ....)...])..--- 
 8005f90:	75736552 203a746c 43435553 00535345     Result: SUCCESS.
 8005fa0:	4c494146 00455255 00000000 00000000     FAILURE.........
 8005fb0:	44434241 00000045 00000000 00000000     ABCDE...........

08005fc0 <patternbmk>:
 8005fc0:	08006610 08006660 08006670 08006680     .f..`f..pf...f..
 8005fd0:	08006690 080066a0 080066b0 080066c0     .f...f...f...f..
 8005fe0:	080066d0 08006620 08006630 08006640     .f.. f..0f..@f..
 8005ff0:	08006650 00000000 00000000 00000000     Pf..............

08006000 <patterndyn>:
 8006000:	080066e0 080066f0 08006700 00000000     .f...f...g......

08006010 <patternevt>:
 8006010:	08006710 08006720 08006730 00000000     .g.. g..0g......

08006020 <patternheap>:
 8006020:	08006740 00000000 00000000 00000000     @g..............

08006030 <patternmbox>:
 8006030:	08006750 00000000 00000000 00000000     Pg..............

08006040 <patternmsg>:
 8006040:	08006760 00000000 00000000 00000000     `g..............

08006050 <patternmtx>:
 8006050:	08006770 08006780 08006790 080067a0     pg...g...g...g..
 8006060:	080067b0 080067c0 00000000 00000000     .g...g..........

08006070 <patternpools>:
 8006070:	080067d0 00000000 00000000 00000000     .g..............

08006080 <patternqueues>:
 8006080:	080067e0 080067f0 00000000 00000000     .g...g..........

08006090 <patterns>:
 8006090:	080060f0 08006100 080060d0 08006050     .`...a...`..P`..
 80060a0:	08006040 08006030 08006010 08006020     @`..0`...`.. `..
 80060b0:	08006070 08006000 08006080 08005fc0     p`...`...`..._..
	...

080060d0 <patternsem>:
 80060d0:	08006800 08006810 08006820 08006830     .h...h.. h..0h..
	...

080060f0 <patternsys>:
 80060f0:	08006840 08006850 08006860 00000000     @h..Ph..`h......

08006100 <patternthd>:
 8006100:	08006870 08006880 08006890 080068a0     ph...h...h...h..
	...
 8006120:	00000a0d 00000000 00000000 00000000     ................
 8006130:	44434241 00000000 00000000 00000000     ABCD............
 8006140:	636e6542 72616d68 52202c6b 66204d41     Benchmark, RAM f
 8006150:	70746f6f 746e6972 00000000 636e6542     ootprint....Benc
 8006160:	72616d68 6d202c6b 78657475 6c207365     hmark, mutexes l
 8006170:	2f6b636f 6f6c6e75 00006b63 636e6542     ock/unlock..Benc
 8006180:	72616d68 73202c6b 70616d65 65726f68     hmark, semaphore
 8006190:	61772073 732f7469 616e6769 0000006c     s wait/signal...
 80061a0:	636e6542 72616d68 76202c6b 75747269     Benchmark, virtu
 80061b0:	74206c61 72656d69 65732073 65722f74     al timers set/re
 80061c0:	00746573 636e6542 72616d68 49202c6b     set.Benchmark, I
 80061d0:	51204f2f 65756575 68742073 67756f72     /O Queues throug
 80061e0:	74757068 00000000 636e6542 72616d68     hput....Benchmar
 80061f0:	72202c6b 646e756f 626f7220 63206e69     k, round robin c
 8006200:	65746e6f 73207478 63746977 676e6968     ontext switching
 8006210:	00000000 636e6542 72616d68 6d202c6b     ....Benchmark, m
 8006220:	20737361 63736572 75646568 202c656c     ass reschedule, 
 8006230:	68742035 64616572 00000073 636e6542     5 threads...Benc
 8006240:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8006250:	61657263 6f206574 00796c6e 636e6542     create only.Benc
 8006260:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8006270:	6c6c7566 63796320 0000656c 636e6542     full cycle..Benc
 8006280:	72616d68 63202c6b 65746e6f 73207478     hmark, context s
 8006290:	63746977 00000068 636e6542 72616d68     witch...Benchmar
 80062a0:	6d202c6b 61737365 20736567 00003323     k, messages #3..
 80062b0:	636e6542 72616d68 6d202c6b 61737365     Benchmark, messa
 80062c0:	20736567 00003223 636e6542 72616d68     ges #2..Benchmar
 80062d0:	6d202c6b 61737365 20736567 00003123     k, messages #1..
 80062e0:	75657551 202c7365 7074756f 71207475     Queues, output q
 80062f0:	65756575 00000073 75657551 202c7365     ueues...Queues, 
 8006300:	75706e69 75712074 73657565 00000000     input queues....
 8006310:	616e7944 2063696d 73495041 6572202c     Dynamic APIs, re
 8006320:	74736967 61207972 7220646e 72656665     gistry and refer
 8006330:	65636e65 00000073 616e7944 2063696d     ences...Dynamic 
 8006340:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8006350:	69746165 66206e6f 206d6f72 6f6d656d     eation from memo
 8006360:	70207972 006c6f6f 616e7944 2063696d     ry pool.Dynamic 
 8006370:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8006380:	69746165 66206e6f 206d6f72 70616568     eation from heap
 8006390:	00000000 6f6d654d 50207972 736c6f6f     ....Memory Pools
 80063a0:	7571202c 2f657565 75716564 00657565     , queue/dequeue.
 80063b0:	70616548 6c61202c 61636f6c 6e6f6974     Heap, allocation
 80063c0:	646e6120 61726620 6e656d67 69746174      and fragmentati
 80063d0:	74206e6f 00747365 6e657645 202c7374     on test.Events, 
 80063e0:	656d6974 7374756f 00000000 6e657645     timeouts....Even
 80063f0:	202c7374 74696177 646e6120 6f726220     ts, wait and bro
 8006400:	61636461 00007473 6e657645 202c7374     adcast..Events, 
 8006410:	69676572 61727473 6e6f6974 646e6120     registration and
 8006420:	73696420 63746170 00000068 6c69614d      dispatch...Mail
 8006430:	65786f62 71202c73 69756575 6120676e     boxes, queuing a
 8006440:	7420646e 6f656d69 00737475 7373654d     nd timeouts.Mess
 8006450:	73656761 6f6c202c 0000706f 646e6f43     ages, loop..Cond
 8006460:	2c726156 6f6f6220 74207473 00747365     Var, boost test.
 8006470:	646e6f43 2c726156 6f726220 61636461     CondVar, broadca
 8006480:	74207473 00747365 646e6f43 2c726156     st test.CondVar,
 8006490:	67697320 206c616e 74736574 00000000      signal test....
 80064a0:	6574754d 2c736578 61747320 00737574     Mutexes, status.
 80064b0:	6574754d 2c736578 69727020 7469726f     Mutexes, priorit
 80064c0:	65722079 6e727574 00000000 6574754d     y return....Mute
 80064d0:	2c736578 69727020 7469726f 6e652079     xes, priority en
 80064e0:	75657571 20676e69 74736574 00000000     queuing test....
 80064f0:	616e6942 53207972 70616d65 65726f68     Binary Semaphore
 8006500:	66202c73 74636e75 616e6f69 7974696c     s, functionality
 8006510:	00000000 616d6553 726f6870 202c7365     ....Semaphores, 
 8006520:	6d6f7461 73206369 616e6769 61772d6c     atomic signal-wa
 8006530:	00007469 616d6553 726f6870 202c7365     it..Semaphores, 
 8006540:	656d6974 0074756f 616d6553 726f6870     timeout.Semaphor
 8006550:	202c7365 75716e65 6e697565 00000067     es, enqueuing...
 8006560:	65726854 2c736461 6c656420 00737961     Threads, delays.
 8006570:	65726854 2c736461 69727020 7469726f     Threads, priorit
 8006580:	68632079 65676e61 00000000 65726854     y change....Thre
 8006590:	2c736461 716e6520 69756575 7420676e     ads, enqueuing t
 80065a0:	20747365 00003223 65726854 2c736461     est #2..Threads,
 80065b0:	716e6520 69756575 7420676e 20747365      enqueuing test 
 80065c0:	00003123 74737953 202c6d65 65746e69     #1..System, inte
 80065d0:	74697267 00000079 74737953 202c6d65     grity...System, 
 80065e0:	65746e69 70757272 68207374 6c646e61     interrupts handl
 80065f0:	00676e69 74737953 202c6d65 74697263     ing.System, crit
 8006600:	6c616369 6e6f7a20 00007365 00000000     ical zones......

08006610 <testbmk1>:
 8006610:	080062c8 00000000 00000000 08003e71     .b..........q>..

08006620 <testbmk10>:
 8006620:	080061a0 00000000 00000000 080028b1     .a...........(..

08006630 <testbmk11>:
 8006630:	0800617c 08000361 00000000 08003731     |a..a.......17..

08006640 <testbmk12>:
 8006640:	0800615c 08000351 00000000 08002da1     \a..Q........-..

08006650 <testbmk13>:
 8006650:	08006140 00000000 00000000 08001361     @a..........a...

08006660 <testbmk2>:
 8006660:	080062b0 00000000 00000000 08003e01     .b...........>..

08006670 <testbmk3>:
 8006670:	08006298 00000000 00000000 08003d21     .b..........!=..

08006680 <testbmk4>:
 8006680:	0800627c 00000000 00000000 08003c71     |b..........q<..

08006690 <testbmk5>:
 8006690:	0800625c 00000000 00000000 080039b1     \b...........9..

080066a0 <testbmk6>:
 80066a0:	0800623c 00000000 00000000 080029f1     <b...........)..

080066b0 <testbmk7>:
 80066b0:	08006214 08000391 00000000 08003b41     .b..........A;..

080066c0 <testbmk8>:
 80066c0:	080061e8 00000000 00000000 08003a61     .a..........a:..

080066d0 <testbmk9>:
 80066d0:	080061c4 00000000 00000000 08002941     .a..........A)..

080066e0 <testdyn1>:
 80066e0:	08006368 08000441 00000000 080044f1     hc..A........D..

080066f0 <testdyn2>:
 80066f0:	08006338 08000421 00000000 080043f1     8c..!........C..

08006700 <testdyn3>:
 8006700:	08006310 08000471 00000000 08003361     .c..q.......a3..

08006710 <testevt1>:
 8006710:	08006408 080004e1 00000000 08000b01     .d..............

08006720 <testevt2>:
 8006720:	080063ec 08000501 00000000 080045c1     .c...........E..

08006730 <testevt3>:
 8006730:	080063d8 080004f1 00000000 08001c21     .c..........!...

08006740 <testheap1>:
 8006740:	080063b0 080004b1 00000000 08003491     .c...........4..

08006750 <testmbox1>:
 8006750:	0800642c 08000511 00000000 08001eb1     ,d..............

08006760 <testmsg1>:
 8006760:	0800644c 00000000 00000000 08002b71     Ld..........q+..

08006770 <testmtx1>:
 8006770:	080064cc 080005d1 00000000 08004d61     .d..........aM..

08006780 <testmtx4>:
 8006780:	080064b0 080005b1 00000000 08004b01     .d...........K..

08006790 <testmtx5>:
 8006790:	080064a0 080005e1 00000000 08002f31     .d..........1/..

080067a0 <testmtx6>:
 80067a0:	08006488 08000581 00000000 08004a21     .d..........!J..

080067b0 <testmtx7>:
 80067b0:	08006470 080005a1 00000000 08004931     pd..........1I..

080067c0 <testmtx8>:
 80067c0:	0800645c 08000551 00000000 080048a1     \d..Q........H..

080067d0 <testpools1>:
 80067d0:	08006394 08000491 00000000 080009f1     .c..............

080067e0 <testqueues1>:
 80067e0:	080062f8 080003f1 00000000 08004141     .b..........AA..

080067f0 <testqueues2>:
 80067f0:	080062e0 080003c1 00000000 08003ee1     .b...........>..

08006800 <testsem1>:
 8006800:	08006548 080005f1 00000000 08004fa1     He...........O..

08006810 <testsem2>:
 8006810:	08006534 08000611 00000000 08004e51     4e..........QN..

08006820 <testsem3>:
 8006820:	08006514 08000601 00000000 08001a51     .e..........Q...

08006830 <testsem4>:
 8006830:	080064f0 00000000 00000000 080037d1     .d...........7..

08006840 <testsys1>:
 8006840:	080065f4 00000000 00000000 08002731     .e..........1'..

08006850 <testsys2>:
 8006850:	080065d8 00000000 00000000 080003a1     .e..............

08006860 <testsys3>:
 8006860:	080065c4 00000000 00000000 080012b1     .e..............

08006870 <testthd1>:
 8006870:	080065a8 00000000 00000000 08005251     .e..........QR..

08006880 <testthd2>:
 8006880:	0800658c 00000000 00000000 08005111     .e...........Q..

08006890 <testthd3>:
 8006890:	08006570 00000000 00000000 08001601     pe..............

080068a0 <testthd4>:
 80068a0:	08006560 00000000 00000000 08002a61     `e..........a*..

080068b0 <vmt>:
 80068b0:	08002521 08002641 080025a1 080026c1     !%..A&...%...&..
 80068c0:	08002591 080026b1 08002511 08002631     .%...&...%..1&..

080068d0 <wa>:
 80068d0:	20000b38 20000c80 20000dc8 20000f10     8.. ... ... ... 
 80068e0:	20001058                                X.. 
