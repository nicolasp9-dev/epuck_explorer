
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

080001c0 <Reset_Handler>:
 80001c0:	b672      	cpsid	i
 80001c2:	4821      	ldr	r0, [pc, #132]	; (8000248 <endfiniloop+0x6>)
 80001c4:	f380 8809 	msr	PSP, r0
 80001c8:	2002      	movs	r0, #2
 80001ca:	f380 8814 	msr	CONTROL, r0
 80001ce:	f3bf 8f6f 	isb	sy
 80001d2:	f006 f98d 	bl	80064f0 <__early_init>
 80001d6:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
 80001da:	491c      	ldr	r1, [pc, #112]	; (800024c <endfiniloop+0xa>)
 80001dc:	4a1c      	ldr	r2, [pc, #112]	; (8000250 <endfiniloop+0xe>)

080001de <msloop>:
 80001de:	4291      	cmp	r1, r2
 80001e0:	bf3c      	itt	cc
 80001e2:	f841 0b04 	strcc.w	r0, [r1], #4
 80001e6:	e7fa      	bcc.n	80001de <msloop>
 80001e8:	491a      	ldr	r1, [pc, #104]	; (8000254 <endfiniloop+0x12>)
 80001ea:	4a17      	ldr	r2, [pc, #92]	; (8000248 <endfiniloop+0x6>)

080001ec <psloop>:
 80001ec:	4291      	cmp	r1, r2
 80001ee:	bf3c      	itt	cc
 80001f0:	f841 0b04 	strcc.w	r0, [r1], #4
 80001f4:	e7fa      	bcc.n	80001ec <psloop>
 80001f6:	4918      	ldr	r1, [pc, #96]	; (8000258 <endfiniloop+0x16>)
 80001f8:	4a18      	ldr	r2, [pc, #96]	; (800025c <endfiniloop+0x1a>)
 80001fa:	4b19      	ldr	r3, [pc, #100]	; (8000260 <endfiniloop+0x1e>)

080001fc <dloop>:
 80001fc:	429a      	cmp	r2, r3
 80001fe:	bf3e      	ittt	cc
 8000200:	f851 0b04 	ldrcc.w	r0, [r1], #4
 8000204:	f842 0b04 	strcc.w	r0, [r2], #4
 8000208:	e7f8      	bcc.n	80001fc <dloop>
 800020a:	2000      	movs	r0, #0
 800020c:	4915      	ldr	r1, [pc, #84]	; (8000264 <endfiniloop+0x22>)
 800020e:	4a16      	ldr	r2, [pc, #88]	; (8000268 <endfiniloop+0x26>)

08000210 <bloop>:
 8000210:	4291      	cmp	r1, r2
 8000212:	bf3c      	itt	cc
 8000214:	f841 0b04 	strcc.w	r0, [r1], #4
 8000218:	e7fa      	bcc.n	8000210 <bloop>
 800021a:	f006 fa09 	bl	8006630 <__late_init>
 800021e:	4c13      	ldr	r4, [pc, #76]	; (800026c <endfiniloop+0x2a>)
 8000220:	4d13      	ldr	r5, [pc, #76]	; (8000270 <endfiniloop+0x2e>)

08000222 <initloop>:
 8000222:	42ac      	cmp	r4, r5
 8000224:	da03      	bge.n	800022e <endinitloop>
 8000226:	f854 1b04 	ldr.w	r1, [r4], #4
 800022a:	4788      	blx	r1
 800022c:	e7f9      	b.n	8000222 <initloop>

0800022e <endinitloop>:
 800022e:	f005 fd4f 	bl	8005cd0 <main>
 8000232:	4c10      	ldr	r4, [pc, #64]	; (8000274 <endfiniloop+0x32>)
 8000234:	4d10      	ldr	r5, [pc, #64]	; (8000278 <endfiniloop+0x36>)

08000236 <finiloop>:
 8000236:	42ac      	cmp	r4, r5
 8000238:	da03      	bge.n	8000242 <endfiniloop>
 800023a:	f854 1b04 	ldr.w	r1, [r4], #4
 800023e:	4788      	blx	r1
 8000240:	e7f9      	b.n	8000236 <finiloop>

08000242 <endfiniloop>:
 8000242:	f006 b9ed 	b.w	8006620 <__default_exit>
 8000246:	0000      	.short	0x0000
 8000248:	20000800 	.word	0x20000800
 800024c:	20000000 	.word	0x20000000
 8000250:	20000400 	.word	0x20000400
 8000254:	20000400 	.word	0x20000400
 8000258:	080073f8 	.word	0x080073f8
 800025c:	20000800 	.word	0x20000800
 8000260:	200008b8 	.word	0x200008b8
 8000264:	200008b8 	.word	0x200008b8
 8000268:	20001548 	.word	0x20001548
 800026c:	080001c0 	.word	0x080001c0
 8000270:	080001c0 	.word	0x080001c0
 8000274:	080001c0 	.word	0x080001c0
 8000278:	080001c0 	.word	0x080001c0
 800027c:	00000000 	.word	0x00000000

08000280 <_port_switch>:
 8000280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000284:	f8c1 d00c 	str.w	sp, [r1, #12]
 8000288:	f8d0 d00c 	ldr.w	sp, [r0, #12]
 800028c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000290 <_port_thread_start>:
 8000290:	2300      	movs	r3, #0
 8000292:	f383 8811 	msr	BASEPRI, r3
 8000296:	4628      	mov	r0, r5
 8000298:	47a0      	blx	r4
 800029a:	2000      	movs	r0, #0
 800029c:	f006 f988 	bl	80065b0 <chThdExit>

080002a0 <_port_switch_from_isr>:
 80002a0:	f006 f9b6 	bl	8006610 <chSchDoReschedule>

080002a4 <_port_exit_from_isr>:
 80002a4:	df00      	svc	0
 80002a6:	e7fe      	b.n	80002a6 <_port_exit_from_isr+0x2>
	...

080002b0 <chTMStartMeasurementX.constprop.66>:
 80002b0:	4b01      	ldr	r3, [pc, #4]	; (80002b8 <chTMStartMeasurementX.constprop.66+0x8>)
 80002b2:	685b      	ldr	r3, [r3, #4]
 80002b4:	6083      	str	r3, [r0, #8]
 80002b6:	4770      	bx	lr
 80002b8:	e0001000 	.word	0xe0001000
 80002bc:	00000000 	.word	0x00000000

080002c0 <chEvtGetAndClearEvents.constprop.44>:
 80002c0:	2320      	movs	r3, #32
 80002c2:	f383 8811 	msr	BASEPRI, r3
 80002c6:	4b04      	ldr	r3, [pc, #16]	; (80002d8 <chEvtGetAndClearEvents.constprop.44+0x18>)
 80002c8:	699a      	ldr	r2, [r3, #24]
 80002ca:	2300      	movs	r3, #0
 80002cc:	6b50      	ldr	r0, [r2, #52]	; 0x34
 80002ce:	6353      	str	r3, [r2, #52]	; 0x34
 80002d0:	f383 8811 	msr	BASEPRI, r3
 80002d4:	4770      	bx	lr
 80002d6:	bf00      	nop
 80002d8:	20000ae0 	.word	0x20000ae0
 80002dc:	00000000 	.word	0x00000000

080002e0 <usb_lld_start_in.constprop.10>:
 80002e0:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80002e2:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 80002e6:	f042 4204 	orr.w	r2, r2, #2214592512	; 0x84000000
 80002ea:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 80002ee:	f8d3 2834 	ldr.w	r2, [r3, #2100]	; 0x834
 80002f2:	f042 0201 	orr.w	r2, r2, #1
 80002f6:	f8c3 2834 	str.w	r2, [r3, #2100]	; 0x834
 80002fa:	4770      	bx	lr
 80002fc:	0000      	movs	r0, r0
	...

08000300 <_pal_lld_setgroupmode.constprop.8>:
 8000300:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000304:	4a24      	ldr	r2, [pc, #144]	; (8000398 <_pal_lld_setgroupmode.constprop.8+0x98>)
 8000306:	2100      	movs	r1, #0
 8000308:	2402      	movs	r4, #2
 800030a:	2607      	movs	r6, #7
 800030c:	250f      	movs	r5, #15
 800030e:	f04f 0c01 	mov.w	ip, #1
 8000312:	2703      	movs	r7, #3
 8000314:	e026      	b.n	8000364 <_pal_lld_setgroupmode.constprop.8+0x64>
 8000316:	f8d2 8020 	ldr.w	r8, [r2, #32]
 800031a:	ea03 0308 	and.w	r3, r3, r8
 800031e:	ea43 030e 	orr.w	r3, r3, lr
 8000322:	6213      	str	r3, [r2, #32]
 8000324:	6853      	ldr	r3, [r2, #4]
 8000326:	fa0c fe01 	lsl.w	lr, ip, r1
 800032a:	ea23 030e 	bic.w	r3, r3, lr
 800032e:	6053      	str	r3, [r2, #4]
 8000330:	004b      	lsls	r3, r1, #1
 8000332:	f8d2 e008 	ldr.w	lr, [r2, #8]
 8000336:	fa07 f303 	lsl.w	r3, r7, r3
 800033a:	43db      	mvns	r3, r3
 800033c:	ea0e 0e03 	and.w	lr, lr, r3
 8000340:	f8c2 e008 	str.w	lr, [r2, #8]
 8000344:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8000348:	ea03 0e0e 	and.w	lr, r3, lr
 800034c:	f8c2 e00c 	str.w	lr, [r2, #12]
 8000350:	f8d2 e000 	ldr.w	lr, [r2]
 8000354:	ea03 030e 	and.w	r3, r3, lr
 8000358:	4323      	orrs	r3, r4
 800035a:	6013      	str	r3, [r2, #0]
 800035c:	0840      	lsrs	r0, r0, #1
 800035e:	d018      	beq.n	8000392 <_pal_lld_setgroupmode.constprop.8+0x92>
 8000360:	00a4      	lsls	r4, r4, #2
 8000362:	3101      	adds	r1, #1
 8000364:	f001 0e07 	and.w	lr, r1, #7
 8000368:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800036c:	fa05 f30e 	lsl.w	r3, r5, lr
 8000370:	f010 0f01 	tst.w	r0, #1
 8000374:	fa06 fe0e 	lsl.w	lr, r6, lr
 8000378:	ea6f 0303 	mvn.w	r3, r3
 800037c:	d0ee      	beq.n	800035c <_pal_lld_setgroupmode.constprop.8+0x5c>
 800037e:	2907      	cmp	r1, #7
 8000380:	d9c9      	bls.n	8000316 <_pal_lld_setgroupmode.constprop.8+0x16>
 8000382:	f8d2 8024 	ldr.w	r8, [r2, #36]	; 0x24
 8000386:	ea03 0308 	and.w	r3, r3, r8
 800038a:	ea43 030e 	orr.w	r3, r3, lr
 800038e:	6253      	str	r3, [r2, #36]	; 0x24
 8000390:	e7c8      	b.n	8000324 <_pal_lld_setgroupmode.constprop.8+0x24>
 8000392:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000396:	bf00      	nop
 8000398:	40020000 	.word	0x40020000
 800039c:	00000000 	.word	0x00000000

080003a0 <tmr>:
 80003a0:	4b01      	ldr	r3, [pc, #4]	; (80003a8 <tmr+0x8>)
 80003a2:	2201      	movs	r2, #1
 80003a4:	701a      	strb	r2, [r3, #0]
 80003a6:	4770      	bx	lr
 80003a8:	20001398 	.word	0x20001398
 80003ac:	00000000 	.word	0x00000000

080003b0 <_idle_thread>:
 80003b0:	e7fe      	b.n	80003b0 <_idle_thread>
 80003b2:	bf00      	nop
	...

080003c0 <chCoreAlloc>:
 80003c0:	4603      	mov	r3, r0
 80003c2:	2220      	movs	r2, #32
 80003c4:	f382 8811 	msr	BASEPRI, r2
 80003c8:	4908      	ldr	r1, [pc, #32]	; (80003ec <chCoreAlloc+0x2c>)
 80003ca:	4a09      	ldr	r2, [pc, #36]	; (80003f0 <chCoreAlloc+0x30>)
 80003cc:	6808      	ldr	r0, [r1, #0]
 80003ce:	6812      	ldr	r2, [r2, #0]
 80003d0:	3307      	adds	r3, #7
 80003d2:	f023 0307 	bic.w	r3, r3, #7
 80003d6:	1a12      	subs	r2, r2, r0
 80003d8:	4293      	cmp	r3, r2
 80003da:	bf9a      	itte	ls
 80003dc:	181b      	addls	r3, r3, r0
 80003de:	600b      	strls	r3, [r1, #0]
 80003e0:	2000      	movhi	r0, #0
 80003e2:	2300      	movs	r3, #0
 80003e4:	f383 8811 	msr	BASEPRI, r3
 80003e8:	4770      	bx	lr
 80003ea:	bf00      	nop
 80003ec:	20000cf4 	.word	0x20000cf4
 80003f0:	20000c58 	.word	0x20000c58
	...

08000400 <notify2>:
 8000400:	4a02      	ldr	r2, [pc, #8]	; (800040c <notify2+0xc>)
 8000402:	68d3      	ldr	r3, [r2, #12]
 8000404:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000408:	60d3      	str	r3, [r2, #12]
 800040a:	4770      	bx	lr
 800040c:	40004400 	.word	0x40004400

08000410 <bmk12_setup>:
 8000410:	4b02      	ldr	r3, [pc, #8]	; (800041c <bmk12_setup+0xc>)
 8000412:	2200      	movs	r2, #0
 8000414:	e9c3 3300 	strd	r3, r3, [r3]
 8000418:	609a      	str	r2, [r3, #8]
 800041a:	4770      	bx	lr
 800041c:	20000ce4 	.word	0x20000ce4

08000420 <bmk11_setup>:
 8000420:	4b02      	ldr	r3, [pc, #8]	; (800042c <bmk11_setup+0xc>)
 8000422:	2201      	movs	r2, #1
 8000424:	e9c3 3300 	strd	r3, r3, [r3]
 8000428:	609a      	str	r2, [r3, #8]
 800042a:	4770      	bx	lr
 800042c:	20000cf8 	.word	0x20000cf8

08000430 <notify>:
 8000430:	4770      	bx	lr
 8000432:	bf00      	nop
	...

08000440 <tmo>:
 8000440:	4770      	bx	lr
 8000442:	bf00      	nop
	...

08000450 <bmk7_setup>:
 8000450:	4b02      	ldr	r3, [pc, #8]	; (800045c <bmk7_setup+0xc>)
 8000452:	2200      	movs	r2, #0
 8000454:	e9c3 3300 	strd	r3, r3, [r3]
 8000458:	609a      	str	r2, [r3, #8]
 800045a:	4770      	bx	lr
 800045c:	20000cf8 	.word	0x20000cf8

08000460 <sys2_execute>:
 8000460:	2320      	movs	r3, #32
 8000462:	f383 8811 	msr	BASEPRI, r3
 8000466:	b662      	cpsie	i
 8000468:	b672      	cpsid	i
 800046a:	f383 8811 	msr	BASEPRI, r3
 800046e:	b662      	cpsie	i
 8000470:	2300      	movs	r3, #0
 8000472:	f383 8811 	msr	BASEPRI, r3
 8000476:	b662      	cpsie	i
 8000478:	4770      	bx	lr
 800047a:	bf00      	nop
 800047c:	0000      	movs	r0, r0
	...

08000480 <queues2_setup>:
 8000480:	b430      	push	{r4, r5}
 8000482:	4a08      	ldr	r2, [pc, #32]	; (80004a4 <queues2_setup+0x24>)
 8000484:	4b08      	ldr	r3, [pc, #32]	; (80004a8 <queues2_setup+0x28>)
 8000486:	4809      	ldr	r0, [pc, #36]	; (80004ac <queues2_setup+0x2c>)
 8000488:	601b      	str	r3, [r3, #0]
 800048a:	1d15      	adds	r5, r2, #4
 800048c:	2404      	movs	r4, #4
 800048e:	2100      	movs	r1, #0
 8000490:	611d      	str	r5, [r3, #16]
 8000492:	609c      	str	r4, [r3, #8]
 8000494:	605b      	str	r3, [r3, #4]
 8000496:	60da      	str	r2, [r3, #12]
 8000498:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800049c:	e9c3 0107 	strd	r0, r1, [r3, #28]
 80004a0:	bc30      	pop	{r4, r5}
 80004a2:	4770      	bx	lr
 80004a4:	20000d08 	.word	0x20000d08
 80004a8:	20000888 	.word	0x20000888
 80004ac:	08000431 	.word	0x08000431

080004b0 <queues1_setup>:
 80004b0:	4a08      	ldr	r2, [pc, #32]	; (80004d4 <queues1_setup+0x24>)
 80004b2:	4b09      	ldr	r3, [pc, #36]	; (80004d8 <queues1_setup+0x28>)
 80004b4:	4809      	ldr	r0, [pc, #36]	; (80004dc <queues1_setup+0x2c>)
 80004b6:	b410      	push	{r4}
 80004b8:	2100      	movs	r1, #0
 80004ba:	1d14      	adds	r4, r2, #4
 80004bc:	611c      	str	r4, [r3, #16]
 80004be:	601b      	str	r3, [r3, #0]
 80004c0:	605b      	str	r3, [r3, #4]
 80004c2:	60da      	str	r2, [r3, #12]
 80004c4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80004c8:	61d8      	str	r0, [r3, #28]
 80004ca:	6099      	str	r1, [r3, #8]
 80004cc:	6219      	str	r1, [r3, #32]
 80004ce:	bc10      	pop	{r4}
 80004d0:	4770      	bx	lr
 80004d2:	bf00      	nop
 80004d4:	20000d08 	.word	0x20000d08
 80004d8:	20000810 	.word	0x20000810
 80004dc:	08000431 	.word	0x08000431

080004e0 <dyn2_setup>:
 80004e0:	4b03      	ldr	r3, [pc, #12]	; (80004f0 <dyn2_setup+0x10>)
 80004e2:	2200      	movs	r2, #0
 80004e4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80004e8:	e9c3 2100 	strd	r2, r1, [r3]
 80004ec:	609a      	str	r2, [r3, #8]
 80004ee:	4770      	bx	lr
 80004f0:	20000cd8 	.word	0x20000cd8
	...

08000500 <dyn1_setup>:
 8000500:	4b08      	ldr	r3, [pc, #32]	; (8000524 <dyn1_setup+0x24>)
 8000502:	4909      	ldr	r1, [pc, #36]	; (8000528 <dyn1_setup+0x28>)
 8000504:	b410      	push	{r4}
 8000506:	2200      	movs	r2, #0
 8000508:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 800050c:	f103 0010 	add.w	r0, r3, #16
 8000510:	e9c1 2400 	strd	r2, r4, [r1]
 8000514:	6099      	str	r1, [r3, #8]
 8000516:	e9c3 0004 	strd	r0, r0, [r3, #16]
 800051a:	601a      	str	r2, [r3, #0]
 800051c:	60da      	str	r2, [r3, #12]
 800051e:	619a      	str	r2, [r3, #24]
 8000520:	bc10      	pop	{r4}
 8000522:	4770      	bx	lr
 8000524:	20000c80 	.word	0x20000c80
 8000528:	20000d08 	.word	0x20000d08
 800052c:	00000000 	.word	0x00000000

08000530 <dyn3_setup>:
 8000530:	f7ff bfe6 	b.w	8000500 <dyn1_setup>
	...

08000540 <null_provider>:
 8000540:	2000      	movs	r0, #0
 8000542:	4770      	bx	lr
	...

08000550 <pools1_setup>:
 8000550:	4b03      	ldr	r3, [pc, #12]	; (8000560 <pools1_setup+0x10>)
 8000552:	2200      	movs	r2, #0
 8000554:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8000558:	e9c3 2100 	strd	r2, r1, [r3]
 800055c:	609a      	str	r2, [r3, #8]
 800055e:	4770      	bx	lr
 8000560:	2000087c 	.word	0x2000087c
	...

08000570 <heap1_setup>:
 8000570:	4b08      	ldr	r3, [pc, #32]	; (8000594 <heap1_setup+0x24>)
 8000572:	4909      	ldr	r1, [pc, #36]	; (8000598 <heap1_setup+0x28>)
 8000574:	b410      	push	{r4}
 8000576:	2200      	movs	r2, #0
 8000578:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 800057c:	f103 0010 	add.w	r0, r3, #16
 8000580:	e9c1 2400 	strd	r2, r4, [r1]
 8000584:	6099      	str	r1, [r3, #8]
 8000586:	e9c3 0004 	strd	r0, r0, [r3, #16]
 800058a:	601a      	str	r2, [r3, #0]
 800058c:	60da      	str	r2, [r3, #12]
 800058e:	619a      	str	r2, [r3, #24]
 8000590:	bc10      	pop	{r4}
 8000592:	4770      	bx	lr
 8000594:	20001378 	.word	0x20001378
 8000598:	20000d08 	.word	0x20000d08
 800059c:	00000000 	.word	0x00000000

080005a0 <evt1_setup>:
 80005a0:	f7ff be8e 	b.w	80002c0 <chEvtGetAndClearEvents.constprop.44>
	...

080005b0 <evt3_setup>:
 80005b0:	f7ff bff6 	b.w	80005a0 <evt1_setup>
	...

080005c0 <evt2_setup>:
 80005c0:	f7ff bfee 	b.w	80005a0 <evt1_setup>
	...

080005d0 <mbox1_setup>:
 80005d0:	b430      	push	{r4, r5}
 80005d2:	4b0b      	ldr	r3, [pc, #44]	; (8000600 <mbox1_setup+0x30>)
 80005d4:	4a0b      	ldr	r2, [pc, #44]	; (8000604 <mbox1_setup+0x34>)
 80005d6:	601a      	str	r2, [r3, #0]
 80005d8:	f102 0514 	add.w	r5, r2, #20
 80005dc:	2405      	movs	r4, #5
 80005de:	f103 011c 	add.w	r1, r3, #28
 80005e2:	2000      	movs	r0, #0
 80005e4:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80005e8:	f103 0210 	add.w	r2, r3, #16
 80005ec:	605d      	str	r5, [r3, #4]
 80005ee:	625c      	str	r4, [r3, #36]	; 0x24
 80005f0:	e9c3 0106 	strd	r0, r1, [r3, #24]
 80005f4:	6219      	str	r1, [r3, #32]
 80005f6:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80005fa:	bc30      	pop	{r4, r5}
 80005fc:	4770      	bx	lr
 80005fe:	bf00      	nop
 8000600:	20000854 	.word	0x20000854
 8000604:	20000d08 	.word	0x20000d08
	...

08000610 <mtx8_setup>:
 8000610:	4906      	ldr	r1, [pc, #24]	; (800062c <mtx8_setup+0x1c>)
 8000612:	4a07      	ldr	r2, [pc, #28]	; (8000630 <mtx8_setup+0x20>)
 8000614:	4b07      	ldr	r3, [pc, #28]	; (8000634 <mtx8_setup+0x24>)
 8000616:	6009      	str	r1, [r1, #0]
 8000618:	2000      	movs	r0, #0
 800061a:	6049      	str	r1, [r1, #4]
 800061c:	e9c2 2200 	strd	r2, r2, [r2]
 8000620:	6090      	str	r0, [r2, #8]
 8000622:	6098      	str	r0, [r3, #8]
 8000624:	e9c3 3300 	strd	r3, r3, [r3]
 8000628:	4770      	bx	lr
 800062a:	bf00      	nop
 800062c:	20000800 	.word	0x20000800
 8000630:	20000834 	.word	0x20000834
 8000634:	20000844 	.word	0x20000844
	...

08000640 <mtx6_setup>:
 8000640:	4a04      	ldr	r2, [pc, #16]	; (8000654 <mtx6_setup+0x14>)
 8000642:	4b05      	ldr	r3, [pc, #20]	; (8000658 <mtx6_setup+0x18>)
 8000644:	6012      	str	r2, [r2, #0]
 8000646:	2100      	movs	r1, #0
 8000648:	6052      	str	r2, [r2, #4]
 800064a:	e9c3 3300 	strd	r3, r3, [r3]
 800064e:	6099      	str	r1, [r3, #8]
 8000650:	4770      	bx	lr
 8000652:	bf00      	nop
 8000654:	20000800 	.word	0x20000800
 8000658:	20000834 	.word	0x20000834
 800065c:	00000000 	.word	0x00000000

08000660 <mtx7_setup>:
 8000660:	f7ff bfee 	b.w	8000640 <mtx6_setup>
	...

08000670 <mtx4_setup>:
 8000670:	4a04      	ldr	r2, [pc, #16]	; (8000684 <mtx4_setup+0x14>)
 8000672:	4b05      	ldr	r3, [pc, #20]	; (8000688 <mtx4_setup+0x18>)
 8000674:	6012      	str	r2, [r2, #0]
 8000676:	2100      	movs	r1, #0
 8000678:	e9c2 2101 	strd	r2, r1, [r2, #4]
 800067c:	6099      	str	r1, [r3, #8]
 800067e:	e9c3 3300 	strd	r3, r3, [r3]
 8000682:	4770      	bx	lr
 8000684:	20000834 	.word	0x20000834
 8000688:	20000844 	.word	0x20000844
 800068c:	00000000 	.word	0x00000000

08000690 <mtx1_setup>:
 8000690:	4b02      	ldr	r3, [pc, #8]	; (800069c <mtx1_setup+0xc>)
 8000692:	2200      	movs	r2, #0
 8000694:	e9c3 3300 	strd	r3, r3, [r3]
 8000698:	609a      	str	r2, [r3, #8]
 800069a:	4770      	bx	lr
 800069c:	20000834 	.word	0x20000834

080006a0 <mtx5_setup>:
 80006a0:	f7ff bff6 	b.w	8000690 <mtx1_setup>
	...

080006b0 <sem1_setup>:
 80006b0:	4b02      	ldr	r3, [pc, #8]	; (80006bc <sem1_setup+0xc>)
 80006b2:	2200      	movs	r2, #0
 80006b4:	e9c3 3300 	strd	r3, r3, [r3]
 80006b8:	609a      	str	r2, [r3, #8]
 80006ba:	4770      	bx	lr
 80006bc:	200008ac 	.word	0x200008ac

080006c0 <sem3_setup>:
 80006c0:	f7ff bff6 	b.w	80006b0 <sem1_setup>
	...

080006d0 <sem2_setup>:
 80006d0:	f7ff bfee 	b.w	80006b0 <sem1_setup>
	...

080006e0 <test_printn.part.1>:
 80006e0:	b320      	cbz	r0, 800072c <test_printn.part.1+0x4c>
 80006e2:	b570      	push	{r4, r5, r6, lr}
 80006e4:	b084      	sub	sp, #16
 80006e6:	466d      	mov	r5, sp
 80006e8:	462c      	mov	r4, r5
 80006ea:	4e11      	ldr	r6, [pc, #68]	; (8000730 <test_printn.part.1+0x50>)
 80006ec:	e000      	b.n	80006f0 <test_printn.part.1+0x10>
 80006ee:	4614      	mov	r4, r2
 80006f0:	fba6 2300 	umull	r2, r3, r6, r0
 80006f4:	08db      	lsrs	r3, r3, #3
 80006f6:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 80006fa:	eba0 0041 	sub.w	r0, r0, r1, lsl #1
 80006fe:	f100 0130 	add.w	r1, r0, #48	; 0x30
 8000702:	4622      	mov	r2, r4
 8000704:	b2c9      	uxtb	r1, r1
 8000706:	f802 1b01 	strb.w	r1, [r2], #1
 800070a:	4618      	mov	r0, r3
 800070c:	2b00      	cmp	r3, #0
 800070e:	d1ee      	bne.n	80006ee <test_printn.part.1+0xe>
 8000710:	42aa      	cmp	r2, r5
 8000712:	d909      	bls.n	8000728 <test_printn.part.1+0x48>
 8000714:	4e07      	ldr	r6, [pc, #28]	; (8000734 <test_printn.part.1+0x54>)
 8000716:	e001      	b.n	800071c <test_printn.part.1+0x3c>
 8000718:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
 800071c:	6830      	ldr	r0, [r6, #0]
 800071e:	6803      	ldr	r3, [r0, #0]
 8000720:	689b      	ldr	r3, [r3, #8]
 8000722:	4798      	blx	r3
 8000724:	42a5      	cmp	r5, r4
 8000726:	d1f7      	bne.n	8000718 <test_printn.part.1+0x38>
 8000728:	b004      	add	sp, #16
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	4770      	bx	lr
 800072e:	bf00      	nop
 8000730:	cccccccd 	.word	0xcccccccd
 8000734:	20000c30 	.word	0x20000c30
	...

08000740 <test_printn>:
 8000740:	b928      	cbnz	r0, 800074e <test_printn+0xe>
 8000742:	4b04      	ldr	r3, [pc, #16]	; (8000754 <test_printn+0x14>)
 8000744:	6818      	ldr	r0, [r3, #0]
 8000746:	6803      	ldr	r3, [r0, #0]
 8000748:	2130      	movs	r1, #48	; 0x30
 800074a:	689b      	ldr	r3, [r3, #8]
 800074c:	4718      	bx	r3
 800074e:	f7ff bfc7 	b.w	80006e0 <test_printn.part.1>
 8000752:	bf00      	nop
 8000754:	20000c30 	.word	0x20000c30
	...

08000760 <print_line>:
 8000760:	b570      	push	{r4, r5, r6, lr}
 8000762:	4d08      	ldr	r5, [pc, #32]	; (8000784 <print_line+0x24>)
 8000764:	244c      	movs	r4, #76	; 0x4c
 8000766:	6828      	ldr	r0, [r5, #0]
 8000768:	6803      	ldr	r3, [r0, #0]
 800076a:	212d      	movs	r1, #45	; 0x2d
 800076c:	689b      	ldr	r3, [r3, #8]
 800076e:	4798      	blx	r3
 8000770:	3c01      	subs	r4, #1
 8000772:	d1f8      	bne.n	8000766 <print_line+0x6>
 8000774:	6828      	ldr	r0, [r5, #0]
 8000776:	4904      	ldr	r1, [pc, #16]	; (8000788 <print_line+0x28>)
 8000778:	6803      	ldr	r3, [r0, #0]
 800077a:	2202      	movs	r2, #2
 800077c:	681b      	ldr	r3, [r3, #0]
 800077e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000782:	4718      	bx	r3
 8000784:	20000c30 	.word	0x20000c30
 8000788:	08006c20 	.word	0x08006c20
 800078c:	00000000 	.word	0x00000000

08000790 <test_terminate_threads>:
 8000790:	4b0a      	ldr	r3, [pc, #40]	; (80007bc <test_terminate_threads+0x2c>)
 8000792:	b430      	push	{r4, r5}
 8000794:	f103 0014 	add.w	r0, r3, #20
 8000798:	2520      	movs	r5, #32
 800079a:	2400      	movs	r4, #0
 800079c:	f853 2b04 	ldr.w	r2, [r3], #4
 80007a0:	b13a      	cbz	r2, 80007b2 <test_terminate_threads+0x22>
 80007a2:	f385 8811 	msr	BASEPRI, r5
 80007a6:	7f51      	ldrb	r1, [r2, #29]
 80007a8:	f041 0104 	orr.w	r1, r1, #4
 80007ac:	7751      	strb	r1, [r2, #29]
 80007ae:	f384 8811 	msr	BASEPRI, r4
 80007b2:	4283      	cmp	r3, r0
 80007b4:	d1f2      	bne.n	800079c <test_terminate_threads+0xc>
 80007b6:	bc30      	pop	{r4, r5}
 80007b8:	4770      	bx	lr
 80007ba:	bf00      	nop
 80007bc:	2000139c 	.word	0x2000139c

080007c0 <_test_assert_time_window>:
 80007c0:	b410      	push	{r4}
 80007c2:	2320      	movs	r3, #32
 80007c4:	f383 8811 	msr	BASEPRI, r3
 80007c8:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 80007cc:	2300      	movs	r3, #0
 80007ce:	6a64      	ldr	r4, [r4, #36]	; 0x24
 80007d0:	f383 8811 	msr	BASEPRI, r3
 80007d4:	1a64      	subs	r4, r4, r1
 80007d6:	1a52      	subs	r2, r2, r1
 80007d8:	4294      	cmp	r4, r2
 80007da:	d306      	bcc.n	80007ea <_test_assert_time_window+0x2a>
 80007dc:	4c04      	ldr	r4, [pc, #16]	; (80007f0 <_test_assert_time_window+0x30>)
 80007de:	4905      	ldr	r1, [pc, #20]	; (80007f4 <_test_assert_time_window+0x34>)
 80007e0:	4a05      	ldr	r2, [pc, #20]	; (80007f8 <_test_assert_time_window+0x38>)
 80007e2:	2301      	movs	r3, #1
 80007e4:	7023      	strb	r3, [r4, #0]
 80007e6:	700b      	strb	r3, [r1, #0]
 80007e8:	6010      	str	r0, [r2, #0]
 80007ea:	4618      	mov	r0, r3
 80007ec:	bc10      	pop	{r4}
 80007ee:	4770      	bx	lr
 80007f0:	20001370 	.word	0x20001370
 80007f4:	20000cd4 	.word	0x20000cd4
 80007f8:	20000c78 	.word	0x20000c78
 80007fc:	00000000 	.word	0x00000000

08000800 <_test_assert_sequence>:
 8000800:	b4f0      	push	{r4, r5, r6, r7}
 8000802:	4e0e      	ldr	r6, [pc, #56]	; (800083c <_test_assert_sequence+0x3c>)
 8000804:	4f0e      	ldr	r7, [pc, #56]	; (8000840 <_test_assert_sequence+0x40>)
 8000806:	6835      	ldr	r5, [r6, #0]
 8000808:	3901      	subs	r1, #1
 800080a:	463b      	mov	r3, r7
 800080c:	e003      	b.n	8000816 <_test_assert_sequence+0x16>
 800080e:	f813 4b01 	ldrb.w	r4, [r3], #1
 8000812:	4294      	cmp	r4, r2
 8000814:	d108      	bne.n	8000828 <_test_assert_sequence+0x28>
 8000816:	429d      	cmp	r5, r3
 8000818:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800081c:	d8f7      	bhi.n	800080e <_test_assert_sequence+0xe>
 800081e:	b91a      	cbnz	r2, 8000828 <_test_assert_sequence+0x28>
 8000820:	6037      	str	r7, [r6, #0]
 8000822:	4610      	mov	r0, r2
 8000824:	bcf0      	pop	{r4, r5, r6, r7}
 8000826:	4770      	bx	lr
 8000828:	4c06      	ldr	r4, [pc, #24]	; (8000844 <_test_assert_sequence+0x44>)
 800082a:	4907      	ldr	r1, [pc, #28]	; (8000848 <_test_assert_sequence+0x48>)
 800082c:	4b07      	ldr	r3, [pc, #28]	; (800084c <_test_assert_sequence+0x4c>)
 800082e:	2201      	movs	r2, #1
 8000830:	7022      	strb	r2, [r4, #0]
 8000832:	6018      	str	r0, [r3, #0]
 8000834:	700a      	strb	r2, [r1, #0]
 8000836:	4610      	mov	r0, r2
 8000838:	bcf0      	pop	{r4, r5, r6, r7}
 800083a:	4770      	bx	lr
 800083c:	200013c0 	.word	0x200013c0
 8000840:	200013b0 	.word	0x200013b0
 8000844:	20001370 	.word	0x20001370
 8000848:	20000cd4 	.word	0x20000cd4
 800084c:	20000c78 	.word	0x20000c78

08000850 <_test_assert>:
 8000850:	b951      	cbnz	r1, 8000868 <_test_assert+0x18>
 8000852:	b410      	push	{r4}
 8000854:	4906      	ldr	r1, [pc, #24]	; (8000870 <_test_assert+0x20>)
 8000856:	4c07      	ldr	r4, [pc, #28]	; (8000874 <_test_assert+0x24>)
 8000858:	4a07      	ldr	r2, [pc, #28]	; (8000878 <_test_assert+0x28>)
 800085a:	2301      	movs	r3, #1
 800085c:	7023      	strb	r3, [r4, #0]
 800085e:	6010      	str	r0, [r2, #0]
 8000860:	700b      	strb	r3, [r1, #0]
 8000862:	4618      	mov	r0, r3
 8000864:	bc10      	pop	{r4}
 8000866:	4770      	bx	lr
 8000868:	2300      	movs	r3, #0
 800086a:	4618      	mov	r0, r3
 800086c:	4770      	bx	lr
 800086e:	bf00      	nop
 8000870:	20000cd4 	.word	0x20000cd4
 8000874:	20001370 	.word	0x20001370
 8000878:	20000c78 	.word	0x20000c78
 800087c:	00000000 	.word	0x00000000

08000880 <test_emit_token>:
 8000880:	2320      	movs	r3, #32
 8000882:	f383 8811 	msr	BASEPRI, r3
 8000886:	4b04      	ldr	r3, [pc, #16]	; (8000898 <test_emit_token+0x18>)
 8000888:	681a      	ldr	r2, [r3, #0]
 800088a:	1c51      	adds	r1, r2, #1
 800088c:	6019      	str	r1, [r3, #0]
 800088e:	7010      	strb	r0, [r2, #0]
 8000890:	2300      	movs	r3, #0
 8000892:	f383 8811 	msr	BASEPRI, r3
 8000896:	4770      	bx	lr
 8000898:	200013c0 	.word	0x200013c0
 800089c:	00000000 	.word	0x00000000

080008a0 <h3>:
 80008a0:	2043      	movs	r0, #67	; 0x43
 80008a2:	f7ff bfed 	b.w	8000880 <test_emit_token>
 80008a6:	bf00      	nop
	...

080008b0 <h2>:
 80008b0:	2042      	movs	r0, #66	; 0x42
 80008b2:	f7ff bfe5 	b.w	8000880 <test_emit_token>
 80008b6:	bf00      	nop
	...

080008c0 <h1>:
 80008c0:	2041      	movs	r0, #65	; 0x41
 80008c2:	f7ff bfdd 	b.w	8000880 <test_emit_token>
 80008c6:	bf00      	nop
	...

080008d0 <thread.lto_priv.69>:
 80008d0:	7800      	ldrb	r0, [r0, #0]
 80008d2:	f7ff bfd5 	b.w	8000880 <test_emit_token>
 80008d6:	bf00      	nop
	...

080008e0 <thread.lto_priv.71>:
 80008e0:	f7ff bff6 	b.w	80008d0 <thread.lto_priv.69>
	...

080008f0 <test_println>:
 80008f0:	b570      	push	{r4, r5, r6, lr}
 80008f2:	7801      	ldrb	r1, [r0, #0]
 80008f4:	b189      	cbz	r1, 800091a <test_println+0x2a>
 80008f6:	4d0a      	ldr	r5, [pc, #40]	; (8000920 <test_println+0x30>)
 80008f8:	4604      	mov	r4, r0
 80008fa:	6828      	ldr	r0, [r5, #0]
 80008fc:	6803      	ldr	r3, [r0, #0]
 80008fe:	689b      	ldr	r3, [r3, #8]
 8000900:	4798      	blx	r3
 8000902:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000906:	2900      	cmp	r1, #0
 8000908:	d1f7      	bne.n	80008fa <test_println+0xa>
 800090a:	6828      	ldr	r0, [r5, #0]
 800090c:	4905      	ldr	r1, [pc, #20]	; (8000924 <test_println+0x34>)
 800090e:	6803      	ldr	r3, [r0, #0]
 8000910:	2202      	movs	r2, #2
 8000912:	681b      	ldr	r3, [r3, #0]
 8000914:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000918:	4718      	bx	r3
 800091a:	4d01      	ldr	r5, [pc, #4]	; (8000920 <test_println+0x30>)
 800091c:	e7f5      	b.n	800090a <test_println+0x1a>
 800091e:	bf00      	nop
 8000920:	20000c30 	.word	0x20000c30
 8000924:	08006c20 	.word	0x08006c20
	...

08000930 <test_print>:
 8000930:	7801      	ldrb	r1, [r0, #0]
 8000932:	b159      	cbz	r1, 800094c <test_print+0x1c>
 8000934:	b538      	push	{r3, r4, r5, lr}
 8000936:	4d06      	ldr	r5, [pc, #24]	; (8000950 <test_print+0x20>)
 8000938:	4604      	mov	r4, r0
 800093a:	6828      	ldr	r0, [r5, #0]
 800093c:	6803      	ldr	r3, [r0, #0]
 800093e:	689b      	ldr	r3, [r3, #8]
 8000940:	4798      	blx	r3
 8000942:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000946:	2900      	cmp	r1, #0
 8000948:	d1f7      	bne.n	800093a <test_print+0xa>
 800094a:	bd38      	pop	{r3, r4, r5, pc}
 800094c:	4770      	bx	lr
 800094e:	bf00      	nop
 8000950:	20000c30 	.word	0x20000c30
	...

08000960 <usb_lld_prepare_transmit>:
 8000960:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8000964:	b410      	push	{r4}
 8000966:	68dc      	ldr	r4, [r3, #12]
 8000968:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800096a:	6960      	ldr	r0, [r4, #20]
 800096c:	6843      	ldr	r3, [r0, #4]
 800096e:	6103      	str	r3, [r0, #16]
 8000970:	b193      	cbz	r3, 8000998 <usb_lld_prepare_transmit+0x38>
 8000972:	b161      	cbz	r1, 800098e <usb_lld_prepare_transmit+0x2e>
 8000974:	8a20      	ldrh	r0, [r4, #16]
 8000976:	bc10      	pop	{r4}
 8000978:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800097c:	1e41      	subs	r1, r0, #1
 800097e:	4419      	add	r1, r3
 8000980:	fbb1 f1f0 	udiv	r1, r1, r0
 8000984:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
 8000988:	f8c2 3910 	str.w	r3, [r2, #2320]	; 0x910
 800098c:	4770      	bx	lr
 800098e:	2b40      	cmp	r3, #64	; 0x40
 8000990:	bf84      	itt	hi
 8000992:	2340      	movhi	r3, #64	; 0x40
 8000994:	6043      	strhi	r3, [r0, #4]
 8000996:	e7ed      	b.n	8000974 <usb_lld_prepare_transmit+0x14>
 8000998:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800099c:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 80009a0:	f8c2 3910 	str.w	r3, [r2, #2320]	; 0x910
 80009a4:	bc10      	pop	{r4}
 80009a6:	4770      	bx	lr
	...

080009b0 <usb_lld_prepare_receive>:
 80009b0:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 80009b4:	b470      	push	{r4, r5, r6}
 80009b6:	68de      	ldr	r6, [r3, #12]
 80009b8:	69b5      	ldr	r5, [r6, #24]
 80009ba:	686a      	ldr	r2, [r5, #4]
 80009bc:	612a      	str	r2, [r5, #16]
 80009be:	b929      	cbnz	r1, 80009cc <usb_lld_prepare_receive+0x1c>
 80009c0:	2a40      	cmp	r2, #64	; 0x40
 80009c2:	d903      	bls.n	80009cc <usb_lld_prepare_receive+0x1c>
 80009c4:	2240      	movs	r2, #64	; 0x40
 80009c6:	4c09      	ldr	r4, [pc, #36]	; (80009ec <usb_lld_prepare_receive+0x3c>)
 80009c8:	606a      	str	r2, [r5, #4]
 80009ca:	e001      	b.n	80009d0 <usb_lld_prepare_receive+0x20>
 80009cc:	f042 44c0 	orr.w	r4, r2, #1610612736	; 0x60000000
 80009d0:	8a75      	ldrh	r5, [r6, #18]
 80009d2:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80009d4:	1e6b      	subs	r3, r5, #1
 80009d6:	eb00 1141 	add.w	r1, r0, r1, lsl #5
 80009da:	4413      	add	r3, r2
 80009dc:	fbb3 f3f5 	udiv	r3, r3, r5
 80009e0:	ea44 43c3 	orr.w	r3, r4, r3, lsl #19
 80009e4:	f8c1 3b10 	str.w	r3, [r1, #2832]	; 0xb10
 80009e8:	bc70      	pop	{r4, r5, r6}
 80009ea:	4770      	bx	lr
 80009ec:	60000040 	.word	0x60000040

080009f0 <otg_epout_handler.constprop.7>:
 80009f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80009f4:	4e24      	ldr	r6, [pc, #144]	; (8000a88 <otg_epout_handler.constprop.7+0x98>)
 80009f6:	6d37      	ldr	r7, [r6, #80]	; 0x50
 80009f8:	eb07 1340 	add.w	r3, r7, r0, lsl #5
 80009fc:	4605      	mov	r5, r0
 80009fe:	f8d3 4b08 	ldr.w	r4, [r3, #2824]	; 0xb08
 8000a02:	f8c3 4b08 	str.w	r4, [r3, #2824]	; 0xb08
 8000a06:	0720      	lsls	r0, r4, #28
 8000a08:	d50a      	bpl.n	8000a20 <otg_epout_handler.constprop.7+0x30>
 8000a0a:	f8d7 3814 	ldr.w	r3, [r7, #2068]	; 0x814
 8000a0e:	0719      	lsls	r1, r3, #28
 8000a10:	d506      	bpl.n	8000a20 <otg_epout_handler.constprop.7+0x30>
 8000a12:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 8000a16:	4629      	mov	r1, r5
 8000a18:	68db      	ldr	r3, [r3, #12]
 8000a1a:	4630      	mov	r0, r6
 8000a1c:	685b      	ldr	r3, [r3, #4]
 8000a1e:	4798      	blx	r3
 8000a20:	07e2      	lsls	r2, r4, #31
 8000a22:	d52e      	bpl.n	8000a82 <otg_epout_handler.constprop.7+0x92>
 8000a24:	f8d7 3814 	ldr.w	r3, [r7, #2068]	; 0x814
 8000a28:	07db      	lsls	r3, r3, #31
 8000a2a:	d52a      	bpl.n	8000a82 <otg_epout_handler.constprop.7+0x92>
 8000a2c:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 8000a30:	68d9      	ldr	r1, [r3, #12]
 8000a32:	698b      	ldr	r3, [r1, #24]
 8000a34:	6858      	ldr	r0, [r3, #4]
 8000a36:	691a      	ldr	r2, [r3, #16]
 8000a38:	4290      	cmp	r0, r2
 8000a3a:	d30c      	bcc.n	8000a56 <otg_epout_handler.constprop.7+0x66>
 8000a3c:	8973      	ldrh	r3, [r6, #10]
 8000a3e:	68cc      	ldr	r4, [r1, #12]
 8000a40:	4811      	ldr	r0, [pc, #68]	; (8000a88 <otg_epout_handler.constprop.7+0x98>)
 8000a42:	2201      	movs	r2, #1
 8000a44:	40aa      	lsls	r2, r5
 8000a46:	ea23 0302 	bic.w	r3, r3, r2
 8000a4a:	8173      	strh	r3, [r6, #10]
 8000a4c:	4629      	mov	r1, r5
 8000a4e:	4623      	mov	r3, r4
 8000a50:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000a54:	4718      	bx	r3
 8000a56:	1a12      	subs	r2, r2, r0
 8000a58:	2400      	movs	r4, #0
 8000a5a:	e9c3 2401 	strd	r2, r4, [r3, #4]
 8000a5e:	4629      	mov	r1, r5
 8000a60:	4809      	ldr	r0, [pc, #36]	; (8000a88 <otg_epout_handler.constprop.7+0x98>)
 8000a62:	f7ff ffa5 	bl	80009b0 <usb_lld_prepare_receive>
 8000a66:	2320      	movs	r3, #32
 8000a68:	f383 8811 	msr	BASEPRI, r3
 8000a6c:	6d33      	ldr	r3, [r6, #80]	; 0x50
 8000a6e:	eb03 1545 	add.w	r5, r3, r5, lsl #5
 8000a72:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	; 0xb00
 8000a76:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000a7a:	f8c5 3b00 	str.w	r3, [r5, #2816]	; 0xb00
 8000a7e:	f384 8811 	msr	BASEPRI, r4
 8000a82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a86:	bf00      	nop
 8000a88:	20000930 	.word	0x20000930
 8000a8c:	00000000 	.word	0x00000000

08000a90 <_usb_ep0out>:
 8000a90:	f890 2034 	ldrb.w	r2, [r0, #52]	; 0x34
 8000a94:	2a06      	cmp	r2, #6
 8000a96:	d814      	bhi.n	8000ac2 <_usb_ep0out+0x32>
 8000a98:	b538      	push	{r3, r4, r5, lr}
 8000a9a:	2301      	movs	r3, #1
 8000a9c:	4093      	lsls	r3, r2
 8000a9e:	f013 0f67 	tst.w	r3, #103	; 0x67
 8000aa2:	4604      	mov	r4, r0
 8000aa4:	d126      	bne.n	8000af4 <_usb_ep0out+0x64>
 8000aa6:	f013 0208 	ands.w	r2, r3, #8
 8000aaa:	d00b      	beq.n	8000ac4 <_usb_ep0out+0x34>
 8000aac:	68c3      	ldr	r3, [r0, #12]
 8000aae:	699b      	ldr	r3, [r3, #24]
 8000ab0:	689b      	ldr	r3, [r3, #8]
 8000ab2:	b92b      	cbnz	r3, 8000ac0 <_usb_ep0out+0x30>
 8000ab4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8000ab6:	b103      	cbz	r3, 8000aba <_usb_ep0out+0x2a>
 8000ab8:	4798      	blx	r3
 8000aba:	2300      	movs	r3, #0
 8000abc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8000ac0:	bd38      	pop	{r3, r4, r5, pc}
 8000ac2:	4770      	bx	lr
 8000ac4:	06d9      	lsls	r1, r3, #27
 8000ac6:	d5fb      	bpl.n	8000ac0 <_usb_ep0out+0x30>
 8000ac8:	68c3      	ldr	r3, [r0, #12]
 8000aca:	2105      	movs	r1, #5
 8000acc:	f880 1034 	strb.w	r1, [r0, #52]	; 0x34
 8000ad0:	695b      	ldr	r3, [r3, #20]
 8000ad2:	4611      	mov	r1, r2
 8000ad4:	701a      	strb	r2, [r3, #0]
 8000ad6:	60da      	str	r2, [r3, #12]
 8000ad8:	e9c3 2201 	strd	r2, r2, [r3, #4]
 8000adc:	f7ff ff40 	bl	8000960 <usb_lld_prepare_transmit>
 8000ae0:	2320      	movs	r3, #32
 8000ae2:	f383 8811 	msr	BASEPRI, r3
 8000ae6:	8923      	ldrh	r3, [r4, #8]
 8000ae8:	07da      	lsls	r2, r3, #31
 8000aea:	d519      	bpl.n	8000b20 <_usb_ep0out+0x90>
 8000aec:	2300      	movs	r3, #0
 8000aee:	f383 8811 	msr	BASEPRI, r3
 8000af2:	bd38      	pop	{r3, r4, r5, pc}
 8000af4:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8000af6:	6841      	ldr	r1, [r0, #4]
 8000af8:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8000afc:	680d      	ldr	r5, [r1, #0]
 8000afe:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000b02:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8000b06:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8000b0a:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000b0e:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8000b12:	b10d      	cbz	r5, 8000b18 <_usb_ep0out+0x88>
 8000b14:	2105      	movs	r1, #5
 8000b16:	47a8      	blx	r5
 8000b18:	2306      	movs	r3, #6
 8000b1a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8000b1e:	bd38      	pop	{r3, r4, r5, pc}
 8000b20:	f043 0301 	orr.w	r3, r3, #1
 8000b24:	8123      	strh	r3, [r4, #8]
 8000b26:	4620      	mov	r0, r4
 8000b28:	f7ff fbda 	bl	80002e0 <usb_lld_start_in.constprop.10>
 8000b2c:	e7de      	b.n	8000aec <_usb_ep0out+0x5c>
 8000b2e:	bf00      	nop

08000b30 <_usb_ep0in>:
 8000b30:	b538      	push	{r3, r4, r5, lr}
 8000b32:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 8000b36:	4604      	mov	r4, r0
 8000b38:	2b06      	cmp	r3, #6
 8000b3a:	d830      	bhi.n	8000b9e <_usb_ep0in+0x6e>
 8000b3c:	e8df f003 	tbb	[pc, r3]
 8000b40:	58370458 	.word	0x58370458
 8000b44:	3058      	.short	0x3058
 8000b46:	58          	.byte	0x58
 8000b47:	00          	.byte	0x00
 8000b48:	f890 004b 	ldrb.w	r0, [r0, #75]	; 0x4b
 8000b4c:	f894 204a 	ldrb.w	r2, [r4, #74]	; 0x4a
 8000b50:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8000b52:	68e3      	ldr	r3, [r4, #12]
 8000b54:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000b58:	4291      	cmp	r1, r2
 8000b5a:	d229      	bcs.n	8000bb0 <_usb_ep0in+0x80>
 8000b5c:	8a18      	ldrh	r0, [r3, #16]
 8000b5e:	fbb1 f2f0 	udiv	r2, r1, r0
 8000b62:	fb00 1212 	mls	r2, r0, r2, r1
 8000b66:	bb1a      	cbnz	r2, 8000bb0 <_usb_ep0in+0x80>
 8000b68:	695b      	ldr	r3, [r3, #20]
 8000b6a:	4611      	mov	r1, r2
 8000b6c:	701a      	strb	r2, [r3, #0]
 8000b6e:	60da      	str	r2, [r3, #12]
 8000b70:	e9c3 2201 	strd	r2, r2, [r3, #4]
 8000b74:	4620      	mov	r0, r4
 8000b76:	f7ff fef3 	bl	8000960 <usb_lld_prepare_transmit>
 8000b7a:	2320      	movs	r3, #32
 8000b7c:	f383 8811 	msr	BASEPRI, r3
 8000b80:	8923      	ldrh	r3, [r4, #8]
 8000b82:	07d9      	lsls	r1, r3, #31
 8000b84:	d405      	bmi.n	8000b92 <_usb_ep0in+0x62>
 8000b86:	f043 0301 	orr.w	r3, r3, #1
 8000b8a:	8123      	strh	r3, [r4, #8]
 8000b8c:	4620      	mov	r0, r4
 8000b8e:	f7ff fba7 	bl	80002e0 <usb_lld_start_in.constprop.10>
 8000b92:	2300      	movs	r3, #0
 8000b94:	f383 8811 	msr	BASEPRI, r3
 8000b98:	2302      	movs	r3, #2
 8000b9a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8000b9e:	bd38      	pop	{r3, r4, r5, pc}
 8000ba0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8000ba2:	b103      	cbz	r3, 8000ba6 <_usb_ep0in+0x76>
 8000ba4:	4798      	blx	r3
 8000ba6:	2300      	movs	r3, #0
 8000ba8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8000bac:	bd38      	pop	{r3, r4, r5, pc}
 8000bae:	68c3      	ldr	r3, [r0, #12]
 8000bb0:	2203      	movs	r2, #3
 8000bb2:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
 8000bb6:	699b      	ldr	r3, [r3, #24]
 8000bb8:	2100      	movs	r1, #0
 8000bba:	7019      	strb	r1, [r3, #0]
 8000bbc:	60d9      	str	r1, [r3, #12]
 8000bbe:	e9c3 1101 	strd	r1, r1, [r3, #4]
 8000bc2:	4620      	mov	r0, r4
 8000bc4:	f7ff fef4 	bl	80009b0 <usb_lld_prepare_receive>
 8000bc8:	2320      	movs	r3, #32
 8000bca:	f383 8811 	msr	BASEPRI, r3
 8000bce:	8963      	ldrh	r3, [r4, #10]
 8000bd0:	07da      	lsls	r2, r3, #31
 8000bd2:	d409      	bmi.n	8000be8 <_usb_ep0in+0xb8>
 8000bd4:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8000bd6:	f8d1 2b00 	ldr.w	r2, [r1, #2816]	; 0xb00
 8000bda:	f043 0301 	orr.w	r3, r3, #1
 8000bde:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8000be2:	8163      	strh	r3, [r4, #10]
 8000be4:	f8c1 2b00 	str.w	r2, [r1, #2816]	; 0xb00
 8000be8:	2300      	movs	r3, #0
 8000bea:	f383 8811 	msr	BASEPRI, r3
 8000bee:	bd38      	pop	{r3, r4, r5, pc}
 8000bf0:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8000bf2:	6841      	ldr	r1, [r0, #4]
 8000bf4:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8000bf8:	680d      	ldr	r5, [r1, #0]
 8000bfa:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000bfe:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8000c02:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8000c06:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000c0a:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8000c0e:	b10d      	cbz	r5, 8000c14 <_usb_ep0in+0xe4>
 8000c10:	2105      	movs	r1, #5
 8000c12:	47a8      	blx	r5
 8000c14:	2306      	movs	r3, #6
 8000c16:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8000c1a:	bd38      	pop	{r3, r4, r5, pc}
 8000c1c:	0000      	movs	r0, r0
	...

08000c20 <_port_irq_epilogue>:
 8000c20:	2320      	movs	r3, #32
 8000c22:	f383 8811 	msr	BASEPRI, r3
 8000c26:	4b11      	ldr	r3, [pc, #68]	; (8000c6c <_port_irq_epilogue+0x4c>)
 8000c28:	685b      	ldr	r3, [r3, #4]
 8000c2a:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 8000c2e:	d102      	bne.n	8000c36 <_port_irq_epilogue+0x16>
 8000c30:	f383 8811 	msr	BASEPRI, r3
 8000c34:	4770      	bx	lr
 8000c36:	b480      	push	{r7}
 8000c38:	af00      	add	r7, sp, #0
 8000c3a:	f3ef 8309 	mrs	r3, PSP
 8000c3e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000c42:	f843 2c04 	str.w	r2, [r3, #-4]
 8000c46:	f1a3 0220 	sub.w	r2, r3, #32
 8000c4a:	f382 8809 	msr	PSP, r2
 8000c4e:	4a08      	ldr	r2, [pc, #32]	; (8000c70 <_port_irq_epilogue+0x50>)
 8000c50:	6811      	ldr	r1, [r2, #0]
 8000c52:	6992      	ldr	r2, [r2, #24]
 8000c54:	6889      	ldr	r1, [r1, #8]
 8000c56:	6892      	ldr	r2, [r2, #8]
 8000c58:	4291      	cmp	r1, r2
 8000c5a:	bf8c      	ite	hi
 8000c5c:	4a05      	ldrhi	r2, [pc, #20]	; (8000c74 <_port_irq_epilogue+0x54>)
 8000c5e:	4a06      	ldrls	r2, [pc, #24]	; (8000c78 <_port_irq_epilogue+0x58>)
 8000c60:	f843 2c08 	str.w	r2, [r3, #-8]
 8000c64:	46bd      	mov	sp, r7
 8000c66:	bc80      	pop	{r7}
 8000c68:	4770      	bx	lr
 8000c6a:	bf00      	nop
 8000c6c:	e000ed00 	.word	0xe000ed00
 8000c70:	20000ae0 	.word	0x20000ae0
 8000c74:	080002a1 	.word	0x080002a1
 8000c78:	080002a4 	.word	0x080002a4
 8000c7c:	00000000 	.word	0x00000000

08000c80 <VectorB0>:
 8000c80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c84:	f04f 4680 	mov.w	r6, #1073741824	; 0x40000000
 8000c88:	6933      	ldr	r3, [r6, #16]
 8000c8a:	079b      	lsls	r3, r3, #30
 8000c8c:	d403      	bmi.n	8000c96 <VectorB0+0x16>
 8000c8e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c92:	f7ff bfc5 	b.w	8000c20 <_port_irq_epilogue>
 8000c96:	2500      	movs	r5, #0
 8000c98:	6135      	str	r5, [r6, #16]
 8000c9a:	2720      	movs	r7, #32
 8000c9c:	f387 8811 	msr	BASEPRI, r7
 8000ca0:	4c1b      	ldr	r4, [pc, #108]	; (8000d10 <VectorB0+0x90>)
 8000ca2:	6a71      	ldr	r1, [r6, #36]	; 0x24
 8000ca4:	69e3      	ldr	r3, [r4, #28]
 8000ca6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000ca8:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8000cac:	1a88      	subs	r0, r1, r2
 8000cae:	4560      	cmp	r0, ip
 8000cb0:	f104 081c 	add.w	r8, r4, #28
 8000cb4:	d319      	bcc.n	8000cea <VectorB0+0x6a>
 8000cb6:	6819      	ldr	r1, [r3, #0]
 8000cb8:	f8d3 900c 	ldr.w	r9, [r3, #12]
 8000cbc:	4462      	add	r2, ip
 8000cbe:	4541      	cmp	r1, r8
 8000cc0:	62a2      	str	r2, [r4, #40]	; 0x28
 8000cc2:	f8c1 8004 	str.w	r8, [r1, #4]
 8000cc6:	61e1      	str	r1, [r4, #28]
 8000cc8:	60dd      	str	r5, [r3, #12]
 8000cca:	bf08      	it	eq
 8000ccc:	60f5      	streq	r5, [r6, #12]
 8000cce:	f385 8811 	msr	BASEPRI, r5
 8000cd2:	6918      	ldr	r0, [r3, #16]
 8000cd4:	47c8      	blx	r9
 8000cd6:	f387 8811 	msr	BASEPRI, r7
 8000cda:	69e3      	ldr	r3, [r4, #28]
 8000cdc:	6a71      	ldr	r1, [r6, #36]	; 0x24
 8000cde:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000ce0:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8000ce4:	1a88      	subs	r0, r1, r2
 8000ce6:	4584      	cmp	ip, r0
 8000ce8:	d9e5      	bls.n	8000cb6 <VectorB0+0x36>
 8000cea:	4543      	cmp	r3, r8
 8000cec:	d008      	beq.n	8000d00 <VectorB0+0x80>
 8000cee:	4462      	add	r2, ip
 8000cf0:	1a52      	subs	r2, r2, r1
 8000cf2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000cf6:	2a02      	cmp	r2, #2
 8000cf8:	bf2c      	ite	cs
 8000cfa:	188a      	addcs	r2, r1, r2
 8000cfc:	1c8a      	addcc	r2, r1, #2
 8000cfe:	635a      	str	r2, [r3, #52]	; 0x34
 8000d00:	2300      	movs	r3, #0
 8000d02:	f383 8811 	msr	BASEPRI, r3
 8000d06:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000d0a:	f7ff bf89 	b.w	8000c20 <_port_irq_epilogue>
 8000d0e:	bf00      	nop
 8000d10:	20000ae0 	.word	0x20000ae0
	...

08000d20 <SVC_Handler>:
 8000d20:	b480      	push	{r7}
 8000d22:	af00      	add	r7, sp, #0
 8000d24:	f3ef 8309 	mrs	r3, PSP
 8000d28:	3320      	adds	r3, #32
 8000d2a:	f383 8809 	msr	PSP, r3
 8000d2e:	2300      	movs	r3, #0
 8000d30:	f383 8811 	msr	BASEPRI, r3
 8000d34:	46bd      	mov	sp, r7
 8000d36:	bc80      	pop	{r7}
 8000d38:	4770      	bx	lr
 8000d3a:	bf00      	nop
 8000d3c:	0000      	movs	r0, r0
	...

08000d40 <chPoolAlloc>:
 8000d40:	b508      	push	{r3, lr}
 8000d42:	2220      	movs	r2, #32
 8000d44:	4603      	mov	r3, r0
 8000d46:	f382 8811 	msr	BASEPRI, r2
 8000d4a:	6800      	ldr	r0, [r0, #0]
 8000d4c:	b128      	cbz	r0, 8000d5a <chPoolAlloc+0x1a>
 8000d4e:	6802      	ldr	r2, [r0, #0]
 8000d50:	601a      	str	r2, [r3, #0]
 8000d52:	2300      	movs	r3, #0
 8000d54:	f383 8811 	msr	BASEPRI, r3
 8000d58:	bd08      	pop	{r3, pc}
 8000d5a:	689a      	ldr	r2, [r3, #8]
 8000d5c:	2a00      	cmp	r2, #0
 8000d5e:	d0f8      	beq.n	8000d52 <chPoolAlloc+0x12>
 8000d60:	6858      	ldr	r0, [r3, #4]
 8000d62:	4790      	blx	r2
 8000d64:	2300      	movs	r3, #0
 8000d66:	f383 8811 	msr	BASEPRI, r3
 8000d6a:	bd08      	pop	{r3, pc}
 8000d6c:	0000      	movs	r0, r0
	...

08000d70 <pools1_execute>:
 8000d70:	b570      	push	{r4, r5, r6, lr}
 8000d72:	4b31      	ldr	r3, [pc, #196]	; (8000e38 <pools1_execute+0xc8>)
 8000d74:	4c31      	ldr	r4, [pc, #196]	; (8000e3c <pools1_execute+0xcc>)
 8000d76:	2205      	movs	r2, #5
 8000d78:	2520      	movs	r5, #32
 8000d7a:	2000      	movs	r0, #0
 8000d7c:	f385 8811 	msr	BASEPRI, r5
 8000d80:	6821      	ldr	r1, [r4, #0]
 8000d82:	6019      	str	r1, [r3, #0]
 8000d84:	6023      	str	r3, [r4, #0]
 8000d86:	f380 8811 	msr	BASEPRI, r0
 8000d8a:	6861      	ldr	r1, [r4, #4]
 8000d8c:	3a01      	subs	r2, #1
 8000d8e:	440b      	add	r3, r1
 8000d90:	d1f4      	bne.n	8000d7c <pools1_execute+0xc>
 8000d92:	4e2a      	ldr	r6, [pc, #168]	; (8000e3c <pools1_execute+0xcc>)
 8000d94:	2505      	movs	r5, #5
 8000d96:	4630      	mov	r0, r6
 8000d98:	f7ff ffd2 	bl	8000d40 <chPoolAlloc>
 8000d9c:	1c01      	adds	r1, r0, #0
 8000d9e:	bf18      	it	ne
 8000da0:	2101      	movne	r1, #1
 8000da2:	2001      	movs	r0, #1
 8000da4:	f7ff fd54 	bl	8000850 <_test_assert>
 8000da8:	bba0      	cbnz	r0, 8000e14 <pools1_execute+0xa4>
 8000daa:	3d01      	subs	r5, #1
 8000dac:	d1f3      	bne.n	8000d96 <pools1_execute+0x26>
 8000dae:	4823      	ldr	r0, [pc, #140]	; (8000e3c <pools1_execute+0xcc>)
 8000db0:	f7ff ffc6 	bl	8000d40 <chPoolAlloc>
 8000db4:	fab0 f180 	clz	r1, r0
 8000db8:	0949      	lsrs	r1, r1, #5
 8000dba:	2002      	movs	r0, #2
 8000dbc:	f7ff fd48 	bl	8000850 <_test_assert>
 8000dc0:	bb40      	cbnz	r0, 8000e14 <pools1_execute+0xa4>
 8000dc2:	4a1f      	ldr	r2, [pc, #124]	; (8000e40 <pools1_execute+0xd0>)
 8000dc4:	4b1c      	ldr	r3, [pc, #112]	; (8000e38 <pools1_execute+0xc8>)
 8000dc6:	f102 0610 	add.w	r6, r2, #16
 8000dca:	2020      	movs	r0, #32
 8000dcc:	f380 8811 	msr	BASEPRI, r0
 8000dd0:	6821      	ldr	r1, [r4, #0]
 8000dd2:	6019      	str	r1, [r3, #0]
 8000dd4:	6023      	str	r3, [r4, #0]
 8000dd6:	f385 8811 	msr	BASEPRI, r5
 8000dda:	4296      	cmp	r6, r2
 8000ddc:	d002      	beq.n	8000de4 <pools1_execute+0x74>
 8000dde:	f852 3b04 	ldr.w	r3, [r2], #4
 8000de2:	e7f3      	b.n	8000dcc <pools1_execute+0x5c>
 8000de4:	4e15      	ldr	r6, [pc, #84]	; (8000e3c <pools1_execute+0xcc>)
 8000de6:	2505      	movs	r5, #5
 8000de8:	4630      	mov	r0, r6
 8000dea:	f7ff ffa9 	bl	8000d40 <chPoolAlloc>
 8000dee:	1c01      	adds	r1, r0, #0
 8000df0:	bf18      	it	ne
 8000df2:	2101      	movne	r1, #1
 8000df4:	2003      	movs	r0, #3
 8000df6:	f7ff fd2b 	bl	8000850 <_test_assert>
 8000dfa:	b958      	cbnz	r0, 8000e14 <pools1_execute+0xa4>
 8000dfc:	3d01      	subs	r5, #1
 8000dfe:	d1f3      	bne.n	8000de8 <pools1_execute+0x78>
 8000e00:	480e      	ldr	r0, [pc, #56]	; (8000e3c <pools1_execute+0xcc>)
 8000e02:	f7ff ff9d 	bl	8000d40 <chPoolAlloc>
 8000e06:	fab0 f180 	clz	r1, r0
 8000e0a:	0949      	lsrs	r1, r1, #5
 8000e0c:	2004      	movs	r0, #4
 8000e0e:	f7ff fd1f 	bl	8000850 <_test_assert>
 8000e12:	b100      	cbz	r0, 8000e16 <pools1_execute+0xa6>
 8000e14:	bd70      	pop	{r4, r5, r6, pc}
 8000e16:	2210      	movs	r2, #16
 8000e18:	4b0a      	ldr	r3, [pc, #40]	; (8000e44 <pools1_execute+0xd4>)
 8000e1a:	4808      	ldr	r0, [pc, #32]	; (8000e3c <pools1_execute+0xcc>)
 8000e1c:	60a3      	str	r3, [r4, #8]
 8000e1e:	e9c4 5200 	strd	r5, r2, [r4]
 8000e22:	f7ff ff8d 	bl	8000d40 <chPoolAlloc>
 8000e26:	fab0 f180 	clz	r1, r0
 8000e2a:	0949      	lsrs	r1, r1, #5
 8000e2c:	2005      	movs	r0, #5
 8000e2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000e32:	f7ff bd0d 	b.w	8000850 <_test_assert>
 8000e36:	bf00      	nop
 8000e38:	20000d08 	.word	0x20000d08
 8000e3c:	2000087c 	.word	0x2000087c
 8000e40:	080073d4 	.word	0x080073d4
 8000e44:	08000541 	.word	0x08000541
	...

08000e50 <chEvtUnregister>:
 8000e50:	2320      	movs	r3, #32
 8000e52:	f383 8811 	msr	BASEPRI, r3
 8000e56:	4602      	mov	r2, r0
 8000e58:	e002      	b.n	8000e60 <chEvtUnregister+0x10>
 8000e5a:	428b      	cmp	r3, r1
 8000e5c:	d007      	beq.n	8000e6e <chEvtUnregister+0x1e>
 8000e5e:	461a      	mov	r2, r3
 8000e60:	6813      	ldr	r3, [r2, #0]
 8000e62:	4283      	cmp	r3, r0
 8000e64:	d1f9      	bne.n	8000e5a <chEvtUnregister+0xa>
 8000e66:	2300      	movs	r3, #0
 8000e68:	f383 8811 	msr	BASEPRI, r3
 8000e6c:	4770      	bx	lr
 8000e6e:	680b      	ldr	r3, [r1, #0]
 8000e70:	6013      	str	r3, [r2, #0]
 8000e72:	2300      	movs	r3, #0
 8000e74:	f383 8811 	msr	BASEPRI, r3
 8000e78:	4770      	bx	lr
 8000e7a:	bf00      	nop
 8000e7c:	0000      	movs	r0, r0
	...

08000e80 <evt1_execute>:
 8000e80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e84:	4c33      	ldr	r4, [pc, #204]	; (8000f54 <evt1_execute+0xd4>)
 8000e86:	b08a      	sub	sp, #40	; 0x28
 8000e88:	2020      	movs	r0, #32
 8000e8a:	6024      	str	r4, [r4, #0]
 8000e8c:	f380 8811 	msr	BASEPRI, r0
 8000e90:	4931      	ldr	r1, [pc, #196]	; (8000f58 <evt1_execute+0xd8>)
 8000e92:	6823      	ldr	r3, [r4, #0]
 8000e94:	ad0a      	add	r5, sp, #40	; 0x28
 8000e96:	2701      	movs	r7, #1
 8000e98:	f845 3d14 	str.w	r3, [r5, #-20]!
 8000e9c:	698b      	ldr	r3, [r1, #24]
 8000e9e:	9306      	str	r3, [sp, #24]
 8000ea0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000ea4:	2300      	movs	r3, #0
 8000ea6:	6025      	str	r5, [r4, #0]
 8000ea8:	e9cd 7307 	strd	r7, r3, [sp, #28]
 8000eac:	9209      	str	r2, [sp, #36]	; 0x24
 8000eae:	f383 8811 	msr	BASEPRI, r3
 8000eb2:	f380 8811 	msr	BASEPRI, r0
 8000eb6:	ae0a      	add	r6, sp, #40	; 0x28
 8000eb8:	6820      	ldr	r0, [r4, #0]
 8000eba:	f846 0d28 	str.w	r0, [r6, #-40]!
 8000ebe:	6989      	ldr	r1, [r1, #24]
 8000ec0:	9101      	str	r1, [sp, #4]
 8000ec2:	f04f 0802 	mov.w	r8, #2
 8000ec6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8000eca:	6026      	str	r6, [r4, #0]
 8000ecc:	f8cd 8008 	str.w	r8, [sp, #8]
 8000ed0:	f383 8811 	msr	BASEPRI, r3
 8000ed4:	6821      	ldr	r1, [r4, #0]
 8000ed6:	1b09      	subs	r1, r1, r4
 8000ed8:	bf18      	it	ne
 8000eda:	2101      	movne	r1, #1
 8000edc:	4638      	mov	r0, r7
 8000ede:	f7ff fcb7 	bl	8000850 <_test_assert>
 8000ee2:	b110      	cbz	r0, 8000eea <evt1_execute+0x6a>
 8000ee4:	b00a      	add	sp, #40	; 0x28
 8000ee6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000eea:	4629      	mov	r1, r5
 8000eec:	4620      	mov	r0, r4
 8000eee:	f7ff ffaf 	bl	8000e50 <chEvtUnregister>
 8000ef2:	6821      	ldr	r1, [r4, #0]
 8000ef4:	1b09      	subs	r1, r1, r4
 8000ef6:	bf18      	it	ne
 8000ef8:	2101      	movne	r1, #1
 8000efa:	4640      	mov	r0, r8
 8000efc:	f7ff fca8 	bl	8000850 <_test_assert>
 8000f00:	2800      	cmp	r0, #0
 8000f02:	d1ef      	bne.n	8000ee4 <evt1_execute+0x64>
 8000f04:	4631      	mov	r1, r6
 8000f06:	4620      	mov	r0, r4
 8000f08:	f7ff ffa2 	bl	8000e50 <chEvtUnregister>
 8000f0c:	6821      	ldr	r1, [r4, #0]
 8000f0e:	1b09      	subs	r1, r1, r4
 8000f10:	fab1 f181 	clz	r1, r1
 8000f14:	2003      	movs	r0, #3
 8000f16:	0949      	lsrs	r1, r1, #5
 8000f18:	f7ff fc9a 	bl	8000850 <_test_assert>
 8000f1c:	2800      	cmp	r0, #0
 8000f1e:	d1e1      	bne.n	8000ee4 <evt1_execute+0x64>
 8000f20:	4e0e      	ldr	r6, [pc, #56]	; (8000f5c <evt1_execute+0xdc>)
 8000f22:	4604      	mov	r4, r0
 8000f24:	2507      	movs	r5, #7
 8000f26:	fa25 f304 	lsr.w	r3, r5, r4
 8000f2a:	f013 0f01 	tst.w	r3, #1
 8000f2e:	fa07 f204 	lsl.w	r2, r7, r4
 8000f32:	4620      	mov	r0, r4
 8000f34:	d00c      	beq.n	8000f50 <evt1_execute+0xd0>
 8000f36:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8000f3a:	ea25 0502 	bic.w	r5, r5, r2
 8000f3e:	3401      	adds	r4, #1
 8000f40:	4798      	blx	r3
 8000f42:	2d00      	cmp	r5, #0
 8000f44:	d1ef      	bne.n	8000f26 <evt1_execute+0xa6>
 8000f46:	4906      	ldr	r1, [pc, #24]	; (8000f60 <evt1_execute+0xe0>)
 8000f48:	2004      	movs	r0, #4
 8000f4a:	f7ff fc59 	bl	8000800 <_test_assert_sequence>
 8000f4e:	e7c9      	b.n	8000ee4 <evt1_execute+0x64>
 8000f50:	3401      	adds	r4, #1
 8000f52:	e7e8      	b.n	8000f26 <evt1_execute+0xa6>
 8000f54:	20000808 	.word	0x20000808
 8000f58:	20000ae0 	.word	0x20000ae0
 8000f5c:	08006850 	.word	0x08006850
 8000f60:	08006860 	.word	0x08006860
	...

08000f70 <chTMStopMeasurementX>:
 8000f70:	4b0e      	ldr	r3, [pc, #56]	; (8000fac <chTMStopMeasurementX+0x3c>)
 8000f72:	4a0f      	ldr	r2, [pc, #60]	; (8000fb0 <chTMStopMeasurementX+0x40>)
 8000f74:	685b      	ldr	r3, [r3, #4]
 8000f76:	68c1      	ldr	r1, [r0, #12]
 8000f78:	b4f0      	push	{r4, r5, r6, r7}
 8000f7a:	6884      	ldr	r4, [r0, #8]
 8000f7c:	6f56      	ldr	r6, [r2, #116]	; 0x74
 8000f7e:	6842      	ldr	r2, [r0, #4]
 8000f80:	1b1b      	subs	r3, r3, r4
 8000f82:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
 8000f86:	1b9b      	subs	r3, r3, r6
 8000f88:	18e6      	adds	r6, r4, r3
 8000f8a:	f145 0700 	adc.w	r7, r5, #0
 8000f8e:	3101      	adds	r1, #1
 8000f90:	4293      	cmp	r3, r2
 8000f92:	e9c0 3102 	strd	r3, r1, [r0, #8]
 8000f96:	e9c0 6704 	strd	r6, r7, [r0, #16]
 8000f9a:	d805      	bhi.n	8000fa8 <chTMStopMeasurementX+0x38>
 8000f9c:	6802      	ldr	r2, [r0, #0]
 8000f9e:	4293      	cmp	r3, r2
 8000fa0:	bf38      	it	cc
 8000fa2:	6003      	strcc	r3, [r0, #0]
 8000fa4:	bcf0      	pop	{r4, r5, r6, r7}
 8000fa6:	4770      	bx	lr
 8000fa8:	6043      	str	r3, [r0, #4]
 8000faa:	e7fb      	b.n	8000fa4 <chTMStopMeasurementX+0x34>
 8000fac:	e0001000 	.word	0xe0001000
 8000fb0:	20000ae0 	.word	0x20000ae0
	...

08000fc0 <wakeup>:
 8000fc0:	2320      	movs	r3, #32
 8000fc2:	f383 8811 	msr	BASEPRI, r3
 8000fc6:	7f03      	ldrb	r3, [r0, #28]
 8000fc8:	2b07      	cmp	r3, #7
 8000fca:	d80e      	bhi.n	8000fea <wakeup+0x2a>
 8000fcc:	e8df f003 	tbb	[pc, r3]
 8000fd0:	230d0d27 	.word	0x230d0d27
 8000fd4:	080d0408 	.word	0x080d0408
 8000fd8:	6a02      	ldr	r2, [r0, #32]
 8000fda:	6893      	ldr	r3, [r2, #8]
 8000fdc:	3301      	adds	r3, #1
 8000fde:	6093      	str	r3, [r2, #8]
 8000fe0:	e9d0 2300 	ldrd	r2, r3, [r0]
 8000fe4:	601a      	str	r2, [r3, #0]
 8000fe6:	6802      	ldr	r2, [r0, #0]
 8000fe8:	6053      	str	r3, [r2, #4]
 8000fea:	b410      	push	{r4}
 8000fec:	2200      	movs	r2, #0
 8000fee:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000ff2:	6881      	ldr	r1, [r0, #8]
 8000ff4:	4b0c      	ldr	r3, [pc, #48]	; (8001028 <wakeup+0x68>)
 8000ff6:	6204      	str	r4, [r0, #32]
 8000ff8:	7702      	strb	r2, [r0, #28]
 8000ffa:	681b      	ldr	r3, [r3, #0]
 8000ffc:	689a      	ldr	r2, [r3, #8]
 8000ffe:	428a      	cmp	r2, r1
 8001000:	d2fb      	bcs.n	8000ffa <wakeup+0x3a>
 8001002:	685a      	ldr	r2, [r3, #4]
 8001004:	2100      	movs	r1, #0
 8001006:	e9c0 3200 	strd	r3, r2, [r0]
 800100a:	6010      	str	r0, [r2, #0]
 800100c:	6058      	str	r0, [r3, #4]
 800100e:	f381 8811 	msr	BASEPRI, r1
 8001012:	bc10      	pop	{r4}
 8001014:	4770      	bx	lr
 8001016:	6a03      	ldr	r3, [r0, #32]
 8001018:	2200      	movs	r2, #0
 800101a:	601a      	str	r2, [r3, #0]
 800101c:	e7e5      	b.n	8000fea <wakeup+0x2a>
 800101e:	2300      	movs	r3, #0
 8001020:	f383 8811 	msr	BASEPRI, r3
 8001024:	4770      	bx	lr
 8001026:	bf00      	nop
 8001028:	20000ae0 	.word	0x20000ae0
 800102c:	00000000 	.word	0x00000000

08001030 <chSchReadyI>:
 8001030:	4601      	mov	r1, r0
 8001032:	2200      	movs	r2, #0
 8001034:	4b06      	ldr	r3, [pc, #24]	; (8001050 <chSchReadyI+0x20>)
 8001036:	6880      	ldr	r0, [r0, #8]
 8001038:	770a      	strb	r2, [r1, #28]
 800103a:	681b      	ldr	r3, [r3, #0]
 800103c:	689a      	ldr	r2, [r3, #8]
 800103e:	4282      	cmp	r2, r0
 8001040:	d2fb      	bcs.n	800103a <chSchReadyI+0xa>
 8001042:	685a      	ldr	r2, [r3, #4]
 8001044:	4608      	mov	r0, r1
 8001046:	e9c1 3200 	strd	r3, r2, [r1]
 800104a:	6011      	str	r1, [r2, #0]
 800104c:	6059      	str	r1, [r3, #4]
 800104e:	4770      	bx	lr
 8001050:	20000ae0 	.word	0x20000ae0
	...

08001060 <chCondSignalI.constprop.51>:
 8001060:	4b07      	ldr	r3, [pc, #28]	; (8001080 <chCondSignalI.constprop.51+0x20>)
 8001062:	681a      	ldr	r2, [r3, #0]
 8001064:	429a      	cmp	r2, r3
 8001066:	d009      	beq.n	800107c <chCondSignalI.constprop.51+0x1c>
 8001068:	6811      	ldr	r1, [r2, #0]
 800106a:	b410      	push	{r4}
 800106c:	2400      	movs	r4, #0
 800106e:	604b      	str	r3, [r1, #4]
 8001070:	6019      	str	r1, [r3, #0]
 8001072:	6214      	str	r4, [r2, #32]
 8001074:	4610      	mov	r0, r2
 8001076:	bc10      	pop	{r4}
 8001078:	f7ff bfda 	b.w	8001030 <chSchReadyI>
 800107c:	4770      	bx	lr
 800107e:	bf00      	nop
 8001080:	20000800 	.word	0x20000800
	...

08001090 <otg_epin_handler.constprop.6>:
 8001090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001094:	4d32      	ldr	r5, [pc, #200]	; (8001160 <otg_epin_handler.constprop.6+0xd0>)
 8001096:	6d2e      	ldr	r6, [r5, #80]	; 0x50
 8001098:	eb06 1340 	add.w	r3, r6, r0, lsl #5
 800109c:	4607      	mov	r7, r0
 800109e:	f8d3 4908 	ldr.w	r4, [r3, #2312]	; 0x908
 80010a2:	f8c3 4908 	str.w	r4, [r3, #2312]	; 0x908
 80010a6:	07e1      	lsls	r1, r4, #31
 80010a8:	d516      	bpl.n	80010d8 <otg_epin_handler.constprop.6+0x48>
 80010aa:	f8d6 3810 	ldr.w	r3, [r6, #2064]	; 0x810
 80010ae:	07da      	lsls	r2, r3, #31
 80010b0:	d512      	bpl.n	80010d8 <otg_epin_handler.constprop.6+0x48>
 80010b2:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010b6:	68d9      	ldr	r1, [r3, #12]
 80010b8:	694b      	ldr	r3, [r1, #20]
 80010ba:	6858      	ldr	r0, [r3, #4]
 80010bc:	691a      	ldr	r2, [r3, #16]
 80010be:	4290      	cmp	r0, r2
 80010c0:	d32e      	bcc.n	8001120 <otg_epin_handler.constprop.6+0x90>
 80010c2:	892b      	ldrh	r3, [r5, #8]
 80010c4:	f8d1 8008 	ldr.w	r8, [r1, #8]
 80010c8:	2201      	movs	r2, #1
 80010ca:	40ba      	lsls	r2, r7
 80010cc:	ea23 0302 	bic.w	r3, r3, r2
 80010d0:	812b      	strh	r3, [r5, #8]
 80010d2:	4639      	mov	r1, r7
 80010d4:	4628      	mov	r0, r5
 80010d6:	47c0      	blx	r8
 80010d8:	0623      	lsls	r3, r4, #24
 80010da:	d506      	bpl.n	80010ea <otg_epin_handler.constprop.6+0x5a>
 80010dc:	2301      	movs	r3, #1
 80010de:	f8d6 2834 	ldr.w	r2, [r6, #2100]	; 0x834
 80010e2:	fa03 f707 	lsl.w	r7, r3, r7
 80010e6:	4217      	tst	r7, r2
 80010e8:	d101      	bne.n	80010ee <otg_epin_handler.constprop.6+0x5e>
 80010ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80010ee:	2320      	movs	r3, #32
 80010f0:	f383 8811 	msr	BASEPRI, r3
 80010f4:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 80010f6:	f8d6 3834 	ldr.w	r3, [r6, #2100]	; 0x834
 80010fa:	6e29      	ldr	r1, [r5, #96]	; 0x60
 80010fc:	433a      	orrs	r2, r7
 80010fe:	ea23 0707 	bic.w	r7, r3, r7
 8001102:	65ea      	str	r2, [r5, #92]	; 0x5c
 8001104:	f8c6 7834 	str.w	r7, [r6, #2100]	; 0x834
 8001108:	b129      	cbz	r1, 8001116 <otg_epin_handler.constprop.6+0x86>
 800110a:	2300      	movs	r3, #0
 800110c:	662b      	str	r3, [r5, #96]	; 0x60
 800110e:	4608      	mov	r0, r1
 8001110:	620b      	str	r3, [r1, #32]
 8001112:	f7ff ff8d 	bl	8001030 <chSchReadyI>
 8001116:	2300      	movs	r3, #0
 8001118:	f383 8811 	msr	BASEPRI, r3
 800111c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001120:	1a12      	subs	r2, r2, r0
 8001122:	f04f 0800 	mov.w	r8, #0
 8001126:	e9c3 2801 	strd	r2, r8, [r3, #4]
 800112a:	4639      	mov	r1, r7
 800112c:	4628      	mov	r0, r5
 800112e:	f7ff fc17 	bl	8000960 <usb_lld_prepare_transmit>
 8001132:	2320      	movs	r3, #32
 8001134:	f383 8811 	msr	BASEPRI, r3
 8001138:	6d2a      	ldr	r2, [r5, #80]	; 0x50
 800113a:	eb02 1047 	add.w	r0, r2, r7, lsl #5
 800113e:	2301      	movs	r3, #1
 8001140:	f8d0 1900 	ldr.w	r1, [r0, #2304]	; 0x900
 8001144:	f041 4104 	orr.w	r1, r1, #2214592512	; 0x84000000
 8001148:	f8c0 1900 	str.w	r1, [r0, #2304]	; 0x900
 800114c:	f8d2 1834 	ldr.w	r1, [r2, #2100]	; 0x834
 8001150:	40bb      	lsls	r3, r7
 8001152:	430b      	orrs	r3, r1
 8001154:	f8c2 3834 	str.w	r3, [r2, #2100]	; 0x834
 8001158:	f388 8811 	msr	BASEPRI, r8
 800115c:	e7bc      	b.n	80010d8 <otg_epin_handler.constprop.6+0x48>
 800115e:	bf00      	nop
 8001160:	20000930 	.word	0x20000930
	...

08001170 <Vector14C>:
 8001170:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001172:	4e76      	ldr	r6, [pc, #472]	; (800134c <Vector14C+0x1dc>)
 8001174:	6d34      	ldr	r4, [r6, #80]	; 0x50
 8001176:	6965      	ldr	r5, [r4, #20]
 8001178:	69a3      	ldr	r3, [r4, #24]
 800117a:	401d      	ands	r5, r3
 800117c:	04e9      	lsls	r1, r5, #19
 800117e:	6165      	str	r5, [r4, #20]
 8001180:	d42f      	bmi.n	80011e2 <Vector14C+0x72>
 8001182:	04ab      	lsls	r3, r5, #18
 8001184:	bf48      	it	mi
 8001186:	f8d4 3808 	ldrmi.w	r3, [r4, #2056]	; 0x808
 800118a:	072f      	lsls	r7, r5, #28
 800118c:	d504      	bpl.n	8001198 <Vector14C+0x28>
 800118e:	6873      	ldr	r3, [r6, #4]
 8001190:	68db      	ldr	r3, [r3, #12]
 8001192:	b10b      	cbz	r3, 8001198 <Vector14C+0x28>
 8001194:	486d      	ldr	r0, [pc, #436]	; (800134c <Vector14C+0x1dc>)
 8001196:	4798      	blx	r3
 8001198:	06e8      	lsls	r0, r5, #27
 800119a:	f100 8091 	bmi.w	80012c0 <Vector14C+0x150>
 800119e:	0369      	lsls	r1, r5, #13
 80011a0:	f8d4 4818 	ldr.w	r4, [r4, #2072]	; 0x818
 80011a4:	d50b      	bpl.n	80011be <Vector14C+0x4e>
 80011a6:	07e2      	lsls	r2, r4, #31
 80011a8:	f100 80c4 	bmi.w	8001334 <Vector14C+0x1c4>
 80011ac:	07a3      	lsls	r3, r4, #30
 80011ae:	f100 80b4 	bmi.w	800131a <Vector14C+0x1aa>
 80011b2:	0767      	lsls	r7, r4, #29
 80011b4:	f100 80b7 	bmi.w	8001326 <Vector14C+0x1b6>
 80011b8:	0726      	lsls	r6, r4, #28
 80011ba:	f100 80c2 	bmi.w	8001342 <Vector14C+0x1d2>
 80011be:	032d      	lsls	r5, r5, #12
 80011c0:	d50b      	bpl.n	80011da <Vector14C+0x6a>
 80011c2:	03e0      	lsls	r0, r4, #15
 80011c4:	f100 8096 	bmi.w	80012f4 <Vector14C+0x184>
 80011c8:	03a1      	lsls	r1, r4, #14
 80011ca:	f100 8099 	bmi.w	8001300 <Vector14C+0x190>
 80011ce:	0362      	lsls	r2, r4, #13
 80011d0:	f100 809c 	bmi.w	800130c <Vector14C+0x19c>
 80011d4:	0323      	lsls	r3, r4, #12
 80011d6:	f100 8086 	bmi.w	80012e6 <Vector14C+0x176>
 80011da:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80011de:	f7ff bd1f 	b.w	8000c20 <_port_irq_epilogue>
 80011e2:	2300      	movs	r3, #0
 80011e4:	2102      	movs	r1, #2
 80011e6:	2220      	movs	r2, #32
 80011e8:	64f3      	str	r3, [r6, #76]	; 0x4c
 80011ea:	e9c6 3304 	strd	r3, r3, [r6, #16]
 80011ee:	61b3      	str	r3, [r6, #24]
 80011f0:	f886 3034 	strb.w	r3, [r6, #52]	; 0x34
 80011f4:	60b3      	str	r3, [r6, #8]
 80011f6:	7031      	strb	r1, [r6, #0]
 80011f8:	6122      	str	r2, [r4, #16]
 80011fa:	6923      	ldr	r3, [r4, #16]
 80011fc:	f013 0320 	ands.w	r3, r3, #32
 8001200:	d1fb      	bne.n	80011fa <Vector14C+0x8a>
 8001202:	4953      	ldr	r1, [pc, #332]	; (8001350 <Vector14C+0x1e0>)
 8001204:	6848      	ldr	r0, [r1, #4]
 8001206:	684a      	ldr	r2, [r1, #4]
 8001208:	1a12      	subs	r2, r2, r0
 800120a:	2a0b      	cmp	r2, #11
 800120c:	d9fb      	bls.n	8001206 <Vector14C+0x96>
 800120e:	f8d6 c054 	ldr.w	ip, [r6, #84]	; 0x54
 8001212:	f8dc 7008 	ldr.w	r7, [ip, #8]
 8001216:	f04f 6000 	mov.w	r0, #134217728	; 0x8000000
 800121a:	3701      	adds	r7, #1
 800121c:	21ff      	movs	r1, #255	; 0xff
 800121e:	eb04 1243 	add.w	r2, r4, r3, lsl #5
 8001222:	3301      	adds	r3, #1
 8001224:	42bb      	cmp	r3, r7
 8001226:	f8c2 0900 	str.w	r0, [r2, #2304]	; 0x900
 800122a:	f8c2 0b00 	str.w	r0, [r2, #2816]	; 0xb00
 800122e:	f8c2 1908 	str.w	r1, [r2, #2312]	; 0x908
 8001232:	f8c2 1b08 	str.w	r1, [r2, #2824]	; 0xb08
 8001236:	d1f2      	bne.n	800121e <Vector14C+0xae>
 8001238:	f8dc 0000 	ldr.w	r0, [ip]
 800123c:	65b0      	str	r0, [r6, #88]	; 0x58
 800123e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001242:	f8dc 2000 	ldr.w	r2, [ip]
 8001246:	f8c4 3818 	str.w	r3, [r4, #2072]	; 0x818
 800124a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800124e:	2310      	movs	r3, #16
 8001250:	f8c4 181c 	str.w	r1, [r4, #2076]	; 0x81c
 8001254:	6262      	str	r2, [r4, #36]	; 0x24
 8001256:	6123      	str	r3, [r4, #16]
 8001258:	6923      	ldr	r3, [r4, #16]
 800125a:	06da      	lsls	r2, r3, #27
 800125c:	d4fc      	bmi.n	8001258 <Vector14C+0xe8>
 800125e:	4a3c      	ldr	r2, [pc, #240]	; (8001350 <Vector14C+0x1e0>)
 8001260:	6851      	ldr	r1, [r2, #4]
 8001262:	6853      	ldr	r3, [r2, #4]
 8001264:	1a5b      	subs	r3, r3, r1
 8001266:	2b0b      	cmp	r3, #11
 8001268:	d9fb      	bls.n	8001262 <Vector14C+0xf2>
 800126a:	f8d4 3800 	ldr.w	r3, [r4, #2048]	; 0x800
 800126e:	6872      	ldr	r2, [r6, #4]
 8001270:	4f38      	ldr	r7, [pc, #224]	; (8001354 <Vector14C+0x1e4>)
 8001272:	6812      	ldr	r2, [r2, #0]
 8001274:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8001278:	f8c4 3800 	str.w	r3, [r4, #2048]	; 0x800
 800127c:	69a3      	ldr	r3, [r4, #24]
 800127e:	f443 2340 	orr.w	r3, r3, #786432	; 0xc0000
 8001282:	f043 0310 	orr.w	r3, r3, #16
 8001286:	61a3      	str	r3, [r4, #24]
 8001288:	2309      	movs	r3, #9
 800128a:	f8c4 3810 	str.w	r3, [r4, #2064]	; 0x810
 800128e:	f8c4 3814 	str.w	r3, [r4, #2068]	; 0x814
 8001292:	f100 0310 	add.w	r3, r0, #16
 8001296:	2100      	movs	r1, #0
 8001298:	65b3      	str	r3, [r6, #88]	; 0x58
 800129a:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 800129e:	4b2e      	ldr	r3, [pc, #184]	; (8001358 <Vector14C+0x1e8>)
 80012a0:	f8c4 1b10 	str.w	r1, [r4, #2832]	; 0xb10
 80012a4:	60f3      	str	r3, [r6, #12]
 80012a6:	f8c4 7b00 	str.w	r7, [r4, #2816]	; 0xb00
 80012aa:	f8c4 1910 	str.w	r1, [r4, #2320]	; 0x910
 80012ae:	f8c4 7900 	str.w	r7, [r4, #2304]	; 0x900
 80012b2:	62a0      	str	r0, [r4, #40]	; 0x28
 80012b4:	2a00      	cmp	r2, #0
 80012b6:	f43f af64 	beq.w	8001182 <Vector14C+0x12>
 80012ba:	4824      	ldr	r0, [pc, #144]	; (800134c <Vector14C+0x1dc>)
 80012bc:	4790      	blx	r2
 80012be:	e760      	b.n	8001182 <Vector14C+0x12>
 80012c0:	2320      	movs	r3, #32
 80012c2:	f383 8811 	msr	BASEPRI, r3
 80012c6:	69a3      	ldr	r3, [r4, #24]
 80012c8:	6e32      	ldr	r2, [r6, #96]	; 0x60
 80012ca:	f023 0310 	bic.w	r3, r3, #16
 80012ce:	61a3      	str	r3, [r4, #24]
 80012d0:	b12a      	cbz	r2, 80012de <Vector14C+0x16e>
 80012d2:	2300      	movs	r3, #0
 80012d4:	6633      	str	r3, [r6, #96]	; 0x60
 80012d6:	4610      	mov	r0, r2
 80012d8:	6213      	str	r3, [r2, #32]
 80012da:	f7ff fea9 	bl	8001030 <chSchReadyI>
 80012de:	2300      	movs	r3, #0
 80012e0:	f383 8811 	msr	BASEPRI, r3
 80012e4:	e75b      	b.n	800119e <Vector14C+0x2e>
 80012e6:	2003      	movs	r0, #3
 80012e8:	f7ff fb82 	bl	80009f0 <otg_epout_handler.constprop.7>
 80012ec:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80012f0:	f7ff bc96 	b.w	8000c20 <_port_irq_epilogue>
 80012f4:	2000      	movs	r0, #0
 80012f6:	f7ff fb7b 	bl	80009f0 <otg_epout_handler.constprop.7>
 80012fa:	03a1      	lsls	r1, r4, #14
 80012fc:	f57f af67 	bpl.w	80011ce <Vector14C+0x5e>
 8001300:	2001      	movs	r0, #1
 8001302:	f7ff fb75 	bl	80009f0 <otg_epout_handler.constprop.7>
 8001306:	0362      	lsls	r2, r4, #13
 8001308:	f57f af64 	bpl.w	80011d4 <Vector14C+0x64>
 800130c:	2002      	movs	r0, #2
 800130e:	f7ff fb6f 	bl	80009f0 <otg_epout_handler.constprop.7>
 8001312:	0323      	lsls	r3, r4, #12
 8001314:	f57f af61 	bpl.w	80011da <Vector14C+0x6a>
 8001318:	e7e5      	b.n	80012e6 <Vector14C+0x176>
 800131a:	2001      	movs	r0, #1
 800131c:	f7ff feb8 	bl	8001090 <otg_epin_handler.constprop.6>
 8001320:	0767      	lsls	r7, r4, #29
 8001322:	f57f af49 	bpl.w	80011b8 <Vector14C+0x48>
 8001326:	2002      	movs	r0, #2
 8001328:	f7ff feb2 	bl	8001090 <otg_epin_handler.constprop.6>
 800132c:	0726      	lsls	r6, r4, #28
 800132e:	f57f af46 	bpl.w	80011be <Vector14C+0x4e>
 8001332:	e006      	b.n	8001342 <Vector14C+0x1d2>
 8001334:	2000      	movs	r0, #0
 8001336:	f7ff feab 	bl	8001090 <otg_epin_handler.constprop.6>
 800133a:	07a3      	lsls	r3, r4, #30
 800133c:	f57f af39 	bpl.w	80011b2 <Vector14C+0x42>
 8001340:	e7eb      	b.n	800131a <Vector14C+0x1aa>
 8001342:	2003      	movs	r0, #3
 8001344:	f7ff fea4 	bl	8001090 <otg_epin_handler.constprop.6>
 8001348:	e739      	b.n	80011be <Vector14C+0x4e>
 800134a:	bf00      	nop
 800134c:	20000930 	.word	0x20000930
 8001350:	e0001000 	.word	0xe0001000
 8001354:	10008040 	.word	0x10008040
 8001358:	08006820 	.word	0x08006820
 800135c:	00000000 	.word	0x00000000

08001360 <chIQPutI>:
 8001360:	b510      	push	{r4, lr}
 8001362:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 8001366:	42a2      	cmp	r2, r4
 8001368:	6883      	ldr	r3, [r0, #8]
 800136a:	d01c      	beq.n	80013a6 <chIQPutI+0x46>
 800136c:	3301      	adds	r3, #1
 800136e:	1c54      	adds	r4, r2, #1
 8001370:	6083      	str	r3, [r0, #8]
 8001372:	6144      	str	r4, [r0, #20]
 8001374:	7011      	strb	r1, [r2, #0]
 8001376:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
 800137a:	429a      	cmp	r2, r3
 800137c:	d20c      	bcs.n	8001398 <chIQPutI+0x38>
 800137e:	6803      	ldr	r3, [r0, #0]
 8001380:	4298      	cmp	r0, r3
 8001382:	d00e      	beq.n	80013a2 <chIQPutI+0x42>
 8001384:	681a      	ldr	r2, [r3, #0]
 8001386:	6002      	str	r2, [r0, #0]
 8001388:	2400      	movs	r4, #0
 800138a:	6050      	str	r0, [r2, #4]
 800138c:	4618      	mov	r0, r3
 800138e:	621c      	str	r4, [r3, #32]
 8001390:	f7ff fe4e 	bl	8001030 <chSchReadyI>
 8001394:	4620      	mov	r0, r4
 8001396:	bd10      	pop	{r4, pc}
 8001398:	68c3      	ldr	r3, [r0, #12]
 800139a:	6143      	str	r3, [r0, #20]
 800139c:	6803      	ldr	r3, [r0, #0]
 800139e:	4298      	cmp	r0, r3
 80013a0:	d1f0      	bne.n	8001384 <chIQPutI+0x24>
 80013a2:	2000      	movs	r0, #0
 80013a4:	bd10      	pop	{r4, pc}
 80013a6:	2b00      	cmp	r3, #0
 80013a8:	d0e0      	beq.n	800136c <chIQPutI+0xc>
 80013aa:	f06f 0003 	mvn.w	r0, #3
 80013ae:	bd10      	pop	{r4, pc}

080013b0 <chOQGetI>:
 80013b0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 80013b4:	4291      	cmp	r1, r2
 80013b6:	b538      	push	{r3, r4, r5, lr}
 80013b8:	6883      	ldr	r3, [r0, #8]
 80013ba:	d017      	beq.n	80013ec <chOQGetI+0x3c>
 80013bc:	6905      	ldr	r5, [r0, #16]
 80013be:	1c51      	adds	r1, r2, #1
 80013c0:	3301      	adds	r3, #1
 80013c2:	6083      	str	r3, [r0, #8]
 80013c4:	6181      	str	r1, [r0, #24]
 80013c6:	42a9      	cmp	r1, r5
 80013c8:	7814      	ldrb	r4, [r2, #0]
 80013ca:	d20c      	bcs.n	80013e6 <chOQGetI+0x36>
 80013cc:	6803      	ldr	r3, [r0, #0]
 80013ce:	4298      	cmp	r0, r3
 80013d0:	d007      	beq.n	80013e2 <chOQGetI+0x32>
 80013d2:	681a      	ldr	r2, [r3, #0]
 80013d4:	6002      	str	r2, [r0, #0]
 80013d6:	2100      	movs	r1, #0
 80013d8:	6050      	str	r0, [r2, #4]
 80013da:	4618      	mov	r0, r3
 80013dc:	6219      	str	r1, [r3, #32]
 80013de:	f7ff fe27 	bl	8001030 <chSchReadyI>
 80013e2:	4620      	mov	r0, r4
 80013e4:	bd38      	pop	{r3, r4, r5, pc}
 80013e6:	68c3      	ldr	r3, [r0, #12]
 80013e8:	6183      	str	r3, [r0, #24]
 80013ea:	e7ef      	b.n	80013cc <chOQGetI+0x1c>
 80013ec:	2b00      	cmp	r3, #0
 80013ee:	d0e5      	beq.n	80013bc <chOQGetI+0xc>
 80013f0:	f06f 0002 	mvn.w	r0, #2
 80013f4:	bd38      	pop	{r3, r4, r5, pc}
 80013f6:	bf00      	nop
	...

08001400 <chEvtSignalI>:
 8001400:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8001402:	7f02      	ldrb	r2, [r0, #28]
 8001404:	4319      	orrs	r1, r3
 8001406:	2a0a      	cmp	r2, #10
 8001408:	6341      	str	r1, [r0, #52]	; 0x34
 800140a:	d009      	beq.n	8001420 <chEvtSignalI+0x20>
 800140c:	2a0b      	cmp	r2, #11
 800140e:	d000      	beq.n	8001412 <chEvtSignalI+0x12>
 8001410:	4770      	bx	lr
 8001412:	6a03      	ldr	r3, [r0, #32]
 8001414:	438b      	bics	r3, r1
 8001416:	d1fb      	bne.n	8001410 <chEvtSignalI+0x10>
 8001418:	2300      	movs	r3, #0
 800141a:	6203      	str	r3, [r0, #32]
 800141c:	f7ff be08 	b.w	8001030 <chSchReadyI>
 8001420:	6a03      	ldr	r3, [r0, #32]
 8001422:	4219      	tst	r1, r3
 8001424:	d1f8      	bne.n	8001418 <chEvtSignalI+0x18>
 8001426:	4770      	bx	lr
	...

08001430 <chEvtBroadcastFlagsI>:
 8001430:	b570      	push	{r4, r5, r6, lr}
 8001432:	6804      	ldr	r4, [r0, #0]
 8001434:	42a0      	cmp	r0, r4
 8001436:	d00f      	beq.n	8001458 <chEvtBroadcastFlagsI+0x28>
 8001438:	4606      	mov	r6, r0
 800143a:	460d      	mov	r5, r1
 800143c:	68e3      	ldr	r3, [r4, #12]
 800143e:	432b      	orrs	r3, r5
 8001440:	60e3      	str	r3, [r4, #12]
 8001442:	b115      	cbz	r5, 800144a <chEvtBroadcastFlagsI+0x1a>
 8001444:	6922      	ldr	r2, [r4, #16]
 8001446:	4213      	tst	r3, r2
 8001448:	d003      	beq.n	8001452 <chEvtBroadcastFlagsI+0x22>
 800144a:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 800144e:	f7ff ffd7 	bl	8001400 <chEvtSignalI>
 8001452:	6824      	ldr	r4, [r4, #0]
 8001454:	42a6      	cmp	r6, r4
 8001456:	d1f1      	bne.n	800143c <chEvtBroadcastFlagsI+0xc>
 8001458:	bd70      	pop	{r4, r5, r6, pc}
 800145a:	bf00      	nop
 800145c:	0000      	movs	r0, r0
	...

08001460 <VectorD8>:
 8001460:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001464:	4e4d      	ldr	r6, [pc, #308]	; (800159c <VectorD8+0x13c>)
 8001466:	6f75      	ldr	r5, [r6, #116]	; 0x74
 8001468:	f8d5 900c 	ldr.w	r9, [r5, #12]
 800146c:	682b      	ldr	r3, [r5, #0]
 800146e:	05da      	lsls	r2, r3, #23
 8001470:	b29c      	uxth	r4, r3
 8001472:	d463      	bmi.n	800153c <VectorD8+0xdc>
 8001474:	2320      	movs	r3, #32
 8001476:	f383 8811 	msr	BASEPRI, r3
 800147a:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 800147e:	d038      	beq.n	80014f2 <VectorD8+0x92>
 8001480:	4f47      	ldr	r7, [pc, #284]	; (80015a0 <VectorD8+0x140>)
 8001482:	f107 0808 	add.w	r8, r7, #8
 8001486:	e008      	b.n	800149a <VectorD8+0x3a>
 8001488:	06a0      	lsls	r0, r4, #26
 800148a:	f8d5 a004 	ldr.w	sl, [r5, #4]
 800148e:	d41e      	bmi.n	80014ce <VectorD8+0x6e>
 8001490:	682c      	ldr	r4, [r5, #0]
 8001492:	b2a4      	uxth	r4, r4
 8001494:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8001498:	d02b      	beq.n	80014f2 <VectorD8+0x92>
 800149a:	0723      	lsls	r3, r4, #28
 800149c:	d0f4      	beq.n	8001488 <VectorD8+0x28>
 800149e:	f014 0f08 	tst.w	r4, #8
 80014a2:	bf0c      	ite	eq
 80014a4:	2100      	moveq	r1, #0
 80014a6:	2180      	movne	r1, #128	; 0x80
 80014a8:	07e0      	lsls	r0, r4, #31
 80014aa:	bf48      	it	mi
 80014ac:	f041 0120 	orrmi.w	r1, r1, #32
 80014b0:	07a2      	lsls	r2, r4, #30
 80014b2:	bf48      	it	mi
 80014b4:	f041 0140 	orrmi.w	r1, r1, #64	; 0x40
 80014b8:	0763      	lsls	r3, r4, #29
 80014ba:	bf48      	it	mi
 80014bc:	f441 7180 	orrmi.w	r1, r1, #256	; 0x100
 80014c0:	4638      	mov	r0, r7
 80014c2:	f7ff ffb5 	bl	8001430 <chEvtBroadcastFlagsI>
 80014c6:	06a0      	lsls	r0, r4, #26
 80014c8:	f8d5 a004 	ldr.w	sl, [r5, #4]
 80014cc:	d5e0      	bpl.n	8001490 <VectorD8+0x30>
 80014ce:	6973      	ldr	r3, [r6, #20]
 80014d0:	b37b      	cbz	r3, 8001532 <VectorD8+0xd2>
 80014d2:	fa5f f18a 	uxtb.w	r1, sl
 80014d6:	4640      	mov	r0, r8
 80014d8:	f7ff ff42 	bl	8001360 <chIQPutI>
 80014dc:	2800      	cmp	r0, #0
 80014de:	dad7      	bge.n	8001490 <VectorD8+0x30>
 80014e0:	2180      	movs	r1, #128	; 0x80
 80014e2:	4638      	mov	r0, r7
 80014e4:	f7ff ffa4 	bl	8001430 <chEvtBroadcastFlagsI>
 80014e8:	682c      	ldr	r4, [r5, #0]
 80014ea:	b2a4      	uxth	r4, r4
 80014ec:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 80014f0:	d1d3      	bne.n	800149a <VectorD8+0x3a>
 80014f2:	2300      	movs	r3, #0
 80014f4:	f383 8811 	msr	BASEPRI, r3
 80014f8:	f019 0f80 	tst.w	r9, #128	; 0x80
 80014fc:	d001      	beq.n	8001502 <VectorD8+0xa2>
 80014fe:	0622      	lsls	r2, r4, #24
 8001500:	d42b      	bmi.n	800155a <VectorD8+0xfa>
 8001502:	0663      	lsls	r3, r4, #25
 8001504:	d511      	bpl.n	800152a <VectorD8+0xca>
 8001506:	2320      	movs	r3, #32
 8001508:	f383 8811 	msr	BASEPRI, r3
 800150c:	e9d6 2311 	ldrd	r2, r3, [r6, #68]	; 0x44
 8001510:	429a      	cmp	r2, r3
 8001512:	d02f      	beq.n	8001574 <VectorD8+0x114>
 8001514:	f64f 73bf 	movw	r3, #65471	; 0xffbf
 8001518:	ea09 0303 	and.w	r3, r9, r3
 800151c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8001520:	60eb      	str	r3, [r5, #12]
 8001522:	2300      	movs	r3, #0
 8001524:	602a      	str	r2, [r5, #0]
 8001526:	f383 8811 	msr	BASEPRI, r3
 800152a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800152e:	f7ff bb77 	b.w	8000c20 <_port_irq_epilogue>
 8001532:	2104      	movs	r1, #4
 8001534:	4638      	mov	r0, r7
 8001536:	f7ff ff7b 	bl	8001430 <chEvtBroadcastFlagsI>
 800153a:	e7ca      	b.n	80014d2 <VectorD8+0x72>
 800153c:	2320      	movs	r3, #32
 800153e:	f383 8811 	msr	BASEPRI, r3
 8001542:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001546:	1d30      	adds	r0, r6, #4
 8001548:	f7ff ff72 	bl	8001430 <chEvtBroadcastFlagsI>
 800154c:	f46f 7380 	mvn.w	r3, #256	; 0x100
 8001550:	602b      	str	r3, [r5, #0]
 8001552:	2300      	movs	r3, #0
 8001554:	f383 8811 	msr	BASEPRI, r3
 8001558:	e78c      	b.n	8001474 <VectorD8+0x14>
 800155a:	2320      	movs	r3, #32
 800155c:	f383 8811 	msr	BASEPRI, r3
 8001560:	4810      	ldr	r0, [pc, #64]	; (80015a4 <VectorD8+0x144>)
 8001562:	f7ff ff25 	bl	80013b0 <chOQGetI>
 8001566:	2800      	cmp	r0, #0
 8001568:	db0c      	blt.n	8001584 <VectorD8+0x124>
 800156a:	6068      	str	r0, [r5, #4]
 800156c:	2300      	movs	r3, #0
 800156e:	f383 8811 	msr	BASEPRI, r3
 8001572:	e7c6      	b.n	8001502 <VectorD8+0xa2>
 8001574:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001576:	2b00      	cmp	r3, #0
 8001578:	d0cc      	beq.n	8001514 <VectorD8+0xb4>
 800157a:	2110      	movs	r1, #16
 800157c:	4808      	ldr	r0, [pc, #32]	; (80015a0 <VectorD8+0x140>)
 800157e:	f7ff ff57 	bl	8001430 <chEvtBroadcastFlagsI>
 8001582:	e7c7      	b.n	8001514 <VectorD8+0xb4>
 8001584:	2108      	movs	r1, #8
 8001586:	4806      	ldr	r0, [pc, #24]	; (80015a0 <VectorD8+0x140>)
 8001588:	f7ff ff52 	bl	8001430 <chEvtBroadcastFlagsI>
 800158c:	f64f 733f 	movw	r3, #65343	; 0xff3f
 8001590:	ea09 0303 	and.w	r3, r9, r3
 8001594:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001598:	60eb      	str	r3, [r5, #12]
 800159a:	e7e7      	b.n	800156c <VectorD8+0x10c>
 800159c:	200008b8 	.word	0x200008b8
 80015a0:	200008bc 	.word	0x200008bc
 80015a4:	200008e8 	.word	0x200008e8
	...

080015b0 <chMtxUnlockS>:
 80015b0:	4b12      	ldr	r3, [pc, #72]	; (80015fc <chMtxUnlockS+0x4c>)
 80015b2:	b430      	push	{r4, r5}
 80015b4:	6804      	ldr	r4, [r0, #0]
 80015b6:	699d      	ldr	r5, [r3, #24]
 80015b8:	68c3      	ldr	r3, [r0, #12]
 80015ba:	63ab      	str	r3, [r5, #56]	; 0x38
 80015bc:	4284      	cmp	r4, r0
 80015be:	d018      	beq.n	80015f2 <chMtxUnlockS+0x42>
 80015c0:	4601      	mov	r1, r0
 80015c2:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 80015c4:	b14b      	cbz	r3, 80015da <chMtxUnlockS+0x2a>
 80015c6:	681a      	ldr	r2, [r3, #0]
 80015c8:	4293      	cmp	r3, r2
 80015ca:	d003      	beq.n	80015d4 <chMtxUnlockS+0x24>
 80015cc:	6892      	ldr	r2, [r2, #8]
 80015ce:	4290      	cmp	r0, r2
 80015d0:	bf38      	it	cc
 80015d2:	4610      	movcc	r0, r2
 80015d4:	68db      	ldr	r3, [r3, #12]
 80015d6:	2b00      	cmp	r3, #0
 80015d8:	d1f5      	bne.n	80015c6 <chMtxUnlockS+0x16>
 80015da:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80015dc:	6823      	ldr	r3, [r4, #0]
 80015de:	60a8      	str	r0, [r5, #8]
 80015e0:	600b      	str	r3, [r1, #0]
 80015e2:	4620      	mov	r0, r4
 80015e4:	6059      	str	r1, [r3, #4]
 80015e6:	e9c1 4202 	strd	r4, r2, [r1, #8]
 80015ea:	63a1      	str	r1, [r4, #56]	; 0x38
 80015ec:	bc30      	pop	{r4, r5}
 80015ee:	f7ff bd1f 	b.w	8001030 <chSchReadyI>
 80015f2:	2300      	movs	r3, #0
 80015f4:	60a3      	str	r3, [r4, #8]
 80015f6:	bc30      	pop	{r4, r5}
 80015f8:	4770      	bx	lr
 80015fa:	bf00      	nop
 80015fc:	20000ae0 	.word	0x20000ae0

08001600 <chSemSignalI>:
 8001600:	6883      	ldr	r3, [r0, #8]
 8001602:	3301      	adds	r3, #1
 8001604:	2b00      	cmp	r3, #0
 8001606:	6083      	str	r3, [r0, #8]
 8001608:	dd00      	ble.n	800160c <chSemSignalI+0xc>
 800160a:	4770      	bx	lr
 800160c:	6803      	ldr	r3, [r0, #0]
 800160e:	681a      	ldr	r2, [r3, #0]
 8001610:	6002      	str	r2, [r0, #0]
 8001612:	2100      	movs	r1, #0
 8001614:	6050      	str	r0, [r2, #4]
 8001616:	4618      	mov	r0, r3
 8001618:	6219      	str	r1, [r3, #32]
 800161a:	f7ff bd09 	b.w	8001030 <chSchReadyI>
 800161e:	bf00      	nop

08001620 <chMBPostI.constprop.27>:
 8001620:	b538      	push	{r3, r4, r5, lr}
 8001622:	4b0c      	ldr	r3, [pc, #48]	; (8001654 <chMBPostI.constprop.27+0x34>)
 8001624:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001626:	2a00      	cmp	r2, #0
 8001628:	dd10      	ble.n	800164c <chMBPostI.constprop.27+0x2c>
 800162a:	e9d3 5401 	ldrd	r5, r4, [r3, #4]
 800162e:	1d21      	adds	r1, r4, #4
 8001630:	3a01      	subs	r2, #1
 8001632:	42a9      	cmp	r1, r5
 8001634:	625a      	str	r2, [r3, #36]	; 0x24
 8001636:	6099      	str	r1, [r3, #8]
 8001638:	bf28      	it	cs
 800163a:	681a      	ldrcs	r2, [r3, #0]
 800163c:	6020      	str	r0, [r4, #0]
 800163e:	4806      	ldr	r0, [pc, #24]	; (8001658 <chMBPostI.constprop.27+0x38>)
 8001640:	bf28      	it	cs
 8001642:	609a      	strcs	r2, [r3, #8]
 8001644:	f7ff ffdc 	bl	8001600 <chSemSignalI>
 8001648:	2000      	movs	r0, #0
 800164a:	bd38      	pop	{r3, r4, r5, pc}
 800164c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001650:	bd38      	pop	{r3, r4, r5, pc}
 8001652:	bf00      	nop
 8001654:	20000854 	.word	0x20000854
 8001658:	20000864 	.word	0x20000864
 800165c:	00000000 	.word	0x00000000

08001660 <chMBPostAheadI.constprop.25>:
 8001660:	4a0c      	ldr	r2, [pc, #48]	; (8001694 <chMBPostAheadI.constprop.25+0x34>)
 8001662:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8001664:	2900      	cmp	r1, #0
 8001666:	dd11      	ble.n	800168c <chMBPostAheadI.constprop.25+0x2c>
 8001668:	68d3      	ldr	r3, [r2, #12]
 800166a:	b510      	push	{r4, lr}
 800166c:	6814      	ldr	r4, [r2, #0]
 800166e:	3b04      	subs	r3, #4
 8001670:	3901      	subs	r1, #1
 8001672:	42a3      	cmp	r3, r4
 8001674:	6251      	str	r1, [r2, #36]	; 0x24
 8001676:	60d3      	str	r3, [r2, #12]
 8001678:	d202      	bcs.n	8001680 <chMBPostAheadI.constprop.25+0x20>
 800167a:	6853      	ldr	r3, [r2, #4]
 800167c:	3b04      	subs	r3, #4
 800167e:	60d3      	str	r3, [r2, #12]
 8001680:	6018      	str	r0, [r3, #0]
 8001682:	4805      	ldr	r0, [pc, #20]	; (8001698 <chMBPostAheadI.constprop.25+0x38>)
 8001684:	f7ff ffbc 	bl	8001600 <chSemSignalI>
 8001688:	2000      	movs	r0, #0
 800168a:	bd10      	pop	{r4, pc}
 800168c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001690:	4770      	bx	lr
 8001692:	bf00      	nop
 8001694:	20000854 	.word	0x20000854
 8001698:	20000864 	.word	0x20000864
 800169c:	00000000 	.word	0x00000000

080016a0 <chMBFetchI.constprop.23>:
 80016a0:	4b0c      	ldr	r3, [pc, #48]	; (80016d4 <chMBFetchI.constprop.23+0x34>)
 80016a2:	6999      	ldr	r1, [r3, #24]
 80016a4:	2900      	cmp	r1, #0
 80016a6:	dd12      	ble.n	80016ce <chMBFetchI.constprop.23+0x2e>
 80016a8:	b510      	push	{r4, lr}
 80016aa:	68da      	ldr	r2, [r3, #12]
 80016ac:	3901      	subs	r1, #1
 80016ae:	6199      	str	r1, [r3, #24]
 80016b0:	6859      	ldr	r1, [r3, #4]
 80016b2:	6814      	ldr	r4, [r2, #0]
 80016b4:	3204      	adds	r2, #4
 80016b6:	428a      	cmp	r2, r1
 80016b8:	60da      	str	r2, [r3, #12]
 80016ba:	6004      	str	r4, [r0, #0]
 80016bc:	bf28      	it	cs
 80016be:	681a      	ldrcs	r2, [r3, #0]
 80016c0:	4805      	ldr	r0, [pc, #20]	; (80016d8 <chMBFetchI.constprop.23+0x38>)
 80016c2:	bf28      	it	cs
 80016c4:	60da      	strcs	r2, [r3, #12]
 80016c6:	f7ff ff9b 	bl	8001600 <chSemSignalI>
 80016ca:	2000      	movs	r0, #0
 80016cc:	bd10      	pop	{r4, pc}
 80016ce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80016d2:	4770      	bx	lr
 80016d4:	20000854 	.word	0x20000854
 80016d8:	20000870 	.word	0x20000870
 80016dc:	00000000 	.word	0x00000000

080016e0 <chSemResetI>:
 80016e0:	b570      	push	{r4, r5, r6, lr}
 80016e2:	6885      	ldr	r5, [r0, #8]
 80016e4:	6081      	str	r1, [r0, #8]
 80016e6:	3501      	adds	r5, #1
 80016e8:	2d00      	cmp	r5, #0
 80016ea:	dc0c      	bgt.n	8001706 <chSemResetI+0x26>
 80016ec:	4604      	mov	r4, r0
 80016ee:	f06f 0601 	mvn.w	r6, #1
 80016f2:	6860      	ldr	r0, [r4, #4]
 80016f4:	6843      	ldr	r3, [r0, #4]
 80016f6:	6063      	str	r3, [r4, #4]
 80016f8:	601c      	str	r4, [r3, #0]
 80016fa:	f7ff fc99 	bl	8001030 <chSchReadyI>
 80016fe:	3501      	adds	r5, #1
 8001700:	2d01      	cmp	r5, #1
 8001702:	6206      	str	r6, [r0, #32]
 8001704:	d1f5      	bne.n	80016f2 <chSemResetI+0x12>
 8001706:	bd70      	pop	{r4, r5, r6, pc}
	...

08001710 <chVTDoResetI>:
 8001710:	4b1a      	ldr	r3, [pc, #104]	; (800177c <chVTDoResetI+0x6c>)
 8001712:	69da      	ldr	r2, [r3, #28]
 8001714:	4282      	cmp	r2, r0
 8001716:	b410      	push	{r4}
 8001718:	d00f      	beq.n	800173a <chVTDoResetI+0x2a>
 800171a:	e9d0 2100 	ldrd	r2, r1, [r0]
 800171e:	600a      	str	r2, [r1, #0]
 8001720:	6802      	ldr	r2, [r0, #0]
 8001722:	331c      	adds	r3, #28
 8001724:	2400      	movs	r4, #0
 8001726:	429a      	cmp	r2, r3
 8001728:	6051      	str	r1, [r2, #4]
 800172a:	60c4      	str	r4, [r0, #12]
 800172c:	d003      	beq.n	8001736 <chVTDoResetI+0x26>
 800172e:	6881      	ldr	r1, [r0, #8]
 8001730:	6893      	ldr	r3, [r2, #8]
 8001732:	440b      	add	r3, r1
 8001734:	6093      	str	r3, [r2, #8]
 8001736:	bc10      	pop	{r4}
 8001738:	4770      	bx	lr
 800173a:	4618      	mov	r0, r3
 800173c:	6811      	ldr	r1, [r2, #0]
 800173e:	f840 1f1c 	str.w	r1, [r0, #28]!
 8001742:	2400      	movs	r4, #0
 8001744:	4281      	cmp	r1, r0
 8001746:	6048      	str	r0, [r1, #4]
 8001748:	60d4      	str	r4, [r2, #12]
 800174a:	d012      	beq.n	8001772 <chVTDoResetI+0x62>
 800174c:	6894      	ldr	r4, [r2, #8]
 800174e:	6888      	ldr	r0, [r1, #8]
 8001750:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001752:	1903      	adds	r3, r0, r4
 8001754:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8001758:	608b      	str	r3, [r1, #8]
 800175a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800175c:	1a8a      	subs	r2, r1, r2
 800175e:	4293      	cmp	r3, r2
 8001760:	d9e9      	bls.n	8001736 <chVTDoResetI+0x26>
 8001762:	1a9b      	subs	r3, r3, r2
 8001764:	2b02      	cmp	r3, #2
 8001766:	bf2c      	ite	cs
 8001768:	18cb      	addcs	r3, r1, r3
 800176a:	1c8b      	addcc	r3, r1, #2
 800176c:	6363      	str	r3, [r4, #52]	; 0x34
 800176e:	bc10      	pop	{r4}
 8001770:	4770      	bx	lr
 8001772:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001776:	60dc      	str	r4, [r3, #12]
 8001778:	e7dd      	b.n	8001736 <chVTDoResetI+0x26>
 800177a:	bf00      	nop
 800177c:	20000ae0 	.word	0x20000ae0

08001780 <chVTDoSetI>:
 8001780:	b4f0      	push	{r4, r5, r6, r7}
 8001782:	4d1c      	ldr	r5, [pc, #112]	; (80017f4 <chVTDoSetI+0x74>)
 8001784:	462e      	mov	r6, r5
 8001786:	2902      	cmp	r1, #2
 8001788:	f856 4f1c 	ldr.w	r4, [r6, #28]!
 800178c:	6103      	str	r3, [r0, #16]
 800178e:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 8001792:	bf38      	it	cc
 8001794:	2102      	movcc	r1, #2
 8001796:	42b4      	cmp	r4, r6
 8001798:	60c2      	str	r2, [r0, #12]
 800179a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800179c:	d01b      	beq.n	80017d6 <chVTDoSetI+0x56>
 800179e:	6aae      	ldr	r6, [r5, #40]	; 0x28
 80017a0:	68a2      	ldr	r2, [r4, #8]
 80017a2:	4419      	add	r1, r3
 80017a4:	1b8b      	subs	r3, r1, r6
 80017a6:	429a      	cmp	r2, r3
 80017a8:	d903      	bls.n	80017b2 <chVTDoSetI+0x32>
 80017aa:	e012      	b.n	80017d2 <chVTDoSetI+0x52>
 80017ac:	6824      	ldr	r4, [r4, #0]
 80017ae:	1a9b      	subs	r3, r3, r2
 80017b0:	68a2      	ldr	r2, [r4, #8]
 80017b2:	429a      	cmp	r2, r3
 80017b4:	d3fa      	bcc.n	80017ac <chVTDoSetI+0x2c>
 80017b6:	6862      	ldr	r2, [r4, #4]
 80017b8:	e9c0 4200 	strd	r4, r2, [r0]
 80017bc:	6010      	str	r0, [r2, #0]
 80017be:	6060      	str	r0, [r4, #4]
 80017c0:	6083      	str	r3, [r0, #8]
 80017c2:	68a2      	ldr	r2, [r4, #8]
 80017c4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80017c8:	1ad3      	subs	r3, r2, r3
 80017ca:	60a3      	str	r3, [r4, #8]
 80017cc:	6269      	str	r1, [r5, #36]	; 0x24
 80017ce:	bcf0      	pop	{r4, r5, r6, r7}
 80017d0:	4770      	bx	lr
 80017d2:	6379      	str	r1, [r7, #52]	; 0x34
 80017d4:	e7ed      	b.n	80017b2 <chVTDoSetI+0x32>
 80017d6:	62ab      	str	r3, [r5, #40]	; 0x28
 80017d8:	18ce      	adds	r6, r1, r3
 80017da:	2200      	movs	r2, #0
 80017dc:	2302      	movs	r3, #2
 80017de:	e9c5 0007 	strd	r0, r0, [r5, #28]
 80017e2:	e9c0 4400 	strd	r4, r4, [r0]
 80017e6:	6081      	str	r1, [r0, #8]
 80017e8:	637e      	str	r6, [r7, #52]	; 0x34
 80017ea:	613a      	str	r2, [r7, #16]
 80017ec:	60fb      	str	r3, [r7, #12]
 80017ee:	bcf0      	pop	{r4, r5, r6, r7}
 80017f0:	4770      	bx	lr
 80017f2:	bf00      	nop
 80017f4:	20000ae0 	.word	0x20000ae0
	...

08001800 <test_start_timer.constprop.1>:
 8001800:	b508      	push	{r3, lr}
 8001802:	4b0b      	ldr	r3, [pc, #44]	; (8001830 <test_start_timer.constprop.1+0x30>)
 8001804:	2200      	movs	r2, #0
 8001806:	701a      	strb	r2, [r3, #0]
 8001808:	2320      	movs	r3, #32
 800180a:	f383 8811 	msr	BASEPRI, r3
 800180e:	4809      	ldr	r0, [pc, #36]	; (8001834 <test_start_timer.constprop.1+0x34>)
 8001810:	68c3      	ldr	r3, [r0, #12]
 8001812:	b10b      	cbz	r3, 8001818 <test_start_timer.constprop.1+0x18>
 8001814:	f7ff ff7c 	bl	8001710 <chVTDoResetI>
 8001818:	2300      	movs	r3, #0
 800181a:	4a07      	ldr	r2, [pc, #28]	; (8001838 <test_start_timer.constprop.1+0x38>)
 800181c:	4805      	ldr	r0, [pc, #20]	; (8001834 <test_start_timer.constprop.1+0x34>)
 800181e:	f242 7110 	movw	r1, #10000	; 0x2710
 8001822:	f7ff ffad 	bl	8001780 <chVTDoSetI>
 8001826:	2300      	movs	r3, #0
 8001828:	f383 8811 	msr	BASEPRI, r3
 800182c:	bd08      	pop	{r3, pc}
 800182e:	bf00      	nop
 8001830:	20001398 	.word	0x20001398
 8001834:	200013c4 	.word	0x200013c4
 8001838:	080003a1 	.word	0x080003a1
 800183c:	00000000 	.word	0x00000000

08001840 <chSysGetStatusAndLockX.part.2>:
 8001840:	f3ef 8305 	mrs	r3, IPSR
 8001844:	2320      	movs	r3, #32
 8001846:	f383 8811 	msr	BASEPRI, r3
 800184a:	4770      	bx	lr
 800184c:	0000      	movs	r0, r0
	...

08001850 <chSysIntegrityCheckI>:
 8001850:	07c2      	lsls	r2, r0, #31
 8001852:	b410      	push	{r4}
 8001854:	d512      	bpl.n	800187c <chSysIntegrityCheckI+0x2c>
 8001856:	4b29      	ldr	r3, [pc, #164]	; (80018fc <chSysIntegrityCheckI+0xac>)
 8001858:	e9d3 1400 	ldrd	r1, r4, [r3]
 800185c:	4299      	cmp	r1, r3
 800185e:	d041      	beq.n	80018e4 <chSysIntegrityCheckI+0x94>
 8001860:	2200      	movs	r2, #0
 8001862:	6809      	ldr	r1, [r1, #0]
 8001864:	4299      	cmp	r1, r3
 8001866:	f102 0201 	add.w	r2, r2, #1
 800186a:	d1fa      	bne.n	8001862 <chSysIntegrityCheckI+0x12>
 800186c:	428c      	cmp	r4, r1
 800186e:	d036      	beq.n	80018de <chSysIntegrityCheckI+0x8e>
 8001870:	6864      	ldr	r4, [r4, #4]
 8001872:	429c      	cmp	r4, r3
 8001874:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8001878:	d1fa      	bne.n	8001870 <chSysIntegrityCheckI+0x20>
 800187a:	bb82      	cbnz	r2, 80018de <chSysIntegrityCheckI+0x8e>
 800187c:	0783      	lsls	r3, r0, #30
 800187e:	d513      	bpl.n	80018a8 <chSysIntegrityCheckI+0x58>
 8001880:	4c1e      	ldr	r4, [pc, #120]	; (80018fc <chSysIntegrityCheckI+0xac>)
 8001882:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8001886:	341c      	adds	r4, #28
 8001888:	42a2      	cmp	r2, r4
 800188a:	d02f      	beq.n	80018ec <chSysIntegrityCheckI+0x9c>
 800188c:	2300      	movs	r3, #0
 800188e:	6812      	ldr	r2, [r2, #0]
 8001890:	42a2      	cmp	r2, r4
 8001892:	f103 0301 	add.w	r3, r3, #1
 8001896:	d1fa      	bne.n	800188e <chSysIntegrityCheckI+0x3e>
 8001898:	4291      	cmp	r1, r2
 800189a:	d020      	beq.n	80018de <chSysIntegrityCheckI+0x8e>
 800189c:	6849      	ldr	r1, [r1, #4]
 800189e:	42a1      	cmp	r1, r4
 80018a0:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 80018a4:	d1fa      	bne.n	800189c <chSysIntegrityCheckI+0x4c>
 80018a6:	b9d3      	cbnz	r3, 80018de <chSysIntegrityCheckI+0x8e>
 80018a8:	f010 0004 	ands.w	r0, r0, #4
 80018ac:	d015      	beq.n	80018da <chSysIntegrityCheckI+0x8a>
 80018ae:	4b13      	ldr	r3, [pc, #76]	; (80018fc <chSysIntegrityCheckI+0xac>)
 80018b0:	e9d3 2104 	ldrd	r2, r1, [r3, #16]
 80018b4:	429a      	cmp	r2, r3
 80018b6:	f04f 0000 	mov.w	r0, #0
 80018ba:	d01b      	beq.n	80018f4 <chSysIntegrityCheckI+0xa4>
 80018bc:	6912      	ldr	r2, [r2, #16]
 80018be:	429a      	cmp	r2, r3
 80018c0:	f100 0001 	add.w	r0, r0, #1
 80018c4:	d1fa      	bne.n	80018bc <chSysIntegrityCheckI+0x6c>
 80018c6:	4291      	cmp	r1, r2
 80018c8:	d009      	beq.n	80018de <chSysIntegrityCheckI+0x8e>
 80018ca:	6949      	ldr	r1, [r1, #20]
 80018cc:	4299      	cmp	r1, r3
 80018ce:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 80018d2:	d1fa      	bne.n	80018ca <chSysIntegrityCheckI+0x7a>
 80018d4:	3000      	adds	r0, #0
 80018d6:	bf18      	it	ne
 80018d8:	2001      	movne	r0, #1
 80018da:	bc10      	pop	{r4}
 80018dc:	4770      	bx	lr
 80018de:	2001      	movs	r0, #1
 80018e0:	bc10      	pop	{r4}
 80018e2:	4770      	bx	lr
 80018e4:	429c      	cmp	r4, r3
 80018e6:	d0c9      	beq.n	800187c <chSysIntegrityCheckI+0x2c>
 80018e8:	2200      	movs	r2, #0
 80018ea:	e7c1      	b.n	8001870 <chSysIntegrityCheckI+0x20>
 80018ec:	42a1      	cmp	r1, r4
 80018ee:	d0db      	beq.n	80018a8 <chSysIntegrityCheckI+0x58>
 80018f0:	2300      	movs	r3, #0
 80018f2:	e7d3      	b.n	800189c <chSysIntegrityCheckI+0x4c>
 80018f4:	4291      	cmp	r1, r2
 80018f6:	d1e8      	bne.n	80018ca <chSysIntegrityCheckI+0x7a>
 80018f8:	e7ef      	b.n	80018da <chSysIntegrityCheckI+0x8a>
 80018fa:	bf00      	nop
 80018fc:	20000ae0 	.word	0x20000ae0

08001900 <sys3_execute>:
 8001900:	b538      	push	{r3, r4, r5, lr}
 8001902:	2420      	movs	r4, #32
 8001904:	f384 8811 	msr	BASEPRI, r4
 8001908:	2001      	movs	r0, #1
 800190a:	f7ff ffa1 	bl	8001850 <chSysIntegrityCheckI>
 800190e:	2300      	movs	r3, #0
 8001910:	f383 8811 	msr	BASEPRI, r3
 8001914:	f080 0101 	eor.w	r1, r0, #1
 8001918:	b2c9      	uxtb	r1, r1
 800191a:	2001      	movs	r0, #1
 800191c:	f7fe ff98 	bl	8000850 <_test_assert>
 8001920:	b100      	cbz	r0, 8001924 <sys3_execute+0x24>
 8001922:	bd38      	pop	{r3, r4, r5, pc}
 8001924:	4605      	mov	r5, r0
 8001926:	f384 8811 	msr	BASEPRI, r4
 800192a:	2002      	movs	r0, #2
 800192c:	f7ff ff90 	bl	8001850 <chSysIntegrityCheckI>
 8001930:	f385 8811 	msr	BASEPRI, r5
 8001934:	f080 0101 	eor.w	r1, r0, #1
 8001938:	b2c9      	uxtb	r1, r1
 800193a:	2002      	movs	r0, #2
 800193c:	f7fe ff88 	bl	8000850 <_test_assert>
 8001940:	4605      	mov	r5, r0
 8001942:	2800      	cmp	r0, #0
 8001944:	d1ed      	bne.n	8001922 <sys3_execute+0x22>
 8001946:	f384 8811 	msr	BASEPRI, r4
 800194a:	2004      	movs	r0, #4
 800194c:	f7ff ff80 	bl	8001850 <chSysIntegrityCheckI>
 8001950:	f385 8811 	msr	BASEPRI, r5
 8001954:	f080 0101 	eor.w	r1, r0, #1
 8001958:	b2c9      	uxtb	r1, r1
 800195a:	2003      	movs	r0, #3
 800195c:	f7fe ff78 	bl	8000850 <_test_assert>
 8001960:	4605      	mov	r5, r0
 8001962:	2800      	cmp	r0, #0
 8001964:	d1dd      	bne.n	8001922 <sys3_execute+0x22>
 8001966:	f384 8811 	msr	BASEPRI, r4
 800196a:	2008      	movs	r0, #8
 800196c:	f7ff ff70 	bl	8001850 <chSysIntegrityCheckI>
 8001970:	f385 8811 	msr	BASEPRI, r5
 8001974:	f080 0101 	eor.w	r1, r0, #1
 8001978:	b2c9      	uxtb	r1, r1
 800197a:	2004      	movs	r0, #4
 800197c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001980:	f7fe bf66 	b.w	8000850 <_test_assert>
	...

08001990 <BusFault_Handler>:
 8001990:	b672      	cpsid	i
 8001992:	4b02      	ldr	r3, [pc, #8]	; (800199c <BusFault_Handler+0xc>)
 8001994:	4a02      	ldr	r2, [pc, #8]	; (80019a0 <BusFault_Handler+0x10>)
 8001996:	62da      	str	r2, [r3, #44]	; 0x2c
 8001998:	e7fe      	b.n	8001998 <BusFault_Handler+0x8>
 800199a:	bf00      	nop
 800199c:	20000ae0 	.word	0x20000ae0
 80019a0:	08006650 	.word	0x08006650
	...

080019b0 <bmk13_execute>:
 80019b0:	b510      	push	{r4, lr}
 80019b2:	482f      	ldr	r0, [pc, #188]	; (8001a70 <bmk13_execute+0xc0>)
 80019b4:	4c2f      	ldr	r4, [pc, #188]	; (8001a74 <bmk13_execute+0xc4>)
 80019b6:	f7fe ffbb 	bl	8000930 <test_print>
 80019ba:	f44f 70a8 	mov.w	r0, #336	; 0x150
 80019be:	f7fe fe8f 	bl	80006e0 <test_printn.part.1>
 80019c2:	4620      	mov	r0, r4
 80019c4:	f7fe ff94 	bl	80008f0 <test_println>
 80019c8:	482b      	ldr	r0, [pc, #172]	; (8001a78 <bmk13_execute+0xc8>)
 80019ca:	f7fe ffb1 	bl	8000930 <test_print>
 80019ce:	2044      	movs	r0, #68	; 0x44
 80019d0:	f7fe fe86 	bl	80006e0 <test_printn.part.1>
 80019d4:	4620      	mov	r0, r4
 80019d6:	f7fe ff8b 	bl	80008f0 <test_println>
 80019da:	4828      	ldr	r0, [pc, #160]	; (8001a7c <bmk13_execute+0xcc>)
 80019dc:	f7fe ffa8 	bl	8000930 <test_print>
 80019e0:	2014      	movs	r0, #20
 80019e2:	f7fe fe7d 	bl	80006e0 <test_printn.part.1>
 80019e6:	4620      	mov	r0, r4
 80019e8:	f7fe ff82 	bl	80008f0 <test_println>
 80019ec:	4824      	ldr	r0, [pc, #144]	; (8001a80 <bmk13_execute+0xd0>)
 80019ee:	f7fe ff9f 	bl	8000930 <test_print>
 80019f2:	200c      	movs	r0, #12
 80019f4:	f7fe fe74 	bl	80006e0 <test_printn.part.1>
 80019f8:	4620      	mov	r0, r4
 80019fa:	f7fe ff79 	bl	80008f0 <test_println>
 80019fe:	4821      	ldr	r0, [pc, #132]	; (8001a84 <bmk13_execute+0xd4>)
 8001a00:	f7fe ff96 	bl	8000930 <test_print>
 8001a04:	2004      	movs	r0, #4
 8001a06:	f7fe fe6b 	bl	80006e0 <test_printn.part.1>
 8001a0a:	4620      	mov	r0, r4
 8001a0c:	f7fe ff70 	bl	80008f0 <test_println>
 8001a10:	481d      	ldr	r0, [pc, #116]	; (8001a88 <bmk13_execute+0xd8>)
 8001a12:	f7fe ff8d 	bl	8000930 <test_print>
 8001a16:	2014      	movs	r0, #20
 8001a18:	f7fe fe62 	bl	80006e0 <test_printn.part.1>
 8001a1c:	4620      	mov	r0, r4
 8001a1e:	f7fe ff67 	bl	80008f0 <test_println>
 8001a22:	481a      	ldr	r0, [pc, #104]	; (8001a8c <bmk13_execute+0xdc>)
 8001a24:	f7fe ff84 	bl	8000930 <test_print>
 8001a28:	2010      	movs	r0, #16
 8001a2a:	f7fe fe59 	bl	80006e0 <test_printn.part.1>
 8001a2e:	4620      	mov	r0, r4
 8001a30:	f7fe ff5e 	bl	80008f0 <test_println>
 8001a34:	4816      	ldr	r0, [pc, #88]	; (8001a90 <bmk13_execute+0xe0>)
 8001a36:	f7fe ff7b 	bl	8000930 <test_print>
 8001a3a:	2008      	movs	r0, #8
 8001a3c:	f7fe fe50 	bl	80006e0 <test_printn.part.1>
 8001a40:	4620      	mov	r0, r4
 8001a42:	f7fe ff55 	bl	80008f0 <test_println>
 8001a46:	4813      	ldr	r0, [pc, #76]	; (8001a94 <bmk13_execute+0xe4>)
 8001a48:	f7fe ff72 	bl	8000930 <test_print>
 8001a4c:	2024      	movs	r0, #36	; 0x24
 8001a4e:	f7fe fe47 	bl	80006e0 <test_printn.part.1>
 8001a52:	4620      	mov	r0, r4
 8001a54:	f7fe ff4c 	bl	80008f0 <test_println>
 8001a58:	480f      	ldr	r0, [pc, #60]	; (8001a98 <bmk13_execute+0xe8>)
 8001a5a:	f7fe ff69 	bl	8000930 <test_print>
 8001a5e:	2028      	movs	r0, #40	; 0x28
 8001a60:	f7fe fe3e 	bl	80006e0 <test_printn.part.1>
 8001a64:	4620      	mov	r0, r4
 8001a66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001a6a:	f7fe bf41 	b.w	80008f0 <test_println>
 8001a6e:	bf00      	nop
 8001a70:	080066c0 	.word	0x080066c0
 8001a74:	080066d0 	.word	0x080066d0
 8001a78:	080066d8 	.word	0x080066d8
 8001a7c:	080066e8 	.word	0x080066e8
 8001a80:	080066f8 	.word	0x080066f8
 8001a84:	08006708 	.word	0x08006708
 8001a88:	08006718 	.word	0x08006718
 8001a8c:	08006728 	.word	0x08006728
 8001a90:	08006738 	.word	0x08006738
 8001a94:	08006748 	.word	0x08006748
 8001a98:	08006758 	.word	0x08006758
 8001a9c:	00000000 	.word	0x00000000

08001aa0 <_usb_ep0setup>:
 8001aa0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8001aa4:	2300      	movs	r3, #0
 8001aa6:	b570      	push	{r4, r5, r6, lr}
 8001aa8:	f880 3034 	strb.w	r3, [r0, #52]	; 0x34
 8001aac:	68cb      	ldr	r3, [r1, #12]
 8001aae:	6842      	ldr	r2, [r0, #4]
 8001ab0:	6a1b      	ldr	r3, [r3, #32]
 8001ab2:	6819      	ldr	r1, [r3, #0]
 8001ab4:	685b      	ldr	r3, [r3, #4]
 8001ab6:	6483      	str	r3, [r0, #72]	; 0x48
 8001ab8:	6441      	str	r1, [r0, #68]	; 0x44
 8001aba:	6893      	ldr	r3, [r2, #8]
 8001abc:	4604      	mov	r4, r0
 8001abe:	2b00      	cmp	r3, #0
 8001ac0:	d037      	beq.n	8001b32 <_usb_ep0setup+0x92>
 8001ac2:	4798      	blx	r3
 8001ac4:	2800      	cmp	r0, #0
 8001ac6:	d034      	beq.n	8001b32 <_usb_ep0setup+0x92>
 8001ac8:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8001aca:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8001ace:	f894 004b 	ldrb.w	r0, [r4, #75]	; 0x4b
 8001ad2:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8001ad6:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8001ada:	428b      	cmp	r3, r1
 8001adc:	bf2c      	ite	cs
 8001ade:	460b      	movcs	r3, r1
 8001ae0:	63e3      	strcc	r3, [r4, #60]	; 0x3c
 8001ae2:	0610      	lsls	r0, r2, #24
 8001ae4:	68e1      	ldr	r1, [r4, #12]
 8001ae6:	f100 80a5 	bmi.w	8001c34 <_usb_ep0setup+0x194>
 8001aea:	2b00      	cmp	r3, #0
 8001aec:	f000 8089 	beq.w	8001c02 <_usb_ep0setup+0x162>
 8001af0:	2204      	movs	r2, #4
 8001af2:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
 8001af6:	698a      	ldr	r2, [r1, #24]
 8001af8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8001afa:	60d1      	str	r1, [r2, #12]
 8001afc:	2100      	movs	r1, #0
 8001afe:	6053      	str	r3, [r2, #4]
 8001b00:	7011      	strb	r1, [r2, #0]
 8001b02:	6091      	str	r1, [r2, #8]
 8001b04:	4620      	mov	r0, r4
 8001b06:	f7fe ff53 	bl	80009b0 <usb_lld_prepare_receive>
 8001b0a:	2320      	movs	r3, #32
 8001b0c:	f383 8811 	msr	BASEPRI, r3
 8001b10:	8963      	ldrh	r3, [r4, #10]
 8001b12:	07d9      	lsls	r1, r3, #31
 8001b14:	d409      	bmi.n	8001b2a <_usb_ep0setup+0x8a>
 8001b16:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8001b18:	f8d1 2b00 	ldr.w	r2, [r1, #2816]	; 0xb00
 8001b1c:	f043 0301 	orr.w	r3, r3, #1
 8001b20:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001b24:	8163      	strh	r3, [r4, #10]
 8001b26:	f8c1 2b00 	str.w	r2, [r1, #2816]	; 0xb00
 8001b2a:	2300      	movs	r3, #0
 8001b2c:	f383 8811 	msr	BASEPRI, r3
 8001b30:	bd70      	pop	{r4, r5, r6, pc}
 8001b32:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8001b36:	f012 0560 	ands.w	r5, r2, #96	; 0x60
 8001b3a:	4610      	mov	r0, r2
 8001b3c:	d016      	beq.n	8001b6c <_usb_ep0setup+0xcc>
 8001b3e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8001b40:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8001b44:	6861      	ldr	r1, [r4, #4]
 8001b46:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8001b4a:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8001b4e:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8001b52:	680d      	ldr	r5, [r1, #0]
 8001b54:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8001b58:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8001b5c:	b115      	cbz	r5, 8001b64 <_usb_ep0setup+0xc4>
 8001b5e:	2105      	movs	r1, #5
 8001b60:	4620      	mov	r0, r4
 8001b62:	47a8      	blx	r5
 8001b64:	2306      	movs	r3, #6
 8001b66:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8001b6a:	bd70      	pop	{r4, r5, r6, pc}
 8001b6c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001b70:	f002 037f 	and.w	r3, r2, #127	; 0x7f
 8001b74:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8001b78:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8001b7c:	f000 810a 	beq.w	8001d94 <_usb_ep0setup+0x2f4>
 8001b80:	d917      	bls.n	8001bb2 <_usb_ep0setup+0x112>
 8001b82:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8001b86:	f000 80ec 	beq.w	8001d62 <_usb_ep0setup+0x2c2>
 8001b8a:	f240 808b 	bls.w	8001ca4 <_usb_ep0setup+0x204>
 8001b8e:	f5b3 6f10 	cmp.w	r3, #2304	; 0x900
 8001b92:	d065      	beq.n	8001c60 <_usb_ep0setup+0x1c0>
 8001b94:	f640 4102 	movw	r1, #3074	; 0xc02
 8001b98:	428b      	cmp	r3, r1
 8001b9a:	f000 80c9 	beq.w	8001d30 <_usb_ep0setup+0x290>
 8001b9e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8001ba2:	d1cc      	bne.n	8001b3e <_usb_ep0setup+0x9e>
 8001ba4:	f104 034f 	add.w	r3, r4, #79	; 0x4f
 8001ba8:	2101      	movs	r1, #1
 8001baa:	6425      	str	r5, [r4, #64]	; 0x40
 8001bac:	e9c4 310e 	strd	r3, r1, [r4, #56]	; 0x38
 8001bb0:	e78d      	b.n	8001ace <_usb_ep0setup+0x2e>
 8001bb2:	2b02      	cmp	r3, #2
 8001bb4:	f000 80a3 	beq.w	8001cfe <_usb_ep0setup+0x25e>
 8001bb8:	f240 8099 	bls.w	8001cee <_usb_ep0setup+0x24e>
 8001bbc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001bc0:	d061      	beq.n	8001c86 <_usb_ep0setup+0x1e6>
 8001bc2:	f5b3 7f81 	cmp.w	r3, #258	; 0x102
 8001bc6:	d1ba      	bne.n	8001b3e <_usb_ep0setup+0x9e>
 8001bc8:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8001bcc:	2b00      	cmp	r3, #0
 8001bce:	d1b6      	bne.n	8001b3e <_usb_ep0setup+0x9e>
 8001bd0:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8001bd4:	f013 010f 	ands.w	r1, r3, #15
 8001bd8:	d00c      	beq.n	8001bf4 <_usb_ep0setup+0x154>
 8001bda:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001bdc:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001be0:	eb02 1341 	add.w	r3, r2, r1, lsl #5
 8001be4:	f040 80f1 	bne.w	8001dca <_usb_ep0setup+0x32a>
 8001be8:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8001bec:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8001bf0:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8001bf4:	2300      	movs	r3, #0
 8001bf6:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 8001bfa:	6423      	str	r3, [r4, #64]	; 0x40
 8001bfc:	0603      	lsls	r3, r0, #24
 8001bfe:	68e1      	ldr	r1, [r4, #12]
 8001c00:	d424      	bmi.n	8001c4c <_usb_ep0setup+0x1ac>
 8001c02:	2305      	movs	r3, #5
 8001c04:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8001c08:	694b      	ldr	r3, [r1, #20]
 8001c0a:	2100      	movs	r1, #0
 8001c0c:	e9c3 1101 	strd	r1, r1, [r3, #4]
 8001c10:	7019      	strb	r1, [r3, #0]
 8001c12:	60d9      	str	r1, [r3, #12]
 8001c14:	4620      	mov	r0, r4
 8001c16:	f7fe fea3 	bl	8000960 <usb_lld_prepare_transmit>
 8001c1a:	2320      	movs	r3, #32
 8001c1c:	f383 8811 	msr	BASEPRI, r3
 8001c20:	8923      	ldrh	r3, [r4, #8]
 8001c22:	07da      	lsls	r2, r3, #31
 8001c24:	d481      	bmi.n	8001b2a <_usb_ep0setup+0x8a>
 8001c26:	f043 0301 	orr.w	r3, r3, #1
 8001c2a:	8123      	strh	r3, [r4, #8]
 8001c2c:	4620      	mov	r0, r4
 8001c2e:	f7fe fb57 	bl	80002e0 <usb_lld_start_in.constprop.10>
 8001c32:	e77a      	b.n	8001b2a <_usb_ep0setup+0x8a>
 8001c34:	b153      	cbz	r3, 8001c4c <_usb_ep0setup+0x1ac>
 8001c36:	2201      	movs	r2, #1
 8001c38:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
 8001c3c:	694a      	ldr	r2, [r1, #20]
 8001c3e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8001c40:	60d1      	str	r1, [r2, #12]
 8001c42:	2100      	movs	r1, #0
 8001c44:	6053      	str	r3, [r2, #4]
 8001c46:	7011      	strb	r1, [r2, #0]
 8001c48:	6091      	str	r1, [r2, #8]
 8001c4a:	e7e3      	b.n	8001c14 <_usb_ep0setup+0x174>
 8001c4c:	2303      	movs	r3, #3
 8001c4e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8001c52:	698b      	ldr	r3, [r1, #24]
 8001c54:	2100      	movs	r1, #0
 8001c56:	7019      	strb	r1, [r3, #0]
 8001c58:	60d9      	str	r1, [r3, #12]
 8001c5a:	e9c3 1101 	strd	r1, r1, [r3, #4]
 8001c5e:	e751      	b.n	8001b04 <_usb_ep0setup+0x64>
 8001c60:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8001c64:	f884 304f 	strb.w	r3, [r4, #79]	; 0x4f
 8001c68:	2b00      	cmp	r3, #0
 8001c6a:	f040 80a2 	bne.w	8001db2 <_usb_ep0setup+0x312>
 8001c6e:	2303      	movs	r3, #3
 8001c70:	7023      	strb	r3, [r4, #0]
 8001c72:	6863      	ldr	r3, [r4, #4]
 8001c74:	681b      	ldr	r3, [r3, #0]
 8001c76:	2b00      	cmp	r3, #0
 8001c78:	d0bc      	beq.n	8001bf4 <_usb_ep0setup+0x154>
 8001c7a:	4620      	mov	r0, r4
 8001c7c:	2102      	movs	r1, #2
 8001c7e:	4798      	blx	r3
 8001c80:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8001c84:	e7b6      	b.n	8001bf4 <_usb_ep0setup+0x154>
 8001c86:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8001c8a:	2b01      	cmp	r3, #1
 8001c8c:	f47f af57 	bne.w	8001b3e <_usb_ep0setup+0x9e>
 8001c90:	f8b4 304c 	ldrh.w	r3, [r4, #76]	; 0x4c
 8001c94:	63a5      	str	r5, [r4, #56]	; 0x38
 8001c96:	f023 0302 	bic.w	r3, r3, #2
 8001c9a:	e9c4 550f 	strd	r5, r5, [r4, #60]	; 0x3c
 8001c9e:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 8001ca2:	e7ab      	b.n	8001bfc <_usb_ep0setup+0x15c>
 8001ca4:	f240 3202 	movw	r2, #770	; 0x302
 8001ca8:	4293      	cmp	r3, r2
 8001caa:	d043      	beq.n	8001d34 <_usb_ep0setup+0x294>
 8001cac:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8001cb0:	f47f af45 	bne.w	8001b3e <_usb_ep0setup+0x9e>
 8001cb4:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8001cb8:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8001cbc:	d19a      	bne.n	8001bf4 <_usb_ep0setup+0x154>
 8001cbe:	f894 1046 	ldrb.w	r1, [r4, #70]	; 0x46
 8001cc2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001cc4:	f884 104e 	strb.w	r1, [r4, #78]	; 0x4e
 8001cc8:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 8001ccc:	6860      	ldr	r0, [r4, #4]
 8001cce:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8001cd2:	6805      	ldr	r5, [r0, #0]
 8001cd4:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8001cd8:	f8c2 3800 	str.w	r3, [r2, #2048]	; 0x800
 8001cdc:	b115      	cbz	r5, 8001ce4 <_usb_ep0setup+0x244>
 8001cde:	2101      	movs	r1, #1
 8001ce0:	4620      	mov	r0, r4
 8001ce2:	47a8      	blx	r5
 8001ce4:	2303      	movs	r3, #3
 8001ce6:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8001cea:	7023      	strb	r3, [r4, #0]
 8001cec:	e782      	b.n	8001bf4 <_usb_ep0setup+0x154>
 8001cee:	b9e3      	cbnz	r3, 8001d2a <_usb_ep0setup+0x28a>
 8001cf0:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 8001cf4:	2102      	movs	r1, #2
 8001cf6:	6423      	str	r3, [r4, #64]	; 0x40
 8001cf8:	e9c4 010e 	strd	r0, r1, [r4, #56]	; 0x38
 8001cfc:	e6e7      	b.n	8001ace <_usb_ep0setup+0x2e>
 8001cfe:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 8001d02:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8001d04:	0605      	lsls	r5, r0, #24
 8001d06:	f000 010f 	and.w	r1, r0, #15
 8001d0a:	d455      	bmi.n	8001db8 <_usb_ep0setup+0x318>
 8001d0c:	3158      	adds	r1, #88	; 0x58
 8001d0e:	0149      	lsls	r1, r1, #5
 8001d10:	5859      	ldr	r1, [r3, r1]
 8001d12:	040e      	lsls	r6, r1, #16
 8001d14:	f57f af14 	bpl.w	8001b40 <_usb_ep0setup+0xa0>
 8001d18:	028b      	lsls	r3, r1, #10
 8001d1a:	d554      	bpl.n	8001dc6 <_usb_ep0setup+0x326>
 8001d1c:	4b32      	ldr	r3, [pc, #200]	; (8001de8 <_usb_ep0setup+0x348>)
 8001d1e:	63a3      	str	r3, [r4, #56]	; 0x38
 8001d20:	2102      	movs	r1, #2
 8001d22:	2300      	movs	r3, #0
 8001d24:	e9c4 130f 	strd	r1, r3, [r4, #60]	; 0x3c
 8001d28:	e6d1      	b.n	8001ace <_usb_ep0setup+0x2e>
 8001d2a:	2b01      	cmp	r3, #1
 8001d2c:	f47f af07 	bne.w	8001b3e <_usb_ep0setup+0x9e>
 8001d30:	4b2e      	ldr	r3, [pc, #184]	; (8001dec <_usb_ep0setup+0x34c>)
 8001d32:	e7f4      	b.n	8001d1e <_usb_ep0setup+0x27e>
 8001d34:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8001d38:	2b00      	cmp	r3, #0
 8001d3a:	f47f af00 	bne.w	8001b3e <_usb_ep0setup+0x9e>
 8001d3e:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8001d42:	f013 010f 	ands.w	r1, r3, #15
 8001d46:	f43f af55 	beq.w	8001bf4 <_usb_ep0setup+0x154>
 8001d4a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001d4c:	061d      	lsls	r5, r3, #24
 8001d4e:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 8001d52:	d441      	bmi.n	8001dd8 <_usb_ep0setup+0x338>
 8001d54:	f8d2 3b00 	ldr.w	r3, [r2, #2816]	; 0xb00
 8001d58:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001d5c:	f8c2 3b00 	str.w	r3, [r2, #2816]	; 0xb00
 8001d60:	e748      	b.n	8001bf4 <_usb_ep0setup+0x154>
 8001d62:	f894 0049 	ldrb.w	r0, [r4, #73]	; 0x49
 8001d66:	6861      	ldr	r1, [r4, #4]
 8001d68:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8001d6c:	684e      	ldr	r6, [r1, #4]
 8001d6e:	f894 2046 	ldrb.w	r2, [r4, #70]	; 0x46
 8001d72:	f894 1047 	ldrb.w	r1, [r4, #71]	; 0x47
 8001d76:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8001d7a:	4620      	mov	r0, r4
 8001d7c:	47b0      	blx	r6
 8001d7e:	2800      	cmp	r0, #0
 8001d80:	f43f aedd 	beq.w	8001b3e <_usb_ep0setup+0x9e>
 8001d84:	e9d0 1300 	ldrd	r1, r3, [r0]
 8001d88:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8001d8c:	6425      	str	r5, [r4, #64]	; 0x40
 8001d8e:	e9c4 310e 	strd	r3, r1, [r4, #56]	; 0x38
 8001d92:	e69c      	b.n	8001ace <_usb_ep0setup+0x2e>
 8001d94:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8001d98:	2b01      	cmp	r3, #1
 8001d9a:	f47f aed0 	bne.w	8001b3e <_usb_ep0setup+0x9e>
 8001d9e:	f8b4 304c 	ldrh.w	r3, [r4, #76]	; 0x4c
 8001da2:	63a5      	str	r5, [r4, #56]	; 0x38
 8001da4:	f043 0302 	orr.w	r3, r3, #2
 8001da8:	e9c4 550f 	strd	r5, r5, [r4, #60]	; 0x3c
 8001dac:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 8001db0:	e724      	b.n	8001bfc <_usb_ep0setup+0x15c>
 8001db2:	2304      	movs	r3, #4
 8001db4:	7023      	strb	r3, [r4, #0]
 8001db6:	e75c      	b.n	8001c72 <_usb_ep0setup+0x1d2>
 8001db8:	3148      	adds	r1, #72	; 0x48
 8001dba:	0149      	lsls	r1, r1, #5
 8001dbc:	5859      	ldr	r1, [r3, r1]
 8001dbe:	0408      	lsls	r0, r1, #16
 8001dc0:	f57f aebe 	bpl.w	8001b40 <_usb_ep0setup+0xa0>
 8001dc4:	e7a8      	b.n	8001d18 <_usb_ep0setup+0x278>
 8001dc6:	4b0a      	ldr	r3, [pc, #40]	; (8001df0 <_usb_ep0setup+0x350>)
 8001dc8:	e7a9      	b.n	8001d1e <_usb_ep0setup+0x27e>
 8001dca:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8001dce:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8001dd2:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8001dd6:	e70d      	b.n	8001bf4 <_usb_ep0setup+0x154>
 8001dd8:	f8d2 3900 	ldr.w	r3, [r2, #2304]	; 0x900
 8001ddc:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001de0:	f8c2 3900 	str.w	r3, [r2, #2304]	; 0x900
 8001de4:	e706      	b.n	8001bf4 <_usb_ep0setup+0x154>
 8001de6:	bf00      	nop
 8001de8:	08006880 	.word	0x08006880
 8001dec:	080073f0 	.word	0x080073f0
 8001df0:	08006670 	.word	0x08006670
	...

08001e00 <chThdYield>:
 8001e00:	b538      	push	{r3, r4, r5, lr}
 8001e02:	2320      	movs	r3, #32
 8001e04:	f383 8811 	msr	BASEPRI, r3
 8001e08:	4a11      	ldr	r2, [pc, #68]	; (8001e50 <chThdYield+0x50>)
 8001e0a:	6810      	ldr	r0, [r2, #0]
 8001e0c:	6994      	ldr	r4, [r2, #24]
 8001e0e:	6883      	ldr	r3, [r0, #8]
 8001e10:	68a1      	ldr	r1, [r4, #8]
 8001e12:	428b      	cmp	r3, r1
 8001e14:	d203      	bcs.n	8001e1e <chThdYield+0x1e>
 8001e16:	2300      	movs	r3, #0
 8001e18:	f383 8811 	msr	BASEPRI, r3
 8001e1c:	bd38      	pop	{r3, r4, r5, pc}
 8001e1e:	6803      	ldr	r3, [r0, #0]
 8001e20:	6013      	str	r3, [r2, #0]
 8001e22:	605a      	str	r2, [r3, #4]
 8001e24:	2501      	movs	r5, #1
 8001e26:	6190      	str	r0, [r2, #24]
 8001e28:	2200      	movs	r2, #0
 8001e2a:	7705      	strb	r5, [r0, #28]
 8001e2c:	7722      	strb	r2, [r4, #28]
 8001e2e:	e000      	b.n	8001e32 <chThdYield+0x32>
 8001e30:	681b      	ldr	r3, [r3, #0]
 8001e32:	689a      	ldr	r2, [r3, #8]
 8001e34:	4291      	cmp	r1, r2
 8001e36:	d9fb      	bls.n	8001e30 <chThdYield+0x30>
 8001e38:	685a      	ldr	r2, [r3, #4]
 8001e3a:	4621      	mov	r1, r4
 8001e3c:	e9c4 3200 	strd	r3, r2, [r4]
 8001e40:	6014      	str	r4, [r2, #0]
 8001e42:	605c      	str	r4, [r3, #4]
 8001e44:	f7fe fa1c 	bl	8000280 <_port_switch>
 8001e48:	2300      	movs	r3, #0
 8001e4a:	f383 8811 	msr	BASEPRI, r3
 8001e4e:	bd38      	pop	{r3, r4, r5, pc}
 8001e50:	20000ae0 	.word	0x20000ae0
	...

08001e60 <thread8>:
 8001e60:	b538      	push	{r3, r4, r5, lr}
 8001e62:	4d09      	ldr	r5, [pc, #36]	; (8001e88 <thread8+0x28>)
 8001e64:	4604      	mov	r4, r0
 8001e66:	f7ff ffcb 	bl	8001e00 <chThdYield>
 8001e6a:	f7ff ffc9 	bl	8001e00 <chThdYield>
 8001e6e:	f7ff ffc7 	bl	8001e00 <chThdYield>
 8001e72:	f7ff ffc5 	bl	8001e00 <chThdYield>
 8001e76:	6823      	ldr	r3, [r4, #0]
 8001e78:	69aa      	ldr	r2, [r5, #24]
 8001e7a:	3304      	adds	r3, #4
 8001e7c:	6023      	str	r3, [r4, #0]
 8001e7e:	7f53      	ldrb	r3, [r2, #29]
 8001e80:	075b      	lsls	r3, r3, #29
 8001e82:	d5f0      	bpl.n	8001e66 <thread8+0x6>
 8001e84:	bd38      	pop	{r3, r4, r5, pc}
 8001e86:	bf00      	nop
 8001e88:	20000ae0 	.word	0x20000ae0
 8001e8c:	00000000 	.word	0x00000000

08001e90 <chSchDoRescheduleAhead>:
 8001e90:	4a0d      	ldr	r2, [pc, #52]	; (8001ec8 <chSchDoRescheduleAhead+0x38>)
 8001e92:	6810      	ldr	r0, [r2, #0]
 8001e94:	b430      	push	{r4, r5}
 8001e96:	6803      	ldr	r3, [r0, #0]
 8001e98:	6994      	ldr	r4, [r2, #24]
 8001e9a:	6013      	str	r3, [r2, #0]
 8001e9c:	68a1      	ldr	r1, [r4, #8]
 8001e9e:	605a      	str	r2, [r3, #4]
 8001ea0:	2501      	movs	r5, #1
 8001ea2:	6190      	str	r0, [r2, #24]
 8001ea4:	2200      	movs	r2, #0
 8001ea6:	7705      	strb	r5, [r0, #28]
 8001ea8:	7722      	strb	r2, [r4, #28]
 8001eaa:	e000      	b.n	8001eae <chSchDoRescheduleAhead+0x1e>
 8001eac:	681b      	ldr	r3, [r3, #0]
 8001eae:	689a      	ldr	r2, [r3, #8]
 8001eb0:	4291      	cmp	r1, r2
 8001eb2:	d3fb      	bcc.n	8001eac <chSchDoRescheduleAhead+0x1c>
 8001eb4:	685a      	ldr	r2, [r3, #4]
 8001eb6:	4621      	mov	r1, r4
 8001eb8:	e9c4 3200 	strd	r3, r2, [r4]
 8001ebc:	6014      	str	r4, [r2, #0]
 8001ebe:	605c      	str	r4, [r3, #4]
 8001ec0:	bc30      	pop	{r4, r5}
 8001ec2:	f7fe b9dd 	b.w	8000280 <_port_switch>
 8001ec6:	bf00      	nop
 8001ec8:	20000ae0 	.word	0x20000ae0
 8001ecc:	00000000 	.word	0x00000000

08001ed0 <chSchRescheduleS>:
 8001ed0:	4b04      	ldr	r3, [pc, #16]	; (8001ee4 <chSchRescheduleS+0x14>)
 8001ed2:	681a      	ldr	r2, [r3, #0]
 8001ed4:	699b      	ldr	r3, [r3, #24]
 8001ed6:	6892      	ldr	r2, [r2, #8]
 8001ed8:	689b      	ldr	r3, [r3, #8]
 8001eda:	429a      	cmp	r2, r3
 8001edc:	d800      	bhi.n	8001ee0 <chSchRescheduleS+0x10>
 8001ede:	4770      	bx	lr
 8001ee0:	f7ff bfd6 	b.w	8001e90 <chSchDoRescheduleAhead>
 8001ee4:	20000ae0 	.word	0x20000ae0
	...

08001ef0 <thread4.lto_priv.83>:
 8001ef0:	b508      	push	{r3, lr}
 8001ef2:	2220      	movs	r2, #32
 8001ef4:	f382 8811 	msr	BASEPRI, r2
 8001ef8:	6883      	ldr	r3, [r0, #8]
 8001efa:	2b00      	cmp	r3, #0
 8001efc:	dd05      	ble.n	8001f0a <thread4.lto_priv.83+0x1a>
 8001efe:	f7ff ffe7 	bl	8001ed0 <chSchRescheduleS>
 8001f02:	2300      	movs	r3, #0
 8001f04:	f383 8811 	msr	BASEPRI, r3
 8001f08:	bd08      	pop	{r3, pc}
 8001f0a:	f7ff fb79 	bl	8001600 <chSemSignalI>
 8001f0e:	f7ff ffdf 	bl	8001ed0 <chSchRescheduleS>
 8001f12:	2300      	movs	r3, #0
 8001f14:	f383 8811 	msr	BASEPRI, r3
 8001f18:	bd08      	pop	{r3, pc}
 8001f1a:	bf00      	nop
 8001f1c:	0000      	movs	r0, r0
	...

08001f20 <chMtxUnlockAll>:
 8001f20:	4a13      	ldr	r2, [pc, #76]	; (8001f70 <chMtxUnlockAll+0x50>)
 8001f22:	b570      	push	{r4, r5, r6, lr}
 8001f24:	2320      	movs	r3, #32
 8001f26:	6994      	ldr	r4, [r2, #24]
 8001f28:	f383 8811 	msr	BASEPRI, r3
 8001f2c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001f2e:	b1b3      	cbz	r3, 8001f5e <chMtxUnlockAll+0x3e>
 8001f30:	2600      	movs	r6, #0
 8001f32:	681a      	ldr	r2, [r3, #0]
 8001f34:	68d9      	ldr	r1, [r3, #12]
 8001f36:	63a1      	str	r1, [r4, #56]	; 0x38
 8001f38:	4293      	cmp	r3, r2
 8001f3a:	4610      	mov	r0, r2
 8001f3c:	d013      	beq.n	8001f66 <chMtxUnlockAll+0x46>
 8001f3e:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8001f40:	6811      	ldr	r1, [r2, #0]
 8001f42:	6019      	str	r1, [r3, #0]
 8001f44:	604b      	str	r3, [r1, #4]
 8001f46:	e9c3 2502 	strd	r2, r5, [r3, #8]
 8001f4a:	6393      	str	r3, [r2, #56]	; 0x38
 8001f4c:	f7ff f870 	bl	8001030 <chSchReadyI>
 8001f50:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001f52:	2b00      	cmp	r3, #0
 8001f54:	d1ed      	bne.n	8001f32 <chMtxUnlockAll+0x12>
 8001f56:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8001f58:	60a3      	str	r3, [r4, #8]
 8001f5a:	f7ff ffb9 	bl	8001ed0 <chSchRescheduleS>
 8001f5e:	2300      	movs	r3, #0
 8001f60:	f383 8811 	msr	BASEPRI, r3
 8001f64:	bd70      	pop	{r4, r5, r6, pc}
 8001f66:	609e      	str	r6, [r3, #8]
 8001f68:	460b      	mov	r3, r1
 8001f6a:	2b00      	cmp	r3, #0
 8001f6c:	d1e1      	bne.n	8001f32 <chMtxUnlockAll+0x12>
 8001f6e:	e7f2      	b.n	8001f56 <chMtxUnlockAll+0x36>
 8001f70:	20000ae0 	.word	0x20000ae0
	...

08001f80 <chThdSetPriority>:
 8001f80:	b510      	push	{r4, lr}
 8001f82:	2320      	movs	r3, #32
 8001f84:	f383 8811 	msr	BASEPRI, r3
 8001f88:	4b08      	ldr	r3, [pc, #32]	; (8001fac <chThdSetPriority+0x2c>)
 8001f8a:	699b      	ldr	r3, [r3, #24]
 8001f8c:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8001f8e:	6899      	ldr	r1, [r3, #8]
 8001f90:	42a1      	cmp	r1, r4
 8001f92:	d001      	beq.n	8001f98 <chThdSetPriority+0x18>
 8001f94:	4281      	cmp	r1, r0
 8001f96:	d200      	bcs.n	8001f9a <chThdSetPriority+0x1a>
 8001f98:	6098      	str	r0, [r3, #8]
 8001f9a:	63d8      	str	r0, [r3, #60]	; 0x3c
 8001f9c:	f7ff ff98 	bl	8001ed0 <chSchRescheduleS>
 8001fa0:	2300      	movs	r3, #0
 8001fa2:	f383 8811 	msr	BASEPRI, r3
 8001fa6:	4620      	mov	r0, r4
 8001fa8:	bd10      	pop	{r4, pc}
 8001faa:	bf00      	nop
 8001fac:	20000ae0 	.word	0x20000ae0

08001fb0 <thd3_execute>:
 8001fb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001fb2:	4e49      	ldr	r6, [pc, #292]	; (80020d8 <thd3_execute+0x128>)
 8001fb4:	69b3      	ldr	r3, [r6, #24]
 8001fb6:	689c      	ldr	r4, [r3, #8]
 8001fb8:	1c65      	adds	r5, r4, #1
 8001fba:	4628      	mov	r0, r5
 8001fbc:	f7ff ffe0 	bl	8001f80 <chThdSetPriority>
 8001fc0:	1b01      	subs	r1, r0, r4
 8001fc2:	fab1 f181 	clz	r1, r1
 8001fc6:	4607      	mov	r7, r0
 8001fc8:	0949      	lsrs	r1, r1, #5
 8001fca:	2001      	movs	r0, #1
 8001fcc:	f7fe fc40 	bl	8000850 <_test_assert>
 8001fd0:	b100      	cbz	r0, 8001fd4 <thd3_execute+0x24>
 8001fd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001fd4:	69b3      	ldr	r3, [r6, #24]
 8001fd6:	6899      	ldr	r1, [r3, #8]
 8001fd8:	1b49      	subs	r1, r1, r5
 8001fda:	fab1 f181 	clz	r1, r1
 8001fde:	2002      	movs	r0, #2
 8001fe0:	0949      	lsrs	r1, r1, #5
 8001fe2:	f7fe fc35 	bl	8000850 <_test_assert>
 8001fe6:	2800      	cmp	r0, #0
 8001fe8:	d1f3      	bne.n	8001fd2 <thd3_execute+0x22>
 8001fea:	4638      	mov	r0, r7
 8001fec:	f7ff ffc8 	bl	8001f80 <chThdSetPriority>
 8001ff0:	1a29      	subs	r1, r5, r0
 8001ff2:	fab1 f181 	clz	r1, r1
 8001ff6:	0949      	lsrs	r1, r1, #5
 8001ff8:	2003      	movs	r0, #3
 8001ffa:	f7fe fc29 	bl	8000850 <_test_assert>
 8001ffe:	2800      	cmp	r0, #0
 8002000:	d1e7      	bne.n	8001fd2 <thd3_execute+0x22>
 8002002:	69b3      	ldr	r3, [r6, #24]
 8002004:	6899      	ldr	r1, [r3, #8]
 8002006:	1b09      	subs	r1, r1, r4
 8002008:	fab1 f181 	clz	r1, r1
 800200c:	2004      	movs	r0, #4
 800200e:	0949      	lsrs	r1, r1, #5
 8002010:	f7fe fc1e 	bl	8000850 <_test_assert>
 8002014:	2800      	cmp	r0, #0
 8002016:	d1dc      	bne.n	8001fd2 <thd3_execute+0x22>
 8002018:	2320      	movs	r3, #32
 800201a:	f383 8811 	msr	BASEPRI, r3
 800201e:	69b2      	ldr	r2, [r6, #24]
 8002020:	6893      	ldr	r3, [r2, #8]
 8002022:	3302      	adds	r3, #2
 8002024:	6093      	str	r3, [r2, #8]
 8002026:	f380 8811 	msr	BASEPRI, r0
 800202a:	69b3      	ldr	r3, [r6, #24]
 800202c:	6899      	ldr	r1, [r3, #8]
 800202e:	1ca7      	adds	r7, r4, #2
 8002030:	1bc9      	subs	r1, r1, r7
 8002032:	fab1 f181 	clz	r1, r1
 8002036:	0949      	lsrs	r1, r1, #5
 8002038:	2005      	movs	r0, #5
 800203a:	f7fe fc09 	bl	8000850 <_test_assert>
 800203e:	2800      	cmp	r0, #0
 8002040:	d1c7      	bne.n	8001fd2 <thd3_execute+0x22>
 8002042:	4628      	mov	r0, r5
 8002044:	f7ff ff9c 	bl	8001f80 <chThdSetPriority>
 8002048:	1b01      	subs	r1, r0, r4
 800204a:	fab1 f181 	clz	r1, r1
 800204e:	0949      	lsrs	r1, r1, #5
 8002050:	2006      	movs	r0, #6
 8002052:	f7fe fbfd 	bl	8000850 <_test_assert>
 8002056:	2800      	cmp	r0, #0
 8002058:	d1bb      	bne.n	8001fd2 <thd3_execute+0x22>
 800205a:	69b3      	ldr	r3, [r6, #24]
 800205c:	6899      	ldr	r1, [r3, #8]
 800205e:	1bc9      	subs	r1, r1, r7
 8002060:	fab1 f181 	clz	r1, r1
 8002064:	0949      	lsrs	r1, r1, #5
 8002066:	2007      	movs	r0, #7
 8002068:	f7fe fbf2 	bl	8000850 <_test_assert>
 800206c:	2800      	cmp	r0, #0
 800206e:	d1b0      	bne.n	8001fd2 <thd3_execute+0x22>
 8002070:	69b3      	ldr	r3, [r6, #24]
 8002072:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8002074:	1b4f      	subs	r7, r1, r5
 8002076:	4279      	negs	r1, r7
 8002078:	4179      	adcs	r1, r7
 800207a:	2008      	movs	r0, #8
 800207c:	f7fe fbe8 	bl	8000850 <_test_assert>
 8002080:	2800      	cmp	r0, #0
 8002082:	d1a6      	bne.n	8001fd2 <thd3_execute+0x22>
 8002084:	1ce7      	adds	r7, r4, #3
 8002086:	4638      	mov	r0, r7
 8002088:	f7ff ff7a 	bl	8001f80 <chThdSetPriority>
 800208c:	1a28      	subs	r0, r5, r0
 800208e:	4241      	negs	r1, r0
 8002090:	4141      	adcs	r1, r0
 8002092:	2009      	movs	r0, #9
 8002094:	f7fe fbdc 	bl	8000850 <_test_assert>
 8002098:	2800      	cmp	r0, #0
 800209a:	d19a      	bne.n	8001fd2 <thd3_execute+0x22>
 800209c:	69b3      	ldr	r3, [r6, #24]
 800209e:	6899      	ldr	r1, [r3, #8]
 80020a0:	1bca      	subs	r2, r1, r7
 80020a2:	4251      	negs	r1, r2
 80020a4:	4151      	adcs	r1, r2
 80020a6:	200a      	movs	r0, #10
 80020a8:	f7fe fbd2 	bl	8000850 <_test_assert>
 80020ac:	2800      	cmp	r0, #0
 80020ae:	d190      	bne.n	8001fd2 <thd3_execute+0x22>
 80020b0:	69b3      	ldr	r3, [r6, #24]
 80020b2:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80020b4:	1bcb      	subs	r3, r1, r7
 80020b6:	4259      	negs	r1, r3
 80020b8:	4159      	adcs	r1, r3
 80020ba:	200b      	movs	r0, #11
 80020bc:	f7fe fbc8 	bl	8000850 <_test_assert>
 80020c0:	2800      	cmp	r0, #0
 80020c2:	d186      	bne.n	8001fd2 <thd3_execute+0x22>
 80020c4:	2320      	movs	r3, #32
 80020c6:	f383 8811 	msr	BASEPRI, r3
 80020ca:	69b3      	ldr	r3, [r6, #24]
 80020cc:	609c      	str	r4, [r3, #8]
 80020ce:	63dc      	str	r4, [r3, #60]	; 0x3c
 80020d0:	f380 8811 	msr	BASEPRI, r0
 80020d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80020d6:	bf00      	nop
 80020d8:	20000ae0 	.word	0x20000ae0
 80020dc:	00000000 	.word	0x00000000

080020e0 <chSysRestoreStatusX.part.3>:
 80020e0:	b510      	push	{r4, lr}
 80020e2:	f3ef 8405 	mrs	r4, IPSR
 80020e6:	f3c4 0408 	ubfx	r4, r4, #0, #9
 80020ea:	b11c      	cbz	r4, 80020f4 <chSysRestoreStatusX.part.3+0x14>
 80020ec:	2300      	movs	r3, #0
 80020ee:	f383 8811 	msr	BASEPRI, r3
 80020f2:	bd10      	pop	{r4, pc}
 80020f4:	f7ff feec 	bl	8001ed0 <chSchRescheduleS>
 80020f8:	f384 8811 	msr	BASEPRI, r4
 80020fc:	bd10      	pop	{r4, pc}
 80020fe:	bf00      	nop

08002100 <vtcb>:
 8002100:	b508      	push	{r3, lr}
 8002102:	2320      	movs	r3, #32
 8002104:	f383 8811 	msr	BASEPRI, r3
 8002108:	2200      	movs	r2, #0
 800210a:	f382 8811 	msr	BASEPRI, r2
 800210e:	f383 8811 	msr	BASEPRI, r3
 8002112:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8002116:	b91b      	cbnz	r3, 8002120 <vtcb+0x20>
 8002118:	f7ff fb92 	bl	8001840 <chSysGetStatusAndLockX.part.2>
 800211c:	f7ff ffe0 	bl	80020e0 <chSysRestoreStatusX.part.3>
 8002120:	2300      	movs	r3, #0
 8002122:	f383 8811 	msr	BASEPRI, r3
 8002126:	bd08      	pop	{r3, pc}
	...

08002130 <chSchWakeupS>:
 8002130:	4b14      	ldr	r3, [pc, #80]	; (8002184 <chSchWakeupS+0x54>)
 8002132:	b470      	push	{r4, r5, r6}
 8002134:	699e      	ldr	r6, [r3, #24]
 8002136:	6885      	ldr	r5, [r0, #8]
 8002138:	4604      	mov	r4, r0
 800213a:	68b0      	ldr	r0, [r6, #8]
 800213c:	6221      	str	r1, [r4, #32]
 800213e:	4285      	cmp	r5, r0
 8002140:	f04f 0200 	mov.w	r2, #0
 8002144:	d80b      	bhi.n	800215e <chSchWakeupS+0x2e>
 8002146:	7722      	strb	r2, [r4, #28]
 8002148:	681b      	ldr	r3, [r3, #0]
 800214a:	689a      	ldr	r2, [r3, #8]
 800214c:	4295      	cmp	r5, r2
 800214e:	d9fb      	bls.n	8002148 <chSchWakeupS+0x18>
 8002150:	685a      	ldr	r2, [r3, #4]
 8002152:	e9c4 3200 	strd	r3, r2, [r4]
 8002156:	6014      	str	r4, [r2, #0]
 8002158:	605c      	str	r4, [r3, #4]
 800215a:	bc70      	pop	{r4, r5, r6}
 800215c:	4770      	bx	lr
 800215e:	7732      	strb	r2, [r6, #28]
 8002160:	461a      	mov	r2, r3
 8002162:	6812      	ldr	r2, [r2, #0]
 8002164:	6891      	ldr	r1, [r2, #8]
 8002166:	4288      	cmp	r0, r1
 8002168:	d9fb      	bls.n	8002162 <chSchWakeupS+0x32>
 800216a:	6851      	ldr	r1, [r2, #4]
 800216c:	6071      	str	r1, [r6, #4]
 800216e:	2001      	movs	r0, #1
 8002170:	6032      	str	r2, [r6, #0]
 8002172:	600e      	str	r6, [r1, #0]
 8002174:	6056      	str	r6, [r2, #4]
 8002176:	7720      	strb	r0, [r4, #28]
 8002178:	4631      	mov	r1, r6
 800217a:	4620      	mov	r0, r4
 800217c:	619c      	str	r4, [r3, #24]
 800217e:	bc70      	pop	{r4, r5, r6}
 8002180:	f7fe b87e 	b.w	8000280 <_port_switch>
 8002184:	20000ae0 	.word	0x20000ae0
	...

08002190 <chThdCreateFromMemoryPool.constprop.60>:
 8002190:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002194:	4e1d      	ldr	r6, [pc, #116]	; (800220c <chThdCreateFromMemoryPool.constprop.60+0x7c>)
 8002196:	4607      	mov	r7, r0
 8002198:	4630      	mov	r0, r6
 800219a:	4688      	mov	r8, r1
 800219c:	f7fe fdd0 	bl	8000d40 <chPoolAlloc>
 80021a0:	4604      	mov	r4, r0
 80021a2:	b380      	cbz	r0, 8002206 <chThdCreateFromMemoryPool.constprop.60+0x76>
 80021a4:	2320      	movs	r3, #32
 80021a6:	f383 8811 	msr	BASEPRI, r3
 80021aa:	6873      	ldr	r3, [r6, #4]
 80021ac:	4a18      	ldr	r2, [pc, #96]	; (8002210 <chThdCreateFromMemoryPool.constprop.60+0x80>)
 80021ae:	4919      	ldr	r1, [pc, #100]	; (8002214 <chThdCreateFromMemoryPool.constprop.60+0x84>)
 80021b0:	3b24      	subs	r3, #36	; 0x24
 80021b2:	18c5      	adds	r5, r0, r3
 80021b4:	60c5      	str	r5, [r0, #12]
 80021b6:	50c2      	str	r2, [r0, r3]
 80021b8:	4a17      	ldr	r2, [pc, #92]	; (8002218 <chThdCreateFromMemoryPool.constprop.60+0x88>)
 80021ba:	f8c5 8004 	str.w	r8, [r5, #4]
 80021be:	6229      	str	r1, [r5, #32]
 80021c0:	6102      	str	r2, [r0, #16]
 80021c2:	f8d2 e014 	ldr.w	lr, [r2, #20]
 80021c6:	f8c0 e014 	str.w	lr, [r0, #20]
 80021ca:	2301      	movs	r3, #1
 80021cc:	f100 0124 	add.w	r1, r0, #36	; 0x24
 80021d0:	f04f 0c02 	mov.w	ip, #2
 80021d4:	2500      	movs	r5, #0
 80021d6:	7783      	strb	r3, [r0, #30]
 80021d8:	f100 0328 	add.w	r3, r0, #40	; 0x28
 80021dc:	6087      	str	r7, [r0, #8]
 80021de:	63c7      	str	r7, [r0, #60]	; 0x3c
 80021e0:	f880 c01c 	strb.w	ip, [r0, #28]
 80021e4:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 80021e8:	6185      	str	r5, [r0, #24]
 80021ea:	f8ce 0010 	str.w	r0, [lr, #16]
 80021ee:	6241      	str	r1, [r0, #36]	; 0x24
 80021f0:	f880 c01d 	strb.w	ip, [r0, #29]
 80021f4:	6406      	str	r6, [r0, #64]	; 0x40
 80021f6:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80021fa:	4629      	mov	r1, r5
 80021fc:	6150      	str	r0, [r2, #20]
 80021fe:	f7ff ff97 	bl	8002130 <chSchWakeupS>
 8002202:	f385 8811 	msr	BASEPRI, r5
 8002206:	4620      	mov	r0, r4
 8002208:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800220c:	20000cd8 	.word	0x20000cd8
 8002210:	080008e1 	.word	0x080008e1
 8002214:	08000291 	.word	0x08000291
 8002218:	20000ae0 	.word	0x20000ae0
 800221c:	00000000 	.word	0x00000000

08002220 <chCondSignal.constprop.52>:
 8002220:	b508      	push	{r3, lr}
 8002222:	2320      	movs	r3, #32
 8002224:	f383 8811 	msr	BASEPRI, r3
 8002228:	4b06      	ldr	r3, [pc, #24]	; (8002244 <chCondSignal.constprop.52+0x24>)
 800222a:	6818      	ldr	r0, [r3, #0]
 800222c:	4298      	cmp	r0, r3
 800222e:	d005      	beq.n	800223c <chCondSignal.constprop.52+0x1c>
 8002230:	6802      	ldr	r2, [r0, #0]
 8002232:	601a      	str	r2, [r3, #0]
 8002234:	6053      	str	r3, [r2, #4]
 8002236:	2100      	movs	r1, #0
 8002238:	f7ff ff7a 	bl	8002130 <chSchWakeupS>
 800223c:	2300      	movs	r3, #0
 800223e:	f383 8811 	msr	BASEPRI, r3
 8002242:	bd08      	pop	{r3, pc}
 8002244:	20000800 	.word	0x20000800
	...

08002250 <chMtxUnlock>:
 8002250:	4b16      	ldr	r3, [pc, #88]	; (80022ac <chMtxUnlock+0x5c>)
 8002252:	b570      	push	{r4, r5, r6, lr}
 8002254:	699d      	ldr	r5, [r3, #24]
 8002256:	2320      	movs	r3, #32
 8002258:	f383 8811 	msr	BASEPRI, r3
 800225c:	6804      	ldr	r4, [r0, #0]
 800225e:	68c3      	ldr	r3, [r0, #12]
 8002260:	63ab      	str	r3, [r5, #56]	; 0x38
 8002262:	4284      	cmp	r4, r0
 8002264:	d01c      	beq.n	80022a0 <chMtxUnlock+0x50>
 8002266:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8002268:	b14b      	cbz	r3, 800227e <chMtxUnlock+0x2e>
 800226a:	681a      	ldr	r2, [r3, #0]
 800226c:	4293      	cmp	r3, r2
 800226e:	d003      	beq.n	8002278 <chMtxUnlock+0x28>
 8002270:	6892      	ldr	r2, [r2, #8]
 8002272:	4291      	cmp	r1, r2
 8002274:	bf38      	it	cc
 8002276:	4611      	movcc	r1, r2
 8002278:	68db      	ldr	r3, [r3, #12]
 800227a:	2b00      	cmp	r3, #0
 800227c:	d1f5      	bne.n	800226a <chMtxUnlock+0x1a>
 800227e:	4603      	mov	r3, r0
 8002280:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8002282:	6822      	ldr	r2, [r4, #0]
 8002284:	60a9      	str	r1, [r5, #8]
 8002286:	4620      	mov	r0, r4
 8002288:	601a      	str	r2, [r3, #0]
 800228a:	2100      	movs	r1, #0
 800228c:	6053      	str	r3, [r2, #4]
 800228e:	e9c3 4602 	strd	r4, r6, [r3, #8]
 8002292:	63a3      	str	r3, [r4, #56]	; 0x38
 8002294:	f7ff ff4c 	bl	8002130 <chSchWakeupS>
 8002298:	2300      	movs	r3, #0
 800229a:	f383 8811 	msr	BASEPRI, r3
 800229e:	bd70      	pop	{r4, r5, r6, pc}
 80022a0:	2300      	movs	r3, #0
 80022a2:	60a3      	str	r3, [r4, #8]
 80022a4:	2300      	movs	r3, #0
 80022a6:	f383 8811 	msr	BASEPRI, r3
 80022aa:	bd70      	pop	{r4, r5, r6, pc}
 80022ac:	20000ae0 	.word	0x20000ae0

080022b0 <chSemSignal>:
 80022b0:	b508      	push	{r3, lr}
 80022b2:	2320      	movs	r3, #32
 80022b4:	f383 8811 	msr	BASEPRI, r3
 80022b8:	6883      	ldr	r3, [r0, #8]
 80022ba:	3301      	adds	r3, #1
 80022bc:	2b00      	cmp	r3, #0
 80022be:	6083      	str	r3, [r0, #8]
 80022c0:	dd03      	ble.n	80022ca <chSemSignal+0x1a>
 80022c2:	2300      	movs	r3, #0
 80022c4:	f383 8811 	msr	BASEPRI, r3
 80022c8:	bd08      	pop	{r3, pc}
 80022ca:	4603      	mov	r3, r0
 80022cc:	6800      	ldr	r0, [r0, #0]
 80022ce:	6802      	ldr	r2, [r0, #0]
 80022d0:	601a      	str	r2, [r3, #0]
 80022d2:	2100      	movs	r1, #0
 80022d4:	6053      	str	r3, [r2, #4]
 80022d6:	f7ff ff2b 	bl	8002130 <chSchWakeupS>
 80022da:	2300      	movs	r3, #0
 80022dc:	f383 8811 	msr	BASEPRI, r3
 80022e0:	bd08      	pop	{r3, pc}
 80022e2:	bf00      	nop
	...

080022f0 <chThdCreateStatic>:
 80022f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80022f2:	9e06      	ldr	r6, [sp, #24]
 80022f4:	4604      	mov	r4, r0
 80022f6:	2520      	movs	r5, #32
 80022f8:	f385 8811 	msr	BASEPRI, r5
 80022fc:	3924      	subs	r1, #36	; 0x24
 80022fe:	1845      	adds	r5, r0, r1
 8002300:	60c5      	str	r5, [r0, #12]
 8002302:	4f12      	ldr	r7, [pc, #72]	; (800234c <chThdCreateStatic+0x5c>)
 8002304:	5043      	str	r3, [r0, r1]
 8002306:	4b12      	ldr	r3, [pc, #72]	; (8002350 <chThdCreateStatic+0x60>)
 8002308:	606e      	str	r6, [r5, #4]
 800230a:	622f      	str	r7, [r5, #32]
 800230c:	6103      	str	r3, [r0, #16]
 800230e:	6959      	ldr	r1, [r3, #20]
 8002310:	63c2      	str	r2, [r0, #60]	; 0x3c
 8002312:	6082      	str	r2, [r0, #8]
 8002314:	2500      	movs	r5, #0
 8002316:	f100 0228 	add.w	r2, r0, #40	; 0x28
 800231a:	f04f 0c02 	mov.w	ip, #2
 800231e:	f100 0624 	add.w	r6, r0, #36	; 0x24
 8002322:	2701      	movs	r7, #1
 8002324:	6141      	str	r1, [r0, #20]
 8002326:	f8a0 c01c 	strh.w	ip, [r0, #28]
 800232a:	7787      	strb	r7, [r0, #30]
 800232c:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8002330:	6185      	str	r5, [r0, #24]
 8002332:	6108      	str	r0, [r1, #16]
 8002334:	4629      	mov	r1, r5
 8002336:	e9c0 6209 	strd	r6, r2, [r0, #36]	; 0x24
 800233a:	62c2      	str	r2, [r0, #44]	; 0x2c
 800233c:	6158      	str	r0, [r3, #20]
 800233e:	f7ff fef7 	bl	8002130 <chSchWakeupS>
 8002342:	f385 8811 	msr	BASEPRI, r5
 8002346:	4620      	mov	r0, r4
 8002348:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800234a:	bf00      	nop
 800234c:	08000291 	.word	0x08000291
 8002350:	20000ae0 	.word	0x20000ae0
	...

08002360 <chSchGoSleepS>:
 8002360:	4b07      	ldr	r3, [pc, #28]	; (8002380 <chSchGoSleepS+0x20>)
 8002362:	6999      	ldr	r1, [r3, #24]
 8002364:	681a      	ldr	r2, [r3, #0]
 8002366:	b410      	push	{r4}
 8002368:	7708      	strb	r0, [r1, #28]
 800236a:	6810      	ldr	r0, [r2, #0]
 800236c:	6018      	str	r0, [r3, #0]
 800236e:	2401      	movs	r4, #1
 8002370:	6043      	str	r3, [r0, #4]
 8002372:	7714      	strb	r4, [r2, #28]
 8002374:	4610      	mov	r0, r2
 8002376:	bc10      	pop	{r4}
 8002378:	619a      	str	r2, [r3, #24]
 800237a:	f7fd bf81 	b.w	8000280 <_port_switch>
 800237e:	bf00      	nop
 8002380:	20000ae0 	.word	0x20000ae0
	...

08002390 <chSemSignalWait.constprop.56>:
 8002390:	b538      	push	{r3, r4, r5, lr}
 8002392:	2320      	movs	r3, #32
 8002394:	f383 8811 	msr	BASEPRI, r3
 8002398:	4c15      	ldr	r4, [pc, #84]	; (80023f0 <chSemSignalWait.constprop.56+0x60>)
 800239a:	68a3      	ldr	r3, [r4, #8]
 800239c:	3301      	adds	r3, #1
 800239e:	2b00      	cmp	r3, #0
 80023a0:	60a3      	str	r3, [r4, #8]
 80023a2:	dd1a      	ble.n	80023da <chSemSignalWait.constprop.56+0x4a>
 80023a4:	3b01      	subs	r3, #1
 80023a6:	2b00      	cmp	r3, #0
 80023a8:	60a3      	str	r3, [r4, #8]
 80023aa:	db06      	blt.n	80023ba <chSemSignalWait.constprop.56+0x2a>
 80023ac:	f7ff fd90 	bl	8001ed0 <chSchRescheduleS>
 80023b0:	2000      	movs	r0, #0
 80023b2:	2300      	movs	r3, #0
 80023b4:	f383 8811 	msr	BASEPRI, r3
 80023b8:	bd38      	pop	{r3, r4, r5, pc}
 80023ba:	4a0e      	ldr	r2, [pc, #56]	; (80023f4 <chSemSignalWait.constprop.56+0x64>)
 80023bc:	6863      	ldr	r3, [r4, #4]
 80023be:	6995      	ldr	r5, [r2, #24]
 80023c0:	2005      	movs	r0, #5
 80023c2:	e9c5 4300 	strd	r4, r3, [r5]
 80023c6:	601d      	str	r5, [r3, #0]
 80023c8:	622c      	str	r4, [r5, #32]
 80023ca:	6065      	str	r5, [r4, #4]
 80023cc:	f7ff ffc8 	bl	8002360 <chSchGoSleepS>
 80023d0:	6a28      	ldr	r0, [r5, #32]
 80023d2:	2300      	movs	r3, #0
 80023d4:	f383 8811 	msr	BASEPRI, r3
 80023d8:	bd38      	pop	{r3, r4, r5, pc}
 80023da:	6820      	ldr	r0, [r4, #0]
 80023dc:	6803      	ldr	r3, [r0, #0]
 80023de:	6023      	str	r3, [r4, #0]
 80023e0:	605c      	str	r4, [r3, #4]
 80023e2:	f7fe fe25 	bl	8001030 <chSchReadyI>
 80023e6:	2200      	movs	r2, #0
 80023e8:	68a3      	ldr	r3, [r4, #8]
 80023ea:	6202      	str	r2, [r0, #32]
 80023ec:	e7da      	b.n	80023a4 <chSemSignalWait.constprop.56+0x14>
 80023ee:	bf00      	nop
 80023f0:	200008ac 	.word	0x200008ac
 80023f4:	20000ae0 	.word	0x20000ae0
	...

08002400 <sem3_execute>:
 8002400:	b510      	push	{r4, lr}
 8002402:	4a1e      	ldr	r2, [pc, #120]	; (800247c <sem3_execute+0x7c>)
 8002404:	4b1e      	ldr	r3, [pc, #120]	; (8002480 <sem3_execute+0x80>)
 8002406:	6992      	ldr	r2, [r2, #24]
 8002408:	481e      	ldr	r0, [pc, #120]	; (8002484 <sem3_execute+0x84>)
 800240a:	6892      	ldr	r2, [r2, #8]
 800240c:	4c1e      	ldr	r4, [pc, #120]	; (8002488 <sem3_execute+0x88>)
 800240e:	b082      	sub	sp, #8
 8002410:	2100      	movs	r1, #0
 8002412:	3201      	adds	r2, #1
 8002414:	9100      	str	r1, [sp, #0]
 8002416:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800241a:	f7ff ff69 	bl	80022f0 <chThdCreateStatic>
 800241e:	4b1b      	ldr	r3, [pc, #108]	; (800248c <sem3_execute+0x8c>)
 8002420:	6018      	str	r0, [r3, #0]
 8002422:	f7ff ffb5 	bl	8002390 <chSemSignalWait.constprop.56>
 8002426:	6821      	ldr	r1, [r4, #0]
 8002428:	1b09      	subs	r1, r1, r4
 800242a:	fab1 f181 	clz	r1, r1
 800242e:	2001      	movs	r0, #1
 8002430:	0949      	lsrs	r1, r1, #5
 8002432:	f7fe fa0d 	bl	8000850 <_test_assert>
 8002436:	b108      	cbz	r0, 800243c <sem3_execute+0x3c>
 8002438:	b002      	add	sp, #8
 800243a:	bd10      	pop	{r4, pc}
 800243c:	68a1      	ldr	r1, [r4, #8]
 800243e:	fab1 f181 	clz	r1, r1
 8002442:	0949      	lsrs	r1, r1, #5
 8002444:	2002      	movs	r0, #2
 8002446:	f7fe fa03 	bl	8000850 <_test_assert>
 800244a:	2800      	cmp	r0, #0
 800244c:	d1f4      	bne.n	8002438 <sem3_execute+0x38>
 800244e:	f7ff ff9f 	bl	8002390 <chSemSignalWait.constprop.56>
 8002452:	6821      	ldr	r1, [r4, #0]
 8002454:	1b09      	subs	r1, r1, r4
 8002456:	fab1 f181 	clz	r1, r1
 800245a:	2003      	movs	r0, #3
 800245c:	0949      	lsrs	r1, r1, #5
 800245e:	f7fe f9f7 	bl	8000850 <_test_assert>
 8002462:	2800      	cmp	r0, #0
 8002464:	d1e8      	bne.n	8002438 <sem3_execute+0x38>
 8002466:	68a1      	ldr	r1, [r4, #8]
 8002468:	fab1 f181 	clz	r1, r1
 800246c:	0949      	lsrs	r1, r1, #5
 800246e:	2004      	movs	r0, #4
 8002470:	b002      	add	sp, #8
 8002472:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002476:	f7fe b9eb 	b.w	8000850 <_test_assert>
 800247a:	bf00      	nop
 800247c:	20000ae0 	.word	0x20000ae0
 8002480:	080042e1 	.word	0x080042e1
 8002484:	20000d08 	.word	0x20000d08
 8002488:	200008ac 	.word	0x200008ac
 800248c:	2000139c 	.word	0x2000139c

08002490 <chEvtWaitOne.constprop.40>:
 8002490:	4a0b      	ldr	r2, [pc, #44]	; (80024c0 <chEvtWaitOne.constprop.40+0x30>)
 8002492:	b510      	push	{r4, lr}
 8002494:	2320      	movs	r3, #32
 8002496:	6994      	ldr	r4, [r2, #24]
 8002498:	f383 8811 	msr	BASEPRI, r3
 800249c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800249e:	b933      	cbnz	r3, 80024ae <chEvtWaitOne.constprop.40+0x1e>
 80024a0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80024a4:	6223      	str	r3, [r4, #32]
 80024a6:	200a      	movs	r0, #10
 80024a8:	f7ff ff5a 	bl	8002360 <chSchGoSleepS>
 80024ac:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80024ae:	4258      	negs	r0, r3
 80024b0:	4018      	ands	r0, r3
 80024b2:	ea23 0300 	bic.w	r3, r3, r0
 80024b6:	6363      	str	r3, [r4, #52]	; 0x34
 80024b8:	2300      	movs	r3, #0
 80024ba:	f383 8811 	msr	BASEPRI, r3
 80024be:	bd10      	pop	{r4, pc}
 80024c0:	20000ae0 	.word	0x20000ae0
	...

080024d0 <chEvtWaitAny.constprop.39>:
 80024d0:	4a09      	ldr	r2, [pc, #36]	; (80024f8 <chEvtWaitAny.constprop.39+0x28>)
 80024d2:	b510      	push	{r4, lr}
 80024d4:	2320      	movs	r3, #32
 80024d6:	6994      	ldr	r4, [r2, #24]
 80024d8:	f383 8811 	msr	BASEPRI, r3
 80024dc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80024de:	b930      	cbnz	r0, 80024ee <chEvtWaitAny.constprop.39+0x1e>
 80024e0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80024e4:	200a      	movs	r0, #10
 80024e6:	6223      	str	r3, [r4, #32]
 80024e8:	f7ff ff3a 	bl	8002360 <chSchGoSleepS>
 80024ec:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80024ee:	2300      	movs	r3, #0
 80024f0:	6363      	str	r3, [r4, #52]	; 0x34
 80024f2:	f383 8811 	msr	BASEPRI, r3
 80024f6:	bd10      	pop	{r4, pc}
 80024f8:	20000ae0 	.word	0x20000ae0
 80024fc:	00000000 	.word	0x00000000

08002500 <thread4.lto_priv.84>:
 8002500:	4a07      	ldr	r2, [pc, #28]	; (8002520 <thread4.lto_priv.84+0x20>)
 8002502:	b510      	push	{r4, lr}
 8002504:	2320      	movs	r3, #32
 8002506:	6994      	ldr	r4, [r2, #24]
 8002508:	f383 8811 	msr	BASEPRI, r3
 800250c:	2003      	movs	r0, #3
 800250e:	f7ff ff27 	bl	8002360 <chSchGoSleepS>
 8002512:	6a23      	ldr	r3, [r4, #32]
 8002514:	2b00      	cmp	r3, #0
 8002516:	d0f9      	beq.n	800250c <thread4.lto_priv.84+0xc>
 8002518:	2300      	movs	r3, #0
 800251a:	f383 8811 	msr	BASEPRI, r3
 800251e:	bd10      	pop	{r4, pc}
 8002520:	20000ae0 	.word	0x20000ae0
	...

08002530 <chSchGoSleepTimeoutS>:
 8002530:	b530      	push	{r4, r5, lr}
 8002532:	1c4b      	adds	r3, r1, #1
 8002534:	b087      	sub	sp, #28
 8002536:	d012      	beq.n	800255e <chSchGoSleepTimeoutS+0x2e>
 8002538:	4c0c      	ldr	r4, [pc, #48]	; (800256c <chSchGoSleepTimeoutS+0x3c>)
 800253a:	4a0d      	ldr	r2, [pc, #52]	; (8002570 <chSchGoSleepTimeoutS+0x40>)
 800253c:	69a3      	ldr	r3, [r4, #24]
 800253e:	4605      	mov	r5, r0
 8002540:	a801      	add	r0, sp, #4
 8002542:	f7ff f91d 	bl	8001780 <chVTDoSetI>
 8002546:	4628      	mov	r0, r5
 8002548:	f7ff ff0a 	bl	8002360 <chSchGoSleepS>
 800254c:	9b04      	ldr	r3, [sp, #16]
 800254e:	b113      	cbz	r3, 8002556 <chSchGoSleepTimeoutS+0x26>
 8002550:	a801      	add	r0, sp, #4
 8002552:	f7ff f8dd 	bl	8001710 <chVTDoResetI>
 8002556:	69a3      	ldr	r3, [r4, #24]
 8002558:	6a18      	ldr	r0, [r3, #32]
 800255a:	b007      	add	sp, #28
 800255c:	bd30      	pop	{r4, r5, pc}
 800255e:	4c03      	ldr	r4, [pc, #12]	; (800256c <chSchGoSleepTimeoutS+0x3c>)
 8002560:	f7ff fefe 	bl	8002360 <chSchGoSleepS>
 8002564:	69a3      	ldr	r3, [r4, #24]
 8002566:	6a18      	ldr	r0, [r3, #32]
 8002568:	b007      	add	sp, #28
 800256a:	bd30      	pop	{r4, r5, pc}
 800256c:	20000ae0 	.word	0x20000ae0
 8002570:	08000fc1 	.word	0x08000fc1
	...

08002580 <chSemWaitTimeout.constprop.58>:
 8002580:	2320      	movs	r3, #32
 8002582:	f383 8811 	msr	BASEPRI, r3
 8002586:	4b10      	ldr	r3, [pc, #64]	; (80025c8 <chSemWaitTimeout.constprop.58+0x48>)
 8002588:	6899      	ldr	r1, [r3, #8]
 800258a:	1e4a      	subs	r2, r1, #1
 800258c:	2a00      	cmp	r2, #0
 800258e:	609a      	str	r2, [r3, #8]
 8002590:	db04      	blt.n	800259c <chSemWaitTimeout.constprop.58+0x1c>
 8002592:	2000      	movs	r0, #0
 8002594:	2300      	movs	r3, #0
 8002596:	f383 8811 	msr	BASEPRI, r3
 800259a:	4770      	bx	lr
 800259c:	b180      	cbz	r0, 80025c0 <chSemWaitTimeout.constprop.58+0x40>
 800259e:	4a0b      	ldr	r2, [pc, #44]	; (80025cc <chSemWaitTimeout.constprop.58+0x4c>)
 80025a0:	b510      	push	{r4, lr}
 80025a2:	6992      	ldr	r2, [r2, #24]
 80025a4:	685c      	ldr	r4, [r3, #4]
 80025a6:	6213      	str	r3, [r2, #32]
 80025a8:	e9c2 3400 	strd	r3, r4, [r2]
 80025ac:	4601      	mov	r1, r0
 80025ae:	6022      	str	r2, [r4, #0]
 80025b0:	2005      	movs	r0, #5
 80025b2:	605a      	str	r2, [r3, #4]
 80025b4:	f7ff ffbc 	bl	8002530 <chSchGoSleepTimeoutS>
 80025b8:	2300      	movs	r3, #0
 80025ba:	f383 8811 	msr	BASEPRI, r3
 80025be:	bd10      	pop	{r4, pc}
 80025c0:	6099      	str	r1, [r3, #8]
 80025c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80025c6:	e7e5      	b.n	8002594 <chSemWaitTimeout.constprop.58+0x14>
 80025c8:	200008ac 	.word	0x200008ac
 80025cc:	20000ae0 	.word	0x20000ae0

080025d0 <evt3_execute>:
 80025d0:	b570      	push	{r4, r5, r6, lr}
 80025d2:	4c55      	ldr	r4, [pc, #340]	; (8002728 <evt3_execute+0x158>)
 80025d4:	2320      	movs	r3, #32
 80025d6:	69a2      	ldr	r2, [r4, #24]
 80025d8:	f383 8811 	msr	BASEPRI, r3
 80025dc:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80025de:	b93b      	cbnz	r3, 80025f0 <evt3_execute+0x20>
 80025e0:	f383 8811 	msr	BASEPRI, r3
 80025e4:	2101      	movs	r1, #1
 80025e6:	2001      	movs	r0, #1
 80025e8:	f7fe f932 	bl	8000850 <_test_assert>
 80025ec:	b180      	cbz	r0, 8002610 <evt3_execute+0x40>
 80025ee:	bd70      	pop	{r4, r5, r6, pc}
 80025f0:	4259      	negs	r1, r3
 80025f2:	4019      	ands	r1, r3
 80025f4:	ea23 0301 	bic.w	r3, r3, r1
 80025f8:	6353      	str	r3, [r2, #52]	; 0x34
 80025fa:	2300      	movs	r3, #0
 80025fc:	f383 8811 	msr	BASEPRI, r3
 8002600:	fab1 f181 	clz	r1, r1
 8002604:	0949      	lsrs	r1, r1, #5
 8002606:	2001      	movs	r0, #1
 8002608:	f7fe f922 	bl	8000850 <_test_assert>
 800260c:	2800      	cmp	r0, #0
 800260e:	d1ee      	bne.n	80025ee <evt3_execute+0x1e>
 8002610:	69a3      	ldr	r3, [r4, #24]
 8002612:	2220      	movs	r2, #32
 8002614:	f382 8811 	msr	BASEPRI, r2
 8002618:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800261a:	2a00      	cmp	r2, #0
 800261c:	d06f      	beq.n	80026fe <evt3_execute+0x12e>
 800261e:	6358      	str	r0, [r3, #52]	; 0x34
 8002620:	f380 8811 	msr	BASEPRI, r0
 8002624:	4601      	mov	r1, r0
 8002626:	2002      	movs	r0, #2
 8002628:	f7fe f912 	bl	8000850 <_test_assert>
 800262c:	2800      	cmp	r0, #0
 800262e:	d1de      	bne.n	80025ee <evt3_execute+0x1e>
 8002630:	69a3      	ldr	r3, [r4, #24]
 8002632:	2220      	movs	r2, #32
 8002634:	f382 8811 	msr	BASEPRI, r2
 8002638:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800263a:	3201      	adds	r2, #1
 800263c:	d063      	beq.n	8002706 <evt3_execute+0x136>
 800263e:	f380 8811 	msr	BASEPRI, r0
 8002642:	2001      	movs	r0, #1
 8002644:	4601      	mov	r1, r0
 8002646:	2003      	movs	r0, #3
 8002648:	f7fe f902 	bl	8000850 <_test_assert>
 800264c:	2800      	cmp	r0, #0
 800264e:	d1ce      	bne.n	80025ee <evt3_execute+0x1e>
 8002650:	69a6      	ldr	r6, [r4, #24]
 8002652:	2320      	movs	r3, #32
 8002654:	f383 8811 	msr	BASEPRI, r3
 8002658:	6b75      	ldr	r5, [r6, #52]	; 0x34
 800265a:	b94d      	cbnz	r5, 8002670 <evt3_execute+0xa0>
 800265c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002660:	210a      	movs	r1, #10
 8002662:	6233      	str	r3, [r6, #32]
 8002664:	4608      	mov	r0, r1
 8002666:	f7ff ff63 	bl	8002530 <chSchGoSleepTimeoutS>
 800266a:	2800      	cmp	r0, #0
 800266c:	db4f      	blt.n	800270e <evt3_execute+0x13e>
 800266e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8002670:	4269      	negs	r1, r5
 8002672:	4029      	ands	r1, r5
 8002674:	ea25 0501 	bic.w	r5, r5, r1
 8002678:	6375      	str	r5, [r6, #52]	; 0x34
 800267a:	2300      	movs	r3, #0
 800267c:	f383 8811 	msr	BASEPRI, r3
 8002680:	fab1 f181 	clz	r1, r1
 8002684:	0949      	lsrs	r1, r1, #5
 8002686:	2004      	movs	r0, #4
 8002688:	f7fe f8e2 	bl	8000850 <_test_assert>
 800268c:	2800      	cmp	r0, #0
 800268e:	d1ae      	bne.n	80025ee <evt3_execute+0x1e>
 8002690:	69a6      	ldr	r6, [r4, #24]
 8002692:	2320      	movs	r3, #32
 8002694:	f383 8811 	msr	BASEPRI, r3
 8002698:	6b75      	ldr	r5, [r6, #52]	; 0x34
 800269a:	b94d      	cbnz	r5, 80026b0 <evt3_execute+0xe0>
 800269c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80026a0:	210a      	movs	r1, #10
 80026a2:	6233      	str	r3, [r6, #32]
 80026a4:	4608      	mov	r0, r1
 80026a6:	f7ff ff43 	bl	8002530 <chSchGoSleepTimeoutS>
 80026aa:	2800      	cmp	r0, #0
 80026ac:	db33      	blt.n	8002716 <evt3_execute+0x146>
 80026ae:	6b75      	ldr	r5, [r6, #52]	; 0x34
 80026b0:	2300      	movs	r3, #0
 80026b2:	6373      	str	r3, [r6, #52]	; 0x34
 80026b4:	f383 8811 	msr	BASEPRI, r3
 80026b8:	fab5 f185 	clz	r1, r5
 80026bc:	0949      	lsrs	r1, r1, #5
 80026be:	2005      	movs	r0, #5
 80026c0:	f7fe f8c6 	bl	8000850 <_test_assert>
 80026c4:	4605      	mov	r5, r0
 80026c6:	2800      	cmp	r0, #0
 80026c8:	d191      	bne.n	80025ee <evt3_execute+0x1e>
 80026ca:	69a4      	ldr	r4, [r4, #24]
 80026cc:	2320      	movs	r3, #32
 80026ce:	f383 8811 	msr	BASEPRI, r3
 80026d2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80026d4:	3301      	adds	r3, #1
 80026d6:	d008      	beq.n	80026ea <evt3_execute+0x11a>
 80026d8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80026dc:	6223      	str	r3, [r4, #32]
 80026de:	210a      	movs	r1, #10
 80026e0:	200b      	movs	r0, #11
 80026e2:	f7ff ff25 	bl	8002530 <chSchGoSleepTimeoutS>
 80026e6:	2800      	cmp	r0, #0
 80026e8:	db19      	blt.n	800271e <evt3_execute+0x14e>
 80026ea:	2300      	movs	r3, #0
 80026ec:	6363      	str	r3, [r4, #52]	; 0x34
 80026ee:	f383 8811 	msr	BASEPRI, r3
 80026f2:	4629      	mov	r1, r5
 80026f4:	2006      	movs	r0, #6
 80026f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80026fa:	f7fe b8a9 	b.w	8000850 <_test_assert>
 80026fe:	f382 8811 	msr	BASEPRI, r2
 8002702:	2101      	movs	r1, #1
 8002704:	e78f      	b.n	8002626 <evt3_execute+0x56>
 8002706:	6358      	str	r0, [r3, #52]	; 0x34
 8002708:	f380 8811 	msr	BASEPRI, r0
 800270c:	e79a      	b.n	8002644 <evt3_execute+0x74>
 800270e:	f385 8811 	msr	BASEPRI, r5
 8002712:	2101      	movs	r1, #1
 8002714:	e7b7      	b.n	8002686 <evt3_execute+0xb6>
 8002716:	f385 8811 	msr	BASEPRI, r5
 800271a:	2101      	movs	r1, #1
 800271c:	e7cf      	b.n	80026be <evt3_execute+0xee>
 800271e:	f385 8811 	msr	BASEPRI, r5
 8002722:	2501      	movs	r5, #1
 8002724:	e7e5      	b.n	80026f2 <evt3_execute+0x122>
 8002726:	bf00      	nop
 8002728:	20000ae0 	.word	0x20000ae0
 800272c:	00000000 	.word	0x00000000

08002730 <chSemWaitTimeoutS>:
 8002730:	6883      	ldr	r3, [r0, #8]
 8002732:	3b01      	subs	r3, #1
 8002734:	2b00      	cmp	r3, #0
 8002736:	6083      	str	r3, [r0, #8]
 8002738:	db01      	blt.n	800273e <chSemWaitTimeoutS+0xe>
 800273a:	2000      	movs	r0, #0
 800273c:	4770      	bx	lr
 800273e:	4b07      	ldr	r3, [pc, #28]	; (800275c <chSemWaitTimeoutS+0x2c>)
 8002740:	699b      	ldr	r3, [r3, #24]
 8002742:	b410      	push	{r4}
 8002744:	6218      	str	r0, [r3, #32]
 8002746:	6018      	str	r0, [r3, #0]
 8002748:	6844      	ldr	r4, [r0, #4]
 800274a:	605c      	str	r4, [r3, #4]
 800274c:	4602      	mov	r2, r0
 800274e:	6023      	str	r3, [r4, #0]
 8002750:	2005      	movs	r0, #5
 8002752:	6053      	str	r3, [r2, #4]
 8002754:	bc10      	pop	{r4}
 8002756:	f7ff beeb 	b.w	8002530 <chSchGoSleepTimeoutS>
 800275a:	bf00      	nop
 800275c:	20000ae0 	.word	0x20000ae0

08002760 <chMBPost.constprop.28>:
 8002760:	b570      	push	{r4, r5, r6, lr}
 8002762:	2320      	movs	r3, #32
 8002764:	4606      	mov	r6, r0
 8002766:	f383 8811 	msr	BASEPRI, r3
 800276a:	4c0d      	ldr	r4, [pc, #52]	; (80027a0 <chMBPost.constprop.28+0x40>)
 800276c:	f104 001c 	add.w	r0, r4, #28
 8002770:	f7ff ffde 	bl	8002730 <chSemWaitTimeoutS>
 8002774:	4605      	mov	r5, r0
 8002776:	b968      	cbnz	r0, 8002794 <chMBPost.constprop.28+0x34>
 8002778:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800277c:	1d13      	adds	r3, r2, #4
 800277e:	428b      	cmp	r3, r1
 8002780:	60a3      	str	r3, [r4, #8]
 8002782:	4808      	ldr	r0, [pc, #32]	; (80027a4 <chMBPost.constprop.28+0x44>)
 8002784:	6016      	str	r6, [r2, #0]
 8002786:	bf24      	itt	cs
 8002788:	6823      	ldrcs	r3, [r4, #0]
 800278a:	60a3      	strcs	r3, [r4, #8]
 800278c:	f7fe ff38 	bl	8001600 <chSemSignalI>
 8002790:	f7ff fb9e 	bl	8001ed0 <chSchRescheduleS>
 8002794:	2300      	movs	r3, #0
 8002796:	f383 8811 	msr	BASEPRI, r3
 800279a:	4628      	mov	r0, r5
 800279c:	bd70      	pop	{r4, r5, r6, pc}
 800279e:	bf00      	nop
 80027a0:	20000854 	.word	0x20000854
 80027a4:	20000864 	.word	0x20000864
	...

080027b0 <chMBPostAhead.constprop.26>:
 80027b0:	b570      	push	{r4, r5, r6, lr}
 80027b2:	2320      	movs	r3, #32
 80027b4:	4606      	mov	r6, r0
 80027b6:	f383 8811 	msr	BASEPRI, r3
 80027ba:	4c10      	ldr	r4, [pc, #64]	; (80027fc <chMBPostAhead.constprop.26+0x4c>)
 80027bc:	f104 001c 	add.w	r0, r4, #28
 80027c0:	f7ff ffb6 	bl	8002730 <chSemWaitTimeoutS>
 80027c4:	4605      	mov	r5, r0
 80027c6:	b120      	cbz	r0, 80027d2 <chMBPostAhead.constprop.26+0x22>
 80027c8:	2300      	movs	r3, #0
 80027ca:	f383 8811 	msr	BASEPRI, r3
 80027ce:	4628      	mov	r0, r5
 80027d0:	bd70      	pop	{r4, r5, r6, pc}
 80027d2:	68e3      	ldr	r3, [r4, #12]
 80027d4:	6822      	ldr	r2, [r4, #0]
 80027d6:	3b04      	subs	r3, #4
 80027d8:	4293      	cmp	r3, r2
 80027da:	60e3      	str	r3, [r4, #12]
 80027dc:	d202      	bcs.n	80027e4 <chMBPostAhead.constprop.26+0x34>
 80027de:	6863      	ldr	r3, [r4, #4]
 80027e0:	3b04      	subs	r3, #4
 80027e2:	60e3      	str	r3, [r4, #12]
 80027e4:	601e      	str	r6, [r3, #0]
 80027e6:	4806      	ldr	r0, [pc, #24]	; (8002800 <chMBPostAhead.constprop.26+0x50>)
 80027e8:	f7fe ff0a 	bl	8001600 <chSemSignalI>
 80027ec:	f7ff fb70 	bl	8001ed0 <chSchRescheduleS>
 80027f0:	2300      	movs	r3, #0
 80027f2:	f383 8811 	msr	BASEPRI, r3
 80027f6:	4628      	mov	r0, r5
 80027f8:	bd70      	pop	{r4, r5, r6, pc}
 80027fa:	bf00      	nop
 80027fc:	20000854 	.word	0x20000854
 8002800:	20000864 	.word	0x20000864
	...

08002810 <chMBFetch.constprop.24>:
 8002810:	b570      	push	{r4, r5, r6, lr}
 8002812:	2320      	movs	r3, #32
 8002814:	4606      	mov	r6, r0
 8002816:	f383 8811 	msr	BASEPRI, r3
 800281a:	4c0d      	ldr	r4, [pc, #52]	; (8002850 <chMBFetch.constprop.24+0x40>)
 800281c:	f104 0010 	add.w	r0, r4, #16
 8002820:	f7ff ff86 	bl	8002730 <chSemWaitTimeoutS>
 8002824:	4605      	mov	r5, r0
 8002826:	b970      	cbnz	r0, 8002846 <chMBFetch.constprop.24+0x36>
 8002828:	68e3      	ldr	r3, [r4, #12]
 800282a:	6862      	ldr	r2, [r4, #4]
 800282c:	6819      	ldr	r1, [r3, #0]
 800282e:	4809      	ldr	r0, [pc, #36]	; (8002854 <chMBFetch.constprop.24+0x44>)
 8002830:	3304      	adds	r3, #4
 8002832:	4293      	cmp	r3, r2
 8002834:	60e3      	str	r3, [r4, #12]
 8002836:	6031      	str	r1, [r6, #0]
 8002838:	bf24      	itt	cs
 800283a:	6823      	ldrcs	r3, [r4, #0]
 800283c:	60e3      	strcs	r3, [r4, #12]
 800283e:	f7fe fedf 	bl	8001600 <chSemSignalI>
 8002842:	f7ff fb45 	bl	8001ed0 <chSchRescheduleS>
 8002846:	2300      	movs	r3, #0
 8002848:	f383 8811 	msr	BASEPRI, r3
 800284c:	4628      	mov	r0, r5
 800284e:	bd70      	pop	{r4, r5, r6, pc}
 8002850:	20000854 	.word	0x20000854
 8002854:	20000870 	.word	0x20000870
	...

08002860 <mbox1_execute>:
 8002860:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002862:	2320      	movs	r3, #32
 8002864:	b083      	sub	sp, #12
 8002866:	f383 8811 	msr	BASEPRI, r3
 800286a:	4dd1      	ldr	r5, [pc, #836]	; (8002bb0 <mbox1_execute+0x350>)
 800286c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800286e:	f1a1 0105 	sub.w	r1, r1, #5
 8002872:	fab1 f181 	clz	r1, r1
 8002876:	2001      	movs	r0, #1
 8002878:	0949      	lsrs	r1, r1, #5
 800287a:	f7fd ffe9 	bl	8000850 <_test_assert>
 800287e:	2800      	cmp	r0, #0
 8002880:	f040 8191 	bne.w	8002ba6 <mbox1_execute+0x346>
 8002884:	f380 8811 	msr	BASEPRI, r0
 8002888:	2442      	movs	r4, #66	; 0x42
 800288a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800288e:	4620      	mov	r0, r4
 8002890:	f7ff ff66 	bl	8002760 <chMBPost.constprop.28>
 8002894:	fab0 f180 	clz	r1, r0
 8002898:	0949      	lsrs	r1, r1, #5
 800289a:	2002      	movs	r0, #2
 800289c:	f7fd ffd8 	bl	8000850 <_test_assert>
 80028a0:	3401      	adds	r4, #1
 80028a2:	b978      	cbnz	r0, 80028c4 <mbox1_execute+0x64>
 80028a4:	2c46      	cmp	r4, #70	; 0x46
 80028a6:	d1f0      	bne.n	800288a <mbox1_execute+0x2a>
 80028a8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80028ac:	2041      	movs	r0, #65	; 0x41
 80028ae:	f7ff ff7f 	bl	80027b0 <chMBPostAhead.constprop.26>
 80028b2:	fab0 f180 	clz	r1, r0
 80028b6:	0949      	lsrs	r1, r1, #5
 80028b8:	2003      	movs	r0, #3
 80028ba:	f7fd ffc9 	bl	8000850 <_test_assert>
 80028be:	2800      	cmp	r0, #0
 80028c0:	f000 817e 	beq.w	8002bc0 <mbox1_execute+0x360>
 80028c4:	b003      	add	sp, #12
 80028c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80028c8:	f380 8811 	msr	BASEPRI, r0
 80028cc:	f384 8811 	msr	BASEPRI, r4
 80028d0:	2041      	movs	r0, #65	; 0x41
 80028d2:	f7fe fea5 	bl	8001620 <chMBPostI.constprop.27>
 80028d6:	fab0 f180 	clz	r1, r0
 80028da:	0949      	lsrs	r1, r1, #5
 80028dc:	2016      	movs	r0, #22
 80028de:	f7fd ffb7 	bl	8000850 <_test_assert>
 80028e2:	2800      	cmp	r0, #0
 80028e4:	d1ee      	bne.n	80028c4 <mbox1_execute+0x64>
 80028e6:	2042      	movs	r0, #66	; 0x42
 80028e8:	f7fe fe9a 	bl	8001620 <chMBPostI.constprop.27>
 80028ec:	fab0 f180 	clz	r1, r0
 80028f0:	0949      	lsrs	r1, r1, #5
 80028f2:	2017      	movs	r0, #23
 80028f4:	f7fd ffac 	bl	8000850 <_test_assert>
 80028f8:	2800      	cmp	r0, #0
 80028fa:	d1e3      	bne.n	80028c4 <mbox1_execute+0x64>
 80028fc:	2043      	movs	r0, #67	; 0x43
 80028fe:	f7fe fe8f 	bl	8001620 <chMBPostI.constprop.27>
 8002902:	fab0 f180 	clz	r1, r0
 8002906:	0949      	lsrs	r1, r1, #5
 8002908:	2018      	movs	r0, #24
 800290a:	f7fd ffa1 	bl	8000850 <_test_assert>
 800290e:	2800      	cmp	r0, #0
 8002910:	d1d8      	bne.n	80028c4 <mbox1_execute+0x64>
 8002912:	2044      	movs	r0, #68	; 0x44
 8002914:	f7fe fe84 	bl	8001620 <chMBPostI.constprop.27>
 8002918:	fab0 f180 	clz	r1, r0
 800291c:	0949      	lsrs	r1, r1, #5
 800291e:	2019      	movs	r0, #25
 8002920:	f7fd ff96 	bl	8000850 <_test_assert>
 8002924:	4606      	mov	r6, r0
 8002926:	2800      	cmp	r0, #0
 8002928:	d1cc      	bne.n	80028c4 <mbox1_execute+0x64>
 800292a:	2045      	movs	r0, #69	; 0x45
 800292c:	f7fe fe78 	bl	8001620 <chMBPostI.constprop.27>
 8002930:	f386 8811 	msr	BASEPRI, r6
 8002934:	fab0 f180 	clz	r1, r0
 8002938:	0949      	lsrs	r1, r1, #5
 800293a:	201a      	movs	r0, #26
 800293c:	f7fd ff88 	bl	8000850 <_test_assert>
 8002940:	2800      	cmp	r0, #0
 8002942:	d1bf      	bne.n	80028c4 <mbox1_execute+0x64>
 8002944:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002948:	eba1 0c03 	sub.w	ip, r1, r3
 800294c:	f1dc 0100 	rsbs	r1, ip, #0
 8002950:	eb41 010c 	adc.w	r1, r1, ip
 8002954:	201b      	movs	r0, #27
 8002956:	f7fd ff7b 	bl	8000850 <_test_assert>
 800295a:	2800      	cmp	r0, #0
 800295c:	d1b2      	bne.n	80028c4 <mbox1_execute+0x64>
 800295e:	4607      	mov	r7, r0
 8002960:	2605      	movs	r6, #5
 8002962:	f384 8811 	msr	BASEPRI, r4
 8002966:	a801      	add	r0, sp, #4
 8002968:	f7fe fe9a 	bl	80016a0 <chMBFetchI.constprop.23>
 800296c:	f387 8811 	msr	BASEPRI, r7
 8002970:	fab0 f180 	clz	r1, r0
 8002974:	0949      	lsrs	r1, r1, #5
 8002976:	201c      	movs	r0, #28
 8002978:	f7fd ff6a 	bl	8000850 <_test_assert>
 800297c:	2800      	cmp	r0, #0
 800297e:	d1a1      	bne.n	80028c4 <mbox1_execute+0x64>
 8002980:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8002984:	f7fd ff7c 	bl	8000880 <test_emit_token>
 8002988:	3e01      	subs	r6, #1
 800298a:	d1ea      	bne.n	8002962 <mbox1_execute+0x102>
 800298c:	4989      	ldr	r1, [pc, #548]	; (8002bb4 <mbox1_execute+0x354>)
 800298e:	201d      	movs	r0, #29
 8002990:	f7fd ff36 	bl	8000800 <_test_assert_sequence>
 8002994:	2800      	cmp	r0, #0
 8002996:	d195      	bne.n	80028c4 <mbox1_execute+0x64>
 8002998:	f384 8811 	msr	BASEPRI, r4
 800299c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800299e:	1f4f      	subs	r7, r1, #5
 80029a0:	4279      	negs	r1, r7
 80029a2:	4179      	adcs	r1, r7
 80029a4:	201e      	movs	r0, #30
 80029a6:	f7fd ff53 	bl	8000850 <_test_assert>
 80029aa:	2800      	cmp	r0, #0
 80029ac:	f040 8223 	bne.w	8002df6 <mbox1_execute+0x596>
 80029b0:	f386 8811 	msr	BASEPRI, r6
 80029b4:	f384 8811 	msr	BASEPRI, r4
 80029b8:	69a9      	ldr	r1, [r5, #24]
 80029ba:	fab1 f181 	clz	r1, r1
 80029be:	0949      	lsrs	r1, r1, #5
 80029c0:	201f      	movs	r0, #31
 80029c2:	f7fd ff45 	bl	8000850 <_test_assert>
 80029c6:	2800      	cmp	r0, #0
 80029c8:	f040 8215 	bne.w	8002df6 <mbox1_execute+0x596>
 80029cc:	f386 8811 	msr	BASEPRI, r6
 80029d0:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80029d4:	1aca      	subs	r2, r1, r3
 80029d6:	4251      	negs	r1, r2
 80029d8:	4151      	adcs	r1, r2
 80029da:	2020      	movs	r0, #32
 80029dc:	f7fd ff38 	bl	8000850 <_test_assert>
 80029e0:	2800      	cmp	r0, #0
 80029e2:	f47f af6f 	bne.w	80028c4 <mbox1_execute+0x64>
 80029e6:	f384 8811 	msr	BASEPRI, r4
 80029ea:	2045      	movs	r0, #69	; 0x45
 80029ec:	f7fe fe38 	bl	8001660 <chMBPostAheadI.constprop.25>
 80029f0:	fab0 f180 	clz	r1, r0
 80029f4:	0949      	lsrs	r1, r1, #5
 80029f6:	2021      	movs	r0, #33	; 0x21
 80029f8:	f7fd ff2a 	bl	8000850 <_test_assert>
 80029fc:	2800      	cmp	r0, #0
 80029fe:	f47f af61 	bne.w	80028c4 <mbox1_execute+0x64>
 8002a02:	2044      	movs	r0, #68	; 0x44
 8002a04:	f7fe fe2c 	bl	8001660 <chMBPostAheadI.constprop.25>
 8002a08:	fab0 f180 	clz	r1, r0
 8002a0c:	0949      	lsrs	r1, r1, #5
 8002a0e:	2022      	movs	r0, #34	; 0x22
 8002a10:	f7fd ff1e 	bl	8000850 <_test_assert>
 8002a14:	2800      	cmp	r0, #0
 8002a16:	f47f af55 	bne.w	80028c4 <mbox1_execute+0x64>
 8002a1a:	2043      	movs	r0, #67	; 0x43
 8002a1c:	f7fe fe20 	bl	8001660 <chMBPostAheadI.constprop.25>
 8002a20:	fab0 f180 	clz	r1, r0
 8002a24:	0949      	lsrs	r1, r1, #5
 8002a26:	2023      	movs	r0, #35	; 0x23
 8002a28:	f7fd ff12 	bl	8000850 <_test_assert>
 8002a2c:	2800      	cmp	r0, #0
 8002a2e:	f47f af49 	bne.w	80028c4 <mbox1_execute+0x64>
 8002a32:	2042      	movs	r0, #66	; 0x42
 8002a34:	f7fe fe14 	bl	8001660 <chMBPostAheadI.constprop.25>
 8002a38:	fab0 f180 	clz	r1, r0
 8002a3c:	0949      	lsrs	r1, r1, #5
 8002a3e:	2024      	movs	r0, #36	; 0x24
 8002a40:	f7fd ff06 	bl	8000850 <_test_assert>
 8002a44:	2800      	cmp	r0, #0
 8002a46:	f47f af3d 	bne.w	80028c4 <mbox1_execute+0x64>
 8002a4a:	2041      	movs	r0, #65	; 0x41
 8002a4c:	f7fe fe08 	bl	8001660 <chMBPostAheadI.constprop.25>
 8002a50:	2300      	movs	r3, #0
 8002a52:	f383 8811 	msr	BASEPRI, r3
 8002a56:	fab0 f180 	clz	r1, r0
 8002a5a:	0949      	lsrs	r1, r1, #5
 8002a5c:	2025      	movs	r0, #37	; 0x25
 8002a5e:	f7fd fef7 	bl	8000850 <_test_assert>
 8002a62:	2800      	cmp	r0, #0
 8002a64:	f47f af2e 	bne.w	80028c4 <mbox1_execute+0x64>
 8002a68:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002a6c:	1acb      	subs	r3, r1, r3
 8002a6e:	4259      	negs	r1, r3
 8002a70:	4159      	adcs	r1, r3
 8002a72:	2026      	movs	r0, #38	; 0x26
 8002a74:	f7fd feec 	bl	8000850 <_test_assert>
 8002a78:	2800      	cmp	r0, #0
 8002a7a:	f47f af23 	bne.w	80028c4 <mbox1_execute+0x64>
 8002a7e:	4606      	mov	r6, r0
 8002a80:	2405      	movs	r4, #5
 8002a82:	2720      	movs	r7, #32
 8002a84:	f387 8811 	msr	BASEPRI, r7
 8002a88:	a801      	add	r0, sp, #4
 8002a8a:	f7fe fe09 	bl	80016a0 <chMBFetchI.constprop.23>
 8002a8e:	f386 8811 	msr	BASEPRI, r6
 8002a92:	fab0 f180 	clz	r1, r0
 8002a96:	0949      	lsrs	r1, r1, #5
 8002a98:	2027      	movs	r0, #39	; 0x27
 8002a9a:	f7fd fed9 	bl	8000850 <_test_assert>
 8002a9e:	2800      	cmp	r0, #0
 8002aa0:	f47f af10 	bne.w	80028c4 <mbox1_execute+0x64>
 8002aa4:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8002aa8:	f7fd feea 	bl	8000880 <test_emit_token>
 8002aac:	3c01      	subs	r4, #1
 8002aae:	d1e9      	bne.n	8002a84 <mbox1_execute+0x224>
 8002ab0:	4940      	ldr	r1, [pc, #256]	; (8002bb4 <mbox1_execute+0x354>)
 8002ab2:	2028      	movs	r0, #40	; 0x28
 8002ab4:	f7fd fea4 	bl	8000800 <_test_assert_sequence>
 8002ab8:	2800      	cmp	r0, #0
 8002aba:	f47f af03 	bne.w	80028c4 <mbox1_execute+0x64>
 8002abe:	f387 8811 	msr	BASEPRI, r7
 8002ac2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002ac4:	f1a1 0e05 	sub.w	lr, r1, #5
 8002ac8:	f1de 0100 	rsbs	r1, lr, #0
 8002acc:	eb41 010e 	adc.w	r1, r1, lr
 8002ad0:	2029      	movs	r0, #41	; 0x29
 8002ad2:	f7fd febd 	bl	8000850 <_test_assert>
 8002ad6:	2800      	cmp	r0, #0
 8002ad8:	f040 80c5 	bne.w	8002c66 <mbox1_execute+0x406>
 8002adc:	f384 8811 	msr	BASEPRI, r4
 8002ae0:	f387 8811 	msr	BASEPRI, r7
 8002ae4:	69a9      	ldr	r1, [r5, #24]
 8002ae6:	fab1 f181 	clz	r1, r1
 8002aea:	0949      	lsrs	r1, r1, #5
 8002aec:	202a      	movs	r0, #42	; 0x2a
 8002aee:	f7fd feaf 	bl	8000850 <_test_assert>
 8002af2:	2800      	cmp	r0, #0
 8002af4:	f040 80b7 	bne.w	8002c66 <mbox1_execute+0x406>
 8002af8:	f384 8811 	msr	BASEPRI, r4
 8002afc:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002b00:	eba1 0c03 	sub.w	ip, r1, r3
 8002b04:	f1dc 0100 	rsbs	r1, ip, #0
 8002b08:	eb41 010c 	adc.w	r1, r1, ip
 8002b0c:	202b      	movs	r0, #43	; 0x2b
 8002b0e:	f7fd fe9f 	bl	8000850 <_test_assert>
 8002b12:	2800      	cmp	r0, #0
 8002b14:	f47f aed6 	bne.w	80028c4 <mbox1_execute+0x64>
 8002b18:	f387 8811 	msr	BASEPRI, r7
 8002b1c:	e9d5 3200 	ldrd	r3, r2, [r5]
 8002b20:	1ad2      	subs	r2, r2, r3
 8002b22:	1091      	asrs	r1, r2, #2
 8002b24:	4824      	ldr	r0, [pc, #144]	; (8002bb8 <mbox1_execute+0x358>)
 8002b26:	60ab      	str	r3, [r5, #8]
 8002b28:	60eb      	str	r3, [r5, #12]
 8002b2a:	f7fe fdd9 	bl	80016e0 <chSemResetI>
 8002b2e:	4621      	mov	r1, r4
 8002b30:	4822      	ldr	r0, [pc, #136]	; (8002bbc <mbox1_execute+0x35c>)
 8002b32:	f7fe fdd5 	bl	80016e0 <chSemResetI>
 8002b36:	f7ff f9cb 	bl	8001ed0 <chSchRescheduleS>
 8002b3a:	f384 8811 	msr	BASEPRI, r4
 8002b3e:	f387 8811 	msr	BASEPRI, r7
 8002b42:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002b44:	1f4e      	subs	r6, r1, #5
 8002b46:	4271      	negs	r1, r6
 8002b48:	4171      	adcs	r1, r6
 8002b4a:	202c      	movs	r0, #44	; 0x2c
 8002b4c:	f7fd fe80 	bl	8000850 <_test_assert>
 8002b50:	2800      	cmp	r0, #0
 8002b52:	f040 8088 	bne.w	8002c66 <mbox1_execute+0x406>
 8002b56:	f384 8811 	msr	BASEPRI, r4
 8002b5a:	f387 8811 	msr	BASEPRI, r7
 8002b5e:	69a9      	ldr	r1, [r5, #24]
 8002b60:	fab1 f181 	clz	r1, r1
 8002b64:	0949      	lsrs	r1, r1, #5
 8002b66:	202d      	movs	r0, #45	; 0x2d
 8002b68:	f7fd fe72 	bl	8000850 <_test_assert>
 8002b6c:	2800      	cmp	r0, #0
 8002b6e:	d17a      	bne.n	8002c66 <mbox1_execute+0x406>
 8002b70:	f384 8811 	msr	BASEPRI, r4
 8002b74:	f387 8811 	msr	BASEPRI, r7
 8002b78:	6829      	ldr	r1, [r5, #0]
 8002b7a:	68ab      	ldr	r3, [r5, #8]
 8002b7c:	1aca      	subs	r2, r1, r3
 8002b7e:	4251      	negs	r1, r2
 8002b80:	4151      	adcs	r1, r2
 8002b82:	202e      	movs	r0, #46	; 0x2e
 8002b84:	f7fd fe64 	bl	8000850 <_test_assert>
 8002b88:	2800      	cmp	r0, #0
 8002b8a:	d16c      	bne.n	8002c66 <mbox1_execute+0x406>
 8002b8c:	f384 8811 	msr	BASEPRI, r4
 8002b90:	f387 8811 	msr	BASEPRI, r7
 8002b94:	6829      	ldr	r1, [r5, #0]
 8002b96:	68eb      	ldr	r3, [r5, #12]
 8002b98:	1acb      	subs	r3, r1, r3
 8002b9a:	4259      	negs	r1, r3
 8002b9c:	f04f 002f 	mov.w	r0, #47	; 0x2f
 8002ba0:	4159      	adcs	r1, r3
 8002ba2:	f7fd fe55 	bl	8000850 <_test_assert>
 8002ba6:	2300      	movs	r3, #0
 8002ba8:	f383 8811 	msr	BASEPRI, r3
 8002bac:	b003      	add	sp, #12
 8002bae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002bb0:	20000854 	.word	0x20000854
 8002bb4:	08006ab0 	.word	0x08006ab0
 8002bb8:	20000870 	.word	0x20000870
 8002bbc:	20000864 	.word	0x20000864
 8002bc0:	2101      	movs	r1, #1
 8002bc2:	2058      	movs	r0, #88	; 0x58
 8002bc4:	f7ff fdcc 	bl	8002760 <chMBPost.constprop.28>
 8002bc8:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8002bcc:	fab1 f181 	clz	r1, r1
 8002bd0:	0949      	lsrs	r1, r1, #5
 8002bd2:	2004      	movs	r0, #4
 8002bd4:	f7fd fe3c 	bl	8000850 <_test_assert>
 8002bd8:	4604      	mov	r4, r0
 8002bda:	2800      	cmp	r0, #0
 8002bdc:	f47f ae72 	bne.w	80028c4 <mbox1_execute+0x64>
 8002be0:	2620      	movs	r6, #32
 8002be2:	f386 8811 	msr	BASEPRI, r6
 8002be6:	2058      	movs	r0, #88	; 0x58
 8002be8:	f7fe fd1a 	bl	8001620 <chMBPostI.constprop.27>
 8002bec:	4601      	mov	r1, r0
 8002bee:	f384 8811 	msr	BASEPRI, r4
 8002bf2:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 8002bf6:	fab1 f181 	clz	r1, r1
 8002bfa:	2005      	movs	r0, #5
 8002bfc:	0949      	lsrs	r1, r1, #5
 8002bfe:	f7fd fe27 	bl	8000850 <_test_assert>
 8002c02:	2800      	cmp	r0, #0
 8002c04:	f47f ae5e 	bne.w	80028c4 <mbox1_execute+0x64>
 8002c08:	2101      	movs	r1, #1
 8002c0a:	2058      	movs	r0, #88	; 0x58
 8002c0c:	f7ff fdd0 	bl	80027b0 <chMBPostAhead.constprop.26>
 8002c10:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8002c14:	fab1 f181 	clz	r1, r1
 8002c18:	0949      	lsrs	r1, r1, #5
 8002c1a:	2006      	movs	r0, #6
 8002c1c:	f7fd fe18 	bl	8000850 <_test_assert>
 8002c20:	4604      	mov	r4, r0
 8002c22:	2800      	cmp	r0, #0
 8002c24:	f47f ae4e 	bne.w	80028c4 <mbox1_execute+0x64>
 8002c28:	f386 8811 	msr	BASEPRI, r6
 8002c2c:	2058      	movs	r0, #88	; 0x58
 8002c2e:	f7fe fd17 	bl	8001660 <chMBPostAheadI.constprop.25>
 8002c32:	4601      	mov	r1, r0
 8002c34:	f384 8811 	msr	BASEPRI, r4
 8002c38:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 8002c3c:	fab1 f181 	clz	r1, r1
 8002c40:	2007      	movs	r0, #7
 8002c42:	0949      	lsrs	r1, r1, #5
 8002c44:	f7fd fe04 	bl	8000850 <_test_assert>
 8002c48:	4604      	mov	r4, r0
 8002c4a:	2800      	cmp	r0, #0
 8002c4c:	f47f ae3a 	bne.w	80028c4 <mbox1_execute+0x64>
 8002c50:	f386 8811 	msr	BASEPRI, r6
 8002c54:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002c56:	fab1 f181 	clz	r1, r1
 8002c5a:	0949      	lsrs	r1, r1, #5
 8002c5c:	2008      	movs	r0, #8
 8002c5e:	f7fd fdf7 	bl	8000850 <_test_assert>
 8002c62:	4607      	mov	r7, r0
 8002c64:	b110      	cbz	r0, 8002c6c <mbox1_execute+0x40c>
 8002c66:	f384 8811 	msr	BASEPRI, r4
 8002c6a:	e62b      	b.n	80028c4 <mbox1_execute+0x64>
 8002c6c:	f380 8811 	msr	BASEPRI, r0
 8002c70:	f386 8811 	msr	BASEPRI, r6
 8002c74:	69a9      	ldr	r1, [r5, #24]
 8002c76:	f1a1 0e05 	sub.w	lr, r1, #5
 8002c7a:	f1de 0100 	rsbs	r1, lr, #0
 8002c7e:	eb41 010e 	adc.w	r1, r1, lr
 8002c82:	2009      	movs	r0, #9
 8002c84:	f7fd fde4 	bl	8000850 <_test_assert>
 8002c88:	b110      	cbz	r0, 8002c90 <mbox1_execute+0x430>
 8002c8a:	f387 8811 	msr	BASEPRI, r7
 8002c8e:	e619      	b.n	80028c4 <mbox1_execute+0x64>
 8002c90:	f380 8811 	msr	BASEPRI, r0
 8002c94:	f386 8811 	msr	BASEPRI, r6
 8002c98:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002c9c:	eba1 0c03 	sub.w	ip, r1, r3
 8002ca0:	f1dc 0100 	rsbs	r1, ip, #0
 8002ca4:	f04f 000a 	mov.w	r0, #10
 8002ca8:	eb41 010c 	adc.w	r1, r1, ip
 8002cac:	f7fd fdd0 	bl	8000850 <_test_assert>
 8002cb0:	2300      	movs	r3, #0
 8002cb2:	2800      	cmp	r0, #0
 8002cb4:	f47f af78 	bne.w	8002ba8 <mbox1_execute+0x348>
 8002cb8:	f383 8811 	msr	BASEPRI, r3
 8002cbc:	2405      	movs	r4, #5
 8002cbe:	e005      	b.n	8002ccc <mbox1_execute+0x46c>
 8002cc0:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8002cc4:	f7fd fddc 	bl	8000880 <test_emit_token>
 8002cc8:	3c01      	subs	r4, #1
 8002cca:	d00d      	beq.n	8002ce8 <mbox1_execute+0x488>
 8002ccc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002cd0:	a801      	add	r0, sp, #4
 8002cd2:	f7ff fd9d 	bl	8002810 <chMBFetch.constprop.24>
 8002cd6:	fab0 f180 	clz	r1, r0
 8002cda:	0949      	lsrs	r1, r1, #5
 8002cdc:	200b      	movs	r0, #11
 8002cde:	f7fd fdb7 	bl	8000850 <_test_assert>
 8002ce2:	2800      	cmp	r0, #0
 8002ce4:	d0ec      	beq.n	8002cc0 <mbox1_execute+0x460>
 8002ce6:	e5ed      	b.n	80028c4 <mbox1_execute+0x64>
 8002ce8:	4944      	ldr	r1, [pc, #272]	; (8002dfc <mbox1_execute+0x59c>)
 8002cea:	200c      	movs	r0, #12
 8002cec:	f7fd fd88 	bl	8000800 <_test_assert_sequence>
 8002cf0:	2800      	cmp	r0, #0
 8002cf2:	f47f ade7 	bne.w	80028c4 <mbox1_execute+0x64>
 8002cf6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002cfa:	2047      	movs	r0, #71	; 0x47
 8002cfc:	f7ff fd30 	bl	8002760 <chMBPost.constprop.28>
 8002d00:	fab0 f180 	clz	r1, r0
 8002d04:	0949      	lsrs	r1, r1, #5
 8002d06:	200d      	movs	r0, #13
 8002d08:	f7fd fda2 	bl	8000850 <_test_assert>
 8002d0c:	2800      	cmp	r0, #0
 8002d0e:	f47f add9 	bne.w	80028c4 <mbox1_execute+0x64>
 8002d12:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002d16:	a801      	add	r0, sp, #4
 8002d18:	f7ff fd7a 	bl	8002810 <chMBFetch.constprop.24>
 8002d1c:	fab0 f180 	clz	r1, r0
 8002d20:	0949      	lsrs	r1, r1, #5
 8002d22:	200e      	movs	r0, #14
 8002d24:	f7fd fd94 	bl	8000850 <_test_assert>
 8002d28:	2800      	cmp	r0, #0
 8002d2a:	f47f adcb 	bne.w	80028c4 <mbox1_execute+0x64>
 8002d2e:	6829      	ldr	r1, [r5, #0]
 8002d30:	68ab      	ldr	r3, [r5, #8]
 8002d32:	1acf      	subs	r7, r1, r3
 8002d34:	4279      	negs	r1, r7
 8002d36:	4179      	adcs	r1, r7
 8002d38:	200f      	movs	r0, #15
 8002d3a:	f7fd fd89 	bl	8000850 <_test_assert>
 8002d3e:	2800      	cmp	r0, #0
 8002d40:	f47f adc0 	bne.w	80028c4 <mbox1_execute+0x64>
 8002d44:	6829      	ldr	r1, [r5, #0]
 8002d46:	68eb      	ldr	r3, [r5, #12]
 8002d48:	1ace      	subs	r6, r1, r3
 8002d4a:	4271      	negs	r1, r6
 8002d4c:	4171      	adcs	r1, r6
 8002d4e:	2010      	movs	r0, #16
 8002d50:	f7fd fd7e 	bl	8000850 <_test_assert>
 8002d54:	2800      	cmp	r0, #0
 8002d56:	f47f adb5 	bne.w	80028c4 <mbox1_execute+0x64>
 8002d5a:	2101      	movs	r1, #1
 8002d5c:	a801      	add	r0, sp, #4
 8002d5e:	f7ff fd57 	bl	8002810 <chMBFetch.constprop.24>
 8002d62:	3001      	adds	r0, #1
 8002d64:	4241      	negs	r1, r0
 8002d66:	4141      	adcs	r1, r0
 8002d68:	2011      	movs	r0, #17
 8002d6a:	f7fd fd71 	bl	8000850 <_test_assert>
 8002d6e:	2800      	cmp	r0, #0
 8002d70:	f47f ada8 	bne.w	80028c4 <mbox1_execute+0x64>
 8002d74:	2620      	movs	r6, #32
 8002d76:	f386 8811 	msr	BASEPRI, r6
 8002d7a:	a801      	add	r0, sp, #4
 8002d7c:	f7fe fc90 	bl	80016a0 <chMBFetchI.constprop.23>
 8002d80:	4601      	mov	r1, r0
 8002d82:	f384 8811 	msr	BASEPRI, r4
 8002d86:	1c4a      	adds	r2, r1, #1
 8002d88:	4251      	negs	r1, r2
 8002d8a:	4151      	adcs	r1, r2
 8002d8c:	2012      	movs	r0, #18
 8002d8e:	f7fd fd5f 	bl	8000850 <_test_assert>
 8002d92:	2800      	cmp	r0, #0
 8002d94:	f47f ad96 	bne.w	80028c4 <mbox1_execute+0x64>
 8002d98:	f386 8811 	msr	BASEPRI, r6
 8002d9c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002d9e:	1f4b      	subs	r3, r1, #5
 8002da0:	4259      	negs	r1, r3
 8002da2:	4159      	adcs	r1, r3
 8002da4:	2013      	movs	r0, #19
 8002da6:	f7fd fd53 	bl	8000850 <_test_assert>
 8002daa:	2800      	cmp	r0, #0
 8002dac:	f47f aefb 	bne.w	8002ba6 <mbox1_execute+0x346>
 8002db0:	2700      	movs	r7, #0
 8002db2:	f387 8811 	msr	BASEPRI, r7
 8002db6:	2420      	movs	r4, #32
 8002db8:	f384 8811 	msr	BASEPRI, r4
 8002dbc:	69a9      	ldr	r1, [r5, #24]
 8002dbe:	fab1 f181 	clz	r1, r1
 8002dc2:	0949      	lsrs	r1, r1, #5
 8002dc4:	2014      	movs	r0, #20
 8002dc6:	f7fd fd43 	bl	8000850 <_test_assert>
 8002dca:	4606      	mov	r6, r0
 8002dcc:	2800      	cmp	r0, #0
 8002dce:	f47f af5c 	bne.w	8002c8a <mbox1_execute+0x42a>
 8002dd2:	f380 8811 	msr	BASEPRI, r0
 8002dd6:	f384 8811 	msr	BASEPRI, r4
 8002dda:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002dde:	eba1 0e03 	sub.w	lr, r1, r3
 8002de2:	f1de 0100 	rsbs	r1, lr, #0
 8002de6:	eb41 010e 	adc.w	r1, r1, lr
 8002dea:	2015      	movs	r0, #21
 8002dec:	f7fd fd30 	bl	8000850 <_test_assert>
 8002df0:	2800      	cmp	r0, #0
 8002df2:	f43f ad69 	beq.w	80028c8 <mbox1_execute+0x68>
 8002df6:	f386 8811 	msr	BASEPRI, r6
 8002dfa:	e563      	b.n	80028c4 <mbox1_execute+0x64>
 8002dfc:	08006ab0 	.word	0x08006ab0

08002e00 <chThdEnqueueTimeoutS>:
 8002e00:	b161      	cbz	r1, 8002e1c <chThdEnqueueTimeoutS+0x1c>
 8002e02:	4b08      	ldr	r3, [pc, #32]	; (8002e24 <chThdEnqueueTimeoutS+0x24>)
 8002e04:	699b      	ldr	r3, [r3, #24]
 8002e06:	b410      	push	{r4}
 8002e08:	6018      	str	r0, [r3, #0]
 8002e0a:	6844      	ldr	r4, [r0, #4]
 8002e0c:	605c      	str	r4, [r3, #4]
 8002e0e:	4602      	mov	r2, r0
 8002e10:	6023      	str	r3, [r4, #0]
 8002e12:	2004      	movs	r0, #4
 8002e14:	6053      	str	r3, [r2, #4]
 8002e16:	bc10      	pop	{r4}
 8002e18:	f7ff bb8a 	b.w	8002530 <chSchGoSleepTimeoutS>
 8002e1c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002e20:	4770      	bx	lr
 8002e22:	bf00      	nop
 8002e24:	20000ae0 	.word	0x20000ae0
	...

08002e30 <chOQWriteTimeout>:
 8002e30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e34:	b083      	sub	sp, #12
 8002e36:	4604      	mov	r4, r0
 8002e38:	460d      	mov	r5, r1
 8002e3a:	4616      	mov	r6, r2
 8002e3c:	9301      	str	r3, [sp, #4]
 8002e3e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8002e42:	f04f 0920 	mov.w	r9, #32
 8002e46:	f389 8811 	msr	BASEPRI, r9
 8002e4a:	2700      	movs	r7, #0
 8002e4c:	46ba      	mov	sl, r7
 8002e4e:	68a3      	ldr	r3, [r4, #8]
 8002e50:	f105 0b01 	add.w	fp, r5, #1
 8002e54:	1e59      	subs	r1, r3, #1
 8002e56:	4620      	mov	r0, r4
 8002e58:	b1fb      	cbz	r3, 8002e9a <chOQWriteTimeout+0x6a>
 8002e5a:	6963      	ldr	r3, [r4, #20]
 8002e5c:	60a1      	str	r1, [r4, #8]
 8002e5e:	1c59      	adds	r1, r3, #1
 8002e60:	6161      	str	r1, [r4, #20]
 8002e62:	7829      	ldrb	r1, [r5, #0]
 8002e64:	7019      	strb	r1, [r3, #0]
 8002e66:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 8002e6a:	4299      	cmp	r1, r3
 8002e6c:	bf24      	itt	cs
 8002e6e:	68e3      	ldrcs	r3, [r4, #12]
 8002e70:	6163      	strcs	r3, [r4, #20]
 8002e72:	f1b8 0f00 	cmp.w	r8, #0
 8002e76:	d000      	beq.n	8002e7a <chOQWriteTimeout+0x4a>
 8002e78:	47c0      	blx	r8
 8002e7a:	f38a 8811 	msr	BASEPRI, sl
 8002e7e:	3e01      	subs	r6, #1
 8002e80:	f107 0701 	add.w	r7, r7, #1
 8002e84:	d013      	beq.n	8002eae <chOQWriteTimeout+0x7e>
 8002e86:	f389 8811 	msr	BASEPRI, r9
 8002e8a:	68a3      	ldr	r3, [r4, #8]
 8002e8c:	465d      	mov	r5, fp
 8002e8e:	1e59      	subs	r1, r3, #1
 8002e90:	f105 0b01 	add.w	fp, r5, #1
 8002e94:	4620      	mov	r0, r4
 8002e96:	2b00      	cmp	r3, #0
 8002e98:	d1df      	bne.n	8002e5a <chOQWriteTimeout+0x2a>
 8002e9a:	9901      	ldr	r1, [sp, #4]
 8002e9c:	9300      	str	r3, [sp, #0]
 8002e9e:	4620      	mov	r0, r4
 8002ea0:	f7ff ffae 	bl	8002e00 <chThdEnqueueTimeoutS>
 8002ea4:	9b00      	ldr	r3, [sp, #0]
 8002ea6:	2800      	cmp	r0, #0
 8002ea8:	d0d1      	beq.n	8002e4e <chOQWriteTimeout+0x1e>
 8002eaa:	f383 8811 	msr	BASEPRI, r3
 8002eae:	4638      	mov	r0, r7
 8002eb0:	b003      	add	sp, #12
 8002eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002eb6:	bf00      	nop
	...

08002ec0 <writet>:
 8002ec0:	3030      	adds	r0, #48	; 0x30
 8002ec2:	f7ff bfb5 	b.w	8002e30 <chOQWriteTimeout>
 8002ec6:	bf00      	nop
	...

08002ed0 <write>:
 8002ed0:	3030      	adds	r0, #48	; 0x30
 8002ed2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002ed6:	f7ff bfab 	b.w	8002e30 <chOQWriteTimeout>
 8002eda:	bf00      	nop
 8002edc:	0000      	movs	r0, r0
	...

08002ee0 <chOQPutTimeout>:
 8002ee0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002ee2:	4604      	mov	r4, r0
 8002ee4:	460f      	mov	r7, r1
 8002ee6:	4616      	mov	r6, r2
 8002ee8:	2320      	movs	r3, #32
 8002eea:	f383 8811 	msr	BASEPRI, r3
 8002eee:	e003      	b.n	8002ef8 <chOQPutTimeout+0x18>
 8002ef0:	f7ff ff86 	bl	8002e00 <chThdEnqueueTimeoutS>
 8002ef4:	2800      	cmp	r0, #0
 8002ef6:	db17      	blt.n	8002f28 <chOQPutTimeout+0x48>
 8002ef8:	68a5      	ldr	r5, [r4, #8]
 8002efa:	4631      	mov	r1, r6
 8002efc:	4620      	mov	r0, r4
 8002efe:	2d00      	cmp	r5, #0
 8002f00:	d0f6      	beq.n	8002ef0 <chOQPutTimeout+0x10>
 8002f02:	6963      	ldr	r3, [r4, #20]
 8002f04:	3d01      	subs	r5, #1
 8002f06:	1c5a      	adds	r2, r3, #1
 8002f08:	6162      	str	r2, [r4, #20]
 8002f0a:	60a5      	str	r5, [r4, #8]
 8002f0c:	701f      	strb	r7, [r3, #0]
 8002f0e:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8002f12:	429a      	cmp	r2, r3
 8002f14:	bf24      	itt	cs
 8002f16:	68e3      	ldrcs	r3, [r4, #12]
 8002f18:	6163      	strcs	r3, [r4, #20]
 8002f1a:	69e3      	ldr	r3, [r4, #28]
 8002f1c:	b103      	cbz	r3, 8002f20 <chOQPutTimeout+0x40>
 8002f1e:	4798      	blx	r3
 8002f20:	2000      	movs	r0, #0
 8002f22:	f380 8811 	msr	BASEPRI, r0
 8002f26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002f28:	f385 8811 	msr	BASEPRI, r5
 8002f2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002f2e:	bf00      	nop

08002f30 <thread2.lto_priv.87>:
 8002f30:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 8002f34:	2100      	movs	r1, #0
 8002f36:	4801      	ldr	r0, [pc, #4]	; (8002f3c <thread2.lto_priv.87+0xc>)
 8002f38:	f7ff bfd2 	b.w	8002ee0 <chOQPutTimeout>
 8002f3c:	20000888 	.word	0x20000888

08002f40 <putt>:
 8002f40:	3030      	adds	r0, #48	; 0x30
 8002f42:	f7ff bfcd 	b.w	8002ee0 <chOQPutTimeout>
 8002f46:	bf00      	nop
	...

08002f50 <put>:
 8002f50:	3030      	adds	r0, #48	; 0x30
 8002f52:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002f56:	f7ff bfc3 	b.w	8002ee0 <chOQPutTimeout>
 8002f5a:	bf00      	nop
 8002f5c:	0000      	movs	r0, r0
	...

08002f60 <chIQReadTimeout>:
 8002f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f64:	4604      	mov	r4, r0
 8002f66:	b083      	sub	sp, #12
 8002f68:	4689      	mov	r9, r1
 8002f6a:	4693      	mov	fp, r2
 8002f6c:	461d      	mov	r5, r3
 8002f6e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8002f72:	2720      	movs	r7, #32
 8002f74:	f387 8811 	msr	BASEPRI, r7
 8002f78:	2600      	movs	r6, #0
 8002f7a:	9701      	str	r7, [sp, #4]
 8002f7c:	46b2      	mov	sl, r6
 8002f7e:	f1b8 0f00 	cmp.w	r8, #0
 8002f82:	d005      	beq.n	8002f90 <chIQReadTimeout+0x30>
 8002f84:	4620      	mov	r0, r4
 8002f86:	47c0      	blx	r8
 8002f88:	e002      	b.n	8002f90 <chIQReadTimeout+0x30>
 8002f8a:	f7ff ff39 	bl	8002e00 <chThdEnqueueTimeoutS>
 8002f8e:	b9d8      	cbnz	r0, 8002fc8 <chIQReadTimeout+0x68>
 8002f90:	68a7      	ldr	r7, [r4, #8]
 8002f92:	4629      	mov	r1, r5
 8002f94:	4620      	mov	r0, r4
 8002f96:	2f00      	cmp	r7, #0
 8002f98:	d0f7      	beq.n	8002f8a <chIQReadTimeout+0x2a>
 8002f9a:	69a2      	ldr	r2, [r4, #24]
 8002f9c:	3f01      	subs	r7, #1
 8002f9e:	1c51      	adds	r1, r2, #1
 8002fa0:	61a1      	str	r1, [r4, #24]
 8002fa2:	60a7      	str	r7, [r4, #8]
 8002fa4:	7813      	ldrb	r3, [r2, #0]
 8002fa6:	f809 3b01 	strb.w	r3, [r9], #1
 8002faa:	6923      	ldr	r3, [r4, #16]
 8002fac:	69a2      	ldr	r2, [r4, #24]
 8002fae:	429a      	cmp	r2, r3
 8002fb0:	bf24      	itt	cs
 8002fb2:	68e3      	ldrcs	r3, [r4, #12]
 8002fb4:	61a3      	strcs	r3, [r4, #24]
 8002fb6:	f38a 8811 	msr	BASEPRI, sl
 8002fba:	3601      	adds	r6, #1
 8002fbc:	45b3      	cmp	fp, r6
 8002fbe:	d005      	beq.n	8002fcc <chIQReadTimeout+0x6c>
 8002fc0:	9b01      	ldr	r3, [sp, #4]
 8002fc2:	f383 8811 	msr	BASEPRI, r3
 8002fc6:	e7da      	b.n	8002f7e <chIQReadTimeout+0x1e>
 8002fc8:	f387 8811 	msr	BASEPRI, r7
 8002fcc:	4630      	mov	r0, r6
 8002fce:	b003      	add	sp, #12
 8002fd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08002fe0 <readt>:
 8002fe0:	300c      	adds	r0, #12
 8002fe2:	f7ff bfbd 	b.w	8002f60 <chIQReadTimeout>
 8002fe6:	bf00      	nop
	...

08002ff0 <read>:
 8002ff0:	300c      	adds	r0, #12
 8002ff2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002ff6:	f7ff bfb3 	b.w	8002f60 <chIQReadTimeout>
 8002ffa:	bf00      	nop
 8002ffc:	0000      	movs	r0, r0
	...

08003000 <chIQGetTimeout>:
 8003000:	b570      	push	{r4, r5, r6, lr}
 8003002:	2320      	movs	r3, #32
 8003004:	460e      	mov	r6, r1
 8003006:	4604      	mov	r4, r0
 8003008:	f383 8811 	msr	BASEPRI, r3
 800300c:	69c3      	ldr	r3, [r0, #28]
 800300e:	b12b      	cbz	r3, 800301c <chIQGetTimeout+0x1c>
 8003010:	4798      	blx	r3
 8003012:	e003      	b.n	800301c <chIQGetTimeout+0x1c>
 8003014:	f7ff fef4 	bl	8002e00 <chThdEnqueueTimeoutS>
 8003018:	2800      	cmp	r0, #0
 800301a:	db15      	blt.n	8003048 <chIQGetTimeout+0x48>
 800301c:	68a5      	ldr	r5, [r4, #8]
 800301e:	4631      	mov	r1, r6
 8003020:	4620      	mov	r0, r4
 8003022:	2d00      	cmp	r5, #0
 8003024:	d0f6      	beq.n	8003014 <chIQGetTimeout+0x14>
 8003026:	69a2      	ldr	r2, [r4, #24]
 8003028:	6921      	ldr	r1, [r4, #16]
 800302a:	1c53      	adds	r3, r2, #1
 800302c:	428b      	cmp	r3, r1
 800302e:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8003032:	61a3      	str	r3, [r4, #24]
 8003034:	60a5      	str	r5, [r4, #8]
 8003036:	bf28      	it	cs
 8003038:	68e3      	ldrcs	r3, [r4, #12]
 800303a:	7810      	ldrb	r0, [r2, #0]
 800303c:	bf28      	it	cs
 800303e:	61a3      	strcs	r3, [r4, #24]
 8003040:	2300      	movs	r3, #0
 8003042:	f383 8811 	msr	BASEPRI, r3
 8003046:	bd70      	pop	{r4, r5, r6, pc}
 8003048:	f385 8811 	msr	BASEPRI, r5
 800304c:	bd70      	pop	{r4, r5, r6, pc}
 800304e:	bf00      	nop

08003050 <thread1.lto_priv.81>:
 8003050:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8003054:	4801      	ldr	r0, [pc, #4]	; (800305c <thread1.lto_priv.81+0xc>)
 8003056:	f7ff bfd3 	b.w	8003000 <chIQGetTimeout>
 800305a:	bf00      	nop
 800305c:	20000810 	.word	0x20000810

08003060 <gett>:
 8003060:	300c      	adds	r0, #12
 8003062:	f7ff bfcd 	b.w	8003000 <chIQGetTimeout>
 8003066:	bf00      	nop
	...

08003070 <get>:
 8003070:	300c      	adds	r0, #12
 8003072:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003076:	f7ff bfc3 	b.w	8003000 <chIQGetTimeout>
 800307a:	bf00      	nop
 800307c:	0000      	movs	r0, r0
	...

08003080 <chThdSleep>:
 8003080:	b508      	push	{r3, lr}
 8003082:	4601      	mov	r1, r0
 8003084:	2320      	movs	r3, #32
 8003086:	f383 8811 	msr	BASEPRI, r3
 800308a:	2008      	movs	r0, #8
 800308c:	f7ff fa50 	bl	8002530 <chSchGoSleepTimeoutS>
 8003090:	2300      	movs	r3, #0
 8003092:	f383 8811 	msr	BASEPRI, r3
 8003096:	bd08      	pop	{r3, pc}
	...

080030a0 <Thread1>:
 80030a0:	b508      	push	{r3, lr}
 80030a2:	4b09      	ldr	r3, [pc, #36]	; (80030c8 <Thread1+0x28>)
 80030a4:	4a09      	ldr	r2, [pc, #36]	; (80030cc <Thread1+0x2c>)
 80030a6:	699b      	ldr	r3, [r3, #24]
 80030a8:	4c09      	ldr	r4, [pc, #36]	; (80030d0 <Thread1+0x30>)
 80030aa:	619a      	str	r2, [r3, #24]
 80030ac:	f44f 5500 	mov.w	r5, #8192	; 0x2000
 80030b0:	462e      	mov	r6, r5
 80030b2:	8326      	strh	r6, [r4, #24]
 80030b4:	f241 3088 	movw	r0, #5000	; 0x1388
 80030b8:	f7ff ffe2 	bl	8003080 <chThdSleep>
 80030bc:	8365      	strh	r5, [r4, #26]
 80030be:	f241 3088 	movw	r0, #5000	; 0x1388
 80030c2:	f7ff ffdd 	bl	8003080 <chThdSleep>
 80030c6:	e7f4      	b.n	80030b2 <Thread1+0x12>
 80030c8:	20000ae0 	.word	0x20000ae0
 80030cc:	08006640 	.word	0x08006640
 80030d0:	40020c00 	.word	0x40020c00
	...

080030e0 <sys1_execute>:
 80030e0:	b510      	push	{r4, lr}
 80030e2:	b086      	sub	sp, #24
 80030e4:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 80030e8:	b91b      	cbnz	r3, 80030f2 <sys1_execute+0x12>
 80030ea:	f7fe fba9 	bl	8001840 <chSysGetStatusAndLockX.part.2>
 80030ee:	f7fe fff7 	bl	80020e0 <chSysRestoreStatusX.part.3>
 80030f2:	2320      	movs	r3, #32
 80030f4:	f383 8811 	msr	BASEPRI, r3
 80030f8:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 80030fc:	b91b      	cbnz	r3, 8003106 <sys1_execute+0x26>
 80030fe:	f7fe fb9f 	bl	8001840 <chSysGetStatusAndLockX.part.2>
 8003102:	f7fe ffed 	bl	80020e0 <chSysRestoreStatusX.part.3>
 8003106:	2300      	movs	r3, #0
 8003108:	f383 8811 	msr	BASEPRI, r3
 800310c:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8003110:	b913      	cbnz	r3, 8003118 <sys1_execute+0x38>
 8003112:	2320      	movs	r3, #32
 8003114:	f383 8811 	msr	BASEPRI, r3
 8003118:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800311c:	b913      	cbnz	r3, 8003124 <sys1_execute+0x44>
 800311e:	2320      	movs	r3, #32
 8003120:	f383 8811 	msr	BASEPRI, r3
 8003124:	2300      	movs	r3, #0
 8003126:	f383 8811 	msr	BASEPRI, r3
 800312a:	2220      	movs	r2, #32
 800312c:	f382 8811 	msr	BASEPRI, r2
 8003130:	f3ef 8212 	mrs	r2, BASEPRI_MAX
 8003134:	b10a      	cbz	r2, 800313a <sys1_execute+0x5a>
 8003136:	f383 8811 	msr	BASEPRI, r3
 800313a:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800313e:	b113      	cbz	r3, 8003146 <sys1_execute+0x66>
 8003140:	2300      	movs	r3, #0
 8003142:	f383 8811 	msr	BASEPRI, r3
 8003146:	2300      	movs	r3, #0
 8003148:	9304      	str	r3, [sp, #16]
 800314a:	2320      	movs	r3, #32
 800314c:	f383 8811 	msr	BASEPRI, r3
 8003150:	9b04      	ldr	r3, [sp, #16]
 8003152:	ac01      	add	r4, sp, #4
 8003154:	b113      	cbz	r3, 800315c <sys1_execute+0x7c>
 8003156:	4620      	mov	r0, r4
 8003158:	f7fe fada 	bl	8001710 <chVTDoResetI>
 800315c:	4620      	mov	r0, r4
 800315e:	2300      	movs	r3, #0
 8003160:	4a0b      	ldr	r2, [pc, #44]	; (8003190 <sys1_execute+0xb0>)
 8003162:	2101      	movs	r1, #1
 8003164:	f7fe fb0c 	bl	8001780 <chVTDoSetI>
 8003168:	2400      	movs	r4, #0
 800316a:	f384 8811 	msr	BASEPRI, r4
 800316e:	200a      	movs	r0, #10
 8003170:	f7ff ff86 	bl	8003080 <chThdSleep>
 8003174:	2320      	movs	r3, #32
 8003176:	f383 8811 	msr	BASEPRI, r3
 800317a:	9904      	ldr	r1, [sp, #16]
 800317c:	f384 8811 	msr	BASEPRI, r4
 8003180:	fab1 f181 	clz	r1, r1
 8003184:	0949      	lsrs	r1, r1, #5
 8003186:	2001      	movs	r0, #1
 8003188:	f7fd fb62 	bl	8000850 <_test_assert>
 800318c:	b006      	add	sp, #24
 800318e:	bd10      	pop	{r4, pc}
 8003190:	08002101 	.word	0x08002101
	...

080031a0 <thread1.lto_priv.80>:
 80031a0:	b510      	push	{r4, lr}
 80031a2:	4604      	mov	r4, r0
 80031a4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80031a8:	f7ff ff6a 	bl	8003080 <chThdSleep>
 80031ac:	2320      	movs	r3, #32
 80031ae:	f383 8811 	msr	BASEPRI, r3
 80031b2:	2101      	movs	r1, #1
 80031b4:	4620      	mov	r0, r4
 80031b6:	f7fe f923 	bl	8001400 <chEvtSignalI>
 80031ba:	f7fe fe89 	bl	8001ed0 <chSchRescheduleS>
 80031be:	2300      	movs	r3, #0
 80031c0:	f383 8811 	msr	BASEPRI, r3
 80031c4:	bd10      	pop	{r4, pc}
 80031c6:	bf00      	nop
	...

080031d0 <thread2.lto_priv.86>:
 80031d0:	b538      	push	{r3, r4, r5, lr}
 80031d2:	2520      	movs	r5, #32
 80031d4:	f385 8811 	msr	BASEPRI, r5
 80031d8:	2100      	movs	r1, #0
 80031da:	480b      	ldr	r0, [pc, #44]	; (8003208 <thread2.lto_priv.86+0x38>)
 80031dc:	f7fe f928 	bl	8001430 <chEvtBroadcastFlagsI>
 80031e0:	2400      	movs	r4, #0
 80031e2:	f7fe fe75 	bl	8001ed0 <chSchRescheduleS>
 80031e6:	f384 8811 	msr	BASEPRI, r4
 80031ea:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80031ee:	f7ff ff47 	bl	8003080 <chThdSleep>
 80031f2:	f385 8811 	msr	BASEPRI, r5
 80031f6:	4805      	ldr	r0, [pc, #20]	; (800320c <thread2.lto_priv.86+0x3c>)
 80031f8:	4621      	mov	r1, r4
 80031fa:	f7fe f919 	bl	8001430 <chEvtBroadcastFlagsI>
 80031fe:	f7fe fe67 	bl	8001ed0 <chSchRescheduleS>
 8003202:	f384 8811 	msr	BASEPRI, r4
 8003206:	bd38      	pop	{r3, r4, r5, pc}
 8003208:	20000808 	.word	0x20000808
 800320c:	2000080c 	.word	0x2000080c

08003210 <thread2.lto_priv.85>:
 8003210:	b508      	push	{r3, lr}
 8003212:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003216:	f7ff ff33 	bl	8003080 <chThdSleep>
 800321a:	2320      	movs	r3, #32
 800321c:	f383 8811 	msr	BASEPRI, r3
 8003220:	4804      	ldr	r0, [pc, #16]	; (8003234 <thread2.lto_priv.85+0x24>)
 8003222:	f7fe f9ed 	bl	8001600 <chSemSignalI>
 8003226:	f7fe fe53 	bl	8001ed0 <chSchRescheduleS>
 800322a:	2300      	movs	r3, #0
 800322c:	f383 8811 	msr	BASEPRI, r3
 8003230:	bd08      	pop	{r3, pc}
 8003232:	bf00      	nop
 8003234:	200008ac 	.word	0x200008ac
	...

08003240 <test_wait_tick>:
 8003240:	b508      	push	{r3, lr}
 8003242:	2001      	movs	r0, #1
 8003244:	f7ff ff1c 	bl	8003080 <chThdSleep>
 8003248:	2320      	movs	r3, #32
 800324a:	f383 8811 	msr	BASEPRI, r3
 800324e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003252:	2300      	movs	r3, #0
 8003254:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8003256:	f383 8811 	msr	BASEPRI, r3
 800325a:	bd08      	pop	{r3, pc}
 800325c:	0000      	movs	r0, r0
	...

08003260 <bmk10_execute>:
 8003260:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003264:	f7ff ffec 	bl	8003240 <test_wait_tick>
 8003268:	f7fe faca 	bl	8001800 <test_start_timer.constprop.1>
 800326c:	2400      	movs	r4, #0
 800326e:	f8df a070 	ldr.w	sl, [pc, #112]	; 80032e0 <bmk10_execute+0x80>
 8003272:	4f16      	ldr	r7, [pc, #88]	; (80032cc <bmk10_execute+0x6c>)
 8003274:	4e16      	ldr	r6, [pc, #88]	; (80032d0 <bmk10_execute+0x70>)
 8003276:	4d17      	ldr	r5, [pc, #92]	; (80032d4 <bmk10_execute+0x74>)
 8003278:	46a1      	mov	r9, r4
 800327a:	f04f 0820 	mov.w	r8, #32
 800327e:	f388 8811 	msr	BASEPRI, r8
 8003282:	2300      	movs	r3, #0
 8003284:	463a      	mov	r2, r7
 8003286:	4630      	mov	r0, r6
 8003288:	2101      	movs	r1, #1
 800328a:	f7fe fa79 	bl	8001780 <chVTDoSetI>
 800328e:	463a      	mov	r2, r7
 8003290:	2300      	movs	r3, #0
 8003292:	f242 7110 	movw	r1, #10000	; 0x2710
 8003296:	4628      	mov	r0, r5
 8003298:	f7fe fa72 	bl	8001780 <chVTDoSetI>
 800329c:	4630      	mov	r0, r6
 800329e:	f7fe fa37 	bl	8001710 <chVTDoResetI>
 80032a2:	4628      	mov	r0, r5
 80032a4:	f7fe fa34 	bl	8001710 <chVTDoResetI>
 80032a8:	f389 8811 	msr	BASEPRI, r9
 80032ac:	f89a 3000 	ldrb.w	r3, [sl]
 80032b0:	3401      	adds	r4, #1
 80032b2:	2b00      	cmp	r3, #0
 80032b4:	d0e3      	beq.n	800327e <bmk10_execute+0x1e>
 80032b6:	4808      	ldr	r0, [pc, #32]	; (80032d8 <bmk10_execute+0x78>)
 80032b8:	f7fd fb3a 	bl	8000930 <test_print>
 80032bc:	0060      	lsls	r0, r4, #1
 80032be:	f7fd fa3f 	bl	8000740 <test_printn>
 80032c2:	4806      	ldr	r0, [pc, #24]	; (80032dc <bmk10_execute+0x7c>)
 80032c4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80032c8:	f7fd bb12 	b.w	80008f0 <test_println>
 80032cc:	08000441 	.word	0x08000441
 80032d0:	200013d8 	.word	0x200013d8
 80032d4:	200013ec 	.word	0x200013ec
 80032d8:	08006680 	.word	0x08006680
 80032dc:	08006690 	.word	0x08006690
 80032e0:	20001398 	.word	0x20001398
	...

080032f0 <bmk9_execute>:
 80032f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80032f2:	4b26      	ldr	r3, [pc, #152]	; (800338c <bmk9_execute+0x9c>)
 80032f4:	4c26      	ldr	r4, [pc, #152]	; (8003390 <bmk9_execute+0xa0>)
 80032f6:	4f27      	ldr	r7, [pc, #156]	; (8003394 <bmk9_execute+0xa4>)
 80032f8:	60e3      	str	r3, [r4, #12]
 80032fa:	f103 0210 	add.w	r2, r3, #16
 80032fe:	2500      	movs	r5, #0
 8003300:	6122      	str	r2, [r4, #16]
 8003302:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8003306:	6024      	str	r4, [r4, #0]
 8003308:	6064      	str	r4, [r4, #4]
 800330a:	60a5      	str	r5, [r4, #8]
 800330c:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8003310:	f7ff ff96 	bl	8003240 <test_wait_tick>
 8003314:	f7fe fa74 	bl	8001800 <test_start_timer.constprop.1>
 8003318:	462e      	mov	r6, r5
 800331a:	2320      	movs	r3, #32
 800331c:	f383 8811 	msr	BASEPRI, r3
 8003320:	2100      	movs	r1, #0
 8003322:	4620      	mov	r0, r4
 8003324:	f7fe f81c 	bl	8001360 <chIQPutI>
 8003328:	4620      	mov	r0, r4
 800332a:	2101      	movs	r1, #1
 800332c:	f7fe f818 	bl	8001360 <chIQPutI>
 8003330:	4620      	mov	r0, r4
 8003332:	2102      	movs	r1, #2
 8003334:	f7fe f814 	bl	8001360 <chIQPutI>
 8003338:	4620      	mov	r0, r4
 800333a:	2103      	movs	r1, #3
 800333c:	f7fe f810 	bl	8001360 <chIQPutI>
 8003340:	f386 8811 	msr	BASEPRI, r6
 8003344:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003348:	4620      	mov	r0, r4
 800334a:	f7ff fe59 	bl	8003000 <chIQGetTimeout>
 800334e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003352:	4620      	mov	r0, r4
 8003354:	f7ff fe54 	bl	8003000 <chIQGetTimeout>
 8003358:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800335c:	4620      	mov	r0, r4
 800335e:	f7ff fe4f 	bl	8003000 <chIQGetTimeout>
 8003362:	4620      	mov	r0, r4
 8003364:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003368:	f7ff fe4a 	bl	8003000 <chIQGetTimeout>
 800336c:	783b      	ldrb	r3, [r7, #0]
 800336e:	3501      	adds	r5, #1
 8003370:	2b00      	cmp	r3, #0
 8003372:	d0d2      	beq.n	800331a <bmk9_execute+0x2a>
 8003374:	4808      	ldr	r0, [pc, #32]	; (8003398 <bmk9_execute+0xa8>)
 8003376:	f7fd fadb 	bl	8000930 <test_print>
 800337a:	00a8      	lsls	r0, r5, #2
 800337c:	f7fd f9e0 	bl	8000740 <test_printn>
 8003380:	4806      	ldr	r0, [pc, #24]	; (800339c <bmk9_execute+0xac>)
 8003382:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003386:	f7fd bab3 	b.w	80008f0 <test_println>
 800338a:	bf00      	nop
 800338c:	20000ca0 	.word	0x20000ca0
 8003390:	20000cb0 	.word	0x20000cb0
 8003394:	20001398 	.word	0x20001398
 8003398:	08006680 	.word	0x08006680
 800339c:	080067c0 	.word	0x080067c0

080033a0 <bmk6_execute>:
 80033a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80033a4:	4b14      	ldr	r3, [pc, #80]	; (80033f8 <bmk6_execute+0x58>)
 80033a6:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8003408 <bmk6_execute+0x68>
 80033aa:	699b      	ldr	r3, [r3, #24]
 80033ac:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800340c <bmk6_execute+0x6c>
 80033b0:	689d      	ldr	r5, [r3, #8]
 80033b2:	4f12      	ldr	r7, [pc, #72]	; (80033fc <bmk6_execute+0x5c>)
 80033b4:	b083      	sub	sp, #12
 80033b6:	f7ff ff43 	bl	8003240 <test_wait_tick>
 80033ba:	f7fe fa21 	bl	8001800 <test_start_timer.constprop.1>
 80033be:	2400      	movs	r4, #0
 80033c0:	3501      	adds	r5, #1
 80033c2:	4626      	mov	r6, r4
 80033c4:	4643      	mov	r3, r8
 80033c6:	9600      	str	r6, [sp, #0]
 80033c8:	462a      	mov	r2, r5
 80033ca:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80033ce:	4638      	mov	r0, r7
 80033d0:	f7fe ff8e 	bl	80022f0 <chThdCreateStatic>
 80033d4:	f899 3000 	ldrb.w	r3, [r9]
 80033d8:	3401      	adds	r4, #1
 80033da:	2b00      	cmp	r3, #0
 80033dc:	d0f2      	beq.n	80033c4 <bmk6_execute+0x24>
 80033de:	4808      	ldr	r0, [pc, #32]	; (8003400 <bmk6_execute+0x60>)
 80033e0:	f7fd faa6 	bl	8000930 <test_print>
 80033e4:	4620      	mov	r0, r4
 80033e6:	f7fd f9ab 	bl	8000740 <test_printn>
 80033ea:	4806      	ldr	r0, [pc, #24]	; (8003404 <bmk6_execute+0x64>)
 80033ec:	b003      	add	sp, #12
 80033ee:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80033f2:	f7fd ba7d 	b.w	80008f0 <test_println>
 80033f6:	bf00      	nop
 80033f8:	20000ae0 	.word	0x20000ae0
 80033fc:	20000d08 	.word	0x20000d08
 8003400:	08006680 	.word	0x08006680
 8003404:	08006780 	.word	0x08006780
 8003408:	20001398 	.word	0x20001398
 800340c:	08006601 	.word	0x08006601

08003410 <thd4_execute>:
 8003410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003412:	f7ff ff15 	bl	8003240 <test_wait_tick>
 8003416:	2620      	movs	r6, #32
 8003418:	f386 8811 	msr	BASEPRI, r6
 800341c:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8003420:	2300      	movs	r3, #0
 8003422:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8003424:	f383 8811 	msr	BASEPRI, r3
 8003428:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800342c:	f7ff fe28 	bl	8003080 <chThdSleep>
 8003430:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8003434:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8003438:	2001      	movs	r0, #1
 800343a:	f7fd f9c1 	bl	80007c0 <_test_assert_time_window>
 800343e:	b100      	cbz	r0, 8003442 <thd4_execute+0x32>
 8003440:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003442:	f386 8811 	msr	BASEPRI, r6
 8003446:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8003448:	f380 8811 	msr	BASEPRI, r0
 800344c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8003450:	f7ff fe16 	bl	8003080 <chThdSleep>
 8003454:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8003458:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 800345c:	2002      	movs	r0, #2
 800345e:	f7fd f9af 	bl	80007c0 <_test_assert_time_window>
 8003462:	2800      	cmp	r0, #0
 8003464:	d1ec      	bne.n	8003440 <thd4_execute+0x30>
 8003466:	f386 8811 	msr	BASEPRI, r6
 800346a:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 800346c:	f380 8811 	msr	BASEPRI, r0
 8003470:	f242 7010 	movw	r0, #10000	; 0x2710
 8003474:	f7ff fe04 	bl	8003080 <chThdSleep>
 8003478:	f504 521c 	add.w	r2, r4, #9984	; 0x2700
 800347c:	4611      	mov	r1, r2
 800347e:	3110      	adds	r1, #16
 8003480:	3213      	adds	r2, #19
 8003482:	2003      	movs	r0, #3
 8003484:	f7fd f99c 	bl	80007c0 <_test_assert_time_window>
 8003488:	2800      	cmp	r0, #0
 800348a:	d1d9      	bne.n	8003440 <thd4_execute+0x30>
 800348c:	f386 8811 	msr	BASEPRI, r6
 8003490:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 8003492:	f380 8811 	msr	BASEPRI, r0
 8003496:	f507 747a 	add.w	r4, r7, #1000	; 0x3e8
 800349a:	f386 8811 	msr	BASEPRI, r6
 800349e:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80034a0:	1a61      	subs	r1, r4, r1
 80034a2:	d002      	beq.n	80034aa <thd4_execute+0x9a>
 80034a4:	2008      	movs	r0, #8
 80034a6:	f7ff f843 	bl	8002530 <chSchGoSleepTimeoutS>
 80034aa:	2300      	movs	r3, #0
 80034ac:	f383 8811 	msr	BASEPRI, r3
 80034b0:	2004      	movs	r0, #4
 80034b2:	f207 32eb 	addw	r2, r7, #1003	; 0x3eb
 80034b6:	4621      	mov	r1, r4
 80034b8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80034bc:	f7fd b980 	b.w	80007c0 <_test_assert_time_window>

080034c0 <chMsgWait>:
 80034c0:	b510      	push	{r4, lr}
 80034c2:	2320      	movs	r3, #32
 80034c4:	f383 8811 	msr	BASEPRI, r3
 80034c8:	4c0b      	ldr	r4, [pc, #44]	; (80034f8 <chMsgWait+0x38>)
 80034ca:	69a2      	ldr	r2, [r4, #24]
 80034cc:	4613      	mov	r3, r2
 80034ce:	f853 0f28 	ldr.w	r0, [r3, #40]!
 80034d2:	4298      	cmp	r0, r3
 80034d4:	d008      	beq.n	80034e8 <chMsgWait+0x28>
 80034d6:	6801      	ldr	r1, [r0, #0]
 80034d8:	6291      	str	r1, [r2, #40]	; 0x28
 80034da:	220d      	movs	r2, #13
 80034dc:	604b      	str	r3, [r1, #4]
 80034de:	2300      	movs	r3, #0
 80034e0:	7702      	strb	r2, [r0, #28]
 80034e2:	f383 8811 	msr	BASEPRI, r3
 80034e6:	bd10      	pop	{r4, pc}
 80034e8:	200e      	movs	r0, #14
 80034ea:	f7fe ff39 	bl	8002360 <chSchGoSleepS>
 80034ee:	69a2      	ldr	r2, [r4, #24]
 80034f0:	6a90      	ldr	r0, [r2, #40]	; 0x28
 80034f2:	f102 0328 	add.w	r3, r2, #40	; 0x28
 80034f6:	e7ee      	b.n	80034d6 <chMsgWait+0x16>
 80034f8:	20000ae0 	.word	0x20000ae0
 80034fc:	00000000 	.word	0x00000000

08003500 <thread2.lto_priv.88>:
 8003500:	b570      	push	{r4, r5, r6, lr}
 8003502:	2620      	movs	r6, #32
 8003504:	2500      	movs	r5, #0
 8003506:	f7ff ffdb 	bl	80034c0 <chMsgWait>
 800350a:	6b04      	ldr	r4, [r0, #48]	; 0x30
 800350c:	f386 8811 	msr	BASEPRI, r6
 8003510:	4621      	mov	r1, r4
 8003512:	f7fe fe0d 	bl	8002130 <chSchWakeupS>
 8003516:	f385 8811 	msr	BASEPRI, r5
 800351a:	2c00      	cmp	r4, #0
 800351c:	d1f3      	bne.n	8003506 <thread2.lto_priv.88+0x6>
 800351e:	bd70      	pop	{r4, r5, r6, pc}

08003520 <msg1_execute>:
 8003520:	b570      	push	{r4, r5, r6, lr}
 8003522:	4a1f      	ldr	r2, [pc, #124]	; (80035a0 <msg1_execute+0x80>)
 8003524:	4b1f      	ldr	r3, [pc, #124]	; (80035a4 <msg1_execute+0x84>)
 8003526:	6991      	ldr	r1, [r2, #24]
 8003528:	481f      	ldr	r0, [pc, #124]	; (80035a8 <msg1_execute+0x88>)
 800352a:	688a      	ldr	r2, [r1, #8]
 800352c:	b082      	sub	sp, #8
 800352e:	3201      	adds	r2, #1
 8003530:	9100      	str	r1, [sp, #0]
 8003532:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003536:	f7fe fedb 	bl	80022f0 <chThdCreateStatic>
 800353a:	4b1c      	ldr	r3, [pc, #112]	; (80035ac <msg1_execute+0x8c>)
 800353c:	6018      	str	r0, [r3, #0]
 800353e:	f7ff ffbf 	bl	80034c0 <chMsgWait>
 8003542:	2520      	movs	r5, #32
 8003544:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8003546:	f385 8811 	msr	BASEPRI, r5
 800354a:	4631      	mov	r1, r6
 800354c:	f7fe fdf0 	bl	8002130 <chSchWakeupS>
 8003550:	2400      	movs	r4, #0
 8003552:	f384 8811 	msr	BASEPRI, r4
 8003556:	b2f0      	uxtb	r0, r6
 8003558:	f7fd f992 	bl	8000880 <test_emit_token>
 800355c:	f7ff ffb0 	bl	80034c0 <chMsgWait>
 8003560:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8003562:	f385 8811 	msr	BASEPRI, r5
 8003566:	4631      	mov	r1, r6
 8003568:	f7fe fde2 	bl	8002130 <chSchWakeupS>
 800356c:	f384 8811 	msr	BASEPRI, r4
 8003570:	b2f0      	uxtb	r0, r6
 8003572:	f7fd f985 	bl	8000880 <test_emit_token>
 8003576:	f7ff ffa3 	bl	80034c0 <chMsgWait>
 800357a:	6b06      	ldr	r6, [r0, #48]	; 0x30
 800357c:	f385 8811 	msr	BASEPRI, r5
 8003580:	4631      	mov	r1, r6
 8003582:	f7fe fdd5 	bl	8002130 <chSchWakeupS>
 8003586:	f384 8811 	msr	BASEPRI, r4
 800358a:	b2f0      	uxtb	r0, r6
 800358c:	f7fd f978 	bl	8000880 <test_emit_token>
 8003590:	4907      	ldr	r1, [pc, #28]	; (80035b0 <msg1_execute+0x90>)
 8003592:	2001      	movs	r0, #1
 8003594:	b002      	add	sp, #8
 8003596:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800359a:	f7fd b931 	b.w	8000800 <_test_assert_sequence>
 800359e:	bf00      	nop
 80035a0:	20000ae0 	.word	0x20000ae0
 80035a4:	08003631 	.word	0x08003631
 80035a8:	20000d08 	.word	0x20000d08
 80035ac:	2000139c 	.word	0x2000139c
 80035b0:	08006860 	.word	0x08006860
	...

080035c0 <chMsgSend>:
 80035c0:	4b0e      	ldr	r3, [pc, #56]	; (80035fc <chMsgSend+0x3c>)
 80035c2:	b510      	push	{r4, lr}
 80035c4:	2220      	movs	r2, #32
 80035c6:	699c      	ldr	r4, [r3, #24]
 80035c8:	f382 8811 	msr	BASEPRI, r2
 80035cc:	f100 0228 	add.w	r2, r0, #40	; 0x28
 80035d0:	6222      	str	r2, [r4, #32]
 80035d2:	6022      	str	r2, [r4, #0]
 80035d4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80035d6:	6062      	str	r2, [r4, #4]
 80035d8:	6321      	str	r1, [r4, #48]	; 0x30
 80035da:	6014      	str	r4, [r2, #0]
 80035dc:	7f02      	ldrb	r2, [r0, #28]
 80035de:	62c4      	str	r4, [r0, #44]	; 0x2c
 80035e0:	2a0e      	cmp	r2, #14
 80035e2:	d007      	beq.n	80035f4 <chMsgSend+0x34>
 80035e4:	200c      	movs	r0, #12
 80035e6:	f7fe febb 	bl	8002360 <chSchGoSleepS>
 80035ea:	6a20      	ldr	r0, [r4, #32]
 80035ec:	2300      	movs	r3, #0
 80035ee:	f383 8811 	msr	BASEPRI, r3
 80035f2:	bd10      	pop	{r4, pc}
 80035f4:	f7fd fd1c 	bl	8001030 <chSchReadyI>
 80035f8:	e7f4      	b.n	80035e4 <chMsgSend+0x24>
 80035fa:	bf00      	nop
 80035fc:	20000ae0 	.word	0x20000ae0

08003600 <msg_loop_test>:
 8003600:	b570      	push	{r4, r5, r6, lr}
 8003602:	4605      	mov	r5, r0
 8003604:	f7ff fe1c 	bl	8003240 <test_wait_tick>
 8003608:	f7fe f8fa 	bl	8001800 <test_start_timer.constprop.1>
 800360c:	4e07      	ldr	r6, [pc, #28]	; (800362c <msg_loop_test+0x2c>)
 800360e:	2400      	movs	r4, #0
 8003610:	2101      	movs	r1, #1
 8003612:	4628      	mov	r0, r5
 8003614:	f7ff ffd4 	bl	80035c0 <chMsgSend>
 8003618:	7833      	ldrb	r3, [r6, #0]
 800361a:	3401      	adds	r4, #1
 800361c:	2b00      	cmp	r3, #0
 800361e:	d0f7      	beq.n	8003610 <msg_loop_test+0x10>
 8003620:	4628      	mov	r0, r5
 8003622:	2100      	movs	r1, #0
 8003624:	f7ff ffcc 	bl	80035c0 <chMsgSend>
 8003628:	4620      	mov	r0, r4
 800362a:	bd70      	pop	{r4, r5, r6, pc}
 800362c:	20001398 	.word	0x20001398

08003630 <thread.lto_priv.70>:
 8003630:	b510      	push	{r4, lr}
 8003632:	2141      	movs	r1, #65	; 0x41
 8003634:	4604      	mov	r4, r0
 8003636:	f7ff ffc3 	bl	80035c0 <chMsgSend>
 800363a:	4620      	mov	r0, r4
 800363c:	2142      	movs	r1, #66	; 0x42
 800363e:	f7ff ffbf 	bl	80035c0 <chMsgSend>
 8003642:	4620      	mov	r0, r4
 8003644:	2143      	movs	r1, #67	; 0x43
 8003646:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800364a:	f7ff bfb9 	b.w	80035c0 <chMsgSend>
 800364e:	bf00      	nop

08003650 <chMtxLockS>:
 8003650:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003652:	4a36      	ldr	r2, [pc, #216]	; (800372c <chMtxLockS+0xdc>)
 8003654:	6883      	ldr	r3, [r0, #8]
 8003656:	6995      	ldr	r5, [r2, #24]
 8003658:	2b00      	cmp	r3, #0
 800365a:	d03f      	beq.n	80036dc <chMtxLockS+0x8c>
 800365c:	68a9      	ldr	r1, [r5, #8]
 800365e:	689a      	ldr	r2, [r3, #8]
 8003660:	4291      	cmp	r1, r2
 8003662:	4604      	mov	r4, r0
 8003664:	d906      	bls.n	8003674 <chMtxLockS+0x24>
 8003666:	7f1a      	ldrb	r2, [r3, #28]
 8003668:	6099      	str	r1, [r3, #8]
 800366a:	2a06      	cmp	r2, #6
 800366c:	d03b      	beq.n	80036e6 <chMtxLockS+0x96>
 800366e:	2a07      	cmp	r2, #7
 8003670:	d015      	beq.n	800369e <chMtxLockS+0x4e>
 8003672:	b342      	cbz	r2, 80036c6 <chMtxLockS+0x76>
 8003674:	4626      	mov	r6, r4
 8003676:	4623      	mov	r3, r4
 8003678:	e003      	b.n	8003682 <chMtxLockS+0x32>
 800367a:	6899      	ldr	r1, [r3, #8]
 800367c:	68aa      	ldr	r2, [r5, #8]
 800367e:	4291      	cmp	r1, r2
 8003680:	d32a      	bcc.n	80036d8 <chMtxLockS+0x88>
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	429c      	cmp	r4, r3
 8003686:	d1f8      	bne.n	800367a <chMtxLockS+0x2a>
 8003688:	6873      	ldr	r3, [r6, #4]
 800368a:	2006      	movs	r0, #6
 800368c:	e9c5 6300 	strd	r6, r3, [r5]
 8003690:	601d      	str	r5, [r3, #0]
 8003692:	6075      	str	r5, [r6, #4]
 8003694:	622c      	str	r4, [r5, #32]
 8003696:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800369a:	f7fe be61 	b.w	8002360 <chSchGoSleepS>
 800369e:	e9d3 0200 	ldrd	r0, r2, [r3]
 80036a2:	6010      	str	r0, [r2, #0]
 80036a4:	6a1e      	ldr	r6, [r3, #32]
 80036a6:	6818      	ldr	r0, [r3, #0]
 80036a8:	6042      	str	r2, [r0, #4]
 80036aa:	4632      	mov	r2, r6
 80036ac:	e002      	b.n	80036b4 <chMtxLockS+0x64>
 80036ae:	6890      	ldr	r0, [r2, #8]
 80036b0:	4288      	cmp	r0, r1
 80036b2:	d332      	bcc.n	800371a <chMtxLockS+0xca>
 80036b4:	6812      	ldr	r2, [r2, #0]
 80036b6:	4296      	cmp	r6, r2
 80036b8:	d1f9      	bne.n	80036ae <chMtxLockS+0x5e>
 80036ba:	6872      	ldr	r2, [r6, #4]
 80036bc:	e9c3 6200 	strd	r6, r2, [r3]
 80036c0:	6013      	str	r3, [r2, #0]
 80036c2:	6073      	str	r3, [r6, #4]
 80036c4:	e7d6      	b.n	8003674 <chMtxLockS+0x24>
 80036c6:	e9d3 1200 	ldrd	r1, r2, [r3]
 80036ca:	6011      	str	r1, [r2, #0]
 80036cc:	6819      	ldr	r1, [r3, #0]
 80036ce:	4618      	mov	r0, r3
 80036d0:	604a      	str	r2, [r1, #4]
 80036d2:	f7fd fcad 	bl	8001030 <chSchReadyI>
 80036d6:	e7cd      	b.n	8003674 <chMtxLockS+0x24>
 80036d8:	461e      	mov	r6, r3
 80036da:	e7d5      	b.n	8003688 <chMtxLockS+0x38>
 80036dc:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80036de:	e9c0 5302 	strd	r5, r3, [r0, #8]
 80036e2:	63a8      	str	r0, [r5, #56]	; 0x38
 80036e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80036e6:	e9d3 0200 	ldrd	r0, r2, [r3]
 80036ea:	6010      	str	r0, [r2, #0]
 80036ec:	6a1e      	ldr	r6, [r3, #32]
 80036ee:	6818      	ldr	r0, [r3, #0]
 80036f0:	4637      	mov	r7, r6
 80036f2:	6042      	str	r2, [r0, #4]
 80036f4:	4632      	mov	r2, r6
 80036f6:	e002      	b.n	80036fe <chMtxLockS+0xae>
 80036f8:	6890      	ldr	r0, [r2, #8]
 80036fa:	4288      	cmp	r0, r1
 80036fc:	d314      	bcc.n	8003728 <chMtxLockS+0xd8>
 80036fe:	6812      	ldr	r2, [r2, #0]
 8003700:	4296      	cmp	r6, r2
 8003702:	d1f9      	bne.n	80036f8 <chMtxLockS+0xa8>
 8003704:	687a      	ldr	r2, [r7, #4]
 8003706:	68a9      	ldr	r1, [r5, #8]
 8003708:	e9c3 7200 	strd	r7, r2, [r3]
 800370c:	6013      	str	r3, [r2, #0]
 800370e:	607b      	str	r3, [r7, #4]
 8003710:	68b3      	ldr	r3, [r6, #8]
 8003712:	689a      	ldr	r2, [r3, #8]
 8003714:	428a      	cmp	r2, r1
 8003716:	d3a6      	bcc.n	8003666 <chMtxLockS+0x16>
 8003718:	e7ac      	b.n	8003674 <chMtxLockS+0x24>
 800371a:	4616      	mov	r6, r2
 800371c:	6872      	ldr	r2, [r6, #4]
 800371e:	e9c3 6200 	strd	r6, r2, [r3]
 8003722:	6013      	str	r3, [r2, #0]
 8003724:	6073      	str	r3, [r6, #4]
 8003726:	e7a5      	b.n	8003674 <chMtxLockS+0x24>
 8003728:	4617      	mov	r7, r2
 800372a:	e7eb      	b.n	8003704 <chMtxLockS+0xb4>
 800372c:	20000ae0 	.word	0x20000ae0

08003730 <chMtxLock>:
 8003730:	b508      	push	{r3, lr}
 8003732:	2320      	movs	r3, #32
 8003734:	f383 8811 	msr	BASEPRI, r3
 8003738:	f7ff ff8a 	bl	8003650 <chMtxLockS>
 800373c:	2300      	movs	r3, #0
 800373e:	f383 8811 	msr	BASEPRI, r3
 8003742:	bd08      	pop	{r3, pc}
	...

08003750 <bmk12_execute>:
 8003750:	b570      	push	{r4, r5, r6, lr}
 8003752:	f7ff fd75 	bl	8003240 <test_wait_tick>
 8003756:	f7fe f853 	bl	8001800 <test_start_timer.constprop.1>
 800375a:	4e15      	ldr	r6, [pc, #84]	; (80037b0 <bmk12_execute+0x60>)
 800375c:	4c15      	ldr	r4, [pc, #84]	; (80037b4 <bmk12_execute+0x64>)
 800375e:	2500      	movs	r5, #0
 8003760:	4620      	mov	r0, r4
 8003762:	f7ff ffe5 	bl	8003730 <chMtxLock>
 8003766:	4620      	mov	r0, r4
 8003768:	f7fe fd72 	bl	8002250 <chMtxUnlock>
 800376c:	4620      	mov	r0, r4
 800376e:	f7ff ffdf 	bl	8003730 <chMtxLock>
 8003772:	4620      	mov	r0, r4
 8003774:	f7fe fd6c 	bl	8002250 <chMtxUnlock>
 8003778:	4620      	mov	r0, r4
 800377a:	f7ff ffd9 	bl	8003730 <chMtxLock>
 800377e:	4620      	mov	r0, r4
 8003780:	f7fe fd66 	bl	8002250 <chMtxUnlock>
 8003784:	4620      	mov	r0, r4
 8003786:	f7ff ffd3 	bl	8003730 <chMtxLock>
 800378a:	4620      	mov	r0, r4
 800378c:	f7fe fd60 	bl	8002250 <chMtxUnlock>
 8003790:	7833      	ldrb	r3, [r6, #0]
 8003792:	3501      	adds	r5, #1
 8003794:	2b00      	cmp	r3, #0
 8003796:	d0e3      	beq.n	8003760 <bmk12_execute+0x10>
 8003798:	4807      	ldr	r0, [pc, #28]	; (80037b8 <bmk12_execute+0x68>)
 800379a:	f7fd f8c9 	bl	8000930 <test_print>
 800379e:	00a8      	lsls	r0, r5, #2
 80037a0:	f7fc ffce 	bl	8000740 <test_printn>
 80037a4:	4805      	ldr	r0, [pc, #20]	; (80037bc <bmk12_execute+0x6c>)
 80037a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80037aa:	f7fd b8a1 	b.w	80008f0 <test_println>
 80037ae:	bf00      	nop
 80037b0:	20001398 	.word	0x20001398
 80037b4:	20000ce4 	.word	0x20000ce4
 80037b8:	08006680 	.word	0x08006680
 80037bc:	080066b0 	.word	0x080066b0

080037c0 <thread11>:
 80037c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037c2:	4607      	mov	r7, r0
 80037c4:	481b      	ldr	r0, [pc, #108]	; (8003834 <thread11+0x74>)
 80037c6:	f7ff ffb3 	bl	8003730 <chMtxLock>
 80037ca:	481b      	ldr	r0, [pc, #108]	; (8003838 <thread11+0x78>)
 80037cc:	f7ff ffb0 	bl	8003730 <chMtxLock>
 80037d0:	2320      	movs	r3, #32
 80037d2:	f383 8811 	msr	BASEPRI, r3
 80037d6:	4d19      	ldr	r5, [pc, #100]	; (800383c <thread11+0x7c>)
 80037d8:	69ab      	ldr	r3, [r5, #24]
 80037da:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 80037dc:	4630      	mov	r0, r6
 80037de:	f7fd fee7 	bl	80015b0 <chMtxUnlockS>
 80037e2:	4b17      	ldr	r3, [pc, #92]	; (8003840 <thread11+0x80>)
 80037e4:	69ac      	ldr	r4, [r5, #24]
 80037e6:	4618      	mov	r0, r3
 80037e8:	6223      	str	r3, [r4, #32]
 80037ea:	e003      	b.n	80037f4 <thread11+0x34>
 80037ec:	6899      	ldr	r1, [r3, #8]
 80037ee:	68a2      	ldr	r2, [r4, #8]
 80037f0:	4291      	cmp	r1, r2
 80037f2:	d302      	bcc.n	80037fa <thread11+0x3a>
 80037f4:	681b      	ldr	r3, [r3, #0]
 80037f6:	4283      	cmp	r3, r0
 80037f8:	d1f8      	bne.n	80037ec <thread11+0x2c>
 80037fa:	685a      	ldr	r2, [r3, #4]
 80037fc:	2007      	movs	r0, #7
 80037fe:	e9c4 3200 	strd	r3, r2, [r4]
 8003802:	6014      	str	r4, [r2, #0]
 8003804:	605c      	str	r4, [r3, #4]
 8003806:	f7fe fdab 	bl	8002360 <chSchGoSleepS>
 800380a:	69ab      	ldr	r3, [r5, #24]
 800380c:	6a1b      	ldr	r3, [r3, #32]
 800380e:	3301      	adds	r3, #1
 8003810:	d002      	beq.n	8003818 <thread11+0x58>
 8003812:	4630      	mov	r0, r6
 8003814:	f7ff ff1c 	bl	8003650 <chMtxLockS>
 8003818:	2300      	movs	r3, #0
 800381a:	f383 8811 	msr	BASEPRI, r3
 800381e:	7838      	ldrb	r0, [r7, #0]
 8003820:	f7fd f82e 	bl	8000880 <test_emit_token>
 8003824:	4804      	ldr	r0, [pc, #16]	; (8003838 <thread11+0x78>)
 8003826:	f7fe fd13 	bl	8002250 <chMtxUnlock>
 800382a:	4802      	ldr	r0, [pc, #8]	; (8003834 <thread11+0x74>)
 800382c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003830:	f7fe bd0e 	b.w	8002250 <chMtxUnlock>
 8003834:	20000844 	.word	0x20000844
 8003838:	20000834 	.word	0x20000834
 800383c:	20000ae0 	.word	0x20000ae0
 8003840:	20000800 	.word	0x20000800
	...

08003850 <thread10>:
 8003850:	b570      	push	{r4, r5, r6, lr}
 8003852:	4606      	mov	r6, r0
 8003854:	4816      	ldr	r0, [pc, #88]	; (80038b0 <thread10+0x60>)
 8003856:	f7ff ff6b 	bl	8003730 <chMtxLock>
 800385a:	2320      	movs	r3, #32
 800385c:	f383 8811 	msr	BASEPRI, r3
 8003860:	4b14      	ldr	r3, [pc, #80]	; (80038b4 <thread10+0x64>)
 8003862:	699c      	ldr	r4, [r3, #24]
 8003864:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8003866:	4628      	mov	r0, r5
 8003868:	f7fd fea2 	bl	80015b0 <chMtxUnlockS>
 800386c:	4812      	ldr	r0, [pc, #72]	; (80038b8 <thread10+0x68>)
 800386e:	6220      	str	r0, [r4, #32]
 8003870:	4603      	mov	r3, r0
 8003872:	e003      	b.n	800387c <thread10+0x2c>
 8003874:	6899      	ldr	r1, [r3, #8]
 8003876:	68a2      	ldr	r2, [r4, #8]
 8003878:	4291      	cmp	r1, r2
 800387a:	d302      	bcc.n	8003882 <thread10+0x32>
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	4283      	cmp	r3, r0
 8003880:	d1f8      	bne.n	8003874 <thread10+0x24>
 8003882:	685a      	ldr	r2, [r3, #4]
 8003884:	2007      	movs	r0, #7
 8003886:	e9c4 3200 	strd	r3, r2, [r4]
 800388a:	6014      	str	r4, [r2, #0]
 800388c:	605c      	str	r4, [r3, #4]
 800388e:	f7fe fd67 	bl	8002360 <chSchGoSleepS>
 8003892:	4628      	mov	r0, r5
 8003894:	f7ff fedc 	bl	8003650 <chMtxLockS>
 8003898:	2300      	movs	r3, #0
 800389a:	f383 8811 	msr	BASEPRI, r3
 800389e:	7830      	ldrb	r0, [r6, #0]
 80038a0:	f7fc ffee 	bl	8000880 <test_emit_token>
 80038a4:	4802      	ldr	r0, [pc, #8]	; (80038b0 <thread10+0x60>)
 80038a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80038aa:	f7fe bcd1 	b.w	8002250 <chMtxUnlock>
 80038ae:	bf00      	nop
 80038b0:	20000834 	.word	0x20000834
 80038b4:	20000ae0 	.word	0x20000ae0
 80038b8:	20000800 	.word	0x20000800
 80038bc:	00000000 	.word	0x00000000

080038c0 <thread12>:
 80038c0:	b538      	push	{r3, r4, r5, lr}
 80038c2:	4c06      	ldr	r4, [pc, #24]	; (80038dc <thread12+0x1c>)
 80038c4:	4605      	mov	r5, r0
 80038c6:	4620      	mov	r0, r4
 80038c8:	f7ff ff32 	bl	8003730 <chMtxLock>
 80038cc:	7828      	ldrb	r0, [r5, #0]
 80038ce:	f7fc ffd7 	bl	8000880 <test_emit_token>
 80038d2:	4620      	mov	r0, r4
 80038d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80038d8:	f7fe bcba 	b.w	8002250 <chMtxUnlock>
 80038dc:	20000844 	.word	0x20000844

080038e0 <mtx5_execute>:
 80038e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80038e2:	4d37      	ldr	r5, [pc, #220]	; (80039c0 <mtx5_execute+0xe0>)
 80038e4:	69aa      	ldr	r2, [r5, #24]
 80038e6:	2320      	movs	r3, #32
 80038e8:	6896      	ldr	r6, [r2, #8]
 80038ea:	f383 8811 	msr	BASEPRI, r3
 80038ee:	4c35      	ldr	r4, [pc, #212]	; (80039c4 <mtx5_execute+0xe4>)
 80038f0:	68a3      	ldr	r3, [r4, #8]
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	d057      	beq.n	80039a6 <mtx5_execute+0xc6>
 80038f6:	2100      	movs	r1, #0
 80038f8:	2300      	movs	r3, #0
 80038fa:	f383 8811 	msr	BASEPRI, r3
 80038fe:	2001      	movs	r0, #1
 8003900:	f7fc ffa6 	bl	8000850 <_test_assert>
 8003904:	4601      	mov	r1, r0
 8003906:	b100      	cbz	r0, 800390a <mtx5_execute+0x2a>
 8003908:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800390a:	2320      	movs	r3, #32
 800390c:	f383 8811 	msr	BASEPRI, r3
 8003910:	68a3      	ldr	r3, [r4, #8]
 8003912:	2b00      	cmp	r3, #0
 8003914:	d04e      	beq.n	80039b4 <mtx5_execute+0xd4>
 8003916:	2101      	movs	r1, #1
 8003918:	2300      	movs	r3, #0
 800391a:	f383 8811 	msr	BASEPRI, r3
 800391e:	2002      	movs	r0, #2
 8003920:	f7fc ff96 	bl	8000850 <_test_assert>
 8003924:	4607      	mov	r7, r0
 8003926:	2800      	cmp	r0, #0
 8003928:	d1ee      	bne.n	8003908 <mtx5_execute+0x28>
 800392a:	2320      	movs	r3, #32
 800392c:	f383 8811 	msr	BASEPRI, r3
 8003930:	4824      	ldr	r0, [pc, #144]	; (80039c4 <mtx5_execute+0xe4>)
 8003932:	f7fd fe3d 	bl	80015b0 <chMtxUnlockS>
 8003936:	f387 8811 	msr	BASEPRI, r7
 800393a:	6821      	ldr	r1, [r4, #0]
 800393c:	1b09      	subs	r1, r1, r4
 800393e:	fab1 f181 	clz	r1, r1
 8003942:	2003      	movs	r0, #3
 8003944:	0949      	lsrs	r1, r1, #5
 8003946:	f7fc ff83 	bl	8000850 <_test_assert>
 800394a:	2800      	cmp	r0, #0
 800394c:	d1dc      	bne.n	8003908 <mtx5_execute+0x28>
 800394e:	68a1      	ldr	r1, [r4, #8]
 8003950:	fab1 f181 	clz	r1, r1
 8003954:	0949      	lsrs	r1, r1, #5
 8003956:	2004      	movs	r0, #4
 8003958:	f7fc ff7a 	bl	8000850 <_test_assert>
 800395c:	2800      	cmp	r0, #0
 800395e:	d1d3      	bne.n	8003908 <mtx5_execute+0x28>
 8003960:	69ab      	ldr	r3, [r5, #24]
 8003962:	6899      	ldr	r1, [r3, #8]
 8003964:	1b89      	subs	r1, r1, r6
 8003966:	fab1 f181 	clz	r1, r1
 800396a:	2005      	movs	r0, #5
 800396c:	0949      	lsrs	r1, r1, #5
 800396e:	f7fc ff6f 	bl	8000850 <_test_assert>
 8003972:	2800      	cmp	r0, #0
 8003974:	d1c8      	bne.n	8003908 <mtx5_execute+0x28>
 8003976:	4813      	ldr	r0, [pc, #76]	; (80039c4 <mtx5_execute+0xe4>)
 8003978:	f7ff feda 	bl	8003730 <chMtxLock>
 800397c:	f7fe fad0 	bl	8001f20 <chMtxUnlockAll>
 8003980:	6821      	ldr	r1, [r4, #0]
 8003982:	1b09      	subs	r1, r1, r4
 8003984:	fab1 f181 	clz	r1, r1
 8003988:	2006      	movs	r0, #6
 800398a:	0949      	lsrs	r1, r1, #5
 800398c:	f7fc ff60 	bl	8000850 <_test_assert>
 8003990:	2800      	cmp	r0, #0
 8003992:	d1b9      	bne.n	8003908 <mtx5_execute+0x28>
 8003994:	68a1      	ldr	r1, [r4, #8]
 8003996:	fab1 f181 	clz	r1, r1
 800399a:	0949      	lsrs	r1, r1, #5
 800399c:	2007      	movs	r0, #7
 800399e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80039a2:	f7fc bf55 	b.w	8000850 <_test_assert>
 80039a6:	69ab      	ldr	r3, [r5, #24]
 80039a8:	60a3      	str	r3, [r4, #8]
 80039aa:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80039ac:	60e2      	str	r2, [r4, #12]
 80039ae:	639c      	str	r4, [r3, #56]	; 0x38
 80039b0:	2101      	movs	r1, #1
 80039b2:	e7a1      	b.n	80038f8 <mtx5_execute+0x18>
 80039b4:	69ab      	ldr	r3, [r5, #24]
 80039b6:	60a3      	str	r3, [r4, #8]
 80039b8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80039ba:	60e2      	str	r2, [r4, #12]
 80039bc:	639c      	str	r4, [r3, #56]	; 0x38
 80039be:	e7ab      	b.n	8003918 <mtx5_execute+0x38>
 80039c0:	20000ae0 	.word	0x20000ae0
 80039c4:	20000834 	.word	0x20000834
	...

080039d0 <thread4a>:
 80039d0:	b510      	push	{r4, lr}
 80039d2:	4c06      	ldr	r4, [pc, #24]	; (80039ec <thread4a+0x1c>)
 80039d4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80039d8:	f7ff fb52 	bl	8003080 <chThdSleep>
 80039dc:	4620      	mov	r0, r4
 80039de:	f7ff fea7 	bl	8003730 <chMtxLock>
 80039e2:	4620      	mov	r0, r4
 80039e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80039e8:	f7fe bc32 	b.w	8002250 <chMtxUnlock>
 80039ec:	20000844 	.word	0x20000844

080039f0 <thread4b>:
 80039f0:	b510      	push	{r4, lr}
 80039f2:	4c06      	ldr	r4, [pc, #24]	; (8003a0c <thread4b+0x1c>)
 80039f4:	f240 50dc 	movw	r0, #1500	; 0x5dc
 80039f8:	f7ff fb42 	bl	8003080 <chThdSleep>
 80039fc:	4620      	mov	r0, r4
 80039fe:	f7ff fe97 	bl	8003730 <chMtxLock>
 8003a02:	4620      	mov	r0, r4
 8003a04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003a08:	f7fe bc22 	b.w	8002250 <chMtxUnlock>
 8003a0c:	20000834 	.word	0x20000834

08003a10 <thread1.lto_priv.79>:
 8003a10:	b538      	push	{r3, r4, r5, lr}
 8003a12:	4c06      	ldr	r4, [pc, #24]	; (8003a2c <thread1.lto_priv.79+0x1c>)
 8003a14:	4605      	mov	r5, r0
 8003a16:	4620      	mov	r0, r4
 8003a18:	f7ff fe8a 	bl	8003730 <chMtxLock>
 8003a1c:	7828      	ldrb	r0, [r5, #0]
 8003a1e:	f7fc ff2f 	bl	8000880 <test_emit_token>
 8003a22:	4620      	mov	r0, r4
 8003a24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003a28:	f7fe bc12 	b.w	8002250 <chMtxUnlock>
 8003a2c:	20000834 	.word	0x20000834

08003a30 <chHeapStatus>:
 8003a30:	b570      	push	{r4, r5, r6, lr}
 8003a32:	4c11      	ldr	r4, [pc, #68]	; (8003a78 <chHeapStatus+0x48>)
 8003a34:	2800      	cmp	r0, #0
 8003a36:	bf18      	it	ne
 8003a38:	4604      	movne	r4, r0
 8003a3a:	f104 0510 	add.w	r5, r4, #16
 8003a3e:	4628      	mov	r0, r5
 8003a40:	460e      	mov	r6, r1
 8003a42:	f7ff fe75 	bl	8003730 <chMtxLock>
 8003a46:	68a3      	ldr	r3, [r4, #8]
 8003a48:	b16b      	cbz	r3, 8003a66 <chHeapStatus+0x36>
 8003a4a:	2200      	movs	r2, #0
 8003a4c:	4614      	mov	r4, r2
 8003a4e:	e9d3 3000 	ldrd	r3, r0, [r3]
 8003a52:	3401      	adds	r4, #1
 8003a54:	4402      	add	r2, r0
 8003a56:	2b00      	cmp	r3, #0
 8003a58:	d1f9      	bne.n	8003a4e <chHeapStatus+0x1e>
 8003a5a:	4628      	mov	r0, r5
 8003a5c:	6032      	str	r2, [r6, #0]
 8003a5e:	f7fe fbf7 	bl	8002250 <chMtxUnlock>
 8003a62:	4620      	mov	r0, r4
 8003a64:	bd70      	pop	{r4, r5, r6, pc}
 8003a66:	461a      	mov	r2, r3
 8003a68:	461c      	mov	r4, r3
 8003a6a:	4628      	mov	r0, r5
 8003a6c:	6032      	str	r2, [r6, #0]
 8003a6e:	f7fe fbef 	bl	8002250 <chMtxUnlock>
 8003a72:	4620      	mov	r0, r4
 8003a74:	bd70      	pop	{r4, r5, r6, pc}
 8003a76:	bf00      	nop
 8003a78:	20000c38 	.word	0x20000c38
 8003a7c:	00000000 	.word	0x00000000

08003a80 <chHeapFree>:
 8003a80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003a82:	f850 5c08 	ldr.w	r5, [r0, #-8]
 8003a86:	f105 0710 	add.w	r7, r5, #16
 8003a8a:	4606      	mov	r6, r0
 8003a8c:	f1a0 0408 	sub.w	r4, r0, #8
 8003a90:	3508      	adds	r5, #8
 8003a92:	4638      	mov	r0, r7
 8003a94:	f7ff fe4c 	bl	8003730 <chMtxLock>
 8003a98:	462b      	mov	r3, r5
 8003a9a:	42ab      	cmp	r3, r5
 8003a9c:	681a      	ldr	r2, [r3, #0]
 8003a9e:	d001      	beq.n	8003aa4 <chHeapFree+0x24>
 8003aa0:	42a3      	cmp	r3, r4
 8003aa2:	d202      	bcs.n	8003aaa <chHeapFree+0x2a>
 8003aa4:	b11a      	cbz	r2, 8003aae <chHeapFree+0x2e>
 8003aa6:	4294      	cmp	r4, r2
 8003aa8:	d301      	bcc.n	8003aae <chHeapFree+0x2e>
 8003aaa:	4613      	mov	r3, r2
 8003aac:	e7f5      	b.n	8003a9a <chHeapFree+0x1a>
 8003aae:	f846 2c08 	str.w	r2, [r6, #-8]
 8003ab2:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8003ab6:	601c      	str	r4, [r3, #0]
 8003ab8:	f856 0c08 	ldr.w	r0, [r6, #-8]
 8003abc:	18b1      	adds	r1, r6, r2
 8003abe:	4281      	cmp	r1, r0
 8003ac0:	d00a      	beq.n	8003ad8 <chHeapFree+0x58>
 8003ac2:	6859      	ldr	r1, [r3, #4]
 8003ac4:	f101 0208 	add.w	r2, r1, #8
 8003ac8:	441a      	add	r2, r3
 8003aca:	4294      	cmp	r4, r2
 8003acc:	d012      	beq.n	8003af4 <chHeapFree+0x74>
 8003ace:	4638      	mov	r0, r7
 8003ad0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003ad4:	f7fe bbbc 	b.w	8002250 <chMtxUnlock>
 8003ad8:	6849      	ldr	r1, [r1, #4]
 8003ada:	58b0      	ldr	r0, [r6, r2]
 8003adc:	f846 0c08 	str.w	r0, [r6, #-8]
 8003ae0:	3208      	adds	r2, #8
 8003ae2:	440a      	add	r2, r1
 8003ae4:	f846 2c04 	str.w	r2, [r6, #-4]
 8003ae8:	6859      	ldr	r1, [r3, #4]
 8003aea:	f101 0208 	add.w	r2, r1, #8
 8003aee:	441a      	add	r2, r3
 8003af0:	4294      	cmp	r4, r2
 8003af2:	d1ec      	bne.n	8003ace <chHeapFree+0x4e>
 8003af4:	e956 0202 	ldrd	r0, r2, [r6, #-8]
 8003af8:	3208      	adds	r2, #8
 8003afa:	4411      	add	r1, r2
 8003afc:	6018      	str	r0, [r3, #0]
 8003afe:	6059      	str	r1, [r3, #4]
 8003b00:	4638      	mov	r0, r7
 8003b02:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003b06:	f7fe bba3 	b.w	8002250 <chMtxUnlock>
 8003b0a:	bf00      	nop
 8003b0c:	0000      	movs	r0, r0
	...

08003b10 <chThdRelease>:
 8003b10:	b430      	push	{r4, r5}
 8003b12:	2120      	movs	r1, #32
 8003b14:	f381 8811 	msr	BASEPRI, r1
 8003b18:	7f83      	ldrb	r3, [r0, #30]
 8003b1a:	3b01      	subs	r3, #1
 8003b1c:	b2db      	uxtb	r3, r3
 8003b1e:	7783      	strb	r3, [r0, #30]
 8003b20:	2400      	movs	r4, #0
 8003b22:	f384 8811 	msr	BASEPRI, r4
 8003b26:	b91b      	cbnz	r3, 8003b30 <chThdRelease+0x20>
 8003b28:	7f04      	ldrb	r4, [r0, #28]
 8003b2a:	2c0f      	cmp	r4, #15
 8003b2c:	4602      	mov	r2, r0
 8003b2e:	d001      	beq.n	8003b34 <chThdRelease+0x24>
 8003b30:	bc30      	pop	{r4, r5}
 8003b32:	4770      	bx	lr
 8003b34:	7f44      	ldrb	r4, [r0, #29]
 8003b36:	f004 0403 	and.w	r4, r4, #3
 8003b3a:	2c01      	cmp	r4, #1
 8003b3c:	d00f      	beq.n	8003b5e <chThdRelease+0x4e>
 8003b3e:	2c02      	cmp	r4, #2
 8003b40:	d1f6      	bne.n	8003b30 <chThdRelease+0x20>
 8003b42:	e9d0 0404 	ldrd	r0, r4, [r0, #16]
 8003b46:	6120      	str	r0, [r4, #16]
 8003b48:	6915      	ldr	r5, [r2, #16]
 8003b4a:	6c10      	ldr	r0, [r2, #64]	; 0x40
 8003b4c:	616c      	str	r4, [r5, #20]
 8003b4e:	f381 8811 	msr	BASEPRI, r1
 8003b52:	6801      	ldr	r1, [r0, #0]
 8003b54:	6011      	str	r1, [r2, #0]
 8003b56:	6002      	str	r2, [r0, #0]
 8003b58:	f383 8811 	msr	BASEPRI, r3
 8003b5c:	e7e8      	b.n	8003b30 <chThdRelease+0x20>
 8003b5e:	e9d0 1304 	ldrd	r1, r3, [r0, #16]
 8003b62:	6119      	str	r1, [r3, #16]
 8003b64:	6902      	ldr	r2, [r0, #16]
 8003b66:	bc30      	pop	{r4, r5}
 8003b68:	6153      	str	r3, [r2, #20]
 8003b6a:	f7ff bf89 	b.w	8003a80 <chHeapFree>
 8003b6e:	bf00      	nop

08003b70 <regfind>:
 8003b70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003b74:	4680      	mov	r8, r0
 8003b76:	2520      	movs	r5, #32
 8003b78:	f385 8811 	msr	BASEPRI, r5
 8003b7c:	4f18      	ldr	r7, [pc, #96]	; (8003be0 <regfind+0x70>)
 8003b7e:	6938      	ldr	r0, [r7, #16]
 8003b80:	7f83      	ldrb	r3, [r0, #30]
 8003b82:	3301      	adds	r3, #1
 8003b84:	7783      	strb	r3, [r0, #30]
 8003b86:	2600      	movs	r6, #0
 8003b88:	f386 8811 	msr	BASEPRI, r6
 8003b8c:	eba8 0900 	sub.w	r9, r8, r0
 8003b90:	fab9 f989 	clz	r9, r9
 8003b94:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8003b98:	f385 8811 	msr	BASEPRI, r5
 8003b9c:	6904      	ldr	r4, [r0, #16]
 8003b9e:	42bc      	cmp	r4, r7
 8003ba0:	bf08      	it	eq
 8003ba2:	4604      	moveq	r4, r0
 8003ba4:	d101      	bne.n	8003baa <regfind+0x3a>
 8003ba6:	e011      	b.n	8003bcc <regfind+0x5c>
 8003ba8:	461c      	mov	r4, r3
 8003baa:	7fa3      	ldrb	r3, [r4, #30]
 8003bac:	3301      	adds	r3, #1
 8003bae:	77a3      	strb	r3, [r4, #30]
 8003bb0:	f386 8811 	msr	BASEPRI, r6
 8003bb4:	f7ff ffac 	bl	8003b10 <chThdRelease>
 8003bb8:	45a0      	cmp	r8, r4
 8003bba:	bf08      	it	eq
 8003bbc:	f049 0901 	orreq.w	r9, r9, #1
 8003bc0:	f385 8811 	msr	BASEPRI, r5
 8003bc4:	6923      	ldr	r3, [r4, #16]
 8003bc6:	42bb      	cmp	r3, r7
 8003bc8:	4620      	mov	r0, r4
 8003bca:	d1ed      	bne.n	8003ba8 <regfind+0x38>
 8003bcc:	2300      	movs	r3, #0
 8003bce:	f383 8811 	msr	BASEPRI, r3
 8003bd2:	4620      	mov	r0, r4
 8003bd4:	f7ff ff9c 	bl	8003b10 <chThdRelease>
 8003bd8:	4648      	mov	r0, r9
 8003bda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003bde:	bf00      	nop
 8003be0:	20000ae0 	.word	0x20000ae0
	...

08003bf0 <chHeapAlloc>:
 8003bf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003bf2:	4e20      	ldr	r6, [pc, #128]	; (8003c74 <chHeapAlloc+0x84>)
 8003bf4:	2800      	cmp	r0, #0
 8003bf6:	bf18      	it	ne
 8003bf8:	4606      	movne	r6, r0
 8003bfa:	f106 0710 	add.w	r7, r6, #16
 8003bfe:	3107      	adds	r1, #7
 8003c00:	4638      	mov	r0, r7
 8003c02:	f021 0507 	bic.w	r5, r1, #7
 8003c06:	f106 0408 	add.w	r4, r6, #8
 8003c0a:	f7ff fd91 	bl	8003730 <chMtxLock>
 8003c0e:	e003      	b.n	8003c18 <chHeapAlloc+0x28>
 8003c10:	6843      	ldr	r3, [r0, #4]
 8003c12:	42ab      	cmp	r3, r5
 8003c14:	d212      	bcs.n	8003c3c <chHeapAlloc+0x4c>
 8003c16:	4604      	mov	r4, r0
 8003c18:	6820      	ldr	r0, [r4, #0]
 8003c1a:	2800      	cmp	r0, #0
 8003c1c:	d1f8      	bne.n	8003c10 <chHeapAlloc+0x20>
 8003c1e:	4638      	mov	r0, r7
 8003c20:	f7fe fb16 	bl	8002250 <chMtxUnlock>
 8003c24:	6833      	ldr	r3, [r6, #0]
 8003c26:	b313      	cbz	r3, 8003c6e <chHeapAlloc+0x7e>
 8003c28:	f105 0008 	add.w	r0, r5, #8
 8003c2c:	4798      	blx	r3
 8003c2e:	b1f0      	cbz	r0, 8003c6e <chHeapAlloc+0x7e>
 8003c30:	e9c0 6500 	strd	r6, r5, [r0]
 8003c34:	f100 0408 	add.w	r4, r0, #8
 8003c38:	4620      	mov	r0, r4
 8003c3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003c3c:	f105 0208 	add.w	r2, r5, #8
 8003c40:	4293      	cmp	r3, r2
 8003c42:	6801      	ldr	r1, [r0, #0]
 8003c44:	d208      	bcs.n	8003c58 <chHeapAlloc+0x68>
 8003c46:	6021      	str	r1, [r4, #0]
 8003c48:	4604      	mov	r4, r0
 8003c4a:	4638      	mov	r0, r7
 8003c4c:	f844 6b08 	str.w	r6, [r4], #8
 8003c50:	f7fe fafe 	bl	8002250 <chMtxUnlock>
 8003c54:	4620      	mov	r0, r4
 8003c56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003c58:	eb00 0c02 	add.w	ip, r0, r2
 8003c5c:	1b5b      	subs	r3, r3, r5
 8003c5e:	3b08      	subs	r3, #8
 8003c60:	5081      	str	r1, [r0, r2]
 8003c62:	f8cc 3004 	str.w	r3, [ip, #4]
 8003c66:	f8c4 c000 	str.w	ip, [r4]
 8003c6a:	6045      	str	r5, [r0, #4]
 8003c6c:	e7ec      	b.n	8003c48 <chHeapAlloc+0x58>
 8003c6e:	2400      	movs	r4, #0
 8003c70:	e7e2      	b.n	8003c38 <chHeapAlloc+0x48>
 8003c72:	bf00      	nop
 8003c74:	20000c38 	.word	0x20000c38
	...

08003c80 <chThdCreateFromHeap.constprop.61>:
 8003c80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c82:	4605      	mov	r5, r0
 8003c84:	460e      	mov	r6, r1
 8003c86:	481b      	ldr	r0, [pc, #108]	; (8003cf4 <chThdCreateFromHeap.constprop.61+0x74>)
 8003c88:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003c8c:	f7ff ffb0 	bl	8003bf0 <chHeapAlloc>
 8003c90:	4604      	mov	r4, r0
 8003c92:	b360      	cbz	r0, 8003cee <chThdCreateFromHeap.constprop.61+0x6e>
 8003c94:	2320      	movs	r3, #32
 8003c96:	f383 8811 	msr	BASEPRI, r3
 8003c9a:	4a17      	ldr	r2, [pc, #92]	; (8003cf8 <chThdCreateFromHeap.constprop.61+0x78>)
 8003c9c:	6102      	str	r2, [r0, #16]
 8003c9e:	6957      	ldr	r7, [r2, #20]
 8003ca0:	f8c0 6128 	str.w	r6, [r0, #296]	; 0x128
 8003ca4:	f500 7192 	add.w	r1, r0, #292	; 0x124
 8003ca8:	2302      	movs	r3, #2
 8003caa:	6085      	str	r5, [r0, #8]
 8003cac:	60c1      	str	r1, [r0, #12]
 8003cae:	63c5      	str	r5, [r0, #60]	; 0x3c
 8003cb0:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8003cb4:	2500      	movs	r5, #0
 8003cb6:	7703      	strb	r3, [r0, #28]
 8003cb8:	f8df e040 	ldr.w	lr, [pc, #64]	; 8003cfc <chThdCreateFromHeap.constprop.61+0x7c>
 8003cbc:	f8df c040 	ldr.w	ip, [pc, #64]	; 8003d00 <chThdCreateFromHeap.constprop.61+0x80>
 8003cc0:	6147      	str	r7, [r0, #20]
 8003cc2:	2601      	movs	r6, #1
 8003cc4:	f100 0328 	add.w	r3, r0, #40	; 0x28
 8003cc8:	f8c0 e124 	str.w	lr, [r0, #292]	; 0x124
 8003ccc:	f8c0 c144 	str.w	ip, [r0, #324]	; 0x144
 8003cd0:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8003cd4:	6185      	str	r5, [r0, #24]
 8003cd6:	7786      	strb	r6, [r0, #30]
 8003cd8:	6138      	str	r0, [r7, #16]
 8003cda:	6241      	str	r1, [r0, #36]	; 0x24
 8003cdc:	7746      	strb	r6, [r0, #29]
 8003cde:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8003ce2:	4629      	mov	r1, r5
 8003ce4:	6150      	str	r0, [r2, #20]
 8003ce6:	f7fe fa23 	bl	8002130 <chSchWakeupS>
 8003cea:	f385 8811 	msr	BASEPRI, r5
 8003cee:	4620      	mov	r0, r4
 8003cf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003cf2:	bf00      	nop
 8003cf4:	20000c80 	.word	0x20000c80
 8003cf8:	20000ae0 	.word	0x20000ae0
 8003cfc:	080008e1 	.word	0x080008e1
 8003d00:	08000291 	.word	0x08000291
	...

08003d10 <dyn3_execute>:
 8003d10:	4b46      	ldr	r3, [pc, #280]	; (8003e2c <dyn3_execute+0x11c>)
 8003d12:	4947      	ldr	r1, [pc, #284]	; (8003e30 <dyn3_execute+0x120>)
 8003d14:	699b      	ldr	r3, [r3, #24]
 8003d16:	6898      	ldr	r0, [r3, #8]
 8003d18:	b510      	push	{r4, lr}
 8003d1a:	3801      	subs	r0, #1
 8003d1c:	f7ff ffb0 	bl	8003c80 <chThdCreateFromHeap.constprop.61>
 8003d20:	4604      	mov	r4, r0
 8003d22:	2001      	movs	r0, #1
 8003d24:	7fa1      	ldrb	r1, [r4, #30]
 8003d26:	1a09      	subs	r1, r1, r0
 8003d28:	fab1 f181 	clz	r1, r1
 8003d2c:	0949      	lsrs	r1, r1, #5
 8003d2e:	f7fc fd8f 	bl	8000850 <_test_assert>
 8003d32:	b100      	cbz	r0, 8003d36 <dyn3_execute+0x26>
 8003d34:	bd10      	pop	{r4, pc}
 8003d36:	2320      	movs	r3, #32
 8003d38:	f383 8811 	msr	BASEPRI, r3
 8003d3c:	7fa3      	ldrb	r3, [r4, #30]
 8003d3e:	3301      	adds	r3, #1
 8003d40:	77a3      	strb	r3, [r4, #30]
 8003d42:	f380 8811 	msr	BASEPRI, r0
 8003d46:	7fa1      	ldrb	r1, [r4, #30]
 8003d48:	2002      	movs	r0, #2
 8003d4a:	1a09      	subs	r1, r1, r0
 8003d4c:	fab1 f181 	clz	r1, r1
 8003d50:	0949      	lsrs	r1, r1, #5
 8003d52:	f7fc fd7d 	bl	8000850 <_test_assert>
 8003d56:	2800      	cmp	r0, #0
 8003d58:	d1ec      	bne.n	8003d34 <dyn3_execute+0x24>
 8003d5a:	4620      	mov	r0, r4
 8003d5c:	f7ff fed8 	bl	8003b10 <chThdRelease>
 8003d60:	7fa1      	ldrb	r1, [r4, #30]
 8003d62:	f1a1 0101 	sub.w	r1, r1, #1
 8003d66:	fab1 f181 	clz	r1, r1
 8003d6a:	2003      	movs	r0, #3
 8003d6c:	0949      	lsrs	r1, r1, #5
 8003d6e:	f7fc fd6f 	bl	8000850 <_test_assert>
 8003d72:	2800      	cmp	r0, #0
 8003d74:	d1de      	bne.n	8003d34 <dyn3_execute+0x24>
 8003d76:	4620      	mov	r0, r4
 8003d78:	f7ff fefa 	bl	8003b70 <regfind>
 8003d7c:	4601      	mov	r1, r0
 8003d7e:	2004      	movs	r0, #4
 8003d80:	f7fc fd66 	bl	8000850 <_test_assert>
 8003d84:	2800      	cmp	r0, #0
 8003d86:	d1d5      	bne.n	8003d34 <dyn3_execute+0x24>
 8003d88:	4620      	mov	r0, r4
 8003d8a:	f7ff fef1 	bl	8003b70 <regfind>
 8003d8e:	4601      	mov	r1, r0
 8003d90:	2005      	movs	r0, #5
 8003d92:	f7fc fd5d 	bl	8000850 <_test_assert>
 8003d96:	2800      	cmp	r0, #0
 8003d98:	d1cc      	bne.n	8003d34 <dyn3_execute+0x24>
 8003d9a:	4620      	mov	r0, r4
 8003d9c:	f7ff feb8 	bl	8003b10 <chThdRelease>
 8003da0:	7fa1      	ldrb	r1, [r4, #30]
 8003da2:	fab1 f181 	clz	r1, r1
 8003da6:	0949      	lsrs	r1, r1, #5
 8003da8:	2006      	movs	r0, #6
 8003daa:	f7fc fd51 	bl	8000850 <_test_assert>
 8003dae:	2800      	cmp	r0, #0
 8003db0:	d1c0      	bne.n	8003d34 <dyn3_execute+0x24>
 8003db2:	7f21      	ldrb	r1, [r4, #28]
 8003db4:	fab1 f181 	clz	r1, r1
 8003db8:	0949      	lsrs	r1, r1, #5
 8003dba:	2007      	movs	r0, #7
 8003dbc:	f7fc fd48 	bl	8000850 <_test_assert>
 8003dc0:	2800      	cmp	r0, #0
 8003dc2:	d1b7      	bne.n	8003d34 <dyn3_execute+0x24>
 8003dc4:	4620      	mov	r0, r4
 8003dc6:	f7ff fed3 	bl	8003b70 <regfind>
 8003dca:	4601      	mov	r1, r0
 8003dcc:	2008      	movs	r0, #8
 8003dce:	f7fc fd3f 	bl	8000850 <_test_assert>
 8003dd2:	2800      	cmp	r0, #0
 8003dd4:	d1ae      	bne.n	8003d34 <dyn3_execute+0x24>
 8003dd6:	4620      	mov	r0, r4
 8003dd8:	f7ff feca 	bl	8003b70 <regfind>
 8003ddc:	4601      	mov	r1, r0
 8003dde:	2009      	movs	r0, #9
 8003de0:	f7fc fd36 	bl	8000850 <_test_assert>
 8003de4:	2800      	cmp	r0, #0
 8003de6:	d1a5      	bne.n	8003d34 <dyn3_execute+0x24>
 8003de8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003dec:	f7ff f948 	bl	8003080 <chThdSleep>
 8003df0:	7f21      	ldrb	r1, [r4, #28]
 8003df2:	f1a1 030f 	sub.w	r3, r1, #15
 8003df6:	4259      	negs	r1, r3
 8003df8:	4159      	adcs	r1, r3
 8003dfa:	200a      	movs	r0, #10
 8003dfc:	f7fc fd28 	bl	8000850 <_test_assert>
 8003e00:	2800      	cmp	r0, #0
 8003e02:	d197      	bne.n	8003d34 <dyn3_execute+0x24>
 8003e04:	4620      	mov	r0, r4
 8003e06:	f7ff feb3 	bl	8003b70 <regfind>
 8003e0a:	4601      	mov	r1, r0
 8003e0c:	200b      	movs	r0, #11
 8003e0e:	f7fc fd1f 	bl	8000850 <_test_assert>
 8003e12:	2800      	cmp	r0, #0
 8003e14:	d18e      	bne.n	8003d34 <dyn3_execute+0x24>
 8003e16:	4620      	mov	r0, r4
 8003e18:	f7ff feaa 	bl	8003b70 <regfind>
 8003e1c:	f080 0101 	eor.w	r1, r0, #1
 8003e20:	b2c9      	uxtb	r1, r1
 8003e22:	200c      	movs	r0, #12
 8003e24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e28:	f7fc bd12 	b.w	8000850 <_test_assert>
 8003e2c:	20000ae0 	.word	0x20000ae0
 8003e30:	08006810 	.word	0x08006810
	...

08003e40 <heap1_execute>:
 8003e40:	b570      	push	{r4, r5, r6, lr}
 8003e42:	b082      	sub	sp, #8
 8003e44:	4669      	mov	r1, sp
 8003e46:	2000      	movs	r0, #0
 8003e48:	f7ff fdf2 	bl	8003a30 <chHeapStatus>
 8003e4c:	2110      	movs	r1, #16
 8003e4e:	2000      	movs	r0, #0
 8003e50:	f7ff fece 	bl	8003bf0 <chHeapAlloc>
 8003e54:	1c01      	adds	r1, r0, #0
 8003e56:	4605      	mov	r5, r0
 8003e58:	bf18      	it	ne
 8003e5a:	2101      	movne	r1, #1
 8003e5c:	2001      	movs	r0, #1
 8003e5e:	f7fc fcf7 	bl	8000850 <_test_assert>
 8003e62:	b108      	cbz	r0, 8003e68 <heap1_execute+0x28>
 8003e64:	b002      	add	sp, #8
 8003e66:	bd70      	pop	{r4, r5, r6, pc}
 8003e68:	4604      	mov	r4, r0
 8003e6a:	4628      	mov	r0, r5
 8003e6c:	f7ff fe08 	bl	8003a80 <chHeapFree>
 8003e70:	f06f 01ff 	mvn.w	r1, #255	; 0xff
 8003e74:	4620      	mov	r0, r4
 8003e76:	f7ff febb 	bl	8003bf0 <chHeapAlloc>
 8003e7a:	fab0 f180 	clz	r1, r0
 8003e7e:	0949      	lsrs	r1, r1, #5
 8003e80:	2002      	movs	r0, #2
 8003e82:	f7fc fce5 	bl	8000850 <_test_assert>
 8003e86:	2800      	cmp	r0, #0
 8003e88:	d1ec      	bne.n	8003e64 <heap1_execute+0x24>
 8003e8a:	4669      	mov	r1, sp
 8003e8c:	487c      	ldr	r0, [pc, #496]	; (8004080 <heap1_execute+0x240>)
 8003e8e:	f7ff fdcf 	bl	8003a30 <chHeapStatus>
 8003e92:	2110      	movs	r1, #16
 8003e94:	487a      	ldr	r0, [pc, #488]	; (8004080 <heap1_execute+0x240>)
 8003e96:	f7ff feab 	bl	8003bf0 <chHeapAlloc>
 8003e9a:	2110      	movs	r1, #16
 8003e9c:	4606      	mov	r6, r0
 8003e9e:	4878      	ldr	r0, [pc, #480]	; (8004080 <heap1_execute+0x240>)
 8003ea0:	f7ff fea6 	bl	8003bf0 <chHeapAlloc>
 8003ea4:	2110      	movs	r1, #16
 8003ea6:	4605      	mov	r5, r0
 8003ea8:	4875      	ldr	r0, [pc, #468]	; (8004080 <heap1_execute+0x240>)
 8003eaa:	f7ff fea1 	bl	8003bf0 <chHeapAlloc>
 8003eae:	4604      	mov	r4, r0
 8003eb0:	4630      	mov	r0, r6
 8003eb2:	f7ff fde5 	bl	8003a80 <chHeapFree>
 8003eb6:	4628      	mov	r0, r5
 8003eb8:	f7ff fde2 	bl	8003a80 <chHeapFree>
 8003ebc:	4620      	mov	r0, r4
 8003ebe:	f7ff fddf 	bl	8003a80 <chHeapFree>
 8003ec2:	a901      	add	r1, sp, #4
 8003ec4:	486e      	ldr	r0, [pc, #440]	; (8004080 <heap1_execute+0x240>)
 8003ec6:	f7ff fdb3 	bl	8003a30 <chHeapStatus>
 8003eca:	f1a0 0101 	sub.w	r1, r0, #1
 8003ece:	fab1 f181 	clz	r1, r1
 8003ed2:	0949      	lsrs	r1, r1, #5
 8003ed4:	2003      	movs	r0, #3
 8003ed6:	f7fc fcbb 	bl	8000850 <_test_assert>
 8003eda:	2800      	cmp	r0, #0
 8003edc:	d1c2      	bne.n	8003e64 <heap1_execute+0x24>
 8003ede:	2110      	movs	r1, #16
 8003ee0:	4867      	ldr	r0, [pc, #412]	; (8004080 <heap1_execute+0x240>)
 8003ee2:	f7ff fe85 	bl	8003bf0 <chHeapAlloc>
 8003ee6:	2110      	movs	r1, #16
 8003ee8:	4604      	mov	r4, r0
 8003eea:	4865      	ldr	r0, [pc, #404]	; (8004080 <heap1_execute+0x240>)
 8003eec:	f7ff fe80 	bl	8003bf0 <chHeapAlloc>
 8003ef0:	2110      	movs	r1, #16
 8003ef2:	4605      	mov	r5, r0
 8003ef4:	4862      	ldr	r0, [pc, #392]	; (8004080 <heap1_execute+0x240>)
 8003ef6:	f7ff fe7b 	bl	8003bf0 <chHeapAlloc>
 8003efa:	f7ff fdc1 	bl	8003a80 <chHeapFree>
 8003efe:	4628      	mov	r0, r5
 8003f00:	f7ff fdbe 	bl	8003a80 <chHeapFree>
 8003f04:	4620      	mov	r0, r4
 8003f06:	f7ff fdbb 	bl	8003a80 <chHeapFree>
 8003f0a:	a901      	add	r1, sp, #4
 8003f0c:	485c      	ldr	r0, [pc, #368]	; (8004080 <heap1_execute+0x240>)
 8003f0e:	f7ff fd8f 	bl	8003a30 <chHeapStatus>
 8003f12:	f1a0 0101 	sub.w	r1, r0, #1
 8003f16:	fab1 f181 	clz	r1, r1
 8003f1a:	0949      	lsrs	r1, r1, #5
 8003f1c:	2004      	movs	r0, #4
 8003f1e:	f7fc fc97 	bl	8000850 <_test_assert>
 8003f22:	2800      	cmp	r0, #0
 8003f24:	d19e      	bne.n	8003e64 <heap1_execute+0x24>
 8003f26:	2111      	movs	r1, #17
 8003f28:	4855      	ldr	r0, [pc, #340]	; (8004080 <heap1_execute+0x240>)
 8003f2a:	f7ff fe61 	bl	8003bf0 <chHeapAlloc>
 8003f2e:	2110      	movs	r1, #16
 8003f30:	4604      	mov	r4, r0
 8003f32:	4853      	ldr	r0, [pc, #332]	; (8004080 <heap1_execute+0x240>)
 8003f34:	f7ff fe5c 	bl	8003bf0 <chHeapAlloc>
 8003f38:	4605      	mov	r5, r0
 8003f3a:	4620      	mov	r0, r4
 8003f3c:	f7ff fda0 	bl	8003a80 <chHeapFree>
 8003f40:	a901      	add	r1, sp, #4
 8003f42:	484f      	ldr	r0, [pc, #316]	; (8004080 <heap1_execute+0x240>)
 8003f44:	f7ff fd74 	bl	8003a30 <chHeapStatus>
 8003f48:	f1a0 0102 	sub.w	r1, r0, #2
 8003f4c:	fab1 f181 	clz	r1, r1
 8003f50:	0949      	lsrs	r1, r1, #5
 8003f52:	2005      	movs	r0, #5
 8003f54:	f7fc fc7c 	bl	8000850 <_test_assert>
 8003f58:	2800      	cmp	r0, #0
 8003f5a:	d183      	bne.n	8003e64 <heap1_execute+0x24>
 8003f5c:	2110      	movs	r1, #16
 8003f5e:	4848      	ldr	r0, [pc, #288]	; (8004080 <heap1_execute+0x240>)
 8003f60:	f7ff fe46 	bl	8003bf0 <chHeapAlloc>
 8003f64:	a901      	add	r1, sp, #4
 8003f66:	4604      	mov	r4, r0
 8003f68:	4845      	ldr	r0, [pc, #276]	; (8004080 <heap1_execute+0x240>)
 8003f6a:	f7ff fd61 	bl	8003a30 <chHeapStatus>
 8003f6e:	2801      	cmp	r0, #1
 8003f70:	f000 8083 	beq.w	800407a <heap1_execute+0x23a>
 8003f74:	a901      	add	r1, sp, #4
 8003f76:	4842      	ldr	r0, [pc, #264]	; (8004080 <heap1_execute+0x240>)
 8003f78:	f7ff fd5a 	bl	8003a30 <chHeapStatus>
 8003f7c:	f1a0 0102 	sub.w	r1, r0, #2
 8003f80:	fab1 f181 	clz	r1, r1
 8003f84:	0949      	lsrs	r1, r1, #5
 8003f86:	2006      	movs	r0, #6
 8003f88:	f7fc fc62 	bl	8000850 <_test_assert>
 8003f8c:	2800      	cmp	r0, #0
 8003f8e:	f47f af69 	bne.w	8003e64 <heap1_execute+0x24>
 8003f92:	4628      	mov	r0, r5
 8003f94:	f7ff fd74 	bl	8003a80 <chHeapFree>
 8003f98:	4620      	mov	r0, r4
 8003f9a:	f7ff fd71 	bl	8003a80 <chHeapFree>
 8003f9e:	a901      	add	r1, sp, #4
 8003fa0:	4837      	ldr	r0, [pc, #220]	; (8004080 <heap1_execute+0x240>)
 8003fa2:	f7ff fd45 	bl	8003a30 <chHeapStatus>
 8003fa6:	f1a0 0101 	sub.w	r1, r0, #1
 8003faa:	fab1 f181 	clz	r1, r1
 8003fae:	0949      	lsrs	r1, r1, #5
 8003fb0:	2007      	movs	r0, #7
 8003fb2:	f7fc fc4d 	bl	8000850 <_test_assert>
 8003fb6:	2800      	cmp	r0, #0
 8003fb8:	f47f af54 	bne.w	8003e64 <heap1_execute+0x24>
 8003fbc:	2110      	movs	r1, #16
 8003fbe:	4830      	ldr	r0, [pc, #192]	; (8004080 <heap1_execute+0x240>)
 8003fc0:	f7ff fe16 	bl	8003bf0 <chHeapAlloc>
 8003fc4:	2110      	movs	r1, #16
 8003fc6:	4605      	mov	r5, r0
 8003fc8:	482d      	ldr	r0, [pc, #180]	; (8004080 <heap1_execute+0x240>)
 8003fca:	f7ff fe11 	bl	8003bf0 <chHeapAlloc>
 8003fce:	4604      	mov	r4, r0
 8003fd0:	4628      	mov	r0, r5
 8003fd2:	f7ff fd55 	bl	8003a80 <chHeapFree>
 8003fd6:	a901      	add	r1, sp, #4
 8003fd8:	4829      	ldr	r0, [pc, #164]	; (8004080 <heap1_execute+0x240>)
 8003fda:	f7ff fd29 	bl	8003a30 <chHeapStatus>
 8003fde:	1e85      	subs	r5, r0, #2
 8003fe0:	4269      	negs	r1, r5
 8003fe2:	4169      	adcs	r1, r5
 8003fe4:	2008      	movs	r0, #8
 8003fe6:	f7fc fc33 	bl	8000850 <_test_assert>
 8003fea:	2800      	cmp	r0, #0
 8003fec:	f47f af3a 	bne.w	8003e64 <heap1_execute+0x24>
 8003ff0:	2120      	movs	r1, #32
 8003ff2:	4823      	ldr	r0, [pc, #140]	; (8004080 <heap1_execute+0x240>)
 8003ff4:	f7ff fdfc 	bl	8003bf0 <chHeapAlloc>
 8003ff8:	f7ff fd42 	bl	8003a80 <chHeapFree>
 8003ffc:	4620      	mov	r0, r4
 8003ffe:	f7ff fd3f 	bl	8003a80 <chHeapFree>
 8004002:	a901      	add	r1, sp, #4
 8004004:	481e      	ldr	r0, [pc, #120]	; (8004080 <heap1_execute+0x240>)
 8004006:	f7ff fd13 	bl	8003a30 <chHeapStatus>
 800400a:	3801      	subs	r0, #1
 800400c:	4241      	negs	r1, r0
 800400e:	4141      	adcs	r1, r0
 8004010:	2009      	movs	r0, #9
 8004012:	f7fc fc1d 	bl	8000850 <_test_assert>
 8004016:	2800      	cmp	r0, #0
 8004018:	f47f af24 	bne.w	8003e64 <heap1_execute+0x24>
 800401c:	a901      	add	r1, sp, #4
 800401e:	4818      	ldr	r0, [pc, #96]	; (8004080 <heap1_execute+0x240>)
 8004020:	f7ff fd06 	bl	8003a30 <chHeapStatus>
 8004024:	9901      	ldr	r1, [sp, #4]
 8004026:	4816      	ldr	r0, [pc, #88]	; (8004080 <heap1_execute+0x240>)
 8004028:	f7ff fde2 	bl	8003bf0 <chHeapAlloc>
 800402c:	a901      	add	r1, sp, #4
 800402e:	4604      	mov	r4, r0
 8004030:	4813      	ldr	r0, [pc, #76]	; (8004080 <heap1_execute+0x240>)
 8004032:	f7ff fcfd 	bl	8003a30 <chHeapStatus>
 8004036:	fab0 f180 	clz	r1, r0
 800403a:	0949      	lsrs	r1, r1, #5
 800403c:	200a      	movs	r0, #10
 800403e:	f7fc fc07 	bl	8000850 <_test_assert>
 8004042:	2800      	cmp	r0, #0
 8004044:	f47f af0e 	bne.w	8003e64 <heap1_execute+0x24>
 8004048:	4620      	mov	r0, r4
 800404a:	f7ff fd19 	bl	8003a80 <chHeapFree>
 800404e:	a901      	add	r1, sp, #4
 8004050:	480b      	ldr	r0, [pc, #44]	; (8004080 <heap1_execute+0x240>)
 8004052:	f7ff fced 	bl	8003a30 <chHeapStatus>
 8004056:	1e42      	subs	r2, r0, #1
 8004058:	4251      	negs	r1, r2
 800405a:	4151      	adcs	r1, r2
 800405c:	200b      	movs	r0, #11
 800405e:	f7fc fbf7 	bl	8000850 <_test_assert>
 8004062:	2800      	cmp	r0, #0
 8004064:	f47f aefe 	bne.w	8003e64 <heap1_execute+0x24>
 8004068:	e9dd 3100 	ldrd	r3, r1, [sp]
 800406c:	1acb      	subs	r3, r1, r3
 800406e:	4259      	negs	r1, r3
 8004070:	4159      	adcs	r1, r3
 8004072:	200c      	movs	r0, #12
 8004074:	f7fc fbec 	bl	8000850 <_test_assert>
 8004078:	e6f4      	b.n	8003e64 <heap1_execute+0x24>
 800407a:	4601      	mov	r1, r0
 800407c:	e783      	b.n	8003f86 <heap1_execute+0x146>
 800407e:	bf00      	nop
 8004080:	20001378 	.word	0x20001378
	...

08004090 <chSemWait>:
 8004090:	2320      	movs	r3, #32
 8004092:	f383 8811 	msr	BASEPRI, r3
 8004096:	6883      	ldr	r3, [r0, #8]
 8004098:	3b01      	subs	r3, #1
 800409a:	2b00      	cmp	r3, #0
 800409c:	6083      	str	r3, [r0, #8]
 800409e:	db04      	blt.n	80040aa <chSemWait+0x1a>
 80040a0:	2000      	movs	r0, #0
 80040a2:	2300      	movs	r3, #0
 80040a4:	f383 8811 	msr	BASEPRI, r3
 80040a8:	4770      	bx	lr
 80040aa:	b510      	push	{r4, lr}
 80040ac:	4c08      	ldr	r4, [pc, #32]	; (80040d0 <chSemWait+0x40>)
 80040ae:	69a2      	ldr	r2, [r4, #24]
 80040b0:	6210      	str	r0, [r2, #32]
 80040b2:	6010      	str	r0, [r2, #0]
 80040b4:	6841      	ldr	r1, [r0, #4]
 80040b6:	6051      	str	r1, [r2, #4]
 80040b8:	4603      	mov	r3, r0
 80040ba:	600a      	str	r2, [r1, #0]
 80040bc:	2005      	movs	r0, #5
 80040be:	605a      	str	r2, [r3, #4]
 80040c0:	f7fe f94e 	bl	8002360 <chSchGoSleepS>
 80040c4:	69a3      	ldr	r3, [r4, #24]
 80040c6:	6a18      	ldr	r0, [r3, #32]
 80040c8:	2300      	movs	r3, #0
 80040ca:	f383 8811 	msr	BASEPRI, r3
 80040ce:	bd10      	pop	{r4, pc}
 80040d0:	20000ae0 	.word	0x20000ae0
	...

080040e0 <bmk11_execute>:
 80040e0:	b570      	push	{r4, r5, r6, lr}
 80040e2:	f7ff f8ad 	bl	8003240 <test_wait_tick>
 80040e6:	f7fd fb8b 	bl	8001800 <test_start_timer.constprop.1>
 80040ea:	4e15      	ldr	r6, [pc, #84]	; (8004140 <bmk11_execute+0x60>)
 80040ec:	4c15      	ldr	r4, [pc, #84]	; (8004144 <bmk11_execute+0x64>)
 80040ee:	2500      	movs	r5, #0
 80040f0:	4620      	mov	r0, r4
 80040f2:	f7ff ffcd 	bl	8004090 <chSemWait>
 80040f6:	4620      	mov	r0, r4
 80040f8:	f7fe f8da 	bl	80022b0 <chSemSignal>
 80040fc:	4620      	mov	r0, r4
 80040fe:	f7ff ffc7 	bl	8004090 <chSemWait>
 8004102:	4620      	mov	r0, r4
 8004104:	f7fe f8d4 	bl	80022b0 <chSemSignal>
 8004108:	4620      	mov	r0, r4
 800410a:	f7ff ffc1 	bl	8004090 <chSemWait>
 800410e:	4620      	mov	r0, r4
 8004110:	f7fe f8ce 	bl	80022b0 <chSemSignal>
 8004114:	4620      	mov	r0, r4
 8004116:	f7ff ffbb 	bl	8004090 <chSemWait>
 800411a:	4620      	mov	r0, r4
 800411c:	f7fe f8c8 	bl	80022b0 <chSemSignal>
 8004120:	7833      	ldrb	r3, [r6, #0]
 8004122:	3501      	adds	r5, #1
 8004124:	2b00      	cmp	r3, #0
 8004126:	d0e3      	beq.n	80040f0 <bmk11_execute+0x10>
 8004128:	4807      	ldr	r0, [pc, #28]	; (8004148 <bmk11_execute+0x68>)
 800412a:	f7fc fc01 	bl	8000930 <test_print>
 800412e:	00a8      	lsls	r0, r5, #2
 8004130:	f7fc fb06 	bl	8000740 <test_printn>
 8004134:	4805      	ldr	r0, [pc, #20]	; (800414c <bmk11_execute+0x6c>)
 8004136:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800413a:	f7fc bbd9 	b.w	80008f0 <test_println>
 800413e:	bf00      	nop
 8004140:	20001398 	.word	0x20001398
 8004144:	20000cf8 	.word	0x20000cf8
 8004148:	08006680 	.word	0x08006680
 800414c:	080066a0 	.word	0x080066a0

08004150 <thread3.lto_priv.77>:
 8004150:	b538      	push	{r3, r4, r5, lr}
 8004152:	4c07      	ldr	r4, [pc, #28]	; (8004170 <thread3.lto_priv.77+0x20>)
 8004154:	69a3      	ldr	r3, [r4, #24]
 8004156:	7f5b      	ldrb	r3, [r3, #29]
 8004158:	075a      	lsls	r2, r3, #29
 800415a:	d407      	bmi.n	800416c <thread3.lto_priv.77+0x1c>
 800415c:	4d05      	ldr	r5, [pc, #20]	; (8004174 <thread3.lto_priv.77+0x24>)
 800415e:	4628      	mov	r0, r5
 8004160:	f7ff ff96 	bl	8004090 <chSemWait>
 8004164:	69a3      	ldr	r3, [r4, #24]
 8004166:	7f5b      	ldrb	r3, [r3, #29]
 8004168:	075b      	lsls	r3, r3, #29
 800416a:	d5f8      	bpl.n	800415e <thread3.lto_priv.77+0xe>
 800416c:	bd38      	pop	{r3, r4, r5, pc}
 800416e:	bf00      	nop
 8004170:	20000ae0 	.word	0x20000ae0
 8004174:	20000cf8 	.word	0x20000cf8
	...

08004180 <sem4_execute>:
 8004180:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004182:	b087      	sub	sp, #28
 8004184:	ac03      	add	r4, sp, #12
 8004186:	2500      	movs	r5, #0
 8004188:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800418c:	9505      	str	r5, [sp, #20]
 800418e:	2620      	movs	r6, #32
 8004190:	f386 8811 	msr	BASEPRI, r6
 8004194:	4629      	mov	r1, r5
 8004196:	4620      	mov	r0, r4
 8004198:	f7fd faa2 	bl	80016e0 <chSemResetI>
 800419c:	f7fd fe98 	bl	8001ed0 <chSchRescheduleS>
 80041a0:	f385 8811 	msr	BASEPRI, r5
 80041a4:	f386 8811 	msr	BASEPRI, r6
 80041a8:	9905      	ldr	r1, [sp, #20]
 80041aa:	42a9      	cmp	r1, r5
 80041ac:	bfcc      	ite	gt
 80041ae:	2100      	movgt	r1, #0
 80041b0:	2101      	movle	r1, #1
 80041b2:	2001      	movs	r0, #1
 80041b4:	f7fc fb4c 	bl	8000850 <_test_assert>
 80041b8:	b118      	cbz	r0, 80041c2 <sem4_execute+0x42>
 80041ba:	f385 8811 	msr	BASEPRI, r5
 80041be:	b007      	add	sp, #28
 80041c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80041c2:	4607      	mov	r7, r0
 80041c4:	f380 8811 	msr	BASEPRI, r0
 80041c8:	4a41      	ldr	r2, [pc, #260]	; (80042d0 <sem4_execute+0x150>)
 80041ca:	4b42      	ldr	r3, [pc, #264]	; (80042d4 <sem4_execute+0x154>)
 80041cc:	6992      	ldr	r2, [r2, #24]
 80041ce:	4842      	ldr	r0, [pc, #264]	; (80042d8 <sem4_execute+0x158>)
 80041d0:	6892      	ldr	r2, [r2, #8]
 80041d2:	9400      	str	r4, [sp, #0]
 80041d4:	3a01      	subs	r2, #1
 80041d6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80041da:	f7fe f889 	bl	80022f0 <chThdCreateStatic>
 80041de:	4b3f      	ldr	r3, [pc, #252]	; (80042dc <sem4_execute+0x15c>)
 80041e0:	6018      	str	r0, [r3, #0]
 80041e2:	4620      	mov	r0, r4
 80041e4:	f7ff ff54 	bl	8004090 <chSemWait>
 80041e8:	f386 8811 	msr	BASEPRI, r6
 80041ec:	9905      	ldr	r1, [sp, #20]
 80041ee:	2900      	cmp	r1, #0
 80041f0:	bfcc      	ite	gt
 80041f2:	2100      	movgt	r1, #0
 80041f4:	2101      	movle	r1, #1
 80041f6:	2002      	movs	r0, #2
 80041f8:	f7fc fb2a 	bl	8000850 <_test_assert>
 80041fc:	b118      	cbz	r0, 8004206 <sem4_execute+0x86>
 80041fe:	f387 8811 	msr	BASEPRI, r7
 8004202:	b007      	add	sp, #28
 8004204:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004206:	f380 8811 	msr	BASEPRI, r0
 800420a:	f386 8811 	msr	BASEPRI, r6
 800420e:	9b05      	ldr	r3, [sp, #20]
 8004210:	2b00      	cmp	r3, #0
 8004212:	dd24      	ble.n	800425e <sem4_execute+0xde>
 8004214:	f7fd fe5c 	bl	8001ed0 <chSchRescheduleS>
 8004218:	2500      	movs	r5, #0
 800421a:	f385 8811 	msr	BASEPRI, r5
 800421e:	2720      	movs	r7, #32
 8004220:	f387 8811 	msr	BASEPRI, r7
 8004224:	9905      	ldr	r1, [sp, #20]
 8004226:	42a9      	cmp	r1, r5
 8004228:	f04f 0003 	mov.w	r0, #3
 800422c:	bfd4      	ite	le
 800422e:	2100      	movle	r1, #0
 8004230:	2101      	movgt	r1, #1
 8004232:	f7fc fb0d 	bl	8000850 <_test_assert>
 8004236:	4606      	mov	r6, r0
 8004238:	2800      	cmp	r0, #0
 800423a:	d1be      	bne.n	80041ba <sem4_execute+0x3a>
 800423c:	f380 8811 	msr	BASEPRI, r0
 8004240:	f387 8811 	msr	BASEPRI, r7
 8004244:	9905      	ldr	r1, [sp, #20]
 8004246:	f1a1 0101 	sub.w	r1, r1, #1
 800424a:	fab1 f181 	clz	r1, r1
 800424e:	2004      	movs	r0, #4
 8004250:	0949      	lsrs	r1, r1, #5
 8004252:	f7fc fafd 	bl	8000850 <_test_assert>
 8004256:	b130      	cbz	r0, 8004266 <sem4_execute+0xe6>
 8004258:	f386 8811 	msr	BASEPRI, r6
 800425c:	e7af      	b.n	80041be <sem4_execute+0x3e>
 800425e:	4620      	mov	r0, r4
 8004260:	f7fd f9ce 	bl	8001600 <chSemSignalI>
 8004264:	e7d6      	b.n	8004214 <sem4_execute+0x94>
 8004266:	f380 8811 	msr	BASEPRI, r0
 800426a:	f387 8811 	msr	BASEPRI, r7
 800426e:	9b05      	ldr	r3, [sp, #20]
 8004270:	2b00      	cmp	r3, #0
 8004272:	dd28      	ble.n	80042c6 <sem4_execute+0x146>
 8004274:	f7fd fe2c 	bl	8001ed0 <chSchRescheduleS>
 8004278:	2400      	movs	r4, #0
 800427a:	f384 8811 	msr	BASEPRI, r4
 800427e:	2620      	movs	r6, #32
 8004280:	f386 8811 	msr	BASEPRI, r6
 8004284:	9905      	ldr	r1, [sp, #20]
 8004286:	42a1      	cmp	r1, r4
 8004288:	f04f 0003 	mov.w	r0, #3
 800428c:	bfd4      	ite	le
 800428e:	2100      	movle	r1, #0
 8004290:	2101      	movgt	r1, #1
 8004292:	f7fc fadd 	bl	8000850 <_test_assert>
 8004296:	4605      	mov	r5, r0
 8004298:	b110      	cbz	r0, 80042a0 <sem4_execute+0x120>
 800429a:	f384 8811 	msr	BASEPRI, r4
 800429e:	e78e      	b.n	80041be <sem4_execute+0x3e>
 80042a0:	f380 8811 	msr	BASEPRI, r0
 80042a4:	f386 8811 	msr	BASEPRI, r6
 80042a8:	9905      	ldr	r1, [sp, #20]
 80042aa:	f1a1 0101 	sub.w	r1, r1, #1
 80042ae:	fab1 f181 	clz	r1, r1
 80042b2:	2005      	movs	r0, #5
 80042b4:	0949      	lsrs	r1, r1, #5
 80042b6:	f7fc facb 	bl	8000850 <_test_assert>
 80042ba:	2800      	cmp	r0, #0
 80042bc:	f47f af7d 	bne.w	80041ba <sem4_execute+0x3a>
 80042c0:	f380 8811 	msr	BASEPRI, r0
 80042c4:	e77b      	b.n	80041be <sem4_execute+0x3e>
 80042c6:	4620      	mov	r0, r4
 80042c8:	f7fd f99a 	bl	8001600 <chSemSignalI>
 80042cc:	e7d2      	b.n	8004274 <sem4_execute+0xf4>
 80042ce:	bf00      	nop
 80042d0:	20000ae0 	.word	0x20000ae0
 80042d4:	08001ef1 	.word	0x08001ef1
 80042d8:	20000d08 	.word	0x20000d08
 80042dc:	2000139c 	.word	0x2000139c

080042e0 <thread3.lto_priv.76>:
 80042e0:	b510      	push	{r4, lr}
 80042e2:	4c04      	ldr	r4, [pc, #16]	; (80042f4 <thread3.lto_priv.76+0x14>)
 80042e4:	4620      	mov	r0, r4
 80042e6:	f7ff fed3 	bl	8004090 <chSemWait>
 80042ea:	4620      	mov	r0, r4
 80042ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80042f0:	f7fd bfde 	b.w	80022b0 <chSemSignal>
 80042f4:	200008ac 	.word	0x200008ac
	...

08004300 <thread1.lto_priv.78>:
 8004300:	b510      	push	{r4, lr}
 8004302:	4604      	mov	r4, r0
 8004304:	4803      	ldr	r0, [pc, #12]	; (8004314 <thread1.lto_priv.78+0x14>)
 8004306:	f7ff fec3 	bl	8004090 <chSemWait>
 800430a:	7820      	ldrb	r0, [r4, #0]
 800430c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004310:	f7fc bab6 	b.w	8000880 <test_emit_token>
 8004314:	200008ac 	.word	0x200008ac
	...

08004320 <chThdWait>:
 8004320:	b538      	push	{r3, r4, r5, lr}
 8004322:	4604      	mov	r4, r0
 8004324:	2320      	movs	r3, #32
 8004326:	f383 8811 	msr	BASEPRI, r3
 800432a:	7f03      	ldrb	r3, [r0, #28]
 800432c:	2b0f      	cmp	r3, #15
 800432e:	d007      	beq.n	8004340 <chThdWait+0x20>
 8004330:	4b08      	ldr	r3, [pc, #32]	; (8004354 <chThdWait+0x34>)
 8004332:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004334:	699b      	ldr	r3, [r3, #24]
 8004336:	2009      	movs	r0, #9
 8004338:	601a      	str	r2, [r3, #0]
 800433a:	6263      	str	r3, [r4, #36]	; 0x24
 800433c:	f7fe f810 	bl	8002360 <chSchGoSleepS>
 8004340:	6a25      	ldr	r5, [r4, #32]
 8004342:	2300      	movs	r3, #0
 8004344:	f383 8811 	msr	BASEPRI, r3
 8004348:	4620      	mov	r0, r4
 800434a:	f7ff fbe1 	bl	8003b10 <chThdRelease>
 800434e:	4628      	mov	r0, r5
 8004350:	bd38      	pop	{r3, r4, r5, pc}
 8004352:	bf00      	nop
 8004354:	20000ae0 	.word	0x20000ae0
	...

08004360 <bmk5_execute>:
 8004360:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004364:	4b15      	ldr	r3, [pc, #84]	; (80043bc <bmk5_execute+0x5c>)
 8004366:	f8df 9064 	ldr.w	r9, [pc, #100]	; 80043cc <bmk5_execute+0x6c>
 800436a:	699b      	ldr	r3, [r3, #24]
 800436c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80043d0 <bmk5_execute+0x70>
 8004370:	689d      	ldr	r5, [r3, #8]
 8004372:	4f13      	ldr	r7, [pc, #76]	; (80043c0 <bmk5_execute+0x60>)
 8004374:	b083      	sub	sp, #12
 8004376:	f7fe ff63 	bl	8003240 <test_wait_tick>
 800437a:	f7fd fa41 	bl	8001800 <test_start_timer.constprop.1>
 800437e:	2400      	movs	r4, #0
 8004380:	3d01      	subs	r5, #1
 8004382:	4626      	mov	r6, r4
 8004384:	4643      	mov	r3, r8
 8004386:	462a      	mov	r2, r5
 8004388:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800438c:	9600      	str	r6, [sp, #0]
 800438e:	4638      	mov	r0, r7
 8004390:	f7fd ffae 	bl	80022f0 <chThdCreateStatic>
 8004394:	f7ff ffc4 	bl	8004320 <chThdWait>
 8004398:	f899 3000 	ldrb.w	r3, [r9]
 800439c:	3401      	adds	r4, #1
 800439e:	2b00      	cmp	r3, #0
 80043a0:	d0f0      	beq.n	8004384 <bmk5_execute+0x24>
 80043a2:	4808      	ldr	r0, [pc, #32]	; (80043c4 <bmk5_execute+0x64>)
 80043a4:	f7fc fac4 	bl	8000930 <test_print>
 80043a8:	4620      	mov	r0, r4
 80043aa:	f7fc f9c9 	bl	8000740 <test_printn>
 80043ae:	4806      	ldr	r0, [pc, #24]	; (80043c8 <bmk5_execute+0x68>)
 80043b0:	b003      	add	sp, #12
 80043b2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80043b6:	f7fc ba9b 	b.w	80008f0 <test_println>
 80043ba:	bf00      	nop
 80043bc:	20000ae0 	.word	0x20000ae0
 80043c0:	20000d08 	.word	0x20000d08
 80043c4:	08006680 	.word	0x08006680
 80043c8:	08006780 	.word	0x08006780
 80043cc:	20001398 	.word	0x20001398
 80043d0:	08006601 	.word	0x08006601
	...

080043e0 <test_wait_threads>:
 80043e0:	b570      	push	{r4, r5, r6, lr}
 80043e2:	4c07      	ldr	r4, [pc, #28]	; (8004400 <test_wait_threads+0x20>)
 80043e4:	2600      	movs	r6, #0
 80043e6:	f104 0514 	add.w	r5, r4, #20
 80043ea:	f854 0b04 	ldr.w	r0, [r4], #4
 80043ee:	b118      	cbz	r0, 80043f8 <test_wait_threads+0x18>
 80043f0:	f7ff ff96 	bl	8004320 <chThdWait>
 80043f4:	f844 6c04 	str.w	r6, [r4, #-4]
 80043f8:	42ac      	cmp	r4, r5
 80043fa:	d1f6      	bne.n	80043ea <test_wait_threads+0xa>
 80043fc:	bd70      	pop	{r4, r5, r6, pc}
 80043fe:	bf00      	nop
 8004400:	2000139c 	.word	0x2000139c
	...

08004410 <bmk8_execute>:
 8004410:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004414:	b084      	sub	sp, #16
 8004416:	ac04      	add	r4, sp, #16
 8004418:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 80044e8 <bmk8_execute+0xd8>
 800441c:	4f2d      	ldr	r7, [pc, #180]	; (80044d4 <bmk8_execute+0xc4>)
 800441e:	4e2e      	ldr	r6, [pc, #184]	; (80044d8 <bmk8_execute+0xc8>)
 8004420:	4d2e      	ldr	r5, [pc, #184]	; (80044dc <bmk8_execute+0xcc>)
 8004422:	2300      	movs	r3, #0
 8004424:	f844 3d04 	str.w	r3, [r4, #-4]!
 8004428:	f7fe ff0a 	bl	8003240 <test_wait_tick>
 800442c:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8004430:	689a      	ldr	r2, [r3, #8]
 8004432:	9400      	str	r4, [sp, #0]
 8004434:	463b      	mov	r3, r7
 8004436:	3a01      	subs	r2, #1
 8004438:	4630      	mov	r0, r6
 800443a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800443e:	f7fd ff57 	bl	80022f0 <chThdCreateStatic>
 8004442:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8004446:	6028      	str	r0, [r5, #0]
 8004448:	689a      	ldr	r2, [r3, #8]
 800444a:	9400      	str	r4, [sp, #0]
 800444c:	463b      	mov	r3, r7
 800444e:	3a01      	subs	r2, #1
 8004450:	f506 70a4 	add.w	r0, r6, #328	; 0x148
 8004454:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004458:	f7fd ff4a 	bl	80022f0 <chThdCreateStatic>
 800445c:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8004460:	6068      	str	r0, [r5, #4]
 8004462:	689a      	ldr	r2, [r3, #8]
 8004464:	9400      	str	r4, [sp, #0]
 8004466:	463b      	mov	r3, r7
 8004468:	3a01      	subs	r2, #1
 800446a:	f506 7024 	add.w	r0, r6, #656	; 0x290
 800446e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004472:	f7fd ff3d 	bl	80022f0 <chThdCreateStatic>
 8004476:	f8d8 3018 	ldr.w	r3, [r8, #24]
 800447a:	60a8      	str	r0, [r5, #8]
 800447c:	689a      	ldr	r2, [r3, #8]
 800447e:	9400      	str	r4, [sp, #0]
 8004480:	463b      	mov	r3, r7
 8004482:	3a01      	subs	r2, #1
 8004484:	f506 7076 	add.w	r0, r6, #984	; 0x3d8
 8004488:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800448c:	f7fd ff30 	bl	80022f0 <chThdCreateStatic>
 8004490:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8004494:	60e8      	str	r0, [r5, #12]
 8004496:	689a      	ldr	r2, [r3, #8]
 8004498:	9400      	str	r4, [sp, #0]
 800449a:	3a01      	subs	r2, #1
 800449c:	463b      	mov	r3, r7
 800449e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80044a2:	f506 60a4 	add.w	r0, r6, #1312	; 0x520
 80044a6:	f7fd ff23 	bl	80022f0 <chThdCreateStatic>
 80044aa:	6128      	str	r0, [r5, #16]
 80044ac:	f242 7010 	movw	r0, #10000	; 0x2710
 80044b0:	f7fe fde6 	bl	8003080 <chThdSleep>
 80044b4:	f7fc f96c 	bl	8000790 <test_terminate_threads>
 80044b8:	f7ff ff92 	bl	80043e0 <test_wait_threads>
 80044bc:	4808      	ldr	r0, [pc, #32]	; (80044e0 <bmk8_execute+0xd0>)
 80044be:	f7fc fa37 	bl	8000930 <test_print>
 80044c2:	9803      	ldr	r0, [sp, #12]
 80044c4:	f7fc f93c 	bl	8000740 <test_printn>
 80044c8:	4806      	ldr	r0, [pc, #24]	; (80044e4 <bmk8_execute+0xd4>)
 80044ca:	f7fc fa11 	bl	80008f0 <test_println>
 80044ce:	b004      	add	sp, #16
 80044d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80044d4:	08001e61 	.word	0x08001e61
 80044d8:	20000d08 	.word	0x20000d08
 80044dc:	2000139c 	.word	0x2000139c
 80044e0:	08006680 	.word	0x08006680
 80044e4:	080067b0 	.word	0x080067b0
 80044e8:	20000ae0 	.word	0x20000ae0
 80044ec:	00000000 	.word	0x00000000

080044f0 <bmk7_execute>:
 80044f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80044f4:	4e3a      	ldr	r6, [pc, #232]	; (80045e0 <bmk7_execute+0xf0>)
 80044f6:	4b3b      	ldr	r3, [pc, #236]	; (80045e4 <bmk7_execute+0xf4>)
 80044f8:	69b2      	ldr	r2, [r6, #24]
 80044fa:	483b      	ldr	r0, [pc, #236]	; (80045e8 <bmk7_execute+0xf8>)
 80044fc:	6892      	ldr	r2, [r2, #8]
 80044fe:	4d3b      	ldr	r5, [pc, #236]	; (80045ec <bmk7_execute+0xfc>)
 8004500:	f8df 810c 	ldr.w	r8, [pc, #268]	; 8004610 <bmk7_execute+0x120>
 8004504:	4f3a      	ldr	r7, [pc, #232]	; (80045f0 <bmk7_execute+0x100>)
 8004506:	b082      	sub	sp, #8
 8004508:	2400      	movs	r4, #0
 800450a:	3205      	adds	r2, #5
 800450c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004510:	9400      	str	r4, [sp, #0]
 8004512:	f7fd feed 	bl	80022f0 <chThdCreateStatic>
 8004516:	69b3      	ldr	r3, [r6, #24]
 8004518:	6028      	str	r0, [r5, #0]
 800451a:	689a      	ldr	r2, [r3, #8]
 800451c:	4835      	ldr	r0, [pc, #212]	; (80045f4 <bmk7_execute+0x104>)
 800451e:	4b31      	ldr	r3, [pc, #196]	; (80045e4 <bmk7_execute+0xf4>)
 8004520:	9400      	str	r4, [sp, #0]
 8004522:	3204      	adds	r2, #4
 8004524:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004528:	f7fd fee2 	bl	80022f0 <chThdCreateStatic>
 800452c:	69b3      	ldr	r3, [r6, #24]
 800452e:	6068      	str	r0, [r5, #4]
 8004530:	689a      	ldr	r2, [r3, #8]
 8004532:	4831      	ldr	r0, [pc, #196]	; (80045f8 <bmk7_execute+0x108>)
 8004534:	4b2b      	ldr	r3, [pc, #172]	; (80045e4 <bmk7_execute+0xf4>)
 8004536:	9400      	str	r4, [sp, #0]
 8004538:	3203      	adds	r2, #3
 800453a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800453e:	f7fd fed7 	bl	80022f0 <chThdCreateStatic>
 8004542:	69b3      	ldr	r3, [r6, #24]
 8004544:	60a8      	str	r0, [r5, #8]
 8004546:	689a      	ldr	r2, [r3, #8]
 8004548:	482c      	ldr	r0, [pc, #176]	; (80045fc <bmk7_execute+0x10c>)
 800454a:	4b26      	ldr	r3, [pc, #152]	; (80045e4 <bmk7_execute+0xf4>)
 800454c:	9400      	str	r4, [sp, #0]
 800454e:	3202      	adds	r2, #2
 8004550:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004554:	f7fd fecc 	bl	80022f0 <chThdCreateStatic>
 8004558:	69b3      	ldr	r3, [r6, #24]
 800455a:	60e8      	str	r0, [r5, #12]
 800455c:	689a      	ldr	r2, [r3, #8]
 800455e:	4828      	ldr	r0, [pc, #160]	; (8004600 <bmk7_execute+0x110>)
 8004560:	4b20      	ldr	r3, [pc, #128]	; (80045e4 <bmk7_execute+0xf4>)
 8004562:	9400      	str	r4, [sp, #0]
 8004564:	3201      	adds	r2, #1
 8004566:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800456a:	f7fd fec1 	bl	80022f0 <chThdCreateStatic>
 800456e:	6128      	str	r0, [r5, #16]
 8004570:	f7fe fe66 	bl	8003240 <test_wait_tick>
 8004574:	f7fd f944 	bl	8001800 <test_start_timer.constprop.1>
 8004578:	4625      	mov	r5, r4
 800457a:	2620      	movs	r6, #32
 800457c:	f386 8811 	msr	BASEPRI, r6
 8004580:	2100      	movs	r1, #0
 8004582:	4638      	mov	r0, r7
 8004584:	f7fd f8ac 	bl	80016e0 <chSemResetI>
 8004588:	f7fd fca2 	bl	8001ed0 <chSchRescheduleS>
 800458c:	f385 8811 	msr	BASEPRI, r5
 8004590:	f898 3000 	ldrb.w	r3, [r8]
 8004594:	3401      	adds	r4, #1
 8004596:	2b00      	cmp	r3, #0
 8004598:	d0f0      	beq.n	800457c <bmk7_execute+0x8c>
 800459a:	f7fc f8f9 	bl	8000790 <test_terminate_threads>
 800459e:	f386 8811 	msr	BASEPRI, r6
 80045a2:	2100      	movs	r1, #0
 80045a4:	4812      	ldr	r0, [pc, #72]	; (80045f0 <bmk7_execute+0x100>)
 80045a6:	f7fd f89b 	bl	80016e0 <chSemResetI>
 80045aa:	f7fd fc91 	bl	8001ed0 <chSchRescheduleS>
 80045ae:	f385 8811 	msr	BASEPRI, r5
 80045b2:	f7ff ff15 	bl	80043e0 <test_wait_threads>
 80045b6:	4813      	ldr	r0, [pc, #76]	; (8004604 <bmk7_execute+0x114>)
 80045b8:	f7fc f9ba 	bl	8000930 <test_print>
 80045bc:	4620      	mov	r0, r4
 80045be:	f7fc f8bf 	bl	8000740 <test_printn>
 80045c2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80045c6:	4810      	ldr	r0, [pc, #64]	; (8004608 <bmk7_execute+0x118>)
 80045c8:	f7fc f9b2 	bl	8000930 <test_print>
 80045cc:	0060      	lsls	r0, r4, #1
 80045ce:	f7fc f8b7 	bl	8000740 <test_printn>
 80045d2:	480e      	ldr	r0, [pc, #56]	; (800460c <bmk7_execute+0x11c>)
 80045d4:	b002      	add	sp, #8
 80045d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80045da:	f7fc b989 	b.w	80008f0 <test_println>
 80045de:	bf00      	nop
 80045e0:	20000ae0 	.word	0x20000ae0
 80045e4:	08004151 	.word	0x08004151
 80045e8:	20000d08 	.word	0x20000d08
 80045ec:	2000139c 	.word	0x2000139c
 80045f0:	20000cf8 	.word	0x20000cf8
 80045f4:	20000e50 	.word	0x20000e50
 80045f8:	20000f98 	.word	0x20000f98
 80045fc:	200010e0 	.word	0x200010e0
 8004600:	20001228 	.word	0x20001228
 8004604:	08006680 	.word	0x08006680
 8004608:	08006790 	.word	0x08006790
 800460c:	080067b0 	.word	0x080067b0
 8004610:	20001398 	.word	0x20001398
	...

08004620 <bmk4_execute>:
 8004620:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004624:	4a23      	ldr	r2, [pc, #140]	; (80046b4 <bmk4_execute+0x94>)
 8004626:	4b24      	ldr	r3, [pc, #144]	; (80046b8 <bmk4_execute+0x98>)
 8004628:	6992      	ldr	r2, [r2, #24]
 800462a:	4824      	ldr	r0, [pc, #144]	; (80046bc <bmk4_execute+0x9c>)
 800462c:	6892      	ldr	r2, [r2, #8]
 800462e:	f8df 809c 	ldr.w	r8, [pc, #156]	; 80046cc <bmk4_execute+0xac>
 8004632:	b082      	sub	sp, #8
 8004634:	2500      	movs	r5, #0
 8004636:	3201      	adds	r2, #1
 8004638:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800463c:	9500      	str	r5, [sp, #0]
 800463e:	f7fd fe57 	bl	80022f0 <chThdCreateStatic>
 8004642:	4b1f      	ldr	r3, [pc, #124]	; (80046c0 <bmk4_execute+0xa0>)
 8004644:	4604      	mov	r4, r0
 8004646:	6018      	str	r0, [r3, #0]
 8004648:	f7fe fdfa 	bl	8003240 <test_wait_tick>
 800464c:	f7fd f8d8 	bl	8001800 <test_start_timer.constprop.1>
 8004650:	462e      	mov	r6, r5
 8004652:	2720      	movs	r7, #32
 8004654:	f387 8811 	msr	BASEPRI, r7
 8004658:	2100      	movs	r1, #0
 800465a:	4620      	mov	r0, r4
 800465c:	f7fd fd68 	bl	8002130 <chSchWakeupS>
 8004660:	4620      	mov	r0, r4
 8004662:	2100      	movs	r1, #0
 8004664:	f7fd fd64 	bl	8002130 <chSchWakeupS>
 8004668:	4620      	mov	r0, r4
 800466a:	2100      	movs	r1, #0
 800466c:	f7fd fd60 	bl	8002130 <chSchWakeupS>
 8004670:	4620      	mov	r0, r4
 8004672:	2100      	movs	r1, #0
 8004674:	f7fd fd5c 	bl	8002130 <chSchWakeupS>
 8004678:	f386 8811 	msr	BASEPRI, r6
 800467c:	f898 3000 	ldrb.w	r3, [r8]
 8004680:	3504      	adds	r5, #4
 8004682:	2b00      	cmp	r3, #0
 8004684:	d0e6      	beq.n	8004654 <bmk4_execute+0x34>
 8004686:	f387 8811 	msr	BASEPRI, r7
 800468a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800468e:	4620      	mov	r0, r4
 8004690:	f7fd fd4e 	bl	8002130 <chSchWakeupS>
 8004694:	f386 8811 	msr	BASEPRI, r6
 8004698:	f7ff fea2 	bl	80043e0 <test_wait_threads>
 800469c:	4809      	ldr	r0, [pc, #36]	; (80046c4 <bmk4_execute+0xa4>)
 800469e:	f7fc f947 	bl	8000930 <test_print>
 80046a2:	0068      	lsls	r0, r5, #1
 80046a4:	f7fc f84c 	bl	8000740 <test_printn>
 80046a8:	4807      	ldr	r0, [pc, #28]	; (80046c8 <bmk4_execute+0xa8>)
 80046aa:	b002      	add	sp, #8
 80046ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80046b0:	f7fc b91e 	b.w	80008f0 <test_println>
 80046b4:	20000ae0 	.word	0x20000ae0
 80046b8:	08002501 	.word	0x08002501
 80046bc:	20000d08 	.word	0x20000d08
 80046c0:	2000139c 	.word	0x2000139c
 80046c4:	08006680 	.word	0x08006680
 80046c8:	080067b0 	.word	0x080067b0
 80046cc:	20001398 	.word	0x20001398

080046d0 <bmk3_execute>:
 80046d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80046d4:	4f2c      	ldr	r7, [pc, #176]	; (8004788 <bmk3_execute+0xb8>)
 80046d6:	4d2d      	ldr	r5, [pc, #180]	; (800478c <bmk3_execute+0xbc>)
 80046d8:	69ba      	ldr	r2, [r7, #24]
 80046da:	4b2d      	ldr	r3, [pc, #180]	; (8004790 <bmk3_execute+0xc0>)
 80046dc:	6892      	ldr	r2, [r2, #8]
 80046de:	4c2d      	ldr	r4, [pc, #180]	; (8004794 <bmk3_execute+0xc4>)
 80046e0:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 80047a4 <bmk3_execute+0xd4>
 80046e4:	b082      	sub	sp, #8
 80046e6:	2600      	movs	r6, #0
 80046e8:	3201      	adds	r2, #1
 80046ea:	4628      	mov	r0, r5
 80046ec:	9600      	str	r6, [sp, #0]
 80046ee:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80046f2:	f7fd fdfd 	bl	80022f0 <chThdCreateStatic>
 80046f6:	69bb      	ldr	r3, [r7, #24]
 80046f8:	6020      	str	r0, [r4, #0]
 80046fa:	689a      	ldr	r2, [r3, #8]
 80046fc:	9600      	str	r6, [sp, #0]
 80046fe:	4643      	mov	r3, r8
 8004700:	3a02      	subs	r2, #2
 8004702:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8004706:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800470a:	f7fd fdf1 	bl	80022f0 <chThdCreateStatic>
 800470e:	69bb      	ldr	r3, [r7, #24]
 8004710:	6060      	str	r0, [r4, #4]
 8004712:	689a      	ldr	r2, [r3, #8]
 8004714:	9600      	str	r6, [sp, #0]
 8004716:	4643      	mov	r3, r8
 8004718:	3a03      	subs	r2, #3
 800471a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 800471e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004722:	f7fd fde5 	bl	80022f0 <chThdCreateStatic>
 8004726:	69bb      	ldr	r3, [r7, #24]
 8004728:	60a0      	str	r0, [r4, #8]
 800472a:	689a      	ldr	r2, [r3, #8]
 800472c:	9600      	str	r6, [sp, #0]
 800472e:	4643      	mov	r3, r8
 8004730:	3a04      	subs	r2, #4
 8004732:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8004736:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800473a:	f7fd fdd9 	bl	80022f0 <chThdCreateStatic>
 800473e:	69bb      	ldr	r3, [r7, #24]
 8004740:	60e0      	str	r0, [r4, #12]
 8004742:	689a      	ldr	r2, [r3, #8]
 8004744:	9600      	str	r6, [sp, #0]
 8004746:	3a05      	subs	r2, #5
 8004748:	4643      	mov	r3, r8
 800474a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800474e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8004752:	f7fd fdcd 	bl	80022f0 <chThdCreateStatic>
 8004756:	6120      	str	r0, [r4, #16]
 8004758:	6820      	ldr	r0, [r4, #0]
 800475a:	f7fe ff51 	bl	8003600 <msg_loop_test>
 800475e:	4604      	mov	r4, r0
 8004760:	f7ff fe3e 	bl	80043e0 <test_wait_threads>
 8004764:	480c      	ldr	r0, [pc, #48]	; (8004798 <bmk3_execute+0xc8>)
 8004766:	f7fc f8e3 	bl	8000930 <test_print>
 800476a:	4620      	mov	r0, r4
 800476c:	f7fb ffe8 	bl	8000740 <test_printn>
 8004770:	480a      	ldr	r0, [pc, #40]	; (800479c <bmk3_execute+0xcc>)
 8004772:	f7fc f8dd 	bl	8000930 <test_print>
 8004776:	0060      	lsls	r0, r4, #1
 8004778:	f7fb ffe2 	bl	8000740 <test_printn>
 800477c:	4808      	ldr	r0, [pc, #32]	; (80047a0 <bmk3_execute+0xd0>)
 800477e:	b002      	add	sp, #8
 8004780:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004784:	f7fc b8b4 	b.w	80008f0 <test_println>
 8004788:	20000ae0 	.word	0x20000ae0
 800478c:	20000d08 	.word	0x20000d08
 8004790:	08003501 	.word	0x08003501
 8004794:	2000139c 	.word	0x2000139c
 8004798:	08006680 	.word	0x08006680
 800479c:	08006770 	.word	0x08006770
 80047a0:	080067b0 	.word	0x080067b0
 80047a4:	08006601 	.word	0x08006601
	...

080047b0 <bmk2_execute>:
 80047b0:	b510      	push	{r4, lr}
 80047b2:	4a13      	ldr	r2, [pc, #76]	; (8004800 <bmk2_execute+0x50>)
 80047b4:	4b13      	ldr	r3, [pc, #76]	; (8004804 <bmk2_execute+0x54>)
 80047b6:	6992      	ldr	r2, [r2, #24]
 80047b8:	4813      	ldr	r0, [pc, #76]	; (8004808 <bmk2_execute+0x58>)
 80047ba:	6892      	ldr	r2, [r2, #8]
 80047bc:	b082      	sub	sp, #8
 80047be:	2100      	movs	r1, #0
 80047c0:	3201      	adds	r2, #1
 80047c2:	9100      	str	r1, [sp, #0]
 80047c4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80047c8:	f7fd fd92 	bl	80022f0 <chThdCreateStatic>
 80047cc:	4b0f      	ldr	r3, [pc, #60]	; (800480c <bmk2_execute+0x5c>)
 80047ce:	6018      	str	r0, [r3, #0]
 80047d0:	f7fe ff16 	bl	8003600 <msg_loop_test>
 80047d4:	4604      	mov	r4, r0
 80047d6:	f7ff fe03 	bl	80043e0 <test_wait_threads>
 80047da:	480d      	ldr	r0, [pc, #52]	; (8004810 <bmk2_execute+0x60>)
 80047dc:	f7fc f8a8 	bl	8000930 <test_print>
 80047e0:	4620      	mov	r0, r4
 80047e2:	f7fb ffad 	bl	8000740 <test_printn>
 80047e6:	480b      	ldr	r0, [pc, #44]	; (8004814 <bmk2_execute+0x64>)
 80047e8:	f7fc f8a2 	bl	8000930 <test_print>
 80047ec:	0060      	lsls	r0, r4, #1
 80047ee:	f7fb ffa7 	bl	8000740 <test_printn>
 80047f2:	4809      	ldr	r0, [pc, #36]	; (8004818 <bmk2_execute+0x68>)
 80047f4:	b002      	add	sp, #8
 80047f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80047fa:	f7fc b879 	b.w	80008f0 <test_println>
 80047fe:	bf00      	nop
 8004800:	20000ae0 	.word	0x20000ae0
 8004804:	08003501 	.word	0x08003501
 8004808:	20000d08 	.word	0x20000d08
 800480c:	2000139c 	.word	0x2000139c
 8004810:	08006680 	.word	0x08006680
 8004814:	08006770 	.word	0x08006770
 8004818:	080067b0 	.word	0x080067b0
 800481c:	00000000 	.word	0x00000000

08004820 <bmk1_execute>:
 8004820:	b510      	push	{r4, lr}
 8004822:	4a13      	ldr	r2, [pc, #76]	; (8004870 <bmk1_execute+0x50>)
 8004824:	4b13      	ldr	r3, [pc, #76]	; (8004874 <bmk1_execute+0x54>)
 8004826:	6992      	ldr	r2, [r2, #24]
 8004828:	4813      	ldr	r0, [pc, #76]	; (8004878 <bmk1_execute+0x58>)
 800482a:	6892      	ldr	r2, [r2, #8]
 800482c:	b082      	sub	sp, #8
 800482e:	2100      	movs	r1, #0
 8004830:	3a01      	subs	r2, #1
 8004832:	9100      	str	r1, [sp, #0]
 8004834:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004838:	f7fd fd5a 	bl	80022f0 <chThdCreateStatic>
 800483c:	4b0f      	ldr	r3, [pc, #60]	; (800487c <bmk1_execute+0x5c>)
 800483e:	6018      	str	r0, [r3, #0]
 8004840:	f7fe fede 	bl	8003600 <msg_loop_test>
 8004844:	4604      	mov	r4, r0
 8004846:	f7ff fdcb 	bl	80043e0 <test_wait_threads>
 800484a:	480d      	ldr	r0, [pc, #52]	; (8004880 <bmk1_execute+0x60>)
 800484c:	f7fc f870 	bl	8000930 <test_print>
 8004850:	4620      	mov	r0, r4
 8004852:	f7fb ff75 	bl	8000740 <test_printn>
 8004856:	480b      	ldr	r0, [pc, #44]	; (8004884 <bmk1_execute+0x64>)
 8004858:	f7fc f86a 	bl	8000930 <test_print>
 800485c:	0060      	lsls	r0, r4, #1
 800485e:	f7fb ff6f 	bl	8000740 <test_printn>
 8004862:	4809      	ldr	r0, [pc, #36]	; (8004888 <bmk1_execute+0x68>)
 8004864:	b002      	add	sp, #8
 8004866:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800486a:	f7fc b841 	b.w	80008f0 <test_println>
 800486e:	bf00      	nop
 8004870:	20000ae0 	.word	0x20000ae0
 8004874:	08003501 	.word	0x08003501
 8004878:	20000d08 	.word	0x20000d08
 800487c:	2000139c 	.word	0x2000139c
 8004880:	08006680 	.word	0x08006680
 8004884:	08006770 	.word	0x08006770
 8004888:	080067b0 	.word	0x080067b0
 800488c:	00000000 	.word	0x00000000

08004890 <queues2_execute>:
 8004890:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004894:	2320      	movs	r3, #32
 8004896:	b083      	sub	sp, #12
 8004898:	f383 8811 	msr	BASEPRI, r3
 800489c:	4d8a      	ldr	r5, [pc, #552]	; (8004ac8 <queues2_execute+0x238>)
 800489e:	e9d5 3205 	ldrd	r3, r2, [r5, #20]
 80048a2:	429a      	cmp	r2, r3
 80048a4:	d041      	beq.n	800492a <queues2_execute+0x9a>
 80048a6:	2100      	movs	r1, #0
 80048a8:	2001      	movs	r0, #1
 80048aa:	f7fb ffd1 	bl	8000850 <_test_assert>
 80048ae:	bbb0      	cbnz	r0, 800491e <queues2_execute+0x8e>
 80048b0:	f380 8811 	msr	BASEPRI, r0
 80048b4:	4e84      	ldr	r6, [pc, #528]	; (8004ac8 <queues2_execute+0x238>)
 80048b6:	2441      	movs	r4, #65	; 0x41
 80048b8:	4621      	mov	r1, r4
 80048ba:	3401      	adds	r4, #1
 80048bc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80048c0:	4630      	mov	r0, r6
 80048c2:	b2e4      	uxtb	r4, r4
 80048c4:	f7fe fb0c 	bl	8002ee0 <chOQPutTimeout>
 80048c8:	2c45      	cmp	r4, #69	; 0x45
 80048ca:	d1f5      	bne.n	80048b8 <queues2_execute+0x28>
 80048cc:	2620      	movs	r6, #32
 80048ce:	f386 8811 	msr	BASEPRI, r6
 80048d2:	68a9      	ldr	r1, [r5, #8]
 80048d4:	fab1 f181 	clz	r1, r1
 80048d8:	0949      	lsrs	r1, r1, #5
 80048da:	2002      	movs	r0, #2
 80048dc:	f7fb ffb8 	bl	8000850 <_test_assert>
 80048e0:	4607      	mov	r7, r0
 80048e2:	b9e0      	cbnz	r0, 800491e <queues2_execute+0x8e>
 80048e4:	f380 8811 	msr	BASEPRI, r0
 80048e8:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 8004ac8 <queues2_execute+0x238>
 80048ec:	4680      	mov	r8, r0
 80048ee:	2404      	movs	r4, #4
 80048f0:	f386 8811 	msr	BASEPRI, r6
 80048f4:	4648      	mov	r0, r9
 80048f6:	f7fc fd5b 	bl	80013b0 <chOQGetI>
 80048fa:	f388 8811 	msr	BASEPRI, r8
 80048fe:	b2c0      	uxtb	r0, r0
 8004900:	f7fb ffbe 	bl	8000880 <test_emit_token>
 8004904:	3c01      	subs	r4, #1
 8004906:	d1f3      	bne.n	80048f0 <queues2_execute+0x60>
 8004908:	f386 8811 	msr	BASEPRI, r6
 800490c:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 8004910:	429a      	cmp	r2, r3
 8004912:	d029      	beq.n	8004968 <queues2_execute+0xd8>
 8004914:	4639      	mov	r1, r7
 8004916:	2003      	movs	r0, #3
 8004918:	f7fb ff9a 	bl	8000850 <_test_assert>
 800491c:	b150      	cbz	r0, 8004934 <queues2_execute+0xa4>
 800491e:	2300      	movs	r3, #0
 8004920:	f383 8811 	msr	BASEPRI, r3
 8004924:	b003      	add	sp, #12
 8004926:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800492a:	68a9      	ldr	r1, [r5, #8]
 800492c:	3100      	adds	r1, #0
 800492e:	bf18      	it	ne
 8004930:	2101      	movne	r1, #1
 8004932:	e7b9      	b.n	80048a8 <queues2_execute+0x18>
 8004934:	f380 8811 	msr	BASEPRI, r0
 8004938:	4964      	ldr	r1, [pc, #400]	; (8004acc <queues2_execute+0x23c>)
 800493a:	2004      	movs	r0, #4
 800493c:	f7fb ff60 	bl	8000800 <_test_assert_sequence>
 8004940:	4604      	mov	r4, r0
 8004942:	2800      	cmp	r0, #0
 8004944:	d1ee      	bne.n	8004924 <queues2_execute+0x94>
 8004946:	2620      	movs	r6, #32
 8004948:	f386 8811 	msr	BASEPRI, r6
 800494c:	485e      	ldr	r0, [pc, #376]	; (8004ac8 <queues2_execute+0x238>)
 800494e:	f7fc fd2f 	bl	80013b0 <chOQGetI>
 8004952:	3003      	adds	r0, #3
 8004954:	bf14      	ite	ne
 8004956:	2100      	movne	r1, #0
 8004958:	2101      	moveq	r1, #1
 800495a:	2005      	movs	r0, #5
 800495c:	f7fb ff78 	bl	8000850 <_test_assert>
 8004960:	b138      	cbz	r0, 8004972 <queues2_execute+0xe2>
 8004962:	f384 8811 	msr	BASEPRI, r4
 8004966:	e7dd      	b.n	8004924 <queues2_execute+0x94>
 8004968:	68af      	ldr	r7, [r5, #8]
 800496a:	3700      	adds	r7, #0
 800496c:	bf18      	it	ne
 800496e:	2701      	movne	r7, #1
 8004970:	e7d0      	b.n	8004914 <queues2_execute+0x84>
 8004972:	f380 8811 	msr	BASEPRI, r0
 8004976:	2208      	movs	r2, #8
 8004978:	4603      	mov	r3, r0
 800497a:	4955      	ldr	r1, [pc, #340]	; (8004ad0 <queues2_execute+0x240>)
 800497c:	4852      	ldr	r0, [pc, #328]	; (8004ac8 <queues2_execute+0x238>)
 800497e:	f7fe fa57 	bl	8002e30 <chOQWriteTimeout>
 8004982:	f1a0 0104 	sub.w	r1, r0, #4
 8004986:	fab1 f181 	clz	r1, r1
 800498a:	0949      	lsrs	r1, r1, #5
 800498c:	2006      	movs	r0, #6
 800498e:	f7fb ff5f 	bl	8000850 <_test_assert>
 8004992:	4604      	mov	r4, r0
 8004994:	2800      	cmp	r0, #0
 8004996:	d1c5      	bne.n	8004924 <queues2_execute+0x94>
 8004998:	f386 8811 	msr	BASEPRI, r6
 800499c:	68a9      	ldr	r1, [r5, #8]
 800499e:	fab1 f181 	clz	r1, r1
 80049a2:	0949      	lsrs	r1, r1, #5
 80049a4:	2007      	movs	r0, #7
 80049a6:	f7fb ff53 	bl	8000850 <_test_assert>
 80049aa:	4607      	mov	r7, r0
 80049ac:	2800      	cmp	r0, #0
 80049ae:	d1d8      	bne.n	8004962 <queues2_execute+0xd2>
 80049b0:	f380 8811 	msr	BASEPRI, r0
 80049b4:	4a47      	ldr	r2, [pc, #284]	; (8004ad4 <queues2_execute+0x244>)
 80049b6:	4b48      	ldr	r3, [pc, #288]	; (8004ad8 <queues2_execute+0x248>)
 80049b8:	6992      	ldr	r2, [r2, #24]
 80049ba:	4848      	ldr	r0, [pc, #288]	; (8004adc <queues2_execute+0x24c>)
 80049bc:	6892      	ldr	r2, [r2, #8]
 80049be:	9700      	str	r7, [sp, #0]
 80049c0:	3201      	adds	r2, #1
 80049c2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80049c6:	f7fd fc93 	bl	80022f0 <chThdCreateStatic>
 80049ca:	4b45      	ldr	r3, [pc, #276]	; (8004ae0 <queues2_execute+0x250>)
 80049cc:	6018      	str	r0, [r3, #0]
 80049ce:	f386 8811 	msr	BASEPRI, r6
 80049d2:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 80049d6:	68a9      	ldr	r1, [r5, #8]
 80049d8:	1a9b      	subs	r3, r3, r2
 80049da:	1a59      	subs	r1, r3, r1
 80049dc:	f1a1 0104 	sub.w	r1, r1, #4
 80049e0:	fab1 f181 	clz	r1, r1
 80049e4:	0949      	lsrs	r1, r1, #5
 80049e6:	2008      	movs	r0, #8
 80049e8:	f7fb ff32 	bl	8000850 <_test_assert>
 80049ec:	b110      	cbz	r0, 80049f4 <queues2_execute+0x164>
 80049ee:	f387 8811 	msr	BASEPRI, r7
 80049f2:	e797      	b.n	8004924 <queues2_execute+0x94>
 80049f4:	f380 8811 	msr	BASEPRI, r0
 80049f8:	f7ff fcf2 	bl	80043e0 <test_wait_threads>
 80049fc:	f386 8811 	msr	BASEPRI, r6
 8004a00:	e9d5 1203 	ldrd	r1, r2, [r5, #12]
 8004a04:	682b      	ldr	r3, [r5, #0]
 8004a06:	61a9      	str	r1, [r5, #24]
 8004a08:	1a52      	subs	r2, r2, r1
 8004a0a:	42ab      	cmp	r3, r5
 8004a0c:	6169      	str	r1, [r5, #20]
 8004a0e:	60aa      	str	r2, [r5, #8]
 8004a10:	d00b      	beq.n	8004a2a <queues2_execute+0x19a>
 8004a12:	f06f 0401 	mvn.w	r4, #1
 8004a16:	681a      	ldr	r2, [r3, #0]
 8004a18:	602a      	str	r2, [r5, #0]
 8004a1a:	6055      	str	r5, [r2, #4]
 8004a1c:	4618      	mov	r0, r3
 8004a1e:	621c      	str	r4, [r3, #32]
 8004a20:	f7fc fb06 	bl	8001030 <chSchReadyI>
 8004a24:	682b      	ldr	r3, [r5, #0]
 8004a26:	42ab      	cmp	r3, r5
 8004a28:	d1f5      	bne.n	8004a16 <queues2_execute+0x186>
 8004a2a:	2400      	movs	r4, #0
 8004a2c:	f384 8811 	msr	BASEPRI, r4
 8004a30:	2620      	movs	r6, #32
 8004a32:	f386 8811 	msr	BASEPRI, r6
 8004a36:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 8004a3a:	68a9      	ldr	r1, [r5, #8]
 8004a3c:	1a9b      	subs	r3, r3, r2
 8004a3e:	1a5f      	subs	r7, r3, r1
 8004a40:	4279      	negs	r1, r7
 8004a42:	4179      	adcs	r1, r7
 8004a44:	2009      	movs	r0, #9
 8004a46:	f7fb ff03 	bl	8000850 <_test_assert>
 8004a4a:	4603      	mov	r3, r0
 8004a4c:	2800      	cmp	r0, #0
 8004a4e:	d188      	bne.n	8004962 <queues2_execute+0xd2>
 8004a50:	f380 8811 	msr	BASEPRI, r0
 8004a54:	2202      	movs	r2, #2
 8004a56:	491e      	ldr	r1, [pc, #120]	; (8004ad0 <queues2_execute+0x240>)
 8004a58:	481b      	ldr	r0, [pc, #108]	; (8004ac8 <queues2_execute+0x238>)
 8004a5a:	f7fe f9e9 	bl	8002e30 <chOQWriteTimeout>
 8004a5e:	3802      	subs	r0, #2
 8004a60:	4241      	negs	r1, r0
 8004a62:	4141      	adcs	r1, r0
 8004a64:	200a      	movs	r0, #10
 8004a66:	f7fb fef3 	bl	8000850 <_test_assert>
 8004a6a:	4603      	mov	r3, r0
 8004a6c:	2800      	cmp	r0, #0
 8004a6e:	f47f af59 	bne.w	8004924 <queues2_execute+0x94>
 8004a72:	2202      	movs	r2, #2
 8004a74:	4916      	ldr	r1, [pc, #88]	; (8004ad0 <queues2_execute+0x240>)
 8004a76:	4814      	ldr	r0, [pc, #80]	; (8004ac8 <queues2_execute+0x238>)
 8004a78:	f7fe f9da 	bl	8002e30 <chOQWriteTimeout>
 8004a7c:	1e82      	subs	r2, r0, #2
 8004a7e:	4251      	negs	r1, r2
 8004a80:	4151      	adcs	r1, r2
 8004a82:	200b      	movs	r0, #11
 8004a84:	f7fb fee4 	bl	8000850 <_test_assert>
 8004a88:	4604      	mov	r4, r0
 8004a8a:	2800      	cmp	r0, #0
 8004a8c:	f47f af4a 	bne.w	8004924 <queues2_execute+0x94>
 8004a90:	f386 8811 	msr	BASEPRI, r6
 8004a94:	68a9      	ldr	r1, [r5, #8]
 8004a96:	fab1 f181 	clz	r1, r1
 8004a9a:	0949      	lsrs	r1, r1, #5
 8004a9c:	200c      	movs	r0, #12
 8004a9e:	f7fb fed7 	bl	8000850 <_test_assert>
 8004aa2:	4601      	mov	r1, r0
 8004aa4:	2800      	cmp	r0, #0
 8004aa6:	f47f af5c 	bne.w	8004962 <queues2_execute+0xd2>
 8004aaa:	f380 8811 	msr	BASEPRI, r0
 8004aae:	220a      	movs	r2, #10
 8004ab0:	4805      	ldr	r0, [pc, #20]	; (8004ac8 <queues2_execute+0x238>)
 8004ab2:	f7fe fa15 	bl	8002ee0 <chOQPutTimeout>
 8004ab6:	1c43      	adds	r3, r0, #1
 8004ab8:	4259      	negs	r1, r3
 8004aba:	4159      	adcs	r1, r3
 8004abc:	200d      	movs	r0, #13
 8004abe:	b003      	add	sp, #12
 8004ac0:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004ac4:	f7fb bec4 	b.w	8000850 <_test_assert>
 8004ac8:	20000888 	.word	0x20000888
 8004acc:	08006c30 	.word	0x08006c30
 8004ad0:	20000e50 	.word	0x20000e50
 8004ad4:	20000ae0 	.word	0x20000ae0
 8004ad8:	08002f31 	.word	0x08002f31
 8004adc:	20000d08 	.word	0x20000d08
 8004ae0:	2000139c 	.word	0x2000139c
	...

08004af0 <queues1_execute>:
 8004af0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004af2:	2620      	movs	r6, #32
 8004af4:	b083      	sub	sp, #12
 8004af6:	f386 8811 	msr	BASEPRI, r6
 8004afa:	4c9f      	ldr	r4, [pc, #636]	; (8004d78 <queues1_execute+0x288>)
 8004afc:	68a1      	ldr	r1, [r4, #8]
 8004afe:	fab1 f181 	clz	r1, r1
 8004b02:	0949      	lsrs	r1, r1, #5
 8004b04:	2001      	movs	r0, #1
 8004b06:	f7fb fea3 	bl	8000850 <_test_assert>
 8004b0a:	bb10      	cbnz	r0, 8004b52 <queues1_execute+0x62>
 8004b0c:	4605      	mov	r5, r0
 8004b0e:	f380 8811 	msr	BASEPRI, r0
 8004b12:	f386 8811 	msr	BASEPRI, r6
 8004b16:	2141      	movs	r1, #65	; 0x41
 8004b18:	4620      	mov	r0, r4
 8004b1a:	f7fc fc21 	bl	8001360 <chIQPutI>
 8004b1e:	4620      	mov	r0, r4
 8004b20:	2142      	movs	r1, #66	; 0x42
 8004b22:	f7fc fc1d 	bl	8001360 <chIQPutI>
 8004b26:	4620      	mov	r0, r4
 8004b28:	2143      	movs	r1, #67	; 0x43
 8004b2a:	f7fc fc19 	bl	8001360 <chIQPutI>
 8004b2e:	4620      	mov	r0, r4
 8004b30:	2144      	movs	r1, #68	; 0x44
 8004b32:	f7fc fc15 	bl	8001360 <chIQPutI>
 8004b36:	f385 8811 	msr	BASEPRI, r5
 8004b3a:	f386 8811 	msr	BASEPRI, r6
 8004b3e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8004b42:	429a      	cmp	r2, r3
 8004b44:	d038      	beq.n	8004bb8 <queues1_execute+0xc8>
 8004b46:	4629      	mov	r1, r5
 8004b48:	2002      	movs	r0, #2
 8004b4a:	f7fb fe81 	bl	8000850 <_test_assert>
 8004b4e:	4605      	mov	r5, r0
 8004b50:	b120      	cbz	r0, 8004b5c <queues1_execute+0x6c>
 8004b52:	2300      	movs	r3, #0
 8004b54:	f383 8811 	msr	BASEPRI, r3
 8004b58:	b003      	add	sp, #12
 8004b5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004b5c:	f380 8811 	msr	BASEPRI, r0
 8004b60:	2320      	movs	r3, #32
 8004b62:	f383 8811 	msr	BASEPRI, r3
 8004b66:	4884      	ldr	r0, [pc, #528]	; (8004d78 <queues1_execute+0x288>)
 8004b68:	4629      	mov	r1, r5
 8004b6a:	f7fc fbf9 	bl	8001360 <chIQPutI>
 8004b6e:	3004      	adds	r0, #4
 8004b70:	bf14      	ite	ne
 8004b72:	2100      	movne	r1, #0
 8004b74:	2101      	moveq	r1, #1
 8004b76:	2003      	movs	r0, #3
 8004b78:	f7fb fe6a 	bl	8000850 <_test_assert>
 8004b7c:	b9c0      	cbnz	r0, 8004bb0 <queues1_execute+0xc0>
 8004b7e:	f380 8811 	msr	BASEPRI, r0
 8004b82:	4e7d      	ldr	r6, [pc, #500]	; (8004d78 <queues1_execute+0x288>)
 8004b84:	2504      	movs	r5, #4
 8004b86:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8004b8a:	4630      	mov	r0, r6
 8004b8c:	f7fe fa38 	bl	8003000 <chIQGetTimeout>
 8004b90:	b2c0      	uxtb	r0, r0
 8004b92:	f7fb fe75 	bl	8000880 <test_emit_token>
 8004b96:	3d01      	subs	r5, #1
 8004b98:	d1f5      	bne.n	8004b86 <queues1_execute+0x96>
 8004b9a:	2620      	movs	r6, #32
 8004b9c:	f386 8811 	msr	BASEPRI, r6
 8004ba0:	68a1      	ldr	r1, [r4, #8]
 8004ba2:	fab1 f181 	clz	r1, r1
 8004ba6:	0949      	lsrs	r1, r1, #5
 8004ba8:	2004      	movs	r0, #4
 8004baa:	f7fb fe51 	bl	8000850 <_test_assert>
 8004bae:	b178      	cbz	r0, 8004bd0 <queues1_execute+0xe0>
 8004bb0:	f385 8811 	msr	BASEPRI, r5
 8004bb4:	b003      	add	sp, #12
 8004bb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004bb8:	68a5      	ldr	r5, [r4, #8]
 8004bba:	3500      	adds	r5, #0
 8004bbc:	bf18      	it	ne
 8004bbe:	2501      	movne	r5, #1
 8004bc0:	4629      	mov	r1, r5
 8004bc2:	2002      	movs	r0, #2
 8004bc4:	f7fb fe44 	bl	8000850 <_test_assert>
 8004bc8:	4605      	mov	r5, r0
 8004bca:	2800      	cmp	r0, #0
 8004bcc:	d1c1      	bne.n	8004b52 <queues1_execute+0x62>
 8004bce:	e7c5      	b.n	8004b5c <queues1_execute+0x6c>
 8004bd0:	f385 8811 	msr	BASEPRI, r5
 8004bd4:	4969      	ldr	r1, [pc, #420]	; (8004d7c <queues1_execute+0x28c>)
 8004bd6:	2005      	movs	r0, #5
 8004bd8:	f7fb fe12 	bl	8000800 <_test_assert_sequence>
 8004bdc:	2800      	cmp	r0, #0
 8004bde:	d1bb      	bne.n	8004b58 <queues1_execute+0x68>
 8004be0:	f386 8811 	msr	BASEPRI, r6
 8004be4:	2141      	movs	r1, #65	; 0x41
 8004be6:	4864      	ldr	r0, [pc, #400]	; (8004d78 <queues1_execute+0x288>)
 8004be8:	f7fc fbba 	bl	8001360 <chIQPutI>
 8004bec:	2142      	movs	r1, #66	; 0x42
 8004bee:	4862      	ldr	r0, [pc, #392]	; (8004d78 <queues1_execute+0x288>)
 8004bf0:	f7fc fbb6 	bl	8001360 <chIQPutI>
 8004bf4:	2143      	movs	r1, #67	; 0x43
 8004bf6:	4860      	ldr	r0, [pc, #384]	; (8004d78 <queues1_execute+0x288>)
 8004bf8:	f7fc fbb2 	bl	8001360 <chIQPutI>
 8004bfc:	2144      	movs	r1, #68	; 0x44
 8004bfe:	485e      	ldr	r0, [pc, #376]	; (8004d78 <queues1_execute+0x288>)
 8004c00:	f7fc fbae 	bl	8001360 <chIQPutI>
 8004c04:	f385 8811 	msr	BASEPRI, r5
 8004c08:	495d      	ldr	r1, [pc, #372]	; (8004d80 <queues1_execute+0x290>)
 8004c0a:	485b      	ldr	r0, [pc, #364]	; (8004d78 <queues1_execute+0x288>)
 8004c0c:	2208      	movs	r2, #8
 8004c0e:	462b      	mov	r3, r5
 8004c10:	f7fe f9a6 	bl	8002f60 <chIQReadTimeout>
 8004c14:	f1a0 0104 	sub.w	r1, r0, #4
 8004c18:	fab1 f181 	clz	r1, r1
 8004c1c:	0949      	lsrs	r1, r1, #5
 8004c1e:	2006      	movs	r0, #6
 8004c20:	f7fb fe16 	bl	8000850 <_test_assert>
 8004c24:	2800      	cmp	r0, #0
 8004c26:	d197      	bne.n	8004b58 <queues1_execute+0x68>
 8004c28:	f386 8811 	msr	BASEPRI, r6
 8004c2c:	68a1      	ldr	r1, [r4, #8]
 8004c2e:	fab1 f181 	clz	r1, r1
 8004c32:	0949      	lsrs	r1, r1, #5
 8004c34:	2007      	movs	r0, #7
 8004c36:	f7fb fe0b 	bl	8000850 <_test_assert>
 8004c3a:	2800      	cmp	r0, #0
 8004c3c:	d1b8      	bne.n	8004bb0 <queues1_execute+0xc0>
 8004c3e:	f385 8811 	msr	BASEPRI, r5
 8004c42:	f386 8811 	msr	BASEPRI, r6
 8004c46:	2141      	movs	r1, #65	; 0x41
 8004c48:	484b      	ldr	r0, [pc, #300]	; (8004d78 <queues1_execute+0x288>)
 8004c4a:	f7fc fb89 	bl	8001360 <chIQPutI>
 8004c4e:	2142      	movs	r1, #66	; 0x42
 8004c50:	4849      	ldr	r0, [pc, #292]	; (8004d78 <queues1_execute+0x288>)
 8004c52:	f7fc fb85 	bl	8001360 <chIQPutI>
 8004c56:	2143      	movs	r1, #67	; 0x43
 8004c58:	4847      	ldr	r0, [pc, #284]	; (8004d78 <queues1_execute+0x288>)
 8004c5a:	f7fc fb81 	bl	8001360 <chIQPutI>
 8004c5e:	2144      	movs	r1, #68	; 0x44
 8004c60:	4845      	ldr	r0, [pc, #276]	; (8004d78 <queues1_execute+0x288>)
 8004c62:	f7fc fb7d 	bl	8001360 <chIQPutI>
 8004c66:	f385 8811 	msr	BASEPRI, r5
 8004c6a:	4945      	ldr	r1, [pc, #276]	; (8004d80 <queues1_execute+0x290>)
 8004c6c:	4842      	ldr	r0, [pc, #264]	; (8004d78 <queues1_execute+0x288>)
 8004c6e:	2202      	movs	r2, #2
 8004c70:	462b      	mov	r3, r5
 8004c72:	f7fe f975 	bl	8002f60 <chIQReadTimeout>
 8004c76:	f1a0 0102 	sub.w	r1, r0, #2
 8004c7a:	fab1 f181 	clz	r1, r1
 8004c7e:	0949      	lsrs	r1, r1, #5
 8004c80:	2008      	movs	r0, #8
 8004c82:	f7fb fde5 	bl	8000850 <_test_assert>
 8004c86:	2800      	cmp	r0, #0
 8004c88:	f47f af66 	bne.w	8004b58 <queues1_execute+0x68>
 8004c8c:	493c      	ldr	r1, [pc, #240]	; (8004d80 <queues1_execute+0x290>)
 8004c8e:	483a      	ldr	r0, [pc, #232]	; (8004d78 <queues1_execute+0x288>)
 8004c90:	462b      	mov	r3, r5
 8004c92:	2202      	movs	r2, #2
 8004c94:	f7fe f964 	bl	8002f60 <chIQReadTimeout>
 8004c98:	f1a0 0102 	sub.w	r1, r0, #2
 8004c9c:	fab1 f181 	clz	r1, r1
 8004ca0:	0949      	lsrs	r1, r1, #5
 8004ca2:	2009      	movs	r0, #9
 8004ca4:	f7fb fdd4 	bl	8000850 <_test_assert>
 8004ca8:	2800      	cmp	r0, #0
 8004caa:	f47f af55 	bne.w	8004b58 <queues1_execute+0x68>
 8004cae:	f386 8811 	msr	BASEPRI, r6
 8004cb2:	68a1      	ldr	r1, [r4, #8]
 8004cb4:	fab1 f181 	clz	r1, r1
 8004cb8:	0949      	lsrs	r1, r1, #5
 8004cba:	200a      	movs	r0, #10
 8004cbc:	f7fb fdc8 	bl	8000850 <_test_assert>
 8004cc0:	2800      	cmp	r0, #0
 8004cc2:	f47f af75 	bne.w	8004bb0 <queues1_execute+0xc0>
 8004cc6:	f385 8811 	msr	BASEPRI, r5
 8004cca:	f386 8811 	msr	BASEPRI, r6
 8004cce:	482a      	ldr	r0, [pc, #168]	; (8004d78 <queues1_execute+0x288>)
 8004cd0:	4629      	mov	r1, r5
 8004cd2:	f7fc fb45 	bl	8001360 <chIQPutI>
 8004cd6:	6823      	ldr	r3, [r4, #0]
 8004cd8:	68e2      	ldr	r2, [r4, #12]
 8004cda:	60a5      	str	r5, [r4, #8]
 8004cdc:	42a3      	cmp	r3, r4
 8004cde:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8004ce2:	d00b      	beq.n	8004cfc <queues1_execute+0x20c>
 8004ce4:	f06f 0501 	mvn.w	r5, #1
 8004ce8:	681a      	ldr	r2, [r3, #0]
 8004cea:	6022      	str	r2, [r4, #0]
 8004cec:	6054      	str	r4, [r2, #4]
 8004cee:	4618      	mov	r0, r3
 8004cf0:	621d      	str	r5, [r3, #32]
 8004cf2:	f7fc f99d 	bl	8001030 <chSchReadyI>
 8004cf6:	6823      	ldr	r3, [r4, #0]
 8004cf8:	42a3      	cmp	r3, r4
 8004cfa:	d1f5      	bne.n	8004ce8 <queues1_execute+0x1f8>
 8004cfc:	2700      	movs	r7, #0
 8004cfe:	f387 8811 	msr	BASEPRI, r7
 8004d02:	2620      	movs	r6, #32
 8004d04:	f386 8811 	msr	BASEPRI, r6
 8004d08:	68a1      	ldr	r1, [r4, #8]
 8004d0a:	fab1 f181 	clz	r1, r1
 8004d0e:	0949      	lsrs	r1, r1, #5
 8004d10:	200b      	movs	r0, #11
 8004d12:	f7fb fd9d 	bl	8000850 <_test_assert>
 8004d16:	4605      	mov	r5, r0
 8004d18:	b110      	cbz	r0, 8004d20 <queues1_execute+0x230>
 8004d1a:	f387 8811 	msr	BASEPRI, r7
 8004d1e:	e71b      	b.n	8004b58 <queues1_execute+0x68>
 8004d20:	f380 8811 	msr	BASEPRI, r0
 8004d24:	4a17      	ldr	r2, [pc, #92]	; (8004d84 <queues1_execute+0x294>)
 8004d26:	4b18      	ldr	r3, [pc, #96]	; (8004d88 <queues1_execute+0x298>)
 8004d28:	6992      	ldr	r2, [r2, #24]
 8004d2a:	4818      	ldr	r0, [pc, #96]	; (8004d8c <queues1_execute+0x29c>)
 8004d2c:	6892      	ldr	r2, [r2, #8]
 8004d2e:	9500      	str	r5, [sp, #0]
 8004d30:	3201      	adds	r2, #1
 8004d32:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d36:	f7fd fadb 	bl	80022f0 <chThdCreateStatic>
 8004d3a:	4b15      	ldr	r3, [pc, #84]	; (8004d90 <queues1_execute+0x2a0>)
 8004d3c:	6018      	str	r0, [r3, #0]
 8004d3e:	f386 8811 	msr	BASEPRI, r6
 8004d42:	68a1      	ldr	r1, [r4, #8]
 8004d44:	fab1 f181 	clz	r1, r1
 8004d48:	0949      	lsrs	r1, r1, #5
 8004d4a:	200c      	movs	r0, #12
 8004d4c:	f7fb fd80 	bl	8000850 <_test_assert>
 8004d50:	2800      	cmp	r0, #0
 8004d52:	f47f af2d 	bne.w	8004bb0 <queues1_execute+0xc0>
 8004d56:	f380 8811 	msr	BASEPRI, r0
 8004d5a:	f7ff fb41 	bl	80043e0 <test_wait_threads>
 8004d5e:	210a      	movs	r1, #10
 8004d60:	4805      	ldr	r0, [pc, #20]	; (8004d78 <queues1_execute+0x288>)
 8004d62:	f7fe f94d 	bl	8003000 <chIQGetTimeout>
 8004d66:	1c43      	adds	r3, r0, #1
 8004d68:	4259      	negs	r1, r3
 8004d6a:	4159      	adcs	r1, r3
 8004d6c:	200d      	movs	r0, #13
 8004d6e:	b003      	add	sp, #12
 8004d70:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004d74:	f7fb bd6c 	b.w	8000850 <_test_assert>
 8004d78:	20000810 	.word	0x20000810
 8004d7c:	08006c30 	.word	0x08006c30
 8004d80:	20000e50 	.word	0x20000e50
 8004d84:	20000ae0 	.word	0x20000ae0
 8004d88:	08003051 	.word	0x08003051
 8004d8c:	20000d08 	.word	0x20000d08
 8004d90:	2000139c 	.word	0x2000139c
	...

08004da0 <dyn2_execute>:
 8004da0:	4a31      	ldr	r2, [pc, #196]	; (8004e68 <dyn2_execute+0xc8>)
 8004da2:	6991      	ldr	r1, [r2, #24]
 8004da4:	4a31      	ldr	r2, [pc, #196]	; (8004e6c <dyn2_execute+0xcc>)
 8004da6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004da8:	4b31      	ldr	r3, [pc, #196]	; (8004e70 <dyn2_execute+0xd0>)
 8004daa:	688d      	ldr	r5, [r1, #8]
 8004dac:	4931      	ldr	r1, [pc, #196]	; (8004e74 <dyn2_execute+0xd4>)
 8004dae:	f103 070c 	add.w	r7, r3, #12
 8004db2:	2620      	movs	r6, #32
 8004db4:	2400      	movs	r4, #0
 8004db6:	f386 8811 	msr	BASEPRI, r6
 8004dba:	6808      	ldr	r0, [r1, #0]
 8004dbc:	6010      	str	r0, [r2, #0]
 8004dbe:	600a      	str	r2, [r1, #0]
 8004dc0:	f384 8811 	msr	BASEPRI, r4
 8004dc4:	429f      	cmp	r7, r3
 8004dc6:	d002      	beq.n	8004dce <dyn2_execute+0x2e>
 8004dc8:	f853 2b04 	ldr.w	r2, [r3], #4
 8004dcc:	e7f3      	b.n	8004db6 <dyn2_execute+0x16>
 8004dce:	492a      	ldr	r1, [pc, #168]	; (8004e78 <dyn2_execute+0xd8>)
 8004dd0:	4c2a      	ldr	r4, [pc, #168]	; (8004e7c <dyn2_execute+0xdc>)
 8004dd2:	1e68      	subs	r0, r5, #1
 8004dd4:	f7fd f9dc 	bl	8002190 <chThdCreateFromMemoryPool.constprop.60>
 8004dd8:	4929      	ldr	r1, [pc, #164]	; (8004e80 <dyn2_execute+0xe0>)
 8004dda:	6020      	str	r0, [r4, #0]
 8004ddc:	1ea8      	subs	r0, r5, #2
 8004dde:	f7fd f9d7 	bl	8002190 <chThdCreateFromMemoryPool.constprop.60>
 8004de2:	4928      	ldr	r1, [pc, #160]	; (8004e84 <dyn2_execute+0xe4>)
 8004de4:	6060      	str	r0, [r4, #4]
 8004de6:	1ee8      	subs	r0, r5, #3
 8004de8:	f7fd f9d2 	bl	8002190 <chThdCreateFromMemoryPool.constprop.60>
 8004dec:	4926      	ldr	r1, [pc, #152]	; (8004e88 <dyn2_execute+0xe8>)
 8004dee:	60a0      	str	r0, [r4, #8]
 8004df0:	1f28      	subs	r0, r5, #4
 8004df2:	f7fd f9cd 	bl	8002190 <chThdCreateFromMemoryPool.constprop.60>
 8004df6:	4925      	ldr	r1, [pc, #148]	; (8004e8c <dyn2_execute+0xec>)
 8004df8:	60e0      	str	r0, [r4, #12]
 8004dfa:	1f68      	subs	r0, r5, #5
 8004dfc:	f7fd f9c8 	bl	8002190 <chThdCreateFromMemoryPool.constprop.60>
 8004e00:	6821      	ldr	r1, [r4, #0]
 8004e02:	6120      	str	r0, [r4, #16]
 8004e04:	b141      	cbz	r1, 8004e18 <dyn2_execute+0x78>
 8004e06:	6861      	ldr	r1, [r4, #4]
 8004e08:	b131      	cbz	r1, 8004e18 <dyn2_execute+0x78>
 8004e0a:	68a1      	ldr	r1, [r4, #8]
 8004e0c:	b121      	cbz	r1, 8004e18 <dyn2_execute+0x78>
 8004e0e:	68e1      	ldr	r1, [r4, #12]
 8004e10:	b111      	cbz	r1, 8004e18 <dyn2_execute+0x78>
 8004e12:	fab0 f180 	clz	r1, r0
 8004e16:	0949      	lsrs	r1, r1, #5
 8004e18:	2001      	movs	r0, #1
 8004e1a:	f7fb fd19 	bl	8000850 <_test_assert>
 8004e1e:	b100      	cbz	r0, 8004e22 <dyn2_execute+0x82>
 8004e20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004e22:	f7ff fadd 	bl	80043e0 <test_wait_threads>
 8004e26:	491a      	ldr	r1, [pc, #104]	; (8004e90 <dyn2_execute+0xf0>)
 8004e28:	2002      	movs	r0, #2
 8004e2a:	f7fb fce9 	bl	8000800 <_test_assert_sequence>
 8004e2e:	2800      	cmp	r0, #0
 8004e30:	d1f6      	bne.n	8004e20 <dyn2_execute+0x80>
 8004e32:	4d10      	ldr	r5, [pc, #64]	; (8004e74 <dyn2_execute+0xd4>)
 8004e34:	2404      	movs	r4, #4
 8004e36:	4628      	mov	r0, r5
 8004e38:	f7fb ff82 	bl	8000d40 <chPoolAlloc>
 8004e3c:	1c01      	adds	r1, r0, #0
 8004e3e:	bf18      	it	ne
 8004e40:	2101      	movne	r1, #1
 8004e42:	2003      	movs	r0, #3
 8004e44:	f7fb fd04 	bl	8000850 <_test_assert>
 8004e48:	2800      	cmp	r0, #0
 8004e4a:	d1e9      	bne.n	8004e20 <dyn2_execute+0x80>
 8004e4c:	3c01      	subs	r4, #1
 8004e4e:	d1f2      	bne.n	8004e36 <dyn2_execute+0x96>
 8004e50:	4808      	ldr	r0, [pc, #32]	; (8004e74 <dyn2_execute+0xd4>)
 8004e52:	f7fb ff75 	bl	8000d40 <chPoolAlloc>
 8004e56:	fab0 f180 	clz	r1, r0
 8004e5a:	0949      	lsrs	r1, r1, #5
 8004e5c:	2004      	movs	r0, #4
 8004e5e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004e62:	f7fb bcf5 	b.w	8000850 <_test_assert>
 8004e66:	bf00      	nop
 8004e68:	20000ae0 	.word	0x20000ae0
 8004e6c:	20000d08 	.word	0x20000d08
 8004e70:	080073d4 	.word	0x080073d4
 8004e74:	20000cd8 	.word	0x20000cd8
 8004e78:	08006810 	.word	0x08006810
 8004e7c:	2000139c 	.word	0x2000139c
 8004e80:	08006800 	.word	0x08006800
 8004e84:	08006804 	.word	0x08006804
 8004e88:	08006808 	.word	0x08006808
 8004e8c:	08006ab4 	.word	0x08006ab4
 8004e90:	08006c30 	.word	0x08006c30
	...

08004ea0 <dyn1_execute>:
 8004ea0:	b570      	push	{r4, r5, r6, lr}
 8004ea2:	4b2c      	ldr	r3, [pc, #176]	; (8004f54 <dyn1_execute+0xb4>)
 8004ea4:	482c      	ldr	r0, [pc, #176]	; (8004f58 <dyn1_execute+0xb8>)
 8004ea6:	699b      	ldr	r3, [r3, #24]
 8004ea8:	4c2c      	ldr	r4, [pc, #176]	; (8004f5c <dyn1_execute+0xbc>)
 8004eaa:	689d      	ldr	r5, [r3, #8]
 8004eac:	b082      	sub	sp, #8
 8004eae:	4669      	mov	r1, sp
 8004eb0:	f7fe fdbe 	bl	8003a30 <chHeapStatus>
 8004eb4:	492a      	ldr	r1, [pc, #168]	; (8004f60 <dyn1_execute+0xc0>)
 8004eb6:	1e68      	subs	r0, r5, #1
 8004eb8:	f7fe fee2 	bl	8003c80 <chThdCreateFromHeap.constprop.61>
 8004ebc:	4929      	ldr	r1, [pc, #164]	; (8004f64 <dyn1_execute+0xc4>)
 8004ebe:	6020      	str	r0, [r4, #0]
 8004ec0:	1ea8      	subs	r0, r5, #2
 8004ec2:	f7fe fedd 	bl	8003c80 <chThdCreateFromHeap.constprop.61>
 8004ec6:	a901      	add	r1, sp, #4
 8004ec8:	6060      	str	r0, [r4, #4]
 8004eca:	4823      	ldr	r0, [pc, #140]	; (8004f58 <dyn1_execute+0xb8>)
 8004ecc:	f7fe fdb0 	bl	8003a30 <chHeapStatus>
 8004ed0:	9901      	ldr	r1, [sp, #4]
 8004ed2:	4821      	ldr	r0, [pc, #132]	; (8004f58 <dyn1_execute+0xb8>)
 8004ed4:	f7fe fe8c 	bl	8003bf0 <chHeapAlloc>
 8004ed8:	4923      	ldr	r1, [pc, #140]	; (8004f68 <dyn1_execute+0xc8>)
 8004eda:	4606      	mov	r6, r0
 8004edc:	1ee8      	subs	r0, r5, #3
 8004ede:	f7fe fecf 	bl	8003c80 <chThdCreateFromHeap.constprop.61>
 8004ee2:	60a0      	str	r0, [r4, #8]
 8004ee4:	4630      	mov	r0, r6
 8004ee6:	f7fe fdcb 	bl	8003a80 <chHeapFree>
 8004eea:	6821      	ldr	r1, [r4, #0]
 8004eec:	b121      	cbz	r1, 8004ef8 <dyn1_execute+0x58>
 8004eee:	6861      	ldr	r1, [r4, #4]
 8004ef0:	b111      	cbz	r1, 8004ef8 <dyn1_execute+0x58>
 8004ef2:	68a1      	ldr	r1, [r4, #8]
 8004ef4:	b331      	cbz	r1, 8004f44 <dyn1_execute+0xa4>
 8004ef6:	2100      	movs	r1, #0
 8004ef8:	2001      	movs	r0, #1
 8004efa:	f7fb fca9 	bl	8000850 <_test_assert>
 8004efe:	b108      	cbz	r0, 8004f04 <dyn1_execute+0x64>
 8004f00:	b002      	add	sp, #8
 8004f02:	bd70      	pop	{r4, r5, r6, pc}
 8004f04:	f7ff fa6c 	bl	80043e0 <test_wait_threads>
 8004f08:	4918      	ldr	r1, [pc, #96]	; (8004f6c <dyn1_execute+0xcc>)
 8004f0a:	2002      	movs	r0, #2
 8004f0c:	f7fb fc78 	bl	8000800 <_test_assert_sequence>
 8004f10:	2800      	cmp	r0, #0
 8004f12:	d1f5      	bne.n	8004f00 <dyn1_execute+0x60>
 8004f14:	a901      	add	r1, sp, #4
 8004f16:	4810      	ldr	r0, [pc, #64]	; (8004f58 <dyn1_execute+0xb8>)
 8004f18:	f7fe fd8a 	bl	8003a30 <chHeapStatus>
 8004f1c:	f1a0 0101 	sub.w	r1, r0, #1
 8004f20:	fab1 f181 	clz	r1, r1
 8004f24:	0949      	lsrs	r1, r1, #5
 8004f26:	2003      	movs	r0, #3
 8004f28:	f7fb fc92 	bl	8000850 <_test_assert>
 8004f2c:	2800      	cmp	r0, #0
 8004f2e:	d1e7      	bne.n	8004f00 <dyn1_execute+0x60>
 8004f30:	e9dd 3100 	ldrd	r3, r1, [sp]
 8004f34:	1ac9      	subs	r1, r1, r3
 8004f36:	fab1 f181 	clz	r1, r1
 8004f3a:	0949      	lsrs	r1, r1, #5
 8004f3c:	2004      	movs	r0, #4
 8004f3e:	f7fb fc87 	bl	8000850 <_test_assert>
 8004f42:	e7dd      	b.n	8004f00 <dyn1_execute+0x60>
 8004f44:	68e3      	ldr	r3, [r4, #12]
 8004f46:	2b00      	cmp	r3, #0
 8004f48:	d1d6      	bne.n	8004ef8 <dyn1_execute+0x58>
 8004f4a:	6921      	ldr	r1, [r4, #16]
 8004f4c:	fab1 f181 	clz	r1, r1
 8004f50:	0949      	lsrs	r1, r1, #5
 8004f52:	e7d1      	b.n	8004ef8 <dyn1_execute+0x58>
 8004f54:	20000ae0 	.word	0x20000ae0
 8004f58:	20000c80 	.word	0x20000c80
 8004f5c:	2000139c 	.word	0x2000139c
 8004f60:	08006810 	.word	0x08006810
 8004f64:	08006800 	.word	0x08006800
 8004f68:	08006804 	.word	0x08006804
 8004f6c:	080067f0 	.word	0x080067f0

08004f70 <evt2_execute>:
 8004f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f74:	2520      	movs	r5, #32
 8004f76:	b08f      	sub	sp, #60	; 0x3c
 8004f78:	f385 8811 	msr	BASEPRI, r5
 8004f7c:	4ca9      	ldr	r4, [pc, #676]	; (8005224 <evt2_execute+0x2b4>)
 8004f7e:	69a2      	ldr	r2, [r4, #24]
 8004f80:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004f82:	f043 0307 	orr.w	r3, r3, #7
 8004f86:	6353      	str	r3, [r2, #52]	; 0x34
 8004f88:	2300      	movs	r3, #0
 8004f8a:	f383 8811 	msr	BASEPRI, r3
 8004f8e:	f7fd fa7f 	bl	8002490 <chEvtWaitOne.constprop.40>
 8004f92:	f1a0 0101 	sub.w	r1, r0, #1
 8004f96:	fab1 f181 	clz	r1, r1
 8004f9a:	0949      	lsrs	r1, r1, #5
 8004f9c:	2001      	movs	r0, #1
 8004f9e:	f7fb fc57 	bl	8000850 <_test_assert>
 8004fa2:	b110      	cbz	r0, 8004faa <evt2_execute+0x3a>
 8004fa4:	b00f      	add	sp, #60	; 0x3c
 8004fa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004faa:	f7fd fa71 	bl	8002490 <chEvtWaitOne.constprop.40>
 8004fae:	f1a0 0102 	sub.w	r1, r0, #2
 8004fb2:	fab1 f181 	clz	r1, r1
 8004fb6:	0949      	lsrs	r1, r1, #5
 8004fb8:	2002      	movs	r0, #2
 8004fba:	f7fb fc49 	bl	8000850 <_test_assert>
 8004fbe:	2800      	cmp	r0, #0
 8004fc0:	d1f0      	bne.n	8004fa4 <evt2_execute+0x34>
 8004fc2:	f7fd fa65 	bl	8002490 <chEvtWaitOne.constprop.40>
 8004fc6:	f1a0 0104 	sub.w	r1, r0, #4
 8004fca:	fab1 f181 	clz	r1, r1
 8004fce:	0949      	lsrs	r1, r1, #5
 8004fd0:	2003      	movs	r0, #3
 8004fd2:	f7fb fc3d 	bl	8000850 <_test_assert>
 8004fd6:	2800      	cmp	r0, #0
 8004fd8:	d1e4      	bne.n	8004fa4 <evt2_execute+0x34>
 8004fda:	f7fb f971 	bl	80002c0 <chEvtGetAndClearEvents.constprop.44>
 8004fde:	fab0 f180 	clz	r1, r0
 8004fe2:	0949      	lsrs	r1, r1, #5
 8004fe4:	2004      	movs	r0, #4
 8004fe6:	f7fb fc33 	bl	8000850 <_test_assert>
 8004fea:	4606      	mov	r6, r0
 8004fec:	2800      	cmp	r0, #0
 8004fee:	d1d9      	bne.n	8004fa4 <evt2_execute+0x34>
 8004ff0:	f7fe f926 	bl	8003240 <test_wait_tick>
 8004ff4:	f385 8811 	msr	BASEPRI, r5
 8004ff8:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 8004ffc:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
 8005000:	f386 8811 	msr	BASEPRI, r6
 8005004:	69a1      	ldr	r1, [r4, #24]
 8005006:	4b88      	ldr	r3, [pc, #544]	; (8005228 <evt2_execute+0x2b8>)
 8005008:	688a      	ldr	r2, [r1, #8]
 800500a:	4888      	ldr	r0, [pc, #544]	; (800522c <evt2_execute+0x2bc>)
 800500c:	9100      	str	r1, [sp, #0]
 800500e:	3a01      	subs	r2, #1
 8005010:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005014:	f7fd f96c 	bl	80022f0 <chThdCreateStatic>
 8005018:	4e85      	ldr	r6, [pc, #532]	; (8005230 <evt2_execute+0x2c0>)
 800501a:	6030      	str	r0, [r6, #0]
 800501c:	f7fd fa38 	bl	8002490 <chEvtWaitOne.constprop.40>
 8005020:	f207 2226 	addw	r2, r7, #550	; 0x226
 8005024:	4681      	mov	r9, r0
 8005026:	f507 71fa 	add.w	r1, r7, #500	; 0x1f4
 800502a:	2005      	movs	r0, #5
 800502c:	f7fb fbc8 	bl	80007c0 <_test_assert_time_window>
 8005030:	2800      	cmp	r0, #0
 8005032:	d1b7      	bne.n	8004fa4 <evt2_execute+0x34>
 8005034:	f1a9 0101 	sub.w	r1, r9, #1
 8005038:	fab1 f181 	clz	r1, r1
 800503c:	0949      	lsrs	r1, r1, #5
 800503e:	2006      	movs	r0, #6
 8005040:	f7fb fc06 	bl	8000850 <_test_assert>
 8005044:	2800      	cmp	r0, #0
 8005046:	d1ad      	bne.n	8004fa4 <evt2_execute+0x34>
 8005048:	f7fb f93a 	bl	80002c0 <chEvtGetAndClearEvents.constprop.44>
 800504c:	fab0 f180 	clz	r1, r0
 8005050:	0949      	lsrs	r1, r1, #5
 8005052:	2007      	movs	r0, #7
 8005054:	f7fb fbfc 	bl	8000850 <_test_assert>
 8005058:	4607      	mov	r7, r0
 800505a:	2800      	cmp	r0, #0
 800505c:	d1a2      	bne.n	8004fa4 <evt2_execute+0x34>
 800505e:	f7ff f9bf 	bl	80043e0 <test_wait_threads>
 8005062:	f385 8811 	msr	BASEPRI, r5
 8005066:	69a2      	ldr	r2, [r4, #24]
 8005068:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800506a:	f043 0305 	orr.w	r3, r3, #5
 800506e:	6353      	str	r3, [r2, #52]	; 0x34
 8005070:	f387 8811 	msr	BASEPRI, r7
 8005074:	f7fd fa2c 	bl	80024d0 <chEvtWaitAny.constprop.39>
 8005078:	1f47      	subs	r7, r0, #5
 800507a:	4279      	negs	r1, r7
 800507c:	4179      	adcs	r1, r7
 800507e:	2008      	movs	r0, #8
 8005080:	f7fb fbe6 	bl	8000850 <_test_assert>
 8005084:	2800      	cmp	r0, #0
 8005086:	d18d      	bne.n	8004fa4 <evt2_execute+0x34>
 8005088:	f7fb f91a 	bl	80002c0 <chEvtGetAndClearEvents.constprop.44>
 800508c:	fab0 f180 	clz	r1, r0
 8005090:	0949      	lsrs	r1, r1, #5
 8005092:	2009      	movs	r0, #9
 8005094:	f7fb fbdc 	bl	8000850 <_test_assert>
 8005098:	4607      	mov	r7, r0
 800509a:	2800      	cmp	r0, #0
 800509c:	d182      	bne.n	8004fa4 <evt2_execute+0x34>
 800509e:	f7fe f8cf 	bl	8003240 <test_wait_tick>
 80050a2:	f385 8811 	msr	BASEPRI, r5
 80050a6:	f8d8 5024 	ldr.w	r5, [r8, #36]	; 0x24
 80050aa:	f387 8811 	msr	BASEPRI, r7
 80050ae:	69a1      	ldr	r1, [r4, #24]
 80050b0:	4b5d      	ldr	r3, [pc, #372]	; (8005228 <evt2_execute+0x2b8>)
 80050b2:	688a      	ldr	r2, [r1, #8]
 80050b4:	485d      	ldr	r0, [pc, #372]	; (800522c <evt2_execute+0x2bc>)
 80050b6:	9100      	str	r1, [sp, #0]
 80050b8:	3a01      	subs	r2, #1
 80050ba:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80050be:	f7fd f917 	bl	80022f0 <chThdCreateStatic>
 80050c2:	6030      	str	r0, [r6, #0]
 80050c4:	f7fd fa04 	bl	80024d0 <chEvtWaitAny.constprop.39>
 80050c8:	f205 2226 	addw	r2, r5, #550	; 0x226
 80050cc:	4607      	mov	r7, r0
 80050ce:	f505 71fa 	add.w	r1, r5, #500	; 0x1f4
 80050d2:	200a      	movs	r0, #10
 80050d4:	f7fb fb74 	bl	80007c0 <_test_assert_time_window>
 80050d8:	2800      	cmp	r0, #0
 80050da:	f47f af63 	bne.w	8004fa4 <evt2_execute+0x34>
 80050de:	1e78      	subs	r0, r7, #1
 80050e0:	4241      	negs	r1, r0
 80050e2:	4141      	adcs	r1, r0
 80050e4:	200b      	movs	r0, #11
 80050e6:	f7fb fbb3 	bl	8000850 <_test_assert>
 80050ea:	2800      	cmp	r0, #0
 80050ec:	f47f af5a 	bne.w	8004fa4 <evt2_execute+0x34>
 80050f0:	f7fb f8e6 	bl	80002c0 <chEvtGetAndClearEvents.constprop.44>
 80050f4:	fab0 f180 	clz	r1, r0
 80050f8:	0949      	lsrs	r1, r1, #5
 80050fa:	200c      	movs	r0, #12
 80050fc:	f7fb fba8 	bl	8000850 <_test_assert>
 8005100:	4683      	mov	fp, r0
 8005102:	2800      	cmp	r0, #0
 8005104:	f47f af4e 	bne.w	8004fa4 <evt2_execute+0x34>
 8005108:	4f4a      	ldr	r7, [pc, #296]	; (8005234 <evt2_execute+0x2c4>)
 800510a:	4d4b      	ldr	r5, [pc, #300]	; (8005238 <evt2_execute+0x2c8>)
 800510c:	f7ff f968 	bl	80043e0 <test_wait_threads>
 8005110:	f04f 0a20 	mov.w	sl, #32
 8005114:	603f      	str	r7, [r7, #0]
 8005116:	602d      	str	r5, [r5, #0]
 8005118:	f38a 8811 	msr	BASEPRI, sl
 800511c:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 8005120:	683a      	ldr	r2, [r7, #0]
 8005122:	f849 2d28 	str.w	r2, [r9, #-40]!
 8005126:	69a0      	ldr	r0, [r4, #24]
 8005128:	f8cd b01c 	str.w	fp, [sp, #28]
 800512c:	2101      	movs	r1, #1
 800512e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005132:	e9cd 0105 	strd	r0, r1, [sp, #20]
 8005136:	f8c7 9000 	str.w	r9, [r7]
 800513a:	9208      	str	r2, [sp, #32]
 800513c:	f38b 8811 	msr	BASEPRI, fp
 8005140:	f38a 8811 	msr	BASEPRI, sl
 8005144:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8005148:	6829      	ldr	r1, [r5, #0]
 800514a:	f848 1d14 	str.w	r1, [r8, #-20]!
 800514e:	69a0      	ldr	r0, [r4, #24]
 8005150:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005154:	2104      	movs	r1, #4
 8005156:	920d      	str	r2, [sp, #52]	; 0x34
 8005158:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800515c:	f8c5 8000 	str.w	r8, [r5]
 8005160:	f38b 8811 	msr	BASEPRI, fp
 8005164:	f7fe f86c 	bl	8003240 <test_wait_tick>
 8005168:	f38a 8811 	msr	BASEPRI, sl
 800516c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005170:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8005172:	9302      	str	r3, [sp, #8]
 8005174:	f38b 8811 	msr	BASEPRI, fp
 8005178:	69a3      	ldr	r3, [r4, #24]
 800517a:	4930      	ldr	r1, [pc, #192]	; (800523c <evt2_execute+0x2cc>)
 800517c:	689a      	ldr	r2, [r3, #8]
 800517e:	482b      	ldr	r0, [pc, #172]	; (800522c <evt2_execute+0x2bc>)
 8005180:	9100      	str	r1, [sp, #0]
 8005182:	4b2f      	ldr	r3, [pc, #188]	; (8005240 <evt2_execute+0x2d0>)
 8005184:	3a01      	subs	r2, #1
 8005186:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800518a:	f7fd f8b1 	bl	80022f0 <chThdCreateStatic>
 800518e:	9b02      	ldr	r3, [sp, #8]
 8005190:	6030      	str	r0, [r6, #0]
 8005192:	f503 71fa 	add.w	r1, r3, #500	; 0x1f4
 8005196:	69a4      	ldr	r4, [r4, #24]
 8005198:	f38a 8811 	msr	BASEPRI, sl
 800519c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800519e:	f003 0205 	and.w	r2, r3, #5
 80051a2:	2a05      	cmp	r2, #5
 80051a4:	d007      	beq.n	80051b6 <evt2_execute+0x246>
 80051a6:	2305      	movs	r3, #5
 80051a8:	6223      	str	r3, [r4, #32]
 80051aa:	200b      	movs	r0, #11
 80051ac:	9103      	str	r1, [sp, #12]
 80051ae:	f7fd f8d7 	bl	8002360 <chSchGoSleepS>
 80051b2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80051b4:	9903      	ldr	r1, [sp, #12]
 80051b6:	f023 0305 	bic.w	r3, r3, #5
 80051ba:	6363      	str	r3, [r4, #52]	; 0x34
 80051bc:	2300      	movs	r3, #0
 80051be:	f383 8811 	msr	BASEPRI, r3
 80051c2:	9b02      	ldr	r3, [sp, #8]
 80051c4:	200d      	movs	r0, #13
 80051c6:	f203 2226 	addw	r2, r3, #550	; 0x226
 80051ca:	f7fb faf9 	bl	80007c0 <_test_assert_time_window>
 80051ce:	2800      	cmp	r0, #0
 80051d0:	f47f aee8 	bne.w	8004fa4 <evt2_execute+0x34>
 80051d4:	f7fb f874 	bl	80002c0 <chEvtGetAndClearEvents.constprop.44>
 80051d8:	fab0 f180 	clz	r1, r0
 80051dc:	0949      	lsrs	r1, r1, #5
 80051de:	200e      	movs	r0, #14
 80051e0:	f7fb fb36 	bl	8000850 <_test_assert>
 80051e4:	2800      	cmp	r0, #0
 80051e6:	f47f aedd 	bne.w	8004fa4 <evt2_execute+0x34>
 80051ea:	f7ff f8f9 	bl	80043e0 <test_wait_threads>
 80051ee:	4649      	mov	r1, r9
 80051f0:	4810      	ldr	r0, [pc, #64]	; (8005234 <evt2_execute+0x2c4>)
 80051f2:	f7fb fe2d 	bl	8000e50 <chEvtUnregister>
 80051f6:	4641      	mov	r1, r8
 80051f8:	480f      	ldr	r0, [pc, #60]	; (8005238 <evt2_execute+0x2c8>)
 80051fa:	f7fb fe29 	bl	8000e50 <chEvtUnregister>
 80051fe:	6839      	ldr	r1, [r7, #0]
 8005200:	1bca      	subs	r2, r1, r7
 8005202:	4251      	negs	r1, r2
 8005204:	4151      	adcs	r1, r2
 8005206:	200f      	movs	r0, #15
 8005208:	f7fb fb22 	bl	8000850 <_test_assert>
 800520c:	2800      	cmp	r0, #0
 800520e:	f47f aec9 	bne.w	8004fa4 <evt2_execute+0x34>
 8005212:	6829      	ldr	r1, [r5, #0]
 8005214:	1b4b      	subs	r3, r1, r5
 8005216:	4259      	negs	r1, r3
 8005218:	4159      	adcs	r1, r3
 800521a:	2010      	movs	r0, #16
 800521c:	f7fb fb18 	bl	8000850 <_test_assert>
 8005220:	e6c0      	b.n	8004fa4 <evt2_execute+0x34>
 8005222:	bf00      	nop
 8005224:	20000ae0 	.word	0x20000ae0
 8005228:	080031a1 	.word	0x080031a1
 800522c:	20000d08 	.word	0x20000d08
 8005230:	2000139c 	.word	0x2000139c
 8005234:	20000808 	.word	0x20000808
 8005238:	2000080c 	.word	0x2000080c
 800523c:	08006810 	.word	0x08006810
 8005240:	080031d1 	.word	0x080031d1
	...

08005250 <mtx8_execute>:
 8005250:	b570      	push	{r4, r5, r6, lr}
 8005252:	4b19      	ldr	r3, [pc, #100]	; (80052b8 <mtx8_execute+0x68>)
 8005254:	4d19      	ldr	r5, [pc, #100]	; (80052bc <mtx8_execute+0x6c>)
 8005256:	699b      	ldr	r3, [r3, #24]
 8005258:	4a19      	ldr	r2, [pc, #100]	; (80052c0 <mtx8_execute+0x70>)
 800525a:	689e      	ldr	r6, [r3, #8]
 800525c:	4b19      	ldr	r3, [pc, #100]	; (80052c4 <mtx8_execute+0x74>)
 800525e:	4c1a      	ldr	r4, [pc, #104]	; (80052c8 <mtx8_execute+0x78>)
 8005260:	b082      	sub	sp, #8
 8005262:	4628      	mov	r0, r5
 8005264:	9200      	str	r2, [sp, #0]
 8005266:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800526a:	1c72      	adds	r2, r6, #1
 800526c:	f7fd f840 	bl	80022f0 <chThdCreateStatic>
 8005270:	4b16      	ldr	r3, [pc, #88]	; (80052cc <mtx8_execute+0x7c>)
 8005272:	6020      	str	r0, [r4, #0]
 8005274:	1cb2      	adds	r2, r6, #2
 8005276:	9300      	str	r3, [sp, #0]
 8005278:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 800527c:	4b14      	ldr	r3, [pc, #80]	; (80052d0 <mtx8_execute+0x80>)
 800527e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005282:	f7fd f835 	bl	80022f0 <chThdCreateStatic>
 8005286:	4b13      	ldr	r3, [pc, #76]	; (80052d4 <mtx8_execute+0x84>)
 8005288:	6060      	str	r0, [r4, #4]
 800528a:	1cf2      	adds	r2, r6, #3
 800528c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005290:	9300      	str	r3, [sp, #0]
 8005292:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8005296:	4b10      	ldr	r3, [pc, #64]	; (80052d8 <mtx8_execute+0x88>)
 8005298:	f7fd f82a 	bl	80022f0 <chThdCreateStatic>
 800529c:	60a0      	str	r0, [r4, #8]
 800529e:	f7fc ffbf 	bl	8002220 <chCondSignal.constprop.52>
 80052a2:	f7fc ffbd 	bl	8002220 <chCondSignal.constprop.52>
 80052a6:	f7ff f89b 	bl	80043e0 <test_wait_threads>
 80052aa:	490c      	ldr	r1, [pc, #48]	; (80052dc <mtx8_execute+0x8c>)
 80052ac:	2001      	movs	r0, #1
 80052ae:	b002      	add	sp, #8
 80052b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80052b4:	f7fb baa4 	b.w	8000800 <_test_assert_sequence>
 80052b8:	20000ae0 	.word	0x20000ae0
 80052bc:	20000d08 	.word	0x20000d08
 80052c0:	08006810 	.word	0x08006810
 80052c4:	080037c1 	.word	0x080037c1
 80052c8:	2000139c 	.word	0x2000139c
 80052cc:	08006804 	.word	0x08006804
 80052d0:	08003851 	.word	0x08003851
 80052d4:	08006800 	.word	0x08006800
 80052d8:	080038c1 	.word	0x080038c1
 80052dc:	08006860 	.word	0x08006860

080052e0 <mtx7_execute>:
 80052e0:	b530      	push	{r4, r5, lr}
 80052e2:	4b2c      	ldr	r3, [pc, #176]	; (8005394 <mtx7_execute+0xb4>)
 80052e4:	4a2c      	ldr	r2, [pc, #176]	; (8005398 <mtx7_execute+0xb8>)
 80052e6:	6999      	ldr	r1, [r3, #24]
 80052e8:	482c      	ldr	r0, [pc, #176]	; (800539c <mtx7_execute+0xbc>)
 80052ea:	688d      	ldr	r5, [r1, #8]
 80052ec:	4b2c      	ldr	r3, [pc, #176]	; (80053a0 <mtx7_execute+0xc0>)
 80052ee:	4c2d      	ldr	r4, [pc, #180]	; (80053a4 <mtx7_execute+0xc4>)
 80052f0:	b083      	sub	sp, #12
 80052f2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80052f6:	9200      	str	r2, [sp, #0]
 80052f8:	1c6a      	adds	r2, r5, #1
 80052fa:	f7fc fff9 	bl	80022f0 <chThdCreateStatic>
 80052fe:	4b2a      	ldr	r3, [pc, #168]	; (80053a8 <mtx7_execute+0xc8>)
 8005300:	6020      	str	r0, [r4, #0]
 8005302:	1caa      	adds	r2, r5, #2
 8005304:	9300      	str	r3, [sp, #0]
 8005306:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800530a:	4b25      	ldr	r3, [pc, #148]	; (80053a0 <mtx7_execute+0xc0>)
 800530c:	4827      	ldr	r0, [pc, #156]	; (80053ac <mtx7_execute+0xcc>)
 800530e:	f7fc ffef 	bl	80022f0 <chThdCreateStatic>
 8005312:	4b27      	ldr	r3, [pc, #156]	; (80053b0 <mtx7_execute+0xd0>)
 8005314:	6060      	str	r0, [r4, #4]
 8005316:	1cea      	adds	r2, r5, #3
 8005318:	9300      	str	r3, [sp, #0]
 800531a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800531e:	4b20      	ldr	r3, [pc, #128]	; (80053a0 <mtx7_execute+0xc0>)
 8005320:	4824      	ldr	r0, [pc, #144]	; (80053b4 <mtx7_execute+0xd4>)
 8005322:	f7fc ffe5 	bl	80022f0 <chThdCreateStatic>
 8005326:	4b24      	ldr	r3, [pc, #144]	; (80053b8 <mtx7_execute+0xd8>)
 8005328:	60a0      	str	r0, [r4, #8]
 800532a:	1d2a      	adds	r2, r5, #4
 800532c:	9300      	str	r3, [sp, #0]
 800532e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005332:	4b1b      	ldr	r3, [pc, #108]	; (80053a0 <mtx7_execute+0xc0>)
 8005334:	4821      	ldr	r0, [pc, #132]	; (80053bc <mtx7_execute+0xdc>)
 8005336:	f7fc ffdb 	bl	80022f0 <chThdCreateStatic>
 800533a:	4b21      	ldr	r3, [pc, #132]	; (80053c0 <mtx7_execute+0xe0>)
 800533c:	60e0      	str	r0, [r4, #12]
 800533e:	1d6a      	adds	r2, r5, #5
 8005340:	9300      	str	r3, [sp, #0]
 8005342:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005346:	4b16      	ldr	r3, [pc, #88]	; (80053a0 <mtx7_execute+0xc0>)
 8005348:	481e      	ldr	r0, [pc, #120]	; (80053c4 <mtx7_execute+0xe4>)
 800534a:	f7fc ffd1 	bl	80022f0 <chThdCreateStatic>
 800534e:	2320      	movs	r3, #32
 8005350:	6120      	str	r0, [r4, #16]
 8005352:	f383 8811 	msr	BASEPRI, r3
 8005356:	4c1c      	ldr	r4, [pc, #112]	; (80053c8 <mtx7_execute+0xe8>)
 8005358:	6823      	ldr	r3, [r4, #0]
 800535a:	42a3      	cmp	r3, r4
 800535c:	d00b      	beq.n	8005376 <mtx7_execute+0x96>
 800535e:	f06f 0501 	mvn.w	r5, #1
 8005362:	681a      	ldr	r2, [r3, #0]
 8005364:	6022      	str	r2, [r4, #0]
 8005366:	4618      	mov	r0, r3
 8005368:	6054      	str	r4, [r2, #4]
 800536a:	f7fb fe61 	bl	8001030 <chSchReadyI>
 800536e:	6823      	ldr	r3, [r4, #0]
 8005370:	6205      	str	r5, [r0, #32]
 8005372:	42a3      	cmp	r3, r4
 8005374:	d1f5      	bne.n	8005362 <mtx7_execute+0x82>
 8005376:	f7fc fdab 	bl	8001ed0 <chSchRescheduleS>
 800537a:	2300      	movs	r3, #0
 800537c:	f383 8811 	msr	BASEPRI, r3
 8005380:	f7ff f82e 	bl	80043e0 <test_wait_threads>
 8005384:	4911      	ldr	r1, [pc, #68]	; (80053cc <mtx7_execute+0xec>)
 8005386:	2001      	movs	r0, #1
 8005388:	b003      	add	sp, #12
 800538a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800538e:	f7fb ba37 	b.w	8000800 <_test_assert_sequence>
 8005392:	bf00      	nop
 8005394:	20000ae0 	.word	0x20000ae0
 8005398:	08006ab4 	.word	0x08006ab4
 800539c:	20000d08 	.word	0x20000d08
 80053a0:	08003851 	.word	0x08003851
 80053a4:	2000139c 	.word	0x2000139c
 80053a8:	08006808 	.word	0x08006808
 80053ac:	20000e50 	.word	0x20000e50
 80053b0:	08006804 	.word	0x08006804
 80053b4:	20000f98 	.word	0x20000f98
 80053b8:	08006800 	.word	0x08006800
 80053bc:	200010e0 	.word	0x200010e0
 80053c0:	08006810 	.word	0x08006810
 80053c4:	20001228 	.word	0x20001228
 80053c8:	20000800 	.word	0x20000800
 80053cc:	08006ab0 	.word	0x08006ab0

080053d0 <mtx6_execute>:
 80053d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80053d2:	4b2c      	ldr	r3, [pc, #176]	; (8005484 <mtx6_execute+0xb4>)
 80053d4:	4e2c      	ldr	r6, [pc, #176]	; (8005488 <mtx6_execute+0xb8>)
 80053d6:	699b      	ldr	r3, [r3, #24]
 80053d8:	4d2c      	ldr	r5, [pc, #176]	; (800548c <mtx6_execute+0xbc>)
 80053da:	689f      	ldr	r7, [r3, #8]
 80053dc:	4b2c      	ldr	r3, [pc, #176]	; (8005490 <mtx6_execute+0xc0>)
 80053de:	4c2d      	ldr	r4, [pc, #180]	; (8005494 <mtx6_execute+0xc4>)
 80053e0:	b083      	sub	sp, #12
 80053e2:	1c7a      	adds	r2, r7, #1
 80053e4:	9300      	str	r3, [sp, #0]
 80053e6:	4628      	mov	r0, r5
 80053e8:	4633      	mov	r3, r6
 80053ea:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80053ee:	f7fc ff7f 	bl	80022f0 <chThdCreateStatic>
 80053f2:	4929      	ldr	r1, [pc, #164]	; (8005498 <mtx6_execute+0xc8>)
 80053f4:	6020      	str	r0, [r4, #0]
 80053f6:	1cba      	adds	r2, r7, #2
 80053f8:	4633      	mov	r3, r6
 80053fa:	9100      	str	r1, [sp, #0]
 80053fc:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8005400:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005404:	f7fc ff74 	bl	80022f0 <chThdCreateStatic>
 8005408:	4924      	ldr	r1, [pc, #144]	; (800549c <mtx6_execute+0xcc>)
 800540a:	6060      	str	r0, [r4, #4]
 800540c:	1cfa      	adds	r2, r7, #3
 800540e:	4633      	mov	r3, r6
 8005410:	9100      	str	r1, [sp, #0]
 8005412:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8005416:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800541a:	f7fc ff69 	bl	80022f0 <chThdCreateStatic>
 800541e:	4920      	ldr	r1, [pc, #128]	; (80054a0 <mtx6_execute+0xd0>)
 8005420:	60a0      	str	r0, [r4, #8]
 8005422:	1d3a      	adds	r2, r7, #4
 8005424:	4633      	mov	r3, r6
 8005426:	9100      	str	r1, [sp, #0]
 8005428:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 800542c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005430:	f7fc ff5e 	bl	80022f0 <chThdCreateStatic>
 8005434:	491b      	ldr	r1, [pc, #108]	; (80054a4 <mtx6_execute+0xd4>)
 8005436:	60e0      	str	r0, [r4, #12]
 8005438:	4633      	mov	r3, r6
 800543a:	9100      	str	r1, [sp, #0]
 800543c:	1d7a      	adds	r2, r7, #5
 800543e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8005442:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005446:	f7fc ff53 	bl	80022f0 <chThdCreateStatic>
 800544a:	2320      	movs	r3, #32
 800544c:	6120      	str	r0, [r4, #16]
 800544e:	f383 8811 	msr	BASEPRI, r3
 8005452:	f7fb fe05 	bl	8001060 <chCondSignalI.constprop.51>
 8005456:	f7fb fe03 	bl	8001060 <chCondSignalI.constprop.51>
 800545a:	f7fb fe01 	bl	8001060 <chCondSignalI.constprop.51>
 800545e:	f7fb fdff 	bl	8001060 <chCondSignalI.constprop.51>
 8005462:	f7fb fdfd 	bl	8001060 <chCondSignalI.constprop.51>
 8005466:	f7fc fd33 	bl	8001ed0 <chSchRescheduleS>
 800546a:	2300      	movs	r3, #0
 800546c:	f383 8811 	msr	BASEPRI, r3
 8005470:	f7fe ffb6 	bl	80043e0 <test_wait_threads>
 8005474:	490c      	ldr	r1, [pc, #48]	; (80054a8 <mtx6_execute+0xd8>)
 8005476:	2001      	movs	r0, #1
 8005478:	b003      	add	sp, #12
 800547a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800547e:	f7fb b9bf 	b.w	8000800 <_test_assert_sequence>
 8005482:	bf00      	nop
 8005484:	20000ae0 	.word	0x20000ae0
 8005488:	08003851 	.word	0x08003851
 800548c:	20000d08 	.word	0x20000d08
 8005490:	08006ab4 	.word	0x08006ab4
 8005494:	2000139c 	.word	0x2000139c
 8005498:	08006808 	.word	0x08006808
 800549c:	08006804 	.word	0x08006804
 80054a0:	08006800 	.word	0x08006800
 80054a4:	08006810 	.word	0x08006810
 80054a8:	08006ab0 	.word	0x08006ab0
 80054ac:	00000000 	.word	0x00000000

080054b0 <mtx4_execute>:
 80054b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80054b4:	4d87      	ldr	r5, [pc, #540]	; (80056d4 <mtx4_execute+0x224>)
 80054b6:	4a88      	ldr	r2, [pc, #544]	; (80056d8 <mtx4_execute+0x228>)
 80054b8:	69a9      	ldr	r1, [r5, #24]
 80054ba:	4b88      	ldr	r3, [pc, #544]	; (80056dc <mtx4_execute+0x22c>)
 80054bc:	688c      	ldr	r4, [r1, #8]
 80054be:	4888      	ldr	r0, [pc, #544]	; (80056e0 <mtx4_execute+0x230>)
 80054c0:	4e88      	ldr	r6, [pc, #544]	; (80056e4 <mtx4_execute+0x234>)
 80054c2:	b082      	sub	sp, #8
 80054c4:	1c67      	adds	r7, r4, #1
 80054c6:	9200      	str	r2, [sp, #0]
 80054c8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80054cc:	463a      	mov	r2, r7
 80054ce:	f7fc ff0f 	bl	80022f0 <chThdCreateStatic>
 80054d2:	f104 0802 	add.w	r8, r4, #2
 80054d6:	4b84      	ldr	r3, [pc, #528]	; (80056e8 <mtx4_execute+0x238>)
 80054d8:	6030      	str	r0, [r6, #0]
 80054da:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80054de:	4642      	mov	r2, r8
 80054e0:	9300      	str	r3, [sp, #0]
 80054e2:	4882      	ldr	r0, [pc, #520]	; (80056ec <mtx4_execute+0x23c>)
 80054e4:	4b82      	ldr	r3, [pc, #520]	; (80056f0 <mtx4_execute+0x240>)
 80054e6:	f7fc ff03 	bl	80022f0 <chThdCreateStatic>
 80054ea:	6070      	str	r0, [r6, #4]
 80054ec:	4881      	ldr	r0, [pc, #516]	; (80056f4 <mtx4_execute+0x244>)
 80054ee:	f7fe f91f 	bl	8003730 <chMtxLock>
 80054f2:	69ab      	ldr	r3, [r5, #24]
 80054f4:	6899      	ldr	r1, [r3, #8]
 80054f6:	1b09      	subs	r1, r1, r4
 80054f8:	fab1 f181 	clz	r1, r1
 80054fc:	2001      	movs	r0, #1
 80054fe:	0949      	lsrs	r1, r1, #5
 8005500:	f7fb f9a6 	bl	8000850 <_test_assert>
 8005504:	b110      	cbz	r0, 800550c <mtx4_execute+0x5c>
 8005506:	b002      	add	sp, #8
 8005508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800550c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8005510:	f7fd fdb6 	bl	8003080 <chThdSleep>
 8005514:	69ab      	ldr	r3, [r5, #24]
 8005516:	6899      	ldr	r1, [r3, #8]
 8005518:	1bc9      	subs	r1, r1, r7
 800551a:	fab1 f181 	clz	r1, r1
 800551e:	2002      	movs	r0, #2
 8005520:	0949      	lsrs	r1, r1, #5
 8005522:	f7fb f995 	bl	8000850 <_test_assert>
 8005526:	2800      	cmp	r0, #0
 8005528:	d1ed      	bne.n	8005506 <mtx4_execute+0x56>
 800552a:	4873      	ldr	r0, [pc, #460]	; (80056f8 <mtx4_execute+0x248>)
 800552c:	f7fe f900 	bl	8003730 <chMtxLock>
 8005530:	69ab      	ldr	r3, [r5, #24]
 8005532:	6899      	ldr	r1, [r3, #8]
 8005534:	1bc9      	subs	r1, r1, r7
 8005536:	fab1 f181 	clz	r1, r1
 800553a:	2003      	movs	r0, #3
 800553c:	0949      	lsrs	r1, r1, #5
 800553e:	f7fb f987 	bl	8000850 <_test_assert>
 8005542:	2800      	cmp	r0, #0
 8005544:	d1df      	bne.n	8005506 <mtx4_execute+0x56>
 8005546:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800554a:	f7fd fd99 	bl	8003080 <chThdSleep>
 800554e:	69ab      	ldr	r3, [r5, #24]
 8005550:	6899      	ldr	r1, [r3, #8]
 8005552:	eba1 0108 	sub.w	r1, r1, r8
 8005556:	fab1 f181 	clz	r1, r1
 800555a:	2004      	movs	r0, #4
 800555c:	0949      	lsrs	r1, r1, #5
 800555e:	f7fb f977 	bl	8000850 <_test_assert>
 8005562:	2800      	cmp	r0, #0
 8005564:	d1cf      	bne.n	8005506 <mtx4_execute+0x56>
 8005566:	4864      	ldr	r0, [pc, #400]	; (80056f8 <mtx4_execute+0x248>)
 8005568:	f7fc fe72 	bl	8002250 <chMtxUnlock>
 800556c:	69ab      	ldr	r3, [r5, #24]
 800556e:	6899      	ldr	r1, [r3, #8]
 8005570:	1bc9      	subs	r1, r1, r7
 8005572:	fab1 f181 	clz	r1, r1
 8005576:	2005      	movs	r0, #5
 8005578:	0949      	lsrs	r1, r1, #5
 800557a:	f7fb f969 	bl	8000850 <_test_assert>
 800557e:	2800      	cmp	r0, #0
 8005580:	d1c1      	bne.n	8005506 <mtx4_execute+0x56>
 8005582:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8005586:	f7fd fd7b 	bl	8003080 <chThdSleep>
 800558a:	69ab      	ldr	r3, [r5, #24]
 800558c:	6899      	ldr	r1, [r3, #8]
 800558e:	1bc9      	subs	r1, r1, r7
 8005590:	fab1 f181 	clz	r1, r1
 8005594:	2006      	movs	r0, #6
 8005596:	0949      	lsrs	r1, r1, #5
 8005598:	f7fb f95a 	bl	8000850 <_test_assert>
 800559c:	2800      	cmp	r0, #0
 800559e:	d1b2      	bne.n	8005506 <mtx4_execute+0x56>
 80055a0:	f7fc fcbe 	bl	8001f20 <chMtxUnlockAll>
 80055a4:	69ab      	ldr	r3, [r5, #24]
 80055a6:	6899      	ldr	r1, [r3, #8]
 80055a8:	1b09      	subs	r1, r1, r4
 80055aa:	fab1 f181 	clz	r1, r1
 80055ae:	2007      	movs	r0, #7
 80055b0:	0949      	lsrs	r1, r1, #5
 80055b2:	f7fb f94d 	bl	8000850 <_test_assert>
 80055b6:	2800      	cmp	r0, #0
 80055b8:	d1a5      	bne.n	8005506 <mtx4_execute+0x56>
 80055ba:	f7fe ff11 	bl	80043e0 <test_wait_threads>
 80055be:	4b4f      	ldr	r3, [pc, #316]	; (80056fc <mtx4_execute+0x24c>)
 80055c0:	9300      	str	r3, [sp, #0]
 80055c2:	463a      	mov	r2, r7
 80055c4:	4b45      	ldr	r3, [pc, #276]	; (80056dc <mtx4_execute+0x22c>)
 80055c6:	4846      	ldr	r0, [pc, #280]	; (80056e0 <mtx4_execute+0x230>)
 80055c8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80055cc:	f7fc fe90 	bl	80022f0 <chThdCreateStatic>
 80055d0:	4b4b      	ldr	r3, [pc, #300]	; (8005700 <mtx4_execute+0x250>)
 80055d2:	6030      	str	r0, [r6, #0]
 80055d4:	4642      	mov	r2, r8
 80055d6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80055da:	9300      	str	r3, [sp, #0]
 80055dc:	4843      	ldr	r0, [pc, #268]	; (80056ec <mtx4_execute+0x23c>)
 80055de:	4b44      	ldr	r3, [pc, #272]	; (80056f0 <mtx4_execute+0x240>)
 80055e0:	f7fc fe86 	bl	80022f0 <chThdCreateStatic>
 80055e4:	6070      	str	r0, [r6, #4]
 80055e6:	4843      	ldr	r0, [pc, #268]	; (80056f4 <mtx4_execute+0x244>)
 80055e8:	f7fe f8a2 	bl	8003730 <chMtxLock>
 80055ec:	69ab      	ldr	r3, [r5, #24]
 80055ee:	6899      	ldr	r1, [r3, #8]
 80055f0:	1b0a      	subs	r2, r1, r4
 80055f2:	4251      	negs	r1, r2
 80055f4:	4151      	adcs	r1, r2
 80055f6:	2008      	movs	r0, #8
 80055f8:	f7fb f92a 	bl	8000850 <_test_assert>
 80055fc:	2800      	cmp	r0, #0
 80055fe:	d182      	bne.n	8005506 <mtx4_execute+0x56>
 8005600:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8005604:	f7fd fd3c 	bl	8003080 <chThdSleep>
 8005608:	69ab      	ldr	r3, [r5, #24]
 800560a:	6899      	ldr	r1, [r3, #8]
 800560c:	1bcb      	subs	r3, r1, r7
 800560e:	4259      	negs	r1, r3
 8005610:	4159      	adcs	r1, r3
 8005612:	2009      	movs	r0, #9
 8005614:	f7fb f91c 	bl	8000850 <_test_assert>
 8005618:	2800      	cmp	r0, #0
 800561a:	f47f af74 	bne.w	8005506 <mtx4_execute+0x56>
 800561e:	4836      	ldr	r0, [pc, #216]	; (80056f8 <mtx4_execute+0x248>)
 8005620:	f7fe f886 	bl	8003730 <chMtxLock>
 8005624:	69ab      	ldr	r3, [r5, #24]
 8005626:	6899      	ldr	r1, [r3, #8]
 8005628:	eba1 0e07 	sub.w	lr, r1, r7
 800562c:	f1de 0100 	rsbs	r1, lr, #0
 8005630:	eb41 010e 	adc.w	r1, r1, lr
 8005634:	200a      	movs	r0, #10
 8005636:	f7fb f90b 	bl	8000850 <_test_assert>
 800563a:	2800      	cmp	r0, #0
 800563c:	f47f af63 	bne.w	8005506 <mtx4_execute+0x56>
 8005640:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8005644:	f7fd fd1c 	bl	8003080 <chThdSleep>
 8005648:	69ab      	ldr	r3, [r5, #24]
 800564a:	6899      	ldr	r1, [r3, #8]
 800564c:	eba1 0c08 	sub.w	ip, r1, r8
 8005650:	f1dc 0100 	rsbs	r1, ip, #0
 8005654:	eb41 010c 	adc.w	r1, r1, ip
 8005658:	200b      	movs	r0, #11
 800565a:	f7fb f8f9 	bl	8000850 <_test_assert>
 800565e:	4606      	mov	r6, r0
 8005660:	2800      	cmp	r0, #0
 8005662:	f47f af50 	bne.w	8005506 <mtx4_execute+0x56>
 8005666:	2320      	movs	r3, #32
 8005668:	f383 8811 	msr	BASEPRI, r3
 800566c:	4822      	ldr	r0, [pc, #136]	; (80056f8 <mtx4_execute+0x248>)
 800566e:	f7fb ff9f 	bl	80015b0 <chMtxUnlockS>
 8005672:	f7fc fc2d 	bl	8001ed0 <chSchRescheduleS>
 8005676:	f386 8811 	msr	BASEPRI, r6
 800567a:	69ab      	ldr	r3, [r5, #24]
 800567c:	6899      	ldr	r1, [r3, #8]
 800567e:	1bce      	subs	r6, r1, r7
 8005680:	4271      	negs	r1, r6
 8005682:	4171      	adcs	r1, r6
 8005684:	200c      	movs	r0, #12
 8005686:	f7fb f8e3 	bl	8000850 <_test_assert>
 800568a:	2800      	cmp	r0, #0
 800568c:	f47f af3b 	bne.w	8005506 <mtx4_execute+0x56>
 8005690:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8005694:	f7fd fcf4 	bl	8003080 <chThdSleep>
 8005698:	69ab      	ldr	r3, [r5, #24]
 800569a:	6899      	ldr	r1, [r3, #8]
 800569c:	1bca      	subs	r2, r1, r7
 800569e:	4251      	negs	r1, r2
 80056a0:	4151      	adcs	r1, r2
 80056a2:	200d      	movs	r0, #13
 80056a4:	f7fb f8d4 	bl	8000850 <_test_assert>
 80056a8:	2800      	cmp	r0, #0
 80056aa:	f47f af2c 	bne.w	8005506 <mtx4_execute+0x56>
 80056ae:	f7fc fc37 	bl	8001f20 <chMtxUnlockAll>
 80056b2:	69ab      	ldr	r3, [r5, #24]
 80056b4:	6899      	ldr	r1, [r3, #8]
 80056b6:	1b0b      	subs	r3, r1, r4
 80056b8:	4259      	negs	r1, r3
 80056ba:	4159      	adcs	r1, r3
 80056bc:	200e      	movs	r0, #14
 80056be:	f7fb f8c7 	bl	8000850 <_test_assert>
 80056c2:	2800      	cmp	r0, #0
 80056c4:	f47f af1f 	bne.w	8005506 <mtx4_execute+0x56>
 80056c8:	b002      	add	sp, #8
 80056ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80056ce:	f7fe be87 	b.w	80043e0 <test_wait_threads>
 80056d2:	bf00      	nop
 80056d4:	20000ae0 	.word	0x20000ae0
 80056d8:	08006800 	.word	0x08006800
 80056dc:	080039d1 	.word	0x080039d1
 80056e0:	20000d08 	.word	0x20000d08
 80056e4:	2000139c 	.word	0x2000139c
 80056e8:	08006810 	.word	0x08006810
 80056ec:	20000e50 	.word	0x20000e50
 80056f0:	080039f1 	.word	0x080039f1
 80056f4:	20000844 	.word	0x20000844
 80056f8:	20000834 	.word	0x20000834
 80056fc:	08006808 	.word	0x08006808
 8005700:	08006804 	.word	0x08006804
	...

08005710 <mtx1_execute>:
 8005710:	b570      	push	{r4, r5, r6, lr}
 8005712:	4e29      	ldr	r6, [pc, #164]	; (80057b8 <mtx1_execute+0xa8>)
 8005714:	4829      	ldr	r0, [pc, #164]	; (80057bc <mtx1_execute+0xac>)
 8005716:	69b3      	ldr	r3, [r6, #24]
 8005718:	4d29      	ldr	r5, [pc, #164]	; (80057c0 <mtx1_execute+0xb0>)
 800571a:	689c      	ldr	r4, [r3, #8]
 800571c:	b082      	sub	sp, #8
 800571e:	f7fe f807 	bl	8003730 <chMtxLock>
 8005722:	4b28      	ldr	r3, [pc, #160]	; (80057c4 <mtx1_execute+0xb4>)
 8005724:	9300      	str	r3, [sp, #0]
 8005726:	1c62      	adds	r2, r4, #1
 8005728:	4b27      	ldr	r3, [pc, #156]	; (80057c8 <mtx1_execute+0xb8>)
 800572a:	4828      	ldr	r0, [pc, #160]	; (80057cc <mtx1_execute+0xbc>)
 800572c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005730:	f7fc fdde 	bl	80022f0 <chThdCreateStatic>
 8005734:	4b26      	ldr	r3, [pc, #152]	; (80057d0 <mtx1_execute+0xc0>)
 8005736:	6028      	str	r0, [r5, #0]
 8005738:	1ca2      	adds	r2, r4, #2
 800573a:	9300      	str	r3, [sp, #0]
 800573c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005740:	4b21      	ldr	r3, [pc, #132]	; (80057c8 <mtx1_execute+0xb8>)
 8005742:	4824      	ldr	r0, [pc, #144]	; (80057d4 <mtx1_execute+0xc4>)
 8005744:	f7fc fdd4 	bl	80022f0 <chThdCreateStatic>
 8005748:	4b23      	ldr	r3, [pc, #140]	; (80057d8 <mtx1_execute+0xc8>)
 800574a:	6068      	str	r0, [r5, #4]
 800574c:	1ce2      	adds	r2, r4, #3
 800574e:	9300      	str	r3, [sp, #0]
 8005750:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005754:	4b1c      	ldr	r3, [pc, #112]	; (80057c8 <mtx1_execute+0xb8>)
 8005756:	4821      	ldr	r0, [pc, #132]	; (80057dc <mtx1_execute+0xcc>)
 8005758:	f7fc fdca 	bl	80022f0 <chThdCreateStatic>
 800575c:	4b20      	ldr	r3, [pc, #128]	; (80057e0 <mtx1_execute+0xd0>)
 800575e:	60a8      	str	r0, [r5, #8]
 8005760:	1d22      	adds	r2, r4, #4
 8005762:	9300      	str	r3, [sp, #0]
 8005764:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005768:	4b17      	ldr	r3, [pc, #92]	; (80057c8 <mtx1_execute+0xb8>)
 800576a:	481e      	ldr	r0, [pc, #120]	; (80057e4 <mtx1_execute+0xd4>)
 800576c:	f7fc fdc0 	bl	80022f0 <chThdCreateStatic>
 8005770:	4b1d      	ldr	r3, [pc, #116]	; (80057e8 <mtx1_execute+0xd8>)
 8005772:	60e8      	str	r0, [r5, #12]
 8005774:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005778:	1d62      	adds	r2, r4, #5
 800577a:	9300      	str	r3, [sp, #0]
 800577c:	481b      	ldr	r0, [pc, #108]	; (80057ec <mtx1_execute+0xdc>)
 800577e:	4b12      	ldr	r3, [pc, #72]	; (80057c8 <mtx1_execute+0xb8>)
 8005780:	f7fc fdb6 	bl	80022f0 <chThdCreateStatic>
 8005784:	6128      	str	r0, [r5, #16]
 8005786:	480d      	ldr	r0, [pc, #52]	; (80057bc <mtx1_execute+0xac>)
 8005788:	f7fc fd62 	bl	8002250 <chMtxUnlock>
 800578c:	f7fe fe28 	bl	80043e0 <test_wait_threads>
 8005790:	69b3      	ldr	r3, [r6, #24]
 8005792:	6899      	ldr	r1, [r3, #8]
 8005794:	1b09      	subs	r1, r1, r4
 8005796:	fab1 f181 	clz	r1, r1
 800579a:	2001      	movs	r0, #1
 800579c:	0949      	lsrs	r1, r1, #5
 800579e:	f7fb f857 	bl	8000850 <_test_assert>
 80057a2:	b108      	cbz	r0, 80057a8 <mtx1_execute+0x98>
 80057a4:	b002      	add	sp, #8
 80057a6:	bd70      	pop	{r4, r5, r6, pc}
 80057a8:	4911      	ldr	r1, [pc, #68]	; (80057f0 <mtx1_execute+0xe0>)
 80057aa:	2002      	movs	r0, #2
 80057ac:	b002      	add	sp, #8
 80057ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80057b2:	f7fb b825 	b.w	8000800 <_test_assert_sequence>
 80057b6:	bf00      	nop
 80057b8:	20000ae0 	.word	0x20000ae0
 80057bc:	20000834 	.word	0x20000834
 80057c0:	2000139c 	.word	0x2000139c
 80057c4:	08006ab4 	.word	0x08006ab4
 80057c8:	08003a11 	.word	0x08003a11
 80057cc:	20000d08 	.word	0x20000d08
 80057d0:	08006808 	.word	0x08006808
 80057d4:	20000e50 	.word	0x20000e50
 80057d8:	08006804 	.word	0x08006804
 80057dc:	20000f98 	.word	0x20000f98
 80057e0:	08006800 	.word	0x08006800
 80057e4:	200010e0 	.word	0x200010e0
 80057e8:	08006810 	.word	0x08006810
 80057ec:	20001228 	.word	0x20001228
 80057f0:	08006ab0 	.word	0x08006ab0
	...

08005800 <sem2_execute>:
 8005800:	b570      	push	{r4, r5, r6, lr}
 8005802:	2320      	movs	r3, #32
 8005804:	b082      	sub	sp, #8
 8005806:	f383 8811 	msr	BASEPRI, r3
 800580a:	4c4b      	ldr	r4, [pc, #300]	; (8005938 <sem2_execute+0x138>)
 800580c:	68a3      	ldr	r3, [r4, #8]
 800580e:	3b01      	subs	r3, #1
 8005810:	bf5a      	itte	pl
 8005812:	60a3      	strpl	r3, [r4, #8]
 8005814:	2100      	movpl	r1, #0
 8005816:	2101      	movmi	r1, #1
 8005818:	2300      	movs	r3, #0
 800581a:	f383 8811 	msr	BASEPRI, r3
 800581e:	2001      	movs	r0, #1
 8005820:	f7fb f816 	bl	8000850 <_test_assert>
 8005824:	b108      	cbz	r0, 800582a <sem2_execute+0x2a>
 8005826:	b002      	add	sp, #8
 8005828:	bd70      	pop	{r4, r5, r6, pc}
 800582a:	6821      	ldr	r1, [r4, #0]
 800582c:	1b09      	subs	r1, r1, r4
 800582e:	fab1 f181 	clz	r1, r1
 8005832:	2002      	movs	r0, #2
 8005834:	0949      	lsrs	r1, r1, #5
 8005836:	f7fb f80b 	bl	8000850 <_test_assert>
 800583a:	2800      	cmp	r0, #0
 800583c:	d1f3      	bne.n	8005826 <sem2_execute+0x26>
 800583e:	68a1      	ldr	r1, [r4, #8]
 8005840:	fab1 f181 	clz	r1, r1
 8005844:	0949      	lsrs	r1, r1, #5
 8005846:	2003      	movs	r0, #3
 8005848:	f7fb f802 	bl	8000850 <_test_assert>
 800584c:	4601      	mov	r1, r0
 800584e:	2800      	cmp	r0, #0
 8005850:	d1e9      	bne.n	8005826 <sem2_execute+0x26>
 8005852:	4a3a      	ldr	r2, [pc, #232]	; (800593c <sem2_execute+0x13c>)
 8005854:	4b3a      	ldr	r3, [pc, #232]	; (8005940 <sem2_execute+0x140>)
 8005856:	6992      	ldr	r2, [r2, #24]
 8005858:	483a      	ldr	r0, [pc, #232]	; (8005944 <sem2_execute+0x144>)
 800585a:	6892      	ldr	r2, [r2, #8]
 800585c:	9100      	str	r1, [sp, #0]
 800585e:	3a01      	subs	r2, #1
 8005860:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005864:	f7fc fd44 	bl	80022f0 <chThdCreateStatic>
 8005868:	4b37      	ldr	r3, [pc, #220]	; (8005948 <sem2_execute+0x148>)
 800586a:	6018      	str	r0, [r3, #0]
 800586c:	f241 3088 	movw	r0, #5000	; 0x1388
 8005870:	f7fc fe86 	bl	8002580 <chSemWaitTimeout.constprop.58>
 8005874:	4605      	mov	r5, r0
 8005876:	f7fe fdb3 	bl	80043e0 <test_wait_threads>
 800587a:	fab5 f185 	clz	r1, r5
 800587e:	0949      	lsrs	r1, r1, #5
 8005880:	2004      	movs	r0, #4
 8005882:	f7fa ffe5 	bl	8000850 <_test_assert>
 8005886:	2800      	cmp	r0, #0
 8005888:	d1cd      	bne.n	8005826 <sem2_execute+0x26>
 800588a:	6821      	ldr	r1, [r4, #0]
 800588c:	1b09      	subs	r1, r1, r4
 800588e:	fab1 f181 	clz	r1, r1
 8005892:	2005      	movs	r0, #5
 8005894:	0949      	lsrs	r1, r1, #5
 8005896:	f7fa ffdb 	bl	8000850 <_test_assert>
 800589a:	2800      	cmp	r0, #0
 800589c:	d1c3      	bne.n	8005826 <sem2_execute+0x26>
 800589e:	68a1      	ldr	r1, [r4, #8]
 80058a0:	fab1 f181 	clz	r1, r1
 80058a4:	0949      	lsrs	r1, r1, #5
 80058a6:	2006      	movs	r0, #6
 80058a8:	f7fa ffd2 	bl	8000850 <_test_assert>
 80058ac:	4605      	mov	r5, r0
 80058ae:	2800      	cmp	r0, #0
 80058b0:	d1b9      	bne.n	8005826 <sem2_execute+0x26>
 80058b2:	f7fd fcc5 	bl	8003240 <test_wait_tick>
 80058b6:	2320      	movs	r3, #32
 80058b8:	f383 8811 	msr	BASEPRI, r3
 80058bc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80058c0:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 80058c2:	f385 8811 	msr	BASEPRI, r5
 80058c6:	2541      	movs	r5, #65	; 0x41
 80058c8:	4628      	mov	r0, r5
 80058ca:	f7fa ffd9 	bl	8000880 <test_emit_token>
 80058ce:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80058d2:	f7fc fe55 	bl	8002580 <chSemWaitTimeout.constprop.58>
 80058d6:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 80058da:	fab1 f181 	clz	r1, r1
 80058de:	0949      	lsrs	r1, r1, #5
 80058e0:	2007      	movs	r0, #7
 80058e2:	f7fa ffb5 	bl	8000850 <_test_assert>
 80058e6:	2800      	cmp	r0, #0
 80058e8:	d19d      	bne.n	8005826 <sem2_execute+0x26>
 80058ea:	6821      	ldr	r1, [r4, #0]
 80058ec:	1b09      	subs	r1, r1, r4
 80058ee:	fab1 f181 	clz	r1, r1
 80058f2:	2008      	movs	r0, #8
 80058f4:	0949      	lsrs	r1, r1, #5
 80058f6:	f7fa ffab 	bl	8000850 <_test_assert>
 80058fa:	2800      	cmp	r0, #0
 80058fc:	d193      	bne.n	8005826 <sem2_execute+0x26>
 80058fe:	68a1      	ldr	r1, [r4, #8]
 8005900:	fab1 f181 	clz	r1, r1
 8005904:	0949      	lsrs	r1, r1, #5
 8005906:	2009      	movs	r0, #9
 8005908:	f7fa ffa2 	bl	8000850 <_test_assert>
 800590c:	3501      	adds	r5, #1
 800590e:	b2ed      	uxtb	r5, r5
 8005910:	2800      	cmp	r0, #0
 8005912:	d188      	bne.n	8005826 <sem2_execute+0x26>
 8005914:	2d46      	cmp	r5, #70	; 0x46
 8005916:	d1d7      	bne.n	80058c8 <sem2_execute+0xc8>
 8005918:	490c      	ldr	r1, [pc, #48]	; (800594c <sem2_execute+0x14c>)
 800591a:	200a      	movs	r0, #10
 800591c:	f7fa ff70 	bl	8000800 <_test_assert_sequence>
 8005920:	2800      	cmp	r0, #0
 8005922:	d180      	bne.n	8005826 <sem2_execute+0x26>
 8005924:	f606 12d8 	addw	r2, r6, #2520	; 0x9d8
 8005928:	f606 11c4 	addw	r1, r6, #2500	; 0x9c4
 800592c:	200b      	movs	r0, #11
 800592e:	b002      	add	sp, #8
 8005930:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005934:	f7fa bf44 	b.w	80007c0 <_test_assert_time_window>
 8005938:	200008ac 	.word	0x200008ac
 800593c:	20000ae0 	.word	0x20000ae0
 8005940:	08003211 	.word	0x08003211
 8005944:	20000d08 	.word	0x20000d08
 8005948:	2000139c 	.word	0x2000139c
 800594c:	08006ab0 	.word	0x08006ab0

08005950 <sem1_execute>:
 8005950:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005952:	4d4b      	ldr	r5, [pc, #300]	; (8005a80 <sem1_execute+0x130>)
 8005954:	4f4b      	ldr	r7, [pc, #300]	; (8005a84 <sem1_execute+0x134>)
 8005956:	69aa      	ldr	r2, [r5, #24]
 8005958:	4b4b      	ldr	r3, [pc, #300]	; (8005a88 <sem1_execute+0x138>)
 800595a:	6892      	ldr	r2, [r2, #8]
 800595c:	484b      	ldr	r0, [pc, #300]	; (8005a8c <sem1_execute+0x13c>)
 800595e:	4c4c      	ldr	r4, [pc, #304]	; (8005a90 <sem1_execute+0x140>)
 8005960:	b083      	sub	sp, #12
 8005962:	3205      	adds	r2, #5
 8005964:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005968:	9700      	str	r7, [sp, #0]
 800596a:	f7fc fcc1 	bl	80022f0 <chThdCreateStatic>
 800596e:	69ab      	ldr	r3, [r5, #24]
 8005970:	689a      	ldr	r2, [r3, #8]
 8005972:	4b48      	ldr	r3, [pc, #288]	; (8005a94 <sem1_execute+0x144>)
 8005974:	6020      	str	r0, [r4, #0]
 8005976:	3201      	adds	r2, #1
 8005978:	9300      	str	r3, [sp, #0]
 800597a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800597e:	4b42      	ldr	r3, [pc, #264]	; (8005a88 <sem1_execute+0x138>)
 8005980:	4845      	ldr	r0, [pc, #276]	; (8005a98 <sem1_execute+0x148>)
 8005982:	f7fc fcb5 	bl	80022f0 <chThdCreateStatic>
 8005986:	69aa      	ldr	r2, [r5, #24]
 8005988:	4b44      	ldr	r3, [pc, #272]	; (8005a9c <sem1_execute+0x14c>)
 800598a:	6892      	ldr	r2, [r2, #8]
 800598c:	6060      	str	r0, [r4, #4]
 800598e:	3203      	adds	r2, #3
 8005990:	9300      	str	r3, [sp, #0]
 8005992:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005996:	4b3c      	ldr	r3, [pc, #240]	; (8005a88 <sem1_execute+0x138>)
 8005998:	4841      	ldr	r0, [pc, #260]	; (8005aa0 <sem1_execute+0x150>)
 800599a:	f7fc fca9 	bl	80022f0 <chThdCreateStatic>
 800599e:	69aa      	ldr	r2, [r5, #24]
 80059a0:	4b40      	ldr	r3, [pc, #256]	; (8005aa4 <sem1_execute+0x154>)
 80059a2:	6892      	ldr	r2, [r2, #8]
 80059a4:	60a0      	str	r0, [r4, #8]
 80059a6:	3204      	adds	r2, #4
 80059a8:	9300      	str	r3, [sp, #0]
 80059aa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80059ae:	4b36      	ldr	r3, [pc, #216]	; (8005a88 <sem1_execute+0x138>)
 80059b0:	483d      	ldr	r0, [pc, #244]	; (8005aa8 <sem1_execute+0x158>)
 80059b2:	f7fc fc9d 	bl	80022f0 <chThdCreateStatic>
 80059b6:	69aa      	ldr	r2, [r5, #24]
 80059b8:	4b3c      	ldr	r3, [pc, #240]	; (8005aac <sem1_execute+0x15c>)
 80059ba:	6892      	ldr	r2, [r2, #8]
 80059bc:	60e0      	str	r0, [r4, #12]
 80059be:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80059c2:	3202      	adds	r2, #2
 80059c4:	9300      	str	r3, [sp, #0]
 80059c6:	483a      	ldr	r0, [pc, #232]	; (8005ab0 <sem1_execute+0x160>)
 80059c8:	4b2f      	ldr	r3, [pc, #188]	; (8005a88 <sem1_execute+0x138>)
 80059ca:	f7fc fc91 	bl	80022f0 <chThdCreateStatic>
 80059ce:	6120      	str	r0, [r4, #16]
 80059d0:	4838      	ldr	r0, [pc, #224]	; (8005ab4 <sem1_execute+0x164>)
 80059d2:	f7fc fc6d 	bl	80022b0 <chSemSignal>
 80059d6:	4837      	ldr	r0, [pc, #220]	; (8005ab4 <sem1_execute+0x164>)
 80059d8:	f7fc fc6a 	bl	80022b0 <chSemSignal>
 80059dc:	4835      	ldr	r0, [pc, #212]	; (8005ab4 <sem1_execute+0x164>)
 80059de:	f7fc fc67 	bl	80022b0 <chSemSignal>
 80059e2:	4834      	ldr	r0, [pc, #208]	; (8005ab4 <sem1_execute+0x164>)
 80059e4:	f7fc fc64 	bl	80022b0 <chSemSignal>
 80059e8:	4832      	ldr	r0, [pc, #200]	; (8005ab4 <sem1_execute+0x164>)
 80059ea:	f7fc fc61 	bl	80022b0 <chSemSignal>
 80059ee:	f7fe fcf7 	bl	80043e0 <test_wait_threads>
 80059f2:	4931      	ldr	r1, [pc, #196]	; (8005ab8 <sem1_execute+0x168>)
 80059f4:	2001      	movs	r0, #1
 80059f6:	f7fa ff03 	bl	8000800 <_test_assert_sequence>
 80059fa:	b108      	cbz	r0, 8005a00 <sem1_execute+0xb0>
 80059fc:	b003      	add	sp, #12
 80059fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a00:	69aa      	ldr	r2, [r5, #24]
 8005a02:	4b21      	ldr	r3, [pc, #132]	; (8005a88 <sem1_execute+0x138>)
 8005a04:	6892      	ldr	r2, [r2, #8]
 8005a06:	9700      	str	r7, [sp, #0]
 8005a08:	4606      	mov	r6, r0
 8005a0a:	3205      	adds	r2, #5
 8005a0c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005a10:	481e      	ldr	r0, [pc, #120]	; (8005a8c <sem1_execute+0x13c>)
 8005a12:	f7fc fc6d 	bl	80022f0 <chThdCreateStatic>
 8005a16:	2320      	movs	r3, #32
 8005a18:	6020      	str	r0, [r4, #0]
 8005a1a:	f383 8811 	msr	BASEPRI, r3
 8005a1e:	2502      	movs	r5, #2
 8005a20:	4c24      	ldr	r4, [pc, #144]	; (8005ab4 <sem1_execute+0x164>)
 8005a22:	e002      	b.n	8005a2a <sem1_execute+0xda>
 8005a24:	2d01      	cmp	r5, #1
 8005a26:	d00e      	beq.n	8005a46 <sem1_execute+0xf6>
 8005a28:	2501      	movs	r5, #1
 8005a2a:	68a3      	ldr	r3, [r4, #8]
 8005a2c:	3301      	adds	r3, #1
 8005a2e:	2b00      	cmp	r3, #0
 8005a30:	60a3      	str	r3, [r4, #8]
 8005a32:	dcf7      	bgt.n	8005a24 <sem1_execute+0xd4>
 8005a34:	6820      	ldr	r0, [r4, #0]
 8005a36:	6803      	ldr	r3, [r0, #0]
 8005a38:	6023      	str	r3, [r4, #0]
 8005a3a:	605c      	str	r4, [r3, #4]
 8005a3c:	f7fb faf8 	bl	8001030 <chSchReadyI>
 8005a40:	2d01      	cmp	r5, #1
 8005a42:	6206      	str	r6, [r0, #32]
 8005a44:	d1f0      	bne.n	8005a28 <sem1_execute+0xd8>
 8005a46:	f7fc fa43 	bl	8001ed0 <chSchRescheduleS>
 8005a4a:	2500      	movs	r5, #0
 8005a4c:	f385 8811 	msr	BASEPRI, r5
 8005a50:	f7fe fcc6 	bl	80043e0 <test_wait_threads>
 8005a54:	2320      	movs	r3, #32
 8005a56:	f383 8811 	msr	BASEPRI, r3
 8005a5a:	68a1      	ldr	r1, [r4, #8]
 8005a5c:	f1a1 0101 	sub.w	r1, r1, #1
 8005a60:	fab1 f181 	clz	r1, r1
 8005a64:	2002      	movs	r0, #2
 8005a66:	0949      	lsrs	r1, r1, #5
 8005a68:	f7fa fef2 	bl	8000850 <_test_assert>
 8005a6c:	b918      	cbnz	r0, 8005a76 <sem1_execute+0x126>
 8005a6e:	f380 8811 	msr	BASEPRI, r0
 8005a72:	b003      	add	sp, #12
 8005a74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a76:	f385 8811 	msr	BASEPRI, r5
 8005a7a:	b003      	add	sp, #12
 8005a7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a7e:	bf00      	nop
 8005a80:	20000ae0 	.word	0x20000ae0
 8005a84:	08006810 	.word	0x08006810
 8005a88:	08004301 	.word	0x08004301
 8005a8c:	20000d08 	.word	0x20000d08
 8005a90:	2000139c 	.word	0x2000139c
 8005a94:	08006800 	.word	0x08006800
 8005a98:	20000e50 	.word	0x20000e50
 8005a9c:	08006804 	.word	0x08006804
 8005aa0:	20000f98 	.word	0x20000f98
 8005aa4:	08006808 	.word	0x08006808
 8005aa8:	200010e0 	.word	0x200010e0
 8005aac:	08006ab4 	.word	0x08006ab4
 8005ab0:	20001228 	.word	0x20001228
 8005ab4:	200008ac 	.word	0x200008ac
 8005ab8:	08006ab0 	.word	0x08006ab0
 8005abc:	00000000 	.word	0x00000000

08005ac0 <thd2_execute>:
 8005ac0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005ac4:	4d41      	ldr	r5, [pc, #260]	; (8005bcc <thd2_execute+0x10c>)
 8005ac6:	4f42      	ldr	r7, [pc, #264]	; (8005bd0 <thd2_execute+0x110>)
 8005ac8:	69ab      	ldr	r3, [r5, #24]
 8005aca:	4c42      	ldr	r4, [pc, #264]	; (8005bd4 <thd2_execute+0x114>)
 8005acc:	689a      	ldr	r2, [r3, #8]
 8005ace:	4b42      	ldr	r3, [pc, #264]	; (8005bd8 <thd2_execute+0x118>)
 8005ad0:	4e42      	ldr	r6, [pc, #264]	; (8005bdc <thd2_execute+0x11c>)
 8005ad2:	b082      	sub	sp, #8
 8005ad4:	3a04      	subs	r2, #4
 8005ad6:	9300      	str	r3, [sp, #0]
 8005ad8:	f504 70a4 	add.w	r0, r4, #328	; 0x148
 8005adc:	463b      	mov	r3, r7
 8005ade:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005ae2:	f7fc fc05 	bl	80022f0 <chThdCreateStatic>
 8005ae6:	69ab      	ldr	r3, [r5, #24]
 8005ae8:	493d      	ldr	r1, [pc, #244]	; (8005be0 <thd2_execute+0x120>)
 8005aea:	689a      	ldr	r2, [r3, #8]
 8005aec:	6070      	str	r0, [r6, #4]
 8005aee:	463b      	mov	r3, r7
 8005af0:	9100      	str	r1, [sp, #0]
 8005af2:	3a05      	subs	r2, #5
 8005af4:	4620      	mov	r0, r4
 8005af6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005afa:	f7fc fbf9 	bl	80022f0 <chThdCreateStatic>
 8005afe:	69ab      	ldr	r3, [r5, #24]
 8005b00:	4938      	ldr	r1, [pc, #224]	; (8005be4 <thd2_execute+0x124>)
 8005b02:	689a      	ldr	r2, [r3, #8]
 8005b04:	6030      	str	r0, [r6, #0]
 8005b06:	463b      	mov	r3, r7
 8005b08:	9100      	str	r1, [sp, #0]
 8005b0a:	3a01      	subs	r2, #1
 8005b0c:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8005b10:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005b14:	f7fc fbec 	bl	80022f0 <chThdCreateStatic>
 8005b18:	69ab      	ldr	r3, [r5, #24]
 8005b1a:	4933      	ldr	r1, [pc, #204]	; (8005be8 <thd2_execute+0x128>)
 8005b1c:	689a      	ldr	r2, [r3, #8]
 8005b1e:	6130      	str	r0, [r6, #16]
 8005b20:	9100      	str	r1, [sp, #0]
 8005b22:	3a02      	subs	r2, #2
 8005b24:	463b      	mov	r3, r7
 8005b26:	f504 7076 	add.w	r0, r4, #984	; 0x3d8
 8005b2a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005b2e:	f7fc fbdf 	bl	80022f0 <chThdCreateStatic>
 8005b32:	2220      	movs	r2, #32
 8005b34:	60f0      	str	r0, [r6, #12]
 8005b36:	f382 8811 	msr	BASEPRI, r2
 8005b3a:	e9d5 1305 	ldrd	r1, r3, [r5, #20]
 8005b3e:	689b      	ldr	r3, [r3, #8]
 8005b40:	f8c4 73b4 	str.w	r7, [r4, #948]	; 0x3b4
 8005b44:	3b03      	subs	r3, #3
 8005b46:	f504 776d 	add.w	r7, r4, #948	; 0x3b4
 8005b4a:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 8005b4e:	f8c4 32cc 	str.w	r3, [r4, #716]	; 0x2cc
 8005b52:	f8c4 729c 	str.w	r7, [r4, #668]	; 0x29c
 8005b56:	f504 7324 	add.w	r3, r4, #656	; 0x290
 8005b5a:	2700      	movs	r7, #0
 8005b5c:	f8df e090 	ldr.w	lr, [pc, #144]	; 8005bf0 <thd2_execute+0x130>
 8005b60:	f8df c090 	ldr.w	ip, [pc, #144]	; 8005bf4 <thd2_execute+0x134>
 8005b64:	f8c4 12a4 	str.w	r1, [r4, #676]	; 0x2a4
 8005b68:	2002      	movs	r0, #2
 8005b6a:	f04f 0801 	mov.w	r8, #1
 8005b6e:	f8a4 02ac 	strh.w	r0, [r4, #684]	; 0x2ac
 8005b72:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
 8005b76:	f8c4 e3b8 	str.w	lr, [r4, #952]	; 0x3b8
 8005b7a:	f8c4 c3d4 	str.w	ip, [r4, #980]	; 0x3d4
 8005b7e:	f504 702d 	add.w	r0, r4, #692	; 0x2b4
 8005b82:	f8c4 72c8 	str.w	r7, [r4, #712]	; 0x2c8
 8005b86:	f8c4 72c4 	str.w	r7, [r4, #708]	; 0x2c4
 8005b8a:	f8c4 72a8 	str.w	r7, [r4, #680]	; 0x2a8
 8005b8e:	f884 82ae 	strb.w	r8, [r4, #686]	; 0x2ae
 8005b92:	610b      	str	r3, [r1, #16]
 8005b94:	f504 712e 	add.w	r1, r4, #696	; 0x2b8
 8005b98:	616b      	str	r3, [r5, #20]
 8005b9a:	60b3      	str	r3, [r6, #8]
 8005b9c:	f8c4 02b4 	str.w	r0, [r4, #692]	; 0x2b4
 8005ba0:	f8c4 12b8 	str.w	r1, [r4, #696]	; 0x2b8
 8005ba4:	f8c4 12bc 	str.w	r1, [r4, #700]	; 0x2bc
 8005ba8:	f387 8811 	msr	BASEPRI, r7
 8005bac:	68b0      	ldr	r0, [r6, #8]
 8005bae:	f382 8811 	msr	BASEPRI, r2
 8005bb2:	f7fb fa3d 	bl	8001030 <chSchReadyI>
 8005bb6:	f387 8811 	msr	BASEPRI, r7
 8005bba:	f7fe fc11 	bl	80043e0 <test_wait_threads>
 8005bbe:	490b      	ldr	r1, [pc, #44]	; (8005bec <thd2_execute+0x12c>)
 8005bc0:	4640      	mov	r0, r8
 8005bc2:	b002      	add	sp, #8
 8005bc4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005bc8:	f7fa be1a 	b.w	8000800 <_test_assert_sequence>
 8005bcc:	20000ae0 	.word	0x20000ae0
 8005bd0:	080008d1 	.word	0x080008d1
 8005bd4:	20000d08 	.word	0x20000d08
 8005bd8:	08006808 	.word	0x08006808
 8005bdc:	2000139c 	.word	0x2000139c
 8005be0:	08006ab4 	.word	0x08006ab4
 8005be4:	08006810 	.word	0x08006810
 8005be8:	08006800 	.word	0x08006800
 8005bec:	08006ab0 	.word	0x08006ab0
 8005bf0:	08006804 	.word	0x08006804
 8005bf4:	08000291 	.word	0x08000291
	...

08005c00 <thd1_execute>:
 8005c00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c02:	4f27      	ldr	r7, [pc, #156]	; (8005ca0 <thd1_execute+0xa0>)
 8005c04:	4e27      	ldr	r6, [pc, #156]	; (8005ca4 <thd1_execute+0xa4>)
 8005c06:	69bb      	ldr	r3, [r7, #24]
 8005c08:	4d27      	ldr	r5, [pc, #156]	; (8005ca8 <thd1_execute+0xa8>)
 8005c0a:	689a      	ldr	r2, [r3, #8]
 8005c0c:	4b27      	ldr	r3, [pc, #156]	; (8005cac <thd1_execute+0xac>)
 8005c0e:	4c28      	ldr	r4, [pc, #160]	; (8005cb0 <thd1_execute+0xb0>)
 8005c10:	b083      	sub	sp, #12
 8005c12:	3a05      	subs	r2, #5
 8005c14:	9300      	str	r3, [sp, #0]
 8005c16:	4628      	mov	r0, r5
 8005c18:	4633      	mov	r3, r6
 8005c1a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005c1e:	f7fc fb67 	bl	80022f0 <chThdCreateStatic>
 8005c22:	69bb      	ldr	r3, [r7, #24]
 8005c24:	4923      	ldr	r1, [pc, #140]	; (8005cb4 <thd1_execute+0xb4>)
 8005c26:	689a      	ldr	r2, [r3, #8]
 8005c28:	6020      	str	r0, [r4, #0]
 8005c2a:	4633      	mov	r3, r6
 8005c2c:	9100      	str	r1, [sp, #0]
 8005c2e:	3a04      	subs	r2, #4
 8005c30:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8005c34:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005c38:	f7fc fb5a 	bl	80022f0 <chThdCreateStatic>
 8005c3c:	69bb      	ldr	r3, [r7, #24]
 8005c3e:	491e      	ldr	r1, [pc, #120]	; (8005cb8 <thd1_execute+0xb8>)
 8005c40:	689a      	ldr	r2, [r3, #8]
 8005c42:	6060      	str	r0, [r4, #4]
 8005c44:	4633      	mov	r3, r6
 8005c46:	9100      	str	r1, [sp, #0]
 8005c48:	3a03      	subs	r2, #3
 8005c4a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8005c4e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005c52:	f7fc fb4d 	bl	80022f0 <chThdCreateStatic>
 8005c56:	69bb      	ldr	r3, [r7, #24]
 8005c58:	4918      	ldr	r1, [pc, #96]	; (8005cbc <thd1_execute+0xbc>)
 8005c5a:	689a      	ldr	r2, [r3, #8]
 8005c5c:	60a0      	str	r0, [r4, #8]
 8005c5e:	4633      	mov	r3, r6
 8005c60:	9100      	str	r1, [sp, #0]
 8005c62:	3a02      	subs	r2, #2
 8005c64:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8005c68:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005c6c:	f7fc fb40 	bl	80022f0 <chThdCreateStatic>
 8005c70:	69bb      	ldr	r3, [r7, #24]
 8005c72:	4913      	ldr	r1, [pc, #76]	; (8005cc0 <thd1_execute+0xc0>)
 8005c74:	689a      	ldr	r2, [r3, #8]
 8005c76:	60e0      	str	r0, [r4, #12]
 8005c78:	3a01      	subs	r2, #1
 8005c7a:	4633      	mov	r3, r6
 8005c7c:	9100      	str	r1, [sp, #0]
 8005c7e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8005c82:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005c86:	f7fc fb33 	bl	80022f0 <chThdCreateStatic>
 8005c8a:	6120      	str	r0, [r4, #16]
 8005c8c:	f7fe fba8 	bl	80043e0 <test_wait_threads>
 8005c90:	490c      	ldr	r1, [pc, #48]	; (8005cc4 <thd1_execute+0xc4>)
 8005c92:	2001      	movs	r0, #1
 8005c94:	b003      	add	sp, #12
 8005c96:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8005c9a:	f7fa bdb1 	b.w	8000800 <_test_assert_sequence>
 8005c9e:	bf00      	nop
 8005ca0:	20000ae0 	.word	0x20000ae0
 8005ca4:	080008d1 	.word	0x080008d1
 8005ca8:	20000d08 	.word	0x20000d08
 8005cac:	08006ab4 	.word	0x08006ab4
 8005cb0:	2000139c 	.word	0x2000139c
 8005cb4:	08006808 	.word	0x08006808
 8005cb8:	08006804 	.word	0x08006804
 8005cbc:	08006800 	.word	0x08006800
 8005cc0:	08006810 	.word	0x08006810
 8005cc4:	08006ab0 	.word	0x08006ab0
	...

08005cd0 <main>:
 8005cd0:	4bc7      	ldr	r3, [pc, #796]	; (8005ff0 <main+0x320>)
 8005cd2:	4cc8      	ldr	r4, [pc, #800]	; (8005ff4 <main+0x324>)
 8005cd4:	691a      	ldr	r2, [r3, #16]
 8005cd6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005cda:	2200      	movs	r2, #0
 8005cdc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8005ce0:	6119      	str	r1, [r3, #16]
 8005ce2:	611a      	str	r2, [r3, #16]
 8005ce4:	6958      	ldr	r0, [r3, #20]
 8005ce6:	6159      	str	r1, [r3, #20]
 8005ce8:	615a      	str	r2, [r3, #20]
 8005cea:	6a18      	ldr	r0, [r3, #32]
 8005cec:	f060 5080 	orn	r0, r0, #268435456	; 0x10000000
 8005cf0:	6218      	str	r0, [r3, #32]
 8005cf2:	621a      	str	r2, [r3, #32]
 8005cf4:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8005cf6:	6259      	str	r1, [r3, #36]	; 0x24
 8005cf8:	625a      	str	r2, [r3, #36]	; 0x24
 8005cfa:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8005cfc:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8005d00:	6419      	str	r1, [r3, #64]	; 0x40
 8005d02:	6821      	ldr	r1, [r4, #0]
 8005d04:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8005d08:	6021      	str	r1, [r4, #0]
 8005d0a:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8005d0c:	f401 7140 	and.w	r1, r1, #768	; 0x300
 8005d10:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8005d14:	b08d      	sub	sp, #52	; 0x34
 8005d16:	d003      	beq.n	8005d20 <main+0x50>
 8005d18:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 8005d1c:	6719      	str	r1, [r3, #112]	; 0x70
 8005d1e:	671a      	str	r2, [r3, #112]	; 0x70
 8005d20:	4cb4      	ldr	r4, [pc, #720]	; (8005ff4 <main+0x324>)
 8005d22:	4db3      	ldr	r5, [pc, #716]	; (8005ff0 <main+0x320>)
 8005d24:	6862      	ldr	r2, [r4, #4]
 8005d26:	49b4      	ldr	r1, [pc, #720]	; (8005ff8 <main+0x328>)
 8005d28:	f8df a300 	ldr.w	sl, [pc, #768]	; 800602c <main+0x35c>
 8005d2c:	48b3      	ldr	r0, [pc, #716]	; (8005ffc <main+0x32c>)
 8005d2e:	4fb4      	ldr	r7, [pc, #720]	; (8006000 <main+0x330>)
 8005d30:	f8df 82fc 	ldr.w	r8, [pc, #764]	; 8006030 <main+0x360>
 8005d34:	f8df 92fc 	ldr.w	r9, [pc, #764]	; 8006034 <main+0x364>
 8005d38:	f8df e2fc 	ldr.w	lr, [pc, #764]	; 8006038 <main+0x368>
 8005d3c:	4bb1      	ldr	r3, [pc, #708]	; (8006004 <main+0x334>)
 8005d3e:	f8df c2fc 	ldr.w	ip, [pc, #764]	; 800603c <main+0x36c>
 8005d42:	4eb1      	ldr	r6, [pc, #708]	; (8006008 <main+0x338>)
 8005d44:	f8df b2f8 	ldr.w	fp, [pc, #760]	; 8006040 <main+0x370>
 8005d48:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005d4c:	6062      	str	r2, [r4, #4]
 8005d4e:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 8005d50:	f240 14ff 	movw	r4, #511	; 0x1ff
 8005d54:	4322      	orrs	r2, r4
 8005d56:	632a      	str	r2, [r5, #48]	; 0x30
 8005d58:	6d2a      	ldr	r2, [r5, #80]	; 0x50
 8005d5a:	4322      	orrs	r2, r4
 8005d5c:	652a      	str	r2, [r5, #80]	; 0x50
 8005d5e:	2400      	movs	r4, #0
 8005d60:	f46f 42a8 	mvn.w	r2, #21504	; 0x5400
 8005d64:	604c      	str	r4, [r1, #4]
 8005d66:	608a      	str	r2, [r1, #8]
 8005d68:	f8c1 a00c 	str.w	sl, [r1, #12]
 8005d6c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005d70:	f8df a2d0 	ldr.w	sl, [pc, #720]	; 8006044 <main+0x374>
 8005d74:	614a      	str	r2, [r1, #20]
 8005d76:	620f      	str	r7, [r1, #32]
 8005d78:	f8c1 a024 	str.w	sl, [r1, #36]	; 0x24
 8005d7c:	4fa3      	ldr	r7, [pc, #652]	; (800600c <main+0x33c>)
 8005d7e:	600f      	str	r7, [r1, #0]
 8005d80:	f44f 7a10 	mov.w	sl, #576	; 0x240
 8005d84:	f8c0 a004 	str.w	sl, [r0, #4]
 8005d88:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005d8c:	4fa0      	ldr	r7, [pc, #640]	; (8006010 <main+0x340>)
 8005d8e:	6081      	str	r1, [r0, #8]
 8005d90:	f04f 6a80 	mov.w	sl, #67108864	; 0x4000000
 8005d94:	60c7      	str	r7, [r0, #12]
 8005d96:	6142      	str	r2, [r0, #20]
 8005d98:	f8c0 a020 	str.w	sl, [r0, #32]
 8005d9c:	f8df a2a8 	ldr.w	sl, [pc, #680]	; 8006048 <main+0x378>
 8005da0:	2740      	movs	r7, #64	; 0x40
 8005da2:	6247      	str	r7, [r0, #36]	; 0x24
 8005da4:	f8c0 a000 	str.w	sl, [r0]
 8005da8:	f10a 4aaa 	add.w	sl, sl, #1426063360	; 0x55000000
 8005dac:	f5aa 0a43 	sub.w	sl, sl, #12779520	; 0xc30000
 8005db0:	f6aa 3a2c 	subw	sl, sl, #2860	; 0xb2c
 8005db4:	f8c8 4004 	str.w	r4, [r8, #4]
 8005db8:	f8c8 1008 	str.w	r1, [r8, #8]
 8005dbc:	f8c8 a00c 	str.w	sl, [r8, #12]
 8005dc0:	f04f 4ac0 	mov.w	sl, #1610612736	; 0x60000000
 8005dc4:	f8c8 2014 	str.w	r2, [r8, #20]
 8005dc8:	f8c8 a020 	str.w	sl, [r8, #32]
 8005dcc:	f8df a27c 	ldr.w	sl, [pc, #636]	; 800604c <main+0x37c>
 8005dd0:	f8c8 a024 	str.w	sl, [r8, #36]	; 0x24
 8005dd4:	f8df a278 	ldr.w	sl, [pc, #632]	; 8006050 <main+0x380>
 8005dd8:	f8c8 a000 	str.w	sl, [r8]
 8005ddc:	f8df a274 	ldr.w	sl, [pc, #628]	; 8006054 <main+0x384>
 8005de0:	f8c9 4004 	str.w	r4, [r9, #4]
 8005de4:	f8c9 1008 	str.w	r1, [r9, #8]
 8005de8:	f8c9 a00c 	str.w	sl, [r9, #12]
 8005dec:	f640 7aff 	movw	sl, #4095	; 0xfff
 8005df0:	f8c9 a014 	str.w	sl, [r9, #20]
 8005df4:	f8df a260 	ldr.w	sl, [pc, #608]	; 8006058 <main+0x388>
 8005df8:	f8df 8218 	ldr.w	r8, [pc, #536]	; 8006014 <main+0x344>
 8005dfc:	f8c9 4020 	str.w	r4, [r9, #32]
 8005e00:	f500 50e0 	add.w	r0, r0, #7168	; 0x1c00
 8005e04:	f8c9 4024 	str.w	r4, [r9, #36]	; 0x24
 8005e08:	f8c9 a000 	str.w	sl, [r9]
 8005e0c:	f8ce 4004 	str.w	r4, [lr, #4]
 8005e10:	f8ce 1008 	str.w	r1, [lr, #8]
 8005e14:	f8ce 400c 	str.w	r4, [lr, #12]
 8005e18:	f8ce 2014 	str.w	r2, [lr, #20]
 8005e1c:	f8ce 4020 	str.w	r4, [lr, #32]
 8005e20:	f8ce 4024 	str.w	r4, [lr, #36]	; 0x24
 8005e24:	f8ce 7000 	str.w	r7, [lr]
 8005e28:	605c      	str	r4, [r3, #4]
 8005e2a:	6099      	str	r1, [r3, #8]
 8005e2c:	60dc      	str	r4, [r3, #12]
 8005e2e:	615a      	str	r2, [r3, #20]
 8005e30:	621c      	str	r4, [r3, #32]
 8005e32:	625c      	str	r4, [r3, #36]	; 0x24
 8005e34:	601c      	str	r4, [r3, #0]
 8005e36:	f8cc 4004 	str.w	r4, [ip, #4]
 8005e3a:	f8cc 1008 	str.w	r1, [ip, #8]
 8005e3e:	f8cc 400c 	str.w	r4, [ip, #12]
 8005e42:	f8cc 2014 	str.w	r2, [ip, #20]
 8005e46:	f8cc 4020 	str.w	r4, [ip, #32]
 8005e4a:	f8cc 4024 	str.w	r4, [ip, #36]	; 0x24
 8005e4e:	f8cc 4000 	str.w	r4, [ip]
 8005e52:	6074      	str	r4, [r6, #4]
 8005e54:	60b1      	str	r1, [r6, #8]
 8005e56:	60f4      	str	r4, [r6, #12]
 8005e58:	6172      	str	r2, [r6, #20]
 8005e5a:	6234      	str	r4, [r6, #32]
 8005e5c:	6274      	str	r4, [r6, #36]	; 0x24
 8005e5e:	6034      	str	r4, [r6, #0]
 8005e60:	4e6c      	ldr	r6, [pc, #432]	; (8006014 <main+0x344>)
 8005e62:	f8df 91f8 	ldr.w	r9, [pc, #504]	; 800605c <main+0x38c>
 8005e66:	4b6c      	ldr	r3, [pc, #432]	; (8006018 <main+0x348>)
 8005e68:	6044      	str	r4, [r0, #4]
 8005e6a:	f106 0c74 	add.w	ip, r6, #116	; 0x74
 8005e6e:	6081      	str	r1, [r0, #8]
 8005e70:	f5ae 3ee6 	sub.w	lr, lr, #117760	; 0x1cc00
 8005e74:	60c4      	str	r4, [r0, #12]
 8005e76:	6142      	str	r2, [r0, #20]
 8005e78:	6204      	str	r4, [r0, #32]
 8005e7a:	6244      	str	r4, [r0, #36]	; 0x24
 8005e7c:	6004      	str	r4, [r0, #0]
 8005e7e:	f848 9b04 	str.w	r9, [r8], #4
 8005e82:	2201      	movs	r2, #1
 8005e84:	f106 0064 	add.w	r0, r6, #100	; 0x64
 8005e88:	f106 0a54 	add.w	sl, r6, #84	; 0x54
 8005e8c:	f106 090c 	add.w	r9, r6, #12
 8005e90:	f8c6 c040 	str.w	ip, [r6, #64]	; 0x40
 8005e94:	f8c6 e074 	str.w	lr, [r6, #116]	; 0x74
 8005e98:	f106 0c30 	add.w	ip, r6, #48	; 0x30
 8005e9c:	f04f 0e10 	mov.w	lr, #16
 8005ea0:	7232      	strb	r2, [r6, #8]
 8005ea2:	f8c6 e038 	str.w	lr, [r6, #56]	; 0x38
 8005ea6:	701a      	strb	r2, [r3, #0]
 8005ea8:	61dc      	str	r4, [r3, #28]
 8005eaa:	629c      	str	r4, [r3, #40]	; 0x28
 8005eac:	621c      	str	r4, [r3, #32]
 8005eae:	62dc      	str	r4, [r3, #44]	; 0x2c
 8005eb0:	625c      	str	r4, [r3, #36]	; 0x24
 8005eb2:	631c      	str	r4, [r3, #48]	; 0x30
 8005eb4:	6174      	str	r4, [r6, #20]
 8005eb6:	62b4      	str	r4, [r6, #40]	; 0x28
 8005eb8:	f8c6 b04c 	str.w	fp, [r6, #76]	; 0x4c
 8005ebc:	f8c6 8004 	str.w	r8, [r6, #4]
 8005ec0:	e9c6 9903 	strd	r9, r9, [r6, #12]
 8005ec4:	f8c6 a018 	str.w	sl, [r6, #24]
 8005ec8:	e9c6 aa08 	strd	sl, sl, [r6, #32]
 8005ecc:	61f0      	str	r0, [r6, #28]
 8005ece:	63f0      	str	r0, [r6, #60]	; 0x3c
 8005ed0:	e9c6 0011 	strd	r0, r0, [r6, #68]	; 0x44
 8005ed4:	e9c6 cc0c 	strd	ip, ip, [r6, #48]	; 0x30
 8005ed8:	62f6      	str	r6, [r6, #44]	; 0x2c
 8005eda:	6536      	str	r6, [r6, #80]	; 0x50
 8005edc:	605c      	str	r4, [r3, #4]
 8005ede:	6c28      	ldr	r0, [r5, #64]	; 0x40
 8005ee0:	f8df 917c 	ldr.w	r9, [pc, #380]	; 8006060 <main+0x390>
 8005ee4:	609c      	str	r4, [r3, #8]
 8005ee6:	4310      	orrs	r0, r2
 8005ee8:	6428      	str	r0, [r5, #64]	; 0x40
 8005eea:	f8d9 8008 	ldr.w	r8, [r9, #8]
 8005eee:	f8df c174 	ldr.w	ip, [pc, #372]	; 8006064 <main+0x394>
 8005ef2:	661c      	str	r4, [r3, #96]	; 0x60
 8005ef4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8005ef8:	ea48 0802 	orr.w	r8, r8, r2
 8005efc:	f8c9 8008 	str.w	r8, [r9, #8]
 8005f00:	4e46      	ldr	r6, [pc, #280]	; (800601c <main+0x34c>)
 8005f02:	f8df a164 	ldr.w	sl, [pc, #356]	; 8006068 <main+0x398>
 8005f06:	f242 08cf 	movw	r8, #8399	; 0x20cf
 8005f0a:	f8c0 8028 	str.w	r8, [r0, #40]	; 0x28
 8005f0e:	f04f 0980 	mov.w	r9, #128	; 0x80
 8005f12:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
 8005f16:	62c1      	str	r1, [r0, #44]	; 0x2c
 8005f18:	6184      	str	r4, [r0, #24]
 8005f1a:	6344      	str	r4, [r0, #52]	; 0x34
 8005f1c:	60c4      	str	r4, [r0, #12]
 8005f1e:	6044      	str	r4, [r0, #4]
 8005f20:	6142      	str	r2, [r0, #20]
 8005f22:	6002      	str	r2, [r0, #0]
 8005f24:	9203      	str	r2, [sp, #12]
 8005f26:	f886 931c 	strb.w	r9, [r6, #796]	; 0x31c
 8005f2a:	f8c6 8180 	str.w	r8, [r6, #384]	; 0x180
 8005f2e:	f8c6 8000 	str.w	r8, [r6]
 8005f32:	f8cc 4008 	str.w	r4, [ip, #8]
 8005f36:	f8dc 800c 	ldr.w	r8, [ip, #12]
 8005f3a:	4839      	ldr	r0, [pc, #228]	; (8006020 <main+0x350>)
 8005f3c:	665c      	str	r4, [r3, #100]	; 0x64
 8005f3e:	f64f 09ff 	movw	r9, #63743	; 0xf8ff
 8005f42:	ea08 0809 	and.w	r8, r8, r9
 8005f46:	f109 4960 	add.w	r9, r9, #3758096384	; 0xe0000000
 8005f4a:	ea48 0000 	orr.w	r0, r8, r0
 8005f4e:	f6a9 390f 	subw	r9, r9, #2831	; 0xb0f
 8005f52:	f8cc 000c 	str.w	r0, [ip, #12]
 8005f56:	f8d9 000c 	ldr.w	r0, [r9, #12]
 8005f5a:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800606c <main+0x39c>
 8005f5e:	f040 7080 	orr.w	r0, r0, #16777216	; 0x1000000
 8005f62:	f8c9 000c 	str.w	r0, [r9, #12]
 8005f66:	f8d8 0000 	ldr.w	r0, [r8]
 8005f6a:	f8df 9104 	ldr.w	r9, [pc, #260]	; 8006070 <main+0x3a0>
 8005f6e:	f8c3 a054 	str.w	sl, [r3, #84]	; 0x54
 8005f72:	4310      	orrs	r0, r2
 8005f74:	f8c8 0000 	str.w	r0, [r8]
 8005f78:	f04f 0820 	mov.w	r8, #32
 8005f7c:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
 8005f80:	f88c e01f 	strb.w	lr, [ip, #31]
 8005f84:	f04f 0a00 	mov.w	sl, #0
 8005f88:	f88c 8022 	strb.w	r8, [ip, #34]	; 0x22
 8005f8c:	f04f 0b00 	mov.w	fp, #0
 8005f90:	f109 0c1c 	add.w	ip, r9, #28
 8005f94:	6518      	str	r0, [r3, #80]	; 0x50
 8005f96:	a806      	add	r0, sp, #24
 8005f98:	f8c9 4008 	str.w	r4, [r9, #8]
 8005f9c:	e9c9 9900 	strd	r9, r9, [r9]
 8005fa0:	e9c9 1409 	strd	r1, r4, [r9, #36]	; 0x24
 8005fa4:	9106      	str	r1, [sp, #24]
 8005fa6:	e9c9 cc07 	strd	ip, ip, [r9, #28]
 8005faa:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 8005fae:	e9c9 9904 	strd	r9, r9, [r9, #16]
 8005fb2:	f8c9 4074 	str.w	r4, [r9, #116]	; 0x74
 8005fb6:	e9cd 4407 	strd	r4, r4, [sp, #28]
 8005fba:	9409      	str	r4, [sp, #36]	; 0x24
 8005fbc:	f7fa f978 	bl	80002b0 <chTMStartMeasurementX.constprop.66>
 8005fc0:	a806      	add	r0, sp, #24
 8005fc2:	f7fa ffd5 	bl	8000f70 <chTMStopMeasurementX>
 8005fc6:	4917      	ldr	r1, [pc, #92]	; (8006024 <main+0x354>)
 8005fc8:	9b08      	ldr	r3, [sp, #32]
 8005fca:	f8df c0a8 	ldr.w	ip, [pc, #168]	; 8006074 <main+0x3a4>
 8005fce:	f8d9 e014 	ldr.w	lr, [r9, #20]
 8005fd2:	f8c9 3074 	str.w	r3, [r9, #116]	; 0x74
 8005fd6:	f8df a0a0 	ldr.w	sl, [pc, #160]	; 8006078 <main+0x3a8>
 8005fda:	9a03      	ldr	r2, [sp, #12]
 8005fdc:	4812      	ldr	r0, [pc, #72]	; (8006028 <main+0x358>)
 8005fde:	f8c9 e044 	str.w	lr, [r9, #68]	; 0x44
 8005fe2:	f101 0310 	add.w	r3, r1, #16
 8005fe6:	e9c1 3304 	strd	r3, r3, [r1, #16]
 8005fea:	f02c 0c07 	bic.w	ip, ip, #7
 8005fee:	e045      	b.n	800607c <main+0x3ac>
 8005ff0:	40023800 	.word	0x40023800
 8005ff4:	40007000 	.word	0x40007000
 8005ff8:	40020000 	.word	0x40020000
 8005ffc:	40020400 	.word	0x40020400
 8006000:	55560000 	.word	0x55560000
 8006004:	40021400 	.word	0x40021400
 8006008:	40021c00 	.word	0x40021c00
 800600c:	2aa0aa00 	.word	0x2aa0aa00
 8006010:	55514515 	.word	0x55514515
 8006014:	200008b8 	.word	0x200008b8
 8006018:	20000930 	.word	0x20000930
 800601c:	e000e100 	.word	0xe000e100
 8006020:	05fa0300 	.word	0x05fa0300
 8006024:	20000c38 	.word	0x20000c38
 8006028:	20020000 	.word	0x20020000
 800602c:	40010054 	.word	0x40010054
 8006030:	40020800 	.word	0x40020800
 8006034:	40020c00 	.word	0x40020c00
 8006038:	40021000 	.word	0x40021000
 800603c:	40021800 	.word	0x40021800
 8006040:	08000401 	.word	0x08000401
 8006044:	000aaa00 	.word	0x000aaa00
 8006048:	00082080 	.word	0x00082080
 800604c:	00060600 	.word	0x00060600
 8006050:	02208001 	.word	0x02208001
 8006054:	00555055 	.word	0x00555055
 8006058:	55000100 	.word	0x55000100
 800605c:	080073b0 	.word	0x080073b0
 8006060:	e0042000 	.word	0xe0042000
 8006064:	e000ed00 	.word	0xe000ed00
 8006068:	08006870 	.word	0x08006870
 800606c:	e0001000 	.word	0xe0001000
 8006070:	20000ae0 	.word	0x20000ae0
 8006074:	2000154f 	.word	0x2000154f
 8006078:	20000cf4 	.word	0x20000cf4
 800607c:	f109 0330 	add.w	r3, r9, #48	; 0x30
 8006080:	f8c9 7038 	str.w	r7, [r9, #56]	; 0x38
 8006084:	f889 404d 	strb.w	r4, [r9, #77]	; 0x4d
 8006088:	e9c9 471a 	strd	r4, r7, [r9, #104]	; 0x68
 800608c:	f8c9 4064 	str.w	r4, [r9, #100]	; 0x64
 8006090:	f889 204e 	strb.w	r2, [r9, #78]	; 0x4e
 8006094:	f8c9 4048 	str.w	r4, [r9, #72]	; 0x48
 8006098:	f8c9 9040 	str.w	r9, [r9, #64]	; 0x40
 800609c:	618c      	str	r4, [r1, #24]
 800609e:	f8ca c000 	str.w	ip, [sl]
 80060a2:	f8ce 3010 	str.w	r3, [lr, #16]
 80060a6:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 80061a0 <main+0x4d0>
 80060aa:	f8df e0f8 	ldr.w	lr, [pc, #248]	; 80061a4 <main+0x4d4>
 80060ae:	f889 204c 	strb.w	r2, [r9, #76]	; 0x4c
 80060b2:	e9c9 3305 	strd	r3, r3, [r9, #20]
 80060b6:	f109 0354 	add.w	r3, r9, #84	; 0x54
 80060ba:	f020 0007 	bic.w	r0, r0, #7
 80060be:	f8c9 3054 	str.w	r3, [r9, #84]	; 0x54
 80060c2:	f109 0358 	add.w	r3, r9, #88	; 0x58
 80060c6:	e9c1 4402 	strd	r4, r4, [r1, #8]
 80060ca:	f8c1 e000 	str.w	lr, [r1]
 80060ce:	e9c9 3316 	strd	r3, r3, [r9, #88]	; 0x58
 80060d2:	f8cc 0000 	str.w	r0, [ip]
 80060d6:	f384 8811 	msr	BASEPRI, r4
 80060da:	b662      	cpsie	i
 80060dc:	f8d9 3018 	ldr.w	r3, [r9, #24]
 80060e0:	4928      	ldr	r1, [pc, #160]	; (8006184 <main+0x4b4>)
 80060e2:	6199      	str	r1, [r3, #24]
 80060e4:	f109 0078 	add.w	r0, r9, #120	; 0x78
 80060e8:	9400      	str	r4, [sp, #0]
 80060ea:	4b27      	ldr	r3, [pc, #156]	; (8006188 <main+0x4b8>)
 80060ec:	21d8      	movs	r1, #216	; 0xd8
 80060ee:	f7fc f8ff 	bl	80022f0 <chThdCreateStatic>
 80060f2:	4b26      	ldr	r3, [pc, #152]	; (800618c <main+0x4bc>)
 80060f4:	6183      	str	r3, [r0, #24]
 80060f6:	f388 8811 	msr	BASEPRI, r8
 80060fa:	4b25      	ldr	r3, [pc, #148]	; (8006190 <main+0x4c0>)
 80060fc:	7a1b      	ldrb	r3, [r3, #8]
 80060fe:	2b01      	cmp	r3, #1
 8006100:	d109      	bne.n	8006116 <main+0x446>
 8006102:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8006104:	22c0      	movs	r2, #192	; 0xc0
 8006106:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800610a:	642b      	str	r3, [r5, #64]	; 0x40
 800610c:	f886 2326 	strb.w	r2, [r6, #806]	; 0x326
 8006110:	f8c6 7184 	str.w	r7, [r6, #388]	; 0x184
 8006114:	6077      	str	r7, [r6, #4]
 8006116:	4b1e      	ldr	r3, [pc, #120]	; (8006190 <main+0x4c0>)
 8006118:	4a1e      	ldr	r2, [pc, #120]	; (8006194 <main+0x4c4>)
 800611a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800611c:	4293      	cmp	r3, r2
 800611e:	f000 8197 	beq.w	8006450 <main+0x780>
 8006122:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006126:	4293      	cmp	r3, r2
 8006128:	f000 8192 	beq.w	8006450 <main+0x780>
 800612c:	f240 4245 	movw	r2, #1093	; 0x445
 8006130:	609a      	str	r2, [r3, #8]
 8006132:	f244 0240 	movw	r2, #16448	; 0x4040
 8006136:	2001      	movs	r0, #1
 8006138:	f242 112c 	movw	r1, #8492	; 0x212c
 800613c:	2400      	movs	r4, #0
 800613e:	611a      	str	r2, [r3, #16]
 8006140:	6158      	str	r0, [r3, #20]
 8006142:	60d9      	str	r1, [r3, #12]
 8006144:	601c      	str	r4, [r3, #0]
 8006146:	6819      	ldr	r1, [r3, #0]
 8006148:	685b      	ldr	r3, [r3, #4]
 800614a:	4b11      	ldr	r3, [pc, #68]	; (8006190 <main+0x4c0>)
 800614c:	2202      	movs	r2, #2
 800614e:	721a      	strb	r2, [r3, #8]
 8006150:	f384 8811 	msr	BASEPRI, r4
 8006154:	2004      	movs	r0, #4
 8006156:	f7fa f8d3 	bl	8000300 <_pal_lld_setgroupmode.constprop.8>
 800615a:	2008      	movs	r0, #8
 800615c:	f7fa f8d0 	bl	8000300 <_pal_lld_setgroupmode.constprop.8>
 8006160:	9400      	str	r4, [sp, #0]
 8006162:	4b0d      	ldr	r3, [pc, #52]	; (8006198 <main+0x4c8>)
 8006164:	480d      	ldr	r0, [pc, #52]	; (800619c <main+0x4cc>)
 8006166:	f8df 8040 	ldr.w	r8, [pc, #64]	; 80061a8 <main+0x4d8>
 800616a:	f8df 9040 	ldr.w	r9, [pc, #64]	; 80061ac <main+0x4dc>
 800616e:	f8df a040 	ldr.w	sl, [pc, #64]	; 80061b0 <main+0x4e0>
 8006172:	f8df b040 	ldr.w	fp, [pc, #64]	; 80061b4 <main+0x4e4>
 8006176:	2240      	movs	r2, #64	; 0x40
 8006178:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800617c:	f7fc f8b8 	bl	80022f0 <chThdCreateStatic>
 8006180:	e01e      	b.n	80061c0 <main+0x4f0>
 8006182:	bf00      	nop
 8006184:	080067d0 	.word	0x080067d0
 8006188:	080003b1 	.word	0x080003b1
 800618c:	08006970 	.word	0x08006970
 8006190:	200008b8 	.word	0x200008b8
 8006194:	40011000 	.word	0x40011000
 8006198:	080030a1 	.word	0x080030a1
 800619c:	20001400 	.word	0x20001400
 80061a0:	20000c58 	.word	0x20000c58
 80061a4:	080003c1 	.word	0x080003c1
 80061a8:	20000c30 	.word	0x20000c30
 80061ac:	200013c0 	.word	0x200013c0
 80061b0:	20000cd4 	.word	0x20000cd4
 80061b4:	2000139c 	.word	0x2000139c
 80061b8:	f241 3088 	movw	r0, #5000	; 0x1388
 80061bc:	f7fc ff60 	bl	8003080 <chThdSleep>
 80061c0:	4ba5      	ldr	r3, [pc, #660]	; (8006458 <main+0x788>)
 80061c2:	691b      	ldr	r3, [r3, #16]
 80061c4:	07db      	lsls	r3, r3, #31
 80061c6:	d5f7      	bpl.n	80061b8 <main+0x4e8>
 80061c8:	4ba4      	ldr	r3, [pc, #656]	; (800645c <main+0x78c>)
 80061ca:	48a5      	ldr	r0, [pc, #660]	; (8006460 <main+0x790>)
 80061cc:	f8c8 3000 	str.w	r3, [r8]
 80061d0:	f7fa fb8e 	bl	80008f0 <test_println>
 80061d4:	48a3      	ldr	r0, [pc, #652]	; (8006464 <main+0x794>)
 80061d6:	4ca4      	ldr	r4, [pc, #656]	; (8006468 <main+0x798>)
 80061d8:	f7fa fb8a 	bl	80008f0 <test_println>
 80061dc:	48a3      	ldr	r0, [pc, #652]	; (800646c <main+0x79c>)
 80061de:	f7fa fb87 	bl	80008f0 <test_println>
 80061e2:	212a      	movs	r1, #42	; 0x2a
 80061e4:	f8d8 0000 	ldr.w	r0, [r8]
 80061e8:	6803      	ldr	r3, [r0, #0]
 80061ea:	689b      	ldr	r3, [r3, #8]
 80061ec:	4798      	blx	r3
 80061ee:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80061f2:	2900      	cmp	r1, #0
 80061f4:	d1f6      	bne.n	80061e4 <main+0x514>
 80061f6:	489e      	ldr	r0, [pc, #632]	; (8006470 <main+0x7a0>)
 80061f8:	4c9e      	ldr	r4, [pc, #632]	; (8006474 <main+0x7a4>)
 80061fa:	f7fa fb79 	bl	80008f0 <test_println>
 80061fe:	212a      	movs	r1, #42	; 0x2a
 8006200:	f8d8 0000 	ldr.w	r0, [r8]
 8006204:	6803      	ldr	r3, [r0, #0]
 8006206:	689b      	ldr	r3, [r3, #8]
 8006208:	4798      	blx	r3
 800620a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800620e:	2900      	cmp	r1, #0
 8006210:	d1f6      	bne.n	8006200 <main+0x530>
 8006212:	4899      	ldr	r0, [pc, #612]	; (8006478 <main+0x7a8>)
 8006214:	4c99      	ldr	r4, [pc, #612]	; (800647c <main+0x7ac>)
 8006216:	f7fa fb6b 	bl	80008f0 <test_println>
 800621a:	212a      	movs	r1, #42	; 0x2a
 800621c:	f8d8 0000 	ldr.w	r0, [r8]
 8006220:	6803      	ldr	r3, [r0, #0]
 8006222:	689b      	ldr	r3, [r3, #8]
 8006224:	4798      	blx	r3
 8006226:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800622a:	2900      	cmp	r1, #0
 800622c:	d1f6      	bne.n	800621c <main+0x54c>
 800622e:	4894      	ldr	r0, [pc, #592]	; (8006480 <main+0x7b0>)
 8006230:	4c94      	ldr	r4, [pc, #592]	; (8006484 <main+0x7b4>)
 8006232:	f7fa fb5d 	bl	80008f0 <test_println>
 8006236:	212a      	movs	r1, #42	; 0x2a
 8006238:	f8d8 0000 	ldr.w	r0, [r8]
 800623c:	6803      	ldr	r3, [r0, #0]
 800623e:	689b      	ldr	r3, [r3, #8]
 8006240:	4798      	blx	r3
 8006242:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8006246:	2900      	cmp	r1, #0
 8006248:	d1f6      	bne.n	8006238 <main+0x568>
 800624a:	488f      	ldr	r0, [pc, #572]	; (8006488 <main+0x7b8>)
 800624c:	4c8f      	ldr	r4, [pc, #572]	; (800648c <main+0x7bc>)
 800624e:	f7fa fb4f 	bl	80008f0 <test_println>
 8006252:	212a      	movs	r1, #42	; 0x2a
 8006254:	f8d8 0000 	ldr.w	r0, [r8]
 8006258:	6803      	ldr	r3, [r0, #0]
 800625a:	689b      	ldr	r3, [r3, #8]
 800625c:	4798      	blx	r3
 800625e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8006262:	2900      	cmp	r1, #0
 8006264:	d1f6      	bne.n	8006254 <main+0x584>
 8006266:	488a      	ldr	r0, [pc, #552]	; (8006490 <main+0x7c0>)
 8006268:	4c8a      	ldr	r4, [pc, #552]	; (8006494 <main+0x7c4>)
 800626a:	f7fa fb41 	bl	80008f0 <test_println>
 800626e:	212a      	movs	r1, #42	; 0x2a
 8006270:	f8d8 0000 	ldr.w	r0, [r8]
 8006274:	6803      	ldr	r3, [r0, #0]
 8006276:	689b      	ldr	r3, [r3, #8]
 8006278:	4798      	blx	r3
 800627a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800627e:	2900      	cmp	r1, #0
 8006280:	d1f6      	bne.n	8006270 <main+0x5a0>
 8006282:	4885      	ldr	r0, [pc, #532]	; (8006498 <main+0x7c8>)
 8006284:	4c85      	ldr	r4, [pc, #532]	; (800649c <main+0x7cc>)
 8006286:	f7fa fb33 	bl	80008f0 <test_println>
 800628a:	212a      	movs	r1, #42	; 0x2a
 800628c:	f8d8 0000 	ldr.w	r0, [r8]
 8006290:	6803      	ldr	r3, [r0, #0]
 8006292:	689b      	ldr	r3, [r3, #8]
 8006294:	4798      	blx	r3
 8006296:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800629a:	2900      	cmp	r1, #0
 800629c:	d1f6      	bne.n	800628c <main+0x5bc>
 800629e:	4880      	ldr	r0, [pc, #512]	; (80064a0 <main+0x7d0>)
 80062a0:	4c80      	ldr	r4, [pc, #512]	; (80064a4 <main+0x7d4>)
 80062a2:	f7fa fb25 	bl	80008f0 <test_println>
 80062a6:	212a      	movs	r1, #42	; 0x2a
 80062a8:	f8d8 0000 	ldr.w	r0, [r8]
 80062ac:	6803      	ldr	r3, [r0, #0]
 80062ae:	689b      	ldr	r3, [r3, #8]
 80062b0:	4798      	blx	r3
 80062b2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80062b6:	2900      	cmp	r1, #0
 80062b8:	d1f6      	bne.n	80062a8 <main+0x5d8>
 80062ba:	4b7b      	ldr	r3, [pc, #492]	; (80064a8 <main+0x7d8>)
 80062bc:	487b      	ldr	r0, [pc, #492]	; (80064ac <main+0x7dc>)
 80062be:	9305      	str	r3, [sp, #20]
 80062c0:	4b7b      	ldr	r3, [pc, #492]	; (80064b0 <main+0x7e0>)
 80062c2:	9103      	str	r1, [sp, #12]
 80062c4:	9304      	str	r3, [sp, #16]
 80062c6:	f7fa fb13 	bl	80008f0 <test_println>
 80062ca:	4865      	ldr	r0, [pc, #404]	; (8006460 <main+0x790>)
 80062cc:	4e79      	ldr	r6, [pc, #484]	; (80064b4 <main+0x7e4>)
 80062ce:	f7fa fb0f 	bl	80008f0 <test_println>
 80062d2:	4b79      	ldr	r3, [pc, #484]	; (80064b8 <main+0x7e8>)
 80062d4:	9903      	ldr	r1, [sp, #12]
 80062d6:	7019      	strb	r1, [r3, #0]
 80062d8:	4b78      	ldr	r3, [pc, #480]	; (80064bc <main+0x7ec>)
 80062da:	9a03      	ldr	r2, [sp, #12]
 80062dc:	3201      	adds	r2, #1
 80062de:	9203      	str	r2, [sp, #12]
 80062e0:	2500      	movs	r5, #0
 80062e2:	2b00      	cmp	r3, #0
 80062e4:	f000 808b 	beq.w	80063fe <main+0x72e>
 80062e8:	4c75      	ldr	r4, [pc, #468]	; (80064c0 <main+0x7f0>)
 80062ea:	f7fa fa39 	bl	8000760 <print_line>
 80062ee:	212d      	movs	r1, #45	; 0x2d
 80062f0:	f8d8 0000 	ldr.w	r0, [r8]
 80062f4:	6803      	ldr	r3, [r0, #0]
 80062f6:	689b      	ldr	r3, [r3, #8]
 80062f8:	4798      	blx	r3
 80062fa:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80062fe:	2900      	cmp	r1, #0
 8006300:	d1f6      	bne.n	80062f0 <main+0x620>
 8006302:	9803      	ldr	r0, [sp, #12]
 8006304:	4c6f      	ldr	r4, [pc, #444]	; (80064c4 <main+0x7f4>)
 8006306:	f7fa fa1b 	bl	8000740 <test_printn>
 800630a:	f8d8 0000 	ldr.w	r0, [r8]
 800630e:	6803      	ldr	r3, [r0, #0]
 8006310:	212e      	movs	r1, #46	; 0x2e
 8006312:	689b      	ldr	r3, [r3, #8]
 8006314:	1c6f      	adds	r7, r5, #1
 8006316:	4798      	blx	r3
 8006318:	4638      	mov	r0, r7
 800631a:	f7fa fa11 	bl	8000740 <test_printn>
 800631e:	2120      	movs	r1, #32
 8006320:	f8d8 0000 	ldr.w	r0, [r8]
 8006324:	6803      	ldr	r3, [r0, #0]
 8006326:	689b      	ldr	r3, [r3, #8]
 8006328:	4798      	blx	r3
 800632a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800632e:	2900      	cmp	r1, #0
 8006330:	d1f6      	bne.n	8006320 <main+0x650>
 8006332:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006336:	681c      	ldr	r4, [r3, #0]
 8006338:	7821      	ldrb	r1, [r4, #0]
 800633a:	b141      	cbz	r1, 800634e <main+0x67e>
 800633c:	f8d8 0000 	ldr.w	r0, [r8]
 8006340:	6803      	ldr	r3, [r0, #0]
 8006342:	689b      	ldr	r3, [r3, #8]
 8006344:	4798      	blx	r3
 8006346:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800634a:	2900      	cmp	r1, #0
 800634c:	d1f6      	bne.n	800633c <main+0x66c>
 800634e:	485e      	ldr	r0, [pc, #376]	; (80064c8 <main+0x7f8>)
 8006350:	f7fa face 	bl	80008f0 <test_println>
 8006354:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8006358:	f7fc fe92 	bl	8003080 <chThdSleep>
 800635c:	4b5b      	ldr	r3, [pc, #364]	; (80064cc <main+0x7fc>)
 800635e:	f8c9 3000 	str.w	r3, [r9]
 8006362:	2300      	movs	r3, #0
 8006364:	f856 4025 	ldr.w	r4, [r6, r5, lsl #2]
 8006368:	f8cb 3010 	str.w	r3, [fp, #16]
 800636c:	e9cb 3300 	strd	r3, r3, [fp]
 8006370:	e9cb 3302 	strd	r3, r3, [fp, #8]
 8006374:	6862      	ldr	r2, [r4, #4]
 8006376:	f88a 3000 	strb.w	r3, [sl]
 800637a:	b102      	cbz	r2, 800637e <main+0x6ae>
 800637c:	4790      	blx	r2
 800637e:	68e3      	ldr	r3, [r4, #12]
 8006380:	4798      	blx	r3
 8006382:	68a3      	ldr	r3, [r4, #8]
 8006384:	b103      	cbz	r3, 8006388 <main+0x6b8>
 8006386:	4798      	blx	r3
 8006388:	f7fe f82a 	bl	80043e0 <test_wait_threads>
 800638c:	f89a 3000 	ldrb.w	r3, [sl]
 8006390:	2b00      	cmp	r3, #0
 8006392:	d03e      	beq.n	8006412 <main+0x742>
 8006394:	4c4e      	ldr	r4, [pc, #312]	; (80064d0 <main+0x800>)
 8006396:	212d      	movs	r1, #45	; 0x2d
 8006398:	f8d8 0000 	ldr.w	r0, [r8]
 800639c:	6803      	ldr	r3, [r0, #0]
 800639e:	689b      	ldr	r3, [r3, #8]
 80063a0:	4798      	blx	r3
 80063a2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80063a6:	2900      	cmp	r1, #0
 80063a8:	d1f6      	bne.n	8006398 <main+0x6c8>
 80063aa:	4b4a      	ldr	r3, [pc, #296]	; (80064d4 <main+0x804>)
 80063ac:	4c4a      	ldr	r4, [pc, #296]	; (80064d8 <main+0x808>)
 80063ae:	6818      	ldr	r0, [r3, #0]
 80063b0:	f7fa f9c6 	bl	8000740 <test_printn>
 80063b4:	2120      	movs	r1, #32
 80063b6:	f8d8 0000 	ldr.w	r0, [r8]
 80063ba:	6803      	ldr	r3, [r0, #0]
 80063bc:	689b      	ldr	r3, [r3, #8]
 80063be:	4798      	blx	r3
 80063c0:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80063c4:	2900      	cmp	r1, #0
 80063c6:	d1f6      	bne.n	80063b6 <main+0x6e6>
 80063c8:	f8d9 3000 	ldr.w	r3, [r9]
 80063cc:	4a3f      	ldr	r2, [pc, #252]	; (80064cc <main+0x7fc>)
 80063ce:	4293      	cmp	r3, r2
 80063d0:	d90b      	bls.n	80063ea <main+0x71a>
 80063d2:	4614      	mov	r4, r2
 80063d4:	f8d8 0000 	ldr.w	r0, [r8]
 80063d8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80063dc:	6803      	ldr	r3, [r0, #0]
 80063de:	689b      	ldr	r3, [r3, #8]
 80063e0:	4798      	blx	r3
 80063e2:	f8d9 3000 	ldr.w	r3, [r9]
 80063e6:	429c      	cmp	r4, r3
 80063e8:	d3f4      	bcc.n	80063d4 <main+0x704>
 80063ea:	483c      	ldr	r0, [pc, #240]	; (80064dc <main+0x80c>)
 80063ec:	f7fa fa80 	bl	80008f0 <test_println>
 80063f0:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 80063f4:	463d      	mov	r5, r7
 80063f6:	685b      	ldr	r3, [r3, #4]
 80063f8:	2b00      	cmp	r3, #0
 80063fa:	f47f af75 	bne.w	80062e8 <main+0x618>
 80063fe:	9e04      	ldr	r6, [sp, #16]
 8006400:	b15e      	cbz	r6, 800641a <main+0x74a>
 8006402:	9a05      	ldr	r2, [sp, #20]
 8006404:	6833      	ldr	r3, [r6, #0]
 8006406:	4611      	mov	r1, r2
 8006408:	f851 2f04 	ldr.w	r2, [r1, #4]!
 800640c:	9204      	str	r2, [sp, #16]
 800640e:	9105      	str	r1, [sp, #20]
 8006410:	e763      	b.n	80062da <main+0x60a>
 8006412:	4833      	ldr	r0, [pc, #204]	; (80064e0 <main+0x810>)
 8006414:	f7fa fa6c 	bl	80008f0 <test_println>
 8006418:	e7ea      	b.n	80063f0 <main+0x720>
 800641a:	f7fa f9a1 	bl	8000760 <print_line>
 800641e:	4c31      	ldr	r4, [pc, #196]	; (80064e4 <main+0x814>)
 8006420:	480f      	ldr	r0, [pc, #60]	; (8006460 <main+0x790>)
 8006422:	f7fa fa65 	bl	80008f0 <test_println>
 8006426:	2146      	movs	r1, #70	; 0x46
 8006428:	f8d8 0000 	ldr.w	r0, [r8]
 800642c:	6803      	ldr	r3, [r0, #0]
 800642e:	689b      	ldr	r3, [r3, #8]
 8006430:	4798      	blx	r3
 8006432:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8006436:	2900      	cmp	r1, #0
 8006438:	d1f6      	bne.n	8006428 <main+0x758>
 800643a:	4b1f      	ldr	r3, [pc, #124]	; (80064b8 <main+0x7e8>)
 800643c:	781b      	ldrb	r3, [r3, #0]
 800643e:	b91b      	cbnz	r3, 8006448 <main+0x778>
 8006440:	4829      	ldr	r0, [pc, #164]	; (80064e8 <main+0x818>)
 8006442:	f7fa fa55 	bl	80008f0 <test_println>
 8006446:	e6b7      	b.n	80061b8 <main+0x4e8>
 8006448:	4828      	ldr	r0, [pc, #160]	; (80064ec <main+0x81c>)
 800644a:	f7fa fa51 	bl	80008f0 <test_println>
 800644e:	e6b3      	b.n	80061b8 <main+0x4e8>
 8006450:	f640 028b 	movw	r2, #2187	; 0x88b
 8006454:	609a      	str	r2, [r3, #8]
 8006456:	e66c      	b.n	8006132 <main+0x462>
 8006458:	40020000 	.word	0x40020000
 800645c:	200008b8 	.word	0x200008b8
 8006460:	080067a0 	.word	0x080067a0
 8006464:	08006978 	.word	0x08006978
 8006468:	08006890 	.word	0x08006890
 800646c:	08006994 	.word	0x08006994
 8006470:	08006998 	.word	0x08006998
 8006474:	080068a4 	.word	0x080068a4
 8006478:	080069a0 	.word	0x080069a0
 800647c:	080068b8 	.word	0x080068b8
 8006480:	080069b8 	.word	0x080069b8
 8006484:	080068cc 	.word	0x080068cc
 8006488:	08006a00 	.word	0x08006a00
 800648c:	080068e0 	.word	0x080068e0
 8006490:	08006a0c 	.word	0x08006a0c
 8006494:	080068f4 	.word	0x080068f4
 8006498:	08006a18 	.word	0x08006a18
 800649c:	08006908 	.word	0x08006908
 80064a0:	08006a30 	.word	0x08006a30
 80064a4:	0800691c 	.word	0x0800691c
 80064a8:	08006b94 	.word	0x08006b94
 80064ac:	08006a5c 	.word	0x08006a5c
 80064b0:	08006c00 	.word	0x08006c00
 80064b4:	08006bf0 	.word	0x08006bf0
 80064b8:	20001370 	.word	0x20001370
 80064bc:	08007340 	.word	0x08007340
 80064c0:	08006930 	.word	0x08006930
 80064c4:	08006940 	.word	0x08006940
 80064c8:	08006a84 	.word	0x08006a84
 80064cc:	200013b0 	.word	0x200013b0
 80064d0:	08006944 	.word	0x08006944
 80064d4:	20000c78 	.word	0x20000c78
 80064d8:	0800695c 	.word	0x0800695c
 80064dc:	08006a88 	.word	0x08006a88
 80064e0:	08006a8c 	.word	0x08006a8c
 80064e4:	08006960 	.word	0x08006960
 80064e8:	08006a98 	.word	0x08006a98
 80064ec:	08006aa0 	.word	0x08006aa0

080064f0 <__early_init>:
 80064f0:	4b2a      	ldr	r3, [pc, #168]	; (800659c <__early_init+0xac>)
 80064f2:	4a2b      	ldr	r2, [pc, #172]	; (80065a0 <__early_init+0xb0>)
 80064f4:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 80064f8:	f44f 4140 	mov.w	r1, #49152	; 0xc000
 80064fc:	6418      	str	r0, [r3, #64]	; 0x40
 80064fe:	6011      	str	r1, [r2, #0]
 8006500:	681a      	ldr	r2, [r3, #0]
 8006502:	f042 0201 	orr.w	r2, r2, #1
 8006506:	601a      	str	r2, [r3, #0]
 8006508:	681a      	ldr	r2, [r3, #0]
 800650a:	0792      	lsls	r2, r2, #30
 800650c:	d5fc      	bpl.n	8006508 <__early_init+0x18>
 800650e:	6899      	ldr	r1, [r3, #8]
 8006510:	4a22      	ldr	r2, [pc, #136]	; (800659c <__early_init+0xac>)
 8006512:	f021 0103 	bic.w	r1, r1, #3
 8006516:	6099      	str	r1, [r3, #8]
 8006518:	6899      	ldr	r1, [r3, #8]
 800651a:	6099      	str	r1, [r3, #8]
 800651c:	6893      	ldr	r3, [r2, #8]
 800651e:	f013 030c 	ands.w	r3, r3, #12
 8006522:	d1fb      	bne.n	800651c <__early_init+0x2c>
 8006524:	6810      	ldr	r0, [r2, #0]
 8006526:	491d      	ldr	r1, [pc, #116]	; (800659c <__early_init+0xac>)
 8006528:	f000 00f9 	and.w	r0, r0, #249	; 0xf9
 800652c:	6010      	str	r0, [r2, #0]
 800652e:	6093      	str	r3, [r2, #8]
 8006530:	6813      	ldr	r3, [r2, #0]
 8006532:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006536:	6013      	str	r3, [r2, #0]
 8006538:	680b      	ldr	r3, [r1, #0]
 800653a:	0398      	lsls	r0, r3, #14
 800653c:	d5fc      	bpl.n	8006538 <__early_init+0x48>
 800653e:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 8006540:	4a16      	ldr	r2, [pc, #88]	; (800659c <__early_init+0xac>)
 8006542:	f043 0301 	orr.w	r3, r3, #1
 8006546:	674b      	str	r3, [r1, #116]	; 0x74
 8006548:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800654a:	0799      	lsls	r1, r3, #30
 800654c:	d5fc      	bpl.n	8006548 <__early_init+0x58>
 800654e:	4b15      	ldr	r3, [pc, #84]	; (80065a4 <__early_init+0xb4>)
 8006550:	6053      	str	r3, [r2, #4]
 8006552:	6813      	ldr	r3, [r2, #0]
 8006554:	4912      	ldr	r1, [pc, #72]	; (80065a0 <__early_init+0xb0>)
 8006556:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800655a:	6013      	str	r3, [r2, #0]
 800655c:	684b      	ldr	r3, [r1, #4]
 800655e:	045a      	lsls	r2, r3, #17
 8006560:	d5fc      	bpl.n	800655c <__early_init+0x6c>
 8006562:	490e      	ldr	r1, [pc, #56]	; (800659c <__early_init+0xac>)
 8006564:	680b      	ldr	r3, [r1, #0]
 8006566:	019b      	lsls	r3, r3, #6
 8006568:	d5fc      	bpl.n	8006564 <__early_init+0x74>
 800656a:	4b0f      	ldr	r3, [pc, #60]	; (80065a8 <__early_init+0xb8>)
 800656c:	4a0f      	ldr	r2, [pc, #60]	; (80065ac <__early_init+0xbc>)
 800656e:	608a      	str	r2, [r1, #8]
 8006570:	f240 7205 	movw	r2, #1797	; 0x705
 8006574:	601a      	str	r2, [r3, #0]
 8006576:	688b      	ldr	r3, [r1, #8]
 8006578:	4a08      	ldr	r2, [pc, #32]	; (800659c <__early_init+0xac>)
 800657a:	f043 0302 	orr.w	r3, r3, #2
 800657e:	608b      	str	r3, [r1, #8]
 8006580:	6893      	ldr	r3, [r2, #8]
 8006582:	f003 030c 	and.w	r3, r3, #12
 8006586:	2b08      	cmp	r3, #8
 8006588:	d1fa      	bne.n	8006580 <__early_init+0x90>
 800658a:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800658c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006590:	6453      	str	r3, [r2, #68]	; 0x44
 8006592:	6e53      	ldr	r3, [r2, #100]	; 0x64
 8006594:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006598:	6653      	str	r3, [r2, #100]	; 0x64
 800659a:	4770      	bx	lr
 800659c:	40023800 	.word	0x40023800
 80065a0:	40007000 	.word	0x40007000
 80065a4:	07405408 	.word	0x07405408
 80065a8:	40023c00 	.word	0x40023c00
 80065ac:	38089400 	.word	0x38089400

080065b0 <chThdExit>:
 80065b0:	b538      	push	{r3, r4, r5, lr}
 80065b2:	2220      	movs	r2, #32
 80065b4:	4603      	mov	r3, r0
 80065b6:	f382 8811 	msr	BASEPRI, r2
 80065ba:	4a0e      	ldr	r2, [pc, #56]	; (80065f4 <chThdExit+0x44>)
 80065bc:	6994      	ldr	r4, [r2, #24]
 80065be:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80065c0:	6223      	str	r3, [r4, #32]
 80065c2:	f104 0524 	add.w	r5, r4, #36	; 0x24
 80065c6:	42a8      	cmp	r0, r5
 80065c8:	d006      	beq.n	80065d8 <chThdExit+0x28>
 80065ca:	6803      	ldr	r3, [r0, #0]
 80065cc:	6263      	str	r3, [r4, #36]	; 0x24
 80065ce:	f7fa fd2f 	bl	8001030 <chSchReadyI>
 80065d2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80065d4:	42a8      	cmp	r0, r5
 80065d6:	d1f8      	bne.n	80065ca <chThdExit+0x1a>
 80065d8:	7f63      	ldrb	r3, [r4, #29]
 80065da:	079b      	lsls	r3, r3, #30
 80065dc:	d104      	bne.n	80065e8 <chThdExit+0x38>
 80065de:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 80065e2:	611a      	str	r2, [r3, #16]
 80065e4:	6922      	ldr	r2, [r4, #16]
 80065e6:	6153      	str	r3, [r2, #20]
 80065e8:	200f      	movs	r0, #15
 80065ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80065ee:	f7fb beb7 	b.w	8002360 <chSchGoSleepS>
 80065f2:	bf00      	nop
 80065f4:	20000ae0 	.word	0x20000ae0
	...

08006600 <thread1.lto_priv.82>:
 8006600:	f7ff bfd6 	b.w	80065b0 <chThdExit>
	...

08006610 <chSchDoReschedule>:
 8006610:	f7fb bc3e 	b.w	8001e90 <chSchDoRescheduleAhead>
	...

08006620 <__default_exit>:
 8006620:	e7fe      	b.n	8006620 <__default_exit>
 8006622:	bf00      	nop
	...

08006630 <__late_init>:
 8006630:	4770      	bx	lr
 8006632:	bf00      	nop
	...
 8006640:	6e696c62 	.word	0x6e696c62
 8006644:	0072656b 	.word	0x0072656b
	...
 8006650:	61686e75 	.word	0x61686e75
 8006654:	656c646e 	.word	0x656c646e
 8006658:	78652064 	.word	0x78652064
 800665c:	74706563 	.word	0x74706563
 8006660:	006e6f69 	.word	0x006e6f69
	...

08006670 <active_status>:
	...
 8006680:	202d2d2d 726f6353 203a2065 00000000     --- Score : ....
 8006690:	6d697420 2f737265 00000053 00000000      timers/S.......
 80066a0:	69617720 69732b74 6c616e67 0000532f      wait+signal/S..
 80066b0:	636f6c20 6e752b6b 6b636f6c 0000532f      lock+unlock/S..
 80066c0:	202d2d2d 74737953 203a6d65 00000000     --- System: ....
 80066d0:	74796220 00007365 202d2d2d 65726854      bytes..--- Thre
 80066e0:	203a6461 00000000 202d2d2d 656d6954     ad: ....--- Time
 80066f0:	203a2072 00000000 202d2d2d 616d6553     r : ....--- Sema
 8006700:	203a6870 00000000 202d2d2d 6e657645     ph: ....--- Even
 8006710:	203a5374 00000000 202d2d2d 6e657645     tS: ....--- Even
 8006720:	203a4c74 00000000 202d2d2d 6574754d     tL: ....--- Mute
 8006730:	203a2078 00000000 202d2d2d 646e6f43     x : ....--- Cond
 8006740:	203a2e56 00000000 202d2d2d 75657551     V.: ....--- Queu
 8006750:	203a2065 00000000 202d2d2d 6c69614d     e : ....--- Mail
 8006760:	203a2e42 00000000 00000000 00000000     B.: ............
 8006770:	67736d20 2c532f73 00000020 00000000      msgs/S, .......
 8006780:	72687420 73646165 0000532f 00000000      threads/S......
 8006790:	73657220 64656863 73656c75 202c532f      reschedules/S, 
	...
 80067b0:	78746320 2f637773 00000053 00000000      ctxswc/S.......
 80067c0:	74796220 532f7365 00000000 00000000      bytes/S........

080067d0 <ch_debug>:
 80067d0:	6e69616d 18011600 08440404 1814100c     main......D.....
 80067e0:	1e1d1c00 00000000 00000000 00000000     ................
 80067f0:	00004241 00000000 00000000 00000000     AB..............
 8006800:	00000042 00000043 00000044 00000000     B...C...D.......
 8006810:	00000041 00000000 00000000 00000000     A...............

08006820 <ep0config>:
 8006820:	00000000 08001aa1 08000b31 08000a91     ........1.......
 8006830:	00400040 20000c5c 20000c5c 00000001     @.@.\.. \.. ....
 8006840:	20000c70 00000000 00000000 00000000     p.. ............

08006850 <evhndl>:
 8006850:	080008c1 080008b1 080008a1 00000000     ................
 8006860:	00434241 00000000 00000000 00000000     ABC.............

08006870 <fsparams>:
 8006870:	00000080 00000140 00000003 00000000     ....@...........

08006880 <halted_status>:
 8006880:	00000001 00000000 00000000 00000000     ................
 8006890:	202a2a2a 6e72654b 203a6c65 20202020     *** Kernel:     
 80068a0:	00002020 202a2a2a 706d6f43 64656c69       ..*** Compiled
 80068b0:	2020203a 00002020 202a2a2a 706d6f43     :     ..*** Comp
 80068c0:	72656c69 2020203a 00002020 202a2a2a     iler:     ..*** 
 80068d0:	68637241 63657469 65727574 0000203a     Architecture: ..
 80068e0:	202a2a2a 65726f43 72615620 746e6169     *** Core Variant
 80068f0:	0000203a 202a2a2a 74726f50 666e4920     : ..*** Port Inf
 8006900:	20203a6f 00002020 202a2a2a 74616c50     o:    ..*** Plat
 8006910:	6d726f66 2020203a 00002020 202a2a2a     form:     ..*** 
 8006920:	74736554 616f4220 203a6472 00002020     Test Board:   ..
 8006930:	202d2d2d 74736554 73614320 00002065     --- Test Case ..
 8006940:	00002820 202d2d2d 75736552 203a746c      (..--- Result: 
 8006950:	4c494146 20455255 00002328 00005b20     FAILURE (#.. [..
 8006960:	616e6946 6572206c 746c7573 0000203a     Final result: ..
 8006970:	656c6469 00000000 202a2a2a 62696843     idle....*** Chib
 8006980:	2f534f69 74205452 20747365 74697573     iOS/RT test suit
 8006990:	00000065 002a2a2a 2e302e33 00000030     e...***.3.0.0...
 80069a0:	20727041 32203620 20383130 3631202d     Apr  6 2018 - 16
 80069b0:	3a31303a 00003731 20434347 2e322e37     :01:17..GCC 7.2.
 80069c0:	30322031 39303731 28203430 656c6572     1 20170904 (rele
 80069d0:	29657361 52415b20 6d652f4d 64646562     ase) [ARM/embedd
 80069e0:	372d6465 6172622d 2068636e 69766572     ed-7-branch revi
 80069f0:	6e6f6973 35353220 5d343032 00000000     sion 255204]....
 8006a00:	764d5241 454d2d37 00000000 74726f43     ARMv7-ME....Cort
 8006a10:	4d2d7865 00000034 61766441 6465636e     ex-M4...Advanced
 8006a20:	72656b20 206c656e 65646f6d 00000000      kernel mode....
 8006a30:	334d5453 30344632 69482037 50206867     STM32F407 High P
 8006a40:	6f667265 6e616d72 77206563 20687469     erformance with 
 8006a50:	20505344 20646e61 00555046 694d5453     DSP and FPU.STMi
 8006a60:	656f7263 7463656c 696e6f72 53207363     croelectronics S
 8006a70:	32334d54 442d3446 6f637369 79726576     TM32F4-Discovery
 8006a80:	00000000 00000029 0000295d 202d2d2d     ....)...])..--- 
 8006a90:	75736552 203a746c 43435553 00535345     Result: SUCCESS.
 8006aa0:	4c494146 00455255 00000000 00000000     FAILURE.........
 8006ab0:	44434241 00000045 00000000 00000000     ABCDE...........

08006ac0 <patternbmk>:
 8006ac0:	08007110 08007160 08007170 08007180     .q..`q..pq...q..
 8006ad0:	08007190 080071a0 080071b0 080071c0     .q...q...q...q..
 8006ae0:	080071d0 08007120 08007130 08007140     .q.. q..0q..@q..
 8006af0:	08007150 00000000 00000000 00000000     Pq..............

08006b00 <patterndyn>:
 8006b00:	080071e0 080071f0 08007200 00000000     .q...q...r......

08006b10 <patternevt>:
 8006b10:	08007210 08007220 08007230 00000000     .r.. r..0r......

08006b20 <patternheap>:
 8006b20:	08007240 00000000 00000000 00000000     @r..............

08006b30 <patternmbox>:
 8006b30:	08007250 00000000 00000000 00000000     Pr..............

08006b40 <patternmsg>:
 8006b40:	08007260 00000000 00000000 00000000     `r..............

08006b50 <patternmtx>:
 8006b50:	08007270 08007280 08007290 080072a0     pr...r...r...r..
 8006b60:	080072b0 080072c0 00000000 00000000     .r...r..........

08006b70 <patternpools>:
 8006b70:	080072d0 00000000 00000000 00000000     .r..............

08006b80 <patternqueues>:
 8006b80:	080072e0 080072f0 00000000 00000000     .r...r..........

08006b90 <patterns>:
 8006b90:	08006bf0 08006c00 08006bd0 08006b50     .k...l...k..Pk..
 8006ba0:	08006b40 08006b30 08006b10 08006b20     @k..0k...k.. k..
 8006bb0:	08006b70 08006b00 08006b80 08006ac0     pk...k...k...j..
	...

08006bd0 <patternsem>:
 8006bd0:	08007300 08007310 08007320 08007330     .s...s.. s..0s..
	...

08006bf0 <patternsys>:
 8006bf0:	08007340 08007350 08007360 00000000     @s..Ps..`s......

08006c00 <patternthd>:
 8006c00:	08007370 08007380 08007390 080073a0     ps...s...s...s..
	...
 8006c20:	00000a0d 00000000 00000000 00000000     ................
 8006c30:	44434241 00000000 00000000 00000000     ABCD............
 8006c40:	636e6542 72616d68 52202c6b 66204d41     Benchmark, RAM f
 8006c50:	70746f6f 746e6972 00000000 636e6542     ootprint....Benc
 8006c60:	72616d68 6d202c6b 78657475 6c207365     hmark, mutexes l
 8006c70:	2f6b636f 6f6c6e75 00006b63 636e6542     ock/unlock..Benc
 8006c80:	72616d68 73202c6b 70616d65 65726f68     hmark, semaphore
 8006c90:	61772073 732f7469 616e6769 0000006c     s wait/signal...
 8006ca0:	636e6542 72616d68 76202c6b 75747269     Benchmark, virtu
 8006cb0:	74206c61 72656d69 65732073 65722f74     al timers set/re
 8006cc0:	00746573 636e6542 72616d68 49202c6b     set.Benchmark, I
 8006cd0:	51204f2f 65756575 68742073 67756f72     /O Queues throug
 8006ce0:	74757068 00000000 636e6542 72616d68     hput....Benchmar
 8006cf0:	72202c6b 646e756f 626f7220 63206e69     k, round robin c
 8006d00:	65746e6f 73207478 63746977 676e6968     ontext switching
 8006d10:	00000000 636e6542 72616d68 6d202c6b     ....Benchmark, m
 8006d20:	20737361 63736572 75646568 202c656c     ass reschedule, 
 8006d30:	68742035 64616572 00000073 636e6542     5 threads...Benc
 8006d40:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8006d50:	61657263 6f206574 00796c6e 636e6542     create only.Benc
 8006d60:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8006d70:	6c6c7566 63796320 0000656c 636e6542     full cycle..Benc
 8006d80:	72616d68 63202c6b 65746e6f 73207478     hmark, context s
 8006d90:	63746977 00000068 636e6542 72616d68     witch...Benchmar
 8006da0:	6d202c6b 61737365 20736567 00003323     k, messages #3..
 8006db0:	636e6542 72616d68 6d202c6b 61737365     Benchmark, messa
 8006dc0:	20736567 00003223 636e6542 72616d68     ges #2..Benchmar
 8006dd0:	6d202c6b 61737365 20736567 00003123     k, messages #1..
 8006de0:	75657551 202c7365 7074756f 71207475     Queues, output q
 8006df0:	65756575 00000073 75657551 202c7365     ueues...Queues, 
 8006e00:	75706e69 75712074 73657565 00000000     input queues....
 8006e10:	616e7944 2063696d 73495041 6572202c     Dynamic APIs, re
 8006e20:	74736967 61207972 7220646e 72656665     gistry and refer
 8006e30:	65636e65 00000073 616e7944 2063696d     ences...Dynamic 
 8006e40:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8006e50:	69746165 66206e6f 206d6f72 6f6d656d     eation from memo
 8006e60:	70207972 006c6f6f 616e7944 2063696d     ry pool.Dynamic 
 8006e70:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8006e80:	69746165 66206e6f 206d6f72 70616568     eation from heap
 8006e90:	00000000 6f6d654d 50207972 736c6f6f     ....Memory Pools
 8006ea0:	7571202c 2f657565 75716564 00657565     , queue/dequeue.
 8006eb0:	70616548 6c61202c 61636f6c 6e6f6974     Heap, allocation
 8006ec0:	646e6120 61726620 6e656d67 69746174      and fragmentati
 8006ed0:	74206e6f 00747365 6e657645 202c7374     on test.Events, 
 8006ee0:	656d6974 7374756f 00000000 6e657645     timeouts....Even
 8006ef0:	202c7374 74696177 646e6120 6f726220     ts, wait and bro
 8006f00:	61636461 00007473 6e657645 202c7374     adcast..Events, 
 8006f10:	69676572 61727473 6e6f6974 646e6120     registration and
 8006f20:	73696420 63746170 00000068 6c69614d      dispatch...Mail
 8006f30:	65786f62 71202c73 69756575 6120676e     boxes, queuing a
 8006f40:	7420646e 6f656d69 00737475 7373654d     nd timeouts.Mess
 8006f50:	73656761 6f6c202c 0000706f 646e6f43     ages, loop..Cond
 8006f60:	2c726156 6f6f6220 74207473 00747365     Var, boost test.
 8006f70:	646e6f43 2c726156 6f726220 61636461     CondVar, broadca
 8006f80:	74207473 00747365 646e6f43 2c726156     st test.CondVar,
 8006f90:	67697320 206c616e 74736574 00000000      signal test....
 8006fa0:	6574754d 2c736578 61747320 00737574     Mutexes, status.
 8006fb0:	6574754d 2c736578 69727020 7469726f     Mutexes, priorit
 8006fc0:	65722079 6e727574 00000000 6574754d     y return....Mute
 8006fd0:	2c736578 69727020 7469726f 6e652079     xes, priority en
 8006fe0:	75657571 20676e69 74736574 00000000     queuing test....
 8006ff0:	616e6942 53207972 70616d65 65726f68     Binary Semaphore
 8007000:	66202c73 74636e75 616e6f69 7974696c     s, functionality
 8007010:	00000000 616d6553 726f6870 202c7365     ....Semaphores, 
 8007020:	6d6f7461 73206369 616e6769 61772d6c     atomic signal-wa
 8007030:	00007469 616d6553 726f6870 202c7365     it..Semaphores, 
 8007040:	656d6974 0074756f 616d6553 726f6870     timeout.Semaphor
 8007050:	202c7365 75716e65 6e697565 00000067     es, enqueuing...
 8007060:	65726854 2c736461 6c656420 00737961     Threads, delays.
 8007070:	65726854 2c736461 69727020 7469726f     Threads, priorit
 8007080:	68632079 65676e61 00000000 65726854     y change....Thre
 8007090:	2c736461 716e6520 69756575 7420676e     ads, enqueuing t
 80070a0:	20747365 00003223 65726854 2c736461     est #2..Threads,
 80070b0:	716e6520 69756575 7420676e 20747365      enqueuing test 
 80070c0:	00003123 74737953 202c6d65 65746e69     #1..System, inte
 80070d0:	74697267 00000079 74737953 202c6d65     grity...System, 
 80070e0:	65746e69 70757272 68207374 6c646e61     interrupts handl
 80070f0:	00676e69 74737953 202c6d65 74697263     ing.System, crit
 8007100:	6c616369 6e6f7a20 00007365 00000000     ical zones......

08007110 <testbmk1>:
 8007110:	08006dc8 00000000 00000000 08004821     .m..........!H..

08007120 <testbmk10>:
 8007120:	08006ca0 00000000 00000000 08003261     .l..........a2..

08007130 <testbmk11>:
 8007130:	08006c7c 08000421 00000000 080040e1     |l..!........@..

08007140 <testbmk12>:
 8007140:	08006c5c 08000411 00000000 08003751     \l..........Q7..

08007150 <testbmk13>:
 8007150:	08006c40 00000000 00000000 080019b1     @l..............

08007160 <testbmk2>:
 8007160:	08006db0 00000000 00000000 080047b1     .m...........G..

08007170 <testbmk3>:
 8007170:	08006d98 00000000 00000000 080046d1     .m...........F..

08007180 <testbmk4>:
 8007180:	08006d7c 00000000 00000000 08004621     |m..........!F..

08007190 <testbmk5>:
 8007190:	08006d5c 00000000 00000000 08004361     \m..........aC..

080071a0 <testbmk6>:
 80071a0:	08006d3c 00000000 00000000 080033a1     <m...........3..

080071b0 <testbmk7>:
 80071b0:	08006d14 08000451 00000000 080044f1     .m..Q........D..

080071c0 <testbmk8>:
 80071c0:	08006ce8 00000000 00000000 08004411     .l...........D..

080071d0 <testbmk9>:
 80071d0:	08006cc4 00000000 00000000 080032f1     .l...........2..

080071e0 <testdyn1>:
 80071e0:	08006e68 08000501 00000000 08004ea1     hn...........N..

080071f0 <testdyn2>:
 80071f0:	08006e38 080004e1 00000000 08004da1     8n...........M..

08007200 <testdyn3>:
 8007200:	08006e10 08000531 00000000 08003d11     .n..1........=..

08007210 <testevt1>:
 8007210:	08006f08 080005a1 00000000 08000e81     .o..............

08007220 <testevt2>:
 8007220:	08006eec 080005c1 00000000 08004f71     .n..........qO..

08007230 <testevt3>:
 8007230:	08006ed8 080005b1 00000000 080025d1     .n...........%..

08007240 <testheap1>:
 8007240:	08006eb0 08000571 00000000 08003e41     .n..q.......A>..

08007250 <testmbox1>:
 8007250:	08006f2c 080005d1 00000000 08002861     ,o..........a(..

08007260 <testmsg1>:
 8007260:	08006f4c 00000000 00000000 08003521     Lo..........!5..

08007270 <testmtx1>:
 8007270:	08006fcc 08000691 00000000 08005711     .o...........W..

08007280 <testmtx4>:
 8007280:	08006fb0 08000671 00000000 080054b1     .o..q........T..

08007290 <testmtx5>:
 8007290:	08006fa0 080006a1 00000000 080038e1     .o...........8..

080072a0 <testmtx6>:
 80072a0:	08006f88 08000641 00000000 080053d1     .o..A........S..

080072b0 <testmtx7>:
 80072b0:	08006f70 08000661 00000000 080052e1     po..a........R..

080072c0 <testmtx8>:
 80072c0:	08006f5c 08000611 00000000 08005251     \o..........QR..

080072d0 <testpools1>:
 80072d0:	08006e94 08000551 00000000 08000d71     .n..Q.......q...

080072e0 <testqueues1>:
 80072e0:	08006df8 080004b1 00000000 08004af1     .m...........J..

080072f0 <testqueues2>:
 80072f0:	08006de0 08000481 00000000 08004891     .m...........H..

08007300 <testsem1>:
 8007300:	08007048 080006b1 00000000 08005951     Hp..........QY..

08007310 <testsem2>:
 8007310:	08007034 080006d1 00000000 08005801     4p...........X..

08007320 <testsem3>:
 8007320:	08007014 080006c1 00000000 08002401     .p...........$..

08007330 <testsem4>:
 8007330:	08006ff0 00000000 00000000 08004181     .o...........A..

08007340 <testsys1>:
 8007340:	080070f4 00000000 00000000 080030e1     .p...........0..

08007350 <testsys2>:
 8007350:	080070d8 00000000 00000000 08000461     .p..........a...

08007360 <testsys3>:
 8007360:	080070c4 00000000 00000000 08001901     .p..............

08007370 <testthd1>:
 8007370:	080070a8 00000000 00000000 08005c01     .p...........\..

08007380 <testthd2>:
 8007380:	0800708c 00000000 00000000 08005ac1     .p...........Z..

08007390 <testthd3>:
 8007390:	08007070 00000000 00000000 08001fb1     pp..............

080073a0 <testthd4>:
 80073a0:	08007060 00000000 00000000 08003411     `p...........4..

080073b0 <vmt>:
 80073b0:	08002ed1 08002ff1 08002f51 08003071     ...../..Q/..q0..
 80073c0:	08002f41 08003061 08002ec1 08002fe1     A/..a0......./..

080073d0 <wa>:
 80073d0:	20000d08 20000e50 20000f98 200010e0     ... P.. ... ... 
 80073e0:	20001228 00000000 00000000 00000000     (.. ............

080073f0 <zero_status>:
	...
