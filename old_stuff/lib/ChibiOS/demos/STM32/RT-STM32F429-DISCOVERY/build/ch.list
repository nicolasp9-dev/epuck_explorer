
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

080001c0 <Reset_Handler>:
 80001c0:	b672      	cpsid	i
 80001c2:	4821      	ldr	r0, [pc, #132]	; (8000248 <endfiniloop+0x6>)
 80001c4:	f380 8809 	msr	PSP, r0
 80001c8:	2002      	movs	r0, #2
 80001ca:	f380 8814 	msr	CONTROL, r0
 80001ce:	f3bf 8f6f 	isb	sy
 80001d2:	f007 fabd 	bl	8007750 <__early_init>
 80001d6:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
 80001da:	491c      	ldr	r1, [pc, #112]	; (800024c <endfiniloop+0xa>)
 80001dc:	4a1c      	ldr	r2, [pc, #112]	; (8000250 <endfiniloop+0xe>)

080001de <msloop>:
 80001de:	4291      	cmp	r1, r2
 80001e0:	bf3c      	itt	cc
 80001e2:	f841 0b04 	strcc.w	r0, [r1], #4
 80001e6:	e7fa      	bcc.n	80001de <msloop>
 80001e8:	491a      	ldr	r1, [pc, #104]	; (8000254 <endfiniloop+0x12>)
 80001ea:	4a17      	ldr	r2, [pc, #92]	; (8000248 <endfiniloop+0x6>)

080001ec <psloop>:
 80001ec:	4291      	cmp	r1, r2
 80001ee:	bf3c      	itt	cc
 80001f0:	f841 0b04 	strcc.w	r0, [r1], #4
 80001f4:	e7fa      	bcc.n	80001ec <psloop>
 80001f6:	4918      	ldr	r1, [pc, #96]	; (8000258 <endfiniloop+0x16>)
 80001f8:	4a18      	ldr	r2, [pc, #96]	; (800025c <endfiniloop+0x1a>)
 80001fa:	4b19      	ldr	r3, [pc, #100]	; (8000260 <endfiniloop+0x1e>)

080001fc <dloop>:
 80001fc:	429a      	cmp	r2, r3
 80001fe:	bf3e      	ittt	cc
 8000200:	f851 0b04 	ldrcc.w	r0, [r1], #4
 8000204:	f842 0b04 	strcc.w	r0, [r2], #4
 8000208:	e7f8      	bcc.n	80001fc <dloop>
 800020a:	2000      	movs	r0, #0
 800020c:	4915      	ldr	r1, [pc, #84]	; (8000264 <endfiniloop+0x22>)
 800020e:	4a16      	ldr	r2, [pc, #88]	; (8000268 <endfiniloop+0x26>)

08000210 <bloop>:
 8000210:	4291      	cmp	r1, r2
 8000212:	bf3c      	itt	cc
 8000214:	f841 0b04 	strcc.w	r0, [r1], #4
 8000218:	e7fa      	bcc.n	8000210 <bloop>
 800021a:	f007 fb19 	bl	8007850 <__late_init>
 800021e:	4c13      	ldr	r4, [pc, #76]	; (800026c <endfiniloop+0x2a>)
 8000220:	4d13      	ldr	r5, [pc, #76]	; (8000270 <endfiniloop+0x2e>)

08000222 <initloop>:
 8000222:	42ac      	cmp	r4, r5
 8000224:	da03      	bge.n	800022e <endinitloop>
 8000226:	f854 1b04 	ldr.w	r1, [r4], #4
 800022a:	4788      	blx	r1
 800022c:	e7f9      	b.n	8000222 <initloop>

0800022e <endinitloop>:
 800022e:	f006 fedf 	bl	8006ff0 <main>
 8000232:	4c10      	ldr	r4, [pc, #64]	; (8000274 <endfiniloop+0x32>)
 8000234:	4d10      	ldr	r5, [pc, #64]	; (8000278 <endfiniloop+0x36>)

08000236 <finiloop>:
 8000236:	42ac      	cmp	r4, r5
 8000238:	da03      	bge.n	8000242 <endfiniloop>
 800023a:	f854 1b04 	ldr.w	r1, [r4], #4
 800023e:	4788      	blx	r1
 8000240:	e7f9      	b.n	8000236 <finiloop>

08000242 <endfiniloop>:
 8000242:	f007 bafd 	b.w	8007840 <__default_exit>
 8000246:	0000      	.short	0x0000
 8000248:	20000800 	.word	0x20000800
 800024c:	20000000 	.word	0x20000000
 8000250:	20000400 	.word	0x20000400
 8000254:	20000400 	.word	0x20000400
 8000258:	08008e08 	.word	0x08008e08
 800025c:	20000800 	.word	0x20000800
 8000260:	20000e70 	.word	0x20000e70
 8000264:	20000e70 	.word	0x20000e70
 8000268:	20001e78 	.word	0x20001e78
 800026c:	080001c0 	.word	0x080001c0
 8000270:	080001c0 	.word	0x080001c0
 8000274:	080001c0 	.word	0x080001c0
 8000278:	080001c0 	.word	0x080001c0
 800027c:	00000000 	.word	0x00000000

08000280 <_port_switch>:
 8000280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000284:	f8c1 d00c 	str.w	sp, [r1, #12]
 8000288:	f8d0 d00c 	ldr.w	sp, [r0, #12]
 800028c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000290 <_port_thread_start>:
 8000290:	2300      	movs	r3, #0
 8000292:	f383 8811 	msr	BASEPRI, r3
 8000296:	4628      	mov	r0, r5
 8000298:	47a0      	blx	r4
 800029a:	2000      	movs	r0, #0
 800029c:	f007 fab8 	bl	8007810 <chThdExit>

080002a0 <_port_switch_from_isr>:
 80002a0:	f007 fac6 	bl	8007830 <chSchDoReschedule>

080002a4 <_port_exit_from_isr>:
 80002a4:	df00      	svc	0
 80002a6:	e7fe      	b.n	80002a6 <_port_exit_from_isr+0x2>
	...

080002b0 <chTMStartMeasurementX.constprop.59>:
 80002b0:	4b01      	ldr	r3, [pc, #4]	; (80002b8 <chTMStartMeasurementX.constprop.59+0x8>)
 80002b2:	685b      	ldr	r3, [r3, #4]
 80002b4:	6083      	str	r3, [r0, #8]
 80002b6:	4770      	bx	lr
 80002b8:	e0001000 	.word	0xe0001000
 80002bc:	00000000 	.word	0x00000000

080002c0 <chEvtGetAndClearEvents.constprop.40>:
 80002c0:	2320      	movs	r3, #32
 80002c2:	f383 8811 	msr	BASEPRI, r3
 80002c6:	4b04      	ldr	r3, [pc, #16]	; (80002d8 <chEvtGetAndClearEvents.constprop.40+0x18>)
 80002c8:	699a      	ldr	r2, [r3, #24]
 80002ca:	2300      	movs	r3, #0
 80002cc:	6b50      	ldr	r0, [r2, #52]	; 0x34
 80002ce:	6353      	str	r3, [r2, #52]	; 0x34
 80002d0:	f383 8811 	msr	BASEPRI, r3
 80002d4:	4770      	bx	lr
 80002d6:	bf00      	nop
 80002d8:	20001290 	.word	0x20001290
 80002dc:	00000000 	.word	0x00000000

080002e0 <tmr>:
 80002e0:	4b01      	ldr	r3, [pc, #4]	; (80002e8 <tmr+0x8>)
 80002e2:	2201      	movs	r2, #1
 80002e4:	701a      	strb	r2, [r3, #0]
 80002e6:	4770      	bx	lr
 80002e8:	20001b80 	.word	0x20001b80
 80002ec:	00000000 	.word	0x00000000

080002f0 <_idle_thread>:
 80002f0:	e7fe      	b.n	80002f0 <_idle_thread>
 80002f2:	bf00      	nop
	...

08000300 <chCoreAlloc>:
 8000300:	4603      	mov	r3, r0
 8000302:	2220      	movs	r2, #32
 8000304:	f382 8811 	msr	BASEPRI, r2
 8000308:	4908      	ldr	r1, [pc, #32]	; (800032c <chCoreAlloc+0x2c>)
 800030a:	4a09      	ldr	r2, [pc, #36]	; (8000330 <chCoreAlloc+0x30>)
 800030c:	6808      	ldr	r0, [r1, #0]
 800030e:	6812      	ldr	r2, [r2, #0]
 8000310:	3307      	adds	r3, #7
 8000312:	f023 0307 	bic.w	r3, r3, #7
 8000316:	1a12      	subs	r2, r2, r0
 8000318:	4293      	cmp	r3, r2
 800031a:	bf9a      	itte	ls
 800031c:	181b      	addls	r3, r3, r0
 800031e:	600b      	strls	r3, [r1, #0]
 8000320:	2000      	movhi	r0, #0
 8000322:	2300      	movs	r3, #0
 8000324:	f383 8811 	msr	BASEPRI, r3
 8000328:	4770      	bx	lr
 800032a:	bf00      	nop
 800032c:	200014dc 	.word	0x200014dc
 8000330:	20001408 	.word	0x20001408
	...

08000340 <get_descriptor>:
 8000340:	2902      	cmp	r1, #2
 8000342:	d006      	beq.n	8000352 <get_descriptor+0x12>
 8000344:	2903      	cmp	r1, #3
 8000346:	d006      	beq.n	8000356 <get_descriptor+0x16>
 8000348:	2901      	cmp	r1, #1
 800034a:	4806      	ldr	r0, [pc, #24]	; (8000364 <get_descriptor+0x24>)
 800034c:	bf18      	it	ne
 800034e:	2000      	movne	r0, #0
 8000350:	4770      	bx	lr
 8000352:	4805      	ldr	r0, [pc, #20]	; (8000368 <get_descriptor+0x28>)
 8000354:	4770      	bx	lr
 8000356:	2a03      	cmp	r2, #3
 8000358:	bf9a      	itte	ls
 800035a:	4804      	ldrls	r0, [pc, #16]	; (800036c <get_descriptor+0x2c>)
 800035c:	eb00 00c2 	addls.w	r0, r0, r2, lsl #3
 8000360:	2000      	movhi	r0, #0
 8000362:	4770      	bx	lr
 8000364:	08008bb0 	.word	0x08008bb0
 8000368:	08008b50 	.word	0x08008b50
 800036c:	08008c70 	.word	0x08008c70

08000370 <bmk12_setup>:
 8000370:	4b02      	ldr	r3, [pc, #8]	; (800037c <bmk12_setup+0xc>)
 8000372:	2200      	movs	r2, #0
 8000374:	e9c3 3300 	strd	r3, r3, [r3]
 8000378:	609a      	str	r2, [r3, #8]
 800037a:	4770      	bx	lr
 800037c:	200014cc 	.word	0x200014cc

08000380 <bmk11_setup>:
 8000380:	4b02      	ldr	r3, [pc, #8]	; (800038c <bmk11_setup+0xc>)
 8000382:	2201      	movs	r2, #1
 8000384:	e9c3 3300 	strd	r3, r3, [r3]
 8000388:	609a      	str	r2, [r3, #8]
 800038a:	4770      	bx	lr
 800038c:	200014e0 	.word	0x200014e0

08000390 <notify>:
 8000390:	4770      	bx	lr
 8000392:	bf00      	nop
	...

080003a0 <tmo>:
 80003a0:	4770      	bx	lr
 80003a2:	bf00      	nop
	...

080003b0 <bmk7_setup>:
 80003b0:	4b02      	ldr	r3, [pc, #8]	; (80003bc <bmk7_setup+0xc>)
 80003b2:	2200      	movs	r2, #0
 80003b4:	e9c3 3300 	strd	r3, r3, [r3]
 80003b8:	609a      	str	r2, [r3, #8]
 80003ba:	4770      	bx	lr
 80003bc:	200014e0 	.word	0x200014e0

080003c0 <sys2_execute>:
 80003c0:	2320      	movs	r3, #32
 80003c2:	f383 8811 	msr	BASEPRI, r3
 80003c6:	b662      	cpsie	i
 80003c8:	b672      	cpsid	i
 80003ca:	f383 8811 	msr	BASEPRI, r3
 80003ce:	b662      	cpsie	i
 80003d0:	2300      	movs	r3, #0
 80003d2:	f383 8811 	msr	BASEPRI, r3
 80003d6:	b662      	cpsie	i
 80003d8:	4770      	bx	lr
 80003da:	bf00      	nop
 80003dc:	0000      	movs	r0, r0
	...

080003e0 <queues2_setup>:
 80003e0:	b430      	push	{r4, r5}
 80003e2:	4a08      	ldr	r2, [pc, #32]	; (8000404 <queues2_setup+0x24>)
 80003e4:	4b08      	ldr	r3, [pc, #32]	; (8000408 <queues2_setup+0x28>)
 80003e6:	4809      	ldr	r0, [pc, #36]	; (800040c <queues2_setup+0x2c>)
 80003e8:	601b      	str	r3, [r3, #0]
 80003ea:	1d15      	adds	r5, r2, #4
 80003ec:	2404      	movs	r4, #4
 80003ee:	2100      	movs	r1, #0
 80003f0:	611d      	str	r5, [r3, #16]
 80003f2:	609c      	str	r4, [r3, #8]
 80003f4:	605b      	str	r3, [r3, #4]
 80003f6:	60da      	str	r2, [r3, #12]
 80003f8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80003fc:	e9c3 0107 	strd	r0, r1, [r3, #28]
 8000400:	bc30      	pop	{r4, r5}
 8000402:	4770      	bx	lr
 8000404:	200014f0 	.word	0x200014f0
 8000408:	200008a8 	.word	0x200008a8
 800040c:	08000391 	.word	0x08000391

08000410 <queues1_setup>:
 8000410:	4a08      	ldr	r2, [pc, #32]	; (8000434 <queues1_setup+0x24>)
 8000412:	4b09      	ldr	r3, [pc, #36]	; (8000438 <queues1_setup+0x28>)
 8000414:	4809      	ldr	r0, [pc, #36]	; (800043c <queues1_setup+0x2c>)
 8000416:	b410      	push	{r4}
 8000418:	2100      	movs	r1, #0
 800041a:	1d14      	adds	r4, r2, #4
 800041c:	611c      	str	r4, [r3, #16]
 800041e:	601b      	str	r3, [r3, #0]
 8000420:	605b      	str	r3, [r3, #4]
 8000422:	60da      	str	r2, [r3, #12]
 8000424:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8000428:	61d8      	str	r0, [r3, #28]
 800042a:	6099      	str	r1, [r3, #8]
 800042c:	6219      	str	r1, [r3, #32]
 800042e:	bc10      	pop	{r4}
 8000430:	4770      	bx	lr
 8000432:	bf00      	nop
 8000434:	200014f0 	.word	0x200014f0
 8000438:	20000810 	.word	0x20000810
 800043c:	08000391 	.word	0x08000391

08000440 <dyn2_setup>:
 8000440:	4b03      	ldr	r3, [pc, #12]	; (8000450 <dyn2_setup+0x10>)
 8000442:	2200      	movs	r2, #0
 8000444:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8000448:	e9c3 2100 	strd	r2, r1, [r3]
 800044c:	609a      	str	r2, [r3, #8]
 800044e:	4770      	bx	lr
 8000450:	200014c0 	.word	0x200014c0
	...

08000460 <dyn1_setup>:
 8000460:	4b08      	ldr	r3, [pc, #32]	; (8000484 <dyn1_setup+0x24>)
 8000462:	4909      	ldr	r1, [pc, #36]	; (8000488 <dyn1_setup+0x28>)
 8000464:	b410      	push	{r4}
 8000466:	2200      	movs	r2, #0
 8000468:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 800046c:	f103 0010 	add.w	r0, r3, #16
 8000470:	e9c1 2400 	strd	r2, r4, [r1]
 8000474:	6099      	str	r1, [r3, #8]
 8000476:	e9c3 0004 	strd	r0, r0, [r3, #16]
 800047a:	601a      	str	r2, [r3, #0]
 800047c:	60da      	str	r2, [r3, #12]
 800047e:	619a      	str	r2, [r3, #24]
 8000480:	bc10      	pop	{r4}
 8000482:	4770      	bx	lr
 8000484:	20001468 	.word	0x20001468
 8000488:	200014f0 	.word	0x200014f0
 800048c:	00000000 	.word	0x00000000

08000490 <dyn3_setup>:
 8000490:	f7ff bfe6 	b.w	8000460 <dyn1_setup>
	...

080004a0 <null_provider>:
 80004a0:	2000      	movs	r0, #0
 80004a2:	4770      	bx	lr
	...

080004b0 <pools1_setup>:
 80004b0:	4b03      	ldr	r3, [pc, #12]	; (80004c0 <pools1_setup+0x10>)
 80004b2:	2200      	movs	r2, #0
 80004b4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80004b8:	e9c3 2100 	strd	r2, r1, [r3]
 80004bc:	609a      	str	r2, [r3, #8]
 80004be:	4770      	bx	lr
 80004c0:	2000089c 	.word	0x2000089c
	...

080004d0 <heap1_setup>:
 80004d0:	4b08      	ldr	r3, [pc, #32]	; (80004f4 <heap1_setup+0x24>)
 80004d2:	4909      	ldr	r1, [pc, #36]	; (80004f8 <heap1_setup+0x28>)
 80004d4:	b410      	push	{r4}
 80004d6:	2200      	movs	r2, #0
 80004d8:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 80004dc:	f103 0010 	add.w	r0, r3, #16
 80004e0:	e9c1 2400 	strd	r2, r4, [r1]
 80004e4:	6099      	str	r1, [r3, #8]
 80004e6:	e9c3 0004 	strd	r0, r0, [r3, #16]
 80004ea:	601a      	str	r2, [r3, #0]
 80004ec:	60da      	str	r2, [r3, #12]
 80004ee:	619a      	str	r2, [r3, #24]
 80004f0:	bc10      	pop	{r4}
 80004f2:	4770      	bx	lr
 80004f4:	20001b60 	.word	0x20001b60
 80004f8:	200014f0 	.word	0x200014f0
 80004fc:	00000000 	.word	0x00000000

08000500 <evt1_setup>:
 8000500:	f7ff bede 	b.w	80002c0 <chEvtGetAndClearEvents.constprop.40>
	...

08000510 <evt3_setup>:
 8000510:	f7ff bff6 	b.w	8000500 <evt1_setup>
	...

08000520 <evt2_setup>:
 8000520:	f7ff bfee 	b.w	8000500 <evt1_setup>
	...

08000530 <mbox1_setup>:
 8000530:	b430      	push	{r4, r5}
 8000532:	4b0b      	ldr	r3, [pc, #44]	; (8000560 <mbox1_setup+0x30>)
 8000534:	4a0b      	ldr	r2, [pc, #44]	; (8000564 <mbox1_setup+0x34>)
 8000536:	601a      	str	r2, [r3, #0]
 8000538:	f102 0514 	add.w	r5, r2, #20
 800053c:	2405      	movs	r4, #5
 800053e:	f103 011c 	add.w	r1, r3, #28
 8000542:	2000      	movs	r0, #0
 8000544:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8000548:	f103 0210 	add.w	r2, r3, #16
 800054c:	605d      	str	r5, [r3, #4]
 800054e:	625c      	str	r4, [r3, #36]	; 0x24
 8000550:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8000554:	6219      	str	r1, [r3, #32]
 8000556:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800055a:	bc30      	pop	{r4, r5}
 800055c:	4770      	bx	lr
 800055e:	bf00      	nop
 8000560:	20000874 	.word	0x20000874
 8000564:	200014f0 	.word	0x200014f0
	...

08000570 <mtx8_setup>:
 8000570:	4906      	ldr	r1, [pc, #24]	; (800058c <mtx8_setup+0x1c>)
 8000572:	4a07      	ldr	r2, [pc, #28]	; (8000590 <mtx8_setup+0x20>)
 8000574:	4b07      	ldr	r3, [pc, #28]	; (8000594 <mtx8_setup+0x24>)
 8000576:	6009      	str	r1, [r1, #0]
 8000578:	2000      	movs	r0, #0
 800057a:	6049      	str	r1, [r1, #4]
 800057c:	e9c2 2200 	strd	r2, r2, [r2]
 8000580:	6090      	str	r0, [r2, #8]
 8000582:	6098      	str	r0, [r3, #8]
 8000584:	e9c3 3300 	strd	r3, r3, [r3]
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop
 800058c:	20000800 	.word	0x20000800
 8000590:	20000854 	.word	0x20000854
 8000594:	20000864 	.word	0x20000864
	...

080005a0 <mtx6_setup>:
 80005a0:	4a04      	ldr	r2, [pc, #16]	; (80005b4 <mtx6_setup+0x14>)
 80005a2:	4b05      	ldr	r3, [pc, #20]	; (80005b8 <mtx6_setup+0x18>)
 80005a4:	6012      	str	r2, [r2, #0]
 80005a6:	2100      	movs	r1, #0
 80005a8:	6052      	str	r2, [r2, #4]
 80005aa:	e9c3 3300 	strd	r3, r3, [r3]
 80005ae:	6099      	str	r1, [r3, #8]
 80005b0:	4770      	bx	lr
 80005b2:	bf00      	nop
 80005b4:	20000800 	.word	0x20000800
 80005b8:	20000854 	.word	0x20000854
 80005bc:	00000000 	.word	0x00000000

080005c0 <mtx7_setup>:
 80005c0:	f7ff bfee 	b.w	80005a0 <mtx6_setup>
	...

080005d0 <mtx4_setup>:
 80005d0:	4a04      	ldr	r2, [pc, #16]	; (80005e4 <mtx4_setup+0x14>)
 80005d2:	4b05      	ldr	r3, [pc, #20]	; (80005e8 <mtx4_setup+0x18>)
 80005d4:	6012      	str	r2, [r2, #0]
 80005d6:	2100      	movs	r1, #0
 80005d8:	e9c2 2101 	strd	r2, r1, [r2, #4]
 80005dc:	6099      	str	r1, [r3, #8]
 80005de:	e9c3 3300 	strd	r3, r3, [r3]
 80005e2:	4770      	bx	lr
 80005e4:	20000854 	.word	0x20000854
 80005e8:	20000864 	.word	0x20000864
 80005ec:	00000000 	.word	0x00000000

080005f0 <mtx1_setup>:
 80005f0:	4b02      	ldr	r3, [pc, #8]	; (80005fc <mtx1_setup+0xc>)
 80005f2:	2200      	movs	r2, #0
 80005f4:	e9c3 3300 	strd	r3, r3, [r3]
 80005f8:	609a      	str	r2, [r3, #8]
 80005fa:	4770      	bx	lr
 80005fc:	20000854 	.word	0x20000854

08000600 <mtx5_setup>:
 8000600:	f7ff bff6 	b.w	80005f0 <mtx1_setup>
	...

08000610 <sem1_setup>:
 8000610:	4b02      	ldr	r3, [pc, #8]	; (800061c <sem1_setup+0xc>)
 8000612:	2200      	movs	r2, #0
 8000614:	e9c3 3300 	strd	r3, r3, [r3]
 8000618:	609a      	str	r2, [r3, #8]
 800061a:	4770      	bx	lr
 800061c:	200008cc 	.word	0x200008cc

08000620 <sem3_setup>:
 8000620:	f7ff bff6 	b.w	8000610 <sem1_setup>
	...

08000630 <sem2_setup>:
 8000630:	f7ff bfee 	b.w	8000610 <sem1_setup>
	...

08000640 <test_printn.part.1>:
 8000640:	b320      	cbz	r0, 800068c <test_printn.part.1+0x4c>
 8000642:	b570      	push	{r4, r5, r6, lr}
 8000644:	b084      	sub	sp, #16
 8000646:	466d      	mov	r5, sp
 8000648:	462c      	mov	r4, r5
 800064a:	4e11      	ldr	r6, [pc, #68]	; (8000690 <test_printn.part.1+0x50>)
 800064c:	e000      	b.n	8000650 <test_printn.part.1+0x10>
 800064e:	4614      	mov	r4, r2
 8000650:	fba6 2300 	umull	r2, r3, r6, r0
 8000654:	08db      	lsrs	r3, r3, #3
 8000656:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 800065a:	eba0 0041 	sub.w	r0, r0, r1, lsl #1
 800065e:	f100 0130 	add.w	r1, r0, #48	; 0x30
 8000662:	4622      	mov	r2, r4
 8000664:	b2c9      	uxtb	r1, r1
 8000666:	f802 1b01 	strb.w	r1, [r2], #1
 800066a:	4618      	mov	r0, r3
 800066c:	2b00      	cmp	r3, #0
 800066e:	d1ee      	bne.n	800064e <test_printn.part.1+0xe>
 8000670:	42aa      	cmp	r2, r5
 8000672:	d909      	bls.n	8000688 <test_printn.part.1+0x48>
 8000674:	4e07      	ldr	r6, [pc, #28]	; (8000694 <test_printn.part.1+0x54>)
 8000676:	e001      	b.n	800067c <test_printn.part.1+0x3c>
 8000678:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
 800067c:	6830      	ldr	r0, [r6, #0]
 800067e:	6803      	ldr	r3, [r0, #0]
 8000680:	689b      	ldr	r3, [r3, #8]
 8000682:	4798      	blx	r3
 8000684:	42a5      	cmp	r5, r4
 8000686:	d1f7      	bne.n	8000678 <test_printn.part.1+0x38>
 8000688:	b004      	add	sp, #16
 800068a:	bd70      	pop	{r4, r5, r6, pc}
 800068c:	4770      	bx	lr
 800068e:	bf00      	nop
 8000690:	cccccccd 	.word	0xcccccccd
 8000694:	200013e0 	.word	0x200013e0
	...

080006a0 <test_printn>:
 80006a0:	b928      	cbnz	r0, 80006ae <test_printn+0xe>
 80006a2:	4b04      	ldr	r3, [pc, #16]	; (80006b4 <test_printn+0x14>)
 80006a4:	6818      	ldr	r0, [r3, #0]
 80006a6:	6803      	ldr	r3, [r0, #0]
 80006a8:	2130      	movs	r1, #48	; 0x30
 80006aa:	689b      	ldr	r3, [r3, #8]
 80006ac:	4718      	bx	r3
 80006ae:	f7ff bfc7 	b.w	8000640 <test_printn.part.1>
 80006b2:	bf00      	nop
 80006b4:	200013e0 	.word	0x200013e0
	...

080006c0 <print_line>:
 80006c0:	b570      	push	{r4, r5, r6, lr}
 80006c2:	4d08      	ldr	r5, [pc, #32]	; (80006e4 <print_line+0x24>)
 80006c4:	244c      	movs	r4, #76	; 0x4c
 80006c6:	6828      	ldr	r0, [r5, #0]
 80006c8:	6803      	ldr	r3, [r0, #0]
 80006ca:	212d      	movs	r1, #45	; 0x2d
 80006cc:	689b      	ldr	r3, [r3, #8]
 80006ce:	4798      	blx	r3
 80006d0:	3c01      	subs	r4, #1
 80006d2:	d1f8      	bne.n	80006c6 <print_line+0x6>
 80006d4:	6828      	ldr	r0, [r5, #0]
 80006d6:	4904      	ldr	r1, [pc, #16]	; (80006e8 <print_line+0x28>)
 80006d8:	6803      	ldr	r3, [r0, #0]
 80006da:	2202      	movs	r2, #2
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80006e2:	4718      	bx	r3
 80006e4:	200013e0 	.word	0x200013e0
 80006e8:	08007e34 	.word	0x08007e34
 80006ec:	00000000 	.word	0x00000000

080006f0 <test_terminate_threads>:
 80006f0:	4b0a      	ldr	r3, [pc, #40]	; (800071c <test_terminate_threads+0x2c>)
 80006f2:	b430      	push	{r4, r5}
 80006f4:	f103 0014 	add.w	r0, r3, #20
 80006f8:	2520      	movs	r5, #32
 80006fa:	2400      	movs	r4, #0
 80006fc:	f853 2b04 	ldr.w	r2, [r3], #4
 8000700:	b13a      	cbz	r2, 8000712 <test_terminate_threads+0x22>
 8000702:	f385 8811 	msr	BASEPRI, r5
 8000706:	7f51      	ldrb	r1, [r2, #29]
 8000708:	f041 0104 	orr.w	r1, r1, #4
 800070c:	7751      	strb	r1, [r2, #29]
 800070e:	f384 8811 	msr	BASEPRI, r4
 8000712:	4283      	cmp	r3, r0
 8000714:	d1f2      	bne.n	80006fc <test_terminate_threads+0xc>
 8000716:	bc30      	pop	{r4, r5}
 8000718:	4770      	bx	lr
 800071a:	bf00      	nop
 800071c:	20001b84 	.word	0x20001b84

08000720 <_test_assert_time_window>:
 8000720:	b410      	push	{r4}
 8000722:	2320      	movs	r3, #32
 8000724:	f383 8811 	msr	BASEPRI, r3
 8000728:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 800072c:	2300      	movs	r3, #0
 800072e:	6a64      	ldr	r4, [r4, #36]	; 0x24
 8000730:	f383 8811 	msr	BASEPRI, r3
 8000734:	1a64      	subs	r4, r4, r1
 8000736:	1a52      	subs	r2, r2, r1
 8000738:	4294      	cmp	r4, r2
 800073a:	d306      	bcc.n	800074a <_test_assert_time_window+0x2a>
 800073c:	4c04      	ldr	r4, [pc, #16]	; (8000750 <_test_assert_time_window+0x30>)
 800073e:	4905      	ldr	r1, [pc, #20]	; (8000754 <_test_assert_time_window+0x34>)
 8000740:	4a05      	ldr	r2, [pc, #20]	; (8000758 <_test_assert_time_window+0x38>)
 8000742:	2301      	movs	r3, #1
 8000744:	7023      	strb	r3, [r4, #0]
 8000746:	700b      	strb	r3, [r1, #0]
 8000748:	6010      	str	r0, [r2, #0]
 800074a:	4618      	mov	r0, r3
 800074c:	bc10      	pop	{r4}
 800074e:	4770      	bx	lr
 8000750:	20001b58 	.word	0x20001b58
 8000754:	200014bc 	.word	0x200014bc
 8000758:	20001464 	.word	0x20001464
 800075c:	00000000 	.word	0x00000000

08000760 <_test_assert_sequence>:
 8000760:	b4f0      	push	{r4, r5, r6, r7}
 8000762:	4e0e      	ldr	r6, [pc, #56]	; (800079c <_test_assert_sequence+0x3c>)
 8000764:	4f0e      	ldr	r7, [pc, #56]	; (80007a0 <_test_assert_sequence+0x40>)
 8000766:	6835      	ldr	r5, [r6, #0]
 8000768:	3901      	subs	r1, #1
 800076a:	463b      	mov	r3, r7
 800076c:	e003      	b.n	8000776 <_test_assert_sequence+0x16>
 800076e:	f813 4b01 	ldrb.w	r4, [r3], #1
 8000772:	4294      	cmp	r4, r2
 8000774:	d108      	bne.n	8000788 <_test_assert_sequence+0x28>
 8000776:	429d      	cmp	r5, r3
 8000778:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800077c:	d8f7      	bhi.n	800076e <_test_assert_sequence+0xe>
 800077e:	b91a      	cbnz	r2, 8000788 <_test_assert_sequence+0x28>
 8000780:	6037      	str	r7, [r6, #0]
 8000782:	4610      	mov	r0, r2
 8000784:	bcf0      	pop	{r4, r5, r6, r7}
 8000786:	4770      	bx	lr
 8000788:	4c06      	ldr	r4, [pc, #24]	; (80007a4 <_test_assert_sequence+0x44>)
 800078a:	4907      	ldr	r1, [pc, #28]	; (80007a8 <_test_assert_sequence+0x48>)
 800078c:	4b07      	ldr	r3, [pc, #28]	; (80007ac <_test_assert_sequence+0x4c>)
 800078e:	2201      	movs	r2, #1
 8000790:	7022      	strb	r2, [r4, #0]
 8000792:	6018      	str	r0, [r3, #0]
 8000794:	700a      	strb	r2, [r1, #0]
 8000796:	4610      	mov	r0, r2
 8000798:	bcf0      	pop	{r4, r5, r6, r7}
 800079a:	4770      	bx	lr
 800079c:	20001ba8 	.word	0x20001ba8
 80007a0:	20001b98 	.word	0x20001b98
 80007a4:	20001b58 	.word	0x20001b58
 80007a8:	200014bc 	.word	0x200014bc
 80007ac:	20001464 	.word	0x20001464

080007b0 <_test_assert>:
 80007b0:	b951      	cbnz	r1, 80007c8 <_test_assert+0x18>
 80007b2:	b410      	push	{r4}
 80007b4:	4906      	ldr	r1, [pc, #24]	; (80007d0 <_test_assert+0x20>)
 80007b6:	4c07      	ldr	r4, [pc, #28]	; (80007d4 <_test_assert+0x24>)
 80007b8:	4a07      	ldr	r2, [pc, #28]	; (80007d8 <_test_assert+0x28>)
 80007ba:	2301      	movs	r3, #1
 80007bc:	7023      	strb	r3, [r4, #0]
 80007be:	6010      	str	r0, [r2, #0]
 80007c0:	700b      	strb	r3, [r1, #0]
 80007c2:	4618      	mov	r0, r3
 80007c4:	bc10      	pop	{r4}
 80007c6:	4770      	bx	lr
 80007c8:	2300      	movs	r3, #0
 80007ca:	4618      	mov	r0, r3
 80007cc:	4770      	bx	lr
 80007ce:	bf00      	nop
 80007d0:	200014bc 	.word	0x200014bc
 80007d4:	20001b58 	.word	0x20001b58
 80007d8:	20001464 	.word	0x20001464
 80007dc:	00000000 	.word	0x00000000

080007e0 <test_emit_token>:
 80007e0:	2320      	movs	r3, #32
 80007e2:	f383 8811 	msr	BASEPRI, r3
 80007e6:	4b04      	ldr	r3, [pc, #16]	; (80007f8 <test_emit_token+0x18>)
 80007e8:	681a      	ldr	r2, [r3, #0]
 80007ea:	1c51      	adds	r1, r2, #1
 80007ec:	6019      	str	r1, [r3, #0]
 80007ee:	7010      	strb	r0, [r2, #0]
 80007f0:	2300      	movs	r3, #0
 80007f2:	f383 8811 	msr	BASEPRI, r3
 80007f6:	4770      	bx	lr
 80007f8:	20001ba8 	.word	0x20001ba8
 80007fc:	00000000 	.word	0x00000000

08000800 <h3>:
 8000800:	2043      	movs	r0, #67	; 0x43
 8000802:	f7ff bfed 	b.w	80007e0 <test_emit_token>
 8000806:	bf00      	nop
	...

08000810 <h2>:
 8000810:	2042      	movs	r0, #66	; 0x42
 8000812:	f7ff bfe5 	b.w	80007e0 <test_emit_token>
 8000816:	bf00      	nop
	...

08000820 <h1>:
 8000820:	2041      	movs	r0, #65	; 0x41
 8000822:	f7ff bfdd 	b.w	80007e0 <test_emit_token>
 8000826:	bf00      	nop
	...

08000830 <thread.lto_priv.64>:
 8000830:	7800      	ldrb	r0, [r0, #0]
 8000832:	f7ff bfd5 	b.w	80007e0 <test_emit_token>
 8000836:	bf00      	nop
	...

08000840 <thread.lto_priv.66>:
 8000840:	f7ff bff6 	b.w	8000830 <thread.lto_priv.64>
	...

08000850 <test_println>:
 8000850:	b570      	push	{r4, r5, r6, lr}
 8000852:	7801      	ldrb	r1, [r0, #0]
 8000854:	b189      	cbz	r1, 800087a <test_println+0x2a>
 8000856:	4d0a      	ldr	r5, [pc, #40]	; (8000880 <test_println+0x30>)
 8000858:	4604      	mov	r4, r0
 800085a:	6828      	ldr	r0, [r5, #0]
 800085c:	6803      	ldr	r3, [r0, #0]
 800085e:	689b      	ldr	r3, [r3, #8]
 8000860:	4798      	blx	r3
 8000862:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000866:	2900      	cmp	r1, #0
 8000868:	d1f7      	bne.n	800085a <test_println+0xa>
 800086a:	6828      	ldr	r0, [r5, #0]
 800086c:	4905      	ldr	r1, [pc, #20]	; (8000884 <test_println+0x34>)
 800086e:	6803      	ldr	r3, [r0, #0]
 8000870:	2202      	movs	r2, #2
 8000872:	681b      	ldr	r3, [r3, #0]
 8000874:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000878:	4718      	bx	r3
 800087a:	4d01      	ldr	r5, [pc, #4]	; (8000880 <test_println+0x30>)
 800087c:	e7f5      	b.n	800086a <test_println+0x1a>
 800087e:	bf00      	nop
 8000880:	200013e0 	.word	0x200013e0
 8000884:	08007e34 	.word	0x08007e34
	...

08000890 <test_print>:
 8000890:	7801      	ldrb	r1, [r0, #0]
 8000892:	b159      	cbz	r1, 80008ac <test_print+0x1c>
 8000894:	b538      	push	{r3, r4, r5, lr}
 8000896:	4d06      	ldr	r5, [pc, #24]	; (80008b0 <test_print+0x20>)
 8000898:	4604      	mov	r4, r0
 800089a:	6828      	ldr	r0, [r5, #0]
 800089c:	6803      	ldr	r3, [r0, #0]
 800089e:	689b      	ldr	r3, [r3, #8]
 80008a0:	4798      	blx	r3
 80008a2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80008a6:	2900      	cmp	r1, #0
 80008a8:	d1f7      	bne.n	800089a <test_print+0xa>
 80008aa:	bd38      	pop	{r3, r4, r5, pc}
 80008ac:	4770      	bx	lr
 80008ae:	bf00      	nop
 80008b0:	200013e0 	.word	0x200013e0
	...

080008c0 <usb_lld_start_in>:
 80008c0:	6e82      	ldr	r2, [r0, #104]	; 0x68
 80008c2:	b410      	push	{r4}
 80008c4:	eb02 1441 	add.w	r4, r2, r1, lsl #5
 80008c8:	2301      	movs	r3, #1
 80008ca:	f8d4 0900 	ldr.w	r0, [r4, #2304]	; 0x900
 80008ce:	f040 4004 	orr.w	r0, r0, #2214592512	; 0x84000000
 80008d2:	f8c4 0900 	str.w	r0, [r4, #2304]	; 0x900
 80008d6:	f8d2 0834 	ldr.w	r0, [r2, #2100]	; 0x834
 80008da:	bc10      	pop	{r4}
 80008dc:	fa03 f101 	lsl.w	r1, r3, r1
 80008e0:	4301      	orrs	r1, r0
 80008e2:	f8c2 1834 	str.w	r1, [r2, #2100]	; 0x834
 80008e6:	4770      	bx	lr
	...

080008f0 <usb_lld_prepare_transmit>:
 80008f0:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 80008f4:	b410      	push	{r4}
 80008f6:	68dc      	ldr	r4, [r3, #12]
 80008f8:	6e82      	ldr	r2, [r0, #104]	; 0x68
 80008fa:	6960      	ldr	r0, [r4, #20]
 80008fc:	6843      	ldr	r3, [r0, #4]
 80008fe:	6103      	str	r3, [r0, #16]
 8000900:	b193      	cbz	r3, 8000928 <usb_lld_prepare_transmit+0x38>
 8000902:	b161      	cbz	r1, 800091e <usb_lld_prepare_transmit+0x2e>
 8000904:	8a20      	ldrh	r0, [r4, #16]
 8000906:	bc10      	pop	{r4}
 8000908:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800090c:	1e41      	subs	r1, r0, #1
 800090e:	4419      	add	r1, r3
 8000910:	fbb1 f1f0 	udiv	r1, r1, r0
 8000914:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
 8000918:	f8c2 3910 	str.w	r3, [r2, #2320]	; 0x910
 800091c:	4770      	bx	lr
 800091e:	2b40      	cmp	r3, #64	; 0x40
 8000920:	bf84      	itt	hi
 8000922:	2340      	movhi	r3, #64	; 0x40
 8000924:	6043      	strhi	r3, [r0, #4]
 8000926:	e7ed      	b.n	8000904 <usb_lld_prepare_transmit+0x14>
 8000928:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800092c:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8000930:	f8c2 3910 	str.w	r3, [r2, #2320]	; 0x910
 8000934:	bc10      	pop	{r4}
 8000936:	4770      	bx	lr
	...

08000940 <usb_lld_prepare_receive>:
 8000940:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8000944:	b470      	push	{r4, r5, r6}
 8000946:	68de      	ldr	r6, [r3, #12]
 8000948:	69b5      	ldr	r5, [r6, #24]
 800094a:	686a      	ldr	r2, [r5, #4]
 800094c:	612a      	str	r2, [r5, #16]
 800094e:	b929      	cbnz	r1, 800095c <usb_lld_prepare_receive+0x1c>
 8000950:	2a40      	cmp	r2, #64	; 0x40
 8000952:	d903      	bls.n	800095c <usb_lld_prepare_receive+0x1c>
 8000954:	2240      	movs	r2, #64	; 0x40
 8000956:	4c09      	ldr	r4, [pc, #36]	; (800097c <usb_lld_prepare_receive+0x3c>)
 8000958:	606a      	str	r2, [r5, #4]
 800095a:	e001      	b.n	8000960 <usb_lld_prepare_receive+0x20>
 800095c:	f042 44c0 	orr.w	r4, r2, #1610612736	; 0x60000000
 8000960:	8a75      	ldrh	r5, [r6, #18]
 8000962:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8000964:	1e6b      	subs	r3, r5, #1
 8000966:	eb00 1141 	add.w	r1, r0, r1, lsl #5
 800096a:	4413      	add	r3, r2
 800096c:	fbb3 f3f5 	udiv	r3, r3, r5
 8000970:	ea44 43c3 	orr.w	r3, r4, r3, lsl #19
 8000974:	f8c1 3b10 	str.w	r3, [r1, #2832]	; 0xb10
 8000978:	bc70      	pop	{r4, r5, r6}
 800097a:	4770      	bx	lr
 800097c:	60000040 	.word	0x60000040

08000980 <otg_epout_handler.constprop.7>:
 8000980:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000984:	4e24      	ldr	r6, [pc, #144]	; (8000a18 <otg_epout_handler.constprop.7+0x98>)
 8000986:	6eb7      	ldr	r7, [r6, #104]	; 0x68
 8000988:	eb07 1340 	add.w	r3, r7, r0, lsl #5
 800098c:	4605      	mov	r5, r0
 800098e:	f8d3 4b08 	ldr.w	r4, [r3, #2824]	; 0xb08
 8000992:	f8c3 4b08 	str.w	r4, [r3, #2824]	; 0xb08
 8000996:	0720      	lsls	r0, r4, #28
 8000998:	d50a      	bpl.n	80009b0 <otg_epout_handler.constprop.7+0x30>
 800099a:	f8d7 3814 	ldr.w	r3, [r7, #2068]	; 0x814
 800099e:	0719      	lsls	r1, r3, #28
 80009a0:	d506      	bpl.n	80009b0 <otg_epout_handler.constprop.7+0x30>
 80009a2:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 80009a6:	4629      	mov	r1, r5
 80009a8:	68db      	ldr	r3, [r3, #12]
 80009aa:	4630      	mov	r0, r6
 80009ac:	685b      	ldr	r3, [r3, #4]
 80009ae:	4798      	blx	r3
 80009b0:	07e2      	lsls	r2, r4, #31
 80009b2:	d52e      	bpl.n	8000a12 <otg_epout_handler.constprop.7+0x92>
 80009b4:	f8d7 3814 	ldr.w	r3, [r7, #2068]	; 0x814
 80009b8:	07db      	lsls	r3, r3, #31
 80009ba:	d52a      	bpl.n	8000a12 <otg_epout_handler.constprop.7+0x92>
 80009bc:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 80009c0:	68d9      	ldr	r1, [r3, #12]
 80009c2:	698b      	ldr	r3, [r1, #24]
 80009c4:	6858      	ldr	r0, [r3, #4]
 80009c6:	691a      	ldr	r2, [r3, #16]
 80009c8:	4290      	cmp	r0, r2
 80009ca:	d30c      	bcc.n	80009e6 <otg_epout_handler.constprop.7+0x66>
 80009cc:	8973      	ldrh	r3, [r6, #10]
 80009ce:	68cc      	ldr	r4, [r1, #12]
 80009d0:	4811      	ldr	r0, [pc, #68]	; (8000a18 <otg_epout_handler.constprop.7+0x98>)
 80009d2:	2201      	movs	r2, #1
 80009d4:	40aa      	lsls	r2, r5
 80009d6:	ea23 0302 	bic.w	r3, r3, r2
 80009da:	8173      	strh	r3, [r6, #10]
 80009dc:	4629      	mov	r1, r5
 80009de:	4623      	mov	r3, r4
 80009e0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80009e4:	4718      	bx	r3
 80009e6:	1a12      	subs	r2, r2, r0
 80009e8:	2400      	movs	r4, #0
 80009ea:	e9c3 2401 	strd	r2, r4, [r3, #4]
 80009ee:	4629      	mov	r1, r5
 80009f0:	4809      	ldr	r0, [pc, #36]	; (8000a18 <otg_epout_handler.constprop.7+0x98>)
 80009f2:	f7ff ffa5 	bl	8000940 <usb_lld_prepare_receive>
 80009f6:	2320      	movs	r3, #32
 80009f8:	f383 8811 	msr	BASEPRI, r3
 80009fc:	6eb3      	ldr	r3, [r6, #104]	; 0x68
 80009fe:	eb03 1545 	add.w	r5, r3, r5, lsl #5
 8000a02:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	; 0xb00
 8000a06:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000a0a:	f8c5 3b00 	str.w	r3, [r5, #2816]	; 0xb00
 8000a0e:	f384 8811 	msr	BASEPRI, r4
 8000a12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a16:	bf00      	nop
 8000a18:	200010c8 	.word	0x200010c8
 8000a1c:	00000000 	.word	0x00000000

08000a20 <_usb_ep0out>:
 8000a20:	f890 204c 	ldrb.w	r2, [r0, #76]	; 0x4c
 8000a24:	2a06      	cmp	r2, #6
 8000a26:	d814      	bhi.n	8000a52 <_usb_ep0out+0x32>
 8000a28:	b538      	push	{r3, r4, r5, lr}
 8000a2a:	2301      	movs	r3, #1
 8000a2c:	4093      	lsls	r3, r2
 8000a2e:	f013 0f67 	tst.w	r3, #103	; 0x67
 8000a32:	4604      	mov	r4, r0
 8000a34:	d127      	bne.n	8000a86 <_usb_ep0out+0x66>
 8000a36:	f013 0208 	ands.w	r2, r3, #8
 8000a3a:	d00b      	beq.n	8000a54 <_usb_ep0out+0x34>
 8000a3c:	68c3      	ldr	r3, [r0, #12]
 8000a3e:	699b      	ldr	r3, [r3, #24]
 8000a40:	689b      	ldr	r3, [r3, #8]
 8000a42:	b92b      	cbnz	r3, 8000a50 <_usb_ep0out+0x30>
 8000a44:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8000a46:	b103      	cbz	r3, 8000a4a <_usb_ep0out+0x2a>
 8000a48:	4798      	blx	r3
 8000a4a:	2300      	movs	r3, #0
 8000a4c:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 8000a50:	bd38      	pop	{r3, r4, r5, pc}
 8000a52:	4770      	bx	lr
 8000a54:	06db      	lsls	r3, r3, #27
 8000a56:	d5fb      	bpl.n	8000a50 <_usb_ep0out+0x30>
 8000a58:	68c3      	ldr	r3, [r0, #12]
 8000a5a:	2105      	movs	r1, #5
 8000a5c:	f880 104c 	strb.w	r1, [r0, #76]	; 0x4c
 8000a60:	695b      	ldr	r3, [r3, #20]
 8000a62:	4611      	mov	r1, r2
 8000a64:	701a      	strb	r2, [r3, #0]
 8000a66:	60da      	str	r2, [r3, #12]
 8000a68:	e9c3 2201 	strd	r2, r2, [r3, #4]
 8000a6c:	f7ff ff40 	bl	80008f0 <usb_lld_prepare_transmit>
 8000a70:	2320      	movs	r3, #32
 8000a72:	f383 8811 	msr	BASEPRI, r3
 8000a76:	8923      	ldrh	r3, [r4, #8]
 8000a78:	f013 0101 	ands.w	r1, r3, #1
 8000a7c:	d019      	beq.n	8000ab2 <_usb_ep0out+0x92>
 8000a7e:	2300      	movs	r3, #0
 8000a80:	f383 8811 	msr	BASEPRI, r3
 8000a84:	bd38      	pop	{r3, r4, r5, pc}
 8000a86:	6e83      	ldr	r3, [r0, #104]	; 0x68
 8000a88:	6841      	ldr	r1, [r0, #4]
 8000a8a:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8000a8e:	680d      	ldr	r5, [r1, #0]
 8000a90:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000a94:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8000a98:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8000a9c:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000aa0:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8000aa4:	b10d      	cbz	r5, 8000aaa <_usb_ep0out+0x8a>
 8000aa6:	2105      	movs	r1, #5
 8000aa8:	47a8      	blx	r5
 8000aaa:	2306      	movs	r3, #6
 8000aac:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 8000ab0:	bd38      	pop	{r3, r4, r5, pc}
 8000ab2:	f043 0301 	orr.w	r3, r3, #1
 8000ab6:	8123      	strh	r3, [r4, #8]
 8000ab8:	4620      	mov	r0, r4
 8000aba:	f7ff ff01 	bl	80008c0 <usb_lld_start_in>
 8000abe:	e7de      	b.n	8000a7e <_usb_ep0out+0x5e>

08000ac0 <_usb_ep0in>:
 8000ac0:	b538      	push	{r3, r4, r5, lr}
 8000ac2:	f890 304c 	ldrb.w	r3, [r0, #76]	; 0x4c
 8000ac6:	4604      	mov	r4, r0
 8000ac8:	2b06      	cmp	r3, #6
 8000aca:	d831      	bhi.n	8000b30 <_usb_ep0in+0x70>
 8000acc:	e8df f003 	tbb	[pc, r3]
 8000ad0:	59380459 	.word	0x59380459
 8000ad4:	3159      	.short	0x3159
 8000ad6:	59          	.byte	0x59
 8000ad7:	00          	.byte	0x00
 8000ad8:	f890 0063 	ldrb.w	r0, [r0, #99]	; 0x63
 8000adc:	f894 2062 	ldrb.w	r2, [r4, #98]	; 0x62
 8000ae0:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8000ae2:	68e3      	ldr	r3, [r4, #12]
 8000ae4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000ae8:	4291      	cmp	r1, r2
 8000aea:	d22a      	bcs.n	8000b42 <_usb_ep0in+0x82>
 8000aec:	8a18      	ldrh	r0, [r3, #16]
 8000aee:	fbb1 f2f0 	udiv	r2, r1, r0
 8000af2:	fb00 1212 	mls	r2, r0, r2, r1
 8000af6:	bb22      	cbnz	r2, 8000b42 <_usb_ep0in+0x82>
 8000af8:	695b      	ldr	r3, [r3, #20]
 8000afa:	4611      	mov	r1, r2
 8000afc:	701a      	strb	r2, [r3, #0]
 8000afe:	60da      	str	r2, [r3, #12]
 8000b00:	e9c3 2201 	strd	r2, r2, [r3, #4]
 8000b04:	4620      	mov	r0, r4
 8000b06:	f7ff fef3 	bl	80008f0 <usb_lld_prepare_transmit>
 8000b0a:	2320      	movs	r3, #32
 8000b0c:	f383 8811 	msr	BASEPRI, r3
 8000b10:	8923      	ldrh	r3, [r4, #8]
 8000b12:	f013 0101 	ands.w	r1, r3, #1
 8000b16:	d105      	bne.n	8000b24 <_usb_ep0in+0x64>
 8000b18:	f043 0301 	orr.w	r3, r3, #1
 8000b1c:	8123      	strh	r3, [r4, #8]
 8000b1e:	4620      	mov	r0, r4
 8000b20:	f7ff fece 	bl	80008c0 <usb_lld_start_in>
 8000b24:	2300      	movs	r3, #0
 8000b26:	f383 8811 	msr	BASEPRI, r3
 8000b2a:	2302      	movs	r3, #2
 8000b2c:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 8000b30:	bd38      	pop	{r3, r4, r5, pc}
 8000b32:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8000b34:	b103      	cbz	r3, 8000b38 <_usb_ep0in+0x78>
 8000b36:	4798      	blx	r3
 8000b38:	2300      	movs	r3, #0
 8000b3a:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 8000b3e:	bd38      	pop	{r3, r4, r5, pc}
 8000b40:	68c3      	ldr	r3, [r0, #12]
 8000b42:	2203      	movs	r2, #3
 8000b44:	f884 204c 	strb.w	r2, [r4, #76]	; 0x4c
 8000b48:	699b      	ldr	r3, [r3, #24]
 8000b4a:	2100      	movs	r1, #0
 8000b4c:	7019      	strb	r1, [r3, #0]
 8000b4e:	60d9      	str	r1, [r3, #12]
 8000b50:	e9c3 1101 	strd	r1, r1, [r3, #4]
 8000b54:	4620      	mov	r0, r4
 8000b56:	f7ff fef3 	bl	8000940 <usb_lld_prepare_receive>
 8000b5a:	2320      	movs	r3, #32
 8000b5c:	f383 8811 	msr	BASEPRI, r3
 8000b60:	8963      	ldrh	r3, [r4, #10]
 8000b62:	07da      	lsls	r2, r3, #31
 8000b64:	d409      	bmi.n	8000b7a <_usb_ep0in+0xba>
 8000b66:	6ea1      	ldr	r1, [r4, #104]	; 0x68
 8000b68:	f8d1 2b00 	ldr.w	r2, [r1, #2816]	; 0xb00
 8000b6c:	f043 0301 	orr.w	r3, r3, #1
 8000b70:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8000b74:	8163      	strh	r3, [r4, #10]
 8000b76:	f8c1 2b00 	str.w	r2, [r1, #2816]	; 0xb00
 8000b7a:	2300      	movs	r3, #0
 8000b7c:	f383 8811 	msr	BASEPRI, r3
 8000b80:	bd38      	pop	{r3, r4, r5, pc}
 8000b82:	6e83      	ldr	r3, [r0, #104]	; 0x68
 8000b84:	6841      	ldr	r1, [r0, #4]
 8000b86:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8000b8a:	680d      	ldr	r5, [r1, #0]
 8000b8c:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000b90:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8000b94:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8000b98:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000b9c:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8000ba0:	b10d      	cbz	r5, 8000ba6 <_usb_ep0in+0xe6>
 8000ba2:	2105      	movs	r1, #5
 8000ba4:	47a8      	blx	r5
 8000ba6:	2306      	movs	r3, #6
 8000ba8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 8000bac:	bd38      	pop	{r3, r4, r5, pc}
 8000bae:	bf00      	nop

08000bb0 <usbStartTransmitI>:
 8000bb0:	2201      	movs	r2, #1
 8000bb2:	b570      	push	{r4, r5, r6, lr}
 8000bb4:	fa02 f301 	lsl.w	r3, r2, r1
 8000bb8:	8904      	ldrh	r4, [r0, #8]
 8000bba:	b29b      	uxth	r3, r3
 8000bbc:	ea14 0603 	ands.w	r6, r4, r3
 8000bc0:	d001      	beq.n	8000bc6 <usbStartTransmitI+0x16>
 8000bc2:	4610      	mov	r0, r2
 8000bc4:	bd70      	pop	{r4, r5, r6, pc}
 8000bc6:	4323      	orrs	r3, r4
 8000bc8:	8103      	strh	r3, [r0, #8]
 8000bca:	f7ff fe79 	bl	80008c0 <usb_lld_start_in>
 8000bce:	4630      	mov	r0, r6
 8000bd0:	bd70      	pop	{r4, r5, r6, pc}
 8000bd2:	bf00      	nop
	...

08000be0 <usbStartReceiveI>:
 8000be0:	2201      	movs	r2, #1
 8000be2:	b470      	push	{r4, r5, r6}
 8000be4:	fa02 f301 	lsl.w	r3, r2, r1
 8000be8:	8944      	ldrh	r4, [r0, #10]
 8000bea:	b29b      	uxth	r3, r3
 8000bec:	ea14 0603 	ands.w	r6, r4, r3
 8000bf0:	d002      	beq.n	8000bf8 <usbStartReceiveI+0x18>
 8000bf2:	4610      	mov	r0, r2
 8000bf4:	bc70      	pop	{r4, r5, r6}
 8000bf6:	4770      	bx	lr
 8000bf8:	6e85      	ldr	r5, [r0, #104]	; 0x68
 8000bfa:	eb05 1141 	add.w	r1, r5, r1, lsl #5
 8000bfe:	4323      	orrs	r3, r4
 8000c00:	f8d1 4b00 	ldr.w	r4, [r1, #2816]	; 0xb00
 8000c04:	8143      	strh	r3, [r0, #10]
 8000c06:	f044 6480 	orr.w	r4, r4, #67108864	; 0x4000000
 8000c0a:	4630      	mov	r0, r6
 8000c0c:	f8c1 4b00 	str.w	r4, [r1, #2816]	; 0xb00
 8000c10:	bc70      	pop	{r4, r5, r6}
 8000c12:	4770      	bx	lr
	...

08000c20 <inotify>:
 8000c20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c22:	6a04      	ldr	r4, [r0, #32]
 8000c24:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 8000c28:	6813      	ldr	r3, [r2, #0]
 8000c2a:	7819      	ldrb	r1, [r3, #0]
 8000c2c:	2904      	cmp	r1, #4
 8000c2e:	d000      	beq.n	8000c32 <inotify+0x12>
 8000c30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c32:	7a21      	ldrb	r1, [r4, #8]
 8000c34:	2902      	cmp	r1, #2
 8000c36:	d1fb      	bne.n	8000c30 <inotify+0x10>
 8000c38:	7950      	ldrb	r0, [r2, #5]
 8000c3a:	895a      	ldrh	r2, [r3, #10]
 8000c3c:	2501      	movs	r5, #1
 8000c3e:	fa05 f100 	lsl.w	r1, r5, r0
 8000c42:	400a      	ands	r2, r1
 8000c44:	d1f4      	bne.n	8000c30 <inotify+0x10>
 8000c46:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8000c4a:	69e1      	ldr	r1, [r4, #28]
 8000c4c:	68de      	ldr	r6, [r3, #12]
 8000c4e:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
 8000c52:	8a76      	ldrh	r6, [r6, #18]
 8000c54:	1acb      	subs	r3, r1, r3
 8000c56:	1a1b      	subs	r3, r3, r0
 8000c58:	429e      	cmp	r6, r3
 8000c5a:	d8e9      	bhi.n	8000c30 <inotify+0x10>
 8000c5c:	f382 8811 	msr	BASEPRI, r2
 8000c60:	fbb3 f3f6 	udiv	r3, r3, r6
 8000c64:	f8d4 1254 	ldr.w	r1, [r4, #596]	; 0x254
 8000c68:	6808      	ldr	r0, [r1, #0]
 8000c6a:	7949      	ldrb	r1, [r1, #5]
 8000c6c:	eb00 0781 	add.w	r7, r0, r1, lsl #2
 8000c70:	fb06 f303 	mul.w	r3, r6, r3
 8000c74:	68fe      	ldr	r6, [r7, #12]
 8000c76:	69b6      	ldr	r6, [r6, #24]
 8000c78:	f104 070c 	add.w	r7, r4, #12
 8000c7c:	6073      	str	r3, [r6, #4]
 8000c7e:	7035      	strb	r5, [r6, #0]
 8000c80:	e9c6 2702 	strd	r2, r7, [r6, #8]
 8000c84:	f7ff fe5c 	bl	8000940 <usb_lld_prepare_receive>
 8000c88:	2320      	movs	r3, #32
 8000c8a:	f383 8811 	msr	BASEPRI, r3
 8000c8e:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8000c92:	7959      	ldrb	r1, [r3, #5]
 8000c94:	6818      	ldr	r0, [r3, #0]
 8000c96:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8000c9a:	f7ff bfa1 	b.w	8000be0 <usbStartReceiveI>
 8000c9e:	bf00      	nop

08000ca0 <sduInterruptTransmitted>:
 8000ca0:	4770      	bx	lr
 8000ca2:	bf00      	nop
	...

08000cb0 <onotify>:
 8000cb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cb2:	6a04      	ldr	r4, [r0, #32]
 8000cb4:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 8000cb8:	6813      	ldr	r3, [r2, #0]
 8000cba:	7819      	ldrb	r1, [r3, #0]
 8000cbc:	2904      	cmp	r1, #4
 8000cbe:	d000      	beq.n	8000cc2 <onotify+0x12>
 8000cc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000cc2:	7a21      	ldrb	r1, [r4, #8]
 8000cc4:	2902      	cmp	r1, #2
 8000cc6:	d1fb      	bne.n	8000cc0 <onotify+0x10>
 8000cc8:	7912      	ldrb	r2, [r2, #4]
 8000cca:	8919      	ldrh	r1, [r3, #8]
 8000ccc:	2501      	movs	r5, #1
 8000cce:	fa05 f302 	lsl.w	r3, r5, r2
 8000cd2:	400b      	ands	r3, r1
 8000cd4:	d1f4      	bne.n	8000cc0 <onotify+0x10>
 8000cd6:	e9d4 020f 	ldrd	r0, r2, [r4, #60]	; 0x3c
 8000cda:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8000cdc:	1a12      	subs	r2, r2, r0
 8000cde:	1a52      	subs	r2, r2, r1
 8000ce0:	d0ee      	beq.n	8000cc0 <onotify+0x10>
 8000ce2:	f383 8811 	msr	BASEPRI, r3
 8000ce6:	f8d4 1254 	ldr.w	r1, [r4, #596]	; 0x254
 8000cea:	6808      	ldr	r0, [r1, #0]
 8000cec:	7909      	ldrb	r1, [r1, #4]
 8000cee:	eb00 0681 	add.w	r6, r0, r1, lsl #2
 8000cf2:	f104 0730 	add.w	r7, r4, #48	; 0x30
 8000cf6:	68f6      	ldr	r6, [r6, #12]
 8000cf8:	6976      	ldr	r6, [r6, #20]
 8000cfa:	e9c6 2301 	strd	r2, r3, [r6, #4]
 8000cfe:	7035      	strb	r5, [r6, #0]
 8000d00:	60f7      	str	r7, [r6, #12]
 8000d02:	f7ff fdf5 	bl	80008f0 <usb_lld_prepare_transmit>
 8000d06:	2320      	movs	r3, #32
 8000d08:	f383 8811 	msr	BASEPRI, r3
 8000d0c:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8000d10:	7919      	ldrb	r1, [r3, #4]
 8000d12:	6818      	ldr	r0, [r3, #0]
 8000d14:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8000d18:	f7ff bf4a 	b.w	8000bb0 <usbStartTransmitI>
 8000d1c:	0000      	movs	r0, r0
	...

08000d20 <sduRequestsHook>:
 8000d20:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
 8000d24:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8000d28:	2b20      	cmp	r3, #32
 8000d2a:	d001      	beq.n	8000d30 <sduRequestsHook+0x10>
 8000d2c:	2000      	movs	r0, #0
 8000d2e:	4770      	bx	lr
 8000d30:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
 8000d34:	2b20      	cmp	r3, #32
 8000d36:	d3f9      	bcc.n	8000d2c <sduRequestsHook+0xc>
 8000d38:	2b21      	cmp	r3, #33	; 0x21
 8000d3a:	d807      	bhi.n	8000d4c <sduRequestsHook+0x2c>
 8000d3c:	4b07      	ldr	r3, [pc, #28]	; (8000d5c <sduRequestsHook+0x3c>)
 8000d3e:	6503      	str	r3, [r0, #80]	; 0x50
 8000d40:	2207      	movs	r2, #7
 8000d42:	2300      	movs	r3, #0
 8000d44:	e9c0 2315 	strd	r2, r3, [r0, #84]	; 0x54
 8000d48:	2001      	movs	r0, #1
 8000d4a:	4770      	bx	lr
 8000d4c:	2b22      	cmp	r3, #34	; 0x22
 8000d4e:	d1ed      	bne.n	8000d2c <sduRequestsHook+0xc>
 8000d50:	2300      	movs	r3, #0
 8000d52:	e9c0 3314 	strd	r3, r3, [r0, #80]	; 0x50
 8000d56:	6583      	str	r3, [r0, #88]	; 0x58
 8000d58:	2001      	movs	r0, #1
 8000d5a:	4770      	bx	lr
 8000d5c:	20000834 	.word	0x20000834

08000d60 <_port_irq_epilogue>:
 8000d60:	2320      	movs	r3, #32
 8000d62:	f383 8811 	msr	BASEPRI, r3
 8000d66:	4b11      	ldr	r3, [pc, #68]	; (8000dac <_port_irq_epilogue+0x4c>)
 8000d68:	685b      	ldr	r3, [r3, #4]
 8000d6a:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 8000d6e:	d102      	bne.n	8000d76 <_port_irq_epilogue+0x16>
 8000d70:	f383 8811 	msr	BASEPRI, r3
 8000d74:	4770      	bx	lr
 8000d76:	b480      	push	{r7}
 8000d78:	af00      	add	r7, sp, #0
 8000d7a:	f3ef 8309 	mrs	r3, PSP
 8000d7e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000d82:	f843 2c04 	str.w	r2, [r3, #-4]
 8000d86:	f1a3 0220 	sub.w	r2, r3, #32
 8000d8a:	f382 8809 	msr	PSP, r2
 8000d8e:	4a08      	ldr	r2, [pc, #32]	; (8000db0 <_port_irq_epilogue+0x50>)
 8000d90:	6811      	ldr	r1, [r2, #0]
 8000d92:	6992      	ldr	r2, [r2, #24]
 8000d94:	6889      	ldr	r1, [r1, #8]
 8000d96:	6892      	ldr	r2, [r2, #8]
 8000d98:	4291      	cmp	r1, r2
 8000d9a:	bf8c      	ite	hi
 8000d9c:	4a05      	ldrhi	r2, [pc, #20]	; (8000db4 <_port_irq_epilogue+0x54>)
 8000d9e:	4a06      	ldrls	r2, [pc, #24]	; (8000db8 <_port_irq_epilogue+0x58>)
 8000da0:	f843 2c08 	str.w	r2, [r3, #-8]
 8000da4:	46bd      	mov	sp, r7
 8000da6:	bc80      	pop	{r7}
 8000da8:	4770      	bx	lr
 8000daa:	bf00      	nop
 8000dac:	e000ed00 	.word	0xe000ed00
 8000db0:	20001290 	.word	0x20001290
 8000db4:	080002a1 	.word	0x080002a1
 8000db8:	080002a4 	.word	0x080002a4
 8000dbc:	00000000 	.word	0x00000000

08000dc0 <VectorB0>:
 8000dc0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000dc4:	f04f 4680 	mov.w	r6, #1073741824	; 0x40000000
 8000dc8:	6933      	ldr	r3, [r6, #16]
 8000dca:	079b      	lsls	r3, r3, #30
 8000dcc:	d403      	bmi.n	8000dd6 <VectorB0+0x16>
 8000dce:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000dd2:	f7ff bfc5 	b.w	8000d60 <_port_irq_epilogue>
 8000dd6:	2500      	movs	r5, #0
 8000dd8:	6135      	str	r5, [r6, #16]
 8000dda:	2720      	movs	r7, #32
 8000ddc:	f387 8811 	msr	BASEPRI, r7
 8000de0:	4c1b      	ldr	r4, [pc, #108]	; (8000e50 <VectorB0+0x90>)
 8000de2:	6a71      	ldr	r1, [r6, #36]	; 0x24
 8000de4:	69e3      	ldr	r3, [r4, #28]
 8000de6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000de8:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8000dec:	1a88      	subs	r0, r1, r2
 8000dee:	4560      	cmp	r0, ip
 8000df0:	f104 081c 	add.w	r8, r4, #28
 8000df4:	d319      	bcc.n	8000e2a <VectorB0+0x6a>
 8000df6:	6819      	ldr	r1, [r3, #0]
 8000df8:	f8d3 900c 	ldr.w	r9, [r3, #12]
 8000dfc:	4462      	add	r2, ip
 8000dfe:	4541      	cmp	r1, r8
 8000e00:	62a2      	str	r2, [r4, #40]	; 0x28
 8000e02:	f8c1 8004 	str.w	r8, [r1, #4]
 8000e06:	61e1      	str	r1, [r4, #28]
 8000e08:	60dd      	str	r5, [r3, #12]
 8000e0a:	bf08      	it	eq
 8000e0c:	60f5      	streq	r5, [r6, #12]
 8000e0e:	f385 8811 	msr	BASEPRI, r5
 8000e12:	6918      	ldr	r0, [r3, #16]
 8000e14:	47c8      	blx	r9
 8000e16:	f387 8811 	msr	BASEPRI, r7
 8000e1a:	69e3      	ldr	r3, [r4, #28]
 8000e1c:	6a71      	ldr	r1, [r6, #36]	; 0x24
 8000e1e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000e20:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8000e24:	1a88      	subs	r0, r1, r2
 8000e26:	4584      	cmp	ip, r0
 8000e28:	d9e5      	bls.n	8000df6 <VectorB0+0x36>
 8000e2a:	4543      	cmp	r3, r8
 8000e2c:	d008      	beq.n	8000e40 <VectorB0+0x80>
 8000e2e:	4462      	add	r2, ip
 8000e30:	1a52      	subs	r2, r2, r1
 8000e32:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e36:	2a02      	cmp	r2, #2
 8000e38:	bf2c      	ite	cs
 8000e3a:	188a      	addcs	r2, r1, r2
 8000e3c:	1c8a      	addcc	r2, r1, #2
 8000e3e:	635a      	str	r2, [r3, #52]	; 0x34
 8000e40:	2300      	movs	r3, #0
 8000e42:	f383 8811 	msr	BASEPRI, r3
 8000e46:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000e4a:	f7ff bf89 	b.w	8000d60 <_port_irq_epilogue>
 8000e4e:	bf00      	nop
 8000e50:	20001290 	.word	0x20001290
	...

08000e60 <SVC_Handler>:
 8000e60:	b480      	push	{r7}
 8000e62:	af00      	add	r7, sp, #0
 8000e64:	f3ef 8309 	mrs	r3, PSP
 8000e68:	3320      	adds	r3, #32
 8000e6a:	f383 8809 	msr	PSP, r3
 8000e6e:	2300      	movs	r3, #0
 8000e70:	f383 8811 	msr	BASEPRI, r3
 8000e74:	46bd      	mov	sp, r7
 8000e76:	bc80      	pop	{r7}
 8000e78:	4770      	bx	lr
 8000e7a:	bf00      	nop
 8000e7c:	0000      	movs	r0, r0
	...

08000e80 <chPoolAlloc>:
 8000e80:	b508      	push	{r3, lr}
 8000e82:	2220      	movs	r2, #32
 8000e84:	4603      	mov	r3, r0
 8000e86:	f382 8811 	msr	BASEPRI, r2
 8000e8a:	6800      	ldr	r0, [r0, #0]
 8000e8c:	b128      	cbz	r0, 8000e9a <chPoolAlloc+0x1a>
 8000e8e:	6802      	ldr	r2, [r0, #0]
 8000e90:	601a      	str	r2, [r3, #0]
 8000e92:	2300      	movs	r3, #0
 8000e94:	f383 8811 	msr	BASEPRI, r3
 8000e98:	bd08      	pop	{r3, pc}
 8000e9a:	689a      	ldr	r2, [r3, #8]
 8000e9c:	2a00      	cmp	r2, #0
 8000e9e:	d0f8      	beq.n	8000e92 <chPoolAlloc+0x12>
 8000ea0:	6858      	ldr	r0, [r3, #4]
 8000ea2:	4790      	blx	r2
 8000ea4:	2300      	movs	r3, #0
 8000ea6:	f383 8811 	msr	BASEPRI, r3
 8000eaa:	bd08      	pop	{r3, pc}
 8000eac:	0000      	movs	r0, r0
	...

08000eb0 <pools1_execute>:
 8000eb0:	b570      	push	{r4, r5, r6, lr}
 8000eb2:	4b31      	ldr	r3, [pc, #196]	; (8000f78 <pools1_execute+0xc8>)
 8000eb4:	4c31      	ldr	r4, [pc, #196]	; (8000f7c <pools1_execute+0xcc>)
 8000eb6:	2205      	movs	r2, #5
 8000eb8:	2520      	movs	r5, #32
 8000eba:	2000      	movs	r0, #0
 8000ebc:	f385 8811 	msr	BASEPRI, r5
 8000ec0:	6821      	ldr	r1, [r4, #0]
 8000ec2:	6019      	str	r1, [r3, #0]
 8000ec4:	6023      	str	r3, [r4, #0]
 8000ec6:	f380 8811 	msr	BASEPRI, r0
 8000eca:	6861      	ldr	r1, [r4, #4]
 8000ecc:	3a01      	subs	r2, #1
 8000ece:	440b      	add	r3, r1
 8000ed0:	d1f4      	bne.n	8000ebc <pools1_execute+0xc>
 8000ed2:	4e2a      	ldr	r6, [pc, #168]	; (8000f7c <pools1_execute+0xcc>)
 8000ed4:	2505      	movs	r5, #5
 8000ed6:	4630      	mov	r0, r6
 8000ed8:	f7ff ffd2 	bl	8000e80 <chPoolAlloc>
 8000edc:	1c01      	adds	r1, r0, #0
 8000ede:	bf18      	it	ne
 8000ee0:	2101      	movne	r1, #1
 8000ee2:	2001      	movs	r0, #1
 8000ee4:	f7ff fc64 	bl	80007b0 <_test_assert>
 8000ee8:	bba0      	cbnz	r0, 8000f54 <pools1_execute+0xa4>
 8000eea:	3d01      	subs	r5, #1
 8000eec:	d1f3      	bne.n	8000ed6 <pools1_execute+0x26>
 8000eee:	4823      	ldr	r0, [pc, #140]	; (8000f7c <pools1_execute+0xcc>)
 8000ef0:	f7ff ffc6 	bl	8000e80 <chPoolAlloc>
 8000ef4:	fab0 f180 	clz	r1, r0
 8000ef8:	0949      	lsrs	r1, r1, #5
 8000efa:	2002      	movs	r0, #2
 8000efc:	f7ff fc58 	bl	80007b0 <_test_assert>
 8000f00:	bb40      	cbnz	r0, 8000f54 <pools1_execute+0xa4>
 8000f02:	4a1f      	ldr	r2, [pc, #124]	; (8000f80 <pools1_execute+0xd0>)
 8000f04:	4b1c      	ldr	r3, [pc, #112]	; (8000f78 <pools1_execute+0xc8>)
 8000f06:	f102 0610 	add.w	r6, r2, #16
 8000f0a:	2020      	movs	r0, #32
 8000f0c:	f380 8811 	msr	BASEPRI, r0
 8000f10:	6821      	ldr	r1, [r4, #0]
 8000f12:	6019      	str	r1, [r3, #0]
 8000f14:	6023      	str	r3, [r4, #0]
 8000f16:	f385 8811 	msr	BASEPRI, r5
 8000f1a:	4296      	cmp	r6, r2
 8000f1c:	d002      	beq.n	8000f24 <pools1_execute+0x74>
 8000f1e:	f852 3b04 	ldr.w	r3, [r2], #4
 8000f22:	e7f3      	b.n	8000f0c <pools1_execute+0x5c>
 8000f24:	4e15      	ldr	r6, [pc, #84]	; (8000f7c <pools1_execute+0xcc>)
 8000f26:	2505      	movs	r5, #5
 8000f28:	4630      	mov	r0, r6
 8000f2a:	f7ff ffa9 	bl	8000e80 <chPoolAlloc>
 8000f2e:	1c01      	adds	r1, r0, #0
 8000f30:	bf18      	it	ne
 8000f32:	2101      	movne	r1, #1
 8000f34:	2003      	movs	r0, #3
 8000f36:	f7ff fc3b 	bl	80007b0 <_test_assert>
 8000f3a:	b958      	cbnz	r0, 8000f54 <pools1_execute+0xa4>
 8000f3c:	3d01      	subs	r5, #1
 8000f3e:	d1f3      	bne.n	8000f28 <pools1_execute+0x78>
 8000f40:	480e      	ldr	r0, [pc, #56]	; (8000f7c <pools1_execute+0xcc>)
 8000f42:	f7ff ff9d 	bl	8000e80 <chPoolAlloc>
 8000f46:	fab0 f180 	clz	r1, r0
 8000f4a:	0949      	lsrs	r1, r1, #5
 8000f4c:	2004      	movs	r0, #4
 8000f4e:	f7ff fc2f 	bl	80007b0 <_test_assert>
 8000f52:	b100      	cbz	r0, 8000f56 <pools1_execute+0xa6>
 8000f54:	bd70      	pop	{r4, r5, r6, pc}
 8000f56:	2210      	movs	r2, #16
 8000f58:	4b0a      	ldr	r3, [pc, #40]	; (8000f84 <pools1_execute+0xd4>)
 8000f5a:	4808      	ldr	r0, [pc, #32]	; (8000f7c <pools1_execute+0xcc>)
 8000f5c:	60a3      	str	r3, [r4, #8]
 8000f5e:	e9c4 5200 	strd	r5, r2, [r4]
 8000f62:	f7ff ff8d 	bl	8000e80 <chPoolAlloc>
 8000f66:	fab0 f180 	clz	r1, r0
 8000f6a:	0949      	lsrs	r1, r1, #5
 8000f6c:	2005      	movs	r0, #5
 8000f6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000f72:	f7ff bc1d 	b.w	80007b0 <_test_assert>
 8000f76:	bf00      	nop
 8000f78:	200014f0 	.word	0x200014f0
 8000f7c:	2000089c 	.word	0x2000089c
 8000f80:	08008cb4 	.word	0x08008cb4
 8000f84:	080004a1 	.word	0x080004a1
	...

08000f90 <chEvtUnregister>:
 8000f90:	2320      	movs	r3, #32
 8000f92:	f383 8811 	msr	BASEPRI, r3
 8000f96:	4602      	mov	r2, r0
 8000f98:	e002      	b.n	8000fa0 <chEvtUnregister+0x10>
 8000f9a:	428b      	cmp	r3, r1
 8000f9c:	d007      	beq.n	8000fae <chEvtUnregister+0x1e>
 8000f9e:	461a      	mov	r2, r3
 8000fa0:	6813      	ldr	r3, [r2, #0]
 8000fa2:	4283      	cmp	r3, r0
 8000fa4:	d1f9      	bne.n	8000f9a <chEvtUnregister+0xa>
 8000fa6:	2300      	movs	r3, #0
 8000fa8:	f383 8811 	msr	BASEPRI, r3
 8000fac:	4770      	bx	lr
 8000fae:	680b      	ldr	r3, [r1, #0]
 8000fb0:	6013      	str	r3, [r2, #0]
 8000fb2:	2300      	movs	r3, #0
 8000fb4:	f383 8811 	msr	BASEPRI, r3
 8000fb8:	4770      	bx	lr
 8000fba:	bf00      	nop
 8000fbc:	0000      	movs	r0, r0
	...

08000fc0 <evt1_execute>:
 8000fc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000fc4:	4c33      	ldr	r4, [pc, #204]	; (8001094 <evt1_execute+0xd4>)
 8000fc6:	b08a      	sub	sp, #40	; 0x28
 8000fc8:	2020      	movs	r0, #32
 8000fca:	6024      	str	r4, [r4, #0]
 8000fcc:	f380 8811 	msr	BASEPRI, r0
 8000fd0:	4931      	ldr	r1, [pc, #196]	; (8001098 <evt1_execute+0xd8>)
 8000fd2:	6823      	ldr	r3, [r4, #0]
 8000fd4:	ad0a      	add	r5, sp, #40	; 0x28
 8000fd6:	2701      	movs	r7, #1
 8000fd8:	f845 3d14 	str.w	r3, [r5, #-20]!
 8000fdc:	698b      	ldr	r3, [r1, #24]
 8000fde:	9306      	str	r3, [sp, #24]
 8000fe0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000fe4:	2300      	movs	r3, #0
 8000fe6:	6025      	str	r5, [r4, #0]
 8000fe8:	e9cd 7307 	strd	r7, r3, [sp, #28]
 8000fec:	9209      	str	r2, [sp, #36]	; 0x24
 8000fee:	f383 8811 	msr	BASEPRI, r3
 8000ff2:	f380 8811 	msr	BASEPRI, r0
 8000ff6:	ae0a      	add	r6, sp, #40	; 0x28
 8000ff8:	6820      	ldr	r0, [r4, #0]
 8000ffa:	f846 0d28 	str.w	r0, [r6, #-40]!
 8000ffe:	6989      	ldr	r1, [r1, #24]
 8001000:	9101      	str	r1, [sp, #4]
 8001002:	f04f 0802 	mov.w	r8, #2
 8001006:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800100a:	6026      	str	r6, [r4, #0]
 800100c:	f8cd 8008 	str.w	r8, [sp, #8]
 8001010:	f383 8811 	msr	BASEPRI, r3
 8001014:	6821      	ldr	r1, [r4, #0]
 8001016:	1b09      	subs	r1, r1, r4
 8001018:	bf18      	it	ne
 800101a:	2101      	movne	r1, #1
 800101c:	4638      	mov	r0, r7
 800101e:	f7ff fbc7 	bl	80007b0 <_test_assert>
 8001022:	b110      	cbz	r0, 800102a <evt1_execute+0x6a>
 8001024:	b00a      	add	sp, #40	; 0x28
 8001026:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800102a:	4629      	mov	r1, r5
 800102c:	4620      	mov	r0, r4
 800102e:	f7ff ffaf 	bl	8000f90 <chEvtUnregister>
 8001032:	6821      	ldr	r1, [r4, #0]
 8001034:	1b09      	subs	r1, r1, r4
 8001036:	bf18      	it	ne
 8001038:	2101      	movne	r1, #1
 800103a:	4640      	mov	r0, r8
 800103c:	f7ff fbb8 	bl	80007b0 <_test_assert>
 8001040:	2800      	cmp	r0, #0
 8001042:	d1ef      	bne.n	8001024 <evt1_execute+0x64>
 8001044:	4631      	mov	r1, r6
 8001046:	4620      	mov	r0, r4
 8001048:	f7ff ffa2 	bl	8000f90 <chEvtUnregister>
 800104c:	6821      	ldr	r1, [r4, #0]
 800104e:	1b09      	subs	r1, r1, r4
 8001050:	fab1 f181 	clz	r1, r1
 8001054:	2003      	movs	r0, #3
 8001056:	0949      	lsrs	r1, r1, #5
 8001058:	f7ff fbaa 	bl	80007b0 <_test_assert>
 800105c:	2800      	cmp	r0, #0
 800105e:	d1e1      	bne.n	8001024 <evt1_execute+0x64>
 8001060:	4e0e      	ldr	r6, [pc, #56]	; (800109c <evt1_execute+0xdc>)
 8001062:	4604      	mov	r4, r0
 8001064:	2507      	movs	r5, #7
 8001066:	fa25 f304 	lsr.w	r3, r5, r4
 800106a:	f013 0f01 	tst.w	r3, #1
 800106e:	fa07 f204 	lsl.w	r2, r7, r4
 8001072:	4620      	mov	r0, r4
 8001074:	d00c      	beq.n	8001090 <evt1_execute+0xd0>
 8001076:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 800107a:	ea25 0502 	bic.w	r5, r5, r2
 800107e:	3401      	adds	r4, #1
 8001080:	4798      	blx	r3
 8001082:	2d00      	cmp	r5, #0
 8001084:	d1ef      	bne.n	8001066 <evt1_execute+0xa6>
 8001086:	4906      	ldr	r1, [pc, #24]	; (80010a0 <evt1_execute+0xe0>)
 8001088:	2004      	movs	r0, #4
 800108a:	f7ff fb69 	bl	8000760 <_test_assert_sequence>
 800108e:	e7c9      	b.n	8001024 <evt1_execute+0x64>
 8001090:	3401      	adds	r4, #1
 8001092:	e7e8      	b.n	8001066 <evt1_execute+0xa6>
 8001094:	20000808 	.word	0x20000808
 8001098:	20001290 	.word	0x20001290
 800109c:	08008060 	.word	0x08008060
 80010a0:	08008070 	.word	0x08008070
	...

080010b0 <chTMStopMeasurementX>:
 80010b0:	4b0e      	ldr	r3, [pc, #56]	; (80010ec <chTMStopMeasurementX+0x3c>)
 80010b2:	4a0f      	ldr	r2, [pc, #60]	; (80010f0 <chTMStopMeasurementX+0x40>)
 80010b4:	685b      	ldr	r3, [r3, #4]
 80010b6:	68c1      	ldr	r1, [r0, #12]
 80010b8:	b4f0      	push	{r4, r5, r6, r7}
 80010ba:	6884      	ldr	r4, [r0, #8]
 80010bc:	6f56      	ldr	r6, [r2, #116]	; 0x74
 80010be:	6842      	ldr	r2, [r0, #4]
 80010c0:	1b1b      	subs	r3, r3, r4
 80010c2:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
 80010c6:	1b9b      	subs	r3, r3, r6
 80010c8:	18e6      	adds	r6, r4, r3
 80010ca:	f145 0700 	adc.w	r7, r5, #0
 80010ce:	3101      	adds	r1, #1
 80010d0:	4293      	cmp	r3, r2
 80010d2:	e9c0 3102 	strd	r3, r1, [r0, #8]
 80010d6:	e9c0 6704 	strd	r6, r7, [r0, #16]
 80010da:	d805      	bhi.n	80010e8 <chTMStopMeasurementX+0x38>
 80010dc:	6802      	ldr	r2, [r0, #0]
 80010de:	4293      	cmp	r3, r2
 80010e0:	bf38      	it	cc
 80010e2:	6003      	strcc	r3, [r0, #0]
 80010e4:	bcf0      	pop	{r4, r5, r6, r7}
 80010e6:	4770      	bx	lr
 80010e8:	6043      	str	r3, [r0, #4]
 80010ea:	e7fb      	b.n	80010e4 <chTMStopMeasurementX+0x34>
 80010ec:	e0001000 	.word	0xe0001000
 80010f0:	20001290 	.word	0x20001290
	...

08001100 <chThdCreateI>:
 8001100:	3924      	subs	r1, #36	; 0x24
 8001102:	b4f0      	push	{r4, r5, r6, r7}
 8001104:	1845      	adds	r5, r0, r1
 8001106:	60c5      	str	r5, [r0, #12]
 8001108:	9e04      	ldr	r6, [sp, #16]
 800110a:	5043      	str	r3, [r0, r1]
 800110c:	4b0d      	ldr	r3, [pc, #52]	; (8001144 <chThdCreateI+0x44>)
 800110e:	490e      	ldr	r1, [pc, #56]	; (8001148 <chThdCreateI+0x48>)
 8001110:	606e      	str	r6, [r5, #4]
 8001112:	6229      	str	r1, [r5, #32]
 8001114:	6103      	str	r3, [r0, #16]
 8001116:	695d      	ldr	r5, [r3, #20]
 8001118:	63c2      	str	r2, [r0, #60]	; 0x3c
 800111a:	2101      	movs	r1, #1
 800111c:	6082      	str	r2, [r0, #8]
 800111e:	2702      	movs	r7, #2
 8001120:	f100 0624 	add.w	r6, r0, #36	; 0x24
 8001124:	2200      	movs	r2, #0
 8001126:	7781      	strb	r1, [r0, #30]
 8001128:	f100 0128 	add.w	r1, r0, #40	; 0x28
 800112c:	6145      	str	r5, [r0, #20]
 800112e:	8387      	strh	r7, [r0, #28]
 8001130:	e9c0 220d 	strd	r2, r2, [r0, #52]	; 0x34
 8001134:	6182      	str	r2, [r0, #24]
 8001136:	6128      	str	r0, [r5, #16]
 8001138:	6246      	str	r6, [r0, #36]	; 0x24
 800113a:	6158      	str	r0, [r3, #20]
 800113c:	e9c0 110a 	strd	r1, r1, [r0, #40]	; 0x28
 8001140:	bcf0      	pop	{r4, r5, r6, r7}
 8001142:	4770      	bx	lr
 8001144:	20001290 	.word	0x20001290
 8001148:	08000291 	.word	0x08000291
 800114c:	00000000 	.word	0x00000000

08001150 <wakeup>:
 8001150:	2320      	movs	r3, #32
 8001152:	f383 8811 	msr	BASEPRI, r3
 8001156:	7f03      	ldrb	r3, [r0, #28]
 8001158:	2b07      	cmp	r3, #7
 800115a:	d80e      	bhi.n	800117a <wakeup+0x2a>
 800115c:	e8df f003 	tbb	[pc, r3]
 8001160:	230d0d27 	.word	0x230d0d27
 8001164:	080d0408 	.word	0x080d0408
 8001168:	6a02      	ldr	r2, [r0, #32]
 800116a:	6893      	ldr	r3, [r2, #8]
 800116c:	3301      	adds	r3, #1
 800116e:	6093      	str	r3, [r2, #8]
 8001170:	e9d0 2300 	ldrd	r2, r3, [r0]
 8001174:	601a      	str	r2, [r3, #0]
 8001176:	6802      	ldr	r2, [r0, #0]
 8001178:	6053      	str	r3, [r2, #4]
 800117a:	b410      	push	{r4}
 800117c:	2200      	movs	r2, #0
 800117e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8001182:	6881      	ldr	r1, [r0, #8]
 8001184:	4b0c      	ldr	r3, [pc, #48]	; (80011b8 <wakeup+0x68>)
 8001186:	6204      	str	r4, [r0, #32]
 8001188:	7702      	strb	r2, [r0, #28]
 800118a:	681b      	ldr	r3, [r3, #0]
 800118c:	689a      	ldr	r2, [r3, #8]
 800118e:	428a      	cmp	r2, r1
 8001190:	d2fb      	bcs.n	800118a <wakeup+0x3a>
 8001192:	685a      	ldr	r2, [r3, #4]
 8001194:	2100      	movs	r1, #0
 8001196:	e9c0 3200 	strd	r3, r2, [r0]
 800119a:	6010      	str	r0, [r2, #0]
 800119c:	6058      	str	r0, [r3, #4]
 800119e:	f381 8811 	msr	BASEPRI, r1
 80011a2:	bc10      	pop	{r4}
 80011a4:	4770      	bx	lr
 80011a6:	6a03      	ldr	r3, [r0, #32]
 80011a8:	2200      	movs	r2, #0
 80011aa:	601a      	str	r2, [r3, #0]
 80011ac:	e7e5      	b.n	800117a <wakeup+0x2a>
 80011ae:	2300      	movs	r3, #0
 80011b0:	f383 8811 	msr	BASEPRI, r3
 80011b4:	4770      	bx	lr
 80011b6:	bf00      	nop
 80011b8:	20001290 	.word	0x20001290
 80011bc:	00000000 	.word	0x00000000

080011c0 <chSchReadyI>:
 80011c0:	4601      	mov	r1, r0
 80011c2:	2200      	movs	r2, #0
 80011c4:	4b06      	ldr	r3, [pc, #24]	; (80011e0 <chSchReadyI+0x20>)
 80011c6:	6880      	ldr	r0, [r0, #8]
 80011c8:	770a      	strb	r2, [r1, #28]
 80011ca:	681b      	ldr	r3, [r3, #0]
 80011cc:	689a      	ldr	r2, [r3, #8]
 80011ce:	4282      	cmp	r2, r0
 80011d0:	d2fb      	bcs.n	80011ca <chSchReadyI+0xa>
 80011d2:	685a      	ldr	r2, [r3, #4]
 80011d4:	4608      	mov	r0, r1
 80011d6:	e9c1 3200 	strd	r3, r2, [r1]
 80011da:	6011      	str	r1, [r2, #0]
 80011dc:	6059      	str	r1, [r3, #4]
 80011de:	4770      	bx	lr
 80011e0:	20001290 	.word	0x20001290
	...

080011f0 <chCondSignalI.constprop.47>:
 80011f0:	4b07      	ldr	r3, [pc, #28]	; (8001210 <chCondSignalI.constprop.47+0x20>)
 80011f2:	681a      	ldr	r2, [r3, #0]
 80011f4:	429a      	cmp	r2, r3
 80011f6:	d009      	beq.n	800120c <chCondSignalI.constprop.47+0x1c>
 80011f8:	6811      	ldr	r1, [r2, #0]
 80011fa:	b410      	push	{r4}
 80011fc:	2400      	movs	r4, #0
 80011fe:	604b      	str	r3, [r1, #4]
 8001200:	6019      	str	r1, [r3, #0]
 8001202:	6214      	str	r4, [r2, #32]
 8001204:	4610      	mov	r0, r2
 8001206:	bc10      	pop	{r4}
 8001208:	f7ff bfda 	b.w	80011c0 <chSchReadyI>
 800120c:	4770      	bx	lr
 800120e:	bf00      	nop
 8001210:	20000800 	.word	0x20000800
	...

08001220 <chIQPutI>:
 8001220:	b510      	push	{r4, lr}
 8001222:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 8001226:	42a2      	cmp	r2, r4
 8001228:	6883      	ldr	r3, [r0, #8]
 800122a:	d01c      	beq.n	8001266 <chIQPutI+0x46>
 800122c:	3301      	adds	r3, #1
 800122e:	1c54      	adds	r4, r2, #1
 8001230:	6083      	str	r3, [r0, #8]
 8001232:	6144      	str	r4, [r0, #20]
 8001234:	7011      	strb	r1, [r2, #0]
 8001236:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
 800123a:	429a      	cmp	r2, r3
 800123c:	d20c      	bcs.n	8001258 <chIQPutI+0x38>
 800123e:	6803      	ldr	r3, [r0, #0]
 8001240:	4298      	cmp	r0, r3
 8001242:	d00e      	beq.n	8001262 <chIQPutI+0x42>
 8001244:	681a      	ldr	r2, [r3, #0]
 8001246:	6002      	str	r2, [r0, #0]
 8001248:	2400      	movs	r4, #0
 800124a:	6050      	str	r0, [r2, #4]
 800124c:	4618      	mov	r0, r3
 800124e:	621c      	str	r4, [r3, #32]
 8001250:	f7ff ffb6 	bl	80011c0 <chSchReadyI>
 8001254:	4620      	mov	r0, r4
 8001256:	bd10      	pop	{r4, pc}
 8001258:	68c3      	ldr	r3, [r0, #12]
 800125a:	6143      	str	r3, [r0, #20]
 800125c:	6803      	ldr	r3, [r0, #0]
 800125e:	4298      	cmp	r0, r3
 8001260:	d1f0      	bne.n	8001244 <chIQPutI+0x24>
 8001262:	2000      	movs	r0, #0
 8001264:	bd10      	pop	{r4, pc}
 8001266:	2b00      	cmp	r3, #0
 8001268:	d0e0      	beq.n	800122c <chIQPutI+0xc>
 800126a:	f06f 0003 	mvn.w	r0, #3
 800126e:	bd10      	pop	{r4, pc}

08001270 <chOQGetI.constprop.18>:
 8001270:	b538      	push	{r3, r4, r5, lr}
 8001272:	4b11      	ldr	r3, [pc, #68]	; (80012b8 <chOQGetI.constprop.18+0x48>)
 8001274:	e9d3 0105 	ldrd	r0, r1, [r3, #20]
 8001278:	4288      	cmp	r0, r1
 800127a:	689a      	ldr	r2, [r3, #8]
 800127c:	d017      	beq.n	80012ae <chOQGetI.constprop.18+0x3e>
 800127e:	691d      	ldr	r5, [r3, #16]
 8001280:	1c48      	adds	r0, r1, #1
 8001282:	3201      	adds	r2, #1
 8001284:	609a      	str	r2, [r3, #8]
 8001286:	6198      	str	r0, [r3, #24]
 8001288:	42a8      	cmp	r0, r5
 800128a:	780c      	ldrb	r4, [r1, #0]
 800128c:	d20c      	bcs.n	80012a8 <chOQGetI.constprop.18+0x38>
 800128e:	681a      	ldr	r2, [r3, #0]
 8001290:	429a      	cmp	r2, r3
 8001292:	d007      	beq.n	80012a4 <chOQGetI.constprop.18+0x34>
 8001294:	6811      	ldr	r1, [r2, #0]
 8001296:	6019      	str	r1, [r3, #0]
 8001298:	2500      	movs	r5, #0
 800129a:	604b      	str	r3, [r1, #4]
 800129c:	4610      	mov	r0, r2
 800129e:	6215      	str	r5, [r2, #32]
 80012a0:	f7ff ff8e 	bl	80011c0 <chSchReadyI>
 80012a4:	4620      	mov	r0, r4
 80012a6:	bd38      	pop	{r3, r4, r5, pc}
 80012a8:	68da      	ldr	r2, [r3, #12]
 80012aa:	619a      	str	r2, [r3, #24]
 80012ac:	e7ef      	b.n	800128e <chOQGetI.constprop.18+0x1e>
 80012ae:	2a00      	cmp	r2, #0
 80012b0:	d0e5      	beq.n	800127e <chOQGetI.constprop.18+0xe>
 80012b2:	f06f 0002 	mvn.w	r0, #2
 80012b6:	bd38      	pop	{r3, r4, r5, pc}
 80012b8:	200008a8 	.word	0x200008a8
 80012bc:	00000000 	.word	0x00000000

080012c0 <otg_epin_handler.constprop.6>:
 80012c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012c4:	4d32      	ldr	r5, [pc, #200]	; (8001390 <otg_epin_handler.constprop.6+0xd0>)
 80012c6:	6eae      	ldr	r6, [r5, #104]	; 0x68
 80012c8:	eb06 1340 	add.w	r3, r6, r0, lsl #5
 80012cc:	4607      	mov	r7, r0
 80012ce:	f8d3 4908 	ldr.w	r4, [r3, #2312]	; 0x908
 80012d2:	f8c3 4908 	str.w	r4, [r3, #2312]	; 0x908
 80012d6:	07e1      	lsls	r1, r4, #31
 80012d8:	d516      	bpl.n	8001308 <otg_epin_handler.constprop.6+0x48>
 80012da:	f8d6 3810 	ldr.w	r3, [r6, #2064]	; 0x810
 80012de:	07da      	lsls	r2, r3, #31
 80012e0:	d512      	bpl.n	8001308 <otg_epin_handler.constprop.6+0x48>
 80012e2:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80012e6:	68d9      	ldr	r1, [r3, #12]
 80012e8:	694b      	ldr	r3, [r1, #20]
 80012ea:	6858      	ldr	r0, [r3, #4]
 80012ec:	691a      	ldr	r2, [r3, #16]
 80012ee:	4290      	cmp	r0, r2
 80012f0:	d32e      	bcc.n	8001350 <otg_epin_handler.constprop.6+0x90>
 80012f2:	892b      	ldrh	r3, [r5, #8]
 80012f4:	f8d1 8008 	ldr.w	r8, [r1, #8]
 80012f8:	2201      	movs	r2, #1
 80012fa:	40ba      	lsls	r2, r7
 80012fc:	ea23 0302 	bic.w	r3, r3, r2
 8001300:	812b      	strh	r3, [r5, #8]
 8001302:	4639      	mov	r1, r7
 8001304:	4628      	mov	r0, r5
 8001306:	47c0      	blx	r8
 8001308:	0623      	lsls	r3, r4, #24
 800130a:	d506      	bpl.n	800131a <otg_epin_handler.constprop.6+0x5a>
 800130c:	2301      	movs	r3, #1
 800130e:	f8d6 2834 	ldr.w	r2, [r6, #2100]	; 0x834
 8001312:	fa03 f707 	lsl.w	r7, r3, r7
 8001316:	4217      	tst	r7, r2
 8001318:	d101      	bne.n	800131e <otg_epin_handler.constprop.6+0x5e>
 800131a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800131e:	2320      	movs	r3, #32
 8001320:	f383 8811 	msr	BASEPRI, r3
 8001324:	6f6a      	ldr	r2, [r5, #116]	; 0x74
 8001326:	f8d6 3834 	ldr.w	r3, [r6, #2100]	; 0x834
 800132a:	6fa9      	ldr	r1, [r5, #120]	; 0x78
 800132c:	433a      	orrs	r2, r7
 800132e:	ea23 0707 	bic.w	r7, r3, r7
 8001332:	676a      	str	r2, [r5, #116]	; 0x74
 8001334:	f8c6 7834 	str.w	r7, [r6, #2100]	; 0x834
 8001338:	b129      	cbz	r1, 8001346 <otg_epin_handler.constprop.6+0x86>
 800133a:	2300      	movs	r3, #0
 800133c:	67ab      	str	r3, [r5, #120]	; 0x78
 800133e:	4608      	mov	r0, r1
 8001340:	620b      	str	r3, [r1, #32]
 8001342:	f7ff ff3d 	bl	80011c0 <chSchReadyI>
 8001346:	2300      	movs	r3, #0
 8001348:	f383 8811 	msr	BASEPRI, r3
 800134c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001350:	1a12      	subs	r2, r2, r0
 8001352:	f04f 0800 	mov.w	r8, #0
 8001356:	e9c3 2801 	strd	r2, r8, [r3, #4]
 800135a:	4639      	mov	r1, r7
 800135c:	4628      	mov	r0, r5
 800135e:	f7ff fac7 	bl	80008f0 <usb_lld_prepare_transmit>
 8001362:	2320      	movs	r3, #32
 8001364:	f383 8811 	msr	BASEPRI, r3
 8001368:	6eaa      	ldr	r2, [r5, #104]	; 0x68
 800136a:	eb02 1047 	add.w	r0, r2, r7, lsl #5
 800136e:	2301      	movs	r3, #1
 8001370:	f8d0 1900 	ldr.w	r1, [r0, #2304]	; 0x900
 8001374:	f041 4104 	orr.w	r1, r1, #2214592512	; 0x84000000
 8001378:	f8c0 1900 	str.w	r1, [r0, #2304]	; 0x900
 800137c:	f8d2 1834 	ldr.w	r1, [r2, #2100]	; 0x834
 8001380:	40bb      	lsls	r3, r7
 8001382:	430b      	orrs	r3, r1
 8001384:	f8c2 3834 	str.w	r3, [r2, #2100]	; 0x834
 8001388:	f388 8811 	msr	BASEPRI, r8
 800138c:	e7bc      	b.n	8001308 <otg_epin_handler.constprop.6+0x48>
 800138e:	bf00      	nop
 8001390:	200010c8 	.word	0x200010c8
	...

080013a0 <chEvtSignalI>:
 80013a0:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80013a2:	7f02      	ldrb	r2, [r0, #28]
 80013a4:	4319      	orrs	r1, r3
 80013a6:	2a0a      	cmp	r2, #10
 80013a8:	6341      	str	r1, [r0, #52]	; 0x34
 80013aa:	d009      	beq.n	80013c0 <chEvtSignalI+0x20>
 80013ac:	2a0b      	cmp	r2, #11
 80013ae:	d000      	beq.n	80013b2 <chEvtSignalI+0x12>
 80013b0:	4770      	bx	lr
 80013b2:	6a03      	ldr	r3, [r0, #32]
 80013b4:	438b      	bics	r3, r1
 80013b6:	d1fb      	bne.n	80013b0 <chEvtSignalI+0x10>
 80013b8:	2300      	movs	r3, #0
 80013ba:	6203      	str	r3, [r0, #32]
 80013bc:	f7ff bf00 	b.w	80011c0 <chSchReadyI>
 80013c0:	6a03      	ldr	r3, [r0, #32]
 80013c2:	4219      	tst	r1, r3
 80013c4:	d1f8      	bne.n	80013b8 <chEvtSignalI+0x18>
 80013c6:	4770      	bx	lr
	...

080013d0 <chEvtBroadcastFlagsI>:
 80013d0:	b570      	push	{r4, r5, r6, lr}
 80013d2:	6804      	ldr	r4, [r0, #0]
 80013d4:	42a0      	cmp	r0, r4
 80013d6:	d00f      	beq.n	80013f8 <chEvtBroadcastFlagsI+0x28>
 80013d8:	4606      	mov	r6, r0
 80013da:	460d      	mov	r5, r1
 80013dc:	68e3      	ldr	r3, [r4, #12]
 80013de:	432b      	orrs	r3, r5
 80013e0:	60e3      	str	r3, [r4, #12]
 80013e2:	b115      	cbz	r5, 80013ea <chEvtBroadcastFlagsI+0x1a>
 80013e4:	6922      	ldr	r2, [r4, #16]
 80013e6:	4213      	tst	r3, r2
 80013e8:	d003      	beq.n	80013f2 <chEvtBroadcastFlagsI+0x22>
 80013ea:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 80013ee:	f7ff ffd7 	bl	80013a0 <chEvtSignalI>
 80013f2:	6824      	ldr	r4, [r4, #0]
 80013f4:	42a6      	cmp	r6, r4
 80013f6:	d1f1      	bne.n	80013dc <chEvtBroadcastFlagsI+0xc>
 80013f8:	bd70      	pop	{r4, r5, r6, pc}
 80013fa:	bf00      	nop
 80013fc:	0000      	movs	r0, r0
	...

08001400 <sduDataReceived>:
 8001400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001402:	f101 030d 	add.w	r3, r1, #13
 8001406:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
 800140a:	b1bc      	cbz	r4, 800143c <sduDataReceived+0x3c>
 800140c:	4607      	mov	r7, r0
 800140e:	460d      	mov	r5, r1
 8001410:	2620      	movs	r6, #32
 8001412:	f386 8811 	msr	BASEPRI, r6
 8001416:	2104      	movs	r1, #4
 8001418:	1860      	adds	r0, r4, r1
 800141a:	f7ff ffd9 	bl	80013d0 <chEvtBroadcastFlagsI>
 800141e:	eb07 0c85 	add.w	ip, r7, r5, lsl #2
 8001422:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8001426:	69e2      	ldr	r2, [r4, #28]
 8001428:	f8dc 100c 	ldr.w	r1, [ip, #12]
 800142c:	1a12      	subs	r2, r2, r0
 800142e:	8a49      	ldrh	r1, [r1, #18]
 8001430:	1ad3      	subs	r3, r2, r3
 8001432:	4299      	cmp	r1, r3
 8001434:	d903      	bls.n	800143e <sduDataReceived+0x3e>
 8001436:	2300      	movs	r3, #0
 8001438:	f383 8811 	msr	BASEPRI, r3
 800143c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800143e:	2000      	movs	r0, #0
 8001440:	f380 8811 	msr	BASEPRI, r0
 8001444:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8001448:	fbb3 f3f1 	udiv	r3, r3, r1
 800144c:	6992      	ldr	r2, [r2, #24]
 800144e:	fb01 f303 	mul.w	r3, r1, r3
 8001452:	340c      	adds	r4, #12
 8001454:	2101      	movs	r1, #1
 8001456:	e9c2 3001 	strd	r3, r0, [r2, #4]
 800145a:	7011      	strb	r1, [r2, #0]
 800145c:	60d4      	str	r4, [r2, #12]
 800145e:	4629      	mov	r1, r5
 8001460:	4638      	mov	r0, r7
 8001462:	f7ff fa6d 	bl	8000940 <usb_lld_prepare_receive>
 8001466:	f386 8811 	msr	BASEPRI, r6
 800146a:	4629      	mov	r1, r5
 800146c:	4638      	mov	r0, r7
 800146e:	f7ff fbb7 	bl	8000be0 <usbStartReceiveI>
 8001472:	2300      	movs	r3, #0
 8001474:	f383 8811 	msr	BASEPRI, r3
 8001478:	e7e0      	b.n	800143c <sduDataReceived+0x3c>
 800147a:	bf00      	nop
 800147c:	0000      	movs	r0, r0
	...

08001480 <sduDataTransmitted>:
 8001480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001482:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8001486:	6a1c      	ldr	r4, [r3, #32]
 8001488:	b37c      	cbz	r4, 80014ea <sduDataTransmitted+0x6a>
 800148a:	460e      	mov	r6, r1
 800148c:	4605      	mov	r5, r0
 800148e:	2720      	movs	r7, #32
 8001490:	f387 8811 	msr	BASEPRI, r7
 8001494:	2108      	movs	r1, #8
 8001496:	1d20      	adds	r0, r4, #4
 8001498:	f7ff ff9a 	bl	80013d0 <chEvtBroadcastFlagsI>
 800149c:	e9d4 130f 	ldrd	r1, r3, [r4, #60]	; 0x3c
 80014a0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80014a2:	1a5b      	subs	r3, r3, r1
 80014a4:	1a9b      	subs	r3, r3, r2
 80014a6:	d121      	bne.n	80014ec <sduDataTransmitted+0x6c>
 80014a8:	eb05 0186 	add.w	r1, r5, r6, lsl #2
 80014ac:	68cb      	ldr	r3, [r1, #12]
 80014ae:	695a      	ldr	r2, [r3, #20]
 80014b0:	6852      	ldr	r2, [r2, #4]
 80014b2:	b1ba      	cbz	r2, 80014e4 <sduDataTransmitted+0x64>
 80014b4:	8a1b      	ldrh	r3, [r3, #16]
 80014b6:	3b01      	subs	r3, #1
 80014b8:	4013      	ands	r3, r2
 80014ba:	d113      	bne.n	80014e4 <sduDataTransmitted+0x64>
 80014bc:	f383 8811 	msr	BASEPRI, r3
 80014c0:	68ca      	ldr	r2, [r1, #12]
 80014c2:	6952      	ldr	r2, [r2, #20]
 80014c4:	e9c2 3301 	strd	r3, r3, [r2, #4]
 80014c8:	3430      	adds	r4, #48	; 0x30
 80014ca:	2101      	movs	r1, #1
 80014cc:	60d4      	str	r4, [r2, #12]
 80014ce:	7011      	strb	r1, [r2, #0]
 80014d0:	4631      	mov	r1, r6
 80014d2:	4628      	mov	r0, r5
 80014d4:	f7ff fa0c 	bl	80008f0 <usb_lld_prepare_transmit>
 80014d8:	f387 8811 	msr	BASEPRI, r7
 80014dc:	4631      	mov	r1, r6
 80014de:	4628      	mov	r0, r5
 80014e0:	f7ff fb66 	bl	8000bb0 <usbStartTransmitI>
 80014e4:	2300      	movs	r3, #0
 80014e6:	f383 8811 	msr	BASEPRI, r3
 80014ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80014ec:	2100      	movs	r1, #0
 80014ee:	f381 8811 	msr	BASEPRI, r1
 80014f2:	eb05 0286 	add.w	r2, r5, r6, lsl #2
 80014f6:	3430      	adds	r4, #48	; 0x30
 80014f8:	68d2      	ldr	r2, [r2, #12]
 80014fa:	6952      	ldr	r2, [r2, #20]
 80014fc:	2001      	movs	r0, #1
 80014fe:	60d4      	str	r4, [r2, #12]
 8001500:	e9c2 3101 	strd	r3, r1, [r2, #4]
 8001504:	7010      	strb	r0, [r2, #0]
 8001506:	e7e3      	b.n	80014d0 <sduDataTransmitted+0x50>
	...

08001510 <chMtxUnlockS>:
 8001510:	4b12      	ldr	r3, [pc, #72]	; (800155c <chMtxUnlockS+0x4c>)
 8001512:	b430      	push	{r4, r5}
 8001514:	6804      	ldr	r4, [r0, #0]
 8001516:	699d      	ldr	r5, [r3, #24]
 8001518:	68c3      	ldr	r3, [r0, #12]
 800151a:	63ab      	str	r3, [r5, #56]	; 0x38
 800151c:	4284      	cmp	r4, r0
 800151e:	d018      	beq.n	8001552 <chMtxUnlockS+0x42>
 8001520:	4601      	mov	r1, r0
 8001522:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 8001524:	b14b      	cbz	r3, 800153a <chMtxUnlockS+0x2a>
 8001526:	681a      	ldr	r2, [r3, #0]
 8001528:	4293      	cmp	r3, r2
 800152a:	d003      	beq.n	8001534 <chMtxUnlockS+0x24>
 800152c:	6892      	ldr	r2, [r2, #8]
 800152e:	4290      	cmp	r0, r2
 8001530:	bf38      	it	cc
 8001532:	4610      	movcc	r0, r2
 8001534:	68db      	ldr	r3, [r3, #12]
 8001536:	2b00      	cmp	r3, #0
 8001538:	d1f5      	bne.n	8001526 <chMtxUnlockS+0x16>
 800153a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800153c:	6823      	ldr	r3, [r4, #0]
 800153e:	60a8      	str	r0, [r5, #8]
 8001540:	600b      	str	r3, [r1, #0]
 8001542:	4620      	mov	r0, r4
 8001544:	6059      	str	r1, [r3, #4]
 8001546:	e9c1 4202 	strd	r4, r2, [r1, #8]
 800154a:	63a1      	str	r1, [r4, #56]	; 0x38
 800154c:	bc30      	pop	{r4, r5}
 800154e:	f7ff be37 	b.w	80011c0 <chSchReadyI>
 8001552:	2300      	movs	r3, #0
 8001554:	60a3      	str	r3, [r4, #8]
 8001556:	bc30      	pop	{r4, r5}
 8001558:	4770      	bx	lr
 800155a:	bf00      	nop
 800155c:	20001290 	.word	0x20001290

08001560 <chSemSignalI>:
 8001560:	6883      	ldr	r3, [r0, #8]
 8001562:	3301      	adds	r3, #1
 8001564:	2b00      	cmp	r3, #0
 8001566:	6083      	str	r3, [r0, #8]
 8001568:	dd00      	ble.n	800156c <chSemSignalI+0xc>
 800156a:	4770      	bx	lr
 800156c:	6803      	ldr	r3, [r0, #0]
 800156e:	681a      	ldr	r2, [r3, #0]
 8001570:	6002      	str	r2, [r0, #0]
 8001572:	2100      	movs	r1, #0
 8001574:	6050      	str	r0, [r2, #4]
 8001576:	4618      	mov	r0, r3
 8001578:	6219      	str	r1, [r3, #32]
 800157a:	f7ff be21 	b.w	80011c0 <chSchReadyI>
 800157e:	bf00      	nop

08001580 <chMBPostI.constprop.23>:
 8001580:	b538      	push	{r3, r4, r5, lr}
 8001582:	4b0c      	ldr	r3, [pc, #48]	; (80015b4 <chMBPostI.constprop.23+0x34>)
 8001584:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001586:	2a00      	cmp	r2, #0
 8001588:	dd10      	ble.n	80015ac <chMBPostI.constprop.23+0x2c>
 800158a:	e9d3 5401 	ldrd	r5, r4, [r3, #4]
 800158e:	1d21      	adds	r1, r4, #4
 8001590:	3a01      	subs	r2, #1
 8001592:	42a9      	cmp	r1, r5
 8001594:	625a      	str	r2, [r3, #36]	; 0x24
 8001596:	6099      	str	r1, [r3, #8]
 8001598:	bf28      	it	cs
 800159a:	681a      	ldrcs	r2, [r3, #0]
 800159c:	6020      	str	r0, [r4, #0]
 800159e:	4806      	ldr	r0, [pc, #24]	; (80015b8 <chMBPostI.constprop.23+0x38>)
 80015a0:	bf28      	it	cs
 80015a2:	609a      	strcs	r2, [r3, #8]
 80015a4:	f7ff ffdc 	bl	8001560 <chSemSignalI>
 80015a8:	2000      	movs	r0, #0
 80015aa:	bd38      	pop	{r3, r4, r5, pc}
 80015ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80015b0:	bd38      	pop	{r3, r4, r5, pc}
 80015b2:	bf00      	nop
 80015b4:	20000874 	.word	0x20000874
 80015b8:	20000884 	.word	0x20000884
 80015bc:	00000000 	.word	0x00000000

080015c0 <chMBPostAheadI.constprop.21>:
 80015c0:	4a0c      	ldr	r2, [pc, #48]	; (80015f4 <chMBPostAheadI.constprop.21+0x34>)
 80015c2:	6a51      	ldr	r1, [r2, #36]	; 0x24
 80015c4:	2900      	cmp	r1, #0
 80015c6:	dd11      	ble.n	80015ec <chMBPostAheadI.constprop.21+0x2c>
 80015c8:	68d3      	ldr	r3, [r2, #12]
 80015ca:	b510      	push	{r4, lr}
 80015cc:	6814      	ldr	r4, [r2, #0]
 80015ce:	3b04      	subs	r3, #4
 80015d0:	3901      	subs	r1, #1
 80015d2:	42a3      	cmp	r3, r4
 80015d4:	6251      	str	r1, [r2, #36]	; 0x24
 80015d6:	60d3      	str	r3, [r2, #12]
 80015d8:	d202      	bcs.n	80015e0 <chMBPostAheadI.constprop.21+0x20>
 80015da:	6853      	ldr	r3, [r2, #4]
 80015dc:	3b04      	subs	r3, #4
 80015de:	60d3      	str	r3, [r2, #12]
 80015e0:	6018      	str	r0, [r3, #0]
 80015e2:	4805      	ldr	r0, [pc, #20]	; (80015f8 <chMBPostAheadI.constprop.21+0x38>)
 80015e4:	f7ff ffbc 	bl	8001560 <chSemSignalI>
 80015e8:	2000      	movs	r0, #0
 80015ea:	bd10      	pop	{r4, pc}
 80015ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80015f0:	4770      	bx	lr
 80015f2:	bf00      	nop
 80015f4:	20000874 	.word	0x20000874
 80015f8:	20000884 	.word	0x20000884
 80015fc:	00000000 	.word	0x00000000

08001600 <chMBFetchI.constprop.19>:
 8001600:	4b0c      	ldr	r3, [pc, #48]	; (8001634 <chMBFetchI.constprop.19+0x34>)
 8001602:	6999      	ldr	r1, [r3, #24]
 8001604:	2900      	cmp	r1, #0
 8001606:	dd12      	ble.n	800162e <chMBFetchI.constprop.19+0x2e>
 8001608:	b510      	push	{r4, lr}
 800160a:	68da      	ldr	r2, [r3, #12]
 800160c:	3901      	subs	r1, #1
 800160e:	6199      	str	r1, [r3, #24]
 8001610:	6859      	ldr	r1, [r3, #4]
 8001612:	6814      	ldr	r4, [r2, #0]
 8001614:	3204      	adds	r2, #4
 8001616:	428a      	cmp	r2, r1
 8001618:	60da      	str	r2, [r3, #12]
 800161a:	6004      	str	r4, [r0, #0]
 800161c:	bf28      	it	cs
 800161e:	681a      	ldrcs	r2, [r3, #0]
 8001620:	4805      	ldr	r0, [pc, #20]	; (8001638 <chMBFetchI.constprop.19+0x38>)
 8001622:	bf28      	it	cs
 8001624:	60da      	strcs	r2, [r3, #12]
 8001626:	f7ff ff9b 	bl	8001560 <chSemSignalI>
 800162a:	2000      	movs	r0, #0
 800162c:	bd10      	pop	{r4, pc}
 800162e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001632:	4770      	bx	lr
 8001634:	20000874 	.word	0x20000874
 8001638:	20000890 	.word	0x20000890
 800163c:	00000000 	.word	0x00000000

08001640 <chSemResetI>:
 8001640:	b570      	push	{r4, r5, r6, lr}
 8001642:	6885      	ldr	r5, [r0, #8]
 8001644:	6081      	str	r1, [r0, #8]
 8001646:	3501      	adds	r5, #1
 8001648:	2d00      	cmp	r5, #0
 800164a:	dc0c      	bgt.n	8001666 <chSemResetI+0x26>
 800164c:	4604      	mov	r4, r0
 800164e:	f06f 0601 	mvn.w	r6, #1
 8001652:	6860      	ldr	r0, [r4, #4]
 8001654:	6843      	ldr	r3, [r0, #4]
 8001656:	6063      	str	r3, [r4, #4]
 8001658:	601c      	str	r4, [r3, #0]
 800165a:	f7ff fdb1 	bl	80011c0 <chSchReadyI>
 800165e:	3501      	adds	r5, #1
 8001660:	2d01      	cmp	r5, #1
 8001662:	6206      	str	r6, [r0, #32]
 8001664:	d1f5      	bne.n	8001652 <chSemResetI+0x12>
 8001666:	bd70      	pop	{r4, r5, r6, pc}
	...

08001670 <chThdDequeueAllI>:
 8001670:	b538      	push	{r3, r4, r5, lr}
 8001672:	6803      	ldr	r3, [r0, #0]
 8001674:	4298      	cmp	r0, r3
 8001676:	d00b      	beq.n	8001690 <chThdDequeueAllI+0x20>
 8001678:	4604      	mov	r4, r0
 800167a:	460d      	mov	r5, r1
 800167c:	681a      	ldr	r2, [r3, #0]
 800167e:	6022      	str	r2, [r4, #0]
 8001680:	4618      	mov	r0, r3
 8001682:	6054      	str	r4, [r2, #4]
 8001684:	621d      	str	r5, [r3, #32]
 8001686:	f7ff fd9b 	bl	80011c0 <chSchReadyI>
 800168a:	6823      	ldr	r3, [r4, #0]
 800168c:	429c      	cmp	r4, r3
 800168e:	d1f5      	bne.n	800167c <chThdDequeueAllI+0xc>
 8001690:	bd38      	pop	{r3, r4, r5, pc}
 8001692:	bf00      	nop
	...

080016a0 <chVTDoResetI>:
 80016a0:	4b1a      	ldr	r3, [pc, #104]	; (800170c <chVTDoResetI+0x6c>)
 80016a2:	69da      	ldr	r2, [r3, #28]
 80016a4:	4282      	cmp	r2, r0
 80016a6:	b410      	push	{r4}
 80016a8:	d00f      	beq.n	80016ca <chVTDoResetI+0x2a>
 80016aa:	e9d0 2100 	ldrd	r2, r1, [r0]
 80016ae:	600a      	str	r2, [r1, #0]
 80016b0:	6802      	ldr	r2, [r0, #0]
 80016b2:	331c      	adds	r3, #28
 80016b4:	2400      	movs	r4, #0
 80016b6:	429a      	cmp	r2, r3
 80016b8:	6051      	str	r1, [r2, #4]
 80016ba:	60c4      	str	r4, [r0, #12]
 80016bc:	d003      	beq.n	80016c6 <chVTDoResetI+0x26>
 80016be:	6881      	ldr	r1, [r0, #8]
 80016c0:	6893      	ldr	r3, [r2, #8]
 80016c2:	440b      	add	r3, r1
 80016c4:	6093      	str	r3, [r2, #8]
 80016c6:	bc10      	pop	{r4}
 80016c8:	4770      	bx	lr
 80016ca:	4618      	mov	r0, r3
 80016cc:	6811      	ldr	r1, [r2, #0]
 80016ce:	f840 1f1c 	str.w	r1, [r0, #28]!
 80016d2:	2400      	movs	r4, #0
 80016d4:	4281      	cmp	r1, r0
 80016d6:	6048      	str	r0, [r1, #4]
 80016d8:	60d4      	str	r4, [r2, #12]
 80016da:	d012      	beq.n	8001702 <chVTDoResetI+0x62>
 80016dc:	6894      	ldr	r4, [r2, #8]
 80016de:	6888      	ldr	r0, [r1, #8]
 80016e0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80016e2:	1903      	adds	r3, r0, r4
 80016e4:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 80016e8:	608b      	str	r3, [r1, #8]
 80016ea:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80016ec:	1a8a      	subs	r2, r1, r2
 80016ee:	4293      	cmp	r3, r2
 80016f0:	d9e9      	bls.n	80016c6 <chVTDoResetI+0x26>
 80016f2:	1a9b      	subs	r3, r3, r2
 80016f4:	2b02      	cmp	r3, #2
 80016f6:	bf2c      	ite	cs
 80016f8:	18cb      	addcs	r3, r1, r3
 80016fa:	1c8b      	addcc	r3, r1, #2
 80016fc:	6363      	str	r3, [r4, #52]	; 0x34
 80016fe:	bc10      	pop	{r4}
 8001700:	4770      	bx	lr
 8001702:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001706:	60dc      	str	r4, [r3, #12]
 8001708:	e7dd      	b.n	80016c6 <chVTDoResetI+0x26>
 800170a:	bf00      	nop
 800170c:	20001290 	.word	0x20001290

08001710 <chVTDoSetI>:
 8001710:	b4f0      	push	{r4, r5, r6, r7}
 8001712:	4d1c      	ldr	r5, [pc, #112]	; (8001784 <chVTDoSetI+0x74>)
 8001714:	462e      	mov	r6, r5
 8001716:	2902      	cmp	r1, #2
 8001718:	f856 4f1c 	ldr.w	r4, [r6, #28]!
 800171c:	6103      	str	r3, [r0, #16]
 800171e:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 8001722:	bf38      	it	cc
 8001724:	2102      	movcc	r1, #2
 8001726:	42b4      	cmp	r4, r6
 8001728:	60c2      	str	r2, [r0, #12]
 800172a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800172c:	d01b      	beq.n	8001766 <chVTDoSetI+0x56>
 800172e:	6aae      	ldr	r6, [r5, #40]	; 0x28
 8001730:	68a2      	ldr	r2, [r4, #8]
 8001732:	4419      	add	r1, r3
 8001734:	1b8b      	subs	r3, r1, r6
 8001736:	429a      	cmp	r2, r3
 8001738:	d903      	bls.n	8001742 <chVTDoSetI+0x32>
 800173a:	e012      	b.n	8001762 <chVTDoSetI+0x52>
 800173c:	6824      	ldr	r4, [r4, #0]
 800173e:	1a9b      	subs	r3, r3, r2
 8001740:	68a2      	ldr	r2, [r4, #8]
 8001742:	429a      	cmp	r2, r3
 8001744:	d3fa      	bcc.n	800173c <chVTDoSetI+0x2c>
 8001746:	6862      	ldr	r2, [r4, #4]
 8001748:	e9c0 4200 	strd	r4, r2, [r0]
 800174c:	6010      	str	r0, [r2, #0]
 800174e:	6060      	str	r0, [r4, #4]
 8001750:	6083      	str	r3, [r0, #8]
 8001752:	68a2      	ldr	r2, [r4, #8]
 8001754:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001758:	1ad3      	subs	r3, r2, r3
 800175a:	60a3      	str	r3, [r4, #8]
 800175c:	6269      	str	r1, [r5, #36]	; 0x24
 800175e:	bcf0      	pop	{r4, r5, r6, r7}
 8001760:	4770      	bx	lr
 8001762:	6379      	str	r1, [r7, #52]	; 0x34
 8001764:	e7ed      	b.n	8001742 <chVTDoSetI+0x32>
 8001766:	62ab      	str	r3, [r5, #40]	; 0x28
 8001768:	18ce      	adds	r6, r1, r3
 800176a:	2200      	movs	r2, #0
 800176c:	2302      	movs	r3, #2
 800176e:	e9c5 0007 	strd	r0, r0, [r5, #28]
 8001772:	e9c0 4400 	strd	r4, r4, [r0]
 8001776:	6081      	str	r1, [r0, #8]
 8001778:	637e      	str	r6, [r7, #52]	; 0x34
 800177a:	613a      	str	r2, [r7, #16]
 800177c:	60fb      	str	r3, [r7, #12]
 800177e:	bcf0      	pop	{r4, r5, r6, r7}
 8001780:	4770      	bx	lr
 8001782:	bf00      	nop
 8001784:	20001290 	.word	0x20001290
	...

08001790 <test_start_timer.constprop.3>:
 8001790:	b508      	push	{r3, lr}
 8001792:	4b0b      	ldr	r3, [pc, #44]	; (80017c0 <test_start_timer.constprop.3+0x30>)
 8001794:	2200      	movs	r2, #0
 8001796:	701a      	strb	r2, [r3, #0]
 8001798:	2320      	movs	r3, #32
 800179a:	f383 8811 	msr	BASEPRI, r3
 800179e:	4809      	ldr	r0, [pc, #36]	; (80017c4 <test_start_timer.constprop.3+0x34>)
 80017a0:	68c3      	ldr	r3, [r0, #12]
 80017a2:	b10b      	cbz	r3, 80017a8 <test_start_timer.constprop.3+0x18>
 80017a4:	f7ff ff7c 	bl	80016a0 <chVTDoResetI>
 80017a8:	2300      	movs	r3, #0
 80017aa:	4a07      	ldr	r2, [pc, #28]	; (80017c8 <test_start_timer.constprop.3+0x38>)
 80017ac:	4805      	ldr	r0, [pc, #20]	; (80017c4 <test_start_timer.constprop.3+0x34>)
 80017ae:	f242 7110 	movw	r1, #10000	; 0x2710
 80017b2:	f7ff ffad 	bl	8001710 <chVTDoSetI>
 80017b6:	2300      	movs	r3, #0
 80017b8:	f383 8811 	msr	BASEPRI, r3
 80017bc:	bd08      	pop	{r3, pc}
 80017be:	bf00      	nop
 80017c0:	20001b80 	.word	0x20001b80
 80017c4:	20001bac 	.word	0x20001bac
 80017c8:	080002e1 	.word	0x080002e1
 80017cc:	00000000 	.word	0x00000000

080017d0 <chSysGetStatusAndLockX.part.2>:
 80017d0:	f3ef 8305 	mrs	r3, IPSR
 80017d4:	2320      	movs	r3, #32
 80017d6:	f383 8811 	msr	BASEPRI, r3
 80017da:	4770      	bx	lr
 80017dc:	0000      	movs	r0, r0
	...

080017e0 <chSysPolledDelayX>:
 80017e0:	4a03      	ldr	r2, [pc, #12]	; (80017f0 <chSysPolledDelayX+0x10>)
 80017e2:	6851      	ldr	r1, [r2, #4]
 80017e4:	6853      	ldr	r3, [r2, #4]
 80017e6:	1a5b      	subs	r3, r3, r1
 80017e8:	4298      	cmp	r0, r3
 80017ea:	d8fb      	bhi.n	80017e4 <chSysPolledDelayX+0x4>
 80017ec:	4770      	bx	lr
 80017ee:	bf00      	nop
 80017f0:	e0001000 	.word	0xe0001000
	...

08001800 <Vector174>:
 8001800:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001804:	4f89      	ldr	r7, [pc, #548]	; (8001a2c <Vector174+0x22c>)
 8001806:	6ebd      	ldr	r5, [r7, #104]	; 0x68
 8001808:	696e      	ldr	r6, [r5, #20]
 800180a:	69ab      	ldr	r3, [r5, #24]
 800180c:	401e      	ands	r6, r3
 800180e:	04f4      	lsls	r4, r6, #19
 8001810:	616e      	str	r6, [r5, #20]
 8001812:	d43b      	bmi.n	800188c <Vector174+0x8c>
 8001814:	04b0      	lsls	r0, r6, #18
 8001816:	bf48      	it	mi
 8001818:	f8d5 3808 	ldrmi.w	r3, [r5, #2056]	; 0x808
 800181c:	0731      	lsls	r1, r6, #28
 800181e:	d504      	bpl.n	800182a <Vector174+0x2a>
 8001820:	687b      	ldr	r3, [r7, #4]
 8001822:	68db      	ldr	r3, [r3, #12]
 8001824:	b10b      	cbz	r3, 800182a <Vector174+0x2a>
 8001826:	4881      	ldr	r0, [pc, #516]	; (8001a2c <Vector174+0x22c>)
 8001828:	4798      	blx	r3
 800182a:	06f2      	lsls	r2, r6, #27
 800182c:	f100 809f 	bmi.w	800196e <Vector174+0x16e>
 8001830:	0373      	lsls	r3, r6, #13
 8001832:	f8d5 4818 	ldr.w	r4, [r5, #2072]	; 0x818
 8001836:	d511      	bpl.n	800185c <Vector174+0x5c>
 8001838:	07e7      	lsls	r7, r4, #31
 800183a:	f100 80de 	bmi.w	80019fa <Vector174+0x1fa>
 800183e:	07a5      	lsls	r5, r4, #30
 8001840:	f100 80ce 	bmi.w	80019e0 <Vector174+0x1e0>
 8001844:	0760      	lsls	r0, r4, #29
 8001846:	f100 80d1 	bmi.w	80019ec <Vector174+0x1ec>
 800184a:	0721      	lsls	r1, r4, #28
 800184c:	f100 80e0 	bmi.w	8001a10 <Vector174+0x210>
 8001850:	06e2      	lsls	r2, r4, #27
 8001852:	f100 80e3 	bmi.w	8001a1c <Vector174+0x21c>
 8001856:	06a3      	lsls	r3, r4, #26
 8001858:	f100 80d6 	bmi.w	8001a08 <Vector174+0x208>
 800185c:	0337      	lsls	r7, r6, #12
 800185e:	d511      	bpl.n	8001884 <Vector174+0x84>
 8001860:	03e6      	lsls	r6, r4, #15
 8001862:	f100 809e 	bmi.w	80019a2 <Vector174+0x1a2>
 8001866:	03a5      	lsls	r5, r4, #14
 8001868:	f100 80a1 	bmi.w	80019ae <Vector174+0x1ae>
 800186c:	0360      	lsls	r0, r4, #13
 800186e:	f100 80a4 	bmi.w	80019ba <Vector174+0x1ba>
 8001872:	0321      	lsls	r1, r4, #12
 8001874:	f100 80a7 	bmi.w	80019c6 <Vector174+0x1c6>
 8001878:	02e2      	lsls	r2, r4, #11
 800187a:	f100 80aa 	bmi.w	80019d2 <Vector174+0x1d2>
 800187e:	02a3      	lsls	r3, r4, #10
 8001880:	f100 8088 	bmi.w	8001994 <Vector174+0x194>
 8001884:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001888:	f7ff ba6a 	b.w	8000d60 <_port_irq_epilogue>
 800188c:	2300      	movs	r3, #0
 800188e:	e9c7 3302 	strd	r3, r3, [r7, #8]
 8001892:	2102      	movs	r1, #2
 8001894:	2220      	movs	r2, #32
 8001896:	667b      	str	r3, [r7, #100]	; 0x64
 8001898:	e9c7 3304 	strd	r3, r3, [r7, #16]
 800189c:	e9c7 3306 	strd	r3, r3, [r7, #24]
 80018a0:	623b      	str	r3, [r7, #32]
 80018a2:	f887 304c 	strb.w	r3, [r7, #76]	; 0x4c
 80018a6:	7039      	strb	r1, [r7, #0]
 80018a8:	612a      	str	r2, [r5, #16]
 80018aa:	692c      	ldr	r4, [r5, #16]
 80018ac:	f014 0420 	ands.w	r4, r4, #32
 80018b0:	d1fb      	bne.n	80018aa <Vector174+0xaa>
 80018b2:	200c      	movs	r0, #12
 80018b4:	f7ff ff94 	bl	80017e0 <chSysPolledDelayX>
 80018b8:	f8d7 c06c 	ldr.w	ip, [r7, #108]	; 0x6c
 80018bc:	f8dc 0008 	ldr.w	r0, [ip, #8]
 80018c0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
 80018c4:	3001      	adds	r0, #1
 80018c6:	22ff      	movs	r2, #255	; 0xff
 80018c8:	eb05 1344 	add.w	r3, r5, r4, lsl #5
 80018cc:	3401      	adds	r4, #1
 80018ce:	4284      	cmp	r4, r0
 80018d0:	f8c3 1900 	str.w	r1, [r3, #2304]	; 0x900
 80018d4:	f8c3 1b00 	str.w	r1, [r3, #2816]	; 0xb00
 80018d8:	f8c3 2908 	str.w	r2, [r3, #2312]	; 0x908
 80018dc:	f8c3 2b08 	str.w	r2, [r3, #2824]	; 0xb08
 80018e0:	d1f2      	bne.n	80018c8 <Vector174+0xc8>
 80018e2:	f8dc 3000 	ldr.w	r3, [ip]
 80018e6:	673b      	str	r3, [r7, #112]	; 0x70
 80018e8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80018ec:	f8dc 1000 	ldr.w	r1, [ip]
 80018f0:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80018f2:	f8c5 2818 	str.w	r2, [r5, #2072]	; 0x818
 80018f6:	f04f 1201 	mov.w	r2, #65537	; 0x10001
 80018fa:	f8c5 281c 	str.w	r2, [r5, #2076]	; 0x81c
 80018fe:	2210      	movs	r2, #16
 8001900:	6269      	str	r1, [r5, #36]	; 0x24
 8001902:	611a      	str	r2, [r3, #16]
 8001904:	691c      	ldr	r4, [r3, #16]
 8001906:	f014 0410 	ands.w	r4, r4, #16
 800190a:	d1fb      	bne.n	8001904 <Vector174+0x104>
 800190c:	200c      	movs	r0, #12
 800190e:	f7ff ff67 	bl	80017e0 <chSysPolledDelayX>
 8001912:	f8d5 3800 	ldr.w	r3, [r5, #2048]	; 0x800
 8001916:	6879      	ldr	r1, [r7, #4]
 8001918:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 800191a:	f8d1 8000 	ldr.w	r8, [r1]
 800191e:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8001922:	f8c5 3800 	str.w	r3, [r5, #2048]	; 0x800
 8001926:	69ab      	ldr	r3, [r5, #24]
 8001928:	f443 2340 	orr.w	r3, r3, #786432	; 0xc0000
 800192c:	f043 0310 	orr.w	r3, r3, #16
 8001930:	61ab      	str	r3, [r5, #24]
 8001932:	2309      	movs	r3, #9
 8001934:	f8c5 3810 	str.w	r3, [r5, #2064]	; 0x810
 8001938:	f8c5 3814 	str.w	r3, [r5, #2068]	; 0x814
 800193c:	4b3c      	ldr	r3, [pc, #240]	; (8001a30 <Vector174+0x230>)
 800193e:	f8c5 4b10 	str.w	r4, [r5, #2832]	; 0xb10
 8001942:	f8c5 3b00 	str.w	r3, [r5, #2816]	; 0xb00
 8001946:	f8c5 4910 	str.w	r4, [r5, #2320]	; 0x910
 800194a:	f8c5 3900 	str.w	r3, [r5, #2304]	; 0x900
 800194e:	f102 0310 	add.w	r3, r2, #16
 8001952:	673b      	str	r3, [r7, #112]	; 0x70
 8001954:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001958:	4b36      	ldr	r3, [pc, #216]	; (8001a34 <Vector174+0x234>)
 800195a:	62aa      	str	r2, [r5, #40]	; 0x28
 800195c:	60fb      	str	r3, [r7, #12]
 800195e:	f1b8 0f00 	cmp.w	r8, #0
 8001962:	f43f af57 	beq.w	8001814 <Vector174+0x14>
 8001966:	4621      	mov	r1, r4
 8001968:	4830      	ldr	r0, [pc, #192]	; (8001a2c <Vector174+0x22c>)
 800196a:	47c0      	blx	r8
 800196c:	e752      	b.n	8001814 <Vector174+0x14>
 800196e:	2320      	movs	r3, #32
 8001970:	f383 8811 	msr	BASEPRI, r3
 8001974:	69ab      	ldr	r3, [r5, #24]
 8001976:	6fba      	ldr	r2, [r7, #120]	; 0x78
 8001978:	f023 0310 	bic.w	r3, r3, #16
 800197c:	61ab      	str	r3, [r5, #24]
 800197e:	b12a      	cbz	r2, 800198c <Vector174+0x18c>
 8001980:	2300      	movs	r3, #0
 8001982:	67bb      	str	r3, [r7, #120]	; 0x78
 8001984:	4610      	mov	r0, r2
 8001986:	6213      	str	r3, [r2, #32]
 8001988:	f7ff fc1a 	bl	80011c0 <chSchReadyI>
 800198c:	2300      	movs	r3, #0
 800198e:	f383 8811 	msr	BASEPRI, r3
 8001992:	e74d      	b.n	8001830 <Vector174+0x30>
 8001994:	2005      	movs	r0, #5
 8001996:	f7fe fff3 	bl	8000980 <otg_epout_handler.constprop.7>
 800199a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800199e:	f7ff b9df 	b.w	8000d60 <_port_irq_epilogue>
 80019a2:	2000      	movs	r0, #0
 80019a4:	f7fe ffec 	bl	8000980 <otg_epout_handler.constprop.7>
 80019a8:	03a5      	lsls	r5, r4, #14
 80019aa:	f57f af5f 	bpl.w	800186c <Vector174+0x6c>
 80019ae:	2001      	movs	r0, #1
 80019b0:	f7fe ffe6 	bl	8000980 <otg_epout_handler.constprop.7>
 80019b4:	0360      	lsls	r0, r4, #13
 80019b6:	f57f af5c 	bpl.w	8001872 <Vector174+0x72>
 80019ba:	2002      	movs	r0, #2
 80019bc:	f7fe ffe0 	bl	8000980 <otg_epout_handler.constprop.7>
 80019c0:	0321      	lsls	r1, r4, #12
 80019c2:	f57f af59 	bpl.w	8001878 <Vector174+0x78>
 80019c6:	2003      	movs	r0, #3
 80019c8:	f7fe ffda 	bl	8000980 <otg_epout_handler.constprop.7>
 80019cc:	02e2      	lsls	r2, r4, #11
 80019ce:	f57f af56 	bpl.w	800187e <Vector174+0x7e>
 80019d2:	2004      	movs	r0, #4
 80019d4:	f7fe ffd4 	bl	8000980 <otg_epout_handler.constprop.7>
 80019d8:	02a3      	lsls	r3, r4, #10
 80019da:	f57f af53 	bpl.w	8001884 <Vector174+0x84>
 80019de:	e7d9      	b.n	8001994 <Vector174+0x194>
 80019e0:	2001      	movs	r0, #1
 80019e2:	f7ff fc6d 	bl	80012c0 <otg_epin_handler.constprop.6>
 80019e6:	0760      	lsls	r0, r4, #29
 80019e8:	f57f af2f 	bpl.w	800184a <Vector174+0x4a>
 80019ec:	2002      	movs	r0, #2
 80019ee:	f7ff fc67 	bl	80012c0 <otg_epin_handler.constprop.6>
 80019f2:	0721      	lsls	r1, r4, #28
 80019f4:	f57f af2c 	bpl.w	8001850 <Vector174+0x50>
 80019f8:	e00a      	b.n	8001a10 <Vector174+0x210>
 80019fa:	2000      	movs	r0, #0
 80019fc:	f7ff fc60 	bl	80012c0 <otg_epin_handler.constprop.6>
 8001a00:	07a5      	lsls	r5, r4, #30
 8001a02:	f57f af1f 	bpl.w	8001844 <Vector174+0x44>
 8001a06:	e7eb      	b.n	80019e0 <Vector174+0x1e0>
 8001a08:	2005      	movs	r0, #5
 8001a0a:	f7ff fc59 	bl	80012c0 <otg_epin_handler.constprop.6>
 8001a0e:	e725      	b.n	800185c <Vector174+0x5c>
 8001a10:	2003      	movs	r0, #3
 8001a12:	f7ff fc55 	bl	80012c0 <otg_epin_handler.constprop.6>
 8001a16:	06e2      	lsls	r2, r4, #27
 8001a18:	f57f af1d 	bpl.w	8001856 <Vector174+0x56>
 8001a1c:	2004      	movs	r0, #4
 8001a1e:	f7ff fc4f 	bl	80012c0 <otg_epin_handler.constprop.6>
 8001a22:	06a3      	lsls	r3, r4, #26
 8001a24:	f57f af1a 	bpl.w	800185c <Vector174+0x5c>
 8001a28:	e7ee      	b.n	8001a08 <Vector174+0x208>
 8001a2a:	bf00      	nop
 8001a2c:	200010c8 	.word	0x200010c8
 8001a30:	10008040 	.word	0x10008040
 8001a34:	08007fd0 	.word	0x08007fd0
	...

08001a40 <chSysIntegrityCheckI>:
 8001a40:	07c2      	lsls	r2, r0, #31
 8001a42:	b410      	push	{r4}
 8001a44:	d512      	bpl.n	8001a6c <chSysIntegrityCheckI+0x2c>
 8001a46:	4b29      	ldr	r3, [pc, #164]	; (8001aec <chSysIntegrityCheckI+0xac>)
 8001a48:	e9d3 1400 	ldrd	r1, r4, [r3]
 8001a4c:	4299      	cmp	r1, r3
 8001a4e:	d041      	beq.n	8001ad4 <chSysIntegrityCheckI+0x94>
 8001a50:	2200      	movs	r2, #0
 8001a52:	6809      	ldr	r1, [r1, #0]
 8001a54:	4299      	cmp	r1, r3
 8001a56:	f102 0201 	add.w	r2, r2, #1
 8001a5a:	d1fa      	bne.n	8001a52 <chSysIntegrityCheckI+0x12>
 8001a5c:	428c      	cmp	r4, r1
 8001a5e:	d036      	beq.n	8001ace <chSysIntegrityCheckI+0x8e>
 8001a60:	6864      	ldr	r4, [r4, #4]
 8001a62:	429c      	cmp	r4, r3
 8001a64:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8001a68:	d1fa      	bne.n	8001a60 <chSysIntegrityCheckI+0x20>
 8001a6a:	bb82      	cbnz	r2, 8001ace <chSysIntegrityCheckI+0x8e>
 8001a6c:	0783      	lsls	r3, r0, #30
 8001a6e:	d513      	bpl.n	8001a98 <chSysIntegrityCheckI+0x58>
 8001a70:	4c1e      	ldr	r4, [pc, #120]	; (8001aec <chSysIntegrityCheckI+0xac>)
 8001a72:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8001a76:	341c      	adds	r4, #28
 8001a78:	42a2      	cmp	r2, r4
 8001a7a:	d02f      	beq.n	8001adc <chSysIntegrityCheckI+0x9c>
 8001a7c:	2300      	movs	r3, #0
 8001a7e:	6812      	ldr	r2, [r2, #0]
 8001a80:	42a2      	cmp	r2, r4
 8001a82:	f103 0301 	add.w	r3, r3, #1
 8001a86:	d1fa      	bne.n	8001a7e <chSysIntegrityCheckI+0x3e>
 8001a88:	4291      	cmp	r1, r2
 8001a8a:	d020      	beq.n	8001ace <chSysIntegrityCheckI+0x8e>
 8001a8c:	6849      	ldr	r1, [r1, #4]
 8001a8e:	42a1      	cmp	r1, r4
 8001a90:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8001a94:	d1fa      	bne.n	8001a8c <chSysIntegrityCheckI+0x4c>
 8001a96:	b9d3      	cbnz	r3, 8001ace <chSysIntegrityCheckI+0x8e>
 8001a98:	f010 0004 	ands.w	r0, r0, #4
 8001a9c:	d015      	beq.n	8001aca <chSysIntegrityCheckI+0x8a>
 8001a9e:	4b13      	ldr	r3, [pc, #76]	; (8001aec <chSysIntegrityCheckI+0xac>)
 8001aa0:	e9d3 2104 	ldrd	r2, r1, [r3, #16]
 8001aa4:	429a      	cmp	r2, r3
 8001aa6:	f04f 0000 	mov.w	r0, #0
 8001aaa:	d01b      	beq.n	8001ae4 <chSysIntegrityCheckI+0xa4>
 8001aac:	6912      	ldr	r2, [r2, #16]
 8001aae:	429a      	cmp	r2, r3
 8001ab0:	f100 0001 	add.w	r0, r0, #1
 8001ab4:	d1fa      	bne.n	8001aac <chSysIntegrityCheckI+0x6c>
 8001ab6:	4291      	cmp	r1, r2
 8001ab8:	d009      	beq.n	8001ace <chSysIntegrityCheckI+0x8e>
 8001aba:	6949      	ldr	r1, [r1, #20]
 8001abc:	4299      	cmp	r1, r3
 8001abe:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 8001ac2:	d1fa      	bne.n	8001aba <chSysIntegrityCheckI+0x7a>
 8001ac4:	3000      	adds	r0, #0
 8001ac6:	bf18      	it	ne
 8001ac8:	2001      	movne	r0, #1
 8001aca:	bc10      	pop	{r4}
 8001acc:	4770      	bx	lr
 8001ace:	2001      	movs	r0, #1
 8001ad0:	bc10      	pop	{r4}
 8001ad2:	4770      	bx	lr
 8001ad4:	429c      	cmp	r4, r3
 8001ad6:	d0c9      	beq.n	8001a6c <chSysIntegrityCheckI+0x2c>
 8001ad8:	2200      	movs	r2, #0
 8001ada:	e7c1      	b.n	8001a60 <chSysIntegrityCheckI+0x20>
 8001adc:	42a1      	cmp	r1, r4
 8001ade:	d0db      	beq.n	8001a98 <chSysIntegrityCheckI+0x58>
 8001ae0:	2300      	movs	r3, #0
 8001ae2:	e7d3      	b.n	8001a8c <chSysIntegrityCheckI+0x4c>
 8001ae4:	4291      	cmp	r1, r2
 8001ae6:	d1e8      	bne.n	8001aba <chSysIntegrityCheckI+0x7a>
 8001ae8:	e7ef      	b.n	8001aca <chSysIntegrityCheckI+0x8a>
 8001aea:	bf00      	nop
 8001aec:	20001290 	.word	0x20001290

08001af0 <sys3_execute>:
 8001af0:	b538      	push	{r3, r4, r5, lr}
 8001af2:	2420      	movs	r4, #32
 8001af4:	f384 8811 	msr	BASEPRI, r4
 8001af8:	2001      	movs	r0, #1
 8001afa:	f7ff ffa1 	bl	8001a40 <chSysIntegrityCheckI>
 8001afe:	2300      	movs	r3, #0
 8001b00:	f383 8811 	msr	BASEPRI, r3
 8001b04:	f080 0101 	eor.w	r1, r0, #1
 8001b08:	b2c9      	uxtb	r1, r1
 8001b0a:	2001      	movs	r0, #1
 8001b0c:	f7fe fe50 	bl	80007b0 <_test_assert>
 8001b10:	b100      	cbz	r0, 8001b14 <sys3_execute+0x24>
 8001b12:	bd38      	pop	{r3, r4, r5, pc}
 8001b14:	4605      	mov	r5, r0
 8001b16:	f384 8811 	msr	BASEPRI, r4
 8001b1a:	2002      	movs	r0, #2
 8001b1c:	f7ff ff90 	bl	8001a40 <chSysIntegrityCheckI>
 8001b20:	f385 8811 	msr	BASEPRI, r5
 8001b24:	f080 0101 	eor.w	r1, r0, #1
 8001b28:	b2c9      	uxtb	r1, r1
 8001b2a:	2002      	movs	r0, #2
 8001b2c:	f7fe fe40 	bl	80007b0 <_test_assert>
 8001b30:	4605      	mov	r5, r0
 8001b32:	2800      	cmp	r0, #0
 8001b34:	d1ed      	bne.n	8001b12 <sys3_execute+0x22>
 8001b36:	f384 8811 	msr	BASEPRI, r4
 8001b3a:	2004      	movs	r0, #4
 8001b3c:	f7ff ff80 	bl	8001a40 <chSysIntegrityCheckI>
 8001b40:	f385 8811 	msr	BASEPRI, r5
 8001b44:	f080 0101 	eor.w	r1, r0, #1
 8001b48:	b2c9      	uxtb	r1, r1
 8001b4a:	2003      	movs	r0, #3
 8001b4c:	f7fe fe30 	bl	80007b0 <_test_assert>
 8001b50:	4605      	mov	r5, r0
 8001b52:	2800      	cmp	r0, #0
 8001b54:	d1dd      	bne.n	8001b12 <sys3_execute+0x22>
 8001b56:	f384 8811 	msr	BASEPRI, r4
 8001b5a:	2008      	movs	r0, #8
 8001b5c:	f7ff ff70 	bl	8001a40 <chSysIntegrityCheckI>
 8001b60:	f385 8811 	msr	BASEPRI, r5
 8001b64:	f080 0101 	eor.w	r1, r0, #1
 8001b68:	b2c9      	uxtb	r1, r1
 8001b6a:	2004      	movs	r0, #4
 8001b6c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001b70:	f7fe be1e 	b.w	80007b0 <_test_assert>
	...

08001b80 <BusFault_Handler>:
 8001b80:	b672      	cpsid	i
 8001b82:	4b02      	ldr	r3, [pc, #8]	; (8001b8c <BusFault_Handler+0xc>)
 8001b84:	4a02      	ldr	r2, [pc, #8]	; (8001b90 <BusFault_Handler+0x10>)
 8001b86:	62da      	str	r2, [r3, #44]	; 0x2c
 8001b88:	e7fe      	b.n	8001b88 <BusFault_Handler+0x8>
 8001b8a:	bf00      	nop
 8001b8c:	20001290 	.word	0x20001290
 8001b90:	08007b20 	.word	0x08007b20
	...

08001ba0 <_strtok.constprop.2>:
 8001ba0:	b538      	push	{r3, r4, r5, lr}
 8001ba2:	460d      	mov	r5, r1
 8001ba4:	b198      	cbz	r0, 8001bce <_strtok.constprop.2+0x2e>
 8001ba6:	4604      	mov	r4, r0
 8001ba8:	6028      	str	r0, [r5, #0]
 8001baa:	490d      	ldr	r1, [pc, #52]	; (8001be0 <_strtok.constprop.2+0x40>)
 8001bac:	4620      	mov	r0, r4
 8001bae:	f005 fea7 	bl	8007900 <strspn>
 8001bb2:	4404      	add	r4, r0
 8001bb4:	4620      	mov	r0, r4
 8001bb6:	490a      	ldr	r1, [pc, #40]	; (8001be0 <_strtok.constprop.2+0x40>)
 8001bb8:	f005 fe7a 	bl	80078b0 <strpbrk>
 8001bbc:	b168      	cbz	r0, 8001bda <_strtok.constprop.2+0x3a>
 8001bbe:	1c42      	adds	r2, r0, #1
 8001bc0:	2300      	movs	r3, #0
 8001bc2:	602a      	str	r2, [r5, #0]
 8001bc4:	7003      	strb	r3, [r0, #0]
 8001bc6:	7823      	ldrb	r3, [r4, #0]
 8001bc8:	b123      	cbz	r3, 8001bd4 <_strtok.constprop.2+0x34>
 8001bca:	4620      	mov	r0, r4
 8001bcc:	bd38      	pop	{r3, r4, r5, pc}
 8001bce:	680c      	ldr	r4, [r1, #0]
 8001bd0:	2c00      	cmp	r4, #0
 8001bd2:	d1ea      	bne.n	8001baa <_strtok.constprop.2+0xa>
 8001bd4:	2400      	movs	r4, #0
 8001bd6:	4620      	mov	r0, r4
 8001bd8:	bd38      	pop	{r3, r4, r5, pc}
 8001bda:	6028      	str	r0, [r5, #0]
 8001bdc:	e7f3      	b.n	8001bc6 <_strtok.constprop.2+0x26>
 8001bde:	bf00      	nop
 8001be0:	08007b10 	.word	0x08007b10
	...

08001bf0 <chprintf.lto_priv.69>:
 8001bf0:	b40e      	push	{r1, r2, r3}
 8001bf2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001bf6:	b086      	sub	sp, #24
 8001bf8:	af0f      	add	r7, sp, #60	; 0x3c
 8001bfa:	4604      	mov	r4, r0
 8001bfc:	f857 6b04 	ldr.w	r6, [r7], #4
 8001c00:	9702      	str	r7, [sp, #8]
 8001c02:	f04f 0800 	mov.w	r8, #0
 8001c06:	7831      	ldrb	r1, [r6, #0]
 8001c08:	1c72      	adds	r2, r6, #1
 8001c0a:	b161      	cbz	r1, 8001c26 <chprintf.lto_priv.69+0x36>
 8001c0c:	2925      	cmp	r1, #37	; 0x25
 8001c0e:	d010      	beq.n	8001c32 <chprintf.lto_priv.69+0x42>
 8001c10:	6823      	ldr	r3, [r4, #0]
 8001c12:	4616      	mov	r6, r2
 8001c14:	689b      	ldr	r3, [r3, #8]
 8001c16:	4620      	mov	r0, r4
 8001c18:	4798      	blx	r3
 8001c1a:	7831      	ldrb	r1, [r6, #0]
 8001c1c:	f108 0801 	add.w	r8, r8, #1
 8001c20:	1c72      	adds	r2, r6, #1
 8001c22:	2900      	cmp	r1, #0
 8001c24:	d1f2      	bne.n	8001c0c <chprintf.lto_priv.69+0x1c>
 8001c26:	4640      	mov	r0, r8
 8001c28:	b006      	add	sp, #24
 8001c2a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001c2e:	b003      	add	sp, #12
 8001c30:	4770      	bx	lr
 8001c32:	7871      	ldrb	r1, [r6, #1]
 8001c34:	292d      	cmp	r1, #45	; 0x2d
 8001c36:	bf03      	ittte	eq
 8001c38:	78b1      	ldrbeq	r1, [r6, #2]
 8001c3a:	1cb2      	addeq	r2, r6, #2
 8001c3c:	f04f 0c01 	moveq.w	ip, #1
 8001c40:	f04f 0c00 	movne.w	ip, #0
 8001c44:	2930      	cmp	r1, #48	; 0x30
 8001c46:	bf03      	ittte	eq
 8001c48:	7851      	ldrbeq	r1, [r2, #1]
 8001c4a:	3201      	addeq	r2, #1
 8001c4c:	f04f 0a30 	moveq.w	sl, #48	; 0x30
 8001c50:	f04f 0a20 	movne.w	sl, #32
 8001c54:	3201      	adds	r2, #1
 8001c56:	2500      	movs	r5, #0
 8001c58:	e005      	b.n	8001c66 <chprintf.lto_priv.69+0x76>
 8001c5a:	783b      	ldrb	r3, [r7, #0]
 8001c5c:	3704      	adds	r7, #4
 8001c5e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8001c62:	eb03 0540 	add.w	r5, r3, r0, lsl #1
 8001c66:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8001c6a:	b2db      	uxtb	r3, r3
 8001c6c:	2b09      	cmp	r3, #9
 8001c6e:	4696      	mov	lr, r2
 8001c70:	eb05 0085 	add.w	r0, r5, r5, lsl #2
 8001c74:	d9f3      	bls.n	8001c5e <chprintf.lto_priv.69+0x6e>
 8001c76:	292a      	cmp	r1, #42	; 0x2a
 8001c78:	d0ef      	beq.n	8001c5a <chprintf.lto_priv.69+0x6a>
 8001c7a:	292e      	cmp	r1, #46	; 0x2e
 8001c7c:	f04f 0200 	mov.w	r2, #0
 8001c80:	d048      	beq.n	8001d14 <chprintf.lto_priv.69+0x124>
 8001c82:	f001 03df 	and.w	r3, r1, #223	; 0xdf
 8001c86:	2b4c      	cmp	r3, #76	; 0x4c
 8001c88:	f10e 0601 	add.w	r6, lr, #1
 8001c8c:	d04e      	beq.n	8001d2c <chprintf.lto_priv.69+0x13c>
 8001c8e:	f1a1 0341 	sub.w	r3, r1, #65	; 0x41
 8001c92:	f1a1 0044 	sub.w	r0, r1, #68	; 0x44
 8001c96:	b2db      	uxtb	r3, r3
 8001c98:	2834      	cmp	r0, #52	; 0x34
 8001c9a:	f200 8116 	bhi.w	8001eca <chprintf.lto_priv.69+0x2da>
 8001c9e:	e8df f010 	tbh	[pc, r0, lsl #1]
 8001ca2:	0165      	.short	0x0165
 8001ca4:	01140114 	.word	0x01140114
 8001ca8:	01140114 	.word	0x01140114
 8001cac:	01140165 	.word	0x01140165
 8001cb0:	01140114 	.word	0x01140114
 8001cb4:	01140114 	.word	0x01140114
 8001cb8:	01140110 	.word	0x01140110
 8001cbc:	01140114 	.word	0x01140114
 8001cc0:	01140114 	.word	0x01140114
 8001cc4:	011400e1 	.word	0x011400e1
 8001cc8:	016e0114 	.word	0x016e0114
 8001ccc:	01140114 	.word	0x01140114
 8001cd0:	01140114 	.word	0x01140114
 8001cd4:	01140114 	.word	0x01140114
 8001cd8:	01140114 	.word	0x01140114
 8001cdc:	01140114 	.word	0x01140114
 8001ce0:	0165008f 	.word	0x0165008f
 8001ce4:	01140114 	.word	0x01140114
 8001ce8:	01140114 	.word	0x01140114
 8001cec:	01140165 	.word	0x01140165
 8001cf0:	01140114 	.word	0x01140114
 8001cf4:	01140114 	.word	0x01140114
 8001cf8:	01140110 	.word	0x01140110
 8001cfc:	01140114 	.word	0x01140114
 8001d00:	0114006d 	.word	0x0114006d
 8001d04:	011400e1 	.word	0x011400e1
 8001d08:	016e0114 	.word	0x016e0114
 8001d0c:	783b      	ldrb	r3, [r7, #0]
 8001d0e:	3704      	adds	r7, #4
 8001d10:	eb03 0240 	add.w	r2, r3, r0, lsl #1
 8001d14:	f81e 1b01 	ldrb.w	r1, [lr], #1
 8001d18:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8001d1c:	b2db      	uxtb	r3, r3
 8001d1e:	2b09      	cmp	r3, #9
 8001d20:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 8001d24:	d9f4      	bls.n	8001d10 <chprintf.lto_priv.69+0x120>
 8001d26:	292a      	cmp	r1, #42	; 0x2a
 8001d28:	d0f0      	beq.n	8001d0c <chprintf.lto_priv.69+0x11c>
 8001d2a:	e7aa      	b.n	8001c82 <chprintf.lto_priv.69+0x92>
 8001d2c:	f89e 3000 	ldrb.w	r3, [lr]
 8001d30:	b30b      	cbz	r3, 8001d76 <chprintf.lto_priv.69+0x186>
 8001d32:	f1a3 0144 	sub.w	r1, r3, #68	; 0x44
 8001d36:	2934      	cmp	r1, #52	; 0x34
 8001d38:	f200 80c9 	bhi.w	8001ece <chprintf.lto_priv.69+0x2de>
 8001d3c:	e8df f001 	tbb	[pc, r1]
 8001d40:	c7c7c7d7 	.word	0xc7c7c7d7
 8001d44:	c7c7d7c7 	.word	0xc7c7d7c7
 8001d48:	c2c7c7c7 	.word	0xc2c7c7c7
 8001d4c:	c7c7c7c7 	.word	0xc7c7c7c7
 8001d50:	c7c793c7 	.word	0xc7c793c7
 8001d54:	c7c7c7d4 	.word	0xc7c7c7d4
 8001d58:	c7c7c7c7 	.word	0xc7c7c7c7
 8001d5c:	41c7c7c7 	.word	0x41c7c7c7
 8001d60:	c7c7c7d7 	.word	0xc7c7c7d7
 8001d64:	c7c7d7c7 	.word	0xc7c7d7c7
 8001d68:	c2c7c7c7 	.word	0xc2c7c7c7
 8001d6c:	1fc7c7c7 	.word	0x1fc7c7c7
 8001d70:	c7c793c7 	.word	0xc7c793c7
 8001d74:	d4          	.byte	0xd4
 8001d75:	00          	.byte	0x00
 8001d76:	460b      	mov	r3, r1
 8001d78:	4676      	mov	r6, lr
 8001d7a:	e7da      	b.n	8001d32 <chprintf.lto_priv.69+0x142>
 8001d7c:	4676      	mov	r6, lr
 8001d7e:	f8d7 9000 	ldr.w	r9, [r7]
 8001d82:	3704      	adds	r7, #4
 8001d84:	f1b9 0f00 	cmp.w	r9, #0
 8001d88:	f000 80fd 	beq.w	8001f86 <chprintf.lto_priv.69+0x396>
 8001d8c:	f899 3000 	ldrb.w	r3, [r9]
 8001d90:	4648      	mov	r0, r9
 8001d92:	2a00      	cmp	r2, #0
 8001d94:	f040 80fe 	bne.w	8001f94 <chprintf.lto_priv.69+0x3a4>
 8001d98:	2b00      	cmp	r3, #0
 8001d9a:	f000 810c 	beq.w	8001fb6 <chprintf.lto_priv.69+0x3c6>
 8001d9e:	f647 72fe 	movw	r2, #32766	; 0x7ffe
 8001da2:	464b      	mov	r3, r9
 8001da4:	e001      	b.n	8001daa <chprintf.lto_priv.69+0x1ba>
 8001da6:	3a01      	subs	r2, #1
 8001da8:	d403      	bmi.n	8001db2 <chprintf.lto_priv.69+0x1c2>
 8001daa:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8001dae:	2900      	cmp	r1, #0
 8001db0:	d1f9      	bne.n	8001da6 <chprintf.lto_priv.69+0x1b6>
 8001db2:	1a1b      	subs	r3, r3, r0
 8001db4:	1aed      	subs	r5, r5, r3
 8001db6:	3b01      	subs	r3, #1
 8001db8:	9300      	str	r3, [sp, #0]
 8001dba:	f04f 0a20 	mov.w	sl, #32
 8001dbe:	e00b      	b.n	8001dd8 <chprintf.lto_priv.69+0x1e8>
 8001dc0:	4676      	mov	r6, lr
 8001dc2:	f10d 0918 	add.w	r9, sp, #24
 8001dc6:	683b      	ldr	r3, [r7, #0]
 8001dc8:	f809 3d0c 	strb.w	r3, [r9, #-12]!
 8001dcc:	2300      	movs	r3, #0
 8001dce:	3d01      	subs	r5, #1
 8001dd0:	3704      	adds	r7, #4
 8001dd2:	9300      	str	r3, [sp, #0]
 8001dd4:	f04f 0a20 	mov.w	sl, #32
 8001dd8:	2d00      	cmp	r5, #0
 8001dda:	db1e      	blt.n	8001e1a <chprintf.lto_priv.69+0x22a>
 8001ddc:	f1bc 0f00 	cmp.w	ip, #0
 8001de0:	d17e      	bne.n	8001ee0 <chprintf.lto_priv.69+0x2f0>
 8001de2:	426b      	negs	r3, r5
 8001de4:	2d00      	cmp	r5, #0
 8001de6:	d07a      	beq.n	8001ede <chprintf.lto_priv.69+0x2ee>
 8001de8:	f899 1000 	ldrb.w	r1, [r9]
 8001dec:	6822      	ldr	r2, [r4, #0]
 8001dee:	292d      	cmp	r1, #45	; 0x2d
 8001df0:	6892      	ldr	r2, [r2, #8]
 8001df2:	f000 80a8 	beq.w	8001f46 <chprintf.lto_priv.69+0x356>
 8001df6:	469b      	mov	fp, r3
 8001df8:	e001      	b.n	8001dfe <chprintf.lto_priv.69+0x20e>
 8001dfa:	6823      	ldr	r3, [r4, #0]
 8001dfc:	689a      	ldr	r2, [r3, #8]
 8001dfe:	4651      	mov	r1, sl
 8001e00:	4620      	mov	r0, r4
 8001e02:	4790      	blx	r2
 8001e04:	f11b 0b01 	adds.w	fp, fp, #1
 8001e08:	d1f7      	bne.n	8001dfa <chprintf.lto_priv.69+0x20a>
 8001e0a:	9a00      	ldr	r2, [sp, #0]
 8001e0c:	2a00      	cmp	r2, #0
 8001e0e:	465b      	mov	r3, fp
 8001e10:	44a8      	add	r8, r5
 8001e12:	f6ff aef8 	blt.w	8001c06 <chprintf.lto_priv.69+0x16>
 8001e16:	461d      	mov	r5, r3
 8001e18:	e004      	b.n	8001e24 <chprintf.lto_priv.69+0x234>
 8001e1a:	9b00      	ldr	r3, [sp, #0]
 8001e1c:	2b00      	cmp	r3, #0
 8001e1e:	f6ff aef2 	blt.w	8001c06 <chprintf.lto_priv.69+0x16>
 8001e22:	2500      	movs	r5, #0
 8001e24:	f8dd b000 	ldr.w	fp, [sp]
 8001e28:	6823      	ldr	r3, [r4, #0]
 8001e2a:	f819 1b01 	ldrb.w	r1, [r9], #1
 8001e2e:	689b      	ldr	r3, [r3, #8]
 8001e30:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8001e34:	4620      	mov	r0, r4
 8001e36:	4798      	blx	r3
 8001e38:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
 8001e3c:	d1f4      	bne.n	8001e28 <chprintf.lto_priv.69+0x238>
 8001e3e:	9b00      	ldr	r3, [sp, #0]
 8001e40:	f108 0801 	add.w	r8, r8, #1
 8001e44:	4443      	add	r3, r8
 8001e46:	4698      	mov	r8, r3
 8001e48:	2d00      	cmp	r5, #0
 8001e4a:	f43f aedc 	beq.w	8001c06 <chprintf.lto_priv.69+0x16>
 8001e4e:	46a9      	mov	r9, r5
 8001e50:	6823      	ldr	r3, [r4, #0]
 8001e52:	4651      	mov	r1, sl
 8001e54:	689b      	ldr	r3, [r3, #8]
 8001e56:	4620      	mov	r0, r4
 8001e58:	4798      	blx	r3
 8001e5a:	f1b9 0901 	subs.w	r9, r9, #1
 8001e5e:	d1f7      	bne.n	8001e50 <chprintf.lto_priv.69+0x260>
 8001e60:	44a8      	add	r8, r5
 8001e62:	e6d0      	b.n	8001c06 <chprintf.lto_priv.69+0x16>
 8001e64:	4676      	mov	r6, lr
 8001e66:	f04f 090a 	mov.w	r9, #10
 8001e6a:	f857 2b04 	ldr.w	r2, [r7], #4
 8001e6e:	f10d 0117 	add.w	r1, sp, #23
 8001e72:	e000      	b.n	8001e76 <chprintf.lto_priv.69+0x286>
 8001e74:	4601      	mov	r1, r0
 8001e76:	fbb2 fef9 	udiv	lr, r2, r9
 8001e7a:	fb09 221e 	mls	r2, r9, lr, r2
 8001e7e:	f102 0330 	add.w	r3, r2, #48	; 0x30
 8001e82:	2b39      	cmp	r3, #57	; 0x39
 8001e84:	bfc8      	it	gt
 8001e86:	f102 0337 	addgt.w	r3, r2, #55	; 0x37
 8001e8a:	b2db      	uxtb	r3, r3
 8001e8c:	4672      	mov	r2, lr
 8001e8e:	f801 3c01 	strb.w	r3, [r1, #-1]
 8001e92:	1e48      	subs	r0, r1, #1
 8001e94:	2a00      	cmp	r2, #0
 8001e96:	d1ed      	bne.n	8001e74 <chprintf.lto_priv.69+0x284>
 8001e98:	f10d 0217 	add.w	r2, sp, #23
 8001e9c:	eba2 0b00 	sub.w	fp, r2, r0
 8001ea0:	f10d 090c 	add.w	r9, sp, #12
 8001ea4:	464a      	mov	r2, r9
 8001ea6:	4458      	add	r0, fp
 8001ea8:	e001      	b.n	8001eae <chprintf.lto_priv.69+0x2be>
 8001eaa:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001eae:	f802 3b01 	strb.w	r3, [r2], #1
 8001eb2:	4281      	cmp	r1, r0
 8001eb4:	d1f9      	bne.n	8001eaa <chprintf.lto_priv.69+0x2ba>
 8001eb6:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
 8001eba:	eba5 050b 	sub.w	r5, r5, fp
 8001ebe:	9300      	str	r3, [sp, #0]
 8001ec0:	e78a      	b.n	8001dd8 <chprintf.lto_priv.69+0x1e8>
 8001ec2:	4676      	mov	r6, lr
 8001ec4:	f04f 0908 	mov.w	r9, #8
 8001ec8:	e7cf      	b.n	8001e6a <chprintf.lto_priv.69+0x27a>
 8001eca:	4676      	mov	r6, lr
 8001ecc:	460b      	mov	r3, r1
 8001ece:	f10d 0918 	add.w	r9, sp, #24
 8001ed2:	3d01      	subs	r5, #1
 8001ed4:	f809 3d0c 	strb.w	r3, [r9, #-12]!
 8001ed8:	2300      	movs	r3, #0
 8001eda:	9300      	str	r3, [sp, #0]
 8001edc:	e77c      	b.n	8001dd8 <chprintf.lto_priv.69+0x1e8>
 8001ede:	461d      	mov	r5, r3
 8001ee0:	9b00      	ldr	r3, [sp, #0]
 8001ee2:	2b00      	cmp	r3, #0
 8001ee4:	da9e      	bge.n	8001e24 <chprintf.lto_priv.69+0x234>
 8001ee6:	e7af      	b.n	8001e48 <chprintf.lto_priv.69+0x258>
 8001ee8:	f04f 0910 	mov.w	r9, #16
 8001eec:	e7bd      	b.n	8001e6a <chprintf.lto_priv.69+0x27a>
 8001eee:	1d39      	adds	r1, r7, #4
 8001ef0:	683a      	ldr	r2, [r7, #0]
 8001ef2:	460f      	mov	r7, r1
 8001ef4:	2a00      	cmp	r2, #0
 8001ef6:	db55      	blt.n	8001fa4 <chprintf.lto_priv.69+0x3b4>
 8001ef8:	f10d 090c 	add.w	r9, sp, #12
 8001efc:	4648      	mov	r0, r9
 8001efe:	f100 030b 	add.w	r3, r0, #11
 8001f02:	9300      	str	r3, [sp, #0]
 8001f04:	4619      	mov	r1, r3
 8001f06:	4b2f      	ldr	r3, [pc, #188]	; (8001fc4 <chprintf.lto_priv.69+0x3d4>)
 8001f08:	fba3 e302 	umull	lr, r3, r3, r2
 8001f0c:	08db      	lsrs	r3, r3, #3
 8001f0e:	eb03 0b83 	add.w	fp, r3, r3, lsl #2
 8001f12:	469e      	mov	lr, r3
 8001f14:	eba2 034b 	sub.w	r3, r2, fp, lsl #1
 8001f18:	3330      	adds	r3, #48	; 0x30
 8001f1a:	b2db      	uxtb	r3, r3
 8001f1c:	4672      	mov	r2, lr
 8001f1e:	f801 3d01 	strb.w	r3, [r1, #-1]!
 8001f22:	2a00      	cmp	r2, #0
 8001f24:	d1ef      	bne.n	8001f06 <chprintf.lto_priv.69+0x316>
 8001f26:	9a00      	ldr	r2, [sp, #0]
 8001f28:	1a52      	subs	r2, r2, r1
 8001f2a:	4402      	add	r2, r0
 8001f2c:	e001      	b.n	8001f32 <chprintf.lto_priv.69+0x342>
 8001f2e:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8001f32:	f800 3b01 	strb.w	r3, [r0], #1
 8001f36:	4290      	cmp	r0, r2
 8001f38:	d1f9      	bne.n	8001f2e <chprintf.lto_priv.69+0x33e>
 8001f3a:	eba0 0009 	sub.w	r0, r0, r9
 8001f3e:	1e43      	subs	r3, r0, #1
 8001f40:	1a2d      	subs	r5, r5, r0
 8001f42:	9300      	str	r3, [sp, #0]
 8001f44:	e748      	b.n	8001dd8 <chprintf.lto_priv.69+0x1e8>
 8001f46:	f1ba 0f30 	cmp.w	sl, #48	; 0x30
 8001f4a:	f47f af54 	bne.w	8001df6 <chprintf.lto_priv.69+0x206>
 8001f4e:	4620      	mov	r0, r4
 8001f50:	9301      	str	r3, [sp, #4]
 8001f52:	4790      	blx	r2
 8001f54:	9b00      	ldr	r3, [sp, #0]
 8001f56:	6822      	ldr	r2, [r4, #0]
 8001f58:	3b01      	subs	r3, #1
 8001f5a:	9300      	str	r3, [sp, #0]
 8001f5c:	9b01      	ldr	r3, [sp, #4]
 8001f5e:	6892      	ldr	r2, [r2, #8]
 8001f60:	f108 0801 	add.w	r8, r8, #1
 8001f64:	f109 0901 	add.w	r9, r9, #1
 8001f68:	469b      	mov	fp, r3
 8001f6a:	e748      	b.n	8001dfe <chprintf.lto_priv.69+0x20e>
 8001f6c:	4639      	mov	r1, r7
 8001f6e:	2b19      	cmp	r3, #25
 8001f70:	f851 2b04 	ldr.w	r2, [r1], #4
 8001f74:	4676      	mov	r6, lr
 8001f76:	bf88      	it	hi
 8001f78:	460f      	movhi	r7, r1
 8001f7a:	d8bb      	bhi.n	8001ef4 <chprintf.lto_priv.69+0x304>
 8001f7c:	e7b8      	b.n	8001ef0 <chprintf.lto_priv.69+0x300>
 8001f7e:	4676      	mov	r6, lr
 8001f80:	f04f 0910 	mov.w	r9, #16
 8001f84:	e771      	b.n	8001e6a <chprintf.lto_priv.69+0x27a>
 8001f86:	4810      	ldr	r0, [pc, #64]	; (8001fc8 <chprintf.lto_priv.69+0x3d8>)
 8001f88:	4681      	mov	r9, r0
 8001f8a:	2a00      	cmp	r2, #0
 8001f8c:	f43f af07 	beq.w	8001d9e <chprintf.lto_priv.69+0x1ae>
 8001f90:	3a01      	subs	r2, #1
 8001f92:	e706      	b.n	8001da2 <chprintf.lto_priv.69+0x1b2>
 8001f94:	2b00      	cmp	r3, #0
 8001f96:	d1fb      	bne.n	8001f90 <chprintf.lto_priv.69+0x3a0>
 8001f98:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001f9c:	9300      	str	r3, [sp, #0]
 8001f9e:	f04f 0a20 	mov.w	sl, #32
 8001fa2:	e719      	b.n	8001dd8 <chprintf.lto_priv.69+0x1e8>
 8001fa4:	232d      	movs	r3, #45	; 0x2d
 8001fa6:	4252      	negs	r2, r2
 8001fa8:	f88d 300c 	strb.w	r3, [sp, #12]
 8001fac:	f10d 000d 	add.w	r0, sp, #13
 8001fb0:	f10d 090c 	add.w	r9, sp, #12
 8001fb4:	e7a3      	b.n	8001efe <chprintf.lto_priv.69+0x30e>
 8001fb6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001fba:	9300      	str	r3, [sp, #0]
 8001fbc:	f04f 0a20 	mov.w	sl, #32
 8001fc0:	e70c      	b.n	8001ddc <chprintf.lto_priv.69+0x1ec>
 8001fc2:	bf00      	nop
 8001fc4:	cccccccd 	.word	0xcccccccd
 8001fc8:	08007cc0 	.word	0x08007cc0
 8001fcc:	00000000 	.word	0x00000000

08001fd0 <cmd_systime>:
 8001fd0:	2900      	cmp	r1, #0
 8001fd2:	dd03      	ble.n	8001fdc <cmd_systime+0xc>
 8001fd4:	4a07      	ldr	r2, [pc, #28]	; (8001ff4 <cmd_systime+0x24>)
 8001fd6:	4908      	ldr	r1, [pc, #32]	; (8001ff8 <cmd_systime+0x28>)
 8001fd8:	f7ff be0a 	b.w	8001bf0 <chprintf.lto_priv.69>
 8001fdc:	2320      	movs	r3, #32
 8001fde:	f383 8811 	msr	BASEPRI, r3
 8001fe2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001fe6:	2300      	movs	r3, #0
 8001fe8:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8001fea:	f383 8811 	msr	BASEPRI, r3
 8001fee:	4903      	ldr	r1, [pc, #12]	; (8001ffc <cmd_systime+0x2c>)
 8001ff0:	f7ff bdfe 	b.w	8001bf0 <chprintf.lto_priv.69>
 8001ff4:	08007ee0 	.word	0x08007ee0
 8001ff8:	08007ee8 	.word	0x08007ee8
 8001ffc:	08007ef4 	.word	0x08007ef4

08002000 <cmd_info>:
 8002000:	2900      	cmp	r1, #0
 8002002:	dd03      	ble.n	800200c <cmd_info+0xc>
 8002004:	4a19      	ldr	r2, [pc, #100]	; (800206c <cmd_info+0x6c>)
 8002006:	491a      	ldr	r1, [pc, #104]	; (8002070 <cmd_info+0x70>)
 8002008:	f7ff bdf2 	b.w	8001bf0 <chprintf.lto_priv.69>
 800200c:	b510      	push	{r4, lr}
 800200e:	4a19      	ldr	r2, [pc, #100]	; (8002074 <cmd_info+0x74>)
 8002010:	4919      	ldr	r1, [pc, #100]	; (8002078 <cmd_info+0x78>)
 8002012:	b082      	sub	sp, #8
 8002014:	4604      	mov	r4, r0
 8002016:	f7ff fdeb 	bl	8001bf0 <chprintf.lto_priv.69>
 800201a:	4a18      	ldr	r2, [pc, #96]	; (800207c <cmd_info+0x7c>)
 800201c:	4918      	ldr	r1, [pc, #96]	; (8002080 <cmd_info+0x80>)
 800201e:	4620      	mov	r0, r4
 8002020:	f7ff fde6 	bl	8001bf0 <chprintf.lto_priv.69>
 8002024:	4a17      	ldr	r2, [pc, #92]	; (8002084 <cmd_info+0x84>)
 8002026:	4918      	ldr	r1, [pc, #96]	; (8002088 <cmd_info+0x88>)
 8002028:	4620      	mov	r0, r4
 800202a:	f7ff fde1 	bl	8001bf0 <chprintf.lto_priv.69>
 800202e:	4a17      	ldr	r2, [pc, #92]	; (800208c <cmd_info+0x8c>)
 8002030:	4917      	ldr	r1, [pc, #92]	; (8002090 <cmd_info+0x90>)
 8002032:	4620      	mov	r0, r4
 8002034:	f7ff fddc 	bl	8001bf0 <chprintf.lto_priv.69>
 8002038:	4a16      	ldr	r2, [pc, #88]	; (8002094 <cmd_info+0x94>)
 800203a:	4917      	ldr	r1, [pc, #92]	; (8002098 <cmd_info+0x98>)
 800203c:	4620      	mov	r0, r4
 800203e:	f7ff fdd7 	bl	8001bf0 <chprintf.lto_priv.69>
 8002042:	4a16      	ldr	r2, [pc, #88]	; (800209c <cmd_info+0x9c>)
 8002044:	4916      	ldr	r1, [pc, #88]	; (80020a0 <cmd_info+0xa0>)
 8002046:	4620      	mov	r0, r4
 8002048:	f7ff fdd2 	bl	8001bf0 <chprintf.lto_priv.69>
 800204c:	4a15      	ldr	r2, [pc, #84]	; (80020a4 <cmd_info+0xa4>)
 800204e:	4916      	ldr	r1, [pc, #88]	; (80020a8 <cmd_info+0xa8>)
 8002050:	4620      	mov	r0, r4
 8002052:	f7ff fdcd 	bl	8001bf0 <chprintf.lto_priv.69>
 8002056:	4b15      	ldr	r3, [pc, #84]	; (80020ac <cmd_info+0xac>)
 8002058:	9300      	str	r3, [sp, #0]
 800205a:	4620      	mov	r0, r4
 800205c:	4b14      	ldr	r3, [pc, #80]	; (80020b0 <cmd_info+0xb0>)
 800205e:	4a15      	ldr	r2, [pc, #84]	; (80020b4 <cmd_info+0xb4>)
 8002060:	4915      	ldr	r1, [pc, #84]	; (80020b8 <cmd_info+0xb8>)
 8002062:	f7ff fdc5 	bl	8001bf0 <chprintf.lto_priv.69>
 8002066:	b002      	add	sp, #8
 8002068:	bd10      	pop	{r4, pc}
 800206a:	bf00      	nop
 800206c:	08007cd0 	.word	0x08007cd0
 8002070:	08007ee8 	.word	0x08007ee8
 8002074:	08007cd8 	.word	0x08007cd8
 8002078:	08007ce0 	.word	0x08007ce0
 800207c:	08007cf4 	.word	0x08007cf4
 8002080:	08007d3c 	.word	0x08007d3c
 8002084:	08007d50 	.word	0x08007d50
 8002088:	08007d5c 	.word	0x08007d5c
 800208c:	08007d70 	.word	0x08007d70
 8002090:	08007d7c 	.word	0x08007d7c
 8002094:	08007d90 	.word	0x08007d90
 8002098:	08007da8 	.word	0x08007da8
 800209c:	08007dbc 	.word	0x08007dbc
 80020a0:	08007de8 	.word	0x08007de8
 80020a4:	08007dfc 	.word	0x08007dfc
 80020a8:	08007e24 	.word	0x08007e24
 80020ac:	08007e60 	.word	0x08007e60
 80020b0:	08007e38 	.word	0x08007e38
 80020b4:	08007e3c 	.word	0x08007e3c
 80020b8:	08007e48 	.word	0x08007e48
 80020bc:	00000000 	.word	0x00000000

080020c0 <bmk13_execute>:
 80020c0:	b510      	push	{r4, lr}
 80020c2:	482f      	ldr	r0, [pc, #188]	; (8002180 <bmk13_execute+0xc0>)
 80020c4:	4c2f      	ldr	r4, [pc, #188]	; (8002184 <bmk13_execute+0xc4>)
 80020c6:	f7fe fbe3 	bl	8000890 <test_print>
 80020ca:	f44f 70a8 	mov.w	r0, #336	; 0x150
 80020ce:	f7fe fab7 	bl	8000640 <test_printn.part.1>
 80020d2:	4620      	mov	r0, r4
 80020d4:	f7fe fbbc 	bl	8000850 <test_println>
 80020d8:	482b      	ldr	r0, [pc, #172]	; (8002188 <bmk13_execute+0xc8>)
 80020da:	f7fe fbd9 	bl	8000890 <test_print>
 80020de:	2044      	movs	r0, #68	; 0x44
 80020e0:	f7fe faae 	bl	8000640 <test_printn.part.1>
 80020e4:	4620      	mov	r0, r4
 80020e6:	f7fe fbb3 	bl	8000850 <test_println>
 80020ea:	4828      	ldr	r0, [pc, #160]	; (800218c <bmk13_execute+0xcc>)
 80020ec:	f7fe fbd0 	bl	8000890 <test_print>
 80020f0:	2014      	movs	r0, #20
 80020f2:	f7fe faa5 	bl	8000640 <test_printn.part.1>
 80020f6:	4620      	mov	r0, r4
 80020f8:	f7fe fbaa 	bl	8000850 <test_println>
 80020fc:	4824      	ldr	r0, [pc, #144]	; (8002190 <bmk13_execute+0xd0>)
 80020fe:	f7fe fbc7 	bl	8000890 <test_print>
 8002102:	200c      	movs	r0, #12
 8002104:	f7fe fa9c 	bl	8000640 <test_printn.part.1>
 8002108:	4620      	mov	r0, r4
 800210a:	f7fe fba1 	bl	8000850 <test_println>
 800210e:	4821      	ldr	r0, [pc, #132]	; (8002194 <bmk13_execute+0xd4>)
 8002110:	f7fe fbbe 	bl	8000890 <test_print>
 8002114:	2004      	movs	r0, #4
 8002116:	f7fe fa93 	bl	8000640 <test_printn.part.1>
 800211a:	4620      	mov	r0, r4
 800211c:	f7fe fb98 	bl	8000850 <test_println>
 8002120:	481d      	ldr	r0, [pc, #116]	; (8002198 <bmk13_execute+0xd8>)
 8002122:	f7fe fbb5 	bl	8000890 <test_print>
 8002126:	2014      	movs	r0, #20
 8002128:	f7fe fa8a 	bl	8000640 <test_printn.part.1>
 800212c:	4620      	mov	r0, r4
 800212e:	f7fe fb8f 	bl	8000850 <test_println>
 8002132:	481a      	ldr	r0, [pc, #104]	; (800219c <bmk13_execute+0xdc>)
 8002134:	f7fe fbac 	bl	8000890 <test_print>
 8002138:	2010      	movs	r0, #16
 800213a:	f7fe fa81 	bl	8000640 <test_printn.part.1>
 800213e:	4620      	mov	r0, r4
 8002140:	f7fe fb86 	bl	8000850 <test_println>
 8002144:	4816      	ldr	r0, [pc, #88]	; (80021a0 <bmk13_execute+0xe0>)
 8002146:	f7fe fba3 	bl	8000890 <test_print>
 800214a:	2008      	movs	r0, #8
 800214c:	f7fe fa78 	bl	8000640 <test_printn.part.1>
 8002150:	4620      	mov	r0, r4
 8002152:	f7fe fb7d 	bl	8000850 <test_println>
 8002156:	4813      	ldr	r0, [pc, #76]	; (80021a4 <bmk13_execute+0xe4>)
 8002158:	f7fe fb9a 	bl	8000890 <test_print>
 800215c:	2024      	movs	r0, #36	; 0x24
 800215e:	f7fe fa6f 	bl	8000640 <test_printn.part.1>
 8002162:	4620      	mov	r0, r4
 8002164:	f7fe fb74 	bl	8000850 <test_println>
 8002168:	480f      	ldr	r0, [pc, #60]	; (80021a8 <bmk13_execute+0xe8>)
 800216a:	f7fe fb91 	bl	8000890 <test_print>
 800216e:	2028      	movs	r0, #40	; 0x28
 8002170:	f7fe fa66 	bl	8000640 <test_printn.part.1>
 8002174:	4620      	mov	r0, r4
 8002176:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800217a:	f7fe bb69 	b.w	8000850 <test_println>
 800217e:	bf00      	nop
 8002180:	08007b90 	.word	0x08007b90
 8002184:	08007ba0 	.word	0x08007ba0
 8002188:	08007ba8 	.word	0x08007ba8
 800218c:	08007bb8 	.word	0x08007bb8
 8002190:	08007bc8 	.word	0x08007bc8
 8002194:	08007bd8 	.word	0x08007bd8
 8002198:	08007be8 	.word	0x08007be8
 800219c:	08007bf8 	.word	0x08007bf8
 80021a0:	08007c08 	.word	0x08007c08
 80021a4:	08007c18 	.word	0x08007c18
 80021a8:	08007c28 	.word	0x08007c28
 80021ac:	00000000 	.word	0x00000000

080021b0 <_usb_ep0setup>:
 80021b0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80021b4:	2300      	movs	r3, #0
 80021b6:	b570      	push	{r4, r5, r6, lr}
 80021b8:	f880 304c 	strb.w	r3, [r0, #76]	; 0x4c
 80021bc:	68cb      	ldr	r3, [r1, #12]
 80021be:	6842      	ldr	r2, [r0, #4]
 80021c0:	6a1b      	ldr	r3, [r3, #32]
 80021c2:	6819      	ldr	r1, [r3, #0]
 80021c4:	685b      	ldr	r3, [r3, #4]
 80021c6:	6603      	str	r3, [r0, #96]	; 0x60
 80021c8:	65c1      	str	r1, [r0, #92]	; 0x5c
 80021ca:	6893      	ldr	r3, [r2, #8]
 80021cc:	4604      	mov	r4, r0
 80021ce:	2b00      	cmp	r3, #0
 80021d0:	d037      	beq.n	8002242 <_usb_ep0setup+0x92>
 80021d2:	4798      	blx	r3
 80021d4:	2800      	cmp	r0, #0
 80021d6:	d034      	beq.n	8002242 <_usb_ep0setup+0x92>
 80021d8:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80021da:	f894 205c 	ldrb.w	r2, [r4, #92]	; 0x5c
 80021de:	f894 0063 	ldrb.w	r0, [r4, #99]	; 0x63
 80021e2:	f894 3062 	ldrb.w	r3, [r4, #98]	; 0x62
 80021e6:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80021ea:	428b      	cmp	r3, r1
 80021ec:	bf2c      	ite	cs
 80021ee:	460b      	movcs	r3, r1
 80021f0:	6563      	strcc	r3, [r4, #84]	; 0x54
 80021f2:	0610      	lsls	r0, r2, #24
 80021f4:	68e1      	ldr	r1, [r4, #12]
 80021f6:	f100 80a6 	bmi.w	8002346 <_usb_ep0setup+0x196>
 80021fa:	2b00      	cmp	r3, #0
 80021fc:	f000 8089 	beq.w	8002312 <_usb_ep0setup+0x162>
 8002200:	2204      	movs	r2, #4
 8002202:	f884 204c 	strb.w	r2, [r4, #76]	; 0x4c
 8002206:	698a      	ldr	r2, [r1, #24]
 8002208:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800220a:	60d1      	str	r1, [r2, #12]
 800220c:	2100      	movs	r1, #0
 800220e:	6053      	str	r3, [r2, #4]
 8002210:	7011      	strb	r1, [r2, #0]
 8002212:	6091      	str	r1, [r2, #8]
 8002214:	4620      	mov	r0, r4
 8002216:	f7fe fb93 	bl	8000940 <usb_lld_prepare_receive>
 800221a:	2320      	movs	r3, #32
 800221c:	f383 8811 	msr	BASEPRI, r3
 8002220:	8963      	ldrh	r3, [r4, #10]
 8002222:	07da      	lsls	r2, r3, #31
 8002224:	d409      	bmi.n	800223a <_usb_ep0setup+0x8a>
 8002226:	6ea1      	ldr	r1, [r4, #104]	; 0x68
 8002228:	f8d1 2b00 	ldr.w	r2, [r1, #2816]	; 0xb00
 800222c:	f043 0301 	orr.w	r3, r3, #1
 8002230:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002234:	8163      	strh	r3, [r4, #10]
 8002236:	f8c1 2b00 	str.w	r2, [r1, #2816]	; 0xb00
 800223a:	2300      	movs	r3, #0
 800223c:	f383 8811 	msr	BASEPRI, r3
 8002240:	bd70      	pop	{r4, r5, r6, pc}
 8002242:	f894 205c 	ldrb.w	r2, [r4, #92]	; 0x5c
 8002246:	f012 0560 	ands.w	r5, r2, #96	; 0x60
 800224a:	4610      	mov	r0, r2
 800224c:	d016      	beq.n	800227c <_usb_ep0setup+0xcc>
 800224e:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8002250:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8002254:	6861      	ldr	r1, [r4, #4]
 8002256:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 800225a:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 800225e:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8002262:	680d      	ldr	r5, [r1, #0]
 8002264:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8002268:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 800226c:	b115      	cbz	r5, 8002274 <_usb_ep0setup+0xc4>
 800226e:	2105      	movs	r1, #5
 8002270:	4620      	mov	r0, r4
 8002272:	47a8      	blx	r5
 8002274:	2306      	movs	r3, #6
 8002276:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800227a:	bd70      	pop	{r4, r5, r6, pc}
 800227c:	f894 105d 	ldrb.w	r1, [r4, #93]	; 0x5d
 8002280:	f002 037f 	and.w	r3, r2, #127	; 0x7f
 8002284:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8002288:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800228c:	f000 810b 	beq.w	80024a6 <_usb_ep0setup+0x2f6>
 8002290:	d917      	bls.n	80022c2 <_usb_ep0setup+0x112>
 8002292:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8002296:	f000 80ed 	beq.w	8002474 <_usb_ep0setup+0x2c4>
 800229a:	f240 808c 	bls.w	80023b6 <_usb_ep0setup+0x206>
 800229e:	f5b3 6f10 	cmp.w	r3, #2304	; 0x900
 80022a2:	d066      	beq.n	8002372 <_usb_ep0setup+0x1c2>
 80022a4:	f640 4102 	movw	r1, #3074	; 0xc02
 80022a8:	428b      	cmp	r3, r1
 80022aa:	f000 80ca 	beq.w	8002442 <_usb_ep0setup+0x292>
 80022ae:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80022b2:	d1cc      	bne.n	800224e <_usb_ep0setup+0x9e>
 80022b4:	f104 0367 	add.w	r3, r4, #103	; 0x67
 80022b8:	2101      	movs	r1, #1
 80022ba:	65a5      	str	r5, [r4, #88]	; 0x58
 80022bc:	e9c4 3114 	strd	r3, r1, [r4, #80]	; 0x50
 80022c0:	e78d      	b.n	80021de <_usb_ep0setup+0x2e>
 80022c2:	2b02      	cmp	r3, #2
 80022c4:	f000 80a4 	beq.w	8002410 <_usb_ep0setup+0x260>
 80022c8:	f240 809a 	bls.w	8002400 <_usb_ep0setup+0x250>
 80022cc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80022d0:	d062      	beq.n	8002398 <_usb_ep0setup+0x1e8>
 80022d2:	f5b3 7f81 	cmp.w	r3, #258	; 0x102
 80022d6:	d1ba      	bne.n	800224e <_usb_ep0setup+0x9e>
 80022d8:	f894 305e 	ldrb.w	r3, [r4, #94]	; 0x5e
 80022dc:	2b00      	cmp	r3, #0
 80022de:	d1b6      	bne.n	800224e <_usb_ep0setup+0x9e>
 80022e0:	f894 3060 	ldrb.w	r3, [r4, #96]	; 0x60
 80022e4:	f013 010f 	ands.w	r1, r3, #15
 80022e8:	d00c      	beq.n	8002304 <_usb_ep0setup+0x154>
 80022ea:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 80022ec:	f013 0f80 	tst.w	r3, #128	; 0x80
 80022f0:	eb02 1341 	add.w	r3, r2, r1, lsl #5
 80022f4:	f040 80f2 	bne.w	80024dc <_usb_ep0setup+0x32c>
 80022f8:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 80022fc:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8002300:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8002304:	2300      	movs	r3, #0
 8002306:	e9c4 3314 	strd	r3, r3, [r4, #80]	; 0x50
 800230a:	65a3      	str	r3, [r4, #88]	; 0x58
 800230c:	0603      	lsls	r3, r0, #24
 800230e:	68e1      	ldr	r1, [r4, #12]
 8002310:	d425      	bmi.n	800235e <_usb_ep0setup+0x1ae>
 8002312:	2305      	movs	r3, #5
 8002314:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 8002318:	694b      	ldr	r3, [r1, #20]
 800231a:	2100      	movs	r1, #0
 800231c:	e9c3 1101 	strd	r1, r1, [r3, #4]
 8002320:	7019      	strb	r1, [r3, #0]
 8002322:	60d9      	str	r1, [r3, #12]
 8002324:	4620      	mov	r0, r4
 8002326:	f7fe fae3 	bl	80008f0 <usb_lld_prepare_transmit>
 800232a:	2320      	movs	r3, #32
 800232c:	f383 8811 	msr	BASEPRI, r3
 8002330:	8923      	ldrh	r3, [r4, #8]
 8002332:	f013 0101 	ands.w	r1, r3, #1
 8002336:	d180      	bne.n	800223a <_usb_ep0setup+0x8a>
 8002338:	f043 0301 	orr.w	r3, r3, #1
 800233c:	8123      	strh	r3, [r4, #8]
 800233e:	4620      	mov	r0, r4
 8002340:	f7fe fabe 	bl	80008c0 <usb_lld_start_in>
 8002344:	e779      	b.n	800223a <_usb_ep0setup+0x8a>
 8002346:	b153      	cbz	r3, 800235e <_usb_ep0setup+0x1ae>
 8002348:	2201      	movs	r2, #1
 800234a:	f884 204c 	strb.w	r2, [r4, #76]	; 0x4c
 800234e:	694a      	ldr	r2, [r1, #20]
 8002350:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8002352:	60d1      	str	r1, [r2, #12]
 8002354:	2100      	movs	r1, #0
 8002356:	6053      	str	r3, [r2, #4]
 8002358:	7011      	strb	r1, [r2, #0]
 800235a:	6091      	str	r1, [r2, #8]
 800235c:	e7e2      	b.n	8002324 <_usb_ep0setup+0x174>
 800235e:	2303      	movs	r3, #3
 8002360:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 8002364:	698b      	ldr	r3, [r1, #24]
 8002366:	2100      	movs	r1, #0
 8002368:	7019      	strb	r1, [r3, #0]
 800236a:	60d9      	str	r1, [r3, #12]
 800236c:	e9c3 1101 	strd	r1, r1, [r3, #4]
 8002370:	e750      	b.n	8002214 <_usb_ep0setup+0x64>
 8002372:	f894 305e 	ldrb.w	r3, [r4, #94]	; 0x5e
 8002376:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800237a:	2b00      	cmp	r3, #0
 800237c:	f040 80a2 	bne.w	80024c4 <_usb_ep0setup+0x314>
 8002380:	2303      	movs	r3, #3
 8002382:	7023      	strb	r3, [r4, #0]
 8002384:	6863      	ldr	r3, [r4, #4]
 8002386:	681b      	ldr	r3, [r3, #0]
 8002388:	2b00      	cmp	r3, #0
 800238a:	d0bb      	beq.n	8002304 <_usb_ep0setup+0x154>
 800238c:	4620      	mov	r0, r4
 800238e:	2102      	movs	r1, #2
 8002390:	4798      	blx	r3
 8002392:	f894 005c 	ldrb.w	r0, [r4, #92]	; 0x5c
 8002396:	e7b5      	b.n	8002304 <_usb_ep0setup+0x154>
 8002398:	f894 305e 	ldrb.w	r3, [r4, #94]	; 0x5e
 800239c:	2b01      	cmp	r3, #1
 800239e:	f47f af56 	bne.w	800224e <_usb_ep0setup+0x9e>
 80023a2:	f8b4 3064 	ldrh.w	r3, [r4, #100]	; 0x64
 80023a6:	6525      	str	r5, [r4, #80]	; 0x50
 80023a8:	f023 0302 	bic.w	r3, r3, #2
 80023ac:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
 80023b0:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 80023b4:	e7aa      	b.n	800230c <_usb_ep0setup+0x15c>
 80023b6:	f240 3202 	movw	r2, #770	; 0x302
 80023ba:	4293      	cmp	r3, r2
 80023bc:	d043      	beq.n	8002446 <_usb_ep0setup+0x296>
 80023be:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 80023c2:	f47f af44 	bne.w	800224e <_usb_ep0setup+0x9e>
 80023c6:	f8b4 305c 	ldrh.w	r3, [r4, #92]	; 0x5c
 80023ca:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 80023ce:	d199      	bne.n	8002304 <_usb_ep0setup+0x154>
 80023d0:	f894 105e 	ldrb.w	r1, [r4, #94]	; 0x5e
 80023d4:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 80023d6:	f884 1066 	strb.w	r1, [r4, #102]	; 0x66
 80023da:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 80023de:	6860      	ldr	r0, [r4, #4]
 80023e0:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 80023e4:	6805      	ldr	r5, [r0, #0]
 80023e6:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80023ea:	f8c2 3800 	str.w	r3, [r2, #2048]	; 0x800
 80023ee:	b115      	cbz	r5, 80023f6 <_usb_ep0setup+0x246>
 80023f0:	2101      	movs	r1, #1
 80023f2:	4620      	mov	r0, r4
 80023f4:	47a8      	blx	r5
 80023f6:	2303      	movs	r3, #3
 80023f8:	f894 005c 	ldrb.w	r0, [r4, #92]	; 0x5c
 80023fc:	7023      	strb	r3, [r4, #0]
 80023fe:	e781      	b.n	8002304 <_usb_ep0setup+0x154>
 8002400:	b9e3      	cbnz	r3, 800243c <_usb_ep0setup+0x28c>
 8002402:	f104 0064 	add.w	r0, r4, #100	; 0x64
 8002406:	2102      	movs	r1, #2
 8002408:	65a3      	str	r3, [r4, #88]	; 0x58
 800240a:	e9c4 0114 	strd	r0, r1, [r4, #80]	; 0x50
 800240e:	e6e6      	b.n	80021de <_usb_ep0setup+0x2e>
 8002410:	f894 0060 	ldrb.w	r0, [r4, #96]	; 0x60
 8002414:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8002416:	0605      	lsls	r5, r0, #24
 8002418:	f000 010f 	and.w	r1, r0, #15
 800241c:	d455      	bmi.n	80024ca <_usb_ep0setup+0x31a>
 800241e:	3158      	adds	r1, #88	; 0x58
 8002420:	0149      	lsls	r1, r1, #5
 8002422:	5859      	ldr	r1, [r3, r1]
 8002424:	040e      	lsls	r6, r1, #16
 8002426:	f57f af13 	bpl.w	8002250 <_usb_ep0setup+0xa0>
 800242a:	028b      	lsls	r3, r1, #10
 800242c:	d554      	bpl.n	80024d8 <_usb_ep0setup+0x328>
 800242e:	4b32      	ldr	r3, [pc, #200]	; (80024f8 <_usb_ep0setup+0x348>)
 8002430:	6523      	str	r3, [r4, #80]	; 0x50
 8002432:	2102      	movs	r1, #2
 8002434:	2300      	movs	r3, #0
 8002436:	e9c4 1315 	strd	r1, r3, [r4, #84]	; 0x54
 800243a:	e6d0      	b.n	80021de <_usb_ep0setup+0x2e>
 800243c:	2b01      	cmp	r3, #1
 800243e:	f47f af06 	bne.w	800224e <_usb_ep0setup+0x9e>
 8002442:	4b2e      	ldr	r3, [pc, #184]	; (80024fc <_usb_ep0setup+0x34c>)
 8002444:	e7f4      	b.n	8002430 <_usb_ep0setup+0x280>
 8002446:	f894 305e 	ldrb.w	r3, [r4, #94]	; 0x5e
 800244a:	2b00      	cmp	r3, #0
 800244c:	f47f aeff 	bne.w	800224e <_usb_ep0setup+0x9e>
 8002450:	f894 3060 	ldrb.w	r3, [r4, #96]	; 0x60
 8002454:	f013 010f 	ands.w	r1, r3, #15
 8002458:	f43f af54 	beq.w	8002304 <_usb_ep0setup+0x154>
 800245c:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 800245e:	061d      	lsls	r5, r3, #24
 8002460:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 8002464:	d441      	bmi.n	80024ea <_usb_ep0setup+0x33a>
 8002466:	f8d2 3b00 	ldr.w	r3, [r2, #2816]	; 0xb00
 800246a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800246e:	f8c2 3b00 	str.w	r3, [r2, #2816]	; 0xb00
 8002472:	e747      	b.n	8002304 <_usb_ep0setup+0x154>
 8002474:	f894 0061 	ldrb.w	r0, [r4, #97]	; 0x61
 8002478:	6861      	ldr	r1, [r4, #4]
 800247a:	f894 3060 	ldrb.w	r3, [r4, #96]	; 0x60
 800247e:	684e      	ldr	r6, [r1, #4]
 8002480:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8002484:	f894 105f 	ldrb.w	r1, [r4, #95]	; 0x5f
 8002488:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 800248c:	4620      	mov	r0, r4
 800248e:	47b0      	blx	r6
 8002490:	2800      	cmp	r0, #0
 8002492:	f43f aedc 	beq.w	800224e <_usb_ep0setup+0x9e>
 8002496:	e9d0 1300 	ldrd	r1, r3, [r0]
 800249a:	f894 205c 	ldrb.w	r2, [r4, #92]	; 0x5c
 800249e:	65a5      	str	r5, [r4, #88]	; 0x58
 80024a0:	e9c4 3114 	strd	r3, r1, [r4, #80]	; 0x50
 80024a4:	e69b      	b.n	80021de <_usb_ep0setup+0x2e>
 80024a6:	f894 305e 	ldrb.w	r3, [r4, #94]	; 0x5e
 80024aa:	2b01      	cmp	r3, #1
 80024ac:	f47f aecf 	bne.w	800224e <_usb_ep0setup+0x9e>
 80024b0:	f8b4 3064 	ldrh.w	r3, [r4, #100]	; 0x64
 80024b4:	6525      	str	r5, [r4, #80]	; 0x50
 80024b6:	f043 0302 	orr.w	r3, r3, #2
 80024ba:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
 80024be:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 80024c2:	e723      	b.n	800230c <_usb_ep0setup+0x15c>
 80024c4:	2304      	movs	r3, #4
 80024c6:	7023      	strb	r3, [r4, #0]
 80024c8:	e75c      	b.n	8002384 <_usb_ep0setup+0x1d4>
 80024ca:	3148      	adds	r1, #72	; 0x48
 80024cc:	0149      	lsls	r1, r1, #5
 80024ce:	5859      	ldr	r1, [r3, r1]
 80024d0:	0408      	lsls	r0, r1, #16
 80024d2:	f57f aebd 	bpl.w	8002250 <_usb_ep0setup+0xa0>
 80024d6:	e7a8      	b.n	800242a <_usb_ep0setup+0x27a>
 80024d8:	4b09      	ldr	r3, [pc, #36]	; (8002500 <_usb_ep0setup+0x350>)
 80024da:	e7a9      	b.n	8002430 <_usb_ep0setup+0x280>
 80024dc:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 80024e0:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 80024e4:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 80024e8:	e70c      	b.n	8002304 <_usb_ep0setup+0x154>
 80024ea:	f8d2 3900 	ldr.w	r3, [r2, #2304]	; 0x900
 80024ee:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80024f2:	f8c2 3900 	str.w	r3, [r2, #2304]	; 0x900
 80024f6:	e705      	b.n	8002304 <_usb_ep0setup+0x154>
 80024f8:	08008080 	.word	0x08008080
 80024fc:	08008cd0 	.word	0x08008cd0
 8002500:	08007b40 	.word	0x08007b40
	...

08002510 <usbInitEndpointI>:
 8002510:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002514:	6953      	ldr	r3, [r2, #20]
 8002516:	460d      	mov	r5, r1
 8002518:	b12b      	cbz	r3, 8002526 <usbInitEndpointI+0x16>
 800251a:	2100      	movs	r1, #0
 800251c:	6019      	str	r1, [r3, #0]
 800251e:	6059      	str	r1, [r3, #4]
 8002520:	6099      	str	r1, [r3, #8]
 8002522:	60d9      	str	r1, [r3, #12]
 8002524:	6119      	str	r1, [r3, #16]
 8002526:	6993      	ldr	r3, [r2, #24]
 8002528:	b12b      	cbz	r3, 8002536 <usbInitEndpointI+0x26>
 800252a:	2100      	movs	r1, #0
 800252c:	6019      	str	r1, [r3, #0]
 800252e:	6059      	str	r1, [r3, #4]
 8002530:	6099      	str	r1, [r3, #8]
 8002532:	60d9      	str	r1, [r3, #12]
 8002534:	6119      	str	r1, [r3, #16]
 8002536:	6813      	ldr	r3, [r2, #0]
 8002538:	fa0f f885 	sxth.w	r8, r5
 800253c:	eb00 0788 	add.w	r7, r0, r8, lsl #2
 8002540:	f003 0303 	and.w	r3, r3, #3
 8002544:	2b02      	cmp	r3, #2
 8002546:	60fa      	str	r2, [r7, #12]
 8002548:	f000 8097 	beq.w	800267a <usbInitEndpointI+0x16a>
 800254c:	2b03      	cmp	r3, #3
 800254e:	f000 8091 	beq.w	8002674 <usbInitEndpointI+0x164>
 8002552:	4c4b      	ldr	r4, [pc, #300]	; (8002680 <usbInitEndpointI+0x170>)
 8002554:	494b      	ldr	r1, [pc, #300]	; (8002684 <usbInitEndpointI+0x174>)
 8002556:	2b01      	cmp	r3, #1
 8002558:	bf0c      	ite	eq
 800255a:	46a1      	moveq	r9, r4
 800255c:	4689      	movne	r9, r1
 800255e:	6e84      	ldr	r4, [r0, #104]	; 0x68
 8002560:	68d6      	ldr	r6, [r2, #12]
 8002562:	0169      	lsls	r1, r5, #5
 8002564:	1863      	adds	r3, r4, r1
 8002566:	f04f 0c00 	mov.w	ip, #0
 800256a:	f8c3 cb10 	str.w	ip, [r3, #2832]	; 0xb10
 800256e:	f105 0310 	add.w	r3, r5, #16
 8002572:	f04f 0c01 	mov.w	ip, #1
 8002576:	fa0c f303 	lsl.w	r3, ip, r3
 800257a:	2e00      	cmp	r6, #0
 800257c:	d04b      	beq.n	8002616 <usbInitEndpointI+0x106>
 800257e:	f8b2 c012 	ldrh.w	ip, [r2, #18]
 8002582:	f105 0658 	add.w	r6, r5, #88	; 0x58
 8002586:	0176      	lsls	r6, r6, #5
 8002588:	ea4c 0c09 	orr.w	ip, ip, r9
 800258c:	f844 c006 	str.w	ip, [r4, r6]
 8002590:	f8d4 681c 	ldr.w	r6, [r4, #2076]	; 0x81c
 8002594:	4333      	orrs	r3, r6
 8002596:	f8c4 381c 	str.w	r3, [r4, #2076]	; 0x81c
 800259a:	1866      	adds	r6, r4, r1
 800259c:	f8d2 c008 	ldr.w	ip, [r2, #8]
 80025a0:	2300      	movs	r3, #0
 80025a2:	01a9      	lsls	r1, r5, #6
 80025a4:	f8c6 3910 	str.w	r3, [r6, #2320]	; 0x910
 80025a8:	f041 0120 	orr.w	r1, r1, #32
 80025ac:	1e6b      	subs	r3, r5, #1
 80025ae:	f1bc 0f00 	cmp.w	ip, #0
 80025b2:	d03f      	beq.n	8002634 <usbInitEndpointI+0x124>
 80025b4:	f8b2 c01c 	ldrh.w	ip, [r2, #28]
 80025b8:	8a16      	ldrh	r6, [r2, #16]
 80025ba:	f1bc 0f01 	cmp.w	ip, #1
 80025be:	ea4f 0296 	mov.w	r2, r6, lsr #2
 80025c2:	f103 0340 	add.w	r3, r3, #64	; 0x40
 80025c6:	6f06      	ldr	r6, [r0, #112]	; 0x70
 80025c8:	bf88      	it	hi
 80025ca:	fb0c f202 	mulhi.w	r2, ip, r2
 80025ce:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80025d2:	eb02 0c06 	add.w	ip, r2, r6
 80025d6:	ea46 4202 	orr.w	r2, r6, r2, lsl #16
 80025da:	f8c0 c070 	str.w	ip, [r0, #112]	; 0x70
 80025de:	605a      	str	r2, [r3, #4]
 80025e0:	6121      	str	r1, [r4, #16]
 80025e2:	6923      	ldr	r3, [r4, #16]
 80025e4:	069a      	lsls	r2, r3, #26
 80025e6:	d4fc      	bmi.n	80025e2 <usbInitEndpointI+0xd2>
 80025e8:	200c      	movs	r0, #12
 80025ea:	f7ff f8f9 	bl	80017e0 <chSysPolledDelayX>
 80025ee:	68fb      	ldr	r3, [r7, #12]
 80025f0:	8a1b      	ldrh	r3, [r3, #16]
 80025f2:	f105 0248 	add.w	r2, r5, #72	; 0x48
 80025f6:	ea43 5385 	orr.w	r3, r3, r5, lsl #22
 80025fa:	0152      	lsls	r2, r2, #5
 80025fc:	ea43 0309 	orr.w	r3, r3, r9
 8002600:	50a3      	str	r3, [r4, r2]
 8002602:	2101      	movs	r1, #1
 8002604:	f8d4 381c 	ldr.w	r3, [r4, #2076]	; 0x81c
 8002608:	fa01 f505 	lsl.w	r5, r1, r5
 800260c:	431d      	orrs	r5, r3
 800260e:	f8c4 581c 	str.w	r5, [r4, #2076]	; 0x81c
 8002612:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002616:	eb04 1c48 	add.w	ip, r4, r8, lsl #5
 800261a:	f8dc 6b00 	ldr.w	r6, [ip, #2816]	; 0xb00
 800261e:	f426 4600 	bic.w	r6, r6, #32768	; 0x8000
 8002622:	f8cc 6b00 	str.w	r6, [ip, #2816]	; 0xb00
 8002626:	f8d4 681c 	ldr.w	r6, [r4, #2076]	; 0x81c
 800262a:	ea26 0303 	bic.w	r3, r6, r3
 800262e:	f8c4 381c 	str.w	r3, [r4, #2076]	; 0x81c
 8002632:	e7b2      	b.n	800259a <usbInitEndpointI+0x8a>
 8002634:	f105 033f 	add.w	r3, r5, #63	; 0x3f
 8002638:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800263c:	4a12      	ldr	r2, [pc, #72]	; (8002688 <usbInitEndpointI+0x178>)
 800263e:	605a      	str	r2, [r3, #4]
 8002640:	6121      	str	r1, [r4, #16]
 8002642:	6923      	ldr	r3, [r4, #16]
 8002644:	069b      	lsls	r3, r3, #26
 8002646:	d4fc      	bmi.n	8002642 <usbInitEndpointI+0x132>
 8002648:	eb04 1848 	add.w	r8, r4, r8, lsl #5
 800264c:	200c      	movs	r0, #12
 800264e:	f7ff f8c7 	bl	80017e0 <chSysPolledDelayX>
 8002652:	f8d8 3900 	ldr.w	r3, [r8, #2304]	; 0x900
 8002656:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800265a:	f8c8 3900 	str.w	r3, [r8, #2304]	; 0x900
 800265e:	f8d4 381c 	ldr.w	r3, [r4, #2076]	; 0x81c
 8002662:	2101      	movs	r1, #1
 8002664:	fa01 f505 	lsl.w	r5, r1, r5
 8002668:	ea23 0505 	bic.w	r5, r3, r5
 800266c:	f8c4 581c 	str.w	r5, [r4, #2076]	; 0x81c
 8002670:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002674:	f8df 9014 	ldr.w	r9, [pc, #20]	; 800268c <usbInitEndpointI+0x17c>
 8002678:	e771      	b.n	800255e <usbInitEndpointI+0x4e>
 800267a:	f8df 9014 	ldr.w	r9, [pc, #20]	; 8002690 <usbInitEndpointI+0x180>
 800267e:	e76e      	b.n	800255e <usbInitEndpointI+0x4e>
 8002680:	10048000 	.word	0x10048000
 8002684:	10008000 	.word	0x10008000
 8002688:	02000400 	.word	0x02000400
 800268c:	100c8000 	.word	0x100c8000
 8002690:	10088000 	.word	0x10088000
	...

080026a0 <usb_event>:
 80026a0:	2902      	cmp	r1, #2
 80026a2:	d147      	bne.n	8002734 <usb_event+0x94>
 80026a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026a6:	4606      	mov	r6, r0
 80026a8:	460d      	mov	r5, r1
 80026aa:	2320      	movs	r3, #32
 80026ac:	f383 8811 	msr	BASEPRI, r3
 80026b0:	4c21      	ldr	r4, [pc, #132]	; (8002738 <usb_event+0x98>)
 80026b2:	4a22      	ldr	r2, [pc, #136]	; (800273c <usb_event+0x9c>)
 80026b4:	2101      	movs	r1, #1
 80026b6:	f7ff ff2b 	bl	8002510 <usbInitEndpointI>
 80026ba:	4629      	mov	r1, r5
 80026bc:	4630      	mov	r0, r6
 80026be:	4a20      	ldr	r2, [pc, #128]	; (8002740 <usb_event+0xa0>)
 80026c0:	f7ff ff26 	bl	8002510 <usbInitEndpointI>
 80026c4:	f104 070c 	add.w	r7, r4, #12
 80026c8:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 80026cc:	69a3      	ldr	r3, [r4, #24]
 80026ce:	6816      	ldr	r6, [r2, #0]
 80026d0:	6263      	str	r3, [r4, #36]	; 0x24
 80026d2:	4638      	mov	r0, r7
 80026d4:	2500      	movs	r5, #0
 80026d6:	f06f 0101 	mvn.w	r1, #1
 80026da:	6223      	str	r3, [r4, #32]
 80026dc:	6165      	str	r5, [r4, #20]
 80026de:	f7fe ffc7 	bl	8001670 <chThdDequeueAllI>
 80026e2:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 80026e6:	f104 0030 	add.w	r0, r4, #48	; 0x30
 80026ea:	1a9b      	subs	r3, r3, r2
 80026ec:	f06f 0101 	mvn.w	r1, #1
 80026f0:	64a2      	str	r2, [r4, #72]	; 0x48
 80026f2:	6462      	str	r2, [r4, #68]	; 0x44
 80026f4:	63a3      	str	r3, [r4, #56]	; 0x38
 80026f6:	f7fe ffbb 	bl	8001670 <chThdDequeueAllI>
 80026fa:	1d20      	adds	r0, r4, #4
 80026fc:	2101      	movs	r1, #1
 80026fe:	f7fe fe67 	bl	80013d0 <chEvtBroadcastFlagsI>
 8002702:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8002706:	7959      	ldrb	r1, [r3, #5]
 8002708:	eb06 0381 	add.w	r3, r6, r1, lsl #2
 800270c:	4630      	mov	r0, r6
 800270e:	68da      	ldr	r2, [r3, #12]
 8002710:	6993      	ldr	r3, [r2, #24]
 8002712:	8a52      	ldrh	r2, [r2, #18]
 8002714:	605a      	str	r2, [r3, #4]
 8002716:	2201      	movs	r2, #1
 8002718:	701a      	strb	r2, [r3, #0]
 800271a:	e9c3 5702 	strd	r5, r7, [r3, #8]
 800271e:	f7fe f90f 	bl	8000940 <usb_lld_prepare_receive>
 8002722:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8002726:	4630      	mov	r0, r6
 8002728:	7959      	ldrb	r1, [r3, #5]
 800272a:	f7fe fa59 	bl	8000be0 <usbStartReceiveI>
 800272e:	f385 8811 	msr	BASEPRI, r5
 8002732:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002734:	4770      	bx	lr
 8002736:	bf00      	nop
 8002738:	20000e70 	.word	0x20000e70
 800273c:	08008000 	.word	0x08008000
 8002740:	08008030 	.word	0x08008030
	...

08002750 <chThdYield>:
 8002750:	b538      	push	{r3, r4, r5, lr}
 8002752:	2320      	movs	r3, #32
 8002754:	f383 8811 	msr	BASEPRI, r3
 8002758:	4a11      	ldr	r2, [pc, #68]	; (80027a0 <chThdYield+0x50>)
 800275a:	6810      	ldr	r0, [r2, #0]
 800275c:	6994      	ldr	r4, [r2, #24]
 800275e:	6883      	ldr	r3, [r0, #8]
 8002760:	68a1      	ldr	r1, [r4, #8]
 8002762:	428b      	cmp	r3, r1
 8002764:	d203      	bcs.n	800276e <chThdYield+0x1e>
 8002766:	2300      	movs	r3, #0
 8002768:	f383 8811 	msr	BASEPRI, r3
 800276c:	bd38      	pop	{r3, r4, r5, pc}
 800276e:	6803      	ldr	r3, [r0, #0]
 8002770:	6013      	str	r3, [r2, #0]
 8002772:	605a      	str	r2, [r3, #4]
 8002774:	2501      	movs	r5, #1
 8002776:	6190      	str	r0, [r2, #24]
 8002778:	2200      	movs	r2, #0
 800277a:	7705      	strb	r5, [r0, #28]
 800277c:	7722      	strb	r2, [r4, #28]
 800277e:	e000      	b.n	8002782 <chThdYield+0x32>
 8002780:	681b      	ldr	r3, [r3, #0]
 8002782:	689a      	ldr	r2, [r3, #8]
 8002784:	4291      	cmp	r1, r2
 8002786:	d9fb      	bls.n	8002780 <chThdYield+0x30>
 8002788:	685a      	ldr	r2, [r3, #4]
 800278a:	4621      	mov	r1, r4
 800278c:	e9c4 3200 	strd	r3, r2, [r4]
 8002790:	6014      	str	r4, [r2, #0]
 8002792:	605c      	str	r4, [r3, #4]
 8002794:	f7fd fd74 	bl	8000280 <_port_switch>
 8002798:	2300      	movs	r3, #0
 800279a:	f383 8811 	msr	BASEPRI, r3
 800279e:	bd38      	pop	{r3, r4, r5, pc}
 80027a0:	20001290 	.word	0x20001290
	...

080027b0 <thread8>:
 80027b0:	b538      	push	{r3, r4, r5, lr}
 80027b2:	4d09      	ldr	r5, [pc, #36]	; (80027d8 <thread8+0x28>)
 80027b4:	4604      	mov	r4, r0
 80027b6:	f7ff ffcb 	bl	8002750 <chThdYield>
 80027ba:	f7ff ffc9 	bl	8002750 <chThdYield>
 80027be:	f7ff ffc7 	bl	8002750 <chThdYield>
 80027c2:	f7ff ffc5 	bl	8002750 <chThdYield>
 80027c6:	6823      	ldr	r3, [r4, #0]
 80027c8:	69aa      	ldr	r2, [r5, #24]
 80027ca:	3304      	adds	r3, #4
 80027cc:	6023      	str	r3, [r4, #0]
 80027ce:	7f53      	ldrb	r3, [r2, #29]
 80027d0:	075b      	lsls	r3, r3, #29
 80027d2:	d5f0      	bpl.n	80027b6 <thread8+0x6>
 80027d4:	bd38      	pop	{r3, r4, r5, pc}
 80027d6:	bf00      	nop
 80027d8:	20001290 	.word	0x20001290
 80027dc:	00000000 	.word	0x00000000

080027e0 <chSchDoRescheduleAhead>:
 80027e0:	4a0d      	ldr	r2, [pc, #52]	; (8002818 <chSchDoRescheduleAhead+0x38>)
 80027e2:	6810      	ldr	r0, [r2, #0]
 80027e4:	b430      	push	{r4, r5}
 80027e6:	6803      	ldr	r3, [r0, #0]
 80027e8:	6994      	ldr	r4, [r2, #24]
 80027ea:	6013      	str	r3, [r2, #0]
 80027ec:	68a1      	ldr	r1, [r4, #8]
 80027ee:	605a      	str	r2, [r3, #4]
 80027f0:	2501      	movs	r5, #1
 80027f2:	6190      	str	r0, [r2, #24]
 80027f4:	2200      	movs	r2, #0
 80027f6:	7705      	strb	r5, [r0, #28]
 80027f8:	7722      	strb	r2, [r4, #28]
 80027fa:	e000      	b.n	80027fe <chSchDoRescheduleAhead+0x1e>
 80027fc:	681b      	ldr	r3, [r3, #0]
 80027fe:	689a      	ldr	r2, [r3, #8]
 8002800:	4291      	cmp	r1, r2
 8002802:	d3fb      	bcc.n	80027fc <chSchDoRescheduleAhead+0x1c>
 8002804:	685a      	ldr	r2, [r3, #4]
 8002806:	4621      	mov	r1, r4
 8002808:	e9c4 3200 	strd	r3, r2, [r4]
 800280c:	6014      	str	r4, [r2, #0]
 800280e:	605c      	str	r4, [r3, #4]
 8002810:	bc30      	pop	{r4, r5}
 8002812:	f7fd bd35 	b.w	8000280 <_port_switch>
 8002816:	bf00      	nop
 8002818:	20001290 	.word	0x20001290
 800281c:	00000000 	.word	0x00000000

08002820 <chSchRescheduleS>:
 8002820:	4b04      	ldr	r3, [pc, #16]	; (8002834 <chSchRescheduleS+0x14>)
 8002822:	681a      	ldr	r2, [r3, #0]
 8002824:	699b      	ldr	r3, [r3, #24]
 8002826:	6892      	ldr	r2, [r2, #8]
 8002828:	689b      	ldr	r3, [r3, #8]
 800282a:	429a      	cmp	r2, r3
 800282c:	d800      	bhi.n	8002830 <chSchRescheduleS+0x10>
 800282e:	4770      	bx	lr
 8002830:	f7ff bfd6 	b.w	80027e0 <chSchDoRescheduleAhead>
 8002834:	20001290 	.word	0x20001290
	...

08002840 <thread4.lto_priv.78>:
 8002840:	b508      	push	{r3, lr}
 8002842:	2220      	movs	r2, #32
 8002844:	f382 8811 	msr	BASEPRI, r2
 8002848:	6883      	ldr	r3, [r0, #8]
 800284a:	2b00      	cmp	r3, #0
 800284c:	dd05      	ble.n	800285a <thread4.lto_priv.78+0x1a>
 800284e:	f7ff ffe7 	bl	8002820 <chSchRescheduleS>
 8002852:	2300      	movs	r3, #0
 8002854:	f383 8811 	msr	BASEPRI, r3
 8002858:	bd08      	pop	{r3, pc}
 800285a:	f7fe fe81 	bl	8001560 <chSemSignalI>
 800285e:	f7ff ffdf 	bl	8002820 <chSchRescheduleS>
 8002862:	2300      	movs	r3, #0
 8002864:	f383 8811 	msr	BASEPRI, r3
 8002868:	bd08      	pop	{r3, pc}
 800286a:	bf00      	nop
 800286c:	0000      	movs	r0, r0
	...

08002870 <chMtxUnlockAll>:
 8002870:	4a13      	ldr	r2, [pc, #76]	; (80028c0 <chMtxUnlockAll+0x50>)
 8002872:	b570      	push	{r4, r5, r6, lr}
 8002874:	2320      	movs	r3, #32
 8002876:	6994      	ldr	r4, [r2, #24]
 8002878:	f383 8811 	msr	BASEPRI, r3
 800287c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800287e:	b1b3      	cbz	r3, 80028ae <chMtxUnlockAll+0x3e>
 8002880:	2600      	movs	r6, #0
 8002882:	681a      	ldr	r2, [r3, #0]
 8002884:	68d9      	ldr	r1, [r3, #12]
 8002886:	63a1      	str	r1, [r4, #56]	; 0x38
 8002888:	4293      	cmp	r3, r2
 800288a:	4610      	mov	r0, r2
 800288c:	d013      	beq.n	80028b6 <chMtxUnlockAll+0x46>
 800288e:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8002890:	6811      	ldr	r1, [r2, #0]
 8002892:	6019      	str	r1, [r3, #0]
 8002894:	604b      	str	r3, [r1, #4]
 8002896:	e9c3 2502 	strd	r2, r5, [r3, #8]
 800289a:	6393      	str	r3, [r2, #56]	; 0x38
 800289c:	f7fe fc90 	bl	80011c0 <chSchReadyI>
 80028a0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80028a2:	2b00      	cmp	r3, #0
 80028a4:	d1ed      	bne.n	8002882 <chMtxUnlockAll+0x12>
 80028a6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80028a8:	60a3      	str	r3, [r4, #8]
 80028aa:	f7ff ffb9 	bl	8002820 <chSchRescheduleS>
 80028ae:	2300      	movs	r3, #0
 80028b0:	f383 8811 	msr	BASEPRI, r3
 80028b4:	bd70      	pop	{r4, r5, r6, pc}
 80028b6:	609e      	str	r6, [r3, #8]
 80028b8:	460b      	mov	r3, r1
 80028ba:	2b00      	cmp	r3, #0
 80028bc:	d1e1      	bne.n	8002882 <chMtxUnlockAll+0x12>
 80028be:	e7f2      	b.n	80028a6 <chMtxUnlockAll+0x36>
 80028c0:	20001290 	.word	0x20001290
	...

080028d0 <chThdSetPriority>:
 80028d0:	b510      	push	{r4, lr}
 80028d2:	2320      	movs	r3, #32
 80028d4:	f383 8811 	msr	BASEPRI, r3
 80028d8:	4b08      	ldr	r3, [pc, #32]	; (80028fc <chThdSetPriority+0x2c>)
 80028da:	699b      	ldr	r3, [r3, #24]
 80028dc:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80028de:	6899      	ldr	r1, [r3, #8]
 80028e0:	42a1      	cmp	r1, r4
 80028e2:	d001      	beq.n	80028e8 <chThdSetPriority+0x18>
 80028e4:	4281      	cmp	r1, r0
 80028e6:	d200      	bcs.n	80028ea <chThdSetPriority+0x1a>
 80028e8:	6098      	str	r0, [r3, #8]
 80028ea:	63d8      	str	r0, [r3, #60]	; 0x3c
 80028ec:	f7ff ff98 	bl	8002820 <chSchRescheduleS>
 80028f0:	2300      	movs	r3, #0
 80028f2:	f383 8811 	msr	BASEPRI, r3
 80028f6:	4620      	mov	r0, r4
 80028f8:	bd10      	pop	{r4, pc}
 80028fa:	bf00      	nop
 80028fc:	20001290 	.word	0x20001290

08002900 <thd3_execute>:
 8002900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002902:	4e49      	ldr	r6, [pc, #292]	; (8002a28 <thd3_execute+0x128>)
 8002904:	69b3      	ldr	r3, [r6, #24]
 8002906:	689c      	ldr	r4, [r3, #8]
 8002908:	1c65      	adds	r5, r4, #1
 800290a:	4628      	mov	r0, r5
 800290c:	f7ff ffe0 	bl	80028d0 <chThdSetPriority>
 8002910:	1b01      	subs	r1, r0, r4
 8002912:	fab1 f181 	clz	r1, r1
 8002916:	4607      	mov	r7, r0
 8002918:	0949      	lsrs	r1, r1, #5
 800291a:	2001      	movs	r0, #1
 800291c:	f7fd ff48 	bl	80007b0 <_test_assert>
 8002920:	b100      	cbz	r0, 8002924 <thd3_execute+0x24>
 8002922:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002924:	69b3      	ldr	r3, [r6, #24]
 8002926:	6899      	ldr	r1, [r3, #8]
 8002928:	1b49      	subs	r1, r1, r5
 800292a:	fab1 f181 	clz	r1, r1
 800292e:	2002      	movs	r0, #2
 8002930:	0949      	lsrs	r1, r1, #5
 8002932:	f7fd ff3d 	bl	80007b0 <_test_assert>
 8002936:	2800      	cmp	r0, #0
 8002938:	d1f3      	bne.n	8002922 <thd3_execute+0x22>
 800293a:	4638      	mov	r0, r7
 800293c:	f7ff ffc8 	bl	80028d0 <chThdSetPriority>
 8002940:	1a29      	subs	r1, r5, r0
 8002942:	fab1 f181 	clz	r1, r1
 8002946:	0949      	lsrs	r1, r1, #5
 8002948:	2003      	movs	r0, #3
 800294a:	f7fd ff31 	bl	80007b0 <_test_assert>
 800294e:	2800      	cmp	r0, #0
 8002950:	d1e7      	bne.n	8002922 <thd3_execute+0x22>
 8002952:	69b3      	ldr	r3, [r6, #24]
 8002954:	6899      	ldr	r1, [r3, #8]
 8002956:	1b09      	subs	r1, r1, r4
 8002958:	fab1 f181 	clz	r1, r1
 800295c:	2004      	movs	r0, #4
 800295e:	0949      	lsrs	r1, r1, #5
 8002960:	f7fd ff26 	bl	80007b0 <_test_assert>
 8002964:	2800      	cmp	r0, #0
 8002966:	d1dc      	bne.n	8002922 <thd3_execute+0x22>
 8002968:	2320      	movs	r3, #32
 800296a:	f383 8811 	msr	BASEPRI, r3
 800296e:	69b2      	ldr	r2, [r6, #24]
 8002970:	6893      	ldr	r3, [r2, #8]
 8002972:	3302      	adds	r3, #2
 8002974:	6093      	str	r3, [r2, #8]
 8002976:	f380 8811 	msr	BASEPRI, r0
 800297a:	69b3      	ldr	r3, [r6, #24]
 800297c:	6899      	ldr	r1, [r3, #8]
 800297e:	1ca7      	adds	r7, r4, #2
 8002980:	1bc9      	subs	r1, r1, r7
 8002982:	fab1 f181 	clz	r1, r1
 8002986:	0949      	lsrs	r1, r1, #5
 8002988:	2005      	movs	r0, #5
 800298a:	f7fd ff11 	bl	80007b0 <_test_assert>
 800298e:	2800      	cmp	r0, #0
 8002990:	d1c7      	bne.n	8002922 <thd3_execute+0x22>
 8002992:	4628      	mov	r0, r5
 8002994:	f7ff ff9c 	bl	80028d0 <chThdSetPriority>
 8002998:	1b01      	subs	r1, r0, r4
 800299a:	fab1 f181 	clz	r1, r1
 800299e:	0949      	lsrs	r1, r1, #5
 80029a0:	2006      	movs	r0, #6
 80029a2:	f7fd ff05 	bl	80007b0 <_test_assert>
 80029a6:	2800      	cmp	r0, #0
 80029a8:	d1bb      	bne.n	8002922 <thd3_execute+0x22>
 80029aa:	69b3      	ldr	r3, [r6, #24]
 80029ac:	6899      	ldr	r1, [r3, #8]
 80029ae:	1bc9      	subs	r1, r1, r7
 80029b0:	fab1 f181 	clz	r1, r1
 80029b4:	0949      	lsrs	r1, r1, #5
 80029b6:	2007      	movs	r0, #7
 80029b8:	f7fd fefa 	bl	80007b0 <_test_assert>
 80029bc:	2800      	cmp	r0, #0
 80029be:	d1b0      	bne.n	8002922 <thd3_execute+0x22>
 80029c0:	69b3      	ldr	r3, [r6, #24]
 80029c2:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80029c4:	1b4f      	subs	r7, r1, r5
 80029c6:	4279      	negs	r1, r7
 80029c8:	4179      	adcs	r1, r7
 80029ca:	2008      	movs	r0, #8
 80029cc:	f7fd fef0 	bl	80007b0 <_test_assert>
 80029d0:	2800      	cmp	r0, #0
 80029d2:	d1a6      	bne.n	8002922 <thd3_execute+0x22>
 80029d4:	1ce7      	adds	r7, r4, #3
 80029d6:	4638      	mov	r0, r7
 80029d8:	f7ff ff7a 	bl	80028d0 <chThdSetPriority>
 80029dc:	1a28      	subs	r0, r5, r0
 80029de:	4241      	negs	r1, r0
 80029e0:	4141      	adcs	r1, r0
 80029e2:	2009      	movs	r0, #9
 80029e4:	f7fd fee4 	bl	80007b0 <_test_assert>
 80029e8:	2800      	cmp	r0, #0
 80029ea:	d19a      	bne.n	8002922 <thd3_execute+0x22>
 80029ec:	69b3      	ldr	r3, [r6, #24]
 80029ee:	6899      	ldr	r1, [r3, #8]
 80029f0:	1bca      	subs	r2, r1, r7
 80029f2:	4251      	negs	r1, r2
 80029f4:	4151      	adcs	r1, r2
 80029f6:	200a      	movs	r0, #10
 80029f8:	f7fd feda 	bl	80007b0 <_test_assert>
 80029fc:	2800      	cmp	r0, #0
 80029fe:	d190      	bne.n	8002922 <thd3_execute+0x22>
 8002a00:	69b3      	ldr	r3, [r6, #24]
 8002a02:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8002a04:	1bcb      	subs	r3, r1, r7
 8002a06:	4259      	negs	r1, r3
 8002a08:	4159      	adcs	r1, r3
 8002a0a:	200b      	movs	r0, #11
 8002a0c:	f7fd fed0 	bl	80007b0 <_test_assert>
 8002a10:	2800      	cmp	r0, #0
 8002a12:	d186      	bne.n	8002922 <thd3_execute+0x22>
 8002a14:	2320      	movs	r3, #32
 8002a16:	f383 8811 	msr	BASEPRI, r3
 8002a1a:	69b3      	ldr	r3, [r6, #24]
 8002a1c:	609c      	str	r4, [r3, #8]
 8002a1e:	63dc      	str	r4, [r3, #60]	; 0x3c
 8002a20:	f380 8811 	msr	BASEPRI, r0
 8002a24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a26:	bf00      	nop
 8002a28:	20001290 	.word	0x20001290
 8002a2c:	00000000 	.word	0x00000000

08002a30 <chSysRestoreStatusX.part.3>:
 8002a30:	b510      	push	{r4, lr}
 8002a32:	f3ef 8405 	mrs	r4, IPSR
 8002a36:	f3c4 0408 	ubfx	r4, r4, #0, #9
 8002a3a:	b11c      	cbz	r4, 8002a44 <chSysRestoreStatusX.part.3+0x14>
 8002a3c:	2300      	movs	r3, #0
 8002a3e:	f383 8811 	msr	BASEPRI, r3
 8002a42:	bd10      	pop	{r4, pc}
 8002a44:	f7ff feec 	bl	8002820 <chSchRescheduleS>
 8002a48:	f384 8811 	msr	BASEPRI, r4
 8002a4c:	bd10      	pop	{r4, pc}
 8002a4e:	bf00      	nop

08002a50 <vtcb>:
 8002a50:	b508      	push	{r3, lr}
 8002a52:	2320      	movs	r3, #32
 8002a54:	f383 8811 	msr	BASEPRI, r3
 8002a58:	2200      	movs	r2, #0
 8002a5a:	f382 8811 	msr	BASEPRI, r2
 8002a5e:	f383 8811 	msr	BASEPRI, r3
 8002a62:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8002a66:	b91b      	cbnz	r3, 8002a70 <vtcb+0x20>
 8002a68:	f7fe feb2 	bl	80017d0 <chSysGetStatusAndLockX.part.2>
 8002a6c:	f7ff ffe0 	bl	8002a30 <chSysRestoreStatusX.part.3>
 8002a70:	2300      	movs	r3, #0
 8002a72:	f383 8811 	msr	BASEPRI, r3
 8002a76:	bd08      	pop	{r3, pc}
	...

08002a80 <chSchWakeupS>:
 8002a80:	4b14      	ldr	r3, [pc, #80]	; (8002ad4 <chSchWakeupS+0x54>)
 8002a82:	b470      	push	{r4, r5, r6}
 8002a84:	699e      	ldr	r6, [r3, #24]
 8002a86:	6885      	ldr	r5, [r0, #8]
 8002a88:	4604      	mov	r4, r0
 8002a8a:	68b0      	ldr	r0, [r6, #8]
 8002a8c:	6221      	str	r1, [r4, #32]
 8002a8e:	4285      	cmp	r5, r0
 8002a90:	f04f 0200 	mov.w	r2, #0
 8002a94:	d80b      	bhi.n	8002aae <chSchWakeupS+0x2e>
 8002a96:	7722      	strb	r2, [r4, #28]
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	689a      	ldr	r2, [r3, #8]
 8002a9c:	4295      	cmp	r5, r2
 8002a9e:	d9fb      	bls.n	8002a98 <chSchWakeupS+0x18>
 8002aa0:	685a      	ldr	r2, [r3, #4]
 8002aa2:	e9c4 3200 	strd	r3, r2, [r4]
 8002aa6:	6014      	str	r4, [r2, #0]
 8002aa8:	605c      	str	r4, [r3, #4]
 8002aaa:	bc70      	pop	{r4, r5, r6}
 8002aac:	4770      	bx	lr
 8002aae:	7732      	strb	r2, [r6, #28]
 8002ab0:	461a      	mov	r2, r3
 8002ab2:	6812      	ldr	r2, [r2, #0]
 8002ab4:	6891      	ldr	r1, [r2, #8]
 8002ab6:	4288      	cmp	r0, r1
 8002ab8:	d9fb      	bls.n	8002ab2 <chSchWakeupS+0x32>
 8002aba:	6851      	ldr	r1, [r2, #4]
 8002abc:	6071      	str	r1, [r6, #4]
 8002abe:	2001      	movs	r0, #1
 8002ac0:	6032      	str	r2, [r6, #0]
 8002ac2:	600e      	str	r6, [r1, #0]
 8002ac4:	6056      	str	r6, [r2, #4]
 8002ac6:	7720      	strb	r0, [r4, #28]
 8002ac8:	4631      	mov	r1, r6
 8002aca:	4620      	mov	r0, r4
 8002acc:	619c      	str	r4, [r3, #24]
 8002ace:	bc70      	pop	{r4, r5, r6}
 8002ad0:	f7fd bbd6 	b.w	8000280 <_port_switch>
 8002ad4:	20001290 	.word	0x20001290
	...

08002ae0 <chThdCreateFromMemoryPool.constprop.56>:
 8002ae0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002ae2:	4d10      	ldr	r5, [pc, #64]	; (8002b24 <chThdCreateFromMemoryPool.constprop.56+0x44>)
 8002ae4:	b083      	sub	sp, #12
 8002ae6:	4606      	mov	r6, r0
 8002ae8:	4628      	mov	r0, r5
 8002aea:	460f      	mov	r7, r1
 8002aec:	f7fe f9c8 	bl	8000e80 <chPoolAlloc>
 8002af0:	b1a8      	cbz	r0, 8002b1e <chThdCreateFromMemoryPool.constprop.56+0x3e>
 8002af2:	2320      	movs	r3, #32
 8002af4:	f383 8811 	msr	BASEPRI, r3
 8002af8:	4b0b      	ldr	r3, [pc, #44]	; (8002b28 <chThdCreateFromMemoryPool.constprop.56+0x48>)
 8002afa:	6869      	ldr	r1, [r5, #4]
 8002afc:	9700      	str	r7, [sp, #0]
 8002afe:	4632      	mov	r2, r6
 8002b00:	f7fe fafe 	bl	8001100 <chThdCreateI>
 8002b04:	2302      	movs	r3, #2
 8002b06:	7743      	strb	r3, [r0, #29]
 8002b08:	6405      	str	r5, [r0, #64]	; 0x40
 8002b0a:	2100      	movs	r1, #0
 8002b0c:	4604      	mov	r4, r0
 8002b0e:	f7ff ffb7 	bl	8002a80 <chSchWakeupS>
 8002b12:	2300      	movs	r3, #0
 8002b14:	f383 8811 	msr	BASEPRI, r3
 8002b18:	4620      	mov	r0, r4
 8002b1a:	b003      	add	sp, #12
 8002b1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002b1e:	4604      	mov	r4, r0
 8002b20:	e7fa      	b.n	8002b18 <chThdCreateFromMemoryPool.constprop.56+0x38>
 8002b22:	bf00      	nop
 8002b24:	200014c0 	.word	0x200014c0
 8002b28:	08000841 	.word	0x08000841
 8002b2c:	00000000 	.word	0x00000000

08002b30 <chCondSignal.constprop.48>:
 8002b30:	b508      	push	{r3, lr}
 8002b32:	2320      	movs	r3, #32
 8002b34:	f383 8811 	msr	BASEPRI, r3
 8002b38:	4b06      	ldr	r3, [pc, #24]	; (8002b54 <chCondSignal.constprop.48+0x24>)
 8002b3a:	6818      	ldr	r0, [r3, #0]
 8002b3c:	4298      	cmp	r0, r3
 8002b3e:	d005      	beq.n	8002b4c <chCondSignal.constprop.48+0x1c>
 8002b40:	6802      	ldr	r2, [r0, #0]
 8002b42:	601a      	str	r2, [r3, #0]
 8002b44:	6053      	str	r3, [r2, #4]
 8002b46:	2100      	movs	r1, #0
 8002b48:	f7ff ff9a 	bl	8002a80 <chSchWakeupS>
 8002b4c:	2300      	movs	r3, #0
 8002b4e:	f383 8811 	msr	BASEPRI, r3
 8002b52:	bd08      	pop	{r3, pc}
 8002b54:	20000800 	.word	0x20000800
	...

08002b60 <chMtxUnlock>:
 8002b60:	4b16      	ldr	r3, [pc, #88]	; (8002bbc <chMtxUnlock+0x5c>)
 8002b62:	b570      	push	{r4, r5, r6, lr}
 8002b64:	699d      	ldr	r5, [r3, #24]
 8002b66:	2320      	movs	r3, #32
 8002b68:	f383 8811 	msr	BASEPRI, r3
 8002b6c:	6804      	ldr	r4, [r0, #0]
 8002b6e:	68c3      	ldr	r3, [r0, #12]
 8002b70:	63ab      	str	r3, [r5, #56]	; 0x38
 8002b72:	4284      	cmp	r4, r0
 8002b74:	d01c      	beq.n	8002bb0 <chMtxUnlock+0x50>
 8002b76:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8002b78:	b14b      	cbz	r3, 8002b8e <chMtxUnlock+0x2e>
 8002b7a:	681a      	ldr	r2, [r3, #0]
 8002b7c:	4293      	cmp	r3, r2
 8002b7e:	d003      	beq.n	8002b88 <chMtxUnlock+0x28>
 8002b80:	6892      	ldr	r2, [r2, #8]
 8002b82:	4291      	cmp	r1, r2
 8002b84:	bf38      	it	cc
 8002b86:	4611      	movcc	r1, r2
 8002b88:	68db      	ldr	r3, [r3, #12]
 8002b8a:	2b00      	cmp	r3, #0
 8002b8c:	d1f5      	bne.n	8002b7a <chMtxUnlock+0x1a>
 8002b8e:	4603      	mov	r3, r0
 8002b90:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8002b92:	6822      	ldr	r2, [r4, #0]
 8002b94:	60a9      	str	r1, [r5, #8]
 8002b96:	4620      	mov	r0, r4
 8002b98:	601a      	str	r2, [r3, #0]
 8002b9a:	2100      	movs	r1, #0
 8002b9c:	6053      	str	r3, [r2, #4]
 8002b9e:	e9c3 4602 	strd	r4, r6, [r3, #8]
 8002ba2:	63a3      	str	r3, [r4, #56]	; 0x38
 8002ba4:	f7ff ff6c 	bl	8002a80 <chSchWakeupS>
 8002ba8:	2300      	movs	r3, #0
 8002baa:	f383 8811 	msr	BASEPRI, r3
 8002bae:	bd70      	pop	{r4, r5, r6, pc}
 8002bb0:	2300      	movs	r3, #0
 8002bb2:	60a3      	str	r3, [r4, #8]
 8002bb4:	2300      	movs	r3, #0
 8002bb6:	f383 8811 	msr	BASEPRI, r3
 8002bba:	bd70      	pop	{r4, r5, r6, pc}
 8002bbc:	20001290 	.word	0x20001290

08002bc0 <chSemSignal>:
 8002bc0:	b508      	push	{r3, lr}
 8002bc2:	2320      	movs	r3, #32
 8002bc4:	f383 8811 	msr	BASEPRI, r3
 8002bc8:	6883      	ldr	r3, [r0, #8]
 8002bca:	3301      	adds	r3, #1
 8002bcc:	2b00      	cmp	r3, #0
 8002bce:	6083      	str	r3, [r0, #8]
 8002bd0:	dd03      	ble.n	8002bda <chSemSignal+0x1a>
 8002bd2:	2300      	movs	r3, #0
 8002bd4:	f383 8811 	msr	BASEPRI, r3
 8002bd8:	bd08      	pop	{r3, pc}
 8002bda:	4603      	mov	r3, r0
 8002bdc:	6800      	ldr	r0, [r0, #0]
 8002bde:	6802      	ldr	r2, [r0, #0]
 8002be0:	601a      	str	r2, [r3, #0]
 8002be2:	2100      	movs	r1, #0
 8002be4:	6053      	str	r3, [r2, #4]
 8002be6:	f7ff ff4b 	bl	8002a80 <chSchWakeupS>
 8002bea:	2300      	movs	r3, #0
 8002bec:	f383 8811 	msr	BASEPRI, r3
 8002bf0:	bd08      	pop	{r3, pc}
 8002bf2:	bf00      	nop
	...

08002c00 <chThdCreateStatic>:
 8002c00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c02:	9e06      	ldr	r6, [sp, #24]
 8002c04:	4604      	mov	r4, r0
 8002c06:	2520      	movs	r5, #32
 8002c08:	f385 8811 	msr	BASEPRI, r5
 8002c0c:	3924      	subs	r1, #36	; 0x24
 8002c0e:	1845      	adds	r5, r0, r1
 8002c10:	60c5      	str	r5, [r0, #12]
 8002c12:	4f12      	ldr	r7, [pc, #72]	; (8002c5c <chThdCreateStatic+0x5c>)
 8002c14:	5043      	str	r3, [r0, r1]
 8002c16:	4b12      	ldr	r3, [pc, #72]	; (8002c60 <chThdCreateStatic+0x60>)
 8002c18:	606e      	str	r6, [r5, #4]
 8002c1a:	622f      	str	r7, [r5, #32]
 8002c1c:	6103      	str	r3, [r0, #16]
 8002c1e:	6959      	ldr	r1, [r3, #20]
 8002c20:	63c2      	str	r2, [r0, #60]	; 0x3c
 8002c22:	6082      	str	r2, [r0, #8]
 8002c24:	2500      	movs	r5, #0
 8002c26:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8002c2a:	f04f 0c02 	mov.w	ip, #2
 8002c2e:	f100 0624 	add.w	r6, r0, #36	; 0x24
 8002c32:	2701      	movs	r7, #1
 8002c34:	6141      	str	r1, [r0, #20]
 8002c36:	f8a0 c01c 	strh.w	ip, [r0, #28]
 8002c3a:	7787      	strb	r7, [r0, #30]
 8002c3c:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8002c40:	6185      	str	r5, [r0, #24]
 8002c42:	6108      	str	r0, [r1, #16]
 8002c44:	4629      	mov	r1, r5
 8002c46:	e9c0 6209 	strd	r6, r2, [r0, #36]	; 0x24
 8002c4a:	62c2      	str	r2, [r0, #44]	; 0x2c
 8002c4c:	6158      	str	r0, [r3, #20]
 8002c4e:	f7ff ff17 	bl	8002a80 <chSchWakeupS>
 8002c52:	f385 8811 	msr	BASEPRI, r5
 8002c56:	4620      	mov	r0, r4
 8002c58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002c5a:	bf00      	nop
 8002c5c:	08000291 	.word	0x08000291
 8002c60:	20001290 	.word	0x20001290
	...

08002c70 <chSchGoSleepS>:
 8002c70:	4b07      	ldr	r3, [pc, #28]	; (8002c90 <chSchGoSleepS+0x20>)
 8002c72:	6999      	ldr	r1, [r3, #24]
 8002c74:	681a      	ldr	r2, [r3, #0]
 8002c76:	b410      	push	{r4}
 8002c78:	7708      	strb	r0, [r1, #28]
 8002c7a:	6810      	ldr	r0, [r2, #0]
 8002c7c:	6018      	str	r0, [r3, #0]
 8002c7e:	2401      	movs	r4, #1
 8002c80:	6043      	str	r3, [r0, #4]
 8002c82:	7714      	strb	r4, [r2, #28]
 8002c84:	4610      	mov	r0, r2
 8002c86:	bc10      	pop	{r4}
 8002c88:	619a      	str	r2, [r3, #24]
 8002c8a:	f7fd baf9 	b.w	8000280 <_port_switch>
 8002c8e:	bf00      	nop
 8002c90:	20001290 	.word	0x20001290
	...

08002ca0 <chSemSignalWait.constprop.52>:
 8002ca0:	b538      	push	{r3, r4, r5, lr}
 8002ca2:	2320      	movs	r3, #32
 8002ca4:	f383 8811 	msr	BASEPRI, r3
 8002ca8:	4c15      	ldr	r4, [pc, #84]	; (8002d00 <chSemSignalWait.constprop.52+0x60>)
 8002caa:	68a3      	ldr	r3, [r4, #8]
 8002cac:	3301      	adds	r3, #1
 8002cae:	2b00      	cmp	r3, #0
 8002cb0:	60a3      	str	r3, [r4, #8]
 8002cb2:	dd1a      	ble.n	8002cea <chSemSignalWait.constprop.52+0x4a>
 8002cb4:	3b01      	subs	r3, #1
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	60a3      	str	r3, [r4, #8]
 8002cba:	db06      	blt.n	8002cca <chSemSignalWait.constprop.52+0x2a>
 8002cbc:	f7ff fdb0 	bl	8002820 <chSchRescheduleS>
 8002cc0:	2000      	movs	r0, #0
 8002cc2:	2300      	movs	r3, #0
 8002cc4:	f383 8811 	msr	BASEPRI, r3
 8002cc8:	bd38      	pop	{r3, r4, r5, pc}
 8002cca:	4a0e      	ldr	r2, [pc, #56]	; (8002d04 <chSemSignalWait.constprop.52+0x64>)
 8002ccc:	6863      	ldr	r3, [r4, #4]
 8002cce:	6995      	ldr	r5, [r2, #24]
 8002cd0:	2005      	movs	r0, #5
 8002cd2:	e9c5 4300 	strd	r4, r3, [r5]
 8002cd6:	601d      	str	r5, [r3, #0]
 8002cd8:	622c      	str	r4, [r5, #32]
 8002cda:	6065      	str	r5, [r4, #4]
 8002cdc:	f7ff ffc8 	bl	8002c70 <chSchGoSleepS>
 8002ce0:	6a28      	ldr	r0, [r5, #32]
 8002ce2:	2300      	movs	r3, #0
 8002ce4:	f383 8811 	msr	BASEPRI, r3
 8002ce8:	bd38      	pop	{r3, r4, r5, pc}
 8002cea:	6820      	ldr	r0, [r4, #0]
 8002cec:	6803      	ldr	r3, [r0, #0]
 8002cee:	6023      	str	r3, [r4, #0]
 8002cf0:	605c      	str	r4, [r3, #4]
 8002cf2:	f7fe fa65 	bl	80011c0 <chSchReadyI>
 8002cf6:	2200      	movs	r2, #0
 8002cf8:	68a3      	ldr	r3, [r4, #8]
 8002cfa:	6202      	str	r2, [r0, #32]
 8002cfc:	e7da      	b.n	8002cb4 <chSemSignalWait.constprop.52+0x14>
 8002cfe:	bf00      	nop
 8002d00:	200008cc 	.word	0x200008cc
 8002d04:	20001290 	.word	0x20001290
	...

08002d10 <sem3_execute>:
 8002d10:	b510      	push	{r4, lr}
 8002d12:	4a1e      	ldr	r2, [pc, #120]	; (8002d8c <sem3_execute+0x7c>)
 8002d14:	4b1e      	ldr	r3, [pc, #120]	; (8002d90 <sem3_execute+0x80>)
 8002d16:	6992      	ldr	r2, [r2, #24]
 8002d18:	481e      	ldr	r0, [pc, #120]	; (8002d94 <sem3_execute+0x84>)
 8002d1a:	6892      	ldr	r2, [r2, #8]
 8002d1c:	4c1e      	ldr	r4, [pc, #120]	; (8002d98 <sem3_execute+0x88>)
 8002d1e:	b082      	sub	sp, #8
 8002d20:	2100      	movs	r1, #0
 8002d22:	3201      	adds	r2, #1
 8002d24:	9100      	str	r1, [sp, #0]
 8002d26:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8002d2a:	f7ff ff69 	bl	8002c00 <chThdCreateStatic>
 8002d2e:	4b1b      	ldr	r3, [pc, #108]	; (8002d9c <sem3_execute+0x8c>)
 8002d30:	6018      	str	r0, [r3, #0]
 8002d32:	f7ff ffb5 	bl	8002ca0 <chSemSignalWait.constprop.52>
 8002d36:	6821      	ldr	r1, [r4, #0]
 8002d38:	1b09      	subs	r1, r1, r4
 8002d3a:	fab1 f181 	clz	r1, r1
 8002d3e:	2001      	movs	r0, #1
 8002d40:	0949      	lsrs	r1, r1, #5
 8002d42:	f7fd fd35 	bl	80007b0 <_test_assert>
 8002d46:	b108      	cbz	r0, 8002d4c <sem3_execute+0x3c>
 8002d48:	b002      	add	sp, #8
 8002d4a:	bd10      	pop	{r4, pc}
 8002d4c:	68a1      	ldr	r1, [r4, #8]
 8002d4e:	fab1 f181 	clz	r1, r1
 8002d52:	0949      	lsrs	r1, r1, #5
 8002d54:	2002      	movs	r0, #2
 8002d56:	f7fd fd2b 	bl	80007b0 <_test_assert>
 8002d5a:	2800      	cmp	r0, #0
 8002d5c:	d1f4      	bne.n	8002d48 <sem3_execute+0x38>
 8002d5e:	f7ff ff9f 	bl	8002ca0 <chSemSignalWait.constprop.52>
 8002d62:	6821      	ldr	r1, [r4, #0]
 8002d64:	1b09      	subs	r1, r1, r4
 8002d66:	fab1 f181 	clz	r1, r1
 8002d6a:	2003      	movs	r0, #3
 8002d6c:	0949      	lsrs	r1, r1, #5
 8002d6e:	f7fd fd1f 	bl	80007b0 <_test_assert>
 8002d72:	2800      	cmp	r0, #0
 8002d74:	d1e8      	bne.n	8002d48 <sem3_execute+0x38>
 8002d76:	68a1      	ldr	r1, [r4, #8]
 8002d78:	fab1 f181 	clz	r1, r1
 8002d7c:	0949      	lsrs	r1, r1, #5
 8002d7e:	2004      	movs	r0, #4
 8002d80:	b002      	add	sp, #8
 8002d82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002d86:	f7fd bd13 	b.w	80007b0 <_test_assert>
 8002d8a:	bf00      	nop
 8002d8c:	20001290 	.word	0x20001290
 8002d90:	08005051 	.word	0x08005051
 8002d94:	200014f0 	.word	0x200014f0
 8002d98:	200008cc 	.word	0x200008cc
 8002d9c:	20001b84 	.word	0x20001b84

08002da0 <chEvtWaitOne.constprop.36>:
 8002da0:	4a0b      	ldr	r2, [pc, #44]	; (8002dd0 <chEvtWaitOne.constprop.36+0x30>)
 8002da2:	b510      	push	{r4, lr}
 8002da4:	2320      	movs	r3, #32
 8002da6:	6994      	ldr	r4, [r2, #24]
 8002da8:	f383 8811 	msr	BASEPRI, r3
 8002dac:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8002dae:	b933      	cbnz	r3, 8002dbe <chEvtWaitOne.constprop.36+0x1e>
 8002db0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002db4:	6223      	str	r3, [r4, #32]
 8002db6:	200a      	movs	r0, #10
 8002db8:	f7ff ff5a 	bl	8002c70 <chSchGoSleepS>
 8002dbc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8002dbe:	4258      	negs	r0, r3
 8002dc0:	4018      	ands	r0, r3
 8002dc2:	ea23 0300 	bic.w	r3, r3, r0
 8002dc6:	6363      	str	r3, [r4, #52]	; 0x34
 8002dc8:	2300      	movs	r3, #0
 8002dca:	f383 8811 	msr	BASEPRI, r3
 8002dce:	bd10      	pop	{r4, pc}
 8002dd0:	20001290 	.word	0x20001290
	...

08002de0 <chEvtWaitAny.constprop.35>:
 8002de0:	4a09      	ldr	r2, [pc, #36]	; (8002e08 <chEvtWaitAny.constprop.35+0x28>)
 8002de2:	b510      	push	{r4, lr}
 8002de4:	2320      	movs	r3, #32
 8002de6:	6994      	ldr	r4, [r2, #24]
 8002de8:	f383 8811 	msr	BASEPRI, r3
 8002dec:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8002dee:	b930      	cbnz	r0, 8002dfe <chEvtWaitAny.constprop.35+0x1e>
 8002df0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002df4:	200a      	movs	r0, #10
 8002df6:	6223      	str	r3, [r4, #32]
 8002df8:	f7ff ff3a 	bl	8002c70 <chSchGoSleepS>
 8002dfc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8002dfe:	2300      	movs	r3, #0
 8002e00:	6363      	str	r3, [r4, #52]	; 0x34
 8002e02:	f383 8811 	msr	BASEPRI, r3
 8002e06:	bd10      	pop	{r4, pc}
 8002e08:	20001290 	.word	0x20001290
 8002e0c:	00000000 	.word	0x00000000

08002e10 <thread4.lto_priv.79>:
 8002e10:	4a07      	ldr	r2, [pc, #28]	; (8002e30 <thread4.lto_priv.79+0x20>)
 8002e12:	b510      	push	{r4, lr}
 8002e14:	2320      	movs	r3, #32
 8002e16:	6994      	ldr	r4, [r2, #24]
 8002e18:	f383 8811 	msr	BASEPRI, r3
 8002e1c:	2003      	movs	r0, #3
 8002e1e:	f7ff ff27 	bl	8002c70 <chSchGoSleepS>
 8002e22:	6a23      	ldr	r3, [r4, #32]
 8002e24:	2b00      	cmp	r3, #0
 8002e26:	d0f9      	beq.n	8002e1c <thread4.lto_priv.79+0xc>
 8002e28:	2300      	movs	r3, #0
 8002e2a:	f383 8811 	msr	BASEPRI, r3
 8002e2e:	bd10      	pop	{r4, pc}
 8002e30:	20001290 	.word	0x20001290
	...

08002e40 <chSchGoSleepTimeoutS>:
 8002e40:	b530      	push	{r4, r5, lr}
 8002e42:	1c4b      	adds	r3, r1, #1
 8002e44:	b087      	sub	sp, #28
 8002e46:	d012      	beq.n	8002e6e <chSchGoSleepTimeoutS+0x2e>
 8002e48:	4c0c      	ldr	r4, [pc, #48]	; (8002e7c <chSchGoSleepTimeoutS+0x3c>)
 8002e4a:	4a0d      	ldr	r2, [pc, #52]	; (8002e80 <chSchGoSleepTimeoutS+0x40>)
 8002e4c:	69a3      	ldr	r3, [r4, #24]
 8002e4e:	4605      	mov	r5, r0
 8002e50:	a801      	add	r0, sp, #4
 8002e52:	f7fe fc5d 	bl	8001710 <chVTDoSetI>
 8002e56:	4628      	mov	r0, r5
 8002e58:	f7ff ff0a 	bl	8002c70 <chSchGoSleepS>
 8002e5c:	9b04      	ldr	r3, [sp, #16]
 8002e5e:	b113      	cbz	r3, 8002e66 <chSchGoSleepTimeoutS+0x26>
 8002e60:	a801      	add	r0, sp, #4
 8002e62:	f7fe fc1d 	bl	80016a0 <chVTDoResetI>
 8002e66:	69a3      	ldr	r3, [r4, #24]
 8002e68:	6a18      	ldr	r0, [r3, #32]
 8002e6a:	b007      	add	sp, #28
 8002e6c:	bd30      	pop	{r4, r5, pc}
 8002e6e:	4c03      	ldr	r4, [pc, #12]	; (8002e7c <chSchGoSleepTimeoutS+0x3c>)
 8002e70:	f7ff fefe 	bl	8002c70 <chSchGoSleepS>
 8002e74:	69a3      	ldr	r3, [r4, #24]
 8002e76:	6a18      	ldr	r0, [r3, #32]
 8002e78:	b007      	add	sp, #28
 8002e7a:	bd30      	pop	{r4, r5, pc}
 8002e7c:	20001290 	.word	0x20001290
 8002e80:	08001151 	.word	0x08001151
	...

08002e90 <chSemWaitTimeout.constprop.54>:
 8002e90:	2320      	movs	r3, #32
 8002e92:	f383 8811 	msr	BASEPRI, r3
 8002e96:	4b10      	ldr	r3, [pc, #64]	; (8002ed8 <chSemWaitTimeout.constprop.54+0x48>)
 8002e98:	6899      	ldr	r1, [r3, #8]
 8002e9a:	1e4a      	subs	r2, r1, #1
 8002e9c:	2a00      	cmp	r2, #0
 8002e9e:	609a      	str	r2, [r3, #8]
 8002ea0:	db04      	blt.n	8002eac <chSemWaitTimeout.constprop.54+0x1c>
 8002ea2:	2000      	movs	r0, #0
 8002ea4:	2300      	movs	r3, #0
 8002ea6:	f383 8811 	msr	BASEPRI, r3
 8002eaa:	4770      	bx	lr
 8002eac:	b180      	cbz	r0, 8002ed0 <chSemWaitTimeout.constprop.54+0x40>
 8002eae:	4a0b      	ldr	r2, [pc, #44]	; (8002edc <chSemWaitTimeout.constprop.54+0x4c>)
 8002eb0:	b510      	push	{r4, lr}
 8002eb2:	6992      	ldr	r2, [r2, #24]
 8002eb4:	685c      	ldr	r4, [r3, #4]
 8002eb6:	6213      	str	r3, [r2, #32]
 8002eb8:	e9c2 3400 	strd	r3, r4, [r2]
 8002ebc:	4601      	mov	r1, r0
 8002ebe:	6022      	str	r2, [r4, #0]
 8002ec0:	2005      	movs	r0, #5
 8002ec2:	605a      	str	r2, [r3, #4]
 8002ec4:	f7ff ffbc 	bl	8002e40 <chSchGoSleepTimeoutS>
 8002ec8:	2300      	movs	r3, #0
 8002eca:	f383 8811 	msr	BASEPRI, r3
 8002ece:	bd10      	pop	{r4, pc}
 8002ed0:	6099      	str	r1, [r3, #8]
 8002ed2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002ed6:	e7e5      	b.n	8002ea4 <chSemWaitTimeout.constprop.54+0x14>
 8002ed8:	200008cc 	.word	0x200008cc
 8002edc:	20001290 	.word	0x20001290

08002ee0 <evt3_execute>:
 8002ee0:	b570      	push	{r4, r5, r6, lr}
 8002ee2:	4c55      	ldr	r4, [pc, #340]	; (8003038 <evt3_execute+0x158>)
 8002ee4:	2320      	movs	r3, #32
 8002ee6:	69a2      	ldr	r2, [r4, #24]
 8002ee8:	f383 8811 	msr	BASEPRI, r3
 8002eec:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8002eee:	b93b      	cbnz	r3, 8002f00 <evt3_execute+0x20>
 8002ef0:	f383 8811 	msr	BASEPRI, r3
 8002ef4:	2101      	movs	r1, #1
 8002ef6:	2001      	movs	r0, #1
 8002ef8:	f7fd fc5a 	bl	80007b0 <_test_assert>
 8002efc:	b180      	cbz	r0, 8002f20 <evt3_execute+0x40>
 8002efe:	bd70      	pop	{r4, r5, r6, pc}
 8002f00:	4259      	negs	r1, r3
 8002f02:	4019      	ands	r1, r3
 8002f04:	ea23 0301 	bic.w	r3, r3, r1
 8002f08:	6353      	str	r3, [r2, #52]	; 0x34
 8002f0a:	2300      	movs	r3, #0
 8002f0c:	f383 8811 	msr	BASEPRI, r3
 8002f10:	fab1 f181 	clz	r1, r1
 8002f14:	0949      	lsrs	r1, r1, #5
 8002f16:	2001      	movs	r0, #1
 8002f18:	f7fd fc4a 	bl	80007b0 <_test_assert>
 8002f1c:	2800      	cmp	r0, #0
 8002f1e:	d1ee      	bne.n	8002efe <evt3_execute+0x1e>
 8002f20:	69a3      	ldr	r3, [r4, #24]
 8002f22:	2220      	movs	r2, #32
 8002f24:	f382 8811 	msr	BASEPRI, r2
 8002f28:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002f2a:	2a00      	cmp	r2, #0
 8002f2c:	d06f      	beq.n	800300e <evt3_execute+0x12e>
 8002f2e:	6358      	str	r0, [r3, #52]	; 0x34
 8002f30:	f380 8811 	msr	BASEPRI, r0
 8002f34:	4601      	mov	r1, r0
 8002f36:	2002      	movs	r0, #2
 8002f38:	f7fd fc3a 	bl	80007b0 <_test_assert>
 8002f3c:	2800      	cmp	r0, #0
 8002f3e:	d1de      	bne.n	8002efe <evt3_execute+0x1e>
 8002f40:	69a3      	ldr	r3, [r4, #24]
 8002f42:	2220      	movs	r2, #32
 8002f44:	f382 8811 	msr	BASEPRI, r2
 8002f48:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002f4a:	3201      	adds	r2, #1
 8002f4c:	d063      	beq.n	8003016 <evt3_execute+0x136>
 8002f4e:	f380 8811 	msr	BASEPRI, r0
 8002f52:	2001      	movs	r0, #1
 8002f54:	4601      	mov	r1, r0
 8002f56:	2003      	movs	r0, #3
 8002f58:	f7fd fc2a 	bl	80007b0 <_test_assert>
 8002f5c:	2800      	cmp	r0, #0
 8002f5e:	d1ce      	bne.n	8002efe <evt3_execute+0x1e>
 8002f60:	69a6      	ldr	r6, [r4, #24]
 8002f62:	2320      	movs	r3, #32
 8002f64:	f383 8811 	msr	BASEPRI, r3
 8002f68:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8002f6a:	b94d      	cbnz	r5, 8002f80 <evt3_execute+0xa0>
 8002f6c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002f70:	210a      	movs	r1, #10
 8002f72:	6233      	str	r3, [r6, #32]
 8002f74:	4608      	mov	r0, r1
 8002f76:	f7ff ff63 	bl	8002e40 <chSchGoSleepTimeoutS>
 8002f7a:	2800      	cmp	r0, #0
 8002f7c:	db4f      	blt.n	800301e <evt3_execute+0x13e>
 8002f7e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8002f80:	4269      	negs	r1, r5
 8002f82:	4029      	ands	r1, r5
 8002f84:	ea25 0501 	bic.w	r5, r5, r1
 8002f88:	6375      	str	r5, [r6, #52]	; 0x34
 8002f8a:	2300      	movs	r3, #0
 8002f8c:	f383 8811 	msr	BASEPRI, r3
 8002f90:	fab1 f181 	clz	r1, r1
 8002f94:	0949      	lsrs	r1, r1, #5
 8002f96:	2004      	movs	r0, #4
 8002f98:	f7fd fc0a 	bl	80007b0 <_test_assert>
 8002f9c:	2800      	cmp	r0, #0
 8002f9e:	d1ae      	bne.n	8002efe <evt3_execute+0x1e>
 8002fa0:	69a6      	ldr	r6, [r4, #24]
 8002fa2:	2320      	movs	r3, #32
 8002fa4:	f383 8811 	msr	BASEPRI, r3
 8002fa8:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8002faa:	b94d      	cbnz	r5, 8002fc0 <evt3_execute+0xe0>
 8002fac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002fb0:	210a      	movs	r1, #10
 8002fb2:	6233      	str	r3, [r6, #32]
 8002fb4:	4608      	mov	r0, r1
 8002fb6:	f7ff ff43 	bl	8002e40 <chSchGoSleepTimeoutS>
 8002fba:	2800      	cmp	r0, #0
 8002fbc:	db33      	blt.n	8003026 <evt3_execute+0x146>
 8002fbe:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8002fc0:	2300      	movs	r3, #0
 8002fc2:	6373      	str	r3, [r6, #52]	; 0x34
 8002fc4:	f383 8811 	msr	BASEPRI, r3
 8002fc8:	fab5 f185 	clz	r1, r5
 8002fcc:	0949      	lsrs	r1, r1, #5
 8002fce:	2005      	movs	r0, #5
 8002fd0:	f7fd fbee 	bl	80007b0 <_test_assert>
 8002fd4:	4605      	mov	r5, r0
 8002fd6:	2800      	cmp	r0, #0
 8002fd8:	d191      	bne.n	8002efe <evt3_execute+0x1e>
 8002fda:	69a4      	ldr	r4, [r4, #24]
 8002fdc:	2320      	movs	r3, #32
 8002fde:	f383 8811 	msr	BASEPRI, r3
 8002fe2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8002fe4:	3301      	adds	r3, #1
 8002fe6:	d008      	beq.n	8002ffa <evt3_execute+0x11a>
 8002fe8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002fec:	6223      	str	r3, [r4, #32]
 8002fee:	210a      	movs	r1, #10
 8002ff0:	200b      	movs	r0, #11
 8002ff2:	f7ff ff25 	bl	8002e40 <chSchGoSleepTimeoutS>
 8002ff6:	2800      	cmp	r0, #0
 8002ff8:	db19      	blt.n	800302e <evt3_execute+0x14e>
 8002ffa:	2300      	movs	r3, #0
 8002ffc:	6363      	str	r3, [r4, #52]	; 0x34
 8002ffe:	f383 8811 	msr	BASEPRI, r3
 8003002:	4629      	mov	r1, r5
 8003004:	2006      	movs	r0, #6
 8003006:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800300a:	f7fd bbd1 	b.w	80007b0 <_test_assert>
 800300e:	f382 8811 	msr	BASEPRI, r2
 8003012:	2101      	movs	r1, #1
 8003014:	e78f      	b.n	8002f36 <evt3_execute+0x56>
 8003016:	6358      	str	r0, [r3, #52]	; 0x34
 8003018:	f380 8811 	msr	BASEPRI, r0
 800301c:	e79a      	b.n	8002f54 <evt3_execute+0x74>
 800301e:	f385 8811 	msr	BASEPRI, r5
 8003022:	2101      	movs	r1, #1
 8003024:	e7b7      	b.n	8002f96 <evt3_execute+0xb6>
 8003026:	f385 8811 	msr	BASEPRI, r5
 800302a:	2101      	movs	r1, #1
 800302c:	e7cf      	b.n	8002fce <evt3_execute+0xee>
 800302e:	f385 8811 	msr	BASEPRI, r5
 8003032:	2501      	movs	r5, #1
 8003034:	e7e5      	b.n	8003002 <evt3_execute+0x122>
 8003036:	bf00      	nop
 8003038:	20001290 	.word	0x20001290
 800303c:	00000000 	.word	0x00000000

08003040 <chSemWaitTimeoutS>:
 8003040:	6883      	ldr	r3, [r0, #8]
 8003042:	3b01      	subs	r3, #1
 8003044:	2b00      	cmp	r3, #0
 8003046:	6083      	str	r3, [r0, #8]
 8003048:	db01      	blt.n	800304e <chSemWaitTimeoutS+0xe>
 800304a:	2000      	movs	r0, #0
 800304c:	4770      	bx	lr
 800304e:	4b07      	ldr	r3, [pc, #28]	; (800306c <chSemWaitTimeoutS+0x2c>)
 8003050:	699b      	ldr	r3, [r3, #24]
 8003052:	b410      	push	{r4}
 8003054:	6218      	str	r0, [r3, #32]
 8003056:	6018      	str	r0, [r3, #0]
 8003058:	6844      	ldr	r4, [r0, #4]
 800305a:	605c      	str	r4, [r3, #4]
 800305c:	4602      	mov	r2, r0
 800305e:	6023      	str	r3, [r4, #0]
 8003060:	2005      	movs	r0, #5
 8003062:	6053      	str	r3, [r2, #4]
 8003064:	bc10      	pop	{r4}
 8003066:	f7ff beeb 	b.w	8002e40 <chSchGoSleepTimeoutS>
 800306a:	bf00      	nop
 800306c:	20001290 	.word	0x20001290

08003070 <chMBPost.constprop.24>:
 8003070:	b570      	push	{r4, r5, r6, lr}
 8003072:	2320      	movs	r3, #32
 8003074:	4606      	mov	r6, r0
 8003076:	f383 8811 	msr	BASEPRI, r3
 800307a:	4c0d      	ldr	r4, [pc, #52]	; (80030b0 <chMBPost.constprop.24+0x40>)
 800307c:	f104 001c 	add.w	r0, r4, #28
 8003080:	f7ff ffde 	bl	8003040 <chSemWaitTimeoutS>
 8003084:	4605      	mov	r5, r0
 8003086:	b968      	cbnz	r0, 80030a4 <chMBPost.constprop.24+0x34>
 8003088:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800308c:	1d13      	adds	r3, r2, #4
 800308e:	428b      	cmp	r3, r1
 8003090:	60a3      	str	r3, [r4, #8]
 8003092:	4808      	ldr	r0, [pc, #32]	; (80030b4 <chMBPost.constprop.24+0x44>)
 8003094:	6016      	str	r6, [r2, #0]
 8003096:	bf24      	itt	cs
 8003098:	6823      	ldrcs	r3, [r4, #0]
 800309a:	60a3      	strcs	r3, [r4, #8]
 800309c:	f7fe fa60 	bl	8001560 <chSemSignalI>
 80030a0:	f7ff fbbe 	bl	8002820 <chSchRescheduleS>
 80030a4:	2300      	movs	r3, #0
 80030a6:	f383 8811 	msr	BASEPRI, r3
 80030aa:	4628      	mov	r0, r5
 80030ac:	bd70      	pop	{r4, r5, r6, pc}
 80030ae:	bf00      	nop
 80030b0:	20000874 	.word	0x20000874
 80030b4:	20000884 	.word	0x20000884
	...

080030c0 <chMBPostAhead.constprop.22>:
 80030c0:	b570      	push	{r4, r5, r6, lr}
 80030c2:	2320      	movs	r3, #32
 80030c4:	4606      	mov	r6, r0
 80030c6:	f383 8811 	msr	BASEPRI, r3
 80030ca:	4c10      	ldr	r4, [pc, #64]	; (800310c <chMBPostAhead.constprop.22+0x4c>)
 80030cc:	f104 001c 	add.w	r0, r4, #28
 80030d0:	f7ff ffb6 	bl	8003040 <chSemWaitTimeoutS>
 80030d4:	4605      	mov	r5, r0
 80030d6:	b120      	cbz	r0, 80030e2 <chMBPostAhead.constprop.22+0x22>
 80030d8:	2300      	movs	r3, #0
 80030da:	f383 8811 	msr	BASEPRI, r3
 80030de:	4628      	mov	r0, r5
 80030e0:	bd70      	pop	{r4, r5, r6, pc}
 80030e2:	68e3      	ldr	r3, [r4, #12]
 80030e4:	6822      	ldr	r2, [r4, #0]
 80030e6:	3b04      	subs	r3, #4
 80030e8:	4293      	cmp	r3, r2
 80030ea:	60e3      	str	r3, [r4, #12]
 80030ec:	d202      	bcs.n	80030f4 <chMBPostAhead.constprop.22+0x34>
 80030ee:	6863      	ldr	r3, [r4, #4]
 80030f0:	3b04      	subs	r3, #4
 80030f2:	60e3      	str	r3, [r4, #12]
 80030f4:	601e      	str	r6, [r3, #0]
 80030f6:	4806      	ldr	r0, [pc, #24]	; (8003110 <chMBPostAhead.constprop.22+0x50>)
 80030f8:	f7fe fa32 	bl	8001560 <chSemSignalI>
 80030fc:	f7ff fb90 	bl	8002820 <chSchRescheduleS>
 8003100:	2300      	movs	r3, #0
 8003102:	f383 8811 	msr	BASEPRI, r3
 8003106:	4628      	mov	r0, r5
 8003108:	bd70      	pop	{r4, r5, r6, pc}
 800310a:	bf00      	nop
 800310c:	20000874 	.word	0x20000874
 8003110:	20000884 	.word	0x20000884
	...

08003120 <chMBFetch.constprop.20>:
 8003120:	b570      	push	{r4, r5, r6, lr}
 8003122:	2320      	movs	r3, #32
 8003124:	4606      	mov	r6, r0
 8003126:	f383 8811 	msr	BASEPRI, r3
 800312a:	4c0d      	ldr	r4, [pc, #52]	; (8003160 <chMBFetch.constprop.20+0x40>)
 800312c:	f104 0010 	add.w	r0, r4, #16
 8003130:	f7ff ff86 	bl	8003040 <chSemWaitTimeoutS>
 8003134:	4605      	mov	r5, r0
 8003136:	b970      	cbnz	r0, 8003156 <chMBFetch.constprop.20+0x36>
 8003138:	68e3      	ldr	r3, [r4, #12]
 800313a:	6862      	ldr	r2, [r4, #4]
 800313c:	6819      	ldr	r1, [r3, #0]
 800313e:	4809      	ldr	r0, [pc, #36]	; (8003164 <chMBFetch.constprop.20+0x44>)
 8003140:	3304      	adds	r3, #4
 8003142:	4293      	cmp	r3, r2
 8003144:	60e3      	str	r3, [r4, #12]
 8003146:	6031      	str	r1, [r6, #0]
 8003148:	bf24      	itt	cs
 800314a:	6823      	ldrcs	r3, [r4, #0]
 800314c:	60e3      	strcs	r3, [r4, #12]
 800314e:	f7fe fa07 	bl	8001560 <chSemSignalI>
 8003152:	f7ff fb65 	bl	8002820 <chSchRescheduleS>
 8003156:	2300      	movs	r3, #0
 8003158:	f383 8811 	msr	BASEPRI, r3
 800315c:	4628      	mov	r0, r5
 800315e:	bd70      	pop	{r4, r5, r6, pc}
 8003160:	20000874 	.word	0x20000874
 8003164:	20000890 	.word	0x20000890
	...

08003170 <mbox1_execute>:
 8003170:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003172:	2320      	movs	r3, #32
 8003174:	b083      	sub	sp, #12
 8003176:	f383 8811 	msr	BASEPRI, r3
 800317a:	4dd1      	ldr	r5, [pc, #836]	; (80034c0 <mbox1_execute+0x350>)
 800317c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800317e:	f1a1 0105 	sub.w	r1, r1, #5
 8003182:	fab1 f181 	clz	r1, r1
 8003186:	2001      	movs	r0, #1
 8003188:	0949      	lsrs	r1, r1, #5
 800318a:	f7fd fb11 	bl	80007b0 <_test_assert>
 800318e:	2800      	cmp	r0, #0
 8003190:	f040 8191 	bne.w	80034b6 <mbox1_execute+0x346>
 8003194:	f380 8811 	msr	BASEPRI, r0
 8003198:	2442      	movs	r4, #66	; 0x42
 800319a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800319e:	4620      	mov	r0, r4
 80031a0:	f7ff ff66 	bl	8003070 <chMBPost.constprop.24>
 80031a4:	fab0 f180 	clz	r1, r0
 80031a8:	0949      	lsrs	r1, r1, #5
 80031aa:	2002      	movs	r0, #2
 80031ac:	f7fd fb00 	bl	80007b0 <_test_assert>
 80031b0:	3401      	adds	r4, #1
 80031b2:	b978      	cbnz	r0, 80031d4 <mbox1_execute+0x64>
 80031b4:	2c46      	cmp	r4, #70	; 0x46
 80031b6:	d1f0      	bne.n	800319a <mbox1_execute+0x2a>
 80031b8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80031bc:	2041      	movs	r0, #65	; 0x41
 80031be:	f7ff ff7f 	bl	80030c0 <chMBPostAhead.constprop.22>
 80031c2:	fab0 f180 	clz	r1, r0
 80031c6:	0949      	lsrs	r1, r1, #5
 80031c8:	2003      	movs	r0, #3
 80031ca:	f7fd faf1 	bl	80007b0 <_test_assert>
 80031ce:	2800      	cmp	r0, #0
 80031d0:	f000 817e 	beq.w	80034d0 <mbox1_execute+0x360>
 80031d4:	b003      	add	sp, #12
 80031d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80031d8:	f380 8811 	msr	BASEPRI, r0
 80031dc:	f384 8811 	msr	BASEPRI, r4
 80031e0:	2041      	movs	r0, #65	; 0x41
 80031e2:	f7fe f9cd 	bl	8001580 <chMBPostI.constprop.23>
 80031e6:	fab0 f180 	clz	r1, r0
 80031ea:	0949      	lsrs	r1, r1, #5
 80031ec:	2016      	movs	r0, #22
 80031ee:	f7fd fadf 	bl	80007b0 <_test_assert>
 80031f2:	2800      	cmp	r0, #0
 80031f4:	d1ee      	bne.n	80031d4 <mbox1_execute+0x64>
 80031f6:	2042      	movs	r0, #66	; 0x42
 80031f8:	f7fe f9c2 	bl	8001580 <chMBPostI.constprop.23>
 80031fc:	fab0 f180 	clz	r1, r0
 8003200:	0949      	lsrs	r1, r1, #5
 8003202:	2017      	movs	r0, #23
 8003204:	f7fd fad4 	bl	80007b0 <_test_assert>
 8003208:	2800      	cmp	r0, #0
 800320a:	d1e3      	bne.n	80031d4 <mbox1_execute+0x64>
 800320c:	2043      	movs	r0, #67	; 0x43
 800320e:	f7fe f9b7 	bl	8001580 <chMBPostI.constprop.23>
 8003212:	fab0 f180 	clz	r1, r0
 8003216:	0949      	lsrs	r1, r1, #5
 8003218:	2018      	movs	r0, #24
 800321a:	f7fd fac9 	bl	80007b0 <_test_assert>
 800321e:	2800      	cmp	r0, #0
 8003220:	d1d8      	bne.n	80031d4 <mbox1_execute+0x64>
 8003222:	2044      	movs	r0, #68	; 0x44
 8003224:	f7fe f9ac 	bl	8001580 <chMBPostI.constprop.23>
 8003228:	fab0 f180 	clz	r1, r0
 800322c:	0949      	lsrs	r1, r1, #5
 800322e:	2019      	movs	r0, #25
 8003230:	f7fd fabe 	bl	80007b0 <_test_assert>
 8003234:	4606      	mov	r6, r0
 8003236:	2800      	cmp	r0, #0
 8003238:	d1cc      	bne.n	80031d4 <mbox1_execute+0x64>
 800323a:	2045      	movs	r0, #69	; 0x45
 800323c:	f7fe f9a0 	bl	8001580 <chMBPostI.constprop.23>
 8003240:	f386 8811 	msr	BASEPRI, r6
 8003244:	fab0 f180 	clz	r1, r0
 8003248:	0949      	lsrs	r1, r1, #5
 800324a:	201a      	movs	r0, #26
 800324c:	f7fd fab0 	bl	80007b0 <_test_assert>
 8003250:	2800      	cmp	r0, #0
 8003252:	d1bf      	bne.n	80031d4 <mbox1_execute+0x64>
 8003254:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8003258:	eba1 0c03 	sub.w	ip, r1, r3
 800325c:	f1dc 0100 	rsbs	r1, ip, #0
 8003260:	eb41 010c 	adc.w	r1, r1, ip
 8003264:	201b      	movs	r0, #27
 8003266:	f7fd faa3 	bl	80007b0 <_test_assert>
 800326a:	2800      	cmp	r0, #0
 800326c:	d1b2      	bne.n	80031d4 <mbox1_execute+0x64>
 800326e:	4607      	mov	r7, r0
 8003270:	2605      	movs	r6, #5
 8003272:	f384 8811 	msr	BASEPRI, r4
 8003276:	a801      	add	r0, sp, #4
 8003278:	f7fe f9c2 	bl	8001600 <chMBFetchI.constprop.19>
 800327c:	f387 8811 	msr	BASEPRI, r7
 8003280:	fab0 f180 	clz	r1, r0
 8003284:	0949      	lsrs	r1, r1, #5
 8003286:	201c      	movs	r0, #28
 8003288:	f7fd fa92 	bl	80007b0 <_test_assert>
 800328c:	2800      	cmp	r0, #0
 800328e:	d1a1      	bne.n	80031d4 <mbox1_execute+0x64>
 8003290:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8003294:	f7fd faa4 	bl	80007e0 <test_emit_token>
 8003298:	3e01      	subs	r6, #1
 800329a:	d1ea      	bne.n	8003272 <mbox1_execute+0x102>
 800329c:	4989      	ldr	r1, [pc, #548]	; (80034c4 <mbox1_execute+0x354>)
 800329e:	201d      	movs	r0, #29
 80032a0:	f7fd fa5e 	bl	8000760 <_test_assert_sequence>
 80032a4:	2800      	cmp	r0, #0
 80032a6:	d195      	bne.n	80031d4 <mbox1_execute+0x64>
 80032a8:	f384 8811 	msr	BASEPRI, r4
 80032ac:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80032ae:	1f4f      	subs	r7, r1, #5
 80032b0:	4279      	negs	r1, r7
 80032b2:	4179      	adcs	r1, r7
 80032b4:	201e      	movs	r0, #30
 80032b6:	f7fd fa7b 	bl	80007b0 <_test_assert>
 80032ba:	2800      	cmp	r0, #0
 80032bc:	f040 8223 	bne.w	8003706 <mbox1_execute+0x596>
 80032c0:	f386 8811 	msr	BASEPRI, r6
 80032c4:	f384 8811 	msr	BASEPRI, r4
 80032c8:	69a9      	ldr	r1, [r5, #24]
 80032ca:	fab1 f181 	clz	r1, r1
 80032ce:	0949      	lsrs	r1, r1, #5
 80032d0:	201f      	movs	r0, #31
 80032d2:	f7fd fa6d 	bl	80007b0 <_test_assert>
 80032d6:	2800      	cmp	r0, #0
 80032d8:	f040 8215 	bne.w	8003706 <mbox1_execute+0x596>
 80032dc:	f386 8811 	msr	BASEPRI, r6
 80032e0:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80032e4:	1aca      	subs	r2, r1, r3
 80032e6:	4251      	negs	r1, r2
 80032e8:	4151      	adcs	r1, r2
 80032ea:	2020      	movs	r0, #32
 80032ec:	f7fd fa60 	bl	80007b0 <_test_assert>
 80032f0:	2800      	cmp	r0, #0
 80032f2:	f47f af6f 	bne.w	80031d4 <mbox1_execute+0x64>
 80032f6:	f384 8811 	msr	BASEPRI, r4
 80032fa:	2045      	movs	r0, #69	; 0x45
 80032fc:	f7fe f960 	bl	80015c0 <chMBPostAheadI.constprop.21>
 8003300:	fab0 f180 	clz	r1, r0
 8003304:	0949      	lsrs	r1, r1, #5
 8003306:	2021      	movs	r0, #33	; 0x21
 8003308:	f7fd fa52 	bl	80007b0 <_test_assert>
 800330c:	2800      	cmp	r0, #0
 800330e:	f47f af61 	bne.w	80031d4 <mbox1_execute+0x64>
 8003312:	2044      	movs	r0, #68	; 0x44
 8003314:	f7fe f954 	bl	80015c0 <chMBPostAheadI.constprop.21>
 8003318:	fab0 f180 	clz	r1, r0
 800331c:	0949      	lsrs	r1, r1, #5
 800331e:	2022      	movs	r0, #34	; 0x22
 8003320:	f7fd fa46 	bl	80007b0 <_test_assert>
 8003324:	2800      	cmp	r0, #0
 8003326:	f47f af55 	bne.w	80031d4 <mbox1_execute+0x64>
 800332a:	2043      	movs	r0, #67	; 0x43
 800332c:	f7fe f948 	bl	80015c0 <chMBPostAheadI.constprop.21>
 8003330:	fab0 f180 	clz	r1, r0
 8003334:	0949      	lsrs	r1, r1, #5
 8003336:	2023      	movs	r0, #35	; 0x23
 8003338:	f7fd fa3a 	bl	80007b0 <_test_assert>
 800333c:	2800      	cmp	r0, #0
 800333e:	f47f af49 	bne.w	80031d4 <mbox1_execute+0x64>
 8003342:	2042      	movs	r0, #66	; 0x42
 8003344:	f7fe f93c 	bl	80015c0 <chMBPostAheadI.constprop.21>
 8003348:	fab0 f180 	clz	r1, r0
 800334c:	0949      	lsrs	r1, r1, #5
 800334e:	2024      	movs	r0, #36	; 0x24
 8003350:	f7fd fa2e 	bl	80007b0 <_test_assert>
 8003354:	2800      	cmp	r0, #0
 8003356:	f47f af3d 	bne.w	80031d4 <mbox1_execute+0x64>
 800335a:	2041      	movs	r0, #65	; 0x41
 800335c:	f7fe f930 	bl	80015c0 <chMBPostAheadI.constprop.21>
 8003360:	2300      	movs	r3, #0
 8003362:	f383 8811 	msr	BASEPRI, r3
 8003366:	fab0 f180 	clz	r1, r0
 800336a:	0949      	lsrs	r1, r1, #5
 800336c:	2025      	movs	r0, #37	; 0x25
 800336e:	f7fd fa1f 	bl	80007b0 <_test_assert>
 8003372:	2800      	cmp	r0, #0
 8003374:	f47f af2e 	bne.w	80031d4 <mbox1_execute+0x64>
 8003378:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800337c:	1acb      	subs	r3, r1, r3
 800337e:	4259      	negs	r1, r3
 8003380:	4159      	adcs	r1, r3
 8003382:	2026      	movs	r0, #38	; 0x26
 8003384:	f7fd fa14 	bl	80007b0 <_test_assert>
 8003388:	2800      	cmp	r0, #0
 800338a:	f47f af23 	bne.w	80031d4 <mbox1_execute+0x64>
 800338e:	4606      	mov	r6, r0
 8003390:	2405      	movs	r4, #5
 8003392:	2720      	movs	r7, #32
 8003394:	f387 8811 	msr	BASEPRI, r7
 8003398:	a801      	add	r0, sp, #4
 800339a:	f7fe f931 	bl	8001600 <chMBFetchI.constprop.19>
 800339e:	f386 8811 	msr	BASEPRI, r6
 80033a2:	fab0 f180 	clz	r1, r0
 80033a6:	0949      	lsrs	r1, r1, #5
 80033a8:	2027      	movs	r0, #39	; 0x27
 80033aa:	f7fd fa01 	bl	80007b0 <_test_assert>
 80033ae:	2800      	cmp	r0, #0
 80033b0:	f47f af10 	bne.w	80031d4 <mbox1_execute+0x64>
 80033b4:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80033b8:	f7fd fa12 	bl	80007e0 <test_emit_token>
 80033bc:	3c01      	subs	r4, #1
 80033be:	d1e9      	bne.n	8003394 <mbox1_execute+0x224>
 80033c0:	4940      	ldr	r1, [pc, #256]	; (80034c4 <mbox1_execute+0x354>)
 80033c2:	2028      	movs	r0, #40	; 0x28
 80033c4:	f7fd f9cc 	bl	8000760 <_test_assert_sequence>
 80033c8:	2800      	cmp	r0, #0
 80033ca:	f47f af03 	bne.w	80031d4 <mbox1_execute+0x64>
 80033ce:	f387 8811 	msr	BASEPRI, r7
 80033d2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80033d4:	f1a1 0e05 	sub.w	lr, r1, #5
 80033d8:	f1de 0100 	rsbs	r1, lr, #0
 80033dc:	eb41 010e 	adc.w	r1, r1, lr
 80033e0:	2029      	movs	r0, #41	; 0x29
 80033e2:	f7fd f9e5 	bl	80007b0 <_test_assert>
 80033e6:	2800      	cmp	r0, #0
 80033e8:	f040 80c5 	bne.w	8003576 <mbox1_execute+0x406>
 80033ec:	f384 8811 	msr	BASEPRI, r4
 80033f0:	f387 8811 	msr	BASEPRI, r7
 80033f4:	69a9      	ldr	r1, [r5, #24]
 80033f6:	fab1 f181 	clz	r1, r1
 80033fa:	0949      	lsrs	r1, r1, #5
 80033fc:	202a      	movs	r0, #42	; 0x2a
 80033fe:	f7fd f9d7 	bl	80007b0 <_test_assert>
 8003402:	2800      	cmp	r0, #0
 8003404:	f040 80b7 	bne.w	8003576 <mbox1_execute+0x406>
 8003408:	f384 8811 	msr	BASEPRI, r4
 800340c:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8003410:	eba1 0c03 	sub.w	ip, r1, r3
 8003414:	f1dc 0100 	rsbs	r1, ip, #0
 8003418:	eb41 010c 	adc.w	r1, r1, ip
 800341c:	202b      	movs	r0, #43	; 0x2b
 800341e:	f7fd f9c7 	bl	80007b0 <_test_assert>
 8003422:	2800      	cmp	r0, #0
 8003424:	f47f aed6 	bne.w	80031d4 <mbox1_execute+0x64>
 8003428:	f387 8811 	msr	BASEPRI, r7
 800342c:	e9d5 3200 	ldrd	r3, r2, [r5]
 8003430:	1ad2      	subs	r2, r2, r3
 8003432:	1091      	asrs	r1, r2, #2
 8003434:	4824      	ldr	r0, [pc, #144]	; (80034c8 <mbox1_execute+0x358>)
 8003436:	60ab      	str	r3, [r5, #8]
 8003438:	60eb      	str	r3, [r5, #12]
 800343a:	f7fe f901 	bl	8001640 <chSemResetI>
 800343e:	4621      	mov	r1, r4
 8003440:	4822      	ldr	r0, [pc, #136]	; (80034cc <mbox1_execute+0x35c>)
 8003442:	f7fe f8fd 	bl	8001640 <chSemResetI>
 8003446:	f7ff f9eb 	bl	8002820 <chSchRescheduleS>
 800344a:	f384 8811 	msr	BASEPRI, r4
 800344e:	f387 8811 	msr	BASEPRI, r7
 8003452:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8003454:	1f4e      	subs	r6, r1, #5
 8003456:	4271      	negs	r1, r6
 8003458:	4171      	adcs	r1, r6
 800345a:	202c      	movs	r0, #44	; 0x2c
 800345c:	f7fd f9a8 	bl	80007b0 <_test_assert>
 8003460:	2800      	cmp	r0, #0
 8003462:	f040 8088 	bne.w	8003576 <mbox1_execute+0x406>
 8003466:	f384 8811 	msr	BASEPRI, r4
 800346a:	f387 8811 	msr	BASEPRI, r7
 800346e:	69a9      	ldr	r1, [r5, #24]
 8003470:	fab1 f181 	clz	r1, r1
 8003474:	0949      	lsrs	r1, r1, #5
 8003476:	202d      	movs	r0, #45	; 0x2d
 8003478:	f7fd f99a 	bl	80007b0 <_test_assert>
 800347c:	2800      	cmp	r0, #0
 800347e:	d17a      	bne.n	8003576 <mbox1_execute+0x406>
 8003480:	f384 8811 	msr	BASEPRI, r4
 8003484:	f387 8811 	msr	BASEPRI, r7
 8003488:	6829      	ldr	r1, [r5, #0]
 800348a:	68ab      	ldr	r3, [r5, #8]
 800348c:	1aca      	subs	r2, r1, r3
 800348e:	4251      	negs	r1, r2
 8003490:	4151      	adcs	r1, r2
 8003492:	202e      	movs	r0, #46	; 0x2e
 8003494:	f7fd f98c 	bl	80007b0 <_test_assert>
 8003498:	2800      	cmp	r0, #0
 800349a:	d16c      	bne.n	8003576 <mbox1_execute+0x406>
 800349c:	f384 8811 	msr	BASEPRI, r4
 80034a0:	f387 8811 	msr	BASEPRI, r7
 80034a4:	6829      	ldr	r1, [r5, #0]
 80034a6:	68eb      	ldr	r3, [r5, #12]
 80034a8:	1acb      	subs	r3, r1, r3
 80034aa:	4259      	negs	r1, r3
 80034ac:	f04f 002f 	mov.w	r0, #47	; 0x2f
 80034b0:	4159      	adcs	r1, r3
 80034b2:	f7fd f97d 	bl	80007b0 <_test_assert>
 80034b6:	2300      	movs	r3, #0
 80034b8:	f383 8811 	msr	BASEPRI, r3
 80034bc:	b003      	add	sp, #12
 80034be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80034c0:	20000874 	.word	0x20000874
 80034c4:	080080b0 	.word	0x080080b0
 80034c8:	20000890 	.word	0x20000890
 80034cc:	20000884 	.word	0x20000884
 80034d0:	2101      	movs	r1, #1
 80034d2:	2058      	movs	r0, #88	; 0x58
 80034d4:	f7ff fdcc 	bl	8003070 <chMBPost.constprop.24>
 80034d8:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 80034dc:	fab1 f181 	clz	r1, r1
 80034e0:	0949      	lsrs	r1, r1, #5
 80034e2:	2004      	movs	r0, #4
 80034e4:	f7fd f964 	bl	80007b0 <_test_assert>
 80034e8:	4604      	mov	r4, r0
 80034ea:	2800      	cmp	r0, #0
 80034ec:	f47f ae72 	bne.w	80031d4 <mbox1_execute+0x64>
 80034f0:	2620      	movs	r6, #32
 80034f2:	f386 8811 	msr	BASEPRI, r6
 80034f6:	2058      	movs	r0, #88	; 0x58
 80034f8:	f7fe f842 	bl	8001580 <chMBPostI.constprop.23>
 80034fc:	4601      	mov	r1, r0
 80034fe:	f384 8811 	msr	BASEPRI, r4
 8003502:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 8003506:	fab1 f181 	clz	r1, r1
 800350a:	2005      	movs	r0, #5
 800350c:	0949      	lsrs	r1, r1, #5
 800350e:	f7fd f94f 	bl	80007b0 <_test_assert>
 8003512:	2800      	cmp	r0, #0
 8003514:	f47f ae5e 	bne.w	80031d4 <mbox1_execute+0x64>
 8003518:	2101      	movs	r1, #1
 800351a:	2058      	movs	r0, #88	; 0x58
 800351c:	f7ff fdd0 	bl	80030c0 <chMBPostAhead.constprop.22>
 8003520:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8003524:	fab1 f181 	clz	r1, r1
 8003528:	0949      	lsrs	r1, r1, #5
 800352a:	2006      	movs	r0, #6
 800352c:	f7fd f940 	bl	80007b0 <_test_assert>
 8003530:	4604      	mov	r4, r0
 8003532:	2800      	cmp	r0, #0
 8003534:	f47f ae4e 	bne.w	80031d4 <mbox1_execute+0x64>
 8003538:	f386 8811 	msr	BASEPRI, r6
 800353c:	2058      	movs	r0, #88	; 0x58
 800353e:	f7fe f83f 	bl	80015c0 <chMBPostAheadI.constprop.21>
 8003542:	4601      	mov	r1, r0
 8003544:	f384 8811 	msr	BASEPRI, r4
 8003548:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 800354c:	fab1 f181 	clz	r1, r1
 8003550:	2007      	movs	r0, #7
 8003552:	0949      	lsrs	r1, r1, #5
 8003554:	f7fd f92c 	bl	80007b0 <_test_assert>
 8003558:	4604      	mov	r4, r0
 800355a:	2800      	cmp	r0, #0
 800355c:	f47f ae3a 	bne.w	80031d4 <mbox1_execute+0x64>
 8003560:	f386 8811 	msr	BASEPRI, r6
 8003564:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8003566:	fab1 f181 	clz	r1, r1
 800356a:	0949      	lsrs	r1, r1, #5
 800356c:	2008      	movs	r0, #8
 800356e:	f7fd f91f 	bl	80007b0 <_test_assert>
 8003572:	4607      	mov	r7, r0
 8003574:	b110      	cbz	r0, 800357c <mbox1_execute+0x40c>
 8003576:	f384 8811 	msr	BASEPRI, r4
 800357a:	e62b      	b.n	80031d4 <mbox1_execute+0x64>
 800357c:	f380 8811 	msr	BASEPRI, r0
 8003580:	f386 8811 	msr	BASEPRI, r6
 8003584:	69a9      	ldr	r1, [r5, #24]
 8003586:	f1a1 0e05 	sub.w	lr, r1, #5
 800358a:	f1de 0100 	rsbs	r1, lr, #0
 800358e:	eb41 010e 	adc.w	r1, r1, lr
 8003592:	2009      	movs	r0, #9
 8003594:	f7fd f90c 	bl	80007b0 <_test_assert>
 8003598:	b110      	cbz	r0, 80035a0 <mbox1_execute+0x430>
 800359a:	f387 8811 	msr	BASEPRI, r7
 800359e:	e619      	b.n	80031d4 <mbox1_execute+0x64>
 80035a0:	f380 8811 	msr	BASEPRI, r0
 80035a4:	f386 8811 	msr	BASEPRI, r6
 80035a8:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80035ac:	eba1 0c03 	sub.w	ip, r1, r3
 80035b0:	f1dc 0100 	rsbs	r1, ip, #0
 80035b4:	f04f 000a 	mov.w	r0, #10
 80035b8:	eb41 010c 	adc.w	r1, r1, ip
 80035bc:	f7fd f8f8 	bl	80007b0 <_test_assert>
 80035c0:	2300      	movs	r3, #0
 80035c2:	2800      	cmp	r0, #0
 80035c4:	f47f af78 	bne.w	80034b8 <mbox1_execute+0x348>
 80035c8:	f383 8811 	msr	BASEPRI, r3
 80035cc:	2405      	movs	r4, #5
 80035ce:	e005      	b.n	80035dc <mbox1_execute+0x46c>
 80035d0:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80035d4:	f7fd f904 	bl	80007e0 <test_emit_token>
 80035d8:	3c01      	subs	r4, #1
 80035da:	d00d      	beq.n	80035f8 <mbox1_execute+0x488>
 80035dc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80035e0:	a801      	add	r0, sp, #4
 80035e2:	f7ff fd9d 	bl	8003120 <chMBFetch.constprop.20>
 80035e6:	fab0 f180 	clz	r1, r0
 80035ea:	0949      	lsrs	r1, r1, #5
 80035ec:	200b      	movs	r0, #11
 80035ee:	f7fd f8df 	bl	80007b0 <_test_assert>
 80035f2:	2800      	cmp	r0, #0
 80035f4:	d0ec      	beq.n	80035d0 <mbox1_execute+0x460>
 80035f6:	e5ed      	b.n	80031d4 <mbox1_execute+0x64>
 80035f8:	4944      	ldr	r1, [pc, #272]	; (800370c <mbox1_execute+0x59c>)
 80035fa:	200c      	movs	r0, #12
 80035fc:	f7fd f8b0 	bl	8000760 <_test_assert_sequence>
 8003600:	2800      	cmp	r0, #0
 8003602:	f47f ade7 	bne.w	80031d4 <mbox1_execute+0x64>
 8003606:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800360a:	2047      	movs	r0, #71	; 0x47
 800360c:	f7ff fd30 	bl	8003070 <chMBPost.constprop.24>
 8003610:	fab0 f180 	clz	r1, r0
 8003614:	0949      	lsrs	r1, r1, #5
 8003616:	200d      	movs	r0, #13
 8003618:	f7fd f8ca 	bl	80007b0 <_test_assert>
 800361c:	2800      	cmp	r0, #0
 800361e:	f47f add9 	bne.w	80031d4 <mbox1_execute+0x64>
 8003622:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003626:	a801      	add	r0, sp, #4
 8003628:	f7ff fd7a 	bl	8003120 <chMBFetch.constprop.20>
 800362c:	fab0 f180 	clz	r1, r0
 8003630:	0949      	lsrs	r1, r1, #5
 8003632:	200e      	movs	r0, #14
 8003634:	f7fd f8bc 	bl	80007b0 <_test_assert>
 8003638:	2800      	cmp	r0, #0
 800363a:	f47f adcb 	bne.w	80031d4 <mbox1_execute+0x64>
 800363e:	6829      	ldr	r1, [r5, #0]
 8003640:	68ab      	ldr	r3, [r5, #8]
 8003642:	1acf      	subs	r7, r1, r3
 8003644:	4279      	negs	r1, r7
 8003646:	4179      	adcs	r1, r7
 8003648:	200f      	movs	r0, #15
 800364a:	f7fd f8b1 	bl	80007b0 <_test_assert>
 800364e:	2800      	cmp	r0, #0
 8003650:	f47f adc0 	bne.w	80031d4 <mbox1_execute+0x64>
 8003654:	6829      	ldr	r1, [r5, #0]
 8003656:	68eb      	ldr	r3, [r5, #12]
 8003658:	1ace      	subs	r6, r1, r3
 800365a:	4271      	negs	r1, r6
 800365c:	4171      	adcs	r1, r6
 800365e:	2010      	movs	r0, #16
 8003660:	f7fd f8a6 	bl	80007b0 <_test_assert>
 8003664:	2800      	cmp	r0, #0
 8003666:	f47f adb5 	bne.w	80031d4 <mbox1_execute+0x64>
 800366a:	2101      	movs	r1, #1
 800366c:	a801      	add	r0, sp, #4
 800366e:	f7ff fd57 	bl	8003120 <chMBFetch.constprop.20>
 8003672:	3001      	adds	r0, #1
 8003674:	4241      	negs	r1, r0
 8003676:	4141      	adcs	r1, r0
 8003678:	2011      	movs	r0, #17
 800367a:	f7fd f899 	bl	80007b0 <_test_assert>
 800367e:	2800      	cmp	r0, #0
 8003680:	f47f ada8 	bne.w	80031d4 <mbox1_execute+0x64>
 8003684:	2620      	movs	r6, #32
 8003686:	f386 8811 	msr	BASEPRI, r6
 800368a:	a801      	add	r0, sp, #4
 800368c:	f7fd ffb8 	bl	8001600 <chMBFetchI.constprop.19>
 8003690:	4601      	mov	r1, r0
 8003692:	f384 8811 	msr	BASEPRI, r4
 8003696:	1c4a      	adds	r2, r1, #1
 8003698:	4251      	negs	r1, r2
 800369a:	4151      	adcs	r1, r2
 800369c:	2012      	movs	r0, #18
 800369e:	f7fd f887 	bl	80007b0 <_test_assert>
 80036a2:	2800      	cmp	r0, #0
 80036a4:	f47f ad96 	bne.w	80031d4 <mbox1_execute+0x64>
 80036a8:	f386 8811 	msr	BASEPRI, r6
 80036ac:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80036ae:	1f4b      	subs	r3, r1, #5
 80036b0:	4259      	negs	r1, r3
 80036b2:	4159      	adcs	r1, r3
 80036b4:	2013      	movs	r0, #19
 80036b6:	f7fd f87b 	bl	80007b0 <_test_assert>
 80036ba:	2800      	cmp	r0, #0
 80036bc:	f47f aefb 	bne.w	80034b6 <mbox1_execute+0x346>
 80036c0:	2700      	movs	r7, #0
 80036c2:	f387 8811 	msr	BASEPRI, r7
 80036c6:	2420      	movs	r4, #32
 80036c8:	f384 8811 	msr	BASEPRI, r4
 80036cc:	69a9      	ldr	r1, [r5, #24]
 80036ce:	fab1 f181 	clz	r1, r1
 80036d2:	0949      	lsrs	r1, r1, #5
 80036d4:	2014      	movs	r0, #20
 80036d6:	f7fd f86b 	bl	80007b0 <_test_assert>
 80036da:	4606      	mov	r6, r0
 80036dc:	2800      	cmp	r0, #0
 80036de:	f47f af5c 	bne.w	800359a <mbox1_execute+0x42a>
 80036e2:	f380 8811 	msr	BASEPRI, r0
 80036e6:	f384 8811 	msr	BASEPRI, r4
 80036ea:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80036ee:	eba1 0e03 	sub.w	lr, r1, r3
 80036f2:	f1de 0100 	rsbs	r1, lr, #0
 80036f6:	eb41 010e 	adc.w	r1, r1, lr
 80036fa:	2015      	movs	r0, #21
 80036fc:	f7fd f858 	bl	80007b0 <_test_assert>
 8003700:	2800      	cmp	r0, #0
 8003702:	f43f ad69 	beq.w	80031d8 <mbox1_execute+0x68>
 8003706:	f386 8811 	msr	BASEPRI, r6
 800370a:	e563      	b.n	80031d4 <mbox1_execute+0x64>
 800370c:	080080b0 	.word	0x080080b0

08003710 <chThdEnqueueTimeoutS>:
 8003710:	b161      	cbz	r1, 800372c <chThdEnqueueTimeoutS+0x1c>
 8003712:	4b08      	ldr	r3, [pc, #32]	; (8003734 <chThdEnqueueTimeoutS+0x24>)
 8003714:	699b      	ldr	r3, [r3, #24]
 8003716:	b410      	push	{r4}
 8003718:	6018      	str	r0, [r3, #0]
 800371a:	6844      	ldr	r4, [r0, #4]
 800371c:	605c      	str	r4, [r3, #4]
 800371e:	4602      	mov	r2, r0
 8003720:	6023      	str	r3, [r4, #0]
 8003722:	2004      	movs	r0, #4
 8003724:	6053      	str	r3, [r2, #4]
 8003726:	bc10      	pop	{r4}
 8003728:	f7ff bb8a 	b.w	8002e40 <chSchGoSleepTimeoutS>
 800372c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003730:	4770      	bx	lr
 8003732:	bf00      	nop
 8003734:	20001290 	.word	0x20001290
	...

08003740 <chOQWriteTimeout>:
 8003740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003744:	b083      	sub	sp, #12
 8003746:	4604      	mov	r4, r0
 8003748:	460d      	mov	r5, r1
 800374a:	4616      	mov	r6, r2
 800374c:	9301      	str	r3, [sp, #4]
 800374e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8003752:	f04f 0920 	mov.w	r9, #32
 8003756:	f389 8811 	msr	BASEPRI, r9
 800375a:	2700      	movs	r7, #0
 800375c:	46ba      	mov	sl, r7
 800375e:	68a3      	ldr	r3, [r4, #8]
 8003760:	f105 0b01 	add.w	fp, r5, #1
 8003764:	1e59      	subs	r1, r3, #1
 8003766:	4620      	mov	r0, r4
 8003768:	b1fb      	cbz	r3, 80037aa <chOQWriteTimeout+0x6a>
 800376a:	6963      	ldr	r3, [r4, #20]
 800376c:	60a1      	str	r1, [r4, #8]
 800376e:	1c59      	adds	r1, r3, #1
 8003770:	6161      	str	r1, [r4, #20]
 8003772:	7829      	ldrb	r1, [r5, #0]
 8003774:	7019      	strb	r1, [r3, #0]
 8003776:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 800377a:	4299      	cmp	r1, r3
 800377c:	bf24      	itt	cs
 800377e:	68e3      	ldrcs	r3, [r4, #12]
 8003780:	6163      	strcs	r3, [r4, #20]
 8003782:	f1b8 0f00 	cmp.w	r8, #0
 8003786:	d000      	beq.n	800378a <chOQWriteTimeout+0x4a>
 8003788:	47c0      	blx	r8
 800378a:	f38a 8811 	msr	BASEPRI, sl
 800378e:	3e01      	subs	r6, #1
 8003790:	f107 0701 	add.w	r7, r7, #1
 8003794:	d013      	beq.n	80037be <chOQWriteTimeout+0x7e>
 8003796:	f389 8811 	msr	BASEPRI, r9
 800379a:	68a3      	ldr	r3, [r4, #8]
 800379c:	465d      	mov	r5, fp
 800379e:	1e59      	subs	r1, r3, #1
 80037a0:	f105 0b01 	add.w	fp, r5, #1
 80037a4:	4620      	mov	r0, r4
 80037a6:	2b00      	cmp	r3, #0
 80037a8:	d1df      	bne.n	800376a <chOQWriteTimeout+0x2a>
 80037aa:	9901      	ldr	r1, [sp, #4]
 80037ac:	9300      	str	r3, [sp, #0]
 80037ae:	4620      	mov	r0, r4
 80037b0:	f7ff ffae 	bl	8003710 <chThdEnqueueTimeoutS>
 80037b4:	9b00      	ldr	r3, [sp, #0]
 80037b6:	2800      	cmp	r0, #0
 80037b8:	d0d1      	beq.n	800375e <chOQWriteTimeout+0x1e>
 80037ba:	f383 8811 	msr	BASEPRI, r3
 80037be:	4638      	mov	r0, r7
 80037c0:	b003      	add	sp, #12
 80037c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037c6:	bf00      	nop
	...

080037d0 <writet>:
 80037d0:	3030      	adds	r0, #48	; 0x30
 80037d2:	f7ff bfb5 	b.w	8003740 <chOQWriteTimeout>
 80037d6:	bf00      	nop
	...

080037e0 <write>:
 80037e0:	3030      	adds	r0, #48	; 0x30
 80037e2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80037e6:	f7ff bfab 	b.w	8003740 <chOQWriteTimeout>
 80037ea:	bf00      	nop
 80037ec:	0000      	movs	r0, r0
	...

080037f0 <chOQPutTimeout>:
 80037f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037f2:	4604      	mov	r4, r0
 80037f4:	460f      	mov	r7, r1
 80037f6:	4616      	mov	r6, r2
 80037f8:	2320      	movs	r3, #32
 80037fa:	f383 8811 	msr	BASEPRI, r3
 80037fe:	e003      	b.n	8003808 <chOQPutTimeout+0x18>
 8003800:	f7ff ff86 	bl	8003710 <chThdEnqueueTimeoutS>
 8003804:	2800      	cmp	r0, #0
 8003806:	db17      	blt.n	8003838 <chOQPutTimeout+0x48>
 8003808:	68a5      	ldr	r5, [r4, #8]
 800380a:	4631      	mov	r1, r6
 800380c:	4620      	mov	r0, r4
 800380e:	2d00      	cmp	r5, #0
 8003810:	d0f6      	beq.n	8003800 <chOQPutTimeout+0x10>
 8003812:	6963      	ldr	r3, [r4, #20]
 8003814:	3d01      	subs	r5, #1
 8003816:	1c5a      	adds	r2, r3, #1
 8003818:	6162      	str	r2, [r4, #20]
 800381a:	60a5      	str	r5, [r4, #8]
 800381c:	701f      	strb	r7, [r3, #0]
 800381e:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8003822:	429a      	cmp	r2, r3
 8003824:	bf24      	itt	cs
 8003826:	68e3      	ldrcs	r3, [r4, #12]
 8003828:	6163      	strcs	r3, [r4, #20]
 800382a:	69e3      	ldr	r3, [r4, #28]
 800382c:	b103      	cbz	r3, 8003830 <chOQPutTimeout+0x40>
 800382e:	4798      	blx	r3
 8003830:	2000      	movs	r0, #0
 8003832:	f380 8811 	msr	BASEPRI, r0
 8003836:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003838:	f385 8811 	msr	BASEPRI, r5
 800383c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800383e:	bf00      	nop

08003840 <thread2.lto_priv.82>:
 8003840:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 8003844:	2100      	movs	r1, #0
 8003846:	4801      	ldr	r0, [pc, #4]	; (800384c <thread2.lto_priv.82+0xc>)
 8003848:	f7ff bfd2 	b.w	80037f0 <chOQPutTimeout>
 800384c:	200008a8 	.word	0x200008a8

08003850 <putt>:
 8003850:	3030      	adds	r0, #48	; 0x30
 8003852:	f7ff bfcd 	b.w	80037f0 <chOQPutTimeout>
 8003856:	bf00      	nop
	...

08003860 <put>:
 8003860:	3030      	adds	r0, #48	; 0x30
 8003862:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003866:	f7ff bfc3 	b.w	80037f0 <chOQPutTimeout>
 800386a:	bf00      	nop
 800386c:	0000      	movs	r0, r0
	...

08003870 <chIQReadTimeout>:
 8003870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003874:	4604      	mov	r4, r0
 8003876:	b083      	sub	sp, #12
 8003878:	4689      	mov	r9, r1
 800387a:	4693      	mov	fp, r2
 800387c:	461d      	mov	r5, r3
 800387e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8003882:	2720      	movs	r7, #32
 8003884:	f387 8811 	msr	BASEPRI, r7
 8003888:	2600      	movs	r6, #0
 800388a:	9701      	str	r7, [sp, #4]
 800388c:	46b2      	mov	sl, r6
 800388e:	f1b8 0f00 	cmp.w	r8, #0
 8003892:	d005      	beq.n	80038a0 <chIQReadTimeout+0x30>
 8003894:	4620      	mov	r0, r4
 8003896:	47c0      	blx	r8
 8003898:	e002      	b.n	80038a0 <chIQReadTimeout+0x30>
 800389a:	f7ff ff39 	bl	8003710 <chThdEnqueueTimeoutS>
 800389e:	b9d8      	cbnz	r0, 80038d8 <chIQReadTimeout+0x68>
 80038a0:	68a7      	ldr	r7, [r4, #8]
 80038a2:	4629      	mov	r1, r5
 80038a4:	4620      	mov	r0, r4
 80038a6:	2f00      	cmp	r7, #0
 80038a8:	d0f7      	beq.n	800389a <chIQReadTimeout+0x2a>
 80038aa:	69a2      	ldr	r2, [r4, #24]
 80038ac:	3f01      	subs	r7, #1
 80038ae:	1c51      	adds	r1, r2, #1
 80038b0:	61a1      	str	r1, [r4, #24]
 80038b2:	60a7      	str	r7, [r4, #8]
 80038b4:	7813      	ldrb	r3, [r2, #0]
 80038b6:	f809 3b01 	strb.w	r3, [r9], #1
 80038ba:	6923      	ldr	r3, [r4, #16]
 80038bc:	69a2      	ldr	r2, [r4, #24]
 80038be:	429a      	cmp	r2, r3
 80038c0:	bf24      	itt	cs
 80038c2:	68e3      	ldrcs	r3, [r4, #12]
 80038c4:	61a3      	strcs	r3, [r4, #24]
 80038c6:	f38a 8811 	msr	BASEPRI, sl
 80038ca:	3601      	adds	r6, #1
 80038cc:	45b3      	cmp	fp, r6
 80038ce:	d005      	beq.n	80038dc <chIQReadTimeout+0x6c>
 80038d0:	9b01      	ldr	r3, [sp, #4]
 80038d2:	f383 8811 	msr	BASEPRI, r3
 80038d6:	e7da      	b.n	800388e <chIQReadTimeout+0x1e>
 80038d8:	f387 8811 	msr	BASEPRI, r7
 80038dc:	4630      	mov	r0, r6
 80038de:	b003      	add	sp, #12
 80038e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080038f0 <readt>:
 80038f0:	300c      	adds	r0, #12
 80038f2:	f7ff bfbd 	b.w	8003870 <chIQReadTimeout>
 80038f6:	bf00      	nop
	...

08003900 <read>:
 8003900:	300c      	adds	r0, #12
 8003902:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003906:	f7ff bfb3 	b.w	8003870 <chIQReadTimeout>
 800390a:	bf00      	nop
 800390c:	0000      	movs	r0, r0
	...

08003910 <chIQGetTimeout>:
 8003910:	b570      	push	{r4, r5, r6, lr}
 8003912:	2320      	movs	r3, #32
 8003914:	460e      	mov	r6, r1
 8003916:	4604      	mov	r4, r0
 8003918:	f383 8811 	msr	BASEPRI, r3
 800391c:	69c3      	ldr	r3, [r0, #28]
 800391e:	b12b      	cbz	r3, 800392c <chIQGetTimeout+0x1c>
 8003920:	4798      	blx	r3
 8003922:	e003      	b.n	800392c <chIQGetTimeout+0x1c>
 8003924:	f7ff fef4 	bl	8003710 <chThdEnqueueTimeoutS>
 8003928:	2800      	cmp	r0, #0
 800392a:	db15      	blt.n	8003958 <chIQGetTimeout+0x48>
 800392c:	68a5      	ldr	r5, [r4, #8]
 800392e:	4631      	mov	r1, r6
 8003930:	4620      	mov	r0, r4
 8003932:	2d00      	cmp	r5, #0
 8003934:	d0f6      	beq.n	8003924 <chIQGetTimeout+0x14>
 8003936:	69a2      	ldr	r2, [r4, #24]
 8003938:	6921      	ldr	r1, [r4, #16]
 800393a:	1c53      	adds	r3, r2, #1
 800393c:	428b      	cmp	r3, r1
 800393e:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8003942:	61a3      	str	r3, [r4, #24]
 8003944:	60a5      	str	r5, [r4, #8]
 8003946:	bf28      	it	cs
 8003948:	68e3      	ldrcs	r3, [r4, #12]
 800394a:	7810      	ldrb	r0, [r2, #0]
 800394c:	bf28      	it	cs
 800394e:	61a3      	strcs	r3, [r4, #24]
 8003950:	2300      	movs	r3, #0
 8003952:	f383 8811 	msr	BASEPRI, r3
 8003956:	bd70      	pop	{r4, r5, r6, pc}
 8003958:	f385 8811 	msr	BASEPRI, r5
 800395c:	bd70      	pop	{r4, r5, r6, pc}
 800395e:	bf00      	nop

08003960 <thread1.lto_priv.76>:
 8003960:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8003964:	4801      	ldr	r0, [pc, #4]	; (800396c <thread1.lto_priv.76+0xc>)
 8003966:	f7ff bfd3 	b.w	8003910 <chIQGetTimeout>
 800396a:	bf00      	nop
 800396c:	20000810 	.word	0x20000810

08003970 <gett>:
 8003970:	300c      	adds	r0, #12
 8003972:	f7ff bfcd 	b.w	8003910 <chIQGetTimeout>
 8003976:	bf00      	nop
	...

08003980 <get>:
 8003980:	300c      	adds	r0, #12
 8003982:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003986:	f7ff bfc3 	b.w	8003910 <chIQGetTimeout>
 800398a:	bf00      	nop
 800398c:	0000      	movs	r0, r0
	...

08003990 <chThdSleep>:
 8003990:	b508      	push	{r3, lr}
 8003992:	4601      	mov	r1, r0
 8003994:	2320      	movs	r3, #32
 8003996:	f383 8811 	msr	BASEPRI, r3
 800399a:	2008      	movs	r0, #8
 800399c:	f7ff fa50 	bl	8002e40 <chSchGoSleepTimeoutS>
 80039a0:	2300      	movs	r3, #0
 80039a2:	f383 8811 	msr	BASEPRI, r3
 80039a6:	bd08      	pop	{r3, pc}
	...

080039b0 <Thread1>:
 80039b0:	b508      	push	{r3, lr}
 80039b2:	4b09      	ldr	r3, [pc, #36]	; (80039d8 <Thread1+0x28>)
 80039b4:	4a09      	ldr	r2, [pc, #36]	; (80039dc <Thread1+0x2c>)
 80039b6:	699b      	ldr	r3, [r3, #24]
 80039b8:	4c09      	ldr	r4, [pc, #36]	; (80039e0 <Thread1+0x30>)
 80039ba:	619a      	str	r2, [r3, #24]
 80039bc:	f44f 4580 	mov.w	r5, #16384	; 0x4000
 80039c0:	462e      	mov	r6, r5
 80039c2:	8366      	strh	r6, [r4, #26]
 80039c4:	f241 3088 	movw	r0, #5000	; 0x1388
 80039c8:	f7ff ffe2 	bl	8003990 <chThdSleep>
 80039cc:	8325      	strh	r5, [r4, #24]
 80039ce:	f241 3088 	movw	r0, #5000	; 0x1388
 80039d2:	f7ff ffdd 	bl	8003990 <chThdSleep>
 80039d6:	e7f4      	b.n	80039c2 <Thread1+0x12>
 80039d8:	20001290 	.word	0x20001290
 80039dc:	08007af0 	.word	0x08007af0
 80039e0:	40021800 	.word	0x40021800
	...

080039f0 <Thread2>:
 80039f0:	b508      	push	{r3, lr}
 80039f2:	4b09      	ldr	r3, [pc, #36]	; (8003a18 <Thread2+0x28>)
 80039f4:	4a09      	ldr	r2, [pc, #36]	; (8003a1c <Thread2+0x2c>)
 80039f6:	699b      	ldr	r3, [r3, #24]
 80039f8:	4c09      	ldr	r4, [pc, #36]	; (8003a20 <Thread2+0x30>)
 80039fa:	619a      	str	r2, [r3, #24]
 80039fc:	f44f 5500 	mov.w	r5, #8192	; 0x2000
 8003a00:	462e      	mov	r6, r5
 8003a02:	8366      	strh	r6, [r4, #26]
 8003a04:	f640 10c4 	movw	r0, #2500	; 0x9c4
 8003a08:	f7ff ffc2 	bl	8003990 <chThdSleep>
 8003a0c:	8325      	strh	r5, [r4, #24]
 8003a0e:	f640 10c4 	movw	r0, #2500	; 0x9c4
 8003a12:	f7ff ffbd 	bl	8003990 <chThdSleep>
 8003a16:	e7f4      	b.n	8003a02 <Thread2+0x12>
 8003a18:	20001290 	.word	0x20001290
 8003a1c:	08007b00 	.word	0x08007b00
 8003a20:	40021800 	.word	0x40021800
	...

08003a30 <sys1_execute>:
 8003a30:	b510      	push	{r4, lr}
 8003a32:	b086      	sub	sp, #24
 8003a34:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8003a38:	b91b      	cbnz	r3, 8003a42 <sys1_execute+0x12>
 8003a3a:	f7fd fec9 	bl	80017d0 <chSysGetStatusAndLockX.part.2>
 8003a3e:	f7fe fff7 	bl	8002a30 <chSysRestoreStatusX.part.3>
 8003a42:	2320      	movs	r3, #32
 8003a44:	f383 8811 	msr	BASEPRI, r3
 8003a48:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8003a4c:	b91b      	cbnz	r3, 8003a56 <sys1_execute+0x26>
 8003a4e:	f7fd febf 	bl	80017d0 <chSysGetStatusAndLockX.part.2>
 8003a52:	f7fe ffed 	bl	8002a30 <chSysRestoreStatusX.part.3>
 8003a56:	2300      	movs	r3, #0
 8003a58:	f383 8811 	msr	BASEPRI, r3
 8003a5c:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8003a60:	b913      	cbnz	r3, 8003a68 <sys1_execute+0x38>
 8003a62:	2320      	movs	r3, #32
 8003a64:	f383 8811 	msr	BASEPRI, r3
 8003a68:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8003a6c:	b913      	cbnz	r3, 8003a74 <sys1_execute+0x44>
 8003a6e:	2320      	movs	r3, #32
 8003a70:	f383 8811 	msr	BASEPRI, r3
 8003a74:	2300      	movs	r3, #0
 8003a76:	f383 8811 	msr	BASEPRI, r3
 8003a7a:	2220      	movs	r2, #32
 8003a7c:	f382 8811 	msr	BASEPRI, r2
 8003a80:	f3ef 8212 	mrs	r2, BASEPRI_MAX
 8003a84:	b10a      	cbz	r2, 8003a8a <sys1_execute+0x5a>
 8003a86:	f383 8811 	msr	BASEPRI, r3
 8003a8a:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8003a8e:	b113      	cbz	r3, 8003a96 <sys1_execute+0x66>
 8003a90:	2300      	movs	r3, #0
 8003a92:	f383 8811 	msr	BASEPRI, r3
 8003a96:	2300      	movs	r3, #0
 8003a98:	9304      	str	r3, [sp, #16]
 8003a9a:	2320      	movs	r3, #32
 8003a9c:	f383 8811 	msr	BASEPRI, r3
 8003aa0:	9b04      	ldr	r3, [sp, #16]
 8003aa2:	ac01      	add	r4, sp, #4
 8003aa4:	b113      	cbz	r3, 8003aac <sys1_execute+0x7c>
 8003aa6:	4620      	mov	r0, r4
 8003aa8:	f7fd fdfa 	bl	80016a0 <chVTDoResetI>
 8003aac:	4620      	mov	r0, r4
 8003aae:	2300      	movs	r3, #0
 8003ab0:	4a0b      	ldr	r2, [pc, #44]	; (8003ae0 <sys1_execute+0xb0>)
 8003ab2:	2101      	movs	r1, #1
 8003ab4:	f7fd fe2c 	bl	8001710 <chVTDoSetI>
 8003ab8:	2400      	movs	r4, #0
 8003aba:	f384 8811 	msr	BASEPRI, r4
 8003abe:	200a      	movs	r0, #10
 8003ac0:	f7ff ff66 	bl	8003990 <chThdSleep>
 8003ac4:	2320      	movs	r3, #32
 8003ac6:	f383 8811 	msr	BASEPRI, r3
 8003aca:	9904      	ldr	r1, [sp, #16]
 8003acc:	f384 8811 	msr	BASEPRI, r4
 8003ad0:	fab1 f181 	clz	r1, r1
 8003ad4:	0949      	lsrs	r1, r1, #5
 8003ad6:	2001      	movs	r0, #1
 8003ad8:	f7fc fe6a 	bl	80007b0 <_test_assert>
 8003adc:	b006      	add	sp, #24
 8003ade:	bd10      	pop	{r4, pc}
 8003ae0:	08002a51 	.word	0x08002a51
	...

08003af0 <thread1.lto_priv.75>:
 8003af0:	b510      	push	{r4, lr}
 8003af2:	4604      	mov	r4, r0
 8003af4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003af8:	f7ff ff4a 	bl	8003990 <chThdSleep>
 8003afc:	2320      	movs	r3, #32
 8003afe:	f383 8811 	msr	BASEPRI, r3
 8003b02:	2101      	movs	r1, #1
 8003b04:	4620      	mov	r0, r4
 8003b06:	f7fd fc4b 	bl	80013a0 <chEvtSignalI>
 8003b0a:	f7fe fe89 	bl	8002820 <chSchRescheduleS>
 8003b0e:	2300      	movs	r3, #0
 8003b10:	f383 8811 	msr	BASEPRI, r3
 8003b14:	bd10      	pop	{r4, pc}
 8003b16:	bf00      	nop
	...

08003b20 <thread2.lto_priv.81>:
 8003b20:	b538      	push	{r3, r4, r5, lr}
 8003b22:	2520      	movs	r5, #32
 8003b24:	f385 8811 	msr	BASEPRI, r5
 8003b28:	2100      	movs	r1, #0
 8003b2a:	480b      	ldr	r0, [pc, #44]	; (8003b58 <thread2.lto_priv.81+0x38>)
 8003b2c:	f7fd fc50 	bl	80013d0 <chEvtBroadcastFlagsI>
 8003b30:	2400      	movs	r4, #0
 8003b32:	f7fe fe75 	bl	8002820 <chSchRescheduleS>
 8003b36:	f384 8811 	msr	BASEPRI, r4
 8003b3a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003b3e:	f7ff ff27 	bl	8003990 <chThdSleep>
 8003b42:	f385 8811 	msr	BASEPRI, r5
 8003b46:	4805      	ldr	r0, [pc, #20]	; (8003b5c <thread2.lto_priv.81+0x3c>)
 8003b48:	4621      	mov	r1, r4
 8003b4a:	f7fd fc41 	bl	80013d0 <chEvtBroadcastFlagsI>
 8003b4e:	f7fe fe67 	bl	8002820 <chSchRescheduleS>
 8003b52:	f384 8811 	msr	BASEPRI, r4
 8003b56:	bd38      	pop	{r3, r4, r5, pc}
 8003b58:	20000808 	.word	0x20000808
 8003b5c:	2000080c 	.word	0x2000080c

08003b60 <thread2.lto_priv.80>:
 8003b60:	b508      	push	{r3, lr}
 8003b62:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003b66:	f7ff ff13 	bl	8003990 <chThdSleep>
 8003b6a:	2320      	movs	r3, #32
 8003b6c:	f383 8811 	msr	BASEPRI, r3
 8003b70:	4804      	ldr	r0, [pc, #16]	; (8003b84 <thread2.lto_priv.80+0x24>)
 8003b72:	f7fd fcf5 	bl	8001560 <chSemSignalI>
 8003b76:	f7fe fe53 	bl	8002820 <chSchRescheduleS>
 8003b7a:	2300      	movs	r3, #0
 8003b7c:	f383 8811 	msr	BASEPRI, r3
 8003b80:	bd08      	pop	{r3, pc}
 8003b82:	bf00      	nop
 8003b84:	200008cc 	.word	0x200008cc
	...

08003b90 <test_wait_tick>:
 8003b90:	b508      	push	{r3, lr}
 8003b92:	2001      	movs	r0, #1
 8003b94:	f7ff fefc 	bl	8003990 <chThdSleep>
 8003b98:	2320      	movs	r3, #32
 8003b9a:	f383 8811 	msr	BASEPRI, r3
 8003b9e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003ba2:	2300      	movs	r3, #0
 8003ba4:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8003ba6:	f383 8811 	msr	BASEPRI, r3
 8003baa:	bd08      	pop	{r3, pc}
 8003bac:	0000      	movs	r0, r0
	...

08003bb0 <bmk10_execute>:
 8003bb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003bb4:	f7ff ffec 	bl	8003b90 <test_wait_tick>
 8003bb8:	f7fd fdea 	bl	8001790 <test_start_timer.constprop.3>
 8003bbc:	2400      	movs	r4, #0
 8003bbe:	f8df a070 	ldr.w	sl, [pc, #112]	; 8003c30 <bmk10_execute+0x80>
 8003bc2:	4f16      	ldr	r7, [pc, #88]	; (8003c1c <bmk10_execute+0x6c>)
 8003bc4:	4e16      	ldr	r6, [pc, #88]	; (8003c20 <bmk10_execute+0x70>)
 8003bc6:	4d17      	ldr	r5, [pc, #92]	; (8003c24 <bmk10_execute+0x74>)
 8003bc8:	46a1      	mov	r9, r4
 8003bca:	f04f 0820 	mov.w	r8, #32
 8003bce:	f388 8811 	msr	BASEPRI, r8
 8003bd2:	2300      	movs	r3, #0
 8003bd4:	463a      	mov	r2, r7
 8003bd6:	4630      	mov	r0, r6
 8003bd8:	2101      	movs	r1, #1
 8003bda:	f7fd fd99 	bl	8001710 <chVTDoSetI>
 8003bde:	463a      	mov	r2, r7
 8003be0:	2300      	movs	r3, #0
 8003be2:	f242 7110 	movw	r1, #10000	; 0x2710
 8003be6:	4628      	mov	r0, r5
 8003be8:	f7fd fd92 	bl	8001710 <chVTDoSetI>
 8003bec:	4630      	mov	r0, r6
 8003bee:	f7fd fd57 	bl	80016a0 <chVTDoResetI>
 8003bf2:	4628      	mov	r0, r5
 8003bf4:	f7fd fd54 	bl	80016a0 <chVTDoResetI>
 8003bf8:	f389 8811 	msr	BASEPRI, r9
 8003bfc:	f89a 3000 	ldrb.w	r3, [sl]
 8003c00:	3401      	adds	r4, #1
 8003c02:	2b00      	cmp	r3, #0
 8003c04:	d0e3      	beq.n	8003bce <bmk10_execute+0x1e>
 8003c06:	4808      	ldr	r0, [pc, #32]	; (8003c28 <bmk10_execute+0x78>)
 8003c08:	f7fc fe42 	bl	8000890 <test_print>
 8003c0c:	0060      	lsls	r0, r4, #1
 8003c0e:	f7fc fd47 	bl	80006a0 <test_printn>
 8003c12:	4806      	ldr	r0, [pc, #24]	; (8003c2c <bmk10_execute+0x7c>)
 8003c14:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c18:	f7fc be1a 	b.w	8000850 <test_println>
 8003c1c:	080003a1 	.word	0x080003a1
 8003c20:	20001bc0 	.word	0x20001bc0
 8003c24:	20001bd4 	.word	0x20001bd4
 8003c28:	08007b50 	.word	0x08007b50
 8003c2c:	08007b60 	.word	0x08007b60
 8003c30:	20001b80 	.word	0x20001b80
	...

08003c40 <bmk9_execute>:
 8003c40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c42:	4b26      	ldr	r3, [pc, #152]	; (8003cdc <bmk9_execute+0x9c>)
 8003c44:	4c26      	ldr	r4, [pc, #152]	; (8003ce0 <bmk9_execute+0xa0>)
 8003c46:	4f27      	ldr	r7, [pc, #156]	; (8003ce4 <bmk9_execute+0xa4>)
 8003c48:	60e3      	str	r3, [r4, #12]
 8003c4a:	f103 0210 	add.w	r2, r3, #16
 8003c4e:	2500      	movs	r5, #0
 8003c50:	6122      	str	r2, [r4, #16]
 8003c52:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8003c56:	6024      	str	r4, [r4, #0]
 8003c58:	6064      	str	r4, [r4, #4]
 8003c5a:	60a5      	str	r5, [r4, #8]
 8003c5c:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8003c60:	f7ff ff96 	bl	8003b90 <test_wait_tick>
 8003c64:	f7fd fd94 	bl	8001790 <test_start_timer.constprop.3>
 8003c68:	462e      	mov	r6, r5
 8003c6a:	2320      	movs	r3, #32
 8003c6c:	f383 8811 	msr	BASEPRI, r3
 8003c70:	2100      	movs	r1, #0
 8003c72:	4620      	mov	r0, r4
 8003c74:	f7fd fad4 	bl	8001220 <chIQPutI>
 8003c78:	4620      	mov	r0, r4
 8003c7a:	2101      	movs	r1, #1
 8003c7c:	f7fd fad0 	bl	8001220 <chIQPutI>
 8003c80:	4620      	mov	r0, r4
 8003c82:	2102      	movs	r1, #2
 8003c84:	f7fd facc 	bl	8001220 <chIQPutI>
 8003c88:	4620      	mov	r0, r4
 8003c8a:	2103      	movs	r1, #3
 8003c8c:	f7fd fac8 	bl	8001220 <chIQPutI>
 8003c90:	f386 8811 	msr	BASEPRI, r6
 8003c94:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003c98:	4620      	mov	r0, r4
 8003c9a:	f7ff fe39 	bl	8003910 <chIQGetTimeout>
 8003c9e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003ca2:	4620      	mov	r0, r4
 8003ca4:	f7ff fe34 	bl	8003910 <chIQGetTimeout>
 8003ca8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003cac:	4620      	mov	r0, r4
 8003cae:	f7ff fe2f 	bl	8003910 <chIQGetTimeout>
 8003cb2:	4620      	mov	r0, r4
 8003cb4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003cb8:	f7ff fe2a 	bl	8003910 <chIQGetTimeout>
 8003cbc:	783b      	ldrb	r3, [r7, #0]
 8003cbe:	3501      	adds	r5, #1
 8003cc0:	2b00      	cmp	r3, #0
 8003cc2:	d0d2      	beq.n	8003c6a <bmk9_execute+0x2a>
 8003cc4:	4808      	ldr	r0, [pc, #32]	; (8003ce8 <bmk9_execute+0xa8>)
 8003cc6:	f7fc fde3 	bl	8000890 <test_print>
 8003cca:	00a8      	lsls	r0, r5, #2
 8003ccc:	f7fc fce8 	bl	80006a0 <test_printn>
 8003cd0:	4806      	ldr	r0, [pc, #24]	; (8003cec <bmk9_execute+0xac>)
 8003cd2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003cd6:	f7fc bdbb 	b.w	8000850 <test_println>
 8003cda:	bf00      	nop
 8003cdc:	20001488 	.word	0x20001488
 8003ce0:	20001498 	.word	0x20001498
 8003ce4:	20001b80 	.word	0x20001b80
 8003ce8:	08007b50 	.word	0x08007b50
 8003cec:	08007c90 	.word	0x08007c90

08003cf0 <bmk6_execute>:
 8003cf0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003cf4:	4b14      	ldr	r3, [pc, #80]	; (8003d48 <bmk6_execute+0x58>)
 8003cf6:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8003d58 <bmk6_execute+0x68>
 8003cfa:	699b      	ldr	r3, [r3, #24]
 8003cfc:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8003d5c <bmk6_execute+0x6c>
 8003d00:	689d      	ldr	r5, [r3, #8]
 8003d02:	4f12      	ldr	r7, [pc, #72]	; (8003d4c <bmk6_execute+0x5c>)
 8003d04:	b083      	sub	sp, #12
 8003d06:	f7ff ff43 	bl	8003b90 <test_wait_tick>
 8003d0a:	f7fd fd41 	bl	8001790 <test_start_timer.constprop.3>
 8003d0e:	2400      	movs	r4, #0
 8003d10:	3501      	adds	r5, #1
 8003d12:	4626      	mov	r6, r4
 8003d14:	4643      	mov	r3, r8
 8003d16:	9600      	str	r6, [sp, #0]
 8003d18:	462a      	mov	r2, r5
 8003d1a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d1e:	4638      	mov	r0, r7
 8003d20:	f7fe ff6e 	bl	8002c00 <chThdCreateStatic>
 8003d24:	f899 3000 	ldrb.w	r3, [r9]
 8003d28:	3401      	adds	r4, #1
 8003d2a:	2b00      	cmp	r3, #0
 8003d2c:	d0f2      	beq.n	8003d14 <bmk6_execute+0x24>
 8003d2e:	4808      	ldr	r0, [pc, #32]	; (8003d50 <bmk6_execute+0x60>)
 8003d30:	f7fc fdae 	bl	8000890 <test_print>
 8003d34:	4620      	mov	r0, r4
 8003d36:	f7fc fcb3 	bl	80006a0 <test_printn>
 8003d3a:	4806      	ldr	r0, [pc, #24]	; (8003d54 <bmk6_execute+0x64>)
 8003d3c:	b003      	add	sp, #12
 8003d3e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003d42:	f7fc bd85 	b.w	8000850 <test_println>
 8003d46:	bf00      	nop
 8003d48:	20001290 	.word	0x20001290
 8003d4c:	200014f0 	.word	0x200014f0
 8003d50:	08007b50 	.word	0x08007b50
 8003d54:	08007c50 	.word	0x08007c50
 8003d58:	20001b80 	.word	0x20001b80
 8003d5c:	08007821 	.word	0x08007821

08003d60 <thd4_execute>:
 8003d60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d62:	f7ff ff15 	bl	8003b90 <test_wait_tick>
 8003d66:	2620      	movs	r6, #32
 8003d68:	f386 8811 	msr	BASEPRI, r6
 8003d6c:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8003d70:	2300      	movs	r3, #0
 8003d72:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8003d74:	f383 8811 	msr	BASEPRI, r3
 8003d78:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8003d7c:	f7ff fe08 	bl	8003990 <chThdSleep>
 8003d80:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8003d84:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8003d88:	2001      	movs	r0, #1
 8003d8a:	f7fc fcc9 	bl	8000720 <_test_assert_time_window>
 8003d8e:	b100      	cbz	r0, 8003d92 <thd4_execute+0x32>
 8003d90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003d92:	f386 8811 	msr	BASEPRI, r6
 8003d96:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8003d98:	f380 8811 	msr	BASEPRI, r0
 8003d9c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8003da0:	f7ff fdf6 	bl	8003990 <chThdSleep>
 8003da4:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8003da8:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8003dac:	2002      	movs	r0, #2
 8003dae:	f7fc fcb7 	bl	8000720 <_test_assert_time_window>
 8003db2:	2800      	cmp	r0, #0
 8003db4:	d1ec      	bne.n	8003d90 <thd4_execute+0x30>
 8003db6:	f386 8811 	msr	BASEPRI, r6
 8003dba:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8003dbc:	f380 8811 	msr	BASEPRI, r0
 8003dc0:	f242 7010 	movw	r0, #10000	; 0x2710
 8003dc4:	f7ff fde4 	bl	8003990 <chThdSleep>
 8003dc8:	f504 521c 	add.w	r2, r4, #9984	; 0x2700
 8003dcc:	4611      	mov	r1, r2
 8003dce:	3110      	adds	r1, #16
 8003dd0:	3213      	adds	r2, #19
 8003dd2:	2003      	movs	r0, #3
 8003dd4:	f7fc fca4 	bl	8000720 <_test_assert_time_window>
 8003dd8:	2800      	cmp	r0, #0
 8003dda:	d1d9      	bne.n	8003d90 <thd4_execute+0x30>
 8003ddc:	f386 8811 	msr	BASEPRI, r6
 8003de0:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 8003de2:	f380 8811 	msr	BASEPRI, r0
 8003de6:	f507 747a 	add.w	r4, r7, #1000	; 0x3e8
 8003dea:	f386 8811 	msr	BASEPRI, r6
 8003dee:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8003df0:	1a61      	subs	r1, r4, r1
 8003df2:	d002      	beq.n	8003dfa <thd4_execute+0x9a>
 8003df4:	2008      	movs	r0, #8
 8003df6:	f7ff f823 	bl	8002e40 <chSchGoSleepTimeoutS>
 8003dfa:	2300      	movs	r3, #0
 8003dfc:	f383 8811 	msr	BASEPRI, r3
 8003e00:	2004      	movs	r0, #4
 8003e02:	f207 32eb 	addw	r2, r7, #1003	; 0x3eb
 8003e06:	4621      	mov	r1, r4
 8003e08:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003e0c:	f7fc bc88 	b.w	8000720 <_test_assert_time_window>

08003e10 <usb_lld_pump>:
 8003e10:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8003e14:	4b6e      	ldr	r3, [pc, #440]	; (8003fd0 <usb_lld_pump+0x1c0>)
 8003e16:	496f      	ldr	r1, [pc, #444]	; (8003fd4 <usb_lld_pump+0x1c4>)
 8003e18:	699a      	ldr	r2, [r3, #24]
 8003e1a:	6e85      	ldr	r5, [r0, #104]	; 0x68
 8003e1c:	6191      	str	r1, [r2, #24]
 8003e1e:	b087      	sub	sp, #28
 8003e20:	2320      	movs	r3, #32
 8003e22:	f383 8811 	msr	BASEPRI, r3
 8003e26:	f100 0378 	add.w	r3, r0, #120	; 0x78
 8003e2a:	46a9      	mov	r9, r5
 8003e2c:	9305      	str	r3, [sp, #20]
 8003e2e:	4605      	mov	r5, r0
 8003e30:	782b      	ldrb	r3, [r5, #0]
 8003e32:	2b01      	cmp	r3, #1
 8003e34:	d005      	beq.n	8003e42 <usb_lld_pump+0x32>
 8003e36:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8003e38:	b98b      	cbnz	r3, 8003e5e <usb_lld_pump+0x4e>
 8003e3a:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8003e3e:	06db      	lsls	r3, r3, #27
 8003e40:	d40d      	bmi.n	8003e5e <usb_lld_pump+0x4e>
 8003e42:	f8d9 3018 	ldr.w	r3, [r9, #24]
 8003e46:	4a62      	ldr	r2, [pc, #392]	; (8003fd0 <usb_lld_pump+0x1c0>)
 8003e48:	f043 0310 	orr.w	r3, r3, #16
 8003e4c:	6992      	ldr	r2, [r2, #24]
 8003e4e:	f8c9 3018 	str.w	r3, [r9, #24]
 8003e52:	9b05      	ldr	r3, [sp, #20]
 8003e54:	67aa      	str	r2, [r5, #120]	; 0x78
 8003e56:	2003      	movs	r0, #3
 8003e58:	6213      	str	r3, [r2, #32]
 8003e5a:	f7fe ff09 	bl	8002c70 <chSchGoSleepS>
 8003e5e:	2300      	movs	r3, #0
 8003e60:	f383 8811 	msr	BASEPRI, r3
 8003e64:	469a      	mov	sl, r3
 8003e66:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8003e6a:	f013 0310 	ands.w	r3, r3, #16
 8003e6e:	d058      	beq.n	8003f22 <usb_lld_pump+0x112>
 8003e70:	6eaa      	ldr	r2, [r5, #104]	; 0x68
 8003e72:	6a13      	ldr	r3, [r2, #32]
 8003e74:	f403 11f0 	and.w	r1, r3, #1966080	; 0x1e0000
 8003e78:	f5b1 2f80 	cmp.w	r1, #262144	; 0x40000
 8003e7c:	d024      	beq.n	8003ec8 <usb_lld_pump+0xb8>
 8003e7e:	f5b1 2f40 	cmp.w	r1, #786432	; 0xc0000
 8003e82:	d1f0      	bne.n	8003e66 <usb_lld_pump+0x56>
 8003e84:	f003 010f 	and.w	r1, r3, #15
 8003e88:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8003e8c:	f3c3 130a 	ubfx	r3, r3, #4, #11
 8003e90:	68c9      	ldr	r1, [r1, #12]
 8003e92:	3303      	adds	r3, #3
 8003e94:	089b      	lsrs	r3, r3, #2
 8003e96:	6a0c      	ldr	r4, [r1, #32]
 8003e98:	d0e5      	beq.n	8003e66 <usb_lld_pump+0x56>
 8003e9a:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8003e9e:	2102      	movs	r1, #2
 8003ea0:	6816      	ldr	r6, [r2, #0]
 8003ea2:	1e58      	subs	r0, r3, #1
 8003ea4:	b149      	cbz	r1, 8003eba <usb_lld_pump+0xaa>
 8003ea6:	4603      	mov	r3, r0
 8003ea8:	f844 6b04 	str.w	r6, [r4], #4
 8003eac:	3901      	subs	r1, #1
 8003eae:	2b00      	cmp	r3, #0
 8003eb0:	d0d9      	beq.n	8003e66 <usb_lld_pump+0x56>
 8003eb2:	6816      	ldr	r6, [r2, #0]
 8003eb4:	1e58      	subs	r0, r3, #1
 8003eb6:	2900      	cmp	r1, #0
 8003eb8:	d1f5      	bne.n	8003ea6 <usb_lld_pump+0x96>
 8003eba:	2800      	cmp	r0, #0
 8003ebc:	d0d3      	beq.n	8003e66 <usb_lld_pump+0x56>
 8003ebe:	3b02      	subs	r3, #2
 8003ec0:	6810      	ldr	r0, [r2, #0]
 8003ec2:	2b00      	cmp	r3, #0
 8003ec4:	d1f5      	bne.n	8003eb2 <usb_lld_pump+0xa2>
 8003ec6:	e7ce      	b.n	8003e66 <usb_lld_pump+0x56>
 8003ec8:	f003 060f 	and.w	r6, r3, #15
 8003ecc:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 8003ed0:	f3c3 140a 	ubfx	r4, r3, #4, #11
 8003ed4:	68f3      	ldr	r3, [r6, #12]
 8003ed6:	699f      	ldr	r7, [r3, #24]
 8003ed8:	783b      	ldrb	r3, [r7, #0]
 8003eda:	68f8      	ldr	r0, [r7, #12]
 8003edc:	2b00      	cmp	r3, #0
 8003ede:	d13b      	bne.n	8003f58 <usb_lld_pump+0x148>
 8003ee0:	e9d7 1301 	ldrd	r1, r3, [r7, #4]
 8003ee4:	1cce      	adds	r6, r1, #3
 8003ee6:	1ce1      	adds	r1, r4, #3
 8003ee8:	1af6      	subs	r6, r6, r3
 8003eea:	0889      	lsrs	r1, r1, #2
 8003eec:	ea4f 0696 	mov.w	r6, r6, lsr #2
 8003ef0:	d00e      	beq.n	8003f10 <usb_lld_pump+0x100>
 8003ef2:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8003ef6:	4684      	mov	ip, r0
 8003ef8:	4696      	mov	lr, r2
 8003efa:	f8de 2000 	ldr.w	r2, [lr]
 8003efe:	1e4b      	subs	r3, r1, #1
 8003f00:	b316      	cbz	r6, 8003f48 <usb_lld_pump+0x138>
 8003f02:	4619      	mov	r1, r3
 8003f04:	f84c 2b04 	str.w	r2, [ip], #4
 8003f08:	3e01      	subs	r6, #1
 8003f0a:	2900      	cmp	r1, #0
 8003f0c:	d1f5      	bne.n	8003efa <usb_lld_pump+0xea>
 8003f0e:	68bb      	ldr	r3, [r7, #8]
 8003f10:	4420      	add	r0, r4
 8003f12:	60f8      	str	r0, [r7, #12]
 8003f14:	4423      	add	r3, r4
 8003f16:	60bb      	str	r3, [r7, #8]
 8003f18:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8003f1c:	f013 0310 	ands.w	r3, r3, #16
 8003f20:	d1a6      	bne.n	8003e70 <usb_lld_pump+0x60>
 8003f22:	2601      	movs	r6, #1
 8003f24:	6f6a      	ldr	r2, [r5, #116]	; 0x74
 8003f26:	fa06 f60a 	lsl.w	r6, r6, sl
 8003f2a:	4216      	tst	r6, r2
 8003f2c:	d154      	bne.n	8003fd8 <usb_lld_pump+0x1c8>
 8003f2e:	f10a 0301 	add.w	r3, sl, #1
 8003f32:	9302      	str	r3, [sp, #8]
 8003f34:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
 8003f36:	f89d a008 	ldrb.w	sl, [sp, #8]
 8003f3a:	689b      	ldr	r3, [r3, #8]
 8003f3c:	459a      	cmp	sl, r3
 8003f3e:	d992      	bls.n	8003e66 <usb_lld_pump+0x56>
 8003f40:	2320      	movs	r3, #32
 8003f42:	f383 8811 	msr	BASEPRI, r3
 8003f46:	e773      	b.n	8003e30 <usb_lld_pump+0x20>
 8003f48:	2b00      	cmp	r3, #0
 8003f4a:	d0e0      	beq.n	8003f0e <usb_lld_pump+0xfe>
 8003f4c:	3902      	subs	r1, #2
 8003f4e:	f8de 3000 	ldr.w	r3, [lr]
 8003f52:	2900      	cmp	r1, #0
 8003f54:	d1d1      	bne.n	8003efa <usb_lld_pump+0xea>
 8003f56:	e7da      	b.n	8003f0e <usb_lld_pump+0xfe>
 8003f58:	b33c      	cbz	r4, 8003faa <usb_lld_pump+0x19a>
 8003f5a:	6941      	ldr	r1, [r0, #20]
 8003f5c:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8003f60:	46a4      	mov	ip, r4
 8003f62:	f1bc 0f03 	cmp.w	ip, #3
 8003f66:	d907      	bls.n	8003f78 <usb_lld_pump+0x168>
 8003f68:	6903      	ldr	r3, [r0, #16]
 8003f6a:	428b      	cmp	r3, r1
 8003f6c:	d804      	bhi.n	8003f78 <usb_lld_pump+0x168>
 8003f6e:	68c1      	ldr	r1, [r0, #12]
 8003f70:	6141      	str	r1, [r0, #20]
 8003f72:	f1bc 0f03 	cmp.w	ip, #3
 8003f76:	d8f7      	bhi.n	8003f68 <usb_lld_pump+0x158>
 8003f78:	f8d2 e000 	ldr.w	lr, [r2]
 8003f7c:	2300      	movs	r3, #0
 8003f7e:	fa2e f703 	lsr.w	r7, lr, r3
 8003f82:	f101 0801 	add.w	r8, r1, #1
 8003f86:	f8c0 8014 	str.w	r8, [r0, #20]
 8003f8a:	700f      	strb	r7, [r1, #0]
 8003f8c:	e9d0 1704 	ldrd	r1, r7, [r0, #16]
 8003f90:	428f      	cmp	r7, r1
 8003f92:	bf24      	itt	cs
 8003f94:	68c1      	ldrcs	r1, [r0, #12]
 8003f96:	6141      	strcs	r1, [r0, #20]
 8003f98:	f1bc 0c01 	subs.w	ip, ip, #1
 8003f9c:	f103 0308 	add.w	r3, r3, #8
 8003fa0:	d003      	beq.n	8003faa <usb_lld_pump+0x19a>
 8003fa2:	2b20      	cmp	r3, #32
 8003fa4:	6941      	ldr	r1, [r0, #20]
 8003fa6:	d1ea      	bne.n	8003f7e <usb_lld_pump+0x16e>
 8003fa8:	e7db      	b.n	8003f62 <usb_lld_pump+0x152>
 8003faa:	2320      	movs	r3, #32
 8003fac:	f383 8811 	msr	BASEPRI, r3
 8003fb0:	6883      	ldr	r3, [r0, #8]
 8003fb2:	4423      	add	r3, r4
 8003fb4:	6083      	str	r3, [r0, #8]
 8003fb6:	2100      	movs	r1, #0
 8003fb8:	f7fd fb5a 	bl	8001670 <chThdDequeueAllI>
 8003fbc:	f7fe fc30 	bl	8002820 <chSchRescheduleS>
 8003fc0:	2300      	movs	r3, #0
 8003fc2:	f383 8811 	msr	BASEPRI, r3
 8003fc6:	68f3      	ldr	r3, [r6, #12]
 8003fc8:	699f      	ldr	r7, [r3, #24]
 8003fca:	68bb      	ldr	r3, [r7, #8]
 8003fcc:	e7a2      	b.n	8003f14 <usb_lld_pump+0x104>
 8003fce:	bf00      	nop
 8003fd0:	20001290 	.word	0x20001290
 8003fd4:	08008b30 	.word	0x08008b30
 8003fd8:	2220      	movs	r2, #32
 8003fda:	f382 8811 	msr	BASEPRI, r2
 8003fde:	f8d9 1008 	ldr.w	r1, [r9, #8]
 8003fe2:	6f6a      	ldr	r2, [r5, #116]	; 0x74
 8003fe4:	f021 0101 	bic.w	r1, r1, #1
 8003fe8:	ea22 0206 	bic.w	r2, r2, r6
 8003fec:	f8c9 1008 	str.w	r1, [r9, #8]
 8003ff0:	676a      	str	r2, [r5, #116]	; 0x74
 8003ff2:	f383 8811 	msr	BASEPRI, r3
 8003ff6:	eb05 038a 	add.w	r3, r5, sl, lsl #2
 8003ffa:	461f      	mov	r7, r3
 8003ffc:	68d9      	ldr	r1, [r3, #12]
 8003ffe:	694a      	ldr	r2, [r1, #20]
 8004000:	e9d2 3001 	ldrd	r3, r0, [r2, #4]
 8004004:	4298      	cmp	r0, r3
 8004006:	f080 80b1 	bcs.w	800416c <usb_lld_pump+0x35c>
 800400a:	f8d5 e068 	ldr.w	lr, [r5, #104]	; 0x68
 800400e:	8a0c      	ldrh	r4, [r1, #16]
 8004010:	ea4f 184a 	mov.w	r8, sl, lsl #5
 8004014:	eb0e 0c08 	add.w	ip, lr, r8
 8004018:	1a1b      	subs	r3, r3, r0
 800401a:	f8dc 0918 	ldr.w	r0, [ip, #2328]	; 0x918
 800401e:	429c      	cmp	r4, r3
 8004020:	bf28      	it	cs
 8004022:	461c      	movcs	r4, r3
 8004024:	b283      	uxth	r3, r0
 8004026:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 800402a:	f200 80ac 	bhi.w	8004186 <usb_lld_pump+0x376>
 800402e:	f10a 0301 	add.w	r3, sl, #1
 8004032:	9302      	str	r3, [sp, #8]
 8004034:	031b      	lsls	r3, r3, #12
 8004036:	e9cd 9603 	strd	r9, r6, [sp, #12]
 800403a:	9301      	str	r3, [sp, #4]
 800403c:	46b9      	mov	r9, r7
 800403e:	9e01      	ldr	r6, [sp, #4]
 8004040:	7813      	ldrb	r3, [r2, #0]
 8004042:	68d0      	ldr	r0, [r2, #12]
 8004044:	44b6      	add	lr, r6
 8004046:	2b00      	cmp	r3, #0
 8004048:	d079      	beq.n	800413e <usb_lld_pump+0x32e>
 800404a:	b1fc      	cbz	r4, 800408c <usb_lld_pump+0x27c>
 800404c:	f8d0 b010 	ldr.w	fp, [r0, #16]
 8004050:	4622      	mov	r2, r4
 8004052:	0897      	lsrs	r7, r2, #2
 8004054:	6983      	ldr	r3, [r0, #24]
 8004056:	d059      	beq.n	800410c <usb_lld_pump+0x2fc>
 8004058:	ebbb 0103 	subs.w	r1, fp, r3
 800405c:	bf48      	it	mi
 800405e:	3103      	addmi	r1, #3
 8004060:	108e      	asrs	r6, r1, #2
 8004062:	42be      	cmp	r6, r7
 8004064:	bf28      	it	cs
 8004066:	463e      	movcs	r6, r7
 8004068:	00b1      	lsls	r1, r6, #2
 800406a:	1a52      	subs	r2, r2, r1
 800406c:	2e00      	cmp	r6, #0
 800406e:	d077      	beq.n	8004160 <usb_lld_pump+0x350>
 8004070:	4419      	add	r1, r3
 8004072:	f853 6b04 	ldr.w	r6, [r3], #4
 8004076:	f8ce 6000 	str.w	r6, [lr]
 800407a:	428b      	cmp	r3, r1
 800407c:	d1f9      	bne.n	8004072 <usb_lld_pump+0x262>
 800407e:	4559      	cmp	r1, fp
 8004080:	6181      	str	r1, [r0, #24]
 8004082:	d340      	bcc.n	8004106 <usb_lld_pump+0x2f6>
 8004084:	68c3      	ldr	r3, [r0, #12]
 8004086:	6183      	str	r3, [r0, #24]
 8004088:	2a00      	cmp	r2, #0
 800408a:	d1e2      	bne.n	8004052 <usb_lld_pump+0x242>
 800408c:	2320      	movs	r3, #32
 800408e:	f383 8811 	msr	BASEPRI, r3
 8004092:	6883      	ldr	r3, [r0, #8]
 8004094:	4423      	add	r3, r4
 8004096:	6083      	str	r3, [r0, #8]
 8004098:	2100      	movs	r1, #0
 800409a:	f7fd fae9 	bl	8001670 <chThdDequeueAllI>
 800409e:	f7fe fbbf 	bl	8002820 <chSchRescheduleS>
 80040a2:	2300      	movs	r3, #0
 80040a4:	f383 8811 	msr	BASEPRI, r3
 80040a8:	f8d9 100c 	ldr.w	r1, [r9, #12]
 80040ac:	694a      	ldr	r2, [r1, #20]
 80040ae:	e9d2 0301 	ldrd	r0, r3, [r2, #4]
 80040b2:	441c      	add	r4, r3
 80040b4:	42a0      	cmp	r0, r4
 80040b6:	6094      	str	r4, [r2, #8]
 80040b8:	d954      	bls.n	8004164 <usb_lld_pump+0x354>
 80040ba:	f8d5 e068 	ldr.w	lr, [r5, #104]	; 0x68
 80040be:	f8b1 c010 	ldrh.w	ip, [r1, #16]
 80040c2:	eb0e 0a08 	add.w	sl, lr, r8
 80040c6:	1b04      	subs	r4, r0, r4
 80040c8:	f8da 3918 	ldr.w	r3, [sl, #2328]	; 0x918
 80040cc:	4564      	cmp	r4, ip
 80040ce:	bf28      	it	cs
 80040d0:	4664      	movcs	r4, ip
 80040d2:	b29b      	uxth	r3, r3
 80040d4:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 80040d8:	d9b1      	bls.n	800403e <usb_lld_pump+0x22e>
 80040da:	e9dd 9603 	ldrd	r9, r6, [sp, #12]
 80040de:	2200      	movs	r2, #0
 80040e0:	2320      	movs	r3, #32
 80040e2:	f383 8811 	msr	BASEPRI, r3
 80040e6:	f8d9 3008 	ldr.w	r3, [r9, #8]
 80040ea:	f043 0301 	orr.w	r3, r3, #1
 80040ee:	f8c9 3008 	str.w	r3, [r9, #8]
 80040f2:	b922      	cbnz	r2, 80040fe <usb_lld_pump+0x2ee>
 80040f4:	f8d9 3834 	ldr.w	r3, [r9, #2100]	; 0x834
 80040f8:	431e      	orrs	r6, r3
 80040fa:	f8c9 6834 	str.w	r6, [r9, #2100]	; 0x834
 80040fe:	2300      	movs	r3, #0
 8004100:	f383 8811 	msr	BASEPRI, r3
 8004104:	e716      	b.n	8003f34 <usb_lld_pump+0x124>
 8004106:	2a00      	cmp	r2, #0
 8004108:	d0c0      	beq.n	800408c <usb_lld_pump+0x27c>
 800410a:	460b      	mov	r3, r1
 800410c:	2100      	movs	r1, #0
 800410e:	460e      	mov	r6, r1
 8004110:	1c5f      	adds	r7, r3, #1
 8004112:	6187      	str	r7, [r0, #24]
 8004114:	781b      	ldrb	r3, [r3, #0]
 8004116:	455f      	cmp	r7, fp
 8004118:	fa03 f301 	lsl.w	r3, r3, r1
 800411c:	ea46 0603 	orr.w	r6, r6, r3
 8004120:	bf24      	itt	cs
 8004122:	68c3      	ldrcs	r3, [r0, #12]
 8004124:	6183      	strcs	r3, [r0, #24]
 8004126:	3a01      	subs	r2, #1
 8004128:	d004      	beq.n	8004134 <usb_lld_pump+0x324>
 800412a:	2918      	cmp	r1, #24
 800412c:	d002      	beq.n	8004134 <usb_lld_pump+0x324>
 800412e:	3108      	adds	r1, #8
 8004130:	6983      	ldr	r3, [r0, #24]
 8004132:	e7ed      	b.n	8004110 <usb_lld_pump+0x300>
 8004134:	f8ce 6000 	str.w	r6, [lr]
 8004138:	2a00      	cmp	r2, #0
 800413a:	d18a      	bne.n	8004052 <usb_lld_pump+0x242>
 800413c:	e7a6      	b.n	800408c <usb_lld_pump+0x27c>
 800413e:	1ce3      	adds	r3, r4, #3
 8004140:	089b      	lsrs	r3, r3, #2
 8004142:	d00a      	beq.n	800415a <usb_lld_pump+0x34a>
 8004144:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8004148:	4603      	mov	r3, r0
 800414a:	f853 6b04 	ldr.w	r6, [r3], #4
 800414e:	f8ce 6000 	str.w	r6, [lr]
 8004152:	428b      	cmp	r3, r1
 8004154:	d1f9      	bne.n	800414a <usb_lld_pump+0x33a>
 8004156:	f8d9 100c 	ldr.w	r1, [r9, #12]
 800415a:	4420      	add	r0, r4
 800415c:	60d0      	str	r0, [r2, #12]
 800415e:	e7a5      	b.n	80040ac <usb_lld_pump+0x29c>
 8004160:	4619      	mov	r1, r3
 8004162:	e78c      	b.n	800407e <usb_lld_pump+0x26e>
 8004164:	e9dd 9603 	ldrd	r9, r6, [sp, #12]
 8004168:	2201      	movs	r2, #1
 800416a:	e7b9      	b.n	80040e0 <usb_lld_pump+0x2d0>
 800416c:	2320      	movs	r3, #32
 800416e:	f383 8811 	msr	BASEPRI, r3
 8004172:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8004176:	f10a 0201 	add.w	r2, sl, #1
 800417a:	f043 0301 	orr.w	r3, r3, #1
 800417e:	9202      	str	r2, [sp, #8]
 8004180:	f8c9 3008 	str.w	r3, [r9, #8]
 8004184:	e7bb      	b.n	80040fe <usb_lld_pump+0x2ee>
 8004186:	2320      	movs	r3, #32
 8004188:	f383 8811 	msr	BASEPRI, r3
 800418c:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8004190:	f10a 0201 	add.w	r2, sl, #1
 8004194:	f043 0301 	orr.w	r3, r3, #1
 8004198:	9202      	str	r2, [sp, #8]
 800419a:	f8c9 3008 	str.w	r3, [r9, #8]
 800419e:	e7a9      	b.n	80040f4 <usb_lld_pump+0x2e4>

080041a0 <chMsgWait>:
 80041a0:	b510      	push	{r4, lr}
 80041a2:	2320      	movs	r3, #32
 80041a4:	f383 8811 	msr	BASEPRI, r3
 80041a8:	4c0b      	ldr	r4, [pc, #44]	; (80041d8 <chMsgWait+0x38>)
 80041aa:	69a2      	ldr	r2, [r4, #24]
 80041ac:	4613      	mov	r3, r2
 80041ae:	f853 0f28 	ldr.w	r0, [r3, #40]!
 80041b2:	4298      	cmp	r0, r3
 80041b4:	d008      	beq.n	80041c8 <chMsgWait+0x28>
 80041b6:	6801      	ldr	r1, [r0, #0]
 80041b8:	6291      	str	r1, [r2, #40]	; 0x28
 80041ba:	220d      	movs	r2, #13
 80041bc:	604b      	str	r3, [r1, #4]
 80041be:	2300      	movs	r3, #0
 80041c0:	7702      	strb	r2, [r0, #28]
 80041c2:	f383 8811 	msr	BASEPRI, r3
 80041c6:	bd10      	pop	{r4, pc}
 80041c8:	200e      	movs	r0, #14
 80041ca:	f7fe fd51 	bl	8002c70 <chSchGoSleepS>
 80041ce:	69a2      	ldr	r2, [r4, #24]
 80041d0:	6a90      	ldr	r0, [r2, #40]	; 0x28
 80041d2:	f102 0328 	add.w	r3, r2, #40	; 0x28
 80041d6:	e7ee      	b.n	80041b6 <chMsgWait+0x16>
 80041d8:	20001290 	.word	0x20001290
 80041dc:	00000000 	.word	0x00000000

080041e0 <thread2.lto_priv.83>:
 80041e0:	b570      	push	{r4, r5, r6, lr}
 80041e2:	2620      	movs	r6, #32
 80041e4:	2500      	movs	r5, #0
 80041e6:	f7ff ffdb 	bl	80041a0 <chMsgWait>
 80041ea:	6b04      	ldr	r4, [r0, #48]	; 0x30
 80041ec:	f386 8811 	msr	BASEPRI, r6
 80041f0:	4621      	mov	r1, r4
 80041f2:	f7fe fc45 	bl	8002a80 <chSchWakeupS>
 80041f6:	f385 8811 	msr	BASEPRI, r5
 80041fa:	2c00      	cmp	r4, #0
 80041fc:	d1f3      	bne.n	80041e6 <thread2.lto_priv.83+0x6>
 80041fe:	bd70      	pop	{r4, r5, r6, pc}

08004200 <msg1_execute>:
 8004200:	b570      	push	{r4, r5, r6, lr}
 8004202:	4a1f      	ldr	r2, [pc, #124]	; (8004280 <msg1_execute+0x80>)
 8004204:	4b1f      	ldr	r3, [pc, #124]	; (8004284 <msg1_execute+0x84>)
 8004206:	6991      	ldr	r1, [r2, #24]
 8004208:	481f      	ldr	r0, [pc, #124]	; (8004288 <msg1_execute+0x88>)
 800420a:	688a      	ldr	r2, [r1, #8]
 800420c:	b082      	sub	sp, #8
 800420e:	3201      	adds	r2, #1
 8004210:	9100      	str	r1, [sp, #0]
 8004212:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004216:	f7fe fcf3 	bl	8002c00 <chThdCreateStatic>
 800421a:	4b1c      	ldr	r3, [pc, #112]	; (800428c <msg1_execute+0x8c>)
 800421c:	6018      	str	r0, [r3, #0]
 800421e:	f7ff ffbf 	bl	80041a0 <chMsgWait>
 8004222:	2520      	movs	r5, #32
 8004224:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8004226:	f385 8811 	msr	BASEPRI, r5
 800422a:	4631      	mov	r1, r6
 800422c:	f7fe fc28 	bl	8002a80 <chSchWakeupS>
 8004230:	2400      	movs	r4, #0
 8004232:	f384 8811 	msr	BASEPRI, r4
 8004236:	b2f0      	uxtb	r0, r6
 8004238:	f7fc fad2 	bl	80007e0 <test_emit_token>
 800423c:	f7ff ffb0 	bl	80041a0 <chMsgWait>
 8004240:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8004242:	f385 8811 	msr	BASEPRI, r5
 8004246:	4631      	mov	r1, r6
 8004248:	f7fe fc1a 	bl	8002a80 <chSchWakeupS>
 800424c:	f384 8811 	msr	BASEPRI, r4
 8004250:	b2f0      	uxtb	r0, r6
 8004252:	f7fc fac5 	bl	80007e0 <test_emit_token>
 8004256:	f7ff ffa3 	bl	80041a0 <chMsgWait>
 800425a:	6b06      	ldr	r6, [r0, #48]	; 0x30
 800425c:	f385 8811 	msr	BASEPRI, r5
 8004260:	4631      	mov	r1, r6
 8004262:	f7fe fc0d 	bl	8002a80 <chSchWakeupS>
 8004266:	f384 8811 	msr	BASEPRI, r4
 800426a:	b2f0      	uxtb	r0, r6
 800426c:	f7fc fab8 	bl	80007e0 <test_emit_token>
 8004270:	4907      	ldr	r1, [pc, #28]	; (8004290 <msg1_execute+0x90>)
 8004272:	2001      	movs	r0, #1
 8004274:	b002      	add	sp, #8
 8004276:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800427a:	f7fc ba71 	b.w	8000760 <_test_assert_sequence>
 800427e:	bf00      	nop
 8004280:	20001290 	.word	0x20001290
 8004284:	08004311 	.word	0x08004311
 8004288:	200014f0 	.word	0x200014f0
 800428c:	20001b84 	.word	0x20001b84
 8004290:	08008070 	.word	0x08008070
	...

080042a0 <chMsgSend>:
 80042a0:	4b0e      	ldr	r3, [pc, #56]	; (80042dc <chMsgSend+0x3c>)
 80042a2:	b510      	push	{r4, lr}
 80042a4:	2220      	movs	r2, #32
 80042a6:	699c      	ldr	r4, [r3, #24]
 80042a8:	f382 8811 	msr	BASEPRI, r2
 80042ac:	f100 0228 	add.w	r2, r0, #40	; 0x28
 80042b0:	6222      	str	r2, [r4, #32]
 80042b2:	6022      	str	r2, [r4, #0]
 80042b4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80042b6:	6062      	str	r2, [r4, #4]
 80042b8:	6321      	str	r1, [r4, #48]	; 0x30
 80042ba:	6014      	str	r4, [r2, #0]
 80042bc:	7f02      	ldrb	r2, [r0, #28]
 80042be:	62c4      	str	r4, [r0, #44]	; 0x2c
 80042c0:	2a0e      	cmp	r2, #14
 80042c2:	d007      	beq.n	80042d4 <chMsgSend+0x34>
 80042c4:	200c      	movs	r0, #12
 80042c6:	f7fe fcd3 	bl	8002c70 <chSchGoSleepS>
 80042ca:	6a20      	ldr	r0, [r4, #32]
 80042cc:	2300      	movs	r3, #0
 80042ce:	f383 8811 	msr	BASEPRI, r3
 80042d2:	bd10      	pop	{r4, pc}
 80042d4:	f7fc ff74 	bl	80011c0 <chSchReadyI>
 80042d8:	e7f4      	b.n	80042c4 <chMsgSend+0x24>
 80042da:	bf00      	nop
 80042dc:	20001290 	.word	0x20001290

080042e0 <msg_loop_test>:
 80042e0:	b570      	push	{r4, r5, r6, lr}
 80042e2:	4605      	mov	r5, r0
 80042e4:	f7ff fc54 	bl	8003b90 <test_wait_tick>
 80042e8:	f7fd fa52 	bl	8001790 <test_start_timer.constprop.3>
 80042ec:	4e07      	ldr	r6, [pc, #28]	; (800430c <msg_loop_test+0x2c>)
 80042ee:	2400      	movs	r4, #0
 80042f0:	2101      	movs	r1, #1
 80042f2:	4628      	mov	r0, r5
 80042f4:	f7ff ffd4 	bl	80042a0 <chMsgSend>
 80042f8:	7833      	ldrb	r3, [r6, #0]
 80042fa:	3401      	adds	r4, #1
 80042fc:	2b00      	cmp	r3, #0
 80042fe:	d0f7      	beq.n	80042f0 <msg_loop_test+0x10>
 8004300:	4628      	mov	r0, r5
 8004302:	2100      	movs	r1, #0
 8004304:	f7ff ffcc 	bl	80042a0 <chMsgSend>
 8004308:	4620      	mov	r0, r4
 800430a:	bd70      	pop	{r4, r5, r6, pc}
 800430c:	20001b80 	.word	0x20001b80

08004310 <thread.lto_priv.65>:
 8004310:	b510      	push	{r4, lr}
 8004312:	2141      	movs	r1, #65	; 0x41
 8004314:	4604      	mov	r4, r0
 8004316:	f7ff ffc3 	bl	80042a0 <chMsgSend>
 800431a:	4620      	mov	r0, r4
 800431c:	2142      	movs	r1, #66	; 0x42
 800431e:	f7ff ffbf 	bl	80042a0 <chMsgSend>
 8004322:	4620      	mov	r0, r4
 8004324:	2143      	movs	r1, #67	; 0x43
 8004326:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800432a:	f7ff bfb9 	b.w	80042a0 <chMsgSend>
 800432e:	bf00      	nop

08004330 <chMtxLockS>:
 8004330:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004332:	4a36      	ldr	r2, [pc, #216]	; (800440c <chMtxLockS+0xdc>)
 8004334:	6883      	ldr	r3, [r0, #8]
 8004336:	6995      	ldr	r5, [r2, #24]
 8004338:	2b00      	cmp	r3, #0
 800433a:	d03f      	beq.n	80043bc <chMtxLockS+0x8c>
 800433c:	68a9      	ldr	r1, [r5, #8]
 800433e:	689a      	ldr	r2, [r3, #8]
 8004340:	4291      	cmp	r1, r2
 8004342:	4604      	mov	r4, r0
 8004344:	d906      	bls.n	8004354 <chMtxLockS+0x24>
 8004346:	7f1a      	ldrb	r2, [r3, #28]
 8004348:	6099      	str	r1, [r3, #8]
 800434a:	2a06      	cmp	r2, #6
 800434c:	d03b      	beq.n	80043c6 <chMtxLockS+0x96>
 800434e:	2a07      	cmp	r2, #7
 8004350:	d015      	beq.n	800437e <chMtxLockS+0x4e>
 8004352:	b342      	cbz	r2, 80043a6 <chMtxLockS+0x76>
 8004354:	4626      	mov	r6, r4
 8004356:	4623      	mov	r3, r4
 8004358:	e003      	b.n	8004362 <chMtxLockS+0x32>
 800435a:	6899      	ldr	r1, [r3, #8]
 800435c:	68aa      	ldr	r2, [r5, #8]
 800435e:	4291      	cmp	r1, r2
 8004360:	d32a      	bcc.n	80043b8 <chMtxLockS+0x88>
 8004362:	681b      	ldr	r3, [r3, #0]
 8004364:	429c      	cmp	r4, r3
 8004366:	d1f8      	bne.n	800435a <chMtxLockS+0x2a>
 8004368:	6873      	ldr	r3, [r6, #4]
 800436a:	2006      	movs	r0, #6
 800436c:	e9c5 6300 	strd	r6, r3, [r5]
 8004370:	601d      	str	r5, [r3, #0]
 8004372:	6075      	str	r5, [r6, #4]
 8004374:	622c      	str	r4, [r5, #32]
 8004376:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800437a:	f7fe bc79 	b.w	8002c70 <chSchGoSleepS>
 800437e:	e9d3 0200 	ldrd	r0, r2, [r3]
 8004382:	6010      	str	r0, [r2, #0]
 8004384:	6a1e      	ldr	r6, [r3, #32]
 8004386:	6818      	ldr	r0, [r3, #0]
 8004388:	6042      	str	r2, [r0, #4]
 800438a:	4632      	mov	r2, r6
 800438c:	e002      	b.n	8004394 <chMtxLockS+0x64>
 800438e:	6890      	ldr	r0, [r2, #8]
 8004390:	4288      	cmp	r0, r1
 8004392:	d332      	bcc.n	80043fa <chMtxLockS+0xca>
 8004394:	6812      	ldr	r2, [r2, #0]
 8004396:	4296      	cmp	r6, r2
 8004398:	d1f9      	bne.n	800438e <chMtxLockS+0x5e>
 800439a:	6872      	ldr	r2, [r6, #4]
 800439c:	e9c3 6200 	strd	r6, r2, [r3]
 80043a0:	6013      	str	r3, [r2, #0]
 80043a2:	6073      	str	r3, [r6, #4]
 80043a4:	e7d6      	b.n	8004354 <chMtxLockS+0x24>
 80043a6:	e9d3 1200 	ldrd	r1, r2, [r3]
 80043aa:	6011      	str	r1, [r2, #0]
 80043ac:	6819      	ldr	r1, [r3, #0]
 80043ae:	4618      	mov	r0, r3
 80043b0:	604a      	str	r2, [r1, #4]
 80043b2:	f7fc ff05 	bl	80011c0 <chSchReadyI>
 80043b6:	e7cd      	b.n	8004354 <chMtxLockS+0x24>
 80043b8:	461e      	mov	r6, r3
 80043ba:	e7d5      	b.n	8004368 <chMtxLockS+0x38>
 80043bc:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80043be:	e9c0 5302 	strd	r5, r3, [r0, #8]
 80043c2:	63a8      	str	r0, [r5, #56]	; 0x38
 80043c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80043c6:	e9d3 0200 	ldrd	r0, r2, [r3]
 80043ca:	6010      	str	r0, [r2, #0]
 80043cc:	6a1e      	ldr	r6, [r3, #32]
 80043ce:	6818      	ldr	r0, [r3, #0]
 80043d0:	4637      	mov	r7, r6
 80043d2:	6042      	str	r2, [r0, #4]
 80043d4:	4632      	mov	r2, r6
 80043d6:	e002      	b.n	80043de <chMtxLockS+0xae>
 80043d8:	6890      	ldr	r0, [r2, #8]
 80043da:	4288      	cmp	r0, r1
 80043dc:	d314      	bcc.n	8004408 <chMtxLockS+0xd8>
 80043de:	6812      	ldr	r2, [r2, #0]
 80043e0:	4296      	cmp	r6, r2
 80043e2:	d1f9      	bne.n	80043d8 <chMtxLockS+0xa8>
 80043e4:	687a      	ldr	r2, [r7, #4]
 80043e6:	68a9      	ldr	r1, [r5, #8]
 80043e8:	e9c3 7200 	strd	r7, r2, [r3]
 80043ec:	6013      	str	r3, [r2, #0]
 80043ee:	607b      	str	r3, [r7, #4]
 80043f0:	68b3      	ldr	r3, [r6, #8]
 80043f2:	689a      	ldr	r2, [r3, #8]
 80043f4:	428a      	cmp	r2, r1
 80043f6:	d3a6      	bcc.n	8004346 <chMtxLockS+0x16>
 80043f8:	e7ac      	b.n	8004354 <chMtxLockS+0x24>
 80043fa:	4616      	mov	r6, r2
 80043fc:	6872      	ldr	r2, [r6, #4]
 80043fe:	e9c3 6200 	strd	r6, r2, [r3]
 8004402:	6013      	str	r3, [r2, #0]
 8004404:	6073      	str	r3, [r6, #4]
 8004406:	e7a5      	b.n	8004354 <chMtxLockS+0x24>
 8004408:	4617      	mov	r7, r2
 800440a:	e7eb      	b.n	80043e4 <chMtxLockS+0xb4>
 800440c:	20001290 	.word	0x20001290

08004410 <chMtxLock>:
 8004410:	b508      	push	{r3, lr}
 8004412:	2320      	movs	r3, #32
 8004414:	f383 8811 	msr	BASEPRI, r3
 8004418:	f7ff ff8a 	bl	8004330 <chMtxLockS>
 800441c:	2300      	movs	r3, #0
 800441e:	f383 8811 	msr	BASEPRI, r3
 8004422:	bd08      	pop	{r3, pc}
	...

08004430 <bmk12_execute>:
 8004430:	b570      	push	{r4, r5, r6, lr}
 8004432:	f7ff fbad 	bl	8003b90 <test_wait_tick>
 8004436:	f7fd f9ab 	bl	8001790 <test_start_timer.constprop.3>
 800443a:	4e15      	ldr	r6, [pc, #84]	; (8004490 <bmk12_execute+0x60>)
 800443c:	4c15      	ldr	r4, [pc, #84]	; (8004494 <bmk12_execute+0x64>)
 800443e:	2500      	movs	r5, #0
 8004440:	4620      	mov	r0, r4
 8004442:	f7ff ffe5 	bl	8004410 <chMtxLock>
 8004446:	4620      	mov	r0, r4
 8004448:	f7fe fb8a 	bl	8002b60 <chMtxUnlock>
 800444c:	4620      	mov	r0, r4
 800444e:	f7ff ffdf 	bl	8004410 <chMtxLock>
 8004452:	4620      	mov	r0, r4
 8004454:	f7fe fb84 	bl	8002b60 <chMtxUnlock>
 8004458:	4620      	mov	r0, r4
 800445a:	f7ff ffd9 	bl	8004410 <chMtxLock>
 800445e:	4620      	mov	r0, r4
 8004460:	f7fe fb7e 	bl	8002b60 <chMtxUnlock>
 8004464:	4620      	mov	r0, r4
 8004466:	f7ff ffd3 	bl	8004410 <chMtxLock>
 800446a:	4620      	mov	r0, r4
 800446c:	f7fe fb78 	bl	8002b60 <chMtxUnlock>
 8004470:	7833      	ldrb	r3, [r6, #0]
 8004472:	3501      	adds	r5, #1
 8004474:	2b00      	cmp	r3, #0
 8004476:	d0e3      	beq.n	8004440 <bmk12_execute+0x10>
 8004478:	4807      	ldr	r0, [pc, #28]	; (8004498 <bmk12_execute+0x68>)
 800447a:	f7fc fa09 	bl	8000890 <test_print>
 800447e:	00a8      	lsls	r0, r5, #2
 8004480:	f7fc f90e 	bl	80006a0 <test_printn>
 8004484:	4805      	ldr	r0, [pc, #20]	; (800449c <bmk12_execute+0x6c>)
 8004486:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800448a:	f7fc b9e1 	b.w	8000850 <test_println>
 800448e:	bf00      	nop
 8004490:	20001b80 	.word	0x20001b80
 8004494:	200014cc 	.word	0x200014cc
 8004498:	08007b50 	.word	0x08007b50
 800449c:	08007b80 	.word	0x08007b80

080044a0 <thread11>:
 80044a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044a2:	4607      	mov	r7, r0
 80044a4:	481b      	ldr	r0, [pc, #108]	; (8004514 <thread11+0x74>)
 80044a6:	f7ff ffb3 	bl	8004410 <chMtxLock>
 80044aa:	481b      	ldr	r0, [pc, #108]	; (8004518 <thread11+0x78>)
 80044ac:	f7ff ffb0 	bl	8004410 <chMtxLock>
 80044b0:	2320      	movs	r3, #32
 80044b2:	f383 8811 	msr	BASEPRI, r3
 80044b6:	4d19      	ldr	r5, [pc, #100]	; (800451c <thread11+0x7c>)
 80044b8:	69ab      	ldr	r3, [r5, #24]
 80044ba:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 80044bc:	4630      	mov	r0, r6
 80044be:	f7fd f827 	bl	8001510 <chMtxUnlockS>
 80044c2:	4b17      	ldr	r3, [pc, #92]	; (8004520 <thread11+0x80>)
 80044c4:	69ac      	ldr	r4, [r5, #24]
 80044c6:	4618      	mov	r0, r3
 80044c8:	6223      	str	r3, [r4, #32]
 80044ca:	e003      	b.n	80044d4 <thread11+0x34>
 80044cc:	6899      	ldr	r1, [r3, #8]
 80044ce:	68a2      	ldr	r2, [r4, #8]
 80044d0:	4291      	cmp	r1, r2
 80044d2:	d302      	bcc.n	80044da <thread11+0x3a>
 80044d4:	681b      	ldr	r3, [r3, #0]
 80044d6:	4283      	cmp	r3, r0
 80044d8:	d1f8      	bne.n	80044cc <thread11+0x2c>
 80044da:	685a      	ldr	r2, [r3, #4]
 80044dc:	2007      	movs	r0, #7
 80044de:	e9c4 3200 	strd	r3, r2, [r4]
 80044e2:	6014      	str	r4, [r2, #0]
 80044e4:	605c      	str	r4, [r3, #4]
 80044e6:	f7fe fbc3 	bl	8002c70 <chSchGoSleepS>
 80044ea:	69ab      	ldr	r3, [r5, #24]
 80044ec:	6a1b      	ldr	r3, [r3, #32]
 80044ee:	3301      	adds	r3, #1
 80044f0:	d002      	beq.n	80044f8 <thread11+0x58>
 80044f2:	4630      	mov	r0, r6
 80044f4:	f7ff ff1c 	bl	8004330 <chMtxLockS>
 80044f8:	2300      	movs	r3, #0
 80044fa:	f383 8811 	msr	BASEPRI, r3
 80044fe:	7838      	ldrb	r0, [r7, #0]
 8004500:	f7fc f96e 	bl	80007e0 <test_emit_token>
 8004504:	4804      	ldr	r0, [pc, #16]	; (8004518 <thread11+0x78>)
 8004506:	f7fe fb2b 	bl	8002b60 <chMtxUnlock>
 800450a:	4802      	ldr	r0, [pc, #8]	; (8004514 <thread11+0x74>)
 800450c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004510:	f7fe bb26 	b.w	8002b60 <chMtxUnlock>
 8004514:	20000864 	.word	0x20000864
 8004518:	20000854 	.word	0x20000854
 800451c:	20001290 	.word	0x20001290
 8004520:	20000800 	.word	0x20000800
	...

08004530 <thread10>:
 8004530:	b570      	push	{r4, r5, r6, lr}
 8004532:	4606      	mov	r6, r0
 8004534:	4816      	ldr	r0, [pc, #88]	; (8004590 <thread10+0x60>)
 8004536:	f7ff ff6b 	bl	8004410 <chMtxLock>
 800453a:	2320      	movs	r3, #32
 800453c:	f383 8811 	msr	BASEPRI, r3
 8004540:	4b14      	ldr	r3, [pc, #80]	; (8004594 <thread10+0x64>)
 8004542:	699c      	ldr	r4, [r3, #24]
 8004544:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8004546:	4628      	mov	r0, r5
 8004548:	f7fc ffe2 	bl	8001510 <chMtxUnlockS>
 800454c:	4812      	ldr	r0, [pc, #72]	; (8004598 <thread10+0x68>)
 800454e:	6220      	str	r0, [r4, #32]
 8004550:	4603      	mov	r3, r0
 8004552:	e003      	b.n	800455c <thread10+0x2c>
 8004554:	6899      	ldr	r1, [r3, #8]
 8004556:	68a2      	ldr	r2, [r4, #8]
 8004558:	4291      	cmp	r1, r2
 800455a:	d302      	bcc.n	8004562 <thread10+0x32>
 800455c:	681b      	ldr	r3, [r3, #0]
 800455e:	4283      	cmp	r3, r0
 8004560:	d1f8      	bne.n	8004554 <thread10+0x24>
 8004562:	685a      	ldr	r2, [r3, #4]
 8004564:	2007      	movs	r0, #7
 8004566:	e9c4 3200 	strd	r3, r2, [r4]
 800456a:	6014      	str	r4, [r2, #0]
 800456c:	605c      	str	r4, [r3, #4]
 800456e:	f7fe fb7f 	bl	8002c70 <chSchGoSleepS>
 8004572:	4628      	mov	r0, r5
 8004574:	f7ff fedc 	bl	8004330 <chMtxLockS>
 8004578:	2300      	movs	r3, #0
 800457a:	f383 8811 	msr	BASEPRI, r3
 800457e:	7830      	ldrb	r0, [r6, #0]
 8004580:	f7fc f92e 	bl	80007e0 <test_emit_token>
 8004584:	4802      	ldr	r0, [pc, #8]	; (8004590 <thread10+0x60>)
 8004586:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800458a:	f7fe bae9 	b.w	8002b60 <chMtxUnlock>
 800458e:	bf00      	nop
 8004590:	20000854 	.word	0x20000854
 8004594:	20001290 	.word	0x20001290
 8004598:	20000800 	.word	0x20000800
 800459c:	00000000 	.word	0x00000000

080045a0 <thread12>:
 80045a0:	b538      	push	{r3, r4, r5, lr}
 80045a2:	4c06      	ldr	r4, [pc, #24]	; (80045bc <thread12+0x1c>)
 80045a4:	4605      	mov	r5, r0
 80045a6:	4620      	mov	r0, r4
 80045a8:	f7ff ff32 	bl	8004410 <chMtxLock>
 80045ac:	7828      	ldrb	r0, [r5, #0]
 80045ae:	f7fc f917 	bl	80007e0 <test_emit_token>
 80045b2:	4620      	mov	r0, r4
 80045b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80045b8:	f7fe bad2 	b.w	8002b60 <chMtxUnlock>
 80045bc:	20000864 	.word	0x20000864

080045c0 <mtx5_execute>:
 80045c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80045c2:	4d37      	ldr	r5, [pc, #220]	; (80046a0 <mtx5_execute+0xe0>)
 80045c4:	69aa      	ldr	r2, [r5, #24]
 80045c6:	2320      	movs	r3, #32
 80045c8:	6896      	ldr	r6, [r2, #8]
 80045ca:	f383 8811 	msr	BASEPRI, r3
 80045ce:	4c35      	ldr	r4, [pc, #212]	; (80046a4 <mtx5_execute+0xe4>)
 80045d0:	68a3      	ldr	r3, [r4, #8]
 80045d2:	2b00      	cmp	r3, #0
 80045d4:	d057      	beq.n	8004686 <mtx5_execute+0xc6>
 80045d6:	2100      	movs	r1, #0
 80045d8:	2300      	movs	r3, #0
 80045da:	f383 8811 	msr	BASEPRI, r3
 80045de:	2001      	movs	r0, #1
 80045e0:	f7fc f8e6 	bl	80007b0 <_test_assert>
 80045e4:	4601      	mov	r1, r0
 80045e6:	b100      	cbz	r0, 80045ea <mtx5_execute+0x2a>
 80045e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80045ea:	2320      	movs	r3, #32
 80045ec:	f383 8811 	msr	BASEPRI, r3
 80045f0:	68a3      	ldr	r3, [r4, #8]
 80045f2:	2b00      	cmp	r3, #0
 80045f4:	d04e      	beq.n	8004694 <mtx5_execute+0xd4>
 80045f6:	2101      	movs	r1, #1
 80045f8:	2300      	movs	r3, #0
 80045fa:	f383 8811 	msr	BASEPRI, r3
 80045fe:	2002      	movs	r0, #2
 8004600:	f7fc f8d6 	bl	80007b0 <_test_assert>
 8004604:	4607      	mov	r7, r0
 8004606:	2800      	cmp	r0, #0
 8004608:	d1ee      	bne.n	80045e8 <mtx5_execute+0x28>
 800460a:	2320      	movs	r3, #32
 800460c:	f383 8811 	msr	BASEPRI, r3
 8004610:	4824      	ldr	r0, [pc, #144]	; (80046a4 <mtx5_execute+0xe4>)
 8004612:	f7fc ff7d 	bl	8001510 <chMtxUnlockS>
 8004616:	f387 8811 	msr	BASEPRI, r7
 800461a:	6821      	ldr	r1, [r4, #0]
 800461c:	1b09      	subs	r1, r1, r4
 800461e:	fab1 f181 	clz	r1, r1
 8004622:	2003      	movs	r0, #3
 8004624:	0949      	lsrs	r1, r1, #5
 8004626:	f7fc f8c3 	bl	80007b0 <_test_assert>
 800462a:	2800      	cmp	r0, #0
 800462c:	d1dc      	bne.n	80045e8 <mtx5_execute+0x28>
 800462e:	68a1      	ldr	r1, [r4, #8]
 8004630:	fab1 f181 	clz	r1, r1
 8004634:	0949      	lsrs	r1, r1, #5
 8004636:	2004      	movs	r0, #4
 8004638:	f7fc f8ba 	bl	80007b0 <_test_assert>
 800463c:	2800      	cmp	r0, #0
 800463e:	d1d3      	bne.n	80045e8 <mtx5_execute+0x28>
 8004640:	69ab      	ldr	r3, [r5, #24]
 8004642:	6899      	ldr	r1, [r3, #8]
 8004644:	1b89      	subs	r1, r1, r6
 8004646:	fab1 f181 	clz	r1, r1
 800464a:	2005      	movs	r0, #5
 800464c:	0949      	lsrs	r1, r1, #5
 800464e:	f7fc f8af 	bl	80007b0 <_test_assert>
 8004652:	2800      	cmp	r0, #0
 8004654:	d1c8      	bne.n	80045e8 <mtx5_execute+0x28>
 8004656:	4813      	ldr	r0, [pc, #76]	; (80046a4 <mtx5_execute+0xe4>)
 8004658:	f7ff feda 	bl	8004410 <chMtxLock>
 800465c:	f7fe f908 	bl	8002870 <chMtxUnlockAll>
 8004660:	6821      	ldr	r1, [r4, #0]
 8004662:	1b09      	subs	r1, r1, r4
 8004664:	fab1 f181 	clz	r1, r1
 8004668:	2006      	movs	r0, #6
 800466a:	0949      	lsrs	r1, r1, #5
 800466c:	f7fc f8a0 	bl	80007b0 <_test_assert>
 8004670:	2800      	cmp	r0, #0
 8004672:	d1b9      	bne.n	80045e8 <mtx5_execute+0x28>
 8004674:	68a1      	ldr	r1, [r4, #8]
 8004676:	fab1 f181 	clz	r1, r1
 800467a:	0949      	lsrs	r1, r1, #5
 800467c:	2007      	movs	r0, #7
 800467e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004682:	f7fc b895 	b.w	80007b0 <_test_assert>
 8004686:	69ab      	ldr	r3, [r5, #24]
 8004688:	60a3      	str	r3, [r4, #8]
 800468a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800468c:	60e2      	str	r2, [r4, #12]
 800468e:	639c      	str	r4, [r3, #56]	; 0x38
 8004690:	2101      	movs	r1, #1
 8004692:	e7a1      	b.n	80045d8 <mtx5_execute+0x18>
 8004694:	69ab      	ldr	r3, [r5, #24]
 8004696:	60a3      	str	r3, [r4, #8]
 8004698:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800469a:	60e2      	str	r2, [r4, #12]
 800469c:	639c      	str	r4, [r3, #56]	; 0x38
 800469e:	e7ab      	b.n	80045f8 <mtx5_execute+0x38>
 80046a0:	20001290 	.word	0x20001290
 80046a4:	20000854 	.word	0x20000854
	...

080046b0 <thread4a>:
 80046b0:	b510      	push	{r4, lr}
 80046b2:	4c06      	ldr	r4, [pc, #24]	; (80046cc <thread4a+0x1c>)
 80046b4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80046b8:	f7ff f96a 	bl	8003990 <chThdSleep>
 80046bc:	4620      	mov	r0, r4
 80046be:	f7ff fea7 	bl	8004410 <chMtxLock>
 80046c2:	4620      	mov	r0, r4
 80046c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80046c8:	f7fe ba4a 	b.w	8002b60 <chMtxUnlock>
 80046cc:	20000864 	.word	0x20000864

080046d0 <thread4b>:
 80046d0:	b510      	push	{r4, lr}
 80046d2:	4c06      	ldr	r4, [pc, #24]	; (80046ec <thread4b+0x1c>)
 80046d4:	f240 50dc 	movw	r0, #1500	; 0x5dc
 80046d8:	f7ff f95a 	bl	8003990 <chThdSleep>
 80046dc:	4620      	mov	r0, r4
 80046de:	f7ff fe97 	bl	8004410 <chMtxLock>
 80046e2:	4620      	mov	r0, r4
 80046e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80046e8:	f7fe ba3a 	b.w	8002b60 <chMtxUnlock>
 80046ec:	20000854 	.word	0x20000854

080046f0 <thread1.lto_priv.74>:
 80046f0:	b538      	push	{r3, r4, r5, lr}
 80046f2:	4c06      	ldr	r4, [pc, #24]	; (800470c <thread1.lto_priv.74+0x1c>)
 80046f4:	4605      	mov	r5, r0
 80046f6:	4620      	mov	r0, r4
 80046f8:	f7ff fe8a 	bl	8004410 <chMtxLock>
 80046fc:	7828      	ldrb	r0, [r5, #0]
 80046fe:	f7fc f86f 	bl	80007e0 <test_emit_token>
 8004702:	4620      	mov	r0, r4
 8004704:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004708:	f7fe ba2a 	b.w	8002b60 <chMtxUnlock>
 800470c:	20000854 	.word	0x20000854

08004710 <chHeapStatus>:
 8004710:	b570      	push	{r4, r5, r6, lr}
 8004712:	4c11      	ldr	r4, [pc, #68]	; (8004758 <chHeapStatus+0x48>)
 8004714:	2800      	cmp	r0, #0
 8004716:	bf18      	it	ne
 8004718:	4604      	movne	r4, r0
 800471a:	f104 0510 	add.w	r5, r4, #16
 800471e:	4628      	mov	r0, r5
 8004720:	460e      	mov	r6, r1
 8004722:	f7ff fe75 	bl	8004410 <chMtxLock>
 8004726:	68a3      	ldr	r3, [r4, #8]
 8004728:	b16b      	cbz	r3, 8004746 <chHeapStatus+0x36>
 800472a:	2200      	movs	r2, #0
 800472c:	4614      	mov	r4, r2
 800472e:	e9d3 3000 	ldrd	r3, r0, [r3]
 8004732:	3401      	adds	r4, #1
 8004734:	4402      	add	r2, r0
 8004736:	2b00      	cmp	r3, #0
 8004738:	d1f9      	bne.n	800472e <chHeapStatus+0x1e>
 800473a:	4628      	mov	r0, r5
 800473c:	6032      	str	r2, [r6, #0]
 800473e:	f7fe fa0f 	bl	8002b60 <chMtxUnlock>
 8004742:	4620      	mov	r0, r4
 8004744:	bd70      	pop	{r4, r5, r6, pc}
 8004746:	461a      	mov	r2, r3
 8004748:	461c      	mov	r4, r3
 800474a:	4628      	mov	r0, r5
 800474c:	6032      	str	r2, [r6, #0]
 800474e:	f7fe fa07 	bl	8002b60 <chMtxUnlock>
 8004752:	4620      	mov	r0, r4
 8004754:	bd70      	pop	{r4, r5, r6, pc}
 8004756:	bf00      	nop
 8004758:	200013e8 	.word	0x200013e8
 800475c:	00000000 	.word	0x00000000

08004760 <cmd_mem>:
 8004760:	b530      	push	{r4, r5, lr}
 8004762:	2900      	cmp	r1, #0
 8004764:	b083      	sub	sp, #12
 8004766:	dd04      	ble.n	8004772 <cmd_mem+0x12>
 8004768:	490f      	ldr	r1, [pc, #60]	; (80047a8 <cmd_mem+0x48>)
 800476a:	f7fd fa41 	bl	8001bf0 <chprintf.lto_priv.69>
 800476e:	b003      	add	sp, #12
 8004770:	bd30      	pop	{r4, r5, pc}
 8004772:	4604      	mov	r4, r0
 8004774:	a901      	add	r1, sp, #4
 8004776:	2000      	movs	r0, #0
 8004778:	f7ff ffca 	bl	8004710 <chHeapStatus>
 800477c:	4a0b      	ldr	r2, [pc, #44]	; (80047ac <cmd_mem+0x4c>)
 800477e:	4b0c      	ldr	r3, [pc, #48]	; (80047b0 <cmd_mem+0x50>)
 8004780:	6812      	ldr	r2, [r2, #0]
 8004782:	681b      	ldr	r3, [r3, #0]
 8004784:	490b      	ldr	r1, [pc, #44]	; (80047b4 <cmd_mem+0x54>)
 8004786:	1ad2      	subs	r2, r2, r3
 8004788:	4605      	mov	r5, r0
 800478a:	4620      	mov	r0, r4
 800478c:	f7fd fa30 	bl	8001bf0 <chprintf.lto_priv.69>
 8004790:	462a      	mov	r2, r5
 8004792:	4909      	ldr	r1, [pc, #36]	; (80047b8 <cmd_mem+0x58>)
 8004794:	4620      	mov	r0, r4
 8004796:	f7fd fa2b 	bl	8001bf0 <chprintf.lto_priv.69>
 800479a:	4620      	mov	r0, r4
 800479c:	9a01      	ldr	r2, [sp, #4]
 800479e:	4907      	ldr	r1, [pc, #28]	; (80047bc <cmd_mem+0x5c>)
 80047a0:	f7fd fa26 	bl	8001bf0 <chprintf.lto_priv.69>
 80047a4:	b003      	add	sp, #12
 80047a6:	bd30      	pop	{r4, r5, pc}
 80047a8:	08007e70 	.word	0x08007e70
 80047ac:	20001408 	.word	0x20001408
 80047b0:	200014dc 	.word	0x200014dc
 80047b4:	08007e80 	.word	0x08007e80
 80047b8:	08007ea0 	.word	0x08007ea0
 80047bc:	08007eb8 	.word	0x08007eb8

080047c0 <chHeapFree>:
 80047c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80047c2:	f850 5c08 	ldr.w	r5, [r0, #-8]
 80047c6:	f105 0710 	add.w	r7, r5, #16
 80047ca:	4606      	mov	r6, r0
 80047cc:	f1a0 0408 	sub.w	r4, r0, #8
 80047d0:	3508      	adds	r5, #8
 80047d2:	4638      	mov	r0, r7
 80047d4:	f7ff fe1c 	bl	8004410 <chMtxLock>
 80047d8:	462b      	mov	r3, r5
 80047da:	42ab      	cmp	r3, r5
 80047dc:	681a      	ldr	r2, [r3, #0]
 80047de:	d001      	beq.n	80047e4 <chHeapFree+0x24>
 80047e0:	42a3      	cmp	r3, r4
 80047e2:	d202      	bcs.n	80047ea <chHeapFree+0x2a>
 80047e4:	b11a      	cbz	r2, 80047ee <chHeapFree+0x2e>
 80047e6:	4294      	cmp	r4, r2
 80047e8:	d301      	bcc.n	80047ee <chHeapFree+0x2e>
 80047ea:	4613      	mov	r3, r2
 80047ec:	e7f5      	b.n	80047da <chHeapFree+0x1a>
 80047ee:	f846 2c08 	str.w	r2, [r6, #-8]
 80047f2:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80047f6:	601c      	str	r4, [r3, #0]
 80047f8:	f856 0c08 	ldr.w	r0, [r6, #-8]
 80047fc:	18b1      	adds	r1, r6, r2
 80047fe:	4281      	cmp	r1, r0
 8004800:	d00a      	beq.n	8004818 <chHeapFree+0x58>
 8004802:	6859      	ldr	r1, [r3, #4]
 8004804:	f101 0208 	add.w	r2, r1, #8
 8004808:	441a      	add	r2, r3
 800480a:	4294      	cmp	r4, r2
 800480c:	d012      	beq.n	8004834 <chHeapFree+0x74>
 800480e:	4638      	mov	r0, r7
 8004810:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004814:	f7fe b9a4 	b.w	8002b60 <chMtxUnlock>
 8004818:	6849      	ldr	r1, [r1, #4]
 800481a:	58b0      	ldr	r0, [r6, r2]
 800481c:	f846 0c08 	str.w	r0, [r6, #-8]
 8004820:	3208      	adds	r2, #8
 8004822:	440a      	add	r2, r1
 8004824:	f846 2c04 	str.w	r2, [r6, #-4]
 8004828:	6859      	ldr	r1, [r3, #4]
 800482a:	f101 0208 	add.w	r2, r1, #8
 800482e:	441a      	add	r2, r3
 8004830:	4294      	cmp	r4, r2
 8004832:	d1ec      	bne.n	800480e <chHeapFree+0x4e>
 8004834:	e956 0202 	ldrd	r0, r2, [r6, #-8]
 8004838:	3208      	adds	r2, #8
 800483a:	4411      	add	r1, r2
 800483c:	6018      	str	r0, [r3, #0]
 800483e:	6059      	str	r1, [r3, #4]
 8004840:	4638      	mov	r0, r7
 8004842:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004846:	f7fe b98b 	b.w	8002b60 <chMtxUnlock>
 800484a:	bf00      	nop
 800484c:	0000      	movs	r0, r0
	...

08004850 <chThdRelease>:
 8004850:	b430      	push	{r4, r5}
 8004852:	2120      	movs	r1, #32
 8004854:	f381 8811 	msr	BASEPRI, r1
 8004858:	7f83      	ldrb	r3, [r0, #30]
 800485a:	3b01      	subs	r3, #1
 800485c:	b2db      	uxtb	r3, r3
 800485e:	7783      	strb	r3, [r0, #30]
 8004860:	2400      	movs	r4, #0
 8004862:	f384 8811 	msr	BASEPRI, r4
 8004866:	b91b      	cbnz	r3, 8004870 <chThdRelease+0x20>
 8004868:	7f04      	ldrb	r4, [r0, #28]
 800486a:	2c0f      	cmp	r4, #15
 800486c:	4602      	mov	r2, r0
 800486e:	d001      	beq.n	8004874 <chThdRelease+0x24>
 8004870:	bc30      	pop	{r4, r5}
 8004872:	4770      	bx	lr
 8004874:	7f44      	ldrb	r4, [r0, #29]
 8004876:	f004 0403 	and.w	r4, r4, #3
 800487a:	2c01      	cmp	r4, #1
 800487c:	d00f      	beq.n	800489e <chThdRelease+0x4e>
 800487e:	2c02      	cmp	r4, #2
 8004880:	d1f6      	bne.n	8004870 <chThdRelease+0x20>
 8004882:	e9d0 0404 	ldrd	r0, r4, [r0, #16]
 8004886:	6120      	str	r0, [r4, #16]
 8004888:	6915      	ldr	r5, [r2, #16]
 800488a:	6c10      	ldr	r0, [r2, #64]	; 0x40
 800488c:	616c      	str	r4, [r5, #20]
 800488e:	f381 8811 	msr	BASEPRI, r1
 8004892:	6801      	ldr	r1, [r0, #0]
 8004894:	6011      	str	r1, [r2, #0]
 8004896:	6002      	str	r2, [r0, #0]
 8004898:	f383 8811 	msr	BASEPRI, r3
 800489c:	e7e8      	b.n	8004870 <chThdRelease+0x20>
 800489e:	e9d0 1304 	ldrd	r1, r3, [r0, #16]
 80048a2:	6119      	str	r1, [r3, #16]
 80048a4:	6902      	ldr	r2, [r0, #16]
 80048a6:	bc30      	pop	{r4, r5}
 80048a8:	6153      	str	r3, [r2, #20]
 80048aa:	f7ff bf89 	b.w	80047c0 <chHeapFree>
 80048ae:	bf00      	nop

080048b0 <chRegNextThread>:
 80048b0:	b510      	push	{r4, lr}
 80048b2:	2320      	movs	r3, #32
 80048b4:	f383 8811 	msr	BASEPRI, r3
 80048b8:	4b07      	ldr	r3, [pc, #28]	; (80048d8 <chRegNextThread+0x28>)
 80048ba:	6904      	ldr	r4, [r0, #16]
 80048bc:	429c      	cmp	r4, r3
 80048be:	bf1d      	ittte	ne
 80048c0:	7fa3      	ldrbne	r3, [r4, #30]
 80048c2:	3301      	addne	r3, #1
 80048c4:	77a3      	strbne	r3, [r4, #30]
 80048c6:	2400      	moveq	r4, #0
 80048c8:	2300      	movs	r3, #0
 80048ca:	f383 8811 	msr	BASEPRI, r3
 80048ce:	f7ff ffbf 	bl	8004850 <chThdRelease>
 80048d2:	4620      	mov	r0, r4
 80048d4:	bd10      	pop	{r4, pc}
 80048d6:	bf00      	nop
 80048d8:	20001290 	.word	0x20001290
 80048dc:	00000000 	.word	0x00000000

080048e0 <cmd_threads>:
 80048e0:	2900      	cmp	r1, #0
 80048e2:	dd02      	ble.n	80048ea <cmd_threads+0xa>
 80048e4:	4916      	ldr	r1, [pc, #88]	; (8004940 <cmd_threads+0x60>)
 80048e6:	f7fd b983 	b.w	8001bf0 <chprintf.lto_priv.69>
 80048ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 80048ec:	4915      	ldr	r1, [pc, #84]	; (8004944 <cmd_threads+0x64>)
 80048ee:	b085      	sub	sp, #20
 80048f0:	4605      	mov	r5, r0
 80048f2:	f7fd f97d 	bl	8001bf0 <chprintf.lto_priv.69>
 80048f6:	2320      	movs	r3, #32
 80048f8:	f383 8811 	msr	BASEPRI, r3
 80048fc:	4b12      	ldr	r3, [pc, #72]	; (8004948 <cmd_threads+0x68>)
 80048fe:	691c      	ldr	r4, [r3, #16]
 8004900:	7fa3      	ldrb	r3, [r4, #30]
 8004902:	3301      	adds	r3, #1
 8004904:	77a3      	strb	r3, [r4, #30]
 8004906:	2300      	movs	r3, #0
 8004908:	f383 8811 	msr	BASEPRI, r3
 800490c:	4f0f      	ldr	r7, [pc, #60]	; (800494c <cmd_threads+0x6c>)
 800490e:	4e10      	ldr	r6, [pc, #64]	; (8004950 <cmd_threads+0x70>)
 8004910:	7f22      	ldrb	r2, [r4, #28]
 8004912:	68e3      	ldr	r3, [r4, #12]
 8004914:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8004918:	9202      	str	r2, [sp, #8]
 800491a:	7fa2      	ldrb	r2, [r4, #30]
 800491c:	3a01      	subs	r2, #1
 800491e:	9201      	str	r2, [sp, #4]
 8004920:	68a2      	ldr	r2, [r4, #8]
 8004922:	9200      	str	r2, [sp, #0]
 8004924:	4631      	mov	r1, r6
 8004926:	4622      	mov	r2, r4
 8004928:	4628      	mov	r0, r5
 800492a:	f7fd f961 	bl	8001bf0 <chprintf.lto_priv.69>
 800492e:	4620      	mov	r0, r4
 8004930:	f7ff ffbe 	bl	80048b0 <chRegNextThread>
 8004934:	4604      	mov	r4, r0
 8004936:	2800      	cmp	r0, #0
 8004938:	d1ea      	bne.n	8004910 <cmd_threads+0x30>
 800493a:	b005      	add	sp, #20
 800493c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800493e:	bf00      	nop
 8004940:	08007f20 	.word	0x08007f20
 8004944:	08007f34 	.word	0x08007f34
 8004948:	20001290 	.word	0x20001290
 800494c:	080082e0 	.word	0x080082e0
 8004950:	08007f64 	.word	0x08007f64
	...

08004960 <regfind>:
 8004960:	b538      	push	{r3, r4, r5, lr}
 8004962:	4605      	mov	r5, r0
 8004964:	2320      	movs	r3, #32
 8004966:	f383 8811 	msr	BASEPRI, r3
 800496a:	4b0a      	ldr	r3, [pc, #40]	; (8004994 <regfind+0x34>)
 800496c:	691b      	ldr	r3, [r3, #16]
 800496e:	7f9a      	ldrb	r2, [r3, #30]
 8004970:	3201      	adds	r2, #1
 8004972:	779a      	strb	r2, [r3, #30]
 8004974:	2400      	movs	r4, #0
 8004976:	f384 8811 	msr	BASEPRI, r4
 800497a:	4618      	mov	r0, r3
 800497c:	42ab      	cmp	r3, r5
 800497e:	bf08      	it	eq
 8004980:	f044 0401 	orreq.w	r4, r4, #1
 8004984:	f7ff ff94 	bl	80048b0 <chRegNextThread>
 8004988:	4603      	mov	r3, r0
 800498a:	2800      	cmp	r0, #0
 800498c:	d1f5      	bne.n	800497a <regfind+0x1a>
 800498e:	4620      	mov	r0, r4
 8004990:	bd38      	pop	{r3, r4, r5, pc}
 8004992:	bf00      	nop
 8004994:	20001290 	.word	0x20001290
	...

080049a0 <chHeapAlloc>:
 80049a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049a2:	4e20      	ldr	r6, [pc, #128]	; (8004a24 <chHeapAlloc+0x84>)
 80049a4:	2800      	cmp	r0, #0
 80049a6:	bf18      	it	ne
 80049a8:	4606      	movne	r6, r0
 80049aa:	f106 0710 	add.w	r7, r6, #16
 80049ae:	3107      	adds	r1, #7
 80049b0:	4638      	mov	r0, r7
 80049b2:	f021 0507 	bic.w	r5, r1, #7
 80049b6:	f106 0408 	add.w	r4, r6, #8
 80049ba:	f7ff fd29 	bl	8004410 <chMtxLock>
 80049be:	e003      	b.n	80049c8 <chHeapAlloc+0x28>
 80049c0:	6843      	ldr	r3, [r0, #4]
 80049c2:	42ab      	cmp	r3, r5
 80049c4:	d212      	bcs.n	80049ec <chHeapAlloc+0x4c>
 80049c6:	4604      	mov	r4, r0
 80049c8:	6820      	ldr	r0, [r4, #0]
 80049ca:	2800      	cmp	r0, #0
 80049cc:	d1f8      	bne.n	80049c0 <chHeapAlloc+0x20>
 80049ce:	4638      	mov	r0, r7
 80049d0:	f7fe f8c6 	bl	8002b60 <chMtxUnlock>
 80049d4:	6833      	ldr	r3, [r6, #0]
 80049d6:	b313      	cbz	r3, 8004a1e <chHeapAlloc+0x7e>
 80049d8:	f105 0008 	add.w	r0, r5, #8
 80049dc:	4798      	blx	r3
 80049de:	b1f0      	cbz	r0, 8004a1e <chHeapAlloc+0x7e>
 80049e0:	e9c0 6500 	strd	r6, r5, [r0]
 80049e4:	f100 0408 	add.w	r4, r0, #8
 80049e8:	4620      	mov	r0, r4
 80049ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80049ec:	f105 0208 	add.w	r2, r5, #8
 80049f0:	4293      	cmp	r3, r2
 80049f2:	6801      	ldr	r1, [r0, #0]
 80049f4:	d208      	bcs.n	8004a08 <chHeapAlloc+0x68>
 80049f6:	6021      	str	r1, [r4, #0]
 80049f8:	4604      	mov	r4, r0
 80049fa:	4638      	mov	r0, r7
 80049fc:	f844 6b08 	str.w	r6, [r4], #8
 8004a00:	f7fe f8ae 	bl	8002b60 <chMtxUnlock>
 8004a04:	4620      	mov	r0, r4
 8004a06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004a08:	eb00 0c02 	add.w	ip, r0, r2
 8004a0c:	1b5b      	subs	r3, r3, r5
 8004a0e:	3b08      	subs	r3, #8
 8004a10:	5081      	str	r1, [r0, r2]
 8004a12:	f8cc 3004 	str.w	r3, [ip, #4]
 8004a16:	f8c4 c000 	str.w	ip, [r4]
 8004a1a:	6045      	str	r5, [r0, #4]
 8004a1c:	e7ec      	b.n	80049f8 <chHeapAlloc+0x58>
 8004a1e:	2400      	movs	r4, #0
 8004a20:	e7e2      	b.n	80049e8 <chHeapAlloc+0x48>
 8004a22:	bf00      	nop
 8004a24:	200013e8 	.word	0x200013e8
	...

08004a30 <heap1_execute>:
 8004a30:	b570      	push	{r4, r5, r6, lr}
 8004a32:	b082      	sub	sp, #8
 8004a34:	4669      	mov	r1, sp
 8004a36:	2000      	movs	r0, #0
 8004a38:	f7ff fe6a 	bl	8004710 <chHeapStatus>
 8004a3c:	2110      	movs	r1, #16
 8004a3e:	2000      	movs	r0, #0
 8004a40:	f7ff ffae 	bl	80049a0 <chHeapAlloc>
 8004a44:	1c01      	adds	r1, r0, #0
 8004a46:	4605      	mov	r5, r0
 8004a48:	bf18      	it	ne
 8004a4a:	2101      	movne	r1, #1
 8004a4c:	2001      	movs	r0, #1
 8004a4e:	f7fb feaf 	bl	80007b0 <_test_assert>
 8004a52:	b108      	cbz	r0, 8004a58 <heap1_execute+0x28>
 8004a54:	b002      	add	sp, #8
 8004a56:	bd70      	pop	{r4, r5, r6, pc}
 8004a58:	4604      	mov	r4, r0
 8004a5a:	4628      	mov	r0, r5
 8004a5c:	f7ff feb0 	bl	80047c0 <chHeapFree>
 8004a60:	f06f 01ff 	mvn.w	r1, #255	; 0xff
 8004a64:	4620      	mov	r0, r4
 8004a66:	f7ff ff9b 	bl	80049a0 <chHeapAlloc>
 8004a6a:	fab0 f180 	clz	r1, r0
 8004a6e:	0949      	lsrs	r1, r1, #5
 8004a70:	2002      	movs	r0, #2
 8004a72:	f7fb fe9d 	bl	80007b0 <_test_assert>
 8004a76:	2800      	cmp	r0, #0
 8004a78:	d1ec      	bne.n	8004a54 <heap1_execute+0x24>
 8004a7a:	4669      	mov	r1, sp
 8004a7c:	487c      	ldr	r0, [pc, #496]	; (8004c70 <heap1_execute+0x240>)
 8004a7e:	f7ff fe47 	bl	8004710 <chHeapStatus>
 8004a82:	2110      	movs	r1, #16
 8004a84:	487a      	ldr	r0, [pc, #488]	; (8004c70 <heap1_execute+0x240>)
 8004a86:	f7ff ff8b 	bl	80049a0 <chHeapAlloc>
 8004a8a:	2110      	movs	r1, #16
 8004a8c:	4606      	mov	r6, r0
 8004a8e:	4878      	ldr	r0, [pc, #480]	; (8004c70 <heap1_execute+0x240>)
 8004a90:	f7ff ff86 	bl	80049a0 <chHeapAlloc>
 8004a94:	2110      	movs	r1, #16
 8004a96:	4605      	mov	r5, r0
 8004a98:	4875      	ldr	r0, [pc, #468]	; (8004c70 <heap1_execute+0x240>)
 8004a9a:	f7ff ff81 	bl	80049a0 <chHeapAlloc>
 8004a9e:	4604      	mov	r4, r0
 8004aa0:	4630      	mov	r0, r6
 8004aa2:	f7ff fe8d 	bl	80047c0 <chHeapFree>
 8004aa6:	4628      	mov	r0, r5
 8004aa8:	f7ff fe8a 	bl	80047c0 <chHeapFree>
 8004aac:	4620      	mov	r0, r4
 8004aae:	f7ff fe87 	bl	80047c0 <chHeapFree>
 8004ab2:	a901      	add	r1, sp, #4
 8004ab4:	486e      	ldr	r0, [pc, #440]	; (8004c70 <heap1_execute+0x240>)
 8004ab6:	f7ff fe2b 	bl	8004710 <chHeapStatus>
 8004aba:	f1a0 0101 	sub.w	r1, r0, #1
 8004abe:	fab1 f181 	clz	r1, r1
 8004ac2:	0949      	lsrs	r1, r1, #5
 8004ac4:	2003      	movs	r0, #3
 8004ac6:	f7fb fe73 	bl	80007b0 <_test_assert>
 8004aca:	2800      	cmp	r0, #0
 8004acc:	d1c2      	bne.n	8004a54 <heap1_execute+0x24>
 8004ace:	2110      	movs	r1, #16
 8004ad0:	4867      	ldr	r0, [pc, #412]	; (8004c70 <heap1_execute+0x240>)
 8004ad2:	f7ff ff65 	bl	80049a0 <chHeapAlloc>
 8004ad6:	2110      	movs	r1, #16
 8004ad8:	4604      	mov	r4, r0
 8004ada:	4865      	ldr	r0, [pc, #404]	; (8004c70 <heap1_execute+0x240>)
 8004adc:	f7ff ff60 	bl	80049a0 <chHeapAlloc>
 8004ae0:	2110      	movs	r1, #16
 8004ae2:	4605      	mov	r5, r0
 8004ae4:	4862      	ldr	r0, [pc, #392]	; (8004c70 <heap1_execute+0x240>)
 8004ae6:	f7ff ff5b 	bl	80049a0 <chHeapAlloc>
 8004aea:	f7ff fe69 	bl	80047c0 <chHeapFree>
 8004aee:	4628      	mov	r0, r5
 8004af0:	f7ff fe66 	bl	80047c0 <chHeapFree>
 8004af4:	4620      	mov	r0, r4
 8004af6:	f7ff fe63 	bl	80047c0 <chHeapFree>
 8004afa:	a901      	add	r1, sp, #4
 8004afc:	485c      	ldr	r0, [pc, #368]	; (8004c70 <heap1_execute+0x240>)
 8004afe:	f7ff fe07 	bl	8004710 <chHeapStatus>
 8004b02:	f1a0 0101 	sub.w	r1, r0, #1
 8004b06:	fab1 f181 	clz	r1, r1
 8004b0a:	0949      	lsrs	r1, r1, #5
 8004b0c:	2004      	movs	r0, #4
 8004b0e:	f7fb fe4f 	bl	80007b0 <_test_assert>
 8004b12:	2800      	cmp	r0, #0
 8004b14:	d19e      	bne.n	8004a54 <heap1_execute+0x24>
 8004b16:	2111      	movs	r1, #17
 8004b18:	4855      	ldr	r0, [pc, #340]	; (8004c70 <heap1_execute+0x240>)
 8004b1a:	f7ff ff41 	bl	80049a0 <chHeapAlloc>
 8004b1e:	2110      	movs	r1, #16
 8004b20:	4604      	mov	r4, r0
 8004b22:	4853      	ldr	r0, [pc, #332]	; (8004c70 <heap1_execute+0x240>)
 8004b24:	f7ff ff3c 	bl	80049a0 <chHeapAlloc>
 8004b28:	4605      	mov	r5, r0
 8004b2a:	4620      	mov	r0, r4
 8004b2c:	f7ff fe48 	bl	80047c0 <chHeapFree>
 8004b30:	a901      	add	r1, sp, #4
 8004b32:	484f      	ldr	r0, [pc, #316]	; (8004c70 <heap1_execute+0x240>)
 8004b34:	f7ff fdec 	bl	8004710 <chHeapStatus>
 8004b38:	f1a0 0102 	sub.w	r1, r0, #2
 8004b3c:	fab1 f181 	clz	r1, r1
 8004b40:	0949      	lsrs	r1, r1, #5
 8004b42:	2005      	movs	r0, #5
 8004b44:	f7fb fe34 	bl	80007b0 <_test_assert>
 8004b48:	2800      	cmp	r0, #0
 8004b4a:	d183      	bne.n	8004a54 <heap1_execute+0x24>
 8004b4c:	2110      	movs	r1, #16
 8004b4e:	4848      	ldr	r0, [pc, #288]	; (8004c70 <heap1_execute+0x240>)
 8004b50:	f7ff ff26 	bl	80049a0 <chHeapAlloc>
 8004b54:	a901      	add	r1, sp, #4
 8004b56:	4604      	mov	r4, r0
 8004b58:	4845      	ldr	r0, [pc, #276]	; (8004c70 <heap1_execute+0x240>)
 8004b5a:	f7ff fdd9 	bl	8004710 <chHeapStatus>
 8004b5e:	2801      	cmp	r0, #1
 8004b60:	f000 8083 	beq.w	8004c6a <heap1_execute+0x23a>
 8004b64:	a901      	add	r1, sp, #4
 8004b66:	4842      	ldr	r0, [pc, #264]	; (8004c70 <heap1_execute+0x240>)
 8004b68:	f7ff fdd2 	bl	8004710 <chHeapStatus>
 8004b6c:	f1a0 0102 	sub.w	r1, r0, #2
 8004b70:	fab1 f181 	clz	r1, r1
 8004b74:	0949      	lsrs	r1, r1, #5
 8004b76:	2006      	movs	r0, #6
 8004b78:	f7fb fe1a 	bl	80007b0 <_test_assert>
 8004b7c:	2800      	cmp	r0, #0
 8004b7e:	f47f af69 	bne.w	8004a54 <heap1_execute+0x24>
 8004b82:	4628      	mov	r0, r5
 8004b84:	f7ff fe1c 	bl	80047c0 <chHeapFree>
 8004b88:	4620      	mov	r0, r4
 8004b8a:	f7ff fe19 	bl	80047c0 <chHeapFree>
 8004b8e:	a901      	add	r1, sp, #4
 8004b90:	4837      	ldr	r0, [pc, #220]	; (8004c70 <heap1_execute+0x240>)
 8004b92:	f7ff fdbd 	bl	8004710 <chHeapStatus>
 8004b96:	f1a0 0101 	sub.w	r1, r0, #1
 8004b9a:	fab1 f181 	clz	r1, r1
 8004b9e:	0949      	lsrs	r1, r1, #5
 8004ba0:	2007      	movs	r0, #7
 8004ba2:	f7fb fe05 	bl	80007b0 <_test_assert>
 8004ba6:	2800      	cmp	r0, #0
 8004ba8:	f47f af54 	bne.w	8004a54 <heap1_execute+0x24>
 8004bac:	2110      	movs	r1, #16
 8004bae:	4830      	ldr	r0, [pc, #192]	; (8004c70 <heap1_execute+0x240>)
 8004bb0:	f7ff fef6 	bl	80049a0 <chHeapAlloc>
 8004bb4:	2110      	movs	r1, #16
 8004bb6:	4605      	mov	r5, r0
 8004bb8:	482d      	ldr	r0, [pc, #180]	; (8004c70 <heap1_execute+0x240>)
 8004bba:	f7ff fef1 	bl	80049a0 <chHeapAlloc>
 8004bbe:	4604      	mov	r4, r0
 8004bc0:	4628      	mov	r0, r5
 8004bc2:	f7ff fdfd 	bl	80047c0 <chHeapFree>
 8004bc6:	a901      	add	r1, sp, #4
 8004bc8:	4829      	ldr	r0, [pc, #164]	; (8004c70 <heap1_execute+0x240>)
 8004bca:	f7ff fda1 	bl	8004710 <chHeapStatus>
 8004bce:	1e85      	subs	r5, r0, #2
 8004bd0:	4269      	negs	r1, r5
 8004bd2:	4169      	adcs	r1, r5
 8004bd4:	2008      	movs	r0, #8
 8004bd6:	f7fb fdeb 	bl	80007b0 <_test_assert>
 8004bda:	2800      	cmp	r0, #0
 8004bdc:	f47f af3a 	bne.w	8004a54 <heap1_execute+0x24>
 8004be0:	2120      	movs	r1, #32
 8004be2:	4823      	ldr	r0, [pc, #140]	; (8004c70 <heap1_execute+0x240>)
 8004be4:	f7ff fedc 	bl	80049a0 <chHeapAlloc>
 8004be8:	f7ff fdea 	bl	80047c0 <chHeapFree>
 8004bec:	4620      	mov	r0, r4
 8004bee:	f7ff fde7 	bl	80047c0 <chHeapFree>
 8004bf2:	a901      	add	r1, sp, #4
 8004bf4:	481e      	ldr	r0, [pc, #120]	; (8004c70 <heap1_execute+0x240>)
 8004bf6:	f7ff fd8b 	bl	8004710 <chHeapStatus>
 8004bfa:	3801      	subs	r0, #1
 8004bfc:	4241      	negs	r1, r0
 8004bfe:	4141      	adcs	r1, r0
 8004c00:	2009      	movs	r0, #9
 8004c02:	f7fb fdd5 	bl	80007b0 <_test_assert>
 8004c06:	2800      	cmp	r0, #0
 8004c08:	f47f af24 	bne.w	8004a54 <heap1_execute+0x24>
 8004c0c:	a901      	add	r1, sp, #4
 8004c0e:	4818      	ldr	r0, [pc, #96]	; (8004c70 <heap1_execute+0x240>)
 8004c10:	f7ff fd7e 	bl	8004710 <chHeapStatus>
 8004c14:	9901      	ldr	r1, [sp, #4]
 8004c16:	4816      	ldr	r0, [pc, #88]	; (8004c70 <heap1_execute+0x240>)
 8004c18:	f7ff fec2 	bl	80049a0 <chHeapAlloc>
 8004c1c:	a901      	add	r1, sp, #4
 8004c1e:	4604      	mov	r4, r0
 8004c20:	4813      	ldr	r0, [pc, #76]	; (8004c70 <heap1_execute+0x240>)
 8004c22:	f7ff fd75 	bl	8004710 <chHeapStatus>
 8004c26:	fab0 f180 	clz	r1, r0
 8004c2a:	0949      	lsrs	r1, r1, #5
 8004c2c:	200a      	movs	r0, #10
 8004c2e:	f7fb fdbf 	bl	80007b0 <_test_assert>
 8004c32:	2800      	cmp	r0, #0
 8004c34:	f47f af0e 	bne.w	8004a54 <heap1_execute+0x24>
 8004c38:	4620      	mov	r0, r4
 8004c3a:	f7ff fdc1 	bl	80047c0 <chHeapFree>
 8004c3e:	a901      	add	r1, sp, #4
 8004c40:	480b      	ldr	r0, [pc, #44]	; (8004c70 <heap1_execute+0x240>)
 8004c42:	f7ff fd65 	bl	8004710 <chHeapStatus>
 8004c46:	1e42      	subs	r2, r0, #1
 8004c48:	4251      	negs	r1, r2
 8004c4a:	4151      	adcs	r1, r2
 8004c4c:	200b      	movs	r0, #11
 8004c4e:	f7fb fdaf 	bl	80007b0 <_test_assert>
 8004c52:	2800      	cmp	r0, #0
 8004c54:	f47f aefe 	bne.w	8004a54 <heap1_execute+0x24>
 8004c58:	e9dd 3100 	ldrd	r3, r1, [sp]
 8004c5c:	1acb      	subs	r3, r1, r3
 8004c5e:	4259      	negs	r1, r3
 8004c60:	4159      	adcs	r1, r3
 8004c62:	200c      	movs	r0, #12
 8004c64:	f7fb fda4 	bl	80007b0 <_test_assert>
 8004c68:	e6f4      	b.n	8004a54 <heap1_execute+0x24>
 8004c6a:	4601      	mov	r1, r0
 8004c6c:	e783      	b.n	8004b76 <heap1_execute+0x146>
 8004c6e:	bf00      	nop
 8004c70:	20001b60 	.word	0x20001b60
	...

08004c80 <chThdCreateFromHeap>:
 8004c80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004c82:	b083      	sub	sp, #12
 8004c84:	4616      	mov	r6, r2
 8004c86:	461f      	mov	r7, r3
 8004c88:	460d      	mov	r5, r1
 8004c8a:	f7ff fe89 	bl	80049a0 <chHeapAlloc>
 8004c8e:	b1a8      	cbz	r0, 8004cbc <chThdCreateFromHeap+0x3c>
 8004c90:	2320      	movs	r3, #32
 8004c92:	f383 8811 	msr	BASEPRI, r3
 8004c96:	9b08      	ldr	r3, [sp, #32]
 8004c98:	9300      	str	r3, [sp, #0]
 8004c9a:	4632      	mov	r2, r6
 8004c9c:	463b      	mov	r3, r7
 8004c9e:	4629      	mov	r1, r5
 8004ca0:	f7fc fa2e 	bl	8001100 <chThdCreateI>
 8004ca4:	2301      	movs	r3, #1
 8004ca6:	7743      	strb	r3, [r0, #29]
 8004ca8:	2100      	movs	r1, #0
 8004caa:	4604      	mov	r4, r0
 8004cac:	f7fd fee8 	bl	8002a80 <chSchWakeupS>
 8004cb0:	2300      	movs	r3, #0
 8004cb2:	f383 8811 	msr	BASEPRI, r3
 8004cb6:	4620      	mov	r0, r4
 8004cb8:	b003      	add	sp, #12
 8004cba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004cbc:	4604      	mov	r4, r0
 8004cbe:	e7fa      	b.n	8004cb6 <chThdCreateFromHeap+0x36>

08004cc0 <dyn3_execute>:
 8004cc0:	b510      	push	{r4, lr}
 8004cc2:	4b4a      	ldr	r3, [pc, #296]	; (8004dec <dyn3_execute+0x12c>)
 8004cc4:	494a      	ldr	r1, [pc, #296]	; (8004df0 <dyn3_execute+0x130>)
 8004cc6:	699a      	ldr	r2, [r3, #24]
 8004cc8:	484a      	ldr	r0, [pc, #296]	; (8004df4 <dyn3_execute+0x134>)
 8004cca:	6892      	ldr	r2, [r2, #8]
 8004ccc:	4b4a      	ldr	r3, [pc, #296]	; (8004df8 <dyn3_execute+0x138>)
 8004cce:	b082      	sub	sp, #8
 8004cd0:	3a01      	subs	r2, #1
 8004cd2:	9100      	str	r1, [sp, #0]
 8004cd4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004cd8:	f7ff ffd2 	bl	8004c80 <chThdCreateFromHeap>
 8004cdc:	4604      	mov	r4, r0
 8004cde:	2001      	movs	r0, #1
 8004ce0:	7fa1      	ldrb	r1, [r4, #30]
 8004ce2:	1a09      	subs	r1, r1, r0
 8004ce4:	fab1 f181 	clz	r1, r1
 8004ce8:	0949      	lsrs	r1, r1, #5
 8004cea:	f7fb fd61 	bl	80007b0 <_test_assert>
 8004cee:	b108      	cbz	r0, 8004cf4 <dyn3_execute+0x34>
 8004cf0:	b002      	add	sp, #8
 8004cf2:	bd10      	pop	{r4, pc}
 8004cf4:	2320      	movs	r3, #32
 8004cf6:	f383 8811 	msr	BASEPRI, r3
 8004cfa:	7fa3      	ldrb	r3, [r4, #30]
 8004cfc:	3301      	adds	r3, #1
 8004cfe:	77a3      	strb	r3, [r4, #30]
 8004d00:	f380 8811 	msr	BASEPRI, r0
 8004d04:	7fa1      	ldrb	r1, [r4, #30]
 8004d06:	2002      	movs	r0, #2
 8004d08:	1a09      	subs	r1, r1, r0
 8004d0a:	fab1 f181 	clz	r1, r1
 8004d0e:	0949      	lsrs	r1, r1, #5
 8004d10:	f7fb fd4e 	bl	80007b0 <_test_assert>
 8004d14:	2800      	cmp	r0, #0
 8004d16:	d1eb      	bne.n	8004cf0 <dyn3_execute+0x30>
 8004d18:	4620      	mov	r0, r4
 8004d1a:	f7ff fd99 	bl	8004850 <chThdRelease>
 8004d1e:	7fa1      	ldrb	r1, [r4, #30]
 8004d20:	f1a1 0101 	sub.w	r1, r1, #1
 8004d24:	fab1 f181 	clz	r1, r1
 8004d28:	2003      	movs	r0, #3
 8004d2a:	0949      	lsrs	r1, r1, #5
 8004d2c:	f7fb fd40 	bl	80007b0 <_test_assert>
 8004d30:	2800      	cmp	r0, #0
 8004d32:	d1dd      	bne.n	8004cf0 <dyn3_execute+0x30>
 8004d34:	4620      	mov	r0, r4
 8004d36:	f7ff fe13 	bl	8004960 <regfind>
 8004d3a:	4601      	mov	r1, r0
 8004d3c:	2004      	movs	r0, #4
 8004d3e:	f7fb fd37 	bl	80007b0 <_test_assert>
 8004d42:	2800      	cmp	r0, #0
 8004d44:	d1d4      	bne.n	8004cf0 <dyn3_execute+0x30>
 8004d46:	4620      	mov	r0, r4
 8004d48:	f7ff fe0a 	bl	8004960 <regfind>
 8004d4c:	4601      	mov	r1, r0
 8004d4e:	2005      	movs	r0, #5
 8004d50:	f7fb fd2e 	bl	80007b0 <_test_assert>
 8004d54:	2800      	cmp	r0, #0
 8004d56:	d1cb      	bne.n	8004cf0 <dyn3_execute+0x30>
 8004d58:	4620      	mov	r0, r4
 8004d5a:	f7ff fd79 	bl	8004850 <chThdRelease>
 8004d5e:	7fa1      	ldrb	r1, [r4, #30]
 8004d60:	fab1 f181 	clz	r1, r1
 8004d64:	0949      	lsrs	r1, r1, #5
 8004d66:	2006      	movs	r0, #6
 8004d68:	f7fb fd22 	bl	80007b0 <_test_assert>
 8004d6c:	2800      	cmp	r0, #0
 8004d6e:	d1bf      	bne.n	8004cf0 <dyn3_execute+0x30>
 8004d70:	7f21      	ldrb	r1, [r4, #28]
 8004d72:	fab1 f181 	clz	r1, r1
 8004d76:	0949      	lsrs	r1, r1, #5
 8004d78:	2007      	movs	r0, #7
 8004d7a:	f7fb fd19 	bl	80007b0 <_test_assert>
 8004d7e:	2800      	cmp	r0, #0
 8004d80:	d1b6      	bne.n	8004cf0 <dyn3_execute+0x30>
 8004d82:	4620      	mov	r0, r4
 8004d84:	f7ff fdec 	bl	8004960 <regfind>
 8004d88:	4601      	mov	r1, r0
 8004d8a:	2008      	movs	r0, #8
 8004d8c:	f7fb fd10 	bl	80007b0 <_test_assert>
 8004d90:	2800      	cmp	r0, #0
 8004d92:	d1ad      	bne.n	8004cf0 <dyn3_execute+0x30>
 8004d94:	4620      	mov	r0, r4
 8004d96:	f7ff fde3 	bl	8004960 <regfind>
 8004d9a:	4601      	mov	r1, r0
 8004d9c:	2009      	movs	r0, #9
 8004d9e:	f7fb fd07 	bl	80007b0 <_test_assert>
 8004da2:	2800      	cmp	r0, #0
 8004da4:	d1a4      	bne.n	8004cf0 <dyn3_execute+0x30>
 8004da6:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004daa:	f7fe fdf1 	bl	8003990 <chThdSleep>
 8004dae:	7f21      	ldrb	r1, [r4, #28]
 8004db0:	f1a1 030f 	sub.w	r3, r1, #15
 8004db4:	4259      	negs	r1, r3
 8004db6:	4159      	adcs	r1, r3
 8004db8:	200a      	movs	r0, #10
 8004dba:	f7fb fcf9 	bl	80007b0 <_test_assert>
 8004dbe:	2800      	cmp	r0, #0
 8004dc0:	d196      	bne.n	8004cf0 <dyn3_execute+0x30>
 8004dc2:	4620      	mov	r0, r4
 8004dc4:	f7ff fdcc 	bl	8004960 <regfind>
 8004dc8:	4601      	mov	r1, r0
 8004dca:	200b      	movs	r0, #11
 8004dcc:	f7fb fcf0 	bl	80007b0 <_test_assert>
 8004dd0:	2800      	cmp	r0, #0
 8004dd2:	d18d      	bne.n	8004cf0 <dyn3_execute+0x30>
 8004dd4:	4620      	mov	r0, r4
 8004dd6:	f7ff fdc3 	bl	8004960 <regfind>
 8004dda:	f080 0101 	eor.w	r1, r0, #1
 8004dde:	b2c9      	uxtb	r1, r1
 8004de0:	200c      	movs	r0, #12
 8004de2:	b002      	add	sp, #8
 8004de4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004de8:	f7fb bce2 	b.w	80007b0 <_test_assert>
 8004dec:	20001290 	.word	0x20001290
 8004df0:	08007fc0 	.word	0x08007fc0
 8004df4:	20001468 	.word	0x20001468
 8004df8:	08000841 	.word	0x08000841
 8004dfc:	00000000 	.word	0x00000000

08004e00 <chSemWait>:
 8004e00:	2320      	movs	r3, #32
 8004e02:	f383 8811 	msr	BASEPRI, r3
 8004e06:	6883      	ldr	r3, [r0, #8]
 8004e08:	3b01      	subs	r3, #1
 8004e0a:	2b00      	cmp	r3, #0
 8004e0c:	6083      	str	r3, [r0, #8]
 8004e0e:	db04      	blt.n	8004e1a <chSemWait+0x1a>
 8004e10:	2000      	movs	r0, #0
 8004e12:	2300      	movs	r3, #0
 8004e14:	f383 8811 	msr	BASEPRI, r3
 8004e18:	4770      	bx	lr
 8004e1a:	b510      	push	{r4, lr}
 8004e1c:	4c08      	ldr	r4, [pc, #32]	; (8004e40 <chSemWait+0x40>)
 8004e1e:	69a2      	ldr	r2, [r4, #24]
 8004e20:	6210      	str	r0, [r2, #32]
 8004e22:	6010      	str	r0, [r2, #0]
 8004e24:	6841      	ldr	r1, [r0, #4]
 8004e26:	6051      	str	r1, [r2, #4]
 8004e28:	4603      	mov	r3, r0
 8004e2a:	600a      	str	r2, [r1, #0]
 8004e2c:	2005      	movs	r0, #5
 8004e2e:	605a      	str	r2, [r3, #4]
 8004e30:	f7fd ff1e 	bl	8002c70 <chSchGoSleepS>
 8004e34:	69a3      	ldr	r3, [r4, #24]
 8004e36:	6a18      	ldr	r0, [r3, #32]
 8004e38:	2300      	movs	r3, #0
 8004e3a:	f383 8811 	msr	BASEPRI, r3
 8004e3e:	bd10      	pop	{r4, pc}
 8004e40:	20001290 	.word	0x20001290
	...

08004e50 <bmk11_execute>:
 8004e50:	b570      	push	{r4, r5, r6, lr}
 8004e52:	f7fe fe9d 	bl	8003b90 <test_wait_tick>
 8004e56:	f7fc fc9b 	bl	8001790 <test_start_timer.constprop.3>
 8004e5a:	4e15      	ldr	r6, [pc, #84]	; (8004eb0 <bmk11_execute+0x60>)
 8004e5c:	4c15      	ldr	r4, [pc, #84]	; (8004eb4 <bmk11_execute+0x64>)
 8004e5e:	2500      	movs	r5, #0
 8004e60:	4620      	mov	r0, r4
 8004e62:	f7ff ffcd 	bl	8004e00 <chSemWait>
 8004e66:	4620      	mov	r0, r4
 8004e68:	f7fd feaa 	bl	8002bc0 <chSemSignal>
 8004e6c:	4620      	mov	r0, r4
 8004e6e:	f7ff ffc7 	bl	8004e00 <chSemWait>
 8004e72:	4620      	mov	r0, r4
 8004e74:	f7fd fea4 	bl	8002bc0 <chSemSignal>
 8004e78:	4620      	mov	r0, r4
 8004e7a:	f7ff ffc1 	bl	8004e00 <chSemWait>
 8004e7e:	4620      	mov	r0, r4
 8004e80:	f7fd fe9e 	bl	8002bc0 <chSemSignal>
 8004e84:	4620      	mov	r0, r4
 8004e86:	f7ff ffbb 	bl	8004e00 <chSemWait>
 8004e8a:	4620      	mov	r0, r4
 8004e8c:	f7fd fe98 	bl	8002bc0 <chSemSignal>
 8004e90:	7833      	ldrb	r3, [r6, #0]
 8004e92:	3501      	adds	r5, #1
 8004e94:	2b00      	cmp	r3, #0
 8004e96:	d0e3      	beq.n	8004e60 <bmk11_execute+0x10>
 8004e98:	4807      	ldr	r0, [pc, #28]	; (8004eb8 <bmk11_execute+0x68>)
 8004e9a:	f7fb fcf9 	bl	8000890 <test_print>
 8004e9e:	00a8      	lsls	r0, r5, #2
 8004ea0:	f7fb fbfe 	bl	80006a0 <test_printn>
 8004ea4:	4805      	ldr	r0, [pc, #20]	; (8004ebc <bmk11_execute+0x6c>)
 8004ea6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004eaa:	f7fb bcd1 	b.w	8000850 <test_println>
 8004eae:	bf00      	nop
 8004eb0:	20001b80 	.word	0x20001b80
 8004eb4:	200014e0 	.word	0x200014e0
 8004eb8:	08007b50 	.word	0x08007b50
 8004ebc:	08007b70 	.word	0x08007b70

08004ec0 <thread3.lto_priv.72>:
 8004ec0:	b538      	push	{r3, r4, r5, lr}
 8004ec2:	4c07      	ldr	r4, [pc, #28]	; (8004ee0 <thread3.lto_priv.72+0x20>)
 8004ec4:	69a3      	ldr	r3, [r4, #24]
 8004ec6:	7f5b      	ldrb	r3, [r3, #29]
 8004ec8:	075a      	lsls	r2, r3, #29
 8004eca:	d407      	bmi.n	8004edc <thread3.lto_priv.72+0x1c>
 8004ecc:	4d05      	ldr	r5, [pc, #20]	; (8004ee4 <thread3.lto_priv.72+0x24>)
 8004ece:	4628      	mov	r0, r5
 8004ed0:	f7ff ff96 	bl	8004e00 <chSemWait>
 8004ed4:	69a3      	ldr	r3, [r4, #24]
 8004ed6:	7f5b      	ldrb	r3, [r3, #29]
 8004ed8:	075b      	lsls	r3, r3, #29
 8004eda:	d5f8      	bpl.n	8004ece <thread3.lto_priv.72+0xe>
 8004edc:	bd38      	pop	{r3, r4, r5, pc}
 8004ede:	bf00      	nop
 8004ee0:	20001290 	.word	0x20001290
 8004ee4:	200014e0 	.word	0x200014e0
	...

08004ef0 <sem4_execute>:
 8004ef0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004ef2:	b087      	sub	sp, #28
 8004ef4:	ac03      	add	r4, sp, #12
 8004ef6:	2500      	movs	r5, #0
 8004ef8:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8004efc:	9505      	str	r5, [sp, #20]
 8004efe:	2620      	movs	r6, #32
 8004f00:	f386 8811 	msr	BASEPRI, r6
 8004f04:	4629      	mov	r1, r5
 8004f06:	4620      	mov	r0, r4
 8004f08:	f7fc fb9a 	bl	8001640 <chSemResetI>
 8004f0c:	f7fd fc88 	bl	8002820 <chSchRescheduleS>
 8004f10:	f385 8811 	msr	BASEPRI, r5
 8004f14:	f386 8811 	msr	BASEPRI, r6
 8004f18:	9905      	ldr	r1, [sp, #20]
 8004f1a:	42a9      	cmp	r1, r5
 8004f1c:	bfcc      	ite	gt
 8004f1e:	2100      	movgt	r1, #0
 8004f20:	2101      	movle	r1, #1
 8004f22:	2001      	movs	r0, #1
 8004f24:	f7fb fc44 	bl	80007b0 <_test_assert>
 8004f28:	b118      	cbz	r0, 8004f32 <sem4_execute+0x42>
 8004f2a:	f385 8811 	msr	BASEPRI, r5
 8004f2e:	b007      	add	sp, #28
 8004f30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004f32:	4607      	mov	r7, r0
 8004f34:	f380 8811 	msr	BASEPRI, r0
 8004f38:	4a41      	ldr	r2, [pc, #260]	; (8005040 <sem4_execute+0x150>)
 8004f3a:	4b42      	ldr	r3, [pc, #264]	; (8005044 <sem4_execute+0x154>)
 8004f3c:	6992      	ldr	r2, [r2, #24]
 8004f3e:	4842      	ldr	r0, [pc, #264]	; (8005048 <sem4_execute+0x158>)
 8004f40:	6892      	ldr	r2, [r2, #8]
 8004f42:	9400      	str	r4, [sp, #0]
 8004f44:	3a01      	subs	r2, #1
 8004f46:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004f4a:	f7fd fe59 	bl	8002c00 <chThdCreateStatic>
 8004f4e:	4b3f      	ldr	r3, [pc, #252]	; (800504c <sem4_execute+0x15c>)
 8004f50:	6018      	str	r0, [r3, #0]
 8004f52:	4620      	mov	r0, r4
 8004f54:	f7ff ff54 	bl	8004e00 <chSemWait>
 8004f58:	f386 8811 	msr	BASEPRI, r6
 8004f5c:	9905      	ldr	r1, [sp, #20]
 8004f5e:	2900      	cmp	r1, #0
 8004f60:	bfcc      	ite	gt
 8004f62:	2100      	movgt	r1, #0
 8004f64:	2101      	movle	r1, #1
 8004f66:	2002      	movs	r0, #2
 8004f68:	f7fb fc22 	bl	80007b0 <_test_assert>
 8004f6c:	b118      	cbz	r0, 8004f76 <sem4_execute+0x86>
 8004f6e:	f387 8811 	msr	BASEPRI, r7
 8004f72:	b007      	add	sp, #28
 8004f74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004f76:	f380 8811 	msr	BASEPRI, r0
 8004f7a:	f386 8811 	msr	BASEPRI, r6
 8004f7e:	9b05      	ldr	r3, [sp, #20]
 8004f80:	2b00      	cmp	r3, #0
 8004f82:	dd24      	ble.n	8004fce <sem4_execute+0xde>
 8004f84:	f7fd fc4c 	bl	8002820 <chSchRescheduleS>
 8004f88:	2500      	movs	r5, #0
 8004f8a:	f385 8811 	msr	BASEPRI, r5
 8004f8e:	2720      	movs	r7, #32
 8004f90:	f387 8811 	msr	BASEPRI, r7
 8004f94:	9905      	ldr	r1, [sp, #20]
 8004f96:	42a9      	cmp	r1, r5
 8004f98:	f04f 0003 	mov.w	r0, #3
 8004f9c:	bfd4      	ite	le
 8004f9e:	2100      	movle	r1, #0
 8004fa0:	2101      	movgt	r1, #1
 8004fa2:	f7fb fc05 	bl	80007b0 <_test_assert>
 8004fa6:	4606      	mov	r6, r0
 8004fa8:	2800      	cmp	r0, #0
 8004faa:	d1be      	bne.n	8004f2a <sem4_execute+0x3a>
 8004fac:	f380 8811 	msr	BASEPRI, r0
 8004fb0:	f387 8811 	msr	BASEPRI, r7
 8004fb4:	9905      	ldr	r1, [sp, #20]
 8004fb6:	f1a1 0101 	sub.w	r1, r1, #1
 8004fba:	fab1 f181 	clz	r1, r1
 8004fbe:	2004      	movs	r0, #4
 8004fc0:	0949      	lsrs	r1, r1, #5
 8004fc2:	f7fb fbf5 	bl	80007b0 <_test_assert>
 8004fc6:	b130      	cbz	r0, 8004fd6 <sem4_execute+0xe6>
 8004fc8:	f386 8811 	msr	BASEPRI, r6
 8004fcc:	e7af      	b.n	8004f2e <sem4_execute+0x3e>
 8004fce:	4620      	mov	r0, r4
 8004fd0:	f7fc fac6 	bl	8001560 <chSemSignalI>
 8004fd4:	e7d6      	b.n	8004f84 <sem4_execute+0x94>
 8004fd6:	f380 8811 	msr	BASEPRI, r0
 8004fda:	f387 8811 	msr	BASEPRI, r7
 8004fde:	9b05      	ldr	r3, [sp, #20]
 8004fe0:	2b00      	cmp	r3, #0
 8004fe2:	dd28      	ble.n	8005036 <sem4_execute+0x146>
 8004fe4:	f7fd fc1c 	bl	8002820 <chSchRescheduleS>
 8004fe8:	2400      	movs	r4, #0
 8004fea:	f384 8811 	msr	BASEPRI, r4
 8004fee:	2620      	movs	r6, #32
 8004ff0:	f386 8811 	msr	BASEPRI, r6
 8004ff4:	9905      	ldr	r1, [sp, #20]
 8004ff6:	42a1      	cmp	r1, r4
 8004ff8:	f04f 0003 	mov.w	r0, #3
 8004ffc:	bfd4      	ite	le
 8004ffe:	2100      	movle	r1, #0
 8005000:	2101      	movgt	r1, #1
 8005002:	f7fb fbd5 	bl	80007b0 <_test_assert>
 8005006:	4605      	mov	r5, r0
 8005008:	b110      	cbz	r0, 8005010 <sem4_execute+0x120>
 800500a:	f384 8811 	msr	BASEPRI, r4
 800500e:	e78e      	b.n	8004f2e <sem4_execute+0x3e>
 8005010:	f380 8811 	msr	BASEPRI, r0
 8005014:	f386 8811 	msr	BASEPRI, r6
 8005018:	9905      	ldr	r1, [sp, #20]
 800501a:	f1a1 0101 	sub.w	r1, r1, #1
 800501e:	fab1 f181 	clz	r1, r1
 8005022:	2005      	movs	r0, #5
 8005024:	0949      	lsrs	r1, r1, #5
 8005026:	f7fb fbc3 	bl	80007b0 <_test_assert>
 800502a:	2800      	cmp	r0, #0
 800502c:	f47f af7d 	bne.w	8004f2a <sem4_execute+0x3a>
 8005030:	f380 8811 	msr	BASEPRI, r0
 8005034:	e77b      	b.n	8004f2e <sem4_execute+0x3e>
 8005036:	4620      	mov	r0, r4
 8005038:	f7fc fa92 	bl	8001560 <chSemSignalI>
 800503c:	e7d2      	b.n	8004fe4 <sem4_execute+0xf4>
 800503e:	bf00      	nop
 8005040:	20001290 	.word	0x20001290
 8005044:	08002841 	.word	0x08002841
 8005048:	200014f0 	.word	0x200014f0
 800504c:	20001b84 	.word	0x20001b84

08005050 <thread3.lto_priv.71>:
 8005050:	b510      	push	{r4, lr}
 8005052:	4c04      	ldr	r4, [pc, #16]	; (8005064 <thread3.lto_priv.71+0x14>)
 8005054:	4620      	mov	r0, r4
 8005056:	f7ff fed3 	bl	8004e00 <chSemWait>
 800505a:	4620      	mov	r0, r4
 800505c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005060:	f7fd bdae 	b.w	8002bc0 <chSemSignal>
 8005064:	200008cc 	.word	0x200008cc
	...

08005070 <thread1.lto_priv.73>:
 8005070:	b510      	push	{r4, lr}
 8005072:	4604      	mov	r4, r0
 8005074:	4803      	ldr	r0, [pc, #12]	; (8005084 <thread1.lto_priv.73+0x14>)
 8005076:	f7ff fec3 	bl	8004e00 <chSemWait>
 800507a:	7820      	ldrb	r0, [r4, #0]
 800507c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005080:	f7fb bbae 	b.w	80007e0 <test_emit_token>
 8005084:	200008cc 	.word	0x200008cc
	...

08005090 <chThdWait>:
 8005090:	b538      	push	{r3, r4, r5, lr}
 8005092:	4604      	mov	r4, r0
 8005094:	2320      	movs	r3, #32
 8005096:	f383 8811 	msr	BASEPRI, r3
 800509a:	7f03      	ldrb	r3, [r0, #28]
 800509c:	2b0f      	cmp	r3, #15
 800509e:	d007      	beq.n	80050b0 <chThdWait+0x20>
 80050a0:	4b08      	ldr	r3, [pc, #32]	; (80050c4 <chThdWait+0x34>)
 80050a2:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80050a4:	699b      	ldr	r3, [r3, #24]
 80050a6:	2009      	movs	r0, #9
 80050a8:	601a      	str	r2, [r3, #0]
 80050aa:	6263      	str	r3, [r4, #36]	; 0x24
 80050ac:	f7fd fde0 	bl	8002c70 <chSchGoSleepS>
 80050b0:	6a25      	ldr	r5, [r4, #32]
 80050b2:	2300      	movs	r3, #0
 80050b4:	f383 8811 	msr	BASEPRI, r3
 80050b8:	4620      	mov	r0, r4
 80050ba:	f7ff fbc9 	bl	8004850 <chThdRelease>
 80050be:	4628      	mov	r0, r5
 80050c0:	bd38      	pop	{r3, r4, r5, pc}
 80050c2:	bf00      	nop
 80050c4:	20001290 	.word	0x20001290
	...

080050d0 <cmd_test>:
 80050d0:	2900      	cmp	r1, #0
 80050d2:	dd02      	ble.n	80050da <cmd_test+0xa>
 80050d4:	490e      	ldr	r1, [pc, #56]	; (8005110 <cmd_test+0x40>)
 80050d6:	f7fc bd8b 	b.w	8001bf0 <chprintf.lto_priv.69>
 80050da:	b510      	push	{r4, lr}
 80050dc:	4a0d      	ldr	r2, [pc, #52]	; (8005114 <cmd_test+0x44>)
 80050de:	4b0e      	ldr	r3, [pc, #56]	; (8005118 <cmd_test+0x48>)
 80050e0:	6992      	ldr	r2, [r2, #24]
 80050e2:	b082      	sub	sp, #8
 80050e4:	4604      	mov	r4, r0
 80050e6:	6892      	ldr	r2, [r2, #8]
 80050e8:	9000      	str	r0, [sp, #0]
 80050ea:	f44f 71e4 	mov.w	r1, #456	; 0x1c8
 80050ee:	2000      	movs	r0, #0
 80050f0:	f7ff fdc6 	bl	8004c80 <chThdCreateFromHeap>
 80050f4:	b120      	cbz	r0, 8005100 <cmd_test+0x30>
 80050f6:	b002      	add	sp, #8
 80050f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80050fc:	f7ff bfc8 	b.w	8005090 <chThdWait>
 8005100:	4906      	ldr	r1, [pc, #24]	; (800511c <cmd_test+0x4c>)
 8005102:	4620      	mov	r0, r4
 8005104:	b002      	add	sp, #8
 8005106:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800510a:	f7fc bd71 	b.w	8001bf0 <chprintf.lto_priv.69>
 800510e:	bf00      	nop
 8005110:	08007f00 	.word	0x08007f00
 8005114:	20001290 	.word	0x20001290
 8005118:	08006a31 	.word	0x08006a31
 800511c:	08007f10 	.word	0x08007f10

08005120 <bmk5_execute>:
 8005120:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005124:	4b15      	ldr	r3, [pc, #84]	; (800517c <bmk5_execute+0x5c>)
 8005126:	f8df 9064 	ldr.w	r9, [pc, #100]	; 800518c <bmk5_execute+0x6c>
 800512a:	699b      	ldr	r3, [r3, #24]
 800512c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8005190 <bmk5_execute+0x70>
 8005130:	689d      	ldr	r5, [r3, #8]
 8005132:	4f13      	ldr	r7, [pc, #76]	; (8005180 <bmk5_execute+0x60>)
 8005134:	b083      	sub	sp, #12
 8005136:	f7fe fd2b 	bl	8003b90 <test_wait_tick>
 800513a:	f7fc fb29 	bl	8001790 <test_start_timer.constprop.3>
 800513e:	2400      	movs	r4, #0
 8005140:	3d01      	subs	r5, #1
 8005142:	4626      	mov	r6, r4
 8005144:	4643      	mov	r3, r8
 8005146:	462a      	mov	r2, r5
 8005148:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800514c:	9600      	str	r6, [sp, #0]
 800514e:	4638      	mov	r0, r7
 8005150:	f7fd fd56 	bl	8002c00 <chThdCreateStatic>
 8005154:	f7ff ff9c 	bl	8005090 <chThdWait>
 8005158:	f899 3000 	ldrb.w	r3, [r9]
 800515c:	3401      	adds	r4, #1
 800515e:	2b00      	cmp	r3, #0
 8005160:	d0f0      	beq.n	8005144 <bmk5_execute+0x24>
 8005162:	4808      	ldr	r0, [pc, #32]	; (8005184 <bmk5_execute+0x64>)
 8005164:	f7fb fb94 	bl	8000890 <test_print>
 8005168:	4620      	mov	r0, r4
 800516a:	f7fb fa99 	bl	80006a0 <test_printn>
 800516e:	4806      	ldr	r0, [pc, #24]	; (8005188 <bmk5_execute+0x68>)
 8005170:	b003      	add	sp, #12
 8005172:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005176:	f7fb bb6b 	b.w	8000850 <test_println>
 800517a:	bf00      	nop
 800517c:	20001290 	.word	0x20001290
 8005180:	200014f0 	.word	0x200014f0
 8005184:	08007b50 	.word	0x08007b50
 8005188:	08007c50 	.word	0x08007c50
 800518c:	20001b80 	.word	0x20001b80
 8005190:	08007821 	.word	0x08007821
	...

080051a0 <test_wait_threads>:
 80051a0:	b570      	push	{r4, r5, r6, lr}
 80051a2:	4c07      	ldr	r4, [pc, #28]	; (80051c0 <test_wait_threads+0x20>)
 80051a4:	2600      	movs	r6, #0
 80051a6:	f104 0514 	add.w	r5, r4, #20
 80051aa:	f854 0b04 	ldr.w	r0, [r4], #4
 80051ae:	b118      	cbz	r0, 80051b8 <test_wait_threads+0x18>
 80051b0:	f7ff ff6e 	bl	8005090 <chThdWait>
 80051b4:	f844 6c04 	str.w	r6, [r4, #-4]
 80051b8:	42ac      	cmp	r4, r5
 80051ba:	d1f6      	bne.n	80051aa <test_wait_threads+0xa>
 80051bc:	bd70      	pop	{r4, r5, r6, pc}
 80051be:	bf00      	nop
 80051c0:	20001b84 	.word	0x20001b84
	...

080051d0 <bmk8_execute>:
 80051d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80051d4:	b084      	sub	sp, #16
 80051d6:	ac04      	add	r4, sp, #16
 80051d8:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 80052a8 <bmk8_execute+0xd8>
 80051dc:	4f2d      	ldr	r7, [pc, #180]	; (8005294 <bmk8_execute+0xc4>)
 80051de:	4e2e      	ldr	r6, [pc, #184]	; (8005298 <bmk8_execute+0xc8>)
 80051e0:	4d2e      	ldr	r5, [pc, #184]	; (800529c <bmk8_execute+0xcc>)
 80051e2:	2300      	movs	r3, #0
 80051e4:	f844 3d04 	str.w	r3, [r4, #-4]!
 80051e8:	f7fe fcd2 	bl	8003b90 <test_wait_tick>
 80051ec:	f8d8 3018 	ldr.w	r3, [r8, #24]
 80051f0:	689a      	ldr	r2, [r3, #8]
 80051f2:	9400      	str	r4, [sp, #0]
 80051f4:	463b      	mov	r3, r7
 80051f6:	3a01      	subs	r2, #1
 80051f8:	4630      	mov	r0, r6
 80051fa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80051fe:	f7fd fcff 	bl	8002c00 <chThdCreateStatic>
 8005202:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8005206:	6028      	str	r0, [r5, #0]
 8005208:	689a      	ldr	r2, [r3, #8]
 800520a:	9400      	str	r4, [sp, #0]
 800520c:	463b      	mov	r3, r7
 800520e:	3a01      	subs	r2, #1
 8005210:	f506 70a4 	add.w	r0, r6, #328	; 0x148
 8005214:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005218:	f7fd fcf2 	bl	8002c00 <chThdCreateStatic>
 800521c:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8005220:	6068      	str	r0, [r5, #4]
 8005222:	689a      	ldr	r2, [r3, #8]
 8005224:	9400      	str	r4, [sp, #0]
 8005226:	463b      	mov	r3, r7
 8005228:	3a01      	subs	r2, #1
 800522a:	f506 7024 	add.w	r0, r6, #656	; 0x290
 800522e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005232:	f7fd fce5 	bl	8002c00 <chThdCreateStatic>
 8005236:	f8d8 3018 	ldr.w	r3, [r8, #24]
 800523a:	60a8      	str	r0, [r5, #8]
 800523c:	689a      	ldr	r2, [r3, #8]
 800523e:	9400      	str	r4, [sp, #0]
 8005240:	463b      	mov	r3, r7
 8005242:	3a01      	subs	r2, #1
 8005244:	f506 7076 	add.w	r0, r6, #984	; 0x3d8
 8005248:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800524c:	f7fd fcd8 	bl	8002c00 <chThdCreateStatic>
 8005250:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8005254:	60e8      	str	r0, [r5, #12]
 8005256:	689a      	ldr	r2, [r3, #8]
 8005258:	9400      	str	r4, [sp, #0]
 800525a:	3a01      	subs	r2, #1
 800525c:	463b      	mov	r3, r7
 800525e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005262:	f506 60a4 	add.w	r0, r6, #1312	; 0x520
 8005266:	f7fd fccb 	bl	8002c00 <chThdCreateStatic>
 800526a:	6128      	str	r0, [r5, #16]
 800526c:	f242 7010 	movw	r0, #10000	; 0x2710
 8005270:	f7fe fb8e 	bl	8003990 <chThdSleep>
 8005274:	f7fb fa3c 	bl	80006f0 <test_terminate_threads>
 8005278:	f7ff ff92 	bl	80051a0 <test_wait_threads>
 800527c:	4808      	ldr	r0, [pc, #32]	; (80052a0 <bmk8_execute+0xd0>)
 800527e:	f7fb fb07 	bl	8000890 <test_print>
 8005282:	9803      	ldr	r0, [sp, #12]
 8005284:	f7fb fa0c 	bl	80006a0 <test_printn>
 8005288:	4806      	ldr	r0, [pc, #24]	; (80052a4 <bmk8_execute+0xd4>)
 800528a:	f7fb fae1 	bl	8000850 <test_println>
 800528e:	b004      	add	sp, #16
 8005290:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005294:	080027b1 	.word	0x080027b1
 8005298:	200014f0 	.word	0x200014f0
 800529c:	20001b84 	.word	0x20001b84
 80052a0:	08007b50 	.word	0x08007b50
 80052a4:	08007c80 	.word	0x08007c80
 80052a8:	20001290 	.word	0x20001290
 80052ac:	00000000 	.word	0x00000000

080052b0 <bmk7_execute>:
 80052b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80052b4:	4e3a      	ldr	r6, [pc, #232]	; (80053a0 <bmk7_execute+0xf0>)
 80052b6:	4b3b      	ldr	r3, [pc, #236]	; (80053a4 <bmk7_execute+0xf4>)
 80052b8:	69b2      	ldr	r2, [r6, #24]
 80052ba:	483b      	ldr	r0, [pc, #236]	; (80053a8 <bmk7_execute+0xf8>)
 80052bc:	6892      	ldr	r2, [r2, #8]
 80052be:	4d3b      	ldr	r5, [pc, #236]	; (80053ac <bmk7_execute+0xfc>)
 80052c0:	f8df 810c 	ldr.w	r8, [pc, #268]	; 80053d0 <bmk7_execute+0x120>
 80052c4:	4f3a      	ldr	r7, [pc, #232]	; (80053b0 <bmk7_execute+0x100>)
 80052c6:	b082      	sub	sp, #8
 80052c8:	2400      	movs	r4, #0
 80052ca:	3205      	adds	r2, #5
 80052cc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80052d0:	9400      	str	r4, [sp, #0]
 80052d2:	f7fd fc95 	bl	8002c00 <chThdCreateStatic>
 80052d6:	69b3      	ldr	r3, [r6, #24]
 80052d8:	6028      	str	r0, [r5, #0]
 80052da:	689a      	ldr	r2, [r3, #8]
 80052dc:	4835      	ldr	r0, [pc, #212]	; (80053b4 <bmk7_execute+0x104>)
 80052de:	4b31      	ldr	r3, [pc, #196]	; (80053a4 <bmk7_execute+0xf4>)
 80052e0:	9400      	str	r4, [sp, #0]
 80052e2:	3204      	adds	r2, #4
 80052e4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80052e8:	f7fd fc8a 	bl	8002c00 <chThdCreateStatic>
 80052ec:	69b3      	ldr	r3, [r6, #24]
 80052ee:	6068      	str	r0, [r5, #4]
 80052f0:	689a      	ldr	r2, [r3, #8]
 80052f2:	4831      	ldr	r0, [pc, #196]	; (80053b8 <bmk7_execute+0x108>)
 80052f4:	4b2b      	ldr	r3, [pc, #172]	; (80053a4 <bmk7_execute+0xf4>)
 80052f6:	9400      	str	r4, [sp, #0]
 80052f8:	3203      	adds	r2, #3
 80052fa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80052fe:	f7fd fc7f 	bl	8002c00 <chThdCreateStatic>
 8005302:	69b3      	ldr	r3, [r6, #24]
 8005304:	60a8      	str	r0, [r5, #8]
 8005306:	689a      	ldr	r2, [r3, #8]
 8005308:	482c      	ldr	r0, [pc, #176]	; (80053bc <bmk7_execute+0x10c>)
 800530a:	4b26      	ldr	r3, [pc, #152]	; (80053a4 <bmk7_execute+0xf4>)
 800530c:	9400      	str	r4, [sp, #0]
 800530e:	3202      	adds	r2, #2
 8005310:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005314:	f7fd fc74 	bl	8002c00 <chThdCreateStatic>
 8005318:	69b3      	ldr	r3, [r6, #24]
 800531a:	60e8      	str	r0, [r5, #12]
 800531c:	689a      	ldr	r2, [r3, #8]
 800531e:	4828      	ldr	r0, [pc, #160]	; (80053c0 <bmk7_execute+0x110>)
 8005320:	4b20      	ldr	r3, [pc, #128]	; (80053a4 <bmk7_execute+0xf4>)
 8005322:	9400      	str	r4, [sp, #0]
 8005324:	3201      	adds	r2, #1
 8005326:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800532a:	f7fd fc69 	bl	8002c00 <chThdCreateStatic>
 800532e:	6128      	str	r0, [r5, #16]
 8005330:	f7fe fc2e 	bl	8003b90 <test_wait_tick>
 8005334:	f7fc fa2c 	bl	8001790 <test_start_timer.constprop.3>
 8005338:	4625      	mov	r5, r4
 800533a:	2620      	movs	r6, #32
 800533c:	f386 8811 	msr	BASEPRI, r6
 8005340:	2100      	movs	r1, #0
 8005342:	4638      	mov	r0, r7
 8005344:	f7fc f97c 	bl	8001640 <chSemResetI>
 8005348:	f7fd fa6a 	bl	8002820 <chSchRescheduleS>
 800534c:	f385 8811 	msr	BASEPRI, r5
 8005350:	f898 3000 	ldrb.w	r3, [r8]
 8005354:	3401      	adds	r4, #1
 8005356:	2b00      	cmp	r3, #0
 8005358:	d0f0      	beq.n	800533c <bmk7_execute+0x8c>
 800535a:	f7fb f9c9 	bl	80006f0 <test_terminate_threads>
 800535e:	f386 8811 	msr	BASEPRI, r6
 8005362:	2100      	movs	r1, #0
 8005364:	4812      	ldr	r0, [pc, #72]	; (80053b0 <bmk7_execute+0x100>)
 8005366:	f7fc f96b 	bl	8001640 <chSemResetI>
 800536a:	f7fd fa59 	bl	8002820 <chSchRescheduleS>
 800536e:	f385 8811 	msr	BASEPRI, r5
 8005372:	f7ff ff15 	bl	80051a0 <test_wait_threads>
 8005376:	4813      	ldr	r0, [pc, #76]	; (80053c4 <bmk7_execute+0x114>)
 8005378:	f7fb fa8a 	bl	8000890 <test_print>
 800537c:	4620      	mov	r0, r4
 800537e:	f7fb f98f 	bl	80006a0 <test_printn>
 8005382:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8005386:	4810      	ldr	r0, [pc, #64]	; (80053c8 <bmk7_execute+0x118>)
 8005388:	f7fb fa82 	bl	8000890 <test_print>
 800538c:	0060      	lsls	r0, r4, #1
 800538e:	f7fb f987 	bl	80006a0 <test_printn>
 8005392:	480e      	ldr	r0, [pc, #56]	; (80053cc <bmk7_execute+0x11c>)
 8005394:	b002      	add	sp, #8
 8005396:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800539a:	f7fb ba59 	b.w	8000850 <test_println>
 800539e:	bf00      	nop
 80053a0:	20001290 	.word	0x20001290
 80053a4:	08004ec1 	.word	0x08004ec1
 80053a8:	200014f0 	.word	0x200014f0
 80053ac:	20001b84 	.word	0x20001b84
 80053b0:	200014e0 	.word	0x200014e0
 80053b4:	20001638 	.word	0x20001638
 80053b8:	20001780 	.word	0x20001780
 80053bc:	200018c8 	.word	0x200018c8
 80053c0:	20001a10 	.word	0x20001a10
 80053c4:	08007b50 	.word	0x08007b50
 80053c8:	08007c60 	.word	0x08007c60
 80053cc:	08007c80 	.word	0x08007c80
 80053d0:	20001b80 	.word	0x20001b80
	...

080053e0 <bmk4_execute>:
 80053e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80053e4:	4a23      	ldr	r2, [pc, #140]	; (8005474 <bmk4_execute+0x94>)
 80053e6:	4b24      	ldr	r3, [pc, #144]	; (8005478 <bmk4_execute+0x98>)
 80053e8:	6992      	ldr	r2, [r2, #24]
 80053ea:	4824      	ldr	r0, [pc, #144]	; (800547c <bmk4_execute+0x9c>)
 80053ec:	6892      	ldr	r2, [r2, #8]
 80053ee:	f8df 809c 	ldr.w	r8, [pc, #156]	; 800548c <bmk4_execute+0xac>
 80053f2:	b082      	sub	sp, #8
 80053f4:	2500      	movs	r5, #0
 80053f6:	3201      	adds	r2, #1
 80053f8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80053fc:	9500      	str	r5, [sp, #0]
 80053fe:	f7fd fbff 	bl	8002c00 <chThdCreateStatic>
 8005402:	4b1f      	ldr	r3, [pc, #124]	; (8005480 <bmk4_execute+0xa0>)
 8005404:	4604      	mov	r4, r0
 8005406:	6018      	str	r0, [r3, #0]
 8005408:	f7fe fbc2 	bl	8003b90 <test_wait_tick>
 800540c:	f7fc f9c0 	bl	8001790 <test_start_timer.constprop.3>
 8005410:	462e      	mov	r6, r5
 8005412:	2720      	movs	r7, #32
 8005414:	f387 8811 	msr	BASEPRI, r7
 8005418:	2100      	movs	r1, #0
 800541a:	4620      	mov	r0, r4
 800541c:	f7fd fb30 	bl	8002a80 <chSchWakeupS>
 8005420:	4620      	mov	r0, r4
 8005422:	2100      	movs	r1, #0
 8005424:	f7fd fb2c 	bl	8002a80 <chSchWakeupS>
 8005428:	4620      	mov	r0, r4
 800542a:	2100      	movs	r1, #0
 800542c:	f7fd fb28 	bl	8002a80 <chSchWakeupS>
 8005430:	4620      	mov	r0, r4
 8005432:	2100      	movs	r1, #0
 8005434:	f7fd fb24 	bl	8002a80 <chSchWakeupS>
 8005438:	f386 8811 	msr	BASEPRI, r6
 800543c:	f898 3000 	ldrb.w	r3, [r8]
 8005440:	3504      	adds	r5, #4
 8005442:	2b00      	cmp	r3, #0
 8005444:	d0e6      	beq.n	8005414 <bmk4_execute+0x34>
 8005446:	f387 8811 	msr	BASEPRI, r7
 800544a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800544e:	4620      	mov	r0, r4
 8005450:	f7fd fb16 	bl	8002a80 <chSchWakeupS>
 8005454:	f386 8811 	msr	BASEPRI, r6
 8005458:	f7ff fea2 	bl	80051a0 <test_wait_threads>
 800545c:	4809      	ldr	r0, [pc, #36]	; (8005484 <bmk4_execute+0xa4>)
 800545e:	f7fb fa17 	bl	8000890 <test_print>
 8005462:	0068      	lsls	r0, r5, #1
 8005464:	f7fb f91c 	bl	80006a0 <test_printn>
 8005468:	4807      	ldr	r0, [pc, #28]	; (8005488 <bmk4_execute+0xa8>)
 800546a:	b002      	add	sp, #8
 800546c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005470:	f7fb b9ee 	b.w	8000850 <test_println>
 8005474:	20001290 	.word	0x20001290
 8005478:	08002e11 	.word	0x08002e11
 800547c:	200014f0 	.word	0x200014f0
 8005480:	20001b84 	.word	0x20001b84
 8005484:	08007b50 	.word	0x08007b50
 8005488:	08007c80 	.word	0x08007c80
 800548c:	20001b80 	.word	0x20001b80

08005490 <bmk3_execute>:
 8005490:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005494:	4f2c      	ldr	r7, [pc, #176]	; (8005548 <bmk3_execute+0xb8>)
 8005496:	4d2d      	ldr	r5, [pc, #180]	; (800554c <bmk3_execute+0xbc>)
 8005498:	69ba      	ldr	r2, [r7, #24]
 800549a:	4b2d      	ldr	r3, [pc, #180]	; (8005550 <bmk3_execute+0xc0>)
 800549c:	6892      	ldr	r2, [r2, #8]
 800549e:	4c2d      	ldr	r4, [pc, #180]	; (8005554 <bmk3_execute+0xc4>)
 80054a0:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8005564 <bmk3_execute+0xd4>
 80054a4:	b082      	sub	sp, #8
 80054a6:	2600      	movs	r6, #0
 80054a8:	3201      	adds	r2, #1
 80054aa:	4628      	mov	r0, r5
 80054ac:	9600      	str	r6, [sp, #0]
 80054ae:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80054b2:	f7fd fba5 	bl	8002c00 <chThdCreateStatic>
 80054b6:	69bb      	ldr	r3, [r7, #24]
 80054b8:	6020      	str	r0, [r4, #0]
 80054ba:	689a      	ldr	r2, [r3, #8]
 80054bc:	9600      	str	r6, [sp, #0]
 80054be:	4643      	mov	r3, r8
 80054c0:	3a02      	subs	r2, #2
 80054c2:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 80054c6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80054ca:	f7fd fb99 	bl	8002c00 <chThdCreateStatic>
 80054ce:	69bb      	ldr	r3, [r7, #24]
 80054d0:	6060      	str	r0, [r4, #4]
 80054d2:	689a      	ldr	r2, [r3, #8]
 80054d4:	9600      	str	r6, [sp, #0]
 80054d6:	4643      	mov	r3, r8
 80054d8:	3a03      	subs	r2, #3
 80054da:	f505 7024 	add.w	r0, r5, #656	; 0x290
 80054de:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80054e2:	f7fd fb8d 	bl	8002c00 <chThdCreateStatic>
 80054e6:	69bb      	ldr	r3, [r7, #24]
 80054e8:	60a0      	str	r0, [r4, #8]
 80054ea:	689a      	ldr	r2, [r3, #8]
 80054ec:	9600      	str	r6, [sp, #0]
 80054ee:	4643      	mov	r3, r8
 80054f0:	3a04      	subs	r2, #4
 80054f2:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 80054f6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80054fa:	f7fd fb81 	bl	8002c00 <chThdCreateStatic>
 80054fe:	69bb      	ldr	r3, [r7, #24]
 8005500:	60e0      	str	r0, [r4, #12]
 8005502:	689a      	ldr	r2, [r3, #8]
 8005504:	9600      	str	r6, [sp, #0]
 8005506:	3a05      	subs	r2, #5
 8005508:	4643      	mov	r3, r8
 800550a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800550e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8005512:	f7fd fb75 	bl	8002c00 <chThdCreateStatic>
 8005516:	6120      	str	r0, [r4, #16]
 8005518:	6820      	ldr	r0, [r4, #0]
 800551a:	f7fe fee1 	bl	80042e0 <msg_loop_test>
 800551e:	4604      	mov	r4, r0
 8005520:	f7ff fe3e 	bl	80051a0 <test_wait_threads>
 8005524:	480c      	ldr	r0, [pc, #48]	; (8005558 <bmk3_execute+0xc8>)
 8005526:	f7fb f9b3 	bl	8000890 <test_print>
 800552a:	4620      	mov	r0, r4
 800552c:	f7fb f8b8 	bl	80006a0 <test_printn>
 8005530:	480a      	ldr	r0, [pc, #40]	; (800555c <bmk3_execute+0xcc>)
 8005532:	f7fb f9ad 	bl	8000890 <test_print>
 8005536:	0060      	lsls	r0, r4, #1
 8005538:	f7fb f8b2 	bl	80006a0 <test_printn>
 800553c:	4808      	ldr	r0, [pc, #32]	; (8005560 <bmk3_execute+0xd0>)
 800553e:	b002      	add	sp, #8
 8005540:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005544:	f7fb b984 	b.w	8000850 <test_println>
 8005548:	20001290 	.word	0x20001290
 800554c:	200014f0 	.word	0x200014f0
 8005550:	080041e1 	.word	0x080041e1
 8005554:	20001b84 	.word	0x20001b84
 8005558:	08007b50 	.word	0x08007b50
 800555c:	08007c40 	.word	0x08007c40
 8005560:	08007c80 	.word	0x08007c80
 8005564:	08007821 	.word	0x08007821
	...

08005570 <bmk2_execute>:
 8005570:	b510      	push	{r4, lr}
 8005572:	4a13      	ldr	r2, [pc, #76]	; (80055c0 <bmk2_execute+0x50>)
 8005574:	4b13      	ldr	r3, [pc, #76]	; (80055c4 <bmk2_execute+0x54>)
 8005576:	6992      	ldr	r2, [r2, #24]
 8005578:	4813      	ldr	r0, [pc, #76]	; (80055c8 <bmk2_execute+0x58>)
 800557a:	6892      	ldr	r2, [r2, #8]
 800557c:	b082      	sub	sp, #8
 800557e:	2100      	movs	r1, #0
 8005580:	3201      	adds	r2, #1
 8005582:	9100      	str	r1, [sp, #0]
 8005584:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005588:	f7fd fb3a 	bl	8002c00 <chThdCreateStatic>
 800558c:	4b0f      	ldr	r3, [pc, #60]	; (80055cc <bmk2_execute+0x5c>)
 800558e:	6018      	str	r0, [r3, #0]
 8005590:	f7fe fea6 	bl	80042e0 <msg_loop_test>
 8005594:	4604      	mov	r4, r0
 8005596:	f7ff fe03 	bl	80051a0 <test_wait_threads>
 800559a:	480d      	ldr	r0, [pc, #52]	; (80055d0 <bmk2_execute+0x60>)
 800559c:	f7fb f978 	bl	8000890 <test_print>
 80055a0:	4620      	mov	r0, r4
 80055a2:	f7fb f87d 	bl	80006a0 <test_printn>
 80055a6:	480b      	ldr	r0, [pc, #44]	; (80055d4 <bmk2_execute+0x64>)
 80055a8:	f7fb f972 	bl	8000890 <test_print>
 80055ac:	0060      	lsls	r0, r4, #1
 80055ae:	f7fb f877 	bl	80006a0 <test_printn>
 80055b2:	4809      	ldr	r0, [pc, #36]	; (80055d8 <bmk2_execute+0x68>)
 80055b4:	b002      	add	sp, #8
 80055b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80055ba:	f7fb b949 	b.w	8000850 <test_println>
 80055be:	bf00      	nop
 80055c0:	20001290 	.word	0x20001290
 80055c4:	080041e1 	.word	0x080041e1
 80055c8:	200014f0 	.word	0x200014f0
 80055cc:	20001b84 	.word	0x20001b84
 80055d0:	08007b50 	.word	0x08007b50
 80055d4:	08007c40 	.word	0x08007c40
 80055d8:	08007c80 	.word	0x08007c80
 80055dc:	00000000 	.word	0x00000000

080055e0 <bmk1_execute>:
 80055e0:	b510      	push	{r4, lr}
 80055e2:	4a13      	ldr	r2, [pc, #76]	; (8005630 <bmk1_execute+0x50>)
 80055e4:	4b13      	ldr	r3, [pc, #76]	; (8005634 <bmk1_execute+0x54>)
 80055e6:	6992      	ldr	r2, [r2, #24]
 80055e8:	4813      	ldr	r0, [pc, #76]	; (8005638 <bmk1_execute+0x58>)
 80055ea:	6892      	ldr	r2, [r2, #8]
 80055ec:	b082      	sub	sp, #8
 80055ee:	2100      	movs	r1, #0
 80055f0:	3a01      	subs	r2, #1
 80055f2:	9100      	str	r1, [sp, #0]
 80055f4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80055f8:	f7fd fb02 	bl	8002c00 <chThdCreateStatic>
 80055fc:	4b0f      	ldr	r3, [pc, #60]	; (800563c <bmk1_execute+0x5c>)
 80055fe:	6018      	str	r0, [r3, #0]
 8005600:	f7fe fe6e 	bl	80042e0 <msg_loop_test>
 8005604:	4604      	mov	r4, r0
 8005606:	f7ff fdcb 	bl	80051a0 <test_wait_threads>
 800560a:	480d      	ldr	r0, [pc, #52]	; (8005640 <bmk1_execute+0x60>)
 800560c:	f7fb f940 	bl	8000890 <test_print>
 8005610:	4620      	mov	r0, r4
 8005612:	f7fb f845 	bl	80006a0 <test_printn>
 8005616:	480b      	ldr	r0, [pc, #44]	; (8005644 <bmk1_execute+0x64>)
 8005618:	f7fb f93a 	bl	8000890 <test_print>
 800561c:	0060      	lsls	r0, r4, #1
 800561e:	f7fb f83f 	bl	80006a0 <test_printn>
 8005622:	4809      	ldr	r0, [pc, #36]	; (8005648 <bmk1_execute+0x68>)
 8005624:	b002      	add	sp, #8
 8005626:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800562a:	f7fb b911 	b.w	8000850 <test_println>
 800562e:	bf00      	nop
 8005630:	20001290 	.word	0x20001290
 8005634:	080041e1 	.word	0x080041e1
 8005638:	200014f0 	.word	0x200014f0
 800563c:	20001b84 	.word	0x20001b84
 8005640:	08007b50 	.word	0x08007b50
 8005644:	08007c40 	.word	0x08007c40
 8005648:	08007c80 	.word	0x08007c80
 800564c:	00000000 	.word	0x00000000

08005650 <queues2_execute>:
 8005650:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005654:	2320      	movs	r3, #32
 8005656:	b082      	sub	sp, #8
 8005658:	f383 8811 	msr	BASEPRI, r3
 800565c:	4d82      	ldr	r5, [pc, #520]	; (8005868 <queues2_execute+0x218>)
 800565e:	e9d5 3205 	ldrd	r3, r2, [r5, #20]
 8005662:	429a      	cmp	r2, r3
 8005664:	d03e      	beq.n	80056e4 <queues2_execute+0x94>
 8005666:	2100      	movs	r1, #0
 8005668:	2001      	movs	r0, #1
 800566a:	f7fb f8a1 	bl	80007b0 <_test_assert>
 800566e:	bb98      	cbnz	r0, 80056d8 <queues2_execute+0x88>
 8005670:	f380 8811 	msr	BASEPRI, r0
 8005674:	4e7c      	ldr	r6, [pc, #496]	; (8005868 <queues2_execute+0x218>)
 8005676:	2441      	movs	r4, #65	; 0x41
 8005678:	4621      	mov	r1, r4
 800567a:	3401      	adds	r4, #1
 800567c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005680:	4630      	mov	r0, r6
 8005682:	b2e4      	uxtb	r4, r4
 8005684:	f7fe f8b4 	bl	80037f0 <chOQPutTimeout>
 8005688:	2c45      	cmp	r4, #69	; 0x45
 800568a:	d1f5      	bne.n	8005678 <queues2_execute+0x28>
 800568c:	2620      	movs	r6, #32
 800568e:	f386 8811 	msr	BASEPRI, r6
 8005692:	68a9      	ldr	r1, [r5, #8]
 8005694:	fab1 f181 	clz	r1, r1
 8005698:	0949      	lsrs	r1, r1, #5
 800569a:	2002      	movs	r0, #2
 800569c:	f7fb f888 	bl	80007b0 <_test_assert>
 80056a0:	4607      	mov	r7, r0
 80056a2:	b9c8      	cbnz	r0, 80056d8 <queues2_execute+0x88>
 80056a4:	f380 8811 	msr	BASEPRI, r0
 80056a8:	2404      	movs	r4, #4
 80056aa:	4680      	mov	r8, r0
 80056ac:	f386 8811 	msr	BASEPRI, r6
 80056b0:	f7fb fdde 	bl	8001270 <chOQGetI.constprop.18>
 80056b4:	f388 8811 	msr	BASEPRI, r8
 80056b8:	b2c0      	uxtb	r0, r0
 80056ba:	f7fb f891 	bl	80007e0 <test_emit_token>
 80056be:	3c01      	subs	r4, #1
 80056c0:	d1f4      	bne.n	80056ac <queues2_execute+0x5c>
 80056c2:	f386 8811 	msr	BASEPRI, r6
 80056c6:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 80056ca:	429a      	cmp	r2, r3
 80056cc:	d028      	beq.n	8005720 <queues2_execute+0xd0>
 80056ce:	4639      	mov	r1, r7
 80056d0:	2003      	movs	r0, #3
 80056d2:	f7fb f86d 	bl	80007b0 <_test_assert>
 80056d6:	b150      	cbz	r0, 80056ee <queues2_execute+0x9e>
 80056d8:	2300      	movs	r3, #0
 80056da:	f383 8811 	msr	BASEPRI, r3
 80056de:	b002      	add	sp, #8
 80056e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80056e4:	68a9      	ldr	r1, [r5, #8]
 80056e6:	3100      	adds	r1, #0
 80056e8:	bf18      	it	ne
 80056ea:	2101      	movne	r1, #1
 80056ec:	e7bc      	b.n	8005668 <queues2_execute+0x18>
 80056ee:	f380 8811 	msr	BASEPRI, r0
 80056f2:	495e      	ldr	r1, [pc, #376]	; (800586c <queues2_execute+0x21c>)
 80056f4:	2004      	movs	r0, #4
 80056f6:	f7fb f833 	bl	8000760 <_test_assert_sequence>
 80056fa:	4604      	mov	r4, r0
 80056fc:	2800      	cmp	r0, #0
 80056fe:	d1ee      	bne.n	80056de <queues2_execute+0x8e>
 8005700:	2620      	movs	r6, #32
 8005702:	f386 8811 	msr	BASEPRI, r6
 8005706:	f7fb fdb3 	bl	8001270 <chOQGetI.constprop.18>
 800570a:	3003      	adds	r0, #3
 800570c:	bf14      	ite	ne
 800570e:	2100      	movne	r1, #0
 8005710:	2101      	moveq	r1, #1
 8005712:	2005      	movs	r0, #5
 8005714:	f7fb f84c 	bl	80007b0 <_test_assert>
 8005718:	b138      	cbz	r0, 800572a <queues2_execute+0xda>
 800571a:	f384 8811 	msr	BASEPRI, r4
 800571e:	e7de      	b.n	80056de <queues2_execute+0x8e>
 8005720:	68af      	ldr	r7, [r5, #8]
 8005722:	3700      	adds	r7, #0
 8005724:	bf18      	it	ne
 8005726:	2701      	movne	r7, #1
 8005728:	e7d1      	b.n	80056ce <queues2_execute+0x7e>
 800572a:	f380 8811 	msr	BASEPRI, r0
 800572e:	2208      	movs	r2, #8
 8005730:	4603      	mov	r3, r0
 8005732:	494f      	ldr	r1, [pc, #316]	; (8005870 <queues2_execute+0x220>)
 8005734:	484c      	ldr	r0, [pc, #304]	; (8005868 <queues2_execute+0x218>)
 8005736:	f7fe f803 	bl	8003740 <chOQWriteTimeout>
 800573a:	f1a0 0104 	sub.w	r1, r0, #4
 800573e:	fab1 f181 	clz	r1, r1
 8005742:	0949      	lsrs	r1, r1, #5
 8005744:	2006      	movs	r0, #6
 8005746:	f7fb f833 	bl	80007b0 <_test_assert>
 800574a:	4604      	mov	r4, r0
 800574c:	2800      	cmp	r0, #0
 800574e:	d1c6      	bne.n	80056de <queues2_execute+0x8e>
 8005750:	f386 8811 	msr	BASEPRI, r6
 8005754:	68a9      	ldr	r1, [r5, #8]
 8005756:	fab1 f181 	clz	r1, r1
 800575a:	0949      	lsrs	r1, r1, #5
 800575c:	2007      	movs	r0, #7
 800575e:	f7fb f827 	bl	80007b0 <_test_assert>
 8005762:	4607      	mov	r7, r0
 8005764:	2800      	cmp	r0, #0
 8005766:	d1d8      	bne.n	800571a <queues2_execute+0xca>
 8005768:	f380 8811 	msr	BASEPRI, r0
 800576c:	4a41      	ldr	r2, [pc, #260]	; (8005874 <queues2_execute+0x224>)
 800576e:	4b42      	ldr	r3, [pc, #264]	; (8005878 <queues2_execute+0x228>)
 8005770:	6992      	ldr	r2, [r2, #24]
 8005772:	4842      	ldr	r0, [pc, #264]	; (800587c <queues2_execute+0x22c>)
 8005774:	6892      	ldr	r2, [r2, #8]
 8005776:	9700      	str	r7, [sp, #0]
 8005778:	3201      	adds	r2, #1
 800577a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800577e:	f7fd fa3f 	bl	8002c00 <chThdCreateStatic>
 8005782:	4b3f      	ldr	r3, [pc, #252]	; (8005880 <queues2_execute+0x230>)
 8005784:	6018      	str	r0, [r3, #0]
 8005786:	f386 8811 	msr	BASEPRI, r6
 800578a:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 800578e:	68a9      	ldr	r1, [r5, #8]
 8005790:	1a9b      	subs	r3, r3, r2
 8005792:	1a59      	subs	r1, r3, r1
 8005794:	f1a1 0104 	sub.w	r1, r1, #4
 8005798:	fab1 f181 	clz	r1, r1
 800579c:	0949      	lsrs	r1, r1, #5
 800579e:	2008      	movs	r0, #8
 80057a0:	f7fb f806 	bl	80007b0 <_test_assert>
 80057a4:	4604      	mov	r4, r0
 80057a6:	b110      	cbz	r0, 80057ae <queues2_execute+0x15e>
 80057a8:	f387 8811 	msr	BASEPRI, r7
 80057ac:	e797      	b.n	80056de <queues2_execute+0x8e>
 80057ae:	f380 8811 	msr	BASEPRI, r0
 80057b2:	f7ff fcf5 	bl	80051a0 <test_wait_threads>
 80057b6:	f386 8811 	msr	BASEPRI, r6
 80057ba:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 80057be:	482a      	ldr	r0, [pc, #168]	; (8005868 <queues2_execute+0x218>)
 80057c0:	61aa      	str	r2, [r5, #24]
 80057c2:	1a9b      	subs	r3, r3, r2
 80057c4:	f06f 0101 	mvn.w	r1, #1
 80057c8:	616a      	str	r2, [r5, #20]
 80057ca:	60ab      	str	r3, [r5, #8]
 80057cc:	f7fb ff50 	bl	8001670 <chThdDequeueAllI>
 80057d0:	f384 8811 	msr	BASEPRI, r4
 80057d4:	f386 8811 	msr	BASEPRI, r6
 80057d8:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 80057dc:	68a9      	ldr	r1, [r5, #8]
 80057de:	1a9b      	subs	r3, r3, r2
 80057e0:	1a5f      	subs	r7, r3, r1
 80057e2:	4279      	negs	r1, r7
 80057e4:	4179      	adcs	r1, r7
 80057e6:	2009      	movs	r0, #9
 80057e8:	f7fa ffe2 	bl	80007b0 <_test_assert>
 80057ec:	4603      	mov	r3, r0
 80057ee:	2800      	cmp	r0, #0
 80057f0:	d193      	bne.n	800571a <queues2_execute+0xca>
 80057f2:	f380 8811 	msr	BASEPRI, r0
 80057f6:	2202      	movs	r2, #2
 80057f8:	491d      	ldr	r1, [pc, #116]	; (8005870 <queues2_execute+0x220>)
 80057fa:	481b      	ldr	r0, [pc, #108]	; (8005868 <queues2_execute+0x218>)
 80057fc:	f7fd ffa0 	bl	8003740 <chOQWriteTimeout>
 8005800:	3802      	subs	r0, #2
 8005802:	4241      	negs	r1, r0
 8005804:	4141      	adcs	r1, r0
 8005806:	200a      	movs	r0, #10
 8005808:	f7fa ffd2 	bl	80007b0 <_test_assert>
 800580c:	4603      	mov	r3, r0
 800580e:	2800      	cmp	r0, #0
 8005810:	f47f af65 	bne.w	80056de <queues2_execute+0x8e>
 8005814:	2202      	movs	r2, #2
 8005816:	4916      	ldr	r1, [pc, #88]	; (8005870 <queues2_execute+0x220>)
 8005818:	4813      	ldr	r0, [pc, #76]	; (8005868 <queues2_execute+0x218>)
 800581a:	f7fd ff91 	bl	8003740 <chOQWriteTimeout>
 800581e:	1e82      	subs	r2, r0, #2
 8005820:	4251      	negs	r1, r2
 8005822:	4151      	adcs	r1, r2
 8005824:	200b      	movs	r0, #11
 8005826:	f7fa ffc3 	bl	80007b0 <_test_assert>
 800582a:	2800      	cmp	r0, #0
 800582c:	f47f af57 	bne.w	80056de <queues2_execute+0x8e>
 8005830:	f386 8811 	msr	BASEPRI, r6
 8005834:	68a9      	ldr	r1, [r5, #8]
 8005836:	fab1 f181 	clz	r1, r1
 800583a:	0949      	lsrs	r1, r1, #5
 800583c:	200c      	movs	r0, #12
 800583e:	f7fa ffb7 	bl	80007b0 <_test_assert>
 8005842:	2800      	cmp	r0, #0
 8005844:	f47f af48 	bne.w	80056d8 <queues2_execute+0x88>
 8005848:	2100      	movs	r1, #0
 800584a:	f381 8811 	msr	BASEPRI, r1
 800584e:	220a      	movs	r2, #10
 8005850:	4805      	ldr	r0, [pc, #20]	; (8005868 <queues2_execute+0x218>)
 8005852:	f7fd ffcd 	bl	80037f0 <chOQPutTimeout>
 8005856:	1c43      	adds	r3, r0, #1
 8005858:	4259      	negs	r1, r3
 800585a:	4159      	adcs	r1, r3
 800585c:	200d      	movs	r0, #13
 800585e:	b002      	add	sp, #8
 8005860:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005864:	f7fa bfa4 	b.w	80007b0 <_test_assert>
 8005868:	200008a8 	.word	0x200008a8
 800586c:	08008220 	.word	0x08008220
 8005870:	20001638 	.word	0x20001638
 8005874:	20001290 	.word	0x20001290
 8005878:	08003841 	.word	0x08003841
 800587c:	200014f0 	.word	0x200014f0
 8005880:	20001b84 	.word	0x20001b84
	...

08005890 <queues1_execute>:
 8005890:	b570      	push	{r4, r5, r6, lr}
 8005892:	2620      	movs	r6, #32
 8005894:	b082      	sub	sp, #8
 8005896:	f386 8811 	msr	BASEPRI, r6
 800589a:	4c99      	ldr	r4, [pc, #612]	; (8005b00 <queues1_execute+0x270>)
 800589c:	68a1      	ldr	r1, [r4, #8]
 800589e:	fab1 f181 	clz	r1, r1
 80058a2:	0949      	lsrs	r1, r1, #5
 80058a4:	2001      	movs	r0, #1
 80058a6:	f7fa ff83 	bl	80007b0 <_test_assert>
 80058aa:	bb10      	cbnz	r0, 80058f2 <queues1_execute+0x62>
 80058ac:	4605      	mov	r5, r0
 80058ae:	f380 8811 	msr	BASEPRI, r0
 80058b2:	f386 8811 	msr	BASEPRI, r6
 80058b6:	2141      	movs	r1, #65	; 0x41
 80058b8:	4620      	mov	r0, r4
 80058ba:	f7fb fcb1 	bl	8001220 <chIQPutI>
 80058be:	4620      	mov	r0, r4
 80058c0:	2142      	movs	r1, #66	; 0x42
 80058c2:	f7fb fcad 	bl	8001220 <chIQPutI>
 80058c6:	4620      	mov	r0, r4
 80058c8:	2143      	movs	r1, #67	; 0x43
 80058ca:	f7fb fca9 	bl	8001220 <chIQPutI>
 80058ce:	4620      	mov	r0, r4
 80058d0:	2144      	movs	r1, #68	; 0x44
 80058d2:	f7fb fca5 	bl	8001220 <chIQPutI>
 80058d6:	f385 8811 	msr	BASEPRI, r5
 80058da:	f386 8811 	msr	BASEPRI, r6
 80058de:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 80058e2:	429a      	cmp	r2, r3
 80058e4:	d038      	beq.n	8005958 <queues1_execute+0xc8>
 80058e6:	4629      	mov	r1, r5
 80058e8:	2002      	movs	r0, #2
 80058ea:	f7fa ff61 	bl	80007b0 <_test_assert>
 80058ee:	4605      	mov	r5, r0
 80058f0:	b120      	cbz	r0, 80058fc <queues1_execute+0x6c>
 80058f2:	2300      	movs	r3, #0
 80058f4:	f383 8811 	msr	BASEPRI, r3
 80058f8:	b002      	add	sp, #8
 80058fa:	bd70      	pop	{r4, r5, r6, pc}
 80058fc:	f380 8811 	msr	BASEPRI, r0
 8005900:	2320      	movs	r3, #32
 8005902:	f383 8811 	msr	BASEPRI, r3
 8005906:	487e      	ldr	r0, [pc, #504]	; (8005b00 <queues1_execute+0x270>)
 8005908:	4629      	mov	r1, r5
 800590a:	f7fb fc89 	bl	8001220 <chIQPutI>
 800590e:	3004      	adds	r0, #4
 8005910:	bf14      	ite	ne
 8005912:	2100      	movne	r1, #0
 8005914:	2101      	moveq	r1, #1
 8005916:	2003      	movs	r0, #3
 8005918:	f7fa ff4a 	bl	80007b0 <_test_assert>
 800591c:	b9c0      	cbnz	r0, 8005950 <queues1_execute+0xc0>
 800591e:	f380 8811 	msr	BASEPRI, r0
 8005922:	4e77      	ldr	r6, [pc, #476]	; (8005b00 <queues1_execute+0x270>)
 8005924:	2504      	movs	r5, #4
 8005926:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800592a:	4630      	mov	r0, r6
 800592c:	f7fd fff0 	bl	8003910 <chIQGetTimeout>
 8005930:	b2c0      	uxtb	r0, r0
 8005932:	f7fa ff55 	bl	80007e0 <test_emit_token>
 8005936:	3d01      	subs	r5, #1
 8005938:	d1f5      	bne.n	8005926 <queues1_execute+0x96>
 800593a:	2620      	movs	r6, #32
 800593c:	f386 8811 	msr	BASEPRI, r6
 8005940:	68a1      	ldr	r1, [r4, #8]
 8005942:	fab1 f181 	clz	r1, r1
 8005946:	0949      	lsrs	r1, r1, #5
 8005948:	2004      	movs	r0, #4
 800594a:	f7fa ff31 	bl	80007b0 <_test_assert>
 800594e:	b178      	cbz	r0, 8005970 <queues1_execute+0xe0>
 8005950:	f385 8811 	msr	BASEPRI, r5
 8005954:	b002      	add	sp, #8
 8005956:	bd70      	pop	{r4, r5, r6, pc}
 8005958:	68a5      	ldr	r5, [r4, #8]
 800595a:	3500      	adds	r5, #0
 800595c:	bf18      	it	ne
 800595e:	2501      	movne	r5, #1
 8005960:	4629      	mov	r1, r5
 8005962:	2002      	movs	r0, #2
 8005964:	f7fa ff24 	bl	80007b0 <_test_assert>
 8005968:	4605      	mov	r5, r0
 800596a:	2800      	cmp	r0, #0
 800596c:	d1c1      	bne.n	80058f2 <queues1_execute+0x62>
 800596e:	e7c5      	b.n	80058fc <queues1_execute+0x6c>
 8005970:	f385 8811 	msr	BASEPRI, r5
 8005974:	4963      	ldr	r1, [pc, #396]	; (8005b04 <queues1_execute+0x274>)
 8005976:	2005      	movs	r0, #5
 8005978:	f7fa fef2 	bl	8000760 <_test_assert_sequence>
 800597c:	2800      	cmp	r0, #0
 800597e:	d1bb      	bne.n	80058f8 <queues1_execute+0x68>
 8005980:	f386 8811 	msr	BASEPRI, r6
 8005984:	2141      	movs	r1, #65	; 0x41
 8005986:	485e      	ldr	r0, [pc, #376]	; (8005b00 <queues1_execute+0x270>)
 8005988:	f7fb fc4a 	bl	8001220 <chIQPutI>
 800598c:	2142      	movs	r1, #66	; 0x42
 800598e:	485c      	ldr	r0, [pc, #368]	; (8005b00 <queues1_execute+0x270>)
 8005990:	f7fb fc46 	bl	8001220 <chIQPutI>
 8005994:	2143      	movs	r1, #67	; 0x43
 8005996:	485a      	ldr	r0, [pc, #360]	; (8005b00 <queues1_execute+0x270>)
 8005998:	f7fb fc42 	bl	8001220 <chIQPutI>
 800599c:	2144      	movs	r1, #68	; 0x44
 800599e:	4858      	ldr	r0, [pc, #352]	; (8005b00 <queues1_execute+0x270>)
 80059a0:	f7fb fc3e 	bl	8001220 <chIQPutI>
 80059a4:	f385 8811 	msr	BASEPRI, r5
 80059a8:	4957      	ldr	r1, [pc, #348]	; (8005b08 <queues1_execute+0x278>)
 80059aa:	4855      	ldr	r0, [pc, #340]	; (8005b00 <queues1_execute+0x270>)
 80059ac:	2208      	movs	r2, #8
 80059ae:	462b      	mov	r3, r5
 80059b0:	f7fd ff5e 	bl	8003870 <chIQReadTimeout>
 80059b4:	f1a0 0104 	sub.w	r1, r0, #4
 80059b8:	fab1 f181 	clz	r1, r1
 80059bc:	0949      	lsrs	r1, r1, #5
 80059be:	2006      	movs	r0, #6
 80059c0:	f7fa fef6 	bl	80007b0 <_test_assert>
 80059c4:	2800      	cmp	r0, #0
 80059c6:	d197      	bne.n	80058f8 <queues1_execute+0x68>
 80059c8:	f386 8811 	msr	BASEPRI, r6
 80059cc:	68a1      	ldr	r1, [r4, #8]
 80059ce:	fab1 f181 	clz	r1, r1
 80059d2:	0949      	lsrs	r1, r1, #5
 80059d4:	2007      	movs	r0, #7
 80059d6:	f7fa feeb 	bl	80007b0 <_test_assert>
 80059da:	2800      	cmp	r0, #0
 80059dc:	d1b8      	bne.n	8005950 <queues1_execute+0xc0>
 80059de:	f385 8811 	msr	BASEPRI, r5
 80059e2:	f386 8811 	msr	BASEPRI, r6
 80059e6:	2141      	movs	r1, #65	; 0x41
 80059e8:	4845      	ldr	r0, [pc, #276]	; (8005b00 <queues1_execute+0x270>)
 80059ea:	f7fb fc19 	bl	8001220 <chIQPutI>
 80059ee:	2142      	movs	r1, #66	; 0x42
 80059f0:	4843      	ldr	r0, [pc, #268]	; (8005b00 <queues1_execute+0x270>)
 80059f2:	f7fb fc15 	bl	8001220 <chIQPutI>
 80059f6:	2143      	movs	r1, #67	; 0x43
 80059f8:	4841      	ldr	r0, [pc, #260]	; (8005b00 <queues1_execute+0x270>)
 80059fa:	f7fb fc11 	bl	8001220 <chIQPutI>
 80059fe:	2144      	movs	r1, #68	; 0x44
 8005a00:	483f      	ldr	r0, [pc, #252]	; (8005b00 <queues1_execute+0x270>)
 8005a02:	f7fb fc0d 	bl	8001220 <chIQPutI>
 8005a06:	f385 8811 	msr	BASEPRI, r5
 8005a0a:	493f      	ldr	r1, [pc, #252]	; (8005b08 <queues1_execute+0x278>)
 8005a0c:	483c      	ldr	r0, [pc, #240]	; (8005b00 <queues1_execute+0x270>)
 8005a0e:	2202      	movs	r2, #2
 8005a10:	462b      	mov	r3, r5
 8005a12:	f7fd ff2d 	bl	8003870 <chIQReadTimeout>
 8005a16:	f1a0 0102 	sub.w	r1, r0, #2
 8005a1a:	fab1 f181 	clz	r1, r1
 8005a1e:	0949      	lsrs	r1, r1, #5
 8005a20:	2008      	movs	r0, #8
 8005a22:	f7fa fec5 	bl	80007b0 <_test_assert>
 8005a26:	2800      	cmp	r0, #0
 8005a28:	f47f af66 	bne.w	80058f8 <queues1_execute+0x68>
 8005a2c:	4936      	ldr	r1, [pc, #216]	; (8005b08 <queues1_execute+0x278>)
 8005a2e:	4834      	ldr	r0, [pc, #208]	; (8005b00 <queues1_execute+0x270>)
 8005a30:	462b      	mov	r3, r5
 8005a32:	2202      	movs	r2, #2
 8005a34:	f7fd ff1c 	bl	8003870 <chIQReadTimeout>
 8005a38:	f1a0 0102 	sub.w	r1, r0, #2
 8005a3c:	fab1 f181 	clz	r1, r1
 8005a40:	0949      	lsrs	r1, r1, #5
 8005a42:	2009      	movs	r0, #9
 8005a44:	f7fa feb4 	bl	80007b0 <_test_assert>
 8005a48:	2800      	cmp	r0, #0
 8005a4a:	f47f af55 	bne.w	80058f8 <queues1_execute+0x68>
 8005a4e:	f386 8811 	msr	BASEPRI, r6
 8005a52:	68a1      	ldr	r1, [r4, #8]
 8005a54:	fab1 f181 	clz	r1, r1
 8005a58:	0949      	lsrs	r1, r1, #5
 8005a5a:	200a      	movs	r0, #10
 8005a5c:	f7fa fea8 	bl	80007b0 <_test_assert>
 8005a60:	2800      	cmp	r0, #0
 8005a62:	f47f af75 	bne.w	8005950 <queues1_execute+0xc0>
 8005a66:	f385 8811 	msr	BASEPRI, r5
 8005a6a:	f386 8811 	msr	BASEPRI, r6
 8005a6e:	4824      	ldr	r0, [pc, #144]	; (8005b00 <queues1_execute+0x270>)
 8005a70:	4629      	mov	r1, r5
 8005a72:	f7fb fbd5 	bl	8001220 <chIQPutI>
 8005a76:	68e3      	ldr	r3, [r4, #12]
 8005a78:	4821      	ldr	r0, [pc, #132]	; (8005b00 <queues1_execute+0x270>)
 8005a7a:	60a5      	str	r5, [r4, #8]
 8005a7c:	f06f 0101 	mvn.w	r1, #1
 8005a80:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8005a84:	f7fb fdf4 	bl	8001670 <chThdDequeueAllI>
 8005a88:	f385 8811 	msr	BASEPRI, r5
 8005a8c:	f386 8811 	msr	BASEPRI, r6
 8005a90:	68a1      	ldr	r1, [r4, #8]
 8005a92:	fab1 f181 	clz	r1, r1
 8005a96:	0949      	lsrs	r1, r1, #5
 8005a98:	200b      	movs	r0, #11
 8005a9a:	f7fa fe89 	bl	80007b0 <_test_assert>
 8005a9e:	2800      	cmp	r0, #0
 8005aa0:	f47f af56 	bne.w	8005950 <queues1_execute+0xc0>
 8005aa4:	f385 8811 	msr	BASEPRI, r5
 8005aa8:	4a18      	ldr	r2, [pc, #96]	; (8005b0c <queues1_execute+0x27c>)
 8005aaa:	4b19      	ldr	r3, [pc, #100]	; (8005b10 <queues1_execute+0x280>)
 8005aac:	6992      	ldr	r2, [r2, #24]
 8005aae:	4819      	ldr	r0, [pc, #100]	; (8005b14 <queues1_execute+0x284>)
 8005ab0:	6892      	ldr	r2, [r2, #8]
 8005ab2:	9500      	str	r5, [sp, #0]
 8005ab4:	3201      	adds	r2, #1
 8005ab6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005aba:	f7fd f8a1 	bl	8002c00 <chThdCreateStatic>
 8005abe:	4b16      	ldr	r3, [pc, #88]	; (8005b18 <queues1_execute+0x288>)
 8005ac0:	6018      	str	r0, [r3, #0]
 8005ac2:	f386 8811 	msr	BASEPRI, r6
 8005ac6:	68a1      	ldr	r1, [r4, #8]
 8005ac8:	fab1 f181 	clz	r1, r1
 8005acc:	0949      	lsrs	r1, r1, #5
 8005ace:	200c      	movs	r0, #12
 8005ad0:	f7fa fe6e 	bl	80007b0 <_test_assert>
 8005ad4:	2300      	movs	r3, #0
 8005ad6:	b110      	cbz	r0, 8005ade <queues1_execute+0x24e>
 8005ad8:	f383 8811 	msr	BASEPRI, r3
 8005adc:	e70c      	b.n	80058f8 <queues1_execute+0x68>
 8005ade:	f383 8811 	msr	BASEPRI, r3
 8005ae2:	f7ff fb5d 	bl	80051a0 <test_wait_threads>
 8005ae6:	210a      	movs	r1, #10
 8005ae8:	4805      	ldr	r0, [pc, #20]	; (8005b00 <queues1_execute+0x270>)
 8005aea:	f7fd ff11 	bl	8003910 <chIQGetTimeout>
 8005aee:	1c43      	adds	r3, r0, #1
 8005af0:	4259      	negs	r1, r3
 8005af2:	4159      	adcs	r1, r3
 8005af4:	200d      	movs	r0, #13
 8005af6:	b002      	add	sp, #8
 8005af8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005afc:	f7fa be58 	b.w	80007b0 <_test_assert>
 8005b00:	20000810 	.word	0x20000810
 8005b04:	08008220 	.word	0x08008220
 8005b08:	20001638 	.word	0x20001638
 8005b0c:	20001290 	.word	0x20001290
 8005b10:	08003961 	.word	0x08003961
 8005b14:	200014f0 	.word	0x200014f0
 8005b18:	20001b84 	.word	0x20001b84
 8005b1c:	00000000 	.word	0x00000000

08005b20 <dyn2_execute>:
 8005b20:	4a31      	ldr	r2, [pc, #196]	; (8005be8 <dyn2_execute+0xc8>)
 8005b22:	6991      	ldr	r1, [r2, #24]
 8005b24:	4a31      	ldr	r2, [pc, #196]	; (8005bec <dyn2_execute+0xcc>)
 8005b26:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005b28:	4b31      	ldr	r3, [pc, #196]	; (8005bf0 <dyn2_execute+0xd0>)
 8005b2a:	688d      	ldr	r5, [r1, #8]
 8005b2c:	4931      	ldr	r1, [pc, #196]	; (8005bf4 <dyn2_execute+0xd4>)
 8005b2e:	f103 070c 	add.w	r7, r3, #12
 8005b32:	2620      	movs	r6, #32
 8005b34:	2400      	movs	r4, #0
 8005b36:	f386 8811 	msr	BASEPRI, r6
 8005b3a:	6808      	ldr	r0, [r1, #0]
 8005b3c:	6010      	str	r0, [r2, #0]
 8005b3e:	600a      	str	r2, [r1, #0]
 8005b40:	f384 8811 	msr	BASEPRI, r4
 8005b44:	429f      	cmp	r7, r3
 8005b46:	d002      	beq.n	8005b4e <dyn2_execute+0x2e>
 8005b48:	f853 2b04 	ldr.w	r2, [r3], #4
 8005b4c:	e7f3      	b.n	8005b36 <dyn2_execute+0x16>
 8005b4e:	492a      	ldr	r1, [pc, #168]	; (8005bf8 <dyn2_execute+0xd8>)
 8005b50:	4c2a      	ldr	r4, [pc, #168]	; (8005bfc <dyn2_execute+0xdc>)
 8005b52:	1e68      	subs	r0, r5, #1
 8005b54:	f7fc ffc4 	bl	8002ae0 <chThdCreateFromMemoryPool.constprop.56>
 8005b58:	4929      	ldr	r1, [pc, #164]	; (8005c00 <dyn2_execute+0xe0>)
 8005b5a:	6020      	str	r0, [r4, #0]
 8005b5c:	1ea8      	subs	r0, r5, #2
 8005b5e:	f7fc ffbf 	bl	8002ae0 <chThdCreateFromMemoryPool.constprop.56>
 8005b62:	4928      	ldr	r1, [pc, #160]	; (8005c04 <dyn2_execute+0xe4>)
 8005b64:	6060      	str	r0, [r4, #4]
 8005b66:	1ee8      	subs	r0, r5, #3
 8005b68:	f7fc ffba 	bl	8002ae0 <chThdCreateFromMemoryPool.constprop.56>
 8005b6c:	4926      	ldr	r1, [pc, #152]	; (8005c08 <dyn2_execute+0xe8>)
 8005b6e:	60a0      	str	r0, [r4, #8]
 8005b70:	1f28      	subs	r0, r5, #4
 8005b72:	f7fc ffb5 	bl	8002ae0 <chThdCreateFromMemoryPool.constprop.56>
 8005b76:	4925      	ldr	r1, [pc, #148]	; (8005c0c <dyn2_execute+0xec>)
 8005b78:	60e0      	str	r0, [r4, #12]
 8005b7a:	1f68      	subs	r0, r5, #5
 8005b7c:	f7fc ffb0 	bl	8002ae0 <chThdCreateFromMemoryPool.constprop.56>
 8005b80:	6821      	ldr	r1, [r4, #0]
 8005b82:	6120      	str	r0, [r4, #16]
 8005b84:	b141      	cbz	r1, 8005b98 <dyn2_execute+0x78>
 8005b86:	6861      	ldr	r1, [r4, #4]
 8005b88:	b131      	cbz	r1, 8005b98 <dyn2_execute+0x78>
 8005b8a:	68a1      	ldr	r1, [r4, #8]
 8005b8c:	b121      	cbz	r1, 8005b98 <dyn2_execute+0x78>
 8005b8e:	68e1      	ldr	r1, [r4, #12]
 8005b90:	b111      	cbz	r1, 8005b98 <dyn2_execute+0x78>
 8005b92:	fab0 f180 	clz	r1, r0
 8005b96:	0949      	lsrs	r1, r1, #5
 8005b98:	2001      	movs	r0, #1
 8005b9a:	f7fa fe09 	bl	80007b0 <_test_assert>
 8005b9e:	b100      	cbz	r0, 8005ba2 <dyn2_execute+0x82>
 8005ba0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005ba2:	f7ff fafd 	bl	80051a0 <test_wait_threads>
 8005ba6:	491a      	ldr	r1, [pc, #104]	; (8005c10 <dyn2_execute+0xf0>)
 8005ba8:	2002      	movs	r0, #2
 8005baa:	f7fa fdd9 	bl	8000760 <_test_assert_sequence>
 8005bae:	2800      	cmp	r0, #0
 8005bb0:	d1f6      	bne.n	8005ba0 <dyn2_execute+0x80>
 8005bb2:	4d10      	ldr	r5, [pc, #64]	; (8005bf4 <dyn2_execute+0xd4>)
 8005bb4:	2404      	movs	r4, #4
 8005bb6:	4628      	mov	r0, r5
 8005bb8:	f7fb f962 	bl	8000e80 <chPoolAlloc>
 8005bbc:	1c01      	adds	r1, r0, #0
 8005bbe:	bf18      	it	ne
 8005bc0:	2101      	movne	r1, #1
 8005bc2:	2003      	movs	r0, #3
 8005bc4:	f7fa fdf4 	bl	80007b0 <_test_assert>
 8005bc8:	2800      	cmp	r0, #0
 8005bca:	d1e9      	bne.n	8005ba0 <dyn2_execute+0x80>
 8005bcc:	3c01      	subs	r4, #1
 8005bce:	d1f2      	bne.n	8005bb6 <dyn2_execute+0x96>
 8005bd0:	4808      	ldr	r0, [pc, #32]	; (8005bf4 <dyn2_execute+0xd4>)
 8005bd2:	f7fb f955 	bl	8000e80 <chPoolAlloc>
 8005bd6:	fab0 f180 	clz	r1, r0
 8005bda:	0949      	lsrs	r1, r1, #5
 8005bdc:	2004      	movs	r0, #4
 8005bde:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005be2:	f7fa bde5 	b.w	80007b0 <_test_assert>
 8005be6:	bf00      	nop
 8005be8:	20001290 	.word	0x20001290
 8005bec:	200014f0 	.word	0x200014f0
 8005bf0:	08008cb4 	.word	0x08008cb4
 8005bf4:	200014c0 	.word	0x200014c0
 8005bf8:	08007fc0 	.word	0x08007fc0
 8005bfc:	20001b84 	.word	0x20001b84
 8005c00:	08007fb0 	.word	0x08007fb0
 8005c04:	08007fb4 	.word	0x08007fb4
 8005c08:	08008818 	.word	0x08008818
 8005c0c:	080080b4 	.word	0x080080b4
 8005c10:	08008220 	.word	0x08008220
	...

08005c20 <dyn1_execute>:
 8005c20:	b570      	push	{r4, r5, r6, lr}
 8005c22:	4b34      	ldr	r3, [pc, #208]	; (8005cf4 <dyn1_execute+0xd4>)
 8005c24:	4834      	ldr	r0, [pc, #208]	; (8005cf8 <dyn1_execute+0xd8>)
 8005c26:	699b      	ldr	r3, [r3, #24]
 8005c28:	4c34      	ldr	r4, [pc, #208]	; (8005cfc <dyn1_execute+0xdc>)
 8005c2a:	689d      	ldr	r5, [r3, #8]
 8005c2c:	b084      	sub	sp, #16
 8005c2e:	a902      	add	r1, sp, #8
 8005c30:	f7fe fd6e 	bl	8004710 <chHeapStatus>
 8005c34:	4b32      	ldr	r3, [pc, #200]	; (8005d00 <dyn1_execute+0xe0>)
 8005c36:	9300      	str	r3, [sp, #0]
 8005c38:	1e6a      	subs	r2, r5, #1
 8005c3a:	4b32      	ldr	r3, [pc, #200]	; (8005d04 <dyn1_execute+0xe4>)
 8005c3c:	482e      	ldr	r0, [pc, #184]	; (8005cf8 <dyn1_execute+0xd8>)
 8005c3e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005c42:	f7ff f81d 	bl	8004c80 <chThdCreateFromHeap>
 8005c46:	4b30      	ldr	r3, [pc, #192]	; (8005d08 <dyn1_execute+0xe8>)
 8005c48:	6020      	str	r0, [r4, #0]
 8005c4a:	1eaa      	subs	r2, r5, #2
 8005c4c:	9300      	str	r3, [sp, #0]
 8005c4e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005c52:	4b2c      	ldr	r3, [pc, #176]	; (8005d04 <dyn1_execute+0xe4>)
 8005c54:	4828      	ldr	r0, [pc, #160]	; (8005cf8 <dyn1_execute+0xd8>)
 8005c56:	f7ff f813 	bl	8004c80 <chThdCreateFromHeap>
 8005c5a:	a903      	add	r1, sp, #12
 8005c5c:	6060      	str	r0, [r4, #4]
 8005c5e:	4826      	ldr	r0, [pc, #152]	; (8005cf8 <dyn1_execute+0xd8>)
 8005c60:	f7fe fd56 	bl	8004710 <chHeapStatus>
 8005c64:	9903      	ldr	r1, [sp, #12]
 8005c66:	4824      	ldr	r0, [pc, #144]	; (8005cf8 <dyn1_execute+0xd8>)
 8005c68:	f7fe fe9a 	bl	80049a0 <chHeapAlloc>
 8005c6c:	4b27      	ldr	r3, [pc, #156]	; (8005d0c <dyn1_execute+0xec>)
 8005c6e:	9300      	str	r3, [sp, #0]
 8005c70:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005c74:	4606      	mov	r6, r0
 8005c76:	1eea      	subs	r2, r5, #3
 8005c78:	4b22      	ldr	r3, [pc, #136]	; (8005d04 <dyn1_execute+0xe4>)
 8005c7a:	481f      	ldr	r0, [pc, #124]	; (8005cf8 <dyn1_execute+0xd8>)
 8005c7c:	f7ff f800 	bl	8004c80 <chThdCreateFromHeap>
 8005c80:	60a0      	str	r0, [r4, #8]
 8005c82:	4630      	mov	r0, r6
 8005c84:	f7fe fd9c 	bl	80047c0 <chHeapFree>
 8005c88:	6821      	ldr	r1, [r4, #0]
 8005c8a:	b121      	cbz	r1, 8005c96 <dyn1_execute+0x76>
 8005c8c:	6861      	ldr	r1, [r4, #4]
 8005c8e:	b111      	cbz	r1, 8005c96 <dyn1_execute+0x76>
 8005c90:	68a1      	ldr	r1, [r4, #8]
 8005c92:	b331      	cbz	r1, 8005ce2 <dyn1_execute+0xc2>
 8005c94:	2100      	movs	r1, #0
 8005c96:	2001      	movs	r0, #1
 8005c98:	f7fa fd8a 	bl	80007b0 <_test_assert>
 8005c9c:	b108      	cbz	r0, 8005ca2 <dyn1_execute+0x82>
 8005c9e:	b004      	add	sp, #16
 8005ca0:	bd70      	pop	{r4, r5, r6, pc}
 8005ca2:	f7ff fa7d 	bl	80051a0 <test_wait_threads>
 8005ca6:	491a      	ldr	r1, [pc, #104]	; (8005d10 <dyn1_execute+0xf0>)
 8005ca8:	2002      	movs	r0, #2
 8005caa:	f7fa fd59 	bl	8000760 <_test_assert_sequence>
 8005cae:	2800      	cmp	r0, #0
 8005cb0:	d1f5      	bne.n	8005c9e <dyn1_execute+0x7e>
 8005cb2:	a903      	add	r1, sp, #12
 8005cb4:	4810      	ldr	r0, [pc, #64]	; (8005cf8 <dyn1_execute+0xd8>)
 8005cb6:	f7fe fd2b 	bl	8004710 <chHeapStatus>
 8005cba:	f1a0 0101 	sub.w	r1, r0, #1
 8005cbe:	fab1 f181 	clz	r1, r1
 8005cc2:	0949      	lsrs	r1, r1, #5
 8005cc4:	2003      	movs	r0, #3
 8005cc6:	f7fa fd73 	bl	80007b0 <_test_assert>
 8005cca:	2800      	cmp	r0, #0
 8005ccc:	d1e7      	bne.n	8005c9e <dyn1_execute+0x7e>
 8005cce:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8005cd2:	1ac9      	subs	r1, r1, r3
 8005cd4:	fab1 f181 	clz	r1, r1
 8005cd8:	0949      	lsrs	r1, r1, #5
 8005cda:	2004      	movs	r0, #4
 8005cdc:	f7fa fd68 	bl	80007b0 <_test_assert>
 8005ce0:	e7dd      	b.n	8005c9e <dyn1_execute+0x7e>
 8005ce2:	68e3      	ldr	r3, [r4, #12]
 8005ce4:	2b00      	cmp	r3, #0
 8005ce6:	d1d6      	bne.n	8005c96 <dyn1_execute+0x76>
 8005ce8:	6921      	ldr	r1, [r4, #16]
 8005cea:	fab1 f181 	clz	r1, r1
 8005cee:	0949      	lsrs	r1, r1, #5
 8005cf0:	e7d1      	b.n	8005c96 <dyn1_execute+0x76>
 8005cf2:	bf00      	nop
 8005cf4:	20001290 	.word	0x20001290
 8005cf8:	20001468 	.word	0x20001468
 8005cfc:	20001b84 	.word	0x20001b84
 8005d00:	08007fc0 	.word	0x08007fc0
 8005d04:	08000841 	.word	0x08000841
 8005d08:	08007fb0 	.word	0x08007fb0
 8005d0c:	08007fb4 	.word	0x08007fb4
 8005d10:	08007fa0 	.word	0x08007fa0
	...

08005d20 <evt2_execute>:
 8005d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d24:	2520      	movs	r5, #32
 8005d26:	b08f      	sub	sp, #60	; 0x3c
 8005d28:	f385 8811 	msr	BASEPRI, r5
 8005d2c:	4ca9      	ldr	r4, [pc, #676]	; (8005fd4 <evt2_execute+0x2b4>)
 8005d2e:	69a2      	ldr	r2, [r4, #24]
 8005d30:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005d32:	f043 0307 	orr.w	r3, r3, #7
 8005d36:	6353      	str	r3, [r2, #52]	; 0x34
 8005d38:	2300      	movs	r3, #0
 8005d3a:	f383 8811 	msr	BASEPRI, r3
 8005d3e:	f7fd f82f 	bl	8002da0 <chEvtWaitOne.constprop.36>
 8005d42:	f1a0 0101 	sub.w	r1, r0, #1
 8005d46:	fab1 f181 	clz	r1, r1
 8005d4a:	0949      	lsrs	r1, r1, #5
 8005d4c:	2001      	movs	r0, #1
 8005d4e:	f7fa fd2f 	bl	80007b0 <_test_assert>
 8005d52:	b110      	cbz	r0, 8005d5a <evt2_execute+0x3a>
 8005d54:	b00f      	add	sp, #60	; 0x3c
 8005d56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d5a:	f7fd f821 	bl	8002da0 <chEvtWaitOne.constprop.36>
 8005d5e:	f1a0 0102 	sub.w	r1, r0, #2
 8005d62:	fab1 f181 	clz	r1, r1
 8005d66:	0949      	lsrs	r1, r1, #5
 8005d68:	2002      	movs	r0, #2
 8005d6a:	f7fa fd21 	bl	80007b0 <_test_assert>
 8005d6e:	2800      	cmp	r0, #0
 8005d70:	d1f0      	bne.n	8005d54 <evt2_execute+0x34>
 8005d72:	f7fd f815 	bl	8002da0 <chEvtWaitOne.constprop.36>
 8005d76:	f1a0 0104 	sub.w	r1, r0, #4
 8005d7a:	fab1 f181 	clz	r1, r1
 8005d7e:	0949      	lsrs	r1, r1, #5
 8005d80:	2003      	movs	r0, #3
 8005d82:	f7fa fd15 	bl	80007b0 <_test_assert>
 8005d86:	2800      	cmp	r0, #0
 8005d88:	d1e4      	bne.n	8005d54 <evt2_execute+0x34>
 8005d8a:	f7fa fa99 	bl	80002c0 <chEvtGetAndClearEvents.constprop.40>
 8005d8e:	fab0 f180 	clz	r1, r0
 8005d92:	0949      	lsrs	r1, r1, #5
 8005d94:	2004      	movs	r0, #4
 8005d96:	f7fa fd0b 	bl	80007b0 <_test_assert>
 8005d9a:	4606      	mov	r6, r0
 8005d9c:	2800      	cmp	r0, #0
 8005d9e:	d1d9      	bne.n	8005d54 <evt2_execute+0x34>
 8005da0:	f7fd fef6 	bl	8003b90 <test_wait_tick>
 8005da4:	f385 8811 	msr	BASEPRI, r5
 8005da8:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 8005dac:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
 8005db0:	f386 8811 	msr	BASEPRI, r6
 8005db4:	69a1      	ldr	r1, [r4, #24]
 8005db6:	4b88      	ldr	r3, [pc, #544]	; (8005fd8 <evt2_execute+0x2b8>)
 8005db8:	688a      	ldr	r2, [r1, #8]
 8005dba:	4888      	ldr	r0, [pc, #544]	; (8005fdc <evt2_execute+0x2bc>)
 8005dbc:	9100      	str	r1, [sp, #0]
 8005dbe:	3a01      	subs	r2, #1
 8005dc0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005dc4:	f7fc ff1c 	bl	8002c00 <chThdCreateStatic>
 8005dc8:	4e85      	ldr	r6, [pc, #532]	; (8005fe0 <evt2_execute+0x2c0>)
 8005dca:	6030      	str	r0, [r6, #0]
 8005dcc:	f7fc ffe8 	bl	8002da0 <chEvtWaitOne.constprop.36>
 8005dd0:	f207 2226 	addw	r2, r7, #550	; 0x226
 8005dd4:	4681      	mov	r9, r0
 8005dd6:	f507 71fa 	add.w	r1, r7, #500	; 0x1f4
 8005dda:	2005      	movs	r0, #5
 8005ddc:	f7fa fca0 	bl	8000720 <_test_assert_time_window>
 8005de0:	2800      	cmp	r0, #0
 8005de2:	d1b7      	bne.n	8005d54 <evt2_execute+0x34>
 8005de4:	f1a9 0101 	sub.w	r1, r9, #1
 8005de8:	fab1 f181 	clz	r1, r1
 8005dec:	0949      	lsrs	r1, r1, #5
 8005dee:	2006      	movs	r0, #6
 8005df0:	f7fa fcde 	bl	80007b0 <_test_assert>
 8005df4:	2800      	cmp	r0, #0
 8005df6:	d1ad      	bne.n	8005d54 <evt2_execute+0x34>
 8005df8:	f7fa fa62 	bl	80002c0 <chEvtGetAndClearEvents.constprop.40>
 8005dfc:	fab0 f180 	clz	r1, r0
 8005e00:	0949      	lsrs	r1, r1, #5
 8005e02:	2007      	movs	r0, #7
 8005e04:	f7fa fcd4 	bl	80007b0 <_test_assert>
 8005e08:	4607      	mov	r7, r0
 8005e0a:	2800      	cmp	r0, #0
 8005e0c:	d1a2      	bne.n	8005d54 <evt2_execute+0x34>
 8005e0e:	f7ff f9c7 	bl	80051a0 <test_wait_threads>
 8005e12:	f385 8811 	msr	BASEPRI, r5
 8005e16:	69a2      	ldr	r2, [r4, #24]
 8005e18:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005e1a:	f043 0305 	orr.w	r3, r3, #5
 8005e1e:	6353      	str	r3, [r2, #52]	; 0x34
 8005e20:	f387 8811 	msr	BASEPRI, r7
 8005e24:	f7fc ffdc 	bl	8002de0 <chEvtWaitAny.constprop.35>
 8005e28:	1f47      	subs	r7, r0, #5
 8005e2a:	4279      	negs	r1, r7
 8005e2c:	4179      	adcs	r1, r7
 8005e2e:	2008      	movs	r0, #8
 8005e30:	f7fa fcbe 	bl	80007b0 <_test_assert>
 8005e34:	2800      	cmp	r0, #0
 8005e36:	d18d      	bne.n	8005d54 <evt2_execute+0x34>
 8005e38:	f7fa fa42 	bl	80002c0 <chEvtGetAndClearEvents.constprop.40>
 8005e3c:	fab0 f180 	clz	r1, r0
 8005e40:	0949      	lsrs	r1, r1, #5
 8005e42:	2009      	movs	r0, #9
 8005e44:	f7fa fcb4 	bl	80007b0 <_test_assert>
 8005e48:	4607      	mov	r7, r0
 8005e4a:	2800      	cmp	r0, #0
 8005e4c:	d182      	bne.n	8005d54 <evt2_execute+0x34>
 8005e4e:	f7fd fe9f 	bl	8003b90 <test_wait_tick>
 8005e52:	f385 8811 	msr	BASEPRI, r5
 8005e56:	f8d8 5024 	ldr.w	r5, [r8, #36]	; 0x24
 8005e5a:	f387 8811 	msr	BASEPRI, r7
 8005e5e:	69a1      	ldr	r1, [r4, #24]
 8005e60:	4b5d      	ldr	r3, [pc, #372]	; (8005fd8 <evt2_execute+0x2b8>)
 8005e62:	688a      	ldr	r2, [r1, #8]
 8005e64:	485d      	ldr	r0, [pc, #372]	; (8005fdc <evt2_execute+0x2bc>)
 8005e66:	9100      	str	r1, [sp, #0]
 8005e68:	3a01      	subs	r2, #1
 8005e6a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005e6e:	f7fc fec7 	bl	8002c00 <chThdCreateStatic>
 8005e72:	6030      	str	r0, [r6, #0]
 8005e74:	f7fc ffb4 	bl	8002de0 <chEvtWaitAny.constprop.35>
 8005e78:	f205 2226 	addw	r2, r5, #550	; 0x226
 8005e7c:	4607      	mov	r7, r0
 8005e7e:	f505 71fa 	add.w	r1, r5, #500	; 0x1f4
 8005e82:	200a      	movs	r0, #10
 8005e84:	f7fa fc4c 	bl	8000720 <_test_assert_time_window>
 8005e88:	2800      	cmp	r0, #0
 8005e8a:	f47f af63 	bne.w	8005d54 <evt2_execute+0x34>
 8005e8e:	1e78      	subs	r0, r7, #1
 8005e90:	4241      	negs	r1, r0
 8005e92:	4141      	adcs	r1, r0
 8005e94:	200b      	movs	r0, #11
 8005e96:	f7fa fc8b 	bl	80007b0 <_test_assert>
 8005e9a:	2800      	cmp	r0, #0
 8005e9c:	f47f af5a 	bne.w	8005d54 <evt2_execute+0x34>
 8005ea0:	f7fa fa0e 	bl	80002c0 <chEvtGetAndClearEvents.constprop.40>
 8005ea4:	fab0 f180 	clz	r1, r0
 8005ea8:	0949      	lsrs	r1, r1, #5
 8005eaa:	200c      	movs	r0, #12
 8005eac:	f7fa fc80 	bl	80007b0 <_test_assert>
 8005eb0:	4683      	mov	fp, r0
 8005eb2:	2800      	cmp	r0, #0
 8005eb4:	f47f af4e 	bne.w	8005d54 <evt2_execute+0x34>
 8005eb8:	4f4a      	ldr	r7, [pc, #296]	; (8005fe4 <evt2_execute+0x2c4>)
 8005eba:	4d4b      	ldr	r5, [pc, #300]	; (8005fe8 <evt2_execute+0x2c8>)
 8005ebc:	f7ff f970 	bl	80051a0 <test_wait_threads>
 8005ec0:	f04f 0a20 	mov.w	sl, #32
 8005ec4:	603f      	str	r7, [r7, #0]
 8005ec6:	602d      	str	r5, [r5, #0]
 8005ec8:	f38a 8811 	msr	BASEPRI, sl
 8005ecc:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 8005ed0:	683a      	ldr	r2, [r7, #0]
 8005ed2:	f849 2d28 	str.w	r2, [r9, #-40]!
 8005ed6:	69a0      	ldr	r0, [r4, #24]
 8005ed8:	f8cd b01c 	str.w	fp, [sp, #28]
 8005edc:	2101      	movs	r1, #1
 8005ede:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005ee2:	e9cd 0105 	strd	r0, r1, [sp, #20]
 8005ee6:	f8c7 9000 	str.w	r9, [r7]
 8005eea:	9208      	str	r2, [sp, #32]
 8005eec:	f38b 8811 	msr	BASEPRI, fp
 8005ef0:	f38a 8811 	msr	BASEPRI, sl
 8005ef4:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8005ef8:	6829      	ldr	r1, [r5, #0]
 8005efa:	f848 1d14 	str.w	r1, [r8, #-20]!
 8005efe:	69a0      	ldr	r0, [r4, #24]
 8005f00:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005f04:	2104      	movs	r1, #4
 8005f06:	920d      	str	r2, [sp, #52]	; 0x34
 8005f08:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8005f0c:	f8c5 8000 	str.w	r8, [r5]
 8005f10:	f38b 8811 	msr	BASEPRI, fp
 8005f14:	f7fd fe3c 	bl	8003b90 <test_wait_tick>
 8005f18:	f38a 8811 	msr	BASEPRI, sl
 8005f1c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005f20:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8005f22:	9302      	str	r3, [sp, #8]
 8005f24:	f38b 8811 	msr	BASEPRI, fp
 8005f28:	69a3      	ldr	r3, [r4, #24]
 8005f2a:	4930      	ldr	r1, [pc, #192]	; (8005fec <evt2_execute+0x2cc>)
 8005f2c:	689a      	ldr	r2, [r3, #8]
 8005f2e:	482b      	ldr	r0, [pc, #172]	; (8005fdc <evt2_execute+0x2bc>)
 8005f30:	9100      	str	r1, [sp, #0]
 8005f32:	4b2f      	ldr	r3, [pc, #188]	; (8005ff0 <evt2_execute+0x2d0>)
 8005f34:	3a01      	subs	r2, #1
 8005f36:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005f3a:	f7fc fe61 	bl	8002c00 <chThdCreateStatic>
 8005f3e:	9b02      	ldr	r3, [sp, #8]
 8005f40:	6030      	str	r0, [r6, #0]
 8005f42:	f503 71fa 	add.w	r1, r3, #500	; 0x1f4
 8005f46:	69a4      	ldr	r4, [r4, #24]
 8005f48:	f38a 8811 	msr	BASEPRI, sl
 8005f4c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005f4e:	f003 0205 	and.w	r2, r3, #5
 8005f52:	2a05      	cmp	r2, #5
 8005f54:	d007      	beq.n	8005f66 <evt2_execute+0x246>
 8005f56:	2305      	movs	r3, #5
 8005f58:	6223      	str	r3, [r4, #32]
 8005f5a:	200b      	movs	r0, #11
 8005f5c:	9103      	str	r1, [sp, #12]
 8005f5e:	f7fc fe87 	bl	8002c70 <chSchGoSleepS>
 8005f62:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005f64:	9903      	ldr	r1, [sp, #12]
 8005f66:	f023 0305 	bic.w	r3, r3, #5
 8005f6a:	6363      	str	r3, [r4, #52]	; 0x34
 8005f6c:	2300      	movs	r3, #0
 8005f6e:	f383 8811 	msr	BASEPRI, r3
 8005f72:	9b02      	ldr	r3, [sp, #8]
 8005f74:	200d      	movs	r0, #13
 8005f76:	f203 2226 	addw	r2, r3, #550	; 0x226
 8005f7a:	f7fa fbd1 	bl	8000720 <_test_assert_time_window>
 8005f7e:	2800      	cmp	r0, #0
 8005f80:	f47f aee8 	bne.w	8005d54 <evt2_execute+0x34>
 8005f84:	f7fa f99c 	bl	80002c0 <chEvtGetAndClearEvents.constprop.40>
 8005f88:	fab0 f180 	clz	r1, r0
 8005f8c:	0949      	lsrs	r1, r1, #5
 8005f8e:	200e      	movs	r0, #14
 8005f90:	f7fa fc0e 	bl	80007b0 <_test_assert>
 8005f94:	2800      	cmp	r0, #0
 8005f96:	f47f aedd 	bne.w	8005d54 <evt2_execute+0x34>
 8005f9a:	f7ff f901 	bl	80051a0 <test_wait_threads>
 8005f9e:	4649      	mov	r1, r9
 8005fa0:	4810      	ldr	r0, [pc, #64]	; (8005fe4 <evt2_execute+0x2c4>)
 8005fa2:	f7fa fff5 	bl	8000f90 <chEvtUnregister>
 8005fa6:	4641      	mov	r1, r8
 8005fa8:	480f      	ldr	r0, [pc, #60]	; (8005fe8 <evt2_execute+0x2c8>)
 8005faa:	f7fa fff1 	bl	8000f90 <chEvtUnregister>
 8005fae:	6839      	ldr	r1, [r7, #0]
 8005fb0:	1bca      	subs	r2, r1, r7
 8005fb2:	4251      	negs	r1, r2
 8005fb4:	4151      	adcs	r1, r2
 8005fb6:	200f      	movs	r0, #15
 8005fb8:	f7fa fbfa 	bl	80007b0 <_test_assert>
 8005fbc:	2800      	cmp	r0, #0
 8005fbe:	f47f aec9 	bne.w	8005d54 <evt2_execute+0x34>
 8005fc2:	6829      	ldr	r1, [r5, #0]
 8005fc4:	1b4b      	subs	r3, r1, r5
 8005fc6:	4259      	negs	r1, r3
 8005fc8:	4159      	adcs	r1, r3
 8005fca:	2010      	movs	r0, #16
 8005fcc:	f7fa fbf0 	bl	80007b0 <_test_assert>
 8005fd0:	e6c0      	b.n	8005d54 <evt2_execute+0x34>
 8005fd2:	bf00      	nop
 8005fd4:	20001290 	.word	0x20001290
 8005fd8:	08003af1 	.word	0x08003af1
 8005fdc:	200014f0 	.word	0x200014f0
 8005fe0:	20001b84 	.word	0x20001b84
 8005fe4:	20000808 	.word	0x20000808
 8005fe8:	2000080c 	.word	0x2000080c
 8005fec:	08007fc0 	.word	0x08007fc0
 8005ff0:	08003b21 	.word	0x08003b21
	...

08006000 <mtx8_execute>:
 8006000:	b570      	push	{r4, r5, r6, lr}
 8006002:	4b19      	ldr	r3, [pc, #100]	; (8006068 <mtx8_execute+0x68>)
 8006004:	4d19      	ldr	r5, [pc, #100]	; (800606c <mtx8_execute+0x6c>)
 8006006:	699b      	ldr	r3, [r3, #24]
 8006008:	4a19      	ldr	r2, [pc, #100]	; (8006070 <mtx8_execute+0x70>)
 800600a:	689e      	ldr	r6, [r3, #8]
 800600c:	4b19      	ldr	r3, [pc, #100]	; (8006074 <mtx8_execute+0x74>)
 800600e:	4c1a      	ldr	r4, [pc, #104]	; (8006078 <mtx8_execute+0x78>)
 8006010:	b082      	sub	sp, #8
 8006012:	4628      	mov	r0, r5
 8006014:	9200      	str	r2, [sp, #0]
 8006016:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800601a:	1c72      	adds	r2, r6, #1
 800601c:	f7fc fdf0 	bl	8002c00 <chThdCreateStatic>
 8006020:	4b16      	ldr	r3, [pc, #88]	; (800607c <mtx8_execute+0x7c>)
 8006022:	6020      	str	r0, [r4, #0]
 8006024:	1cb2      	adds	r2, r6, #2
 8006026:	9300      	str	r3, [sp, #0]
 8006028:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 800602c:	4b14      	ldr	r3, [pc, #80]	; (8006080 <mtx8_execute+0x80>)
 800602e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006032:	f7fc fde5 	bl	8002c00 <chThdCreateStatic>
 8006036:	4b13      	ldr	r3, [pc, #76]	; (8006084 <mtx8_execute+0x84>)
 8006038:	6060      	str	r0, [r4, #4]
 800603a:	1cf2      	adds	r2, r6, #3
 800603c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006040:	9300      	str	r3, [sp, #0]
 8006042:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8006046:	4b10      	ldr	r3, [pc, #64]	; (8006088 <mtx8_execute+0x88>)
 8006048:	f7fc fdda 	bl	8002c00 <chThdCreateStatic>
 800604c:	60a0      	str	r0, [r4, #8]
 800604e:	f7fc fd6f 	bl	8002b30 <chCondSignal.constprop.48>
 8006052:	f7fc fd6d 	bl	8002b30 <chCondSignal.constprop.48>
 8006056:	f7ff f8a3 	bl	80051a0 <test_wait_threads>
 800605a:	490c      	ldr	r1, [pc, #48]	; (800608c <mtx8_execute+0x8c>)
 800605c:	2001      	movs	r0, #1
 800605e:	b002      	add	sp, #8
 8006060:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006064:	f7fa bb7c 	b.w	8000760 <_test_assert_sequence>
 8006068:	20001290 	.word	0x20001290
 800606c:	200014f0 	.word	0x200014f0
 8006070:	08007fc0 	.word	0x08007fc0
 8006074:	080044a1 	.word	0x080044a1
 8006078:	20001b84 	.word	0x20001b84
 800607c:	08007fb4 	.word	0x08007fb4
 8006080:	08004531 	.word	0x08004531
 8006084:	08007fb0 	.word	0x08007fb0
 8006088:	080045a1 	.word	0x080045a1
 800608c:	08008070 	.word	0x08008070

08006090 <mtx7_execute>:
 8006090:	b530      	push	{r4, r5, lr}
 8006092:	4b2c      	ldr	r3, [pc, #176]	; (8006144 <mtx7_execute+0xb4>)
 8006094:	4a2c      	ldr	r2, [pc, #176]	; (8006148 <mtx7_execute+0xb8>)
 8006096:	6999      	ldr	r1, [r3, #24]
 8006098:	482c      	ldr	r0, [pc, #176]	; (800614c <mtx7_execute+0xbc>)
 800609a:	688d      	ldr	r5, [r1, #8]
 800609c:	4b2c      	ldr	r3, [pc, #176]	; (8006150 <mtx7_execute+0xc0>)
 800609e:	4c2d      	ldr	r4, [pc, #180]	; (8006154 <mtx7_execute+0xc4>)
 80060a0:	b083      	sub	sp, #12
 80060a2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80060a6:	9200      	str	r2, [sp, #0]
 80060a8:	1c6a      	adds	r2, r5, #1
 80060aa:	f7fc fda9 	bl	8002c00 <chThdCreateStatic>
 80060ae:	4b2a      	ldr	r3, [pc, #168]	; (8006158 <mtx7_execute+0xc8>)
 80060b0:	6020      	str	r0, [r4, #0]
 80060b2:	1caa      	adds	r2, r5, #2
 80060b4:	9300      	str	r3, [sp, #0]
 80060b6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80060ba:	4b25      	ldr	r3, [pc, #148]	; (8006150 <mtx7_execute+0xc0>)
 80060bc:	4827      	ldr	r0, [pc, #156]	; (800615c <mtx7_execute+0xcc>)
 80060be:	f7fc fd9f 	bl	8002c00 <chThdCreateStatic>
 80060c2:	4b27      	ldr	r3, [pc, #156]	; (8006160 <mtx7_execute+0xd0>)
 80060c4:	6060      	str	r0, [r4, #4]
 80060c6:	1cea      	adds	r2, r5, #3
 80060c8:	9300      	str	r3, [sp, #0]
 80060ca:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80060ce:	4b20      	ldr	r3, [pc, #128]	; (8006150 <mtx7_execute+0xc0>)
 80060d0:	4824      	ldr	r0, [pc, #144]	; (8006164 <mtx7_execute+0xd4>)
 80060d2:	f7fc fd95 	bl	8002c00 <chThdCreateStatic>
 80060d6:	4b24      	ldr	r3, [pc, #144]	; (8006168 <mtx7_execute+0xd8>)
 80060d8:	60a0      	str	r0, [r4, #8]
 80060da:	1d2a      	adds	r2, r5, #4
 80060dc:	9300      	str	r3, [sp, #0]
 80060de:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80060e2:	4b1b      	ldr	r3, [pc, #108]	; (8006150 <mtx7_execute+0xc0>)
 80060e4:	4821      	ldr	r0, [pc, #132]	; (800616c <mtx7_execute+0xdc>)
 80060e6:	f7fc fd8b 	bl	8002c00 <chThdCreateStatic>
 80060ea:	4b21      	ldr	r3, [pc, #132]	; (8006170 <mtx7_execute+0xe0>)
 80060ec:	60e0      	str	r0, [r4, #12]
 80060ee:	1d6a      	adds	r2, r5, #5
 80060f0:	9300      	str	r3, [sp, #0]
 80060f2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80060f6:	4b16      	ldr	r3, [pc, #88]	; (8006150 <mtx7_execute+0xc0>)
 80060f8:	481e      	ldr	r0, [pc, #120]	; (8006174 <mtx7_execute+0xe4>)
 80060fa:	f7fc fd81 	bl	8002c00 <chThdCreateStatic>
 80060fe:	2320      	movs	r3, #32
 8006100:	6120      	str	r0, [r4, #16]
 8006102:	f383 8811 	msr	BASEPRI, r3
 8006106:	4c1c      	ldr	r4, [pc, #112]	; (8006178 <mtx7_execute+0xe8>)
 8006108:	6823      	ldr	r3, [r4, #0]
 800610a:	42a3      	cmp	r3, r4
 800610c:	d00b      	beq.n	8006126 <mtx7_execute+0x96>
 800610e:	f06f 0501 	mvn.w	r5, #1
 8006112:	681a      	ldr	r2, [r3, #0]
 8006114:	6022      	str	r2, [r4, #0]
 8006116:	4618      	mov	r0, r3
 8006118:	6054      	str	r4, [r2, #4]
 800611a:	f7fb f851 	bl	80011c0 <chSchReadyI>
 800611e:	6823      	ldr	r3, [r4, #0]
 8006120:	6205      	str	r5, [r0, #32]
 8006122:	42a3      	cmp	r3, r4
 8006124:	d1f5      	bne.n	8006112 <mtx7_execute+0x82>
 8006126:	f7fc fb7b 	bl	8002820 <chSchRescheduleS>
 800612a:	2300      	movs	r3, #0
 800612c:	f383 8811 	msr	BASEPRI, r3
 8006130:	f7ff f836 	bl	80051a0 <test_wait_threads>
 8006134:	4911      	ldr	r1, [pc, #68]	; (800617c <mtx7_execute+0xec>)
 8006136:	2001      	movs	r0, #1
 8006138:	b003      	add	sp, #12
 800613a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800613e:	f7fa bb0f 	b.w	8000760 <_test_assert_sequence>
 8006142:	bf00      	nop
 8006144:	20001290 	.word	0x20001290
 8006148:	080080b4 	.word	0x080080b4
 800614c:	200014f0 	.word	0x200014f0
 8006150:	08004531 	.word	0x08004531
 8006154:	20001b84 	.word	0x20001b84
 8006158:	08008818 	.word	0x08008818
 800615c:	20001638 	.word	0x20001638
 8006160:	08007fb4 	.word	0x08007fb4
 8006164:	20001780 	.word	0x20001780
 8006168:	08007fb0 	.word	0x08007fb0
 800616c:	200018c8 	.word	0x200018c8
 8006170:	08007fc0 	.word	0x08007fc0
 8006174:	20001a10 	.word	0x20001a10
 8006178:	20000800 	.word	0x20000800
 800617c:	080080b0 	.word	0x080080b0

08006180 <mtx6_execute>:
 8006180:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006182:	4b2c      	ldr	r3, [pc, #176]	; (8006234 <mtx6_execute+0xb4>)
 8006184:	4e2c      	ldr	r6, [pc, #176]	; (8006238 <mtx6_execute+0xb8>)
 8006186:	699b      	ldr	r3, [r3, #24]
 8006188:	4d2c      	ldr	r5, [pc, #176]	; (800623c <mtx6_execute+0xbc>)
 800618a:	689f      	ldr	r7, [r3, #8]
 800618c:	4b2c      	ldr	r3, [pc, #176]	; (8006240 <mtx6_execute+0xc0>)
 800618e:	4c2d      	ldr	r4, [pc, #180]	; (8006244 <mtx6_execute+0xc4>)
 8006190:	b083      	sub	sp, #12
 8006192:	1c7a      	adds	r2, r7, #1
 8006194:	9300      	str	r3, [sp, #0]
 8006196:	4628      	mov	r0, r5
 8006198:	4633      	mov	r3, r6
 800619a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800619e:	f7fc fd2f 	bl	8002c00 <chThdCreateStatic>
 80061a2:	4929      	ldr	r1, [pc, #164]	; (8006248 <mtx6_execute+0xc8>)
 80061a4:	6020      	str	r0, [r4, #0]
 80061a6:	1cba      	adds	r2, r7, #2
 80061a8:	4633      	mov	r3, r6
 80061aa:	9100      	str	r1, [sp, #0]
 80061ac:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 80061b0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80061b4:	f7fc fd24 	bl	8002c00 <chThdCreateStatic>
 80061b8:	4924      	ldr	r1, [pc, #144]	; (800624c <mtx6_execute+0xcc>)
 80061ba:	6060      	str	r0, [r4, #4]
 80061bc:	1cfa      	adds	r2, r7, #3
 80061be:	4633      	mov	r3, r6
 80061c0:	9100      	str	r1, [sp, #0]
 80061c2:	f505 7024 	add.w	r0, r5, #656	; 0x290
 80061c6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80061ca:	f7fc fd19 	bl	8002c00 <chThdCreateStatic>
 80061ce:	4920      	ldr	r1, [pc, #128]	; (8006250 <mtx6_execute+0xd0>)
 80061d0:	60a0      	str	r0, [r4, #8]
 80061d2:	1d3a      	adds	r2, r7, #4
 80061d4:	4633      	mov	r3, r6
 80061d6:	9100      	str	r1, [sp, #0]
 80061d8:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 80061dc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80061e0:	f7fc fd0e 	bl	8002c00 <chThdCreateStatic>
 80061e4:	491b      	ldr	r1, [pc, #108]	; (8006254 <mtx6_execute+0xd4>)
 80061e6:	60e0      	str	r0, [r4, #12]
 80061e8:	4633      	mov	r3, r6
 80061ea:	9100      	str	r1, [sp, #0]
 80061ec:	1d7a      	adds	r2, r7, #5
 80061ee:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 80061f2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80061f6:	f7fc fd03 	bl	8002c00 <chThdCreateStatic>
 80061fa:	2320      	movs	r3, #32
 80061fc:	6120      	str	r0, [r4, #16]
 80061fe:	f383 8811 	msr	BASEPRI, r3
 8006202:	f7fa fff5 	bl	80011f0 <chCondSignalI.constprop.47>
 8006206:	f7fa fff3 	bl	80011f0 <chCondSignalI.constprop.47>
 800620a:	f7fa fff1 	bl	80011f0 <chCondSignalI.constprop.47>
 800620e:	f7fa ffef 	bl	80011f0 <chCondSignalI.constprop.47>
 8006212:	f7fa ffed 	bl	80011f0 <chCondSignalI.constprop.47>
 8006216:	f7fc fb03 	bl	8002820 <chSchRescheduleS>
 800621a:	2300      	movs	r3, #0
 800621c:	f383 8811 	msr	BASEPRI, r3
 8006220:	f7fe ffbe 	bl	80051a0 <test_wait_threads>
 8006224:	490c      	ldr	r1, [pc, #48]	; (8006258 <mtx6_execute+0xd8>)
 8006226:	2001      	movs	r0, #1
 8006228:	b003      	add	sp, #12
 800622a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800622e:	f7fa ba97 	b.w	8000760 <_test_assert_sequence>
 8006232:	bf00      	nop
 8006234:	20001290 	.word	0x20001290
 8006238:	08004531 	.word	0x08004531
 800623c:	200014f0 	.word	0x200014f0
 8006240:	080080b4 	.word	0x080080b4
 8006244:	20001b84 	.word	0x20001b84
 8006248:	08008818 	.word	0x08008818
 800624c:	08007fb4 	.word	0x08007fb4
 8006250:	08007fb0 	.word	0x08007fb0
 8006254:	08007fc0 	.word	0x08007fc0
 8006258:	080080b0 	.word	0x080080b0
 800625c:	00000000 	.word	0x00000000

08006260 <mtx4_execute>:
 8006260:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006264:	4d87      	ldr	r5, [pc, #540]	; (8006484 <mtx4_execute+0x224>)
 8006266:	4a88      	ldr	r2, [pc, #544]	; (8006488 <mtx4_execute+0x228>)
 8006268:	69a9      	ldr	r1, [r5, #24]
 800626a:	4b88      	ldr	r3, [pc, #544]	; (800648c <mtx4_execute+0x22c>)
 800626c:	688c      	ldr	r4, [r1, #8]
 800626e:	4888      	ldr	r0, [pc, #544]	; (8006490 <mtx4_execute+0x230>)
 8006270:	4e88      	ldr	r6, [pc, #544]	; (8006494 <mtx4_execute+0x234>)
 8006272:	b082      	sub	sp, #8
 8006274:	1c67      	adds	r7, r4, #1
 8006276:	9200      	str	r2, [sp, #0]
 8006278:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800627c:	463a      	mov	r2, r7
 800627e:	f7fc fcbf 	bl	8002c00 <chThdCreateStatic>
 8006282:	f104 0802 	add.w	r8, r4, #2
 8006286:	4b84      	ldr	r3, [pc, #528]	; (8006498 <mtx4_execute+0x238>)
 8006288:	6030      	str	r0, [r6, #0]
 800628a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800628e:	4642      	mov	r2, r8
 8006290:	9300      	str	r3, [sp, #0]
 8006292:	4882      	ldr	r0, [pc, #520]	; (800649c <mtx4_execute+0x23c>)
 8006294:	4b82      	ldr	r3, [pc, #520]	; (80064a0 <mtx4_execute+0x240>)
 8006296:	f7fc fcb3 	bl	8002c00 <chThdCreateStatic>
 800629a:	6070      	str	r0, [r6, #4]
 800629c:	4881      	ldr	r0, [pc, #516]	; (80064a4 <mtx4_execute+0x244>)
 800629e:	f7fe f8b7 	bl	8004410 <chMtxLock>
 80062a2:	69ab      	ldr	r3, [r5, #24]
 80062a4:	6899      	ldr	r1, [r3, #8]
 80062a6:	1b09      	subs	r1, r1, r4
 80062a8:	fab1 f181 	clz	r1, r1
 80062ac:	2001      	movs	r0, #1
 80062ae:	0949      	lsrs	r1, r1, #5
 80062b0:	f7fa fa7e 	bl	80007b0 <_test_assert>
 80062b4:	b110      	cbz	r0, 80062bc <mtx4_execute+0x5c>
 80062b6:	b002      	add	sp, #8
 80062b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80062bc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80062c0:	f7fd fb66 	bl	8003990 <chThdSleep>
 80062c4:	69ab      	ldr	r3, [r5, #24]
 80062c6:	6899      	ldr	r1, [r3, #8]
 80062c8:	1bc9      	subs	r1, r1, r7
 80062ca:	fab1 f181 	clz	r1, r1
 80062ce:	2002      	movs	r0, #2
 80062d0:	0949      	lsrs	r1, r1, #5
 80062d2:	f7fa fa6d 	bl	80007b0 <_test_assert>
 80062d6:	2800      	cmp	r0, #0
 80062d8:	d1ed      	bne.n	80062b6 <mtx4_execute+0x56>
 80062da:	4873      	ldr	r0, [pc, #460]	; (80064a8 <mtx4_execute+0x248>)
 80062dc:	f7fe f898 	bl	8004410 <chMtxLock>
 80062e0:	69ab      	ldr	r3, [r5, #24]
 80062e2:	6899      	ldr	r1, [r3, #8]
 80062e4:	1bc9      	subs	r1, r1, r7
 80062e6:	fab1 f181 	clz	r1, r1
 80062ea:	2003      	movs	r0, #3
 80062ec:	0949      	lsrs	r1, r1, #5
 80062ee:	f7fa fa5f 	bl	80007b0 <_test_assert>
 80062f2:	2800      	cmp	r0, #0
 80062f4:	d1df      	bne.n	80062b6 <mtx4_execute+0x56>
 80062f6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80062fa:	f7fd fb49 	bl	8003990 <chThdSleep>
 80062fe:	69ab      	ldr	r3, [r5, #24]
 8006300:	6899      	ldr	r1, [r3, #8]
 8006302:	eba1 0108 	sub.w	r1, r1, r8
 8006306:	fab1 f181 	clz	r1, r1
 800630a:	2004      	movs	r0, #4
 800630c:	0949      	lsrs	r1, r1, #5
 800630e:	f7fa fa4f 	bl	80007b0 <_test_assert>
 8006312:	2800      	cmp	r0, #0
 8006314:	d1cf      	bne.n	80062b6 <mtx4_execute+0x56>
 8006316:	4864      	ldr	r0, [pc, #400]	; (80064a8 <mtx4_execute+0x248>)
 8006318:	f7fc fc22 	bl	8002b60 <chMtxUnlock>
 800631c:	69ab      	ldr	r3, [r5, #24]
 800631e:	6899      	ldr	r1, [r3, #8]
 8006320:	1bc9      	subs	r1, r1, r7
 8006322:	fab1 f181 	clz	r1, r1
 8006326:	2005      	movs	r0, #5
 8006328:	0949      	lsrs	r1, r1, #5
 800632a:	f7fa fa41 	bl	80007b0 <_test_assert>
 800632e:	2800      	cmp	r0, #0
 8006330:	d1c1      	bne.n	80062b6 <mtx4_execute+0x56>
 8006332:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8006336:	f7fd fb2b 	bl	8003990 <chThdSleep>
 800633a:	69ab      	ldr	r3, [r5, #24]
 800633c:	6899      	ldr	r1, [r3, #8]
 800633e:	1bc9      	subs	r1, r1, r7
 8006340:	fab1 f181 	clz	r1, r1
 8006344:	2006      	movs	r0, #6
 8006346:	0949      	lsrs	r1, r1, #5
 8006348:	f7fa fa32 	bl	80007b0 <_test_assert>
 800634c:	2800      	cmp	r0, #0
 800634e:	d1b2      	bne.n	80062b6 <mtx4_execute+0x56>
 8006350:	f7fc fa8e 	bl	8002870 <chMtxUnlockAll>
 8006354:	69ab      	ldr	r3, [r5, #24]
 8006356:	6899      	ldr	r1, [r3, #8]
 8006358:	1b09      	subs	r1, r1, r4
 800635a:	fab1 f181 	clz	r1, r1
 800635e:	2007      	movs	r0, #7
 8006360:	0949      	lsrs	r1, r1, #5
 8006362:	f7fa fa25 	bl	80007b0 <_test_assert>
 8006366:	2800      	cmp	r0, #0
 8006368:	d1a5      	bne.n	80062b6 <mtx4_execute+0x56>
 800636a:	f7fe ff19 	bl	80051a0 <test_wait_threads>
 800636e:	4b4f      	ldr	r3, [pc, #316]	; (80064ac <mtx4_execute+0x24c>)
 8006370:	9300      	str	r3, [sp, #0]
 8006372:	463a      	mov	r2, r7
 8006374:	4b45      	ldr	r3, [pc, #276]	; (800648c <mtx4_execute+0x22c>)
 8006376:	4846      	ldr	r0, [pc, #280]	; (8006490 <mtx4_execute+0x230>)
 8006378:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800637c:	f7fc fc40 	bl	8002c00 <chThdCreateStatic>
 8006380:	4b4b      	ldr	r3, [pc, #300]	; (80064b0 <mtx4_execute+0x250>)
 8006382:	6030      	str	r0, [r6, #0]
 8006384:	4642      	mov	r2, r8
 8006386:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800638a:	9300      	str	r3, [sp, #0]
 800638c:	4843      	ldr	r0, [pc, #268]	; (800649c <mtx4_execute+0x23c>)
 800638e:	4b44      	ldr	r3, [pc, #272]	; (80064a0 <mtx4_execute+0x240>)
 8006390:	f7fc fc36 	bl	8002c00 <chThdCreateStatic>
 8006394:	6070      	str	r0, [r6, #4]
 8006396:	4843      	ldr	r0, [pc, #268]	; (80064a4 <mtx4_execute+0x244>)
 8006398:	f7fe f83a 	bl	8004410 <chMtxLock>
 800639c:	69ab      	ldr	r3, [r5, #24]
 800639e:	6899      	ldr	r1, [r3, #8]
 80063a0:	1b0a      	subs	r2, r1, r4
 80063a2:	4251      	negs	r1, r2
 80063a4:	4151      	adcs	r1, r2
 80063a6:	2008      	movs	r0, #8
 80063a8:	f7fa fa02 	bl	80007b0 <_test_assert>
 80063ac:	2800      	cmp	r0, #0
 80063ae:	d182      	bne.n	80062b6 <mtx4_execute+0x56>
 80063b0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80063b4:	f7fd faec 	bl	8003990 <chThdSleep>
 80063b8:	69ab      	ldr	r3, [r5, #24]
 80063ba:	6899      	ldr	r1, [r3, #8]
 80063bc:	1bcb      	subs	r3, r1, r7
 80063be:	4259      	negs	r1, r3
 80063c0:	4159      	adcs	r1, r3
 80063c2:	2009      	movs	r0, #9
 80063c4:	f7fa f9f4 	bl	80007b0 <_test_assert>
 80063c8:	2800      	cmp	r0, #0
 80063ca:	f47f af74 	bne.w	80062b6 <mtx4_execute+0x56>
 80063ce:	4836      	ldr	r0, [pc, #216]	; (80064a8 <mtx4_execute+0x248>)
 80063d0:	f7fe f81e 	bl	8004410 <chMtxLock>
 80063d4:	69ab      	ldr	r3, [r5, #24]
 80063d6:	6899      	ldr	r1, [r3, #8]
 80063d8:	eba1 0e07 	sub.w	lr, r1, r7
 80063dc:	f1de 0100 	rsbs	r1, lr, #0
 80063e0:	eb41 010e 	adc.w	r1, r1, lr
 80063e4:	200a      	movs	r0, #10
 80063e6:	f7fa f9e3 	bl	80007b0 <_test_assert>
 80063ea:	2800      	cmp	r0, #0
 80063ec:	f47f af63 	bne.w	80062b6 <mtx4_execute+0x56>
 80063f0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80063f4:	f7fd facc 	bl	8003990 <chThdSleep>
 80063f8:	69ab      	ldr	r3, [r5, #24]
 80063fa:	6899      	ldr	r1, [r3, #8]
 80063fc:	eba1 0c08 	sub.w	ip, r1, r8
 8006400:	f1dc 0100 	rsbs	r1, ip, #0
 8006404:	eb41 010c 	adc.w	r1, r1, ip
 8006408:	200b      	movs	r0, #11
 800640a:	f7fa f9d1 	bl	80007b0 <_test_assert>
 800640e:	4606      	mov	r6, r0
 8006410:	2800      	cmp	r0, #0
 8006412:	f47f af50 	bne.w	80062b6 <mtx4_execute+0x56>
 8006416:	2320      	movs	r3, #32
 8006418:	f383 8811 	msr	BASEPRI, r3
 800641c:	4822      	ldr	r0, [pc, #136]	; (80064a8 <mtx4_execute+0x248>)
 800641e:	f7fb f877 	bl	8001510 <chMtxUnlockS>
 8006422:	f7fc f9fd 	bl	8002820 <chSchRescheduleS>
 8006426:	f386 8811 	msr	BASEPRI, r6
 800642a:	69ab      	ldr	r3, [r5, #24]
 800642c:	6899      	ldr	r1, [r3, #8]
 800642e:	1bce      	subs	r6, r1, r7
 8006430:	4271      	negs	r1, r6
 8006432:	4171      	adcs	r1, r6
 8006434:	200c      	movs	r0, #12
 8006436:	f7fa f9bb 	bl	80007b0 <_test_assert>
 800643a:	2800      	cmp	r0, #0
 800643c:	f47f af3b 	bne.w	80062b6 <mtx4_execute+0x56>
 8006440:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8006444:	f7fd faa4 	bl	8003990 <chThdSleep>
 8006448:	69ab      	ldr	r3, [r5, #24]
 800644a:	6899      	ldr	r1, [r3, #8]
 800644c:	1bca      	subs	r2, r1, r7
 800644e:	4251      	negs	r1, r2
 8006450:	4151      	adcs	r1, r2
 8006452:	200d      	movs	r0, #13
 8006454:	f7fa f9ac 	bl	80007b0 <_test_assert>
 8006458:	2800      	cmp	r0, #0
 800645a:	f47f af2c 	bne.w	80062b6 <mtx4_execute+0x56>
 800645e:	f7fc fa07 	bl	8002870 <chMtxUnlockAll>
 8006462:	69ab      	ldr	r3, [r5, #24]
 8006464:	6899      	ldr	r1, [r3, #8]
 8006466:	1b0b      	subs	r3, r1, r4
 8006468:	4259      	negs	r1, r3
 800646a:	4159      	adcs	r1, r3
 800646c:	200e      	movs	r0, #14
 800646e:	f7fa f99f 	bl	80007b0 <_test_assert>
 8006472:	2800      	cmp	r0, #0
 8006474:	f47f af1f 	bne.w	80062b6 <mtx4_execute+0x56>
 8006478:	b002      	add	sp, #8
 800647a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800647e:	f7fe be8f 	b.w	80051a0 <test_wait_threads>
 8006482:	bf00      	nop
 8006484:	20001290 	.word	0x20001290
 8006488:	08007fb0 	.word	0x08007fb0
 800648c:	080046b1 	.word	0x080046b1
 8006490:	200014f0 	.word	0x200014f0
 8006494:	20001b84 	.word	0x20001b84
 8006498:	08007fc0 	.word	0x08007fc0
 800649c:	20001638 	.word	0x20001638
 80064a0:	080046d1 	.word	0x080046d1
 80064a4:	20000864 	.word	0x20000864
 80064a8:	20000854 	.word	0x20000854
 80064ac:	08008818 	.word	0x08008818
 80064b0:	08007fb4 	.word	0x08007fb4
	...

080064c0 <mtx1_execute>:
 80064c0:	b570      	push	{r4, r5, r6, lr}
 80064c2:	4e29      	ldr	r6, [pc, #164]	; (8006568 <mtx1_execute+0xa8>)
 80064c4:	4829      	ldr	r0, [pc, #164]	; (800656c <mtx1_execute+0xac>)
 80064c6:	69b3      	ldr	r3, [r6, #24]
 80064c8:	4d29      	ldr	r5, [pc, #164]	; (8006570 <mtx1_execute+0xb0>)
 80064ca:	689c      	ldr	r4, [r3, #8]
 80064cc:	b082      	sub	sp, #8
 80064ce:	f7fd ff9f 	bl	8004410 <chMtxLock>
 80064d2:	4b28      	ldr	r3, [pc, #160]	; (8006574 <mtx1_execute+0xb4>)
 80064d4:	9300      	str	r3, [sp, #0]
 80064d6:	1c62      	adds	r2, r4, #1
 80064d8:	4b27      	ldr	r3, [pc, #156]	; (8006578 <mtx1_execute+0xb8>)
 80064da:	4828      	ldr	r0, [pc, #160]	; (800657c <mtx1_execute+0xbc>)
 80064dc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80064e0:	f7fc fb8e 	bl	8002c00 <chThdCreateStatic>
 80064e4:	4b26      	ldr	r3, [pc, #152]	; (8006580 <mtx1_execute+0xc0>)
 80064e6:	6028      	str	r0, [r5, #0]
 80064e8:	1ca2      	adds	r2, r4, #2
 80064ea:	9300      	str	r3, [sp, #0]
 80064ec:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80064f0:	4b21      	ldr	r3, [pc, #132]	; (8006578 <mtx1_execute+0xb8>)
 80064f2:	4824      	ldr	r0, [pc, #144]	; (8006584 <mtx1_execute+0xc4>)
 80064f4:	f7fc fb84 	bl	8002c00 <chThdCreateStatic>
 80064f8:	4b23      	ldr	r3, [pc, #140]	; (8006588 <mtx1_execute+0xc8>)
 80064fa:	6068      	str	r0, [r5, #4]
 80064fc:	1ce2      	adds	r2, r4, #3
 80064fe:	9300      	str	r3, [sp, #0]
 8006500:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006504:	4b1c      	ldr	r3, [pc, #112]	; (8006578 <mtx1_execute+0xb8>)
 8006506:	4821      	ldr	r0, [pc, #132]	; (800658c <mtx1_execute+0xcc>)
 8006508:	f7fc fb7a 	bl	8002c00 <chThdCreateStatic>
 800650c:	4b20      	ldr	r3, [pc, #128]	; (8006590 <mtx1_execute+0xd0>)
 800650e:	60a8      	str	r0, [r5, #8]
 8006510:	1d22      	adds	r2, r4, #4
 8006512:	9300      	str	r3, [sp, #0]
 8006514:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006518:	4b17      	ldr	r3, [pc, #92]	; (8006578 <mtx1_execute+0xb8>)
 800651a:	481e      	ldr	r0, [pc, #120]	; (8006594 <mtx1_execute+0xd4>)
 800651c:	f7fc fb70 	bl	8002c00 <chThdCreateStatic>
 8006520:	4b1d      	ldr	r3, [pc, #116]	; (8006598 <mtx1_execute+0xd8>)
 8006522:	60e8      	str	r0, [r5, #12]
 8006524:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006528:	1d62      	adds	r2, r4, #5
 800652a:	9300      	str	r3, [sp, #0]
 800652c:	481b      	ldr	r0, [pc, #108]	; (800659c <mtx1_execute+0xdc>)
 800652e:	4b12      	ldr	r3, [pc, #72]	; (8006578 <mtx1_execute+0xb8>)
 8006530:	f7fc fb66 	bl	8002c00 <chThdCreateStatic>
 8006534:	6128      	str	r0, [r5, #16]
 8006536:	480d      	ldr	r0, [pc, #52]	; (800656c <mtx1_execute+0xac>)
 8006538:	f7fc fb12 	bl	8002b60 <chMtxUnlock>
 800653c:	f7fe fe30 	bl	80051a0 <test_wait_threads>
 8006540:	69b3      	ldr	r3, [r6, #24]
 8006542:	6899      	ldr	r1, [r3, #8]
 8006544:	1b09      	subs	r1, r1, r4
 8006546:	fab1 f181 	clz	r1, r1
 800654a:	2001      	movs	r0, #1
 800654c:	0949      	lsrs	r1, r1, #5
 800654e:	f7fa f92f 	bl	80007b0 <_test_assert>
 8006552:	b108      	cbz	r0, 8006558 <mtx1_execute+0x98>
 8006554:	b002      	add	sp, #8
 8006556:	bd70      	pop	{r4, r5, r6, pc}
 8006558:	4911      	ldr	r1, [pc, #68]	; (80065a0 <mtx1_execute+0xe0>)
 800655a:	2002      	movs	r0, #2
 800655c:	b002      	add	sp, #8
 800655e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006562:	f7fa b8fd 	b.w	8000760 <_test_assert_sequence>
 8006566:	bf00      	nop
 8006568:	20001290 	.word	0x20001290
 800656c:	20000854 	.word	0x20000854
 8006570:	20001b84 	.word	0x20001b84
 8006574:	080080b4 	.word	0x080080b4
 8006578:	080046f1 	.word	0x080046f1
 800657c:	200014f0 	.word	0x200014f0
 8006580:	08008818 	.word	0x08008818
 8006584:	20001638 	.word	0x20001638
 8006588:	08007fb4 	.word	0x08007fb4
 800658c:	20001780 	.word	0x20001780
 8006590:	08007fb0 	.word	0x08007fb0
 8006594:	200018c8 	.word	0x200018c8
 8006598:	08007fc0 	.word	0x08007fc0
 800659c:	20001a10 	.word	0x20001a10
 80065a0:	080080b0 	.word	0x080080b0
	...

080065b0 <sem2_execute>:
 80065b0:	b570      	push	{r4, r5, r6, lr}
 80065b2:	2320      	movs	r3, #32
 80065b4:	b082      	sub	sp, #8
 80065b6:	f383 8811 	msr	BASEPRI, r3
 80065ba:	4c4b      	ldr	r4, [pc, #300]	; (80066e8 <sem2_execute+0x138>)
 80065bc:	68a3      	ldr	r3, [r4, #8]
 80065be:	3b01      	subs	r3, #1
 80065c0:	bf5a      	itte	pl
 80065c2:	60a3      	strpl	r3, [r4, #8]
 80065c4:	2100      	movpl	r1, #0
 80065c6:	2101      	movmi	r1, #1
 80065c8:	2300      	movs	r3, #0
 80065ca:	f383 8811 	msr	BASEPRI, r3
 80065ce:	2001      	movs	r0, #1
 80065d0:	f7fa f8ee 	bl	80007b0 <_test_assert>
 80065d4:	b108      	cbz	r0, 80065da <sem2_execute+0x2a>
 80065d6:	b002      	add	sp, #8
 80065d8:	bd70      	pop	{r4, r5, r6, pc}
 80065da:	6821      	ldr	r1, [r4, #0]
 80065dc:	1b09      	subs	r1, r1, r4
 80065de:	fab1 f181 	clz	r1, r1
 80065e2:	2002      	movs	r0, #2
 80065e4:	0949      	lsrs	r1, r1, #5
 80065e6:	f7fa f8e3 	bl	80007b0 <_test_assert>
 80065ea:	2800      	cmp	r0, #0
 80065ec:	d1f3      	bne.n	80065d6 <sem2_execute+0x26>
 80065ee:	68a1      	ldr	r1, [r4, #8]
 80065f0:	fab1 f181 	clz	r1, r1
 80065f4:	0949      	lsrs	r1, r1, #5
 80065f6:	2003      	movs	r0, #3
 80065f8:	f7fa f8da 	bl	80007b0 <_test_assert>
 80065fc:	4601      	mov	r1, r0
 80065fe:	2800      	cmp	r0, #0
 8006600:	d1e9      	bne.n	80065d6 <sem2_execute+0x26>
 8006602:	4a3a      	ldr	r2, [pc, #232]	; (80066ec <sem2_execute+0x13c>)
 8006604:	4b3a      	ldr	r3, [pc, #232]	; (80066f0 <sem2_execute+0x140>)
 8006606:	6992      	ldr	r2, [r2, #24]
 8006608:	483a      	ldr	r0, [pc, #232]	; (80066f4 <sem2_execute+0x144>)
 800660a:	6892      	ldr	r2, [r2, #8]
 800660c:	9100      	str	r1, [sp, #0]
 800660e:	3a01      	subs	r2, #1
 8006610:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006614:	f7fc faf4 	bl	8002c00 <chThdCreateStatic>
 8006618:	4b37      	ldr	r3, [pc, #220]	; (80066f8 <sem2_execute+0x148>)
 800661a:	6018      	str	r0, [r3, #0]
 800661c:	f241 3088 	movw	r0, #5000	; 0x1388
 8006620:	f7fc fc36 	bl	8002e90 <chSemWaitTimeout.constprop.54>
 8006624:	4605      	mov	r5, r0
 8006626:	f7fe fdbb 	bl	80051a0 <test_wait_threads>
 800662a:	fab5 f185 	clz	r1, r5
 800662e:	0949      	lsrs	r1, r1, #5
 8006630:	2004      	movs	r0, #4
 8006632:	f7fa f8bd 	bl	80007b0 <_test_assert>
 8006636:	2800      	cmp	r0, #0
 8006638:	d1cd      	bne.n	80065d6 <sem2_execute+0x26>
 800663a:	6821      	ldr	r1, [r4, #0]
 800663c:	1b09      	subs	r1, r1, r4
 800663e:	fab1 f181 	clz	r1, r1
 8006642:	2005      	movs	r0, #5
 8006644:	0949      	lsrs	r1, r1, #5
 8006646:	f7fa f8b3 	bl	80007b0 <_test_assert>
 800664a:	2800      	cmp	r0, #0
 800664c:	d1c3      	bne.n	80065d6 <sem2_execute+0x26>
 800664e:	68a1      	ldr	r1, [r4, #8]
 8006650:	fab1 f181 	clz	r1, r1
 8006654:	0949      	lsrs	r1, r1, #5
 8006656:	2006      	movs	r0, #6
 8006658:	f7fa f8aa 	bl	80007b0 <_test_assert>
 800665c:	4605      	mov	r5, r0
 800665e:	2800      	cmp	r0, #0
 8006660:	d1b9      	bne.n	80065d6 <sem2_execute+0x26>
 8006662:	f7fd fa95 	bl	8003b90 <test_wait_tick>
 8006666:	2320      	movs	r3, #32
 8006668:	f383 8811 	msr	BASEPRI, r3
 800666c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8006670:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 8006672:	f385 8811 	msr	BASEPRI, r5
 8006676:	2541      	movs	r5, #65	; 0x41
 8006678:	4628      	mov	r0, r5
 800667a:	f7fa f8b1 	bl	80007e0 <test_emit_token>
 800667e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8006682:	f7fc fc05 	bl	8002e90 <chSemWaitTimeout.constprop.54>
 8006686:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 800668a:	fab1 f181 	clz	r1, r1
 800668e:	0949      	lsrs	r1, r1, #5
 8006690:	2007      	movs	r0, #7
 8006692:	f7fa f88d 	bl	80007b0 <_test_assert>
 8006696:	2800      	cmp	r0, #0
 8006698:	d19d      	bne.n	80065d6 <sem2_execute+0x26>
 800669a:	6821      	ldr	r1, [r4, #0]
 800669c:	1b09      	subs	r1, r1, r4
 800669e:	fab1 f181 	clz	r1, r1
 80066a2:	2008      	movs	r0, #8
 80066a4:	0949      	lsrs	r1, r1, #5
 80066a6:	f7fa f883 	bl	80007b0 <_test_assert>
 80066aa:	2800      	cmp	r0, #0
 80066ac:	d193      	bne.n	80065d6 <sem2_execute+0x26>
 80066ae:	68a1      	ldr	r1, [r4, #8]
 80066b0:	fab1 f181 	clz	r1, r1
 80066b4:	0949      	lsrs	r1, r1, #5
 80066b6:	2009      	movs	r0, #9
 80066b8:	f7fa f87a 	bl	80007b0 <_test_assert>
 80066bc:	3501      	adds	r5, #1
 80066be:	b2ed      	uxtb	r5, r5
 80066c0:	2800      	cmp	r0, #0
 80066c2:	d188      	bne.n	80065d6 <sem2_execute+0x26>
 80066c4:	2d46      	cmp	r5, #70	; 0x46
 80066c6:	d1d7      	bne.n	8006678 <sem2_execute+0xc8>
 80066c8:	490c      	ldr	r1, [pc, #48]	; (80066fc <sem2_execute+0x14c>)
 80066ca:	200a      	movs	r0, #10
 80066cc:	f7fa f848 	bl	8000760 <_test_assert_sequence>
 80066d0:	2800      	cmp	r0, #0
 80066d2:	d180      	bne.n	80065d6 <sem2_execute+0x26>
 80066d4:	f606 12d8 	addw	r2, r6, #2520	; 0x9d8
 80066d8:	f606 11c4 	addw	r1, r6, #2500	; 0x9c4
 80066dc:	200b      	movs	r0, #11
 80066de:	b002      	add	sp, #8
 80066e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80066e4:	f7fa b81c 	b.w	8000720 <_test_assert_time_window>
 80066e8:	200008cc 	.word	0x200008cc
 80066ec:	20001290 	.word	0x20001290
 80066f0:	08003b61 	.word	0x08003b61
 80066f4:	200014f0 	.word	0x200014f0
 80066f8:	20001b84 	.word	0x20001b84
 80066fc:	080080b0 	.word	0x080080b0

08006700 <sem1_execute>:
 8006700:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006702:	4d4b      	ldr	r5, [pc, #300]	; (8006830 <sem1_execute+0x130>)
 8006704:	4f4b      	ldr	r7, [pc, #300]	; (8006834 <sem1_execute+0x134>)
 8006706:	69aa      	ldr	r2, [r5, #24]
 8006708:	4b4b      	ldr	r3, [pc, #300]	; (8006838 <sem1_execute+0x138>)
 800670a:	6892      	ldr	r2, [r2, #8]
 800670c:	484b      	ldr	r0, [pc, #300]	; (800683c <sem1_execute+0x13c>)
 800670e:	4c4c      	ldr	r4, [pc, #304]	; (8006840 <sem1_execute+0x140>)
 8006710:	b083      	sub	sp, #12
 8006712:	3205      	adds	r2, #5
 8006714:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006718:	9700      	str	r7, [sp, #0]
 800671a:	f7fc fa71 	bl	8002c00 <chThdCreateStatic>
 800671e:	69ab      	ldr	r3, [r5, #24]
 8006720:	689a      	ldr	r2, [r3, #8]
 8006722:	4b48      	ldr	r3, [pc, #288]	; (8006844 <sem1_execute+0x144>)
 8006724:	6020      	str	r0, [r4, #0]
 8006726:	3201      	adds	r2, #1
 8006728:	9300      	str	r3, [sp, #0]
 800672a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800672e:	4b42      	ldr	r3, [pc, #264]	; (8006838 <sem1_execute+0x138>)
 8006730:	4845      	ldr	r0, [pc, #276]	; (8006848 <sem1_execute+0x148>)
 8006732:	f7fc fa65 	bl	8002c00 <chThdCreateStatic>
 8006736:	69aa      	ldr	r2, [r5, #24]
 8006738:	4b44      	ldr	r3, [pc, #272]	; (800684c <sem1_execute+0x14c>)
 800673a:	6892      	ldr	r2, [r2, #8]
 800673c:	6060      	str	r0, [r4, #4]
 800673e:	3203      	adds	r2, #3
 8006740:	9300      	str	r3, [sp, #0]
 8006742:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006746:	4b3c      	ldr	r3, [pc, #240]	; (8006838 <sem1_execute+0x138>)
 8006748:	4841      	ldr	r0, [pc, #260]	; (8006850 <sem1_execute+0x150>)
 800674a:	f7fc fa59 	bl	8002c00 <chThdCreateStatic>
 800674e:	69aa      	ldr	r2, [r5, #24]
 8006750:	4b40      	ldr	r3, [pc, #256]	; (8006854 <sem1_execute+0x154>)
 8006752:	6892      	ldr	r2, [r2, #8]
 8006754:	60a0      	str	r0, [r4, #8]
 8006756:	3204      	adds	r2, #4
 8006758:	9300      	str	r3, [sp, #0]
 800675a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800675e:	4b36      	ldr	r3, [pc, #216]	; (8006838 <sem1_execute+0x138>)
 8006760:	483d      	ldr	r0, [pc, #244]	; (8006858 <sem1_execute+0x158>)
 8006762:	f7fc fa4d 	bl	8002c00 <chThdCreateStatic>
 8006766:	69aa      	ldr	r2, [r5, #24]
 8006768:	4b3c      	ldr	r3, [pc, #240]	; (800685c <sem1_execute+0x15c>)
 800676a:	6892      	ldr	r2, [r2, #8]
 800676c:	60e0      	str	r0, [r4, #12]
 800676e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006772:	3202      	adds	r2, #2
 8006774:	9300      	str	r3, [sp, #0]
 8006776:	483a      	ldr	r0, [pc, #232]	; (8006860 <sem1_execute+0x160>)
 8006778:	4b2f      	ldr	r3, [pc, #188]	; (8006838 <sem1_execute+0x138>)
 800677a:	f7fc fa41 	bl	8002c00 <chThdCreateStatic>
 800677e:	6120      	str	r0, [r4, #16]
 8006780:	4838      	ldr	r0, [pc, #224]	; (8006864 <sem1_execute+0x164>)
 8006782:	f7fc fa1d 	bl	8002bc0 <chSemSignal>
 8006786:	4837      	ldr	r0, [pc, #220]	; (8006864 <sem1_execute+0x164>)
 8006788:	f7fc fa1a 	bl	8002bc0 <chSemSignal>
 800678c:	4835      	ldr	r0, [pc, #212]	; (8006864 <sem1_execute+0x164>)
 800678e:	f7fc fa17 	bl	8002bc0 <chSemSignal>
 8006792:	4834      	ldr	r0, [pc, #208]	; (8006864 <sem1_execute+0x164>)
 8006794:	f7fc fa14 	bl	8002bc0 <chSemSignal>
 8006798:	4832      	ldr	r0, [pc, #200]	; (8006864 <sem1_execute+0x164>)
 800679a:	f7fc fa11 	bl	8002bc0 <chSemSignal>
 800679e:	f7fe fcff 	bl	80051a0 <test_wait_threads>
 80067a2:	4931      	ldr	r1, [pc, #196]	; (8006868 <sem1_execute+0x168>)
 80067a4:	2001      	movs	r0, #1
 80067a6:	f7f9 ffdb 	bl	8000760 <_test_assert_sequence>
 80067aa:	b108      	cbz	r0, 80067b0 <sem1_execute+0xb0>
 80067ac:	b003      	add	sp, #12
 80067ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80067b0:	69aa      	ldr	r2, [r5, #24]
 80067b2:	4b21      	ldr	r3, [pc, #132]	; (8006838 <sem1_execute+0x138>)
 80067b4:	6892      	ldr	r2, [r2, #8]
 80067b6:	9700      	str	r7, [sp, #0]
 80067b8:	4606      	mov	r6, r0
 80067ba:	3205      	adds	r2, #5
 80067bc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80067c0:	481e      	ldr	r0, [pc, #120]	; (800683c <sem1_execute+0x13c>)
 80067c2:	f7fc fa1d 	bl	8002c00 <chThdCreateStatic>
 80067c6:	2320      	movs	r3, #32
 80067c8:	6020      	str	r0, [r4, #0]
 80067ca:	f383 8811 	msr	BASEPRI, r3
 80067ce:	2502      	movs	r5, #2
 80067d0:	4c24      	ldr	r4, [pc, #144]	; (8006864 <sem1_execute+0x164>)
 80067d2:	e002      	b.n	80067da <sem1_execute+0xda>
 80067d4:	2d01      	cmp	r5, #1
 80067d6:	d00e      	beq.n	80067f6 <sem1_execute+0xf6>
 80067d8:	2501      	movs	r5, #1
 80067da:	68a3      	ldr	r3, [r4, #8]
 80067dc:	3301      	adds	r3, #1
 80067de:	2b00      	cmp	r3, #0
 80067e0:	60a3      	str	r3, [r4, #8]
 80067e2:	dcf7      	bgt.n	80067d4 <sem1_execute+0xd4>
 80067e4:	6820      	ldr	r0, [r4, #0]
 80067e6:	6803      	ldr	r3, [r0, #0]
 80067e8:	6023      	str	r3, [r4, #0]
 80067ea:	605c      	str	r4, [r3, #4]
 80067ec:	f7fa fce8 	bl	80011c0 <chSchReadyI>
 80067f0:	2d01      	cmp	r5, #1
 80067f2:	6206      	str	r6, [r0, #32]
 80067f4:	d1f0      	bne.n	80067d8 <sem1_execute+0xd8>
 80067f6:	f7fc f813 	bl	8002820 <chSchRescheduleS>
 80067fa:	2500      	movs	r5, #0
 80067fc:	f385 8811 	msr	BASEPRI, r5
 8006800:	f7fe fcce 	bl	80051a0 <test_wait_threads>
 8006804:	2320      	movs	r3, #32
 8006806:	f383 8811 	msr	BASEPRI, r3
 800680a:	68a1      	ldr	r1, [r4, #8]
 800680c:	f1a1 0101 	sub.w	r1, r1, #1
 8006810:	fab1 f181 	clz	r1, r1
 8006814:	2002      	movs	r0, #2
 8006816:	0949      	lsrs	r1, r1, #5
 8006818:	f7f9 ffca 	bl	80007b0 <_test_assert>
 800681c:	b918      	cbnz	r0, 8006826 <sem1_execute+0x126>
 800681e:	f380 8811 	msr	BASEPRI, r0
 8006822:	b003      	add	sp, #12
 8006824:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006826:	f385 8811 	msr	BASEPRI, r5
 800682a:	b003      	add	sp, #12
 800682c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800682e:	bf00      	nop
 8006830:	20001290 	.word	0x20001290
 8006834:	08007fc0 	.word	0x08007fc0
 8006838:	08005071 	.word	0x08005071
 800683c:	200014f0 	.word	0x200014f0
 8006840:	20001b84 	.word	0x20001b84
 8006844:	08007fb0 	.word	0x08007fb0
 8006848:	20001638 	.word	0x20001638
 800684c:	08007fb4 	.word	0x08007fb4
 8006850:	20001780 	.word	0x20001780
 8006854:	08008818 	.word	0x08008818
 8006858:	200018c8 	.word	0x200018c8
 800685c:	080080b4 	.word	0x080080b4
 8006860:	20001a10 	.word	0x20001a10
 8006864:	200008cc 	.word	0x200008cc
 8006868:	080080b0 	.word	0x080080b0
 800686c:	00000000 	.word	0x00000000

08006870 <thd2_execute>:
 8006870:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006874:	4f2d      	ldr	r7, [pc, #180]	; (800692c <thd2_execute+0xbc>)
 8006876:	4e2e      	ldr	r6, [pc, #184]	; (8006930 <thd2_execute+0xc0>)
 8006878:	69bb      	ldr	r3, [r7, #24]
 800687a:	4d2e      	ldr	r5, [pc, #184]	; (8006934 <thd2_execute+0xc4>)
 800687c:	689a      	ldr	r2, [r3, #8]
 800687e:	4b2e      	ldr	r3, [pc, #184]	; (8006938 <thd2_execute+0xc8>)
 8006880:	4c2e      	ldr	r4, [pc, #184]	; (800693c <thd2_execute+0xcc>)
 8006882:	b082      	sub	sp, #8
 8006884:	3a04      	subs	r2, #4
 8006886:	9300      	str	r3, [sp, #0]
 8006888:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 800688c:	4633      	mov	r3, r6
 800688e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006892:	f7fc f9b5 	bl	8002c00 <chThdCreateStatic>
 8006896:	69bb      	ldr	r3, [r7, #24]
 8006898:	4929      	ldr	r1, [pc, #164]	; (8006940 <thd2_execute+0xd0>)
 800689a:	689a      	ldr	r2, [r3, #8]
 800689c:	6060      	str	r0, [r4, #4]
 800689e:	4633      	mov	r3, r6
 80068a0:	9100      	str	r1, [sp, #0]
 80068a2:	3a05      	subs	r2, #5
 80068a4:	4628      	mov	r0, r5
 80068a6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80068aa:	f7fc f9a9 	bl	8002c00 <chThdCreateStatic>
 80068ae:	69bb      	ldr	r3, [r7, #24]
 80068b0:	4924      	ldr	r1, [pc, #144]	; (8006944 <thd2_execute+0xd4>)
 80068b2:	689a      	ldr	r2, [r3, #8]
 80068b4:	6020      	str	r0, [r4, #0]
 80068b6:	4633      	mov	r3, r6
 80068b8:	9100      	str	r1, [sp, #0]
 80068ba:	3a01      	subs	r2, #1
 80068bc:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 80068c0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80068c4:	f7fc f99c 	bl	8002c00 <chThdCreateStatic>
 80068c8:	69bb      	ldr	r3, [r7, #24]
 80068ca:	491f      	ldr	r1, [pc, #124]	; (8006948 <thd2_execute+0xd8>)
 80068cc:	689a      	ldr	r2, [r3, #8]
 80068ce:	6120      	str	r0, [r4, #16]
 80068d0:	9100      	str	r1, [sp, #0]
 80068d2:	3a02      	subs	r2, #2
 80068d4:	4633      	mov	r3, r6
 80068d6:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 80068da:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80068de:	f7fc f98f 	bl	8002c00 <chThdCreateStatic>
 80068e2:	f04f 0820 	mov.w	r8, #32
 80068e6:	60e0      	str	r0, [r4, #12]
 80068e8:	f388 8811 	msr	BASEPRI, r8
 80068ec:	69ba      	ldr	r2, [r7, #24]
 80068ee:	4b17      	ldr	r3, [pc, #92]	; (800694c <thd2_execute+0xdc>)
 80068f0:	6892      	ldr	r2, [r2, #8]
 80068f2:	9300      	str	r3, [sp, #0]
 80068f4:	3a03      	subs	r2, #3
 80068f6:	4633      	mov	r3, r6
 80068f8:	f505 7024 	add.w	r0, r5, #656	; 0x290
 80068fc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006900:	f7fa fbfe 	bl	8001100 <chThdCreateI>
 8006904:	2500      	movs	r5, #0
 8006906:	60a0      	str	r0, [r4, #8]
 8006908:	f385 8811 	msr	BASEPRI, r5
 800690c:	68a0      	ldr	r0, [r4, #8]
 800690e:	f388 8811 	msr	BASEPRI, r8
 8006912:	f7fa fc55 	bl	80011c0 <chSchReadyI>
 8006916:	f385 8811 	msr	BASEPRI, r5
 800691a:	f7fe fc41 	bl	80051a0 <test_wait_threads>
 800691e:	490c      	ldr	r1, [pc, #48]	; (8006950 <thd2_execute+0xe0>)
 8006920:	2001      	movs	r0, #1
 8006922:	b002      	add	sp, #8
 8006924:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006928:	f7f9 bf1a 	b.w	8000760 <_test_assert_sequence>
 800692c:	20001290 	.word	0x20001290
 8006930:	08000831 	.word	0x08000831
 8006934:	200014f0 	.word	0x200014f0
 8006938:	08008818 	.word	0x08008818
 800693c:	20001b84 	.word	0x20001b84
 8006940:	080080b4 	.word	0x080080b4
 8006944:	08007fc0 	.word	0x08007fc0
 8006948:	08007fb0 	.word	0x08007fb0
 800694c:	08007fb4 	.word	0x08007fb4
 8006950:	080080b0 	.word	0x080080b0
	...

08006960 <thd1_execute>:
 8006960:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006962:	4f27      	ldr	r7, [pc, #156]	; (8006a00 <thd1_execute+0xa0>)
 8006964:	4e27      	ldr	r6, [pc, #156]	; (8006a04 <thd1_execute+0xa4>)
 8006966:	69bb      	ldr	r3, [r7, #24]
 8006968:	4d27      	ldr	r5, [pc, #156]	; (8006a08 <thd1_execute+0xa8>)
 800696a:	689a      	ldr	r2, [r3, #8]
 800696c:	4b27      	ldr	r3, [pc, #156]	; (8006a0c <thd1_execute+0xac>)
 800696e:	4c28      	ldr	r4, [pc, #160]	; (8006a10 <thd1_execute+0xb0>)
 8006970:	b083      	sub	sp, #12
 8006972:	3a05      	subs	r2, #5
 8006974:	9300      	str	r3, [sp, #0]
 8006976:	4628      	mov	r0, r5
 8006978:	4633      	mov	r3, r6
 800697a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800697e:	f7fc f93f 	bl	8002c00 <chThdCreateStatic>
 8006982:	69bb      	ldr	r3, [r7, #24]
 8006984:	4923      	ldr	r1, [pc, #140]	; (8006a14 <thd1_execute+0xb4>)
 8006986:	689a      	ldr	r2, [r3, #8]
 8006988:	6020      	str	r0, [r4, #0]
 800698a:	4633      	mov	r3, r6
 800698c:	9100      	str	r1, [sp, #0]
 800698e:	3a04      	subs	r2, #4
 8006990:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8006994:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006998:	f7fc f932 	bl	8002c00 <chThdCreateStatic>
 800699c:	69bb      	ldr	r3, [r7, #24]
 800699e:	491e      	ldr	r1, [pc, #120]	; (8006a18 <thd1_execute+0xb8>)
 80069a0:	689a      	ldr	r2, [r3, #8]
 80069a2:	6060      	str	r0, [r4, #4]
 80069a4:	4633      	mov	r3, r6
 80069a6:	9100      	str	r1, [sp, #0]
 80069a8:	3a03      	subs	r2, #3
 80069aa:	f505 7024 	add.w	r0, r5, #656	; 0x290
 80069ae:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80069b2:	f7fc f925 	bl	8002c00 <chThdCreateStatic>
 80069b6:	69bb      	ldr	r3, [r7, #24]
 80069b8:	4918      	ldr	r1, [pc, #96]	; (8006a1c <thd1_execute+0xbc>)
 80069ba:	689a      	ldr	r2, [r3, #8]
 80069bc:	60a0      	str	r0, [r4, #8]
 80069be:	4633      	mov	r3, r6
 80069c0:	9100      	str	r1, [sp, #0]
 80069c2:	3a02      	subs	r2, #2
 80069c4:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 80069c8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80069cc:	f7fc f918 	bl	8002c00 <chThdCreateStatic>
 80069d0:	69bb      	ldr	r3, [r7, #24]
 80069d2:	4913      	ldr	r1, [pc, #76]	; (8006a20 <thd1_execute+0xc0>)
 80069d4:	689a      	ldr	r2, [r3, #8]
 80069d6:	60e0      	str	r0, [r4, #12]
 80069d8:	3a01      	subs	r2, #1
 80069da:	4633      	mov	r3, r6
 80069dc:	9100      	str	r1, [sp, #0]
 80069de:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 80069e2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80069e6:	f7fc f90b 	bl	8002c00 <chThdCreateStatic>
 80069ea:	6120      	str	r0, [r4, #16]
 80069ec:	f7fe fbd8 	bl	80051a0 <test_wait_threads>
 80069f0:	490c      	ldr	r1, [pc, #48]	; (8006a24 <thd1_execute+0xc4>)
 80069f2:	2001      	movs	r0, #1
 80069f4:	b003      	add	sp, #12
 80069f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80069fa:	f7f9 beb1 	b.w	8000760 <_test_assert_sequence>
 80069fe:	bf00      	nop
 8006a00:	20001290 	.word	0x20001290
 8006a04:	08000831 	.word	0x08000831
 8006a08:	200014f0 	.word	0x200014f0
 8006a0c:	080080b4 	.word	0x080080b4
 8006a10:	20001b84 	.word	0x20001b84
 8006a14:	08008818 	.word	0x08008818
 8006a18:	08007fb4 	.word	0x08007fb4
 8006a1c:	08007fb0 	.word	0x08007fb0
 8006a20:	08007fc0 	.word	0x08007fc0
 8006a24:	080080b0 	.word	0x080080b0
	...

08006a30 <TestThread>:
 8006a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006a34:	4ca0      	ldr	r4, [pc, #640]	; (8006cb8 <TestThread+0x288>)
 8006a36:	4da1      	ldr	r5, [pc, #644]	; (8006cbc <TestThread+0x28c>)
 8006a38:	6020      	str	r0, [r4, #0]
 8006a3a:	b085      	sub	sp, #20
 8006a3c:	48a0      	ldr	r0, [pc, #640]	; (8006cc0 <TestThread+0x290>)
 8006a3e:	f7f9 ff07 	bl	8000850 <test_println>
 8006a42:	48a0      	ldr	r0, [pc, #640]	; (8006cc4 <TestThread+0x294>)
 8006a44:	f7f9 ff04 	bl	8000850 <test_println>
 8006a48:	489f      	ldr	r0, [pc, #636]	; (8006cc8 <TestThread+0x298>)
 8006a4a:	f7f9 ff01 	bl	8000850 <test_println>
 8006a4e:	212a      	movs	r1, #42	; 0x2a
 8006a50:	6820      	ldr	r0, [r4, #0]
 8006a52:	6803      	ldr	r3, [r0, #0]
 8006a54:	689b      	ldr	r3, [r3, #8]
 8006a56:	4798      	blx	r3
 8006a58:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006a5c:	2900      	cmp	r1, #0
 8006a5e:	d1f7      	bne.n	8006a50 <TestThread+0x20>
 8006a60:	489a      	ldr	r0, [pc, #616]	; (8006ccc <TestThread+0x29c>)
 8006a62:	4d9b      	ldr	r5, [pc, #620]	; (8006cd0 <TestThread+0x2a0>)
 8006a64:	f7f9 fef4 	bl	8000850 <test_println>
 8006a68:	212a      	movs	r1, #42	; 0x2a
 8006a6a:	6820      	ldr	r0, [r4, #0]
 8006a6c:	6803      	ldr	r3, [r0, #0]
 8006a6e:	689b      	ldr	r3, [r3, #8]
 8006a70:	4798      	blx	r3
 8006a72:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006a76:	2900      	cmp	r1, #0
 8006a78:	d1f7      	bne.n	8006a6a <TestThread+0x3a>
 8006a7a:	4896      	ldr	r0, [pc, #600]	; (8006cd4 <TestThread+0x2a4>)
 8006a7c:	4d96      	ldr	r5, [pc, #600]	; (8006cd8 <TestThread+0x2a8>)
 8006a7e:	f7f9 fee7 	bl	8000850 <test_println>
 8006a82:	212a      	movs	r1, #42	; 0x2a
 8006a84:	6820      	ldr	r0, [r4, #0]
 8006a86:	6803      	ldr	r3, [r0, #0]
 8006a88:	689b      	ldr	r3, [r3, #8]
 8006a8a:	4798      	blx	r3
 8006a8c:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006a90:	2900      	cmp	r1, #0
 8006a92:	d1f7      	bne.n	8006a84 <TestThread+0x54>
 8006a94:	4891      	ldr	r0, [pc, #580]	; (8006cdc <TestThread+0x2ac>)
 8006a96:	4d92      	ldr	r5, [pc, #584]	; (8006ce0 <TestThread+0x2b0>)
 8006a98:	f7f9 feda 	bl	8000850 <test_println>
 8006a9c:	212a      	movs	r1, #42	; 0x2a
 8006a9e:	6820      	ldr	r0, [r4, #0]
 8006aa0:	6803      	ldr	r3, [r0, #0]
 8006aa2:	689b      	ldr	r3, [r3, #8]
 8006aa4:	4798      	blx	r3
 8006aa6:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006aaa:	2900      	cmp	r1, #0
 8006aac:	d1f7      	bne.n	8006a9e <TestThread+0x6e>
 8006aae:	488d      	ldr	r0, [pc, #564]	; (8006ce4 <TestThread+0x2b4>)
 8006ab0:	4d8d      	ldr	r5, [pc, #564]	; (8006ce8 <TestThread+0x2b8>)
 8006ab2:	f7f9 fecd 	bl	8000850 <test_println>
 8006ab6:	212a      	movs	r1, #42	; 0x2a
 8006ab8:	6820      	ldr	r0, [r4, #0]
 8006aba:	6803      	ldr	r3, [r0, #0]
 8006abc:	689b      	ldr	r3, [r3, #8]
 8006abe:	4798      	blx	r3
 8006ac0:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006ac4:	2900      	cmp	r1, #0
 8006ac6:	d1f7      	bne.n	8006ab8 <TestThread+0x88>
 8006ac8:	4888      	ldr	r0, [pc, #544]	; (8006cec <TestThread+0x2bc>)
 8006aca:	4d89      	ldr	r5, [pc, #548]	; (8006cf0 <TestThread+0x2c0>)
 8006acc:	f7f9 fec0 	bl	8000850 <test_println>
 8006ad0:	212a      	movs	r1, #42	; 0x2a
 8006ad2:	6820      	ldr	r0, [r4, #0]
 8006ad4:	6803      	ldr	r3, [r0, #0]
 8006ad6:	689b      	ldr	r3, [r3, #8]
 8006ad8:	4798      	blx	r3
 8006ada:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006ade:	2900      	cmp	r1, #0
 8006ae0:	d1f7      	bne.n	8006ad2 <TestThread+0xa2>
 8006ae2:	4884      	ldr	r0, [pc, #528]	; (8006cf4 <TestThread+0x2c4>)
 8006ae4:	4d84      	ldr	r5, [pc, #528]	; (8006cf8 <TestThread+0x2c8>)
 8006ae6:	f7f9 feb3 	bl	8000850 <test_println>
 8006aea:	212a      	movs	r1, #42	; 0x2a
 8006aec:	6820      	ldr	r0, [r4, #0]
 8006aee:	6803      	ldr	r3, [r0, #0]
 8006af0:	689b      	ldr	r3, [r3, #8]
 8006af2:	4798      	blx	r3
 8006af4:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006af8:	2900      	cmp	r1, #0
 8006afa:	d1f7      	bne.n	8006aec <TestThread+0xbc>
 8006afc:	487f      	ldr	r0, [pc, #508]	; (8006cfc <TestThread+0x2cc>)
 8006afe:	4d80      	ldr	r5, [pc, #512]	; (8006d00 <TestThread+0x2d0>)
 8006b00:	f7f9 fea6 	bl	8000850 <test_println>
 8006b04:	212a      	movs	r1, #42	; 0x2a
 8006b06:	6820      	ldr	r0, [r4, #0]
 8006b08:	6803      	ldr	r3, [r0, #0]
 8006b0a:	689b      	ldr	r3, [r3, #8]
 8006b0c:	4798      	blx	r3
 8006b0e:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006b12:	2900      	cmp	r1, #0
 8006b14:	d1f7      	bne.n	8006b06 <TestThread+0xd6>
 8006b16:	4b7b      	ldr	r3, [pc, #492]	; (8006d04 <TestThread+0x2d4>)
 8006b18:	487b      	ldr	r0, [pc, #492]	; (8006d08 <TestThread+0x2d8>)
 8006b1a:	9302      	str	r3, [sp, #8]
 8006b1c:	4b7b      	ldr	r3, [pc, #492]	; (8006d0c <TestThread+0x2dc>)
 8006b1e:	9103      	str	r1, [sp, #12]
 8006b20:	9301      	str	r3, [sp, #4]
 8006b22:	f7f9 fe95 	bl	8000850 <test_println>
 8006b26:	4866      	ldr	r0, [pc, #408]	; (8006cc0 <TestThread+0x290>)
 8006b28:	f8df 8218 	ldr.w	r8, [pc, #536]	; 8006d44 <TestThread+0x314>
 8006b2c:	4f78      	ldr	r7, [pc, #480]	; (8006d10 <TestThread+0x2e0>)
 8006b2e:	f8df a218 	ldr.w	sl, [pc, #536]	; 8006d48 <TestThread+0x318>
 8006b32:	f7f9 fe8d 	bl	8000850 <test_println>
 8006b36:	4b77      	ldr	r3, [pc, #476]	; (8006d14 <TestThread+0x2e4>)
 8006b38:	9903      	ldr	r1, [sp, #12]
 8006b3a:	7019      	strb	r1, [r3, #0]
 8006b3c:	4b76      	ldr	r3, [pc, #472]	; (8006d18 <TestThread+0x2e8>)
 8006b3e:	468b      	mov	fp, r1
 8006b40:	f10b 0b01 	add.w	fp, fp, #1
 8006b44:	2600      	movs	r6, #0
 8006b46:	2b00      	cmp	r3, #0
 8006b48:	f000 8089 	beq.w	8006c5e <TestThread+0x22e>
 8006b4c:	4d73      	ldr	r5, [pc, #460]	; (8006d1c <TestThread+0x2ec>)
 8006b4e:	f7f9 fdb7 	bl	80006c0 <print_line>
 8006b52:	212d      	movs	r1, #45	; 0x2d
 8006b54:	6820      	ldr	r0, [r4, #0]
 8006b56:	6803      	ldr	r3, [r0, #0]
 8006b58:	689b      	ldr	r3, [r3, #8]
 8006b5a:	4798      	blx	r3
 8006b5c:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006b60:	2900      	cmp	r1, #0
 8006b62:	d1f7      	bne.n	8006b54 <TestThread+0x124>
 8006b64:	4658      	mov	r0, fp
 8006b66:	f7f9 fd9b 	bl	80006a0 <test_printn>
 8006b6a:	6820      	ldr	r0, [r4, #0]
 8006b6c:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 8006d4c <TestThread+0x31c>
 8006b70:	6803      	ldr	r3, [r0, #0]
 8006b72:	212e      	movs	r1, #46	; 0x2e
 8006b74:	689b      	ldr	r3, [r3, #8]
 8006b76:	1c75      	adds	r5, r6, #1
 8006b78:	4798      	blx	r3
 8006b7a:	4628      	mov	r0, r5
 8006b7c:	f7f9 fd90 	bl	80006a0 <test_printn>
 8006b80:	2120      	movs	r1, #32
 8006b82:	6820      	ldr	r0, [r4, #0]
 8006b84:	6803      	ldr	r3, [r0, #0]
 8006b86:	689b      	ldr	r3, [r3, #8]
 8006b88:	4798      	blx	r3
 8006b8a:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8006b8e:	2900      	cmp	r1, #0
 8006b90:	d1f7      	bne.n	8006b82 <TestThread+0x152>
 8006b92:	f858 3026 	ldr.w	r3, [r8, r6, lsl #2]
 8006b96:	f8d3 9000 	ldr.w	r9, [r3]
 8006b9a:	f899 1000 	ldrb.w	r1, [r9]
 8006b9e:	b139      	cbz	r1, 8006bb0 <TestThread+0x180>
 8006ba0:	6820      	ldr	r0, [r4, #0]
 8006ba2:	6803      	ldr	r3, [r0, #0]
 8006ba4:	689b      	ldr	r3, [r3, #8]
 8006ba6:	4798      	blx	r3
 8006ba8:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8006bac:	2900      	cmp	r1, #0
 8006bae:	d1f7      	bne.n	8006ba0 <TestThread+0x170>
 8006bb0:	485b      	ldr	r0, [pc, #364]	; (8006d20 <TestThread+0x2f0>)
 8006bb2:	f7f9 fe4d 	bl	8000850 <test_println>
 8006bb6:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8006bba:	f7fc fee9 	bl	8003990 <chThdSleep>
 8006bbe:	4a59      	ldr	r2, [pc, #356]	; (8006d24 <TestThread+0x2f4>)
 8006bc0:	4b59      	ldr	r3, [pc, #356]	; (8006d28 <TestThread+0x2f8>)
 8006bc2:	603b      	str	r3, [r7, #0]
 8006bc4:	2300      	movs	r3, #0
 8006bc6:	f858 9026 	ldr.w	r9, [r8, r6, lsl #2]
 8006bca:	6113      	str	r3, [r2, #16]
 8006bcc:	e9c2 3300 	strd	r3, r3, [r2]
 8006bd0:	e9c2 3302 	strd	r3, r3, [r2, #8]
 8006bd4:	f8d9 2004 	ldr.w	r2, [r9, #4]
 8006bd8:	f88a 3000 	strb.w	r3, [sl]
 8006bdc:	b102      	cbz	r2, 8006be0 <TestThread+0x1b0>
 8006bde:	4790      	blx	r2
 8006be0:	f8d9 300c 	ldr.w	r3, [r9, #12]
 8006be4:	4798      	blx	r3
 8006be6:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8006bea:	b103      	cbz	r3, 8006bee <TestThread+0x1be>
 8006bec:	4798      	blx	r3
 8006bee:	f7fe fad7 	bl	80051a0 <test_wait_threads>
 8006bf2:	f89a 3000 	ldrb.w	r3, [sl]
 8006bf6:	2b00      	cmp	r3, #0
 8006bf8:	d03c      	beq.n	8006c74 <TestThread+0x244>
 8006bfa:	f8df 9154 	ldr.w	r9, [pc, #340]	; 8006d50 <TestThread+0x320>
 8006bfe:	212d      	movs	r1, #45	; 0x2d
 8006c00:	6820      	ldr	r0, [r4, #0]
 8006c02:	6803      	ldr	r3, [r0, #0]
 8006c04:	689b      	ldr	r3, [r3, #8]
 8006c06:	4798      	blx	r3
 8006c08:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8006c0c:	2900      	cmp	r1, #0
 8006c0e:	d1f7      	bne.n	8006c00 <TestThread+0x1d0>
 8006c10:	4b46      	ldr	r3, [pc, #280]	; (8006d2c <TestThread+0x2fc>)
 8006c12:	f8df 9140 	ldr.w	r9, [pc, #320]	; 8006d54 <TestThread+0x324>
 8006c16:	6818      	ldr	r0, [r3, #0]
 8006c18:	f7f9 fd42 	bl	80006a0 <test_printn>
 8006c1c:	2120      	movs	r1, #32
 8006c1e:	6820      	ldr	r0, [r4, #0]
 8006c20:	6803      	ldr	r3, [r0, #0]
 8006c22:	689b      	ldr	r3, [r3, #8]
 8006c24:	4798      	blx	r3
 8006c26:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8006c2a:	2900      	cmp	r1, #0
 8006c2c:	d1f7      	bne.n	8006c1e <TestThread+0x1ee>
 8006c2e:	683b      	ldr	r3, [r7, #0]
 8006c30:	4a3d      	ldr	r2, [pc, #244]	; (8006d28 <TestThread+0x2f8>)
 8006c32:	4293      	cmp	r3, r2
 8006c34:	d909      	bls.n	8006c4a <TestThread+0x21a>
 8006c36:	4691      	mov	r9, r2
 8006c38:	6820      	ldr	r0, [r4, #0]
 8006c3a:	f819 1b01 	ldrb.w	r1, [r9], #1
 8006c3e:	6803      	ldr	r3, [r0, #0]
 8006c40:	689b      	ldr	r3, [r3, #8]
 8006c42:	4798      	blx	r3
 8006c44:	683b      	ldr	r3, [r7, #0]
 8006c46:	4599      	cmp	r9, r3
 8006c48:	d3f6      	bcc.n	8006c38 <TestThread+0x208>
 8006c4a:	4839      	ldr	r0, [pc, #228]	; (8006d30 <TestThread+0x300>)
 8006c4c:	f7f9 fe00 	bl	8000850 <test_println>
 8006c50:	eb08 0386 	add.w	r3, r8, r6, lsl #2
 8006c54:	462e      	mov	r6, r5
 8006c56:	685b      	ldr	r3, [r3, #4]
 8006c58:	2b00      	cmp	r3, #0
 8006c5a:	f47f af77 	bne.w	8006b4c <TestThread+0x11c>
 8006c5e:	9a01      	ldr	r2, [sp, #4]
 8006c60:	b162      	cbz	r2, 8006c7c <TestThread+0x24c>
 8006c62:	6813      	ldr	r3, [r2, #0]
 8006c64:	4690      	mov	r8, r2
 8006c66:	9a02      	ldr	r2, [sp, #8]
 8006c68:	4611      	mov	r1, r2
 8006c6a:	f851 2f04 	ldr.w	r2, [r1, #4]!
 8006c6e:	9201      	str	r2, [sp, #4]
 8006c70:	9102      	str	r1, [sp, #8]
 8006c72:	e765      	b.n	8006b40 <TestThread+0x110>
 8006c74:	482f      	ldr	r0, [pc, #188]	; (8006d34 <TestThread+0x304>)
 8006c76:	f7f9 fdeb 	bl	8000850 <test_println>
 8006c7a:	e7e9      	b.n	8006c50 <TestThread+0x220>
 8006c7c:	f7f9 fd20 	bl	80006c0 <print_line>
 8006c80:	4d2d      	ldr	r5, [pc, #180]	; (8006d38 <TestThread+0x308>)
 8006c82:	480f      	ldr	r0, [pc, #60]	; (8006cc0 <TestThread+0x290>)
 8006c84:	f7f9 fde4 	bl	8000850 <test_println>
 8006c88:	2146      	movs	r1, #70	; 0x46
 8006c8a:	6820      	ldr	r0, [r4, #0]
 8006c8c:	6803      	ldr	r3, [r0, #0]
 8006c8e:	689b      	ldr	r3, [r3, #8]
 8006c90:	4798      	blx	r3
 8006c92:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006c96:	2900      	cmp	r1, #0
 8006c98:	d1f7      	bne.n	8006c8a <TestThread+0x25a>
 8006c9a:	4b1e      	ldr	r3, [pc, #120]	; (8006d14 <TestThread+0x2e4>)
 8006c9c:	781b      	ldrb	r3, [r3, #0]
 8006c9e:	b92b      	cbnz	r3, 8006cac <TestThread+0x27c>
 8006ca0:	4826      	ldr	r0, [pc, #152]	; (8006d3c <TestThread+0x30c>)
 8006ca2:	b005      	add	sp, #20
 8006ca4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ca8:	f7f9 bdd2 	b.w	8000850 <test_println>
 8006cac:	4824      	ldr	r0, [pc, #144]	; (8006d40 <TestThread+0x310>)
 8006cae:	b005      	add	sp, #20
 8006cb0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006cb4:	f7f9 bdcc 	b.w	8000850 <test_println>
 8006cb8:	200013e0 	.word	0x200013e0
 8006cbc:	080079b0 	.word	0x080079b0
 8006cc0:	080082d4 	.word	0x080082d4
 8006cc4:	08007a90 	.word	0x08007a90
 8006cc8:	08007aac 	.word	0x08007aac
 8006ccc:	08007cd8 	.word	0x08007cd8
 8006cd0:	080079c4 	.word	0x080079c4
 8006cd4:	08007ab0 	.word	0x08007ab0
 8006cd8:	080079d8 	.word	0x080079d8
 8006cdc:	08007cf4 	.word	0x08007cf4
 8006ce0:	080079ec 	.word	0x080079ec
 8006ce4:	08007d50 	.word	0x08007d50
 8006ce8:	08007a00 	.word	0x08007a00
 8006cec:	08007d70 	.word	0x08007d70
 8006cf0:	08007a14 	.word	0x08007a14
 8006cf4:	08007d90 	.word	0x08007d90
 8006cf8:	08007a28 	.word	0x08007a28
 8006cfc:	08007dbc 	.word	0x08007dbc
 8006d00:	08007a3c 	.word	0x08007a3c
 8006d04:	08008194 	.word	0x08008194
 8006d08:	08007dfc 	.word	0x08007dfc
 8006d0c:	08008200 	.word	0x08008200
 8006d10:	20001ba8 	.word	0x20001ba8
 8006d14:	20001b58 	.word	0x20001b58
 8006d18:	08008ac0 	.word	0x08008ac0
 8006d1c:	08007a50 	.word	0x08007a50
 8006d20:	08007ac8 	.word	0x08007ac8
 8006d24:	20001b84 	.word	0x20001b84
 8006d28:	20001b98 	.word	0x20001b98
 8006d2c:	20001464 	.word	0x20001464
 8006d30:	08007acc 	.word	0x08007acc
 8006d34:	08007ad0 	.word	0x08007ad0
 8006d38:	08007a80 	.word	0x08007a80
 8006d3c:	08007adc 	.word	0x08007adc
 8006d40:	08007ae4 	.word	0x08007ae4
 8006d44:	080081f0 	.word	0x080081f0
 8006d48:	200014bc 	.word	0x200014bc
 8006d4c:	08007a60 	.word	0x08007a60
 8006d50:	08007a64 	.word	0x08007a64
 8006d54:	08007a7c 	.word	0x08007a7c
	...

08006d60 <chThdExitS>:
 8006d60:	b538      	push	{r3, r4, r5, lr}
 8006d62:	4b0e      	ldr	r3, [pc, #56]	; (8006d9c <chThdExitS+0x3c>)
 8006d64:	699c      	ldr	r4, [r3, #24]
 8006d66:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d68:	6220      	str	r0, [r4, #32]
 8006d6a:	f104 0524 	add.w	r5, r4, #36	; 0x24
 8006d6e:	42ab      	cmp	r3, r5
 8006d70:	d007      	beq.n	8006d82 <chThdExitS+0x22>
 8006d72:	681a      	ldr	r2, [r3, #0]
 8006d74:	6262      	str	r2, [r4, #36]	; 0x24
 8006d76:	4618      	mov	r0, r3
 8006d78:	f7fa fa22 	bl	80011c0 <chSchReadyI>
 8006d7c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d7e:	42ab      	cmp	r3, r5
 8006d80:	d1f7      	bne.n	8006d72 <chThdExitS+0x12>
 8006d82:	7f63      	ldrb	r3, [r4, #29]
 8006d84:	079b      	lsls	r3, r3, #30
 8006d86:	d104      	bne.n	8006d92 <chThdExitS+0x32>
 8006d88:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 8006d8c:	611a      	str	r2, [r3, #16]
 8006d8e:	6922      	ldr	r2, [r4, #16]
 8006d90:	6153      	str	r3, [r2, #20]
 8006d92:	200f      	movs	r0, #15
 8006d94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006d98:	f7fb bf6a 	b.w	8002c70 <chSchGoSleepS>
 8006d9c:	20001290 	.word	0x20001290

08006da0 <shell_thread>:
 8006da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006da4:	4b7f      	ldr	r3, [pc, #508]	; (8006fa4 <shell_thread+0x204>)
 8006da6:	6804      	ldr	r4, [r0, #0]
 8006da8:	699b      	ldr	r3, [r3, #24]
 8006daa:	4a7f      	ldr	r2, [pc, #508]	; (8006fa8 <shell_thread+0x208>)
 8006dac:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8006db0:	497e      	ldr	r1, [pc, #504]	; (8006fac <shell_thread+0x20c>)
 8006db2:	619a      	str	r2, [r3, #24]
 8006db4:	b099      	sub	sp, #100	; 0x64
 8006db6:	4620      	mov	r0, r4
 8006db8:	f7fa ff1a 	bl	8001bf0 <chprintf.lto_priv.69>
 8006dbc:	f8df 8220 	ldr.w	r8, [pc, #544]	; 8006fe0 <shell_thread+0x240>
 8006dc0:	ae08      	add	r6, sp, #32
 8006dc2:	f10d 075f 	add.w	r7, sp, #95	; 0x5f
 8006dc6:	4641      	mov	r1, r8
 8006dc8:	4620      	mov	r0, r4
 8006dca:	f7fa ff11 	bl	8001bf0 <chprintf.lto_priv.69>
 8006dce:	6822      	ldr	r2, [r4, #0]
 8006dd0:	4635      	mov	r5, r6
 8006dd2:	6853      	ldr	r3, [r2, #4]
 8006dd4:	f10d 0107 	add.w	r1, sp, #7
 8006dd8:	2201      	movs	r2, #1
 8006dda:	4620      	mov	r0, r4
 8006ddc:	4798      	blx	r3
 8006dde:	2800      	cmp	r0, #0
 8006de0:	d070      	beq.n	8006ec4 <shell_thread+0x124>
 8006de2:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8006de6:	2b04      	cmp	r3, #4
 8006de8:	d068      	beq.n	8006ebc <shell_thread+0x11c>
 8006dea:	2b08      	cmp	r3, #8
 8006dec:	d012      	beq.n	8006e14 <shell_thread+0x74>
 8006dee:	2b7f      	cmp	r3, #127	; 0x7f
 8006df0:	4619      	mov	r1, r3
 8006df2:	4620      	mov	r0, r4
 8006df4:	d00e      	beq.n	8006e14 <shell_thread+0x74>
 8006df6:	2b0d      	cmp	r3, #13
 8006df8:	d021      	beq.n	8006e3e <shell_thread+0x9e>
 8006dfa:	2b1f      	cmp	r3, #31
 8006dfc:	6822      	ldr	r2, [r4, #0]
 8006dfe:	d9e8      	bls.n	8006dd2 <shell_thread+0x32>
 8006e00:	42bd      	cmp	r5, r7
 8006e02:	d2e6      	bcs.n	8006dd2 <shell_thread+0x32>
 8006e04:	6893      	ldr	r3, [r2, #8]
 8006e06:	4798      	blx	r3
 8006e08:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8006e0c:	702b      	strb	r3, [r5, #0]
 8006e0e:	6822      	ldr	r2, [r4, #0]
 8006e10:	3501      	adds	r5, #1
 8006e12:	e7de      	b.n	8006dd2 <shell_thread+0x32>
 8006e14:	42b5      	cmp	r5, r6
 8006e16:	4619      	mov	r1, r3
 8006e18:	4620      	mov	r0, r4
 8006e1a:	6822      	ldr	r2, [r4, #0]
 8006e1c:	d0d9      	beq.n	8006dd2 <shell_thread+0x32>
 8006e1e:	6893      	ldr	r3, [r2, #8]
 8006e20:	4798      	blx	r3
 8006e22:	6823      	ldr	r3, [r4, #0]
 8006e24:	2120      	movs	r1, #32
 8006e26:	689b      	ldr	r3, [r3, #8]
 8006e28:	4620      	mov	r0, r4
 8006e2a:	4798      	blx	r3
 8006e2c:	6823      	ldr	r3, [r4, #0]
 8006e2e:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8006e32:	689b      	ldr	r3, [r3, #8]
 8006e34:	4620      	mov	r0, r4
 8006e36:	4798      	blx	r3
 8006e38:	3d01      	subs	r5, #1
 8006e3a:	6822      	ldr	r2, [r4, #0]
 8006e3c:	e7c9      	b.n	8006dd2 <shell_thread+0x32>
 8006e3e:	495c      	ldr	r1, [pc, #368]	; (8006fb0 <shell_thread+0x210>)
 8006e40:	f7fa fed6 	bl	8001bf0 <chprintf.lto_priv.69>
 8006e44:	2300      	movs	r3, #0
 8006e46:	a902      	add	r1, sp, #8
 8006e48:	702b      	strb	r3, [r5, #0]
 8006e4a:	4630      	mov	r0, r6
 8006e4c:	461d      	mov	r5, r3
 8006e4e:	f7fa fea7 	bl	8001ba0 <_strtok.constprop.2>
 8006e52:	a902      	add	r1, sp, #8
 8006e54:	4683      	mov	fp, r0
 8006e56:	2000      	movs	r0, #0
 8006e58:	f10d 0a0c 	add.w	sl, sp, #12
 8006e5c:	f7fa fea0 	bl	8001ba0 <_strtok.constprop.2>
 8006e60:	b150      	cbz	r0, 8006e78 <shell_thread+0xd8>
 8006e62:	2d04      	cmp	r5, #4
 8006e64:	d023      	beq.n	8006eae <shell_thread+0x10e>
 8006e66:	f84a 0b04 	str.w	r0, [sl], #4
 8006e6a:	a902      	add	r1, sp, #8
 8006e6c:	2000      	movs	r0, #0
 8006e6e:	3501      	adds	r5, #1
 8006e70:	f7fa fe96 	bl	8001ba0 <_strtok.constprop.2>
 8006e74:	2800      	cmp	r0, #0
 8006e76:	d1f4      	bne.n	8006e62 <shell_thread+0xc2>
 8006e78:	ab18      	add	r3, sp, #96	; 0x60
 8006e7a:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8006e7e:	f843 0c54 	str.w	r0, [r3, #-84]
 8006e82:	f1bb 0f00 	cmp.w	fp, #0
 8006e86:	d09e      	beq.n	8006dc6 <shell_thread+0x26>
 8006e88:	494a      	ldr	r1, [pc, #296]	; (8006fb4 <shell_thread+0x214>)
 8006e8a:	4658      	mov	r0, fp
 8006e8c:	f000 fce8 	bl	8007860 <strcasecmp>
 8006e90:	b9e8      	cbnz	r0, 8006ece <shell_thread+0x12e>
 8006e92:	bb45      	cbnz	r5, 8006ee6 <shell_thread+0x146>
 8006e94:	2320      	movs	r3, #32
 8006e96:	f383 8811 	msr	BASEPRI, r3
 8006e9a:	2100      	movs	r1, #0
 8006e9c:	4846      	ldr	r0, [pc, #280]	; (8006fb8 <shell_thread+0x218>)
 8006e9e:	f7fa fa97 	bl	80013d0 <chEvtBroadcastFlagsI>
 8006ea2:	2000      	movs	r0, #0
 8006ea4:	f7ff ff5c 	bl	8006d60 <chThdExitS>
 8006ea8:	b019      	add	sp, #100	; 0x64
 8006eaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006eae:	4943      	ldr	r1, [pc, #268]	; (8006fbc <shell_thread+0x21c>)
 8006eb0:	4620      	mov	r0, r4
 8006eb2:	f7fa fe9d 	bl	8001bf0 <chprintf.lto_priv.69>
 8006eb6:	2300      	movs	r3, #0
 8006eb8:	9307      	str	r3, [sp, #28]
 8006eba:	e784      	b.n	8006dc6 <shell_thread+0x26>
 8006ebc:	4940      	ldr	r1, [pc, #256]	; (8006fc0 <shell_thread+0x220>)
 8006ebe:	4620      	mov	r0, r4
 8006ec0:	f7fa fe96 	bl	8001bf0 <chprintf.lto_priv.69>
 8006ec4:	4620      	mov	r0, r4
 8006ec6:	493f      	ldr	r1, [pc, #252]	; (8006fc4 <shell_thread+0x224>)
 8006ec8:	f7fa fe92 	bl	8001bf0 <chprintf.lto_priv.69>
 8006ecc:	e7e2      	b.n	8006e94 <shell_thread+0xf4>
 8006ece:	493e      	ldr	r1, [pc, #248]	; (8006fc8 <shell_thread+0x228>)
 8006ed0:	4658      	mov	r0, fp
 8006ed2:	f000 fcc5 	bl	8007860 <strcasecmp>
 8006ed6:	b960      	cbnz	r0, 8006ef2 <shell_thread+0x152>
 8006ed8:	b305      	cbz	r5, 8006f1c <shell_thread+0x17c>
 8006eda:	4a3b      	ldr	r2, [pc, #236]	; (8006fc8 <shell_thread+0x228>)
 8006edc:	493b      	ldr	r1, [pc, #236]	; (8006fcc <shell_thread+0x22c>)
 8006ede:	4620      	mov	r0, r4
 8006ee0:	f7fa fe86 	bl	8001bf0 <chprintf.lto_priv.69>
 8006ee4:	e76f      	b.n	8006dc6 <shell_thread+0x26>
 8006ee6:	4a33      	ldr	r2, [pc, #204]	; (8006fb4 <shell_thread+0x214>)
 8006ee8:	4938      	ldr	r1, [pc, #224]	; (8006fcc <shell_thread+0x22c>)
 8006eea:	4620      	mov	r0, r4
 8006eec:	f7fa fe80 	bl	8001bf0 <chprintf.lto_priv.69>
 8006ef0:	e769      	b.n	8006dc6 <shell_thread+0x26>
 8006ef2:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 8006fe4 <shell_thread+0x244>
 8006ef6:	f8da 0000 	ldr.w	r0, [sl]
 8006efa:	b918      	cbnz	r0, 8006f04 <shell_thread+0x164>
 8006efc:	e036      	b.n	8006f6c <shell_thread+0x1cc>
 8006efe:	f85a 0f08 	ldr.w	r0, [sl, #8]!
 8006f02:	b398      	cbz	r0, 8006f6c <shell_thread+0x1cc>
 8006f04:	4659      	mov	r1, fp
 8006f06:	f000 fcab 	bl	8007860 <strcasecmp>
 8006f0a:	2800      	cmp	r0, #0
 8006f0c:	d1f7      	bne.n	8006efe <shell_thread+0x15e>
 8006f0e:	f8da 3004 	ldr.w	r3, [sl, #4]
 8006f12:	aa03      	add	r2, sp, #12
 8006f14:	4629      	mov	r1, r5
 8006f16:	4620      	mov	r0, r4
 8006f18:	4798      	blx	r3
 8006f1a:	e754      	b.n	8006dc6 <shell_thread+0x26>
 8006f1c:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8006fe4 <shell_thread+0x244>
 8006f20:	492b      	ldr	r1, [pc, #172]	; (8006fd0 <shell_thread+0x230>)
 8006f22:	4620      	mov	r0, r4
 8006f24:	f7fa fe64 	bl	8001bf0 <chprintf.lto_priv.69>
 8006f28:	f8da 2000 	ldr.w	r2, [sl]
 8006f2c:	b142      	cbz	r2, 8006f40 <shell_thread+0x1a0>
 8006f2e:	4d29      	ldr	r5, [pc, #164]	; (8006fd4 <shell_thread+0x234>)
 8006f30:	4629      	mov	r1, r5
 8006f32:	4620      	mov	r0, r4
 8006f34:	f7fa fe5c 	bl	8001bf0 <chprintf.lto_priv.69>
 8006f38:	f85a 2f08 	ldr.w	r2, [sl, #8]!
 8006f3c:	2a00      	cmp	r2, #0
 8006f3e:	d1f7      	bne.n	8006f30 <shell_thread+0x190>
 8006f40:	f1b9 0f00 	cmp.w	r9, #0
 8006f44:	d00d      	beq.n	8006f62 <shell_thread+0x1c2>
 8006f46:	f8d9 2000 	ldr.w	r2, [r9]
 8006f4a:	b152      	cbz	r2, 8006f62 <shell_thread+0x1c2>
 8006f4c:	f8df a084 	ldr.w	sl, [pc, #132]	; 8006fd4 <shell_thread+0x234>
 8006f50:	464d      	mov	r5, r9
 8006f52:	4651      	mov	r1, sl
 8006f54:	4620      	mov	r0, r4
 8006f56:	f7fa fe4b 	bl	8001bf0 <chprintf.lto_priv.69>
 8006f5a:	f855 2f08 	ldr.w	r2, [r5, #8]!
 8006f5e:	2a00      	cmp	r2, #0
 8006f60:	d1f7      	bne.n	8006f52 <shell_thread+0x1b2>
 8006f62:	4913      	ldr	r1, [pc, #76]	; (8006fb0 <shell_thread+0x210>)
 8006f64:	4620      	mov	r0, r4
 8006f66:	f7fa fe43 	bl	8001bf0 <chprintf.lto_priv.69>
 8006f6a:	e72c      	b.n	8006dc6 <shell_thread+0x26>
 8006f6c:	f1b9 0f00 	cmp.w	r9, #0
 8006f70:	d00d      	beq.n	8006f8e <shell_thread+0x1ee>
 8006f72:	f8d9 0000 	ldr.w	r0, [r9]
 8006f76:	b150      	cbz	r0, 8006f8e <shell_thread+0x1ee>
 8006f78:	46ca      	mov	sl, r9
 8006f7a:	e002      	b.n	8006f82 <shell_thread+0x1e2>
 8006f7c:	f85a 0f08 	ldr.w	r0, [sl, #8]!
 8006f80:	b128      	cbz	r0, 8006f8e <shell_thread+0x1ee>
 8006f82:	4659      	mov	r1, fp
 8006f84:	f000 fc6c 	bl	8007860 <strcasecmp>
 8006f88:	2800      	cmp	r0, #0
 8006f8a:	d1f7      	bne.n	8006f7c <shell_thread+0x1dc>
 8006f8c:	e7bf      	b.n	8006f0e <shell_thread+0x16e>
 8006f8e:	465a      	mov	r2, fp
 8006f90:	4911      	ldr	r1, [pc, #68]	; (8006fd8 <shell_thread+0x238>)
 8006f92:	4620      	mov	r0, r4
 8006f94:	f7fa fe2c 	bl	8001bf0 <chprintf.lto_priv.69>
 8006f98:	4910      	ldr	r1, [pc, #64]	; (8006fdc <shell_thread+0x23c>)
 8006f9a:	4620      	mov	r0, r4
 8006f9c:	f7fa fe28 	bl	8001bf0 <chprintf.lto_priv.69>
 8006fa0:	e711      	b.n	8006dc6 <shell_thread+0x26>
 8006fa2:	bf00      	nop
 8006fa4:	20001290 	.word	0x20001290
 8006fa8:	08008250 	.word	0x08008250
 8006fac:	08008258 	.word	0x08008258
 8006fb0:	08007e34 	.word	0x08007e34
 8006fb4:	080082a0 	.word	0x080082a0
 8006fb8:	200014ec 	.word	0x200014ec
 8006fbc:	08008288 	.word	0x08008288
 8006fc0:	08008278 	.word	0x08008278
 8006fc4:	0800827c 	.word	0x0800827c
 8006fc8:	080082a8 	.word	0x080082a8
 8006fcc:	08007ee8 	.word	0x08007ee8
 8006fd0:	080082b0 	.word	0x080082b0
 8006fd4:	080082c8 	.word	0x080082c8
 8006fd8:	080082cc 	.word	0x080082cc
 8006fdc:	080082d0 	.word	0x080082d0
 8006fe0:	08008270 	.word	0x08008270
 8006fe4:	2000083c 	.word	0x2000083c
	...

08006ff0 <main>:
 8006ff0:	4bce      	ldr	r3, [pc, #824]	; (800732c <main+0x33c>)
 8006ff2:	4ccf      	ldr	r4, [pc, #828]	; (8007330 <main+0x340>)
 8006ff4:	691a      	ldr	r2, [r3, #16]
 8006ff6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8006ffa:	2200      	movs	r2, #0
 8006ffc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8007000:	6119      	str	r1, [r3, #16]
 8007002:	611a      	str	r2, [r3, #16]
 8007004:	6958      	ldr	r0, [r3, #20]
 8007006:	6159      	str	r1, [r3, #20]
 8007008:	615a      	str	r2, [r3, #20]
 800700a:	6a18      	ldr	r0, [r3, #32]
 800700c:	f060 5080 	orn	r0, r0, #268435456	; 0x10000000
 8007010:	6218      	str	r0, [r3, #32]
 8007012:	621a      	str	r2, [r3, #32]
 8007014:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8007016:	6259      	str	r1, [r3, #36]	; 0x24
 8007018:	625a      	str	r2, [r3, #36]	; 0x24
 800701a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800701c:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8007020:	6419      	str	r1, [r3, #64]	; 0x40
 8007022:	6821      	ldr	r1, [r4, #0]
 8007024:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8007028:	6021      	str	r1, [r4, #0]
 800702a:	6f19      	ldr	r1, [r3, #112]	; 0x70
 800702c:	f401 7140 	and.w	r1, r1, #768	; 0x300
 8007030:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8007034:	b08b      	sub	sp, #44	; 0x2c
 8007036:	d003      	beq.n	8007040 <main+0x50>
 8007038:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 800703c:	6719      	str	r1, [r3, #112]	; 0x70
 800703e:	671a      	str	r2, [r3, #112]	; 0x70
 8007040:	f8df a2ec 	ldr.w	sl, [pc, #748]	; 8007330 <main+0x340>
 8007044:	4fb9      	ldr	r7, [pc, #740]	; (800732c <main+0x33c>)
 8007046:	f8da 6004 	ldr.w	r6, [sl, #4]
 800704a:	4cba      	ldr	r4, [pc, #744]	; (8007334 <main+0x344>)
 800704c:	4bba      	ldr	r3, [pc, #744]	; (8007338 <main+0x348>)
 800704e:	f8df 9318 	ldr.w	r9, [pc, #792]	; 8007368 <main+0x378>
 8007052:	f8df 8318 	ldr.w	r8, [pc, #792]	; 800736c <main+0x37c>
 8007056:	f8df e318 	ldr.w	lr, [pc, #792]	; 8007370 <main+0x380>
 800705a:	f8df c318 	ldr.w	ip, [pc, #792]	; 8007374 <main+0x384>
 800705e:	4db7      	ldr	r5, [pc, #732]	; (800733c <main+0x34c>)
 8007060:	48b7      	ldr	r0, [pc, #732]	; (8007340 <main+0x350>)
 8007062:	49b8      	ldr	r1, [pc, #736]	; (8007344 <main+0x354>)
 8007064:	4ab8      	ldr	r2, [pc, #736]	; (8007348 <main+0x358>)
 8007066:	f426 7600 	bic.w	r6, r6, #512	; 0x200
 800706a:	f8ca 6004 	str.w	r6, [sl, #4]
 800706e:	6b3e      	ldr	r6, [r7, #48]	; 0x30
 8007070:	f240 1bff 	movw	fp, #511	; 0x1ff
 8007074:	ea46 060b 	orr.w	r6, r6, fp
 8007078:	633e      	str	r6, [r7, #48]	; 0x30
 800707a:	f8d7 a050 	ldr.w	sl, [r7, #80]	; 0x50
 800707e:	4eb3      	ldr	r6, [pc, #716]	; (800734c <main+0x35c>)
 8007080:	ea4a 0a0b 	orr.w	sl, sl, fp
 8007084:	f8c7 a050 	str.w	sl, [r7, #80]	; 0x50
 8007088:	f44f 7b80 	mov.w	fp, #256	; 0x100
 800708c:	f8df a2e8 	ldr.w	sl, [pc, #744]	; 8007378 <main+0x388>
 8007090:	f8c4 b004 	str.w	fp, [r4, #4]
 8007094:	60a3      	str	r3, [r4, #8]
 8007096:	f8c4 a00c 	str.w	sl, [r4, #12]
 800709a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800709e:	f8df a2dc 	ldr.w	sl, [pc, #732]	; 800737c <main+0x38c>
 80070a2:	6163      	str	r3, [r4, #20]
 80070a4:	f8c4 a020 	str.w	sl, [r4, #32]
 80070a8:	f8df a2d4 	ldr.w	sl, [pc, #724]	; 8007380 <main+0x390>
 80070ac:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80070b0:	f8df a2d0 	ldr.w	sl, [pc, #720]	; 8007384 <main+0x394>
 80070b4:	f8c4 a000 	str.w	sl, [r4]
 80070b8:	2400      	movs	r4, #0
 80070ba:	f8df a2cc 	ldr.w	sl, [pc, #716]	; 8007388 <main+0x398>
 80070be:	f8c9 4004 	str.w	r4, [r9, #4]
 80070c2:	f8c9 a008 	str.w	sl, [r9, #8]
 80070c6:	f8df a2c4 	ldr.w	sl, [pc, #708]	; 800738c <main+0x39c>
 80070ca:	f8c9 a00c 	str.w	sl, [r9, #12]
 80070ce:	f8df a2c0 	ldr.w	sl, [pc, #704]	; 8007390 <main+0x3a0>
 80070d2:	f8c9 3014 	str.w	r3, [r9, #20]
 80070d6:	f8c9 a020 	str.w	sl, [r9, #32]
 80070da:	f8df a2b8 	ldr.w	sl, [pc, #696]	; 8007394 <main+0x3a4>
 80070de:	f8c9 a024 	str.w	sl, [r9, #36]	; 0x24
 80070e2:	f1aa 5a25 	sub.w	sl, sl, #692060160	; 0x29400000
 80070e6:	f5aa 1a0b 	sub.w	sl, sl, #2277376	; 0x22c000
 80070ea:	f2aa 6a64 	subw	sl, sl, #1636	; 0x664
 80070ee:	f8c9 a000 	str.w	sl, [r9]
 80070f2:	f44f 7900 	mov.w	r9, #512	; 0x200
 80070f6:	f8c8 9004 	str.w	r9, [r8, #4]
 80070fa:	f8df 929c 	ldr.w	r9, [pc, #668]	; 8007398 <main+0x3a8>
 80070fe:	f8c8 9008 	str.w	r9, [r8, #8]
 8007102:	f8df 9298 	ldr.w	r9, [pc, #664]	; 800739c <main+0x3ac>
 8007106:	f8c8 900c 	str.w	r9, [r8, #12]
 800710a:	f8df 9294 	ldr.w	r9, [pc, #660]	; 80073a0 <main+0x3b0>
 800710e:	f8c8 3014 	str.w	r3, [r8, #20]
 8007112:	f8c8 9020 	str.w	r9, [r8, #32]
 8007116:	f44f 6964 	mov.w	r9, #3648	; 0xe40
 800711a:	f8c8 9024 	str.w	r9, [r8, #36]	; 0x24
 800711e:	f8df 9284 	ldr.w	r9, [pc, #644]	; 80073a4 <main+0x3b4>
 8007122:	f8c8 9000 	str.w	r9, [r8]
 8007126:	f8df 9280 	ldr.w	r9, [pc, #640]	; 80073a8 <main+0x3b8>
 800712a:	f8ce 4004 	str.w	r4, [lr, #4]
 800712e:	f8df 827c 	ldr.w	r8, [pc, #636]	; 80073ac <main+0x3bc>
 8007132:	f8ce 9008 	str.w	r9, [lr, #8]
 8007136:	f244 5910 	movw	r9, #17680	; 0x4510
 800713a:	f8ce 900c 	str.w	r9, [lr, #12]
 800713e:	f8ce 3014 	str.w	r3, [lr, #20]
 8007142:	f8df 926c 	ldr.w	r9, [pc, #620]	; 80073b0 <main+0x3c0>
 8007146:	f8ce 8020 	str.w	r8, [lr, #32]
 800714a:	f8df 8268 	ldr.w	r8, [pc, #616]	; 80073b4 <main+0x3c4>
 800714e:	f8ce 9024 	str.w	r9, [lr, #36]	; 0x24
 8007152:	f8ce 8000 	str.w	r8, [lr]
 8007156:	f8df 9260 	ldr.w	r9, [pc, #608]	; 80073b8 <main+0x3c8>
 800715a:	f8cc 4004 	str.w	r4, [ip, #4]
 800715e:	f241 5e50 	movw	lr, #5456	; 0x1550
 8007162:	f8cc 9008 	str.w	r9, [ip, #8]
 8007166:	f8df 8254 	ldr.w	r8, [pc, #596]	; 80073bc <main+0x3cc>
 800716a:	f8cc e00c 	str.w	lr, [ip, #12]
 800716e:	f04f 39cc 	mov.w	r9, #3435973836	; 0xcccccccc
 8007172:	f8df e24c 	ldr.w	lr, [pc, #588]	; 80073c0 <main+0x3d0>
 8007176:	f8cc 3014 	str.w	r3, [ip, #20]
 800717a:	f8cc 8020 	str.w	r8, [ip, #32]
 800717e:	f8cc 9024 	str.w	r9, [ip, #36]	; 0x24
 8007182:	f8cc e000 	str.w	lr, [ip]
 8007186:	f10c 4c0d 	add.w	ip, ip, #2365587456	; 0x8d000000
 800718a:	f46f 5840 	mvn.w	r8, #12288	; 0x3000
 800718e:	f46f 7ad5 	mvn.w	sl, #426	; 0x1aa
 8007192:	f5ac 1c55 	sub.w	ip, ip, #3489792	; 0x354000
 8007196:	606c      	str	r4, [r5, #4]
 8007198:	44d4      	add	ip, sl
 800719a:	f8c5 8008 	str.w	r8, [r5, #8]
 800719e:	f44f 5980 	mov.w	r9, #4096	; 0x1000
 80071a2:	f8df e220 	ldr.w	lr, [pc, #544]	; 80073c4 <main+0x3d4>
 80071a6:	f8df 8220 	ldr.w	r8, [pc, #544]	; 80073c8 <main+0x3d8>
 80071aa:	f8c5 900c 	str.w	r9, [r5, #12]
 80071ae:	616b      	str	r3, [r5, #20]
 80071b0:	f8df 9218 	ldr.w	r9, [pc, #536]	; 80073cc <main+0x3dc>
 80071b4:	f8c5 e020 	str.w	lr, [r5, #32]
 80071b8:	f8c5 c024 	str.w	ip, [r5, #36]	; 0x24
 80071bc:	f8df e210 	ldr.w	lr, [pc, #528]	; 80073d0 <main+0x3e0>
 80071c0:	f8c5 8000 	str.w	r8, [r5]
 80071c4:	f649 7cff 	movw	ip, #40959	; 0x9fff
 80071c8:	4d61      	ldr	r5, [pc, #388]	; (8007350 <main+0x360>)
 80071ca:	f8df 8208 	ldr.w	r8, [pc, #520]	; 80073d4 <main+0x3e4>
 80071ce:	6044      	str	r4, [r0, #4]
 80071d0:	f8c0 9008 	str.w	r9, [r0, #8]
 80071d4:	f8c0 e00c 	str.w	lr, [r0, #12]
 80071d8:	f8df 91fc 	ldr.w	r9, [pc, #508]	; 80073d8 <main+0x3e8>
 80071dc:	f8c0 c014 	str.w	ip, [r0, #20]
 80071e0:	f04f 0e0f 	mov.w	lr, #15
 80071e4:	6205      	str	r5, [r0, #32]
 80071e6:	f8df c1f4 	ldr.w	ip, [pc, #500]	; 80073dc <main+0x3ec>
 80071ea:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 80071ee:	f04f 3555 	mov.w	r5, #1431655765	; 0x55555555
 80071f2:	f04f 0801 	mov.w	r8, #1
 80071f6:	f8c0 9000 	str.w	r9, [r0]
 80071fa:	604c      	str	r4, [r1, #4]
 80071fc:	f8c1 e008 	str.w	lr, [r1, #8]
 8007200:	f8c1 c00c 	str.w	ip, [r1, #12]
 8007204:	614b      	str	r3, [r1, #20]
 8007206:	620c      	str	r4, [r1, #32]
 8007208:	624c      	str	r4, [r1, #36]	; 0x24
 800720a:	600c      	str	r4, [r1, #0]
 800720c:	6054      	str	r4, [r2, #4]
 800720e:	6094      	str	r4, [r2, #8]
 8007210:	60d5      	str	r5, [r2, #12]
 8007212:	6153      	str	r3, [r2, #20]
 8007214:	6214      	str	r4, [r2, #32]
 8007216:	6254      	str	r4, [r2, #36]	; 0x24
 8007218:	6014      	str	r4, [r2, #0]
 800721a:	f886 8000 	strb.w	r8, [r6]
 800721e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8007220:	4d4c      	ldr	r5, [pc, #304]	; (8007354 <main+0x364>)
 8007222:	6274      	str	r4, [r6, #36]	; 0x24
 8007224:	ea43 0308 	orr.w	r3, r3, r8
 8007228:	643b      	str	r3, [r7, #64]	; 0x40
 800722a:	68ab      	ldr	r3, [r5, #8]
 800722c:	4a4a      	ldr	r2, [pc, #296]	; (8007358 <main+0x368>)
 800722e:	f8df 91b0 	ldr.w	r9, [pc, #432]	; 80073e0 <main+0x3f0>
 8007232:	f8df c1b0 	ldr.w	ip, [pc, #432]	; 80073e4 <main+0x3f4>
 8007236:	f8c6 c06c 	str.w	ip, [r6, #108]	; 0x6c
 800723a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800723e:	ea43 0308 	orr.w	r3, r3, r8
 8007242:	f501 31f2 	add.w	r1, r1, #123904	; 0x1e400
 8007246:	66b1      	str	r1, [r6, #104]	; 0x68
 8007248:	63b4      	str	r4, [r6, #56]	; 0x38
 800724a:	62b4      	str	r4, [r6, #40]	; 0x28
 800724c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800724e:	62f4      	str	r4, [r6, #44]	; 0x2c
 8007250:	6434      	str	r4, [r6, #64]	; 0x40
 8007252:	6334      	str	r4, [r6, #48]	; 0x30
 8007254:	6474      	str	r4, [r6, #68]	; 0x44
 8007256:	6374      	str	r4, [r6, #52]	; 0x34
 8007258:	64b4      	str	r4, [r6, #72]	; 0x48
 800725a:	e9c6 4401 	strd	r4, r4, [r6, #4]
 800725e:	e9c6 441e 	strd	r4, r4, [r6, #120]	; 0x78
 8007262:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8007266:	60ab      	str	r3, [r5, #8]
 8007268:	f242 0ecf 	movw	lr, #8399	; 0x20cf
 800726c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007270:	f04f 0c80 	mov.w	ip, #128	; 0x80
 8007274:	f8c0 e028 	str.w	lr, [r0, #40]	; 0x28
 8007278:	62c1      	str	r1, [r0, #44]	; 0x2c
 800727a:	6184      	str	r4, [r0, #24]
 800727c:	6344      	str	r4, [r0, #52]	; 0x34
 800727e:	60c4      	str	r4, [r0, #12]
 8007280:	6044      	str	r4, [r0, #4]
 8007282:	f8c0 8014 	str.w	r8, [r0, #20]
 8007286:	f8c0 8000 	str.w	r8, [r0]
 800728a:	f889 c31c 	strb.w	ip, [r9, #796]	; 0x31c
 800728e:	f8c9 3180 	str.w	r3, [r9, #384]	; 0x180
 8007292:	f8c9 3000 	str.w	r3, [r9]
 8007296:	6094      	str	r4, [r2, #8]
 8007298:	68d0      	ldr	r0, [r2, #12]
 800729a:	4b30      	ldr	r3, [pc, #192]	; (800735c <main+0x36c>)
 800729c:	f8df c148 	ldr.w	ip, [pc, #328]	; 80073e8 <main+0x3f8>
 80072a0:	f64f 0eff 	movw	lr, #63743	; 0xf8ff
 80072a4:	ea00 000e 	and.w	r0, r0, lr
 80072a8:	4303      	orrs	r3, r0
 80072aa:	60d3      	str	r3, [r2, #12]
 80072ac:	f8dc 000c 	ldr.w	r0, [ip, #12]
 80072b0:	4b2b      	ldr	r3, [pc, #172]	; (8007360 <main+0x370>)
 80072b2:	f5a5 2582 	sub.w	r5, r5, #266240	; 0x41000
 80072b6:	f040 7080 	orr.w	r0, r0, #16777216	; 0x1000000
 80072ba:	f8cc 000c 	str.w	r0, [ip, #12]
 80072be:	6828      	ldr	r0, [r5, #0]
 80072c0:	6259      	str	r1, [r3, #36]	; 0x24
 80072c2:	f04f 0c10 	mov.w	ip, #16
 80072c6:	ea40 0008 	orr.w	r0, r0, r8
 80072ca:	f04f 0a20 	mov.w	sl, #32
 80072ce:	6028      	str	r0, [r5, #0]
 80072d0:	f882 c01f 	strb.w	ip, [r2, #31]
 80072d4:	f103 051c 	add.w	r5, r3, #28
 80072d8:	f882 a022 	strb.w	sl, [r2, #34]	; 0x22
 80072dc:	eb0d 000c 	add.w	r0, sp, ip
 80072e0:	2200      	movs	r2, #0
 80072e2:	9104      	str	r1, [sp, #16]
 80072e4:	e9c3 3300 	strd	r3, r3, [r3]
 80072e8:	2100      	movs	r1, #0
 80072ea:	e9cd 1208 	strd	r1, r2, [sp, #32]
 80072ee:	609c      	str	r4, [r3, #8]
 80072f0:	629c      	str	r4, [r3, #40]	; 0x28
 80072f2:	675c      	str	r4, [r3, #116]	; 0x74
 80072f4:	e9c3 5507 	strd	r5, r5, [r3, #28]
 80072f8:	9303      	str	r3, [sp, #12]
 80072fa:	e9c3 3304 	strd	r3, r3, [r3, #16]
 80072fe:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8007302:	9407      	str	r4, [sp, #28]
 8007304:	f7f8 ffd4 	bl	80002b0 <chTMStartMeasurementX.constprop.59>
 8007308:	a804      	add	r0, sp, #16
 800730a:	f7f9 fed1 	bl	80010b0 <chTMStopMeasurementX>
 800730e:	9b03      	ldr	r3, [sp, #12]
 8007310:	4a14      	ldr	r2, [pc, #80]	; (8007364 <main+0x374>)
 8007312:	f8d3 c014 	ldr.w	ip, [r3, #20]
 8007316:	9806      	ldr	r0, [sp, #24]
 8007318:	6758      	str	r0, [r3, #116]	; 0x74
 800731a:	f102 0e10 	add.w	lr, r2, #16
 800731e:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8007322:	e9c2 ee04 	strd	lr, lr, [r2, #16]
 8007326:	f04f 0e40 	mov.w	lr, #64	; 0x40
 800732a:	e05f      	b.n	80073ec <main+0x3fc>
 800732c:	40023800 	.word	0x40023800
 8007330:	40007000 	.word	0x40007000
 8007334:	40020000 	.word	0x40020000
 8007338:	3fc333c0 	.word	0x3fc333c0
 800733c:	40021400 	.word	0x40021400
 8007340:	40021800 	.word	0x40021800
 8007344:	40021c00 	.word	0x40021c00
 8007348:	40022000 	.word	0x40022000
 800734c:	200010c8 	.word	0x200010c8
 8007350:	eecc00cc 	.word	0xeecc00cc
 8007354:	e0042000 	.word	0xe0042000
 8007358:	e000ed00 	.word	0xe000ed00
 800735c:	05fa0300 	.word	0x05fa0300
 8007360:	20001290 	.word	0x20001290
 8007364:	200013e8 	.word	0x200013e8
 8007368:	40020400 	.word	0x40020400
 800736c:	40020800 	.word	0x40020800
 8007370:	40020c00 	.word	0x40020c00
 8007374:	40021000 	.word	0x40021000
 8007378:	24144400 	.word	0x24144400
 800737c:	0e0ee000 	.word	0x0e0ee000
 8007380:	000ee774 	.word	0x000ee774
 8007384:	2aaa2280 	.word	0x2aaa2280
 8007388:	f3ff3cff 	.word	0xf3ff3cff
 800738c:	08004110 	.word	0x08004110
 8007390:	0cc000ee 	.word	0x0cc000ee
 8007394:	cc0ceeee 	.word	0xcc0ceeee
 8007398:	f03cff3f 	.word	0xf03cff3f
 800739c:	05410040 	.word	0x05410040
 80073a0:	ee00000c 	.word	0xee00000c
 80073a4:	0028a116 	.word	0x0028a116
 80073a8:	ffff30cf 	.word	0xffff30cf
 80073ac:	0e00e0cc 	.word	0x0e00e0cc
 80073b0:	cc000ccc 	.word	0xcc000ccc
 80073b4:	a52a208a 	.word	0xa52a208a
 80073b8:	ffffc00f 	.word	0xffffc00f
 80073bc:	c00000cc 	.word	0xc00000cc
 80073c0:	aaaa800a 	.word	0xaaaa800a
 80073c4:	50cccccc 	.word	0x50cccccc
 80073c8:	aaaa8aaa 	.word	0xaaaa8aaa
 80073cc:	fff3ff0f 	.word	0xfff3ff0f
 80073d0:	00040050 	.word	0x00040050
 80073d4:	c00eee0c 	.word	0xc00eee0c
 80073d8:	96a2aa0a 	.word	0x96a2aa0a
 80073dc:	55555550 	.word	0x55555550
 80073e0:	e000e100 	.word	0xe000e100
 80073e4:	08008090 	.word	0x08008090
 80073e8:	e000edf0 	.word	0xe000edf0
 80073ec:	f8c3 c044 	str.w	ip, [r3, #68]	; 0x44
 80073f0:	6194      	str	r4, [r2, #24]
 80073f2:	f8c3 e038 	str.w	lr, [r3, #56]	; 0x38
 80073f6:	f8c3 e06c 	str.w	lr, [r3, #108]	; 0x6c
 80073fa:	f883 404d 	strb.w	r4, [r3, #77]	; 0x4d
 80073fe:	e9c3 4419 	strd	r4, r4, [r3, #100]	; 0x64
 8007402:	f883 804e 	strb.w	r8, [r3, #78]	; 0x4e
 8007406:	649c      	str	r4, [r3, #72]	; 0x48
 8007408:	641b      	str	r3, [r3, #64]	; 0x40
 800740a:	4db5      	ldr	r5, [pc, #724]	; (80076e0 <main+0x6f0>)
 800740c:	f8cc 0010 	str.w	r0, [ip, #16]
 8007410:	49b4      	ldr	r1, [pc, #720]	; (80076e4 <main+0x6f4>)
 8007412:	f8df e324 	ldr.w	lr, [pc, #804]	; 8007738 <main+0x748>
 8007416:	f8df c324 	ldr.w	ip, [pc, #804]	; 800773c <main+0x74c>
 800741a:	f883 804c 	strb.w	r8, [r3, #76]	; 0x4c
 800741e:	e9c3 0005 	strd	r0, r0, [r3, #20]
 8007422:	f103 0054 	add.w	r0, r3, #84	; 0x54
 8007426:	6558      	str	r0, [r3, #84]	; 0x54
 8007428:	48af      	ldr	r0, [pc, #700]	; (80076e8 <main+0x6f8>)
 800742a:	6010      	str	r0, [r2, #0]
 800742c:	f025 0507 	bic.w	r5, r5, #7
 8007430:	f021 0107 	bic.w	r1, r1, #7
 8007434:	e9c2 4402 	strd	r4, r4, [r2, #8]
 8007438:	f103 0258 	add.w	r2, r3, #88	; 0x58
 800743c:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8007440:	f8ce 5000 	str.w	r5, [lr]
 8007444:	f8cc 1000 	str.w	r1, [ip]
 8007448:	f384 8811 	msr	BASEPRI, r4
 800744c:	b662      	cpsie	i
 800744e:	699a      	ldr	r2, [r3, #24]
 8007450:	49a6      	ldr	r1, [pc, #664]	; (80076ec <main+0x6fc>)
 8007452:	4da7      	ldr	r5, [pc, #668]	; (80076f0 <main+0x700>)
 8007454:	6191      	str	r1, [r2, #24]
 8007456:	f103 0078 	add.w	r0, r3, #120	; 0x78
 800745a:	4642      	mov	r2, r8
 800745c:	9400      	str	r4, [sp, #0]
 800745e:	4ba5      	ldr	r3, [pc, #660]	; (80076f4 <main+0x704>)
 8007460:	21d8      	movs	r1, #216	; 0xd8
 8007462:	f7fb fbcd 	bl	8002c00 <chThdCreateStatic>
 8007466:	462a      	mov	r2, r5
 8007468:	4ba3      	ldr	r3, [pc, #652]	; (80076f8 <main+0x708>)
 800746a:	f8df c2d4 	ldr.w	ip, [pc, #724]	; 8007740 <main+0x750>
 800746e:	f8c0 c018 	str.w	ip, [r0, #24]
 8007472:	f842 3b04 	str.w	r3, [r2], #4
 8007476:	f505 7c15 	add.w	ip, r5, #596	; 0x254
 800747a:	49a0      	ldr	r1, [pc, #640]	; (80076fc <main+0x70c>)
 800747c:	4ba0      	ldr	r3, [pc, #640]	; (8007700 <main+0x710>)
 800747e:	48a1      	ldr	r0, [pc, #644]	; (8007704 <main+0x714>)
 8007480:	f885 8008 	strb.w	r8, [r5, #8]
 8007484:	f105 0e0c 	add.w	lr, r5, #12
 8007488:	f105 0854 	add.w	r8, r5, #84	; 0x54
 800748c:	62ab      	str	r3, [r5, #40]	; 0x28
 800748e:	f8c5 c040 	str.w	ip, [r5, #64]	; 0x40
 8007492:	f505 73aa 	add.w	r3, r5, #340	; 0x154
 8007496:	f105 0c30 	add.w	ip, r5, #48	; 0x30
 800749a:	616c      	str	r4, [r5, #20]
 800749c:	f8c5 b038 	str.w	fp, [r5, #56]	; 0x38
 80074a0:	62ed      	str	r5, [r5, #44]	; 0x2c
 80074a2:	652d      	str	r5, [r5, #80]	; 0x50
 80074a4:	64e8      	str	r0, [r5, #76]	; 0x4c
 80074a6:	606a      	str	r2, [r5, #4]
 80074a8:	e9c5 ee03 	strd	lr, lr, [r5, #12]
 80074ac:	f8c5 8018 	str.w	r8, [r5, #24]
 80074b0:	e9c5 8808 	strd	r8, r8, [r5, #32]
 80074b4:	61eb      	str	r3, [r5, #28]
 80074b6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80074b8:	e9c5 3311 	strd	r3, r3, [r5, #68]	; 0x44
 80074bc:	e9c5 cc0c 	strd	ip, ip, [r5, #48]	; 0x30
 80074c0:	6009      	str	r1, [r1, #0]
 80074c2:	f38a 8811 	msr	BASEPRI, sl
 80074c6:	4a90      	ldr	r2, [pc, #576]	; (8007708 <main+0x718>)
 80074c8:	6275      	str	r5, [r6, #36]	; 0x24
 80074ca:	2302      	movs	r3, #2
 80074cc:	63b5      	str	r5, [r6, #56]	; 0x38
 80074ce:	62b5      	str	r5, [r6, #40]	; 0x28
 80074d0:	f8c5 2254 	str.w	r2, [r5, #596]	; 0x254
 80074d4:	722b      	strb	r3, [r5, #8]
 80074d6:	f384 8811 	msr	BASEPRI, r4
 80074da:	6eb2      	ldr	r2, [r6, #104]	; 0x68
 80074dc:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80074de:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 80074e2:	6393      	str	r3, [r2, #56]	; 0x38
 80074e4:	f242 7010 	movw	r0, #10000	; 0x2710
 80074e8:	f7fc fa52 	bl	8003990 <chThdSleep>
 80074ec:	f38a 8811 	msr	BASEPRI, sl
 80074f0:	f896 b000 	ldrb.w	fp, [r6]
 80074f4:	4b85      	ldr	r3, [pc, #532]	; (800770c <main+0x71c>)
 80074f6:	6073      	str	r3, [r6, #4]
 80074f8:	f1bb 0f01 	cmp.w	fp, #1
 80074fc:	e9c6 4403 	strd	r4, r4, [r6, #12]
 8007500:	e9c6 4405 	strd	r4, r4, [r6, #20]
 8007504:	e9c6 4407 	strd	r4, r4, [r6, #28]
 8007508:	d047      	beq.n	800759a <main+0x5aa>
 800750a:	2302      	movs	r3, #2
 800750c:	7033      	strb	r3, [r6, #0]
 800750e:	2400      	movs	r4, #0
 8007510:	f384 8811 	msr	BASEPRI, r4
 8007514:	6eb1      	ldr	r1, [r6, #104]	; 0x68
 8007516:	4b7e      	ldr	r3, [pc, #504]	; (8007710 <main+0x720>)
 8007518:	6b8a      	ldr	r2, [r1, #56]	; 0x38
 800751a:	487e      	ldr	r0, [pc, #504]	; (8007714 <main+0x724>)
 800751c:	4f7e      	ldr	r7, [pc, #504]	; (8007718 <main+0x728>)
 800751e:	4e7f      	ldr	r6, [pc, #508]	; (800771c <main+0x72c>)
 8007520:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8007524:	638a      	str	r2, [r1, #56]	; 0x38
 8007526:	224a      	movs	r2, #74	; 0x4a
 8007528:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800752c:	9400      	str	r4, [sp, #0]
 800752e:	f7fb fb67 	bl	8002c00 <chThdCreateStatic>
 8007532:	9400      	str	r4, [sp, #0]
 8007534:	4b7a      	ldr	r3, [pc, #488]	; (8007720 <main+0x730>)
 8007536:	487b      	ldr	r0, [pc, #492]	; (8007724 <main+0x734>)
 8007538:	224a      	movs	r2, #74	; 0x4a
 800753a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800753e:	f7fb fb5f 	bl	8002c00 <chThdCreateStatic>
 8007542:	b144      	cbz	r4, 8007556 <main+0x566>
 8007544:	7f23      	ldrb	r3, [r4, #28]
 8007546:	2b0f      	cmp	r3, #15
 8007548:	d01f      	beq.n	800758a <main+0x59a>
 800754a:	f241 3088 	movw	r0, #5000	; 0x1388
 800754e:	f7fc fa1f 	bl	8003990 <chThdSleep>
 8007552:	2c00      	cmp	r4, #0
 8007554:	d1f6      	bne.n	8007544 <main+0x554>
 8007556:	f8d5 3254 	ldr.w	r3, [r5, #596]	; 0x254
 800755a:	681b      	ldr	r3, [r3, #0]
 800755c:	781b      	ldrb	r3, [r3, #0]
 800755e:	2b04      	cmp	r3, #4
 8007560:	d009      	beq.n	8007576 <main+0x586>
 8007562:	f241 3088 	movw	r0, #5000	; 0x1388
 8007566:	f7fc fa13 	bl	8003990 <chThdSleep>
 800756a:	f8d5 3254 	ldr.w	r3, [r5, #596]	; 0x254
 800756e:	681b      	ldr	r3, [r3, #0]
 8007570:	781b      	ldrb	r3, [r3, #0]
 8007572:	2b04      	cmp	r3, #4
 8007574:	d1f5      	bne.n	8007562 <main+0x572>
 8007576:	9700      	str	r7, [sp, #0]
 8007578:	4633      	mov	r3, r6
 800757a:	2240      	movs	r2, #64	; 0x40
 800757c:	f640 01c8 	movw	r1, #2248	; 0x8c8
 8007580:	2000      	movs	r0, #0
 8007582:	f7fd fb7d 	bl	8004c80 <chThdCreateFromHeap>
 8007586:	4604      	mov	r4, r0
 8007588:	e7df      	b.n	800754a <main+0x55a>
 800758a:	4620      	mov	r0, r4
 800758c:	f7fd f960 	bl	8004850 <chThdRelease>
 8007590:	f241 3088 	movw	r0, #5000	; 0x1388
 8007594:	f7fc f9fc 	bl	8003990 <chThdSleep>
 8007598:	e7dd      	b.n	8007556 <main+0x566>
 800759a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800759c:	6774      	str	r4, [r6, #116]	; 0x74
 800759e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80075a2:	633b      	str	r3, [r7, #48]	; 0x30
 80075a4:	693b      	ldr	r3, [r7, #16]
 80075a6:	f8d6 8068 	ldr.w	r8, [r6, #104]	; 0x68
 80075aa:	495f      	ldr	r1, [pc, #380]	; (8007728 <main+0x738>)
 80075ac:	4a5f      	ldr	r2, [pc, #380]	; (800772c <main+0x73c>)
 80075ae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80075b2:	613b      	str	r3, [r7, #16]
 80075b4:	613c      	str	r4, [r7, #16]
 80075b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80075b8:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80075bc:	633b      	str	r3, [r7, #48]	; 0x30
 80075be:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80075c0:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80075c4:	653b      	str	r3, [r7, #80]	; 0x50
 80075c6:	23e0      	movs	r3, #224	; 0xe0
 80075c8:	f889 334d 	strb.w	r3, [r9, #845]	; 0x34d
 80075cc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80075d0:	f8c9 3188 	str.w	r3, [r9, #392]	; 0x188
 80075d4:	f8c9 3008 	str.w	r3, [r9, #8]
 80075d8:	f44f 2350 	mov.w	r3, #851968	; 0xd0000
 80075dc:	f8c8 100c 	str.w	r1, [r8, #12]
 80075e0:	4650      	mov	r0, sl
 80075e2:	f8c8 2800 	str.w	r2, [r8, #2048]	; 0x800
 80075e6:	f8c8 4e00 	str.w	r4, [r8, #3584]	; 0xe00
 80075ea:	f8c8 3038 	str.w	r3, [r8, #56]	; 0x38
 80075ee:	f7fa f8f7 	bl	80017e0 <chSysPolledDelayX>
 80075f2:	f8c8 b010 	str.w	fp, [r8, #16]
 80075f6:	f8d8 4010 	ldr.w	r4, [r8, #16]
 80075fa:	f014 0401 	ands.w	r4, r4, #1
 80075fe:	d1fa      	bne.n	80075f6 <main+0x606>
 8007600:	200c      	movs	r0, #12
 8007602:	f7fa f8ed 	bl	80017e0 <chSysPolledDelayX>
 8007606:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800760a:	2b00      	cmp	r3, #0
 800760c:	dafb      	bge.n	8007606 <main+0x616>
 800760e:	e9d6 731a 	ldrd	r7, r3, [r6, #104]	; 0x68
 8007612:	689a      	ldr	r2, [r3, #8]
 8007614:	2300      	movs	r3, #0
 8007616:	f102 0c01 	add.w	ip, r2, #1
 800761a:	f8c8 3008 	str.w	r3, [r8, #8]
 800761e:	f04f 4980 	mov.w	r9, #1073741824	; 0x40000000
 8007622:	f04f 3eff 	mov.w	lr, #4294967295	; 0xffffffff
 8007626:	e015      	b.n	8007654 <main+0x664>
 8007628:	f8c2 3900 	str.w	r3, [r2, #2304]	; 0x900
 800762c:	1878      	adds	r0, r7, r1
 800762e:	f8c0 3910 	str.w	r3, [r0, #2320]	; 0x910
 8007632:	f8c0 e908 	str.w	lr, [r0, #2312]	; 0x908
 8007636:	f8d2 ab00 	ldr.w	sl, [r2, #2816]	; 0xb00
 800763a:	f1ba 0f00 	cmp.w	sl, #0
 800763e:	db48      	blt.n	80076d2 <main+0x6e2>
 8007640:	f8c2 3b00 	str.w	r3, [r2, #2816]	; 0xb00
 8007644:	4439      	add	r1, r7
 8007646:	3401      	adds	r4, #1
 8007648:	45a4      	cmp	ip, r4
 800764a:	f8c1 3b10 	str.w	r3, [r1, #2832]	; 0xb10
 800764e:	f8c1 eb08 	str.w	lr, [r1, #2824]	; 0xb08
 8007652:	d00e      	beq.n	8007672 <main+0x682>
 8007654:	0161      	lsls	r1, r4, #5
 8007656:	187a      	adds	r2, r7, r1
 8007658:	f8d2 0900 	ldr.w	r0, [r2, #2304]	; 0x900
 800765c:	2800      	cmp	r0, #0
 800765e:	dae3      	bge.n	8007628 <main+0x638>
 8007660:	f8c2 9900 	str.w	r9, [r2, #2304]	; 0x900
 8007664:	4610      	mov	r0, r2
 8007666:	f8d0 a908 	ldr.w	sl, [r0, #2312]	; 0x908
 800766a:	f01a 0f02 	tst.w	sl, #2
 800766e:	d0fa      	beq.n	8007666 <main+0x676>
 8007670:	e7dc      	b.n	800762c <main+0x63c>
 8007672:	6872      	ldr	r2, [r6, #4]
 8007674:	68d2      	ldr	r2, [r2, #12]
 8007676:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800767a:	f8c7 181c 	str.w	r1, [r7, #2076]	; 0x81c
 800767e:	f8c8 3810 	str.w	r3, [r8, #2064]	; 0x810
 8007682:	f8c8 3814 	str.w	r3, [r8, #2068]	; 0x814
 8007686:	f8c8 381c 	str.w	r3, [r8, #2076]	; 0x81c
 800768a:	b1ea      	cbz	r2, 80076c8 <main+0x6d8>
 800768c:	f243 0308 	movw	r3, #12296	; 0x3008
 8007690:	f8c8 3018 	str.w	r3, [r8, #24]
 8007694:	6ff3      	ldr	r3, [r6, #124]	; 0x7c
 8007696:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800769a:	f8c8 2014 	str.w	r2, [r8, #20]
 800769e:	b963      	cbnz	r3, 80076ba <main+0x6ca>
 80076a0:	4b23      	ldr	r3, [pc, #140]	; (8007730 <main+0x740>)
 80076a2:	9600      	str	r6, [sp, #0]
 80076a4:	2202      	movs	r2, #2
 80076a6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80076aa:	4822      	ldr	r0, [pc, #136]	; (8007734 <main+0x744>)
 80076ac:	f7f9 fd28 	bl	8001100 <chThdCreateI>
 80076b0:	67f0      	str	r0, [r6, #124]	; 0x7c
 80076b2:	f7f9 fd85 	bl	80011c0 <chSchReadyI>
 80076b6:	f7fb f8b3 	bl	8002820 <chSchRescheduleS>
 80076ba:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80076be:	f043 0301 	orr.w	r3, r3, #1
 80076c2:	f8c8 3008 	str.w	r3, [r8, #8]
 80076c6:	e720      	b.n	800750a <main+0x51a>
 80076c8:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80076cc:	f8c8 3018 	str.w	r3, [r8, #24]
 80076d0:	e7e0      	b.n	8007694 <main+0x6a4>
 80076d2:	f8c2 9b00 	str.w	r9, [r2, #2816]	; 0xb00
 80076d6:	f8d0 2b08 	ldr.w	r2, [r0, #2824]	; 0xb08
 80076da:	06d2      	lsls	r2, r2, #27
 80076dc:	d5fb      	bpl.n	80076d6 <main+0x6e6>
 80076de:	e7b1      	b.n	8007644 <main+0x654>
 80076e0:	20001e7f 	.word	0x20001e7f
 80076e4:	20030000 	.word	0x20030000
 80076e8:	08000301 	.word	0x08000301
 80076ec:	08007ca0 	.word	0x08007ca0
 80076f0:	20000e70 	.word	0x20000e70
 80076f4:	080002f1 	.word	0x080002f1
 80076f8:	08008c90 	.word	0x08008c90
 80076fc:	200014ec 	.word	0x200014ec
 8007700:	08000c21 	.word	0x08000c21
 8007704:	08000cb1 	.word	0x08000cb1
 8007708:	08008230 	.word	0x08008230
 800770c:	08008b40 	.word	0x08008b40
 8007710:	080039b1 	.word	0x080039b1
 8007714:	20001be8 	.word	0x20001be8
 8007718:	08008240 	.word	0x08008240
 800771c:	08006da1 	.word	0x08006da1
 8007720:	080039f1 	.word	0x080039f1
 8007724:	20001d30 	.word	0x20001d30
 8007728:	40001440 	.word	0x40001440
 800772c:	02200003 	.word	0x02200003
 8007730:	08003e11 	.word	0x08003e11
 8007734:	20001148 	.word	0x20001148
 8007738:	200014dc 	.word	0x200014dc
 800773c:	20001408 	.word	0x20001408
 8007740:	080080a0 	.word	0x080080a0
	...

08007750 <__early_init>:
 8007750:	4b2a      	ldr	r3, [pc, #168]	; (80077fc <__early_init+0xac>)
 8007752:	4a2b      	ldr	r2, [pc, #172]	; (8007800 <__early_init+0xb0>)
 8007754:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 8007758:	f44f 4140 	mov.w	r1, #49152	; 0xc000
 800775c:	6418      	str	r0, [r3, #64]	; 0x40
 800775e:	6011      	str	r1, [r2, #0]
 8007760:	681a      	ldr	r2, [r3, #0]
 8007762:	f042 0201 	orr.w	r2, r2, #1
 8007766:	601a      	str	r2, [r3, #0]
 8007768:	681a      	ldr	r2, [r3, #0]
 800776a:	0792      	lsls	r2, r2, #30
 800776c:	d5fc      	bpl.n	8007768 <__early_init+0x18>
 800776e:	6899      	ldr	r1, [r3, #8]
 8007770:	4a22      	ldr	r2, [pc, #136]	; (80077fc <__early_init+0xac>)
 8007772:	f021 0103 	bic.w	r1, r1, #3
 8007776:	6099      	str	r1, [r3, #8]
 8007778:	6899      	ldr	r1, [r3, #8]
 800777a:	6099      	str	r1, [r3, #8]
 800777c:	6893      	ldr	r3, [r2, #8]
 800777e:	f013 030c 	ands.w	r3, r3, #12
 8007782:	d1fb      	bne.n	800777c <__early_init+0x2c>
 8007784:	6810      	ldr	r0, [r2, #0]
 8007786:	491d      	ldr	r1, [pc, #116]	; (80077fc <__early_init+0xac>)
 8007788:	f000 00f9 	and.w	r0, r0, #249	; 0xf9
 800778c:	6010      	str	r0, [r2, #0]
 800778e:	6093      	str	r3, [r2, #8]
 8007790:	6813      	ldr	r3, [r2, #0]
 8007792:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007796:	6013      	str	r3, [r2, #0]
 8007798:	680b      	ldr	r3, [r1, #0]
 800779a:	0398      	lsls	r0, r3, #14
 800779c:	d5fc      	bpl.n	8007798 <__early_init+0x48>
 800779e:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 80077a0:	4a16      	ldr	r2, [pc, #88]	; (80077fc <__early_init+0xac>)
 80077a2:	f043 0301 	orr.w	r3, r3, #1
 80077a6:	674b      	str	r3, [r1, #116]	; 0x74
 80077a8:	6f53      	ldr	r3, [r2, #116]	; 0x74
 80077aa:	0799      	lsls	r1, r3, #30
 80077ac:	d5fc      	bpl.n	80077a8 <__early_init+0x58>
 80077ae:	4b15      	ldr	r3, [pc, #84]	; (8007804 <__early_init+0xb4>)
 80077b0:	6053      	str	r3, [r2, #4]
 80077b2:	6813      	ldr	r3, [r2, #0]
 80077b4:	4912      	ldr	r1, [pc, #72]	; (8007800 <__early_init+0xb0>)
 80077b6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80077ba:	6013      	str	r3, [r2, #0]
 80077bc:	684b      	ldr	r3, [r1, #4]
 80077be:	045a      	lsls	r2, r3, #17
 80077c0:	d5fc      	bpl.n	80077bc <__early_init+0x6c>
 80077c2:	490e      	ldr	r1, [pc, #56]	; (80077fc <__early_init+0xac>)
 80077c4:	680b      	ldr	r3, [r1, #0]
 80077c6:	019b      	lsls	r3, r3, #6
 80077c8:	d5fc      	bpl.n	80077c4 <__early_init+0x74>
 80077ca:	4b0f      	ldr	r3, [pc, #60]	; (8007808 <__early_init+0xb8>)
 80077cc:	4a0f      	ldr	r2, [pc, #60]	; (800780c <__early_init+0xbc>)
 80077ce:	608a      	str	r2, [r1, #8]
 80077d0:	f240 7205 	movw	r2, #1797	; 0x705
 80077d4:	601a      	str	r2, [r3, #0]
 80077d6:	688b      	ldr	r3, [r1, #8]
 80077d8:	4a08      	ldr	r2, [pc, #32]	; (80077fc <__early_init+0xac>)
 80077da:	f043 0302 	orr.w	r3, r3, #2
 80077de:	608b      	str	r3, [r1, #8]
 80077e0:	6893      	ldr	r3, [r2, #8]
 80077e2:	f003 030c 	and.w	r3, r3, #12
 80077e6:	2b08      	cmp	r3, #8
 80077e8:	d1fa      	bne.n	80077e0 <__early_init+0x90>
 80077ea:	6c53      	ldr	r3, [r2, #68]	; 0x44
 80077ec:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80077f0:	6453      	str	r3, [r2, #68]	; 0x44
 80077f2:	6e53      	ldr	r3, [r2, #100]	; 0x64
 80077f4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80077f8:	6653      	str	r3, [r2, #100]	; 0x64
 80077fa:	4770      	bx	lr
 80077fc:	40023800 	.word	0x40023800
 8007800:	40007000 	.word	0x40007000
 8007804:	07405408 	.word	0x07405408
 8007808:	40023c00 	.word	0x40023c00
 800780c:	38089400 	.word	0x38089400

08007810 <chThdExit>:
 8007810:	2320      	movs	r3, #32
 8007812:	f383 8811 	msr	BASEPRI, r3
 8007816:	f7ff baa3 	b.w	8006d60 <chThdExitS>
 800781a:	bf00      	nop
 800781c:	0000      	movs	r0, r0
	...

08007820 <thread1.lto_priv.77>:
 8007820:	f7ff bff6 	b.w	8007810 <chThdExit>
	...

08007830 <chSchDoReschedule>:
 8007830:	f7fa bfd6 	b.w	80027e0 <chSchDoRescheduleAhead>
	...

08007840 <__default_exit>:
 8007840:	e7fe      	b.n	8007840 <__default_exit>
 8007842:	bf00      	nop
	...

08007850 <__late_init>:
 8007850:	4770      	bx	lr
 8007852:	bf00      	nop
	...

08007860 <strcasecmp>:
 8007860:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007862:	4607      	mov	r7, r0
 8007864:	460e      	mov	r6, r1
 8007866:	f817 4b01 	ldrb.w	r4, [r7], #1
 800786a:	f000 f869 	bl	8007940 <__locale_ctype_ptr>
 800786e:	4420      	add	r0, r4
 8007870:	f816 5b01 	ldrb.w	r5, [r6], #1
 8007874:	7843      	ldrb	r3, [r0, #1]
 8007876:	f003 0303 	and.w	r3, r3, #3
 800787a:	2b01      	cmp	r3, #1
 800787c:	bf08      	it	eq
 800787e:	3420      	addeq	r4, #32
 8007880:	f000 f85e 	bl	8007940 <__locale_ctype_ptr>
 8007884:	4428      	add	r0, r5
 8007886:	7843      	ldrb	r3, [r0, #1]
 8007888:	f003 0303 	and.w	r3, r3, #3
 800788c:	2b01      	cmp	r3, #1
 800788e:	d004      	beq.n	800789a <strcasecmp+0x3a>
 8007890:	1b60      	subs	r0, r4, r5
 8007892:	d101      	bne.n	8007898 <strcasecmp+0x38>
 8007894:	2d00      	cmp	r5, #0
 8007896:	d1e6      	bne.n	8007866 <strcasecmp+0x6>
 8007898:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800789a:	f105 0020 	add.w	r0, r5, #32
 800789e:	1a20      	subs	r0, r4, r0
 80078a0:	d0e1      	beq.n	8007866 <strcasecmp+0x6>
 80078a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080078b0 <strpbrk>:
 80078b0:	b430      	push	{r4, r5}
 80078b2:	7804      	ldrb	r4, [r0, #0]
 80078b4:	b1dc      	cbz	r4, 80078ee <strpbrk+0x3e>
 80078b6:	780d      	ldrb	r5, [r1, #0]
 80078b8:	b19d      	cbz	r5, 80078e2 <strpbrk+0x32>
 80078ba:	42ac      	cmp	r4, r5
 80078bc:	d00f      	beq.n	80078de <strpbrk+0x2e>
 80078be:	460a      	mov	r2, r1
 80078c0:	e001      	b.n	80078c6 <strpbrk+0x16>
 80078c2:	429c      	cmp	r4, r3
 80078c4:	d00b      	beq.n	80078de <strpbrk+0x2e>
 80078c6:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80078ca:	2b00      	cmp	r3, #0
 80078cc:	d1f9      	bne.n	80078c2 <strpbrk+0x12>
 80078ce:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 80078d2:	2c00      	cmp	r4, #0
 80078d4:	d1f0      	bne.n	80078b8 <strpbrk+0x8>
 80078d6:	7813      	ldrb	r3, [r2, #0]
 80078d8:	2b00      	cmp	r3, #0
 80078da:	bf08      	it	eq
 80078dc:	2000      	moveq	r0, #0
 80078de:	bc30      	pop	{r4, r5}
 80078e0:	4770      	bx	lr
 80078e2:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 80078e6:	460a      	mov	r2, r1
 80078e8:	2c00      	cmp	r4, #0
 80078ea:	d1e5      	bne.n	80078b8 <strpbrk+0x8>
 80078ec:	e7f3      	b.n	80078d6 <strpbrk+0x26>
 80078ee:	4620      	mov	r0, r4
 80078f0:	e7f5      	b.n	80078de <strpbrk+0x2e>
 80078f2:	bf00      	nop
	...

08007900 <strspn>:
 8007900:	b470      	push	{r4, r5, r6}
 8007902:	7804      	ldrb	r4, [r0, #0]
 8007904:	b1a4      	cbz	r4, 8007930 <strspn+0x30>
 8007906:	780d      	ldrb	r5, [r1, #0]
 8007908:	4606      	mov	r6, r0
 800790a:	b14d      	cbz	r5, 8007920 <strspn+0x20>
 800790c:	42a5      	cmp	r5, r4
 800790e:	d00a      	beq.n	8007926 <strspn+0x26>
 8007910:	460a      	mov	r2, r1
 8007912:	e001      	b.n	8007918 <strspn+0x18>
 8007914:	42a3      	cmp	r3, r4
 8007916:	d006      	beq.n	8007926 <strspn+0x26>
 8007918:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800791c:	2b00      	cmp	r3, #0
 800791e:	d1f9      	bne.n	8007914 <strspn+0x14>
 8007920:	1b80      	subs	r0, r0, r6
 8007922:	bc70      	pop	{r4, r5, r6}
 8007924:	4770      	bx	lr
 8007926:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 800792a:	2c00      	cmp	r4, #0
 800792c:	d1ed      	bne.n	800790a <strspn+0xa>
 800792e:	e7f7      	b.n	8007920 <strspn+0x20>
 8007930:	4620      	mov	r0, r4
 8007932:	e7f6      	b.n	8007922 <strspn+0x22>
	...

08007940 <__locale_ctype_ptr>:
 8007940:	4b04      	ldr	r3, [pc, #16]	; (8007954 <__locale_ctype_ptr+0x14>)
 8007942:	4a05      	ldr	r2, [pc, #20]	; (8007958 <__locale_ctype_ptr+0x18>)
 8007944:	681b      	ldr	r3, [r3, #0]
 8007946:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007948:	2b00      	cmp	r3, #0
 800794a:	bf08      	it	eq
 800794c:	4613      	moveq	r3, r2
 800794e:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
 8007952:	4770      	bx	lr
 8007954:	20000a44 	.word	0x20000a44
 8007958:	200008d8 	.word	0x200008d8
 800795c:	00000000 	.word	0x00000000

08007960 <__ascii_mbtowc>:
 8007960:	b082      	sub	sp, #8
 8007962:	b149      	cbz	r1, 8007978 <__ascii_mbtowc+0x18>
 8007964:	b15a      	cbz	r2, 800797e <__ascii_mbtowc+0x1e>
 8007966:	b16b      	cbz	r3, 8007984 <__ascii_mbtowc+0x24>
 8007968:	7813      	ldrb	r3, [r2, #0]
 800796a:	600b      	str	r3, [r1, #0]
 800796c:	7812      	ldrb	r2, [r2, #0]
 800796e:	1c10      	adds	r0, r2, #0
 8007970:	bf18      	it	ne
 8007972:	2001      	movne	r0, #1
 8007974:	b002      	add	sp, #8
 8007976:	4770      	bx	lr
 8007978:	a901      	add	r1, sp, #4
 800797a:	2a00      	cmp	r2, #0
 800797c:	d1f3      	bne.n	8007966 <__ascii_mbtowc+0x6>
 800797e:	4610      	mov	r0, r2
 8007980:	b002      	add	sp, #8
 8007982:	4770      	bx	lr
 8007984:	f06f 0001 	mvn.w	r0, #1
 8007988:	e7f4      	b.n	8007974 <__ascii_mbtowc+0x14>
 800798a:	bf00      	nop
 800798c:	0000      	movs	r0, r0
	...

08007990 <__ascii_wctomb>:
 8007990:	b121      	cbz	r1, 800799c <__ascii_wctomb+0xc>
 8007992:	2aff      	cmp	r2, #255	; 0xff
 8007994:	d804      	bhi.n	80079a0 <__ascii_wctomb+0x10>
 8007996:	700a      	strb	r2, [r1, #0]
 8007998:	2001      	movs	r0, #1
 800799a:	4770      	bx	lr
 800799c:	4608      	mov	r0, r1
 800799e:	4770      	bx	lr
 80079a0:	238a      	movs	r3, #138	; 0x8a
 80079a2:	6003      	str	r3, [r0, #0]
 80079a4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80079a8:	4770      	bx	lr
 80079aa:	bf00      	nop
 80079ac:	0000      	movs	r0, r0
 80079ae:	0000      	movs	r0, r0
 80079b0:	202a2a2a 	.word	0x202a2a2a
 80079b4:	6e72654b 	.word	0x6e72654b
 80079b8:	203a6c65 	.word	0x203a6c65
 80079bc:	20202020 	.word	0x20202020
 80079c0:	00002020 	.word	0x00002020
 80079c4:	202a2a2a 	.word	0x202a2a2a
 80079c8:	706d6f43 	.word	0x706d6f43
 80079cc:	64656c69 	.word	0x64656c69
 80079d0:	2020203a 	.word	0x2020203a
 80079d4:	00002020 	.word	0x00002020
 80079d8:	202a2a2a 	.word	0x202a2a2a
 80079dc:	706d6f43 	.word	0x706d6f43
 80079e0:	72656c69 	.word	0x72656c69
 80079e4:	2020203a 	.word	0x2020203a
 80079e8:	00002020 	.word	0x00002020
 80079ec:	202a2a2a 	.word	0x202a2a2a
 80079f0:	68637241 	.word	0x68637241
 80079f4:	63657469 	.word	0x63657469
 80079f8:	65727574 	.word	0x65727574
 80079fc:	0000203a 	.word	0x0000203a
 8007a00:	202a2a2a 	.word	0x202a2a2a
 8007a04:	65726f43 	.word	0x65726f43
 8007a08:	72615620 	.word	0x72615620
 8007a0c:	746e6169 	.word	0x746e6169
 8007a10:	0000203a 	.word	0x0000203a
 8007a14:	202a2a2a 	.word	0x202a2a2a
 8007a18:	74726f50 	.word	0x74726f50
 8007a1c:	666e4920 	.word	0x666e4920
 8007a20:	20203a6f 	.word	0x20203a6f
 8007a24:	00002020 	.word	0x00002020
 8007a28:	202a2a2a 	.word	0x202a2a2a
 8007a2c:	74616c50 	.word	0x74616c50
 8007a30:	6d726f66 	.word	0x6d726f66
 8007a34:	2020203a 	.word	0x2020203a
 8007a38:	00002020 	.word	0x00002020
 8007a3c:	202a2a2a 	.word	0x202a2a2a
 8007a40:	74736554 	.word	0x74736554
 8007a44:	616f4220 	.word	0x616f4220
 8007a48:	203a6472 	.word	0x203a6472
 8007a4c:	00002020 	.word	0x00002020
 8007a50:	202d2d2d 	.word	0x202d2d2d
 8007a54:	74736554 	.word	0x74736554
 8007a58:	73614320 	.word	0x73614320
 8007a5c:	00002065 	.word	0x00002065
 8007a60:	00002820 	.word	0x00002820
 8007a64:	202d2d2d 	.word	0x202d2d2d
 8007a68:	75736552 	.word	0x75736552
 8007a6c:	203a746c 	.word	0x203a746c
 8007a70:	4c494146 	.word	0x4c494146
 8007a74:	20455255 	.word	0x20455255
 8007a78:	00002328 	.word	0x00002328
 8007a7c:	00005b20 	.word	0x00005b20
 8007a80:	616e6946 	.word	0x616e6946
 8007a84:	6572206c 	.word	0x6572206c
 8007a88:	746c7573 	.word	0x746c7573
 8007a8c:	0000203a 	.word	0x0000203a
 8007a90:	202a2a2a 	.word	0x202a2a2a
 8007a94:	62696843 	.word	0x62696843
 8007a98:	2f534f69 	.word	0x2f534f69
 8007a9c:	74205452 	.word	0x74205452
 8007aa0:	20747365 	.word	0x20747365
 8007aa4:	74697573 	.word	0x74697573
 8007aa8:	00000065 	.word	0x00000065
 8007aac:	002a2a2a 	.word	0x002a2a2a
 8007ab0:	20727041 	.word	0x20727041
 8007ab4:	32203620 	.word	0x32203620
 8007ab8:	20383130 	.word	0x20383130
 8007abc:	3631202d 	.word	0x3631202d
 8007ac0:	3a31303a 	.word	0x3a31303a
 8007ac4:	00003233 	.word	0x00003233
 8007ac8:	00000029 	.word	0x00000029
 8007acc:	0000295d 	.word	0x0000295d
 8007ad0:	202d2d2d 	.word	0x202d2d2d
 8007ad4:	75736552 	.word	0x75736552
 8007ad8:	203a746c 	.word	0x203a746c
 8007adc:	43435553 	.word	0x43435553
 8007ae0:	00535345 	.word	0x00535345
 8007ae4:	4c494146 	.word	0x4c494146
 8007ae8:	00455255 	.word	0x00455255
 8007aec:	00000000 	.word	0x00000000
 8007af0:	6e696c62 	.word	0x6e696c62
 8007af4:	3172656b 	.word	0x3172656b
	...
 8007b00:	6e696c62 	.word	0x6e696c62
 8007b04:	3272656b 	.word	0x3272656b
	...
 8007b10:	00000920 	.word	0x00000920
	...
 8007b20:	61686e75 	.word	0x61686e75
 8007b24:	656c646e 	.word	0x656c646e
 8007b28:	78652064 	.word	0x78652064
 8007b2c:	74706563 	.word	0x74706563
 8007b30:	006e6f69 	.word	0x006e6f69
	...

08007b40 <active_status>:
	...
 8007b50:	202d2d2d 726f6353 203a2065 00000000     --- Score : ....
 8007b60:	6d697420 2f737265 00000053 00000000      timers/S.......
 8007b70:	69617720 69732b74 6c616e67 0000532f      wait+signal/S..
 8007b80:	636f6c20 6e752b6b 6b636f6c 0000532f      lock+unlock/S..
 8007b90:	202d2d2d 74737953 203a6d65 00000000     --- System: ....
 8007ba0:	74796220 00007365 202d2d2d 65726854      bytes..--- Thre
 8007bb0:	203a6461 00000000 202d2d2d 656d6954     ad: ....--- Time
 8007bc0:	203a2072 00000000 202d2d2d 616d6553     r : ....--- Sema
 8007bd0:	203a6870 00000000 202d2d2d 6e657645     ph: ....--- Even
 8007be0:	203a5374 00000000 202d2d2d 6e657645     tS: ....--- Even
 8007bf0:	203a4c74 00000000 202d2d2d 6574754d     tL: ....--- Mute
 8007c00:	203a2078 00000000 202d2d2d 646e6f43     x : ....--- Cond
 8007c10:	203a2e56 00000000 202d2d2d 75657551     V.: ....--- Queu
 8007c20:	203a2065 00000000 202d2d2d 6c69614d     e : ....--- Mail
 8007c30:	203a2e42 00000000 00000000 00000000     B.: ............
 8007c40:	67736d20 2c532f73 00000020 00000000      msgs/S, .......
 8007c50:	72687420 73646165 0000532f 00000000      threads/S......
 8007c60:	73657220 64656863 73656c75 202c532f      reschedules/S, 
	...
 8007c80:	78746320 2f637773 00000053 00000000      ctxswc/S.......
 8007c90:	74796220 532f7365 00000000 00000000      bytes/S........

08007ca0 <ch_debug>:
 8007ca0:	6e69616d 18011600 08440404 1814100c     main......D.....
 8007cb0:	1e1d1c00 00000000 00000000 00000000     ................
 8007cc0:	6c756e28 0000296c 00000000 00000000     (null)..........
 8007cd0:	6f666e69 00000000 2e302e33 00000030     info....3.0.0...
 8007ce0:	6e72654b 203a6c65 20202020 73252020     Kernel:       %s
 8007cf0:	00000a0d 20434347 2e322e37 30322031     ....GCC 7.2.1 20
 8007d00:	39303731 28203430 656c6572 29657361     170904 (release)
 8007d10:	52415b20 6d652f4d 64646562 372d6465      [ARM/embedded-7
 8007d20:	6172622d 2068636e 69766572 6e6f6973     -branch revision
 8007d30:	35353220 5d343032 00000000 706d6f43      255204]....Comp
 8007d40:	72656c69 2020203a 73252020 00000a0d     iler:     %s....
 8007d50:	764d5241 454d2d37 00000000 68637241     ARMv7-ME....Arch
 8007d60:	63657469 65727574 7325203a 00000a0d     itecture: %s....
 8007d70:	74726f43 4d2d7865 00000034 65726f43     Cortex-M4...Core
 8007d80:	72615620 746e6169 7325203a 00000a0d      Variant: %s....
 8007d90:	61766441 6465636e 72656b20 206c656e     Advanced kernel 
 8007da0:	65646f6d 00000000 74726f50 666e4920     mode....Port Inf
 8007db0:	20203a6f 73252020 00000a0d 334d5453     o:    %s....STM3
 8007dc0:	32344632 69482039 50206867 6f667265     2F429 High Perfo
 8007dd0:	6e616d72 77206563 20687469 20505344     rmance with DSP 
 8007de0:	20646e61 00555046 74616c50 6d726f66     and FPU.Platform
 8007df0:	2020203a 73252020 00000a0d 694d5453     :     %s....STMi
 8007e00:	656f7263 7463656c 696e6f72 53207363     croelectronics S
 8007e10:	32334d54 39323446 69442d49 766f6373     TM32F429I-Discov
 8007e20:	00797265 72616f42 20203a64 20202020     ery.Board:      
 8007e30:	73252020 00000a0d 00202d20 20727041       %s.... - .Apr 
 8007e40:	32203620 00383130 6c697542 69742064      6 2018.Build ti
 8007e50:	203a656d 73252020 73257325 00000a0d     me:   %s%s%s....
 8007e60:	303a3631 32333a31 00000000 00000000     16:01:32........
 8007e70:	67617355 6d203a65 0a0d6d65 00000000     Usage: mem......
 8007e80:	65726f63 65726620 656d2065 79726f6d     core free memory
 8007e90:	25203a20 79622075 0d736574 0000000a      : %u bytes.....
 8007ea0:	70616568 61726620 6e656d67 20207374     heap fragments  
 8007eb0:	25203a20 000a0d75 70616568 65726620      : %u...heap fre
 8007ec0:	6f742065 206c6174 25203a20 79622075     e total  : %u by
 8007ed0:	0d736574 0000000a 00000000 00000000     tes.............
 8007ee0:	74737973 00656d69 67617355 25203a65     systime.Usage: %
 8007ef0:	000a0d73 0d756c25 0000000a 00000000     s...%lu.........
 8007f00:	67617355 74203a65 0d747365 0000000a     Usage: test.....
 8007f10:	2074756f 6d20666f 726f6d65 000a0d79     out of memory...
 8007f20:	67617355 74203a65 61657268 0a0d7364     Usage: threads..
 8007f30:	00000000 20202020 72646461 20202020     ....    addr    
 8007f40:	63617473 7270206b 72206f69 20736665     stack prio refs 
 8007f50:	20202020 74617473 69742065 0a0d656d         state time..
 8007f60:	00000000 6c383025 30252078 20786c38     ....%08lx %08lx 
 8007f70:	756c3425 6c342520 39252075 000a0d73     %4lu %4lu %9s...

08007f80 <commands>:
 8007f80:	080087ec 08004761 080087f0 080048e1     ....aG.......H..
 8007f90:	080086c8 080050d1 00000000 00000000     .....P..........
 8007fa0:	00004241 00000000 00000000 00000000     AB..............
 8007fb0:	00000042 00000043 00000000 00000000     B...C...........
 8007fc0:	00000041 00000000 00000000 00000000     A...............

08007fd0 <ep0config>:
 8007fd0:	00000000 080021b1 08000ac1 08000a21     .....!......!...
 8007fe0:	00400040 2000140c 2000140c 00000001     @.@.... ... ....
 8007ff0:	20001420 00000000 00000000 00000000      .. ............

08008000 <ep1config>:
 8008000:	00000002 00000000 08001481 08001401     ................
 8008010:	00400040 20001428 2000143c 00000002     @.@.(.. <.. ....
	...

08008030 <ep2config>:
 8008030:	00000003 00000000 08000ca1 00000000     ................
 8008040:	00000010 20001450 00000000 00000001     ....P.. ........
	...

08008060 <evhndl>:
 8008060:	08000821 08000811 08000801 00000000     !...............
 8008070:	00434241 00000000 00000000 00000000     ABC.............

08008080 <halted_status>:
 8008080:	00000001 00000000 00000000 00000000     ................

08008090 <hsparams>:
 8008090:	00000100 00000400 00000005 00000000     ................
 80080a0:	656c6469 00000000 00000000 00000000     idle............
 80080b0:	44434241 00000045 00000000 00000000     ABCDE...........

080080c0 <patternbmk>:
 80080c0:	08008890 080088e0 080088f0 08008900     ................
 80080d0:	08008910 08008920 08008930 08008940     .... ...0...@...
 80080e0:	08008950 080088a0 080088b0 080088c0     P...............
 80080f0:	080088d0 00000000 00000000 00000000     ................

08008100 <patterndyn>:
 8008100:	08008960 08008970 08008980 00000000     `...p...........

08008110 <patternevt>:
 8008110:	08008990 080089a0 080089b0 00000000     ................

08008120 <patternheap>:
 8008120:	080089c0 00000000 00000000 00000000     ................

08008130 <patternmbox>:
 8008130:	080089d0 00000000 00000000 00000000     ................

08008140 <patternmsg>:
 8008140:	080089e0 00000000 00000000 00000000     ................

08008150 <patternmtx>:
 8008150:	080089f0 08008a00 08008a10 08008a20     ............ ...
 8008160:	08008a30 08008a40 00000000 00000000     0...@...........

08008170 <patternpools>:
 8008170:	08008a50 00000000 00000000 00000000     P...............

08008180 <patternqueues>:
 8008180:	08008a60 08008a70 00000000 00000000     `...p...........

08008190 <patterns>:
 8008190:	080081f0 08008200 080081d0 08008150     ............P...
 80081a0:	08008140 08008130 08008110 08008120     @...0....... ...
 80081b0:	08008170 08008100 08008180 080080c0     p...............
	...

080081d0 <patternsem>:
 80081d0:	08008a80 08008a90 08008aa0 08008ab0     ................
	...

080081f0 <patternsys>:
 80081f0:	08008ac0 08008ad0 08008ae0 00000000     ................

08008200 <patternthd>:
 8008200:	08008af0 08008b00 08008b10 08008b20     ............ ...
	...
 8008220:	44434241 00000000 00000000 00000000     ABCD............

08008230 <serusbcfg>:
 8008230:	200010c8 00020101 00000000 00000000     ... ............

08008240 <shell_cfg1>:
 8008240:	20000e70 08007f80 00000000 00000000     p.. ............
 8008250:	6c656873 0000006c 68430a0d 4f696269     shell.....ChibiO
 8008260:	54522f53 65685320 0a0d6c6c 00000000     S/RT Shell......
 8008270:	203e6863 00000000 0000445e 6f6c0a0d     ch> ....^D....lo
 8008280:	74756f67 00000000 206f6f74 796e616d     gout....too many
 8008290:	67726120 6e656d75 0a0d7374 00000000      arguments......
 80082a0:	74697865 00000000 706c6568 00000000     exit....help....
 80082b0:	6d6d6f43 73646e61 6568203a 6520706c     Commands: help e
 80082c0:	20746978 00000000 00207325 00007325     xit ....%s .%s..
 80082d0:	0a0d3f20 00000000 00000000 00000000      ?..............

080082e0 <states.7493>:
 80082e0:	080087f8 08008800 08008808 08008810     ................
 80082f0:	0800881c 08008824 0800882c 08008834     ....$...,...4...
 8008300:	0800883c 08008848 08008850 08008858     <...H...P...X...
 8008310:	08008864 0800886c 08008874 0800887c     d...l...t...|...
 8008320:	636e6542 72616d68 52202c6b 66204d41     Benchmark, RAM f
 8008330:	70746f6f 746e6972 00000000 636e6542     ootprint....Benc
 8008340:	72616d68 6d202c6b 78657475 6c207365     hmark, mutexes l
 8008350:	2f6b636f 6f6c6e75 00006b63 636e6542     ock/unlock..Benc
 8008360:	72616d68 73202c6b 70616d65 65726f68     hmark, semaphore
 8008370:	61772073 732f7469 616e6769 0000006c     s wait/signal...
 8008380:	636e6542 72616d68 76202c6b 75747269     Benchmark, virtu
 8008390:	74206c61 72656d69 65732073 65722f74     al timers set/re
 80083a0:	00746573 636e6542 72616d68 49202c6b     set.Benchmark, I
 80083b0:	51204f2f 65756575 68742073 67756f72     /O Queues throug
 80083c0:	74757068 00000000 636e6542 72616d68     hput....Benchmar
 80083d0:	72202c6b 646e756f 626f7220 63206e69     k, round robin c
 80083e0:	65746e6f 73207478 63746977 676e6968     ontext switching
 80083f0:	00000000 636e6542 72616d68 6d202c6b     ....Benchmark, m
 8008400:	20737361 63736572 75646568 202c656c     ass reschedule, 
 8008410:	68742035 64616572 00000073 636e6542     5 threads...Benc
 8008420:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8008430:	61657263 6f206574 00796c6e 636e6542     create only.Benc
 8008440:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8008450:	6c6c7566 63796320 0000656c 636e6542     full cycle..Benc
 8008460:	72616d68 63202c6b 65746e6f 73207478     hmark, context s
 8008470:	63746977 00000068 636e6542 72616d68     witch...Benchmar
 8008480:	6d202c6b 61737365 20736567 00003323     k, messages #3..
 8008490:	636e6542 72616d68 6d202c6b 61737365     Benchmark, messa
 80084a0:	20736567 00003223 636e6542 72616d68     ges #2..Benchmar
 80084b0:	6d202c6b 61737365 20736567 00003123     k, messages #1..
 80084c0:	75657551 202c7365 7074756f 71207475     Queues, output q
 80084d0:	65756575 00000073 75657551 202c7365     ueues...Queues, 
 80084e0:	75706e69 75712074 73657565 00000000     input queues....
 80084f0:	616e7944 2063696d 73495041 6572202c     Dynamic APIs, re
 8008500:	74736967 61207972 7220646e 72656665     gistry and refer
 8008510:	65636e65 00000073 616e7944 2063696d     ences...Dynamic 
 8008520:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8008530:	69746165 66206e6f 206d6f72 6f6d656d     eation from memo
 8008540:	70207972 006c6f6f 616e7944 2063696d     ry pool.Dynamic 
 8008550:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8008560:	69746165 66206e6f 206d6f72 70616568     eation from heap
 8008570:	00000000 6f6d654d 50207972 736c6f6f     ....Memory Pools
 8008580:	7571202c 2f657565 75716564 00657565     , queue/dequeue.
 8008590:	70616548 6c61202c 61636f6c 6e6f6974     Heap, allocation
 80085a0:	646e6120 61726620 6e656d67 69746174      and fragmentati
 80085b0:	74206e6f 00747365 6e657645 202c7374     on test.Events, 
 80085c0:	656d6974 7374756f 00000000 6e657645     timeouts....Even
 80085d0:	202c7374 74696177 646e6120 6f726220     ts, wait and bro
 80085e0:	61636461 00007473 6e657645 202c7374     adcast..Events, 
 80085f0:	69676572 61727473 6e6f6974 646e6120     registration and
 8008600:	73696420 63746170 00000068 6c69614d      dispatch...Mail
 8008610:	65786f62 71202c73 69756575 6120676e     boxes, queuing a
 8008620:	7420646e 6f656d69 00737475 7373654d     nd timeouts.Mess
 8008630:	73656761 6f6c202c 0000706f 646e6f43     ages, loop..Cond
 8008640:	2c726156 6f6f6220 74207473 00747365     Var, boost test.
 8008650:	646e6f43 2c726156 6f726220 61636461     CondVar, broadca
 8008660:	74207473 00747365 646e6f43 2c726156     st test.CondVar,
 8008670:	67697320 206c616e 74736574 00000000      signal test....
 8008680:	6574754d 2c736578 61747320 00737574     Mutexes, status.
 8008690:	6574754d 2c736578 69727020 7469726f     Mutexes, priorit
 80086a0:	65722079 6e727574 00000000 6574754d     y return....Mute
 80086b0:	2c736578 69727020 7469726f 6e652079     xes, priority en
 80086c0:	75657571 20676e69 74736574 00000000     queuing test....
 80086d0:	616e6942 53207972 70616d65 65726f68     Binary Semaphore
 80086e0:	66202c73 74636e75 616e6f69 7974696c     s, functionality
 80086f0:	00000000 616d6553 726f6870 202c7365     ....Semaphores, 
 8008700:	6d6f7461 73206369 616e6769 61772d6c     atomic signal-wa
 8008710:	00007469 616d6553 726f6870 202c7365     it..Semaphores, 
 8008720:	656d6974 0074756f 616d6553 726f6870     timeout.Semaphor
 8008730:	202c7365 75716e65 6e697565 00000067     es, enqueuing...
 8008740:	65726854 2c736461 6c656420 00737961     Threads, delays.
 8008750:	65726854 2c736461 69727020 7469726f     Threads, priorit
 8008760:	68632079 65676e61 00000000 65726854     y change....Thre
 8008770:	2c736461 716e6520 69756575 7420676e     ads, enqueuing t
 8008780:	20747365 00003223 65726854 2c736461     est #2..Threads,
 8008790:	716e6520 69756575 7420676e 20747365      enqueuing test 
 80087a0:	00003123 74737953 202c6d65 65746e69     #1..System, inte
 80087b0:	74697267 00000079 74737953 202c6d65     grity...System, 
 80087c0:	65746e69 70757272 68207374 6c646e61     interrupts handl
 80087d0:	00676e69 74737953 202c6d65 74697263     ing.System, crit
 80087e0:	6c616369 6e6f7a20 00007365 006d656d     ical zones..mem.
 80087f0:	65726874 00736461 44414552 00000059     threads.READY...
 8008800:	52525543 00544e45 54535457 00545241     CURRENT.WTSTART.
 8008810:	50535553 45444e45 00000044 55455551     SUSPENDED...QUEU
 8008820:	00004445 45535457 0000004d 544d5457     ED..WTSEM...WTMT
 8008830:	00000058 4f435457 0000444e 45454c53     X...WTCOND..SLEE
 8008840:	474e4950 00000000 58455457 00005449     PING....WTEXIT..
 8008850:	524f5457 00545645 4e415457 54564544     WTOREVT.WTANDEVT
 8008860:	00000000 4d444e53 00514753 4d444e53     ....SNDMSGQ.SNDM
 8008870:	00004753 534d5457 00000047 414e4946     SG..WTMSG...FINA
 8008880:	0000004c 00000000 00000000 00000000     L...............

08008890 <testbmk1>:
 8008890:	080084a8 00000000 00000000 080055e1     .............U..

080088a0 <testbmk10>:
 80088a0:	08008380 00000000 00000000 08003bb1     .............;..

080088b0 <testbmk11>:
 80088b0:	0800835c 08000381 00000000 08004e51     \...........QN..

080088c0 <testbmk12>:
 80088c0:	0800833c 08000371 00000000 08004431     <...q.......1D..

080088d0 <testbmk13>:
 80088d0:	08008320 00000000 00000000 080020c1      ............ ..

080088e0 <testbmk2>:
 80088e0:	08008490 00000000 00000000 08005571     ............qU..

080088f0 <testbmk3>:
 80088f0:	08008478 00000000 00000000 08005491     x............T..

08008900 <testbmk4>:
 8008900:	0800845c 00000000 00000000 080053e1     \............S..

08008910 <testbmk5>:
 8008910:	0800843c 00000000 00000000 08005121     <...........!Q..

08008920 <testbmk6>:
 8008920:	0800841c 00000000 00000000 08003cf1     .............<..

08008930 <testbmk7>:
 8008930:	080083f4 080003b1 00000000 080052b1     .............R..

08008940 <testbmk8>:
 8008940:	080083c8 00000000 00000000 080051d1     .............Q..

08008950 <testbmk9>:
 8008950:	080083a4 00000000 00000000 08003c41     ............A<..

08008960 <testdyn1>:
 8008960:	08008548 08000461 00000000 08005c21     H...a.......!\..

08008970 <testdyn2>:
 8008970:	08008518 08000441 00000000 08005b21     ....A.......![..

08008980 <testdyn3>:
 8008980:	080084f0 08000491 00000000 08004cc1     .............L..

08008990 <testevt1>:
 8008990:	080085e8 08000501 00000000 08000fc1     ................

080089a0 <testevt2>:
 80089a0:	080085cc 08000521 00000000 08005d21     ....!.......!]..

080089b0 <testevt3>:
 80089b0:	080085b8 08000511 00000000 08002ee1     ................

080089c0 <testheap1>:
 80089c0:	08008590 080004d1 00000000 08004a31     ............1J..

080089d0 <testmbox1>:
 80089d0:	0800860c 08000531 00000000 08003171     ....1.......q1..

080089e0 <testmsg1>:
 80089e0:	0800862c 00000000 00000000 08004201     ,............B..

080089f0 <testmtx1>:
 80089f0:	080086ac 080005f1 00000000 080064c1     .............d..

08008a00 <testmtx4>:
 8008a00:	08008690 080005d1 00000000 08006261     ............ab..

08008a10 <testmtx5>:
 8008a10:	08008680 08000601 00000000 080045c1     .............E..

08008a20 <testmtx6>:
 8008a20:	08008668 080005a1 00000000 08006181     h............a..

08008a30 <testmtx7>:
 8008a30:	08008650 080005c1 00000000 08006091     P............`..

08008a40 <testmtx8>:
 8008a40:	0800863c 08000571 00000000 08006001     <...q........`..

08008a50 <testpools1>:
 8008a50:	08008574 080004b1 00000000 08000eb1     t...............

08008a60 <testqueues1>:
 8008a60:	080084d8 08000411 00000000 08005891     .............X..

08008a70 <testqueues2>:
 8008a70:	080084c0 080003e1 00000000 08005651     ............QV..

08008a80 <testsem1>:
 8008a80:	08008728 08000611 00000000 08006701     (............g..

08008a90 <testsem2>:
 8008a90:	08008714 08000631 00000000 080065b1     ....1........e..

08008aa0 <testsem3>:
 8008aa0:	080086f4 08000621 00000000 08002d11     ....!........-..

08008ab0 <testsem4>:
 8008ab0:	080086d0 00000000 00000000 08004ef1     .............N..

08008ac0 <testsys1>:
 8008ac0:	080087d4 00000000 00000000 08003a31     ............1:..

08008ad0 <testsys2>:
 8008ad0:	080087b8 00000000 00000000 080003c1     ................

08008ae0 <testsys3>:
 8008ae0:	080087a4 00000000 00000000 08001af1     ................

08008af0 <testthd1>:
 8008af0:	08008788 00000000 00000000 08006961     ............ai..

08008b00 <testthd2>:
 8008b00:	0800876c 00000000 00000000 08006871     l...........qh..

08008b10 <testthd3>:
 8008b10:	08008750 00000000 00000000 08002901     P............)..

08008b20 <testthd4>:
 8008b20:	08008740 00000000 00000000 08003d61     @...........a=..
 8008b30:	5f627375 5f646c6c 706d7570 00000000     usb_lld_pump....

08008b40 <usbcfg>:
 8008b40:	080026a1 08000341 08000d21 00000000     .&..A...!.......

08008b50 <vcom_configuration_descriptor>:
 8008b50:	00000043 08008b60 00000000 00000000     C...`...........

08008b60 <vcom_configuration_descriptor_data>:
 8008b60:	00430209 c0000102 00040932 02020100     ..C.....2.......
 8008b70:	24050001 05011000 01000124 02022404     ...$....$....$..
 8008b80:	00062405 82050701 ff000803 00010409     .$..............
 8008b90:	00000a02 01050700 00004002 02810507     .........@......
 8008ba0:	00000040 00000000 00000000 00000000     @...............

08008bb0 <vcom_device_descriptor>:
 8008bb0:	00000012 08008bc0 00000000 00000000     ................

08008bc0 <vcom_device_descriptor_data>:
 8008bc0:	01100112 40000002 57400483 02010200     .......@..@W....
 8008bd0:	00000103 00000000 00000000 00000000     ................

08008be0 <vcom_string0>:
 8008be0:	04090304 00000000 00000000 00000000     ................

08008bf0 <vcom_string1>:
 8008bf0:	00530326 004d0054 00630069 006f0072     &.S.T.M.i.c.r.o.
 8008c00:	006c0065 00630065 00720074 006e006f     e.l.e.c.t.r.o.n.
 8008c10:	00630069 00000073 00000000 00000000     i.c.s...........

08008c20 <vcom_string2>:
 8008c20:	00430338 00690068 00690062 0053004f     8.C.h.i.b.i.O.S.
 8008c30:	0052002f 00200054 00690056 00740072     /.R.T. .V.i.r.t.
 8008c40:	00610075 0020006c 004f0043 0020004d     u.a.l. .C.O.M. .
 8008c50:	006f0050 00740072 00000000 00000000     P.o.r.t.........

08008c60 <vcom_string3>:
 8008c60:	00330308 00310030 00000000 00000000     ..3.0.1.........

08008c70 <vcom_strings>:
 8008c70:	00000004 08008be0 00000026 08008bf0     ........&.......
 8008c80:	00000038 08008c20 00000008 08008c60     8... .......`...

08008c90 <vmt>:
 8008c90:	080037e1 08003901 08003861 08003981     .7...9..a8...9..
 8008ca0:	08003851 08003971 080037d1 080038f1     Q8..q9...7...8..

08008cb0 <wa>:
 8008cb0:	200014f0 20001638 20001780 200018c8     ... 8.. ... ... 
 8008cc0:	20001a10 00000000 00000000 00000000     ... ............

08008cd0 <zero_status>:
	...
 8008ce0:	49534f50 00000058 00000000 00000000     POSIX...........
 8008cf0:	0000002e 00000000 00000000 00000000     ................

08008d00 <_ctype_>:
 8008d00:	20202000 20202020 28282020 20282828     .         ((((( 
 8008d10:	20202020 20202020 20202020 20202020                     
 8008d20:	10108820 10101010 10101010 10101010      ...............
 8008d30:	04040410 04040404 10040404 10101010     ................
 8008d40:	41411010 41414141 01010101 01010101     ..AAAAAA........
 8008d50:	01010101 01010101 01010101 10101010     ................
 8008d60:	42421010 42424242 02020202 02020202     ..BBBBBB........
 8008d70:	02020202 02020202 02020202 10101010     ................
 8008d80:	00000020 00000000 00000000 00000000      ...............
	...
