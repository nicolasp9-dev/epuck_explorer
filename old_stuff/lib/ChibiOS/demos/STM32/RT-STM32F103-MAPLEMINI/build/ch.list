
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

08005140 <Reset_Handler>:
 8005140:	b672      	cpsid	i
 8005142:	4821      	ldr	r0, [pc, #132]	; (80051c8 <endfiniloop+0x6>)
 8005144:	f380 8809 	msr	PSP, r0
 8005148:	2002      	movs	r0, #2
 800514a:	f380 8814 	msr	CONTROL, r0
 800514e:	f3bf 8f6f 	isb	sy
 8005152:	f007 f865 	bl	800c220 <__early_init>
 8005156:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
 800515a:	491c      	ldr	r1, [pc, #112]	; (80051cc <endfiniloop+0xa>)
 800515c:	4a1c      	ldr	r2, [pc, #112]	; (80051d0 <endfiniloop+0xe>)

0800515e <msloop>:
 800515e:	4291      	cmp	r1, r2
 8005160:	bf3c      	itt	cc
 8005162:	f841 0b04 	strcc.w	r0, [r1], #4
 8005166:	e7fa      	bcc.n	800515e <msloop>
 8005168:	491a      	ldr	r1, [pc, #104]	; (80051d4 <endfiniloop+0x12>)
 800516a:	4a17      	ldr	r2, [pc, #92]	; (80051c8 <endfiniloop+0x6>)

0800516c <psloop>:
 800516c:	4291      	cmp	r1, r2
 800516e:	bf3c      	itt	cc
 8005170:	f841 0b04 	strcc.w	r0, [r1], #4
 8005174:	e7fa      	bcc.n	800516c <psloop>
 8005176:	4918      	ldr	r1, [pc, #96]	; (80051d8 <endfiniloop+0x16>)
 8005178:	4a18      	ldr	r2, [pc, #96]	; (80051dc <endfiniloop+0x1a>)
 800517a:	4b19      	ldr	r3, [pc, #100]	; (80051e0 <endfiniloop+0x1e>)

0800517c <dloop>:
 800517c:	429a      	cmp	r2, r3
 800517e:	bf3e      	ittt	cc
 8005180:	f851 0b04 	ldrcc.w	r0, [r1], #4
 8005184:	f842 0b04 	strcc.w	r0, [r2], #4
 8005188:	e7f8      	bcc.n	800517c <dloop>
 800518a:	2000      	movs	r0, #0
 800518c:	4915      	ldr	r1, [pc, #84]	; (80051e4 <endfiniloop+0x22>)
 800518e:	4a16      	ldr	r2, [pc, #88]	; (80051e8 <endfiniloop+0x26>)

08005190 <bloop>:
 8005190:	4291      	cmp	r1, r2
 8005192:	bf3c      	itt	cc
 8005194:	f841 0b04 	strcc.w	r0, [r1], #4
 8005198:	e7fa      	bcc.n	8005190 <bloop>
 800519a:	f007 f8a1 	bl	800c2e0 <__late_init>
 800519e:	4c13      	ldr	r4, [pc, #76]	; (80051ec <endfiniloop+0x2a>)
 80051a0:	4d13      	ldr	r5, [pc, #76]	; (80051f0 <endfiniloop+0x2e>)

080051a2 <initloop>:
 80051a2:	42ac      	cmp	r4, r5
 80051a4:	da03      	bge.n	80051ae <endinitloop>
 80051a6:	f854 1b04 	ldr.w	r1, [r4], #4
 80051aa:	4788      	blx	r1
 80051ac:	e7f9      	b.n	80051a2 <initloop>

080051ae <endinitloop>:
 80051ae:	f006 fe1f 	bl	800bdf0 <main>
 80051b2:	4c10      	ldr	r4, [pc, #64]	; (80051f4 <endfiniloop+0x32>)
 80051b4:	4d10      	ldr	r5, [pc, #64]	; (80051f8 <endfiniloop+0x36>)

080051b6 <finiloop>:
 80051b6:	42ac      	cmp	r4, r5
 80051b8:	da03      	bge.n	80051c2 <endfiniloop>
 80051ba:	f854 1b04 	ldr.w	r1, [r4], #4
 80051be:	4788      	blx	r1
 80051c0:	e7f9      	b.n	80051b6 <finiloop>

080051c2 <endfiniloop>:
 80051c2:	f007 b885 	b.w	800c2d0 <__default_exit>
 80051c6:	0000      	.short	0x0000
 80051c8:	20001400 	.word	0x20001400
 80051cc:	20000c00 	.word	0x20000c00
 80051d0:	20001000 	.word	0x20001000
 80051d4:	20001000 	.word	0x20001000
 80051d8:	0800d888 	.word	0x0800d888
 80051dc:	20001400 	.word	0x20001400
 80051e0:	20001e78 	.word	0x20001e78
 80051e4:	20001e78 	.word	0x20001e78
 80051e8:	20002bf0 	.word	0x20002bf0
 80051ec:	08005140 	.word	0x08005140
 80051f0:	08005140 	.word	0x08005140
 80051f4:	08005140 	.word	0x08005140
 80051f8:	08005140 	.word	0x08005140
 80051fc:	00000000 	.word	0x00000000

08005200 <_port_switch>:
 8005200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005204:	f8c1 d00c 	str.w	sp, [r1, #12]
 8005208:	f8d0 d00c 	ldr.w	sp, [r0, #12]
 800520c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005210 <_port_thread_start>:
 8005210:	2300      	movs	r3, #0
 8005212:	f383 8811 	msr	BASEPRI, r3
 8005216:	4628      	mov	r0, r5
 8005218:	47a0      	blx	r4
 800521a:	2000      	movs	r0, #0
 800521c:	f007 f840 	bl	800c2a0 <chThdExit>

08005220 <_port_switch_from_isr>:
 8005220:	f007 f84e 	bl	800c2c0 <chSchDoReschedule>

08005224 <_port_exit_from_isr>:
 8005224:	df00      	svc	0
 8005226:	e7fe      	b.n	8005226 <_port_exit_from_isr+0x2>
	...

08005230 <chTMStartMeasurementX.constprop.62>:
 8005230:	4b01      	ldr	r3, [pc, #4]	; (8005238 <chTMStartMeasurementX.constprop.62+0x8>)
 8005232:	685b      	ldr	r3, [r3, #4]
 8005234:	6083      	str	r3, [r0, #8]
 8005236:	4770      	bx	lr
 8005238:	e0001000 	.word	0xe0001000
 800523c:	00000000 	.word	0x00000000

08005240 <chEvtGetAndClearEvents.constprop.44>:
 8005240:	2320      	movs	r3, #32
 8005242:	f383 8811 	msr	BASEPRI, r3
 8005246:	2300      	movs	r3, #0
 8005248:	4a03      	ldr	r2, [pc, #12]	; (8005258 <chEvtGetAndClearEvents.constprop.44+0x18>)
 800524a:	6992      	ldr	r2, [r2, #24]
 800524c:	6b50      	ldr	r0, [r2, #52]	; 0x34
 800524e:	6353      	str	r3, [r2, #52]	; 0x34
 8005250:	f383 8811 	msr	BASEPRI, r3
 8005254:	4770      	bx	lr
 8005256:	bf00      	nop
 8005258:	20002158 	.word	0x20002158
 800525c:	00000000 	.word	0x00000000

08005260 <usb_lld_start_in.constprop.17>:
 8005260:	0080      	lsls	r0, r0, #2
 8005262:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8005266:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 800526a:	6803      	ldr	r3, [r0, #0]
 800526c:	f423 43f0 	bic.w	r3, r3, #30720	; 0x7800
 8005270:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005274:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 8005278:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800527c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005280:	6003      	str	r3, [r0, #0]
 8005282:	4770      	bx	lr
	...

08005290 <tmr>:
 8005290:	2201      	movs	r2, #1
 8005292:	4b01      	ldr	r3, [pc, #4]	; (8005298 <tmr+0x8>)
 8005294:	701a      	strb	r2, [r3, #0]
 8005296:	4770      	bx	lr
 8005298:	20002a40 	.word	0x20002a40
 800529c:	00000000 	.word	0x00000000

080052a0 <_idle_thread>:
 80052a0:	e7fe      	b.n	80052a0 <_idle_thread>
 80052a2:	bf00      	nop
	...

080052b0 <chCoreAlloc>:
 80052b0:	4603      	mov	r3, r0
 80052b2:	2220      	movs	r2, #32
 80052b4:	f382 8811 	msr	BASEPRI, r2
 80052b8:	4908      	ldr	r1, [pc, #32]	; (80052dc <chCoreAlloc+0x2c>)
 80052ba:	4a09      	ldr	r2, [pc, #36]	; (80052e0 <chCoreAlloc+0x30>)
 80052bc:	6808      	ldr	r0, [r1, #0]
 80052be:	6812      	ldr	r2, [r2, #0]
 80052c0:	3307      	adds	r3, #7
 80052c2:	f023 0307 	bic.w	r3, r3, #7
 80052c6:	1a12      	subs	r2, r2, r0
 80052c8:	4293      	cmp	r3, r2
 80052ca:	bf9a      	itte	ls
 80052cc:	181b      	addls	r3, r3, r0
 80052ce:	600b      	strls	r3, [r1, #0]
 80052d0:	2000      	movhi	r0, #0
 80052d2:	2300      	movs	r3, #0
 80052d4:	f383 8811 	msr	BASEPRI, r3
 80052d8:	4770      	bx	lr
 80052da:	bf00      	nop
 80052dc:	2000239c 	.word	0x2000239c
 80052e0:	200022d0 	.word	0x200022d0
	...

080052f0 <get_descriptor>:
 80052f0:	2902      	cmp	r1, #2
 80052f2:	d006      	beq.n	8005302 <get_descriptor+0x12>
 80052f4:	2903      	cmp	r1, #3
 80052f6:	d006      	beq.n	8005306 <get_descriptor+0x16>
 80052f8:	2901      	cmp	r1, #1
 80052fa:	4806      	ldr	r0, [pc, #24]	; (8005314 <get_descriptor+0x24>)
 80052fc:	bf18      	it	ne
 80052fe:	2000      	movne	r0, #0
 8005300:	4770      	bx	lr
 8005302:	4805      	ldr	r0, [pc, #20]	; (8005318 <get_descriptor+0x28>)
 8005304:	4770      	bx	lr
 8005306:	2a03      	cmp	r2, #3
 8005308:	bf9a      	itte	ls
 800530a:	4804      	ldrls	r0, [pc, #16]	; (800531c <get_descriptor+0x2c>)
 800530c:	eb00 00c2 	addls.w	r0, r0, r2, lsl #3
 8005310:	2000      	movhi	r0, #0
 8005312:	4770      	bx	lr
 8005314:	0800d640 	.word	0x0800d640
 8005318:	0800d5e0 	.word	0x0800d5e0
 800531c:	0800d6f0 	.word	0x0800d6f0

08005320 <bmk12_setup>:
 8005320:	2200      	movs	r2, #0
 8005322:	4b02      	ldr	r3, [pc, #8]	; (800532c <bmk12_setup+0xc>)
 8005324:	609a      	str	r2, [r3, #8]
 8005326:	e9c3 3300 	strd	r3, r3, [r3]
 800532a:	4770      	bx	lr
 800532c:	2000238c 	.word	0x2000238c

08005330 <bmk11_setup>:
 8005330:	2201      	movs	r2, #1
 8005332:	4b02      	ldr	r3, [pc, #8]	; (800533c <bmk11_setup+0xc>)
 8005334:	609a      	str	r2, [r3, #8]
 8005336:	e9c3 3300 	strd	r3, r3, [r3]
 800533a:	4770      	bx	lr
 800533c:	200023a0 	.word	0x200023a0

08005340 <notify>:
 8005340:	4770      	bx	lr
 8005342:	bf00      	nop
	...

08005350 <tmo>:
 8005350:	4770      	bx	lr
 8005352:	bf00      	nop
	...

08005360 <bmk7_setup>:
 8005360:	2200      	movs	r2, #0
 8005362:	4b02      	ldr	r3, [pc, #8]	; (800536c <bmk7_setup+0xc>)
 8005364:	609a      	str	r2, [r3, #8]
 8005366:	e9c3 3300 	strd	r3, r3, [r3]
 800536a:	4770      	bx	lr
 800536c:	200023a0 	.word	0x200023a0

08005370 <sys2_execute>:
 8005370:	2320      	movs	r3, #32
 8005372:	f383 8811 	msr	BASEPRI, r3
 8005376:	b662      	cpsie	i
 8005378:	b672      	cpsid	i
 800537a:	f383 8811 	msr	BASEPRI, r3
 800537e:	b662      	cpsie	i
 8005380:	2300      	movs	r3, #0
 8005382:	f383 8811 	msr	BASEPRI, r3
 8005386:	b662      	cpsie	i
 8005388:	4770      	bx	lr
 800538a:	bf00      	nop
 800538c:	0000      	movs	r0, r0
	...

08005390 <queues2_setup>:
 8005390:	b430      	push	{r4, r5}
 8005392:	2404      	movs	r4, #4
 8005394:	2100      	movs	r1, #0
 8005396:	4a07      	ldr	r2, [pc, #28]	; (80053b4 <queues2_setup+0x24>)
 8005398:	4b07      	ldr	r3, [pc, #28]	; (80053b8 <queues2_setup+0x28>)
 800539a:	4808      	ldr	r0, [pc, #32]	; (80053bc <queues2_setup+0x2c>)
 800539c:	1915      	adds	r5, r2, r4
 800539e:	611d      	str	r5, [r3, #16]
 80053a0:	609c      	str	r4, [r3, #8]
 80053a2:	e9c3 3300 	strd	r3, r3, [r3]
 80053a6:	bc30      	pop	{r4, r5}
 80053a8:	60da      	str	r2, [r3, #12]
 80053aa:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80053ae:	e9c3 0107 	strd	r0, r1, [r3, #28]
 80053b2:	4770      	bx	lr
 80053b4:	200023b0 	.word	0x200023b0
 80053b8:	200018ac 	.word	0x200018ac
 80053bc:	08005341 	.word	0x08005341

080053c0 <queues1_setup>:
 80053c0:	2100      	movs	r1, #0
 80053c2:	4a08      	ldr	r2, [pc, #32]	; (80053e4 <queues1_setup+0x24>)
 80053c4:	4b08      	ldr	r3, [pc, #32]	; (80053e8 <queues1_setup+0x28>)
 80053c6:	4809      	ldr	r0, [pc, #36]	; (80053ec <queues1_setup+0x2c>)
 80053c8:	b410      	push	{r4}
 80053ca:	1d14      	adds	r4, r2, #4
 80053cc:	611c      	str	r4, [r3, #16]
 80053ce:	e9c3 3300 	strd	r3, r3, [r3]
 80053d2:	60da      	str	r2, [r3, #12]
 80053d4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80053d8:	61d8      	str	r0, [r3, #28]
 80053da:	6099      	str	r1, [r3, #8]
 80053dc:	6219      	str	r1, [r3, #32]
 80053de:	bc10      	pop	{r4}
 80053e0:	4770      	bx	lr
 80053e2:	bf00      	nop
 80053e4:	200023b0 	.word	0x200023b0
 80053e8:	20001814 	.word	0x20001814
 80053ec:	08005341 	.word	0x08005341

080053f0 <dyn2_setup>:
 80053f0:	2200      	movs	r2, #0
 80053f2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80053f6:	4b02      	ldr	r3, [pc, #8]	; (8005400 <dyn2_setup+0x10>)
 80053f8:	601a      	str	r2, [r3, #0]
 80053fa:	e9c3 1201 	strd	r1, r2, [r3, #4]
 80053fe:	4770      	bx	lr
 8005400:	20002380 	.word	0x20002380
	...

08005410 <dyn1_setup>:
 8005410:	b410      	push	{r4}
 8005412:	2200      	movs	r2, #0
 8005414:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 8005418:	4b06      	ldr	r3, [pc, #24]	; (8005434 <dyn1_setup+0x24>)
 800541a:	4907      	ldr	r1, [pc, #28]	; (8005438 <dyn1_setup+0x28>)
 800541c:	f103 0010 	add.w	r0, r3, #16
 8005420:	e9c1 2400 	strd	r2, r4, [r1]
 8005424:	e9c3 0004 	strd	r0, r0, [r3, #16]
 8005428:	601a      	str	r2, [r3, #0]
 800542a:	60da      	str	r2, [r3, #12]
 800542c:	619a      	str	r2, [r3, #24]
 800542e:	6099      	str	r1, [r3, #8]
 8005430:	bc10      	pop	{r4}
 8005432:	4770      	bx	lr
 8005434:	20002328 	.word	0x20002328
 8005438:	200023b0 	.word	0x200023b0
 800543c:	00000000 	.word	0x00000000

08005440 <dyn3_setup>:
 8005440:	f7ff bfe6 	b.w	8005410 <dyn1_setup>
	...

08005450 <null_provider>:
 8005450:	2000      	movs	r0, #0
 8005452:	4770      	bx	lr
	...

08005460 <pools1_setup>:
 8005460:	2200      	movs	r2, #0
 8005462:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005466:	4b02      	ldr	r3, [pc, #8]	; (8005470 <pools1_setup+0x10>)
 8005468:	601a      	str	r2, [r3, #0]
 800546a:	e9c3 1201 	strd	r1, r2, [r3, #4]
 800546e:	4770      	bx	lr
 8005470:	200018a0 	.word	0x200018a0
	...

08005480 <heap1_setup>:
 8005480:	b410      	push	{r4}
 8005482:	2200      	movs	r2, #0
 8005484:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 8005488:	4b06      	ldr	r3, [pc, #24]	; (80054a4 <heap1_setup+0x24>)
 800548a:	4907      	ldr	r1, [pc, #28]	; (80054a8 <heap1_setup+0x28>)
 800548c:	f103 0010 	add.w	r0, r3, #16
 8005490:	e9c1 2400 	strd	r2, r4, [r1]
 8005494:	e9c3 0004 	strd	r0, r0, [r3, #16]
 8005498:	601a      	str	r2, [r3, #0]
 800549a:	60da      	str	r2, [r3, #12]
 800549c:	619a      	str	r2, [r3, #24]
 800549e:	6099      	str	r1, [r3, #8]
 80054a0:	bc10      	pop	{r4}
 80054a2:	4770      	bx	lr
 80054a4:	20002a20 	.word	0x20002a20
 80054a8:	200023b0 	.word	0x200023b0
 80054ac:	00000000 	.word	0x00000000

080054b0 <evt1_setup>:
 80054b0:	f7ff bec6 	b.w	8005240 <chEvtGetAndClearEvents.constprop.44>
	...

080054c0 <evt3_setup>:
 80054c0:	f7ff bff6 	b.w	80054b0 <evt1_setup>
	...

080054d0 <evt2_setup>:
 80054d0:	f7ff bfee 	b.w	80054b0 <evt1_setup>
	...

080054e0 <mbox1_setup>:
 80054e0:	b430      	push	{r4, r5}
 80054e2:	2000      	movs	r0, #0
 80054e4:	2405      	movs	r4, #5
 80054e6:	4b0a      	ldr	r3, [pc, #40]	; (8005510 <mbox1_setup+0x30>)
 80054e8:	4a0a      	ldr	r2, [pc, #40]	; (8005514 <mbox1_setup+0x34>)
 80054ea:	f103 011c 	add.w	r1, r3, #28
 80054ee:	f102 0514 	add.w	r5, r2, #20
 80054f2:	601a      	str	r2, [r3, #0]
 80054f4:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80054f8:	f103 0210 	add.w	r2, r3, #16
 80054fc:	605d      	str	r5, [r3, #4]
 80054fe:	625c      	str	r4, [r3, #36]	; 0x24
 8005500:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8005504:	bc30      	pop	{r4, r5}
 8005506:	6219      	str	r1, [r3, #32]
 8005508:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800550c:	4770      	bx	lr
 800550e:	bf00      	nop
 8005510:	20001878 	.word	0x20001878
 8005514:	200023b0 	.word	0x200023b0
	...

08005520 <mtx8_setup>:
 8005520:	2000      	movs	r0, #0
 8005522:	4a06      	ldr	r2, [pc, #24]	; (800553c <mtx8_setup+0x1c>)
 8005524:	4b06      	ldr	r3, [pc, #24]	; (8005540 <mtx8_setup+0x20>)
 8005526:	4907      	ldr	r1, [pc, #28]	; (8005544 <mtx8_setup+0x24>)
 8005528:	6090      	str	r0, [r2, #8]
 800552a:	e9c2 2200 	strd	r2, r2, [r2]
 800552e:	6098      	str	r0, [r3, #8]
 8005530:	e9c3 3300 	strd	r3, r3, [r3]
 8005534:	e9c1 1100 	strd	r1, r1, [r1]
 8005538:	4770      	bx	lr
 800553a:	bf00      	nop
 800553c:	20001858 	.word	0x20001858
 8005540:	20001868 	.word	0x20001868
 8005544:	20001804 	.word	0x20001804
	...

08005550 <mtx6_setup>:
 8005550:	2100      	movs	r1, #0
 8005552:	4b04      	ldr	r3, [pc, #16]	; (8005564 <mtx6_setup+0x14>)
 8005554:	4a04      	ldr	r2, [pc, #16]	; (8005568 <mtx6_setup+0x18>)
 8005556:	6099      	str	r1, [r3, #8]
 8005558:	e9c3 3300 	strd	r3, r3, [r3]
 800555c:	e9c2 2200 	strd	r2, r2, [r2]
 8005560:	4770      	bx	lr
 8005562:	bf00      	nop
 8005564:	20001858 	.word	0x20001858
 8005568:	20001804 	.word	0x20001804
 800556c:	00000000 	.word	0x00000000

08005570 <mtx7_setup>:
 8005570:	f7ff bfee 	b.w	8005550 <mtx6_setup>
	...

08005580 <mtx4_setup>:
 8005580:	2100      	movs	r1, #0
 8005582:	4a04      	ldr	r2, [pc, #16]	; (8005594 <mtx4_setup+0x14>)
 8005584:	4b04      	ldr	r3, [pc, #16]	; (8005598 <mtx4_setup+0x18>)
 8005586:	6091      	str	r1, [r2, #8]
 8005588:	e9c2 2200 	strd	r2, r2, [r2]
 800558c:	6099      	str	r1, [r3, #8]
 800558e:	e9c3 3300 	strd	r3, r3, [r3]
 8005592:	4770      	bx	lr
 8005594:	20001858 	.word	0x20001858
 8005598:	20001868 	.word	0x20001868
 800559c:	00000000 	.word	0x00000000

080055a0 <mtx1_setup>:
 80055a0:	2200      	movs	r2, #0
 80055a2:	4b02      	ldr	r3, [pc, #8]	; (80055ac <mtx1_setup+0xc>)
 80055a4:	609a      	str	r2, [r3, #8]
 80055a6:	e9c3 3300 	strd	r3, r3, [r3]
 80055aa:	4770      	bx	lr
 80055ac:	20001858 	.word	0x20001858

080055b0 <mtx5_setup>:
 80055b0:	f7ff bff6 	b.w	80055a0 <mtx1_setup>
	...

080055c0 <sem1_setup>:
 80055c0:	2200      	movs	r2, #0
 80055c2:	4b02      	ldr	r3, [pc, #8]	; (80055cc <sem1_setup+0xc>)
 80055c4:	609a      	str	r2, [r3, #8]
 80055c6:	e9c3 3300 	strd	r3, r3, [r3]
 80055ca:	4770      	bx	lr
 80055cc:	200018d0 	.word	0x200018d0

080055d0 <sem3_setup>:
 80055d0:	f7ff bff6 	b.w	80055c0 <sem1_setup>
	...

080055e0 <sem2_setup>:
 80055e0:	f7ff bfee 	b.w	80055c0 <sem1_setup>
	...

080055f0 <test_printn.part.1>:
 80055f0:	b320      	cbz	r0, 800563c <test_printn.part.1+0x4c>
 80055f2:	b570      	push	{r4, r5, r6, lr}
 80055f4:	b084      	sub	sp, #16
 80055f6:	466d      	mov	r5, sp
 80055f8:	4e11      	ldr	r6, [pc, #68]	; (8005640 <test_printn.part.1+0x50>)
 80055fa:	462c      	mov	r4, r5
 80055fc:	e000      	b.n	8005600 <test_printn.part.1+0x10>
 80055fe:	4614      	mov	r4, r2
 8005600:	4622      	mov	r2, r4
 8005602:	fba6 1300 	umull	r1, r3, r6, r0
 8005606:	08db      	lsrs	r3, r3, #3
 8005608:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 800560c:	eba0 0041 	sub.w	r0, r0, r1, lsl #1
 8005610:	f100 0130 	add.w	r1, r0, #48	; 0x30
 8005614:	b2c9      	uxtb	r1, r1
 8005616:	f802 1b01 	strb.w	r1, [r2], #1
 800561a:	4618      	mov	r0, r3
 800561c:	2b00      	cmp	r3, #0
 800561e:	d1ee      	bne.n	80055fe <test_printn.part.1+0xe>
 8005620:	42aa      	cmp	r2, r5
 8005622:	d909      	bls.n	8005638 <test_printn.part.1+0x48>
 8005624:	4e07      	ldr	r6, [pc, #28]	; (8005644 <test_printn.part.1+0x54>)
 8005626:	e001      	b.n	800562c <test_printn.part.1+0x3c>
 8005628:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
 800562c:	6830      	ldr	r0, [r6, #0]
 800562e:	6803      	ldr	r3, [r0, #0]
 8005630:	689b      	ldr	r3, [r3, #8]
 8005632:	4798      	blx	r3
 8005634:	42a5      	cmp	r5, r4
 8005636:	d1f7      	bne.n	8005628 <test_printn.part.1+0x38>
 8005638:	b004      	add	sp, #16
 800563a:	bd70      	pop	{r4, r5, r6, pc}
 800563c:	4770      	bx	lr
 800563e:	bf00      	nop
 8005640:	cccccccd 	.word	0xcccccccd
 8005644:	200022a8 	.word	0x200022a8
	...

08005650 <test_printn>:
 8005650:	b928      	cbnz	r0, 800565e <test_printn+0xe>
 8005652:	4b04      	ldr	r3, [pc, #16]	; (8005664 <test_printn+0x14>)
 8005654:	2130      	movs	r1, #48	; 0x30
 8005656:	6818      	ldr	r0, [r3, #0]
 8005658:	6803      	ldr	r3, [r0, #0]
 800565a:	689b      	ldr	r3, [r3, #8]
 800565c:	4718      	bx	r3
 800565e:	f7ff bfc7 	b.w	80055f0 <test_printn.part.1>
 8005662:	bf00      	nop
 8005664:	200022a8 	.word	0x200022a8
	...

08005670 <print_line>:
 8005670:	b570      	push	{r4, r5, r6, lr}
 8005672:	244c      	movs	r4, #76	; 0x4c
 8005674:	4d07      	ldr	r5, [pc, #28]	; (8005694 <print_line+0x24>)
 8005676:	6828      	ldr	r0, [r5, #0]
 8005678:	212d      	movs	r1, #45	; 0x2d
 800567a:	6803      	ldr	r3, [r0, #0]
 800567c:	689b      	ldr	r3, [r3, #8]
 800567e:	4798      	blx	r3
 8005680:	3c01      	subs	r4, #1
 8005682:	d1f8      	bne.n	8005676 <print_line+0x6>
 8005684:	6828      	ldr	r0, [r5, #0]
 8005686:	2202      	movs	r2, #2
 8005688:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800568c:	6803      	ldr	r3, [r0, #0]
 800568e:	4902      	ldr	r1, [pc, #8]	; (8005698 <print_line+0x28>)
 8005690:	681b      	ldr	r3, [r3, #0]
 8005692:	4718      	bx	r3
 8005694:	200022a8 	.word	0x200022a8
 8005698:	0800ca1c 	.word	0x0800ca1c
 800569c:	00000000 	.word	0x00000000

080056a0 <test_terminate_threads>:
 80056a0:	b430      	push	{r4, r5}
 80056a2:	2520      	movs	r5, #32
 80056a4:	2400      	movs	r4, #0
 80056a6:	4b09      	ldr	r3, [pc, #36]	; (80056cc <test_terminate_threads+0x2c>)
 80056a8:	f103 0014 	add.w	r0, r3, #20
 80056ac:	f853 2b04 	ldr.w	r2, [r3], #4
 80056b0:	b13a      	cbz	r2, 80056c2 <test_terminate_threads+0x22>
 80056b2:	f385 8811 	msr	BASEPRI, r5
 80056b6:	7f51      	ldrb	r1, [r2, #29]
 80056b8:	f041 0104 	orr.w	r1, r1, #4
 80056bc:	7751      	strb	r1, [r2, #29]
 80056be:	f384 8811 	msr	BASEPRI, r4
 80056c2:	4283      	cmp	r3, r0
 80056c4:	d1f2      	bne.n	80056ac <test_terminate_threads+0xc>
 80056c6:	bc30      	pop	{r4, r5}
 80056c8:	4770      	bx	lr
 80056ca:	bf00      	nop
 80056cc:	20002a44 	.word	0x20002a44

080056d0 <_test_assert_time_window>:
 80056d0:	b410      	push	{r4}
 80056d2:	2320      	movs	r3, #32
 80056d4:	f383 8811 	msr	BASEPRI, r3
 80056d8:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 80056dc:	2300      	movs	r3, #0
 80056de:	6a64      	ldr	r4, [r4, #36]	; 0x24
 80056e0:	f383 8811 	msr	BASEPRI, r3
 80056e4:	b2a4      	uxth	r4, r4
 80056e6:	1a64      	subs	r4, r4, r1
 80056e8:	1a52      	subs	r2, r2, r1
 80056ea:	4294      	cmp	r4, r2
 80056ec:	db06      	blt.n	80056fc <_test_assert_time_window+0x2c>
 80056ee:	2301      	movs	r3, #1
 80056f0:	4c04      	ldr	r4, [pc, #16]	; (8005704 <_test_assert_time_window+0x34>)
 80056f2:	4905      	ldr	r1, [pc, #20]	; (8005708 <_test_assert_time_window+0x38>)
 80056f4:	4a05      	ldr	r2, [pc, #20]	; (800570c <_test_assert_time_window+0x3c>)
 80056f6:	7023      	strb	r3, [r4, #0]
 80056f8:	700b      	strb	r3, [r1, #0]
 80056fa:	6010      	str	r0, [r2, #0]
 80056fc:	4618      	mov	r0, r3
 80056fe:	bc10      	pop	{r4}
 8005700:	4770      	bx	lr
 8005702:	bf00      	nop
 8005704:	20002a18 	.word	0x20002a18
 8005708:	2000237c 	.word	0x2000237c
 800570c:	20002324 	.word	0x20002324

08005710 <_test_assert_sequence>:
 8005710:	b4f0      	push	{r4, r5, r6, r7}
 8005712:	4e0e      	ldr	r6, [pc, #56]	; (800574c <_test_assert_sequence+0x3c>)
 8005714:	4f0e      	ldr	r7, [pc, #56]	; (8005750 <_test_assert_sequence+0x40>)
 8005716:	3901      	subs	r1, #1
 8005718:	6835      	ldr	r5, [r6, #0]
 800571a:	463b      	mov	r3, r7
 800571c:	e003      	b.n	8005726 <_test_assert_sequence+0x16>
 800571e:	f813 4b01 	ldrb.w	r4, [r3], #1
 8005722:	4294      	cmp	r4, r2
 8005724:	d108      	bne.n	8005738 <_test_assert_sequence+0x28>
 8005726:	429d      	cmp	r5, r3
 8005728:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800572c:	d8f7      	bhi.n	800571e <_test_assert_sequence+0xe>
 800572e:	b91a      	cbnz	r2, 8005738 <_test_assert_sequence+0x28>
 8005730:	6037      	str	r7, [r6, #0]
 8005732:	4610      	mov	r0, r2
 8005734:	bcf0      	pop	{r4, r5, r6, r7}
 8005736:	4770      	bx	lr
 8005738:	2201      	movs	r2, #1
 800573a:	4c06      	ldr	r4, [pc, #24]	; (8005754 <_test_assert_sequence+0x44>)
 800573c:	4906      	ldr	r1, [pc, #24]	; (8005758 <_test_assert_sequence+0x48>)
 800573e:	4b07      	ldr	r3, [pc, #28]	; (800575c <_test_assert_sequence+0x4c>)
 8005740:	7022      	strb	r2, [r4, #0]
 8005742:	6018      	str	r0, [r3, #0]
 8005744:	700a      	strb	r2, [r1, #0]
 8005746:	4610      	mov	r0, r2
 8005748:	bcf0      	pop	{r4, r5, r6, r7}
 800574a:	4770      	bx	lr
 800574c:	20002a68 	.word	0x20002a68
 8005750:	20002a58 	.word	0x20002a58
 8005754:	20002a18 	.word	0x20002a18
 8005758:	2000237c 	.word	0x2000237c
 800575c:	20002324 	.word	0x20002324

08005760 <_test_assert>:
 8005760:	b951      	cbnz	r1, 8005778 <_test_assert+0x18>
 8005762:	2301      	movs	r3, #1
 8005764:	b410      	push	{r4}
 8005766:	4906      	ldr	r1, [pc, #24]	; (8005780 <_test_assert+0x20>)
 8005768:	4c06      	ldr	r4, [pc, #24]	; (8005784 <_test_assert+0x24>)
 800576a:	4a07      	ldr	r2, [pc, #28]	; (8005788 <_test_assert+0x28>)
 800576c:	7023      	strb	r3, [r4, #0]
 800576e:	6010      	str	r0, [r2, #0]
 8005770:	700b      	strb	r3, [r1, #0]
 8005772:	4618      	mov	r0, r3
 8005774:	bc10      	pop	{r4}
 8005776:	4770      	bx	lr
 8005778:	2300      	movs	r3, #0
 800577a:	4618      	mov	r0, r3
 800577c:	4770      	bx	lr
 800577e:	bf00      	nop
 8005780:	2000237c 	.word	0x2000237c
 8005784:	20002a18 	.word	0x20002a18
 8005788:	20002324 	.word	0x20002324
 800578c:	00000000 	.word	0x00000000

08005790 <test_emit_token>:
 8005790:	b410      	push	{r4}
 8005792:	2320      	movs	r3, #32
 8005794:	f383 8811 	msr	BASEPRI, r3
 8005798:	4b04      	ldr	r3, [pc, #16]	; (80057ac <test_emit_token+0x1c>)
 800579a:	2100      	movs	r1, #0
 800579c:	681a      	ldr	r2, [r3, #0]
 800579e:	1c54      	adds	r4, r2, #1
 80057a0:	7010      	strb	r0, [r2, #0]
 80057a2:	601c      	str	r4, [r3, #0]
 80057a4:	f381 8811 	msr	BASEPRI, r1
 80057a8:	bc10      	pop	{r4}
 80057aa:	4770      	bx	lr
 80057ac:	20002a68 	.word	0x20002a68

080057b0 <h3>:
 80057b0:	2043      	movs	r0, #67	; 0x43
 80057b2:	f7ff bfed 	b.w	8005790 <test_emit_token>
 80057b6:	bf00      	nop
	...

080057c0 <h2>:
 80057c0:	2042      	movs	r0, #66	; 0x42
 80057c2:	f7ff bfe5 	b.w	8005790 <test_emit_token>
 80057c6:	bf00      	nop
	...

080057d0 <h1>:
 80057d0:	2041      	movs	r0, #65	; 0x41
 80057d2:	f7ff bfdd 	b.w	8005790 <test_emit_token>
 80057d6:	bf00      	nop
	...

080057e0 <thread.lto_priv.67>:
 80057e0:	7800      	ldrb	r0, [r0, #0]
 80057e2:	f7ff bfd5 	b.w	8005790 <test_emit_token>
 80057e6:	bf00      	nop
	...

080057f0 <thread.lto_priv.69>:
 80057f0:	f7ff bff6 	b.w	80057e0 <thread.lto_priv.67>
	...

08005800 <test_println>:
 8005800:	b570      	push	{r4, r5, r6, lr}
 8005802:	7801      	ldrb	r1, [r0, #0]
 8005804:	b189      	cbz	r1, 800582a <test_println+0x2a>
 8005806:	4604      	mov	r4, r0
 8005808:	4d09      	ldr	r5, [pc, #36]	; (8005830 <test_println+0x30>)
 800580a:	6828      	ldr	r0, [r5, #0]
 800580c:	6803      	ldr	r3, [r0, #0]
 800580e:	689b      	ldr	r3, [r3, #8]
 8005810:	4798      	blx	r3
 8005812:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005816:	2900      	cmp	r1, #0
 8005818:	d1f7      	bne.n	800580a <test_println+0xa>
 800581a:	6828      	ldr	r0, [r5, #0]
 800581c:	2202      	movs	r2, #2
 800581e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005822:	6803      	ldr	r3, [r0, #0]
 8005824:	4903      	ldr	r1, [pc, #12]	; (8005834 <test_println+0x34>)
 8005826:	681b      	ldr	r3, [r3, #0]
 8005828:	4718      	bx	r3
 800582a:	4d01      	ldr	r5, [pc, #4]	; (8005830 <test_println+0x30>)
 800582c:	e7f5      	b.n	800581a <test_println+0x1a>
 800582e:	bf00      	nop
 8005830:	200022a8 	.word	0x200022a8
 8005834:	0800ca1c 	.word	0x0800ca1c
	...

08005840 <test_print>:
 8005840:	7801      	ldrb	r1, [r0, #0]
 8005842:	b159      	cbz	r1, 800585c <test_print+0x1c>
 8005844:	b538      	push	{r3, r4, r5, lr}
 8005846:	4604      	mov	r4, r0
 8005848:	4d05      	ldr	r5, [pc, #20]	; (8005860 <test_print+0x20>)
 800584a:	6828      	ldr	r0, [r5, #0]
 800584c:	6803      	ldr	r3, [r0, #0]
 800584e:	689b      	ldr	r3, [r3, #8]
 8005850:	4798      	blx	r3
 8005852:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005856:	2900      	cmp	r1, #0
 8005858:	d1f7      	bne.n	800584a <test_print+0xa>
 800585a:	bd38      	pop	{r3, r4, r5, pc}
 800585c:	4770      	bx	lr
 800585e:	bf00      	nop
 8005860:	200022a8 	.word	0x200022a8
	...

08005870 <usb_lld_prepare_receive>:
 8005870:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8005874:	68c9      	ldr	r1, [r1, #12]
 8005876:	698a      	ldr	r2, [r1, #24]
 8005878:	6853      	ldr	r3, [r2, #4]
 800587a:	b133      	cbz	r3, 800588a <usb_lld_prepare_receive+0x1a>
 800587c:	8a49      	ldrh	r1, [r1, #18]
 800587e:	440b      	add	r3, r1
 8005880:	3b01      	subs	r3, #1
 8005882:	fbb3 f3f1 	udiv	r3, r3, r1
 8005886:	8213      	strh	r3, [r2, #16]
 8005888:	4770      	bx	lr
 800588a:	2301      	movs	r3, #1
 800588c:	8213      	strh	r3, [r2, #16]
 800588e:	4770      	bx	lr

08005890 <usb_lld_init_endpoint>:
 8005890:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8005894:	68db      	ldr	r3, [r3, #12]
 8005896:	b4f0      	push	{r4, r5, r6, r7}
 8005898:	681a      	ldr	r2, [r3, #0]
 800589a:	f002 0203 	and.w	r2, r2, #3
 800589e:	3a01      	subs	r2, #1
 80058a0:	2a02      	cmp	r2, #2
 80058a2:	bf96      	itet	ls
 80058a4:	4c29      	ldrls	r4, [pc, #164]	; (800594c <usb_lld_init_endpoint+0xbc>)
 80058a6:	f44f 7200 	movhi.w	r2, #512	; 0x200
 80058aa:	f834 2012 	ldrhls.w	r2, [r4, r2, lsl #1]
 80058ae:	689c      	ldr	r4, [r3, #8]
 80058b0:	b10c      	cbz	r4, 80058b6 <usb_lld_init_endpoint+0x26>
 80058b2:	f042 0220 	orr.w	r2, r2, #32
 80058b6:	68dc      	ldr	r4, [r3, #12]
 80058b8:	b10c      	cbz	r4, 80058be <usb_lld_init_endpoint+0x2e>
 80058ba:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80058be:	f248 0680 	movw	r6, #32896	; 0x8080
 80058c2:	f647 0770 	movw	r7, #30832	; 0x7870
 80058c6:	ea42 0401 	orr.w	r4, r2, r1
 80058ca:	f424 4478 	bic.w	r4, r4, #63488	; 0xf800
 80058ce:	008d      	lsls	r5, r1, #2
 80058d0:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 80058d4:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80058d8:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 80058dc:	4334      	orrs	r4, r6
 80058de:	602c      	str	r4, [r5, #0]
 80058e0:	682c      	ldr	r4, [r5, #0]
 80058e2:	403a      	ands	r2, r7
 80058e4:	4062      	eors	r2, r4
 80058e6:	8a5c      	ldrh	r4, [r3, #18]
 80058e8:	4332      	orrs	r2, r6
 80058ea:	2c3e      	cmp	r4, #62	; 0x3e
 80058ec:	602a      	str	r2, [r5, #0]
 80058ee:	f104 32ff 	add.w	r2, r4, #4294967295	; 0xffffffff
 80058f2:	d822      	bhi.n	800593a <usb_lld_init_endpoint+0xaa>
 80058f4:	f042 0201 	orr.w	r2, r2, #1
 80058f8:	3201      	adds	r2, #1
 80058fa:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80058fe:	0252      	lsls	r2, r2, #9
 8005900:	f402 427c 	and.w	r2, r2, #64512	; 0xfc00
 8005904:	2600      	movs	r6, #0
 8005906:	4f12      	ldr	r7, [pc, #72]	; (8005950 <usb_lld_init_endpoint+0xc0>)
 8005908:	8a1d      	ldrh	r5, [r3, #16]
 800590a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800590c:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 8005910:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8005914:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 8005918:	0049      	lsls	r1, r1, #1
 800591a:	604e      	str	r6, [r1, #4]
 800591c:	60ca      	str	r2, [r1, #12]
 800591e:	f8d0 2080 	ldr.w	r2, [r0, #128]	; 0x80
 8005922:	4415      	add	r5, r2
 8005924:	f8c0 5080 	str.w	r5, [r0, #128]	; 0x80
 8005928:	600a      	str	r2, [r1, #0]
 800592a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
 800592e:	441c      	add	r4, r3
 8005930:	f8c0 4080 	str.w	r4, [r0, #128]	; 0x80
 8005934:	608b      	str	r3, [r1, #8]
 8005936:	bcf0      	pop	{r4, r5, r6, r7}
 8005938:	4770      	bx	lr
 800593a:	f042 021f 	orr.w	r2, r2, #31
 800593e:	3201      	adds	r2, #1
 8005940:	4d04      	ldr	r5, [pc, #16]	; (8005954 <usb_lld_init_endpoint+0xc4>)
 8005942:	1152      	asrs	r2, r2, #5
 8005944:	ea45 2282 	orr.w	r2, r5, r2, lsl #10
 8005948:	b292      	uxth	r2, r2
 800594a:	e7db      	b.n	8005904 <usb_lld_init_endpoint+0x74>
 800594c:	0800c440 	.word	0x0800c440
 8005950:	40005c00 	.word	0x40005c00
 8005954:	ffff8000 	.word	0xffff8000
	...

08005960 <usb_lld_reset>:
 8005960:	2100      	movs	r1, #0
 8005962:	6843      	ldr	r3, [r0, #4]
 8005964:	b4f0      	push	{r4, r5, r6, r7}
 8005966:	68db      	ldr	r3, [r3, #12]
 8005968:	2780      	movs	r7, #128	; 0x80
 800596a:	428b      	cmp	r3, r1
 800596c:	bf0c      	ite	eq
 800596e:	f44f 461c 	moveq.w	r6, #39936	; 0x9c00
 8005972:	f44f 461e 	movne.w	r6, #40448	; 0x9e00
 8005976:	2540      	movs	r5, #64	; 0x40
 8005978:	4b05      	ldr	r3, [pc, #20]	; (8005990 <usb_lld_reset+0x30>)
 800597a:	4c06      	ldr	r4, [pc, #24]	; (8005994 <usb_lld_reset+0x34>)
 800597c:	6519      	str	r1, [r3, #80]	; 0x50
 800597e:	6459      	str	r1, [r3, #68]	; 0x44
 8005980:	64df      	str	r7, [r3, #76]	; 0x4c
 8005982:	641e      	str	r6, [r3, #64]	; 0x40
 8005984:	f8c0 5080 	str.w	r5, [r0, #128]	; 0x80
 8005988:	60c4      	str	r4, [r0, #12]
 800598a:	bcf0      	pop	{r4, r5, r6, r7}
 800598c:	f7ff bf80 	b.w	8005890 <usb_lld_init_endpoint>
 8005990:	40005c00 	.word	0x40005c00
 8005994:	0800ca80 	.word	0x0800ca80
	...

080059a0 <usbStartTransmitI>:
 80059a0:	2201      	movs	r2, #1
 80059a2:	b570      	push	{r4, r5, r6, lr}
 80059a4:	fa02 f301 	lsl.w	r3, r2, r1
 80059a8:	8904      	ldrh	r4, [r0, #8]
 80059aa:	b29b      	uxth	r3, r3
 80059ac:	ea14 0603 	ands.w	r6, r4, r3
 80059b0:	d001      	beq.n	80059b6 <usbStartTransmitI+0x16>
 80059b2:	4610      	mov	r0, r2
 80059b4:	bd70      	pop	{r4, r5, r6, pc}
 80059b6:	4605      	mov	r5, r0
 80059b8:	4323      	orrs	r3, r4
 80059ba:	4608      	mov	r0, r1
 80059bc:	812b      	strh	r3, [r5, #8]
 80059be:	f7ff fc4f 	bl	8005260 <usb_lld_start_in.constprop.17>
 80059c2:	4630      	mov	r0, r6
 80059c4:	bd70      	pop	{r4, r5, r6, pc}
 80059c6:	bf00      	nop
	...

080059d0 <usbStartReceiveI>:
 80059d0:	2201      	movs	r2, #1
 80059d2:	b470      	push	{r4, r5, r6}
 80059d4:	fa02 f301 	lsl.w	r3, r2, r1
 80059d8:	8945      	ldrh	r5, [r0, #10]
 80059da:	b29b      	uxth	r3, r3
 80059dc:	ea15 0603 	ands.w	r6, r5, r3
 80059e0:	d002      	beq.n	80059e8 <usbStartReceiveI+0x18>
 80059e2:	bc70      	pop	{r4, r5, r6}
 80059e4:	4610      	mov	r0, r2
 80059e6:	4770      	bx	lr
 80059e8:	0089      	lsls	r1, r1, #2
 80059ea:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80059ee:	f501 41b8 	add.w	r1, r1, #23552	; 0x5c00
 80059f2:	680c      	ldr	r4, [r1, #0]
 80059f4:	432b      	orrs	r3, r5
 80059f6:	f424 4490 	bic.w	r4, r4, #18432	; 0x4800
 80059fa:	f024 0470 	bic.w	r4, r4, #112	; 0x70
 80059fe:	f484 5440 	eor.w	r4, r4, #12288	; 0x3000
 8005a02:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 8005a06:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8005a0a:	8143      	strh	r3, [r0, #10]
 8005a0c:	4630      	mov	r0, r6
 8005a0e:	600c      	str	r4, [r1, #0]
 8005a10:	bc70      	pop	{r4, r5, r6}
 8005a12:	4770      	bx	lr
	...

08005a20 <inotify>:
 8005a20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005a22:	6a04      	ldr	r4, [r0, #32]
 8005a24:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 8005a28:	6813      	ldr	r3, [r2, #0]
 8005a2a:	7819      	ldrb	r1, [r3, #0]
 8005a2c:	2904      	cmp	r1, #4
 8005a2e:	d000      	beq.n	8005a32 <inotify+0x12>
 8005a30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005a32:	7a21      	ldrb	r1, [r4, #8]
 8005a34:	2902      	cmp	r1, #2
 8005a36:	d1fb      	bne.n	8005a30 <inotify+0x10>
 8005a38:	2601      	movs	r6, #1
 8005a3a:	7950      	ldrb	r0, [r2, #5]
 8005a3c:	895a      	ldrh	r2, [r3, #10]
 8005a3e:	fa06 f100 	lsl.w	r1, r6, r0
 8005a42:	ea11 0502 	ands.w	r5, r1, r2
 8005a46:	d1f3      	bne.n	8005a30 <inotify+0x10>
 8005a48:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8005a4c:	68d9      	ldr	r1, [r3, #12]
 8005a4e:	6960      	ldr	r0, [r4, #20]
 8005a50:	e9d4 3206 	ldrd	r3, r2, [r4, #24]
 8005a54:	8a49      	ldrh	r1, [r1, #18]
 8005a56:	1ad3      	subs	r3, r2, r3
 8005a58:	1a1b      	subs	r3, r3, r0
 8005a5a:	4299      	cmp	r1, r3
 8005a5c:	d8e8      	bhi.n	8005a30 <inotify+0x10>
 8005a5e:	f385 8811 	msr	BASEPRI, r5
 8005a62:	fbb3 f3f1 	udiv	r3, r3, r1
 8005a66:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 8005a6a:	fb01 f303 	mul.w	r3, r1, r3
 8005a6e:	6810      	ldr	r0, [r2, #0]
 8005a70:	7951      	ldrb	r1, [r2, #5]
 8005a72:	f104 070c 	add.w	r7, r4, #12
 8005a76:	eb00 0281 	add.w	r2, r0, r1, lsl #2
 8005a7a:	68d2      	ldr	r2, [r2, #12]
 8005a7c:	6992      	ldr	r2, [r2, #24]
 8005a7e:	6053      	str	r3, [r2, #4]
 8005a80:	7016      	strb	r6, [r2, #0]
 8005a82:	e9c2 5702 	strd	r5, r7, [r2, #8]
 8005a86:	f7ff fef3 	bl	8005870 <usb_lld_prepare_receive>
 8005a8a:	2320      	movs	r3, #32
 8005a8c:	f383 8811 	msr	BASEPRI, r3
 8005a90:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8005a94:	7959      	ldrb	r1, [r3, #5]
 8005a96:	6818      	ldr	r0, [r3, #0]
 8005a98:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005a9c:	f7ff bf98 	b.w	80059d0 <usbStartReceiveI>

08005aa0 <set_address>:
 8005aa0:	f890 3076 	ldrb.w	r3, [r0, #118]	; 0x76
 8005aa4:	6842      	ldr	r2, [r0, #4]
 8005aa6:	f880 307e 	strb.w	r3, [r0, #126]	; 0x7e
 8005aaa:	4906      	ldr	r1, [pc, #24]	; (8005ac4 <set_address+0x24>)
 8005aac:	6812      	ldr	r2, [r2, #0]
 8005aae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005ab2:	b510      	push	{r4, lr}
 8005ab4:	4604      	mov	r4, r0
 8005ab6:	64cb      	str	r3, [r1, #76]	; 0x4c
 8005ab8:	b10a      	cbz	r2, 8005abe <set_address+0x1e>
 8005aba:	2101      	movs	r1, #1
 8005abc:	4790      	blx	r2
 8005abe:	2303      	movs	r3, #3
 8005ac0:	7023      	strb	r3, [r4, #0]
 8005ac2:	bd10      	pop	{r4, pc}
 8005ac4:	40005c00 	.word	0x40005c00
	...

08005ad0 <sduInterruptTransmitted>:
 8005ad0:	4770      	bx	lr
 8005ad2:	bf00      	nop
	...

08005ae0 <sduRequestsHook>:
 8005ae0:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 8005ae4:	4602      	mov	r2, r0
 8005ae6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8005aea:	2b20      	cmp	r3, #32
 8005aec:	d001      	beq.n	8005af2 <sduRequestsHook+0x12>
 8005aee:	2000      	movs	r0, #0
 8005af0:	4770      	bx	lr
 8005af2:	f890 3075 	ldrb.w	r3, [r0, #117]	; 0x75
 8005af6:	2b20      	cmp	r3, #32
 8005af8:	d3f9      	bcc.n	8005aee <sduRequestsHook+0xe>
 8005afa:	2b21      	cmp	r3, #33	; 0x21
 8005afc:	d807      	bhi.n	8005b0e <sduRequestsHook+0x2e>
 8005afe:	2007      	movs	r0, #7
 8005b00:	2100      	movs	r1, #0
 8005b02:	4b07      	ldr	r3, [pc, #28]	; (8005b20 <sduRequestsHook+0x40>)
 8005b04:	e9c2 011b 	strd	r0, r1, [r2, #108]	; 0x6c
 8005b08:	6693      	str	r3, [r2, #104]	; 0x68
 8005b0a:	2001      	movs	r0, #1
 8005b0c:	4770      	bx	lr
 8005b0e:	2b22      	cmp	r3, #34	; 0x22
 8005b10:	d1ed      	bne.n	8005aee <sduRequestsHook+0xe>
 8005b12:	2300      	movs	r3, #0
 8005b14:	2001      	movs	r0, #1
 8005b16:	e9c2 331a 	strd	r3, r3, [r2, #104]	; 0x68
 8005b1a:	6713      	str	r3, [r2, #112]	; 0x70
 8005b1c:	4770      	bx	lr
 8005b1e:	bf00      	nop
 8005b20:	20001838 	.word	0x20001838
	...

08005b30 <_port_irq_epilogue>:
 8005b30:	2320      	movs	r3, #32
 8005b32:	f383 8811 	msr	BASEPRI, r3
 8005b36:	4b11      	ldr	r3, [pc, #68]	; (8005b7c <_port_irq_epilogue+0x4c>)
 8005b38:	685b      	ldr	r3, [r3, #4]
 8005b3a:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 8005b3e:	d102      	bne.n	8005b46 <_port_irq_epilogue+0x16>
 8005b40:	f383 8811 	msr	BASEPRI, r3
 8005b44:	4770      	bx	lr
 8005b46:	b480      	push	{r7}
 8005b48:	af00      	add	r7, sp, #0
 8005b4a:	f3ef 8309 	mrs	r3, PSP
 8005b4e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8005b52:	f1a3 0220 	sub.w	r2, r3, #32
 8005b56:	f843 1c04 	str.w	r1, [r3, #-4]
 8005b5a:	f382 8809 	msr	PSP, r2
 8005b5e:	4a08      	ldr	r2, [pc, #32]	; (8005b80 <_port_irq_epilogue+0x50>)
 8005b60:	6811      	ldr	r1, [r2, #0]
 8005b62:	6992      	ldr	r2, [r2, #24]
 8005b64:	6889      	ldr	r1, [r1, #8]
 8005b66:	6892      	ldr	r2, [r2, #8]
 8005b68:	4291      	cmp	r1, r2
 8005b6a:	bf8c      	ite	hi
 8005b6c:	4a05      	ldrhi	r2, [pc, #20]	; (8005b84 <_port_irq_epilogue+0x54>)
 8005b6e:	4a06      	ldrls	r2, [pc, #24]	; (8005b88 <_port_irq_epilogue+0x58>)
 8005b70:	f843 2c08 	str.w	r2, [r3, #-8]
 8005b74:	46bd      	mov	sp, r7
 8005b76:	bc80      	pop	{r7}
 8005b78:	4770      	bx	lr
 8005b7a:	bf00      	nop
 8005b7c:	e000ed00 	.word	0xe000ed00
 8005b80:	20002158 	.word	0x20002158
 8005b84:	08005221 	.word	0x08005221
 8005b88:	08005224 	.word	0x08005224
 8005b8c:	00000000 	.word	0x00000000

08005b90 <Vector8C>:
 8005b90:	f7ff bfce 	b.w	8005b30 <_port_irq_epilogue>
	...

08005ba0 <VectorB0>:
 8005ba0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005ba4:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8005ba8:	6923      	ldr	r3, [r4, #16]
 8005baa:	079b      	lsls	r3, r3, #30
 8005bac:	d403      	bmi.n	8005bb6 <VectorB0+0x16>
 8005bae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005bb2:	f7ff bfbd 	b.w	8005b30 <_port_irq_epilogue>
 8005bb6:	2700      	movs	r7, #0
 8005bb8:	2520      	movs	r5, #32
 8005bba:	6127      	str	r7, [r4, #16]
 8005bbc:	f385 8811 	msr	BASEPRI, r5
 8005bc0:	4e1e      	ldr	r6, [pc, #120]	; (8005c3c <VectorB0+0x9c>)
 8005bc2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005bc4:	f8b6 c026 	ldrh.w	ip, [r6, #38]	; 0x26
 8005bc8:	69f3      	ldr	r3, [r6, #28]
 8005bca:	b280      	uxth	r0, r0
 8005bcc:	eba0 010c 	sub.w	r1, r0, ip
 8005bd0:	891a      	ldrh	r2, [r3, #8]
 8005bd2:	b289      	uxth	r1, r1
 8005bd4:	4291      	cmp	r1, r2
 8005bd6:	f106 081c 	add.w	r8, r6, #28
 8005bda:	d31b      	bcc.n	8005c14 <VectorB0+0x74>
 8005bdc:	6819      	ldr	r1, [r3, #0]
 8005bde:	4462      	add	r2, ip
 8005be0:	4541      	cmp	r1, r8
 8005be2:	84f2      	strh	r2, [r6, #38]	; 0x26
 8005be4:	68da      	ldr	r2, [r3, #12]
 8005be6:	f8c1 8004 	str.w	r8, [r1, #4]
 8005bea:	61f1      	str	r1, [r6, #28]
 8005bec:	60df      	str	r7, [r3, #12]
 8005bee:	bf08      	it	eq
 8005bf0:	60e7      	streq	r7, [r4, #12]
 8005bf2:	f387 8811 	msr	BASEPRI, r7
 8005bf6:	6918      	ldr	r0, [r3, #16]
 8005bf8:	4790      	blx	r2
 8005bfa:	f385 8811 	msr	BASEPRI, r5
 8005bfe:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005c00:	f8b6 c026 	ldrh.w	ip, [r6, #38]	; 0x26
 8005c04:	69f3      	ldr	r3, [r6, #28]
 8005c06:	b280      	uxth	r0, r0
 8005c08:	eba0 010c 	sub.w	r1, r0, ip
 8005c0c:	891a      	ldrh	r2, [r3, #8]
 8005c0e:	b289      	uxth	r1, r1
 8005c10:	428a      	cmp	r2, r1
 8005c12:	d9e3      	bls.n	8005bdc <VectorB0+0x3c>
 8005c14:	4543      	cmp	r3, r8
 8005c16:	d00a      	beq.n	8005c2e <VectorB0+0x8e>
 8005c18:	4462      	add	r2, ip
 8005c1a:	1a12      	subs	r2, r2, r0
 8005c1c:	b292      	uxth	r2, r2
 8005c1e:	2a02      	cmp	r2, #2
 8005c20:	bf2c      	ite	cs
 8005c22:	1882      	addcs	r2, r0, r2
 8005c24:	1c82      	addcc	r2, r0, #2
 8005c26:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8005c2a:	b292      	uxth	r2, r2
 8005c2c:	635a      	str	r2, [r3, #52]	; 0x34
 8005c2e:	2300      	movs	r3, #0
 8005c30:	f383 8811 	msr	BASEPRI, r3
 8005c34:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005c38:	f7ff bf7a 	b.w	8005b30 <_port_irq_epilogue>
 8005c3c:	20002158 	.word	0x20002158

08005c40 <SVC_Handler>:
 8005c40:	b480      	push	{r7}
 8005c42:	af00      	add	r7, sp, #0
 8005c44:	f3ef 8309 	mrs	r3, PSP
 8005c48:	3320      	adds	r3, #32
 8005c4a:	f383 8809 	msr	PSP, r3
 8005c4e:	2300      	movs	r3, #0
 8005c50:	f383 8811 	msr	BASEPRI, r3
 8005c54:	46bd      	mov	sp, r7
 8005c56:	bc80      	pop	{r7}
 8005c58:	4770      	bx	lr
 8005c5a:	bf00      	nop
 8005c5c:	0000      	movs	r0, r0
	...

08005c60 <chPoolAlloc>:
 8005c60:	b508      	push	{r3, lr}
 8005c62:	2220      	movs	r2, #32
 8005c64:	4603      	mov	r3, r0
 8005c66:	f382 8811 	msr	BASEPRI, r2
 8005c6a:	6800      	ldr	r0, [r0, #0]
 8005c6c:	b128      	cbz	r0, 8005c7a <chPoolAlloc+0x1a>
 8005c6e:	6802      	ldr	r2, [r0, #0]
 8005c70:	601a      	str	r2, [r3, #0]
 8005c72:	2300      	movs	r3, #0
 8005c74:	f383 8811 	msr	BASEPRI, r3
 8005c78:	bd08      	pop	{r3, pc}
 8005c7a:	689a      	ldr	r2, [r3, #8]
 8005c7c:	2a00      	cmp	r2, #0
 8005c7e:	d0f8      	beq.n	8005c72 <chPoolAlloc+0x12>
 8005c80:	6858      	ldr	r0, [r3, #4]
 8005c82:	4790      	blx	r2
 8005c84:	2300      	movs	r3, #0
 8005c86:	f383 8811 	msr	BASEPRI, r3
 8005c8a:	bd08      	pop	{r3, pc}
 8005c8c:	0000      	movs	r0, r0
	...

08005c90 <pools1_execute>:
 8005c90:	b570      	push	{r4, r5, r6, lr}
 8005c92:	2205      	movs	r2, #5
 8005c94:	2520      	movs	r5, #32
 8005c96:	2000      	movs	r0, #0
 8005c98:	4b2f      	ldr	r3, [pc, #188]	; (8005d58 <pools1_execute+0xc8>)
 8005c9a:	4c30      	ldr	r4, [pc, #192]	; (8005d5c <pools1_execute+0xcc>)
 8005c9c:	f385 8811 	msr	BASEPRI, r5
 8005ca0:	6821      	ldr	r1, [r4, #0]
 8005ca2:	6023      	str	r3, [r4, #0]
 8005ca4:	6019      	str	r1, [r3, #0]
 8005ca6:	f380 8811 	msr	BASEPRI, r0
 8005caa:	6861      	ldr	r1, [r4, #4]
 8005cac:	3a01      	subs	r2, #1
 8005cae:	440b      	add	r3, r1
 8005cb0:	d1f4      	bne.n	8005c9c <pools1_execute+0xc>
 8005cb2:	2505      	movs	r5, #5
 8005cb4:	4e29      	ldr	r6, [pc, #164]	; (8005d5c <pools1_execute+0xcc>)
 8005cb6:	4630      	mov	r0, r6
 8005cb8:	f7ff ffd2 	bl	8005c60 <chPoolAlloc>
 8005cbc:	1c01      	adds	r1, r0, #0
 8005cbe:	bf18      	it	ne
 8005cc0:	2101      	movne	r1, #1
 8005cc2:	2001      	movs	r0, #1
 8005cc4:	f7ff fd4c 	bl	8005760 <_test_assert>
 8005cc8:	bba0      	cbnz	r0, 8005d34 <pools1_execute+0xa4>
 8005cca:	3d01      	subs	r5, #1
 8005ccc:	d1f3      	bne.n	8005cb6 <pools1_execute+0x26>
 8005cce:	4823      	ldr	r0, [pc, #140]	; (8005d5c <pools1_execute+0xcc>)
 8005cd0:	f7ff ffc6 	bl	8005c60 <chPoolAlloc>
 8005cd4:	fab0 f180 	clz	r1, r0
 8005cd8:	2002      	movs	r0, #2
 8005cda:	0949      	lsrs	r1, r1, #5
 8005cdc:	f7ff fd40 	bl	8005760 <_test_assert>
 8005ce0:	bb40      	cbnz	r0, 8005d34 <pools1_execute+0xa4>
 8005ce2:	2620      	movs	r6, #32
 8005ce4:	4a1e      	ldr	r2, [pc, #120]	; (8005d60 <pools1_execute+0xd0>)
 8005ce6:	4b1c      	ldr	r3, [pc, #112]	; (8005d58 <pools1_execute+0xc8>)
 8005ce8:	f102 0010 	add.w	r0, r2, #16
 8005cec:	f386 8811 	msr	BASEPRI, r6
 8005cf0:	6821      	ldr	r1, [r4, #0]
 8005cf2:	6019      	str	r1, [r3, #0]
 8005cf4:	6023      	str	r3, [r4, #0]
 8005cf6:	f385 8811 	msr	BASEPRI, r5
 8005cfa:	4290      	cmp	r0, r2
 8005cfc:	d002      	beq.n	8005d04 <pools1_execute+0x74>
 8005cfe:	f852 3b04 	ldr.w	r3, [r2], #4
 8005d02:	e7f3      	b.n	8005cec <pools1_execute+0x5c>
 8005d04:	2505      	movs	r5, #5
 8005d06:	4e15      	ldr	r6, [pc, #84]	; (8005d5c <pools1_execute+0xcc>)
 8005d08:	4630      	mov	r0, r6
 8005d0a:	f7ff ffa9 	bl	8005c60 <chPoolAlloc>
 8005d0e:	1c01      	adds	r1, r0, #0
 8005d10:	bf18      	it	ne
 8005d12:	2101      	movne	r1, #1
 8005d14:	2003      	movs	r0, #3
 8005d16:	f7ff fd23 	bl	8005760 <_test_assert>
 8005d1a:	b958      	cbnz	r0, 8005d34 <pools1_execute+0xa4>
 8005d1c:	3d01      	subs	r5, #1
 8005d1e:	d1f3      	bne.n	8005d08 <pools1_execute+0x78>
 8005d20:	480e      	ldr	r0, [pc, #56]	; (8005d5c <pools1_execute+0xcc>)
 8005d22:	f7ff ff9d 	bl	8005c60 <chPoolAlloc>
 8005d26:	fab0 f180 	clz	r1, r0
 8005d2a:	2004      	movs	r0, #4
 8005d2c:	0949      	lsrs	r1, r1, #5
 8005d2e:	f7ff fd17 	bl	8005760 <_test_assert>
 8005d32:	b100      	cbz	r0, 8005d36 <pools1_execute+0xa6>
 8005d34:	bd70      	pop	{r4, r5, r6, pc}
 8005d36:	2210      	movs	r2, #16
 8005d38:	4b0a      	ldr	r3, [pc, #40]	; (8005d64 <pools1_execute+0xd4>)
 8005d3a:	4808      	ldr	r0, [pc, #32]	; (8005d5c <pools1_execute+0xcc>)
 8005d3c:	e9c4 5200 	strd	r5, r2, [r4]
 8005d40:	60a3      	str	r3, [r4, #8]
 8005d42:	f7ff ff8d 	bl	8005c60 <chPoolAlloc>
 8005d46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005d4a:	fab0 f180 	clz	r1, r0
 8005d4e:	2005      	movs	r0, #5
 8005d50:	40c1      	lsrs	r1, r0
 8005d52:	f7ff bd05 	b.w	8005760 <_test_assert>
 8005d56:	bf00      	nop
 8005d58:	200023b0 	.word	0x200023b0
 8005d5c:	200018a0 	.word	0x200018a0
 8005d60:	0800d734 	.word	0x0800d734
 8005d64:	08005451 	.word	0x08005451
	...

08005d70 <chEvtUnregister>:
 8005d70:	2320      	movs	r3, #32
 8005d72:	f383 8811 	msr	BASEPRI, r3
 8005d76:	4602      	mov	r2, r0
 8005d78:	e002      	b.n	8005d80 <chEvtUnregister+0x10>
 8005d7a:	428b      	cmp	r3, r1
 8005d7c:	d007      	beq.n	8005d8e <chEvtUnregister+0x1e>
 8005d7e:	461a      	mov	r2, r3
 8005d80:	6813      	ldr	r3, [r2, #0]
 8005d82:	4283      	cmp	r3, r0
 8005d84:	d1f9      	bne.n	8005d7a <chEvtUnregister+0xa>
 8005d86:	2300      	movs	r3, #0
 8005d88:	f383 8811 	msr	BASEPRI, r3
 8005d8c:	4770      	bx	lr
 8005d8e:	680b      	ldr	r3, [r1, #0]
 8005d90:	6013      	str	r3, [r2, #0]
 8005d92:	2300      	movs	r3, #0
 8005d94:	f383 8811 	msr	BASEPRI, r3
 8005d98:	4770      	bx	lr
 8005d9a:	bf00      	nop
 8005d9c:	0000      	movs	r0, r0
	...

08005da0 <evt1_execute>:
 8005da0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005da4:	4c33      	ldr	r4, [pc, #204]	; (8005e74 <evt1_execute+0xd4>)
 8005da6:	b08a      	sub	sp, #40	; 0x28
 8005da8:	f04f 0c20 	mov.w	ip, #32
 8005dac:	6024      	str	r4, [r4, #0]
 8005dae:	f38c 8811 	msr	BASEPRI, ip
 8005db2:	2701      	movs	r7, #1
 8005db4:	2300      	movs	r3, #0
 8005db6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005dba:	4a2f      	ldr	r2, [pc, #188]	; (8005e78 <evt1_execute+0xd8>)
 8005dbc:	6826      	ldr	r6, [r4, #0]
 8005dbe:	ad0a      	add	r5, sp, #40	; 0x28
 8005dc0:	6991      	ldr	r1, [r2, #24]
 8005dc2:	f845 6d14 	str.w	r6, [r5, #-20]!
 8005dc6:	9106      	str	r1, [sp, #24]
 8005dc8:	6025      	str	r5, [r4, #0]
 8005dca:	e9cd 7307 	strd	r7, r3, [sp, #28]
 8005dce:	9009      	str	r0, [sp, #36]	; 0x24
 8005dd0:	f383 8811 	msr	BASEPRI, r3
 8005dd4:	f38c 8811 	msr	BASEPRI, ip
 8005dd8:	f04f 0802 	mov.w	r8, #2
 8005ddc:	6991      	ldr	r1, [r2, #24]
 8005dde:	6822      	ldr	r2, [r4, #0]
 8005de0:	ae0a      	add	r6, sp, #40	; 0x28
 8005de2:	f846 2d28 	str.w	r2, [r6, #-40]!
 8005de6:	9101      	str	r1, [sp, #4]
 8005de8:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8005dec:	6026      	str	r6, [r4, #0]
 8005dee:	f8cd 8008 	str.w	r8, [sp, #8]
 8005df2:	f383 8811 	msr	BASEPRI, r3
 8005df6:	6821      	ldr	r1, [r4, #0]
 8005df8:	4638      	mov	r0, r7
 8005dfa:	1b09      	subs	r1, r1, r4
 8005dfc:	bf18      	it	ne
 8005dfe:	2101      	movne	r1, #1
 8005e00:	f7ff fcae 	bl	8005760 <_test_assert>
 8005e04:	b110      	cbz	r0, 8005e0c <evt1_execute+0x6c>
 8005e06:	b00a      	add	sp, #40	; 0x28
 8005e08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005e0c:	4629      	mov	r1, r5
 8005e0e:	4620      	mov	r0, r4
 8005e10:	f7ff ffae 	bl	8005d70 <chEvtUnregister>
 8005e14:	6821      	ldr	r1, [r4, #0]
 8005e16:	4640      	mov	r0, r8
 8005e18:	1b09      	subs	r1, r1, r4
 8005e1a:	bf18      	it	ne
 8005e1c:	2101      	movne	r1, #1
 8005e1e:	f7ff fc9f 	bl	8005760 <_test_assert>
 8005e22:	2800      	cmp	r0, #0
 8005e24:	d1ef      	bne.n	8005e06 <evt1_execute+0x66>
 8005e26:	4631      	mov	r1, r6
 8005e28:	4620      	mov	r0, r4
 8005e2a:	f7ff ffa1 	bl	8005d70 <chEvtUnregister>
 8005e2e:	6821      	ldr	r1, [r4, #0]
 8005e30:	2003      	movs	r0, #3
 8005e32:	1b09      	subs	r1, r1, r4
 8005e34:	fab1 f181 	clz	r1, r1
 8005e38:	0949      	lsrs	r1, r1, #5
 8005e3a:	f7ff fc91 	bl	8005760 <_test_assert>
 8005e3e:	2800      	cmp	r0, #0
 8005e40:	d1e1      	bne.n	8005e06 <evt1_execute+0x66>
 8005e42:	4604      	mov	r4, r0
 8005e44:	2507      	movs	r5, #7
 8005e46:	4e0d      	ldr	r6, [pc, #52]	; (8005e7c <evt1_execute+0xdc>)
 8005e48:	fa25 f304 	lsr.w	r3, r5, r4
 8005e4c:	07db      	lsls	r3, r3, #31
 8005e4e:	fa07 f204 	lsl.w	r2, r7, r4
 8005e52:	d50d      	bpl.n	8005e70 <evt1_execute+0xd0>
 8005e54:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8005e58:	4620      	mov	r0, r4
 8005e5a:	ea25 0502 	bic.w	r5, r5, r2
 8005e5e:	3401      	adds	r4, #1
 8005e60:	4798      	blx	r3
 8005e62:	2d00      	cmp	r5, #0
 8005e64:	d1f0      	bne.n	8005e48 <evt1_execute+0xa8>
 8005e66:	4906      	ldr	r1, [pc, #24]	; (8005e80 <evt1_execute+0xe0>)
 8005e68:	2004      	movs	r0, #4
 8005e6a:	f7ff fc51 	bl	8005710 <_test_assert_sequence>
 8005e6e:	e7ca      	b.n	8005e06 <evt1_execute+0x66>
 8005e70:	3401      	adds	r4, #1
 8005e72:	e7e9      	b.n	8005e48 <evt1_execute+0xa8>
 8005e74:	2000180c 	.word	0x2000180c
 8005e78:	20002158 	.word	0x20002158
 8005e7c:	0800cb10 	.word	0x0800cb10
 8005e80:	0800cb20 	.word	0x0800cb20
	...

08005e90 <chTMStopMeasurementX>:
 8005e90:	4b10      	ldr	r3, [pc, #64]	; (8005ed4 <chTMStopMeasurementX+0x44>)
 8005e92:	4a11      	ldr	r2, [pc, #68]	; (8005ed8 <chTMStopMeasurementX+0x48>)
 8005e94:	685b      	ldr	r3, [r3, #4]
 8005e96:	6881      	ldr	r1, [r0, #8]
 8005e98:	6f12      	ldr	r2, [r2, #112]	; 0x70
 8005e9a:	1a5b      	subs	r3, r3, r1
 8005e9c:	1a9b      	subs	r3, r3, r2
 8005e9e:	6841      	ldr	r1, [r0, #4]
 8005ea0:	68c2      	ldr	r2, [r0, #12]
 8005ea2:	e92d 0830 	stmdb	sp!, {r4, r5, fp}
 8005ea6:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
 8005eaa:	eb14 0b03 	adds.w	fp, r4, r3
 8005eae:	f145 0c00 	adc.w	ip, r5, #0
 8005eb2:	3201      	adds	r2, #1
 8005eb4:	428b      	cmp	r3, r1
 8005eb6:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8005eba:	e9c0 bc04 	strd	fp, ip, [r0, #16]
 8005ebe:	d806      	bhi.n	8005ece <chTMStopMeasurementX+0x3e>
 8005ec0:	6802      	ldr	r2, [r0, #0]
 8005ec2:	4293      	cmp	r3, r2
 8005ec4:	bf38      	it	cc
 8005ec6:	6003      	strcc	r3, [r0, #0]
 8005ec8:	e8bd 0830 	ldmia.w	sp!, {r4, r5, fp}
 8005ecc:	4770      	bx	lr
 8005ece:	6043      	str	r3, [r0, #4]
 8005ed0:	e7fa      	b.n	8005ec8 <chTMStopMeasurementX+0x38>
 8005ed2:	bf00      	nop
 8005ed4:	e0001000 	.word	0xe0001000
 8005ed8:	20002158 	.word	0x20002158
 8005edc:	00000000 	.word	0x00000000

08005ee0 <wakeup>:
 8005ee0:	2320      	movs	r3, #32
 8005ee2:	f383 8811 	msr	BASEPRI, r3
 8005ee6:	7f03      	ldrb	r3, [r0, #28]
 8005ee8:	2b07      	cmp	r3, #7
 8005eea:	d80e      	bhi.n	8005f0a <wakeup+0x2a>
 8005eec:	e8df f003 	tbb	[pc, r3]
 8005ef0:	230d0d27 	.word	0x230d0d27
 8005ef4:	080d0408 	.word	0x080d0408
 8005ef8:	6a02      	ldr	r2, [r0, #32]
 8005efa:	6893      	ldr	r3, [r2, #8]
 8005efc:	3301      	adds	r3, #1
 8005efe:	6093      	str	r3, [r2, #8]
 8005f00:	e9d0 2300 	ldrd	r2, r3, [r0]
 8005f04:	601a      	str	r2, [r3, #0]
 8005f06:	6802      	ldr	r2, [r0, #0]
 8005f08:	6053      	str	r3, [r2, #4]
 8005f0a:	b410      	push	{r4}
 8005f0c:	2200      	movs	r2, #0
 8005f0e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8005f12:	6881      	ldr	r1, [r0, #8]
 8005f14:	4b0c      	ldr	r3, [pc, #48]	; (8005f48 <wakeup+0x68>)
 8005f16:	6204      	str	r4, [r0, #32]
 8005f18:	7702      	strb	r2, [r0, #28]
 8005f1a:	681b      	ldr	r3, [r3, #0]
 8005f1c:	689a      	ldr	r2, [r3, #8]
 8005f1e:	428a      	cmp	r2, r1
 8005f20:	d2fb      	bcs.n	8005f1a <wakeup+0x3a>
 8005f22:	685a      	ldr	r2, [r3, #4]
 8005f24:	2100      	movs	r1, #0
 8005f26:	e9c0 3200 	strd	r3, r2, [r0]
 8005f2a:	6010      	str	r0, [r2, #0]
 8005f2c:	6058      	str	r0, [r3, #4]
 8005f2e:	f381 8811 	msr	BASEPRI, r1
 8005f32:	bc10      	pop	{r4}
 8005f34:	4770      	bx	lr
 8005f36:	2200      	movs	r2, #0
 8005f38:	6a03      	ldr	r3, [r0, #32]
 8005f3a:	601a      	str	r2, [r3, #0]
 8005f3c:	e7e5      	b.n	8005f0a <wakeup+0x2a>
 8005f3e:	2300      	movs	r3, #0
 8005f40:	f383 8811 	msr	BASEPRI, r3
 8005f44:	4770      	bx	lr
 8005f46:	bf00      	nop
 8005f48:	20002158 	.word	0x20002158
 8005f4c:	00000000 	.word	0x00000000

08005f50 <chSchReadyI>:
 8005f50:	4601      	mov	r1, r0
 8005f52:	2200      	movs	r2, #0
 8005f54:	4b06      	ldr	r3, [pc, #24]	; (8005f70 <chSchReadyI+0x20>)
 8005f56:	6880      	ldr	r0, [r0, #8]
 8005f58:	770a      	strb	r2, [r1, #28]
 8005f5a:	681b      	ldr	r3, [r3, #0]
 8005f5c:	689a      	ldr	r2, [r3, #8]
 8005f5e:	4282      	cmp	r2, r0
 8005f60:	d2fb      	bcs.n	8005f5a <chSchReadyI+0xa>
 8005f62:	685a      	ldr	r2, [r3, #4]
 8005f64:	4608      	mov	r0, r1
 8005f66:	e9c1 3200 	strd	r3, r2, [r1]
 8005f6a:	6011      	str	r1, [r2, #0]
 8005f6c:	6059      	str	r1, [r3, #4]
 8005f6e:	4770      	bx	lr
 8005f70:	20002158 	.word	0x20002158
	...

08005f80 <chCondSignalI.constprop.51>:
 8005f80:	4b07      	ldr	r3, [pc, #28]	; (8005fa0 <chCondSignalI.constprop.51+0x20>)
 8005f82:	681a      	ldr	r2, [r3, #0]
 8005f84:	429a      	cmp	r2, r3
 8005f86:	d009      	beq.n	8005f9c <chCondSignalI.constprop.51+0x1c>
 8005f88:	b410      	push	{r4}
 8005f8a:	2400      	movs	r4, #0
 8005f8c:	6811      	ldr	r1, [r2, #0]
 8005f8e:	4610      	mov	r0, r2
 8005f90:	604b      	str	r3, [r1, #4]
 8005f92:	6019      	str	r1, [r3, #0]
 8005f94:	6214      	str	r4, [r2, #32]
 8005f96:	bc10      	pop	{r4}
 8005f98:	f7ff bfda 	b.w	8005f50 <chSchReadyI>
 8005f9c:	4770      	bx	lr
 8005f9e:	bf00      	nop
 8005fa0:	20001804 	.word	0x20001804
	...

08005fb0 <chIQPutI>:
 8005fb0:	b510      	push	{r4, lr}
 8005fb2:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 8005fb6:	42a2      	cmp	r2, r4
 8005fb8:	6883      	ldr	r3, [r0, #8]
 8005fba:	d01d      	beq.n	8005ff8 <chIQPutI+0x48>
 8005fbc:	3301      	adds	r3, #1
 8005fbe:	1c54      	adds	r4, r2, #1
 8005fc0:	6083      	str	r3, [r0, #8]
 8005fc2:	6144      	str	r4, [r0, #20]
 8005fc4:	7011      	strb	r1, [r2, #0]
 8005fc6:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
 8005fca:	429a      	cmp	r2, r3
 8005fcc:	d20d      	bcs.n	8005fea <chIQPutI+0x3a>
 8005fce:	6802      	ldr	r2, [r0, #0]
 8005fd0:	4290      	cmp	r0, r2
 8005fd2:	d00f      	beq.n	8005ff4 <chIQPutI+0x44>
 8005fd4:	4603      	mov	r3, r0
 8005fd6:	2400      	movs	r4, #0
 8005fd8:	6811      	ldr	r1, [r2, #0]
 8005fda:	4610      	mov	r0, r2
 8005fdc:	6019      	str	r1, [r3, #0]
 8005fde:	604b      	str	r3, [r1, #4]
 8005fe0:	6214      	str	r4, [r2, #32]
 8005fe2:	f7ff ffb5 	bl	8005f50 <chSchReadyI>
 8005fe6:	4620      	mov	r0, r4
 8005fe8:	bd10      	pop	{r4, pc}
 8005fea:	6802      	ldr	r2, [r0, #0]
 8005fec:	68c3      	ldr	r3, [r0, #12]
 8005fee:	4290      	cmp	r0, r2
 8005ff0:	6143      	str	r3, [r0, #20]
 8005ff2:	d1ef      	bne.n	8005fd4 <chIQPutI+0x24>
 8005ff4:	2000      	movs	r0, #0
 8005ff6:	bd10      	pop	{r4, pc}
 8005ff8:	2b00      	cmp	r3, #0
 8005ffa:	d0df      	beq.n	8005fbc <chIQPutI+0xc>
 8005ffc:	f06f 0003 	mvn.w	r0, #3
 8006000:	bd10      	pop	{r4, pc}
 8006002:	bf00      	nop
	...

08006010 <chOQGetI.constprop.22>:
 8006010:	b538      	push	{r3, r4, r5, lr}
 8006012:	4b11      	ldr	r3, [pc, #68]	; (8006058 <chOQGetI.constprop.22+0x48>)
 8006014:	e9d3 0105 	ldrd	r0, r1, [r3, #20]
 8006018:	4288      	cmp	r0, r1
 800601a:	689a      	ldr	r2, [r3, #8]
 800601c:	d017      	beq.n	800604e <chOQGetI.constprop.22+0x3e>
 800601e:	691d      	ldr	r5, [r3, #16]
 8006020:	1c48      	adds	r0, r1, #1
 8006022:	3201      	adds	r2, #1
 8006024:	609a      	str	r2, [r3, #8]
 8006026:	6198      	str	r0, [r3, #24]
 8006028:	42a8      	cmp	r0, r5
 800602a:	780c      	ldrb	r4, [r1, #0]
 800602c:	d20c      	bcs.n	8006048 <chOQGetI.constprop.22+0x38>
 800602e:	681a      	ldr	r2, [r3, #0]
 8006030:	429a      	cmp	r2, r3
 8006032:	d007      	beq.n	8006044 <chOQGetI.constprop.22+0x34>
 8006034:	2500      	movs	r5, #0
 8006036:	6811      	ldr	r1, [r2, #0]
 8006038:	4610      	mov	r0, r2
 800603a:	604b      	str	r3, [r1, #4]
 800603c:	6019      	str	r1, [r3, #0]
 800603e:	6215      	str	r5, [r2, #32]
 8006040:	f7ff ff86 	bl	8005f50 <chSchReadyI>
 8006044:	4620      	mov	r0, r4
 8006046:	bd38      	pop	{r3, r4, r5, pc}
 8006048:	68da      	ldr	r2, [r3, #12]
 800604a:	619a      	str	r2, [r3, #24]
 800604c:	e7ef      	b.n	800602e <chOQGetI.constprop.22+0x1e>
 800604e:	2a00      	cmp	r2, #0
 8006050:	d0e5      	beq.n	800601e <chOQGetI.constprop.22+0xe>
 8006052:	f06f 0002 	mvn.w	r0, #2
 8006056:	bd38      	pop	{r3, r4, r5, pc}
 8006058:	200018ac 	.word	0x200018ac
 800605c:	00000000 	.word	0x00000000

08006060 <chEvtSignalI>:
 8006060:	4603      	mov	r3, r0
 8006062:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8006064:	7f00      	ldrb	r0, [r0, #28]
 8006066:	4311      	orrs	r1, r2
 8006068:	280a      	cmp	r0, #10
 800606a:	6359      	str	r1, [r3, #52]	; 0x34
 800606c:	d00a      	beq.n	8006084 <chEvtSignalI+0x24>
 800606e:	280b      	cmp	r0, #11
 8006070:	d000      	beq.n	8006074 <chEvtSignalI+0x14>
 8006072:	4770      	bx	lr
 8006074:	6a1a      	ldr	r2, [r3, #32]
 8006076:	438a      	bics	r2, r1
 8006078:	d1fb      	bne.n	8006072 <chEvtSignalI+0x12>
 800607a:	2200      	movs	r2, #0
 800607c:	4618      	mov	r0, r3
 800607e:	621a      	str	r2, [r3, #32]
 8006080:	f7ff bf66 	b.w	8005f50 <chSchReadyI>
 8006084:	6a1a      	ldr	r2, [r3, #32]
 8006086:	4211      	tst	r1, r2
 8006088:	d1f7      	bne.n	800607a <chEvtSignalI+0x1a>
 800608a:	4770      	bx	lr
 800608c:	0000      	movs	r0, r0
	...

08006090 <chEvtBroadcastFlagsI>:
 8006090:	b570      	push	{r4, r5, r6, lr}
 8006092:	6804      	ldr	r4, [r0, #0]
 8006094:	42a0      	cmp	r0, r4
 8006096:	d00f      	beq.n	80060b8 <chEvtBroadcastFlagsI+0x28>
 8006098:	4606      	mov	r6, r0
 800609a:	460d      	mov	r5, r1
 800609c:	68e3      	ldr	r3, [r4, #12]
 800609e:	432b      	orrs	r3, r5
 80060a0:	60e3      	str	r3, [r4, #12]
 80060a2:	b115      	cbz	r5, 80060aa <chEvtBroadcastFlagsI+0x1a>
 80060a4:	6922      	ldr	r2, [r4, #16]
 80060a6:	4213      	tst	r3, r2
 80060a8:	d003      	beq.n	80060b2 <chEvtBroadcastFlagsI+0x22>
 80060aa:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 80060ae:	f7ff ffd7 	bl	8006060 <chEvtSignalI>
 80060b2:	6824      	ldr	r4, [r4, #0]
 80060b4:	42a6      	cmp	r6, r4
 80060b6:	d1f1      	bne.n	800609c <chEvtBroadcastFlagsI+0xc>
 80060b8:	bd70      	pop	{r4, r5, r6, pc}
 80060ba:	bf00      	nop
 80060bc:	0000      	movs	r0, r0
	...

080060c0 <sduDataReceived>:
 80060c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80060c2:	f101 0311 	add.w	r3, r1, #17
 80060c6:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
 80060ca:	b1bc      	cbz	r4, 80060fc <sduDataReceived+0x3c>
 80060cc:	4607      	mov	r7, r0
 80060ce:	460d      	mov	r5, r1
 80060d0:	2620      	movs	r6, #32
 80060d2:	f386 8811 	msr	BASEPRI, r6
 80060d6:	2104      	movs	r1, #4
 80060d8:	1860      	adds	r0, r4, r1
 80060da:	f7ff ffd9 	bl	8006090 <chEvtBroadcastFlagsI>
 80060de:	e9d4 0206 	ldrd	r0, r2, [r4, #24]
 80060e2:	eb07 0c85 	add.w	ip, r7, r5, lsl #2
 80060e6:	f8dc 100c 	ldr.w	r1, [ip, #12]
 80060ea:	6963      	ldr	r3, [r4, #20]
 80060ec:	8a49      	ldrh	r1, [r1, #18]
 80060ee:	1a12      	subs	r2, r2, r0
 80060f0:	1ad3      	subs	r3, r2, r3
 80060f2:	4299      	cmp	r1, r3
 80060f4:	d903      	bls.n	80060fe <sduDataReceived+0x3e>
 80060f6:	2300      	movs	r3, #0
 80060f8:	f383 8811 	msr	BASEPRI, r3
 80060fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80060fe:	2000      	movs	r0, #0
 8006100:	f380 8811 	msr	BASEPRI, r0
 8006104:	fbb3 f3f1 	udiv	r3, r3, r1
 8006108:	f04f 0e01 	mov.w	lr, #1
 800610c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8006110:	fb01 f303 	mul.w	r3, r1, r3
 8006114:	6992      	ldr	r2, [r2, #24]
 8006116:	340c      	adds	r4, #12
 8006118:	e9c2 3001 	strd	r3, r0, [r2, #4]
 800611c:	4629      	mov	r1, r5
 800611e:	60d4      	str	r4, [r2, #12]
 8006120:	f882 e000 	strb.w	lr, [r2]
 8006124:	4638      	mov	r0, r7
 8006126:	f7ff fba3 	bl	8005870 <usb_lld_prepare_receive>
 800612a:	f386 8811 	msr	BASEPRI, r6
 800612e:	4629      	mov	r1, r5
 8006130:	f7ff fc4e 	bl	80059d0 <usbStartReceiveI>
 8006134:	2300      	movs	r3, #0
 8006136:	f383 8811 	msr	BASEPRI, r3
 800613a:	e7df      	b.n	80060fc <sduDataReceived+0x3c>
 800613c:	0000      	movs	r0, r0
	...

08006140 <chMtxUnlockS>:
 8006140:	4a12      	ldr	r2, [pc, #72]	; (800618c <chMtxUnlockS+0x4c>)
 8006142:	b430      	push	{r4, r5}
 8006144:	6804      	ldr	r4, [r0, #0]
 8006146:	68c3      	ldr	r3, [r0, #12]
 8006148:	6995      	ldr	r5, [r2, #24]
 800614a:	4284      	cmp	r4, r0
 800614c:	63ab      	str	r3, [r5, #56]	; 0x38
 800614e:	d018      	beq.n	8006182 <chMtxUnlockS+0x42>
 8006150:	4601      	mov	r1, r0
 8006152:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 8006154:	b14b      	cbz	r3, 800616a <chMtxUnlockS+0x2a>
 8006156:	681a      	ldr	r2, [r3, #0]
 8006158:	4293      	cmp	r3, r2
 800615a:	d003      	beq.n	8006164 <chMtxUnlockS+0x24>
 800615c:	6892      	ldr	r2, [r2, #8]
 800615e:	4290      	cmp	r0, r2
 8006160:	bf38      	it	cc
 8006162:	4610      	movcc	r0, r2
 8006164:	68db      	ldr	r3, [r3, #12]
 8006166:	2b00      	cmp	r3, #0
 8006168:	d1f5      	bne.n	8006156 <chMtxUnlockS+0x16>
 800616a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800616c:	6823      	ldr	r3, [r4, #0]
 800616e:	60a8      	str	r0, [r5, #8]
 8006170:	600b      	str	r3, [r1, #0]
 8006172:	4620      	mov	r0, r4
 8006174:	6059      	str	r1, [r3, #4]
 8006176:	e9c1 4202 	strd	r4, r2, [r1, #8]
 800617a:	63a1      	str	r1, [r4, #56]	; 0x38
 800617c:	bc30      	pop	{r4, r5}
 800617e:	f7ff bee7 	b.w	8005f50 <chSchReadyI>
 8006182:	2300      	movs	r3, #0
 8006184:	60a3      	str	r3, [r4, #8]
 8006186:	bc30      	pop	{r4, r5}
 8006188:	4770      	bx	lr
 800618a:	bf00      	nop
 800618c:	20002158 	.word	0x20002158

08006190 <chSemSignalI>:
 8006190:	6883      	ldr	r3, [r0, #8]
 8006192:	3301      	adds	r3, #1
 8006194:	2b00      	cmp	r3, #0
 8006196:	6083      	str	r3, [r0, #8]
 8006198:	dd00      	ble.n	800619c <chSemSignalI+0xc>
 800619a:	4770      	bx	lr
 800619c:	b410      	push	{r4}
 800619e:	4602      	mov	r2, r0
 80061a0:	2400      	movs	r4, #0
 80061a2:	6803      	ldr	r3, [r0, #0]
 80061a4:	6819      	ldr	r1, [r3, #0]
 80061a6:	4618      	mov	r0, r3
 80061a8:	6011      	str	r1, [r2, #0]
 80061aa:	604a      	str	r2, [r1, #4]
 80061ac:	621c      	str	r4, [r3, #32]
 80061ae:	bc10      	pop	{r4}
 80061b0:	f7ff bece 	b.w	8005f50 <chSchReadyI>
	...

080061c0 <chMBPostI.constprop.27>:
 80061c0:	b538      	push	{r3, r4, r5, lr}
 80061c2:	4b0c      	ldr	r3, [pc, #48]	; (80061f4 <chMBPostI.constprop.27+0x34>)
 80061c4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80061c6:	2a00      	cmp	r2, #0
 80061c8:	dd10      	ble.n	80061ec <chMBPostI.constprop.27+0x2c>
 80061ca:	e9d3 5401 	ldrd	r5, r4, [r3, #4]
 80061ce:	1d21      	adds	r1, r4, #4
 80061d0:	3a01      	subs	r2, #1
 80061d2:	42a9      	cmp	r1, r5
 80061d4:	625a      	str	r2, [r3, #36]	; 0x24
 80061d6:	bf28      	it	cs
 80061d8:	681a      	ldrcs	r2, [r3, #0]
 80061da:	6099      	str	r1, [r3, #8]
 80061dc:	6020      	str	r0, [r4, #0]
 80061de:	4806      	ldr	r0, [pc, #24]	; (80061f8 <chMBPostI.constprop.27+0x38>)
 80061e0:	bf28      	it	cs
 80061e2:	609a      	strcs	r2, [r3, #8]
 80061e4:	f7ff ffd4 	bl	8006190 <chSemSignalI>
 80061e8:	2000      	movs	r0, #0
 80061ea:	bd38      	pop	{r3, r4, r5, pc}
 80061ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80061f0:	bd38      	pop	{r3, r4, r5, pc}
 80061f2:	bf00      	nop
 80061f4:	20001878 	.word	0x20001878
 80061f8:	20001888 	.word	0x20001888
 80061fc:	00000000 	.word	0x00000000

08006200 <chMBPostAheadI.constprop.25>:
 8006200:	4a0c      	ldr	r2, [pc, #48]	; (8006234 <chMBPostAheadI.constprop.25+0x34>)
 8006202:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8006204:	2900      	cmp	r1, #0
 8006206:	dd11      	ble.n	800622c <chMBPostAheadI.constprop.25+0x2c>
 8006208:	68d3      	ldr	r3, [r2, #12]
 800620a:	b510      	push	{r4, lr}
 800620c:	6814      	ldr	r4, [r2, #0]
 800620e:	3b04      	subs	r3, #4
 8006210:	3901      	subs	r1, #1
 8006212:	42a3      	cmp	r3, r4
 8006214:	6251      	str	r1, [r2, #36]	; 0x24
 8006216:	60d3      	str	r3, [r2, #12]
 8006218:	d202      	bcs.n	8006220 <chMBPostAheadI.constprop.25+0x20>
 800621a:	6853      	ldr	r3, [r2, #4]
 800621c:	3b04      	subs	r3, #4
 800621e:	60d3      	str	r3, [r2, #12]
 8006220:	6018      	str	r0, [r3, #0]
 8006222:	4805      	ldr	r0, [pc, #20]	; (8006238 <chMBPostAheadI.constprop.25+0x38>)
 8006224:	f7ff ffb4 	bl	8006190 <chSemSignalI>
 8006228:	2000      	movs	r0, #0
 800622a:	bd10      	pop	{r4, pc}
 800622c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006230:	4770      	bx	lr
 8006232:	bf00      	nop
 8006234:	20001878 	.word	0x20001878
 8006238:	20001888 	.word	0x20001888
 800623c:	00000000 	.word	0x00000000

08006240 <chMBFetchI.constprop.23>:
 8006240:	4b0c      	ldr	r3, [pc, #48]	; (8006274 <chMBFetchI.constprop.23+0x34>)
 8006242:	6999      	ldr	r1, [r3, #24]
 8006244:	2900      	cmp	r1, #0
 8006246:	dd12      	ble.n	800626e <chMBFetchI.constprop.23+0x2e>
 8006248:	68da      	ldr	r2, [r3, #12]
 800624a:	3901      	subs	r1, #1
 800624c:	b510      	push	{r4, lr}
 800624e:	6199      	str	r1, [r3, #24]
 8006250:	6859      	ldr	r1, [r3, #4]
 8006252:	6814      	ldr	r4, [r2, #0]
 8006254:	3204      	adds	r2, #4
 8006256:	428a      	cmp	r2, r1
 8006258:	60da      	str	r2, [r3, #12]
 800625a:	bf28      	it	cs
 800625c:	681a      	ldrcs	r2, [r3, #0]
 800625e:	6004      	str	r4, [r0, #0]
 8006260:	4805      	ldr	r0, [pc, #20]	; (8006278 <chMBFetchI.constprop.23+0x38>)
 8006262:	bf28      	it	cs
 8006264:	60da      	strcs	r2, [r3, #12]
 8006266:	f7ff ff93 	bl	8006190 <chSemSignalI>
 800626a:	2000      	movs	r0, #0
 800626c:	bd10      	pop	{r4, pc}
 800626e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006272:	4770      	bx	lr
 8006274:	20001878 	.word	0x20001878
 8006278:	20001894 	.word	0x20001894
 800627c:	00000000 	.word	0x00000000

08006280 <chSemResetI>:
 8006280:	b570      	push	{r4, r5, r6, lr}
 8006282:	6885      	ldr	r5, [r0, #8]
 8006284:	6081      	str	r1, [r0, #8]
 8006286:	3501      	adds	r5, #1
 8006288:	2d00      	cmp	r5, #0
 800628a:	dc0c      	bgt.n	80062a6 <chSemResetI+0x26>
 800628c:	4604      	mov	r4, r0
 800628e:	f06f 0601 	mvn.w	r6, #1
 8006292:	6860      	ldr	r0, [r4, #4]
 8006294:	3501      	adds	r5, #1
 8006296:	6843      	ldr	r3, [r0, #4]
 8006298:	6063      	str	r3, [r4, #4]
 800629a:	601c      	str	r4, [r3, #0]
 800629c:	f7ff fe58 	bl	8005f50 <chSchReadyI>
 80062a0:	2d01      	cmp	r5, #1
 80062a2:	6206      	str	r6, [r0, #32]
 80062a4:	d1f5      	bne.n	8006292 <chSemResetI+0x12>
 80062a6:	bd70      	pop	{r4, r5, r6, pc}
	...

080062b0 <chThdDequeueAllI>:
 80062b0:	b538      	push	{r3, r4, r5, lr}
 80062b2:	6803      	ldr	r3, [r0, #0]
 80062b4:	4298      	cmp	r0, r3
 80062b6:	d00b      	beq.n	80062d0 <chThdDequeueAllI+0x20>
 80062b8:	4604      	mov	r4, r0
 80062ba:	460d      	mov	r5, r1
 80062bc:	681a      	ldr	r2, [r3, #0]
 80062be:	4618      	mov	r0, r3
 80062c0:	6022      	str	r2, [r4, #0]
 80062c2:	6054      	str	r4, [r2, #4]
 80062c4:	621d      	str	r5, [r3, #32]
 80062c6:	f7ff fe43 	bl	8005f50 <chSchReadyI>
 80062ca:	6823      	ldr	r3, [r4, #0]
 80062cc:	429c      	cmp	r4, r3
 80062ce:	d1f5      	bne.n	80062bc <chThdDequeueAllI+0xc>
 80062d0:	bd38      	pop	{r3, r4, r5, pc}
 80062d2:	bf00      	nop
	...

080062e0 <chVTDoResetI>:
 80062e0:	4b1c      	ldr	r3, [pc, #112]	; (8006354 <chVTDoResetI+0x74>)
 80062e2:	b470      	push	{r4, r5, r6}
 80062e4:	69da      	ldr	r2, [r3, #28]
 80062e6:	4282      	cmp	r2, r0
 80062e8:	d00f      	beq.n	800630a <chVTDoResetI+0x2a>
 80062ea:	e9d0 2100 	ldrd	r2, r1, [r0]
 80062ee:	2400      	movs	r4, #0
 80062f0:	600a      	str	r2, [r1, #0]
 80062f2:	6802      	ldr	r2, [r0, #0]
 80062f4:	331c      	adds	r3, #28
 80062f6:	429a      	cmp	r2, r3
 80062f8:	6051      	str	r1, [r2, #4]
 80062fa:	60c4      	str	r4, [r0, #12]
 80062fc:	d003      	beq.n	8006306 <chVTDoResetI+0x26>
 80062fe:	8901      	ldrh	r1, [r0, #8]
 8006300:	8913      	ldrh	r3, [r2, #8]
 8006302:	440b      	add	r3, r1
 8006304:	8113      	strh	r3, [r2, #8]
 8006306:	bc70      	pop	{r4, r5, r6}
 8006308:	4770      	bx	lr
 800630a:	4618      	mov	r0, r3
 800630c:	2400      	movs	r4, #0
 800630e:	6811      	ldr	r1, [r2, #0]
 8006310:	f840 1f1c 	str.w	r1, [r0, #28]!
 8006314:	4281      	cmp	r1, r0
 8006316:	6048      	str	r0, [r1, #4]
 8006318:	60d4      	str	r4, [r2, #12]
 800631a:	d017      	beq.n	800634c <chVTDoResetI+0x6c>
 800631c:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8006320:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8006322:	8916      	ldrh	r6, [r2, #8]
 8006324:	8cdd      	ldrh	r5, [r3, #38]	; 0x26
 8006326:	890b      	ldrh	r3, [r1, #8]
 8006328:	b282      	uxth	r2, r0
 800632a:	4433      	add	r3, r6
 800632c:	1b50      	subs	r0, r2, r5
 800632e:	b29b      	uxth	r3, r3
 8006330:	b280      	uxth	r0, r0
 8006332:	4283      	cmp	r3, r0
 8006334:	810b      	strh	r3, [r1, #8]
 8006336:	d9e6      	bls.n	8006306 <chVTDoResetI+0x26>
 8006338:	1a1b      	subs	r3, r3, r0
 800633a:	b29b      	uxth	r3, r3
 800633c:	2b02      	cmp	r3, #2
 800633e:	bf2c      	ite	cs
 8006340:	18d3      	addcs	r3, r2, r3
 8006342:	1c93      	addcc	r3, r2, #2
 8006344:	b29b      	uxth	r3, r3
 8006346:	6363      	str	r3, [r4, #52]	; 0x34
 8006348:	bc70      	pop	{r4, r5, r6}
 800634a:	4770      	bx	lr
 800634c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8006350:	60dc      	str	r4, [r3, #12]
 8006352:	e7d8      	b.n	8006306 <chVTDoResetI+0x26>
 8006354:	20002158 	.word	0x20002158
	...

08006360 <chVTDoSetI>:
 8006360:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006362:	4e1e      	ldr	r6, [pc, #120]	; (80063dc <chVTDoSetI+0x7c>)
 8006364:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 8006368:	46b6      	mov	lr, r6
 800636a:	2902      	cmp	r1, #2
 800636c:	bf38      	it	cc
 800636e:	2102      	movcc	r1, #2
 8006370:	6a7d      	ldr	r5, [r7, #36]	; 0x24
 8006372:	f85e 4f1c 	ldr.w	r4, [lr, #28]!
 8006376:	fa1f fc85 	uxth.w	ip, r5
 800637a:	eb01 050c 	add.w	r5, r1, ip
 800637e:	4574      	cmp	r4, lr
 8006380:	6103      	str	r3, [r0, #16]
 8006382:	60c2      	str	r2, [r0, #12]
 8006384:	b2ad      	uxth	r5, r5
 8006386:	d01b      	beq.n	80063c0 <chVTDoSetI+0x60>
 8006388:	8cf3      	ldrh	r3, [r6, #38]	; 0x26
 800638a:	8922      	ldrh	r2, [r4, #8]
 800638c:	1aeb      	subs	r3, r5, r3
 800638e:	b29b      	uxth	r3, r3
 8006390:	429a      	cmp	r2, r3
 8006392:	d904      	bls.n	800639e <chVTDoSetI+0x3e>
 8006394:	e012      	b.n	80063bc <chVTDoSetI+0x5c>
 8006396:	6824      	ldr	r4, [r4, #0]
 8006398:	1a9b      	subs	r3, r3, r2
 800639a:	8922      	ldrh	r2, [r4, #8]
 800639c:	b29b      	uxth	r3, r3
 800639e:	429a      	cmp	r2, r3
 80063a0:	d3f9      	bcc.n	8006396 <chVTDoSetI+0x36>
 80063a2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80063a6:	6862      	ldr	r2, [r4, #4]
 80063a8:	e9c0 4200 	strd	r4, r2, [r0]
 80063ac:	6010      	str	r0, [r2, #0]
 80063ae:	6060      	str	r0, [r4, #4]
 80063b0:	8103      	strh	r3, [r0, #8]
 80063b2:	8922      	ldrh	r2, [r4, #8]
 80063b4:	1ad3      	subs	r3, r2, r3
 80063b6:	8123      	strh	r3, [r4, #8]
 80063b8:	84b1      	strh	r1, [r6, #36]	; 0x24
 80063ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80063bc:	637d      	str	r5, [r7, #52]	; 0x34
 80063be:	e7ee      	b.n	800639e <chVTDoSetI+0x3e>
 80063c0:	2200      	movs	r2, #0
 80063c2:	2302      	movs	r3, #2
 80063c4:	f8a6 c026 	strh.w	ip, [r6, #38]	; 0x26
 80063c8:	e9c6 0007 	strd	r0, r0, [r6, #28]
 80063cc:	e9c0 4400 	strd	r4, r4, [r0]
 80063d0:	8101      	strh	r1, [r0, #8]
 80063d2:	637d      	str	r5, [r7, #52]	; 0x34
 80063d4:	613a      	str	r2, [r7, #16]
 80063d6:	60fb      	str	r3, [r7, #12]
 80063d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80063da:	bf00      	nop
 80063dc:	20002158 	.word	0x20002158

080063e0 <test_start_timer.constprop.3>:
 80063e0:	2100      	movs	r1, #0
 80063e2:	4a0b      	ldr	r2, [pc, #44]	; (8006410 <test_start_timer.constprop.3+0x30>)
 80063e4:	b508      	push	{r3, lr}
 80063e6:	2320      	movs	r3, #32
 80063e8:	7011      	strb	r1, [r2, #0]
 80063ea:	f383 8811 	msr	BASEPRI, r3
 80063ee:	4809      	ldr	r0, [pc, #36]	; (8006414 <test_start_timer.constprop.3+0x34>)
 80063f0:	68c3      	ldr	r3, [r0, #12]
 80063f2:	b10b      	cbz	r3, 80063f8 <test_start_timer.constprop.3+0x18>
 80063f4:	f7ff ff74 	bl	80062e0 <chVTDoResetI>
 80063f8:	2300      	movs	r3, #0
 80063fa:	4a07      	ldr	r2, [pc, #28]	; (8006418 <test_start_timer.constprop.3+0x38>)
 80063fc:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8006400:	4804      	ldr	r0, [pc, #16]	; (8006414 <test_start_timer.constprop.3+0x34>)
 8006402:	f7ff ffad 	bl	8006360 <chVTDoSetI>
 8006406:	2300      	movs	r3, #0
 8006408:	f383 8811 	msr	BASEPRI, r3
 800640c:	bd08      	pop	{r3, pc}
 800640e:	bf00      	nop
 8006410:	20002a40 	.word	0x20002a40
 8006414:	20002a6c 	.word	0x20002a6c
 8006418:	08005291 	.word	0x08005291
 800641c:	00000000 	.word	0x00000000

08006420 <chSysGetStatusAndLockX>:
 8006420:	f3ef 8012 	mrs	r0, BASEPRI_MAX
 8006424:	b920      	cbnz	r0, 8006430 <chSysGetStatusAndLockX+0x10>
 8006426:	f3ef 8305 	mrs	r3, IPSR
 800642a:	2320      	movs	r3, #32
 800642c:	f383 8811 	msr	BASEPRI, r3
 8006430:	4770      	bx	lr
 8006432:	bf00      	nop
	...

08006440 <chSysIntegrityCheckI>:
 8006440:	07c2      	lsls	r2, r0, #31
 8006442:	b410      	push	{r4}
 8006444:	d510      	bpl.n	8006468 <chSysIntegrityCheckI+0x28>
 8006446:	4b26      	ldr	r3, [pc, #152]	; (80064e0 <chSysIntegrityCheckI+0xa0>)
 8006448:	e9d3 1400 	ldrd	r1, r4, [r3]
 800644c:	4299      	cmp	r1, r3
 800644e:	d03b      	beq.n	80064c8 <chSysIntegrityCheckI+0x88>
 8006450:	2200      	movs	r2, #0
 8006452:	6809      	ldr	r1, [r1, #0]
 8006454:	3201      	adds	r2, #1
 8006456:	4299      	cmp	r1, r3
 8006458:	d1fb      	bne.n	8006452 <chSysIntegrityCheckI+0x12>
 800645a:	428c      	cmp	r4, r1
 800645c:	d031      	beq.n	80064c2 <chSysIntegrityCheckI+0x82>
 800645e:	6864      	ldr	r4, [r4, #4]
 8006460:	3a01      	subs	r2, #1
 8006462:	429c      	cmp	r4, r3
 8006464:	d1fb      	bne.n	800645e <chSysIntegrityCheckI+0x1e>
 8006466:	bb62      	cbnz	r2, 80064c2 <chSysIntegrityCheckI+0x82>
 8006468:	0783      	lsls	r3, r0, #30
 800646a:	d512      	bpl.n	8006492 <chSysIntegrityCheckI+0x52>
 800646c:	4b1c      	ldr	r3, [pc, #112]	; (80064e0 <chSysIntegrityCheckI+0xa0>)
 800646e:	69da      	ldr	r2, [r3, #28]
 8006470:	f103 041c 	add.w	r4, r3, #28
 8006474:	42a2      	cmp	r2, r4
 8006476:	6a19      	ldr	r1, [r3, #32]
 8006478:	d02a      	beq.n	80064d0 <chSysIntegrityCheckI+0x90>
 800647a:	2300      	movs	r3, #0
 800647c:	6812      	ldr	r2, [r2, #0]
 800647e:	3301      	adds	r3, #1
 8006480:	42a2      	cmp	r2, r4
 8006482:	d1fb      	bne.n	800647c <chSysIntegrityCheckI+0x3c>
 8006484:	4291      	cmp	r1, r2
 8006486:	d01c      	beq.n	80064c2 <chSysIntegrityCheckI+0x82>
 8006488:	6849      	ldr	r1, [r1, #4]
 800648a:	3b01      	subs	r3, #1
 800648c:	42a1      	cmp	r1, r4
 800648e:	d1fb      	bne.n	8006488 <chSysIntegrityCheckI+0x48>
 8006490:	b9bb      	cbnz	r3, 80064c2 <chSysIntegrityCheckI+0x82>
 8006492:	f010 0004 	ands.w	r0, r0, #4
 8006496:	d012      	beq.n	80064be <chSysIntegrityCheckI+0x7e>
 8006498:	4b11      	ldr	r3, [pc, #68]	; (80064e0 <chSysIntegrityCheckI+0xa0>)
 800649a:	2000      	movs	r0, #0
 800649c:	e9d3 2104 	ldrd	r2, r1, [r3, #16]
 80064a0:	429a      	cmp	r2, r3
 80064a2:	d019      	beq.n	80064d8 <chSysIntegrityCheckI+0x98>
 80064a4:	6912      	ldr	r2, [r2, #16]
 80064a6:	3001      	adds	r0, #1
 80064a8:	429a      	cmp	r2, r3
 80064aa:	d1fb      	bne.n	80064a4 <chSysIntegrityCheckI+0x64>
 80064ac:	4291      	cmp	r1, r2
 80064ae:	d008      	beq.n	80064c2 <chSysIntegrityCheckI+0x82>
 80064b0:	6949      	ldr	r1, [r1, #20]
 80064b2:	3801      	subs	r0, #1
 80064b4:	4299      	cmp	r1, r3
 80064b6:	d1fb      	bne.n	80064b0 <chSysIntegrityCheckI+0x70>
 80064b8:	3000      	adds	r0, #0
 80064ba:	bf18      	it	ne
 80064bc:	2001      	movne	r0, #1
 80064be:	bc10      	pop	{r4}
 80064c0:	4770      	bx	lr
 80064c2:	2001      	movs	r0, #1
 80064c4:	bc10      	pop	{r4}
 80064c6:	4770      	bx	lr
 80064c8:	429c      	cmp	r4, r3
 80064ca:	d0cd      	beq.n	8006468 <chSysIntegrityCheckI+0x28>
 80064cc:	2200      	movs	r2, #0
 80064ce:	e7c6      	b.n	800645e <chSysIntegrityCheckI+0x1e>
 80064d0:	42a1      	cmp	r1, r4
 80064d2:	d0de      	beq.n	8006492 <chSysIntegrityCheckI+0x52>
 80064d4:	2300      	movs	r3, #0
 80064d6:	e7d7      	b.n	8006488 <chSysIntegrityCheckI+0x48>
 80064d8:	4291      	cmp	r1, r2
 80064da:	d1e9      	bne.n	80064b0 <chSysIntegrityCheckI+0x70>
 80064dc:	e7ef      	b.n	80064be <chSysIntegrityCheckI+0x7e>
 80064de:	bf00      	nop
 80064e0:	20002158 	.word	0x20002158
	...

080064f0 <sys3_execute>:
 80064f0:	b538      	push	{r3, r4, r5, lr}
 80064f2:	2420      	movs	r4, #32
 80064f4:	f384 8811 	msr	BASEPRI, r4
 80064f8:	2001      	movs	r0, #1
 80064fa:	f7ff ffa1 	bl	8006440 <chSysIntegrityCheckI>
 80064fe:	2300      	movs	r3, #0
 8006500:	f383 8811 	msr	BASEPRI, r3
 8006504:	f080 0101 	eor.w	r1, r0, #1
 8006508:	b2c9      	uxtb	r1, r1
 800650a:	2001      	movs	r0, #1
 800650c:	f7ff f928 	bl	8005760 <_test_assert>
 8006510:	b100      	cbz	r0, 8006514 <sys3_execute+0x24>
 8006512:	bd38      	pop	{r3, r4, r5, pc}
 8006514:	4605      	mov	r5, r0
 8006516:	f384 8811 	msr	BASEPRI, r4
 800651a:	2002      	movs	r0, #2
 800651c:	f7ff ff90 	bl	8006440 <chSysIntegrityCheckI>
 8006520:	f385 8811 	msr	BASEPRI, r5
 8006524:	f080 0101 	eor.w	r1, r0, #1
 8006528:	b2c9      	uxtb	r1, r1
 800652a:	2002      	movs	r0, #2
 800652c:	f7ff f918 	bl	8005760 <_test_assert>
 8006530:	4605      	mov	r5, r0
 8006532:	2800      	cmp	r0, #0
 8006534:	d1ed      	bne.n	8006512 <sys3_execute+0x22>
 8006536:	f384 8811 	msr	BASEPRI, r4
 800653a:	2004      	movs	r0, #4
 800653c:	f7ff ff80 	bl	8006440 <chSysIntegrityCheckI>
 8006540:	f385 8811 	msr	BASEPRI, r5
 8006544:	f080 0101 	eor.w	r1, r0, #1
 8006548:	b2c9      	uxtb	r1, r1
 800654a:	2003      	movs	r0, #3
 800654c:	f7ff f908 	bl	8005760 <_test_assert>
 8006550:	4605      	mov	r5, r0
 8006552:	2800      	cmp	r0, #0
 8006554:	d1dd      	bne.n	8006512 <sys3_execute+0x22>
 8006556:	f384 8811 	msr	BASEPRI, r4
 800655a:	2008      	movs	r0, #8
 800655c:	f7ff ff70 	bl	8006440 <chSysIntegrityCheckI>
 8006560:	f385 8811 	msr	BASEPRI, r5
 8006564:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006568:	f080 0101 	eor.w	r1, r0, #1
 800656c:	b2c9      	uxtb	r1, r1
 800656e:	2004      	movs	r0, #4
 8006570:	f7ff b8f6 	b.w	8005760 <_test_assert>
	...

08006580 <BusFault_Handler>:
 8006580:	b672      	cpsid	i
 8006582:	4b02      	ldr	r3, [pc, #8]	; (800658c <BusFault_Handler+0xc>)
 8006584:	4a02      	ldr	r2, [pc, #8]	; (8006590 <BusFault_Handler+0x10>)
 8006586:	629a      	str	r2, [r3, #40]	; 0x28
 8006588:	e7fe      	b.n	8006588 <BusFault_Handler+0x8>
 800658a:	bf00      	nop
 800658c:	20002158 	.word	0x20002158
 8006590:	0800c5b0 	.word	0x0800c5b0
	...

080065a0 <_strtok.constprop.2>:
 80065a0:	b538      	push	{r3, r4, r5, lr}
 80065a2:	460d      	mov	r5, r1
 80065a4:	b198      	cbz	r0, 80065ce <_strtok.constprop.2+0x2e>
 80065a6:	4604      	mov	r4, r0
 80065a8:	6028      	str	r0, [r5, #0]
 80065aa:	490d      	ldr	r1, [pc, #52]	; (80065e0 <_strtok.constprop.2+0x40>)
 80065ac:	4620      	mov	r0, r4
 80065ae:	f005 feef 	bl	800c390 <strspn>
 80065b2:	4404      	add	r4, r0
 80065b4:	4620      	mov	r0, r4
 80065b6:	490a      	ldr	r1, [pc, #40]	; (80065e0 <_strtok.constprop.2+0x40>)
 80065b8:	f005 fec2 	bl	800c340 <strpbrk>
 80065bc:	b168      	cbz	r0, 80065da <_strtok.constprop.2+0x3a>
 80065be:	2300      	movs	r3, #0
 80065c0:	1c42      	adds	r2, r0, #1
 80065c2:	602a      	str	r2, [r5, #0]
 80065c4:	7003      	strb	r3, [r0, #0]
 80065c6:	7823      	ldrb	r3, [r4, #0]
 80065c8:	b123      	cbz	r3, 80065d4 <_strtok.constprop.2+0x34>
 80065ca:	4620      	mov	r0, r4
 80065cc:	bd38      	pop	{r3, r4, r5, pc}
 80065ce:	680c      	ldr	r4, [r1, #0]
 80065d0:	2c00      	cmp	r4, #0
 80065d2:	d1ea      	bne.n	80065aa <_strtok.constprop.2+0xa>
 80065d4:	2400      	movs	r4, #0
 80065d6:	4620      	mov	r0, r4
 80065d8:	bd38      	pop	{r3, r4, r5, pc}
 80065da:	6028      	str	r0, [r5, #0]
 80065dc:	e7f3      	b.n	80065c6 <_strtok.constprop.2+0x26>
 80065de:	bf00      	nop
 80065e0:	0800c5a0 	.word	0x0800c5a0
	...

080065f0 <chprintf.lto_priv.72>:
 80065f0:	b40e      	push	{r1, r2, r3}
 80065f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80065f6:	4604      	mov	r4, r0
 80065f8:	f04f 0800 	mov.w	r8, #0
 80065fc:	b086      	sub	sp, #24
 80065fe:	af0f      	add	r7, sp, #60	; 0x3c
 8006600:	f857 6b04 	ldr.w	r6, [r7], #4
 8006604:	9702      	str	r7, [sp, #8]
 8006606:	7831      	ldrb	r1, [r6, #0]
 8006608:	1c72      	adds	r2, r6, #1
 800660a:	b161      	cbz	r1, 8006626 <chprintf.lto_priv.72+0x36>
 800660c:	2925      	cmp	r1, #37	; 0x25
 800660e:	d010      	beq.n	8006632 <chprintf.lto_priv.72+0x42>
 8006610:	4616      	mov	r6, r2
 8006612:	6823      	ldr	r3, [r4, #0]
 8006614:	4620      	mov	r0, r4
 8006616:	689b      	ldr	r3, [r3, #8]
 8006618:	4798      	blx	r3
 800661a:	7831      	ldrb	r1, [r6, #0]
 800661c:	f108 0801 	add.w	r8, r8, #1
 8006620:	1c72      	adds	r2, r6, #1
 8006622:	2900      	cmp	r1, #0
 8006624:	d1f2      	bne.n	800660c <chprintf.lto_priv.72+0x1c>
 8006626:	4640      	mov	r0, r8
 8006628:	b006      	add	sp, #24
 800662a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800662e:	b003      	add	sp, #12
 8006630:	4770      	bx	lr
 8006632:	7871      	ldrb	r1, [r6, #1]
 8006634:	f04f 0900 	mov.w	r9, #0
 8006638:	292d      	cmp	r1, #45	; 0x2d
 800663a:	bf03      	ittte	eq
 800663c:	78b1      	ldrbeq	r1, [r6, #2]
 800663e:	1cb2      	addeq	r2, r6, #2
 8006640:	2001      	moveq	r0, #1
 8006642:	2000      	movne	r0, #0
 8006644:	2930      	cmp	r1, #48	; 0x30
 8006646:	bf03      	ittte	eq
 8006648:	7851      	ldrbeq	r1, [r2, #1]
 800664a:	3201      	addeq	r2, #1
 800664c:	2530      	moveq	r5, #48	; 0x30
 800664e:	2520      	movne	r5, #32
 8006650:	3201      	adds	r2, #1
 8006652:	e005      	b.n	8006660 <chprintf.lto_priv.72+0x70>
 8006654:	783b      	ldrb	r3, [r7, #0]
 8006656:	3704      	adds	r7, #4
 8006658:	f812 1b01 	ldrb.w	r1, [r2], #1
 800665c:	eb03 0946 	add.w	r9, r3, r6, lsl #1
 8006660:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8006664:	b2db      	uxtb	r3, r3
 8006666:	2b09      	cmp	r3, #9
 8006668:	4694      	mov	ip, r2
 800666a:	eb09 0689 	add.w	r6, r9, r9, lsl #2
 800666e:	d9f3      	bls.n	8006658 <chprintf.lto_priv.72+0x68>
 8006670:	292a      	cmp	r1, #42	; 0x2a
 8006672:	d0ef      	beq.n	8006654 <chprintf.lto_priv.72+0x64>
 8006674:	292e      	cmp	r1, #46	; 0x2e
 8006676:	f04f 0200 	mov.w	r2, #0
 800667a:	d048      	beq.n	800670e <chprintf.lto_priv.72+0x11e>
 800667c:	f001 03df 	and.w	r3, r1, #223	; 0xdf
 8006680:	2b4c      	cmp	r3, #76	; 0x4c
 8006682:	f10c 0601 	add.w	r6, ip, #1
 8006686:	d04e      	beq.n	8006726 <chprintf.lto_priv.72+0x136>
 8006688:	f1a1 0341 	sub.w	r3, r1, #65	; 0x41
 800668c:	f1a1 0644 	sub.w	r6, r1, #68	; 0x44
 8006690:	b2db      	uxtb	r3, r3
 8006692:	2e34      	cmp	r6, #52	; 0x34
 8006694:	f200 811f 	bhi.w	80068d6 <chprintf.lto_priv.72+0x2e6>
 8006698:	e8df f016 	tbh	[pc, r6, lsl #1]
 800669c:	011d016f 	.word	0x011d016f
 80066a0:	011d011d 	.word	0x011d011d
 80066a4:	016f011d 	.word	0x016f011d
 80066a8:	011d011d 	.word	0x011d011d
 80066ac:	011d011d 	.word	0x011d011d
 80066b0:	0119011d 	.word	0x0119011d
 80066b4:	011d011d 	.word	0x011d011d
 80066b8:	011d011d 	.word	0x011d011d
 80066bc:	00e7011d 	.word	0x00e7011d
 80066c0:	011d011d 	.word	0x011d011d
 80066c4:	011d0178 	.word	0x011d0178
 80066c8:	011d011d 	.word	0x011d011d
 80066cc:	011d011d 	.word	0x011d011d
 80066d0:	011d011d 	.word	0x011d011d
 80066d4:	011d011d 	.word	0x011d011d
 80066d8:	008f011d 	.word	0x008f011d
 80066dc:	011d016f 	.word	0x011d016f
 80066e0:	011d011d 	.word	0x011d011d
 80066e4:	016f011d 	.word	0x016f011d
 80066e8:	011d011d 	.word	0x011d011d
 80066ec:	011d011d 	.word	0x011d011d
 80066f0:	0119011d 	.word	0x0119011d
 80066f4:	011d011d 	.word	0x011d011d
 80066f8:	006d011d 	.word	0x006d011d
 80066fc:	00e7011d 	.word	0x00e7011d
 8006700:	011d011d 	.word	0x011d011d
 8006704:	0178      	.short	0x0178
 8006706:	783b      	ldrb	r3, [r7, #0]
 8006708:	3704      	adds	r7, #4
 800670a:	eb03 0246 	add.w	r2, r3, r6, lsl #1
 800670e:	f81c 1b01 	ldrb.w	r1, [ip], #1
 8006712:	eb02 0682 	add.w	r6, r2, r2, lsl #2
 8006716:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800671a:	b2db      	uxtb	r3, r3
 800671c:	2b09      	cmp	r3, #9
 800671e:	d9f4      	bls.n	800670a <chprintf.lto_priv.72+0x11a>
 8006720:	292a      	cmp	r1, #42	; 0x2a
 8006722:	d0f0      	beq.n	8006706 <chprintf.lto_priv.72+0x116>
 8006724:	e7aa      	b.n	800667c <chprintf.lto_priv.72+0x8c>
 8006726:	f89c 3000 	ldrb.w	r3, [ip]
 800672a:	b30b      	cbz	r3, 8006770 <chprintf.lto_priv.72+0x180>
 800672c:	f1a3 0144 	sub.w	r1, r3, #68	; 0x44
 8006730:	2934      	cmp	r1, #52	; 0x34
 8006732:	f200 80d2 	bhi.w	80068da <chprintf.lto_priv.72+0x2ea>
 8006736:	e8df f001 	tbb	[pc, r1]
 800673a:	d0e1      	.short	0xd0e1
 800673c:	e1d0d0d0 	.word	0xe1d0d0d0
 8006740:	d0d0d0d0 	.word	0xd0d0d0d0
 8006744:	d0d0cbd0 	.word	0xd0d0cbd0
 8006748:	99d0d0d0 	.word	0x99d0d0d0
 800674c:	d0ded0d0 	.word	0xd0ded0d0
 8006750:	d0d0d0d0 	.word	0xd0d0d0d0
 8006754:	d0d0d0d0 	.word	0xd0d0d0d0
 8006758:	d0e141d0 	.word	0xd0e141d0
 800675c:	e1d0d0d0 	.word	0xe1d0d0d0
 8006760:	d0d0d0d0 	.word	0xd0d0d0d0
 8006764:	d0d0cbd0 	.word	0xd0d0cbd0
 8006768:	99d01fd0 	.word	0x99d01fd0
 800676c:	d0d0      	.short	0xd0d0
 800676e:	de          	.byte	0xde
 800676f:	00          	.byte	0x00
 8006770:	460b      	mov	r3, r1
 8006772:	4666      	mov	r6, ip
 8006774:	e7da      	b.n	800672c <chprintf.lto_priv.72+0x13c>
 8006776:	4666      	mov	r6, ip
 8006778:	f8d7 a000 	ldr.w	sl, [r7]
 800677c:	3704      	adds	r7, #4
 800677e:	f1ba 0f00 	cmp.w	sl, #0
 8006782:	f000 8107 	beq.w	8006994 <chprintf.lto_priv.72+0x3a4>
 8006786:	f89a 3000 	ldrb.w	r3, [sl]
 800678a:	4655      	mov	r5, sl
 800678c:	2a00      	cmp	r2, #0
 800678e:	f040 8108 	bne.w	80069a2 <chprintf.lto_priv.72+0x3b2>
 8006792:	2b00      	cmp	r3, #0
 8006794:	f000 8115 	beq.w	80069c2 <chprintf.lto_priv.72+0x3d2>
 8006798:	f647 72fe 	movw	r2, #32766	; 0x7ffe
 800679c:	4653      	mov	r3, sl
 800679e:	e001      	b.n	80067a4 <chprintf.lto_priv.72+0x1b4>
 80067a0:	3a01      	subs	r2, #1
 80067a2:	d403      	bmi.n	80067ac <chprintf.lto_priv.72+0x1bc>
 80067a4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80067a8:	2900      	cmp	r1, #0
 80067aa:	d1f9      	bne.n	80067a0 <chprintf.lto_priv.72+0x1b0>
 80067ac:	1b5b      	subs	r3, r3, r5
 80067ae:	eba9 0903 	sub.w	r9, r9, r3
 80067b2:	3b01      	subs	r3, #1
 80067b4:	9300      	str	r3, [sp, #0]
 80067b6:	2520      	movs	r5, #32
 80067b8:	e00b      	b.n	80067d2 <chprintf.lto_priv.72+0x1e2>
 80067ba:	4666      	mov	r6, ip
 80067bc:	683b      	ldr	r3, [r7, #0]
 80067be:	f10d 0a18 	add.w	sl, sp, #24
 80067c2:	f80a 3d0c 	strb.w	r3, [sl, #-12]!
 80067c6:	2300      	movs	r3, #0
 80067c8:	2520      	movs	r5, #32
 80067ca:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80067ce:	3704      	adds	r7, #4
 80067d0:	9300      	str	r3, [sp, #0]
 80067d2:	f1b9 0f00 	cmp.w	r9, #0
 80067d6:	db21      	blt.n	800681c <chprintf.lto_priv.72+0x22c>
 80067d8:	2800      	cmp	r0, #0
 80067da:	f040 8088 	bne.w	80068ee <chprintf.lto_priv.72+0x2fe>
 80067de:	f1c9 0300 	rsb	r3, r9, #0
 80067e2:	f1b9 0f00 	cmp.w	r9, #0
 80067e6:	f000 8081 	beq.w	80068ec <chprintf.lto_priv.72+0x2fc>
 80067ea:	f89a 1000 	ldrb.w	r1, [sl]
 80067ee:	6822      	ldr	r2, [r4, #0]
 80067f0:	292d      	cmp	r1, #45	; 0x2d
 80067f2:	6892      	ldr	r2, [r2, #8]
 80067f4:	f000 80af 	beq.w	8006956 <chprintf.lto_priv.72+0x366>
 80067f8:	469b      	mov	fp, r3
 80067fa:	e001      	b.n	8006800 <chprintf.lto_priv.72+0x210>
 80067fc:	6823      	ldr	r3, [r4, #0]
 80067fe:	689a      	ldr	r2, [r3, #8]
 8006800:	4629      	mov	r1, r5
 8006802:	4620      	mov	r0, r4
 8006804:	4790      	blx	r2
 8006806:	f11b 0b01 	adds.w	fp, fp, #1
 800680a:	d1f7      	bne.n	80067fc <chprintf.lto_priv.72+0x20c>
 800680c:	9a00      	ldr	r2, [sp, #0]
 800680e:	465b      	mov	r3, fp
 8006810:	2a00      	cmp	r2, #0
 8006812:	44c8      	add	r8, r9
 8006814:	f6ff aef7 	blt.w	8006606 <chprintf.lto_priv.72+0x16>
 8006818:	4699      	mov	r9, r3
 800681a:	e005      	b.n	8006828 <chprintf.lto_priv.72+0x238>
 800681c:	9b00      	ldr	r3, [sp, #0]
 800681e:	2b00      	cmp	r3, #0
 8006820:	f6ff aef1 	blt.w	8006606 <chprintf.lto_priv.72+0x16>
 8006824:	f04f 0900 	mov.w	r9, #0
 8006828:	f8dd b000 	ldr.w	fp, [sp]
 800682c:	6823      	ldr	r3, [r4, #0]
 800682e:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8006832:	689b      	ldr	r3, [r3, #8]
 8006834:	f81a 1b01 	ldrb.w	r1, [sl], #1
 8006838:	4620      	mov	r0, r4
 800683a:	4798      	blx	r3
 800683c:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
 8006840:	d1f4      	bne.n	800682c <chprintf.lto_priv.72+0x23c>
 8006842:	9b00      	ldr	r3, [sp, #0]
 8006844:	f108 0801 	add.w	r8, r8, #1
 8006848:	4443      	add	r3, r8
 800684a:	4698      	mov	r8, r3
 800684c:	f1b9 0f00 	cmp.w	r9, #0
 8006850:	f43f aed9 	beq.w	8006606 <chprintf.lto_priv.72+0x16>
 8006854:	46ca      	mov	sl, r9
 8006856:	6823      	ldr	r3, [r4, #0]
 8006858:	4629      	mov	r1, r5
 800685a:	689b      	ldr	r3, [r3, #8]
 800685c:	4620      	mov	r0, r4
 800685e:	4798      	blx	r3
 8006860:	f1ba 0a01 	subs.w	sl, sl, #1
 8006864:	d1f7      	bne.n	8006856 <chprintf.lto_priv.72+0x266>
 8006866:	44c8      	add	r8, r9
 8006868:	e6cd      	b.n	8006606 <chprintf.lto_priv.72+0x16>
 800686a:	4666      	mov	r6, ip
 800686c:	f04f 0e0a 	mov.w	lr, #10
 8006870:	f857 2b04 	ldr.w	r2, [r7], #4
 8006874:	f10d 0117 	add.w	r1, sp, #23
 8006878:	e000      	b.n	800687c <chprintf.lto_priv.72+0x28c>
 800687a:	4659      	mov	r1, fp
 800687c:	fbb2 fcfe 	udiv	ip, r2, lr
 8006880:	fb0e 221c 	mls	r2, lr, ip, r2
 8006884:	f102 0330 	add.w	r3, r2, #48	; 0x30
 8006888:	2b39      	cmp	r3, #57	; 0x39
 800688a:	bfc8      	it	gt
 800688c:	f102 0337 	addgt.w	r3, r2, #55	; 0x37
 8006890:	4662      	mov	r2, ip
 8006892:	b2db      	uxtb	r3, r3
 8006894:	f801 3c01 	strb.w	r3, [r1, #-1]
 8006898:	f101 3bff 	add.w	fp, r1, #4294967295	; 0xffffffff
 800689c:	2a00      	cmp	r2, #0
 800689e:	d1ec      	bne.n	800687a <chprintf.lto_priv.72+0x28a>
 80068a0:	460a      	mov	r2, r1
 80068a2:	f10d 0117 	add.w	r1, sp, #23
 80068a6:	f10d 0a0c 	add.w	sl, sp, #12
 80068aa:	eba1 0e0b 	sub.w	lr, r1, fp
 80068ae:	46d4      	mov	ip, sl
 80068b0:	eb0b 010e 	add.w	r1, fp, lr
 80068b4:	e001      	b.n	80068ba <chprintf.lto_priv.72+0x2ca>
 80068b6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80068ba:	428a      	cmp	r2, r1
 80068bc:	f80c 3b01 	strb.w	r3, [ip], #1
 80068c0:	d1f9      	bne.n	80068b6 <chprintf.lto_priv.72+0x2c6>
 80068c2:	f10e 33ff 	add.w	r3, lr, #4294967295	; 0xffffffff
 80068c6:	eba9 090e 	sub.w	r9, r9, lr
 80068ca:	9300      	str	r3, [sp, #0]
 80068cc:	e781      	b.n	80067d2 <chprintf.lto_priv.72+0x1e2>
 80068ce:	4666      	mov	r6, ip
 80068d0:	f04f 0e08 	mov.w	lr, #8
 80068d4:	e7cc      	b.n	8006870 <chprintf.lto_priv.72+0x280>
 80068d6:	4666      	mov	r6, ip
 80068d8:	460b      	mov	r3, r1
 80068da:	2200      	movs	r2, #0
 80068dc:	f10d 0a18 	add.w	sl, sp, #24
 80068e0:	9200      	str	r2, [sp, #0]
 80068e2:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80068e6:	f80a 3d0c 	strb.w	r3, [sl, #-12]!
 80068ea:	e772      	b.n	80067d2 <chprintf.lto_priv.72+0x1e2>
 80068ec:	4699      	mov	r9, r3
 80068ee:	9b00      	ldr	r3, [sp, #0]
 80068f0:	2b00      	cmp	r3, #0
 80068f2:	da99      	bge.n	8006828 <chprintf.lto_priv.72+0x238>
 80068f4:	e7aa      	b.n	800684c <chprintf.lto_priv.72+0x25c>
 80068f6:	f04f 0e10 	mov.w	lr, #16
 80068fa:	e7b9      	b.n	8006870 <chprintf.lto_priv.72+0x280>
 80068fc:	1d39      	adds	r1, r7, #4
 80068fe:	683a      	ldr	r2, [r7, #0]
 8006900:	460f      	mov	r7, r1
 8006902:	2a00      	cmp	r2, #0
 8006904:	db54      	blt.n	80069b0 <chprintf.lto_priv.72+0x3c0>
 8006906:	f10d 0a0c 	add.w	sl, sp, #12
 800690a:	46d6      	mov	lr, sl
 800690c:	f10e 0b0b 	add.w	fp, lr, #11
 8006910:	4659      	mov	r1, fp
 8006912:	4b2e      	ldr	r3, [pc, #184]	; (80069cc <chprintf.lto_priv.72+0x3dc>)
 8006914:	fba3 c302 	umull	ip, r3, r3, r2
 8006918:	08db      	lsrs	r3, r3, #3
 800691a:	469c      	mov	ip, r3
 800691c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8006920:	eba2 0343 	sub.w	r3, r2, r3, lsl #1
 8006924:	4662      	mov	r2, ip
 8006926:	3330      	adds	r3, #48	; 0x30
 8006928:	b2db      	uxtb	r3, r3
 800692a:	f801 3d01 	strb.w	r3, [r1, #-1]!
 800692e:	2a00      	cmp	r2, #0
 8006930:	d1ef      	bne.n	8006912 <chprintf.lto_priv.72+0x322>
 8006932:	ebab 0201 	sub.w	r2, fp, r1
 8006936:	4472      	add	r2, lr
 8006938:	e001      	b.n	800693e <chprintf.lto_priv.72+0x34e>
 800693a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800693e:	f80e 3b01 	strb.w	r3, [lr], #1
 8006942:	4596      	cmp	lr, r2
 8006944:	d1f9      	bne.n	800693a <chprintf.lto_priv.72+0x34a>
 8006946:	ebae 0e0a 	sub.w	lr, lr, sl
 800694a:	f10e 33ff 	add.w	r3, lr, #4294967295	; 0xffffffff
 800694e:	eba9 090e 	sub.w	r9, r9, lr
 8006952:	9300      	str	r3, [sp, #0]
 8006954:	e73d      	b.n	80067d2 <chprintf.lto_priv.72+0x1e2>
 8006956:	2d30      	cmp	r5, #48	; 0x30
 8006958:	f47f af4e 	bne.w	80067f8 <chprintf.lto_priv.72+0x208>
 800695c:	4620      	mov	r0, r4
 800695e:	9301      	str	r3, [sp, #4]
 8006960:	4790      	blx	r2
 8006962:	9b00      	ldr	r3, [sp, #0]
 8006964:	6822      	ldr	r2, [r4, #0]
 8006966:	3b01      	subs	r3, #1
 8006968:	9300      	str	r3, [sp, #0]
 800696a:	9b01      	ldr	r3, [sp, #4]
 800696c:	f108 0801 	add.w	r8, r8, #1
 8006970:	6892      	ldr	r2, [r2, #8]
 8006972:	f10a 0a01 	add.w	sl, sl, #1
 8006976:	469b      	mov	fp, r3
 8006978:	e742      	b.n	8006800 <chprintf.lto_priv.72+0x210>
 800697a:	4639      	mov	r1, r7
 800697c:	f851 2b04 	ldr.w	r2, [r1], #4
 8006980:	2b19      	cmp	r3, #25
 8006982:	4666      	mov	r6, ip
 8006984:	bf88      	it	hi
 8006986:	460f      	movhi	r7, r1
 8006988:	d8bb      	bhi.n	8006902 <chprintf.lto_priv.72+0x312>
 800698a:	e7b8      	b.n	80068fe <chprintf.lto_priv.72+0x30e>
 800698c:	4666      	mov	r6, ip
 800698e:	f04f 0e10 	mov.w	lr, #16
 8006992:	e76d      	b.n	8006870 <chprintf.lto_priv.72+0x280>
 8006994:	4d0e      	ldr	r5, [pc, #56]	; (80069d0 <chprintf.lto_priv.72+0x3e0>)
 8006996:	46aa      	mov	sl, r5
 8006998:	2a00      	cmp	r2, #0
 800699a:	f43f aefd 	beq.w	8006798 <chprintf.lto_priv.72+0x1a8>
 800699e:	3a01      	subs	r2, #1
 80069a0:	e6fc      	b.n	800679c <chprintf.lto_priv.72+0x1ac>
 80069a2:	2b00      	cmp	r3, #0
 80069a4:	d1fb      	bne.n	800699e <chprintf.lto_priv.72+0x3ae>
 80069a6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80069aa:	2520      	movs	r5, #32
 80069ac:	9300      	str	r3, [sp, #0]
 80069ae:	e710      	b.n	80067d2 <chprintf.lto_priv.72+0x1e2>
 80069b0:	232d      	movs	r3, #45	; 0x2d
 80069b2:	4252      	negs	r2, r2
 80069b4:	f88d 300c 	strb.w	r3, [sp, #12]
 80069b8:	f10d 0e0d 	add.w	lr, sp, #13
 80069bc:	f10d 0a0c 	add.w	sl, sp, #12
 80069c0:	e7a4      	b.n	800690c <chprintf.lto_priv.72+0x31c>
 80069c2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80069c6:	2520      	movs	r5, #32
 80069c8:	9300      	str	r3, [sp, #0]
 80069ca:	e705      	b.n	80067d8 <chprintf.lto_priv.72+0x1e8>
 80069cc:	cccccccd 	.word	0xcccccccd
 80069d0:	0800c750 	.word	0x0800c750
	...

080069e0 <cmd_write>:
 80069e0:	2900      	cmp	r1, #0
 80069e2:	dc18      	bgt.n	8006a16 <cmd_write+0x36>
 80069e4:	b570      	push	{r4, r5, r6, lr}
 80069e6:	4604      	mov	r4, r0
 80069e8:	4e0c      	ldr	r6, [pc, #48]	; (8006a1c <cmd_write+0x3c>)
 80069ea:	4d0d      	ldr	r5, [pc, #52]	; (8006a20 <cmd_write+0x40>)
 80069ec:	e005      	b.n	80069fa <cmd_write+0x1a>
 80069ee:	6833      	ldr	r3, [r6, #0]
 80069f0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80069f4:	681b      	ldr	r3, [r3, #0]
 80069f6:	4629      	mov	r1, r5
 80069f8:	4798      	blx	r3
 80069fa:	6823      	ldr	r3, [r4, #0]
 80069fc:	2100      	movs	r1, #0
 80069fe:	695b      	ldr	r3, [r3, #20]
 8006a00:	4620      	mov	r0, r4
 8006a02:	4798      	blx	r3
 8006a04:	3001      	adds	r0, #1
 8006a06:	4805      	ldr	r0, [pc, #20]	; (8006a1c <cmd_write+0x3c>)
 8006a08:	d0f1      	beq.n	80069ee <cmd_write+0xe>
 8006a0a:	4620      	mov	r0, r4
 8006a0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006a10:	4904      	ldr	r1, [pc, #16]	; (8006a24 <cmd_write+0x44>)
 8006a12:	f7ff bded 	b.w	80065f0 <chprintf.lto_priv.72>
 8006a16:	4904      	ldr	r1, [pc, #16]	; (8006a28 <cmd_write+0x48>)
 8006a18:	f7ff bdea 	b.w	80065f0 <chprintf.lto_priv.72>
 8006a1c:	20001e78 	.word	0x20001e78
 8006a20:	20001400 	.word	0x20001400
 8006a24:	0800ca00 	.word	0x0800ca00
 8006a28:	0800ca10 	.word	0x0800ca10
 8006a2c:	00000000 	.word	0x00000000

08006a30 <cmd_systime>:
 8006a30:	2900      	cmp	r1, #0
 8006a32:	dd03      	ble.n	8006a3c <cmd_systime+0xc>
 8006a34:	4a08      	ldr	r2, [pc, #32]	; (8006a58 <cmd_systime+0x28>)
 8006a36:	4909      	ldr	r1, [pc, #36]	; (8006a5c <cmd_systime+0x2c>)
 8006a38:	f7ff bdda 	b.w	80065f0 <chprintf.lto_priv.72>
 8006a3c:	2320      	movs	r3, #32
 8006a3e:	f383 8811 	msr	BASEPRI, r3
 8006a42:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8006a46:	2300      	movs	r3, #0
 8006a48:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8006a4a:	f383 8811 	msr	BASEPRI, r3
 8006a4e:	4904      	ldr	r1, [pc, #16]	; (8006a60 <cmd_systime+0x30>)
 8006a50:	b292      	uxth	r2, r2
 8006a52:	f7ff bdcd 	b.w	80065f0 <chprintf.lto_priv.72>
 8006a56:	bf00      	nop
 8006a58:	0800c960 	.word	0x0800c960
 8006a5c:	0800c968 	.word	0x0800c968
 8006a60:	0800c974 	.word	0x0800c974
	...

08006a70 <cmd_info>:
 8006a70:	2900      	cmp	r1, #0
 8006a72:	dd03      	ble.n	8006a7c <cmd_info+0xc>
 8006a74:	4a19      	ldr	r2, [pc, #100]	; (8006adc <cmd_info+0x6c>)
 8006a76:	491a      	ldr	r1, [pc, #104]	; (8006ae0 <cmd_info+0x70>)
 8006a78:	f7ff bdba 	b.w	80065f0 <chprintf.lto_priv.72>
 8006a7c:	b510      	push	{r4, lr}
 8006a7e:	4604      	mov	r4, r0
 8006a80:	b082      	sub	sp, #8
 8006a82:	4a18      	ldr	r2, [pc, #96]	; (8006ae4 <cmd_info+0x74>)
 8006a84:	4918      	ldr	r1, [pc, #96]	; (8006ae8 <cmd_info+0x78>)
 8006a86:	f7ff fdb3 	bl	80065f0 <chprintf.lto_priv.72>
 8006a8a:	4a18      	ldr	r2, [pc, #96]	; (8006aec <cmd_info+0x7c>)
 8006a8c:	4918      	ldr	r1, [pc, #96]	; (8006af0 <cmd_info+0x80>)
 8006a8e:	4620      	mov	r0, r4
 8006a90:	f7ff fdae 	bl	80065f0 <chprintf.lto_priv.72>
 8006a94:	4a17      	ldr	r2, [pc, #92]	; (8006af4 <cmd_info+0x84>)
 8006a96:	4918      	ldr	r1, [pc, #96]	; (8006af8 <cmd_info+0x88>)
 8006a98:	4620      	mov	r0, r4
 8006a9a:	f7ff fda9 	bl	80065f0 <chprintf.lto_priv.72>
 8006a9e:	4a17      	ldr	r2, [pc, #92]	; (8006afc <cmd_info+0x8c>)
 8006aa0:	4917      	ldr	r1, [pc, #92]	; (8006b00 <cmd_info+0x90>)
 8006aa2:	4620      	mov	r0, r4
 8006aa4:	f7ff fda4 	bl	80065f0 <chprintf.lto_priv.72>
 8006aa8:	4a16      	ldr	r2, [pc, #88]	; (8006b04 <cmd_info+0x94>)
 8006aaa:	4917      	ldr	r1, [pc, #92]	; (8006b08 <cmd_info+0x98>)
 8006aac:	4620      	mov	r0, r4
 8006aae:	f7ff fd9f 	bl	80065f0 <chprintf.lto_priv.72>
 8006ab2:	4a16      	ldr	r2, [pc, #88]	; (8006b0c <cmd_info+0x9c>)
 8006ab4:	4916      	ldr	r1, [pc, #88]	; (8006b10 <cmd_info+0xa0>)
 8006ab6:	4620      	mov	r0, r4
 8006ab8:	f7ff fd9a 	bl	80065f0 <chprintf.lto_priv.72>
 8006abc:	4a15      	ldr	r2, [pc, #84]	; (8006b14 <cmd_info+0xa4>)
 8006abe:	4916      	ldr	r1, [pc, #88]	; (8006b18 <cmd_info+0xa8>)
 8006ac0:	4620      	mov	r0, r4
 8006ac2:	f7ff fd95 	bl	80065f0 <chprintf.lto_priv.72>
 8006ac6:	4b15      	ldr	r3, [pc, #84]	; (8006b1c <cmd_info+0xac>)
 8006ac8:	4620      	mov	r0, r4
 8006aca:	9300      	str	r3, [sp, #0]
 8006acc:	4a14      	ldr	r2, [pc, #80]	; (8006b20 <cmd_info+0xb0>)
 8006ace:	4b15      	ldr	r3, [pc, #84]	; (8006b24 <cmd_info+0xb4>)
 8006ad0:	4915      	ldr	r1, [pc, #84]	; (8006b28 <cmd_info+0xb8>)
 8006ad2:	f7ff fd8d 	bl	80065f0 <chprintf.lto_priv.72>
 8006ad6:	b002      	add	sp, #8
 8006ad8:	bd10      	pop	{r4, pc}
 8006ada:	bf00      	nop
 8006adc:	0800c760 	.word	0x0800c760
 8006ae0:	0800c968 	.word	0x0800c968
 8006ae4:	0800c768 	.word	0x0800c768
 8006ae8:	0800c770 	.word	0x0800c770
 8006aec:	0800c784 	.word	0x0800c784
 8006af0:	0800c7cc 	.word	0x0800c7cc
 8006af4:	0800c7e0 	.word	0x0800c7e0
 8006af8:	0800c7e8 	.word	0x0800c7e8
 8006afc:	0800c7fc 	.word	0x0800c7fc
 8006b00:	0800c808 	.word	0x0800c808
 8006b04:	0800c81c 	.word	0x0800c81c
 8006b08:	0800c834 	.word	0x0800c834
 8006b0c:	0800c848 	.word	0x0800c848
 8006b10:	0800c874 	.word	0x0800c874
 8006b14:	0800c888 	.word	0x0800c888
 8006b18:	0800c89c 	.word	0x0800c89c
 8006b1c:	0800c8d8 	.word	0x0800c8d8
 8006b20:	0800c8b4 	.word	0x0800c8b4
 8006b24:	0800c8b0 	.word	0x0800c8b0
 8006b28:	0800c8c0 	.word	0x0800c8c0
 8006b2c:	00000000 	.word	0x00000000

08006b30 <bmk13_execute>:
 8006b30:	b510      	push	{r4, lr}
 8006b32:	482f      	ldr	r0, [pc, #188]	; (8006bf0 <bmk13_execute+0xc0>)
 8006b34:	4c2f      	ldr	r4, [pc, #188]	; (8006bf4 <bmk13_execute+0xc4>)
 8006b36:	f7fe fe83 	bl	8005840 <test_print>
 8006b3a:	f44f 70a8 	mov.w	r0, #336	; 0x150
 8006b3e:	f7fe fd57 	bl	80055f0 <test_printn.part.1>
 8006b42:	4620      	mov	r0, r4
 8006b44:	f7fe fe5c 	bl	8005800 <test_println>
 8006b48:	482b      	ldr	r0, [pc, #172]	; (8006bf8 <bmk13_execute+0xc8>)
 8006b4a:	f7fe fe79 	bl	8005840 <test_print>
 8006b4e:	2044      	movs	r0, #68	; 0x44
 8006b50:	f7fe fd4e 	bl	80055f0 <test_printn.part.1>
 8006b54:	4620      	mov	r0, r4
 8006b56:	f7fe fe53 	bl	8005800 <test_println>
 8006b5a:	4828      	ldr	r0, [pc, #160]	; (8006bfc <bmk13_execute+0xcc>)
 8006b5c:	f7fe fe70 	bl	8005840 <test_print>
 8006b60:	2014      	movs	r0, #20
 8006b62:	f7fe fd45 	bl	80055f0 <test_printn.part.1>
 8006b66:	4620      	mov	r0, r4
 8006b68:	f7fe fe4a 	bl	8005800 <test_println>
 8006b6c:	4824      	ldr	r0, [pc, #144]	; (8006c00 <bmk13_execute+0xd0>)
 8006b6e:	f7fe fe67 	bl	8005840 <test_print>
 8006b72:	200c      	movs	r0, #12
 8006b74:	f7fe fd3c 	bl	80055f0 <test_printn.part.1>
 8006b78:	4620      	mov	r0, r4
 8006b7a:	f7fe fe41 	bl	8005800 <test_println>
 8006b7e:	4821      	ldr	r0, [pc, #132]	; (8006c04 <bmk13_execute+0xd4>)
 8006b80:	f7fe fe5e 	bl	8005840 <test_print>
 8006b84:	2004      	movs	r0, #4
 8006b86:	f7fe fd33 	bl	80055f0 <test_printn.part.1>
 8006b8a:	4620      	mov	r0, r4
 8006b8c:	f7fe fe38 	bl	8005800 <test_println>
 8006b90:	481d      	ldr	r0, [pc, #116]	; (8006c08 <bmk13_execute+0xd8>)
 8006b92:	f7fe fe55 	bl	8005840 <test_print>
 8006b96:	2014      	movs	r0, #20
 8006b98:	f7fe fd2a 	bl	80055f0 <test_printn.part.1>
 8006b9c:	4620      	mov	r0, r4
 8006b9e:	f7fe fe2f 	bl	8005800 <test_println>
 8006ba2:	481a      	ldr	r0, [pc, #104]	; (8006c0c <bmk13_execute+0xdc>)
 8006ba4:	f7fe fe4c 	bl	8005840 <test_print>
 8006ba8:	2010      	movs	r0, #16
 8006baa:	f7fe fd21 	bl	80055f0 <test_printn.part.1>
 8006bae:	4620      	mov	r0, r4
 8006bb0:	f7fe fe26 	bl	8005800 <test_println>
 8006bb4:	4816      	ldr	r0, [pc, #88]	; (8006c10 <bmk13_execute+0xe0>)
 8006bb6:	f7fe fe43 	bl	8005840 <test_print>
 8006bba:	2008      	movs	r0, #8
 8006bbc:	f7fe fd18 	bl	80055f0 <test_printn.part.1>
 8006bc0:	4620      	mov	r0, r4
 8006bc2:	f7fe fe1d 	bl	8005800 <test_println>
 8006bc6:	4813      	ldr	r0, [pc, #76]	; (8006c14 <bmk13_execute+0xe4>)
 8006bc8:	f7fe fe3a 	bl	8005840 <test_print>
 8006bcc:	2024      	movs	r0, #36	; 0x24
 8006bce:	f7fe fd0f 	bl	80055f0 <test_printn.part.1>
 8006bd2:	4620      	mov	r0, r4
 8006bd4:	f7fe fe14 	bl	8005800 <test_println>
 8006bd8:	480f      	ldr	r0, [pc, #60]	; (8006c18 <bmk13_execute+0xe8>)
 8006bda:	f7fe fe31 	bl	8005840 <test_print>
 8006bde:	2028      	movs	r0, #40	; 0x28
 8006be0:	f7fe fd06 	bl	80055f0 <test_printn.part.1>
 8006be4:	4620      	mov	r0, r4
 8006be6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006bea:	f7fe be09 	b.w	8005800 <test_println>
 8006bee:	bf00      	nop
 8006bf0:	0800c620 	.word	0x0800c620
 8006bf4:	0800c630 	.word	0x0800c630
 8006bf8:	0800c638 	.word	0x0800c638
 8006bfc:	0800c648 	.word	0x0800c648
 8006c00:	0800c658 	.word	0x0800c658
 8006c04:	0800c668 	.word	0x0800c668
 8006c08:	0800c678 	.word	0x0800c678
 8006c0c:	0800c688 	.word	0x0800c688
 8006c10:	0800c698 	.word	0x0800c698
 8006c14:	0800c6a8 	.word	0x0800c6a8
 8006c18:	0800c6b8 	.word	0x0800c6b8
 8006c1c:	00000000 	.word	0x00000000

08006c20 <usbInitEndpointI>:
 8006c20:	6953      	ldr	r3, [r2, #20]
 8006c22:	b410      	push	{r4}
 8006c24:	b123      	cbz	r3, 8006c30 <usbInitEndpointI+0x10>
 8006c26:	2400      	movs	r4, #0
 8006c28:	601c      	str	r4, [r3, #0]
 8006c2a:	605c      	str	r4, [r3, #4]
 8006c2c:	609c      	str	r4, [r3, #8]
 8006c2e:	60dc      	str	r4, [r3, #12]
 8006c30:	6993      	ldr	r3, [r2, #24]
 8006c32:	b12b      	cbz	r3, 8006c40 <usbInitEndpointI+0x20>
 8006c34:	2400      	movs	r4, #0
 8006c36:	601c      	str	r4, [r3, #0]
 8006c38:	605c      	str	r4, [r3, #4]
 8006c3a:	609c      	str	r4, [r3, #8]
 8006c3c:	60dc      	str	r4, [r3, #12]
 8006c3e:	611c      	str	r4, [r3, #16]
 8006c40:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8006c44:	60da      	str	r2, [r3, #12]
 8006c46:	bc10      	pop	{r4}
 8006c48:	f7fe be22 	b.w	8005890 <usb_lld_init_endpoint>
 8006c4c:	0000      	movs	r0, r0
	...

08006c50 <usb_event>:
 8006c50:	2902      	cmp	r1, #2
 8006c52:	d144      	bne.n	8006cde <usb_event+0x8e>
 8006c54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c56:	460d      	mov	r5, r1
 8006c58:	2320      	movs	r3, #32
 8006c5a:	f383 8811 	msr	BASEPRI, r3
 8006c5e:	2700      	movs	r7, #0
 8006c60:	4c1f      	ldr	r4, [pc, #124]	; (8006ce0 <usb_event+0x90>)
 8006c62:	4a20      	ldr	r2, [pc, #128]	; (8006ce4 <usb_event+0x94>)
 8006c64:	2101      	movs	r1, #1
 8006c66:	f7ff ffdb 	bl	8006c20 <usbInitEndpointI>
 8006c6a:	4629      	mov	r1, r5
 8006c6c:	4a1e      	ldr	r2, [pc, #120]	; (8006ce8 <usb_event+0x98>)
 8006c6e:	f7ff ffd7 	bl	8006c20 <usbInitEndpointI>
 8006c72:	f104 060c 	add.w	r6, r4, #12
 8006c76:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 8006c7a:	69a3      	ldr	r3, [r4, #24]
 8006c7c:	4630      	mov	r0, r6
 8006c7e:	f06f 0101 	mvn.w	r1, #1
 8006c82:	6815      	ldr	r5, [r2, #0]
 8006c84:	e9c4 3308 	strd	r3, r3, [r4, #32]
 8006c88:	6167      	str	r7, [r4, #20]
 8006c8a:	f7ff fb11 	bl	80062b0 <chThdDequeueAllI>
 8006c8e:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 8006c92:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8006c96:	1a9b      	subs	r3, r3, r2
 8006c98:	f06f 0101 	mvn.w	r1, #1
 8006c9c:	e9c4 2211 	strd	r2, r2, [r4, #68]	; 0x44
 8006ca0:	63a3      	str	r3, [r4, #56]	; 0x38
 8006ca2:	f7ff fb05 	bl	80062b0 <chThdDequeueAllI>
 8006ca6:	1d20      	adds	r0, r4, #4
 8006ca8:	2101      	movs	r1, #1
 8006caa:	f7ff f9f1 	bl	8006090 <chEvtBroadcastFlagsI>
 8006cae:	2201      	movs	r2, #1
 8006cb0:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8006cb4:	7959      	ldrb	r1, [r3, #5]
 8006cb6:	eb05 0381 	add.w	r3, r5, r1, lsl #2
 8006cba:	68db      	ldr	r3, [r3, #12]
 8006cbc:	8a58      	ldrh	r0, [r3, #18]
 8006cbe:	699b      	ldr	r3, [r3, #24]
 8006cc0:	e9c3 0701 	strd	r0, r7, [r3, #4]
 8006cc4:	701a      	strb	r2, [r3, #0]
 8006cc6:	60de      	str	r6, [r3, #12]
 8006cc8:	4628      	mov	r0, r5
 8006cca:	f7fe fdd1 	bl	8005870 <usb_lld_prepare_receive>
 8006cce:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8006cd2:	7959      	ldrb	r1, [r3, #5]
 8006cd4:	f7fe fe7c 	bl	80059d0 <usbStartReceiveI>
 8006cd8:	f387 8811 	msr	BASEPRI, r7
 8006cdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006cde:	4770      	bx	lr
 8006ce0:	20001e78 	.word	0x20001e78
 8006ce4:	0800cab0 	.word	0x0800cab0
 8006ce8:	0800cae0 	.word	0x0800cae0
 8006cec:	00000000 	.word	0x00000000

08006cf0 <chThdYield>:
 8006cf0:	b570      	push	{r4, r5, r6, lr}
 8006cf2:	2320      	movs	r3, #32
 8006cf4:	f383 8811 	msr	BASEPRI, r3
 8006cf8:	4a11      	ldr	r2, [pc, #68]	; (8006d40 <chThdYield+0x50>)
 8006cfa:	6810      	ldr	r0, [r2, #0]
 8006cfc:	6994      	ldr	r4, [r2, #24]
 8006cfe:	6883      	ldr	r3, [r0, #8]
 8006d00:	68a1      	ldr	r1, [r4, #8]
 8006d02:	428b      	cmp	r3, r1
 8006d04:	d203      	bcs.n	8006d0e <chThdYield+0x1e>
 8006d06:	2300      	movs	r3, #0
 8006d08:	f383 8811 	msr	BASEPRI, r3
 8006d0c:	bd70      	pop	{r4, r5, r6, pc}
 8006d0e:	2601      	movs	r6, #1
 8006d10:	2500      	movs	r5, #0
 8006d12:	6803      	ldr	r3, [r0, #0]
 8006d14:	605a      	str	r2, [r3, #4]
 8006d16:	6013      	str	r3, [r2, #0]
 8006d18:	7706      	strb	r6, [r0, #28]
 8006d1a:	6190      	str	r0, [r2, #24]
 8006d1c:	7725      	strb	r5, [r4, #28]
 8006d1e:	e000      	b.n	8006d22 <chThdYield+0x32>
 8006d20:	681b      	ldr	r3, [r3, #0]
 8006d22:	689a      	ldr	r2, [r3, #8]
 8006d24:	4291      	cmp	r1, r2
 8006d26:	d9fb      	bls.n	8006d20 <chThdYield+0x30>
 8006d28:	685a      	ldr	r2, [r3, #4]
 8006d2a:	4621      	mov	r1, r4
 8006d2c:	e9c4 3200 	strd	r3, r2, [r4]
 8006d30:	6014      	str	r4, [r2, #0]
 8006d32:	605c      	str	r4, [r3, #4]
 8006d34:	f7fe fa64 	bl	8005200 <_port_switch>
 8006d38:	2300      	movs	r3, #0
 8006d3a:	f383 8811 	msr	BASEPRI, r3
 8006d3e:	bd70      	pop	{r4, r5, r6, pc}
 8006d40:	20002158 	.word	0x20002158
	...

08006d50 <thread8>:
 8006d50:	b538      	push	{r3, r4, r5, lr}
 8006d52:	4604      	mov	r4, r0
 8006d54:	4d08      	ldr	r5, [pc, #32]	; (8006d78 <thread8+0x28>)
 8006d56:	f7ff ffcb 	bl	8006cf0 <chThdYield>
 8006d5a:	f7ff ffc9 	bl	8006cf0 <chThdYield>
 8006d5e:	f7ff ffc7 	bl	8006cf0 <chThdYield>
 8006d62:	f7ff ffc5 	bl	8006cf0 <chThdYield>
 8006d66:	6823      	ldr	r3, [r4, #0]
 8006d68:	69aa      	ldr	r2, [r5, #24]
 8006d6a:	3304      	adds	r3, #4
 8006d6c:	6023      	str	r3, [r4, #0]
 8006d6e:	7f53      	ldrb	r3, [r2, #29]
 8006d70:	075b      	lsls	r3, r3, #29
 8006d72:	d5f0      	bpl.n	8006d56 <thread8+0x6>
 8006d74:	bd38      	pop	{r3, r4, r5, pc}
 8006d76:	bf00      	nop
 8006d78:	20002158 	.word	0x20002158
 8006d7c:	00000000 	.word	0x00000000

08006d80 <chSchDoRescheduleAhead>:
 8006d80:	b470      	push	{r4, r5, r6}
 8006d82:	2601      	movs	r6, #1
 8006d84:	2500      	movs	r5, #0
 8006d86:	4a0c      	ldr	r2, [pc, #48]	; (8006db8 <chSchDoRescheduleAhead+0x38>)
 8006d88:	6810      	ldr	r0, [r2, #0]
 8006d8a:	6994      	ldr	r4, [r2, #24]
 8006d8c:	6803      	ldr	r3, [r0, #0]
 8006d8e:	68a1      	ldr	r1, [r4, #8]
 8006d90:	6013      	str	r3, [r2, #0]
 8006d92:	605a      	str	r2, [r3, #4]
 8006d94:	7706      	strb	r6, [r0, #28]
 8006d96:	6190      	str	r0, [r2, #24]
 8006d98:	7725      	strb	r5, [r4, #28]
 8006d9a:	e000      	b.n	8006d9e <chSchDoRescheduleAhead+0x1e>
 8006d9c:	681b      	ldr	r3, [r3, #0]
 8006d9e:	689a      	ldr	r2, [r3, #8]
 8006da0:	4291      	cmp	r1, r2
 8006da2:	d3fb      	bcc.n	8006d9c <chSchDoRescheduleAhead+0x1c>
 8006da4:	685a      	ldr	r2, [r3, #4]
 8006da6:	4621      	mov	r1, r4
 8006da8:	e9c4 3200 	strd	r3, r2, [r4]
 8006dac:	6014      	str	r4, [r2, #0]
 8006dae:	605c      	str	r4, [r3, #4]
 8006db0:	bc70      	pop	{r4, r5, r6}
 8006db2:	f7fe ba25 	b.w	8005200 <_port_switch>
 8006db6:	bf00      	nop
 8006db8:	20002158 	.word	0x20002158
 8006dbc:	00000000 	.word	0x00000000

08006dc0 <chSchRescheduleS>:
 8006dc0:	4b04      	ldr	r3, [pc, #16]	; (8006dd4 <chSchRescheduleS+0x14>)
 8006dc2:	681a      	ldr	r2, [r3, #0]
 8006dc4:	699b      	ldr	r3, [r3, #24]
 8006dc6:	6892      	ldr	r2, [r2, #8]
 8006dc8:	689b      	ldr	r3, [r3, #8]
 8006dca:	429a      	cmp	r2, r3
 8006dcc:	d800      	bhi.n	8006dd0 <chSchRescheduleS+0x10>
 8006dce:	4770      	bx	lr
 8006dd0:	f7ff bfd6 	b.w	8006d80 <chSchDoRescheduleAhead>
 8006dd4:	20002158 	.word	0x20002158
	...

08006de0 <thread4.lto_priv.81>:
 8006de0:	b508      	push	{r3, lr}
 8006de2:	2220      	movs	r2, #32
 8006de4:	f382 8811 	msr	BASEPRI, r2
 8006de8:	6883      	ldr	r3, [r0, #8]
 8006dea:	2b00      	cmp	r3, #0
 8006dec:	dd05      	ble.n	8006dfa <thread4.lto_priv.81+0x1a>
 8006dee:	f7ff ffe7 	bl	8006dc0 <chSchRescheduleS>
 8006df2:	2300      	movs	r3, #0
 8006df4:	f383 8811 	msr	BASEPRI, r3
 8006df8:	bd08      	pop	{r3, pc}
 8006dfa:	f7ff f9c9 	bl	8006190 <chSemSignalI>
 8006dfe:	f7ff ffdf 	bl	8006dc0 <chSchRescheduleS>
 8006e02:	2300      	movs	r3, #0
 8006e04:	f383 8811 	msr	BASEPRI, r3
 8006e08:	bd08      	pop	{r3, pc}
 8006e0a:	bf00      	nop
 8006e0c:	0000      	movs	r0, r0
	...

08006e10 <chMtxUnlockAll>:
 8006e10:	4a13      	ldr	r2, [pc, #76]	; (8006e60 <chMtxUnlockAll+0x50>)
 8006e12:	b570      	push	{r4, r5, r6, lr}
 8006e14:	2320      	movs	r3, #32
 8006e16:	6994      	ldr	r4, [r2, #24]
 8006e18:	f383 8811 	msr	BASEPRI, r3
 8006e1c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006e1e:	b1b3      	cbz	r3, 8006e4e <chMtxUnlockAll+0x3e>
 8006e20:	2600      	movs	r6, #0
 8006e22:	681a      	ldr	r2, [r3, #0]
 8006e24:	68d9      	ldr	r1, [r3, #12]
 8006e26:	4293      	cmp	r3, r2
 8006e28:	63a1      	str	r1, [r4, #56]	; 0x38
 8006e2a:	d014      	beq.n	8006e56 <chMtxUnlockAll+0x46>
 8006e2c:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8006e2e:	6811      	ldr	r1, [r2, #0]
 8006e30:	4610      	mov	r0, r2
 8006e32:	6019      	str	r1, [r3, #0]
 8006e34:	604b      	str	r3, [r1, #4]
 8006e36:	e9c3 2502 	strd	r2, r5, [r3, #8]
 8006e3a:	6393      	str	r3, [r2, #56]	; 0x38
 8006e3c:	f7ff f888 	bl	8005f50 <chSchReadyI>
 8006e40:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006e42:	2b00      	cmp	r3, #0
 8006e44:	d1ed      	bne.n	8006e22 <chMtxUnlockAll+0x12>
 8006e46:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006e48:	60a3      	str	r3, [r4, #8]
 8006e4a:	f7ff ffb9 	bl	8006dc0 <chSchRescheduleS>
 8006e4e:	2300      	movs	r3, #0
 8006e50:	f383 8811 	msr	BASEPRI, r3
 8006e54:	bd70      	pop	{r4, r5, r6, pc}
 8006e56:	609e      	str	r6, [r3, #8]
 8006e58:	460b      	mov	r3, r1
 8006e5a:	2b00      	cmp	r3, #0
 8006e5c:	d1e1      	bne.n	8006e22 <chMtxUnlockAll+0x12>
 8006e5e:	e7f2      	b.n	8006e46 <chMtxUnlockAll+0x36>
 8006e60:	20002158 	.word	0x20002158
	...

08006e70 <chThdSetPriority>:
 8006e70:	b510      	push	{r4, lr}
 8006e72:	2320      	movs	r3, #32
 8006e74:	f383 8811 	msr	BASEPRI, r3
 8006e78:	4b08      	ldr	r3, [pc, #32]	; (8006e9c <chThdSetPriority+0x2c>)
 8006e7a:	699b      	ldr	r3, [r3, #24]
 8006e7c:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8006e7e:	6899      	ldr	r1, [r3, #8]
 8006e80:	42a1      	cmp	r1, r4
 8006e82:	d001      	beq.n	8006e88 <chThdSetPriority+0x18>
 8006e84:	4281      	cmp	r1, r0
 8006e86:	d200      	bcs.n	8006e8a <chThdSetPriority+0x1a>
 8006e88:	6098      	str	r0, [r3, #8]
 8006e8a:	63d8      	str	r0, [r3, #60]	; 0x3c
 8006e8c:	f7ff ff98 	bl	8006dc0 <chSchRescheduleS>
 8006e90:	2300      	movs	r3, #0
 8006e92:	f383 8811 	msr	BASEPRI, r3
 8006e96:	4620      	mov	r0, r4
 8006e98:	bd10      	pop	{r4, pc}
 8006e9a:	bf00      	nop
 8006e9c:	20002158 	.word	0x20002158

08006ea0 <thd3_execute>:
 8006ea0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006ea2:	4e49      	ldr	r6, [pc, #292]	; (8006fc8 <thd3_execute+0x128>)
 8006ea4:	69b3      	ldr	r3, [r6, #24]
 8006ea6:	689c      	ldr	r4, [r3, #8]
 8006ea8:	1c65      	adds	r5, r4, #1
 8006eaa:	4628      	mov	r0, r5
 8006eac:	f7ff ffe0 	bl	8006e70 <chThdSetPriority>
 8006eb0:	4607      	mov	r7, r0
 8006eb2:	1b39      	subs	r1, r7, r4
 8006eb4:	fab1 f181 	clz	r1, r1
 8006eb8:	2001      	movs	r0, #1
 8006eba:	0949      	lsrs	r1, r1, #5
 8006ebc:	f7fe fc50 	bl	8005760 <_test_assert>
 8006ec0:	b100      	cbz	r0, 8006ec4 <thd3_execute+0x24>
 8006ec2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006ec4:	69b3      	ldr	r3, [r6, #24]
 8006ec6:	2002      	movs	r0, #2
 8006ec8:	6899      	ldr	r1, [r3, #8]
 8006eca:	1b49      	subs	r1, r1, r5
 8006ecc:	fab1 f181 	clz	r1, r1
 8006ed0:	0949      	lsrs	r1, r1, #5
 8006ed2:	f7fe fc45 	bl	8005760 <_test_assert>
 8006ed6:	2800      	cmp	r0, #0
 8006ed8:	d1f3      	bne.n	8006ec2 <thd3_execute+0x22>
 8006eda:	4638      	mov	r0, r7
 8006edc:	f7ff ffc8 	bl	8006e70 <chThdSetPriority>
 8006ee0:	1a29      	subs	r1, r5, r0
 8006ee2:	fab1 f181 	clz	r1, r1
 8006ee6:	2003      	movs	r0, #3
 8006ee8:	0949      	lsrs	r1, r1, #5
 8006eea:	f7fe fc39 	bl	8005760 <_test_assert>
 8006eee:	2800      	cmp	r0, #0
 8006ef0:	d1e7      	bne.n	8006ec2 <thd3_execute+0x22>
 8006ef2:	69b3      	ldr	r3, [r6, #24]
 8006ef4:	2004      	movs	r0, #4
 8006ef6:	6899      	ldr	r1, [r3, #8]
 8006ef8:	1b09      	subs	r1, r1, r4
 8006efa:	fab1 f181 	clz	r1, r1
 8006efe:	0949      	lsrs	r1, r1, #5
 8006f00:	f7fe fc2e 	bl	8005760 <_test_assert>
 8006f04:	2800      	cmp	r0, #0
 8006f06:	d1dc      	bne.n	8006ec2 <thd3_execute+0x22>
 8006f08:	2320      	movs	r3, #32
 8006f0a:	f383 8811 	msr	BASEPRI, r3
 8006f0e:	69b2      	ldr	r2, [r6, #24]
 8006f10:	6893      	ldr	r3, [r2, #8]
 8006f12:	3302      	adds	r3, #2
 8006f14:	6093      	str	r3, [r2, #8]
 8006f16:	f380 8811 	msr	BASEPRI, r0
 8006f1a:	69b3      	ldr	r3, [r6, #24]
 8006f1c:	1ca7      	adds	r7, r4, #2
 8006f1e:	6899      	ldr	r1, [r3, #8]
 8006f20:	2005      	movs	r0, #5
 8006f22:	1bc9      	subs	r1, r1, r7
 8006f24:	fab1 f181 	clz	r1, r1
 8006f28:	0949      	lsrs	r1, r1, #5
 8006f2a:	f7fe fc19 	bl	8005760 <_test_assert>
 8006f2e:	2800      	cmp	r0, #0
 8006f30:	d1c7      	bne.n	8006ec2 <thd3_execute+0x22>
 8006f32:	4628      	mov	r0, r5
 8006f34:	f7ff ff9c 	bl	8006e70 <chThdSetPriority>
 8006f38:	1b01      	subs	r1, r0, r4
 8006f3a:	fab1 f181 	clz	r1, r1
 8006f3e:	2006      	movs	r0, #6
 8006f40:	0949      	lsrs	r1, r1, #5
 8006f42:	f7fe fc0d 	bl	8005760 <_test_assert>
 8006f46:	2800      	cmp	r0, #0
 8006f48:	d1bb      	bne.n	8006ec2 <thd3_execute+0x22>
 8006f4a:	69b3      	ldr	r3, [r6, #24]
 8006f4c:	2007      	movs	r0, #7
 8006f4e:	6899      	ldr	r1, [r3, #8]
 8006f50:	1bc9      	subs	r1, r1, r7
 8006f52:	fab1 f181 	clz	r1, r1
 8006f56:	0949      	lsrs	r1, r1, #5
 8006f58:	f7fe fc02 	bl	8005760 <_test_assert>
 8006f5c:	2800      	cmp	r0, #0
 8006f5e:	d1b0      	bne.n	8006ec2 <thd3_execute+0x22>
 8006f60:	69b3      	ldr	r3, [r6, #24]
 8006f62:	2008      	movs	r0, #8
 8006f64:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8006f66:	1b4f      	subs	r7, r1, r5
 8006f68:	4279      	negs	r1, r7
 8006f6a:	4179      	adcs	r1, r7
 8006f6c:	f7fe fbf8 	bl	8005760 <_test_assert>
 8006f70:	2800      	cmp	r0, #0
 8006f72:	d1a6      	bne.n	8006ec2 <thd3_execute+0x22>
 8006f74:	1ce7      	adds	r7, r4, #3
 8006f76:	4638      	mov	r0, r7
 8006f78:	f7ff ff7a 	bl	8006e70 <chThdSetPriority>
 8006f7c:	1a28      	subs	r0, r5, r0
 8006f7e:	4241      	negs	r1, r0
 8006f80:	4141      	adcs	r1, r0
 8006f82:	2009      	movs	r0, #9
 8006f84:	f7fe fbec 	bl	8005760 <_test_assert>
 8006f88:	2800      	cmp	r0, #0
 8006f8a:	d19a      	bne.n	8006ec2 <thd3_execute+0x22>
 8006f8c:	69b3      	ldr	r3, [r6, #24]
 8006f8e:	200a      	movs	r0, #10
 8006f90:	6899      	ldr	r1, [r3, #8]
 8006f92:	1bca      	subs	r2, r1, r7
 8006f94:	4251      	negs	r1, r2
 8006f96:	4151      	adcs	r1, r2
 8006f98:	f7fe fbe2 	bl	8005760 <_test_assert>
 8006f9c:	2800      	cmp	r0, #0
 8006f9e:	d190      	bne.n	8006ec2 <thd3_execute+0x22>
 8006fa0:	69b3      	ldr	r3, [r6, #24]
 8006fa2:	200b      	movs	r0, #11
 8006fa4:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8006fa6:	1bcb      	subs	r3, r1, r7
 8006fa8:	4259      	negs	r1, r3
 8006faa:	4159      	adcs	r1, r3
 8006fac:	f7fe fbd8 	bl	8005760 <_test_assert>
 8006fb0:	2800      	cmp	r0, #0
 8006fb2:	d186      	bne.n	8006ec2 <thd3_execute+0x22>
 8006fb4:	2320      	movs	r3, #32
 8006fb6:	f383 8811 	msr	BASEPRI, r3
 8006fba:	69b3      	ldr	r3, [r6, #24]
 8006fbc:	609c      	str	r4, [r3, #8]
 8006fbe:	63dc      	str	r4, [r3, #60]	; 0x3c
 8006fc0:	f380 8811 	msr	BASEPRI, r0
 8006fc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006fc6:	bf00      	nop
 8006fc8:	20002158 	.word	0x20002158
 8006fcc:	00000000 	.word	0x00000000

08006fd0 <chSysRestoreStatusX.part.3>:
 8006fd0:	b510      	push	{r4, lr}
 8006fd2:	f3ef 8405 	mrs	r4, IPSR
 8006fd6:	f3c4 0408 	ubfx	r4, r4, #0, #9
 8006fda:	b11c      	cbz	r4, 8006fe4 <chSysRestoreStatusX.part.3+0x14>
 8006fdc:	2300      	movs	r3, #0
 8006fde:	f383 8811 	msr	BASEPRI, r3
 8006fe2:	bd10      	pop	{r4, pc}
 8006fe4:	f7ff feec 	bl	8006dc0 <chSchRescheduleS>
 8006fe8:	f384 8811 	msr	BASEPRI, r4
 8006fec:	bd10      	pop	{r4, pc}
 8006fee:	bf00      	nop

08006ff0 <usb_packet_write_from_queue>:
 8006ff0:	6803      	ldr	r3, [r0, #0]
 8006ff2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006ff6:	f103 5e00 	add.w	lr, r3, #536870912	; 0x20000000
 8006ffa:	f50e 5e40 	add.w	lr, lr, #12288	; 0x3000
 8006ffe:	ea5f 0852 	movs.w	r8, r2, lsr #1
 8007002:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8007006:	6042      	str	r2, [r0, #4]
 8007008:	d01b      	beq.n	8007042 <usb_packet_write_from_queue+0x52>
 800700a:	690f      	ldr	r7, [r1, #16]
 800700c:	4676      	mov	r6, lr
 800700e:	4644      	mov	r4, r8
 8007010:	e000      	b.n	8007014 <usb_packet_write_from_queue+0x24>
 8007012:	4666      	mov	r6, ip
 8007014:	6988      	ldr	r0, [r1, #24]
 8007016:	f106 0c04 	add.w	ip, r6, #4
 800701a:	1c43      	adds	r3, r0, #1
 800701c:	42bb      	cmp	r3, r7
 800701e:	618b      	str	r3, [r1, #24]
 8007020:	bf28      	it	cs
 8007022:	68cb      	ldrcs	r3, [r1, #12]
 8007024:	7800      	ldrb	r0, [r0, #0]
 8007026:	1c5d      	adds	r5, r3, #1
 8007028:	618d      	str	r5, [r1, #24]
 800702a:	781b      	ldrb	r3, [r3, #0]
 800702c:	42af      	cmp	r7, r5
 800702e:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
 8007032:	bf9c      	itt	ls
 8007034:	68c8      	ldrls	r0, [r1, #12]
 8007036:	6188      	strls	r0, [r1, #24]
 8007038:	3c01      	subs	r4, #1
 800703a:	6033      	str	r3, [r6, #0]
 800703c:	d1e9      	bne.n	8007012 <usb_packet_write_from_queue+0x22>
 800703e:	eb0e 0e88 	add.w	lr, lr, r8, lsl #2
 8007042:	07d3      	lsls	r3, r2, #31
 8007044:	d50b      	bpl.n	800705e <usb_packet_write_from_queue+0x6e>
 8007046:	6988      	ldr	r0, [r1, #24]
 8007048:	690c      	ldr	r4, [r1, #16]
 800704a:	1c43      	adds	r3, r0, #1
 800704c:	618b      	str	r3, [r1, #24]
 800704e:	42a3      	cmp	r3, r4
 8007050:	7800      	ldrb	r0, [r0, #0]
 8007052:	bf28      	it	cs
 8007054:	68cb      	ldrcs	r3, [r1, #12]
 8007056:	f8ce 0000 	str.w	r0, [lr]
 800705a:	bf28      	it	cs
 800705c:	618b      	strcs	r3, [r1, #24]
 800705e:	f7ff f9df 	bl	8006420 <chSysGetStatusAndLockX>
 8007062:	4604      	mov	r4, r0
 8007064:	688b      	ldr	r3, [r1, #8]
 8007066:	4608      	mov	r0, r1
 8007068:	441a      	add	r2, r3
 800706a:	608a      	str	r2, [r1, #8]
 800706c:	2100      	movs	r1, #0
 800706e:	f7ff f91f 	bl	80062b0 <chThdDequeueAllI>
 8007072:	b91c      	cbnz	r4, 800707c <usb_packet_write_from_queue+0x8c>
 8007074:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007078:	f7ff bfaa 	b.w	8006fd0 <chSysRestoreStatusX.part.3>
 800707c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007080 <usb_lld_prepare_transmit>:
 8007080:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8007084:	68c2      	ldr	r2, [r0, #12]
 8007086:	b410      	push	{r4}
 8007088:	6950      	ldr	r0, [r2, #20]
 800708a:	00cc      	lsls	r4, r1, #3
 800708c:	8a12      	ldrh	r2, [r2, #16]
 800708e:	6841      	ldr	r1, [r0, #4]
 8007090:	7803      	ldrb	r3, [r0, #0]
 8007092:	428a      	cmp	r2, r1
 8007094:	bf28      	it	cs
 8007096:	460a      	movcs	r2, r1
 8007098:	68c1      	ldr	r1, [r0, #12]
 800709a:	b9eb      	cbnz	r3, 80070d8 <usb_lld_prepare_transmit+0x58>
 800709c:	4b14      	ldr	r3, [pc, #80]	; (80070f0 <usb_lld_prepare_transmit+0x70>)
 800709e:	1c50      	adds	r0, r2, #1
 80070a0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80070a2:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80070a6:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80070aa:	4423      	add	r3, r4
 80070ac:	005c      	lsls	r4, r3, #1
 80070ae:	6823      	ldr	r3, [r4, #0]
 80070b0:	6062      	str	r2, [r4, #4]
 80070b2:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80070b6:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80070ba:	0842      	lsrs	r2, r0, #1
 80070bc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80070c0:	d008      	beq.n	80070d4 <usb_lld_prepare_transmit+0x54>
 80070c2:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80070c6:	f831 0b02 	ldrh.w	r0, [r1], #2
 80070ca:	3304      	adds	r3, #4
 80070cc:	428a      	cmp	r2, r1
 80070ce:	f843 0c04 	str.w	r0, [r3, #-4]
 80070d2:	d1f8      	bne.n	80070c6 <usb_lld_prepare_transmit+0x46>
 80070d4:	bc10      	pop	{r4}
 80070d6:	4770      	bx	lr
 80070d8:	4b05      	ldr	r3, [pc, #20]	; (80070f0 <usb_lld_prepare_transmit+0x70>)
 80070da:	6d18      	ldr	r0, [r3, #80]	; 0x50
 80070dc:	f100 5000 	add.w	r0, r0, #536870912	; 0x20000000
 80070e0:	f500 5040 	add.w	r0, r0, #12288	; 0x3000
 80070e4:	4420      	add	r0, r4
 80070e6:	0040      	lsls	r0, r0, #1
 80070e8:	bc10      	pop	{r4}
 80070ea:	f7ff bf81 	b.w	8006ff0 <usb_packet_write_from_queue>
 80070ee:	bf00      	nop
 80070f0:	40005c00 	.word	0x40005c00
	...

08007100 <_usb_ep0out>:
 8007100:	f890 2064 	ldrb.w	r2, [r0, #100]	; 0x64
 8007104:	2a06      	cmp	r2, #6
 8007106:	d814      	bhi.n	8007132 <_usb_ep0out+0x32>
 8007108:	2301      	movs	r3, #1
 800710a:	4093      	lsls	r3, r2
 800710c:	f013 0f67 	tst.w	r3, #103	; 0x67
 8007110:	b570      	push	{r4, r5, r6, lr}
 8007112:	4604      	mov	r4, r0
 8007114:	d127      	bne.n	8007166 <_usb_ep0out+0x66>
 8007116:	f013 0208 	ands.w	r2, r3, #8
 800711a:	d00b      	beq.n	8007134 <_usb_ep0out+0x34>
 800711c:	68c3      	ldr	r3, [r0, #12]
 800711e:	699b      	ldr	r3, [r3, #24]
 8007120:	689b      	ldr	r3, [r3, #8]
 8007122:	b92b      	cbnz	r3, 8007130 <_usb_ep0out+0x30>
 8007124:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8007126:	b103      	cbz	r3, 800712a <_usb_ep0out+0x2a>
 8007128:	4798      	blx	r3
 800712a:	2300      	movs	r3, #0
 800712c:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8007130:	bd70      	pop	{r4, r5, r6, pc}
 8007132:	4770      	bx	lr
 8007134:	06db      	lsls	r3, r3, #27
 8007136:	d5fb      	bpl.n	8007130 <_usb_ep0out+0x30>
 8007138:	2105      	movs	r1, #5
 800713a:	68c3      	ldr	r3, [r0, #12]
 800713c:	f880 1064 	strb.w	r1, [r0, #100]	; 0x64
 8007140:	695b      	ldr	r3, [r3, #20]
 8007142:	4611      	mov	r1, r2
 8007144:	701a      	strb	r2, [r3, #0]
 8007146:	60da      	str	r2, [r3, #12]
 8007148:	e9c3 2201 	strd	r2, r2, [r3, #4]
 800714c:	f7ff ff98 	bl	8007080 <usb_lld_prepare_transmit>
 8007150:	2320      	movs	r3, #32
 8007152:	f383 8811 	msr	BASEPRI, r3
 8007156:	8923      	ldrh	r3, [r4, #8]
 8007158:	f013 0001 	ands.w	r0, r3, #1
 800715c:	d021      	beq.n	80071a2 <_usb_ep0out+0xa2>
 800715e:	2300      	movs	r3, #0
 8007160:	f383 8811 	msr	BASEPRI, r3
 8007164:	bd70      	pop	{r4, r5, r6, pc}
 8007166:	f248 0680 	movw	r6, #32896	; 0x8080
 800716a:	4911      	ldr	r1, [pc, #68]	; (80071b0 <_usb_ep0out+0xb0>)
 800716c:	6843      	ldr	r3, [r0, #4]
 800716e:	680a      	ldr	r2, [r1, #0]
 8007170:	681d      	ldr	r5, [r3, #0]
 8007172:	f422 42f0 	bic.w	r2, r2, #30720	; 0x7800
 8007176:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800717a:	f082 0210 	eor.w	r2, r2, #16
 800717e:	4332      	orrs	r2, r6
 8007180:	600a      	str	r2, [r1, #0]
 8007182:	680b      	ldr	r3, [r1, #0]
 8007184:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8007188:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800718c:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 8007190:	4333      	orrs	r3, r6
 8007192:	600b      	str	r3, [r1, #0]
 8007194:	b10d      	cbz	r5, 800719a <_usb_ep0out+0x9a>
 8007196:	2105      	movs	r1, #5
 8007198:	47a8      	blx	r5
 800719a:	2306      	movs	r3, #6
 800719c:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80071a0:	bd70      	pop	{r4, r5, r6, pc}
 80071a2:	f043 0301 	orr.w	r3, r3, #1
 80071a6:	8123      	strh	r3, [r4, #8]
 80071a8:	f7fe f85a 	bl	8005260 <usb_lld_start_in.constprop.17>
 80071ac:	e7d7      	b.n	800715e <_usb_ep0out+0x5e>
 80071ae:	bf00      	nop
 80071b0:	40005c00 	.word	0x40005c00
	...

080071c0 <_usb_ep0in>:
 80071c0:	b538      	push	{r3, r4, r5, lr}
 80071c2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80071c6:	4604      	mov	r4, r0
 80071c8:	2b06      	cmp	r3, #6
 80071ca:	d830      	bhi.n	800722e <_usb_ep0in+0x6e>
 80071cc:	e8df f003 	tbb	[pc, r3]
 80071d0:	5f37045f 	.word	0x5f37045f
 80071d4:	305f      	.short	0x305f
 80071d6:	5f          	.byte	0x5f
 80071d7:	00          	.byte	0x00
 80071d8:	f890 207b 	ldrb.w	r2, [r0, #123]	; 0x7b
 80071dc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 80071e0:	6ec1      	ldr	r1, [r0, #108]	; 0x6c
 80071e2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80071e6:	4299      	cmp	r1, r3
 80071e8:	68c2      	ldr	r2, [r0, #12]
 80071ea:	d229      	bcs.n	8007240 <_usb_ep0in+0x80>
 80071ec:	8a10      	ldrh	r0, [r2, #16]
 80071ee:	fbb1 f3f0 	udiv	r3, r1, r0
 80071f2:	fb00 1313 	mls	r3, r0, r3, r1
 80071f6:	bb1b      	cbnz	r3, 8007240 <_usb_ep0in+0x80>
 80071f8:	6952      	ldr	r2, [r2, #20]
 80071fa:	4619      	mov	r1, r3
 80071fc:	7013      	strb	r3, [r2, #0]
 80071fe:	60d3      	str	r3, [r2, #12]
 8007200:	e9c2 3301 	strd	r3, r3, [r2, #4]
 8007204:	4620      	mov	r0, r4
 8007206:	f7ff ff3b 	bl	8007080 <usb_lld_prepare_transmit>
 800720a:	2320      	movs	r3, #32
 800720c:	f383 8811 	msr	BASEPRI, r3
 8007210:	8923      	ldrh	r3, [r4, #8]
 8007212:	f013 0001 	ands.w	r0, r3, #1
 8007216:	d104      	bne.n	8007222 <_usb_ep0in+0x62>
 8007218:	f043 0301 	orr.w	r3, r3, #1
 800721c:	8123      	strh	r3, [r4, #8]
 800721e:	f7fe f81f 	bl	8005260 <usb_lld_start_in.constprop.17>
 8007222:	2300      	movs	r3, #0
 8007224:	f383 8811 	msr	BASEPRI, r3
 8007228:	2302      	movs	r3, #2
 800722a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 800722e:	bd38      	pop	{r3, r4, r5, pc}
 8007230:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8007232:	b103      	cbz	r3, 8007236 <_usb_ep0in+0x76>
 8007234:	4798      	blx	r3
 8007236:	2300      	movs	r3, #0
 8007238:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 800723c:	bd38      	pop	{r3, r4, r5, pc}
 800723e:	68c2      	ldr	r2, [r0, #12]
 8007240:	2103      	movs	r1, #3
 8007242:	2300      	movs	r3, #0
 8007244:	f884 1064 	strb.w	r1, [r4, #100]	; 0x64
 8007248:	6992      	ldr	r2, [r2, #24]
 800724a:	4619      	mov	r1, r3
 800724c:	7013      	strb	r3, [r2, #0]
 800724e:	60d3      	str	r3, [r2, #12]
 8007250:	e9c2 3301 	strd	r3, r3, [r2, #4]
 8007254:	4620      	mov	r0, r4
 8007256:	f7fe fb0b 	bl	8005870 <usb_lld_prepare_receive>
 800725a:	2320      	movs	r3, #32
 800725c:	f383 8811 	msr	BASEPRI, r3
 8007260:	8963      	ldrh	r3, [r4, #10]
 8007262:	07da      	lsls	r2, r3, #31
 8007264:	d40f      	bmi.n	8007286 <_usb_ep0in+0xc6>
 8007266:	4919      	ldr	r1, [pc, #100]	; (80072cc <_usb_ep0in+0x10c>)
 8007268:	f043 0201 	orr.w	r2, r3, #1
 800726c:	680b      	ldr	r3, [r1, #0]
 800726e:	8162      	strh	r2, [r4, #10]
 8007270:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8007274:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007278:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 800727c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007280:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007284:	600b      	str	r3, [r1, #0]
 8007286:	2300      	movs	r3, #0
 8007288:	f383 8811 	msr	BASEPRI, r3
 800728c:	bd38      	pop	{r3, r4, r5, pc}
 800728e:	f248 0080 	movw	r0, #32896	; 0x8080
 8007292:	490e      	ldr	r1, [pc, #56]	; (80072cc <_usb_ep0in+0x10c>)
 8007294:	6863      	ldr	r3, [r4, #4]
 8007296:	680a      	ldr	r2, [r1, #0]
 8007298:	681d      	ldr	r5, [r3, #0]
 800729a:	f422 42f0 	bic.w	r2, r2, #30720	; 0x7800
 800729e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80072a2:	f082 0210 	eor.w	r2, r2, #16
 80072a6:	4302      	orrs	r2, r0
 80072a8:	600a      	str	r2, [r1, #0]
 80072aa:	680b      	ldr	r3, [r1, #0]
 80072ac:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 80072b0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80072b4:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 80072b8:	4303      	orrs	r3, r0
 80072ba:	600b      	str	r3, [r1, #0]
 80072bc:	b115      	cbz	r5, 80072c4 <_usb_ep0in+0x104>
 80072be:	2105      	movs	r1, #5
 80072c0:	4620      	mov	r0, r4
 80072c2:	47a8      	blx	r5
 80072c4:	2306      	movs	r3, #6
 80072c6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80072ca:	bd38      	pop	{r3, r4, r5, pc}
 80072cc:	40005c00 	.word	0x40005c00

080072d0 <_usb_ep0setup>:
 80072d0:	2200      	movs	r2, #0
 80072d2:	4bc3      	ldr	r3, [pc, #780]	; (80075e0 <_usb_ep0setup+0x310>)
 80072d4:	b570      	push	{r4, r5, r6, lr}
 80072d6:	f880 2064 	strb.w	r2, [r0, #100]	; 0x64
 80072da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80072dc:	4604      	mov	r4, r0
 80072de:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80072e2:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80072e6:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 80072ea:	0049      	lsls	r1, r1, #1
 80072ec:	688b      	ldr	r3, [r1, #8]
 80072ee:	f100 0274 	add.w	r2, r0, #116	; 0x74
 80072f2:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80072f6:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80072fa:	005b      	lsls	r3, r3, #1
 80072fc:	f103 0010 	add.w	r0, r3, #16
 8007300:	6819      	ldr	r1, [r3, #0]
 8007302:	3304      	adds	r3, #4
 8007304:	4283      	cmp	r3, r0
 8007306:	f822 1b02 	strh.w	r1, [r2], #2
 800730a:	d1f9      	bne.n	8007300 <_usb_ep0setup+0x30>
 800730c:	6863      	ldr	r3, [r4, #4]
 800730e:	689b      	ldr	r3, [r3, #8]
 8007310:	2b00      	cmp	r3, #0
 8007312:	d03d      	beq.n	8007390 <_usb_ep0setup+0xc0>
 8007314:	4620      	mov	r0, r4
 8007316:	4798      	blx	r3
 8007318:	2800      	cmp	r0, #0
 800731a:	d039      	beq.n	8007390 <_usb_ep0setup+0xc0>
 800731c:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 800731e:	f894 2074 	ldrb.w	r2, [r4, #116]	; 0x74
 8007322:	f894 007b 	ldrb.w	r0, [r4, #123]	; 0x7b
 8007326:	f894 307a 	ldrb.w	r3, [r4, #122]	; 0x7a
 800732a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 800732e:	428b      	cmp	r3, r1
 8007330:	bf2c      	ite	cs
 8007332:	460b      	movcs	r3, r1
 8007334:	66e3      	strcc	r3, [r4, #108]	; 0x6c
 8007336:	0611      	lsls	r1, r2, #24
 8007338:	68e0      	ldr	r0, [r4, #12]
 800733a:	f100 80cc 	bmi.w	80074d6 <_usb_ep0setup+0x206>
 800733e:	2b00      	cmp	r3, #0
 8007340:	d07d      	beq.n	800743e <_usb_ep0setup+0x16e>
 8007342:	2204      	movs	r2, #4
 8007344:	2100      	movs	r1, #0
 8007346:	f884 2064 	strb.w	r2, [r4, #100]	; 0x64
 800734a:	6982      	ldr	r2, [r0, #24]
 800734c:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 800734e:	6053      	str	r3, [r2, #4]
 8007350:	60d0      	str	r0, [r2, #12]
 8007352:	7011      	strb	r1, [r2, #0]
 8007354:	6091      	str	r1, [r2, #8]
 8007356:	4620      	mov	r0, r4
 8007358:	f7fe fa8a 	bl	8005870 <usb_lld_prepare_receive>
 800735c:	2320      	movs	r3, #32
 800735e:	f383 8811 	msr	BASEPRI, r3
 8007362:	8963      	ldrh	r3, [r4, #10]
 8007364:	07da      	lsls	r2, r3, #31
 8007366:	d40f      	bmi.n	8007388 <_usb_ep0setup+0xb8>
 8007368:	499d      	ldr	r1, [pc, #628]	; (80075e0 <_usb_ep0setup+0x310>)
 800736a:	f043 0201 	orr.w	r2, r3, #1
 800736e:	680b      	ldr	r3, [r1, #0]
 8007370:	8162      	strh	r2, [r4, #10]
 8007372:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8007376:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800737a:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 800737e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007382:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007386:	600b      	str	r3, [r1, #0]
 8007388:	2300      	movs	r3, #0
 800738a:	f383 8811 	msr	BASEPRI, r3
 800738e:	bd70      	pop	{r4, r5, r6, pc}
 8007390:	f894 2074 	ldrb.w	r2, [r4, #116]	; 0x74
 8007394:	f012 0560 	ands.w	r5, r2, #96	; 0x60
 8007398:	4611      	mov	r1, r2
 800739a:	d01e      	beq.n	80073da <_usb_ep0setup+0x10a>
 800739c:	f248 0080 	movw	r0, #32896	; 0x8080
 80073a0:	498f      	ldr	r1, [pc, #572]	; (80075e0 <_usb_ep0setup+0x310>)
 80073a2:	6863      	ldr	r3, [r4, #4]
 80073a4:	680a      	ldr	r2, [r1, #0]
 80073a6:	681d      	ldr	r5, [r3, #0]
 80073a8:	f422 42f0 	bic.w	r2, r2, #30720	; 0x7800
 80073ac:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80073b0:	f082 0210 	eor.w	r2, r2, #16
 80073b4:	4302      	orrs	r2, r0
 80073b6:	600a      	str	r2, [r1, #0]
 80073b8:	680b      	ldr	r3, [r1, #0]
 80073ba:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 80073be:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80073c2:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 80073c6:	4303      	orrs	r3, r0
 80073c8:	600b      	str	r3, [r1, #0]
 80073ca:	b115      	cbz	r5, 80073d2 <_usb_ep0setup+0x102>
 80073cc:	2105      	movs	r1, #5
 80073ce:	4620      	mov	r0, r4
 80073d0:	47a8      	blx	r5
 80073d2:	2306      	movs	r3, #6
 80073d4:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80073d8:	bd70      	pop	{r4, r5, r6, pc}
 80073da:	f894 0075 	ldrb.w	r0, [r4, #117]	; 0x75
 80073de:	f002 037f 	and.w	r3, r2, #127	; 0x7f
 80073e2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80073e6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80073ea:	f000 80ff 	beq.w	80075ec <_usb_ep0setup+0x31c>
 80073ee:	d940      	bls.n	8007472 <_usb_ep0setup+0x1a2>
 80073f0:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 80073f4:	f000 80da 	beq.w	80075ac <_usb_ep0setup+0x2dc>
 80073f8:	d912      	bls.n	8007420 <_usb_ep0setup+0x150>
 80073fa:	f5b3 6f10 	cmp.w	r3, #2304	; 0x900
 80073fe:	f000 8081 	beq.w	8007504 <_usb_ep0setup+0x234>
 8007402:	f640 4102 	movw	r1, #3074	; 0xc02
 8007406:	428b      	cmp	r3, r1
 8007408:	f000 80c9 	beq.w	800759e <_usb_ep0setup+0x2ce>
 800740c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007410:	d1c4      	bne.n	800739c <_usb_ep0setup+0xcc>
 8007412:	2101      	movs	r1, #1
 8007414:	f104 037f 	add.w	r3, r4, #127	; 0x7f
 8007418:	e9c4 151b 	strd	r1, r5, [r4, #108]	; 0x6c
 800741c:	66a3      	str	r3, [r4, #104]	; 0x68
 800741e:	e780      	b.n	8007322 <_usb_ep0setup+0x52>
 8007420:	f240 3202 	movw	r2, #770	; 0x302
 8007424:	4293      	cmp	r3, r2
 8007426:	f000 808f 	beq.w	8007548 <_usb_ep0setup+0x278>
 800742a:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 800742e:	d1b5      	bne.n	800739c <_usb_ep0setup+0xcc>
 8007430:	4b6c      	ldr	r3, [pc, #432]	; (80075e4 <_usb_ep0setup+0x314>)
 8007432:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8007436:	6723      	str	r3, [r4, #112]	; 0x70
 8007438:	060b      	lsls	r3, r1, #24
 800743a:	68e0      	ldr	r0, [r4, #12]
 800743c:	d457      	bmi.n	80074ee <_usb_ep0setup+0x21e>
 800743e:	2300      	movs	r3, #0
 8007440:	2205      	movs	r2, #5
 8007442:	4619      	mov	r1, r3
 8007444:	f884 2064 	strb.w	r2, [r4, #100]	; 0x64
 8007448:	6942      	ldr	r2, [r0, #20]
 800744a:	e9c2 3301 	strd	r3, r3, [r2, #4]
 800744e:	7013      	strb	r3, [r2, #0]
 8007450:	60d3      	str	r3, [r2, #12]
 8007452:	4620      	mov	r0, r4
 8007454:	f7ff fe14 	bl	8007080 <usb_lld_prepare_transmit>
 8007458:	2320      	movs	r3, #32
 800745a:	f383 8811 	msr	BASEPRI, r3
 800745e:	8923      	ldrh	r3, [r4, #8]
 8007460:	f013 0001 	ands.w	r0, r3, #1
 8007464:	d190      	bne.n	8007388 <_usb_ep0setup+0xb8>
 8007466:	f043 0301 	orr.w	r3, r3, #1
 800746a:	8123      	strh	r3, [r4, #8]
 800746c:	f7fd fef8 	bl	8005260 <usb_lld_start_in.constprop.17>
 8007470:	e78a      	b.n	8007388 <_usb_ep0setup+0xb8>
 8007472:	2b02      	cmp	r3, #2
 8007474:	f000 80c9 	beq.w	800760a <_usb_ep0setup+0x33a>
 8007478:	f240 8086 	bls.w	8007588 <_usb_ep0setup+0x2b8>
 800747c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007480:	d053      	beq.n	800752a <_usb_ep0setup+0x25a>
 8007482:	f5b3 7f81 	cmp.w	r3, #258	; 0x102
 8007486:	d189      	bne.n	800739c <_usb_ep0setup+0xcc>
 8007488:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800748c:	2b00      	cmp	r3, #0
 800748e:	d185      	bne.n	800739c <_usb_ep0setup+0xcc>
 8007490:	f894 2078 	ldrb.w	r2, [r4, #120]	; 0x78
 8007494:	f012 030f 	ands.w	r3, r2, #15
 8007498:	d018      	beq.n	80074cc <_usb_ep0setup+0x1fc>
 800749a:	009b      	lsls	r3, r3, #2
 800749c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80074a0:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 80074a4:	f012 0f80 	tst.w	r2, #128	; 0x80
 80074a8:	681a      	ldr	r2, [r3, #0]
 80074aa:	f040 80d6 	bne.w	800765a <_usb_ep0setup+0x38a>
 80074ae:	f402 5240 	and.w	r2, r2, #12288	; 0x3000
 80074b2:	f5b2 5f40 	cmp.w	r2, #12288	; 0x3000
 80074b6:	d009      	beq.n	80074cc <_usb_ep0setup+0x1fc>
 80074b8:	681a      	ldr	r2, [r3, #0]
 80074ba:	f422 42f0 	bic.w	r2, r2, #30720	; 0x7800
 80074be:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80074c2:	f442 4220 	orr.w	r2, r2, #40960	; 0xa000
 80074c6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80074ca:	601a      	str	r2, [r3, #0]
 80074cc:	2300      	movs	r3, #0
 80074ce:	e9c4 331a 	strd	r3, r3, [r4, #104]	; 0x68
 80074d2:	6723      	str	r3, [r4, #112]	; 0x70
 80074d4:	e7b0      	b.n	8007438 <_usb_ep0setup+0x168>
 80074d6:	b153      	cbz	r3, 80074ee <_usb_ep0setup+0x21e>
 80074d8:	2201      	movs	r2, #1
 80074da:	2100      	movs	r1, #0
 80074dc:	f884 2064 	strb.w	r2, [r4, #100]	; 0x64
 80074e0:	6942      	ldr	r2, [r0, #20]
 80074e2:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 80074e4:	6053      	str	r3, [r2, #4]
 80074e6:	60d0      	str	r0, [r2, #12]
 80074e8:	7011      	strb	r1, [r2, #0]
 80074ea:	6091      	str	r1, [r2, #8]
 80074ec:	e7b1      	b.n	8007452 <_usb_ep0setup+0x182>
 80074ee:	2203      	movs	r2, #3
 80074f0:	2300      	movs	r3, #0
 80074f2:	f884 2064 	strb.w	r2, [r4, #100]	; 0x64
 80074f6:	6982      	ldr	r2, [r0, #24]
 80074f8:	4619      	mov	r1, r3
 80074fa:	7013      	strb	r3, [r2, #0]
 80074fc:	60d3      	str	r3, [r2, #12]
 80074fe:	e9c2 3301 	strd	r3, r3, [r2, #4]
 8007502:	e728      	b.n	8007356 <_usb_ep0setup+0x86>
 8007504:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 8007508:	f884 307f 	strb.w	r3, [r4, #127]	; 0x7f
 800750c:	2b00      	cmp	r3, #0
 800750e:	f040 8094 	bne.w	800763a <_usb_ep0setup+0x36a>
 8007512:	2303      	movs	r3, #3
 8007514:	7023      	strb	r3, [r4, #0]
 8007516:	6863      	ldr	r3, [r4, #4]
 8007518:	681b      	ldr	r3, [r3, #0]
 800751a:	2b00      	cmp	r3, #0
 800751c:	d0d6      	beq.n	80074cc <_usb_ep0setup+0x1fc>
 800751e:	2102      	movs	r1, #2
 8007520:	4620      	mov	r0, r4
 8007522:	4798      	blx	r3
 8007524:	f894 1074 	ldrb.w	r1, [r4, #116]	; 0x74
 8007528:	e7d0      	b.n	80074cc <_usb_ep0setup+0x1fc>
 800752a:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800752e:	2b01      	cmp	r3, #1
 8007530:	f47f af34 	bne.w	800739c <_usb_ep0setup+0xcc>
 8007534:	f8b4 307c 	ldrh.w	r3, [r4, #124]	; 0x7c
 8007538:	66a5      	str	r5, [r4, #104]	; 0x68
 800753a:	f023 0302 	bic.w	r3, r3, #2
 800753e:	e9c4 551b 	strd	r5, r5, [r4, #108]	; 0x6c
 8007542:	f8a4 307c 	strh.w	r3, [r4, #124]	; 0x7c
 8007546:	e777      	b.n	8007438 <_usb_ep0setup+0x168>
 8007548:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800754c:	2b00      	cmp	r3, #0
 800754e:	f47f af25 	bne.w	800739c <_usb_ep0setup+0xcc>
 8007552:	f894 2078 	ldrb.w	r2, [r4, #120]	; 0x78
 8007556:	f012 030f 	ands.w	r3, r2, #15
 800755a:	d0b7      	beq.n	80074cc <_usb_ep0setup+0x1fc>
 800755c:	009b      	lsls	r3, r3, #2
 800755e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8007562:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8007566:	f012 0f80 	tst.w	r2, #128	; 0x80
 800756a:	681a      	ldr	r2, [r3, #0]
 800756c:	f040 8087 	bne.w	800767e <_usb_ep0setup+0x3ae>
 8007570:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8007574:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8007578:	f482 5280 	eor.w	r2, r2, #4096	; 0x1000
 800757c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007580:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8007584:	601a      	str	r2, [r3, #0]
 8007586:	e7a1      	b.n	80074cc <_usb_ep0setup+0x1fc>
 8007588:	b933      	cbnz	r3, 8007598 <_usb_ep0setup+0x2c8>
 800758a:	2102      	movs	r1, #2
 800758c:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8007590:	e9c4 131b 	strd	r1, r3, [r4, #108]	; 0x6c
 8007594:	66a0      	str	r0, [r4, #104]	; 0x68
 8007596:	e6c4      	b.n	8007322 <_usb_ep0setup+0x52>
 8007598:	2b01      	cmp	r3, #1
 800759a:	f47f aeff 	bne.w	800739c <_usb_ep0setup+0xcc>
 800759e:	2102      	movs	r1, #2
 80075a0:	2000      	movs	r0, #0
 80075a2:	4b11      	ldr	r3, [pc, #68]	; (80075e8 <_usb_ep0setup+0x318>)
 80075a4:	e9c4 101b 	strd	r1, r0, [r4, #108]	; 0x6c
 80075a8:	66a3      	str	r3, [r4, #104]	; 0x68
 80075aa:	e6ba      	b.n	8007322 <_usb_ep0setup+0x52>
 80075ac:	f894 1079 	ldrb.w	r1, [r4, #121]	; 0x79
 80075b0:	6862      	ldr	r2, [r4, #4]
 80075b2:	f894 3078 	ldrb.w	r3, [r4, #120]	; 0x78
 80075b6:	6856      	ldr	r6, [r2, #4]
 80075b8:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80075bc:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 80075c0:	f894 1077 	ldrb.w	r1, [r4, #119]	; 0x77
 80075c4:	4620      	mov	r0, r4
 80075c6:	47b0      	blx	r6
 80075c8:	2800      	cmp	r0, #0
 80075ca:	f43f aee7 	beq.w	800739c <_usb_ep0setup+0xcc>
 80075ce:	e9d0 1300 	ldrd	r1, r3, [r0]
 80075d2:	f894 2074 	ldrb.w	r2, [r4, #116]	; 0x74
 80075d6:	e9c4 311a 	strd	r3, r1, [r4, #104]	; 0x68
 80075da:	6725      	str	r5, [r4, #112]	; 0x70
 80075dc:	e6a1      	b.n	8007322 <_usb_ep0setup+0x52>
 80075de:	bf00      	nop
 80075e0:	40005c00 	.word	0x40005c00
 80075e4:	08005aa1 	.word	0x08005aa1
 80075e8:	0800d750 	.word	0x0800d750
 80075ec:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 80075f0:	2b01      	cmp	r3, #1
 80075f2:	f47f aed3 	bne.w	800739c <_usb_ep0setup+0xcc>
 80075f6:	f8b4 307c 	ldrh.w	r3, [r4, #124]	; 0x7c
 80075fa:	66a5      	str	r5, [r4, #104]	; 0x68
 80075fc:	f043 0302 	orr.w	r3, r3, #2
 8007600:	e9c4 551b 	strd	r5, r5, [r4, #108]	; 0x6c
 8007604:	f8a4 307c 	strh.w	r3, [r4, #124]	; 0x7c
 8007608:	e716      	b.n	8007438 <_usb_ep0setup+0x168>
 800760a:	f894 3078 	ldrb.w	r3, [r4, #120]	; 0x78
 800760e:	f003 010f 	and.w	r1, r3, #15
 8007612:	f013 0f80 	tst.w	r3, #128	; 0x80
 8007616:	4b20      	ldr	r3, [pc, #128]	; (8007698 <_usb_ep0setup+0x3c8>)
 8007618:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800761c:	d110      	bne.n	8007640 <_usb_ep0setup+0x370>
 800761e:	f413 5340 	ands.w	r3, r3, #12288	; 0x3000
 8007622:	f43f aebb 	beq.w	800739c <_usb_ep0setup+0xcc>
 8007626:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800762a:	d10f      	bne.n	800764c <_usb_ep0setup+0x37c>
 800762c:	2102      	movs	r1, #2
 800762e:	2000      	movs	r0, #0
 8007630:	4b1a      	ldr	r3, [pc, #104]	; (800769c <_usb_ep0setup+0x3cc>)
 8007632:	e9c4 101b 	strd	r1, r0, [r4, #108]	; 0x6c
 8007636:	66a3      	str	r3, [r4, #104]	; 0x68
 8007638:	e673      	b.n	8007322 <_usb_ep0setup+0x52>
 800763a:	2304      	movs	r3, #4
 800763c:	7023      	strb	r3, [r4, #0]
 800763e:	e76a      	b.n	8007516 <_usb_ep0setup+0x246>
 8007640:	f013 0330 	ands.w	r3, r3, #48	; 0x30
 8007644:	f43f aeaa 	beq.w	800739c <_usb_ep0setup+0xcc>
 8007648:	2b10      	cmp	r3, #16
 800764a:	d0ef      	beq.n	800762c <_usb_ep0setup+0x35c>
 800764c:	2102      	movs	r1, #2
 800764e:	2000      	movs	r0, #0
 8007650:	4b13      	ldr	r3, [pc, #76]	; (80076a0 <_usb_ep0setup+0x3d0>)
 8007652:	e9c4 101b 	strd	r1, r0, [r4, #108]	; 0x6c
 8007656:	66a3      	str	r3, [r4, #104]	; 0x68
 8007658:	e663      	b.n	8007322 <_usb_ep0setup+0x52>
 800765a:	f002 0230 	and.w	r2, r2, #48	; 0x30
 800765e:	2a30      	cmp	r2, #48	; 0x30
 8007660:	f43f af34 	beq.w	80074cc <_usb_ep0setup+0x1fc>
 8007664:	681a      	ldr	r2, [r3, #0]
 8007666:	f422 42f0 	bic.w	r2, r2, #30720	; 0x7800
 800766a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800766e:	f082 0220 	eor.w	r2, r2, #32
 8007672:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007676:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800767a:	601a      	str	r2, [r3, #0]
 800767c:	e726      	b.n	80074cc <_usb_ep0setup+0x1fc>
 800767e:	f422 42f0 	bic.w	r2, r2, #30720	; 0x7800
 8007682:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007686:	f082 0210 	eor.w	r2, r2, #16
 800768a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800768e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8007692:	601a      	str	r2, [r3, #0]
 8007694:	e71a      	b.n	80074cc <_usb_ep0setup+0x1fc>
 8007696:	bf00      	nop
 8007698:	40005c00 	.word	0x40005c00
 800769c:	0800cb30 	.word	0x0800cb30
 80076a0:	0800c5d0 	.word	0x0800c5d0
	...

080076b0 <onotify>:
 80076b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80076b2:	6a04      	ldr	r4, [r0, #32]
 80076b4:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 80076b8:	6813      	ldr	r3, [r2, #0]
 80076ba:	7819      	ldrb	r1, [r3, #0]
 80076bc:	2904      	cmp	r1, #4
 80076be:	d000      	beq.n	80076c2 <onotify+0x12>
 80076c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80076c2:	7a21      	ldrb	r1, [r4, #8]
 80076c4:	2902      	cmp	r1, #2
 80076c6:	d1fb      	bne.n	80076c0 <onotify+0x10>
 80076c8:	2501      	movs	r5, #1
 80076ca:	7912      	ldrb	r2, [r2, #4]
 80076cc:	8919      	ldrh	r1, [r3, #8]
 80076ce:	fa05 f302 	lsl.w	r3, r5, r2
 80076d2:	400b      	ands	r3, r1
 80076d4:	d1f4      	bne.n	80076c0 <onotify+0x10>
 80076d6:	e9d4 020f 	ldrd	r0, r2, [r4, #60]	; 0x3c
 80076da:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80076dc:	1a12      	subs	r2, r2, r0
 80076de:	1a52      	subs	r2, r2, r1
 80076e0:	d0ee      	beq.n	80076c0 <onotify+0x10>
 80076e2:	f383 8811 	msr	BASEPRI, r3
 80076e6:	f8d4 1254 	ldr.w	r1, [r4, #596]	; 0x254
 80076ea:	f104 0730 	add.w	r7, r4, #48	; 0x30
 80076ee:	6808      	ldr	r0, [r1, #0]
 80076f0:	7909      	ldrb	r1, [r1, #4]
 80076f2:	eb00 0681 	add.w	r6, r0, r1, lsl #2
 80076f6:	68f6      	ldr	r6, [r6, #12]
 80076f8:	6976      	ldr	r6, [r6, #20]
 80076fa:	e9c6 2301 	strd	r2, r3, [r6, #4]
 80076fe:	7035      	strb	r5, [r6, #0]
 8007700:	60f7      	str	r7, [r6, #12]
 8007702:	f7ff fcbd 	bl	8007080 <usb_lld_prepare_transmit>
 8007706:	2320      	movs	r3, #32
 8007708:	f383 8811 	msr	BASEPRI, r3
 800770c:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8007710:	7919      	ldrb	r1, [r3, #4]
 8007712:	6818      	ldr	r0, [r3, #0]
 8007714:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8007718:	f7fe b942 	b.w	80059a0 <usbStartTransmitI>
 800771c:	0000      	movs	r0, r0
	...

08007720 <sduDataTransmitted>:
 8007720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007722:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8007726:	6a9c      	ldr	r4, [r3, #40]	; 0x28
 8007728:	b37c      	cbz	r4, 800778a <sduDataTransmitted+0x6a>
 800772a:	460e      	mov	r6, r1
 800772c:	4605      	mov	r5, r0
 800772e:	2720      	movs	r7, #32
 8007730:	f387 8811 	msr	BASEPRI, r7
 8007734:	2108      	movs	r1, #8
 8007736:	1d20      	adds	r0, r4, #4
 8007738:	f7fe fcaa 	bl	8006090 <chEvtBroadcastFlagsI>
 800773c:	e9d4 130f 	ldrd	r1, r3, [r4, #60]	; 0x3c
 8007740:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007742:	1a5b      	subs	r3, r3, r1
 8007744:	1a9b      	subs	r3, r3, r2
 8007746:	d121      	bne.n	800778c <sduDataTransmitted+0x6c>
 8007748:	eb05 0186 	add.w	r1, r5, r6, lsl #2
 800774c:	68cb      	ldr	r3, [r1, #12]
 800774e:	695a      	ldr	r2, [r3, #20]
 8007750:	6852      	ldr	r2, [r2, #4]
 8007752:	b1ba      	cbz	r2, 8007784 <sduDataTransmitted+0x64>
 8007754:	8a1b      	ldrh	r3, [r3, #16]
 8007756:	3b01      	subs	r3, #1
 8007758:	4013      	ands	r3, r2
 800775a:	d113      	bne.n	8007784 <sduDataTransmitted+0x64>
 800775c:	f383 8811 	msr	BASEPRI, r3
 8007760:	2001      	movs	r0, #1
 8007762:	68ca      	ldr	r2, [r1, #12]
 8007764:	3430      	adds	r4, #48	; 0x30
 8007766:	6952      	ldr	r2, [r2, #20]
 8007768:	e9c2 3301 	strd	r3, r3, [r2, #4]
 800776c:	60d4      	str	r4, [r2, #12]
 800776e:	7010      	strb	r0, [r2, #0]
 8007770:	4631      	mov	r1, r6
 8007772:	4628      	mov	r0, r5
 8007774:	f7ff fc84 	bl	8007080 <usb_lld_prepare_transmit>
 8007778:	f387 8811 	msr	BASEPRI, r7
 800777c:	4631      	mov	r1, r6
 800777e:	4628      	mov	r0, r5
 8007780:	f7fe f90e 	bl	80059a0 <usbStartTransmitI>
 8007784:	2300      	movs	r3, #0
 8007786:	f383 8811 	msr	BASEPRI, r3
 800778a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800778c:	2100      	movs	r1, #0
 800778e:	f381 8811 	msr	BASEPRI, r1
 8007792:	eb05 0286 	add.w	r2, r5, r6, lsl #2
 8007796:	68d2      	ldr	r2, [r2, #12]
 8007798:	3430      	adds	r4, #48	; 0x30
 800779a:	6952      	ldr	r2, [r2, #20]
 800779c:	2001      	movs	r0, #1
 800779e:	60d4      	str	r4, [r2, #12]
 80077a0:	e9c2 3101 	strd	r3, r1, [r2, #4]
 80077a4:	e7e3      	b.n	800776e <sduDataTransmitted+0x4e>
 80077a6:	bf00      	nop
	...

080077b0 <Vector90>:
 80077b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077b4:	4ba1      	ldr	r3, [pc, #644]	; (8007a3c <Vector90+0x28c>)
 80077b6:	b083      	sub	sp, #12
 80077b8:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 80077ba:	0566      	lsls	r6, r4, #21
 80077bc:	f100 8120 	bmi.w	8007a00 <Vector90+0x250>
 80077c0:	0525      	lsls	r5, r4, #20
 80077c2:	d50f      	bpl.n	80077e4 <Vector90+0x34>
 80077c4:	4e9e      	ldr	r6, [pc, #632]	; (8007a40 <Vector90+0x290>)
 80077c6:	4a9d      	ldr	r2, [pc, #628]	; (8007a3c <Vector90+0x28c>)
 80077c8:	6871      	ldr	r1, [r6, #4]
 80077ca:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80077cc:	680d      	ldr	r5, [r1, #0]
 80077ce:	f043 0308 	orr.w	r3, r3, #8
 80077d2:	6413      	str	r3, [r2, #64]	; 0x40
 80077d4:	b115      	cbz	r5, 80077dc <Vector90+0x2c>
 80077d6:	4630      	mov	r0, r6
 80077d8:	2103      	movs	r1, #3
 80077da:	47a8      	blx	r5
 80077dc:	f46f 6200 	mvn.w	r2, #2048	; 0x800
 80077e0:	4b96      	ldr	r3, [pc, #600]	; (8007a3c <Vector90+0x28c>)
 80077e2:	645a      	str	r2, [r3, #68]	; 0x44
 80077e4:	04e0      	lsls	r0, r4, #19
 80077e6:	d507      	bpl.n	80077f8 <Vector90+0x48>
 80077e8:	4b94      	ldr	r3, [pc, #592]	; (8007a3c <Vector90+0x28c>)
 80077ea:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80077ec:	0411      	lsls	r1, r2, #16
 80077ee:	d56a      	bpl.n	80078c6 <Vector90+0x116>
 80077f0:	f46f 5280 	mvn.w	r2, #4096	; 0x1000
 80077f4:	4b91      	ldr	r3, [pc, #580]	; (8007a3c <Vector90+0x28c>)
 80077f6:	645a      	str	r2, [r3, #68]	; 0x44
 80077f8:	05a2      	lsls	r2, r4, #22
 80077fa:	d509      	bpl.n	8007810 <Vector90+0x60>
 80077fc:	4e90      	ldr	r6, [pc, #576]	; (8007a40 <Vector90+0x290>)
 80077fe:	6873      	ldr	r3, [r6, #4]
 8007800:	68db      	ldr	r3, [r3, #12]
 8007802:	b10b      	cbz	r3, 8007808 <Vector90+0x58>
 8007804:	4630      	mov	r0, r6
 8007806:	4798      	blx	r3
 8007808:	f46f 7200 	mvn.w	r2, #512	; 0x200
 800780c:	4b8b      	ldr	r3, [pc, #556]	; (8007a3c <Vector90+0x28c>)
 800780e:	645a      	str	r2, [r3, #68]	; 0x44
 8007810:	0423      	lsls	r3, r4, #16
 8007812:	d553      	bpl.n	80078bc <Vector90+0x10c>
 8007814:	4e8a      	ldr	r6, [pc, #552]	; (8007a40 <Vector90+0x290>)
 8007816:	f8df b224 	ldr.w	fp, [pc, #548]	; 8007a3c <Vector90+0x28c>
 800781a:	f004 040f 	and.w	r4, r4, #15
 800781e:	ea4f 0a84 	mov.w	sl, r4, lsl #2
 8007822:	f10a 4580 	add.w	r5, sl, #1073741824	; 0x40000000
 8007826:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 800782a:	f8d5 9000 	ldr.w	r9, [r5]
 800782e:	1ca7      	adds	r7, r4, #2
 8007830:	eb06 0387 	add.w	r3, r6, r7, lsl #2
 8007834:	f019 0f80 	tst.w	r9, #128	; 0x80
 8007838:	f8d3 8004 	ldr.w	r8, [r3, #4]
 800783c:	d025      	beq.n	800788a <Vector90+0xda>
 800783e:	682b      	ldr	r3, [r5, #0]
 8007840:	00e0      	lsls	r0, r4, #3
 8007842:	f423 4378 	bic.w	r3, r3, #63488	; 0xf800
 8007846:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800784a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800784e:	602b      	str	r3, [r5, #0]
 8007850:	f8db 3050 	ldr.w	r3, [fp, #80]	; 0x50
 8007854:	f8d8 1014 	ldr.w	r1, [r8, #20]
 8007858:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 800785c:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8007860:	4403      	add	r3, r0
 8007862:	005b      	lsls	r3, r3, #1
 8007864:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8007868:	e9d1 2301 	ldrd	r2, r3, [r1, #4]
 800786c:	4463      	add	r3, ip
 800786e:	608b      	str	r3, [r1, #8]
 8007870:	1ad3      	subs	r3, r2, r3
 8007872:	d17f      	bne.n	8007974 <Vector90+0x1c4>
 8007874:	2201      	movs	r2, #1
 8007876:	8933      	ldrh	r3, [r6, #8]
 8007878:	40a2      	lsls	r2, r4
 800787a:	ea23 0302 	bic.w	r3, r3, r2
 800787e:	8133      	strh	r3, [r6, #8]
 8007880:	4621      	mov	r1, r4
 8007882:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8007886:	486e      	ldr	r0, [pc, #440]	; (8007a40 <Vector90+0x290>)
 8007888:	4798      	blx	r3
 800788a:	f419 4f00 	tst.w	r9, #32768	; 0x8000
 800788e:	d011      	beq.n	80078b4 <Vector90+0x104>
 8007890:	682b      	ldr	r3, [r5, #0]
 8007892:	f419 6f00 	tst.w	r9, #2048	; 0x800
 8007896:	f423 4378 	bic.w	r3, r3, #63488	; 0xf800
 800789a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800789e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80078a2:	602b      	str	r3, [r5, #0]
 80078a4:	d01c      	beq.n	80078e0 <Vector90+0x130>
 80078a6:	eb06 0787 	add.w	r7, r6, r7, lsl #2
 80078aa:	687b      	ldr	r3, [r7, #4]
 80078ac:	4621      	mov	r1, r4
 80078ae:	685b      	ldr	r3, [r3, #4]
 80078b0:	4863      	ldr	r0, [pc, #396]	; (8007a40 <Vector90+0x290>)
 80078b2:	4798      	blx	r3
 80078b4:	f8db 4044 	ldr.w	r4, [fp, #68]	; 0x44
 80078b8:	0422      	lsls	r2, r4, #16
 80078ba:	d4ae      	bmi.n	800781a <Vector90+0x6a>
 80078bc:	b003      	add	sp, #12
 80078be:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078c2:	f7fe b935 	b.w	8005b30 <_port_irq_epilogue>
 80078c6:	4e5e      	ldr	r6, [pc, #376]	; (8007a40 <Vector90+0x290>)
 80078c8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80078ca:	6871      	ldr	r1, [r6, #4]
 80078cc:	f022 0208 	bic.w	r2, r2, #8
 80078d0:	680d      	ldr	r5, [r1, #0]
 80078d2:	641a      	str	r2, [r3, #64]	; 0x40
 80078d4:	2d00      	cmp	r5, #0
 80078d6:	d08b      	beq.n	80077f0 <Vector90+0x40>
 80078d8:	4630      	mov	r0, r6
 80078da:	2104      	movs	r1, #4
 80078dc:	47a8      	blx	r5
 80078de:	e787      	b.n	80077f0 <Vector90+0x40>
 80078e0:	f8db 3050 	ldr.w	r3, [fp, #80]	; 0x50
 80078e4:	f8d8 0018 	ldr.w	r0, [r8, #24]
 80078e8:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80078ec:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80078f0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80078f4:	005b      	lsls	r3, r3, #1
 80078f6:	68da      	ldr	r2, [r3, #12]
 80078f8:	4611      	mov	r1, r2
 80078fa:	9201      	str	r2, [sp, #4]
 80078fc:	7802      	ldrb	r2, [r0, #0]
 80078fe:	f3c1 0909 	ubfx	r9, r1, #0, #10
 8007902:	68c1      	ldr	r1, [r0, #12]
 8007904:	2a00      	cmp	r2, #0
 8007906:	f040 809d 	bne.w	8007a44 <Vector90+0x294>
 800790a:	689b      	ldr	r3, [r3, #8]
 800790c:	f109 0201 	add.w	r2, r9, #1
 8007910:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 8007914:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8007918:	0852      	lsrs	r2, r2, #1
 800791a:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800791e:	d009      	beq.n	8007934 <Vector90+0x184>
 8007920:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8007924:	468c      	mov	ip, r1
 8007926:	4696      	mov	lr, r2
 8007928:	681a      	ldr	r2, [r3, #0]
 800792a:	3304      	adds	r3, #4
 800792c:	4573      	cmp	r3, lr
 800792e:	f82c 2b02 	strh.w	r2, [ip], #2
 8007932:	d1f9      	bne.n	8007928 <Vector90+0x178>
 8007934:	4449      	add	r1, r9
 8007936:	60c1      	str	r1, [r0, #12]
 8007938:	8a01      	ldrh	r1, [r0, #16]
 800793a:	f8b8 c012 	ldrh.w	ip, [r8, #18]
 800793e:	3901      	subs	r1, #1
 8007940:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8007944:	b289      	uxth	r1, r1
 8007946:	444a      	add	r2, r9
 8007948:	eba3 0309 	sub.w	r3, r3, r9
 800794c:	45cc      	cmp	ip, r9
 800794e:	8201      	strh	r1, [r0, #16]
 8007950:	e9c0 3201 	strd	r3, r2, [r0, #4]
 8007954:	f240 80ca 	bls.w	8007aec <Vector90+0x33c>
 8007958:	2201      	movs	r2, #1
 800795a:	8973      	ldrh	r3, [r6, #10]
 800795c:	eb06 0787 	add.w	r7, r6, r7, lsl #2
 8007960:	6879      	ldr	r1, [r7, #4]
 8007962:	40a2      	lsls	r2, r4
 8007964:	ea23 0302 	bic.w	r3, r3, r2
 8007968:	8173      	strh	r3, [r6, #10]
 800796a:	68ca      	ldr	r2, [r1, #12]
 800796c:	4834      	ldr	r0, [pc, #208]	; (8007a40 <Vector90+0x290>)
 800796e:	4621      	mov	r1, r4
 8007970:	4790      	blx	r2
 8007972:	e79f      	b.n	80078b4 <Vector90+0x104>
 8007974:	f8b8 2010 	ldrh.w	r2, [r8, #16]
 8007978:	f891 e000 	ldrb.w	lr, [r1]
 800797c:	429a      	cmp	r2, r3
 800797e:	bf28      	it	cs
 8007980:	461a      	movcs	r2, r3
 8007982:	68cb      	ldr	r3, [r1, #12]
 8007984:	f1be 0f00 	cmp.w	lr, #0
 8007988:	f040 80a4 	bne.w	8007ad4 <Vector90+0x324>
 800798c:	f8db e050 	ldr.w	lr, [fp, #80]	; 0x50
 8007990:	4463      	add	r3, ip
 8007992:	f10e 5e00 	add.w	lr, lr, #536870912	; 0x20000000
 8007996:	f50e 5e40 	add.w	lr, lr, #12288	; 0x3000
 800799a:	4486      	add	lr, r0
 800799c:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80079a0:	f8de 0000 	ldr.w	r0, [lr]
 80079a4:	60cb      	str	r3, [r1, #12]
 80079a6:	f100 5100 	add.w	r1, r0, #536870912	; 0x20000000
 80079aa:	1c50      	adds	r0, r2, #1
 80079ac:	f501 5140 	add.w	r1, r1, #12288	; 0x3000
 80079b0:	0840      	lsrs	r0, r0, #1
 80079b2:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80079b6:	f8ce 2004 	str.w	r2, [lr, #4]
 80079ba:	d008      	beq.n	80079ce <Vector90+0x21e>
 80079bc:	eb01 0080 	add.w	r0, r1, r0, lsl #2
 80079c0:	f833 2b02 	ldrh.w	r2, [r3], #2
 80079c4:	3104      	adds	r1, #4
 80079c6:	f841 2c04 	str.w	r2, [r1, #-4]
 80079ca:	4281      	cmp	r1, r0
 80079cc:	d1f8      	bne.n	80079c0 <Vector90+0x210>
 80079ce:	2320      	movs	r3, #32
 80079d0:	f383 8811 	msr	BASEPRI, r3
 80079d4:	f10a 4a80 	add.w	sl, sl, #1073741824	; 0x40000000
 80079d8:	f50a 4ab8 	add.w	sl, sl, #23552	; 0x5c00
 80079dc:	f8da 3000 	ldr.w	r3, [sl]
 80079e0:	2200      	movs	r2, #0
 80079e2:	f423 43f0 	bic.w	r3, r3, #30720	; 0x7800
 80079e6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80079ea:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 80079ee:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80079f2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80079f6:	f8ca 3000 	str.w	r3, [sl]
 80079fa:	f382 8811 	msr	BASEPRI, r2
 80079fe:	e744      	b.n	800788a <Vector90+0xda>
 8007a00:	2500      	movs	r5, #0
 8007a02:	2302      	movs	r3, #2
 8007a04:	4e0e      	ldr	r6, [pc, #56]	; (8007a40 <Vector90+0x290>)
 8007a06:	4630      	mov	r0, r6
 8007a08:	7033      	strb	r3, [r6, #0]
 8007a0a:	67f5      	str	r5, [r6, #124]	; 0x7c
 8007a0c:	e9c6 5502 	strd	r5, r5, [r6, #8]
 8007a10:	e9c6 5504 	strd	r5, r5, [r6, #16]
 8007a14:	e9c6 5506 	strd	r5, r5, [r6, #24]
 8007a18:	e9c6 5508 	strd	r5, r5, [r6, #32]
 8007a1c:	62b5      	str	r5, [r6, #40]	; 0x28
 8007a1e:	f886 5064 	strb.w	r5, [r6, #100]	; 0x64
 8007a22:	f7fd ff9d 	bl	8005960 <usb_lld_reset>
 8007a26:	6873      	ldr	r3, [r6, #4]
 8007a28:	681b      	ldr	r3, [r3, #0]
 8007a2a:	b10b      	cbz	r3, 8007a30 <Vector90+0x280>
 8007a2c:	4629      	mov	r1, r5
 8007a2e:	4798      	blx	r3
 8007a30:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007a34:	4b01      	ldr	r3, [pc, #4]	; (8007a3c <Vector90+0x28c>)
 8007a36:	645a      	str	r2, [r3, #68]	; 0x44
 8007a38:	e6c2      	b.n	80077c0 <Vector90+0x10>
 8007a3a:	bf00      	nop
 8007a3c:	40005c00 	.word	0x40005c00
 8007a40:	200020d0 	.word	0x200020d0
 8007a44:	6898      	ldr	r0, [r3, #8]
 8007a46:	ea5f 0c59 	movs.w	ip, r9, lsr #1
 8007a4a:	f100 5000 	add.w	r0, r0, #536870912	; 0x20000000
 8007a4e:	f500 5040 	add.w	r0, r0, #12288	; 0x3000
 8007a52:	ea4f 0040 	mov.w	r0, r0, lsl #1
 8007a56:	d01f      	beq.n	8007a98 <Vector90+0x2e8>
 8007a58:	4686      	mov	lr, r0
 8007a5a:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
 8007a5e:	694b      	ldr	r3, [r1, #20]
 8007a60:	f8de 2000 	ldr.w	r2, [lr]
 8007a64:	1c58      	adds	r0, r3, #1
 8007a66:	6148      	str	r0, [r1, #20]
 8007a68:	701a      	strb	r2, [r3, #0]
 8007a6a:	ea4f 2a12 	mov.w	sl, r2, lsr #8
 8007a6e:	e9d1 3204 	ldrd	r3, r2, [r1, #16]
 8007a72:	429a      	cmp	r2, r3
 8007a74:	bf28      	it	cs
 8007a76:	68ca      	ldrcs	r2, [r1, #12]
 8007a78:	f10e 0004 	add.w	r0, lr, #4
 8007a7c:	1c53      	adds	r3, r2, #1
 8007a7e:	614b      	str	r3, [r1, #20]
 8007a80:	f882 a000 	strb.w	sl, [r2]
 8007a84:	e9d1 3204 	ldrd	r3, r2, [r1, #16]
 8007a88:	429a      	cmp	r2, r3
 8007a8a:	bf28      	it	cs
 8007a8c:	68cb      	ldrcs	r3, [r1, #12]
 8007a8e:	4686      	mov	lr, r0
 8007a90:	bf28      	it	cs
 8007a92:	614b      	strcs	r3, [r1, #20]
 8007a94:	4560      	cmp	r0, ip
 8007a96:	d1e2      	bne.n	8007a5e <Vector90+0x2ae>
 8007a98:	9b01      	ldr	r3, [sp, #4]
 8007a9a:	07db      	lsls	r3, r3, #31
 8007a9c:	d50a      	bpl.n	8007ab4 <Vector90+0x304>
 8007a9e:	694b      	ldr	r3, [r1, #20]
 8007aa0:	6802      	ldr	r2, [r0, #0]
 8007aa2:	1c58      	adds	r0, r3, #1
 8007aa4:	6148      	str	r0, [r1, #20]
 8007aa6:	701a      	strb	r2, [r3, #0]
 8007aa8:	e9d1 3204 	ldrd	r3, r2, [r1, #16]
 8007aac:	429a      	cmp	r2, r3
 8007aae:	bf24      	itt	cs
 8007ab0:	68cb      	ldrcs	r3, [r1, #12]
 8007ab2:	614b      	strcs	r3, [r1, #20]
 8007ab4:	2320      	movs	r3, #32
 8007ab6:	f383 8811 	msr	BASEPRI, r3
 8007aba:	688b      	ldr	r3, [r1, #8]
 8007abc:	4608      	mov	r0, r1
 8007abe:	444b      	add	r3, r9
 8007ac0:	608b      	str	r3, [r1, #8]
 8007ac2:	2100      	movs	r1, #0
 8007ac4:	f7fe fbf4 	bl	80062b0 <chThdDequeueAllI>
 8007ac8:	2300      	movs	r3, #0
 8007aca:	f383 8811 	msr	BASEPRI, r3
 8007ace:	f8d8 0018 	ldr.w	r0, [r8, #24]
 8007ad2:	e731      	b.n	8007938 <Vector90+0x188>
 8007ad4:	f8db 1050 	ldr.w	r1, [fp, #80]	; 0x50
 8007ad8:	f101 5100 	add.w	r1, r1, #536870912	; 0x20000000
 8007adc:	f501 5140 	add.w	r1, r1, #12288	; 0x3000
 8007ae0:	4408      	add	r0, r1
 8007ae2:	0040      	lsls	r0, r0, #1
 8007ae4:	4619      	mov	r1, r3
 8007ae6:	f7ff fa83 	bl	8006ff0 <usb_packet_write_from_queue>
 8007aea:	e770      	b.n	80079ce <Vector90+0x21e>
 8007aec:	2900      	cmp	r1, #0
 8007aee:	f43f af33 	beq.w	8007958 <Vector90+0x1a8>
 8007af2:	682b      	ldr	r3, [r5, #0]
 8007af4:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8007af8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007afc:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8007b00:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007b04:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007b08:	602b      	str	r3, [r5, #0]
 8007b0a:	e6d3      	b.n	80078b4 <Vector90+0x104>
 8007b0c:	0000      	movs	r0, r0
	...

08007b10 <vtcb>:
 8007b10:	b508      	push	{r3, lr}
 8007b12:	2320      	movs	r3, #32
 8007b14:	f383 8811 	msr	BASEPRI, r3
 8007b18:	2200      	movs	r2, #0
 8007b1a:	f382 8811 	msr	BASEPRI, r2
 8007b1e:	f383 8811 	msr	BASEPRI, r3
 8007b22:	f7fe fc7d 	bl	8006420 <chSysGetStatusAndLockX>
 8007b26:	b908      	cbnz	r0, 8007b2c <vtcb+0x1c>
 8007b28:	f7ff fa52 	bl	8006fd0 <chSysRestoreStatusX.part.3>
 8007b2c:	2300      	movs	r3, #0
 8007b2e:	f383 8811 	msr	BASEPRI, r3
 8007b32:	bd08      	pop	{r3, pc}
	...

08007b40 <chSchWakeupS>:
 8007b40:	4b14      	ldr	r3, [pc, #80]	; (8007b94 <chSchWakeupS+0x54>)
 8007b42:	b470      	push	{r4, r5, r6}
 8007b44:	699e      	ldr	r6, [r3, #24]
 8007b46:	6885      	ldr	r5, [r0, #8]
 8007b48:	4604      	mov	r4, r0
 8007b4a:	6201      	str	r1, [r0, #32]
 8007b4c:	68b0      	ldr	r0, [r6, #8]
 8007b4e:	4285      	cmp	r5, r0
 8007b50:	d80c      	bhi.n	8007b6c <chSchWakeupS+0x2c>
 8007b52:	2200      	movs	r2, #0
 8007b54:	7722      	strb	r2, [r4, #28]
 8007b56:	681b      	ldr	r3, [r3, #0]
 8007b58:	689a      	ldr	r2, [r3, #8]
 8007b5a:	4295      	cmp	r5, r2
 8007b5c:	d9fb      	bls.n	8007b56 <chSchWakeupS+0x16>
 8007b5e:	685a      	ldr	r2, [r3, #4]
 8007b60:	e9c4 3200 	strd	r3, r2, [r4]
 8007b64:	6014      	str	r4, [r2, #0]
 8007b66:	605c      	str	r4, [r3, #4]
 8007b68:	bc70      	pop	{r4, r5, r6}
 8007b6a:	4770      	bx	lr
 8007b6c:	2100      	movs	r1, #0
 8007b6e:	461a      	mov	r2, r3
 8007b70:	7731      	strb	r1, [r6, #28]
 8007b72:	6812      	ldr	r2, [r2, #0]
 8007b74:	6891      	ldr	r1, [r2, #8]
 8007b76:	4288      	cmp	r0, r1
 8007b78:	d9fb      	bls.n	8007b72 <chSchWakeupS+0x32>
 8007b7a:	2001      	movs	r0, #1
 8007b7c:	6851      	ldr	r1, [r2, #4]
 8007b7e:	e9c6 2100 	strd	r2, r1, [r6]
 8007b82:	600e      	str	r6, [r1, #0]
 8007b84:	6056      	str	r6, [r2, #4]
 8007b86:	7720      	strb	r0, [r4, #28]
 8007b88:	4631      	mov	r1, r6
 8007b8a:	4620      	mov	r0, r4
 8007b8c:	619c      	str	r4, [r3, #24]
 8007b8e:	bc70      	pop	{r4, r5, r6}
 8007b90:	f7fd bb36 	b.w	8005200 <_port_switch>
 8007b94:	20002158 	.word	0x20002158
	...

08007ba0 <chThdCreateFromMemoryPool.constprop.60>:
 8007ba0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007ba4:	4e1e      	ldr	r6, [pc, #120]	; (8007c20 <chThdCreateFromMemoryPool.constprop.60+0x80>)
 8007ba6:	4680      	mov	r8, r0
 8007ba8:	4630      	mov	r0, r6
 8007baa:	4689      	mov	r9, r1
 8007bac:	f7fe f858 	bl	8005c60 <chPoolAlloc>
 8007bb0:	4604      	mov	r4, r0
 8007bb2:	2800      	cmp	r0, #0
 8007bb4:	d031      	beq.n	8007c1a <chThdCreateFromMemoryPool.constprop.60+0x7a>
 8007bb6:	2320      	movs	r3, #32
 8007bb8:	f383 8811 	msr	BASEPRI, r3
 8007bbc:	f04f 0c02 	mov.w	ip, #2
 8007bc0:	2500      	movs	r5, #0
 8007bc2:	f04f 0e01 	mov.w	lr, #1
 8007bc6:	6873      	ldr	r3, [r6, #4]
 8007bc8:	4a16      	ldr	r2, [pc, #88]	; (8007c24 <chThdCreateFromMemoryPool.constprop.60+0x84>)
 8007bca:	3b24      	subs	r3, #36	; 0x24
 8007bcc:	18c7      	adds	r7, r0, r3
 8007bce:	60c7      	str	r7, [r0, #12]
 8007bd0:	50c2      	str	r2, [r0, r3]
 8007bd2:	4a15      	ldr	r2, [pc, #84]	; (8007c28 <chThdCreateFromMemoryPool.constprop.60+0x88>)
 8007bd4:	4b15      	ldr	r3, [pc, #84]	; (8007c2c <chThdCreateFromMemoryPool.constprop.60+0x8c>)
 8007bd6:	f8c7 9004 	str.w	r9, [r7, #4]
 8007bda:	623b      	str	r3, [r7, #32]
 8007bdc:	6102      	str	r2, [r0, #16]
 8007bde:	6957      	ldr	r7, [r2, #20]
 8007be0:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8007be4:	f100 0328 	add.w	r3, r0, #40	; 0x28
 8007be8:	f8c0 8008 	str.w	r8, [r0, #8]
 8007bec:	6147      	str	r7, [r0, #20]
 8007bee:	f8c0 803c 	str.w	r8, [r0, #60]	; 0x3c
 8007bf2:	f880 e01e 	strb.w	lr, [r0, #30]
 8007bf6:	f880 c01c 	strb.w	ip, [r0, #28]
 8007bfa:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8007bfe:	6185      	str	r5, [r0, #24]
 8007c00:	6138      	str	r0, [r7, #16]
 8007c02:	6241      	str	r1, [r0, #36]	; 0x24
 8007c04:	f880 c01d 	strb.w	ip, [r0, #29]
 8007c08:	6406      	str	r6, [r0, #64]	; 0x40
 8007c0a:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8007c0e:	4629      	mov	r1, r5
 8007c10:	6150      	str	r0, [r2, #20]
 8007c12:	f7ff ff95 	bl	8007b40 <chSchWakeupS>
 8007c16:	f385 8811 	msr	BASEPRI, r5
 8007c1a:	4620      	mov	r0, r4
 8007c1c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007c20:	20002380 	.word	0x20002380
 8007c24:	080057f1 	.word	0x080057f1
 8007c28:	20002158 	.word	0x20002158
 8007c2c:	08005211 	.word	0x08005211

08007c30 <chCondSignal.constprop.52>:
 8007c30:	b508      	push	{r3, lr}
 8007c32:	2320      	movs	r3, #32
 8007c34:	f383 8811 	msr	BASEPRI, r3
 8007c38:	4b06      	ldr	r3, [pc, #24]	; (8007c54 <chCondSignal.constprop.52+0x24>)
 8007c3a:	6818      	ldr	r0, [r3, #0]
 8007c3c:	4298      	cmp	r0, r3
 8007c3e:	d005      	beq.n	8007c4c <chCondSignal.constprop.52+0x1c>
 8007c40:	6802      	ldr	r2, [r0, #0]
 8007c42:	2100      	movs	r1, #0
 8007c44:	6053      	str	r3, [r2, #4]
 8007c46:	601a      	str	r2, [r3, #0]
 8007c48:	f7ff ff7a 	bl	8007b40 <chSchWakeupS>
 8007c4c:	2300      	movs	r3, #0
 8007c4e:	f383 8811 	msr	BASEPRI, r3
 8007c52:	bd08      	pop	{r3, pc}
 8007c54:	20001804 	.word	0x20001804
	...

08007c60 <chMtxUnlock>:
 8007c60:	4b16      	ldr	r3, [pc, #88]	; (8007cbc <chMtxUnlock+0x5c>)
 8007c62:	b570      	push	{r4, r5, r6, lr}
 8007c64:	699d      	ldr	r5, [r3, #24]
 8007c66:	2320      	movs	r3, #32
 8007c68:	f383 8811 	msr	BASEPRI, r3
 8007c6c:	6804      	ldr	r4, [r0, #0]
 8007c6e:	68c3      	ldr	r3, [r0, #12]
 8007c70:	4284      	cmp	r4, r0
 8007c72:	63ab      	str	r3, [r5, #56]	; 0x38
 8007c74:	d01c      	beq.n	8007cb0 <chMtxUnlock+0x50>
 8007c76:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8007c78:	b14b      	cbz	r3, 8007c8e <chMtxUnlock+0x2e>
 8007c7a:	681a      	ldr	r2, [r3, #0]
 8007c7c:	4293      	cmp	r3, r2
 8007c7e:	d003      	beq.n	8007c88 <chMtxUnlock+0x28>
 8007c80:	6892      	ldr	r2, [r2, #8]
 8007c82:	4291      	cmp	r1, r2
 8007c84:	bf38      	it	cc
 8007c86:	4611      	movcc	r1, r2
 8007c88:	68db      	ldr	r3, [r3, #12]
 8007c8a:	2b00      	cmp	r3, #0
 8007c8c:	d1f5      	bne.n	8007c7a <chMtxUnlock+0x1a>
 8007c8e:	4603      	mov	r3, r0
 8007c90:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8007c92:	6822      	ldr	r2, [r4, #0]
 8007c94:	4620      	mov	r0, r4
 8007c96:	60a9      	str	r1, [r5, #8]
 8007c98:	601a      	str	r2, [r3, #0]
 8007c9a:	2100      	movs	r1, #0
 8007c9c:	6053      	str	r3, [r2, #4]
 8007c9e:	e9c3 4602 	strd	r4, r6, [r3, #8]
 8007ca2:	63a3      	str	r3, [r4, #56]	; 0x38
 8007ca4:	f7ff ff4c 	bl	8007b40 <chSchWakeupS>
 8007ca8:	2300      	movs	r3, #0
 8007caa:	f383 8811 	msr	BASEPRI, r3
 8007cae:	bd70      	pop	{r4, r5, r6, pc}
 8007cb0:	2300      	movs	r3, #0
 8007cb2:	60a3      	str	r3, [r4, #8]
 8007cb4:	2300      	movs	r3, #0
 8007cb6:	f383 8811 	msr	BASEPRI, r3
 8007cba:	bd70      	pop	{r4, r5, r6, pc}
 8007cbc:	20002158 	.word	0x20002158

08007cc0 <chSemSignal>:
 8007cc0:	b508      	push	{r3, lr}
 8007cc2:	2320      	movs	r3, #32
 8007cc4:	f383 8811 	msr	BASEPRI, r3
 8007cc8:	6883      	ldr	r3, [r0, #8]
 8007cca:	3301      	adds	r3, #1
 8007ccc:	2b00      	cmp	r3, #0
 8007cce:	6083      	str	r3, [r0, #8]
 8007cd0:	dd03      	ble.n	8007cda <chSemSignal+0x1a>
 8007cd2:	2300      	movs	r3, #0
 8007cd4:	f383 8811 	msr	BASEPRI, r3
 8007cd8:	bd08      	pop	{r3, pc}
 8007cda:	4603      	mov	r3, r0
 8007cdc:	6800      	ldr	r0, [r0, #0]
 8007cde:	2100      	movs	r1, #0
 8007ce0:	6802      	ldr	r2, [r0, #0]
 8007ce2:	601a      	str	r2, [r3, #0]
 8007ce4:	6053      	str	r3, [r2, #4]
 8007ce6:	f7ff ff2b 	bl	8007b40 <chSchWakeupS>
 8007cea:	2300      	movs	r3, #0
 8007cec:	f383 8811 	msr	BASEPRI, r3
 8007cf0:	bd08      	pop	{r3, pc}
 8007cf2:	bf00      	nop
	...

08007d00 <chThdCreateStatic>:
 8007d00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007d02:	9f06      	ldr	r7, [sp, #24]
 8007d04:	4604      	mov	r4, r0
 8007d06:	2520      	movs	r5, #32
 8007d08:	f385 8811 	msr	BASEPRI, r5
 8007d0c:	2500      	movs	r5, #0
 8007d0e:	f04f 0e02 	mov.w	lr, #2
 8007d12:	f04f 0c01 	mov.w	ip, #1
 8007d16:	3924      	subs	r1, #36	; 0x24
 8007d18:	1846      	adds	r6, r0, r1
 8007d1a:	60c6      	str	r6, [r0, #12]
 8007d1c:	5043      	str	r3, [r0, r1]
 8007d1e:	4b10      	ldr	r3, [pc, #64]	; (8007d60 <chThdCreateStatic+0x60>)
 8007d20:	4910      	ldr	r1, [pc, #64]	; (8007d64 <chThdCreateStatic+0x64>)
 8007d22:	6077      	str	r7, [r6, #4]
 8007d24:	6231      	str	r1, [r6, #32]
 8007d26:	6103      	str	r3, [r0, #16]
 8007d28:	6959      	ldr	r1, [r3, #20]
 8007d2a:	63c2      	str	r2, [r0, #60]	; 0x3c
 8007d2c:	6082      	str	r2, [r0, #8]
 8007d2e:	f100 0624 	add.w	r6, r0, #36	; 0x24
 8007d32:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8007d36:	6141      	str	r1, [r0, #20]
 8007d38:	f8a0 e01c 	strh.w	lr, [r0, #28]
 8007d3c:	f880 c01e 	strb.w	ip, [r0, #30]
 8007d40:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8007d44:	6185      	str	r5, [r0, #24]
 8007d46:	6108      	str	r0, [r1, #16]
 8007d48:	4629      	mov	r1, r5
 8007d4a:	e9c0 6209 	strd	r6, r2, [r0, #36]	; 0x24
 8007d4e:	62c2      	str	r2, [r0, #44]	; 0x2c
 8007d50:	6158      	str	r0, [r3, #20]
 8007d52:	f7ff fef5 	bl	8007b40 <chSchWakeupS>
 8007d56:	f385 8811 	msr	BASEPRI, r5
 8007d5a:	4620      	mov	r0, r4
 8007d5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007d5e:	bf00      	nop
 8007d60:	20002158 	.word	0x20002158
 8007d64:	08005211 	.word	0x08005211
	...

08007d70 <chSchGoSleepS>:
 8007d70:	b430      	push	{r4, r5}
 8007d72:	2501      	movs	r5, #1
 8007d74:	4b06      	ldr	r3, [pc, #24]	; (8007d90 <chSchGoSleepS+0x20>)
 8007d76:	6999      	ldr	r1, [r3, #24]
 8007d78:	681a      	ldr	r2, [r3, #0]
 8007d7a:	7708      	strb	r0, [r1, #28]
 8007d7c:	6814      	ldr	r4, [r2, #0]
 8007d7e:	4610      	mov	r0, r2
 8007d80:	6063      	str	r3, [r4, #4]
 8007d82:	7715      	strb	r5, [r2, #28]
 8007d84:	601c      	str	r4, [r3, #0]
 8007d86:	bc30      	pop	{r4, r5}
 8007d88:	619a      	str	r2, [r3, #24]
 8007d8a:	f7fd ba39 	b.w	8005200 <_port_switch>
 8007d8e:	bf00      	nop
 8007d90:	20002158 	.word	0x20002158
	...

08007da0 <chSemSignalWait.constprop.56>:
 8007da0:	b538      	push	{r3, r4, r5, lr}
 8007da2:	2320      	movs	r3, #32
 8007da4:	f383 8811 	msr	BASEPRI, r3
 8007da8:	4c15      	ldr	r4, [pc, #84]	; (8007e00 <chSemSignalWait.constprop.56+0x60>)
 8007daa:	68a3      	ldr	r3, [r4, #8]
 8007dac:	3301      	adds	r3, #1
 8007dae:	2b00      	cmp	r3, #0
 8007db0:	60a3      	str	r3, [r4, #8]
 8007db2:	dd1a      	ble.n	8007dea <chSemSignalWait.constprop.56+0x4a>
 8007db4:	3b01      	subs	r3, #1
 8007db6:	2b00      	cmp	r3, #0
 8007db8:	60a3      	str	r3, [r4, #8]
 8007dba:	db06      	blt.n	8007dca <chSemSignalWait.constprop.56+0x2a>
 8007dbc:	f7ff f800 	bl	8006dc0 <chSchRescheduleS>
 8007dc0:	2000      	movs	r0, #0
 8007dc2:	2300      	movs	r3, #0
 8007dc4:	f383 8811 	msr	BASEPRI, r3
 8007dc8:	bd38      	pop	{r3, r4, r5, pc}
 8007dca:	4a0e      	ldr	r2, [pc, #56]	; (8007e04 <chSemSignalWait.constprop.56+0x64>)
 8007dcc:	6863      	ldr	r3, [r4, #4]
 8007dce:	6995      	ldr	r5, [r2, #24]
 8007dd0:	2005      	movs	r0, #5
 8007dd2:	e9c5 4300 	strd	r4, r3, [r5]
 8007dd6:	601d      	str	r5, [r3, #0]
 8007dd8:	622c      	str	r4, [r5, #32]
 8007dda:	6065      	str	r5, [r4, #4]
 8007ddc:	f7ff ffc8 	bl	8007d70 <chSchGoSleepS>
 8007de0:	6a28      	ldr	r0, [r5, #32]
 8007de2:	2300      	movs	r3, #0
 8007de4:	f383 8811 	msr	BASEPRI, r3
 8007de8:	bd38      	pop	{r3, r4, r5, pc}
 8007dea:	6820      	ldr	r0, [r4, #0]
 8007dec:	6803      	ldr	r3, [r0, #0]
 8007dee:	605c      	str	r4, [r3, #4]
 8007df0:	6023      	str	r3, [r4, #0]
 8007df2:	f7fe f8ad 	bl	8005f50 <chSchReadyI>
 8007df6:	2200      	movs	r2, #0
 8007df8:	68a3      	ldr	r3, [r4, #8]
 8007dfa:	6202      	str	r2, [r0, #32]
 8007dfc:	e7da      	b.n	8007db4 <chSemSignalWait.constprop.56+0x14>
 8007dfe:	bf00      	nop
 8007e00:	200018d0 	.word	0x200018d0
 8007e04:	20002158 	.word	0x20002158
	...

08007e10 <sem3_execute>:
 8007e10:	b510      	push	{r4, lr}
 8007e12:	2400      	movs	r4, #0
 8007e14:	4a1d      	ldr	r2, [pc, #116]	; (8007e8c <sem3_execute+0x7c>)
 8007e16:	b082      	sub	sp, #8
 8007e18:	6992      	ldr	r2, [r2, #24]
 8007e1a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8007e1e:	6892      	ldr	r2, [r2, #8]
 8007e20:	4b1b      	ldr	r3, [pc, #108]	; (8007e90 <sem3_execute+0x80>)
 8007e22:	3201      	adds	r2, #1
 8007e24:	9400      	str	r4, [sp, #0]
 8007e26:	481b      	ldr	r0, [pc, #108]	; (8007e94 <sem3_execute+0x84>)
 8007e28:	f7ff ff6a 	bl	8007d00 <chThdCreateStatic>
 8007e2c:	4c1a      	ldr	r4, [pc, #104]	; (8007e98 <sem3_execute+0x88>)
 8007e2e:	4b1b      	ldr	r3, [pc, #108]	; (8007e9c <sem3_execute+0x8c>)
 8007e30:	6018      	str	r0, [r3, #0]
 8007e32:	f7ff ffb5 	bl	8007da0 <chSemSignalWait.constprop.56>
 8007e36:	6821      	ldr	r1, [r4, #0]
 8007e38:	2001      	movs	r0, #1
 8007e3a:	1b09      	subs	r1, r1, r4
 8007e3c:	fab1 f181 	clz	r1, r1
 8007e40:	0949      	lsrs	r1, r1, #5
 8007e42:	f7fd fc8d 	bl	8005760 <_test_assert>
 8007e46:	b108      	cbz	r0, 8007e4c <sem3_execute+0x3c>
 8007e48:	b002      	add	sp, #8
 8007e4a:	bd10      	pop	{r4, pc}
 8007e4c:	68a1      	ldr	r1, [r4, #8]
 8007e4e:	2002      	movs	r0, #2
 8007e50:	fab1 f181 	clz	r1, r1
 8007e54:	0949      	lsrs	r1, r1, #5
 8007e56:	f7fd fc83 	bl	8005760 <_test_assert>
 8007e5a:	2800      	cmp	r0, #0
 8007e5c:	d1f4      	bne.n	8007e48 <sem3_execute+0x38>
 8007e5e:	f7ff ff9f 	bl	8007da0 <chSemSignalWait.constprop.56>
 8007e62:	6821      	ldr	r1, [r4, #0]
 8007e64:	2003      	movs	r0, #3
 8007e66:	1b09      	subs	r1, r1, r4
 8007e68:	fab1 f181 	clz	r1, r1
 8007e6c:	0949      	lsrs	r1, r1, #5
 8007e6e:	f7fd fc77 	bl	8005760 <_test_assert>
 8007e72:	2800      	cmp	r0, #0
 8007e74:	d1e8      	bne.n	8007e48 <sem3_execute+0x38>
 8007e76:	68a1      	ldr	r1, [r4, #8]
 8007e78:	2004      	movs	r0, #4
 8007e7a:	fab1 f181 	clz	r1, r1
 8007e7e:	0949      	lsrs	r1, r1, #5
 8007e80:	b002      	add	sp, #8
 8007e82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007e86:	f7fd bc6b 	b.w	8005760 <_test_assert>
 8007e8a:	bf00      	nop
 8007e8c:	20002158 	.word	0x20002158
 8007e90:	08009df1 	.word	0x08009df1
 8007e94:	200023b0 	.word	0x200023b0
 8007e98:	200018d0 	.word	0x200018d0
 8007e9c:	20002a44 	.word	0x20002a44

08007ea0 <chEvtWaitOne.constprop.40>:
 8007ea0:	4a0b      	ldr	r2, [pc, #44]	; (8007ed0 <chEvtWaitOne.constprop.40+0x30>)
 8007ea2:	b510      	push	{r4, lr}
 8007ea4:	2320      	movs	r3, #32
 8007ea6:	6994      	ldr	r4, [r2, #24]
 8007ea8:	f383 8811 	msr	BASEPRI, r3
 8007eac:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007eae:	b933      	cbnz	r3, 8007ebe <chEvtWaitOne.constprop.40+0x1e>
 8007eb0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8007eb4:	200a      	movs	r0, #10
 8007eb6:	6223      	str	r3, [r4, #32]
 8007eb8:	f7ff ff5a 	bl	8007d70 <chSchGoSleepS>
 8007ebc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007ebe:	4258      	negs	r0, r3
 8007ec0:	4018      	ands	r0, r3
 8007ec2:	ea23 0300 	bic.w	r3, r3, r0
 8007ec6:	6363      	str	r3, [r4, #52]	; 0x34
 8007ec8:	2300      	movs	r3, #0
 8007eca:	f383 8811 	msr	BASEPRI, r3
 8007ece:	bd10      	pop	{r4, pc}
 8007ed0:	20002158 	.word	0x20002158
	...

08007ee0 <chEvtWaitAny.constprop.39>:
 8007ee0:	4a09      	ldr	r2, [pc, #36]	; (8007f08 <chEvtWaitAny.constprop.39+0x28>)
 8007ee2:	b510      	push	{r4, lr}
 8007ee4:	2320      	movs	r3, #32
 8007ee6:	6994      	ldr	r4, [r2, #24]
 8007ee8:	f383 8811 	msr	BASEPRI, r3
 8007eec:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8007eee:	b930      	cbnz	r0, 8007efe <chEvtWaitAny.constprop.39+0x1e>
 8007ef0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8007ef4:	200a      	movs	r0, #10
 8007ef6:	6223      	str	r3, [r4, #32]
 8007ef8:	f7ff ff3a 	bl	8007d70 <chSchGoSleepS>
 8007efc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8007efe:	2300      	movs	r3, #0
 8007f00:	6363      	str	r3, [r4, #52]	; 0x34
 8007f02:	f383 8811 	msr	BASEPRI, r3
 8007f06:	bd10      	pop	{r4, pc}
 8007f08:	20002158 	.word	0x20002158
 8007f0c:	00000000 	.word	0x00000000

08007f10 <thread4.lto_priv.82>:
 8007f10:	4a07      	ldr	r2, [pc, #28]	; (8007f30 <thread4.lto_priv.82+0x20>)
 8007f12:	b510      	push	{r4, lr}
 8007f14:	2320      	movs	r3, #32
 8007f16:	6994      	ldr	r4, [r2, #24]
 8007f18:	f383 8811 	msr	BASEPRI, r3
 8007f1c:	2003      	movs	r0, #3
 8007f1e:	f7ff ff27 	bl	8007d70 <chSchGoSleepS>
 8007f22:	6a23      	ldr	r3, [r4, #32]
 8007f24:	2b00      	cmp	r3, #0
 8007f26:	d0f9      	beq.n	8007f1c <thread4.lto_priv.82+0xc>
 8007f28:	2300      	movs	r3, #0
 8007f2a:	f383 8811 	msr	BASEPRI, r3
 8007f2e:	bd10      	pop	{r4, pc}
 8007f30:	20002158 	.word	0x20002158
	...

08007f40 <chSchGoSleepTimeoutS>:
 8007f40:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007f44:	b530      	push	{r4, r5, lr}
 8007f46:	4299      	cmp	r1, r3
 8007f48:	b087      	sub	sp, #28
 8007f4a:	d012      	beq.n	8007f72 <chSchGoSleepTimeoutS+0x32>
 8007f4c:	4605      	mov	r5, r0
 8007f4e:	4c0c      	ldr	r4, [pc, #48]	; (8007f80 <chSchGoSleepTimeoutS+0x40>)
 8007f50:	a801      	add	r0, sp, #4
 8007f52:	69a3      	ldr	r3, [r4, #24]
 8007f54:	4a0b      	ldr	r2, [pc, #44]	; (8007f84 <chSchGoSleepTimeoutS+0x44>)
 8007f56:	f7fe fa03 	bl	8006360 <chVTDoSetI>
 8007f5a:	4628      	mov	r0, r5
 8007f5c:	f7ff ff08 	bl	8007d70 <chSchGoSleepS>
 8007f60:	9b04      	ldr	r3, [sp, #16]
 8007f62:	b113      	cbz	r3, 8007f6a <chSchGoSleepTimeoutS+0x2a>
 8007f64:	a801      	add	r0, sp, #4
 8007f66:	f7fe f9bb 	bl	80062e0 <chVTDoResetI>
 8007f6a:	69a3      	ldr	r3, [r4, #24]
 8007f6c:	6a18      	ldr	r0, [r3, #32]
 8007f6e:	b007      	add	sp, #28
 8007f70:	bd30      	pop	{r4, r5, pc}
 8007f72:	f7ff fefd 	bl	8007d70 <chSchGoSleepS>
 8007f76:	4c02      	ldr	r4, [pc, #8]	; (8007f80 <chSchGoSleepTimeoutS+0x40>)
 8007f78:	69a3      	ldr	r3, [r4, #24]
 8007f7a:	6a18      	ldr	r0, [r3, #32]
 8007f7c:	b007      	add	sp, #28
 8007f7e:	bd30      	pop	{r4, r5, pc}
 8007f80:	20002158 	.word	0x20002158
 8007f84:	08005ee1 	.word	0x08005ee1
	...

08007f90 <chSemWaitTimeout.constprop.58>:
 8007f90:	2320      	movs	r3, #32
 8007f92:	f383 8811 	msr	BASEPRI, r3
 8007f96:	4b10      	ldr	r3, [pc, #64]	; (8007fd8 <chSemWaitTimeout.constprop.58+0x48>)
 8007f98:	6899      	ldr	r1, [r3, #8]
 8007f9a:	1e4a      	subs	r2, r1, #1
 8007f9c:	2a00      	cmp	r2, #0
 8007f9e:	609a      	str	r2, [r3, #8]
 8007fa0:	db04      	blt.n	8007fac <chSemWaitTimeout.constprop.58+0x1c>
 8007fa2:	2000      	movs	r0, #0
 8007fa4:	2300      	movs	r3, #0
 8007fa6:	f383 8811 	msr	BASEPRI, r3
 8007faa:	4770      	bx	lr
 8007fac:	b180      	cbz	r0, 8007fd0 <chSemWaitTimeout.constprop.58+0x40>
 8007fae:	4a0b      	ldr	r2, [pc, #44]	; (8007fdc <chSemWaitTimeout.constprop.58+0x4c>)
 8007fb0:	b510      	push	{r4, lr}
 8007fb2:	6992      	ldr	r2, [r2, #24]
 8007fb4:	685c      	ldr	r4, [r3, #4]
 8007fb6:	6213      	str	r3, [r2, #32]
 8007fb8:	e9c2 3400 	strd	r3, r4, [r2]
 8007fbc:	4601      	mov	r1, r0
 8007fbe:	6022      	str	r2, [r4, #0]
 8007fc0:	2005      	movs	r0, #5
 8007fc2:	605a      	str	r2, [r3, #4]
 8007fc4:	f7ff ffbc 	bl	8007f40 <chSchGoSleepTimeoutS>
 8007fc8:	2300      	movs	r3, #0
 8007fca:	f383 8811 	msr	BASEPRI, r3
 8007fce:	bd10      	pop	{r4, pc}
 8007fd0:	6099      	str	r1, [r3, #8]
 8007fd2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007fd6:	e7e5      	b.n	8007fa4 <chSemWaitTimeout.constprop.58+0x14>
 8007fd8:	200018d0 	.word	0x200018d0
 8007fdc:	20002158 	.word	0x20002158

08007fe0 <evt3_execute>:
 8007fe0:	b570      	push	{r4, r5, r6, lr}
 8007fe2:	4c55      	ldr	r4, [pc, #340]	; (8008138 <evt3_execute+0x158>)
 8007fe4:	2320      	movs	r3, #32
 8007fe6:	69a2      	ldr	r2, [r4, #24]
 8007fe8:	f383 8811 	msr	BASEPRI, r3
 8007fec:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8007fee:	b93b      	cbnz	r3, 8008000 <evt3_execute+0x20>
 8007ff0:	f383 8811 	msr	BASEPRI, r3
 8007ff4:	2101      	movs	r1, #1
 8007ff6:	2001      	movs	r0, #1
 8007ff8:	f7fd fbb2 	bl	8005760 <_test_assert>
 8007ffc:	b180      	cbz	r0, 8008020 <evt3_execute+0x40>
 8007ffe:	bd70      	pop	{r4, r5, r6, pc}
 8008000:	4259      	negs	r1, r3
 8008002:	4019      	ands	r1, r3
 8008004:	ea23 0301 	bic.w	r3, r3, r1
 8008008:	6353      	str	r3, [r2, #52]	; 0x34
 800800a:	2300      	movs	r3, #0
 800800c:	f383 8811 	msr	BASEPRI, r3
 8008010:	fab1 f181 	clz	r1, r1
 8008014:	2001      	movs	r0, #1
 8008016:	0949      	lsrs	r1, r1, #5
 8008018:	f7fd fba2 	bl	8005760 <_test_assert>
 800801c:	2800      	cmp	r0, #0
 800801e:	d1ee      	bne.n	8007ffe <evt3_execute+0x1e>
 8008020:	69a3      	ldr	r3, [r4, #24]
 8008022:	2220      	movs	r2, #32
 8008024:	f382 8811 	msr	BASEPRI, r2
 8008028:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800802a:	2a00      	cmp	r2, #0
 800802c:	d06f      	beq.n	800810e <evt3_execute+0x12e>
 800802e:	6358      	str	r0, [r3, #52]	; 0x34
 8008030:	f380 8811 	msr	BASEPRI, r0
 8008034:	4601      	mov	r1, r0
 8008036:	2002      	movs	r0, #2
 8008038:	f7fd fb92 	bl	8005760 <_test_assert>
 800803c:	2800      	cmp	r0, #0
 800803e:	d1de      	bne.n	8007ffe <evt3_execute+0x1e>
 8008040:	69a3      	ldr	r3, [r4, #24]
 8008042:	2220      	movs	r2, #32
 8008044:	f382 8811 	msr	BASEPRI, r2
 8008048:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800804a:	3201      	adds	r2, #1
 800804c:	d063      	beq.n	8008116 <evt3_execute+0x136>
 800804e:	f380 8811 	msr	BASEPRI, r0
 8008052:	2001      	movs	r0, #1
 8008054:	4601      	mov	r1, r0
 8008056:	2003      	movs	r0, #3
 8008058:	f7fd fb82 	bl	8005760 <_test_assert>
 800805c:	2800      	cmp	r0, #0
 800805e:	d1ce      	bne.n	8007ffe <evt3_execute+0x1e>
 8008060:	69a6      	ldr	r6, [r4, #24]
 8008062:	2320      	movs	r3, #32
 8008064:	f383 8811 	msr	BASEPRI, r3
 8008068:	6b75      	ldr	r5, [r6, #52]	; 0x34
 800806a:	b94d      	cbnz	r5, 8008080 <evt3_execute+0xa0>
 800806c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008070:	210a      	movs	r1, #10
 8008072:	6233      	str	r3, [r6, #32]
 8008074:	4608      	mov	r0, r1
 8008076:	f7ff ff63 	bl	8007f40 <chSchGoSleepTimeoutS>
 800807a:	2800      	cmp	r0, #0
 800807c:	db4f      	blt.n	800811e <evt3_execute+0x13e>
 800807e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8008080:	4269      	negs	r1, r5
 8008082:	4029      	ands	r1, r5
 8008084:	ea25 0501 	bic.w	r5, r5, r1
 8008088:	6375      	str	r5, [r6, #52]	; 0x34
 800808a:	2300      	movs	r3, #0
 800808c:	f383 8811 	msr	BASEPRI, r3
 8008090:	fab1 f181 	clz	r1, r1
 8008094:	0949      	lsrs	r1, r1, #5
 8008096:	2004      	movs	r0, #4
 8008098:	f7fd fb62 	bl	8005760 <_test_assert>
 800809c:	2800      	cmp	r0, #0
 800809e:	d1ae      	bne.n	8007ffe <evt3_execute+0x1e>
 80080a0:	69a6      	ldr	r6, [r4, #24]
 80080a2:	2320      	movs	r3, #32
 80080a4:	f383 8811 	msr	BASEPRI, r3
 80080a8:	6b75      	ldr	r5, [r6, #52]	; 0x34
 80080aa:	b94d      	cbnz	r5, 80080c0 <evt3_execute+0xe0>
 80080ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80080b0:	210a      	movs	r1, #10
 80080b2:	6233      	str	r3, [r6, #32]
 80080b4:	4608      	mov	r0, r1
 80080b6:	f7ff ff43 	bl	8007f40 <chSchGoSleepTimeoutS>
 80080ba:	2800      	cmp	r0, #0
 80080bc:	db33      	blt.n	8008126 <evt3_execute+0x146>
 80080be:	6b75      	ldr	r5, [r6, #52]	; 0x34
 80080c0:	2300      	movs	r3, #0
 80080c2:	6373      	str	r3, [r6, #52]	; 0x34
 80080c4:	f383 8811 	msr	BASEPRI, r3
 80080c8:	fab5 f185 	clz	r1, r5
 80080cc:	0949      	lsrs	r1, r1, #5
 80080ce:	2005      	movs	r0, #5
 80080d0:	f7fd fb46 	bl	8005760 <_test_assert>
 80080d4:	4605      	mov	r5, r0
 80080d6:	2800      	cmp	r0, #0
 80080d8:	d191      	bne.n	8007ffe <evt3_execute+0x1e>
 80080da:	69a4      	ldr	r4, [r4, #24]
 80080dc:	2320      	movs	r3, #32
 80080de:	f383 8811 	msr	BASEPRI, r3
 80080e2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80080e4:	3301      	adds	r3, #1
 80080e6:	d008      	beq.n	80080fa <evt3_execute+0x11a>
 80080e8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80080ec:	210a      	movs	r1, #10
 80080ee:	6223      	str	r3, [r4, #32]
 80080f0:	200b      	movs	r0, #11
 80080f2:	f7ff ff25 	bl	8007f40 <chSchGoSleepTimeoutS>
 80080f6:	2800      	cmp	r0, #0
 80080f8:	db19      	blt.n	800812e <evt3_execute+0x14e>
 80080fa:	2300      	movs	r3, #0
 80080fc:	6363      	str	r3, [r4, #52]	; 0x34
 80080fe:	f383 8811 	msr	BASEPRI, r3
 8008102:	4629      	mov	r1, r5
 8008104:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008108:	2006      	movs	r0, #6
 800810a:	f7fd bb29 	b.w	8005760 <_test_assert>
 800810e:	f382 8811 	msr	BASEPRI, r2
 8008112:	2101      	movs	r1, #1
 8008114:	e78f      	b.n	8008036 <evt3_execute+0x56>
 8008116:	6358      	str	r0, [r3, #52]	; 0x34
 8008118:	f380 8811 	msr	BASEPRI, r0
 800811c:	e79a      	b.n	8008054 <evt3_execute+0x74>
 800811e:	f385 8811 	msr	BASEPRI, r5
 8008122:	2101      	movs	r1, #1
 8008124:	e7b7      	b.n	8008096 <evt3_execute+0xb6>
 8008126:	f385 8811 	msr	BASEPRI, r5
 800812a:	2101      	movs	r1, #1
 800812c:	e7cf      	b.n	80080ce <evt3_execute+0xee>
 800812e:	f385 8811 	msr	BASEPRI, r5
 8008132:	2501      	movs	r5, #1
 8008134:	e7e5      	b.n	8008102 <evt3_execute+0x122>
 8008136:	bf00      	nop
 8008138:	20002158 	.word	0x20002158
 800813c:	00000000 	.word	0x00000000

08008140 <chSemWaitTimeoutS>:
 8008140:	6883      	ldr	r3, [r0, #8]
 8008142:	3b01      	subs	r3, #1
 8008144:	2b00      	cmp	r3, #0
 8008146:	6083      	str	r3, [r0, #8]
 8008148:	db01      	blt.n	800814e <chSemWaitTimeoutS+0xe>
 800814a:	2000      	movs	r0, #0
 800814c:	4770      	bx	lr
 800814e:	4602      	mov	r2, r0
 8008150:	4b06      	ldr	r3, [pc, #24]	; (800816c <chSemWaitTimeoutS+0x2c>)
 8008152:	b410      	push	{r4}
 8008154:	699b      	ldr	r3, [r3, #24]
 8008156:	2005      	movs	r0, #5
 8008158:	621a      	str	r2, [r3, #32]
 800815a:	601a      	str	r2, [r3, #0]
 800815c:	6854      	ldr	r4, [r2, #4]
 800815e:	605c      	str	r4, [r3, #4]
 8008160:	6023      	str	r3, [r4, #0]
 8008162:	6053      	str	r3, [r2, #4]
 8008164:	bc10      	pop	{r4}
 8008166:	f7ff beeb 	b.w	8007f40 <chSchGoSleepTimeoutS>
 800816a:	bf00      	nop
 800816c:	20002158 	.word	0x20002158

08008170 <chMBPost.constprop.28>:
 8008170:	b570      	push	{r4, r5, r6, lr}
 8008172:	2320      	movs	r3, #32
 8008174:	4606      	mov	r6, r0
 8008176:	f383 8811 	msr	BASEPRI, r3
 800817a:	4c0d      	ldr	r4, [pc, #52]	; (80081b0 <chMBPost.constprop.28+0x40>)
 800817c:	f104 001c 	add.w	r0, r4, #28
 8008180:	f7ff ffde 	bl	8008140 <chSemWaitTimeoutS>
 8008184:	4605      	mov	r5, r0
 8008186:	b970      	cbnz	r0, 80081a6 <chMBPost.constprop.28+0x36>
 8008188:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800818c:	1d13      	adds	r3, r2, #4
 800818e:	428b      	cmp	r3, r1
 8008190:	60a3      	str	r3, [r4, #8]
 8008192:	bf28      	it	cs
 8008194:	6823      	ldrcs	r3, [r4, #0]
 8008196:	6016      	str	r6, [r2, #0]
 8008198:	4806      	ldr	r0, [pc, #24]	; (80081b4 <chMBPost.constprop.28+0x44>)
 800819a:	bf28      	it	cs
 800819c:	60a3      	strcs	r3, [r4, #8]
 800819e:	f7fd fff7 	bl	8006190 <chSemSignalI>
 80081a2:	f7fe fe0d 	bl	8006dc0 <chSchRescheduleS>
 80081a6:	2300      	movs	r3, #0
 80081a8:	f383 8811 	msr	BASEPRI, r3
 80081ac:	4628      	mov	r0, r5
 80081ae:	bd70      	pop	{r4, r5, r6, pc}
 80081b0:	20001878 	.word	0x20001878
 80081b4:	20001888 	.word	0x20001888
	...

080081c0 <chMBPostAhead.constprop.26>:
 80081c0:	b570      	push	{r4, r5, r6, lr}
 80081c2:	2320      	movs	r3, #32
 80081c4:	4606      	mov	r6, r0
 80081c6:	f383 8811 	msr	BASEPRI, r3
 80081ca:	4c10      	ldr	r4, [pc, #64]	; (800820c <chMBPostAhead.constprop.26+0x4c>)
 80081cc:	f104 001c 	add.w	r0, r4, #28
 80081d0:	f7ff ffb6 	bl	8008140 <chSemWaitTimeoutS>
 80081d4:	4605      	mov	r5, r0
 80081d6:	b120      	cbz	r0, 80081e2 <chMBPostAhead.constprop.26+0x22>
 80081d8:	2300      	movs	r3, #0
 80081da:	f383 8811 	msr	BASEPRI, r3
 80081de:	4628      	mov	r0, r5
 80081e0:	bd70      	pop	{r4, r5, r6, pc}
 80081e2:	68e3      	ldr	r3, [r4, #12]
 80081e4:	6822      	ldr	r2, [r4, #0]
 80081e6:	3b04      	subs	r3, #4
 80081e8:	4293      	cmp	r3, r2
 80081ea:	60e3      	str	r3, [r4, #12]
 80081ec:	d202      	bcs.n	80081f4 <chMBPostAhead.constprop.26+0x34>
 80081ee:	6863      	ldr	r3, [r4, #4]
 80081f0:	3b04      	subs	r3, #4
 80081f2:	60e3      	str	r3, [r4, #12]
 80081f4:	601e      	str	r6, [r3, #0]
 80081f6:	4806      	ldr	r0, [pc, #24]	; (8008210 <chMBPostAhead.constprop.26+0x50>)
 80081f8:	f7fd ffca 	bl	8006190 <chSemSignalI>
 80081fc:	f7fe fde0 	bl	8006dc0 <chSchRescheduleS>
 8008200:	2300      	movs	r3, #0
 8008202:	f383 8811 	msr	BASEPRI, r3
 8008206:	4628      	mov	r0, r5
 8008208:	bd70      	pop	{r4, r5, r6, pc}
 800820a:	bf00      	nop
 800820c:	20001878 	.word	0x20001878
 8008210:	20001888 	.word	0x20001888
	...

08008220 <chMBFetch.constprop.24>:
 8008220:	b570      	push	{r4, r5, r6, lr}
 8008222:	2320      	movs	r3, #32
 8008224:	4606      	mov	r6, r0
 8008226:	f383 8811 	msr	BASEPRI, r3
 800822a:	4c0e      	ldr	r4, [pc, #56]	; (8008264 <chMBFetch.constprop.24+0x44>)
 800822c:	f104 0010 	add.w	r0, r4, #16
 8008230:	f7ff ff86 	bl	8008140 <chSemWaitTimeoutS>
 8008234:	4605      	mov	r5, r0
 8008236:	b978      	cbnz	r0, 8008258 <chMBFetch.constprop.24+0x38>
 8008238:	68e2      	ldr	r2, [r4, #12]
 800823a:	6861      	ldr	r1, [r4, #4]
 800823c:	1d13      	adds	r3, r2, #4
 800823e:	428b      	cmp	r3, r1
 8008240:	6812      	ldr	r2, [r2, #0]
 8008242:	60e3      	str	r3, [r4, #12]
 8008244:	bf28      	it	cs
 8008246:	6823      	ldrcs	r3, [r4, #0]
 8008248:	6032      	str	r2, [r6, #0]
 800824a:	4807      	ldr	r0, [pc, #28]	; (8008268 <chMBFetch.constprop.24+0x48>)
 800824c:	bf28      	it	cs
 800824e:	60e3      	strcs	r3, [r4, #12]
 8008250:	f7fd ff9e 	bl	8006190 <chSemSignalI>
 8008254:	f7fe fdb4 	bl	8006dc0 <chSchRescheduleS>
 8008258:	2300      	movs	r3, #0
 800825a:	f383 8811 	msr	BASEPRI, r3
 800825e:	4628      	mov	r0, r5
 8008260:	bd70      	pop	{r4, r5, r6, pc}
 8008262:	bf00      	nop
 8008264:	20001878 	.word	0x20001878
 8008268:	20001894 	.word	0x20001894
 800826c:	00000000 	.word	0x00000000

08008270 <mbox1_execute>:
 8008270:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008272:	2320      	movs	r3, #32
 8008274:	b083      	sub	sp, #12
 8008276:	f383 8811 	msr	BASEPRI, r3
 800827a:	4dd1      	ldr	r5, [pc, #836]	; (80085c0 <mbox1_execute+0x350>)
 800827c:	2001      	movs	r0, #1
 800827e:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8008280:	f1a1 0105 	sub.w	r1, r1, #5
 8008284:	fab1 f181 	clz	r1, r1
 8008288:	0949      	lsrs	r1, r1, #5
 800828a:	f7fd fa69 	bl	8005760 <_test_assert>
 800828e:	2800      	cmp	r0, #0
 8008290:	f040 8190 	bne.w	80085b4 <mbox1_execute+0x344>
 8008294:	f380 8811 	msr	BASEPRI, r0
 8008298:	2442      	movs	r4, #66	; 0x42
 800829a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800829e:	4620      	mov	r0, r4
 80082a0:	f7ff ff66 	bl	8008170 <chMBPost.constprop.28>
 80082a4:	fab0 f180 	clz	r1, r0
 80082a8:	2002      	movs	r0, #2
 80082aa:	0949      	lsrs	r1, r1, #5
 80082ac:	f7fd fa58 	bl	8005760 <_test_assert>
 80082b0:	3401      	adds	r4, #1
 80082b2:	b978      	cbnz	r0, 80082d4 <mbox1_execute+0x64>
 80082b4:	2c46      	cmp	r4, #70	; 0x46
 80082b6:	d1f0      	bne.n	800829a <mbox1_execute+0x2a>
 80082b8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80082bc:	2041      	movs	r0, #65	; 0x41
 80082be:	f7ff ff7f 	bl	80081c0 <chMBPostAhead.constprop.26>
 80082c2:	fab0 f180 	clz	r1, r0
 80082c6:	2003      	movs	r0, #3
 80082c8:	0949      	lsrs	r1, r1, #5
 80082ca:	f7fd fa49 	bl	8005760 <_test_assert>
 80082ce:	2800      	cmp	r0, #0
 80082d0:	f000 817e 	beq.w	80085d0 <mbox1_execute+0x360>
 80082d4:	b003      	add	sp, #12
 80082d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80082d8:	f380 8811 	msr	BASEPRI, r0
 80082dc:	f384 8811 	msr	BASEPRI, r4
 80082e0:	2041      	movs	r0, #65	; 0x41
 80082e2:	f7fd ff6d 	bl	80061c0 <chMBPostI.constprop.27>
 80082e6:	fab0 f180 	clz	r1, r0
 80082ea:	2016      	movs	r0, #22
 80082ec:	0949      	lsrs	r1, r1, #5
 80082ee:	f7fd fa37 	bl	8005760 <_test_assert>
 80082f2:	2800      	cmp	r0, #0
 80082f4:	d1ee      	bne.n	80082d4 <mbox1_execute+0x64>
 80082f6:	2042      	movs	r0, #66	; 0x42
 80082f8:	f7fd ff62 	bl	80061c0 <chMBPostI.constprop.27>
 80082fc:	fab0 f180 	clz	r1, r0
 8008300:	2017      	movs	r0, #23
 8008302:	0949      	lsrs	r1, r1, #5
 8008304:	f7fd fa2c 	bl	8005760 <_test_assert>
 8008308:	2800      	cmp	r0, #0
 800830a:	d1e3      	bne.n	80082d4 <mbox1_execute+0x64>
 800830c:	2043      	movs	r0, #67	; 0x43
 800830e:	f7fd ff57 	bl	80061c0 <chMBPostI.constprop.27>
 8008312:	fab0 f180 	clz	r1, r0
 8008316:	2018      	movs	r0, #24
 8008318:	0949      	lsrs	r1, r1, #5
 800831a:	f7fd fa21 	bl	8005760 <_test_assert>
 800831e:	2800      	cmp	r0, #0
 8008320:	d1d8      	bne.n	80082d4 <mbox1_execute+0x64>
 8008322:	2044      	movs	r0, #68	; 0x44
 8008324:	f7fd ff4c 	bl	80061c0 <chMBPostI.constprop.27>
 8008328:	fab0 f180 	clz	r1, r0
 800832c:	2019      	movs	r0, #25
 800832e:	0949      	lsrs	r1, r1, #5
 8008330:	f7fd fa16 	bl	8005760 <_test_assert>
 8008334:	4606      	mov	r6, r0
 8008336:	2800      	cmp	r0, #0
 8008338:	d1cc      	bne.n	80082d4 <mbox1_execute+0x64>
 800833a:	2045      	movs	r0, #69	; 0x45
 800833c:	f7fd ff40 	bl	80061c0 <chMBPostI.constprop.27>
 8008340:	f386 8811 	msr	BASEPRI, r6
 8008344:	fab0 f180 	clz	r1, r0
 8008348:	201a      	movs	r0, #26
 800834a:	0949      	lsrs	r1, r1, #5
 800834c:	f7fd fa08 	bl	8005760 <_test_assert>
 8008350:	2800      	cmp	r0, #0
 8008352:	d1bf      	bne.n	80082d4 <mbox1_execute+0x64>
 8008354:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8008358:	eba1 0c03 	sub.w	ip, r1, r3
 800835c:	f1dc 0100 	rsbs	r1, ip, #0
 8008360:	eb41 010c 	adc.w	r1, r1, ip
 8008364:	201b      	movs	r0, #27
 8008366:	f7fd f9fb 	bl	8005760 <_test_assert>
 800836a:	2800      	cmp	r0, #0
 800836c:	d1b2      	bne.n	80082d4 <mbox1_execute+0x64>
 800836e:	4607      	mov	r7, r0
 8008370:	2605      	movs	r6, #5
 8008372:	f384 8811 	msr	BASEPRI, r4
 8008376:	a801      	add	r0, sp, #4
 8008378:	f7fd ff62 	bl	8006240 <chMBFetchI.constprop.23>
 800837c:	f387 8811 	msr	BASEPRI, r7
 8008380:	fab0 f180 	clz	r1, r0
 8008384:	201c      	movs	r0, #28
 8008386:	0949      	lsrs	r1, r1, #5
 8008388:	f7fd f9ea 	bl	8005760 <_test_assert>
 800838c:	2800      	cmp	r0, #0
 800838e:	d1a1      	bne.n	80082d4 <mbox1_execute+0x64>
 8008390:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8008394:	f7fd f9fc 	bl	8005790 <test_emit_token>
 8008398:	3e01      	subs	r6, #1
 800839a:	d1ea      	bne.n	8008372 <mbox1_execute+0x102>
 800839c:	4989      	ldr	r1, [pc, #548]	; (80085c4 <mbox1_execute+0x354>)
 800839e:	201d      	movs	r0, #29
 80083a0:	f7fd f9b6 	bl	8005710 <_test_assert_sequence>
 80083a4:	2800      	cmp	r0, #0
 80083a6:	d195      	bne.n	80082d4 <mbox1_execute+0x64>
 80083a8:	f384 8811 	msr	BASEPRI, r4
 80083ac:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80083ae:	201e      	movs	r0, #30
 80083b0:	1f4f      	subs	r7, r1, #5
 80083b2:	4279      	negs	r1, r7
 80083b4:	4179      	adcs	r1, r7
 80083b6:	f7fd f9d3 	bl	8005760 <_test_assert>
 80083ba:	2800      	cmp	r0, #0
 80083bc:	f040 8223 	bne.w	8008806 <mbox1_execute+0x596>
 80083c0:	f386 8811 	msr	BASEPRI, r6
 80083c4:	f384 8811 	msr	BASEPRI, r4
 80083c8:	69a9      	ldr	r1, [r5, #24]
 80083ca:	201f      	movs	r0, #31
 80083cc:	fab1 f181 	clz	r1, r1
 80083d0:	0949      	lsrs	r1, r1, #5
 80083d2:	f7fd f9c5 	bl	8005760 <_test_assert>
 80083d6:	2800      	cmp	r0, #0
 80083d8:	f040 8215 	bne.w	8008806 <mbox1_execute+0x596>
 80083dc:	f386 8811 	msr	BASEPRI, r6
 80083e0:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80083e4:	1aca      	subs	r2, r1, r3
 80083e6:	4251      	negs	r1, r2
 80083e8:	4151      	adcs	r1, r2
 80083ea:	2020      	movs	r0, #32
 80083ec:	f7fd f9b8 	bl	8005760 <_test_assert>
 80083f0:	2800      	cmp	r0, #0
 80083f2:	f47f af6f 	bne.w	80082d4 <mbox1_execute+0x64>
 80083f6:	f384 8811 	msr	BASEPRI, r4
 80083fa:	2045      	movs	r0, #69	; 0x45
 80083fc:	f7fd ff00 	bl	8006200 <chMBPostAheadI.constprop.25>
 8008400:	fab0 f180 	clz	r1, r0
 8008404:	2021      	movs	r0, #33	; 0x21
 8008406:	0949      	lsrs	r1, r1, #5
 8008408:	f7fd f9aa 	bl	8005760 <_test_assert>
 800840c:	2800      	cmp	r0, #0
 800840e:	f47f af61 	bne.w	80082d4 <mbox1_execute+0x64>
 8008412:	2044      	movs	r0, #68	; 0x44
 8008414:	f7fd fef4 	bl	8006200 <chMBPostAheadI.constprop.25>
 8008418:	fab0 f180 	clz	r1, r0
 800841c:	2022      	movs	r0, #34	; 0x22
 800841e:	0949      	lsrs	r1, r1, #5
 8008420:	f7fd f99e 	bl	8005760 <_test_assert>
 8008424:	2800      	cmp	r0, #0
 8008426:	f47f af55 	bne.w	80082d4 <mbox1_execute+0x64>
 800842a:	2043      	movs	r0, #67	; 0x43
 800842c:	f7fd fee8 	bl	8006200 <chMBPostAheadI.constprop.25>
 8008430:	fab0 f180 	clz	r1, r0
 8008434:	2023      	movs	r0, #35	; 0x23
 8008436:	0949      	lsrs	r1, r1, #5
 8008438:	f7fd f992 	bl	8005760 <_test_assert>
 800843c:	2800      	cmp	r0, #0
 800843e:	f47f af49 	bne.w	80082d4 <mbox1_execute+0x64>
 8008442:	2042      	movs	r0, #66	; 0x42
 8008444:	f7fd fedc 	bl	8006200 <chMBPostAheadI.constprop.25>
 8008448:	fab0 f180 	clz	r1, r0
 800844c:	2024      	movs	r0, #36	; 0x24
 800844e:	0949      	lsrs	r1, r1, #5
 8008450:	f7fd f986 	bl	8005760 <_test_assert>
 8008454:	2800      	cmp	r0, #0
 8008456:	f47f af3d 	bne.w	80082d4 <mbox1_execute+0x64>
 800845a:	2041      	movs	r0, #65	; 0x41
 800845c:	f7fd fed0 	bl	8006200 <chMBPostAheadI.constprop.25>
 8008460:	2300      	movs	r3, #0
 8008462:	f383 8811 	msr	BASEPRI, r3
 8008466:	fab0 f180 	clz	r1, r0
 800846a:	2025      	movs	r0, #37	; 0x25
 800846c:	0949      	lsrs	r1, r1, #5
 800846e:	f7fd f977 	bl	8005760 <_test_assert>
 8008472:	2800      	cmp	r0, #0
 8008474:	f47f af2e 	bne.w	80082d4 <mbox1_execute+0x64>
 8008478:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800847c:	1acb      	subs	r3, r1, r3
 800847e:	4259      	negs	r1, r3
 8008480:	4159      	adcs	r1, r3
 8008482:	2026      	movs	r0, #38	; 0x26
 8008484:	f7fd f96c 	bl	8005760 <_test_assert>
 8008488:	2800      	cmp	r0, #0
 800848a:	f47f af23 	bne.w	80082d4 <mbox1_execute+0x64>
 800848e:	4606      	mov	r6, r0
 8008490:	2405      	movs	r4, #5
 8008492:	2720      	movs	r7, #32
 8008494:	f387 8811 	msr	BASEPRI, r7
 8008498:	a801      	add	r0, sp, #4
 800849a:	f7fd fed1 	bl	8006240 <chMBFetchI.constprop.23>
 800849e:	f386 8811 	msr	BASEPRI, r6
 80084a2:	fab0 f180 	clz	r1, r0
 80084a6:	2027      	movs	r0, #39	; 0x27
 80084a8:	0949      	lsrs	r1, r1, #5
 80084aa:	f7fd f959 	bl	8005760 <_test_assert>
 80084ae:	2800      	cmp	r0, #0
 80084b0:	f47f af10 	bne.w	80082d4 <mbox1_execute+0x64>
 80084b4:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80084b8:	f7fd f96a 	bl	8005790 <test_emit_token>
 80084bc:	3c01      	subs	r4, #1
 80084be:	d1e9      	bne.n	8008494 <mbox1_execute+0x224>
 80084c0:	4940      	ldr	r1, [pc, #256]	; (80085c4 <mbox1_execute+0x354>)
 80084c2:	2028      	movs	r0, #40	; 0x28
 80084c4:	f7fd f924 	bl	8005710 <_test_assert_sequence>
 80084c8:	2800      	cmp	r0, #0
 80084ca:	f47f af03 	bne.w	80082d4 <mbox1_execute+0x64>
 80084ce:	f387 8811 	msr	BASEPRI, r7
 80084d2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80084d4:	2029      	movs	r0, #41	; 0x29
 80084d6:	f1a1 0e05 	sub.w	lr, r1, #5
 80084da:	f1de 0100 	rsbs	r1, lr, #0
 80084de:	eb41 010e 	adc.w	r1, r1, lr
 80084e2:	f7fd f93d 	bl	8005760 <_test_assert>
 80084e6:	2800      	cmp	r0, #0
 80084e8:	f040 80c5 	bne.w	8008676 <mbox1_execute+0x406>
 80084ec:	f384 8811 	msr	BASEPRI, r4
 80084f0:	f387 8811 	msr	BASEPRI, r7
 80084f4:	69a9      	ldr	r1, [r5, #24]
 80084f6:	202a      	movs	r0, #42	; 0x2a
 80084f8:	fab1 f181 	clz	r1, r1
 80084fc:	0949      	lsrs	r1, r1, #5
 80084fe:	f7fd f92f 	bl	8005760 <_test_assert>
 8008502:	2800      	cmp	r0, #0
 8008504:	f040 80b7 	bne.w	8008676 <mbox1_execute+0x406>
 8008508:	f384 8811 	msr	BASEPRI, r4
 800850c:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8008510:	eba1 0c03 	sub.w	ip, r1, r3
 8008514:	f1dc 0100 	rsbs	r1, ip, #0
 8008518:	eb41 010c 	adc.w	r1, r1, ip
 800851c:	202b      	movs	r0, #43	; 0x2b
 800851e:	f7fd f91f 	bl	8005760 <_test_assert>
 8008522:	2800      	cmp	r0, #0
 8008524:	f47f aed6 	bne.w	80082d4 <mbox1_execute+0x64>
 8008528:	f387 8811 	msr	BASEPRI, r7
 800852c:	e9d5 3200 	ldrd	r3, r2, [r5]
 8008530:	1ad2      	subs	r2, r2, r3
 8008532:	1091      	asrs	r1, r2, #2
 8008534:	4824      	ldr	r0, [pc, #144]	; (80085c8 <mbox1_execute+0x358>)
 8008536:	60ab      	str	r3, [r5, #8]
 8008538:	60eb      	str	r3, [r5, #12]
 800853a:	f7fd fea1 	bl	8006280 <chSemResetI>
 800853e:	4621      	mov	r1, r4
 8008540:	4822      	ldr	r0, [pc, #136]	; (80085cc <mbox1_execute+0x35c>)
 8008542:	f7fd fe9d 	bl	8006280 <chSemResetI>
 8008546:	f7fe fc3b 	bl	8006dc0 <chSchRescheduleS>
 800854a:	f384 8811 	msr	BASEPRI, r4
 800854e:	f387 8811 	msr	BASEPRI, r7
 8008552:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8008554:	202c      	movs	r0, #44	; 0x2c
 8008556:	1f4e      	subs	r6, r1, #5
 8008558:	4271      	negs	r1, r6
 800855a:	4171      	adcs	r1, r6
 800855c:	f7fd f900 	bl	8005760 <_test_assert>
 8008560:	2800      	cmp	r0, #0
 8008562:	f040 8088 	bne.w	8008676 <mbox1_execute+0x406>
 8008566:	f384 8811 	msr	BASEPRI, r4
 800856a:	f387 8811 	msr	BASEPRI, r7
 800856e:	69a9      	ldr	r1, [r5, #24]
 8008570:	202d      	movs	r0, #45	; 0x2d
 8008572:	fab1 f181 	clz	r1, r1
 8008576:	0949      	lsrs	r1, r1, #5
 8008578:	f7fd f8f2 	bl	8005760 <_test_assert>
 800857c:	2800      	cmp	r0, #0
 800857e:	d17a      	bne.n	8008676 <mbox1_execute+0x406>
 8008580:	f384 8811 	msr	BASEPRI, r4
 8008584:	f387 8811 	msr	BASEPRI, r7
 8008588:	6829      	ldr	r1, [r5, #0]
 800858a:	68ab      	ldr	r3, [r5, #8]
 800858c:	202e      	movs	r0, #46	; 0x2e
 800858e:	1aca      	subs	r2, r1, r3
 8008590:	4251      	negs	r1, r2
 8008592:	4151      	adcs	r1, r2
 8008594:	f7fd f8e4 	bl	8005760 <_test_assert>
 8008598:	2800      	cmp	r0, #0
 800859a:	d16c      	bne.n	8008676 <mbox1_execute+0x406>
 800859c:	f384 8811 	msr	BASEPRI, r4
 80085a0:	f387 8811 	msr	BASEPRI, r7
 80085a4:	6829      	ldr	r1, [r5, #0]
 80085a6:	68eb      	ldr	r3, [r5, #12]
 80085a8:	202f      	movs	r0, #47	; 0x2f
 80085aa:	1acb      	subs	r3, r1, r3
 80085ac:	4259      	negs	r1, r3
 80085ae:	4159      	adcs	r1, r3
 80085b0:	f7fd f8d6 	bl	8005760 <_test_assert>
 80085b4:	2300      	movs	r3, #0
 80085b6:	f383 8811 	msr	BASEPRI, r3
 80085ba:	b003      	add	sp, #12
 80085bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80085be:	bf00      	nop
 80085c0:	20001878 	.word	0x20001878
 80085c4:	0800cb50 	.word	0x0800cb50
 80085c8:	20001894 	.word	0x20001894
 80085cc:	20001888 	.word	0x20001888
 80085d0:	2101      	movs	r1, #1
 80085d2:	2058      	movs	r0, #88	; 0x58
 80085d4:	f7ff fdcc 	bl	8008170 <chMBPost.constprop.28>
 80085d8:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 80085dc:	fab1 f181 	clz	r1, r1
 80085e0:	2004      	movs	r0, #4
 80085e2:	0949      	lsrs	r1, r1, #5
 80085e4:	f7fd f8bc 	bl	8005760 <_test_assert>
 80085e8:	4604      	mov	r4, r0
 80085ea:	2800      	cmp	r0, #0
 80085ec:	f47f ae72 	bne.w	80082d4 <mbox1_execute+0x64>
 80085f0:	2620      	movs	r6, #32
 80085f2:	f386 8811 	msr	BASEPRI, r6
 80085f6:	2058      	movs	r0, #88	; 0x58
 80085f8:	f7fd fde2 	bl	80061c0 <chMBPostI.constprop.27>
 80085fc:	4601      	mov	r1, r0
 80085fe:	f384 8811 	msr	BASEPRI, r4
 8008602:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 8008606:	fab1 f181 	clz	r1, r1
 800860a:	2005      	movs	r0, #5
 800860c:	0949      	lsrs	r1, r1, #5
 800860e:	f7fd f8a7 	bl	8005760 <_test_assert>
 8008612:	2800      	cmp	r0, #0
 8008614:	f47f ae5e 	bne.w	80082d4 <mbox1_execute+0x64>
 8008618:	2101      	movs	r1, #1
 800861a:	2058      	movs	r0, #88	; 0x58
 800861c:	f7ff fdd0 	bl	80081c0 <chMBPostAhead.constprop.26>
 8008620:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8008624:	fab1 f181 	clz	r1, r1
 8008628:	2006      	movs	r0, #6
 800862a:	0949      	lsrs	r1, r1, #5
 800862c:	f7fd f898 	bl	8005760 <_test_assert>
 8008630:	4604      	mov	r4, r0
 8008632:	2800      	cmp	r0, #0
 8008634:	f47f ae4e 	bne.w	80082d4 <mbox1_execute+0x64>
 8008638:	f386 8811 	msr	BASEPRI, r6
 800863c:	2058      	movs	r0, #88	; 0x58
 800863e:	f7fd fddf 	bl	8006200 <chMBPostAheadI.constprop.25>
 8008642:	4601      	mov	r1, r0
 8008644:	f384 8811 	msr	BASEPRI, r4
 8008648:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 800864c:	fab1 f181 	clz	r1, r1
 8008650:	2007      	movs	r0, #7
 8008652:	0949      	lsrs	r1, r1, #5
 8008654:	f7fd f884 	bl	8005760 <_test_assert>
 8008658:	4604      	mov	r4, r0
 800865a:	2800      	cmp	r0, #0
 800865c:	f47f ae3a 	bne.w	80082d4 <mbox1_execute+0x64>
 8008660:	f386 8811 	msr	BASEPRI, r6
 8008664:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8008666:	2008      	movs	r0, #8
 8008668:	fab1 f181 	clz	r1, r1
 800866c:	0949      	lsrs	r1, r1, #5
 800866e:	f7fd f877 	bl	8005760 <_test_assert>
 8008672:	4607      	mov	r7, r0
 8008674:	b110      	cbz	r0, 800867c <mbox1_execute+0x40c>
 8008676:	f384 8811 	msr	BASEPRI, r4
 800867a:	e62b      	b.n	80082d4 <mbox1_execute+0x64>
 800867c:	f380 8811 	msr	BASEPRI, r0
 8008680:	f386 8811 	msr	BASEPRI, r6
 8008684:	69a9      	ldr	r1, [r5, #24]
 8008686:	2009      	movs	r0, #9
 8008688:	f1a1 0e05 	sub.w	lr, r1, #5
 800868c:	f1de 0100 	rsbs	r1, lr, #0
 8008690:	eb41 010e 	adc.w	r1, r1, lr
 8008694:	f7fd f864 	bl	8005760 <_test_assert>
 8008698:	b110      	cbz	r0, 80086a0 <mbox1_execute+0x430>
 800869a:	f387 8811 	msr	BASEPRI, r7
 800869e:	e619      	b.n	80082d4 <mbox1_execute+0x64>
 80086a0:	f380 8811 	msr	BASEPRI, r0
 80086a4:	f386 8811 	msr	BASEPRI, r6
 80086a8:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80086ac:	eba1 0c03 	sub.w	ip, r1, r3
 80086b0:	f1dc 0100 	rsbs	r1, ip, #0
 80086b4:	f04f 000a 	mov.w	r0, #10
 80086b8:	eb41 010c 	adc.w	r1, r1, ip
 80086bc:	f7fd f850 	bl	8005760 <_test_assert>
 80086c0:	2300      	movs	r3, #0
 80086c2:	2800      	cmp	r0, #0
 80086c4:	f47f af77 	bne.w	80085b6 <mbox1_execute+0x346>
 80086c8:	f383 8811 	msr	BASEPRI, r3
 80086cc:	2405      	movs	r4, #5
 80086ce:	e005      	b.n	80086dc <mbox1_execute+0x46c>
 80086d0:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80086d4:	f7fd f85c 	bl	8005790 <test_emit_token>
 80086d8:	3c01      	subs	r4, #1
 80086da:	d00d      	beq.n	80086f8 <mbox1_execute+0x488>
 80086dc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80086e0:	a801      	add	r0, sp, #4
 80086e2:	f7ff fd9d 	bl	8008220 <chMBFetch.constprop.24>
 80086e6:	fab0 f180 	clz	r1, r0
 80086ea:	200b      	movs	r0, #11
 80086ec:	0949      	lsrs	r1, r1, #5
 80086ee:	f7fd f837 	bl	8005760 <_test_assert>
 80086f2:	2800      	cmp	r0, #0
 80086f4:	d0ec      	beq.n	80086d0 <mbox1_execute+0x460>
 80086f6:	e5ed      	b.n	80082d4 <mbox1_execute+0x64>
 80086f8:	4944      	ldr	r1, [pc, #272]	; (800880c <mbox1_execute+0x59c>)
 80086fa:	200c      	movs	r0, #12
 80086fc:	f7fd f808 	bl	8005710 <_test_assert_sequence>
 8008700:	2800      	cmp	r0, #0
 8008702:	f47f ade7 	bne.w	80082d4 <mbox1_execute+0x64>
 8008706:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800870a:	2047      	movs	r0, #71	; 0x47
 800870c:	f7ff fd30 	bl	8008170 <chMBPost.constprop.28>
 8008710:	fab0 f180 	clz	r1, r0
 8008714:	200d      	movs	r0, #13
 8008716:	0949      	lsrs	r1, r1, #5
 8008718:	f7fd f822 	bl	8005760 <_test_assert>
 800871c:	2800      	cmp	r0, #0
 800871e:	f47f add9 	bne.w	80082d4 <mbox1_execute+0x64>
 8008722:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8008726:	a801      	add	r0, sp, #4
 8008728:	f7ff fd7a 	bl	8008220 <chMBFetch.constprop.24>
 800872c:	fab0 f180 	clz	r1, r0
 8008730:	200e      	movs	r0, #14
 8008732:	0949      	lsrs	r1, r1, #5
 8008734:	f7fd f814 	bl	8005760 <_test_assert>
 8008738:	2800      	cmp	r0, #0
 800873a:	f47f adcb 	bne.w	80082d4 <mbox1_execute+0x64>
 800873e:	6829      	ldr	r1, [r5, #0]
 8008740:	68ab      	ldr	r3, [r5, #8]
 8008742:	200f      	movs	r0, #15
 8008744:	1acf      	subs	r7, r1, r3
 8008746:	4279      	negs	r1, r7
 8008748:	4179      	adcs	r1, r7
 800874a:	f7fd f809 	bl	8005760 <_test_assert>
 800874e:	2800      	cmp	r0, #0
 8008750:	f47f adc0 	bne.w	80082d4 <mbox1_execute+0x64>
 8008754:	6829      	ldr	r1, [r5, #0]
 8008756:	68eb      	ldr	r3, [r5, #12]
 8008758:	2010      	movs	r0, #16
 800875a:	1ace      	subs	r6, r1, r3
 800875c:	4271      	negs	r1, r6
 800875e:	4171      	adcs	r1, r6
 8008760:	f7fc fffe 	bl	8005760 <_test_assert>
 8008764:	2800      	cmp	r0, #0
 8008766:	f47f adb5 	bne.w	80082d4 <mbox1_execute+0x64>
 800876a:	2101      	movs	r1, #1
 800876c:	a801      	add	r0, sp, #4
 800876e:	f7ff fd57 	bl	8008220 <chMBFetch.constprop.24>
 8008772:	3001      	adds	r0, #1
 8008774:	4241      	negs	r1, r0
 8008776:	4141      	adcs	r1, r0
 8008778:	2011      	movs	r0, #17
 800877a:	f7fc fff1 	bl	8005760 <_test_assert>
 800877e:	2800      	cmp	r0, #0
 8008780:	f47f ada8 	bne.w	80082d4 <mbox1_execute+0x64>
 8008784:	2620      	movs	r6, #32
 8008786:	f386 8811 	msr	BASEPRI, r6
 800878a:	a801      	add	r0, sp, #4
 800878c:	f7fd fd58 	bl	8006240 <chMBFetchI.constprop.23>
 8008790:	4601      	mov	r1, r0
 8008792:	f384 8811 	msr	BASEPRI, r4
 8008796:	1c4a      	adds	r2, r1, #1
 8008798:	4251      	negs	r1, r2
 800879a:	4151      	adcs	r1, r2
 800879c:	2012      	movs	r0, #18
 800879e:	f7fc ffdf 	bl	8005760 <_test_assert>
 80087a2:	2800      	cmp	r0, #0
 80087a4:	f47f ad96 	bne.w	80082d4 <mbox1_execute+0x64>
 80087a8:	f386 8811 	msr	BASEPRI, r6
 80087ac:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80087ae:	2013      	movs	r0, #19
 80087b0:	1f4b      	subs	r3, r1, #5
 80087b2:	4259      	negs	r1, r3
 80087b4:	4159      	adcs	r1, r3
 80087b6:	f7fc ffd3 	bl	8005760 <_test_assert>
 80087ba:	2800      	cmp	r0, #0
 80087bc:	f47f aefa 	bne.w	80085b4 <mbox1_execute+0x344>
 80087c0:	2700      	movs	r7, #0
 80087c2:	f387 8811 	msr	BASEPRI, r7
 80087c6:	2420      	movs	r4, #32
 80087c8:	f384 8811 	msr	BASEPRI, r4
 80087cc:	69a9      	ldr	r1, [r5, #24]
 80087ce:	2014      	movs	r0, #20
 80087d0:	fab1 f181 	clz	r1, r1
 80087d4:	0949      	lsrs	r1, r1, #5
 80087d6:	f7fc ffc3 	bl	8005760 <_test_assert>
 80087da:	4606      	mov	r6, r0
 80087dc:	2800      	cmp	r0, #0
 80087de:	f47f af5c 	bne.w	800869a <mbox1_execute+0x42a>
 80087e2:	f380 8811 	msr	BASEPRI, r0
 80087e6:	f384 8811 	msr	BASEPRI, r4
 80087ea:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80087ee:	eba1 0e03 	sub.w	lr, r1, r3
 80087f2:	f1de 0100 	rsbs	r1, lr, #0
 80087f6:	eb41 010e 	adc.w	r1, r1, lr
 80087fa:	2015      	movs	r0, #21
 80087fc:	f7fc ffb0 	bl	8005760 <_test_assert>
 8008800:	2800      	cmp	r0, #0
 8008802:	f43f ad69 	beq.w	80082d8 <mbox1_execute+0x68>
 8008806:	f386 8811 	msr	BASEPRI, r6
 800880a:	e563      	b.n	80082d4 <mbox1_execute+0x64>
 800880c:	0800cb50 	.word	0x0800cb50

08008810 <chThdEnqueueTimeoutS>:
 8008810:	b161      	cbz	r1, 800882c <chThdEnqueueTimeoutS+0x1c>
 8008812:	4602      	mov	r2, r0
 8008814:	4b07      	ldr	r3, [pc, #28]	; (8008834 <chThdEnqueueTimeoutS+0x24>)
 8008816:	b410      	push	{r4}
 8008818:	699b      	ldr	r3, [r3, #24]
 800881a:	2004      	movs	r0, #4
 800881c:	601a      	str	r2, [r3, #0]
 800881e:	6854      	ldr	r4, [r2, #4]
 8008820:	605c      	str	r4, [r3, #4]
 8008822:	6023      	str	r3, [r4, #0]
 8008824:	6053      	str	r3, [r2, #4]
 8008826:	bc10      	pop	{r4}
 8008828:	f7ff bb8a 	b.w	8007f40 <chSchGoSleepTimeoutS>
 800882c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008830:	4770      	bx	lr
 8008832:	bf00      	nop
 8008834:	20002158 	.word	0x20002158
	...

08008840 <chOQWriteTimeout>:
 8008840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008844:	b083      	sub	sp, #12
 8008846:	4604      	mov	r4, r0
 8008848:	460d      	mov	r5, r1
 800884a:	4616      	mov	r6, r2
 800884c:	9301      	str	r3, [sp, #4]
 800884e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8008852:	f04f 0920 	mov.w	r9, #32
 8008856:	f389 8811 	msr	BASEPRI, r9
 800885a:	2700      	movs	r7, #0
 800885c:	46ba      	mov	sl, r7
 800885e:	68a3      	ldr	r3, [r4, #8]
 8008860:	f105 0b01 	add.w	fp, r5, #1
 8008864:	1e59      	subs	r1, r3, #1
 8008866:	b1fb      	cbz	r3, 80088a8 <chOQWriteTimeout+0x68>
 8008868:	6963      	ldr	r3, [r4, #20]
 800886a:	60a1      	str	r1, [r4, #8]
 800886c:	1c59      	adds	r1, r3, #1
 800886e:	6161      	str	r1, [r4, #20]
 8008870:	7829      	ldrb	r1, [r5, #0]
 8008872:	7019      	strb	r1, [r3, #0]
 8008874:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 8008878:	4299      	cmp	r1, r3
 800887a:	bf24      	itt	cs
 800887c:	68e3      	ldrcs	r3, [r4, #12]
 800887e:	6163      	strcs	r3, [r4, #20]
 8008880:	f1b8 0f00 	cmp.w	r8, #0
 8008884:	d001      	beq.n	800888a <chOQWriteTimeout+0x4a>
 8008886:	4620      	mov	r0, r4
 8008888:	47c0      	blx	r8
 800888a:	f38a 8811 	msr	BASEPRI, sl
 800888e:	3e01      	subs	r6, #1
 8008890:	f107 0701 	add.w	r7, r7, #1
 8008894:	d012      	beq.n	80088bc <chOQWriteTimeout+0x7c>
 8008896:	f389 8811 	msr	BASEPRI, r9
 800889a:	465d      	mov	r5, fp
 800889c:	68a3      	ldr	r3, [r4, #8]
 800889e:	f105 0b01 	add.w	fp, r5, #1
 80088a2:	1e59      	subs	r1, r3, #1
 80088a4:	2b00      	cmp	r3, #0
 80088a6:	d1df      	bne.n	8008868 <chOQWriteTimeout+0x28>
 80088a8:	9901      	ldr	r1, [sp, #4]
 80088aa:	4620      	mov	r0, r4
 80088ac:	9300      	str	r3, [sp, #0]
 80088ae:	f7ff ffaf 	bl	8008810 <chThdEnqueueTimeoutS>
 80088b2:	9b00      	ldr	r3, [sp, #0]
 80088b4:	2800      	cmp	r0, #0
 80088b6:	d0d2      	beq.n	800885e <chOQWriteTimeout+0x1e>
 80088b8:	f383 8811 	msr	BASEPRI, r3
 80088bc:	4638      	mov	r0, r7
 80088be:	b003      	add	sp, #12
 80088c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080088d0 <writet>:
 80088d0:	3030      	adds	r0, #48	; 0x30
 80088d2:	f7ff bfb5 	b.w	8008840 <chOQWriteTimeout>
 80088d6:	bf00      	nop
	...

080088e0 <write>:
 80088e0:	3030      	adds	r0, #48	; 0x30
 80088e2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80088e6:	f7ff bfab 	b.w	8008840 <chOQWriteTimeout>
 80088ea:	bf00      	nop
 80088ec:	0000      	movs	r0, r0
	...

080088f0 <chOQPutTimeout>:
 80088f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80088f2:	4604      	mov	r4, r0
 80088f4:	460f      	mov	r7, r1
 80088f6:	4616      	mov	r6, r2
 80088f8:	2320      	movs	r3, #32
 80088fa:	f383 8811 	msr	BASEPRI, r3
 80088fe:	e005      	b.n	800890c <chOQPutTimeout+0x1c>
 8008900:	4631      	mov	r1, r6
 8008902:	4620      	mov	r0, r4
 8008904:	f7ff ff84 	bl	8008810 <chThdEnqueueTimeoutS>
 8008908:	2800      	cmp	r0, #0
 800890a:	db16      	blt.n	800893a <chOQPutTimeout+0x4a>
 800890c:	68a5      	ldr	r5, [r4, #8]
 800890e:	2d00      	cmp	r5, #0
 8008910:	d0f6      	beq.n	8008900 <chOQPutTimeout+0x10>
 8008912:	6963      	ldr	r3, [r4, #20]
 8008914:	3d01      	subs	r5, #1
 8008916:	1c5a      	adds	r2, r3, #1
 8008918:	6162      	str	r2, [r4, #20]
 800891a:	60a5      	str	r5, [r4, #8]
 800891c:	701f      	strb	r7, [r3, #0]
 800891e:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8008922:	429a      	cmp	r2, r3
 8008924:	bf24      	itt	cs
 8008926:	68e3      	ldrcs	r3, [r4, #12]
 8008928:	6163      	strcs	r3, [r4, #20]
 800892a:	69e3      	ldr	r3, [r4, #28]
 800892c:	b10b      	cbz	r3, 8008932 <chOQPutTimeout+0x42>
 800892e:	4620      	mov	r0, r4
 8008930:	4798      	blx	r3
 8008932:	2000      	movs	r0, #0
 8008934:	f380 8811 	msr	BASEPRI, r0
 8008938:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800893a:	f385 8811 	msr	BASEPRI, r5
 800893e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08008940 <thread2.lto_priv.85>:
 8008940:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8008944:	2100      	movs	r1, #0
 8008946:	4801      	ldr	r0, [pc, #4]	; (800894c <thread2.lto_priv.85+0xc>)
 8008948:	f7ff bfd2 	b.w	80088f0 <chOQPutTimeout>
 800894c:	200018ac 	.word	0x200018ac

08008950 <putt>:
 8008950:	3030      	adds	r0, #48	; 0x30
 8008952:	f7ff bfcd 	b.w	80088f0 <chOQPutTimeout>
 8008956:	bf00      	nop
	...

08008960 <put>:
 8008960:	3030      	adds	r0, #48	; 0x30
 8008962:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008966:	f7ff bfc3 	b.w	80088f0 <chOQPutTimeout>
 800896a:	bf00      	nop
 800896c:	0000      	movs	r0, r0
	...

08008970 <chIQReadTimeout>:
 8008970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008974:	4604      	mov	r4, r0
 8008976:	b083      	sub	sp, #12
 8008978:	4689      	mov	r9, r1
 800897a:	4693      	mov	fp, r2
 800897c:	461d      	mov	r5, r3
 800897e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8008982:	2720      	movs	r7, #32
 8008984:	f387 8811 	msr	BASEPRI, r7
 8008988:	2600      	movs	r6, #0
 800898a:	46b2      	mov	sl, r6
 800898c:	9701      	str	r7, [sp, #4]
 800898e:	f1b8 0f00 	cmp.w	r8, #0
 8008992:	d007      	beq.n	80089a4 <chIQReadTimeout+0x34>
 8008994:	4620      	mov	r0, r4
 8008996:	47c0      	blx	r8
 8008998:	e004      	b.n	80089a4 <chIQReadTimeout+0x34>
 800899a:	4629      	mov	r1, r5
 800899c:	4620      	mov	r0, r4
 800899e:	f7ff ff37 	bl	8008810 <chThdEnqueueTimeoutS>
 80089a2:	b9c8      	cbnz	r0, 80089d8 <chIQReadTimeout+0x68>
 80089a4:	68a7      	ldr	r7, [r4, #8]
 80089a6:	2f00      	cmp	r7, #0
 80089a8:	d0f7      	beq.n	800899a <chIQReadTimeout+0x2a>
 80089aa:	69a2      	ldr	r2, [r4, #24]
 80089ac:	3f01      	subs	r7, #1
 80089ae:	1c51      	adds	r1, r2, #1
 80089b0:	61a1      	str	r1, [r4, #24]
 80089b2:	60a7      	str	r7, [r4, #8]
 80089b4:	7813      	ldrb	r3, [r2, #0]
 80089b6:	f809 3b01 	strb.w	r3, [r9], #1
 80089ba:	6923      	ldr	r3, [r4, #16]
 80089bc:	69a2      	ldr	r2, [r4, #24]
 80089be:	429a      	cmp	r2, r3
 80089c0:	bf24      	itt	cs
 80089c2:	68e3      	ldrcs	r3, [r4, #12]
 80089c4:	61a3      	strcs	r3, [r4, #24]
 80089c6:	f38a 8811 	msr	BASEPRI, sl
 80089ca:	3601      	adds	r6, #1
 80089cc:	45b3      	cmp	fp, r6
 80089ce:	d005      	beq.n	80089dc <chIQReadTimeout+0x6c>
 80089d0:	9b01      	ldr	r3, [sp, #4]
 80089d2:	f383 8811 	msr	BASEPRI, r3
 80089d6:	e7da      	b.n	800898e <chIQReadTimeout+0x1e>
 80089d8:	f387 8811 	msr	BASEPRI, r7
 80089dc:	4630      	mov	r0, r6
 80089de:	b003      	add	sp, #12
 80089e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080089f0 <readt>:
 80089f0:	300c      	adds	r0, #12
 80089f2:	f7ff bfbd 	b.w	8008970 <chIQReadTimeout>
 80089f6:	bf00      	nop
	...

08008a00 <read>:
 8008a00:	300c      	adds	r0, #12
 8008a02:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008a06:	f7ff bfb3 	b.w	8008970 <chIQReadTimeout>
 8008a0a:	bf00      	nop
 8008a0c:	0000      	movs	r0, r0
	...

08008a10 <chIQGetTimeout>:
 8008a10:	b570      	push	{r4, r5, r6, lr}
 8008a12:	2320      	movs	r3, #32
 8008a14:	460e      	mov	r6, r1
 8008a16:	4604      	mov	r4, r0
 8008a18:	f383 8811 	msr	BASEPRI, r3
 8008a1c:	69c3      	ldr	r3, [r0, #28]
 8008a1e:	b13b      	cbz	r3, 8008a30 <chIQGetTimeout+0x20>
 8008a20:	4798      	blx	r3
 8008a22:	e005      	b.n	8008a30 <chIQGetTimeout+0x20>
 8008a24:	4631      	mov	r1, r6
 8008a26:	4620      	mov	r0, r4
 8008a28:	f7ff fef2 	bl	8008810 <chThdEnqueueTimeoutS>
 8008a2c:	2800      	cmp	r0, #0
 8008a2e:	db13      	blt.n	8008a58 <chIQGetTimeout+0x48>
 8008a30:	68a5      	ldr	r5, [r4, #8]
 8008a32:	2d00      	cmp	r5, #0
 8008a34:	d0f6      	beq.n	8008a24 <chIQGetTimeout+0x14>
 8008a36:	69a2      	ldr	r2, [r4, #24]
 8008a38:	6921      	ldr	r1, [r4, #16]
 8008a3a:	1c53      	adds	r3, r2, #1
 8008a3c:	428b      	cmp	r3, r1
 8008a3e:	61a3      	str	r3, [r4, #24]
 8008a40:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8008a44:	bf28      	it	cs
 8008a46:	68e3      	ldrcs	r3, [r4, #12]
 8008a48:	60a5      	str	r5, [r4, #8]
 8008a4a:	7810      	ldrb	r0, [r2, #0]
 8008a4c:	bf28      	it	cs
 8008a4e:	61a3      	strcs	r3, [r4, #24]
 8008a50:	2300      	movs	r3, #0
 8008a52:	f383 8811 	msr	BASEPRI, r3
 8008a56:	bd70      	pop	{r4, r5, r6, pc}
 8008a58:	f385 8811 	msr	BASEPRI, r5
 8008a5c:	bd70      	pop	{r4, r5, r6, pc}
 8008a5e:	bf00      	nop

08008a60 <thread1.lto_priv.79>:
 8008a60:	f44f 71c8 	mov.w	r1, #400	; 0x190
 8008a64:	4801      	ldr	r0, [pc, #4]	; (8008a6c <thread1.lto_priv.79+0xc>)
 8008a66:	f7ff bfd3 	b.w	8008a10 <chIQGetTimeout>
 8008a6a:	bf00      	nop
 8008a6c:	20001814 	.word	0x20001814

08008a70 <gett>:
 8008a70:	300c      	adds	r0, #12
 8008a72:	f7ff bfcd 	b.w	8008a10 <chIQGetTimeout>
 8008a76:	bf00      	nop
	...

08008a80 <get>:
 8008a80:	300c      	adds	r0, #12
 8008a82:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8008a86:	f7ff bfc3 	b.w	8008a10 <chIQGetTimeout>
 8008a8a:	bf00      	nop
 8008a8c:	0000      	movs	r0, r0
	...

08008a90 <chThdSleep>:
 8008a90:	b508      	push	{r3, lr}
 8008a92:	4601      	mov	r1, r0
 8008a94:	2320      	movs	r3, #32
 8008a96:	f383 8811 	msr	BASEPRI, r3
 8008a9a:	2008      	movs	r0, #8
 8008a9c:	f7ff fa50 	bl	8007f40 <chSchGoSleepTimeoutS>
 8008aa0:	2300      	movs	r3, #0
 8008aa2:	f383 8811 	msr	BASEPRI, r3
 8008aa6:	bd08      	pop	{r3, pc}
	...

08008ab0 <Thread1>:
 8008ab0:	2602      	movs	r6, #2
 8008ab2:	46b0      	mov	r8, r6
 8008ab4:	4b0b      	ldr	r3, [pc, #44]	; (8008ae4 <Thread1+0x34>)
 8008ab6:	4a0c      	ldr	r2, [pc, #48]	; (8008ae8 <Thread1+0x38>)
 8008ab8:	699b      	ldr	r3, [r3, #24]
 8008aba:	b580      	push	{r7, lr}
 8008abc:	4d0b      	ldr	r5, [pc, #44]	; (8008aec <Thread1+0x3c>)
 8008abe:	4f0c      	ldr	r7, [pc, #48]	; (8008af0 <Thread1+0x40>)
 8008ac0:	619a      	str	r2, [r3, #24]
 8008ac2:	783b      	ldrb	r3, [r7, #0]
 8008ac4:	f8c5 8014 	str.w	r8, [r5, #20]
 8008ac8:	2b04      	cmp	r3, #4
 8008aca:	bf14      	ite	ne
 8008acc:	f44f 747a 	movne.w	r4, #1000	; 0x3e8
 8008ad0:	f44f 74fa 	moveq.w	r4, #500	; 0x1f4
 8008ad4:	4620      	mov	r0, r4
 8008ad6:	f7ff ffdb 	bl	8008a90 <chThdSleep>
 8008ada:	4620      	mov	r0, r4
 8008adc:	612e      	str	r6, [r5, #16]
 8008ade:	f7ff ffd7 	bl	8008a90 <chThdSleep>
 8008ae2:	e7ee      	b.n	8008ac2 <Thread1+0x12>
 8008ae4:	20002158 	.word	0x20002158
 8008ae8:	0800c590 	.word	0x0800c590
 8008aec:	40010c00 	.word	0x40010c00
 8008af0:	200020d0 	.word	0x200020d0
	...

08008b00 <sys1_execute>:
 8008b00:	b510      	push	{r4, lr}
 8008b02:	b086      	sub	sp, #24
 8008b04:	f7fd fc8c 	bl	8006420 <chSysGetStatusAndLockX>
 8008b08:	b908      	cbnz	r0, 8008b0e <sys1_execute+0xe>
 8008b0a:	f7fe fa61 	bl	8006fd0 <chSysRestoreStatusX.part.3>
 8008b0e:	2320      	movs	r3, #32
 8008b10:	f383 8811 	msr	BASEPRI, r3
 8008b14:	f7fd fc84 	bl	8006420 <chSysGetStatusAndLockX>
 8008b18:	b908      	cbnz	r0, 8008b1e <sys1_execute+0x1e>
 8008b1a:	f7fe fa59 	bl	8006fd0 <chSysRestoreStatusX.part.3>
 8008b1e:	2300      	movs	r3, #0
 8008b20:	f383 8811 	msr	BASEPRI, r3
 8008b24:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8008b28:	b913      	cbnz	r3, 8008b30 <sys1_execute+0x30>
 8008b2a:	2320      	movs	r3, #32
 8008b2c:	f383 8811 	msr	BASEPRI, r3
 8008b30:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8008b34:	b913      	cbnz	r3, 8008b3c <sys1_execute+0x3c>
 8008b36:	2320      	movs	r3, #32
 8008b38:	f383 8811 	msr	BASEPRI, r3
 8008b3c:	2300      	movs	r3, #0
 8008b3e:	f383 8811 	msr	BASEPRI, r3
 8008b42:	2220      	movs	r2, #32
 8008b44:	f382 8811 	msr	BASEPRI, r2
 8008b48:	f3ef 8212 	mrs	r2, BASEPRI_MAX
 8008b4c:	b10a      	cbz	r2, 8008b52 <sys1_execute+0x52>
 8008b4e:	f383 8811 	msr	BASEPRI, r3
 8008b52:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8008b56:	b113      	cbz	r3, 8008b5e <sys1_execute+0x5e>
 8008b58:	2300      	movs	r3, #0
 8008b5a:	f383 8811 	msr	BASEPRI, r3
 8008b5e:	2200      	movs	r2, #0
 8008b60:	2320      	movs	r3, #32
 8008b62:	9204      	str	r2, [sp, #16]
 8008b64:	f383 8811 	msr	BASEPRI, r3
 8008b68:	9b04      	ldr	r3, [sp, #16]
 8008b6a:	ac01      	add	r4, sp, #4
 8008b6c:	b113      	cbz	r3, 8008b74 <sys1_execute+0x74>
 8008b6e:	4620      	mov	r0, r4
 8008b70:	f7fd fbb6 	bl	80062e0 <chVTDoResetI>
 8008b74:	4620      	mov	r0, r4
 8008b76:	2300      	movs	r3, #0
 8008b78:	4a0b      	ldr	r2, [pc, #44]	; (8008ba8 <sys1_execute+0xa8>)
 8008b7a:	2101      	movs	r1, #1
 8008b7c:	f7fd fbf0 	bl	8006360 <chVTDoSetI>
 8008b80:	2400      	movs	r4, #0
 8008b82:	f384 8811 	msr	BASEPRI, r4
 8008b86:	200a      	movs	r0, #10
 8008b88:	f7ff ff82 	bl	8008a90 <chThdSleep>
 8008b8c:	2320      	movs	r3, #32
 8008b8e:	f383 8811 	msr	BASEPRI, r3
 8008b92:	9904      	ldr	r1, [sp, #16]
 8008b94:	f384 8811 	msr	BASEPRI, r4
 8008b98:	fab1 f181 	clz	r1, r1
 8008b9c:	2001      	movs	r0, #1
 8008b9e:	0949      	lsrs	r1, r1, #5
 8008ba0:	f7fc fdde 	bl	8005760 <_test_assert>
 8008ba4:	b006      	add	sp, #24
 8008ba6:	bd10      	pop	{r4, pc}
 8008ba8:	08007b11 	.word	0x08007b11
 8008bac:	00000000 	.word	0x00000000

08008bb0 <thread1.lto_priv.78>:
 8008bb0:	b510      	push	{r4, lr}
 8008bb2:	4604      	mov	r4, r0
 8008bb4:	2064      	movs	r0, #100	; 0x64
 8008bb6:	f7ff ff6b 	bl	8008a90 <chThdSleep>
 8008bba:	2320      	movs	r3, #32
 8008bbc:	f383 8811 	msr	BASEPRI, r3
 8008bc0:	2101      	movs	r1, #1
 8008bc2:	4620      	mov	r0, r4
 8008bc4:	f7fd fa4c 	bl	8006060 <chEvtSignalI>
 8008bc8:	f7fe f8fa 	bl	8006dc0 <chSchRescheduleS>
 8008bcc:	2300      	movs	r3, #0
 8008bce:	f383 8811 	msr	BASEPRI, r3
 8008bd2:	bd10      	pop	{r4, pc}
	...

08008be0 <thread2.lto_priv.84>:
 8008be0:	b538      	push	{r3, r4, r5, lr}
 8008be2:	2520      	movs	r5, #32
 8008be4:	f385 8811 	msr	BASEPRI, r5
 8008be8:	2100      	movs	r1, #0
 8008bea:	480b      	ldr	r0, [pc, #44]	; (8008c18 <thread2.lto_priv.84+0x38>)
 8008bec:	f7fd fa50 	bl	8006090 <chEvtBroadcastFlagsI>
 8008bf0:	2400      	movs	r4, #0
 8008bf2:	f7fe f8e5 	bl	8006dc0 <chSchRescheduleS>
 8008bf6:	f384 8811 	msr	BASEPRI, r4
 8008bfa:	2064      	movs	r0, #100	; 0x64
 8008bfc:	f7ff ff48 	bl	8008a90 <chThdSleep>
 8008c00:	f385 8811 	msr	BASEPRI, r5
 8008c04:	4805      	ldr	r0, [pc, #20]	; (8008c1c <thread2.lto_priv.84+0x3c>)
 8008c06:	4621      	mov	r1, r4
 8008c08:	f7fd fa42 	bl	8006090 <chEvtBroadcastFlagsI>
 8008c0c:	f7fe f8d8 	bl	8006dc0 <chSchRescheduleS>
 8008c10:	f384 8811 	msr	BASEPRI, r4
 8008c14:	bd38      	pop	{r3, r4, r5, pc}
 8008c16:	bf00      	nop
 8008c18:	2000180c 	.word	0x2000180c
 8008c1c:	20001810 	.word	0x20001810

08008c20 <thread2.lto_priv.83>:
 8008c20:	b508      	push	{r3, lr}
 8008c22:	2064      	movs	r0, #100	; 0x64
 8008c24:	f7ff ff34 	bl	8008a90 <chThdSleep>
 8008c28:	2320      	movs	r3, #32
 8008c2a:	f383 8811 	msr	BASEPRI, r3
 8008c2e:	4804      	ldr	r0, [pc, #16]	; (8008c40 <thread2.lto_priv.83+0x20>)
 8008c30:	f7fd faae 	bl	8006190 <chSemSignalI>
 8008c34:	f7fe f8c4 	bl	8006dc0 <chSchRescheduleS>
 8008c38:	2300      	movs	r3, #0
 8008c3a:	f383 8811 	msr	BASEPRI, r3
 8008c3e:	bd08      	pop	{r3, pc}
 8008c40:	200018d0 	.word	0x200018d0
	...

08008c50 <test_wait_tick>:
 8008c50:	b508      	push	{r3, lr}
 8008c52:	2001      	movs	r0, #1
 8008c54:	f7ff ff1c 	bl	8008a90 <chThdSleep>
 8008c58:	2320      	movs	r3, #32
 8008c5a:	f383 8811 	msr	BASEPRI, r3
 8008c5e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8008c62:	2300      	movs	r3, #0
 8008c64:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8008c66:	f383 8811 	msr	BASEPRI, r3
 8008c6a:	b280      	uxth	r0, r0
 8008c6c:	bd08      	pop	{r3, pc}
 8008c6e:	bf00      	nop

08008c70 <bmk10_execute>:
 8008c70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008c74:	2400      	movs	r4, #0
 8008c76:	f7ff ffeb 	bl	8008c50 <test_wait_tick>
 8008c7a:	46a2      	mov	sl, r4
 8008c7c:	f7fd fbb0 	bl	80063e0 <test_start_timer.constprop.3>
 8008c80:	f04f 0920 	mov.w	r9, #32
 8008c84:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8008cf0 <bmk10_execute+0x80>
 8008c88:	4f14      	ldr	r7, [pc, #80]	; (8008cdc <bmk10_execute+0x6c>)
 8008c8a:	4e15      	ldr	r6, [pc, #84]	; (8008ce0 <bmk10_execute+0x70>)
 8008c8c:	4d15      	ldr	r5, [pc, #84]	; (8008ce4 <bmk10_execute+0x74>)
 8008c8e:	f389 8811 	msr	BASEPRI, r9
 8008c92:	2300      	movs	r3, #0
 8008c94:	463a      	mov	r2, r7
 8008c96:	4630      	mov	r0, r6
 8008c98:	2101      	movs	r1, #1
 8008c9a:	f7fd fb61 	bl	8006360 <chVTDoSetI>
 8008c9e:	463a      	mov	r2, r7
 8008ca0:	2300      	movs	r3, #0
 8008ca2:	f242 7110 	movw	r1, #10000	; 0x2710
 8008ca6:	4628      	mov	r0, r5
 8008ca8:	f7fd fb5a 	bl	8006360 <chVTDoSetI>
 8008cac:	4630      	mov	r0, r6
 8008cae:	f7fd fb17 	bl	80062e0 <chVTDoResetI>
 8008cb2:	4628      	mov	r0, r5
 8008cb4:	f7fd fb14 	bl	80062e0 <chVTDoResetI>
 8008cb8:	f38a 8811 	msr	BASEPRI, sl
 8008cbc:	f898 3000 	ldrb.w	r3, [r8]
 8008cc0:	3401      	adds	r4, #1
 8008cc2:	2b00      	cmp	r3, #0
 8008cc4:	d0e3      	beq.n	8008c8e <bmk10_execute+0x1e>
 8008cc6:	4808      	ldr	r0, [pc, #32]	; (8008ce8 <bmk10_execute+0x78>)
 8008cc8:	f7fc fdba 	bl	8005840 <test_print>
 8008ccc:	0060      	lsls	r0, r4, #1
 8008cce:	f7fc fcbf 	bl	8005650 <test_printn>
 8008cd2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008cd6:	4805      	ldr	r0, [pc, #20]	; (8008cec <bmk10_execute+0x7c>)
 8008cd8:	f7fc bd92 	b.w	8005800 <test_println>
 8008cdc:	08005351 	.word	0x08005351
 8008ce0:	20002a80 	.word	0x20002a80
 8008ce4:	20002a94 	.word	0x20002a94
 8008ce8:	0800c5e0 	.word	0x0800c5e0
 8008cec:	0800c5f0 	.word	0x0800c5f0
 8008cf0:	20002a40 	.word	0x20002a40
	...

08008d00 <bmk9_execute>:
 8008d00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008d02:	2300      	movs	r3, #0
 8008d04:	461d      	mov	r5, r3
 8008d06:	4a25      	ldr	r2, [pc, #148]	; (8008d9c <bmk9_execute+0x9c>)
 8008d08:	4c25      	ldr	r4, [pc, #148]	; (8008da0 <bmk9_execute+0xa0>)
 8008d0a:	f102 0110 	add.w	r1, r2, #16
 8008d0e:	6121      	str	r1, [r4, #16]
 8008d10:	60e2      	str	r2, [r4, #12]
 8008d12:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8008d16:	60a3      	str	r3, [r4, #8]
 8008d18:	e9c4 3307 	strd	r3, r3, [r4, #28]
 8008d1c:	e9c4 4400 	strd	r4, r4, [r4]
 8008d20:	462f      	mov	r7, r5
 8008d22:	f7ff ff95 	bl	8008c50 <test_wait_tick>
 8008d26:	f7fd fb5b 	bl	80063e0 <test_start_timer.constprop.3>
 8008d2a:	4e1e      	ldr	r6, [pc, #120]	; (8008da4 <bmk9_execute+0xa4>)
 8008d2c:	2320      	movs	r3, #32
 8008d2e:	f383 8811 	msr	BASEPRI, r3
 8008d32:	2100      	movs	r1, #0
 8008d34:	4620      	mov	r0, r4
 8008d36:	f7fd f93b 	bl	8005fb0 <chIQPutI>
 8008d3a:	4620      	mov	r0, r4
 8008d3c:	2101      	movs	r1, #1
 8008d3e:	f7fd f937 	bl	8005fb0 <chIQPutI>
 8008d42:	4620      	mov	r0, r4
 8008d44:	2102      	movs	r1, #2
 8008d46:	f7fd f933 	bl	8005fb0 <chIQPutI>
 8008d4a:	4620      	mov	r0, r4
 8008d4c:	2103      	movs	r1, #3
 8008d4e:	f7fd f92f 	bl	8005fb0 <chIQPutI>
 8008d52:	f387 8811 	msr	BASEPRI, r7
 8008d56:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8008d5a:	4620      	mov	r0, r4
 8008d5c:	f7ff fe58 	bl	8008a10 <chIQGetTimeout>
 8008d60:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8008d64:	4620      	mov	r0, r4
 8008d66:	f7ff fe53 	bl	8008a10 <chIQGetTimeout>
 8008d6a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8008d6e:	4620      	mov	r0, r4
 8008d70:	f7ff fe4e 	bl	8008a10 <chIQGetTimeout>
 8008d74:	4620      	mov	r0, r4
 8008d76:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8008d7a:	f7ff fe49 	bl	8008a10 <chIQGetTimeout>
 8008d7e:	7833      	ldrb	r3, [r6, #0]
 8008d80:	3501      	adds	r5, #1
 8008d82:	2b00      	cmp	r3, #0
 8008d84:	d0d2      	beq.n	8008d2c <bmk9_execute+0x2c>
 8008d86:	4808      	ldr	r0, [pc, #32]	; (8008da8 <bmk9_execute+0xa8>)
 8008d88:	f7fc fd5a 	bl	8005840 <test_print>
 8008d8c:	00a8      	lsls	r0, r5, #2
 8008d8e:	f7fc fc5f 	bl	8005650 <test_printn>
 8008d92:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8008d96:	4805      	ldr	r0, [pc, #20]	; (8008dac <bmk9_execute+0xac>)
 8008d98:	f7fc bd32 	b.w	8005800 <test_println>
 8008d9c:	20002348 	.word	0x20002348
 8008da0:	20002358 	.word	0x20002358
 8008da4:	20002a40 	.word	0x20002a40
 8008da8:	0800c5e0 	.word	0x0800c5e0
 8008dac:	0800c720 	.word	0x0800c720

08008db0 <bmk6_execute>:
 8008db0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008db4:	2400      	movs	r4, #0
 8008db6:	4b14      	ldr	r3, [pc, #80]	; (8008e08 <bmk6_execute+0x58>)
 8008db8:	b083      	sub	sp, #12
 8008dba:	699b      	ldr	r3, [r3, #24]
 8008dbc:	46a1      	mov	r9, r4
 8008dbe:	689d      	ldr	r5, [r3, #8]
 8008dc0:	f7ff ff46 	bl	8008c50 <test_wait_tick>
 8008dc4:	f7fd fb0c 	bl	80063e0 <test_start_timer.constprop.3>
 8008dc8:	f8df 8050 	ldr.w	r8, [pc, #80]	; 8008e1c <bmk6_execute+0x6c>
 8008dcc:	4f0f      	ldr	r7, [pc, #60]	; (8008e0c <bmk6_execute+0x5c>)
 8008dce:	4e10      	ldr	r6, [pc, #64]	; (8008e10 <bmk6_execute+0x60>)
 8008dd0:	3501      	adds	r5, #1
 8008dd2:	463b      	mov	r3, r7
 8008dd4:	f8cd 9000 	str.w	r9, [sp]
 8008dd8:	462a      	mov	r2, r5
 8008dda:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8008dde:	4630      	mov	r0, r6
 8008de0:	f7fe ff8e 	bl	8007d00 <chThdCreateStatic>
 8008de4:	f898 3000 	ldrb.w	r3, [r8]
 8008de8:	3401      	adds	r4, #1
 8008dea:	2b00      	cmp	r3, #0
 8008dec:	d0f1      	beq.n	8008dd2 <bmk6_execute+0x22>
 8008dee:	4809      	ldr	r0, [pc, #36]	; (8008e14 <bmk6_execute+0x64>)
 8008df0:	f7fc fd26 	bl	8005840 <test_print>
 8008df4:	4620      	mov	r0, r4
 8008df6:	f7fc fc2b 	bl	8005650 <test_printn>
 8008dfa:	4807      	ldr	r0, [pc, #28]	; (8008e18 <bmk6_execute+0x68>)
 8008dfc:	b003      	add	sp, #12
 8008dfe:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008e02:	f7fc bcfd 	b.w	8005800 <test_println>
 8008e06:	bf00      	nop
 8008e08:	20002158 	.word	0x20002158
 8008e0c:	0800c2b1 	.word	0x0800c2b1
 8008e10:	200023b0 	.word	0x200023b0
 8008e14:	0800c5e0 	.word	0x0800c5e0
 8008e18:	0800c6e0 	.word	0x0800c6e0
 8008e1c:	20002a40 	.word	0x20002a40

08008e20 <thd4_execute>:
 8008e20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008e22:	f7ff ff15 	bl	8008c50 <test_wait_tick>
 8008e26:	2620      	movs	r6, #32
 8008e28:	f386 8811 	msr	BASEPRI, r6
 8008e2c:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8008e30:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8008e32:	2300      	movs	r3, #0
 8008e34:	b2a4      	uxth	r4, r4
 8008e36:	f383 8811 	msr	BASEPRI, r3
 8008e3a:	20c8      	movs	r0, #200	; 0xc8
 8008e3c:	f7ff fe28 	bl	8008a90 <chThdSleep>
 8008e40:	f104 02cb 	add.w	r2, r4, #203	; 0xcb
 8008e44:	f104 01c8 	add.w	r1, r4, #200	; 0xc8
 8008e48:	b292      	uxth	r2, r2
 8008e4a:	b289      	uxth	r1, r1
 8008e4c:	2001      	movs	r0, #1
 8008e4e:	f7fc fc3f 	bl	80056d0 <_test_assert_time_window>
 8008e52:	b100      	cbz	r0, 8008e56 <thd4_execute+0x36>
 8008e54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008e56:	f386 8811 	msr	BASEPRI, r6
 8008e5a:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8008e5c:	b2a4      	uxth	r4, r4
 8008e5e:	f380 8811 	msr	BASEPRI, r0
 8008e62:	20c8      	movs	r0, #200	; 0xc8
 8008e64:	f7ff fe14 	bl	8008a90 <chThdSleep>
 8008e68:	f104 02cb 	add.w	r2, r4, #203	; 0xcb
 8008e6c:	f104 01c8 	add.w	r1, r4, #200	; 0xc8
 8008e70:	b292      	uxth	r2, r2
 8008e72:	b289      	uxth	r1, r1
 8008e74:	2002      	movs	r0, #2
 8008e76:	f7fc fc2b 	bl	80056d0 <_test_assert_time_window>
 8008e7a:	2800      	cmp	r0, #0
 8008e7c:	d1ea      	bne.n	8008e54 <thd4_execute+0x34>
 8008e7e:	f386 8811 	msr	BASEPRI, r6
 8008e82:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8008e84:	b2a4      	uxth	r4, r4
 8008e86:	f380 8811 	msr	BASEPRI, r0
 8008e8a:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8008e8e:	f7ff fdff 	bl	8008a90 <chThdSleep>
 8008e92:	f204 72d3 	addw	r2, r4, #2003	; 0x7d3
 8008e96:	f504 61fa 	add.w	r1, r4, #2000	; 0x7d0
 8008e9a:	b292      	uxth	r2, r2
 8008e9c:	b289      	uxth	r1, r1
 8008e9e:	2003      	movs	r0, #3
 8008ea0:	f7fc fc16 	bl	80056d0 <_test_assert_time_window>
 8008ea4:	2800      	cmp	r0, #0
 8008ea6:	d1d5      	bne.n	8008e54 <thd4_execute+0x34>
 8008ea8:	f386 8811 	msr	BASEPRI, r6
 8008eac:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8008eae:	b2a4      	uxth	r4, r4
 8008eb0:	f380 8811 	msr	BASEPRI, r0
 8008eb4:	f104 07c8 	add.w	r7, r4, #200	; 0xc8
 8008eb8:	b2bf      	uxth	r7, r7
 8008eba:	f386 8811 	msr	BASEPRI, r6
 8008ebe:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8008ec0:	1a79      	subs	r1, r7, r1
 8008ec2:	b289      	uxth	r1, r1
 8008ec4:	b111      	cbz	r1, 8008ecc <thd4_execute+0xac>
 8008ec6:	2008      	movs	r0, #8
 8008ec8:	f7ff f83a 	bl	8007f40 <chSchGoSleepTimeoutS>
 8008ecc:	2300      	movs	r3, #0
 8008ece:	f383 8811 	msr	BASEPRI, r3
 8008ed2:	f104 02cb 	add.w	r2, r4, #203	; 0xcb
 8008ed6:	4639      	mov	r1, r7
 8008ed8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8008edc:	b292      	uxth	r2, r2
 8008ede:	2004      	movs	r0, #4
 8008ee0:	f7fc bbf6 	b.w	80056d0 <_test_assert_time_window>
	...

08008ef0 <chMsgWait>:
 8008ef0:	b538      	push	{r3, r4, r5, lr}
 8008ef2:	2320      	movs	r3, #32
 8008ef4:	f383 8811 	msr	BASEPRI, r3
 8008ef8:	4c0b      	ldr	r4, [pc, #44]	; (8008f28 <chMsgWait+0x38>)
 8008efa:	69a2      	ldr	r2, [r4, #24]
 8008efc:	4613      	mov	r3, r2
 8008efe:	f853 0f28 	ldr.w	r0, [r3, #40]!
 8008f02:	4298      	cmp	r0, r3
 8008f04:	d008      	beq.n	8008f18 <chMsgWait+0x28>
 8008f06:	250d      	movs	r5, #13
 8008f08:	6801      	ldr	r1, [r0, #0]
 8008f0a:	2400      	movs	r4, #0
 8008f0c:	6291      	str	r1, [r2, #40]	; 0x28
 8008f0e:	604b      	str	r3, [r1, #4]
 8008f10:	7705      	strb	r5, [r0, #28]
 8008f12:	f384 8811 	msr	BASEPRI, r4
 8008f16:	bd38      	pop	{r3, r4, r5, pc}
 8008f18:	200e      	movs	r0, #14
 8008f1a:	f7fe ff29 	bl	8007d70 <chSchGoSleepS>
 8008f1e:	69a2      	ldr	r2, [r4, #24]
 8008f20:	6a90      	ldr	r0, [r2, #40]	; 0x28
 8008f22:	f102 0328 	add.w	r3, r2, #40	; 0x28
 8008f26:	e7ee      	b.n	8008f06 <chMsgWait+0x16>
 8008f28:	20002158 	.word	0x20002158
 8008f2c:	00000000 	.word	0x00000000

08008f30 <thread2.lto_priv.86>:
 8008f30:	b570      	push	{r4, r5, r6, lr}
 8008f32:	2620      	movs	r6, #32
 8008f34:	2500      	movs	r5, #0
 8008f36:	f7ff ffdb 	bl	8008ef0 <chMsgWait>
 8008f3a:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8008f3c:	f386 8811 	msr	BASEPRI, r6
 8008f40:	4621      	mov	r1, r4
 8008f42:	f7fe fdfd 	bl	8007b40 <chSchWakeupS>
 8008f46:	f385 8811 	msr	BASEPRI, r5
 8008f4a:	2c00      	cmp	r4, #0
 8008f4c:	d1f3      	bne.n	8008f36 <thread2.lto_priv.86+0x6>
 8008f4e:	bd70      	pop	{r4, r5, r6, pc}

08008f50 <msg1_execute>:
 8008f50:	b570      	push	{r4, r5, r6, lr}
 8008f52:	4a1f      	ldr	r2, [pc, #124]	; (8008fd0 <msg1_execute+0x80>)
 8008f54:	b082      	sub	sp, #8
 8008f56:	6994      	ldr	r4, [r2, #24]
 8008f58:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8008f5c:	68a2      	ldr	r2, [r4, #8]
 8008f5e:	4b1d      	ldr	r3, [pc, #116]	; (8008fd4 <msg1_execute+0x84>)
 8008f60:	3201      	adds	r2, #1
 8008f62:	9400      	str	r4, [sp, #0]
 8008f64:	481c      	ldr	r0, [pc, #112]	; (8008fd8 <msg1_execute+0x88>)
 8008f66:	f7fe fecb 	bl	8007d00 <chThdCreateStatic>
 8008f6a:	4b1c      	ldr	r3, [pc, #112]	; (8008fdc <msg1_execute+0x8c>)
 8008f6c:	2520      	movs	r5, #32
 8008f6e:	6018      	str	r0, [r3, #0]
 8008f70:	f7ff ffbe 	bl	8008ef0 <chMsgWait>
 8008f74:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8008f76:	f385 8811 	msr	BASEPRI, r5
 8008f7a:	4631      	mov	r1, r6
 8008f7c:	f7fe fde0 	bl	8007b40 <chSchWakeupS>
 8008f80:	2400      	movs	r4, #0
 8008f82:	f384 8811 	msr	BASEPRI, r4
 8008f86:	b2f0      	uxtb	r0, r6
 8008f88:	f7fc fc02 	bl	8005790 <test_emit_token>
 8008f8c:	f7ff ffb0 	bl	8008ef0 <chMsgWait>
 8008f90:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8008f92:	f385 8811 	msr	BASEPRI, r5
 8008f96:	4631      	mov	r1, r6
 8008f98:	f7fe fdd2 	bl	8007b40 <chSchWakeupS>
 8008f9c:	f384 8811 	msr	BASEPRI, r4
 8008fa0:	b2f0      	uxtb	r0, r6
 8008fa2:	f7fc fbf5 	bl	8005790 <test_emit_token>
 8008fa6:	f7ff ffa3 	bl	8008ef0 <chMsgWait>
 8008faa:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8008fac:	f385 8811 	msr	BASEPRI, r5
 8008fb0:	4631      	mov	r1, r6
 8008fb2:	f7fe fdc5 	bl	8007b40 <chSchWakeupS>
 8008fb6:	f384 8811 	msr	BASEPRI, r4
 8008fba:	b2f0      	uxtb	r0, r6
 8008fbc:	f7fc fbe8 	bl	8005790 <test_emit_token>
 8008fc0:	2001      	movs	r0, #1
 8008fc2:	4907      	ldr	r1, [pc, #28]	; (8008fe0 <msg1_execute+0x90>)
 8008fc4:	b002      	add	sp, #8
 8008fc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008fca:	f7fc bba1 	b.w	8005710 <_test_assert_sequence>
 8008fce:	bf00      	nop
 8008fd0:	20002158 	.word	0x20002158
 8008fd4:	08009061 	.word	0x08009061
 8008fd8:	200023b0 	.word	0x200023b0
 8008fdc:	20002a44 	.word	0x20002a44
 8008fe0:	0800cb20 	.word	0x0800cb20
	...

08008ff0 <chMsgSend>:
 8008ff0:	4b0e      	ldr	r3, [pc, #56]	; (800902c <chMsgSend+0x3c>)
 8008ff2:	b510      	push	{r4, lr}
 8008ff4:	2220      	movs	r2, #32
 8008ff6:	699c      	ldr	r4, [r3, #24]
 8008ff8:	f382 8811 	msr	BASEPRI, r2
 8008ffc:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8009000:	6222      	str	r2, [r4, #32]
 8009002:	6022      	str	r2, [r4, #0]
 8009004:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8009006:	6321      	str	r1, [r4, #48]	; 0x30
 8009008:	6062      	str	r2, [r4, #4]
 800900a:	6014      	str	r4, [r2, #0]
 800900c:	7f02      	ldrb	r2, [r0, #28]
 800900e:	62c4      	str	r4, [r0, #44]	; 0x2c
 8009010:	2a0e      	cmp	r2, #14
 8009012:	d007      	beq.n	8009024 <chMsgSend+0x34>
 8009014:	200c      	movs	r0, #12
 8009016:	f7fe feab 	bl	8007d70 <chSchGoSleepS>
 800901a:	6a20      	ldr	r0, [r4, #32]
 800901c:	2300      	movs	r3, #0
 800901e:	f383 8811 	msr	BASEPRI, r3
 8009022:	bd10      	pop	{r4, pc}
 8009024:	f7fc ff94 	bl	8005f50 <chSchReadyI>
 8009028:	e7f4      	b.n	8009014 <chMsgSend+0x24>
 800902a:	bf00      	nop
 800902c:	20002158 	.word	0x20002158

08009030 <msg_loop_test>:
 8009030:	b570      	push	{r4, r5, r6, lr}
 8009032:	4605      	mov	r5, r0
 8009034:	2400      	movs	r4, #0
 8009036:	f7ff fe0b 	bl	8008c50 <test_wait_tick>
 800903a:	f7fd f9d1 	bl	80063e0 <test_start_timer.constprop.3>
 800903e:	4e07      	ldr	r6, [pc, #28]	; (800905c <msg_loop_test+0x2c>)
 8009040:	2101      	movs	r1, #1
 8009042:	4628      	mov	r0, r5
 8009044:	f7ff ffd4 	bl	8008ff0 <chMsgSend>
 8009048:	7833      	ldrb	r3, [r6, #0]
 800904a:	3401      	adds	r4, #1
 800904c:	2b00      	cmp	r3, #0
 800904e:	d0f7      	beq.n	8009040 <msg_loop_test+0x10>
 8009050:	4628      	mov	r0, r5
 8009052:	2100      	movs	r1, #0
 8009054:	f7ff ffcc 	bl	8008ff0 <chMsgSend>
 8009058:	4620      	mov	r0, r4
 800905a:	bd70      	pop	{r4, r5, r6, pc}
 800905c:	20002a40 	.word	0x20002a40

08009060 <thread.lto_priv.68>:
 8009060:	b510      	push	{r4, lr}
 8009062:	4604      	mov	r4, r0
 8009064:	2141      	movs	r1, #65	; 0x41
 8009066:	f7ff ffc3 	bl	8008ff0 <chMsgSend>
 800906a:	4620      	mov	r0, r4
 800906c:	2142      	movs	r1, #66	; 0x42
 800906e:	f7ff ffbf 	bl	8008ff0 <chMsgSend>
 8009072:	4620      	mov	r0, r4
 8009074:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009078:	2143      	movs	r1, #67	; 0x43
 800907a:	f7ff bfb9 	b.w	8008ff0 <chMsgSend>
 800907e:	bf00      	nop

08009080 <chMtxLockS>:
 8009080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009082:	4a37      	ldr	r2, [pc, #220]	; (8009160 <chMtxLockS+0xe0>)
 8009084:	6883      	ldr	r3, [r0, #8]
 8009086:	6995      	ldr	r5, [r2, #24]
 8009088:	2b00      	cmp	r3, #0
 800908a:	d03f      	beq.n	800910c <chMtxLockS+0x8c>
 800908c:	68a9      	ldr	r1, [r5, #8]
 800908e:	689a      	ldr	r2, [r3, #8]
 8009090:	4604      	mov	r4, r0
 8009092:	4291      	cmp	r1, r2
 8009094:	d906      	bls.n	80090a4 <chMtxLockS+0x24>
 8009096:	7f1a      	ldrb	r2, [r3, #28]
 8009098:	6099      	str	r1, [r3, #8]
 800909a:	2a06      	cmp	r2, #6
 800909c:	d03b      	beq.n	8009116 <chMtxLockS+0x96>
 800909e:	2a07      	cmp	r2, #7
 80090a0:	d015      	beq.n	80090ce <chMtxLockS+0x4e>
 80090a2:	b342      	cbz	r2, 80090f6 <chMtxLockS+0x76>
 80090a4:	4626      	mov	r6, r4
 80090a6:	4623      	mov	r3, r4
 80090a8:	e003      	b.n	80090b2 <chMtxLockS+0x32>
 80090aa:	6899      	ldr	r1, [r3, #8]
 80090ac:	68aa      	ldr	r2, [r5, #8]
 80090ae:	4291      	cmp	r1, r2
 80090b0:	d32a      	bcc.n	8009108 <chMtxLockS+0x88>
 80090b2:	681b      	ldr	r3, [r3, #0]
 80090b4:	429c      	cmp	r4, r3
 80090b6:	d1f8      	bne.n	80090aa <chMtxLockS+0x2a>
 80090b8:	6873      	ldr	r3, [r6, #4]
 80090ba:	2006      	movs	r0, #6
 80090bc:	e9c5 6300 	strd	r6, r3, [r5]
 80090c0:	601d      	str	r5, [r3, #0]
 80090c2:	6075      	str	r5, [r6, #4]
 80090c4:	622c      	str	r4, [r5, #32]
 80090c6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80090ca:	f7fe be51 	b.w	8007d70 <chSchGoSleepS>
 80090ce:	681f      	ldr	r7, [r3, #0]
 80090d0:	6858      	ldr	r0, [r3, #4]
 80090d2:	6a1e      	ldr	r6, [r3, #32]
 80090d4:	6007      	str	r7, [r0, #0]
 80090d6:	681f      	ldr	r7, [r3, #0]
 80090d8:	4632      	mov	r2, r6
 80090da:	6078      	str	r0, [r7, #4]
 80090dc:	e002      	b.n	80090e4 <chMtxLockS+0x64>
 80090de:	6890      	ldr	r0, [r2, #8]
 80090e0:	4288      	cmp	r0, r1
 80090e2:	d334      	bcc.n	800914e <chMtxLockS+0xce>
 80090e4:	6812      	ldr	r2, [r2, #0]
 80090e6:	4296      	cmp	r6, r2
 80090e8:	d1f9      	bne.n	80090de <chMtxLockS+0x5e>
 80090ea:	6872      	ldr	r2, [r6, #4]
 80090ec:	e9c3 6200 	strd	r6, r2, [r3]
 80090f0:	6013      	str	r3, [r2, #0]
 80090f2:	6073      	str	r3, [r6, #4]
 80090f4:	e7d6      	b.n	80090a4 <chMtxLockS+0x24>
 80090f6:	e9d3 1200 	ldrd	r1, r2, [r3]
 80090fa:	6011      	str	r1, [r2, #0]
 80090fc:	4618      	mov	r0, r3
 80090fe:	681b      	ldr	r3, [r3, #0]
 8009100:	605a      	str	r2, [r3, #4]
 8009102:	f7fc ff25 	bl	8005f50 <chSchReadyI>
 8009106:	e7cd      	b.n	80090a4 <chMtxLockS+0x24>
 8009108:	461e      	mov	r6, r3
 800910a:	e7d5      	b.n	80090b8 <chMtxLockS+0x38>
 800910c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800910e:	e9c0 5302 	strd	r5, r3, [r0, #8]
 8009112:	63a8      	str	r0, [r5, #56]	; 0x38
 8009114:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009116:	681f      	ldr	r7, [r3, #0]
 8009118:	6858      	ldr	r0, [r3, #4]
 800911a:	6a1e      	ldr	r6, [r3, #32]
 800911c:	6007      	str	r7, [r0, #0]
 800911e:	681f      	ldr	r7, [r3, #0]
 8009120:	46b4      	mov	ip, r6
 8009122:	4632      	mov	r2, r6
 8009124:	6078      	str	r0, [r7, #4]
 8009126:	e002      	b.n	800912e <chMtxLockS+0xae>
 8009128:	6890      	ldr	r0, [r2, #8]
 800912a:	4288      	cmp	r0, r1
 800912c:	d316      	bcc.n	800915c <chMtxLockS+0xdc>
 800912e:	6812      	ldr	r2, [r2, #0]
 8009130:	4296      	cmp	r6, r2
 8009132:	d1f9      	bne.n	8009128 <chMtxLockS+0xa8>
 8009134:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8009138:	68a9      	ldr	r1, [r5, #8]
 800913a:	e9c3 c200 	strd	ip, r2, [r3]
 800913e:	6013      	str	r3, [r2, #0]
 8009140:	f8cc 3004 	str.w	r3, [ip, #4]
 8009144:	68b3      	ldr	r3, [r6, #8]
 8009146:	689a      	ldr	r2, [r3, #8]
 8009148:	428a      	cmp	r2, r1
 800914a:	d3a4      	bcc.n	8009096 <chMtxLockS+0x16>
 800914c:	e7aa      	b.n	80090a4 <chMtxLockS+0x24>
 800914e:	4616      	mov	r6, r2
 8009150:	6872      	ldr	r2, [r6, #4]
 8009152:	e9c3 6200 	strd	r6, r2, [r3]
 8009156:	6013      	str	r3, [r2, #0]
 8009158:	6073      	str	r3, [r6, #4]
 800915a:	e7a3      	b.n	80090a4 <chMtxLockS+0x24>
 800915c:	4694      	mov	ip, r2
 800915e:	e7e9      	b.n	8009134 <chMtxLockS+0xb4>
 8009160:	20002158 	.word	0x20002158
	...

08009170 <chMtxLock>:
 8009170:	b508      	push	{r3, lr}
 8009172:	2320      	movs	r3, #32
 8009174:	f383 8811 	msr	BASEPRI, r3
 8009178:	f7ff ff82 	bl	8009080 <chMtxLockS>
 800917c:	2300      	movs	r3, #0
 800917e:	f383 8811 	msr	BASEPRI, r3
 8009182:	bd08      	pop	{r3, pc}
	...

08009190 <bmk12_execute>:
 8009190:	b570      	push	{r4, r5, r6, lr}
 8009192:	f7ff fd5d 	bl	8008c50 <test_wait_tick>
 8009196:	2500      	movs	r5, #0
 8009198:	f7fd f922 	bl	80063e0 <test_start_timer.constprop.3>
 800919c:	4e14      	ldr	r6, [pc, #80]	; (80091f0 <bmk12_execute+0x60>)
 800919e:	4c15      	ldr	r4, [pc, #84]	; (80091f4 <bmk12_execute+0x64>)
 80091a0:	4620      	mov	r0, r4
 80091a2:	f7ff ffe5 	bl	8009170 <chMtxLock>
 80091a6:	4620      	mov	r0, r4
 80091a8:	f7fe fd5a 	bl	8007c60 <chMtxUnlock>
 80091ac:	4620      	mov	r0, r4
 80091ae:	f7ff ffdf 	bl	8009170 <chMtxLock>
 80091b2:	4620      	mov	r0, r4
 80091b4:	f7fe fd54 	bl	8007c60 <chMtxUnlock>
 80091b8:	4620      	mov	r0, r4
 80091ba:	f7ff ffd9 	bl	8009170 <chMtxLock>
 80091be:	4620      	mov	r0, r4
 80091c0:	f7fe fd4e 	bl	8007c60 <chMtxUnlock>
 80091c4:	4620      	mov	r0, r4
 80091c6:	f7ff ffd3 	bl	8009170 <chMtxLock>
 80091ca:	4620      	mov	r0, r4
 80091cc:	f7fe fd48 	bl	8007c60 <chMtxUnlock>
 80091d0:	7833      	ldrb	r3, [r6, #0]
 80091d2:	3501      	adds	r5, #1
 80091d4:	2b00      	cmp	r3, #0
 80091d6:	d0e3      	beq.n	80091a0 <bmk12_execute+0x10>
 80091d8:	4807      	ldr	r0, [pc, #28]	; (80091f8 <bmk12_execute+0x68>)
 80091da:	f7fc fb31 	bl	8005840 <test_print>
 80091de:	00a8      	lsls	r0, r5, #2
 80091e0:	f7fc fa36 	bl	8005650 <test_printn>
 80091e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80091e8:	4804      	ldr	r0, [pc, #16]	; (80091fc <bmk12_execute+0x6c>)
 80091ea:	f7fc bb09 	b.w	8005800 <test_println>
 80091ee:	bf00      	nop
 80091f0:	20002a40 	.word	0x20002a40
 80091f4:	2000238c 	.word	0x2000238c
 80091f8:	0800c5e0 	.word	0x0800c5e0
 80091fc:	0800c610 	.word	0x0800c610

08009200 <thread11>:
 8009200:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009202:	4607      	mov	r7, r0
 8009204:	481c      	ldr	r0, [pc, #112]	; (8009278 <thread11+0x78>)
 8009206:	f7ff ffb3 	bl	8009170 <chMtxLock>
 800920a:	481c      	ldr	r0, [pc, #112]	; (800927c <thread11+0x7c>)
 800920c:	f7ff ffb0 	bl	8009170 <chMtxLock>
 8009210:	2320      	movs	r3, #32
 8009212:	f383 8811 	msr	BASEPRI, r3
 8009216:	4d1a      	ldr	r5, [pc, #104]	; (8009280 <thread11+0x80>)
 8009218:	69ab      	ldr	r3, [r5, #24]
 800921a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800921c:	4630      	mov	r0, r6
 800921e:	f7fc ff8f 	bl	8006140 <chMtxUnlockS>
 8009222:	4a18      	ldr	r2, [pc, #96]	; (8009284 <thread11+0x84>)
 8009224:	69ac      	ldr	r4, [r5, #24]
 8009226:	4610      	mov	r0, r2
 8009228:	4613      	mov	r3, r2
 800922a:	6222      	str	r2, [r4, #32]
 800922c:	e003      	b.n	8009236 <thread11+0x36>
 800922e:	6899      	ldr	r1, [r3, #8]
 8009230:	68a2      	ldr	r2, [r4, #8]
 8009232:	4291      	cmp	r1, r2
 8009234:	d302      	bcc.n	800923c <thread11+0x3c>
 8009236:	681b      	ldr	r3, [r3, #0]
 8009238:	4283      	cmp	r3, r0
 800923a:	d1f8      	bne.n	800922e <thread11+0x2e>
 800923c:	685a      	ldr	r2, [r3, #4]
 800923e:	2007      	movs	r0, #7
 8009240:	e9c4 3200 	strd	r3, r2, [r4]
 8009244:	6014      	str	r4, [r2, #0]
 8009246:	605c      	str	r4, [r3, #4]
 8009248:	f7fe fd92 	bl	8007d70 <chSchGoSleepS>
 800924c:	69ab      	ldr	r3, [r5, #24]
 800924e:	6a1b      	ldr	r3, [r3, #32]
 8009250:	3301      	adds	r3, #1
 8009252:	d002      	beq.n	800925a <thread11+0x5a>
 8009254:	4630      	mov	r0, r6
 8009256:	f7ff ff13 	bl	8009080 <chMtxLockS>
 800925a:	2300      	movs	r3, #0
 800925c:	f383 8811 	msr	BASEPRI, r3
 8009260:	7838      	ldrb	r0, [r7, #0]
 8009262:	f7fc fa95 	bl	8005790 <test_emit_token>
 8009266:	4805      	ldr	r0, [pc, #20]	; (800927c <thread11+0x7c>)
 8009268:	f7fe fcfa 	bl	8007c60 <chMtxUnlock>
 800926c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8009270:	4801      	ldr	r0, [pc, #4]	; (8009278 <thread11+0x78>)
 8009272:	f7fe bcf5 	b.w	8007c60 <chMtxUnlock>
 8009276:	bf00      	nop
 8009278:	20001868 	.word	0x20001868
 800927c:	20001858 	.word	0x20001858
 8009280:	20002158 	.word	0x20002158
 8009284:	20001804 	.word	0x20001804
	...

08009290 <thread10>:
 8009290:	b570      	push	{r4, r5, r6, lr}
 8009292:	4606      	mov	r6, r0
 8009294:	4816      	ldr	r0, [pc, #88]	; (80092f0 <thread10+0x60>)
 8009296:	f7ff ff6b 	bl	8009170 <chMtxLock>
 800929a:	2320      	movs	r3, #32
 800929c:	f383 8811 	msr	BASEPRI, r3
 80092a0:	4b14      	ldr	r3, [pc, #80]	; (80092f4 <thread10+0x64>)
 80092a2:	699c      	ldr	r4, [r3, #24]
 80092a4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 80092a6:	4628      	mov	r0, r5
 80092a8:	f7fc ff4a 	bl	8006140 <chMtxUnlockS>
 80092ac:	4a12      	ldr	r2, [pc, #72]	; (80092f8 <thread10+0x68>)
 80092ae:	4610      	mov	r0, r2
 80092b0:	4613      	mov	r3, r2
 80092b2:	6222      	str	r2, [r4, #32]
 80092b4:	e003      	b.n	80092be <thread10+0x2e>
 80092b6:	6899      	ldr	r1, [r3, #8]
 80092b8:	68a2      	ldr	r2, [r4, #8]
 80092ba:	4291      	cmp	r1, r2
 80092bc:	d302      	bcc.n	80092c4 <thread10+0x34>
 80092be:	681b      	ldr	r3, [r3, #0]
 80092c0:	4283      	cmp	r3, r0
 80092c2:	d1f8      	bne.n	80092b6 <thread10+0x26>
 80092c4:	685a      	ldr	r2, [r3, #4]
 80092c6:	2007      	movs	r0, #7
 80092c8:	e9c4 3200 	strd	r3, r2, [r4]
 80092cc:	6014      	str	r4, [r2, #0]
 80092ce:	605c      	str	r4, [r3, #4]
 80092d0:	f7fe fd4e 	bl	8007d70 <chSchGoSleepS>
 80092d4:	4628      	mov	r0, r5
 80092d6:	f7ff fed3 	bl	8009080 <chMtxLockS>
 80092da:	2300      	movs	r3, #0
 80092dc:	f383 8811 	msr	BASEPRI, r3
 80092e0:	7830      	ldrb	r0, [r6, #0]
 80092e2:	f7fc fa55 	bl	8005790 <test_emit_token>
 80092e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80092ea:	4801      	ldr	r0, [pc, #4]	; (80092f0 <thread10+0x60>)
 80092ec:	f7fe bcb8 	b.w	8007c60 <chMtxUnlock>
 80092f0:	20001858 	.word	0x20001858
 80092f4:	20002158 	.word	0x20002158
 80092f8:	20001804 	.word	0x20001804
 80092fc:	00000000 	.word	0x00000000

08009300 <thread12>:
 8009300:	b538      	push	{r3, r4, r5, lr}
 8009302:	4605      	mov	r5, r0
 8009304:	4c05      	ldr	r4, [pc, #20]	; (800931c <thread12+0x1c>)
 8009306:	4620      	mov	r0, r4
 8009308:	f7ff ff32 	bl	8009170 <chMtxLock>
 800930c:	7828      	ldrb	r0, [r5, #0]
 800930e:	f7fc fa3f 	bl	8005790 <test_emit_token>
 8009312:	4620      	mov	r0, r4
 8009314:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009318:	f7fe bca2 	b.w	8007c60 <chMtxUnlock>
 800931c:	20001868 	.word	0x20001868

08009320 <mtx5_execute>:
 8009320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009322:	4d37      	ldr	r5, [pc, #220]	; (8009400 <mtx5_execute+0xe0>)
 8009324:	2320      	movs	r3, #32
 8009326:	69aa      	ldr	r2, [r5, #24]
 8009328:	6896      	ldr	r6, [r2, #8]
 800932a:	f383 8811 	msr	BASEPRI, r3
 800932e:	4c35      	ldr	r4, [pc, #212]	; (8009404 <mtx5_execute+0xe4>)
 8009330:	68a3      	ldr	r3, [r4, #8]
 8009332:	2b00      	cmp	r3, #0
 8009334:	d057      	beq.n	80093e6 <mtx5_execute+0xc6>
 8009336:	2100      	movs	r1, #0
 8009338:	2300      	movs	r3, #0
 800933a:	f383 8811 	msr	BASEPRI, r3
 800933e:	2001      	movs	r0, #1
 8009340:	f7fc fa0e 	bl	8005760 <_test_assert>
 8009344:	4601      	mov	r1, r0
 8009346:	b100      	cbz	r0, 800934a <mtx5_execute+0x2a>
 8009348:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800934a:	2320      	movs	r3, #32
 800934c:	f383 8811 	msr	BASEPRI, r3
 8009350:	68a3      	ldr	r3, [r4, #8]
 8009352:	2b00      	cmp	r3, #0
 8009354:	d04e      	beq.n	80093f4 <mtx5_execute+0xd4>
 8009356:	2101      	movs	r1, #1
 8009358:	2300      	movs	r3, #0
 800935a:	f383 8811 	msr	BASEPRI, r3
 800935e:	2002      	movs	r0, #2
 8009360:	f7fc f9fe 	bl	8005760 <_test_assert>
 8009364:	4607      	mov	r7, r0
 8009366:	2800      	cmp	r0, #0
 8009368:	d1ee      	bne.n	8009348 <mtx5_execute+0x28>
 800936a:	2320      	movs	r3, #32
 800936c:	f383 8811 	msr	BASEPRI, r3
 8009370:	4824      	ldr	r0, [pc, #144]	; (8009404 <mtx5_execute+0xe4>)
 8009372:	f7fc fee5 	bl	8006140 <chMtxUnlockS>
 8009376:	f387 8811 	msr	BASEPRI, r7
 800937a:	6821      	ldr	r1, [r4, #0]
 800937c:	2003      	movs	r0, #3
 800937e:	1b09      	subs	r1, r1, r4
 8009380:	fab1 f181 	clz	r1, r1
 8009384:	0949      	lsrs	r1, r1, #5
 8009386:	f7fc f9eb 	bl	8005760 <_test_assert>
 800938a:	2800      	cmp	r0, #0
 800938c:	d1dc      	bne.n	8009348 <mtx5_execute+0x28>
 800938e:	68a1      	ldr	r1, [r4, #8]
 8009390:	2004      	movs	r0, #4
 8009392:	fab1 f181 	clz	r1, r1
 8009396:	0949      	lsrs	r1, r1, #5
 8009398:	f7fc f9e2 	bl	8005760 <_test_assert>
 800939c:	2800      	cmp	r0, #0
 800939e:	d1d3      	bne.n	8009348 <mtx5_execute+0x28>
 80093a0:	69ab      	ldr	r3, [r5, #24]
 80093a2:	2005      	movs	r0, #5
 80093a4:	6899      	ldr	r1, [r3, #8]
 80093a6:	1b89      	subs	r1, r1, r6
 80093a8:	fab1 f181 	clz	r1, r1
 80093ac:	0949      	lsrs	r1, r1, #5
 80093ae:	f7fc f9d7 	bl	8005760 <_test_assert>
 80093b2:	2800      	cmp	r0, #0
 80093b4:	d1c8      	bne.n	8009348 <mtx5_execute+0x28>
 80093b6:	4813      	ldr	r0, [pc, #76]	; (8009404 <mtx5_execute+0xe4>)
 80093b8:	f7ff feda 	bl	8009170 <chMtxLock>
 80093bc:	f7fd fd28 	bl	8006e10 <chMtxUnlockAll>
 80093c0:	6821      	ldr	r1, [r4, #0]
 80093c2:	2006      	movs	r0, #6
 80093c4:	1b09      	subs	r1, r1, r4
 80093c6:	fab1 f181 	clz	r1, r1
 80093ca:	0949      	lsrs	r1, r1, #5
 80093cc:	f7fc f9c8 	bl	8005760 <_test_assert>
 80093d0:	2800      	cmp	r0, #0
 80093d2:	d1b9      	bne.n	8009348 <mtx5_execute+0x28>
 80093d4:	68a1      	ldr	r1, [r4, #8]
 80093d6:	2007      	movs	r0, #7
 80093d8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80093dc:	fab1 f181 	clz	r1, r1
 80093e0:	0949      	lsrs	r1, r1, #5
 80093e2:	f7fc b9bd 	b.w	8005760 <_test_assert>
 80093e6:	69ab      	ldr	r3, [r5, #24]
 80093e8:	2101      	movs	r1, #1
 80093ea:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80093ec:	639c      	str	r4, [r3, #56]	; 0x38
 80093ee:	e9c4 3202 	strd	r3, r2, [r4, #8]
 80093f2:	e7a1      	b.n	8009338 <mtx5_execute+0x18>
 80093f4:	69ab      	ldr	r3, [r5, #24]
 80093f6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80093f8:	639c      	str	r4, [r3, #56]	; 0x38
 80093fa:	e9c4 3202 	strd	r3, r2, [r4, #8]
 80093fe:	e7ab      	b.n	8009358 <mtx5_execute+0x38>
 8009400:	20002158 	.word	0x20002158
 8009404:	20001858 	.word	0x20001858
	...

08009410 <thread4a>:
 8009410:	b510      	push	{r4, lr}
 8009412:	4c06      	ldr	r4, [pc, #24]	; (800942c <thread4a+0x1c>)
 8009414:	2064      	movs	r0, #100	; 0x64
 8009416:	f7ff fb3b 	bl	8008a90 <chThdSleep>
 800941a:	4620      	mov	r0, r4
 800941c:	f7ff fea8 	bl	8009170 <chMtxLock>
 8009420:	4620      	mov	r0, r4
 8009422:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009426:	f7fe bc1b 	b.w	8007c60 <chMtxUnlock>
 800942a:	bf00      	nop
 800942c:	20001868 	.word	0x20001868

08009430 <thread4b>:
 8009430:	b510      	push	{r4, lr}
 8009432:	4c06      	ldr	r4, [pc, #24]	; (800944c <thread4b+0x1c>)
 8009434:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8009438:	f7ff fb2a 	bl	8008a90 <chThdSleep>
 800943c:	4620      	mov	r0, r4
 800943e:	f7ff fe97 	bl	8009170 <chMtxLock>
 8009442:	4620      	mov	r0, r4
 8009444:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009448:	f7fe bc0a 	b.w	8007c60 <chMtxUnlock>
 800944c:	20001858 	.word	0x20001858

08009450 <thread1.lto_priv.77>:
 8009450:	b538      	push	{r3, r4, r5, lr}
 8009452:	4605      	mov	r5, r0
 8009454:	4c05      	ldr	r4, [pc, #20]	; (800946c <thread1.lto_priv.77+0x1c>)
 8009456:	4620      	mov	r0, r4
 8009458:	f7ff fe8a 	bl	8009170 <chMtxLock>
 800945c:	7828      	ldrb	r0, [r5, #0]
 800945e:	f7fc f997 	bl	8005790 <test_emit_token>
 8009462:	4620      	mov	r0, r4
 8009464:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009468:	f7fe bbfa 	b.w	8007c60 <chMtxUnlock>
 800946c:	20001858 	.word	0x20001858

08009470 <chHeapStatus>:
 8009470:	b570      	push	{r4, r5, r6, lr}
 8009472:	4c11      	ldr	r4, [pc, #68]	; (80094b8 <chHeapStatus+0x48>)
 8009474:	460e      	mov	r6, r1
 8009476:	2800      	cmp	r0, #0
 8009478:	bf18      	it	ne
 800947a:	4604      	movne	r4, r0
 800947c:	f104 0510 	add.w	r5, r4, #16
 8009480:	4628      	mov	r0, r5
 8009482:	f7ff fe75 	bl	8009170 <chMtxLock>
 8009486:	68a3      	ldr	r3, [r4, #8]
 8009488:	b16b      	cbz	r3, 80094a6 <chHeapStatus+0x36>
 800948a:	2200      	movs	r2, #0
 800948c:	4614      	mov	r4, r2
 800948e:	6858      	ldr	r0, [r3, #4]
 8009490:	681b      	ldr	r3, [r3, #0]
 8009492:	3401      	adds	r4, #1
 8009494:	4402      	add	r2, r0
 8009496:	2b00      	cmp	r3, #0
 8009498:	d1f9      	bne.n	800948e <chHeapStatus+0x1e>
 800949a:	4628      	mov	r0, r5
 800949c:	6032      	str	r2, [r6, #0]
 800949e:	f7fe fbdf 	bl	8007c60 <chMtxUnlock>
 80094a2:	4620      	mov	r0, r4
 80094a4:	bd70      	pop	{r4, r5, r6, pc}
 80094a6:	461a      	mov	r2, r3
 80094a8:	461c      	mov	r4, r3
 80094aa:	4628      	mov	r0, r5
 80094ac:	6032      	str	r2, [r6, #0]
 80094ae:	f7fe fbd7 	bl	8007c60 <chMtxUnlock>
 80094b2:	4620      	mov	r0, r4
 80094b4:	bd70      	pop	{r4, r5, r6, pc}
 80094b6:	bf00      	nop
 80094b8:	200022b0 	.word	0x200022b0
 80094bc:	00000000 	.word	0x00000000

080094c0 <cmd_mem>:
 80094c0:	b530      	push	{r4, r5, lr}
 80094c2:	2900      	cmp	r1, #0
 80094c4:	b083      	sub	sp, #12
 80094c6:	dd04      	ble.n	80094d2 <cmd_mem+0x12>
 80094c8:	490f      	ldr	r1, [pc, #60]	; (8009508 <cmd_mem+0x48>)
 80094ca:	f7fd f891 	bl	80065f0 <chprintf.lto_priv.72>
 80094ce:	b003      	add	sp, #12
 80094d0:	bd30      	pop	{r4, r5, pc}
 80094d2:	4604      	mov	r4, r0
 80094d4:	a901      	add	r1, sp, #4
 80094d6:	2000      	movs	r0, #0
 80094d8:	f7ff ffca 	bl	8009470 <chHeapStatus>
 80094dc:	4605      	mov	r5, r0
 80094de:	4a0b      	ldr	r2, [pc, #44]	; (800950c <cmd_mem+0x4c>)
 80094e0:	4b0b      	ldr	r3, [pc, #44]	; (8009510 <cmd_mem+0x50>)
 80094e2:	6812      	ldr	r2, [r2, #0]
 80094e4:	681b      	ldr	r3, [r3, #0]
 80094e6:	490b      	ldr	r1, [pc, #44]	; (8009514 <cmd_mem+0x54>)
 80094e8:	1ad2      	subs	r2, r2, r3
 80094ea:	4620      	mov	r0, r4
 80094ec:	f7fd f880 	bl	80065f0 <chprintf.lto_priv.72>
 80094f0:	462a      	mov	r2, r5
 80094f2:	4909      	ldr	r1, [pc, #36]	; (8009518 <cmd_mem+0x58>)
 80094f4:	4620      	mov	r0, r4
 80094f6:	f7fd f87b 	bl	80065f0 <chprintf.lto_priv.72>
 80094fa:	4620      	mov	r0, r4
 80094fc:	9a01      	ldr	r2, [sp, #4]
 80094fe:	4907      	ldr	r1, [pc, #28]	; (800951c <cmd_mem+0x5c>)
 8009500:	f7fd f876 	bl	80065f0 <chprintf.lto_priv.72>
 8009504:	b003      	add	sp, #12
 8009506:	bd30      	pop	{r4, r5, pc}
 8009508:	0800c8f0 	.word	0x0800c8f0
 800950c:	200022d0 	.word	0x200022d0
 8009510:	2000239c 	.word	0x2000239c
 8009514:	0800c900 	.word	0x0800c900
 8009518:	0800c920 	.word	0x0800c920
 800951c:	0800c938 	.word	0x0800c938

08009520 <chHeapFree>:
 8009520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009522:	f850 5c08 	ldr.w	r5, [r0, #-8]
 8009526:	4606      	mov	r6, r0
 8009528:	f105 0710 	add.w	r7, r5, #16
 800952c:	f1a0 0408 	sub.w	r4, r0, #8
 8009530:	3508      	adds	r5, #8
 8009532:	4638      	mov	r0, r7
 8009534:	f7ff fe1c 	bl	8009170 <chMtxLock>
 8009538:	462b      	mov	r3, r5
 800953a:	42ab      	cmp	r3, r5
 800953c:	681a      	ldr	r2, [r3, #0]
 800953e:	d001      	beq.n	8009544 <chHeapFree+0x24>
 8009540:	42a3      	cmp	r3, r4
 8009542:	d202      	bcs.n	800954a <chHeapFree+0x2a>
 8009544:	b11a      	cbz	r2, 800954e <chHeapFree+0x2e>
 8009546:	4294      	cmp	r4, r2
 8009548:	d301      	bcc.n	800954e <chHeapFree+0x2e>
 800954a:	4613      	mov	r3, r2
 800954c:	e7f5      	b.n	800953a <chHeapFree+0x1a>
 800954e:	f846 2c08 	str.w	r2, [r6, #-8]
 8009552:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8009556:	601c      	str	r4, [r3, #0]
 8009558:	f856 0c08 	ldr.w	r0, [r6, #-8]
 800955c:	18b1      	adds	r1, r6, r2
 800955e:	4281      	cmp	r1, r0
 8009560:	d00a      	beq.n	8009578 <chHeapFree+0x58>
 8009562:	6859      	ldr	r1, [r3, #4]
 8009564:	f101 0208 	add.w	r2, r1, #8
 8009568:	441a      	add	r2, r3
 800956a:	4294      	cmp	r4, r2
 800956c:	d011      	beq.n	8009592 <chHeapFree+0x72>
 800956e:	4638      	mov	r0, r7
 8009570:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8009574:	f7fe bb74 	b.w	8007c60 <chMtxUnlock>
 8009578:	6849      	ldr	r1, [r1, #4]
 800957a:	f102 0508 	add.w	r5, r2, #8
 800957e:	58b0      	ldr	r0, [r6, r2]
 8009580:	4429      	add	r1, r5
 8009582:	e946 0102 	strd	r0, r1, [r6, #-8]
 8009586:	6859      	ldr	r1, [r3, #4]
 8009588:	f101 0208 	add.w	r2, r1, #8
 800958c:	441a      	add	r2, r3
 800958e:	4294      	cmp	r4, r2
 8009590:	d1ed      	bne.n	800956e <chHeapFree+0x4e>
 8009592:	e956 0202 	ldrd	r0, r2, [r6, #-8]
 8009596:	3208      	adds	r2, #8
 8009598:	4411      	add	r1, r2
 800959a:	e9c3 0100 	strd	r0, r1, [r3]
 800959e:	4638      	mov	r0, r7
 80095a0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80095a4:	f7fe bb5c 	b.w	8007c60 <chMtxUnlock>
	...

080095b0 <chThdRelease>:
 80095b0:	b430      	push	{r4, r5}
 80095b2:	2120      	movs	r1, #32
 80095b4:	f381 8811 	msr	BASEPRI, r1
 80095b8:	7f83      	ldrb	r3, [r0, #30]
 80095ba:	2400      	movs	r4, #0
 80095bc:	3b01      	subs	r3, #1
 80095be:	b2db      	uxtb	r3, r3
 80095c0:	7783      	strb	r3, [r0, #30]
 80095c2:	f384 8811 	msr	BASEPRI, r4
 80095c6:	b91b      	cbnz	r3, 80095d0 <chThdRelease+0x20>
 80095c8:	7f04      	ldrb	r4, [r0, #28]
 80095ca:	4602      	mov	r2, r0
 80095cc:	2c0f      	cmp	r4, #15
 80095ce:	d001      	beq.n	80095d4 <chThdRelease+0x24>
 80095d0:	bc30      	pop	{r4, r5}
 80095d2:	4770      	bx	lr
 80095d4:	7f44      	ldrb	r4, [r0, #29]
 80095d6:	f004 0403 	and.w	r4, r4, #3
 80095da:	2c01      	cmp	r4, #1
 80095dc:	d00f      	beq.n	80095fe <chThdRelease+0x4e>
 80095de:	2c02      	cmp	r4, #2
 80095e0:	d1f6      	bne.n	80095d0 <chThdRelease+0x20>
 80095e2:	e9d0 5404 	ldrd	r5, r4, [r0, #16]
 80095e6:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80095e8:	6125      	str	r5, [r4, #16]
 80095ea:	6915      	ldr	r5, [r2, #16]
 80095ec:	616c      	str	r4, [r5, #20]
 80095ee:	f381 8811 	msr	BASEPRI, r1
 80095f2:	6801      	ldr	r1, [r0, #0]
 80095f4:	6011      	str	r1, [r2, #0]
 80095f6:	6002      	str	r2, [r0, #0]
 80095f8:	f383 8811 	msr	BASEPRI, r3
 80095fc:	e7e8      	b.n	80095d0 <chThdRelease+0x20>
 80095fe:	e9d0 1304 	ldrd	r1, r3, [r0, #16]
 8009602:	6119      	str	r1, [r3, #16]
 8009604:	6902      	ldr	r2, [r0, #16]
 8009606:	bc30      	pop	{r4, r5}
 8009608:	6153      	str	r3, [r2, #20]
 800960a:	f7ff bf89 	b.w	8009520 <chHeapFree>
 800960e:	bf00      	nop

08009610 <chRegNextThread>:
 8009610:	b510      	push	{r4, lr}
 8009612:	2320      	movs	r3, #32
 8009614:	f383 8811 	msr	BASEPRI, r3
 8009618:	4b07      	ldr	r3, [pc, #28]	; (8009638 <chRegNextThread+0x28>)
 800961a:	6904      	ldr	r4, [r0, #16]
 800961c:	429c      	cmp	r4, r3
 800961e:	bf17      	itett	ne
 8009620:	7fa3      	ldrbne	r3, [r4, #30]
 8009622:	2400      	moveq	r4, #0
 8009624:	3301      	addne	r3, #1
 8009626:	77a3      	strbne	r3, [r4, #30]
 8009628:	2300      	movs	r3, #0
 800962a:	f383 8811 	msr	BASEPRI, r3
 800962e:	f7ff ffbf 	bl	80095b0 <chThdRelease>
 8009632:	4620      	mov	r0, r4
 8009634:	bd10      	pop	{r4, pc}
 8009636:	bf00      	nop
 8009638:	20002158 	.word	0x20002158
 800963c:	00000000 	.word	0x00000000

08009640 <cmd_threads>:
 8009640:	2900      	cmp	r1, #0
 8009642:	dd02      	ble.n	800964a <cmd_threads+0xa>
 8009644:	4916      	ldr	r1, [pc, #88]	; (80096a0 <cmd_threads+0x60>)
 8009646:	f7fc bfd3 	b.w	80065f0 <chprintf.lto_priv.72>
 800964a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800964c:	4915      	ldr	r1, [pc, #84]	; (80096a4 <cmd_threads+0x64>)
 800964e:	b085      	sub	sp, #20
 8009650:	4606      	mov	r6, r0
 8009652:	f7fc ffcd 	bl	80065f0 <chprintf.lto_priv.72>
 8009656:	2320      	movs	r3, #32
 8009658:	f383 8811 	msr	BASEPRI, r3
 800965c:	4b12      	ldr	r3, [pc, #72]	; (80096a8 <cmd_threads+0x68>)
 800965e:	2200      	movs	r2, #0
 8009660:	691c      	ldr	r4, [r3, #16]
 8009662:	7fa3      	ldrb	r3, [r4, #30]
 8009664:	3301      	adds	r3, #1
 8009666:	77a3      	strb	r3, [r4, #30]
 8009668:	f382 8811 	msr	BASEPRI, r2
 800966c:	4d0f      	ldr	r5, [pc, #60]	; (80096ac <cmd_threads+0x6c>)
 800966e:	4f10      	ldr	r7, [pc, #64]	; (80096b0 <cmd_threads+0x70>)
 8009670:	7f22      	ldrb	r2, [r4, #28]
 8009672:	68e3      	ldr	r3, [r4, #12]
 8009674:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8009678:	9202      	str	r2, [sp, #8]
 800967a:	7fa1      	ldrb	r1, [r4, #30]
 800967c:	4622      	mov	r2, r4
 800967e:	3901      	subs	r1, #1
 8009680:	9101      	str	r1, [sp, #4]
 8009682:	68a0      	ldr	r0, [r4, #8]
 8009684:	4639      	mov	r1, r7
 8009686:	9000      	str	r0, [sp, #0]
 8009688:	4630      	mov	r0, r6
 800968a:	f7fc ffb1 	bl	80065f0 <chprintf.lto_priv.72>
 800968e:	4620      	mov	r0, r4
 8009690:	f7ff ffbe 	bl	8009610 <chRegNextThread>
 8009694:	4604      	mov	r4, r0
 8009696:	2800      	cmp	r0, #0
 8009698:	d1ea      	bne.n	8009670 <cmd_threads+0x30>
 800969a:	b005      	add	sp, #20
 800969c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800969e:	bf00      	nop
 80096a0:	0800c9a0 	.word	0x0800c9a0
 80096a4:	0800c9b4 	.word	0x0800c9b4
 80096a8:	20002158 	.word	0x20002158
 80096ac:	0800cd80 	.word	0x0800cd80
 80096b0:	0800c9dc 	.word	0x0800c9dc
	...

080096c0 <regfind>:
 80096c0:	b538      	push	{r3, r4, r5, lr}
 80096c2:	4605      	mov	r5, r0
 80096c4:	2320      	movs	r3, #32
 80096c6:	f383 8811 	msr	BASEPRI, r3
 80096ca:	4b0a      	ldr	r3, [pc, #40]	; (80096f4 <regfind+0x34>)
 80096cc:	2400      	movs	r4, #0
 80096ce:	691b      	ldr	r3, [r3, #16]
 80096d0:	7f9a      	ldrb	r2, [r3, #30]
 80096d2:	3201      	adds	r2, #1
 80096d4:	779a      	strb	r2, [r3, #30]
 80096d6:	f384 8811 	msr	BASEPRI, r4
 80096da:	4618      	mov	r0, r3
 80096dc:	42ab      	cmp	r3, r5
 80096de:	bf08      	it	eq
 80096e0:	f044 0401 	orreq.w	r4, r4, #1
 80096e4:	f7ff ff94 	bl	8009610 <chRegNextThread>
 80096e8:	4603      	mov	r3, r0
 80096ea:	2800      	cmp	r0, #0
 80096ec:	d1f5      	bne.n	80096da <regfind+0x1a>
 80096ee:	4620      	mov	r0, r4
 80096f0:	bd38      	pop	{r3, r4, r5, pc}
 80096f2:	bf00      	nop
 80096f4:	20002158 	.word	0x20002158
	...

08009700 <chHeapAlloc>:
 8009700:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009702:	4e20      	ldr	r6, [pc, #128]	; (8009784 <chHeapAlloc+0x84>)
 8009704:	3107      	adds	r1, #7
 8009706:	2800      	cmp	r0, #0
 8009708:	bf18      	it	ne
 800970a:	4606      	movne	r6, r0
 800970c:	f106 0710 	add.w	r7, r6, #16
 8009710:	4638      	mov	r0, r7
 8009712:	f021 0507 	bic.w	r5, r1, #7
 8009716:	f106 0408 	add.w	r4, r6, #8
 800971a:	f7ff fd29 	bl	8009170 <chMtxLock>
 800971e:	e003      	b.n	8009728 <chHeapAlloc+0x28>
 8009720:	6843      	ldr	r3, [r0, #4]
 8009722:	42ab      	cmp	r3, r5
 8009724:	d212      	bcs.n	800974c <chHeapAlloc+0x4c>
 8009726:	4604      	mov	r4, r0
 8009728:	6820      	ldr	r0, [r4, #0]
 800972a:	2800      	cmp	r0, #0
 800972c:	d1f8      	bne.n	8009720 <chHeapAlloc+0x20>
 800972e:	4638      	mov	r0, r7
 8009730:	f7fe fa96 	bl	8007c60 <chMtxUnlock>
 8009734:	6833      	ldr	r3, [r6, #0]
 8009736:	b313      	cbz	r3, 800977e <chHeapAlloc+0x7e>
 8009738:	f105 0008 	add.w	r0, r5, #8
 800973c:	4798      	blx	r3
 800973e:	b1f0      	cbz	r0, 800977e <chHeapAlloc+0x7e>
 8009740:	e9c0 6500 	strd	r6, r5, [r0]
 8009744:	f100 0408 	add.w	r4, r0, #8
 8009748:	4620      	mov	r0, r4
 800974a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800974c:	f105 0208 	add.w	r2, r5, #8
 8009750:	4293      	cmp	r3, r2
 8009752:	6801      	ldr	r1, [r0, #0]
 8009754:	d208      	bcs.n	8009768 <chHeapAlloc+0x68>
 8009756:	6021      	str	r1, [r4, #0]
 8009758:	4604      	mov	r4, r0
 800975a:	4638      	mov	r0, r7
 800975c:	f844 6b08 	str.w	r6, [r4], #8
 8009760:	f7fe fa7e 	bl	8007c60 <chMtxUnlock>
 8009764:	4620      	mov	r0, r4
 8009766:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009768:	1b5b      	subs	r3, r3, r5
 800976a:	eb00 0c02 	add.w	ip, r0, r2
 800976e:	3b08      	subs	r3, #8
 8009770:	5081      	str	r1, [r0, r2]
 8009772:	f8cc 3004 	str.w	r3, [ip, #4]
 8009776:	f8c4 c000 	str.w	ip, [r4]
 800977a:	6045      	str	r5, [r0, #4]
 800977c:	e7ec      	b.n	8009758 <chHeapAlloc+0x58>
 800977e:	2400      	movs	r4, #0
 8009780:	e7e2      	b.n	8009748 <chHeapAlloc+0x48>
 8009782:	bf00      	nop
 8009784:	200022b0 	.word	0x200022b0
	...

08009790 <heap1_execute>:
 8009790:	b570      	push	{r4, r5, r6, lr}
 8009792:	b082      	sub	sp, #8
 8009794:	4669      	mov	r1, sp
 8009796:	2000      	movs	r0, #0
 8009798:	f7ff fe6a 	bl	8009470 <chHeapStatus>
 800979c:	2110      	movs	r1, #16
 800979e:	2000      	movs	r0, #0
 80097a0:	f7ff ffae 	bl	8009700 <chHeapAlloc>
 80097a4:	1c01      	adds	r1, r0, #0
 80097a6:	4605      	mov	r5, r0
 80097a8:	bf18      	it	ne
 80097aa:	2101      	movne	r1, #1
 80097ac:	2001      	movs	r0, #1
 80097ae:	f7fb ffd7 	bl	8005760 <_test_assert>
 80097b2:	b108      	cbz	r0, 80097b8 <heap1_execute+0x28>
 80097b4:	b002      	add	sp, #8
 80097b6:	bd70      	pop	{r4, r5, r6, pc}
 80097b8:	4604      	mov	r4, r0
 80097ba:	4628      	mov	r0, r5
 80097bc:	f7ff feb0 	bl	8009520 <chHeapFree>
 80097c0:	f06f 01ff 	mvn.w	r1, #255	; 0xff
 80097c4:	4620      	mov	r0, r4
 80097c6:	f7ff ff9b 	bl	8009700 <chHeapAlloc>
 80097ca:	fab0 f180 	clz	r1, r0
 80097ce:	2002      	movs	r0, #2
 80097d0:	0949      	lsrs	r1, r1, #5
 80097d2:	f7fb ffc5 	bl	8005760 <_test_assert>
 80097d6:	2800      	cmp	r0, #0
 80097d8:	d1ec      	bne.n	80097b4 <heap1_execute+0x24>
 80097da:	4669      	mov	r1, sp
 80097dc:	487c      	ldr	r0, [pc, #496]	; (80099d0 <heap1_execute+0x240>)
 80097de:	f7ff fe47 	bl	8009470 <chHeapStatus>
 80097e2:	2110      	movs	r1, #16
 80097e4:	487a      	ldr	r0, [pc, #488]	; (80099d0 <heap1_execute+0x240>)
 80097e6:	f7ff ff8b 	bl	8009700 <chHeapAlloc>
 80097ea:	2110      	movs	r1, #16
 80097ec:	4606      	mov	r6, r0
 80097ee:	4878      	ldr	r0, [pc, #480]	; (80099d0 <heap1_execute+0x240>)
 80097f0:	f7ff ff86 	bl	8009700 <chHeapAlloc>
 80097f4:	2110      	movs	r1, #16
 80097f6:	4605      	mov	r5, r0
 80097f8:	4875      	ldr	r0, [pc, #468]	; (80099d0 <heap1_execute+0x240>)
 80097fa:	f7ff ff81 	bl	8009700 <chHeapAlloc>
 80097fe:	4604      	mov	r4, r0
 8009800:	4630      	mov	r0, r6
 8009802:	f7ff fe8d 	bl	8009520 <chHeapFree>
 8009806:	4628      	mov	r0, r5
 8009808:	f7ff fe8a 	bl	8009520 <chHeapFree>
 800980c:	4620      	mov	r0, r4
 800980e:	f7ff fe87 	bl	8009520 <chHeapFree>
 8009812:	a901      	add	r1, sp, #4
 8009814:	486e      	ldr	r0, [pc, #440]	; (80099d0 <heap1_execute+0x240>)
 8009816:	f7ff fe2b 	bl	8009470 <chHeapStatus>
 800981a:	f1a0 0101 	sub.w	r1, r0, #1
 800981e:	fab1 f181 	clz	r1, r1
 8009822:	2003      	movs	r0, #3
 8009824:	0949      	lsrs	r1, r1, #5
 8009826:	f7fb ff9b 	bl	8005760 <_test_assert>
 800982a:	2800      	cmp	r0, #0
 800982c:	d1c2      	bne.n	80097b4 <heap1_execute+0x24>
 800982e:	2110      	movs	r1, #16
 8009830:	4867      	ldr	r0, [pc, #412]	; (80099d0 <heap1_execute+0x240>)
 8009832:	f7ff ff65 	bl	8009700 <chHeapAlloc>
 8009836:	2110      	movs	r1, #16
 8009838:	4604      	mov	r4, r0
 800983a:	4865      	ldr	r0, [pc, #404]	; (80099d0 <heap1_execute+0x240>)
 800983c:	f7ff ff60 	bl	8009700 <chHeapAlloc>
 8009840:	4605      	mov	r5, r0
 8009842:	2110      	movs	r1, #16
 8009844:	4862      	ldr	r0, [pc, #392]	; (80099d0 <heap1_execute+0x240>)
 8009846:	f7ff ff5b 	bl	8009700 <chHeapAlloc>
 800984a:	f7ff fe69 	bl	8009520 <chHeapFree>
 800984e:	4628      	mov	r0, r5
 8009850:	f7ff fe66 	bl	8009520 <chHeapFree>
 8009854:	4620      	mov	r0, r4
 8009856:	f7ff fe63 	bl	8009520 <chHeapFree>
 800985a:	a901      	add	r1, sp, #4
 800985c:	485c      	ldr	r0, [pc, #368]	; (80099d0 <heap1_execute+0x240>)
 800985e:	f7ff fe07 	bl	8009470 <chHeapStatus>
 8009862:	f1a0 0101 	sub.w	r1, r0, #1
 8009866:	fab1 f181 	clz	r1, r1
 800986a:	2004      	movs	r0, #4
 800986c:	0949      	lsrs	r1, r1, #5
 800986e:	f7fb ff77 	bl	8005760 <_test_assert>
 8009872:	2800      	cmp	r0, #0
 8009874:	d19e      	bne.n	80097b4 <heap1_execute+0x24>
 8009876:	2111      	movs	r1, #17
 8009878:	4855      	ldr	r0, [pc, #340]	; (80099d0 <heap1_execute+0x240>)
 800987a:	f7ff ff41 	bl	8009700 <chHeapAlloc>
 800987e:	2110      	movs	r1, #16
 8009880:	4604      	mov	r4, r0
 8009882:	4853      	ldr	r0, [pc, #332]	; (80099d0 <heap1_execute+0x240>)
 8009884:	f7ff ff3c 	bl	8009700 <chHeapAlloc>
 8009888:	4605      	mov	r5, r0
 800988a:	4620      	mov	r0, r4
 800988c:	f7ff fe48 	bl	8009520 <chHeapFree>
 8009890:	a901      	add	r1, sp, #4
 8009892:	484f      	ldr	r0, [pc, #316]	; (80099d0 <heap1_execute+0x240>)
 8009894:	f7ff fdec 	bl	8009470 <chHeapStatus>
 8009898:	f1a0 0102 	sub.w	r1, r0, #2
 800989c:	fab1 f181 	clz	r1, r1
 80098a0:	2005      	movs	r0, #5
 80098a2:	0949      	lsrs	r1, r1, #5
 80098a4:	f7fb ff5c 	bl	8005760 <_test_assert>
 80098a8:	2800      	cmp	r0, #0
 80098aa:	d183      	bne.n	80097b4 <heap1_execute+0x24>
 80098ac:	2110      	movs	r1, #16
 80098ae:	4848      	ldr	r0, [pc, #288]	; (80099d0 <heap1_execute+0x240>)
 80098b0:	f7ff ff26 	bl	8009700 <chHeapAlloc>
 80098b4:	a901      	add	r1, sp, #4
 80098b6:	4604      	mov	r4, r0
 80098b8:	4845      	ldr	r0, [pc, #276]	; (80099d0 <heap1_execute+0x240>)
 80098ba:	f7ff fdd9 	bl	8009470 <chHeapStatus>
 80098be:	2801      	cmp	r0, #1
 80098c0:	f000 8083 	beq.w	80099ca <heap1_execute+0x23a>
 80098c4:	a901      	add	r1, sp, #4
 80098c6:	4842      	ldr	r0, [pc, #264]	; (80099d0 <heap1_execute+0x240>)
 80098c8:	f7ff fdd2 	bl	8009470 <chHeapStatus>
 80098cc:	f1a0 0102 	sub.w	r1, r0, #2
 80098d0:	fab1 f181 	clz	r1, r1
 80098d4:	0949      	lsrs	r1, r1, #5
 80098d6:	2006      	movs	r0, #6
 80098d8:	f7fb ff42 	bl	8005760 <_test_assert>
 80098dc:	2800      	cmp	r0, #0
 80098de:	f47f af69 	bne.w	80097b4 <heap1_execute+0x24>
 80098e2:	4628      	mov	r0, r5
 80098e4:	f7ff fe1c 	bl	8009520 <chHeapFree>
 80098e8:	4620      	mov	r0, r4
 80098ea:	f7ff fe19 	bl	8009520 <chHeapFree>
 80098ee:	a901      	add	r1, sp, #4
 80098f0:	4837      	ldr	r0, [pc, #220]	; (80099d0 <heap1_execute+0x240>)
 80098f2:	f7ff fdbd 	bl	8009470 <chHeapStatus>
 80098f6:	f1a0 0101 	sub.w	r1, r0, #1
 80098fa:	fab1 f181 	clz	r1, r1
 80098fe:	2007      	movs	r0, #7
 8009900:	0949      	lsrs	r1, r1, #5
 8009902:	f7fb ff2d 	bl	8005760 <_test_assert>
 8009906:	2800      	cmp	r0, #0
 8009908:	f47f af54 	bne.w	80097b4 <heap1_execute+0x24>
 800990c:	2110      	movs	r1, #16
 800990e:	4830      	ldr	r0, [pc, #192]	; (80099d0 <heap1_execute+0x240>)
 8009910:	f7ff fef6 	bl	8009700 <chHeapAlloc>
 8009914:	2110      	movs	r1, #16
 8009916:	4605      	mov	r5, r0
 8009918:	482d      	ldr	r0, [pc, #180]	; (80099d0 <heap1_execute+0x240>)
 800991a:	f7ff fef1 	bl	8009700 <chHeapAlloc>
 800991e:	4604      	mov	r4, r0
 8009920:	4628      	mov	r0, r5
 8009922:	f7ff fdfd 	bl	8009520 <chHeapFree>
 8009926:	a901      	add	r1, sp, #4
 8009928:	4829      	ldr	r0, [pc, #164]	; (80099d0 <heap1_execute+0x240>)
 800992a:	f7ff fda1 	bl	8009470 <chHeapStatus>
 800992e:	1e85      	subs	r5, r0, #2
 8009930:	4269      	negs	r1, r5
 8009932:	4169      	adcs	r1, r5
 8009934:	2008      	movs	r0, #8
 8009936:	f7fb ff13 	bl	8005760 <_test_assert>
 800993a:	2800      	cmp	r0, #0
 800993c:	f47f af3a 	bne.w	80097b4 <heap1_execute+0x24>
 8009940:	2120      	movs	r1, #32
 8009942:	4823      	ldr	r0, [pc, #140]	; (80099d0 <heap1_execute+0x240>)
 8009944:	f7ff fedc 	bl	8009700 <chHeapAlloc>
 8009948:	f7ff fdea 	bl	8009520 <chHeapFree>
 800994c:	4620      	mov	r0, r4
 800994e:	f7ff fde7 	bl	8009520 <chHeapFree>
 8009952:	a901      	add	r1, sp, #4
 8009954:	481e      	ldr	r0, [pc, #120]	; (80099d0 <heap1_execute+0x240>)
 8009956:	f7ff fd8b 	bl	8009470 <chHeapStatus>
 800995a:	3801      	subs	r0, #1
 800995c:	4241      	negs	r1, r0
 800995e:	4141      	adcs	r1, r0
 8009960:	2009      	movs	r0, #9
 8009962:	f7fb fefd 	bl	8005760 <_test_assert>
 8009966:	2800      	cmp	r0, #0
 8009968:	f47f af24 	bne.w	80097b4 <heap1_execute+0x24>
 800996c:	a901      	add	r1, sp, #4
 800996e:	4818      	ldr	r0, [pc, #96]	; (80099d0 <heap1_execute+0x240>)
 8009970:	f7ff fd7e 	bl	8009470 <chHeapStatus>
 8009974:	9901      	ldr	r1, [sp, #4]
 8009976:	4816      	ldr	r0, [pc, #88]	; (80099d0 <heap1_execute+0x240>)
 8009978:	f7ff fec2 	bl	8009700 <chHeapAlloc>
 800997c:	a901      	add	r1, sp, #4
 800997e:	4604      	mov	r4, r0
 8009980:	4813      	ldr	r0, [pc, #76]	; (80099d0 <heap1_execute+0x240>)
 8009982:	f7ff fd75 	bl	8009470 <chHeapStatus>
 8009986:	fab0 f180 	clz	r1, r0
 800998a:	200a      	movs	r0, #10
 800998c:	0949      	lsrs	r1, r1, #5
 800998e:	f7fb fee7 	bl	8005760 <_test_assert>
 8009992:	2800      	cmp	r0, #0
 8009994:	f47f af0e 	bne.w	80097b4 <heap1_execute+0x24>
 8009998:	4620      	mov	r0, r4
 800999a:	f7ff fdc1 	bl	8009520 <chHeapFree>
 800999e:	a901      	add	r1, sp, #4
 80099a0:	480b      	ldr	r0, [pc, #44]	; (80099d0 <heap1_execute+0x240>)
 80099a2:	f7ff fd65 	bl	8009470 <chHeapStatus>
 80099a6:	1e42      	subs	r2, r0, #1
 80099a8:	4251      	negs	r1, r2
 80099aa:	4151      	adcs	r1, r2
 80099ac:	200b      	movs	r0, #11
 80099ae:	f7fb fed7 	bl	8005760 <_test_assert>
 80099b2:	2800      	cmp	r0, #0
 80099b4:	f47f aefe 	bne.w	80097b4 <heap1_execute+0x24>
 80099b8:	e9dd 3100 	ldrd	r3, r1, [sp]
 80099bc:	1acb      	subs	r3, r1, r3
 80099be:	4259      	negs	r1, r3
 80099c0:	4159      	adcs	r1, r3
 80099c2:	200c      	movs	r0, #12
 80099c4:	f7fb fecc 	bl	8005760 <_test_assert>
 80099c8:	e6f4      	b.n	80097b4 <heap1_execute+0x24>
 80099ca:	4601      	mov	r1, r0
 80099cc:	e783      	b.n	80098d6 <heap1_execute+0x146>
 80099ce:	bf00      	nop
 80099d0:	20002a20 	.word	0x20002a20
	...

080099e0 <chThdCreateFromHeap>:
 80099e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80099e4:	4690      	mov	r8, r2
 80099e6:	4699      	mov	r9, r3
 80099e8:	460e      	mov	r6, r1
 80099ea:	f7ff fe89 	bl	8009700 <chHeapAlloc>
 80099ee:	4604      	mov	r4, r0
 80099f0:	b370      	cbz	r0, 8009a50 <chThdCreateFromHeap+0x70>
 80099f2:	2320      	movs	r3, #32
 80099f4:	f383 8811 	msr	BASEPRI, r3
 80099f8:	2302      	movs	r3, #2
 80099fa:	2500      	movs	r5, #0
 80099fc:	f04f 0c01 	mov.w	ip, #1
 8009a00:	f1a6 0124 	sub.w	r1, r6, #36	; 0x24
 8009a04:	1847      	adds	r7, r0, r1
 8009a06:	60c7      	str	r7, [r0, #12]
 8009a08:	4e13      	ldr	r6, [pc, #76]	; (8009a58 <chThdCreateFromHeap+0x78>)
 8009a0a:	f840 9001 	str.w	r9, [r0, r1]
 8009a0e:	4a13      	ldr	r2, [pc, #76]	; (8009a5c <chThdCreateFromHeap+0x7c>)
 8009a10:	9908      	ldr	r1, [sp, #32]
 8009a12:	623a      	str	r2, [r7, #32]
 8009a14:	6079      	str	r1, [r7, #4]
 8009a16:	6106      	str	r6, [r0, #16]
 8009a18:	6971      	ldr	r1, [r6, #20]
 8009a1a:	7703      	strb	r3, [r0, #28]
 8009a1c:	f100 0224 	add.w	r2, r0, #36	; 0x24
 8009a20:	f100 0328 	add.w	r3, r0, #40	; 0x28
 8009a24:	6141      	str	r1, [r0, #20]
 8009a26:	f8c0 8008 	str.w	r8, [r0, #8]
 8009a2a:	f8c0 803c 	str.w	r8, [r0, #60]	; 0x3c
 8009a2e:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8009a32:	6185      	str	r5, [r0, #24]
 8009a34:	f880 c01e 	strb.w	ip, [r0, #30]
 8009a38:	6108      	str	r0, [r1, #16]
 8009a3a:	6242      	str	r2, [r0, #36]	; 0x24
 8009a3c:	f880 c01d 	strb.w	ip, [r0, #29]
 8009a40:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8009a44:	4629      	mov	r1, r5
 8009a46:	6170      	str	r0, [r6, #20]
 8009a48:	f7fe f87a 	bl	8007b40 <chSchWakeupS>
 8009a4c:	f385 8811 	msr	BASEPRI, r5
 8009a50:	4620      	mov	r0, r4
 8009a52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009a56:	bf00      	nop
 8009a58:	20002158 	.word	0x20002158
 8009a5c:	08005211 	.word	0x08005211

08009a60 <dyn3_execute>:
 8009a60:	b510      	push	{r4, lr}
 8009a62:	4b4a      	ldr	r3, [pc, #296]	; (8009b8c <dyn3_execute+0x12c>)
 8009a64:	484a      	ldr	r0, [pc, #296]	; (8009b90 <dyn3_execute+0x130>)
 8009a66:	699a      	ldr	r2, [r3, #24]
 8009a68:	b082      	sub	sp, #8
 8009a6a:	6892      	ldr	r2, [r2, #8]
 8009a6c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8009a70:	9000      	str	r0, [sp, #0]
 8009a72:	4b48      	ldr	r3, [pc, #288]	; (8009b94 <dyn3_execute+0x134>)
 8009a74:	3a01      	subs	r2, #1
 8009a76:	4848      	ldr	r0, [pc, #288]	; (8009b98 <dyn3_execute+0x138>)
 8009a78:	f7ff ffb2 	bl	80099e0 <chThdCreateFromHeap>
 8009a7c:	7f81      	ldrb	r1, [r0, #30]
 8009a7e:	4604      	mov	r4, r0
 8009a80:	2001      	movs	r0, #1
 8009a82:	1a09      	subs	r1, r1, r0
 8009a84:	fab1 f181 	clz	r1, r1
 8009a88:	0949      	lsrs	r1, r1, #5
 8009a8a:	f7fb fe69 	bl	8005760 <_test_assert>
 8009a8e:	b108      	cbz	r0, 8009a94 <dyn3_execute+0x34>
 8009a90:	b002      	add	sp, #8
 8009a92:	bd10      	pop	{r4, pc}
 8009a94:	2320      	movs	r3, #32
 8009a96:	f383 8811 	msr	BASEPRI, r3
 8009a9a:	7fa3      	ldrb	r3, [r4, #30]
 8009a9c:	3301      	adds	r3, #1
 8009a9e:	77a3      	strb	r3, [r4, #30]
 8009aa0:	f380 8811 	msr	BASEPRI, r0
 8009aa4:	2002      	movs	r0, #2
 8009aa6:	7fa1      	ldrb	r1, [r4, #30]
 8009aa8:	1a09      	subs	r1, r1, r0
 8009aaa:	fab1 f181 	clz	r1, r1
 8009aae:	0949      	lsrs	r1, r1, #5
 8009ab0:	f7fb fe56 	bl	8005760 <_test_assert>
 8009ab4:	2800      	cmp	r0, #0
 8009ab6:	d1eb      	bne.n	8009a90 <dyn3_execute+0x30>
 8009ab8:	4620      	mov	r0, r4
 8009aba:	f7ff fd79 	bl	80095b0 <chThdRelease>
 8009abe:	7fa1      	ldrb	r1, [r4, #30]
 8009ac0:	2003      	movs	r0, #3
 8009ac2:	f1a1 0101 	sub.w	r1, r1, #1
 8009ac6:	fab1 f181 	clz	r1, r1
 8009aca:	0949      	lsrs	r1, r1, #5
 8009acc:	f7fb fe48 	bl	8005760 <_test_assert>
 8009ad0:	2800      	cmp	r0, #0
 8009ad2:	d1dd      	bne.n	8009a90 <dyn3_execute+0x30>
 8009ad4:	4620      	mov	r0, r4
 8009ad6:	f7ff fdf3 	bl	80096c0 <regfind>
 8009ada:	4601      	mov	r1, r0
 8009adc:	2004      	movs	r0, #4
 8009ade:	f7fb fe3f 	bl	8005760 <_test_assert>
 8009ae2:	2800      	cmp	r0, #0
 8009ae4:	d1d4      	bne.n	8009a90 <dyn3_execute+0x30>
 8009ae6:	4620      	mov	r0, r4
 8009ae8:	f7ff fdea 	bl	80096c0 <regfind>
 8009aec:	4601      	mov	r1, r0
 8009aee:	2005      	movs	r0, #5
 8009af0:	f7fb fe36 	bl	8005760 <_test_assert>
 8009af4:	2800      	cmp	r0, #0
 8009af6:	d1cb      	bne.n	8009a90 <dyn3_execute+0x30>
 8009af8:	4620      	mov	r0, r4
 8009afa:	f7ff fd59 	bl	80095b0 <chThdRelease>
 8009afe:	7fa1      	ldrb	r1, [r4, #30]
 8009b00:	2006      	movs	r0, #6
 8009b02:	fab1 f181 	clz	r1, r1
 8009b06:	0949      	lsrs	r1, r1, #5
 8009b08:	f7fb fe2a 	bl	8005760 <_test_assert>
 8009b0c:	2800      	cmp	r0, #0
 8009b0e:	d1bf      	bne.n	8009a90 <dyn3_execute+0x30>
 8009b10:	7f21      	ldrb	r1, [r4, #28]
 8009b12:	2007      	movs	r0, #7
 8009b14:	fab1 f181 	clz	r1, r1
 8009b18:	0949      	lsrs	r1, r1, #5
 8009b1a:	f7fb fe21 	bl	8005760 <_test_assert>
 8009b1e:	2800      	cmp	r0, #0
 8009b20:	d1b6      	bne.n	8009a90 <dyn3_execute+0x30>
 8009b22:	4620      	mov	r0, r4
 8009b24:	f7ff fdcc 	bl	80096c0 <regfind>
 8009b28:	4601      	mov	r1, r0
 8009b2a:	2008      	movs	r0, #8
 8009b2c:	f7fb fe18 	bl	8005760 <_test_assert>
 8009b30:	2800      	cmp	r0, #0
 8009b32:	d1ad      	bne.n	8009a90 <dyn3_execute+0x30>
 8009b34:	4620      	mov	r0, r4
 8009b36:	f7ff fdc3 	bl	80096c0 <regfind>
 8009b3a:	4601      	mov	r1, r0
 8009b3c:	2009      	movs	r0, #9
 8009b3e:	f7fb fe0f 	bl	8005760 <_test_assert>
 8009b42:	2800      	cmp	r0, #0
 8009b44:	d1a4      	bne.n	8009a90 <dyn3_execute+0x30>
 8009b46:	2064      	movs	r0, #100	; 0x64
 8009b48:	f7fe ffa2 	bl	8008a90 <chThdSleep>
 8009b4c:	7f21      	ldrb	r1, [r4, #28]
 8009b4e:	200a      	movs	r0, #10
 8009b50:	f1a1 030f 	sub.w	r3, r1, #15
 8009b54:	4259      	negs	r1, r3
 8009b56:	4159      	adcs	r1, r3
 8009b58:	f7fb fe02 	bl	8005760 <_test_assert>
 8009b5c:	2800      	cmp	r0, #0
 8009b5e:	d197      	bne.n	8009a90 <dyn3_execute+0x30>
 8009b60:	4620      	mov	r0, r4
 8009b62:	f7ff fdad 	bl	80096c0 <regfind>
 8009b66:	4601      	mov	r1, r0
 8009b68:	200b      	movs	r0, #11
 8009b6a:	f7fb fdf9 	bl	8005760 <_test_assert>
 8009b6e:	2800      	cmp	r0, #0
 8009b70:	d18e      	bne.n	8009a90 <dyn3_execute+0x30>
 8009b72:	4620      	mov	r0, r4
 8009b74:	f7ff fda4 	bl	80096c0 <regfind>
 8009b78:	f080 0101 	eor.w	r1, r0, #1
 8009b7c:	200c      	movs	r0, #12
 8009b7e:	b2c9      	uxtb	r1, r1
 8009b80:	b002      	add	sp, #8
 8009b82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009b86:	f7fb bdeb 	b.w	8005760 <_test_assert>
 8009b8a:	bf00      	nop
 8009b8c:	20002158 	.word	0x20002158
 8009b90:	0800ca70 	.word	0x0800ca70
 8009b94:	080057f1 	.word	0x080057f1
 8009b98:	20002328 	.word	0x20002328
 8009b9c:	00000000 	.word	0x00000000

08009ba0 <chSemWait>:
 8009ba0:	2320      	movs	r3, #32
 8009ba2:	f383 8811 	msr	BASEPRI, r3
 8009ba6:	6883      	ldr	r3, [r0, #8]
 8009ba8:	3b01      	subs	r3, #1
 8009baa:	2b00      	cmp	r3, #0
 8009bac:	6083      	str	r3, [r0, #8]
 8009bae:	db04      	blt.n	8009bba <chSemWait+0x1a>
 8009bb0:	2000      	movs	r0, #0
 8009bb2:	2300      	movs	r3, #0
 8009bb4:	f383 8811 	msr	BASEPRI, r3
 8009bb8:	4770      	bx	lr
 8009bba:	4603      	mov	r3, r0
 8009bbc:	b510      	push	{r4, lr}
 8009bbe:	4c08      	ldr	r4, [pc, #32]	; (8009be0 <chSemWait+0x40>)
 8009bc0:	2005      	movs	r0, #5
 8009bc2:	69a2      	ldr	r2, [r4, #24]
 8009bc4:	6213      	str	r3, [r2, #32]
 8009bc6:	6013      	str	r3, [r2, #0]
 8009bc8:	6859      	ldr	r1, [r3, #4]
 8009bca:	6051      	str	r1, [r2, #4]
 8009bcc:	600a      	str	r2, [r1, #0]
 8009bce:	605a      	str	r2, [r3, #4]
 8009bd0:	f7fe f8ce 	bl	8007d70 <chSchGoSleepS>
 8009bd4:	69a3      	ldr	r3, [r4, #24]
 8009bd6:	6a18      	ldr	r0, [r3, #32]
 8009bd8:	2300      	movs	r3, #0
 8009bda:	f383 8811 	msr	BASEPRI, r3
 8009bde:	bd10      	pop	{r4, pc}
 8009be0:	20002158 	.word	0x20002158
	...

08009bf0 <bmk11_execute>:
 8009bf0:	b570      	push	{r4, r5, r6, lr}
 8009bf2:	f7ff f82d 	bl	8008c50 <test_wait_tick>
 8009bf6:	2500      	movs	r5, #0
 8009bf8:	f7fc fbf2 	bl	80063e0 <test_start_timer.constprop.3>
 8009bfc:	4e14      	ldr	r6, [pc, #80]	; (8009c50 <bmk11_execute+0x60>)
 8009bfe:	4c15      	ldr	r4, [pc, #84]	; (8009c54 <bmk11_execute+0x64>)
 8009c00:	4620      	mov	r0, r4
 8009c02:	f7ff ffcd 	bl	8009ba0 <chSemWait>
 8009c06:	4620      	mov	r0, r4
 8009c08:	f7fe f85a 	bl	8007cc0 <chSemSignal>
 8009c0c:	4620      	mov	r0, r4
 8009c0e:	f7ff ffc7 	bl	8009ba0 <chSemWait>
 8009c12:	4620      	mov	r0, r4
 8009c14:	f7fe f854 	bl	8007cc0 <chSemSignal>
 8009c18:	4620      	mov	r0, r4
 8009c1a:	f7ff ffc1 	bl	8009ba0 <chSemWait>
 8009c1e:	4620      	mov	r0, r4
 8009c20:	f7fe f84e 	bl	8007cc0 <chSemSignal>
 8009c24:	4620      	mov	r0, r4
 8009c26:	f7ff ffbb 	bl	8009ba0 <chSemWait>
 8009c2a:	4620      	mov	r0, r4
 8009c2c:	f7fe f848 	bl	8007cc0 <chSemSignal>
 8009c30:	7833      	ldrb	r3, [r6, #0]
 8009c32:	3501      	adds	r5, #1
 8009c34:	2b00      	cmp	r3, #0
 8009c36:	d0e3      	beq.n	8009c00 <bmk11_execute+0x10>
 8009c38:	4807      	ldr	r0, [pc, #28]	; (8009c58 <bmk11_execute+0x68>)
 8009c3a:	f7fb fe01 	bl	8005840 <test_print>
 8009c3e:	00a8      	lsls	r0, r5, #2
 8009c40:	f7fb fd06 	bl	8005650 <test_printn>
 8009c44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009c48:	4804      	ldr	r0, [pc, #16]	; (8009c5c <bmk11_execute+0x6c>)
 8009c4a:	f7fb bdd9 	b.w	8005800 <test_println>
 8009c4e:	bf00      	nop
 8009c50:	20002a40 	.word	0x20002a40
 8009c54:	200023a0 	.word	0x200023a0
 8009c58:	0800c5e0 	.word	0x0800c5e0
 8009c5c:	0800c600 	.word	0x0800c600

08009c60 <thread3.lto_priv.75>:
 8009c60:	b538      	push	{r3, r4, r5, lr}
 8009c62:	4c07      	ldr	r4, [pc, #28]	; (8009c80 <thread3.lto_priv.75+0x20>)
 8009c64:	69a3      	ldr	r3, [r4, #24]
 8009c66:	7f5b      	ldrb	r3, [r3, #29]
 8009c68:	075a      	lsls	r2, r3, #29
 8009c6a:	d407      	bmi.n	8009c7c <thread3.lto_priv.75+0x1c>
 8009c6c:	4d05      	ldr	r5, [pc, #20]	; (8009c84 <thread3.lto_priv.75+0x24>)
 8009c6e:	4628      	mov	r0, r5
 8009c70:	f7ff ff96 	bl	8009ba0 <chSemWait>
 8009c74:	69a3      	ldr	r3, [r4, #24]
 8009c76:	7f5b      	ldrb	r3, [r3, #29]
 8009c78:	075b      	lsls	r3, r3, #29
 8009c7a:	d5f8      	bpl.n	8009c6e <thread3.lto_priv.75+0xe>
 8009c7c:	bd38      	pop	{r3, r4, r5, pc}
 8009c7e:	bf00      	nop
 8009c80:	20002158 	.word	0x20002158
 8009c84:	200023a0 	.word	0x200023a0
	...

08009c90 <sem4_execute>:
 8009c90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009c92:	2500      	movs	r5, #0
 8009c94:	b087      	sub	sp, #28
 8009c96:	ac03      	add	r4, sp, #12
 8009c98:	9505      	str	r5, [sp, #20]
 8009c9a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8009c9e:	2620      	movs	r6, #32
 8009ca0:	f386 8811 	msr	BASEPRI, r6
 8009ca4:	4629      	mov	r1, r5
 8009ca6:	4620      	mov	r0, r4
 8009ca8:	f7fc faea 	bl	8006280 <chSemResetI>
 8009cac:	f7fd f888 	bl	8006dc0 <chSchRescheduleS>
 8009cb0:	f385 8811 	msr	BASEPRI, r5
 8009cb4:	f386 8811 	msr	BASEPRI, r6
 8009cb8:	9905      	ldr	r1, [sp, #20]
 8009cba:	2001      	movs	r0, #1
 8009cbc:	42a9      	cmp	r1, r5
 8009cbe:	bfcc      	ite	gt
 8009cc0:	2100      	movgt	r1, #0
 8009cc2:	2101      	movle	r1, #1
 8009cc4:	f7fb fd4c 	bl	8005760 <_test_assert>
 8009cc8:	b118      	cbz	r0, 8009cd2 <sem4_execute+0x42>
 8009cca:	f385 8811 	msr	BASEPRI, r5
 8009cce:	b007      	add	sp, #28
 8009cd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009cd2:	4607      	mov	r7, r0
 8009cd4:	f380 8811 	msr	BASEPRI, r0
 8009cd8:	4a40      	ldr	r2, [pc, #256]	; (8009ddc <sem4_execute+0x14c>)
 8009cda:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8009cde:	6992      	ldr	r2, [r2, #24]
 8009ce0:	4b3f      	ldr	r3, [pc, #252]	; (8009de0 <sem4_execute+0x150>)
 8009ce2:	6892      	ldr	r2, [r2, #8]
 8009ce4:	483f      	ldr	r0, [pc, #252]	; (8009de4 <sem4_execute+0x154>)
 8009ce6:	3a01      	subs	r2, #1
 8009ce8:	9400      	str	r4, [sp, #0]
 8009cea:	f7fe f809 	bl	8007d00 <chThdCreateStatic>
 8009cee:	4b3e      	ldr	r3, [pc, #248]	; (8009de8 <sem4_execute+0x158>)
 8009cf0:	6018      	str	r0, [r3, #0]
 8009cf2:	4620      	mov	r0, r4
 8009cf4:	f7ff ff54 	bl	8009ba0 <chSemWait>
 8009cf8:	f386 8811 	msr	BASEPRI, r6
 8009cfc:	9905      	ldr	r1, [sp, #20]
 8009cfe:	2002      	movs	r0, #2
 8009d00:	2900      	cmp	r1, #0
 8009d02:	bfcc      	ite	gt
 8009d04:	2100      	movgt	r1, #0
 8009d06:	2101      	movle	r1, #1
 8009d08:	f7fb fd2a 	bl	8005760 <_test_assert>
 8009d0c:	b118      	cbz	r0, 8009d16 <sem4_execute+0x86>
 8009d0e:	f387 8811 	msr	BASEPRI, r7
 8009d12:	b007      	add	sp, #28
 8009d14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009d16:	f380 8811 	msr	BASEPRI, r0
 8009d1a:	f386 8811 	msr	BASEPRI, r6
 8009d1e:	9b05      	ldr	r3, [sp, #20]
 8009d20:	2b00      	cmp	r3, #0
 8009d22:	dd23      	ble.n	8009d6c <sem4_execute+0xdc>
 8009d24:	f7fd f84c 	bl	8006dc0 <chSchRescheduleS>
 8009d28:	2500      	movs	r5, #0
 8009d2a:	f385 8811 	msr	BASEPRI, r5
 8009d2e:	2720      	movs	r7, #32
 8009d30:	f387 8811 	msr	BASEPRI, r7
 8009d34:	9905      	ldr	r1, [sp, #20]
 8009d36:	2003      	movs	r0, #3
 8009d38:	42a9      	cmp	r1, r5
 8009d3a:	bfd4      	ite	le
 8009d3c:	2100      	movle	r1, #0
 8009d3e:	2101      	movgt	r1, #1
 8009d40:	f7fb fd0e 	bl	8005760 <_test_assert>
 8009d44:	4606      	mov	r6, r0
 8009d46:	2800      	cmp	r0, #0
 8009d48:	d1bf      	bne.n	8009cca <sem4_execute+0x3a>
 8009d4a:	f380 8811 	msr	BASEPRI, r0
 8009d4e:	f387 8811 	msr	BASEPRI, r7
 8009d52:	9905      	ldr	r1, [sp, #20]
 8009d54:	2004      	movs	r0, #4
 8009d56:	f1a1 0101 	sub.w	r1, r1, #1
 8009d5a:	fab1 f181 	clz	r1, r1
 8009d5e:	0949      	lsrs	r1, r1, #5
 8009d60:	f7fb fcfe 	bl	8005760 <_test_assert>
 8009d64:	b130      	cbz	r0, 8009d74 <sem4_execute+0xe4>
 8009d66:	f386 8811 	msr	BASEPRI, r6
 8009d6a:	e7b0      	b.n	8009cce <sem4_execute+0x3e>
 8009d6c:	4620      	mov	r0, r4
 8009d6e:	f7fc fa0f 	bl	8006190 <chSemSignalI>
 8009d72:	e7d7      	b.n	8009d24 <sem4_execute+0x94>
 8009d74:	f380 8811 	msr	BASEPRI, r0
 8009d78:	f387 8811 	msr	BASEPRI, r7
 8009d7c:	9b05      	ldr	r3, [sp, #20]
 8009d7e:	2b00      	cmp	r3, #0
 8009d80:	dd27      	ble.n	8009dd2 <sem4_execute+0x142>
 8009d82:	f7fd f81d 	bl	8006dc0 <chSchRescheduleS>
 8009d86:	2400      	movs	r4, #0
 8009d88:	f384 8811 	msr	BASEPRI, r4
 8009d8c:	2620      	movs	r6, #32
 8009d8e:	f386 8811 	msr	BASEPRI, r6
 8009d92:	9905      	ldr	r1, [sp, #20]
 8009d94:	2003      	movs	r0, #3
 8009d96:	42a1      	cmp	r1, r4
 8009d98:	bfd4      	ite	le
 8009d9a:	2100      	movle	r1, #0
 8009d9c:	2101      	movgt	r1, #1
 8009d9e:	f7fb fcdf 	bl	8005760 <_test_assert>
 8009da2:	4605      	mov	r5, r0
 8009da4:	b110      	cbz	r0, 8009dac <sem4_execute+0x11c>
 8009da6:	f384 8811 	msr	BASEPRI, r4
 8009daa:	e790      	b.n	8009cce <sem4_execute+0x3e>
 8009dac:	f380 8811 	msr	BASEPRI, r0
 8009db0:	f386 8811 	msr	BASEPRI, r6
 8009db4:	9905      	ldr	r1, [sp, #20]
 8009db6:	2005      	movs	r0, #5
 8009db8:	f1a1 0101 	sub.w	r1, r1, #1
 8009dbc:	fab1 f181 	clz	r1, r1
 8009dc0:	0949      	lsrs	r1, r1, #5
 8009dc2:	f7fb fccd 	bl	8005760 <_test_assert>
 8009dc6:	2800      	cmp	r0, #0
 8009dc8:	f47f af7f 	bne.w	8009cca <sem4_execute+0x3a>
 8009dcc:	f380 8811 	msr	BASEPRI, r0
 8009dd0:	e77d      	b.n	8009cce <sem4_execute+0x3e>
 8009dd2:	4620      	mov	r0, r4
 8009dd4:	f7fc f9dc 	bl	8006190 <chSemSignalI>
 8009dd8:	e7d3      	b.n	8009d82 <sem4_execute+0xf2>
 8009dda:	bf00      	nop
 8009ddc:	20002158 	.word	0x20002158
 8009de0:	08006de1 	.word	0x08006de1
 8009de4:	200023b0 	.word	0x200023b0
 8009de8:	20002a44 	.word	0x20002a44
 8009dec:	00000000 	.word	0x00000000

08009df0 <thread3.lto_priv.74>:
 8009df0:	b510      	push	{r4, lr}
 8009df2:	4c04      	ldr	r4, [pc, #16]	; (8009e04 <thread3.lto_priv.74+0x14>)
 8009df4:	4620      	mov	r0, r4
 8009df6:	f7ff fed3 	bl	8009ba0 <chSemWait>
 8009dfa:	4620      	mov	r0, r4
 8009dfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009e00:	f7fd bf5e 	b.w	8007cc0 <chSemSignal>
 8009e04:	200018d0 	.word	0x200018d0
	...

08009e10 <thread1.lto_priv.76>:
 8009e10:	b510      	push	{r4, lr}
 8009e12:	4604      	mov	r4, r0
 8009e14:	4803      	ldr	r0, [pc, #12]	; (8009e24 <thread1.lto_priv.76+0x14>)
 8009e16:	f7ff fec3 	bl	8009ba0 <chSemWait>
 8009e1a:	7820      	ldrb	r0, [r4, #0]
 8009e1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009e20:	f7fb bcb6 	b.w	8005790 <test_emit_token>
 8009e24:	200018d0 	.word	0x200018d0
	...

08009e30 <chThdWait>:
 8009e30:	b538      	push	{r3, r4, r5, lr}
 8009e32:	4604      	mov	r4, r0
 8009e34:	2320      	movs	r3, #32
 8009e36:	f383 8811 	msr	BASEPRI, r3
 8009e3a:	7f03      	ldrb	r3, [r0, #28]
 8009e3c:	2b0f      	cmp	r3, #15
 8009e3e:	d007      	beq.n	8009e50 <chThdWait+0x20>
 8009e40:	4b08      	ldr	r3, [pc, #32]	; (8009e64 <chThdWait+0x34>)
 8009e42:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8009e44:	699b      	ldr	r3, [r3, #24]
 8009e46:	2009      	movs	r0, #9
 8009e48:	601a      	str	r2, [r3, #0]
 8009e4a:	6263      	str	r3, [r4, #36]	; 0x24
 8009e4c:	f7fd ff90 	bl	8007d70 <chSchGoSleepS>
 8009e50:	6a25      	ldr	r5, [r4, #32]
 8009e52:	2300      	movs	r3, #0
 8009e54:	f383 8811 	msr	BASEPRI, r3
 8009e58:	4620      	mov	r0, r4
 8009e5a:	f7ff fba9 	bl	80095b0 <chThdRelease>
 8009e5e:	4628      	mov	r0, r5
 8009e60:	bd38      	pop	{r3, r4, r5, pc}
 8009e62:	bf00      	nop
 8009e64:	20002158 	.word	0x20002158
	...

08009e70 <cmd_test>:
 8009e70:	2900      	cmp	r1, #0
 8009e72:	dd02      	ble.n	8009e7a <cmd_test+0xa>
 8009e74:	490e      	ldr	r1, [pc, #56]	; (8009eb0 <cmd_test+0x40>)
 8009e76:	f7fc bbbb 	b.w	80065f0 <chprintf.lto_priv.72>
 8009e7a:	b510      	push	{r4, lr}
 8009e7c:	4604      	mov	r4, r0
 8009e7e:	4a0d      	ldr	r2, [pc, #52]	; (8009eb4 <cmd_test+0x44>)
 8009e80:	b082      	sub	sp, #8
 8009e82:	6992      	ldr	r2, [r2, #24]
 8009e84:	4b0c      	ldr	r3, [pc, #48]	; (8009eb8 <cmd_test+0x48>)
 8009e86:	6892      	ldr	r2, [r2, #8]
 8009e88:	f44f 71e4 	mov.w	r1, #456	; 0x1c8
 8009e8c:	2000      	movs	r0, #0
 8009e8e:	9400      	str	r4, [sp, #0]
 8009e90:	f7ff fda6 	bl	80099e0 <chThdCreateFromHeap>
 8009e94:	b120      	cbz	r0, 8009ea0 <cmd_test+0x30>
 8009e96:	b002      	add	sp, #8
 8009e98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009e9c:	f7ff bfc8 	b.w	8009e30 <chThdWait>
 8009ea0:	4620      	mov	r0, r4
 8009ea2:	4906      	ldr	r1, [pc, #24]	; (8009ebc <cmd_test+0x4c>)
 8009ea4:	b002      	add	sp, #8
 8009ea6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009eaa:	f7fc bba1 	b.w	80065f0 <chprintf.lto_priv.72>
 8009eae:	bf00      	nop
 8009eb0:	0800c980 	.word	0x0800c980
 8009eb4:	20002158 	.word	0x20002158
 8009eb8:	0800b831 	.word	0x0800b831
 8009ebc:	0800c990 	.word	0x0800c990

08009ec0 <bmk5_execute>:
 8009ec0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009ec4:	2400      	movs	r4, #0
 8009ec6:	4b15      	ldr	r3, [pc, #84]	; (8009f1c <bmk5_execute+0x5c>)
 8009ec8:	b083      	sub	sp, #12
 8009eca:	699b      	ldr	r3, [r3, #24]
 8009ecc:	46a1      	mov	r9, r4
 8009ece:	689d      	ldr	r5, [r3, #8]
 8009ed0:	f7fe febe 	bl	8008c50 <test_wait_tick>
 8009ed4:	f7fc fa84 	bl	80063e0 <test_start_timer.constprop.3>
 8009ed8:	f8df 8054 	ldr.w	r8, [pc, #84]	; 8009f30 <bmk5_execute+0x70>
 8009edc:	4f10      	ldr	r7, [pc, #64]	; (8009f20 <bmk5_execute+0x60>)
 8009ede:	4e11      	ldr	r6, [pc, #68]	; (8009f24 <bmk5_execute+0x64>)
 8009ee0:	3d01      	subs	r5, #1
 8009ee2:	463b      	mov	r3, r7
 8009ee4:	462a      	mov	r2, r5
 8009ee6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8009eea:	f8cd 9000 	str.w	r9, [sp]
 8009eee:	4630      	mov	r0, r6
 8009ef0:	f7fd ff06 	bl	8007d00 <chThdCreateStatic>
 8009ef4:	f7ff ff9c 	bl	8009e30 <chThdWait>
 8009ef8:	f898 3000 	ldrb.w	r3, [r8]
 8009efc:	3401      	adds	r4, #1
 8009efe:	2b00      	cmp	r3, #0
 8009f00:	d0ef      	beq.n	8009ee2 <bmk5_execute+0x22>
 8009f02:	4809      	ldr	r0, [pc, #36]	; (8009f28 <bmk5_execute+0x68>)
 8009f04:	f7fb fc9c 	bl	8005840 <test_print>
 8009f08:	4620      	mov	r0, r4
 8009f0a:	f7fb fba1 	bl	8005650 <test_printn>
 8009f0e:	4807      	ldr	r0, [pc, #28]	; (8009f2c <bmk5_execute+0x6c>)
 8009f10:	b003      	add	sp, #12
 8009f12:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009f16:	f7fb bc73 	b.w	8005800 <test_println>
 8009f1a:	bf00      	nop
 8009f1c:	20002158 	.word	0x20002158
 8009f20:	0800c2b1 	.word	0x0800c2b1
 8009f24:	200023b0 	.word	0x200023b0
 8009f28:	0800c5e0 	.word	0x0800c5e0
 8009f2c:	0800c6e0 	.word	0x0800c6e0
 8009f30:	20002a40 	.word	0x20002a40
	...

08009f40 <test_wait_threads>:
 8009f40:	b570      	push	{r4, r5, r6, lr}
 8009f42:	2600      	movs	r6, #0
 8009f44:	4c06      	ldr	r4, [pc, #24]	; (8009f60 <test_wait_threads+0x20>)
 8009f46:	f104 0514 	add.w	r5, r4, #20
 8009f4a:	f854 0b04 	ldr.w	r0, [r4], #4
 8009f4e:	b118      	cbz	r0, 8009f58 <test_wait_threads+0x18>
 8009f50:	f7ff ff6e 	bl	8009e30 <chThdWait>
 8009f54:	f844 6c04 	str.w	r6, [r4, #-4]
 8009f58:	42ac      	cmp	r4, r5
 8009f5a:	d1f6      	bne.n	8009f4a <test_wait_threads+0xa>
 8009f5c:	bd70      	pop	{r4, r5, r6, pc}
 8009f5e:	bf00      	nop
 8009f60:	20002a44 	.word	0x20002a44
	...

08009f70 <bmk8_execute>:
 8009f70:	2300      	movs	r3, #0
 8009f72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009f76:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800a048 <bmk8_execute+0xd8>
 8009f7a:	b084      	sub	sp, #16
 8009f7c:	ac04      	add	r4, sp, #16
 8009f7e:	f844 3d04 	str.w	r3, [r4, #-4]!
 8009f82:	f7fe fe65 	bl	8008c50 <test_wait_tick>
 8009f86:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8009f8a:	4f2a      	ldr	r7, [pc, #168]	; (800a034 <bmk8_execute+0xc4>)
 8009f8c:	4e2a      	ldr	r6, [pc, #168]	; (800a038 <bmk8_execute+0xc8>)
 8009f8e:	689a      	ldr	r2, [r3, #8]
 8009f90:	4630      	mov	r0, r6
 8009f92:	463b      	mov	r3, r7
 8009f94:	3a01      	subs	r2, #1
 8009f96:	9400      	str	r4, [sp, #0]
 8009f98:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8009f9c:	f7fd feb0 	bl	8007d00 <chThdCreateStatic>
 8009fa0:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8009fa4:	4d25      	ldr	r5, [pc, #148]	; (800a03c <bmk8_execute+0xcc>)
 8009fa6:	689a      	ldr	r2, [r3, #8]
 8009fa8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8009fac:	6028      	str	r0, [r5, #0]
 8009fae:	463b      	mov	r3, r7
 8009fb0:	3a01      	subs	r2, #1
 8009fb2:	9400      	str	r4, [sp, #0]
 8009fb4:	f506 70a4 	add.w	r0, r6, #328	; 0x148
 8009fb8:	f7fd fea2 	bl	8007d00 <chThdCreateStatic>
 8009fbc:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8009fc0:	6068      	str	r0, [r5, #4]
 8009fc2:	689a      	ldr	r2, [r3, #8]
 8009fc4:	f506 7024 	add.w	r0, r6, #656	; 0x290
 8009fc8:	463b      	mov	r3, r7
 8009fca:	3a01      	subs	r2, #1
 8009fcc:	9400      	str	r4, [sp, #0]
 8009fce:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8009fd2:	f7fd fe95 	bl	8007d00 <chThdCreateStatic>
 8009fd6:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8009fda:	60a8      	str	r0, [r5, #8]
 8009fdc:	689a      	ldr	r2, [r3, #8]
 8009fde:	f506 7076 	add.w	r0, r6, #984	; 0x3d8
 8009fe2:	463b      	mov	r3, r7
 8009fe4:	3a01      	subs	r2, #1
 8009fe6:	9400      	str	r4, [sp, #0]
 8009fe8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8009fec:	f7fd fe88 	bl	8007d00 <chThdCreateStatic>
 8009ff0:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8009ff4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8009ff8:	689a      	ldr	r2, [r3, #8]
 8009ffa:	60e8      	str	r0, [r5, #12]
 8009ffc:	463b      	mov	r3, r7
 8009ffe:	3a01      	subs	r2, #1
 800a000:	9400      	str	r4, [sp, #0]
 800a002:	f506 60a4 	add.w	r0, r6, #1312	; 0x520
 800a006:	f7fd fe7b 	bl	8007d00 <chThdCreateStatic>
 800a00a:	6128      	str	r0, [r5, #16]
 800a00c:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 800a010:	f7fe fd3e 	bl	8008a90 <chThdSleep>
 800a014:	f7fb fb44 	bl	80056a0 <test_terminate_threads>
 800a018:	f7ff ff92 	bl	8009f40 <test_wait_threads>
 800a01c:	4808      	ldr	r0, [pc, #32]	; (800a040 <bmk8_execute+0xd0>)
 800a01e:	f7fb fc0f 	bl	8005840 <test_print>
 800a022:	9803      	ldr	r0, [sp, #12]
 800a024:	f7fb fb14 	bl	8005650 <test_printn>
 800a028:	4806      	ldr	r0, [pc, #24]	; (800a044 <bmk8_execute+0xd4>)
 800a02a:	f7fb fbe9 	bl	8005800 <test_println>
 800a02e:	b004      	add	sp, #16
 800a030:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a034:	08006d51 	.word	0x08006d51
 800a038:	200023b0 	.word	0x200023b0
 800a03c:	20002a44 	.word	0x20002a44
 800a040:	0800c5e0 	.word	0x0800c5e0
 800a044:	0800c710 	.word	0x0800c710
 800a048:	20002158 	.word	0x20002158
 800a04c:	00000000 	.word	0x00000000

0800a050 <bmk7_execute>:
 800a050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a054:	2400      	movs	r4, #0
 800a056:	4d3a      	ldr	r5, [pc, #232]	; (800a140 <bmk7_execute+0xf0>)
 800a058:	b082      	sub	sp, #8
 800a05a:	69aa      	ldr	r2, [r5, #24]
 800a05c:	4b39      	ldr	r3, [pc, #228]	; (800a144 <bmk7_execute+0xf4>)
 800a05e:	6892      	ldr	r2, [r2, #8]
 800a060:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a064:	3205      	adds	r2, #5
 800a066:	4838      	ldr	r0, [pc, #224]	; (800a148 <bmk7_execute+0xf8>)
 800a068:	9400      	str	r4, [sp, #0]
 800a06a:	f7fd fe49 	bl	8007d00 <chThdCreateStatic>
 800a06e:	69ab      	ldr	r3, [r5, #24]
 800a070:	4e36      	ldr	r6, [pc, #216]	; (800a14c <bmk7_execute+0xfc>)
 800a072:	689a      	ldr	r2, [r3, #8]
 800a074:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a078:	6030      	str	r0, [r6, #0]
 800a07a:	3204      	adds	r2, #4
 800a07c:	4b31      	ldr	r3, [pc, #196]	; (800a144 <bmk7_execute+0xf4>)
 800a07e:	9400      	str	r4, [sp, #0]
 800a080:	4833      	ldr	r0, [pc, #204]	; (800a150 <bmk7_execute+0x100>)
 800a082:	f7fd fe3d 	bl	8007d00 <chThdCreateStatic>
 800a086:	69ab      	ldr	r3, [r5, #24]
 800a088:	6070      	str	r0, [r6, #4]
 800a08a:	689a      	ldr	r2, [r3, #8]
 800a08c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a090:	4b2c      	ldr	r3, [pc, #176]	; (800a144 <bmk7_execute+0xf4>)
 800a092:	3203      	adds	r2, #3
 800a094:	9400      	str	r4, [sp, #0]
 800a096:	482f      	ldr	r0, [pc, #188]	; (800a154 <bmk7_execute+0x104>)
 800a098:	f7fd fe32 	bl	8007d00 <chThdCreateStatic>
 800a09c:	69ab      	ldr	r3, [r5, #24]
 800a09e:	60b0      	str	r0, [r6, #8]
 800a0a0:	689a      	ldr	r2, [r3, #8]
 800a0a2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a0a6:	4b27      	ldr	r3, [pc, #156]	; (800a144 <bmk7_execute+0xf4>)
 800a0a8:	3202      	adds	r2, #2
 800a0aa:	9400      	str	r4, [sp, #0]
 800a0ac:	482a      	ldr	r0, [pc, #168]	; (800a158 <bmk7_execute+0x108>)
 800a0ae:	f7fd fe27 	bl	8007d00 <chThdCreateStatic>
 800a0b2:	69ab      	ldr	r3, [r5, #24]
 800a0b4:	60f0      	str	r0, [r6, #12]
 800a0b6:	689a      	ldr	r2, [r3, #8]
 800a0b8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a0bc:	4b21      	ldr	r3, [pc, #132]	; (800a144 <bmk7_execute+0xf4>)
 800a0be:	3201      	adds	r2, #1
 800a0c0:	9400      	str	r4, [sp, #0]
 800a0c2:	4826      	ldr	r0, [pc, #152]	; (800a15c <bmk7_execute+0x10c>)
 800a0c4:	f7fd fe1c 	bl	8007d00 <chThdCreateStatic>
 800a0c8:	4625      	mov	r5, r4
 800a0ca:	6130      	str	r0, [r6, #16]
 800a0cc:	f7fe fdc0 	bl	8008c50 <test_wait_tick>
 800a0d0:	2620      	movs	r6, #32
 800a0d2:	f7fc f985 	bl	80063e0 <test_start_timer.constprop.3>
 800a0d6:	f8df 8098 	ldr.w	r8, [pc, #152]	; 800a170 <bmk7_execute+0x120>
 800a0da:	4f21      	ldr	r7, [pc, #132]	; (800a160 <bmk7_execute+0x110>)
 800a0dc:	f386 8811 	msr	BASEPRI, r6
 800a0e0:	2100      	movs	r1, #0
 800a0e2:	4638      	mov	r0, r7
 800a0e4:	f7fc f8cc 	bl	8006280 <chSemResetI>
 800a0e8:	f7fc fe6a 	bl	8006dc0 <chSchRescheduleS>
 800a0ec:	f385 8811 	msr	BASEPRI, r5
 800a0f0:	f898 3000 	ldrb.w	r3, [r8]
 800a0f4:	3401      	adds	r4, #1
 800a0f6:	2b00      	cmp	r3, #0
 800a0f8:	d0f0      	beq.n	800a0dc <bmk7_execute+0x8c>
 800a0fa:	f7fb fad1 	bl	80056a0 <test_terminate_threads>
 800a0fe:	f386 8811 	msr	BASEPRI, r6
 800a102:	2100      	movs	r1, #0
 800a104:	4816      	ldr	r0, [pc, #88]	; (800a160 <bmk7_execute+0x110>)
 800a106:	f7fc f8bb 	bl	8006280 <chSemResetI>
 800a10a:	f7fc fe59 	bl	8006dc0 <chSchRescheduleS>
 800a10e:	f385 8811 	msr	BASEPRI, r5
 800a112:	f7ff ff15 	bl	8009f40 <test_wait_threads>
 800a116:	4813      	ldr	r0, [pc, #76]	; (800a164 <bmk7_execute+0x114>)
 800a118:	f7fb fb92 	bl	8005840 <test_print>
 800a11c:	4620      	mov	r0, r4
 800a11e:	f7fb fa97 	bl	8005650 <test_printn>
 800a122:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800a126:	4810      	ldr	r0, [pc, #64]	; (800a168 <bmk7_execute+0x118>)
 800a128:	f7fb fb8a 	bl	8005840 <test_print>
 800a12c:	0060      	lsls	r0, r4, #1
 800a12e:	f7fb fa8f 	bl	8005650 <test_printn>
 800a132:	480e      	ldr	r0, [pc, #56]	; (800a16c <bmk7_execute+0x11c>)
 800a134:	b002      	add	sp, #8
 800a136:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a13a:	f7fb bb61 	b.w	8005800 <test_println>
 800a13e:	bf00      	nop
 800a140:	20002158 	.word	0x20002158
 800a144:	08009c61 	.word	0x08009c61
 800a148:	200023b0 	.word	0x200023b0
 800a14c:	20002a44 	.word	0x20002a44
 800a150:	200024f8 	.word	0x200024f8
 800a154:	20002640 	.word	0x20002640
 800a158:	20002788 	.word	0x20002788
 800a15c:	200028d0 	.word	0x200028d0
 800a160:	200023a0 	.word	0x200023a0
 800a164:	0800c5e0 	.word	0x0800c5e0
 800a168:	0800c6f0 	.word	0x0800c6f0
 800a16c:	0800c710 	.word	0x0800c710
 800a170:	20002a40 	.word	0x20002a40
	...

0800a180 <bmk4_execute>:
 800a180:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a184:	2500      	movs	r5, #0
 800a186:	4a23      	ldr	r2, [pc, #140]	; (800a214 <bmk4_execute+0x94>)
 800a188:	b082      	sub	sp, #8
 800a18a:	6992      	ldr	r2, [r2, #24]
 800a18c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a190:	6892      	ldr	r2, [r2, #8]
 800a192:	4b21      	ldr	r3, [pc, #132]	; (800a218 <bmk4_execute+0x98>)
 800a194:	3201      	adds	r2, #1
 800a196:	4821      	ldr	r0, [pc, #132]	; (800a21c <bmk4_execute+0x9c>)
 800a198:	9500      	str	r5, [sp, #0]
 800a19a:	f7fd fdb1 	bl	8007d00 <chThdCreateStatic>
 800a19e:	4b20      	ldr	r3, [pc, #128]	; (800a220 <bmk4_execute+0xa0>)
 800a1a0:	4604      	mov	r4, r0
 800a1a2:	6018      	str	r0, [r3, #0]
 800a1a4:	462e      	mov	r6, r5
 800a1a6:	f7fe fd53 	bl	8008c50 <test_wait_tick>
 800a1aa:	2720      	movs	r7, #32
 800a1ac:	f7fc f918 	bl	80063e0 <test_start_timer.constprop.3>
 800a1b0:	f8df 8078 	ldr.w	r8, [pc, #120]	; 800a22c <bmk4_execute+0xac>
 800a1b4:	f387 8811 	msr	BASEPRI, r7
 800a1b8:	2100      	movs	r1, #0
 800a1ba:	4620      	mov	r0, r4
 800a1bc:	f7fd fcc0 	bl	8007b40 <chSchWakeupS>
 800a1c0:	4620      	mov	r0, r4
 800a1c2:	2100      	movs	r1, #0
 800a1c4:	f7fd fcbc 	bl	8007b40 <chSchWakeupS>
 800a1c8:	4620      	mov	r0, r4
 800a1ca:	2100      	movs	r1, #0
 800a1cc:	f7fd fcb8 	bl	8007b40 <chSchWakeupS>
 800a1d0:	4620      	mov	r0, r4
 800a1d2:	2100      	movs	r1, #0
 800a1d4:	f7fd fcb4 	bl	8007b40 <chSchWakeupS>
 800a1d8:	f386 8811 	msr	BASEPRI, r6
 800a1dc:	f898 3000 	ldrb.w	r3, [r8]
 800a1e0:	3504      	adds	r5, #4
 800a1e2:	2b00      	cmp	r3, #0
 800a1e4:	d0e6      	beq.n	800a1b4 <bmk4_execute+0x34>
 800a1e6:	f387 8811 	msr	BASEPRI, r7
 800a1ea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a1ee:	4620      	mov	r0, r4
 800a1f0:	f7fd fca6 	bl	8007b40 <chSchWakeupS>
 800a1f4:	f386 8811 	msr	BASEPRI, r6
 800a1f8:	f7ff fea2 	bl	8009f40 <test_wait_threads>
 800a1fc:	4809      	ldr	r0, [pc, #36]	; (800a224 <bmk4_execute+0xa4>)
 800a1fe:	f7fb fb1f 	bl	8005840 <test_print>
 800a202:	0068      	lsls	r0, r5, #1
 800a204:	f7fb fa24 	bl	8005650 <test_printn>
 800a208:	4807      	ldr	r0, [pc, #28]	; (800a228 <bmk4_execute+0xa8>)
 800a20a:	b002      	add	sp, #8
 800a20c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a210:	f7fb baf6 	b.w	8005800 <test_println>
 800a214:	20002158 	.word	0x20002158
 800a218:	08007f11 	.word	0x08007f11
 800a21c:	200023b0 	.word	0x200023b0
 800a220:	20002a44 	.word	0x20002a44
 800a224:	0800c5e0 	.word	0x0800c5e0
 800a228:	0800c710 	.word	0x0800c710
 800a22c:	20002a40 	.word	0x20002a40

0800a230 <bmk3_execute>:
 800a230:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a234:	2600      	movs	r6, #0
 800a236:	4f2c      	ldr	r7, [pc, #176]	; (800a2e8 <bmk3_execute+0xb8>)
 800a238:	4d2c      	ldr	r5, [pc, #176]	; (800a2ec <bmk3_execute+0xbc>)
 800a23a:	69bb      	ldr	r3, [r7, #24]
 800a23c:	b082      	sub	sp, #8
 800a23e:	689a      	ldr	r2, [r3, #8]
 800a240:	4628      	mov	r0, r5
 800a242:	4b2b      	ldr	r3, [pc, #172]	; (800a2f0 <bmk3_execute+0xc0>)
 800a244:	3201      	adds	r2, #1
 800a246:	9600      	str	r6, [sp, #0]
 800a248:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a24c:	f7fd fd58 	bl	8007d00 <chThdCreateStatic>
 800a250:	69bb      	ldr	r3, [r7, #24]
 800a252:	4c28      	ldr	r4, [pc, #160]	; (800a2f4 <bmk3_execute+0xc4>)
 800a254:	689a      	ldr	r2, [r3, #8]
 800a256:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800a304 <bmk3_execute+0xd4>
 800a25a:	6020      	str	r0, [r4, #0]
 800a25c:	4643      	mov	r3, r8
 800a25e:	3a02      	subs	r2, #2
 800a260:	9600      	str	r6, [sp, #0]
 800a262:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 800a266:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a26a:	f7fd fd49 	bl	8007d00 <chThdCreateStatic>
 800a26e:	69bb      	ldr	r3, [r7, #24]
 800a270:	6060      	str	r0, [r4, #4]
 800a272:	689a      	ldr	r2, [r3, #8]
 800a274:	f505 7024 	add.w	r0, r5, #656	; 0x290
 800a278:	4643      	mov	r3, r8
 800a27a:	3a03      	subs	r2, #3
 800a27c:	9600      	str	r6, [sp, #0]
 800a27e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a282:	f7fd fd3d 	bl	8007d00 <chThdCreateStatic>
 800a286:	69bb      	ldr	r3, [r7, #24]
 800a288:	60a0      	str	r0, [r4, #8]
 800a28a:	689a      	ldr	r2, [r3, #8]
 800a28c:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 800a290:	4643      	mov	r3, r8
 800a292:	3a04      	subs	r2, #4
 800a294:	9600      	str	r6, [sp, #0]
 800a296:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a29a:	f7fd fd31 	bl	8007d00 <chThdCreateStatic>
 800a29e:	69bb      	ldr	r3, [r7, #24]
 800a2a0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a2a4:	689a      	ldr	r2, [r3, #8]
 800a2a6:	60e0      	str	r0, [r4, #12]
 800a2a8:	4643      	mov	r3, r8
 800a2aa:	3a05      	subs	r2, #5
 800a2ac:	9600      	str	r6, [sp, #0]
 800a2ae:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 800a2b2:	f7fd fd25 	bl	8007d00 <chThdCreateStatic>
 800a2b6:	6120      	str	r0, [r4, #16]
 800a2b8:	6820      	ldr	r0, [r4, #0]
 800a2ba:	f7fe feb9 	bl	8009030 <msg_loop_test>
 800a2be:	4604      	mov	r4, r0
 800a2c0:	f7ff fe3e 	bl	8009f40 <test_wait_threads>
 800a2c4:	480c      	ldr	r0, [pc, #48]	; (800a2f8 <bmk3_execute+0xc8>)
 800a2c6:	f7fb fabb 	bl	8005840 <test_print>
 800a2ca:	4620      	mov	r0, r4
 800a2cc:	f7fb f9c0 	bl	8005650 <test_printn>
 800a2d0:	480a      	ldr	r0, [pc, #40]	; (800a2fc <bmk3_execute+0xcc>)
 800a2d2:	f7fb fab5 	bl	8005840 <test_print>
 800a2d6:	0060      	lsls	r0, r4, #1
 800a2d8:	f7fb f9ba 	bl	8005650 <test_printn>
 800a2dc:	4808      	ldr	r0, [pc, #32]	; (800a300 <bmk3_execute+0xd0>)
 800a2de:	b002      	add	sp, #8
 800a2e0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a2e4:	f7fb ba8c 	b.w	8005800 <test_println>
 800a2e8:	20002158 	.word	0x20002158
 800a2ec:	200023b0 	.word	0x200023b0
 800a2f0:	08008f31 	.word	0x08008f31
 800a2f4:	20002a44 	.word	0x20002a44
 800a2f8:	0800c5e0 	.word	0x0800c5e0
 800a2fc:	0800c6d0 	.word	0x0800c6d0
 800a300:	0800c710 	.word	0x0800c710
 800a304:	0800c2b1 	.word	0x0800c2b1
	...

0800a310 <bmk2_execute>:
 800a310:	b510      	push	{r4, lr}
 800a312:	2400      	movs	r4, #0
 800a314:	4a12      	ldr	r2, [pc, #72]	; (800a360 <bmk2_execute+0x50>)
 800a316:	b082      	sub	sp, #8
 800a318:	6992      	ldr	r2, [r2, #24]
 800a31a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a31e:	6892      	ldr	r2, [r2, #8]
 800a320:	4b10      	ldr	r3, [pc, #64]	; (800a364 <bmk2_execute+0x54>)
 800a322:	3201      	adds	r2, #1
 800a324:	9400      	str	r4, [sp, #0]
 800a326:	4810      	ldr	r0, [pc, #64]	; (800a368 <bmk2_execute+0x58>)
 800a328:	f7fd fcea 	bl	8007d00 <chThdCreateStatic>
 800a32c:	4b0f      	ldr	r3, [pc, #60]	; (800a36c <bmk2_execute+0x5c>)
 800a32e:	6018      	str	r0, [r3, #0]
 800a330:	f7fe fe7e 	bl	8009030 <msg_loop_test>
 800a334:	4604      	mov	r4, r0
 800a336:	f7ff fe03 	bl	8009f40 <test_wait_threads>
 800a33a:	480d      	ldr	r0, [pc, #52]	; (800a370 <bmk2_execute+0x60>)
 800a33c:	f7fb fa80 	bl	8005840 <test_print>
 800a340:	4620      	mov	r0, r4
 800a342:	f7fb f985 	bl	8005650 <test_printn>
 800a346:	480b      	ldr	r0, [pc, #44]	; (800a374 <bmk2_execute+0x64>)
 800a348:	f7fb fa7a 	bl	8005840 <test_print>
 800a34c:	0060      	lsls	r0, r4, #1
 800a34e:	f7fb f97f 	bl	8005650 <test_printn>
 800a352:	4809      	ldr	r0, [pc, #36]	; (800a378 <bmk2_execute+0x68>)
 800a354:	b002      	add	sp, #8
 800a356:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a35a:	f7fb ba51 	b.w	8005800 <test_println>
 800a35e:	bf00      	nop
 800a360:	20002158 	.word	0x20002158
 800a364:	08008f31 	.word	0x08008f31
 800a368:	200023b0 	.word	0x200023b0
 800a36c:	20002a44 	.word	0x20002a44
 800a370:	0800c5e0 	.word	0x0800c5e0
 800a374:	0800c6d0 	.word	0x0800c6d0
 800a378:	0800c710 	.word	0x0800c710
 800a37c:	00000000 	.word	0x00000000

0800a380 <bmk1_execute>:
 800a380:	b510      	push	{r4, lr}
 800a382:	2400      	movs	r4, #0
 800a384:	4a12      	ldr	r2, [pc, #72]	; (800a3d0 <bmk1_execute+0x50>)
 800a386:	b082      	sub	sp, #8
 800a388:	6992      	ldr	r2, [r2, #24]
 800a38a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a38e:	6892      	ldr	r2, [r2, #8]
 800a390:	4b10      	ldr	r3, [pc, #64]	; (800a3d4 <bmk1_execute+0x54>)
 800a392:	3a01      	subs	r2, #1
 800a394:	9400      	str	r4, [sp, #0]
 800a396:	4810      	ldr	r0, [pc, #64]	; (800a3d8 <bmk1_execute+0x58>)
 800a398:	f7fd fcb2 	bl	8007d00 <chThdCreateStatic>
 800a39c:	4b0f      	ldr	r3, [pc, #60]	; (800a3dc <bmk1_execute+0x5c>)
 800a39e:	6018      	str	r0, [r3, #0]
 800a3a0:	f7fe fe46 	bl	8009030 <msg_loop_test>
 800a3a4:	4604      	mov	r4, r0
 800a3a6:	f7ff fdcb 	bl	8009f40 <test_wait_threads>
 800a3aa:	480d      	ldr	r0, [pc, #52]	; (800a3e0 <bmk1_execute+0x60>)
 800a3ac:	f7fb fa48 	bl	8005840 <test_print>
 800a3b0:	4620      	mov	r0, r4
 800a3b2:	f7fb f94d 	bl	8005650 <test_printn>
 800a3b6:	480b      	ldr	r0, [pc, #44]	; (800a3e4 <bmk1_execute+0x64>)
 800a3b8:	f7fb fa42 	bl	8005840 <test_print>
 800a3bc:	0060      	lsls	r0, r4, #1
 800a3be:	f7fb f947 	bl	8005650 <test_printn>
 800a3c2:	4809      	ldr	r0, [pc, #36]	; (800a3e8 <bmk1_execute+0x68>)
 800a3c4:	b002      	add	sp, #8
 800a3c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a3ca:	f7fb ba19 	b.w	8005800 <test_println>
 800a3ce:	bf00      	nop
 800a3d0:	20002158 	.word	0x20002158
 800a3d4:	08008f31 	.word	0x08008f31
 800a3d8:	200023b0 	.word	0x200023b0
 800a3dc:	20002a44 	.word	0x20002a44
 800a3e0:	0800c5e0 	.word	0x0800c5e0
 800a3e4:	0800c6d0 	.word	0x0800c6d0
 800a3e8:	0800c710 	.word	0x0800c710
 800a3ec:	00000000 	.word	0x00000000

0800a3f0 <queues2_execute>:
 800a3f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3f4:	2320      	movs	r3, #32
 800a3f6:	b082      	sub	sp, #8
 800a3f8:	f383 8811 	msr	BASEPRI, r3
 800a3fc:	4d82      	ldr	r5, [pc, #520]	; (800a608 <queues2_execute+0x218>)
 800a3fe:	e9d5 3205 	ldrd	r3, r2, [r5, #20]
 800a402:	429a      	cmp	r2, r3
 800a404:	d03e      	beq.n	800a484 <queues2_execute+0x94>
 800a406:	2100      	movs	r1, #0
 800a408:	2001      	movs	r0, #1
 800a40a:	f7fb f9a9 	bl	8005760 <_test_assert>
 800a40e:	bb98      	cbnz	r0, 800a478 <queues2_execute+0x88>
 800a410:	f380 8811 	msr	BASEPRI, r0
 800a414:	2441      	movs	r4, #65	; 0x41
 800a416:	4e7c      	ldr	r6, [pc, #496]	; (800a608 <queues2_execute+0x218>)
 800a418:	4621      	mov	r1, r4
 800a41a:	3401      	adds	r4, #1
 800a41c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a420:	4630      	mov	r0, r6
 800a422:	b2e4      	uxtb	r4, r4
 800a424:	f7fe fa64 	bl	80088f0 <chOQPutTimeout>
 800a428:	2c45      	cmp	r4, #69	; 0x45
 800a42a:	d1f5      	bne.n	800a418 <queues2_execute+0x28>
 800a42c:	2620      	movs	r6, #32
 800a42e:	f386 8811 	msr	BASEPRI, r6
 800a432:	68a9      	ldr	r1, [r5, #8]
 800a434:	2002      	movs	r0, #2
 800a436:	fab1 f181 	clz	r1, r1
 800a43a:	0949      	lsrs	r1, r1, #5
 800a43c:	f7fb f990 	bl	8005760 <_test_assert>
 800a440:	4607      	mov	r7, r0
 800a442:	b9c8      	cbnz	r0, 800a478 <queues2_execute+0x88>
 800a444:	f380 8811 	msr	BASEPRI, r0
 800a448:	2404      	movs	r4, #4
 800a44a:	4680      	mov	r8, r0
 800a44c:	f386 8811 	msr	BASEPRI, r6
 800a450:	f7fb fdde 	bl	8006010 <chOQGetI.constprop.22>
 800a454:	f388 8811 	msr	BASEPRI, r8
 800a458:	b2c0      	uxtb	r0, r0
 800a45a:	f7fb f999 	bl	8005790 <test_emit_token>
 800a45e:	3c01      	subs	r4, #1
 800a460:	d1f4      	bne.n	800a44c <queues2_execute+0x5c>
 800a462:	f386 8811 	msr	BASEPRI, r6
 800a466:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 800a46a:	429a      	cmp	r2, r3
 800a46c:	d028      	beq.n	800a4c0 <queues2_execute+0xd0>
 800a46e:	4639      	mov	r1, r7
 800a470:	2003      	movs	r0, #3
 800a472:	f7fb f975 	bl	8005760 <_test_assert>
 800a476:	b150      	cbz	r0, 800a48e <queues2_execute+0x9e>
 800a478:	2300      	movs	r3, #0
 800a47a:	f383 8811 	msr	BASEPRI, r3
 800a47e:	b002      	add	sp, #8
 800a480:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a484:	68a9      	ldr	r1, [r5, #8]
 800a486:	3100      	adds	r1, #0
 800a488:	bf18      	it	ne
 800a48a:	2101      	movne	r1, #1
 800a48c:	e7bc      	b.n	800a408 <queues2_execute+0x18>
 800a48e:	f380 8811 	msr	BASEPRI, r0
 800a492:	495e      	ldr	r1, [pc, #376]	; (800a60c <queues2_execute+0x21c>)
 800a494:	2004      	movs	r0, #4
 800a496:	f7fb f93b 	bl	8005710 <_test_assert_sequence>
 800a49a:	4604      	mov	r4, r0
 800a49c:	2800      	cmp	r0, #0
 800a49e:	d1ee      	bne.n	800a47e <queues2_execute+0x8e>
 800a4a0:	2620      	movs	r6, #32
 800a4a2:	f386 8811 	msr	BASEPRI, r6
 800a4a6:	f7fb fdb3 	bl	8006010 <chOQGetI.constprop.22>
 800a4aa:	3003      	adds	r0, #3
 800a4ac:	bf14      	ite	ne
 800a4ae:	2100      	movne	r1, #0
 800a4b0:	2101      	moveq	r1, #1
 800a4b2:	2005      	movs	r0, #5
 800a4b4:	f7fb f954 	bl	8005760 <_test_assert>
 800a4b8:	b138      	cbz	r0, 800a4ca <queues2_execute+0xda>
 800a4ba:	f384 8811 	msr	BASEPRI, r4
 800a4be:	e7de      	b.n	800a47e <queues2_execute+0x8e>
 800a4c0:	68af      	ldr	r7, [r5, #8]
 800a4c2:	3700      	adds	r7, #0
 800a4c4:	bf18      	it	ne
 800a4c6:	2701      	movne	r7, #1
 800a4c8:	e7d1      	b.n	800a46e <queues2_execute+0x7e>
 800a4ca:	f380 8811 	msr	BASEPRI, r0
 800a4ce:	2208      	movs	r2, #8
 800a4d0:	4603      	mov	r3, r0
 800a4d2:	494f      	ldr	r1, [pc, #316]	; (800a610 <queues2_execute+0x220>)
 800a4d4:	484c      	ldr	r0, [pc, #304]	; (800a608 <queues2_execute+0x218>)
 800a4d6:	f7fe f9b3 	bl	8008840 <chOQWriteTimeout>
 800a4da:	f1a0 0104 	sub.w	r1, r0, #4
 800a4de:	fab1 f181 	clz	r1, r1
 800a4e2:	2006      	movs	r0, #6
 800a4e4:	0949      	lsrs	r1, r1, #5
 800a4e6:	f7fb f93b 	bl	8005760 <_test_assert>
 800a4ea:	4604      	mov	r4, r0
 800a4ec:	2800      	cmp	r0, #0
 800a4ee:	d1c6      	bne.n	800a47e <queues2_execute+0x8e>
 800a4f0:	f386 8811 	msr	BASEPRI, r6
 800a4f4:	68a9      	ldr	r1, [r5, #8]
 800a4f6:	2007      	movs	r0, #7
 800a4f8:	fab1 f181 	clz	r1, r1
 800a4fc:	0949      	lsrs	r1, r1, #5
 800a4fe:	f7fb f92f 	bl	8005760 <_test_assert>
 800a502:	4607      	mov	r7, r0
 800a504:	2800      	cmp	r0, #0
 800a506:	d1d8      	bne.n	800a4ba <queues2_execute+0xca>
 800a508:	f380 8811 	msr	BASEPRI, r0
 800a50c:	4a41      	ldr	r2, [pc, #260]	; (800a614 <queues2_execute+0x224>)
 800a50e:	4b42      	ldr	r3, [pc, #264]	; (800a618 <queues2_execute+0x228>)
 800a510:	6992      	ldr	r2, [r2, #24]
 800a512:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a516:	6892      	ldr	r2, [r2, #8]
 800a518:	4840      	ldr	r0, [pc, #256]	; (800a61c <queues2_execute+0x22c>)
 800a51a:	3201      	adds	r2, #1
 800a51c:	9700      	str	r7, [sp, #0]
 800a51e:	f7fd fbef 	bl	8007d00 <chThdCreateStatic>
 800a522:	4b3f      	ldr	r3, [pc, #252]	; (800a620 <queues2_execute+0x230>)
 800a524:	6018      	str	r0, [r3, #0]
 800a526:	f386 8811 	msr	BASEPRI, r6
 800a52a:	68a9      	ldr	r1, [r5, #8]
 800a52c:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 800a530:	1a9b      	subs	r3, r3, r2
 800a532:	1a59      	subs	r1, r3, r1
 800a534:	f1a1 0104 	sub.w	r1, r1, #4
 800a538:	fab1 f181 	clz	r1, r1
 800a53c:	2008      	movs	r0, #8
 800a53e:	0949      	lsrs	r1, r1, #5
 800a540:	f7fb f90e 	bl	8005760 <_test_assert>
 800a544:	4604      	mov	r4, r0
 800a546:	b110      	cbz	r0, 800a54e <queues2_execute+0x15e>
 800a548:	f387 8811 	msr	BASEPRI, r7
 800a54c:	e797      	b.n	800a47e <queues2_execute+0x8e>
 800a54e:	f380 8811 	msr	BASEPRI, r0
 800a552:	f7ff fcf5 	bl	8009f40 <test_wait_threads>
 800a556:	f386 8811 	msr	BASEPRI, r6
 800a55a:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 800a55e:	f06f 0101 	mvn.w	r1, #1
 800a562:	1a9b      	subs	r3, r3, r2
 800a564:	4828      	ldr	r0, [pc, #160]	; (800a608 <queues2_execute+0x218>)
 800a566:	e9c5 2205 	strd	r2, r2, [r5, #20]
 800a56a:	60ab      	str	r3, [r5, #8]
 800a56c:	f7fb fea0 	bl	80062b0 <chThdDequeueAllI>
 800a570:	f384 8811 	msr	BASEPRI, r4
 800a574:	f386 8811 	msr	BASEPRI, r6
 800a578:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 800a57c:	68a9      	ldr	r1, [r5, #8]
 800a57e:	1a9b      	subs	r3, r3, r2
 800a580:	1a5f      	subs	r7, r3, r1
 800a582:	4279      	negs	r1, r7
 800a584:	4179      	adcs	r1, r7
 800a586:	2009      	movs	r0, #9
 800a588:	f7fb f8ea 	bl	8005760 <_test_assert>
 800a58c:	4603      	mov	r3, r0
 800a58e:	2800      	cmp	r0, #0
 800a590:	d193      	bne.n	800a4ba <queues2_execute+0xca>
 800a592:	f380 8811 	msr	BASEPRI, r0
 800a596:	2202      	movs	r2, #2
 800a598:	491d      	ldr	r1, [pc, #116]	; (800a610 <queues2_execute+0x220>)
 800a59a:	481b      	ldr	r0, [pc, #108]	; (800a608 <queues2_execute+0x218>)
 800a59c:	f7fe f950 	bl	8008840 <chOQWriteTimeout>
 800a5a0:	3802      	subs	r0, #2
 800a5a2:	4241      	negs	r1, r0
 800a5a4:	4141      	adcs	r1, r0
 800a5a6:	200a      	movs	r0, #10
 800a5a8:	f7fb f8da 	bl	8005760 <_test_assert>
 800a5ac:	4603      	mov	r3, r0
 800a5ae:	2800      	cmp	r0, #0
 800a5b0:	f47f af65 	bne.w	800a47e <queues2_execute+0x8e>
 800a5b4:	2202      	movs	r2, #2
 800a5b6:	4916      	ldr	r1, [pc, #88]	; (800a610 <queues2_execute+0x220>)
 800a5b8:	4813      	ldr	r0, [pc, #76]	; (800a608 <queues2_execute+0x218>)
 800a5ba:	f7fe f941 	bl	8008840 <chOQWriteTimeout>
 800a5be:	1e82      	subs	r2, r0, #2
 800a5c0:	4251      	negs	r1, r2
 800a5c2:	4151      	adcs	r1, r2
 800a5c4:	200b      	movs	r0, #11
 800a5c6:	f7fb f8cb 	bl	8005760 <_test_assert>
 800a5ca:	2800      	cmp	r0, #0
 800a5cc:	f47f af57 	bne.w	800a47e <queues2_execute+0x8e>
 800a5d0:	f386 8811 	msr	BASEPRI, r6
 800a5d4:	68a9      	ldr	r1, [r5, #8]
 800a5d6:	200c      	movs	r0, #12
 800a5d8:	fab1 f181 	clz	r1, r1
 800a5dc:	0949      	lsrs	r1, r1, #5
 800a5de:	f7fb f8bf 	bl	8005760 <_test_assert>
 800a5e2:	2800      	cmp	r0, #0
 800a5e4:	f47f af48 	bne.w	800a478 <queues2_execute+0x88>
 800a5e8:	2100      	movs	r1, #0
 800a5ea:	f381 8811 	msr	BASEPRI, r1
 800a5ee:	220a      	movs	r2, #10
 800a5f0:	4805      	ldr	r0, [pc, #20]	; (800a608 <queues2_execute+0x218>)
 800a5f2:	f7fe f97d 	bl	80088f0 <chOQPutTimeout>
 800a5f6:	1c43      	adds	r3, r0, #1
 800a5f8:	200d      	movs	r0, #13
 800a5fa:	4259      	negs	r1, r3
 800a5fc:	4159      	adcs	r1, r3
 800a5fe:	b002      	add	sp, #8
 800a600:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a604:	f7fb b8ac 	b.w	8005760 <_test_assert>
 800a608:	200018ac 	.word	0x200018ac
 800a60c:	0800ccc0 	.word	0x0800ccc0
 800a610:	200024f8 	.word	0x200024f8
 800a614:	20002158 	.word	0x20002158
 800a618:	08008941 	.word	0x08008941
 800a61c:	200023b0 	.word	0x200023b0
 800a620:	20002a44 	.word	0x20002a44
	...

0800a630 <queues1_execute>:
 800a630:	b570      	push	{r4, r5, r6, lr}
 800a632:	2620      	movs	r6, #32
 800a634:	b082      	sub	sp, #8
 800a636:	f386 8811 	msr	BASEPRI, r6
 800a63a:	4c99      	ldr	r4, [pc, #612]	; (800a8a0 <queues1_execute+0x270>)
 800a63c:	2001      	movs	r0, #1
 800a63e:	68a1      	ldr	r1, [r4, #8]
 800a640:	fab1 f181 	clz	r1, r1
 800a644:	0949      	lsrs	r1, r1, #5
 800a646:	f7fb f88b 	bl	8005760 <_test_assert>
 800a64a:	bb10      	cbnz	r0, 800a692 <queues1_execute+0x62>
 800a64c:	4605      	mov	r5, r0
 800a64e:	f380 8811 	msr	BASEPRI, r0
 800a652:	f386 8811 	msr	BASEPRI, r6
 800a656:	2141      	movs	r1, #65	; 0x41
 800a658:	4620      	mov	r0, r4
 800a65a:	f7fb fca9 	bl	8005fb0 <chIQPutI>
 800a65e:	4620      	mov	r0, r4
 800a660:	2142      	movs	r1, #66	; 0x42
 800a662:	f7fb fca5 	bl	8005fb0 <chIQPutI>
 800a666:	4620      	mov	r0, r4
 800a668:	2143      	movs	r1, #67	; 0x43
 800a66a:	f7fb fca1 	bl	8005fb0 <chIQPutI>
 800a66e:	4620      	mov	r0, r4
 800a670:	2144      	movs	r1, #68	; 0x44
 800a672:	f7fb fc9d 	bl	8005fb0 <chIQPutI>
 800a676:	f385 8811 	msr	BASEPRI, r5
 800a67a:	f386 8811 	msr	BASEPRI, r6
 800a67e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 800a682:	429a      	cmp	r2, r3
 800a684:	d038      	beq.n	800a6f8 <queues1_execute+0xc8>
 800a686:	4629      	mov	r1, r5
 800a688:	2002      	movs	r0, #2
 800a68a:	f7fb f869 	bl	8005760 <_test_assert>
 800a68e:	4605      	mov	r5, r0
 800a690:	b120      	cbz	r0, 800a69c <queues1_execute+0x6c>
 800a692:	2300      	movs	r3, #0
 800a694:	f383 8811 	msr	BASEPRI, r3
 800a698:	b002      	add	sp, #8
 800a69a:	bd70      	pop	{r4, r5, r6, pc}
 800a69c:	f380 8811 	msr	BASEPRI, r0
 800a6a0:	2320      	movs	r3, #32
 800a6a2:	f383 8811 	msr	BASEPRI, r3
 800a6a6:	487e      	ldr	r0, [pc, #504]	; (800a8a0 <queues1_execute+0x270>)
 800a6a8:	4629      	mov	r1, r5
 800a6aa:	f7fb fc81 	bl	8005fb0 <chIQPutI>
 800a6ae:	3004      	adds	r0, #4
 800a6b0:	bf14      	ite	ne
 800a6b2:	2100      	movne	r1, #0
 800a6b4:	2101      	moveq	r1, #1
 800a6b6:	2003      	movs	r0, #3
 800a6b8:	f7fb f852 	bl	8005760 <_test_assert>
 800a6bc:	b9c0      	cbnz	r0, 800a6f0 <queues1_execute+0xc0>
 800a6be:	f380 8811 	msr	BASEPRI, r0
 800a6c2:	2504      	movs	r5, #4
 800a6c4:	4e76      	ldr	r6, [pc, #472]	; (800a8a0 <queues1_execute+0x270>)
 800a6c6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800a6ca:	4630      	mov	r0, r6
 800a6cc:	f7fe f9a0 	bl	8008a10 <chIQGetTimeout>
 800a6d0:	b2c0      	uxtb	r0, r0
 800a6d2:	f7fb f85d 	bl	8005790 <test_emit_token>
 800a6d6:	3d01      	subs	r5, #1
 800a6d8:	d1f5      	bne.n	800a6c6 <queues1_execute+0x96>
 800a6da:	2620      	movs	r6, #32
 800a6dc:	f386 8811 	msr	BASEPRI, r6
 800a6e0:	68a1      	ldr	r1, [r4, #8]
 800a6e2:	2004      	movs	r0, #4
 800a6e4:	fab1 f181 	clz	r1, r1
 800a6e8:	0949      	lsrs	r1, r1, #5
 800a6ea:	f7fb f839 	bl	8005760 <_test_assert>
 800a6ee:	b178      	cbz	r0, 800a710 <queues1_execute+0xe0>
 800a6f0:	f385 8811 	msr	BASEPRI, r5
 800a6f4:	b002      	add	sp, #8
 800a6f6:	bd70      	pop	{r4, r5, r6, pc}
 800a6f8:	68a5      	ldr	r5, [r4, #8]
 800a6fa:	2002      	movs	r0, #2
 800a6fc:	3500      	adds	r5, #0
 800a6fe:	bf18      	it	ne
 800a700:	2501      	movne	r5, #1
 800a702:	4629      	mov	r1, r5
 800a704:	f7fb f82c 	bl	8005760 <_test_assert>
 800a708:	4605      	mov	r5, r0
 800a70a:	2800      	cmp	r0, #0
 800a70c:	d1c1      	bne.n	800a692 <queues1_execute+0x62>
 800a70e:	e7c5      	b.n	800a69c <queues1_execute+0x6c>
 800a710:	f385 8811 	msr	BASEPRI, r5
 800a714:	4963      	ldr	r1, [pc, #396]	; (800a8a4 <queues1_execute+0x274>)
 800a716:	2005      	movs	r0, #5
 800a718:	f7fa fffa 	bl	8005710 <_test_assert_sequence>
 800a71c:	2800      	cmp	r0, #0
 800a71e:	d1bb      	bne.n	800a698 <queues1_execute+0x68>
 800a720:	f386 8811 	msr	BASEPRI, r6
 800a724:	2141      	movs	r1, #65	; 0x41
 800a726:	485e      	ldr	r0, [pc, #376]	; (800a8a0 <queues1_execute+0x270>)
 800a728:	f7fb fc42 	bl	8005fb0 <chIQPutI>
 800a72c:	2142      	movs	r1, #66	; 0x42
 800a72e:	485c      	ldr	r0, [pc, #368]	; (800a8a0 <queues1_execute+0x270>)
 800a730:	f7fb fc3e 	bl	8005fb0 <chIQPutI>
 800a734:	2143      	movs	r1, #67	; 0x43
 800a736:	485a      	ldr	r0, [pc, #360]	; (800a8a0 <queues1_execute+0x270>)
 800a738:	f7fb fc3a 	bl	8005fb0 <chIQPutI>
 800a73c:	2144      	movs	r1, #68	; 0x44
 800a73e:	4858      	ldr	r0, [pc, #352]	; (800a8a0 <queues1_execute+0x270>)
 800a740:	f7fb fc36 	bl	8005fb0 <chIQPutI>
 800a744:	f385 8811 	msr	BASEPRI, r5
 800a748:	4957      	ldr	r1, [pc, #348]	; (800a8a8 <queues1_execute+0x278>)
 800a74a:	2208      	movs	r2, #8
 800a74c:	462b      	mov	r3, r5
 800a74e:	4854      	ldr	r0, [pc, #336]	; (800a8a0 <queues1_execute+0x270>)
 800a750:	f7fe f90e 	bl	8008970 <chIQReadTimeout>
 800a754:	f1a0 0104 	sub.w	r1, r0, #4
 800a758:	fab1 f181 	clz	r1, r1
 800a75c:	2006      	movs	r0, #6
 800a75e:	0949      	lsrs	r1, r1, #5
 800a760:	f7fa fffe 	bl	8005760 <_test_assert>
 800a764:	2800      	cmp	r0, #0
 800a766:	d197      	bne.n	800a698 <queues1_execute+0x68>
 800a768:	f386 8811 	msr	BASEPRI, r6
 800a76c:	68a1      	ldr	r1, [r4, #8]
 800a76e:	2007      	movs	r0, #7
 800a770:	fab1 f181 	clz	r1, r1
 800a774:	0949      	lsrs	r1, r1, #5
 800a776:	f7fa fff3 	bl	8005760 <_test_assert>
 800a77a:	2800      	cmp	r0, #0
 800a77c:	d1b8      	bne.n	800a6f0 <queues1_execute+0xc0>
 800a77e:	f385 8811 	msr	BASEPRI, r5
 800a782:	f386 8811 	msr	BASEPRI, r6
 800a786:	2141      	movs	r1, #65	; 0x41
 800a788:	4845      	ldr	r0, [pc, #276]	; (800a8a0 <queues1_execute+0x270>)
 800a78a:	f7fb fc11 	bl	8005fb0 <chIQPutI>
 800a78e:	2142      	movs	r1, #66	; 0x42
 800a790:	4843      	ldr	r0, [pc, #268]	; (800a8a0 <queues1_execute+0x270>)
 800a792:	f7fb fc0d 	bl	8005fb0 <chIQPutI>
 800a796:	2143      	movs	r1, #67	; 0x43
 800a798:	4841      	ldr	r0, [pc, #260]	; (800a8a0 <queues1_execute+0x270>)
 800a79a:	f7fb fc09 	bl	8005fb0 <chIQPutI>
 800a79e:	2144      	movs	r1, #68	; 0x44
 800a7a0:	483f      	ldr	r0, [pc, #252]	; (800a8a0 <queues1_execute+0x270>)
 800a7a2:	f7fb fc05 	bl	8005fb0 <chIQPutI>
 800a7a6:	f385 8811 	msr	BASEPRI, r5
 800a7aa:	493f      	ldr	r1, [pc, #252]	; (800a8a8 <queues1_execute+0x278>)
 800a7ac:	2202      	movs	r2, #2
 800a7ae:	462b      	mov	r3, r5
 800a7b0:	483b      	ldr	r0, [pc, #236]	; (800a8a0 <queues1_execute+0x270>)
 800a7b2:	f7fe f8dd 	bl	8008970 <chIQReadTimeout>
 800a7b6:	f1a0 0102 	sub.w	r1, r0, #2
 800a7ba:	fab1 f181 	clz	r1, r1
 800a7be:	2008      	movs	r0, #8
 800a7c0:	0949      	lsrs	r1, r1, #5
 800a7c2:	f7fa ffcd 	bl	8005760 <_test_assert>
 800a7c6:	2800      	cmp	r0, #0
 800a7c8:	f47f af66 	bne.w	800a698 <queues1_execute+0x68>
 800a7cc:	4936      	ldr	r1, [pc, #216]	; (800a8a8 <queues1_execute+0x278>)
 800a7ce:	462b      	mov	r3, r5
 800a7d0:	2202      	movs	r2, #2
 800a7d2:	4833      	ldr	r0, [pc, #204]	; (800a8a0 <queues1_execute+0x270>)
 800a7d4:	f7fe f8cc 	bl	8008970 <chIQReadTimeout>
 800a7d8:	f1a0 0102 	sub.w	r1, r0, #2
 800a7dc:	fab1 f181 	clz	r1, r1
 800a7e0:	2009      	movs	r0, #9
 800a7e2:	0949      	lsrs	r1, r1, #5
 800a7e4:	f7fa ffbc 	bl	8005760 <_test_assert>
 800a7e8:	2800      	cmp	r0, #0
 800a7ea:	f47f af55 	bne.w	800a698 <queues1_execute+0x68>
 800a7ee:	f386 8811 	msr	BASEPRI, r6
 800a7f2:	68a1      	ldr	r1, [r4, #8]
 800a7f4:	200a      	movs	r0, #10
 800a7f6:	fab1 f181 	clz	r1, r1
 800a7fa:	0949      	lsrs	r1, r1, #5
 800a7fc:	f7fa ffb0 	bl	8005760 <_test_assert>
 800a800:	2800      	cmp	r0, #0
 800a802:	f47f af75 	bne.w	800a6f0 <queues1_execute+0xc0>
 800a806:	f385 8811 	msr	BASEPRI, r5
 800a80a:	f386 8811 	msr	BASEPRI, r6
 800a80e:	4824      	ldr	r0, [pc, #144]	; (800a8a0 <queues1_execute+0x270>)
 800a810:	4629      	mov	r1, r5
 800a812:	f7fb fbcd 	bl	8005fb0 <chIQPutI>
 800a816:	68e3      	ldr	r3, [r4, #12]
 800a818:	f06f 0101 	mvn.w	r1, #1
 800a81c:	4820      	ldr	r0, [pc, #128]	; (800a8a0 <queues1_execute+0x270>)
 800a81e:	60a5      	str	r5, [r4, #8]
 800a820:	e9c4 3305 	strd	r3, r3, [r4, #20]
 800a824:	f7fb fd44 	bl	80062b0 <chThdDequeueAllI>
 800a828:	f385 8811 	msr	BASEPRI, r5
 800a82c:	f386 8811 	msr	BASEPRI, r6
 800a830:	68a1      	ldr	r1, [r4, #8]
 800a832:	200b      	movs	r0, #11
 800a834:	fab1 f181 	clz	r1, r1
 800a838:	0949      	lsrs	r1, r1, #5
 800a83a:	f7fa ff91 	bl	8005760 <_test_assert>
 800a83e:	2800      	cmp	r0, #0
 800a840:	f47f af56 	bne.w	800a6f0 <queues1_execute+0xc0>
 800a844:	f385 8811 	msr	BASEPRI, r5
 800a848:	4a18      	ldr	r2, [pc, #96]	; (800a8ac <queues1_execute+0x27c>)
 800a84a:	4b19      	ldr	r3, [pc, #100]	; (800a8b0 <queues1_execute+0x280>)
 800a84c:	6992      	ldr	r2, [r2, #24]
 800a84e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a852:	6892      	ldr	r2, [r2, #8]
 800a854:	4817      	ldr	r0, [pc, #92]	; (800a8b4 <queues1_execute+0x284>)
 800a856:	9500      	str	r5, [sp, #0]
 800a858:	3201      	adds	r2, #1
 800a85a:	f7fd fa51 	bl	8007d00 <chThdCreateStatic>
 800a85e:	4b16      	ldr	r3, [pc, #88]	; (800a8b8 <queues1_execute+0x288>)
 800a860:	6018      	str	r0, [r3, #0]
 800a862:	f386 8811 	msr	BASEPRI, r6
 800a866:	68a1      	ldr	r1, [r4, #8]
 800a868:	200c      	movs	r0, #12
 800a86a:	fab1 f181 	clz	r1, r1
 800a86e:	0949      	lsrs	r1, r1, #5
 800a870:	f7fa ff76 	bl	8005760 <_test_assert>
 800a874:	2300      	movs	r3, #0
 800a876:	b110      	cbz	r0, 800a87e <queues1_execute+0x24e>
 800a878:	f383 8811 	msr	BASEPRI, r3
 800a87c:	e70c      	b.n	800a698 <queues1_execute+0x68>
 800a87e:	f383 8811 	msr	BASEPRI, r3
 800a882:	f7ff fb5d 	bl	8009f40 <test_wait_threads>
 800a886:	210a      	movs	r1, #10
 800a888:	4805      	ldr	r0, [pc, #20]	; (800a8a0 <queues1_execute+0x270>)
 800a88a:	f7fe f8c1 	bl	8008a10 <chIQGetTimeout>
 800a88e:	1c43      	adds	r3, r0, #1
 800a890:	200d      	movs	r0, #13
 800a892:	4259      	negs	r1, r3
 800a894:	4159      	adcs	r1, r3
 800a896:	b002      	add	sp, #8
 800a898:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a89c:	f7fa bf60 	b.w	8005760 <_test_assert>
 800a8a0:	20001814 	.word	0x20001814
 800a8a4:	0800ccc0 	.word	0x0800ccc0
 800a8a8:	200024f8 	.word	0x200024f8
 800a8ac:	20002158 	.word	0x20002158
 800a8b0:	08008a61 	.word	0x08008a61
 800a8b4:	200023b0 	.word	0x200023b0
 800a8b8:	20002a44 	.word	0x20002a44
 800a8bc:	00000000 	.word	0x00000000

0800a8c0 <dyn2_execute>:
 800a8c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a8c2:	2720      	movs	r7, #32
 800a8c4:	2600      	movs	r6, #0
 800a8c6:	4a30      	ldr	r2, [pc, #192]	; (800a988 <dyn2_execute+0xc8>)
 800a8c8:	4b30      	ldr	r3, [pc, #192]	; (800a98c <dyn2_execute+0xcc>)
 800a8ca:	6991      	ldr	r1, [r2, #24]
 800a8cc:	4a30      	ldr	r2, [pc, #192]	; (800a990 <dyn2_execute+0xd0>)
 800a8ce:	688d      	ldr	r5, [r1, #8]
 800a8d0:	4930      	ldr	r1, [pc, #192]	; (800a994 <dyn2_execute+0xd4>)
 800a8d2:	f103 040c 	add.w	r4, r3, #12
 800a8d6:	f387 8811 	msr	BASEPRI, r7
 800a8da:	6808      	ldr	r0, [r1, #0]
 800a8dc:	6010      	str	r0, [r2, #0]
 800a8de:	600a      	str	r2, [r1, #0]
 800a8e0:	f386 8811 	msr	BASEPRI, r6
 800a8e4:	429c      	cmp	r4, r3
 800a8e6:	d002      	beq.n	800a8ee <dyn2_execute+0x2e>
 800a8e8:	f853 2b04 	ldr.w	r2, [r3], #4
 800a8ec:	e7f3      	b.n	800a8d6 <dyn2_execute+0x16>
 800a8ee:	492a      	ldr	r1, [pc, #168]	; (800a998 <dyn2_execute+0xd8>)
 800a8f0:	1e68      	subs	r0, r5, #1
 800a8f2:	f7fd f955 	bl	8007ba0 <chThdCreateFromMemoryPool.constprop.60>
 800a8f6:	4c29      	ldr	r4, [pc, #164]	; (800a99c <dyn2_execute+0xdc>)
 800a8f8:	4929      	ldr	r1, [pc, #164]	; (800a9a0 <dyn2_execute+0xe0>)
 800a8fa:	6020      	str	r0, [r4, #0]
 800a8fc:	1ea8      	subs	r0, r5, #2
 800a8fe:	f7fd f94f 	bl	8007ba0 <chThdCreateFromMemoryPool.constprop.60>
 800a902:	4928      	ldr	r1, [pc, #160]	; (800a9a4 <dyn2_execute+0xe4>)
 800a904:	6060      	str	r0, [r4, #4]
 800a906:	1ee8      	subs	r0, r5, #3
 800a908:	f7fd f94a 	bl	8007ba0 <chThdCreateFromMemoryPool.constprop.60>
 800a90c:	4926      	ldr	r1, [pc, #152]	; (800a9a8 <dyn2_execute+0xe8>)
 800a90e:	60a0      	str	r0, [r4, #8]
 800a910:	1f28      	subs	r0, r5, #4
 800a912:	f7fd f945 	bl	8007ba0 <chThdCreateFromMemoryPool.constprop.60>
 800a916:	4925      	ldr	r1, [pc, #148]	; (800a9ac <dyn2_execute+0xec>)
 800a918:	60e0      	str	r0, [r4, #12]
 800a91a:	1f68      	subs	r0, r5, #5
 800a91c:	f7fd f940 	bl	8007ba0 <chThdCreateFromMemoryPool.constprop.60>
 800a920:	6821      	ldr	r1, [r4, #0]
 800a922:	6120      	str	r0, [r4, #16]
 800a924:	b141      	cbz	r1, 800a938 <dyn2_execute+0x78>
 800a926:	6861      	ldr	r1, [r4, #4]
 800a928:	b131      	cbz	r1, 800a938 <dyn2_execute+0x78>
 800a92a:	68a1      	ldr	r1, [r4, #8]
 800a92c:	b121      	cbz	r1, 800a938 <dyn2_execute+0x78>
 800a92e:	68e1      	ldr	r1, [r4, #12]
 800a930:	b111      	cbz	r1, 800a938 <dyn2_execute+0x78>
 800a932:	fab0 f180 	clz	r1, r0
 800a936:	0949      	lsrs	r1, r1, #5
 800a938:	2001      	movs	r0, #1
 800a93a:	f7fa ff11 	bl	8005760 <_test_assert>
 800a93e:	b100      	cbz	r0, 800a942 <dyn2_execute+0x82>
 800a940:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a942:	f7ff fafd 	bl	8009f40 <test_wait_threads>
 800a946:	491a      	ldr	r1, [pc, #104]	; (800a9b0 <dyn2_execute+0xf0>)
 800a948:	2002      	movs	r0, #2
 800a94a:	f7fa fee1 	bl	8005710 <_test_assert_sequence>
 800a94e:	2800      	cmp	r0, #0
 800a950:	d1f6      	bne.n	800a940 <dyn2_execute+0x80>
 800a952:	2404      	movs	r4, #4
 800a954:	4d0f      	ldr	r5, [pc, #60]	; (800a994 <dyn2_execute+0xd4>)
 800a956:	4628      	mov	r0, r5
 800a958:	f7fb f982 	bl	8005c60 <chPoolAlloc>
 800a95c:	1c01      	adds	r1, r0, #0
 800a95e:	bf18      	it	ne
 800a960:	2101      	movne	r1, #1
 800a962:	2003      	movs	r0, #3
 800a964:	f7fa fefc 	bl	8005760 <_test_assert>
 800a968:	2800      	cmp	r0, #0
 800a96a:	d1e9      	bne.n	800a940 <dyn2_execute+0x80>
 800a96c:	3c01      	subs	r4, #1
 800a96e:	d1f2      	bne.n	800a956 <dyn2_execute+0x96>
 800a970:	4808      	ldr	r0, [pc, #32]	; (800a994 <dyn2_execute+0xd4>)
 800a972:	f7fb f975 	bl	8005c60 <chPoolAlloc>
 800a976:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800a97a:	fab0 f180 	clz	r1, r0
 800a97e:	2004      	movs	r0, #4
 800a980:	0949      	lsrs	r1, r1, #5
 800a982:	f7fa beed 	b.w	8005760 <_test_assert>
 800a986:	bf00      	nop
 800a988:	20002158 	.word	0x20002158
 800a98c:	0800d734 	.word	0x0800d734
 800a990:	200023b0 	.word	0x200023b0
 800a994:	20002380 	.word	0x20002380
 800a998:	0800ca70 	.word	0x0800ca70
 800a99c:	20002a44 	.word	0x20002a44
 800a9a0:	0800ca60 	.word	0x0800ca60
 800a9a4:	0800ca64 	.word	0x0800ca64
 800a9a8:	0800d2c0 	.word	0x0800d2c0
 800a9ac:	0800cb54 	.word	0x0800cb54
 800a9b0:	0800ccc0 	.word	0x0800ccc0
	...

0800a9c0 <dyn1_execute>:
 800a9c0:	b570      	push	{r4, r5, r6, lr}
 800a9c2:	4b34      	ldr	r3, [pc, #208]	; (800aa94 <dyn1_execute+0xd4>)
 800a9c4:	b084      	sub	sp, #16
 800a9c6:	699b      	ldr	r3, [r3, #24]
 800a9c8:	a902      	add	r1, sp, #8
 800a9ca:	4833      	ldr	r0, [pc, #204]	; (800aa98 <dyn1_execute+0xd8>)
 800a9cc:	689d      	ldr	r5, [r3, #8]
 800a9ce:	f7fe fd4f 	bl	8009470 <chHeapStatus>
 800a9d2:	4b32      	ldr	r3, [pc, #200]	; (800aa9c <dyn1_execute+0xdc>)
 800a9d4:	1e6a      	subs	r2, r5, #1
 800a9d6:	9300      	str	r3, [sp, #0]
 800a9d8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a9dc:	4b30      	ldr	r3, [pc, #192]	; (800aaa0 <dyn1_execute+0xe0>)
 800a9de:	482e      	ldr	r0, [pc, #184]	; (800aa98 <dyn1_execute+0xd8>)
 800a9e0:	f7fe fffe 	bl	80099e0 <chThdCreateFromHeap>
 800a9e4:	4c2f      	ldr	r4, [pc, #188]	; (800aaa4 <dyn1_execute+0xe4>)
 800a9e6:	4b30      	ldr	r3, [pc, #192]	; (800aaa8 <dyn1_execute+0xe8>)
 800a9e8:	1eaa      	subs	r2, r5, #2
 800a9ea:	6020      	str	r0, [r4, #0]
 800a9ec:	9300      	str	r3, [sp, #0]
 800a9ee:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800a9f2:	4b2b      	ldr	r3, [pc, #172]	; (800aaa0 <dyn1_execute+0xe0>)
 800a9f4:	4828      	ldr	r0, [pc, #160]	; (800aa98 <dyn1_execute+0xd8>)
 800a9f6:	f7fe fff3 	bl	80099e0 <chThdCreateFromHeap>
 800a9fa:	a903      	add	r1, sp, #12
 800a9fc:	6060      	str	r0, [r4, #4]
 800a9fe:	4826      	ldr	r0, [pc, #152]	; (800aa98 <dyn1_execute+0xd8>)
 800aa00:	f7fe fd36 	bl	8009470 <chHeapStatus>
 800aa04:	9903      	ldr	r1, [sp, #12]
 800aa06:	4824      	ldr	r0, [pc, #144]	; (800aa98 <dyn1_execute+0xd8>)
 800aa08:	f7fe fe7a 	bl	8009700 <chHeapAlloc>
 800aa0c:	4b27      	ldr	r3, [pc, #156]	; (800aaac <dyn1_execute+0xec>)
 800aa0e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800aa12:	4606      	mov	r6, r0
 800aa14:	1eea      	subs	r2, r5, #3
 800aa16:	9300      	str	r3, [sp, #0]
 800aa18:	481f      	ldr	r0, [pc, #124]	; (800aa98 <dyn1_execute+0xd8>)
 800aa1a:	4b21      	ldr	r3, [pc, #132]	; (800aaa0 <dyn1_execute+0xe0>)
 800aa1c:	f7fe ffe0 	bl	80099e0 <chThdCreateFromHeap>
 800aa20:	60a0      	str	r0, [r4, #8]
 800aa22:	4630      	mov	r0, r6
 800aa24:	f7fe fd7c 	bl	8009520 <chHeapFree>
 800aa28:	6821      	ldr	r1, [r4, #0]
 800aa2a:	b121      	cbz	r1, 800aa36 <dyn1_execute+0x76>
 800aa2c:	6861      	ldr	r1, [r4, #4]
 800aa2e:	b111      	cbz	r1, 800aa36 <dyn1_execute+0x76>
 800aa30:	68a1      	ldr	r1, [r4, #8]
 800aa32:	b331      	cbz	r1, 800aa82 <dyn1_execute+0xc2>
 800aa34:	2100      	movs	r1, #0
 800aa36:	2001      	movs	r0, #1
 800aa38:	f7fa fe92 	bl	8005760 <_test_assert>
 800aa3c:	b108      	cbz	r0, 800aa42 <dyn1_execute+0x82>
 800aa3e:	b004      	add	sp, #16
 800aa40:	bd70      	pop	{r4, r5, r6, pc}
 800aa42:	f7ff fa7d 	bl	8009f40 <test_wait_threads>
 800aa46:	491a      	ldr	r1, [pc, #104]	; (800aab0 <dyn1_execute+0xf0>)
 800aa48:	2002      	movs	r0, #2
 800aa4a:	f7fa fe61 	bl	8005710 <_test_assert_sequence>
 800aa4e:	2800      	cmp	r0, #0
 800aa50:	d1f5      	bne.n	800aa3e <dyn1_execute+0x7e>
 800aa52:	a903      	add	r1, sp, #12
 800aa54:	4810      	ldr	r0, [pc, #64]	; (800aa98 <dyn1_execute+0xd8>)
 800aa56:	f7fe fd0b 	bl	8009470 <chHeapStatus>
 800aa5a:	f1a0 0101 	sub.w	r1, r0, #1
 800aa5e:	fab1 f181 	clz	r1, r1
 800aa62:	2003      	movs	r0, #3
 800aa64:	0949      	lsrs	r1, r1, #5
 800aa66:	f7fa fe7b 	bl	8005760 <_test_assert>
 800aa6a:	2800      	cmp	r0, #0
 800aa6c:	d1e7      	bne.n	800aa3e <dyn1_execute+0x7e>
 800aa6e:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 800aa72:	1ac9      	subs	r1, r1, r3
 800aa74:	fab1 f181 	clz	r1, r1
 800aa78:	2004      	movs	r0, #4
 800aa7a:	0949      	lsrs	r1, r1, #5
 800aa7c:	f7fa fe70 	bl	8005760 <_test_assert>
 800aa80:	e7dd      	b.n	800aa3e <dyn1_execute+0x7e>
 800aa82:	68e3      	ldr	r3, [r4, #12]
 800aa84:	2b00      	cmp	r3, #0
 800aa86:	d1d6      	bne.n	800aa36 <dyn1_execute+0x76>
 800aa88:	6921      	ldr	r1, [r4, #16]
 800aa8a:	fab1 f181 	clz	r1, r1
 800aa8e:	0949      	lsrs	r1, r1, #5
 800aa90:	e7d1      	b.n	800aa36 <dyn1_execute+0x76>
 800aa92:	bf00      	nop
 800aa94:	20002158 	.word	0x20002158
 800aa98:	20002328 	.word	0x20002328
 800aa9c:	0800ca70 	.word	0x0800ca70
 800aaa0:	080057f1 	.word	0x080057f1
 800aaa4:	20002a44 	.word	0x20002a44
 800aaa8:	0800ca60 	.word	0x0800ca60
 800aaac:	0800ca64 	.word	0x0800ca64
 800aab0:	0800ca50 	.word	0x0800ca50
	...

0800aac0 <evt2_execute>:
 800aac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aac4:	2620      	movs	r6, #32
 800aac6:	b08f      	sub	sp, #60	; 0x3c
 800aac8:	f386 8811 	msr	BASEPRI, r6
 800aacc:	4cad      	ldr	r4, [pc, #692]	; (800ad84 <evt2_execute+0x2c4>)
 800aace:	2100      	movs	r1, #0
 800aad0:	69a2      	ldr	r2, [r4, #24]
 800aad2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800aad4:	f043 0307 	orr.w	r3, r3, #7
 800aad8:	6353      	str	r3, [r2, #52]	; 0x34
 800aada:	f381 8811 	msr	BASEPRI, r1
 800aade:	f7fd f9df 	bl	8007ea0 <chEvtWaitOne.constprop.40>
 800aae2:	f1a0 0101 	sub.w	r1, r0, #1
 800aae6:	fab1 f181 	clz	r1, r1
 800aaea:	2001      	movs	r0, #1
 800aaec:	0949      	lsrs	r1, r1, #5
 800aaee:	f7fa fe37 	bl	8005760 <_test_assert>
 800aaf2:	b110      	cbz	r0, 800aafa <evt2_execute+0x3a>
 800aaf4:	b00f      	add	sp, #60	; 0x3c
 800aaf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aafa:	f7fd f9d1 	bl	8007ea0 <chEvtWaitOne.constprop.40>
 800aafe:	f1a0 0102 	sub.w	r1, r0, #2
 800ab02:	fab1 f181 	clz	r1, r1
 800ab06:	2002      	movs	r0, #2
 800ab08:	0949      	lsrs	r1, r1, #5
 800ab0a:	f7fa fe29 	bl	8005760 <_test_assert>
 800ab0e:	2800      	cmp	r0, #0
 800ab10:	d1f0      	bne.n	800aaf4 <evt2_execute+0x34>
 800ab12:	f7fd f9c5 	bl	8007ea0 <chEvtWaitOne.constprop.40>
 800ab16:	f1a0 0104 	sub.w	r1, r0, #4
 800ab1a:	fab1 f181 	clz	r1, r1
 800ab1e:	2003      	movs	r0, #3
 800ab20:	0949      	lsrs	r1, r1, #5
 800ab22:	f7fa fe1d 	bl	8005760 <_test_assert>
 800ab26:	2800      	cmp	r0, #0
 800ab28:	d1e4      	bne.n	800aaf4 <evt2_execute+0x34>
 800ab2a:	f7fa fb89 	bl	8005240 <chEvtGetAndClearEvents.constprop.44>
 800ab2e:	fab0 f180 	clz	r1, r0
 800ab32:	2004      	movs	r0, #4
 800ab34:	0949      	lsrs	r1, r1, #5
 800ab36:	f7fa fe13 	bl	8005760 <_test_assert>
 800ab3a:	4605      	mov	r5, r0
 800ab3c:	2800      	cmp	r0, #0
 800ab3e:	d1d9      	bne.n	800aaf4 <evt2_execute+0x34>
 800ab40:	f7fe f886 	bl	8008c50 <test_wait_tick>
 800ab44:	f386 8811 	msr	BASEPRI, r6
 800ab48:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 800ab4c:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
 800ab50:	b2bf      	uxth	r7, r7
 800ab52:	f385 8811 	msr	BASEPRI, r5
 800ab56:	69a0      	ldr	r0, [r4, #24]
 800ab58:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800ab5c:	6882      	ldr	r2, [r0, #8]
 800ab5e:	4b8a      	ldr	r3, [pc, #552]	; (800ad88 <evt2_execute+0x2c8>)
 800ab60:	3a01      	subs	r2, #1
 800ab62:	9000      	str	r0, [sp, #0]
 800ab64:	4889      	ldr	r0, [pc, #548]	; (800ad8c <evt2_execute+0x2cc>)
 800ab66:	f7fd f8cb 	bl	8007d00 <chThdCreateStatic>
 800ab6a:	4d89      	ldr	r5, [pc, #548]	; (800ad90 <evt2_execute+0x2d0>)
 800ab6c:	6028      	str	r0, [r5, #0]
 800ab6e:	f7fd f997 	bl	8007ea0 <chEvtWaitOne.constprop.40>
 800ab72:	f107 026e 	add.w	r2, r7, #110	; 0x6e
 800ab76:	f107 0164 	add.w	r1, r7, #100	; 0x64
 800ab7a:	4681      	mov	r9, r0
 800ab7c:	b292      	uxth	r2, r2
 800ab7e:	b289      	uxth	r1, r1
 800ab80:	2005      	movs	r0, #5
 800ab82:	f7fa fda5 	bl	80056d0 <_test_assert_time_window>
 800ab86:	2800      	cmp	r0, #0
 800ab88:	d1b4      	bne.n	800aaf4 <evt2_execute+0x34>
 800ab8a:	f1a9 0101 	sub.w	r1, r9, #1
 800ab8e:	fab1 f181 	clz	r1, r1
 800ab92:	2006      	movs	r0, #6
 800ab94:	0949      	lsrs	r1, r1, #5
 800ab96:	f7fa fde3 	bl	8005760 <_test_assert>
 800ab9a:	2800      	cmp	r0, #0
 800ab9c:	d1aa      	bne.n	800aaf4 <evt2_execute+0x34>
 800ab9e:	f7fa fb4f 	bl	8005240 <chEvtGetAndClearEvents.constprop.44>
 800aba2:	fab0 f180 	clz	r1, r0
 800aba6:	2007      	movs	r0, #7
 800aba8:	0949      	lsrs	r1, r1, #5
 800abaa:	f7fa fdd9 	bl	8005760 <_test_assert>
 800abae:	4607      	mov	r7, r0
 800abb0:	2800      	cmp	r0, #0
 800abb2:	d19f      	bne.n	800aaf4 <evt2_execute+0x34>
 800abb4:	f7ff f9c4 	bl	8009f40 <test_wait_threads>
 800abb8:	f386 8811 	msr	BASEPRI, r6
 800abbc:	69a2      	ldr	r2, [r4, #24]
 800abbe:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800abc0:	f043 0305 	orr.w	r3, r3, #5
 800abc4:	6353      	str	r3, [r2, #52]	; 0x34
 800abc6:	f387 8811 	msr	BASEPRI, r7
 800abca:	f7fd f989 	bl	8007ee0 <chEvtWaitAny.constprop.39>
 800abce:	1f47      	subs	r7, r0, #5
 800abd0:	4279      	negs	r1, r7
 800abd2:	4179      	adcs	r1, r7
 800abd4:	2008      	movs	r0, #8
 800abd6:	f7fa fdc3 	bl	8005760 <_test_assert>
 800abda:	2800      	cmp	r0, #0
 800abdc:	d18a      	bne.n	800aaf4 <evt2_execute+0x34>
 800abde:	f7fa fb2f 	bl	8005240 <chEvtGetAndClearEvents.constprop.44>
 800abe2:	fab0 f180 	clz	r1, r0
 800abe6:	2009      	movs	r0, #9
 800abe8:	0949      	lsrs	r1, r1, #5
 800abea:	f7fa fdb9 	bl	8005760 <_test_assert>
 800abee:	4607      	mov	r7, r0
 800abf0:	2800      	cmp	r0, #0
 800abf2:	f47f af7f 	bne.w	800aaf4 <evt2_execute+0x34>
 800abf6:	f7fe f82b 	bl	8008c50 <test_wait_tick>
 800abfa:	f386 8811 	msr	BASEPRI, r6
 800abfe:	f8d8 6024 	ldr.w	r6, [r8, #36]	; 0x24
 800ac02:	b2b6      	uxth	r6, r6
 800ac04:	f387 8811 	msr	BASEPRI, r7
 800ac08:	69a0      	ldr	r0, [r4, #24]
 800ac0a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800ac0e:	6882      	ldr	r2, [r0, #8]
 800ac10:	4b5d      	ldr	r3, [pc, #372]	; (800ad88 <evt2_execute+0x2c8>)
 800ac12:	3a01      	subs	r2, #1
 800ac14:	9000      	str	r0, [sp, #0]
 800ac16:	485d      	ldr	r0, [pc, #372]	; (800ad8c <evt2_execute+0x2cc>)
 800ac18:	f7fd f872 	bl	8007d00 <chThdCreateStatic>
 800ac1c:	6028      	str	r0, [r5, #0]
 800ac1e:	f7fd f95f 	bl	8007ee0 <chEvtWaitAny.constprop.39>
 800ac22:	f106 026e 	add.w	r2, r6, #110	; 0x6e
 800ac26:	f106 0164 	add.w	r1, r6, #100	; 0x64
 800ac2a:	4607      	mov	r7, r0
 800ac2c:	b292      	uxth	r2, r2
 800ac2e:	b289      	uxth	r1, r1
 800ac30:	200a      	movs	r0, #10
 800ac32:	f7fa fd4d 	bl	80056d0 <_test_assert_time_window>
 800ac36:	2800      	cmp	r0, #0
 800ac38:	f47f af5c 	bne.w	800aaf4 <evt2_execute+0x34>
 800ac3c:	1e78      	subs	r0, r7, #1
 800ac3e:	4241      	negs	r1, r0
 800ac40:	4141      	adcs	r1, r0
 800ac42:	200b      	movs	r0, #11
 800ac44:	f7fa fd8c 	bl	8005760 <_test_assert>
 800ac48:	2800      	cmp	r0, #0
 800ac4a:	f47f af53 	bne.w	800aaf4 <evt2_execute+0x34>
 800ac4e:	f7fa faf7 	bl	8005240 <chEvtGetAndClearEvents.constprop.44>
 800ac52:	fab0 f180 	clz	r1, r0
 800ac56:	200c      	movs	r0, #12
 800ac58:	0949      	lsrs	r1, r1, #5
 800ac5a:	f7fa fd81 	bl	8005760 <_test_assert>
 800ac5e:	4680      	mov	r8, r0
 800ac60:	2800      	cmp	r0, #0
 800ac62:	f47f af47 	bne.w	800aaf4 <evt2_execute+0x34>
 800ac66:	f7ff f96b 	bl	8009f40 <test_wait_threads>
 800ac6a:	4f4a      	ldr	r7, [pc, #296]	; (800ad94 <evt2_execute+0x2d4>)
 800ac6c:	4b4a      	ldr	r3, [pc, #296]	; (800ad98 <evt2_execute+0x2d8>)
 800ac6e:	f04f 0b20 	mov.w	fp, #32
 800ac72:	603f      	str	r7, [r7, #0]
 800ac74:	461e      	mov	r6, r3
 800ac76:	601b      	str	r3, [r3, #0]
 800ac78:	f38b 8811 	msr	BASEPRI, fp
 800ac7c:	2301      	movs	r3, #1
 800ac7e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800ac82:	6838      	ldr	r0, [r7, #0]
 800ac84:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
 800ac88:	69a1      	ldr	r1, [r4, #24]
 800ac8a:	f84a 0d28 	str.w	r0, [sl, #-40]!
 800ac8e:	f8cd 801c 	str.w	r8, [sp, #28]
 800ac92:	e9cd 1305 	strd	r1, r3, [sp, #20]
 800ac96:	f8c7 a000 	str.w	sl, [r7]
 800ac9a:	9208      	str	r2, [sp, #32]
 800ac9c:	f388 8811 	msr	BASEPRI, r8
 800aca0:	f38b 8811 	msr	BASEPRI, fp
 800aca4:	2304      	movs	r3, #4
 800aca6:	6830      	ldr	r0, [r6, #0]
 800aca8:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 800acac:	69a1      	ldr	r1, [r4, #24]
 800acae:	f849 0d14 	str.w	r0, [r9, #-20]!
 800acb2:	e9cd 820c 	strd	r8, r2, [sp, #48]	; 0x30
 800acb6:	e9cd 130a 	strd	r1, r3, [sp, #40]	; 0x28
 800acba:	f8c6 9000 	str.w	r9, [r6]
 800acbe:	f388 8811 	msr	BASEPRI, r8
 800acc2:	f7fd ffc5 	bl	8008c50 <test_wait_tick>
 800acc6:	f38b 8811 	msr	BASEPRI, fp
 800acca:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800acce:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800acd0:	b291      	uxth	r1, r2
 800acd2:	9103      	str	r1, [sp, #12]
 800acd4:	f388 8811 	msr	BASEPRI, r8
 800acd8:	69a2      	ldr	r2, [r4, #24]
 800acda:	4b30      	ldr	r3, [pc, #192]	; (800ad9c <evt2_execute+0x2dc>)
 800acdc:	6892      	ldr	r2, [r2, #8]
 800acde:	f101 0c64 	add.w	ip, r1, #100	; 0x64
 800ace2:	9300      	str	r3, [sp, #0]
 800ace4:	3a01      	subs	r2, #1
 800ace6:	4b2e      	ldr	r3, [pc, #184]	; (800ada0 <evt2_execute+0x2e0>)
 800ace8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800acec:	4827      	ldr	r0, [pc, #156]	; (800ad8c <evt2_execute+0x2cc>)
 800acee:	fa1f f68c 	uxth.w	r6, ip
 800acf2:	f7fd f805 	bl	8007d00 <chThdCreateStatic>
 800acf6:	69a4      	ldr	r4, [r4, #24]
 800acf8:	6028      	str	r0, [r5, #0]
 800acfa:	f38b 8811 	msr	BASEPRI, fp
 800acfe:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800ad00:	f003 0205 	and.w	r2, r3, #5
 800ad04:	2a05      	cmp	r2, #5
 800ad06:	d005      	beq.n	800ad14 <evt2_execute+0x254>
 800ad08:	2305      	movs	r3, #5
 800ad0a:	200b      	movs	r0, #11
 800ad0c:	6223      	str	r3, [r4, #32]
 800ad0e:	f7fd f82f 	bl	8007d70 <chSchGoSleepS>
 800ad12:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800ad14:	f023 0305 	bic.w	r3, r3, #5
 800ad18:	6363      	str	r3, [r4, #52]	; 0x34
 800ad1a:	2300      	movs	r3, #0
 800ad1c:	f383 8811 	msr	BASEPRI, r3
 800ad20:	9a03      	ldr	r2, [sp, #12]
 800ad22:	4631      	mov	r1, r6
 800ad24:	326e      	adds	r2, #110	; 0x6e
 800ad26:	b292      	uxth	r2, r2
 800ad28:	200d      	movs	r0, #13
 800ad2a:	f7fa fcd1 	bl	80056d0 <_test_assert_time_window>
 800ad2e:	2800      	cmp	r0, #0
 800ad30:	f47f aee0 	bne.w	800aaf4 <evt2_execute+0x34>
 800ad34:	f7fa fa84 	bl	8005240 <chEvtGetAndClearEvents.constprop.44>
 800ad38:	fab0 f180 	clz	r1, r0
 800ad3c:	200e      	movs	r0, #14
 800ad3e:	0949      	lsrs	r1, r1, #5
 800ad40:	f7fa fd0e 	bl	8005760 <_test_assert>
 800ad44:	2800      	cmp	r0, #0
 800ad46:	f47f aed5 	bne.w	800aaf4 <evt2_execute+0x34>
 800ad4a:	f7ff f8f9 	bl	8009f40 <test_wait_threads>
 800ad4e:	4651      	mov	r1, sl
 800ad50:	4810      	ldr	r0, [pc, #64]	; (800ad94 <evt2_execute+0x2d4>)
 800ad52:	f7fb f80d 	bl	8005d70 <chEvtUnregister>
 800ad56:	4649      	mov	r1, r9
 800ad58:	480f      	ldr	r0, [pc, #60]	; (800ad98 <evt2_execute+0x2d8>)
 800ad5a:	f7fb f809 	bl	8005d70 <chEvtUnregister>
 800ad5e:	6839      	ldr	r1, [r7, #0]
 800ad60:	200f      	movs	r0, #15
 800ad62:	1bca      	subs	r2, r1, r7
 800ad64:	4251      	negs	r1, r2
 800ad66:	4151      	adcs	r1, r2
 800ad68:	f7fa fcfa 	bl	8005760 <_test_assert>
 800ad6c:	2800      	cmp	r0, #0
 800ad6e:	f47f aec1 	bne.w	800aaf4 <evt2_execute+0x34>
 800ad72:	4b09      	ldr	r3, [pc, #36]	; (800ad98 <evt2_execute+0x2d8>)
 800ad74:	2010      	movs	r0, #16
 800ad76:	6819      	ldr	r1, [r3, #0]
 800ad78:	1acb      	subs	r3, r1, r3
 800ad7a:	4259      	negs	r1, r3
 800ad7c:	4159      	adcs	r1, r3
 800ad7e:	f7fa fcef 	bl	8005760 <_test_assert>
 800ad82:	e6b7      	b.n	800aaf4 <evt2_execute+0x34>
 800ad84:	20002158 	.word	0x20002158
 800ad88:	08008bb1 	.word	0x08008bb1
 800ad8c:	200023b0 	.word	0x200023b0
 800ad90:	20002a44 	.word	0x20002a44
 800ad94:	2000180c 	.word	0x2000180c
 800ad98:	20001810 	.word	0x20001810
 800ad9c:	0800ca70 	.word	0x0800ca70
 800ada0:	08008be1 	.word	0x08008be1
	...

0800adb0 <mtx8_execute>:
 800adb0:	b570      	push	{r4, r5, r6, lr}
 800adb2:	4b19      	ldr	r3, [pc, #100]	; (800ae18 <mtx8_execute+0x68>)
 800adb4:	4d19      	ldr	r5, [pc, #100]	; (800ae1c <mtx8_execute+0x6c>)
 800adb6:	699a      	ldr	r2, [r3, #24]
 800adb8:	4b19      	ldr	r3, [pc, #100]	; (800ae20 <mtx8_execute+0x70>)
 800adba:	6896      	ldr	r6, [r2, #8]
 800adbc:	b082      	sub	sp, #8
 800adbe:	1c72      	adds	r2, r6, #1
 800adc0:	9300      	str	r3, [sp, #0]
 800adc2:	4628      	mov	r0, r5
 800adc4:	4b17      	ldr	r3, [pc, #92]	; (800ae24 <mtx8_execute+0x74>)
 800adc6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800adca:	f7fc ff99 	bl	8007d00 <chThdCreateStatic>
 800adce:	4c16      	ldr	r4, [pc, #88]	; (800ae28 <mtx8_execute+0x78>)
 800add0:	4b16      	ldr	r3, [pc, #88]	; (800ae2c <mtx8_execute+0x7c>)
 800add2:	6020      	str	r0, [r4, #0]
 800add4:	1cb2      	adds	r2, r6, #2
 800add6:	9300      	str	r3, [sp, #0]
 800add8:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 800addc:	4b14      	ldr	r3, [pc, #80]	; (800ae30 <mtx8_execute+0x80>)
 800adde:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800ade2:	f7fc ff8d 	bl	8007d00 <chThdCreateStatic>
 800ade6:	4b13      	ldr	r3, [pc, #76]	; (800ae34 <mtx8_execute+0x84>)
 800ade8:	1cf2      	adds	r2, r6, #3
 800adea:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800adee:	6060      	str	r0, [r4, #4]
 800adf0:	9300      	str	r3, [sp, #0]
 800adf2:	f505 7024 	add.w	r0, r5, #656	; 0x290
 800adf6:	4b10      	ldr	r3, [pc, #64]	; (800ae38 <mtx8_execute+0x88>)
 800adf8:	f7fc ff82 	bl	8007d00 <chThdCreateStatic>
 800adfc:	60a0      	str	r0, [r4, #8]
 800adfe:	f7fc ff17 	bl	8007c30 <chCondSignal.constprop.52>
 800ae02:	f7fc ff15 	bl	8007c30 <chCondSignal.constprop.52>
 800ae06:	f7ff f89b 	bl	8009f40 <test_wait_threads>
 800ae0a:	2001      	movs	r0, #1
 800ae0c:	490b      	ldr	r1, [pc, #44]	; (800ae3c <mtx8_execute+0x8c>)
 800ae0e:	b002      	add	sp, #8
 800ae10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ae14:	f7fa bc7c 	b.w	8005710 <_test_assert_sequence>
 800ae18:	20002158 	.word	0x20002158
 800ae1c:	200023b0 	.word	0x200023b0
 800ae20:	0800ca70 	.word	0x0800ca70
 800ae24:	08009201 	.word	0x08009201
 800ae28:	20002a44 	.word	0x20002a44
 800ae2c:	0800ca64 	.word	0x0800ca64
 800ae30:	08009291 	.word	0x08009291
 800ae34:	0800ca60 	.word	0x0800ca60
 800ae38:	08009301 	.word	0x08009301
 800ae3c:	0800cb20 	.word	0x0800cb20

0800ae40 <mtx7_execute>:
 800ae40:	b530      	push	{r4, r5, lr}
 800ae42:	4b2c      	ldr	r3, [pc, #176]	; (800aef4 <mtx7_execute+0xb4>)
 800ae44:	482c      	ldr	r0, [pc, #176]	; (800aef8 <mtx7_execute+0xb8>)
 800ae46:	699a      	ldr	r2, [r3, #24]
 800ae48:	b083      	sub	sp, #12
 800ae4a:	6895      	ldr	r5, [r2, #8]
 800ae4c:	4b2b      	ldr	r3, [pc, #172]	; (800aefc <mtx7_execute+0xbc>)
 800ae4e:	1c6a      	adds	r2, r5, #1
 800ae50:	9000      	str	r0, [sp, #0]
 800ae52:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800ae56:	482a      	ldr	r0, [pc, #168]	; (800af00 <mtx7_execute+0xc0>)
 800ae58:	f7fc ff52 	bl	8007d00 <chThdCreateStatic>
 800ae5c:	4c29      	ldr	r4, [pc, #164]	; (800af04 <mtx7_execute+0xc4>)
 800ae5e:	4b2a      	ldr	r3, [pc, #168]	; (800af08 <mtx7_execute+0xc8>)
 800ae60:	6020      	str	r0, [r4, #0]
 800ae62:	1caa      	adds	r2, r5, #2
 800ae64:	9300      	str	r3, [sp, #0]
 800ae66:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800ae6a:	4b24      	ldr	r3, [pc, #144]	; (800aefc <mtx7_execute+0xbc>)
 800ae6c:	4827      	ldr	r0, [pc, #156]	; (800af0c <mtx7_execute+0xcc>)
 800ae6e:	f7fc ff47 	bl	8007d00 <chThdCreateStatic>
 800ae72:	4b27      	ldr	r3, [pc, #156]	; (800af10 <mtx7_execute+0xd0>)
 800ae74:	6060      	str	r0, [r4, #4]
 800ae76:	1cea      	adds	r2, r5, #3
 800ae78:	9300      	str	r3, [sp, #0]
 800ae7a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800ae7e:	4b1f      	ldr	r3, [pc, #124]	; (800aefc <mtx7_execute+0xbc>)
 800ae80:	4824      	ldr	r0, [pc, #144]	; (800af14 <mtx7_execute+0xd4>)
 800ae82:	f7fc ff3d 	bl	8007d00 <chThdCreateStatic>
 800ae86:	4b24      	ldr	r3, [pc, #144]	; (800af18 <mtx7_execute+0xd8>)
 800ae88:	60a0      	str	r0, [r4, #8]
 800ae8a:	1d2a      	adds	r2, r5, #4
 800ae8c:	9300      	str	r3, [sp, #0]
 800ae8e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800ae92:	4b1a      	ldr	r3, [pc, #104]	; (800aefc <mtx7_execute+0xbc>)
 800ae94:	4821      	ldr	r0, [pc, #132]	; (800af1c <mtx7_execute+0xdc>)
 800ae96:	f7fc ff33 	bl	8007d00 <chThdCreateStatic>
 800ae9a:	4b21      	ldr	r3, [pc, #132]	; (800af20 <mtx7_execute+0xe0>)
 800ae9c:	60e0      	str	r0, [r4, #12]
 800ae9e:	1d6a      	adds	r2, r5, #5
 800aea0:	9300      	str	r3, [sp, #0]
 800aea2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800aea6:	4b15      	ldr	r3, [pc, #84]	; (800aefc <mtx7_execute+0xbc>)
 800aea8:	481e      	ldr	r0, [pc, #120]	; (800af24 <mtx7_execute+0xe4>)
 800aeaa:	f7fc ff29 	bl	8007d00 <chThdCreateStatic>
 800aeae:	2320      	movs	r3, #32
 800aeb0:	6120      	str	r0, [r4, #16]
 800aeb2:	f383 8811 	msr	BASEPRI, r3
 800aeb6:	4c1c      	ldr	r4, [pc, #112]	; (800af28 <mtx7_execute+0xe8>)
 800aeb8:	6823      	ldr	r3, [r4, #0]
 800aeba:	42a3      	cmp	r3, r4
 800aebc:	d00b      	beq.n	800aed6 <mtx7_execute+0x96>
 800aebe:	f06f 0501 	mvn.w	r5, #1
 800aec2:	681a      	ldr	r2, [r3, #0]
 800aec4:	4618      	mov	r0, r3
 800aec6:	6054      	str	r4, [r2, #4]
 800aec8:	6022      	str	r2, [r4, #0]
 800aeca:	f7fb f841 	bl	8005f50 <chSchReadyI>
 800aece:	6823      	ldr	r3, [r4, #0]
 800aed0:	6205      	str	r5, [r0, #32]
 800aed2:	42a3      	cmp	r3, r4
 800aed4:	d1f5      	bne.n	800aec2 <mtx7_execute+0x82>
 800aed6:	f7fb ff73 	bl	8006dc0 <chSchRescheduleS>
 800aeda:	2300      	movs	r3, #0
 800aedc:	f383 8811 	msr	BASEPRI, r3
 800aee0:	f7ff f82e 	bl	8009f40 <test_wait_threads>
 800aee4:	2001      	movs	r0, #1
 800aee6:	4911      	ldr	r1, [pc, #68]	; (800af2c <mtx7_execute+0xec>)
 800aee8:	b003      	add	sp, #12
 800aeea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800aeee:	f7fa bc0f 	b.w	8005710 <_test_assert_sequence>
 800aef2:	bf00      	nop
 800aef4:	20002158 	.word	0x20002158
 800aef8:	0800cb54 	.word	0x0800cb54
 800aefc:	08009291 	.word	0x08009291
 800af00:	200023b0 	.word	0x200023b0
 800af04:	20002a44 	.word	0x20002a44
 800af08:	0800d2c0 	.word	0x0800d2c0
 800af0c:	200024f8 	.word	0x200024f8
 800af10:	0800ca64 	.word	0x0800ca64
 800af14:	20002640 	.word	0x20002640
 800af18:	0800ca60 	.word	0x0800ca60
 800af1c:	20002788 	.word	0x20002788
 800af20:	0800ca70 	.word	0x0800ca70
 800af24:	200028d0 	.word	0x200028d0
 800af28:	20001804 	.word	0x20001804
 800af2c:	0800cb50 	.word	0x0800cb50

0800af30 <mtx6_execute>:
 800af30:	b5f0      	push	{r4, r5, r6, r7, lr}
 800af32:	4b2c      	ldr	r3, [pc, #176]	; (800afe4 <mtx6_execute+0xb4>)
 800af34:	4e2c      	ldr	r6, [pc, #176]	; (800afe8 <mtx6_execute+0xb8>)
 800af36:	699b      	ldr	r3, [r3, #24]
 800af38:	4d2c      	ldr	r5, [pc, #176]	; (800afec <mtx6_execute+0xbc>)
 800af3a:	689f      	ldr	r7, [r3, #8]
 800af3c:	492c      	ldr	r1, [pc, #176]	; (800aff0 <mtx6_execute+0xc0>)
 800af3e:	b083      	sub	sp, #12
 800af40:	1c7a      	adds	r2, r7, #1
 800af42:	4633      	mov	r3, r6
 800af44:	9100      	str	r1, [sp, #0]
 800af46:	4628      	mov	r0, r5
 800af48:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800af4c:	f7fc fed8 	bl	8007d00 <chThdCreateStatic>
 800af50:	4c28      	ldr	r4, [pc, #160]	; (800aff4 <mtx6_execute+0xc4>)
 800af52:	4929      	ldr	r1, [pc, #164]	; (800aff8 <mtx6_execute+0xc8>)
 800af54:	6020      	str	r0, [r4, #0]
 800af56:	1cba      	adds	r2, r7, #2
 800af58:	4633      	mov	r3, r6
 800af5a:	9100      	str	r1, [sp, #0]
 800af5c:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 800af60:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800af64:	f7fc fecc 	bl	8007d00 <chThdCreateStatic>
 800af68:	4924      	ldr	r1, [pc, #144]	; (800affc <mtx6_execute+0xcc>)
 800af6a:	6060      	str	r0, [r4, #4]
 800af6c:	1cfa      	adds	r2, r7, #3
 800af6e:	4633      	mov	r3, r6
 800af70:	9100      	str	r1, [sp, #0]
 800af72:	f505 7024 	add.w	r0, r5, #656	; 0x290
 800af76:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800af7a:	f7fc fec1 	bl	8007d00 <chThdCreateStatic>
 800af7e:	4920      	ldr	r1, [pc, #128]	; (800b000 <mtx6_execute+0xd0>)
 800af80:	60a0      	str	r0, [r4, #8]
 800af82:	1d3a      	adds	r2, r7, #4
 800af84:	4633      	mov	r3, r6
 800af86:	9100      	str	r1, [sp, #0]
 800af88:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 800af8c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800af90:	f7fc feb6 	bl	8007d00 <chThdCreateStatic>
 800af94:	491b      	ldr	r1, [pc, #108]	; (800b004 <mtx6_execute+0xd4>)
 800af96:	60e0      	str	r0, [r4, #12]
 800af98:	4633      	mov	r3, r6
 800af9a:	9100      	str	r1, [sp, #0]
 800af9c:	1d7a      	adds	r2, r7, #5
 800af9e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 800afa2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800afa6:	f7fc feab 	bl	8007d00 <chThdCreateStatic>
 800afaa:	2320      	movs	r3, #32
 800afac:	6120      	str	r0, [r4, #16]
 800afae:	f383 8811 	msr	BASEPRI, r3
 800afb2:	f7fa ffe5 	bl	8005f80 <chCondSignalI.constprop.51>
 800afb6:	f7fa ffe3 	bl	8005f80 <chCondSignalI.constprop.51>
 800afba:	f7fa ffe1 	bl	8005f80 <chCondSignalI.constprop.51>
 800afbe:	f7fa ffdf 	bl	8005f80 <chCondSignalI.constprop.51>
 800afc2:	f7fa ffdd 	bl	8005f80 <chCondSignalI.constprop.51>
 800afc6:	f7fb fefb 	bl	8006dc0 <chSchRescheduleS>
 800afca:	2300      	movs	r3, #0
 800afcc:	f383 8811 	msr	BASEPRI, r3
 800afd0:	f7fe ffb6 	bl	8009f40 <test_wait_threads>
 800afd4:	2001      	movs	r0, #1
 800afd6:	490c      	ldr	r1, [pc, #48]	; (800b008 <mtx6_execute+0xd8>)
 800afd8:	b003      	add	sp, #12
 800afda:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800afde:	f7fa bb97 	b.w	8005710 <_test_assert_sequence>
 800afe2:	bf00      	nop
 800afe4:	20002158 	.word	0x20002158
 800afe8:	08009291 	.word	0x08009291
 800afec:	200023b0 	.word	0x200023b0
 800aff0:	0800cb54 	.word	0x0800cb54
 800aff4:	20002a44 	.word	0x20002a44
 800aff8:	0800d2c0 	.word	0x0800d2c0
 800affc:	0800ca64 	.word	0x0800ca64
 800b000:	0800ca60 	.word	0x0800ca60
 800b004:	0800ca70 	.word	0x0800ca70
 800b008:	0800cb50 	.word	0x0800cb50
 800b00c:	00000000 	.word	0x00000000

0800b010 <mtx4_execute>:
 800b010:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b014:	4d84      	ldr	r5, [pc, #528]	; (800b228 <mtx4_execute+0x218>)
 800b016:	4885      	ldr	r0, [pc, #532]	; (800b22c <mtx4_execute+0x21c>)
 800b018:	69aa      	ldr	r2, [r5, #24]
 800b01a:	b082      	sub	sp, #8
 800b01c:	6894      	ldr	r4, [r2, #8]
 800b01e:	4b84      	ldr	r3, [pc, #528]	; (800b230 <mtx4_execute+0x220>)
 800b020:	1c67      	adds	r7, r4, #1
 800b022:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b026:	463a      	mov	r2, r7
 800b028:	9000      	str	r0, [sp, #0]
 800b02a:	4882      	ldr	r0, [pc, #520]	; (800b234 <mtx4_execute+0x224>)
 800b02c:	f7fc fe68 	bl	8007d00 <chThdCreateStatic>
 800b030:	4e81      	ldr	r6, [pc, #516]	; (800b238 <mtx4_execute+0x228>)
 800b032:	4b82      	ldr	r3, [pc, #520]	; (800b23c <mtx4_execute+0x22c>)
 800b034:	f104 0802 	add.w	r8, r4, #2
 800b038:	6030      	str	r0, [r6, #0]
 800b03a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b03e:	4642      	mov	r2, r8
 800b040:	9300      	str	r3, [sp, #0]
 800b042:	487f      	ldr	r0, [pc, #508]	; (800b240 <mtx4_execute+0x230>)
 800b044:	4b7f      	ldr	r3, [pc, #508]	; (800b244 <mtx4_execute+0x234>)
 800b046:	f7fc fe5b 	bl	8007d00 <chThdCreateStatic>
 800b04a:	6070      	str	r0, [r6, #4]
 800b04c:	487e      	ldr	r0, [pc, #504]	; (800b248 <mtx4_execute+0x238>)
 800b04e:	f7fe f88f 	bl	8009170 <chMtxLock>
 800b052:	69ab      	ldr	r3, [r5, #24]
 800b054:	2001      	movs	r0, #1
 800b056:	6899      	ldr	r1, [r3, #8]
 800b058:	1b09      	subs	r1, r1, r4
 800b05a:	fab1 f181 	clz	r1, r1
 800b05e:	0949      	lsrs	r1, r1, #5
 800b060:	f7fa fb7e 	bl	8005760 <_test_assert>
 800b064:	b110      	cbz	r0, 800b06c <mtx4_execute+0x5c>
 800b066:	b002      	add	sp, #8
 800b068:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b06c:	20c8      	movs	r0, #200	; 0xc8
 800b06e:	f7fd fd0f 	bl	8008a90 <chThdSleep>
 800b072:	69ab      	ldr	r3, [r5, #24]
 800b074:	2002      	movs	r0, #2
 800b076:	6899      	ldr	r1, [r3, #8]
 800b078:	1bc9      	subs	r1, r1, r7
 800b07a:	fab1 f181 	clz	r1, r1
 800b07e:	0949      	lsrs	r1, r1, #5
 800b080:	f7fa fb6e 	bl	8005760 <_test_assert>
 800b084:	2800      	cmp	r0, #0
 800b086:	d1ee      	bne.n	800b066 <mtx4_execute+0x56>
 800b088:	4870      	ldr	r0, [pc, #448]	; (800b24c <mtx4_execute+0x23c>)
 800b08a:	f7fe f871 	bl	8009170 <chMtxLock>
 800b08e:	69ab      	ldr	r3, [r5, #24]
 800b090:	2003      	movs	r0, #3
 800b092:	6899      	ldr	r1, [r3, #8]
 800b094:	1bc9      	subs	r1, r1, r7
 800b096:	fab1 f181 	clz	r1, r1
 800b09a:	0949      	lsrs	r1, r1, #5
 800b09c:	f7fa fb60 	bl	8005760 <_test_assert>
 800b0a0:	2800      	cmp	r0, #0
 800b0a2:	d1e0      	bne.n	800b066 <mtx4_execute+0x56>
 800b0a4:	20c8      	movs	r0, #200	; 0xc8
 800b0a6:	f7fd fcf3 	bl	8008a90 <chThdSleep>
 800b0aa:	69ab      	ldr	r3, [r5, #24]
 800b0ac:	2004      	movs	r0, #4
 800b0ae:	6899      	ldr	r1, [r3, #8]
 800b0b0:	eba1 0108 	sub.w	r1, r1, r8
 800b0b4:	fab1 f181 	clz	r1, r1
 800b0b8:	0949      	lsrs	r1, r1, #5
 800b0ba:	f7fa fb51 	bl	8005760 <_test_assert>
 800b0be:	2800      	cmp	r0, #0
 800b0c0:	d1d1      	bne.n	800b066 <mtx4_execute+0x56>
 800b0c2:	4862      	ldr	r0, [pc, #392]	; (800b24c <mtx4_execute+0x23c>)
 800b0c4:	f7fc fdcc 	bl	8007c60 <chMtxUnlock>
 800b0c8:	69ab      	ldr	r3, [r5, #24]
 800b0ca:	2005      	movs	r0, #5
 800b0cc:	6899      	ldr	r1, [r3, #8]
 800b0ce:	1bc9      	subs	r1, r1, r7
 800b0d0:	fab1 f181 	clz	r1, r1
 800b0d4:	0949      	lsrs	r1, r1, #5
 800b0d6:	f7fa fb43 	bl	8005760 <_test_assert>
 800b0da:	2800      	cmp	r0, #0
 800b0dc:	d1c3      	bne.n	800b066 <mtx4_execute+0x56>
 800b0de:	20c8      	movs	r0, #200	; 0xc8
 800b0e0:	f7fd fcd6 	bl	8008a90 <chThdSleep>
 800b0e4:	69ab      	ldr	r3, [r5, #24]
 800b0e6:	2006      	movs	r0, #6
 800b0e8:	6899      	ldr	r1, [r3, #8]
 800b0ea:	1bc9      	subs	r1, r1, r7
 800b0ec:	fab1 f181 	clz	r1, r1
 800b0f0:	0949      	lsrs	r1, r1, #5
 800b0f2:	f7fa fb35 	bl	8005760 <_test_assert>
 800b0f6:	2800      	cmp	r0, #0
 800b0f8:	d1b5      	bne.n	800b066 <mtx4_execute+0x56>
 800b0fa:	f7fb fe89 	bl	8006e10 <chMtxUnlockAll>
 800b0fe:	69ab      	ldr	r3, [r5, #24]
 800b100:	2007      	movs	r0, #7
 800b102:	6899      	ldr	r1, [r3, #8]
 800b104:	1b09      	subs	r1, r1, r4
 800b106:	fab1 f181 	clz	r1, r1
 800b10a:	0949      	lsrs	r1, r1, #5
 800b10c:	f7fa fb28 	bl	8005760 <_test_assert>
 800b110:	2800      	cmp	r0, #0
 800b112:	d1a8      	bne.n	800b066 <mtx4_execute+0x56>
 800b114:	f7fe ff14 	bl	8009f40 <test_wait_threads>
 800b118:	4a4d      	ldr	r2, [pc, #308]	; (800b250 <mtx4_execute+0x240>)
 800b11a:	4b45      	ldr	r3, [pc, #276]	; (800b230 <mtx4_execute+0x220>)
 800b11c:	9200      	str	r2, [sp, #0]
 800b11e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b122:	463a      	mov	r2, r7
 800b124:	4843      	ldr	r0, [pc, #268]	; (800b234 <mtx4_execute+0x224>)
 800b126:	f7fc fdeb 	bl	8007d00 <chThdCreateStatic>
 800b12a:	4b4a      	ldr	r3, [pc, #296]	; (800b254 <mtx4_execute+0x244>)
 800b12c:	6030      	str	r0, [r6, #0]
 800b12e:	4642      	mov	r2, r8
 800b130:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b134:	9300      	str	r3, [sp, #0]
 800b136:	4842      	ldr	r0, [pc, #264]	; (800b240 <mtx4_execute+0x230>)
 800b138:	4b42      	ldr	r3, [pc, #264]	; (800b244 <mtx4_execute+0x234>)
 800b13a:	f7fc fde1 	bl	8007d00 <chThdCreateStatic>
 800b13e:	6070      	str	r0, [r6, #4]
 800b140:	4841      	ldr	r0, [pc, #260]	; (800b248 <mtx4_execute+0x238>)
 800b142:	f7fe f815 	bl	8009170 <chMtxLock>
 800b146:	69ab      	ldr	r3, [r5, #24]
 800b148:	2008      	movs	r0, #8
 800b14a:	6899      	ldr	r1, [r3, #8]
 800b14c:	1b0a      	subs	r2, r1, r4
 800b14e:	4251      	negs	r1, r2
 800b150:	4151      	adcs	r1, r2
 800b152:	f7fa fb05 	bl	8005760 <_test_assert>
 800b156:	2800      	cmp	r0, #0
 800b158:	d185      	bne.n	800b066 <mtx4_execute+0x56>
 800b15a:	20c8      	movs	r0, #200	; 0xc8
 800b15c:	f7fd fc98 	bl	8008a90 <chThdSleep>
 800b160:	69ab      	ldr	r3, [r5, #24]
 800b162:	2009      	movs	r0, #9
 800b164:	6899      	ldr	r1, [r3, #8]
 800b166:	1bcb      	subs	r3, r1, r7
 800b168:	4259      	negs	r1, r3
 800b16a:	4159      	adcs	r1, r3
 800b16c:	f7fa faf8 	bl	8005760 <_test_assert>
 800b170:	2800      	cmp	r0, #0
 800b172:	f47f af78 	bne.w	800b066 <mtx4_execute+0x56>
 800b176:	4835      	ldr	r0, [pc, #212]	; (800b24c <mtx4_execute+0x23c>)
 800b178:	f7fd fffa 	bl	8009170 <chMtxLock>
 800b17c:	69ab      	ldr	r3, [r5, #24]
 800b17e:	200a      	movs	r0, #10
 800b180:	6899      	ldr	r1, [r3, #8]
 800b182:	eba1 0e07 	sub.w	lr, r1, r7
 800b186:	f1de 0100 	rsbs	r1, lr, #0
 800b18a:	eb41 010e 	adc.w	r1, r1, lr
 800b18e:	f7fa fae7 	bl	8005760 <_test_assert>
 800b192:	2800      	cmp	r0, #0
 800b194:	f47f af67 	bne.w	800b066 <mtx4_execute+0x56>
 800b198:	20c8      	movs	r0, #200	; 0xc8
 800b19a:	f7fd fc79 	bl	8008a90 <chThdSleep>
 800b19e:	69ab      	ldr	r3, [r5, #24]
 800b1a0:	200b      	movs	r0, #11
 800b1a2:	6899      	ldr	r1, [r3, #8]
 800b1a4:	eba1 0c08 	sub.w	ip, r1, r8
 800b1a8:	f1dc 0100 	rsbs	r1, ip, #0
 800b1ac:	eb41 010c 	adc.w	r1, r1, ip
 800b1b0:	f7fa fad6 	bl	8005760 <_test_assert>
 800b1b4:	4606      	mov	r6, r0
 800b1b6:	2800      	cmp	r0, #0
 800b1b8:	f47f af55 	bne.w	800b066 <mtx4_execute+0x56>
 800b1bc:	2320      	movs	r3, #32
 800b1be:	f383 8811 	msr	BASEPRI, r3
 800b1c2:	4822      	ldr	r0, [pc, #136]	; (800b24c <mtx4_execute+0x23c>)
 800b1c4:	f7fa ffbc 	bl	8006140 <chMtxUnlockS>
 800b1c8:	f7fb fdfa 	bl	8006dc0 <chSchRescheduleS>
 800b1cc:	f386 8811 	msr	BASEPRI, r6
 800b1d0:	69ab      	ldr	r3, [r5, #24]
 800b1d2:	200c      	movs	r0, #12
 800b1d4:	6899      	ldr	r1, [r3, #8]
 800b1d6:	1bce      	subs	r6, r1, r7
 800b1d8:	4271      	negs	r1, r6
 800b1da:	4171      	adcs	r1, r6
 800b1dc:	f7fa fac0 	bl	8005760 <_test_assert>
 800b1e0:	2800      	cmp	r0, #0
 800b1e2:	f47f af40 	bne.w	800b066 <mtx4_execute+0x56>
 800b1e6:	20c8      	movs	r0, #200	; 0xc8
 800b1e8:	f7fd fc52 	bl	8008a90 <chThdSleep>
 800b1ec:	69ab      	ldr	r3, [r5, #24]
 800b1ee:	200d      	movs	r0, #13
 800b1f0:	6899      	ldr	r1, [r3, #8]
 800b1f2:	1bca      	subs	r2, r1, r7
 800b1f4:	4251      	negs	r1, r2
 800b1f6:	4151      	adcs	r1, r2
 800b1f8:	f7fa fab2 	bl	8005760 <_test_assert>
 800b1fc:	2800      	cmp	r0, #0
 800b1fe:	f47f af32 	bne.w	800b066 <mtx4_execute+0x56>
 800b202:	f7fb fe05 	bl	8006e10 <chMtxUnlockAll>
 800b206:	69ab      	ldr	r3, [r5, #24]
 800b208:	200e      	movs	r0, #14
 800b20a:	6899      	ldr	r1, [r3, #8]
 800b20c:	1b0b      	subs	r3, r1, r4
 800b20e:	4259      	negs	r1, r3
 800b210:	4159      	adcs	r1, r3
 800b212:	f7fa faa5 	bl	8005760 <_test_assert>
 800b216:	2800      	cmp	r0, #0
 800b218:	f47f af25 	bne.w	800b066 <mtx4_execute+0x56>
 800b21c:	b002      	add	sp, #8
 800b21e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b222:	f7fe be8d 	b.w	8009f40 <test_wait_threads>
 800b226:	bf00      	nop
 800b228:	20002158 	.word	0x20002158
 800b22c:	0800ca60 	.word	0x0800ca60
 800b230:	08009411 	.word	0x08009411
 800b234:	200023b0 	.word	0x200023b0
 800b238:	20002a44 	.word	0x20002a44
 800b23c:	0800ca70 	.word	0x0800ca70
 800b240:	200024f8 	.word	0x200024f8
 800b244:	08009431 	.word	0x08009431
 800b248:	20001868 	.word	0x20001868
 800b24c:	20001858 	.word	0x20001858
 800b250:	0800d2c0 	.word	0x0800d2c0
 800b254:	0800ca64 	.word	0x0800ca64
	...

0800b260 <mtx1_execute>:
 800b260:	b570      	push	{r4, r5, r6, lr}
 800b262:	4e29      	ldr	r6, [pc, #164]	; (800b308 <mtx1_execute+0xa8>)
 800b264:	b082      	sub	sp, #8
 800b266:	69b3      	ldr	r3, [r6, #24]
 800b268:	4828      	ldr	r0, [pc, #160]	; (800b30c <mtx1_execute+0xac>)
 800b26a:	689c      	ldr	r4, [r3, #8]
 800b26c:	f7fd ff80 	bl	8009170 <chMtxLock>
 800b270:	4b27      	ldr	r3, [pc, #156]	; (800b310 <mtx1_execute+0xb0>)
 800b272:	1c62      	adds	r2, r4, #1
 800b274:	9300      	str	r3, [sp, #0]
 800b276:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b27a:	4b26      	ldr	r3, [pc, #152]	; (800b314 <mtx1_execute+0xb4>)
 800b27c:	4826      	ldr	r0, [pc, #152]	; (800b318 <mtx1_execute+0xb8>)
 800b27e:	f7fc fd3f 	bl	8007d00 <chThdCreateStatic>
 800b282:	4d26      	ldr	r5, [pc, #152]	; (800b31c <mtx1_execute+0xbc>)
 800b284:	4b26      	ldr	r3, [pc, #152]	; (800b320 <mtx1_execute+0xc0>)
 800b286:	6028      	str	r0, [r5, #0]
 800b288:	1ca2      	adds	r2, r4, #2
 800b28a:	9300      	str	r3, [sp, #0]
 800b28c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b290:	4b20      	ldr	r3, [pc, #128]	; (800b314 <mtx1_execute+0xb4>)
 800b292:	4824      	ldr	r0, [pc, #144]	; (800b324 <mtx1_execute+0xc4>)
 800b294:	f7fc fd34 	bl	8007d00 <chThdCreateStatic>
 800b298:	4b23      	ldr	r3, [pc, #140]	; (800b328 <mtx1_execute+0xc8>)
 800b29a:	6068      	str	r0, [r5, #4]
 800b29c:	1ce2      	adds	r2, r4, #3
 800b29e:	9300      	str	r3, [sp, #0]
 800b2a0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b2a4:	4b1b      	ldr	r3, [pc, #108]	; (800b314 <mtx1_execute+0xb4>)
 800b2a6:	4821      	ldr	r0, [pc, #132]	; (800b32c <mtx1_execute+0xcc>)
 800b2a8:	f7fc fd2a 	bl	8007d00 <chThdCreateStatic>
 800b2ac:	4b20      	ldr	r3, [pc, #128]	; (800b330 <mtx1_execute+0xd0>)
 800b2ae:	60a8      	str	r0, [r5, #8]
 800b2b0:	1d22      	adds	r2, r4, #4
 800b2b2:	9300      	str	r3, [sp, #0]
 800b2b4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b2b8:	4b16      	ldr	r3, [pc, #88]	; (800b314 <mtx1_execute+0xb4>)
 800b2ba:	481e      	ldr	r0, [pc, #120]	; (800b334 <mtx1_execute+0xd4>)
 800b2bc:	f7fc fd20 	bl	8007d00 <chThdCreateStatic>
 800b2c0:	4b1d      	ldr	r3, [pc, #116]	; (800b338 <mtx1_execute+0xd8>)
 800b2c2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b2c6:	1d62      	adds	r2, r4, #5
 800b2c8:	60e8      	str	r0, [r5, #12]
 800b2ca:	9300      	str	r3, [sp, #0]
 800b2cc:	481b      	ldr	r0, [pc, #108]	; (800b33c <mtx1_execute+0xdc>)
 800b2ce:	4b11      	ldr	r3, [pc, #68]	; (800b314 <mtx1_execute+0xb4>)
 800b2d0:	f7fc fd16 	bl	8007d00 <chThdCreateStatic>
 800b2d4:	6128      	str	r0, [r5, #16]
 800b2d6:	480d      	ldr	r0, [pc, #52]	; (800b30c <mtx1_execute+0xac>)
 800b2d8:	f7fc fcc2 	bl	8007c60 <chMtxUnlock>
 800b2dc:	f7fe fe30 	bl	8009f40 <test_wait_threads>
 800b2e0:	69b3      	ldr	r3, [r6, #24]
 800b2e2:	2001      	movs	r0, #1
 800b2e4:	6899      	ldr	r1, [r3, #8]
 800b2e6:	1b09      	subs	r1, r1, r4
 800b2e8:	fab1 f181 	clz	r1, r1
 800b2ec:	0949      	lsrs	r1, r1, #5
 800b2ee:	f7fa fa37 	bl	8005760 <_test_assert>
 800b2f2:	b108      	cbz	r0, 800b2f8 <mtx1_execute+0x98>
 800b2f4:	b002      	add	sp, #8
 800b2f6:	bd70      	pop	{r4, r5, r6, pc}
 800b2f8:	2002      	movs	r0, #2
 800b2fa:	4911      	ldr	r1, [pc, #68]	; (800b340 <mtx1_execute+0xe0>)
 800b2fc:	b002      	add	sp, #8
 800b2fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b302:	f7fa ba05 	b.w	8005710 <_test_assert_sequence>
 800b306:	bf00      	nop
 800b308:	20002158 	.word	0x20002158
 800b30c:	20001858 	.word	0x20001858
 800b310:	0800cb54 	.word	0x0800cb54
 800b314:	08009451 	.word	0x08009451
 800b318:	200023b0 	.word	0x200023b0
 800b31c:	20002a44 	.word	0x20002a44
 800b320:	0800d2c0 	.word	0x0800d2c0
 800b324:	200024f8 	.word	0x200024f8
 800b328:	0800ca64 	.word	0x0800ca64
 800b32c:	20002640 	.word	0x20002640
 800b330:	0800ca60 	.word	0x0800ca60
 800b334:	20002788 	.word	0x20002788
 800b338:	0800ca70 	.word	0x0800ca70
 800b33c:	200028d0 	.word	0x200028d0
 800b340:	0800cb50 	.word	0x0800cb50
	...

0800b350 <sem2_execute>:
 800b350:	b570      	push	{r4, r5, r6, lr}
 800b352:	2320      	movs	r3, #32
 800b354:	b082      	sub	sp, #8
 800b356:	f383 8811 	msr	BASEPRI, r3
 800b35a:	4c4c      	ldr	r4, [pc, #304]	; (800b48c <sem2_execute+0x13c>)
 800b35c:	68a3      	ldr	r3, [r4, #8]
 800b35e:	3b01      	subs	r3, #1
 800b360:	bf5a      	itte	pl
 800b362:	60a3      	strpl	r3, [r4, #8]
 800b364:	2100      	movpl	r1, #0
 800b366:	2101      	movmi	r1, #1
 800b368:	2300      	movs	r3, #0
 800b36a:	f383 8811 	msr	BASEPRI, r3
 800b36e:	2001      	movs	r0, #1
 800b370:	f7fa f9f6 	bl	8005760 <_test_assert>
 800b374:	b108      	cbz	r0, 800b37a <sem2_execute+0x2a>
 800b376:	b002      	add	sp, #8
 800b378:	bd70      	pop	{r4, r5, r6, pc}
 800b37a:	6821      	ldr	r1, [r4, #0]
 800b37c:	2002      	movs	r0, #2
 800b37e:	1b09      	subs	r1, r1, r4
 800b380:	fab1 f181 	clz	r1, r1
 800b384:	0949      	lsrs	r1, r1, #5
 800b386:	f7fa f9eb 	bl	8005760 <_test_assert>
 800b38a:	2800      	cmp	r0, #0
 800b38c:	d1f3      	bne.n	800b376 <sem2_execute+0x26>
 800b38e:	68a1      	ldr	r1, [r4, #8]
 800b390:	2003      	movs	r0, #3
 800b392:	fab1 f181 	clz	r1, r1
 800b396:	0949      	lsrs	r1, r1, #5
 800b398:	f7fa f9e2 	bl	8005760 <_test_assert>
 800b39c:	2800      	cmp	r0, #0
 800b39e:	d1ea      	bne.n	800b376 <sem2_execute+0x26>
 800b3a0:	4a3b      	ldr	r2, [pc, #236]	; (800b490 <sem2_execute+0x140>)
 800b3a2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b3a6:	6992      	ldr	r2, [r2, #24]
 800b3a8:	4b3a      	ldr	r3, [pc, #232]	; (800b494 <sem2_execute+0x144>)
 800b3aa:	6892      	ldr	r2, [r2, #8]
 800b3ac:	9000      	str	r0, [sp, #0]
 800b3ae:	3a01      	subs	r2, #1
 800b3b0:	4839      	ldr	r0, [pc, #228]	; (800b498 <sem2_execute+0x148>)
 800b3b2:	f7fc fca5 	bl	8007d00 <chThdCreateStatic>
 800b3b6:	4b39      	ldr	r3, [pc, #228]	; (800b49c <sem2_execute+0x14c>)
 800b3b8:	6018      	str	r0, [r3, #0]
 800b3ba:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800b3be:	f7fc fde7 	bl	8007f90 <chSemWaitTimeout.constprop.58>
 800b3c2:	4605      	mov	r5, r0
 800b3c4:	f7fe fdbc 	bl	8009f40 <test_wait_threads>
 800b3c8:	fab5 f185 	clz	r1, r5
 800b3cc:	2004      	movs	r0, #4
 800b3ce:	0949      	lsrs	r1, r1, #5
 800b3d0:	f7fa f9c6 	bl	8005760 <_test_assert>
 800b3d4:	2800      	cmp	r0, #0
 800b3d6:	d1ce      	bne.n	800b376 <sem2_execute+0x26>
 800b3d8:	6821      	ldr	r1, [r4, #0]
 800b3da:	2005      	movs	r0, #5
 800b3dc:	1b09      	subs	r1, r1, r4
 800b3de:	fab1 f181 	clz	r1, r1
 800b3e2:	0949      	lsrs	r1, r1, #5
 800b3e4:	f7fa f9bc 	bl	8005760 <_test_assert>
 800b3e8:	2800      	cmp	r0, #0
 800b3ea:	d1c4      	bne.n	800b376 <sem2_execute+0x26>
 800b3ec:	68a1      	ldr	r1, [r4, #8]
 800b3ee:	2006      	movs	r0, #6
 800b3f0:	fab1 f181 	clz	r1, r1
 800b3f4:	0949      	lsrs	r1, r1, #5
 800b3f6:	f7fa f9b3 	bl	8005760 <_test_assert>
 800b3fa:	4605      	mov	r5, r0
 800b3fc:	2800      	cmp	r0, #0
 800b3fe:	d1ba      	bne.n	800b376 <sem2_execute+0x26>
 800b400:	f7fd fc26 	bl	8008c50 <test_wait_tick>
 800b404:	2320      	movs	r3, #32
 800b406:	f383 8811 	msr	BASEPRI, r3
 800b40a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b40e:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 800b410:	f385 8811 	msr	BASEPRI, r5
 800b414:	2541      	movs	r5, #65	; 0x41
 800b416:	4628      	mov	r0, r5
 800b418:	f7fa f9ba 	bl	8005790 <test_emit_token>
 800b41c:	2064      	movs	r0, #100	; 0x64
 800b41e:	f7fc fdb7 	bl	8007f90 <chSemWaitTimeout.constprop.58>
 800b422:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 800b426:	fab1 f181 	clz	r1, r1
 800b42a:	2007      	movs	r0, #7
 800b42c:	0949      	lsrs	r1, r1, #5
 800b42e:	f7fa f997 	bl	8005760 <_test_assert>
 800b432:	2800      	cmp	r0, #0
 800b434:	d19f      	bne.n	800b376 <sem2_execute+0x26>
 800b436:	6821      	ldr	r1, [r4, #0]
 800b438:	2008      	movs	r0, #8
 800b43a:	1b09      	subs	r1, r1, r4
 800b43c:	fab1 f181 	clz	r1, r1
 800b440:	0949      	lsrs	r1, r1, #5
 800b442:	f7fa f98d 	bl	8005760 <_test_assert>
 800b446:	2800      	cmp	r0, #0
 800b448:	d195      	bne.n	800b376 <sem2_execute+0x26>
 800b44a:	68a1      	ldr	r1, [r4, #8]
 800b44c:	2009      	movs	r0, #9
 800b44e:	fab1 f181 	clz	r1, r1
 800b452:	0949      	lsrs	r1, r1, #5
 800b454:	f7fa f984 	bl	8005760 <_test_assert>
 800b458:	3501      	adds	r5, #1
 800b45a:	b2ed      	uxtb	r5, r5
 800b45c:	2800      	cmp	r0, #0
 800b45e:	d18a      	bne.n	800b376 <sem2_execute+0x26>
 800b460:	2d46      	cmp	r5, #70	; 0x46
 800b462:	d1d8      	bne.n	800b416 <sem2_execute+0xc6>
 800b464:	490e      	ldr	r1, [pc, #56]	; (800b4a0 <sem2_execute+0x150>)
 800b466:	200a      	movs	r0, #10
 800b468:	f7fa f952 	bl	8005710 <_test_assert_sequence>
 800b46c:	2800      	cmp	r0, #0
 800b46e:	d182      	bne.n	800b376 <sem2_execute+0x26>
 800b470:	200b      	movs	r0, #11
 800b472:	b2b6      	uxth	r6, r6
 800b474:	f506 72fc 	add.w	r2, r6, #504	; 0x1f8
 800b478:	f506 76fa 	add.w	r6, r6, #500	; 0x1f4
 800b47c:	b292      	uxth	r2, r2
 800b47e:	b2b1      	uxth	r1, r6
 800b480:	b002      	add	sp, #8
 800b482:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b486:	f7fa b923 	b.w	80056d0 <_test_assert_time_window>
 800b48a:	bf00      	nop
 800b48c:	200018d0 	.word	0x200018d0
 800b490:	20002158 	.word	0x20002158
 800b494:	08008c21 	.word	0x08008c21
 800b498:	200023b0 	.word	0x200023b0
 800b49c:	20002a44 	.word	0x20002a44
 800b4a0:	0800cb50 	.word	0x0800cb50
	...

0800b4b0 <sem1_execute>:
 800b4b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b4b2:	4d4b      	ldr	r5, [pc, #300]	; (800b5e0 <sem1_execute+0x130>)
 800b4b4:	4f4b      	ldr	r7, [pc, #300]	; (800b5e4 <sem1_execute+0x134>)
 800b4b6:	69aa      	ldr	r2, [r5, #24]
 800b4b8:	b083      	sub	sp, #12
 800b4ba:	6892      	ldr	r2, [r2, #8]
 800b4bc:	4b4a      	ldr	r3, [pc, #296]	; (800b5e8 <sem1_execute+0x138>)
 800b4be:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b4c2:	3205      	adds	r2, #5
 800b4c4:	9700      	str	r7, [sp, #0]
 800b4c6:	4849      	ldr	r0, [pc, #292]	; (800b5ec <sem1_execute+0x13c>)
 800b4c8:	f7fc fc1a 	bl	8007d00 <chThdCreateStatic>
 800b4cc:	69ab      	ldr	r3, [r5, #24]
 800b4ce:	4c48      	ldr	r4, [pc, #288]	; (800b5f0 <sem1_execute+0x140>)
 800b4d0:	689a      	ldr	r2, [r3, #8]
 800b4d2:	4b48      	ldr	r3, [pc, #288]	; (800b5f4 <sem1_execute+0x144>)
 800b4d4:	6020      	str	r0, [r4, #0]
 800b4d6:	3201      	adds	r2, #1
 800b4d8:	9300      	str	r3, [sp, #0]
 800b4da:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b4de:	4b42      	ldr	r3, [pc, #264]	; (800b5e8 <sem1_execute+0x138>)
 800b4e0:	4845      	ldr	r0, [pc, #276]	; (800b5f8 <sem1_execute+0x148>)
 800b4e2:	f7fc fc0d 	bl	8007d00 <chThdCreateStatic>
 800b4e6:	69aa      	ldr	r2, [r5, #24]
 800b4e8:	4b44      	ldr	r3, [pc, #272]	; (800b5fc <sem1_execute+0x14c>)
 800b4ea:	6892      	ldr	r2, [r2, #8]
 800b4ec:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b4f0:	6060      	str	r0, [r4, #4]
 800b4f2:	3203      	adds	r2, #3
 800b4f4:	9300      	str	r3, [sp, #0]
 800b4f6:	4842      	ldr	r0, [pc, #264]	; (800b600 <sem1_execute+0x150>)
 800b4f8:	4b3b      	ldr	r3, [pc, #236]	; (800b5e8 <sem1_execute+0x138>)
 800b4fa:	f7fc fc01 	bl	8007d00 <chThdCreateStatic>
 800b4fe:	69aa      	ldr	r2, [r5, #24]
 800b500:	4b40      	ldr	r3, [pc, #256]	; (800b604 <sem1_execute+0x154>)
 800b502:	6892      	ldr	r2, [r2, #8]
 800b504:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b508:	60a0      	str	r0, [r4, #8]
 800b50a:	3204      	adds	r2, #4
 800b50c:	9300      	str	r3, [sp, #0]
 800b50e:	483e      	ldr	r0, [pc, #248]	; (800b608 <sem1_execute+0x158>)
 800b510:	4b35      	ldr	r3, [pc, #212]	; (800b5e8 <sem1_execute+0x138>)
 800b512:	f7fc fbf5 	bl	8007d00 <chThdCreateStatic>
 800b516:	69aa      	ldr	r2, [r5, #24]
 800b518:	4b3c      	ldr	r3, [pc, #240]	; (800b60c <sem1_execute+0x15c>)
 800b51a:	6892      	ldr	r2, [r2, #8]
 800b51c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b520:	3202      	adds	r2, #2
 800b522:	60e0      	str	r0, [r4, #12]
 800b524:	9300      	str	r3, [sp, #0]
 800b526:	483a      	ldr	r0, [pc, #232]	; (800b610 <sem1_execute+0x160>)
 800b528:	4b2f      	ldr	r3, [pc, #188]	; (800b5e8 <sem1_execute+0x138>)
 800b52a:	f7fc fbe9 	bl	8007d00 <chThdCreateStatic>
 800b52e:	6120      	str	r0, [r4, #16]
 800b530:	4838      	ldr	r0, [pc, #224]	; (800b614 <sem1_execute+0x164>)
 800b532:	f7fc fbc5 	bl	8007cc0 <chSemSignal>
 800b536:	4837      	ldr	r0, [pc, #220]	; (800b614 <sem1_execute+0x164>)
 800b538:	f7fc fbc2 	bl	8007cc0 <chSemSignal>
 800b53c:	4835      	ldr	r0, [pc, #212]	; (800b614 <sem1_execute+0x164>)
 800b53e:	f7fc fbbf 	bl	8007cc0 <chSemSignal>
 800b542:	4834      	ldr	r0, [pc, #208]	; (800b614 <sem1_execute+0x164>)
 800b544:	f7fc fbbc 	bl	8007cc0 <chSemSignal>
 800b548:	4832      	ldr	r0, [pc, #200]	; (800b614 <sem1_execute+0x164>)
 800b54a:	f7fc fbb9 	bl	8007cc0 <chSemSignal>
 800b54e:	f7fe fcf7 	bl	8009f40 <test_wait_threads>
 800b552:	4931      	ldr	r1, [pc, #196]	; (800b618 <sem1_execute+0x168>)
 800b554:	2001      	movs	r0, #1
 800b556:	f7fa f8db 	bl	8005710 <_test_assert_sequence>
 800b55a:	b108      	cbz	r0, 800b560 <sem1_execute+0xb0>
 800b55c:	b003      	add	sp, #12
 800b55e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b560:	69aa      	ldr	r2, [r5, #24]
 800b562:	4606      	mov	r6, r0
 800b564:	6892      	ldr	r2, [r2, #8]
 800b566:	4b20      	ldr	r3, [pc, #128]	; (800b5e8 <sem1_execute+0x138>)
 800b568:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b56c:	3205      	adds	r2, #5
 800b56e:	9700      	str	r7, [sp, #0]
 800b570:	481e      	ldr	r0, [pc, #120]	; (800b5ec <sem1_execute+0x13c>)
 800b572:	f7fc fbc5 	bl	8007d00 <chThdCreateStatic>
 800b576:	2320      	movs	r3, #32
 800b578:	6020      	str	r0, [r4, #0]
 800b57a:	f383 8811 	msr	BASEPRI, r3
 800b57e:	2502      	movs	r5, #2
 800b580:	4c24      	ldr	r4, [pc, #144]	; (800b614 <sem1_execute+0x164>)
 800b582:	e002      	b.n	800b58a <sem1_execute+0xda>
 800b584:	2d01      	cmp	r5, #1
 800b586:	d00e      	beq.n	800b5a6 <sem1_execute+0xf6>
 800b588:	2501      	movs	r5, #1
 800b58a:	68a3      	ldr	r3, [r4, #8]
 800b58c:	3301      	adds	r3, #1
 800b58e:	2b00      	cmp	r3, #0
 800b590:	60a3      	str	r3, [r4, #8]
 800b592:	dcf7      	bgt.n	800b584 <sem1_execute+0xd4>
 800b594:	6820      	ldr	r0, [r4, #0]
 800b596:	6803      	ldr	r3, [r0, #0]
 800b598:	605c      	str	r4, [r3, #4]
 800b59a:	6023      	str	r3, [r4, #0]
 800b59c:	f7fa fcd8 	bl	8005f50 <chSchReadyI>
 800b5a0:	2d01      	cmp	r5, #1
 800b5a2:	6206      	str	r6, [r0, #32]
 800b5a4:	d1f0      	bne.n	800b588 <sem1_execute+0xd8>
 800b5a6:	f7fb fc0b 	bl	8006dc0 <chSchRescheduleS>
 800b5aa:	2500      	movs	r5, #0
 800b5ac:	f385 8811 	msr	BASEPRI, r5
 800b5b0:	f7fe fcc6 	bl	8009f40 <test_wait_threads>
 800b5b4:	2320      	movs	r3, #32
 800b5b6:	f383 8811 	msr	BASEPRI, r3
 800b5ba:	68a1      	ldr	r1, [r4, #8]
 800b5bc:	2002      	movs	r0, #2
 800b5be:	f1a1 0101 	sub.w	r1, r1, #1
 800b5c2:	fab1 f181 	clz	r1, r1
 800b5c6:	0949      	lsrs	r1, r1, #5
 800b5c8:	f7fa f8ca 	bl	8005760 <_test_assert>
 800b5cc:	b918      	cbnz	r0, 800b5d6 <sem1_execute+0x126>
 800b5ce:	f380 8811 	msr	BASEPRI, r0
 800b5d2:	b003      	add	sp, #12
 800b5d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b5d6:	f385 8811 	msr	BASEPRI, r5
 800b5da:	b003      	add	sp, #12
 800b5dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b5de:	bf00      	nop
 800b5e0:	20002158 	.word	0x20002158
 800b5e4:	0800ca70 	.word	0x0800ca70
 800b5e8:	08009e11 	.word	0x08009e11
 800b5ec:	200023b0 	.word	0x200023b0
 800b5f0:	20002a44 	.word	0x20002a44
 800b5f4:	0800ca60 	.word	0x0800ca60
 800b5f8:	200024f8 	.word	0x200024f8
 800b5fc:	0800ca64 	.word	0x0800ca64
 800b600:	20002640 	.word	0x20002640
 800b604:	0800d2c0 	.word	0x0800d2c0
 800b608:	20002788 	.word	0x20002788
 800b60c:	0800cb54 	.word	0x0800cb54
 800b610:	200028d0 	.word	0x200028d0
 800b614:	200018d0 	.word	0x200018d0
 800b618:	0800cb50 	.word	0x0800cb50
 800b61c:	00000000 	.word	0x00000000

0800b620 <thd2_execute>:
 800b620:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b624:	4d41      	ldr	r5, [pc, #260]	; (800b72c <thd2_execute+0x10c>)
 800b626:	f8df 812c 	ldr.w	r8, [pc, #300]	; 800b754 <thd2_execute+0x134>
 800b62a:	69ab      	ldr	r3, [r5, #24]
 800b62c:	4c40      	ldr	r4, [pc, #256]	; (800b730 <thd2_execute+0x110>)
 800b62e:	689a      	ldr	r2, [r3, #8]
 800b630:	4940      	ldr	r1, [pc, #256]	; (800b734 <thd2_execute+0x114>)
 800b632:	b083      	sub	sp, #12
 800b634:	4643      	mov	r3, r8
 800b636:	9100      	str	r1, [sp, #0]
 800b638:	3a04      	subs	r2, #4
 800b63a:	f504 70a4 	add.w	r0, r4, #328	; 0x148
 800b63e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b642:	f7fc fb5d 	bl	8007d00 <chThdCreateStatic>
 800b646:	69ab      	ldr	r3, [r5, #24]
 800b648:	4e3b      	ldr	r6, [pc, #236]	; (800b738 <thd2_execute+0x118>)
 800b64a:	689a      	ldr	r2, [r3, #8]
 800b64c:	493b      	ldr	r1, [pc, #236]	; (800b73c <thd2_execute+0x11c>)
 800b64e:	6070      	str	r0, [r6, #4]
 800b650:	4643      	mov	r3, r8
 800b652:	9100      	str	r1, [sp, #0]
 800b654:	3a05      	subs	r2, #5
 800b656:	4620      	mov	r0, r4
 800b658:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b65c:	f7fc fb50 	bl	8007d00 <chThdCreateStatic>
 800b660:	69ab      	ldr	r3, [r5, #24]
 800b662:	4937      	ldr	r1, [pc, #220]	; (800b740 <thd2_execute+0x120>)
 800b664:	689a      	ldr	r2, [r3, #8]
 800b666:	6030      	str	r0, [r6, #0]
 800b668:	4643      	mov	r3, r8
 800b66a:	9100      	str	r1, [sp, #0]
 800b66c:	3a01      	subs	r2, #1
 800b66e:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 800b672:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b676:	f7fc fb43 	bl	8007d00 <chThdCreateStatic>
 800b67a:	69ab      	ldr	r3, [r5, #24]
 800b67c:	4931      	ldr	r1, [pc, #196]	; (800b744 <thd2_execute+0x124>)
 800b67e:	689a      	ldr	r2, [r3, #8]
 800b680:	6130      	str	r0, [r6, #16]
 800b682:	9100      	str	r1, [sp, #0]
 800b684:	3a02      	subs	r2, #2
 800b686:	4643      	mov	r3, r8
 800b688:	f504 7076 	add.w	r0, r4, #984	; 0x3d8
 800b68c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b690:	f7fc fb36 	bl	8007d00 <chThdCreateStatic>
 800b694:	2220      	movs	r2, #32
 800b696:	60f0      	str	r0, [r6, #12]
 800b698:	f382 8811 	msr	BASEPRI, r2
 800b69c:	2700      	movs	r7, #0
 800b69e:	2002      	movs	r0, #2
 800b6a0:	f04f 0901 	mov.w	r9, #1
 800b6a4:	69ab      	ldr	r3, [r5, #24]
 800b6a6:	4928      	ldr	r1, [pc, #160]	; (800b748 <thd2_execute+0x128>)
 800b6a8:	689b      	ldr	r3, [r3, #8]
 800b6aa:	f8c4 13b8 	str.w	r1, [r4, #952]	; 0x3b8
 800b6ae:	3b03      	subs	r3, #3
 800b6b0:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 800b6b4:	f8c4 32cc 	str.w	r3, [r4, #716]	; 0x2cc
 800b6b8:	f504 736d 	add.w	r3, r4, #948	; 0x3b4
 800b6bc:	f8c4 329c 	str.w	r3, [r4, #668]	; 0x29c
 800b6c0:	4b22      	ldr	r3, [pc, #136]	; (800b74c <thd2_execute+0x12c>)
 800b6c2:	6969      	ldr	r1, [r5, #20]
 800b6c4:	f8c4 33d4 	str.w	r3, [r4, #980]	; 0x3d4
 800b6c8:	f504 7324 	add.w	r3, r4, #656	; 0x290
 800b6cc:	f8a4 02ac 	strh.w	r0, [r4, #684]	; 0x2ac
 800b6d0:	f8c4 12a4 	str.w	r1, [r4, #676]	; 0x2a4
 800b6d4:	f8c4 83b4 	str.w	r8, [r4, #948]	; 0x3b4
 800b6d8:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
 800b6dc:	f504 702d 	add.w	r0, r4, #692	; 0x2b4
 800b6e0:	f8c4 72c8 	str.w	r7, [r4, #712]	; 0x2c8
 800b6e4:	f8c4 72c4 	str.w	r7, [r4, #708]	; 0x2c4
 800b6e8:	f8c4 72a8 	str.w	r7, [r4, #680]	; 0x2a8
 800b6ec:	f884 92ae 	strb.w	r9, [r4, #686]	; 0x2ae
 800b6f0:	610b      	str	r3, [r1, #16]
 800b6f2:	f504 712e 	add.w	r1, r4, #696	; 0x2b8
 800b6f6:	616b      	str	r3, [r5, #20]
 800b6f8:	60b3      	str	r3, [r6, #8]
 800b6fa:	f8c4 02b4 	str.w	r0, [r4, #692]	; 0x2b4
 800b6fe:	f8c4 12b8 	str.w	r1, [r4, #696]	; 0x2b8
 800b702:	f8c4 12bc 	str.w	r1, [r4, #700]	; 0x2bc
 800b706:	f387 8811 	msr	BASEPRI, r7
 800b70a:	68b0      	ldr	r0, [r6, #8]
 800b70c:	f382 8811 	msr	BASEPRI, r2
 800b710:	f7fa fc1e 	bl	8005f50 <chSchReadyI>
 800b714:	f387 8811 	msr	BASEPRI, r7
 800b718:	f7fe fc12 	bl	8009f40 <test_wait_threads>
 800b71c:	4648      	mov	r0, r9
 800b71e:	490c      	ldr	r1, [pc, #48]	; (800b750 <thd2_execute+0x130>)
 800b720:	b003      	add	sp, #12
 800b722:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b726:	f7f9 bff3 	b.w	8005710 <_test_assert_sequence>
 800b72a:	bf00      	nop
 800b72c:	20002158 	.word	0x20002158
 800b730:	200023b0 	.word	0x200023b0
 800b734:	0800d2c0 	.word	0x0800d2c0
 800b738:	20002a44 	.word	0x20002a44
 800b73c:	0800cb54 	.word	0x0800cb54
 800b740:	0800ca70 	.word	0x0800ca70
 800b744:	0800ca60 	.word	0x0800ca60
 800b748:	0800ca64 	.word	0x0800ca64
 800b74c:	08005211 	.word	0x08005211
 800b750:	0800cb50 	.word	0x0800cb50
 800b754:	080057e1 	.word	0x080057e1
	...

0800b760 <thd1_execute>:
 800b760:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b762:	4f27      	ldr	r7, [pc, #156]	; (800b800 <thd1_execute+0xa0>)
 800b764:	4e27      	ldr	r6, [pc, #156]	; (800b804 <thd1_execute+0xa4>)
 800b766:	69bb      	ldr	r3, [r7, #24]
 800b768:	4d27      	ldr	r5, [pc, #156]	; (800b808 <thd1_execute+0xa8>)
 800b76a:	689a      	ldr	r2, [r3, #8]
 800b76c:	4927      	ldr	r1, [pc, #156]	; (800b80c <thd1_execute+0xac>)
 800b76e:	b083      	sub	sp, #12
 800b770:	4633      	mov	r3, r6
 800b772:	9100      	str	r1, [sp, #0]
 800b774:	3a05      	subs	r2, #5
 800b776:	4628      	mov	r0, r5
 800b778:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b77c:	f7fc fac0 	bl	8007d00 <chThdCreateStatic>
 800b780:	69bb      	ldr	r3, [r7, #24]
 800b782:	4c23      	ldr	r4, [pc, #140]	; (800b810 <thd1_execute+0xb0>)
 800b784:	689a      	ldr	r2, [r3, #8]
 800b786:	4923      	ldr	r1, [pc, #140]	; (800b814 <thd1_execute+0xb4>)
 800b788:	6020      	str	r0, [r4, #0]
 800b78a:	4633      	mov	r3, r6
 800b78c:	9100      	str	r1, [sp, #0]
 800b78e:	3a04      	subs	r2, #4
 800b790:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 800b794:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b798:	f7fc fab2 	bl	8007d00 <chThdCreateStatic>
 800b79c:	69bb      	ldr	r3, [r7, #24]
 800b79e:	491e      	ldr	r1, [pc, #120]	; (800b818 <thd1_execute+0xb8>)
 800b7a0:	689a      	ldr	r2, [r3, #8]
 800b7a2:	6060      	str	r0, [r4, #4]
 800b7a4:	4633      	mov	r3, r6
 800b7a6:	9100      	str	r1, [sp, #0]
 800b7a8:	3a03      	subs	r2, #3
 800b7aa:	f505 7024 	add.w	r0, r5, #656	; 0x290
 800b7ae:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b7b2:	f7fc faa5 	bl	8007d00 <chThdCreateStatic>
 800b7b6:	69bb      	ldr	r3, [r7, #24]
 800b7b8:	4918      	ldr	r1, [pc, #96]	; (800b81c <thd1_execute+0xbc>)
 800b7ba:	689a      	ldr	r2, [r3, #8]
 800b7bc:	60a0      	str	r0, [r4, #8]
 800b7be:	4633      	mov	r3, r6
 800b7c0:	9100      	str	r1, [sp, #0]
 800b7c2:	3a02      	subs	r2, #2
 800b7c4:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 800b7c8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b7cc:	f7fc fa98 	bl	8007d00 <chThdCreateStatic>
 800b7d0:	69bb      	ldr	r3, [r7, #24]
 800b7d2:	4913      	ldr	r1, [pc, #76]	; (800b820 <thd1_execute+0xc0>)
 800b7d4:	689a      	ldr	r2, [r3, #8]
 800b7d6:	60e0      	str	r0, [r4, #12]
 800b7d8:	3a01      	subs	r2, #1
 800b7da:	4633      	mov	r3, r6
 800b7dc:	9100      	str	r1, [sp, #0]
 800b7de:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 800b7e2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800b7e6:	f7fc fa8b 	bl	8007d00 <chThdCreateStatic>
 800b7ea:	6120      	str	r0, [r4, #16]
 800b7ec:	f7fe fba8 	bl	8009f40 <test_wait_threads>
 800b7f0:	2001      	movs	r0, #1
 800b7f2:	490c      	ldr	r1, [pc, #48]	; (800b824 <thd1_execute+0xc4>)
 800b7f4:	b003      	add	sp, #12
 800b7f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800b7fa:	f7f9 bf89 	b.w	8005710 <_test_assert_sequence>
 800b7fe:	bf00      	nop
 800b800:	20002158 	.word	0x20002158
 800b804:	080057e1 	.word	0x080057e1
 800b808:	200023b0 	.word	0x200023b0
 800b80c:	0800cb54 	.word	0x0800cb54
 800b810:	20002a44 	.word	0x20002a44
 800b814:	0800d2c0 	.word	0x0800d2c0
 800b818:	0800ca64 	.word	0x0800ca64
 800b81c:	0800ca60 	.word	0x0800ca60
 800b820:	0800ca70 	.word	0x0800ca70
 800b824:	0800cb50 	.word	0x0800cb50
	...

0800b830 <TestThread>:
 800b830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b834:	4ca0      	ldr	r4, [pc, #640]	; (800bab8 <TestThread+0x288>)
 800b836:	b083      	sub	sp, #12
 800b838:	6020      	str	r0, [r4, #0]
 800b83a:	48a0      	ldr	r0, [pc, #640]	; (800babc <TestThread+0x28c>)
 800b83c:	f7f9 ffe0 	bl	8005800 <test_println>
 800b840:	489f      	ldr	r0, [pc, #636]	; (800bac0 <TestThread+0x290>)
 800b842:	f7f9 ffdd 	bl	8005800 <test_println>
 800b846:	489f      	ldr	r0, [pc, #636]	; (800bac4 <TestThread+0x294>)
 800b848:	f7f9 ffda 	bl	8005800 <test_println>
 800b84c:	212a      	movs	r1, #42	; 0x2a
 800b84e:	4d9e      	ldr	r5, [pc, #632]	; (800bac8 <TestThread+0x298>)
 800b850:	6820      	ldr	r0, [r4, #0]
 800b852:	6803      	ldr	r3, [r0, #0]
 800b854:	689b      	ldr	r3, [r3, #8]
 800b856:	4798      	blx	r3
 800b858:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800b85c:	2900      	cmp	r1, #0
 800b85e:	d1f7      	bne.n	800b850 <TestThread+0x20>
 800b860:	489a      	ldr	r0, [pc, #616]	; (800bacc <TestThread+0x29c>)
 800b862:	f7f9 ffcd 	bl	8005800 <test_println>
 800b866:	212a      	movs	r1, #42	; 0x2a
 800b868:	4d99      	ldr	r5, [pc, #612]	; (800bad0 <TestThread+0x2a0>)
 800b86a:	6820      	ldr	r0, [r4, #0]
 800b86c:	6803      	ldr	r3, [r0, #0]
 800b86e:	689b      	ldr	r3, [r3, #8]
 800b870:	4798      	blx	r3
 800b872:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800b876:	2900      	cmp	r1, #0
 800b878:	d1f7      	bne.n	800b86a <TestThread+0x3a>
 800b87a:	4896      	ldr	r0, [pc, #600]	; (800bad4 <TestThread+0x2a4>)
 800b87c:	f7f9 ffc0 	bl	8005800 <test_println>
 800b880:	212a      	movs	r1, #42	; 0x2a
 800b882:	4d95      	ldr	r5, [pc, #596]	; (800bad8 <TestThread+0x2a8>)
 800b884:	6820      	ldr	r0, [r4, #0]
 800b886:	6803      	ldr	r3, [r0, #0]
 800b888:	689b      	ldr	r3, [r3, #8]
 800b88a:	4798      	blx	r3
 800b88c:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800b890:	2900      	cmp	r1, #0
 800b892:	d1f7      	bne.n	800b884 <TestThread+0x54>
 800b894:	4891      	ldr	r0, [pc, #580]	; (800badc <TestThread+0x2ac>)
 800b896:	f7f9 ffb3 	bl	8005800 <test_println>
 800b89a:	212a      	movs	r1, #42	; 0x2a
 800b89c:	4d90      	ldr	r5, [pc, #576]	; (800bae0 <TestThread+0x2b0>)
 800b89e:	6820      	ldr	r0, [r4, #0]
 800b8a0:	6803      	ldr	r3, [r0, #0]
 800b8a2:	689b      	ldr	r3, [r3, #8]
 800b8a4:	4798      	blx	r3
 800b8a6:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800b8aa:	2900      	cmp	r1, #0
 800b8ac:	d1f7      	bne.n	800b89e <TestThread+0x6e>
 800b8ae:	488d      	ldr	r0, [pc, #564]	; (800bae4 <TestThread+0x2b4>)
 800b8b0:	f7f9 ffa6 	bl	8005800 <test_println>
 800b8b4:	212a      	movs	r1, #42	; 0x2a
 800b8b6:	4d8c      	ldr	r5, [pc, #560]	; (800bae8 <TestThread+0x2b8>)
 800b8b8:	6820      	ldr	r0, [r4, #0]
 800b8ba:	6803      	ldr	r3, [r0, #0]
 800b8bc:	689b      	ldr	r3, [r3, #8]
 800b8be:	4798      	blx	r3
 800b8c0:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800b8c4:	2900      	cmp	r1, #0
 800b8c6:	d1f7      	bne.n	800b8b8 <TestThread+0x88>
 800b8c8:	4888      	ldr	r0, [pc, #544]	; (800baec <TestThread+0x2bc>)
 800b8ca:	f7f9 ff99 	bl	8005800 <test_println>
 800b8ce:	212a      	movs	r1, #42	; 0x2a
 800b8d0:	4d87      	ldr	r5, [pc, #540]	; (800baf0 <TestThread+0x2c0>)
 800b8d2:	6820      	ldr	r0, [r4, #0]
 800b8d4:	6803      	ldr	r3, [r0, #0]
 800b8d6:	689b      	ldr	r3, [r3, #8]
 800b8d8:	4798      	blx	r3
 800b8da:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800b8de:	2900      	cmp	r1, #0
 800b8e0:	d1f7      	bne.n	800b8d2 <TestThread+0xa2>
 800b8e2:	4884      	ldr	r0, [pc, #528]	; (800baf4 <TestThread+0x2c4>)
 800b8e4:	f7f9 ff8c 	bl	8005800 <test_println>
 800b8e8:	212a      	movs	r1, #42	; 0x2a
 800b8ea:	4d83      	ldr	r5, [pc, #524]	; (800baf8 <TestThread+0x2c8>)
 800b8ec:	6820      	ldr	r0, [r4, #0]
 800b8ee:	6803      	ldr	r3, [r0, #0]
 800b8f0:	689b      	ldr	r3, [r3, #8]
 800b8f2:	4798      	blx	r3
 800b8f4:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800b8f8:	2900      	cmp	r1, #0
 800b8fa:	d1f7      	bne.n	800b8ec <TestThread+0xbc>
 800b8fc:	487f      	ldr	r0, [pc, #508]	; (800bafc <TestThread+0x2cc>)
 800b8fe:	f7f9 ff7f 	bl	8005800 <test_println>
 800b902:	212a      	movs	r1, #42	; 0x2a
 800b904:	4d7e      	ldr	r5, [pc, #504]	; (800bb00 <TestThread+0x2d0>)
 800b906:	6820      	ldr	r0, [r4, #0]
 800b908:	6803      	ldr	r3, [r0, #0]
 800b90a:	689b      	ldr	r3, [r3, #8]
 800b90c:	4798      	blx	r3
 800b90e:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800b912:	2900      	cmp	r1, #0
 800b914:	d1f7      	bne.n	800b906 <TestThread+0xd6>
 800b916:	487b      	ldr	r0, [pc, #492]	; (800bb04 <TestThread+0x2d4>)
 800b918:	9100      	str	r1, [sp, #0]
 800b91a:	f7f9 ff71 	bl	8005800 <test_println>
 800b91e:	4867      	ldr	r0, [pc, #412]	; (800babc <TestThread+0x28c>)
 800b920:	f7f9 ff6e 	bl	8005800 <test_println>
 800b924:	9900      	ldr	r1, [sp, #0]
 800b926:	4b78      	ldr	r3, [pc, #480]	; (800bb08 <TestThread+0x2d8>)
 800b928:	468b      	mov	fp, r1
 800b92a:	7019      	strb	r1, [r3, #0]
 800b92c:	4b77      	ldr	r3, [pc, #476]	; (800bb0c <TestThread+0x2dc>)
 800b92e:	f8df 8214 	ldr.w	r8, [pc, #532]	; 800bb44 <TestThread+0x314>
 800b932:	9301      	str	r3, [sp, #4]
 800b934:	4b76      	ldr	r3, [pc, #472]	; (800bb10 <TestThread+0x2e0>)
 800b936:	4f77      	ldr	r7, [pc, #476]	; (800bb14 <TestThread+0x2e4>)
 800b938:	9300      	str	r3, [sp, #0]
 800b93a:	f8df a20c 	ldr.w	sl, [pc, #524]	; 800bb48 <TestThread+0x318>
 800b93e:	4b76      	ldr	r3, [pc, #472]	; (800bb18 <TestThread+0x2e8>)
 800b940:	f10b 0b01 	add.w	fp, fp, #1
 800b944:	2600      	movs	r6, #0
 800b946:	2b00      	cmp	r3, #0
 800b948:	f000 8089 	beq.w	800ba5e <TestThread+0x22e>
 800b94c:	f7f9 fe90 	bl	8005670 <print_line>
 800b950:	212d      	movs	r1, #45	; 0x2d
 800b952:	4d72      	ldr	r5, [pc, #456]	; (800bb1c <TestThread+0x2ec>)
 800b954:	6820      	ldr	r0, [r4, #0]
 800b956:	6803      	ldr	r3, [r0, #0]
 800b958:	689b      	ldr	r3, [r3, #8]
 800b95a:	4798      	blx	r3
 800b95c:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800b960:	2900      	cmp	r1, #0
 800b962:	d1f7      	bne.n	800b954 <TestThread+0x124>
 800b964:	4658      	mov	r0, fp
 800b966:	f7f9 fe73 	bl	8005650 <test_printn>
 800b96a:	6820      	ldr	r0, [r4, #0]
 800b96c:	212e      	movs	r1, #46	; 0x2e
 800b96e:	6803      	ldr	r3, [r0, #0]
 800b970:	1c75      	adds	r5, r6, #1
 800b972:	689b      	ldr	r3, [r3, #8]
 800b974:	4798      	blx	r3
 800b976:	4628      	mov	r0, r5
 800b978:	f7f9 fe6a 	bl	8005650 <test_printn>
 800b97c:	2120      	movs	r1, #32
 800b97e:	f8df 91cc 	ldr.w	r9, [pc, #460]	; 800bb4c <TestThread+0x31c>
 800b982:	6820      	ldr	r0, [r4, #0]
 800b984:	6803      	ldr	r3, [r0, #0]
 800b986:	689b      	ldr	r3, [r3, #8]
 800b988:	4798      	blx	r3
 800b98a:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800b98e:	2900      	cmp	r1, #0
 800b990:	d1f7      	bne.n	800b982 <TestThread+0x152>
 800b992:	f858 3026 	ldr.w	r3, [r8, r6, lsl #2]
 800b996:	f8d3 9000 	ldr.w	r9, [r3]
 800b99a:	f899 1000 	ldrb.w	r1, [r9]
 800b99e:	b139      	cbz	r1, 800b9b0 <TestThread+0x180>
 800b9a0:	6820      	ldr	r0, [r4, #0]
 800b9a2:	6803      	ldr	r3, [r0, #0]
 800b9a4:	689b      	ldr	r3, [r3, #8]
 800b9a6:	4798      	blx	r3
 800b9a8:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800b9ac:	2900      	cmp	r1, #0
 800b9ae:	d1f7      	bne.n	800b9a0 <TestThread+0x170>
 800b9b0:	485b      	ldr	r0, [pc, #364]	; (800bb20 <TestThread+0x2f0>)
 800b9b2:	f7f9 ff25 	bl	8005800 <test_println>
 800b9b6:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b9ba:	f7fd f869 	bl	8008a90 <chThdSleep>
 800b9be:	2300      	movs	r3, #0
 800b9c0:	4a58      	ldr	r2, [pc, #352]	; (800bb24 <TestThread+0x2f4>)
 800b9c2:	f858 9026 	ldr.w	r9, [r8, r6, lsl #2]
 800b9c6:	e9c2 3300 	strd	r3, r3, [r2]
 800b9ca:	e9c2 3302 	strd	r3, r3, [r2, #8]
 800b9ce:	6113      	str	r3, [r2, #16]
 800b9d0:	4955      	ldr	r1, [pc, #340]	; (800bb28 <TestThread+0x2f8>)
 800b9d2:	f8d9 2004 	ldr.w	r2, [r9, #4]
 800b9d6:	6039      	str	r1, [r7, #0]
 800b9d8:	f88a 3000 	strb.w	r3, [sl]
 800b9dc:	b102      	cbz	r2, 800b9e0 <TestThread+0x1b0>
 800b9de:	4790      	blx	r2
 800b9e0:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800b9e4:	4798      	blx	r3
 800b9e6:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800b9ea:	b103      	cbz	r3, 800b9ee <TestThread+0x1be>
 800b9ec:	4798      	blx	r3
 800b9ee:	f7fe faa7 	bl	8009f40 <test_wait_threads>
 800b9f2:	f89a 3000 	ldrb.w	r3, [sl]
 800b9f6:	2b00      	cmp	r3, #0
 800b9f8:	d03c      	beq.n	800ba74 <TestThread+0x244>
 800b9fa:	212d      	movs	r1, #45	; 0x2d
 800b9fc:	f8df 9150 	ldr.w	r9, [pc, #336]	; 800bb50 <TestThread+0x320>
 800ba00:	6820      	ldr	r0, [r4, #0]
 800ba02:	6803      	ldr	r3, [r0, #0]
 800ba04:	689b      	ldr	r3, [r3, #8]
 800ba06:	4798      	blx	r3
 800ba08:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800ba0c:	2900      	cmp	r1, #0
 800ba0e:	d1f7      	bne.n	800ba00 <TestThread+0x1d0>
 800ba10:	4b46      	ldr	r3, [pc, #280]	; (800bb2c <TestThread+0x2fc>)
 800ba12:	f8df 9140 	ldr.w	r9, [pc, #320]	; 800bb54 <TestThread+0x324>
 800ba16:	6818      	ldr	r0, [r3, #0]
 800ba18:	f7f9 fe1a 	bl	8005650 <test_printn>
 800ba1c:	2120      	movs	r1, #32
 800ba1e:	6820      	ldr	r0, [r4, #0]
 800ba20:	6803      	ldr	r3, [r0, #0]
 800ba22:	689b      	ldr	r3, [r3, #8]
 800ba24:	4798      	blx	r3
 800ba26:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800ba2a:	2900      	cmp	r1, #0
 800ba2c:	d1f7      	bne.n	800ba1e <TestThread+0x1ee>
 800ba2e:	683b      	ldr	r3, [r7, #0]
 800ba30:	4a3d      	ldr	r2, [pc, #244]	; (800bb28 <TestThread+0x2f8>)
 800ba32:	4293      	cmp	r3, r2
 800ba34:	d909      	bls.n	800ba4a <TestThread+0x21a>
 800ba36:	4691      	mov	r9, r2
 800ba38:	6820      	ldr	r0, [r4, #0]
 800ba3a:	f819 1b01 	ldrb.w	r1, [r9], #1
 800ba3e:	6803      	ldr	r3, [r0, #0]
 800ba40:	689b      	ldr	r3, [r3, #8]
 800ba42:	4798      	blx	r3
 800ba44:	683b      	ldr	r3, [r7, #0]
 800ba46:	4599      	cmp	r9, r3
 800ba48:	d3f6      	bcc.n	800ba38 <TestThread+0x208>
 800ba4a:	4839      	ldr	r0, [pc, #228]	; (800bb30 <TestThread+0x300>)
 800ba4c:	f7f9 fed8 	bl	8005800 <test_println>
 800ba50:	eb08 0386 	add.w	r3, r8, r6, lsl #2
 800ba54:	685b      	ldr	r3, [r3, #4]
 800ba56:	462e      	mov	r6, r5
 800ba58:	2b00      	cmp	r3, #0
 800ba5a:	f47f af77 	bne.w	800b94c <TestThread+0x11c>
 800ba5e:	9a00      	ldr	r2, [sp, #0]
 800ba60:	b162      	cbz	r2, 800ba7c <TestThread+0x24c>
 800ba62:	6813      	ldr	r3, [r2, #0]
 800ba64:	4690      	mov	r8, r2
 800ba66:	9a01      	ldr	r2, [sp, #4]
 800ba68:	4611      	mov	r1, r2
 800ba6a:	f851 2f04 	ldr.w	r2, [r1, #4]!
 800ba6e:	9200      	str	r2, [sp, #0]
 800ba70:	9101      	str	r1, [sp, #4]
 800ba72:	e765      	b.n	800b940 <TestThread+0x110>
 800ba74:	482f      	ldr	r0, [pc, #188]	; (800bb34 <TestThread+0x304>)
 800ba76:	f7f9 fec3 	bl	8005800 <test_println>
 800ba7a:	e7e9      	b.n	800ba50 <TestThread+0x220>
 800ba7c:	f7f9 fdf8 	bl	8005670 <print_line>
 800ba80:	480e      	ldr	r0, [pc, #56]	; (800babc <TestThread+0x28c>)
 800ba82:	f7f9 febd 	bl	8005800 <test_println>
 800ba86:	2146      	movs	r1, #70	; 0x46
 800ba88:	4d2b      	ldr	r5, [pc, #172]	; (800bb38 <TestThread+0x308>)
 800ba8a:	6820      	ldr	r0, [r4, #0]
 800ba8c:	6803      	ldr	r3, [r0, #0]
 800ba8e:	689b      	ldr	r3, [r3, #8]
 800ba90:	4798      	blx	r3
 800ba92:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800ba96:	2900      	cmp	r1, #0
 800ba98:	d1f7      	bne.n	800ba8a <TestThread+0x25a>
 800ba9a:	4b1b      	ldr	r3, [pc, #108]	; (800bb08 <TestThread+0x2d8>)
 800ba9c:	781b      	ldrb	r3, [r3, #0]
 800ba9e:	b92b      	cbnz	r3, 800baac <TestThread+0x27c>
 800baa0:	4826      	ldr	r0, [pc, #152]	; (800bb3c <TestThread+0x30c>)
 800baa2:	b003      	add	sp, #12
 800baa4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800baa8:	f7f9 beaa 	b.w	8005800 <test_println>
 800baac:	4824      	ldr	r0, [pc, #144]	; (800bb40 <TestThread+0x310>)
 800baae:	b003      	add	sp, #12
 800bab0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bab4:	f7f9 bea4 	b.w	8005800 <test_println>
 800bab8:	200022a8 	.word	0x200022a8
 800babc:	0800cd74 	.word	0x0800cd74
 800bac0:	0800c530 	.word	0x0800c530
 800bac4:	0800c54c 	.word	0x0800c54c
 800bac8:	0800c450 	.word	0x0800c450
 800bacc:	0800c768 	.word	0x0800c768
 800bad0:	0800c464 	.word	0x0800c464
 800bad4:	0800c550 	.word	0x0800c550
 800bad8:	0800c478 	.word	0x0800c478
 800badc:	0800c784 	.word	0x0800c784
 800bae0:	0800c48c 	.word	0x0800c48c
 800bae4:	0800c7e0 	.word	0x0800c7e0
 800bae8:	0800c4a0 	.word	0x0800c4a0
 800baec:	0800c7fc 	.word	0x0800c7fc
 800baf0:	0800c4b4 	.word	0x0800c4b4
 800baf4:	0800c81c 	.word	0x0800c81c
 800baf8:	0800c4c8 	.word	0x0800c4c8
 800bafc:	0800c848 	.word	0x0800c848
 800bb00:	0800c4dc 	.word	0x0800c4dc
 800bb04:	0800c888 	.word	0x0800c888
 800bb08:	20002a18 	.word	0x20002a18
 800bb0c:	0800cc34 	.word	0x0800cc34
 800bb10:	0800cca0 	.word	0x0800cca0
 800bb14:	20002a68 	.word	0x20002a68
 800bb18:	0800d560 	.word	0x0800d560
 800bb1c:	0800c4f0 	.word	0x0800c4f0
 800bb20:	0800c568 	.word	0x0800c568
 800bb24:	20002a44 	.word	0x20002a44
 800bb28:	20002a58 	.word	0x20002a58
 800bb2c:	20002324 	.word	0x20002324
 800bb30:	0800c56c 	.word	0x0800c56c
 800bb34:	0800c570 	.word	0x0800c570
 800bb38:	0800c520 	.word	0x0800c520
 800bb3c:	0800c57c 	.word	0x0800c57c
 800bb40:	0800c584 	.word	0x0800c584
 800bb44:	0800cc90 	.word	0x0800cc90
 800bb48:	2000237c 	.word	0x2000237c
 800bb4c:	0800c500 	.word	0x0800c500
 800bb50:	0800c504 	.word	0x0800c504
 800bb54:	0800c51c 	.word	0x0800c51c
	...

0800bb60 <chThdExitS>:
 800bb60:	b538      	push	{r3, r4, r5, lr}
 800bb62:	4b0e      	ldr	r3, [pc, #56]	; (800bb9c <chThdExitS+0x3c>)
 800bb64:	699c      	ldr	r4, [r3, #24]
 800bb66:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800bb68:	f104 0524 	add.w	r5, r4, #36	; 0x24
 800bb6c:	42ab      	cmp	r3, r5
 800bb6e:	6220      	str	r0, [r4, #32]
 800bb70:	d007      	beq.n	800bb82 <chThdExitS+0x22>
 800bb72:	681a      	ldr	r2, [r3, #0]
 800bb74:	4618      	mov	r0, r3
 800bb76:	6262      	str	r2, [r4, #36]	; 0x24
 800bb78:	f7fa f9ea 	bl	8005f50 <chSchReadyI>
 800bb7c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800bb7e:	42ab      	cmp	r3, r5
 800bb80:	d1f7      	bne.n	800bb72 <chThdExitS+0x12>
 800bb82:	7f63      	ldrb	r3, [r4, #29]
 800bb84:	079b      	lsls	r3, r3, #30
 800bb86:	d104      	bne.n	800bb92 <chThdExitS+0x32>
 800bb88:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 800bb8c:	611a      	str	r2, [r3, #16]
 800bb8e:	6922      	ldr	r2, [r4, #16]
 800bb90:	6153      	str	r3, [r2, #20]
 800bb92:	200f      	movs	r0, #15
 800bb94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bb98:	f7fc b8ea 	b.w	8007d70 <chSchGoSleepS>
 800bb9c:	20002158 	.word	0x20002158

0800bba0 <shell_thread>:
 800bba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bba4:	4b80      	ldr	r3, [pc, #512]	; (800bda8 <shell_thread+0x208>)
 800bba6:	6804      	ldr	r4, [r0, #0]
 800bba8:	699b      	ldr	r3, [r3, #24]
 800bbaa:	4a80      	ldr	r2, [pc, #512]	; (800bdac <shell_thread+0x20c>)
 800bbac:	b099      	sub	sp, #100	; 0x64
 800bbae:	f8d0 9004 	ldr.w	r9, [r0, #4]
 800bbb2:	497f      	ldr	r1, [pc, #508]	; (800bdb0 <shell_thread+0x210>)
 800bbb4:	4620      	mov	r0, r4
 800bbb6:	619a      	str	r2, [r3, #24]
 800bbb8:	f7fa fd1a 	bl	80065f0 <chprintf.lto_priv.72>
 800bbbc:	f8df 8224 	ldr.w	r8, [pc, #548]	; 800bde4 <shell_thread+0x244>
 800bbc0:	ae08      	add	r6, sp, #32
 800bbc2:	f10d 075f 	add.w	r7, sp, #95	; 0x5f
 800bbc6:	4635      	mov	r5, r6
 800bbc8:	4641      	mov	r1, r8
 800bbca:	4620      	mov	r0, r4
 800bbcc:	f7fa fd10 	bl	80065f0 <chprintf.lto_priv.72>
 800bbd0:	6823      	ldr	r3, [r4, #0]
 800bbd2:	685b      	ldr	r3, [r3, #4]
 800bbd4:	2201      	movs	r2, #1
 800bbd6:	f10d 0107 	add.w	r1, sp, #7
 800bbda:	4620      	mov	r0, r4
 800bbdc:	4798      	blx	r3
 800bbde:	2800      	cmp	r0, #0
 800bbe0:	d072      	beq.n	800bcc8 <shell_thread+0x128>
 800bbe2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800bbe6:	2904      	cmp	r1, #4
 800bbe8:	d06a      	beq.n	800bcc0 <shell_thread+0x120>
 800bbea:	2908      	cmp	r1, #8
 800bbec:	d012      	beq.n	800bc14 <shell_thread+0x74>
 800bbee:	297f      	cmp	r1, #127	; 0x7f
 800bbf0:	d010      	beq.n	800bc14 <shell_thread+0x74>
 800bbf2:	290d      	cmp	r1, #13
 800bbf4:	d022      	beq.n	800bc3c <shell_thread+0x9c>
 800bbf6:	291f      	cmp	r1, #31
 800bbf8:	6823      	ldr	r3, [r4, #0]
 800bbfa:	d9ea      	bls.n	800bbd2 <shell_thread+0x32>
 800bbfc:	42bd      	cmp	r5, r7
 800bbfe:	d2e8      	bcs.n	800bbd2 <shell_thread+0x32>
 800bc00:	689b      	ldr	r3, [r3, #8]
 800bc02:	4620      	mov	r0, r4
 800bc04:	4798      	blx	r3
 800bc06:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800bc0a:	3501      	adds	r5, #1
 800bc0c:	f805 3c01 	strb.w	r3, [r5, #-1]
 800bc10:	6823      	ldr	r3, [r4, #0]
 800bc12:	e7de      	b.n	800bbd2 <shell_thread+0x32>
 800bc14:	42b5      	cmp	r5, r6
 800bc16:	6823      	ldr	r3, [r4, #0]
 800bc18:	d0db      	beq.n	800bbd2 <shell_thread+0x32>
 800bc1a:	689b      	ldr	r3, [r3, #8]
 800bc1c:	4620      	mov	r0, r4
 800bc1e:	4798      	blx	r3
 800bc20:	6823      	ldr	r3, [r4, #0]
 800bc22:	2120      	movs	r1, #32
 800bc24:	689b      	ldr	r3, [r3, #8]
 800bc26:	4620      	mov	r0, r4
 800bc28:	4798      	blx	r3
 800bc2a:	6823      	ldr	r3, [r4, #0]
 800bc2c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800bc30:	689b      	ldr	r3, [r3, #8]
 800bc32:	4620      	mov	r0, r4
 800bc34:	4798      	blx	r3
 800bc36:	3d01      	subs	r5, #1
 800bc38:	6823      	ldr	r3, [r4, #0]
 800bc3a:	e7ca      	b.n	800bbd2 <shell_thread+0x32>
 800bc3c:	f04f 0a00 	mov.w	sl, #0
 800bc40:	495c      	ldr	r1, [pc, #368]	; (800bdb4 <shell_thread+0x214>)
 800bc42:	4620      	mov	r0, r4
 800bc44:	f7fa fcd4 	bl	80065f0 <chprintf.lto_priv.72>
 800bc48:	f885 a000 	strb.w	sl, [r5]
 800bc4c:	a902      	add	r1, sp, #8
 800bc4e:	4630      	mov	r0, r6
 800bc50:	f7fa fca6 	bl	80065a0 <_strtok.constprop.2>
 800bc54:	a902      	add	r1, sp, #8
 800bc56:	4683      	mov	fp, r0
 800bc58:	2000      	movs	r0, #0
 800bc5a:	4655      	mov	r5, sl
 800bc5c:	f10d 0a0c 	add.w	sl, sp, #12
 800bc60:	f7fa fc9e 	bl	80065a0 <_strtok.constprop.2>
 800bc64:	b150      	cbz	r0, 800bc7c <shell_thread+0xdc>
 800bc66:	2d04      	cmp	r5, #4
 800bc68:	d023      	beq.n	800bcb2 <shell_thread+0x112>
 800bc6a:	f84a 0b04 	str.w	r0, [sl], #4
 800bc6e:	a902      	add	r1, sp, #8
 800bc70:	2000      	movs	r0, #0
 800bc72:	3501      	adds	r5, #1
 800bc74:	f7fa fc94 	bl	80065a0 <_strtok.constprop.2>
 800bc78:	2800      	cmp	r0, #0
 800bc7a:	d1f4      	bne.n	800bc66 <shell_thread+0xc6>
 800bc7c:	ab18      	add	r3, sp, #96	; 0x60
 800bc7e:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 800bc82:	f843 0c54 	str.w	r0, [r3, #-84]
 800bc86:	f1bb 0f00 	cmp.w	fp, #0
 800bc8a:	d09c      	beq.n	800bbc6 <shell_thread+0x26>
 800bc8c:	494a      	ldr	r1, [pc, #296]	; (800bdb8 <shell_thread+0x218>)
 800bc8e:	4658      	mov	r0, fp
 800bc90:	f000 fb2e 	bl	800c2f0 <strcasecmp>
 800bc94:	b9e8      	cbnz	r0, 800bcd2 <shell_thread+0x132>
 800bc96:	bb45      	cbnz	r5, 800bcea <shell_thread+0x14a>
 800bc98:	2320      	movs	r3, #32
 800bc9a:	f383 8811 	msr	BASEPRI, r3
 800bc9e:	2100      	movs	r1, #0
 800bca0:	4846      	ldr	r0, [pc, #280]	; (800bdbc <shell_thread+0x21c>)
 800bca2:	f7fa f9f5 	bl	8006090 <chEvtBroadcastFlagsI>
 800bca6:	2000      	movs	r0, #0
 800bca8:	f7ff ff5a 	bl	800bb60 <chThdExitS>
 800bcac:	b019      	add	sp, #100	; 0x64
 800bcae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bcb2:	4943      	ldr	r1, [pc, #268]	; (800bdc0 <shell_thread+0x220>)
 800bcb4:	4620      	mov	r0, r4
 800bcb6:	f7fa fc9b 	bl	80065f0 <chprintf.lto_priv.72>
 800bcba:	2300      	movs	r3, #0
 800bcbc:	9307      	str	r3, [sp, #28]
 800bcbe:	e782      	b.n	800bbc6 <shell_thread+0x26>
 800bcc0:	4940      	ldr	r1, [pc, #256]	; (800bdc4 <shell_thread+0x224>)
 800bcc2:	4620      	mov	r0, r4
 800bcc4:	f7fa fc94 	bl	80065f0 <chprintf.lto_priv.72>
 800bcc8:	4620      	mov	r0, r4
 800bcca:	493f      	ldr	r1, [pc, #252]	; (800bdc8 <shell_thread+0x228>)
 800bccc:	f7fa fc90 	bl	80065f0 <chprintf.lto_priv.72>
 800bcd0:	e7e2      	b.n	800bc98 <shell_thread+0xf8>
 800bcd2:	493e      	ldr	r1, [pc, #248]	; (800bdcc <shell_thread+0x22c>)
 800bcd4:	4658      	mov	r0, fp
 800bcd6:	f000 fb0b 	bl	800c2f0 <strcasecmp>
 800bcda:	b960      	cbnz	r0, 800bcf6 <shell_thread+0x156>
 800bcdc:	b305      	cbz	r5, 800bd20 <shell_thread+0x180>
 800bcde:	4a3b      	ldr	r2, [pc, #236]	; (800bdcc <shell_thread+0x22c>)
 800bce0:	493b      	ldr	r1, [pc, #236]	; (800bdd0 <shell_thread+0x230>)
 800bce2:	4620      	mov	r0, r4
 800bce4:	f7fa fc84 	bl	80065f0 <chprintf.lto_priv.72>
 800bce8:	e76d      	b.n	800bbc6 <shell_thread+0x26>
 800bcea:	4a33      	ldr	r2, [pc, #204]	; (800bdb8 <shell_thread+0x218>)
 800bcec:	4938      	ldr	r1, [pc, #224]	; (800bdd0 <shell_thread+0x230>)
 800bcee:	4620      	mov	r0, r4
 800bcf0:	f7fa fc7e 	bl	80065f0 <chprintf.lto_priv.72>
 800bcf4:	e767      	b.n	800bbc6 <shell_thread+0x26>
 800bcf6:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 800bde8 <shell_thread+0x248>
 800bcfa:	f8da 0000 	ldr.w	r0, [sl]
 800bcfe:	b918      	cbnz	r0, 800bd08 <shell_thread+0x168>
 800bd00:	e036      	b.n	800bd70 <shell_thread+0x1d0>
 800bd02:	f85a 0f08 	ldr.w	r0, [sl, #8]!
 800bd06:	b398      	cbz	r0, 800bd70 <shell_thread+0x1d0>
 800bd08:	4659      	mov	r1, fp
 800bd0a:	f000 faf1 	bl	800c2f0 <strcasecmp>
 800bd0e:	2800      	cmp	r0, #0
 800bd10:	d1f7      	bne.n	800bd02 <shell_thread+0x162>
 800bd12:	f8da 3004 	ldr.w	r3, [sl, #4]
 800bd16:	aa03      	add	r2, sp, #12
 800bd18:	4629      	mov	r1, r5
 800bd1a:	4620      	mov	r0, r4
 800bd1c:	4798      	blx	r3
 800bd1e:	e752      	b.n	800bbc6 <shell_thread+0x26>
 800bd20:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800bde8 <shell_thread+0x248>
 800bd24:	492b      	ldr	r1, [pc, #172]	; (800bdd4 <shell_thread+0x234>)
 800bd26:	4620      	mov	r0, r4
 800bd28:	f7fa fc62 	bl	80065f0 <chprintf.lto_priv.72>
 800bd2c:	f8da 2000 	ldr.w	r2, [sl]
 800bd30:	b142      	cbz	r2, 800bd44 <shell_thread+0x1a4>
 800bd32:	4d29      	ldr	r5, [pc, #164]	; (800bdd8 <shell_thread+0x238>)
 800bd34:	4629      	mov	r1, r5
 800bd36:	4620      	mov	r0, r4
 800bd38:	f7fa fc5a 	bl	80065f0 <chprintf.lto_priv.72>
 800bd3c:	f85a 2f08 	ldr.w	r2, [sl, #8]!
 800bd40:	2a00      	cmp	r2, #0
 800bd42:	d1f7      	bne.n	800bd34 <shell_thread+0x194>
 800bd44:	f1b9 0f00 	cmp.w	r9, #0
 800bd48:	d00d      	beq.n	800bd66 <shell_thread+0x1c6>
 800bd4a:	f8d9 2000 	ldr.w	r2, [r9]
 800bd4e:	b152      	cbz	r2, 800bd66 <shell_thread+0x1c6>
 800bd50:	464d      	mov	r5, r9
 800bd52:	f8df a084 	ldr.w	sl, [pc, #132]	; 800bdd8 <shell_thread+0x238>
 800bd56:	4651      	mov	r1, sl
 800bd58:	4620      	mov	r0, r4
 800bd5a:	f7fa fc49 	bl	80065f0 <chprintf.lto_priv.72>
 800bd5e:	f855 2f08 	ldr.w	r2, [r5, #8]!
 800bd62:	2a00      	cmp	r2, #0
 800bd64:	d1f7      	bne.n	800bd56 <shell_thread+0x1b6>
 800bd66:	4913      	ldr	r1, [pc, #76]	; (800bdb4 <shell_thread+0x214>)
 800bd68:	4620      	mov	r0, r4
 800bd6a:	f7fa fc41 	bl	80065f0 <chprintf.lto_priv.72>
 800bd6e:	e72a      	b.n	800bbc6 <shell_thread+0x26>
 800bd70:	f1b9 0f00 	cmp.w	r9, #0
 800bd74:	d00d      	beq.n	800bd92 <shell_thread+0x1f2>
 800bd76:	f8d9 0000 	ldr.w	r0, [r9]
 800bd7a:	b150      	cbz	r0, 800bd92 <shell_thread+0x1f2>
 800bd7c:	46ca      	mov	sl, r9
 800bd7e:	e002      	b.n	800bd86 <shell_thread+0x1e6>
 800bd80:	f85a 0f08 	ldr.w	r0, [sl, #8]!
 800bd84:	b128      	cbz	r0, 800bd92 <shell_thread+0x1f2>
 800bd86:	4659      	mov	r1, fp
 800bd88:	f000 fab2 	bl	800c2f0 <strcasecmp>
 800bd8c:	2800      	cmp	r0, #0
 800bd8e:	d1f7      	bne.n	800bd80 <shell_thread+0x1e0>
 800bd90:	e7bf      	b.n	800bd12 <shell_thread+0x172>
 800bd92:	465a      	mov	r2, fp
 800bd94:	4911      	ldr	r1, [pc, #68]	; (800bddc <shell_thread+0x23c>)
 800bd96:	4620      	mov	r0, r4
 800bd98:	f7fa fc2a 	bl	80065f0 <chprintf.lto_priv.72>
 800bd9c:	4910      	ldr	r1, [pc, #64]	; (800bde0 <shell_thread+0x240>)
 800bd9e:	4620      	mov	r0, r4
 800bda0:	f7fa fc26 	bl	80065f0 <chprintf.lto_priv.72>
 800bda4:	e70f      	b.n	800bbc6 <shell_thread+0x26>
 800bda6:	bf00      	nop
 800bda8:	20002158 	.word	0x20002158
 800bdac:	0800ccf0 	.word	0x0800ccf0
 800bdb0:	0800ccf8 	.word	0x0800ccf8
 800bdb4:	0800ca1c 	.word	0x0800ca1c
 800bdb8:	0800cd40 	.word	0x0800cd40
 800bdbc:	200023ac 	.word	0x200023ac
 800bdc0:	0800cd28 	.word	0x0800cd28
 800bdc4:	0800cd18 	.word	0x0800cd18
 800bdc8:	0800cd1c 	.word	0x0800cd1c
 800bdcc:	0800cd48 	.word	0x0800cd48
 800bdd0:	0800c968 	.word	0x0800c968
 800bdd4:	0800cd50 	.word	0x0800cd50
 800bdd8:	0800cd68 	.word	0x0800cd68
 800bddc:	0800cd6c 	.word	0x0800cd6c
 800bde0:	0800cd70 	.word	0x0800cd70
 800bde4:	0800cd10 	.word	0x0800cd10
 800bde8:	20001840 	.word	0x20001840
 800bdec:	00000000 	.word	0x00000000

0800bdf0 <main>:
 800bdf0:	2000      	movs	r0, #0
 800bdf2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800bdf6:	f04f 3188 	mov.w	r1, #2290649224	; 0x88888888
 800bdfa:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 800bdfe:	4bc4      	ldr	r3, [pc, #784]	; (800c110 <main+0x320>)
 800be00:	2701      	movs	r7, #1
 800be02:	4604      	mov	r4, r0
 800be04:	691d      	ldr	r5, [r3, #16]
 800be06:	611a      	str	r2, [r3, #16]
 800be08:	6118      	str	r0, [r3, #16]
 800be0a:	68dd      	ldr	r5, [r3, #12]
 800be0c:	60da      	str	r2, [r3, #12]
 800be0e:	60d8      	str	r0, [r3, #12]
 800be10:	69dd      	ldr	r5, [r3, #28]
 800be12:	4ec0      	ldr	r6, [pc, #768]	; (800c114 <main+0x324>)
 800be14:	f045 5580 	orr.w	r5, r5, #268435456	; 0x10000000
 800be18:	61dd      	str	r5, [r3, #28]
 800be1a:	69dd      	ldr	r5, [r3, #28]
 800be1c:	b089      	sub	sp, #36	; 0x24
 800be1e:	f045 6500 	orr.w	r5, r5, #134217728	; 0x8000000
 800be22:	61dd      	str	r5, [r3, #28]
 800be24:	6835      	ldr	r5, [r6, #0]
 800be26:	f445 7580 	orr.w	r5, r5, #256	; 0x100
 800be2a:	6035      	str	r5, [r6, #0]
 800be2c:	699e      	ldr	r6, [r3, #24]
 800be2e:	4dba      	ldr	r5, [pc, #744]	; (800c118 <main+0x328>)
 800be30:	f046 067d 	orr.w	r6, r6, #125	; 0x7d
 800be34:	619e      	str	r6, [r3, #24]
 800be36:	f103 4391 	add.w	r3, r3, #1216348160	; 0x48800000
 800be3a:	f503 23ce 	add.w	r3, r3, #421888	; 0x67000
 800be3e:	f503 6397 	add.w	r3, r3, #1208	; 0x4b8
 800be42:	60ea      	str	r2, [r5, #12]
 800be44:	606b      	str	r3, [r5, #4]
 800be46:	f5a3 5364 	sub.w	r3, r3, #14592	; 0x3900
 800be4a:	3b30      	subs	r3, #48	; 0x30
 800be4c:	602b      	str	r3, [r5, #0]
 800be4e:	4bb3      	ldr	r3, [pc, #716]	; (800c11c <main+0x32c>)
 800be50:	4db3      	ldr	r5, [pc, #716]	; (800c120 <main+0x330>)
 800be52:	60da      	str	r2, [r3, #12]
 800be54:	605d      	str	r5, [r3, #4]
 800be56:	601d      	str	r5, [r3, #0]
 800be58:	4db2      	ldr	r5, [pc, #712]	; (800c124 <main+0x334>)
 800be5a:	60ea      	str	r2, [r5, #12]
 800be5c:	6069      	str	r1, [r5, #4]
 800be5e:	6029      	str	r1, [r5, #0]
 800be60:	4db1      	ldr	r5, [pc, #708]	; (800c128 <main+0x338>)
 800be62:	f8c3 280c 	str.w	r2, [r3, #2060]	; 0x80c
 800be66:	f8c3 1804 	str.w	r1, [r3, #2052]	; 0x804
 800be6a:	f8c3 5800 	str.w	r5, [r3, #2048]	; 0x800
 800be6e:	4daf      	ldr	r5, [pc, #700]	; (800c12c <main+0x33c>)
 800be70:	f8c3 2c0c 	str.w	r2, [r3, #3084]	; 0xc0c
 800be74:	6068      	str	r0, [r5, #4]
 800be76:	f105 0248 	add.w	r2, r5, #72	; 0x48
 800be7a:	f8c3 1c04 	str.w	r1, [r3, #3076]	; 0xc04
 800be7e:	f8c3 1c00 	str.w	r1, [r3, #3072]	; 0xc00
 800be82:	f105 032c 	add.w	r3, r5, #44	; 0x2c
 800be86:	702f      	strb	r7, [r5, #0]
 800be88:	f843 4b04 	str.w	r4, [r3], #4
 800be8c:	429a      	cmp	r2, r3
 800be8e:	619c      	str	r4, [r3, #24]
 800be90:	d1fa      	bne.n	800be88 <main+0x98>
 800be92:	2701      	movs	r7, #1
 800be94:	f8df 8278 	ldr.w	r8, [pc, #632]	; 800c110 <main+0x320>
 800be98:	4ea5      	ldr	r6, [pc, #660]	; (800c130 <main+0x340>)
 800be9a:	f8d8 201c 	ldr.w	r2, [r8, #28]
 800be9e:	60ac      	str	r4, [r5, #8]
 800bea0:	433a      	orrs	r2, r7
 800bea2:	f8c8 201c 	str.w	r2, [r8, #28]
 800bea6:	6872      	ldr	r2, [r6, #4]
 800bea8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800beac:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800beb0:	f648 4b9f 	movw	fp, #35999	; 0x8c9f
 800beb4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800beb8:	6072      	str	r2, [r6, #4]
 800beba:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 800bebe:	f04f 0a80 	mov.w	sl, #128	; 0x80
 800bec2:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
 800bec6:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
 800beca:	f04f 0e10 	mov.w	lr, #16
 800bece:	f04f 0920 	mov.w	r9, #32
 800bed2:	f8c3 b028 	str.w	fp, [r3, #40]	; 0x28
 800bed6:	4e97      	ldr	r6, [pc, #604]	; (800c134 <main+0x344>)
 800bed8:	62d9      	str	r1, [r3, #44]	; 0x2c
 800beda:	619c      	str	r4, [r3, #24]
 800bedc:	635c      	str	r4, [r3, #52]	; 0x34
 800bede:	60dc      	str	r4, [r3, #12]
 800bee0:	605c      	str	r4, [r3, #4]
 800bee2:	615f      	str	r7, [r3, #20]
 800bee4:	601f      	str	r7, [r3, #0]
 800bee6:	4b94      	ldr	r3, [pc, #592]	; (800c138 <main+0x348>)
 800bee8:	f886 a31c 	strb.w	sl, [r6, #796]	; 0x31c
 800beec:	f8c6 0180 	str.w	r0, [r6, #384]	; 0x180
 800bef0:	6030      	str	r0, [r6, #0]
 800bef2:	609a      	str	r2, [r3, #8]
 800bef4:	68da      	ldr	r2, [r3, #12]
 800bef6:	4891      	ldr	r0, [pc, #580]	; (800c13c <main+0x34c>)
 800bef8:	ea02 0c0c 	and.w	ip, r2, ip
 800befc:	4a90      	ldr	r2, [pc, #576]	; (800c140 <main+0x350>)
 800befe:	f8df a284 	ldr.w	sl, [pc, #644]	; 800c184 <main+0x394>
 800bf02:	ea4c 0202 	orr.w	r2, ip, r2
 800bf06:	60da      	str	r2, [r3, #12]
 800bf08:	68c2      	ldr	r2, [r0, #12]
 800bf0a:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800bf0e:	60c2      	str	r2, [r0, #12]
 800bf10:	488c      	ldr	r0, [pc, #560]	; (800c144 <main+0x354>)
 800bf12:	6802      	ldr	r2, [r0, #0]
 800bf14:	433a      	orrs	r2, r7
 800bf16:	6002      	str	r2, [r0, #0]
 800bf18:	f8ca a004 	str.w	sl, [sl, #4]
 800bf1c:	f883 e01f 	strb.w	lr, [r3, #31]
 800bf20:	f8ca 4008 	str.w	r4, [sl, #8]
 800bf24:	f883 9022 	strb.w	r9, [r3, #34]	; 0x22
 800bf28:	f10a 031c 	add.w	r3, sl, #28
 800bf2c:	e9ca 3307 	strd	r3, r3, [sl, #28]
 800bf30:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800bf34:	2200      	movs	r2, #0
 800bf36:	f8ca a000 	str.w	sl, [sl]
 800bf3a:	e9ca aa04 	strd	sl, sl, [sl, #16]
 800bf3e:	f8ca 1024 	str.w	r1, [sl, #36]	; 0x24
 800bf42:	9302      	str	r3, [sp, #8]
 800bf44:	2300      	movs	r3, #0
 800bf46:	a802      	add	r0, sp, #8
 800bf48:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800bf4c:	f8ca 4070 	str.w	r4, [sl, #112]	; 0x70
 800bf50:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800bf54:	9405      	str	r4, [sp, #20]
 800bf56:	f7f9 f96b 	bl	8005230 <chTMStartMeasurementX.constprop.62>
 800bf5a:	a802      	add	r0, sp, #8
 800bf5c:	f7f9 ff98 	bl	8005e90 <chTMStopMeasurementX>
 800bf60:	f04f 0e40 	mov.w	lr, #64	; 0x40
 800bf64:	4b78      	ldr	r3, [pc, #480]	; (800c148 <main+0x358>)
 800bf66:	9904      	ldr	r1, [sp, #16]
 800bf68:	f8da c014 	ldr.w	ip, [sl, #20]
 800bf6c:	f8ca 1070 	str.w	r1, [sl, #112]	; 0x70
 800bf70:	f103 0110 	add.w	r1, r3, #16
 800bf74:	e9c3 1104 	strd	r1, r1, [r3, #16]
 800bf78:	f10a 012c 	add.w	r1, sl, #44	; 0x2c
 800bf7c:	f8ca c040 	str.w	ip, [sl, #64]	; 0x40
 800bf80:	619c      	str	r4, [r3, #24]
 800bf82:	f8ca e034 	str.w	lr, [sl, #52]	; 0x34
 800bf86:	f8ca e068 	str.w	lr, [sl, #104]	; 0x68
 800bf8a:	f88a 4049 	strb.w	r4, [sl, #73]	; 0x49
 800bf8e:	e9ca 4418 	strd	r4, r4, [sl, #96]	; 0x60
 800bf92:	f88a 704a 	strb.w	r7, [sl, #74]	; 0x4a
 800bf96:	f8ca 4044 	str.w	r4, [sl, #68]	; 0x44
 800bf9a:	f8ca a03c 	str.w	sl, [sl, #60]	; 0x3c
 800bf9e:	f8df e1e8 	ldr.w	lr, [pc, #488]	; 800c188 <main+0x398>
 800bfa2:	f8cc 1010 	str.w	r1, [ip, #16]
 800bfa6:	4869      	ldr	r0, [pc, #420]	; (800c14c <main+0x35c>)
 800bfa8:	e9ca 1105 	strd	r1, r1, [sl, #20]
 800bfac:	4a68      	ldr	r2, [pc, #416]	; (800c150 <main+0x360>)
 800bfae:	f10a 0150 	add.w	r1, sl, #80	; 0x50
 800bfb2:	f8df c1d8 	ldr.w	ip, [pc, #472]	; 800c18c <main+0x39c>
 800bfb6:	f8ca 1050 	str.w	r1, [sl, #80]	; 0x50
 800bfba:	4966      	ldr	r1, [pc, #408]	; (800c154 <main+0x364>)
 800bfbc:	f020 0007 	bic.w	r0, r0, #7
 800bfc0:	f022 0207 	bic.w	r2, r2, #7
 800bfc4:	e9c3 4402 	strd	r4, r4, [r3, #8]
 800bfc8:	f8c3 e000 	str.w	lr, [r3]
 800bfcc:	f10a 0354 	add.w	r3, sl, #84	; 0x54
 800bfd0:	f88a 7048 	strb.w	r7, [sl, #72]	; 0x48
 800bfd4:	e9ca 3315 	strd	r3, r3, [sl, #84]	; 0x54
 800bfd8:	f8cc 0000 	str.w	r0, [ip]
 800bfdc:	600a      	str	r2, [r1, #0]
 800bfde:	f384 8811 	msr	BASEPRI, r4
 800bfe2:	b662      	cpsie	i
 800bfe4:	4a5c      	ldr	r2, [pc, #368]	; (800c158 <main+0x368>)
 800bfe6:	f8da 3018 	ldr.w	r3, [sl, #24]
 800bfea:	f8df b1a4 	ldr.w	fp, [pc, #420]	; 800c190 <main+0x3a0>
 800bfee:	619a      	str	r2, [r3, #24]
 800bff0:	f10a 0078 	add.w	r0, sl, #120	; 0x78
 800bff4:	463a      	mov	r2, r7
 800bff6:	9400      	str	r4, [sp, #0]
 800bff8:	4b58      	ldr	r3, [pc, #352]	; (800c15c <main+0x36c>)
 800bffa:	21d8      	movs	r1, #216	; 0xd8
 800bffc:	f7fb fe80 	bl	8007d00 <chThdCreateStatic>
 800c000:	4659      	mov	r1, fp
 800c002:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c006:	4a56      	ldr	r2, [pc, #344]	; (800c160 <main+0x370>)
 800c008:	f8df c188 	ldr.w	ip, [pc, #392]	; 800c194 <main+0x3a4>
 800c00c:	f841 2b04 	str.w	r2, [r1], #4
 800c010:	4a54      	ldr	r2, [pc, #336]	; (800c164 <main+0x374>)
 800c012:	f8c0 c018 	str.w	ip, [r0, #24]
 800c016:	f50b 7015 	add.w	r0, fp, #596	; 0x254
 800c01a:	f8df c17c 	ldr.w	ip, [pc, #380]	; 800c198 <main+0x3a8>
 800c01e:	f88b 7008 	strb.w	r7, [fp, #8]
 800c022:	f8cb 2028 	str.w	r2, [fp, #40]	; 0x28
 800c026:	f10b 070c 	add.w	r7, fp, #12
 800c02a:	f10b 0254 	add.w	r2, fp, #84	; 0x54
 800c02e:	f8cb 3038 	str.w	r3, [fp, #56]	; 0x38
 800c032:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800c036:	f50b 73aa 	add.w	r3, fp, #340	; 0x154
 800c03a:	f10b 0030 	add.w	r0, fp, #48	; 0x30
 800c03e:	f8cb 4014 	str.w	r4, [fp, #20]
 800c042:	f8cb b02c 	str.w	fp, [fp, #44]	; 0x2c
 800c046:	f8cb b050 	str.w	fp, [fp, #80]	; 0x50
 800c04a:	f8cb c04c 	str.w	ip, [fp, #76]	; 0x4c
 800c04e:	f8cb 1004 	str.w	r1, [fp, #4]
 800c052:	e9cb 7703 	strd	r7, r7, [fp, #12]
 800c056:	f8cb 2018 	str.w	r2, [fp, #24]
 800c05a:	e9cb 2208 	strd	r2, r2, [fp, #32]
 800c05e:	f8cb 301c 	str.w	r3, [fp, #28]
 800c062:	f8cb 303c 	str.w	r3, [fp, #60]	; 0x3c
 800c066:	e9cb 3311 	strd	r3, r3, [fp, #68]	; 0x44
 800c06a:	e9cb 000c 	strd	r0, r0, [fp, #48]	; 0x30
 800c06e:	f389 8811 	msr	BASEPRI, r9
 800c072:	2702      	movs	r7, #2
 800c074:	4b3c      	ldr	r3, [pc, #240]	; (800c168 <main+0x378>)
 800c076:	f8c5 b02c 	str.w	fp, [r5, #44]	; 0x2c
 800c07a:	f8c5 b048 	str.w	fp, [r5, #72]	; 0x48
 800c07e:	f8c5 b030 	str.w	fp, [r5, #48]	; 0x30
 800c082:	f8cb 3254 	str.w	r3, [fp, #596]	; 0x254
 800c086:	f88b 7008 	strb.w	r7, [fp, #8]
 800c08a:	f384 8811 	msr	BASEPRI, r4
 800c08e:	f44f 7200 	mov.w	r2, #512	; 0x200
 800c092:	4b22      	ldr	r3, [pc, #136]	; (800c11c <main+0x32c>)
 800c094:	f640 30b8 	movw	r0, #3000	; 0xbb8
 800c098:	611a      	str	r2, [r3, #16]
 800c09a:	f7fc fcf9 	bl	8008a90 <chThdSleep>
 800c09e:	f389 8811 	msr	BASEPRI, r9
 800c0a2:	7828      	ldrb	r0, [r5, #0]
 800c0a4:	4b31      	ldr	r3, [pc, #196]	; (800c16c <main+0x37c>)
 800c0a6:	2801      	cmp	r0, #1
 800c0a8:	e9c5 4403 	strd	r4, r4, [r5, #12]
 800c0ac:	e9c5 4405 	strd	r4, r4, [r5, #20]
 800c0b0:	e9c5 4407 	strd	r4, r4, [r5, #28]
 800c0b4:	e9c5 4409 	strd	r4, r4, [r5, #36]	; 0x24
 800c0b8:	606b      	str	r3, [r5, #4]
 800c0ba:	f000 8086 	beq.w	800c1ca <main+0x3da>
 800c0be:	2302      	movs	r3, #2
 800c0c0:	2400      	movs	r4, #0
 800c0c2:	702b      	strb	r3, [r5, #0]
 800c0c4:	f384 8811 	msr	BASEPRI, r4
 800c0c8:	f44f 7200 	mov.w	r2, #512	; 0x200
 800c0cc:	4b13      	ldr	r3, [pc, #76]	; (800c11c <main+0x32c>)
 800c0ce:	4d28      	ldr	r5, [pc, #160]	; (800c170 <main+0x380>)
 800c0d0:	615a      	str	r2, [r3, #20]
 800c0d2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800c0d6:	9400      	str	r4, [sp, #0]
 800c0d8:	4b26      	ldr	r3, [pc, #152]	; (800c174 <main+0x384>)
 800c0da:	602d      	str	r5, [r5, #0]
 800c0dc:	2240      	movs	r2, #64	; 0x40
 800c0de:	4826      	ldr	r0, [pc, #152]	; (800c178 <main+0x388>)
 800c0e0:	f7fb fe0e 	bl	8007d00 <chThdCreateStatic>
 800c0e4:	4e25      	ldr	r6, [pc, #148]	; (800c17c <main+0x38c>)
 800c0e6:	4d26      	ldr	r5, [pc, #152]	; (800c180 <main+0x390>)
 800c0e8:	b144      	cbz	r4, 800c0fc <main+0x30c>
 800c0ea:	7f23      	ldrb	r3, [r4, #28]
 800c0ec:	2b0f      	cmp	r3, #15
 800c0ee:	d055      	beq.n	800c19c <main+0x3ac>
 800c0f0:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 800c0f4:	f7fc fccc 	bl	8008a90 <chThdSleep>
 800c0f8:	2c00      	cmp	r4, #0
 800c0fa:	d1f6      	bne.n	800c0ea <main+0x2fa>
 800c0fc:	f8db 3254 	ldr.w	r3, [fp, #596]	; 0x254
 800c100:	681b      	ldr	r3, [r3, #0]
 800c102:	781b      	ldrb	r3, [r3, #0]
 800c104:	2b04      	cmp	r3, #4
 800c106:	d056      	beq.n	800c1b6 <main+0x3c6>
 800c108:	2300      	movs	r3, #0
 800c10a:	7f1b      	ldrb	r3, [r3, #28]
 800c10c:	deff      	udf	#255	; 0xff
 800c10e:	bf00      	nop
 800c110:	40021000 	.word	0x40021000
 800c114:	40007000 	.word	0x40007000
 800c118:	40010800 	.word	0x40010800
 800c11c:	40010c00 	.word	0x40010c00
 800c120:	88888838 	.word	0x88888838
 800c124:	40011000 	.word	0x40011000
 800c128:	88888844 	.word	0x88888844
 800c12c:	200020d0 	.word	0x200020d0
 800c130:	e0042000 	.word	0xe0042000
 800c134:	e000e100 	.word	0xe000e100
 800c138:	e000ed00 	.word	0xe000ed00
 800c13c:	e000edf0 	.word	0xe000edf0
 800c140:	05fa0300 	.word	0x05fa0300
 800c144:	e0001000 	.word	0xe0001000
 800c148:	200022b0 	.word	0x200022b0
 800c14c:	20002bf7 	.word	0x20002bf7
 800c150:	20010000 	.word	0x20010000
 800c154:	200022d0 	.word	0x200022d0
 800c158:	0800c730 	.word	0x0800c730
 800c15c:	080052a1 	.word	0x080052a1
 800c160:	0800d710 	.word	0x0800d710
 800c164:	08005a21 	.word	0x08005a21
 800c168:	0800ccd0 	.word	0x0800ccd0
 800c16c:	0800d5d0 	.word	0x0800d5d0
 800c170:	200023ac 	.word	0x200023ac
 800c174:	08008ab1 	.word	0x08008ab1
 800c178:	20002aa8 	.word	0x20002aa8
 800c17c:	0800cce0 	.word	0x0800cce0
 800c180:	0800bba1 	.word	0x0800bba1
 800c184:	20002158 	.word	0x20002158
 800c188:	080052b1 	.word	0x080052b1
 800c18c:	2000239c 	.word	0x2000239c
 800c190:	20001e78 	.word	0x20001e78
 800c194:	0800cb40 	.word	0x0800cb40
 800c198:	080076b1 	.word	0x080076b1
 800c19c:	4620      	mov	r0, r4
 800c19e:	f7fd fa07 	bl	80095b0 <chThdRelease>
 800c1a2:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 800c1a6:	f7fc fc73 	bl	8008a90 <chThdSleep>
 800c1aa:	f8db 3254 	ldr.w	r3, [fp, #596]	; 0x254
 800c1ae:	681b      	ldr	r3, [r3, #0]
 800c1b0:	781b      	ldrb	r3, [r3, #0]
 800c1b2:	2b04      	cmp	r3, #4
 800c1b4:	d1a8      	bne.n	800c108 <main+0x318>
 800c1b6:	9600      	str	r6, [sp, #0]
 800c1b8:	462b      	mov	r3, r5
 800c1ba:	2240      	movs	r2, #64	; 0x40
 800c1bc:	f640 01c8 	movw	r1, #2248	; 0x8c8
 800c1c0:	2000      	movs	r0, #0
 800c1c2:	f7fd fc0d 	bl	80099e0 <chThdCreateFromHeap>
 800c1c6:	4604      	mov	r4, r0
 800c1c8:	e792      	b.n	800c0f0 <main+0x300>
 800c1ca:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 800c1ce:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 800c1d2:	f04f 0ed0 	mov.w	lr, #208	; 0xd0
 800c1d6:	f04f 0ce0 	mov.w	ip, #224	; 0xe0
 800c1da:	f8d8 301c 	ldr.w	r3, [r8, #28]
 800c1de:	67ec      	str	r4, [r5, #124]	; 0x7c
 800c1e0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800c1e4:	f8c8 301c 	str.w	r3, [r8, #28]
 800c1e8:	4b0a      	ldr	r3, [pc, #40]	; (800c214 <main+0x424>)
 800c1ea:	60ac      	str	r4, [r5, #8]
 800c1ec:	6418      	str	r0, [r3, #64]	; 0x40
 800c1ee:	f886 e313 	strb.w	lr, [r6, #787]	; 0x313
 800c1f2:	4809      	ldr	r0, [pc, #36]	; (800c218 <main+0x428>)
 800c1f4:	f8c6 1180 	str.w	r1, [r6, #384]	; 0x180
 800c1f8:	6031      	str	r1, [r6, #0]
 800c1fa:	f886 c314 	strb.w	ip, [r6, #788]	; 0x314
 800c1fe:	f8c6 2180 	str.w	r2, [r6, #384]	; 0x180
 800c202:	6032      	str	r2, [r6, #0]
 800c204:	641c      	str	r4, [r3, #64]	; 0x40
 800c206:	f885 4064 	strb.w	r4, [r5, #100]	; 0x64
 800c20a:	702f      	strb	r7, [r5, #0]
 800c20c:	f7f9 fba8 	bl	8005960 <usb_lld_reset>
 800c210:	e755      	b.n	800c0be <main+0x2ce>
 800c212:	bf00      	nop
 800c214:	40005c00 	.word	0x40005c00
 800c218:	200020d0 	.word	0x200020d0
 800c21c:	00000000 	.word	0x00000000

0800c220 <__early_init>:
 800c220:	4b1b      	ldr	r3, [pc, #108]	; (800c290 <__early_init+0x70>)
 800c222:	461a      	mov	r2, r3
 800c224:	6819      	ldr	r1, [r3, #0]
 800c226:	f041 0101 	orr.w	r1, r1, #1
 800c22a:	6019      	str	r1, [r3, #0]
 800c22c:	6813      	ldr	r3, [r2, #0]
 800c22e:	0798      	lsls	r0, r3, #30
 800c230:	d5fc      	bpl.n	800c22c <__early_init+0xc>
 800c232:	2000      	movs	r0, #0
 800c234:	6813      	ldr	r3, [r2, #0]
 800c236:	4916      	ldr	r1, [pc, #88]	; (800c290 <__early_init+0x70>)
 800c238:	f003 03f9 	and.w	r3, r3, #249	; 0xf9
 800c23c:	6013      	str	r3, [r2, #0]
 800c23e:	6050      	str	r0, [r2, #4]
 800c240:	684b      	ldr	r3, [r1, #4]
 800c242:	f013 0f0c 	tst.w	r3, #12
 800c246:	d1fb      	bne.n	800c240 <__early_init+0x20>
 800c248:	680b      	ldr	r3, [r1, #0]
 800c24a:	4a11      	ldr	r2, [pc, #68]	; (800c290 <__early_init+0x70>)
 800c24c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c250:	600b      	str	r3, [r1, #0]
 800c252:	6813      	ldr	r3, [r2, #0]
 800c254:	0399      	lsls	r1, r3, #14
 800c256:	d5fc      	bpl.n	800c252 <__early_init+0x32>
 800c258:	6853      	ldr	r3, [r2, #4]
 800c25a:	490d      	ldr	r1, [pc, #52]	; (800c290 <__early_init+0x70>)
 800c25c:	f443 13e8 	orr.w	r3, r3, #1900544	; 0x1d0000
 800c260:	6053      	str	r3, [r2, #4]
 800c262:	6813      	ldr	r3, [r2, #0]
 800c264:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800c268:	6013      	str	r3, [r2, #0]
 800c26a:	680b      	ldr	r3, [r1, #0]
 800c26c:	019b      	lsls	r3, r3, #6
 800c26e:	d5fc      	bpl.n	800c26a <__early_init+0x4a>
 800c270:	2212      	movs	r2, #18
 800c272:	4b08      	ldr	r3, [pc, #32]	; (800c294 <__early_init+0x74>)
 800c274:	4808      	ldr	r0, [pc, #32]	; (800c298 <__early_init+0x78>)
 800c276:	6048      	str	r0, [r1, #4]
 800c278:	601a      	str	r2, [r3, #0]
 800c27a:	684b      	ldr	r3, [r1, #4]
 800c27c:	4a04      	ldr	r2, [pc, #16]	; (800c290 <__early_init+0x70>)
 800c27e:	f043 0302 	orr.w	r3, r3, #2
 800c282:	604b      	str	r3, [r1, #4]
 800c284:	6853      	ldr	r3, [r2, #4]
 800c286:	f003 030c 	and.w	r3, r3, #12
 800c28a:	2b08      	cmp	r3, #8
 800c28c:	d1fa      	bne.n	800c284 <__early_init+0x64>
 800c28e:	4770      	bx	lr
 800c290:	40021000 	.word	0x40021000
 800c294:	40022000 	.word	0x40022000
 800c298:	001d6400 	.word	0x001d6400
 800c29c:	00000000 	.word	0x00000000

0800c2a0 <chThdExit>:
 800c2a0:	2320      	movs	r3, #32
 800c2a2:	f383 8811 	msr	BASEPRI, r3
 800c2a6:	f7ff bc5b 	b.w	800bb60 <chThdExitS>
 800c2aa:	bf00      	nop
 800c2ac:	0000      	movs	r0, r0
	...

0800c2b0 <thread1.lto_priv.80>:
 800c2b0:	f7ff bff6 	b.w	800c2a0 <chThdExit>
	...

0800c2c0 <chSchDoReschedule>:
 800c2c0:	f7fa bd5e 	b.w	8006d80 <chSchDoRescheduleAhead>
	...

0800c2d0 <__default_exit>:
 800c2d0:	e7fe      	b.n	800c2d0 <__default_exit>
 800c2d2:	bf00      	nop
	...

0800c2e0 <__late_init>:
 800c2e0:	4770      	bx	lr
 800c2e2:	bf00      	nop
	...

0800c2f0 <strcasecmp>:
 800c2f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c2f2:	4607      	mov	r7, r0
 800c2f4:	460e      	mov	r6, r1
 800c2f6:	f817 4b01 	ldrb.w	r4, [r7], #1
 800c2fa:	f000 f869 	bl	800c3d0 <__locale_ctype_ptr>
 800c2fe:	4420      	add	r0, r4
 800c300:	7843      	ldrb	r3, [r0, #1]
 800c302:	f816 5b01 	ldrb.w	r5, [r6], #1
 800c306:	f003 0303 	and.w	r3, r3, #3
 800c30a:	2b01      	cmp	r3, #1
 800c30c:	bf08      	it	eq
 800c30e:	3420      	addeq	r4, #32
 800c310:	f000 f85e 	bl	800c3d0 <__locale_ctype_ptr>
 800c314:	4428      	add	r0, r5
 800c316:	7843      	ldrb	r3, [r0, #1]
 800c318:	f003 0303 	and.w	r3, r3, #3
 800c31c:	2b01      	cmp	r3, #1
 800c31e:	d004      	beq.n	800c32a <strcasecmp+0x3a>
 800c320:	1b60      	subs	r0, r4, r5
 800c322:	d101      	bne.n	800c328 <strcasecmp+0x38>
 800c324:	2d00      	cmp	r5, #0
 800c326:	d1e6      	bne.n	800c2f6 <strcasecmp+0x6>
 800c328:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c32a:	f105 0020 	add.w	r0, r5, #32
 800c32e:	1a20      	subs	r0, r4, r0
 800c330:	d0e1      	beq.n	800c2f6 <strcasecmp+0x6>
 800c332:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800c340 <strpbrk>:
 800c340:	b430      	push	{r4, r5}
 800c342:	7804      	ldrb	r4, [r0, #0]
 800c344:	b1dc      	cbz	r4, 800c37e <strpbrk+0x3e>
 800c346:	780d      	ldrb	r5, [r1, #0]
 800c348:	b19d      	cbz	r5, 800c372 <strpbrk+0x32>
 800c34a:	42ac      	cmp	r4, r5
 800c34c:	d00f      	beq.n	800c36e <strpbrk+0x2e>
 800c34e:	460a      	mov	r2, r1
 800c350:	e001      	b.n	800c356 <strpbrk+0x16>
 800c352:	429c      	cmp	r4, r3
 800c354:	d00b      	beq.n	800c36e <strpbrk+0x2e>
 800c356:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800c35a:	2b00      	cmp	r3, #0
 800c35c:	d1f9      	bne.n	800c352 <strpbrk+0x12>
 800c35e:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 800c362:	2c00      	cmp	r4, #0
 800c364:	d1f0      	bne.n	800c348 <strpbrk+0x8>
 800c366:	7813      	ldrb	r3, [r2, #0]
 800c368:	2b00      	cmp	r3, #0
 800c36a:	bf08      	it	eq
 800c36c:	2000      	moveq	r0, #0
 800c36e:	bc30      	pop	{r4, r5}
 800c370:	4770      	bx	lr
 800c372:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 800c376:	460a      	mov	r2, r1
 800c378:	2c00      	cmp	r4, #0
 800c37a:	d1e5      	bne.n	800c348 <strpbrk+0x8>
 800c37c:	e7f3      	b.n	800c366 <strpbrk+0x26>
 800c37e:	4620      	mov	r0, r4
 800c380:	e7f5      	b.n	800c36e <strpbrk+0x2e>
 800c382:	bf00      	nop
	...

0800c390 <strspn>:
 800c390:	b470      	push	{r4, r5, r6}
 800c392:	7804      	ldrb	r4, [r0, #0]
 800c394:	b1a4      	cbz	r4, 800c3c0 <strspn+0x30>
 800c396:	4606      	mov	r6, r0
 800c398:	780d      	ldrb	r5, [r1, #0]
 800c39a:	b14d      	cbz	r5, 800c3b0 <strspn+0x20>
 800c39c:	42a5      	cmp	r5, r4
 800c39e:	d00a      	beq.n	800c3b6 <strspn+0x26>
 800c3a0:	460a      	mov	r2, r1
 800c3a2:	e001      	b.n	800c3a8 <strspn+0x18>
 800c3a4:	42a3      	cmp	r3, r4
 800c3a6:	d006      	beq.n	800c3b6 <strspn+0x26>
 800c3a8:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800c3ac:	2b00      	cmp	r3, #0
 800c3ae:	d1f9      	bne.n	800c3a4 <strspn+0x14>
 800c3b0:	1b80      	subs	r0, r0, r6
 800c3b2:	bc70      	pop	{r4, r5, r6}
 800c3b4:	4770      	bx	lr
 800c3b6:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 800c3ba:	2c00      	cmp	r4, #0
 800c3bc:	d1ed      	bne.n	800c39a <strspn+0xa>
 800c3be:	e7f7      	b.n	800c3b0 <strspn+0x20>
 800c3c0:	4620      	mov	r0, r4
 800c3c2:	e7f6      	b.n	800c3b2 <strspn+0x22>
	...

0800c3d0 <__locale_ctype_ptr>:
 800c3d0:	4b04      	ldr	r3, [pc, #16]	; (800c3e4 <__locale_ctype_ptr+0x14>)
 800c3d2:	4a05      	ldr	r2, [pc, #20]	; (800c3e8 <__locale_ctype_ptr+0x18>)
 800c3d4:	681b      	ldr	r3, [r3, #0]
 800c3d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c3d8:	2b00      	cmp	r3, #0
 800c3da:	bf08      	it	eq
 800c3dc:	4613      	moveq	r3, r2
 800c3de:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
 800c3e2:	4770      	bx	lr
 800c3e4:	20001a48 	.word	0x20001a48
 800c3e8:	200018dc 	.word	0x200018dc
 800c3ec:	00000000 	.word	0x00000000

0800c3f0 <__ascii_mbtowc>:
 800c3f0:	b082      	sub	sp, #8
 800c3f2:	b149      	cbz	r1, 800c408 <__ascii_mbtowc+0x18>
 800c3f4:	b15a      	cbz	r2, 800c40e <__ascii_mbtowc+0x1e>
 800c3f6:	b16b      	cbz	r3, 800c414 <__ascii_mbtowc+0x24>
 800c3f8:	7813      	ldrb	r3, [r2, #0]
 800c3fa:	600b      	str	r3, [r1, #0]
 800c3fc:	7812      	ldrb	r2, [r2, #0]
 800c3fe:	1c10      	adds	r0, r2, #0
 800c400:	bf18      	it	ne
 800c402:	2001      	movne	r0, #1
 800c404:	b002      	add	sp, #8
 800c406:	4770      	bx	lr
 800c408:	a901      	add	r1, sp, #4
 800c40a:	2a00      	cmp	r2, #0
 800c40c:	d1f3      	bne.n	800c3f6 <__ascii_mbtowc+0x6>
 800c40e:	4610      	mov	r0, r2
 800c410:	b002      	add	sp, #8
 800c412:	4770      	bx	lr
 800c414:	f06f 0001 	mvn.w	r0, #1
 800c418:	e7f4      	b.n	800c404 <__ascii_mbtowc+0x14>
 800c41a:	bf00      	nop
 800c41c:	0000      	movs	r0, r0
	...

0800c420 <__ascii_wctomb>:
 800c420:	b119      	cbz	r1, 800c42a <__ascii_wctomb+0xa>
 800c422:	2aff      	cmp	r2, #255	; 0xff
 800c424:	d803      	bhi.n	800c42e <__ascii_wctomb+0xe>
 800c426:	700a      	strb	r2, [r1, #0]
 800c428:	2101      	movs	r1, #1
 800c42a:	4608      	mov	r0, r1
 800c42c:	4770      	bx	lr
 800c42e:	238a      	movs	r3, #138	; 0x8a
 800c430:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800c434:	6003      	str	r3, [r0, #0]
 800c436:	e7f8      	b.n	800c42a <__ascii_wctomb+0xa>
	...

0800c440 <CSWTCH.31>:
 800c440:	0400 0000 0600 0000 0000 0000 0000 0000     ................
 800c450:	2a2a 202a 654b 6e72 6c65 203a 2020 2020     *** Kernel:     
 800c460:	2020 0000 2a2a 202a 6f43 706d 6c69 6465       ..*** Compiled
 800c470:	203a 2020 2020 0000 2a2a 202a 6f43 706d     :     ..*** Comp
 800c480:	6c69 7265 203a 2020 2020 0000 2a2a 202a     iler:     ..*** 
 800c490:	7241 6863 7469 6365 7574 6572 203a 0000     Architecture: ..
 800c4a0:	2a2a 202a 6f43 6572 5620 7261 6169 746e     *** Core Variant
 800c4b0:	203a 0000 2a2a 202a 6f50 7472 4920 666e     : ..*** Port Inf
 800c4c0:	3a6f 2020 2020 0000 2a2a 202a 6c50 7461     o:    ..*** Plat
 800c4d0:	6f66 6d72 203a 2020 2020 0000 2a2a 202a     form:     ..*** 
 800c4e0:	6554 7473 4220 616f 6472 203a 2020 0000     Test Board:   ..
 800c4f0:	2d2d 202d 6554 7473 4320 7361 2065 0000     --- Test Case ..
 800c500:	2820 0000 2d2d 202d 6552 7573 746c 203a      (..--- Result: 
 800c510:	4146 4c49 5255 2045 2328 0000 5b20 0000     FAILURE (#.. [..
 800c520:	6946 616e 206c 6572 7573 746c 203a 0000     Final result: ..
 800c530:	2a2a 202a 6843 6269 4f69 2f53 5452 7420     *** ChibiOS/RT t
 800c540:	7365 2074 7573 7469 0065 0000 2a2a 002a     est suite...***.
 800c550:	7041 2072 3620 3220 3130 2038 202d 3631     Apr  6 2018 - 16
 800c560:	303a 3a30 3334 0000 0029 0000 295d 0000     :00:43..)...])..
 800c570:	2d2d 202d 6552 7573 746c 203a 5553 4343     --- Result: SUCC
 800c580:	5345 0053 4146 4c49 5255 0045 0000 0000     ESS.FAILURE.....
 800c590:	6c62 6e69 656b 0072 0000 0000 0000 0000     blinker.........
 800c5a0:	0920 0000 0000 0000 0000 0000 0000 0000      ...............
 800c5b0:	6e75 6168 646e 656c 2064 7865 6563 7470     unhandled except
 800c5c0:	6f69 006e 0000 0000 0000 0000 0000 0000     ion.............

0800c5d0 <active_status>:
	...
 800c5e0:	2d2d 202d 6353 726f 2065 203a 0000 0000     --- Score : ....
 800c5f0:	7420 6d69 7265 2f73 0053 0000 0000 0000      timers/S.......
 800c600:	7720 6961 2b74 6973 6e67 6c61 532f 0000      wait+signal/S..
 800c610:	6c20 636f 2b6b 6e75 6f6c 6b63 532f 0000      lock+unlock/S..
 800c620:	2d2d 202d 7953 7473 6d65 203a 0000 0000     --- System: ....
 800c630:	6220 7479 7365 0000 2d2d 202d 6854 6572      bytes..--- Thre
 800c640:	6461 203a 0000 0000 2d2d 202d 6954 656d     ad: ....--- Time
 800c650:	2072 203a 0000 0000 2d2d 202d 6553 616d     r : ....--- Sema
 800c660:	6870 203a 0000 0000 2d2d 202d 7645 6e65     ph: ....--- Even
 800c670:	5374 203a 0000 0000 2d2d 202d 7645 6e65     tS: ....--- Even
 800c680:	4c74 203a 0000 0000 2d2d 202d 754d 6574     tL: ....--- Mute
 800c690:	2078 203a 0000 0000 2d2d 202d 6f43 646e     x : ....--- Cond
 800c6a0:	2e56 203a 0000 0000 2d2d 202d 7551 7565     V.: ....--- Queu
 800c6b0:	2065 203a 0000 0000 2d2d 202d 614d 6c69     e : ....--- Mail
 800c6c0:	2e42 203a 0000 0000 0000 0000 0000 0000     B.: ............
 800c6d0:	6d20 6773 2f73 2c53 0020 0000 0000 0000      msgs/S, .......
 800c6e0:	7420 7268 6165 7364 532f 0000 0000 0000      threads/S......
 800c6f0:	7220 7365 6863 6465 6c75 7365 532f 202c      reschedules/S, 
	...
 800c710:	6320 7874 7773 2f63 0053 0000 0000 0000      ctxswc/S.......
 800c720:	6220 7479 7365 532f 0000 0000 0000 0000      bytes/S........

0800c730 <ch_debug>:
 800c730:	616d 6e69 1600 1801 0204 0844 100c 1814     main......D.....
 800c740:	1c00 1e1d 0000 0000 0000 0000 0000 0000     ................
 800c750:	6e28 6c75 296c 0000 0000 0000 0000 0000     (null)..........
 800c760:	6e69 6f66 0000 0000 2e33 2e30 0030 0000     info....3.0.0...
 800c770:	654b 6e72 6c65 203a 2020 2020 2020 7325     Kernel:       %s
 800c780:	0a0d 0000 4347 2043 2e37 2e32 2031 3032     ....GCC 7.2.1 20
 800c790:	3731 3930 3430 2820 6572 656c 7361 2965     170904 (release)
 800c7a0:	5b20 5241 2f4d 6d65 6562 6464 6465 372d      [ARM/embedded-7
 800c7b0:	622d 6172 636e 2068 6572 6976 6973 6e6f     -branch revision
 800c7c0:	3220 3535 3032 5d34 0000 0000 6f43 706d      255204]....Comp
 800c7d0:	6c69 7265 203a 2020 2020 7325 0a0d 0000     iler:     %s....
 800c7e0:	5241 764d 2d37 004d 7241 6863 7469 6365     ARMv7-M.Architec
 800c7f0:	7574 6572 203a 7325 0a0d 0000 6f43 7472     ture: %s....Cort
 800c800:	7865 4d2d 0033 0000 6f43 6572 5620 7261     ex-M3...Core Var
 800c810:	6169 746e 203a 7325 0a0d 0000 6441 6176     iant: %s....Adva
 800c820:	636e 6465 6b20 7265 656e 206c 6f6d 6564     nced kernel mode
 800c830:	0000 0000 6f50 7472 4920 666e 3a6f 2020     ....Port Info:  
 800c840:	2020 7325 0a0d 0000 5453 334d 4632 3031       %s....STM32F10
 800c850:	2078 6550 6672 726f 616d 636e 2065 694c     x Performance Li
 800c860:	656e 4d20 6465 7569 206d 6544 736e 7469     ne Medium Densit
 800c870:	0079 0000 6c50 7461 6f66 6d72 203a 2020     y...Platform:   
 800c880:	2020 7325 0a0d 0000 654c 6661 614c 7362       %s....LeafLabs
 800c890:	4d20 7061 656c 4d20 6e69 0069 6f42 7261      Maple Mini.Boar
 800c8a0:	3a64 2020 2020 2020 2020 7325 0a0d 0000     d:        %s....
 800c8b0:	2d20 0020 7041 2072 3620 3220 3130 0038      - .Apr  6 2018.
 800c8c0:	7542 6c69 2064 6974 656d 203a 2020 7325     Build time:   %s
 800c8d0:	7325 7325 0a0d 0000 3631 303a 3a30 3434     %s%s....16:00:44
	...
 800c8f0:	7355 6761 3a65 6d20 6d65 0a0d 0000 0000     Usage: mem......
 800c900:	6f63 6572 6620 6572 2065 656d 6f6d 7972     core free memory
 800c910:	3a20 2520 2075 7962 6574 0d73 000a 0000      : %u bytes.....
 800c920:	6568 7061 6620 6172 6d67 6e65 7374 2020     heap fragments  
 800c930:	3a20 2520 0d75 000a 6568 7061 6620 6572      : %u...heap fre
 800c940:	2065 6f74 6174 206c 3a20 2520 2075 7962     e total  : %u by
 800c950:	6574 0d73 000a 0000 0000 0000 0000 0000     tes.............
 800c960:	7973 7473 6d69 0065 7355 6761 3a65 2520     systime.Usage: %
 800c970:	0d73 000a 6c25 0d75 000a 0000 0000 0000     s...%lu.........
 800c980:	7355 6761 3a65 7420 7365 0d74 000a 0000     Usage: test.....
 800c990:	756f 2074 666f 6d20 6d65 726f 0d79 000a     out of memory...
 800c9a0:	7355 6761 3a65 7420 7268 6165 7364 0a0d     Usage: threads..
 800c9b0:	0000 0000 2020 2020 6461 7264 2020 2020     ....    addr    
 800c9c0:	7473 6361 206b 7270 6f69 7220 6665 2073     stack prio refs 
 800c9d0:	2020 2020 7473 7461 0d65 000a 3025 6c38         state...%08l
 800c9e0:	2078 3025 6c38 2078 3425 756c 2520 6c34     x %08lx %4lu %4l
 800c9f0:	2075 3925 0d73 000a 0000 0000 0000 0000     u %9s...........
 800ca00:	0a0d 730a 6f74 7070 6465 0a0d 0000 0000     ...stopped......
 800ca10:	7355 6761 3a65 7720 6972 6574 0a0d 0000     Usage: write....

0800ca20 <commands>:
 800ca20:	d28c 0800 94c1 0800 d290 0800 9641 0800     ............A...
 800ca30:	d168 0800 9e71 0800 d298 0800 69e1 0800     h...q........i..
	...
 800ca50:	4241 0000 0000 0000 0000 0000 0000 0000     AB..............
 800ca60:	0042 0000 0043 0000 0000 0000 0000 0000     B...C...........
 800ca70:	0041 0000 0000 0000 0000 0000 0000 0000     A...............

0800ca80 <ep0config>:
 800ca80:	0000 0000 72d1 0800 71c1 0800 7101 0800     .....r...q...q..
 800ca90:	0040 0040 22d4 2000 22d4 2000 0001 0000     @.@..". .". ....
 800caa0:	22e8 2000 0000 0000 0000 0000 0000 0000     .". ............

0800cab0 <ep1config>:
 800cab0:	0002 0000 0000 0000 7721 0800 60c1 0800     ........!w...`..
 800cac0:	0040 0040 22f0 2000 2300 2000 0002 0000     @.@..". .#. ....
	...

0800cae0 <ep2config>:
 800cae0:	0003 0000 0000 0000 5ad1 0800 0000 0000     .........Z......
 800caf0:	0010 0000 2314 2000 0000 0000 0001 0000     .....#. ........
	...

0800cb10 <evhndl>:
 800cb10:	57d1 0800 57c1 0800 57b1 0800 0000 0000     .W...W...W......
 800cb20:	4241 0043 0000 0000 0000 0000 0000 0000     ABC.............

0800cb30 <halted_status>:
 800cb30:	0001 0000 0000 0000 0000 0000 0000 0000     ................
 800cb40:	6469 656c 0000 0000 0000 0000 0000 0000     idle............
 800cb50:	4241 4443 0045 0000 0000 0000 0000 0000     ABCDE...........

0800cb60 <patternbmk>:
 800cb60:	d330 0800 d380 0800 d390 0800 d3a0 0800     0...............
 800cb70:	d3b0 0800 d3c0 0800 d3d0 0800 d3e0 0800     ................
 800cb80:	d3f0 0800 d340 0800 d350 0800 d360 0800     ....@...P...`...
 800cb90:	d370 0800 0000 0000 0000 0000 0000 0000     p...............

0800cba0 <patterndyn>:
 800cba0:	d400 0800 d410 0800 d420 0800 0000 0000     ........ .......

0800cbb0 <patternevt>:
 800cbb0:	d430 0800 d440 0800 d450 0800 0000 0000     0...@...P.......

0800cbc0 <patternheap>:
 800cbc0:	d460 0800 0000 0000 0000 0000 0000 0000     `...............

0800cbd0 <patternmbox>:
 800cbd0:	d470 0800 0000 0000 0000 0000 0000 0000     p...............

0800cbe0 <patternmsg>:
 800cbe0:	d480 0800 0000 0000 0000 0000 0000 0000     ................

0800cbf0 <patternmtx>:
 800cbf0:	d490 0800 d4a0 0800 d4b0 0800 d4c0 0800     ................
 800cc00:	d4d0 0800 d4e0 0800 0000 0000 0000 0000     ................

0800cc10 <patternpools>:
 800cc10:	d4f0 0800 0000 0000 0000 0000 0000 0000     ................

0800cc20 <patternqueues>:
 800cc20:	d500 0800 d510 0800 0000 0000 0000 0000     ................

0800cc30 <patterns>:
 800cc30:	cc90 0800 cca0 0800 cc70 0800 cbf0 0800     ........p.......
 800cc40:	cbe0 0800 cbd0 0800 cbb0 0800 cbc0 0800     ................
 800cc50:	cc10 0800 cba0 0800 cc20 0800 cb60 0800     ........ ...`...
	...

0800cc70 <patternsem>:
 800cc70:	d520 0800 d530 0800 d540 0800 d550 0800      ...0...@...P...
	...

0800cc90 <patternsys>:
 800cc90:	d560 0800 d570 0800 d580 0800 0000 0000     `...p...........

0800cca0 <patternthd>:
 800cca0:	d590 0800 d5a0 0800 d5b0 0800 d5c0 0800     ................
	...
 800ccc0:	4241 4443 0000 0000 0000 0000 0000 0000     ABCD............

0800ccd0 <serusbcfg>:
 800ccd0:	20d0 2000 0101 0002 0000 0000 0000 0000     . . ............

0800cce0 <shell_cfg1>:
 800cce0:	1e78 2000 ca20 0800 0000 0000 0000 0000     x..  ...........
 800ccf0:	6873 6c65 006c 0000 0a0d 6843 6269 4f69     shell.....ChibiO
 800cd00:	2f53 5452 5320 6568 6c6c 0a0d 0000 0000     S/RT Shell......
 800cd10:	6863 203e 0000 0000 445e 0000 0a0d 6f6c     ch> ....^D....lo
 800cd20:	6f67 7475 0000 0000 6f74 206f 616d 796e     gout....too many
 800cd30:	6120 6772 6d75 6e65 7374 0a0d 0000 0000      arguments......
 800cd40:	7865 7469 0000 0000 6568 706c 0000 0000     exit....help....
 800cd50:	6f43 6d6d 6e61 7364 203a 6568 706c 6520     Commands: help e
 800cd60:	6978 2074 0000 0000 7325 0020 7325 0000     xit ....%s .%s..
 800cd70:	3f20 0a0d 0000 0000 0000 0000 0000 0000      ?..............

0800cd80 <states.8177>:
 800cd80:	d2a0 0800 d2a8 0800 d2b0 0800 d2b8 0800     ................
 800cd90:	d2c4 0800 d2cc 0800 d2d4 0800 d2dc 0800     ................
 800cda0:	d2e4 0800 d2f0 0800 d2f8 0800 d300 0800     ................
 800cdb0:	d30c 0800 d314 0800 d31c 0800 d324 0800     ............$...
 800cdc0:	6542 636e 6d68 7261 2c6b 5220 4d41 6620     Benchmark, RAM f
 800cdd0:	6f6f 7074 6972 746e 0000 0000 6542 636e     ootprint....Benc
 800cde0:	6d68 7261 2c6b 6d20 7475 7865 7365 6c20     hmark, mutexes l
 800cdf0:	636f 2f6b 6e75 6f6c 6b63 0000 6542 636e     ock/unlock..Benc
 800ce00:	6d68 7261 2c6b 7320 6d65 7061 6f68 6572     hmark, semaphore
 800ce10:	2073 6177 7469 732f 6769 616e 006c 0000     s wait/signal...
 800ce20:	6542 636e 6d68 7261 2c6b 7620 7269 7574     Benchmark, virtu
 800ce30:	6c61 7420 6d69 7265 2073 6573 2f74 6572     al timers set/re
 800ce40:	6573 0074 6542 636e 6d68 7261 2c6b 4920     set.Benchmark, I
 800ce50:	4f2f 5120 6575 6575 2073 6874 6f72 6775     /O Queues throug
 800ce60:	7068 7475 0000 0000 6542 636e 6d68 7261     hput....Benchmar
 800ce70:	2c6b 7220 756f 646e 7220 626f 6e69 6320     k, round robin c
 800ce80:	6e6f 6574 7478 7320 6977 6374 6968 676e     ontext switching
 800ce90:	0000 0000 6542 636e 6d68 7261 2c6b 6d20     ....Benchmark, m
 800cea0:	7361 2073 6572 6373 6568 7564 656c 202c     ass reschedule, 
 800ceb0:	2035 6874 6572 6461 0073 0000 6542 636e     5 threads...Benc
 800cec0:	6d68 7261 2c6b 7420 7268 6165 7364 202c     hmark, threads, 
 800ced0:	7263 6165 6574 6f20 6c6e 0079 6542 636e     create only.Benc
 800cee0:	6d68 7261 2c6b 7420 7268 6165 7364 202c     hmark, threads, 
 800cef0:	7566 6c6c 6320 6379 656c 0000 6542 636e     full cycle..Benc
 800cf00:	6d68 7261 2c6b 6320 6e6f 6574 7478 7320     hmark, context s
 800cf10:	6977 6374 0068 0000 6542 636e 6d68 7261     witch...Benchmar
 800cf20:	2c6b 6d20 7365 6173 6567 2073 3323 0000     k, messages #3..
 800cf30:	6542 636e 6d68 7261 2c6b 6d20 7365 6173     Benchmark, messa
 800cf40:	6567 2073 3223 0000 6542 636e 6d68 7261     ges #2..Benchmar
 800cf50:	2c6b 6d20 7365 6173 6567 2073 3123 0000     k, messages #1..
 800cf60:	7551 7565 7365 202c 756f 7074 7475 7120     Queues, output q
 800cf70:	6575 6575 0073 0000 7551 7565 7365 202c     ueues...Queues, 
 800cf80:	6e69 7570 2074 7571 7565 7365 0000 0000     input queues....
 800cf90:	7944 616e 696d 2063 5041 7349 202c 6572     Dynamic APIs, re
 800cfa0:	6967 7473 7972 6120 646e 7220 6665 7265     gistry and refer
 800cfb0:	6e65 6563 0073 0000 7944 616e 696d 2063     ences...Dynamic 
 800cfc0:	5041 7349 202c 6874 6572 6461 2073 7263     APIs, threads cr
 800cfd0:	6165 6974 6e6f 6620 6f72 206d 656d 6f6d     eation from memo
 800cfe0:	7972 7020 6f6f 006c 7944 616e 696d 2063     ry pool.Dynamic 
 800cff0:	5041 7349 202c 6874 6572 6461 2073 7263     APIs, threads cr
 800d000:	6165 6974 6e6f 6620 6f72 206d 6568 7061     eation from heap
 800d010:	0000 0000 654d 6f6d 7972 5020 6f6f 736c     ....Memory Pools
 800d020:	202c 7571 7565 2f65 6564 7571 7565 0065     , queue/dequeue.
 800d030:	6548 7061 202c 6c61 6f6c 6163 6974 6e6f     Heap, allocation
 800d040:	6120 646e 6620 6172 6d67 6e65 6174 6974      and fragmentati
 800d050:	6e6f 7420 7365 0074 7645 6e65 7374 202c     on test.Events, 
 800d060:	6974 656d 756f 7374 0000 0000 7645 6e65     timeouts....Even
 800d070:	7374 202c 6177 7469 6120 646e 6220 6f72     ts, wait and bro
 800d080:	6461 6163 7473 0000 7645 6e65 7374 202c     adcast..Events, 
 800d090:	6572 6967 7473 6172 6974 6e6f 6120 646e     registration and
 800d0a0:	6420 7369 6170 6374 0068 0000 614d 6c69      dispatch...Mail
 800d0b0:	6f62 6578 2c73 7120 6575 6975 676e 6120     boxes, queuing a
 800d0c0:	646e 7420 6d69 6f65 7475 0073 654d 7373     nd timeouts.Mess
 800d0d0:	6761 7365 202c 6f6c 706f 0000 6f43 646e     ages, loop..Cond
 800d0e0:	6156 2c72 6220 6f6f 7473 7420 7365 0074     Var, boost test.
 800d0f0:	6f43 646e 6156 2c72 6220 6f72 6461 6163     CondVar, broadca
 800d100:	7473 7420 7365 0074 6f43 646e 6156 2c72     st test.CondVar,
 800d110:	7320 6769 616e 206c 6574 7473 0000 0000      signal test....
 800d120:	754d 6574 6578 2c73 7320 6174 7574 0073     Mutexes, status.
 800d130:	754d 6574 6578 2c73 7020 6972 726f 7469     Mutexes, priorit
 800d140:	2079 6572 7574 6e72 0000 0000 754d 6574     y return....Mute
 800d150:	6578 2c73 7020 6972 726f 7469 2079 6e65     xes, priority en
 800d160:	7571 7565 6e69 2067 6574 7473 0000 0000     queuing test....
 800d170:	6942 616e 7972 5320 6d65 7061 6f68 6572     Binary Semaphore
 800d180:	2c73 6620 6e75 7463 6f69 616e 696c 7974     s, functionality
 800d190:	0000 0000 6553 616d 6870 726f 7365 202c     ....Semaphores, 
 800d1a0:	7461 6d6f 6369 7320 6769 616e 2d6c 6177     atomic signal-wa
 800d1b0:	7469 0000 6553 616d 6870 726f 7365 202c     it..Semaphores, 
 800d1c0:	6974 656d 756f 0074 6553 616d 6870 726f     timeout.Semaphor
 800d1d0:	7365 202c 6e65 7571 7565 6e69 0067 0000     es, enqueuing...
 800d1e0:	6854 6572 6461 2c73 6420 6c65 7961 0073     Threads, delays.
 800d1f0:	6854 6572 6461 2c73 7020 6972 726f 7469     Threads, priorit
 800d200:	2079 6863 6e61 6567 0000 0000 6854 6572     y change....Thre
 800d210:	6461 2c73 6520 716e 6575 6975 676e 7420     ads, enqueuing t
 800d220:	7365 2074 3223 0000 6854 6572 6461 2c73     est #2..Threads,
 800d230:	6520 716e 6575 6975 676e 7420 7365 2074      enqueuing test 
 800d240:	3123 0000 7953 7473 6d65 202c 6e69 6574     #1..System, inte
 800d250:	7267 7469 0079 0000 7953 7473 6d65 202c     grity...System, 
 800d260:	6e69 6574 7272 7075 7374 6820 6e61 6c64     interrupts handl
 800d270:	6e69 0067 7953 7473 6d65 202c 7263 7469     ing.System, crit
 800d280:	6369 6c61 7a20 6e6f 7365 0000 656d 006d     ical zones..mem.
 800d290:	6874 6572 6461 0073 7277 7469 0065 0000     threads.write...
 800d2a0:	4552 4441 0059 0000 5543 5252 4e45 0054     READY...CURRENT.
 800d2b0:	5457 5453 5241 0054 5553 5053 4e45 4544     WTSTART.SUSPENDE
 800d2c0:	0044 0000 5551 5545 4445 0000 5457 4553     D...QUEUED..WTSE
 800d2d0:	004d 0000 5457 544d 0058 0000 5457 4f43     M...WTMTX...WTCO
 800d2e0:	444e 0000 4c53 4545 4950 474e 0000 0000     ND..SLEEPING....
 800d2f0:	5457 5845 5449 0000 5457 524f 5645 0054     WTEXIT..WTOREVT.
 800d300:	5457 4e41 4544 5456 0000 0000 4e53 4d44     WTANDEVT....SNDM
 800d310:	4753 0051 4e53 4d44 4753 0000 5457 534d     SGQ.SNDMSG..WTMS
 800d320:	0047 0000 4946 414e 004c 0000 0000 0000     G...FINAL.......

0800d330 <testbmk1>:
 800d330:	cf48 0800 0000 0000 0000 0000 a381 0800     H...............

0800d340 <testbmk10>:
 800d340:	ce20 0800 0000 0000 0000 0000 8c71 0800      ...........q...

0800d350 <testbmk11>:
 800d350:	cdfc 0800 5331 0800 0000 0000 9bf1 0800     ....1S..........

0800d360 <testbmk12>:
 800d360:	cddc 0800 5321 0800 0000 0000 9191 0800     ....!S..........

0800d370 <testbmk13>:
 800d370:	cdc0 0800 0000 0000 0000 0000 6b31 0800     ............1k..

0800d380 <testbmk2>:
 800d380:	cf30 0800 0000 0000 0000 0000 a311 0800     0...............

0800d390 <testbmk3>:
 800d390:	cf18 0800 0000 0000 0000 0000 a231 0800     ............1...

0800d3a0 <testbmk4>:
 800d3a0:	cefc 0800 0000 0000 0000 0000 a181 0800     ................

0800d3b0 <testbmk5>:
 800d3b0:	cedc 0800 0000 0000 0000 0000 9ec1 0800     ................

0800d3c0 <testbmk6>:
 800d3c0:	cebc 0800 0000 0000 0000 0000 8db1 0800     ................

0800d3d0 <testbmk7>:
 800d3d0:	ce94 0800 5361 0800 0000 0000 a051 0800     ....aS......Q...

0800d3e0 <testbmk8>:
 800d3e0:	ce68 0800 0000 0000 0000 0000 9f71 0800     h...........q...

0800d3f0 <testbmk9>:
 800d3f0:	ce44 0800 0000 0000 0000 0000 8d01 0800     D...............

0800d400 <testdyn1>:
 800d400:	cfe8 0800 5411 0800 0000 0000 a9c1 0800     .....T..........

0800d410 <testdyn2>:
 800d410:	cfb8 0800 53f1 0800 0000 0000 a8c1 0800     .....S..........

0800d420 <testdyn3>:
 800d420:	cf90 0800 5441 0800 0000 0000 9a61 0800     ....AT......a...

0800d430 <testevt1>:
 800d430:	d088 0800 54b1 0800 0000 0000 5da1 0800     .....T.......]..

0800d440 <testevt2>:
 800d440:	d06c 0800 54d1 0800 0000 0000 aac1 0800     l....T..........

0800d450 <testevt3>:
 800d450:	d058 0800 54c1 0800 0000 0000 7fe1 0800     X....T..........

0800d460 <testheap1>:
 800d460:	d030 0800 5481 0800 0000 0000 9791 0800     0....T..........

0800d470 <testmbox1>:
 800d470:	d0ac 0800 54e1 0800 0000 0000 8271 0800     .....T......q...

0800d480 <testmsg1>:
 800d480:	d0cc 0800 0000 0000 0000 0000 8f51 0800     ............Q...

0800d490 <testmtx1>:
 800d490:	d14c 0800 55a1 0800 0000 0000 b261 0800     L....U......a...

0800d4a0 <testmtx4>:
 800d4a0:	d130 0800 5581 0800 0000 0000 b011 0800     0....U..........

0800d4b0 <testmtx5>:
 800d4b0:	d120 0800 55b1 0800 0000 0000 9321 0800      ....U......!...

0800d4c0 <testmtx6>:
 800d4c0:	d108 0800 5551 0800 0000 0000 af31 0800     ....QU......1...

0800d4d0 <testmtx7>:
 800d4d0:	d0f0 0800 5571 0800 0000 0000 ae41 0800     ....qU......A...

0800d4e0 <testmtx8>:
 800d4e0:	d0dc 0800 5521 0800 0000 0000 adb1 0800     ....!U..........

0800d4f0 <testpools1>:
 800d4f0:	d014 0800 5461 0800 0000 0000 5c91 0800     ....aT.......\..

0800d500 <testqueues1>:
 800d500:	cf78 0800 53c1 0800 0000 0000 a631 0800     x....S......1...

0800d510 <testqueues2>:
 800d510:	cf60 0800 5391 0800 0000 0000 a3f1 0800     `....S..........

0800d520 <testsem1>:
 800d520:	d1c8 0800 55c1 0800 0000 0000 b4b1 0800     .....U..........

0800d530 <testsem2>:
 800d530:	d1b4 0800 55e1 0800 0000 0000 b351 0800     .....U......Q...

0800d540 <testsem3>:
 800d540:	d194 0800 55d1 0800 0000 0000 7e11 0800     .....U.......~..

0800d550 <testsem4>:
 800d550:	d170 0800 0000 0000 0000 0000 9c91 0800     p...............

0800d560 <testsys1>:
 800d560:	d274 0800 0000 0000 0000 0000 8b01 0800     t...............

0800d570 <testsys2>:
 800d570:	d258 0800 0000 0000 0000 0000 5371 0800     X...........qS..

0800d580 <testsys3>:
 800d580:	d244 0800 0000 0000 0000 0000 64f1 0800     D............d..

0800d590 <testthd1>:
 800d590:	d228 0800 0000 0000 0000 0000 b761 0800     (...........a...

0800d5a0 <testthd2>:
 800d5a0:	d20c 0800 0000 0000 0000 0000 b621 0800     ............!...

0800d5b0 <testthd3>:
 800d5b0:	d1f0 0800 0000 0000 0000 0000 6ea1 0800     .............n..

0800d5c0 <testthd4>:
 800d5c0:	d1e0 0800 0000 0000 0000 0000 8e21 0800     ............!...

0800d5d0 <usbcfg>:
 800d5d0:	6c51 0800 52f1 0800 5ae1 0800 0000 0000     Ql...R...Z......

0800d5e0 <vcom_configuration_descriptor>:
 800d5e0:	0043 0000 d5f0 0800 0000 0000 0000 0000     C...............

0800d5f0 <vcom_configuration_descriptor_data>:
 800d5f0:	0209 0043 0102 c000 0932 0004 0100 0202     ..C.....2.......
 800d600:	0001 2405 1000 0501 0124 0100 2404 0202     ...$....$....$..
 800d610:	2405 0006 0701 8205 0803 ff00 0409 0001     .$..............
 800d620:	0a02 0000 0700 0105 4002 0000 0507 0281     .........@......
 800d630:	0040 0000 0000 0000 0000 0000 0000 0000     @...............

0800d640 <vcom_device_descriptor>:
 800d640:	0012 0000 d650 0800 0000 0000 0000 0000     ....P...........

0800d650 <vcom_device_descriptor_data>:
 800d650:	0112 0110 0002 4000 1eaf 0004 0200 0201     .......@........
 800d660:	0103 0000 0000 0000 0000 0000 0000 0000     ................

0800d670 <vcom_string0>:
 800d670:	0304 0409 0000 0000 0000 0000 0000 0000     ................

0800d680 <vcom_string1>:
 800d680:	0312 004c 0065 0061 0066 004c 0061 0062     ..L.e.a.f.L.a.b.
 800d690:	0073 0000 0000 0000 0000 0000 0000 0000     s...............

0800d6a0 <vcom_string2>:
 800d6a0:	0338 0043 0068 0069 0062 0069 004f 0053     8.C.h.i.b.i.O.S.
 800d6b0:	002f 0052 0054 0020 0056 0069 0072 0074     /.R.T. .V.i.r.t.
 800d6c0:	0075 0061 006c 0020 0043 004f 004d 0020     u.a.l. .C.O.M. .
 800d6d0:	0050 006f 0072 0074 0000 0000 0000 0000     P.o.r.t.........

0800d6e0 <vcom_string3>:
 800d6e0:	0308 0033 0030 0031 0000 0000 0000 0000     ..3.0.1.........

0800d6f0 <vcom_strings>:
 800d6f0:	0004 0000 d670 0800 0012 0000 d680 0800     ....p...........
 800d700:	0038 0000 d6a0 0800 0008 0000 d6e0 0800     8...............

0800d710 <vmt>:
 800d710:	88e1 0800 8a01 0800 8961 0800 8a81 0800     ........a.......
 800d720:	8951 0800 8a71 0800 88d1 0800 89f1 0800     Q...q...........

0800d730 <wa>:
 800d730:	23b0 2000 24f8 2000 2640 2000 2788 2000     .#. .$. @&. .'. 
 800d740:	28d0 2000 0000 0000 0000 0000 0000 0000     .(. ............

0800d750 <zero_status>:
	...
 800d760:	4f50 4953 0058 0000 0000 0000 0000 0000     POSIX...........
 800d770:	002e 0000 0000 0000 0000 0000 0000 0000     ................

0800d780 <_ctype_>:
 800d780:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
 800d790:	2020 2020 2020 2020 2020 2020 2020 2020                     
 800d7a0:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
 800d7b0:	0410 0404 0404 0404 0404 1004 1010 1010     ................
 800d7c0:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
 800d7d0:	0101 0101 0101 0101 0101 0101 1010 1010     ................
 800d7e0:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
 800d7f0:	0202 0202 0202 0202 0202 0202 1010 1010     ................
 800d800:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...
