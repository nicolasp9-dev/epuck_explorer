
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

080001a0 <Reset_Handler>:
 80001a0:	b672      	cpsid	i
 80001a2:	4821      	ldr	r0, [pc, #132]	; (8000228 <endfiniloop+0x6>)
 80001a4:	f380 8809 	msr	PSP, r0
 80001a8:	2002      	movs	r0, #2
 80001aa:	f380 8814 	msr	CONTROL, r0
 80001ae:	f3bf 8f6f 	isb	sy
 80001b2:	f005 fd1d 	bl	8005bf0 <__early_init>
 80001b6:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
 80001ba:	491c      	ldr	r1, [pc, #112]	; (800022c <endfiniloop+0xa>)
 80001bc:	4a1c      	ldr	r2, [pc, #112]	; (8000230 <endfiniloop+0xe>)

080001be <msloop>:
 80001be:	4291      	cmp	r1, r2
 80001c0:	bf3c      	itt	cc
 80001c2:	f841 0b04 	strcc.w	r0, [r1], #4
 80001c6:	e7fa      	bcc.n	80001be <msloop>
 80001c8:	491a      	ldr	r1, [pc, #104]	; (8000234 <endfiniloop+0x12>)
 80001ca:	4a17      	ldr	r2, [pc, #92]	; (8000228 <endfiniloop+0x6>)

080001cc <psloop>:
 80001cc:	4291      	cmp	r1, r2
 80001ce:	bf3c      	itt	cc
 80001d0:	f841 0b04 	strcc.w	r0, [r1], #4
 80001d4:	e7fa      	bcc.n	80001cc <psloop>
 80001d6:	4918      	ldr	r1, [pc, #96]	; (8000238 <endfiniloop+0x16>)
 80001d8:	4a18      	ldr	r2, [pc, #96]	; (800023c <endfiniloop+0x1a>)
 80001da:	4b19      	ldr	r3, [pc, #100]	; (8000240 <endfiniloop+0x1e>)

080001dc <dloop>:
 80001dc:	429a      	cmp	r2, r3
 80001de:	bf3e      	ittt	cc
 80001e0:	f851 0b04 	ldrcc.w	r0, [r1], #4
 80001e4:	f842 0b04 	strcc.w	r0, [r2], #4
 80001e8:	e7f8      	bcc.n	80001dc <dloop>
 80001ea:	2000      	movs	r0, #0
 80001ec:	4915      	ldr	r1, [pc, #84]	; (8000244 <endfiniloop+0x22>)
 80001ee:	4a16      	ldr	r2, [pc, #88]	; (8000248 <endfiniloop+0x26>)

080001f0 <bloop>:
 80001f0:	4291      	cmp	r1, r2
 80001f2:	bf3c      	itt	cc
 80001f4:	f841 0b04 	strcc.w	r0, [r1], #4
 80001f8:	e7fa      	bcc.n	80001f0 <bloop>
 80001fa:	f005 fd89 	bl	8005d10 <__late_init>
 80001fe:	4c13      	ldr	r4, [pc, #76]	; (800024c <endfiniloop+0x2a>)
 8000200:	4d13      	ldr	r5, [pc, #76]	; (8000250 <endfiniloop+0x2e>)

08000202 <initloop>:
 8000202:	42ac      	cmp	r4, r5
 8000204:	da03      	bge.n	800020e <endinitloop>
 8000206:	f854 1b04 	ldr.w	r1, [r4], #4
 800020a:	4788      	blx	r1
 800020c:	e7f9      	b.n	8000202 <initloop>

0800020e <endinitloop>:
 800020e:	f005 f917 	bl	8005440 <main>
 8000212:	4c10      	ldr	r4, [pc, #64]	; (8000254 <endfiniloop+0x32>)
 8000214:	4d10      	ldr	r5, [pc, #64]	; (8000258 <endfiniloop+0x36>)

08000216 <finiloop>:
 8000216:	42ac      	cmp	r4, r5
 8000218:	da03      	bge.n	8000222 <endfiniloop>
 800021a:	f854 1b04 	ldr.w	r1, [r4], #4
 800021e:	4788      	blx	r1
 8000220:	e7f9      	b.n	8000216 <finiloop>

08000222 <endfiniloop>:
 8000222:	f005 bd6d 	b.w	8005d00 <__default_exit>
 8000226:	0000      	.short	0x0000
 8000228:	20000800 	.word	0x20000800
 800022c:	20000000 	.word	0x20000000
 8000230:	20000400 	.word	0x20000400
 8000234:	20000400 	.word	0x20000400
 8000238:	08006a58 	.word	0x08006a58
 800023c:	20000800 	.word	0x20000800
 8000240:	200008b8 	.word	0x200008b8
 8000244:	200008b8 	.word	0x200008b8
 8000248:	200014c8 	.word	0x200014c8
 800024c:	080001a0 	.word	0x080001a0
 8000250:	080001a0 	.word	0x080001a0
 8000254:	080001a0 	.word	0x080001a0
 8000258:	080001a0 	.word	0x080001a0
 800025c:	00000000 	.word	0x00000000

08000260 <_port_switch>:
 8000260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000264:	f8c1 d00c 	str.w	sp, [r1, #12]
 8000268:	f8d0 d00c 	ldr.w	sp, [r0, #12]
 800026c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000270 <_port_thread_start>:
 8000270:	2300      	movs	r3, #0
 8000272:	f383 8811 	msr	BASEPRI, r3
 8000276:	4628      	mov	r0, r5
 8000278:	47a0      	blx	r4
 800027a:	2000      	movs	r0, #0
 800027c:	f005 fd08 	bl	8005c90 <chThdExit>

08000280 <_port_switch_from_isr>:
 8000280:	f005 fd36 	bl	8005cf0 <chSchDoReschedule>

08000284 <_port_exit_from_isr>:
 8000284:	df00      	svc	0
 8000286:	e7fe      	b.n	8000286 <_port_exit_from_isr+0x2>
	...

08000290 <chTMStartMeasurementX.constprop.56>:
 8000290:	4b01      	ldr	r3, [pc, #4]	; (8000298 <chTMStartMeasurementX.constprop.56+0x8>)
 8000292:	685b      	ldr	r3, [r3, #4]
 8000294:	6083      	str	r3, [r0, #8]
 8000296:	4770      	bx	lr
 8000298:	e0001000 	.word	0xe0001000
 800029c:	00000000 	.word	0x00000000

080002a0 <chEvtGetAndClearEvents.constprop.36>:
 80002a0:	2320      	movs	r3, #32
 80002a2:	f383 8811 	msr	BASEPRI, r3
 80002a6:	4b04      	ldr	r3, [pc, #16]	; (80002b8 <chEvtGetAndClearEvents.constprop.36+0x18>)
 80002a8:	699a      	ldr	r2, [r3, #24]
 80002aa:	2300      	movs	r3, #0
 80002ac:	6b50      	ldr	r0, [r2, #52]	; 0x34
 80002ae:	6353      	str	r3, [r2, #52]	; 0x34
 80002b0:	f383 8811 	msr	BASEPRI, r3
 80002b4:	4770      	bx	lr
 80002b6:	bf00      	nop
 80002b8:	20000938 	.word	0x20000938
 80002bc:	00000000 	.word	0x00000000

080002c0 <_pal_lld_setgroupmode.constprop.5>:
 80002c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80002c4:	2100      	movs	r1, #0
 80002c6:	2402      	movs	r4, #2
 80002c8:	2607      	movs	r6, #7
 80002ca:	250f      	movs	r5, #15
 80002cc:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 80002d0:	f04f 0c01 	mov.w	ip, #1
 80002d4:	2703      	movs	r7, #3
 80002d6:	e026      	b.n	8000326 <_pal_lld_setgroupmode.constprop.5+0x66>
 80002d8:	f8d2 8020 	ldr.w	r8, [r2, #32]
 80002dc:	ea03 0308 	and.w	r3, r3, r8
 80002e0:	ea43 030e 	orr.w	r3, r3, lr
 80002e4:	6213      	str	r3, [r2, #32]
 80002e6:	6853      	ldr	r3, [r2, #4]
 80002e8:	fa0c fe01 	lsl.w	lr, ip, r1
 80002ec:	ea23 030e 	bic.w	r3, r3, lr
 80002f0:	6053      	str	r3, [r2, #4]
 80002f2:	004b      	lsls	r3, r1, #1
 80002f4:	f8d2 e008 	ldr.w	lr, [r2, #8]
 80002f8:	fa07 f303 	lsl.w	r3, r7, r3
 80002fc:	43db      	mvns	r3, r3
 80002fe:	ea0e 0e03 	and.w	lr, lr, r3
 8000302:	f8c2 e008 	str.w	lr, [r2, #8]
 8000306:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 800030a:	ea03 0e0e 	and.w	lr, r3, lr
 800030e:	f8c2 e00c 	str.w	lr, [r2, #12]
 8000312:	f8d2 e000 	ldr.w	lr, [r2]
 8000316:	ea03 030e 	and.w	r3, r3, lr
 800031a:	4323      	orrs	r3, r4
 800031c:	6013      	str	r3, [r2, #0]
 800031e:	0840      	lsrs	r0, r0, #1
 8000320:	d018      	beq.n	8000354 <_pal_lld_setgroupmode.constprop.5+0x94>
 8000322:	00a4      	lsls	r4, r4, #2
 8000324:	3101      	adds	r1, #1
 8000326:	f001 0e07 	and.w	lr, r1, #7
 800032a:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800032e:	fa05 f30e 	lsl.w	r3, r5, lr
 8000332:	f010 0f01 	tst.w	r0, #1
 8000336:	fa06 fe0e 	lsl.w	lr, r6, lr
 800033a:	ea6f 0303 	mvn.w	r3, r3
 800033e:	d0ee      	beq.n	800031e <_pal_lld_setgroupmode.constprop.5+0x5e>
 8000340:	2907      	cmp	r1, #7
 8000342:	d9c9      	bls.n	80002d8 <_pal_lld_setgroupmode.constprop.5+0x18>
 8000344:	f8d2 8024 	ldr.w	r8, [r2, #36]	; 0x24
 8000348:	ea03 0308 	and.w	r3, r3, r8
 800034c:	ea43 030e 	orr.w	r3, r3, lr
 8000350:	6253      	str	r3, [r2, #36]	; 0x24
 8000352:	e7c8      	b.n	80002e6 <_pal_lld_setgroupmode.constprop.5+0x26>
 8000354:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08000360 <tmr>:
 8000360:	4b01      	ldr	r3, [pc, #4]	; (8000368 <tmr+0x8>)
 8000362:	2201      	movs	r2, #1
 8000364:	701a      	strb	r2, [r3, #0]
 8000366:	4770      	bx	lr
 8000368:	200011d0 	.word	0x200011d0
 800036c:	00000000 	.word	0x00000000

08000370 <_idle_thread>:
 8000370:	e7fe      	b.n	8000370 <_idle_thread>
 8000372:	bf00      	nop
	...

08000380 <chCoreAlloc>:
 8000380:	4603      	mov	r3, r0
 8000382:	2220      	movs	r2, #32
 8000384:	f382 8811 	msr	BASEPRI, r2
 8000388:	4908      	ldr	r1, [pc, #32]	; (80003ac <chCoreAlloc+0x2c>)
 800038a:	4a09      	ldr	r2, [pc, #36]	; (80003b0 <chCoreAlloc+0x30>)
 800038c:	6808      	ldr	r0, [r1, #0]
 800038e:	6812      	ldr	r2, [r2, #0]
 8000390:	3307      	adds	r3, #7
 8000392:	f023 0307 	bic.w	r3, r3, #7
 8000396:	1a12      	subs	r2, r2, r0
 8000398:	4293      	cmp	r3, r2
 800039a:	bf9a      	itte	ls
 800039c:	181b      	addls	r3, r3, r0
 800039e:	600b      	strls	r3, [r1, #0]
 80003a0:	2000      	movhi	r0, #0
 80003a2:	2300      	movs	r3, #0
 80003a4:	f383 8811 	msr	BASEPRI, r3
 80003a8:	4770      	bx	lr
 80003aa:	bf00      	nop
 80003ac:	20000b2c 	.word	0x20000b2c
 80003b0:	20000ab0 	.word	0x20000ab0
	...

080003c0 <notify1>:
 80003c0:	4a02      	ldr	r2, [pc, #8]	; (80003cc <notify1+0xc>)
 80003c2:	6813      	ldr	r3, [r2, #0]
 80003c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003c8:	6013      	str	r3, [r2, #0]
 80003ca:	4770      	bx	lr
 80003cc:	40013800 	.word	0x40013800

080003d0 <bmk12_setup>:
 80003d0:	4b02      	ldr	r3, [pc, #8]	; (80003dc <bmk12_setup+0xc>)
 80003d2:	2200      	movs	r2, #0
 80003d4:	e9c3 3300 	strd	r3, r3, [r3]
 80003d8:	609a      	str	r2, [r3, #8]
 80003da:	4770      	bx	lr
 80003dc:	20000b1c 	.word	0x20000b1c

080003e0 <bmk11_setup>:
 80003e0:	4b02      	ldr	r3, [pc, #8]	; (80003ec <bmk11_setup+0xc>)
 80003e2:	2201      	movs	r2, #1
 80003e4:	e9c3 3300 	strd	r3, r3, [r3]
 80003e8:	609a      	str	r2, [r3, #8]
 80003ea:	4770      	bx	lr
 80003ec:	20000b30 	.word	0x20000b30

080003f0 <notify>:
 80003f0:	4770      	bx	lr
 80003f2:	bf00      	nop
	...

08000400 <tmo>:
 8000400:	4770      	bx	lr
 8000402:	bf00      	nop
	...

08000410 <bmk7_setup>:
 8000410:	4b02      	ldr	r3, [pc, #8]	; (800041c <bmk7_setup+0xc>)
 8000412:	2200      	movs	r2, #0
 8000414:	e9c3 3300 	strd	r3, r3, [r3]
 8000418:	609a      	str	r2, [r3, #8]
 800041a:	4770      	bx	lr
 800041c:	20000b30 	.word	0x20000b30

08000420 <sys2_execute>:
 8000420:	2320      	movs	r3, #32
 8000422:	f383 8811 	msr	BASEPRI, r3
 8000426:	b662      	cpsie	i
 8000428:	b672      	cpsid	i
 800042a:	f383 8811 	msr	BASEPRI, r3
 800042e:	b662      	cpsie	i
 8000430:	2300      	movs	r3, #0
 8000432:	f383 8811 	msr	BASEPRI, r3
 8000436:	b662      	cpsie	i
 8000438:	4770      	bx	lr
 800043a:	bf00      	nop
 800043c:	0000      	movs	r0, r0
	...

08000440 <queues2_setup>:
 8000440:	b430      	push	{r4, r5}
 8000442:	4a08      	ldr	r2, [pc, #32]	; (8000464 <queues2_setup+0x24>)
 8000444:	4b08      	ldr	r3, [pc, #32]	; (8000468 <queues2_setup+0x28>)
 8000446:	4809      	ldr	r0, [pc, #36]	; (800046c <queues2_setup+0x2c>)
 8000448:	601b      	str	r3, [r3, #0]
 800044a:	1d15      	adds	r5, r2, #4
 800044c:	2404      	movs	r4, #4
 800044e:	2100      	movs	r1, #0
 8000450:	611d      	str	r5, [r3, #16]
 8000452:	609c      	str	r4, [r3, #8]
 8000454:	605b      	str	r3, [r3, #4]
 8000456:	60da      	str	r2, [r3, #12]
 8000458:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800045c:	e9c3 0107 	strd	r0, r1, [r3, #28]
 8000460:	bc30      	pop	{r4, r5}
 8000462:	4770      	bx	lr
 8000464:	20000b40 	.word	0x20000b40
 8000468:	20000888 	.word	0x20000888
 800046c:	080003f1 	.word	0x080003f1

08000470 <queues1_setup>:
 8000470:	4a08      	ldr	r2, [pc, #32]	; (8000494 <queues1_setup+0x24>)
 8000472:	4b09      	ldr	r3, [pc, #36]	; (8000498 <queues1_setup+0x28>)
 8000474:	4809      	ldr	r0, [pc, #36]	; (800049c <queues1_setup+0x2c>)
 8000476:	b410      	push	{r4}
 8000478:	2100      	movs	r1, #0
 800047a:	1d14      	adds	r4, r2, #4
 800047c:	611c      	str	r4, [r3, #16]
 800047e:	601b      	str	r3, [r3, #0]
 8000480:	605b      	str	r3, [r3, #4]
 8000482:	60da      	str	r2, [r3, #12]
 8000484:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8000488:	61d8      	str	r0, [r3, #28]
 800048a:	6099      	str	r1, [r3, #8]
 800048c:	6219      	str	r1, [r3, #32]
 800048e:	bc10      	pop	{r4}
 8000490:	4770      	bx	lr
 8000492:	bf00      	nop
 8000494:	20000b40 	.word	0x20000b40
 8000498:	20000810 	.word	0x20000810
 800049c:	080003f1 	.word	0x080003f1

080004a0 <dyn2_setup>:
 80004a0:	4b03      	ldr	r3, [pc, #12]	; (80004b0 <dyn2_setup+0x10>)
 80004a2:	2200      	movs	r2, #0
 80004a4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80004a8:	e9c3 2100 	strd	r2, r1, [r3]
 80004ac:	609a      	str	r2, [r3, #8]
 80004ae:	4770      	bx	lr
 80004b0:	20000b10 	.word	0x20000b10
	...

080004c0 <dyn1_setup>:
 80004c0:	4b08      	ldr	r3, [pc, #32]	; (80004e4 <dyn1_setup+0x24>)
 80004c2:	4909      	ldr	r1, [pc, #36]	; (80004e8 <dyn1_setup+0x28>)
 80004c4:	b410      	push	{r4}
 80004c6:	2200      	movs	r2, #0
 80004c8:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 80004cc:	f103 0010 	add.w	r0, r3, #16
 80004d0:	e9c1 2400 	strd	r2, r4, [r1]
 80004d4:	6099      	str	r1, [r3, #8]
 80004d6:	e9c3 0004 	strd	r0, r0, [r3, #16]
 80004da:	601a      	str	r2, [r3, #0]
 80004dc:	60da      	str	r2, [r3, #12]
 80004de:	619a      	str	r2, [r3, #24]
 80004e0:	bc10      	pop	{r4}
 80004e2:	4770      	bx	lr
 80004e4:	20000ab8 	.word	0x20000ab8
 80004e8:	20000b40 	.word	0x20000b40
 80004ec:	00000000 	.word	0x00000000

080004f0 <dyn3_setup>:
 80004f0:	f7ff bfe6 	b.w	80004c0 <dyn1_setup>
	...

08000500 <null_provider>:
 8000500:	2000      	movs	r0, #0
 8000502:	4770      	bx	lr
	...

08000510 <pools1_setup>:
 8000510:	4b03      	ldr	r3, [pc, #12]	; (8000520 <pools1_setup+0x10>)
 8000512:	2200      	movs	r2, #0
 8000514:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8000518:	e9c3 2100 	strd	r2, r1, [r3]
 800051c:	609a      	str	r2, [r3, #8]
 800051e:	4770      	bx	lr
 8000520:	2000087c 	.word	0x2000087c
	...

08000530 <heap1_setup>:
 8000530:	4b08      	ldr	r3, [pc, #32]	; (8000554 <heap1_setup+0x24>)
 8000532:	4909      	ldr	r1, [pc, #36]	; (8000558 <heap1_setup+0x28>)
 8000534:	b410      	push	{r4}
 8000536:	2200      	movs	r2, #0
 8000538:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 800053c:	f103 0010 	add.w	r0, r3, #16
 8000540:	e9c1 2400 	strd	r2, r4, [r1]
 8000544:	6099      	str	r1, [r3, #8]
 8000546:	e9c3 0004 	strd	r0, r0, [r3, #16]
 800054a:	601a      	str	r2, [r3, #0]
 800054c:	60da      	str	r2, [r3, #12]
 800054e:	619a      	str	r2, [r3, #24]
 8000550:	bc10      	pop	{r4}
 8000552:	4770      	bx	lr
 8000554:	200011b0 	.word	0x200011b0
 8000558:	20000b40 	.word	0x20000b40
 800055c:	00000000 	.word	0x00000000

08000560 <evt1_setup>:
 8000560:	f7ff be9e 	b.w	80002a0 <chEvtGetAndClearEvents.constprop.36>
	...

08000570 <evt3_setup>:
 8000570:	f7ff bff6 	b.w	8000560 <evt1_setup>
	...

08000580 <evt2_setup>:
 8000580:	f7ff bfee 	b.w	8000560 <evt1_setup>
	...

08000590 <mbox1_setup>:
 8000590:	b430      	push	{r4, r5}
 8000592:	4b0b      	ldr	r3, [pc, #44]	; (80005c0 <mbox1_setup+0x30>)
 8000594:	4a0b      	ldr	r2, [pc, #44]	; (80005c4 <mbox1_setup+0x34>)
 8000596:	601a      	str	r2, [r3, #0]
 8000598:	f102 0514 	add.w	r5, r2, #20
 800059c:	2405      	movs	r4, #5
 800059e:	f103 011c 	add.w	r1, r3, #28
 80005a2:	2000      	movs	r0, #0
 80005a4:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80005a8:	f103 0210 	add.w	r2, r3, #16
 80005ac:	605d      	str	r5, [r3, #4]
 80005ae:	625c      	str	r4, [r3, #36]	; 0x24
 80005b0:	e9c3 0106 	strd	r0, r1, [r3, #24]
 80005b4:	6219      	str	r1, [r3, #32]
 80005b6:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80005ba:	bc30      	pop	{r4, r5}
 80005bc:	4770      	bx	lr
 80005be:	bf00      	nop
 80005c0:	20000854 	.word	0x20000854
 80005c4:	20000b40 	.word	0x20000b40
	...

080005d0 <mtx8_setup>:
 80005d0:	4906      	ldr	r1, [pc, #24]	; (80005ec <mtx8_setup+0x1c>)
 80005d2:	4a07      	ldr	r2, [pc, #28]	; (80005f0 <mtx8_setup+0x20>)
 80005d4:	4b07      	ldr	r3, [pc, #28]	; (80005f4 <mtx8_setup+0x24>)
 80005d6:	6009      	str	r1, [r1, #0]
 80005d8:	2000      	movs	r0, #0
 80005da:	6049      	str	r1, [r1, #4]
 80005dc:	e9c2 2200 	strd	r2, r2, [r2]
 80005e0:	6090      	str	r0, [r2, #8]
 80005e2:	6098      	str	r0, [r3, #8]
 80005e4:	e9c3 3300 	strd	r3, r3, [r3]
 80005e8:	4770      	bx	lr
 80005ea:	bf00      	nop
 80005ec:	20000800 	.word	0x20000800
 80005f0:	20000834 	.word	0x20000834
 80005f4:	20000844 	.word	0x20000844
	...

08000600 <mtx6_setup>:
 8000600:	4a04      	ldr	r2, [pc, #16]	; (8000614 <mtx6_setup+0x14>)
 8000602:	4b05      	ldr	r3, [pc, #20]	; (8000618 <mtx6_setup+0x18>)
 8000604:	6012      	str	r2, [r2, #0]
 8000606:	2100      	movs	r1, #0
 8000608:	6052      	str	r2, [r2, #4]
 800060a:	e9c3 3300 	strd	r3, r3, [r3]
 800060e:	6099      	str	r1, [r3, #8]
 8000610:	4770      	bx	lr
 8000612:	bf00      	nop
 8000614:	20000800 	.word	0x20000800
 8000618:	20000834 	.word	0x20000834
 800061c:	00000000 	.word	0x00000000

08000620 <mtx7_setup>:
 8000620:	f7ff bfee 	b.w	8000600 <mtx6_setup>
	...

08000630 <mtx4_setup>:
 8000630:	4a04      	ldr	r2, [pc, #16]	; (8000644 <mtx4_setup+0x14>)
 8000632:	4b05      	ldr	r3, [pc, #20]	; (8000648 <mtx4_setup+0x18>)
 8000634:	6012      	str	r2, [r2, #0]
 8000636:	2100      	movs	r1, #0
 8000638:	e9c2 2101 	strd	r2, r1, [r2, #4]
 800063c:	6099      	str	r1, [r3, #8]
 800063e:	e9c3 3300 	strd	r3, r3, [r3]
 8000642:	4770      	bx	lr
 8000644:	20000834 	.word	0x20000834
 8000648:	20000844 	.word	0x20000844
 800064c:	00000000 	.word	0x00000000

08000650 <mtx1_setup>:
 8000650:	4b02      	ldr	r3, [pc, #8]	; (800065c <mtx1_setup+0xc>)
 8000652:	2200      	movs	r2, #0
 8000654:	e9c3 3300 	strd	r3, r3, [r3]
 8000658:	609a      	str	r2, [r3, #8]
 800065a:	4770      	bx	lr
 800065c:	20000834 	.word	0x20000834

08000660 <mtx5_setup>:
 8000660:	f7ff bff6 	b.w	8000650 <mtx1_setup>
	...

08000670 <sem1_setup>:
 8000670:	4b02      	ldr	r3, [pc, #8]	; (800067c <sem1_setup+0xc>)
 8000672:	2200      	movs	r2, #0
 8000674:	e9c3 3300 	strd	r3, r3, [r3]
 8000678:	609a      	str	r2, [r3, #8]
 800067a:	4770      	bx	lr
 800067c:	200008ac 	.word	0x200008ac

08000680 <sem3_setup>:
 8000680:	f7ff bff6 	b.w	8000670 <sem1_setup>
	...

08000690 <sem2_setup>:
 8000690:	f7ff bfee 	b.w	8000670 <sem1_setup>
	...

080006a0 <test_printn.part.1>:
 80006a0:	b320      	cbz	r0, 80006ec <test_printn.part.1+0x4c>
 80006a2:	b570      	push	{r4, r5, r6, lr}
 80006a4:	b084      	sub	sp, #16
 80006a6:	466d      	mov	r5, sp
 80006a8:	462c      	mov	r4, r5
 80006aa:	4e11      	ldr	r6, [pc, #68]	; (80006f0 <test_printn.part.1+0x50>)
 80006ac:	e000      	b.n	80006b0 <test_printn.part.1+0x10>
 80006ae:	4614      	mov	r4, r2
 80006b0:	fba6 2300 	umull	r2, r3, r6, r0
 80006b4:	08db      	lsrs	r3, r3, #3
 80006b6:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 80006ba:	eba0 0041 	sub.w	r0, r0, r1, lsl #1
 80006be:	f100 0130 	add.w	r1, r0, #48	; 0x30
 80006c2:	4622      	mov	r2, r4
 80006c4:	b2c9      	uxtb	r1, r1
 80006c6:	f802 1b01 	strb.w	r1, [r2], #1
 80006ca:	4618      	mov	r0, r3
 80006cc:	2b00      	cmp	r3, #0
 80006ce:	d1ee      	bne.n	80006ae <test_printn.part.1+0xe>
 80006d0:	42aa      	cmp	r2, r5
 80006d2:	d909      	bls.n	80006e8 <test_printn.part.1+0x48>
 80006d4:	4e07      	ldr	r6, [pc, #28]	; (80006f4 <test_printn.part.1+0x54>)
 80006d6:	e001      	b.n	80006dc <test_printn.part.1+0x3c>
 80006d8:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
 80006dc:	6830      	ldr	r0, [r6, #0]
 80006de:	6803      	ldr	r3, [r0, #0]
 80006e0:	689b      	ldr	r3, [r3, #8]
 80006e2:	4798      	blx	r3
 80006e4:	42a5      	cmp	r5, r4
 80006e6:	d1f7      	bne.n	80006d8 <test_printn.part.1+0x38>
 80006e8:	b004      	add	sp, #16
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	4770      	bx	lr
 80006ee:	bf00      	nop
 80006f0:	cccccccd 	.word	0xcccccccd
 80006f4:	20000a88 	.word	0x20000a88
	...

08000700 <test_printn>:
 8000700:	b928      	cbnz	r0, 800070e <test_printn+0xe>
 8000702:	4b04      	ldr	r3, [pc, #16]	; (8000714 <test_printn+0x14>)
 8000704:	6818      	ldr	r0, [r3, #0]
 8000706:	6803      	ldr	r3, [r0, #0]
 8000708:	2130      	movs	r1, #48	; 0x30
 800070a:	689b      	ldr	r3, [r3, #8]
 800070c:	4718      	bx	r3
 800070e:	f7ff bfc7 	b.w	80006a0 <test_printn.part.1>
 8000712:	bf00      	nop
 8000714:	20000a88 	.word	0x20000a88
	...

08000720 <print_line>:
 8000720:	b570      	push	{r4, r5, r6, lr}
 8000722:	4d08      	ldr	r5, [pc, #32]	; (8000744 <print_line+0x24>)
 8000724:	244c      	movs	r4, #76	; 0x4c
 8000726:	6828      	ldr	r0, [r5, #0]
 8000728:	6803      	ldr	r3, [r0, #0]
 800072a:	212d      	movs	r1, #45	; 0x2d
 800072c:	689b      	ldr	r3, [r3, #8]
 800072e:	4798      	blx	r3
 8000730:	3c01      	subs	r4, #1
 8000732:	d1f8      	bne.n	8000726 <print_line+0x6>
 8000734:	6828      	ldr	r0, [r5, #0]
 8000736:	4904      	ldr	r1, [pc, #16]	; (8000748 <print_line+0x28>)
 8000738:	6803      	ldr	r3, [r0, #0]
 800073a:	2202      	movs	r2, #2
 800073c:	681b      	ldr	r3, [r3, #0]
 800073e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000742:	4718      	bx	r3
 8000744:	20000a88 	.word	0x20000a88
 8000748:	08006290 	.word	0x08006290
 800074c:	00000000 	.word	0x00000000

08000750 <test_terminate_threads>:
 8000750:	4b0a      	ldr	r3, [pc, #40]	; (800077c <test_terminate_threads+0x2c>)
 8000752:	b430      	push	{r4, r5}
 8000754:	f103 0014 	add.w	r0, r3, #20
 8000758:	2520      	movs	r5, #32
 800075a:	2400      	movs	r4, #0
 800075c:	f853 2b04 	ldr.w	r2, [r3], #4
 8000760:	b13a      	cbz	r2, 8000772 <test_terminate_threads+0x22>
 8000762:	f385 8811 	msr	BASEPRI, r5
 8000766:	7f51      	ldrb	r1, [r2, #29]
 8000768:	f041 0104 	orr.w	r1, r1, #4
 800076c:	7751      	strb	r1, [r2, #29]
 800076e:	f384 8811 	msr	BASEPRI, r4
 8000772:	4283      	cmp	r3, r0
 8000774:	d1f2      	bne.n	800075c <test_terminate_threads+0xc>
 8000776:	bc30      	pop	{r4, r5}
 8000778:	4770      	bx	lr
 800077a:	bf00      	nop
 800077c:	200011d4 	.word	0x200011d4

08000780 <_test_assert_time_window>:
 8000780:	b410      	push	{r4}
 8000782:	2320      	movs	r3, #32
 8000784:	f383 8811 	msr	BASEPRI, r3
 8000788:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 800078c:	2300      	movs	r3, #0
 800078e:	6a64      	ldr	r4, [r4, #36]	; 0x24
 8000790:	f383 8811 	msr	BASEPRI, r3
 8000794:	1a64      	subs	r4, r4, r1
 8000796:	1a52      	subs	r2, r2, r1
 8000798:	4294      	cmp	r4, r2
 800079a:	d306      	bcc.n	80007aa <_test_assert_time_window+0x2a>
 800079c:	4c04      	ldr	r4, [pc, #16]	; (80007b0 <_test_assert_time_window+0x30>)
 800079e:	4905      	ldr	r1, [pc, #20]	; (80007b4 <_test_assert_time_window+0x34>)
 80007a0:	4a05      	ldr	r2, [pc, #20]	; (80007b8 <_test_assert_time_window+0x38>)
 80007a2:	2301      	movs	r3, #1
 80007a4:	7023      	strb	r3, [r4, #0]
 80007a6:	700b      	strb	r3, [r1, #0]
 80007a8:	6010      	str	r0, [r2, #0]
 80007aa:	4618      	mov	r0, r3
 80007ac:	bc10      	pop	{r4}
 80007ae:	4770      	bx	lr
 80007b0:	200011a8 	.word	0x200011a8
 80007b4:	20000b0c 	.word	0x20000b0c
 80007b8:	20000ab4 	.word	0x20000ab4
 80007bc:	00000000 	.word	0x00000000

080007c0 <_test_assert_sequence>:
 80007c0:	b4f0      	push	{r4, r5, r6, r7}
 80007c2:	4e0e      	ldr	r6, [pc, #56]	; (80007fc <_test_assert_sequence+0x3c>)
 80007c4:	4f0e      	ldr	r7, [pc, #56]	; (8000800 <_test_assert_sequence+0x40>)
 80007c6:	6835      	ldr	r5, [r6, #0]
 80007c8:	3901      	subs	r1, #1
 80007ca:	463b      	mov	r3, r7
 80007cc:	e003      	b.n	80007d6 <_test_assert_sequence+0x16>
 80007ce:	f813 4b01 	ldrb.w	r4, [r3], #1
 80007d2:	4294      	cmp	r4, r2
 80007d4:	d108      	bne.n	80007e8 <_test_assert_sequence+0x28>
 80007d6:	429d      	cmp	r5, r3
 80007d8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80007dc:	d8f7      	bhi.n	80007ce <_test_assert_sequence+0xe>
 80007de:	b91a      	cbnz	r2, 80007e8 <_test_assert_sequence+0x28>
 80007e0:	6037      	str	r7, [r6, #0]
 80007e2:	4610      	mov	r0, r2
 80007e4:	bcf0      	pop	{r4, r5, r6, r7}
 80007e6:	4770      	bx	lr
 80007e8:	4c06      	ldr	r4, [pc, #24]	; (8000804 <_test_assert_sequence+0x44>)
 80007ea:	4907      	ldr	r1, [pc, #28]	; (8000808 <_test_assert_sequence+0x48>)
 80007ec:	4b07      	ldr	r3, [pc, #28]	; (800080c <_test_assert_sequence+0x4c>)
 80007ee:	2201      	movs	r2, #1
 80007f0:	7022      	strb	r2, [r4, #0]
 80007f2:	6018      	str	r0, [r3, #0]
 80007f4:	700a      	strb	r2, [r1, #0]
 80007f6:	4610      	mov	r0, r2
 80007f8:	bcf0      	pop	{r4, r5, r6, r7}
 80007fa:	4770      	bx	lr
 80007fc:	200011f8 	.word	0x200011f8
 8000800:	200011e8 	.word	0x200011e8
 8000804:	200011a8 	.word	0x200011a8
 8000808:	20000b0c 	.word	0x20000b0c
 800080c:	20000ab4 	.word	0x20000ab4

08000810 <_test_assert>:
 8000810:	b951      	cbnz	r1, 8000828 <_test_assert+0x18>
 8000812:	b410      	push	{r4}
 8000814:	4906      	ldr	r1, [pc, #24]	; (8000830 <_test_assert+0x20>)
 8000816:	4c07      	ldr	r4, [pc, #28]	; (8000834 <_test_assert+0x24>)
 8000818:	4a07      	ldr	r2, [pc, #28]	; (8000838 <_test_assert+0x28>)
 800081a:	2301      	movs	r3, #1
 800081c:	7023      	strb	r3, [r4, #0]
 800081e:	6010      	str	r0, [r2, #0]
 8000820:	700b      	strb	r3, [r1, #0]
 8000822:	4618      	mov	r0, r3
 8000824:	bc10      	pop	{r4}
 8000826:	4770      	bx	lr
 8000828:	2300      	movs	r3, #0
 800082a:	4618      	mov	r0, r3
 800082c:	4770      	bx	lr
 800082e:	bf00      	nop
 8000830:	20000b0c 	.word	0x20000b0c
 8000834:	200011a8 	.word	0x200011a8
 8000838:	20000ab4 	.word	0x20000ab4
 800083c:	00000000 	.word	0x00000000

08000840 <test_emit_token>:
 8000840:	2320      	movs	r3, #32
 8000842:	f383 8811 	msr	BASEPRI, r3
 8000846:	4b04      	ldr	r3, [pc, #16]	; (8000858 <test_emit_token+0x18>)
 8000848:	681a      	ldr	r2, [r3, #0]
 800084a:	1c51      	adds	r1, r2, #1
 800084c:	6019      	str	r1, [r3, #0]
 800084e:	7010      	strb	r0, [r2, #0]
 8000850:	2300      	movs	r3, #0
 8000852:	f383 8811 	msr	BASEPRI, r3
 8000856:	4770      	bx	lr
 8000858:	200011f8 	.word	0x200011f8
 800085c:	00000000 	.word	0x00000000

08000860 <h3>:
 8000860:	2043      	movs	r0, #67	; 0x43
 8000862:	f7ff bfed 	b.w	8000840 <test_emit_token>
 8000866:	bf00      	nop
	...

08000870 <h2>:
 8000870:	2042      	movs	r0, #66	; 0x42
 8000872:	f7ff bfe5 	b.w	8000840 <test_emit_token>
 8000876:	bf00      	nop
	...

08000880 <h1>:
 8000880:	2041      	movs	r0, #65	; 0x41
 8000882:	f7ff bfdd 	b.w	8000840 <test_emit_token>
 8000886:	bf00      	nop
	...

08000890 <thread.lto_priv.59>:
 8000890:	7800      	ldrb	r0, [r0, #0]
 8000892:	f7ff bfd5 	b.w	8000840 <test_emit_token>
 8000896:	bf00      	nop
	...

080008a0 <thread.lto_priv.61>:
 80008a0:	f7ff bff6 	b.w	8000890 <thread.lto_priv.59>
	...

080008b0 <test_println>:
 80008b0:	b570      	push	{r4, r5, r6, lr}
 80008b2:	7801      	ldrb	r1, [r0, #0]
 80008b4:	b189      	cbz	r1, 80008da <test_println+0x2a>
 80008b6:	4d0a      	ldr	r5, [pc, #40]	; (80008e0 <test_println+0x30>)
 80008b8:	4604      	mov	r4, r0
 80008ba:	6828      	ldr	r0, [r5, #0]
 80008bc:	6803      	ldr	r3, [r0, #0]
 80008be:	689b      	ldr	r3, [r3, #8]
 80008c0:	4798      	blx	r3
 80008c2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80008c6:	2900      	cmp	r1, #0
 80008c8:	d1f7      	bne.n	80008ba <test_println+0xa>
 80008ca:	6828      	ldr	r0, [r5, #0]
 80008cc:	4905      	ldr	r1, [pc, #20]	; (80008e4 <test_println+0x34>)
 80008ce:	6803      	ldr	r3, [r0, #0]
 80008d0:	2202      	movs	r2, #2
 80008d2:	681b      	ldr	r3, [r3, #0]
 80008d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80008d8:	4718      	bx	r3
 80008da:	4d01      	ldr	r5, [pc, #4]	; (80008e0 <test_println+0x30>)
 80008dc:	e7f5      	b.n	80008ca <test_println+0x1a>
 80008de:	bf00      	nop
 80008e0:	20000a88 	.word	0x20000a88
 80008e4:	08006290 	.word	0x08006290
	...

080008f0 <test_print>:
 80008f0:	7801      	ldrb	r1, [r0, #0]
 80008f2:	b159      	cbz	r1, 800090c <test_print+0x1c>
 80008f4:	b538      	push	{r3, r4, r5, lr}
 80008f6:	4d06      	ldr	r5, [pc, #24]	; (8000910 <test_print+0x20>)
 80008f8:	4604      	mov	r4, r0
 80008fa:	6828      	ldr	r0, [r5, #0]
 80008fc:	6803      	ldr	r3, [r0, #0]
 80008fe:	689b      	ldr	r3, [r3, #8]
 8000900:	4798      	blx	r3
 8000902:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000906:	2900      	cmp	r1, #0
 8000908:	d1f7      	bne.n	80008fa <test_print+0xa>
 800090a:	bd38      	pop	{r3, r4, r5, pc}
 800090c:	4770      	bx	lr
 800090e:	bf00      	nop
 8000910:	20000a88 	.word	0x20000a88
	...

08000920 <_port_irq_epilogue>:
 8000920:	2320      	movs	r3, #32
 8000922:	f383 8811 	msr	BASEPRI, r3
 8000926:	4b11      	ldr	r3, [pc, #68]	; (800096c <_port_irq_epilogue+0x4c>)
 8000928:	685b      	ldr	r3, [r3, #4]
 800092a:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 800092e:	d102      	bne.n	8000936 <_port_irq_epilogue+0x16>
 8000930:	f383 8811 	msr	BASEPRI, r3
 8000934:	4770      	bx	lr
 8000936:	b480      	push	{r7}
 8000938:	af00      	add	r7, sp, #0
 800093a:	f3ef 8309 	mrs	r3, PSP
 800093e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000942:	f843 2c04 	str.w	r2, [r3, #-4]
 8000946:	f1a3 0220 	sub.w	r2, r3, #32
 800094a:	f382 8809 	msr	PSP, r2
 800094e:	4a08      	ldr	r2, [pc, #32]	; (8000970 <_port_irq_epilogue+0x50>)
 8000950:	6811      	ldr	r1, [r2, #0]
 8000952:	6992      	ldr	r2, [r2, #24]
 8000954:	6889      	ldr	r1, [r1, #8]
 8000956:	6892      	ldr	r2, [r2, #8]
 8000958:	4291      	cmp	r1, r2
 800095a:	bf8c      	ite	hi
 800095c:	4a05      	ldrhi	r2, [pc, #20]	; (8000974 <_port_irq_epilogue+0x54>)
 800095e:	4a06      	ldrls	r2, [pc, #24]	; (8000978 <_port_irq_epilogue+0x58>)
 8000960:	f843 2c08 	str.w	r2, [r3, #-8]
 8000964:	46bd      	mov	sp, r7
 8000966:	bc80      	pop	{r7}
 8000968:	4770      	bx	lr
 800096a:	bf00      	nop
 800096c:	e000ed00 	.word	0xe000ed00
 8000970:	20000938 	.word	0x20000938
 8000974:	08000281 	.word	0x08000281
 8000978:	08000284 	.word	0x08000284
 800097c:	00000000 	.word	0x00000000

08000980 <VectorB0>:
 8000980:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000984:	f04f 4680 	mov.w	r6, #1073741824	; 0x40000000
 8000988:	6933      	ldr	r3, [r6, #16]
 800098a:	079b      	lsls	r3, r3, #30
 800098c:	d403      	bmi.n	8000996 <VectorB0+0x16>
 800098e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000992:	f7ff bfc5 	b.w	8000920 <_port_irq_epilogue>
 8000996:	2500      	movs	r5, #0
 8000998:	6135      	str	r5, [r6, #16]
 800099a:	2720      	movs	r7, #32
 800099c:	f387 8811 	msr	BASEPRI, r7
 80009a0:	4c1b      	ldr	r4, [pc, #108]	; (8000a10 <VectorB0+0x90>)
 80009a2:	6a71      	ldr	r1, [r6, #36]	; 0x24
 80009a4:	69e3      	ldr	r3, [r4, #28]
 80009a6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80009a8:	f8d3 c008 	ldr.w	ip, [r3, #8]
 80009ac:	1a88      	subs	r0, r1, r2
 80009ae:	4560      	cmp	r0, ip
 80009b0:	f104 081c 	add.w	r8, r4, #28
 80009b4:	d319      	bcc.n	80009ea <VectorB0+0x6a>
 80009b6:	6819      	ldr	r1, [r3, #0]
 80009b8:	f8d3 900c 	ldr.w	r9, [r3, #12]
 80009bc:	4462      	add	r2, ip
 80009be:	4541      	cmp	r1, r8
 80009c0:	62a2      	str	r2, [r4, #40]	; 0x28
 80009c2:	f8c1 8004 	str.w	r8, [r1, #4]
 80009c6:	61e1      	str	r1, [r4, #28]
 80009c8:	60dd      	str	r5, [r3, #12]
 80009ca:	bf08      	it	eq
 80009cc:	60f5      	streq	r5, [r6, #12]
 80009ce:	f385 8811 	msr	BASEPRI, r5
 80009d2:	6918      	ldr	r0, [r3, #16]
 80009d4:	47c8      	blx	r9
 80009d6:	f387 8811 	msr	BASEPRI, r7
 80009da:	69e3      	ldr	r3, [r4, #28]
 80009dc:	6a71      	ldr	r1, [r6, #36]	; 0x24
 80009de:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80009e0:	f8d3 c008 	ldr.w	ip, [r3, #8]
 80009e4:	1a88      	subs	r0, r1, r2
 80009e6:	4584      	cmp	ip, r0
 80009e8:	d9e5      	bls.n	80009b6 <VectorB0+0x36>
 80009ea:	4543      	cmp	r3, r8
 80009ec:	d008      	beq.n	8000a00 <VectorB0+0x80>
 80009ee:	4462      	add	r2, ip
 80009f0:	1a52      	subs	r2, r2, r1
 80009f2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80009f6:	2a02      	cmp	r2, #2
 80009f8:	bf2c      	ite	cs
 80009fa:	188a      	addcs	r2, r1, r2
 80009fc:	1c8a      	addcc	r2, r1, #2
 80009fe:	635a      	str	r2, [r3, #52]	; 0x34
 8000a00:	2300      	movs	r3, #0
 8000a02:	f383 8811 	msr	BASEPRI, r3
 8000a06:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a0a:	f7ff bf89 	b.w	8000920 <_port_irq_epilogue>
 8000a0e:	bf00      	nop
 8000a10:	20000938 	.word	0x20000938
	...

08000a20 <SVC_Handler>:
 8000a20:	b480      	push	{r7}
 8000a22:	af00      	add	r7, sp, #0
 8000a24:	f3ef 8309 	mrs	r3, PSP
 8000a28:	3320      	adds	r3, #32
 8000a2a:	f383 8809 	msr	PSP, r3
 8000a2e:	2300      	movs	r3, #0
 8000a30:	f383 8811 	msr	BASEPRI, r3
 8000a34:	46bd      	mov	sp, r7
 8000a36:	bc80      	pop	{r7}
 8000a38:	4770      	bx	lr
 8000a3a:	bf00      	nop
 8000a3c:	0000      	movs	r0, r0
	...

08000a40 <chPoolAlloc>:
 8000a40:	b508      	push	{r3, lr}
 8000a42:	2220      	movs	r2, #32
 8000a44:	4603      	mov	r3, r0
 8000a46:	f382 8811 	msr	BASEPRI, r2
 8000a4a:	6800      	ldr	r0, [r0, #0]
 8000a4c:	b128      	cbz	r0, 8000a5a <chPoolAlloc+0x1a>
 8000a4e:	6802      	ldr	r2, [r0, #0]
 8000a50:	601a      	str	r2, [r3, #0]
 8000a52:	2300      	movs	r3, #0
 8000a54:	f383 8811 	msr	BASEPRI, r3
 8000a58:	bd08      	pop	{r3, pc}
 8000a5a:	689a      	ldr	r2, [r3, #8]
 8000a5c:	2a00      	cmp	r2, #0
 8000a5e:	d0f8      	beq.n	8000a52 <chPoolAlloc+0x12>
 8000a60:	6858      	ldr	r0, [r3, #4]
 8000a62:	4790      	blx	r2
 8000a64:	2300      	movs	r3, #0
 8000a66:	f383 8811 	msr	BASEPRI, r3
 8000a6a:	bd08      	pop	{r3, pc}
 8000a6c:	0000      	movs	r0, r0
	...

08000a70 <pools1_execute>:
 8000a70:	b570      	push	{r4, r5, r6, lr}
 8000a72:	4b31      	ldr	r3, [pc, #196]	; (8000b38 <pools1_execute+0xc8>)
 8000a74:	4c31      	ldr	r4, [pc, #196]	; (8000b3c <pools1_execute+0xcc>)
 8000a76:	2205      	movs	r2, #5
 8000a78:	2520      	movs	r5, #32
 8000a7a:	2000      	movs	r0, #0
 8000a7c:	f385 8811 	msr	BASEPRI, r5
 8000a80:	6821      	ldr	r1, [r4, #0]
 8000a82:	6019      	str	r1, [r3, #0]
 8000a84:	6023      	str	r3, [r4, #0]
 8000a86:	f380 8811 	msr	BASEPRI, r0
 8000a8a:	6861      	ldr	r1, [r4, #4]
 8000a8c:	3a01      	subs	r2, #1
 8000a8e:	440b      	add	r3, r1
 8000a90:	d1f4      	bne.n	8000a7c <pools1_execute+0xc>
 8000a92:	4e2a      	ldr	r6, [pc, #168]	; (8000b3c <pools1_execute+0xcc>)
 8000a94:	2505      	movs	r5, #5
 8000a96:	4630      	mov	r0, r6
 8000a98:	f7ff ffd2 	bl	8000a40 <chPoolAlloc>
 8000a9c:	1c01      	adds	r1, r0, #0
 8000a9e:	bf18      	it	ne
 8000aa0:	2101      	movne	r1, #1
 8000aa2:	2001      	movs	r0, #1
 8000aa4:	f7ff feb4 	bl	8000810 <_test_assert>
 8000aa8:	bba0      	cbnz	r0, 8000b14 <pools1_execute+0xa4>
 8000aaa:	3d01      	subs	r5, #1
 8000aac:	d1f3      	bne.n	8000a96 <pools1_execute+0x26>
 8000aae:	4823      	ldr	r0, [pc, #140]	; (8000b3c <pools1_execute+0xcc>)
 8000ab0:	f7ff ffc6 	bl	8000a40 <chPoolAlloc>
 8000ab4:	fab0 f180 	clz	r1, r0
 8000ab8:	0949      	lsrs	r1, r1, #5
 8000aba:	2002      	movs	r0, #2
 8000abc:	f7ff fea8 	bl	8000810 <_test_assert>
 8000ac0:	bb40      	cbnz	r0, 8000b14 <pools1_execute+0xa4>
 8000ac2:	4a1f      	ldr	r2, [pc, #124]	; (8000b40 <pools1_execute+0xd0>)
 8000ac4:	4b1c      	ldr	r3, [pc, #112]	; (8000b38 <pools1_execute+0xc8>)
 8000ac6:	f102 0610 	add.w	r6, r2, #16
 8000aca:	2020      	movs	r0, #32
 8000acc:	f380 8811 	msr	BASEPRI, r0
 8000ad0:	6821      	ldr	r1, [r4, #0]
 8000ad2:	6019      	str	r1, [r3, #0]
 8000ad4:	6023      	str	r3, [r4, #0]
 8000ad6:	f385 8811 	msr	BASEPRI, r5
 8000ada:	4296      	cmp	r6, r2
 8000adc:	d002      	beq.n	8000ae4 <pools1_execute+0x74>
 8000ade:	f852 3b04 	ldr.w	r3, [r2], #4
 8000ae2:	e7f3      	b.n	8000acc <pools1_execute+0x5c>
 8000ae4:	4e15      	ldr	r6, [pc, #84]	; (8000b3c <pools1_execute+0xcc>)
 8000ae6:	2505      	movs	r5, #5
 8000ae8:	4630      	mov	r0, r6
 8000aea:	f7ff ffa9 	bl	8000a40 <chPoolAlloc>
 8000aee:	1c01      	adds	r1, r0, #0
 8000af0:	bf18      	it	ne
 8000af2:	2101      	movne	r1, #1
 8000af4:	2003      	movs	r0, #3
 8000af6:	f7ff fe8b 	bl	8000810 <_test_assert>
 8000afa:	b958      	cbnz	r0, 8000b14 <pools1_execute+0xa4>
 8000afc:	3d01      	subs	r5, #1
 8000afe:	d1f3      	bne.n	8000ae8 <pools1_execute+0x78>
 8000b00:	480e      	ldr	r0, [pc, #56]	; (8000b3c <pools1_execute+0xcc>)
 8000b02:	f7ff ff9d 	bl	8000a40 <chPoolAlloc>
 8000b06:	fab0 f180 	clz	r1, r0
 8000b0a:	0949      	lsrs	r1, r1, #5
 8000b0c:	2004      	movs	r0, #4
 8000b0e:	f7ff fe7f 	bl	8000810 <_test_assert>
 8000b12:	b100      	cbz	r0, 8000b16 <pools1_execute+0xa6>
 8000b14:	bd70      	pop	{r4, r5, r6, pc}
 8000b16:	2210      	movs	r2, #16
 8000b18:	4b0a      	ldr	r3, [pc, #40]	; (8000b44 <pools1_execute+0xd4>)
 8000b1a:	4808      	ldr	r0, [pc, #32]	; (8000b3c <pools1_execute+0xcc>)
 8000b1c:	60a3      	str	r3, [r4, #8]
 8000b1e:	e9c4 5200 	strd	r5, r2, [r4]
 8000b22:	f7ff ff8d 	bl	8000a40 <chPoolAlloc>
 8000b26:	fab0 f180 	clz	r1, r0
 8000b2a:	0949      	lsrs	r1, r1, #5
 8000b2c:	2005      	movs	r0, #5
 8000b2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000b32:	f7ff be6d 	b.w	8000810 <_test_assert>
 8000b36:	bf00      	nop
 8000b38:	20000b40 	.word	0x20000b40
 8000b3c:	2000087c 	.word	0x2000087c
 8000b40:	08006a44 	.word	0x08006a44
 8000b44:	08000501 	.word	0x08000501
	...

08000b50 <chEvtUnregister>:
 8000b50:	2320      	movs	r3, #32
 8000b52:	f383 8811 	msr	BASEPRI, r3
 8000b56:	4602      	mov	r2, r0
 8000b58:	e002      	b.n	8000b60 <chEvtUnregister+0x10>
 8000b5a:	428b      	cmp	r3, r1
 8000b5c:	d007      	beq.n	8000b6e <chEvtUnregister+0x1e>
 8000b5e:	461a      	mov	r2, r3
 8000b60:	6813      	ldr	r3, [r2, #0]
 8000b62:	4283      	cmp	r3, r0
 8000b64:	d1f9      	bne.n	8000b5a <chEvtUnregister+0xa>
 8000b66:	2300      	movs	r3, #0
 8000b68:	f383 8811 	msr	BASEPRI, r3
 8000b6c:	4770      	bx	lr
 8000b6e:	680b      	ldr	r3, [r1, #0]
 8000b70:	6013      	str	r3, [r2, #0]
 8000b72:	2300      	movs	r3, #0
 8000b74:	f383 8811 	msr	BASEPRI, r3
 8000b78:	4770      	bx	lr
 8000b7a:	bf00      	nop
 8000b7c:	0000      	movs	r0, r0
	...

08000b80 <evt1_execute>:
 8000b80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b84:	4c33      	ldr	r4, [pc, #204]	; (8000c54 <evt1_execute+0xd4>)
 8000b86:	b08a      	sub	sp, #40	; 0x28
 8000b88:	2020      	movs	r0, #32
 8000b8a:	6024      	str	r4, [r4, #0]
 8000b8c:	f380 8811 	msr	BASEPRI, r0
 8000b90:	4931      	ldr	r1, [pc, #196]	; (8000c58 <evt1_execute+0xd8>)
 8000b92:	6823      	ldr	r3, [r4, #0]
 8000b94:	ad0a      	add	r5, sp, #40	; 0x28
 8000b96:	2701      	movs	r7, #1
 8000b98:	f845 3d14 	str.w	r3, [r5, #-20]!
 8000b9c:	698b      	ldr	r3, [r1, #24]
 8000b9e:	9306      	str	r3, [sp, #24]
 8000ba0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000ba4:	2300      	movs	r3, #0
 8000ba6:	6025      	str	r5, [r4, #0]
 8000ba8:	e9cd 7307 	strd	r7, r3, [sp, #28]
 8000bac:	9209      	str	r2, [sp, #36]	; 0x24
 8000bae:	f383 8811 	msr	BASEPRI, r3
 8000bb2:	f380 8811 	msr	BASEPRI, r0
 8000bb6:	ae0a      	add	r6, sp, #40	; 0x28
 8000bb8:	6820      	ldr	r0, [r4, #0]
 8000bba:	f846 0d28 	str.w	r0, [r6, #-40]!
 8000bbe:	6989      	ldr	r1, [r1, #24]
 8000bc0:	9101      	str	r1, [sp, #4]
 8000bc2:	f04f 0802 	mov.w	r8, #2
 8000bc6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8000bca:	6026      	str	r6, [r4, #0]
 8000bcc:	f8cd 8008 	str.w	r8, [sp, #8]
 8000bd0:	f383 8811 	msr	BASEPRI, r3
 8000bd4:	6821      	ldr	r1, [r4, #0]
 8000bd6:	1b09      	subs	r1, r1, r4
 8000bd8:	bf18      	it	ne
 8000bda:	2101      	movne	r1, #1
 8000bdc:	4638      	mov	r0, r7
 8000bde:	f7ff fe17 	bl	8000810 <_test_assert>
 8000be2:	b110      	cbz	r0, 8000bea <evt1_execute+0x6a>
 8000be4:	b00a      	add	sp, #40	; 0x28
 8000be6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000bea:	4629      	mov	r1, r5
 8000bec:	4620      	mov	r0, r4
 8000bee:	f7ff ffaf 	bl	8000b50 <chEvtUnregister>
 8000bf2:	6821      	ldr	r1, [r4, #0]
 8000bf4:	1b09      	subs	r1, r1, r4
 8000bf6:	bf18      	it	ne
 8000bf8:	2101      	movne	r1, #1
 8000bfa:	4640      	mov	r0, r8
 8000bfc:	f7ff fe08 	bl	8000810 <_test_assert>
 8000c00:	2800      	cmp	r0, #0
 8000c02:	d1ef      	bne.n	8000be4 <evt1_execute+0x64>
 8000c04:	4631      	mov	r1, r6
 8000c06:	4620      	mov	r0, r4
 8000c08:	f7ff ffa2 	bl	8000b50 <chEvtUnregister>
 8000c0c:	6821      	ldr	r1, [r4, #0]
 8000c0e:	1b09      	subs	r1, r1, r4
 8000c10:	fab1 f181 	clz	r1, r1
 8000c14:	2003      	movs	r0, #3
 8000c16:	0949      	lsrs	r1, r1, #5
 8000c18:	f7ff fdfa 	bl	8000810 <_test_assert>
 8000c1c:	2800      	cmp	r0, #0
 8000c1e:	d1e1      	bne.n	8000be4 <evt1_execute+0x64>
 8000c20:	4e0e      	ldr	r6, [pc, #56]	; (8000c5c <evt1_execute+0xdc>)
 8000c22:	4604      	mov	r4, r0
 8000c24:	2507      	movs	r5, #7
 8000c26:	fa25 f304 	lsr.w	r3, r5, r4
 8000c2a:	f013 0f01 	tst.w	r3, #1
 8000c2e:	fa07 f204 	lsl.w	r2, r7, r4
 8000c32:	4620      	mov	r0, r4
 8000c34:	d00c      	beq.n	8000c50 <evt1_execute+0xd0>
 8000c36:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8000c3a:	ea25 0502 	bic.w	r5, r5, r2
 8000c3e:	3401      	adds	r4, #1
 8000c40:	4798      	blx	r3
 8000c42:	2d00      	cmp	r5, #0
 8000c44:	d1ef      	bne.n	8000c26 <evt1_execute+0xa6>
 8000c46:	4906      	ldr	r1, [pc, #24]	; (8000c60 <evt1_execute+0xe0>)
 8000c48:	2004      	movs	r0, #4
 8000c4a:	f7ff fdb9 	bl	80007c0 <_test_assert_sequence>
 8000c4e:	e7c9      	b.n	8000be4 <evt1_execute+0x64>
 8000c50:	3401      	adds	r4, #1
 8000c52:	e7e8      	b.n	8000c26 <evt1_execute+0xa6>
 8000c54:	20000808 	.word	0x20000808
 8000c58:	20000938 	.word	0x20000938
 8000c5c:	08005ef0 	.word	0x08005ef0
 8000c60:	08005f00 	.word	0x08005f00
	...

08000c70 <chTMStopMeasurementX>:
 8000c70:	4b0e      	ldr	r3, [pc, #56]	; (8000cac <chTMStopMeasurementX+0x3c>)
 8000c72:	4a0f      	ldr	r2, [pc, #60]	; (8000cb0 <chTMStopMeasurementX+0x40>)
 8000c74:	685b      	ldr	r3, [r3, #4]
 8000c76:	68c1      	ldr	r1, [r0, #12]
 8000c78:	b4f0      	push	{r4, r5, r6, r7}
 8000c7a:	6884      	ldr	r4, [r0, #8]
 8000c7c:	6f56      	ldr	r6, [r2, #116]	; 0x74
 8000c7e:	6842      	ldr	r2, [r0, #4]
 8000c80:	1b1b      	subs	r3, r3, r4
 8000c82:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
 8000c86:	1b9b      	subs	r3, r3, r6
 8000c88:	18e6      	adds	r6, r4, r3
 8000c8a:	f145 0700 	adc.w	r7, r5, #0
 8000c8e:	3101      	adds	r1, #1
 8000c90:	4293      	cmp	r3, r2
 8000c92:	e9c0 3102 	strd	r3, r1, [r0, #8]
 8000c96:	e9c0 6704 	strd	r6, r7, [r0, #16]
 8000c9a:	d805      	bhi.n	8000ca8 <chTMStopMeasurementX+0x38>
 8000c9c:	6802      	ldr	r2, [r0, #0]
 8000c9e:	4293      	cmp	r3, r2
 8000ca0:	bf38      	it	cc
 8000ca2:	6003      	strcc	r3, [r0, #0]
 8000ca4:	bcf0      	pop	{r4, r5, r6, r7}
 8000ca6:	4770      	bx	lr
 8000ca8:	6043      	str	r3, [r0, #4]
 8000caa:	e7fb      	b.n	8000ca4 <chTMStopMeasurementX+0x34>
 8000cac:	e0001000 	.word	0xe0001000
 8000cb0:	20000938 	.word	0x20000938
	...

08000cc0 <wakeup>:
 8000cc0:	2320      	movs	r3, #32
 8000cc2:	f383 8811 	msr	BASEPRI, r3
 8000cc6:	7f03      	ldrb	r3, [r0, #28]
 8000cc8:	2b07      	cmp	r3, #7
 8000cca:	d80e      	bhi.n	8000cea <wakeup+0x2a>
 8000ccc:	e8df f003 	tbb	[pc, r3]
 8000cd0:	230d0d27 	.word	0x230d0d27
 8000cd4:	080d0408 	.word	0x080d0408
 8000cd8:	6a02      	ldr	r2, [r0, #32]
 8000cda:	6893      	ldr	r3, [r2, #8]
 8000cdc:	3301      	adds	r3, #1
 8000cde:	6093      	str	r3, [r2, #8]
 8000ce0:	e9d0 2300 	ldrd	r2, r3, [r0]
 8000ce4:	601a      	str	r2, [r3, #0]
 8000ce6:	6802      	ldr	r2, [r0, #0]
 8000ce8:	6053      	str	r3, [r2, #4]
 8000cea:	b410      	push	{r4}
 8000cec:	2200      	movs	r2, #0
 8000cee:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000cf2:	6881      	ldr	r1, [r0, #8]
 8000cf4:	4b0c      	ldr	r3, [pc, #48]	; (8000d28 <wakeup+0x68>)
 8000cf6:	6204      	str	r4, [r0, #32]
 8000cf8:	7702      	strb	r2, [r0, #28]
 8000cfa:	681b      	ldr	r3, [r3, #0]
 8000cfc:	689a      	ldr	r2, [r3, #8]
 8000cfe:	428a      	cmp	r2, r1
 8000d00:	d2fb      	bcs.n	8000cfa <wakeup+0x3a>
 8000d02:	685a      	ldr	r2, [r3, #4]
 8000d04:	2100      	movs	r1, #0
 8000d06:	e9c0 3200 	strd	r3, r2, [r0]
 8000d0a:	6010      	str	r0, [r2, #0]
 8000d0c:	6058      	str	r0, [r3, #4]
 8000d0e:	f381 8811 	msr	BASEPRI, r1
 8000d12:	bc10      	pop	{r4}
 8000d14:	4770      	bx	lr
 8000d16:	6a03      	ldr	r3, [r0, #32]
 8000d18:	2200      	movs	r2, #0
 8000d1a:	601a      	str	r2, [r3, #0]
 8000d1c:	e7e5      	b.n	8000cea <wakeup+0x2a>
 8000d1e:	2300      	movs	r3, #0
 8000d20:	f383 8811 	msr	BASEPRI, r3
 8000d24:	4770      	bx	lr
 8000d26:	bf00      	nop
 8000d28:	20000938 	.word	0x20000938
 8000d2c:	00000000 	.word	0x00000000

08000d30 <chSchReadyI>:
 8000d30:	4601      	mov	r1, r0
 8000d32:	2200      	movs	r2, #0
 8000d34:	4b06      	ldr	r3, [pc, #24]	; (8000d50 <chSchReadyI+0x20>)
 8000d36:	6880      	ldr	r0, [r0, #8]
 8000d38:	770a      	strb	r2, [r1, #28]
 8000d3a:	681b      	ldr	r3, [r3, #0]
 8000d3c:	689a      	ldr	r2, [r3, #8]
 8000d3e:	4282      	cmp	r2, r0
 8000d40:	d2fb      	bcs.n	8000d3a <chSchReadyI+0xa>
 8000d42:	685a      	ldr	r2, [r3, #4]
 8000d44:	4608      	mov	r0, r1
 8000d46:	e9c1 3200 	strd	r3, r2, [r1]
 8000d4a:	6011      	str	r1, [r2, #0]
 8000d4c:	6059      	str	r1, [r3, #4]
 8000d4e:	4770      	bx	lr
 8000d50:	20000938 	.word	0x20000938
	...

08000d60 <chCondSignalI.constprop.43>:
 8000d60:	4b07      	ldr	r3, [pc, #28]	; (8000d80 <chCondSignalI.constprop.43+0x20>)
 8000d62:	681a      	ldr	r2, [r3, #0]
 8000d64:	429a      	cmp	r2, r3
 8000d66:	d009      	beq.n	8000d7c <chCondSignalI.constprop.43+0x1c>
 8000d68:	6811      	ldr	r1, [r2, #0]
 8000d6a:	b410      	push	{r4}
 8000d6c:	2400      	movs	r4, #0
 8000d6e:	604b      	str	r3, [r1, #4]
 8000d70:	6019      	str	r1, [r3, #0]
 8000d72:	6214      	str	r4, [r2, #32]
 8000d74:	4610      	mov	r0, r2
 8000d76:	bc10      	pop	{r4}
 8000d78:	f7ff bfda 	b.w	8000d30 <chSchReadyI>
 8000d7c:	4770      	bx	lr
 8000d7e:	bf00      	nop
 8000d80:	20000800 	.word	0x20000800
	...

08000d90 <chIQPutI>:
 8000d90:	b510      	push	{r4, lr}
 8000d92:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 8000d96:	42a2      	cmp	r2, r4
 8000d98:	6883      	ldr	r3, [r0, #8]
 8000d9a:	d01c      	beq.n	8000dd6 <chIQPutI+0x46>
 8000d9c:	3301      	adds	r3, #1
 8000d9e:	1c54      	adds	r4, r2, #1
 8000da0:	6083      	str	r3, [r0, #8]
 8000da2:	6144      	str	r4, [r0, #20]
 8000da4:	7011      	strb	r1, [r2, #0]
 8000da6:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
 8000daa:	429a      	cmp	r2, r3
 8000dac:	d20c      	bcs.n	8000dc8 <chIQPutI+0x38>
 8000dae:	6803      	ldr	r3, [r0, #0]
 8000db0:	4298      	cmp	r0, r3
 8000db2:	d00e      	beq.n	8000dd2 <chIQPutI+0x42>
 8000db4:	681a      	ldr	r2, [r3, #0]
 8000db6:	6002      	str	r2, [r0, #0]
 8000db8:	2400      	movs	r4, #0
 8000dba:	6050      	str	r0, [r2, #4]
 8000dbc:	4618      	mov	r0, r3
 8000dbe:	621c      	str	r4, [r3, #32]
 8000dc0:	f7ff ffb6 	bl	8000d30 <chSchReadyI>
 8000dc4:	4620      	mov	r0, r4
 8000dc6:	bd10      	pop	{r4, pc}
 8000dc8:	68c3      	ldr	r3, [r0, #12]
 8000dca:	6143      	str	r3, [r0, #20]
 8000dcc:	6803      	ldr	r3, [r0, #0]
 8000dce:	4298      	cmp	r0, r3
 8000dd0:	d1f0      	bne.n	8000db4 <chIQPutI+0x24>
 8000dd2:	2000      	movs	r0, #0
 8000dd4:	bd10      	pop	{r4, pc}
 8000dd6:	2b00      	cmp	r3, #0
 8000dd8:	d0e0      	beq.n	8000d9c <chIQPutI+0xc>
 8000dda:	f06f 0003 	mvn.w	r0, #3
 8000dde:	bd10      	pop	{r4, pc}

08000de0 <chOQGetI>:
 8000de0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8000de4:	4291      	cmp	r1, r2
 8000de6:	b538      	push	{r3, r4, r5, lr}
 8000de8:	6883      	ldr	r3, [r0, #8]
 8000dea:	d017      	beq.n	8000e1c <chOQGetI+0x3c>
 8000dec:	6905      	ldr	r5, [r0, #16]
 8000dee:	1c51      	adds	r1, r2, #1
 8000df0:	3301      	adds	r3, #1
 8000df2:	6083      	str	r3, [r0, #8]
 8000df4:	6181      	str	r1, [r0, #24]
 8000df6:	42a9      	cmp	r1, r5
 8000df8:	7814      	ldrb	r4, [r2, #0]
 8000dfa:	d20c      	bcs.n	8000e16 <chOQGetI+0x36>
 8000dfc:	6803      	ldr	r3, [r0, #0]
 8000dfe:	4298      	cmp	r0, r3
 8000e00:	d007      	beq.n	8000e12 <chOQGetI+0x32>
 8000e02:	681a      	ldr	r2, [r3, #0]
 8000e04:	6002      	str	r2, [r0, #0]
 8000e06:	2100      	movs	r1, #0
 8000e08:	6050      	str	r0, [r2, #4]
 8000e0a:	4618      	mov	r0, r3
 8000e0c:	6219      	str	r1, [r3, #32]
 8000e0e:	f7ff ff8f 	bl	8000d30 <chSchReadyI>
 8000e12:	4620      	mov	r0, r4
 8000e14:	bd38      	pop	{r3, r4, r5, pc}
 8000e16:	68c3      	ldr	r3, [r0, #12]
 8000e18:	6183      	str	r3, [r0, #24]
 8000e1a:	e7ef      	b.n	8000dfc <chOQGetI+0x1c>
 8000e1c:	2b00      	cmp	r3, #0
 8000e1e:	d0e5      	beq.n	8000dec <chOQGetI+0xc>
 8000e20:	f06f 0002 	mvn.w	r0, #2
 8000e24:	bd38      	pop	{r3, r4, r5, pc}
 8000e26:	bf00      	nop
	...

08000e30 <chEvtSignalI>:
 8000e30:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8000e32:	7f02      	ldrb	r2, [r0, #28]
 8000e34:	4319      	orrs	r1, r3
 8000e36:	2a0a      	cmp	r2, #10
 8000e38:	6341      	str	r1, [r0, #52]	; 0x34
 8000e3a:	d009      	beq.n	8000e50 <chEvtSignalI+0x20>
 8000e3c:	2a0b      	cmp	r2, #11
 8000e3e:	d000      	beq.n	8000e42 <chEvtSignalI+0x12>
 8000e40:	4770      	bx	lr
 8000e42:	6a03      	ldr	r3, [r0, #32]
 8000e44:	438b      	bics	r3, r1
 8000e46:	d1fb      	bne.n	8000e40 <chEvtSignalI+0x10>
 8000e48:	2300      	movs	r3, #0
 8000e4a:	6203      	str	r3, [r0, #32]
 8000e4c:	f7ff bf70 	b.w	8000d30 <chSchReadyI>
 8000e50:	6a03      	ldr	r3, [r0, #32]
 8000e52:	4219      	tst	r1, r3
 8000e54:	d1f8      	bne.n	8000e48 <chEvtSignalI+0x18>
 8000e56:	4770      	bx	lr
	...

08000e60 <chEvtBroadcastFlagsI>:
 8000e60:	b570      	push	{r4, r5, r6, lr}
 8000e62:	6804      	ldr	r4, [r0, #0]
 8000e64:	42a0      	cmp	r0, r4
 8000e66:	d00f      	beq.n	8000e88 <chEvtBroadcastFlagsI+0x28>
 8000e68:	4606      	mov	r6, r0
 8000e6a:	460d      	mov	r5, r1
 8000e6c:	68e3      	ldr	r3, [r4, #12]
 8000e6e:	432b      	orrs	r3, r5
 8000e70:	60e3      	str	r3, [r4, #12]
 8000e72:	b115      	cbz	r5, 8000e7a <chEvtBroadcastFlagsI+0x1a>
 8000e74:	6922      	ldr	r2, [r4, #16]
 8000e76:	4213      	tst	r3, r2
 8000e78:	d003      	beq.n	8000e82 <chEvtBroadcastFlagsI+0x22>
 8000e7a:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 8000e7e:	f7ff ffd7 	bl	8000e30 <chEvtSignalI>
 8000e82:	6824      	ldr	r4, [r4, #0]
 8000e84:	42a6      	cmp	r6, r4
 8000e86:	d1f1      	bne.n	8000e6c <chEvtBroadcastFlagsI+0xc>
 8000e88:	bd70      	pop	{r4, r5, r6, pc}
 8000e8a:	bf00      	nop
 8000e8c:	0000      	movs	r0, r0
	...

08000e90 <VectorD4>:
 8000e90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e94:	4f43      	ldr	r7, [pc, #268]	; (8000fa4 <VectorD4+0x114>)
 8000e96:	6f7d      	ldr	r5, [r7, #116]	; 0x74
 8000e98:	682e      	ldr	r6, [r5, #0]
 8000e9a:	69ec      	ldr	r4, [r5, #28]
 8000e9c:	622c      	str	r4, [r5, #32]
 8000e9e:	0722      	lsls	r2, r4, #28
 8000ea0:	d11a      	bne.n	8000ed8 <VectorD4+0x48>
 8000ea2:	05e3      	lsls	r3, r4, #23
 8000ea4:	d434      	bmi.n	8000f10 <VectorD4+0x80>
 8000ea6:	06a0      	lsls	r0, r4, #26
 8000ea8:	d43f      	bmi.n	8000f2a <VectorD4+0x9a>
 8000eaa:	0631      	lsls	r1, r6, #24
 8000eac:	d501      	bpl.n	8000eb2 <VectorD4+0x22>
 8000eae:	0622      	lsls	r2, r4, #24
 8000eb0:	d44e      	bmi.n	8000f50 <VectorD4+0xc0>
 8000eb2:	0663      	lsls	r3, r4, #25
 8000eb4:	d50c      	bpl.n	8000ed0 <VectorD4+0x40>
 8000eb6:	2320      	movs	r3, #32
 8000eb8:	f383 8811 	msr	BASEPRI, r3
 8000ebc:	e9d7 2311 	ldrd	r2, r3, [r7, #68]	; 0x44
 8000ec0:	429a      	cmp	r2, r3
 8000ec2:	d053      	beq.n	8000f6c <VectorD4+0xdc>
 8000ec4:	f026 0640 	bic.w	r6, r6, #64	; 0x40
 8000ec8:	602e      	str	r6, [r5, #0]
 8000eca:	2300      	movs	r3, #0
 8000ecc:	f383 8811 	msr	BASEPRI, r3
 8000ed0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000ed4:	f7ff bd24 	b.w	8000920 <_port_irq_epilogue>
 8000ed8:	f014 0f08 	tst.w	r4, #8
 8000edc:	bf0c      	ite	eq
 8000ede:	2100      	moveq	r1, #0
 8000ee0:	2180      	movne	r1, #128	; 0x80
 8000ee2:	07e3      	lsls	r3, r4, #31
 8000ee4:	bf48      	it	mi
 8000ee6:	f041 0120 	orrmi.w	r1, r1, #32
 8000eea:	07a0      	lsls	r0, r4, #30
 8000eec:	bf48      	it	mi
 8000eee:	f041 0140 	orrmi.w	r1, r1, #64	; 0x40
 8000ef2:	0762      	lsls	r2, r4, #29
 8000ef4:	bf48      	it	mi
 8000ef6:	f441 7180 	orrmi.w	r1, r1, #256	; 0x100
 8000efa:	2320      	movs	r3, #32
 8000efc:	f383 8811 	msr	BASEPRI, r3
 8000f00:	4829      	ldr	r0, [pc, #164]	; (8000fa8 <VectorD4+0x118>)
 8000f02:	f7ff ffad 	bl	8000e60 <chEvtBroadcastFlagsI>
 8000f06:	2300      	movs	r3, #0
 8000f08:	f383 8811 	msr	BASEPRI, r3
 8000f0c:	05e3      	lsls	r3, r4, #23
 8000f0e:	d5ca      	bpl.n	8000ea6 <VectorD4+0x16>
 8000f10:	2320      	movs	r3, #32
 8000f12:	f383 8811 	msr	BASEPRI, r3
 8000f16:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000f1a:	4823      	ldr	r0, [pc, #140]	; (8000fa8 <VectorD4+0x118>)
 8000f1c:	f7ff ffa0 	bl	8000e60 <chEvtBroadcastFlagsI>
 8000f20:	2300      	movs	r3, #0
 8000f22:	f383 8811 	msr	BASEPRI, r3
 8000f26:	06a0      	lsls	r0, r4, #26
 8000f28:	d5bf      	bpl.n	8000eaa <VectorD4+0x1a>
 8000f2a:	2320      	movs	r3, #32
 8000f2c:	f383 8811 	msr	BASEPRI, r3
 8000f30:	f8b5 8024 	ldrh.w	r8, [r5, #36]	; 0x24
 8000f34:	697b      	ldr	r3, [r7, #20]
 8000f36:	fa5f f888 	uxtb.w	r8, r8
 8000f3a:	b1fb      	cbz	r3, 8000f7c <VectorD4+0xec>
 8000f3c:	4641      	mov	r1, r8
 8000f3e:	481b      	ldr	r0, [pc, #108]	; (8000fac <VectorD4+0x11c>)
 8000f40:	f7ff ff26 	bl	8000d90 <chIQPutI>
 8000f44:	2800      	cmp	r0, #0
 8000f46:	db1e      	blt.n	8000f86 <VectorD4+0xf6>
 8000f48:	2300      	movs	r3, #0
 8000f4a:	f383 8811 	msr	BASEPRI, r3
 8000f4e:	e7ac      	b.n	8000eaa <VectorD4+0x1a>
 8000f50:	2320      	movs	r3, #32
 8000f52:	f383 8811 	msr	BASEPRI, r3
 8000f56:	4816      	ldr	r0, [pc, #88]	; (8000fb0 <VectorD4+0x120>)
 8000f58:	f7ff ff42 	bl	8000de0 <chOQGetI>
 8000f5c:	2800      	cmp	r0, #0
 8000f5e:	db17      	blt.n	8000f90 <VectorD4+0x100>
 8000f60:	b280      	uxth	r0, r0
 8000f62:	8528      	strh	r0, [r5, #40]	; 0x28
 8000f64:	2300      	movs	r3, #0
 8000f66:	f383 8811 	msr	BASEPRI, r3
 8000f6a:	e7a2      	b.n	8000eb2 <VectorD4+0x22>
 8000f6c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000f6e:	2b00      	cmp	r3, #0
 8000f70:	d0a8      	beq.n	8000ec4 <VectorD4+0x34>
 8000f72:	2110      	movs	r1, #16
 8000f74:	480c      	ldr	r0, [pc, #48]	; (8000fa8 <VectorD4+0x118>)
 8000f76:	f7ff ff73 	bl	8000e60 <chEvtBroadcastFlagsI>
 8000f7a:	e7a3      	b.n	8000ec4 <VectorD4+0x34>
 8000f7c:	2104      	movs	r1, #4
 8000f7e:	480a      	ldr	r0, [pc, #40]	; (8000fa8 <VectorD4+0x118>)
 8000f80:	f7ff ff6e 	bl	8000e60 <chEvtBroadcastFlagsI>
 8000f84:	e7da      	b.n	8000f3c <VectorD4+0xac>
 8000f86:	2180      	movs	r1, #128	; 0x80
 8000f88:	4807      	ldr	r0, [pc, #28]	; (8000fa8 <VectorD4+0x118>)
 8000f8a:	f7ff ff69 	bl	8000e60 <chEvtBroadcastFlagsI>
 8000f8e:	e7db      	b.n	8000f48 <VectorD4+0xb8>
 8000f90:	2108      	movs	r1, #8
 8000f92:	4805      	ldr	r0, [pc, #20]	; (8000fa8 <VectorD4+0x118>)
 8000f94:	f7ff ff64 	bl	8000e60 <chEvtBroadcastFlagsI>
 8000f98:	f026 03c0 	bic.w	r3, r6, #192	; 0xc0
 8000f9c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fa0:	602b      	str	r3, [r5, #0]
 8000fa2:	e7df      	b.n	8000f64 <VectorD4+0xd4>
 8000fa4:	200008b8 	.word	0x200008b8
 8000fa8:	200008bc 	.word	0x200008bc
 8000fac:	200008c4 	.word	0x200008c4
 8000fb0:	200008e8 	.word	0x200008e8
	...

08000fc0 <chMtxUnlockS>:
 8000fc0:	4b12      	ldr	r3, [pc, #72]	; (800100c <chMtxUnlockS+0x4c>)
 8000fc2:	b430      	push	{r4, r5}
 8000fc4:	6804      	ldr	r4, [r0, #0]
 8000fc6:	699d      	ldr	r5, [r3, #24]
 8000fc8:	68c3      	ldr	r3, [r0, #12]
 8000fca:	63ab      	str	r3, [r5, #56]	; 0x38
 8000fcc:	4284      	cmp	r4, r0
 8000fce:	d018      	beq.n	8001002 <chMtxUnlockS+0x42>
 8000fd0:	4601      	mov	r1, r0
 8000fd2:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 8000fd4:	b14b      	cbz	r3, 8000fea <chMtxUnlockS+0x2a>
 8000fd6:	681a      	ldr	r2, [r3, #0]
 8000fd8:	4293      	cmp	r3, r2
 8000fda:	d003      	beq.n	8000fe4 <chMtxUnlockS+0x24>
 8000fdc:	6892      	ldr	r2, [r2, #8]
 8000fde:	4290      	cmp	r0, r2
 8000fe0:	bf38      	it	cc
 8000fe2:	4610      	movcc	r0, r2
 8000fe4:	68db      	ldr	r3, [r3, #12]
 8000fe6:	2b00      	cmp	r3, #0
 8000fe8:	d1f5      	bne.n	8000fd6 <chMtxUnlockS+0x16>
 8000fea:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8000fec:	6823      	ldr	r3, [r4, #0]
 8000fee:	60a8      	str	r0, [r5, #8]
 8000ff0:	600b      	str	r3, [r1, #0]
 8000ff2:	4620      	mov	r0, r4
 8000ff4:	6059      	str	r1, [r3, #4]
 8000ff6:	e9c1 4202 	strd	r4, r2, [r1, #8]
 8000ffa:	63a1      	str	r1, [r4, #56]	; 0x38
 8000ffc:	bc30      	pop	{r4, r5}
 8000ffe:	f7ff be97 	b.w	8000d30 <chSchReadyI>
 8001002:	2300      	movs	r3, #0
 8001004:	60a3      	str	r3, [r4, #8]
 8001006:	bc30      	pop	{r4, r5}
 8001008:	4770      	bx	lr
 800100a:	bf00      	nop
 800100c:	20000938 	.word	0x20000938

08001010 <chSemSignalI>:
 8001010:	6883      	ldr	r3, [r0, #8]
 8001012:	3301      	adds	r3, #1
 8001014:	2b00      	cmp	r3, #0
 8001016:	6083      	str	r3, [r0, #8]
 8001018:	dd00      	ble.n	800101c <chSemSignalI+0xc>
 800101a:	4770      	bx	lr
 800101c:	6803      	ldr	r3, [r0, #0]
 800101e:	681a      	ldr	r2, [r3, #0]
 8001020:	6002      	str	r2, [r0, #0]
 8001022:	2100      	movs	r1, #0
 8001024:	6050      	str	r0, [r2, #4]
 8001026:	4618      	mov	r0, r3
 8001028:	6219      	str	r1, [r3, #32]
 800102a:	f7ff be81 	b.w	8000d30 <chSchReadyI>
 800102e:	bf00      	nop

08001030 <chMBPostI.constprop.19>:
 8001030:	b538      	push	{r3, r4, r5, lr}
 8001032:	4b0c      	ldr	r3, [pc, #48]	; (8001064 <chMBPostI.constprop.19+0x34>)
 8001034:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001036:	2a00      	cmp	r2, #0
 8001038:	dd10      	ble.n	800105c <chMBPostI.constprop.19+0x2c>
 800103a:	e9d3 5401 	ldrd	r5, r4, [r3, #4]
 800103e:	1d21      	adds	r1, r4, #4
 8001040:	3a01      	subs	r2, #1
 8001042:	42a9      	cmp	r1, r5
 8001044:	625a      	str	r2, [r3, #36]	; 0x24
 8001046:	6099      	str	r1, [r3, #8]
 8001048:	bf28      	it	cs
 800104a:	681a      	ldrcs	r2, [r3, #0]
 800104c:	6020      	str	r0, [r4, #0]
 800104e:	4806      	ldr	r0, [pc, #24]	; (8001068 <chMBPostI.constprop.19+0x38>)
 8001050:	bf28      	it	cs
 8001052:	609a      	strcs	r2, [r3, #8]
 8001054:	f7ff ffdc 	bl	8001010 <chSemSignalI>
 8001058:	2000      	movs	r0, #0
 800105a:	bd38      	pop	{r3, r4, r5, pc}
 800105c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001060:	bd38      	pop	{r3, r4, r5, pc}
 8001062:	bf00      	nop
 8001064:	20000854 	.word	0x20000854
 8001068:	20000864 	.word	0x20000864
 800106c:	00000000 	.word	0x00000000

08001070 <chMBPostAheadI.constprop.17>:
 8001070:	4a0c      	ldr	r2, [pc, #48]	; (80010a4 <chMBPostAheadI.constprop.17+0x34>)
 8001072:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8001074:	2900      	cmp	r1, #0
 8001076:	dd11      	ble.n	800109c <chMBPostAheadI.constprop.17+0x2c>
 8001078:	68d3      	ldr	r3, [r2, #12]
 800107a:	b510      	push	{r4, lr}
 800107c:	6814      	ldr	r4, [r2, #0]
 800107e:	3b04      	subs	r3, #4
 8001080:	3901      	subs	r1, #1
 8001082:	42a3      	cmp	r3, r4
 8001084:	6251      	str	r1, [r2, #36]	; 0x24
 8001086:	60d3      	str	r3, [r2, #12]
 8001088:	d202      	bcs.n	8001090 <chMBPostAheadI.constprop.17+0x20>
 800108a:	6853      	ldr	r3, [r2, #4]
 800108c:	3b04      	subs	r3, #4
 800108e:	60d3      	str	r3, [r2, #12]
 8001090:	6018      	str	r0, [r3, #0]
 8001092:	4805      	ldr	r0, [pc, #20]	; (80010a8 <chMBPostAheadI.constprop.17+0x38>)
 8001094:	f7ff ffbc 	bl	8001010 <chSemSignalI>
 8001098:	2000      	movs	r0, #0
 800109a:	bd10      	pop	{r4, pc}
 800109c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80010a0:	4770      	bx	lr
 80010a2:	bf00      	nop
 80010a4:	20000854 	.word	0x20000854
 80010a8:	20000864 	.word	0x20000864
 80010ac:	00000000 	.word	0x00000000

080010b0 <chMBFetchI.constprop.15>:
 80010b0:	4b0c      	ldr	r3, [pc, #48]	; (80010e4 <chMBFetchI.constprop.15+0x34>)
 80010b2:	6999      	ldr	r1, [r3, #24]
 80010b4:	2900      	cmp	r1, #0
 80010b6:	dd12      	ble.n	80010de <chMBFetchI.constprop.15+0x2e>
 80010b8:	b510      	push	{r4, lr}
 80010ba:	68da      	ldr	r2, [r3, #12]
 80010bc:	3901      	subs	r1, #1
 80010be:	6199      	str	r1, [r3, #24]
 80010c0:	6859      	ldr	r1, [r3, #4]
 80010c2:	6814      	ldr	r4, [r2, #0]
 80010c4:	3204      	adds	r2, #4
 80010c6:	428a      	cmp	r2, r1
 80010c8:	60da      	str	r2, [r3, #12]
 80010ca:	6004      	str	r4, [r0, #0]
 80010cc:	bf28      	it	cs
 80010ce:	681a      	ldrcs	r2, [r3, #0]
 80010d0:	4805      	ldr	r0, [pc, #20]	; (80010e8 <chMBFetchI.constprop.15+0x38>)
 80010d2:	bf28      	it	cs
 80010d4:	60da      	strcs	r2, [r3, #12]
 80010d6:	f7ff ff9b 	bl	8001010 <chSemSignalI>
 80010da:	2000      	movs	r0, #0
 80010dc:	bd10      	pop	{r4, pc}
 80010de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80010e2:	4770      	bx	lr
 80010e4:	20000854 	.word	0x20000854
 80010e8:	20000870 	.word	0x20000870
 80010ec:	00000000 	.word	0x00000000

080010f0 <chSemResetI>:
 80010f0:	b570      	push	{r4, r5, r6, lr}
 80010f2:	6885      	ldr	r5, [r0, #8]
 80010f4:	6081      	str	r1, [r0, #8]
 80010f6:	3501      	adds	r5, #1
 80010f8:	2d00      	cmp	r5, #0
 80010fa:	dc0c      	bgt.n	8001116 <chSemResetI+0x26>
 80010fc:	4604      	mov	r4, r0
 80010fe:	f06f 0601 	mvn.w	r6, #1
 8001102:	6860      	ldr	r0, [r4, #4]
 8001104:	6843      	ldr	r3, [r0, #4]
 8001106:	6063      	str	r3, [r4, #4]
 8001108:	601c      	str	r4, [r3, #0]
 800110a:	f7ff fe11 	bl	8000d30 <chSchReadyI>
 800110e:	3501      	adds	r5, #1
 8001110:	2d01      	cmp	r5, #1
 8001112:	6206      	str	r6, [r0, #32]
 8001114:	d1f5      	bne.n	8001102 <chSemResetI+0x12>
 8001116:	bd70      	pop	{r4, r5, r6, pc}
	...

08001120 <chVTDoResetI>:
 8001120:	4b1a      	ldr	r3, [pc, #104]	; (800118c <chVTDoResetI+0x6c>)
 8001122:	69da      	ldr	r2, [r3, #28]
 8001124:	4282      	cmp	r2, r0
 8001126:	b410      	push	{r4}
 8001128:	d00f      	beq.n	800114a <chVTDoResetI+0x2a>
 800112a:	e9d0 2100 	ldrd	r2, r1, [r0]
 800112e:	600a      	str	r2, [r1, #0]
 8001130:	6802      	ldr	r2, [r0, #0]
 8001132:	331c      	adds	r3, #28
 8001134:	2400      	movs	r4, #0
 8001136:	429a      	cmp	r2, r3
 8001138:	6051      	str	r1, [r2, #4]
 800113a:	60c4      	str	r4, [r0, #12]
 800113c:	d003      	beq.n	8001146 <chVTDoResetI+0x26>
 800113e:	6881      	ldr	r1, [r0, #8]
 8001140:	6893      	ldr	r3, [r2, #8]
 8001142:	440b      	add	r3, r1
 8001144:	6093      	str	r3, [r2, #8]
 8001146:	bc10      	pop	{r4}
 8001148:	4770      	bx	lr
 800114a:	4618      	mov	r0, r3
 800114c:	6811      	ldr	r1, [r2, #0]
 800114e:	f840 1f1c 	str.w	r1, [r0, #28]!
 8001152:	2400      	movs	r4, #0
 8001154:	4281      	cmp	r1, r0
 8001156:	6048      	str	r0, [r1, #4]
 8001158:	60d4      	str	r4, [r2, #12]
 800115a:	d012      	beq.n	8001182 <chVTDoResetI+0x62>
 800115c:	6894      	ldr	r4, [r2, #8]
 800115e:	6888      	ldr	r0, [r1, #8]
 8001160:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001162:	1903      	adds	r3, r0, r4
 8001164:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8001168:	608b      	str	r3, [r1, #8]
 800116a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800116c:	1a8a      	subs	r2, r1, r2
 800116e:	4293      	cmp	r3, r2
 8001170:	d9e9      	bls.n	8001146 <chVTDoResetI+0x26>
 8001172:	1a9b      	subs	r3, r3, r2
 8001174:	2b02      	cmp	r3, #2
 8001176:	bf2c      	ite	cs
 8001178:	18cb      	addcs	r3, r1, r3
 800117a:	1c8b      	addcc	r3, r1, #2
 800117c:	6363      	str	r3, [r4, #52]	; 0x34
 800117e:	bc10      	pop	{r4}
 8001180:	4770      	bx	lr
 8001182:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001186:	60dc      	str	r4, [r3, #12]
 8001188:	e7dd      	b.n	8001146 <chVTDoResetI+0x26>
 800118a:	bf00      	nop
 800118c:	20000938 	.word	0x20000938

08001190 <chVTDoSetI>:
 8001190:	b4f0      	push	{r4, r5, r6, r7}
 8001192:	4d1c      	ldr	r5, [pc, #112]	; (8001204 <chVTDoSetI+0x74>)
 8001194:	462e      	mov	r6, r5
 8001196:	2902      	cmp	r1, #2
 8001198:	f856 4f1c 	ldr.w	r4, [r6, #28]!
 800119c:	6103      	str	r3, [r0, #16]
 800119e:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 80011a2:	bf38      	it	cc
 80011a4:	2102      	movcc	r1, #2
 80011a6:	42b4      	cmp	r4, r6
 80011a8:	60c2      	str	r2, [r0, #12]
 80011aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80011ac:	d01b      	beq.n	80011e6 <chVTDoSetI+0x56>
 80011ae:	6aae      	ldr	r6, [r5, #40]	; 0x28
 80011b0:	68a2      	ldr	r2, [r4, #8]
 80011b2:	4419      	add	r1, r3
 80011b4:	1b8b      	subs	r3, r1, r6
 80011b6:	429a      	cmp	r2, r3
 80011b8:	d903      	bls.n	80011c2 <chVTDoSetI+0x32>
 80011ba:	e012      	b.n	80011e2 <chVTDoSetI+0x52>
 80011bc:	6824      	ldr	r4, [r4, #0]
 80011be:	1a9b      	subs	r3, r3, r2
 80011c0:	68a2      	ldr	r2, [r4, #8]
 80011c2:	429a      	cmp	r2, r3
 80011c4:	d3fa      	bcc.n	80011bc <chVTDoSetI+0x2c>
 80011c6:	6862      	ldr	r2, [r4, #4]
 80011c8:	e9c0 4200 	strd	r4, r2, [r0]
 80011cc:	6010      	str	r0, [r2, #0]
 80011ce:	6060      	str	r0, [r4, #4]
 80011d0:	6083      	str	r3, [r0, #8]
 80011d2:	68a2      	ldr	r2, [r4, #8]
 80011d4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80011d8:	1ad3      	subs	r3, r2, r3
 80011da:	60a3      	str	r3, [r4, #8]
 80011dc:	6269      	str	r1, [r5, #36]	; 0x24
 80011de:	bcf0      	pop	{r4, r5, r6, r7}
 80011e0:	4770      	bx	lr
 80011e2:	6379      	str	r1, [r7, #52]	; 0x34
 80011e4:	e7ed      	b.n	80011c2 <chVTDoSetI+0x32>
 80011e6:	62ab      	str	r3, [r5, #40]	; 0x28
 80011e8:	18ce      	adds	r6, r1, r3
 80011ea:	2200      	movs	r2, #0
 80011ec:	2302      	movs	r3, #2
 80011ee:	e9c5 0007 	strd	r0, r0, [r5, #28]
 80011f2:	e9c0 4400 	strd	r4, r4, [r0]
 80011f6:	6081      	str	r1, [r0, #8]
 80011f8:	637e      	str	r6, [r7, #52]	; 0x34
 80011fa:	613a      	str	r2, [r7, #16]
 80011fc:	60fb      	str	r3, [r7, #12]
 80011fe:	bcf0      	pop	{r4, r5, r6, r7}
 8001200:	4770      	bx	lr
 8001202:	bf00      	nop
 8001204:	20000938 	.word	0x20000938
	...

08001210 <test_start_timer.constprop.1>:
 8001210:	b508      	push	{r3, lr}
 8001212:	4b0b      	ldr	r3, [pc, #44]	; (8001240 <test_start_timer.constprop.1+0x30>)
 8001214:	2200      	movs	r2, #0
 8001216:	701a      	strb	r2, [r3, #0]
 8001218:	2320      	movs	r3, #32
 800121a:	f383 8811 	msr	BASEPRI, r3
 800121e:	4809      	ldr	r0, [pc, #36]	; (8001244 <test_start_timer.constprop.1+0x34>)
 8001220:	68c3      	ldr	r3, [r0, #12]
 8001222:	b10b      	cbz	r3, 8001228 <test_start_timer.constprop.1+0x18>
 8001224:	f7ff ff7c 	bl	8001120 <chVTDoResetI>
 8001228:	2300      	movs	r3, #0
 800122a:	4a07      	ldr	r2, [pc, #28]	; (8001248 <test_start_timer.constprop.1+0x38>)
 800122c:	4805      	ldr	r0, [pc, #20]	; (8001244 <test_start_timer.constprop.1+0x34>)
 800122e:	f242 7110 	movw	r1, #10000	; 0x2710
 8001232:	f7ff ffad 	bl	8001190 <chVTDoSetI>
 8001236:	2300      	movs	r3, #0
 8001238:	f383 8811 	msr	BASEPRI, r3
 800123c:	bd08      	pop	{r3, pc}
 800123e:	bf00      	nop
 8001240:	200011d0 	.word	0x200011d0
 8001244:	200011fc 	.word	0x200011fc
 8001248:	08000361 	.word	0x08000361
 800124c:	00000000 	.word	0x00000000

08001250 <chSysGetStatusAndLockX.part.2>:
 8001250:	f3ef 8305 	mrs	r3, IPSR
 8001254:	2320      	movs	r3, #32
 8001256:	f383 8811 	msr	BASEPRI, r3
 800125a:	4770      	bx	lr
 800125c:	0000      	movs	r0, r0
	...

08001260 <chSysIntegrityCheckI>:
 8001260:	07c2      	lsls	r2, r0, #31
 8001262:	b410      	push	{r4}
 8001264:	d512      	bpl.n	800128c <chSysIntegrityCheckI+0x2c>
 8001266:	4b29      	ldr	r3, [pc, #164]	; (800130c <chSysIntegrityCheckI+0xac>)
 8001268:	e9d3 1400 	ldrd	r1, r4, [r3]
 800126c:	4299      	cmp	r1, r3
 800126e:	d041      	beq.n	80012f4 <chSysIntegrityCheckI+0x94>
 8001270:	2200      	movs	r2, #0
 8001272:	6809      	ldr	r1, [r1, #0]
 8001274:	4299      	cmp	r1, r3
 8001276:	f102 0201 	add.w	r2, r2, #1
 800127a:	d1fa      	bne.n	8001272 <chSysIntegrityCheckI+0x12>
 800127c:	428c      	cmp	r4, r1
 800127e:	d036      	beq.n	80012ee <chSysIntegrityCheckI+0x8e>
 8001280:	6864      	ldr	r4, [r4, #4]
 8001282:	429c      	cmp	r4, r3
 8001284:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8001288:	d1fa      	bne.n	8001280 <chSysIntegrityCheckI+0x20>
 800128a:	bb82      	cbnz	r2, 80012ee <chSysIntegrityCheckI+0x8e>
 800128c:	0783      	lsls	r3, r0, #30
 800128e:	d513      	bpl.n	80012b8 <chSysIntegrityCheckI+0x58>
 8001290:	4c1e      	ldr	r4, [pc, #120]	; (800130c <chSysIntegrityCheckI+0xac>)
 8001292:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8001296:	341c      	adds	r4, #28
 8001298:	42a2      	cmp	r2, r4
 800129a:	d02f      	beq.n	80012fc <chSysIntegrityCheckI+0x9c>
 800129c:	2300      	movs	r3, #0
 800129e:	6812      	ldr	r2, [r2, #0]
 80012a0:	42a2      	cmp	r2, r4
 80012a2:	f103 0301 	add.w	r3, r3, #1
 80012a6:	d1fa      	bne.n	800129e <chSysIntegrityCheckI+0x3e>
 80012a8:	4291      	cmp	r1, r2
 80012aa:	d020      	beq.n	80012ee <chSysIntegrityCheckI+0x8e>
 80012ac:	6849      	ldr	r1, [r1, #4]
 80012ae:	42a1      	cmp	r1, r4
 80012b0:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 80012b4:	d1fa      	bne.n	80012ac <chSysIntegrityCheckI+0x4c>
 80012b6:	b9d3      	cbnz	r3, 80012ee <chSysIntegrityCheckI+0x8e>
 80012b8:	f010 0004 	ands.w	r0, r0, #4
 80012bc:	d015      	beq.n	80012ea <chSysIntegrityCheckI+0x8a>
 80012be:	4b13      	ldr	r3, [pc, #76]	; (800130c <chSysIntegrityCheckI+0xac>)
 80012c0:	e9d3 2104 	ldrd	r2, r1, [r3, #16]
 80012c4:	429a      	cmp	r2, r3
 80012c6:	f04f 0000 	mov.w	r0, #0
 80012ca:	d01b      	beq.n	8001304 <chSysIntegrityCheckI+0xa4>
 80012cc:	6912      	ldr	r2, [r2, #16]
 80012ce:	429a      	cmp	r2, r3
 80012d0:	f100 0001 	add.w	r0, r0, #1
 80012d4:	d1fa      	bne.n	80012cc <chSysIntegrityCheckI+0x6c>
 80012d6:	4291      	cmp	r1, r2
 80012d8:	d009      	beq.n	80012ee <chSysIntegrityCheckI+0x8e>
 80012da:	6949      	ldr	r1, [r1, #20]
 80012dc:	4299      	cmp	r1, r3
 80012de:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 80012e2:	d1fa      	bne.n	80012da <chSysIntegrityCheckI+0x7a>
 80012e4:	3000      	adds	r0, #0
 80012e6:	bf18      	it	ne
 80012e8:	2001      	movne	r0, #1
 80012ea:	bc10      	pop	{r4}
 80012ec:	4770      	bx	lr
 80012ee:	2001      	movs	r0, #1
 80012f0:	bc10      	pop	{r4}
 80012f2:	4770      	bx	lr
 80012f4:	429c      	cmp	r4, r3
 80012f6:	d0c9      	beq.n	800128c <chSysIntegrityCheckI+0x2c>
 80012f8:	2200      	movs	r2, #0
 80012fa:	e7c1      	b.n	8001280 <chSysIntegrityCheckI+0x20>
 80012fc:	42a1      	cmp	r1, r4
 80012fe:	d0db      	beq.n	80012b8 <chSysIntegrityCheckI+0x58>
 8001300:	2300      	movs	r3, #0
 8001302:	e7d3      	b.n	80012ac <chSysIntegrityCheckI+0x4c>
 8001304:	4291      	cmp	r1, r2
 8001306:	d1e8      	bne.n	80012da <chSysIntegrityCheckI+0x7a>
 8001308:	e7ef      	b.n	80012ea <chSysIntegrityCheckI+0x8a>
 800130a:	bf00      	nop
 800130c:	20000938 	.word	0x20000938

08001310 <sys3_execute>:
 8001310:	b538      	push	{r3, r4, r5, lr}
 8001312:	2420      	movs	r4, #32
 8001314:	f384 8811 	msr	BASEPRI, r4
 8001318:	2001      	movs	r0, #1
 800131a:	f7ff ffa1 	bl	8001260 <chSysIntegrityCheckI>
 800131e:	2300      	movs	r3, #0
 8001320:	f383 8811 	msr	BASEPRI, r3
 8001324:	f080 0101 	eor.w	r1, r0, #1
 8001328:	b2c9      	uxtb	r1, r1
 800132a:	2001      	movs	r0, #1
 800132c:	f7ff fa70 	bl	8000810 <_test_assert>
 8001330:	b100      	cbz	r0, 8001334 <sys3_execute+0x24>
 8001332:	bd38      	pop	{r3, r4, r5, pc}
 8001334:	4605      	mov	r5, r0
 8001336:	f384 8811 	msr	BASEPRI, r4
 800133a:	2002      	movs	r0, #2
 800133c:	f7ff ff90 	bl	8001260 <chSysIntegrityCheckI>
 8001340:	f385 8811 	msr	BASEPRI, r5
 8001344:	f080 0101 	eor.w	r1, r0, #1
 8001348:	b2c9      	uxtb	r1, r1
 800134a:	2002      	movs	r0, #2
 800134c:	f7ff fa60 	bl	8000810 <_test_assert>
 8001350:	4605      	mov	r5, r0
 8001352:	2800      	cmp	r0, #0
 8001354:	d1ed      	bne.n	8001332 <sys3_execute+0x22>
 8001356:	f384 8811 	msr	BASEPRI, r4
 800135a:	2004      	movs	r0, #4
 800135c:	f7ff ff80 	bl	8001260 <chSysIntegrityCheckI>
 8001360:	f385 8811 	msr	BASEPRI, r5
 8001364:	f080 0101 	eor.w	r1, r0, #1
 8001368:	b2c9      	uxtb	r1, r1
 800136a:	2003      	movs	r0, #3
 800136c:	f7ff fa50 	bl	8000810 <_test_assert>
 8001370:	4605      	mov	r5, r0
 8001372:	2800      	cmp	r0, #0
 8001374:	d1dd      	bne.n	8001332 <sys3_execute+0x22>
 8001376:	f384 8811 	msr	BASEPRI, r4
 800137a:	2008      	movs	r0, #8
 800137c:	f7ff ff70 	bl	8001260 <chSysIntegrityCheckI>
 8001380:	f385 8811 	msr	BASEPRI, r5
 8001384:	f080 0101 	eor.w	r1, r0, #1
 8001388:	b2c9      	uxtb	r1, r1
 800138a:	2004      	movs	r0, #4
 800138c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001390:	f7ff ba3e 	b.w	8000810 <_test_assert>
	...

080013a0 <BusFault_Handler>:
 80013a0:	b672      	cpsid	i
 80013a2:	4b02      	ldr	r3, [pc, #8]	; (80013ac <BusFault_Handler+0xc>)
 80013a4:	4a02      	ldr	r2, [pc, #8]	; (80013b0 <BusFault_Handler+0x10>)
 80013a6:	62da      	str	r2, [r3, #44]	; 0x2c
 80013a8:	e7fe      	b.n	80013a8 <BusFault_Handler+0x8>
 80013aa:	bf00      	nop
 80013ac:	20000938 	.word	0x20000938
 80013b0:	08005d30 	.word	0x08005d30
	...

080013c0 <bmk13_execute>:
 80013c0:	b510      	push	{r4, lr}
 80013c2:	482f      	ldr	r0, [pc, #188]	; (8001480 <bmk13_execute+0xc0>)
 80013c4:	4c2f      	ldr	r4, [pc, #188]	; (8001484 <bmk13_execute+0xc4>)
 80013c6:	f7ff fa93 	bl	80008f0 <test_print>
 80013ca:	f44f 70a8 	mov.w	r0, #336	; 0x150
 80013ce:	f7ff f967 	bl	80006a0 <test_printn.part.1>
 80013d2:	4620      	mov	r0, r4
 80013d4:	f7ff fa6c 	bl	80008b0 <test_println>
 80013d8:	482b      	ldr	r0, [pc, #172]	; (8001488 <bmk13_execute+0xc8>)
 80013da:	f7ff fa89 	bl	80008f0 <test_print>
 80013de:	2044      	movs	r0, #68	; 0x44
 80013e0:	f7ff f95e 	bl	80006a0 <test_printn.part.1>
 80013e4:	4620      	mov	r0, r4
 80013e6:	f7ff fa63 	bl	80008b0 <test_println>
 80013ea:	4828      	ldr	r0, [pc, #160]	; (800148c <bmk13_execute+0xcc>)
 80013ec:	f7ff fa80 	bl	80008f0 <test_print>
 80013f0:	2014      	movs	r0, #20
 80013f2:	f7ff f955 	bl	80006a0 <test_printn.part.1>
 80013f6:	4620      	mov	r0, r4
 80013f8:	f7ff fa5a 	bl	80008b0 <test_println>
 80013fc:	4824      	ldr	r0, [pc, #144]	; (8001490 <bmk13_execute+0xd0>)
 80013fe:	f7ff fa77 	bl	80008f0 <test_print>
 8001402:	200c      	movs	r0, #12
 8001404:	f7ff f94c 	bl	80006a0 <test_printn.part.1>
 8001408:	4620      	mov	r0, r4
 800140a:	f7ff fa51 	bl	80008b0 <test_println>
 800140e:	4821      	ldr	r0, [pc, #132]	; (8001494 <bmk13_execute+0xd4>)
 8001410:	f7ff fa6e 	bl	80008f0 <test_print>
 8001414:	2004      	movs	r0, #4
 8001416:	f7ff f943 	bl	80006a0 <test_printn.part.1>
 800141a:	4620      	mov	r0, r4
 800141c:	f7ff fa48 	bl	80008b0 <test_println>
 8001420:	481d      	ldr	r0, [pc, #116]	; (8001498 <bmk13_execute+0xd8>)
 8001422:	f7ff fa65 	bl	80008f0 <test_print>
 8001426:	2014      	movs	r0, #20
 8001428:	f7ff f93a 	bl	80006a0 <test_printn.part.1>
 800142c:	4620      	mov	r0, r4
 800142e:	f7ff fa3f 	bl	80008b0 <test_println>
 8001432:	481a      	ldr	r0, [pc, #104]	; (800149c <bmk13_execute+0xdc>)
 8001434:	f7ff fa5c 	bl	80008f0 <test_print>
 8001438:	2010      	movs	r0, #16
 800143a:	f7ff f931 	bl	80006a0 <test_printn.part.1>
 800143e:	4620      	mov	r0, r4
 8001440:	f7ff fa36 	bl	80008b0 <test_println>
 8001444:	4816      	ldr	r0, [pc, #88]	; (80014a0 <bmk13_execute+0xe0>)
 8001446:	f7ff fa53 	bl	80008f0 <test_print>
 800144a:	2008      	movs	r0, #8
 800144c:	f7ff f928 	bl	80006a0 <test_printn.part.1>
 8001450:	4620      	mov	r0, r4
 8001452:	f7ff fa2d 	bl	80008b0 <test_println>
 8001456:	4813      	ldr	r0, [pc, #76]	; (80014a4 <bmk13_execute+0xe4>)
 8001458:	f7ff fa4a 	bl	80008f0 <test_print>
 800145c:	2024      	movs	r0, #36	; 0x24
 800145e:	f7ff f91f 	bl	80006a0 <test_printn.part.1>
 8001462:	4620      	mov	r0, r4
 8001464:	f7ff fa24 	bl	80008b0 <test_println>
 8001468:	480f      	ldr	r0, [pc, #60]	; (80014a8 <bmk13_execute+0xe8>)
 800146a:	f7ff fa41 	bl	80008f0 <test_print>
 800146e:	2028      	movs	r0, #40	; 0x28
 8001470:	f7ff f916 	bl	80006a0 <test_printn.part.1>
 8001474:	4620      	mov	r0, r4
 8001476:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800147a:	f7ff ba19 	b.w	80008b0 <test_println>
 800147e:	bf00      	nop
 8001480:	08005d90 	.word	0x08005d90
 8001484:	08005da0 	.word	0x08005da0
 8001488:	08005da8 	.word	0x08005da8
 800148c:	08005db8 	.word	0x08005db8
 8001490:	08005dc8 	.word	0x08005dc8
 8001494:	08005dd8 	.word	0x08005dd8
 8001498:	08005de8 	.word	0x08005de8
 800149c:	08005df8 	.word	0x08005df8
 80014a0:	08005e08 	.word	0x08005e08
 80014a4:	08005e18 	.word	0x08005e18
 80014a8:	08005e28 	.word	0x08005e28
 80014ac:	00000000 	.word	0x00000000

080014b0 <chThdYield>:
 80014b0:	b538      	push	{r3, r4, r5, lr}
 80014b2:	2320      	movs	r3, #32
 80014b4:	f383 8811 	msr	BASEPRI, r3
 80014b8:	4a11      	ldr	r2, [pc, #68]	; (8001500 <chThdYield+0x50>)
 80014ba:	6810      	ldr	r0, [r2, #0]
 80014bc:	6994      	ldr	r4, [r2, #24]
 80014be:	6883      	ldr	r3, [r0, #8]
 80014c0:	68a1      	ldr	r1, [r4, #8]
 80014c2:	428b      	cmp	r3, r1
 80014c4:	d203      	bcs.n	80014ce <chThdYield+0x1e>
 80014c6:	2300      	movs	r3, #0
 80014c8:	f383 8811 	msr	BASEPRI, r3
 80014cc:	bd38      	pop	{r3, r4, r5, pc}
 80014ce:	6803      	ldr	r3, [r0, #0]
 80014d0:	6013      	str	r3, [r2, #0]
 80014d2:	605a      	str	r2, [r3, #4]
 80014d4:	2501      	movs	r5, #1
 80014d6:	6190      	str	r0, [r2, #24]
 80014d8:	2200      	movs	r2, #0
 80014da:	7705      	strb	r5, [r0, #28]
 80014dc:	7722      	strb	r2, [r4, #28]
 80014de:	e000      	b.n	80014e2 <chThdYield+0x32>
 80014e0:	681b      	ldr	r3, [r3, #0]
 80014e2:	689a      	ldr	r2, [r3, #8]
 80014e4:	4291      	cmp	r1, r2
 80014e6:	d9fb      	bls.n	80014e0 <chThdYield+0x30>
 80014e8:	685a      	ldr	r2, [r3, #4]
 80014ea:	4621      	mov	r1, r4
 80014ec:	e9c4 3200 	strd	r3, r2, [r4]
 80014f0:	6014      	str	r4, [r2, #0]
 80014f2:	605c      	str	r4, [r3, #4]
 80014f4:	f7fe feb4 	bl	8000260 <_port_switch>
 80014f8:	2300      	movs	r3, #0
 80014fa:	f383 8811 	msr	BASEPRI, r3
 80014fe:	bd38      	pop	{r3, r4, r5, pc}
 8001500:	20000938 	.word	0x20000938
	...

08001510 <thread8>:
 8001510:	b538      	push	{r3, r4, r5, lr}
 8001512:	4d09      	ldr	r5, [pc, #36]	; (8001538 <thread8+0x28>)
 8001514:	4604      	mov	r4, r0
 8001516:	f7ff ffcb 	bl	80014b0 <chThdYield>
 800151a:	f7ff ffc9 	bl	80014b0 <chThdYield>
 800151e:	f7ff ffc7 	bl	80014b0 <chThdYield>
 8001522:	f7ff ffc5 	bl	80014b0 <chThdYield>
 8001526:	6823      	ldr	r3, [r4, #0]
 8001528:	69aa      	ldr	r2, [r5, #24]
 800152a:	3304      	adds	r3, #4
 800152c:	6023      	str	r3, [r4, #0]
 800152e:	7f53      	ldrb	r3, [r2, #29]
 8001530:	075b      	lsls	r3, r3, #29
 8001532:	d5f0      	bpl.n	8001516 <thread8+0x6>
 8001534:	bd38      	pop	{r3, r4, r5, pc}
 8001536:	bf00      	nop
 8001538:	20000938 	.word	0x20000938
 800153c:	00000000 	.word	0x00000000

08001540 <chSchDoRescheduleAhead>:
 8001540:	4a0d      	ldr	r2, [pc, #52]	; (8001578 <chSchDoRescheduleAhead+0x38>)
 8001542:	6810      	ldr	r0, [r2, #0]
 8001544:	b430      	push	{r4, r5}
 8001546:	6803      	ldr	r3, [r0, #0]
 8001548:	6994      	ldr	r4, [r2, #24]
 800154a:	6013      	str	r3, [r2, #0]
 800154c:	68a1      	ldr	r1, [r4, #8]
 800154e:	605a      	str	r2, [r3, #4]
 8001550:	2501      	movs	r5, #1
 8001552:	6190      	str	r0, [r2, #24]
 8001554:	2200      	movs	r2, #0
 8001556:	7705      	strb	r5, [r0, #28]
 8001558:	7722      	strb	r2, [r4, #28]
 800155a:	e000      	b.n	800155e <chSchDoRescheduleAhead+0x1e>
 800155c:	681b      	ldr	r3, [r3, #0]
 800155e:	689a      	ldr	r2, [r3, #8]
 8001560:	4291      	cmp	r1, r2
 8001562:	d3fb      	bcc.n	800155c <chSchDoRescheduleAhead+0x1c>
 8001564:	685a      	ldr	r2, [r3, #4]
 8001566:	4621      	mov	r1, r4
 8001568:	e9c4 3200 	strd	r3, r2, [r4]
 800156c:	6014      	str	r4, [r2, #0]
 800156e:	605c      	str	r4, [r3, #4]
 8001570:	bc30      	pop	{r4, r5}
 8001572:	f7fe be75 	b.w	8000260 <_port_switch>
 8001576:	bf00      	nop
 8001578:	20000938 	.word	0x20000938
 800157c:	00000000 	.word	0x00000000

08001580 <chSchRescheduleS>:
 8001580:	4b04      	ldr	r3, [pc, #16]	; (8001594 <chSchRescheduleS+0x14>)
 8001582:	681a      	ldr	r2, [r3, #0]
 8001584:	699b      	ldr	r3, [r3, #24]
 8001586:	6892      	ldr	r2, [r2, #8]
 8001588:	689b      	ldr	r3, [r3, #8]
 800158a:	429a      	cmp	r2, r3
 800158c:	d800      	bhi.n	8001590 <chSchRescheduleS+0x10>
 800158e:	4770      	bx	lr
 8001590:	f7ff bfd6 	b.w	8001540 <chSchDoRescheduleAhead>
 8001594:	20000938 	.word	0x20000938
	...

080015a0 <thread4.lto_priv.73>:
 80015a0:	b508      	push	{r3, lr}
 80015a2:	2220      	movs	r2, #32
 80015a4:	f382 8811 	msr	BASEPRI, r2
 80015a8:	6883      	ldr	r3, [r0, #8]
 80015aa:	2b00      	cmp	r3, #0
 80015ac:	dd05      	ble.n	80015ba <thread4.lto_priv.73+0x1a>
 80015ae:	f7ff ffe7 	bl	8001580 <chSchRescheduleS>
 80015b2:	2300      	movs	r3, #0
 80015b4:	f383 8811 	msr	BASEPRI, r3
 80015b8:	bd08      	pop	{r3, pc}
 80015ba:	f7ff fd29 	bl	8001010 <chSemSignalI>
 80015be:	f7ff ffdf 	bl	8001580 <chSchRescheduleS>
 80015c2:	2300      	movs	r3, #0
 80015c4:	f383 8811 	msr	BASEPRI, r3
 80015c8:	bd08      	pop	{r3, pc}
 80015ca:	bf00      	nop
 80015cc:	0000      	movs	r0, r0
	...

080015d0 <chMtxUnlockAll>:
 80015d0:	4a13      	ldr	r2, [pc, #76]	; (8001620 <chMtxUnlockAll+0x50>)
 80015d2:	b570      	push	{r4, r5, r6, lr}
 80015d4:	2320      	movs	r3, #32
 80015d6:	6994      	ldr	r4, [r2, #24]
 80015d8:	f383 8811 	msr	BASEPRI, r3
 80015dc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80015de:	b1b3      	cbz	r3, 800160e <chMtxUnlockAll+0x3e>
 80015e0:	2600      	movs	r6, #0
 80015e2:	681a      	ldr	r2, [r3, #0]
 80015e4:	68d9      	ldr	r1, [r3, #12]
 80015e6:	63a1      	str	r1, [r4, #56]	; 0x38
 80015e8:	4293      	cmp	r3, r2
 80015ea:	4610      	mov	r0, r2
 80015ec:	d013      	beq.n	8001616 <chMtxUnlockAll+0x46>
 80015ee:	6b95      	ldr	r5, [r2, #56]	; 0x38
 80015f0:	6811      	ldr	r1, [r2, #0]
 80015f2:	6019      	str	r1, [r3, #0]
 80015f4:	604b      	str	r3, [r1, #4]
 80015f6:	e9c3 2502 	strd	r2, r5, [r3, #8]
 80015fa:	6393      	str	r3, [r2, #56]	; 0x38
 80015fc:	f7ff fb98 	bl	8000d30 <chSchReadyI>
 8001600:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001602:	2b00      	cmp	r3, #0
 8001604:	d1ed      	bne.n	80015e2 <chMtxUnlockAll+0x12>
 8001606:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8001608:	60a3      	str	r3, [r4, #8]
 800160a:	f7ff ffb9 	bl	8001580 <chSchRescheduleS>
 800160e:	2300      	movs	r3, #0
 8001610:	f383 8811 	msr	BASEPRI, r3
 8001614:	bd70      	pop	{r4, r5, r6, pc}
 8001616:	609e      	str	r6, [r3, #8]
 8001618:	460b      	mov	r3, r1
 800161a:	2b00      	cmp	r3, #0
 800161c:	d1e1      	bne.n	80015e2 <chMtxUnlockAll+0x12>
 800161e:	e7f2      	b.n	8001606 <chMtxUnlockAll+0x36>
 8001620:	20000938 	.word	0x20000938
	...

08001630 <chThdSetPriority>:
 8001630:	b510      	push	{r4, lr}
 8001632:	2320      	movs	r3, #32
 8001634:	f383 8811 	msr	BASEPRI, r3
 8001638:	4b08      	ldr	r3, [pc, #32]	; (800165c <chThdSetPriority+0x2c>)
 800163a:	699b      	ldr	r3, [r3, #24]
 800163c:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800163e:	6899      	ldr	r1, [r3, #8]
 8001640:	42a1      	cmp	r1, r4
 8001642:	d001      	beq.n	8001648 <chThdSetPriority+0x18>
 8001644:	4281      	cmp	r1, r0
 8001646:	d200      	bcs.n	800164a <chThdSetPriority+0x1a>
 8001648:	6098      	str	r0, [r3, #8]
 800164a:	63d8      	str	r0, [r3, #60]	; 0x3c
 800164c:	f7ff ff98 	bl	8001580 <chSchRescheduleS>
 8001650:	2300      	movs	r3, #0
 8001652:	f383 8811 	msr	BASEPRI, r3
 8001656:	4620      	mov	r0, r4
 8001658:	bd10      	pop	{r4, pc}
 800165a:	bf00      	nop
 800165c:	20000938 	.word	0x20000938

08001660 <thd3_execute>:
 8001660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001662:	4e49      	ldr	r6, [pc, #292]	; (8001788 <thd3_execute+0x128>)
 8001664:	69b3      	ldr	r3, [r6, #24]
 8001666:	689c      	ldr	r4, [r3, #8]
 8001668:	1c65      	adds	r5, r4, #1
 800166a:	4628      	mov	r0, r5
 800166c:	f7ff ffe0 	bl	8001630 <chThdSetPriority>
 8001670:	1b01      	subs	r1, r0, r4
 8001672:	fab1 f181 	clz	r1, r1
 8001676:	4607      	mov	r7, r0
 8001678:	0949      	lsrs	r1, r1, #5
 800167a:	2001      	movs	r0, #1
 800167c:	f7ff f8c8 	bl	8000810 <_test_assert>
 8001680:	b100      	cbz	r0, 8001684 <thd3_execute+0x24>
 8001682:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001684:	69b3      	ldr	r3, [r6, #24]
 8001686:	6899      	ldr	r1, [r3, #8]
 8001688:	1b49      	subs	r1, r1, r5
 800168a:	fab1 f181 	clz	r1, r1
 800168e:	2002      	movs	r0, #2
 8001690:	0949      	lsrs	r1, r1, #5
 8001692:	f7ff f8bd 	bl	8000810 <_test_assert>
 8001696:	2800      	cmp	r0, #0
 8001698:	d1f3      	bne.n	8001682 <thd3_execute+0x22>
 800169a:	4638      	mov	r0, r7
 800169c:	f7ff ffc8 	bl	8001630 <chThdSetPriority>
 80016a0:	1a29      	subs	r1, r5, r0
 80016a2:	fab1 f181 	clz	r1, r1
 80016a6:	0949      	lsrs	r1, r1, #5
 80016a8:	2003      	movs	r0, #3
 80016aa:	f7ff f8b1 	bl	8000810 <_test_assert>
 80016ae:	2800      	cmp	r0, #0
 80016b0:	d1e7      	bne.n	8001682 <thd3_execute+0x22>
 80016b2:	69b3      	ldr	r3, [r6, #24]
 80016b4:	6899      	ldr	r1, [r3, #8]
 80016b6:	1b09      	subs	r1, r1, r4
 80016b8:	fab1 f181 	clz	r1, r1
 80016bc:	2004      	movs	r0, #4
 80016be:	0949      	lsrs	r1, r1, #5
 80016c0:	f7ff f8a6 	bl	8000810 <_test_assert>
 80016c4:	2800      	cmp	r0, #0
 80016c6:	d1dc      	bne.n	8001682 <thd3_execute+0x22>
 80016c8:	2320      	movs	r3, #32
 80016ca:	f383 8811 	msr	BASEPRI, r3
 80016ce:	69b2      	ldr	r2, [r6, #24]
 80016d0:	6893      	ldr	r3, [r2, #8]
 80016d2:	3302      	adds	r3, #2
 80016d4:	6093      	str	r3, [r2, #8]
 80016d6:	f380 8811 	msr	BASEPRI, r0
 80016da:	69b3      	ldr	r3, [r6, #24]
 80016dc:	6899      	ldr	r1, [r3, #8]
 80016de:	1ca7      	adds	r7, r4, #2
 80016e0:	1bc9      	subs	r1, r1, r7
 80016e2:	fab1 f181 	clz	r1, r1
 80016e6:	0949      	lsrs	r1, r1, #5
 80016e8:	2005      	movs	r0, #5
 80016ea:	f7ff f891 	bl	8000810 <_test_assert>
 80016ee:	2800      	cmp	r0, #0
 80016f0:	d1c7      	bne.n	8001682 <thd3_execute+0x22>
 80016f2:	4628      	mov	r0, r5
 80016f4:	f7ff ff9c 	bl	8001630 <chThdSetPriority>
 80016f8:	1b01      	subs	r1, r0, r4
 80016fa:	fab1 f181 	clz	r1, r1
 80016fe:	0949      	lsrs	r1, r1, #5
 8001700:	2006      	movs	r0, #6
 8001702:	f7ff f885 	bl	8000810 <_test_assert>
 8001706:	2800      	cmp	r0, #0
 8001708:	d1bb      	bne.n	8001682 <thd3_execute+0x22>
 800170a:	69b3      	ldr	r3, [r6, #24]
 800170c:	6899      	ldr	r1, [r3, #8]
 800170e:	1bc9      	subs	r1, r1, r7
 8001710:	fab1 f181 	clz	r1, r1
 8001714:	0949      	lsrs	r1, r1, #5
 8001716:	2007      	movs	r0, #7
 8001718:	f7ff f87a 	bl	8000810 <_test_assert>
 800171c:	2800      	cmp	r0, #0
 800171e:	d1b0      	bne.n	8001682 <thd3_execute+0x22>
 8001720:	69b3      	ldr	r3, [r6, #24]
 8001722:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001724:	1b4f      	subs	r7, r1, r5
 8001726:	4279      	negs	r1, r7
 8001728:	4179      	adcs	r1, r7
 800172a:	2008      	movs	r0, #8
 800172c:	f7ff f870 	bl	8000810 <_test_assert>
 8001730:	2800      	cmp	r0, #0
 8001732:	d1a6      	bne.n	8001682 <thd3_execute+0x22>
 8001734:	1ce7      	adds	r7, r4, #3
 8001736:	4638      	mov	r0, r7
 8001738:	f7ff ff7a 	bl	8001630 <chThdSetPriority>
 800173c:	1a28      	subs	r0, r5, r0
 800173e:	4241      	negs	r1, r0
 8001740:	4141      	adcs	r1, r0
 8001742:	2009      	movs	r0, #9
 8001744:	f7ff f864 	bl	8000810 <_test_assert>
 8001748:	2800      	cmp	r0, #0
 800174a:	d19a      	bne.n	8001682 <thd3_execute+0x22>
 800174c:	69b3      	ldr	r3, [r6, #24]
 800174e:	6899      	ldr	r1, [r3, #8]
 8001750:	1bca      	subs	r2, r1, r7
 8001752:	4251      	negs	r1, r2
 8001754:	4151      	adcs	r1, r2
 8001756:	200a      	movs	r0, #10
 8001758:	f7ff f85a 	bl	8000810 <_test_assert>
 800175c:	2800      	cmp	r0, #0
 800175e:	d190      	bne.n	8001682 <thd3_execute+0x22>
 8001760:	69b3      	ldr	r3, [r6, #24]
 8001762:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001764:	1bcb      	subs	r3, r1, r7
 8001766:	4259      	negs	r1, r3
 8001768:	4159      	adcs	r1, r3
 800176a:	200b      	movs	r0, #11
 800176c:	f7ff f850 	bl	8000810 <_test_assert>
 8001770:	2800      	cmp	r0, #0
 8001772:	d186      	bne.n	8001682 <thd3_execute+0x22>
 8001774:	2320      	movs	r3, #32
 8001776:	f383 8811 	msr	BASEPRI, r3
 800177a:	69b3      	ldr	r3, [r6, #24]
 800177c:	609c      	str	r4, [r3, #8]
 800177e:	63dc      	str	r4, [r3, #60]	; 0x3c
 8001780:	f380 8811 	msr	BASEPRI, r0
 8001784:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001786:	bf00      	nop
 8001788:	20000938 	.word	0x20000938
 800178c:	00000000 	.word	0x00000000

08001790 <chSysRestoreStatusX.part.3>:
 8001790:	b510      	push	{r4, lr}
 8001792:	f3ef 8405 	mrs	r4, IPSR
 8001796:	f3c4 0408 	ubfx	r4, r4, #0, #9
 800179a:	b11c      	cbz	r4, 80017a4 <chSysRestoreStatusX.part.3+0x14>
 800179c:	2300      	movs	r3, #0
 800179e:	f383 8811 	msr	BASEPRI, r3
 80017a2:	bd10      	pop	{r4, pc}
 80017a4:	f7ff feec 	bl	8001580 <chSchRescheduleS>
 80017a8:	f384 8811 	msr	BASEPRI, r4
 80017ac:	bd10      	pop	{r4, pc}
 80017ae:	bf00      	nop

080017b0 <vtcb>:
 80017b0:	b508      	push	{r3, lr}
 80017b2:	2320      	movs	r3, #32
 80017b4:	f383 8811 	msr	BASEPRI, r3
 80017b8:	2200      	movs	r2, #0
 80017ba:	f382 8811 	msr	BASEPRI, r2
 80017be:	f383 8811 	msr	BASEPRI, r3
 80017c2:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 80017c6:	b91b      	cbnz	r3, 80017d0 <vtcb+0x20>
 80017c8:	f7ff fd42 	bl	8001250 <chSysGetStatusAndLockX.part.2>
 80017cc:	f7ff ffe0 	bl	8001790 <chSysRestoreStatusX.part.3>
 80017d0:	2300      	movs	r3, #0
 80017d2:	f383 8811 	msr	BASEPRI, r3
 80017d6:	bd08      	pop	{r3, pc}
	...

080017e0 <chSchWakeupS>:
 80017e0:	4b14      	ldr	r3, [pc, #80]	; (8001834 <chSchWakeupS+0x54>)
 80017e2:	b470      	push	{r4, r5, r6}
 80017e4:	699e      	ldr	r6, [r3, #24]
 80017e6:	6885      	ldr	r5, [r0, #8]
 80017e8:	4604      	mov	r4, r0
 80017ea:	68b0      	ldr	r0, [r6, #8]
 80017ec:	6221      	str	r1, [r4, #32]
 80017ee:	4285      	cmp	r5, r0
 80017f0:	f04f 0200 	mov.w	r2, #0
 80017f4:	d80b      	bhi.n	800180e <chSchWakeupS+0x2e>
 80017f6:	7722      	strb	r2, [r4, #28]
 80017f8:	681b      	ldr	r3, [r3, #0]
 80017fa:	689a      	ldr	r2, [r3, #8]
 80017fc:	4295      	cmp	r5, r2
 80017fe:	d9fb      	bls.n	80017f8 <chSchWakeupS+0x18>
 8001800:	685a      	ldr	r2, [r3, #4]
 8001802:	e9c4 3200 	strd	r3, r2, [r4]
 8001806:	6014      	str	r4, [r2, #0]
 8001808:	605c      	str	r4, [r3, #4]
 800180a:	bc70      	pop	{r4, r5, r6}
 800180c:	4770      	bx	lr
 800180e:	7732      	strb	r2, [r6, #28]
 8001810:	461a      	mov	r2, r3
 8001812:	6812      	ldr	r2, [r2, #0]
 8001814:	6891      	ldr	r1, [r2, #8]
 8001816:	4288      	cmp	r0, r1
 8001818:	d9fb      	bls.n	8001812 <chSchWakeupS+0x32>
 800181a:	6851      	ldr	r1, [r2, #4]
 800181c:	6071      	str	r1, [r6, #4]
 800181e:	2001      	movs	r0, #1
 8001820:	6032      	str	r2, [r6, #0]
 8001822:	600e      	str	r6, [r1, #0]
 8001824:	6056      	str	r6, [r2, #4]
 8001826:	7720      	strb	r0, [r4, #28]
 8001828:	4631      	mov	r1, r6
 800182a:	4620      	mov	r0, r4
 800182c:	619c      	str	r4, [r3, #24]
 800182e:	bc70      	pop	{r4, r5, r6}
 8001830:	f7fe bd16 	b.w	8000260 <_port_switch>
 8001834:	20000938 	.word	0x20000938
	...

08001840 <chThdCreateFromMemoryPool.constprop.52>:
 8001840:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001844:	4e1d      	ldr	r6, [pc, #116]	; (80018bc <chThdCreateFromMemoryPool.constprop.52+0x7c>)
 8001846:	4607      	mov	r7, r0
 8001848:	4630      	mov	r0, r6
 800184a:	4688      	mov	r8, r1
 800184c:	f7ff f8f8 	bl	8000a40 <chPoolAlloc>
 8001850:	4604      	mov	r4, r0
 8001852:	b380      	cbz	r0, 80018b6 <chThdCreateFromMemoryPool.constprop.52+0x76>
 8001854:	2320      	movs	r3, #32
 8001856:	f383 8811 	msr	BASEPRI, r3
 800185a:	6873      	ldr	r3, [r6, #4]
 800185c:	4a18      	ldr	r2, [pc, #96]	; (80018c0 <chThdCreateFromMemoryPool.constprop.52+0x80>)
 800185e:	4919      	ldr	r1, [pc, #100]	; (80018c4 <chThdCreateFromMemoryPool.constprop.52+0x84>)
 8001860:	3b24      	subs	r3, #36	; 0x24
 8001862:	18c5      	adds	r5, r0, r3
 8001864:	60c5      	str	r5, [r0, #12]
 8001866:	50c2      	str	r2, [r0, r3]
 8001868:	4a17      	ldr	r2, [pc, #92]	; (80018c8 <chThdCreateFromMemoryPool.constprop.52+0x88>)
 800186a:	f8c5 8004 	str.w	r8, [r5, #4]
 800186e:	6229      	str	r1, [r5, #32]
 8001870:	6102      	str	r2, [r0, #16]
 8001872:	f8d2 e014 	ldr.w	lr, [r2, #20]
 8001876:	f8c0 e014 	str.w	lr, [r0, #20]
 800187a:	2301      	movs	r3, #1
 800187c:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8001880:	f04f 0c02 	mov.w	ip, #2
 8001884:	2500      	movs	r5, #0
 8001886:	7783      	strb	r3, [r0, #30]
 8001888:	f100 0328 	add.w	r3, r0, #40	; 0x28
 800188c:	6087      	str	r7, [r0, #8]
 800188e:	63c7      	str	r7, [r0, #60]	; 0x3c
 8001890:	f880 c01c 	strb.w	ip, [r0, #28]
 8001894:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8001898:	6185      	str	r5, [r0, #24]
 800189a:	f8ce 0010 	str.w	r0, [lr, #16]
 800189e:	6241      	str	r1, [r0, #36]	; 0x24
 80018a0:	f880 c01d 	strb.w	ip, [r0, #29]
 80018a4:	6406      	str	r6, [r0, #64]	; 0x40
 80018a6:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80018aa:	4629      	mov	r1, r5
 80018ac:	6150      	str	r0, [r2, #20]
 80018ae:	f7ff ff97 	bl	80017e0 <chSchWakeupS>
 80018b2:	f385 8811 	msr	BASEPRI, r5
 80018b6:	4620      	mov	r0, r4
 80018b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80018bc:	20000b10 	.word	0x20000b10
 80018c0:	080008a1 	.word	0x080008a1
 80018c4:	08000271 	.word	0x08000271
 80018c8:	20000938 	.word	0x20000938
 80018cc:	00000000 	.word	0x00000000

080018d0 <chCondSignal.constprop.44>:
 80018d0:	b508      	push	{r3, lr}
 80018d2:	2320      	movs	r3, #32
 80018d4:	f383 8811 	msr	BASEPRI, r3
 80018d8:	4b06      	ldr	r3, [pc, #24]	; (80018f4 <chCondSignal.constprop.44+0x24>)
 80018da:	6818      	ldr	r0, [r3, #0]
 80018dc:	4298      	cmp	r0, r3
 80018de:	d005      	beq.n	80018ec <chCondSignal.constprop.44+0x1c>
 80018e0:	6802      	ldr	r2, [r0, #0]
 80018e2:	601a      	str	r2, [r3, #0]
 80018e4:	6053      	str	r3, [r2, #4]
 80018e6:	2100      	movs	r1, #0
 80018e8:	f7ff ff7a 	bl	80017e0 <chSchWakeupS>
 80018ec:	2300      	movs	r3, #0
 80018ee:	f383 8811 	msr	BASEPRI, r3
 80018f2:	bd08      	pop	{r3, pc}
 80018f4:	20000800 	.word	0x20000800
	...

08001900 <chMtxUnlock>:
 8001900:	4b16      	ldr	r3, [pc, #88]	; (800195c <chMtxUnlock+0x5c>)
 8001902:	b570      	push	{r4, r5, r6, lr}
 8001904:	699d      	ldr	r5, [r3, #24]
 8001906:	2320      	movs	r3, #32
 8001908:	f383 8811 	msr	BASEPRI, r3
 800190c:	6804      	ldr	r4, [r0, #0]
 800190e:	68c3      	ldr	r3, [r0, #12]
 8001910:	63ab      	str	r3, [r5, #56]	; 0x38
 8001912:	4284      	cmp	r4, r0
 8001914:	d01c      	beq.n	8001950 <chMtxUnlock+0x50>
 8001916:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8001918:	b14b      	cbz	r3, 800192e <chMtxUnlock+0x2e>
 800191a:	681a      	ldr	r2, [r3, #0]
 800191c:	4293      	cmp	r3, r2
 800191e:	d003      	beq.n	8001928 <chMtxUnlock+0x28>
 8001920:	6892      	ldr	r2, [r2, #8]
 8001922:	4291      	cmp	r1, r2
 8001924:	bf38      	it	cc
 8001926:	4611      	movcc	r1, r2
 8001928:	68db      	ldr	r3, [r3, #12]
 800192a:	2b00      	cmp	r3, #0
 800192c:	d1f5      	bne.n	800191a <chMtxUnlock+0x1a>
 800192e:	4603      	mov	r3, r0
 8001930:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8001932:	6822      	ldr	r2, [r4, #0]
 8001934:	60a9      	str	r1, [r5, #8]
 8001936:	4620      	mov	r0, r4
 8001938:	601a      	str	r2, [r3, #0]
 800193a:	2100      	movs	r1, #0
 800193c:	6053      	str	r3, [r2, #4]
 800193e:	e9c3 4602 	strd	r4, r6, [r3, #8]
 8001942:	63a3      	str	r3, [r4, #56]	; 0x38
 8001944:	f7ff ff4c 	bl	80017e0 <chSchWakeupS>
 8001948:	2300      	movs	r3, #0
 800194a:	f383 8811 	msr	BASEPRI, r3
 800194e:	bd70      	pop	{r4, r5, r6, pc}
 8001950:	2300      	movs	r3, #0
 8001952:	60a3      	str	r3, [r4, #8]
 8001954:	2300      	movs	r3, #0
 8001956:	f383 8811 	msr	BASEPRI, r3
 800195a:	bd70      	pop	{r4, r5, r6, pc}
 800195c:	20000938 	.word	0x20000938

08001960 <chSemSignal>:
 8001960:	b508      	push	{r3, lr}
 8001962:	2320      	movs	r3, #32
 8001964:	f383 8811 	msr	BASEPRI, r3
 8001968:	6883      	ldr	r3, [r0, #8]
 800196a:	3301      	adds	r3, #1
 800196c:	2b00      	cmp	r3, #0
 800196e:	6083      	str	r3, [r0, #8]
 8001970:	dd03      	ble.n	800197a <chSemSignal+0x1a>
 8001972:	2300      	movs	r3, #0
 8001974:	f383 8811 	msr	BASEPRI, r3
 8001978:	bd08      	pop	{r3, pc}
 800197a:	4603      	mov	r3, r0
 800197c:	6800      	ldr	r0, [r0, #0]
 800197e:	6802      	ldr	r2, [r0, #0]
 8001980:	601a      	str	r2, [r3, #0]
 8001982:	2100      	movs	r1, #0
 8001984:	6053      	str	r3, [r2, #4]
 8001986:	f7ff ff2b 	bl	80017e0 <chSchWakeupS>
 800198a:	2300      	movs	r3, #0
 800198c:	f383 8811 	msr	BASEPRI, r3
 8001990:	bd08      	pop	{r3, pc}
 8001992:	bf00      	nop
	...

080019a0 <chThdCreateStatic>:
 80019a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019a2:	9e06      	ldr	r6, [sp, #24]
 80019a4:	4604      	mov	r4, r0
 80019a6:	2520      	movs	r5, #32
 80019a8:	f385 8811 	msr	BASEPRI, r5
 80019ac:	3924      	subs	r1, #36	; 0x24
 80019ae:	1845      	adds	r5, r0, r1
 80019b0:	60c5      	str	r5, [r0, #12]
 80019b2:	4f12      	ldr	r7, [pc, #72]	; (80019fc <chThdCreateStatic+0x5c>)
 80019b4:	5043      	str	r3, [r0, r1]
 80019b6:	4b12      	ldr	r3, [pc, #72]	; (8001a00 <chThdCreateStatic+0x60>)
 80019b8:	606e      	str	r6, [r5, #4]
 80019ba:	622f      	str	r7, [r5, #32]
 80019bc:	6103      	str	r3, [r0, #16]
 80019be:	6959      	ldr	r1, [r3, #20]
 80019c0:	63c2      	str	r2, [r0, #60]	; 0x3c
 80019c2:	6082      	str	r2, [r0, #8]
 80019c4:	2500      	movs	r5, #0
 80019c6:	f100 0228 	add.w	r2, r0, #40	; 0x28
 80019ca:	f04f 0c02 	mov.w	ip, #2
 80019ce:	f100 0624 	add.w	r6, r0, #36	; 0x24
 80019d2:	2701      	movs	r7, #1
 80019d4:	6141      	str	r1, [r0, #20]
 80019d6:	f8a0 c01c 	strh.w	ip, [r0, #28]
 80019da:	7787      	strb	r7, [r0, #30]
 80019dc:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 80019e0:	6185      	str	r5, [r0, #24]
 80019e2:	6108      	str	r0, [r1, #16]
 80019e4:	4629      	mov	r1, r5
 80019e6:	e9c0 6209 	strd	r6, r2, [r0, #36]	; 0x24
 80019ea:	62c2      	str	r2, [r0, #44]	; 0x2c
 80019ec:	6158      	str	r0, [r3, #20]
 80019ee:	f7ff fef7 	bl	80017e0 <chSchWakeupS>
 80019f2:	f385 8811 	msr	BASEPRI, r5
 80019f6:	4620      	mov	r0, r4
 80019f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80019fa:	bf00      	nop
 80019fc:	08000271 	.word	0x08000271
 8001a00:	20000938 	.word	0x20000938
	...

08001a10 <chSchGoSleepS>:
 8001a10:	4b07      	ldr	r3, [pc, #28]	; (8001a30 <chSchGoSleepS+0x20>)
 8001a12:	6999      	ldr	r1, [r3, #24]
 8001a14:	681a      	ldr	r2, [r3, #0]
 8001a16:	b410      	push	{r4}
 8001a18:	7708      	strb	r0, [r1, #28]
 8001a1a:	6810      	ldr	r0, [r2, #0]
 8001a1c:	6018      	str	r0, [r3, #0]
 8001a1e:	2401      	movs	r4, #1
 8001a20:	6043      	str	r3, [r0, #4]
 8001a22:	7714      	strb	r4, [r2, #28]
 8001a24:	4610      	mov	r0, r2
 8001a26:	bc10      	pop	{r4}
 8001a28:	619a      	str	r2, [r3, #24]
 8001a2a:	f7fe bc19 	b.w	8000260 <_port_switch>
 8001a2e:	bf00      	nop
 8001a30:	20000938 	.word	0x20000938
	...

08001a40 <chSemSignalWait.constprop.48>:
 8001a40:	b538      	push	{r3, r4, r5, lr}
 8001a42:	2320      	movs	r3, #32
 8001a44:	f383 8811 	msr	BASEPRI, r3
 8001a48:	4c15      	ldr	r4, [pc, #84]	; (8001aa0 <chSemSignalWait.constprop.48+0x60>)
 8001a4a:	68a3      	ldr	r3, [r4, #8]
 8001a4c:	3301      	adds	r3, #1
 8001a4e:	2b00      	cmp	r3, #0
 8001a50:	60a3      	str	r3, [r4, #8]
 8001a52:	dd1a      	ble.n	8001a8a <chSemSignalWait.constprop.48+0x4a>
 8001a54:	3b01      	subs	r3, #1
 8001a56:	2b00      	cmp	r3, #0
 8001a58:	60a3      	str	r3, [r4, #8]
 8001a5a:	db06      	blt.n	8001a6a <chSemSignalWait.constprop.48+0x2a>
 8001a5c:	f7ff fd90 	bl	8001580 <chSchRescheduleS>
 8001a60:	2000      	movs	r0, #0
 8001a62:	2300      	movs	r3, #0
 8001a64:	f383 8811 	msr	BASEPRI, r3
 8001a68:	bd38      	pop	{r3, r4, r5, pc}
 8001a6a:	4a0e      	ldr	r2, [pc, #56]	; (8001aa4 <chSemSignalWait.constprop.48+0x64>)
 8001a6c:	6863      	ldr	r3, [r4, #4]
 8001a6e:	6995      	ldr	r5, [r2, #24]
 8001a70:	2005      	movs	r0, #5
 8001a72:	e9c5 4300 	strd	r4, r3, [r5]
 8001a76:	601d      	str	r5, [r3, #0]
 8001a78:	622c      	str	r4, [r5, #32]
 8001a7a:	6065      	str	r5, [r4, #4]
 8001a7c:	f7ff ffc8 	bl	8001a10 <chSchGoSleepS>
 8001a80:	6a28      	ldr	r0, [r5, #32]
 8001a82:	2300      	movs	r3, #0
 8001a84:	f383 8811 	msr	BASEPRI, r3
 8001a88:	bd38      	pop	{r3, r4, r5, pc}
 8001a8a:	6820      	ldr	r0, [r4, #0]
 8001a8c:	6803      	ldr	r3, [r0, #0]
 8001a8e:	6023      	str	r3, [r4, #0]
 8001a90:	605c      	str	r4, [r3, #4]
 8001a92:	f7ff f94d 	bl	8000d30 <chSchReadyI>
 8001a96:	2200      	movs	r2, #0
 8001a98:	68a3      	ldr	r3, [r4, #8]
 8001a9a:	6202      	str	r2, [r0, #32]
 8001a9c:	e7da      	b.n	8001a54 <chSemSignalWait.constprop.48+0x14>
 8001a9e:	bf00      	nop
 8001aa0:	200008ac 	.word	0x200008ac
 8001aa4:	20000938 	.word	0x20000938
	...

08001ab0 <sem3_execute>:
 8001ab0:	b510      	push	{r4, lr}
 8001ab2:	4a1e      	ldr	r2, [pc, #120]	; (8001b2c <sem3_execute+0x7c>)
 8001ab4:	4b1e      	ldr	r3, [pc, #120]	; (8001b30 <sem3_execute+0x80>)
 8001ab6:	6992      	ldr	r2, [r2, #24]
 8001ab8:	481e      	ldr	r0, [pc, #120]	; (8001b34 <sem3_execute+0x84>)
 8001aba:	6892      	ldr	r2, [r2, #8]
 8001abc:	4c1e      	ldr	r4, [pc, #120]	; (8001b38 <sem3_execute+0x88>)
 8001abe:	b082      	sub	sp, #8
 8001ac0:	2100      	movs	r1, #0
 8001ac2:	3201      	adds	r2, #1
 8001ac4:	9100      	str	r1, [sp, #0]
 8001ac6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8001aca:	f7ff ff69 	bl	80019a0 <chThdCreateStatic>
 8001ace:	4b1b      	ldr	r3, [pc, #108]	; (8001b3c <sem3_execute+0x8c>)
 8001ad0:	6018      	str	r0, [r3, #0]
 8001ad2:	f7ff ffb5 	bl	8001a40 <chSemSignalWait.constprop.48>
 8001ad6:	6821      	ldr	r1, [r4, #0]
 8001ad8:	1b09      	subs	r1, r1, r4
 8001ada:	fab1 f181 	clz	r1, r1
 8001ade:	2001      	movs	r0, #1
 8001ae0:	0949      	lsrs	r1, r1, #5
 8001ae2:	f7fe fe95 	bl	8000810 <_test_assert>
 8001ae6:	b108      	cbz	r0, 8001aec <sem3_execute+0x3c>
 8001ae8:	b002      	add	sp, #8
 8001aea:	bd10      	pop	{r4, pc}
 8001aec:	68a1      	ldr	r1, [r4, #8]
 8001aee:	fab1 f181 	clz	r1, r1
 8001af2:	0949      	lsrs	r1, r1, #5
 8001af4:	2002      	movs	r0, #2
 8001af6:	f7fe fe8b 	bl	8000810 <_test_assert>
 8001afa:	2800      	cmp	r0, #0
 8001afc:	d1f4      	bne.n	8001ae8 <sem3_execute+0x38>
 8001afe:	f7ff ff9f 	bl	8001a40 <chSemSignalWait.constprop.48>
 8001b02:	6821      	ldr	r1, [r4, #0]
 8001b04:	1b09      	subs	r1, r1, r4
 8001b06:	fab1 f181 	clz	r1, r1
 8001b0a:	2003      	movs	r0, #3
 8001b0c:	0949      	lsrs	r1, r1, #5
 8001b0e:	f7fe fe7f 	bl	8000810 <_test_assert>
 8001b12:	2800      	cmp	r0, #0
 8001b14:	d1e8      	bne.n	8001ae8 <sem3_execute+0x38>
 8001b16:	68a1      	ldr	r1, [r4, #8]
 8001b18:	fab1 f181 	clz	r1, r1
 8001b1c:	0949      	lsrs	r1, r1, #5
 8001b1e:	2004      	movs	r0, #4
 8001b20:	b002      	add	sp, #8
 8001b22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001b26:	f7fe be73 	b.w	8000810 <_test_assert>
 8001b2a:	bf00      	nop
 8001b2c:	20000938 	.word	0x20000938
 8001b30:	08003a51 	.word	0x08003a51
 8001b34:	20000b40 	.word	0x20000b40
 8001b38:	200008ac 	.word	0x200008ac
 8001b3c:	200011d4 	.word	0x200011d4

08001b40 <chEvtWaitOne.constprop.32>:
 8001b40:	4a0b      	ldr	r2, [pc, #44]	; (8001b70 <chEvtWaitOne.constprop.32+0x30>)
 8001b42:	b510      	push	{r4, lr}
 8001b44:	2320      	movs	r3, #32
 8001b46:	6994      	ldr	r4, [r2, #24]
 8001b48:	f383 8811 	msr	BASEPRI, r3
 8001b4c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001b4e:	b933      	cbnz	r3, 8001b5e <chEvtWaitOne.constprop.32+0x1e>
 8001b50:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001b54:	6223      	str	r3, [r4, #32]
 8001b56:	200a      	movs	r0, #10
 8001b58:	f7ff ff5a 	bl	8001a10 <chSchGoSleepS>
 8001b5c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001b5e:	4258      	negs	r0, r3
 8001b60:	4018      	ands	r0, r3
 8001b62:	ea23 0300 	bic.w	r3, r3, r0
 8001b66:	6363      	str	r3, [r4, #52]	; 0x34
 8001b68:	2300      	movs	r3, #0
 8001b6a:	f383 8811 	msr	BASEPRI, r3
 8001b6e:	bd10      	pop	{r4, pc}
 8001b70:	20000938 	.word	0x20000938
	...

08001b80 <chEvtWaitAny.constprop.31>:
 8001b80:	4a09      	ldr	r2, [pc, #36]	; (8001ba8 <chEvtWaitAny.constprop.31+0x28>)
 8001b82:	b510      	push	{r4, lr}
 8001b84:	2320      	movs	r3, #32
 8001b86:	6994      	ldr	r4, [r2, #24]
 8001b88:	f383 8811 	msr	BASEPRI, r3
 8001b8c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001b8e:	b930      	cbnz	r0, 8001b9e <chEvtWaitAny.constprop.31+0x1e>
 8001b90:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001b94:	200a      	movs	r0, #10
 8001b96:	6223      	str	r3, [r4, #32]
 8001b98:	f7ff ff3a 	bl	8001a10 <chSchGoSleepS>
 8001b9c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001b9e:	2300      	movs	r3, #0
 8001ba0:	6363      	str	r3, [r4, #52]	; 0x34
 8001ba2:	f383 8811 	msr	BASEPRI, r3
 8001ba6:	bd10      	pop	{r4, pc}
 8001ba8:	20000938 	.word	0x20000938
 8001bac:	00000000 	.word	0x00000000

08001bb0 <thread4.lto_priv.74>:
 8001bb0:	4a07      	ldr	r2, [pc, #28]	; (8001bd0 <thread4.lto_priv.74+0x20>)
 8001bb2:	b510      	push	{r4, lr}
 8001bb4:	2320      	movs	r3, #32
 8001bb6:	6994      	ldr	r4, [r2, #24]
 8001bb8:	f383 8811 	msr	BASEPRI, r3
 8001bbc:	2003      	movs	r0, #3
 8001bbe:	f7ff ff27 	bl	8001a10 <chSchGoSleepS>
 8001bc2:	6a23      	ldr	r3, [r4, #32]
 8001bc4:	2b00      	cmp	r3, #0
 8001bc6:	d0f9      	beq.n	8001bbc <thread4.lto_priv.74+0xc>
 8001bc8:	2300      	movs	r3, #0
 8001bca:	f383 8811 	msr	BASEPRI, r3
 8001bce:	bd10      	pop	{r4, pc}
 8001bd0:	20000938 	.word	0x20000938
	...

08001be0 <chSchGoSleepTimeoutS>:
 8001be0:	b530      	push	{r4, r5, lr}
 8001be2:	1c4b      	adds	r3, r1, #1
 8001be4:	b087      	sub	sp, #28
 8001be6:	d012      	beq.n	8001c0e <chSchGoSleepTimeoutS+0x2e>
 8001be8:	4c0c      	ldr	r4, [pc, #48]	; (8001c1c <chSchGoSleepTimeoutS+0x3c>)
 8001bea:	4a0d      	ldr	r2, [pc, #52]	; (8001c20 <chSchGoSleepTimeoutS+0x40>)
 8001bec:	69a3      	ldr	r3, [r4, #24]
 8001bee:	4605      	mov	r5, r0
 8001bf0:	a801      	add	r0, sp, #4
 8001bf2:	f7ff facd 	bl	8001190 <chVTDoSetI>
 8001bf6:	4628      	mov	r0, r5
 8001bf8:	f7ff ff0a 	bl	8001a10 <chSchGoSleepS>
 8001bfc:	9b04      	ldr	r3, [sp, #16]
 8001bfe:	b113      	cbz	r3, 8001c06 <chSchGoSleepTimeoutS+0x26>
 8001c00:	a801      	add	r0, sp, #4
 8001c02:	f7ff fa8d 	bl	8001120 <chVTDoResetI>
 8001c06:	69a3      	ldr	r3, [r4, #24]
 8001c08:	6a18      	ldr	r0, [r3, #32]
 8001c0a:	b007      	add	sp, #28
 8001c0c:	bd30      	pop	{r4, r5, pc}
 8001c0e:	4c03      	ldr	r4, [pc, #12]	; (8001c1c <chSchGoSleepTimeoutS+0x3c>)
 8001c10:	f7ff fefe 	bl	8001a10 <chSchGoSleepS>
 8001c14:	69a3      	ldr	r3, [r4, #24]
 8001c16:	6a18      	ldr	r0, [r3, #32]
 8001c18:	b007      	add	sp, #28
 8001c1a:	bd30      	pop	{r4, r5, pc}
 8001c1c:	20000938 	.word	0x20000938
 8001c20:	08000cc1 	.word	0x08000cc1
	...

08001c30 <chSemWaitTimeout.constprop.50>:
 8001c30:	2320      	movs	r3, #32
 8001c32:	f383 8811 	msr	BASEPRI, r3
 8001c36:	4b10      	ldr	r3, [pc, #64]	; (8001c78 <chSemWaitTimeout.constprop.50+0x48>)
 8001c38:	6899      	ldr	r1, [r3, #8]
 8001c3a:	1e4a      	subs	r2, r1, #1
 8001c3c:	2a00      	cmp	r2, #0
 8001c3e:	609a      	str	r2, [r3, #8]
 8001c40:	db04      	blt.n	8001c4c <chSemWaitTimeout.constprop.50+0x1c>
 8001c42:	2000      	movs	r0, #0
 8001c44:	2300      	movs	r3, #0
 8001c46:	f383 8811 	msr	BASEPRI, r3
 8001c4a:	4770      	bx	lr
 8001c4c:	b180      	cbz	r0, 8001c70 <chSemWaitTimeout.constprop.50+0x40>
 8001c4e:	4a0b      	ldr	r2, [pc, #44]	; (8001c7c <chSemWaitTimeout.constprop.50+0x4c>)
 8001c50:	b510      	push	{r4, lr}
 8001c52:	6992      	ldr	r2, [r2, #24]
 8001c54:	685c      	ldr	r4, [r3, #4]
 8001c56:	6213      	str	r3, [r2, #32]
 8001c58:	e9c2 3400 	strd	r3, r4, [r2]
 8001c5c:	4601      	mov	r1, r0
 8001c5e:	6022      	str	r2, [r4, #0]
 8001c60:	2005      	movs	r0, #5
 8001c62:	605a      	str	r2, [r3, #4]
 8001c64:	f7ff ffbc 	bl	8001be0 <chSchGoSleepTimeoutS>
 8001c68:	2300      	movs	r3, #0
 8001c6a:	f383 8811 	msr	BASEPRI, r3
 8001c6e:	bd10      	pop	{r4, pc}
 8001c70:	6099      	str	r1, [r3, #8]
 8001c72:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001c76:	e7e5      	b.n	8001c44 <chSemWaitTimeout.constprop.50+0x14>
 8001c78:	200008ac 	.word	0x200008ac
 8001c7c:	20000938 	.word	0x20000938

08001c80 <evt3_execute>:
 8001c80:	b570      	push	{r4, r5, r6, lr}
 8001c82:	4c55      	ldr	r4, [pc, #340]	; (8001dd8 <evt3_execute+0x158>)
 8001c84:	2320      	movs	r3, #32
 8001c86:	69a2      	ldr	r2, [r4, #24]
 8001c88:	f383 8811 	msr	BASEPRI, r3
 8001c8c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001c8e:	b93b      	cbnz	r3, 8001ca0 <evt3_execute+0x20>
 8001c90:	f383 8811 	msr	BASEPRI, r3
 8001c94:	2101      	movs	r1, #1
 8001c96:	2001      	movs	r0, #1
 8001c98:	f7fe fdba 	bl	8000810 <_test_assert>
 8001c9c:	b180      	cbz	r0, 8001cc0 <evt3_execute+0x40>
 8001c9e:	bd70      	pop	{r4, r5, r6, pc}
 8001ca0:	4259      	negs	r1, r3
 8001ca2:	4019      	ands	r1, r3
 8001ca4:	ea23 0301 	bic.w	r3, r3, r1
 8001ca8:	6353      	str	r3, [r2, #52]	; 0x34
 8001caa:	2300      	movs	r3, #0
 8001cac:	f383 8811 	msr	BASEPRI, r3
 8001cb0:	fab1 f181 	clz	r1, r1
 8001cb4:	0949      	lsrs	r1, r1, #5
 8001cb6:	2001      	movs	r0, #1
 8001cb8:	f7fe fdaa 	bl	8000810 <_test_assert>
 8001cbc:	2800      	cmp	r0, #0
 8001cbe:	d1ee      	bne.n	8001c9e <evt3_execute+0x1e>
 8001cc0:	69a3      	ldr	r3, [r4, #24]
 8001cc2:	2220      	movs	r2, #32
 8001cc4:	f382 8811 	msr	BASEPRI, r2
 8001cc8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001cca:	2a00      	cmp	r2, #0
 8001ccc:	d06f      	beq.n	8001dae <evt3_execute+0x12e>
 8001cce:	6358      	str	r0, [r3, #52]	; 0x34
 8001cd0:	f380 8811 	msr	BASEPRI, r0
 8001cd4:	4601      	mov	r1, r0
 8001cd6:	2002      	movs	r0, #2
 8001cd8:	f7fe fd9a 	bl	8000810 <_test_assert>
 8001cdc:	2800      	cmp	r0, #0
 8001cde:	d1de      	bne.n	8001c9e <evt3_execute+0x1e>
 8001ce0:	69a3      	ldr	r3, [r4, #24]
 8001ce2:	2220      	movs	r2, #32
 8001ce4:	f382 8811 	msr	BASEPRI, r2
 8001ce8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001cea:	3201      	adds	r2, #1
 8001cec:	d063      	beq.n	8001db6 <evt3_execute+0x136>
 8001cee:	f380 8811 	msr	BASEPRI, r0
 8001cf2:	2001      	movs	r0, #1
 8001cf4:	4601      	mov	r1, r0
 8001cf6:	2003      	movs	r0, #3
 8001cf8:	f7fe fd8a 	bl	8000810 <_test_assert>
 8001cfc:	2800      	cmp	r0, #0
 8001cfe:	d1ce      	bne.n	8001c9e <evt3_execute+0x1e>
 8001d00:	69a6      	ldr	r6, [r4, #24]
 8001d02:	2320      	movs	r3, #32
 8001d04:	f383 8811 	msr	BASEPRI, r3
 8001d08:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001d0a:	b94d      	cbnz	r5, 8001d20 <evt3_execute+0xa0>
 8001d0c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001d10:	210a      	movs	r1, #10
 8001d12:	6233      	str	r3, [r6, #32]
 8001d14:	4608      	mov	r0, r1
 8001d16:	f7ff ff63 	bl	8001be0 <chSchGoSleepTimeoutS>
 8001d1a:	2800      	cmp	r0, #0
 8001d1c:	db4f      	blt.n	8001dbe <evt3_execute+0x13e>
 8001d1e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001d20:	4269      	negs	r1, r5
 8001d22:	4029      	ands	r1, r5
 8001d24:	ea25 0501 	bic.w	r5, r5, r1
 8001d28:	6375      	str	r5, [r6, #52]	; 0x34
 8001d2a:	2300      	movs	r3, #0
 8001d2c:	f383 8811 	msr	BASEPRI, r3
 8001d30:	fab1 f181 	clz	r1, r1
 8001d34:	0949      	lsrs	r1, r1, #5
 8001d36:	2004      	movs	r0, #4
 8001d38:	f7fe fd6a 	bl	8000810 <_test_assert>
 8001d3c:	2800      	cmp	r0, #0
 8001d3e:	d1ae      	bne.n	8001c9e <evt3_execute+0x1e>
 8001d40:	69a6      	ldr	r6, [r4, #24]
 8001d42:	2320      	movs	r3, #32
 8001d44:	f383 8811 	msr	BASEPRI, r3
 8001d48:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001d4a:	b94d      	cbnz	r5, 8001d60 <evt3_execute+0xe0>
 8001d4c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001d50:	210a      	movs	r1, #10
 8001d52:	6233      	str	r3, [r6, #32]
 8001d54:	4608      	mov	r0, r1
 8001d56:	f7ff ff43 	bl	8001be0 <chSchGoSleepTimeoutS>
 8001d5a:	2800      	cmp	r0, #0
 8001d5c:	db33      	blt.n	8001dc6 <evt3_execute+0x146>
 8001d5e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001d60:	2300      	movs	r3, #0
 8001d62:	6373      	str	r3, [r6, #52]	; 0x34
 8001d64:	f383 8811 	msr	BASEPRI, r3
 8001d68:	fab5 f185 	clz	r1, r5
 8001d6c:	0949      	lsrs	r1, r1, #5
 8001d6e:	2005      	movs	r0, #5
 8001d70:	f7fe fd4e 	bl	8000810 <_test_assert>
 8001d74:	4605      	mov	r5, r0
 8001d76:	2800      	cmp	r0, #0
 8001d78:	d191      	bne.n	8001c9e <evt3_execute+0x1e>
 8001d7a:	69a4      	ldr	r4, [r4, #24]
 8001d7c:	2320      	movs	r3, #32
 8001d7e:	f383 8811 	msr	BASEPRI, r3
 8001d82:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001d84:	3301      	adds	r3, #1
 8001d86:	d008      	beq.n	8001d9a <evt3_execute+0x11a>
 8001d88:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001d8c:	6223      	str	r3, [r4, #32]
 8001d8e:	210a      	movs	r1, #10
 8001d90:	200b      	movs	r0, #11
 8001d92:	f7ff ff25 	bl	8001be0 <chSchGoSleepTimeoutS>
 8001d96:	2800      	cmp	r0, #0
 8001d98:	db19      	blt.n	8001dce <evt3_execute+0x14e>
 8001d9a:	2300      	movs	r3, #0
 8001d9c:	6363      	str	r3, [r4, #52]	; 0x34
 8001d9e:	f383 8811 	msr	BASEPRI, r3
 8001da2:	4629      	mov	r1, r5
 8001da4:	2006      	movs	r0, #6
 8001da6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001daa:	f7fe bd31 	b.w	8000810 <_test_assert>
 8001dae:	f382 8811 	msr	BASEPRI, r2
 8001db2:	2101      	movs	r1, #1
 8001db4:	e78f      	b.n	8001cd6 <evt3_execute+0x56>
 8001db6:	6358      	str	r0, [r3, #52]	; 0x34
 8001db8:	f380 8811 	msr	BASEPRI, r0
 8001dbc:	e79a      	b.n	8001cf4 <evt3_execute+0x74>
 8001dbe:	f385 8811 	msr	BASEPRI, r5
 8001dc2:	2101      	movs	r1, #1
 8001dc4:	e7b7      	b.n	8001d36 <evt3_execute+0xb6>
 8001dc6:	f385 8811 	msr	BASEPRI, r5
 8001dca:	2101      	movs	r1, #1
 8001dcc:	e7cf      	b.n	8001d6e <evt3_execute+0xee>
 8001dce:	f385 8811 	msr	BASEPRI, r5
 8001dd2:	2501      	movs	r5, #1
 8001dd4:	e7e5      	b.n	8001da2 <evt3_execute+0x122>
 8001dd6:	bf00      	nop
 8001dd8:	20000938 	.word	0x20000938
 8001ddc:	00000000 	.word	0x00000000

08001de0 <chSemWaitTimeoutS>:
 8001de0:	6883      	ldr	r3, [r0, #8]
 8001de2:	3b01      	subs	r3, #1
 8001de4:	2b00      	cmp	r3, #0
 8001de6:	6083      	str	r3, [r0, #8]
 8001de8:	db01      	blt.n	8001dee <chSemWaitTimeoutS+0xe>
 8001dea:	2000      	movs	r0, #0
 8001dec:	4770      	bx	lr
 8001dee:	4b07      	ldr	r3, [pc, #28]	; (8001e0c <chSemWaitTimeoutS+0x2c>)
 8001df0:	699b      	ldr	r3, [r3, #24]
 8001df2:	b410      	push	{r4}
 8001df4:	6218      	str	r0, [r3, #32]
 8001df6:	6018      	str	r0, [r3, #0]
 8001df8:	6844      	ldr	r4, [r0, #4]
 8001dfa:	605c      	str	r4, [r3, #4]
 8001dfc:	4602      	mov	r2, r0
 8001dfe:	6023      	str	r3, [r4, #0]
 8001e00:	2005      	movs	r0, #5
 8001e02:	6053      	str	r3, [r2, #4]
 8001e04:	bc10      	pop	{r4}
 8001e06:	f7ff beeb 	b.w	8001be0 <chSchGoSleepTimeoutS>
 8001e0a:	bf00      	nop
 8001e0c:	20000938 	.word	0x20000938

08001e10 <chMBPost.constprop.20>:
 8001e10:	b570      	push	{r4, r5, r6, lr}
 8001e12:	2320      	movs	r3, #32
 8001e14:	4606      	mov	r6, r0
 8001e16:	f383 8811 	msr	BASEPRI, r3
 8001e1a:	4c0d      	ldr	r4, [pc, #52]	; (8001e50 <chMBPost.constprop.20+0x40>)
 8001e1c:	f104 001c 	add.w	r0, r4, #28
 8001e20:	f7ff ffde 	bl	8001de0 <chSemWaitTimeoutS>
 8001e24:	4605      	mov	r5, r0
 8001e26:	b968      	cbnz	r0, 8001e44 <chMBPost.constprop.20+0x34>
 8001e28:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8001e2c:	1d13      	adds	r3, r2, #4
 8001e2e:	428b      	cmp	r3, r1
 8001e30:	60a3      	str	r3, [r4, #8]
 8001e32:	4808      	ldr	r0, [pc, #32]	; (8001e54 <chMBPost.constprop.20+0x44>)
 8001e34:	6016      	str	r6, [r2, #0]
 8001e36:	bf24      	itt	cs
 8001e38:	6823      	ldrcs	r3, [r4, #0]
 8001e3a:	60a3      	strcs	r3, [r4, #8]
 8001e3c:	f7ff f8e8 	bl	8001010 <chSemSignalI>
 8001e40:	f7ff fb9e 	bl	8001580 <chSchRescheduleS>
 8001e44:	2300      	movs	r3, #0
 8001e46:	f383 8811 	msr	BASEPRI, r3
 8001e4a:	4628      	mov	r0, r5
 8001e4c:	bd70      	pop	{r4, r5, r6, pc}
 8001e4e:	bf00      	nop
 8001e50:	20000854 	.word	0x20000854
 8001e54:	20000864 	.word	0x20000864
	...

08001e60 <chMBPostAhead.constprop.18>:
 8001e60:	b570      	push	{r4, r5, r6, lr}
 8001e62:	2320      	movs	r3, #32
 8001e64:	4606      	mov	r6, r0
 8001e66:	f383 8811 	msr	BASEPRI, r3
 8001e6a:	4c10      	ldr	r4, [pc, #64]	; (8001eac <chMBPostAhead.constprop.18+0x4c>)
 8001e6c:	f104 001c 	add.w	r0, r4, #28
 8001e70:	f7ff ffb6 	bl	8001de0 <chSemWaitTimeoutS>
 8001e74:	4605      	mov	r5, r0
 8001e76:	b120      	cbz	r0, 8001e82 <chMBPostAhead.constprop.18+0x22>
 8001e78:	2300      	movs	r3, #0
 8001e7a:	f383 8811 	msr	BASEPRI, r3
 8001e7e:	4628      	mov	r0, r5
 8001e80:	bd70      	pop	{r4, r5, r6, pc}
 8001e82:	68e3      	ldr	r3, [r4, #12]
 8001e84:	6822      	ldr	r2, [r4, #0]
 8001e86:	3b04      	subs	r3, #4
 8001e88:	4293      	cmp	r3, r2
 8001e8a:	60e3      	str	r3, [r4, #12]
 8001e8c:	d202      	bcs.n	8001e94 <chMBPostAhead.constprop.18+0x34>
 8001e8e:	6863      	ldr	r3, [r4, #4]
 8001e90:	3b04      	subs	r3, #4
 8001e92:	60e3      	str	r3, [r4, #12]
 8001e94:	601e      	str	r6, [r3, #0]
 8001e96:	4806      	ldr	r0, [pc, #24]	; (8001eb0 <chMBPostAhead.constprop.18+0x50>)
 8001e98:	f7ff f8ba 	bl	8001010 <chSemSignalI>
 8001e9c:	f7ff fb70 	bl	8001580 <chSchRescheduleS>
 8001ea0:	2300      	movs	r3, #0
 8001ea2:	f383 8811 	msr	BASEPRI, r3
 8001ea6:	4628      	mov	r0, r5
 8001ea8:	bd70      	pop	{r4, r5, r6, pc}
 8001eaa:	bf00      	nop
 8001eac:	20000854 	.word	0x20000854
 8001eb0:	20000864 	.word	0x20000864
	...

08001ec0 <chMBFetch.constprop.16>:
 8001ec0:	b570      	push	{r4, r5, r6, lr}
 8001ec2:	2320      	movs	r3, #32
 8001ec4:	4606      	mov	r6, r0
 8001ec6:	f383 8811 	msr	BASEPRI, r3
 8001eca:	4c0d      	ldr	r4, [pc, #52]	; (8001f00 <chMBFetch.constprop.16+0x40>)
 8001ecc:	f104 0010 	add.w	r0, r4, #16
 8001ed0:	f7ff ff86 	bl	8001de0 <chSemWaitTimeoutS>
 8001ed4:	4605      	mov	r5, r0
 8001ed6:	b970      	cbnz	r0, 8001ef6 <chMBFetch.constprop.16+0x36>
 8001ed8:	68e3      	ldr	r3, [r4, #12]
 8001eda:	6862      	ldr	r2, [r4, #4]
 8001edc:	6819      	ldr	r1, [r3, #0]
 8001ede:	4809      	ldr	r0, [pc, #36]	; (8001f04 <chMBFetch.constprop.16+0x44>)
 8001ee0:	3304      	adds	r3, #4
 8001ee2:	4293      	cmp	r3, r2
 8001ee4:	60e3      	str	r3, [r4, #12]
 8001ee6:	6031      	str	r1, [r6, #0]
 8001ee8:	bf24      	itt	cs
 8001eea:	6823      	ldrcs	r3, [r4, #0]
 8001eec:	60e3      	strcs	r3, [r4, #12]
 8001eee:	f7ff f88f 	bl	8001010 <chSemSignalI>
 8001ef2:	f7ff fb45 	bl	8001580 <chSchRescheduleS>
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	f383 8811 	msr	BASEPRI, r3
 8001efc:	4628      	mov	r0, r5
 8001efe:	bd70      	pop	{r4, r5, r6, pc}
 8001f00:	20000854 	.word	0x20000854
 8001f04:	20000870 	.word	0x20000870
	...

08001f10 <mbox1_execute>:
 8001f10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f12:	2320      	movs	r3, #32
 8001f14:	b083      	sub	sp, #12
 8001f16:	f383 8811 	msr	BASEPRI, r3
 8001f1a:	4dd1      	ldr	r5, [pc, #836]	; (8002260 <mbox1_execute+0x350>)
 8001f1c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8001f1e:	f1a1 0105 	sub.w	r1, r1, #5
 8001f22:	fab1 f181 	clz	r1, r1
 8001f26:	2001      	movs	r0, #1
 8001f28:	0949      	lsrs	r1, r1, #5
 8001f2a:	f7fe fc71 	bl	8000810 <_test_assert>
 8001f2e:	2800      	cmp	r0, #0
 8001f30:	f040 8191 	bne.w	8002256 <mbox1_execute+0x346>
 8001f34:	f380 8811 	msr	BASEPRI, r0
 8001f38:	2442      	movs	r4, #66	; 0x42
 8001f3a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001f3e:	4620      	mov	r0, r4
 8001f40:	f7ff ff66 	bl	8001e10 <chMBPost.constprop.20>
 8001f44:	fab0 f180 	clz	r1, r0
 8001f48:	0949      	lsrs	r1, r1, #5
 8001f4a:	2002      	movs	r0, #2
 8001f4c:	f7fe fc60 	bl	8000810 <_test_assert>
 8001f50:	3401      	adds	r4, #1
 8001f52:	b978      	cbnz	r0, 8001f74 <mbox1_execute+0x64>
 8001f54:	2c46      	cmp	r4, #70	; 0x46
 8001f56:	d1f0      	bne.n	8001f3a <mbox1_execute+0x2a>
 8001f58:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001f5c:	2041      	movs	r0, #65	; 0x41
 8001f5e:	f7ff ff7f 	bl	8001e60 <chMBPostAhead.constprop.18>
 8001f62:	fab0 f180 	clz	r1, r0
 8001f66:	0949      	lsrs	r1, r1, #5
 8001f68:	2003      	movs	r0, #3
 8001f6a:	f7fe fc51 	bl	8000810 <_test_assert>
 8001f6e:	2800      	cmp	r0, #0
 8001f70:	f000 817e 	beq.w	8002270 <mbox1_execute+0x360>
 8001f74:	b003      	add	sp, #12
 8001f76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f78:	f380 8811 	msr	BASEPRI, r0
 8001f7c:	f384 8811 	msr	BASEPRI, r4
 8001f80:	2041      	movs	r0, #65	; 0x41
 8001f82:	f7ff f855 	bl	8001030 <chMBPostI.constprop.19>
 8001f86:	fab0 f180 	clz	r1, r0
 8001f8a:	0949      	lsrs	r1, r1, #5
 8001f8c:	2016      	movs	r0, #22
 8001f8e:	f7fe fc3f 	bl	8000810 <_test_assert>
 8001f92:	2800      	cmp	r0, #0
 8001f94:	d1ee      	bne.n	8001f74 <mbox1_execute+0x64>
 8001f96:	2042      	movs	r0, #66	; 0x42
 8001f98:	f7ff f84a 	bl	8001030 <chMBPostI.constprop.19>
 8001f9c:	fab0 f180 	clz	r1, r0
 8001fa0:	0949      	lsrs	r1, r1, #5
 8001fa2:	2017      	movs	r0, #23
 8001fa4:	f7fe fc34 	bl	8000810 <_test_assert>
 8001fa8:	2800      	cmp	r0, #0
 8001faa:	d1e3      	bne.n	8001f74 <mbox1_execute+0x64>
 8001fac:	2043      	movs	r0, #67	; 0x43
 8001fae:	f7ff f83f 	bl	8001030 <chMBPostI.constprop.19>
 8001fb2:	fab0 f180 	clz	r1, r0
 8001fb6:	0949      	lsrs	r1, r1, #5
 8001fb8:	2018      	movs	r0, #24
 8001fba:	f7fe fc29 	bl	8000810 <_test_assert>
 8001fbe:	2800      	cmp	r0, #0
 8001fc0:	d1d8      	bne.n	8001f74 <mbox1_execute+0x64>
 8001fc2:	2044      	movs	r0, #68	; 0x44
 8001fc4:	f7ff f834 	bl	8001030 <chMBPostI.constprop.19>
 8001fc8:	fab0 f180 	clz	r1, r0
 8001fcc:	0949      	lsrs	r1, r1, #5
 8001fce:	2019      	movs	r0, #25
 8001fd0:	f7fe fc1e 	bl	8000810 <_test_assert>
 8001fd4:	4606      	mov	r6, r0
 8001fd6:	2800      	cmp	r0, #0
 8001fd8:	d1cc      	bne.n	8001f74 <mbox1_execute+0x64>
 8001fda:	2045      	movs	r0, #69	; 0x45
 8001fdc:	f7ff f828 	bl	8001030 <chMBPostI.constprop.19>
 8001fe0:	f386 8811 	msr	BASEPRI, r6
 8001fe4:	fab0 f180 	clz	r1, r0
 8001fe8:	0949      	lsrs	r1, r1, #5
 8001fea:	201a      	movs	r0, #26
 8001fec:	f7fe fc10 	bl	8000810 <_test_assert>
 8001ff0:	2800      	cmp	r0, #0
 8001ff2:	d1bf      	bne.n	8001f74 <mbox1_execute+0x64>
 8001ff4:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8001ff8:	eba1 0c03 	sub.w	ip, r1, r3
 8001ffc:	f1dc 0100 	rsbs	r1, ip, #0
 8002000:	eb41 010c 	adc.w	r1, r1, ip
 8002004:	201b      	movs	r0, #27
 8002006:	f7fe fc03 	bl	8000810 <_test_assert>
 800200a:	2800      	cmp	r0, #0
 800200c:	d1b2      	bne.n	8001f74 <mbox1_execute+0x64>
 800200e:	4607      	mov	r7, r0
 8002010:	2605      	movs	r6, #5
 8002012:	f384 8811 	msr	BASEPRI, r4
 8002016:	a801      	add	r0, sp, #4
 8002018:	f7ff f84a 	bl	80010b0 <chMBFetchI.constprop.15>
 800201c:	f387 8811 	msr	BASEPRI, r7
 8002020:	fab0 f180 	clz	r1, r0
 8002024:	0949      	lsrs	r1, r1, #5
 8002026:	201c      	movs	r0, #28
 8002028:	f7fe fbf2 	bl	8000810 <_test_assert>
 800202c:	2800      	cmp	r0, #0
 800202e:	d1a1      	bne.n	8001f74 <mbox1_execute+0x64>
 8002030:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8002034:	f7fe fc04 	bl	8000840 <test_emit_token>
 8002038:	3e01      	subs	r6, #1
 800203a:	d1ea      	bne.n	8002012 <mbox1_execute+0x102>
 800203c:	4989      	ldr	r1, [pc, #548]	; (8002264 <mbox1_execute+0x354>)
 800203e:	201d      	movs	r0, #29
 8002040:	f7fe fbbe 	bl	80007c0 <_test_assert_sequence>
 8002044:	2800      	cmp	r0, #0
 8002046:	d195      	bne.n	8001f74 <mbox1_execute+0x64>
 8002048:	f384 8811 	msr	BASEPRI, r4
 800204c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800204e:	1f4f      	subs	r7, r1, #5
 8002050:	4279      	negs	r1, r7
 8002052:	4179      	adcs	r1, r7
 8002054:	201e      	movs	r0, #30
 8002056:	f7fe fbdb 	bl	8000810 <_test_assert>
 800205a:	2800      	cmp	r0, #0
 800205c:	f040 8223 	bne.w	80024a6 <mbox1_execute+0x596>
 8002060:	f386 8811 	msr	BASEPRI, r6
 8002064:	f384 8811 	msr	BASEPRI, r4
 8002068:	69a9      	ldr	r1, [r5, #24]
 800206a:	fab1 f181 	clz	r1, r1
 800206e:	0949      	lsrs	r1, r1, #5
 8002070:	201f      	movs	r0, #31
 8002072:	f7fe fbcd 	bl	8000810 <_test_assert>
 8002076:	2800      	cmp	r0, #0
 8002078:	f040 8215 	bne.w	80024a6 <mbox1_execute+0x596>
 800207c:	f386 8811 	msr	BASEPRI, r6
 8002080:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002084:	1aca      	subs	r2, r1, r3
 8002086:	4251      	negs	r1, r2
 8002088:	4151      	adcs	r1, r2
 800208a:	2020      	movs	r0, #32
 800208c:	f7fe fbc0 	bl	8000810 <_test_assert>
 8002090:	2800      	cmp	r0, #0
 8002092:	f47f af6f 	bne.w	8001f74 <mbox1_execute+0x64>
 8002096:	f384 8811 	msr	BASEPRI, r4
 800209a:	2045      	movs	r0, #69	; 0x45
 800209c:	f7fe ffe8 	bl	8001070 <chMBPostAheadI.constprop.17>
 80020a0:	fab0 f180 	clz	r1, r0
 80020a4:	0949      	lsrs	r1, r1, #5
 80020a6:	2021      	movs	r0, #33	; 0x21
 80020a8:	f7fe fbb2 	bl	8000810 <_test_assert>
 80020ac:	2800      	cmp	r0, #0
 80020ae:	f47f af61 	bne.w	8001f74 <mbox1_execute+0x64>
 80020b2:	2044      	movs	r0, #68	; 0x44
 80020b4:	f7fe ffdc 	bl	8001070 <chMBPostAheadI.constprop.17>
 80020b8:	fab0 f180 	clz	r1, r0
 80020bc:	0949      	lsrs	r1, r1, #5
 80020be:	2022      	movs	r0, #34	; 0x22
 80020c0:	f7fe fba6 	bl	8000810 <_test_assert>
 80020c4:	2800      	cmp	r0, #0
 80020c6:	f47f af55 	bne.w	8001f74 <mbox1_execute+0x64>
 80020ca:	2043      	movs	r0, #67	; 0x43
 80020cc:	f7fe ffd0 	bl	8001070 <chMBPostAheadI.constprop.17>
 80020d0:	fab0 f180 	clz	r1, r0
 80020d4:	0949      	lsrs	r1, r1, #5
 80020d6:	2023      	movs	r0, #35	; 0x23
 80020d8:	f7fe fb9a 	bl	8000810 <_test_assert>
 80020dc:	2800      	cmp	r0, #0
 80020de:	f47f af49 	bne.w	8001f74 <mbox1_execute+0x64>
 80020e2:	2042      	movs	r0, #66	; 0x42
 80020e4:	f7fe ffc4 	bl	8001070 <chMBPostAheadI.constprop.17>
 80020e8:	fab0 f180 	clz	r1, r0
 80020ec:	0949      	lsrs	r1, r1, #5
 80020ee:	2024      	movs	r0, #36	; 0x24
 80020f0:	f7fe fb8e 	bl	8000810 <_test_assert>
 80020f4:	2800      	cmp	r0, #0
 80020f6:	f47f af3d 	bne.w	8001f74 <mbox1_execute+0x64>
 80020fa:	2041      	movs	r0, #65	; 0x41
 80020fc:	f7fe ffb8 	bl	8001070 <chMBPostAheadI.constprop.17>
 8002100:	2300      	movs	r3, #0
 8002102:	f383 8811 	msr	BASEPRI, r3
 8002106:	fab0 f180 	clz	r1, r0
 800210a:	0949      	lsrs	r1, r1, #5
 800210c:	2025      	movs	r0, #37	; 0x25
 800210e:	f7fe fb7f 	bl	8000810 <_test_assert>
 8002112:	2800      	cmp	r0, #0
 8002114:	f47f af2e 	bne.w	8001f74 <mbox1_execute+0x64>
 8002118:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800211c:	1acb      	subs	r3, r1, r3
 800211e:	4259      	negs	r1, r3
 8002120:	4159      	adcs	r1, r3
 8002122:	2026      	movs	r0, #38	; 0x26
 8002124:	f7fe fb74 	bl	8000810 <_test_assert>
 8002128:	2800      	cmp	r0, #0
 800212a:	f47f af23 	bne.w	8001f74 <mbox1_execute+0x64>
 800212e:	4606      	mov	r6, r0
 8002130:	2405      	movs	r4, #5
 8002132:	2720      	movs	r7, #32
 8002134:	f387 8811 	msr	BASEPRI, r7
 8002138:	a801      	add	r0, sp, #4
 800213a:	f7fe ffb9 	bl	80010b0 <chMBFetchI.constprop.15>
 800213e:	f386 8811 	msr	BASEPRI, r6
 8002142:	fab0 f180 	clz	r1, r0
 8002146:	0949      	lsrs	r1, r1, #5
 8002148:	2027      	movs	r0, #39	; 0x27
 800214a:	f7fe fb61 	bl	8000810 <_test_assert>
 800214e:	2800      	cmp	r0, #0
 8002150:	f47f af10 	bne.w	8001f74 <mbox1_execute+0x64>
 8002154:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8002158:	f7fe fb72 	bl	8000840 <test_emit_token>
 800215c:	3c01      	subs	r4, #1
 800215e:	d1e9      	bne.n	8002134 <mbox1_execute+0x224>
 8002160:	4940      	ldr	r1, [pc, #256]	; (8002264 <mbox1_execute+0x354>)
 8002162:	2028      	movs	r0, #40	; 0x28
 8002164:	f7fe fb2c 	bl	80007c0 <_test_assert_sequence>
 8002168:	2800      	cmp	r0, #0
 800216a:	f47f af03 	bne.w	8001f74 <mbox1_execute+0x64>
 800216e:	f387 8811 	msr	BASEPRI, r7
 8002172:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002174:	f1a1 0e05 	sub.w	lr, r1, #5
 8002178:	f1de 0100 	rsbs	r1, lr, #0
 800217c:	eb41 010e 	adc.w	r1, r1, lr
 8002180:	2029      	movs	r0, #41	; 0x29
 8002182:	f7fe fb45 	bl	8000810 <_test_assert>
 8002186:	2800      	cmp	r0, #0
 8002188:	f040 80c5 	bne.w	8002316 <mbox1_execute+0x406>
 800218c:	f384 8811 	msr	BASEPRI, r4
 8002190:	f387 8811 	msr	BASEPRI, r7
 8002194:	69a9      	ldr	r1, [r5, #24]
 8002196:	fab1 f181 	clz	r1, r1
 800219a:	0949      	lsrs	r1, r1, #5
 800219c:	202a      	movs	r0, #42	; 0x2a
 800219e:	f7fe fb37 	bl	8000810 <_test_assert>
 80021a2:	2800      	cmp	r0, #0
 80021a4:	f040 80b7 	bne.w	8002316 <mbox1_execute+0x406>
 80021a8:	f384 8811 	msr	BASEPRI, r4
 80021ac:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80021b0:	eba1 0c03 	sub.w	ip, r1, r3
 80021b4:	f1dc 0100 	rsbs	r1, ip, #0
 80021b8:	eb41 010c 	adc.w	r1, r1, ip
 80021bc:	202b      	movs	r0, #43	; 0x2b
 80021be:	f7fe fb27 	bl	8000810 <_test_assert>
 80021c2:	2800      	cmp	r0, #0
 80021c4:	f47f aed6 	bne.w	8001f74 <mbox1_execute+0x64>
 80021c8:	f387 8811 	msr	BASEPRI, r7
 80021cc:	e9d5 3200 	ldrd	r3, r2, [r5]
 80021d0:	1ad2      	subs	r2, r2, r3
 80021d2:	1091      	asrs	r1, r2, #2
 80021d4:	4824      	ldr	r0, [pc, #144]	; (8002268 <mbox1_execute+0x358>)
 80021d6:	60ab      	str	r3, [r5, #8]
 80021d8:	60eb      	str	r3, [r5, #12]
 80021da:	f7fe ff89 	bl	80010f0 <chSemResetI>
 80021de:	4621      	mov	r1, r4
 80021e0:	4822      	ldr	r0, [pc, #136]	; (800226c <mbox1_execute+0x35c>)
 80021e2:	f7fe ff85 	bl	80010f0 <chSemResetI>
 80021e6:	f7ff f9cb 	bl	8001580 <chSchRescheduleS>
 80021ea:	f384 8811 	msr	BASEPRI, r4
 80021ee:	f387 8811 	msr	BASEPRI, r7
 80021f2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80021f4:	1f4e      	subs	r6, r1, #5
 80021f6:	4271      	negs	r1, r6
 80021f8:	4171      	adcs	r1, r6
 80021fa:	202c      	movs	r0, #44	; 0x2c
 80021fc:	f7fe fb08 	bl	8000810 <_test_assert>
 8002200:	2800      	cmp	r0, #0
 8002202:	f040 8088 	bne.w	8002316 <mbox1_execute+0x406>
 8002206:	f384 8811 	msr	BASEPRI, r4
 800220a:	f387 8811 	msr	BASEPRI, r7
 800220e:	69a9      	ldr	r1, [r5, #24]
 8002210:	fab1 f181 	clz	r1, r1
 8002214:	0949      	lsrs	r1, r1, #5
 8002216:	202d      	movs	r0, #45	; 0x2d
 8002218:	f7fe fafa 	bl	8000810 <_test_assert>
 800221c:	2800      	cmp	r0, #0
 800221e:	d17a      	bne.n	8002316 <mbox1_execute+0x406>
 8002220:	f384 8811 	msr	BASEPRI, r4
 8002224:	f387 8811 	msr	BASEPRI, r7
 8002228:	6829      	ldr	r1, [r5, #0]
 800222a:	68ab      	ldr	r3, [r5, #8]
 800222c:	1aca      	subs	r2, r1, r3
 800222e:	4251      	negs	r1, r2
 8002230:	4151      	adcs	r1, r2
 8002232:	202e      	movs	r0, #46	; 0x2e
 8002234:	f7fe faec 	bl	8000810 <_test_assert>
 8002238:	2800      	cmp	r0, #0
 800223a:	d16c      	bne.n	8002316 <mbox1_execute+0x406>
 800223c:	f384 8811 	msr	BASEPRI, r4
 8002240:	f387 8811 	msr	BASEPRI, r7
 8002244:	6829      	ldr	r1, [r5, #0]
 8002246:	68eb      	ldr	r3, [r5, #12]
 8002248:	1acb      	subs	r3, r1, r3
 800224a:	4259      	negs	r1, r3
 800224c:	f04f 002f 	mov.w	r0, #47	; 0x2f
 8002250:	4159      	adcs	r1, r3
 8002252:	f7fe fadd 	bl	8000810 <_test_assert>
 8002256:	2300      	movs	r3, #0
 8002258:	f383 8811 	msr	BASEPRI, r3
 800225c:	b003      	add	sp, #12
 800225e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002260:	20000854 	.word	0x20000854
 8002264:	08006120 	.word	0x08006120
 8002268:	20000870 	.word	0x20000870
 800226c:	20000864 	.word	0x20000864
 8002270:	2101      	movs	r1, #1
 8002272:	2058      	movs	r0, #88	; 0x58
 8002274:	f7ff fdcc 	bl	8001e10 <chMBPost.constprop.20>
 8002278:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 800227c:	fab1 f181 	clz	r1, r1
 8002280:	0949      	lsrs	r1, r1, #5
 8002282:	2004      	movs	r0, #4
 8002284:	f7fe fac4 	bl	8000810 <_test_assert>
 8002288:	4604      	mov	r4, r0
 800228a:	2800      	cmp	r0, #0
 800228c:	f47f ae72 	bne.w	8001f74 <mbox1_execute+0x64>
 8002290:	2620      	movs	r6, #32
 8002292:	f386 8811 	msr	BASEPRI, r6
 8002296:	2058      	movs	r0, #88	; 0x58
 8002298:	f7fe feca 	bl	8001030 <chMBPostI.constprop.19>
 800229c:	4601      	mov	r1, r0
 800229e:	f384 8811 	msr	BASEPRI, r4
 80022a2:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 80022a6:	fab1 f181 	clz	r1, r1
 80022aa:	2005      	movs	r0, #5
 80022ac:	0949      	lsrs	r1, r1, #5
 80022ae:	f7fe faaf 	bl	8000810 <_test_assert>
 80022b2:	2800      	cmp	r0, #0
 80022b4:	f47f ae5e 	bne.w	8001f74 <mbox1_execute+0x64>
 80022b8:	2101      	movs	r1, #1
 80022ba:	2058      	movs	r0, #88	; 0x58
 80022bc:	f7ff fdd0 	bl	8001e60 <chMBPostAhead.constprop.18>
 80022c0:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 80022c4:	fab1 f181 	clz	r1, r1
 80022c8:	0949      	lsrs	r1, r1, #5
 80022ca:	2006      	movs	r0, #6
 80022cc:	f7fe faa0 	bl	8000810 <_test_assert>
 80022d0:	4604      	mov	r4, r0
 80022d2:	2800      	cmp	r0, #0
 80022d4:	f47f ae4e 	bne.w	8001f74 <mbox1_execute+0x64>
 80022d8:	f386 8811 	msr	BASEPRI, r6
 80022dc:	2058      	movs	r0, #88	; 0x58
 80022de:	f7fe fec7 	bl	8001070 <chMBPostAheadI.constprop.17>
 80022e2:	4601      	mov	r1, r0
 80022e4:	f384 8811 	msr	BASEPRI, r4
 80022e8:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 80022ec:	fab1 f181 	clz	r1, r1
 80022f0:	2007      	movs	r0, #7
 80022f2:	0949      	lsrs	r1, r1, #5
 80022f4:	f7fe fa8c 	bl	8000810 <_test_assert>
 80022f8:	4604      	mov	r4, r0
 80022fa:	2800      	cmp	r0, #0
 80022fc:	f47f ae3a 	bne.w	8001f74 <mbox1_execute+0x64>
 8002300:	f386 8811 	msr	BASEPRI, r6
 8002304:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002306:	fab1 f181 	clz	r1, r1
 800230a:	0949      	lsrs	r1, r1, #5
 800230c:	2008      	movs	r0, #8
 800230e:	f7fe fa7f 	bl	8000810 <_test_assert>
 8002312:	4607      	mov	r7, r0
 8002314:	b110      	cbz	r0, 800231c <mbox1_execute+0x40c>
 8002316:	f384 8811 	msr	BASEPRI, r4
 800231a:	e62b      	b.n	8001f74 <mbox1_execute+0x64>
 800231c:	f380 8811 	msr	BASEPRI, r0
 8002320:	f386 8811 	msr	BASEPRI, r6
 8002324:	69a9      	ldr	r1, [r5, #24]
 8002326:	f1a1 0e05 	sub.w	lr, r1, #5
 800232a:	f1de 0100 	rsbs	r1, lr, #0
 800232e:	eb41 010e 	adc.w	r1, r1, lr
 8002332:	2009      	movs	r0, #9
 8002334:	f7fe fa6c 	bl	8000810 <_test_assert>
 8002338:	b110      	cbz	r0, 8002340 <mbox1_execute+0x430>
 800233a:	f387 8811 	msr	BASEPRI, r7
 800233e:	e619      	b.n	8001f74 <mbox1_execute+0x64>
 8002340:	f380 8811 	msr	BASEPRI, r0
 8002344:	f386 8811 	msr	BASEPRI, r6
 8002348:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800234c:	eba1 0c03 	sub.w	ip, r1, r3
 8002350:	f1dc 0100 	rsbs	r1, ip, #0
 8002354:	f04f 000a 	mov.w	r0, #10
 8002358:	eb41 010c 	adc.w	r1, r1, ip
 800235c:	f7fe fa58 	bl	8000810 <_test_assert>
 8002360:	2300      	movs	r3, #0
 8002362:	2800      	cmp	r0, #0
 8002364:	f47f af78 	bne.w	8002258 <mbox1_execute+0x348>
 8002368:	f383 8811 	msr	BASEPRI, r3
 800236c:	2405      	movs	r4, #5
 800236e:	e005      	b.n	800237c <mbox1_execute+0x46c>
 8002370:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8002374:	f7fe fa64 	bl	8000840 <test_emit_token>
 8002378:	3c01      	subs	r4, #1
 800237a:	d00d      	beq.n	8002398 <mbox1_execute+0x488>
 800237c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002380:	a801      	add	r0, sp, #4
 8002382:	f7ff fd9d 	bl	8001ec0 <chMBFetch.constprop.16>
 8002386:	fab0 f180 	clz	r1, r0
 800238a:	0949      	lsrs	r1, r1, #5
 800238c:	200b      	movs	r0, #11
 800238e:	f7fe fa3f 	bl	8000810 <_test_assert>
 8002392:	2800      	cmp	r0, #0
 8002394:	d0ec      	beq.n	8002370 <mbox1_execute+0x460>
 8002396:	e5ed      	b.n	8001f74 <mbox1_execute+0x64>
 8002398:	4944      	ldr	r1, [pc, #272]	; (80024ac <mbox1_execute+0x59c>)
 800239a:	200c      	movs	r0, #12
 800239c:	f7fe fa10 	bl	80007c0 <_test_assert_sequence>
 80023a0:	2800      	cmp	r0, #0
 80023a2:	f47f ade7 	bne.w	8001f74 <mbox1_execute+0x64>
 80023a6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80023aa:	2047      	movs	r0, #71	; 0x47
 80023ac:	f7ff fd30 	bl	8001e10 <chMBPost.constprop.20>
 80023b0:	fab0 f180 	clz	r1, r0
 80023b4:	0949      	lsrs	r1, r1, #5
 80023b6:	200d      	movs	r0, #13
 80023b8:	f7fe fa2a 	bl	8000810 <_test_assert>
 80023bc:	2800      	cmp	r0, #0
 80023be:	f47f add9 	bne.w	8001f74 <mbox1_execute+0x64>
 80023c2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80023c6:	a801      	add	r0, sp, #4
 80023c8:	f7ff fd7a 	bl	8001ec0 <chMBFetch.constprop.16>
 80023cc:	fab0 f180 	clz	r1, r0
 80023d0:	0949      	lsrs	r1, r1, #5
 80023d2:	200e      	movs	r0, #14
 80023d4:	f7fe fa1c 	bl	8000810 <_test_assert>
 80023d8:	2800      	cmp	r0, #0
 80023da:	f47f adcb 	bne.w	8001f74 <mbox1_execute+0x64>
 80023de:	6829      	ldr	r1, [r5, #0]
 80023e0:	68ab      	ldr	r3, [r5, #8]
 80023e2:	1acf      	subs	r7, r1, r3
 80023e4:	4279      	negs	r1, r7
 80023e6:	4179      	adcs	r1, r7
 80023e8:	200f      	movs	r0, #15
 80023ea:	f7fe fa11 	bl	8000810 <_test_assert>
 80023ee:	2800      	cmp	r0, #0
 80023f0:	f47f adc0 	bne.w	8001f74 <mbox1_execute+0x64>
 80023f4:	6829      	ldr	r1, [r5, #0]
 80023f6:	68eb      	ldr	r3, [r5, #12]
 80023f8:	1ace      	subs	r6, r1, r3
 80023fa:	4271      	negs	r1, r6
 80023fc:	4171      	adcs	r1, r6
 80023fe:	2010      	movs	r0, #16
 8002400:	f7fe fa06 	bl	8000810 <_test_assert>
 8002404:	2800      	cmp	r0, #0
 8002406:	f47f adb5 	bne.w	8001f74 <mbox1_execute+0x64>
 800240a:	2101      	movs	r1, #1
 800240c:	a801      	add	r0, sp, #4
 800240e:	f7ff fd57 	bl	8001ec0 <chMBFetch.constprop.16>
 8002412:	3001      	adds	r0, #1
 8002414:	4241      	negs	r1, r0
 8002416:	4141      	adcs	r1, r0
 8002418:	2011      	movs	r0, #17
 800241a:	f7fe f9f9 	bl	8000810 <_test_assert>
 800241e:	2800      	cmp	r0, #0
 8002420:	f47f ada8 	bne.w	8001f74 <mbox1_execute+0x64>
 8002424:	2620      	movs	r6, #32
 8002426:	f386 8811 	msr	BASEPRI, r6
 800242a:	a801      	add	r0, sp, #4
 800242c:	f7fe fe40 	bl	80010b0 <chMBFetchI.constprop.15>
 8002430:	4601      	mov	r1, r0
 8002432:	f384 8811 	msr	BASEPRI, r4
 8002436:	1c4a      	adds	r2, r1, #1
 8002438:	4251      	negs	r1, r2
 800243a:	4151      	adcs	r1, r2
 800243c:	2012      	movs	r0, #18
 800243e:	f7fe f9e7 	bl	8000810 <_test_assert>
 8002442:	2800      	cmp	r0, #0
 8002444:	f47f ad96 	bne.w	8001f74 <mbox1_execute+0x64>
 8002448:	f386 8811 	msr	BASEPRI, r6
 800244c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800244e:	1f4b      	subs	r3, r1, #5
 8002450:	4259      	negs	r1, r3
 8002452:	4159      	adcs	r1, r3
 8002454:	2013      	movs	r0, #19
 8002456:	f7fe f9db 	bl	8000810 <_test_assert>
 800245a:	2800      	cmp	r0, #0
 800245c:	f47f aefb 	bne.w	8002256 <mbox1_execute+0x346>
 8002460:	2700      	movs	r7, #0
 8002462:	f387 8811 	msr	BASEPRI, r7
 8002466:	2420      	movs	r4, #32
 8002468:	f384 8811 	msr	BASEPRI, r4
 800246c:	69a9      	ldr	r1, [r5, #24]
 800246e:	fab1 f181 	clz	r1, r1
 8002472:	0949      	lsrs	r1, r1, #5
 8002474:	2014      	movs	r0, #20
 8002476:	f7fe f9cb 	bl	8000810 <_test_assert>
 800247a:	4606      	mov	r6, r0
 800247c:	2800      	cmp	r0, #0
 800247e:	f47f af5c 	bne.w	800233a <mbox1_execute+0x42a>
 8002482:	f380 8811 	msr	BASEPRI, r0
 8002486:	f384 8811 	msr	BASEPRI, r4
 800248a:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800248e:	eba1 0e03 	sub.w	lr, r1, r3
 8002492:	f1de 0100 	rsbs	r1, lr, #0
 8002496:	eb41 010e 	adc.w	r1, r1, lr
 800249a:	2015      	movs	r0, #21
 800249c:	f7fe f9b8 	bl	8000810 <_test_assert>
 80024a0:	2800      	cmp	r0, #0
 80024a2:	f43f ad69 	beq.w	8001f78 <mbox1_execute+0x68>
 80024a6:	f386 8811 	msr	BASEPRI, r6
 80024aa:	e563      	b.n	8001f74 <mbox1_execute+0x64>
 80024ac:	08006120 	.word	0x08006120

080024b0 <chThdEnqueueTimeoutS>:
 80024b0:	b161      	cbz	r1, 80024cc <chThdEnqueueTimeoutS+0x1c>
 80024b2:	4b08      	ldr	r3, [pc, #32]	; (80024d4 <chThdEnqueueTimeoutS+0x24>)
 80024b4:	699b      	ldr	r3, [r3, #24]
 80024b6:	b410      	push	{r4}
 80024b8:	6018      	str	r0, [r3, #0]
 80024ba:	6844      	ldr	r4, [r0, #4]
 80024bc:	605c      	str	r4, [r3, #4]
 80024be:	4602      	mov	r2, r0
 80024c0:	6023      	str	r3, [r4, #0]
 80024c2:	2004      	movs	r0, #4
 80024c4:	6053      	str	r3, [r2, #4]
 80024c6:	bc10      	pop	{r4}
 80024c8:	f7ff bb8a 	b.w	8001be0 <chSchGoSleepTimeoutS>
 80024cc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80024d0:	4770      	bx	lr
 80024d2:	bf00      	nop
 80024d4:	20000938 	.word	0x20000938
	...

080024e0 <chOQWriteTimeout>:
 80024e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024e4:	b083      	sub	sp, #12
 80024e6:	4604      	mov	r4, r0
 80024e8:	460d      	mov	r5, r1
 80024ea:	4616      	mov	r6, r2
 80024ec:	9301      	str	r3, [sp, #4]
 80024ee:	f8d0 801c 	ldr.w	r8, [r0, #28]
 80024f2:	f04f 0920 	mov.w	r9, #32
 80024f6:	f389 8811 	msr	BASEPRI, r9
 80024fa:	2700      	movs	r7, #0
 80024fc:	46ba      	mov	sl, r7
 80024fe:	68a3      	ldr	r3, [r4, #8]
 8002500:	f105 0b01 	add.w	fp, r5, #1
 8002504:	1e59      	subs	r1, r3, #1
 8002506:	4620      	mov	r0, r4
 8002508:	b1fb      	cbz	r3, 800254a <chOQWriteTimeout+0x6a>
 800250a:	6963      	ldr	r3, [r4, #20]
 800250c:	60a1      	str	r1, [r4, #8]
 800250e:	1c59      	adds	r1, r3, #1
 8002510:	6161      	str	r1, [r4, #20]
 8002512:	7829      	ldrb	r1, [r5, #0]
 8002514:	7019      	strb	r1, [r3, #0]
 8002516:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 800251a:	4299      	cmp	r1, r3
 800251c:	bf24      	itt	cs
 800251e:	68e3      	ldrcs	r3, [r4, #12]
 8002520:	6163      	strcs	r3, [r4, #20]
 8002522:	f1b8 0f00 	cmp.w	r8, #0
 8002526:	d000      	beq.n	800252a <chOQWriteTimeout+0x4a>
 8002528:	47c0      	blx	r8
 800252a:	f38a 8811 	msr	BASEPRI, sl
 800252e:	3e01      	subs	r6, #1
 8002530:	f107 0701 	add.w	r7, r7, #1
 8002534:	d013      	beq.n	800255e <chOQWriteTimeout+0x7e>
 8002536:	f389 8811 	msr	BASEPRI, r9
 800253a:	68a3      	ldr	r3, [r4, #8]
 800253c:	465d      	mov	r5, fp
 800253e:	1e59      	subs	r1, r3, #1
 8002540:	f105 0b01 	add.w	fp, r5, #1
 8002544:	4620      	mov	r0, r4
 8002546:	2b00      	cmp	r3, #0
 8002548:	d1df      	bne.n	800250a <chOQWriteTimeout+0x2a>
 800254a:	9901      	ldr	r1, [sp, #4]
 800254c:	9300      	str	r3, [sp, #0]
 800254e:	4620      	mov	r0, r4
 8002550:	f7ff ffae 	bl	80024b0 <chThdEnqueueTimeoutS>
 8002554:	9b00      	ldr	r3, [sp, #0]
 8002556:	2800      	cmp	r0, #0
 8002558:	d0d1      	beq.n	80024fe <chOQWriteTimeout+0x1e>
 800255a:	f383 8811 	msr	BASEPRI, r3
 800255e:	4638      	mov	r0, r7
 8002560:	b003      	add	sp, #12
 8002562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002566:	bf00      	nop
	...

08002570 <writet>:
 8002570:	3030      	adds	r0, #48	; 0x30
 8002572:	f7ff bfb5 	b.w	80024e0 <chOQWriteTimeout>
 8002576:	bf00      	nop
	...

08002580 <write>:
 8002580:	3030      	adds	r0, #48	; 0x30
 8002582:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002586:	f7ff bfab 	b.w	80024e0 <chOQWriteTimeout>
 800258a:	bf00      	nop
 800258c:	0000      	movs	r0, r0
	...

08002590 <chOQPutTimeout>:
 8002590:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002592:	4604      	mov	r4, r0
 8002594:	460f      	mov	r7, r1
 8002596:	4616      	mov	r6, r2
 8002598:	2320      	movs	r3, #32
 800259a:	f383 8811 	msr	BASEPRI, r3
 800259e:	e003      	b.n	80025a8 <chOQPutTimeout+0x18>
 80025a0:	f7ff ff86 	bl	80024b0 <chThdEnqueueTimeoutS>
 80025a4:	2800      	cmp	r0, #0
 80025a6:	db17      	blt.n	80025d8 <chOQPutTimeout+0x48>
 80025a8:	68a5      	ldr	r5, [r4, #8]
 80025aa:	4631      	mov	r1, r6
 80025ac:	4620      	mov	r0, r4
 80025ae:	2d00      	cmp	r5, #0
 80025b0:	d0f6      	beq.n	80025a0 <chOQPutTimeout+0x10>
 80025b2:	6963      	ldr	r3, [r4, #20]
 80025b4:	3d01      	subs	r5, #1
 80025b6:	1c5a      	adds	r2, r3, #1
 80025b8:	6162      	str	r2, [r4, #20]
 80025ba:	60a5      	str	r5, [r4, #8]
 80025bc:	701f      	strb	r7, [r3, #0]
 80025be:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 80025c2:	429a      	cmp	r2, r3
 80025c4:	bf24      	itt	cs
 80025c6:	68e3      	ldrcs	r3, [r4, #12]
 80025c8:	6163      	strcs	r3, [r4, #20]
 80025ca:	69e3      	ldr	r3, [r4, #28]
 80025cc:	b103      	cbz	r3, 80025d0 <chOQPutTimeout+0x40>
 80025ce:	4798      	blx	r3
 80025d0:	2000      	movs	r0, #0
 80025d2:	f380 8811 	msr	BASEPRI, r0
 80025d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80025d8:	f385 8811 	msr	BASEPRI, r5
 80025dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80025de:	bf00      	nop

080025e0 <thread2.lto_priv.77>:
 80025e0:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 80025e4:	2100      	movs	r1, #0
 80025e6:	4801      	ldr	r0, [pc, #4]	; (80025ec <thread2.lto_priv.77+0xc>)
 80025e8:	f7ff bfd2 	b.w	8002590 <chOQPutTimeout>
 80025ec:	20000888 	.word	0x20000888

080025f0 <putt>:
 80025f0:	3030      	adds	r0, #48	; 0x30
 80025f2:	f7ff bfcd 	b.w	8002590 <chOQPutTimeout>
 80025f6:	bf00      	nop
	...

08002600 <put>:
 8002600:	3030      	adds	r0, #48	; 0x30
 8002602:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002606:	f7ff bfc3 	b.w	8002590 <chOQPutTimeout>
 800260a:	bf00      	nop
 800260c:	0000      	movs	r0, r0
	...

08002610 <chIQReadTimeout>:
 8002610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002614:	4604      	mov	r4, r0
 8002616:	b083      	sub	sp, #12
 8002618:	4689      	mov	r9, r1
 800261a:	4693      	mov	fp, r2
 800261c:	461d      	mov	r5, r3
 800261e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8002622:	2720      	movs	r7, #32
 8002624:	f387 8811 	msr	BASEPRI, r7
 8002628:	2600      	movs	r6, #0
 800262a:	9701      	str	r7, [sp, #4]
 800262c:	46b2      	mov	sl, r6
 800262e:	f1b8 0f00 	cmp.w	r8, #0
 8002632:	d005      	beq.n	8002640 <chIQReadTimeout+0x30>
 8002634:	4620      	mov	r0, r4
 8002636:	47c0      	blx	r8
 8002638:	e002      	b.n	8002640 <chIQReadTimeout+0x30>
 800263a:	f7ff ff39 	bl	80024b0 <chThdEnqueueTimeoutS>
 800263e:	b9d8      	cbnz	r0, 8002678 <chIQReadTimeout+0x68>
 8002640:	68a7      	ldr	r7, [r4, #8]
 8002642:	4629      	mov	r1, r5
 8002644:	4620      	mov	r0, r4
 8002646:	2f00      	cmp	r7, #0
 8002648:	d0f7      	beq.n	800263a <chIQReadTimeout+0x2a>
 800264a:	69a2      	ldr	r2, [r4, #24]
 800264c:	3f01      	subs	r7, #1
 800264e:	1c51      	adds	r1, r2, #1
 8002650:	61a1      	str	r1, [r4, #24]
 8002652:	60a7      	str	r7, [r4, #8]
 8002654:	7813      	ldrb	r3, [r2, #0]
 8002656:	f809 3b01 	strb.w	r3, [r9], #1
 800265a:	6923      	ldr	r3, [r4, #16]
 800265c:	69a2      	ldr	r2, [r4, #24]
 800265e:	429a      	cmp	r2, r3
 8002660:	bf24      	itt	cs
 8002662:	68e3      	ldrcs	r3, [r4, #12]
 8002664:	61a3      	strcs	r3, [r4, #24]
 8002666:	f38a 8811 	msr	BASEPRI, sl
 800266a:	3601      	adds	r6, #1
 800266c:	45b3      	cmp	fp, r6
 800266e:	d005      	beq.n	800267c <chIQReadTimeout+0x6c>
 8002670:	9b01      	ldr	r3, [sp, #4]
 8002672:	f383 8811 	msr	BASEPRI, r3
 8002676:	e7da      	b.n	800262e <chIQReadTimeout+0x1e>
 8002678:	f387 8811 	msr	BASEPRI, r7
 800267c:	4630      	mov	r0, r6
 800267e:	b003      	add	sp, #12
 8002680:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08002690 <readt>:
 8002690:	300c      	adds	r0, #12
 8002692:	f7ff bfbd 	b.w	8002610 <chIQReadTimeout>
 8002696:	bf00      	nop
	...

080026a0 <read>:
 80026a0:	300c      	adds	r0, #12
 80026a2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80026a6:	f7ff bfb3 	b.w	8002610 <chIQReadTimeout>
 80026aa:	bf00      	nop
 80026ac:	0000      	movs	r0, r0
	...

080026b0 <chIQGetTimeout>:
 80026b0:	b570      	push	{r4, r5, r6, lr}
 80026b2:	2320      	movs	r3, #32
 80026b4:	460e      	mov	r6, r1
 80026b6:	4604      	mov	r4, r0
 80026b8:	f383 8811 	msr	BASEPRI, r3
 80026bc:	69c3      	ldr	r3, [r0, #28]
 80026be:	b12b      	cbz	r3, 80026cc <chIQGetTimeout+0x1c>
 80026c0:	4798      	blx	r3
 80026c2:	e003      	b.n	80026cc <chIQGetTimeout+0x1c>
 80026c4:	f7ff fef4 	bl	80024b0 <chThdEnqueueTimeoutS>
 80026c8:	2800      	cmp	r0, #0
 80026ca:	db15      	blt.n	80026f8 <chIQGetTimeout+0x48>
 80026cc:	68a5      	ldr	r5, [r4, #8]
 80026ce:	4631      	mov	r1, r6
 80026d0:	4620      	mov	r0, r4
 80026d2:	2d00      	cmp	r5, #0
 80026d4:	d0f6      	beq.n	80026c4 <chIQGetTimeout+0x14>
 80026d6:	69a2      	ldr	r2, [r4, #24]
 80026d8:	6921      	ldr	r1, [r4, #16]
 80026da:	1c53      	adds	r3, r2, #1
 80026dc:	428b      	cmp	r3, r1
 80026de:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 80026e2:	61a3      	str	r3, [r4, #24]
 80026e4:	60a5      	str	r5, [r4, #8]
 80026e6:	bf28      	it	cs
 80026e8:	68e3      	ldrcs	r3, [r4, #12]
 80026ea:	7810      	ldrb	r0, [r2, #0]
 80026ec:	bf28      	it	cs
 80026ee:	61a3      	strcs	r3, [r4, #24]
 80026f0:	2300      	movs	r3, #0
 80026f2:	f383 8811 	msr	BASEPRI, r3
 80026f6:	bd70      	pop	{r4, r5, r6, pc}
 80026f8:	f385 8811 	msr	BASEPRI, r5
 80026fc:	bd70      	pop	{r4, r5, r6, pc}
 80026fe:	bf00      	nop

08002700 <thread1.lto_priv.71>:
 8002700:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8002704:	4801      	ldr	r0, [pc, #4]	; (800270c <thread1.lto_priv.71+0xc>)
 8002706:	f7ff bfd3 	b.w	80026b0 <chIQGetTimeout>
 800270a:	bf00      	nop
 800270c:	20000810 	.word	0x20000810

08002710 <gett>:
 8002710:	300c      	adds	r0, #12
 8002712:	f7ff bfcd 	b.w	80026b0 <chIQGetTimeout>
 8002716:	bf00      	nop
	...

08002720 <get>:
 8002720:	300c      	adds	r0, #12
 8002722:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002726:	f7ff bfc3 	b.w	80026b0 <chIQGetTimeout>
 800272a:	bf00      	nop
 800272c:	0000      	movs	r0, r0
	...

08002730 <chThdSleep>:
 8002730:	b508      	push	{r3, lr}
 8002732:	4601      	mov	r1, r0
 8002734:	2320      	movs	r3, #32
 8002736:	f383 8811 	msr	BASEPRI, r3
 800273a:	2008      	movs	r0, #8
 800273c:	f7ff fa50 	bl	8001be0 <chSchGoSleepTimeoutS>
 8002740:	2300      	movs	r3, #0
 8002742:	f383 8811 	msr	BASEPRI, r3
 8002746:	bd08      	pop	{r3, pc}
	...

08002750 <Thread1>:
 8002750:	4b1b      	ldr	r3, [pc, #108]	; (80027c0 <Thread1+0x70>)
 8002752:	4a1c      	ldr	r2, [pc, #112]	; (80027c4 <Thread1+0x74>)
 8002754:	699b      	ldr	r3, [r3, #24]
 8002756:	4c1c      	ldr	r4, [pc, #112]	; (80027c8 <Thread1+0x78>)
 8002758:	b580      	push	{r7, lr}
 800275a:	619a      	str	r2, [r3, #24]
 800275c:	f44f 7700 	mov.w	r7, #512	; 0x200
 8002760:	8327      	strh	r7, [r4, #24]
 8002762:	f240 40e2 	movw	r0, #1250	; 0x4e2
 8002766:	f7ff ffe3 	bl	8002730 <chThdSleep>
 800276a:	f44f 6500 	mov.w	r5, #2048	; 0x800
 800276e:	8367      	strh	r7, [r4, #26]
 8002770:	f240 40e2 	movw	r0, #1250	; 0x4e2
 8002774:	f7ff ffdc 	bl	8002730 <chThdSleep>
 8002778:	8325      	strh	r5, [r4, #24]
 800277a:	f240 40e2 	movw	r0, #1250	; 0x4e2
 800277e:	f7ff ffd7 	bl	8002730 <chThdSleep>
 8002782:	f44f 5600 	mov.w	r6, #8192	; 0x2000
 8002786:	8365      	strh	r5, [r4, #26]
 8002788:	f240 40e2 	movw	r0, #1250	; 0x4e2
 800278c:	f7ff ffd0 	bl	8002730 <chThdSleep>
 8002790:	8326      	strh	r6, [r4, #24]
 8002792:	f240 40e2 	movw	r0, #1250	; 0x4e2
 8002796:	f7ff ffcb 	bl	8002730 <chThdSleep>
 800279a:	f44f 4500 	mov.w	r5, #32768	; 0x8000
 800279e:	8366      	strh	r6, [r4, #26]
 80027a0:	f240 40e2 	movw	r0, #1250	; 0x4e2
 80027a4:	f7ff ffc4 	bl	8002730 <chThdSleep>
 80027a8:	8325      	strh	r5, [r4, #24]
 80027aa:	f240 40e2 	movw	r0, #1250	; 0x4e2
 80027ae:	f7ff ffbf 	bl	8002730 <chThdSleep>
 80027b2:	8365      	strh	r5, [r4, #26]
 80027b4:	f240 40e2 	movw	r0, #1250	; 0x4e2
 80027b8:	f7ff ffba 	bl	8002730 <chThdSleep>
 80027bc:	e7d0      	b.n	8002760 <Thread1+0x10>
 80027be:	bf00      	nop
 80027c0:	20000938 	.word	0x20000938
 80027c4:	08005d20 	.word	0x08005d20
 80027c8:	48001000 	.word	0x48001000
 80027cc:	00000000 	.word	0x00000000

080027d0 <Thread2>:
 80027d0:	4b1b      	ldr	r3, [pc, #108]	; (8002840 <Thread2+0x70>)
 80027d2:	4a1c      	ldr	r2, [pc, #112]	; (8002844 <Thread2+0x74>)
 80027d4:	699b      	ldr	r3, [r3, #24]
 80027d6:	4c1c      	ldr	r4, [pc, #112]	; (8002848 <Thread2+0x78>)
 80027d8:	b580      	push	{r7, lr}
 80027da:	619a      	str	r2, [r3, #24]
 80027dc:	f44f 6780 	mov.w	r7, #1024	; 0x400
 80027e0:	f240 40e2 	movw	r0, #1250	; 0x4e2
 80027e4:	f7ff ffa4 	bl	8002730 <chThdSleep>
 80027e8:	f240 40e2 	movw	r0, #1250	; 0x4e2
 80027ec:	8327      	strh	r7, [r4, #24]
 80027ee:	f7ff ff9f 	bl	8002730 <chThdSleep>
 80027f2:	f44f 5580 	mov.w	r5, #4096	; 0x1000
 80027f6:	f240 40e2 	movw	r0, #1250	; 0x4e2
 80027fa:	8367      	strh	r7, [r4, #26]
 80027fc:	f7ff ff98 	bl	8002730 <chThdSleep>
 8002800:	8325      	strh	r5, [r4, #24]
 8002802:	f240 40e2 	movw	r0, #1250	; 0x4e2
 8002806:	f7ff ff93 	bl	8002730 <chThdSleep>
 800280a:	f44f 4680 	mov.w	r6, #16384	; 0x4000
 800280e:	8365      	strh	r5, [r4, #26]
 8002810:	f240 40e2 	movw	r0, #1250	; 0x4e2
 8002814:	f7ff ff8c 	bl	8002730 <chThdSleep>
 8002818:	f240 40e2 	movw	r0, #1250	; 0x4e2
 800281c:	8326      	strh	r6, [r4, #24]
 800281e:	f7ff ff87 	bl	8002730 <chThdSleep>
 8002822:	f44f 7580 	mov.w	r5, #256	; 0x100
 8002826:	f240 40e2 	movw	r0, #1250	; 0x4e2
 800282a:	8366      	strh	r6, [r4, #26]
 800282c:	f7ff ff80 	bl	8002730 <chThdSleep>
 8002830:	8325      	strh	r5, [r4, #24]
 8002832:	f240 40e2 	movw	r0, #1250	; 0x4e2
 8002836:	f7ff ff7b 	bl	8002730 <chThdSleep>
 800283a:	8365      	strh	r5, [r4, #26]
 800283c:	e7d0      	b.n	80027e0 <Thread2+0x10>
 800283e:	bf00      	nop
 8002840:	20000938 	.word	0x20000938
 8002844:	08005d20 	.word	0x08005d20
 8002848:	48001000 	.word	0x48001000
 800284c:	00000000 	.word	0x00000000

08002850 <sys1_execute>:
 8002850:	b510      	push	{r4, lr}
 8002852:	b086      	sub	sp, #24
 8002854:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8002858:	b91b      	cbnz	r3, 8002862 <sys1_execute+0x12>
 800285a:	f7fe fcf9 	bl	8001250 <chSysGetStatusAndLockX.part.2>
 800285e:	f7fe ff97 	bl	8001790 <chSysRestoreStatusX.part.3>
 8002862:	2320      	movs	r3, #32
 8002864:	f383 8811 	msr	BASEPRI, r3
 8002868:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800286c:	b91b      	cbnz	r3, 8002876 <sys1_execute+0x26>
 800286e:	f7fe fcef 	bl	8001250 <chSysGetStatusAndLockX.part.2>
 8002872:	f7fe ff8d 	bl	8001790 <chSysRestoreStatusX.part.3>
 8002876:	2300      	movs	r3, #0
 8002878:	f383 8811 	msr	BASEPRI, r3
 800287c:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8002880:	b913      	cbnz	r3, 8002888 <sys1_execute+0x38>
 8002882:	2320      	movs	r3, #32
 8002884:	f383 8811 	msr	BASEPRI, r3
 8002888:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800288c:	b913      	cbnz	r3, 8002894 <sys1_execute+0x44>
 800288e:	2320      	movs	r3, #32
 8002890:	f383 8811 	msr	BASEPRI, r3
 8002894:	2300      	movs	r3, #0
 8002896:	f383 8811 	msr	BASEPRI, r3
 800289a:	2220      	movs	r2, #32
 800289c:	f382 8811 	msr	BASEPRI, r2
 80028a0:	f3ef 8212 	mrs	r2, BASEPRI_MAX
 80028a4:	b10a      	cbz	r2, 80028aa <sys1_execute+0x5a>
 80028a6:	f383 8811 	msr	BASEPRI, r3
 80028aa:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 80028ae:	b113      	cbz	r3, 80028b6 <sys1_execute+0x66>
 80028b0:	2300      	movs	r3, #0
 80028b2:	f383 8811 	msr	BASEPRI, r3
 80028b6:	2300      	movs	r3, #0
 80028b8:	9304      	str	r3, [sp, #16]
 80028ba:	2320      	movs	r3, #32
 80028bc:	f383 8811 	msr	BASEPRI, r3
 80028c0:	9b04      	ldr	r3, [sp, #16]
 80028c2:	ac01      	add	r4, sp, #4
 80028c4:	b113      	cbz	r3, 80028cc <sys1_execute+0x7c>
 80028c6:	4620      	mov	r0, r4
 80028c8:	f7fe fc2a 	bl	8001120 <chVTDoResetI>
 80028cc:	4620      	mov	r0, r4
 80028ce:	2300      	movs	r3, #0
 80028d0:	4a0b      	ldr	r2, [pc, #44]	; (8002900 <sys1_execute+0xb0>)
 80028d2:	2101      	movs	r1, #1
 80028d4:	f7fe fc5c 	bl	8001190 <chVTDoSetI>
 80028d8:	2400      	movs	r4, #0
 80028da:	f384 8811 	msr	BASEPRI, r4
 80028de:	200a      	movs	r0, #10
 80028e0:	f7ff ff26 	bl	8002730 <chThdSleep>
 80028e4:	2320      	movs	r3, #32
 80028e6:	f383 8811 	msr	BASEPRI, r3
 80028ea:	9904      	ldr	r1, [sp, #16]
 80028ec:	f384 8811 	msr	BASEPRI, r4
 80028f0:	fab1 f181 	clz	r1, r1
 80028f4:	0949      	lsrs	r1, r1, #5
 80028f6:	2001      	movs	r0, #1
 80028f8:	f7fd ff8a 	bl	8000810 <_test_assert>
 80028fc:	b006      	add	sp, #24
 80028fe:	bd10      	pop	{r4, pc}
 8002900:	080017b1 	.word	0x080017b1
	...

08002910 <thread1.lto_priv.70>:
 8002910:	b510      	push	{r4, lr}
 8002912:	4604      	mov	r4, r0
 8002914:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002918:	f7ff ff0a 	bl	8002730 <chThdSleep>
 800291c:	2320      	movs	r3, #32
 800291e:	f383 8811 	msr	BASEPRI, r3
 8002922:	2101      	movs	r1, #1
 8002924:	4620      	mov	r0, r4
 8002926:	f7fe fa83 	bl	8000e30 <chEvtSignalI>
 800292a:	f7fe fe29 	bl	8001580 <chSchRescheduleS>
 800292e:	2300      	movs	r3, #0
 8002930:	f383 8811 	msr	BASEPRI, r3
 8002934:	bd10      	pop	{r4, pc}
 8002936:	bf00      	nop
	...

08002940 <thread2.lto_priv.76>:
 8002940:	b538      	push	{r3, r4, r5, lr}
 8002942:	2520      	movs	r5, #32
 8002944:	f385 8811 	msr	BASEPRI, r5
 8002948:	2100      	movs	r1, #0
 800294a:	480b      	ldr	r0, [pc, #44]	; (8002978 <thread2.lto_priv.76+0x38>)
 800294c:	f7fe fa88 	bl	8000e60 <chEvtBroadcastFlagsI>
 8002950:	2400      	movs	r4, #0
 8002952:	f7fe fe15 	bl	8001580 <chSchRescheduleS>
 8002956:	f384 8811 	msr	BASEPRI, r4
 800295a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800295e:	f7ff fee7 	bl	8002730 <chThdSleep>
 8002962:	f385 8811 	msr	BASEPRI, r5
 8002966:	4805      	ldr	r0, [pc, #20]	; (800297c <thread2.lto_priv.76+0x3c>)
 8002968:	4621      	mov	r1, r4
 800296a:	f7fe fa79 	bl	8000e60 <chEvtBroadcastFlagsI>
 800296e:	f7fe fe07 	bl	8001580 <chSchRescheduleS>
 8002972:	f384 8811 	msr	BASEPRI, r4
 8002976:	bd38      	pop	{r3, r4, r5, pc}
 8002978:	20000808 	.word	0x20000808
 800297c:	2000080c 	.word	0x2000080c

08002980 <thread2.lto_priv.75>:
 8002980:	b508      	push	{r3, lr}
 8002982:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002986:	f7ff fed3 	bl	8002730 <chThdSleep>
 800298a:	2320      	movs	r3, #32
 800298c:	f383 8811 	msr	BASEPRI, r3
 8002990:	4804      	ldr	r0, [pc, #16]	; (80029a4 <thread2.lto_priv.75+0x24>)
 8002992:	f7fe fb3d 	bl	8001010 <chSemSignalI>
 8002996:	f7fe fdf3 	bl	8001580 <chSchRescheduleS>
 800299a:	2300      	movs	r3, #0
 800299c:	f383 8811 	msr	BASEPRI, r3
 80029a0:	bd08      	pop	{r3, pc}
 80029a2:	bf00      	nop
 80029a4:	200008ac 	.word	0x200008ac
	...

080029b0 <test_wait_tick>:
 80029b0:	b508      	push	{r3, lr}
 80029b2:	2001      	movs	r0, #1
 80029b4:	f7ff febc 	bl	8002730 <chThdSleep>
 80029b8:	2320      	movs	r3, #32
 80029ba:	f383 8811 	msr	BASEPRI, r3
 80029be:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80029c2:	2300      	movs	r3, #0
 80029c4:	6a50      	ldr	r0, [r2, #36]	; 0x24
 80029c6:	f383 8811 	msr	BASEPRI, r3
 80029ca:	bd08      	pop	{r3, pc}
 80029cc:	0000      	movs	r0, r0
	...

080029d0 <bmk10_execute>:
 80029d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80029d4:	f7ff ffec 	bl	80029b0 <test_wait_tick>
 80029d8:	f7fe fc1a 	bl	8001210 <test_start_timer.constprop.1>
 80029dc:	2400      	movs	r4, #0
 80029de:	f8df a070 	ldr.w	sl, [pc, #112]	; 8002a50 <bmk10_execute+0x80>
 80029e2:	4f16      	ldr	r7, [pc, #88]	; (8002a3c <bmk10_execute+0x6c>)
 80029e4:	4e16      	ldr	r6, [pc, #88]	; (8002a40 <bmk10_execute+0x70>)
 80029e6:	4d17      	ldr	r5, [pc, #92]	; (8002a44 <bmk10_execute+0x74>)
 80029e8:	46a1      	mov	r9, r4
 80029ea:	f04f 0820 	mov.w	r8, #32
 80029ee:	f388 8811 	msr	BASEPRI, r8
 80029f2:	2300      	movs	r3, #0
 80029f4:	463a      	mov	r2, r7
 80029f6:	4630      	mov	r0, r6
 80029f8:	2101      	movs	r1, #1
 80029fa:	f7fe fbc9 	bl	8001190 <chVTDoSetI>
 80029fe:	463a      	mov	r2, r7
 8002a00:	2300      	movs	r3, #0
 8002a02:	f242 7110 	movw	r1, #10000	; 0x2710
 8002a06:	4628      	mov	r0, r5
 8002a08:	f7fe fbc2 	bl	8001190 <chVTDoSetI>
 8002a0c:	4630      	mov	r0, r6
 8002a0e:	f7fe fb87 	bl	8001120 <chVTDoResetI>
 8002a12:	4628      	mov	r0, r5
 8002a14:	f7fe fb84 	bl	8001120 <chVTDoResetI>
 8002a18:	f389 8811 	msr	BASEPRI, r9
 8002a1c:	f89a 3000 	ldrb.w	r3, [sl]
 8002a20:	3401      	adds	r4, #1
 8002a22:	2b00      	cmp	r3, #0
 8002a24:	d0e3      	beq.n	80029ee <bmk10_execute+0x1e>
 8002a26:	4808      	ldr	r0, [pc, #32]	; (8002a48 <bmk10_execute+0x78>)
 8002a28:	f7fd ff62 	bl	80008f0 <test_print>
 8002a2c:	0060      	lsls	r0, r4, #1
 8002a2e:	f7fd fe67 	bl	8000700 <test_printn>
 8002a32:	4806      	ldr	r0, [pc, #24]	; (8002a4c <bmk10_execute+0x7c>)
 8002a34:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002a38:	f7fd bf3a 	b.w	80008b0 <test_println>
 8002a3c:	08000401 	.word	0x08000401
 8002a40:	20001210 	.word	0x20001210
 8002a44:	20001224 	.word	0x20001224
 8002a48:	08005d50 	.word	0x08005d50
 8002a4c:	08005d60 	.word	0x08005d60
 8002a50:	200011d0 	.word	0x200011d0
	...

08002a60 <bmk9_execute>:
 8002a60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a62:	4b26      	ldr	r3, [pc, #152]	; (8002afc <bmk9_execute+0x9c>)
 8002a64:	4c26      	ldr	r4, [pc, #152]	; (8002b00 <bmk9_execute+0xa0>)
 8002a66:	4f27      	ldr	r7, [pc, #156]	; (8002b04 <bmk9_execute+0xa4>)
 8002a68:	60e3      	str	r3, [r4, #12]
 8002a6a:	f103 0210 	add.w	r2, r3, #16
 8002a6e:	2500      	movs	r5, #0
 8002a70:	6122      	str	r2, [r4, #16]
 8002a72:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8002a76:	6024      	str	r4, [r4, #0]
 8002a78:	6064      	str	r4, [r4, #4]
 8002a7a:	60a5      	str	r5, [r4, #8]
 8002a7c:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8002a80:	f7ff ff96 	bl	80029b0 <test_wait_tick>
 8002a84:	f7fe fbc4 	bl	8001210 <test_start_timer.constprop.1>
 8002a88:	462e      	mov	r6, r5
 8002a8a:	2320      	movs	r3, #32
 8002a8c:	f383 8811 	msr	BASEPRI, r3
 8002a90:	2100      	movs	r1, #0
 8002a92:	4620      	mov	r0, r4
 8002a94:	f7fe f97c 	bl	8000d90 <chIQPutI>
 8002a98:	4620      	mov	r0, r4
 8002a9a:	2101      	movs	r1, #1
 8002a9c:	f7fe f978 	bl	8000d90 <chIQPutI>
 8002aa0:	4620      	mov	r0, r4
 8002aa2:	2102      	movs	r1, #2
 8002aa4:	f7fe f974 	bl	8000d90 <chIQPutI>
 8002aa8:	4620      	mov	r0, r4
 8002aaa:	2103      	movs	r1, #3
 8002aac:	f7fe f970 	bl	8000d90 <chIQPutI>
 8002ab0:	f386 8811 	msr	BASEPRI, r6
 8002ab4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002ab8:	4620      	mov	r0, r4
 8002aba:	f7ff fdf9 	bl	80026b0 <chIQGetTimeout>
 8002abe:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002ac2:	4620      	mov	r0, r4
 8002ac4:	f7ff fdf4 	bl	80026b0 <chIQGetTimeout>
 8002ac8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002acc:	4620      	mov	r0, r4
 8002ace:	f7ff fdef 	bl	80026b0 <chIQGetTimeout>
 8002ad2:	4620      	mov	r0, r4
 8002ad4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002ad8:	f7ff fdea 	bl	80026b0 <chIQGetTimeout>
 8002adc:	783b      	ldrb	r3, [r7, #0]
 8002ade:	3501      	adds	r5, #1
 8002ae0:	2b00      	cmp	r3, #0
 8002ae2:	d0d2      	beq.n	8002a8a <bmk9_execute+0x2a>
 8002ae4:	4808      	ldr	r0, [pc, #32]	; (8002b08 <bmk9_execute+0xa8>)
 8002ae6:	f7fd ff03 	bl	80008f0 <test_print>
 8002aea:	00a8      	lsls	r0, r5, #2
 8002aec:	f7fd fe08 	bl	8000700 <test_printn>
 8002af0:	4806      	ldr	r0, [pc, #24]	; (8002b0c <bmk9_execute+0xac>)
 8002af2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002af6:	f7fd bedb 	b.w	80008b0 <test_println>
 8002afa:	bf00      	nop
 8002afc:	20000ad8 	.word	0x20000ad8
 8002b00:	20000ae8 	.word	0x20000ae8
 8002b04:	200011d0 	.word	0x200011d0
 8002b08:	08005d50 	.word	0x08005d50
 8002b0c:	08005e90 	.word	0x08005e90

08002b10 <bmk6_execute>:
 8002b10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002b14:	4b14      	ldr	r3, [pc, #80]	; (8002b68 <bmk6_execute+0x58>)
 8002b16:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8002b78 <bmk6_execute+0x68>
 8002b1a:	699b      	ldr	r3, [r3, #24]
 8002b1c:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8002b7c <bmk6_execute+0x6c>
 8002b20:	689d      	ldr	r5, [r3, #8]
 8002b22:	4f12      	ldr	r7, [pc, #72]	; (8002b6c <bmk6_execute+0x5c>)
 8002b24:	b083      	sub	sp, #12
 8002b26:	f7ff ff43 	bl	80029b0 <test_wait_tick>
 8002b2a:	f7fe fb71 	bl	8001210 <test_start_timer.constprop.1>
 8002b2e:	2400      	movs	r4, #0
 8002b30:	3501      	adds	r5, #1
 8002b32:	4626      	mov	r6, r4
 8002b34:	4643      	mov	r3, r8
 8002b36:	9600      	str	r6, [sp, #0]
 8002b38:	462a      	mov	r2, r5
 8002b3a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8002b3e:	4638      	mov	r0, r7
 8002b40:	f7fe ff2e 	bl	80019a0 <chThdCreateStatic>
 8002b44:	f899 3000 	ldrb.w	r3, [r9]
 8002b48:	3401      	adds	r4, #1
 8002b4a:	2b00      	cmp	r3, #0
 8002b4c:	d0f2      	beq.n	8002b34 <bmk6_execute+0x24>
 8002b4e:	4808      	ldr	r0, [pc, #32]	; (8002b70 <bmk6_execute+0x60>)
 8002b50:	f7fd fece 	bl	80008f0 <test_print>
 8002b54:	4620      	mov	r0, r4
 8002b56:	f7fd fdd3 	bl	8000700 <test_printn>
 8002b5a:	4806      	ldr	r0, [pc, #24]	; (8002b74 <bmk6_execute+0x64>)
 8002b5c:	b003      	add	sp, #12
 8002b5e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002b62:	f7fd bea5 	b.w	80008b0 <test_println>
 8002b66:	bf00      	nop
 8002b68:	20000938 	.word	0x20000938
 8002b6c:	20000b40 	.word	0x20000b40
 8002b70:	08005d50 	.word	0x08005d50
 8002b74:	08005e50 	.word	0x08005e50
 8002b78:	200011d0 	.word	0x200011d0
 8002b7c:	08005ce1 	.word	0x08005ce1

08002b80 <thd4_execute>:
 8002b80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b82:	f7ff ff15 	bl	80029b0 <test_wait_tick>
 8002b86:	2620      	movs	r6, #32
 8002b88:	f386 8811 	msr	BASEPRI, r6
 8002b8c:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8002b90:	2300      	movs	r3, #0
 8002b92:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002b94:	f383 8811 	msr	BASEPRI, r3
 8002b98:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002b9c:	f7ff fdc8 	bl	8002730 <chThdSleep>
 8002ba0:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8002ba4:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8002ba8:	2001      	movs	r0, #1
 8002baa:	f7fd fde9 	bl	8000780 <_test_assert_time_window>
 8002bae:	b100      	cbz	r0, 8002bb2 <thd4_execute+0x32>
 8002bb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002bb2:	f386 8811 	msr	BASEPRI, r6
 8002bb6:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002bb8:	f380 8811 	msr	BASEPRI, r0
 8002bbc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002bc0:	f7ff fdb6 	bl	8002730 <chThdSleep>
 8002bc4:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8002bc8:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8002bcc:	2002      	movs	r0, #2
 8002bce:	f7fd fdd7 	bl	8000780 <_test_assert_time_window>
 8002bd2:	2800      	cmp	r0, #0
 8002bd4:	d1ec      	bne.n	8002bb0 <thd4_execute+0x30>
 8002bd6:	f386 8811 	msr	BASEPRI, r6
 8002bda:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002bdc:	f380 8811 	msr	BASEPRI, r0
 8002be0:	f242 7010 	movw	r0, #10000	; 0x2710
 8002be4:	f7ff fda4 	bl	8002730 <chThdSleep>
 8002be8:	f504 521c 	add.w	r2, r4, #9984	; 0x2700
 8002bec:	4611      	mov	r1, r2
 8002bee:	3110      	adds	r1, #16
 8002bf0:	3213      	adds	r2, #19
 8002bf2:	2003      	movs	r0, #3
 8002bf4:	f7fd fdc4 	bl	8000780 <_test_assert_time_window>
 8002bf8:	2800      	cmp	r0, #0
 8002bfa:	d1d9      	bne.n	8002bb0 <thd4_execute+0x30>
 8002bfc:	f386 8811 	msr	BASEPRI, r6
 8002c00:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 8002c02:	f380 8811 	msr	BASEPRI, r0
 8002c06:	f507 747a 	add.w	r4, r7, #1000	; 0x3e8
 8002c0a:	f386 8811 	msr	BASEPRI, r6
 8002c0e:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002c10:	1a61      	subs	r1, r4, r1
 8002c12:	d002      	beq.n	8002c1a <thd4_execute+0x9a>
 8002c14:	2008      	movs	r0, #8
 8002c16:	f7fe ffe3 	bl	8001be0 <chSchGoSleepTimeoutS>
 8002c1a:	2300      	movs	r3, #0
 8002c1c:	f383 8811 	msr	BASEPRI, r3
 8002c20:	2004      	movs	r0, #4
 8002c22:	f207 32eb 	addw	r2, r7, #1003	; 0x3eb
 8002c26:	4621      	mov	r1, r4
 8002c28:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002c2c:	f7fd bda8 	b.w	8000780 <_test_assert_time_window>

08002c30 <chMsgWait>:
 8002c30:	b510      	push	{r4, lr}
 8002c32:	2320      	movs	r3, #32
 8002c34:	f383 8811 	msr	BASEPRI, r3
 8002c38:	4c0b      	ldr	r4, [pc, #44]	; (8002c68 <chMsgWait+0x38>)
 8002c3a:	69a2      	ldr	r2, [r4, #24]
 8002c3c:	4613      	mov	r3, r2
 8002c3e:	f853 0f28 	ldr.w	r0, [r3, #40]!
 8002c42:	4298      	cmp	r0, r3
 8002c44:	d008      	beq.n	8002c58 <chMsgWait+0x28>
 8002c46:	6801      	ldr	r1, [r0, #0]
 8002c48:	6291      	str	r1, [r2, #40]	; 0x28
 8002c4a:	220d      	movs	r2, #13
 8002c4c:	604b      	str	r3, [r1, #4]
 8002c4e:	2300      	movs	r3, #0
 8002c50:	7702      	strb	r2, [r0, #28]
 8002c52:	f383 8811 	msr	BASEPRI, r3
 8002c56:	bd10      	pop	{r4, pc}
 8002c58:	200e      	movs	r0, #14
 8002c5a:	f7fe fed9 	bl	8001a10 <chSchGoSleepS>
 8002c5e:	69a2      	ldr	r2, [r4, #24]
 8002c60:	6a90      	ldr	r0, [r2, #40]	; 0x28
 8002c62:	f102 0328 	add.w	r3, r2, #40	; 0x28
 8002c66:	e7ee      	b.n	8002c46 <chMsgWait+0x16>
 8002c68:	20000938 	.word	0x20000938
 8002c6c:	00000000 	.word	0x00000000

08002c70 <thread2.lto_priv.78>:
 8002c70:	b570      	push	{r4, r5, r6, lr}
 8002c72:	2620      	movs	r6, #32
 8002c74:	2500      	movs	r5, #0
 8002c76:	f7ff ffdb 	bl	8002c30 <chMsgWait>
 8002c7a:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8002c7c:	f386 8811 	msr	BASEPRI, r6
 8002c80:	4621      	mov	r1, r4
 8002c82:	f7fe fdad 	bl	80017e0 <chSchWakeupS>
 8002c86:	f385 8811 	msr	BASEPRI, r5
 8002c8a:	2c00      	cmp	r4, #0
 8002c8c:	d1f3      	bne.n	8002c76 <thread2.lto_priv.78+0x6>
 8002c8e:	bd70      	pop	{r4, r5, r6, pc}

08002c90 <msg1_execute>:
 8002c90:	b570      	push	{r4, r5, r6, lr}
 8002c92:	4a1f      	ldr	r2, [pc, #124]	; (8002d10 <msg1_execute+0x80>)
 8002c94:	4b1f      	ldr	r3, [pc, #124]	; (8002d14 <msg1_execute+0x84>)
 8002c96:	6991      	ldr	r1, [r2, #24]
 8002c98:	481f      	ldr	r0, [pc, #124]	; (8002d18 <msg1_execute+0x88>)
 8002c9a:	688a      	ldr	r2, [r1, #8]
 8002c9c:	b082      	sub	sp, #8
 8002c9e:	3201      	adds	r2, #1
 8002ca0:	9100      	str	r1, [sp, #0]
 8002ca2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8002ca6:	f7fe fe7b 	bl	80019a0 <chThdCreateStatic>
 8002caa:	4b1c      	ldr	r3, [pc, #112]	; (8002d1c <msg1_execute+0x8c>)
 8002cac:	6018      	str	r0, [r3, #0]
 8002cae:	f7ff ffbf 	bl	8002c30 <chMsgWait>
 8002cb2:	2520      	movs	r5, #32
 8002cb4:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002cb6:	f385 8811 	msr	BASEPRI, r5
 8002cba:	4631      	mov	r1, r6
 8002cbc:	f7fe fd90 	bl	80017e0 <chSchWakeupS>
 8002cc0:	2400      	movs	r4, #0
 8002cc2:	f384 8811 	msr	BASEPRI, r4
 8002cc6:	b2f0      	uxtb	r0, r6
 8002cc8:	f7fd fdba 	bl	8000840 <test_emit_token>
 8002ccc:	f7ff ffb0 	bl	8002c30 <chMsgWait>
 8002cd0:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002cd2:	f385 8811 	msr	BASEPRI, r5
 8002cd6:	4631      	mov	r1, r6
 8002cd8:	f7fe fd82 	bl	80017e0 <chSchWakeupS>
 8002cdc:	f384 8811 	msr	BASEPRI, r4
 8002ce0:	b2f0      	uxtb	r0, r6
 8002ce2:	f7fd fdad 	bl	8000840 <test_emit_token>
 8002ce6:	f7ff ffa3 	bl	8002c30 <chMsgWait>
 8002cea:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002cec:	f385 8811 	msr	BASEPRI, r5
 8002cf0:	4631      	mov	r1, r6
 8002cf2:	f7fe fd75 	bl	80017e0 <chSchWakeupS>
 8002cf6:	f384 8811 	msr	BASEPRI, r4
 8002cfa:	b2f0      	uxtb	r0, r6
 8002cfc:	f7fd fda0 	bl	8000840 <test_emit_token>
 8002d00:	4907      	ldr	r1, [pc, #28]	; (8002d20 <msg1_execute+0x90>)
 8002d02:	2001      	movs	r0, #1
 8002d04:	b002      	add	sp, #8
 8002d06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002d0a:	f7fd bd59 	b.w	80007c0 <_test_assert_sequence>
 8002d0e:	bf00      	nop
 8002d10:	20000938 	.word	0x20000938
 8002d14:	08002da1 	.word	0x08002da1
 8002d18:	20000b40 	.word	0x20000b40
 8002d1c:	200011d4 	.word	0x200011d4
 8002d20:	08005f00 	.word	0x08005f00
	...

08002d30 <chMsgSend>:
 8002d30:	4b0e      	ldr	r3, [pc, #56]	; (8002d6c <chMsgSend+0x3c>)
 8002d32:	b510      	push	{r4, lr}
 8002d34:	2220      	movs	r2, #32
 8002d36:	699c      	ldr	r4, [r3, #24]
 8002d38:	f382 8811 	msr	BASEPRI, r2
 8002d3c:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8002d40:	6222      	str	r2, [r4, #32]
 8002d42:	6022      	str	r2, [r4, #0]
 8002d44:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8002d46:	6062      	str	r2, [r4, #4]
 8002d48:	6321      	str	r1, [r4, #48]	; 0x30
 8002d4a:	6014      	str	r4, [r2, #0]
 8002d4c:	7f02      	ldrb	r2, [r0, #28]
 8002d4e:	62c4      	str	r4, [r0, #44]	; 0x2c
 8002d50:	2a0e      	cmp	r2, #14
 8002d52:	d007      	beq.n	8002d64 <chMsgSend+0x34>
 8002d54:	200c      	movs	r0, #12
 8002d56:	f7fe fe5b 	bl	8001a10 <chSchGoSleepS>
 8002d5a:	6a20      	ldr	r0, [r4, #32]
 8002d5c:	2300      	movs	r3, #0
 8002d5e:	f383 8811 	msr	BASEPRI, r3
 8002d62:	bd10      	pop	{r4, pc}
 8002d64:	f7fd ffe4 	bl	8000d30 <chSchReadyI>
 8002d68:	e7f4      	b.n	8002d54 <chMsgSend+0x24>
 8002d6a:	bf00      	nop
 8002d6c:	20000938 	.word	0x20000938

08002d70 <msg_loop_test>:
 8002d70:	b570      	push	{r4, r5, r6, lr}
 8002d72:	4605      	mov	r5, r0
 8002d74:	f7ff fe1c 	bl	80029b0 <test_wait_tick>
 8002d78:	f7fe fa4a 	bl	8001210 <test_start_timer.constprop.1>
 8002d7c:	4e07      	ldr	r6, [pc, #28]	; (8002d9c <msg_loop_test+0x2c>)
 8002d7e:	2400      	movs	r4, #0
 8002d80:	2101      	movs	r1, #1
 8002d82:	4628      	mov	r0, r5
 8002d84:	f7ff ffd4 	bl	8002d30 <chMsgSend>
 8002d88:	7833      	ldrb	r3, [r6, #0]
 8002d8a:	3401      	adds	r4, #1
 8002d8c:	2b00      	cmp	r3, #0
 8002d8e:	d0f7      	beq.n	8002d80 <msg_loop_test+0x10>
 8002d90:	4628      	mov	r0, r5
 8002d92:	2100      	movs	r1, #0
 8002d94:	f7ff ffcc 	bl	8002d30 <chMsgSend>
 8002d98:	4620      	mov	r0, r4
 8002d9a:	bd70      	pop	{r4, r5, r6, pc}
 8002d9c:	200011d0 	.word	0x200011d0

08002da0 <thread.lto_priv.60>:
 8002da0:	b510      	push	{r4, lr}
 8002da2:	2141      	movs	r1, #65	; 0x41
 8002da4:	4604      	mov	r4, r0
 8002da6:	f7ff ffc3 	bl	8002d30 <chMsgSend>
 8002daa:	4620      	mov	r0, r4
 8002dac:	2142      	movs	r1, #66	; 0x42
 8002dae:	f7ff ffbf 	bl	8002d30 <chMsgSend>
 8002db2:	4620      	mov	r0, r4
 8002db4:	2143      	movs	r1, #67	; 0x43
 8002db6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002dba:	f7ff bfb9 	b.w	8002d30 <chMsgSend>
 8002dbe:	bf00      	nop

08002dc0 <chMtxLockS>:
 8002dc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002dc2:	4a36      	ldr	r2, [pc, #216]	; (8002e9c <chMtxLockS+0xdc>)
 8002dc4:	6883      	ldr	r3, [r0, #8]
 8002dc6:	6995      	ldr	r5, [r2, #24]
 8002dc8:	2b00      	cmp	r3, #0
 8002dca:	d03f      	beq.n	8002e4c <chMtxLockS+0x8c>
 8002dcc:	68a9      	ldr	r1, [r5, #8]
 8002dce:	689a      	ldr	r2, [r3, #8]
 8002dd0:	4291      	cmp	r1, r2
 8002dd2:	4604      	mov	r4, r0
 8002dd4:	d906      	bls.n	8002de4 <chMtxLockS+0x24>
 8002dd6:	7f1a      	ldrb	r2, [r3, #28]
 8002dd8:	6099      	str	r1, [r3, #8]
 8002dda:	2a06      	cmp	r2, #6
 8002ddc:	d03b      	beq.n	8002e56 <chMtxLockS+0x96>
 8002dde:	2a07      	cmp	r2, #7
 8002de0:	d015      	beq.n	8002e0e <chMtxLockS+0x4e>
 8002de2:	b342      	cbz	r2, 8002e36 <chMtxLockS+0x76>
 8002de4:	4626      	mov	r6, r4
 8002de6:	4623      	mov	r3, r4
 8002de8:	e003      	b.n	8002df2 <chMtxLockS+0x32>
 8002dea:	6899      	ldr	r1, [r3, #8]
 8002dec:	68aa      	ldr	r2, [r5, #8]
 8002dee:	4291      	cmp	r1, r2
 8002df0:	d32a      	bcc.n	8002e48 <chMtxLockS+0x88>
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	429c      	cmp	r4, r3
 8002df6:	d1f8      	bne.n	8002dea <chMtxLockS+0x2a>
 8002df8:	6873      	ldr	r3, [r6, #4]
 8002dfa:	2006      	movs	r0, #6
 8002dfc:	e9c5 6300 	strd	r6, r3, [r5]
 8002e00:	601d      	str	r5, [r3, #0]
 8002e02:	6075      	str	r5, [r6, #4]
 8002e04:	622c      	str	r4, [r5, #32]
 8002e06:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002e0a:	f7fe be01 	b.w	8001a10 <chSchGoSleepS>
 8002e0e:	e9d3 0200 	ldrd	r0, r2, [r3]
 8002e12:	6010      	str	r0, [r2, #0]
 8002e14:	6a1e      	ldr	r6, [r3, #32]
 8002e16:	6818      	ldr	r0, [r3, #0]
 8002e18:	6042      	str	r2, [r0, #4]
 8002e1a:	4632      	mov	r2, r6
 8002e1c:	e002      	b.n	8002e24 <chMtxLockS+0x64>
 8002e1e:	6890      	ldr	r0, [r2, #8]
 8002e20:	4288      	cmp	r0, r1
 8002e22:	d332      	bcc.n	8002e8a <chMtxLockS+0xca>
 8002e24:	6812      	ldr	r2, [r2, #0]
 8002e26:	4296      	cmp	r6, r2
 8002e28:	d1f9      	bne.n	8002e1e <chMtxLockS+0x5e>
 8002e2a:	6872      	ldr	r2, [r6, #4]
 8002e2c:	e9c3 6200 	strd	r6, r2, [r3]
 8002e30:	6013      	str	r3, [r2, #0]
 8002e32:	6073      	str	r3, [r6, #4]
 8002e34:	e7d6      	b.n	8002de4 <chMtxLockS+0x24>
 8002e36:	e9d3 1200 	ldrd	r1, r2, [r3]
 8002e3a:	6011      	str	r1, [r2, #0]
 8002e3c:	6819      	ldr	r1, [r3, #0]
 8002e3e:	4618      	mov	r0, r3
 8002e40:	604a      	str	r2, [r1, #4]
 8002e42:	f7fd ff75 	bl	8000d30 <chSchReadyI>
 8002e46:	e7cd      	b.n	8002de4 <chMtxLockS+0x24>
 8002e48:	461e      	mov	r6, r3
 8002e4a:	e7d5      	b.n	8002df8 <chMtxLockS+0x38>
 8002e4c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8002e4e:	e9c0 5302 	strd	r5, r3, [r0, #8]
 8002e52:	63a8      	str	r0, [r5, #56]	; 0x38
 8002e54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e56:	e9d3 0200 	ldrd	r0, r2, [r3]
 8002e5a:	6010      	str	r0, [r2, #0]
 8002e5c:	6a1e      	ldr	r6, [r3, #32]
 8002e5e:	6818      	ldr	r0, [r3, #0]
 8002e60:	4637      	mov	r7, r6
 8002e62:	6042      	str	r2, [r0, #4]
 8002e64:	4632      	mov	r2, r6
 8002e66:	e002      	b.n	8002e6e <chMtxLockS+0xae>
 8002e68:	6890      	ldr	r0, [r2, #8]
 8002e6a:	4288      	cmp	r0, r1
 8002e6c:	d314      	bcc.n	8002e98 <chMtxLockS+0xd8>
 8002e6e:	6812      	ldr	r2, [r2, #0]
 8002e70:	4296      	cmp	r6, r2
 8002e72:	d1f9      	bne.n	8002e68 <chMtxLockS+0xa8>
 8002e74:	687a      	ldr	r2, [r7, #4]
 8002e76:	68a9      	ldr	r1, [r5, #8]
 8002e78:	e9c3 7200 	strd	r7, r2, [r3]
 8002e7c:	6013      	str	r3, [r2, #0]
 8002e7e:	607b      	str	r3, [r7, #4]
 8002e80:	68b3      	ldr	r3, [r6, #8]
 8002e82:	689a      	ldr	r2, [r3, #8]
 8002e84:	428a      	cmp	r2, r1
 8002e86:	d3a6      	bcc.n	8002dd6 <chMtxLockS+0x16>
 8002e88:	e7ac      	b.n	8002de4 <chMtxLockS+0x24>
 8002e8a:	4616      	mov	r6, r2
 8002e8c:	6872      	ldr	r2, [r6, #4]
 8002e8e:	e9c3 6200 	strd	r6, r2, [r3]
 8002e92:	6013      	str	r3, [r2, #0]
 8002e94:	6073      	str	r3, [r6, #4]
 8002e96:	e7a5      	b.n	8002de4 <chMtxLockS+0x24>
 8002e98:	4617      	mov	r7, r2
 8002e9a:	e7eb      	b.n	8002e74 <chMtxLockS+0xb4>
 8002e9c:	20000938 	.word	0x20000938

08002ea0 <chMtxLock>:
 8002ea0:	b508      	push	{r3, lr}
 8002ea2:	2320      	movs	r3, #32
 8002ea4:	f383 8811 	msr	BASEPRI, r3
 8002ea8:	f7ff ff8a 	bl	8002dc0 <chMtxLockS>
 8002eac:	2300      	movs	r3, #0
 8002eae:	f383 8811 	msr	BASEPRI, r3
 8002eb2:	bd08      	pop	{r3, pc}
	...

08002ec0 <bmk12_execute>:
 8002ec0:	b570      	push	{r4, r5, r6, lr}
 8002ec2:	f7ff fd75 	bl	80029b0 <test_wait_tick>
 8002ec6:	f7fe f9a3 	bl	8001210 <test_start_timer.constprop.1>
 8002eca:	4e15      	ldr	r6, [pc, #84]	; (8002f20 <bmk12_execute+0x60>)
 8002ecc:	4c15      	ldr	r4, [pc, #84]	; (8002f24 <bmk12_execute+0x64>)
 8002ece:	2500      	movs	r5, #0
 8002ed0:	4620      	mov	r0, r4
 8002ed2:	f7ff ffe5 	bl	8002ea0 <chMtxLock>
 8002ed6:	4620      	mov	r0, r4
 8002ed8:	f7fe fd12 	bl	8001900 <chMtxUnlock>
 8002edc:	4620      	mov	r0, r4
 8002ede:	f7ff ffdf 	bl	8002ea0 <chMtxLock>
 8002ee2:	4620      	mov	r0, r4
 8002ee4:	f7fe fd0c 	bl	8001900 <chMtxUnlock>
 8002ee8:	4620      	mov	r0, r4
 8002eea:	f7ff ffd9 	bl	8002ea0 <chMtxLock>
 8002eee:	4620      	mov	r0, r4
 8002ef0:	f7fe fd06 	bl	8001900 <chMtxUnlock>
 8002ef4:	4620      	mov	r0, r4
 8002ef6:	f7ff ffd3 	bl	8002ea0 <chMtxLock>
 8002efa:	4620      	mov	r0, r4
 8002efc:	f7fe fd00 	bl	8001900 <chMtxUnlock>
 8002f00:	7833      	ldrb	r3, [r6, #0]
 8002f02:	3501      	adds	r5, #1
 8002f04:	2b00      	cmp	r3, #0
 8002f06:	d0e3      	beq.n	8002ed0 <bmk12_execute+0x10>
 8002f08:	4807      	ldr	r0, [pc, #28]	; (8002f28 <bmk12_execute+0x68>)
 8002f0a:	f7fd fcf1 	bl	80008f0 <test_print>
 8002f0e:	00a8      	lsls	r0, r5, #2
 8002f10:	f7fd fbf6 	bl	8000700 <test_printn>
 8002f14:	4805      	ldr	r0, [pc, #20]	; (8002f2c <bmk12_execute+0x6c>)
 8002f16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002f1a:	f7fd bcc9 	b.w	80008b0 <test_println>
 8002f1e:	bf00      	nop
 8002f20:	200011d0 	.word	0x200011d0
 8002f24:	20000b1c 	.word	0x20000b1c
 8002f28:	08005d50 	.word	0x08005d50
 8002f2c:	08005d80 	.word	0x08005d80

08002f30 <thread11>:
 8002f30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f32:	4607      	mov	r7, r0
 8002f34:	481b      	ldr	r0, [pc, #108]	; (8002fa4 <thread11+0x74>)
 8002f36:	f7ff ffb3 	bl	8002ea0 <chMtxLock>
 8002f3a:	481b      	ldr	r0, [pc, #108]	; (8002fa8 <thread11+0x78>)
 8002f3c:	f7ff ffb0 	bl	8002ea0 <chMtxLock>
 8002f40:	2320      	movs	r3, #32
 8002f42:	f383 8811 	msr	BASEPRI, r3
 8002f46:	4d19      	ldr	r5, [pc, #100]	; (8002fac <thread11+0x7c>)
 8002f48:	69ab      	ldr	r3, [r5, #24]
 8002f4a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 8002f4c:	4630      	mov	r0, r6
 8002f4e:	f7fe f837 	bl	8000fc0 <chMtxUnlockS>
 8002f52:	4b17      	ldr	r3, [pc, #92]	; (8002fb0 <thread11+0x80>)
 8002f54:	69ac      	ldr	r4, [r5, #24]
 8002f56:	4618      	mov	r0, r3
 8002f58:	6223      	str	r3, [r4, #32]
 8002f5a:	e003      	b.n	8002f64 <thread11+0x34>
 8002f5c:	6899      	ldr	r1, [r3, #8]
 8002f5e:	68a2      	ldr	r2, [r4, #8]
 8002f60:	4291      	cmp	r1, r2
 8002f62:	d302      	bcc.n	8002f6a <thread11+0x3a>
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	4283      	cmp	r3, r0
 8002f68:	d1f8      	bne.n	8002f5c <thread11+0x2c>
 8002f6a:	685a      	ldr	r2, [r3, #4]
 8002f6c:	2007      	movs	r0, #7
 8002f6e:	e9c4 3200 	strd	r3, r2, [r4]
 8002f72:	6014      	str	r4, [r2, #0]
 8002f74:	605c      	str	r4, [r3, #4]
 8002f76:	f7fe fd4b 	bl	8001a10 <chSchGoSleepS>
 8002f7a:	69ab      	ldr	r3, [r5, #24]
 8002f7c:	6a1b      	ldr	r3, [r3, #32]
 8002f7e:	3301      	adds	r3, #1
 8002f80:	d002      	beq.n	8002f88 <thread11+0x58>
 8002f82:	4630      	mov	r0, r6
 8002f84:	f7ff ff1c 	bl	8002dc0 <chMtxLockS>
 8002f88:	2300      	movs	r3, #0
 8002f8a:	f383 8811 	msr	BASEPRI, r3
 8002f8e:	7838      	ldrb	r0, [r7, #0]
 8002f90:	f7fd fc56 	bl	8000840 <test_emit_token>
 8002f94:	4804      	ldr	r0, [pc, #16]	; (8002fa8 <thread11+0x78>)
 8002f96:	f7fe fcb3 	bl	8001900 <chMtxUnlock>
 8002f9a:	4802      	ldr	r0, [pc, #8]	; (8002fa4 <thread11+0x74>)
 8002f9c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002fa0:	f7fe bcae 	b.w	8001900 <chMtxUnlock>
 8002fa4:	20000844 	.word	0x20000844
 8002fa8:	20000834 	.word	0x20000834
 8002fac:	20000938 	.word	0x20000938
 8002fb0:	20000800 	.word	0x20000800
	...

08002fc0 <thread10>:
 8002fc0:	b570      	push	{r4, r5, r6, lr}
 8002fc2:	4606      	mov	r6, r0
 8002fc4:	4816      	ldr	r0, [pc, #88]	; (8003020 <thread10+0x60>)
 8002fc6:	f7ff ff6b 	bl	8002ea0 <chMtxLock>
 8002fca:	2320      	movs	r3, #32
 8002fcc:	f383 8811 	msr	BASEPRI, r3
 8002fd0:	4b14      	ldr	r3, [pc, #80]	; (8003024 <thread10+0x64>)
 8002fd2:	699c      	ldr	r4, [r3, #24]
 8002fd4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8002fd6:	4628      	mov	r0, r5
 8002fd8:	f7fd fff2 	bl	8000fc0 <chMtxUnlockS>
 8002fdc:	4812      	ldr	r0, [pc, #72]	; (8003028 <thread10+0x68>)
 8002fde:	6220      	str	r0, [r4, #32]
 8002fe0:	4603      	mov	r3, r0
 8002fe2:	e003      	b.n	8002fec <thread10+0x2c>
 8002fe4:	6899      	ldr	r1, [r3, #8]
 8002fe6:	68a2      	ldr	r2, [r4, #8]
 8002fe8:	4291      	cmp	r1, r2
 8002fea:	d302      	bcc.n	8002ff2 <thread10+0x32>
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	4283      	cmp	r3, r0
 8002ff0:	d1f8      	bne.n	8002fe4 <thread10+0x24>
 8002ff2:	685a      	ldr	r2, [r3, #4]
 8002ff4:	2007      	movs	r0, #7
 8002ff6:	e9c4 3200 	strd	r3, r2, [r4]
 8002ffa:	6014      	str	r4, [r2, #0]
 8002ffc:	605c      	str	r4, [r3, #4]
 8002ffe:	f7fe fd07 	bl	8001a10 <chSchGoSleepS>
 8003002:	4628      	mov	r0, r5
 8003004:	f7ff fedc 	bl	8002dc0 <chMtxLockS>
 8003008:	2300      	movs	r3, #0
 800300a:	f383 8811 	msr	BASEPRI, r3
 800300e:	7830      	ldrb	r0, [r6, #0]
 8003010:	f7fd fc16 	bl	8000840 <test_emit_token>
 8003014:	4802      	ldr	r0, [pc, #8]	; (8003020 <thread10+0x60>)
 8003016:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800301a:	f7fe bc71 	b.w	8001900 <chMtxUnlock>
 800301e:	bf00      	nop
 8003020:	20000834 	.word	0x20000834
 8003024:	20000938 	.word	0x20000938
 8003028:	20000800 	.word	0x20000800
 800302c:	00000000 	.word	0x00000000

08003030 <thread12>:
 8003030:	b538      	push	{r3, r4, r5, lr}
 8003032:	4c06      	ldr	r4, [pc, #24]	; (800304c <thread12+0x1c>)
 8003034:	4605      	mov	r5, r0
 8003036:	4620      	mov	r0, r4
 8003038:	f7ff ff32 	bl	8002ea0 <chMtxLock>
 800303c:	7828      	ldrb	r0, [r5, #0]
 800303e:	f7fd fbff 	bl	8000840 <test_emit_token>
 8003042:	4620      	mov	r0, r4
 8003044:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003048:	f7fe bc5a 	b.w	8001900 <chMtxUnlock>
 800304c:	20000844 	.word	0x20000844

08003050 <mtx5_execute>:
 8003050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003052:	4d37      	ldr	r5, [pc, #220]	; (8003130 <mtx5_execute+0xe0>)
 8003054:	69aa      	ldr	r2, [r5, #24]
 8003056:	2320      	movs	r3, #32
 8003058:	6896      	ldr	r6, [r2, #8]
 800305a:	f383 8811 	msr	BASEPRI, r3
 800305e:	4c35      	ldr	r4, [pc, #212]	; (8003134 <mtx5_execute+0xe4>)
 8003060:	68a3      	ldr	r3, [r4, #8]
 8003062:	2b00      	cmp	r3, #0
 8003064:	d057      	beq.n	8003116 <mtx5_execute+0xc6>
 8003066:	2100      	movs	r1, #0
 8003068:	2300      	movs	r3, #0
 800306a:	f383 8811 	msr	BASEPRI, r3
 800306e:	2001      	movs	r0, #1
 8003070:	f7fd fbce 	bl	8000810 <_test_assert>
 8003074:	4601      	mov	r1, r0
 8003076:	b100      	cbz	r0, 800307a <mtx5_execute+0x2a>
 8003078:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800307a:	2320      	movs	r3, #32
 800307c:	f383 8811 	msr	BASEPRI, r3
 8003080:	68a3      	ldr	r3, [r4, #8]
 8003082:	2b00      	cmp	r3, #0
 8003084:	d04e      	beq.n	8003124 <mtx5_execute+0xd4>
 8003086:	2101      	movs	r1, #1
 8003088:	2300      	movs	r3, #0
 800308a:	f383 8811 	msr	BASEPRI, r3
 800308e:	2002      	movs	r0, #2
 8003090:	f7fd fbbe 	bl	8000810 <_test_assert>
 8003094:	4607      	mov	r7, r0
 8003096:	2800      	cmp	r0, #0
 8003098:	d1ee      	bne.n	8003078 <mtx5_execute+0x28>
 800309a:	2320      	movs	r3, #32
 800309c:	f383 8811 	msr	BASEPRI, r3
 80030a0:	4824      	ldr	r0, [pc, #144]	; (8003134 <mtx5_execute+0xe4>)
 80030a2:	f7fd ff8d 	bl	8000fc0 <chMtxUnlockS>
 80030a6:	f387 8811 	msr	BASEPRI, r7
 80030aa:	6821      	ldr	r1, [r4, #0]
 80030ac:	1b09      	subs	r1, r1, r4
 80030ae:	fab1 f181 	clz	r1, r1
 80030b2:	2003      	movs	r0, #3
 80030b4:	0949      	lsrs	r1, r1, #5
 80030b6:	f7fd fbab 	bl	8000810 <_test_assert>
 80030ba:	2800      	cmp	r0, #0
 80030bc:	d1dc      	bne.n	8003078 <mtx5_execute+0x28>
 80030be:	68a1      	ldr	r1, [r4, #8]
 80030c0:	fab1 f181 	clz	r1, r1
 80030c4:	0949      	lsrs	r1, r1, #5
 80030c6:	2004      	movs	r0, #4
 80030c8:	f7fd fba2 	bl	8000810 <_test_assert>
 80030cc:	2800      	cmp	r0, #0
 80030ce:	d1d3      	bne.n	8003078 <mtx5_execute+0x28>
 80030d0:	69ab      	ldr	r3, [r5, #24]
 80030d2:	6899      	ldr	r1, [r3, #8]
 80030d4:	1b89      	subs	r1, r1, r6
 80030d6:	fab1 f181 	clz	r1, r1
 80030da:	2005      	movs	r0, #5
 80030dc:	0949      	lsrs	r1, r1, #5
 80030de:	f7fd fb97 	bl	8000810 <_test_assert>
 80030e2:	2800      	cmp	r0, #0
 80030e4:	d1c8      	bne.n	8003078 <mtx5_execute+0x28>
 80030e6:	4813      	ldr	r0, [pc, #76]	; (8003134 <mtx5_execute+0xe4>)
 80030e8:	f7ff feda 	bl	8002ea0 <chMtxLock>
 80030ec:	f7fe fa70 	bl	80015d0 <chMtxUnlockAll>
 80030f0:	6821      	ldr	r1, [r4, #0]
 80030f2:	1b09      	subs	r1, r1, r4
 80030f4:	fab1 f181 	clz	r1, r1
 80030f8:	2006      	movs	r0, #6
 80030fa:	0949      	lsrs	r1, r1, #5
 80030fc:	f7fd fb88 	bl	8000810 <_test_assert>
 8003100:	2800      	cmp	r0, #0
 8003102:	d1b9      	bne.n	8003078 <mtx5_execute+0x28>
 8003104:	68a1      	ldr	r1, [r4, #8]
 8003106:	fab1 f181 	clz	r1, r1
 800310a:	0949      	lsrs	r1, r1, #5
 800310c:	2007      	movs	r0, #7
 800310e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003112:	f7fd bb7d 	b.w	8000810 <_test_assert>
 8003116:	69ab      	ldr	r3, [r5, #24]
 8003118:	60a3      	str	r3, [r4, #8]
 800311a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800311c:	60e2      	str	r2, [r4, #12]
 800311e:	639c      	str	r4, [r3, #56]	; 0x38
 8003120:	2101      	movs	r1, #1
 8003122:	e7a1      	b.n	8003068 <mtx5_execute+0x18>
 8003124:	69ab      	ldr	r3, [r5, #24]
 8003126:	60a3      	str	r3, [r4, #8]
 8003128:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800312a:	60e2      	str	r2, [r4, #12]
 800312c:	639c      	str	r4, [r3, #56]	; 0x38
 800312e:	e7ab      	b.n	8003088 <mtx5_execute+0x38>
 8003130:	20000938 	.word	0x20000938
 8003134:	20000834 	.word	0x20000834
	...

08003140 <thread4a>:
 8003140:	b510      	push	{r4, lr}
 8003142:	4c06      	ldr	r4, [pc, #24]	; (800315c <thread4a+0x1c>)
 8003144:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003148:	f7ff faf2 	bl	8002730 <chThdSleep>
 800314c:	4620      	mov	r0, r4
 800314e:	f7ff fea7 	bl	8002ea0 <chMtxLock>
 8003152:	4620      	mov	r0, r4
 8003154:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003158:	f7fe bbd2 	b.w	8001900 <chMtxUnlock>
 800315c:	20000844 	.word	0x20000844

08003160 <thread4b>:
 8003160:	b510      	push	{r4, lr}
 8003162:	4c06      	ldr	r4, [pc, #24]	; (800317c <thread4b+0x1c>)
 8003164:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8003168:	f7ff fae2 	bl	8002730 <chThdSleep>
 800316c:	4620      	mov	r0, r4
 800316e:	f7ff fe97 	bl	8002ea0 <chMtxLock>
 8003172:	4620      	mov	r0, r4
 8003174:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003178:	f7fe bbc2 	b.w	8001900 <chMtxUnlock>
 800317c:	20000834 	.word	0x20000834

08003180 <thread1.lto_priv.69>:
 8003180:	b538      	push	{r3, r4, r5, lr}
 8003182:	4c06      	ldr	r4, [pc, #24]	; (800319c <thread1.lto_priv.69+0x1c>)
 8003184:	4605      	mov	r5, r0
 8003186:	4620      	mov	r0, r4
 8003188:	f7ff fe8a 	bl	8002ea0 <chMtxLock>
 800318c:	7828      	ldrb	r0, [r5, #0]
 800318e:	f7fd fb57 	bl	8000840 <test_emit_token>
 8003192:	4620      	mov	r0, r4
 8003194:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003198:	f7fe bbb2 	b.w	8001900 <chMtxUnlock>
 800319c:	20000834 	.word	0x20000834

080031a0 <chHeapStatus>:
 80031a0:	b570      	push	{r4, r5, r6, lr}
 80031a2:	4c11      	ldr	r4, [pc, #68]	; (80031e8 <chHeapStatus+0x48>)
 80031a4:	2800      	cmp	r0, #0
 80031a6:	bf18      	it	ne
 80031a8:	4604      	movne	r4, r0
 80031aa:	f104 0510 	add.w	r5, r4, #16
 80031ae:	4628      	mov	r0, r5
 80031b0:	460e      	mov	r6, r1
 80031b2:	f7ff fe75 	bl	8002ea0 <chMtxLock>
 80031b6:	68a3      	ldr	r3, [r4, #8]
 80031b8:	b16b      	cbz	r3, 80031d6 <chHeapStatus+0x36>
 80031ba:	2200      	movs	r2, #0
 80031bc:	4614      	mov	r4, r2
 80031be:	e9d3 3000 	ldrd	r3, r0, [r3]
 80031c2:	3401      	adds	r4, #1
 80031c4:	4402      	add	r2, r0
 80031c6:	2b00      	cmp	r3, #0
 80031c8:	d1f9      	bne.n	80031be <chHeapStatus+0x1e>
 80031ca:	4628      	mov	r0, r5
 80031cc:	6032      	str	r2, [r6, #0]
 80031ce:	f7fe fb97 	bl	8001900 <chMtxUnlock>
 80031d2:	4620      	mov	r0, r4
 80031d4:	bd70      	pop	{r4, r5, r6, pc}
 80031d6:	461a      	mov	r2, r3
 80031d8:	461c      	mov	r4, r3
 80031da:	4628      	mov	r0, r5
 80031dc:	6032      	str	r2, [r6, #0]
 80031de:	f7fe fb8f 	bl	8001900 <chMtxUnlock>
 80031e2:	4620      	mov	r0, r4
 80031e4:	bd70      	pop	{r4, r5, r6, pc}
 80031e6:	bf00      	nop
 80031e8:	20000a90 	.word	0x20000a90
 80031ec:	00000000 	.word	0x00000000

080031f0 <chHeapFree>:
 80031f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80031f2:	f850 5c08 	ldr.w	r5, [r0, #-8]
 80031f6:	f105 0710 	add.w	r7, r5, #16
 80031fa:	4606      	mov	r6, r0
 80031fc:	f1a0 0408 	sub.w	r4, r0, #8
 8003200:	3508      	adds	r5, #8
 8003202:	4638      	mov	r0, r7
 8003204:	f7ff fe4c 	bl	8002ea0 <chMtxLock>
 8003208:	462b      	mov	r3, r5
 800320a:	42ab      	cmp	r3, r5
 800320c:	681a      	ldr	r2, [r3, #0]
 800320e:	d001      	beq.n	8003214 <chHeapFree+0x24>
 8003210:	42a3      	cmp	r3, r4
 8003212:	d202      	bcs.n	800321a <chHeapFree+0x2a>
 8003214:	b11a      	cbz	r2, 800321e <chHeapFree+0x2e>
 8003216:	4294      	cmp	r4, r2
 8003218:	d301      	bcc.n	800321e <chHeapFree+0x2e>
 800321a:	4613      	mov	r3, r2
 800321c:	e7f5      	b.n	800320a <chHeapFree+0x1a>
 800321e:	f846 2c08 	str.w	r2, [r6, #-8]
 8003222:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8003226:	601c      	str	r4, [r3, #0]
 8003228:	f856 0c08 	ldr.w	r0, [r6, #-8]
 800322c:	18b1      	adds	r1, r6, r2
 800322e:	4281      	cmp	r1, r0
 8003230:	d00a      	beq.n	8003248 <chHeapFree+0x58>
 8003232:	6859      	ldr	r1, [r3, #4]
 8003234:	f101 0208 	add.w	r2, r1, #8
 8003238:	441a      	add	r2, r3
 800323a:	4294      	cmp	r4, r2
 800323c:	d012      	beq.n	8003264 <chHeapFree+0x74>
 800323e:	4638      	mov	r0, r7
 8003240:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003244:	f7fe bb5c 	b.w	8001900 <chMtxUnlock>
 8003248:	6849      	ldr	r1, [r1, #4]
 800324a:	58b0      	ldr	r0, [r6, r2]
 800324c:	f846 0c08 	str.w	r0, [r6, #-8]
 8003250:	3208      	adds	r2, #8
 8003252:	440a      	add	r2, r1
 8003254:	f846 2c04 	str.w	r2, [r6, #-4]
 8003258:	6859      	ldr	r1, [r3, #4]
 800325a:	f101 0208 	add.w	r2, r1, #8
 800325e:	441a      	add	r2, r3
 8003260:	4294      	cmp	r4, r2
 8003262:	d1ec      	bne.n	800323e <chHeapFree+0x4e>
 8003264:	e956 0202 	ldrd	r0, r2, [r6, #-8]
 8003268:	3208      	adds	r2, #8
 800326a:	4411      	add	r1, r2
 800326c:	6018      	str	r0, [r3, #0]
 800326e:	6059      	str	r1, [r3, #4]
 8003270:	4638      	mov	r0, r7
 8003272:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003276:	f7fe bb43 	b.w	8001900 <chMtxUnlock>
 800327a:	bf00      	nop
 800327c:	0000      	movs	r0, r0
	...

08003280 <chThdRelease>:
 8003280:	b430      	push	{r4, r5}
 8003282:	2120      	movs	r1, #32
 8003284:	f381 8811 	msr	BASEPRI, r1
 8003288:	7f83      	ldrb	r3, [r0, #30]
 800328a:	3b01      	subs	r3, #1
 800328c:	b2db      	uxtb	r3, r3
 800328e:	7783      	strb	r3, [r0, #30]
 8003290:	2400      	movs	r4, #0
 8003292:	f384 8811 	msr	BASEPRI, r4
 8003296:	b91b      	cbnz	r3, 80032a0 <chThdRelease+0x20>
 8003298:	7f04      	ldrb	r4, [r0, #28]
 800329a:	2c0f      	cmp	r4, #15
 800329c:	4602      	mov	r2, r0
 800329e:	d001      	beq.n	80032a4 <chThdRelease+0x24>
 80032a0:	bc30      	pop	{r4, r5}
 80032a2:	4770      	bx	lr
 80032a4:	7f44      	ldrb	r4, [r0, #29]
 80032a6:	f004 0403 	and.w	r4, r4, #3
 80032aa:	2c01      	cmp	r4, #1
 80032ac:	d00f      	beq.n	80032ce <chThdRelease+0x4e>
 80032ae:	2c02      	cmp	r4, #2
 80032b0:	d1f6      	bne.n	80032a0 <chThdRelease+0x20>
 80032b2:	e9d0 0404 	ldrd	r0, r4, [r0, #16]
 80032b6:	6120      	str	r0, [r4, #16]
 80032b8:	6915      	ldr	r5, [r2, #16]
 80032ba:	6c10      	ldr	r0, [r2, #64]	; 0x40
 80032bc:	616c      	str	r4, [r5, #20]
 80032be:	f381 8811 	msr	BASEPRI, r1
 80032c2:	6801      	ldr	r1, [r0, #0]
 80032c4:	6011      	str	r1, [r2, #0]
 80032c6:	6002      	str	r2, [r0, #0]
 80032c8:	f383 8811 	msr	BASEPRI, r3
 80032cc:	e7e8      	b.n	80032a0 <chThdRelease+0x20>
 80032ce:	e9d0 1304 	ldrd	r1, r3, [r0, #16]
 80032d2:	6119      	str	r1, [r3, #16]
 80032d4:	6902      	ldr	r2, [r0, #16]
 80032d6:	bc30      	pop	{r4, r5}
 80032d8:	6153      	str	r3, [r2, #20]
 80032da:	f7ff bf89 	b.w	80031f0 <chHeapFree>
 80032de:	bf00      	nop

080032e0 <regfind>:
 80032e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80032e4:	4680      	mov	r8, r0
 80032e6:	2520      	movs	r5, #32
 80032e8:	f385 8811 	msr	BASEPRI, r5
 80032ec:	4f18      	ldr	r7, [pc, #96]	; (8003350 <regfind+0x70>)
 80032ee:	6938      	ldr	r0, [r7, #16]
 80032f0:	7f83      	ldrb	r3, [r0, #30]
 80032f2:	3301      	adds	r3, #1
 80032f4:	7783      	strb	r3, [r0, #30]
 80032f6:	2600      	movs	r6, #0
 80032f8:	f386 8811 	msr	BASEPRI, r6
 80032fc:	eba8 0900 	sub.w	r9, r8, r0
 8003300:	fab9 f989 	clz	r9, r9
 8003304:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8003308:	f385 8811 	msr	BASEPRI, r5
 800330c:	6904      	ldr	r4, [r0, #16]
 800330e:	42bc      	cmp	r4, r7
 8003310:	bf08      	it	eq
 8003312:	4604      	moveq	r4, r0
 8003314:	d101      	bne.n	800331a <regfind+0x3a>
 8003316:	e011      	b.n	800333c <regfind+0x5c>
 8003318:	461c      	mov	r4, r3
 800331a:	7fa3      	ldrb	r3, [r4, #30]
 800331c:	3301      	adds	r3, #1
 800331e:	77a3      	strb	r3, [r4, #30]
 8003320:	f386 8811 	msr	BASEPRI, r6
 8003324:	f7ff ffac 	bl	8003280 <chThdRelease>
 8003328:	45a0      	cmp	r8, r4
 800332a:	bf08      	it	eq
 800332c:	f049 0901 	orreq.w	r9, r9, #1
 8003330:	f385 8811 	msr	BASEPRI, r5
 8003334:	6923      	ldr	r3, [r4, #16]
 8003336:	42bb      	cmp	r3, r7
 8003338:	4620      	mov	r0, r4
 800333a:	d1ed      	bne.n	8003318 <regfind+0x38>
 800333c:	2300      	movs	r3, #0
 800333e:	f383 8811 	msr	BASEPRI, r3
 8003342:	4620      	mov	r0, r4
 8003344:	f7ff ff9c 	bl	8003280 <chThdRelease>
 8003348:	4648      	mov	r0, r9
 800334a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800334e:	bf00      	nop
 8003350:	20000938 	.word	0x20000938
	...

08003360 <chHeapAlloc>:
 8003360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003362:	4e20      	ldr	r6, [pc, #128]	; (80033e4 <chHeapAlloc+0x84>)
 8003364:	2800      	cmp	r0, #0
 8003366:	bf18      	it	ne
 8003368:	4606      	movne	r6, r0
 800336a:	f106 0710 	add.w	r7, r6, #16
 800336e:	3107      	adds	r1, #7
 8003370:	4638      	mov	r0, r7
 8003372:	f021 0507 	bic.w	r5, r1, #7
 8003376:	f106 0408 	add.w	r4, r6, #8
 800337a:	f7ff fd91 	bl	8002ea0 <chMtxLock>
 800337e:	e003      	b.n	8003388 <chHeapAlloc+0x28>
 8003380:	6843      	ldr	r3, [r0, #4]
 8003382:	42ab      	cmp	r3, r5
 8003384:	d212      	bcs.n	80033ac <chHeapAlloc+0x4c>
 8003386:	4604      	mov	r4, r0
 8003388:	6820      	ldr	r0, [r4, #0]
 800338a:	2800      	cmp	r0, #0
 800338c:	d1f8      	bne.n	8003380 <chHeapAlloc+0x20>
 800338e:	4638      	mov	r0, r7
 8003390:	f7fe fab6 	bl	8001900 <chMtxUnlock>
 8003394:	6833      	ldr	r3, [r6, #0]
 8003396:	b313      	cbz	r3, 80033de <chHeapAlloc+0x7e>
 8003398:	f105 0008 	add.w	r0, r5, #8
 800339c:	4798      	blx	r3
 800339e:	b1f0      	cbz	r0, 80033de <chHeapAlloc+0x7e>
 80033a0:	e9c0 6500 	strd	r6, r5, [r0]
 80033a4:	f100 0408 	add.w	r4, r0, #8
 80033a8:	4620      	mov	r0, r4
 80033aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80033ac:	f105 0208 	add.w	r2, r5, #8
 80033b0:	4293      	cmp	r3, r2
 80033b2:	6801      	ldr	r1, [r0, #0]
 80033b4:	d208      	bcs.n	80033c8 <chHeapAlloc+0x68>
 80033b6:	6021      	str	r1, [r4, #0]
 80033b8:	4604      	mov	r4, r0
 80033ba:	4638      	mov	r0, r7
 80033bc:	f844 6b08 	str.w	r6, [r4], #8
 80033c0:	f7fe fa9e 	bl	8001900 <chMtxUnlock>
 80033c4:	4620      	mov	r0, r4
 80033c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80033c8:	eb00 0c02 	add.w	ip, r0, r2
 80033cc:	1b5b      	subs	r3, r3, r5
 80033ce:	3b08      	subs	r3, #8
 80033d0:	5081      	str	r1, [r0, r2]
 80033d2:	f8cc 3004 	str.w	r3, [ip, #4]
 80033d6:	f8c4 c000 	str.w	ip, [r4]
 80033da:	6045      	str	r5, [r0, #4]
 80033dc:	e7ec      	b.n	80033b8 <chHeapAlloc+0x58>
 80033de:	2400      	movs	r4, #0
 80033e0:	e7e2      	b.n	80033a8 <chHeapAlloc+0x48>
 80033e2:	bf00      	nop
 80033e4:	20000a90 	.word	0x20000a90
	...

080033f0 <chThdCreateFromHeap.constprop.53>:
 80033f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033f2:	4605      	mov	r5, r0
 80033f4:	460e      	mov	r6, r1
 80033f6:	481b      	ldr	r0, [pc, #108]	; (8003464 <chThdCreateFromHeap.constprop.53+0x74>)
 80033f8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80033fc:	f7ff ffb0 	bl	8003360 <chHeapAlloc>
 8003400:	4604      	mov	r4, r0
 8003402:	b360      	cbz	r0, 800345e <chThdCreateFromHeap.constprop.53+0x6e>
 8003404:	2320      	movs	r3, #32
 8003406:	f383 8811 	msr	BASEPRI, r3
 800340a:	4a17      	ldr	r2, [pc, #92]	; (8003468 <chThdCreateFromHeap.constprop.53+0x78>)
 800340c:	6102      	str	r2, [r0, #16]
 800340e:	6957      	ldr	r7, [r2, #20]
 8003410:	f8c0 6128 	str.w	r6, [r0, #296]	; 0x128
 8003414:	f500 7192 	add.w	r1, r0, #292	; 0x124
 8003418:	2302      	movs	r3, #2
 800341a:	6085      	str	r5, [r0, #8]
 800341c:	60c1      	str	r1, [r0, #12]
 800341e:	63c5      	str	r5, [r0, #60]	; 0x3c
 8003420:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8003424:	2500      	movs	r5, #0
 8003426:	7703      	strb	r3, [r0, #28]
 8003428:	f8df e040 	ldr.w	lr, [pc, #64]	; 800346c <chThdCreateFromHeap.constprop.53+0x7c>
 800342c:	f8df c040 	ldr.w	ip, [pc, #64]	; 8003470 <chThdCreateFromHeap.constprop.53+0x80>
 8003430:	6147      	str	r7, [r0, #20]
 8003432:	2601      	movs	r6, #1
 8003434:	f100 0328 	add.w	r3, r0, #40	; 0x28
 8003438:	f8c0 e124 	str.w	lr, [r0, #292]	; 0x124
 800343c:	f8c0 c144 	str.w	ip, [r0, #324]	; 0x144
 8003440:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8003444:	6185      	str	r5, [r0, #24]
 8003446:	7786      	strb	r6, [r0, #30]
 8003448:	6138      	str	r0, [r7, #16]
 800344a:	6241      	str	r1, [r0, #36]	; 0x24
 800344c:	7746      	strb	r6, [r0, #29]
 800344e:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8003452:	4629      	mov	r1, r5
 8003454:	6150      	str	r0, [r2, #20]
 8003456:	f7fe f9c3 	bl	80017e0 <chSchWakeupS>
 800345a:	f385 8811 	msr	BASEPRI, r5
 800345e:	4620      	mov	r0, r4
 8003460:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003462:	bf00      	nop
 8003464:	20000ab8 	.word	0x20000ab8
 8003468:	20000938 	.word	0x20000938
 800346c:	080008a1 	.word	0x080008a1
 8003470:	08000271 	.word	0x08000271
	...

08003480 <dyn3_execute>:
 8003480:	4b46      	ldr	r3, [pc, #280]	; (800359c <dyn3_execute+0x11c>)
 8003482:	4947      	ldr	r1, [pc, #284]	; (80035a0 <dyn3_execute+0x120>)
 8003484:	699b      	ldr	r3, [r3, #24]
 8003486:	6898      	ldr	r0, [r3, #8]
 8003488:	b510      	push	{r4, lr}
 800348a:	3801      	subs	r0, #1
 800348c:	f7ff ffb0 	bl	80033f0 <chThdCreateFromHeap.constprop.53>
 8003490:	4604      	mov	r4, r0
 8003492:	2001      	movs	r0, #1
 8003494:	7fa1      	ldrb	r1, [r4, #30]
 8003496:	1a09      	subs	r1, r1, r0
 8003498:	fab1 f181 	clz	r1, r1
 800349c:	0949      	lsrs	r1, r1, #5
 800349e:	f7fd f9b7 	bl	8000810 <_test_assert>
 80034a2:	b100      	cbz	r0, 80034a6 <dyn3_execute+0x26>
 80034a4:	bd10      	pop	{r4, pc}
 80034a6:	2320      	movs	r3, #32
 80034a8:	f383 8811 	msr	BASEPRI, r3
 80034ac:	7fa3      	ldrb	r3, [r4, #30]
 80034ae:	3301      	adds	r3, #1
 80034b0:	77a3      	strb	r3, [r4, #30]
 80034b2:	f380 8811 	msr	BASEPRI, r0
 80034b6:	7fa1      	ldrb	r1, [r4, #30]
 80034b8:	2002      	movs	r0, #2
 80034ba:	1a09      	subs	r1, r1, r0
 80034bc:	fab1 f181 	clz	r1, r1
 80034c0:	0949      	lsrs	r1, r1, #5
 80034c2:	f7fd f9a5 	bl	8000810 <_test_assert>
 80034c6:	2800      	cmp	r0, #0
 80034c8:	d1ec      	bne.n	80034a4 <dyn3_execute+0x24>
 80034ca:	4620      	mov	r0, r4
 80034cc:	f7ff fed8 	bl	8003280 <chThdRelease>
 80034d0:	7fa1      	ldrb	r1, [r4, #30]
 80034d2:	f1a1 0101 	sub.w	r1, r1, #1
 80034d6:	fab1 f181 	clz	r1, r1
 80034da:	2003      	movs	r0, #3
 80034dc:	0949      	lsrs	r1, r1, #5
 80034de:	f7fd f997 	bl	8000810 <_test_assert>
 80034e2:	2800      	cmp	r0, #0
 80034e4:	d1de      	bne.n	80034a4 <dyn3_execute+0x24>
 80034e6:	4620      	mov	r0, r4
 80034e8:	f7ff fefa 	bl	80032e0 <regfind>
 80034ec:	4601      	mov	r1, r0
 80034ee:	2004      	movs	r0, #4
 80034f0:	f7fd f98e 	bl	8000810 <_test_assert>
 80034f4:	2800      	cmp	r0, #0
 80034f6:	d1d5      	bne.n	80034a4 <dyn3_execute+0x24>
 80034f8:	4620      	mov	r0, r4
 80034fa:	f7ff fef1 	bl	80032e0 <regfind>
 80034fe:	4601      	mov	r1, r0
 8003500:	2005      	movs	r0, #5
 8003502:	f7fd f985 	bl	8000810 <_test_assert>
 8003506:	2800      	cmp	r0, #0
 8003508:	d1cc      	bne.n	80034a4 <dyn3_execute+0x24>
 800350a:	4620      	mov	r0, r4
 800350c:	f7ff feb8 	bl	8003280 <chThdRelease>
 8003510:	7fa1      	ldrb	r1, [r4, #30]
 8003512:	fab1 f181 	clz	r1, r1
 8003516:	0949      	lsrs	r1, r1, #5
 8003518:	2006      	movs	r0, #6
 800351a:	f7fd f979 	bl	8000810 <_test_assert>
 800351e:	2800      	cmp	r0, #0
 8003520:	d1c0      	bne.n	80034a4 <dyn3_execute+0x24>
 8003522:	7f21      	ldrb	r1, [r4, #28]
 8003524:	fab1 f181 	clz	r1, r1
 8003528:	0949      	lsrs	r1, r1, #5
 800352a:	2007      	movs	r0, #7
 800352c:	f7fd f970 	bl	8000810 <_test_assert>
 8003530:	2800      	cmp	r0, #0
 8003532:	d1b7      	bne.n	80034a4 <dyn3_execute+0x24>
 8003534:	4620      	mov	r0, r4
 8003536:	f7ff fed3 	bl	80032e0 <regfind>
 800353a:	4601      	mov	r1, r0
 800353c:	2008      	movs	r0, #8
 800353e:	f7fd f967 	bl	8000810 <_test_assert>
 8003542:	2800      	cmp	r0, #0
 8003544:	d1ae      	bne.n	80034a4 <dyn3_execute+0x24>
 8003546:	4620      	mov	r0, r4
 8003548:	f7ff feca 	bl	80032e0 <regfind>
 800354c:	4601      	mov	r1, r0
 800354e:	2009      	movs	r0, #9
 8003550:	f7fd f95e 	bl	8000810 <_test_assert>
 8003554:	2800      	cmp	r0, #0
 8003556:	d1a5      	bne.n	80034a4 <dyn3_execute+0x24>
 8003558:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800355c:	f7ff f8e8 	bl	8002730 <chThdSleep>
 8003560:	7f21      	ldrb	r1, [r4, #28]
 8003562:	f1a1 030f 	sub.w	r3, r1, #15
 8003566:	4259      	negs	r1, r3
 8003568:	4159      	adcs	r1, r3
 800356a:	200a      	movs	r0, #10
 800356c:	f7fd f950 	bl	8000810 <_test_assert>
 8003570:	2800      	cmp	r0, #0
 8003572:	d197      	bne.n	80034a4 <dyn3_execute+0x24>
 8003574:	4620      	mov	r0, r4
 8003576:	f7ff feb3 	bl	80032e0 <regfind>
 800357a:	4601      	mov	r1, r0
 800357c:	200b      	movs	r0, #11
 800357e:	f7fd f947 	bl	8000810 <_test_assert>
 8003582:	2800      	cmp	r0, #0
 8003584:	d18e      	bne.n	80034a4 <dyn3_execute+0x24>
 8003586:	4620      	mov	r0, r4
 8003588:	f7ff feaa 	bl	80032e0 <regfind>
 800358c:	f080 0101 	eor.w	r1, r0, #1
 8003590:	b2c9      	uxtb	r1, r1
 8003592:	200c      	movs	r0, #12
 8003594:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003598:	f7fd b93a 	b.w	8000810 <_test_assert>
 800359c:	20000938 	.word	0x20000938
 80035a0:	08005ee0 	.word	0x08005ee0
	...

080035b0 <heap1_execute>:
 80035b0:	b570      	push	{r4, r5, r6, lr}
 80035b2:	b082      	sub	sp, #8
 80035b4:	4669      	mov	r1, sp
 80035b6:	2000      	movs	r0, #0
 80035b8:	f7ff fdf2 	bl	80031a0 <chHeapStatus>
 80035bc:	2110      	movs	r1, #16
 80035be:	2000      	movs	r0, #0
 80035c0:	f7ff fece 	bl	8003360 <chHeapAlloc>
 80035c4:	1c01      	adds	r1, r0, #0
 80035c6:	4605      	mov	r5, r0
 80035c8:	bf18      	it	ne
 80035ca:	2101      	movne	r1, #1
 80035cc:	2001      	movs	r0, #1
 80035ce:	f7fd f91f 	bl	8000810 <_test_assert>
 80035d2:	b108      	cbz	r0, 80035d8 <heap1_execute+0x28>
 80035d4:	b002      	add	sp, #8
 80035d6:	bd70      	pop	{r4, r5, r6, pc}
 80035d8:	4604      	mov	r4, r0
 80035da:	4628      	mov	r0, r5
 80035dc:	f7ff fe08 	bl	80031f0 <chHeapFree>
 80035e0:	f06f 01ff 	mvn.w	r1, #255	; 0xff
 80035e4:	4620      	mov	r0, r4
 80035e6:	f7ff febb 	bl	8003360 <chHeapAlloc>
 80035ea:	fab0 f180 	clz	r1, r0
 80035ee:	0949      	lsrs	r1, r1, #5
 80035f0:	2002      	movs	r0, #2
 80035f2:	f7fd f90d 	bl	8000810 <_test_assert>
 80035f6:	2800      	cmp	r0, #0
 80035f8:	d1ec      	bne.n	80035d4 <heap1_execute+0x24>
 80035fa:	4669      	mov	r1, sp
 80035fc:	487c      	ldr	r0, [pc, #496]	; (80037f0 <heap1_execute+0x240>)
 80035fe:	f7ff fdcf 	bl	80031a0 <chHeapStatus>
 8003602:	2110      	movs	r1, #16
 8003604:	487a      	ldr	r0, [pc, #488]	; (80037f0 <heap1_execute+0x240>)
 8003606:	f7ff feab 	bl	8003360 <chHeapAlloc>
 800360a:	2110      	movs	r1, #16
 800360c:	4606      	mov	r6, r0
 800360e:	4878      	ldr	r0, [pc, #480]	; (80037f0 <heap1_execute+0x240>)
 8003610:	f7ff fea6 	bl	8003360 <chHeapAlloc>
 8003614:	2110      	movs	r1, #16
 8003616:	4605      	mov	r5, r0
 8003618:	4875      	ldr	r0, [pc, #468]	; (80037f0 <heap1_execute+0x240>)
 800361a:	f7ff fea1 	bl	8003360 <chHeapAlloc>
 800361e:	4604      	mov	r4, r0
 8003620:	4630      	mov	r0, r6
 8003622:	f7ff fde5 	bl	80031f0 <chHeapFree>
 8003626:	4628      	mov	r0, r5
 8003628:	f7ff fde2 	bl	80031f0 <chHeapFree>
 800362c:	4620      	mov	r0, r4
 800362e:	f7ff fddf 	bl	80031f0 <chHeapFree>
 8003632:	a901      	add	r1, sp, #4
 8003634:	486e      	ldr	r0, [pc, #440]	; (80037f0 <heap1_execute+0x240>)
 8003636:	f7ff fdb3 	bl	80031a0 <chHeapStatus>
 800363a:	f1a0 0101 	sub.w	r1, r0, #1
 800363e:	fab1 f181 	clz	r1, r1
 8003642:	0949      	lsrs	r1, r1, #5
 8003644:	2003      	movs	r0, #3
 8003646:	f7fd f8e3 	bl	8000810 <_test_assert>
 800364a:	2800      	cmp	r0, #0
 800364c:	d1c2      	bne.n	80035d4 <heap1_execute+0x24>
 800364e:	2110      	movs	r1, #16
 8003650:	4867      	ldr	r0, [pc, #412]	; (80037f0 <heap1_execute+0x240>)
 8003652:	f7ff fe85 	bl	8003360 <chHeapAlloc>
 8003656:	2110      	movs	r1, #16
 8003658:	4604      	mov	r4, r0
 800365a:	4865      	ldr	r0, [pc, #404]	; (80037f0 <heap1_execute+0x240>)
 800365c:	f7ff fe80 	bl	8003360 <chHeapAlloc>
 8003660:	2110      	movs	r1, #16
 8003662:	4605      	mov	r5, r0
 8003664:	4862      	ldr	r0, [pc, #392]	; (80037f0 <heap1_execute+0x240>)
 8003666:	f7ff fe7b 	bl	8003360 <chHeapAlloc>
 800366a:	f7ff fdc1 	bl	80031f0 <chHeapFree>
 800366e:	4628      	mov	r0, r5
 8003670:	f7ff fdbe 	bl	80031f0 <chHeapFree>
 8003674:	4620      	mov	r0, r4
 8003676:	f7ff fdbb 	bl	80031f0 <chHeapFree>
 800367a:	a901      	add	r1, sp, #4
 800367c:	485c      	ldr	r0, [pc, #368]	; (80037f0 <heap1_execute+0x240>)
 800367e:	f7ff fd8f 	bl	80031a0 <chHeapStatus>
 8003682:	f1a0 0101 	sub.w	r1, r0, #1
 8003686:	fab1 f181 	clz	r1, r1
 800368a:	0949      	lsrs	r1, r1, #5
 800368c:	2004      	movs	r0, #4
 800368e:	f7fd f8bf 	bl	8000810 <_test_assert>
 8003692:	2800      	cmp	r0, #0
 8003694:	d19e      	bne.n	80035d4 <heap1_execute+0x24>
 8003696:	2111      	movs	r1, #17
 8003698:	4855      	ldr	r0, [pc, #340]	; (80037f0 <heap1_execute+0x240>)
 800369a:	f7ff fe61 	bl	8003360 <chHeapAlloc>
 800369e:	2110      	movs	r1, #16
 80036a0:	4604      	mov	r4, r0
 80036a2:	4853      	ldr	r0, [pc, #332]	; (80037f0 <heap1_execute+0x240>)
 80036a4:	f7ff fe5c 	bl	8003360 <chHeapAlloc>
 80036a8:	4605      	mov	r5, r0
 80036aa:	4620      	mov	r0, r4
 80036ac:	f7ff fda0 	bl	80031f0 <chHeapFree>
 80036b0:	a901      	add	r1, sp, #4
 80036b2:	484f      	ldr	r0, [pc, #316]	; (80037f0 <heap1_execute+0x240>)
 80036b4:	f7ff fd74 	bl	80031a0 <chHeapStatus>
 80036b8:	f1a0 0102 	sub.w	r1, r0, #2
 80036bc:	fab1 f181 	clz	r1, r1
 80036c0:	0949      	lsrs	r1, r1, #5
 80036c2:	2005      	movs	r0, #5
 80036c4:	f7fd f8a4 	bl	8000810 <_test_assert>
 80036c8:	2800      	cmp	r0, #0
 80036ca:	d183      	bne.n	80035d4 <heap1_execute+0x24>
 80036cc:	2110      	movs	r1, #16
 80036ce:	4848      	ldr	r0, [pc, #288]	; (80037f0 <heap1_execute+0x240>)
 80036d0:	f7ff fe46 	bl	8003360 <chHeapAlloc>
 80036d4:	a901      	add	r1, sp, #4
 80036d6:	4604      	mov	r4, r0
 80036d8:	4845      	ldr	r0, [pc, #276]	; (80037f0 <heap1_execute+0x240>)
 80036da:	f7ff fd61 	bl	80031a0 <chHeapStatus>
 80036de:	2801      	cmp	r0, #1
 80036e0:	f000 8083 	beq.w	80037ea <heap1_execute+0x23a>
 80036e4:	a901      	add	r1, sp, #4
 80036e6:	4842      	ldr	r0, [pc, #264]	; (80037f0 <heap1_execute+0x240>)
 80036e8:	f7ff fd5a 	bl	80031a0 <chHeapStatus>
 80036ec:	f1a0 0102 	sub.w	r1, r0, #2
 80036f0:	fab1 f181 	clz	r1, r1
 80036f4:	0949      	lsrs	r1, r1, #5
 80036f6:	2006      	movs	r0, #6
 80036f8:	f7fd f88a 	bl	8000810 <_test_assert>
 80036fc:	2800      	cmp	r0, #0
 80036fe:	f47f af69 	bne.w	80035d4 <heap1_execute+0x24>
 8003702:	4628      	mov	r0, r5
 8003704:	f7ff fd74 	bl	80031f0 <chHeapFree>
 8003708:	4620      	mov	r0, r4
 800370a:	f7ff fd71 	bl	80031f0 <chHeapFree>
 800370e:	a901      	add	r1, sp, #4
 8003710:	4837      	ldr	r0, [pc, #220]	; (80037f0 <heap1_execute+0x240>)
 8003712:	f7ff fd45 	bl	80031a0 <chHeapStatus>
 8003716:	f1a0 0101 	sub.w	r1, r0, #1
 800371a:	fab1 f181 	clz	r1, r1
 800371e:	0949      	lsrs	r1, r1, #5
 8003720:	2007      	movs	r0, #7
 8003722:	f7fd f875 	bl	8000810 <_test_assert>
 8003726:	2800      	cmp	r0, #0
 8003728:	f47f af54 	bne.w	80035d4 <heap1_execute+0x24>
 800372c:	2110      	movs	r1, #16
 800372e:	4830      	ldr	r0, [pc, #192]	; (80037f0 <heap1_execute+0x240>)
 8003730:	f7ff fe16 	bl	8003360 <chHeapAlloc>
 8003734:	2110      	movs	r1, #16
 8003736:	4605      	mov	r5, r0
 8003738:	482d      	ldr	r0, [pc, #180]	; (80037f0 <heap1_execute+0x240>)
 800373a:	f7ff fe11 	bl	8003360 <chHeapAlloc>
 800373e:	4604      	mov	r4, r0
 8003740:	4628      	mov	r0, r5
 8003742:	f7ff fd55 	bl	80031f0 <chHeapFree>
 8003746:	a901      	add	r1, sp, #4
 8003748:	4829      	ldr	r0, [pc, #164]	; (80037f0 <heap1_execute+0x240>)
 800374a:	f7ff fd29 	bl	80031a0 <chHeapStatus>
 800374e:	1e85      	subs	r5, r0, #2
 8003750:	4269      	negs	r1, r5
 8003752:	4169      	adcs	r1, r5
 8003754:	2008      	movs	r0, #8
 8003756:	f7fd f85b 	bl	8000810 <_test_assert>
 800375a:	2800      	cmp	r0, #0
 800375c:	f47f af3a 	bne.w	80035d4 <heap1_execute+0x24>
 8003760:	2120      	movs	r1, #32
 8003762:	4823      	ldr	r0, [pc, #140]	; (80037f0 <heap1_execute+0x240>)
 8003764:	f7ff fdfc 	bl	8003360 <chHeapAlloc>
 8003768:	f7ff fd42 	bl	80031f0 <chHeapFree>
 800376c:	4620      	mov	r0, r4
 800376e:	f7ff fd3f 	bl	80031f0 <chHeapFree>
 8003772:	a901      	add	r1, sp, #4
 8003774:	481e      	ldr	r0, [pc, #120]	; (80037f0 <heap1_execute+0x240>)
 8003776:	f7ff fd13 	bl	80031a0 <chHeapStatus>
 800377a:	3801      	subs	r0, #1
 800377c:	4241      	negs	r1, r0
 800377e:	4141      	adcs	r1, r0
 8003780:	2009      	movs	r0, #9
 8003782:	f7fd f845 	bl	8000810 <_test_assert>
 8003786:	2800      	cmp	r0, #0
 8003788:	f47f af24 	bne.w	80035d4 <heap1_execute+0x24>
 800378c:	a901      	add	r1, sp, #4
 800378e:	4818      	ldr	r0, [pc, #96]	; (80037f0 <heap1_execute+0x240>)
 8003790:	f7ff fd06 	bl	80031a0 <chHeapStatus>
 8003794:	9901      	ldr	r1, [sp, #4]
 8003796:	4816      	ldr	r0, [pc, #88]	; (80037f0 <heap1_execute+0x240>)
 8003798:	f7ff fde2 	bl	8003360 <chHeapAlloc>
 800379c:	a901      	add	r1, sp, #4
 800379e:	4604      	mov	r4, r0
 80037a0:	4813      	ldr	r0, [pc, #76]	; (80037f0 <heap1_execute+0x240>)
 80037a2:	f7ff fcfd 	bl	80031a0 <chHeapStatus>
 80037a6:	fab0 f180 	clz	r1, r0
 80037aa:	0949      	lsrs	r1, r1, #5
 80037ac:	200a      	movs	r0, #10
 80037ae:	f7fd f82f 	bl	8000810 <_test_assert>
 80037b2:	2800      	cmp	r0, #0
 80037b4:	f47f af0e 	bne.w	80035d4 <heap1_execute+0x24>
 80037b8:	4620      	mov	r0, r4
 80037ba:	f7ff fd19 	bl	80031f0 <chHeapFree>
 80037be:	a901      	add	r1, sp, #4
 80037c0:	480b      	ldr	r0, [pc, #44]	; (80037f0 <heap1_execute+0x240>)
 80037c2:	f7ff fced 	bl	80031a0 <chHeapStatus>
 80037c6:	1e42      	subs	r2, r0, #1
 80037c8:	4251      	negs	r1, r2
 80037ca:	4151      	adcs	r1, r2
 80037cc:	200b      	movs	r0, #11
 80037ce:	f7fd f81f 	bl	8000810 <_test_assert>
 80037d2:	2800      	cmp	r0, #0
 80037d4:	f47f aefe 	bne.w	80035d4 <heap1_execute+0x24>
 80037d8:	e9dd 3100 	ldrd	r3, r1, [sp]
 80037dc:	1acb      	subs	r3, r1, r3
 80037de:	4259      	negs	r1, r3
 80037e0:	4159      	adcs	r1, r3
 80037e2:	200c      	movs	r0, #12
 80037e4:	f7fd f814 	bl	8000810 <_test_assert>
 80037e8:	e6f4      	b.n	80035d4 <heap1_execute+0x24>
 80037ea:	4601      	mov	r1, r0
 80037ec:	e783      	b.n	80036f6 <heap1_execute+0x146>
 80037ee:	bf00      	nop
 80037f0:	200011b0 	.word	0x200011b0
	...

08003800 <chSemWait>:
 8003800:	2320      	movs	r3, #32
 8003802:	f383 8811 	msr	BASEPRI, r3
 8003806:	6883      	ldr	r3, [r0, #8]
 8003808:	3b01      	subs	r3, #1
 800380a:	2b00      	cmp	r3, #0
 800380c:	6083      	str	r3, [r0, #8]
 800380e:	db04      	blt.n	800381a <chSemWait+0x1a>
 8003810:	2000      	movs	r0, #0
 8003812:	2300      	movs	r3, #0
 8003814:	f383 8811 	msr	BASEPRI, r3
 8003818:	4770      	bx	lr
 800381a:	b510      	push	{r4, lr}
 800381c:	4c08      	ldr	r4, [pc, #32]	; (8003840 <chSemWait+0x40>)
 800381e:	69a2      	ldr	r2, [r4, #24]
 8003820:	6210      	str	r0, [r2, #32]
 8003822:	6010      	str	r0, [r2, #0]
 8003824:	6841      	ldr	r1, [r0, #4]
 8003826:	6051      	str	r1, [r2, #4]
 8003828:	4603      	mov	r3, r0
 800382a:	600a      	str	r2, [r1, #0]
 800382c:	2005      	movs	r0, #5
 800382e:	605a      	str	r2, [r3, #4]
 8003830:	f7fe f8ee 	bl	8001a10 <chSchGoSleepS>
 8003834:	69a3      	ldr	r3, [r4, #24]
 8003836:	6a18      	ldr	r0, [r3, #32]
 8003838:	2300      	movs	r3, #0
 800383a:	f383 8811 	msr	BASEPRI, r3
 800383e:	bd10      	pop	{r4, pc}
 8003840:	20000938 	.word	0x20000938
	...

08003850 <bmk11_execute>:
 8003850:	b570      	push	{r4, r5, r6, lr}
 8003852:	f7ff f8ad 	bl	80029b0 <test_wait_tick>
 8003856:	f7fd fcdb 	bl	8001210 <test_start_timer.constprop.1>
 800385a:	4e15      	ldr	r6, [pc, #84]	; (80038b0 <bmk11_execute+0x60>)
 800385c:	4c15      	ldr	r4, [pc, #84]	; (80038b4 <bmk11_execute+0x64>)
 800385e:	2500      	movs	r5, #0
 8003860:	4620      	mov	r0, r4
 8003862:	f7ff ffcd 	bl	8003800 <chSemWait>
 8003866:	4620      	mov	r0, r4
 8003868:	f7fe f87a 	bl	8001960 <chSemSignal>
 800386c:	4620      	mov	r0, r4
 800386e:	f7ff ffc7 	bl	8003800 <chSemWait>
 8003872:	4620      	mov	r0, r4
 8003874:	f7fe f874 	bl	8001960 <chSemSignal>
 8003878:	4620      	mov	r0, r4
 800387a:	f7ff ffc1 	bl	8003800 <chSemWait>
 800387e:	4620      	mov	r0, r4
 8003880:	f7fe f86e 	bl	8001960 <chSemSignal>
 8003884:	4620      	mov	r0, r4
 8003886:	f7ff ffbb 	bl	8003800 <chSemWait>
 800388a:	4620      	mov	r0, r4
 800388c:	f7fe f868 	bl	8001960 <chSemSignal>
 8003890:	7833      	ldrb	r3, [r6, #0]
 8003892:	3501      	adds	r5, #1
 8003894:	2b00      	cmp	r3, #0
 8003896:	d0e3      	beq.n	8003860 <bmk11_execute+0x10>
 8003898:	4807      	ldr	r0, [pc, #28]	; (80038b8 <bmk11_execute+0x68>)
 800389a:	f7fd f829 	bl	80008f0 <test_print>
 800389e:	00a8      	lsls	r0, r5, #2
 80038a0:	f7fc ff2e 	bl	8000700 <test_printn>
 80038a4:	4805      	ldr	r0, [pc, #20]	; (80038bc <bmk11_execute+0x6c>)
 80038a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80038aa:	f7fd b801 	b.w	80008b0 <test_println>
 80038ae:	bf00      	nop
 80038b0:	200011d0 	.word	0x200011d0
 80038b4:	20000b30 	.word	0x20000b30
 80038b8:	08005d50 	.word	0x08005d50
 80038bc:	08005d70 	.word	0x08005d70

080038c0 <thread3.lto_priv.67>:
 80038c0:	b538      	push	{r3, r4, r5, lr}
 80038c2:	4c07      	ldr	r4, [pc, #28]	; (80038e0 <thread3.lto_priv.67+0x20>)
 80038c4:	69a3      	ldr	r3, [r4, #24]
 80038c6:	7f5b      	ldrb	r3, [r3, #29]
 80038c8:	075a      	lsls	r2, r3, #29
 80038ca:	d407      	bmi.n	80038dc <thread3.lto_priv.67+0x1c>
 80038cc:	4d05      	ldr	r5, [pc, #20]	; (80038e4 <thread3.lto_priv.67+0x24>)
 80038ce:	4628      	mov	r0, r5
 80038d0:	f7ff ff96 	bl	8003800 <chSemWait>
 80038d4:	69a3      	ldr	r3, [r4, #24]
 80038d6:	7f5b      	ldrb	r3, [r3, #29]
 80038d8:	075b      	lsls	r3, r3, #29
 80038da:	d5f8      	bpl.n	80038ce <thread3.lto_priv.67+0xe>
 80038dc:	bd38      	pop	{r3, r4, r5, pc}
 80038de:	bf00      	nop
 80038e0:	20000938 	.word	0x20000938
 80038e4:	20000b30 	.word	0x20000b30
	...

080038f0 <sem4_execute>:
 80038f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80038f2:	b087      	sub	sp, #28
 80038f4:	ac03      	add	r4, sp, #12
 80038f6:	2500      	movs	r5, #0
 80038f8:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80038fc:	9505      	str	r5, [sp, #20]
 80038fe:	2620      	movs	r6, #32
 8003900:	f386 8811 	msr	BASEPRI, r6
 8003904:	4629      	mov	r1, r5
 8003906:	4620      	mov	r0, r4
 8003908:	f7fd fbf2 	bl	80010f0 <chSemResetI>
 800390c:	f7fd fe38 	bl	8001580 <chSchRescheduleS>
 8003910:	f385 8811 	msr	BASEPRI, r5
 8003914:	f386 8811 	msr	BASEPRI, r6
 8003918:	9905      	ldr	r1, [sp, #20]
 800391a:	42a9      	cmp	r1, r5
 800391c:	bfcc      	ite	gt
 800391e:	2100      	movgt	r1, #0
 8003920:	2101      	movle	r1, #1
 8003922:	2001      	movs	r0, #1
 8003924:	f7fc ff74 	bl	8000810 <_test_assert>
 8003928:	b118      	cbz	r0, 8003932 <sem4_execute+0x42>
 800392a:	f385 8811 	msr	BASEPRI, r5
 800392e:	b007      	add	sp, #28
 8003930:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003932:	4607      	mov	r7, r0
 8003934:	f380 8811 	msr	BASEPRI, r0
 8003938:	4a41      	ldr	r2, [pc, #260]	; (8003a40 <sem4_execute+0x150>)
 800393a:	4b42      	ldr	r3, [pc, #264]	; (8003a44 <sem4_execute+0x154>)
 800393c:	6992      	ldr	r2, [r2, #24]
 800393e:	4842      	ldr	r0, [pc, #264]	; (8003a48 <sem4_execute+0x158>)
 8003940:	6892      	ldr	r2, [r2, #8]
 8003942:	9400      	str	r4, [sp, #0]
 8003944:	3a01      	subs	r2, #1
 8003946:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800394a:	f7fe f829 	bl	80019a0 <chThdCreateStatic>
 800394e:	4b3f      	ldr	r3, [pc, #252]	; (8003a4c <sem4_execute+0x15c>)
 8003950:	6018      	str	r0, [r3, #0]
 8003952:	4620      	mov	r0, r4
 8003954:	f7ff ff54 	bl	8003800 <chSemWait>
 8003958:	f386 8811 	msr	BASEPRI, r6
 800395c:	9905      	ldr	r1, [sp, #20]
 800395e:	2900      	cmp	r1, #0
 8003960:	bfcc      	ite	gt
 8003962:	2100      	movgt	r1, #0
 8003964:	2101      	movle	r1, #1
 8003966:	2002      	movs	r0, #2
 8003968:	f7fc ff52 	bl	8000810 <_test_assert>
 800396c:	b118      	cbz	r0, 8003976 <sem4_execute+0x86>
 800396e:	f387 8811 	msr	BASEPRI, r7
 8003972:	b007      	add	sp, #28
 8003974:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003976:	f380 8811 	msr	BASEPRI, r0
 800397a:	f386 8811 	msr	BASEPRI, r6
 800397e:	9b05      	ldr	r3, [sp, #20]
 8003980:	2b00      	cmp	r3, #0
 8003982:	dd24      	ble.n	80039ce <sem4_execute+0xde>
 8003984:	f7fd fdfc 	bl	8001580 <chSchRescheduleS>
 8003988:	2500      	movs	r5, #0
 800398a:	f385 8811 	msr	BASEPRI, r5
 800398e:	2720      	movs	r7, #32
 8003990:	f387 8811 	msr	BASEPRI, r7
 8003994:	9905      	ldr	r1, [sp, #20]
 8003996:	42a9      	cmp	r1, r5
 8003998:	f04f 0003 	mov.w	r0, #3
 800399c:	bfd4      	ite	le
 800399e:	2100      	movle	r1, #0
 80039a0:	2101      	movgt	r1, #1
 80039a2:	f7fc ff35 	bl	8000810 <_test_assert>
 80039a6:	4606      	mov	r6, r0
 80039a8:	2800      	cmp	r0, #0
 80039aa:	d1be      	bne.n	800392a <sem4_execute+0x3a>
 80039ac:	f380 8811 	msr	BASEPRI, r0
 80039b0:	f387 8811 	msr	BASEPRI, r7
 80039b4:	9905      	ldr	r1, [sp, #20]
 80039b6:	f1a1 0101 	sub.w	r1, r1, #1
 80039ba:	fab1 f181 	clz	r1, r1
 80039be:	2004      	movs	r0, #4
 80039c0:	0949      	lsrs	r1, r1, #5
 80039c2:	f7fc ff25 	bl	8000810 <_test_assert>
 80039c6:	b130      	cbz	r0, 80039d6 <sem4_execute+0xe6>
 80039c8:	f386 8811 	msr	BASEPRI, r6
 80039cc:	e7af      	b.n	800392e <sem4_execute+0x3e>
 80039ce:	4620      	mov	r0, r4
 80039d0:	f7fd fb1e 	bl	8001010 <chSemSignalI>
 80039d4:	e7d6      	b.n	8003984 <sem4_execute+0x94>
 80039d6:	f380 8811 	msr	BASEPRI, r0
 80039da:	f387 8811 	msr	BASEPRI, r7
 80039de:	9b05      	ldr	r3, [sp, #20]
 80039e0:	2b00      	cmp	r3, #0
 80039e2:	dd28      	ble.n	8003a36 <sem4_execute+0x146>
 80039e4:	f7fd fdcc 	bl	8001580 <chSchRescheduleS>
 80039e8:	2400      	movs	r4, #0
 80039ea:	f384 8811 	msr	BASEPRI, r4
 80039ee:	2620      	movs	r6, #32
 80039f0:	f386 8811 	msr	BASEPRI, r6
 80039f4:	9905      	ldr	r1, [sp, #20]
 80039f6:	42a1      	cmp	r1, r4
 80039f8:	f04f 0003 	mov.w	r0, #3
 80039fc:	bfd4      	ite	le
 80039fe:	2100      	movle	r1, #0
 8003a00:	2101      	movgt	r1, #1
 8003a02:	f7fc ff05 	bl	8000810 <_test_assert>
 8003a06:	4605      	mov	r5, r0
 8003a08:	b110      	cbz	r0, 8003a10 <sem4_execute+0x120>
 8003a0a:	f384 8811 	msr	BASEPRI, r4
 8003a0e:	e78e      	b.n	800392e <sem4_execute+0x3e>
 8003a10:	f380 8811 	msr	BASEPRI, r0
 8003a14:	f386 8811 	msr	BASEPRI, r6
 8003a18:	9905      	ldr	r1, [sp, #20]
 8003a1a:	f1a1 0101 	sub.w	r1, r1, #1
 8003a1e:	fab1 f181 	clz	r1, r1
 8003a22:	2005      	movs	r0, #5
 8003a24:	0949      	lsrs	r1, r1, #5
 8003a26:	f7fc fef3 	bl	8000810 <_test_assert>
 8003a2a:	2800      	cmp	r0, #0
 8003a2c:	f47f af7d 	bne.w	800392a <sem4_execute+0x3a>
 8003a30:	f380 8811 	msr	BASEPRI, r0
 8003a34:	e77b      	b.n	800392e <sem4_execute+0x3e>
 8003a36:	4620      	mov	r0, r4
 8003a38:	f7fd faea 	bl	8001010 <chSemSignalI>
 8003a3c:	e7d2      	b.n	80039e4 <sem4_execute+0xf4>
 8003a3e:	bf00      	nop
 8003a40:	20000938 	.word	0x20000938
 8003a44:	080015a1 	.word	0x080015a1
 8003a48:	20000b40 	.word	0x20000b40
 8003a4c:	200011d4 	.word	0x200011d4

08003a50 <thread3.lto_priv.66>:
 8003a50:	b510      	push	{r4, lr}
 8003a52:	4c04      	ldr	r4, [pc, #16]	; (8003a64 <thread3.lto_priv.66+0x14>)
 8003a54:	4620      	mov	r0, r4
 8003a56:	f7ff fed3 	bl	8003800 <chSemWait>
 8003a5a:	4620      	mov	r0, r4
 8003a5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003a60:	f7fd bf7e 	b.w	8001960 <chSemSignal>
 8003a64:	200008ac 	.word	0x200008ac
	...

08003a70 <thread1.lto_priv.68>:
 8003a70:	b510      	push	{r4, lr}
 8003a72:	4604      	mov	r4, r0
 8003a74:	4803      	ldr	r0, [pc, #12]	; (8003a84 <thread1.lto_priv.68+0x14>)
 8003a76:	f7ff fec3 	bl	8003800 <chSemWait>
 8003a7a:	7820      	ldrb	r0, [r4, #0]
 8003a7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003a80:	f7fc bede 	b.w	8000840 <test_emit_token>
 8003a84:	200008ac 	.word	0x200008ac
	...

08003a90 <chThdWait>:
 8003a90:	b538      	push	{r3, r4, r5, lr}
 8003a92:	4604      	mov	r4, r0
 8003a94:	2320      	movs	r3, #32
 8003a96:	f383 8811 	msr	BASEPRI, r3
 8003a9a:	7f03      	ldrb	r3, [r0, #28]
 8003a9c:	2b0f      	cmp	r3, #15
 8003a9e:	d007      	beq.n	8003ab0 <chThdWait+0x20>
 8003aa0:	4b08      	ldr	r3, [pc, #32]	; (8003ac4 <chThdWait+0x34>)
 8003aa2:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003aa4:	699b      	ldr	r3, [r3, #24]
 8003aa6:	2009      	movs	r0, #9
 8003aa8:	601a      	str	r2, [r3, #0]
 8003aaa:	6263      	str	r3, [r4, #36]	; 0x24
 8003aac:	f7fd ffb0 	bl	8001a10 <chSchGoSleepS>
 8003ab0:	6a25      	ldr	r5, [r4, #32]
 8003ab2:	2300      	movs	r3, #0
 8003ab4:	f383 8811 	msr	BASEPRI, r3
 8003ab8:	4620      	mov	r0, r4
 8003aba:	f7ff fbe1 	bl	8003280 <chThdRelease>
 8003abe:	4628      	mov	r0, r5
 8003ac0:	bd38      	pop	{r3, r4, r5, pc}
 8003ac2:	bf00      	nop
 8003ac4:	20000938 	.word	0x20000938
	...

08003ad0 <bmk5_execute>:
 8003ad0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003ad4:	4b15      	ldr	r3, [pc, #84]	; (8003b2c <bmk5_execute+0x5c>)
 8003ad6:	f8df 9064 	ldr.w	r9, [pc, #100]	; 8003b3c <bmk5_execute+0x6c>
 8003ada:	699b      	ldr	r3, [r3, #24]
 8003adc:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8003b40 <bmk5_execute+0x70>
 8003ae0:	689d      	ldr	r5, [r3, #8]
 8003ae2:	4f13      	ldr	r7, [pc, #76]	; (8003b30 <bmk5_execute+0x60>)
 8003ae4:	b083      	sub	sp, #12
 8003ae6:	f7fe ff63 	bl	80029b0 <test_wait_tick>
 8003aea:	f7fd fb91 	bl	8001210 <test_start_timer.constprop.1>
 8003aee:	2400      	movs	r4, #0
 8003af0:	3d01      	subs	r5, #1
 8003af2:	4626      	mov	r6, r4
 8003af4:	4643      	mov	r3, r8
 8003af6:	462a      	mov	r2, r5
 8003af8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003afc:	9600      	str	r6, [sp, #0]
 8003afe:	4638      	mov	r0, r7
 8003b00:	f7fd ff4e 	bl	80019a0 <chThdCreateStatic>
 8003b04:	f7ff ffc4 	bl	8003a90 <chThdWait>
 8003b08:	f899 3000 	ldrb.w	r3, [r9]
 8003b0c:	3401      	adds	r4, #1
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	d0f0      	beq.n	8003af4 <bmk5_execute+0x24>
 8003b12:	4808      	ldr	r0, [pc, #32]	; (8003b34 <bmk5_execute+0x64>)
 8003b14:	f7fc feec 	bl	80008f0 <test_print>
 8003b18:	4620      	mov	r0, r4
 8003b1a:	f7fc fdf1 	bl	8000700 <test_printn>
 8003b1e:	4806      	ldr	r0, [pc, #24]	; (8003b38 <bmk5_execute+0x68>)
 8003b20:	b003      	add	sp, #12
 8003b22:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003b26:	f7fc bec3 	b.w	80008b0 <test_println>
 8003b2a:	bf00      	nop
 8003b2c:	20000938 	.word	0x20000938
 8003b30:	20000b40 	.word	0x20000b40
 8003b34:	08005d50 	.word	0x08005d50
 8003b38:	08005e50 	.word	0x08005e50
 8003b3c:	200011d0 	.word	0x200011d0
 8003b40:	08005ce1 	.word	0x08005ce1
	...

08003b50 <test_wait_threads>:
 8003b50:	b570      	push	{r4, r5, r6, lr}
 8003b52:	4c07      	ldr	r4, [pc, #28]	; (8003b70 <test_wait_threads+0x20>)
 8003b54:	2600      	movs	r6, #0
 8003b56:	f104 0514 	add.w	r5, r4, #20
 8003b5a:	f854 0b04 	ldr.w	r0, [r4], #4
 8003b5e:	b118      	cbz	r0, 8003b68 <test_wait_threads+0x18>
 8003b60:	f7ff ff96 	bl	8003a90 <chThdWait>
 8003b64:	f844 6c04 	str.w	r6, [r4, #-4]
 8003b68:	42ac      	cmp	r4, r5
 8003b6a:	d1f6      	bne.n	8003b5a <test_wait_threads+0xa>
 8003b6c:	bd70      	pop	{r4, r5, r6, pc}
 8003b6e:	bf00      	nop
 8003b70:	200011d4 	.word	0x200011d4
	...

08003b80 <bmk8_execute>:
 8003b80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003b84:	b084      	sub	sp, #16
 8003b86:	ac04      	add	r4, sp, #16
 8003b88:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8003c58 <bmk8_execute+0xd8>
 8003b8c:	4f2d      	ldr	r7, [pc, #180]	; (8003c44 <bmk8_execute+0xc4>)
 8003b8e:	4e2e      	ldr	r6, [pc, #184]	; (8003c48 <bmk8_execute+0xc8>)
 8003b90:	4d2e      	ldr	r5, [pc, #184]	; (8003c4c <bmk8_execute+0xcc>)
 8003b92:	2300      	movs	r3, #0
 8003b94:	f844 3d04 	str.w	r3, [r4, #-4]!
 8003b98:	f7fe ff0a 	bl	80029b0 <test_wait_tick>
 8003b9c:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003ba0:	689a      	ldr	r2, [r3, #8]
 8003ba2:	9400      	str	r4, [sp, #0]
 8003ba4:	463b      	mov	r3, r7
 8003ba6:	3a01      	subs	r2, #1
 8003ba8:	4630      	mov	r0, r6
 8003baa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003bae:	f7fd fef7 	bl	80019a0 <chThdCreateStatic>
 8003bb2:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003bb6:	6028      	str	r0, [r5, #0]
 8003bb8:	689a      	ldr	r2, [r3, #8]
 8003bba:	9400      	str	r4, [sp, #0]
 8003bbc:	463b      	mov	r3, r7
 8003bbe:	3a01      	subs	r2, #1
 8003bc0:	f506 70a4 	add.w	r0, r6, #328	; 0x148
 8003bc4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003bc8:	f7fd feea 	bl	80019a0 <chThdCreateStatic>
 8003bcc:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003bd0:	6068      	str	r0, [r5, #4]
 8003bd2:	689a      	ldr	r2, [r3, #8]
 8003bd4:	9400      	str	r4, [sp, #0]
 8003bd6:	463b      	mov	r3, r7
 8003bd8:	3a01      	subs	r2, #1
 8003bda:	f506 7024 	add.w	r0, r6, #656	; 0x290
 8003bde:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003be2:	f7fd fedd 	bl	80019a0 <chThdCreateStatic>
 8003be6:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003bea:	60a8      	str	r0, [r5, #8]
 8003bec:	689a      	ldr	r2, [r3, #8]
 8003bee:	9400      	str	r4, [sp, #0]
 8003bf0:	463b      	mov	r3, r7
 8003bf2:	3a01      	subs	r2, #1
 8003bf4:	f506 7076 	add.w	r0, r6, #984	; 0x3d8
 8003bf8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003bfc:	f7fd fed0 	bl	80019a0 <chThdCreateStatic>
 8003c00:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003c04:	60e8      	str	r0, [r5, #12]
 8003c06:	689a      	ldr	r2, [r3, #8]
 8003c08:	9400      	str	r4, [sp, #0]
 8003c0a:	3a01      	subs	r2, #1
 8003c0c:	463b      	mov	r3, r7
 8003c0e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003c12:	f506 60a4 	add.w	r0, r6, #1312	; 0x520
 8003c16:	f7fd fec3 	bl	80019a0 <chThdCreateStatic>
 8003c1a:	6128      	str	r0, [r5, #16]
 8003c1c:	f242 7010 	movw	r0, #10000	; 0x2710
 8003c20:	f7fe fd86 	bl	8002730 <chThdSleep>
 8003c24:	f7fc fd94 	bl	8000750 <test_terminate_threads>
 8003c28:	f7ff ff92 	bl	8003b50 <test_wait_threads>
 8003c2c:	4808      	ldr	r0, [pc, #32]	; (8003c50 <bmk8_execute+0xd0>)
 8003c2e:	f7fc fe5f 	bl	80008f0 <test_print>
 8003c32:	9803      	ldr	r0, [sp, #12]
 8003c34:	f7fc fd64 	bl	8000700 <test_printn>
 8003c38:	4806      	ldr	r0, [pc, #24]	; (8003c54 <bmk8_execute+0xd4>)
 8003c3a:	f7fc fe39 	bl	80008b0 <test_println>
 8003c3e:	b004      	add	sp, #16
 8003c40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003c44:	08001511 	.word	0x08001511
 8003c48:	20000b40 	.word	0x20000b40
 8003c4c:	200011d4 	.word	0x200011d4
 8003c50:	08005d50 	.word	0x08005d50
 8003c54:	08005e80 	.word	0x08005e80
 8003c58:	20000938 	.word	0x20000938
 8003c5c:	00000000 	.word	0x00000000

08003c60 <bmk7_execute>:
 8003c60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003c64:	4e3a      	ldr	r6, [pc, #232]	; (8003d50 <bmk7_execute+0xf0>)
 8003c66:	4b3b      	ldr	r3, [pc, #236]	; (8003d54 <bmk7_execute+0xf4>)
 8003c68:	69b2      	ldr	r2, [r6, #24]
 8003c6a:	483b      	ldr	r0, [pc, #236]	; (8003d58 <bmk7_execute+0xf8>)
 8003c6c:	6892      	ldr	r2, [r2, #8]
 8003c6e:	4d3b      	ldr	r5, [pc, #236]	; (8003d5c <bmk7_execute+0xfc>)
 8003c70:	f8df 810c 	ldr.w	r8, [pc, #268]	; 8003d80 <bmk7_execute+0x120>
 8003c74:	4f3a      	ldr	r7, [pc, #232]	; (8003d60 <bmk7_execute+0x100>)
 8003c76:	b082      	sub	sp, #8
 8003c78:	2400      	movs	r4, #0
 8003c7a:	3205      	adds	r2, #5
 8003c7c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003c80:	9400      	str	r4, [sp, #0]
 8003c82:	f7fd fe8d 	bl	80019a0 <chThdCreateStatic>
 8003c86:	69b3      	ldr	r3, [r6, #24]
 8003c88:	6028      	str	r0, [r5, #0]
 8003c8a:	689a      	ldr	r2, [r3, #8]
 8003c8c:	4835      	ldr	r0, [pc, #212]	; (8003d64 <bmk7_execute+0x104>)
 8003c8e:	4b31      	ldr	r3, [pc, #196]	; (8003d54 <bmk7_execute+0xf4>)
 8003c90:	9400      	str	r4, [sp, #0]
 8003c92:	3204      	adds	r2, #4
 8003c94:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003c98:	f7fd fe82 	bl	80019a0 <chThdCreateStatic>
 8003c9c:	69b3      	ldr	r3, [r6, #24]
 8003c9e:	6068      	str	r0, [r5, #4]
 8003ca0:	689a      	ldr	r2, [r3, #8]
 8003ca2:	4831      	ldr	r0, [pc, #196]	; (8003d68 <bmk7_execute+0x108>)
 8003ca4:	4b2b      	ldr	r3, [pc, #172]	; (8003d54 <bmk7_execute+0xf4>)
 8003ca6:	9400      	str	r4, [sp, #0]
 8003ca8:	3203      	adds	r2, #3
 8003caa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003cae:	f7fd fe77 	bl	80019a0 <chThdCreateStatic>
 8003cb2:	69b3      	ldr	r3, [r6, #24]
 8003cb4:	60a8      	str	r0, [r5, #8]
 8003cb6:	689a      	ldr	r2, [r3, #8]
 8003cb8:	482c      	ldr	r0, [pc, #176]	; (8003d6c <bmk7_execute+0x10c>)
 8003cba:	4b26      	ldr	r3, [pc, #152]	; (8003d54 <bmk7_execute+0xf4>)
 8003cbc:	9400      	str	r4, [sp, #0]
 8003cbe:	3202      	adds	r2, #2
 8003cc0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003cc4:	f7fd fe6c 	bl	80019a0 <chThdCreateStatic>
 8003cc8:	69b3      	ldr	r3, [r6, #24]
 8003cca:	60e8      	str	r0, [r5, #12]
 8003ccc:	689a      	ldr	r2, [r3, #8]
 8003cce:	4828      	ldr	r0, [pc, #160]	; (8003d70 <bmk7_execute+0x110>)
 8003cd0:	4b20      	ldr	r3, [pc, #128]	; (8003d54 <bmk7_execute+0xf4>)
 8003cd2:	9400      	str	r4, [sp, #0]
 8003cd4:	3201      	adds	r2, #1
 8003cd6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003cda:	f7fd fe61 	bl	80019a0 <chThdCreateStatic>
 8003cde:	6128      	str	r0, [r5, #16]
 8003ce0:	f7fe fe66 	bl	80029b0 <test_wait_tick>
 8003ce4:	f7fd fa94 	bl	8001210 <test_start_timer.constprop.1>
 8003ce8:	4625      	mov	r5, r4
 8003cea:	2620      	movs	r6, #32
 8003cec:	f386 8811 	msr	BASEPRI, r6
 8003cf0:	2100      	movs	r1, #0
 8003cf2:	4638      	mov	r0, r7
 8003cf4:	f7fd f9fc 	bl	80010f0 <chSemResetI>
 8003cf8:	f7fd fc42 	bl	8001580 <chSchRescheduleS>
 8003cfc:	f385 8811 	msr	BASEPRI, r5
 8003d00:	f898 3000 	ldrb.w	r3, [r8]
 8003d04:	3401      	adds	r4, #1
 8003d06:	2b00      	cmp	r3, #0
 8003d08:	d0f0      	beq.n	8003cec <bmk7_execute+0x8c>
 8003d0a:	f7fc fd21 	bl	8000750 <test_terminate_threads>
 8003d0e:	f386 8811 	msr	BASEPRI, r6
 8003d12:	2100      	movs	r1, #0
 8003d14:	4812      	ldr	r0, [pc, #72]	; (8003d60 <bmk7_execute+0x100>)
 8003d16:	f7fd f9eb 	bl	80010f0 <chSemResetI>
 8003d1a:	f7fd fc31 	bl	8001580 <chSchRescheduleS>
 8003d1e:	f385 8811 	msr	BASEPRI, r5
 8003d22:	f7ff ff15 	bl	8003b50 <test_wait_threads>
 8003d26:	4813      	ldr	r0, [pc, #76]	; (8003d74 <bmk7_execute+0x114>)
 8003d28:	f7fc fde2 	bl	80008f0 <test_print>
 8003d2c:	4620      	mov	r0, r4
 8003d2e:	f7fc fce7 	bl	8000700 <test_printn>
 8003d32:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8003d36:	4810      	ldr	r0, [pc, #64]	; (8003d78 <bmk7_execute+0x118>)
 8003d38:	f7fc fdda 	bl	80008f0 <test_print>
 8003d3c:	0060      	lsls	r0, r4, #1
 8003d3e:	f7fc fcdf 	bl	8000700 <test_printn>
 8003d42:	480e      	ldr	r0, [pc, #56]	; (8003d7c <bmk7_execute+0x11c>)
 8003d44:	b002      	add	sp, #8
 8003d46:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003d4a:	f7fc bdb1 	b.w	80008b0 <test_println>
 8003d4e:	bf00      	nop
 8003d50:	20000938 	.word	0x20000938
 8003d54:	080038c1 	.word	0x080038c1
 8003d58:	20000b40 	.word	0x20000b40
 8003d5c:	200011d4 	.word	0x200011d4
 8003d60:	20000b30 	.word	0x20000b30
 8003d64:	20000c88 	.word	0x20000c88
 8003d68:	20000dd0 	.word	0x20000dd0
 8003d6c:	20000f18 	.word	0x20000f18
 8003d70:	20001060 	.word	0x20001060
 8003d74:	08005d50 	.word	0x08005d50
 8003d78:	08005e60 	.word	0x08005e60
 8003d7c:	08005e80 	.word	0x08005e80
 8003d80:	200011d0 	.word	0x200011d0
	...

08003d90 <bmk4_execute>:
 8003d90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d94:	4a23      	ldr	r2, [pc, #140]	; (8003e24 <bmk4_execute+0x94>)
 8003d96:	4b24      	ldr	r3, [pc, #144]	; (8003e28 <bmk4_execute+0x98>)
 8003d98:	6992      	ldr	r2, [r2, #24]
 8003d9a:	4824      	ldr	r0, [pc, #144]	; (8003e2c <bmk4_execute+0x9c>)
 8003d9c:	6892      	ldr	r2, [r2, #8]
 8003d9e:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8003e3c <bmk4_execute+0xac>
 8003da2:	b082      	sub	sp, #8
 8003da4:	2500      	movs	r5, #0
 8003da6:	3201      	adds	r2, #1
 8003da8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003dac:	9500      	str	r5, [sp, #0]
 8003dae:	f7fd fdf7 	bl	80019a0 <chThdCreateStatic>
 8003db2:	4b1f      	ldr	r3, [pc, #124]	; (8003e30 <bmk4_execute+0xa0>)
 8003db4:	4604      	mov	r4, r0
 8003db6:	6018      	str	r0, [r3, #0]
 8003db8:	f7fe fdfa 	bl	80029b0 <test_wait_tick>
 8003dbc:	f7fd fa28 	bl	8001210 <test_start_timer.constprop.1>
 8003dc0:	462e      	mov	r6, r5
 8003dc2:	2720      	movs	r7, #32
 8003dc4:	f387 8811 	msr	BASEPRI, r7
 8003dc8:	2100      	movs	r1, #0
 8003dca:	4620      	mov	r0, r4
 8003dcc:	f7fd fd08 	bl	80017e0 <chSchWakeupS>
 8003dd0:	4620      	mov	r0, r4
 8003dd2:	2100      	movs	r1, #0
 8003dd4:	f7fd fd04 	bl	80017e0 <chSchWakeupS>
 8003dd8:	4620      	mov	r0, r4
 8003dda:	2100      	movs	r1, #0
 8003ddc:	f7fd fd00 	bl	80017e0 <chSchWakeupS>
 8003de0:	4620      	mov	r0, r4
 8003de2:	2100      	movs	r1, #0
 8003de4:	f7fd fcfc 	bl	80017e0 <chSchWakeupS>
 8003de8:	f386 8811 	msr	BASEPRI, r6
 8003dec:	f898 3000 	ldrb.w	r3, [r8]
 8003df0:	3504      	adds	r5, #4
 8003df2:	2b00      	cmp	r3, #0
 8003df4:	d0e6      	beq.n	8003dc4 <bmk4_execute+0x34>
 8003df6:	f387 8811 	msr	BASEPRI, r7
 8003dfa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003dfe:	4620      	mov	r0, r4
 8003e00:	f7fd fcee 	bl	80017e0 <chSchWakeupS>
 8003e04:	f386 8811 	msr	BASEPRI, r6
 8003e08:	f7ff fea2 	bl	8003b50 <test_wait_threads>
 8003e0c:	4809      	ldr	r0, [pc, #36]	; (8003e34 <bmk4_execute+0xa4>)
 8003e0e:	f7fc fd6f 	bl	80008f0 <test_print>
 8003e12:	0068      	lsls	r0, r5, #1
 8003e14:	f7fc fc74 	bl	8000700 <test_printn>
 8003e18:	4807      	ldr	r0, [pc, #28]	; (8003e38 <bmk4_execute+0xa8>)
 8003e1a:	b002      	add	sp, #8
 8003e1c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003e20:	f7fc bd46 	b.w	80008b0 <test_println>
 8003e24:	20000938 	.word	0x20000938
 8003e28:	08001bb1 	.word	0x08001bb1
 8003e2c:	20000b40 	.word	0x20000b40
 8003e30:	200011d4 	.word	0x200011d4
 8003e34:	08005d50 	.word	0x08005d50
 8003e38:	08005e80 	.word	0x08005e80
 8003e3c:	200011d0 	.word	0x200011d0

08003e40 <bmk3_execute>:
 8003e40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e44:	4f2c      	ldr	r7, [pc, #176]	; (8003ef8 <bmk3_execute+0xb8>)
 8003e46:	4d2d      	ldr	r5, [pc, #180]	; (8003efc <bmk3_execute+0xbc>)
 8003e48:	69ba      	ldr	r2, [r7, #24]
 8003e4a:	4b2d      	ldr	r3, [pc, #180]	; (8003f00 <bmk3_execute+0xc0>)
 8003e4c:	6892      	ldr	r2, [r2, #8]
 8003e4e:	4c2d      	ldr	r4, [pc, #180]	; (8003f04 <bmk3_execute+0xc4>)
 8003e50:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8003f14 <bmk3_execute+0xd4>
 8003e54:	b082      	sub	sp, #8
 8003e56:	2600      	movs	r6, #0
 8003e58:	3201      	adds	r2, #1
 8003e5a:	4628      	mov	r0, r5
 8003e5c:	9600      	str	r6, [sp, #0]
 8003e5e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003e62:	f7fd fd9d 	bl	80019a0 <chThdCreateStatic>
 8003e66:	69bb      	ldr	r3, [r7, #24]
 8003e68:	6020      	str	r0, [r4, #0]
 8003e6a:	689a      	ldr	r2, [r3, #8]
 8003e6c:	9600      	str	r6, [sp, #0]
 8003e6e:	4643      	mov	r3, r8
 8003e70:	3a02      	subs	r2, #2
 8003e72:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8003e76:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003e7a:	f7fd fd91 	bl	80019a0 <chThdCreateStatic>
 8003e7e:	69bb      	ldr	r3, [r7, #24]
 8003e80:	6060      	str	r0, [r4, #4]
 8003e82:	689a      	ldr	r2, [r3, #8]
 8003e84:	9600      	str	r6, [sp, #0]
 8003e86:	4643      	mov	r3, r8
 8003e88:	3a03      	subs	r2, #3
 8003e8a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8003e8e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003e92:	f7fd fd85 	bl	80019a0 <chThdCreateStatic>
 8003e96:	69bb      	ldr	r3, [r7, #24]
 8003e98:	60a0      	str	r0, [r4, #8]
 8003e9a:	689a      	ldr	r2, [r3, #8]
 8003e9c:	9600      	str	r6, [sp, #0]
 8003e9e:	4643      	mov	r3, r8
 8003ea0:	3a04      	subs	r2, #4
 8003ea2:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8003ea6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003eaa:	f7fd fd79 	bl	80019a0 <chThdCreateStatic>
 8003eae:	69bb      	ldr	r3, [r7, #24]
 8003eb0:	60e0      	str	r0, [r4, #12]
 8003eb2:	689a      	ldr	r2, [r3, #8]
 8003eb4:	9600      	str	r6, [sp, #0]
 8003eb6:	3a05      	subs	r2, #5
 8003eb8:	4643      	mov	r3, r8
 8003eba:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003ebe:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8003ec2:	f7fd fd6d 	bl	80019a0 <chThdCreateStatic>
 8003ec6:	6120      	str	r0, [r4, #16]
 8003ec8:	6820      	ldr	r0, [r4, #0]
 8003eca:	f7fe ff51 	bl	8002d70 <msg_loop_test>
 8003ece:	4604      	mov	r4, r0
 8003ed0:	f7ff fe3e 	bl	8003b50 <test_wait_threads>
 8003ed4:	480c      	ldr	r0, [pc, #48]	; (8003f08 <bmk3_execute+0xc8>)
 8003ed6:	f7fc fd0b 	bl	80008f0 <test_print>
 8003eda:	4620      	mov	r0, r4
 8003edc:	f7fc fc10 	bl	8000700 <test_printn>
 8003ee0:	480a      	ldr	r0, [pc, #40]	; (8003f0c <bmk3_execute+0xcc>)
 8003ee2:	f7fc fd05 	bl	80008f0 <test_print>
 8003ee6:	0060      	lsls	r0, r4, #1
 8003ee8:	f7fc fc0a 	bl	8000700 <test_printn>
 8003eec:	4808      	ldr	r0, [pc, #32]	; (8003f10 <bmk3_execute+0xd0>)
 8003eee:	b002      	add	sp, #8
 8003ef0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003ef4:	f7fc bcdc 	b.w	80008b0 <test_println>
 8003ef8:	20000938 	.word	0x20000938
 8003efc:	20000b40 	.word	0x20000b40
 8003f00:	08002c71 	.word	0x08002c71
 8003f04:	200011d4 	.word	0x200011d4
 8003f08:	08005d50 	.word	0x08005d50
 8003f0c:	08005e40 	.word	0x08005e40
 8003f10:	08005e80 	.word	0x08005e80
 8003f14:	08005ce1 	.word	0x08005ce1
	...

08003f20 <bmk2_execute>:
 8003f20:	b510      	push	{r4, lr}
 8003f22:	4a13      	ldr	r2, [pc, #76]	; (8003f70 <bmk2_execute+0x50>)
 8003f24:	4b13      	ldr	r3, [pc, #76]	; (8003f74 <bmk2_execute+0x54>)
 8003f26:	6992      	ldr	r2, [r2, #24]
 8003f28:	4813      	ldr	r0, [pc, #76]	; (8003f78 <bmk2_execute+0x58>)
 8003f2a:	6892      	ldr	r2, [r2, #8]
 8003f2c:	b082      	sub	sp, #8
 8003f2e:	2100      	movs	r1, #0
 8003f30:	3201      	adds	r2, #1
 8003f32:	9100      	str	r1, [sp, #0]
 8003f34:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003f38:	f7fd fd32 	bl	80019a0 <chThdCreateStatic>
 8003f3c:	4b0f      	ldr	r3, [pc, #60]	; (8003f7c <bmk2_execute+0x5c>)
 8003f3e:	6018      	str	r0, [r3, #0]
 8003f40:	f7fe ff16 	bl	8002d70 <msg_loop_test>
 8003f44:	4604      	mov	r4, r0
 8003f46:	f7ff fe03 	bl	8003b50 <test_wait_threads>
 8003f4a:	480d      	ldr	r0, [pc, #52]	; (8003f80 <bmk2_execute+0x60>)
 8003f4c:	f7fc fcd0 	bl	80008f0 <test_print>
 8003f50:	4620      	mov	r0, r4
 8003f52:	f7fc fbd5 	bl	8000700 <test_printn>
 8003f56:	480b      	ldr	r0, [pc, #44]	; (8003f84 <bmk2_execute+0x64>)
 8003f58:	f7fc fcca 	bl	80008f0 <test_print>
 8003f5c:	0060      	lsls	r0, r4, #1
 8003f5e:	f7fc fbcf 	bl	8000700 <test_printn>
 8003f62:	4809      	ldr	r0, [pc, #36]	; (8003f88 <bmk2_execute+0x68>)
 8003f64:	b002      	add	sp, #8
 8003f66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003f6a:	f7fc bca1 	b.w	80008b0 <test_println>
 8003f6e:	bf00      	nop
 8003f70:	20000938 	.word	0x20000938
 8003f74:	08002c71 	.word	0x08002c71
 8003f78:	20000b40 	.word	0x20000b40
 8003f7c:	200011d4 	.word	0x200011d4
 8003f80:	08005d50 	.word	0x08005d50
 8003f84:	08005e40 	.word	0x08005e40
 8003f88:	08005e80 	.word	0x08005e80
 8003f8c:	00000000 	.word	0x00000000

08003f90 <bmk1_execute>:
 8003f90:	b510      	push	{r4, lr}
 8003f92:	4a13      	ldr	r2, [pc, #76]	; (8003fe0 <bmk1_execute+0x50>)
 8003f94:	4b13      	ldr	r3, [pc, #76]	; (8003fe4 <bmk1_execute+0x54>)
 8003f96:	6992      	ldr	r2, [r2, #24]
 8003f98:	4813      	ldr	r0, [pc, #76]	; (8003fe8 <bmk1_execute+0x58>)
 8003f9a:	6892      	ldr	r2, [r2, #8]
 8003f9c:	b082      	sub	sp, #8
 8003f9e:	2100      	movs	r1, #0
 8003fa0:	3a01      	subs	r2, #1
 8003fa2:	9100      	str	r1, [sp, #0]
 8003fa4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003fa8:	f7fd fcfa 	bl	80019a0 <chThdCreateStatic>
 8003fac:	4b0f      	ldr	r3, [pc, #60]	; (8003fec <bmk1_execute+0x5c>)
 8003fae:	6018      	str	r0, [r3, #0]
 8003fb0:	f7fe fede 	bl	8002d70 <msg_loop_test>
 8003fb4:	4604      	mov	r4, r0
 8003fb6:	f7ff fdcb 	bl	8003b50 <test_wait_threads>
 8003fba:	480d      	ldr	r0, [pc, #52]	; (8003ff0 <bmk1_execute+0x60>)
 8003fbc:	f7fc fc98 	bl	80008f0 <test_print>
 8003fc0:	4620      	mov	r0, r4
 8003fc2:	f7fc fb9d 	bl	8000700 <test_printn>
 8003fc6:	480b      	ldr	r0, [pc, #44]	; (8003ff4 <bmk1_execute+0x64>)
 8003fc8:	f7fc fc92 	bl	80008f0 <test_print>
 8003fcc:	0060      	lsls	r0, r4, #1
 8003fce:	f7fc fb97 	bl	8000700 <test_printn>
 8003fd2:	4809      	ldr	r0, [pc, #36]	; (8003ff8 <bmk1_execute+0x68>)
 8003fd4:	b002      	add	sp, #8
 8003fd6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003fda:	f7fc bc69 	b.w	80008b0 <test_println>
 8003fde:	bf00      	nop
 8003fe0:	20000938 	.word	0x20000938
 8003fe4:	08002c71 	.word	0x08002c71
 8003fe8:	20000b40 	.word	0x20000b40
 8003fec:	200011d4 	.word	0x200011d4
 8003ff0:	08005d50 	.word	0x08005d50
 8003ff4:	08005e40 	.word	0x08005e40
 8003ff8:	08005e80 	.word	0x08005e80
 8003ffc:	00000000 	.word	0x00000000

08004000 <queues2_execute>:
 8004000:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004004:	2320      	movs	r3, #32
 8004006:	b083      	sub	sp, #12
 8004008:	f383 8811 	msr	BASEPRI, r3
 800400c:	4d8a      	ldr	r5, [pc, #552]	; (8004238 <queues2_execute+0x238>)
 800400e:	e9d5 3205 	ldrd	r3, r2, [r5, #20]
 8004012:	429a      	cmp	r2, r3
 8004014:	d041      	beq.n	800409a <queues2_execute+0x9a>
 8004016:	2100      	movs	r1, #0
 8004018:	2001      	movs	r0, #1
 800401a:	f7fc fbf9 	bl	8000810 <_test_assert>
 800401e:	bbb0      	cbnz	r0, 800408e <queues2_execute+0x8e>
 8004020:	f380 8811 	msr	BASEPRI, r0
 8004024:	4e84      	ldr	r6, [pc, #528]	; (8004238 <queues2_execute+0x238>)
 8004026:	2441      	movs	r4, #65	; 0x41
 8004028:	4621      	mov	r1, r4
 800402a:	3401      	adds	r4, #1
 800402c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004030:	4630      	mov	r0, r6
 8004032:	b2e4      	uxtb	r4, r4
 8004034:	f7fe faac 	bl	8002590 <chOQPutTimeout>
 8004038:	2c45      	cmp	r4, #69	; 0x45
 800403a:	d1f5      	bne.n	8004028 <queues2_execute+0x28>
 800403c:	2620      	movs	r6, #32
 800403e:	f386 8811 	msr	BASEPRI, r6
 8004042:	68a9      	ldr	r1, [r5, #8]
 8004044:	fab1 f181 	clz	r1, r1
 8004048:	0949      	lsrs	r1, r1, #5
 800404a:	2002      	movs	r0, #2
 800404c:	f7fc fbe0 	bl	8000810 <_test_assert>
 8004050:	4607      	mov	r7, r0
 8004052:	b9e0      	cbnz	r0, 800408e <queues2_execute+0x8e>
 8004054:	f380 8811 	msr	BASEPRI, r0
 8004058:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 8004238 <queues2_execute+0x238>
 800405c:	4680      	mov	r8, r0
 800405e:	2404      	movs	r4, #4
 8004060:	f386 8811 	msr	BASEPRI, r6
 8004064:	4648      	mov	r0, r9
 8004066:	f7fc febb 	bl	8000de0 <chOQGetI>
 800406a:	f388 8811 	msr	BASEPRI, r8
 800406e:	b2c0      	uxtb	r0, r0
 8004070:	f7fc fbe6 	bl	8000840 <test_emit_token>
 8004074:	3c01      	subs	r4, #1
 8004076:	d1f3      	bne.n	8004060 <queues2_execute+0x60>
 8004078:	f386 8811 	msr	BASEPRI, r6
 800407c:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 8004080:	429a      	cmp	r2, r3
 8004082:	d029      	beq.n	80040d8 <queues2_execute+0xd8>
 8004084:	4639      	mov	r1, r7
 8004086:	2003      	movs	r0, #3
 8004088:	f7fc fbc2 	bl	8000810 <_test_assert>
 800408c:	b150      	cbz	r0, 80040a4 <queues2_execute+0xa4>
 800408e:	2300      	movs	r3, #0
 8004090:	f383 8811 	msr	BASEPRI, r3
 8004094:	b003      	add	sp, #12
 8004096:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800409a:	68a9      	ldr	r1, [r5, #8]
 800409c:	3100      	adds	r1, #0
 800409e:	bf18      	it	ne
 80040a0:	2101      	movne	r1, #1
 80040a2:	e7b9      	b.n	8004018 <queues2_execute+0x18>
 80040a4:	f380 8811 	msr	BASEPRI, r0
 80040a8:	4964      	ldr	r1, [pc, #400]	; (800423c <queues2_execute+0x23c>)
 80040aa:	2004      	movs	r0, #4
 80040ac:	f7fc fb88 	bl	80007c0 <_test_assert_sequence>
 80040b0:	4604      	mov	r4, r0
 80040b2:	2800      	cmp	r0, #0
 80040b4:	d1ee      	bne.n	8004094 <queues2_execute+0x94>
 80040b6:	2620      	movs	r6, #32
 80040b8:	f386 8811 	msr	BASEPRI, r6
 80040bc:	485e      	ldr	r0, [pc, #376]	; (8004238 <queues2_execute+0x238>)
 80040be:	f7fc fe8f 	bl	8000de0 <chOQGetI>
 80040c2:	3003      	adds	r0, #3
 80040c4:	bf14      	ite	ne
 80040c6:	2100      	movne	r1, #0
 80040c8:	2101      	moveq	r1, #1
 80040ca:	2005      	movs	r0, #5
 80040cc:	f7fc fba0 	bl	8000810 <_test_assert>
 80040d0:	b138      	cbz	r0, 80040e2 <queues2_execute+0xe2>
 80040d2:	f384 8811 	msr	BASEPRI, r4
 80040d6:	e7dd      	b.n	8004094 <queues2_execute+0x94>
 80040d8:	68af      	ldr	r7, [r5, #8]
 80040da:	3700      	adds	r7, #0
 80040dc:	bf18      	it	ne
 80040de:	2701      	movne	r7, #1
 80040e0:	e7d0      	b.n	8004084 <queues2_execute+0x84>
 80040e2:	f380 8811 	msr	BASEPRI, r0
 80040e6:	2208      	movs	r2, #8
 80040e8:	4603      	mov	r3, r0
 80040ea:	4955      	ldr	r1, [pc, #340]	; (8004240 <queues2_execute+0x240>)
 80040ec:	4852      	ldr	r0, [pc, #328]	; (8004238 <queues2_execute+0x238>)
 80040ee:	f7fe f9f7 	bl	80024e0 <chOQWriteTimeout>
 80040f2:	f1a0 0104 	sub.w	r1, r0, #4
 80040f6:	fab1 f181 	clz	r1, r1
 80040fa:	0949      	lsrs	r1, r1, #5
 80040fc:	2006      	movs	r0, #6
 80040fe:	f7fc fb87 	bl	8000810 <_test_assert>
 8004102:	4604      	mov	r4, r0
 8004104:	2800      	cmp	r0, #0
 8004106:	d1c5      	bne.n	8004094 <queues2_execute+0x94>
 8004108:	f386 8811 	msr	BASEPRI, r6
 800410c:	68a9      	ldr	r1, [r5, #8]
 800410e:	fab1 f181 	clz	r1, r1
 8004112:	0949      	lsrs	r1, r1, #5
 8004114:	2007      	movs	r0, #7
 8004116:	f7fc fb7b 	bl	8000810 <_test_assert>
 800411a:	4607      	mov	r7, r0
 800411c:	2800      	cmp	r0, #0
 800411e:	d1d8      	bne.n	80040d2 <queues2_execute+0xd2>
 8004120:	f380 8811 	msr	BASEPRI, r0
 8004124:	4a47      	ldr	r2, [pc, #284]	; (8004244 <queues2_execute+0x244>)
 8004126:	4b48      	ldr	r3, [pc, #288]	; (8004248 <queues2_execute+0x248>)
 8004128:	6992      	ldr	r2, [r2, #24]
 800412a:	4848      	ldr	r0, [pc, #288]	; (800424c <queues2_execute+0x24c>)
 800412c:	6892      	ldr	r2, [r2, #8]
 800412e:	9700      	str	r7, [sp, #0]
 8004130:	3201      	adds	r2, #1
 8004132:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004136:	f7fd fc33 	bl	80019a0 <chThdCreateStatic>
 800413a:	4b45      	ldr	r3, [pc, #276]	; (8004250 <queues2_execute+0x250>)
 800413c:	6018      	str	r0, [r3, #0]
 800413e:	f386 8811 	msr	BASEPRI, r6
 8004142:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 8004146:	68a9      	ldr	r1, [r5, #8]
 8004148:	1a9b      	subs	r3, r3, r2
 800414a:	1a59      	subs	r1, r3, r1
 800414c:	f1a1 0104 	sub.w	r1, r1, #4
 8004150:	fab1 f181 	clz	r1, r1
 8004154:	0949      	lsrs	r1, r1, #5
 8004156:	2008      	movs	r0, #8
 8004158:	f7fc fb5a 	bl	8000810 <_test_assert>
 800415c:	b110      	cbz	r0, 8004164 <queues2_execute+0x164>
 800415e:	f387 8811 	msr	BASEPRI, r7
 8004162:	e797      	b.n	8004094 <queues2_execute+0x94>
 8004164:	f380 8811 	msr	BASEPRI, r0
 8004168:	f7ff fcf2 	bl	8003b50 <test_wait_threads>
 800416c:	f386 8811 	msr	BASEPRI, r6
 8004170:	e9d5 1203 	ldrd	r1, r2, [r5, #12]
 8004174:	682b      	ldr	r3, [r5, #0]
 8004176:	61a9      	str	r1, [r5, #24]
 8004178:	1a52      	subs	r2, r2, r1
 800417a:	42ab      	cmp	r3, r5
 800417c:	6169      	str	r1, [r5, #20]
 800417e:	60aa      	str	r2, [r5, #8]
 8004180:	d00b      	beq.n	800419a <queues2_execute+0x19a>
 8004182:	f06f 0401 	mvn.w	r4, #1
 8004186:	681a      	ldr	r2, [r3, #0]
 8004188:	602a      	str	r2, [r5, #0]
 800418a:	6055      	str	r5, [r2, #4]
 800418c:	4618      	mov	r0, r3
 800418e:	621c      	str	r4, [r3, #32]
 8004190:	f7fc fdce 	bl	8000d30 <chSchReadyI>
 8004194:	682b      	ldr	r3, [r5, #0]
 8004196:	42ab      	cmp	r3, r5
 8004198:	d1f5      	bne.n	8004186 <queues2_execute+0x186>
 800419a:	2400      	movs	r4, #0
 800419c:	f384 8811 	msr	BASEPRI, r4
 80041a0:	2620      	movs	r6, #32
 80041a2:	f386 8811 	msr	BASEPRI, r6
 80041a6:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 80041aa:	68a9      	ldr	r1, [r5, #8]
 80041ac:	1a9b      	subs	r3, r3, r2
 80041ae:	1a5f      	subs	r7, r3, r1
 80041b0:	4279      	negs	r1, r7
 80041b2:	4179      	adcs	r1, r7
 80041b4:	2009      	movs	r0, #9
 80041b6:	f7fc fb2b 	bl	8000810 <_test_assert>
 80041ba:	4603      	mov	r3, r0
 80041bc:	2800      	cmp	r0, #0
 80041be:	d188      	bne.n	80040d2 <queues2_execute+0xd2>
 80041c0:	f380 8811 	msr	BASEPRI, r0
 80041c4:	2202      	movs	r2, #2
 80041c6:	491e      	ldr	r1, [pc, #120]	; (8004240 <queues2_execute+0x240>)
 80041c8:	481b      	ldr	r0, [pc, #108]	; (8004238 <queues2_execute+0x238>)
 80041ca:	f7fe f989 	bl	80024e0 <chOQWriteTimeout>
 80041ce:	3802      	subs	r0, #2
 80041d0:	4241      	negs	r1, r0
 80041d2:	4141      	adcs	r1, r0
 80041d4:	200a      	movs	r0, #10
 80041d6:	f7fc fb1b 	bl	8000810 <_test_assert>
 80041da:	4603      	mov	r3, r0
 80041dc:	2800      	cmp	r0, #0
 80041de:	f47f af59 	bne.w	8004094 <queues2_execute+0x94>
 80041e2:	2202      	movs	r2, #2
 80041e4:	4916      	ldr	r1, [pc, #88]	; (8004240 <queues2_execute+0x240>)
 80041e6:	4814      	ldr	r0, [pc, #80]	; (8004238 <queues2_execute+0x238>)
 80041e8:	f7fe f97a 	bl	80024e0 <chOQWriteTimeout>
 80041ec:	1e82      	subs	r2, r0, #2
 80041ee:	4251      	negs	r1, r2
 80041f0:	4151      	adcs	r1, r2
 80041f2:	200b      	movs	r0, #11
 80041f4:	f7fc fb0c 	bl	8000810 <_test_assert>
 80041f8:	4604      	mov	r4, r0
 80041fa:	2800      	cmp	r0, #0
 80041fc:	f47f af4a 	bne.w	8004094 <queues2_execute+0x94>
 8004200:	f386 8811 	msr	BASEPRI, r6
 8004204:	68a9      	ldr	r1, [r5, #8]
 8004206:	fab1 f181 	clz	r1, r1
 800420a:	0949      	lsrs	r1, r1, #5
 800420c:	200c      	movs	r0, #12
 800420e:	f7fc faff 	bl	8000810 <_test_assert>
 8004212:	4601      	mov	r1, r0
 8004214:	2800      	cmp	r0, #0
 8004216:	f47f af5c 	bne.w	80040d2 <queues2_execute+0xd2>
 800421a:	f380 8811 	msr	BASEPRI, r0
 800421e:	220a      	movs	r2, #10
 8004220:	4805      	ldr	r0, [pc, #20]	; (8004238 <queues2_execute+0x238>)
 8004222:	f7fe f9b5 	bl	8002590 <chOQPutTimeout>
 8004226:	1c43      	adds	r3, r0, #1
 8004228:	4259      	negs	r1, r3
 800422a:	4159      	adcs	r1, r3
 800422c:	200d      	movs	r0, #13
 800422e:	b003      	add	sp, #12
 8004230:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004234:	f7fc baec 	b.w	8000810 <_test_assert>
 8004238:	20000888 	.word	0x20000888
 800423c:	080062a0 	.word	0x080062a0
 8004240:	20000c88 	.word	0x20000c88
 8004244:	20000938 	.word	0x20000938
 8004248:	080025e1 	.word	0x080025e1
 800424c:	20000b40 	.word	0x20000b40
 8004250:	200011d4 	.word	0x200011d4
	...

08004260 <queues1_execute>:
 8004260:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004262:	2620      	movs	r6, #32
 8004264:	b083      	sub	sp, #12
 8004266:	f386 8811 	msr	BASEPRI, r6
 800426a:	4c9f      	ldr	r4, [pc, #636]	; (80044e8 <queues1_execute+0x288>)
 800426c:	68a1      	ldr	r1, [r4, #8]
 800426e:	fab1 f181 	clz	r1, r1
 8004272:	0949      	lsrs	r1, r1, #5
 8004274:	2001      	movs	r0, #1
 8004276:	f7fc facb 	bl	8000810 <_test_assert>
 800427a:	bb10      	cbnz	r0, 80042c2 <queues1_execute+0x62>
 800427c:	4605      	mov	r5, r0
 800427e:	f380 8811 	msr	BASEPRI, r0
 8004282:	f386 8811 	msr	BASEPRI, r6
 8004286:	2141      	movs	r1, #65	; 0x41
 8004288:	4620      	mov	r0, r4
 800428a:	f7fc fd81 	bl	8000d90 <chIQPutI>
 800428e:	4620      	mov	r0, r4
 8004290:	2142      	movs	r1, #66	; 0x42
 8004292:	f7fc fd7d 	bl	8000d90 <chIQPutI>
 8004296:	4620      	mov	r0, r4
 8004298:	2143      	movs	r1, #67	; 0x43
 800429a:	f7fc fd79 	bl	8000d90 <chIQPutI>
 800429e:	4620      	mov	r0, r4
 80042a0:	2144      	movs	r1, #68	; 0x44
 80042a2:	f7fc fd75 	bl	8000d90 <chIQPutI>
 80042a6:	f385 8811 	msr	BASEPRI, r5
 80042aa:	f386 8811 	msr	BASEPRI, r6
 80042ae:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 80042b2:	429a      	cmp	r2, r3
 80042b4:	d038      	beq.n	8004328 <queues1_execute+0xc8>
 80042b6:	4629      	mov	r1, r5
 80042b8:	2002      	movs	r0, #2
 80042ba:	f7fc faa9 	bl	8000810 <_test_assert>
 80042be:	4605      	mov	r5, r0
 80042c0:	b120      	cbz	r0, 80042cc <queues1_execute+0x6c>
 80042c2:	2300      	movs	r3, #0
 80042c4:	f383 8811 	msr	BASEPRI, r3
 80042c8:	b003      	add	sp, #12
 80042ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80042cc:	f380 8811 	msr	BASEPRI, r0
 80042d0:	2320      	movs	r3, #32
 80042d2:	f383 8811 	msr	BASEPRI, r3
 80042d6:	4884      	ldr	r0, [pc, #528]	; (80044e8 <queues1_execute+0x288>)
 80042d8:	4629      	mov	r1, r5
 80042da:	f7fc fd59 	bl	8000d90 <chIQPutI>
 80042de:	3004      	adds	r0, #4
 80042e0:	bf14      	ite	ne
 80042e2:	2100      	movne	r1, #0
 80042e4:	2101      	moveq	r1, #1
 80042e6:	2003      	movs	r0, #3
 80042e8:	f7fc fa92 	bl	8000810 <_test_assert>
 80042ec:	b9c0      	cbnz	r0, 8004320 <queues1_execute+0xc0>
 80042ee:	f380 8811 	msr	BASEPRI, r0
 80042f2:	4e7d      	ldr	r6, [pc, #500]	; (80044e8 <queues1_execute+0x288>)
 80042f4:	2504      	movs	r5, #4
 80042f6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80042fa:	4630      	mov	r0, r6
 80042fc:	f7fe f9d8 	bl	80026b0 <chIQGetTimeout>
 8004300:	b2c0      	uxtb	r0, r0
 8004302:	f7fc fa9d 	bl	8000840 <test_emit_token>
 8004306:	3d01      	subs	r5, #1
 8004308:	d1f5      	bne.n	80042f6 <queues1_execute+0x96>
 800430a:	2620      	movs	r6, #32
 800430c:	f386 8811 	msr	BASEPRI, r6
 8004310:	68a1      	ldr	r1, [r4, #8]
 8004312:	fab1 f181 	clz	r1, r1
 8004316:	0949      	lsrs	r1, r1, #5
 8004318:	2004      	movs	r0, #4
 800431a:	f7fc fa79 	bl	8000810 <_test_assert>
 800431e:	b178      	cbz	r0, 8004340 <queues1_execute+0xe0>
 8004320:	f385 8811 	msr	BASEPRI, r5
 8004324:	b003      	add	sp, #12
 8004326:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004328:	68a5      	ldr	r5, [r4, #8]
 800432a:	3500      	adds	r5, #0
 800432c:	bf18      	it	ne
 800432e:	2501      	movne	r5, #1
 8004330:	4629      	mov	r1, r5
 8004332:	2002      	movs	r0, #2
 8004334:	f7fc fa6c 	bl	8000810 <_test_assert>
 8004338:	4605      	mov	r5, r0
 800433a:	2800      	cmp	r0, #0
 800433c:	d1c1      	bne.n	80042c2 <queues1_execute+0x62>
 800433e:	e7c5      	b.n	80042cc <queues1_execute+0x6c>
 8004340:	f385 8811 	msr	BASEPRI, r5
 8004344:	4969      	ldr	r1, [pc, #420]	; (80044ec <queues1_execute+0x28c>)
 8004346:	2005      	movs	r0, #5
 8004348:	f7fc fa3a 	bl	80007c0 <_test_assert_sequence>
 800434c:	2800      	cmp	r0, #0
 800434e:	d1bb      	bne.n	80042c8 <queues1_execute+0x68>
 8004350:	f386 8811 	msr	BASEPRI, r6
 8004354:	2141      	movs	r1, #65	; 0x41
 8004356:	4864      	ldr	r0, [pc, #400]	; (80044e8 <queues1_execute+0x288>)
 8004358:	f7fc fd1a 	bl	8000d90 <chIQPutI>
 800435c:	2142      	movs	r1, #66	; 0x42
 800435e:	4862      	ldr	r0, [pc, #392]	; (80044e8 <queues1_execute+0x288>)
 8004360:	f7fc fd16 	bl	8000d90 <chIQPutI>
 8004364:	2143      	movs	r1, #67	; 0x43
 8004366:	4860      	ldr	r0, [pc, #384]	; (80044e8 <queues1_execute+0x288>)
 8004368:	f7fc fd12 	bl	8000d90 <chIQPutI>
 800436c:	2144      	movs	r1, #68	; 0x44
 800436e:	485e      	ldr	r0, [pc, #376]	; (80044e8 <queues1_execute+0x288>)
 8004370:	f7fc fd0e 	bl	8000d90 <chIQPutI>
 8004374:	f385 8811 	msr	BASEPRI, r5
 8004378:	495d      	ldr	r1, [pc, #372]	; (80044f0 <queues1_execute+0x290>)
 800437a:	485b      	ldr	r0, [pc, #364]	; (80044e8 <queues1_execute+0x288>)
 800437c:	2208      	movs	r2, #8
 800437e:	462b      	mov	r3, r5
 8004380:	f7fe f946 	bl	8002610 <chIQReadTimeout>
 8004384:	f1a0 0104 	sub.w	r1, r0, #4
 8004388:	fab1 f181 	clz	r1, r1
 800438c:	0949      	lsrs	r1, r1, #5
 800438e:	2006      	movs	r0, #6
 8004390:	f7fc fa3e 	bl	8000810 <_test_assert>
 8004394:	2800      	cmp	r0, #0
 8004396:	d197      	bne.n	80042c8 <queues1_execute+0x68>
 8004398:	f386 8811 	msr	BASEPRI, r6
 800439c:	68a1      	ldr	r1, [r4, #8]
 800439e:	fab1 f181 	clz	r1, r1
 80043a2:	0949      	lsrs	r1, r1, #5
 80043a4:	2007      	movs	r0, #7
 80043a6:	f7fc fa33 	bl	8000810 <_test_assert>
 80043aa:	2800      	cmp	r0, #0
 80043ac:	d1b8      	bne.n	8004320 <queues1_execute+0xc0>
 80043ae:	f385 8811 	msr	BASEPRI, r5
 80043b2:	f386 8811 	msr	BASEPRI, r6
 80043b6:	2141      	movs	r1, #65	; 0x41
 80043b8:	484b      	ldr	r0, [pc, #300]	; (80044e8 <queues1_execute+0x288>)
 80043ba:	f7fc fce9 	bl	8000d90 <chIQPutI>
 80043be:	2142      	movs	r1, #66	; 0x42
 80043c0:	4849      	ldr	r0, [pc, #292]	; (80044e8 <queues1_execute+0x288>)
 80043c2:	f7fc fce5 	bl	8000d90 <chIQPutI>
 80043c6:	2143      	movs	r1, #67	; 0x43
 80043c8:	4847      	ldr	r0, [pc, #284]	; (80044e8 <queues1_execute+0x288>)
 80043ca:	f7fc fce1 	bl	8000d90 <chIQPutI>
 80043ce:	2144      	movs	r1, #68	; 0x44
 80043d0:	4845      	ldr	r0, [pc, #276]	; (80044e8 <queues1_execute+0x288>)
 80043d2:	f7fc fcdd 	bl	8000d90 <chIQPutI>
 80043d6:	f385 8811 	msr	BASEPRI, r5
 80043da:	4945      	ldr	r1, [pc, #276]	; (80044f0 <queues1_execute+0x290>)
 80043dc:	4842      	ldr	r0, [pc, #264]	; (80044e8 <queues1_execute+0x288>)
 80043de:	2202      	movs	r2, #2
 80043e0:	462b      	mov	r3, r5
 80043e2:	f7fe f915 	bl	8002610 <chIQReadTimeout>
 80043e6:	f1a0 0102 	sub.w	r1, r0, #2
 80043ea:	fab1 f181 	clz	r1, r1
 80043ee:	0949      	lsrs	r1, r1, #5
 80043f0:	2008      	movs	r0, #8
 80043f2:	f7fc fa0d 	bl	8000810 <_test_assert>
 80043f6:	2800      	cmp	r0, #0
 80043f8:	f47f af66 	bne.w	80042c8 <queues1_execute+0x68>
 80043fc:	493c      	ldr	r1, [pc, #240]	; (80044f0 <queues1_execute+0x290>)
 80043fe:	483a      	ldr	r0, [pc, #232]	; (80044e8 <queues1_execute+0x288>)
 8004400:	462b      	mov	r3, r5
 8004402:	2202      	movs	r2, #2
 8004404:	f7fe f904 	bl	8002610 <chIQReadTimeout>
 8004408:	f1a0 0102 	sub.w	r1, r0, #2
 800440c:	fab1 f181 	clz	r1, r1
 8004410:	0949      	lsrs	r1, r1, #5
 8004412:	2009      	movs	r0, #9
 8004414:	f7fc f9fc 	bl	8000810 <_test_assert>
 8004418:	2800      	cmp	r0, #0
 800441a:	f47f af55 	bne.w	80042c8 <queues1_execute+0x68>
 800441e:	f386 8811 	msr	BASEPRI, r6
 8004422:	68a1      	ldr	r1, [r4, #8]
 8004424:	fab1 f181 	clz	r1, r1
 8004428:	0949      	lsrs	r1, r1, #5
 800442a:	200a      	movs	r0, #10
 800442c:	f7fc f9f0 	bl	8000810 <_test_assert>
 8004430:	2800      	cmp	r0, #0
 8004432:	f47f af75 	bne.w	8004320 <queues1_execute+0xc0>
 8004436:	f385 8811 	msr	BASEPRI, r5
 800443a:	f386 8811 	msr	BASEPRI, r6
 800443e:	482a      	ldr	r0, [pc, #168]	; (80044e8 <queues1_execute+0x288>)
 8004440:	4629      	mov	r1, r5
 8004442:	f7fc fca5 	bl	8000d90 <chIQPutI>
 8004446:	6823      	ldr	r3, [r4, #0]
 8004448:	68e2      	ldr	r2, [r4, #12]
 800444a:	60a5      	str	r5, [r4, #8]
 800444c:	42a3      	cmp	r3, r4
 800444e:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8004452:	d00b      	beq.n	800446c <queues1_execute+0x20c>
 8004454:	f06f 0501 	mvn.w	r5, #1
 8004458:	681a      	ldr	r2, [r3, #0]
 800445a:	6022      	str	r2, [r4, #0]
 800445c:	6054      	str	r4, [r2, #4]
 800445e:	4618      	mov	r0, r3
 8004460:	621d      	str	r5, [r3, #32]
 8004462:	f7fc fc65 	bl	8000d30 <chSchReadyI>
 8004466:	6823      	ldr	r3, [r4, #0]
 8004468:	42a3      	cmp	r3, r4
 800446a:	d1f5      	bne.n	8004458 <queues1_execute+0x1f8>
 800446c:	2700      	movs	r7, #0
 800446e:	f387 8811 	msr	BASEPRI, r7
 8004472:	2620      	movs	r6, #32
 8004474:	f386 8811 	msr	BASEPRI, r6
 8004478:	68a1      	ldr	r1, [r4, #8]
 800447a:	fab1 f181 	clz	r1, r1
 800447e:	0949      	lsrs	r1, r1, #5
 8004480:	200b      	movs	r0, #11
 8004482:	f7fc f9c5 	bl	8000810 <_test_assert>
 8004486:	4605      	mov	r5, r0
 8004488:	b110      	cbz	r0, 8004490 <queues1_execute+0x230>
 800448a:	f387 8811 	msr	BASEPRI, r7
 800448e:	e71b      	b.n	80042c8 <queues1_execute+0x68>
 8004490:	f380 8811 	msr	BASEPRI, r0
 8004494:	4a17      	ldr	r2, [pc, #92]	; (80044f4 <queues1_execute+0x294>)
 8004496:	4b18      	ldr	r3, [pc, #96]	; (80044f8 <queues1_execute+0x298>)
 8004498:	6992      	ldr	r2, [r2, #24]
 800449a:	4818      	ldr	r0, [pc, #96]	; (80044fc <queues1_execute+0x29c>)
 800449c:	6892      	ldr	r2, [r2, #8]
 800449e:	9500      	str	r5, [sp, #0]
 80044a0:	3201      	adds	r2, #1
 80044a2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80044a6:	f7fd fa7b 	bl	80019a0 <chThdCreateStatic>
 80044aa:	4b15      	ldr	r3, [pc, #84]	; (8004500 <queues1_execute+0x2a0>)
 80044ac:	6018      	str	r0, [r3, #0]
 80044ae:	f386 8811 	msr	BASEPRI, r6
 80044b2:	68a1      	ldr	r1, [r4, #8]
 80044b4:	fab1 f181 	clz	r1, r1
 80044b8:	0949      	lsrs	r1, r1, #5
 80044ba:	200c      	movs	r0, #12
 80044bc:	f7fc f9a8 	bl	8000810 <_test_assert>
 80044c0:	2800      	cmp	r0, #0
 80044c2:	f47f af2d 	bne.w	8004320 <queues1_execute+0xc0>
 80044c6:	f380 8811 	msr	BASEPRI, r0
 80044ca:	f7ff fb41 	bl	8003b50 <test_wait_threads>
 80044ce:	210a      	movs	r1, #10
 80044d0:	4805      	ldr	r0, [pc, #20]	; (80044e8 <queues1_execute+0x288>)
 80044d2:	f7fe f8ed 	bl	80026b0 <chIQGetTimeout>
 80044d6:	1c43      	adds	r3, r0, #1
 80044d8:	4259      	negs	r1, r3
 80044da:	4159      	adcs	r1, r3
 80044dc:	200d      	movs	r0, #13
 80044de:	b003      	add	sp, #12
 80044e0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80044e4:	f7fc b994 	b.w	8000810 <_test_assert>
 80044e8:	20000810 	.word	0x20000810
 80044ec:	080062a0 	.word	0x080062a0
 80044f0:	20000c88 	.word	0x20000c88
 80044f4:	20000938 	.word	0x20000938
 80044f8:	08002701 	.word	0x08002701
 80044fc:	20000b40 	.word	0x20000b40
 8004500:	200011d4 	.word	0x200011d4
	...

08004510 <dyn2_execute>:
 8004510:	4a31      	ldr	r2, [pc, #196]	; (80045d8 <dyn2_execute+0xc8>)
 8004512:	6991      	ldr	r1, [r2, #24]
 8004514:	4a31      	ldr	r2, [pc, #196]	; (80045dc <dyn2_execute+0xcc>)
 8004516:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004518:	4b31      	ldr	r3, [pc, #196]	; (80045e0 <dyn2_execute+0xd0>)
 800451a:	688d      	ldr	r5, [r1, #8]
 800451c:	4931      	ldr	r1, [pc, #196]	; (80045e4 <dyn2_execute+0xd4>)
 800451e:	f103 070c 	add.w	r7, r3, #12
 8004522:	2620      	movs	r6, #32
 8004524:	2400      	movs	r4, #0
 8004526:	f386 8811 	msr	BASEPRI, r6
 800452a:	6808      	ldr	r0, [r1, #0]
 800452c:	6010      	str	r0, [r2, #0]
 800452e:	600a      	str	r2, [r1, #0]
 8004530:	f384 8811 	msr	BASEPRI, r4
 8004534:	429f      	cmp	r7, r3
 8004536:	d002      	beq.n	800453e <dyn2_execute+0x2e>
 8004538:	f853 2b04 	ldr.w	r2, [r3], #4
 800453c:	e7f3      	b.n	8004526 <dyn2_execute+0x16>
 800453e:	492a      	ldr	r1, [pc, #168]	; (80045e8 <dyn2_execute+0xd8>)
 8004540:	4c2a      	ldr	r4, [pc, #168]	; (80045ec <dyn2_execute+0xdc>)
 8004542:	1e68      	subs	r0, r5, #1
 8004544:	f7fd f97c 	bl	8001840 <chThdCreateFromMemoryPool.constprop.52>
 8004548:	4929      	ldr	r1, [pc, #164]	; (80045f0 <dyn2_execute+0xe0>)
 800454a:	6020      	str	r0, [r4, #0]
 800454c:	1ea8      	subs	r0, r5, #2
 800454e:	f7fd f977 	bl	8001840 <chThdCreateFromMemoryPool.constprop.52>
 8004552:	4928      	ldr	r1, [pc, #160]	; (80045f4 <dyn2_execute+0xe4>)
 8004554:	6060      	str	r0, [r4, #4]
 8004556:	1ee8      	subs	r0, r5, #3
 8004558:	f7fd f972 	bl	8001840 <chThdCreateFromMemoryPool.constprop.52>
 800455c:	4926      	ldr	r1, [pc, #152]	; (80045f8 <dyn2_execute+0xe8>)
 800455e:	60a0      	str	r0, [r4, #8]
 8004560:	1f28      	subs	r0, r5, #4
 8004562:	f7fd f96d 	bl	8001840 <chThdCreateFromMemoryPool.constprop.52>
 8004566:	4925      	ldr	r1, [pc, #148]	; (80045fc <dyn2_execute+0xec>)
 8004568:	60e0      	str	r0, [r4, #12]
 800456a:	1f68      	subs	r0, r5, #5
 800456c:	f7fd f968 	bl	8001840 <chThdCreateFromMemoryPool.constprop.52>
 8004570:	6821      	ldr	r1, [r4, #0]
 8004572:	6120      	str	r0, [r4, #16]
 8004574:	b141      	cbz	r1, 8004588 <dyn2_execute+0x78>
 8004576:	6861      	ldr	r1, [r4, #4]
 8004578:	b131      	cbz	r1, 8004588 <dyn2_execute+0x78>
 800457a:	68a1      	ldr	r1, [r4, #8]
 800457c:	b121      	cbz	r1, 8004588 <dyn2_execute+0x78>
 800457e:	68e1      	ldr	r1, [r4, #12]
 8004580:	b111      	cbz	r1, 8004588 <dyn2_execute+0x78>
 8004582:	fab0 f180 	clz	r1, r0
 8004586:	0949      	lsrs	r1, r1, #5
 8004588:	2001      	movs	r0, #1
 800458a:	f7fc f941 	bl	8000810 <_test_assert>
 800458e:	b100      	cbz	r0, 8004592 <dyn2_execute+0x82>
 8004590:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004592:	f7ff fadd 	bl	8003b50 <test_wait_threads>
 8004596:	491a      	ldr	r1, [pc, #104]	; (8004600 <dyn2_execute+0xf0>)
 8004598:	2002      	movs	r0, #2
 800459a:	f7fc f911 	bl	80007c0 <_test_assert_sequence>
 800459e:	2800      	cmp	r0, #0
 80045a0:	d1f6      	bne.n	8004590 <dyn2_execute+0x80>
 80045a2:	4d10      	ldr	r5, [pc, #64]	; (80045e4 <dyn2_execute+0xd4>)
 80045a4:	2404      	movs	r4, #4
 80045a6:	4628      	mov	r0, r5
 80045a8:	f7fc fa4a 	bl	8000a40 <chPoolAlloc>
 80045ac:	1c01      	adds	r1, r0, #0
 80045ae:	bf18      	it	ne
 80045b0:	2101      	movne	r1, #1
 80045b2:	2003      	movs	r0, #3
 80045b4:	f7fc f92c 	bl	8000810 <_test_assert>
 80045b8:	2800      	cmp	r0, #0
 80045ba:	d1e9      	bne.n	8004590 <dyn2_execute+0x80>
 80045bc:	3c01      	subs	r4, #1
 80045be:	d1f2      	bne.n	80045a6 <dyn2_execute+0x96>
 80045c0:	4808      	ldr	r0, [pc, #32]	; (80045e4 <dyn2_execute+0xd4>)
 80045c2:	f7fc fa3d 	bl	8000a40 <chPoolAlloc>
 80045c6:	fab0 f180 	clz	r1, r0
 80045ca:	0949      	lsrs	r1, r1, #5
 80045cc:	2004      	movs	r0, #4
 80045ce:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80045d2:	f7fc b91d 	b.w	8000810 <_test_assert>
 80045d6:	bf00      	nop
 80045d8:	20000938 	.word	0x20000938
 80045dc:	20000b40 	.word	0x20000b40
 80045e0:	08006a44 	.word	0x08006a44
 80045e4:	20000b10 	.word	0x20000b10
 80045e8:	08005ee0 	.word	0x08005ee0
 80045ec:	200011d4 	.word	0x200011d4
 80045f0:	08005ed0 	.word	0x08005ed0
 80045f4:	08005ed4 	.word	0x08005ed4
 80045f8:	08005ed8 	.word	0x08005ed8
 80045fc:	08006124 	.word	0x08006124
 8004600:	080062a0 	.word	0x080062a0
	...

08004610 <dyn1_execute>:
 8004610:	b570      	push	{r4, r5, r6, lr}
 8004612:	4b2c      	ldr	r3, [pc, #176]	; (80046c4 <dyn1_execute+0xb4>)
 8004614:	482c      	ldr	r0, [pc, #176]	; (80046c8 <dyn1_execute+0xb8>)
 8004616:	699b      	ldr	r3, [r3, #24]
 8004618:	4c2c      	ldr	r4, [pc, #176]	; (80046cc <dyn1_execute+0xbc>)
 800461a:	689d      	ldr	r5, [r3, #8]
 800461c:	b082      	sub	sp, #8
 800461e:	4669      	mov	r1, sp
 8004620:	f7fe fdbe 	bl	80031a0 <chHeapStatus>
 8004624:	492a      	ldr	r1, [pc, #168]	; (80046d0 <dyn1_execute+0xc0>)
 8004626:	1e68      	subs	r0, r5, #1
 8004628:	f7fe fee2 	bl	80033f0 <chThdCreateFromHeap.constprop.53>
 800462c:	4929      	ldr	r1, [pc, #164]	; (80046d4 <dyn1_execute+0xc4>)
 800462e:	6020      	str	r0, [r4, #0]
 8004630:	1ea8      	subs	r0, r5, #2
 8004632:	f7fe fedd 	bl	80033f0 <chThdCreateFromHeap.constprop.53>
 8004636:	a901      	add	r1, sp, #4
 8004638:	6060      	str	r0, [r4, #4]
 800463a:	4823      	ldr	r0, [pc, #140]	; (80046c8 <dyn1_execute+0xb8>)
 800463c:	f7fe fdb0 	bl	80031a0 <chHeapStatus>
 8004640:	9901      	ldr	r1, [sp, #4]
 8004642:	4821      	ldr	r0, [pc, #132]	; (80046c8 <dyn1_execute+0xb8>)
 8004644:	f7fe fe8c 	bl	8003360 <chHeapAlloc>
 8004648:	4923      	ldr	r1, [pc, #140]	; (80046d8 <dyn1_execute+0xc8>)
 800464a:	4606      	mov	r6, r0
 800464c:	1ee8      	subs	r0, r5, #3
 800464e:	f7fe fecf 	bl	80033f0 <chThdCreateFromHeap.constprop.53>
 8004652:	60a0      	str	r0, [r4, #8]
 8004654:	4630      	mov	r0, r6
 8004656:	f7fe fdcb 	bl	80031f0 <chHeapFree>
 800465a:	6821      	ldr	r1, [r4, #0]
 800465c:	b121      	cbz	r1, 8004668 <dyn1_execute+0x58>
 800465e:	6861      	ldr	r1, [r4, #4]
 8004660:	b111      	cbz	r1, 8004668 <dyn1_execute+0x58>
 8004662:	68a1      	ldr	r1, [r4, #8]
 8004664:	b331      	cbz	r1, 80046b4 <dyn1_execute+0xa4>
 8004666:	2100      	movs	r1, #0
 8004668:	2001      	movs	r0, #1
 800466a:	f7fc f8d1 	bl	8000810 <_test_assert>
 800466e:	b108      	cbz	r0, 8004674 <dyn1_execute+0x64>
 8004670:	b002      	add	sp, #8
 8004672:	bd70      	pop	{r4, r5, r6, pc}
 8004674:	f7ff fa6c 	bl	8003b50 <test_wait_threads>
 8004678:	4918      	ldr	r1, [pc, #96]	; (80046dc <dyn1_execute+0xcc>)
 800467a:	2002      	movs	r0, #2
 800467c:	f7fc f8a0 	bl	80007c0 <_test_assert_sequence>
 8004680:	2800      	cmp	r0, #0
 8004682:	d1f5      	bne.n	8004670 <dyn1_execute+0x60>
 8004684:	a901      	add	r1, sp, #4
 8004686:	4810      	ldr	r0, [pc, #64]	; (80046c8 <dyn1_execute+0xb8>)
 8004688:	f7fe fd8a 	bl	80031a0 <chHeapStatus>
 800468c:	f1a0 0101 	sub.w	r1, r0, #1
 8004690:	fab1 f181 	clz	r1, r1
 8004694:	0949      	lsrs	r1, r1, #5
 8004696:	2003      	movs	r0, #3
 8004698:	f7fc f8ba 	bl	8000810 <_test_assert>
 800469c:	2800      	cmp	r0, #0
 800469e:	d1e7      	bne.n	8004670 <dyn1_execute+0x60>
 80046a0:	e9dd 3100 	ldrd	r3, r1, [sp]
 80046a4:	1ac9      	subs	r1, r1, r3
 80046a6:	fab1 f181 	clz	r1, r1
 80046aa:	0949      	lsrs	r1, r1, #5
 80046ac:	2004      	movs	r0, #4
 80046ae:	f7fc f8af 	bl	8000810 <_test_assert>
 80046b2:	e7dd      	b.n	8004670 <dyn1_execute+0x60>
 80046b4:	68e3      	ldr	r3, [r4, #12]
 80046b6:	2b00      	cmp	r3, #0
 80046b8:	d1d6      	bne.n	8004668 <dyn1_execute+0x58>
 80046ba:	6921      	ldr	r1, [r4, #16]
 80046bc:	fab1 f181 	clz	r1, r1
 80046c0:	0949      	lsrs	r1, r1, #5
 80046c2:	e7d1      	b.n	8004668 <dyn1_execute+0x58>
 80046c4:	20000938 	.word	0x20000938
 80046c8:	20000ab8 	.word	0x20000ab8
 80046cc:	200011d4 	.word	0x200011d4
 80046d0:	08005ee0 	.word	0x08005ee0
 80046d4:	08005ed0 	.word	0x08005ed0
 80046d8:	08005ed4 	.word	0x08005ed4
 80046dc:	08005ec0 	.word	0x08005ec0

080046e0 <evt2_execute>:
 80046e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80046e4:	2520      	movs	r5, #32
 80046e6:	b08f      	sub	sp, #60	; 0x3c
 80046e8:	f385 8811 	msr	BASEPRI, r5
 80046ec:	4ca9      	ldr	r4, [pc, #676]	; (8004994 <evt2_execute+0x2b4>)
 80046ee:	69a2      	ldr	r2, [r4, #24]
 80046f0:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80046f2:	f043 0307 	orr.w	r3, r3, #7
 80046f6:	6353      	str	r3, [r2, #52]	; 0x34
 80046f8:	2300      	movs	r3, #0
 80046fa:	f383 8811 	msr	BASEPRI, r3
 80046fe:	f7fd fa1f 	bl	8001b40 <chEvtWaitOne.constprop.32>
 8004702:	f1a0 0101 	sub.w	r1, r0, #1
 8004706:	fab1 f181 	clz	r1, r1
 800470a:	0949      	lsrs	r1, r1, #5
 800470c:	2001      	movs	r0, #1
 800470e:	f7fc f87f 	bl	8000810 <_test_assert>
 8004712:	b110      	cbz	r0, 800471a <evt2_execute+0x3a>
 8004714:	b00f      	add	sp, #60	; 0x3c
 8004716:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800471a:	f7fd fa11 	bl	8001b40 <chEvtWaitOne.constprop.32>
 800471e:	f1a0 0102 	sub.w	r1, r0, #2
 8004722:	fab1 f181 	clz	r1, r1
 8004726:	0949      	lsrs	r1, r1, #5
 8004728:	2002      	movs	r0, #2
 800472a:	f7fc f871 	bl	8000810 <_test_assert>
 800472e:	2800      	cmp	r0, #0
 8004730:	d1f0      	bne.n	8004714 <evt2_execute+0x34>
 8004732:	f7fd fa05 	bl	8001b40 <chEvtWaitOne.constprop.32>
 8004736:	f1a0 0104 	sub.w	r1, r0, #4
 800473a:	fab1 f181 	clz	r1, r1
 800473e:	0949      	lsrs	r1, r1, #5
 8004740:	2003      	movs	r0, #3
 8004742:	f7fc f865 	bl	8000810 <_test_assert>
 8004746:	2800      	cmp	r0, #0
 8004748:	d1e4      	bne.n	8004714 <evt2_execute+0x34>
 800474a:	f7fb fda9 	bl	80002a0 <chEvtGetAndClearEvents.constprop.36>
 800474e:	fab0 f180 	clz	r1, r0
 8004752:	0949      	lsrs	r1, r1, #5
 8004754:	2004      	movs	r0, #4
 8004756:	f7fc f85b 	bl	8000810 <_test_assert>
 800475a:	4606      	mov	r6, r0
 800475c:	2800      	cmp	r0, #0
 800475e:	d1d9      	bne.n	8004714 <evt2_execute+0x34>
 8004760:	f7fe f926 	bl	80029b0 <test_wait_tick>
 8004764:	f385 8811 	msr	BASEPRI, r5
 8004768:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 800476c:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
 8004770:	f386 8811 	msr	BASEPRI, r6
 8004774:	69a1      	ldr	r1, [r4, #24]
 8004776:	4b88      	ldr	r3, [pc, #544]	; (8004998 <evt2_execute+0x2b8>)
 8004778:	688a      	ldr	r2, [r1, #8]
 800477a:	4888      	ldr	r0, [pc, #544]	; (800499c <evt2_execute+0x2bc>)
 800477c:	9100      	str	r1, [sp, #0]
 800477e:	3a01      	subs	r2, #1
 8004780:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004784:	f7fd f90c 	bl	80019a0 <chThdCreateStatic>
 8004788:	4e85      	ldr	r6, [pc, #532]	; (80049a0 <evt2_execute+0x2c0>)
 800478a:	6030      	str	r0, [r6, #0]
 800478c:	f7fd f9d8 	bl	8001b40 <chEvtWaitOne.constprop.32>
 8004790:	f207 2226 	addw	r2, r7, #550	; 0x226
 8004794:	4681      	mov	r9, r0
 8004796:	f507 71fa 	add.w	r1, r7, #500	; 0x1f4
 800479a:	2005      	movs	r0, #5
 800479c:	f7fb fff0 	bl	8000780 <_test_assert_time_window>
 80047a0:	2800      	cmp	r0, #0
 80047a2:	d1b7      	bne.n	8004714 <evt2_execute+0x34>
 80047a4:	f1a9 0101 	sub.w	r1, r9, #1
 80047a8:	fab1 f181 	clz	r1, r1
 80047ac:	0949      	lsrs	r1, r1, #5
 80047ae:	2006      	movs	r0, #6
 80047b0:	f7fc f82e 	bl	8000810 <_test_assert>
 80047b4:	2800      	cmp	r0, #0
 80047b6:	d1ad      	bne.n	8004714 <evt2_execute+0x34>
 80047b8:	f7fb fd72 	bl	80002a0 <chEvtGetAndClearEvents.constprop.36>
 80047bc:	fab0 f180 	clz	r1, r0
 80047c0:	0949      	lsrs	r1, r1, #5
 80047c2:	2007      	movs	r0, #7
 80047c4:	f7fc f824 	bl	8000810 <_test_assert>
 80047c8:	4607      	mov	r7, r0
 80047ca:	2800      	cmp	r0, #0
 80047cc:	d1a2      	bne.n	8004714 <evt2_execute+0x34>
 80047ce:	f7ff f9bf 	bl	8003b50 <test_wait_threads>
 80047d2:	f385 8811 	msr	BASEPRI, r5
 80047d6:	69a2      	ldr	r2, [r4, #24]
 80047d8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80047da:	f043 0305 	orr.w	r3, r3, #5
 80047de:	6353      	str	r3, [r2, #52]	; 0x34
 80047e0:	f387 8811 	msr	BASEPRI, r7
 80047e4:	f7fd f9cc 	bl	8001b80 <chEvtWaitAny.constprop.31>
 80047e8:	1f47      	subs	r7, r0, #5
 80047ea:	4279      	negs	r1, r7
 80047ec:	4179      	adcs	r1, r7
 80047ee:	2008      	movs	r0, #8
 80047f0:	f7fc f80e 	bl	8000810 <_test_assert>
 80047f4:	2800      	cmp	r0, #0
 80047f6:	d18d      	bne.n	8004714 <evt2_execute+0x34>
 80047f8:	f7fb fd52 	bl	80002a0 <chEvtGetAndClearEvents.constprop.36>
 80047fc:	fab0 f180 	clz	r1, r0
 8004800:	0949      	lsrs	r1, r1, #5
 8004802:	2009      	movs	r0, #9
 8004804:	f7fc f804 	bl	8000810 <_test_assert>
 8004808:	4607      	mov	r7, r0
 800480a:	2800      	cmp	r0, #0
 800480c:	d182      	bne.n	8004714 <evt2_execute+0x34>
 800480e:	f7fe f8cf 	bl	80029b0 <test_wait_tick>
 8004812:	f385 8811 	msr	BASEPRI, r5
 8004816:	f8d8 5024 	ldr.w	r5, [r8, #36]	; 0x24
 800481a:	f387 8811 	msr	BASEPRI, r7
 800481e:	69a1      	ldr	r1, [r4, #24]
 8004820:	4b5d      	ldr	r3, [pc, #372]	; (8004998 <evt2_execute+0x2b8>)
 8004822:	688a      	ldr	r2, [r1, #8]
 8004824:	485d      	ldr	r0, [pc, #372]	; (800499c <evt2_execute+0x2bc>)
 8004826:	9100      	str	r1, [sp, #0]
 8004828:	3a01      	subs	r2, #1
 800482a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800482e:	f7fd f8b7 	bl	80019a0 <chThdCreateStatic>
 8004832:	6030      	str	r0, [r6, #0]
 8004834:	f7fd f9a4 	bl	8001b80 <chEvtWaitAny.constprop.31>
 8004838:	f205 2226 	addw	r2, r5, #550	; 0x226
 800483c:	4607      	mov	r7, r0
 800483e:	f505 71fa 	add.w	r1, r5, #500	; 0x1f4
 8004842:	200a      	movs	r0, #10
 8004844:	f7fb ff9c 	bl	8000780 <_test_assert_time_window>
 8004848:	2800      	cmp	r0, #0
 800484a:	f47f af63 	bne.w	8004714 <evt2_execute+0x34>
 800484e:	1e78      	subs	r0, r7, #1
 8004850:	4241      	negs	r1, r0
 8004852:	4141      	adcs	r1, r0
 8004854:	200b      	movs	r0, #11
 8004856:	f7fb ffdb 	bl	8000810 <_test_assert>
 800485a:	2800      	cmp	r0, #0
 800485c:	f47f af5a 	bne.w	8004714 <evt2_execute+0x34>
 8004860:	f7fb fd1e 	bl	80002a0 <chEvtGetAndClearEvents.constprop.36>
 8004864:	fab0 f180 	clz	r1, r0
 8004868:	0949      	lsrs	r1, r1, #5
 800486a:	200c      	movs	r0, #12
 800486c:	f7fb ffd0 	bl	8000810 <_test_assert>
 8004870:	4683      	mov	fp, r0
 8004872:	2800      	cmp	r0, #0
 8004874:	f47f af4e 	bne.w	8004714 <evt2_execute+0x34>
 8004878:	4f4a      	ldr	r7, [pc, #296]	; (80049a4 <evt2_execute+0x2c4>)
 800487a:	4d4b      	ldr	r5, [pc, #300]	; (80049a8 <evt2_execute+0x2c8>)
 800487c:	f7ff f968 	bl	8003b50 <test_wait_threads>
 8004880:	f04f 0a20 	mov.w	sl, #32
 8004884:	603f      	str	r7, [r7, #0]
 8004886:	602d      	str	r5, [r5, #0]
 8004888:	f38a 8811 	msr	BASEPRI, sl
 800488c:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 8004890:	683a      	ldr	r2, [r7, #0]
 8004892:	f849 2d28 	str.w	r2, [r9, #-40]!
 8004896:	69a0      	ldr	r0, [r4, #24]
 8004898:	f8cd b01c 	str.w	fp, [sp, #28]
 800489c:	2101      	movs	r1, #1
 800489e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80048a2:	e9cd 0105 	strd	r0, r1, [sp, #20]
 80048a6:	f8c7 9000 	str.w	r9, [r7]
 80048aa:	9208      	str	r2, [sp, #32]
 80048ac:	f38b 8811 	msr	BASEPRI, fp
 80048b0:	f38a 8811 	msr	BASEPRI, sl
 80048b4:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80048b8:	6829      	ldr	r1, [r5, #0]
 80048ba:	f848 1d14 	str.w	r1, [r8, #-20]!
 80048be:	69a0      	ldr	r0, [r4, #24]
 80048c0:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80048c4:	2104      	movs	r1, #4
 80048c6:	920d      	str	r2, [sp, #52]	; 0x34
 80048c8:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80048cc:	f8c5 8000 	str.w	r8, [r5]
 80048d0:	f38b 8811 	msr	BASEPRI, fp
 80048d4:	f7fe f86c 	bl	80029b0 <test_wait_tick>
 80048d8:	f38a 8811 	msr	BASEPRI, sl
 80048dc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80048e0:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80048e2:	9302      	str	r3, [sp, #8]
 80048e4:	f38b 8811 	msr	BASEPRI, fp
 80048e8:	69a3      	ldr	r3, [r4, #24]
 80048ea:	4930      	ldr	r1, [pc, #192]	; (80049ac <evt2_execute+0x2cc>)
 80048ec:	689a      	ldr	r2, [r3, #8]
 80048ee:	482b      	ldr	r0, [pc, #172]	; (800499c <evt2_execute+0x2bc>)
 80048f0:	9100      	str	r1, [sp, #0]
 80048f2:	4b2f      	ldr	r3, [pc, #188]	; (80049b0 <evt2_execute+0x2d0>)
 80048f4:	3a01      	subs	r2, #1
 80048f6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80048fa:	f7fd f851 	bl	80019a0 <chThdCreateStatic>
 80048fe:	9b02      	ldr	r3, [sp, #8]
 8004900:	6030      	str	r0, [r6, #0]
 8004902:	f503 71fa 	add.w	r1, r3, #500	; 0x1f4
 8004906:	69a4      	ldr	r4, [r4, #24]
 8004908:	f38a 8811 	msr	BASEPRI, sl
 800490c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800490e:	f003 0205 	and.w	r2, r3, #5
 8004912:	2a05      	cmp	r2, #5
 8004914:	d007      	beq.n	8004926 <evt2_execute+0x246>
 8004916:	2305      	movs	r3, #5
 8004918:	6223      	str	r3, [r4, #32]
 800491a:	200b      	movs	r0, #11
 800491c:	9103      	str	r1, [sp, #12]
 800491e:	f7fd f877 	bl	8001a10 <chSchGoSleepS>
 8004922:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004924:	9903      	ldr	r1, [sp, #12]
 8004926:	f023 0305 	bic.w	r3, r3, #5
 800492a:	6363      	str	r3, [r4, #52]	; 0x34
 800492c:	2300      	movs	r3, #0
 800492e:	f383 8811 	msr	BASEPRI, r3
 8004932:	9b02      	ldr	r3, [sp, #8]
 8004934:	200d      	movs	r0, #13
 8004936:	f203 2226 	addw	r2, r3, #550	; 0x226
 800493a:	f7fb ff21 	bl	8000780 <_test_assert_time_window>
 800493e:	2800      	cmp	r0, #0
 8004940:	f47f aee8 	bne.w	8004714 <evt2_execute+0x34>
 8004944:	f7fb fcac 	bl	80002a0 <chEvtGetAndClearEvents.constprop.36>
 8004948:	fab0 f180 	clz	r1, r0
 800494c:	0949      	lsrs	r1, r1, #5
 800494e:	200e      	movs	r0, #14
 8004950:	f7fb ff5e 	bl	8000810 <_test_assert>
 8004954:	2800      	cmp	r0, #0
 8004956:	f47f aedd 	bne.w	8004714 <evt2_execute+0x34>
 800495a:	f7ff f8f9 	bl	8003b50 <test_wait_threads>
 800495e:	4649      	mov	r1, r9
 8004960:	4810      	ldr	r0, [pc, #64]	; (80049a4 <evt2_execute+0x2c4>)
 8004962:	f7fc f8f5 	bl	8000b50 <chEvtUnregister>
 8004966:	4641      	mov	r1, r8
 8004968:	480f      	ldr	r0, [pc, #60]	; (80049a8 <evt2_execute+0x2c8>)
 800496a:	f7fc f8f1 	bl	8000b50 <chEvtUnregister>
 800496e:	6839      	ldr	r1, [r7, #0]
 8004970:	1bca      	subs	r2, r1, r7
 8004972:	4251      	negs	r1, r2
 8004974:	4151      	adcs	r1, r2
 8004976:	200f      	movs	r0, #15
 8004978:	f7fb ff4a 	bl	8000810 <_test_assert>
 800497c:	2800      	cmp	r0, #0
 800497e:	f47f aec9 	bne.w	8004714 <evt2_execute+0x34>
 8004982:	6829      	ldr	r1, [r5, #0]
 8004984:	1b4b      	subs	r3, r1, r5
 8004986:	4259      	negs	r1, r3
 8004988:	4159      	adcs	r1, r3
 800498a:	2010      	movs	r0, #16
 800498c:	f7fb ff40 	bl	8000810 <_test_assert>
 8004990:	e6c0      	b.n	8004714 <evt2_execute+0x34>
 8004992:	bf00      	nop
 8004994:	20000938 	.word	0x20000938
 8004998:	08002911 	.word	0x08002911
 800499c:	20000b40 	.word	0x20000b40
 80049a0:	200011d4 	.word	0x200011d4
 80049a4:	20000808 	.word	0x20000808
 80049a8:	2000080c 	.word	0x2000080c
 80049ac:	08005ee0 	.word	0x08005ee0
 80049b0:	08002941 	.word	0x08002941
	...

080049c0 <mtx8_execute>:
 80049c0:	b570      	push	{r4, r5, r6, lr}
 80049c2:	4b19      	ldr	r3, [pc, #100]	; (8004a28 <mtx8_execute+0x68>)
 80049c4:	4d19      	ldr	r5, [pc, #100]	; (8004a2c <mtx8_execute+0x6c>)
 80049c6:	699b      	ldr	r3, [r3, #24]
 80049c8:	4a19      	ldr	r2, [pc, #100]	; (8004a30 <mtx8_execute+0x70>)
 80049ca:	689e      	ldr	r6, [r3, #8]
 80049cc:	4b19      	ldr	r3, [pc, #100]	; (8004a34 <mtx8_execute+0x74>)
 80049ce:	4c1a      	ldr	r4, [pc, #104]	; (8004a38 <mtx8_execute+0x78>)
 80049d0:	b082      	sub	sp, #8
 80049d2:	4628      	mov	r0, r5
 80049d4:	9200      	str	r2, [sp, #0]
 80049d6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80049da:	1c72      	adds	r2, r6, #1
 80049dc:	f7fc ffe0 	bl	80019a0 <chThdCreateStatic>
 80049e0:	4b16      	ldr	r3, [pc, #88]	; (8004a3c <mtx8_execute+0x7c>)
 80049e2:	6020      	str	r0, [r4, #0]
 80049e4:	1cb2      	adds	r2, r6, #2
 80049e6:	9300      	str	r3, [sp, #0]
 80049e8:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 80049ec:	4b14      	ldr	r3, [pc, #80]	; (8004a40 <mtx8_execute+0x80>)
 80049ee:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80049f2:	f7fc ffd5 	bl	80019a0 <chThdCreateStatic>
 80049f6:	4b13      	ldr	r3, [pc, #76]	; (8004a44 <mtx8_execute+0x84>)
 80049f8:	6060      	str	r0, [r4, #4]
 80049fa:	1cf2      	adds	r2, r6, #3
 80049fc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a00:	9300      	str	r3, [sp, #0]
 8004a02:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8004a06:	4b10      	ldr	r3, [pc, #64]	; (8004a48 <mtx8_execute+0x88>)
 8004a08:	f7fc ffca 	bl	80019a0 <chThdCreateStatic>
 8004a0c:	60a0      	str	r0, [r4, #8]
 8004a0e:	f7fc ff5f 	bl	80018d0 <chCondSignal.constprop.44>
 8004a12:	f7fc ff5d 	bl	80018d0 <chCondSignal.constprop.44>
 8004a16:	f7ff f89b 	bl	8003b50 <test_wait_threads>
 8004a1a:	490c      	ldr	r1, [pc, #48]	; (8004a4c <mtx8_execute+0x8c>)
 8004a1c:	2001      	movs	r0, #1
 8004a1e:	b002      	add	sp, #8
 8004a20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004a24:	f7fb becc 	b.w	80007c0 <_test_assert_sequence>
 8004a28:	20000938 	.word	0x20000938
 8004a2c:	20000b40 	.word	0x20000b40
 8004a30:	08005ee0 	.word	0x08005ee0
 8004a34:	08002f31 	.word	0x08002f31
 8004a38:	200011d4 	.word	0x200011d4
 8004a3c:	08005ed4 	.word	0x08005ed4
 8004a40:	08002fc1 	.word	0x08002fc1
 8004a44:	08005ed0 	.word	0x08005ed0
 8004a48:	08003031 	.word	0x08003031
 8004a4c:	08005f00 	.word	0x08005f00

08004a50 <mtx7_execute>:
 8004a50:	b530      	push	{r4, r5, lr}
 8004a52:	4b2c      	ldr	r3, [pc, #176]	; (8004b04 <mtx7_execute+0xb4>)
 8004a54:	4a2c      	ldr	r2, [pc, #176]	; (8004b08 <mtx7_execute+0xb8>)
 8004a56:	6999      	ldr	r1, [r3, #24]
 8004a58:	482c      	ldr	r0, [pc, #176]	; (8004b0c <mtx7_execute+0xbc>)
 8004a5a:	688d      	ldr	r5, [r1, #8]
 8004a5c:	4b2c      	ldr	r3, [pc, #176]	; (8004b10 <mtx7_execute+0xc0>)
 8004a5e:	4c2d      	ldr	r4, [pc, #180]	; (8004b14 <mtx7_execute+0xc4>)
 8004a60:	b083      	sub	sp, #12
 8004a62:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a66:	9200      	str	r2, [sp, #0]
 8004a68:	1c6a      	adds	r2, r5, #1
 8004a6a:	f7fc ff99 	bl	80019a0 <chThdCreateStatic>
 8004a6e:	4b2a      	ldr	r3, [pc, #168]	; (8004b18 <mtx7_execute+0xc8>)
 8004a70:	6020      	str	r0, [r4, #0]
 8004a72:	1caa      	adds	r2, r5, #2
 8004a74:	9300      	str	r3, [sp, #0]
 8004a76:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a7a:	4b25      	ldr	r3, [pc, #148]	; (8004b10 <mtx7_execute+0xc0>)
 8004a7c:	4827      	ldr	r0, [pc, #156]	; (8004b1c <mtx7_execute+0xcc>)
 8004a7e:	f7fc ff8f 	bl	80019a0 <chThdCreateStatic>
 8004a82:	4b27      	ldr	r3, [pc, #156]	; (8004b20 <mtx7_execute+0xd0>)
 8004a84:	6060      	str	r0, [r4, #4]
 8004a86:	1cea      	adds	r2, r5, #3
 8004a88:	9300      	str	r3, [sp, #0]
 8004a8a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a8e:	4b20      	ldr	r3, [pc, #128]	; (8004b10 <mtx7_execute+0xc0>)
 8004a90:	4824      	ldr	r0, [pc, #144]	; (8004b24 <mtx7_execute+0xd4>)
 8004a92:	f7fc ff85 	bl	80019a0 <chThdCreateStatic>
 8004a96:	4b24      	ldr	r3, [pc, #144]	; (8004b28 <mtx7_execute+0xd8>)
 8004a98:	60a0      	str	r0, [r4, #8]
 8004a9a:	1d2a      	adds	r2, r5, #4
 8004a9c:	9300      	str	r3, [sp, #0]
 8004a9e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004aa2:	4b1b      	ldr	r3, [pc, #108]	; (8004b10 <mtx7_execute+0xc0>)
 8004aa4:	4821      	ldr	r0, [pc, #132]	; (8004b2c <mtx7_execute+0xdc>)
 8004aa6:	f7fc ff7b 	bl	80019a0 <chThdCreateStatic>
 8004aaa:	4b21      	ldr	r3, [pc, #132]	; (8004b30 <mtx7_execute+0xe0>)
 8004aac:	60e0      	str	r0, [r4, #12]
 8004aae:	1d6a      	adds	r2, r5, #5
 8004ab0:	9300      	str	r3, [sp, #0]
 8004ab2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004ab6:	4b16      	ldr	r3, [pc, #88]	; (8004b10 <mtx7_execute+0xc0>)
 8004ab8:	481e      	ldr	r0, [pc, #120]	; (8004b34 <mtx7_execute+0xe4>)
 8004aba:	f7fc ff71 	bl	80019a0 <chThdCreateStatic>
 8004abe:	2320      	movs	r3, #32
 8004ac0:	6120      	str	r0, [r4, #16]
 8004ac2:	f383 8811 	msr	BASEPRI, r3
 8004ac6:	4c1c      	ldr	r4, [pc, #112]	; (8004b38 <mtx7_execute+0xe8>)
 8004ac8:	6823      	ldr	r3, [r4, #0]
 8004aca:	42a3      	cmp	r3, r4
 8004acc:	d00b      	beq.n	8004ae6 <mtx7_execute+0x96>
 8004ace:	f06f 0501 	mvn.w	r5, #1
 8004ad2:	681a      	ldr	r2, [r3, #0]
 8004ad4:	6022      	str	r2, [r4, #0]
 8004ad6:	4618      	mov	r0, r3
 8004ad8:	6054      	str	r4, [r2, #4]
 8004ada:	f7fc f929 	bl	8000d30 <chSchReadyI>
 8004ade:	6823      	ldr	r3, [r4, #0]
 8004ae0:	6205      	str	r5, [r0, #32]
 8004ae2:	42a3      	cmp	r3, r4
 8004ae4:	d1f5      	bne.n	8004ad2 <mtx7_execute+0x82>
 8004ae6:	f7fc fd4b 	bl	8001580 <chSchRescheduleS>
 8004aea:	2300      	movs	r3, #0
 8004aec:	f383 8811 	msr	BASEPRI, r3
 8004af0:	f7ff f82e 	bl	8003b50 <test_wait_threads>
 8004af4:	4911      	ldr	r1, [pc, #68]	; (8004b3c <mtx7_execute+0xec>)
 8004af6:	2001      	movs	r0, #1
 8004af8:	b003      	add	sp, #12
 8004afa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004afe:	f7fb be5f 	b.w	80007c0 <_test_assert_sequence>
 8004b02:	bf00      	nop
 8004b04:	20000938 	.word	0x20000938
 8004b08:	08006124 	.word	0x08006124
 8004b0c:	20000b40 	.word	0x20000b40
 8004b10:	08002fc1 	.word	0x08002fc1
 8004b14:	200011d4 	.word	0x200011d4
 8004b18:	08005ed8 	.word	0x08005ed8
 8004b1c:	20000c88 	.word	0x20000c88
 8004b20:	08005ed4 	.word	0x08005ed4
 8004b24:	20000dd0 	.word	0x20000dd0
 8004b28:	08005ed0 	.word	0x08005ed0
 8004b2c:	20000f18 	.word	0x20000f18
 8004b30:	08005ee0 	.word	0x08005ee0
 8004b34:	20001060 	.word	0x20001060
 8004b38:	20000800 	.word	0x20000800
 8004b3c:	08006120 	.word	0x08006120

08004b40 <mtx6_execute>:
 8004b40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b42:	4b2c      	ldr	r3, [pc, #176]	; (8004bf4 <mtx6_execute+0xb4>)
 8004b44:	4e2c      	ldr	r6, [pc, #176]	; (8004bf8 <mtx6_execute+0xb8>)
 8004b46:	699b      	ldr	r3, [r3, #24]
 8004b48:	4d2c      	ldr	r5, [pc, #176]	; (8004bfc <mtx6_execute+0xbc>)
 8004b4a:	689f      	ldr	r7, [r3, #8]
 8004b4c:	4b2c      	ldr	r3, [pc, #176]	; (8004c00 <mtx6_execute+0xc0>)
 8004b4e:	4c2d      	ldr	r4, [pc, #180]	; (8004c04 <mtx6_execute+0xc4>)
 8004b50:	b083      	sub	sp, #12
 8004b52:	1c7a      	adds	r2, r7, #1
 8004b54:	9300      	str	r3, [sp, #0]
 8004b56:	4628      	mov	r0, r5
 8004b58:	4633      	mov	r3, r6
 8004b5a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b5e:	f7fc ff1f 	bl	80019a0 <chThdCreateStatic>
 8004b62:	4929      	ldr	r1, [pc, #164]	; (8004c08 <mtx6_execute+0xc8>)
 8004b64:	6020      	str	r0, [r4, #0]
 8004b66:	1cba      	adds	r2, r7, #2
 8004b68:	4633      	mov	r3, r6
 8004b6a:	9100      	str	r1, [sp, #0]
 8004b6c:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8004b70:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b74:	f7fc ff14 	bl	80019a0 <chThdCreateStatic>
 8004b78:	4924      	ldr	r1, [pc, #144]	; (8004c0c <mtx6_execute+0xcc>)
 8004b7a:	6060      	str	r0, [r4, #4]
 8004b7c:	1cfa      	adds	r2, r7, #3
 8004b7e:	4633      	mov	r3, r6
 8004b80:	9100      	str	r1, [sp, #0]
 8004b82:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8004b86:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b8a:	f7fc ff09 	bl	80019a0 <chThdCreateStatic>
 8004b8e:	4920      	ldr	r1, [pc, #128]	; (8004c10 <mtx6_execute+0xd0>)
 8004b90:	60a0      	str	r0, [r4, #8]
 8004b92:	1d3a      	adds	r2, r7, #4
 8004b94:	4633      	mov	r3, r6
 8004b96:	9100      	str	r1, [sp, #0]
 8004b98:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8004b9c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004ba0:	f7fc fefe 	bl	80019a0 <chThdCreateStatic>
 8004ba4:	491b      	ldr	r1, [pc, #108]	; (8004c14 <mtx6_execute+0xd4>)
 8004ba6:	60e0      	str	r0, [r4, #12]
 8004ba8:	4633      	mov	r3, r6
 8004baa:	9100      	str	r1, [sp, #0]
 8004bac:	1d7a      	adds	r2, r7, #5
 8004bae:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8004bb2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004bb6:	f7fc fef3 	bl	80019a0 <chThdCreateStatic>
 8004bba:	2320      	movs	r3, #32
 8004bbc:	6120      	str	r0, [r4, #16]
 8004bbe:	f383 8811 	msr	BASEPRI, r3
 8004bc2:	f7fc f8cd 	bl	8000d60 <chCondSignalI.constprop.43>
 8004bc6:	f7fc f8cb 	bl	8000d60 <chCondSignalI.constprop.43>
 8004bca:	f7fc f8c9 	bl	8000d60 <chCondSignalI.constprop.43>
 8004bce:	f7fc f8c7 	bl	8000d60 <chCondSignalI.constprop.43>
 8004bd2:	f7fc f8c5 	bl	8000d60 <chCondSignalI.constprop.43>
 8004bd6:	f7fc fcd3 	bl	8001580 <chSchRescheduleS>
 8004bda:	2300      	movs	r3, #0
 8004bdc:	f383 8811 	msr	BASEPRI, r3
 8004be0:	f7fe ffb6 	bl	8003b50 <test_wait_threads>
 8004be4:	490c      	ldr	r1, [pc, #48]	; (8004c18 <mtx6_execute+0xd8>)
 8004be6:	2001      	movs	r0, #1
 8004be8:	b003      	add	sp, #12
 8004bea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004bee:	f7fb bde7 	b.w	80007c0 <_test_assert_sequence>
 8004bf2:	bf00      	nop
 8004bf4:	20000938 	.word	0x20000938
 8004bf8:	08002fc1 	.word	0x08002fc1
 8004bfc:	20000b40 	.word	0x20000b40
 8004c00:	08006124 	.word	0x08006124
 8004c04:	200011d4 	.word	0x200011d4
 8004c08:	08005ed8 	.word	0x08005ed8
 8004c0c:	08005ed4 	.word	0x08005ed4
 8004c10:	08005ed0 	.word	0x08005ed0
 8004c14:	08005ee0 	.word	0x08005ee0
 8004c18:	08006120 	.word	0x08006120
 8004c1c:	00000000 	.word	0x00000000

08004c20 <mtx4_execute>:
 8004c20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004c24:	4d87      	ldr	r5, [pc, #540]	; (8004e44 <mtx4_execute+0x224>)
 8004c26:	4a88      	ldr	r2, [pc, #544]	; (8004e48 <mtx4_execute+0x228>)
 8004c28:	69a9      	ldr	r1, [r5, #24]
 8004c2a:	4b88      	ldr	r3, [pc, #544]	; (8004e4c <mtx4_execute+0x22c>)
 8004c2c:	688c      	ldr	r4, [r1, #8]
 8004c2e:	4888      	ldr	r0, [pc, #544]	; (8004e50 <mtx4_execute+0x230>)
 8004c30:	4e88      	ldr	r6, [pc, #544]	; (8004e54 <mtx4_execute+0x234>)
 8004c32:	b082      	sub	sp, #8
 8004c34:	1c67      	adds	r7, r4, #1
 8004c36:	9200      	str	r2, [sp, #0]
 8004c38:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004c3c:	463a      	mov	r2, r7
 8004c3e:	f7fc feaf 	bl	80019a0 <chThdCreateStatic>
 8004c42:	f104 0802 	add.w	r8, r4, #2
 8004c46:	4b84      	ldr	r3, [pc, #528]	; (8004e58 <mtx4_execute+0x238>)
 8004c48:	6030      	str	r0, [r6, #0]
 8004c4a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004c4e:	4642      	mov	r2, r8
 8004c50:	9300      	str	r3, [sp, #0]
 8004c52:	4882      	ldr	r0, [pc, #520]	; (8004e5c <mtx4_execute+0x23c>)
 8004c54:	4b82      	ldr	r3, [pc, #520]	; (8004e60 <mtx4_execute+0x240>)
 8004c56:	f7fc fea3 	bl	80019a0 <chThdCreateStatic>
 8004c5a:	6070      	str	r0, [r6, #4]
 8004c5c:	4881      	ldr	r0, [pc, #516]	; (8004e64 <mtx4_execute+0x244>)
 8004c5e:	f7fe f91f 	bl	8002ea0 <chMtxLock>
 8004c62:	69ab      	ldr	r3, [r5, #24]
 8004c64:	6899      	ldr	r1, [r3, #8]
 8004c66:	1b09      	subs	r1, r1, r4
 8004c68:	fab1 f181 	clz	r1, r1
 8004c6c:	2001      	movs	r0, #1
 8004c6e:	0949      	lsrs	r1, r1, #5
 8004c70:	f7fb fdce 	bl	8000810 <_test_assert>
 8004c74:	b110      	cbz	r0, 8004c7c <mtx4_execute+0x5c>
 8004c76:	b002      	add	sp, #8
 8004c78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004c7c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004c80:	f7fd fd56 	bl	8002730 <chThdSleep>
 8004c84:	69ab      	ldr	r3, [r5, #24]
 8004c86:	6899      	ldr	r1, [r3, #8]
 8004c88:	1bc9      	subs	r1, r1, r7
 8004c8a:	fab1 f181 	clz	r1, r1
 8004c8e:	2002      	movs	r0, #2
 8004c90:	0949      	lsrs	r1, r1, #5
 8004c92:	f7fb fdbd 	bl	8000810 <_test_assert>
 8004c96:	2800      	cmp	r0, #0
 8004c98:	d1ed      	bne.n	8004c76 <mtx4_execute+0x56>
 8004c9a:	4873      	ldr	r0, [pc, #460]	; (8004e68 <mtx4_execute+0x248>)
 8004c9c:	f7fe f900 	bl	8002ea0 <chMtxLock>
 8004ca0:	69ab      	ldr	r3, [r5, #24]
 8004ca2:	6899      	ldr	r1, [r3, #8]
 8004ca4:	1bc9      	subs	r1, r1, r7
 8004ca6:	fab1 f181 	clz	r1, r1
 8004caa:	2003      	movs	r0, #3
 8004cac:	0949      	lsrs	r1, r1, #5
 8004cae:	f7fb fdaf 	bl	8000810 <_test_assert>
 8004cb2:	2800      	cmp	r0, #0
 8004cb4:	d1df      	bne.n	8004c76 <mtx4_execute+0x56>
 8004cb6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004cba:	f7fd fd39 	bl	8002730 <chThdSleep>
 8004cbe:	69ab      	ldr	r3, [r5, #24]
 8004cc0:	6899      	ldr	r1, [r3, #8]
 8004cc2:	eba1 0108 	sub.w	r1, r1, r8
 8004cc6:	fab1 f181 	clz	r1, r1
 8004cca:	2004      	movs	r0, #4
 8004ccc:	0949      	lsrs	r1, r1, #5
 8004cce:	f7fb fd9f 	bl	8000810 <_test_assert>
 8004cd2:	2800      	cmp	r0, #0
 8004cd4:	d1cf      	bne.n	8004c76 <mtx4_execute+0x56>
 8004cd6:	4864      	ldr	r0, [pc, #400]	; (8004e68 <mtx4_execute+0x248>)
 8004cd8:	f7fc fe12 	bl	8001900 <chMtxUnlock>
 8004cdc:	69ab      	ldr	r3, [r5, #24]
 8004cde:	6899      	ldr	r1, [r3, #8]
 8004ce0:	1bc9      	subs	r1, r1, r7
 8004ce2:	fab1 f181 	clz	r1, r1
 8004ce6:	2005      	movs	r0, #5
 8004ce8:	0949      	lsrs	r1, r1, #5
 8004cea:	f7fb fd91 	bl	8000810 <_test_assert>
 8004cee:	2800      	cmp	r0, #0
 8004cf0:	d1c1      	bne.n	8004c76 <mtx4_execute+0x56>
 8004cf2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004cf6:	f7fd fd1b 	bl	8002730 <chThdSleep>
 8004cfa:	69ab      	ldr	r3, [r5, #24]
 8004cfc:	6899      	ldr	r1, [r3, #8]
 8004cfe:	1bc9      	subs	r1, r1, r7
 8004d00:	fab1 f181 	clz	r1, r1
 8004d04:	2006      	movs	r0, #6
 8004d06:	0949      	lsrs	r1, r1, #5
 8004d08:	f7fb fd82 	bl	8000810 <_test_assert>
 8004d0c:	2800      	cmp	r0, #0
 8004d0e:	d1b2      	bne.n	8004c76 <mtx4_execute+0x56>
 8004d10:	f7fc fc5e 	bl	80015d0 <chMtxUnlockAll>
 8004d14:	69ab      	ldr	r3, [r5, #24]
 8004d16:	6899      	ldr	r1, [r3, #8]
 8004d18:	1b09      	subs	r1, r1, r4
 8004d1a:	fab1 f181 	clz	r1, r1
 8004d1e:	2007      	movs	r0, #7
 8004d20:	0949      	lsrs	r1, r1, #5
 8004d22:	f7fb fd75 	bl	8000810 <_test_assert>
 8004d26:	2800      	cmp	r0, #0
 8004d28:	d1a5      	bne.n	8004c76 <mtx4_execute+0x56>
 8004d2a:	f7fe ff11 	bl	8003b50 <test_wait_threads>
 8004d2e:	4b4f      	ldr	r3, [pc, #316]	; (8004e6c <mtx4_execute+0x24c>)
 8004d30:	9300      	str	r3, [sp, #0]
 8004d32:	463a      	mov	r2, r7
 8004d34:	4b45      	ldr	r3, [pc, #276]	; (8004e4c <mtx4_execute+0x22c>)
 8004d36:	4846      	ldr	r0, [pc, #280]	; (8004e50 <mtx4_execute+0x230>)
 8004d38:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d3c:	f7fc fe30 	bl	80019a0 <chThdCreateStatic>
 8004d40:	4b4b      	ldr	r3, [pc, #300]	; (8004e70 <mtx4_execute+0x250>)
 8004d42:	6030      	str	r0, [r6, #0]
 8004d44:	4642      	mov	r2, r8
 8004d46:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d4a:	9300      	str	r3, [sp, #0]
 8004d4c:	4843      	ldr	r0, [pc, #268]	; (8004e5c <mtx4_execute+0x23c>)
 8004d4e:	4b44      	ldr	r3, [pc, #272]	; (8004e60 <mtx4_execute+0x240>)
 8004d50:	f7fc fe26 	bl	80019a0 <chThdCreateStatic>
 8004d54:	6070      	str	r0, [r6, #4]
 8004d56:	4843      	ldr	r0, [pc, #268]	; (8004e64 <mtx4_execute+0x244>)
 8004d58:	f7fe f8a2 	bl	8002ea0 <chMtxLock>
 8004d5c:	69ab      	ldr	r3, [r5, #24]
 8004d5e:	6899      	ldr	r1, [r3, #8]
 8004d60:	1b0a      	subs	r2, r1, r4
 8004d62:	4251      	negs	r1, r2
 8004d64:	4151      	adcs	r1, r2
 8004d66:	2008      	movs	r0, #8
 8004d68:	f7fb fd52 	bl	8000810 <_test_assert>
 8004d6c:	2800      	cmp	r0, #0
 8004d6e:	d182      	bne.n	8004c76 <mtx4_execute+0x56>
 8004d70:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004d74:	f7fd fcdc 	bl	8002730 <chThdSleep>
 8004d78:	69ab      	ldr	r3, [r5, #24]
 8004d7a:	6899      	ldr	r1, [r3, #8]
 8004d7c:	1bcb      	subs	r3, r1, r7
 8004d7e:	4259      	negs	r1, r3
 8004d80:	4159      	adcs	r1, r3
 8004d82:	2009      	movs	r0, #9
 8004d84:	f7fb fd44 	bl	8000810 <_test_assert>
 8004d88:	2800      	cmp	r0, #0
 8004d8a:	f47f af74 	bne.w	8004c76 <mtx4_execute+0x56>
 8004d8e:	4836      	ldr	r0, [pc, #216]	; (8004e68 <mtx4_execute+0x248>)
 8004d90:	f7fe f886 	bl	8002ea0 <chMtxLock>
 8004d94:	69ab      	ldr	r3, [r5, #24]
 8004d96:	6899      	ldr	r1, [r3, #8]
 8004d98:	eba1 0e07 	sub.w	lr, r1, r7
 8004d9c:	f1de 0100 	rsbs	r1, lr, #0
 8004da0:	eb41 010e 	adc.w	r1, r1, lr
 8004da4:	200a      	movs	r0, #10
 8004da6:	f7fb fd33 	bl	8000810 <_test_assert>
 8004daa:	2800      	cmp	r0, #0
 8004dac:	f47f af63 	bne.w	8004c76 <mtx4_execute+0x56>
 8004db0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004db4:	f7fd fcbc 	bl	8002730 <chThdSleep>
 8004db8:	69ab      	ldr	r3, [r5, #24]
 8004dba:	6899      	ldr	r1, [r3, #8]
 8004dbc:	eba1 0c08 	sub.w	ip, r1, r8
 8004dc0:	f1dc 0100 	rsbs	r1, ip, #0
 8004dc4:	eb41 010c 	adc.w	r1, r1, ip
 8004dc8:	200b      	movs	r0, #11
 8004dca:	f7fb fd21 	bl	8000810 <_test_assert>
 8004dce:	4606      	mov	r6, r0
 8004dd0:	2800      	cmp	r0, #0
 8004dd2:	f47f af50 	bne.w	8004c76 <mtx4_execute+0x56>
 8004dd6:	2320      	movs	r3, #32
 8004dd8:	f383 8811 	msr	BASEPRI, r3
 8004ddc:	4822      	ldr	r0, [pc, #136]	; (8004e68 <mtx4_execute+0x248>)
 8004dde:	f7fc f8ef 	bl	8000fc0 <chMtxUnlockS>
 8004de2:	f7fc fbcd 	bl	8001580 <chSchRescheduleS>
 8004de6:	f386 8811 	msr	BASEPRI, r6
 8004dea:	69ab      	ldr	r3, [r5, #24]
 8004dec:	6899      	ldr	r1, [r3, #8]
 8004dee:	1bce      	subs	r6, r1, r7
 8004df0:	4271      	negs	r1, r6
 8004df2:	4171      	adcs	r1, r6
 8004df4:	200c      	movs	r0, #12
 8004df6:	f7fb fd0b 	bl	8000810 <_test_assert>
 8004dfa:	2800      	cmp	r0, #0
 8004dfc:	f47f af3b 	bne.w	8004c76 <mtx4_execute+0x56>
 8004e00:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004e04:	f7fd fc94 	bl	8002730 <chThdSleep>
 8004e08:	69ab      	ldr	r3, [r5, #24]
 8004e0a:	6899      	ldr	r1, [r3, #8]
 8004e0c:	1bca      	subs	r2, r1, r7
 8004e0e:	4251      	negs	r1, r2
 8004e10:	4151      	adcs	r1, r2
 8004e12:	200d      	movs	r0, #13
 8004e14:	f7fb fcfc 	bl	8000810 <_test_assert>
 8004e18:	2800      	cmp	r0, #0
 8004e1a:	f47f af2c 	bne.w	8004c76 <mtx4_execute+0x56>
 8004e1e:	f7fc fbd7 	bl	80015d0 <chMtxUnlockAll>
 8004e22:	69ab      	ldr	r3, [r5, #24]
 8004e24:	6899      	ldr	r1, [r3, #8]
 8004e26:	1b0b      	subs	r3, r1, r4
 8004e28:	4259      	negs	r1, r3
 8004e2a:	4159      	adcs	r1, r3
 8004e2c:	200e      	movs	r0, #14
 8004e2e:	f7fb fcef 	bl	8000810 <_test_assert>
 8004e32:	2800      	cmp	r0, #0
 8004e34:	f47f af1f 	bne.w	8004c76 <mtx4_execute+0x56>
 8004e38:	b002      	add	sp, #8
 8004e3a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004e3e:	f7fe be87 	b.w	8003b50 <test_wait_threads>
 8004e42:	bf00      	nop
 8004e44:	20000938 	.word	0x20000938
 8004e48:	08005ed0 	.word	0x08005ed0
 8004e4c:	08003141 	.word	0x08003141
 8004e50:	20000b40 	.word	0x20000b40
 8004e54:	200011d4 	.word	0x200011d4
 8004e58:	08005ee0 	.word	0x08005ee0
 8004e5c:	20000c88 	.word	0x20000c88
 8004e60:	08003161 	.word	0x08003161
 8004e64:	20000844 	.word	0x20000844
 8004e68:	20000834 	.word	0x20000834
 8004e6c:	08005ed8 	.word	0x08005ed8
 8004e70:	08005ed4 	.word	0x08005ed4
	...

08004e80 <mtx1_execute>:
 8004e80:	b570      	push	{r4, r5, r6, lr}
 8004e82:	4e29      	ldr	r6, [pc, #164]	; (8004f28 <mtx1_execute+0xa8>)
 8004e84:	4829      	ldr	r0, [pc, #164]	; (8004f2c <mtx1_execute+0xac>)
 8004e86:	69b3      	ldr	r3, [r6, #24]
 8004e88:	4d29      	ldr	r5, [pc, #164]	; (8004f30 <mtx1_execute+0xb0>)
 8004e8a:	689c      	ldr	r4, [r3, #8]
 8004e8c:	b082      	sub	sp, #8
 8004e8e:	f7fe f807 	bl	8002ea0 <chMtxLock>
 8004e92:	4b28      	ldr	r3, [pc, #160]	; (8004f34 <mtx1_execute+0xb4>)
 8004e94:	9300      	str	r3, [sp, #0]
 8004e96:	1c62      	adds	r2, r4, #1
 8004e98:	4b27      	ldr	r3, [pc, #156]	; (8004f38 <mtx1_execute+0xb8>)
 8004e9a:	4828      	ldr	r0, [pc, #160]	; (8004f3c <mtx1_execute+0xbc>)
 8004e9c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004ea0:	f7fc fd7e 	bl	80019a0 <chThdCreateStatic>
 8004ea4:	4b26      	ldr	r3, [pc, #152]	; (8004f40 <mtx1_execute+0xc0>)
 8004ea6:	6028      	str	r0, [r5, #0]
 8004ea8:	1ca2      	adds	r2, r4, #2
 8004eaa:	9300      	str	r3, [sp, #0]
 8004eac:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004eb0:	4b21      	ldr	r3, [pc, #132]	; (8004f38 <mtx1_execute+0xb8>)
 8004eb2:	4824      	ldr	r0, [pc, #144]	; (8004f44 <mtx1_execute+0xc4>)
 8004eb4:	f7fc fd74 	bl	80019a0 <chThdCreateStatic>
 8004eb8:	4b23      	ldr	r3, [pc, #140]	; (8004f48 <mtx1_execute+0xc8>)
 8004eba:	6068      	str	r0, [r5, #4]
 8004ebc:	1ce2      	adds	r2, r4, #3
 8004ebe:	9300      	str	r3, [sp, #0]
 8004ec0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004ec4:	4b1c      	ldr	r3, [pc, #112]	; (8004f38 <mtx1_execute+0xb8>)
 8004ec6:	4821      	ldr	r0, [pc, #132]	; (8004f4c <mtx1_execute+0xcc>)
 8004ec8:	f7fc fd6a 	bl	80019a0 <chThdCreateStatic>
 8004ecc:	4b20      	ldr	r3, [pc, #128]	; (8004f50 <mtx1_execute+0xd0>)
 8004ece:	60a8      	str	r0, [r5, #8]
 8004ed0:	1d22      	adds	r2, r4, #4
 8004ed2:	9300      	str	r3, [sp, #0]
 8004ed4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004ed8:	4b17      	ldr	r3, [pc, #92]	; (8004f38 <mtx1_execute+0xb8>)
 8004eda:	481e      	ldr	r0, [pc, #120]	; (8004f54 <mtx1_execute+0xd4>)
 8004edc:	f7fc fd60 	bl	80019a0 <chThdCreateStatic>
 8004ee0:	4b1d      	ldr	r3, [pc, #116]	; (8004f58 <mtx1_execute+0xd8>)
 8004ee2:	60e8      	str	r0, [r5, #12]
 8004ee4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004ee8:	1d62      	adds	r2, r4, #5
 8004eea:	9300      	str	r3, [sp, #0]
 8004eec:	481b      	ldr	r0, [pc, #108]	; (8004f5c <mtx1_execute+0xdc>)
 8004eee:	4b12      	ldr	r3, [pc, #72]	; (8004f38 <mtx1_execute+0xb8>)
 8004ef0:	f7fc fd56 	bl	80019a0 <chThdCreateStatic>
 8004ef4:	6128      	str	r0, [r5, #16]
 8004ef6:	480d      	ldr	r0, [pc, #52]	; (8004f2c <mtx1_execute+0xac>)
 8004ef8:	f7fc fd02 	bl	8001900 <chMtxUnlock>
 8004efc:	f7fe fe28 	bl	8003b50 <test_wait_threads>
 8004f00:	69b3      	ldr	r3, [r6, #24]
 8004f02:	6899      	ldr	r1, [r3, #8]
 8004f04:	1b09      	subs	r1, r1, r4
 8004f06:	fab1 f181 	clz	r1, r1
 8004f0a:	2001      	movs	r0, #1
 8004f0c:	0949      	lsrs	r1, r1, #5
 8004f0e:	f7fb fc7f 	bl	8000810 <_test_assert>
 8004f12:	b108      	cbz	r0, 8004f18 <mtx1_execute+0x98>
 8004f14:	b002      	add	sp, #8
 8004f16:	bd70      	pop	{r4, r5, r6, pc}
 8004f18:	4911      	ldr	r1, [pc, #68]	; (8004f60 <mtx1_execute+0xe0>)
 8004f1a:	2002      	movs	r0, #2
 8004f1c:	b002      	add	sp, #8
 8004f1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004f22:	f7fb bc4d 	b.w	80007c0 <_test_assert_sequence>
 8004f26:	bf00      	nop
 8004f28:	20000938 	.word	0x20000938
 8004f2c:	20000834 	.word	0x20000834
 8004f30:	200011d4 	.word	0x200011d4
 8004f34:	08006124 	.word	0x08006124
 8004f38:	08003181 	.word	0x08003181
 8004f3c:	20000b40 	.word	0x20000b40
 8004f40:	08005ed8 	.word	0x08005ed8
 8004f44:	20000c88 	.word	0x20000c88
 8004f48:	08005ed4 	.word	0x08005ed4
 8004f4c:	20000dd0 	.word	0x20000dd0
 8004f50:	08005ed0 	.word	0x08005ed0
 8004f54:	20000f18 	.word	0x20000f18
 8004f58:	08005ee0 	.word	0x08005ee0
 8004f5c:	20001060 	.word	0x20001060
 8004f60:	08006120 	.word	0x08006120
	...

08004f70 <sem2_execute>:
 8004f70:	b570      	push	{r4, r5, r6, lr}
 8004f72:	2320      	movs	r3, #32
 8004f74:	b082      	sub	sp, #8
 8004f76:	f383 8811 	msr	BASEPRI, r3
 8004f7a:	4c4b      	ldr	r4, [pc, #300]	; (80050a8 <sem2_execute+0x138>)
 8004f7c:	68a3      	ldr	r3, [r4, #8]
 8004f7e:	3b01      	subs	r3, #1
 8004f80:	bf5a      	itte	pl
 8004f82:	60a3      	strpl	r3, [r4, #8]
 8004f84:	2100      	movpl	r1, #0
 8004f86:	2101      	movmi	r1, #1
 8004f88:	2300      	movs	r3, #0
 8004f8a:	f383 8811 	msr	BASEPRI, r3
 8004f8e:	2001      	movs	r0, #1
 8004f90:	f7fb fc3e 	bl	8000810 <_test_assert>
 8004f94:	b108      	cbz	r0, 8004f9a <sem2_execute+0x2a>
 8004f96:	b002      	add	sp, #8
 8004f98:	bd70      	pop	{r4, r5, r6, pc}
 8004f9a:	6821      	ldr	r1, [r4, #0]
 8004f9c:	1b09      	subs	r1, r1, r4
 8004f9e:	fab1 f181 	clz	r1, r1
 8004fa2:	2002      	movs	r0, #2
 8004fa4:	0949      	lsrs	r1, r1, #5
 8004fa6:	f7fb fc33 	bl	8000810 <_test_assert>
 8004faa:	2800      	cmp	r0, #0
 8004fac:	d1f3      	bne.n	8004f96 <sem2_execute+0x26>
 8004fae:	68a1      	ldr	r1, [r4, #8]
 8004fb0:	fab1 f181 	clz	r1, r1
 8004fb4:	0949      	lsrs	r1, r1, #5
 8004fb6:	2003      	movs	r0, #3
 8004fb8:	f7fb fc2a 	bl	8000810 <_test_assert>
 8004fbc:	4601      	mov	r1, r0
 8004fbe:	2800      	cmp	r0, #0
 8004fc0:	d1e9      	bne.n	8004f96 <sem2_execute+0x26>
 8004fc2:	4a3a      	ldr	r2, [pc, #232]	; (80050ac <sem2_execute+0x13c>)
 8004fc4:	4b3a      	ldr	r3, [pc, #232]	; (80050b0 <sem2_execute+0x140>)
 8004fc6:	6992      	ldr	r2, [r2, #24]
 8004fc8:	483a      	ldr	r0, [pc, #232]	; (80050b4 <sem2_execute+0x144>)
 8004fca:	6892      	ldr	r2, [r2, #8]
 8004fcc:	9100      	str	r1, [sp, #0]
 8004fce:	3a01      	subs	r2, #1
 8004fd0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fd4:	f7fc fce4 	bl	80019a0 <chThdCreateStatic>
 8004fd8:	4b37      	ldr	r3, [pc, #220]	; (80050b8 <sem2_execute+0x148>)
 8004fda:	6018      	str	r0, [r3, #0]
 8004fdc:	f241 3088 	movw	r0, #5000	; 0x1388
 8004fe0:	f7fc fe26 	bl	8001c30 <chSemWaitTimeout.constprop.50>
 8004fe4:	4605      	mov	r5, r0
 8004fe6:	f7fe fdb3 	bl	8003b50 <test_wait_threads>
 8004fea:	fab5 f185 	clz	r1, r5
 8004fee:	0949      	lsrs	r1, r1, #5
 8004ff0:	2004      	movs	r0, #4
 8004ff2:	f7fb fc0d 	bl	8000810 <_test_assert>
 8004ff6:	2800      	cmp	r0, #0
 8004ff8:	d1cd      	bne.n	8004f96 <sem2_execute+0x26>
 8004ffa:	6821      	ldr	r1, [r4, #0]
 8004ffc:	1b09      	subs	r1, r1, r4
 8004ffe:	fab1 f181 	clz	r1, r1
 8005002:	2005      	movs	r0, #5
 8005004:	0949      	lsrs	r1, r1, #5
 8005006:	f7fb fc03 	bl	8000810 <_test_assert>
 800500a:	2800      	cmp	r0, #0
 800500c:	d1c3      	bne.n	8004f96 <sem2_execute+0x26>
 800500e:	68a1      	ldr	r1, [r4, #8]
 8005010:	fab1 f181 	clz	r1, r1
 8005014:	0949      	lsrs	r1, r1, #5
 8005016:	2006      	movs	r0, #6
 8005018:	f7fb fbfa 	bl	8000810 <_test_assert>
 800501c:	4605      	mov	r5, r0
 800501e:	2800      	cmp	r0, #0
 8005020:	d1b9      	bne.n	8004f96 <sem2_execute+0x26>
 8005022:	f7fd fcc5 	bl	80029b0 <test_wait_tick>
 8005026:	2320      	movs	r3, #32
 8005028:	f383 8811 	msr	BASEPRI, r3
 800502c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8005030:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 8005032:	f385 8811 	msr	BASEPRI, r5
 8005036:	2541      	movs	r5, #65	; 0x41
 8005038:	4628      	mov	r0, r5
 800503a:	f7fb fc01 	bl	8000840 <test_emit_token>
 800503e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8005042:	f7fc fdf5 	bl	8001c30 <chSemWaitTimeout.constprop.50>
 8005046:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 800504a:	fab1 f181 	clz	r1, r1
 800504e:	0949      	lsrs	r1, r1, #5
 8005050:	2007      	movs	r0, #7
 8005052:	f7fb fbdd 	bl	8000810 <_test_assert>
 8005056:	2800      	cmp	r0, #0
 8005058:	d19d      	bne.n	8004f96 <sem2_execute+0x26>
 800505a:	6821      	ldr	r1, [r4, #0]
 800505c:	1b09      	subs	r1, r1, r4
 800505e:	fab1 f181 	clz	r1, r1
 8005062:	2008      	movs	r0, #8
 8005064:	0949      	lsrs	r1, r1, #5
 8005066:	f7fb fbd3 	bl	8000810 <_test_assert>
 800506a:	2800      	cmp	r0, #0
 800506c:	d193      	bne.n	8004f96 <sem2_execute+0x26>
 800506e:	68a1      	ldr	r1, [r4, #8]
 8005070:	fab1 f181 	clz	r1, r1
 8005074:	0949      	lsrs	r1, r1, #5
 8005076:	2009      	movs	r0, #9
 8005078:	f7fb fbca 	bl	8000810 <_test_assert>
 800507c:	3501      	adds	r5, #1
 800507e:	b2ed      	uxtb	r5, r5
 8005080:	2800      	cmp	r0, #0
 8005082:	d188      	bne.n	8004f96 <sem2_execute+0x26>
 8005084:	2d46      	cmp	r5, #70	; 0x46
 8005086:	d1d7      	bne.n	8005038 <sem2_execute+0xc8>
 8005088:	490c      	ldr	r1, [pc, #48]	; (80050bc <sem2_execute+0x14c>)
 800508a:	200a      	movs	r0, #10
 800508c:	f7fb fb98 	bl	80007c0 <_test_assert_sequence>
 8005090:	2800      	cmp	r0, #0
 8005092:	d180      	bne.n	8004f96 <sem2_execute+0x26>
 8005094:	f606 12d8 	addw	r2, r6, #2520	; 0x9d8
 8005098:	f606 11c4 	addw	r1, r6, #2500	; 0x9c4
 800509c:	200b      	movs	r0, #11
 800509e:	b002      	add	sp, #8
 80050a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80050a4:	f7fb bb6c 	b.w	8000780 <_test_assert_time_window>
 80050a8:	200008ac 	.word	0x200008ac
 80050ac:	20000938 	.word	0x20000938
 80050b0:	08002981 	.word	0x08002981
 80050b4:	20000b40 	.word	0x20000b40
 80050b8:	200011d4 	.word	0x200011d4
 80050bc:	08006120 	.word	0x08006120

080050c0 <sem1_execute>:
 80050c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80050c2:	4d4b      	ldr	r5, [pc, #300]	; (80051f0 <sem1_execute+0x130>)
 80050c4:	4f4b      	ldr	r7, [pc, #300]	; (80051f4 <sem1_execute+0x134>)
 80050c6:	69aa      	ldr	r2, [r5, #24]
 80050c8:	4b4b      	ldr	r3, [pc, #300]	; (80051f8 <sem1_execute+0x138>)
 80050ca:	6892      	ldr	r2, [r2, #8]
 80050cc:	484b      	ldr	r0, [pc, #300]	; (80051fc <sem1_execute+0x13c>)
 80050ce:	4c4c      	ldr	r4, [pc, #304]	; (8005200 <sem1_execute+0x140>)
 80050d0:	b083      	sub	sp, #12
 80050d2:	3205      	adds	r2, #5
 80050d4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80050d8:	9700      	str	r7, [sp, #0]
 80050da:	f7fc fc61 	bl	80019a0 <chThdCreateStatic>
 80050de:	69ab      	ldr	r3, [r5, #24]
 80050e0:	689a      	ldr	r2, [r3, #8]
 80050e2:	4b48      	ldr	r3, [pc, #288]	; (8005204 <sem1_execute+0x144>)
 80050e4:	6020      	str	r0, [r4, #0]
 80050e6:	3201      	adds	r2, #1
 80050e8:	9300      	str	r3, [sp, #0]
 80050ea:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80050ee:	4b42      	ldr	r3, [pc, #264]	; (80051f8 <sem1_execute+0x138>)
 80050f0:	4845      	ldr	r0, [pc, #276]	; (8005208 <sem1_execute+0x148>)
 80050f2:	f7fc fc55 	bl	80019a0 <chThdCreateStatic>
 80050f6:	69aa      	ldr	r2, [r5, #24]
 80050f8:	4b44      	ldr	r3, [pc, #272]	; (800520c <sem1_execute+0x14c>)
 80050fa:	6892      	ldr	r2, [r2, #8]
 80050fc:	6060      	str	r0, [r4, #4]
 80050fe:	3203      	adds	r2, #3
 8005100:	9300      	str	r3, [sp, #0]
 8005102:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005106:	4b3c      	ldr	r3, [pc, #240]	; (80051f8 <sem1_execute+0x138>)
 8005108:	4841      	ldr	r0, [pc, #260]	; (8005210 <sem1_execute+0x150>)
 800510a:	f7fc fc49 	bl	80019a0 <chThdCreateStatic>
 800510e:	69aa      	ldr	r2, [r5, #24]
 8005110:	4b40      	ldr	r3, [pc, #256]	; (8005214 <sem1_execute+0x154>)
 8005112:	6892      	ldr	r2, [r2, #8]
 8005114:	60a0      	str	r0, [r4, #8]
 8005116:	3204      	adds	r2, #4
 8005118:	9300      	str	r3, [sp, #0]
 800511a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800511e:	4b36      	ldr	r3, [pc, #216]	; (80051f8 <sem1_execute+0x138>)
 8005120:	483d      	ldr	r0, [pc, #244]	; (8005218 <sem1_execute+0x158>)
 8005122:	f7fc fc3d 	bl	80019a0 <chThdCreateStatic>
 8005126:	69aa      	ldr	r2, [r5, #24]
 8005128:	4b3c      	ldr	r3, [pc, #240]	; (800521c <sem1_execute+0x15c>)
 800512a:	6892      	ldr	r2, [r2, #8]
 800512c:	60e0      	str	r0, [r4, #12]
 800512e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005132:	3202      	adds	r2, #2
 8005134:	9300      	str	r3, [sp, #0]
 8005136:	483a      	ldr	r0, [pc, #232]	; (8005220 <sem1_execute+0x160>)
 8005138:	4b2f      	ldr	r3, [pc, #188]	; (80051f8 <sem1_execute+0x138>)
 800513a:	f7fc fc31 	bl	80019a0 <chThdCreateStatic>
 800513e:	6120      	str	r0, [r4, #16]
 8005140:	4838      	ldr	r0, [pc, #224]	; (8005224 <sem1_execute+0x164>)
 8005142:	f7fc fc0d 	bl	8001960 <chSemSignal>
 8005146:	4837      	ldr	r0, [pc, #220]	; (8005224 <sem1_execute+0x164>)
 8005148:	f7fc fc0a 	bl	8001960 <chSemSignal>
 800514c:	4835      	ldr	r0, [pc, #212]	; (8005224 <sem1_execute+0x164>)
 800514e:	f7fc fc07 	bl	8001960 <chSemSignal>
 8005152:	4834      	ldr	r0, [pc, #208]	; (8005224 <sem1_execute+0x164>)
 8005154:	f7fc fc04 	bl	8001960 <chSemSignal>
 8005158:	4832      	ldr	r0, [pc, #200]	; (8005224 <sem1_execute+0x164>)
 800515a:	f7fc fc01 	bl	8001960 <chSemSignal>
 800515e:	f7fe fcf7 	bl	8003b50 <test_wait_threads>
 8005162:	4931      	ldr	r1, [pc, #196]	; (8005228 <sem1_execute+0x168>)
 8005164:	2001      	movs	r0, #1
 8005166:	f7fb fb2b 	bl	80007c0 <_test_assert_sequence>
 800516a:	b108      	cbz	r0, 8005170 <sem1_execute+0xb0>
 800516c:	b003      	add	sp, #12
 800516e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005170:	69aa      	ldr	r2, [r5, #24]
 8005172:	4b21      	ldr	r3, [pc, #132]	; (80051f8 <sem1_execute+0x138>)
 8005174:	6892      	ldr	r2, [r2, #8]
 8005176:	9700      	str	r7, [sp, #0]
 8005178:	4606      	mov	r6, r0
 800517a:	3205      	adds	r2, #5
 800517c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005180:	481e      	ldr	r0, [pc, #120]	; (80051fc <sem1_execute+0x13c>)
 8005182:	f7fc fc0d 	bl	80019a0 <chThdCreateStatic>
 8005186:	2320      	movs	r3, #32
 8005188:	6020      	str	r0, [r4, #0]
 800518a:	f383 8811 	msr	BASEPRI, r3
 800518e:	2502      	movs	r5, #2
 8005190:	4c24      	ldr	r4, [pc, #144]	; (8005224 <sem1_execute+0x164>)
 8005192:	e002      	b.n	800519a <sem1_execute+0xda>
 8005194:	2d01      	cmp	r5, #1
 8005196:	d00e      	beq.n	80051b6 <sem1_execute+0xf6>
 8005198:	2501      	movs	r5, #1
 800519a:	68a3      	ldr	r3, [r4, #8]
 800519c:	3301      	adds	r3, #1
 800519e:	2b00      	cmp	r3, #0
 80051a0:	60a3      	str	r3, [r4, #8]
 80051a2:	dcf7      	bgt.n	8005194 <sem1_execute+0xd4>
 80051a4:	6820      	ldr	r0, [r4, #0]
 80051a6:	6803      	ldr	r3, [r0, #0]
 80051a8:	6023      	str	r3, [r4, #0]
 80051aa:	605c      	str	r4, [r3, #4]
 80051ac:	f7fb fdc0 	bl	8000d30 <chSchReadyI>
 80051b0:	2d01      	cmp	r5, #1
 80051b2:	6206      	str	r6, [r0, #32]
 80051b4:	d1f0      	bne.n	8005198 <sem1_execute+0xd8>
 80051b6:	f7fc f9e3 	bl	8001580 <chSchRescheduleS>
 80051ba:	2500      	movs	r5, #0
 80051bc:	f385 8811 	msr	BASEPRI, r5
 80051c0:	f7fe fcc6 	bl	8003b50 <test_wait_threads>
 80051c4:	2320      	movs	r3, #32
 80051c6:	f383 8811 	msr	BASEPRI, r3
 80051ca:	68a1      	ldr	r1, [r4, #8]
 80051cc:	f1a1 0101 	sub.w	r1, r1, #1
 80051d0:	fab1 f181 	clz	r1, r1
 80051d4:	2002      	movs	r0, #2
 80051d6:	0949      	lsrs	r1, r1, #5
 80051d8:	f7fb fb1a 	bl	8000810 <_test_assert>
 80051dc:	b918      	cbnz	r0, 80051e6 <sem1_execute+0x126>
 80051de:	f380 8811 	msr	BASEPRI, r0
 80051e2:	b003      	add	sp, #12
 80051e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80051e6:	f385 8811 	msr	BASEPRI, r5
 80051ea:	b003      	add	sp, #12
 80051ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80051ee:	bf00      	nop
 80051f0:	20000938 	.word	0x20000938
 80051f4:	08005ee0 	.word	0x08005ee0
 80051f8:	08003a71 	.word	0x08003a71
 80051fc:	20000b40 	.word	0x20000b40
 8005200:	200011d4 	.word	0x200011d4
 8005204:	08005ed0 	.word	0x08005ed0
 8005208:	20000c88 	.word	0x20000c88
 800520c:	08005ed4 	.word	0x08005ed4
 8005210:	20000dd0 	.word	0x20000dd0
 8005214:	08005ed8 	.word	0x08005ed8
 8005218:	20000f18 	.word	0x20000f18
 800521c:	08006124 	.word	0x08006124
 8005220:	20001060 	.word	0x20001060
 8005224:	200008ac 	.word	0x200008ac
 8005228:	08006120 	.word	0x08006120
 800522c:	00000000 	.word	0x00000000

08005230 <thd2_execute>:
 8005230:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005234:	4d41      	ldr	r5, [pc, #260]	; (800533c <thd2_execute+0x10c>)
 8005236:	4f42      	ldr	r7, [pc, #264]	; (8005340 <thd2_execute+0x110>)
 8005238:	69ab      	ldr	r3, [r5, #24]
 800523a:	4c42      	ldr	r4, [pc, #264]	; (8005344 <thd2_execute+0x114>)
 800523c:	689a      	ldr	r2, [r3, #8]
 800523e:	4b42      	ldr	r3, [pc, #264]	; (8005348 <thd2_execute+0x118>)
 8005240:	4e42      	ldr	r6, [pc, #264]	; (800534c <thd2_execute+0x11c>)
 8005242:	b082      	sub	sp, #8
 8005244:	3a04      	subs	r2, #4
 8005246:	9300      	str	r3, [sp, #0]
 8005248:	f504 70a4 	add.w	r0, r4, #328	; 0x148
 800524c:	463b      	mov	r3, r7
 800524e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005252:	f7fc fba5 	bl	80019a0 <chThdCreateStatic>
 8005256:	69ab      	ldr	r3, [r5, #24]
 8005258:	493d      	ldr	r1, [pc, #244]	; (8005350 <thd2_execute+0x120>)
 800525a:	689a      	ldr	r2, [r3, #8]
 800525c:	6070      	str	r0, [r6, #4]
 800525e:	463b      	mov	r3, r7
 8005260:	9100      	str	r1, [sp, #0]
 8005262:	3a05      	subs	r2, #5
 8005264:	4620      	mov	r0, r4
 8005266:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800526a:	f7fc fb99 	bl	80019a0 <chThdCreateStatic>
 800526e:	69ab      	ldr	r3, [r5, #24]
 8005270:	4938      	ldr	r1, [pc, #224]	; (8005354 <thd2_execute+0x124>)
 8005272:	689a      	ldr	r2, [r3, #8]
 8005274:	6030      	str	r0, [r6, #0]
 8005276:	463b      	mov	r3, r7
 8005278:	9100      	str	r1, [sp, #0]
 800527a:	3a01      	subs	r2, #1
 800527c:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8005280:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005284:	f7fc fb8c 	bl	80019a0 <chThdCreateStatic>
 8005288:	69ab      	ldr	r3, [r5, #24]
 800528a:	4933      	ldr	r1, [pc, #204]	; (8005358 <thd2_execute+0x128>)
 800528c:	689a      	ldr	r2, [r3, #8]
 800528e:	6130      	str	r0, [r6, #16]
 8005290:	9100      	str	r1, [sp, #0]
 8005292:	3a02      	subs	r2, #2
 8005294:	463b      	mov	r3, r7
 8005296:	f504 7076 	add.w	r0, r4, #984	; 0x3d8
 800529a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800529e:	f7fc fb7f 	bl	80019a0 <chThdCreateStatic>
 80052a2:	2220      	movs	r2, #32
 80052a4:	60f0      	str	r0, [r6, #12]
 80052a6:	f382 8811 	msr	BASEPRI, r2
 80052aa:	e9d5 1305 	ldrd	r1, r3, [r5, #20]
 80052ae:	689b      	ldr	r3, [r3, #8]
 80052b0:	f8c4 73b4 	str.w	r7, [r4, #948]	; 0x3b4
 80052b4:	3b03      	subs	r3, #3
 80052b6:	f504 776d 	add.w	r7, r4, #948	; 0x3b4
 80052ba:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 80052be:	f8c4 32cc 	str.w	r3, [r4, #716]	; 0x2cc
 80052c2:	f8c4 729c 	str.w	r7, [r4, #668]	; 0x29c
 80052c6:	f504 7324 	add.w	r3, r4, #656	; 0x290
 80052ca:	2700      	movs	r7, #0
 80052cc:	f8df e090 	ldr.w	lr, [pc, #144]	; 8005360 <thd2_execute+0x130>
 80052d0:	f8df c090 	ldr.w	ip, [pc, #144]	; 8005364 <thd2_execute+0x134>
 80052d4:	f8c4 12a4 	str.w	r1, [r4, #676]	; 0x2a4
 80052d8:	2002      	movs	r0, #2
 80052da:	f04f 0801 	mov.w	r8, #1
 80052de:	f8a4 02ac 	strh.w	r0, [r4, #684]	; 0x2ac
 80052e2:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
 80052e6:	f8c4 e3b8 	str.w	lr, [r4, #952]	; 0x3b8
 80052ea:	f8c4 c3d4 	str.w	ip, [r4, #980]	; 0x3d4
 80052ee:	f504 702d 	add.w	r0, r4, #692	; 0x2b4
 80052f2:	f8c4 72c8 	str.w	r7, [r4, #712]	; 0x2c8
 80052f6:	f8c4 72c4 	str.w	r7, [r4, #708]	; 0x2c4
 80052fa:	f8c4 72a8 	str.w	r7, [r4, #680]	; 0x2a8
 80052fe:	f884 82ae 	strb.w	r8, [r4, #686]	; 0x2ae
 8005302:	610b      	str	r3, [r1, #16]
 8005304:	f504 712e 	add.w	r1, r4, #696	; 0x2b8
 8005308:	616b      	str	r3, [r5, #20]
 800530a:	60b3      	str	r3, [r6, #8]
 800530c:	f8c4 02b4 	str.w	r0, [r4, #692]	; 0x2b4
 8005310:	f8c4 12b8 	str.w	r1, [r4, #696]	; 0x2b8
 8005314:	f8c4 12bc 	str.w	r1, [r4, #700]	; 0x2bc
 8005318:	f387 8811 	msr	BASEPRI, r7
 800531c:	68b0      	ldr	r0, [r6, #8]
 800531e:	f382 8811 	msr	BASEPRI, r2
 8005322:	f7fb fd05 	bl	8000d30 <chSchReadyI>
 8005326:	f387 8811 	msr	BASEPRI, r7
 800532a:	f7fe fc11 	bl	8003b50 <test_wait_threads>
 800532e:	490b      	ldr	r1, [pc, #44]	; (800535c <thd2_execute+0x12c>)
 8005330:	4640      	mov	r0, r8
 8005332:	b002      	add	sp, #8
 8005334:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005338:	f7fb ba42 	b.w	80007c0 <_test_assert_sequence>
 800533c:	20000938 	.word	0x20000938
 8005340:	08000891 	.word	0x08000891
 8005344:	20000b40 	.word	0x20000b40
 8005348:	08005ed8 	.word	0x08005ed8
 800534c:	200011d4 	.word	0x200011d4
 8005350:	08006124 	.word	0x08006124
 8005354:	08005ee0 	.word	0x08005ee0
 8005358:	08005ed0 	.word	0x08005ed0
 800535c:	08006120 	.word	0x08006120
 8005360:	08005ed4 	.word	0x08005ed4
 8005364:	08000271 	.word	0x08000271
	...

08005370 <thd1_execute>:
 8005370:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005372:	4f27      	ldr	r7, [pc, #156]	; (8005410 <thd1_execute+0xa0>)
 8005374:	4e27      	ldr	r6, [pc, #156]	; (8005414 <thd1_execute+0xa4>)
 8005376:	69bb      	ldr	r3, [r7, #24]
 8005378:	4d27      	ldr	r5, [pc, #156]	; (8005418 <thd1_execute+0xa8>)
 800537a:	689a      	ldr	r2, [r3, #8]
 800537c:	4b27      	ldr	r3, [pc, #156]	; (800541c <thd1_execute+0xac>)
 800537e:	4c28      	ldr	r4, [pc, #160]	; (8005420 <thd1_execute+0xb0>)
 8005380:	b083      	sub	sp, #12
 8005382:	3a05      	subs	r2, #5
 8005384:	9300      	str	r3, [sp, #0]
 8005386:	4628      	mov	r0, r5
 8005388:	4633      	mov	r3, r6
 800538a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800538e:	f7fc fb07 	bl	80019a0 <chThdCreateStatic>
 8005392:	69bb      	ldr	r3, [r7, #24]
 8005394:	4923      	ldr	r1, [pc, #140]	; (8005424 <thd1_execute+0xb4>)
 8005396:	689a      	ldr	r2, [r3, #8]
 8005398:	6020      	str	r0, [r4, #0]
 800539a:	4633      	mov	r3, r6
 800539c:	9100      	str	r1, [sp, #0]
 800539e:	3a04      	subs	r2, #4
 80053a0:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 80053a4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80053a8:	f7fc fafa 	bl	80019a0 <chThdCreateStatic>
 80053ac:	69bb      	ldr	r3, [r7, #24]
 80053ae:	491e      	ldr	r1, [pc, #120]	; (8005428 <thd1_execute+0xb8>)
 80053b0:	689a      	ldr	r2, [r3, #8]
 80053b2:	6060      	str	r0, [r4, #4]
 80053b4:	4633      	mov	r3, r6
 80053b6:	9100      	str	r1, [sp, #0]
 80053b8:	3a03      	subs	r2, #3
 80053ba:	f505 7024 	add.w	r0, r5, #656	; 0x290
 80053be:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80053c2:	f7fc faed 	bl	80019a0 <chThdCreateStatic>
 80053c6:	69bb      	ldr	r3, [r7, #24]
 80053c8:	4918      	ldr	r1, [pc, #96]	; (800542c <thd1_execute+0xbc>)
 80053ca:	689a      	ldr	r2, [r3, #8]
 80053cc:	60a0      	str	r0, [r4, #8]
 80053ce:	4633      	mov	r3, r6
 80053d0:	9100      	str	r1, [sp, #0]
 80053d2:	3a02      	subs	r2, #2
 80053d4:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 80053d8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80053dc:	f7fc fae0 	bl	80019a0 <chThdCreateStatic>
 80053e0:	69bb      	ldr	r3, [r7, #24]
 80053e2:	4913      	ldr	r1, [pc, #76]	; (8005430 <thd1_execute+0xc0>)
 80053e4:	689a      	ldr	r2, [r3, #8]
 80053e6:	60e0      	str	r0, [r4, #12]
 80053e8:	3a01      	subs	r2, #1
 80053ea:	4633      	mov	r3, r6
 80053ec:	9100      	str	r1, [sp, #0]
 80053ee:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 80053f2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80053f6:	f7fc fad3 	bl	80019a0 <chThdCreateStatic>
 80053fa:	6120      	str	r0, [r4, #16]
 80053fc:	f7fe fba8 	bl	8003b50 <test_wait_threads>
 8005400:	490c      	ldr	r1, [pc, #48]	; (8005434 <thd1_execute+0xc4>)
 8005402:	2001      	movs	r0, #1
 8005404:	b003      	add	sp, #12
 8005406:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800540a:	f7fb b9d9 	b.w	80007c0 <_test_assert_sequence>
 800540e:	bf00      	nop
 8005410:	20000938 	.word	0x20000938
 8005414:	08000891 	.word	0x08000891
 8005418:	20000b40 	.word	0x20000b40
 800541c:	08006124 	.word	0x08006124
 8005420:	200011d4 	.word	0x200011d4
 8005424:	08005ed8 	.word	0x08005ed8
 8005428:	08005ed4 	.word	0x08005ed4
 800542c:	08005ed0 	.word	0x08005ed0
 8005430:	08005ee0 	.word	0x08005ee0
 8005434:	08006120 	.word	0x08006120
	...

08005440 <main>:
 8005440:	4bc1      	ldr	r3, [pc, #772]	; (8005748 <main+0x308>)
 8005442:	48c2      	ldr	r0, [pc, #776]	; (800574c <main+0x30c>)
 8005444:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005446:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800544a:	2200      	movs	r2, #0
 800544c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8005450:	6299      	str	r1, [r3, #40]	; 0x28
 8005452:	629a      	str	r2, [r3, #40]	; 0x28
 8005454:	691c      	ldr	r4, [r3, #16]
 8005456:	6119      	str	r1, [r3, #16]
 8005458:	611a      	str	r2, [r3, #16]
 800545a:	68dc      	ldr	r4, [r3, #12]
 800545c:	60d9      	str	r1, [r3, #12]
 800545e:	60da      	str	r2, [r3, #12]
 8005460:	69d9      	ldr	r1, [r3, #28]
 8005462:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8005466:	61d9      	str	r1, [r3, #28]
 8005468:	6801      	ldr	r1, [r0, #0]
 800546a:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 800546e:	6001      	str	r1, [r0, #0]
 8005470:	6a19      	ldr	r1, [r3, #32]
 8005472:	f401 7140 	and.w	r1, r1, #768	; 0x300
 8005476:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800547a:	b08d      	sub	sp, #52	; 0x34
 800547c:	d003      	beq.n	8005486 <main+0x46>
 800547e:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 8005482:	6219      	str	r1, [r3, #32]
 8005484:	621a      	str	r2, [r3, #32]
 8005486:	4bb0      	ldr	r3, [pc, #704]	; (8005748 <main+0x308>)
 8005488:	6a1a      	ldr	r2, [r3, #32]
 800548a:	0412      	lsls	r2, r2, #16
 800548c:	d407      	bmi.n	800549e <main+0x5e>
 800548e:	6a1a      	ldr	r2, [r3, #32]
 8005490:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005494:	621a      	str	r2, [r3, #32]
 8005496:	6a1a      	ldr	r2, [r3, #32]
 8005498:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800549c:	621a      	str	r2, [r3, #32]
 800549e:	4daa      	ldr	r5, [pc, #680]	; (8005748 <main+0x308>)
 80054a0:	4fab      	ldr	r7, [pc, #684]	; (8005750 <main+0x310>)
 80054a2:	69ac      	ldr	r4, [r5, #24]
 80054a4:	f8df a2f8 	ldr.w	sl, [pc, #760]	; 80057a0 <main+0x360>
 80054a8:	f8df c2f8 	ldr.w	ip, [pc, #760]	; 80057a4 <main+0x364>
 80054ac:	f8df 82f8 	ldr.w	r8, [pc, #760]	; 80057a8 <main+0x368>
 80054b0:	4ea8      	ldr	r6, [pc, #672]	; (8005754 <main+0x314>)
 80054b2:	f8df 92f8 	ldr.w	r9, [pc, #760]	; 80057ac <main+0x36c>
 80054b6:	48a8      	ldr	r0, [pc, #672]	; (8005758 <main+0x318>)
 80054b8:	49a8      	ldr	r1, [pc, #672]	; (800575c <main+0x31c>)
 80054ba:	4aa9      	ldr	r2, [pc, #676]	; (8005760 <main+0x320>)
 80054bc:	4ba9      	ldr	r3, [pc, #676]	; (8005764 <main+0x324>)
 80054be:	f8df e2b8 	ldr.w	lr, [pc, #696]	; 8005778 <main+0x338>
 80054c2:	f044 0401 	orr.w	r4, r4, #1
 80054c6:	61ac      	str	r4, [r5, #24]
 80054c8:	683c      	ldr	r4, [r7, #0]
 80054ca:	f044 0420 	orr.w	r4, r4, #32
 80054ce:	603c      	str	r4, [r7, #0]
 80054d0:	696c      	ldr	r4, [r5, #20]
 80054d2:	f04f 4790 	mov.w	r7, #1207959552	; 0x48000000
 80054d6:	f444 04fc 	orr.w	r4, r4, #8257536	; 0x7e0000
 80054da:	616c      	str	r4, [r5, #20]
 80054dc:	2400      	movs	r4, #0
 80054de:	607c      	str	r4, [r7, #4]
 80054e0:	f8c7 a008 	str.w	sl, [r7, #8]
 80054e4:	f8c7 c00c 	str.w	ip, [r7, #12]
 80054e8:	f64f 7cff 	movw	ip, #65535	; 0xffff
 80054ec:	f8c7 c014 	str.w	ip, [r7, #20]
 80054f0:	f8c7 8020 	str.w	r8, [r7, #32]
 80054f4:	f44f 286e 	mov.w	r8, #974848	; 0xee000
 80054f8:	f8c7 8024 	str.w	r8, [r7, #36]	; 0x24
 80054fc:	f8c7 9000 	str.w	r9, [r7]
 8005500:	f04f 08c0 	mov.w	r8, #192	; 0xc0
 8005504:	f24f 07c0 	movw	r7, #61632	; 0xf0c0
 8005508:	f8df 92a4 	ldr.w	r9, [pc, #676]	; 80057b0 <main+0x370>
 800550c:	f8c6 8004 	str.w	r8, [r6, #4]
 8005510:	60b7      	str	r7, [r6, #8]
 8005512:	f8c6 900c 	str.w	r9, [r6, #12]
 8005516:	f04f 4788 	mov.w	r7, #1140850688	; 0x44000000
 800551a:	f24a 0980 	movw	r9, #41088	; 0xa080
 800551e:	f8c6 c014 	str.w	ip, [r6, #20]
 8005522:	6237      	str	r7, [r6, #32]
 8005524:	6274      	str	r4, [r6, #36]	; 0x24
 8005526:	f04f 4770 	mov.w	r7, #4026531840	; 0xf0000000
 800552a:	f8c6 9000 	str.w	r9, [r6]
 800552e:	4e8e      	ldr	r6, [pc, #568]	; (8005768 <main+0x328>)
 8005530:	6044      	str	r4, [r0, #4]
 8005532:	f8df 9280 	ldr.w	r9, [pc, #640]	; 80057b4 <main+0x374>
 8005536:	6087      	str	r7, [r0, #8]
 8005538:	f04f 3a55 	mov.w	sl, #1431655765	; 0x55555555
 800553c:	60c6      	str	r6, [r0, #12]
 800553e:	4f8b      	ldr	r7, [pc, #556]	; (800576c <main+0x32c>)
 8005540:	f8c0 c014 	str.w	ip, [r0, #20]
 8005544:	26ff      	movs	r6, #255	; 0xff
 8005546:	6204      	str	r4, [r0, #32]
 8005548:	6244      	str	r4, [r0, #36]	; 0x24
 800554a:	6004      	str	r4, [r0, #0]
 800554c:	4888      	ldr	r0, [pc, #544]	; (8005770 <main+0x330>)
 800554e:	604c      	str	r4, [r1, #4]
 8005550:	608c      	str	r4, [r1, #8]
 8005552:	f8c1 a00c 	str.w	sl, [r1, #12]
 8005556:	f8c1 c014 	str.w	ip, [r1, #20]
 800555a:	f04f 0a0f 	mov.w	sl, #15
 800555e:	620c      	str	r4, [r1, #32]
 8005560:	624c      	str	r4, [r1, #36]	; 0x24
 8005562:	600c      	str	r4, [r1, #0]
 8005564:	6054      	str	r4, [r2, #4]
 8005566:	4983      	ldr	r1, [pc, #524]	; (8005774 <main+0x334>)
 8005568:	f8c2 9008 	str.w	r9, [r2, #8]
 800556c:	60d7      	str	r7, [r2, #12]
 800556e:	f8df 9248 	ldr.w	r9, [pc, #584]	; 80057b8 <main+0x378>
 8005572:	6156      	str	r6, [r2, #20]
 8005574:	6214      	str	r4, [r2, #32]
 8005576:	6254      	str	r4, [r2, #36]	; 0x24
 8005578:	6010      	str	r0, [r2, #0]
 800557a:	487f      	ldr	r0, [pc, #508]	; (8005778 <main+0x338>)
 800557c:	605c      	str	r4, [r3, #4]
 800557e:	4d72      	ldr	r5, [pc, #456]	; (8005748 <main+0x308>)
 8005580:	f8c3 a008 	str.w	sl, [r3, #8]
 8005584:	f8c3 900c 	str.w	r9, [r3, #12]
 8005588:	f8c3 c014 	str.w	ip, [r3, #20]
 800558c:	621c      	str	r4, [r3, #32]
 800558e:	625c      	str	r4, [r3, #36]	; 0x24
 8005590:	601c      	str	r4, [r3, #0]
 8005592:	f84e 1b04 	str.w	r1, [lr], #4
 8005596:	2201      	movs	r2, #1
 8005598:	f100 0364 	add.w	r3, r0, #100	; 0x64
 800559c:	f100 0154 	add.w	r1, r0, #84	; 0x54
 80055a0:	f100 070c 	add.w	r7, r0, #12
 80055a4:	f100 0630 	add.w	r6, r0, #48	; 0x30
 80055a8:	f04f 0a10 	mov.w	sl, #16
 80055ac:	7202      	strb	r2, [r0, #8]
 80055ae:	6144      	str	r4, [r0, #20]
 80055b0:	6284      	str	r4, [r0, #40]	; 0x28
 80055b2:	f8c0 e004 	str.w	lr, [r0, #4]
 80055b6:	e9c0 7703 	strd	r7, r7, [r0, #12]
 80055ba:	6181      	str	r1, [r0, #24]
 80055bc:	e9c0 1108 	strd	r1, r1, [r0, #32]
 80055c0:	61c3      	str	r3, [r0, #28]
 80055c2:	63c3      	str	r3, [r0, #60]	; 0x3c
 80055c4:	6483      	str	r3, [r0, #72]	; 0x48
 80055c6:	e9c0 660c 	strd	r6, r6, [r0, #48]	; 0x30
 80055ca:	f8c0 a038 	str.w	sl, [r0, #56]	; 0x38
 80055ce:	62c0      	str	r0, [r0, #44]	; 0x2c
 80055d0:	6443      	str	r3, [r0, #68]	; 0x44
 80055d2:	69eb      	ldr	r3, [r5, #28]
 80055d4:	6500      	str	r0, [r0, #80]	; 0x50
 80055d6:	4605      	mov	r5, r0
 80055d8:	485b      	ldr	r0, [pc, #364]	; (8005748 <main+0x308>)
 80055da:	f8df 91e0 	ldr.w	r9, [pc, #480]	; 80057bc <main+0x37c>
 80055de:	4967      	ldr	r1, [pc, #412]	; (800577c <main+0x33c>)
 80055e0:	4e67      	ldr	r6, [pc, #412]	; (8005780 <main+0x340>)
 80055e2:	4f68      	ldr	r7, [pc, #416]	; (8005784 <main+0x344>)
 80055e4:	f8df e1d8 	ldr.w	lr, [pc, #472]	; 80057c0 <main+0x380>
 80055e8:	4313      	orrs	r3, r2
 80055ea:	61c3      	str	r3, [r0, #28]
 80055ec:	f8d9 c008 	ldr.w	ip, [r9, #8]
 80055f0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80055f4:	ea4c 0c02 	orr.w	ip, ip, r2
 80055f8:	f8c9 c008 	str.w	ip, [r9, #8]
 80055fc:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8005600:	f641 491f 	movw	r9, #7199	; 0x1c1f
 8005604:	f8c3 9028 	str.w	r9, [r3, #40]	; 0x28
 8005608:	f8c3 c02c 	str.w	ip, [r3, #44]	; 0x2c
 800560c:	f04f 0980 	mov.w	r9, #128	; 0x80
 8005610:	619c      	str	r4, [r3, #24]
 8005612:	635c      	str	r4, [r3, #52]	; 0x34
 8005614:	60dc      	str	r4, [r3, #12]
 8005616:	605c      	str	r4, [r3, #4]
 8005618:	615a      	str	r2, [r3, #20]
 800561a:	601a      	str	r2, [r3, #0]
 800561c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8005620:	9203      	str	r2, [sp, #12]
 8005622:	f886 931c 	strb.w	r9, [r6, #796]	; 0x31c
 8005626:	f8c6 3180 	str.w	r3, [r6, #384]	; 0x180
 800562a:	6033      	str	r3, [r6, #0]
 800562c:	608c      	str	r4, [r1, #8]
 800562e:	68cb      	ldr	r3, [r1, #12]
 8005630:	f64f 09ff 	movw	r9, #63743	; 0xf8ff
 8005634:	ea03 0309 	and.w	r3, r3, r9
 8005638:	431f      	orrs	r7, r3
 800563a:	60cf      	str	r7, [r1, #12]
 800563c:	f8de 300c 	ldr.w	r3, [lr, #12]
 8005640:	4f51      	ldr	r7, [pc, #324]	; (8005788 <main+0x348>)
 8005642:	f8df 9180 	ldr.w	r9, [pc, #384]	; 80057c4 <main+0x384>
 8005646:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800564a:	f8ce 300c 	str.w	r3, [lr, #12]
 800564e:	683b      	ldr	r3, [r7, #0]
 8005650:	f8df e174 	ldr.w	lr, [pc, #372]	; 80057c8 <main+0x388>
 8005654:	f8c5 e04c 	str.w	lr, [r5, #76]	; 0x4c
 8005658:	f043 0301 	orr.w	r3, r3, #1
 800565c:	603b      	str	r3, [r7, #0]
 800565e:	f5a0 4058 	sub.w	r0, r0, #55296	; 0xd800
 8005662:	f105 0374 	add.w	r3, r5, #116	; 0x74
 8005666:	2720      	movs	r7, #32
 8005668:	f881 a01f 	strb.w	sl, [r1, #31]
 800566c:	f04f 0b00 	mov.w	fp, #0
 8005670:	f881 7022 	strb.w	r7, [r1, #34]	; 0x22
 8005674:	f04f 0a00 	mov.w	sl, #0
 8005678:	4944      	ldr	r1, [pc, #272]	; (800578c <main+0x34c>)
 800567a:	642b      	str	r3, [r5, #64]	; 0x40
 800567c:	6768      	str	r0, [r5, #116]	; 0x74
 800567e:	f109 031c 	add.w	r3, r9, #28
 8005682:	a806      	add	r0, sp, #24
 8005684:	67a9      	str	r1, [r5, #120]	; 0x78
 8005686:	f8c9 4008 	str.w	r4, [r9, #8]
 800568a:	e9c9 9900 	strd	r9, r9, [r9]
 800568e:	e9c9 c409 	strd	ip, r4, [r9, #36]	; 0x24
 8005692:	f8cd c018 	str.w	ip, [sp, #24]
 8005696:	e9c9 3307 	strd	r3, r3, [r9, #28]
 800569a:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800569e:	e9c9 9904 	strd	r9, r9, [r9, #16]
 80056a2:	f8c9 4074 	str.w	r4, [r9, #116]	; 0x74
 80056a6:	e9cd 4407 	strd	r4, r4, [sp, #28]
 80056aa:	9409      	str	r4, [sp, #36]	; 0x24
 80056ac:	f7fa fdf0 	bl	8000290 <chTMStartMeasurementX.constprop.56>
 80056b0:	a806      	add	r0, sp, #24
 80056b2:	f7fb fadd 	bl	8000c70 <chTMStopMeasurementX>
 80056b6:	4936      	ldr	r1, [pc, #216]	; (8005790 <main+0x350>)
 80056b8:	f8d9 e014 	ldr.w	lr, [r9, #20]
 80056bc:	9b08      	ldr	r3, [sp, #32]
 80056be:	9a03      	ldr	r2, [sp, #12]
 80056c0:	f8c9 3074 	str.w	r3, [r9, #116]	; 0x74
 80056c4:	f101 0a10 	add.w	sl, r1, #16
 80056c8:	f109 0330 	add.w	r3, r9, #48	; 0x30
 80056cc:	e9c1 aa04 	strd	sl, sl, [r1, #16]
 80056d0:	f04f 0a40 	mov.w	sl, #64	; 0x40
 80056d4:	f8c9 e044 	str.w	lr, [r9, #68]	; 0x44
 80056d8:	f8c9 a038 	str.w	sl, [r9, #56]	; 0x38
 80056dc:	f8c9 a06c 	str.w	sl, [r9, #108]	; 0x6c
 80056e0:	f889 404d 	strb.w	r4, [r9, #77]	; 0x4d
 80056e4:	e9c9 4419 	strd	r4, r4, [r9, #100]	; 0x64
 80056e8:	f889 204e 	strb.w	r2, [r9, #78]	; 0x4e
 80056ec:	f8c9 4048 	str.w	r4, [r9, #72]	; 0x48
 80056f0:	f8c9 9040 	str.w	r9, [r9, #64]	; 0x40
 80056f4:	618c      	str	r4, [r1, #24]
 80056f6:	f8df c0d4 	ldr.w	ip, [pc, #212]	; 80057cc <main+0x38c>
 80056fa:	f8ce 3010 	str.w	r3, [lr, #16]
 80056fe:	4825      	ldr	r0, [pc, #148]	; (8005794 <main+0x354>)
 8005700:	f8df a0cc 	ldr.w	sl, [pc, #204]	; 80057d0 <main+0x390>
 8005704:	f8df e0cc 	ldr.w	lr, [pc, #204]	; 80057d4 <main+0x394>
 8005708:	f889 204c 	strb.w	r2, [r9, #76]	; 0x4c
 800570c:	e9c9 3305 	strd	r3, r3, [r9, #20]
 8005710:	f109 0354 	add.w	r3, r9, #84	; 0x54
 8005714:	f8c9 3054 	str.w	r3, [r9, #84]	; 0x54
 8005718:	4b1f      	ldr	r3, [pc, #124]	; (8005798 <main+0x358>)
 800571a:	600b      	str	r3, [r1, #0]
 800571c:	f02c 0c07 	bic.w	ip, ip, #7
 8005720:	f020 0007 	bic.w	r0, r0, #7
 8005724:	f109 0358 	add.w	r3, r9, #88	; 0x58
 8005728:	e9c1 4402 	strd	r4, r4, [r1, #8]
 800572c:	e9c9 3316 	strd	r3, r3, [r9, #88]	; 0x58
 8005730:	f8ca c000 	str.w	ip, [sl]
 8005734:	f8ce 0000 	str.w	r0, [lr]
 8005738:	f384 8811 	msr	BASEPRI, r4
 800573c:	b662      	cpsie	i
 800573e:	f8d9 3018 	ldr.w	r3, [r9, #24]
 8005742:	4916      	ldr	r1, [pc, #88]	; (800579c <main+0x35c>)
 8005744:	6199      	str	r1, [r3, #24]
 8005746:	e047      	b.n	80057d8 <main+0x398>
 8005748:	40021000 	.word	0x40021000
 800574c:	40007000 	.word	0x40007000
 8005750:	40010000 	.word	0x40010000
 8005754:	48000400 	.word	0x48000400
 8005758:	48000800 	.word	0x48000800
 800575c:	48000c00 	.word	0x48000c00
 8005760:	48001000 	.word	0x48001000
 8005764:	48001400 	.word	0x48001400
 8005768:	05555555 	.word	0x05555555
 800576c:	01155515 	.word	0x01155515
 8005770:	55550040 	.word	0x55550040
 8005774:	08006a20 	.word	0x08006a20
 8005778:	200008b8 	.word	0x200008b8
 800577c:	e000ed00 	.word	0xe000ed00
 8005780:	e000e100 	.word	0xe000e100
 8005784:	05fa0300 	.word	0x05fa0300
 8005788:	e0001000 	.word	0xe0001000
 800578c:	02255100 	.word	0x02255100
 8005790:	20000a90 	.word	0x20000a90
 8005794:	2000a000 	.word	0x2000a000
 8005798:	08000381 	.word	0x08000381
 800579c:	08005ea0 	.word	0x08005ea0
 80057a0:	3cc0fc00 	.word	0x3cc0fc00
 80057a4:	64151154 	.word	0x64151154
 80057a8:	55500000 	.word	0x55500000
 80057ac:	2a80a800 	.word	0x2a80a800
 80057b0:	55550515 	.word	0x55550515
 80057b4:	ffff00c0 	.word	0xffff00c0
 80057b8:	55555550 	.word	0x55555550
 80057bc:	e0042000 	.word	0xe0042000
 80057c0:	e000edf0 	.word	0xe000edf0
 80057c4:	20000938 	.word	0x20000938
 80057c8:	080003c1 	.word	0x080003c1
 80057cc:	200014cf 	.word	0x200014cf
 80057d0:	20000b2c 	.word	0x20000b2c
 80057d4:	20000ab0 	.word	0x20000ab0
 80057d8:	f109 0078 	add.w	r0, r9, #120	; 0x78
 80057dc:	9400      	str	r4, [sp, #0]
 80057de:	4b28      	ldr	r3, [pc, #160]	; (8005880 <main+0x440>)
 80057e0:	21d8      	movs	r1, #216	; 0xd8
 80057e2:	f7fc f8dd 	bl	80019a0 <chThdCreateStatic>
 80057e6:	4b27      	ldr	r3, [pc, #156]	; (8005884 <main+0x444>)
 80057e8:	6183      	str	r3, [r0, #24]
 80057ea:	f387 8811 	msr	BASEPRI, r7
 80057ee:	7a2b      	ldrb	r3, [r5, #8]
 80057f0:	2b01      	cmp	r3, #1
 80057f2:	d109      	bne.n	8005808 <main+0x3c8>
 80057f4:	4a24      	ldr	r2, [pc, #144]	; (8005888 <main+0x448>)
 80057f6:	6993      	ldr	r3, [r2, #24]
 80057f8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80057fc:	6193      	str	r3, [r2, #24]
 80057fe:	f886 8325 	strb.w	r8, [r6, #805]	; 0x325
 8005802:	f8c6 7184 	str.w	r7, [r6, #388]	; 0x184
 8005806:	6077      	str	r7, [r6, #4]
 8005808:	4b20      	ldr	r3, [pc, #128]	; (800588c <main+0x44c>)
 800580a:	4921      	ldr	r1, [pc, #132]	; (8005890 <main+0x450>)
 800580c:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800580e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005810:	fba1 1202 	umull	r1, r2, r1, r2
 8005814:	f3c2 320f 	ubfx	r2, r2, #12, #16
 8005818:	f244 0740 	movw	r7, #16448	; 0x4040
 800581c:	2601      	movs	r6, #1
 800581e:	f240 152d 	movw	r5, #301	; 0x12d
 8005822:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005826:	60da      	str	r2, [r3, #12]
 8005828:	605f      	str	r7, [r3, #4]
 800582a:	609e      	str	r6, [r3, #8]
 800582c:	601d      	str	r5, [r3, #0]
 800582e:	6218      	str	r0, [r3, #32]
 8005830:	4b16      	ldr	r3, [pc, #88]	; (800588c <main+0x44c>)
 8005832:	2102      	movs	r1, #2
 8005834:	2400      	movs	r4, #0
 8005836:	7219      	strb	r1, [r3, #8]
 8005838:	f384 8811 	msr	BASEPRI, r4
 800583c:	f44f 7000 	mov.w	r0, #512	; 0x200
 8005840:	f7fa fd3e 	bl	80002c0 <_pal_lld_setgroupmode.constprop.5>
 8005844:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8005848:	f7fa fd3a 	bl	80002c0 <_pal_lld_setgroupmode.constprop.5>
 800584c:	9400      	str	r4, [sp, #0]
 800584e:	4b11      	ldr	r3, [pc, #68]	; (8005894 <main+0x454>)
 8005850:	4811      	ldr	r0, [pc, #68]	; (8005898 <main+0x458>)
 8005852:	f8df 8050 	ldr.w	r8, [pc, #80]	; 80058a4 <main+0x464>
 8005856:	f8df 9050 	ldr.w	r9, [pc, #80]	; 80058a8 <main+0x468>
 800585a:	f8df a050 	ldr.w	sl, [pc, #80]	; 80058ac <main+0x46c>
 800585e:	f8df b050 	ldr.w	fp, [pc, #80]	; 80058b0 <main+0x470>
 8005862:	2241      	movs	r2, #65	; 0x41
 8005864:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005868:	f7fc f89a 	bl	80019a0 <chThdCreateStatic>
 800586c:	9400      	str	r4, [sp, #0]
 800586e:	4b0b      	ldr	r3, [pc, #44]	; (800589c <main+0x45c>)
 8005870:	480b      	ldr	r0, [pc, #44]	; (80058a0 <main+0x460>)
 8005872:	2241      	movs	r2, #65	; 0x41
 8005874:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005878:	f7fc f892 	bl	80019a0 <chThdCreateStatic>
 800587c:	e01e      	b.n	80058bc <main+0x47c>
 800587e:	bf00      	nop
 8005880:	08000371 	.word	0x08000371
 8005884:	08005ff0 	.word	0x08005ff0
 8005888:	40021000 	.word	0x40021000
 800588c:	200008b8 	.word	0x200008b8
 8005890:	1b4e81b5 	.word	0x1b4e81b5
 8005894:	08002751 	.word	0x08002751
 8005898:	20001238 	.word	0x20001238
 800589c:	080027d1 	.word	0x080027d1
 80058a0:	20001380 	.word	0x20001380
 80058a4:	20000a88 	.word	0x20000a88
 80058a8:	200011f8 	.word	0x200011f8
 80058ac:	20000b0c 	.word	0x20000b0c
 80058b0:	200011d4 	.word	0x200011d4
 80058b4:	f241 3088 	movw	r0, #5000	; 0x1388
 80058b8:	f7fc ff3a 	bl	8002730 <chThdSleep>
 80058bc:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80058c0:	691b      	ldr	r3, [r3, #16]
 80058c2:	07db      	lsls	r3, r3, #31
 80058c4:	d5f6      	bpl.n	80058b4 <main+0x474>
 80058c6:	4ba2      	ldr	r3, [pc, #648]	; (8005b50 <main+0x710>)
 80058c8:	48a2      	ldr	r0, [pc, #648]	; (8005b54 <main+0x714>)
 80058ca:	f8c8 3000 	str.w	r3, [r8]
 80058ce:	f7fa ffef 	bl	80008b0 <test_println>
 80058d2:	48a1      	ldr	r0, [pc, #644]	; (8005b58 <main+0x718>)
 80058d4:	4ca1      	ldr	r4, [pc, #644]	; (8005b5c <main+0x71c>)
 80058d6:	f7fa ffeb 	bl	80008b0 <test_println>
 80058da:	48a1      	ldr	r0, [pc, #644]	; (8005b60 <main+0x720>)
 80058dc:	f7fa ffe8 	bl	80008b0 <test_println>
 80058e0:	212a      	movs	r1, #42	; 0x2a
 80058e2:	f8d8 0000 	ldr.w	r0, [r8]
 80058e6:	6803      	ldr	r3, [r0, #0]
 80058e8:	689b      	ldr	r3, [r3, #8]
 80058ea:	4798      	blx	r3
 80058ec:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80058f0:	2900      	cmp	r1, #0
 80058f2:	d1f6      	bne.n	80058e2 <main+0x4a2>
 80058f4:	489b      	ldr	r0, [pc, #620]	; (8005b64 <main+0x724>)
 80058f6:	4c9c      	ldr	r4, [pc, #624]	; (8005b68 <main+0x728>)
 80058f8:	f7fa ffda 	bl	80008b0 <test_println>
 80058fc:	212a      	movs	r1, #42	; 0x2a
 80058fe:	f8d8 0000 	ldr.w	r0, [r8]
 8005902:	6803      	ldr	r3, [r0, #0]
 8005904:	689b      	ldr	r3, [r3, #8]
 8005906:	4798      	blx	r3
 8005908:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800590c:	2900      	cmp	r1, #0
 800590e:	d1f6      	bne.n	80058fe <main+0x4be>
 8005910:	4896      	ldr	r0, [pc, #600]	; (8005b6c <main+0x72c>)
 8005912:	4c97      	ldr	r4, [pc, #604]	; (8005b70 <main+0x730>)
 8005914:	f7fa ffcc 	bl	80008b0 <test_println>
 8005918:	212a      	movs	r1, #42	; 0x2a
 800591a:	f8d8 0000 	ldr.w	r0, [r8]
 800591e:	6803      	ldr	r3, [r0, #0]
 8005920:	689b      	ldr	r3, [r3, #8]
 8005922:	4798      	blx	r3
 8005924:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005928:	2900      	cmp	r1, #0
 800592a:	d1f6      	bne.n	800591a <main+0x4da>
 800592c:	4891      	ldr	r0, [pc, #580]	; (8005b74 <main+0x734>)
 800592e:	4c92      	ldr	r4, [pc, #584]	; (8005b78 <main+0x738>)
 8005930:	f7fa ffbe 	bl	80008b0 <test_println>
 8005934:	212a      	movs	r1, #42	; 0x2a
 8005936:	f8d8 0000 	ldr.w	r0, [r8]
 800593a:	6803      	ldr	r3, [r0, #0]
 800593c:	689b      	ldr	r3, [r3, #8]
 800593e:	4798      	blx	r3
 8005940:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005944:	2900      	cmp	r1, #0
 8005946:	d1f6      	bne.n	8005936 <main+0x4f6>
 8005948:	488c      	ldr	r0, [pc, #560]	; (8005b7c <main+0x73c>)
 800594a:	4c8d      	ldr	r4, [pc, #564]	; (8005b80 <main+0x740>)
 800594c:	f7fa ffb0 	bl	80008b0 <test_println>
 8005950:	212a      	movs	r1, #42	; 0x2a
 8005952:	f8d8 0000 	ldr.w	r0, [r8]
 8005956:	6803      	ldr	r3, [r0, #0]
 8005958:	689b      	ldr	r3, [r3, #8]
 800595a:	4798      	blx	r3
 800595c:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005960:	2900      	cmp	r1, #0
 8005962:	d1f6      	bne.n	8005952 <main+0x512>
 8005964:	4887      	ldr	r0, [pc, #540]	; (8005b84 <main+0x744>)
 8005966:	4c88      	ldr	r4, [pc, #544]	; (8005b88 <main+0x748>)
 8005968:	f7fa ffa2 	bl	80008b0 <test_println>
 800596c:	212a      	movs	r1, #42	; 0x2a
 800596e:	f8d8 0000 	ldr.w	r0, [r8]
 8005972:	6803      	ldr	r3, [r0, #0]
 8005974:	689b      	ldr	r3, [r3, #8]
 8005976:	4798      	blx	r3
 8005978:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800597c:	2900      	cmp	r1, #0
 800597e:	d1f6      	bne.n	800596e <main+0x52e>
 8005980:	4882      	ldr	r0, [pc, #520]	; (8005b8c <main+0x74c>)
 8005982:	4c83      	ldr	r4, [pc, #524]	; (8005b90 <main+0x750>)
 8005984:	f7fa ff94 	bl	80008b0 <test_println>
 8005988:	212a      	movs	r1, #42	; 0x2a
 800598a:	f8d8 0000 	ldr.w	r0, [r8]
 800598e:	6803      	ldr	r3, [r0, #0]
 8005990:	689b      	ldr	r3, [r3, #8]
 8005992:	4798      	blx	r3
 8005994:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005998:	2900      	cmp	r1, #0
 800599a:	d1f6      	bne.n	800598a <main+0x54a>
 800599c:	487d      	ldr	r0, [pc, #500]	; (8005b94 <main+0x754>)
 800599e:	4c7e      	ldr	r4, [pc, #504]	; (8005b98 <main+0x758>)
 80059a0:	f7fa ff86 	bl	80008b0 <test_println>
 80059a4:	212a      	movs	r1, #42	; 0x2a
 80059a6:	f8d8 0000 	ldr.w	r0, [r8]
 80059aa:	6803      	ldr	r3, [r0, #0]
 80059ac:	689b      	ldr	r3, [r3, #8]
 80059ae:	4798      	blx	r3
 80059b0:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80059b4:	2900      	cmp	r1, #0
 80059b6:	d1f6      	bne.n	80059a6 <main+0x566>
 80059b8:	4b78      	ldr	r3, [pc, #480]	; (8005b9c <main+0x75c>)
 80059ba:	4879      	ldr	r0, [pc, #484]	; (8005ba0 <main+0x760>)
 80059bc:	9305      	str	r3, [sp, #20]
 80059be:	4b79      	ldr	r3, [pc, #484]	; (8005ba4 <main+0x764>)
 80059c0:	9103      	str	r1, [sp, #12]
 80059c2:	9304      	str	r3, [sp, #16]
 80059c4:	f7fa ff74 	bl	80008b0 <test_println>
 80059c8:	4862      	ldr	r0, [pc, #392]	; (8005b54 <main+0x714>)
 80059ca:	4e77      	ldr	r6, [pc, #476]	; (8005ba8 <main+0x768>)
 80059cc:	f7fa ff70 	bl	80008b0 <test_println>
 80059d0:	4b76      	ldr	r3, [pc, #472]	; (8005bac <main+0x76c>)
 80059d2:	9903      	ldr	r1, [sp, #12]
 80059d4:	7019      	strb	r1, [r3, #0]
 80059d6:	4b76      	ldr	r3, [pc, #472]	; (8005bb0 <main+0x770>)
 80059d8:	9a03      	ldr	r2, [sp, #12]
 80059da:	3201      	adds	r2, #1
 80059dc:	9203      	str	r2, [sp, #12]
 80059de:	2500      	movs	r5, #0
 80059e0:	2b00      	cmp	r3, #0
 80059e2:	f000 808b 	beq.w	8005afc <main+0x6bc>
 80059e6:	4c73      	ldr	r4, [pc, #460]	; (8005bb4 <main+0x774>)
 80059e8:	f7fa fe9a 	bl	8000720 <print_line>
 80059ec:	212d      	movs	r1, #45	; 0x2d
 80059ee:	f8d8 0000 	ldr.w	r0, [r8]
 80059f2:	6803      	ldr	r3, [r0, #0]
 80059f4:	689b      	ldr	r3, [r3, #8]
 80059f6:	4798      	blx	r3
 80059f8:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80059fc:	2900      	cmp	r1, #0
 80059fe:	d1f6      	bne.n	80059ee <main+0x5ae>
 8005a00:	9803      	ldr	r0, [sp, #12]
 8005a02:	4c6d      	ldr	r4, [pc, #436]	; (8005bb8 <main+0x778>)
 8005a04:	f7fa fe7c 	bl	8000700 <test_printn>
 8005a08:	f8d8 0000 	ldr.w	r0, [r8]
 8005a0c:	6803      	ldr	r3, [r0, #0]
 8005a0e:	212e      	movs	r1, #46	; 0x2e
 8005a10:	689b      	ldr	r3, [r3, #8]
 8005a12:	1c6f      	adds	r7, r5, #1
 8005a14:	4798      	blx	r3
 8005a16:	4638      	mov	r0, r7
 8005a18:	f7fa fe72 	bl	8000700 <test_printn>
 8005a1c:	2120      	movs	r1, #32
 8005a1e:	f8d8 0000 	ldr.w	r0, [r8]
 8005a22:	6803      	ldr	r3, [r0, #0]
 8005a24:	689b      	ldr	r3, [r3, #8]
 8005a26:	4798      	blx	r3
 8005a28:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005a2c:	2900      	cmp	r1, #0
 8005a2e:	d1f6      	bne.n	8005a1e <main+0x5de>
 8005a30:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005a34:	681c      	ldr	r4, [r3, #0]
 8005a36:	7821      	ldrb	r1, [r4, #0]
 8005a38:	b141      	cbz	r1, 8005a4c <main+0x60c>
 8005a3a:	f8d8 0000 	ldr.w	r0, [r8]
 8005a3e:	6803      	ldr	r3, [r0, #0]
 8005a40:	689b      	ldr	r3, [r3, #8]
 8005a42:	4798      	blx	r3
 8005a44:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005a48:	2900      	cmp	r1, #0
 8005a4a:	d1f6      	bne.n	8005a3a <main+0x5fa>
 8005a4c:	485b      	ldr	r0, [pc, #364]	; (8005bbc <main+0x77c>)
 8005a4e:	f7fa ff2f 	bl	80008b0 <test_println>
 8005a52:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8005a56:	f7fc fe6b 	bl	8002730 <chThdSleep>
 8005a5a:	4b59      	ldr	r3, [pc, #356]	; (8005bc0 <main+0x780>)
 8005a5c:	f8c9 3000 	str.w	r3, [r9]
 8005a60:	2300      	movs	r3, #0
 8005a62:	f856 4025 	ldr.w	r4, [r6, r5, lsl #2]
 8005a66:	f8cb 3010 	str.w	r3, [fp, #16]
 8005a6a:	e9cb 3300 	strd	r3, r3, [fp]
 8005a6e:	e9cb 3302 	strd	r3, r3, [fp, #8]
 8005a72:	6862      	ldr	r2, [r4, #4]
 8005a74:	f88a 3000 	strb.w	r3, [sl]
 8005a78:	b102      	cbz	r2, 8005a7c <main+0x63c>
 8005a7a:	4790      	blx	r2
 8005a7c:	68e3      	ldr	r3, [r4, #12]
 8005a7e:	4798      	blx	r3
 8005a80:	68a3      	ldr	r3, [r4, #8]
 8005a82:	b103      	cbz	r3, 8005a86 <main+0x646>
 8005a84:	4798      	blx	r3
 8005a86:	f7fe f863 	bl	8003b50 <test_wait_threads>
 8005a8a:	f89a 3000 	ldrb.w	r3, [sl]
 8005a8e:	2b00      	cmp	r3, #0
 8005a90:	d03e      	beq.n	8005b10 <main+0x6d0>
 8005a92:	4c4c      	ldr	r4, [pc, #304]	; (8005bc4 <main+0x784>)
 8005a94:	212d      	movs	r1, #45	; 0x2d
 8005a96:	f8d8 0000 	ldr.w	r0, [r8]
 8005a9a:	6803      	ldr	r3, [r0, #0]
 8005a9c:	689b      	ldr	r3, [r3, #8]
 8005a9e:	4798      	blx	r3
 8005aa0:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005aa4:	2900      	cmp	r1, #0
 8005aa6:	d1f6      	bne.n	8005a96 <main+0x656>
 8005aa8:	4b47      	ldr	r3, [pc, #284]	; (8005bc8 <main+0x788>)
 8005aaa:	4c48      	ldr	r4, [pc, #288]	; (8005bcc <main+0x78c>)
 8005aac:	6818      	ldr	r0, [r3, #0]
 8005aae:	f7fa fe27 	bl	8000700 <test_printn>
 8005ab2:	2120      	movs	r1, #32
 8005ab4:	f8d8 0000 	ldr.w	r0, [r8]
 8005ab8:	6803      	ldr	r3, [r0, #0]
 8005aba:	689b      	ldr	r3, [r3, #8]
 8005abc:	4798      	blx	r3
 8005abe:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005ac2:	2900      	cmp	r1, #0
 8005ac4:	d1f6      	bne.n	8005ab4 <main+0x674>
 8005ac6:	f8d9 3000 	ldr.w	r3, [r9]
 8005aca:	4a3d      	ldr	r2, [pc, #244]	; (8005bc0 <main+0x780>)
 8005acc:	4293      	cmp	r3, r2
 8005ace:	d90b      	bls.n	8005ae8 <main+0x6a8>
 8005ad0:	4614      	mov	r4, r2
 8005ad2:	f8d8 0000 	ldr.w	r0, [r8]
 8005ad6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005ada:	6803      	ldr	r3, [r0, #0]
 8005adc:	689b      	ldr	r3, [r3, #8]
 8005ade:	4798      	blx	r3
 8005ae0:	f8d9 3000 	ldr.w	r3, [r9]
 8005ae4:	429c      	cmp	r4, r3
 8005ae6:	d3f4      	bcc.n	8005ad2 <main+0x692>
 8005ae8:	4839      	ldr	r0, [pc, #228]	; (8005bd0 <main+0x790>)
 8005aea:	f7fa fee1 	bl	80008b0 <test_println>
 8005aee:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 8005af2:	463d      	mov	r5, r7
 8005af4:	685b      	ldr	r3, [r3, #4]
 8005af6:	2b00      	cmp	r3, #0
 8005af8:	f47f af75 	bne.w	80059e6 <main+0x5a6>
 8005afc:	9e04      	ldr	r6, [sp, #16]
 8005afe:	b15e      	cbz	r6, 8005b18 <main+0x6d8>
 8005b00:	9a05      	ldr	r2, [sp, #20]
 8005b02:	6833      	ldr	r3, [r6, #0]
 8005b04:	4611      	mov	r1, r2
 8005b06:	f851 2f04 	ldr.w	r2, [r1, #4]!
 8005b0a:	9204      	str	r2, [sp, #16]
 8005b0c:	9105      	str	r1, [sp, #20]
 8005b0e:	e763      	b.n	80059d8 <main+0x598>
 8005b10:	4830      	ldr	r0, [pc, #192]	; (8005bd4 <main+0x794>)
 8005b12:	f7fa fecd 	bl	80008b0 <test_println>
 8005b16:	e7ea      	b.n	8005aee <main+0x6ae>
 8005b18:	f7fa fe02 	bl	8000720 <print_line>
 8005b1c:	4c2e      	ldr	r4, [pc, #184]	; (8005bd8 <main+0x798>)
 8005b1e:	480d      	ldr	r0, [pc, #52]	; (8005b54 <main+0x714>)
 8005b20:	f7fa fec6 	bl	80008b0 <test_println>
 8005b24:	2146      	movs	r1, #70	; 0x46
 8005b26:	f8d8 0000 	ldr.w	r0, [r8]
 8005b2a:	6803      	ldr	r3, [r0, #0]
 8005b2c:	689b      	ldr	r3, [r3, #8]
 8005b2e:	4798      	blx	r3
 8005b30:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005b34:	2900      	cmp	r1, #0
 8005b36:	d1f6      	bne.n	8005b26 <main+0x6e6>
 8005b38:	4b1c      	ldr	r3, [pc, #112]	; (8005bac <main+0x76c>)
 8005b3a:	781b      	ldrb	r3, [r3, #0]
 8005b3c:	b91b      	cbnz	r3, 8005b46 <main+0x706>
 8005b3e:	4827      	ldr	r0, [pc, #156]	; (8005bdc <main+0x79c>)
 8005b40:	f7fa feb6 	bl	80008b0 <test_println>
 8005b44:	e6b6      	b.n	80058b4 <main+0x474>
 8005b46:	4826      	ldr	r0, [pc, #152]	; (8005be0 <main+0x7a0>)
 8005b48:	f7fa feb2 	bl	80008b0 <test_println>
 8005b4c:	e6b2      	b.n	80058b4 <main+0x474>
 8005b4e:	bf00      	nop
 8005b50:	200008b8 	.word	0x200008b8
 8005b54:	08005e70 	.word	0x08005e70
 8005b58:	08005ff8 	.word	0x08005ff8
 8005b5c:	08005f10 	.word	0x08005f10
 8005b60:	08006014 	.word	0x08006014
 8005b64:	08006018 	.word	0x08006018
 8005b68:	08005f24 	.word	0x08005f24
 8005b6c:	08006020 	.word	0x08006020
 8005b70:	08005f38 	.word	0x08005f38
 8005b74:	08006038 	.word	0x08006038
 8005b78:	08005f4c 	.word	0x08005f4c
 8005b7c:	08006080 	.word	0x08006080
 8005b80:	08005f60 	.word	0x08005f60
 8005b84:	0800608c 	.word	0x0800608c
 8005b88:	08005f74 	.word	0x08005f74
 8005b8c:	08006098 	.word	0x08006098
 8005b90:	08005f88 	.word	0x08005f88
 8005b94:	080060b0 	.word	0x080060b0
 8005b98:	08005f9c 	.word	0x08005f9c
 8005b9c:	08006204 	.word	0x08006204
 8005ba0:	080060cc 	.word	0x080060cc
 8005ba4:	08006270 	.word	0x08006270
 8005ba8:	08006260 	.word	0x08006260
 8005bac:	200011a8 	.word	0x200011a8
 8005bb0:	080069b0 	.word	0x080069b0
 8005bb4:	08005fb0 	.word	0x08005fb0
 8005bb8:	08005fc0 	.word	0x08005fc0
 8005bbc:	080060f4 	.word	0x080060f4
 8005bc0:	200011e8 	.word	0x200011e8
 8005bc4:	08005fc4 	.word	0x08005fc4
 8005bc8:	20000ab4 	.word	0x20000ab4
 8005bcc:	08005fdc 	.word	0x08005fdc
 8005bd0:	080060f8 	.word	0x080060f8
 8005bd4:	080060fc 	.word	0x080060fc
 8005bd8:	08005fe0 	.word	0x08005fe0
 8005bdc:	08006108 	.word	0x08006108
 8005be0:	08006110 	.word	0x08006110
	...

08005bf0 <__early_init>:
 8005bf0:	4b23      	ldr	r3, [pc, #140]	; (8005c80 <__early_init+0x90>)
 8005bf2:	681a      	ldr	r2, [r3, #0]
 8005bf4:	f042 0201 	orr.w	r2, r2, #1
 8005bf8:	601a      	str	r2, [r3, #0]
 8005bfa:	681a      	ldr	r2, [r3, #0]
 8005bfc:	0792      	lsls	r2, r2, #30
 8005bfe:	d5fc      	bpl.n	8005bfa <__early_init+0xa>
 8005c00:	6859      	ldr	r1, [r3, #4]
 8005c02:	4a1f      	ldr	r2, [pc, #124]	; (8005c80 <__early_init+0x90>)
 8005c04:	f021 0103 	bic.w	r1, r1, #3
 8005c08:	6059      	str	r1, [r3, #4]
 8005c0a:	6859      	ldr	r1, [r3, #4]
 8005c0c:	6059      	str	r1, [r3, #4]
 8005c0e:	6853      	ldr	r3, [r2, #4]
 8005c10:	f013 030c 	ands.w	r3, r3, #12
 8005c14:	d1fb      	bne.n	8005c0e <__early_init+0x1e>
 8005c16:	6810      	ldr	r0, [r2, #0]
 8005c18:	4919      	ldr	r1, [pc, #100]	; (8005c80 <__early_init+0x90>)
 8005c1a:	f000 00f9 	and.w	r0, r0, #249	; 0xf9
 8005c1e:	6010      	str	r0, [r2, #0]
 8005c20:	6053      	str	r3, [r2, #4]
 8005c22:	6813      	ldr	r3, [r2, #0]
 8005c24:	f443 23a0 	orr.w	r3, r3, #327680	; 0x50000
 8005c28:	6013      	str	r3, [r2, #0]
 8005c2a:	680b      	ldr	r3, [r1, #0]
 8005c2c:	0398      	lsls	r0, r3, #14
 8005c2e:	d5fc      	bpl.n	8005c2a <__early_init+0x3a>
 8005c30:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8005c32:	4a13      	ldr	r2, [pc, #76]	; (8005c80 <__early_init+0x90>)
 8005c34:	f043 0301 	orr.w	r3, r3, #1
 8005c38:	624b      	str	r3, [r1, #36]	; 0x24
 8005c3a:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8005c3c:	0799      	lsls	r1, r3, #30
 8005c3e:	d5fc      	bpl.n	8005c3a <__early_init+0x4a>
 8005c40:	4b10      	ldr	r3, [pc, #64]	; (8005c84 <__early_init+0x94>)
 8005c42:	6053      	str	r3, [r2, #4]
 8005c44:	f44f 5104 	mov.w	r1, #8448	; 0x2100
 8005c48:	2330      	movs	r3, #48	; 0x30
 8005c4a:	62d1      	str	r1, [r2, #44]	; 0x2c
 8005c4c:	6313      	str	r3, [r2, #48]	; 0x30
 8005c4e:	6813      	ldr	r3, [r2, #0]
 8005c50:	490b      	ldr	r1, [pc, #44]	; (8005c80 <__early_init+0x90>)
 8005c52:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8005c56:	6013      	str	r3, [r2, #0]
 8005c58:	680b      	ldr	r3, [r1, #0]
 8005c5a:	019b      	lsls	r3, r3, #6
 8005c5c:	d5fc      	bpl.n	8005c58 <__early_init+0x68>
 8005c5e:	4b0a      	ldr	r3, [pc, #40]	; (8005c88 <__early_init+0x98>)
 8005c60:	4a07      	ldr	r2, [pc, #28]	; (8005c80 <__early_init+0x90>)
 8005c62:	2012      	movs	r0, #18
 8005c64:	6018      	str	r0, [r3, #0]
 8005c66:	684b      	ldr	r3, [r1, #4]
 8005c68:	f043 0302 	orr.w	r3, r3, #2
 8005c6c:	604b      	str	r3, [r1, #4]
 8005c6e:	6853      	ldr	r3, [r2, #4]
 8005c70:	f003 030c 	and.w	r3, r3, #12
 8005c74:	2b08      	cmp	r3, #8
 8005c76:	d1fa      	bne.n	8005c6e <__early_init+0x7e>
 8005c78:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8005c7a:	6313      	str	r3, [r2, #48]	; 0x30
 8005c7c:	4770      	bx	lr
 8005c7e:	bf00      	nop
 8005c80:	40021000 	.word	0x40021000
 8005c84:	001d2400 	.word	0x001d2400
 8005c88:	40022000 	.word	0x40022000
 8005c8c:	00000000 	.word	0x00000000

08005c90 <chThdExit>:
 8005c90:	b538      	push	{r3, r4, r5, lr}
 8005c92:	2220      	movs	r2, #32
 8005c94:	4603      	mov	r3, r0
 8005c96:	f382 8811 	msr	BASEPRI, r2
 8005c9a:	4a0e      	ldr	r2, [pc, #56]	; (8005cd4 <chThdExit+0x44>)
 8005c9c:	6994      	ldr	r4, [r2, #24]
 8005c9e:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005ca0:	6223      	str	r3, [r4, #32]
 8005ca2:	f104 0524 	add.w	r5, r4, #36	; 0x24
 8005ca6:	42a8      	cmp	r0, r5
 8005ca8:	d006      	beq.n	8005cb8 <chThdExit+0x28>
 8005caa:	6803      	ldr	r3, [r0, #0]
 8005cac:	6263      	str	r3, [r4, #36]	; 0x24
 8005cae:	f7fb f83f 	bl	8000d30 <chSchReadyI>
 8005cb2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005cb4:	42a8      	cmp	r0, r5
 8005cb6:	d1f8      	bne.n	8005caa <chThdExit+0x1a>
 8005cb8:	7f63      	ldrb	r3, [r4, #29]
 8005cba:	079b      	lsls	r3, r3, #30
 8005cbc:	d104      	bne.n	8005cc8 <chThdExit+0x38>
 8005cbe:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 8005cc2:	611a      	str	r2, [r3, #16]
 8005cc4:	6922      	ldr	r2, [r4, #16]
 8005cc6:	6153      	str	r3, [r2, #20]
 8005cc8:	200f      	movs	r0, #15
 8005cca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005cce:	f7fb be9f 	b.w	8001a10 <chSchGoSleepS>
 8005cd2:	bf00      	nop
 8005cd4:	20000938 	.word	0x20000938
	...

08005ce0 <thread1.lto_priv.72>:
 8005ce0:	f7ff bfd6 	b.w	8005c90 <chThdExit>
	...

08005cf0 <chSchDoReschedule>:
 8005cf0:	f7fb bc26 	b.w	8001540 <chSchDoRescheduleAhead>
	...

08005d00 <__default_exit>:
 8005d00:	e7fe      	b.n	8005d00 <__default_exit>
 8005d02:	bf00      	nop
	...

08005d10 <__late_init>:
 8005d10:	4770      	bx	lr
 8005d12:	bf00      	nop
	...
 8005d20:	6e696c62 	.word	0x6e696c62
 8005d24:	0072656b 	.word	0x0072656b
	...
 8005d30:	61686e75 	.word	0x61686e75
 8005d34:	656c646e 	.word	0x656c646e
 8005d38:	78652064 	.word	0x78652064
 8005d3c:	74706563 	.word	0x74706563
 8005d40:	006e6f69 	.word	0x006e6f69
	...
 8005d50:	202d2d2d 	.word	0x202d2d2d
 8005d54:	726f6353 	.word	0x726f6353
 8005d58:	203a2065 	.word	0x203a2065
 8005d5c:	00000000 	.word	0x00000000
 8005d60:	6d697420 	.word	0x6d697420
 8005d64:	2f737265 	.word	0x2f737265
 8005d68:	00000053 	.word	0x00000053
 8005d6c:	00000000 	.word	0x00000000
 8005d70:	69617720 	.word	0x69617720
 8005d74:	69732b74 	.word	0x69732b74
 8005d78:	6c616e67 	.word	0x6c616e67
 8005d7c:	0000532f 	.word	0x0000532f
 8005d80:	636f6c20 	.word	0x636f6c20
 8005d84:	6e752b6b 	.word	0x6e752b6b
 8005d88:	6b636f6c 	.word	0x6b636f6c
 8005d8c:	0000532f 	.word	0x0000532f
 8005d90:	202d2d2d 	.word	0x202d2d2d
 8005d94:	74737953 	.word	0x74737953
 8005d98:	203a6d65 	.word	0x203a6d65
 8005d9c:	00000000 	.word	0x00000000
 8005da0:	74796220 	.word	0x74796220
 8005da4:	00007365 	.word	0x00007365
 8005da8:	202d2d2d 	.word	0x202d2d2d
 8005dac:	65726854 	.word	0x65726854
 8005db0:	203a6461 	.word	0x203a6461
 8005db4:	00000000 	.word	0x00000000
 8005db8:	202d2d2d 	.word	0x202d2d2d
 8005dbc:	656d6954 	.word	0x656d6954
 8005dc0:	203a2072 	.word	0x203a2072
 8005dc4:	00000000 	.word	0x00000000
 8005dc8:	202d2d2d 	.word	0x202d2d2d
 8005dcc:	616d6553 	.word	0x616d6553
 8005dd0:	203a6870 	.word	0x203a6870
 8005dd4:	00000000 	.word	0x00000000
 8005dd8:	202d2d2d 	.word	0x202d2d2d
 8005ddc:	6e657645 	.word	0x6e657645
 8005de0:	203a5374 	.word	0x203a5374
 8005de4:	00000000 	.word	0x00000000
 8005de8:	202d2d2d 	.word	0x202d2d2d
 8005dec:	6e657645 	.word	0x6e657645
 8005df0:	203a4c74 	.word	0x203a4c74
 8005df4:	00000000 	.word	0x00000000
 8005df8:	202d2d2d 	.word	0x202d2d2d
 8005dfc:	6574754d 	.word	0x6574754d
 8005e00:	203a2078 	.word	0x203a2078
 8005e04:	00000000 	.word	0x00000000
 8005e08:	202d2d2d 	.word	0x202d2d2d
 8005e0c:	646e6f43 	.word	0x646e6f43
 8005e10:	203a2e56 	.word	0x203a2e56
 8005e14:	00000000 	.word	0x00000000
 8005e18:	202d2d2d 	.word	0x202d2d2d
 8005e1c:	75657551 	.word	0x75657551
 8005e20:	203a2065 	.word	0x203a2065
 8005e24:	00000000 	.word	0x00000000
 8005e28:	202d2d2d 	.word	0x202d2d2d
 8005e2c:	6c69614d 	.word	0x6c69614d
 8005e30:	203a2e42 	.word	0x203a2e42
	...
 8005e40:	67736d20 	.word	0x67736d20
 8005e44:	2c532f73 	.word	0x2c532f73
 8005e48:	00000020 	.word	0x00000020
 8005e4c:	00000000 	.word	0x00000000
 8005e50:	72687420 	.word	0x72687420
 8005e54:	73646165 	.word	0x73646165
 8005e58:	0000532f 	.word	0x0000532f
 8005e5c:	00000000 	.word	0x00000000
 8005e60:	73657220 	.word	0x73657220
 8005e64:	64656863 	.word	0x64656863
 8005e68:	73656c75 	.word	0x73656c75
 8005e6c:	202c532f 	.word	0x202c532f
	...
 8005e80:	78746320 	.word	0x78746320
 8005e84:	2f637773 	.word	0x2f637773
 8005e88:	00000053 	.word	0x00000053
 8005e8c:	00000000 	.word	0x00000000
 8005e90:	74796220 	.word	0x74796220
 8005e94:	532f7365 	.word	0x532f7365
	...

08005ea0 <ch_debug>:
 8005ea0:	6e69616d 18011600 08440404 1814100c     main......D.....
 8005eb0:	1e1d1c00 00000000 00000000 00000000     ................
 8005ec0:	00004241 00000000 00000000 00000000     AB..............
 8005ed0:	00000042 00000043 00000044 00000000     B...C...D.......
 8005ee0:	00000041 00000000 00000000 00000000     A...............

08005ef0 <evhndl>:
 8005ef0:	08000881 08000871 08000861 00000000     ....q...a.......
 8005f00:	00434241 00000000 00000000 00000000     ABC.............
 8005f10:	202a2a2a 6e72654b 203a6c65 20202020     *** Kernel:     
 8005f20:	00002020 202a2a2a 706d6f43 64656c69       ..*** Compiled
 8005f30:	2020203a 00002020 202a2a2a 706d6f43     :     ..*** Comp
 8005f40:	72656c69 2020203a 00002020 202a2a2a     iler:     ..*** 
 8005f50:	68637241 63657469 65727574 0000203a     Architecture: ..
 8005f60:	202a2a2a 65726f43 72615620 746e6169     *** Core Variant
 8005f70:	0000203a 202a2a2a 74726f50 666e4920     : ..*** Port Inf
 8005f80:	20203a6f 00002020 202a2a2a 74616c50     o:    ..*** Plat
 8005f90:	6d726f66 2020203a 00002020 202a2a2a     form:     ..*** 
 8005fa0:	74736554 616f4220 203a6472 00002020     Test Board:   ..
 8005fb0:	202d2d2d 74736554 73614320 00002065     --- Test Case ..
 8005fc0:	00002820 202d2d2d 75736552 203a746c      (..--- Result: 
 8005fd0:	4c494146 20455255 00002328 00005b20     FAILURE (#.. [..
 8005fe0:	616e6946 6572206c 746c7573 0000203a     Final result: ..
 8005ff0:	656c6469 00000000 202a2a2a 62696843     idle....*** Chib
 8006000:	2f534f69 74205452 20747365 74697573     iOS/RT test suit
 8006010:	00000065 002a2a2a 2e302e33 00000030     e...***.3.0.0...
 8006020:	20727041 32203620 20383130 3631202d     Apr  6 2018 - 16
 8006030:	3a31303a 00003130 20434347 2e322e37     :01:01..GCC 7.2.
 8006040:	30322031 39303731 28203430 656c6572     1 20170904 (rele
 8006050:	29657361 52415b20 6d652f4d 64646562     ase) [ARM/embedd
 8006060:	372d6465 6172622d 2068636e 69766572     ed-7-branch revi
 8006070:	6e6f6973 35353220 5d343032 00000000     sion 255204]....
 8006080:	764d5241 454d2d37 00000000 74726f43     ARMv7-ME....Cort
 8006090:	4d2d7865 00000034 61766441 6465636e     ex-M4...Advanced
 80060a0:	72656b20 206c656e 65646f6d 00000000      kernel mode....
 80060b0:	334d5453 30334632 20437833 6c616e41     STM32F303xC Anal
 80060c0:	2620676f 50534420 00000000 694d5453     og & DSP....STMi
 80060d0:	656f7263 7463656c 696e6f72 53207363     croelectronics S
 80060e0:	32334d54 442d3346 6f637369 79726576     TM32F3-Discovery
 80060f0:	00000000 00000029 0000295d 202d2d2d     ....)...])..--- 
 8006100:	75736552 203a746c 43435553 00535345     Result: SUCCESS.
 8006110:	4c494146 00455255 00000000 00000000     FAILURE.........
 8006120:	44434241 00000045 00000000 00000000     ABCDE...........

08006130 <patternbmk>:
 8006130:	08006780 080067d0 080067e0 080067f0     .g...g...g...g..
 8006140:	08006800 08006810 08006820 08006830     .h...h.. h..0h..
 8006150:	08006840 08006790 080067a0 080067b0     @h...g...g...g..
 8006160:	080067c0 00000000 00000000 00000000     .g..............

08006170 <patterndyn>:
 8006170:	08006850 08006860 08006870 00000000     Ph..`h..ph......

08006180 <patternevt>:
 8006180:	08006880 08006890 080068a0 00000000     .h...h...h......

08006190 <patternheap>:
 8006190:	080068b0 00000000 00000000 00000000     .h..............

080061a0 <patternmbox>:
 80061a0:	080068c0 00000000 00000000 00000000     .h..............

080061b0 <patternmsg>:
 80061b0:	080068d0 00000000 00000000 00000000     .h..............

080061c0 <patternmtx>:
 80061c0:	080068e0 080068f0 08006900 08006910     .h...h...i...i..
 80061d0:	08006920 08006930 00000000 00000000      i..0i..........

080061e0 <patternpools>:
 80061e0:	08006940 00000000 00000000 00000000     @i..............

080061f0 <patternqueues>:
 80061f0:	08006950 08006960 00000000 00000000     Pi..`i..........

08006200 <patterns>:
 8006200:	08006260 08006270 08006240 080061c0     `b..pb..@b...a..
 8006210:	080061b0 080061a0 08006180 08006190     .a...a...a...a..
 8006220:	080061e0 08006170 080061f0 08006130     .a..pa...a..0a..
	...

08006240 <patternsem>:
 8006240:	08006970 08006980 08006990 080069a0     pi...i...i...i..
	...

08006260 <patternsys>:
 8006260:	080069b0 080069c0 080069d0 00000000     .i...i...i......

08006270 <patternthd>:
 8006270:	080069e0 080069f0 08006a00 08006a10     .i...i...j...j..
	...
 8006290:	00000a0d 00000000 00000000 00000000     ................
 80062a0:	44434241 00000000 00000000 00000000     ABCD............
 80062b0:	636e6542 72616d68 52202c6b 66204d41     Benchmark, RAM f
 80062c0:	70746f6f 746e6972 00000000 636e6542     ootprint....Benc
 80062d0:	72616d68 6d202c6b 78657475 6c207365     hmark, mutexes l
 80062e0:	2f6b636f 6f6c6e75 00006b63 636e6542     ock/unlock..Benc
 80062f0:	72616d68 73202c6b 70616d65 65726f68     hmark, semaphore
 8006300:	61772073 732f7469 616e6769 0000006c     s wait/signal...
 8006310:	636e6542 72616d68 76202c6b 75747269     Benchmark, virtu
 8006320:	74206c61 72656d69 65732073 65722f74     al timers set/re
 8006330:	00746573 636e6542 72616d68 49202c6b     set.Benchmark, I
 8006340:	51204f2f 65756575 68742073 67756f72     /O Queues throug
 8006350:	74757068 00000000 636e6542 72616d68     hput....Benchmar
 8006360:	72202c6b 646e756f 626f7220 63206e69     k, round robin c
 8006370:	65746e6f 73207478 63746977 676e6968     ontext switching
 8006380:	00000000 636e6542 72616d68 6d202c6b     ....Benchmark, m
 8006390:	20737361 63736572 75646568 202c656c     ass reschedule, 
 80063a0:	68742035 64616572 00000073 636e6542     5 threads...Benc
 80063b0:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 80063c0:	61657263 6f206574 00796c6e 636e6542     create only.Benc
 80063d0:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 80063e0:	6c6c7566 63796320 0000656c 636e6542     full cycle..Benc
 80063f0:	72616d68 63202c6b 65746e6f 73207478     hmark, context s
 8006400:	63746977 00000068 636e6542 72616d68     witch...Benchmar
 8006410:	6d202c6b 61737365 20736567 00003323     k, messages #3..
 8006420:	636e6542 72616d68 6d202c6b 61737365     Benchmark, messa
 8006430:	20736567 00003223 636e6542 72616d68     ges #2..Benchmar
 8006440:	6d202c6b 61737365 20736567 00003123     k, messages #1..
 8006450:	75657551 202c7365 7074756f 71207475     Queues, output q
 8006460:	65756575 00000073 75657551 202c7365     ueues...Queues, 
 8006470:	75706e69 75712074 73657565 00000000     input queues....
 8006480:	616e7944 2063696d 73495041 6572202c     Dynamic APIs, re
 8006490:	74736967 61207972 7220646e 72656665     gistry and refer
 80064a0:	65636e65 00000073 616e7944 2063696d     ences...Dynamic 
 80064b0:	73495041 6874202c 64616572 72632073     APIs, threads cr
 80064c0:	69746165 66206e6f 206d6f72 6f6d656d     eation from memo
 80064d0:	70207972 006c6f6f 616e7944 2063696d     ry pool.Dynamic 
 80064e0:	73495041 6874202c 64616572 72632073     APIs, threads cr
 80064f0:	69746165 66206e6f 206d6f72 70616568     eation from heap
 8006500:	00000000 6f6d654d 50207972 736c6f6f     ....Memory Pools
 8006510:	7571202c 2f657565 75716564 00657565     , queue/dequeue.
 8006520:	70616548 6c61202c 61636f6c 6e6f6974     Heap, allocation
 8006530:	646e6120 61726620 6e656d67 69746174      and fragmentati
 8006540:	74206e6f 00747365 6e657645 202c7374     on test.Events, 
 8006550:	656d6974 7374756f 00000000 6e657645     timeouts....Even
 8006560:	202c7374 74696177 646e6120 6f726220     ts, wait and bro
 8006570:	61636461 00007473 6e657645 202c7374     adcast..Events, 
 8006580:	69676572 61727473 6e6f6974 646e6120     registration and
 8006590:	73696420 63746170 00000068 6c69614d      dispatch...Mail
 80065a0:	65786f62 71202c73 69756575 6120676e     boxes, queuing a
 80065b0:	7420646e 6f656d69 00737475 7373654d     nd timeouts.Mess
 80065c0:	73656761 6f6c202c 0000706f 646e6f43     ages, loop..Cond
 80065d0:	2c726156 6f6f6220 74207473 00747365     Var, boost test.
 80065e0:	646e6f43 2c726156 6f726220 61636461     CondVar, broadca
 80065f0:	74207473 00747365 646e6f43 2c726156     st test.CondVar,
 8006600:	67697320 206c616e 74736574 00000000      signal test....
 8006610:	6574754d 2c736578 61747320 00737574     Mutexes, status.
 8006620:	6574754d 2c736578 69727020 7469726f     Mutexes, priorit
 8006630:	65722079 6e727574 00000000 6574754d     y return....Mute
 8006640:	2c736578 69727020 7469726f 6e652079     xes, priority en
 8006650:	75657571 20676e69 74736574 00000000     queuing test....
 8006660:	616e6942 53207972 70616d65 65726f68     Binary Semaphore
 8006670:	66202c73 74636e75 616e6f69 7974696c     s, functionality
 8006680:	00000000 616d6553 726f6870 202c7365     ....Semaphores, 
 8006690:	6d6f7461 73206369 616e6769 61772d6c     atomic signal-wa
 80066a0:	00007469 616d6553 726f6870 202c7365     it..Semaphores, 
 80066b0:	656d6974 0074756f 616d6553 726f6870     timeout.Semaphor
 80066c0:	202c7365 75716e65 6e697565 00000067     es, enqueuing...
 80066d0:	65726854 2c736461 6c656420 00737961     Threads, delays.
 80066e0:	65726854 2c736461 69727020 7469726f     Threads, priorit
 80066f0:	68632079 65676e61 00000000 65726854     y change....Thre
 8006700:	2c736461 716e6520 69756575 7420676e     ads, enqueuing t
 8006710:	20747365 00003223 65726854 2c736461     est #2..Threads,
 8006720:	716e6520 69756575 7420676e 20747365      enqueuing test 
 8006730:	00003123 74737953 202c6d65 65746e69     #1..System, inte
 8006740:	74697267 00000079 74737953 202c6d65     grity...System, 
 8006750:	65746e69 70757272 68207374 6c646e61     interrupts handl
 8006760:	00676e69 74737953 202c6d65 74697263     ing.System, crit
 8006770:	6c616369 6e6f7a20 00007365 00000000     ical zones......

08006780 <testbmk1>:
 8006780:	08006438 00000000 00000000 08003f91     8d...........?..

08006790 <testbmk10>:
 8006790:	08006310 00000000 00000000 080029d1     .c...........)..

080067a0 <testbmk11>:
 80067a0:	080062ec 080003e1 00000000 08003851     .b..........Q8..

080067b0 <testbmk12>:
 80067b0:	080062cc 080003d1 00000000 08002ec1     .b..............

080067c0 <testbmk13>:
 80067c0:	080062b0 00000000 00000000 080013c1     .b..............

080067d0 <testbmk2>:
 80067d0:	08006420 00000000 00000000 08003f21      d..........!?..

080067e0 <testbmk3>:
 80067e0:	08006408 00000000 00000000 08003e41     .d..........A>..

080067f0 <testbmk4>:
 80067f0:	080063ec 00000000 00000000 08003d91     .c...........=..

08006800 <testbmk5>:
 8006800:	080063cc 00000000 00000000 08003ad1     .c...........:..

08006810 <testbmk6>:
 8006810:	080063ac 00000000 00000000 08002b11     .c...........+..

08006820 <testbmk7>:
 8006820:	08006384 08000411 00000000 08003c61     .c..........a<..

08006830 <testbmk8>:
 8006830:	08006358 00000000 00000000 08003b81     Xc...........;..

08006840 <testbmk9>:
 8006840:	08006334 00000000 00000000 08002a61     4c..........a*..

08006850 <testdyn1>:
 8006850:	080064d8 080004c1 00000000 08004611     .d...........F..

08006860 <testdyn2>:
 8006860:	080064a8 080004a1 00000000 08004511     .d...........E..

08006870 <testdyn3>:
 8006870:	08006480 080004f1 00000000 08003481     .d...........4..

08006880 <testevt1>:
 8006880:	08006578 08000561 00000000 08000b81     xe..a...........

08006890 <testevt2>:
 8006890:	0800655c 08000581 00000000 080046e1     \e...........F..

080068a0 <testevt3>:
 80068a0:	08006548 08000571 00000000 08001c81     He..q...........

080068b0 <testheap1>:
 80068b0:	08006520 08000531 00000000 080035b1      e..1........5..

080068c0 <testmbox1>:
 80068c0:	0800659c 08000591 00000000 08001f11     .e..............

080068d0 <testmsg1>:
 80068d0:	080065bc 00000000 00000000 08002c91     .e...........,..

080068e0 <testmtx1>:
 80068e0:	0800663c 08000651 00000000 08004e81     <f..Q........N..

080068f0 <testmtx4>:
 80068f0:	08006620 08000631 00000000 08004c21      f..1.......!L..

08006900 <testmtx5>:
 8006900:	08006610 08000661 00000000 08003051     .f..a.......Q0..

08006910 <testmtx6>:
 8006910:	080065f8 08000601 00000000 08004b41     .e..........AK..

08006920 <testmtx7>:
 8006920:	080065e0 08000621 00000000 08004a51     .e..!.......QJ..

08006930 <testmtx8>:
 8006930:	080065cc 080005d1 00000000 080049c1     .e...........I..

08006940 <testpools1>:
 8006940:	08006504 08000511 00000000 08000a71     .e..........q...

08006950 <testqueues1>:
 8006950:	08006468 08000471 00000000 08004261     hd..q.......aB..

08006960 <testqueues2>:
 8006960:	08006450 08000441 00000000 08004001     Pd..A........@..

08006970 <testsem1>:
 8006970:	080066b8 08000671 00000000 080050c1     .f..q........P..

08006980 <testsem2>:
 8006980:	080066a4 08000691 00000000 08004f71     .f..........qO..

08006990 <testsem3>:
 8006990:	08006684 08000681 00000000 08001ab1     .f..............

080069a0 <testsem4>:
 80069a0:	08006660 00000000 00000000 080038f1     `f...........8..

080069b0 <testsys1>:
 80069b0:	08006764 00000000 00000000 08002851     dg..........Q(..

080069c0 <testsys2>:
 80069c0:	08006748 00000000 00000000 08000421     Hg..........!...

080069d0 <testsys3>:
 80069d0:	08006734 00000000 00000000 08001311     4g..............

080069e0 <testthd1>:
 80069e0:	08006718 00000000 00000000 08005371     .g..........qS..

080069f0 <testthd2>:
 80069f0:	080066fc 00000000 00000000 08005231     .f..........1R..

08006a00 <testthd3>:
 8006a00:	080066e0 00000000 00000000 08001661     .f..........a...

08006a10 <testthd4>:
 8006a10:	080066d0 00000000 00000000 08002b81     .f...........+..

08006a20 <vmt>:
 8006a20:	08002581 080026a1 08002601 08002721     .%...&...&..!'..
 8006a30:	080025f1 08002711 08002571 08002691     .%...'..q%...&..

08006a40 <wa>:
 8006a40:	20000b40 20000c88 20000dd0 20000f18     @.. ... ... ... 
 8006a50:	20001060                                `.. 
