
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

08000140 <Reset_Handler>:
 8000140:	b672      	cpsid	i
 8000142:	4821      	ldr	r0, [pc, #132]	; (80001c8 <endfiniloop+0x6>)
 8000144:	f380 8809 	msr	PSP, r0
 8000148:	2002      	movs	r0, #2
 800014a:	f380 8814 	msr	CONTROL, r0
 800014e:	f3bf 8f6f 	isb	sy
 8000152:	f007 f875 	bl	8007240 <__early_init>
 8000156:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
 800015a:	491c      	ldr	r1, [pc, #112]	; (80001cc <endfiniloop+0xa>)
 800015c:	4a1c      	ldr	r2, [pc, #112]	; (80001d0 <endfiniloop+0xe>)

0800015e <msloop>:
 800015e:	4291      	cmp	r1, r2
 8000160:	bf3c      	itt	cc
 8000162:	f841 0b04 	strcc.w	r0, [r1], #4
 8000166:	e7fa      	bcc.n	800015e <msloop>
 8000168:	491a      	ldr	r1, [pc, #104]	; (80001d4 <endfiniloop+0x12>)
 800016a:	4a17      	ldr	r2, [pc, #92]	; (80001c8 <endfiniloop+0x6>)

0800016c <psloop>:
 800016c:	4291      	cmp	r1, r2
 800016e:	bf3c      	itt	cc
 8000170:	f841 0b04 	strcc.w	r0, [r1], #4
 8000174:	e7fa      	bcc.n	800016c <psloop>
 8000176:	4918      	ldr	r1, [pc, #96]	; (80001d8 <endfiniloop+0x16>)
 8000178:	4a18      	ldr	r2, [pc, #96]	; (80001dc <endfiniloop+0x1a>)
 800017a:	4b19      	ldr	r3, [pc, #100]	; (80001e0 <endfiniloop+0x1e>)

0800017c <dloop>:
 800017c:	429a      	cmp	r2, r3
 800017e:	bf3e      	ittt	cc
 8000180:	f851 0b04 	ldrcc.w	r0, [r1], #4
 8000184:	f842 0b04 	strcc.w	r0, [r2], #4
 8000188:	e7f8      	bcc.n	800017c <dloop>
 800018a:	2000      	movs	r0, #0
 800018c:	4915      	ldr	r1, [pc, #84]	; (80001e4 <endfiniloop+0x22>)
 800018e:	4a16      	ldr	r2, [pc, #88]	; (80001e8 <endfiniloop+0x26>)

08000190 <bloop>:
 8000190:	4291      	cmp	r1, r2
 8000192:	bf3c      	itt	cc
 8000194:	f841 0b04 	strcc.w	r0, [r1], #4
 8000198:	e7fa      	bcc.n	8000190 <bloop>
 800019a:	f007 f8b1 	bl	8007300 <__late_init>
 800019e:	4c13      	ldr	r4, [pc, #76]	; (80001ec <endfiniloop+0x2a>)
 80001a0:	4d13      	ldr	r5, [pc, #76]	; (80001f0 <endfiniloop+0x2e>)

080001a2 <initloop>:
 80001a2:	42ac      	cmp	r4, r5
 80001a4:	da03      	bge.n	80001ae <endinitloop>
 80001a6:	f854 1b04 	ldr.w	r1, [r4], #4
 80001aa:	4788      	blx	r1
 80001ac:	e7f9      	b.n	80001a2 <initloop>

080001ae <endinitloop>:
 80001ae:	f006 fe1f 	bl	8006df0 <main>
 80001b2:	4c10      	ldr	r4, [pc, #64]	; (80001f4 <endfiniloop+0x32>)
 80001b4:	4d10      	ldr	r5, [pc, #64]	; (80001f8 <endfiniloop+0x36>)

080001b6 <finiloop>:
 80001b6:	42ac      	cmp	r4, r5
 80001b8:	da03      	bge.n	80001c2 <endfiniloop>
 80001ba:	f854 1b04 	ldr.w	r1, [r4], #4
 80001be:	4788      	blx	r1
 80001c0:	e7f9      	b.n	80001b6 <finiloop>

080001c2 <endfiniloop>:
 80001c2:	f007 b895 	b.w	80072f0 <__default_exit>
 80001c6:	0000      	.short	0x0000
 80001c8:	20000800 	.word	0x20000800
 80001cc:	20000000 	.word	0x20000000
 80001d0:	20000400 	.word	0x20000400
 80001d4:	20000400 	.word	0x20000400
 80001d8:	080088c8 	.word	0x080088c8
 80001dc:	20000800 	.word	0x20000800
 80001e0:	20001278 	.word	0x20001278
 80001e4:	20001278 	.word	0x20001278
 80001e8:	20001ff0 	.word	0x20001ff0
 80001ec:	08000140 	.word	0x08000140
 80001f0:	08000140 	.word	0x08000140
 80001f4:	08000140 	.word	0x08000140
 80001f8:	08000140 	.word	0x08000140
 80001fc:	00000000 	.word	0x00000000

08000200 <_port_switch>:
 8000200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000204:	f8c1 d00c 	str.w	sp, [r1, #12]
 8000208:	f8d0 d00c 	ldr.w	sp, [r0, #12]
 800020c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000210 <_port_thread_start>:
 8000210:	2300      	movs	r3, #0
 8000212:	f383 8811 	msr	BASEPRI, r3
 8000216:	4628      	mov	r0, r5
 8000218:	47a0      	blx	r4
 800021a:	2000      	movs	r0, #0
 800021c:	f007 f850 	bl	80072c0 <chThdExit>

08000220 <_port_switch_from_isr>:
 8000220:	f007 f85e 	bl	80072e0 <chSchDoReschedule>

08000224 <_port_exit_from_isr>:
 8000224:	df00      	svc	0
 8000226:	e7fe      	b.n	8000226 <_port_exit_from_isr+0x2>
	...

08000230 <chTMStartMeasurementX.constprop.62>:
 8000230:	4b01      	ldr	r3, [pc, #4]	; (8000238 <chTMStartMeasurementX.constprop.62+0x8>)
 8000232:	685b      	ldr	r3, [r3, #4]
 8000234:	6083      	str	r3, [r0, #8]
 8000236:	4770      	bx	lr
 8000238:	e0001000 	.word	0xe0001000
 800023c:	00000000 	.word	0x00000000

08000240 <chEvtGetAndClearEvents.constprop.44>:
 8000240:	2320      	movs	r3, #32
 8000242:	f383 8811 	msr	BASEPRI, r3
 8000246:	2300      	movs	r3, #0
 8000248:	4a03      	ldr	r2, [pc, #12]	; (8000258 <chEvtGetAndClearEvents.constprop.44+0x18>)
 800024a:	6992      	ldr	r2, [r2, #24]
 800024c:	6b50      	ldr	r0, [r2, #52]	; 0x34
 800024e:	6353      	str	r3, [r2, #52]	; 0x34
 8000250:	f383 8811 	msr	BASEPRI, r3
 8000254:	4770      	bx	lr
 8000256:	bf00      	nop
 8000258:	20001558 	.word	0x20001558
 800025c:	00000000 	.word	0x00000000

08000260 <usb_lld_start_in.constprop.17>:
 8000260:	0080      	lsls	r0, r0, #2
 8000262:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8000266:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 800026a:	6803      	ldr	r3, [r0, #0]
 800026c:	f423 43f0 	bic.w	r3, r3, #30720	; 0x7800
 8000270:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000274:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 8000278:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800027c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000280:	6003      	str	r3, [r0, #0]
 8000282:	4770      	bx	lr
	...

08000290 <tmr>:
 8000290:	2201      	movs	r2, #1
 8000292:	4b01      	ldr	r3, [pc, #4]	; (8000298 <tmr+0x8>)
 8000294:	701a      	strb	r2, [r3, #0]
 8000296:	4770      	bx	lr
 8000298:	20001e40 	.word	0x20001e40
 800029c:	00000000 	.word	0x00000000

080002a0 <_idle_thread>:
 80002a0:	e7fe      	b.n	80002a0 <_idle_thread>
 80002a2:	bf00      	nop
	...

080002b0 <chCoreAlloc>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	2220      	movs	r2, #32
 80002b4:	f382 8811 	msr	BASEPRI, r2
 80002b8:	4908      	ldr	r1, [pc, #32]	; (80002dc <chCoreAlloc+0x2c>)
 80002ba:	4a09      	ldr	r2, [pc, #36]	; (80002e0 <chCoreAlloc+0x30>)
 80002bc:	6808      	ldr	r0, [r1, #0]
 80002be:	6812      	ldr	r2, [r2, #0]
 80002c0:	3307      	adds	r3, #7
 80002c2:	f023 0307 	bic.w	r3, r3, #7
 80002c6:	1a12      	subs	r2, r2, r0
 80002c8:	4293      	cmp	r3, r2
 80002ca:	bf9a      	itte	ls
 80002cc:	181b      	addls	r3, r3, r0
 80002ce:	600b      	strls	r3, [r1, #0]
 80002d0:	2000      	movhi	r0, #0
 80002d2:	2300      	movs	r3, #0
 80002d4:	f383 8811 	msr	BASEPRI, r3
 80002d8:	4770      	bx	lr
 80002da:	bf00      	nop
 80002dc:	2000179c 	.word	0x2000179c
 80002e0:	200016d0 	.word	0x200016d0
	...

080002f0 <get_descriptor>:
 80002f0:	2902      	cmp	r1, #2
 80002f2:	d006      	beq.n	8000302 <get_descriptor+0x12>
 80002f4:	2903      	cmp	r1, #3
 80002f6:	d006      	beq.n	8000306 <get_descriptor+0x16>
 80002f8:	2901      	cmp	r1, #1
 80002fa:	4806      	ldr	r0, [pc, #24]	; (8000314 <get_descriptor+0x24>)
 80002fc:	bf18      	it	ne
 80002fe:	2000      	movne	r0, #0
 8000300:	4770      	bx	lr
 8000302:	4805      	ldr	r0, [pc, #20]	; (8000318 <get_descriptor+0x28>)
 8000304:	4770      	bx	lr
 8000306:	2a03      	cmp	r2, #3
 8000308:	bf9a      	itte	ls
 800030a:	4804      	ldrls	r0, [pc, #16]	; (800031c <get_descriptor+0x2c>)
 800030c:	eb00 00c2 	addls.w	r0, r0, r2, lsl #3
 8000310:	2000      	movhi	r0, #0
 8000312:	4770      	bx	lr
 8000314:	08008670 	.word	0x08008670
 8000318:	08008610 	.word	0x08008610
 800031c:	08008730 	.word	0x08008730

08000320 <bmk12_setup>:
 8000320:	2200      	movs	r2, #0
 8000322:	4b02      	ldr	r3, [pc, #8]	; (800032c <bmk12_setup+0xc>)
 8000324:	609a      	str	r2, [r3, #8]
 8000326:	e9c3 3300 	strd	r3, r3, [r3]
 800032a:	4770      	bx	lr
 800032c:	2000178c 	.word	0x2000178c

08000330 <bmk11_setup>:
 8000330:	2201      	movs	r2, #1
 8000332:	4b02      	ldr	r3, [pc, #8]	; (800033c <bmk11_setup+0xc>)
 8000334:	609a      	str	r2, [r3, #8]
 8000336:	e9c3 3300 	strd	r3, r3, [r3]
 800033a:	4770      	bx	lr
 800033c:	200017a0 	.word	0x200017a0

08000340 <notify>:
 8000340:	4770      	bx	lr
 8000342:	bf00      	nop
	...

08000350 <tmo>:
 8000350:	4770      	bx	lr
 8000352:	bf00      	nop
	...

08000360 <bmk7_setup>:
 8000360:	2200      	movs	r2, #0
 8000362:	4b02      	ldr	r3, [pc, #8]	; (800036c <bmk7_setup+0xc>)
 8000364:	609a      	str	r2, [r3, #8]
 8000366:	e9c3 3300 	strd	r3, r3, [r3]
 800036a:	4770      	bx	lr
 800036c:	200017a0 	.word	0x200017a0

08000370 <sys2_execute>:
 8000370:	2320      	movs	r3, #32
 8000372:	f383 8811 	msr	BASEPRI, r3
 8000376:	b662      	cpsie	i
 8000378:	b672      	cpsid	i
 800037a:	f383 8811 	msr	BASEPRI, r3
 800037e:	b662      	cpsie	i
 8000380:	2300      	movs	r3, #0
 8000382:	f383 8811 	msr	BASEPRI, r3
 8000386:	b662      	cpsie	i
 8000388:	4770      	bx	lr
 800038a:	bf00      	nop
 800038c:	0000      	movs	r0, r0
	...

08000390 <queues2_setup>:
 8000390:	b430      	push	{r4, r5}
 8000392:	2404      	movs	r4, #4
 8000394:	2100      	movs	r1, #0
 8000396:	4a07      	ldr	r2, [pc, #28]	; (80003b4 <queues2_setup+0x24>)
 8000398:	4b07      	ldr	r3, [pc, #28]	; (80003b8 <queues2_setup+0x28>)
 800039a:	4808      	ldr	r0, [pc, #32]	; (80003bc <queues2_setup+0x2c>)
 800039c:	1915      	adds	r5, r2, r4
 800039e:	611d      	str	r5, [r3, #16]
 80003a0:	609c      	str	r4, [r3, #8]
 80003a2:	e9c3 3300 	strd	r3, r3, [r3]
 80003a6:	bc30      	pop	{r4, r5}
 80003a8:	60da      	str	r2, [r3, #12]
 80003aa:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80003ae:	e9c3 0107 	strd	r0, r1, [r3, #28]
 80003b2:	4770      	bx	lr
 80003b4:	200017b0 	.word	0x200017b0
 80003b8:	20000cac 	.word	0x20000cac
 80003bc:	08000341 	.word	0x08000341

080003c0 <queues1_setup>:
 80003c0:	2100      	movs	r1, #0
 80003c2:	4a08      	ldr	r2, [pc, #32]	; (80003e4 <queues1_setup+0x24>)
 80003c4:	4b08      	ldr	r3, [pc, #32]	; (80003e8 <queues1_setup+0x28>)
 80003c6:	4809      	ldr	r0, [pc, #36]	; (80003ec <queues1_setup+0x2c>)
 80003c8:	b410      	push	{r4}
 80003ca:	1d14      	adds	r4, r2, #4
 80003cc:	611c      	str	r4, [r3, #16]
 80003ce:	e9c3 3300 	strd	r3, r3, [r3]
 80003d2:	60da      	str	r2, [r3, #12]
 80003d4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80003d8:	61d8      	str	r0, [r3, #28]
 80003da:	6099      	str	r1, [r3, #8]
 80003dc:	6219      	str	r1, [r3, #32]
 80003de:	bc10      	pop	{r4}
 80003e0:	4770      	bx	lr
 80003e2:	bf00      	nop
 80003e4:	200017b0 	.word	0x200017b0
 80003e8:	20000c14 	.word	0x20000c14
 80003ec:	08000341 	.word	0x08000341

080003f0 <dyn2_setup>:
 80003f0:	2200      	movs	r2, #0
 80003f2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80003f6:	4b02      	ldr	r3, [pc, #8]	; (8000400 <dyn2_setup+0x10>)
 80003f8:	601a      	str	r2, [r3, #0]
 80003fa:	e9c3 1201 	strd	r1, r2, [r3, #4]
 80003fe:	4770      	bx	lr
 8000400:	20001780 	.word	0x20001780
	...

08000410 <dyn1_setup>:
 8000410:	b410      	push	{r4}
 8000412:	2200      	movs	r2, #0
 8000414:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 8000418:	4b06      	ldr	r3, [pc, #24]	; (8000434 <dyn1_setup+0x24>)
 800041a:	4907      	ldr	r1, [pc, #28]	; (8000438 <dyn1_setup+0x28>)
 800041c:	f103 0010 	add.w	r0, r3, #16
 8000420:	e9c1 2400 	strd	r2, r4, [r1]
 8000424:	e9c3 0004 	strd	r0, r0, [r3, #16]
 8000428:	601a      	str	r2, [r3, #0]
 800042a:	60da      	str	r2, [r3, #12]
 800042c:	619a      	str	r2, [r3, #24]
 800042e:	6099      	str	r1, [r3, #8]
 8000430:	bc10      	pop	{r4}
 8000432:	4770      	bx	lr
 8000434:	20001728 	.word	0x20001728
 8000438:	200017b0 	.word	0x200017b0
 800043c:	00000000 	.word	0x00000000

08000440 <dyn3_setup>:
 8000440:	f7ff bfe6 	b.w	8000410 <dyn1_setup>
	...

08000450 <null_provider>:
 8000450:	2000      	movs	r0, #0
 8000452:	4770      	bx	lr
	...

08000460 <pools1_setup>:
 8000460:	2200      	movs	r2, #0
 8000462:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8000466:	4b02      	ldr	r3, [pc, #8]	; (8000470 <pools1_setup+0x10>)
 8000468:	601a      	str	r2, [r3, #0]
 800046a:	e9c3 1201 	strd	r1, r2, [r3, #4]
 800046e:	4770      	bx	lr
 8000470:	20000ca0 	.word	0x20000ca0
	...

08000480 <heap1_setup>:
 8000480:	b410      	push	{r4}
 8000482:	2200      	movs	r2, #0
 8000484:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 8000488:	4b06      	ldr	r3, [pc, #24]	; (80004a4 <heap1_setup+0x24>)
 800048a:	4907      	ldr	r1, [pc, #28]	; (80004a8 <heap1_setup+0x28>)
 800048c:	f103 0010 	add.w	r0, r3, #16
 8000490:	e9c1 2400 	strd	r2, r4, [r1]
 8000494:	e9c3 0004 	strd	r0, r0, [r3, #16]
 8000498:	601a      	str	r2, [r3, #0]
 800049a:	60da      	str	r2, [r3, #12]
 800049c:	619a      	str	r2, [r3, #24]
 800049e:	6099      	str	r1, [r3, #8]
 80004a0:	bc10      	pop	{r4}
 80004a2:	4770      	bx	lr
 80004a4:	20001e20 	.word	0x20001e20
 80004a8:	200017b0 	.word	0x200017b0
 80004ac:	00000000 	.word	0x00000000

080004b0 <evt1_setup>:
 80004b0:	f7ff bec6 	b.w	8000240 <chEvtGetAndClearEvents.constprop.44>
	...

080004c0 <evt3_setup>:
 80004c0:	f7ff bff6 	b.w	80004b0 <evt1_setup>
	...

080004d0 <evt2_setup>:
 80004d0:	f7ff bfee 	b.w	80004b0 <evt1_setup>
	...

080004e0 <mbox1_setup>:
 80004e0:	b430      	push	{r4, r5}
 80004e2:	2000      	movs	r0, #0
 80004e4:	2405      	movs	r4, #5
 80004e6:	4b0a      	ldr	r3, [pc, #40]	; (8000510 <mbox1_setup+0x30>)
 80004e8:	4a0a      	ldr	r2, [pc, #40]	; (8000514 <mbox1_setup+0x34>)
 80004ea:	f103 011c 	add.w	r1, r3, #28
 80004ee:	f102 0514 	add.w	r5, r2, #20
 80004f2:	601a      	str	r2, [r3, #0]
 80004f4:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80004f8:	f103 0210 	add.w	r2, r3, #16
 80004fc:	605d      	str	r5, [r3, #4]
 80004fe:	625c      	str	r4, [r3, #36]	; 0x24
 8000500:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8000504:	bc30      	pop	{r4, r5}
 8000506:	6219      	str	r1, [r3, #32]
 8000508:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800050c:	4770      	bx	lr
 800050e:	bf00      	nop
 8000510:	20000c78 	.word	0x20000c78
 8000514:	200017b0 	.word	0x200017b0
	...

08000520 <mtx8_setup>:
 8000520:	2000      	movs	r0, #0
 8000522:	4a06      	ldr	r2, [pc, #24]	; (800053c <mtx8_setup+0x1c>)
 8000524:	4b06      	ldr	r3, [pc, #24]	; (8000540 <mtx8_setup+0x20>)
 8000526:	4907      	ldr	r1, [pc, #28]	; (8000544 <mtx8_setup+0x24>)
 8000528:	6090      	str	r0, [r2, #8]
 800052a:	e9c2 2200 	strd	r2, r2, [r2]
 800052e:	6098      	str	r0, [r3, #8]
 8000530:	e9c3 3300 	strd	r3, r3, [r3]
 8000534:	e9c1 1100 	strd	r1, r1, [r1]
 8000538:	4770      	bx	lr
 800053a:	bf00      	nop
 800053c:	20000c58 	.word	0x20000c58
 8000540:	20000c68 	.word	0x20000c68
 8000544:	20000c04 	.word	0x20000c04
	...

08000550 <mtx6_setup>:
 8000550:	2100      	movs	r1, #0
 8000552:	4b04      	ldr	r3, [pc, #16]	; (8000564 <mtx6_setup+0x14>)
 8000554:	4a04      	ldr	r2, [pc, #16]	; (8000568 <mtx6_setup+0x18>)
 8000556:	6099      	str	r1, [r3, #8]
 8000558:	e9c3 3300 	strd	r3, r3, [r3]
 800055c:	e9c2 2200 	strd	r2, r2, [r2]
 8000560:	4770      	bx	lr
 8000562:	bf00      	nop
 8000564:	20000c58 	.word	0x20000c58
 8000568:	20000c04 	.word	0x20000c04
 800056c:	00000000 	.word	0x00000000

08000570 <mtx7_setup>:
 8000570:	f7ff bfee 	b.w	8000550 <mtx6_setup>
	...

08000580 <mtx4_setup>:
 8000580:	2100      	movs	r1, #0
 8000582:	4a04      	ldr	r2, [pc, #16]	; (8000594 <mtx4_setup+0x14>)
 8000584:	4b04      	ldr	r3, [pc, #16]	; (8000598 <mtx4_setup+0x18>)
 8000586:	6091      	str	r1, [r2, #8]
 8000588:	e9c2 2200 	strd	r2, r2, [r2]
 800058c:	6099      	str	r1, [r3, #8]
 800058e:	e9c3 3300 	strd	r3, r3, [r3]
 8000592:	4770      	bx	lr
 8000594:	20000c58 	.word	0x20000c58
 8000598:	20000c68 	.word	0x20000c68
 800059c:	00000000 	.word	0x00000000

080005a0 <mtx1_setup>:
 80005a0:	2200      	movs	r2, #0
 80005a2:	4b02      	ldr	r3, [pc, #8]	; (80005ac <mtx1_setup+0xc>)
 80005a4:	609a      	str	r2, [r3, #8]
 80005a6:	e9c3 3300 	strd	r3, r3, [r3]
 80005aa:	4770      	bx	lr
 80005ac:	20000c58 	.word	0x20000c58

080005b0 <mtx5_setup>:
 80005b0:	f7ff bff6 	b.w	80005a0 <mtx1_setup>
	...

080005c0 <sem1_setup>:
 80005c0:	2200      	movs	r2, #0
 80005c2:	4b02      	ldr	r3, [pc, #8]	; (80005cc <sem1_setup+0xc>)
 80005c4:	609a      	str	r2, [r3, #8]
 80005c6:	e9c3 3300 	strd	r3, r3, [r3]
 80005ca:	4770      	bx	lr
 80005cc:	20000cd0 	.word	0x20000cd0

080005d0 <sem3_setup>:
 80005d0:	f7ff bff6 	b.w	80005c0 <sem1_setup>
	...

080005e0 <sem2_setup>:
 80005e0:	f7ff bfee 	b.w	80005c0 <sem1_setup>
	...

080005f0 <test_printn.part.1>:
 80005f0:	b320      	cbz	r0, 800063c <test_printn.part.1+0x4c>
 80005f2:	b570      	push	{r4, r5, r6, lr}
 80005f4:	b084      	sub	sp, #16
 80005f6:	466d      	mov	r5, sp
 80005f8:	4e11      	ldr	r6, [pc, #68]	; (8000640 <test_printn.part.1+0x50>)
 80005fa:	462c      	mov	r4, r5
 80005fc:	e000      	b.n	8000600 <test_printn.part.1+0x10>
 80005fe:	4614      	mov	r4, r2
 8000600:	4622      	mov	r2, r4
 8000602:	fba6 1300 	umull	r1, r3, r6, r0
 8000606:	08db      	lsrs	r3, r3, #3
 8000608:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 800060c:	eba0 0041 	sub.w	r0, r0, r1, lsl #1
 8000610:	f100 0130 	add.w	r1, r0, #48	; 0x30
 8000614:	b2c9      	uxtb	r1, r1
 8000616:	f802 1b01 	strb.w	r1, [r2], #1
 800061a:	4618      	mov	r0, r3
 800061c:	2b00      	cmp	r3, #0
 800061e:	d1ee      	bne.n	80005fe <test_printn.part.1+0xe>
 8000620:	42aa      	cmp	r2, r5
 8000622:	d909      	bls.n	8000638 <test_printn.part.1+0x48>
 8000624:	4e07      	ldr	r6, [pc, #28]	; (8000644 <test_printn.part.1+0x54>)
 8000626:	e001      	b.n	800062c <test_printn.part.1+0x3c>
 8000628:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
 800062c:	6830      	ldr	r0, [r6, #0]
 800062e:	6803      	ldr	r3, [r0, #0]
 8000630:	689b      	ldr	r3, [r3, #8]
 8000632:	4798      	blx	r3
 8000634:	42a5      	cmp	r5, r4
 8000636:	d1f7      	bne.n	8000628 <test_printn.part.1+0x38>
 8000638:	b004      	add	sp, #16
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	4770      	bx	lr
 800063e:	bf00      	nop
 8000640:	cccccccd 	.word	0xcccccccd
 8000644:	200016a8 	.word	0x200016a8
	...

08000650 <test_printn>:
 8000650:	b928      	cbnz	r0, 800065e <test_printn+0xe>
 8000652:	4b04      	ldr	r3, [pc, #16]	; (8000664 <test_printn+0x14>)
 8000654:	2130      	movs	r1, #48	; 0x30
 8000656:	6818      	ldr	r0, [r3, #0]
 8000658:	6803      	ldr	r3, [r0, #0]
 800065a:	689b      	ldr	r3, [r3, #8]
 800065c:	4718      	bx	r3
 800065e:	f7ff bfc7 	b.w	80005f0 <test_printn.part.1>
 8000662:	bf00      	nop
 8000664:	200016a8 	.word	0x200016a8
	...

08000670 <print_line>:
 8000670:	b570      	push	{r4, r5, r6, lr}
 8000672:	244c      	movs	r4, #76	; 0x4c
 8000674:	4d07      	ldr	r5, [pc, #28]	; (8000694 <print_line+0x24>)
 8000676:	6828      	ldr	r0, [r5, #0]
 8000678:	212d      	movs	r1, #45	; 0x2d
 800067a:	6803      	ldr	r3, [r0, #0]
 800067c:	689b      	ldr	r3, [r3, #8]
 800067e:	4798      	blx	r3
 8000680:	3c01      	subs	r4, #1
 8000682:	d1f8      	bne.n	8000676 <print_line+0x6>
 8000684:	6828      	ldr	r0, [r5, #0]
 8000686:	2202      	movs	r2, #2
 8000688:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800068c:	6803      	ldr	r3, [r0, #0]
 800068e:	4902      	ldr	r1, [pc, #8]	; (8000698 <print_line+0x28>)
 8000690:	681b      	ldr	r3, [r3, #0]
 8000692:	4718      	bx	r3
 8000694:	200016a8 	.word	0x200016a8
 8000698:	08007a4c 	.word	0x08007a4c
 800069c:	00000000 	.word	0x00000000

080006a0 <test_terminate_threads>:
 80006a0:	b430      	push	{r4, r5}
 80006a2:	2520      	movs	r5, #32
 80006a4:	2400      	movs	r4, #0
 80006a6:	4b09      	ldr	r3, [pc, #36]	; (80006cc <test_terminate_threads+0x2c>)
 80006a8:	f103 0014 	add.w	r0, r3, #20
 80006ac:	f853 2b04 	ldr.w	r2, [r3], #4
 80006b0:	b13a      	cbz	r2, 80006c2 <test_terminate_threads+0x22>
 80006b2:	f385 8811 	msr	BASEPRI, r5
 80006b6:	7f51      	ldrb	r1, [r2, #29]
 80006b8:	f041 0104 	orr.w	r1, r1, #4
 80006bc:	7751      	strb	r1, [r2, #29]
 80006be:	f384 8811 	msr	BASEPRI, r4
 80006c2:	4283      	cmp	r3, r0
 80006c4:	d1f2      	bne.n	80006ac <test_terminate_threads+0xc>
 80006c6:	bc30      	pop	{r4, r5}
 80006c8:	4770      	bx	lr
 80006ca:	bf00      	nop
 80006cc:	20001e44 	.word	0x20001e44

080006d0 <_test_assert_time_window>:
 80006d0:	b410      	push	{r4}
 80006d2:	2320      	movs	r3, #32
 80006d4:	f383 8811 	msr	BASEPRI, r3
 80006d8:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 80006dc:	2300      	movs	r3, #0
 80006de:	6a64      	ldr	r4, [r4, #36]	; 0x24
 80006e0:	f383 8811 	msr	BASEPRI, r3
 80006e4:	b2a4      	uxth	r4, r4
 80006e6:	1a64      	subs	r4, r4, r1
 80006e8:	1a52      	subs	r2, r2, r1
 80006ea:	4294      	cmp	r4, r2
 80006ec:	db06      	blt.n	80006fc <_test_assert_time_window+0x2c>
 80006ee:	2301      	movs	r3, #1
 80006f0:	4c04      	ldr	r4, [pc, #16]	; (8000704 <_test_assert_time_window+0x34>)
 80006f2:	4905      	ldr	r1, [pc, #20]	; (8000708 <_test_assert_time_window+0x38>)
 80006f4:	4a05      	ldr	r2, [pc, #20]	; (800070c <_test_assert_time_window+0x3c>)
 80006f6:	7023      	strb	r3, [r4, #0]
 80006f8:	700b      	strb	r3, [r1, #0]
 80006fa:	6010      	str	r0, [r2, #0]
 80006fc:	4618      	mov	r0, r3
 80006fe:	bc10      	pop	{r4}
 8000700:	4770      	bx	lr
 8000702:	bf00      	nop
 8000704:	20001e18 	.word	0x20001e18
 8000708:	2000177c 	.word	0x2000177c
 800070c:	20001724 	.word	0x20001724

08000710 <_test_assert_sequence>:
 8000710:	b4f0      	push	{r4, r5, r6, r7}
 8000712:	4e0e      	ldr	r6, [pc, #56]	; (800074c <_test_assert_sequence+0x3c>)
 8000714:	4f0e      	ldr	r7, [pc, #56]	; (8000750 <_test_assert_sequence+0x40>)
 8000716:	3901      	subs	r1, #1
 8000718:	6835      	ldr	r5, [r6, #0]
 800071a:	463b      	mov	r3, r7
 800071c:	e003      	b.n	8000726 <_test_assert_sequence+0x16>
 800071e:	f813 4b01 	ldrb.w	r4, [r3], #1
 8000722:	4294      	cmp	r4, r2
 8000724:	d108      	bne.n	8000738 <_test_assert_sequence+0x28>
 8000726:	429d      	cmp	r5, r3
 8000728:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800072c:	d8f7      	bhi.n	800071e <_test_assert_sequence+0xe>
 800072e:	b91a      	cbnz	r2, 8000738 <_test_assert_sequence+0x28>
 8000730:	6037      	str	r7, [r6, #0]
 8000732:	4610      	mov	r0, r2
 8000734:	bcf0      	pop	{r4, r5, r6, r7}
 8000736:	4770      	bx	lr
 8000738:	2201      	movs	r2, #1
 800073a:	4c06      	ldr	r4, [pc, #24]	; (8000754 <_test_assert_sequence+0x44>)
 800073c:	4906      	ldr	r1, [pc, #24]	; (8000758 <_test_assert_sequence+0x48>)
 800073e:	4b07      	ldr	r3, [pc, #28]	; (800075c <_test_assert_sequence+0x4c>)
 8000740:	7022      	strb	r2, [r4, #0]
 8000742:	6018      	str	r0, [r3, #0]
 8000744:	700a      	strb	r2, [r1, #0]
 8000746:	4610      	mov	r0, r2
 8000748:	bcf0      	pop	{r4, r5, r6, r7}
 800074a:	4770      	bx	lr
 800074c:	20001e68 	.word	0x20001e68
 8000750:	20001e58 	.word	0x20001e58
 8000754:	20001e18 	.word	0x20001e18
 8000758:	2000177c 	.word	0x2000177c
 800075c:	20001724 	.word	0x20001724

08000760 <_test_assert>:
 8000760:	b951      	cbnz	r1, 8000778 <_test_assert+0x18>
 8000762:	2301      	movs	r3, #1
 8000764:	b410      	push	{r4}
 8000766:	4906      	ldr	r1, [pc, #24]	; (8000780 <_test_assert+0x20>)
 8000768:	4c06      	ldr	r4, [pc, #24]	; (8000784 <_test_assert+0x24>)
 800076a:	4a07      	ldr	r2, [pc, #28]	; (8000788 <_test_assert+0x28>)
 800076c:	7023      	strb	r3, [r4, #0]
 800076e:	6010      	str	r0, [r2, #0]
 8000770:	700b      	strb	r3, [r1, #0]
 8000772:	4618      	mov	r0, r3
 8000774:	bc10      	pop	{r4}
 8000776:	4770      	bx	lr
 8000778:	2300      	movs	r3, #0
 800077a:	4618      	mov	r0, r3
 800077c:	4770      	bx	lr
 800077e:	bf00      	nop
 8000780:	2000177c 	.word	0x2000177c
 8000784:	20001e18 	.word	0x20001e18
 8000788:	20001724 	.word	0x20001724
 800078c:	00000000 	.word	0x00000000

08000790 <test_emit_token>:
 8000790:	b410      	push	{r4}
 8000792:	2320      	movs	r3, #32
 8000794:	f383 8811 	msr	BASEPRI, r3
 8000798:	4b04      	ldr	r3, [pc, #16]	; (80007ac <test_emit_token+0x1c>)
 800079a:	2100      	movs	r1, #0
 800079c:	681a      	ldr	r2, [r3, #0]
 800079e:	1c54      	adds	r4, r2, #1
 80007a0:	7010      	strb	r0, [r2, #0]
 80007a2:	601c      	str	r4, [r3, #0]
 80007a4:	f381 8811 	msr	BASEPRI, r1
 80007a8:	bc10      	pop	{r4}
 80007aa:	4770      	bx	lr
 80007ac:	20001e68 	.word	0x20001e68

080007b0 <h3>:
 80007b0:	2043      	movs	r0, #67	; 0x43
 80007b2:	f7ff bfed 	b.w	8000790 <test_emit_token>
 80007b6:	bf00      	nop
	...

080007c0 <h2>:
 80007c0:	2042      	movs	r0, #66	; 0x42
 80007c2:	f7ff bfe5 	b.w	8000790 <test_emit_token>
 80007c6:	bf00      	nop
	...

080007d0 <h1>:
 80007d0:	2041      	movs	r0, #65	; 0x41
 80007d2:	f7ff bfdd 	b.w	8000790 <test_emit_token>
 80007d6:	bf00      	nop
	...

080007e0 <thread.lto_priv.67>:
 80007e0:	7800      	ldrb	r0, [r0, #0]
 80007e2:	f7ff bfd5 	b.w	8000790 <test_emit_token>
 80007e6:	bf00      	nop
	...

080007f0 <thread.lto_priv.69>:
 80007f0:	f7ff bff6 	b.w	80007e0 <thread.lto_priv.67>
	...

08000800 <test_println>:
 8000800:	b570      	push	{r4, r5, r6, lr}
 8000802:	7801      	ldrb	r1, [r0, #0]
 8000804:	b189      	cbz	r1, 800082a <test_println+0x2a>
 8000806:	4604      	mov	r4, r0
 8000808:	4d09      	ldr	r5, [pc, #36]	; (8000830 <test_println+0x30>)
 800080a:	6828      	ldr	r0, [r5, #0]
 800080c:	6803      	ldr	r3, [r0, #0]
 800080e:	689b      	ldr	r3, [r3, #8]
 8000810:	4798      	blx	r3
 8000812:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000816:	2900      	cmp	r1, #0
 8000818:	d1f7      	bne.n	800080a <test_println+0xa>
 800081a:	6828      	ldr	r0, [r5, #0]
 800081c:	2202      	movs	r2, #2
 800081e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000822:	6803      	ldr	r3, [r0, #0]
 8000824:	4903      	ldr	r1, [pc, #12]	; (8000834 <test_println+0x34>)
 8000826:	681b      	ldr	r3, [r3, #0]
 8000828:	4718      	bx	r3
 800082a:	4d01      	ldr	r5, [pc, #4]	; (8000830 <test_println+0x30>)
 800082c:	e7f5      	b.n	800081a <test_println+0x1a>
 800082e:	bf00      	nop
 8000830:	200016a8 	.word	0x200016a8
 8000834:	08007a4c 	.word	0x08007a4c
	...

08000840 <test_print>:
 8000840:	7801      	ldrb	r1, [r0, #0]
 8000842:	b159      	cbz	r1, 800085c <test_print+0x1c>
 8000844:	b538      	push	{r3, r4, r5, lr}
 8000846:	4604      	mov	r4, r0
 8000848:	4d05      	ldr	r5, [pc, #20]	; (8000860 <test_print+0x20>)
 800084a:	6828      	ldr	r0, [r5, #0]
 800084c:	6803      	ldr	r3, [r0, #0]
 800084e:	689b      	ldr	r3, [r3, #8]
 8000850:	4798      	blx	r3
 8000852:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000856:	2900      	cmp	r1, #0
 8000858:	d1f7      	bne.n	800084a <test_print+0xa>
 800085a:	bd38      	pop	{r3, r4, r5, pc}
 800085c:	4770      	bx	lr
 800085e:	bf00      	nop
 8000860:	200016a8 	.word	0x200016a8
	...

08000870 <usb_lld_prepare_receive>:
 8000870:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8000874:	68c9      	ldr	r1, [r1, #12]
 8000876:	698a      	ldr	r2, [r1, #24]
 8000878:	6853      	ldr	r3, [r2, #4]
 800087a:	b133      	cbz	r3, 800088a <usb_lld_prepare_receive+0x1a>
 800087c:	8a49      	ldrh	r1, [r1, #18]
 800087e:	440b      	add	r3, r1
 8000880:	3b01      	subs	r3, #1
 8000882:	fbb3 f3f1 	udiv	r3, r3, r1
 8000886:	8213      	strh	r3, [r2, #16]
 8000888:	4770      	bx	lr
 800088a:	2301      	movs	r3, #1
 800088c:	8213      	strh	r3, [r2, #16]
 800088e:	4770      	bx	lr

08000890 <usb_lld_init_endpoint>:
 8000890:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8000894:	68db      	ldr	r3, [r3, #12]
 8000896:	b4f0      	push	{r4, r5, r6, r7}
 8000898:	681a      	ldr	r2, [r3, #0]
 800089a:	f002 0203 	and.w	r2, r2, #3
 800089e:	3a01      	subs	r2, #1
 80008a0:	2a02      	cmp	r2, #2
 80008a2:	bf96      	itet	ls
 80008a4:	4c29      	ldrls	r4, [pc, #164]	; (800094c <usb_lld_init_endpoint+0xbc>)
 80008a6:	f44f 7200 	movhi.w	r2, #512	; 0x200
 80008aa:	f834 2012 	ldrhls.w	r2, [r4, r2, lsl #1]
 80008ae:	689c      	ldr	r4, [r3, #8]
 80008b0:	b10c      	cbz	r4, 80008b6 <usb_lld_init_endpoint+0x26>
 80008b2:	f042 0220 	orr.w	r2, r2, #32
 80008b6:	68dc      	ldr	r4, [r3, #12]
 80008b8:	b10c      	cbz	r4, 80008be <usb_lld_init_endpoint+0x2e>
 80008ba:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80008be:	f248 0680 	movw	r6, #32896	; 0x8080
 80008c2:	f647 0770 	movw	r7, #30832	; 0x7870
 80008c6:	ea42 0401 	orr.w	r4, r2, r1
 80008ca:	f424 4478 	bic.w	r4, r4, #63488	; 0xf800
 80008ce:	008d      	lsls	r5, r1, #2
 80008d0:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 80008d4:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80008d8:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 80008dc:	4334      	orrs	r4, r6
 80008de:	602c      	str	r4, [r5, #0]
 80008e0:	682c      	ldr	r4, [r5, #0]
 80008e2:	403a      	ands	r2, r7
 80008e4:	4062      	eors	r2, r4
 80008e6:	8a5c      	ldrh	r4, [r3, #18]
 80008e8:	4332      	orrs	r2, r6
 80008ea:	2c3e      	cmp	r4, #62	; 0x3e
 80008ec:	602a      	str	r2, [r5, #0]
 80008ee:	f104 32ff 	add.w	r2, r4, #4294967295	; 0xffffffff
 80008f2:	d822      	bhi.n	800093a <usb_lld_init_endpoint+0xaa>
 80008f4:	f042 0201 	orr.w	r2, r2, #1
 80008f8:	3201      	adds	r2, #1
 80008fa:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80008fe:	0252      	lsls	r2, r2, #9
 8000900:	f402 427c 	and.w	r2, r2, #64512	; 0xfc00
 8000904:	2600      	movs	r6, #0
 8000906:	4f12      	ldr	r7, [pc, #72]	; (8000950 <usb_lld_init_endpoint+0xc0>)
 8000908:	8a1d      	ldrh	r5, [r3, #16]
 800090a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800090c:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 8000910:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8000914:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 8000918:	0049      	lsls	r1, r1, #1
 800091a:	604e      	str	r6, [r1, #4]
 800091c:	60ca      	str	r2, [r1, #12]
 800091e:	f8d0 2080 	ldr.w	r2, [r0, #128]	; 0x80
 8000922:	4415      	add	r5, r2
 8000924:	f8c0 5080 	str.w	r5, [r0, #128]	; 0x80
 8000928:	600a      	str	r2, [r1, #0]
 800092a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
 800092e:	441c      	add	r4, r3
 8000930:	f8c0 4080 	str.w	r4, [r0, #128]	; 0x80
 8000934:	608b      	str	r3, [r1, #8]
 8000936:	bcf0      	pop	{r4, r5, r6, r7}
 8000938:	4770      	bx	lr
 800093a:	f042 021f 	orr.w	r2, r2, #31
 800093e:	3201      	adds	r2, #1
 8000940:	4d04      	ldr	r5, [pc, #16]	; (8000954 <usb_lld_init_endpoint+0xc4>)
 8000942:	1152      	asrs	r2, r2, #5
 8000944:	ea45 2282 	orr.w	r2, r5, r2, lsl #10
 8000948:	b292      	uxth	r2, r2
 800094a:	e7db      	b.n	8000904 <usb_lld_init_endpoint+0x74>
 800094c:	08007460 	.word	0x08007460
 8000950:	40005c00 	.word	0x40005c00
 8000954:	ffff8000 	.word	0xffff8000
	...

08000960 <usb_lld_reset>:
 8000960:	2100      	movs	r1, #0
 8000962:	6843      	ldr	r3, [r0, #4]
 8000964:	b4f0      	push	{r4, r5, r6, r7}
 8000966:	68db      	ldr	r3, [r3, #12]
 8000968:	2780      	movs	r7, #128	; 0x80
 800096a:	428b      	cmp	r3, r1
 800096c:	bf0c      	ite	eq
 800096e:	f44f 461c 	moveq.w	r6, #39936	; 0x9c00
 8000972:	f44f 461e 	movne.w	r6, #40448	; 0x9e00
 8000976:	2540      	movs	r5, #64	; 0x40
 8000978:	4b05      	ldr	r3, [pc, #20]	; (8000990 <usb_lld_reset+0x30>)
 800097a:	4c06      	ldr	r4, [pc, #24]	; (8000994 <usb_lld_reset+0x34>)
 800097c:	6519      	str	r1, [r3, #80]	; 0x50
 800097e:	6459      	str	r1, [r3, #68]	; 0x44
 8000980:	64df      	str	r7, [r3, #76]	; 0x4c
 8000982:	641e      	str	r6, [r3, #64]	; 0x40
 8000984:	f8c0 5080 	str.w	r5, [r0, #128]	; 0x80
 8000988:	60c4      	str	r4, [r0, #12]
 800098a:	bcf0      	pop	{r4, r5, r6, r7}
 800098c:	f7ff bf80 	b.w	8000890 <usb_lld_init_endpoint>
 8000990:	40005c00 	.word	0x40005c00
 8000994:	08007ab0 	.word	0x08007ab0
	...

080009a0 <usbStartTransmitI>:
 80009a0:	2201      	movs	r2, #1
 80009a2:	b570      	push	{r4, r5, r6, lr}
 80009a4:	fa02 f301 	lsl.w	r3, r2, r1
 80009a8:	8904      	ldrh	r4, [r0, #8]
 80009aa:	b29b      	uxth	r3, r3
 80009ac:	ea14 0603 	ands.w	r6, r4, r3
 80009b0:	d001      	beq.n	80009b6 <usbStartTransmitI+0x16>
 80009b2:	4610      	mov	r0, r2
 80009b4:	bd70      	pop	{r4, r5, r6, pc}
 80009b6:	4605      	mov	r5, r0
 80009b8:	4323      	orrs	r3, r4
 80009ba:	4608      	mov	r0, r1
 80009bc:	812b      	strh	r3, [r5, #8]
 80009be:	f7ff fc4f 	bl	8000260 <usb_lld_start_in.constprop.17>
 80009c2:	4630      	mov	r0, r6
 80009c4:	bd70      	pop	{r4, r5, r6, pc}
 80009c6:	bf00      	nop
	...

080009d0 <usbStartReceiveI>:
 80009d0:	2201      	movs	r2, #1
 80009d2:	b470      	push	{r4, r5, r6}
 80009d4:	fa02 f301 	lsl.w	r3, r2, r1
 80009d8:	8945      	ldrh	r5, [r0, #10]
 80009da:	b29b      	uxth	r3, r3
 80009dc:	ea15 0603 	ands.w	r6, r5, r3
 80009e0:	d002      	beq.n	80009e8 <usbStartReceiveI+0x18>
 80009e2:	bc70      	pop	{r4, r5, r6}
 80009e4:	4610      	mov	r0, r2
 80009e6:	4770      	bx	lr
 80009e8:	0089      	lsls	r1, r1, #2
 80009ea:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80009ee:	f501 41b8 	add.w	r1, r1, #23552	; 0x5c00
 80009f2:	680c      	ldr	r4, [r1, #0]
 80009f4:	432b      	orrs	r3, r5
 80009f6:	f424 4490 	bic.w	r4, r4, #18432	; 0x4800
 80009fa:	f024 0470 	bic.w	r4, r4, #112	; 0x70
 80009fe:	f484 5440 	eor.w	r4, r4, #12288	; 0x3000
 8000a02:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 8000a06:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8000a0a:	8143      	strh	r3, [r0, #10]
 8000a0c:	4630      	mov	r0, r6
 8000a0e:	600c      	str	r4, [r1, #0]
 8000a10:	bc70      	pop	{r4, r5, r6}
 8000a12:	4770      	bx	lr
	...

08000a20 <inotify>:
 8000a20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a22:	6a04      	ldr	r4, [r0, #32]
 8000a24:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 8000a28:	6813      	ldr	r3, [r2, #0]
 8000a2a:	7819      	ldrb	r1, [r3, #0]
 8000a2c:	2904      	cmp	r1, #4
 8000a2e:	d000      	beq.n	8000a32 <inotify+0x12>
 8000a30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a32:	7a21      	ldrb	r1, [r4, #8]
 8000a34:	2902      	cmp	r1, #2
 8000a36:	d1fb      	bne.n	8000a30 <inotify+0x10>
 8000a38:	2601      	movs	r6, #1
 8000a3a:	7950      	ldrb	r0, [r2, #5]
 8000a3c:	895a      	ldrh	r2, [r3, #10]
 8000a3e:	fa06 f100 	lsl.w	r1, r6, r0
 8000a42:	ea11 0502 	ands.w	r5, r1, r2
 8000a46:	d1f3      	bne.n	8000a30 <inotify+0x10>
 8000a48:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8000a4c:	68d9      	ldr	r1, [r3, #12]
 8000a4e:	6960      	ldr	r0, [r4, #20]
 8000a50:	e9d4 3206 	ldrd	r3, r2, [r4, #24]
 8000a54:	8a49      	ldrh	r1, [r1, #18]
 8000a56:	1ad3      	subs	r3, r2, r3
 8000a58:	1a1b      	subs	r3, r3, r0
 8000a5a:	4299      	cmp	r1, r3
 8000a5c:	d8e8      	bhi.n	8000a30 <inotify+0x10>
 8000a5e:	f385 8811 	msr	BASEPRI, r5
 8000a62:	fbb3 f3f1 	udiv	r3, r3, r1
 8000a66:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 8000a6a:	fb01 f303 	mul.w	r3, r1, r3
 8000a6e:	6810      	ldr	r0, [r2, #0]
 8000a70:	7951      	ldrb	r1, [r2, #5]
 8000a72:	f104 070c 	add.w	r7, r4, #12
 8000a76:	eb00 0281 	add.w	r2, r0, r1, lsl #2
 8000a7a:	68d2      	ldr	r2, [r2, #12]
 8000a7c:	6992      	ldr	r2, [r2, #24]
 8000a7e:	6053      	str	r3, [r2, #4]
 8000a80:	7016      	strb	r6, [r2, #0]
 8000a82:	e9c2 5702 	strd	r5, r7, [r2, #8]
 8000a86:	f7ff fef3 	bl	8000870 <usb_lld_prepare_receive>
 8000a8a:	2320      	movs	r3, #32
 8000a8c:	f383 8811 	msr	BASEPRI, r3
 8000a90:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8000a94:	7959      	ldrb	r1, [r3, #5]
 8000a96:	6818      	ldr	r0, [r3, #0]
 8000a98:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8000a9c:	f7ff bf98 	b.w	80009d0 <usbStartReceiveI>

08000aa0 <set_address>:
 8000aa0:	f890 3076 	ldrb.w	r3, [r0, #118]	; 0x76
 8000aa4:	6842      	ldr	r2, [r0, #4]
 8000aa6:	f880 307e 	strb.w	r3, [r0, #126]	; 0x7e
 8000aaa:	4906      	ldr	r1, [pc, #24]	; (8000ac4 <set_address+0x24>)
 8000aac:	6812      	ldr	r2, [r2, #0]
 8000aae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000ab2:	b510      	push	{r4, lr}
 8000ab4:	4604      	mov	r4, r0
 8000ab6:	64cb      	str	r3, [r1, #76]	; 0x4c
 8000ab8:	b10a      	cbz	r2, 8000abe <set_address+0x1e>
 8000aba:	2101      	movs	r1, #1
 8000abc:	4790      	blx	r2
 8000abe:	2303      	movs	r3, #3
 8000ac0:	7023      	strb	r3, [r4, #0]
 8000ac2:	bd10      	pop	{r4, pc}
 8000ac4:	40005c00 	.word	0x40005c00
	...

08000ad0 <sduInterruptTransmitted>:
 8000ad0:	4770      	bx	lr
 8000ad2:	bf00      	nop
	...

08000ae0 <sduRequestsHook>:
 8000ae0:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 8000ae4:	4602      	mov	r2, r0
 8000ae6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8000aea:	2b20      	cmp	r3, #32
 8000aec:	d001      	beq.n	8000af2 <sduRequestsHook+0x12>
 8000aee:	2000      	movs	r0, #0
 8000af0:	4770      	bx	lr
 8000af2:	f890 3075 	ldrb.w	r3, [r0, #117]	; 0x75
 8000af6:	2b20      	cmp	r3, #32
 8000af8:	d3f9      	bcc.n	8000aee <sduRequestsHook+0xe>
 8000afa:	2b21      	cmp	r3, #33	; 0x21
 8000afc:	d807      	bhi.n	8000b0e <sduRequestsHook+0x2e>
 8000afe:	2007      	movs	r0, #7
 8000b00:	2100      	movs	r1, #0
 8000b02:	4b07      	ldr	r3, [pc, #28]	; (8000b20 <sduRequestsHook+0x40>)
 8000b04:	e9c2 011b 	strd	r0, r1, [r2, #108]	; 0x6c
 8000b08:	6693      	str	r3, [r2, #104]	; 0x68
 8000b0a:	2001      	movs	r0, #1
 8000b0c:	4770      	bx	lr
 8000b0e:	2b22      	cmp	r3, #34	; 0x22
 8000b10:	d1ed      	bne.n	8000aee <sduRequestsHook+0xe>
 8000b12:	2300      	movs	r3, #0
 8000b14:	2001      	movs	r0, #1
 8000b16:	e9c2 331a 	strd	r3, r3, [r2, #104]	; 0x68
 8000b1a:	6713      	str	r3, [r2, #112]	; 0x70
 8000b1c:	4770      	bx	lr
 8000b1e:	bf00      	nop
 8000b20:	20000c38 	.word	0x20000c38
	...

08000b30 <_port_irq_epilogue>:
 8000b30:	2320      	movs	r3, #32
 8000b32:	f383 8811 	msr	BASEPRI, r3
 8000b36:	4b11      	ldr	r3, [pc, #68]	; (8000b7c <_port_irq_epilogue+0x4c>)
 8000b38:	685b      	ldr	r3, [r3, #4]
 8000b3a:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 8000b3e:	d102      	bne.n	8000b46 <_port_irq_epilogue+0x16>
 8000b40:	f383 8811 	msr	BASEPRI, r3
 8000b44:	4770      	bx	lr
 8000b46:	b480      	push	{r7}
 8000b48:	af00      	add	r7, sp, #0
 8000b4a:	f3ef 8309 	mrs	r3, PSP
 8000b4e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8000b52:	f1a3 0220 	sub.w	r2, r3, #32
 8000b56:	f843 1c04 	str.w	r1, [r3, #-4]
 8000b5a:	f382 8809 	msr	PSP, r2
 8000b5e:	4a08      	ldr	r2, [pc, #32]	; (8000b80 <_port_irq_epilogue+0x50>)
 8000b60:	6811      	ldr	r1, [r2, #0]
 8000b62:	6992      	ldr	r2, [r2, #24]
 8000b64:	6889      	ldr	r1, [r1, #8]
 8000b66:	6892      	ldr	r2, [r2, #8]
 8000b68:	4291      	cmp	r1, r2
 8000b6a:	bf8c      	ite	hi
 8000b6c:	4a05      	ldrhi	r2, [pc, #20]	; (8000b84 <_port_irq_epilogue+0x54>)
 8000b6e:	4a06      	ldrls	r2, [pc, #24]	; (8000b88 <_port_irq_epilogue+0x58>)
 8000b70:	f843 2c08 	str.w	r2, [r3, #-8]
 8000b74:	46bd      	mov	sp, r7
 8000b76:	bc80      	pop	{r7}
 8000b78:	4770      	bx	lr
 8000b7a:	bf00      	nop
 8000b7c:	e000ed00 	.word	0xe000ed00
 8000b80:	20001558 	.word	0x20001558
 8000b84:	08000221 	.word	0x08000221
 8000b88:	08000224 	.word	0x08000224
 8000b8c:	00000000 	.word	0x00000000

08000b90 <Vector8C>:
 8000b90:	f7ff bfce 	b.w	8000b30 <_port_irq_epilogue>
	...

08000ba0 <VectorB0>:
 8000ba0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ba4:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8000ba8:	6923      	ldr	r3, [r4, #16]
 8000baa:	079b      	lsls	r3, r3, #30
 8000bac:	d403      	bmi.n	8000bb6 <VectorB0+0x16>
 8000bae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000bb2:	f7ff bfbd 	b.w	8000b30 <_port_irq_epilogue>
 8000bb6:	2700      	movs	r7, #0
 8000bb8:	2520      	movs	r5, #32
 8000bba:	6127      	str	r7, [r4, #16]
 8000bbc:	f385 8811 	msr	BASEPRI, r5
 8000bc0:	4e1e      	ldr	r6, [pc, #120]	; (8000c3c <VectorB0+0x9c>)
 8000bc2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000bc4:	f8b6 c026 	ldrh.w	ip, [r6, #38]	; 0x26
 8000bc8:	69f3      	ldr	r3, [r6, #28]
 8000bca:	b280      	uxth	r0, r0
 8000bcc:	eba0 010c 	sub.w	r1, r0, ip
 8000bd0:	891a      	ldrh	r2, [r3, #8]
 8000bd2:	b289      	uxth	r1, r1
 8000bd4:	4291      	cmp	r1, r2
 8000bd6:	f106 081c 	add.w	r8, r6, #28
 8000bda:	d31b      	bcc.n	8000c14 <VectorB0+0x74>
 8000bdc:	6819      	ldr	r1, [r3, #0]
 8000bde:	4462      	add	r2, ip
 8000be0:	4541      	cmp	r1, r8
 8000be2:	84f2      	strh	r2, [r6, #38]	; 0x26
 8000be4:	68da      	ldr	r2, [r3, #12]
 8000be6:	f8c1 8004 	str.w	r8, [r1, #4]
 8000bea:	61f1      	str	r1, [r6, #28]
 8000bec:	60df      	str	r7, [r3, #12]
 8000bee:	bf08      	it	eq
 8000bf0:	60e7      	streq	r7, [r4, #12]
 8000bf2:	f387 8811 	msr	BASEPRI, r7
 8000bf6:	6918      	ldr	r0, [r3, #16]
 8000bf8:	4790      	blx	r2
 8000bfa:	f385 8811 	msr	BASEPRI, r5
 8000bfe:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000c00:	f8b6 c026 	ldrh.w	ip, [r6, #38]	; 0x26
 8000c04:	69f3      	ldr	r3, [r6, #28]
 8000c06:	b280      	uxth	r0, r0
 8000c08:	eba0 010c 	sub.w	r1, r0, ip
 8000c0c:	891a      	ldrh	r2, [r3, #8]
 8000c0e:	b289      	uxth	r1, r1
 8000c10:	428a      	cmp	r2, r1
 8000c12:	d9e3      	bls.n	8000bdc <VectorB0+0x3c>
 8000c14:	4543      	cmp	r3, r8
 8000c16:	d00a      	beq.n	8000c2e <VectorB0+0x8e>
 8000c18:	4462      	add	r2, ip
 8000c1a:	1a12      	subs	r2, r2, r0
 8000c1c:	b292      	uxth	r2, r2
 8000c1e:	2a02      	cmp	r2, #2
 8000c20:	bf2c      	ite	cs
 8000c22:	1882      	addcs	r2, r0, r2
 8000c24:	1c82      	addcc	r2, r0, #2
 8000c26:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000c2a:	b292      	uxth	r2, r2
 8000c2c:	635a      	str	r2, [r3, #52]	; 0x34
 8000c2e:	2300      	movs	r3, #0
 8000c30:	f383 8811 	msr	BASEPRI, r3
 8000c34:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c38:	f7ff bf7a 	b.w	8000b30 <_port_irq_epilogue>
 8000c3c:	20001558 	.word	0x20001558

08000c40 <SVC_Handler>:
 8000c40:	b480      	push	{r7}
 8000c42:	af00      	add	r7, sp, #0
 8000c44:	f3ef 8309 	mrs	r3, PSP
 8000c48:	3320      	adds	r3, #32
 8000c4a:	f383 8809 	msr	PSP, r3
 8000c4e:	2300      	movs	r3, #0
 8000c50:	f383 8811 	msr	BASEPRI, r3
 8000c54:	46bd      	mov	sp, r7
 8000c56:	bc80      	pop	{r7}
 8000c58:	4770      	bx	lr
 8000c5a:	bf00      	nop
 8000c5c:	0000      	movs	r0, r0
	...

08000c60 <chPoolAlloc>:
 8000c60:	b508      	push	{r3, lr}
 8000c62:	2220      	movs	r2, #32
 8000c64:	4603      	mov	r3, r0
 8000c66:	f382 8811 	msr	BASEPRI, r2
 8000c6a:	6800      	ldr	r0, [r0, #0]
 8000c6c:	b128      	cbz	r0, 8000c7a <chPoolAlloc+0x1a>
 8000c6e:	6802      	ldr	r2, [r0, #0]
 8000c70:	601a      	str	r2, [r3, #0]
 8000c72:	2300      	movs	r3, #0
 8000c74:	f383 8811 	msr	BASEPRI, r3
 8000c78:	bd08      	pop	{r3, pc}
 8000c7a:	689a      	ldr	r2, [r3, #8]
 8000c7c:	2a00      	cmp	r2, #0
 8000c7e:	d0f8      	beq.n	8000c72 <chPoolAlloc+0x12>
 8000c80:	6858      	ldr	r0, [r3, #4]
 8000c82:	4790      	blx	r2
 8000c84:	2300      	movs	r3, #0
 8000c86:	f383 8811 	msr	BASEPRI, r3
 8000c8a:	bd08      	pop	{r3, pc}
 8000c8c:	0000      	movs	r0, r0
	...

08000c90 <pools1_execute>:
 8000c90:	b570      	push	{r4, r5, r6, lr}
 8000c92:	2205      	movs	r2, #5
 8000c94:	2520      	movs	r5, #32
 8000c96:	2000      	movs	r0, #0
 8000c98:	4b2f      	ldr	r3, [pc, #188]	; (8000d58 <pools1_execute+0xc8>)
 8000c9a:	4c30      	ldr	r4, [pc, #192]	; (8000d5c <pools1_execute+0xcc>)
 8000c9c:	f385 8811 	msr	BASEPRI, r5
 8000ca0:	6821      	ldr	r1, [r4, #0]
 8000ca2:	6023      	str	r3, [r4, #0]
 8000ca4:	6019      	str	r1, [r3, #0]
 8000ca6:	f380 8811 	msr	BASEPRI, r0
 8000caa:	6861      	ldr	r1, [r4, #4]
 8000cac:	3a01      	subs	r2, #1
 8000cae:	440b      	add	r3, r1
 8000cb0:	d1f4      	bne.n	8000c9c <pools1_execute+0xc>
 8000cb2:	2505      	movs	r5, #5
 8000cb4:	4e29      	ldr	r6, [pc, #164]	; (8000d5c <pools1_execute+0xcc>)
 8000cb6:	4630      	mov	r0, r6
 8000cb8:	f7ff ffd2 	bl	8000c60 <chPoolAlloc>
 8000cbc:	1c01      	adds	r1, r0, #0
 8000cbe:	bf18      	it	ne
 8000cc0:	2101      	movne	r1, #1
 8000cc2:	2001      	movs	r0, #1
 8000cc4:	f7ff fd4c 	bl	8000760 <_test_assert>
 8000cc8:	bba0      	cbnz	r0, 8000d34 <pools1_execute+0xa4>
 8000cca:	3d01      	subs	r5, #1
 8000ccc:	d1f3      	bne.n	8000cb6 <pools1_execute+0x26>
 8000cce:	4823      	ldr	r0, [pc, #140]	; (8000d5c <pools1_execute+0xcc>)
 8000cd0:	f7ff ffc6 	bl	8000c60 <chPoolAlloc>
 8000cd4:	fab0 f180 	clz	r1, r0
 8000cd8:	2002      	movs	r0, #2
 8000cda:	0949      	lsrs	r1, r1, #5
 8000cdc:	f7ff fd40 	bl	8000760 <_test_assert>
 8000ce0:	bb40      	cbnz	r0, 8000d34 <pools1_execute+0xa4>
 8000ce2:	2620      	movs	r6, #32
 8000ce4:	4a1e      	ldr	r2, [pc, #120]	; (8000d60 <pools1_execute+0xd0>)
 8000ce6:	4b1c      	ldr	r3, [pc, #112]	; (8000d58 <pools1_execute+0xc8>)
 8000ce8:	f102 0010 	add.w	r0, r2, #16
 8000cec:	f386 8811 	msr	BASEPRI, r6
 8000cf0:	6821      	ldr	r1, [r4, #0]
 8000cf2:	6019      	str	r1, [r3, #0]
 8000cf4:	6023      	str	r3, [r4, #0]
 8000cf6:	f385 8811 	msr	BASEPRI, r5
 8000cfa:	4290      	cmp	r0, r2
 8000cfc:	d002      	beq.n	8000d04 <pools1_execute+0x74>
 8000cfe:	f852 3b04 	ldr.w	r3, [r2], #4
 8000d02:	e7f3      	b.n	8000cec <pools1_execute+0x5c>
 8000d04:	2505      	movs	r5, #5
 8000d06:	4e15      	ldr	r6, [pc, #84]	; (8000d5c <pools1_execute+0xcc>)
 8000d08:	4630      	mov	r0, r6
 8000d0a:	f7ff ffa9 	bl	8000c60 <chPoolAlloc>
 8000d0e:	1c01      	adds	r1, r0, #0
 8000d10:	bf18      	it	ne
 8000d12:	2101      	movne	r1, #1
 8000d14:	2003      	movs	r0, #3
 8000d16:	f7ff fd23 	bl	8000760 <_test_assert>
 8000d1a:	b958      	cbnz	r0, 8000d34 <pools1_execute+0xa4>
 8000d1c:	3d01      	subs	r5, #1
 8000d1e:	d1f3      	bne.n	8000d08 <pools1_execute+0x78>
 8000d20:	480e      	ldr	r0, [pc, #56]	; (8000d5c <pools1_execute+0xcc>)
 8000d22:	f7ff ff9d 	bl	8000c60 <chPoolAlloc>
 8000d26:	fab0 f180 	clz	r1, r0
 8000d2a:	2004      	movs	r0, #4
 8000d2c:	0949      	lsrs	r1, r1, #5
 8000d2e:	f7ff fd17 	bl	8000760 <_test_assert>
 8000d32:	b100      	cbz	r0, 8000d36 <pools1_execute+0xa6>
 8000d34:	bd70      	pop	{r4, r5, r6, pc}
 8000d36:	2210      	movs	r2, #16
 8000d38:	4b0a      	ldr	r3, [pc, #40]	; (8000d64 <pools1_execute+0xd4>)
 8000d3a:	4808      	ldr	r0, [pc, #32]	; (8000d5c <pools1_execute+0xcc>)
 8000d3c:	e9c4 5200 	strd	r5, r2, [r4]
 8000d40:	60a3      	str	r3, [r4, #8]
 8000d42:	f7ff ff8d 	bl	8000c60 <chPoolAlloc>
 8000d46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000d4a:	fab0 f180 	clz	r1, r0
 8000d4e:	2005      	movs	r0, #5
 8000d50:	40c1      	lsrs	r1, r0
 8000d52:	f7ff bd05 	b.w	8000760 <_test_assert>
 8000d56:	bf00      	nop
 8000d58:	200017b0 	.word	0x200017b0
 8000d5c:	20000ca0 	.word	0x20000ca0
 8000d60:	08008774 	.word	0x08008774
 8000d64:	08000451 	.word	0x08000451
	...

08000d70 <chEvtUnregister>:
 8000d70:	2320      	movs	r3, #32
 8000d72:	f383 8811 	msr	BASEPRI, r3
 8000d76:	4602      	mov	r2, r0
 8000d78:	e002      	b.n	8000d80 <chEvtUnregister+0x10>
 8000d7a:	428b      	cmp	r3, r1
 8000d7c:	d007      	beq.n	8000d8e <chEvtUnregister+0x1e>
 8000d7e:	461a      	mov	r2, r3
 8000d80:	6813      	ldr	r3, [r2, #0]
 8000d82:	4283      	cmp	r3, r0
 8000d84:	d1f9      	bne.n	8000d7a <chEvtUnregister+0xa>
 8000d86:	2300      	movs	r3, #0
 8000d88:	f383 8811 	msr	BASEPRI, r3
 8000d8c:	4770      	bx	lr
 8000d8e:	680b      	ldr	r3, [r1, #0]
 8000d90:	6013      	str	r3, [r2, #0]
 8000d92:	2300      	movs	r3, #0
 8000d94:	f383 8811 	msr	BASEPRI, r3
 8000d98:	4770      	bx	lr
 8000d9a:	bf00      	nop
 8000d9c:	0000      	movs	r0, r0
	...

08000da0 <evt1_execute>:
 8000da0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000da4:	4c33      	ldr	r4, [pc, #204]	; (8000e74 <evt1_execute+0xd4>)
 8000da6:	b08a      	sub	sp, #40	; 0x28
 8000da8:	f04f 0c20 	mov.w	ip, #32
 8000dac:	6024      	str	r4, [r4, #0]
 8000dae:	f38c 8811 	msr	BASEPRI, ip
 8000db2:	2701      	movs	r7, #1
 8000db4:	2300      	movs	r3, #0
 8000db6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000dba:	4a2f      	ldr	r2, [pc, #188]	; (8000e78 <evt1_execute+0xd8>)
 8000dbc:	6826      	ldr	r6, [r4, #0]
 8000dbe:	ad0a      	add	r5, sp, #40	; 0x28
 8000dc0:	6991      	ldr	r1, [r2, #24]
 8000dc2:	f845 6d14 	str.w	r6, [r5, #-20]!
 8000dc6:	9106      	str	r1, [sp, #24]
 8000dc8:	6025      	str	r5, [r4, #0]
 8000dca:	e9cd 7307 	strd	r7, r3, [sp, #28]
 8000dce:	9009      	str	r0, [sp, #36]	; 0x24
 8000dd0:	f383 8811 	msr	BASEPRI, r3
 8000dd4:	f38c 8811 	msr	BASEPRI, ip
 8000dd8:	f04f 0802 	mov.w	r8, #2
 8000ddc:	6991      	ldr	r1, [r2, #24]
 8000dde:	6822      	ldr	r2, [r4, #0]
 8000de0:	ae0a      	add	r6, sp, #40	; 0x28
 8000de2:	f846 2d28 	str.w	r2, [r6, #-40]!
 8000de6:	9101      	str	r1, [sp, #4]
 8000de8:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8000dec:	6026      	str	r6, [r4, #0]
 8000dee:	f8cd 8008 	str.w	r8, [sp, #8]
 8000df2:	f383 8811 	msr	BASEPRI, r3
 8000df6:	6821      	ldr	r1, [r4, #0]
 8000df8:	4638      	mov	r0, r7
 8000dfa:	1b09      	subs	r1, r1, r4
 8000dfc:	bf18      	it	ne
 8000dfe:	2101      	movne	r1, #1
 8000e00:	f7ff fcae 	bl	8000760 <_test_assert>
 8000e04:	b110      	cbz	r0, 8000e0c <evt1_execute+0x6c>
 8000e06:	b00a      	add	sp, #40	; 0x28
 8000e08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e0c:	4629      	mov	r1, r5
 8000e0e:	4620      	mov	r0, r4
 8000e10:	f7ff ffae 	bl	8000d70 <chEvtUnregister>
 8000e14:	6821      	ldr	r1, [r4, #0]
 8000e16:	4640      	mov	r0, r8
 8000e18:	1b09      	subs	r1, r1, r4
 8000e1a:	bf18      	it	ne
 8000e1c:	2101      	movne	r1, #1
 8000e1e:	f7ff fc9f 	bl	8000760 <_test_assert>
 8000e22:	2800      	cmp	r0, #0
 8000e24:	d1ef      	bne.n	8000e06 <evt1_execute+0x66>
 8000e26:	4631      	mov	r1, r6
 8000e28:	4620      	mov	r0, r4
 8000e2a:	f7ff ffa1 	bl	8000d70 <chEvtUnregister>
 8000e2e:	6821      	ldr	r1, [r4, #0]
 8000e30:	2003      	movs	r0, #3
 8000e32:	1b09      	subs	r1, r1, r4
 8000e34:	fab1 f181 	clz	r1, r1
 8000e38:	0949      	lsrs	r1, r1, #5
 8000e3a:	f7ff fc91 	bl	8000760 <_test_assert>
 8000e3e:	2800      	cmp	r0, #0
 8000e40:	d1e1      	bne.n	8000e06 <evt1_execute+0x66>
 8000e42:	4604      	mov	r4, r0
 8000e44:	2507      	movs	r5, #7
 8000e46:	4e0d      	ldr	r6, [pc, #52]	; (8000e7c <evt1_execute+0xdc>)
 8000e48:	fa25 f304 	lsr.w	r3, r5, r4
 8000e4c:	07db      	lsls	r3, r3, #31
 8000e4e:	fa07 f204 	lsl.w	r2, r7, r4
 8000e52:	d50d      	bpl.n	8000e70 <evt1_execute+0xd0>
 8000e54:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8000e58:	4620      	mov	r0, r4
 8000e5a:	ea25 0502 	bic.w	r5, r5, r2
 8000e5e:	3401      	adds	r4, #1
 8000e60:	4798      	blx	r3
 8000e62:	2d00      	cmp	r5, #0
 8000e64:	d1f0      	bne.n	8000e48 <evt1_execute+0xa8>
 8000e66:	4906      	ldr	r1, [pc, #24]	; (8000e80 <evt1_execute+0xe0>)
 8000e68:	2004      	movs	r0, #4
 8000e6a:	f7ff fc51 	bl	8000710 <_test_assert_sequence>
 8000e6e:	e7ca      	b.n	8000e06 <evt1_execute+0x66>
 8000e70:	3401      	adds	r4, #1
 8000e72:	e7e9      	b.n	8000e48 <evt1_execute+0xa8>
 8000e74:	20000c0c 	.word	0x20000c0c
 8000e78:	20001558 	.word	0x20001558
 8000e7c:	08007b40 	.word	0x08007b40
 8000e80:	08007b50 	.word	0x08007b50
	...

08000e90 <chTMStopMeasurementX>:
 8000e90:	4b10      	ldr	r3, [pc, #64]	; (8000ed4 <chTMStopMeasurementX+0x44>)
 8000e92:	4a11      	ldr	r2, [pc, #68]	; (8000ed8 <chTMStopMeasurementX+0x48>)
 8000e94:	685b      	ldr	r3, [r3, #4]
 8000e96:	6881      	ldr	r1, [r0, #8]
 8000e98:	6f12      	ldr	r2, [r2, #112]	; 0x70
 8000e9a:	1a5b      	subs	r3, r3, r1
 8000e9c:	1a9b      	subs	r3, r3, r2
 8000e9e:	6841      	ldr	r1, [r0, #4]
 8000ea0:	68c2      	ldr	r2, [r0, #12]
 8000ea2:	e92d 0830 	stmdb	sp!, {r4, r5, fp}
 8000ea6:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
 8000eaa:	eb14 0b03 	adds.w	fp, r4, r3
 8000eae:	f145 0c00 	adc.w	ip, r5, #0
 8000eb2:	3201      	adds	r2, #1
 8000eb4:	428b      	cmp	r3, r1
 8000eb6:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8000eba:	e9c0 bc04 	strd	fp, ip, [r0, #16]
 8000ebe:	d806      	bhi.n	8000ece <chTMStopMeasurementX+0x3e>
 8000ec0:	6802      	ldr	r2, [r0, #0]
 8000ec2:	4293      	cmp	r3, r2
 8000ec4:	bf38      	it	cc
 8000ec6:	6003      	strcc	r3, [r0, #0]
 8000ec8:	e8bd 0830 	ldmia.w	sp!, {r4, r5, fp}
 8000ecc:	4770      	bx	lr
 8000ece:	6043      	str	r3, [r0, #4]
 8000ed0:	e7fa      	b.n	8000ec8 <chTMStopMeasurementX+0x38>
 8000ed2:	bf00      	nop
 8000ed4:	e0001000 	.word	0xe0001000
 8000ed8:	20001558 	.word	0x20001558
 8000edc:	00000000 	.word	0x00000000

08000ee0 <wakeup>:
 8000ee0:	2320      	movs	r3, #32
 8000ee2:	f383 8811 	msr	BASEPRI, r3
 8000ee6:	7f03      	ldrb	r3, [r0, #28]
 8000ee8:	2b07      	cmp	r3, #7
 8000eea:	d80e      	bhi.n	8000f0a <wakeup+0x2a>
 8000eec:	e8df f003 	tbb	[pc, r3]
 8000ef0:	230d0d27 	.word	0x230d0d27
 8000ef4:	080d0408 	.word	0x080d0408
 8000ef8:	6a02      	ldr	r2, [r0, #32]
 8000efa:	6893      	ldr	r3, [r2, #8]
 8000efc:	3301      	adds	r3, #1
 8000efe:	6093      	str	r3, [r2, #8]
 8000f00:	e9d0 2300 	ldrd	r2, r3, [r0]
 8000f04:	601a      	str	r2, [r3, #0]
 8000f06:	6802      	ldr	r2, [r0, #0]
 8000f08:	6053      	str	r3, [r2, #4]
 8000f0a:	b410      	push	{r4}
 8000f0c:	2200      	movs	r2, #0
 8000f0e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000f12:	6881      	ldr	r1, [r0, #8]
 8000f14:	4b0c      	ldr	r3, [pc, #48]	; (8000f48 <wakeup+0x68>)
 8000f16:	6204      	str	r4, [r0, #32]
 8000f18:	7702      	strb	r2, [r0, #28]
 8000f1a:	681b      	ldr	r3, [r3, #0]
 8000f1c:	689a      	ldr	r2, [r3, #8]
 8000f1e:	428a      	cmp	r2, r1
 8000f20:	d2fb      	bcs.n	8000f1a <wakeup+0x3a>
 8000f22:	685a      	ldr	r2, [r3, #4]
 8000f24:	2100      	movs	r1, #0
 8000f26:	e9c0 3200 	strd	r3, r2, [r0]
 8000f2a:	6010      	str	r0, [r2, #0]
 8000f2c:	6058      	str	r0, [r3, #4]
 8000f2e:	f381 8811 	msr	BASEPRI, r1
 8000f32:	bc10      	pop	{r4}
 8000f34:	4770      	bx	lr
 8000f36:	2200      	movs	r2, #0
 8000f38:	6a03      	ldr	r3, [r0, #32]
 8000f3a:	601a      	str	r2, [r3, #0]
 8000f3c:	e7e5      	b.n	8000f0a <wakeup+0x2a>
 8000f3e:	2300      	movs	r3, #0
 8000f40:	f383 8811 	msr	BASEPRI, r3
 8000f44:	4770      	bx	lr
 8000f46:	bf00      	nop
 8000f48:	20001558 	.word	0x20001558
 8000f4c:	00000000 	.word	0x00000000

08000f50 <chSchReadyI>:
 8000f50:	4601      	mov	r1, r0
 8000f52:	2200      	movs	r2, #0
 8000f54:	4b06      	ldr	r3, [pc, #24]	; (8000f70 <chSchReadyI+0x20>)
 8000f56:	6880      	ldr	r0, [r0, #8]
 8000f58:	770a      	strb	r2, [r1, #28]
 8000f5a:	681b      	ldr	r3, [r3, #0]
 8000f5c:	689a      	ldr	r2, [r3, #8]
 8000f5e:	4282      	cmp	r2, r0
 8000f60:	d2fb      	bcs.n	8000f5a <chSchReadyI+0xa>
 8000f62:	685a      	ldr	r2, [r3, #4]
 8000f64:	4608      	mov	r0, r1
 8000f66:	e9c1 3200 	strd	r3, r2, [r1]
 8000f6a:	6011      	str	r1, [r2, #0]
 8000f6c:	6059      	str	r1, [r3, #4]
 8000f6e:	4770      	bx	lr
 8000f70:	20001558 	.word	0x20001558
	...

08000f80 <chCondSignalI.constprop.51>:
 8000f80:	4b07      	ldr	r3, [pc, #28]	; (8000fa0 <chCondSignalI.constprop.51+0x20>)
 8000f82:	681a      	ldr	r2, [r3, #0]
 8000f84:	429a      	cmp	r2, r3
 8000f86:	d009      	beq.n	8000f9c <chCondSignalI.constprop.51+0x1c>
 8000f88:	b410      	push	{r4}
 8000f8a:	2400      	movs	r4, #0
 8000f8c:	6811      	ldr	r1, [r2, #0]
 8000f8e:	4610      	mov	r0, r2
 8000f90:	604b      	str	r3, [r1, #4]
 8000f92:	6019      	str	r1, [r3, #0]
 8000f94:	6214      	str	r4, [r2, #32]
 8000f96:	bc10      	pop	{r4}
 8000f98:	f7ff bfda 	b.w	8000f50 <chSchReadyI>
 8000f9c:	4770      	bx	lr
 8000f9e:	bf00      	nop
 8000fa0:	20000c04 	.word	0x20000c04
	...

08000fb0 <chIQPutI>:
 8000fb0:	b510      	push	{r4, lr}
 8000fb2:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 8000fb6:	42a2      	cmp	r2, r4
 8000fb8:	6883      	ldr	r3, [r0, #8]
 8000fba:	d01d      	beq.n	8000ff8 <chIQPutI+0x48>
 8000fbc:	3301      	adds	r3, #1
 8000fbe:	1c54      	adds	r4, r2, #1
 8000fc0:	6083      	str	r3, [r0, #8]
 8000fc2:	6144      	str	r4, [r0, #20]
 8000fc4:	7011      	strb	r1, [r2, #0]
 8000fc6:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
 8000fca:	429a      	cmp	r2, r3
 8000fcc:	d20d      	bcs.n	8000fea <chIQPutI+0x3a>
 8000fce:	6802      	ldr	r2, [r0, #0]
 8000fd0:	4290      	cmp	r0, r2
 8000fd2:	d00f      	beq.n	8000ff4 <chIQPutI+0x44>
 8000fd4:	4603      	mov	r3, r0
 8000fd6:	2400      	movs	r4, #0
 8000fd8:	6811      	ldr	r1, [r2, #0]
 8000fda:	4610      	mov	r0, r2
 8000fdc:	6019      	str	r1, [r3, #0]
 8000fde:	604b      	str	r3, [r1, #4]
 8000fe0:	6214      	str	r4, [r2, #32]
 8000fe2:	f7ff ffb5 	bl	8000f50 <chSchReadyI>
 8000fe6:	4620      	mov	r0, r4
 8000fe8:	bd10      	pop	{r4, pc}
 8000fea:	6802      	ldr	r2, [r0, #0]
 8000fec:	68c3      	ldr	r3, [r0, #12]
 8000fee:	4290      	cmp	r0, r2
 8000ff0:	6143      	str	r3, [r0, #20]
 8000ff2:	d1ef      	bne.n	8000fd4 <chIQPutI+0x24>
 8000ff4:	2000      	movs	r0, #0
 8000ff6:	bd10      	pop	{r4, pc}
 8000ff8:	2b00      	cmp	r3, #0
 8000ffa:	d0df      	beq.n	8000fbc <chIQPutI+0xc>
 8000ffc:	f06f 0003 	mvn.w	r0, #3
 8001000:	bd10      	pop	{r4, pc}
 8001002:	bf00      	nop
	...

08001010 <chOQGetI.constprop.22>:
 8001010:	b538      	push	{r3, r4, r5, lr}
 8001012:	4b11      	ldr	r3, [pc, #68]	; (8001058 <chOQGetI.constprop.22+0x48>)
 8001014:	e9d3 0105 	ldrd	r0, r1, [r3, #20]
 8001018:	4288      	cmp	r0, r1
 800101a:	689a      	ldr	r2, [r3, #8]
 800101c:	d017      	beq.n	800104e <chOQGetI.constprop.22+0x3e>
 800101e:	691d      	ldr	r5, [r3, #16]
 8001020:	1c48      	adds	r0, r1, #1
 8001022:	3201      	adds	r2, #1
 8001024:	609a      	str	r2, [r3, #8]
 8001026:	6198      	str	r0, [r3, #24]
 8001028:	42a8      	cmp	r0, r5
 800102a:	780c      	ldrb	r4, [r1, #0]
 800102c:	d20c      	bcs.n	8001048 <chOQGetI.constprop.22+0x38>
 800102e:	681a      	ldr	r2, [r3, #0]
 8001030:	429a      	cmp	r2, r3
 8001032:	d007      	beq.n	8001044 <chOQGetI.constprop.22+0x34>
 8001034:	2500      	movs	r5, #0
 8001036:	6811      	ldr	r1, [r2, #0]
 8001038:	4610      	mov	r0, r2
 800103a:	604b      	str	r3, [r1, #4]
 800103c:	6019      	str	r1, [r3, #0]
 800103e:	6215      	str	r5, [r2, #32]
 8001040:	f7ff ff86 	bl	8000f50 <chSchReadyI>
 8001044:	4620      	mov	r0, r4
 8001046:	bd38      	pop	{r3, r4, r5, pc}
 8001048:	68da      	ldr	r2, [r3, #12]
 800104a:	619a      	str	r2, [r3, #24]
 800104c:	e7ef      	b.n	800102e <chOQGetI.constprop.22+0x1e>
 800104e:	2a00      	cmp	r2, #0
 8001050:	d0e5      	beq.n	800101e <chOQGetI.constprop.22+0xe>
 8001052:	f06f 0002 	mvn.w	r0, #2
 8001056:	bd38      	pop	{r3, r4, r5, pc}
 8001058:	20000cac 	.word	0x20000cac
 800105c:	00000000 	.word	0x00000000

08001060 <chEvtSignalI>:
 8001060:	4603      	mov	r3, r0
 8001062:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8001064:	7f00      	ldrb	r0, [r0, #28]
 8001066:	4311      	orrs	r1, r2
 8001068:	280a      	cmp	r0, #10
 800106a:	6359      	str	r1, [r3, #52]	; 0x34
 800106c:	d00a      	beq.n	8001084 <chEvtSignalI+0x24>
 800106e:	280b      	cmp	r0, #11
 8001070:	d000      	beq.n	8001074 <chEvtSignalI+0x14>
 8001072:	4770      	bx	lr
 8001074:	6a1a      	ldr	r2, [r3, #32]
 8001076:	438a      	bics	r2, r1
 8001078:	d1fb      	bne.n	8001072 <chEvtSignalI+0x12>
 800107a:	2200      	movs	r2, #0
 800107c:	4618      	mov	r0, r3
 800107e:	621a      	str	r2, [r3, #32]
 8001080:	f7ff bf66 	b.w	8000f50 <chSchReadyI>
 8001084:	6a1a      	ldr	r2, [r3, #32]
 8001086:	4211      	tst	r1, r2
 8001088:	d1f7      	bne.n	800107a <chEvtSignalI+0x1a>
 800108a:	4770      	bx	lr
 800108c:	0000      	movs	r0, r0
	...

08001090 <chEvtBroadcastFlagsI>:
 8001090:	b570      	push	{r4, r5, r6, lr}
 8001092:	6804      	ldr	r4, [r0, #0]
 8001094:	42a0      	cmp	r0, r4
 8001096:	d00f      	beq.n	80010b8 <chEvtBroadcastFlagsI+0x28>
 8001098:	4606      	mov	r6, r0
 800109a:	460d      	mov	r5, r1
 800109c:	68e3      	ldr	r3, [r4, #12]
 800109e:	432b      	orrs	r3, r5
 80010a0:	60e3      	str	r3, [r4, #12]
 80010a2:	b115      	cbz	r5, 80010aa <chEvtBroadcastFlagsI+0x1a>
 80010a4:	6922      	ldr	r2, [r4, #16]
 80010a6:	4213      	tst	r3, r2
 80010a8:	d003      	beq.n	80010b2 <chEvtBroadcastFlagsI+0x22>
 80010aa:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 80010ae:	f7ff ffd7 	bl	8001060 <chEvtSignalI>
 80010b2:	6824      	ldr	r4, [r4, #0]
 80010b4:	42a6      	cmp	r6, r4
 80010b6:	d1f1      	bne.n	800109c <chEvtBroadcastFlagsI+0xc>
 80010b8:	bd70      	pop	{r4, r5, r6, pc}
 80010ba:	bf00      	nop
 80010bc:	0000      	movs	r0, r0
	...

080010c0 <sduDataReceived>:
 80010c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010c2:	f101 0311 	add.w	r3, r1, #17
 80010c6:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
 80010ca:	b1bc      	cbz	r4, 80010fc <sduDataReceived+0x3c>
 80010cc:	4607      	mov	r7, r0
 80010ce:	460d      	mov	r5, r1
 80010d0:	2620      	movs	r6, #32
 80010d2:	f386 8811 	msr	BASEPRI, r6
 80010d6:	2104      	movs	r1, #4
 80010d8:	1860      	adds	r0, r4, r1
 80010da:	f7ff ffd9 	bl	8001090 <chEvtBroadcastFlagsI>
 80010de:	e9d4 0206 	ldrd	r0, r2, [r4, #24]
 80010e2:	eb07 0c85 	add.w	ip, r7, r5, lsl #2
 80010e6:	f8dc 100c 	ldr.w	r1, [ip, #12]
 80010ea:	6963      	ldr	r3, [r4, #20]
 80010ec:	8a49      	ldrh	r1, [r1, #18]
 80010ee:	1a12      	subs	r2, r2, r0
 80010f0:	1ad3      	subs	r3, r2, r3
 80010f2:	4299      	cmp	r1, r3
 80010f4:	d903      	bls.n	80010fe <sduDataReceived+0x3e>
 80010f6:	2300      	movs	r3, #0
 80010f8:	f383 8811 	msr	BASEPRI, r3
 80010fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010fe:	2000      	movs	r0, #0
 8001100:	f380 8811 	msr	BASEPRI, r0
 8001104:	fbb3 f3f1 	udiv	r3, r3, r1
 8001108:	f04f 0e01 	mov.w	lr, #1
 800110c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8001110:	fb01 f303 	mul.w	r3, r1, r3
 8001114:	6992      	ldr	r2, [r2, #24]
 8001116:	340c      	adds	r4, #12
 8001118:	e9c2 3001 	strd	r3, r0, [r2, #4]
 800111c:	4629      	mov	r1, r5
 800111e:	60d4      	str	r4, [r2, #12]
 8001120:	f882 e000 	strb.w	lr, [r2]
 8001124:	4638      	mov	r0, r7
 8001126:	f7ff fba3 	bl	8000870 <usb_lld_prepare_receive>
 800112a:	f386 8811 	msr	BASEPRI, r6
 800112e:	4629      	mov	r1, r5
 8001130:	f7ff fc4e 	bl	80009d0 <usbStartReceiveI>
 8001134:	2300      	movs	r3, #0
 8001136:	f383 8811 	msr	BASEPRI, r3
 800113a:	e7df      	b.n	80010fc <sduDataReceived+0x3c>
 800113c:	0000      	movs	r0, r0
	...

08001140 <chMtxUnlockS>:
 8001140:	4a12      	ldr	r2, [pc, #72]	; (800118c <chMtxUnlockS+0x4c>)
 8001142:	b430      	push	{r4, r5}
 8001144:	6804      	ldr	r4, [r0, #0]
 8001146:	68c3      	ldr	r3, [r0, #12]
 8001148:	6995      	ldr	r5, [r2, #24]
 800114a:	4284      	cmp	r4, r0
 800114c:	63ab      	str	r3, [r5, #56]	; 0x38
 800114e:	d018      	beq.n	8001182 <chMtxUnlockS+0x42>
 8001150:	4601      	mov	r1, r0
 8001152:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 8001154:	b14b      	cbz	r3, 800116a <chMtxUnlockS+0x2a>
 8001156:	681a      	ldr	r2, [r3, #0]
 8001158:	4293      	cmp	r3, r2
 800115a:	d003      	beq.n	8001164 <chMtxUnlockS+0x24>
 800115c:	6892      	ldr	r2, [r2, #8]
 800115e:	4290      	cmp	r0, r2
 8001160:	bf38      	it	cc
 8001162:	4610      	movcc	r0, r2
 8001164:	68db      	ldr	r3, [r3, #12]
 8001166:	2b00      	cmp	r3, #0
 8001168:	d1f5      	bne.n	8001156 <chMtxUnlockS+0x16>
 800116a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800116c:	6823      	ldr	r3, [r4, #0]
 800116e:	60a8      	str	r0, [r5, #8]
 8001170:	600b      	str	r3, [r1, #0]
 8001172:	4620      	mov	r0, r4
 8001174:	6059      	str	r1, [r3, #4]
 8001176:	e9c1 4202 	strd	r4, r2, [r1, #8]
 800117a:	63a1      	str	r1, [r4, #56]	; 0x38
 800117c:	bc30      	pop	{r4, r5}
 800117e:	f7ff bee7 	b.w	8000f50 <chSchReadyI>
 8001182:	2300      	movs	r3, #0
 8001184:	60a3      	str	r3, [r4, #8]
 8001186:	bc30      	pop	{r4, r5}
 8001188:	4770      	bx	lr
 800118a:	bf00      	nop
 800118c:	20001558 	.word	0x20001558

08001190 <chSemSignalI>:
 8001190:	6883      	ldr	r3, [r0, #8]
 8001192:	3301      	adds	r3, #1
 8001194:	2b00      	cmp	r3, #0
 8001196:	6083      	str	r3, [r0, #8]
 8001198:	dd00      	ble.n	800119c <chSemSignalI+0xc>
 800119a:	4770      	bx	lr
 800119c:	b410      	push	{r4}
 800119e:	4602      	mov	r2, r0
 80011a0:	2400      	movs	r4, #0
 80011a2:	6803      	ldr	r3, [r0, #0]
 80011a4:	6819      	ldr	r1, [r3, #0]
 80011a6:	4618      	mov	r0, r3
 80011a8:	6011      	str	r1, [r2, #0]
 80011aa:	604a      	str	r2, [r1, #4]
 80011ac:	621c      	str	r4, [r3, #32]
 80011ae:	bc10      	pop	{r4}
 80011b0:	f7ff bece 	b.w	8000f50 <chSchReadyI>
	...

080011c0 <chMBPostI.constprop.27>:
 80011c0:	b538      	push	{r3, r4, r5, lr}
 80011c2:	4b0c      	ldr	r3, [pc, #48]	; (80011f4 <chMBPostI.constprop.27+0x34>)
 80011c4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80011c6:	2a00      	cmp	r2, #0
 80011c8:	dd10      	ble.n	80011ec <chMBPostI.constprop.27+0x2c>
 80011ca:	e9d3 5401 	ldrd	r5, r4, [r3, #4]
 80011ce:	1d21      	adds	r1, r4, #4
 80011d0:	3a01      	subs	r2, #1
 80011d2:	42a9      	cmp	r1, r5
 80011d4:	625a      	str	r2, [r3, #36]	; 0x24
 80011d6:	bf28      	it	cs
 80011d8:	681a      	ldrcs	r2, [r3, #0]
 80011da:	6099      	str	r1, [r3, #8]
 80011dc:	6020      	str	r0, [r4, #0]
 80011de:	4806      	ldr	r0, [pc, #24]	; (80011f8 <chMBPostI.constprop.27+0x38>)
 80011e0:	bf28      	it	cs
 80011e2:	609a      	strcs	r2, [r3, #8]
 80011e4:	f7ff ffd4 	bl	8001190 <chSemSignalI>
 80011e8:	2000      	movs	r0, #0
 80011ea:	bd38      	pop	{r3, r4, r5, pc}
 80011ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80011f0:	bd38      	pop	{r3, r4, r5, pc}
 80011f2:	bf00      	nop
 80011f4:	20000c78 	.word	0x20000c78
 80011f8:	20000c88 	.word	0x20000c88
 80011fc:	00000000 	.word	0x00000000

08001200 <chMBPostAheadI.constprop.25>:
 8001200:	4a0c      	ldr	r2, [pc, #48]	; (8001234 <chMBPostAheadI.constprop.25+0x34>)
 8001202:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8001204:	2900      	cmp	r1, #0
 8001206:	dd11      	ble.n	800122c <chMBPostAheadI.constprop.25+0x2c>
 8001208:	68d3      	ldr	r3, [r2, #12]
 800120a:	b510      	push	{r4, lr}
 800120c:	6814      	ldr	r4, [r2, #0]
 800120e:	3b04      	subs	r3, #4
 8001210:	3901      	subs	r1, #1
 8001212:	42a3      	cmp	r3, r4
 8001214:	6251      	str	r1, [r2, #36]	; 0x24
 8001216:	60d3      	str	r3, [r2, #12]
 8001218:	d202      	bcs.n	8001220 <chMBPostAheadI.constprop.25+0x20>
 800121a:	6853      	ldr	r3, [r2, #4]
 800121c:	3b04      	subs	r3, #4
 800121e:	60d3      	str	r3, [r2, #12]
 8001220:	6018      	str	r0, [r3, #0]
 8001222:	4805      	ldr	r0, [pc, #20]	; (8001238 <chMBPostAheadI.constprop.25+0x38>)
 8001224:	f7ff ffb4 	bl	8001190 <chSemSignalI>
 8001228:	2000      	movs	r0, #0
 800122a:	bd10      	pop	{r4, pc}
 800122c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001230:	4770      	bx	lr
 8001232:	bf00      	nop
 8001234:	20000c78 	.word	0x20000c78
 8001238:	20000c88 	.word	0x20000c88
 800123c:	00000000 	.word	0x00000000

08001240 <chMBFetchI.constprop.23>:
 8001240:	4b0c      	ldr	r3, [pc, #48]	; (8001274 <chMBFetchI.constprop.23+0x34>)
 8001242:	6999      	ldr	r1, [r3, #24]
 8001244:	2900      	cmp	r1, #0
 8001246:	dd12      	ble.n	800126e <chMBFetchI.constprop.23+0x2e>
 8001248:	68da      	ldr	r2, [r3, #12]
 800124a:	3901      	subs	r1, #1
 800124c:	b510      	push	{r4, lr}
 800124e:	6199      	str	r1, [r3, #24]
 8001250:	6859      	ldr	r1, [r3, #4]
 8001252:	6814      	ldr	r4, [r2, #0]
 8001254:	3204      	adds	r2, #4
 8001256:	428a      	cmp	r2, r1
 8001258:	60da      	str	r2, [r3, #12]
 800125a:	bf28      	it	cs
 800125c:	681a      	ldrcs	r2, [r3, #0]
 800125e:	6004      	str	r4, [r0, #0]
 8001260:	4805      	ldr	r0, [pc, #20]	; (8001278 <chMBFetchI.constprop.23+0x38>)
 8001262:	bf28      	it	cs
 8001264:	60da      	strcs	r2, [r3, #12]
 8001266:	f7ff ff93 	bl	8001190 <chSemSignalI>
 800126a:	2000      	movs	r0, #0
 800126c:	bd10      	pop	{r4, pc}
 800126e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001272:	4770      	bx	lr
 8001274:	20000c78 	.word	0x20000c78
 8001278:	20000c94 	.word	0x20000c94
 800127c:	00000000 	.word	0x00000000

08001280 <chSemResetI>:
 8001280:	b570      	push	{r4, r5, r6, lr}
 8001282:	6885      	ldr	r5, [r0, #8]
 8001284:	6081      	str	r1, [r0, #8]
 8001286:	3501      	adds	r5, #1
 8001288:	2d00      	cmp	r5, #0
 800128a:	dc0c      	bgt.n	80012a6 <chSemResetI+0x26>
 800128c:	4604      	mov	r4, r0
 800128e:	f06f 0601 	mvn.w	r6, #1
 8001292:	6860      	ldr	r0, [r4, #4]
 8001294:	3501      	adds	r5, #1
 8001296:	6843      	ldr	r3, [r0, #4]
 8001298:	6063      	str	r3, [r4, #4]
 800129a:	601c      	str	r4, [r3, #0]
 800129c:	f7ff fe58 	bl	8000f50 <chSchReadyI>
 80012a0:	2d01      	cmp	r5, #1
 80012a2:	6206      	str	r6, [r0, #32]
 80012a4:	d1f5      	bne.n	8001292 <chSemResetI+0x12>
 80012a6:	bd70      	pop	{r4, r5, r6, pc}
	...

080012b0 <chThdDequeueAllI>:
 80012b0:	b538      	push	{r3, r4, r5, lr}
 80012b2:	6803      	ldr	r3, [r0, #0]
 80012b4:	4298      	cmp	r0, r3
 80012b6:	d00b      	beq.n	80012d0 <chThdDequeueAllI+0x20>
 80012b8:	4604      	mov	r4, r0
 80012ba:	460d      	mov	r5, r1
 80012bc:	681a      	ldr	r2, [r3, #0]
 80012be:	4618      	mov	r0, r3
 80012c0:	6022      	str	r2, [r4, #0]
 80012c2:	6054      	str	r4, [r2, #4]
 80012c4:	621d      	str	r5, [r3, #32]
 80012c6:	f7ff fe43 	bl	8000f50 <chSchReadyI>
 80012ca:	6823      	ldr	r3, [r4, #0]
 80012cc:	429c      	cmp	r4, r3
 80012ce:	d1f5      	bne.n	80012bc <chThdDequeueAllI+0xc>
 80012d0:	bd38      	pop	{r3, r4, r5, pc}
 80012d2:	bf00      	nop
	...

080012e0 <chVTDoResetI>:
 80012e0:	4b1c      	ldr	r3, [pc, #112]	; (8001354 <chVTDoResetI+0x74>)
 80012e2:	b470      	push	{r4, r5, r6}
 80012e4:	69da      	ldr	r2, [r3, #28]
 80012e6:	4282      	cmp	r2, r0
 80012e8:	d00f      	beq.n	800130a <chVTDoResetI+0x2a>
 80012ea:	e9d0 2100 	ldrd	r2, r1, [r0]
 80012ee:	2400      	movs	r4, #0
 80012f0:	600a      	str	r2, [r1, #0]
 80012f2:	6802      	ldr	r2, [r0, #0]
 80012f4:	331c      	adds	r3, #28
 80012f6:	429a      	cmp	r2, r3
 80012f8:	6051      	str	r1, [r2, #4]
 80012fa:	60c4      	str	r4, [r0, #12]
 80012fc:	d003      	beq.n	8001306 <chVTDoResetI+0x26>
 80012fe:	8901      	ldrh	r1, [r0, #8]
 8001300:	8913      	ldrh	r3, [r2, #8]
 8001302:	440b      	add	r3, r1
 8001304:	8113      	strh	r3, [r2, #8]
 8001306:	bc70      	pop	{r4, r5, r6}
 8001308:	4770      	bx	lr
 800130a:	4618      	mov	r0, r3
 800130c:	2400      	movs	r4, #0
 800130e:	6811      	ldr	r1, [r2, #0]
 8001310:	f840 1f1c 	str.w	r1, [r0, #28]!
 8001314:	4281      	cmp	r1, r0
 8001316:	6048      	str	r0, [r1, #4]
 8001318:	60d4      	str	r4, [r2, #12]
 800131a:	d017      	beq.n	800134c <chVTDoResetI+0x6c>
 800131c:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8001320:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001322:	8916      	ldrh	r6, [r2, #8]
 8001324:	8cdd      	ldrh	r5, [r3, #38]	; 0x26
 8001326:	890b      	ldrh	r3, [r1, #8]
 8001328:	b282      	uxth	r2, r0
 800132a:	4433      	add	r3, r6
 800132c:	1b50      	subs	r0, r2, r5
 800132e:	b29b      	uxth	r3, r3
 8001330:	b280      	uxth	r0, r0
 8001332:	4283      	cmp	r3, r0
 8001334:	810b      	strh	r3, [r1, #8]
 8001336:	d9e6      	bls.n	8001306 <chVTDoResetI+0x26>
 8001338:	1a1b      	subs	r3, r3, r0
 800133a:	b29b      	uxth	r3, r3
 800133c:	2b02      	cmp	r3, #2
 800133e:	bf2c      	ite	cs
 8001340:	18d3      	addcs	r3, r2, r3
 8001342:	1c93      	addcc	r3, r2, #2
 8001344:	b29b      	uxth	r3, r3
 8001346:	6363      	str	r3, [r4, #52]	; 0x34
 8001348:	bc70      	pop	{r4, r5, r6}
 800134a:	4770      	bx	lr
 800134c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001350:	60dc      	str	r4, [r3, #12]
 8001352:	e7d8      	b.n	8001306 <chVTDoResetI+0x26>
 8001354:	20001558 	.word	0x20001558
	...

08001360 <chVTDoSetI>:
 8001360:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001362:	4e1e      	ldr	r6, [pc, #120]	; (80013dc <chVTDoSetI+0x7c>)
 8001364:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 8001368:	46b6      	mov	lr, r6
 800136a:	2902      	cmp	r1, #2
 800136c:	bf38      	it	cc
 800136e:	2102      	movcc	r1, #2
 8001370:	6a7d      	ldr	r5, [r7, #36]	; 0x24
 8001372:	f85e 4f1c 	ldr.w	r4, [lr, #28]!
 8001376:	fa1f fc85 	uxth.w	ip, r5
 800137a:	eb01 050c 	add.w	r5, r1, ip
 800137e:	4574      	cmp	r4, lr
 8001380:	6103      	str	r3, [r0, #16]
 8001382:	60c2      	str	r2, [r0, #12]
 8001384:	b2ad      	uxth	r5, r5
 8001386:	d01b      	beq.n	80013c0 <chVTDoSetI+0x60>
 8001388:	8cf3      	ldrh	r3, [r6, #38]	; 0x26
 800138a:	8922      	ldrh	r2, [r4, #8]
 800138c:	1aeb      	subs	r3, r5, r3
 800138e:	b29b      	uxth	r3, r3
 8001390:	429a      	cmp	r2, r3
 8001392:	d904      	bls.n	800139e <chVTDoSetI+0x3e>
 8001394:	e012      	b.n	80013bc <chVTDoSetI+0x5c>
 8001396:	6824      	ldr	r4, [r4, #0]
 8001398:	1a9b      	subs	r3, r3, r2
 800139a:	8922      	ldrh	r2, [r4, #8]
 800139c:	b29b      	uxth	r3, r3
 800139e:	429a      	cmp	r2, r3
 80013a0:	d3f9      	bcc.n	8001396 <chVTDoSetI+0x36>
 80013a2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80013a6:	6862      	ldr	r2, [r4, #4]
 80013a8:	e9c0 4200 	strd	r4, r2, [r0]
 80013ac:	6010      	str	r0, [r2, #0]
 80013ae:	6060      	str	r0, [r4, #4]
 80013b0:	8103      	strh	r3, [r0, #8]
 80013b2:	8922      	ldrh	r2, [r4, #8]
 80013b4:	1ad3      	subs	r3, r2, r3
 80013b6:	8123      	strh	r3, [r4, #8]
 80013b8:	84b1      	strh	r1, [r6, #36]	; 0x24
 80013ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013bc:	637d      	str	r5, [r7, #52]	; 0x34
 80013be:	e7ee      	b.n	800139e <chVTDoSetI+0x3e>
 80013c0:	2200      	movs	r2, #0
 80013c2:	2302      	movs	r3, #2
 80013c4:	f8a6 c026 	strh.w	ip, [r6, #38]	; 0x26
 80013c8:	e9c6 0007 	strd	r0, r0, [r6, #28]
 80013cc:	e9c0 4400 	strd	r4, r4, [r0]
 80013d0:	8101      	strh	r1, [r0, #8]
 80013d2:	637d      	str	r5, [r7, #52]	; 0x34
 80013d4:	613a      	str	r2, [r7, #16]
 80013d6:	60fb      	str	r3, [r7, #12]
 80013d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013da:	bf00      	nop
 80013dc:	20001558 	.word	0x20001558

080013e0 <test_start_timer.constprop.3>:
 80013e0:	2100      	movs	r1, #0
 80013e2:	4a0b      	ldr	r2, [pc, #44]	; (8001410 <test_start_timer.constprop.3+0x30>)
 80013e4:	b508      	push	{r3, lr}
 80013e6:	2320      	movs	r3, #32
 80013e8:	7011      	strb	r1, [r2, #0]
 80013ea:	f383 8811 	msr	BASEPRI, r3
 80013ee:	4809      	ldr	r0, [pc, #36]	; (8001414 <test_start_timer.constprop.3+0x34>)
 80013f0:	68c3      	ldr	r3, [r0, #12]
 80013f2:	b10b      	cbz	r3, 80013f8 <test_start_timer.constprop.3+0x18>
 80013f4:	f7ff ff74 	bl	80012e0 <chVTDoResetI>
 80013f8:	2300      	movs	r3, #0
 80013fa:	4a07      	ldr	r2, [pc, #28]	; (8001418 <test_start_timer.constprop.3+0x38>)
 80013fc:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001400:	4804      	ldr	r0, [pc, #16]	; (8001414 <test_start_timer.constprop.3+0x34>)
 8001402:	f7ff ffad 	bl	8001360 <chVTDoSetI>
 8001406:	2300      	movs	r3, #0
 8001408:	f383 8811 	msr	BASEPRI, r3
 800140c:	bd08      	pop	{r3, pc}
 800140e:	bf00      	nop
 8001410:	20001e40 	.word	0x20001e40
 8001414:	20001e6c 	.word	0x20001e6c
 8001418:	08000291 	.word	0x08000291
 800141c:	00000000 	.word	0x00000000

08001420 <chSysGetStatusAndLockX>:
 8001420:	f3ef 8012 	mrs	r0, BASEPRI_MAX
 8001424:	b920      	cbnz	r0, 8001430 <chSysGetStatusAndLockX+0x10>
 8001426:	f3ef 8305 	mrs	r3, IPSR
 800142a:	2320      	movs	r3, #32
 800142c:	f383 8811 	msr	BASEPRI, r3
 8001430:	4770      	bx	lr
 8001432:	bf00      	nop
	...

08001440 <chSysIntegrityCheckI>:
 8001440:	07c2      	lsls	r2, r0, #31
 8001442:	b410      	push	{r4}
 8001444:	d510      	bpl.n	8001468 <chSysIntegrityCheckI+0x28>
 8001446:	4b26      	ldr	r3, [pc, #152]	; (80014e0 <chSysIntegrityCheckI+0xa0>)
 8001448:	e9d3 1400 	ldrd	r1, r4, [r3]
 800144c:	4299      	cmp	r1, r3
 800144e:	d03b      	beq.n	80014c8 <chSysIntegrityCheckI+0x88>
 8001450:	2200      	movs	r2, #0
 8001452:	6809      	ldr	r1, [r1, #0]
 8001454:	3201      	adds	r2, #1
 8001456:	4299      	cmp	r1, r3
 8001458:	d1fb      	bne.n	8001452 <chSysIntegrityCheckI+0x12>
 800145a:	428c      	cmp	r4, r1
 800145c:	d031      	beq.n	80014c2 <chSysIntegrityCheckI+0x82>
 800145e:	6864      	ldr	r4, [r4, #4]
 8001460:	3a01      	subs	r2, #1
 8001462:	429c      	cmp	r4, r3
 8001464:	d1fb      	bne.n	800145e <chSysIntegrityCheckI+0x1e>
 8001466:	bb62      	cbnz	r2, 80014c2 <chSysIntegrityCheckI+0x82>
 8001468:	0783      	lsls	r3, r0, #30
 800146a:	d512      	bpl.n	8001492 <chSysIntegrityCheckI+0x52>
 800146c:	4b1c      	ldr	r3, [pc, #112]	; (80014e0 <chSysIntegrityCheckI+0xa0>)
 800146e:	69da      	ldr	r2, [r3, #28]
 8001470:	f103 041c 	add.w	r4, r3, #28
 8001474:	42a2      	cmp	r2, r4
 8001476:	6a19      	ldr	r1, [r3, #32]
 8001478:	d02a      	beq.n	80014d0 <chSysIntegrityCheckI+0x90>
 800147a:	2300      	movs	r3, #0
 800147c:	6812      	ldr	r2, [r2, #0]
 800147e:	3301      	adds	r3, #1
 8001480:	42a2      	cmp	r2, r4
 8001482:	d1fb      	bne.n	800147c <chSysIntegrityCheckI+0x3c>
 8001484:	4291      	cmp	r1, r2
 8001486:	d01c      	beq.n	80014c2 <chSysIntegrityCheckI+0x82>
 8001488:	6849      	ldr	r1, [r1, #4]
 800148a:	3b01      	subs	r3, #1
 800148c:	42a1      	cmp	r1, r4
 800148e:	d1fb      	bne.n	8001488 <chSysIntegrityCheckI+0x48>
 8001490:	b9bb      	cbnz	r3, 80014c2 <chSysIntegrityCheckI+0x82>
 8001492:	f010 0004 	ands.w	r0, r0, #4
 8001496:	d012      	beq.n	80014be <chSysIntegrityCheckI+0x7e>
 8001498:	4b11      	ldr	r3, [pc, #68]	; (80014e0 <chSysIntegrityCheckI+0xa0>)
 800149a:	2000      	movs	r0, #0
 800149c:	e9d3 2104 	ldrd	r2, r1, [r3, #16]
 80014a0:	429a      	cmp	r2, r3
 80014a2:	d019      	beq.n	80014d8 <chSysIntegrityCheckI+0x98>
 80014a4:	6912      	ldr	r2, [r2, #16]
 80014a6:	3001      	adds	r0, #1
 80014a8:	429a      	cmp	r2, r3
 80014aa:	d1fb      	bne.n	80014a4 <chSysIntegrityCheckI+0x64>
 80014ac:	4291      	cmp	r1, r2
 80014ae:	d008      	beq.n	80014c2 <chSysIntegrityCheckI+0x82>
 80014b0:	6949      	ldr	r1, [r1, #20]
 80014b2:	3801      	subs	r0, #1
 80014b4:	4299      	cmp	r1, r3
 80014b6:	d1fb      	bne.n	80014b0 <chSysIntegrityCheckI+0x70>
 80014b8:	3000      	adds	r0, #0
 80014ba:	bf18      	it	ne
 80014bc:	2001      	movne	r0, #1
 80014be:	bc10      	pop	{r4}
 80014c0:	4770      	bx	lr
 80014c2:	2001      	movs	r0, #1
 80014c4:	bc10      	pop	{r4}
 80014c6:	4770      	bx	lr
 80014c8:	429c      	cmp	r4, r3
 80014ca:	d0cd      	beq.n	8001468 <chSysIntegrityCheckI+0x28>
 80014cc:	2200      	movs	r2, #0
 80014ce:	e7c6      	b.n	800145e <chSysIntegrityCheckI+0x1e>
 80014d0:	42a1      	cmp	r1, r4
 80014d2:	d0de      	beq.n	8001492 <chSysIntegrityCheckI+0x52>
 80014d4:	2300      	movs	r3, #0
 80014d6:	e7d7      	b.n	8001488 <chSysIntegrityCheckI+0x48>
 80014d8:	4291      	cmp	r1, r2
 80014da:	d1e9      	bne.n	80014b0 <chSysIntegrityCheckI+0x70>
 80014dc:	e7ef      	b.n	80014be <chSysIntegrityCheckI+0x7e>
 80014de:	bf00      	nop
 80014e0:	20001558 	.word	0x20001558
	...

080014f0 <sys3_execute>:
 80014f0:	b538      	push	{r3, r4, r5, lr}
 80014f2:	2420      	movs	r4, #32
 80014f4:	f384 8811 	msr	BASEPRI, r4
 80014f8:	2001      	movs	r0, #1
 80014fa:	f7ff ffa1 	bl	8001440 <chSysIntegrityCheckI>
 80014fe:	2300      	movs	r3, #0
 8001500:	f383 8811 	msr	BASEPRI, r3
 8001504:	f080 0101 	eor.w	r1, r0, #1
 8001508:	b2c9      	uxtb	r1, r1
 800150a:	2001      	movs	r0, #1
 800150c:	f7ff f928 	bl	8000760 <_test_assert>
 8001510:	b100      	cbz	r0, 8001514 <sys3_execute+0x24>
 8001512:	bd38      	pop	{r3, r4, r5, pc}
 8001514:	4605      	mov	r5, r0
 8001516:	f384 8811 	msr	BASEPRI, r4
 800151a:	2002      	movs	r0, #2
 800151c:	f7ff ff90 	bl	8001440 <chSysIntegrityCheckI>
 8001520:	f385 8811 	msr	BASEPRI, r5
 8001524:	f080 0101 	eor.w	r1, r0, #1
 8001528:	b2c9      	uxtb	r1, r1
 800152a:	2002      	movs	r0, #2
 800152c:	f7ff f918 	bl	8000760 <_test_assert>
 8001530:	4605      	mov	r5, r0
 8001532:	2800      	cmp	r0, #0
 8001534:	d1ed      	bne.n	8001512 <sys3_execute+0x22>
 8001536:	f384 8811 	msr	BASEPRI, r4
 800153a:	2004      	movs	r0, #4
 800153c:	f7ff ff80 	bl	8001440 <chSysIntegrityCheckI>
 8001540:	f385 8811 	msr	BASEPRI, r5
 8001544:	f080 0101 	eor.w	r1, r0, #1
 8001548:	b2c9      	uxtb	r1, r1
 800154a:	2003      	movs	r0, #3
 800154c:	f7ff f908 	bl	8000760 <_test_assert>
 8001550:	4605      	mov	r5, r0
 8001552:	2800      	cmp	r0, #0
 8001554:	d1dd      	bne.n	8001512 <sys3_execute+0x22>
 8001556:	f384 8811 	msr	BASEPRI, r4
 800155a:	2008      	movs	r0, #8
 800155c:	f7ff ff70 	bl	8001440 <chSysIntegrityCheckI>
 8001560:	f385 8811 	msr	BASEPRI, r5
 8001564:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001568:	f080 0101 	eor.w	r1, r0, #1
 800156c:	b2c9      	uxtb	r1, r1
 800156e:	2004      	movs	r0, #4
 8001570:	f7ff b8f6 	b.w	8000760 <_test_assert>
	...

08001580 <BusFault_Handler>:
 8001580:	b672      	cpsid	i
 8001582:	4b02      	ldr	r3, [pc, #8]	; (800158c <BusFault_Handler+0xc>)
 8001584:	4a02      	ldr	r2, [pc, #8]	; (8001590 <BusFault_Handler+0x10>)
 8001586:	629a      	str	r2, [r3, #40]	; 0x28
 8001588:	e7fe      	b.n	8001588 <BusFault_Handler+0x8>
 800158a:	bf00      	nop
 800158c:	20001558 	.word	0x20001558
 8001590:	080075d0 	.word	0x080075d0
	...

080015a0 <_strtok.constprop.2>:
 80015a0:	b538      	push	{r3, r4, r5, lr}
 80015a2:	460d      	mov	r5, r1
 80015a4:	b198      	cbz	r0, 80015ce <_strtok.constprop.2+0x2e>
 80015a6:	4604      	mov	r4, r0
 80015a8:	6028      	str	r0, [r5, #0]
 80015aa:	490d      	ldr	r1, [pc, #52]	; (80015e0 <_strtok.constprop.2+0x40>)
 80015ac:	4620      	mov	r0, r4
 80015ae:	f005 feff 	bl	80073b0 <strspn>
 80015b2:	4404      	add	r4, r0
 80015b4:	4620      	mov	r0, r4
 80015b6:	490a      	ldr	r1, [pc, #40]	; (80015e0 <_strtok.constprop.2+0x40>)
 80015b8:	f005 fed2 	bl	8007360 <strpbrk>
 80015bc:	b168      	cbz	r0, 80015da <_strtok.constprop.2+0x3a>
 80015be:	2300      	movs	r3, #0
 80015c0:	1c42      	adds	r2, r0, #1
 80015c2:	602a      	str	r2, [r5, #0]
 80015c4:	7003      	strb	r3, [r0, #0]
 80015c6:	7823      	ldrb	r3, [r4, #0]
 80015c8:	b123      	cbz	r3, 80015d4 <_strtok.constprop.2+0x34>
 80015ca:	4620      	mov	r0, r4
 80015cc:	bd38      	pop	{r3, r4, r5, pc}
 80015ce:	680c      	ldr	r4, [r1, #0]
 80015d0:	2c00      	cmp	r4, #0
 80015d2:	d1ea      	bne.n	80015aa <_strtok.constprop.2+0xa>
 80015d4:	2400      	movs	r4, #0
 80015d6:	4620      	mov	r0, r4
 80015d8:	bd38      	pop	{r3, r4, r5, pc}
 80015da:	6028      	str	r0, [r5, #0]
 80015dc:	e7f3      	b.n	80015c6 <_strtok.constprop.2+0x26>
 80015de:	bf00      	nop
 80015e0:	080075c0 	.word	0x080075c0
	...

080015f0 <chprintf.lto_priv.72>:
 80015f0:	b40e      	push	{r1, r2, r3}
 80015f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80015f6:	4604      	mov	r4, r0
 80015f8:	f04f 0800 	mov.w	r8, #0
 80015fc:	b086      	sub	sp, #24
 80015fe:	af0f      	add	r7, sp, #60	; 0x3c
 8001600:	f857 6b04 	ldr.w	r6, [r7], #4
 8001604:	9702      	str	r7, [sp, #8]
 8001606:	7831      	ldrb	r1, [r6, #0]
 8001608:	1c72      	adds	r2, r6, #1
 800160a:	b161      	cbz	r1, 8001626 <chprintf.lto_priv.72+0x36>
 800160c:	2925      	cmp	r1, #37	; 0x25
 800160e:	d010      	beq.n	8001632 <chprintf.lto_priv.72+0x42>
 8001610:	4616      	mov	r6, r2
 8001612:	6823      	ldr	r3, [r4, #0]
 8001614:	4620      	mov	r0, r4
 8001616:	689b      	ldr	r3, [r3, #8]
 8001618:	4798      	blx	r3
 800161a:	7831      	ldrb	r1, [r6, #0]
 800161c:	f108 0801 	add.w	r8, r8, #1
 8001620:	1c72      	adds	r2, r6, #1
 8001622:	2900      	cmp	r1, #0
 8001624:	d1f2      	bne.n	800160c <chprintf.lto_priv.72+0x1c>
 8001626:	4640      	mov	r0, r8
 8001628:	b006      	add	sp, #24
 800162a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800162e:	b003      	add	sp, #12
 8001630:	4770      	bx	lr
 8001632:	7871      	ldrb	r1, [r6, #1]
 8001634:	f04f 0900 	mov.w	r9, #0
 8001638:	292d      	cmp	r1, #45	; 0x2d
 800163a:	bf03      	ittte	eq
 800163c:	78b1      	ldrbeq	r1, [r6, #2]
 800163e:	1cb2      	addeq	r2, r6, #2
 8001640:	2001      	moveq	r0, #1
 8001642:	2000      	movne	r0, #0
 8001644:	2930      	cmp	r1, #48	; 0x30
 8001646:	bf03      	ittte	eq
 8001648:	7851      	ldrbeq	r1, [r2, #1]
 800164a:	3201      	addeq	r2, #1
 800164c:	2530      	moveq	r5, #48	; 0x30
 800164e:	2520      	movne	r5, #32
 8001650:	3201      	adds	r2, #1
 8001652:	e005      	b.n	8001660 <chprintf.lto_priv.72+0x70>
 8001654:	783b      	ldrb	r3, [r7, #0]
 8001656:	3704      	adds	r7, #4
 8001658:	f812 1b01 	ldrb.w	r1, [r2], #1
 800165c:	eb03 0946 	add.w	r9, r3, r6, lsl #1
 8001660:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8001664:	b2db      	uxtb	r3, r3
 8001666:	2b09      	cmp	r3, #9
 8001668:	4694      	mov	ip, r2
 800166a:	eb09 0689 	add.w	r6, r9, r9, lsl #2
 800166e:	d9f3      	bls.n	8001658 <chprintf.lto_priv.72+0x68>
 8001670:	292a      	cmp	r1, #42	; 0x2a
 8001672:	d0ef      	beq.n	8001654 <chprintf.lto_priv.72+0x64>
 8001674:	292e      	cmp	r1, #46	; 0x2e
 8001676:	f04f 0200 	mov.w	r2, #0
 800167a:	d048      	beq.n	800170e <chprintf.lto_priv.72+0x11e>
 800167c:	f001 03df 	and.w	r3, r1, #223	; 0xdf
 8001680:	2b4c      	cmp	r3, #76	; 0x4c
 8001682:	f10c 0601 	add.w	r6, ip, #1
 8001686:	d04e      	beq.n	8001726 <chprintf.lto_priv.72+0x136>
 8001688:	f1a1 0341 	sub.w	r3, r1, #65	; 0x41
 800168c:	f1a1 0644 	sub.w	r6, r1, #68	; 0x44
 8001690:	b2db      	uxtb	r3, r3
 8001692:	2e34      	cmp	r6, #52	; 0x34
 8001694:	f200 811f 	bhi.w	80018d6 <chprintf.lto_priv.72+0x2e6>
 8001698:	e8df f016 	tbh	[pc, r6, lsl #1]
 800169c:	011d016f 	.word	0x011d016f
 80016a0:	011d011d 	.word	0x011d011d
 80016a4:	016f011d 	.word	0x016f011d
 80016a8:	011d011d 	.word	0x011d011d
 80016ac:	011d011d 	.word	0x011d011d
 80016b0:	0119011d 	.word	0x0119011d
 80016b4:	011d011d 	.word	0x011d011d
 80016b8:	011d011d 	.word	0x011d011d
 80016bc:	00e7011d 	.word	0x00e7011d
 80016c0:	011d011d 	.word	0x011d011d
 80016c4:	011d0178 	.word	0x011d0178
 80016c8:	011d011d 	.word	0x011d011d
 80016cc:	011d011d 	.word	0x011d011d
 80016d0:	011d011d 	.word	0x011d011d
 80016d4:	011d011d 	.word	0x011d011d
 80016d8:	008f011d 	.word	0x008f011d
 80016dc:	011d016f 	.word	0x011d016f
 80016e0:	011d011d 	.word	0x011d011d
 80016e4:	016f011d 	.word	0x016f011d
 80016e8:	011d011d 	.word	0x011d011d
 80016ec:	011d011d 	.word	0x011d011d
 80016f0:	0119011d 	.word	0x0119011d
 80016f4:	011d011d 	.word	0x011d011d
 80016f8:	006d011d 	.word	0x006d011d
 80016fc:	00e7011d 	.word	0x00e7011d
 8001700:	011d011d 	.word	0x011d011d
 8001704:	0178      	.short	0x0178
 8001706:	783b      	ldrb	r3, [r7, #0]
 8001708:	3704      	adds	r7, #4
 800170a:	eb03 0246 	add.w	r2, r3, r6, lsl #1
 800170e:	f81c 1b01 	ldrb.w	r1, [ip], #1
 8001712:	eb02 0682 	add.w	r6, r2, r2, lsl #2
 8001716:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800171a:	b2db      	uxtb	r3, r3
 800171c:	2b09      	cmp	r3, #9
 800171e:	d9f4      	bls.n	800170a <chprintf.lto_priv.72+0x11a>
 8001720:	292a      	cmp	r1, #42	; 0x2a
 8001722:	d0f0      	beq.n	8001706 <chprintf.lto_priv.72+0x116>
 8001724:	e7aa      	b.n	800167c <chprintf.lto_priv.72+0x8c>
 8001726:	f89c 3000 	ldrb.w	r3, [ip]
 800172a:	b30b      	cbz	r3, 8001770 <chprintf.lto_priv.72+0x180>
 800172c:	f1a3 0144 	sub.w	r1, r3, #68	; 0x44
 8001730:	2934      	cmp	r1, #52	; 0x34
 8001732:	f200 80d2 	bhi.w	80018da <chprintf.lto_priv.72+0x2ea>
 8001736:	e8df f001 	tbb	[pc, r1]
 800173a:	d0e1      	.short	0xd0e1
 800173c:	e1d0d0d0 	.word	0xe1d0d0d0
 8001740:	d0d0d0d0 	.word	0xd0d0d0d0
 8001744:	d0d0cbd0 	.word	0xd0d0cbd0
 8001748:	99d0d0d0 	.word	0x99d0d0d0
 800174c:	d0ded0d0 	.word	0xd0ded0d0
 8001750:	d0d0d0d0 	.word	0xd0d0d0d0
 8001754:	d0d0d0d0 	.word	0xd0d0d0d0
 8001758:	d0e141d0 	.word	0xd0e141d0
 800175c:	e1d0d0d0 	.word	0xe1d0d0d0
 8001760:	d0d0d0d0 	.word	0xd0d0d0d0
 8001764:	d0d0cbd0 	.word	0xd0d0cbd0
 8001768:	99d01fd0 	.word	0x99d01fd0
 800176c:	d0d0      	.short	0xd0d0
 800176e:	de          	.byte	0xde
 800176f:	00          	.byte	0x00
 8001770:	460b      	mov	r3, r1
 8001772:	4666      	mov	r6, ip
 8001774:	e7da      	b.n	800172c <chprintf.lto_priv.72+0x13c>
 8001776:	4666      	mov	r6, ip
 8001778:	f8d7 a000 	ldr.w	sl, [r7]
 800177c:	3704      	adds	r7, #4
 800177e:	f1ba 0f00 	cmp.w	sl, #0
 8001782:	f000 8107 	beq.w	8001994 <chprintf.lto_priv.72+0x3a4>
 8001786:	f89a 3000 	ldrb.w	r3, [sl]
 800178a:	4655      	mov	r5, sl
 800178c:	2a00      	cmp	r2, #0
 800178e:	f040 8108 	bne.w	80019a2 <chprintf.lto_priv.72+0x3b2>
 8001792:	2b00      	cmp	r3, #0
 8001794:	f000 8115 	beq.w	80019c2 <chprintf.lto_priv.72+0x3d2>
 8001798:	f647 72fe 	movw	r2, #32766	; 0x7ffe
 800179c:	4653      	mov	r3, sl
 800179e:	e001      	b.n	80017a4 <chprintf.lto_priv.72+0x1b4>
 80017a0:	3a01      	subs	r2, #1
 80017a2:	d403      	bmi.n	80017ac <chprintf.lto_priv.72+0x1bc>
 80017a4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80017a8:	2900      	cmp	r1, #0
 80017aa:	d1f9      	bne.n	80017a0 <chprintf.lto_priv.72+0x1b0>
 80017ac:	1b5b      	subs	r3, r3, r5
 80017ae:	eba9 0903 	sub.w	r9, r9, r3
 80017b2:	3b01      	subs	r3, #1
 80017b4:	9300      	str	r3, [sp, #0]
 80017b6:	2520      	movs	r5, #32
 80017b8:	e00b      	b.n	80017d2 <chprintf.lto_priv.72+0x1e2>
 80017ba:	4666      	mov	r6, ip
 80017bc:	683b      	ldr	r3, [r7, #0]
 80017be:	f10d 0a18 	add.w	sl, sp, #24
 80017c2:	f80a 3d0c 	strb.w	r3, [sl, #-12]!
 80017c6:	2300      	movs	r3, #0
 80017c8:	2520      	movs	r5, #32
 80017ca:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80017ce:	3704      	adds	r7, #4
 80017d0:	9300      	str	r3, [sp, #0]
 80017d2:	f1b9 0f00 	cmp.w	r9, #0
 80017d6:	db21      	blt.n	800181c <chprintf.lto_priv.72+0x22c>
 80017d8:	2800      	cmp	r0, #0
 80017da:	f040 8088 	bne.w	80018ee <chprintf.lto_priv.72+0x2fe>
 80017de:	f1c9 0300 	rsb	r3, r9, #0
 80017e2:	f1b9 0f00 	cmp.w	r9, #0
 80017e6:	f000 8081 	beq.w	80018ec <chprintf.lto_priv.72+0x2fc>
 80017ea:	f89a 1000 	ldrb.w	r1, [sl]
 80017ee:	6822      	ldr	r2, [r4, #0]
 80017f0:	292d      	cmp	r1, #45	; 0x2d
 80017f2:	6892      	ldr	r2, [r2, #8]
 80017f4:	f000 80af 	beq.w	8001956 <chprintf.lto_priv.72+0x366>
 80017f8:	469b      	mov	fp, r3
 80017fa:	e001      	b.n	8001800 <chprintf.lto_priv.72+0x210>
 80017fc:	6823      	ldr	r3, [r4, #0]
 80017fe:	689a      	ldr	r2, [r3, #8]
 8001800:	4629      	mov	r1, r5
 8001802:	4620      	mov	r0, r4
 8001804:	4790      	blx	r2
 8001806:	f11b 0b01 	adds.w	fp, fp, #1
 800180a:	d1f7      	bne.n	80017fc <chprintf.lto_priv.72+0x20c>
 800180c:	9a00      	ldr	r2, [sp, #0]
 800180e:	465b      	mov	r3, fp
 8001810:	2a00      	cmp	r2, #0
 8001812:	44c8      	add	r8, r9
 8001814:	f6ff aef7 	blt.w	8001606 <chprintf.lto_priv.72+0x16>
 8001818:	4699      	mov	r9, r3
 800181a:	e005      	b.n	8001828 <chprintf.lto_priv.72+0x238>
 800181c:	9b00      	ldr	r3, [sp, #0]
 800181e:	2b00      	cmp	r3, #0
 8001820:	f6ff aef1 	blt.w	8001606 <chprintf.lto_priv.72+0x16>
 8001824:	f04f 0900 	mov.w	r9, #0
 8001828:	f8dd b000 	ldr.w	fp, [sp]
 800182c:	6823      	ldr	r3, [r4, #0]
 800182e:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8001832:	689b      	ldr	r3, [r3, #8]
 8001834:	f81a 1b01 	ldrb.w	r1, [sl], #1
 8001838:	4620      	mov	r0, r4
 800183a:	4798      	blx	r3
 800183c:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
 8001840:	d1f4      	bne.n	800182c <chprintf.lto_priv.72+0x23c>
 8001842:	9b00      	ldr	r3, [sp, #0]
 8001844:	f108 0801 	add.w	r8, r8, #1
 8001848:	4443      	add	r3, r8
 800184a:	4698      	mov	r8, r3
 800184c:	f1b9 0f00 	cmp.w	r9, #0
 8001850:	f43f aed9 	beq.w	8001606 <chprintf.lto_priv.72+0x16>
 8001854:	46ca      	mov	sl, r9
 8001856:	6823      	ldr	r3, [r4, #0]
 8001858:	4629      	mov	r1, r5
 800185a:	689b      	ldr	r3, [r3, #8]
 800185c:	4620      	mov	r0, r4
 800185e:	4798      	blx	r3
 8001860:	f1ba 0a01 	subs.w	sl, sl, #1
 8001864:	d1f7      	bne.n	8001856 <chprintf.lto_priv.72+0x266>
 8001866:	44c8      	add	r8, r9
 8001868:	e6cd      	b.n	8001606 <chprintf.lto_priv.72+0x16>
 800186a:	4666      	mov	r6, ip
 800186c:	f04f 0e0a 	mov.w	lr, #10
 8001870:	f857 2b04 	ldr.w	r2, [r7], #4
 8001874:	f10d 0117 	add.w	r1, sp, #23
 8001878:	e000      	b.n	800187c <chprintf.lto_priv.72+0x28c>
 800187a:	4659      	mov	r1, fp
 800187c:	fbb2 fcfe 	udiv	ip, r2, lr
 8001880:	fb0e 221c 	mls	r2, lr, ip, r2
 8001884:	f102 0330 	add.w	r3, r2, #48	; 0x30
 8001888:	2b39      	cmp	r3, #57	; 0x39
 800188a:	bfc8      	it	gt
 800188c:	f102 0337 	addgt.w	r3, r2, #55	; 0x37
 8001890:	4662      	mov	r2, ip
 8001892:	b2db      	uxtb	r3, r3
 8001894:	f801 3c01 	strb.w	r3, [r1, #-1]
 8001898:	f101 3bff 	add.w	fp, r1, #4294967295	; 0xffffffff
 800189c:	2a00      	cmp	r2, #0
 800189e:	d1ec      	bne.n	800187a <chprintf.lto_priv.72+0x28a>
 80018a0:	460a      	mov	r2, r1
 80018a2:	f10d 0117 	add.w	r1, sp, #23
 80018a6:	f10d 0a0c 	add.w	sl, sp, #12
 80018aa:	eba1 0e0b 	sub.w	lr, r1, fp
 80018ae:	46d4      	mov	ip, sl
 80018b0:	eb0b 010e 	add.w	r1, fp, lr
 80018b4:	e001      	b.n	80018ba <chprintf.lto_priv.72+0x2ca>
 80018b6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80018ba:	428a      	cmp	r2, r1
 80018bc:	f80c 3b01 	strb.w	r3, [ip], #1
 80018c0:	d1f9      	bne.n	80018b6 <chprintf.lto_priv.72+0x2c6>
 80018c2:	f10e 33ff 	add.w	r3, lr, #4294967295	; 0xffffffff
 80018c6:	eba9 090e 	sub.w	r9, r9, lr
 80018ca:	9300      	str	r3, [sp, #0]
 80018cc:	e781      	b.n	80017d2 <chprintf.lto_priv.72+0x1e2>
 80018ce:	4666      	mov	r6, ip
 80018d0:	f04f 0e08 	mov.w	lr, #8
 80018d4:	e7cc      	b.n	8001870 <chprintf.lto_priv.72+0x280>
 80018d6:	4666      	mov	r6, ip
 80018d8:	460b      	mov	r3, r1
 80018da:	2200      	movs	r2, #0
 80018dc:	f10d 0a18 	add.w	sl, sp, #24
 80018e0:	9200      	str	r2, [sp, #0]
 80018e2:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80018e6:	f80a 3d0c 	strb.w	r3, [sl, #-12]!
 80018ea:	e772      	b.n	80017d2 <chprintf.lto_priv.72+0x1e2>
 80018ec:	4699      	mov	r9, r3
 80018ee:	9b00      	ldr	r3, [sp, #0]
 80018f0:	2b00      	cmp	r3, #0
 80018f2:	da99      	bge.n	8001828 <chprintf.lto_priv.72+0x238>
 80018f4:	e7aa      	b.n	800184c <chprintf.lto_priv.72+0x25c>
 80018f6:	f04f 0e10 	mov.w	lr, #16
 80018fa:	e7b9      	b.n	8001870 <chprintf.lto_priv.72+0x280>
 80018fc:	1d39      	adds	r1, r7, #4
 80018fe:	683a      	ldr	r2, [r7, #0]
 8001900:	460f      	mov	r7, r1
 8001902:	2a00      	cmp	r2, #0
 8001904:	db54      	blt.n	80019b0 <chprintf.lto_priv.72+0x3c0>
 8001906:	f10d 0a0c 	add.w	sl, sp, #12
 800190a:	46d6      	mov	lr, sl
 800190c:	f10e 0b0b 	add.w	fp, lr, #11
 8001910:	4659      	mov	r1, fp
 8001912:	4b2e      	ldr	r3, [pc, #184]	; (80019cc <chprintf.lto_priv.72+0x3dc>)
 8001914:	fba3 c302 	umull	ip, r3, r3, r2
 8001918:	08db      	lsrs	r3, r3, #3
 800191a:	469c      	mov	ip, r3
 800191c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001920:	eba2 0343 	sub.w	r3, r2, r3, lsl #1
 8001924:	4662      	mov	r2, ip
 8001926:	3330      	adds	r3, #48	; 0x30
 8001928:	b2db      	uxtb	r3, r3
 800192a:	f801 3d01 	strb.w	r3, [r1, #-1]!
 800192e:	2a00      	cmp	r2, #0
 8001930:	d1ef      	bne.n	8001912 <chprintf.lto_priv.72+0x322>
 8001932:	ebab 0201 	sub.w	r2, fp, r1
 8001936:	4472      	add	r2, lr
 8001938:	e001      	b.n	800193e <chprintf.lto_priv.72+0x34e>
 800193a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800193e:	f80e 3b01 	strb.w	r3, [lr], #1
 8001942:	4596      	cmp	lr, r2
 8001944:	d1f9      	bne.n	800193a <chprintf.lto_priv.72+0x34a>
 8001946:	ebae 0e0a 	sub.w	lr, lr, sl
 800194a:	f10e 33ff 	add.w	r3, lr, #4294967295	; 0xffffffff
 800194e:	eba9 090e 	sub.w	r9, r9, lr
 8001952:	9300      	str	r3, [sp, #0]
 8001954:	e73d      	b.n	80017d2 <chprintf.lto_priv.72+0x1e2>
 8001956:	2d30      	cmp	r5, #48	; 0x30
 8001958:	f47f af4e 	bne.w	80017f8 <chprintf.lto_priv.72+0x208>
 800195c:	4620      	mov	r0, r4
 800195e:	9301      	str	r3, [sp, #4]
 8001960:	4790      	blx	r2
 8001962:	9b00      	ldr	r3, [sp, #0]
 8001964:	6822      	ldr	r2, [r4, #0]
 8001966:	3b01      	subs	r3, #1
 8001968:	9300      	str	r3, [sp, #0]
 800196a:	9b01      	ldr	r3, [sp, #4]
 800196c:	f108 0801 	add.w	r8, r8, #1
 8001970:	6892      	ldr	r2, [r2, #8]
 8001972:	f10a 0a01 	add.w	sl, sl, #1
 8001976:	469b      	mov	fp, r3
 8001978:	e742      	b.n	8001800 <chprintf.lto_priv.72+0x210>
 800197a:	4639      	mov	r1, r7
 800197c:	f851 2b04 	ldr.w	r2, [r1], #4
 8001980:	2b19      	cmp	r3, #25
 8001982:	4666      	mov	r6, ip
 8001984:	bf88      	it	hi
 8001986:	460f      	movhi	r7, r1
 8001988:	d8bb      	bhi.n	8001902 <chprintf.lto_priv.72+0x312>
 800198a:	e7b8      	b.n	80018fe <chprintf.lto_priv.72+0x30e>
 800198c:	4666      	mov	r6, ip
 800198e:	f04f 0e10 	mov.w	lr, #16
 8001992:	e76d      	b.n	8001870 <chprintf.lto_priv.72+0x280>
 8001994:	4d0e      	ldr	r5, [pc, #56]	; (80019d0 <chprintf.lto_priv.72+0x3e0>)
 8001996:	46aa      	mov	sl, r5
 8001998:	2a00      	cmp	r2, #0
 800199a:	f43f aefd 	beq.w	8001798 <chprintf.lto_priv.72+0x1a8>
 800199e:	3a01      	subs	r2, #1
 80019a0:	e6fc      	b.n	800179c <chprintf.lto_priv.72+0x1ac>
 80019a2:	2b00      	cmp	r3, #0
 80019a4:	d1fb      	bne.n	800199e <chprintf.lto_priv.72+0x3ae>
 80019a6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80019aa:	2520      	movs	r5, #32
 80019ac:	9300      	str	r3, [sp, #0]
 80019ae:	e710      	b.n	80017d2 <chprintf.lto_priv.72+0x1e2>
 80019b0:	232d      	movs	r3, #45	; 0x2d
 80019b2:	4252      	negs	r2, r2
 80019b4:	f88d 300c 	strb.w	r3, [sp, #12]
 80019b8:	f10d 0e0d 	add.w	lr, sp, #13
 80019bc:	f10d 0a0c 	add.w	sl, sp, #12
 80019c0:	e7a4      	b.n	800190c <chprintf.lto_priv.72+0x31c>
 80019c2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80019c6:	2520      	movs	r5, #32
 80019c8:	9300      	str	r3, [sp, #0]
 80019ca:	e705      	b.n	80017d8 <chprintf.lto_priv.72+0x1e8>
 80019cc:	cccccccd 	.word	0xcccccccd
 80019d0:	08007770 	.word	0x08007770
	...

080019e0 <cmd_write>:
 80019e0:	2900      	cmp	r1, #0
 80019e2:	dc18      	bgt.n	8001a16 <cmd_write+0x36>
 80019e4:	b570      	push	{r4, r5, r6, lr}
 80019e6:	4604      	mov	r4, r0
 80019e8:	4e0c      	ldr	r6, [pc, #48]	; (8001a1c <cmd_write+0x3c>)
 80019ea:	4d0d      	ldr	r5, [pc, #52]	; (8001a20 <cmd_write+0x40>)
 80019ec:	e005      	b.n	80019fa <cmd_write+0x1a>
 80019ee:	6833      	ldr	r3, [r6, #0]
 80019f0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80019f4:	681b      	ldr	r3, [r3, #0]
 80019f6:	4629      	mov	r1, r5
 80019f8:	4798      	blx	r3
 80019fa:	6823      	ldr	r3, [r4, #0]
 80019fc:	2100      	movs	r1, #0
 80019fe:	695b      	ldr	r3, [r3, #20]
 8001a00:	4620      	mov	r0, r4
 8001a02:	4798      	blx	r3
 8001a04:	3001      	adds	r0, #1
 8001a06:	4805      	ldr	r0, [pc, #20]	; (8001a1c <cmd_write+0x3c>)
 8001a08:	d0f1      	beq.n	80019ee <cmd_write+0xe>
 8001a0a:	4620      	mov	r0, r4
 8001a0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001a10:	4904      	ldr	r1, [pc, #16]	; (8001a24 <cmd_write+0x44>)
 8001a12:	f7ff bded 	b.w	80015f0 <chprintf.lto_priv.72>
 8001a16:	4904      	ldr	r1, [pc, #16]	; (8001a28 <cmd_write+0x48>)
 8001a18:	f7ff bdea 	b.w	80015f0 <chprintf.lto_priv.72>
 8001a1c:	20001278 	.word	0x20001278
 8001a20:	20000800 	.word	0x20000800
 8001a24:	08007a30 	.word	0x08007a30
 8001a28:	08007a40 	.word	0x08007a40
 8001a2c:	00000000 	.word	0x00000000

08001a30 <cmd_systime>:
 8001a30:	2900      	cmp	r1, #0
 8001a32:	dd03      	ble.n	8001a3c <cmd_systime+0xc>
 8001a34:	4a08      	ldr	r2, [pc, #32]	; (8001a58 <cmd_systime+0x28>)
 8001a36:	4909      	ldr	r1, [pc, #36]	; (8001a5c <cmd_systime+0x2c>)
 8001a38:	f7ff bdda 	b.w	80015f0 <chprintf.lto_priv.72>
 8001a3c:	2320      	movs	r3, #32
 8001a3e:	f383 8811 	msr	BASEPRI, r3
 8001a42:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001a46:	2300      	movs	r3, #0
 8001a48:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8001a4a:	f383 8811 	msr	BASEPRI, r3
 8001a4e:	4904      	ldr	r1, [pc, #16]	; (8001a60 <cmd_systime+0x30>)
 8001a50:	b292      	uxth	r2, r2
 8001a52:	f7ff bdcd 	b.w	80015f0 <chprintf.lto_priv.72>
 8001a56:	bf00      	nop
 8001a58:	08007990 	.word	0x08007990
 8001a5c:	08007998 	.word	0x08007998
 8001a60:	080079a4 	.word	0x080079a4
	...

08001a70 <cmd_info>:
 8001a70:	2900      	cmp	r1, #0
 8001a72:	dd03      	ble.n	8001a7c <cmd_info+0xc>
 8001a74:	4a19      	ldr	r2, [pc, #100]	; (8001adc <cmd_info+0x6c>)
 8001a76:	491a      	ldr	r1, [pc, #104]	; (8001ae0 <cmd_info+0x70>)
 8001a78:	f7ff bdba 	b.w	80015f0 <chprintf.lto_priv.72>
 8001a7c:	b510      	push	{r4, lr}
 8001a7e:	4604      	mov	r4, r0
 8001a80:	b082      	sub	sp, #8
 8001a82:	4a18      	ldr	r2, [pc, #96]	; (8001ae4 <cmd_info+0x74>)
 8001a84:	4918      	ldr	r1, [pc, #96]	; (8001ae8 <cmd_info+0x78>)
 8001a86:	f7ff fdb3 	bl	80015f0 <chprintf.lto_priv.72>
 8001a8a:	4a18      	ldr	r2, [pc, #96]	; (8001aec <cmd_info+0x7c>)
 8001a8c:	4918      	ldr	r1, [pc, #96]	; (8001af0 <cmd_info+0x80>)
 8001a8e:	4620      	mov	r0, r4
 8001a90:	f7ff fdae 	bl	80015f0 <chprintf.lto_priv.72>
 8001a94:	4a17      	ldr	r2, [pc, #92]	; (8001af4 <cmd_info+0x84>)
 8001a96:	4918      	ldr	r1, [pc, #96]	; (8001af8 <cmd_info+0x88>)
 8001a98:	4620      	mov	r0, r4
 8001a9a:	f7ff fda9 	bl	80015f0 <chprintf.lto_priv.72>
 8001a9e:	4a17      	ldr	r2, [pc, #92]	; (8001afc <cmd_info+0x8c>)
 8001aa0:	4917      	ldr	r1, [pc, #92]	; (8001b00 <cmd_info+0x90>)
 8001aa2:	4620      	mov	r0, r4
 8001aa4:	f7ff fda4 	bl	80015f0 <chprintf.lto_priv.72>
 8001aa8:	4a16      	ldr	r2, [pc, #88]	; (8001b04 <cmd_info+0x94>)
 8001aaa:	4917      	ldr	r1, [pc, #92]	; (8001b08 <cmd_info+0x98>)
 8001aac:	4620      	mov	r0, r4
 8001aae:	f7ff fd9f 	bl	80015f0 <chprintf.lto_priv.72>
 8001ab2:	4a16      	ldr	r2, [pc, #88]	; (8001b0c <cmd_info+0x9c>)
 8001ab4:	4916      	ldr	r1, [pc, #88]	; (8001b10 <cmd_info+0xa0>)
 8001ab6:	4620      	mov	r0, r4
 8001ab8:	f7ff fd9a 	bl	80015f0 <chprintf.lto_priv.72>
 8001abc:	4a15      	ldr	r2, [pc, #84]	; (8001b14 <cmd_info+0xa4>)
 8001abe:	4916      	ldr	r1, [pc, #88]	; (8001b18 <cmd_info+0xa8>)
 8001ac0:	4620      	mov	r0, r4
 8001ac2:	f7ff fd95 	bl	80015f0 <chprintf.lto_priv.72>
 8001ac6:	4b15      	ldr	r3, [pc, #84]	; (8001b1c <cmd_info+0xac>)
 8001ac8:	4620      	mov	r0, r4
 8001aca:	9300      	str	r3, [sp, #0]
 8001acc:	4a14      	ldr	r2, [pc, #80]	; (8001b20 <cmd_info+0xb0>)
 8001ace:	4b15      	ldr	r3, [pc, #84]	; (8001b24 <cmd_info+0xb4>)
 8001ad0:	4915      	ldr	r1, [pc, #84]	; (8001b28 <cmd_info+0xb8>)
 8001ad2:	f7ff fd8d 	bl	80015f0 <chprintf.lto_priv.72>
 8001ad6:	b002      	add	sp, #8
 8001ad8:	bd10      	pop	{r4, pc}
 8001ada:	bf00      	nop
 8001adc:	08007780 	.word	0x08007780
 8001ae0:	08007998 	.word	0x08007998
 8001ae4:	08007788 	.word	0x08007788
 8001ae8:	08007790 	.word	0x08007790
 8001aec:	080077a4 	.word	0x080077a4
 8001af0:	080077ec 	.word	0x080077ec
 8001af4:	08007800 	.word	0x08007800
 8001af8:	08007808 	.word	0x08007808
 8001afc:	0800781c 	.word	0x0800781c
 8001b00:	08007828 	.word	0x08007828
 8001b04:	0800783c 	.word	0x0800783c
 8001b08:	08007854 	.word	0x08007854
 8001b0c:	08007868 	.word	0x08007868
 8001b10:	08007890 	.word	0x08007890
 8001b14:	080078a4 	.word	0x080078a4
 8001b18:	080078cc 	.word	0x080078cc
 8001b1c:	08007908 	.word	0x08007908
 8001b20:	080078e4 	.word	0x080078e4
 8001b24:	080078e0 	.word	0x080078e0
 8001b28:	080078f0 	.word	0x080078f0
 8001b2c:	00000000 	.word	0x00000000

08001b30 <bmk13_execute>:
 8001b30:	b510      	push	{r4, lr}
 8001b32:	482f      	ldr	r0, [pc, #188]	; (8001bf0 <bmk13_execute+0xc0>)
 8001b34:	4c2f      	ldr	r4, [pc, #188]	; (8001bf4 <bmk13_execute+0xc4>)
 8001b36:	f7fe fe83 	bl	8000840 <test_print>
 8001b3a:	f44f 70a8 	mov.w	r0, #336	; 0x150
 8001b3e:	f7fe fd57 	bl	80005f0 <test_printn.part.1>
 8001b42:	4620      	mov	r0, r4
 8001b44:	f7fe fe5c 	bl	8000800 <test_println>
 8001b48:	482b      	ldr	r0, [pc, #172]	; (8001bf8 <bmk13_execute+0xc8>)
 8001b4a:	f7fe fe79 	bl	8000840 <test_print>
 8001b4e:	2044      	movs	r0, #68	; 0x44
 8001b50:	f7fe fd4e 	bl	80005f0 <test_printn.part.1>
 8001b54:	4620      	mov	r0, r4
 8001b56:	f7fe fe53 	bl	8000800 <test_println>
 8001b5a:	4828      	ldr	r0, [pc, #160]	; (8001bfc <bmk13_execute+0xcc>)
 8001b5c:	f7fe fe70 	bl	8000840 <test_print>
 8001b60:	2014      	movs	r0, #20
 8001b62:	f7fe fd45 	bl	80005f0 <test_printn.part.1>
 8001b66:	4620      	mov	r0, r4
 8001b68:	f7fe fe4a 	bl	8000800 <test_println>
 8001b6c:	4824      	ldr	r0, [pc, #144]	; (8001c00 <bmk13_execute+0xd0>)
 8001b6e:	f7fe fe67 	bl	8000840 <test_print>
 8001b72:	200c      	movs	r0, #12
 8001b74:	f7fe fd3c 	bl	80005f0 <test_printn.part.1>
 8001b78:	4620      	mov	r0, r4
 8001b7a:	f7fe fe41 	bl	8000800 <test_println>
 8001b7e:	4821      	ldr	r0, [pc, #132]	; (8001c04 <bmk13_execute+0xd4>)
 8001b80:	f7fe fe5e 	bl	8000840 <test_print>
 8001b84:	2004      	movs	r0, #4
 8001b86:	f7fe fd33 	bl	80005f0 <test_printn.part.1>
 8001b8a:	4620      	mov	r0, r4
 8001b8c:	f7fe fe38 	bl	8000800 <test_println>
 8001b90:	481d      	ldr	r0, [pc, #116]	; (8001c08 <bmk13_execute+0xd8>)
 8001b92:	f7fe fe55 	bl	8000840 <test_print>
 8001b96:	2014      	movs	r0, #20
 8001b98:	f7fe fd2a 	bl	80005f0 <test_printn.part.1>
 8001b9c:	4620      	mov	r0, r4
 8001b9e:	f7fe fe2f 	bl	8000800 <test_println>
 8001ba2:	481a      	ldr	r0, [pc, #104]	; (8001c0c <bmk13_execute+0xdc>)
 8001ba4:	f7fe fe4c 	bl	8000840 <test_print>
 8001ba8:	2010      	movs	r0, #16
 8001baa:	f7fe fd21 	bl	80005f0 <test_printn.part.1>
 8001bae:	4620      	mov	r0, r4
 8001bb0:	f7fe fe26 	bl	8000800 <test_println>
 8001bb4:	4816      	ldr	r0, [pc, #88]	; (8001c10 <bmk13_execute+0xe0>)
 8001bb6:	f7fe fe43 	bl	8000840 <test_print>
 8001bba:	2008      	movs	r0, #8
 8001bbc:	f7fe fd18 	bl	80005f0 <test_printn.part.1>
 8001bc0:	4620      	mov	r0, r4
 8001bc2:	f7fe fe1d 	bl	8000800 <test_println>
 8001bc6:	4813      	ldr	r0, [pc, #76]	; (8001c14 <bmk13_execute+0xe4>)
 8001bc8:	f7fe fe3a 	bl	8000840 <test_print>
 8001bcc:	2024      	movs	r0, #36	; 0x24
 8001bce:	f7fe fd0f 	bl	80005f0 <test_printn.part.1>
 8001bd2:	4620      	mov	r0, r4
 8001bd4:	f7fe fe14 	bl	8000800 <test_println>
 8001bd8:	480f      	ldr	r0, [pc, #60]	; (8001c18 <bmk13_execute+0xe8>)
 8001bda:	f7fe fe31 	bl	8000840 <test_print>
 8001bde:	2028      	movs	r0, #40	; 0x28
 8001be0:	f7fe fd06 	bl	80005f0 <test_printn.part.1>
 8001be4:	4620      	mov	r0, r4
 8001be6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001bea:	f7fe be09 	b.w	8000800 <test_println>
 8001bee:	bf00      	nop
 8001bf0:	08007640 	.word	0x08007640
 8001bf4:	08007650 	.word	0x08007650
 8001bf8:	08007658 	.word	0x08007658
 8001bfc:	08007668 	.word	0x08007668
 8001c00:	08007678 	.word	0x08007678
 8001c04:	08007688 	.word	0x08007688
 8001c08:	08007698 	.word	0x08007698
 8001c0c:	080076a8 	.word	0x080076a8
 8001c10:	080076b8 	.word	0x080076b8
 8001c14:	080076c8 	.word	0x080076c8
 8001c18:	080076d8 	.word	0x080076d8
 8001c1c:	00000000 	.word	0x00000000

08001c20 <usbInitEndpointI>:
 8001c20:	6953      	ldr	r3, [r2, #20]
 8001c22:	b410      	push	{r4}
 8001c24:	b123      	cbz	r3, 8001c30 <usbInitEndpointI+0x10>
 8001c26:	2400      	movs	r4, #0
 8001c28:	601c      	str	r4, [r3, #0]
 8001c2a:	605c      	str	r4, [r3, #4]
 8001c2c:	609c      	str	r4, [r3, #8]
 8001c2e:	60dc      	str	r4, [r3, #12]
 8001c30:	6993      	ldr	r3, [r2, #24]
 8001c32:	b12b      	cbz	r3, 8001c40 <usbInitEndpointI+0x20>
 8001c34:	2400      	movs	r4, #0
 8001c36:	601c      	str	r4, [r3, #0]
 8001c38:	605c      	str	r4, [r3, #4]
 8001c3a:	609c      	str	r4, [r3, #8]
 8001c3c:	60dc      	str	r4, [r3, #12]
 8001c3e:	611c      	str	r4, [r3, #16]
 8001c40:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8001c44:	60da      	str	r2, [r3, #12]
 8001c46:	bc10      	pop	{r4}
 8001c48:	f7fe be22 	b.w	8000890 <usb_lld_init_endpoint>
 8001c4c:	0000      	movs	r0, r0
	...

08001c50 <usb_event>:
 8001c50:	2902      	cmp	r1, #2
 8001c52:	d144      	bne.n	8001cde <usb_event+0x8e>
 8001c54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001c56:	460d      	mov	r5, r1
 8001c58:	2320      	movs	r3, #32
 8001c5a:	f383 8811 	msr	BASEPRI, r3
 8001c5e:	2700      	movs	r7, #0
 8001c60:	4c1f      	ldr	r4, [pc, #124]	; (8001ce0 <usb_event+0x90>)
 8001c62:	4a20      	ldr	r2, [pc, #128]	; (8001ce4 <usb_event+0x94>)
 8001c64:	2101      	movs	r1, #1
 8001c66:	f7ff ffdb 	bl	8001c20 <usbInitEndpointI>
 8001c6a:	4629      	mov	r1, r5
 8001c6c:	4a1e      	ldr	r2, [pc, #120]	; (8001ce8 <usb_event+0x98>)
 8001c6e:	f7ff ffd7 	bl	8001c20 <usbInitEndpointI>
 8001c72:	f104 060c 	add.w	r6, r4, #12
 8001c76:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 8001c7a:	69a3      	ldr	r3, [r4, #24]
 8001c7c:	4630      	mov	r0, r6
 8001c7e:	f06f 0101 	mvn.w	r1, #1
 8001c82:	6815      	ldr	r5, [r2, #0]
 8001c84:	e9c4 3308 	strd	r3, r3, [r4, #32]
 8001c88:	6167      	str	r7, [r4, #20]
 8001c8a:	f7ff fb11 	bl	80012b0 <chThdDequeueAllI>
 8001c8e:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 8001c92:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8001c96:	1a9b      	subs	r3, r3, r2
 8001c98:	f06f 0101 	mvn.w	r1, #1
 8001c9c:	e9c4 2211 	strd	r2, r2, [r4, #68]	; 0x44
 8001ca0:	63a3      	str	r3, [r4, #56]	; 0x38
 8001ca2:	f7ff fb05 	bl	80012b0 <chThdDequeueAllI>
 8001ca6:	1d20      	adds	r0, r4, #4
 8001ca8:	2101      	movs	r1, #1
 8001caa:	f7ff f9f1 	bl	8001090 <chEvtBroadcastFlagsI>
 8001cae:	2201      	movs	r2, #1
 8001cb0:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8001cb4:	7959      	ldrb	r1, [r3, #5]
 8001cb6:	eb05 0381 	add.w	r3, r5, r1, lsl #2
 8001cba:	68db      	ldr	r3, [r3, #12]
 8001cbc:	8a58      	ldrh	r0, [r3, #18]
 8001cbe:	699b      	ldr	r3, [r3, #24]
 8001cc0:	e9c3 0701 	strd	r0, r7, [r3, #4]
 8001cc4:	701a      	strb	r2, [r3, #0]
 8001cc6:	60de      	str	r6, [r3, #12]
 8001cc8:	4628      	mov	r0, r5
 8001cca:	f7fe fdd1 	bl	8000870 <usb_lld_prepare_receive>
 8001cce:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8001cd2:	7959      	ldrb	r1, [r3, #5]
 8001cd4:	f7fe fe7c 	bl	80009d0 <usbStartReceiveI>
 8001cd8:	f387 8811 	msr	BASEPRI, r7
 8001cdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001cde:	4770      	bx	lr
 8001ce0:	20001278 	.word	0x20001278
 8001ce4:	08007ae0 	.word	0x08007ae0
 8001ce8:	08007b10 	.word	0x08007b10
 8001cec:	00000000 	.word	0x00000000

08001cf0 <chThdYield>:
 8001cf0:	b570      	push	{r4, r5, r6, lr}
 8001cf2:	2320      	movs	r3, #32
 8001cf4:	f383 8811 	msr	BASEPRI, r3
 8001cf8:	4a11      	ldr	r2, [pc, #68]	; (8001d40 <chThdYield+0x50>)
 8001cfa:	6810      	ldr	r0, [r2, #0]
 8001cfc:	6994      	ldr	r4, [r2, #24]
 8001cfe:	6883      	ldr	r3, [r0, #8]
 8001d00:	68a1      	ldr	r1, [r4, #8]
 8001d02:	428b      	cmp	r3, r1
 8001d04:	d203      	bcs.n	8001d0e <chThdYield+0x1e>
 8001d06:	2300      	movs	r3, #0
 8001d08:	f383 8811 	msr	BASEPRI, r3
 8001d0c:	bd70      	pop	{r4, r5, r6, pc}
 8001d0e:	2601      	movs	r6, #1
 8001d10:	2500      	movs	r5, #0
 8001d12:	6803      	ldr	r3, [r0, #0]
 8001d14:	605a      	str	r2, [r3, #4]
 8001d16:	6013      	str	r3, [r2, #0]
 8001d18:	7706      	strb	r6, [r0, #28]
 8001d1a:	6190      	str	r0, [r2, #24]
 8001d1c:	7725      	strb	r5, [r4, #28]
 8001d1e:	e000      	b.n	8001d22 <chThdYield+0x32>
 8001d20:	681b      	ldr	r3, [r3, #0]
 8001d22:	689a      	ldr	r2, [r3, #8]
 8001d24:	4291      	cmp	r1, r2
 8001d26:	d9fb      	bls.n	8001d20 <chThdYield+0x30>
 8001d28:	685a      	ldr	r2, [r3, #4]
 8001d2a:	4621      	mov	r1, r4
 8001d2c:	e9c4 3200 	strd	r3, r2, [r4]
 8001d30:	6014      	str	r4, [r2, #0]
 8001d32:	605c      	str	r4, [r3, #4]
 8001d34:	f7fe fa64 	bl	8000200 <_port_switch>
 8001d38:	2300      	movs	r3, #0
 8001d3a:	f383 8811 	msr	BASEPRI, r3
 8001d3e:	bd70      	pop	{r4, r5, r6, pc}
 8001d40:	20001558 	.word	0x20001558
	...

08001d50 <thread8>:
 8001d50:	b538      	push	{r3, r4, r5, lr}
 8001d52:	4604      	mov	r4, r0
 8001d54:	4d08      	ldr	r5, [pc, #32]	; (8001d78 <thread8+0x28>)
 8001d56:	f7ff ffcb 	bl	8001cf0 <chThdYield>
 8001d5a:	f7ff ffc9 	bl	8001cf0 <chThdYield>
 8001d5e:	f7ff ffc7 	bl	8001cf0 <chThdYield>
 8001d62:	f7ff ffc5 	bl	8001cf0 <chThdYield>
 8001d66:	6823      	ldr	r3, [r4, #0]
 8001d68:	69aa      	ldr	r2, [r5, #24]
 8001d6a:	3304      	adds	r3, #4
 8001d6c:	6023      	str	r3, [r4, #0]
 8001d6e:	7f53      	ldrb	r3, [r2, #29]
 8001d70:	075b      	lsls	r3, r3, #29
 8001d72:	d5f0      	bpl.n	8001d56 <thread8+0x6>
 8001d74:	bd38      	pop	{r3, r4, r5, pc}
 8001d76:	bf00      	nop
 8001d78:	20001558 	.word	0x20001558
 8001d7c:	00000000 	.word	0x00000000

08001d80 <chSchDoRescheduleAhead>:
 8001d80:	b470      	push	{r4, r5, r6}
 8001d82:	2601      	movs	r6, #1
 8001d84:	2500      	movs	r5, #0
 8001d86:	4a0c      	ldr	r2, [pc, #48]	; (8001db8 <chSchDoRescheduleAhead+0x38>)
 8001d88:	6810      	ldr	r0, [r2, #0]
 8001d8a:	6994      	ldr	r4, [r2, #24]
 8001d8c:	6803      	ldr	r3, [r0, #0]
 8001d8e:	68a1      	ldr	r1, [r4, #8]
 8001d90:	6013      	str	r3, [r2, #0]
 8001d92:	605a      	str	r2, [r3, #4]
 8001d94:	7706      	strb	r6, [r0, #28]
 8001d96:	6190      	str	r0, [r2, #24]
 8001d98:	7725      	strb	r5, [r4, #28]
 8001d9a:	e000      	b.n	8001d9e <chSchDoRescheduleAhead+0x1e>
 8001d9c:	681b      	ldr	r3, [r3, #0]
 8001d9e:	689a      	ldr	r2, [r3, #8]
 8001da0:	4291      	cmp	r1, r2
 8001da2:	d3fb      	bcc.n	8001d9c <chSchDoRescheduleAhead+0x1c>
 8001da4:	685a      	ldr	r2, [r3, #4]
 8001da6:	4621      	mov	r1, r4
 8001da8:	e9c4 3200 	strd	r3, r2, [r4]
 8001dac:	6014      	str	r4, [r2, #0]
 8001dae:	605c      	str	r4, [r3, #4]
 8001db0:	bc70      	pop	{r4, r5, r6}
 8001db2:	f7fe ba25 	b.w	8000200 <_port_switch>
 8001db6:	bf00      	nop
 8001db8:	20001558 	.word	0x20001558
 8001dbc:	00000000 	.word	0x00000000

08001dc0 <chSchRescheduleS>:
 8001dc0:	4b04      	ldr	r3, [pc, #16]	; (8001dd4 <chSchRescheduleS+0x14>)
 8001dc2:	681a      	ldr	r2, [r3, #0]
 8001dc4:	699b      	ldr	r3, [r3, #24]
 8001dc6:	6892      	ldr	r2, [r2, #8]
 8001dc8:	689b      	ldr	r3, [r3, #8]
 8001dca:	429a      	cmp	r2, r3
 8001dcc:	d800      	bhi.n	8001dd0 <chSchRescheduleS+0x10>
 8001dce:	4770      	bx	lr
 8001dd0:	f7ff bfd6 	b.w	8001d80 <chSchDoRescheduleAhead>
 8001dd4:	20001558 	.word	0x20001558
	...

08001de0 <thread4.lto_priv.81>:
 8001de0:	b508      	push	{r3, lr}
 8001de2:	2220      	movs	r2, #32
 8001de4:	f382 8811 	msr	BASEPRI, r2
 8001de8:	6883      	ldr	r3, [r0, #8]
 8001dea:	2b00      	cmp	r3, #0
 8001dec:	dd05      	ble.n	8001dfa <thread4.lto_priv.81+0x1a>
 8001dee:	f7ff ffe7 	bl	8001dc0 <chSchRescheduleS>
 8001df2:	2300      	movs	r3, #0
 8001df4:	f383 8811 	msr	BASEPRI, r3
 8001df8:	bd08      	pop	{r3, pc}
 8001dfa:	f7ff f9c9 	bl	8001190 <chSemSignalI>
 8001dfe:	f7ff ffdf 	bl	8001dc0 <chSchRescheduleS>
 8001e02:	2300      	movs	r3, #0
 8001e04:	f383 8811 	msr	BASEPRI, r3
 8001e08:	bd08      	pop	{r3, pc}
 8001e0a:	bf00      	nop
 8001e0c:	0000      	movs	r0, r0
	...

08001e10 <chMtxUnlockAll>:
 8001e10:	4a13      	ldr	r2, [pc, #76]	; (8001e60 <chMtxUnlockAll+0x50>)
 8001e12:	b570      	push	{r4, r5, r6, lr}
 8001e14:	2320      	movs	r3, #32
 8001e16:	6994      	ldr	r4, [r2, #24]
 8001e18:	f383 8811 	msr	BASEPRI, r3
 8001e1c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001e1e:	b1b3      	cbz	r3, 8001e4e <chMtxUnlockAll+0x3e>
 8001e20:	2600      	movs	r6, #0
 8001e22:	681a      	ldr	r2, [r3, #0]
 8001e24:	68d9      	ldr	r1, [r3, #12]
 8001e26:	4293      	cmp	r3, r2
 8001e28:	63a1      	str	r1, [r4, #56]	; 0x38
 8001e2a:	d014      	beq.n	8001e56 <chMtxUnlockAll+0x46>
 8001e2c:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8001e2e:	6811      	ldr	r1, [r2, #0]
 8001e30:	4610      	mov	r0, r2
 8001e32:	6019      	str	r1, [r3, #0]
 8001e34:	604b      	str	r3, [r1, #4]
 8001e36:	e9c3 2502 	strd	r2, r5, [r3, #8]
 8001e3a:	6393      	str	r3, [r2, #56]	; 0x38
 8001e3c:	f7ff f888 	bl	8000f50 <chSchReadyI>
 8001e40:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001e42:	2b00      	cmp	r3, #0
 8001e44:	d1ed      	bne.n	8001e22 <chMtxUnlockAll+0x12>
 8001e46:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8001e48:	60a3      	str	r3, [r4, #8]
 8001e4a:	f7ff ffb9 	bl	8001dc0 <chSchRescheduleS>
 8001e4e:	2300      	movs	r3, #0
 8001e50:	f383 8811 	msr	BASEPRI, r3
 8001e54:	bd70      	pop	{r4, r5, r6, pc}
 8001e56:	609e      	str	r6, [r3, #8]
 8001e58:	460b      	mov	r3, r1
 8001e5a:	2b00      	cmp	r3, #0
 8001e5c:	d1e1      	bne.n	8001e22 <chMtxUnlockAll+0x12>
 8001e5e:	e7f2      	b.n	8001e46 <chMtxUnlockAll+0x36>
 8001e60:	20001558 	.word	0x20001558
	...

08001e70 <chThdSetPriority>:
 8001e70:	b510      	push	{r4, lr}
 8001e72:	2320      	movs	r3, #32
 8001e74:	f383 8811 	msr	BASEPRI, r3
 8001e78:	4b08      	ldr	r3, [pc, #32]	; (8001e9c <chThdSetPriority+0x2c>)
 8001e7a:	699b      	ldr	r3, [r3, #24]
 8001e7c:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8001e7e:	6899      	ldr	r1, [r3, #8]
 8001e80:	42a1      	cmp	r1, r4
 8001e82:	d001      	beq.n	8001e88 <chThdSetPriority+0x18>
 8001e84:	4281      	cmp	r1, r0
 8001e86:	d200      	bcs.n	8001e8a <chThdSetPriority+0x1a>
 8001e88:	6098      	str	r0, [r3, #8]
 8001e8a:	63d8      	str	r0, [r3, #60]	; 0x3c
 8001e8c:	f7ff ff98 	bl	8001dc0 <chSchRescheduleS>
 8001e90:	2300      	movs	r3, #0
 8001e92:	f383 8811 	msr	BASEPRI, r3
 8001e96:	4620      	mov	r0, r4
 8001e98:	bd10      	pop	{r4, pc}
 8001e9a:	bf00      	nop
 8001e9c:	20001558 	.word	0x20001558

08001ea0 <thd3_execute>:
 8001ea0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ea2:	4e49      	ldr	r6, [pc, #292]	; (8001fc8 <thd3_execute+0x128>)
 8001ea4:	69b3      	ldr	r3, [r6, #24]
 8001ea6:	689c      	ldr	r4, [r3, #8]
 8001ea8:	1c65      	adds	r5, r4, #1
 8001eaa:	4628      	mov	r0, r5
 8001eac:	f7ff ffe0 	bl	8001e70 <chThdSetPriority>
 8001eb0:	4607      	mov	r7, r0
 8001eb2:	1b39      	subs	r1, r7, r4
 8001eb4:	fab1 f181 	clz	r1, r1
 8001eb8:	2001      	movs	r0, #1
 8001eba:	0949      	lsrs	r1, r1, #5
 8001ebc:	f7fe fc50 	bl	8000760 <_test_assert>
 8001ec0:	b100      	cbz	r0, 8001ec4 <thd3_execute+0x24>
 8001ec2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001ec4:	69b3      	ldr	r3, [r6, #24]
 8001ec6:	2002      	movs	r0, #2
 8001ec8:	6899      	ldr	r1, [r3, #8]
 8001eca:	1b49      	subs	r1, r1, r5
 8001ecc:	fab1 f181 	clz	r1, r1
 8001ed0:	0949      	lsrs	r1, r1, #5
 8001ed2:	f7fe fc45 	bl	8000760 <_test_assert>
 8001ed6:	2800      	cmp	r0, #0
 8001ed8:	d1f3      	bne.n	8001ec2 <thd3_execute+0x22>
 8001eda:	4638      	mov	r0, r7
 8001edc:	f7ff ffc8 	bl	8001e70 <chThdSetPriority>
 8001ee0:	1a29      	subs	r1, r5, r0
 8001ee2:	fab1 f181 	clz	r1, r1
 8001ee6:	2003      	movs	r0, #3
 8001ee8:	0949      	lsrs	r1, r1, #5
 8001eea:	f7fe fc39 	bl	8000760 <_test_assert>
 8001eee:	2800      	cmp	r0, #0
 8001ef0:	d1e7      	bne.n	8001ec2 <thd3_execute+0x22>
 8001ef2:	69b3      	ldr	r3, [r6, #24]
 8001ef4:	2004      	movs	r0, #4
 8001ef6:	6899      	ldr	r1, [r3, #8]
 8001ef8:	1b09      	subs	r1, r1, r4
 8001efa:	fab1 f181 	clz	r1, r1
 8001efe:	0949      	lsrs	r1, r1, #5
 8001f00:	f7fe fc2e 	bl	8000760 <_test_assert>
 8001f04:	2800      	cmp	r0, #0
 8001f06:	d1dc      	bne.n	8001ec2 <thd3_execute+0x22>
 8001f08:	2320      	movs	r3, #32
 8001f0a:	f383 8811 	msr	BASEPRI, r3
 8001f0e:	69b2      	ldr	r2, [r6, #24]
 8001f10:	6893      	ldr	r3, [r2, #8]
 8001f12:	3302      	adds	r3, #2
 8001f14:	6093      	str	r3, [r2, #8]
 8001f16:	f380 8811 	msr	BASEPRI, r0
 8001f1a:	69b3      	ldr	r3, [r6, #24]
 8001f1c:	1ca7      	adds	r7, r4, #2
 8001f1e:	6899      	ldr	r1, [r3, #8]
 8001f20:	2005      	movs	r0, #5
 8001f22:	1bc9      	subs	r1, r1, r7
 8001f24:	fab1 f181 	clz	r1, r1
 8001f28:	0949      	lsrs	r1, r1, #5
 8001f2a:	f7fe fc19 	bl	8000760 <_test_assert>
 8001f2e:	2800      	cmp	r0, #0
 8001f30:	d1c7      	bne.n	8001ec2 <thd3_execute+0x22>
 8001f32:	4628      	mov	r0, r5
 8001f34:	f7ff ff9c 	bl	8001e70 <chThdSetPriority>
 8001f38:	1b01      	subs	r1, r0, r4
 8001f3a:	fab1 f181 	clz	r1, r1
 8001f3e:	2006      	movs	r0, #6
 8001f40:	0949      	lsrs	r1, r1, #5
 8001f42:	f7fe fc0d 	bl	8000760 <_test_assert>
 8001f46:	2800      	cmp	r0, #0
 8001f48:	d1bb      	bne.n	8001ec2 <thd3_execute+0x22>
 8001f4a:	69b3      	ldr	r3, [r6, #24]
 8001f4c:	2007      	movs	r0, #7
 8001f4e:	6899      	ldr	r1, [r3, #8]
 8001f50:	1bc9      	subs	r1, r1, r7
 8001f52:	fab1 f181 	clz	r1, r1
 8001f56:	0949      	lsrs	r1, r1, #5
 8001f58:	f7fe fc02 	bl	8000760 <_test_assert>
 8001f5c:	2800      	cmp	r0, #0
 8001f5e:	d1b0      	bne.n	8001ec2 <thd3_execute+0x22>
 8001f60:	69b3      	ldr	r3, [r6, #24]
 8001f62:	2008      	movs	r0, #8
 8001f64:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001f66:	1b4f      	subs	r7, r1, r5
 8001f68:	4279      	negs	r1, r7
 8001f6a:	4179      	adcs	r1, r7
 8001f6c:	f7fe fbf8 	bl	8000760 <_test_assert>
 8001f70:	2800      	cmp	r0, #0
 8001f72:	d1a6      	bne.n	8001ec2 <thd3_execute+0x22>
 8001f74:	1ce7      	adds	r7, r4, #3
 8001f76:	4638      	mov	r0, r7
 8001f78:	f7ff ff7a 	bl	8001e70 <chThdSetPriority>
 8001f7c:	1a28      	subs	r0, r5, r0
 8001f7e:	4241      	negs	r1, r0
 8001f80:	4141      	adcs	r1, r0
 8001f82:	2009      	movs	r0, #9
 8001f84:	f7fe fbec 	bl	8000760 <_test_assert>
 8001f88:	2800      	cmp	r0, #0
 8001f8a:	d19a      	bne.n	8001ec2 <thd3_execute+0x22>
 8001f8c:	69b3      	ldr	r3, [r6, #24]
 8001f8e:	200a      	movs	r0, #10
 8001f90:	6899      	ldr	r1, [r3, #8]
 8001f92:	1bca      	subs	r2, r1, r7
 8001f94:	4251      	negs	r1, r2
 8001f96:	4151      	adcs	r1, r2
 8001f98:	f7fe fbe2 	bl	8000760 <_test_assert>
 8001f9c:	2800      	cmp	r0, #0
 8001f9e:	d190      	bne.n	8001ec2 <thd3_execute+0x22>
 8001fa0:	69b3      	ldr	r3, [r6, #24]
 8001fa2:	200b      	movs	r0, #11
 8001fa4:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001fa6:	1bcb      	subs	r3, r1, r7
 8001fa8:	4259      	negs	r1, r3
 8001faa:	4159      	adcs	r1, r3
 8001fac:	f7fe fbd8 	bl	8000760 <_test_assert>
 8001fb0:	2800      	cmp	r0, #0
 8001fb2:	d186      	bne.n	8001ec2 <thd3_execute+0x22>
 8001fb4:	2320      	movs	r3, #32
 8001fb6:	f383 8811 	msr	BASEPRI, r3
 8001fba:	69b3      	ldr	r3, [r6, #24]
 8001fbc:	609c      	str	r4, [r3, #8]
 8001fbe:	63dc      	str	r4, [r3, #60]	; 0x3c
 8001fc0:	f380 8811 	msr	BASEPRI, r0
 8001fc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001fc6:	bf00      	nop
 8001fc8:	20001558 	.word	0x20001558
 8001fcc:	00000000 	.word	0x00000000

08001fd0 <chSysRestoreStatusX.part.3>:
 8001fd0:	b510      	push	{r4, lr}
 8001fd2:	f3ef 8405 	mrs	r4, IPSR
 8001fd6:	f3c4 0408 	ubfx	r4, r4, #0, #9
 8001fda:	b11c      	cbz	r4, 8001fe4 <chSysRestoreStatusX.part.3+0x14>
 8001fdc:	2300      	movs	r3, #0
 8001fde:	f383 8811 	msr	BASEPRI, r3
 8001fe2:	bd10      	pop	{r4, pc}
 8001fe4:	f7ff feec 	bl	8001dc0 <chSchRescheduleS>
 8001fe8:	f384 8811 	msr	BASEPRI, r4
 8001fec:	bd10      	pop	{r4, pc}
 8001fee:	bf00      	nop

08001ff0 <usb_packet_write_from_queue>:
 8001ff0:	6803      	ldr	r3, [r0, #0]
 8001ff2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001ff6:	f103 5e00 	add.w	lr, r3, #536870912	; 0x20000000
 8001ffa:	f50e 5e40 	add.w	lr, lr, #12288	; 0x3000
 8001ffe:	ea5f 0852 	movs.w	r8, r2, lsr #1
 8002002:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8002006:	6042      	str	r2, [r0, #4]
 8002008:	d01b      	beq.n	8002042 <usb_packet_write_from_queue+0x52>
 800200a:	690f      	ldr	r7, [r1, #16]
 800200c:	4676      	mov	r6, lr
 800200e:	4644      	mov	r4, r8
 8002010:	e000      	b.n	8002014 <usb_packet_write_from_queue+0x24>
 8002012:	4666      	mov	r6, ip
 8002014:	6988      	ldr	r0, [r1, #24]
 8002016:	f106 0c04 	add.w	ip, r6, #4
 800201a:	1c43      	adds	r3, r0, #1
 800201c:	42bb      	cmp	r3, r7
 800201e:	618b      	str	r3, [r1, #24]
 8002020:	bf28      	it	cs
 8002022:	68cb      	ldrcs	r3, [r1, #12]
 8002024:	7800      	ldrb	r0, [r0, #0]
 8002026:	1c5d      	adds	r5, r3, #1
 8002028:	618d      	str	r5, [r1, #24]
 800202a:	781b      	ldrb	r3, [r3, #0]
 800202c:	42af      	cmp	r7, r5
 800202e:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
 8002032:	bf9c      	itt	ls
 8002034:	68c8      	ldrls	r0, [r1, #12]
 8002036:	6188      	strls	r0, [r1, #24]
 8002038:	3c01      	subs	r4, #1
 800203a:	6033      	str	r3, [r6, #0]
 800203c:	d1e9      	bne.n	8002012 <usb_packet_write_from_queue+0x22>
 800203e:	eb0e 0e88 	add.w	lr, lr, r8, lsl #2
 8002042:	07d3      	lsls	r3, r2, #31
 8002044:	d50b      	bpl.n	800205e <usb_packet_write_from_queue+0x6e>
 8002046:	6988      	ldr	r0, [r1, #24]
 8002048:	690c      	ldr	r4, [r1, #16]
 800204a:	1c43      	adds	r3, r0, #1
 800204c:	618b      	str	r3, [r1, #24]
 800204e:	42a3      	cmp	r3, r4
 8002050:	7800      	ldrb	r0, [r0, #0]
 8002052:	bf28      	it	cs
 8002054:	68cb      	ldrcs	r3, [r1, #12]
 8002056:	f8ce 0000 	str.w	r0, [lr]
 800205a:	bf28      	it	cs
 800205c:	618b      	strcs	r3, [r1, #24]
 800205e:	f7ff f9df 	bl	8001420 <chSysGetStatusAndLockX>
 8002062:	4604      	mov	r4, r0
 8002064:	688b      	ldr	r3, [r1, #8]
 8002066:	4608      	mov	r0, r1
 8002068:	441a      	add	r2, r3
 800206a:	608a      	str	r2, [r1, #8]
 800206c:	2100      	movs	r1, #0
 800206e:	f7ff f91f 	bl	80012b0 <chThdDequeueAllI>
 8002072:	b91c      	cbnz	r4, 800207c <usb_packet_write_from_queue+0x8c>
 8002074:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002078:	f7ff bfaa 	b.w	8001fd0 <chSysRestoreStatusX.part.3>
 800207c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002080 <usb_lld_prepare_transmit>:
 8002080:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8002084:	68c2      	ldr	r2, [r0, #12]
 8002086:	b410      	push	{r4}
 8002088:	6950      	ldr	r0, [r2, #20]
 800208a:	00cc      	lsls	r4, r1, #3
 800208c:	8a12      	ldrh	r2, [r2, #16]
 800208e:	6841      	ldr	r1, [r0, #4]
 8002090:	7803      	ldrb	r3, [r0, #0]
 8002092:	428a      	cmp	r2, r1
 8002094:	bf28      	it	cs
 8002096:	460a      	movcs	r2, r1
 8002098:	68c1      	ldr	r1, [r0, #12]
 800209a:	b9eb      	cbnz	r3, 80020d8 <usb_lld_prepare_transmit+0x58>
 800209c:	4b14      	ldr	r3, [pc, #80]	; (80020f0 <usb_lld_prepare_transmit+0x70>)
 800209e:	1c50      	adds	r0, r2, #1
 80020a0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80020a2:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80020a6:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80020aa:	4423      	add	r3, r4
 80020ac:	005c      	lsls	r4, r3, #1
 80020ae:	6823      	ldr	r3, [r4, #0]
 80020b0:	6062      	str	r2, [r4, #4]
 80020b2:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80020b6:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80020ba:	0842      	lsrs	r2, r0, #1
 80020bc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80020c0:	d008      	beq.n	80020d4 <usb_lld_prepare_transmit+0x54>
 80020c2:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80020c6:	f831 0b02 	ldrh.w	r0, [r1], #2
 80020ca:	3304      	adds	r3, #4
 80020cc:	428a      	cmp	r2, r1
 80020ce:	f843 0c04 	str.w	r0, [r3, #-4]
 80020d2:	d1f8      	bne.n	80020c6 <usb_lld_prepare_transmit+0x46>
 80020d4:	bc10      	pop	{r4}
 80020d6:	4770      	bx	lr
 80020d8:	4b05      	ldr	r3, [pc, #20]	; (80020f0 <usb_lld_prepare_transmit+0x70>)
 80020da:	6d18      	ldr	r0, [r3, #80]	; 0x50
 80020dc:	f100 5000 	add.w	r0, r0, #536870912	; 0x20000000
 80020e0:	f500 5040 	add.w	r0, r0, #12288	; 0x3000
 80020e4:	4420      	add	r0, r4
 80020e6:	0040      	lsls	r0, r0, #1
 80020e8:	bc10      	pop	{r4}
 80020ea:	f7ff bf81 	b.w	8001ff0 <usb_packet_write_from_queue>
 80020ee:	bf00      	nop
 80020f0:	40005c00 	.word	0x40005c00
	...

08002100 <_usb_ep0out>:
 8002100:	f890 2064 	ldrb.w	r2, [r0, #100]	; 0x64
 8002104:	2a06      	cmp	r2, #6
 8002106:	d814      	bhi.n	8002132 <_usb_ep0out+0x32>
 8002108:	2301      	movs	r3, #1
 800210a:	4093      	lsls	r3, r2
 800210c:	f013 0f67 	tst.w	r3, #103	; 0x67
 8002110:	b570      	push	{r4, r5, r6, lr}
 8002112:	4604      	mov	r4, r0
 8002114:	d127      	bne.n	8002166 <_usb_ep0out+0x66>
 8002116:	f013 0208 	ands.w	r2, r3, #8
 800211a:	d00b      	beq.n	8002134 <_usb_ep0out+0x34>
 800211c:	68c3      	ldr	r3, [r0, #12]
 800211e:	699b      	ldr	r3, [r3, #24]
 8002120:	689b      	ldr	r3, [r3, #8]
 8002122:	b92b      	cbnz	r3, 8002130 <_usb_ep0out+0x30>
 8002124:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8002126:	b103      	cbz	r3, 800212a <_usb_ep0out+0x2a>
 8002128:	4798      	blx	r3
 800212a:	2300      	movs	r3, #0
 800212c:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8002130:	bd70      	pop	{r4, r5, r6, pc}
 8002132:	4770      	bx	lr
 8002134:	06db      	lsls	r3, r3, #27
 8002136:	d5fb      	bpl.n	8002130 <_usb_ep0out+0x30>
 8002138:	2105      	movs	r1, #5
 800213a:	68c3      	ldr	r3, [r0, #12]
 800213c:	f880 1064 	strb.w	r1, [r0, #100]	; 0x64
 8002140:	695b      	ldr	r3, [r3, #20]
 8002142:	4611      	mov	r1, r2
 8002144:	701a      	strb	r2, [r3, #0]
 8002146:	60da      	str	r2, [r3, #12]
 8002148:	e9c3 2201 	strd	r2, r2, [r3, #4]
 800214c:	f7ff ff98 	bl	8002080 <usb_lld_prepare_transmit>
 8002150:	2320      	movs	r3, #32
 8002152:	f383 8811 	msr	BASEPRI, r3
 8002156:	8923      	ldrh	r3, [r4, #8]
 8002158:	f013 0001 	ands.w	r0, r3, #1
 800215c:	d021      	beq.n	80021a2 <_usb_ep0out+0xa2>
 800215e:	2300      	movs	r3, #0
 8002160:	f383 8811 	msr	BASEPRI, r3
 8002164:	bd70      	pop	{r4, r5, r6, pc}
 8002166:	f248 0680 	movw	r6, #32896	; 0x8080
 800216a:	4911      	ldr	r1, [pc, #68]	; (80021b0 <_usb_ep0out+0xb0>)
 800216c:	6843      	ldr	r3, [r0, #4]
 800216e:	680a      	ldr	r2, [r1, #0]
 8002170:	681d      	ldr	r5, [r3, #0]
 8002172:	f422 42f0 	bic.w	r2, r2, #30720	; 0x7800
 8002176:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800217a:	f082 0210 	eor.w	r2, r2, #16
 800217e:	4332      	orrs	r2, r6
 8002180:	600a      	str	r2, [r1, #0]
 8002182:	680b      	ldr	r3, [r1, #0]
 8002184:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8002188:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800218c:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 8002190:	4333      	orrs	r3, r6
 8002192:	600b      	str	r3, [r1, #0]
 8002194:	b10d      	cbz	r5, 800219a <_usb_ep0out+0x9a>
 8002196:	2105      	movs	r1, #5
 8002198:	47a8      	blx	r5
 800219a:	2306      	movs	r3, #6
 800219c:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80021a0:	bd70      	pop	{r4, r5, r6, pc}
 80021a2:	f043 0301 	orr.w	r3, r3, #1
 80021a6:	8123      	strh	r3, [r4, #8]
 80021a8:	f7fe f85a 	bl	8000260 <usb_lld_start_in.constprop.17>
 80021ac:	e7d7      	b.n	800215e <_usb_ep0out+0x5e>
 80021ae:	bf00      	nop
 80021b0:	40005c00 	.word	0x40005c00
	...

080021c0 <_usb_ep0in>:
 80021c0:	b538      	push	{r3, r4, r5, lr}
 80021c2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80021c6:	4604      	mov	r4, r0
 80021c8:	2b06      	cmp	r3, #6
 80021ca:	d830      	bhi.n	800222e <_usb_ep0in+0x6e>
 80021cc:	e8df f003 	tbb	[pc, r3]
 80021d0:	5f37045f 	.word	0x5f37045f
 80021d4:	305f      	.short	0x305f
 80021d6:	5f          	.byte	0x5f
 80021d7:	00          	.byte	0x00
 80021d8:	f890 207b 	ldrb.w	r2, [r0, #123]	; 0x7b
 80021dc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 80021e0:	6ec1      	ldr	r1, [r0, #108]	; 0x6c
 80021e2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80021e6:	4299      	cmp	r1, r3
 80021e8:	68c2      	ldr	r2, [r0, #12]
 80021ea:	d229      	bcs.n	8002240 <_usb_ep0in+0x80>
 80021ec:	8a10      	ldrh	r0, [r2, #16]
 80021ee:	fbb1 f3f0 	udiv	r3, r1, r0
 80021f2:	fb00 1313 	mls	r3, r0, r3, r1
 80021f6:	bb1b      	cbnz	r3, 8002240 <_usb_ep0in+0x80>
 80021f8:	6952      	ldr	r2, [r2, #20]
 80021fa:	4619      	mov	r1, r3
 80021fc:	7013      	strb	r3, [r2, #0]
 80021fe:	60d3      	str	r3, [r2, #12]
 8002200:	e9c2 3301 	strd	r3, r3, [r2, #4]
 8002204:	4620      	mov	r0, r4
 8002206:	f7ff ff3b 	bl	8002080 <usb_lld_prepare_transmit>
 800220a:	2320      	movs	r3, #32
 800220c:	f383 8811 	msr	BASEPRI, r3
 8002210:	8923      	ldrh	r3, [r4, #8]
 8002212:	f013 0001 	ands.w	r0, r3, #1
 8002216:	d104      	bne.n	8002222 <_usb_ep0in+0x62>
 8002218:	f043 0301 	orr.w	r3, r3, #1
 800221c:	8123      	strh	r3, [r4, #8]
 800221e:	f7fe f81f 	bl	8000260 <usb_lld_start_in.constprop.17>
 8002222:	2300      	movs	r3, #0
 8002224:	f383 8811 	msr	BASEPRI, r3
 8002228:	2302      	movs	r3, #2
 800222a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 800222e:	bd38      	pop	{r3, r4, r5, pc}
 8002230:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8002232:	b103      	cbz	r3, 8002236 <_usb_ep0in+0x76>
 8002234:	4798      	blx	r3
 8002236:	2300      	movs	r3, #0
 8002238:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 800223c:	bd38      	pop	{r3, r4, r5, pc}
 800223e:	68c2      	ldr	r2, [r0, #12]
 8002240:	2103      	movs	r1, #3
 8002242:	2300      	movs	r3, #0
 8002244:	f884 1064 	strb.w	r1, [r4, #100]	; 0x64
 8002248:	6992      	ldr	r2, [r2, #24]
 800224a:	4619      	mov	r1, r3
 800224c:	7013      	strb	r3, [r2, #0]
 800224e:	60d3      	str	r3, [r2, #12]
 8002250:	e9c2 3301 	strd	r3, r3, [r2, #4]
 8002254:	4620      	mov	r0, r4
 8002256:	f7fe fb0b 	bl	8000870 <usb_lld_prepare_receive>
 800225a:	2320      	movs	r3, #32
 800225c:	f383 8811 	msr	BASEPRI, r3
 8002260:	8963      	ldrh	r3, [r4, #10]
 8002262:	07da      	lsls	r2, r3, #31
 8002264:	d40f      	bmi.n	8002286 <_usb_ep0in+0xc6>
 8002266:	4919      	ldr	r1, [pc, #100]	; (80022cc <_usb_ep0in+0x10c>)
 8002268:	f043 0201 	orr.w	r2, r3, #1
 800226c:	680b      	ldr	r3, [r1, #0]
 800226e:	8162      	strh	r2, [r4, #10]
 8002270:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8002274:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002278:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 800227c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002280:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002284:	600b      	str	r3, [r1, #0]
 8002286:	2300      	movs	r3, #0
 8002288:	f383 8811 	msr	BASEPRI, r3
 800228c:	bd38      	pop	{r3, r4, r5, pc}
 800228e:	f248 0080 	movw	r0, #32896	; 0x8080
 8002292:	490e      	ldr	r1, [pc, #56]	; (80022cc <_usb_ep0in+0x10c>)
 8002294:	6863      	ldr	r3, [r4, #4]
 8002296:	680a      	ldr	r2, [r1, #0]
 8002298:	681d      	ldr	r5, [r3, #0]
 800229a:	f422 42f0 	bic.w	r2, r2, #30720	; 0x7800
 800229e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80022a2:	f082 0210 	eor.w	r2, r2, #16
 80022a6:	4302      	orrs	r2, r0
 80022a8:	600a      	str	r2, [r1, #0]
 80022aa:	680b      	ldr	r3, [r1, #0]
 80022ac:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 80022b0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80022b4:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 80022b8:	4303      	orrs	r3, r0
 80022ba:	600b      	str	r3, [r1, #0]
 80022bc:	b115      	cbz	r5, 80022c4 <_usb_ep0in+0x104>
 80022be:	2105      	movs	r1, #5
 80022c0:	4620      	mov	r0, r4
 80022c2:	47a8      	blx	r5
 80022c4:	2306      	movs	r3, #6
 80022c6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80022ca:	bd38      	pop	{r3, r4, r5, pc}
 80022cc:	40005c00 	.word	0x40005c00

080022d0 <_usb_ep0setup>:
 80022d0:	2200      	movs	r2, #0
 80022d2:	4bc3      	ldr	r3, [pc, #780]	; (80025e0 <_usb_ep0setup+0x310>)
 80022d4:	b570      	push	{r4, r5, r6, lr}
 80022d6:	f880 2064 	strb.w	r2, [r0, #100]	; 0x64
 80022da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80022dc:	4604      	mov	r4, r0
 80022de:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80022e2:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80022e6:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 80022ea:	0049      	lsls	r1, r1, #1
 80022ec:	688b      	ldr	r3, [r1, #8]
 80022ee:	f100 0274 	add.w	r2, r0, #116	; 0x74
 80022f2:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80022f6:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80022fa:	005b      	lsls	r3, r3, #1
 80022fc:	f103 0010 	add.w	r0, r3, #16
 8002300:	6819      	ldr	r1, [r3, #0]
 8002302:	3304      	adds	r3, #4
 8002304:	4283      	cmp	r3, r0
 8002306:	f822 1b02 	strh.w	r1, [r2], #2
 800230a:	d1f9      	bne.n	8002300 <_usb_ep0setup+0x30>
 800230c:	6863      	ldr	r3, [r4, #4]
 800230e:	689b      	ldr	r3, [r3, #8]
 8002310:	2b00      	cmp	r3, #0
 8002312:	d03d      	beq.n	8002390 <_usb_ep0setup+0xc0>
 8002314:	4620      	mov	r0, r4
 8002316:	4798      	blx	r3
 8002318:	2800      	cmp	r0, #0
 800231a:	d039      	beq.n	8002390 <_usb_ep0setup+0xc0>
 800231c:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 800231e:	f894 2074 	ldrb.w	r2, [r4, #116]	; 0x74
 8002322:	f894 007b 	ldrb.w	r0, [r4, #123]	; 0x7b
 8002326:	f894 307a 	ldrb.w	r3, [r4, #122]	; 0x7a
 800232a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 800232e:	428b      	cmp	r3, r1
 8002330:	bf2c      	ite	cs
 8002332:	460b      	movcs	r3, r1
 8002334:	66e3      	strcc	r3, [r4, #108]	; 0x6c
 8002336:	0611      	lsls	r1, r2, #24
 8002338:	68e0      	ldr	r0, [r4, #12]
 800233a:	f100 80cc 	bmi.w	80024d6 <_usb_ep0setup+0x206>
 800233e:	2b00      	cmp	r3, #0
 8002340:	d07d      	beq.n	800243e <_usb_ep0setup+0x16e>
 8002342:	2204      	movs	r2, #4
 8002344:	2100      	movs	r1, #0
 8002346:	f884 2064 	strb.w	r2, [r4, #100]	; 0x64
 800234a:	6982      	ldr	r2, [r0, #24]
 800234c:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 800234e:	6053      	str	r3, [r2, #4]
 8002350:	60d0      	str	r0, [r2, #12]
 8002352:	7011      	strb	r1, [r2, #0]
 8002354:	6091      	str	r1, [r2, #8]
 8002356:	4620      	mov	r0, r4
 8002358:	f7fe fa8a 	bl	8000870 <usb_lld_prepare_receive>
 800235c:	2320      	movs	r3, #32
 800235e:	f383 8811 	msr	BASEPRI, r3
 8002362:	8963      	ldrh	r3, [r4, #10]
 8002364:	07da      	lsls	r2, r3, #31
 8002366:	d40f      	bmi.n	8002388 <_usb_ep0setup+0xb8>
 8002368:	499d      	ldr	r1, [pc, #628]	; (80025e0 <_usb_ep0setup+0x310>)
 800236a:	f043 0201 	orr.w	r2, r3, #1
 800236e:	680b      	ldr	r3, [r1, #0]
 8002370:	8162      	strh	r2, [r4, #10]
 8002372:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8002376:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800237a:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 800237e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002382:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002386:	600b      	str	r3, [r1, #0]
 8002388:	2300      	movs	r3, #0
 800238a:	f383 8811 	msr	BASEPRI, r3
 800238e:	bd70      	pop	{r4, r5, r6, pc}
 8002390:	f894 2074 	ldrb.w	r2, [r4, #116]	; 0x74
 8002394:	f012 0560 	ands.w	r5, r2, #96	; 0x60
 8002398:	4611      	mov	r1, r2
 800239a:	d01e      	beq.n	80023da <_usb_ep0setup+0x10a>
 800239c:	f248 0080 	movw	r0, #32896	; 0x8080
 80023a0:	498f      	ldr	r1, [pc, #572]	; (80025e0 <_usb_ep0setup+0x310>)
 80023a2:	6863      	ldr	r3, [r4, #4]
 80023a4:	680a      	ldr	r2, [r1, #0]
 80023a6:	681d      	ldr	r5, [r3, #0]
 80023a8:	f422 42f0 	bic.w	r2, r2, #30720	; 0x7800
 80023ac:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80023b0:	f082 0210 	eor.w	r2, r2, #16
 80023b4:	4302      	orrs	r2, r0
 80023b6:	600a      	str	r2, [r1, #0]
 80023b8:	680b      	ldr	r3, [r1, #0]
 80023ba:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 80023be:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80023c2:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 80023c6:	4303      	orrs	r3, r0
 80023c8:	600b      	str	r3, [r1, #0]
 80023ca:	b115      	cbz	r5, 80023d2 <_usb_ep0setup+0x102>
 80023cc:	2105      	movs	r1, #5
 80023ce:	4620      	mov	r0, r4
 80023d0:	47a8      	blx	r5
 80023d2:	2306      	movs	r3, #6
 80023d4:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80023d8:	bd70      	pop	{r4, r5, r6, pc}
 80023da:	f894 0075 	ldrb.w	r0, [r4, #117]	; 0x75
 80023de:	f002 037f 	and.w	r3, r2, #127	; 0x7f
 80023e2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80023e6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80023ea:	f000 80ff 	beq.w	80025ec <_usb_ep0setup+0x31c>
 80023ee:	d940      	bls.n	8002472 <_usb_ep0setup+0x1a2>
 80023f0:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 80023f4:	f000 80da 	beq.w	80025ac <_usb_ep0setup+0x2dc>
 80023f8:	d912      	bls.n	8002420 <_usb_ep0setup+0x150>
 80023fa:	f5b3 6f10 	cmp.w	r3, #2304	; 0x900
 80023fe:	f000 8081 	beq.w	8002504 <_usb_ep0setup+0x234>
 8002402:	f640 4102 	movw	r1, #3074	; 0xc02
 8002406:	428b      	cmp	r3, r1
 8002408:	f000 80c9 	beq.w	800259e <_usb_ep0setup+0x2ce>
 800240c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8002410:	d1c4      	bne.n	800239c <_usb_ep0setup+0xcc>
 8002412:	2101      	movs	r1, #1
 8002414:	f104 037f 	add.w	r3, r4, #127	; 0x7f
 8002418:	e9c4 151b 	strd	r1, r5, [r4, #108]	; 0x6c
 800241c:	66a3      	str	r3, [r4, #104]	; 0x68
 800241e:	e780      	b.n	8002322 <_usb_ep0setup+0x52>
 8002420:	f240 3202 	movw	r2, #770	; 0x302
 8002424:	4293      	cmp	r3, r2
 8002426:	f000 808f 	beq.w	8002548 <_usb_ep0setup+0x278>
 800242a:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 800242e:	d1b5      	bne.n	800239c <_usb_ep0setup+0xcc>
 8002430:	4b6c      	ldr	r3, [pc, #432]	; (80025e4 <_usb_ep0setup+0x314>)
 8002432:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002436:	6723      	str	r3, [r4, #112]	; 0x70
 8002438:	060b      	lsls	r3, r1, #24
 800243a:	68e0      	ldr	r0, [r4, #12]
 800243c:	d457      	bmi.n	80024ee <_usb_ep0setup+0x21e>
 800243e:	2300      	movs	r3, #0
 8002440:	2205      	movs	r2, #5
 8002442:	4619      	mov	r1, r3
 8002444:	f884 2064 	strb.w	r2, [r4, #100]	; 0x64
 8002448:	6942      	ldr	r2, [r0, #20]
 800244a:	e9c2 3301 	strd	r3, r3, [r2, #4]
 800244e:	7013      	strb	r3, [r2, #0]
 8002450:	60d3      	str	r3, [r2, #12]
 8002452:	4620      	mov	r0, r4
 8002454:	f7ff fe14 	bl	8002080 <usb_lld_prepare_transmit>
 8002458:	2320      	movs	r3, #32
 800245a:	f383 8811 	msr	BASEPRI, r3
 800245e:	8923      	ldrh	r3, [r4, #8]
 8002460:	f013 0001 	ands.w	r0, r3, #1
 8002464:	d190      	bne.n	8002388 <_usb_ep0setup+0xb8>
 8002466:	f043 0301 	orr.w	r3, r3, #1
 800246a:	8123      	strh	r3, [r4, #8]
 800246c:	f7fd fef8 	bl	8000260 <usb_lld_start_in.constprop.17>
 8002470:	e78a      	b.n	8002388 <_usb_ep0setup+0xb8>
 8002472:	2b02      	cmp	r3, #2
 8002474:	f000 80c9 	beq.w	800260a <_usb_ep0setup+0x33a>
 8002478:	f240 8086 	bls.w	8002588 <_usb_ep0setup+0x2b8>
 800247c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002480:	d053      	beq.n	800252a <_usb_ep0setup+0x25a>
 8002482:	f5b3 7f81 	cmp.w	r3, #258	; 0x102
 8002486:	d189      	bne.n	800239c <_usb_ep0setup+0xcc>
 8002488:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800248c:	2b00      	cmp	r3, #0
 800248e:	d185      	bne.n	800239c <_usb_ep0setup+0xcc>
 8002490:	f894 2078 	ldrb.w	r2, [r4, #120]	; 0x78
 8002494:	f012 030f 	ands.w	r3, r2, #15
 8002498:	d018      	beq.n	80024cc <_usb_ep0setup+0x1fc>
 800249a:	009b      	lsls	r3, r3, #2
 800249c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80024a0:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 80024a4:	f012 0f80 	tst.w	r2, #128	; 0x80
 80024a8:	681a      	ldr	r2, [r3, #0]
 80024aa:	f040 80d6 	bne.w	800265a <_usb_ep0setup+0x38a>
 80024ae:	f402 5240 	and.w	r2, r2, #12288	; 0x3000
 80024b2:	f5b2 5f40 	cmp.w	r2, #12288	; 0x3000
 80024b6:	d009      	beq.n	80024cc <_usb_ep0setup+0x1fc>
 80024b8:	681a      	ldr	r2, [r3, #0]
 80024ba:	f422 42f0 	bic.w	r2, r2, #30720	; 0x7800
 80024be:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80024c2:	f442 4220 	orr.w	r2, r2, #40960	; 0xa000
 80024c6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80024ca:	601a      	str	r2, [r3, #0]
 80024cc:	2300      	movs	r3, #0
 80024ce:	e9c4 331a 	strd	r3, r3, [r4, #104]	; 0x68
 80024d2:	6723      	str	r3, [r4, #112]	; 0x70
 80024d4:	e7b0      	b.n	8002438 <_usb_ep0setup+0x168>
 80024d6:	b153      	cbz	r3, 80024ee <_usb_ep0setup+0x21e>
 80024d8:	2201      	movs	r2, #1
 80024da:	2100      	movs	r1, #0
 80024dc:	f884 2064 	strb.w	r2, [r4, #100]	; 0x64
 80024e0:	6942      	ldr	r2, [r0, #20]
 80024e2:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 80024e4:	6053      	str	r3, [r2, #4]
 80024e6:	60d0      	str	r0, [r2, #12]
 80024e8:	7011      	strb	r1, [r2, #0]
 80024ea:	6091      	str	r1, [r2, #8]
 80024ec:	e7b1      	b.n	8002452 <_usb_ep0setup+0x182>
 80024ee:	2203      	movs	r2, #3
 80024f0:	2300      	movs	r3, #0
 80024f2:	f884 2064 	strb.w	r2, [r4, #100]	; 0x64
 80024f6:	6982      	ldr	r2, [r0, #24]
 80024f8:	4619      	mov	r1, r3
 80024fa:	7013      	strb	r3, [r2, #0]
 80024fc:	60d3      	str	r3, [r2, #12]
 80024fe:	e9c2 3301 	strd	r3, r3, [r2, #4]
 8002502:	e728      	b.n	8002356 <_usb_ep0setup+0x86>
 8002504:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 8002508:	f884 307f 	strb.w	r3, [r4, #127]	; 0x7f
 800250c:	2b00      	cmp	r3, #0
 800250e:	f040 8094 	bne.w	800263a <_usb_ep0setup+0x36a>
 8002512:	2303      	movs	r3, #3
 8002514:	7023      	strb	r3, [r4, #0]
 8002516:	6863      	ldr	r3, [r4, #4]
 8002518:	681b      	ldr	r3, [r3, #0]
 800251a:	2b00      	cmp	r3, #0
 800251c:	d0d6      	beq.n	80024cc <_usb_ep0setup+0x1fc>
 800251e:	2102      	movs	r1, #2
 8002520:	4620      	mov	r0, r4
 8002522:	4798      	blx	r3
 8002524:	f894 1074 	ldrb.w	r1, [r4, #116]	; 0x74
 8002528:	e7d0      	b.n	80024cc <_usb_ep0setup+0x1fc>
 800252a:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800252e:	2b01      	cmp	r3, #1
 8002530:	f47f af34 	bne.w	800239c <_usb_ep0setup+0xcc>
 8002534:	f8b4 307c 	ldrh.w	r3, [r4, #124]	; 0x7c
 8002538:	66a5      	str	r5, [r4, #104]	; 0x68
 800253a:	f023 0302 	bic.w	r3, r3, #2
 800253e:	e9c4 551b 	strd	r5, r5, [r4, #108]	; 0x6c
 8002542:	f8a4 307c 	strh.w	r3, [r4, #124]	; 0x7c
 8002546:	e777      	b.n	8002438 <_usb_ep0setup+0x168>
 8002548:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 800254c:	2b00      	cmp	r3, #0
 800254e:	f47f af25 	bne.w	800239c <_usb_ep0setup+0xcc>
 8002552:	f894 2078 	ldrb.w	r2, [r4, #120]	; 0x78
 8002556:	f012 030f 	ands.w	r3, r2, #15
 800255a:	d0b7      	beq.n	80024cc <_usb_ep0setup+0x1fc>
 800255c:	009b      	lsls	r3, r3, #2
 800255e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8002562:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8002566:	f012 0f80 	tst.w	r2, #128	; 0x80
 800256a:	681a      	ldr	r2, [r3, #0]
 800256c:	f040 8087 	bne.w	800267e <_usb_ep0setup+0x3ae>
 8002570:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002574:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8002578:	f482 5280 	eor.w	r2, r2, #4096	; 0x1000
 800257c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002580:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002584:	601a      	str	r2, [r3, #0]
 8002586:	e7a1      	b.n	80024cc <_usb_ep0setup+0x1fc>
 8002588:	b933      	cbnz	r3, 8002598 <_usb_ep0setup+0x2c8>
 800258a:	2102      	movs	r1, #2
 800258c:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002590:	e9c4 131b 	strd	r1, r3, [r4, #108]	; 0x6c
 8002594:	66a0      	str	r0, [r4, #104]	; 0x68
 8002596:	e6c4      	b.n	8002322 <_usb_ep0setup+0x52>
 8002598:	2b01      	cmp	r3, #1
 800259a:	f47f aeff 	bne.w	800239c <_usb_ep0setup+0xcc>
 800259e:	2102      	movs	r1, #2
 80025a0:	2000      	movs	r0, #0
 80025a2:	4b11      	ldr	r3, [pc, #68]	; (80025e8 <_usb_ep0setup+0x318>)
 80025a4:	e9c4 101b 	strd	r1, r0, [r4, #108]	; 0x6c
 80025a8:	66a3      	str	r3, [r4, #104]	; 0x68
 80025aa:	e6ba      	b.n	8002322 <_usb_ep0setup+0x52>
 80025ac:	f894 1079 	ldrb.w	r1, [r4, #121]	; 0x79
 80025b0:	6862      	ldr	r2, [r4, #4]
 80025b2:	f894 3078 	ldrb.w	r3, [r4, #120]	; 0x78
 80025b6:	6856      	ldr	r6, [r2, #4]
 80025b8:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80025bc:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 80025c0:	f894 1077 	ldrb.w	r1, [r4, #119]	; 0x77
 80025c4:	4620      	mov	r0, r4
 80025c6:	47b0      	blx	r6
 80025c8:	2800      	cmp	r0, #0
 80025ca:	f43f aee7 	beq.w	800239c <_usb_ep0setup+0xcc>
 80025ce:	e9d0 1300 	ldrd	r1, r3, [r0]
 80025d2:	f894 2074 	ldrb.w	r2, [r4, #116]	; 0x74
 80025d6:	e9c4 311a 	strd	r3, r1, [r4, #104]	; 0x68
 80025da:	6725      	str	r5, [r4, #112]	; 0x70
 80025dc:	e6a1      	b.n	8002322 <_usb_ep0setup+0x52>
 80025de:	bf00      	nop
 80025e0:	40005c00 	.word	0x40005c00
 80025e4:	08000aa1 	.word	0x08000aa1
 80025e8:	08008790 	.word	0x08008790
 80025ec:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 80025f0:	2b01      	cmp	r3, #1
 80025f2:	f47f aed3 	bne.w	800239c <_usb_ep0setup+0xcc>
 80025f6:	f8b4 307c 	ldrh.w	r3, [r4, #124]	; 0x7c
 80025fa:	66a5      	str	r5, [r4, #104]	; 0x68
 80025fc:	f043 0302 	orr.w	r3, r3, #2
 8002600:	e9c4 551b 	strd	r5, r5, [r4, #108]	; 0x6c
 8002604:	f8a4 307c 	strh.w	r3, [r4, #124]	; 0x7c
 8002608:	e716      	b.n	8002438 <_usb_ep0setup+0x168>
 800260a:	f894 3078 	ldrb.w	r3, [r4, #120]	; 0x78
 800260e:	f003 010f 	and.w	r1, r3, #15
 8002612:	f013 0f80 	tst.w	r3, #128	; 0x80
 8002616:	4b20      	ldr	r3, [pc, #128]	; (8002698 <_usb_ep0setup+0x3c8>)
 8002618:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800261c:	d110      	bne.n	8002640 <_usb_ep0setup+0x370>
 800261e:	f413 5340 	ands.w	r3, r3, #12288	; 0x3000
 8002622:	f43f aebb 	beq.w	800239c <_usb_ep0setup+0xcc>
 8002626:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800262a:	d10f      	bne.n	800264c <_usb_ep0setup+0x37c>
 800262c:	2102      	movs	r1, #2
 800262e:	2000      	movs	r0, #0
 8002630:	4b1a      	ldr	r3, [pc, #104]	; (800269c <_usb_ep0setup+0x3cc>)
 8002632:	e9c4 101b 	strd	r1, r0, [r4, #108]	; 0x6c
 8002636:	66a3      	str	r3, [r4, #104]	; 0x68
 8002638:	e673      	b.n	8002322 <_usb_ep0setup+0x52>
 800263a:	2304      	movs	r3, #4
 800263c:	7023      	strb	r3, [r4, #0]
 800263e:	e76a      	b.n	8002516 <_usb_ep0setup+0x246>
 8002640:	f013 0330 	ands.w	r3, r3, #48	; 0x30
 8002644:	f43f aeaa 	beq.w	800239c <_usb_ep0setup+0xcc>
 8002648:	2b10      	cmp	r3, #16
 800264a:	d0ef      	beq.n	800262c <_usb_ep0setup+0x35c>
 800264c:	2102      	movs	r1, #2
 800264e:	2000      	movs	r0, #0
 8002650:	4b13      	ldr	r3, [pc, #76]	; (80026a0 <_usb_ep0setup+0x3d0>)
 8002652:	e9c4 101b 	strd	r1, r0, [r4, #108]	; 0x6c
 8002656:	66a3      	str	r3, [r4, #104]	; 0x68
 8002658:	e663      	b.n	8002322 <_usb_ep0setup+0x52>
 800265a:	f002 0230 	and.w	r2, r2, #48	; 0x30
 800265e:	2a30      	cmp	r2, #48	; 0x30
 8002660:	f43f af34 	beq.w	80024cc <_usb_ep0setup+0x1fc>
 8002664:	681a      	ldr	r2, [r3, #0]
 8002666:	f422 42f0 	bic.w	r2, r2, #30720	; 0x7800
 800266a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800266e:	f082 0220 	eor.w	r2, r2, #32
 8002672:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002676:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800267a:	601a      	str	r2, [r3, #0]
 800267c:	e726      	b.n	80024cc <_usb_ep0setup+0x1fc>
 800267e:	f422 42f0 	bic.w	r2, r2, #30720	; 0x7800
 8002682:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002686:	f082 0210 	eor.w	r2, r2, #16
 800268a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800268e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002692:	601a      	str	r2, [r3, #0]
 8002694:	e71a      	b.n	80024cc <_usb_ep0setup+0x1fc>
 8002696:	bf00      	nop
 8002698:	40005c00 	.word	0x40005c00
 800269c:	08007b60 	.word	0x08007b60
 80026a0:	080075f0 	.word	0x080075f0
	...

080026b0 <onotify>:
 80026b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026b2:	6a04      	ldr	r4, [r0, #32]
 80026b4:	f8d4 2254 	ldr.w	r2, [r4, #596]	; 0x254
 80026b8:	6813      	ldr	r3, [r2, #0]
 80026ba:	7819      	ldrb	r1, [r3, #0]
 80026bc:	2904      	cmp	r1, #4
 80026be:	d000      	beq.n	80026c2 <onotify+0x12>
 80026c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80026c2:	7a21      	ldrb	r1, [r4, #8]
 80026c4:	2902      	cmp	r1, #2
 80026c6:	d1fb      	bne.n	80026c0 <onotify+0x10>
 80026c8:	2501      	movs	r5, #1
 80026ca:	7912      	ldrb	r2, [r2, #4]
 80026cc:	8919      	ldrh	r1, [r3, #8]
 80026ce:	fa05 f302 	lsl.w	r3, r5, r2
 80026d2:	400b      	ands	r3, r1
 80026d4:	d1f4      	bne.n	80026c0 <onotify+0x10>
 80026d6:	e9d4 020f 	ldrd	r0, r2, [r4, #60]	; 0x3c
 80026da:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80026dc:	1a12      	subs	r2, r2, r0
 80026de:	1a52      	subs	r2, r2, r1
 80026e0:	d0ee      	beq.n	80026c0 <onotify+0x10>
 80026e2:	f383 8811 	msr	BASEPRI, r3
 80026e6:	f8d4 1254 	ldr.w	r1, [r4, #596]	; 0x254
 80026ea:	f104 0730 	add.w	r7, r4, #48	; 0x30
 80026ee:	6808      	ldr	r0, [r1, #0]
 80026f0:	7909      	ldrb	r1, [r1, #4]
 80026f2:	eb00 0681 	add.w	r6, r0, r1, lsl #2
 80026f6:	68f6      	ldr	r6, [r6, #12]
 80026f8:	6976      	ldr	r6, [r6, #20]
 80026fa:	e9c6 2301 	strd	r2, r3, [r6, #4]
 80026fe:	7035      	strb	r5, [r6, #0]
 8002700:	60f7      	str	r7, [r6, #12]
 8002702:	f7ff fcbd 	bl	8002080 <usb_lld_prepare_transmit>
 8002706:	2320      	movs	r3, #32
 8002708:	f383 8811 	msr	BASEPRI, r3
 800270c:	f8d4 3254 	ldr.w	r3, [r4, #596]	; 0x254
 8002710:	7919      	ldrb	r1, [r3, #4]
 8002712:	6818      	ldr	r0, [r3, #0]
 8002714:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002718:	f7fe b942 	b.w	80009a0 <usbStartTransmitI>
 800271c:	0000      	movs	r0, r0
	...

08002720 <sduDataTransmitted>:
 8002720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002722:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8002726:	6a9c      	ldr	r4, [r3, #40]	; 0x28
 8002728:	b37c      	cbz	r4, 800278a <sduDataTransmitted+0x6a>
 800272a:	460e      	mov	r6, r1
 800272c:	4605      	mov	r5, r0
 800272e:	2720      	movs	r7, #32
 8002730:	f387 8811 	msr	BASEPRI, r7
 8002734:	2108      	movs	r1, #8
 8002736:	1d20      	adds	r0, r4, #4
 8002738:	f7fe fcaa 	bl	8001090 <chEvtBroadcastFlagsI>
 800273c:	e9d4 130f 	ldrd	r1, r3, [r4, #60]	; 0x3c
 8002740:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002742:	1a5b      	subs	r3, r3, r1
 8002744:	1a9b      	subs	r3, r3, r2
 8002746:	d121      	bne.n	800278c <sduDataTransmitted+0x6c>
 8002748:	eb05 0186 	add.w	r1, r5, r6, lsl #2
 800274c:	68cb      	ldr	r3, [r1, #12]
 800274e:	695a      	ldr	r2, [r3, #20]
 8002750:	6852      	ldr	r2, [r2, #4]
 8002752:	b1ba      	cbz	r2, 8002784 <sduDataTransmitted+0x64>
 8002754:	8a1b      	ldrh	r3, [r3, #16]
 8002756:	3b01      	subs	r3, #1
 8002758:	4013      	ands	r3, r2
 800275a:	d113      	bne.n	8002784 <sduDataTransmitted+0x64>
 800275c:	f383 8811 	msr	BASEPRI, r3
 8002760:	2001      	movs	r0, #1
 8002762:	68ca      	ldr	r2, [r1, #12]
 8002764:	3430      	adds	r4, #48	; 0x30
 8002766:	6952      	ldr	r2, [r2, #20]
 8002768:	e9c2 3301 	strd	r3, r3, [r2, #4]
 800276c:	60d4      	str	r4, [r2, #12]
 800276e:	7010      	strb	r0, [r2, #0]
 8002770:	4631      	mov	r1, r6
 8002772:	4628      	mov	r0, r5
 8002774:	f7ff fc84 	bl	8002080 <usb_lld_prepare_transmit>
 8002778:	f387 8811 	msr	BASEPRI, r7
 800277c:	4631      	mov	r1, r6
 800277e:	4628      	mov	r0, r5
 8002780:	f7fe f90e 	bl	80009a0 <usbStartTransmitI>
 8002784:	2300      	movs	r3, #0
 8002786:	f383 8811 	msr	BASEPRI, r3
 800278a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800278c:	2100      	movs	r1, #0
 800278e:	f381 8811 	msr	BASEPRI, r1
 8002792:	eb05 0286 	add.w	r2, r5, r6, lsl #2
 8002796:	68d2      	ldr	r2, [r2, #12]
 8002798:	3430      	adds	r4, #48	; 0x30
 800279a:	6952      	ldr	r2, [r2, #20]
 800279c:	2001      	movs	r0, #1
 800279e:	60d4      	str	r4, [r2, #12]
 80027a0:	e9c2 3101 	strd	r3, r1, [r2, #4]
 80027a4:	e7e3      	b.n	800276e <sduDataTransmitted+0x4e>
 80027a6:	bf00      	nop
	...

080027b0 <Vector90>:
 80027b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027b4:	4ba1      	ldr	r3, [pc, #644]	; (8002a3c <Vector90+0x28c>)
 80027b6:	b083      	sub	sp, #12
 80027b8:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 80027ba:	0566      	lsls	r6, r4, #21
 80027bc:	f100 8120 	bmi.w	8002a00 <Vector90+0x250>
 80027c0:	0525      	lsls	r5, r4, #20
 80027c2:	d50f      	bpl.n	80027e4 <Vector90+0x34>
 80027c4:	4e9e      	ldr	r6, [pc, #632]	; (8002a40 <Vector90+0x290>)
 80027c6:	4a9d      	ldr	r2, [pc, #628]	; (8002a3c <Vector90+0x28c>)
 80027c8:	6871      	ldr	r1, [r6, #4]
 80027ca:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80027cc:	680d      	ldr	r5, [r1, #0]
 80027ce:	f043 0308 	orr.w	r3, r3, #8
 80027d2:	6413      	str	r3, [r2, #64]	; 0x40
 80027d4:	b115      	cbz	r5, 80027dc <Vector90+0x2c>
 80027d6:	4630      	mov	r0, r6
 80027d8:	2103      	movs	r1, #3
 80027da:	47a8      	blx	r5
 80027dc:	f46f 6200 	mvn.w	r2, #2048	; 0x800
 80027e0:	4b96      	ldr	r3, [pc, #600]	; (8002a3c <Vector90+0x28c>)
 80027e2:	645a      	str	r2, [r3, #68]	; 0x44
 80027e4:	04e0      	lsls	r0, r4, #19
 80027e6:	d507      	bpl.n	80027f8 <Vector90+0x48>
 80027e8:	4b94      	ldr	r3, [pc, #592]	; (8002a3c <Vector90+0x28c>)
 80027ea:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80027ec:	0411      	lsls	r1, r2, #16
 80027ee:	d56a      	bpl.n	80028c6 <Vector90+0x116>
 80027f0:	f46f 5280 	mvn.w	r2, #4096	; 0x1000
 80027f4:	4b91      	ldr	r3, [pc, #580]	; (8002a3c <Vector90+0x28c>)
 80027f6:	645a      	str	r2, [r3, #68]	; 0x44
 80027f8:	05a2      	lsls	r2, r4, #22
 80027fa:	d509      	bpl.n	8002810 <Vector90+0x60>
 80027fc:	4e90      	ldr	r6, [pc, #576]	; (8002a40 <Vector90+0x290>)
 80027fe:	6873      	ldr	r3, [r6, #4]
 8002800:	68db      	ldr	r3, [r3, #12]
 8002802:	b10b      	cbz	r3, 8002808 <Vector90+0x58>
 8002804:	4630      	mov	r0, r6
 8002806:	4798      	blx	r3
 8002808:	f46f 7200 	mvn.w	r2, #512	; 0x200
 800280c:	4b8b      	ldr	r3, [pc, #556]	; (8002a3c <Vector90+0x28c>)
 800280e:	645a      	str	r2, [r3, #68]	; 0x44
 8002810:	0423      	lsls	r3, r4, #16
 8002812:	d553      	bpl.n	80028bc <Vector90+0x10c>
 8002814:	4e8a      	ldr	r6, [pc, #552]	; (8002a40 <Vector90+0x290>)
 8002816:	f8df b224 	ldr.w	fp, [pc, #548]	; 8002a3c <Vector90+0x28c>
 800281a:	f004 040f 	and.w	r4, r4, #15
 800281e:	ea4f 0a84 	mov.w	sl, r4, lsl #2
 8002822:	f10a 4580 	add.w	r5, sl, #1073741824	; 0x40000000
 8002826:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 800282a:	f8d5 9000 	ldr.w	r9, [r5]
 800282e:	1ca7      	adds	r7, r4, #2
 8002830:	eb06 0387 	add.w	r3, r6, r7, lsl #2
 8002834:	f019 0f80 	tst.w	r9, #128	; 0x80
 8002838:	f8d3 8004 	ldr.w	r8, [r3, #4]
 800283c:	d025      	beq.n	800288a <Vector90+0xda>
 800283e:	682b      	ldr	r3, [r5, #0]
 8002840:	00e0      	lsls	r0, r4, #3
 8002842:	f423 4378 	bic.w	r3, r3, #63488	; 0xf800
 8002846:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800284a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800284e:	602b      	str	r3, [r5, #0]
 8002850:	f8db 3050 	ldr.w	r3, [fp, #80]	; 0x50
 8002854:	f8d8 1014 	ldr.w	r1, [r8, #20]
 8002858:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 800285c:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8002860:	4403      	add	r3, r0
 8002862:	005b      	lsls	r3, r3, #1
 8002864:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8002868:	e9d1 2301 	ldrd	r2, r3, [r1, #4]
 800286c:	4463      	add	r3, ip
 800286e:	608b      	str	r3, [r1, #8]
 8002870:	1ad3      	subs	r3, r2, r3
 8002872:	d17f      	bne.n	8002974 <Vector90+0x1c4>
 8002874:	2201      	movs	r2, #1
 8002876:	8933      	ldrh	r3, [r6, #8]
 8002878:	40a2      	lsls	r2, r4
 800287a:	ea23 0302 	bic.w	r3, r3, r2
 800287e:	8133      	strh	r3, [r6, #8]
 8002880:	4621      	mov	r1, r4
 8002882:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8002886:	486e      	ldr	r0, [pc, #440]	; (8002a40 <Vector90+0x290>)
 8002888:	4798      	blx	r3
 800288a:	f419 4f00 	tst.w	r9, #32768	; 0x8000
 800288e:	d011      	beq.n	80028b4 <Vector90+0x104>
 8002890:	682b      	ldr	r3, [r5, #0]
 8002892:	f419 6f00 	tst.w	r9, #2048	; 0x800
 8002896:	f423 4378 	bic.w	r3, r3, #63488	; 0xf800
 800289a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800289e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80028a2:	602b      	str	r3, [r5, #0]
 80028a4:	d01c      	beq.n	80028e0 <Vector90+0x130>
 80028a6:	eb06 0787 	add.w	r7, r6, r7, lsl #2
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	4621      	mov	r1, r4
 80028ae:	685b      	ldr	r3, [r3, #4]
 80028b0:	4863      	ldr	r0, [pc, #396]	; (8002a40 <Vector90+0x290>)
 80028b2:	4798      	blx	r3
 80028b4:	f8db 4044 	ldr.w	r4, [fp, #68]	; 0x44
 80028b8:	0422      	lsls	r2, r4, #16
 80028ba:	d4ae      	bmi.n	800281a <Vector90+0x6a>
 80028bc:	b003      	add	sp, #12
 80028be:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80028c2:	f7fe b935 	b.w	8000b30 <_port_irq_epilogue>
 80028c6:	4e5e      	ldr	r6, [pc, #376]	; (8002a40 <Vector90+0x290>)
 80028c8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80028ca:	6871      	ldr	r1, [r6, #4]
 80028cc:	f022 0208 	bic.w	r2, r2, #8
 80028d0:	680d      	ldr	r5, [r1, #0]
 80028d2:	641a      	str	r2, [r3, #64]	; 0x40
 80028d4:	2d00      	cmp	r5, #0
 80028d6:	d08b      	beq.n	80027f0 <Vector90+0x40>
 80028d8:	4630      	mov	r0, r6
 80028da:	2104      	movs	r1, #4
 80028dc:	47a8      	blx	r5
 80028de:	e787      	b.n	80027f0 <Vector90+0x40>
 80028e0:	f8db 3050 	ldr.w	r3, [fp, #80]	; 0x50
 80028e4:	f8d8 0018 	ldr.w	r0, [r8, #24]
 80028e8:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80028ec:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80028f0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80028f4:	005b      	lsls	r3, r3, #1
 80028f6:	68da      	ldr	r2, [r3, #12]
 80028f8:	4611      	mov	r1, r2
 80028fa:	9201      	str	r2, [sp, #4]
 80028fc:	7802      	ldrb	r2, [r0, #0]
 80028fe:	f3c1 0909 	ubfx	r9, r1, #0, #10
 8002902:	68c1      	ldr	r1, [r0, #12]
 8002904:	2a00      	cmp	r2, #0
 8002906:	f040 809d 	bne.w	8002a44 <Vector90+0x294>
 800290a:	689b      	ldr	r3, [r3, #8]
 800290c:	f109 0201 	add.w	r2, r9, #1
 8002910:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 8002914:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8002918:	0852      	lsrs	r2, r2, #1
 800291a:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800291e:	d009      	beq.n	8002934 <Vector90+0x184>
 8002920:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8002924:	468c      	mov	ip, r1
 8002926:	4696      	mov	lr, r2
 8002928:	681a      	ldr	r2, [r3, #0]
 800292a:	3304      	adds	r3, #4
 800292c:	4573      	cmp	r3, lr
 800292e:	f82c 2b02 	strh.w	r2, [ip], #2
 8002932:	d1f9      	bne.n	8002928 <Vector90+0x178>
 8002934:	4449      	add	r1, r9
 8002936:	60c1      	str	r1, [r0, #12]
 8002938:	8a01      	ldrh	r1, [r0, #16]
 800293a:	f8b8 c012 	ldrh.w	ip, [r8, #18]
 800293e:	3901      	subs	r1, #1
 8002940:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8002944:	b289      	uxth	r1, r1
 8002946:	444a      	add	r2, r9
 8002948:	eba3 0309 	sub.w	r3, r3, r9
 800294c:	45cc      	cmp	ip, r9
 800294e:	8201      	strh	r1, [r0, #16]
 8002950:	e9c0 3201 	strd	r3, r2, [r0, #4]
 8002954:	f240 80ca 	bls.w	8002aec <Vector90+0x33c>
 8002958:	2201      	movs	r2, #1
 800295a:	8973      	ldrh	r3, [r6, #10]
 800295c:	eb06 0787 	add.w	r7, r6, r7, lsl #2
 8002960:	6879      	ldr	r1, [r7, #4]
 8002962:	40a2      	lsls	r2, r4
 8002964:	ea23 0302 	bic.w	r3, r3, r2
 8002968:	8173      	strh	r3, [r6, #10]
 800296a:	68ca      	ldr	r2, [r1, #12]
 800296c:	4834      	ldr	r0, [pc, #208]	; (8002a40 <Vector90+0x290>)
 800296e:	4621      	mov	r1, r4
 8002970:	4790      	blx	r2
 8002972:	e79f      	b.n	80028b4 <Vector90+0x104>
 8002974:	f8b8 2010 	ldrh.w	r2, [r8, #16]
 8002978:	f891 e000 	ldrb.w	lr, [r1]
 800297c:	429a      	cmp	r2, r3
 800297e:	bf28      	it	cs
 8002980:	461a      	movcs	r2, r3
 8002982:	68cb      	ldr	r3, [r1, #12]
 8002984:	f1be 0f00 	cmp.w	lr, #0
 8002988:	f040 80a4 	bne.w	8002ad4 <Vector90+0x324>
 800298c:	f8db e050 	ldr.w	lr, [fp, #80]	; 0x50
 8002990:	4463      	add	r3, ip
 8002992:	f10e 5e00 	add.w	lr, lr, #536870912	; 0x20000000
 8002996:	f50e 5e40 	add.w	lr, lr, #12288	; 0x3000
 800299a:	4486      	add	lr, r0
 800299c:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80029a0:	f8de 0000 	ldr.w	r0, [lr]
 80029a4:	60cb      	str	r3, [r1, #12]
 80029a6:	f100 5100 	add.w	r1, r0, #536870912	; 0x20000000
 80029aa:	1c50      	adds	r0, r2, #1
 80029ac:	f501 5140 	add.w	r1, r1, #12288	; 0x3000
 80029b0:	0840      	lsrs	r0, r0, #1
 80029b2:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80029b6:	f8ce 2004 	str.w	r2, [lr, #4]
 80029ba:	d008      	beq.n	80029ce <Vector90+0x21e>
 80029bc:	eb01 0080 	add.w	r0, r1, r0, lsl #2
 80029c0:	f833 2b02 	ldrh.w	r2, [r3], #2
 80029c4:	3104      	adds	r1, #4
 80029c6:	f841 2c04 	str.w	r2, [r1, #-4]
 80029ca:	4281      	cmp	r1, r0
 80029cc:	d1f8      	bne.n	80029c0 <Vector90+0x210>
 80029ce:	2320      	movs	r3, #32
 80029d0:	f383 8811 	msr	BASEPRI, r3
 80029d4:	f10a 4a80 	add.w	sl, sl, #1073741824	; 0x40000000
 80029d8:	f50a 4ab8 	add.w	sl, sl, #23552	; 0x5c00
 80029dc:	f8da 3000 	ldr.w	r3, [sl]
 80029e0:	2200      	movs	r2, #0
 80029e2:	f423 43f0 	bic.w	r3, r3, #30720	; 0x7800
 80029e6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80029ea:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 80029ee:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80029f2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80029f6:	f8ca 3000 	str.w	r3, [sl]
 80029fa:	f382 8811 	msr	BASEPRI, r2
 80029fe:	e744      	b.n	800288a <Vector90+0xda>
 8002a00:	2500      	movs	r5, #0
 8002a02:	2302      	movs	r3, #2
 8002a04:	4e0e      	ldr	r6, [pc, #56]	; (8002a40 <Vector90+0x290>)
 8002a06:	4630      	mov	r0, r6
 8002a08:	7033      	strb	r3, [r6, #0]
 8002a0a:	67f5      	str	r5, [r6, #124]	; 0x7c
 8002a0c:	e9c6 5502 	strd	r5, r5, [r6, #8]
 8002a10:	e9c6 5504 	strd	r5, r5, [r6, #16]
 8002a14:	e9c6 5506 	strd	r5, r5, [r6, #24]
 8002a18:	e9c6 5508 	strd	r5, r5, [r6, #32]
 8002a1c:	62b5      	str	r5, [r6, #40]	; 0x28
 8002a1e:	f886 5064 	strb.w	r5, [r6, #100]	; 0x64
 8002a22:	f7fd ff9d 	bl	8000960 <usb_lld_reset>
 8002a26:	6873      	ldr	r3, [r6, #4]
 8002a28:	681b      	ldr	r3, [r3, #0]
 8002a2a:	b10b      	cbz	r3, 8002a30 <Vector90+0x280>
 8002a2c:	4629      	mov	r1, r5
 8002a2e:	4798      	blx	r3
 8002a30:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8002a34:	4b01      	ldr	r3, [pc, #4]	; (8002a3c <Vector90+0x28c>)
 8002a36:	645a      	str	r2, [r3, #68]	; 0x44
 8002a38:	e6c2      	b.n	80027c0 <Vector90+0x10>
 8002a3a:	bf00      	nop
 8002a3c:	40005c00 	.word	0x40005c00
 8002a40:	200014d0 	.word	0x200014d0
 8002a44:	6898      	ldr	r0, [r3, #8]
 8002a46:	ea5f 0c59 	movs.w	ip, r9, lsr #1
 8002a4a:	f100 5000 	add.w	r0, r0, #536870912	; 0x20000000
 8002a4e:	f500 5040 	add.w	r0, r0, #12288	; 0x3000
 8002a52:	ea4f 0040 	mov.w	r0, r0, lsl #1
 8002a56:	d01f      	beq.n	8002a98 <Vector90+0x2e8>
 8002a58:	4686      	mov	lr, r0
 8002a5a:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
 8002a5e:	694b      	ldr	r3, [r1, #20]
 8002a60:	f8de 2000 	ldr.w	r2, [lr]
 8002a64:	1c58      	adds	r0, r3, #1
 8002a66:	6148      	str	r0, [r1, #20]
 8002a68:	701a      	strb	r2, [r3, #0]
 8002a6a:	ea4f 2a12 	mov.w	sl, r2, lsr #8
 8002a6e:	e9d1 3204 	ldrd	r3, r2, [r1, #16]
 8002a72:	429a      	cmp	r2, r3
 8002a74:	bf28      	it	cs
 8002a76:	68ca      	ldrcs	r2, [r1, #12]
 8002a78:	f10e 0004 	add.w	r0, lr, #4
 8002a7c:	1c53      	adds	r3, r2, #1
 8002a7e:	614b      	str	r3, [r1, #20]
 8002a80:	f882 a000 	strb.w	sl, [r2]
 8002a84:	e9d1 3204 	ldrd	r3, r2, [r1, #16]
 8002a88:	429a      	cmp	r2, r3
 8002a8a:	bf28      	it	cs
 8002a8c:	68cb      	ldrcs	r3, [r1, #12]
 8002a8e:	4686      	mov	lr, r0
 8002a90:	bf28      	it	cs
 8002a92:	614b      	strcs	r3, [r1, #20]
 8002a94:	4560      	cmp	r0, ip
 8002a96:	d1e2      	bne.n	8002a5e <Vector90+0x2ae>
 8002a98:	9b01      	ldr	r3, [sp, #4]
 8002a9a:	07db      	lsls	r3, r3, #31
 8002a9c:	d50a      	bpl.n	8002ab4 <Vector90+0x304>
 8002a9e:	694b      	ldr	r3, [r1, #20]
 8002aa0:	6802      	ldr	r2, [r0, #0]
 8002aa2:	1c58      	adds	r0, r3, #1
 8002aa4:	6148      	str	r0, [r1, #20]
 8002aa6:	701a      	strb	r2, [r3, #0]
 8002aa8:	e9d1 3204 	ldrd	r3, r2, [r1, #16]
 8002aac:	429a      	cmp	r2, r3
 8002aae:	bf24      	itt	cs
 8002ab0:	68cb      	ldrcs	r3, [r1, #12]
 8002ab2:	614b      	strcs	r3, [r1, #20]
 8002ab4:	2320      	movs	r3, #32
 8002ab6:	f383 8811 	msr	BASEPRI, r3
 8002aba:	688b      	ldr	r3, [r1, #8]
 8002abc:	4608      	mov	r0, r1
 8002abe:	444b      	add	r3, r9
 8002ac0:	608b      	str	r3, [r1, #8]
 8002ac2:	2100      	movs	r1, #0
 8002ac4:	f7fe fbf4 	bl	80012b0 <chThdDequeueAllI>
 8002ac8:	2300      	movs	r3, #0
 8002aca:	f383 8811 	msr	BASEPRI, r3
 8002ace:	f8d8 0018 	ldr.w	r0, [r8, #24]
 8002ad2:	e731      	b.n	8002938 <Vector90+0x188>
 8002ad4:	f8db 1050 	ldr.w	r1, [fp, #80]	; 0x50
 8002ad8:	f101 5100 	add.w	r1, r1, #536870912	; 0x20000000
 8002adc:	f501 5140 	add.w	r1, r1, #12288	; 0x3000
 8002ae0:	4408      	add	r0, r1
 8002ae2:	0040      	lsls	r0, r0, #1
 8002ae4:	4619      	mov	r1, r3
 8002ae6:	f7ff fa83 	bl	8001ff0 <usb_packet_write_from_queue>
 8002aea:	e770      	b.n	80029ce <Vector90+0x21e>
 8002aec:	2900      	cmp	r1, #0
 8002aee:	f43f af33 	beq.w	8002958 <Vector90+0x1a8>
 8002af2:	682b      	ldr	r3, [r5, #0]
 8002af4:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8002af8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002afc:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8002b00:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002b04:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002b08:	602b      	str	r3, [r5, #0]
 8002b0a:	e6d3      	b.n	80028b4 <Vector90+0x104>
 8002b0c:	0000      	movs	r0, r0
	...

08002b10 <vtcb>:
 8002b10:	b508      	push	{r3, lr}
 8002b12:	2320      	movs	r3, #32
 8002b14:	f383 8811 	msr	BASEPRI, r3
 8002b18:	2200      	movs	r2, #0
 8002b1a:	f382 8811 	msr	BASEPRI, r2
 8002b1e:	f383 8811 	msr	BASEPRI, r3
 8002b22:	f7fe fc7d 	bl	8001420 <chSysGetStatusAndLockX>
 8002b26:	b908      	cbnz	r0, 8002b2c <vtcb+0x1c>
 8002b28:	f7ff fa52 	bl	8001fd0 <chSysRestoreStatusX.part.3>
 8002b2c:	2300      	movs	r3, #0
 8002b2e:	f383 8811 	msr	BASEPRI, r3
 8002b32:	bd08      	pop	{r3, pc}
	...

08002b40 <chSchWakeupS>:
 8002b40:	4b14      	ldr	r3, [pc, #80]	; (8002b94 <chSchWakeupS+0x54>)
 8002b42:	b470      	push	{r4, r5, r6}
 8002b44:	699e      	ldr	r6, [r3, #24]
 8002b46:	6885      	ldr	r5, [r0, #8]
 8002b48:	4604      	mov	r4, r0
 8002b4a:	6201      	str	r1, [r0, #32]
 8002b4c:	68b0      	ldr	r0, [r6, #8]
 8002b4e:	4285      	cmp	r5, r0
 8002b50:	d80c      	bhi.n	8002b6c <chSchWakeupS+0x2c>
 8002b52:	2200      	movs	r2, #0
 8002b54:	7722      	strb	r2, [r4, #28]
 8002b56:	681b      	ldr	r3, [r3, #0]
 8002b58:	689a      	ldr	r2, [r3, #8]
 8002b5a:	4295      	cmp	r5, r2
 8002b5c:	d9fb      	bls.n	8002b56 <chSchWakeupS+0x16>
 8002b5e:	685a      	ldr	r2, [r3, #4]
 8002b60:	e9c4 3200 	strd	r3, r2, [r4]
 8002b64:	6014      	str	r4, [r2, #0]
 8002b66:	605c      	str	r4, [r3, #4]
 8002b68:	bc70      	pop	{r4, r5, r6}
 8002b6a:	4770      	bx	lr
 8002b6c:	2100      	movs	r1, #0
 8002b6e:	461a      	mov	r2, r3
 8002b70:	7731      	strb	r1, [r6, #28]
 8002b72:	6812      	ldr	r2, [r2, #0]
 8002b74:	6891      	ldr	r1, [r2, #8]
 8002b76:	4288      	cmp	r0, r1
 8002b78:	d9fb      	bls.n	8002b72 <chSchWakeupS+0x32>
 8002b7a:	2001      	movs	r0, #1
 8002b7c:	6851      	ldr	r1, [r2, #4]
 8002b7e:	e9c6 2100 	strd	r2, r1, [r6]
 8002b82:	600e      	str	r6, [r1, #0]
 8002b84:	6056      	str	r6, [r2, #4]
 8002b86:	7720      	strb	r0, [r4, #28]
 8002b88:	4631      	mov	r1, r6
 8002b8a:	4620      	mov	r0, r4
 8002b8c:	619c      	str	r4, [r3, #24]
 8002b8e:	bc70      	pop	{r4, r5, r6}
 8002b90:	f7fd bb36 	b.w	8000200 <_port_switch>
 8002b94:	20001558 	.word	0x20001558
	...

08002ba0 <chThdCreateFromMemoryPool.constprop.60>:
 8002ba0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002ba4:	4e1e      	ldr	r6, [pc, #120]	; (8002c20 <chThdCreateFromMemoryPool.constprop.60+0x80>)
 8002ba6:	4680      	mov	r8, r0
 8002ba8:	4630      	mov	r0, r6
 8002baa:	4689      	mov	r9, r1
 8002bac:	f7fe f858 	bl	8000c60 <chPoolAlloc>
 8002bb0:	4604      	mov	r4, r0
 8002bb2:	2800      	cmp	r0, #0
 8002bb4:	d031      	beq.n	8002c1a <chThdCreateFromMemoryPool.constprop.60+0x7a>
 8002bb6:	2320      	movs	r3, #32
 8002bb8:	f383 8811 	msr	BASEPRI, r3
 8002bbc:	f04f 0c02 	mov.w	ip, #2
 8002bc0:	2500      	movs	r5, #0
 8002bc2:	f04f 0e01 	mov.w	lr, #1
 8002bc6:	6873      	ldr	r3, [r6, #4]
 8002bc8:	4a16      	ldr	r2, [pc, #88]	; (8002c24 <chThdCreateFromMemoryPool.constprop.60+0x84>)
 8002bca:	3b24      	subs	r3, #36	; 0x24
 8002bcc:	18c7      	adds	r7, r0, r3
 8002bce:	60c7      	str	r7, [r0, #12]
 8002bd0:	50c2      	str	r2, [r0, r3]
 8002bd2:	4a15      	ldr	r2, [pc, #84]	; (8002c28 <chThdCreateFromMemoryPool.constprop.60+0x88>)
 8002bd4:	4b15      	ldr	r3, [pc, #84]	; (8002c2c <chThdCreateFromMemoryPool.constprop.60+0x8c>)
 8002bd6:	f8c7 9004 	str.w	r9, [r7, #4]
 8002bda:	623b      	str	r3, [r7, #32]
 8002bdc:	6102      	str	r2, [r0, #16]
 8002bde:	6957      	ldr	r7, [r2, #20]
 8002be0:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8002be4:	f100 0328 	add.w	r3, r0, #40	; 0x28
 8002be8:	f8c0 8008 	str.w	r8, [r0, #8]
 8002bec:	6147      	str	r7, [r0, #20]
 8002bee:	f8c0 803c 	str.w	r8, [r0, #60]	; 0x3c
 8002bf2:	f880 e01e 	strb.w	lr, [r0, #30]
 8002bf6:	f880 c01c 	strb.w	ip, [r0, #28]
 8002bfa:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8002bfe:	6185      	str	r5, [r0, #24]
 8002c00:	6138      	str	r0, [r7, #16]
 8002c02:	6241      	str	r1, [r0, #36]	; 0x24
 8002c04:	f880 c01d 	strb.w	ip, [r0, #29]
 8002c08:	6406      	str	r6, [r0, #64]	; 0x40
 8002c0a:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8002c0e:	4629      	mov	r1, r5
 8002c10:	6150      	str	r0, [r2, #20]
 8002c12:	f7ff ff95 	bl	8002b40 <chSchWakeupS>
 8002c16:	f385 8811 	msr	BASEPRI, r5
 8002c1a:	4620      	mov	r0, r4
 8002c1c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002c20:	20001780 	.word	0x20001780
 8002c24:	080007f1 	.word	0x080007f1
 8002c28:	20001558 	.word	0x20001558
 8002c2c:	08000211 	.word	0x08000211

08002c30 <chCondSignal.constprop.52>:
 8002c30:	b508      	push	{r3, lr}
 8002c32:	2320      	movs	r3, #32
 8002c34:	f383 8811 	msr	BASEPRI, r3
 8002c38:	4b06      	ldr	r3, [pc, #24]	; (8002c54 <chCondSignal.constprop.52+0x24>)
 8002c3a:	6818      	ldr	r0, [r3, #0]
 8002c3c:	4298      	cmp	r0, r3
 8002c3e:	d005      	beq.n	8002c4c <chCondSignal.constprop.52+0x1c>
 8002c40:	6802      	ldr	r2, [r0, #0]
 8002c42:	2100      	movs	r1, #0
 8002c44:	6053      	str	r3, [r2, #4]
 8002c46:	601a      	str	r2, [r3, #0]
 8002c48:	f7ff ff7a 	bl	8002b40 <chSchWakeupS>
 8002c4c:	2300      	movs	r3, #0
 8002c4e:	f383 8811 	msr	BASEPRI, r3
 8002c52:	bd08      	pop	{r3, pc}
 8002c54:	20000c04 	.word	0x20000c04
	...

08002c60 <chMtxUnlock>:
 8002c60:	4b16      	ldr	r3, [pc, #88]	; (8002cbc <chMtxUnlock+0x5c>)
 8002c62:	b570      	push	{r4, r5, r6, lr}
 8002c64:	699d      	ldr	r5, [r3, #24]
 8002c66:	2320      	movs	r3, #32
 8002c68:	f383 8811 	msr	BASEPRI, r3
 8002c6c:	6804      	ldr	r4, [r0, #0]
 8002c6e:	68c3      	ldr	r3, [r0, #12]
 8002c70:	4284      	cmp	r4, r0
 8002c72:	63ab      	str	r3, [r5, #56]	; 0x38
 8002c74:	d01c      	beq.n	8002cb0 <chMtxUnlock+0x50>
 8002c76:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8002c78:	b14b      	cbz	r3, 8002c8e <chMtxUnlock+0x2e>
 8002c7a:	681a      	ldr	r2, [r3, #0]
 8002c7c:	4293      	cmp	r3, r2
 8002c7e:	d003      	beq.n	8002c88 <chMtxUnlock+0x28>
 8002c80:	6892      	ldr	r2, [r2, #8]
 8002c82:	4291      	cmp	r1, r2
 8002c84:	bf38      	it	cc
 8002c86:	4611      	movcc	r1, r2
 8002c88:	68db      	ldr	r3, [r3, #12]
 8002c8a:	2b00      	cmp	r3, #0
 8002c8c:	d1f5      	bne.n	8002c7a <chMtxUnlock+0x1a>
 8002c8e:	4603      	mov	r3, r0
 8002c90:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8002c92:	6822      	ldr	r2, [r4, #0]
 8002c94:	4620      	mov	r0, r4
 8002c96:	60a9      	str	r1, [r5, #8]
 8002c98:	601a      	str	r2, [r3, #0]
 8002c9a:	2100      	movs	r1, #0
 8002c9c:	6053      	str	r3, [r2, #4]
 8002c9e:	e9c3 4602 	strd	r4, r6, [r3, #8]
 8002ca2:	63a3      	str	r3, [r4, #56]	; 0x38
 8002ca4:	f7ff ff4c 	bl	8002b40 <chSchWakeupS>
 8002ca8:	2300      	movs	r3, #0
 8002caa:	f383 8811 	msr	BASEPRI, r3
 8002cae:	bd70      	pop	{r4, r5, r6, pc}
 8002cb0:	2300      	movs	r3, #0
 8002cb2:	60a3      	str	r3, [r4, #8]
 8002cb4:	2300      	movs	r3, #0
 8002cb6:	f383 8811 	msr	BASEPRI, r3
 8002cba:	bd70      	pop	{r4, r5, r6, pc}
 8002cbc:	20001558 	.word	0x20001558

08002cc0 <chSemSignal>:
 8002cc0:	b508      	push	{r3, lr}
 8002cc2:	2320      	movs	r3, #32
 8002cc4:	f383 8811 	msr	BASEPRI, r3
 8002cc8:	6883      	ldr	r3, [r0, #8]
 8002cca:	3301      	adds	r3, #1
 8002ccc:	2b00      	cmp	r3, #0
 8002cce:	6083      	str	r3, [r0, #8]
 8002cd0:	dd03      	ble.n	8002cda <chSemSignal+0x1a>
 8002cd2:	2300      	movs	r3, #0
 8002cd4:	f383 8811 	msr	BASEPRI, r3
 8002cd8:	bd08      	pop	{r3, pc}
 8002cda:	4603      	mov	r3, r0
 8002cdc:	6800      	ldr	r0, [r0, #0]
 8002cde:	2100      	movs	r1, #0
 8002ce0:	6802      	ldr	r2, [r0, #0]
 8002ce2:	601a      	str	r2, [r3, #0]
 8002ce4:	6053      	str	r3, [r2, #4]
 8002ce6:	f7ff ff2b 	bl	8002b40 <chSchWakeupS>
 8002cea:	2300      	movs	r3, #0
 8002cec:	f383 8811 	msr	BASEPRI, r3
 8002cf0:	bd08      	pop	{r3, pc}
 8002cf2:	bf00      	nop
	...

08002d00 <chThdCreateStatic>:
 8002d00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002d02:	9f06      	ldr	r7, [sp, #24]
 8002d04:	4604      	mov	r4, r0
 8002d06:	2520      	movs	r5, #32
 8002d08:	f385 8811 	msr	BASEPRI, r5
 8002d0c:	2500      	movs	r5, #0
 8002d0e:	f04f 0e02 	mov.w	lr, #2
 8002d12:	f04f 0c01 	mov.w	ip, #1
 8002d16:	3924      	subs	r1, #36	; 0x24
 8002d18:	1846      	adds	r6, r0, r1
 8002d1a:	60c6      	str	r6, [r0, #12]
 8002d1c:	5043      	str	r3, [r0, r1]
 8002d1e:	4b10      	ldr	r3, [pc, #64]	; (8002d60 <chThdCreateStatic+0x60>)
 8002d20:	4910      	ldr	r1, [pc, #64]	; (8002d64 <chThdCreateStatic+0x64>)
 8002d22:	6077      	str	r7, [r6, #4]
 8002d24:	6231      	str	r1, [r6, #32]
 8002d26:	6103      	str	r3, [r0, #16]
 8002d28:	6959      	ldr	r1, [r3, #20]
 8002d2a:	63c2      	str	r2, [r0, #60]	; 0x3c
 8002d2c:	6082      	str	r2, [r0, #8]
 8002d2e:	f100 0624 	add.w	r6, r0, #36	; 0x24
 8002d32:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8002d36:	6141      	str	r1, [r0, #20]
 8002d38:	f8a0 e01c 	strh.w	lr, [r0, #28]
 8002d3c:	f880 c01e 	strb.w	ip, [r0, #30]
 8002d40:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8002d44:	6185      	str	r5, [r0, #24]
 8002d46:	6108      	str	r0, [r1, #16]
 8002d48:	4629      	mov	r1, r5
 8002d4a:	e9c0 6209 	strd	r6, r2, [r0, #36]	; 0x24
 8002d4e:	62c2      	str	r2, [r0, #44]	; 0x2c
 8002d50:	6158      	str	r0, [r3, #20]
 8002d52:	f7ff fef5 	bl	8002b40 <chSchWakeupS>
 8002d56:	f385 8811 	msr	BASEPRI, r5
 8002d5a:	4620      	mov	r0, r4
 8002d5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002d5e:	bf00      	nop
 8002d60:	20001558 	.word	0x20001558
 8002d64:	08000211 	.word	0x08000211
	...

08002d70 <chSchGoSleepS>:
 8002d70:	b430      	push	{r4, r5}
 8002d72:	2501      	movs	r5, #1
 8002d74:	4b06      	ldr	r3, [pc, #24]	; (8002d90 <chSchGoSleepS+0x20>)
 8002d76:	6999      	ldr	r1, [r3, #24]
 8002d78:	681a      	ldr	r2, [r3, #0]
 8002d7a:	7708      	strb	r0, [r1, #28]
 8002d7c:	6814      	ldr	r4, [r2, #0]
 8002d7e:	4610      	mov	r0, r2
 8002d80:	6063      	str	r3, [r4, #4]
 8002d82:	7715      	strb	r5, [r2, #28]
 8002d84:	601c      	str	r4, [r3, #0]
 8002d86:	bc30      	pop	{r4, r5}
 8002d88:	619a      	str	r2, [r3, #24]
 8002d8a:	f7fd ba39 	b.w	8000200 <_port_switch>
 8002d8e:	bf00      	nop
 8002d90:	20001558 	.word	0x20001558
	...

08002da0 <chSemSignalWait.constprop.56>:
 8002da0:	b538      	push	{r3, r4, r5, lr}
 8002da2:	2320      	movs	r3, #32
 8002da4:	f383 8811 	msr	BASEPRI, r3
 8002da8:	4c15      	ldr	r4, [pc, #84]	; (8002e00 <chSemSignalWait.constprop.56+0x60>)
 8002daa:	68a3      	ldr	r3, [r4, #8]
 8002dac:	3301      	adds	r3, #1
 8002dae:	2b00      	cmp	r3, #0
 8002db0:	60a3      	str	r3, [r4, #8]
 8002db2:	dd1a      	ble.n	8002dea <chSemSignalWait.constprop.56+0x4a>
 8002db4:	3b01      	subs	r3, #1
 8002db6:	2b00      	cmp	r3, #0
 8002db8:	60a3      	str	r3, [r4, #8]
 8002dba:	db06      	blt.n	8002dca <chSemSignalWait.constprop.56+0x2a>
 8002dbc:	f7ff f800 	bl	8001dc0 <chSchRescheduleS>
 8002dc0:	2000      	movs	r0, #0
 8002dc2:	2300      	movs	r3, #0
 8002dc4:	f383 8811 	msr	BASEPRI, r3
 8002dc8:	bd38      	pop	{r3, r4, r5, pc}
 8002dca:	4a0e      	ldr	r2, [pc, #56]	; (8002e04 <chSemSignalWait.constprop.56+0x64>)
 8002dcc:	6863      	ldr	r3, [r4, #4]
 8002dce:	6995      	ldr	r5, [r2, #24]
 8002dd0:	2005      	movs	r0, #5
 8002dd2:	e9c5 4300 	strd	r4, r3, [r5]
 8002dd6:	601d      	str	r5, [r3, #0]
 8002dd8:	622c      	str	r4, [r5, #32]
 8002dda:	6065      	str	r5, [r4, #4]
 8002ddc:	f7ff ffc8 	bl	8002d70 <chSchGoSleepS>
 8002de0:	6a28      	ldr	r0, [r5, #32]
 8002de2:	2300      	movs	r3, #0
 8002de4:	f383 8811 	msr	BASEPRI, r3
 8002de8:	bd38      	pop	{r3, r4, r5, pc}
 8002dea:	6820      	ldr	r0, [r4, #0]
 8002dec:	6803      	ldr	r3, [r0, #0]
 8002dee:	605c      	str	r4, [r3, #4]
 8002df0:	6023      	str	r3, [r4, #0]
 8002df2:	f7fe f8ad 	bl	8000f50 <chSchReadyI>
 8002df6:	2200      	movs	r2, #0
 8002df8:	68a3      	ldr	r3, [r4, #8]
 8002dfa:	6202      	str	r2, [r0, #32]
 8002dfc:	e7da      	b.n	8002db4 <chSemSignalWait.constprop.56+0x14>
 8002dfe:	bf00      	nop
 8002e00:	20000cd0 	.word	0x20000cd0
 8002e04:	20001558 	.word	0x20001558
	...

08002e10 <sem3_execute>:
 8002e10:	b510      	push	{r4, lr}
 8002e12:	2400      	movs	r4, #0
 8002e14:	4a1d      	ldr	r2, [pc, #116]	; (8002e8c <sem3_execute+0x7c>)
 8002e16:	b082      	sub	sp, #8
 8002e18:	6992      	ldr	r2, [r2, #24]
 8002e1a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8002e1e:	6892      	ldr	r2, [r2, #8]
 8002e20:	4b1b      	ldr	r3, [pc, #108]	; (8002e90 <sem3_execute+0x80>)
 8002e22:	3201      	adds	r2, #1
 8002e24:	9400      	str	r4, [sp, #0]
 8002e26:	481b      	ldr	r0, [pc, #108]	; (8002e94 <sem3_execute+0x84>)
 8002e28:	f7ff ff6a 	bl	8002d00 <chThdCreateStatic>
 8002e2c:	4c1a      	ldr	r4, [pc, #104]	; (8002e98 <sem3_execute+0x88>)
 8002e2e:	4b1b      	ldr	r3, [pc, #108]	; (8002e9c <sem3_execute+0x8c>)
 8002e30:	6018      	str	r0, [r3, #0]
 8002e32:	f7ff ffb5 	bl	8002da0 <chSemSignalWait.constprop.56>
 8002e36:	6821      	ldr	r1, [r4, #0]
 8002e38:	2001      	movs	r0, #1
 8002e3a:	1b09      	subs	r1, r1, r4
 8002e3c:	fab1 f181 	clz	r1, r1
 8002e40:	0949      	lsrs	r1, r1, #5
 8002e42:	f7fd fc8d 	bl	8000760 <_test_assert>
 8002e46:	b108      	cbz	r0, 8002e4c <sem3_execute+0x3c>
 8002e48:	b002      	add	sp, #8
 8002e4a:	bd10      	pop	{r4, pc}
 8002e4c:	68a1      	ldr	r1, [r4, #8]
 8002e4e:	2002      	movs	r0, #2
 8002e50:	fab1 f181 	clz	r1, r1
 8002e54:	0949      	lsrs	r1, r1, #5
 8002e56:	f7fd fc83 	bl	8000760 <_test_assert>
 8002e5a:	2800      	cmp	r0, #0
 8002e5c:	d1f4      	bne.n	8002e48 <sem3_execute+0x38>
 8002e5e:	f7ff ff9f 	bl	8002da0 <chSemSignalWait.constprop.56>
 8002e62:	6821      	ldr	r1, [r4, #0]
 8002e64:	2003      	movs	r0, #3
 8002e66:	1b09      	subs	r1, r1, r4
 8002e68:	fab1 f181 	clz	r1, r1
 8002e6c:	0949      	lsrs	r1, r1, #5
 8002e6e:	f7fd fc77 	bl	8000760 <_test_assert>
 8002e72:	2800      	cmp	r0, #0
 8002e74:	d1e8      	bne.n	8002e48 <sem3_execute+0x38>
 8002e76:	68a1      	ldr	r1, [r4, #8]
 8002e78:	2004      	movs	r0, #4
 8002e7a:	fab1 f181 	clz	r1, r1
 8002e7e:	0949      	lsrs	r1, r1, #5
 8002e80:	b002      	add	sp, #8
 8002e82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002e86:	f7fd bc6b 	b.w	8000760 <_test_assert>
 8002e8a:	bf00      	nop
 8002e8c:	20001558 	.word	0x20001558
 8002e90:	08004df1 	.word	0x08004df1
 8002e94:	200017b0 	.word	0x200017b0
 8002e98:	20000cd0 	.word	0x20000cd0
 8002e9c:	20001e44 	.word	0x20001e44

08002ea0 <chEvtWaitOne.constprop.40>:
 8002ea0:	4a0b      	ldr	r2, [pc, #44]	; (8002ed0 <chEvtWaitOne.constprop.40+0x30>)
 8002ea2:	b510      	push	{r4, lr}
 8002ea4:	2320      	movs	r3, #32
 8002ea6:	6994      	ldr	r4, [r2, #24]
 8002ea8:	f383 8811 	msr	BASEPRI, r3
 8002eac:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8002eae:	b933      	cbnz	r3, 8002ebe <chEvtWaitOne.constprop.40+0x1e>
 8002eb0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002eb4:	200a      	movs	r0, #10
 8002eb6:	6223      	str	r3, [r4, #32]
 8002eb8:	f7ff ff5a 	bl	8002d70 <chSchGoSleepS>
 8002ebc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8002ebe:	4258      	negs	r0, r3
 8002ec0:	4018      	ands	r0, r3
 8002ec2:	ea23 0300 	bic.w	r3, r3, r0
 8002ec6:	6363      	str	r3, [r4, #52]	; 0x34
 8002ec8:	2300      	movs	r3, #0
 8002eca:	f383 8811 	msr	BASEPRI, r3
 8002ece:	bd10      	pop	{r4, pc}
 8002ed0:	20001558 	.word	0x20001558
	...

08002ee0 <chEvtWaitAny.constprop.39>:
 8002ee0:	4a09      	ldr	r2, [pc, #36]	; (8002f08 <chEvtWaitAny.constprop.39+0x28>)
 8002ee2:	b510      	push	{r4, lr}
 8002ee4:	2320      	movs	r3, #32
 8002ee6:	6994      	ldr	r4, [r2, #24]
 8002ee8:	f383 8811 	msr	BASEPRI, r3
 8002eec:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8002eee:	b930      	cbnz	r0, 8002efe <chEvtWaitAny.constprop.39+0x1e>
 8002ef0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002ef4:	200a      	movs	r0, #10
 8002ef6:	6223      	str	r3, [r4, #32]
 8002ef8:	f7ff ff3a 	bl	8002d70 <chSchGoSleepS>
 8002efc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8002efe:	2300      	movs	r3, #0
 8002f00:	6363      	str	r3, [r4, #52]	; 0x34
 8002f02:	f383 8811 	msr	BASEPRI, r3
 8002f06:	bd10      	pop	{r4, pc}
 8002f08:	20001558 	.word	0x20001558
 8002f0c:	00000000 	.word	0x00000000

08002f10 <thread4.lto_priv.82>:
 8002f10:	4a07      	ldr	r2, [pc, #28]	; (8002f30 <thread4.lto_priv.82+0x20>)
 8002f12:	b510      	push	{r4, lr}
 8002f14:	2320      	movs	r3, #32
 8002f16:	6994      	ldr	r4, [r2, #24]
 8002f18:	f383 8811 	msr	BASEPRI, r3
 8002f1c:	2003      	movs	r0, #3
 8002f1e:	f7ff ff27 	bl	8002d70 <chSchGoSleepS>
 8002f22:	6a23      	ldr	r3, [r4, #32]
 8002f24:	2b00      	cmp	r3, #0
 8002f26:	d0f9      	beq.n	8002f1c <thread4.lto_priv.82+0xc>
 8002f28:	2300      	movs	r3, #0
 8002f2a:	f383 8811 	msr	BASEPRI, r3
 8002f2e:	bd10      	pop	{r4, pc}
 8002f30:	20001558 	.word	0x20001558
	...

08002f40 <chSchGoSleepTimeoutS>:
 8002f40:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002f44:	b530      	push	{r4, r5, lr}
 8002f46:	4299      	cmp	r1, r3
 8002f48:	b087      	sub	sp, #28
 8002f4a:	d012      	beq.n	8002f72 <chSchGoSleepTimeoutS+0x32>
 8002f4c:	4605      	mov	r5, r0
 8002f4e:	4c0c      	ldr	r4, [pc, #48]	; (8002f80 <chSchGoSleepTimeoutS+0x40>)
 8002f50:	a801      	add	r0, sp, #4
 8002f52:	69a3      	ldr	r3, [r4, #24]
 8002f54:	4a0b      	ldr	r2, [pc, #44]	; (8002f84 <chSchGoSleepTimeoutS+0x44>)
 8002f56:	f7fe fa03 	bl	8001360 <chVTDoSetI>
 8002f5a:	4628      	mov	r0, r5
 8002f5c:	f7ff ff08 	bl	8002d70 <chSchGoSleepS>
 8002f60:	9b04      	ldr	r3, [sp, #16]
 8002f62:	b113      	cbz	r3, 8002f6a <chSchGoSleepTimeoutS+0x2a>
 8002f64:	a801      	add	r0, sp, #4
 8002f66:	f7fe f9bb 	bl	80012e0 <chVTDoResetI>
 8002f6a:	69a3      	ldr	r3, [r4, #24]
 8002f6c:	6a18      	ldr	r0, [r3, #32]
 8002f6e:	b007      	add	sp, #28
 8002f70:	bd30      	pop	{r4, r5, pc}
 8002f72:	f7ff fefd 	bl	8002d70 <chSchGoSleepS>
 8002f76:	4c02      	ldr	r4, [pc, #8]	; (8002f80 <chSchGoSleepTimeoutS+0x40>)
 8002f78:	69a3      	ldr	r3, [r4, #24]
 8002f7a:	6a18      	ldr	r0, [r3, #32]
 8002f7c:	b007      	add	sp, #28
 8002f7e:	bd30      	pop	{r4, r5, pc}
 8002f80:	20001558 	.word	0x20001558
 8002f84:	08000ee1 	.word	0x08000ee1
	...

08002f90 <chSemWaitTimeout.constprop.58>:
 8002f90:	2320      	movs	r3, #32
 8002f92:	f383 8811 	msr	BASEPRI, r3
 8002f96:	4b10      	ldr	r3, [pc, #64]	; (8002fd8 <chSemWaitTimeout.constprop.58+0x48>)
 8002f98:	6899      	ldr	r1, [r3, #8]
 8002f9a:	1e4a      	subs	r2, r1, #1
 8002f9c:	2a00      	cmp	r2, #0
 8002f9e:	609a      	str	r2, [r3, #8]
 8002fa0:	db04      	blt.n	8002fac <chSemWaitTimeout.constprop.58+0x1c>
 8002fa2:	2000      	movs	r0, #0
 8002fa4:	2300      	movs	r3, #0
 8002fa6:	f383 8811 	msr	BASEPRI, r3
 8002faa:	4770      	bx	lr
 8002fac:	b180      	cbz	r0, 8002fd0 <chSemWaitTimeout.constprop.58+0x40>
 8002fae:	4a0b      	ldr	r2, [pc, #44]	; (8002fdc <chSemWaitTimeout.constprop.58+0x4c>)
 8002fb0:	b510      	push	{r4, lr}
 8002fb2:	6992      	ldr	r2, [r2, #24]
 8002fb4:	685c      	ldr	r4, [r3, #4]
 8002fb6:	6213      	str	r3, [r2, #32]
 8002fb8:	e9c2 3400 	strd	r3, r4, [r2]
 8002fbc:	4601      	mov	r1, r0
 8002fbe:	6022      	str	r2, [r4, #0]
 8002fc0:	2005      	movs	r0, #5
 8002fc2:	605a      	str	r2, [r3, #4]
 8002fc4:	f7ff ffbc 	bl	8002f40 <chSchGoSleepTimeoutS>
 8002fc8:	2300      	movs	r3, #0
 8002fca:	f383 8811 	msr	BASEPRI, r3
 8002fce:	bd10      	pop	{r4, pc}
 8002fd0:	6099      	str	r1, [r3, #8]
 8002fd2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002fd6:	e7e5      	b.n	8002fa4 <chSemWaitTimeout.constprop.58+0x14>
 8002fd8:	20000cd0 	.word	0x20000cd0
 8002fdc:	20001558 	.word	0x20001558

08002fe0 <evt3_execute>:
 8002fe0:	b570      	push	{r4, r5, r6, lr}
 8002fe2:	4c55      	ldr	r4, [pc, #340]	; (8003138 <evt3_execute+0x158>)
 8002fe4:	2320      	movs	r3, #32
 8002fe6:	69a2      	ldr	r2, [r4, #24]
 8002fe8:	f383 8811 	msr	BASEPRI, r3
 8002fec:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8002fee:	b93b      	cbnz	r3, 8003000 <evt3_execute+0x20>
 8002ff0:	f383 8811 	msr	BASEPRI, r3
 8002ff4:	2101      	movs	r1, #1
 8002ff6:	2001      	movs	r0, #1
 8002ff8:	f7fd fbb2 	bl	8000760 <_test_assert>
 8002ffc:	b180      	cbz	r0, 8003020 <evt3_execute+0x40>
 8002ffe:	bd70      	pop	{r4, r5, r6, pc}
 8003000:	4259      	negs	r1, r3
 8003002:	4019      	ands	r1, r3
 8003004:	ea23 0301 	bic.w	r3, r3, r1
 8003008:	6353      	str	r3, [r2, #52]	; 0x34
 800300a:	2300      	movs	r3, #0
 800300c:	f383 8811 	msr	BASEPRI, r3
 8003010:	fab1 f181 	clz	r1, r1
 8003014:	2001      	movs	r0, #1
 8003016:	0949      	lsrs	r1, r1, #5
 8003018:	f7fd fba2 	bl	8000760 <_test_assert>
 800301c:	2800      	cmp	r0, #0
 800301e:	d1ee      	bne.n	8002ffe <evt3_execute+0x1e>
 8003020:	69a3      	ldr	r3, [r4, #24]
 8003022:	2220      	movs	r2, #32
 8003024:	f382 8811 	msr	BASEPRI, r2
 8003028:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800302a:	2a00      	cmp	r2, #0
 800302c:	d06f      	beq.n	800310e <evt3_execute+0x12e>
 800302e:	6358      	str	r0, [r3, #52]	; 0x34
 8003030:	f380 8811 	msr	BASEPRI, r0
 8003034:	4601      	mov	r1, r0
 8003036:	2002      	movs	r0, #2
 8003038:	f7fd fb92 	bl	8000760 <_test_assert>
 800303c:	2800      	cmp	r0, #0
 800303e:	d1de      	bne.n	8002ffe <evt3_execute+0x1e>
 8003040:	69a3      	ldr	r3, [r4, #24]
 8003042:	2220      	movs	r2, #32
 8003044:	f382 8811 	msr	BASEPRI, r2
 8003048:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800304a:	3201      	adds	r2, #1
 800304c:	d063      	beq.n	8003116 <evt3_execute+0x136>
 800304e:	f380 8811 	msr	BASEPRI, r0
 8003052:	2001      	movs	r0, #1
 8003054:	4601      	mov	r1, r0
 8003056:	2003      	movs	r0, #3
 8003058:	f7fd fb82 	bl	8000760 <_test_assert>
 800305c:	2800      	cmp	r0, #0
 800305e:	d1ce      	bne.n	8002ffe <evt3_execute+0x1e>
 8003060:	69a6      	ldr	r6, [r4, #24]
 8003062:	2320      	movs	r3, #32
 8003064:	f383 8811 	msr	BASEPRI, r3
 8003068:	6b75      	ldr	r5, [r6, #52]	; 0x34
 800306a:	b94d      	cbnz	r5, 8003080 <evt3_execute+0xa0>
 800306c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003070:	210a      	movs	r1, #10
 8003072:	6233      	str	r3, [r6, #32]
 8003074:	4608      	mov	r0, r1
 8003076:	f7ff ff63 	bl	8002f40 <chSchGoSleepTimeoutS>
 800307a:	2800      	cmp	r0, #0
 800307c:	db4f      	blt.n	800311e <evt3_execute+0x13e>
 800307e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8003080:	4269      	negs	r1, r5
 8003082:	4029      	ands	r1, r5
 8003084:	ea25 0501 	bic.w	r5, r5, r1
 8003088:	6375      	str	r5, [r6, #52]	; 0x34
 800308a:	2300      	movs	r3, #0
 800308c:	f383 8811 	msr	BASEPRI, r3
 8003090:	fab1 f181 	clz	r1, r1
 8003094:	0949      	lsrs	r1, r1, #5
 8003096:	2004      	movs	r0, #4
 8003098:	f7fd fb62 	bl	8000760 <_test_assert>
 800309c:	2800      	cmp	r0, #0
 800309e:	d1ae      	bne.n	8002ffe <evt3_execute+0x1e>
 80030a0:	69a6      	ldr	r6, [r4, #24]
 80030a2:	2320      	movs	r3, #32
 80030a4:	f383 8811 	msr	BASEPRI, r3
 80030a8:	6b75      	ldr	r5, [r6, #52]	; 0x34
 80030aa:	b94d      	cbnz	r5, 80030c0 <evt3_execute+0xe0>
 80030ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80030b0:	210a      	movs	r1, #10
 80030b2:	6233      	str	r3, [r6, #32]
 80030b4:	4608      	mov	r0, r1
 80030b6:	f7ff ff43 	bl	8002f40 <chSchGoSleepTimeoutS>
 80030ba:	2800      	cmp	r0, #0
 80030bc:	db33      	blt.n	8003126 <evt3_execute+0x146>
 80030be:	6b75      	ldr	r5, [r6, #52]	; 0x34
 80030c0:	2300      	movs	r3, #0
 80030c2:	6373      	str	r3, [r6, #52]	; 0x34
 80030c4:	f383 8811 	msr	BASEPRI, r3
 80030c8:	fab5 f185 	clz	r1, r5
 80030cc:	0949      	lsrs	r1, r1, #5
 80030ce:	2005      	movs	r0, #5
 80030d0:	f7fd fb46 	bl	8000760 <_test_assert>
 80030d4:	4605      	mov	r5, r0
 80030d6:	2800      	cmp	r0, #0
 80030d8:	d191      	bne.n	8002ffe <evt3_execute+0x1e>
 80030da:	69a4      	ldr	r4, [r4, #24]
 80030dc:	2320      	movs	r3, #32
 80030de:	f383 8811 	msr	BASEPRI, r3
 80030e2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80030e4:	3301      	adds	r3, #1
 80030e6:	d008      	beq.n	80030fa <evt3_execute+0x11a>
 80030e8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80030ec:	210a      	movs	r1, #10
 80030ee:	6223      	str	r3, [r4, #32]
 80030f0:	200b      	movs	r0, #11
 80030f2:	f7ff ff25 	bl	8002f40 <chSchGoSleepTimeoutS>
 80030f6:	2800      	cmp	r0, #0
 80030f8:	db19      	blt.n	800312e <evt3_execute+0x14e>
 80030fa:	2300      	movs	r3, #0
 80030fc:	6363      	str	r3, [r4, #52]	; 0x34
 80030fe:	f383 8811 	msr	BASEPRI, r3
 8003102:	4629      	mov	r1, r5
 8003104:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003108:	2006      	movs	r0, #6
 800310a:	f7fd bb29 	b.w	8000760 <_test_assert>
 800310e:	f382 8811 	msr	BASEPRI, r2
 8003112:	2101      	movs	r1, #1
 8003114:	e78f      	b.n	8003036 <evt3_execute+0x56>
 8003116:	6358      	str	r0, [r3, #52]	; 0x34
 8003118:	f380 8811 	msr	BASEPRI, r0
 800311c:	e79a      	b.n	8003054 <evt3_execute+0x74>
 800311e:	f385 8811 	msr	BASEPRI, r5
 8003122:	2101      	movs	r1, #1
 8003124:	e7b7      	b.n	8003096 <evt3_execute+0xb6>
 8003126:	f385 8811 	msr	BASEPRI, r5
 800312a:	2101      	movs	r1, #1
 800312c:	e7cf      	b.n	80030ce <evt3_execute+0xee>
 800312e:	f385 8811 	msr	BASEPRI, r5
 8003132:	2501      	movs	r5, #1
 8003134:	e7e5      	b.n	8003102 <evt3_execute+0x122>
 8003136:	bf00      	nop
 8003138:	20001558 	.word	0x20001558
 800313c:	00000000 	.word	0x00000000

08003140 <chSemWaitTimeoutS>:
 8003140:	6883      	ldr	r3, [r0, #8]
 8003142:	3b01      	subs	r3, #1
 8003144:	2b00      	cmp	r3, #0
 8003146:	6083      	str	r3, [r0, #8]
 8003148:	db01      	blt.n	800314e <chSemWaitTimeoutS+0xe>
 800314a:	2000      	movs	r0, #0
 800314c:	4770      	bx	lr
 800314e:	4602      	mov	r2, r0
 8003150:	4b06      	ldr	r3, [pc, #24]	; (800316c <chSemWaitTimeoutS+0x2c>)
 8003152:	b410      	push	{r4}
 8003154:	699b      	ldr	r3, [r3, #24]
 8003156:	2005      	movs	r0, #5
 8003158:	621a      	str	r2, [r3, #32]
 800315a:	601a      	str	r2, [r3, #0]
 800315c:	6854      	ldr	r4, [r2, #4]
 800315e:	605c      	str	r4, [r3, #4]
 8003160:	6023      	str	r3, [r4, #0]
 8003162:	6053      	str	r3, [r2, #4]
 8003164:	bc10      	pop	{r4}
 8003166:	f7ff beeb 	b.w	8002f40 <chSchGoSleepTimeoutS>
 800316a:	bf00      	nop
 800316c:	20001558 	.word	0x20001558

08003170 <chMBPost.constprop.28>:
 8003170:	b570      	push	{r4, r5, r6, lr}
 8003172:	2320      	movs	r3, #32
 8003174:	4606      	mov	r6, r0
 8003176:	f383 8811 	msr	BASEPRI, r3
 800317a:	4c0d      	ldr	r4, [pc, #52]	; (80031b0 <chMBPost.constprop.28+0x40>)
 800317c:	f104 001c 	add.w	r0, r4, #28
 8003180:	f7ff ffde 	bl	8003140 <chSemWaitTimeoutS>
 8003184:	4605      	mov	r5, r0
 8003186:	b970      	cbnz	r0, 80031a6 <chMBPost.constprop.28+0x36>
 8003188:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800318c:	1d13      	adds	r3, r2, #4
 800318e:	428b      	cmp	r3, r1
 8003190:	60a3      	str	r3, [r4, #8]
 8003192:	bf28      	it	cs
 8003194:	6823      	ldrcs	r3, [r4, #0]
 8003196:	6016      	str	r6, [r2, #0]
 8003198:	4806      	ldr	r0, [pc, #24]	; (80031b4 <chMBPost.constprop.28+0x44>)
 800319a:	bf28      	it	cs
 800319c:	60a3      	strcs	r3, [r4, #8]
 800319e:	f7fd fff7 	bl	8001190 <chSemSignalI>
 80031a2:	f7fe fe0d 	bl	8001dc0 <chSchRescheduleS>
 80031a6:	2300      	movs	r3, #0
 80031a8:	f383 8811 	msr	BASEPRI, r3
 80031ac:	4628      	mov	r0, r5
 80031ae:	bd70      	pop	{r4, r5, r6, pc}
 80031b0:	20000c78 	.word	0x20000c78
 80031b4:	20000c88 	.word	0x20000c88
	...

080031c0 <chMBPostAhead.constprop.26>:
 80031c0:	b570      	push	{r4, r5, r6, lr}
 80031c2:	2320      	movs	r3, #32
 80031c4:	4606      	mov	r6, r0
 80031c6:	f383 8811 	msr	BASEPRI, r3
 80031ca:	4c10      	ldr	r4, [pc, #64]	; (800320c <chMBPostAhead.constprop.26+0x4c>)
 80031cc:	f104 001c 	add.w	r0, r4, #28
 80031d0:	f7ff ffb6 	bl	8003140 <chSemWaitTimeoutS>
 80031d4:	4605      	mov	r5, r0
 80031d6:	b120      	cbz	r0, 80031e2 <chMBPostAhead.constprop.26+0x22>
 80031d8:	2300      	movs	r3, #0
 80031da:	f383 8811 	msr	BASEPRI, r3
 80031de:	4628      	mov	r0, r5
 80031e0:	bd70      	pop	{r4, r5, r6, pc}
 80031e2:	68e3      	ldr	r3, [r4, #12]
 80031e4:	6822      	ldr	r2, [r4, #0]
 80031e6:	3b04      	subs	r3, #4
 80031e8:	4293      	cmp	r3, r2
 80031ea:	60e3      	str	r3, [r4, #12]
 80031ec:	d202      	bcs.n	80031f4 <chMBPostAhead.constprop.26+0x34>
 80031ee:	6863      	ldr	r3, [r4, #4]
 80031f0:	3b04      	subs	r3, #4
 80031f2:	60e3      	str	r3, [r4, #12]
 80031f4:	601e      	str	r6, [r3, #0]
 80031f6:	4806      	ldr	r0, [pc, #24]	; (8003210 <chMBPostAhead.constprop.26+0x50>)
 80031f8:	f7fd ffca 	bl	8001190 <chSemSignalI>
 80031fc:	f7fe fde0 	bl	8001dc0 <chSchRescheduleS>
 8003200:	2300      	movs	r3, #0
 8003202:	f383 8811 	msr	BASEPRI, r3
 8003206:	4628      	mov	r0, r5
 8003208:	bd70      	pop	{r4, r5, r6, pc}
 800320a:	bf00      	nop
 800320c:	20000c78 	.word	0x20000c78
 8003210:	20000c88 	.word	0x20000c88
	...

08003220 <chMBFetch.constprop.24>:
 8003220:	b570      	push	{r4, r5, r6, lr}
 8003222:	2320      	movs	r3, #32
 8003224:	4606      	mov	r6, r0
 8003226:	f383 8811 	msr	BASEPRI, r3
 800322a:	4c0e      	ldr	r4, [pc, #56]	; (8003264 <chMBFetch.constprop.24+0x44>)
 800322c:	f104 0010 	add.w	r0, r4, #16
 8003230:	f7ff ff86 	bl	8003140 <chSemWaitTimeoutS>
 8003234:	4605      	mov	r5, r0
 8003236:	b978      	cbnz	r0, 8003258 <chMBFetch.constprop.24+0x38>
 8003238:	68e2      	ldr	r2, [r4, #12]
 800323a:	6861      	ldr	r1, [r4, #4]
 800323c:	1d13      	adds	r3, r2, #4
 800323e:	428b      	cmp	r3, r1
 8003240:	6812      	ldr	r2, [r2, #0]
 8003242:	60e3      	str	r3, [r4, #12]
 8003244:	bf28      	it	cs
 8003246:	6823      	ldrcs	r3, [r4, #0]
 8003248:	6032      	str	r2, [r6, #0]
 800324a:	4807      	ldr	r0, [pc, #28]	; (8003268 <chMBFetch.constprop.24+0x48>)
 800324c:	bf28      	it	cs
 800324e:	60e3      	strcs	r3, [r4, #12]
 8003250:	f7fd ff9e 	bl	8001190 <chSemSignalI>
 8003254:	f7fe fdb4 	bl	8001dc0 <chSchRescheduleS>
 8003258:	2300      	movs	r3, #0
 800325a:	f383 8811 	msr	BASEPRI, r3
 800325e:	4628      	mov	r0, r5
 8003260:	bd70      	pop	{r4, r5, r6, pc}
 8003262:	bf00      	nop
 8003264:	20000c78 	.word	0x20000c78
 8003268:	20000c94 	.word	0x20000c94
 800326c:	00000000 	.word	0x00000000

08003270 <mbox1_execute>:
 8003270:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003272:	2320      	movs	r3, #32
 8003274:	b083      	sub	sp, #12
 8003276:	f383 8811 	msr	BASEPRI, r3
 800327a:	4dd1      	ldr	r5, [pc, #836]	; (80035c0 <mbox1_execute+0x350>)
 800327c:	2001      	movs	r0, #1
 800327e:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8003280:	f1a1 0105 	sub.w	r1, r1, #5
 8003284:	fab1 f181 	clz	r1, r1
 8003288:	0949      	lsrs	r1, r1, #5
 800328a:	f7fd fa69 	bl	8000760 <_test_assert>
 800328e:	2800      	cmp	r0, #0
 8003290:	f040 8190 	bne.w	80035b4 <mbox1_execute+0x344>
 8003294:	f380 8811 	msr	BASEPRI, r0
 8003298:	2442      	movs	r4, #66	; 0x42
 800329a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800329e:	4620      	mov	r0, r4
 80032a0:	f7ff ff66 	bl	8003170 <chMBPost.constprop.28>
 80032a4:	fab0 f180 	clz	r1, r0
 80032a8:	2002      	movs	r0, #2
 80032aa:	0949      	lsrs	r1, r1, #5
 80032ac:	f7fd fa58 	bl	8000760 <_test_assert>
 80032b0:	3401      	adds	r4, #1
 80032b2:	b978      	cbnz	r0, 80032d4 <mbox1_execute+0x64>
 80032b4:	2c46      	cmp	r4, #70	; 0x46
 80032b6:	d1f0      	bne.n	800329a <mbox1_execute+0x2a>
 80032b8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80032bc:	2041      	movs	r0, #65	; 0x41
 80032be:	f7ff ff7f 	bl	80031c0 <chMBPostAhead.constprop.26>
 80032c2:	fab0 f180 	clz	r1, r0
 80032c6:	2003      	movs	r0, #3
 80032c8:	0949      	lsrs	r1, r1, #5
 80032ca:	f7fd fa49 	bl	8000760 <_test_assert>
 80032ce:	2800      	cmp	r0, #0
 80032d0:	f000 817e 	beq.w	80035d0 <mbox1_execute+0x360>
 80032d4:	b003      	add	sp, #12
 80032d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80032d8:	f380 8811 	msr	BASEPRI, r0
 80032dc:	f384 8811 	msr	BASEPRI, r4
 80032e0:	2041      	movs	r0, #65	; 0x41
 80032e2:	f7fd ff6d 	bl	80011c0 <chMBPostI.constprop.27>
 80032e6:	fab0 f180 	clz	r1, r0
 80032ea:	2016      	movs	r0, #22
 80032ec:	0949      	lsrs	r1, r1, #5
 80032ee:	f7fd fa37 	bl	8000760 <_test_assert>
 80032f2:	2800      	cmp	r0, #0
 80032f4:	d1ee      	bne.n	80032d4 <mbox1_execute+0x64>
 80032f6:	2042      	movs	r0, #66	; 0x42
 80032f8:	f7fd ff62 	bl	80011c0 <chMBPostI.constprop.27>
 80032fc:	fab0 f180 	clz	r1, r0
 8003300:	2017      	movs	r0, #23
 8003302:	0949      	lsrs	r1, r1, #5
 8003304:	f7fd fa2c 	bl	8000760 <_test_assert>
 8003308:	2800      	cmp	r0, #0
 800330a:	d1e3      	bne.n	80032d4 <mbox1_execute+0x64>
 800330c:	2043      	movs	r0, #67	; 0x43
 800330e:	f7fd ff57 	bl	80011c0 <chMBPostI.constprop.27>
 8003312:	fab0 f180 	clz	r1, r0
 8003316:	2018      	movs	r0, #24
 8003318:	0949      	lsrs	r1, r1, #5
 800331a:	f7fd fa21 	bl	8000760 <_test_assert>
 800331e:	2800      	cmp	r0, #0
 8003320:	d1d8      	bne.n	80032d4 <mbox1_execute+0x64>
 8003322:	2044      	movs	r0, #68	; 0x44
 8003324:	f7fd ff4c 	bl	80011c0 <chMBPostI.constprop.27>
 8003328:	fab0 f180 	clz	r1, r0
 800332c:	2019      	movs	r0, #25
 800332e:	0949      	lsrs	r1, r1, #5
 8003330:	f7fd fa16 	bl	8000760 <_test_assert>
 8003334:	4606      	mov	r6, r0
 8003336:	2800      	cmp	r0, #0
 8003338:	d1cc      	bne.n	80032d4 <mbox1_execute+0x64>
 800333a:	2045      	movs	r0, #69	; 0x45
 800333c:	f7fd ff40 	bl	80011c0 <chMBPostI.constprop.27>
 8003340:	f386 8811 	msr	BASEPRI, r6
 8003344:	fab0 f180 	clz	r1, r0
 8003348:	201a      	movs	r0, #26
 800334a:	0949      	lsrs	r1, r1, #5
 800334c:	f7fd fa08 	bl	8000760 <_test_assert>
 8003350:	2800      	cmp	r0, #0
 8003352:	d1bf      	bne.n	80032d4 <mbox1_execute+0x64>
 8003354:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8003358:	eba1 0c03 	sub.w	ip, r1, r3
 800335c:	f1dc 0100 	rsbs	r1, ip, #0
 8003360:	eb41 010c 	adc.w	r1, r1, ip
 8003364:	201b      	movs	r0, #27
 8003366:	f7fd f9fb 	bl	8000760 <_test_assert>
 800336a:	2800      	cmp	r0, #0
 800336c:	d1b2      	bne.n	80032d4 <mbox1_execute+0x64>
 800336e:	4607      	mov	r7, r0
 8003370:	2605      	movs	r6, #5
 8003372:	f384 8811 	msr	BASEPRI, r4
 8003376:	a801      	add	r0, sp, #4
 8003378:	f7fd ff62 	bl	8001240 <chMBFetchI.constprop.23>
 800337c:	f387 8811 	msr	BASEPRI, r7
 8003380:	fab0 f180 	clz	r1, r0
 8003384:	201c      	movs	r0, #28
 8003386:	0949      	lsrs	r1, r1, #5
 8003388:	f7fd f9ea 	bl	8000760 <_test_assert>
 800338c:	2800      	cmp	r0, #0
 800338e:	d1a1      	bne.n	80032d4 <mbox1_execute+0x64>
 8003390:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8003394:	f7fd f9fc 	bl	8000790 <test_emit_token>
 8003398:	3e01      	subs	r6, #1
 800339a:	d1ea      	bne.n	8003372 <mbox1_execute+0x102>
 800339c:	4989      	ldr	r1, [pc, #548]	; (80035c4 <mbox1_execute+0x354>)
 800339e:	201d      	movs	r0, #29
 80033a0:	f7fd f9b6 	bl	8000710 <_test_assert_sequence>
 80033a4:	2800      	cmp	r0, #0
 80033a6:	d195      	bne.n	80032d4 <mbox1_execute+0x64>
 80033a8:	f384 8811 	msr	BASEPRI, r4
 80033ac:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80033ae:	201e      	movs	r0, #30
 80033b0:	1f4f      	subs	r7, r1, #5
 80033b2:	4279      	negs	r1, r7
 80033b4:	4179      	adcs	r1, r7
 80033b6:	f7fd f9d3 	bl	8000760 <_test_assert>
 80033ba:	2800      	cmp	r0, #0
 80033bc:	f040 8223 	bne.w	8003806 <mbox1_execute+0x596>
 80033c0:	f386 8811 	msr	BASEPRI, r6
 80033c4:	f384 8811 	msr	BASEPRI, r4
 80033c8:	69a9      	ldr	r1, [r5, #24]
 80033ca:	201f      	movs	r0, #31
 80033cc:	fab1 f181 	clz	r1, r1
 80033d0:	0949      	lsrs	r1, r1, #5
 80033d2:	f7fd f9c5 	bl	8000760 <_test_assert>
 80033d6:	2800      	cmp	r0, #0
 80033d8:	f040 8215 	bne.w	8003806 <mbox1_execute+0x596>
 80033dc:	f386 8811 	msr	BASEPRI, r6
 80033e0:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80033e4:	1aca      	subs	r2, r1, r3
 80033e6:	4251      	negs	r1, r2
 80033e8:	4151      	adcs	r1, r2
 80033ea:	2020      	movs	r0, #32
 80033ec:	f7fd f9b8 	bl	8000760 <_test_assert>
 80033f0:	2800      	cmp	r0, #0
 80033f2:	f47f af6f 	bne.w	80032d4 <mbox1_execute+0x64>
 80033f6:	f384 8811 	msr	BASEPRI, r4
 80033fa:	2045      	movs	r0, #69	; 0x45
 80033fc:	f7fd ff00 	bl	8001200 <chMBPostAheadI.constprop.25>
 8003400:	fab0 f180 	clz	r1, r0
 8003404:	2021      	movs	r0, #33	; 0x21
 8003406:	0949      	lsrs	r1, r1, #5
 8003408:	f7fd f9aa 	bl	8000760 <_test_assert>
 800340c:	2800      	cmp	r0, #0
 800340e:	f47f af61 	bne.w	80032d4 <mbox1_execute+0x64>
 8003412:	2044      	movs	r0, #68	; 0x44
 8003414:	f7fd fef4 	bl	8001200 <chMBPostAheadI.constprop.25>
 8003418:	fab0 f180 	clz	r1, r0
 800341c:	2022      	movs	r0, #34	; 0x22
 800341e:	0949      	lsrs	r1, r1, #5
 8003420:	f7fd f99e 	bl	8000760 <_test_assert>
 8003424:	2800      	cmp	r0, #0
 8003426:	f47f af55 	bne.w	80032d4 <mbox1_execute+0x64>
 800342a:	2043      	movs	r0, #67	; 0x43
 800342c:	f7fd fee8 	bl	8001200 <chMBPostAheadI.constprop.25>
 8003430:	fab0 f180 	clz	r1, r0
 8003434:	2023      	movs	r0, #35	; 0x23
 8003436:	0949      	lsrs	r1, r1, #5
 8003438:	f7fd f992 	bl	8000760 <_test_assert>
 800343c:	2800      	cmp	r0, #0
 800343e:	f47f af49 	bne.w	80032d4 <mbox1_execute+0x64>
 8003442:	2042      	movs	r0, #66	; 0x42
 8003444:	f7fd fedc 	bl	8001200 <chMBPostAheadI.constprop.25>
 8003448:	fab0 f180 	clz	r1, r0
 800344c:	2024      	movs	r0, #36	; 0x24
 800344e:	0949      	lsrs	r1, r1, #5
 8003450:	f7fd f986 	bl	8000760 <_test_assert>
 8003454:	2800      	cmp	r0, #0
 8003456:	f47f af3d 	bne.w	80032d4 <mbox1_execute+0x64>
 800345a:	2041      	movs	r0, #65	; 0x41
 800345c:	f7fd fed0 	bl	8001200 <chMBPostAheadI.constprop.25>
 8003460:	2300      	movs	r3, #0
 8003462:	f383 8811 	msr	BASEPRI, r3
 8003466:	fab0 f180 	clz	r1, r0
 800346a:	2025      	movs	r0, #37	; 0x25
 800346c:	0949      	lsrs	r1, r1, #5
 800346e:	f7fd f977 	bl	8000760 <_test_assert>
 8003472:	2800      	cmp	r0, #0
 8003474:	f47f af2e 	bne.w	80032d4 <mbox1_execute+0x64>
 8003478:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800347c:	1acb      	subs	r3, r1, r3
 800347e:	4259      	negs	r1, r3
 8003480:	4159      	adcs	r1, r3
 8003482:	2026      	movs	r0, #38	; 0x26
 8003484:	f7fd f96c 	bl	8000760 <_test_assert>
 8003488:	2800      	cmp	r0, #0
 800348a:	f47f af23 	bne.w	80032d4 <mbox1_execute+0x64>
 800348e:	4606      	mov	r6, r0
 8003490:	2405      	movs	r4, #5
 8003492:	2720      	movs	r7, #32
 8003494:	f387 8811 	msr	BASEPRI, r7
 8003498:	a801      	add	r0, sp, #4
 800349a:	f7fd fed1 	bl	8001240 <chMBFetchI.constprop.23>
 800349e:	f386 8811 	msr	BASEPRI, r6
 80034a2:	fab0 f180 	clz	r1, r0
 80034a6:	2027      	movs	r0, #39	; 0x27
 80034a8:	0949      	lsrs	r1, r1, #5
 80034aa:	f7fd f959 	bl	8000760 <_test_assert>
 80034ae:	2800      	cmp	r0, #0
 80034b0:	f47f af10 	bne.w	80032d4 <mbox1_execute+0x64>
 80034b4:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80034b8:	f7fd f96a 	bl	8000790 <test_emit_token>
 80034bc:	3c01      	subs	r4, #1
 80034be:	d1e9      	bne.n	8003494 <mbox1_execute+0x224>
 80034c0:	4940      	ldr	r1, [pc, #256]	; (80035c4 <mbox1_execute+0x354>)
 80034c2:	2028      	movs	r0, #40	; 0x28
 80034c4:	f7fd f924 	bl	8000710 <_test_assert_sequence>
 80034c8:	2800      	cmp	r0, #0
 80034ca:	f47f af03 	bne.w	80032d4 <mbox1_execute+0x64>
 80034ce:	f387 8811 	msr	BASEPRI, r7
 80034d2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80034d4:	2029      	movs	r0, #41	; 0x29
 80034d6:	f1a1 0e05 	sub.w	lr, r1, #5
 80034da:	f1de 0100 	rsbs	r1, lr, #0
 80034de:	eb41 010e 	adc.w	r1, r1, lr
 80034e2:	f7fd f93d 	bl	8000760 <_test_assert>
 80034e6:	2800      	cmp	r0, #0
 80034e8:	f040 80c5 	bne.w	8003676 <mbox1_execute+0x406>
 80034ec:	f384 8811 	msr	BASEPRI, r4
 80034f0:	f387 8811 	msr	BASEPRI, r7
 80034f4:	69a9      	ldr	r1, [r5, #24]
 80034f6:	202a      	movs	r0, #42	; 0x2a
 80034f8:	fab1 f181 	clz	r1, r1
 80034fc:	0949      	lsrs	r1, r1, #5
 80034fe:	f7fd f92f 	bl	8000760 <_test_assert>
 8003502:	2800      	cmp	r0, #0
 8003504:	f040 80b7 	bne.w	8003676 <mbox1_execute+0x406>
 8003508:	f384 8811 	msr	BASEPRI, r4
 800350c:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8003510:	eba1 0c03 	sub.w	ip, r1, r3
 8003514:	f1dc 0100 	rsbs	r1, ip, #0
 8003518:	eb41 010c 	adc.w	r1, r1, ip
 800351c:	202b      	movs	r0, #43	; 0x2b
 800351e:	f7fd f91f 	bl	8000760 <_test_assert>
 8003522:	2800      	cmp	r0, #0
 8003524:	f47f aed6 	bne.w	80032d4 <mbox1_execute+0x64>
 8003528:	f387 8811 	msr	BASEPRI, r7
 800352c:	e9d5 3200 	ldrd	r3, r2, [r5]
 8003530:	1ad2      	subs	r2, r2, r3
 8003532:	1091      	asrs	r1, r2, #2
 8003534:	4824      	ldr	r0, [pc, #144]	; (80035c8 <mbox1_execute+0x358>)
 8003536:	60ab      	str	r3, [r5, #8]
 8003538:	60eb      	str	r3, [r5, #12]
 800353a:	f7fd fea1 	bl	8001280 <chSemResetI>
 800353e:	4621      	mov	r1, r4
 8003540:	4822      	ldr	r0, [pc, #136]	; (80035cc <mbox1_execute+0x35c>)
 8003542:	f7fd fe9d 	bl	8001280 <chSemResetI>
 8003546:	f7fe fc3b 	bl	8001dc0 <chSchRescheduleS>
 800354a:	f384 8811 	msr	BASEPRI, r4
 800354e:	f387 8811 	msr	BASEPRI, r7
 8003552:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8003554:	202c      	movs	r0, #44	; 0x2c
 8003556:	1f4e      	subs	r6, r1, #5
 8003558:	4271      	negs	r1, r6
 800355a:	4171      	adcs	r1, r6
 800355c:	f7fd f900 	bl	8000760 <_test_assert>
 8003560:	2800      	cmp	r0, #0
 8003562:	f040 8088 	bne.w	8003676 <mbox1_execute+0x406>
 8003566:	f384 8811 	msr	BASEPRI, r4
 800356a:	f387 8811 	msr	BASEPRI, r7
 800356e:	69a9      	ldr	r1, [r5, #24]
 8003570:	202d      	movs	r0, #45	; 0x2d
 8003572:	fab1 f181 	clz	r1, r1
 8003576:	0949      	lsrs	r1, r1, #5
 8003578:	f7fd f8f2 	bl	8000760 <_test_assert>
 800357c:	2800      	cmp	r0, #0
 800357e:	d17a      	bne.n	8003676 <mbox1_execute+0x406>
 8003580:	f384 8811 	msr	BASEPRI, r4
 8003584:	f387 8811 	msr	BASEPRI, r7
 8003588:	6829      	ldr	r1, [r5, #0]
 800358a:	68ab      	ldr	r3, [r5, #8]
 800358c:	202e      	movs	r0, #46	; 0x2e
 800358e:	1aca      	subs	r2, r1, r3
 8003590:	4251      	negs	r1, r2
 8003592:	4151      	adcs	r1, r2
 8003594:	f7fd f8e4 	bl	8000760 <_test_assert>
 8003598:	2800      	cmp	r0, #0
 800359a:	d16c      	bne.n	8003676 <mbox1_execute+0x406>
 800359c:	f384 8811 	msr	BASEPRI, r4
 80035a0:	f387 8811 	msr	BASEPRI, r7
 80035a4:	6829      	ldr	r1, [r5, #0]
 80035a6:	68eb      	ldr	r3, [r5, #12]
 80035a8:	202f      	movs	r0, #47	; 0x2f
 80035aa:	1acb      	subs	r3, r1, r3
 80035ac:	4259      	negs	r1, r3
 80035ae:	4159      	adcs	r1, r3
 80035b0:	f7fd f8d6 	bl	8000760 <_test_assert>
 80035b4:	2300      	movs	r3, #0
 80035b6:	f383 8811 	msr	BASEPRI, r3
 80035ba:	b003      	add	sp, #12
 80035bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80035be:	bf00      	nop
 80035c0:	20000c78 	.word	0x20000c78
 80035c4:	08007b80 	.word	0x08007b80
 80035c8:	20000c94 	.word	0x20000c94
 80035cc:	20000c88 	.word	0x20000c88
 80035d0:	2101      	movs	r1, #1
 80035d2:	2058      	movs	r0, #88	; 0x58
 80035d4:	f7ff fdcc 	bl	8003170 <chMBPost.constprop.28>
 80035d8:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 80035dc:	fab1 f181 	clz	r1, r1
 80035e0:	2004      	movs	r0, #4
 80035e2:	0949      	lsrs	r1, r1, #5
 80035e4:	f7fd f8bc 	bl	8000760 <_test_assert>
 80035e8:	4604      	mov	r4, r0
 80035ea:	2800      	cmp	r0, #0
 80035ec:	f47f ae72 	bne.w	80032d4 <mbox1_execute+0x64>
 80035f0:	2620      	movs	r6, #32
 80035f2:	f386 8811 	msr	BASEPRI, r6
 80035f6:	2058      	movs	r0, #88	; 0x58
 80035f8:	f7fd fde2 	bl	80011c0 <chMBPostI.constprop.27>
 80035fc:	4601      	mov	r1, r0
 80035fe:	f384 8811 	msr	BASEPRI, r4
 8003602:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 8003606:	fab1 f181 	clz	r1, r1
 800360a:	2005      	movs	r0, #5
 800360c:	0949      	lsrs	r1, r1, #5
 800360e:	f7fd f8a7 	bl	8000760 <_test_assert>
 8003612:	2800      	cmp	r0, #0
 8003614:	f47f ae5e 	bne.w	80032d4 <mbox1_execute+0x64>
 8003618:	2101      	movs	r1, #1
 800361a:	2058      	movs	r0, #88	; 0x58
 800361c:	f7ff fdd0 	bl	80031c0 <chMBPostAhead.constprop.26>
 8003620:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8003624:	fab1 f181 	clz	r1, r1
 8003628:	2006      	movs	r0, #6
 800362a:	0949      	lsrs	r1, r1, #5
 800362c:	f7fd f898 	bl	8000760 <_test_assert>
 8003630:	4604      	mov	r4, r0
 8003632:	2800      	cmp	r0, #0
 8003634:	f47f ae4e 	bne.w	80032d4 <mbox1_execute+0x64>
 8003638:	f386 8811 	msr	BASEPRI, r6
 800363c:	2058      	movs	r0, #88	; 0x58
 800363e:	f7fd fddf 	bl	8001200 <chMBPostAheadI.constprop.25>
 8003642:	4601      	mov	r1, r0
 8003644:	f384 8811 	msr	BASEPRI, r4
 8003648:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 800364c:	fab1 f181 	clz	r1, r1
 8003650:	2007      	movs	r0, #7
 8003652:	0949      	lsrs	r1, r1, #5
 8003654:	f7fd f884 	bl	8000760 <_test_assert>
 8003658:	4604      	mov	r4, r0
 800365a:	2800      	cmp	r0, #0
 800365c:	f47f ae3a 	bne.w	80032d4 <mbox1_execute+0x64>
 8003660:	f386 8811 	msr	BASEPRI, r6
 8003664:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8003666:	2008      	movs	r0, #8
 8003668:	fab1 f181 	clz	r1, r1
 800366c:	0949      	lsrs	r1, r1, #5
 800366e:	f7fd f877 	bl	8000760 <_test_assert>
 8003672:	4607      	mov	r7, r0
 8003674:	b110      	cbz	r0, 800367c <mbox1_execute+0x40c>
 8003676:	f384 8811 	msr	BASEPRI, r4
 800367a:	e62b      	b.n	80032d4 <mbox1_execute+0x64>
 800367c:	f380 8811 	msr	BASEPRI, r0
 8003680:	f386 8811 	msr	BASEPRI, r6
 8003684:	69a9      	ldr	r1, [r5, #24]
 8003686:	2009      	movs	r0, #9
 8003688:	f1a1 0e05 	sub.w	lr, r1, #5
 800368c:	f1de 0100 	rsbs	r1, lr, #0
 8003690:	eb41 010e 	adc.w	r1, r1, lr
 8003694:	f7fd f864 	bl	8000760 <_test_assert>
 8003698:	b110      	cbz	r0, 80036a0 <mbox1_execute+0x430>
 800369a:	f387 8811 	msr	BASEPRI, r7
 800369e:	e619      	b.n	80032d4 <mbox1_execute+0x64>
 80036a0:	f380 8811 	msr	BASEPRI, r0
 80036a4:	f386 8811 	msr	BASEPRI, r6
 80036a8:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80036ac:	eba1 0c03 	sub.w	ip, r1, r3
 80036b0:	f1dc 0100 	rsbs	r1, ip, #0
 80036b4:	f04f 000a 	mov.w	r0, #10
 80036b8:	eb41 010c 	adc.w	r1, r1, ip
 80036bc:	f7fd f850 	bl	8000760 <_test_assert>
 80036c0:	2300      	movs	r3, #0
 80036c2:	2800      	cmp	r0, #0
 80036c4:	f47f af77 	bne.w	80035b6 <mbox1_execute+0x346>
 80036c8:	f383 8811 	msr	BASEPRI, r3
 80036cc:	2405      	movs	r4, #5
 80036ce:	e005      	b.n	80036dc <mbox1_execute+0x46c>
 80036d0:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80036d4:	f7fd f85c 	bl	8000790 <test_emit_token>
 80036d8:	3c01      	subs	r4, #1
 80036da:	d00d      	beq.n	80036f8 <mbox1_execute+0x488>
 80036dc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80036e0:	a801      	add	r0, sp, #4
 80036e2:	f7ff fd9d 	bl	8003220 <chMBFetch.constprop.24>
 80036e6:	fab0 f180 	clz	r1, r0
 80036ea:	200b      	movs	r0, #11
 80036ec:	0949      	lsrs	r1, r1, #5
 80036ee:	f7fd f837 	bl	8000760 <_test_assert>
 80036f2:	2800      	cmp	r0, #0
 80036f4:	d0ec      	beq.n	80036d0 <mbox1_execute+0x460>
 80036f6:	e5ed      	b.n	80032d4 <mbox1_execute+0x64>
 80036f8:	4944      	ldr	r1, [pc, #272]	; (800380c <mbox1_execute+0x59c>)
 80036fa:	200c      	movs	r0, #12
 80036fc:	f7fd f808 	bl	8000710 <_test_assert_sequence>
 8003700:	2800      	cmp	r0, #0
 8003702:	f47f ade7 	bne.w	80032d4 <mbox1_execute+0x64>
 8003706:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800370a:	2047      	movs	r0, #71	; 0x47
 800370c:	f7ff fd30 	bl	8003170 <chMBPost.constprop.28>
 8003710:	fab0 f180 	clz	r1, r0
 8003714:	200d      	movs	r0, #13
 8003716:	0949      	lsrs	r1, r1, #5
 8003718:	f7fd f822 	bl	8000760 <_test_assert>
 800371c:	2800      	cmp	r0, #0
 800371e:	f47f add9 	bne.w	80032d4 <mbox1_execute+0x64>
 8003722:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003726:	a801      	add	r0, sp, #4
 8003728:	f7ff fd7a 	bl	8003220 <chMBFetch.constprop.24>
 800372c:	fab0 f180 	clz	r1, r0
 8003730:	200e      	movs	r0, #14
 8003732:	0949      	lsrs	r1, r1, #5
 8003734:	f7fd f814 	bl	8000760 <_test_assert>
 8003738:	2800      	cmp	r0, #0
 800373a:	f47f adcb 	bne.w	80032d4 <mbox1_execute+0x64>
 800373e:	6829      	ldr	r1, [r5, #0]
 8003740:	68ab      	ldr	r3, [r5, #8]
 8003742:	200f      	movs	r0, #15
 8003744:	1acf      	subs	r7, r1, r3
 8003746:	4279      	negs	r1, r7
 8003748:	4179      	adcs	r1, r7
 800374a:	f7fd f809 	bl	8000760 <_test_assert>
 800374e:	2800      	cmp	r0, #0
 8003750:	f47f adc0 	bne.w	80032d4 <mbox1_execute+0x64>
 8003754:	6829      	ldr	r1, [r5, #0]
 8003756:	68eb      	ldr	r3, [r5, #12]
 8003758:	2010      	movs	r0, #16
 800375a:	1ace      	subs	r6, r1, r3
 800375c:	4271      	negs	r1, r6
 800375e:	4171      	adcs	r1, r6
 8003760:	f7fc fffe 	bl	8000760 <_test_assert>
 8003764:	2800      	cmp	r0, #0
 8003766:	f47f adb5 	bne.w	80032d4 <mbox1_execute+0x64>
 800376a:	2101      	movs	r1, #1
 800376c:	a801      	add	r0, sp, #4
 800376e:	f7ff fd57 	bl	8003220 <chMBFetch.constprop.24>
 8003772:	3001      	adds	r0, #1
 8003774:	4241      	negs	r1, r0
 8003776:	4141      	adcs	r1, r0
 8003778:	2011      	movs	r0, #17
 800377a:	f7fc fff1 	bl	8000760 <_test_assert>
 800377e:	2800      	cmp	r0, #0
 8003780:	f47f ada8 	bne.w	80032d4 <mbox1_execute+0x64>
 8003784:	2620      	movs	r6, #32
 8003786:	f386 8811 	msr	BASEPRI, r6
 800378a:	a801      	add	r0, sp, #4
 800378c:	f7fd fd58 	bl	8001240 <chMBFetchI.constprop.23>
 8003790:	4601      	mov	r1, r0
 8003792:	f384 8811 	msr	BASEPRI, r4
 8003796:	1c4a      	adds	r2, r1, #1
 8003798:	4251      	negs	r1, r2
 800379a:	4151      	adcs	r1, r2
 800379c:	2012      	movs	r0, #18
 800379e:	f7fc ffdf 	bl	8000760 <_test_assert>
 80037a2:	2800      	cmp	r0, #0
 80037a4:	f47f ad96 	bne.w	80032d4 <mbox1_execute+0x64>
 80037a8:	f386 8811 	msr	BASEPRI, r6
 80037ac:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80037ae:	2013      	movs	r0, #19
 80037b0:	1f4b      	subs	r3, r1, #5
 80037b2:	4259      	negs	r1, r3
 80037b4:	4159      	adcs	r1, r3
 80037b6:	f7fc ffd3 	bl	8000760 <_test_assert>
 80037ba:	2800      	cmp	r0, #0
 80037bc:	f47f aefa 	bne.w	80035b4 <mbox1_execute+0x344>
 80037c0:	2700      	movs	r7, #0
 80037c2:	f387 8811 	msr	BASEPRI, r7
 80037c6:	2420      	movs	r4, #32
 80037c8:	f384 8811 	msr	BASEPRI, r4
 80037cc:	69a9      	ldr	r1, [r5, #24]
 80037ce:	2014      	movs	r0, #20
 80037d0:	fab1 f181 	clz	r1, r1
 80037d4:	0949      	lsrs	r1, r1, #5
 80037d6:	f7fc ffc3 	bl	8000760 <_test_assert>
 80037da:	4606      	mov	r6, r0
 80037dc:	2800      	cmp	r0, #0
 80037de:	f47f af5c 	bne.w	800369a <mbox1_execute+0x42a>
 80037e2:	f380 8811 	msr	BASEPRI, r0
 80037e6:	f384 8811 	msr	BASEPRI, r4
 80037ea:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80037ee:	eba1 0e03 	sub.w	lr, r1, r3
 80037f2:	f1de 0100 	rsbs	r1, lr, #0
 80037f6:	eb41 010e 	adc.w	r1, r1, lr
 80037fa:	2015      	movs	r0, #21
 80037fc:	f7fc ffb0 	bl	8000760 <_test_assert>
 8003800:	2800      	cmp	r0, #0
 8003802:	f43f ad69 	beq.w	80032d8 <mbox1_execute+0x68>
 8003806:	f386 8811 	msr	BASEPRI, r6
 800380a:	e563      	b.n	80032d4 <mbox1_execute+0x64>
 800380c:	08007b80 	.word	0x08007b80

08003810 <chThdEnqueueTimeoutS>:
 8003810:	b161      	cbz	r1, 800382c <chThdEnqueueTimeoutS+0x1c>
 8003812:	4602      	mov	r2, r0
 8003814:	4b07      	ldr	r3, [pc, #28]	; (8003834 <chThdEnqueueTimeoutS+0x24>)
 8003816:	b410      	push	{r4}
 8003818:	699b      	ldr	r3, [r3, #24]
 800381a:	2004      	movs	r0, #4
 800381c:	601a      	str	r2, [r3, #0]
 800381e:	6854      	ldr	r4, [r2, #4]
 8003820:	605c      	str	r4, [r3, #4]
 8003822:	6023      	str	r3, [r4, #0]
 8003824:	6053      	str	r3, [r2, #4]
 8003826:	bc10      	pop	{r4}
 8003828:	f7ff bb8a 	b.w	8002f40 <chSchGoSleepTimeoutS>
 800382c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003830:	4770      	bx	lr
 8003832:	bf00      	nop
 8003834:	20001558 	.word	0x20001558
	...

08003840 <chOQWriteTimeout>:
 8003840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003844:	b083      	sub	sp, #12
 8003846:	4604      	mov	r4, r0
 8003848:	460d      	mov	r5, r1
 800384a:	4616      	mov	r6, r2
 800384c:	9301      	str	r3, [sp, #4]
 800384e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8003852:	f04f 0920 	mov.w	r9, #32
 8003856:	f389 8811 	msr	BASEPRI, r9
 800385a:	2700      	movs	r7, #0
 800385c:	46ba      	mov	sl, r7
 800385e:	68a3      	ldr	r3, [r4, #8]
 8003860:	f105 0b01 	add.w	fp, r5, #1
 8003864:	1e59      	subs	r1, r3, #1
 8003866:	b1fb      	cbz	r3, 80038a8 <chOQWriteTimeout+0x68>
 8003868:	6963      	ldr	r3, [r4, #20]
 800386a:	60a1      	str	r1, [r4, #8]
 800386c:	1c59      	adds	r1, r3, #1
 800386e:	6161      	str	r1, [r4, #20]
 8003870:	7829      	ldrb	r1, [r5, #0]
 8003872:	7019      	strb	r1, [r3, #0]
 8003874:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 8003878:	4299      	cmp	r1, r3
 800387a:	bf24      	itt	cs
 800387c:	68e3      	ldrcs	r3, [r4, #12]
 800387e:	6163      	strcs	r3, [r4, #20]
 8003880:	f1b8 0f00 	cmp.w	r8, #0
 8003884:	d001      	beq.n	800388a <chOQWriteTimeout+0x4a>
 8003886:	4620      	mov	r0, r4
 8003888:	47c0      	blx	r8
 800388a:	f38a 8811 	msr	BASEPRI, sl
 800388e:	3e01      	subs	r6, #1
 8003890:	f107 0701 	add.w	r7, r7, #1
 8003894:	d012      	beq.n	80038bc <chOQWriteTimeout+0x7c>
 8003896:	f389 8811 	msr	BASEPRI, r9
 800389a:	465d      	mov	r5, fp
 800389c:	68a3      	ldr	r3, [r4, #8]
 800389e:	f105 0b01 	add.w	fp, r5, #1
 80038a2:	1e59      	subs	r1, r3, #1
 80038a4:	2b00      	cmp	r3, #0
 80038a6:	d1df      	bne.n	8003868 <chOQWriteTimeout+0x28>
 80038a8:	9901      	ldr	r1, [sp, #4]
 80038aa:	4620      	mov	r0, r4
 80038ac:	9300      	str	r3, [sp, #0]
 80038ae:	f7ff ffaf 	bl	8003810 <chThdEnqueueTimeoutS>
 80038b2:	9b00      	ldr	r3, [sp, #0]
 80038b4:	2800      	cmp	r0, #0
 80038b6:	d0d2      	beq.n	800385e <chOQWriteTimeout+0x1e>
 80038b8:	f383 8811 	msr	BASEPRI, r3
 80038bc:	4638      	mov	r0, r7
 80038be:	b003      	add	sp, #12
 80038c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080038d0 <writet>:
 80038d0:	3030      	adds	r0, #48	; 0x30
 80038d2:	f7ff bfb5 	b.w	8003840 <chOQWriteTimeout>
 80038d6:	bf00      	nop
	...

080038e0 <write>:
 80038e0:	3030      	adds	r0, #48	; 0x30
 80038e2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80038e6:	f7ff bfab 	b.w	8003840 <chOQWriteTimeout>
 80038ea:	bf00      	nop
 80038ec:	0000      	movs	r0, r0
	...

080038f0 <chOQPutTimeout>:
 80038f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80038f2:	4604      	mov	r4, r0
 80038f4:	460f      	mov	r7, r1
 80038f6:	4616      	mov	r6, r2
 80038f8:	2320      	movs	r3, #32
 80038fa:	f383 8811 	msr	BASEPRI, r3
 80038fe:	e005      	b.n	800390c <chOQPutTimeout+0x1c>
 8003900:	4631      	mov	r1, r6
 8003902:	4620      	mov	r0, r4
 8003904:	f7ff ff84 	bl	8003810 <chThdEnqueueTimeoutS>
 8003908:	2800      	cmp	r0, #0
 800390a:	db16      	blt.n	800393a <chOQPutTimeout+0x4a>
 800390c:	68a5      	ldr	r5, [r4, #8]
 800390e:	2d00      	cmp	r5, #0
 8003910:	d0f6      	beq.n	8003900 <chOQPutTimeout+0x10>
 8003912:	6963      	ldr	r3, [r4, #20]
 8003914:	3d01      	subs	r5, #1
 8003916:	1c5a      	adds	r2, r3, #1
 8003918:	6162      	str	r2, [r4, #20]
 800391a:	60a5      	str	r5, [r4, #8]
 800391c:	701f      	strb	r7, [r3, #0]
 800391e:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8003922:	429a      	cmp	r2, r3
 8003924:	bf24      	itt	cs
 8003926:	68e3      	ldrcs	r3, [r4, #12]
 8003928:	6163      	strcs	r3, [r4, #20]
 800392a:	69e3      	ldr	r3, [r4, #28]
 800392c:	b10b      	cbz	r3, 8003932 <chOQPutTimeout+0x42>
 800392e:	4620      	mov	r0, r4
 8003930:	4798      	blx	r3
 8003932:	2000      	movs	r0, #0
 8003934:	f380 8811 	msr	BASEPRI, r0
 8003938:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800393a:	f385 8811 	msr	BASEPRI, r5
 800393e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08003940 <thread2.lto_priv.85>:
 8003940:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8003944:	2100      	movs	r1, #0
 8003946:	4801      	ldr	r0, [pc, #4]	; (800394c <thread2.lto_priv.85+0xc>)
 8003948:	f7ff bfd2 	b.w	80038f0 <chOQPutTimeout>
 800394c:	20000cac 	.word	0x20000cac

08003950 <putt>:
 8003950:	3030      	adds	r0, #48	; 0x30
 8003952:	f7ff bfcd 	b.w	80038f0 <chOQPutTimeout>
 8003956:	bf00      	nop
	...

08003960 <put>:
 8003960:	3030      	adds	r0, #48	; 0x30
 8003962:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003966:	f7ff bfc3 	b.w	80038f0 <chOQPutTimeout>
 800396a:	bf00      	nop
 800396c:	0000      	movs	r0, r0
	...

08003970 <chIQReadTimeout>:
 8003970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003974:	4604      	mov	r4, r0
 8003976:	b083      	sub	sp, #12
 8003978:	4689      	mov	r9, r1
 800397a:	4693      	mov	fp, r2
 800397c:	461d      	mov	r5, r3
 800397e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8003982:	2720      	movs	r7, #32
 8003984:	f387 8811 	msr	BASEPRI, r7
 8003988:	2600      	movs	r6, #0
 800398a:	46b2      	mov	sl, r6
 800398c:	9701      	str	r7, [sp, #4]
 800398e:	f1b8 0f00 	cmp.w	r8, #0
 8003992:	d007      	beq.n	80039a4 <chIQReadTimeout+0x34>
 8003994:	4620      	mov	r0, r4
 8003996:	47c0      	blx	r8
 8003998:	e004      	b.n	80039a4 <chIQReadTimeout+0x34>
 800399a:	4629      	mov	r1, r5
 800399c:	4620      	mov	r0, r4
 800399e:	f7ff ff37 	bl	8003810 <chThdEnqueueTimeoutS>
 80039a2:	b9c8      	cbnz	r0, 80039d8 <chIQReadTimeout+0x68>
 80039a4:	68a7      	ldr	r7, [r4, #8]
 80039a6:	2f00      	cmp	r7, #0
 80039a8:	d0f7      	beq.n	800399a <chIQReadTimeout+0x2a>
 80039aa:	69a2      	ldr	r2, [r4, #24]
 80039ac:	3f01      	subs	r7, #1
 80039ae:	1c51      	adds	r1, r2, #1
 80039b0:	61a1      	str	r1, [r4, #24]
 80039b2:	60a7      	str	r7, [r4, #8]
 80039b4:	7813      	ldrb	r3, [r2, #0]
 80039b6:	f809 3b01 	strb.w	r3, [r9], #1
 80039ba:	6923      	ldr	r3, [r4, #16]
 80039bc:	69a2      	ldr	r2, [r4, #24]
 80039be:	429a      	cmp	r2, r3
 80039c0:	bf24      	itt	cs
 80039c2:	68e3      	ldrcs	r3, [r4, #12]
 80039c4:	61a3      	strcs	r3, [r4, #24]
 80039c6:	f38a 8811 	msr	BASEPRI, sl
 80039ca:	3601      	adds	r6, #1
 80039cc:	45b3      	cmp	fp, r6
 80039ce:	d005      	beq.n	80039dc <chIQReadTimeout+0x6c>
 80039d0:	9b01      	ldr	r3, [sp, #4]
 80039d2:	f383 8811 	msr	BASEPRI, r3
 80039d6:	e7da      	b.n	800398e <chIQReadTimeout+0x1e>
 80039d8:	f387 8811 	msr	BASEPRI, r7
 80039dc:	4630      	mov	r0, r6
 80039de:	b003      	add	sp, #12
 80039e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080039f0 <readt>:
 80039f0:	300c      	adds	r0, #12
 80039f2:	f7ff bfbd 	b.w	8003970 <chIQReadTimeout>
 80039f6:	bf00      	nop
	...

08003a00 <read>:
 8003a00:	300c      	adds	r0, #12
 8003a02:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003a06:	f7ff bfb3 	b.w	8003970 <chIQReadTimeout>
 8003a0a:	bf00      	nop
 8003a0c:	0000      	movs	r0, r0
	...

08003a10 <chIQGetTimeout>:
 8003a10:	b570      	push	{r4, r5, r6, lr}
 8003a12:	2320      	movs	r3, #32
 8003a14:	460e      	mov	r6, r1
 8003a16:	4604      	mov	r4, r0
 8003a18:	f383 8811 	msr	BASEPRI, r3
 8003a1c:	69c3      	ldr	r3, [r0, #28]
 8003a1e:	b13b      	cbz	r3, 8003a30 <chIQGetTimeout+0x20>
 8003a20:	4798      	blx	r3
 8003a22:	e005      	b.n	8003a30 <chIQGetTimeout+0x20>
 8003a24:	4631      	mov	r1, r6
 8003a26:	4620      	mov	r0, r4
 8003a28:	f7ff fef2 	bl	8003810 <chThdEnqueueTimeoutS>
 8003a2c:	2800      	cmp	r0, #0
 8003a2e:	db13      	blt.n	8003a58 <chIQGetTimeout+0x48>
 8003a30:	68a5      	ldr	r5, [r4, #8]
 8003a32:	2d00      	cmp	r5, #0
 8003a34:	d0f6      	beq.n	8003a24 <chIQGetTimeout+0x14>
 8003a36:	69a2      	ldr	r2, [r4, #24]
 8003a38:	6921      	ldr	r1, [r4, #16]
 8003a3a:	1c53      	adds	r3, r2, #1
 8003a3c:	428b      	cmp	r3, r1
 8003a3e:	61a3      	str	r3, [r4, #24]
 8003a40:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8003a44:	bf28      	it	cs
 8003a46:	68e3      	ldrcs	r3, [r4, #12]
 8003a48:	60a5      	str	r5, [r4, #8]
 8003a4a:	7810      	ldrb	r0, [r2, #0]
 8003a4c:	bf28      	it	cs
 8003a4e:	61a3      	strcs	r3, [r4, #24]
 8003a50:	2300      	movs	r3, #0
 8003a52:	f383 8811 	msr	BASEPRI, r3
 8003a56:	bd70      	pop	{r4, r5, r6, pc}
 8003a58:	f385 8811 	msr	BASEPRI, r5
 8003a5c:	bd70      	pop	{r4, r5, r6, pc}
 8003a5e:	bf00      	nop

08003a60 <thread1.lto_priv.79>:
 8003a60:	f44f 71c8 	mov.w	r1, #400	; 0x190
 8003a64:	4801      	ldr	r0, [pc, #4]	; (8003a6c <thread1.lto_priv.79+0xc>)
 8003a66:	f7ff bfd3 	b.w	8003a10 <chIQGetTimeout>
 8003a6a:	bf00      	nop
 8003a6c:	20000c14 	.word	0x20000c14

08003a70 <gett>:
 8003a70:	300c      	adds	r0, #12
 8003a72:	f7ff bfcd 	b.w	8003a10 <chIQGetTimeout>
 8003a76:	bf00      	nop
	...

08003a80 <get>:
 8003a80:	300c      	adds	r0, #12
 8003a82:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003a86:	f7ff bfc3 	b.w	8003a10 <chIQGetTimeout>
 8003a8a:	bf00      	nop
 8003a8c:	0000      	movs	r0, r0
	...

08003a90 <chThdSleep>:
 8003a90:	b508      	push	{r3, lr}
 8003a92:	4601      	mov	r1, r0
 8003a94:	2320      	movs	r3, #32
 8003a96:	f383 8811 	msr	BASEPRI, r3
 8003a9a:	2008      	movs	r0, #8
 8003a9c:	f7ff fa50 	bl	8002f40 <chSchGoSleepTimeoutS>
 8003aa0:	2300      	movs	r3, #0
 8003aa2:	f383 8811 	msr	BASEPRI, r3
 8003aa6:	bd08      	pop	{r3, pc}
	...

08003ab0 <Thread1>:
 8003ab0:	2602      	movs	r6, #2
 8003ab2:	46b0      	mov	r8, r6
 8003ab4:	4b0b      	ldr	r3, [pc, #44]	; (8003ae4 <Thread1+0x34>)
 8003ab6:	4a0c      	ldr	r2, [pc, #48]	; (8003ae8 <Thread1+0x38>)
 8003ab8:	699b      	ldr	r3, [r3, #24]
 8003aba:	b580      	push	{r7, lr}
 8003abc:	4d0b      	ldr	r5, [pc, #44]	; (8003aec <Thread1+0x3c>)
 8003abe:	4f0c      	ldr	r7, [pc, #48]	; (8003af0 <Thread1+0x40>)
 8003ac0:	619a      	str	r2, [r3, #24]
 8003ac2:	783b      	ldrb	r3, [r7, #0]
 8003ac4:	f8c5 8014 	str.w	r8, [r5, #20]
 8003ac8:	2b04      	cmp	r3, #4
 8003aca:	bf14      	ite	ne
 8003acc:	f44f 747a 	movne.w	r4, #1000	; 0x3e8
 8003ad0:	f44f 74fa 	moveq.w	r4, #500	; 0x1f4
 8003ad4:	4620      	mov	r0, r4
 8003ad6:	f7ff ffdb 	bl	8003a90 <chThdSleep>
 8003ada:	4620      	mov	r0, r4
 8003adc:	612e      	str	r6, [r5, #16]
 8003ade:	f7ff ffd7 	bl	8003a90 <chThdSleep>
 8003ae2:	e7ee      	b.n	8003ac2 <Thread1+0x12>
 8003ae4:	20001558 	.word	0x20001558
 8003ae8:	080075b0 	.word	0x080075b0
 8003aec:	40010800 	.word	0x40010800
 8003af0:	200014d0 	.word	0x200014d0
	...

08003b00 <sys1_execute>:
 8003b00:	b510      	push	{r4, lr}
 8003b02:	b086      	sub	sp, #24
 8003b04:	f7fd fc8c 	bl	8001420 <chSysGetStatusAndLockX>
 8003b08:	b908      	cbnz	r0, 8003b0e <sys1_execute+0xe>
 8003b0a:	f7fe fa61 	bl	8001fd0 <chSysRestoreStatusX.part.3>
 8003b0e:	2320      	movs	r3, #32
 8003b10:	f383 8811 	msr	BASEPRI, r3
 8003b14:	f7fd fc84 	bl	8001420 <chSysGetStatusAndLockX>
 8003b18:	b908      	cbnz	r0, 8003b1e <sys1_execute+0x1e>
 8003b1a:	f7fe fa59 	bl	8001fd0 <chSysRestoreStatusX.part.3>
 8003b1e:	2300      	movs	r3, #0
 8003b20:	f383 8811 	msr	BASEPRI, r3
 8003b24:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8003b28:	b913      	cbnz	r3, 8003b30 <sys1_execute+0x30>
 8003b2a:	2320      	movs	r3, #32
 8003b2c:	f383 8811 	msr	BASEPRI, r3
 8003b30:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8003b34:	b913      	cbnz	r3, 8003b3c <sys1_execute+0x3c>
 8003b36:	2320      	movs	r3, #32
 8003b38:	f383 8811 	msr	BASEPRI, r3
 8003b3c:	2300      	movs	r3, #0
 8003b3e:	f383 8811 	msr	BASEPRI, r3
 8003b42:	2220      	movs	r2, #32
 8003b44:	f382 8811 	msr	BASEPRI, r2
 8003b48:	f3ef 8212 	mrs	r2, BASEPRI_MAX
 8003b4c:	b10a      	cbz	r2, 8003b52 <sys1_execute+0x52>
 8003b4e:	f383 8811 	msr	BASEPRI, r3
 8003b52:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8003b56:	b113      	cbz	r3, 8003b5e <sys1_execute+0x5e>
 8003b58:	2300      	movs	r3, #0
 8003b5a:	f383 8811 	msr	BASEPRI, r3
 8003b5e:	2200      	movs	r2, #0
 8003b60:	2320      	movs	r3, #32
 8003b62:	9204      	str	r2, [sp, #16]
 8003b64:	f383 8811 	msr	BASEPRI, r3
 8003b68:	9b04      	ldr	r3, [sp, #16]
 8003b6a:	ac01      	add	r4, sp, #4
 8003b6c:	b113      	cbz	r3, 8003b74 <sys1_execute+0x74>
 8003b6e:	4620      	mov	r0, r4
 8003b70:	f7fd fbb6 	bl	80012e0 <chVTDoResetI>
 8003b74:	4620      	mov	r0, r4
 8003b76:	2300      	movs	r3, #0
 8003b78:	4a0b      	ldr	r2, [pc, #44]	; (8003ba8 <sys1_execute+0xa8>)
 8003b7a:	2101      	movs	r1, #1
 8003b7c:	f7fd fbf0 	bl	8001360 <chVTDoSetI>
 8003b80:	2400      	movs	r4, #0
 8003b82:	f384 8811 	msr	BASEPRI, r4
 8003b86:	200a      	movs	r0, #10
 8003b88:	f7ff ff82 	bl	8003a90 <chThdSleep>
 8003b8c:	2320      	movs	r3, #32
 8003b8e:	f383 8811 	msr	BASEPRI, r3
 8003b92:	9904      	ldr	r1, [sp, #16]
 8003b94:	f384 8811 	msr	BASEPRI, r4
 8003b98:	fab1 f181 	clz	r1, r1
 8003b9c:	2001      	movs	r0, #1
 8003b9e:	0949      	lsrs	r1, r1, #5
 8003ba0:	f7fc fdde 	bl	8000760 <_test_assert>
 8003ba4:	b006      	add	sp, #24
 8003ba6:	bd10      	pop	{r4, pc}
 8003ba8:	08002b11 	.word	0x08002b11
 8003bac:	00000000 	.word	0x00000000

08003bb0 <thread1.lto_priv.78>:
 8003bb0:	b510      	push	{r4, lr}
 8003bb2:	4604      	mov	r4, r0
 8003bb4:	2064      	movs	r0, #100	; 0x64
 8003bb6:	f7ff ff6b 	bl	8003a90 <chThdSleep>
 8003bba:	2320      	movs	r3, #32
 8003bbc:	f383 8811 	msr	BASEPRI, r3
 8003bc0:	2101      	movs	r1, #1
 8003bc2:	4620      	mov	r0, r4
 8003bc4:	f7fd fa4c 	bl	8001060 <chEvtSignalI>
 8003bc8:	f7fe f8fa 	bl	8001dc0 <chSchRescheduleS>
 8003bcc:	2300      	movs	r3, #0
 8003bce:	f383 8811 	msr	BASEPRI, r3
 8003bd2:	bd10      	pop	{r4, pc}
	...

08003be0 <thread2.lto_priv.84>:
 8003be0:	b538      	push	{r3, r4, r5, lr}
 8003be2:	2520      	movs	r5, #32
 8003be4:	f385 8811 	msr	BASEPRI, r5
 8003be8:	2100      	movs	r1, #0
 8003bea:	480b      	ldr	r0, [pc, #44]	; (8003c18 <thread2.lto_priv.84+0x38>)
 8003bec:	f7fd fa50 	bl	8001090 <chEvtBroadcastFlagsI>
 8003bf0:	2400      	movs	r4, #0
 8003bf2:	f7fe f8e5 	bl	8001dc0 <chSchRescheduleS>
 8003bf6:	f384 8811 	msr	BASEPRI, r4
 8003bfa:	2064      	movs	r0, #100	; 0x64
 8003bfc:	f7ff ff48 	bl	8003a90 <chThdSleep>
 8003c00:	f385 8811 	msr	BASEPRI, r5
 8003c04:	4805      	ldr	r0, [pc, #20]	; (8003c1c <thread2.lto_priv.84+0x3c>)
 8003c06:	4621      	mov	r1, r4
 8003c08:	f7fd fa42 	bl	8001090 <chEvtBroadcastFlagsI>
 8003c0c:	f7fe f8d8 	bl	8001dc0 <chSchRescheduleS>
 8003c10:	f384 8811 	msr	BASEPRI, r4
 8003c14:	bd38      	pop	{r3, r4, r5, pc}
 8003c16:	bf00      	nop
 8003c18:	20000c0c 	.word	0x20000c0c
 8003c1c:	20000c10 	.word	0x20000c10

08003c20 <thread2.lto_priv.83>:
 8003c20:	b508      	push	{r3, lr}
 8003c22:	2064      	movs	r0, #100	; 0x64
 8003c24:	f7ff ff34 	bl	8003a90 <chThdSleep>
 8003c28:	2320      	movs	r3, #32
 8003c2a:	f383 8811 	msr	BASEPRI, r3
 8003c2e:	4804      	ldr	r0, [pc, #16]	; (8003c40 <thread2.lto_priv.83+0x20>)
 8003c30:	f7fd faae 	bl	8001190 <chSemSignalI>
 8003c34:	f7fe f8c4 	bl	8001dc0 <chSchRescheduleS>
 8003c38:	2300      	movs	r3, #0
 8003c3a:	f383 8811 	msr	BASEPRI, r3
 8003c3e:	bd08      	pop	{r3, pc}
 8003c40:	20000cd0 	.word	0x20000cd0
	...

08003c50 <test_wait_tick>:
 8003c50:	b508      	push	{r3, lr}
 8003c52:	2001      	movs	r0, #1
 8003c54:	f7ff ff1c 	bl	8003a90 <chThdSleep>
 8003c58:	2320      	movs	r3, #32
 8003c5a:	f383 8811 	msr	BASEPRI, r3
 8003c5e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003c62:	2300      	movs	r3, #0
 8003c64:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8003c66:	f383 8811 	msr	BASEPRI, r3
 8003c6a:	b280      	uxth	r0, r0
 8003c6c:	bd08      	pop	{r3, pc}
 8003c6e:	bf00      	nop

08003c70 <bmk10_execute>:
 8003c70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c74:	2400      	movs	r4, #0
 8003c76:	f7ff ffeb 	bl	8003c50 <test_wait_tick>
 8003c7a:	46a2      	mov	sl, r4
 8003c7c:	f7fd fbb0 	bl	80013e0 <test_start_timer.constprop.3>
 8003c80:	f04f 0920 	mov.w	r9, #32
 8003c84:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8003cf0 <bmk10_execute+0x80>
 8003c88:	4f14      	ldr	r7, [pc, #80]	; (8003cdc <bmk10_execute+0x6c>)
 8003c8a:	4e15      	ldr	r6, [pc, #84]	; (8003ce0 <bmk10_execute+0x70>)
 8003c8c:	4d15      	ldr	r5, [pc, #84]	; (8003ce4 <bmk10_execute+0x74>)
 8003c8e:	f389 8811 	msr	BASEPRI, r9
 8003c92:	2300      	movs	r3, #0
 8003c94:	463a      	mov	r2, r7
 8003c96:	4630      	mov	r0, r6
 8003c98:	2101      	movs	r1, #1
 8003c9a:	f7fd fb61 	bl	8001360 <chVTDoSetI>
 8003c9e:	463a      	mov	r2, r7
 8003ca0:	2300      	movs	r3, #0
 8003ca2:	f242 7110 	movw	r1, #10000	; 0x2710
 8003ca6:	4628      	mov	r0, r5
 8003ca8:	f7fd fb5a 	bl	8001360 <chVTDoSetI>
 8003cac:	4630      	mov	r0, r6
 8003cae:	f7fd fb17 	bl	80012e0 <chVTDoResetI>
 8003cb2:	4628      	mov	r0, r5
 8003cb4:	f7fd fb14 	bl	80012e0 <chVTDoResetI>
 8003cb8:	f38a 8811 	msr	BASEPRI, sl
 8003cbc:	f898 3000 	ldrb.w	r3, [r8]
 8003cc0:	3401      	adds	r4, #1
 8003cc2:	2b00      	cmp	r3, #0
 8003cc4:	d0e3      	beq.n	8003c8e <bmk10_execute+0x1e>
 8003cc6:	4808      	ldr	r0, [pc, #32]	; (8003ce8 <bmk10_execute+0x78>)
 8003cc8:	f7fc fdba 	bl	8000840 <test_print>
 8003ccc:	0060      	lsls	r0, r4, #1
 8003cce:	f7fc fcbf 	bl	8000650 <test_printn>
 8003cd2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003cd6:	4805      	ldr	r0, [pc, #20]	; (8003cec <bmk10_execute+0x7c>)
 8003cd8:	f7fc bd92 	b.w	8000800 <test_println>
 8003cdc:	08000351 	.word	0x08000351
 8003ce0:	20001e80 	.word	0x20001e80
 8003ce4:	20001e94 	.word	0x20001e94
 8003ce8:	08007600 	.word	0x08007600
 8003cec:	08007610 	.word	0x08007610
 8003cf0:	20001e40 	.word	0x20001e40
	...

08003d00 <bmk9_execute>:
 8003d00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d02:	2300      	movs	r3, #0
 8003d04:	461d      	mov	r5, r3
 8003d06:	4a25      	ldr	r2, [pc, #148]	; (8003d9c <bmk9_execute+0x9c>)
 8003d08:	4c25      	ldr	r4, [pc, #148]	; (8003da0 <bmk9_execute+0xa0>)
 8003d0a:	f102 0110 	add.w	r1, r2, #16
 8003d0e:	6121      	str	r1, [r4, #16]
 8003d10:	60e2      	str	r2, [r4, #12]
 8003d12:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8003d16:	60a3      	str	r3, [r4, #8]
 8003d18:	e9c4 3307 	strd	r3, r3, [r4, #28]
 8003d1c:	e9c4 4400 	strd	r4, r4, [r4]
 8003d20:	462f      	mov	r7, r5
 8003d22:	f7ff ff95 	bl	8003c50 <test_wait_tick>
 8003d26:	f7fd fb5b 	bl	80013e0 <test_start_timer.constprop.3>
 8003d2a:	4e1e      	ldr	r6, [pc, #120]	; (8003da4 <bmk9_execute+0xa4>)
 8003d2c:	2320      	movs	r3, #32
 8003d2e:	f383 8811 	msr	BASEPRI, r3
 8003d32:	2100      	movs	r1, #0
 8003d34:	4620      	mov	r0, r4
 8003d36:	f7fd f93b 	bl	8000fb0 <chIQPutI>
 8003d3a:	4620      	mov	r0, r4
 8003d3c:	2101      	movs	r1, #1
 8003d3e:	f7fd f937 	bl	8000fb0 <chIQPutI>
 8003d42:	4620      	mov	r0, r4
 8003d44:	2102      	movs	r1, #2
 8003d46:	f7fd f933 	bl	8000fb0 <chIQPutI>
 8003d4a:	4620      	mov	r0, r4
 8003d4c:	2103      	movs	r1, #3
 8003d4e:	f7fd f92f 	bl	8000fb0 <chIQPutI>
 8003d52:	f387 8811 	msr	BASEPRI, r7
 8003d56:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003d5a:	4620      	mov	r0, r4
 8003d5c:	f7ff fe58 	bl	8003a10 <chIQGetTimeout>
 8003d60:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003d64:	4620      	mov	r0, r4
 8003d66:	f7ff fe53 	bl	8003a10 <chIQGetTimeout>
 8003d6a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003d6e:	4620      	mov	r0, r4
 8003d70:	f7ff fe4e 	bl	8003a10 <chIQGetTimeout>
 8003d74:	4620      	mov	r0, r4
 8003d76:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003d7a:	f7ff fe49 	bl	8003a10 <chIQGetTimeout>
 8003d7e:	7833      	ldrb	r3, [r6, #0]
 8003d80:	3501      	adds	r5, #1
 8003d82:	2b00      	cmp	r3, #0
 8003d84:	d0d2      	beq.n	8003d2c <bmk9_execute+0x2c>
 8003d86:	4808      	ldr	r0, [pc, #32]	; (8003da8 <bmk9_execute+0xa8>)
 8003d88:	f7fc fd5a 	bl	8000840 <test_print>
 8003d8c:	00a8      	lsls	r0, r5, #2
 8003d8e:	f7fc fc5f 	bl	8000650 <test_printn>
 8003d92:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003d96:	4805      	ldr	r0, [pc, #20]	; (8003dac <bmk9_execute+0xac>)
 8003d98:	f7fc bd32 	b.w	8000800 <test_println>
 8003d9c:	20001748 	.word	0x20001748
 8003da0:	20001758 	.word	0x20001758
 8003da4:	20001e40 	.word	0x20001e40
 8003da8:	08007600 	.word	0x08007600
 8003dac:	08007740 	.word	0x08007740

08003db0 <bmk6_execute>:
 8003db0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003db4:	2400      	movs	r4, #0
 8003db6:	4b14      	ldr	r3, [pc, #80]	; (8003e08 <bmk6_execute+0x58>)
 8003db8:	b083      	sub	sp, #12
 8003dba:	699b      	ldr	r3, [r3, #24]
 8003dbc:	46a1      	mov	r9, r4
 8003dbe:	689d      	ldr	r5, [r3, #8]
 8003dc0:	f7ff ff46 	bl	8003c50 <test_wait_tick>
 8003dc4:	f7fd fb0c 	bl	80013e0 <test_start_timer.constprop.3>
 8003dc8:	f8df 8050 	ldr.w	r8, [pc, #80]	; 8003e1c <bmk6_execute+0x6c>
 8003dcc:	4f0f      	ldr	r7, [pc, #60]	; (8003e0c <bmk6_execute+0x5c>)
 8003dce:	4e10      	ldr	r6, [pc, #64]	; (8003e10 <bmk6_execute+0x60>)
 8003dd0:	3501      	adds	r5, #1
 8003dd2:	463b      	mov	r3, r7
 8003dd4:	f8cd 9000 	str.w	r9, [sp]
 8003dd8:	462a      	mov	r2, r5
 8003dda:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003dde:	4630      	mov	r0, r6
 8003de0:	f7fe ff8e 	bl	8002d00 <chThdCreateStatic>
 8003de4:	f898 3000 	ldrb.w	r3, [r8]
 8003de8:	3401      	adds	r4, #1
 8003dea:	2b00      	cmp	r3, #0
 8003dec:	d0f1      	beq.n	8003dd2 <bmk6_execute+0x22>
 8003dee:	4809      	ldr	r0, [pc, #36]	; (8003e14 <bmk6_execute+0x64>)
 8003df0:	f7fc fd26 	bl	8000840 <test_print>
 8003df4:	4620      	mov	r0, r4
 8003df6:	f7fc fc2b 	bl	8000650 <test_printn>
 8003dfa:	4807      	ldr	r0, [pc, #28]	; (8003e18 <bmk6_execute+0x68>)
 8003dfc:	b003      	add	sp, #12
 8003dfe:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003e02:	f7fc bcfd 	b.w	8000800 <test_println>
 8003e06:	bf00      	nop
 8003e08:	20001558 	.word	0x20001558
 8003e0c:	080072d1 	.word	0x080072d1
 8003e10:	200017b0 	.word	0x200017b0
 8003e14:	08007600 	.word	0x08007600
 8003e18:	08007700 	.word	0x08007700
 8003e1c:	20001e40 	.word	0x20001e40

08003e20 <thd4_execute>:
 8003e20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003e22:	f7ff ff15 	bl	8003c50 <test_wait_tick>
 8003e26:	2620      	movs	r6, #32
 8003e28:	f386 8811 	msr	BASEPRI, r6
 8003e2c:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8003e30:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8003e32:	2300      	movs	r3, #0
 8003e34:	b2a4      	uxth	r4, r4
 8003e36:	f383 8811 	msr	BASEPRI, r3
 8003e3a:	20c8      	movs	r0, #200	; 0xc8
 8003e3c:	f7ff fe28 	bl	8003a90 <chThdSleep>
 8003e40:	f104 02cb 	add.w	r2, r4, #203	; 0xcb
 8003e44:	f104 01c8 	add.w	r1, r4, #200	; 0xc8
 8003e48:	b292      	uxth	r2, r2
 8003e4a:	b289      	uxth	r1, r1
 8003e4c:	2001      	movs	r0, #1
 8003e4e:	f7fc fc3f 	bl	80006d0 <_test_assert_time_window>
 8003e52:	b100      	cbz	r0, 8003e56 <thd4_execute+0x36>
 8003e54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003e56:	f386 8811 	msr	BASEPRI, r6
 8003e5a:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8003e5c:	b2a4      	uxth	r4, r4
 8003e5e:	f380 8811 	msr	BASEPRI, r0
 8003e62:	20c8      	movs	r0, #200	; 0xc8
 8003e64:	f7ff fe14 	bl	8003a90 <chThdSleep>
 8003e68:	f104 02cb 	add.w	r2, r4, #203	; 0xcb
 8003e6c:	f104 01c8 	add.w	r1, r4, #200	; 0xc8
 8003e70:	b292      	uxth	r2, r2
 8003e72:	b289      	uxth	r1, r1
 8003e74:	2002      	movs	r0, #2
 8003e76:	f7fc fc2b 	bl	80006d0 <_test_assert_time_window>
 8003e7a:	2800      	cmp	r0, #0
 8003e7c:	d1ea      	bne.n	8003e54 <thd4_execute+0x34>
 8003e7e:	f386 8811 	msr	BASEPRI, r6
 8003e82:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8003e84:	b2a4      	uxth	r4, r4
 8003e86:	f380 8811 	msr	BASEPRI, r0
 8003e8a:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8003e8e:	f7ff fdff 	bl	8003a90 <chThdSleep>
 8003e92:	f204 72d3 	addw	r2, r4, #2003	; 0x7d3
 8003e96:	f504 61fa 	add.w	r1, r4, #2000	; 0x7d0
 8003e9a:	b292      	uxth	r2, r2
 8003e9c:	b289      	uxth	r1, r1
 8003e9e:	2003      	movs	r0, #3
 8003ea0:	f7fc fc16 	bl	80006d0 <_test_assert_time_window>
 8003ea4:	2800      	cmp	r0, #0
 8003ea6:	d1d5      	bne.n	8003e54 <thd4_execute+0x34>
 8003ea8:	f386 8811 	msr	BASEPRI, r6
 8003eac:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8003eae:	b2a4      	uxth	r4, r4
 8003eb0:	f380 8811 	msr	BASEPRI, r0
 8003eb4:	f104 07c8 	add.w	r7, r4, #200	; 0xc8
 8003eb8:	b2bf      	uxth	r7, r7
 8003eba:	f386 8811 	msr	BASEPRI, r6
 8003ebe:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8003ec0:	1a79      	subs	r1, r7, r1
 8003ec2:	b289      	uxth	r1, r1
 8003ec4:	b111      	cbz	r1, 8003ecc <thd4_execute+0xac>
 8003ec6:	2008      	movs	r0, #8
 8003ec8:	f7ff f83a 	bl	8002f40 <chSchGoSleepTimeoutS>
 8003ecc:	2300      	movs	r3, #0
 8003ece:	f383 8811 	msr	BASEPRI, r3
 8003ed2:	f104 02cb 	add.w	r2, r4, #203	; 0xcb
 8003ed6:	4639      	mov	r1, r7
 8003ed8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003edc:	b292      	uxth	r2, r2
 8003ede:	2004      	movs	r0, #4
 8003ee0:	f7fc bbf6 	b.w	80006d0 <_test_assert_time_window>
	...

08003ef0 <chMsgWait>:
 8003ef0:	b538      	push	{r3, r4, r5, lr}
 8003ef2:	2320      	movs	r3, #32
 8003ef4:	f383 8811 	msr	BASEPRI, r3
 8003ef8:	4c0b      	ldr	r4, [pc, #44]	; (8003f28 <chMsgWait+0x38>)
 8003efa:	69a2      	ldr	r2, [r4, #24]
 8003efc:	4613      	mov	r3, r2
 8003efe:	f853 0f28 	ldr.w	r0, [r3, #40]!
 8003f02:	4298      	cmp	r0, r3
 8003f04:	d008      	beq.n	8003f18 <chMsgWait+0x28>
 8003f06:	250d      	movs	r5, #13
 8003f08:	6801      	ldr	r1, [r0, #0]
 8003f0a:	2400      	movs	r4, #0
 8003f0c:	6291      	str	r1, [r2, #40]	; 0x28
 8003f0e:	604b      	str	r3, [r1, #4]
 8003f10:	7705      	strb	r5, [r0, #28]
 8003f12:	f384 8811 	msr	BASEPRI, r4
 8003f16:	bd38      	pop	{r3, r4, r5, pc}
 8003f18:	200e      	movs	r0, #14
 8003f1a:	f7fe ff29 	bl	8002d70 <chSchGoSleepS>
 8003f1e:	69a2      	ldr	r2, [r4, #24]
 8003f20:	6a90      	ldr	r0, [r2, #40]	; 0x28
 8003f22:	f102 0328 	add.w	r3, r2, #40	; 0x28
 8003f26:	e7ee      	b.n	8003f06 <chMsgWait+0x16>
 8003f28:	20001558 	.word	0x20001558
 8003f2c:	00000000 	.word	0x00000000

08003f30 <thread2.lto_priv.86>:
 8003f30:	b570      	push	{r4, r5, r6, lr}
 8003f32:	2620      	movs	r6, #32
 8003f34:	2500      	movs	r5, #0
 8003f36:	f7ff ffdb 	bl	8003ef0 <chMsgWait>
 8003f3a:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8003f3c:	f386 8811 	msr	BASEPRI, r6
 8003f40:	4621      	mov	r1, r4
 8003f42:	f7fe fdfd 	bl	8002b40 <chSchWakeupS>
 8003f46:	f385 8811 	msr	BASEPRI, r5
 8003f4a:	2c00      	cmp	r4, #0
 8003f4c:	d1f3      	bne.n	8003f36 <thread2.lto_priv.86+0x6>
 8003f4e:	bd70      	pop	{r4, r5, r6, pc}

08003f50 <msg1_execute>:
 8003f50:	b570      	push	{r4, r5, r6, lr}
 8003f52:	4a1f      	ldr	r2, [pc, #124]	; (8003fd0 <msg1_execute+0x80>)
 8003f54:	b082      	sub	sp, #8
 8003f56:	6994      	ldr	r4, [r2, #24]
 8003f58:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003f5c:	68a2      	ldr	r2, [r4, #8]
 8003f5e:	4b1d      	ldr	r3, [pc, #116]	; (8003fd4 <msg1_execute+0x84>)
 8003f60:	3201      	adds	r2, #1
 8003f62:	9400      	str	r4, [sp, #0]
 8003f64:	481c      	ldr	r0, [pc, #112]	; (8003fd8 <msg1_execute+0x88>)
 8003f66:	f7fe fecb 	bl	8002d00 <chThdCreateStatic>
 8003f6a:	4b1c      	ldr	r3, [pc, #112]	; (8003fdc <msg1_execute+0x8c>)
 8003f6c:	2520      	movs	r5, #32
 8003f6e:	6018      	str	r0, [r3, #0]
 8003f70:	f7ff ffbe 	bl	8003ef0 <chMsgWait>
 8003f74:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8003f76:	f385 8811 	msr	BASEPRI, r5
 8003f7a:	4631      	mov	r1, r6
 8003f7c:	f7fe fde0 	bl	8002b40 <chSchWakeupS>
 8003f80:	2400      	movs	r4, #0
 8003f82:	f384 8811 	msr	BASEPRI, r4
 8003f86:	b2f0      	uxtb	r0, r6
 8003f88:	f7fc fc02 	bl	8000790 <test_emit_token>
 8003f8c:	f7ff ffb0 	bl	8003ef0 <chMsgWait>
 8003f90:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8003f92:	f385 8811 	msr	BASEPRI, r5
 8003f96:	4631      	mov	r1, r6
 8003f98:	f7fe fdd2 	bl	8002b40 <chSchWakeupS>
 8003f9c:	f384 8811 	msr	BASEPRI, r4
 8003fa0:	b2f0      	uxtb	r0, r6
 8003fa2:	f7fc fbf5 	bl	8000790 <test_emit_token>
 8003fa6:	f7ff ffa3 	bl	8003ef0 <chMsgWait>
 8003faa:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8003fac:	f385 8811 	msr	BASEPRI, r5
 8003fb0:	4631      	mov	r1, r6
 8003fb2:	f7fe fdc5 	bl	8002b40 <chSchWakeupS>
 8003fb6:	f384 8811 	msr	BASEPRI, r4
 8003fba:	b2f0      	uxtb	r0, r6
 8003fbc:	f7fc fbe8 	bl	8000790 <test_emit_token>
 8003fc0:	2001      	movs	r0, #1
 8003fc2:	4907      	ldr	r1, [pc, #28]	; (8003fe0 <msg1_execute+0x90>)
 8003fc4:	b002      	add	sp, #8
 8003fc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003fca:	f7fc bba1 	b.w	8000710 <_test_assert_sequence>
 8003fce:	bf00      	nop
 8003fd0:	20001558 	.word	0x20001558
 8003fd4:	08004061 	.word	0x08004061
 8003fd8:	200017b0 	.word	0x200017b0
 8003fdc:	20001e44 	.word	0x20001e44
 8003fe0:	08007b50 	.word	0x08007b50
	...

08003ff0 <chMsgSend>:
 8003ff0:	4b0e      	ldr	r3, [pc, #56]	; (800402c <chMsgSend+0x3c>)
 8003ff2:	b510      	push	{r4, lr}
 8003ff4:	2220      	movs	r2, #32
 8003ff6:	699c      	ldr	r4, [r3, #24]
 8003ff8:	f382 8811 	msr	BASEPRI, r2
 8003ffc:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8004000:	6222      	str	r2, [r4, #32]
 8004002:	6022      	str	r2, [r4, #0]
 8004004:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8004006:	6321      	str	r1, [r4, #48]	; 0x30
 8004008:	6062      	str	r2, [r4, #4]
 800400a:	6014      	str	r4, [r2, #0]
 800400c:	7f02      	ldrb	r2, [r0, #28]
 800400e:	62c4      	str	r4, [r0, #44]	; 0x2c
 8004010:	2a0e      	cmp	r2, #14
 8004012:	d007      	beq.n	8004024 <chMsgSend+0x34>
 8004014:	200c      	movs	r0, #12
 8004016:	f7fe feab 	bl	8002d70 <chSchGoSleepS>
 800401a:	6a20      	ldr	r0, [r4, #32]
 800401c:	2300      	movs	r3, #0
 800401e:	f383 8811 	msr	BASEPRI, r3
 8004022:	bd10      	pop	{r4, pc}
 8004024:	f7fc ff94 	bl	8000f50 <chSchReadyI>
 8004028:	e7f4      	b.n	8004014 <chMsgSend+0x24>
 800402a:	bf00      	nop
 800402c:	20001558 	.word	0x20001558

08004030 <msg_loop_test>:
 8004030:	b570      	push	{r4, r5, r6, lr}
 8004032:	4605      	mov	r5, r0
 8004034:	2400      	movs	r4, #0
 8004036:	f7ff fe0b 	bl	8003c50 <test_wait_tick>
 800403a:	f7fd f9d1 	bl	80013e0 <test_start_timer.constprop.3>
 800403e:	4e07      	ldr	r6, [pc, #28]	; (800405c <msg_loop_test+0x2c>)
 8004040:	2101      	movs	r1, #1
 8004042:	4628      	mov	r0, r5
 8004044:	f7ff ffd4 	bl	8003ff0 <chMsgSend>
 8004048:	7833      	ldrb	r3, [r6, #0]
 800404a:	3401      	adds	r4, #1
 800404c:	2b00      	cmp	r3, #0
 800404e:	d0f7      	beq.n	8004040 <msg_loop_test+0x10>
 8004050:	4628      	mov	r0, r5
 8004052:	2100      	movs	r1, #0
 8004054:	f7ff ffcc 	bl	8003ff0 <chMsgSend>
 8004058:	4620      	mov	r0, r4
 800405a:	bd70      	pop	{r4, r5, r6, pc}
 800405c:	20001e40 	.word	0x20001e40

08004060 <thread.lto_priv.68>:
 8004060:	b510      	push	{r4, lr}
 8004062:	4604      	mov	r4, r0
 8004064:	2141      	movs	r1, #65	; 0x41
 8004066:	f7ff ffc3 	bl	8003ff0 <chMsgSend>
 800406a:	4620      	mov	r0, r4
 800406c:	2142      	movs	r1, #66	; 0x42
 800406e:	f7ff ffbf 	bl	8003ff0 <chMsgSend>
 8004072:	4620      	mov	r0, r4
 8004074:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004078:	2143      	movs	r1, #67	; 0x43
 800407a:	f7ff bfb9 	b.w	8003ff0 <chMsgSend>
 800407e:	bf00      	nop

08004080 <chMtxLockS>:
 8004080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004082:	4a37      	ldr	r2, [pc, #220]	; (8004160 <chMtxLockS+0xe0>)
 8004084:	6883      	ldr	r3, [r0, #8]
 8004086:	6995      	ldr	r5, [r2, #24]
 8004088:	2b00      	cmp	r3, #0
 800408a:	d03f      	beq.n	800410c <chMtxLockS+0x8c>
 800408c:	68a9      	ldr	r1, [r5, #8]
 800408e:	689a      	ldr	r2, [r3, #8]
 8004090:	4604      	mov	r4, r0
 8004092:	4291      	cmp	r1, r2
 8004094:	d906      	bls.n	80040a4 <chMtxLockS+0x24>
 8004096:	7f1a      	ldrb	r2, [r3, #28]
 8004098:	6099      	str	r1, [r3, #8]
 800409a:	2a06      	cmp	r2, #6
 800409c:	d03b      	beq.n	8004116 <chMtxLockS+0x96>
 800409e:	2a07      	cmp	r2, #7
 80040a0:	d015      	beq.n	80040ce <chMtxLockS+0x4e>
 80040a2:	b342      	cbz	r2, 80040f6 <chMtxLockS+0x76>
 80040a4:	4626      	mov	r6, r4
 80040a6:	4623      	mov	r3, r4
 80040a8:	e003      	b.n	80040b2 <chMtxLockS+0x32>
 80040aa:	6899      	ldr	r1, [r3, #8]
 80040ac:	68aa      	ldr	r2, [r5, #8]
 80040ae:	4291      	cmp	r1, r2
 80040b0:	d32a      	bcc.n	8004108 <chMtxLockS+0x88>
 80040b2:	681b      	ldr	r3, [r3, #0]
 80040b4:	429c      	cmp	r4, r3
 80040b6:	d1f8      	bne.n	80040aa <chMtxLockS+0x2a>
 80040b8:	6873      	ldr	r3, [r6, #4]
 80040ba:	2006      	movs	r0, #6
 80040bc:	e9c5 6300 	strd	r6, r3, [r5]
 80040c0:	601d      	str	r5, [r3, #0]
 80040c2:	6075      	str	r5, [r6, #4]
 80040c4:	622c      	str	r4, [r5, #32]
 80040c6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80040ca:	f7fe be51 	b.w	8002d70 <chSchGoSleepS>
 80040ce:	681f      	ldr	r7, [r3, #0]
 80040d0:	6858      	ldr	r0, [r3, #4]
 80040d2:	6a1e      	ldr	r6, [r3, #32]
 80040d4:	6007      	str	r7, [r0, #0]
 80040d6:	681f      	ldr	r7, [r3, #0]
 80040d8:	4632      	mov	r2, r6
 80040da:	6078      	str	r0, [r7, #4]
 80040dc:	e002      	b.n	80040e4 <chMtxLockS+0x64>
 80040de:	6890      	ldr	r0, [r2, #8]
 80040e0:	4288      	cmp	r0, r1
 80040e2:	d334      	bcc.n	800414e <chMtxLockS+0xce>
 80040e4:	6812      	ldr	r2, [r2, #0]
 80040e6:	4296      	cmp	r6, r2
 80040e8:	d1f9      	bne.n	80040de <chMtxLockS+0x5e>
 80040ea:	6872      	ldr	r2, [r6, #4]
 80040ec:	e9c3 6200 	strd	r6, r2, [r3]
 80040f0:	6013      	str	r3, [r2, #0]
 80040f2:	6073      	str	r3, [r6, #4]
 80040f4:	e7d6      	b.n	80040a4 <chMtxLockS+0x24>
 80040f6:	e9d3 1200 	ldrd	r1, r2, [r3]
 80040fa:	6011      	str	r1, [r2, #0]
 80040fc:	4618      	mov	r0, r3
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	605a      	str	r2, [r3, #4]
 8004102:	f7fc ff25 	bl	8000f50 <chSchReadyI>
 8004106:	e7cd      	b.n	80040a4 <chMtxLockS+0x24>
 8004108:	461e      	mov	r6, r3
 800410a:	e7d5      	b.n	80040b8 <chMtxLockS+0x38>
 800410c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800410e:	e9c0 5302 	strd	r5, r3, [r0, #8]
 8004112:	63a8      	str	r0, [r5, #56]	; 0x38
 8004114:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004116:	681f      	ldr	r7, [r3, #0]
 8004118:	6858      	ldr	r0, [r3, #4]
 800411a:	6a1e      	ldr	r6, [r3, #32]
 800411c:	6007      	str	r7, [r0, #0]
 800411e:	681f      	ldr	r7, [r3, #0]
 8004120:	46b4      	mov	ip, r6
 8004122:	4632      	mov	r2, r6
 8004124:	6078      	str	r0, [r7, #4]
 8004126:	e002      	b.n	800412e <chMtxLockS+0xae>
 8004128:	6890      	ldr	r0, [r2, #8]
 800412a:	4288      	cmp	r0, r1
 800412c:	d316      	bcc.n	800415c <chMtxLockS+0xdc>
 800412e:	6812      	ldr	r2, [r2, #0]
 8004130:	4296      	cmp	r6, r2
 8004132:	d1f9      	bne.n	8004128 <chMtxLockS+0xa8>
 8004134:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8004138:	68a9      	ldr	r1, [r5, #8]
 800413a:	e9c3 c200 	strd	ip, r2, [r3]
 800413e:	6013      	str	r3, [r2, #0]
 8004140:	f8cc 3004 	str.w	r3, [ip, #4]
 8004144:	68b3      	ldr	r3, [r6, #8]
 8004146:	689a      	ldr	r2, [r3, #8]
 8004148:	428a      	cmp	r2, r1
 800414a:	d3a4      	bcc.n	8004096 <chMtxLockS+0x16>
 800414c:	e7aa      	b.n	80040a4 <chMtxLockS+0x24>
 800414e:	4616      	mov	r6, r2
 8004150:	6872      	ldr	r2, [r6, #4]
 8004152:	e9c3 6200 	strd	r6, r2, [r3]
 8004156:	6013      	str	r3, [r2, #0]
 8004158:	6073      	str	r3, [r6, #4]
 800415a:	e7a3      	b.n	80040a4 <chMtxLockS+0x24>
 800415c:	4694      	mov	ip, r2
 800415e:	e7e9      	b.n	8004134 <chMtxLockS+0xb4>
 8004160:	20001558 	.word	0x20001558
	...

08004170 <chMtxLock>:
 8004170:	b508      	push	{r3, lr}
 8004172:	2320      	movs	r3, #32
 8004174:	f383 8811 	msr	BASEPRI, r3
 8004178:	f7ff ff82 	bl	8004080 <chMtxLockS>
 800417c:	2300      	movs	r3, #0
 800417e:	f383 8811 	msr	BASEPRI, r3
 8004182:	bd08      	pop	{r3, pc}
	...

08004190 <bmk12_execute>:
 8004190:	b570      	push	{r4, r5, r6, lr}
 8004192:	f7ff fd5d 	bl	8003c50 <test_wait_tick>
 8004196:	2500      	movs	r5, #0
 8004198:	f7fd f922 	bl	80013e0 <test_start_timer.constprop.3>
 800419c:	4e14      	ldr	r6, [pc, #80]	; (80041f0 <bmk12_execute+0x60>)
 800419e:	4c15      	ldr	r4, [pc, #84]	; (80041f4 <bmk12_execute+0x64>)
 80041a0:	4620      	mov	r0, r4
 80041a2:	f7ff ffe5 	bl	8004170 <chMtxLock>
 80041a6:	4620      	mov	r0, r4
 80041a8:	f7fe fd5a 	bl	8002c60 <chMtxUnlock>
 80041ac:	4620      	mov	r0, r4
 80041ae:	f7ff ffdf 	bl	8004170 <chMtxLock>
 80041b2:	4620      	mov	r0, r4
 80041b4:	f7fe fd54 	bl	8002c60 <chMtxUnlock>
 80041b8:	4620      	mov	r0, r4
 80041ba:	f7ff ffd9 	bl	8004170 <chMtxLock>
 80041be:	4620      	mov	r0, r4
 80041c0:	f7fe fd4e 	bl	8002c60 <chMtxUnlock>
 80041c4:	4620      	mov	r0, r4
 80041c6:	f7ff ffd3 	bl	8004170 <chMtxLock>
 80041ca:	4620      	mov	r0, r4
 80041cc:	f7fe fd48 	bl	8002c60 <chMtxUnlock>
 80041d0:	7833      	ldrb	r3, [r6, #0]
 80041d2:	3501      	adds	r5, #1
 80041d4:	2b00      	cmp	r3, #0
 80041d6:	d0e3      	beq.n	80041a0 <bmk12_execute+0x10>
 80041d8:	4807      	ldr	r0, [pc, #28]	; (80041f8 <bmk12_execute+0x68>)
 80041da:	f7fc fb31 	bl	8000840 <test_print>
 80041de:	00a8      	lsls	r0, r5, #2
 80041e0:	f7fc fa36 	bl	8000650 <test_printn>
 80041e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80041e8:	4804      	ldr	r0, [pc, #16]	; (80041fc <bmk12_execute+0x6c>)
 80041ea:	f7fc bb09 	b.w	8000800 <test_println>
 80041ee:	bf00      	nop
 80041f0:	20001e40 	.word	0x20001e40
 80041f4:	2000178c 	.word	0x2000178c
 80041f8:	08007600 	.word	0x08007600
 80041fc:	08007630 	.word	0x08007630

08004200 <thread11>:
 8004200:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004202:	4607      	mov	r7, r0
 8004204:	481c      	ldr	r0, [pc, #112]	; (8004278 <thread11+0x78>)
 8004206:	f7ff ffb3 	bl	8004170 <chMtxLock>
 800420a:	481c      	ldr	r0, [pc, #112]	; (800427c <thread11+0x7c>)
 800420c:	f7ff ffb0 	bl	8004170 <chMtxLock>
 8004210:	2320      	movs	r3, #32
 8004212:	f383 8811 	msr	BASEPRI, r3
 8004216:	4d1a      	ldr	r5, [pc, #104]	; (8004280 <thread11+0x80>)
 8004218:	69ab      	ldr	r3, [r5, #24]
 800421a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800421c:	4630      	mov	r0, r6
 800421e:	f7fc ff8f 	bl	8001140 <chMtxUnlockS>
 8004222:	4a18      	ldr	r2, [pc, #96]	; (8004284 <thread11+0x84>)
 8004224:	69ac      	ldr	r4, [r5, #24]
 8004226:	4610      	mov	r0, r2
 8004228:	4613      	mov	r3, r2
 800422a:	6222      	str	r2, [r4, #32]
 800422c:	e003      	b.n	8004236 <thread11+0x36>
 800422e:	6899      	ldr	r1, [r3, #8]
 8004230:	68a2      	ldr	r2, [r4, #8]
 8004232:	4291      	cmp	r1, r2
 8004234:	d302      	bcc.n	800423c <thread11+0x3c>
 8004236:	681b      	ldr	r3, [r3, #0]
 8004238:	4283      	cmp	r3, r0
 800423a:	d1f8      	bne.n	800422e <thread11+0x2e>
 800423c:	685a      	ldr	r2, [r3, #4]
 800423e:	2007      	movs	r0, #7
 8004240:	e9c4 3200 	strd	r3, r2, [r4]
 8004244:	6014      	str	r4, [r2, #0]
 8004246:	605c      	str	r4, [r3, #4]
 8004248:	f7fe fd92 	bl	8002d70 <chSchGoSleepS>
 800424c:	69ab      	ldr	r3, [r5, #24]
 800424e:	6a1b      	ldr	r3, [r3, #32]
 8004250:	3301      	adds	r3, #1
 8004252:	d002      	beq.n	800425a <thread11+0x5a>
 8004254:	4630      	mov	r0, r6
 8004256:	f7ff ff13 	bl	8004080 <chMtxLockS>
 800425a:	2300      	movs	r3, #0
 800425c:	f383 8811 	msr	BASEPRI, r3
 8004260:	7838      	ldrb	r0, [r7, #0]
 8004262:	f7fc fa95 	bl	8000790 <test_emit_token>
 8004266:	4805      	ldr	r0, [pc, #20]	; (800427c <thread11+0x7c>)
 8004268:	f7fe fcfa 	bl	8002c60 <chMtxUnlock>
 800426c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004270:	4801      	ldr	r0, [pc, #4]	; (8004278 <thread11+0x78>)
 8004272:	f7fe bcf5 	b.w	8002c60 <chMtxUnlock>
 8004276:	bf00      	nop
 8004278:	20000c68 	.word	0x20000c68
 800427c:	20000c58 	.word	0x20000c58
 8004280:	20001558 	.word	0x20001558
 8004284:	20000c04 	.word	0x20000c04
	...

08004290 <thread10>:
 8004290:	b570      	push	{r4, r5, r6, lr}
 8004292:	4606      	mov	r6, r0
 8004294:	4816      	ldr	r0, [pc, #88]	; (80042f0 <thread10+0x60>)
 8004296:	f7ff ff6b 	bl	8004170 <chMtxLock>
 800429a:	2320      	movs	r3, #32
 800429c:	f383 8811 	msr	BASEPRI, r3
 80042a0:	4b14      	ldr	r3, [pc, #80]	; (80042f4 <thread10+0x64>)
 80042a2:	699c      	ldr	r4, [r3, #24]
 80042a4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 80042a6:	4628      	mov	r0, r5
 80042a8:	f7fc ff4a 	bl	8001140 <chMtxUnlockS>
 80042ac:	4a12      	ldr	r2, [pc, #72]	; (80042f8 <thread10+0x68>)
 80042ae:	4610      	mov	r0, r2
 80042b0:	4613      	mov	r3, r2
 80042b2:	6222      	str	r2, [r4, #32]
 80042b4:	e003      	b.n	80042be <thread10+0x2e>
 80042b6:	6899      	ldr	r1, [r3, #8]
 80042b8:	68a2      	ldr	r2, [r4, #8]
 80042ba:	4291      	cmp	r1, r2
 80042bc:	d302      	bcc.n	80042c4 <thread10+0x34>
 80042be:	681b      	ldr	r3, [r3, #0]
 80042c0:	4283      	cmp	r3, r0
 80042c2:	d1f8      	bne.n	80042b6 <thread10+0x26>
 80042c4:	685a      	ldr	r2, [r3, #4]
 80042c6:	2007      	movs	r0, #7
 80042c8:	e9c4 3200 	strd	r3, r2, [r4]
 80042cc:	6014      	str	r4, [r2, #0]
 80042ce:	605c      	str	r4, [r3, #4]
 80042d0:	f7fe fd4e 	bl	8002d70 <chSchGoSleepS>
 80042d4:	4628      	mov	r0, r5
 80042d6:	f7ff fed3 	bl	8004080 <chMtxLockS>
 80042da:	2300      	movs	r3, #0
 80042dc:	f383 8811 	msr	BASEPRI, r3
 80042e0:	7830      	ldrb	r0, [r6, #0]
 80042e2:	f7fc fa55 	bl	8000790 <test_emit_token>
 80042e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80042ea:	4801      	ldr	r0, [pc, #4]	; (80042f0 <thread10+0x60>)
 80042ec:	f7fe bcb8 	b.w	8002c60 <chMtxUnlock>
 80042f0:	20000c58 	.word	0x20000c58
 80042f4:	20001558 	.word	0x20001558
 80042f8:	20000c04 	.word	0x20000c04
 80042fc:	00000000 	.word	0x00000000

08004300 <thread12>:
 8004300:	b538      	push	{r3, r4, r5, lr}
 8004302:	4605      	mov	r5, r0
 8004304:	4c05      	ldr	r4, [pc, #20]	; (800431c <thread12+0x1c>)
 8004306:	4620      	mov	r0, r4
 8004308:	f7ff ff32 	bl	8004170 <chMtxLock>
 800430c:	7828      	ldrb	r0, [r5, #0]
 800430e:	f7fc fa3f 	bl	8000790 <test_emit_token>
 8004312:	4620      	mov	r0, r4
 8004314:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004318:	f7fe bca2 	b.w	8002c60 <chMtxUnlock>
 800431c:	20000c68 	.word	0x20000c68

08004320 <mtx5_execute>:
 8004320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004322:	4d37      	ldr	r5, [pc, #220]	; (8004400 <mtx5_execute+0xe0>)
 8004324:	2320      	movs	r3, #32
 8004326:	69aa      	ldr	r2, [r5, #24]
 8004328:	6896      	ldr	r6, [r2, #8]
 800432a:	f383 8811 	msr	BASEPRI, r3
 800432e:	4c35      	ldr	r4, [pc, #212]	; (8004404 <mtx5_execute+0xe4>)
 8004330:	68a3      	ldr	r3, [r4, #8]
 8004332:	2b00      	cmp	r3, #0
 8004334:	d057      	beq.n	80043e6 <mtx5_execute+0xc6>
 8004336:	2100      	movs	r1, #0
 8004338:	2300      	movs	r3, #0
 800433a:	f383 8811 	msr	BASEPRI, r3
 800433e:	2001      	movs	r0, #1
 8004340:	f7fc fa0e 	bl	8000760 <_test_assert>
 8004344:	4601      	mov	r1, r0
 8004346:	b100      	cbz	r0, 800434a <mtx5_execute+0x2a>
 8004348:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800434a:	2320      	movs	r3, #32
 800434c:	f383 8811 	msr	BASEPRI, r3
 8004350:	68a3      	ldr	r3, [r4, #8]
 8004352:	2b00      	cmp	r3, #0
 8004354:	d04e      	beq.n	80043f4 <mtx5_execute+0xd4>
 8004356:	2101      	movs	r1, #1
 8004358:	2300      	movs	r3, #0
 800435a:	f383 8811 	msr	BASEPRI, r3
 800435e:	2002      	movs	r0, #2
 8004360:	f7fc f9fe 	bl	8000760 <_test_assert>
 8004364:	4607      	mov	r7, r0
 8004366:	2800      	cmp	r0, #0
 8004368:	d1ee      	bne.n	8004348 <mtx5_execute+0x28>
 800436a:	2320      	movs	r3, #32
 800436c:	f383 8811 	msr	BASEPRI, r3
 8004370:	4824      	ldr	r0, [pc, #144]	; (8004404 <mtx5_execute+0xe4>)
 8004372:	f7fc fee5 	bl	8001140 <chMtxUnlockS>
 8004376:	f387 8811 	msr	BASEPRI, r7
 800437a:	6821      	ldr	r1, [r4, #0]
 800437c:	2003      	movs	r0, #3
 800437e:	1b09      	subs	r1, r1, r4
 8004380:	fab1 f181 	clz	r1, r1
 8004384:	0949      	lsrs	r1, r1, #5
 8004386:	f7fc f9eb 	bl	8000760 <_test_assert>
 800438a:	2800      	cmp	r0, #0
 800438c:	d1dc      	bne.n	8004348 <mtx5_execute+0x28>
 800438e:	68a1      	ldr	r1, [r4, #8]
 8004390:	2004      	movs	r0, #4
 8004392:	fab1 f181 	clz	r1, r1
 8004396:	0949      	lsrs	r1, r1, #5
 8004398:	f7fc f9e2 	bl	8000760 <_test_assert>
 800439c:	2800      	cmp	r0, #0
 800439e:	d1d3      	bne.n	8004348 <mtx5_execute+0x28>
 80043a0:	69ab      	ldr	r3, [r5, #24]
 80043a2:	2005      	movs	r0, #5
 80043a4:	6899      	ldr	r1, [r3, #8]
 80043a6:	1b89      	subs	r1, r1, r6
 80043a8:	fab1 f181 	clz	r1, r1
 80043ac:	0949      	lsrs	r1, r1, #5
 80043ae:	f7fc f9d7 	bl	8000760 <_test_assert>
 80043b2:	2800      	cmp	r0, #0
 80043b4:	d1c8      	bne.n	8004348 <mtx5_execute+0x28>
 80043b6:	4813      	ldr	r0, [pc, #76]	; (8004404 <mtx5_execute+0xe4>)
 80043b8:	f7ff feda 	bl	8004170 <chMtxLock>
 80043bc:	f7fd fd28 	bl	8001e10 <chMtxUnlockAll>
 80043c0:	6821      	ldr	r1, [r4, #0]
 80043c2:	2006      	movs	r0, #6
 80043c4:	1b09      	subs	r1, r1, r4
 80043c6:	fab1 f181 	clz	r1, r1
 80043ca:	0949      	lsrs	r1, r1, #5
 80043cc:	f7fc f9c8 	bl	8000760 <_test_assert>
 80043d0:	2800      	cmp	r0, #0
 80043d2:	d1b9      	bne.n	8004348 <mtx5_execute+0x28>
 80043d4:	68a1      	ldr	r1, [r4, #8]
 80043d6:	2007      	movs	r0, #7
 80043d8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80043dc:	fab1 f181 	clz	r1, r1
 80043e0:	0949      	lsrs	r1, r1, #5
 80043e2:	f7fc b9bd 	b.w	8000760 <_test_assert>
 80043e6:	69ab      	ldr	r3, [r5, #24]
 80043e8:	2101      	movs	r1, #1
 80043ea:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80043ec:	639c      	str	r4, [r3, #56]	; 0x38
 80043ee:	e9c4 3202 	strd	r3, r2, [r4, #8]
 80043f2:	e7a1      	b.n	8004338 <mtx5_execute+0x18>
 80043f4:	69ab      	ldr	r3, [r5, #24]
 80043f6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80043f8:	639c      	str	r4, [r3, #56]	; 0x38
 80043fa:	e9c4 3202 	strd	r3, r2, [r4, #8]
 80043fe:	e7ab      	b.n	8004358 <mtx5_execute+0x38>
 8004400:	20001558 	.word	0x20001558
 8004404:	20000c58 	.word	0x20000c58
	...

08004410 <thread4a>:
 8004410:	b510      	push	{r4, lr}
 8004412:	4c06      	ldr	r4, [pc, #24]	; (800442c <thread4a+0x1c>)
 8004414:	2064      	movs	r0, #100	; 0x64
 8004416:	f7ff fb3b 	bl	8003a90 <chThdSleep>
 800441a:	4620      	mov	r0, r4
 800441c:	f7ff fea8 	bl	8004170 <chMtxLock>
 8004420:	4620      	mov	r0, r4
 8004422:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004426:	f7fe bc1b 	b.w	8002c60 <chMtxUnlock>
 800442a:	bf00      	nop
 800442c:	20000c68 	.word	0x20000c68

08004430 <thread4b>:
 8004430:	b510      	push	{r4, lr}
 8004432:	4c06      	ldr	r4, [pc, #24]	; (800444c <thread4b+0x1c>)
 8004434:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8004438:	f7ff fb2a 	bl	8003a90 <chThdSleep>
 800443c:	4620      	mov	r0, r4
 800443e:	f7ff fe97 	bl	8004170 <chMtxLock>
 8004442:	4620      	mov	r0, r4
 8004444:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004448:	f7fe bc0a 	b.w	8002c60 <chMtxUnlock>
 800444c:	20000c58 	.word	0x20000c58

08004450 <thread1.lto_priv.77>:
 8004450:	b538      	push	{r3, r4, r5, lr}
 8004452:	4605      	mov	r5, r0
 8004454:	4c05      	ldr	r4, [pc, #20]	; (800446c <thread1.lto_priv.77+0x1c>)
 8004456:	4620      	mov	r0, r4
 8004458:	f7ff fe8a 	bl	8004170 <chMtxLock>
 800445c:	7828      	ldrb	r0, [r5, #0]
 800445e:	f7fc f997 	bl	8000790 <test_emit_token>
 8004462:	4620      	mov	r0, r4
 8004464:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004468:	f7fe bbfa 	b.w	8002c60 <chMtxUnlock>
 800446c:	20000c58 	.word	0x20000c58

08004470 <chHeapStatus>:
 8004470:	b570      	push	{r4, r5, r6, lr}
 8004472:	4c11      	ldr	r4, [pc, #68]	; (80044b8 <chHeapStatus+0x48>)
 8004474:	460e      	mov	r6, r1
 8004476:	2800      	cmp	r0, #0
 8004478:	bf18      	it	ne
 800447a:	4604      	movne	r4, r0
 800447c:	f104 0510 	add.w	r5, r4, #16
 8004480:	4628      	mov	r0, r5
 8004482:	f7ff fe75 	bl	8004170 <chMtxLock>
 8004486:	68a3      	ldr	r3, [r4, #8]
 8004488:	b16b      	cbz	r3, 80044a6 <chHeapStatus+0x36>
 800448a:	2200      	movs	r2, #0
 800448c:	4614      	mov	r4, r2
 800448e:	6858      	ldr	r0, [r3, #4]
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	3401      	adds	r4, #1
 8004494:	4402      	add	r2, r0
 8004496:	2b00      	cmp	r3, #0
 8004498:	d1f9      	bne.n	800448e <chHeapStatus+0x1e>
 800449a:	4628      	mov	r0, r5
 800449c:	6032      	str	r2, [r6, #0]
 800449e:	f7fe fbdf 	bl	8002c60 <chMtxUnlock>
 80044a2:	4620      	mov	r0, r4
 80044a4:	bd70      	pop	{r4, r5, r6, pc}
 80044a6:	461a      	mov	r2, r3
 80044a8:	461c      	mov	r4, r3
 80044aa:	4628      	mov	r0, r5
 80044ac:	6032      	str	r2, [r6, #0]
 80044ae:	f7fe fbd7 	bl	8002c60 <chMtxUnlock>
 80044b2:	4620      	mov	r0, r4
 80044b4:	bd70      	pop	{r4, r5, r6, pc}
 80044b6:	bf00      	nop
 80044b8:	200016b0 	.word	0x200016b0
 80044bc:	00000000 	.word	0x00000000

080044c0 <cmd_mem>:
 80044c0:	b530      	push	{r4, r5, lr}
 80044c2:	2900      	cmp	r1, #0
 80044c4:	b083      	sub	sp, #12
 80044c6:	dd04      	ble.n	80044d2 <cmd_mem+0x12>
 80044c8:	490f      	ldr	r1, [pc, #60]	; (8004508 <cmd_mem+0x48>)
 80044ca:	f7fd f891 	bl	80015f0 <chprintf.lto_priv.72>
 80044ce:	b003      	add	sp, #12
 80044d0:	bd30      	pop	{r4, r5, pc}
 80044d2:	4604      	mov	r4, r0
 80044d4:	a901      	add	r1, sp, #4
 80044d6:	2000      	movs	r0, #0
 80044d8:	f7ff ffca 	bl	8004470 <chHeapStatus>
 80044dc:	4605      	mov	r5, r0
 80044de:	4a0b      	ldr	r2, [pc, #44]	; (800450c <cmd_mem+0x4c>)
 80044e0:	4b0b      	ldr	r3, [pc, #44]	; (8004510 <cmd_mem+0x50>)
 80044e2:	6812      	ldr	r2, [r2, #0]
 80044e4:	681b      	ldr	r3, [r3, #0]
 80044e6:	490b      	ldr	r1, [pc, #44]	; (8004514 <cmd_mem+0x54>)
 80044e8:	1ad2      	subs	r2, r2, r3
 80044ea:	4620      	mov	r0, r4
 80044ec:	f7fd f880 	bl	80015f0 <chprintf.lto_priv.72>
 80044f0:	462a      	mov	r2, r5
 80044f2:	4909      	ldr	r1, [pc, #36]	; (8004518 <cmd_mem+0x58>)
 80044f4:	4620      	mov	r0, r4
 80044f6:	f7fd f87b 	bl	80015f0 <chprintf.lto_priv.72>
 80044fa:	4620      	mov	r0, r4
 80044fc:	9a01      	ldr	r2, [sp, #4]
 80044fe:	4907      	ldr	r1, [pc, #28]	; (800451c <cmd_mem+0x5c>)
 8004500:	f7fd f876 	bl	80015f0 <chprintf.lto_priv.72>
 8004504:	b003      	add	sp, #12
 8004506:	bd30      	pop	{r4, r5, pc}
 8004508:	08007920 	.word	0x08007920
 800450c:	200016d0 	.word	0x200016d0
 8004510:	2000179c 	.word	0x2000179c
 8004514:	08007930 	.word	0x08007930
 8004518:	08007950 	.word	0x08007950
 800451c:	08007968 	.word	0x08007968

08004520 <chHeapFree>:
 8004520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004522:	f850 5c08 	ldr.w	r5, [r0, #-8]
 8004526:	4606      	mov	r6, r0
 8004528:	f105 0710 	add.w	r7, r5, #16
 800452c:	f1a0 0408 	sub.w	r4, r0, #8
 8004530:	3508      	adds	r5, #8
 8004532:	4638      	mov	r0, r7
 8004534:	f7ff fe1c 	bl	8004170 <chMtxLock>
 8004538:	462b      	mov	r3, r5
 800453a:	42ab      	cmp	r3, r5
 800453c:	681a      	ldr	r2, [r3, #0]
 800453e:	d001      	beq.n	8004544 <chHeapFree+0x24>
 8004540:	42a3      	cmp	r3, r4
 8004542:	d202      	bcs.n	800454a <chHeapFree+0x2a>
 8004544:	b11a      	cbz	r2, 800454e <chHeapFree+0x2e>
 8004546:	4294      	cmp	r4, r2
 8004548:	d301      	bcc.n	800454e <chHeapFree+0x2e>
 800454a:	4613      	mov	r3, r2
 800454c:	e7f5      	b.n	800453a <chHeapFree+0x1a>
 800454e:	f846 2c08 	str.w	r2, [r6, #-8]
 8004552:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8004556:	601c      	str	r4, [r3, #0]
 8004558:	f856 0c08 	ldr.w	r0, [r6, #-8]
 800455c:	18b1      	adds	r1, r6, r2
 800455e:	4281      	cmp	r1, r0
 8004560:	d00a      	beq.n	8004578 <chHeapFree+0x58>
 8004562:	6859      	ldr	r1, [r3, #4]
 8004564:	f101 0208 	add.w	r2, r1, #8
 8004568:	441a      	add	r2, r3
 800456a:	4294      	cmp	r4, r2
 800456c:	d011      	beq.n	8004592 <chHeapFree+0x72>
 800456e:	4638      	mov	r0, r7
 8004570:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004574:	f7fe bb74 	b.w	8002c60 <chMtxUnlock>
 8004578:	6849      	ldr	r1, [r1, #4]
 800457a:	f102 0508 	add.w	r5, r2, #8
 800457e:	58b0      	ldr	r0, [r6, r2]
 8004580:	4429      	add	r1, r5
 8004582:	e946 0102 	strd	r0, r1, [r6, #-8]
 8004586:	6859      	ldr	r1, [r3, #4]
 8004588:	f101 0208 	add.w	r2, r1, #8
 800458c:	441a      	add	r2, r3
 800458e:	4294      	cmp	r4, r2
 8004590:	d1ed      	bne.n	800456e <chHeapFree+0x4e>
 8004592:	e956 0202 	ldrd	r0, r2, [r6, #-8]
 8004596:	3208      	adds	r2, #8
 8004598:	4411      	add	r1, r2
 800459a:	e9c3 0100 	strd	r0, r1, [r3]
 800459e:	4638      	mov	r0, r7
 80045a0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80045a4:	f7fe bb5c 	b.w	8002c60 <chMtxUnlock>
	...

080045b0 <chThdRelease>:
 80045b0:	b430      	push	{r4, r5}
 80045b2:	2120      	movs	r1, #32
 80045b4:	f381 8811 	msr	BASEPRI, r1
 80045b8:	7f83      	ldrb	r3, [r0, #30]
 80045ba:	2400      	movs	r4, #0
 80045bc:	3b01      	subs	r3, #1
 80045be:	b2db      	uxtb	r3, r3
 80045c0:	7783      	strb	r3, [r0, #30]
 80045c2:	f384 8811 	msr	BASEPRI, r4
 80045c6:	b91b      	cbnz	r3, 80045d0 <chThdRelease+0x20>
 80045c8:	7f04      	ldrb	r4, [r0, #28]
 80045ca:	4602      	mov	r2, r0
 80045cc:	2c0f      	cmp	r4, #15
 80045ce:	d001      	beq.n	80045d4 <chThdRelease+0x24>
 80045d0:	bc30      	pop	{r4, r5}
 80045d2:	4770      	bx	lr
 80045d4:	7f44      	ldrb	r4, [r0, #29]
 80045d6:	f004 0403 	and.w	r4, r4, #3
 80045da:	2c01      	cmp	r4, #1
 80045dc:	d00f      	beq.n	80045fe <chThdRelease+0x4e>
 80045de:	2c02      	cmp	r4, #2
 80045e0:	d1f6      	bne.n	80045d0 <chThdRelease+0x20>
 80045e2:	e9d0 5404 	ldrd	r5, r4, [r0, #16]
 80045e6:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80045e8:	6125      	str	r5, [r4, #16]
 80045ea:	6915      	ldr	r5, [r2, #16]
 80045ec:	616c      	str	r4, [r5, #20]
 80045ee:	f381 8811 	msr	BASEPRI, r1
 80045f2:	6801      	ldr	r1, [r0, #0]
 80045f4:	6011      	str	r1, [r2, #0]
 80045f6:	6002      	str	r2, [r0, #0]
 80045f8:	f383 8811 	msr	BASEPRI, r3
 80045fc:	e7e8      	b.n	80045d0 <chThdRelease+0x20>
 80045fe:	e9d0 1304 	ldrd	r1, r3, [r0, #16]
 8004602:	6119      	str	r1, [r3, #16]
 8004604:	6902      	ldr	r2, [r0, #16]
 8004606:	bc30      	pop	{r4, r5}
 8004608:	6153      	str	r3, [r2, #20]
 800460a:	f7ff bf89 	b.w	8004520 <chHeapFree>
 800460e:	bf00      	nop

08004610 <chRegNextThread>:
 8004610:	b510      	push	{r4, lr}
 8004612:	2320      	movs	r3, #32
 8004614:	f383 8811 	msr	BASEPRI, r3
 8004618:	4b07      	ldr	r3, [pc, #28]	; (8004638 <chRegNextThread+0x28>)
 800461a:	6904      	ldr	r4, [r0, #16]
 800461c:	429c      	cmp	r4, r3
 800461e:	bf17      	itett	ne
 8004620:	7fa3      	ldrbne	r3, [r4, #30]
 8004622:	2400      	moveq	r4, #0
 8004624:	3301      	addne	r3, #1
 8004626:	77a3      	strbne	r3, [r4, #30]
 8004628:	2300      	movs	r3, #0
 800462a:	f383 8811 	msr	BASEPRI, r3
 800462e:	f7ff ffbf 	bl	80045b0 <chThdRelease>
 8004632:	4620      	mov	r0, r4
 8004634:	bd10      	pop	{r4, pc}
 8004636:	bf00      	nop
 8004638:	20001558 	.word	0x20001558
 800463c:	00000000 	.word	0x00000000

08004640 <cmd_threads>:
 8004640:	2900      	cmp	r1, #0
 8004642:	dd02      	ble.n	800464a <cmd_threads+0xa>
 8004644:	4916      	ldr	r1, [pc, #88]	; (80046a0 <cmd_threads+0x60>)
 8004646:	f7fc bfd3 	b.w	80015f0 <chprintf.lto_priv.72>
 800464a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800464c:	4915      	ldr	r1, [pc, #84]	; (80046a4 <cmd_threads+0x64>)
 800464e:	b085      	sub	sp, #20
 8004650:	4606      	mov	r6, r0
 8004652:	f7fc ffcd 	bl	80015f0 <chprintf.lto_priv.72>
 8004656:	2320      	movs	r3, #32
 8004658:	f383 8811 	msr	BASEPRI, r3
 800465c:	4b12      	ldr	r3, [pc, #72]	; (80046a8 <cmd_threads+0x68>)
 800465e:	2200      	movs	r2, #0
 8004660:	691c      	ldr	r4, [r3, #16]
 8004662:	7fa3      	ldrb	r3, [r4, #30]
 8004664:	3301      	adds	r3, #1
 8004666:	77a3      	strb	r3, [r4, #30]
 8004668:	f382 8811 	msr	BASEPRI, r2
 800466c:	4d0f      	ldr	r5, [pc, #60]	; (80046ac <cmd_threads+0x6c>)
 800466e:	4f10      	ldr	r7, [pc, #64]	; (80046b0 <cmd_threads+0x70>)
 8004670:	7f22      	ldrb	r2, [r4, #28]
 8004672:	68e3      	ldr	r3, [r4, #12]
 8004674:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8004678:	9202      	str	r2, [sp, #8]
 800467a:	7fa1      	ldrb	r1, [r4, #30]
 800467c:	4622      	mov	r2, r4
 800467e:	3901      	subs	r1, #1
 8004680:	9101      	str	r1, [sp, #4]
 8004682:	68a0      	ldr	r0, [r4, #8]
 8004684:	4639      	mov	r1, r7
 8004686:	9000      	str	r0, [sp, #0]
 8004688:	4630      	mov	r0, r6
 800468a:	f7fc ffb1 	bl	80015f0 <chprintf.lto_priv.72>
 800468e:	4620      	mov	r0, r4
 8004690:	f7ff ffbe 	bl	8004610 <chRegNextThread>
 8004694:	4604      	mov	r4, r0
 8004696:	2800      	cmp	r0, #0
 8004698:	d1ea      	bne.n	8004670 <cmd_threads+0x30>
 800469a:	b005      	add	sp, #20
 800469c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800469e:	bf00      	nop
 80046a0:	080079d0 	.word	0x080079d0
 80046a4:	080079e4 	.word	0x080079e4
 80046a8:	20001558 	.word	0x20001558
 80046ac:	08007db0 	.word	0x08007db0
 80046b0:	08007a0c 	.word	0x08007a0c
	...

080046c0 <regfind>:
 80046c0:	b538      	push	{r3, r4, r5, lr}
 80046c2:	4605      	mov	r5, r0
 80046c4:	2320      	movs	r3, #32
 80046c6:	f383 8811 	msr	BASEPRI, r3
 80046ca:	4b0a      	ldr	r3, [pc, #40]	; (80046f4 <regfind+0x34>)
 80046cc:	2400      	movs	r4, #0
 80046ce:	691b      	ldr	r3, [r3, #16]
 80046d0:	7f9a      	ldrb	r2, [r3, #30]
 80046d2:	3201      	adds	r2, #1
 80046d4:	779a      	strb	r2, [r3, #30]
 80046d6:	f384 8811 	msr	BASEPRI, r4
 80046da:	4618      	mov	r0, r3
 80046dc:	42ab      	cmp	r3, r5
 80046de:	bf08      	it	eq
 80046e0:	f044 0401 	orreq.w	r4, r4, #1
 80046e4:	f7ff ff94 	bl	8004610 <chRegNextThread>
 80046e8:	4603      	mov	r3, r0
 80046ea:	2800      	cmp	r0, #0
 80046ec:	d1f5      	bne.n	80046da <regfind+0x1a>
 80046ee:	4620      	mov	r0, r4
 80046f0:	bd38      	pop	{r3, r4, r5, pc}
 80046f2:	bf00      	nop
 80046f4:	20001558 	.word	0x20001558
	...

08004700 <chHeapAlloc>:
 8004700:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004702:	4e20      	ldr	r6, [pc, #128]	; (8004784 <chHeapAlloc+0x84>)
 8004704:	3107      	adds	r1, #7
 8004706:	2800      	cmp	r0, #0
 8004708:	bf18      	it	ne
 800470a:	4606      	movne	r6, r0
 800470c:	f106 0710 	add.w	r7, r6, #16
 8004710:	4638      	mov	r0, r7
 8004712:	f021 0507 	bic.w	r5, r1, #7
 8004716:	f106 0408 	add.w	r4, r6, #8
 800471a:	f7ff fd29 	bl	8004170 <chMtxLock>
 800471e:	e003      	b.n	8004728 <chHeapAlloc+0x28>
 8004720:	6843      	ldr	r3, [r0, #4]
 8004722:	42ab      	cmp	r3, r5
 8004724:	d212      	bcs.n	800474c <chHeapAlloc+0x4c>
 8004726:	4604      	mov	r4, r0
 8004728:	6820      	ldr	r0, [r4, #0]
 800472a:	2800      	cmp	r0, #0
 800472c:	d1f8      	bne.n	8004720 <chHeapAlloc+0x20>
 800472e:	4638      	mov	r0, r7
 8004730:	f7fe fa96 	bl	8002c60 <chMtxUnlock>
 8004734:	6833      	ldr	r3, [r6, #0]
 8004736:	b313      	cbz	r3, 800477e <chHeapAlloc+0x7e>
 8004738:	f105 0008 	add.w	r0, r5, #8
 800473c:	4798      	blx	r3
 800473e:	b1f0      	cbz	r0, 800477e <chHeapAlloc+0x7e>
 8004740:	e9c0 6500 	strd	r6, r5, [r0]
 8004744:	f100 0408 	add.w	r4, r0, #8
 8004748:	4620      	mov	r0, r4
 800474a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800474c:	f105 0208 	add.w	r2, r5, #8
 8004750:	4293      	cmp	r3, r2
 8004752:	6801      	ldr	r1, [r0, #0]
 8004754:	d208      	bcs.n	8004768 <chHeapAlloc+0x68>
 8004756:	6021      	str	r1, [r4, #0]
 8004758:	4604      	mov	r4, r0
 800475a:	4638      	mov	r0, r7
 800475c:	f844 6b08 	str.w	r6, [r4], #8
 8004760:	f7fe fa7e 	bl	8002c60 <chMtxUnlock>
 8004764:	4620      	mov	r0, r4
 8004766:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004768:	1b5b      	subs	r3, r3, r5
 800476a:	eb00 0c02 	add.w	ip, r0, r2
 800476e:	3b08      	subs	r3, #8
 8004770:	5081      	str	r1, [r0, r2]
 8004772:	f8cc 3004 	str.w	r3, [ip, #4]
 8004776:	f8c4 c000 	str.w	ip, [r4]
 800477a:	6045      	str	r5, [r0, #4]
 800477c:	e7ec      	b.n	8004758 <chHeapAlloc+0x58>
 800477e:	2400      	movs	r4, #0
 8004780:	e7e2      	b.n	8004748 <chHeapAlloc+0x48>
 8004782:	bf00      	nop
 8004784:	200016b0 	.word	0x200016b0
	...

08004790 <heap1_execute>:
 8004790:	b570      	push	{r4, r5, r6, lr}
 8004792:	b082      	sub	sp, #8
 8004794:	4669      	mov	r1, sp
 8004796:	2000      	movs	r0, #0
 8004798:	f7ff fe6a 	bl	8004470 <chHeapStatus>
 800479c:	2110      	movs	r1, #16
 800479e:	2000      	movs	r0, #0
 80047a0:	f7ff ffae 	bl	8004700 <chHeapAlloc>
 80047a4:	1c01      	adds	r1, r0, #0
 80047a6:	4605      	mov	r5, r0
 80047a8:	bf18      	it	ne
 80047aa:	2101      	movne	r1, #1
 80047ac:	2001      	movs	r0, #1
 80047ae:	f7fb ffd7 	bl	8000760 <_test_assert>
 80047b2:	b108      	cbz	r0, 80047b8 <heap1_execute+0x28>
 80047b4:	b002      	add	sp, #8
 80047b6:	bd70      	pop	{r4, r5, r6, pc}
 80047b8:	4604      	mov	r4, r0
 80047ba:	4628      	mov	r0, r5
 80047bc:	f7ff feb0 	bl	8004520 <chHeapFree>
 80047c0:	f06f 01ff 	mvn.w	r1, #255	; 0xff
 80047c4:	4620      	mov	r0, r4
 80047c6:	f7ff ff9b 	bl	8004700 <chHeapAlloc>
 80047ca:	fab0 f180 	clz	r1, r0
 80047ce:	2002      	movs	r0, #2
 80047d0:	0949      	lsrs	r1, r1, #5
 80047d2:	f7fb ffc5 	bl	8000760 <_test_assert>
 80047d6:	2800      	cmp	r0, #0
 80047d8:	d1ec      	bne.n	80047b4 <heap1_execute+0x24>
 80047da:	4669      	mov	r1, sp
 80047dc:	487c      	ldr	r0, [pc, #496]	; (80049d0 <heap1_execute+0x240>)
 80047de:	f7ff fe47 	bl	8004470 <chHeapStatus>
 80047e2:	2110      	movs	r1, #16
 80047e4:	487a      	ldr	r0, [pc, #488]	; (80049d0 <heap1_execute+0x240>)
 80047e6:	f7ff ff8b 	bl	8004700 <chHeapAlloc>
 80047ea:	2110      	movs	r1, #16
 80047ec:	4606      	mov	r6, r0
 80047ee:	4878      	ldr	r0, [pc, #480]	; (80049d0 <heap1_execute+0x240>)
 80047f0:	f7ff ff86 	bl	8004700 <chHeapAlloc>
 80047f4:	2110      	movs	r1, #16
 80047f6:	4605      	mov	r5, r0
 80047f8:	4875      	ldr	r0, [pc, #468]	; (80049d0 <heap1_execute+0x240>)
 80047fa:	f7ff ff81 	bl	8004700 <chHeapAlloc>
 80047fe:	4604      	mov	r4, r0
 8004800:	4630      	mov	r0, r6
 8004802:	f7ff fe8d 	bl	8004520 <chHeapFree>
 8004806:	4628      	mov	r0, r5
 8004808:	f7ff fe8a 	bl	8004520 <chHeapFree>
 800480c:	4620      	mov	r0, r4
 800480e:	f7ff fe87 	bl	8004520 <chHeapFree>
 8004812:	a901      	add	r1, sp, #4
 8004814:	486e      	ldr	r0, [pc, #440]	; (80049d0 <heap1_execute+0x240>)
 8004816:	f7ff fe2b 	bl	8004470 <chHeapStatus>
 800481a:	f1a0 0101 	sub.w	r1, r0, #1
 800481e:	fab1 f181 	clz	r1, r1
 8004822:	2003      	movs	r0, #3
 8004824:	0949      	lsrs	r1, r1, #5
 8004826:	f7fb ff9b 	bl	8000760 <_test_assert>
 800482a:	2800      	cmp	r0, #0
 800482c:	d1c2      	bne.n	80047b4 <heap1_execute+0x24>
 800482e:	2110      	movs	r1, #16
 8004830:	4867      	ldr	r0, [pc, #412]	; (80049d0 <heap1_execute+0x240>)
 8004832:	f7ff ff65 	bl	8004700 <chHeapAlloc>
 8004836:	2110      	movs	r1, #16
 8004838:	4604      	mov	r4, r0
 800483a:	4865      	ldr	r0, [pc, #404]	; (80049d0 <heap1_execute+0x240>)
 800483c:	f7ff ff60 	bl	8004700 <chHeapAlloc>
 8004840:	4605      	mov	r5, r0
 8004842:	2110      	movs	r1, #16
 8004844:	4862      	ldr	r0, [pc, #392]	; (80049d0 <heap1_execute+0x240>)
 8004846:	f7ff ff5b 	bl	8004700 <chHeapAlloc>
 800484a:	f7ff fe69 	bl	8004520 <chHeapFree>
 800484e:	4628      	mov	r0, r5
 8004850:	f7ff fe66 	bl	8004520 <chHeapFree>
 8004854:	4620      	mov	r0, r4
 8004856:	f7ff fe63 	bl	8004520 <chHeapFree>
 800485a:	a901      	add	r1, sp, #4
 800485c:	485c      	ldr	r0, [pc, #368]	; (80049d0 <heap1_execute+0x240>)
 800485e:	f7ff fe07 	bl	8004470 <chHeapStatus>
 8004862:	f1a0 0101 	sub.w	r1, r0, #1
 8004866:	fab1 f181 	clz	r1, r1
 800486a:	2004      	movs	r0, #4
 800486c:	0949      	lsrs	r1, r1, #5
 800486e:	f7fb ff77 	bl	8000760 <_test_assert>
 8004872:	2800      	cmp	r0, #0
 8004874:	d19e      	bne.n	80047b4 <heap1_execute+0x24>
 8004876:	2111      	movs	r1, #17
 8004878:	4855      	ldr	r0, [pc, #340]	; (80049d0 <heap1_execute+0x240>)
 800487a:	f7ff ff41 	bl	8004700 <chHeapAlloc>
 800487e:	2110      	movs	r1, #16
 8004880:	4604      	mov	r4, r0
 8004882:	4853      	ldr	r0, [pc, #332]	; (80049d0 <heap1_execute+0x240>)
 8004884:	f7ff ff3c 	bl	8004700 <chHeapAlloc>
 8004888:	4605      	mov	r5, r0
 800488a:	4620      	mov	r0, r4
 800488c:	f7ff fe48 	bl	8004520 <chHeapFree>
 8004890:	a901      	add	r1, sp, #4
 8004892:	484f      	ldr	r0, [pc, #316]	; (80049d0 <heap1_execute+0x240>)
 8004894:	f7ff fdec 	bl	8004470 <chHeapStatus>
 8004898:	f1a0 0102 	sub.w	r1, r0, #2
 800489c:	fab1 f181 	clz	r1, r1
 80048a0:	2005      	movs	r0, #5
 80048a2:	0949      	lsrs	r1, r1, #5
 80048a4:	f7fb ff5c 	bl	8000760 <_test_assert>
 80048a8:	2800      	cmp	r0, #0
 80048aa:	d183      	bne.n	80047b4 <heap1_execute+0x24>
 80048ac:	2110      	movs	r1, #16
 80048ae:	4848      	ldr	r0, [pc, #288]	; (80049d0 <heap1_execute+0x240>)
 80048b0:	f7ff ff26 	bl	8004700 <chHeapAlloc>
 80048b4:	a901      	add	r1, sp, #4
 80048b6:	4604      	mov	r4, r0
 80048b8:	4845      	ldr	r0, [pc, #276]	; (80049d0 <heap1_execute+0x240>)
 80048ba:	f7ff fdd9 	bl	8004470 <chHeapStatus>
 80048be:	2801      	cmp	r0, #1
 80048c0:	f000 8083 	beq.w	80049ca <heap1_execute+0x23a>
 80048c4:	a901      	add	r1, sp, #4
 80048c6:	4842      	ldr	r0, [pc, #264]	; (80049d0 <heap1_execute+0x240>)
 80048c8:	f7ff fdd2 	bl	8004470 <chHeapStatus>
 80048cc:	f1a0 0102 	sub.w	r1, r0, #2
 80048d0:	fab1 f181 	clz	r1, r1
 80048d4:	0949      	lsrs	r1, r1, #5
 80048d6:	2006      	movs	r0, #6
 80048d8:	f7fb ff42 	bl	8000760 <_test_assert>
 80048dc:	2800      	cmp	r0, #0
 80048de:	f47f af69 	bne.w	80047b4 <heap1_execute+0x24>
 80048e2:	4628      	mov	r0, r5
 80048e4:	f7ff fe1c 	bl	8004520 <chHeapFree>
 80048e8:	4620      	mov	r0, r4
 80048ea:	f7ff fe19 	bl	8004520 <chHeapFree>
 80048ee:	a901      	add	r1, sp, #4
 80048f0:	4837      	ldr	r0, [pc, #220]	; (80049d0 <heap1_execute+0x240>)
 80048f2:	f7ff fdbd 	bl	8004470 <chHeapStatus>
 80048f6:	f1a0 0101 	sub.w	r1, r0, #1
 80048fa:	fab1 f181 	clz	r1, r1
 80048fe:	2007      	movs	r0, #7
 8004900:	0949      	lsrs	r1, r1, #5
 8004902:	f7fb ff2d 	bl	8000760 <_test_assert>
 8004906:	2800      	cmp	r0, #0
 8004908:	f47f af54 	bne.w	80047b4 <heap1_execute+0x24>
 800490c:	2110      	movs	r1, #16
 800490e:	4830      	ldr	r0, [pc, #192]	; (80049d0 <heap1_execute+0x240>)
 8004910:	f7ff fef6 	bl	8004700 <chHeapAlloc>
 8004914:	2110      	movs	r1, #16
 8004916:	4605      	mov	r5, r0
 8004918:	482d      	ldr	r0, [pc, #180]	; (80049d0 <heap1_execute+0x240>)
 800491a:	f7ff fef1 	bl	8004700 <chHeapAlloc>
 800491e:	4604      	mov	r4, r0
 8004920:	4628      	mov	r0, r5
 8004922:	f7ff fdfd 	bl	8004520 <chHeapFree>
 8004926:	a901      	add	r1, sp, #4
 8004928:	4829      	ldr	r0, [pc, #164]	; (80049d0 <heap1_execute+0x240>)
 800492a:	f7ff fda1 	bl	8004470 <chHeapStatus>
 800492e:	1e85      	subs	r5, r0, #2
 8004930:	4269      	negs	r1, r5
 8004932:	4169      	adcs	r1, r5
 8004934:	2008      	movs	r0, #8
 8004936:	f7fb ff13 	bl	8000760 <_test_assert>
 800493a:	2800      	cmp	r0, #0
 800493c:	f47f af3a 	bne.w	80047b4 <heap1_execute+0x24>
 8004940:	2120      	movs	r1, #32
 8004942:	4823      	ldr	r0, [pc, #140]	; (80049d0 <heap1_execute+0x240>)
 8004944:	f7ff fedc 	bl	8004700 <chHeapAlloc>
 8004948:	f7ff fdea 	bl	8004520 <chHeapFree>
 800494c:	4620      	mov	r0, r4
 800494e:	f7ff fde7 	bl	8004520 <chHeapFree>
 8004952:	a901      	add	r1, sp, #4
 8004954:	481e      	ldr	r0, [pc, #120]	; (80049d0 <heap1_execute+0x240>)
 8004956:	f7ff fd8b 	bl	8004470 <chHeapStatus>
 800495a:	3801      	subs	r0, #1
 800495c:	4241      	negs	r1, r0
 800495e:	4141      	adcs	r1, r0
 8004960:	2009      	movs	r0, #9
 8004962:	f7fb fefd 	bl	8000760 <_test_assert>
 8004966:	2800      	cmp	r0, #0
 8004968:	f47f af24 	bne.w	80047b4 <heap1_execute+0x24>
 800496c:	a901      	add	r1, sp, #4
 800496e:	4818      	ldr	r0, [pc, #96]	; (80049d0 <heap1_execute+0x240>)
 8004970:	f7ff fd7e 	bl	8004470 <chHeapStatus>
 8004974:	9901      	ldr	r1, [sp, #4]
 8004976:	4816      	ldr	r0, [pc, #88]	; (80049d0 <heap1_execute+0x240>)
 8004978:	f7ff fec2 	bl	8004700 <chHeapAlloc>
 800497c:	a901      	add	r1, sp, #4
 800497e:	4604      	mov	r4, r0
 8004980:	4813      	ldr	r0, [pc, #76]	; (80049d0 <heap1_execute+0x240>)
 8004982:	f7ff fd75 	bl	8004470 <chHeapStatus>
 8004986:	fab0 f180 	clz	r1, r0
 800498a:	200a      	movs	r0, #10
 800498c:	0949      	lsrs	r1, r1, #5
 800498e:	f7fb fee7 	bl	8000760 <_test_assert>
 8004992:	2800      	cmp	r0, #0
 8004994:	f47f af0e 	bne.w	80047b4 <heap1_execute+0x24>
 8004998:	4620      	mov	r0, r4
 800499a:	f7ff fdc1 	bl	8004520 <chHeapFree>
 800499e:	a901      	add	r1, sp, #4
 80049a0:	480b      	ldr	r0, [pc, #44]	; (80049d0 <heap1_execute+0x240>)
 80049a2:	f7ff fd65 	bl	8004470 <chHeapStatus>
 80049a6:	1e42      	subs	r2, r0, #1
 80049a8:	4251      	negs	r1, r2
 80049aa:	4151      	adcs	r1, r2
 80049ac:	200b      	movs	r0, #11
 80049ae:	f7fb fed7 	bl	8000760 <_test_assert>
 80049b2:	2800      	cmp	r0, #0
 80049b4:	f47f aefe 	bne.w	80047b4 <heap1_execute+0x24>
 80049b8:	e9dd 3100 	ldrd	r3, r1, [sp]
 80049bc:	1acb      	subs	r3, r1, r3
 80049be:	4259      	negs	r1, r3
 80049c0:	4159      	adcs	r1, r3
 80049c2:	200c      	movs	r0, #12
 80049c4:	f7fb fecc 	bl	8000760 <_test_assert>
 80049c8:	e6f4      	b.n	80047b4 <heap1_execute+0x24>
 80049ca:	4601      	mov	r1, r0
 80049cc:	e783      	b.n	80048d6 <heap1_execute+0x146>
 80049ce:	bf00      	nop
 80049d0:	20001e20 	.word	0x20001e20
	...

080049e0 <chThdCreateFromHeap>:
 80049e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80049e4:	4690      	mov	r8, r2
 80049e6:	4699      	mov	r9, r3
 80049e8:	460e      	mov	r6, r1
 80049ea:	f7ff fe89 	bl	8004700 <chHeapAlloc>
 80049ee:	4604      	mov	r4, r0
 80049f0:	b370      	cbz	r0, 8004a50 <chThdCreateFromHeap+0x70>
 80049f2:	2320      	movs	r3, #32
 80049f4:	f383 8811 	msr	BASEPRI, r3
 80049f8:	2302      	movs	r3, #2
 80049fa:	2500      	movs	r5, #0
 80049fc:	f04f 0c01 	mov.w	ip, #1
 8004a00:	f1a6 0124 	sub.w	r1, r6, #36	; 0x24
 8004a04:	1847      	adds	r7, r0, r1
 8004a06:	60c7      	str	r7, [r0, #12]
 8004a08:	4e13      	ldr	r6, [pc, #76]	; (8004a58 <chThdCreateFromHeap+0x78>)
 8004a0a:	f840 9001 	str.w	r9, [r0, r1]
 8004a0e:	4a13      	ldr	r2, [pc, #76]	; (8004a5c <chThdCreateFromHeap+0x7c>)
 8004a10:	9908      	ldr	r1, [sp, #32]
 8004a12:	623a      	str	r2, [r7, #32]
 8004a14:	6079      	str	r1, [r7, #4]
 8004a16:	6106      	str	r6, [r0, #16]
 8004a18:	6971      	ldr	r1, [r6, #20]
 8004a1a:	7703      	strb	r3, [r0, #28]
 8004a1c:	f100 0224 	add.w	r2, r0, #36	; 0x24
 8004a20:	f100 0328 	add.w	r3, r0, #40	; 0x28
 8004a24:	6141      	str	r1, [r0, #20]
 8004a26:	f8c0 8008 	str.w	r8, [r0, #8]
 8004a2a:	f8c0 803c 	str.w	r8, [r0, #60]	; 0x3c
 8004a2e:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8004a32:	6185      	str	r5, [r0, #24]
 8004a34:	f880 c01e 	strb.w	ip, [r0, #30]
 8004a38:	6108      	str	r0, [r1, #16]
 8004a3a:	6242      	str	r2, [r0, #36]	; 0x24
 8004a3c:	f880 c01d 	strb.w	ip, [r0, #29]
 8004a40:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8004a44:	4629      	mov	r1, r5
 8004a46:	6170      	str	r0, [r6, #20]
 8004a48:	f7fe f87a 	bl	8002b40 <chSchWakeupS>
 8004a4c:	f385 8811 	msr	BASEPRI, r5
 8004a50:	4620      	mov	r0, r4
 8004a52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004a56:	bf00      	nop
 8004a58:	20001558 	.word	0x20001558
 8004a5c:	08000211 	.word	0x08000211

08004a60 <dyn3_execute>:
 8004a60:	b510      	push	{r4, lr}
 8004a62:	4b4a      	ldr	r3, [pc, #296]	; (8004b8c <dyn3_execute+0x12c>)
 8004a64:	484a      	ldr	r0, [pc, #296]	; (8004b90 <dyn3_execute+0x130>)
 8004a66:	699a      	ldr	r2, [r3, #24]
 8004a68:	b082      	sub	sp, #8
 8004a6a:	6892      	ldr	r2, [r2, #8]
 8004a6c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a70:	9000      	str	r0, [sp, #0]
 8004a72:	4b48      	ldr	r3, [pc, #288]	; (8004b94 <dyn3_execute+0x134>)
 8004a74:	3a01      	subs	r2, #1
 8004a76:	4848      	ldr	r0, [pc, #288]	; (8004b98 <dyn3_execute+0x138>)
 8004a78:	f7ff ffb2 	bl	80049e0 <chThdCreateFromHeap>
 8004a7c:	7f81      	ldrb	r1, [r0, #30]
 8004a7e:	4604      	mov	r4, r0
 8004a80:	2001      	movs	r0, #1
 8004a82:	1a09      	subs	r1, r1, r0
 8004a84:	fab1 f181 	clz	r1, r1
 8004a88:	0949      	lsrs	r1, r1, #5
 8004a8a:	f7fb fe69 	bl	8000760 <_test_assert>
 8004a8e:	b108      	cbz	r0, 8004a94 <dyn3_execute+0x34>
 8004a90:	b002      	add	sp, #8
 8004a92:	bd10      	pop	{r4, pc}
 8004a94:	2320      	movs	r3, #32
 8004a96:	f383 8811 	msr	BASEPRI, r3
 8004a9a:	7fa3      	ldrb	r3, [r4, #30]
 8004a9c:	3301      	adds	r3, #1
 8004a9e:	77a3      	strb	r3, [r4, #30]
 8004aa0:	f380 8811 	msr	BASEPRI, r0
 8004aa4:	2002      	movs	r0, #2
 8004aa6:	7fa1      	ldrb	r1, [r4, #30]
 8004aa8:	1a09      	subs	r1, r1, r0
 8004aaa:	fab1 f181 	clz	r1, r1
 8004aae:	0949      	lsrs	r1, r1, #5
 8004ab0:	f7fb fe56 	bl	8000760 <_test_assert>
 8004ab4:	2800      	cmp	r0, #0
 8004ab6:	d1eb      	bne.n	8004a90 <dyn3_execute+0x30>
 8004ab8:	4620      	mov	r0, r4
 8004aba:	f7ff fd79 	bl	80045b0 <chThdRelease>
 8004abe:	7fa1      	ldrb	r1, [r4, #30]
 8004ac0:	2003      	movs	r0, #3
 8004ac2:	f1a1 0101 	sub.w	r1, r1, #1
 8004ac6:	fab1 f181 	clz	r1, r1
 8004aca:	0949      	lsrs	r1, r1, #5
 8004acc:	f7fb fe48 	bl	8000760 <_test_assert>
 8004ad0:	2800      	cmp	r0, #0
 8004ad2:	d1dd      	bne.n	8004a90 <dyn3_execute+0x30>
 8004ad4:	4620      	mov	r0, r4
 8004ad6:	f7ff fdf3 	bl	80046c0 <regfind>
 8004ada:	4601      	mov	r1, r0
 8004adc:	2004      	movs	r0, #4
 8004ade:	f7fb fe3f 	bl	8000760 <_test_assert>
 8004ae2:	2800      	cmp	r0, #0
 8004ae4:	d1d4      	bne.n	8004a90 <dyn3_execute+0x30>
 8004ae6:	4620      	mov	r0, r4
 8004ae8:	f7ff fdea 	bl	80046c0 <regfind>
 8004aec:	4601      	mov	r1, r0
 8004aee:	2005      	movs	r0, #5
 8004af0:	f7fb fe36 	bl	8000760 <_test_assert>
 8004af4:	2800      	cmp	r0, #0
 8004af6:	d1cb      	bne.n	8004a90 <dyn3_execute+0x30>
 8004af8:	4620      	mov	r0, r4
 8004afa:	f7ff fd59 	bl	80045b0 <chThdRelease>
 8004afe:	7fa1      	ldrb	r1, [r4, #30]
 8004b00:	2006      	movs	r0, #6
 8004b02:	fab1 f181 	clz	r1, r1
 8004b06:	0949      	lsrs	r1, r1, #5
 8004b08:	f7fb fe2a 	bl	8000760 <_test_assert>
 8004b0c:	2800      	cmp	r0, #0
 8004b0e:	d1bf      	bne.n	8004a90 <dyn3_execute+0x30>
 8004b10:	7f21      	ldrb	r1, [r4, #28]
 8004b12:	2007      	movs	r0, #7
 8004b14:	fab1 f181 	clz	r1, r1
 8004b18:	0949      	lsrs	r1, r1, #5
 8004b1a:	f7fb fe21 	bl	8000760 <_test_assert>
 8004b1e:	2800      	cmp	r0, #0
 8004b20:	d1b6      	bne.n	8004a90 <dyn3_execute+0x30>
 8004b22:	4620      	mov	r0, r4
 8004b24:	f7ff fdcc 	bl	80046c0 <regfind>
 8004b28:	4601      	mov	r1, r0
 8004b2a:	2008      	movs	r0, #8
 8004b2c:	f7fb fe18 	bl	8000760 <_test_assert>
 8004b30:	2800      	cmp	r0, #0
 8004b32:	d1ad      	bne.n	8004a90 <dyn3_execute+0x30>
 8004b34:	4620      	mov	r0, r4
 8004b36:	f7ff fdc3 	bl	80046c0 <regfind>
 8004b3a:	4601      	mov	r1, r0
 8004b3c:	2009      	movs	r0, #9
 8004b3e:	f7fb fe0f 	bl	8000760 <_test_assert>
 8004b42:	2800      	cmp	r0, #0
 8004b44:	d1a4      	bne.n	8004a90 <dyn3_execute+0x30>
 8004b46:	2064      	movs	r0, #100	; 0x64
 8004b48:	f7fe ffa2 	bl	8003a90 <chThdSleep>
 8004b4c:	7f21      	ldrb	r1, [r4, #28]
 8004b4e:	200a      	movs	r0, #10
 8004b50:	f1a1 030f 	sub.w	r3, r1, #15
 8004b54:	4259      	negs	r1, r3
 8004b56:	4159      	adcs	r1, r3
 8004b58:	f7fb fe02 	bl	8000760 <_test_assert>
 8004b5c:	2800      	cmp	r0, #0
 8004b5e:	d197      	bne.n	8004a90 <dyn3_execute+0x30>
 8004b60:	4620      	mov	r0, r4
 8004b62:	f7ff fdad 	bl	80046c0 <regfind>
 8004b66:	4601      	mov	r1, r0
 8004b68:	200b      	movs	r0, #11
 8004b6a:	f7fb fdf9 	bl	8000760 <_test_assert>
 8004b6e:	2800      	cmp	r0, #0
 8004b70:	d18e      	bne.n	8004a90 <dyn3_execute+0x30>
 8004b72:	4620      	mov	r0, r4
 8004b74:	f7ff fda4 	bl	80046c0 <regfind>
 8004b78:	f080 0101 	eor.w	r1, r0, #1
 8004b7c:	200c      	movs	r0, #12
 8004b7e:	b2c9      	uxtb	r1, r1
 8004b80:	b002      	add	sp, #8
 8004b82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004b86:	f7fb bdeb 	b.w	8000760 <_test_assert>
 8004b8a:	bf00      	nop
 8004b8c:	20001558 	.word	0x20001558
 8004b90:	08007aa0 	.word	0x08007aa0
 8004b94:	080007f1 	.word	0x080007f1
 8004b98:	20001728 	.word	0x20001728
 8004b9c:	00000000 	.word	0x00000000

08004ba0 <chSemWait>:
 8004ba0:	2320      	movs	r3, #32
 8004ba2:	f383 8811 	msr	BASEPRI, r3
 8004ba6:	6883      	ldr	r3, [r0, #8]
 8004ba8:	3b01      	subs	r3, #1
 8004baa:	2b00      	cmp	r3, #0
 8004bac:	6083      	str	r3, [r0, #8]
 8004bae:	db04      	blt.n	8004bba <chSemWait+0x1a>
 8004bb0:	2000      	movs	r0, #0
 8004bb2:	2300      	movs	r3, #0
 8004bb4:	f383 8811 	msr	BASEPRI, r3
 8004bb8:	4770      	bx	lr
 8004bba:	4603      	mov	r3, r0
 8004bbc:	b510      	push	{r4, lr}
 8004bbe:	4c08      	ldr	r4, [pc, #32]	; (8004be0 <chSemWait+0x40>)
 8004bc0:	2005      	movs	r0, #5
 8004bc2:	69a2      	ldr	r2, [r4, #24]
 8004bc4:	6213      	str	r3, [r2, #32]
 8004bc6:	6013      	str	r3, [r2, #0]
 8004bc8:	6859      	ldr	r1, [r3, #4]
 8004bca:	6051      	str	r1, [r2, #4]
 8004bcc:	600a      	str	r2, [r1, #0]
 8004bce:	605a      	str	r2, [r3, #4]
 8004bd0:	f7fe f8ce 	bl	8002d70 <chSchGoSleepS>
 8004bd4:	69a3      	ldr	r3, [r4, #24]
 8004bd6:	6a18      	ldr	r0, [r3, #32]
 8004bd8:	2300      	movs	r3, #0
 8004bda:	f383 8811 	msr	BASEPRI, r3
 8004bde:	bd10      	pop	{r4, pc}
 8004be0:	20001558 	.word	0x20001558
	...

08004bf0 <bmk11_execute>:
 8004bf0:	b570      	push	{r4, r5, r6, lr}
 8004bf2:	f7ff f82d 	bl	8003c50 <test_wait_tick>
 8004bf6:	2500      	movs	r5, #0
 8004bf8:	f7fc fbf2 	bl	80013e0 <test_start_timer.constprop.3>
 8004bfc:	4e14      	ldr	r6, [pc, #80]	; (8004c50 <bmk11_execute+0x60>)
 8004bfe:	4c15      	ldr	r4, [pc, #84]	; (8004c54 <bmk11_execute+0x64>)
 8004c00:	4620      	mov	r0, r4
 8004c02:	f7ff ffcd 	bl	8004ba0 <chSemWait>
 8004c06:	4620      	mov	r0, r4
 8004c08:	f7fe f85a 	bl	8002cc0 <chSemSignal>
 8004c0c:	4620      	mov	r0, r4
 8004c0e:	f7ff ffc7 	bl	8004ba0 <chSemWait>
 8004c12:	4620      	mov	r0, r4
 8004c14:	f7fe f854 	bl	8002cc0 <chSemSignal>
 8004c18:	4620      	mov	r0, r4
 8004c1a:	f7ff ffc1 	bl	8004ba0 <chSemWait>
 8004c1e:	4620      	mov	r0, r4
 8004c20:	f7fe f84e 	bl	8002cc0 <chSemSignal>
 8004c24:	4620      	mov	r0, r4
 8004c26:	f7ff ffbb 	bl	8004ba0 <chSemWait>
 8004c2a:	4620      	mov	r0, r4
 8004c2c:	f7fe f848 	bl	8002cc0 <chSemSignal>
 8004c30:	7833      	ldrb	r3, [r6, #0]
 8004c32:	3501      	adds	r5, #1
 8004c34:	2b00      	cmp	r3, #0
 8004c36:	d0e3      	beq.n	8004c00 <bmk11_execute+0x10>
 8004c38:	4807      	ldr	r0, [pc, #28]	; (8004c58 <bmk11_execute+0x68>)
 8004c3a:	f7fb fe01 	bl	8000840 <test_print>
 8004c3e:	00a8      	lsls	r0, r5, #2
 8004c40:	f7fb fd06 	bl	8000650 <test_printn>
 8004c44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004c48:	4804      	ldr	r0, [pc, #16]	; (8004c5c <bmk11_execute+0x6c>)
 8004c4a:	f7fb bdd9 	b.w	8000800 <test_println>
 8004c4e:	bf00      	nop
 8004c50:	20001e40 	.word	0x20001e40
 8004c54:	200017a0 	.word	0x200017a0
 8004c58:	08007600 	.word	0x08007600
 8004c5c:	08007620 	.word	0x08007620

08004c60 <thread3.lto_priv.75>:
 8004c60:	b538      	push	{r3, r4, r5, lr}
 8004c62:	4c07      	ldr	r4, [pc, #28]	; (8004c80 <thread3.lto_priv.75+0x20>)
 8004c64:	69a3      	ldr	r3, [r4, #24]
 8004c66:	7f5b      	ldrb	r3, [r3, #29]
 8004c68:	075a      	lsls	r2, r3, #29
 8004c6a:	d407      	bmi.n	8004c7c <thread3.lto_priv.75+0x1c>
 8004c6c:	4d05      	ldr	r5, [pc, #20]	; (8004c84 <thread3.lto_priv.75+0x24>)
 8004c6e:	4628      	mov	r0, r5
 8004c70:	f7ff ff96 	bl	8004ba0 <chSemWait>
 8004c74:	69a3      	ldr	r3, [r4, #24]
 8004c76:	7f5b      	ldrb	r3, [r3, #29]
 8004c78:	075b      	lsls	r3, r3, #29
 8004c7a:	d5f8      	bpl.n	8004c6e <thread3.lto_priv.75+0xe>
 8004c7c:	bd38      	pop	{r3, r4, r5, pc}
 8004c7e:	bf00      	nop
 8004c80:	20001558 	.word	0x20001558
 8004c84:	200017a0 	.word	0x200017a0
	...

08004c90 <sem4_execute>:
 8004c90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004c92:	2500      	movs	r5, #0
 8004c94:	b087      	sub	sp, #28
 8004c96:	ac03      	add	r4, sp, #12
 8004c98:	9505      	str	r5, [sp, #20]
 8004c9a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8004c9e:	2620      	movs	r6, #32
 8004ca0:	f386 8811 	msr	BASEPRI, r6
 8004ca4:	4629      	mov	r1, r5
 8004ca6:	4620      	mov	r0, r4
 8004ca8:	f7fc faea 	bl	8001280 <chSemResetI>
 8004cac:	f7fd f888 	bl	8001dc0 <chSchRescheduleS>
 8004cb0:	f385 8811 	msr	BASEPRI, r5
 8004cb4:	f386 8811 	msr	BASEPRI, r6
 8004cb8:	9905      	ldr	r1, [sp, #20]
 8004cba:	2001      	movs	r0, #1
 8004cbc:	42a9      	cmp	r1, r5
 8004cbe:	bfcc      	ite	gt
 8004cc0:	2100      	movgt	r1, #0
 8004cc2:	2101      	movle	r1, #1
 8004cc4:	f7fb fd4c 	bl	8000760 <_test_assert>
 8004cc8:	b118      	cbz	r0, 8004cd2 <sem4_execute+0x42>
 8004cca:	f385 8811 	msr	BASEPRI, r5
 8004cce:	b007      	add	sp, #28
 8004cd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004cd2:	4607      	mov	r7, r0
 8004cd4:	f380 8811 	msr	BASEPRI, r0
 8004cd8:	4a40      	ldr	r2, [pc, #256]	; (8004ddc <sem4_execute+0x14c>)
 8004cda:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004cde:	6992      	ldr	r2, [r2, #24]
 8004ce0:	4b3f      	ldr	r3, [pc, #252]	; (8004de0 <sem4_execute+0x150>)
 8004ce2:	6892      	ldr	r2, [r2, #8]
 8004ce4:	483f      	ldr	r0, [pc, #252]	; (8004de4 <sem4_execute+0x154>)
 8004ce6:	3a01      	subs	r2, #1
 8004ce8:	9400      	str	r4, [sp, #0]
 8004cea:	f7fe f809 	bl	8002d00 <chThdCreateStatic>
 8004cee:	4b3e      	ldr	r3, [pc, #248]	; (8004de8 <sem4_execute+0x158>)
 8004cf0:	6018      	str	r0, [r3, #0]
 8004cf2:	4620      	mov	r0, r4
 8004cf4:	f7ff ff54 	bl	8004ba0 <chSemWait>
 8004cf8:	f386 8811 	msr	BASEPRI, r6
 8004cfc:	9905      	ldr	r1, [sp, #20]
 8004cfe:	2002      	movs	r0, #2
 8004d00:	2900      	cmp	r1, #0
 8004d02:	bfcc      	ite	gt
 8004d04:	2100      	movgt	r1, #0
 8004d06:	2101      	movle	r1, #1
 8004d08:	f7fb fd2a 	bl	8000760 <_test_assert>
 8004d0c:	b118      	cbz	r0, 8004d16 <sem4_execute+0x86>
 8004d0e:	f387 8811 	msr	BASEPRI, r7
 8004d12:	b007      	add	sp, #28
 8004d14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004d16:	f380 8811 	msr	BASEPRI, r0
 8004d1a:	f386 8811 	msr	BASEPRI, r6
 8004d1e:	9b05      	ldr	r3, [sp, #20]
 8004d20:	2b00      	cmp	r3, #0
 8004d22:	dd23      	ble.n	8004d6c <sem4_execute+0xdc>
 8004d24:	f7fd f84c 	bl	8001dc0 <chSchRescheduleS>
 8004d28:	2500      	movs	r5, #0
 8004d2a:	f385 8811 	msr	BASEPRI, r5
 8004d2e:	2720      	movs	r7, #32
 8004d30:	f387 8811 	msr	BASEPRI, r7
 8004d34:	9905      	ldr	r1, [sp, #20]
 8004d36:	2003      	movs	r0, #3
 8004d38:	42a9      	cmp	r1, r5
 8004d3a:	bfd4      	ite	le
 8004d3c:	2100      	movle	r1, #0
 8004d3e:	2101      	movgt	r1, #1
 8004d40:	f7fb fd0e 	bl	8000760 <_test_assert>
 8004d44:	4606      	mov	r6, r0
 8004d46:	2800      	cmp	r0, #0
 8004d48:	d1bf      	bne.n	8004cca <sem4_execute+0x3a>
 8004d4a:	f380 8811 	msr	BASEPRI, r0
 8004d4e:	f387 8811 	msr	BASEPRI, r7
 8004d52:	9905      	ldr	r1, [sp, #20]
 8004d54:	2004      	movs	r0, #4
 8004d56:	f1a1 0101 	sub.w	r1, r1, #1
 8004d5a:	fab1 f181 	clz	r1, r1
 8004d5e:	0949      	lsrs	r1, r1, #5
 8004d60:	f7fb fcfe 	bl	8000760 <_test_assert>
 8004d64:	b130      	cbz	r0, 8004d74 <sem4_execute+0xe4>
 8004d66:	f386 8811 	msr	BASEPRI, r6
 8004d6a:	e7b0      	b.n	8004cce <sem4_execute+0x3e>
 8004d6c:	4620      	mov	r0, r4
 8004d6e:	f7fc fa0f 	bl	8001190 <chSemSignalI>
 8004d72:	e7d7      	b.n	8004d24 <sem4_execute+0x94>
 8004d74:	f380 8811 	msr	BASEPRI, r0
 8004d78:	f387 8811 	msr	BASEPRI, r7
 8004d7c:	9b05      	ldr	r3, [sp, #20]
 8004d7e:	2b00      	cmp	r3, #0
 8004d80:	dd27      	ble.n	8004dd2 <sem4_execute+0x142>
 8004d82:	f7fd f81d 	bl	8001dc0 <chSchRescheduleS>
 8004d86:	2400      	movs	r4, #0
 8004d88:	f384 8811 	msr	BASEPRI, r4
 8004d8c:	2620      	movs	r6, #32
 8004d8e:	f386 8811 	msr	BASEPRI, r6
 8004d92:	9905      	ldr	r1, [sp, #20]
 8004d94:	2003      	movs	r0, #3
 8004d96:	42a1      	cmp	r1, r4
 8004d98:	bfd4      	ite	le
 8004d9a:	2100      	movle	r1, #0
 8004d9c:	2101      	movgt	r1, #1
 8004d9e:	f7fb fcdf 	bl	8000760 <_test_assert>
 8004da2:	4605      	mov	r5, r0
 8004da4:	b110      	cbz	r0, 8004dac <sem4_execute+0x11c>
 8004da6:	f384 8811 	msr	BASEPRI, r4
 8004daa:	e790      	b.n	8004cce <sem4_execute+0x3e>
 8004dac:	f380 8811 	msr	BASEPRI, r0
 8004db0:	f386 8811 	msr	BASEPRI, r6
 8004db4:	9905      	ldr	r1, [sp, #20]
 8004db6:	2005      	movs	r0, #5
 8004db8:	f1a1 0101 	sub.w	r1, r1, #1
 8004dbc:	fab1 f181 	clz	r1, r1
 8004dc0:	0949      	lsrs	r1, r1, #5
 8004dc2:	f7fb fccd 	bl	8000760 <_test_assert>
 8004dc6:	2800      	cmp	r0, #0
 8004dc8:	f47f af7f 	bne.w	8004cca <sem4_execute+0x3a>
 8004dcc:	f380 8811 	msr	BASEPRI, r0
 8004dd0:	e77d      	b.n	8004cce <sem4_execute+0x3e>
 8004dd2:	4620      	mov	r0, r4
 8004dd4:	f7fc f9dc 	bl	8001190 <chSemSignalI>
 8004dd8:	e7d3      	b.n	8004d82 <sem4_execute+0xf2>
 8004dda:	bf00      	nop
 8004ddc:	20001558 	.word	0x20001558
 8004de0:	08001de1 	.word	0x08001de1
 8004de4:	200017b0 	.word	0x200017b0
 8004de8:	20001e44 	.word	0x20001e44
 8004dec:	00000000 	.word	0x00000000

08004df0 <thread3.lto_priv.74>:
 8004df0:	b510      	push	{r4, lr}
 8004df2:	4c04      	ldr	r4, [pc, #16]	; (8004e04 <thread3.lto_priv.74+0x14>)
 8004df4:	4620      	mov	r0, r4
 8004df6:	f7ff fed3 	bl	8004ba0 <chSemWait>
 8004dfa:	4620      	mov	r0, r4
 8004dfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004e00:	f7fd bf5e 	b.w	8002cc0 <chSemSignal>
 8004e04:	20000cd0 	.word	0x20000cd0
	...

08004e10 <thread1.lto_priv.76>:
 8004e10:	b510      	push	{r4, lr}
 8004e12:	4604      	mov	r4, r0
 8004e14:	4803      	ldr	r0, [pc, #12]	; (8004e24 <thread1.lto_priv.76+0x14>)
 8004e16:	f7ff fec3 	bl	8004ba0 <chSemWait>
 8004e1a:	7820      	ldrb	r0, [r4, #0]
 8004e1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004e20:	f7fb bcb6 	b.w	8000790 <test_emit_token>
 8004e24:	20000cd0 	.word	0x20000cd0
	...

08004e30 <chThdWait>:
 8004e30:	b538      	push	{r3, r4, r5, lr}
 8004e32:	4604      	mov	r4, r0
 8004e34:	2320      	movs	r3, #32
 8004e36:	f383 8811 	msr	BASEPRI, r3
 8004e3a:	7f03      	ldrb	r3, [r0, #28]
 8004e3c:	2b0f      	cmp	r3, #15
 8004e3e:	d007      	beq.n	8004e50 <chThdWait+0x20>
 8004e40:	4b08      	ldr	r3, [pc, #32]	; (8004e64 <chThdWait+0x34>)
 8004e42:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004e44:	699b      	ldr	r3, [r3, #24]
 8004e46:	2009      	movs	r0, #9
 8004e48:	601a      	str	r2, [r3, #0]
 8004e4a:	6263      	str	r3, [r4, #36]	; 0x24
 8004e4c:	f7fd ff90 	bl	8002d70 <chSchGoSleepS>
 8004e50:	6a25      	ldr	r5, [r4, #32]
 8004e52:	2300      	movs	r3, #0
 8004e54:	f383 8811 	msr	BASEPRI, r3
 8004e58:	4620      	mov	r0, r4
 8004e5a:	f7ff fba9 	bl	80045b0 <chThdRelease>
 8004e5e:	4628      	mov	r0, r5
 8004e60:	bd38      	pop	{r3, r4, r5, pc}
 8004e62:	bf00      	nop
 8004e64:	20001558 	.word	0x20001558
	...

08004e70 <cmd_test>:
 8004e70:	2900      	cmp	r1, #0
 8004e72:	dd02      	ble.n	8004e7a <cmd_test+0xa>
 8004e74:	490e      	ldr	r1, [pc, #56]	; (8004eb0 <cmd_test+0x40>)
 8004e76:	f7fc bbbb 	b.w	80015f0 <chprintf.lto_priv.72>
 8004e7a:	b510      	push	{r4, lr}
 8004e7c:	4604      	mov	r4, r0
 8004e7e:	4a0d      	ldr	r2, [pc, #52]	; (8004eb4 <cmd_test+0x44>)
 8004e80:	b082      	sub	sp, #8
 8004e82:	6992      	ldr	r2, [r2, #24]
 8004e84:	4b0c      	ldr	r3, [pc, #48]	; (8004eb8 <cmd_test+0x48>)
 8004e86:	6892      	ldr	r2, [r2, #8]
 8004e88:	f44f 71e4 	mov.w	r1, #456	; 0x1c8
 8004e8c:	2000      	movs	r0, #0
 8004e8e:	9400      	str	r4, [sp, #0]
 8004e90:	f7ff fda6 	bl	80049e0 <chThdCreateFromHeap>
 8004e94:	b120      	cbz	r0, 8004ea0 <cmd_test+0x30>
 8004e96:	b002      	add	sp, #8
 8004e98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004e9c:	f7ff bfc8 	b.w	8004e30 <chThdWait>
 8004ea0:	4620      	mov	r0, r4
 8004ea2:	4906      	ldr	r1, [pc, #24]	; (8004ebc <cmd_test+0x4c>)
 8004ea4:	b002      	add	sp, #8
 8004ea6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004eaa:	f7fc bba1 	b.w	80015f0 <chprintf.lto_priv.72>
 8004eae:	bf00      	nop
 8004eb0:	080079b0 	.word	0x080079b0
 8004eb4:	20001558 	.word	0x20001558
 8004eb8:	08006831 	.word	0x08006831
 8004ebc:	080079c0 	.word	0x080079c0

08004ec0 <bmk5_execute>:
 8004ec0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004ec4:	2400      	movs	r4, #0
 8004ec6:	4b15      	ldr	r3, [pc, #84]	; (8004f1c <bmk5_execute+0x5c>)
 8004ec8:	b083      	sub	sp, #12
 8004eca:	699b      	ldr	r3, [r3, #24]
 8004ecc:	46a1      	mov	r9, r4
 8004ece:	689d      	ldr	r5, [r3, #8]
 8004ed0:	f7fe febe 	bl	8003c50 <test_wait_tick>
 8004ed4:	f7fc fa84 	bl	80013e0 <test_start_timer.constprop.3>
 8004ed8:	f8df 8054 	ldr.w	r8, [pc, #84]	; 8004f30 <bmk5_execute+0x70>
 8004edc:	4f10      	ldr	r7, [pc, #64]	; (8004f20 <bmk5_execute+0x60>)
 8004ede:	4e11      	ldr	r6, [pc, #68]	; (8004f24 <bmk5_execute+0x64>)
 8004ee0:	3d01      	subs	r5, #1
 8004ee2:	463b      	mov	r3, r7
 8004ee4:	462a      	mov	r2, r5
 8004ee6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004eea:	f8cd 9000 	str.w	r9, [sp]
 8004eee:	4630      	mov	r0, r6
 8004ef0:	f7fd ff06 	bl	8002d00 <chThdCreateStatic>
 8004ef4:	f7ff ff9c 	bl	8004e30 <chThdWait>
 8004ef8:	f898 3000 	ldrb.w	r3, [r8]
 8004efc:	3401      	adds	r4, #1
 8004efe:	2b00      	cmp	r3, #0
 8004f00:	d0ef      	beq.n	8004ee2 <bmk5_execute+0x22>
 8004f02:	4809      	ldr	r0, [pc, #36]	; (8004f28 <bmk5_execute+0x68>)
 8004f04:	f7fb fc9c 	bl	8000840 <test_print>
 8004f08:	4620      	mov	r0, r4
 8004f0a:	f7fb fba1 	bl	8000650 <test_printn>
 8004f0e:	4807      	ldr	r0, [pc, #28]	; (8004f2c <bmk5_execute+0x6c>)
 8004f10:	b003      	add	sp, #12
 8004f12:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004f16:	f7fb bc73 	b.w	8000800 <test_println>
 8004f1a:	bf00      	nop
 8004f1c:	20001558 	.word	0x20001558
 8004f20:	080072d1 	.word	0x080072d1
 8004f24:	200017b0 	.word	0x200017b0
 8004f28:	08007600 	.word	0x08007600
 8004f2c:	08007700 	.word	0x08007700
 8004f30:	20001e40 	.word	0x20001e40
	...

08004f40 <test_wait_threads>:
 8004f40:	b570      	push	{r4, r5, r6, lr}
 8004f42:	2600      	movs	r6, #0
 8004f44:	4c06      	ldr	r4, [pc, #24]	; (8004f60 <test_wait_threads+0x20>)
 8004f46:	f104 0514 	add.w	r5, r4, #20
 8004f4a:	f854 0b04 	ldr.w	r0, [r4], #4
 8004f4e:	b118      	cbz	r0, 8004f58 <test_wait_threads+0x18>
 8004f50:	f7ff ff6e 	bl	8004e30 <chThdWait>
 8004f54:	f844 6c04 	str.w	r6, [r4, #-4]
 8004f58:	42ac      	cmp	r4, r5
 8004f5a:	d1f6      	bne.n	8004f4a <test_wait_threads+0xa>
 8004f5c:	bd70      	pop	{r4, r5, r6, pc}
 8004f5e:	bf00      	nop
 8004f60:	20001e44 	.word	0x20001e44
	...

08004f70 <bmk8_execute>:
 8004f70:	2300      	movs	r3, #0
 8004f72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004f76:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8005048 <bmk8_execute+0xd8>
 8004f7a:	b084      	sub	sp, #16
 8004f7c:	ac04      	add	r4, sp, #16
 8004f7e:	f844 3d04 	str.w	r3, [r4, #-4]!
 8004f82:	f7fe fe65 	bl	8003c50 <test_wait_tick>
 8004f86:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8004f8a:	4f2a      	ldr	r7, [pc, #168]	; (8005034 <bmk8_execute+0xc4>)
 8004f8c:	4e2a      	ldr	r6, [pc, #168]	; (8005038 <bmk8_execute+0xc8>)
 8004f8e:	689a      	ldr	r2, [r3, #8]
 8004f90:	4630      	mov	r0, r6
 8004f92:	463b      	mov	r3, r7
 8004f94:	3a01      	subs	r2, #1
 8004f96:	9400      	str	r4, [sp, #0]
 8004f98:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004f9c:	f7fd feb0 	bl	8002d00 <chThdCreateStatic>
 8004fa0:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8004fa4:	4d25      	ldr	r5, [pc, #148]	; (800503c <bmk8_execute+0xcc>)
 8004fa6:	689a      	ldr	r2, [r3, #8]
 8004fa8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fac:	6028      	str	r0, [r5, #0]
 8004fae:	463b      	mov	r3, r7
 8004fb0:	3a01      	subs	r2, #1
 8004fb2:	9400      	str	r4, [sp, #0]
 8004fb4:	f506 70a4 	add.w	r0, r6, #328	; 0x148
 8004fb8:	f7fd fea2 	bl	8002d00 <chThdCreateStatic>
 8004fbc:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8004fc0:	6068      	str	r0, [r5, #4]
 8004fc2:	689a      	ldr	r2, [r3, #8]
 8004fc4:	f506 7024 	add.w	r0, r6, #656	; 0x290
 8004fc8:	463b      	mov	r3, r7
 8004fca:	3a01      	subs	r2, #1
 8004fcc:	9400      	str	r4, [sp, #0]
 8004fce:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fd2:	f7fd fe95 	bl	8002d00 <chThdCreateStatic>
 8004fd6:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8004fda:	60a8      	str	r0, [r5, #8]
 8004fdc:	689a      	ldr	r2, [r3, #8]
 8004fde:	f506 7076 	add.w	r0, r6, #984	; 0x3d8
 8004fe2:	463b      	mov	r3, r7
 8004fe4:	3a01      	subs	r2, #1
 8004fe6:	9400      	str	r4, [sp, #0]
 8004fe8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fec:	f7fd fe88 	bl	8002d00 <chThdCreateStatic>
 8004ff0:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8004ff4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004ff8:	689a      	ldr	r2, [r3, #8]
 8004ffa:	60e8      	str	r0, [r5, #12]
 8004ffc:	463b      	mov	r3, r7
 8004ffe:	3a01      	subs	r2, #1
 8005000:	9400      	str	r4, [sp, #0]
 8005002:	f506 60a4 	add.w	r0, r6, #1312	; 0x520
 8005006:	f7fd fe7b 	bl	8002d00 <chThdCreateStatic>
 800500a:	6128      	str	r0, [r5, #16]
 800500c:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8005010:	f7fe fd3e 	bl	8003a90 <chThdSleep>
 8005014:	f7fb fb44 	bl	80006a0 <test_terminate_threads>
 8005018:	f7ff ff92 	bl	8004f40 <test_wait_threads>
 800501c:	4808      	ldr	r0, [pc, #32]	; (8005040 <bmk8_execute+0xd0>)
 800501e:	f7fb fc0f 	bl	8000840 <test_print>
 8005022:	9803      	ldr	r0, [sp, #12]
 8005024:	f7fb fb14 	bl	8000650 <test_printn>
 8005028:	4806      	ldr	r0, [pc, #24]	; (8005044 <bmk8_execute+0xd4>)
 800502a:	f7fb fbe9 	bl	8000800 <test_println>
 800502e:	b004      	add	sp, #16
 8005030:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005034:	08001d51 	.word	0x08001d51
 8005038:	200017b0 	.word	0x200017b0
 800503c:	20001e44 	.word	0x20001e44
 8005040:	08007600 	.word	0x08007600
 8005044:	08007730 	.word	0x08007730
 8005048:	20001558 	.word	0x20001558
 800504c:	00000000 	.word	0x00000000

08005050 <bmk7_execute>:
 8005050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005054:	2400      	movs	r4, #0
 8005056:	4d3a      	ldr	r5, [pc, #232]	; (8005140 <bmk7_execute+0xf0>)
 8005058:	b082      	sub	sp, #8
 800505a:	69aa      	ldr	r2, [r5, #24]
 800505c:	4b39      	ldr	r3, [pc, #228]	; (8005144 <bmk7_execute+0xf4>)
 800505e:	6892      	ldr	r2, [r2, #8]
 8005060:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005064:	3205      	adds	r2, #5
 8005066:	4838      	ldr	r0, [pc, #224]	; (8005148 <bmk7_execute+0xf8>)
 8005068:	9400      	str	r4, [sp, #0]
 800506a:	f7fd fe49 	bl	8002d00 <chThdCreateStatic>
 800506e:	69ab      	ldr	r3, [r5, #24]
 8005070:	4e36      	ldr	r6, [pc, #216]	; (800514c <bmk7_execute+0xfc>)
 8005072:	689a      	ldr	r2, [r3, #8]
 8005074:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005078:	6030      	str	r0, [r6, #0]
 800507a:	3204      	adds	r2, #4
 800507c:	4b31      	ldr	r3, [pc, #196]	; (8005144 <bmk7_execute+0xf4>)
 800507e:	9400      	str	r4, [sp, #0]
 8005080:	4833      	ldr	r0, [pc, #204]	; (8005150 <bmk7_execute+0x100>)
 8005082:	f7fd fe3d 	bl	8002d00 <chThdCreateStatic>
 8005086:	69ab      	ldr	r3, [r5, #24]
 8005088:	6070      	str	r0, [r6, #4]
 800508a:	689a      	ldr	r2, [r3, #8]
 800508c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005090:	4b2c      	ldr	r3, [pc, #176]	; (8005144 <bmk7_execute+0xf4>)
 8005092:	3203      	adds	r2, #3
 8005094:	9400      	str	r4, [sp, #0]
 8005096:	482f      	ldr	r0, [pc, #188]	; (8005154 <bmk7_execute+0x104>)
 8005098:	f7fd fe32 	bl	8002d00 <chThdCreateStatic>
 800509c:	69ab      	ldr	r3, [r5, #24]
 800509e:	60b0      	str	r0, [r6, #8]
 80050a0:	689a      	ldr	r2, [r3, #8]
 80050a2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80050a6:	4b27      	ldr	r3, [pc, #156]	; (8005144 <bmk7_execute+0xf4>)
 80050a8:	3202      	adds	r2, #2
 80050aa:	9400      	str	r4, [sp, #0]
 80050ac:	482a      	ldr	r0, [pc, #168]	; (8005158 <bmk7_execute+0x108>)
 80050ae:	f7fd fe27 	bl	8002d00 <chThdCreateStatic>
 80050b2:	69ab      	ldr	r3, [r5, #24]
 80050b4:	60f0      	str	r0, [r6, #12]
 80050b6:	689a      	ldr	r2, [r3, #8]
 80050b8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80050bc:	4b21      	ldr	r3, [pc, #132]	; (8005144 <bmk7_execute+0xf4>)
 80050be:	3201      	adds	r2, #1
 80050c0:	9400      	str	r4, [sp, #0]
 80050c2:	4826      	ldr	r0, [pc, #152]	; (800515c <bmk7_execute+0x10c>)
 80050c4:	f7fd fe1c 	bl	8002d00 <chThdCreateStatic>
 80050c8:	4625      	mov	r5, r4
 80050ca:	6130      	str	r0, [r6, #16]
 80050cc:	f7fe fdc0 	bl	8003c50 <test_wait_tick>
 80050d0:	2620      	movs	r6, #32
 80050d2:	f7fc f985 	bl	80013e0 <test_start_timer.constprop.3>
 80050d6:	f8df 8098 	ldr.w	r8, [pc, #152]	; 8005170 <bmk7_execute+0x120>
 80050da:	4f21      	ldr	r7, [pc, #132]	; (8005160 <bmk7_execute+0x110>)
 80050dc:	f386 8811 	msr	BASEPRI, r6
 80050e0:	2100      	movs	r1, #0
 80050e2:	4638      	mov	r0, r7
 80050e4:	f7fc f8cc 	bl	8001280 <chSemResetI>
 80050e8:	f7fc fe6a 	bl	8001dc0 <chSchRescheduleS>
 80050ec:	f385 8811 	msr	BASEPRI, r5
 80050f0:	f898 3000 	ldrb.w	r3, [r8]
 80050f4:	3401      	adds	r4, #1
 80050f6:	2b00      	cmp	r3, #0
 80050f8:	d0f0      	beq.n	80050dc <bmk7_execute+0x8c>
 80050fa:	f7fb fad1 	bl	80006a0 <test_terminate_threads>
 80050fe:	f386 8811 	msr	BASEPRI, r6
 8005102:	2100      	movs	r1, #0
 8005104:	4816      	ldr	r0, [pc, #88]	; (8005160 <bmk7_execute+0x110>)
 8005106:	f7fc f8bb 	bl	8001280 <chSemResetI>
 800510a:	f7fc fe59 	bl	8001dc0 <chSchRescheduleS>
 800510e:	f385 8811 	msr	BASEPRI, r5
 8005112:	f7ff ff15 	bl	8004f40 <test_wait_threads>
 8005116:	4813      	ldr	r0, [pc, #76]	; (8005164 <bmk7_execute+0x114>)
 8005118:	f7fb fb92 	bl	8000840 <test_print>
 800511c:	4620      	mov	r0, r4
 800511e:	f7fb fa97 	bl	8000650 <test_printn>
 8005122:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8005126:	4810      	ldr	r0, [pc, #64]	; (8005168 <bmk7_execute+0x118>)
 8005128:	f7fb fb8a 	bl	8000840 <test_print>
 800512c:	0060      	lsls	r0, r4, #1
 800512e:	f7fb fa8f 	bl	8000650 <test_printn>
 8005132:	480e      	ldr	r0, [pc, #56]	; (800516c <bmk7_execute+0x11c>)
 8005134:	b002      	add	sp, #8
 8005136:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800513a:	f7fb bb61 	b.w	8000800 <test_println>
 800513e:	bf00      	nop
 8005140:	20001558 	.word	0x20001558
 8005144:	08004c61 	.word	0x08004c61
 8005148:	200017b0 	.word	0x200017b0
 800514c:	20001e44 	.word	0x20001e44
 8005150:	200018f8 	.word	0x200018f8
 8005154:	20001a40 	.word	0x20001a40
 8005158:	20001b88 	.word	0x20001b88
 800515c:	20001cd0 	.word	0x20001cd0
 8005160:	200017a0 	.word	0x200017a0
 8005164:	08007600 	.word	0x08007600
 8005168:	08007710 	.word	0x08007710
 800516c:	08007730 	.word	0x08007730
 8005170:	20001e40 	.word	0x20001e40
	...

08005180 <bmk4_execute>:
 8005180:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005184:	2500      	movs	r5, #0
 8005186:	4a23      	ldr	r2, [pc, #140]	; (8005214 <bmk4_execute+0x94>)
 8005188:	b082      	sub	sp, #8
 800518a:	6992      	ldr	r2, [r2, #24]
 800518c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005190:	6892      	ldr	r2, [r2, #8]
 8005192:	4b21      	ldr	r3, [pc, #132]	; (8005218 <bmk4_execute+0x98>)
 8005194:	3201      	adds	r2, #1
 8005196:	4821      	ldr	r0, [pc, #132]	; (800521c <bmk4_execute+0x9c>)
 8005198:	9500      	str	r5, [sp, #0]
 800519a:	f7fd fdb1 	bl	8002d00 <chThdCreateStatic>
 800519e:	4b20      	ldr	r3, [pc, #128]	; (8005220 <bmk4_execute+0xa0>)
 80051a0:	4604      	mov	r4, r0
 80051a2:	6018      	str	r0, [r3, #0]
 80051a4:	462e      	mov	r6, r5
 80051a6:	f7fe fd53 	bl	8003c50 <test_wait_tick>
 80051aa:	2720      	movs	r7, #32
 80051ac:	f7fc f918 	bl	80013e0 <test_start_timer.constprop.3>
 80051b0:	f8df 8078 	ldr.w	r8, [pc, #120]	; 800522c <bmk4_execute+0xac>
 80051b4:	f387 8811 	msr	BASEPRI, r7
 80051b8:	2100      	movs	r1, #0
 80051ba:	4620      	mov	r0, r4
 80051bc:	f7fd fcc0 	bl	8002b40 <chSchWakeupS>
 80051c0:	4620      	mov	r0, r4
 80051c2:	2100      	movs	r1, #0
 80051c4:	f7fd fcbc 	bl	8002b40 <chSchWakeupS>
 80051c8:	4620      	mov	r0, r4
 80051ca:	2100      	movs	r1, #0
 80051cc:	f7fd fcb8 	bl	8002b40 <chSchWakeupS>
 80051d0:	4620      	mov	r0, r4
 80051d2:	2100      	movs	r1, #0
 80051d4:	f7fd fcb4 	bl	8002b40 <chSchWakeupS>
 80051d8:	f386 8811 	msr	BASEPRI, r6
 80051dc:	f898 3000 	ldrb.w	r3, [r8]
 80051e0:	3504      	adds	r5, #4
 80051e2:	2b00      	cmp	r3, #0
 80051e4:	d0e6      	beq.n	80051b4 <bmk4_execute+0x34>
 80051e6:	f387 8811 	msr	BASEPRI, r7
 80051ea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80051ee:	4620      	mov	r0, r4
 80051f0:	f7fd fca6 	bl	8002b40 <chSchWakeupS>
 80051f4:	f386 8811 	msr	BASEPRI, r6
 80051f8:	f7ff fea2 	bl	8004f40 <test_wait_threads>
 80051fc:	4809      	ldr	r0, [pc, #36]	; (8005224 <bmk4_execute+0xa4>)
 80051fe:	f7fb fb1f 	bl	8000840 <test_print>
 8005202:	0068      	lsls	r0, r5, #1
 8005204:	f7fb fa24 	bl	8000650 <test_printn>
 8005208:	4807      	ldr	r0, [pc, #28]	; (8005228 <bmk4_execute+0xa8>)
 800520a:	b002      	add	sp, #8
 800520c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005210:	f7fb baf6 	b.w	8000800 <test_println>
 8005214:	20001558 	.word	0x20001558
 8005218:	08002f11 	.word	0x08002f11
 800521c:	200017b0 	.word	0x200017b0
 8005220:	20001e44 	.word	0x20001e44
 8005224:	08007600 	.word	0x08007600
 8005228:	08007730 	.word	0x08007730
 800522c:	20001e40 	.word	0x20001e40

08005230 <bmk3_execute>:
 8005230:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005234:	2600      	movs	r6, #0
 8005236:	4f2c      	ldr	r7, [pc, #176]	; (80052e8 <bmk3_execute+0xb8>)
 8005238:	4d2c      	ldr	r5, [pc, #176]	; (80052ec <bmk3_execute+0xbc>)
 800523a:	69bb      	ldr	r3, [r7, #24]
 800523c:	b082      	sub	sp, #8
 800523e:	689a      	ldr	r2, [r3, #8]
 8005240:	4628      	mov	r0, r5
 8005242:	4b2b      	ldr	r3, [pc, #172]	; (80052f0 <bmk3_execute+0xc0>)
 8005244:	3201      	adds	r2, #1
 8005246:	9600      	str	r6, [sp, #0]
 8005248:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800524c:	f7fd fd58 	bl	8002d00 <chThdCreateStatic>
 8005250:	69bb      	ldr	r3, [r7, #24]
 8005252:	4c28      	ldr	r4, [pc, #160]	; (80052f4 <bmk3_execute+0xc4>)
 8005254:	689a      	ldr	r2, [r3, #8]
 8005256:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 8005304 <bmk3_execute+0xd4>
 800525a:	6020      	str	r0, [r4, #0]
 800525c:	4643      	mov	r3, r8
 800525e:	3a02      	subs	r2, #2
 8005260:	9600      	str	r6, [sp, #0]
 8005262:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8005266:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800526a:	f7fd fd49 	bl	8002d00 <chThdCreateStatic>
 800526e:	69bb      	ldr	r3, [r7, #24]
 8005270:	6060      	str	r0, [r4, #4]
 8005272:	689a      	ldr	r2, [r3, #8]
 8005274:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8005278:	4643      	mov	r3, r8
 800527a:	3a03      	subs	r2, #3
 800527c:	9600      	str	r6, [sp, #0]
 800527e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005282:	f7fd fd3d 	bl	8002d00 <chThdCreateStatic>
 8005286:	69bb      	ldr	r3, [r7, #24]
 8005288:	60a0      	str	r0, [r4, #8]
 800528a:	689a      	ldr	r2, [r3, #8]
 800528c:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8005290:	4643      	mov	r3, r8
 8005292:	3a04      	subs	r2, #4
 8005294:	9600      	str	r6, [sp, #0]
 8005296:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800529a:	f7fd fd31 	bl	8002d00 <chThdCreateStatic>
 800529e:	69bb      	ldr	r3, [r7, #24]
 80052a0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80052a4:	689a      	ldr	r2, [r3, #8]
 80052a6:	60e0      	str	r0, [r4, #12]
 80052a8:	4643      	mov	r3, r8
 80052aa:	3a05      	subs	r2, #5
 80052ac:	9600      	str	r6, [sp, #0]
 80052ae:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 80052b2:	f7fd fd25 	bl	8002d00 <chThdCreateStatic>
 80052b6:	6120      	str	r0, [r4, #16]
 80052b8:	6820      	ldr	r0, [r4, #0]
 80052ba:	f7fe feb9 	bl	8004030 <msg_loop_test>
 80052be:	4604      	mov	r4, r0
 80052c0:	f7ff fe3e 	bl	8004f40 <test_wait_threads>
 80052c4:	480c      	ldr	r0, [pc, #48]	; (80052f8 <bmk3_execute+0xc8>)
 80052c6:	f7fb fabb 	bl	8000840 <test_print>
 80052ca:	4620      	mov	r0, r4
 80052cc:	f7fb f9c0 	bl	8000650 <test_printn>
 80052d0:	480a      	ldr	r0, [pc, #40]	; (80052fc <bmk3_execute+0xcc>)
 80052d2:	f7fb fab5 	bl	8000840 <test_print>
 80052d6:	0060      	lsls	r0, r4, #1
 80052d8:	f7fb f9ba 	bl	8000650 <test_printn>
 80052dc:	4808      	ldr	r0, [pc, #32]	; (8005300 <bmk3_execute+0xd0>)
 80052de:	b002      	add	sp, #8
 80052e0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80052e4:	f7fb ba8c 	b.w	8000800 <test_println>
 80052e8:	20001558 	.word	0x20001558
 80052ec:	200017b0 	.word	0x200017b0
 80052f0:	08003f31 	.word	0x08003f31
 80052f4:	20001e44 	.word	0x20001e44
 80052f8:	08007600 	.word	0x08007600
 80052fc:	080076f0 	.word	0x080076f0
 8005300:	08007730 	.word	0x08007730
 8005304:	080072d1 	.word	0x080072d1
	...

08005310 <bmk2_execute>:
 8005310:	b510      	push	{r4, lr}
 8005312:	2400      	movs	r4, #0
 8005314:	4a12      	ldr	r2, [pc, #72]	; (8005360 <bmk2_execute+0x50>)
 8005316:	b082      	sub	sp, #8
 8005318:	6992      	ldr	r2, [r2, #24]
 800531a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800531e:	6892      	ldr	r2, [r2, #8]
 8005320:	4b10      	ldr	r3, [pc, #64]	; (8005364 <bmk2_execute+0x54>)
 8005322:	3201      	adds	r2, #1
 8005324:	9400      	str	r4, [sp, #0]
 8005326:	4810      	ldr	r0, [pc, #64]	; (8005368 <bmk2_execute+0x58>)
 8005328:	f7fd fcea 	bl	8002d00 <chThdCreateStatic>
 800532c:	4b0f      	ldr	r3, [pc, #60]	; (800536c <bmk2_execute+0x5c>)
 800532e:	6018      	str	r0, [r3, #0]
 8005330:	f7fe fe7e 	bl	8004030 <msg_loop_test>
 8005334:	4604      	mov	r4, r0
 8005336:	f7ff fe03 	bl	8004f40 <test_wait_threads>
 800533a:	480d      	ldr	r0, [pc, #52]	; (8005370 <bmk2_execute+0x60>)
 800533c:	f7fb fa80 	bl	8000840 <test_print>
 8005340:	4620      	mov	r0, r4
 8005342:	f7fb f985 	bl	8000650 <test_printn>
 8005346:	480b      	ldr	r0, [pc, #44]	; (8005374 <bmk2_execute+0x64>)
 8005348:	f7fb fa7a 	bl	8000840 <test_print>
 800534c:	0060      	lsls	r0, r4, #1
 800534e:	f7fb f97f 	bl	8000650 <test_printn>
 8005352:	4809      	ldr	r0, [pc, #36]	; (8005378 <bmk2_execute+0x68>)
 8005354:	b002      	add	sp, #8
 8005356:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800535a:	f7fb ba51 	b.w	8000800 <test_println>
 800535e:	bf00      	nop
 8005360:	20001558 	.word	0x20001558
 8005364:	08003f31 	.word	0x08003f31
 8005368:	200017b0 	.word	0x200017b0
 800536c:	20001e44 	.word	0x20001e44
 8005370:	08007600 	.word	0x08007600
 8005374:	080076f0 	.word	0x080076f0
 8005378:	08007730 	.word	0x08007730
 800537c:	00000000 	.word	0x00000000

08005380 <bmk1_execute>:
 8005380:	b510      	push	{r4, lr}
 8005382:	2400      	movs	r4, #0
 8005384:	4a12      	ldr	r2, [pc, #72]	; (80053d0 <bmk1_execute+0x50>)
 8005386:	b082      	sub	sp, #8
 8005388:	6992      	ldr	r2, [r2, #24]
 800538a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800538e:	6892      	ldr	r2, [r2, #8]
 8005390:	4b10      	ldr	r3, [pc, #64]	; (80053d4 <bmk1_execute+0x54>)
 8005392:	3a01      	subs	r2, #1
 8005394:	9400      	str	r4, [sp, #0]
 8005396:	4810      	ldr	r0, [pc, #64]	; (80053d8 <bmk1_execute+0x58>)
 8005398:	f7fd fcb2 	bl	8002d00 <chThdCreateStatic>
 800539c:	4b0f      	ldr	r3, [pc, #60]	; (80053dc <bmk1_execute+0x5c>)
 800539e:	6018      	str	r0, [r3, #0]
 80053a0:	f7fe fe46 	bl	8004030 <msg_loop_test>
 80053a4:	4604      	mov	r4, r0
 80053a6:	f7ff fdcb 	bl	8004f40 <test_wait_threads>
 80053aa:	480d      	ldr	r0, [pc, #52]	; (80053e0 <bmk1_execute+0x60>)
 80053ac:	f7fb fa48 	bl	8000840 <test_print>
 80053b0:	4620      	mov	r0, r4
 80053b2:	f7fb f94d 	bl	8000650 <test_printn>
 80053b6:	480b      	ldr	r0, [pc, #44]	; (80053e4 <bmk1_execute+0x64>)
 80053b8:	f7fb fa42 	bl	8000840 <test_print>
 80053bc:	0060      	lsls	r0, r4, #1
 80053be:	f7fb f947 	bl	8000650 <test_printn>
 80053c2:	4809      	ldr	r0, [pc, #36]	; (80053e8 <bmk1_execute+0x68>)
 80053c4:	b002      	add	sp, #8
 80053c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80053ca:	f7fb ba19 	b.w	8000800 <test_println>
 80053ce:	bf00      	nop
 80053d0:	20001558 	.word	0x20001558
 80053d4:	08003f31 	.word	0x08003f31
 80053d8:	200017b0 	.word	0x200017b0
 80053dc:	20001e44 	.word	0x20001e44
 80053e0:	08007600 	.word	0x08007600
 80053e4:	080076f0 	.word	0x080076f0
 80053e8:	08007730 	.word	0x08007730
 80053ec:	00000000 	.word	0x00000000

080053f0 <queues2_execute>:
 80053f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80053f4:	2320      	movs	r3, #32
 80053f6:	b082      	sub	sp, #8
 80053f8:	f383 8811 	msr	BASEPRI, r3
 80053fc:	4d82      	ldr	r5, [pc, #520]	; (8005608 <queues2_execute+0x218>)
 80053fe:	e9d5 3205 	ldrd	r3, r2, [r5, #20]
 8005402:	429a      	cmp	r2, r3
 8005404:	d03e      	beq.n	8005484 <queues2_execute+0x94>
 8005406:	2100      	movs	r1, #0
 8005408:	2001      	movs	r0, #1
 800540a:	f7fb f9a9 	bl	8000760 <_test_assert>
 800540e:	bb98      	cbnz	r0, 8005478 <queues2_execute+0x88>
 8005410:	f380 8811 	msr	BASEPRI, r0
 8005414:	2441      	movs	r4, #65	; 0x41
 8005416:	4e7c      	ldr	r6, [pc, #496]	; (8005608 <queues2_execute+0x218>)
 8005418:	4621      	mov	r1, r4
 800541a:	3401      	adds	r4, #1
 800541c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005420:	4630      	mov	r0, r6
 8005422:	b2e4      	uxtb	r4, r4
 8005424:	f7fe fa64 	bl	80038f0 <chOQPutTimeout>
 8005428:	2c45      	cmp	r4, #69	; 0x45
 800542a:	d1f5      	bne.n	8005418 <queues2_execute+0x28>
 800542c:	2620      	movs	r6, #32
 800542e:	f386 8811 	msr	BASEPRI, r6
 8005432:	68a9      	ldr	r1, [r5, #8]
 8005434:	2002      	movs	r0, #2
 8005436:	fab1 f181 	clz	r1, r1
 800543a:	0949      	lsrs	r1, r1, #5
 800543c:	f7fb f990 	bl	8000760 <_test_assert>
 8005440:	4607      	mov	r7, r0
 8005442:	b9c8      	cbnz	r0, 8005478 <queues2_execute+0x88>
 8005444:	f380 8811 	msr	BASEPRI, r0
 8005448:	2404      	movs	r4, #4
 800544a:	4680      	mov	r8, r0
 800544c:	f386 8811 	msr	BASEPRI, r6
 8005450:	f7fb fdde 	bl	8001010 <chOQGetI.constprop.22>
 8005454:	f388 8811 	msr	BASEPRI, r8
 8005458:	b2c0      	uxtb	r0, r0
 800545a:	f7fb f999 	bl	8000790 <test_emit_token>
 800545e:	3c01      	subs	r4, #1
 8005460:	d1f4      	bne.n	800544c <queues2_execute+0x5c>
 8005462:	f386 8811 	msr	BASEPRI, r6
 8005466:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 800546a:	429a      	cmp	r2, r3
 800546c:	d028      	beq.n	80054c0 <queues2_execute+0xd0>
 800546e:	4639      	mov	r1, r7
 8005470:	2003      	movs	r0, #3
 8005472:	f7fb f975 	bl	8000760 <_test_assert>
 8005476:	b150      	cbz	r0, 800548e <queues2_execute+0x9e>
 8005478:	2300      	movs	r3, #0
 800547a:	f383 8811 	msr	BASEPRI, r3
 800547e:	b002      	add	sp, #8
 8005480:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005484:	68a9      	ldr	r1, [r5, #8]
 8005486:	3100      	adds	r1, #0
 8005488:	bf18      	it	ne
 800548a:	2101      	movne	r1, #1
 800548c:	e7bc      	b.n	8005408 <queues2_execute+0x18>
 800548e:	f380 8811 	msr	BASEPRI, r0
 8005492:	495e      	ldr	r1, [pc, #376]	; (800560c <queues2_execute+0x21c>)
 8005494:	2004      	movs	r0, #4
 8005496:	f7fb f93b 	bl	8000710 <_test_assert_sequence>
 800549a:	4604      	mov	r4, r0
 800549c:	2800      	cmp	r0, #0
 800549e:	d1ee      	bne.n	800547e <queues2_execute+0x8e>
 80054a0:	2620      	movs	r6, #32
 80054a2:	f386 8811 	msr	BASEPRI, r6
 80054a6:	f7fb fdb3 	bl	8001010 <chOQGetI.constprop.22>
 80054aa:	3003      	adds	r0, #3
 80054ac:	bf14      	ite	ne
 80054ae:	2100      	movne	r1, #0
 80054b0:	2101      	moveq	r1, #1
 80054b2:	2005      	movs	r0, #5
 80054b4:	f7fb f954 	bl	8000760 <_test_assert>
 80054b8:	b138      	cbz	r0, 80054ca <queues2_execute+0xda>
 80054ba:	f384 8811 	msr	BASEPRI, r4
 80054be:	e7de      	b.n	800547e <queues2_execute+0x8e>
 80054c0:	68af      	ldr	r7, [r5, #8]
 80054c2:	3700      	adds	r7, #0
 80054c4:	bf18      	it	ne
 80054c6:	2701      	movne	r7, #1
 80054c8:	e7d1      	b.n	800546e <queues2_execute+0x7e>
 80054ca:	f380 8811 	msr	BASEPRI, r0
 80054ce:	2208      	movs	r2, #8
 80054d0:	4603      	mov	r3, r0
 80054d2:	494f      	ldr	r1, [pc, #316]	; (8005610 <queues2_execute+0x220>)
 80054d4:	484c      	ldr	r0, [pc, #304]	; (8005608 <queues2_execute+0x218>)
 80054d6:	f7fe f9b3 	bl	8003840 <chOQWriteTimeout>
 80054da:	f1a0 0104 	sub.w	r1, r0, #4
 80054de:	fab1 f181 	clz	r1, r1
 80054e2:	2006      	movs	r0, #6
 80054e4:	0949      	lsrs	r1, r1, #5
 80054e6:	f7fb f93b 	bl	8000760 <_test_assert>
 80054ea:	4604      	mov	r4, r0
 80054ec:	2800      	cmp	r0, #0
 80054ee:	d1c6      	bne.n	800547e <queues2_execute+0x8e>
 80054f0:	f386 8811 	msr	BASEPRI, r6
 80054f4:	68a9      	ldr	r1, [r5, #8]
 80054f6:	2007      	movs	r0, #7
 80054f8:	fab1 f181 	clz	r1, r1
 80054fc:	0949      	lsrs	r1, r1, #5
 80054fe:	f7fb f92f 	bl	8000760 <_test_assert>
 8005502:	4607      	mov	r7, r0
 8005504:	2800      	cmp	r0, #0
 8005506:	d1d8      	bne.n	80054ba <queues2_execute+0xca>
 8005508:	f380 8811 	msr	BASEPRI, r0
 800550c:	4a41      	ldr	r2, [pc, #260]	; (8005614 <queues2_execute+0x224>)
 800550e:	4b42      	ldr	r3, [pc, #264]	; (8005618 <queues2_execute+0x228>)
 8005510:	6992      	ldr	r2, [r2, #24]
 8005512:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005516:	6892      	ldr	r2, [r2, #8]
 8005518:	4840      	ldr	r0, [pc, #256]	; (800561c <queues2_execute+0x22c>)
 800551a:	3201      	adds	r2, #1
 800551c:	9700      	str	r7, [sp, #0]
 800551e:	f7fd fbef 	bl	8002d00 <chThdCreateStatic>
 8005522:	4b3f      	ldr	r3, [pc, #252]	; (8005620 <queues2_execute+0x230>)
 8005524:	6018      	str	r0, [r3, #0]
 8005526:	f386 8811 	msr	BASEPRI, r6
 800552a:	68a9      	ldr	r1, [r5, #8]
 800552c:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 8005530:	1a9b      	subs	r3, r3, r2
 8005532:	1a59      	subs	r1, r3, r1
 8005534:	f1a1 0104 	sub.w	r1, r1, #4
 8005538:	fab1 f181 	clz	r1, r1
 800553c:	2008      	movs	r0, #8
 800553e:	0949      	lsrs	r1, r1, #5
 8005540:	f7fb f90e 	bl	8000760 <_test_assert>
 8005544:	4604      	mov	r4, r0
 8005546:	b110      	cbz	r0, 800554e <queues2_execute+0x15e>
 8005548:	f387 8811 	msr	BASEPRI, r7
 800554c:	e797      	b.n	800547e <queues2_execute+0x8e>
 800554e:	f380 8811 	msr	BASEPRI, r0
 8005552:	f7ff fcf5 	bl	8004f40 <test_wait_threads>
 8005556:	f386 8811 	msr	BASEPRI, r6
 800555a:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 800555e:	f06f 0101 	mvn.w	r1, #1
 8005562:	1a9b      	subs	r3, r3, r2
 8005564:	4828      	ldr	r0, [pc, #160]	; (8005608 <queues2_execute+0x218>)
 8005566:	e9c5 2205 	strd	r2, r2, [r5, #20]
 800556a:	60ab      	str	r3, [r5, #8]
 800556c:	f7fb fea0 	bl	80012b0 <chThdDequeueAllI>
 8005570:	f384 8811 	msr	BASEPRI, r4
 8005574:	f386 8811 	msr	BASEPRI, r6
 8005578:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 800557c:	68a9      	ldr	r1, [r5, #8]
 800557e:	1a9b      	subs	r3, r3, r2
 8005580:	1a5f      	subs	r7, r3, r1
 8005582:	4279      	negs	r1, r7
 8005584:	4179      	adcs	r1, r7
 8005586:	2009      	movs	r0, #9
 8005588:	f7fb f8ea 	bl	8000760 <_test_assert>
 800558c:	4603      	mov	r3, r0
 800558e:	2800      	cmp	r0, #0
 8005590:	d193      	bne.n	80054ba <queues2_execute+0xca>
 8005592:	f380 8811 	msr	BASEPRI, r0
 8005596:	2202      	movs	r2, #2
 8005598:	491d      	ldr	r1, [pc, #116]	; (8005610 <queues2_execute+0x220>)
 800559a:	481b      	ldr	r0, [pc, #108]	; (8005608 <queues2_execute+0x218>)
 800559c:	f7fe f950 	bl	8003840 <chOQWriteTimeout>
 80055a0:	3802      	subs	r0, #2
 80055a2:	4241      	negs	r1, r0
 80055a4:	4141      	adcs	r1, r0
 80055a6:	200a      	movs	r0, #10
 80055a8:	f7fb f8da 	bl	8000760 <_test_assert>
 80055ac:	4603      	mov	r3, r0
 80055ae:	2800      	cmp	r0, #0
 80055b0:	f47f af65 	bne.w	800547e <queues2_execute+0x8e>
 80055b4:	2202      	movs	r2, #2
 80055b6:	4916      	ldr	r1, [pc, #88]	; (8005610 <queues2_execute+0x220>)
 80055b8:	4813      	ldr	r0, [pc, #76]	; (8005608 <queues2_execute+0x218>)
 80055ba:	f7fe f941 	bl	8003840 <chOQWriteTimeout>
 80055be:	1e82      	subs	r2, r0, #2
 80055c0:	4251      	negs	r1, r2
 80055c2:	4151      	adcs	r1, r2
 80055c4:	200b      	movs	r0, #11
 80055c6:	f7fb f8cb 	bl	8000760 <_test_assert>
 80055ca:	2800      	cmp	r0, #0
 80055cc:	f47f af57 	bne.w	800547e <queues2_execute+0x8e>
 80055d0:	f386 8811 	msr	BASEPRI, r6
 80055d4:	68a9      	ldr	r1, [r5, #8]
 80055d6:	200c      	movs	r0, #12
 80055d8:	fab1 f181 	clz	r1, r1
 80055dc:	0949      	lsrs	r1, r1, #5
 80055de:	f7fb f8bf 	bl	8000760 <_test_assert>
 80055e2:	2800      	cmp	r0, #0
 80055e4:	f47f af48 	bne.w	8005478 <queues2_execute+0x88>
 80055e8:	2100      	movs	r1, #0
 80055ea:	f381 8811 	msr	BASEPRI, r1
 80055ee:	220a      	movs	r2, #10
 80055f0:	4805      	ldr	r0, [pc, #20]	; (8005608 <queues2_execute+0x218>)
 80055f2:	f7fe f97d 	bl	80038f0 <chOQPutTimeout>
 80055f6:	1c43      	adds	r3, r0, #1
 80055f8:	200d      	movs	r0, #13
 80055fa:	4259      	negs	r1, r3
 80055fc:	4159      	adcs	r1, r3
 80055fe:	b002      	add	sp, #8
 8005600:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005604:	f7fb b8ac 	b.w	8000760 <_test_assert>
 8005608:	20000cac 	.word	0x20000cac
 800560c:	08007cf0 	.word	0x08007cf0
 8005610:	200018f8 	.word	0x200018f8
 8005614:	20001558 	.word	0x20001558
 8005618:	08003941 	.word	0x08003941
 800561c:	200017b0 	.word	0x200017b0
 8005620:	20001e44 	.word	0x20001e44
	...

08005630 <queues1_execute>:
 8005630:	b570      	push	{r4, r5, r6, lr}
 8005632:	2620      	movs	r6, #32
 8005634:	b082      	sub	sp, #8
 8005636:	f386 8811 	msr	BASEPRI, r6
 800563a:	4c99      	ldr	r4, [pc, #612]	; (80058a0 <queues1_execute+0x270>)
 800563c:	2001      	movs	r0, #1
 800563e:	68a1      	ldr	r1, [r4, #8]
 8005640:	fab1 f181 	clz	r1, r1
 8005644:	0949      	lsrs	r1, r1, #5
 8005646:	f7fb f88b 	bl	8000760 <_test_assert>
 800564a:	bb10      	cbnz	r0, 8005692 <queues1_execute+0x62>
 800564c:	4605      	mov	r5, r0
 800564e:	f380 8811 	msr	BASEPRI, r0
 8005652:	f386 8811 	msr	BASEPRI, r6
 8005656:	2141      	movs	r1, #65	; 0x41
 8005658:	4620      	mov	r0, r4
 800565a:	f7fb fca9 	bl	8000fb0 <chIQPutI>
 800565e:	4620      	mov	r0, r4
 8005660:	2142      	movs	r1, #66	; 0x42
 8005662:	f7fb fca5 	bl	8000fb0 <chIQPutI>
 8005666:	4620      	mov	r0, r4
 8005668:	2143      	movs	r1, #67	; 0x43
 800566a:	f7fb fca1 	bl	8000fb0 <chIQPutI>
 800566e:	4620      	mov	r0, r4
 8005670:	2144      	movs	r1, #68	; 0x44
 8005672:	f7fb fc9d 	bl	8000fb0 <chIQPutI>
 8005676:	f385 8811 	msr	BASEPRI, r5
 800567a:	f386 8811 	msr	BASEPRI, r6
 800567e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8005682:	429a      	cmp	r2, r3
 8005684:	d038      	beq.n	80056f8 <queues1_execute+0xc8>
 8005686:	4629      	mov	r1, r5
 8005688:	2002      	movs	r0, #2
 800568a:	f7fb f869 	bl	8000760 <_test_assert>
 800568e:	4605      	mov	r5, r0
 8005690:	b120      	cbz	r0, 800569c <queues1_execute+0x6c>
 8005692:	2300      	movs	r3, #0
 8005694:	f383 8811 	msr	BASEPRI, r3
 8005698:	b002      	add	sp, #8
 800569a:	bd70      	pop	{r4, r5, r6, pc}
 800569c:	f380 8811 	msr	BASEPRI, r0
 80056a0:	2320      	movs	r3, #32
 80056a2:	f383 8811 	msr	BASEPRI, r3
 80056a6:	487e      	ldr	r0, [pc, #504]	; (80058a0 <queues1_execute+0x270>)
 80056a8:	4629      	mov	r1, r5
 80056aa:	f7fb fc81 	bl	8000fb0 <chIQPutI>
 80056ae:	3004      	adds	r0, #4
 80056b0:	bf14      	ite	ne
 80056b2:	2100      	movne	r1, #0
 80056b4:	2101      	moveq	r1, #1
 80056b6:	2003      	movs	r0, #3
 80056b8:	f7fb f852 	bl	8000760 <_test_assert>
 80056bc:	b9c0      	cbnz	r0, 80056f0 <queues1_execute+0xc0>
 80056be:	f380 8811 	msr	BASEPRI, r0
 80056c2:	2504      	movs	r5, #4
 80056c4:	4e76      	ldr	r6, [pc, #472]	; (80058a0 <queues1_execute+0x270>)
 80056c6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80056ca:	4630      	mov	r0, r6
 80056cc:	f7fe f9a0 	bl	8003a10 <chIQGetTimeout>
 80056d0:	b2c0      	uxtb	r0, r0
 80056d2:	f7fb f85d 	bl	8000790 <test_emit_token>
 80056d6:	3d01      	subs	r5, #1
 80056d8:	d1f5      	bne.n	80056c6 <queues1_execute+0x96>
 80056da:	2620      	movs	r6, #32
 80056dc:	f386 8811 	msr	BASEPRI, r6
 80056e0:	68a1      	ldr	r1, [r4, #8]
 80056e2:	2004      	movs	r0, #4
 80056e4:	fab1 f181 	clz	r1, r1
 80056e8:	0949      	lsrs	r1, r1, #5
 80056ea:	f7fb f839 	bl	8000760 <_test_assert>
 80056ee:	b178      	cbz	r0, 8005710 <queues1_execute+0xe0>
 80056f0:	f385 8811 	msr	BASEPRI, r5
 80056f4:	b002      	add	sp, #8
 80056f6:	bd70      	pop	{r4, r5, r6, pc}
 80056f8:	68a5      	ldr	r5, [r4, #8]
 80056fa:	2002      	movs	r0, #2
 80056fc:	3500      	adds	r5, #0
 80056fe:	bf18      	it	ne
 8005700:	2501      	movne	r5, #1
 8005702:	4629      	mov	r1, r5
 8005704:	f7fb f82c 	bl	8000760 <_test_assert>
 8005708:	4605      	mov	r5, r0
 800570a:	2800      	cmp	r0, #0
 800570c:	d1c1      	bne.n	8005692 <queues1_execute+0x62>
 800570e:	e7c5      	b.n	800569c <queues1_execute+0x6c>
 8005710:	f385 8811 	msr	BASEPRI, r5
 8005714:	4963      	ldr	r1, [pc, #396]	; (80058a4 <queues1_execute+0x274>)
 8005716:	2005      	movs	r0, #5
 8005718:	f7fa fffa 	bl	8000710 <_test_assert_sequence>
 800571c:	2800      	cmp	r0, #0
 800571e:	d1bb      	bne.n	8005698 <queues1_execute+0x68>
 8005720:	f386 8811 	msr	BASEPRI, r6
 8005724:	2141      	movs	r1, #65	; 0x41
 8005726:	485e      	ldr	r0, [pc, #376]	; (80058a0 <queues1_execute+0x270>)
 8005728:	f7fb fc42 	bl	8000fb0 <chIQPutI>
 800572c:	2142      	movs	r1, #66	; 0x42
 800572e:	485c      	ldr	r0, [pc, #368]	; (80058a0 <queues1_execute+0x270>)
 8005730:	f7fb fc3e 	bl	8000fb0 <chIQPutI>
 8005734:	2143      	movs	r1, #67	; 0x43
 8005736:	485a      	ldr	r0, [pc, #360]	; (80058a0 <queues1_execute+0x270>)
 8005738:	f7fb fc3a 	bl	8000fb0 <chIQPutI>
 800573c:	2144      	movs	r1, #68	; 0x44
 800573e:	4858      	ldr	r0, [pc, #352]	; (80058a0 <queues1_execute+0x270>)
 8005740:	f7fb fc36 	bl	8000fb0 <chIQPutI>
 8005744:	f385 8811 	msr	BASEPRI, r5
 8005748:	4957      	ldr	r1, [pc, #348]	; (80058a8 <queues1_execute+0x278>)
 800574a:	2208      	movs	r2, #8
 800574c:	462b      	mov	r3, r5
 800574e:	4854      	ldr	r0, [pc, #336]	; (80058a0 <queues1_execute+0x270>)
 8005750:	f7fe f90e 	bl	8003970 <chIQReadTimeout>
 8005754:	f1a0 0104 	sub.w	r1, r0, #4
 8005758:	fab1 f181 	clz	r1, r1
 800575c:	2006      	movs	r0, #6
 800575e:	0949      	lsrs	r1, r1, #5
 8005760:	f7fa fffe 	bl	8000760 <_test_assert>
 8005764:	2800      	cmp	r0, #0
 8005766:	d197      	bne.n	8005698 <queues1_execute+0x68>
 8005768:	f386 8811 	msr	BASEPRI, r6
 800576c:	68a1      	ldr	r1, [r4, #8]
 800576e:	2007      	movs	r0, #7
 8005770:	fab1 f181 	clz	r1, r1
 8005774:	0949      	lsrs	r1, r1, #5
 8005776:	f7fa fff3 	bl	8000760 <_test_assert>
 800577a:	2800      	cmp	r0, #0
 800577c:	d1b8      	bne.n	80056f0 <queues1_execute+0xc0>
 800577e:	f385 8811 	msr	BASEPRI, r5
 8005782:	f386 8811 	msr	BASEPRI, r6
 8005786:	2141      	movs	r1, #65	; 0x41
 8005788:	4845      	ldr	r0, [pc, #276]	; (80058a0 <queues1_execute+0x270>)
 800578a:	f7fb fc11 	bl	8000fb0 <chIQPutI>
 800578e:	2142      	movs	r1, #66	; 0x42
 8005790:	4843      	ldr	r0, [pc, #268]	; (80058a0 <queues1_execute+0x270>)
 8005792:	f7fb fc0d 	bl	8000fb0 <chIQPutI>
 8005796:	2143      	movs	r1, #67	; 0x43
 8005798:	4841      	ldr	r0, [pc, #260]	; (80058a0 <queues1_execute+0x270>)
 800579a:	f7fb fc09 	bl	8000fb0 <chIQPutI>
 800579e:	2144      	movs	r1, #68	; 0x44
 80057a0:	483f      	ldr	r0, [pc, #252]	; (80058a0 <queues1_execute+0x270>)
 80057a2:	f7fb fc05 	bl	8000fb0 <chIQPutI>
 80057a6:	f385 8811 	msr	BASEPRI, r5
 80057aa:	493f      	ldr	r1, [pc, #252]	; (80058a8 <queues1_execute+0x278>)
 80057ac:	2202      	movs	r2, #2
 80057ae:	462b      	mov	r3, r5
 80057b0:	483b      	ldr	r0, [pc, #236]	; (80058a0 <queues1_execute+0x270>)
 80057b2:	f7fe f8dd 	bl	8003970 <chIQReadTimeout>
 80057b6:	f1a0 0102 	sub.w	r1, r0, #2
 80057ba:	fab1 f181 	clz	r1, r1
 80057be:	2008      	movs	r0, #8
 80057c0:	0949      	lsrs	r1, r1, #5
 80057c2:	f7fa ffcd 	bl	8000760 <_test_assert>
 80057c6:	2800      	cmp	r0, #0
 80057c8:	f47f af66 	bne.w	8005698 <queues1_execute+0x68>
 80057cc:	4936      	ldr	r1, [pc, #216]	; (80058a8 <queues1_execute+0x278>)
 80057ce:	462b      	mov	r3, r5
 80057d0:	2202      	movs	r2, #2
 80057d2:	4833      	ldr	r0, [pc, #204]	; (80058a0 <queues1_execute+0x270>)
 80057d4:	f7fe f8cc 	bl	8003970 <chIQReadTimeout>
 80057d8:	f1a0 0102 	sub.w	r1, r0, #2
 80057dc:	fab1 f181 	clz	r1, r1
 80057e0:	2009      	movs	r0, #9
 80057e2:	0949      	lsrs	r1, r1, #5
 80057e4:	f7fa ffbc 	bl	8000760 <_test_assert>
 80057e8:	2800      	cmp	r0, #0
 80057ea:	f47f af55 	bne.w	8005698 <queues1_execute+0x68>
 80057ee:	f386 8811 	msr	BASEPRI, r6
 80057f2:	68a1      	ldr	r1, [r4, #8]
 80057f4:	200a      	movs	r0, #10
 80057f6:	fab1 f181 	clz	r1, r1
 80057fa:	0949      	lsrs	r1, r1, #5
 80057fc:	f7fa ffb0 	bl	8000760 <_test_assert>
 8005800:	2800      	cmp	r0, #0
 8005802:	f47f af75 	bne.w	80056f0 <queues1_execute+0xc0>
 8005806:	f385 8811 	msr	BASEPRI, r5
 800580a:	f386 8811 	msr	BASEPRI, r6
 800580e:	4824      	ldr	r0, [pc, #144]	; (80058a0 <queues1_execute+0x270>)
 8005810:	4629      	mov	r1, r5
 8005812:	f7fb fbcd 	bl	8000fb0 <chIQPutI>
 8005816:	68e3      	ldr	r3, [r4, #12]
 8005818:	f06f 0101 	mvn.w	r1, #1
 800581c:	4820      	ldr	r0, [pc, #128]	; (80058a0 <queues1_execute+0x270>)
 800581e:	60a5      	str	r5, [r4, #8]
 8005820:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8005824:	f7fb fd44 	bl	80012b0 <chThdDequeueAllI>
 8005828:	f385 8811 	msr	BASEPRI, r5
 800582c:	f386 8811 	msr	BASEPRI, r6
 8005830:	68a1      	ldr	r1, [r4, #8]
 8005832:	200b      	movs	r0, #11
 8005834:	fab1 f181 	clz	r1, r1
 8005838:	0949      	lsrs	r1, r1, #5
 800583a:	f7fa ff91 	bl	8000760 <_test_assert>
 800583e:	2800      	cmp	r0, #0
 8005840:	f47f af56 	bne.w	80056f0 <queues1_execute+0xc0>
 8005844:	f385 8811 	msr	BASEPRI, r5
 8005848:	4a18      	ldr	r2, [pc, #96]	; (80058ac <queues1_execute+0x27c>)
 800584a:	4b19      	ldr	r3, [pc, #100]	; (80058b0 <queues1_execute+0x280>)
 800584c:	6992      	ldr	r2, [r2, #24]
 800584e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005852:	6892      	ldr	r2, [r2, #8]
 8005854:	4817      	ldr	r0, [pc, #92]	; (80058b4 <queues1_execute+0x284>)
 8005856:	9500      	str	r5, [sp, #0]
 8005858:	3201      	adds	r2, #1
 800585a:	f7fd fa51 	bl	8002d00 <chThdCreateStatic>
 800585e:	4b16      	ldr	r3, [pc, #88]	; (80058b8 <queues1_execute+0x288>)
 8005860:	6018      	str	r0, [r3, #0]
 8005862:	f386 8811 	msr	BASEPRI, r6
 8005866:	68a1      	ldr	r1, [r4, #8]
 8005868:	200c      	movs	r0, #12
 800586a:	fab1 f181 	clz	r1, r1
 800586e:	0949      	lsrs	r1, r1, #5
 8005870:	f7fa ff76 	bl	8000760 <_test_assert>
 8005874:	2300      	movs	r3, #0
 8005876:	b110      	cbz	r0, 800587e <queues1_execute+0x24e>
 8005878:	f383 8811 	msr	BASEPRI, r3
 800587c:	e70c      	b.n	8005698 <queues1_execute+0x68>
 800587e:	f383 8811 	msr	BASEPRI, r3
 8005882:	f7ff fb5d 	bl	8004f40 <test_wait_threads>
 8005886:	210a      	movs	r1, #10
 8005888:	4805      	ldr	r0, [pc, #20]	; (80058a0 <queues1_execute+0x270>)
 800588a:	f7fe f8c1 	bl	8003a10 <chIQGetTimeout>
 800588e:	1c43      	adds	r3, r0, #1
 8005890:	200d      	movs	r0, #13
 8005892:	4259      	negs	r1, r3
 8005894:	4159      	adcs	r1, r3
 8005896:	b002      	add	sp, #8
 8005898:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800589c:	f7fa bf60 	b.w	8000760 <_test_assert>
 80058a0:	20000c14 	.word	0x20000c14
 80058a4:	08007cf0 	.word	0x08007cf0
 80058a8:	200018f8 	.word	0x200018f8
 80058ac:	20001558 	.word	0x20001558
 80058b0:	08003a61 	.word	0x08003a61
 80058b4:	200017b0 	.word	0x200017b0
 80058b8:	20001e44 	.word	0x20001e44
 80058bc:	00000000 	.word	0x00000000

080058c0 <dyn2_execute>:
 80058c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80058c2:	2720      	movs	r7, #32
 80058c4:	2600      	movs	r6, #0
 80058c6:	4a30      	ldr	r2, [pc, #192]	; (8005988 <dyn2_execute+0xc8>)
 80058c8:	4b30      	ldr	r3, [pc, #192]	; (800598c <dyn2_execute+0xcc>)
 80058ca:	6991      	ldr	r1, [r2, #24]
 80058cc:	4a30      	ldr	r2, [pc, #192]	; (8005990 <dyn2_execute+0xd0>)
 80058ce:	688d      	ldr	r5, [r1, #8]
 80058d0:	4930      	ldr	r1, [pc, #192]	; (8005994 <dyn2_execute+0xd4>)
 80058d2:	f103 040c 	add.w	r4, r3, #12
 80058d6:	f387 8811 	msr	BASEPRI, r7
 80058da:	6808      	ldr	r0, [r1, #0]
 80058dc:	6010      	str	r0, [r2, #0]
 80058de:	600a      	str	r2, [r1, #0]
 80058e0:	f386 8811 	msr	BASEPRI, r6
 80058e4:	429c      	cmp	r4, r3
 80058e6:	d002      	beq.n	80058ee <dyn2_execute+0x2e>
 80058e8:	f853 2b04 	ldr.w	r2, [r3], #4
 80058ec:	e7f3      	b.n	80058d6 <dyn2_execute+0x16>
 80058ee:	492a      	ldr	r1, [pc, #168]	; (8005998 <dyn2_execute+0xd8>)
 80058f0:	1e68      	subs	r0, r5, #1
 80058f2:	f7fd f955 	bl	8002ba0 <chThdCreateFromMemoryPool.constprop.60>
 80058f6:	4c29      	ldr	r4, [pc, #164]	; (800599c <dyn2_execute+0xdc>)
 80058f8:	4929      	ldr	r1, [pc, #164]	; (80059a0 <dyn2_execute+0xe0>)
 80058fa:	6020      	str	r0, [r4, #0]
 80058fc:	1ea8      	subs	r0, r5, #2
 80058fe:	f7fd f94f 	bl	8002ba0 <chThdCreateFromMemoryPool.constprop.60>
 8005902:	4928      	ldr	r1, [pc, #160]	; (80059a4 <dyn2_execute+0xe4>)
 8005904:	6060      	str	r0, [r4, #4]
 8005906:	1ee8      	subs	r0, r5, #3
 8005908:	f7fd f94a 	bl	8002ba0 <chThdCreateFromMemoryPool.constprop.60>
 800590c:	4926      	ldr	r1, [pc, #152]	; (80059a8 <dyn2_execute+0xe8>)
 800590e:	60a0      	str	r0, [r4, #8]
 8005910:	1f28      	subs	r0, r5, #4
 8005912:	f7fd f945 	bl	8002ba0 <chThdCreateFromMemoryPool.constprop.60>
 8005916:	4925      	ldr	r1, [pc, #148]	; (80059ac <dyn2_execute+0xec>)
 8005918:	60e0      	str	r0, [r4, #12]
 800591a:	1f68      	subs	r0, r5, #5
 800591c:	f7fd f940 	bl	8002ba0 <chThdCreateFromMemoryPool.constprop.60>
 8005920:	6821      	ldr	r1, [r4, #0]
 8005922:	6120      	str	r0, [r4, #16]
 8005924:	b141      	cbz	r1, 8005938 <dyn2_execute+0x78>
 8005926:	6861      	ldr	r1, [r4, #4]
 8005928:	b131      	cbz	r1, 8005938 <dyn2_execute+0x78>
 800592a:	68a1      	ldr	r1, [r4, #8]
 800592c:	b121      	cbz	r1, 8005938 <dyn2_execute+0x78>
 800592e:	68e1      	ldr	r1, [r4, #12]
 8005930:	b111      	cbz	r1, 8005938 <dyn2_execute+0x78>
 8005932:	fab0 f180 	clz	r1, r0
 8005936:	0949      	lsrs	r1, r1, #5
 8005938:	2001      	movs	r0, #1
 800593a:	f7fa ff11 	bl	8000760 <_test_assert>
 800593e:	b100      	cbz	r0, 8005942 <dyn2_execute+0x82>
 8005940:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005942:	f7ff fafd 	bl	8004f40 <test_wait_threads>
 8005946:	491a      	ldr	r1, [pc, #104]	; (80059b0 <dyn2_execute+0xf0>)
 8005948:	2002      	movs	r0, #2
 800594a:	f7fa fee1 	bl	8000710 <_test_assert_sequence>
 800594e:	2800      	cmp	r0, #0
 8005950:	d1f6      	bne.n	8005940 <dyn2_execute+0x80>
 8005952:	2404      	movs	r4, #4
 8005954:	4d0f      	ldr	r5, [pc, #60]	; (8005994 <dyn2_execute+0xd4>)
 8005956:	4628      	mov	r0, r5
 8005958:	f7fb f982 	bl	8000c60 <chPoolAlloc>
 800595c:	1c01      	adds	r1, r0, #0
 800595e:	bf18      	it	ne
 8005960:	2101      	movne	r1, #1
 8005962:	2003      	movs	r0, #3
 8005964:	f7fa fefc 	bl	8000760 <_test_assert>
 8005968:	2800      	cmp	r0, #0
 800596a:	d1e9      	bne.n	8005940 <dyn2_execute+0x80>
 800596c:	3c01      	subs	r4, #1
 800596e:	d1f2      	bne.n	8005956 <dyn2_execute+0x96>
 8005970:	4808      	ldr	r0, [pc, #32]	; (8005994 <dyn2_execute+0xd4>)
 8005972:	f7fb f975 	bl	8000c60 <chPoolAlloc>
 8005976:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800597a:	fab0 f180 	clz	r1, r0
 800597e:	2004      	movs	r0, #4
 8005980:	0949      	lsrs	r1, r1, #5
 8005982:	f7fa beed 	b.w	8000760 <_test_assert>
 8005986:	bf00      	nop
 8005988:	20001558 	.word	0x20001558
 800598c:	08008774 	.word	0x08008774
 8005990:	200017b0 	.word	0x200017b0
 8005994:	20001780 	.word	0x20001780
 8005998:	08007aa0 	.word	0x08007aa0
 800599c:	20001e44 	.word	0x20001e44
 80059a0:	08007a90 	.word	0x08007a90
 80059a4:	08007a94 	.word	0x08007a94
 80059a8:	080082f0 	.word	0x080082f0
 80059ac:	08007b84 	.word	0x08007b84
 80059b0:	08007cf0 	.word	0x08007cf0
	...

080059c0 <dyn1_execute>:
 80059c0:	b570      	push	{r4, r5, r6, lr}
 80059c2:	4b34      	ldr	r3, [pc, #208]	; (8005a94 <dyn1_execute+0xd4>)
 80059c4:	b084      	sub	sp, #16
 80059c6:	699b      	ldr	r3, [r3, #24]
 80059c8:	a902      	add	r1, sp, #8
 80059ca:	4833      	ldr	r0, [pc, #204]	; (8005a98 <dyn1_execute+0xd8>)
 80059cc:	689d      	ldr	r5, [r3, #8]
 80059ce:	f7fe fd4f 	bl	8004470 <chHeapStatus>
 80059d2:	4b32      	ldr	r3, [pc, #200]	; (8005a9c <dyn1_execute+0xdc>)
 80059d4:	1e6a      	subs	r2, r5, #1
 80059d6:	9300      	str	r3, [sp, #0]
 80059d8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80059dc:	4b30      	ldr	r3, [pc, #192]	; (8005aa0 <dyn1_execute+0xe0>)
 80059de:	482e      	ldr	r0, [pc, #184]	; (8005a98 <dyn1_execute+0xd8>)
 80059e0:	f7fe fffe 	bl	80049e0 <chThdCreateFromHeap>
 80059e4:	4c2f      	ldr	r4, [pc, #188]	; (8005aa4 <dyn1_execute+0xe4>)
 80059e6:	4b30      	ldr	r3, [pc, #192]	; (8005aa8 <dyn1_execute+0xe8>)
 80059e8:	1eaa      	subs	r2, r5, #2
 80059ea:	6020      	str	r0, [r4, #0]
 80059ec:	9300      	str	r3, [sp, #0]
 80059ee:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80059f2:	4b2b      	ldr	r3, [pc, #172]	; (8005aa0 <dyn1_execute+0xe0>)
 80059f4:	4828      	ldr	r0, [pc, #160]	; (8005a98 <dyn1_execute+0xd8>)
 80059f6:	f7fe fff3 	bl	80049e0 <chThdCreateFromHeap>
 80059fa:	a903      	add	r1, sp, #12
 80059fc:	6060      	str	r0, [r4, #4]
 80059fe:	4826      	ldr	r0, [pc, #152]	; (8005a98 <dyn1_execute+0xd8>)
 8005a00:	f7fe fd36 	bl	8004470 <chHeapStatus>
 8005a04:	9903      	ldr	r1, [sp, #12]
 8005a06:	4824      	ldr	r0, [pc, #144]	; (8005a98 <dyn1_execute+0xd8>)
 8005a08:	f7fe fe7a 	bl	8004700 <chHeapAlloc>
 8005a0c:	4b27      	ldr	r3, [pc, #156]	; (8005aac <dyn1_execute+0xec>)
 8005a0e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005a12:	4606      	mov	r6, r0
 8005a14:	1eea      	subs	r2, r5, #3
 8005a16:	9300      	str	r3, [sp, #0]
 8005a18:	481f      	ldr	r0, [pc, #124]	; (8005a98 <dyn1_execute+0xd8>)
 8005a1a:	4b21      	ldr	r3, [pc, #132]	; (8005aa0 <dyn1_execute+0xe0>)
 8005a1c:	f7fe ffe0 	bl	80049e0 <chThdCreateFromHeap>
 8005a20:	60a0      	str	r0, [r4, #8]
 8005a22:	4630      	mov	r0, r6
 8005a24:	f7fe fd7c 	bl	8004520 <chHeapFree>
 8005a28:	6821      	ldr	r1, [r4, #0]
 8005a2a:	b121      	cbz	r1, 8005a36 <dyn1_execute+0x76>
 8005a2c:	6861      	ldr	r1, [r4, #4]
 8005a2e:	b111      	cbz	r1, 8005a36 <dyn1_execute+0x76>
 8005a30:	68a1      	ldr	r1, [r4, #8]
 8005a32:	b331      	cbz	r1, 8005a82 <dyn1_execute+0xc2>
 8005a34:	2100      	movs	r1, #0
 8005a36:	2001      	movs	r0, #1
 8005a38:	f7fa fe92 	bl	8000760 <_test_assert>
 8005a3c:	b108      	cbz	r0, 8005a42 <dyn1_execute+0x82>
 8005a3e:	b004      	add	sp, #16
 8005a40:	bd70      	pop	{r4, r5, r6, pc}
 8005a42:	f7ff fa7d 	bl	8004f40 <test_wait_threads>
 8005a46:	491a      	ldr	r1, [pc, #104]	; (8005ab0 <dyn1_execute+0xf0>)
 8005a48:	2002      	movs	r0, #2
 8005a4a:	f7fa fe61 	bl	8000710 <_test_assert_sequence>
 8005a4e:	2800      	cmp	r0, #0
 8005a50:	d1f5      	bne.n	8005a3e <dyn1_execute+0x7e>
 8005a52:	a903      	add	r1, sp, #12
 8005a54:	4810      	ldr	r0, [pc, #64]	; (8005a98 <dyn1_execute+0xd8>)
 8005a56:	f7fe fd0b 	bl	8004470 <chHeapStatus>
 8005a5a:	f1a0 0101 	sub.w	r1, r0, #1
 8005a5e:	fab1 f181 	clz	r1, r1
 8005a62:	2003      	movs	r0, #3
 8005a64:	0949      	lsrs	r1, r1, #5
 8005a66:	f7fa fe7b 	bl	8000760 <_test_assert>
 8005a6a:	2800      	cmp	r0, #0
 8005a6c:	d1e7      	bne.n	8005a3e <dyn1_execute+0x7e>
 8005a6e:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8005a72:	1ac9      	subs	r1, r1, r3
 8005a74:	fab1 f181 	clz	r1, r1
 8005a78:	2004      	movs	r0, #4
 8005a7a:	0949      	lsrs	r1, r1, #5
 8005a7c:	f7fa fe70 	bl	8000760 <_test_assert>
 8005a80:	e7dd      	b.n	8005a3e <dyn1_execute+0x7e>
 8005a82:	68e3      	ldr	r3, [r4, #12]
 8005a84:	2b00      	cmp	r3, #0
 8005a86:	d1d6      	bne.n	8005a36 <dyn1_execute+0x76>
 8005a88:	6921      	ldr	r1, [r4, #16]
 8005a8a:	fab1 f181 	clz	r1, r1
 8005a8e:	0949      	lsrs	r1, r1, #5
 8005a90:	e7d1      	b.n	8005a36 <dyn1_execute+0x76>
 8005a92:	bf00      	nop
 8005a94:	20001558 	.word	0x20001558
 8005a98:	20001728 	.word	0x20001728
 8005a9c:	08007aa0 	.word	0x08007aa0
 8005aa0:	080007f1 	.word	0x080007f1
 8005aa4:	20001e44 	.word	0x20001e44
 8005aa8:	08007a90 	.word	0x08007a90
 8005aac:	08007a94 	.word	0x08007a94
 8005ab0:	08007a80 	.word	0x08007a80
	...

08005ac0 <evt2_execute>:
 8005ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ac4:	2620      	movs	r6, #32
 8005ac6:	b08f      	sub	sp, #60	; 0x3c
 8005ac8:	f386 8811 	msr	BASEPRI, r6
 8005acc:	4cad      	ldr	r4, [pc, #692]	; (8005d84 <evt2_execute+0x2c4>)
 8005ace:	2100      	movs	r1, #0
 8005ad0:	69a2      	ldr	r2, [r4, #24]
 8005ad2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005ad4:	f043 0307 	orr.w	r3, r3, #7
 8005ad8:	6353      	str	r3, [r2, #52]	; 0x34
 8005ada:	f381 8811 	msr	BASEPRI, r1
 8005ade:	f7fd f9df 	bl	8002ea0 <chEvtWaitOne.constprop.40>
 8005ae2:	f1a0 0101 	sub.w	r1, r0, #1
 8005ae6:	fab1 f181 	clz	r1, r1
 8005aea:	2001      	movs	r0, #1
 8005aec:	0949      	lsrs	r1, r1, #5
 8005aee:	f7fa fe37 	bl	8000760 <_test_assert>
 8005af2:	b110      	cbz	r0, 8005afa <evt2_execute+0x3a>
 8005af4:	b00f      	add	sp, #60	; 0x3c
 8005af6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005afa:	f7fd f9d1 	bl	8002ea0 <chEvtWaitOne.constprop.40>
 8005afe:	f1a0 0102 	sub.w	r1, r0, #2
 8005b02:	fab1 f181 	clz	r1, r1
 8005b06:	2002      	movs	r0, #2
 8005b08:	0949      	lsrs	r1, r1, #5
 8005b0a:	f7fa fe29 	bl	8000760 <_test_assert>
 8005b0e:	2800      	cmp	r0, #0
 8005b10:	d1f0      	bne.n	8005af4 <evt2_execute+0x34>
 8005b12:	f7fd f9c5 	bl	8002ea0 <chEvtWaitOne.constprop.40>
 8005b16:	f1a0 0104 	sub.w	r1, r0, #4
 8005b1a:	fab1 f181 	clz	r1, r1
 8005b1e:	2003      	movs	r0, #3
 8005b20:	0949      	lsrs	r1, r1, #5
 8005b22:	f7fa fe1d 	bl	8000760 <_test_assert>
 8005b26:	2800      	cmp	r0, #0
 8005b28:	d1e4      	bne.n	8005af4 <evt2_execute+0x34>
 8005b2a:	f7fa fb89 	bl	8000240 <chEvtGetAndClearEvents.constprop.44>
 8005b2e:	fab0 f180 	clz	r1, r0
 8005b32:	2004      	movs	r0, #4
 8005b34:	0949      	lsrs	r1, r1, #5
 8005b36:	f7fa fe13 	bl	8000760 <_test_assert>
 8005b3a:	4605      	mov	r5, r0
 8005b3c:	2800      	cmp	r0, #0
 8005b3e:	d1d9      	bne.n	8005af4 <evt2_execute+0x34>
 8005b40:	f7fe f886 	bl	8003c50 <test_wait_tick>
 8005b44:	f386 8811 	msr	BASEPRI, r6
 8005b48:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 8005b4c:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
 8005b50:	b2bf      	uxth	r7, r7
 8005b52:	f385 8811 	msr	BASEPRI, r5
 8005b56:	69a0      	ldr	r0, [r4, #24]
 8005b58:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005b5c:	6882      	ldr	r2, [r0, #8]
 8005b5e:	4b8a      	ldr	r3, [pc, #552]	; (8005d88 <evt2_execute+0x2c8>)
 8005b60:	3a01      	subs	r2, #1
 8005b62:	9000      	str	r0, [sp, #0]
 8005b64:	4889      	ldr	r0, [pc, #548]	; (8005d8c <evt2_execute+0x2cc>)
 8005b66:	f7fd f8cb 	bl	8002d00 <chThdCreateStatic>
 8005b6a:	4d89      	ldr	r5, [pc, #548]	; (8005d90 <evt2_execute+0x2d0>)
 8005b6c:	6028      	str	r0, [r5, #0]
 8005b6e:	f7fd f997 	bl	8002ea0 <chEvtWaitOne.constprop.40>
 8005b72:	f107 026e 	add.w	r2, r7, #110	; 0x6e
 8005b76:	f107 0164 	add.w	r1, r7, #100	; 0x64
 8005b7a:	4681      	mov	r9, r0
 8005b7c:	b292      	uxth	r2, r2
 8005b7e:	b289      	uxth	r1, r1
 8005b80:	2005      	movs	r0, #5
 8005b82:	f7fa fda5 	bl	80006d0 <_test_assert_time_window>
 8005b86:	2800      	cmp	r0, #0
 8005b88:	d1b4      	bne.n	8005af4 <evt2_execute+0x34>
 8005b8a:	f1a9 0101 	sub.w	r1, r9, #1
 8005b8e:	fab1 f181 	clz	r1, r1
 8005b92:	2006      	movs	r0, #6
 8005b94:	0949      	lsrs	r1, r1, #5
 8005b96:	f7fa fde3 	bl	8000760 <_test_assert>
 8005b9a:	2800      	cmp	r0, #0
 8005b9c:	d1aa      	bne.n	8005af4 <evt2_execute+0x34>
 8005b9e:	f7fa fb4f 	bl	8000240 <chEvtGetAndClearEvents.constprop.44>
 8005ba2:	fab0 f180 	clz	r1, r0
 8005ba6:	2007      	movs	r0, #7
 8005ba8:	0949      	lsrs	r1, r1, #5
 8005baa:	f7fa fdd9 	bl	8000760 <_test_assert>
 8005bae:	4607      	mov	r7, r0
 8005bb0:	2800      	cmp	r0, #0
 8005bb2:	d19f      	bne.n	8005af4 <evt2_execute+0x34>
 8005bb4:	f7ff f9c4 	bl	8004f40 <test_wait_threads>
 8005bb8:	f386 8811 	msr	BASEPRI, r6
 8005bbc:	69a2      	ldr	r2, [r4, #24]
 8005bbe:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005bc0:	f043 0305 	orr.w	r3, r3, #5
 8005bc4:	6353      	str	r3, [r2, #52]	; 0x34
 8005bc6:	f387 8811 	msr	BASEPRI, r7
 8005bca:	f7fd f989 	bl	8002ee0 <chEvtWaitAny.constprop.39>
 8005bce:	1f47      	subs	r7, r0, #5
 8005bd0:	4279      	negs	r1, r7
 8005bd2:	4179      	adcs	r1, r7
 8005bd4:	2008      	movs	r0, #8
 8005bd6:	f7fa fdc3 	bl	8000760 <_test_assert>
 8005bda:	2800      	cmp	r0, #0
 8005bdc:	d18a      	bne.n	8005af4 <evt2_execute+0x34>
 8005bde:	f7fa fb2f 	bl	8000240 <chEvtGetAndClearEvents.constprop.44>
 8005be2:	fab0 f180 	clz	r1, r0
 8005be6:	2009      	movs	r0, #9
 8005be8:	0949      	lsrs	r1, r1, #5
 8005bea:	f7fa fdb9 	bl	8000760 <_test_assert>
 8005bee:	4607      	mov	r7, r0
 8005bf0:	2800      	cmp	r0, #0
 8005bf2:	f47f af7f 	bne.w	8005af4 <evt2_execute+0x34>
 8005bf6:	f7fe f82b 	bl	8003c50 <test_wait_tick>
 8005bfa:	f386 8811 	msr	BASEPRI, r6
 8005bfe:	f8d8 6024 	ldr.w	r6, [r8, #36]	; 0x24
 8005c02:	b2b6      	uxth	r6, r6
 8005c04:	f387 8811 	msr	BASEPRI, r7
 8005c08:	69a0      	ldr	r0, [r4, #24]
 8005c0a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005c0e:	6882      	ldr	r2, [r0, #8]
 8005c10:	4b5d      	ldr	r3, [pc, #372]	; (8005d88 <evt2_execute+0x2c8>)
 8005c12:	3a01      	subs	r2, #1
 8005c14:	9000      	str	r0, [sp, #0]
 8005c16:	485d      	ldr	r0, [pc, #372]	; (8005d8c <evt2_execute+0x2cc>)
 8005c18:	f7fd f872 	bl	8002d00 <chThdCreateStatic>
 8005c1c:	6028      	str	r0, [r5, #0]
 8005c1e:	f7fd f95f 	bl	8002ee0 <chEvtWaitAny.constprop.39>
 8005c22:	f106 026e 	add.w	r2, r6, #110	; 0x6e
 8005c26:	f106 0164 	add.w	r1, r6, #100	; 0x64
 8005c2a:	4607      	mov	r7, r0
 8005c2c:	b292      	uxth	r2, r2
 8005c2e:	b289      	uxth	r1, r1
 8005c30:	200a      	movs	r0, #10
 8005c32:	f7fa fd4d 	bl	80006d0 <_test_assert_time_window>
 8005c36:	2800      	cmp	r0, #0
 8005c38:	f47f af5c 	bne.w	8005af4 <evt2_execute+0x34>
 8005c3c:	1e78      	subs	r0, r7, #1
 8005c3e:	4241      	negs	r1, r0
 8005c40:	4141      	adcs	r1, r0
 8005c42:	200b      	movs	r0, #11
 8005c44:	f7fa fd8c 	bl	8000760 <_test_assert>
 8005c48:	2800      	cmp	r0, #0
 8005c4a:	f47f af53 	bne.w	8005af4 <evt2_execute+0x34>
 8005c4e:	f7fa faf7 	bl	8000240 <chEvtGetAndClearEvents.constprop.44>
 8005c52:	fab0 f180 	clz	r1, r0
 8005c56:	200c      	movs	r0, #12
 8005c58:	0949      	lsrs	r1, r1, #5
 8005c5a:	f7fa fd81 	bl	8000760 <_test_assert>
 8005c5e:	4680      	mov	r8, r0
 8005c60:	2800      	cmp	r0, #0
 8005c62:	f47f af47 	bne.w	8005af4 <evt2_execute+0x34>
 8005c66:	f7ff f96b 	bl	8004f40 <test_wait_threads>
 8005c6a:	4f4a      	ldr	r7, [pc, #296]	; (8005d94 <evt2_execute+0x2d4>)
 8005c6c:	4b4a      	ldr	r3, [pc, #296]	; (8005d98 <evt2_execute+0x2d8>)
 8005c6e:	f04f 0b20 	mov.w	fp, #32
 8005c72:	603f      	str	r7, [r7, #0]
 8005c74:	461e      	mov	r6, r3
 8005c76:	601b      	str	r3, [r3, #0]
 8005c78:	f38b 8811 	msr	BASEPRI, fp
 8005c7c:	2301      	movs	r3, #1
 8005c7e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005c82:	6838      	ldr	r0, [r7, #0]
 8005c84:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
 8005c88:	69a1      	ldr	r1, [r4, #24]
 8005c8a:	f84a 0d28 	str.w	r0, [sl, #-40]!
 8005c8e:	f8cd 801c 	str.w	r8, [sp, #28]
 8005c92:	e9cd 1305 	strd	r1, r3, [sp, #20]
 8005c96:	f8c7 a000 	str.w	sl, [r7]
 8005c9a:	9208      	str	r2, [sp, #32]
 8005c9c:	f388 8811 	msr	BASEPRI, r8
 8005ca0:	f38b 8811 	msr	BASEPRI, fp
 8005ca4:	2304      	movs	r3, #4
 8005ca6:	6830      	ldr	r0, [r6, #0]
 8005ca8:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 8005cac:	69a1      	ldr	r1, [r4, #24]
 8005cae:	f849 0d14 	str.w	r0, [r9, #-20]!
 8005cb2:	e9cd 820c 	strd	r8, r2, [sp, #48]	; 0x30
 8005cb6:	e9cd 130a 	strd	r1, r3, [sp, #40]	; 0x28
 8005cba:	f8c6 9000 	str.w	r9, [r6]
 8005cbe:	f388 8811 	msr	BASEPRI, r8
 8005cc2:	f7fd ffc5 	bl	8003c50 <test_wait_tick>
 8005cc6:	f38b 8811 	msr	BASEPRI, fp
 8005cca:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005cce:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8005cd0:	b291      	uxth	r1, r2
 8005cd2:	9103      	str	r1, [sp, #12]
 8005cd4:	f388 8811 	msr	BASEPRI, r8
 8005cd8:	69a2      	ldr	r2, [r4, #24]
 8005cda:	4b30      	ldr	r3, [pc, #192]	; (8005d9c <evt2_execute+0x2dc>)
 8005cdc:	6892      	ldr	r2, [r2, #8]
 8005cde:	f101 0c64 	add.w	ip, r1, #100	; 0x64
 8005ce2:	9300      	str	r3, [sp, #0]
 8005ce4:	3a01      	subs	r2, #1
 8005ce6:	4b2e      	ldr	r3, [pc, #184]	; (8005da0 <evt2_execute+0x2e0>)
 8005ce8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005cec:	4827      	ldr	r0, [pc, #156]	; (8005d8c <evt2_execute+0x2cc>)
 8005cee:	fa1f f68c 	uxth.w	r6, ip
 8005cf2:	f7fd f805 	bl	8002d00 <chThdCreateStatic>
 8005cf6:	69a4      	ldr	r4, [r4, #24]
 8005cf8:	6028      	str	r0, [r5, #0]
 8005cfa:	f38b 8811 	msr	BASEPRI, fp
 8005cfe:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005d00:	f003 0205 	and.w	r2, r3, #5
 8005d04:	2a05      	cmp	r2, #5
 8005d06:	d005      	beq.n	8005d14 <evt2_execute+0x254>
 8005d08:	2305      	movs	r3, #5
 8005d0a:	200b      	movs	r0, #11
 8005d0c:	6223      	str	r3, [r4, #32]
 8005d0e:	f7fd f82f 	bl	8002d70 <chSchGoSleepS>
 8005d12:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005d14:	f023 0305 	bic.w	r3, r3, #5
 8005d18:	6363      	str	r3, [r4, #52]	; 0x34
 8005d1a:	2300      	movs	r3, #0
 8005d1c:	f383 8811 	msr	BASEPRI, r3
 8005d20:	9a03      	ldr	r2, [sp, #12]
 8005d22:	4631      	mov	r1, r6
 8005d24:	326e      	adds	r2, #110	; 0x6e
 8005d26:	b292      	uxth	r2, r2
 8005d28:	200d      	movs	r0, #13
 8005d2a:	f7fa fcd1 	bl	80006d0 <_test_assert_time_window>
 8005d2e:	2800      	cmp	r0, #0
 8005d30:	f47f aee0 	bne.w	8005af4 <evt2_execute+0x34>
 8005d34:	f7fa fa84 	bl	8000240 <chEvtGetAndClearEvents.constprop.44>
 8005d38:	fab0 f180 	clz	r1, r0
 8005d3c:	200e      	movs	r0, #14
 8005d3e:	0949      	lsrs	r1, r1, #5
 8005d40:	f7fa fd0e 	bl	8000760 <_test_assert>
 8005d44:	2800      	cmp	r0, #0
 8005d46:	f47f aed5 	bne.w	8005af4 <evt2_execute+0x34>
 8005d4a:	f7ff f8f9 	bl	8004f40 <test_wait_threads>
 8005d4e:	4651      	mov	r1, sl
 8005d50:	4810      	ldr	r0, [pc, #64]	; (8005d94 <evt2_execute+0x2d4>)
 8005d52:	f7fb f80d 	bl	8000d70 <chEvtUnregister>
 8005d56:	4649      	mov	r1, r9
 8005d58:	480f      	ldr	r0, [pc, #60]	; (8005d98 <evt2_execute+0x2d8>)
 8005d5a:	f7fb f809 	bl	8000d70 <chEvtUnregister>
 8005d5e:	6839      	ldr	r1, [r7, #0]
 8005d60:	200f      	movs	r0, #15
 8005d62:	1bca      	subs	r2, r1, r7
 8005d64:	4251      	negs	r1, r2
 8005d66:	4151      	adcs	r1, r2
 8005d68:	f7fa fcfa 	bl	8000760 <_test_assert>
 8005d6c:	2800      	cmp	r0, #0
 8005d6e:	f47f aec1 	bne.w	8005af4 <evt2_execute+0x34>
 8005d72:	4b09      	ldr	r3, [pc, #36]	; (8005d98 <evt2_execute+0x2d8>)
 8005d74:	2010      	movs	r0, #16
 8005d76:	6819      	ldr	r1, [r3, #0]
 8005d78:	1acb      	subs	r3, r1, r3
 8005d7a:	4259      	negs	r1, r3
 8005d7c:	4159      	adcs	r1, r3
 8005d7e:	f7fa fcef 	bl	8000760 <_test_assert>
 8005d82:	e6b7      	b.n	8005af4 <evt2_execute+0x34>
 8005d84:	20001558 	.word	0x20001558
 8005d88:	08003bb1 	.word	0x08003bb1
 8005d8c:	200017b0 	.word	0x200017b0
 8005d90:	20001e44 	.word	0x20001e44
 8005d94:	20000c0c 	.word	0x20000c0c
 8005d98:	20000c10 	.word	0x20000c10
 8005d9c:	08007aa0 	.word	0x08007aa0
 8005da0:	08003be1 	.word	0x08003be1
	...

08005db0 <mtx8_execute>:
 8005db0:	b570      	push	{r4, r5, r6, lr}
 8005db2:	4b19      	ldr	r3, [pc, #100]	; (8005e18 <mtx8_execute+0x68>)
 8005db4:	4d19      	ldr	r5, [pc, #100]	; (8005e1c <mtx8_execute+0x6c>)
 8005db6:	699a      	ldr	r2, [r3, #24]
 8005db8:	4b19      	ldr	r3, [pc, #100]	; (8005e20 <mtx8_execute+0x70>)
 8005dba:	6896      	ldr	r6, [r2, #8]
 8005dbc:	b082      	sub	sp, #8
 8005dbe:	1c72      	adds	r2, r6, #1
 8005dc0:	9300      	str	r3, [sp, #0]
 8005dc2:	4628      	mov	r0, r5
 8005dc4:	4b17      	ldr	r3, [pc, #92]	; (8005e24 <mtx8_execute+0x74>)
 8005dc6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005dca:	f7fc ff99 	bl	8002d00 <chThdCreateStatic>
 8005dce:	4c16      	ldr	r4, [pc, #88]	; (8005e28 <mtx8_execute+0x78>)
 8005dd0:	4b16      	ldr	r3, [pc, #88]	; (8005e2c <mtx8_execute+0x7c>)
 8005dd2:	6020      	str	r0, [r4, #0]
 8005dd4:	1cb2      	adds	r2, r6, #2
 8005dd6:	9300      	str	r3, [sp, #0]
 8005dd8:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8005ddc:	4b14      	ldr	r3, [pc, #80]	; (8005e30 <mtx8_execute+0x80>)
 8005dde:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005de2:	f7fc ff8d 	bl	8002d00 <chThdCreateStatic>
 8005de6:	4b13      	ldr	r3, [pc, #76]	; (8005e34 <mtx8_execute+0x84>)
 8005de8:	1cf2      	adds	r2, r6, #3
 8005dea:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005dee:	6060      	str	r0, [r4, #4]
 8005df0:	9300      	str	r3, [sp, #0]
 8005df2:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8005df6:	4b10      	ldr	r3, [pc, #64]	; (8005e38 <mtx8_execute+0x88>)
 8005df8:	f7fc ff82 	bl	8002d00 <chThdCreateStatic>
 8005dfc:	60a0      	str	r0, [r4, #8]
 8005dfe:	f7fc ff17 	bl	8002c30 <chCondSignal.constprop.52>
 8005e02:	f7fc ff15 	bl	8002c30 <chCondSignal.constprop.52>
 8005e06:	f7ff f89b 	bl	8004f40 <test_wait_threads>
 8005e0a:	2001      	movs	r0, #1
 8005e0c:	490b      	ldr	r1, [pc, #44]	; (8005e3c <mtx8_execute+0x8c>)
 8005e0e:	b002      	add	sp, #8
 8005e10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005e14:	f7fa bc7c 	b.w	8000710 <_test_assert_sequence>
 8005e18:	20001558 	.word	0x20001558
 8005e1c:	200017b0 	.word	0x200017b0
 8005e20:	08007aa0 	.word	0x08007aa0
 8005e24:	08004201 	.word	0x08004201
 8005e28:	20001e44 	.word	0x20001e44
 8005e2c:	08007a94 	.word	0x08007a94
 8005e30:	08004291 	.word	0x08004291
 8005e34:	08007a90 	.word	0x08007a90
 8005e38:	08004301 	.word	0x08004301
 8005e3c:	08007b50 	.word	0x08007b50

08005e40 <mtx7_execute>:
 8005e40:	b530      	push	{r4, r5, lr}
 8005e42:	4b2c      	ldr	r3, [pc, #176]	; (8005ef4 <mtx7_execute+0xb4>)
 8005e44:	482c      	ldr	r0, [pc, #176]	; (8005ef8 <mtx7_execute+0xb8>)
 8005e46:	699a      	ldr	r2, [r3, #24]
 8005e48:	b083      	sub	sp, #12
 8005e4a:	6895      	ldr	r5, [r2, #8]
 8005e4c:	4b2b      	ldr	r3, [pc, #172]	; (8005efc <mtx7_execute+0xbc>)
 8005e4e:	1c6a      	adds	r2, r5, #1
 8005e50:	9000      	str	r0, [sp, #0]
 8005e52:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005e56:	482a      	ldr	r0, [pc, #168]	; (8005f00 <mtx7_execute+0xc0>)
 8005e58:	f7fc ff52 	bl	8002d00 <chThdCreateStatic>
 8005e5c:	4c29      	ldr	r4, [pc, #164]	; (8005f04 <mtx7_execute+0xc4>)
 8005e5e:	4b2a      	ldr	r3, [pc, #168]	; (8005f08 <mtx7_execute+0xc8>)
 8005e60:	6020      	str	r0, [r4, #0]
 8005e62:	1caa      	adds	r2, r5, #2
 8005e64:	9300      	str	r3, [sp, #0]
 8005e66:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005e6a:	4b24      	ldr	r3, [pc, #144]	; (8005efc <mtx7_execute+0xbc>)
 8005e6c:	4827      	ldr	r0, [pc, #156]	; (8005f0c <mtx7_execute+0xcc>)
 8005e6e:	f7fc ff47 	bl	8002d00 <chThdCreateStatic>
 8005e72:	4b27      	ldr	r3, [pc, #156]	; (8005f10 <mtx7_execute+0xd0>)
 8005e74:	6060      	str	r0, [r4, #4]
 8005e76:	1cea      	adds	r2, r5, #3
 8005e78:	9300      	str	r3, [sp, #0]
 8005e7a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005e7e:	4b1f      	ldr	r3, [pc, #124]	; (8005efc <mtx7_execute+0xbc>)
 8005e80:	4824      	ldr	r0, [pc, #144]	; (8005f14 <mtx7_execute+0xd4>)
 8005e82:	f7fc ff3d 	bl	8002d00 <chThdCreateStatic>
 8005e86:	4b24      	ldr	r3, [pc, #144]	; (8005f18 <mtx7_execute+0xd8>)
 8005e88:	60a0      	str	r0, [r4, #8]
 8005e8a:	1d2a      	adds	r2, r5, #4
 8005e8c:	9300      	str	r3, [sp, #0]
 8005e8e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005e92:	4b1a      	ldr	r3, [pc, #104]	; (8005efc <mtx7_execute+0xbc>)
 8005e94:	4821      	ldr	r0, [pc, #132]	; (8005f1c <mtx7_execute+0xdc>)
 8005e96:	f7fc ff33 	bl	8002d00 <chThdCreateStatic>
 8005e9a:	4b21      	ldr	r3, [pc, #132]	; (8005f20 <mtx7_execute+0xe0>)
 8005e9c:	60e0      	str	r0, [r4, #12]
 8005e9e:	1d6a      	adds	r2, r5, #5
 8005ea0:	9300      	str	r3, [sp, #0]
 8005ea2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005ea6:	4b15      	ldr	r3, [pc, #84]	; (8005efc <mtx7_execute+0xbc>)
 8005ea8:	481e      	ldr	r0, [pc, #120]	; (8005f24 <mtx7_execute+0xe4>)
 8005eaa:	f7fc ff29 	bl	8002d00 <chThdCreateStatic>
 8005eae:	2320      	movs	r3, #32
 8005eb0:	6120      	str	r0, [r4, #16]
 8005eb2:	f383 8811 	msr	BASEPRI, r3
 8005eb6:	4c1c      	ldr	r4, [pc, #112]	; (8005f28 <mtx7_execute+0xe8>)
 8005eb8:	6823      	ldr	r3, [r4, #0]
 8005eba:	42a3      	cmp	r3, r4
 8005ebc:	d00b      	beq.n	8005ed6 <mtx7_execute+0x96>
 8005ebe:	f06f 0501 	mvn.w	r5, #1
 8005ec2:	681a      	ldr	r2, [r3, #0]
 8005ec4:	4618      	mov	r0, r3
 8005ec6:	6054      	str	r4, [r2, #4]
 8005ec8:	6022      	str	r2, [r4, #0]
 8005eca:	f7fb f841 	bl	8000f50 <chSchReadyI>
 8005ece:	6823      	ldr	r3, [r4, #0]
 8005ed0:	6205      	str	r5, [r0, #32]
 8005ed2:	42a3      	cmp	r3, r4
 8005ed4:	d1f5      	bne.n	8005ec2 <mtx7_execute+0x82>
 8005ed6:	f7fb ff73 	bl	8001dc0 <chSchRescheduleS>
 8005eda:	2300      	movs	r3, #0
 8005edc:	f383 8811 	msr	BASEPRI, r3
 8005ee0:	f7ff f82e 	bl	8004f40 <test_wait_threads>
 8005ee4:	2001      	movs	r0, #1
 8005ee6:	4911      	ldr	r1, [pc, #68]	; (8005f2c <mtx7_execute+0xec>)
 8005ee8:	b003      	add	sp, #12
 8005eea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8005eee:	f7fa bc0f 	b.w	8000710 <_test_assert_sequence>
 8005ef2:	bf00      	nop
 8005ef4:	20001558 	.word	0x20001558
 8005ef8:	08007b84 	.word	0x08007b84
 8005efc:	08004291 	.word	0x08004291
 8005f00:	200017b0 	.word	0x200017b0
 8005f04:	20001e44 	.word	0x20001e44
 8005f08:	080082f0 	.word	0x080082f0
 8005f0c:	200018f8 	.word	0x200018f8
 8005f10:	08007a94 	.word	0x08007a94
 8005f14:	20001a40 	.word	0x20001a40
 8005f18:	08007a90 	.word	0x08007a90
 8005f1c:	20001b88 	.word	0x20001b88
 8005f20:	08007aa0 	.word	0x08007aa0
 8005f24:	20001cd0 	.word	0x20001cd0
 8005f28:	20000c04 	.word	0x20000c04
 8005f2c:	08007b80 	.word	0x08007b80

08005f30 <mtx6_execute>:
 8005f30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005f32:	4b2c      	ldr	r3, [pc, #176]	; (8005fe4 <mtx6_execute+0xb4>)
 8005f34:	4e2c      	ldr	r6, [pc, #176]	; (8005fe8 <mtx6_execute+0xb8>)
 8005f36:	699b      	ldr	r3, [r3, #24]
 8005f38:	4d2c      	ldr	r5, [pc, #176]	; (8005fec <mtx6_execute+0xbc>)
 8005f3a:	689f      	ldr	r7, [r3, #8]
 8005f3c:	492c      	ldr	r1, [pc, #176]	; (8005ff0 <mtx6_execute+0xc0>)
 8005f3e:	b083      	sub	sp, #12
 8005f40:	1c7a      	adds	r2, r7, #1
 8005f42:	4633      	mov	r3, r6
 8005f44:	9100      	str	r1, [sp, #0]
 8005f46:	4628      	mov	r0, r5
 8005f48:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005f4c:	f7fc fed8 	bl	8002d00 <chThdCreateStatic>
 8005f50:	4c28      	ldr	r4, [pc, #160]	; (8005ff4 <mtx6_execute+0xc4>)
 8005f52:	4929      	ldr	r1, [pc, #164]	; (8005ff8 <mtx6_execute+0xc8>)
 8005f54:	6020      	str	r0, [r4, #0]
 8005f56:	1cba      	adds	r2, r7, #2
 8005f58:	4633      	mov	r3, r6
 8005f5a:	9100      	str	r1, [sp, #0]
 8005f5c:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8005f60:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005f64:	f7fc fecc 	bl	8002d00 <chThdCreateStatic>
 8005f68:	4924      	ldr	r1, [pc, #144]	; (8005ffc <mtx6_execute+0xcc>)
 8005f6a:	6060      	str	r0, [r4, #4]
 8005f6c:	1cfa      	adds	r2, r7, #3
 8005f6e:	4633      	mov	r3, r6
 8005f70:	9100      	str	r1, [sp, #0]
 8005f72:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8005f76:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005f7a:	f7fc fec1 	bl	8002d00 <chThdCreateStatic>
 8005f7e:	4920      	ldr	r1, [pc, #128]	; (8006000 <mtx6_execute+0xd0>)
 8005f80:	60a0      	str	r0, [r4, #8]
 8005f82:	1d3a      	adds	r2, r7, #4
 8005f84:	4633      	mov	r3, r6
 8005f86:	9100      	str	r1, [sp, #0]
 8005f88:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8005f8c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005f90:	f7fc feb6 	bl	8002d00 <chThdCreateStatic>
 8005f94:	491b      	ldr	r1, [pc, #108]	; (8006004 <mtx6_execute+0xd4>)
 8005f96:	60e0      	str	r0, [r4, #12]
 8005f98:	4633      	mov	r3, r6
 8005f9a:	9100      	str	r1, [sp, #0]
 8005f9c:	1d7a      	adds	r2, r7, #5
 8005f9e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8005fa2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005fa6:	f7fc feab 	bl	8002d00 <chThdCreateStatic>
 8005faa:	2320      	movs	r3, #32
 8005fac:	6120      	str	r0, [r4, #16]
 8005fae:	f383 8811 	msr	BASEPRI, r3
 8005fb2:	f7fa ffe5 	bl	8000f80 <chCondSignalI.constprop.51>
 8005fb6:	f7fa ffe3 	bl	8000f80 <chCondSignalI.constprop.51>
 8005fba:	f7fa ffe1 	bl	8000f80 <chCondSignalI.constprop.51>
 8005fbe:	f7fa ffdf 	bl	8000f80 <chCondSignalI.constprop.51>
 8005fc2:	f7fa ffdd 	bl	8000f80 <chCondSignalI.constprop.51>
 8005fc6:	f7fb fefb 	bl	8001dc0 <chSchRescheduleS>
 8005fca:	2300      	movs	r3, #0
 8005fcc:	f383 8811 	msr	BASEPRI, r3
 8005fd0:	f7fe ffb6 	bl	8004f40 <test_wait_threads>
 8005fd4:	2001      	movs	r0, #1
 8005fd6:	490c      	ldr	r1, [pc, #48]	; (8006008 <mtx6_execute+0xd8>)
 8005fd8:	b003      	add	sp, #12
 8005fda:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8005fde:	f7fa bb97 	b.w	8000710 <_test_assert_sequence>
 8005fe2:	bf00      	nop
 8005fe4:	20001558 	.word	0x20001558
 8005fe8:	08004291 	.word	0x08004291
 8005fec:	200017b0 	.word	0x200017b0
 8005ff0:	08007b84 	.word	0x08007b84
 8005ff4:	20001e44 	.word	0x20001e44
 8005ff8:	080082f0 	.word	0x080082f0
 8005ffc:	08007a94 	.word	0x08007a94
 8006000:	08007a90 	.word	0x08007a90
 8006004:	08007aa0 	.word	0x08007aa0
 8006008:	08007b80 	.word	0x08007b80
 800600c:	00000000 	.word	0x00000000

08006010 <mtx4_execute>:
 8006010:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006014:	4d84      	ldr	r5, [pc, #528]	; (8006228 <mtx4_execute+0x218>)
 8006016:	4885      	ldr	r0, [pc, #532]	; (800622c <mtx4_execute+0x21c>)
 8006018:	69aa      	ldr	r2, [r5, #24]
 800601a:	b082      	sub	sp, #8
 800601c:	6894      	ldr	r4, [r2, #8]
 800601e:	4b84      	ldr	r3, [pc, #528]	; (8006230 <mtx4_execute+0x220>)
 8006020:	1c67      	adds	r7, r4, #1
 8006022:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006026:	463a      	mov	r2, r7
 8006028:	9000      	str	r0, [sp, #0]
 800602a:	4882      	ldr	r0, [pc, #520]	; (8006234 <mtx4_execute+0x224>)
 800602c:	f7fc fe68 	bl	8002d00 <chThdCreateStatic>
 8006030:	4e81      	ldr	r6, [pc, #516]	; (8006238 <mtx4_execute+0x228>)
 8006032:	4b82      	ldr	r3, [pc, #520]	; (800623c <mtx4_execute+0x22c>)
 8006034:	f104 0802 	add.w	r8, r4, #2
 8006038:	6030      	str	r0, [r6, #0]
 800603a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800603e:	4642      	mov	r2, r8
 8006040:	9300      	str	r3, [sp, #0]
 8006042:	487f      	ldr	r0, [pc, #508]	; (8006240 <mtx4_execute+0x230>)
 8006044:	4b7f      	ldr	r3, [pc, #508]	; (8006244 <mtx4_execute+0x234>)
 8006046:	f7fc fe5b 	bl	8002d00 <chThdCreateStatic>
 800604a:	6070      	str	r0, [r6, #4]
 800604c:	487e      	ldr	r0, [pc, #504]	; (8006248 <mtx4_execute+0x238>)
 800604e:	f7fe f88f 	bl	8004170 <chMtxLock>
 8006052:	69ab      	ldr	r3, [r5, #24]
 8006054:	2001      	movs	r0, #1
 8006056:	6899      	ldr	r1, [r3, #8]
 8006058:	1b09      	subs	r1, r1, r4
 800605a:	fab1 f181 	clz	r1, r1
 800605e:	0949      	lsrs	r1, r1, #5
 8006060:	f7fa fb7e 	bl	8000760 <_test_assert>
 8006064:	b110      	cbz	r0, 800606c <mtx4_execute+0x5c>
 8006066:	b002      	add	sp, #8
 8006068:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800606c:	20c8      	movs	r0, #200	; 0xc8
 800606e:	f7fd fd0f 	bl	8003a90 <chThdSleep>
 8006072:	69ab      	ldr	r3, [r5, #24]
 8006074:	2002      	movs	r0, #2
 8006076:	6899      	ldr	r1, [r3, #8]
 8006078:	1bc9      	subs	r1, r1, r7
 800607a:	fab1 f181 	clz	r1, r1
 800607e:	0949      	lsrs	r1, r1, #5
 8006080:	f7fa fb6e 	bl	8000760 <_test_assert>
 8006084:	2800      	cmp	r0, #0
 8006086:	d1ee      	bne.n	8006066 <mtx4_execute+0x56>
 8006088:	4870      	ldr	r0, [pc, #448]	; (800624c <mtx4_execute+0x23c>)
 800608a:	f7fe f871 	bl	8004170 <chMtxLock>
 800608e:	69ab      	ldr	r3, [r5, #24]
 8006090:	2003      	movs	r0, #3
 8006092:	6899      	ldr	r1, [r3, #8]
 8006094:	1bc9      	subs	r1, r1, r7
 8006096:	fab1 f181 	clz	r1, r1
 800609a:	0949      	lsrs	r1, r1, #5
 800609c:	f7fa fb60 	bl	8000760 <_test_assert>
 80060a0:	2800      	cmp	r0, #0
 80060a2:	d1e0      	bne.n	8006066 <mtx4_execute+0x56>
 80060a4:	20c8      	movs	r0, #200	; 0xc8
 80060a6:	f7fd fcf3 	bl	8003a90 <chThdSleep>
 80060aa:	69ab      	ldr	r3, [r5, #24]
 80060ac:	2004      	movs	r0, #4
 80060ae:	6899      	ldr	r1, [r3, #8]
 80060b0:	eba1 0108 	sub.w	r1, r1, r8
 80060b4:	fab1 f181 	clz	r1, r1
 80060b8:	0949      	lsrs	r1, r1, #5
 80060ba:	f7fa fb51 	bl	8000760 <_test_assert>
 80060be:	2800      	cmp	r0, #0
 80060c0:	d1d1      	bne.n	8006066 <mtx4_execute+0x56>
 80060c2:	4862      	ldr	r0, [pc, #392]	; (800624c <mtx4_execute+0x23c>)
 80060c4:	f7fc fdcc 	bl	8002c60 <chMtxUnlock>
 80060c8:	69ab      	ldr	r3, [r5, #24]
 80060ca:	2005      	movs	r0, #5
 80060cc:	6899      	ldr	r1, [r3, #8]
 80060ce:	1bc9      	subs	r1, r1, r7
 80060d0:	fab1 f181 	clz	r1, r1
 80060d4:	0949      	lsrs	r1, r1, #5
 80060d6:	f7fa fb43 	bl	8000760 <_test_assert>
 80060da:	2800      	cmp	r0, #0
 80060dc:	d1c3      	bne.n	8006066 <mtx4_execute+0x56>
 80060de:	20c8      	movs	r0, #200	; 0xc8
 80060e0:	f7fd fcd6 	bl	8003a90 <chThdSleep>
 80060e4:	69ab      	ldr	r3, [r5, #24]
 80060e6:	2006      	movs	r0, #6
 80060e8:	6899      	ldr	r1, [r3, #8]
 80060ea:	1bc9      	subs	r1, r1, r7
 80060ec:	fab1 f181 	clz	r1, r1
 80060f0:	0949      	lsrs	r1, r1, #5
 80060f2:	f7fa fb35 	bl	8000760 <_test_assert>
 80060f6:	2800      	cmp	r0, #0
 80060f8:	d1b5      	bne.n	8006066 <mtx4_execute+0x56>
 80060fa:	f7fb fe89 	bl	8001e10 <chMtxUnlockAll>
 80060fe:	69ab      	ldr	r3, [r5, #24]
 8006100:	2007      	movs	r0, #7
 8006102:	6899      	ldr	r1, [r3, #8]
 8006104:	1b09      	subs	r1, r1, r4
 8006106:	fab1 f181 	clz	r1, r1
 800610a:	0949      	lsrs	r1, r1, #5
 800610c:	f7fa fb28 	bl	8000760 <_test_assert>
 8006110:	2800      	cmp	r0, #0
 8006112:	d1a8      	bne.n	8006066 <mtx4_execute+0x56>
 8006114:	f7fe ff14 	bl	8004f40 <test_wait_threads>
 8006118:	4a4d      	ldr	r2, [pc, #308]	; (8006250 <mtx4_execute+0x240>)
 800611a:	4b45      	ldr	r3, [pc, #276]	; (8006230 <mtx4_execute+0x220>)
 800611c:	9200      	str	r2, [sp, #0]
 800611e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006122:	463a      	mov	r2, r7
 8006124:	4843      	ldr	r0, [pc, #268]	; (8006234 <mtx4_execute+0x224>)
 8006126:	f7fc fdeb 	bl	8002d00 <chThdCreateStatic>
 800612a:	4b4a      	ldr	r3, [pc, #296]	; (8006254 <mtx4_execute+0x244>)
 800612c:	6030      	str	r0, [r6, #0]
 800612e:	4642      	mov	r2, r8
 8006130:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006134:	9300      	str	r3, [sp, #0]
 8006136:	4842      	ldr	r0, [pc, #264]	; (8006240 <mtx4_execute+0x230>)
 8006138:	4b42      	ldr	r3, [pc, #264]	; (8006244 <mtx4_execute+0x234>)
 800613a:	f7fc fde1 	bl	8002d00 <chThdCreateStatic>
 800613e:	6070      	str	r0, [r6, #4]
 8006140:	4841      	ldr	r0, [pc, #260]	; (8006248 <mtx4_execute+0x238>)
 8006142:	f7fe f815 	bl	8004170 <chMtxLock>
 8006146:	69ab      	ldr	r3, [r5, #24]
 8006148:	2008      	movs	r0, #8
 800614a:	6899      	ldr	r1, [r3, #8]
 800614c:	1b0a      	subs	r2, r1, r4
 800614e:	4251      	negs	r1, r2
 8006150:	4151      	adcs	r1, r2
 8006152:	f7fa fb05 	bl	8000760 <_test_assert>
 8006156:	2800      	cmp	r0, #0
 8006158:	d185      	bne.n	8006066 <mtx4_execute+0x56>
 800615a:	20c8      	movs	r0, #200	; 0xc8
 800615c:	f7fd fc98 	bl	8003a90 <chThdSleep>
 8006160:	69ab      	ldr	r3, [r5, #24]
 8006162:	2009      	movs	r0, #9
 8006164:	6899      	ldr	r1, [r3, #8]
 8006166:	1bcb      	subs	r3, r1, r7
 8006168:	4259      	negs	r1, r3
 800616a:	4159      	adcs	r1, r3
 800616c:	f7fa faf8 	bl	8000760 <_test_assert>
 8006170:	2800      	cmp	r0, #0
 8006172:	f47f af78 	bne.w	8006066 <mtx4_execute+0x56>
 8006176:	4835      	ldr	r0, [pc, #212]	; (800624c <mtx4_execute+0x23c>)
 8006178:	f7fd fffa 	bl	8004170 <chMtxLock>
 800617c:	69ab      	ldr	r3, [r5, #24]
 800617e:	200a      	movs	r0, #10
 8006180:	6899      	ldr	r1, [r3, #8]
 8006182:	eba1 0e07 	sub.w	lr, r1, r7
 8006186:	f1de 0100 	rsbs	r1, lr, #0
 800618a:	eb41 010e 	adc.w	r1, r1, lr
 800618e:	f7fa fae7 	bl	8000760 <_test_assert>
 8006192:	2800      	cmp	r0, #0
 8006194:	f47f af67 	bne.w	8006066 <mtx4_execute+0x56>
 8006198:	20c8      	movs	r0, #200	; 0xc8
 800619a:	f7fd fc79 	bl	8003a90 <chThdSleep>
 800619e:	69ab      	ldr	r3, [r5, #24]
 80061a0:	200b      	movs	r0, #11
 80061a2:	6899      	ldr	r1, [r3, #8]
 80061a4:	eba1 0c08 	sub.w	ip, r1, r8
 80061a8:	f1dc 0100 	rsbs	r1, ip, #0
 80061ac:	eb41 010c 	adc.w	r1, r1, ip
 80061b0:	f7fa fad6 	bl	8000760 <_test_assert>
 80061b4:	4606      	mov	r6, r0
 80061b6:	2800      	cmp	r0, #0
 80061b8:	f47f af55 	bne.w	8006066 <mtx4_execute+0x56>
 80061bc:	2320      	movs	r3, #32
 80061be:	f383 8811 	msr	BASEPRI, r3
 80061c2:	4822      	ldr	r0, [pc, #136]	; (800624c <mtx4_execute+0x23c>)
 80061c4:	f7fa ffbc 	bl	8001140 <chMtxUnlockS>
 80061c8:	f7fb fdfa 	bl	8001dc0 <chSchRescheduleS>
 80061cc:	f386 8811 	msr	BASEPRI, r6
 80061d0:	69ab      	ldr	r3, [r5, #24]
 80061d2:	200c      	movs	r0, #12
 80061d4:	6899      	ldr	r1, [r3, #8]
 80061d6:	1bce      	subs	r6, r1, r7
 80061d8:	4271      	negs	r1, r6
 80061da:	4171      	adcs	r1, r6
 80061dc:	f7fa fac0 	bl	8000760 <_test_assert>
 80061e0:	2800      	cmp	r0, #0
 80061e2:	f47f af40 	bne.w	8006066 <mtx4_execute+0x56>
 80061e6:	20c8      	movs	r0, #200	; 0xc8
 80061e8:	f7fd fc52 	bl	8003a90 <chThdSleep>
 80061ec:	69ab      	ldr	r3, [r5, #24]
 80061ee:	200d      	movs	r0, #13
 80061f0:	6899      	ldr	r1, [r3, #8]
 80061f2:	1bca      	subs	r2, r1, r7
 80061f4:	4251      	negs	r1, r2
 80061f6:	4151      	adcs	r1, r2
 80061f8:	f7fa fab2 	bl	8000760 <_test_assert>
 80061fc:	2800      	cmp	r0, #0
 80061fe:	f47f af32 	bne.w	8006066 <mtx4_execute+0x56>
 8006202:	f7fb fe05 	bl	8001e10 <chMtxUnlockAll>
 8006206:	69ab      	ldr	r3, [r5, #24]
 8006208:	200e      	movs	r0, #14
 800620a:	6899      	ldr	r1, [r3, #8]
 800620c:	1b0b      	subs	r3, r1, r4
 800620e:	4259      	negs	r1, r3
 8006210:	4159      	adcs	r1, r3
 8006212:	f7fa faa5 	bl	8000760 <_test_assert>
 8006216:	2800      	cmp	r0, #0
 8006218:	f47f af25 	bne.w	8006066 <mtx4_execute+0x56>
 800621c:	b002      	add	sp, #8
 800621e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006222:	f7fe be8d 	b.w	8004f40 <test_wait_threads>
 8006226:	bf00      	nop
 8006228:	20001558 	.word	0x20001558
 800622c:	08007a90 	.word	0x08007a90
 8006230:	08004411 	.word	0x08004411
 8006234:	200017b0 	.word	0x200017b0
 8006238:	20001e44 	.word	0x20001e44
 800623c:	08007aa0 	.word	0x08007aa0
 8006240:	200018f8 	.word	0x200018f8
 8006244:	08004431 	.word	0x08004431
 8006248:	20000c68 	.word	0x20000c68
 800624c:	20000c58 	.word	0x20000c58
 8006250:	080082f0 	.word	0x080082f0
 8006254:	08007a94 	.word	0x08007a94
	...

08006260 <mtx1_execute>:
 8006260:	b570      	push	{r4, r5, r6, lr}
 8006262:	4e29      	ldr	r6, [pc, #164]	; (8006308 <mtx1_execute+0xa8>)
 8006264:	b082      	sub	sp, #8
 8006266:	69b3      	ldr	r3, [r6, #24]
 8006268:	4828      	ldr	r0, [pc, #160]	; (800630c <mtx1_execute+0xac>)
 800626a:	689c      	ldr	r4, [r3, #8]
 800626c:	f7fd ff80 	bl	8004170 <chMtxLock>
 8006270:	4b27      	ldr	r3, [pc, #156]	; (8006310 <mtx1_execute+0xb0>)
 8006272:	1c62      	adds	r2, r4, #1
 8006274:	9300      	str	r3, [sp, #0]
 8006276:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800627a:	4b26      	ldr	r3, [pc, #152]	; (8006314 <mtx1_execute+0xb4>)
 800627c:	4826      	ldr	r0, [pc, #152]	; (8006318 <mtx1_execute+0xb8>)
 800627e:	f7fc fd3f 	bl	8002d00 <chThdCreateStatic>
 8006282:	4d26      	ldr	r5, [pc, #152]	; (800631c <mtx1_execute+0xbc>)
 8006284:	4b26      	ldr	r3, [pc, #152]	; (8006320 <mtx1_execute+0xc0>)
 8006286:	6028      	str	r0, [r5, #0]
 8006288:	1ca2      	adds	r2, r4, #2
 800628a:	9300      	str	r3, [sp, #0]
 800628c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006290:	4b20      	ldr	r3, [pc, #128]	; (8006314 <mtx1_execute+0xb4>)
 8006292:	4824      	ldr	r0, [pc, #144]	; (8006324 <mtx1_execute+0xc4>)
 8006294:	f7fc fd34 	bl	8002d00 <chThdCreateStatic>
 8006298:	4b23      	ldr	r3, [pc, #140]	; (8006328 <mtx1_execute+0xc8>)
 800629a:	6068      	str	r0, [r5, #4]
 800629c:	1ce2      	adds	r2, r4, #3
 800629e:	9300      	str	r3, [sp, #0]
 80062a0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80062a4:	4b1b      	ldr	r3, [pc, #108]	; (8006314 <mtx1_execute+0xb4>)
 80062a6:	4821      	ldr	r0, [pc, #132]	; (800632c <mtx1_execute+0xcc>)
 80062a8:	f7fc fd2a 	bl	8002d00 <chThdCreateStatic>
 80062ac:	4b20      	ldr	r3, [pc, #128]	; (8006330 <mtx1_execute+0xd0>)
 80062ae:	60a8      	str	r0, [r5, #8]
 80062b0:	1d22      	adds	r2, r4, #4
 80062b2:	9300      	str	r3, [sp, #0]
 80062b4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80062b8:	4b16      	ldr	r3, [pc, #88]	; (8006314 <mtx1_execute+0xb4>)
 80062ba:	481e      	ldr	r0, [pc, #120]	; (8006334 <mtx1_execute+0xd4>)
 80062bc:	f7fc fd20 	bl	8002d00 <chThdCreateStatic>
 80062c0:	4b1d      	ldr	r3, [pc, #116]	; (8006338 <mtx1_execute+0xd8>)
 80062c2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80062c6:	1d62      	adds	r2, r4, #5
 80062c8:	60e8      	str	r0, [r5, #12]
 80062ca:	9300      	str	r3, [sp, #0]
 80062cc:	481b      	ldr	r0, [pc, #108]	; (800633c <mtx1_execute+0xdc>)
 80062ce:	4b11      	ldr	r3, [pc, #68]	; (8006314 <mtx1_execute+0xb4>)
 80062d0:	f7fc fd16 	bl	8002d00 <chThdCreateStatic>
 80062d4:	6128      	str	r0, [r5, #16]
 80062d6:	480d      	ldr	r0, [pc, #52]	; (800630c <mtx1_execute+0xac>)
 80062d8:	f7fc fcc2 	bl	8002c60 <chMtxUnlock>
 80062dc:	f7fe fe30 	bl	8004f40 <test_wait_threads>
 80062e0:	69b3      	ldr	r3, [r6, #24]
 80062e2:	2001      	movs	r0, #1
 80062e4:	6899      	ldr	r1, [r3, #8]
 80062e6:	1b09      	subs	r1, r1, r4
 80062e8:	fab1 f181 	clz	r1, r1
 80062ec:	0949      	lsrs	r1, r1, #5
 80062ee:	f7fa fa37 	bl	8000760 <_test_assert>
 80062f2:	b108      	cbz	r0, 80062f8 <mtx1_execute+0x98>
 80062f4:	b002      	add	sp, #8
 80062f6:	bd70      	pop	{r4, r5, r6, pc}
 80062f8:	2002      	movs	r0, #2
 80062fa:	4911      	ldr	r1, [pc, #68]	; (8006340 <mtx1_execute+0xe0>)
 80062fc:	b002      	add	sp, #8
 80062fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006302:	f7fa ba05 	b.w	8000710 <_test_assert_sequence>
 8006306:	bf00      	nop
 8006308:	20001558 	.word	0x20001558
 800630c:	20000c58 	.word	0x20000c58
 8006310:	08007b84 	.word	0x08007b84
 8006314:	08004451 	.word	0x08004451
 8006318:	200017b0 	.word	0x200017b0
 800631c:	20001e44 	.word	0x20001e44
 8006320:	080082f0 	.word	0x080082f0
 8006324:	200018f8 	.word	0x200018f8
 8006328:	08007a94 	.word	0x08007a94
 800632c:	20001a40 	.word	0x20001a40
 8006330:	08007a90 	.word	0x08007a90
 8006334:	20001b88 	.word	0x20001b88
 8006338:	08007aa0 	.word	0x08007aa0
 800633c:	20001cd0 	.word	0x20001cd0
 8006340:	08007b80 	.word	0x08007b80
	...

08006350 <sem2_execute>:
 8006350:	b570      	push	{r4, r5, r6, lr}
 8006352:	2320      	movs	r3, #32
 8006354:	b082      	sub	sp, #8
 8006356:	f383 8811 	msr	BASEPRI, r3
 800635a:	4c4c      	ldr	r4, [pc, #304]	; (800648c <sem2_execute+0x13c>)
 800635c:	68a3      	ldr	r3, [r4, #8]
 800635e:	3b01      	subs	r3, #1
 8006360:	bf5a      	itte	pl
 8006362:	60a3      	strpl	r3, [r4, #8]
 8006364:	2100      	movpl	r1, #0
 8006366:	2101      	movmi	r1, #1
 8006368:	2300      	movs	r3, #0
 800636a:	f383 8811 	msr	BASEPRI, r3
 800636e:	2001      	movs	r0, #1
 8006370:	f7fa f9f6 	bl	8000760 <_test_assert>
 8006374:	b108      	cbz	r0, 800637a <sem2_execute+0x2a>
 8006376:	b002      	add	sp, #8
 8006378:	bd70      	pop	{r4, r5, r6, pc}
 800637a:	6821      	ldr	r1, [r4, #0]
 800637c:	2002      	movs	r0, #2
 800637e:	1b09      	subs	r1, r1, r4
 8006380:	fab1 f181 	clz	r1, r1
 8006384:	0949      	lsrs	r1, r1, #5
 8006386:	f7fa f9eb 	bl	8000760 <_test_assert>
 800638a:	2800      	cmp	r0, #0
 800638c:	d1f3      	bne.n	8006376 <sem2_execute+0x26>
 800638e:	68a1      	ldr	r1, [r4, #8]
 8006390:	2003      	movs	r0, #3
 8006392:	fab1 f181 	clz	r1, r1
 8006396:	0949      	lsrs	r1, r1, #5
 8006398:	f7fa f9e2 	bl	8000760 <_test_assert>
 800639c:	2800      	cmp	r0, #0
 800639e:	d1ea      	bne.n	8006376 <sem2_execute+0x26>
 80063a0:	4a3b      	ldr	r2, [pc, #236]	; (8006490 <sem2_execute+0x140>)
 80063a2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80063a6:	6992      	ldr	r2, [r2, #24]
 80063a8:	4b3a      	ldr	r3, [pc, #232]	; (8006494 <sem2_execute+0x144>)
 80063aa:	6892      	ldr	r2, [r2, #8]
 80063ac:	9000      	str	r0, [sp, #0]
 80063ae:	3a01      	subs	r2, #1
 80063b0:	4839      	ldr	r0, [pc, #228]	; (8006498 <sem2_execute+0x148>)
 80063b2:	f7fc fca5 	bl	8002d00 <chThdCreateStatic>
 80063b6:	4b39      	ldr	r3, [pc, #228]	; (800649c <sem2_execute+0x14c>)
 80063b8:	6018      	str	r0, [r3, #0]
 80063ba:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80063be:	f7fc fde7 	bl	8002f90 <chSemWaitTimeout.constprop.58>
 80063c2:	4605      	mov	r5, r0
 80063c4:	f7fe fdbc 	bl	8004f40 <test_wait_threads>
 80063c8:	fab5 f185 	clz	r1, r5
 80063cc:	2004      	movs	r0, #4
 80063ce:	0949      	lsrs	r1, r1, #5
 80063d0:	f7fa f9c6 	bl	8000760 <_test_assert>
 80063d4:	2800      	cmp	r0, #0
 80063d6:	d1ce      	bne.n	8006376 <sem2_execute+0x26>
 80063d8:	6821      	ldr	r1, [r4, #0]
 80063da:	2005      	movs	r0, #5
 80063dc:	1b09      	subs	r1, r1, r4
 80063de:	fab1 f181 	clz	r1, r1
 80063e2:	0949      	lsrs	r1, r1, #5
 80063e4:	f7fa f9bc 	bl	8000760 <_test_assert>
 80063e8:	2800      	cmp	r0, #0
 80063ea:	d1c4      	bne.n	8006376 <sem2_execute+0x26>
 80063ec:	68a1      	ldr	r1, [r4, #8]
 80063ee:	2006      	movs	r0, #6
 80063f0:	fab1 f181 	clz	r1, r1
 80063f4:	0949      	lsrs	r1, r1, #5
 80063f6:	f7fa f9b3 	bl	8000760 <_test_assert>
 80063fa:	4605      	mov	r5, r0
 80063fc:	2800      	cmp	r0, #0
 80063fe:	d1ba      	bne.n	8006376 <sem2_execute+0x26>
 8006400:	f7fd fc26 	bl	8003c50 <test_wait_tick>
 8006404:	2320      	movs	r3, #32
 8006406:	f383 8811 	msr	BASEPRI, r3
 800640a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800640e:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 8006410:	f385 8811 	msr	BASEPRI, r5
 8006414:	2541      	movs	r5, #65	; 0x41
 8006416:	4628      	mov	r0, r5
 8006418:	f7fa f9ba 	bl	8000790 <test_emit_token>
 800641c:	2064      	movs	r0, #100	; 0x64
 800641e:	f7fc fdb7 	bl	8002f90 <chSemWaitTimeout.constprop.58>
 8006422:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8006426:	fab1 f181 	clz	r1, r1
 800642a:	2007      	movs	r0, #7
 800642c:	0949      	lsrs	r1, r1, #5
 800642e:	f7fa f997 	bl	8000760 <_test_assert>
 8006432:	2800      	cmp	r0, #0
 8006434:	d19f      	bne.n	8006376 <sem2_execute+0x26>
 8006436:	6821      	ldr	r1, [r4, #0]
 8006438:	2008      	movs	r0, #8
 800643a:	1b09      	subs	r1, r1, r4
 800643c:	fab1 f181 	clz	r1, r1
 8006440:	0949      	lsrs	r1, r1, #5
 8006442:	f7fa f98d 	bl	8000760 <_test_assert>
 8006446:	2800      	cmp	r0, #0
 8006448:	d195      	bne.n	8006376 <sem2_execute+0x26>
 800644a:	68a1      	ldr	r1, [r4, #8]
 800644c:	2009      	movs	r0, #9
 800644e:	fab1 f181 	clz	r1, r1
 8006452:	0949      	lsrs	r1, r1, #5
 8006454:	f7fa f984 	bl	8000760 <_test_assert>
 8006458:	3501      	adds	r5, #1
 800645a:	b2ed      	uxtb	r5, r5
 800645c:	2800      	cmp	r0, #0
 800645e:	d18a      	bne.n	8006376 <sem2_execute+0x26>
 8006460:	2d46      	cmp	r5, #70	; 0x46
 8006462:	d1d8      	bne.n	8006416 <sem2_execute+0xc6>
 8006464:	490e      	ldr	r1, [pc, #56]	; (80064a0 <sem2_execute+0x150>)
 8006466:	200a      	movs	r0, #10
 8006468:	f7fa f952 	bl	8000710 <_test_assert_sequence>
 800646c:	2800      	cmp	r0, #0
 800646e:	d182      	bne.n	8006376 <sem2_execute+0x26>
 8006470:	200b      	movs	r0, #11
 8006472:	b2b6      	uxth	r6, r6
 8006474:	f506 72fc 	add.w	r2, r6, #504	; 0x1f8
 8006478:	f506 76fa 	add.w	r6, r6, #500	; 0x1f4
 800647c:	b292      	uxth	r2, r2
 800647e:	b2b1      	uxth	r1, r6
 8006480:	b002      	add	sp, #8
 8006482:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006486:	f7fa b923 	b.w	80006d0 <_test_assert_time_window>
 800648a:	bf00      	nop
 800648c:	20000cd0 	.word	0x20000cd0
 8006490:	20001558 	.word	0x20001558
 8006494:	08003c21 	.word	0x08003c21
 8006498:	200017b0 	.word	0x200017b0
 800649c:	20001e44 	.word	0x20001e44
 80064a0:	08007b80 	.word	0x08007b80
	...

080064b0 <sem1_execute>:
 80064b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80064b2:	4d4b      	ldr	r5, [pc, #300]	; (80065e0 <sem1_execute+0x130>)
 80064b4:	4f4b      	ldr	r7, [pc, #300]	; (80065e4 <sem1_execute+0x134>)
 80064b6:	69aa      	ldr	r2, [r5, #24]
 80064b8:	b083      	sub	sp, #12
 80064ba:	6892      	ldr	r2, [r2, #8]
 80064bc:	4b4a      	ldr	r3, [pc, #296]	; (80065e8 <sem1_execute+0x138>)
 80064be:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80064c2:	3205      	adds	r2, #5
 80064c4:	9700      	str	r7, [sp, #0]
 80064c6:	4849      	ldr	r0, [pc, #292]	; (80065ec <sem1_execute+0x13c>)
 80064c8:	f7fc fc1a 	bl	8002d00 <chThdCreateStatic>
 80064cc:	69ab      	ldr	r3, [r5, #24]
 80064ce:	4c48      	ldr	r4, [pc, #288]	; (80065f0 <sem1_execute+0x140>)
 80064d0:	689a      	ldr	r2, [r3, #8]
 80064d2:	4b48      	ldr	r3, [pc, #288]	; (80065f4 <sem1_execute+0x144>)
 80064d4:	6020      	str	r0, [r4, #0]
 80064d6:	3201      	adds	r2, #1
 80064d8:	9300      	str	r3, [sp, #0]
 80064da:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80064de:	4b42      	ldr	r3, [pc, #264]	; (80065e8 <sem1_execute+0x138>)
 80064e0:	4845      	ldr	r0, [pc, #276]	; (80065f8 <sem1_execute+0x148>)
 80064e2:	f7fc fc0d 	bl	8002d00 <chThdCreateStatic>
 80064e6:	69aa      	ldr	r2, [r5, #24]
 80064e8:	4b44      	ldr	r3, [pc, #272]	; (80065fc <sem1_execute+0x14c>)
 80064ea:	6892      	ldr	r2, [r2, #8]
 80064ec:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80064f0:	6060      	str	r0, [r4, #4]
 80064f2:	3203      	adds	r2, #3
 80064f4:	9300      	str	r3, [sp, #0]
 80064f6:	4842      	ldr	r0, [pc, #264]	; (8006600 <sem1_execute+0x150>)
 80064f8:	4b3b      	ldr	r3, [pc, #236]	; (80065e8 <sem1_execute+0x138>)
 80064fa:	f7fc fc01 	bl	8002d00 <chThdCreateStatic>
 80064fe:	69aa      	ldr	r2, [r5, #24]
 8006500:	4b40      	ldr	r3, [pc, #256]	; (8006604 <sem1_execute+0x154>)
 8006502:	6892      	ldr	r2, [r2, #8]
 8006504:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006508:	60a0      	str	r0, [r4, #8]
 800650a:	3204      	adds	r2, #4
 800650c:	9300      	str	r3, [sp, #0]
 800650e:	483e      	ldr	r0, [pc, #248]	; (8006608 <sem1_execute+0x158>)
 8006510:	4b35      	ldr	r3, [pc, #212]	; (80065e8 <sem1_execute+0x138>)
 8006512:	f7fc fbf5 	bl	8002d00 <chThdCreateStatic>
 8006516:	69aa      	ldr	r2, [r5, #24]
 8006518:	4b3c      	ldr	r3, [pc, #240]	; (800660c <sem1_execute+0x15c>)
 800651a:	6892      	ldr	r2, [r2, #8]
 800651c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006520:	3202      	adds	r2, #2
 8006522:	60e0      	str	r0, [r4, #12]
 8006524:	9300      	str	r3, [sp, #0]
 8006526:	483a      	ldr	r0, [pc, #232]	; (8006610 <sem1_execute+0x160>)
 8006528:	4b2f      	ldr	r3, [pc, #188]	; (80065e8 <sem1_execute+0x138>)
 800652a:	f7fc fbe9 	bl	8002d00 <chThdCreateStatic>
 800652e:	6120      	str	r0, [r4, #16]
 8006530:	4838      	ldr	r0, [pc, #224]	; (8006614 <sem1_execute+0x164>)
 8006532:	f7fc fbc5 	bl	8002cc0 <chSemSignal>
 8006536:	4837      	ldr	r0, [pc, #220]	; (8006614 <sem1_execute+0x164>)
 8006538:	f7fc fbc2 	bl	8002cc0 <chSemSignal>
 800653c:	4835      	ldr	r0, [pc, #212]	; (8006614 <sem1_execute+0x164>)
 800653e:	f7fc fbbf 	bl	8002cc0 <chSemSignal>
 8006542:	4834      	ldr	r0, [pc, #208]	; (8006614 <sem1_execute+0x164>)
 8006544:	f7fc fbbc 	bl	8002cc0 <chSemSignal>
 8006548:	4832      	ldr	r0, [pc, #200]	; (8006614 <sem1_execute+0x164>)
 800654a:	f7fc fbb9 	bl	8002cc0 <chSemSignal>
 800654e:	f7fe fcf7 	bl	8004f40 <test_wait_threads>
 8006552:	4931      	ldr	r1, [pc, #196]	; (8006618 <sem1_execute+0x168>)
 8006554:	2001      	movs	r0, #1
 8006556:	f7fa f8db 	bl	8000710 <_test_assert_sequence>
 800655a:	b108      	cbz	r0, 8006560 <sem1_execute+0xb0>
 800655c:	b003      	add	sp, #12
 800655e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006560:	69aa      	ldr	r2, [r5, #24]
 8006562:	4606      	mov	r6, r0
 8006564:	6892      	ldr	r2, [r2, #8]
 8006566:	4b20      	ldr	r3, [pc, #128]	; (80065e8 <sem1_execute+0x138>)
 8006568:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800656c:	3205      	adds	r2, #5
 800656e:	9700      	str	r7, [sp, #0]
 8006570:	481e      	ldr	r0, [pc, #120]	; (80065ec <sem1_execute+0x13c>)
 8006572:	f7fc fbc5 	bl	8002d00 <chThdCreateStatic>
 8006576:	2320      	movs	r3, #32
 8006578:	6020      	str	r0, [r4, #0]
 800657a:	f383 8811 	msr	BASEPRI, r3
 800657e:	2502      	movs	r5, #2
 8006580:	4c24      	ldr	r4, [pc, #144]	; (8006614 <sem1_execute+0x164>)
 8006582:	e002      	b.n	800658a <sem1_execute+0xda>
 8006584:	2d01      	cmp	r5, #1
 8006586:	d00e      	beq.n	80065a6 <sem1_execute+0xf6>
 8006588:	2501      	movs	r5, #1
 800658a:	68a3      	ldr	r3, [r4, #8]
 800658c:	3301      	adds	r3, #1
 800658e:	2b00      	cmp	r3, #0
 8006590:	60a3      	str	r3, [r4, #8]
 8006592:	dcf7      	bgt.n	8006584 <sem1_execute+0xd4>
 8006594:	6820      	ldr	r0, [r4, #0]
 8006596:	6803      	ldr	r3, [r0, #0]
 8006598:	605c      	str	r4, [r3, #4]
 800659a:	6023      	str	r3, [r4, #0]
 800659c:	f7fa fcd8 	bl	8000f50 <chSchReadyI>
 80065a0:	2d01      	cmp	r5, #1
 80065a2:	6206      	str	r6, [r0, #32]
 80065a4:	d1f0      	bne.n	8006588 <sem1_execute+0xd8>
 80065a6:	f7fb fc0b 	bl	8001dc0 <chSchRescheduleS>
 80065aa:	2500      	movs	r5, #0
 80065ac:	f385 8811 	msr	BASEPRI, r5
 80065b0:	f7fe fcc6 	bl	8004f40 <test_wait_threads>
 80065b4:	2320      	movs	r3, #32
 80065b6:	f383 8811 	msr	BASEPRI, r3
 80065ba:	68a1      	ldr	r1, [r4, #8]
 80065bc:	2002      	movs	r0, #2
 80065be:	f1a1 0101 	sub.w	r1, r1, #1
 80065c2:	fab1 f181 	clz	r1, r1
 80065c6:	0949      	lsrs	r1, r1, #5
 80065c8:	f7fa f8ca 	bl	8000760 <_test_assert>
 80065cc:	b918      	cbnz	r0, 80065d6 <sem1_execute+0x126>
 80065ce:	f380 8811 	msr	BASEPRI, r0
 80065d2:	b003      	add	sp, #12
 80065d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80065d6:	f385 8811 	msr	BASEPRI, r5
 80065da:	b003      	add	sp, #12
 80065dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80065de:	bf00      	nop
 80065e0:	20001558 	.word	0x20001558
 80065e4:	08007aa0 	.word	0x08007aa0
 80065e8:	08004e11 	.word	0x08004e11
 80065ec:	200017b0 	.word	0x200017b0
 80065f0:	20001e44 	.word	0x20001e44
 80065f4:	08007a90 	.word	0x08007a90
 80065f8:	200018f8 	.word	0x200018f8
 80065fc:	08007a94 	.word	0x08007a94
 8006600:	20001a40 	.word	0x20001a40
 8006604:	080082f0 	.word	0x080082f0
 8006608:	20001b88 	.word	0x20001b88
 800660c:	08007b84 	.word	0x08007b84
 8006610:	20001cd0 	.word	0x20001cd0
 8006614:	20000cd0 	.word	0x20000cd0
 8006618:	08007b80 	.word	0x08007b80
 800661c:	00000000 	.word	0x00000000

08006620 <thd2_execute>:
 8006620:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006624:	4d41      	ldr	r5, [pc, #260]	; (800672c <thd2_execute+0x10c>)
 8006626:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8006754 <thd2_execute+0x134>
 800662a:	69ab      	ldr	r3, [r5, #24]
 800662c:	4c40      	ldr	r4, [pc, #256]	; (8006730 <thd2_execute+0x110>)
 800662e:	689a      	ldr	r2, [r3, #8]
 8006630:	4940      	ldr	r1, [pc, #256]	; (8006734 <thd2_execute+0x114>)
 8006632:	b083      	sub	sp, #12
 8006634:	4643      	mov	r3, r8
 8006636:	9100      	str	r1, [sp, #0]
 8006638:	3a04      	subs	r2, #4
 800663a:	f504 70a4 	add.w	r0, r4, #328	; 0x148
 800663e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006642:	f7fc fb5d 	bl	8002d00 <chThdCreateStatic>
 8006646:	69ab      	ldr	r3, [r5, #24]
 8006648:	4e3b      	ldr	r6, [pc, #236]	; (8006738 <thd2_execute+0x118>)
 800664a:	689a      	ldr	r2, [r3, #8]
 800664c:	493b      	ldr	r1, [pc, #236]	; (800673c <thd2_execute+0x11c>)
 800664e:	6070      	str	r0, [r6, #4]
 8006650:	4643      	mov	r3, r8
 8006652:	9100      	str	r1, [sp, #0]
 8006654:	3a05      	subs	r2, #5
 8006656:	4620      	mov	r0, r4
 8006658:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800665c:	f7fc fb50 	bl	8002d00 <chThdCreateStatic>
 8006660:	69ab      	ldr	r3, [r5, #24]
 8006662:	4937      	ldr	r1, [pc, #220]	; (8006740 <thd2_execute+0x120>)
 8006664:	689a      	ldr	r2, [r3, #8]
 8006666:	6030      	str	r0, [r6, #0]
 8006668:	4643      	mov	r3, r8
 800666a:	9100      	str	r1, [sp, #0]
 800666c:	3a01      	subs	r2, #1
 800666e:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8006672:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006676:	f7fc fb43 	bl	8002d00 <chThdCreateStatic>
 800667a:	69ab      	ldr	r3, [r5, #24]
 800667c:	4931      	ldr	r1, [pc, #196]	; (8006744 <thd2_execute+0x124>)
 800667e:	689a      	ldr	r2, [r3, #8]
 8006680:	6130      	str	r0, [r6, #16]
 8006682:	9100      	str	r1, [sp, #0]
 8006684:	3a02      	subs	r2, #2
 8006686:	4643      	mov	r3, r8
 8006688:	f504 7076 	add.w	r0, r4, #984	; 0x3d8
 800668c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006690:	f7fc fb36 	bl	8002d00 <chThdCreateStatic>
 8006694:	2220      	movs	r2, #32
 8006696:	60f0      	str	r0, [r6, #12]
 8006698:	f382 8811 	msr	BASEPRI, r2
 800669c:	2700      	movs	r7, #0
 800669e:	2002      	movs	r0, #2
 80066a0:	f04f 0901 	mov.w	r9, #1
 80066a4:	69ab      	ldr	r3, [r5, #24]
 80066a6:	4928      	ldr	r1, [pc, #160]	; (8006748 <thd2_execute+0x128>)
 80066a8:	689b      	ldr	r3, [r3, #8]
 80066aa:	f8c4 13b8 	str.w	r1, [r4, #952]	; 0x3b8
 80066ae:	3b03      	subs	r3, #3
 80066b0:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 80066b4:	f8c4 32cc 	str.w	r3, [r4, #716]	; 0x2cc
 80066b8:	f504 736d 	add.w	r3, r4, #948	; 0x3b4
 80066bc:	f8c4 329c 	str.w	r3, [r4, #668]	; 0x29c
 80066c0:	4b22      	ldr	r3, [pc, #136]	; (800674c <thd2_execute+0x12c>)
 80066c2:	6969      	ldr	r1, [r5, #20]
 80066c4:	f8c4 33d4 	str.w	r3, [r4, #980]	; 0x3d4
 80066c8:	f504 7324 	add.w	r3, r4, #656	; 0x290
 80066cc:	f8a4 02ac 	strh.w	r0, [r4, #684]	; 0x2ac
 80066d0:	f8c4 12a4 	str.w	r1, [r4, #676]	; 0x2a4
 80066d4:	f8c4 83b4 	str.w	r8, [r4, #948]	; 0x3b4
 80066d8:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
 80066dc:	f504 702d 	add.w	r0, r4, #692	; 0x2b4
 80066e0:	f8c4 72c8 	str.w	r7, [r4, #712]	; 0x2c8
 80066e4:	f8c4 72c4 	str.w	r7, [r4, #708]	; 0x2c4
 80066e8:	f8c4 72a8 	str.w	r7, [r4, #680]	; 0x2a8
 80066ec:	f884 92ae 	strb.w	r9, [r4, #686]	; 0x2ae
 80066f0:	610b      	str	r3, [r1, #16]
 80066f2:	f504 712e 	add.w	r1, r4, #696	; 0x2b8
 80066f6:	616b      	str	r3, [r5, #20]
 80066f8:	60b3      	str	r3, [r6, #8]
 80066fa:	f8c4 02b4 	str.w	r0, [r4, #692]	; 0x2b4
 80066fe:	f8c4 12b8 	str.w	r1, [r4, #696]	; 0x2b8
 8006702:	f8c4 12bc 	str.w	r1, [r4, #700]	; 0x2bc
 8006706:	f387 8811 	msr	BASEPRI, r7
 800670a:	68b0      	ldr	r0, [r6, #8]
 800670c:	f382 8811 	msr	BASEPRI, r2
 8006710:	f7fa fc1e 	bl	8000f50 <chSchReadyI>
 8006714:	f387 8811 	msr	BASEPRI, r7
 8006718:	f7fe fc12 	bl	8004f40 <test_wait_threads>
 800671c:	4648      	mov	r0, r9
 800671e:	490c      	ldr	r1, [pc, #48]	; (8006750 <thd2_execute+0x130>)
 8006720:	b003      	add	sp, #12
 8006722:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006726:	f7f9 bff3 	b.w	8000710 <_test_assert_sequence>
 800672a:	bf00      	nop
 800672c:	20001558 	.word	0x20001558
 8006730:	200017b0 	.word	0x200017b0
 8006734:	080082f0 	.word	0x080082f0
 8006738:	20001e44 	.word	0x20001e44
 800673c:	08007b84 	.word	0x08007b84
 8006740:	08007aa0 	.word	0x08007aa0
 8006744:	08007a90 	.word	0x08007a90
 8006748:	08007a94 	.word	0x08007a94
 800674c:	08000211 	.word	0x08000211
 8006750:	08007b80 	.word	0x08007b80
 8006754:	080007e1 	.word	0x080007e1
	...

08006760 <thd1_execute>:
 8006760:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006762:	4f27      	ldr	r7, [pc, #156]	; (8006800 <thd1_execute+0xa0>)
 8006764:	4e27      	ldr	r6, [pc, #156]	; (8006804 <thd1_execute+0xa4>)
 8006766:	69bb      	ldr	r3, [r7, #24]
 8006768:	4d27      	ldr	r5, [pc, #156]	; (8006808 <thd1_execute+0xa8>)
 800676a:	689a      	ldr	r2, [r3, #8]
 800676c:	4927      	ldr	r1, [pc, #156]	; (800680c <thd1_execute+0xac>)
 800676e:	b083      	sub	sp, #12
 8006770:	4633      	mov	r3, r6
 8006772:	9100      	str	r1, [sp, #0]
 8006774:	3a05      	subs	r2, #5
 8006776:	4628      	mov	r0, r5
 8006778:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800677c:	f7fc fac0 	bl	8002d00 <chThdCreateStatic>
 8006780:	69bb      	ldr	r3, [r7, #24]
 8006782:	4c23      	ldr	r4, [pc, #140]	; (8006810 <thd1_execute+0xb0>)
 8006784:	689a      	ldr	r2, [r3, #8]
 8006786:	4923      	ldr	r1, [pc, #140]	; (8006814 <thd1_execute+0xb4>)
 8006788:	6020      	str	r0, [r4, #0]
 800678a:	4633      	mov	r3, r6
 800678c:	9100      	str	r1, [sp, #0]
 800678e:	3a04      	subs	r2, #4
 8006790:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8006794:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8006798:	f7fc fab2 	bl	8002d00 <chThdCreateStatic>
 800679c:	69bb      	ldr	r3, [r7, #24]
 800679e:	491e      	ldr	r1, [pc, #120]	; (8006818 <thd1_execute+0xb8>)
 80067a0:	689a      	ldr	r2, [r3, #8]
 80067a2:	6060      	str	r0, [r4, #4]
 80067a4:	4633      	mov	r3, r6
 80067a6:	9100      	str	r1, [sp, #0]
 80067a8:	3a03      	subs	r2, #3
 80067aa:	f505 7024 	add.w	r0, r5, #656	; 0x290
 80067ae:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80067b2:	f7fc faa5 	bl	8002d00 <chThdCreateStatic>
 80067b6:	69bb      	ldr	r3, [r7, #24]
 80067b8:	4918      	ldr	r1, [pc, #96]	; (800681c <thd1_execute+0xbc>)
 80067ba:	689a      	ldr	r2, [r3, #8]
 80067bc:	60a0      	str	r0, [r4, #8]
 80067be:	4633      	mov	r3, r6
 80067c0:	9100      	str	r1, [sp, #0]
 80067c2:	3a02      	subs	r2, #2
 80067c4:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 80067c8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80067cc:	f7fc fa98 	bl	8002d00 <chThdCreateStatic>
 80067d0:	69bb      	ldr	r3, [r7, #24]
 80067d2:	4913      	ldr	r1, [pc, #76]	; (8006820 <thd1_execute+0xc0>)
 80067d4:	689a      	ldr	r2, [r3, #8]
 80067d6:	60e0      	str	r0, [r4, #12]
 80067d8:	3a01      	subs	r2, #1
 80067da:	4633      	mov	r3, r6
 80067dc:	9100      	str	r1, [sp, #0]
 80067de:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 80067e2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80067e6:	f7fc fa8b 	bl	8002d00 <chThdCreateStatic>
 80067ea:	6120      	str	r0, [r4, #16]
 80067ec:	f7fe fba8 	bl	8004f40 <test_wait_threads>
 80067f0:	2001      	movs	r0, #1
 80067f2:	490c      	ldr	r1, [pc, #48]	; (8006824 <thd1_execute+0xc4>)
 80067f4:	b003      	add	sp, #12
 80067f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80067fa:	f7f9 bf89 	b.w	8000710 <_test_assert_sequence>
 80067fe:	bf00      	nop
 8006800:	20001558 	.word	0x20001558
 8006804:	080007e1 	.word	0x080007e1
 8006808:	200017b0 	.word	0x200017b0
 800680c:	08007b84 	.word	0x08007b84
 8006810:	20001e44 	.word	0x20001e44
 8006814:	080082f0 	.word	0x080082f0
 8006818:	08007a94 	.word	0x08007a94
 800681c:	08007a90 	.word	0x08007a90
 8006820:	08007aa0 	.word	0x08007aa0
 8006824:	08007b80 	.word	0x08007b80
	...

08006830 <TestThread>:
 8006830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006834:	4ca0      	ldr	r4, [pc, #640]	; (8006ab8 <TestThread+0x288>)
 8006836:	b083      	sub	sp, #12
 8006838:	6020      	str	r0, [r4, #0]
 800683a:	48a0      	ldr	r0, [pc, #640]	; (8006abc <TestThread+0x28c>)
 800683c:	f7f9 ffe0 	bl	8000800 <test_println>
 8006840:	489f      	ldr	r0, [pc, #636]	; (8006ac0 <TestThread+0x290>)
 8006842:	f7f9 ffdd 	bl	8000800 <test_println>
 8006846:	489f      	ldr	r0, [pc, #636]	; (8006ac4 <TestThread+0x294>)
 8006848:	f7f9 ffda 	bl	8000800 <test_println>
 800684c:	212a      	movs	r1, #42	; 0x2a
 800684e:	4d9e      	ldr	r5, [pc, #632]	; (8006ac8 <TestThread+0x298>)
 8006850:	6820      	ldr	r0, [r4, #0]
 8006852:	6803      	ldr	r3, [r0, #0]
 8006854:	689b      	ldr	r3, [r3, #8]
 8006856:	4798      	blx	r3
 8006858:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800685c:	2900      	cmp	r1, #0
 800685e:	d1f7      	bne.n	8006850 <TestThread+0x20>
 8006860:	489a      	ldr	r0, [pc, #616]	; (8006acc <TestThread+0x29c>)
 8006862:	f7f9 ffcd 	bl	8000800 <test_println>
 8006866:	212a      	movs	r1, #42	; 0x2a
 8006868:	4d99      	ldr	r5, [pc, #612]	; (8006ad0 <TestThread+0x2a0>)
 800686a:	6820      	ldr	r0, [r4, #0]
 800686c:	6803      	ldr	r3, [r0, #0]
 800686e:	689b      	ldr	r3, [r3, #8]
 8006870:	4798      	blx	r3
 8006872:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006876:	2900      	cmp	r1, #0
 8006878:	d1f7      	bne.n	800686a <TestThread+0x3a>
 800687a:	4896      	ldr	r0, [pc, #600]	; (8006ad4 <TestThread+0x2a4>)
 800687c:	f7f9 ffc0 	bl	8000800 <test_println>
 8006880:	212a      	movs	r1, #42	; 0x2a
 8006882:	4d95      	ldr	r5, [pc, #596]	; (8006ad8 <TestThread+0x2a8>)
 8006884:	6820      	ldr	r0, [r4, #0]
 8006886:	6803      	ldr	r3, [r0, #0]
 8006888:	689b      	ldr	r3, [r3, #8]
 800688a:	4798      	blx	r3
 800688c:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006890:	2900      	cmp	r1, #0
 8006892:	d1f7      	bne.n	8006884 <TestThread+0x54>
 8006894:	4891      	ldr	r0, [pc, #580]	; (8006adc <TestThread+0x2ac>)
 8006896:	f7f9 ffb3 	bl	8000800 <test_println>
 800689a:	212a      	movs	r1, #42	; 0x2a
 800689c:	4d90      	ldr	r5, [pc, #576]	; (8006ae0 <TestThread+0x2b0>)
 800689e:	6820      	ldr	r0, [r4, #0]
 80068a0:	6803      	ldr	r3, [r0, #0]
 80068a2:	689b      	ldr	r3, [r3, #8]
 80068a4:	4798      	blx	r3
 80068a6:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 80068aa:	2900      	cmp	r1, #0
 80068ac:	d1f7      	bne.n	800689e <TestThread+0x6e>
 80068ae:	488d      	ldr	r0, [pc, #564]	; (8006ae4 <TestThread+0x2b4>)
 80068b0:	f7f9 ffa6 	bl	8000800 <test_println>
 80068b4:	212a      	movs	r1, #42	; 0x2a
 80068b6:	4d8c      	ldr	r5, [pc, #560]	; (8006ae8 <TestThread+0x2b8>)
 80068b8:	6820      	ldr	r0, [r4, #0]
 80068ba:	6803      	ldr	r3, [r0, #0]
 80068bc:	689b      	ldr	r3, [r3, #8]
 80068be:	4798      	blx	r3
 80068c0:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 80068c4:	2900      	cmp	r1, #0
 80068c6:	d1f7      	bne.n	80068b8 <TestThread+0x88>
 80068c8:	4888      	ldr	r0, [pc, #544]	; (8006aec <TestThread+0x2bc>)
 80068ca:	f7f9 ff99 	bl	8000800 <test_println>
 80068ce:	212a      	movs	r1, #42	; 0x2a
 80068d0:	4d87      	ldr	r5, [pc, #540]	; (8006af0 <TestThread+0x2c0>)
 80068d2:	6820      	ldr	r0, [r4, #0]
 80068d4:	6803      	ldr	r3, [r0, #0]
 80068d6:	689b      	ldr	r3, [r3, #8]
 80068d8:	4798      	blx	r3
 80068da:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 80068de:	2900      	cmp	r1, #0
 80068e0:	d1f7      	bne.n	80068d2 <TestThread+0xa2>
 80068e2:	4884      	ldr	r0, [pc, #528]	; (8006af4 <TestThread+0x2c4>)
 80068e4:	f7f9 ff8c 	bl	8000800 <test_println>
 80068e8:	212a      	movs	r1, #42	; 0x2a
 80068ea:	4d83      	ldr	r5, [pc, #524]	; (8006af8 <TestThread+0x2c8>)
 80068ec:	6820      	ldr	r0, [r4, #0]
 80068ee:	6803      	ldr	r3, [r0, #0]
 80068f0:	689b      	ldr	r3, [r3, #8]
 80068f2:	4798      	blx	r3
 80068f4:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 80068f8:	2900      	cmp	r1, #0
 80068fa:	d1f7      	bne.n	80068ec <TestThread+0xbc>
 80068fc:	487f      	ldr	r0, [pc, #508]	; (8006afc <TestThread+0x2cc>)
 80068fe:	f7f9 ff7f 	bl	8000800 <test_println>
 8006902:	212a      	movs	r1, #42	; 0x2a
 8006904:	4d7e      	ldr	r5, [pc, #504]	; (8006b00 <TestThread+0x2d0>)
 8006906:	6820      	ldr	r0, [r4, #0]
 8006908:	6803      	ldr	r3, [r0, #0]
 800690a:	689b      	ldr	r3, [r3, #8]
 800690c:	4798      	blx	r3
 800690e:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006912:	2900      	cmp	r1, #0
 8006914:	d1f7      	bne.n	8006906 <TestThread+0xd6>
 8006916:	487b      	ldr	r0, [pc, #492]	; (8006b04 <TestThread+0x2d4>)
 8006918:	9100      	str	r1, [sp, #0]
 800691a:	f7f9 ff71 	bl	8000800 <test_println>
 800691e:	4867      	ldr	r0, [pc, #412]	; (8006abc <TestThread+0x28c>)
 8006920:	f7f9 ff6e 	bl	8000800 <test_println>
 8006924:	9900      	ldr	r1, [sp, #0]
 8006926:	4b78      	ldr	r3, [pc, #480]	; (8006b08 <TestThread+0x2d8>)
 8006928:	468b      	mov	fp, r1
 800692a:	7019      	strb	r1, [r3, #0]
 800692c:	4b77      	ldr	r3, [pc, #476]	; (8006b0c <TestThread+0x2dc>)
 800692e:	f8df 8214 	ldr.w	r8, [pc, #532]	; 8006b44 <TestThread+0x314>
 8006932:	9301      	str	r3, [sp, #4]
 8006934:	4b76      	ldr	r3, [pc, #472]	; (8006b10 <TestThread+0x2e0>)
 8006936:	4f77      	ldr	r7, [pc, #476]	; (8006b14 <TestThread+0x2e4>)
 8006938:	9300      	str	r3, [sp, #0]
 800693a:	f8df a20c 	ldr.w	sl, [pc, #524]	; 8006b48 <TestThread+0x318>
 800693e:	4b76      	ldr	r3, [pc, #472]	; (8006b18 <TestThread+0x2e8>)
 8006940:	f10b 0b01 	add.w	fp, fp, #1
 8006944:	2600      	movs	r6, #0
 8006946:	2b00      	cmp	r3, #0
 8006948:	f000 8089 	beq.w	8006a5e <TestThread+0x22e>
 800694c:	f7f9 fe90 	bl	8000670 <print_line>
 8006950:	212d      	movs	r1, #45	; 0x2d
 8006952:	4d72      	ldr	r5, [pc, #456]	; (8006b1c <TestThread+0x2ec>)
 8006954:	6820      	ldr	r0, [r4, #0]
 8006956:	6803      	ldr	r3, [r0, #0]
 8006958:	689b      	ldr	r3, [r3, #8]
 800695a:	4798      	blx	r3
 800695c:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006960:	2900      	cmp	r1, #0
 8006962:	d1f7      	bne.n	8006954 <TestThread+0x124>
 8006964:	4658      	mov	r0, fp
 8006966:	f7f9 fe73 	bl	8000650 <test_printn>
 800696a:	6820      	ldr	r0, [r4, #0]
 800696c:	212e      	movs	r1, #46	; 0x2e
 800696e:	6803      	ldr	r3, [r0, #0]
 8006970:	1c75      	adds	r5, r6, #1
 8006972:	689b      	ldr	r3, [r3, #8]
 8006974:	4798      	blx	r3
 8006976:	4628      	mov	r0, r5
 8006978:	f7f9 fe6a 	bl	8000650 <test_printn>
 800697c:	2120      	movs	r1, #32
 800697e:	f8df 91cc 	ldr.w	r9, [pc, #460]	; 8006b4c <TestThread+0x31c>
 8006982:	6820      	ldr	r0, [r4, #0]
 8006984:	6803      	ldr	r3, [r0, #0]
 8006986:	689b      	ldr	r3, [r3, #8]
 8006988:	4798      	blx	r3
 800698a:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800698e:	2900      	cmp	r1, #0
 8006990:	d1f7      	bne.n	8006982 <TestThread+0x152>
 8006992:	f858 3026 	ldr.w	r3, [r8, r6, lsl #2]
 8006996:	f8d3 9000 	ldr.w	r9, [r3]
 800699a:	f899 1000 	ldrb.w	r1, [r9]
 800699e:	b139      	cbz	r1, 80069b0 <TestThread+0x180>
 80069a0:	6820      	ldr	r0, [r4, #0]
 80069a2:	6803      	ldr	r3, [r0, #0]
 80069a4:	689b      	ldr	r3, [r3, #8]
 80069a6:	4798      	blx	r3
 80069a8:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 80069ac:	2900      	cmp	r1, #0
 80069ae:	d1f7      	bne.n	80069a0 <TestThread+0x170>
 80069b0:	485b      	ldr	r0, [pc, #364]	; (8006b20 <TestThread+0x2f0>)
 80069b2:	f7f9 ff25 	bl	8000800 <test_println>
 80069b6:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80069ba:	f7fd f869 	bl	8003a90 <chThdSleep>
 80069be:	2300      	movs	r3, #0
 80069c0:	4a58      	ldr	r2, [pc, #352]	; (8006b24 <TestThread+0x2f4>)
 80069c2:	f858 9026 	ldr.w	r9, [r8, r6, lsl #2]
 80069c6:	e9c2 3300 	strd	r3, r3, [r2]
 80069ca:	e9c2 3302 	strd	r3, r3, [r2, #8]
 80069ce:	6113      	str	r3, [r2, #16]
 80069d0:	4955      	ldr	r1, [pc, #340]	; (8006b28 <TestThread+0x2f8>)
 80069d2:	f8d9 2004 	ldr.w	r2, [r9, #4]
 80069d6:	6039      	str	r1, [r7, #0]
 80069d8:	f88a 3000 	strb.w	r3, [sl]
 80069dc:	b102      	cbz	r2, 80069e0 <TestThread+0x1b0>
 80069de:	4790      	blx	r2
 80069e0:	f8d9 300c 	ldr.w	r3, [r9, #12]
 80069e4:	4798      	blx	r3
 80069e6:	f8d9 3008 	ldr.w	r3, [r9, #8]
 80069ea:	b103      	cbz	r3, 80069ee <TestThread+0x1be>
 80069ec:	4798      	blx	r3
 80069ee:	f7fe faa7 	bl	8004f40 <test_wait_threads>
 80069f2:	f89a 3000 	ldrb.w	r3, [sl]
 80069f6:	2b00      	cmp	r3, #0
 80069f8:	d03c      	beq.n	8006a74 <TestThread+0x244>
 80069fa:	212d      	movs	r1, #45	; 0x2d
 80069fc:	f8df 9150 	ldr.w	r9, [pc, #336]	; 8006b50 <TestThread+0x320>
 8006a00:	6820      	ldr	r0, [r4, #0]
 8006a02:	6803      	ldr	r3, [r0, #0]
 8006a04:	689b      	ldr	r3, [r3, #8]
 8006a06:	4798      	blx	r3
 8006a08:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8006a0c:	2900      	cmp	r1, #0
 8006a0e:	d1f7      	bne.n	8006a00 <TestThread+0x1d0>
 8006a10:	4b46      	ldr	r3, [pc, #280]	; (8006b2c <TestThread+0x2fc>)
 8006a12:	f8df 9140 	ldr.w	r9, [pc, #320]	; 8006b54 <TestThread+0x324>
 8006a16:	6818      	ldr	r0, [r3, #0]
 8006a18:	f7f9 fe1a 	bl	8000650 <test_printn>
 8006a1c:	2120      	movs	r1, #32
 8006a1e:	6820      	ldr	r0, [r4, #0]
 8006a20:	6803      	ldr	r3, [r0, #0]
 8006a22:	689b      	ldr	r3, [r3, #8]
 8006a24:	4798      	blx	r3
 8006a26:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8006a2a:	2900      	cmp	r1, #0
 8006a2c:	d1f7      	bne.n	8006a1e <TestThread+0x1ee>
 8006a2e:	683b      	ldr	r3, [r7, #0]
 8006a30:	4a3d      	ldr	r2, [pc, #244]	; (8006b28 <TestThread+0x2f8>)
 8006a32:	4293      	cmp	r3, r2
 8006a34:	d909      	bls.n	8006a4a <TestThread+0x21a>
 8006a36:	4691      	mov	r9, r2
 8006a38:	6820      	ldr	r0, [r4, #0]
 8006a3a:	f819 1b01 	ldrb.w	r1, [r9], #1
 8006a3e:	6803      	ldr	r3, [r0, #0]
 8006a40:	689b      	ldr	r3, [r3, #8]
 8006a42:	4798      	blx	r3
 8006a44:	683b      	ldr	r3, [r7, #0]
 8006a46:	4599      	cmp	r9, r3
 8006a48:	d3f6      	bcc.n	8006a38 <TestThread+0x208>
 8006a4a:	4839      	ldr	r0, [pc, #228]	; (8006b30 <TestThread+0x300>)
 8006a4c:	f7f9 fed8 	bl	8000800 <test_println>
 8006a50:	eb08 0386 	add.w	r3, r8, r6, lsl #2
 8006a54:	685b      	ldr	r3, [r3, #4]
 8006a56:	462e      	mov	r6, r5
 8006a58:	2b00      	cmp	r3, #0
 8006a5a:	f47f af77 	bne.w	800694c <TestThread+0x11c>
 8006a5e:	9a00      	ldr	r2, [sp, #0]
 8006a60:	b162      	cbz	r2, 8006a7c <TestThread+0x24c>
 8006a62:	6813      	ldr	r3, [r2, #0]
 8006a64:	4690      	mov	r8, r2
 8006a66:	9a01      	ldr	r2, [sp, #4]
 8006a68:	4611      	mov	r1, r2
 8006a6a:	f851 2f04 	ldr.w	r2, [r1, #4]!
 8006a6e:	9200      	str	r2, [sp, #0]
 8006a70:	9101      	str	r1, [sp, #4]
 8006a72:	e765      	b.n	8006940 <TestThread+0x110>
 8006a74:	482f      	ldr	r0, [pc, #188]	; (8006b34 <TestThread+0x304>)
 8006a76:	f7f9 fec3 	bl	8000800 <test_println>
 8006a7a:	e7e9      	b.n	8006a50 <TestThread+0x220>
 8006a7c:	f7f9 fdf8 	bl	8000670 <print_line>
 8006a80:	480e      	ldr	r0, [pc, #56]	; (8006abc <TestThread+0x28c>)
 8006a82:	f7f9 febd 	bl	8000800 <test_println>
 8006a86:	2146      	movs	r1, #70	; 0x46
 8006a88:	4d2b      	ldr	r5, [pc, #172]	; (8006b38 <TestThread+0x308>)
 8006a8a:	6820      	ldr	r0, [r4, #0]
 8006a8c:	6803      	ldr	r3, [r0, #0]
 8006a8e:	689b      	ldr	r3, [r3, #8]
 8006a90:	4798      	blx	r3
 8006a92:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8006a96:	2900      	cmp	r1, #0
 8006a98:	d1f7      	bne.n	8006a8a <TestThread+0x25a>
 8006a9a:	4b1b      	ldr	r3, [pc, #108]	; (8006b08 <TestThread+0x2d8>)
 8006a9c:	781b      	ldrb	r3, [r3, #0]
 8006a9e:	b92b      	cbnz	r3, 8006aac <TestThread+0x27c>
 8006aa0:	4826      	ldr	r0, [pc, #152]	; (8006b3c <TestThread+0x30c>)
 8006aa2:	b003      	add	sp, #12
 8006aa4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006aa8:	f7f9 beaa 	b.w	8000800 <test_println>
 8006aac:	4824      	ldr	r0, [pc, #144]	; (8006b40 <TestThread+0x310>)
 8006aae:	b003      	add	sp, #12
 8006ab0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ab4:	f7f9 bea4 	b.w	8000800 <test_println>
 8006ab8:	200016a8 	.word	0x200016a8
 8006abc:	08007da4 	.word	0x08007da4
 8006ac0:	08007550 	.word	0x08007550
 8006ac4:	0800756c 	.word	0x0800756c
 8006ac8:	08007470 	.word	0x08007470
 8006acc:	08007788 	.word	0x08007788
 8006ad0:	08007484 	.word	0x08007484
 8006ad4:	08007570 	.word	0x08007570
 8006ad8:	08007498 	.word	0x08007498
 8006adc:	080077a4 	.word	0x080077a4
 8006ae0:	080074ac 	.word	0x080074ac
 8006ae4:	08007800 	.word	0x08007800
 8006ae8:	080074c0 	.word	0x080074c0
 8006aec:	0800781c 	.word	0x0800781c
 8006af0:	080074d4 	.word	0x080074d4
 8006af4:	0800783c 	.word	0x0800783c
 8006af8:	080074e8 	.word	0x080074e8
 8006afc:	08007868 	.word	0x08007868
 8006b00:	080074fc 	.word	0x080074fc
 8006b04:	080078a4 	.word	0x080078a4
 8006b08:	20001e18 	.word	0x20001e18
 8006b0c:	08007c64 	.word	0x08007c64
 8006b10:	08007cd0 	.word	0x08007cd0
 8006b14:	20001e68 	.word	0x20001e68
 8006b18:	08008590 	.word	0x08008590
 8006b1c:	08007510 	.word	0x08007510
 8006b20:	08007588 	.word	0x08007588
 8006b24:	20001e44 	.word	0x20001e44
 8006b28:	20001e58 	.word	0x20001e58
 8006b2c:	20001724 	.word	0x20001724
 8006b30:	0800758c 	.word	0x0800758c
 8006b34:	08007590 	.word	0x08007590
 8006b38:	08007540 	.word	0x08007540
 8006b3c:	0800759c 	.word	0x0800759c
 8006b40:	080075a4 	.word	0x080075a4
 8006b44:	08007cc0 	.word	0x08007cc0
 8006b48:	2000177c 	.word	0x2000177c
 8006b4c:	08007520 	.word	0x08007520
 8006b50:	08007524 	.word	0x08007524
 8006b54:	0800753c 	.word	0x0800753c
	...

08006b60 <chThdExitS>:
 8006b60:	b538      	push	{r3, r4, r5, lr}
 8006b62:	4b0e      	ldr	r3, [pc, #56]	; (8006b9c <chThdExitS+0x3c>)
 8006b64:	699c      	ldr	r4, [r3, #24]
 8006b66:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006b68:	f104 0524 	add.w	r5, r4, #36	; 0x24
 8006b6c:	42ab      	cmp	r3, r5
 8006b6e:	6220      	str	r0, [r4, #32]
 8006b70:	d007      	beq.n	8006b82 <chThdExitS+0x22>
 8006b72:	681a      	ldr	r2, [r3, #0]
 8006b74:	4618      	mov	r0, r3
 8006b76:	6262      	str	r2, [r4, #36]	; 0x24
 8006b78:	f7fa f9ea 	bl	8000f50 <chSchReadyI>
 8006b7c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006b7e:	42ab      	cmp	r3, r5
 8006b80:	d1f7      	bne.n	8006b72 <chThdExitS+0x12>
 8006b82:	7f63      	ldrb	r3, [r4, #29]
 8006b84:	079b      	lsls	r3, r3, #30
 8006b86:	d104      	bne.n	8006b92 <chThdExitS+0x32>
 8006b88:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 8006b8c:	611a      	str	r2, [r3, #16]
 8006b8e:	6922      	ldr	r2, [r4, #16]
 8006b90:	6153      	str	r3, [r2, #20]
 8006b92:	200f      	movs	r0, #15
 8006b94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006b98:	f7fc b8ea 	b.w	8002d70 <chSchGoSleepS>
 8006b9c:	20001558 	.word	0x20001558

08006ba0 <shell_thread>:
 8006ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ba4:	4b80      	ldr	r3, [pc, #512]	; (8006da8 <shell_thread+0x208>)
 8006ba6:	6804      	ldr	r4, [r0, #0]
 8006ba8:	699b      	ldr	r3, [r3, #24]
 8006baa:	4a80      	ldr	r2, [pc, #512]	; (8006dac <shell_thread+0x20c>)
 8006bac:	b099      	sub	sp, #100	; 0x64
 8006bae:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8006bb2:	497f      	ldr	r1, [pc, #508]	; (8006db0 <shell_thread+0x210>)
 8006bb4:	4620      	mov	r0, r4
 8006bb6:	619a      	str	r2, [r3, #24]
 8006bb8:	f7fa fd1a 	bl	80015f0 <chprintf.lto_priv.72>
 8006bbc:	f8df 8224 	ldr.w	r8, [pc, #548]	; 8006de4 <shell_thread+0x244>
 8006bc0:	ae08      	add	r6, sp, #32
 8006bc2:	f10d 075f 	add.w	r7, sp, #95	; 0x5f
 8006bc6:	4635      	mov	r5, r6
 8006bc8:	4641      	mov	r1, r8
 8006bca:	4620      	mov	r0, r4
 8006bcc:	f7fa fd10 	bl	80015f0 <chprintf.lto_priv.72>
 8006bd0:	6823      	ldr	r3, [r4, #0]
 8006bd2:	685b      	ldr	r3, [r3, #4]
 8006bd4:	2201      	movs	r2, #1
 8006bd6:	f10d 0107 	add.w	r1, sp, #7
 8006bda:	4620      	mov	r0, r4
 8006bdc:	4798      	blx	r3
 8006bde:	2800      	cmp	r0, #0
 8006be0:	d072      	beq.n	8006cc8 <shell_thread+0x128>
 8006be2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8006be6:	2904      	cmp	r1, #4
 8006be8:	d06a      	beq.n	8006cc0 <shell_thread+0x120>
 8006bea:	2908      	cmp	r1, #8
 8006bec:	d012      	beq.n	8006c14 <shell_thread+0x74>
 8006bee:	297f      	cmp	r1, #127	; 0x7f
 8006bf0:	d010      	beq.n	8006c14 <shell_thread+0x74>
 8006bf2:	290d      	cmp	r1, #13
 8006bf4:	d022      	beq.n	8006c3c <shell_thread+0x9c>
 8006bf6:	291f      	cmp	r1, #31
 8006bf8:	6823      	ldr	r3, [r4, #0]
 8006bfa:	d9ea      	bls.n	8006bd2 <shell_thread+0x32>
 8006bfc:	42bd      	cmp	r5, r7
 8006bfe:	d2e8      	bcs.n	8006bd2 <shell_thread+0x32>
 8006c00:	689b      	ldr	r3, [r3, #8]
 8006c02:	4620      	mov	r0, r4
 8006c04:	4798      	blx	r3
 8006c06:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8006c0a:	3501      	adds	r5, #1
 8006c0c:	f805 3c01 	strb.w	r3, [r5, #-1]
 8006c10:	6823      	ldr	r3, [r4, #0]
 8006c12:	e7de      	b.n	8006bd2 <shell_thread+0x32>
 8006c14:	42b5      	cmp	r5, r6
 8006c16:	6823      	ldr	r3, [r4, #0]
 8006c18:	d0db      	beq.n	8006bd2 <shell_thread+0x32>
 8006c1a:	689b      	ldr	r3, [r3, #8]
 8006c1c:	4620      	mov	r0, r4
 8006c1e:	4798      	blx	r3
 8006c20:	6823      	ldr	r3, [r4, #0]
 8006c22:	2120      	movs	r1, #32
 8006c24:	689b      	ldr	r3, [r3, #8]
 8006c26:	4620      	mov	r0, r4
 8006c28:	4798      	blx	r3
 8006c2a:	6823      	ldr	r3, [r4, #0]
 8006c2c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8006c30:	689b      	ldr	r3, [r3, #8]
 8006c32:	4620      	mov	r0, r4
 8006c34:	4798      	blx	r3
 8006c36:	3d01      	subs	r5, #1
 8006c38:	6823      	ldr	r3, [r4, #0]
 8006c3a:	e7ca      	b.n	8006bd2 <shell_thread+0x32>
 8006c3c:	f04f 0a00 	mov.w	sl, #0
 8006c40:	495c      	ldr	r1, [pc, #368]	; (8006db4 <shell_thread+0x214>)
 8006c42:	4620      	mov	r0, r4
 8006c44:	f7fa fcd4 	bl	80015f0 <chprintf.lto_priv.72>
 8006c48:	f885 a000 	strb.w	sl, [r5]
 8006c4c:	a902      	add	r1, sp, #8
 8006c4e:	4630      	mov	r0, r6
 8006c50:	f7fa fca6 	bl	80015a0 <_strtok.constprop.2>
 8006c54:	a902      	add	r1, sp, #8
 8006c56:	4683      	mov	fp, r0
 8006c58:	2000      	movs	r0, #0
 8006c5a:	4655      	mov	r5, sl
 8006c5c:	f10d 0a0c 	add.w	sl, sp, #12
 8006c60:	f7fa fc9e 	bl	80015a0 <_strtok.constprop.2>
 8006c64:	b150      	cbz	r0, 8006c7c <shell_thread+0xdc>
 8006c66:	2d04      	cmp	r5, #4
 8006c68:	d023      	beq.n	8006cb2 <shell_thread+0x112>
 8006c6a:	f84a 0b04 	str.w	r0, [sl], #4
 8006c6e:	a902      	add	r1, sp, #8
 8006c70:	2000      	movs	r0, #0
 8006c72:	3501      	adds	r5, #1
 8006c74:	f7fa fc94 	bl	80015a0 <_strtok.constprop.2>
 8006c78:	2800      	cmp	r0, #0
 8006c7a:	d1f4      	bne.n	8006c66 <shell_thread+0xc6>
 8006c7c:	ab18      	add	r3, sp, #96	; 0x60
 8006c7e:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8006c82:	f843 0c54 	str.w	r0, [r3, #-84]
 8006c86:	f1bb 0f00 	cmp.w	fp, #0
 8006c8a:	d09c      	beq.n	8006bc6 <shell_thread+0x26>
 8006c8c:	494a      	ldr	r1, [pc, #296]	; (8006db8 <shell_thread+0x218>)
 8006c8e:	4658      	mov	r0, fp
 8006c90:	f000 fb3e 	bl	8007310 <strcasecmp>
 8006c94:	b9e8      	cbnz	r0, 8006cd2 <shell_thread+0x132>
 8006c96:	bb45      	cbnz	r5, 8006cea <shell_thread+0x14a>
 8006c98:	2320      	movs	r3, #32
 8006c9a:	f383 8811 	msr	BASEPRI, r3
 8006c9e:	2100      	movs	r1, #0
 8006ca0:	4846      	ldr	r0, [pc, #280]	; (8006dbc <shell_thread+0x21c>)
 8006ca2:	f7fa f9f5 	bl	8001090 <chEvtBroadcastFlagsI>
 8006ca6:	2000      	movs	r0, #0
 8006ca8:	f7ff ff5a 	bl	8006b60 <chThdExitS>
 8006cac:	b019      	add	sp, #100	; 0x64
 8006cae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006cb2:	4943      	ldr	r1, [pc, #268]	; (8006dc0 <shell_thread+0x220>)
 8006cb4:	4620      	mov	r0, r4
 8006cb6:	f7fa fc9b 	bl	80015f0 <chprintf.lto_priv.72>
 8006cba:	2300      	movs	r3, #0
 8006cbc:	9307      	str	r3, [sp, #28]
 8006cbe:	e782      	b.n	8006bc6 <shell_thread+0x26>
 8006cc0:	4940      	ldr	r1, [pc, #256]	; (8006dc4 <shell_thread+0x224>)
 8006cc2:	4620      	mov	r0, r4
 8006cc4:	f7fa fc94 	bl	80015f0 <chprintf.lto_priv.72>
 8006cc8:	4620      	mov	r0, r4
 8006cca:	493f      	ldr	r1, [pc, #252]	; (8006dc8 <shell_thread+0x228>)
 8006ccc:	f7fa fc90 	bl	80015f0 <chprintf.lto_priv.72>
 8006cd0:	e7e2      	b.n	8006c98 <shell_thread+0xf8>
 8006cd2:	493e      	ldr	r1, [pc, #248]	; (8006dcc <shell_thread+0x22c>)
 8006cd4:	4658      	mov	r0, fp
 8006cd6:	f000 fb1b 	bl	8007310 <strcasecmp>
 8006cda:	b960      	cbnz	r0, 8006cf6 <shell_thread+0x156>
 8006cdc:	b305      	cbz	r5, 8006d20 <shell_thread+0x180>
 8006cde:	4a3b      	ldr	r2, [pc, #236]	; (8006dcc <shell_thread+0x22c>)
 8006ce0:	493b      	ldr	r1, [pc, #236]	; (8006dd0 <shell_thread+0x230>)
 8006ce2:	4620      	mov	r0, r4
 8006ce4:	f7fa fc84 	bl	80015f0 <chprintf.lto_priv.72>
 8006ce8:	e76d      	b.n	8006bc6 <shell_thread+0x26>
 8006cea:	4a33      	ldr	r2, [pc, #204]	; (8006db8 <shell_thread+0x218>)
 8006cec:	4938      	ldr	r1, [pc, #224]	; (8006dd0 <shell_thread+0x230>)
 8006cee:	4620      	mov	r0, r4
 8006cf0:	f7fa fc7e 	bl	80015f0 <chprintf.lto_priv.72>
 8006cf4:	e767      	b.n	8006bc6 <shell_thread+0x26>
 8006cf6:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 8006de8 <shell_thread+0x248>
 8006cfa:	f8da 0000 	ldr.w	r0, [sl]
 8006cfe:	b918      	cbnz	r0, 8006d08 <shell_thread+0x168>
 8006d00:	e036      	b.n	8006d70 <shell_thread+0x1d0>
 8006d02:	f85a 0f08 	ldr.w	r0, [sl, #8]!
 8006d06:	b398      	cbz	r0, 8006d70 <shell_thread+0x1d0>
 8006d08:	4659      	mov	r1, fp
 8006d0a:	f000 fb01 	bl	8007310 <strcasecmp>
 8006d0e:	2800      	cmp	r0, #0
 8006d10:	d1f7      	bne.n	8006d02 <shell_thread+0x162>
 8006d12:	f8da 3004 	ldr.w	r3, [sl, #4]
 8006d16:	aa03      	add	r2, sp, #12
 8006d18:	4629      	mov	r1, r5
 8006d1a:	4620      	mov	r0, r4
 8006d1c:	4798      	blx	r3
 8006d1e:	e752      	b.n	8006bc6 <shell_thread+0x26>
 8006d20:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8006de8 <shell_thread+0x248>
 8006d24:	492b      	ldr	r1, [pc, #172]	; (8006dd4 <shell_thread+0x234>)
 8006d26:	4620      	mov	r0, r4
 8006d28:	f7fa fc62 	bl	80015f0 <chprintf.lto_priv.72>
 8006d2c:	f8da 2000 	ldr.w	r2, [sl]
 8006d30:	b142      	cbz	r2, 8006d44 <shell_thread+0x1a4>
 8006d32:	4d29      	ldr	r5, [pc, #164]	; (8006dd8 <shell_thread+0x238>)
 8006d34:	4629      	mov	r1, r5
 8006d36:	4620      	mov	r0, r4
 8006d38:	f7fa fc5a 	bl	80015f0 <chprintf.lto_priv.72>
 8006d3c:	f85a 2f08 	ldr.w	r2, [sl, #8]!
 8006d40:	2a00      	cmp	r2, #0
 8006d42:	d1f7      	bne.n	8006d34 <shell_thread+0x194>
 8006d44:	f1b9 0f00 	cmp.w	r9, #0
 8006d48:	d00d      	beq.n	8006d66 <shell_thread+0x1c6>
 8006d4a:	f8d9 2000 	ldr.w	r2, [r9]
 8006d4e:	b152      	cbz	r2, 8006d66 <shell_thread+0x1c6>
 8006d50:	464d      	mov	r5, r9
 8006d52:	f8df a084 	ldr.w	sl, [pc, #132]	; 8006dd8 <shell_thread+0x238>
 8006d56:	4651      	mov	r1, sl
 8006d58:	4620      	mov	r0, r4
 8006d5a:	f7fa fc49 	bl	80015f0 <chprintf.lto_priv.72>
 8006d5e:	f855 2f08 	ldr.w	r2, [r5, #8]!
 8006d62:	2a00      	cmp	r2, #0
 8006d64:	d1f7      	bne.n	8006d56 <shell_thread+0x1b6>
 8006d66:	4913      	ldr	r1, [pc, #76]	; (8006db4 <shell_thread+0x214>)
 8006d68:	4620      	mov	r0, r4
 8006d6a:	f7fa fc41 	bl	80015f0 <chprintf.lto_priv.72>
 8006d6e:	e72a      	b.n	8006bc6 <shell_thread+0x26>
 8006d70:	f1b9 0f00 	cmp.w	r9, #0
 8006d74:	d00d      	beq.n	8006d92 <shell_thread+0x1f2>
 8006d76:	f8d9 0000 	ldr.w	r0, [r9]
 8006d7a:	b150      	cbz	r0, 8006d92 <shell_thread+0x1f2>
 8006d7c:	46ca      	mov	sl, r9
 8006d7e:	e002      	b.n	8006d86 <shell_thread+0x1e6>
 8006d80:	f85a 0f08 	ldr.w	r0, [sl, #8]!
 8006d84:	b128      	cbz	r0, 8006d92 <shell_thread+0x1f2>
 8006d86:	4659      	mov	r1, fp
 8006d88:	f000 fac2 	bl	8007310 <strcasecmp>
 8006d8c:	2800      	cmp	r0, #0
 8006d8e:	d1f7      	bne.n	8006d80 <shell_thread+0x1e0>
 8006d90:	e7bf      	b.n	8006d12 <shell_thread+0x172>
 8006d92:	465a      	mov	r2, fp
 8006d94:	4911      	ldr	r1, [pc, #68]	; (8006ddc <shell_thread+0x23c>)
 8006d96:	4620      	mov	r0, r4
 8006d98:	f7fa fc2a 	bl	80015f0 <chprintf.lto_priv.72>
 8006d9c:	4910      	ldr	r1, [pc, #64]	; (8006de0 <shell_thread+0x240>)
 8006d9e:	4620      	mov	r0, r4
 8006da0:	f7fa fc26 	bl	80015f0 <chprintf.lto_priv.72>
 8006da4:	e70f      	b.n	8006bc6 <shell_thread+0x26>
 8006da6:	bf00      	nop
 8006da8:	20001558 	.word	0x20001558
 8006dac:	08007d20 	.word	0x08007d20
 8006db0:	08007d28 	.word	0x08007d28
 8006db4:	08007a4c 	.word	0x08007a4c
 8006db8:	08007d70 	.word	0x08007d70
 8006dbc:	200017ac 	.word	0x200017ac
 8006dc0:	08007d58 	.word	0x08007d58
 8006dc4:	08007d48 	.word	0x08007d48
 8006dc8:	08007d4c 	.word	0x08007d4c
 8006dcc:	08007d78 	.word	0x08007d78
 8006dd0:	08007998 	.word	0x08007998
 8006dd4:	08007d80 	.word	0x08007d80
 8006dd8:	08007d98 	.word	0x08007d98
 8006ddc:	08007d9c 	.word	0x08007d9c
 8006de0:	08007da0 	.word	0x08007da0
 8006de4:	08007d40 	.word	0x08007d40
 8006de8:	20000c40 	.word	0x20000c40
 8006dec:	00000000 	.word	0x00000000

08006df0 <main>:
 8006df0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8006df4:	2600      	movs	r6, #0
 8006df6:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8006dfa:	2701      	movs	r7, #1
 8006dfc:	f04f 3288 	mov.w	r2, #2290649224	; 0x88888888
 8006e00:	4bc8      	ldr	r3, [pc, #800]	; (8007124 <main+0x334>)
 8006e02:	4634      	mov	r4, r6
 8006e04:	6918      	ldr	r0, [r3, #16]
 8006e06:	6119      	str	r1, [r3, #16]
 8006e08:	611e      	str	r6, [r3, #16]
 8006e0a:	68d8      	ldr	r0, [r3, #12]
 8006e0c:	60d9      	str	r1, [r3, #12]
 8006e0e:	60de      	str	r6, [r3, #12]
 8006e10:	69d8      	ldr	r0, [r3, #28]
 8006e12:	4dc5      	ldr	r5, [pc, #788]	; (8007128 <main+0x338>)
 8006e14:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8006e18:	61d8      	str	r0, [r3, #28]
 8006e1a:	69d8      	ldr	r0, [r3, #28]
 8006e1c:	b089      	sub	sp, #36	; 0x24
 8006e1e:	f040 6000 	orr.w	r0, r0, #134217728	; 0x8000000
 8006e22:	61d8      	str	r0, [r3, #28]
 8006e24:	6828      	ldr	r0, [r5, #0]
 8006e26:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8006e2a:	6028      	str	r0, [r5, #0]
 8006e2c:	6998      	ldr	r0, [r3, #24]
 8006e2e:	4dbf      	ldr	r5, [pc, #764]	; (800712c <main+0x33c>)
 8006e30:	f440 70fe 	orr.w	r0, r0, #508	; 0x1fc
 8006e34:	4338      	orrs	r0, r7
 8006e36:	6198      	str	r0, [r3, #24]
 8006e38:	48bd      	ldr	r0, [pc, #756]	; (8007130 <main+0x340>)
 8006e3a:	f5a3 3384 	sub.w	r3, r3, #67584	; 0x10800
 8006e3e:	60dd      	str	r5, [r3, #12]
 8006e40:	6058      	str	r0, [r3, #4]
 8006e42:	f500 2088 	add.w	r0, r0, #278528	; 0x44000
 8006e46:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8006e4a:	6018      	str	r0, [r3, #0]
 8006e4c:	48b9      	ldr	r0, [pc, #740]	; (8007134 <main+0x344>)
 8006e4e:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 8006e52:	f8c3 0404 	str.w	r0, [r3, #1028]	; 0x404
 8006e56:	48b8      	ldr	r0, [pc, #736]	; (8007138 <main+0x348>)
 8006e58:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006e5c:	6018      	str	r0, [r3, #0]
 8006e5e:	48b7      	ldr	r0, [pc, #732]	; (800713c <main+0x34c>)
 8006e60:	4db7      	ldr	r5, [pc, #732]	; (8007140 <main+0x350>)
 8006e62:	60c1      	str	r1, [r0, #12]
 8006e64:	6042      	str	r2, [r0, #4]
 8006e66:	6002      	str	r2, [r0, #0]
 8006e68:	48b6      	ldr	r0, [pc, #728]	; (8007144 <main+0x354>)
 8006e6a:	f8c3 180c 	str.w	r1, [r3, #2060]	; 0x80c
 8006e6e:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8006e72:	f8c3 0800 	str.w	r0, [r3, #2048]	; 0x800
 8006e76:	48b4      	ldr	r0, [pc, #720]	; (8007148 <main+0x358>)
 8006e78:	f8c3 1c0c 	str.w	r1, [r3, #3084]	; 0xc0c
 8006e7c:	f8c3 2c04 	str.w	r2, [r3, #3076]	; 0xc04
 8006e80:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 8006e84:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006e88:	60c1      	str	r1, [r0, #12]
 8006e8a:	6042      	str	r2, [r0, #4]
 8006e8c:	6002      	str	r2, [r0, #0]
 8006e8e:	f8c3 1c0c 	str.w	r1, [r3, #3084]	; 0xc0c
 8006e92:	f8c3 2c04 	str.w	r2, [r3, #3076]	; 0xc04
 8006e96:	606e      	str	r6, [r5, #4]
 8006e98:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 8006e9c:	f105 032c 	add.w	r3, r5, #44	; 0x2c
 8006ea0:	702f      	strb	r7, [r5, #0]
 8006ea2:	f105 0248 	add.w	r2, r5, #72	; 0x48
 8006ea6:	f843 4b04 	str.w	r4, [r3], #4
 8006eaa:	429a      	cmp	r2, r3
 8006eac:	619c      	str	r4, [r3, #24]
 8006eae:	d1fa      	bne.n	8006ea6 <main+0xb6>
 8006eb0:	2701      	movs	r7, #1
 8006eb2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8006eb6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8006eba:	f648 4b9f 	movw	fp, #35999	; 0x8c9f
 8006ebe:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 8006ec2:	f04f 0a80 	mov.w	sl, #128	; 0x80
 8006ec6:	f64f 0eff 	movw	lr, #63743	; 0xf8ff
 8006eca:	f04f 0c10 	mov.w	ip, #16
 8006ece:	f04f 0920 	mov.w	r9, #32
 8006ed2:	f8df 8250 	ldr.w	r8, [pc, #592]	; 8007124 <main+0x334>
 8006ed6:	4e9d      	ldr	r6, [pc, #628]	; (800714c <main+0x35c>)
 8006ed8:	f8d8 201c 	ldr.w	r2, [r8, #28]
 8006edc:	60ac      	str	r4, [r5, #8]
 8006ede:	433a      	orrs	r2, r7
 8006ee0:	f8c8 201c 	str.w	r2, [r8, #28]
 8006ee4:	6872      	ldr	r2, [r6, #4]
 8006ee6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006eea:	6072      	str	r2, [r6, #4]
 8006eec:	f8c3 b028 	str.w	fp, [r3, #40]	; 0x28
 8006ef0:	4e97      	ldr	r6, [pc, #604]	; (8007150 <main+0x360>)
 8006ef2:	62d9      	str	r1, [r3, #44]	; 0x2c
 8006ef4:	619c      	str	r4, [r3, #24]
 8006ef6:	635c      	str	r4, [r3, #52]	; 0x34
 8006ef8:	60dc      	str	r4, [r3, #12]
 8006efa:	605c      	str	r4, [r3, #4]
 8006efc:	615f      	str	r7, [r3, #20]
 8006efe:	601f      	str	r7, [r3, #0]
 8006f00:	4b94      	ldr	r3, [pc, #592]	; (8007154 <main+0x364>)
 8006f02:	f886 a31c 	strb.w	sl, [r6, #796]	; 0x31c
 8006f06:	f8c6 0180 	str.w	r0, [r6, #384]	; 0x180
 8006f0a:	6030      	str	r0, [r6, #0]
 8006f0c:	609c      	str	r4, [r3, #8]
 8006f0e:	68da      	ldr	r2, [r3, #12]
 8006f10:	4891      	ldr	r0, [pc, #580]	; (8007158 <main+0x368>)
 8006f12:	ea02 0e0e 	and.w	lr, r2, lr
 8006f16:	4a91      	ldr	r2, [pc, #580]	; (800715c <main+0x36c>)
 8006f18:	f8df a288 	ldr.w	sl, [pc, #648]	; 80071a4 <main+0x3b4>
 8006f1c:	ea4e 0202 	orr.w	r2, lr, r2
 8006f20:	60da      	str	r2, [r3, #12]
 8006f22:	68c2      	ldr	r2, [r0, #12]
 8006f24:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006f28:	60c2      	str	r2, [r0, #12]
 8006f2a:	488d      	ldr	r0, [pc, #564]	; (8007160 <main+0x370>)
 8006f2c:	6802      	ldr	r2, [r0, #0]
 8006f2e:	433a      	orrs	r2, r7
 8006f30:	6002      	str	r2, [r0, #0]
 8006f32:	f8ca a004 	str.w	sl, [sl, #4]
 8006f36:	f883 c01f 	strb.w	ip, [r3, #31]
 8006f3a:	f8ca 4008 	str.w	r4, [sl, #8]
 8006f3e:	f883 9022 	strb.w	r9, [r3, #34]	; 0x22
 8006f42:	f10a 031c 	add.w	r3, sl, #28
 8006f46:	e9ca 3307 	strd	r3, r3, [sl, #28]
 8006f4a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8006f4e:	2200      	movs	r2, #0
 8006f50:	f8ca a000 	str.w	sl, [sl]
 8006f54:	e9ca aa04 	strd	sl, sl, [sl, #16]
 8006f58:	f8ca 1024 	str.w	r1, [sl, #36]	; 0x24
 8006f5c:	9302      	str	r3, [sp, #8]
 8006f5e:	2300      	movs	r3, #0
 8006f60:	a802      	add	r0, sp, #8
 8006f62:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8006f66:	f8ca 4070 	str.w	r4, [sl, #112]	; 0x70
 8006f6a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8006f6e:	9405      	str	r4, [sp, #20]
 8006f70:	f7f9 f95e 	bl	8000230 <chTMStartMeasurementX.constprop.62>
 8006f74:	a802      	add	r0, sp, #8
 8006f76:	f7f9 ff8b 	bl	8000e90 <chTMStopMeasurementX>
 8006f7a:	f04f 0e40 	mov.w	lr, #64	; 0x40
 8006f7e:	4b79      	ldr	r3, [pc, #484]	; (8007164 <main+0x374>)
 8006f80:	9904      	ldr	r1, [sp, #16]
 8006f82:	f8da c014 	ldr.w	ip, [sl, #20]
 8006f86:	f8ca 1070 	str.w	r1, [sl, #112]	; 0x70
 8006f8a:	f103 0110 	add.w	r1, r3, #16
 8006f8e:	e9c3 1104 	strd	r1, r1, [r3, #16]
 8006f92:	f10a 012c 	add.w	r1, sl, #44	; 0x2c
 8006f96:	f8ca c040 	str.w	ip, [sl, #64]	; 0x40
 8006f9a:	619c      	str	r4, [r3, #24]
 8006f9c:	f8ca e034 	str.w	lr, [sl, #52]	; 0x34
 8006fa0:	f8ca e068 	str.w	lr, [sl, #104]	; 0x68
 8006fa4:	f88a 4049 	strb.w	r4, [sl, #73]	; 0x49
 8006fa8:	e9ca 4418 	strd	r4, r4, [sl, #96]	; 0x60
 8006fac:	f88a 704a 	strb.w	r7, [sl, #74]	; 0x4a
 8006fb0:	f8ca 4044 	str.w	r4, [sl, #68]	; 0x44
 8006fb4:	f8ca a03c 	str.w	sl, [sl, #60]	; 0x3c
 8006fb8:	f8df e1ec 	ldr.w	lr, [pc, #492]	; 80071a8 <main+0x3b8>
 8006fbc:	f8cc 1010 	str.w	r1, [ip, #16]
 8006fc0:	4869      	ldr	r0, [pc, #420]	; (8007168 <main+0x378>)
 8006fc2:	e9ca 1105 	strd	r1, r1, [sl, #20]
 8006fc6:	4a69      	ldr	r2, [pc, #420]	; (800716c <main+0x37c>)
 8006fc8:	f10a 0150 	add.w	r1, sl, #80	; 0x50
 8006fcc:	f8df c1dc 	ldr.w	ip, [pc, #476]	; 80071ac <main+0x3bc>
 8006fd0:	f8ca 1050 	str.w	r1, [sl, #80]	; 0x50
 8006fd4:	4966      	ldr	r1, [pc, #408]	; (8007170 <main+0x380>)
 8006fd6:	f020 0007 	bic.w	r0, r0, #7
 8006fda:	f022 0207 	bic.w	r2, r2, #7
 8006fde:	e9c3 4402 	strd	r4, r4, [r3, #8]
 8006fe2:	f8c3 e000 	str.w	lr, [r3]
 8006fe6:	f10a 0354 	add.w	r3, sl, #84	; 0x54
 8006fea:	f88a 7048 	strb.w	r7, [sl, #72]	; 0x48
 8006fee:	e9ca 3315 	strd	r3, r3, [sl, #84]	; 0x54
 8006ff2:	f8cc 0000 	str.w	r0, [ip]
 8006ff6:	600a      	str	r2, [r1, #0]
 8006ff8:	f384 8811 	msr	BASEPRI, r4
 8006ffc:	b662      	cpsie	i
 8006ffe:	4a5d      	ldr	r2, [pc, #372]	; (8007174 <main+0x384>)
 8007000:	f8da 3018 	ldr.w	r3, [sl, #24]
 8007004:	f8df b1a8 	ldr.w	fp, [pc, #424]	; 80071b0 <main+0x3c0>
 8007008:	619a      	str	r2, [r3, #24]
 800700a:	f10a 0078 	add.w	r0, sl, #120	; 0x78
 800700e:	463a      	mov	r2, r7
 8007010:	9400      	str	r4, [sp, #0]
 8007012:	4b59      	ldr	r3, [pc, #356]	; (8007178 <main+0x388>)
 8007014:	21d8      	movs	r1, #216	; 0xd8
 8007016:	f7fb fe73 	bl	8002d00 <chThdCreateStatic>
 800701a:	4659      	mov	r1, fp
 800701c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007020:	4a56      	ldr	r2, [pc, #344]	; (800717c <main+0x38c>)
 8007022:	f8df c190 	ldr.w	ip, [pc, #400]	; 80071b4 <main+0x3c4>
 8007026:	f841 2b04 	str.w	r2, [r1], #4
 800702a:	4a55      	ldr	r2, [pc, #340]	; (8007180 <main+0x390>)
 800702c:	f8c0 c018 	str.w	ip, [r0, #24]
 8007030:	f50b 7015 	add.w	r0, fp, #596	; 0x254
 8007034:	f8df c180 	ldr.w	ip, [pc, #384]	; 80071b8 <main+0x3c8>
 8007038:	f88b 7008 	strb.w	r7, [fp, #8]
 800703c:	f8cb 2028 	str.w	r2, [fp, #40]	; 0x28
 8007040:	f10b 070c 	add.w	r7, fp, #12
 8007044:	f10b 0254 	add.w	r2, fp, #84	; 0x54
 8007048:	f8cb 3038 	str.w	r3, [fp, #56]	; 0x38
 800704c:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 8007050:	f50b 73aa 	add.w	r3, fp, #340	; 0x154
 8007054:	f10b 0030 	add.w	r0, fp, #48	; 0x30
 8007058:	f8cb 4014 	str.w	r4, [fp, #20]
 800705c:	f8cb b02c 	str.w	fp, [fp, #44]	; 0x2c
 8007060:	f8cb b050 	str.w	fp, [fp, #80]	; 0x50
 8007064:	f8cb c04c 	str.w	ip, [fp, #76]	; 0x4c
 8007068:	f8cb 1004 	str.w	r1, [fp, #4]
 800706c:	e9cb 7703 	strd	r7, r7, [fp, #12]
 8007070:	f8cb 2018 	str.w	r2, [fp, #24]
 8007074:	e9cb 2208 	strd	r2, r2, [fp, #32]
 8007078:	f8cb 301c 	str.w	r3, [fp, #28]
 800707c:	f8cb 303c 	str.w	r3, [fp, #60]	; 0x3c
 8007080:	e9cb 3311 	strd	r3, r3, [fp, #68]	; 0x44
 8007084:	e9cb 000c 	strd	r0, r0, [fp, #48]	; 0x30
 8007088:	f389 8811 	msr	BASEPRI, r9
 800708c:	2702      	movs	r7, #2
 800708e:	4b3d      	ldr	r3, [pc, #244]	; (8007184 <main+0x394>)
 8007090:	f8c5 b02c 	str.w	fp, [r5, #44]	; 0x2c
 8007094:	f8c5 b048 	str.w	fp, [r5, #72]	; 0x48
 8007098:	f8c5 b030 	str.w	fp, [r5, #48]	; 0x30
 800709c:	f8cb 3254 	str.w	r3, [fp, #596]	; 0x254
 80070a0:	f88b 7008 	strb.w	r7, [fp, #8]
 80070a4:	f384 8811 	msr	BASEPRI, r4
 80070a8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80070ac:	4b36      	ldr	r3, [pc, #216]	; (8007188 <main+0x398>)
 80070ae:	f640 30b8 	movw	r0, #3000	; 0xbb8
 80070b2:	615a      	str	r2, [r3, #20]
 80070b4:	f7fc fcec 	bl	8003a90 <chThdSleep>
 80070b8:	f389 8811 	msr	BASEPRI, r9
 80070bc:	7828      	ldrb	r0, [r5, #0]
 80070be:	4b33      	ldr	r3, [pc, #204]	; (800718c <main+0x39c>)
 80070c0:	2801      	cmp	r0, #1
 80070c2:	e9c5 4403 	strd	r4, r4, [r5, #12]
 80070c6:	e9c5 4405 	strd	r4, r4, [r5, #20]
 80070ca:	e9c5 4407 	strd	r4, r4, [r5, #28]
 80070ce:	e9c5 4409 	strd	r4, r4, [r5, #36]	; 0x24
 80070d2:	606b      	str	r3, [r5, #4]
 80070d4:	f000 808c 	beq.w	80071f0 <main+0x400>
 80070d8:	2302      	movs	r3, #2
 80070da:	2400      	movs	r4, #0
 80070dc:	702b      	strb	r3, [r5, #0]
 80070de:	f384 8811 	msr	BASEPRI, r4
 80070e2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80070e6:	4b28      	ldr	r3, [pc, #160]	; (8007188 <main+0x398>)
 80070e8:	4d29      	ldr	r5, [pc, #164]	; (8007190 <main+0x3a0>)
 80070ea:	611a      	str	r2, [r3, #16]
 80070ec:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80070f0:	9400      	str	r4, [sp, #0]
 80070f2:	4b28      	ldr	r3, [pc, #160]	; (8007194 <main+0x3a4>)
 80070f4:	602d      	str	r5, [r5, #0]
 80070f6:	2240      	movs	r2, #64	; 0x40
 80070f8:	4827      	ldr	r0, [pc, #156]	; (8007198 <main+0x3a8>)
 80070fa:	f7fb fe01 	bl	8002d00 <chThdCreateStatic>
 80070fe:	4e27      	ldr	r6, [pc, #156]	; (800719c <main+0x3ac>)
 8007100:	4d27      	ldr	r5, [pc, #156]	; (80071a0 <main+0x3b0>)
 8007102:	b144      	cbz	r4, 8007116 <main+0x326>
 8007104:	7f23      	ldrb	r3, [r4, #28]
 8007106:	2b0f      	cmp	r3, #15
 8007108:	d05b      	beq.n	80071c2 <main+0x3d2>
 800710a:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 800710e:	f7fc fcbf 	bl	8003a90 <chThdSleep>
 8007112:	2c00      	cmp	r4, #0
 8007114:	d1f6      	bne.n	8007104 <main+0x314>
 8007116:	f8db 3254 	ldr.w	r3, [fp, #596]	; 0x254
 800711a:	681b      	ldr	r3, [r3, #0]
 800711c:	781b      	ldrb	r3, [r3, #0]
 800711e:	2b04      	cmp	r3, #4
 8007120:	d05c      	beq.n	80071dc <main+0x3ec>
 8007122:	e04b      	b.n	80071bc <main+0x3cc>
 8007124:	40021000 	.word	0x40021000
 8007128:	40007000 	.word	0x40007000
 800712c:	ffffbdfd 	.word	0xffffbdfd
 8007130:	88844438 	.word	0x88844438
 8007134:	b4b3ee88 	.word	0xb4b3ee88
 8007138:	ee888888 	.word	0xee888888
 800713c:	40011000 	.word	0x40011000
 8007140:	200014d0 	.word	0x200014d0
 8007144:	88888844 	.word	0x88888844
 8007148:	40011c00 	.word	0x40011c00
 800714c:	e0042000 	.word	0xe0042000
 8007150:	e000e100 	.word	0xe000e100
 8007154:	e000ed00 	.word	0xe000ed00
 8007158:	e000edf0 	.word	0xe000edf0
 800715c:	05fa0300 	.word	0x05fa0300
 8007160:	e0001000 	.word	0xe0001000
 8007164:	200016b0 	.word	0x200016b0
 8007168:	20001ff7 	.word	0x20001ff7
 800716c:	20010000 	.word	0x20010000
 8007170:	200016d0 	.word	0x200016d0
 8007174:	08007750 	.word	0x08007750
 8007178:	080002a1 	.word	0x080002a1
 800717c:	08008750 	.word	0x08008750
 8007180:	08000a21 	.word	0x08000a21
 8007184:	08007d00 	.word	0x08007d00
 8007188:	40010800 	.word	0x40010800
 800718c:	08008600 	.word	0x08008600
 8007190:	200017ac 	.word	0x200017ac
 8007194:	08003ab1 	.word	0x08003ab1
 8007198:	20001ea8 	.word	0x20001ea8
 800719c:	08007d10 	.word	0x08007d10
 80071a0:	08006ba1 	.word	0x08006ba1
 80071a4:	20001558 	.word	0x20001558
 80071a8:	080002b1 	.word	0x080002b1
 80071ac:	2000179c 	.word	0x2000179c
 80071b0:	20001278 	.word	0x20001278
 80071b4:	08007b70 	.word	0x08007b70
 80071b8:	080026b1 	.word	0x080026b1
 80071bc:	2300      	movs	r3, #0
 80071be:	7f1b      	ldrb	r3, [r3, #28]
 80071c0:	deff      	udf	#255	; 0xff
 80071c2:	4620      	mov	r0, r4
 80071c4:	f7fd f9f4 	bl	80045b0 <chThdRelease>
 80071c8:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 80071cc:	f7fc fc60 	bl	8003a90 <chThdSleep>
 80071d0:	f8db 3254 	ldr.w	r3, [fp, #596]	; 0x254
 80071d4:	681b      	ldr	r3, [r3, #0]
 80071d6:	781b      	ldrb	r3, [r3, #0]
 80071d8:	2b04      	cmp	r3, #4
 80071da:	d1ef      	bne.n	80071bc <main+0x3cc>
 80071dc:	9600      	str	r6, [sp, #0]
 80071de:	462b      	mov	r3, r5
 80071e0:	2240      	movs	r2, #64	; 0x40
 80071e2:	f640 01c8 	movw	r1, #2248	; 0x8c8
 80071e6:	2000      	movs	r0, #0
 80071e8:	f7fd fbfa 	bl	80049e0 <chThdCreateFromHeap>
 80071ec:	4604      	mov	r4, r0
 80071ee:	e78c      	b.n	800710a <main+0x31a>
 80071f0:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 80071f4:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80071f8:	f04f 0ed0 	mov.w	lr, #208	; 0xd0
 80071fc:	f04f 0ce0 	mov.w	ip, #224	; 0xe0
 8007200:	f8d8 301c 	ldr.w	r3, [r8, #28]
 8007204:	67ec      	str	r4, [r5, #124]	; 0x7c
 8007206:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800720a:	f8c8 301c 	str.w	r3, [r8, #28]
 800720e:	4b0a      	ldr	r3, [pc, #40]	; (8007238 <main+0x448>)
 8007210:	60ac      	str	r4, [r5, #8]
 8007212:	6418      	str	r0, [r3, #64]	; 0x40
 8007214:	f886 e313 	strb.w	lr, [r6, #787]	; 0x313
 8007218:	4808      	ldr	r0, [pc, #32]	; (800723c <main+0x44c>)
 800721a:	f8c6 1180 	str.w	r1, [r6, #384]	; 0x180
 800721e:	6031      	str	r1, [r6, #0]
 8007220:	f886 c314 	strb.w	ip, [r6, #788]	; 0x314
 8007224:	f8c6 2180 	str.w	r2, [r6, #384]	; 0x180
 8007228:	6032      	str	r2, [r6, #0]
 800722a:	641c      	str	r4, [r3, #64]	; 0x40
 800722c:	f885 4064 	strb.w	r4, [r5, #100]	; 0x64
 8007230:	702f      	strb	r7, [r5, #0]
 8007232:	f7f9 fb95 	bl	8000960 <usb_lld_reset>
 8007236:	e74f      	b.n	80070d8 <main+0x2e8>
 8007238:	40005c00 	.word	0x40005c00
 800723c:	200014d0 	.word	0x200014d0

08007240 <__early_init>:
 8007240:	4b1b      	ldr	r3, [pc, #108]	; (80072b0 <__early_init+0x70>)
 8007242:	461a      	mov	r2, r3
 8007244:	6819      	ldr	r1, [r3, #0]
 8007246:	f041 0101 	orr.w	r1, r1, #1
 800724a:	6019      	str	r1, [r3, #0]
 800724c:	6813      	ldr	r3, [r2, #0]
 800724e:	0798      	lsls	r0, r3, #30
 8007250:	d5fc      	bpl.n	800724c <__early_init+0xc>
 8007252:	2000      	movs	r0, #0
 8007254:	6813      	ldr	r3, [r2, #0]
 8007256:	4916      	ldr	r1, [pc, #88]	; (80072b0 <__early_init+0x70>)
 8007258:	f003 03f9 	and.w	r3, r3, #249	; 0xf9
 800725c:	6013      	str	r3, [r2, #0]
 800725e:	6050      	str	r0, [r2, #4]
 8007260:	684b      	ldr	r3, [r1, #4]
 8007262:	f013 0f0c 	tst.w	r3, #12
 8007266:	d1fb      	bne.n	8007260 <__early_init+0x20>
 8007268:	680b      	ldr	r3, [r1, #0]
 800726a:	4a11      	ldr	r2, [pc, #68]	; (80072b0 <__early_init+0x70>)
 800726c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007270:	600b      	str	r3, [r1, #0]
 8007272:	6813      	ldr	r3, [r2, #0]
 8007274:	0399      	lsls	r1, r3, #14
 8007276:	d5fc      	bpl.n	8007272 <__early_init+0x32>
 8007278:	6853      	ldr	r3, [r2, #4]
 800727a:	490d      	ldr	r1, [pc, #52]	; (80072b0 <__early_init+0x70>)
 800727c:	f443 13e8 	orr.w	r3, r3, #1900544	; 0x1d0000
 8007280:	6053      	str	r3, [r2, #4]
 8007282:	6813      	ldr	r3, [r2, #0]
 8007284:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8007288:	6013      	str	r3, [r2, #0]
 800728a:	680b      	ldr	r3, [r1, #0]
 800728c:	019b      	lsls	r3, r3, #6
 800728e:	d5fc      	bpl.n	800728a <__early_init+0x4a>
 8007290:	2212      	movs	r2, #18
 8007292:	4b08      	ldr	r3, [pc, #32]	; (80072b4 <__early_init+0x74>)
 8007294:	4808      	ldr	r0, [pc, #32]	; (80072b8 <__early_init+0x78>)
 8007296:	6048      	str	r0, [r1, #4]
 8007298:	601a      	str	r2, [r3, #0]
 800729a:	684b      	ldr	r3, [r1, #4]
 800729c:	4a04      	ldr	r2, [pc, #16]	; (80072b0 <__early_init+0x70>)
 800729e:	f043 0302 	orr.w	r3, r3, #2
 80072a2:	604b      	str	r3, [r1, #4]
 80072a4:	6853      	ldr	r3, [r2, #4]
 80072a6:	f003 030c 	and.w	r3, r3, #12
 80072aa:	2b08      	cmp	r3, #8
 80072ac:	d1fa      	bne.n	80072a4 <__early_init+0x64>
 80072ae:	4770      	bx	lr
 80072b0:	40021000 	.word	0x40021000
 80072b4:	40022000 	.word	0x40022000
 80072b8:	001d6400 	.word	0x001d6400
 80072bc:	00000000 	.word	0x00000000

080072c0 <chThdExit>:
 80072c0:	2320      	movs	r3, #32
 80072c2:	f383 8811 	msr	BASEPRI, r3
 80072c6:	f7ff bc4b 	b.w	8006b60 <chThdExitS>
 80072ca:	bf00      	nop
 80072cc:	0000      	movs	r0, r0
	...

080072d0 <thread1.lto_priv.80>:
 80072d0:	f7ff bff6 	b.w	80072c0 <chThdExit>
	...

080072e0 <chSchDoReschedule>:
 80072e0:	f7fa bd4e 	b.w	8001d80 <chSchDoRescheduleAhead>
	...

080072f0 <__default_exit>:
 80072f0:	e7fe      	b.n	80072f0 <__default_exit>
 80072f2:	bf00      	nop
	...

08007300 <__late_init>:
 8007300:	4770      	bx	lr
 8007302:	bf00      	nop
	...

08007310 <strcasecmp>:
 8007310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007312:	4607      	mov	r7, r0
 8007314:	460e      	mov	r6, r1
 8007316:	f817 4b01 	ldrb.w	r4, [r7], #1
 800731a:	f000 f869 	bl	80073f0 <__locale_ctype_ptr>
 800731e:	4420      	add	r0, r4
 8007320:	7843      	ldrb	r3, [r0, #1]
 8007322:	f816 5b01 	ldrb.w	r5, [r6], #1
 8007326:	f003 0303 	and.w	r3, r3, #3
 800732a:	2b01      	cmp	r3, #1
 800732c:	bf08      	it	eq
 800732e:	3420      	addeq	r4, #32
 8007330:	f000 f85e 	bl	80073f0 <__locale_ctype_ptr>
 8007334:	4428      	add	r0, r5
 8007336:	7843      	ldrb	r3, [r0, #1]
 8007338:	f003 0303 	and.w	r3, r3, #3
 800733c:	2b01      	cmp	r3, #1
 800733e:	d004      	beq.n	800734a <strcasecmp+0x3a>
 8007340:	1b60      	subs	r0, r4, r5
 8007342:	d101      	bne.n	8007348 <strcasecmp+0x38>
 8007344:	2d00      	cmp	r5, #0
 8007346:	d1e6      	bne.n	8007316 <strcasecmp+0x6>
 8007348:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800734a:	f105 0020 	add.w	r0, r5, #32
 800734e:	1a20      	subs	r0, r4, r0
 8007350:	d0e1      	beq.n	8007316 <strcasecmp+0x6>
 8007352:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08007360 <strpbrk>:
 8007360:	b430      	push	{r4, r5}
 8007362:	7804      	ldrb	r4, [r0, #0]
 8007364:	b1dc      	cbz	r4, 800739e <strpbrk+0x3e>
 8007366:	780d      	ldrb	r5, [r1, #0]
 8007368:	b19d      	cbz	r5, 8007392 <strpbrk+0x32>
 800736a:	42ac      	cmp	r4, r5
 800736c:	d00f      	beq.n	800738e <strpbrk+0x2e>
 800736e:	460a      	mov	r2, r1
 8007370:	e001      	b.n	8007376 <strpbrk+0x16>
 8007372:	429c      	cmp	r4, r3
 8007374:	d00b      	beq.n	800738e <strpbrk+0x2e>
 8007376:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800737a:	2b00      	cmp	r3, #0
 800737c:	d1f9      	bne.n	8007372 <strpbrk+0x12>
 800737e:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 8007382:	2c00      	cmp	r4, #0
 8007384:	d1f0      	bne.n	8007368 <strpbrk+0x8>
 8007386:	7813      	ldrb	r3, [r2, #0]
 8007388:	2b00      	cmp	r3, #0
 800738a:	bf08      	it	eq
 800738c:	2000      	moveq	r0, #0
 800738e:	bc30      	pop	{r4, r5}
 8007390:	4770      	bx	lr
 8007392:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 8007396:	460a      	mov	r2, r1
 8007398:	2c00      	cmp	r4, #0
 800739a:	d1e5      	bne.n	8007368 <strpbrk+0x8>
 800739c:	e7f3      	b.n	8007386 <strpbrk+0x26>
 800739e:	4620      	mov	r0, r4
 80073a0:	e7f5      	b.n	800738e <strpbrk+0x2e>
 80073a2:	bf00      	nop
	...

080073b0 <strspn>:
 80073b0:	b470      	push	{r4, r5, r6}
 80073b2:	7804      	ldrb	r4, [r0, #0]
 80073b4:	b1a4      	cbz	r4, 80073e0 <strspn+0x30>
 80073b6:	4606      	mov	r6, r0
 80073b8:	780d      	ldrb	r5, [r1, #0]
 80073ba:	b14d      	cbz	r5, 80073d0 <strspn+0x20>
 80073bc:	42a5      	cmp	r5, r4
 80073be:	d00a      	beq.n	80073d6 <strspn+0x26>
 80073c0:	460a      	mov	r2, r1
 80073c2:	e001      	b.n	80073c8 <strspn+0x18>
 80073c4:	42a3      	cmp	r3, r4
 80073c6:	d006      	beq.n	80073d6 <strspn+0x26>
 80073c8:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80073cc:	2b00      	cmp	r3, #0
 80073ce:	d1f9      	bne.n	80073c4 <strspn+0x14>
 80073d0:	1b80      	subs	r0, r0, r6
 80073d2:	bc70      	pop	{r4, r5, r6}
 80073d4:	4770      	bx	lr
 80073d6:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 80073da:	2c00      	cmp	r4, #0
 80073dc:	d1ed      	bne.n	80073ba <strspn+0xa>
 80073de:	e7f7      	b.n	80073d0 <strspn+0x20>
 80073e0:	4620      	mov	r0, r4
 80073e2:	e7f6      	b.n	80073d2 <strspn+0x22>
	...

080073f0 <__locale_ctype_ptr>:
 80073f0:	4b04      	ldr	r3, [pc, #16]	; (8007404 <__locale_ctype_ptr+0x14>)
 80073f2:	4a05      	ldr	r2, [pc, #20]	; (8007408 <__locale_ctype_ptr+0x18>)
 80073f4:	681b      	ldr	r3, [r3, #0]
 80073f6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80073f8:	2b00      	cmp	r3, #0
 80073fa:	bf08      	it	eq
 80073fc:	4613      	moveq	r3, r2
 80073fe:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
 8007402:	4770      	bx	lr
 8007404:	20000e48 	.word	0x20000e48
 8007408:	20000cdc 	.word	0x20000cdc
 800740c:	00000000 	.word	0x00000000

08007410 <__ascii_mbtowc>:
 8007410:	b082      	sub	sp, #8
 8007412:	b149      	cbz	r1, 8007428 <__ascii_mbtowc+0x18>
 8007414:	b15a      	cbz	r2, 800742e <__ascii_mbtowc+0x1e>
 8007416:	b16b      	cbz	r3, 8007434 <__ascii_mbtowc+0x24>
 8007418:	7813      	ldrb	r3, [r2, #0]
 800741a:	600b      	str	r3, [r1, #0]
 800741c:	7812      	ldrb	r2, [r2, #0]
 800741e:	1c10      	adds	r0, r2, #0
 8007420:	bf18      	it	ne
 8007422:	2001      	movne	r0, #1
 8007424:	b002      	add	sp, #8
 8007426:	4770      	bx	lr
 8007428:	a901      	add	r1, sp, #4
 800742a:	2a00      	cmp	r2, #0
 800742c:	d1f3      	bne.n	8007416 <__ascii_mbtowc+0x6>
 800742e:	4610      	mov	r0, r2
 8007430:	b002      	add	sp, #8
 8007432:	4770      	bx	lr
 8007434:	f06f 0001 	mvn.w	r0, #1
 8007438:	e7f4      	b.n	8007424 <__ascii_mbtowc+0x14>
 800743a:	bf00      	nop
 800743c:	0000      	movs	r0, r0
	...

08007440 <__ascii_wctomb>:
 8007440:	b119      	cbz	r1, 800744a <__ascii_wctomb+0xa>
 8007442:	2aff      	cmp	r2, #255	; 0xff
 8007444:	d803      	bhi.n	800744e <__ascii_wctomb+0xe>
 8007446:	700a      	strb	r2, [r1, #0]
 8007448:	2101      	movs	r1, #1
 800744a:	4608      	mov	r0, r1
 800744c:	4770      	bx	lr
 800744e:	238a      	movs	r3, #138	; 0x8a
 8007450:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8007454:	6003      	str	r3, [r0, #0]
 8007456:	e7f8      	b.n	800744a <__ascii_wctomb+0xa>
	...

08007460 <CSWTCH.31>:
 8007460:	0400 0000 0600 0000 0000 0000 0000 0000     ................
 8007470:	2a2a 202a 654b 6e72 6c65 203a 2020 2020     *** Kernel:     
 8007480:	2020 0000 2a2a 202a 6f43 706d 6c69 6465       ..*** Compiled
 8007490:	203a 2020 2020 0000 2a2a 202a 6f43 706d     :     ..*** Comp
 80074a0:	6c69 7265 203a 2020 2020 0000 2a2a 202a     iler:     ..*** 
 80074b0:	7241 6863 7469 6365 7574 6572 203a 0000     Architecture: ..
 80074c0:	2a2a 202a 6f43 6572 5620 7261 6169 746e     *** Core Variant
 80074d0:	203a 0000 2a2a 202a 6f50 7472 4920 666e     : ..*** Port Inf
 80074e0:	3a6f 2020 2020 0000 2a2a 202a 6c50 7461     o:    ..*** Plat
 80074f0:	6f66 6d72 203a 2020 2020 0000 2a2a 202a     form:     ..*** 
 8007500:	6554 7473 4220 616f 6472 203a 2020 0000     Test Board:   ..
 8007510:	2d2d 202d 6554 7473 4320 7361 2065 0000     --- Test Case ..
 8007520:	2820 0000 2d2d 202d 6552 7573 746c 203a      (..--- Result: 
 8007530:	4146 4c49 5255 2045 2328 0000 5b20 0000     FAILURE (#.. [..
 8007540:	6946 616e 206c 6572 7573 746c 203a 0000     Final result: ..
 8007550:	2a2a 202a 6843 6269 4f69 2f53 5452 7420     *** ChibiOS/RT t
 8007560:	7365 2074 7573 7469 0065 0000 2a2a 002a     est suite...***.
 8007570:	7041 2072 3620 3220 3130 2038 202d 3631     Apr  6 2018 - 16
 8007580:	303a 3a30 3435 0000 0029 0000 295d 0000     :00:54..)...])..
 8007590:	2d2d 202d 6552 7573 746c 203a 5553 4343     --- Result: SUCC
 80075a0:	5345 0053 4146 4c49 5255 0045 0000 0000     ESS.FAILURE.....
 80075b0:	6c62 6e69 656b 0072 0000 0000 0000 0000     blinker.........
 80075c0:	0920 0000 0000 0000 0000 0000 0000 0000      ...............
 80075d0:	6e75 6168 646e 656c 2064 7865 6563 7470     unhandled except
 80075e0:	6f69 006e 0000 0000 0000 0000 0000 0000     ion.............

080075f0 <active_status>:
	...
 8007600:	2d2d 202d 6353 726f 2065 203a 0000 0000     --- Score : ....
 8007610:	7420 6d69 7265 2f73 0053 0000 0000 0000      timers/S.......
 8007620:	7720 6961 2b74 6973 6e67 6c61 532f 0000      wait+signal/S..
 8007630:	6c20 636f 2b6b 6e75 6f6c 6b63 532f 0000      lock+unlock/S..
 8007640:	2d2d 202d 7953 7473 6d65 203a 0000 0000     --- System: ....
 8007650:	6220 7479 7365 0000 2d2d 202d 6854 6572      bytes..--- Thre
 8007660:	6461 203a 0000 0000 2d2d 202d 6954 656d     ad: ....--- Time
 8007670:	2072 203a 0000 0000 2d2d 202d 6553 616d     r : ....--- Sema
 8007680:	6870 203a 0000 0000 2d2d 202d 7645 6e65     ph: ....--- Even
 8007690:	5374 203a 0000 0000 2d2d 202d 7645 6e65     tS: ....--- Even
 80076a0:	4c74 203a 0000 0000 2d2d 202d 754d 6574     tL: ....--- Mute
 80076b0:	2078 203a 0000 0000 2d2d 202d 6f43 646e     x : ....--- Cond
 80076c0:	2e56 203a 0000 0000 2d2d 202d 7551 7565     V.: ....--- Queu
 80076d0:	2065 203a 0000 0000 2d2d 202d 614d 6c69     e : ....--- Mail
 80076e0:	2e42 203a 0000 0000 0000 0000 0000 0000     B.: ............
 80076f0:	6d20 6773 2f73 2c53 0020 0000 0000 0000      msgs/S, .......
 8007700:	7420 7268 6165 7364 532f 0000 0000 0000      threads/S......
 8007710:	7220 7365 6863 6465 6c75 7365 532f 202c      reschedules/S, 
	...
 8007730:	6320 7874 7773 2f63 0053 0000 0000 0000      ctxswc/S.......
 8007740:	6220 7479 7365 532f 0000 0000 0000 0000      bytes/S........

08007750 <ch_debug>:
 8007750:	616d 6e69 1600 1801 0204 0844 100c 1814     main......D.....
 8007760:	1c00 1e1d 0000 0000 0000 0000 0000 0000     ................
 8007770:	6e28 6c75 296c 0000 0000 0000 0000 0000     (null)..........
 8007780:	6e69 6f66 0000 0000 2e33 2e30 0030 0000     info....3.0.0...
 8007790:	654b 6e72 6c65 203a 2020 2020 2020 7325     Kernel:       %s
 80077a0:	0a0d 0000 4347 2043 2e37 2e32 2031 3032     ....GCC 7.2.1 20
 80077b0:	3731 3930 3430 2820 6572 656c 7361 2965     170904 (release)
 80077c0:	5b20 5241 2f4d 6d65 6562 6464 6465 372d      [ARM/embedded-7
 80077d0:	622d 6172 636e 2068 6572 6976 6973 6e6f     -branch revision
 80077e0:	3220 3535 3032 5d34 0000 0000 6f43 706d      255204]....Comp
 80077f0:	6c69 7265 203a 2020 2020 7325 0a0d 0000     iler:     %s....
 8007800:	5241 764d 2d37 004d 7241 6863 7469 6365     ARMv7-M.Architec
 8007810:	7574 6572 203a 7325 0a0d 0000 6f43 7472     ture: %s....Cort
 8007820:	7865 4d2d 0033 0000 6f43 6572 5620 7261     ex-M3...Core Var
 8007830:	6169 746e 203a 7325 0a0d 0000 6441 6176     iant: %s....Adva
 8007840:	636e 6465 6b20 7265 656e 206c 6f6d 6564     nced kernel mode
 8007850:	0000 0000 6f50 7472 4920 666e 3a6f 2020     ....Port Info:  
 8007860:	2020 7325 0a0d 0000 5453 334d 4632 3031       %s....STM32F10
 8007870:	2078 6550 6672 726f 616d 636e 2065 694c     x Performance Li
 8007880:	656e 4820 6769 2068 6544 736e 7469 0079     ne High Density.
 8007890:	6c50 7461 6f66 6d72 203a 2020 2020 7325     Platform:     %s
 80078a0:	0a0d 0000 5453 694d 7263 656f 656c 7463     ....STMicroelect
 80078b0:	6f72 696e 7363 4920 454e 4f4d 4d2d 2031     ronics INEMO-M1 
 80078c0:	6944 6373 766f 7265 0079 0000 6f42 7261     Discovery...Boar
 80078d0:	3a64 2020 2020 2020 2020 7325 0a0d 0000     d:        %s....
 80078e0:	2d20 0020 7041 2072 3620 3220 3130 0038      - .Apr  6 2018.
 80078f0:	7542 6c69 2064 6974 656d 203a 2020 7325     Build time:   %s
 8007900:	7325 7325 0a0d 0000 3631 303a 3a30 3535     %s%s....16:00:55
	...
 8007920:	7355 6761 3a65 6d20 6d65 0a0d 0000 0000     Usage: mem......
 8007930:	6f63 6572 6620 6572 2065 656d 6f6d 7972     core free memory
 8007940:	3a20 2520 2075 7962 6574 0d73 000a 0000      : %u bytes.....
 8007950:	6568 7061 6620 6172 6d67 6e65 7374 2020     heap fragments  
 8007960:	3a20 2520 0d75 000a 6568 7061 6620 6572      : %u...heap fre
 8007970:	2065 6f74 6174 206c 3a20 2520 2075 7962     e total  : %u by
 8007980:	6574 0d73 000a 0000 0000 0000 0000 0000     tes.............
 8007990:	7973 7473 6d69 0065 7355 6761 3a65 2520     systime.Usage: %
 80079a0:	0d73 000a 6c25 0d75 000a 0000 0000 0000     s...%lu.........
 80079b0:	7355 6761 3a65 7420 7365 0d74 000a 0000     Usage: test.....
 80079c0:	756f 2074 666f 6d20 6d65 726f 0d79 000a     out of memory...
 80079d0:	7355 6761 3a65 7420 7268 6165 7364 0a0d     Usage: threads..
 80079e0:	0000 0000 2020 2020 6461 7264 2020 2020     ....    addr    
 80079f0:	7473 6361 206b 7270 6f69 7220 6665 2073     stack prio refs 
 8007a00:	2020 2020 7473 7461 0d65 000a 3025 6c38         state...%08l
 8007a10:	2078 3025 6c38 2078 3425 756c 2520 6c34     x %08lx %4lu %4l
 8007a20:	2075 3925 0d73 000a 0000 0000 0000 0000     u %9s...........
 8007a30:	0a0d 730a 6f74 7070 6465 0a0d 0000 0000     ...stopped......
 8007a40:	7355 6761 3a65 7720 6972 6574 0a0d 0000     Usage: write....

08007a50 <commands>:
 8007a50:	82bc 0800 44c1 0800 82c0 0800 4641 0800     .....D......AF..
 8007a60:	8198 0800 4e71 0800 82c8 0800 19e1 0800     ....qN..........
	...
 8007a80:	4241 0000 0000 0000 0000 0000 0000 0000     AB..............
 8007a90:	0042 0000 0043 0000 0000 0000 0000 0000     B...C...........
 8007aa0:	0041 0000 0000 0000 0000 0000 0000 0000     A...............

08007ab0 <ep0config>:
 8007ab0:	0000 0000 22d1 0800 21c1 0800 2101 0800     ....."...!...!..
 8007ac0:	0040 0040 16d4 2000 16d4 2000 0001 0000     @.@.... ... ....
 8007ad0:	16e8 2000 0000 0000 0000 0000 0000 0000     ... ............

08007ae0 <ep1config>:
 8007ae0:	0002 0000 0000 0000 2721 0800 10c1 0800     ........!'......
 8007af0:	0040 0040 16f0 2000 1700 2000 0002 0000     @.@.... ... ....
	...

08007b10 <ep2config>:
 8007b10:	0003 0000 0000 0000 0ad1 0800 0000 0000     ................
 8007b20:	0010 0000 1714 2000 0000 0000 0001 0000     ....... ........
	...

08007b40 <evhndl>:
 8007b40:	07d1 0800 07c1 0800 07b1 0800 0000 0000     ................
 8007b50:	4241 0043 0000 0000 0000 0000 0000 0000     ABC.............

08007b60 <halted_status>:
 8007b60:	0001 0000 0000 0000 0000 0000 0000 0000     ................
 8007b70:	6469 656c 0000 0000 0000 0000 0000 0000     idle............
 8007b80:	4241 4443 0045 0000 0000 0000 0000 0000     ABCDE...........

08007b90 <patternbmk>:
 8007b90:	8360 0800 83b0 0800 83c0 0800 83d0 0800     `...............
 8007ba0:	83e0 0800 83f0 0800 8400 0800 8410 0800     ................
 8007bb0:	8420 0800 8370 0800 8380 0800 8390 0800      ...p...........
 8007bc0:	83a0 0800 0000 0000 0000 0000 0000 0000     ................

08007bd0 <patterndyn>:
 8007bd0:	8430 0800 8440 0800 8450 0800 0000 0000     0...@...P.......

08007be0 <patternevt>:
 8007be0:	8460 0800 8470 0800 8480 0800 0000 0000     `...p...........

08007bf0 <patternheap>:
 8007bf0:	8490 0800 0000 0000 0000 0000 0000 0000     ................

08007c00 <patternmbox>:
 8007c00:	84a0 0800 0000 0000 0000 0000 0000 0000     ................

08007c10 <patternmsg>:
 8007c10:	84b0 0800 0000 0000 0000 0000 0000 0000     ................

08007c20 <patternmtx>:
 8007c20:	84c0 0800 84d0 0800 84e0 0800 84f0 0800     ................
 8007c30:	8500 0800 8510 0800 0000 0000 0000 0000     ................

08007c40 <patternpools>:
 8007c40:	8520 0800 0000 0000 0000 0000 0000 0000      ...............

08007c50 <patternqueues>:
 8007c50:	8530 0800 8540 0800 0000 0000 0000 0000     0...@...........

08007c60 <patterns>:
 8007c60:	7cc0 0800 7cd0 0800 7ca0 0800 7c20 0800     .|...|...|.. |..
 8007c70:	7c10 0800 7c00 0800 7be0 0800 7bf0 0800     .|...|...{...{..
 8007c80:	7c40 0800 7bd0 0800 7c50 0800 7b90 0800     @|...{..P|...{..
	...

08007ca0 <patternsem>:
 8007ca0:	8550 0800 8560 0800 8570 0800 8580 0800     P...`...p.......
	...

08007cc0 <patternsys>:
 8007cc0:	8590 0800 85a0 0800 85b0 0800 0000 0000     ................

08007cd0 <patternthd>:
 8007cd0:	85c0 0800 85d0 0800 85e0 0800 85f0 0800     ................
	...
 8007cf0:	4241 4443 0000 0000 0000 0000 0000 0000     ABCD............

08007d00 <serusbcfg>:
 8007d00:	14d0 2000 0101 0002 0000 0000 0000 0000     ... ............

08007d10 <shell_cfg1>:
 8007d10:	1278 2000 7a50 0800 0000 0000 0000 0000     x.. Pz..........
 8007d20:	6873 6c65 006c 0000 0a0d 6843 6269 4f69     shell.....ChibiO
 8007d30:	2f53 5452 5320 6568 6c6c 0a0d 0000 0000     S/RT Shell......
 8007d40:	6863 203e 0000 0000 445e 0000 0a0d 6f6c     ch> ....^D....lo
 8007d50:	6f67 7475 0000 0000 6f74 206f 616d 796e     gout....too many
 8007d60:	6120 6772 6d75 6e65 7374 0a0d 0000 0000      arguments......
 8007d70:	7865 7469 0000 0000 6568 706c 0000 0000     exit....help....
 8007d80:	6f43 6d6d 6e61 7364 203a 6568 706c 6520     Commands: help e
 8007d90:	6978 2074 0000 0000 7325 0020 7325 0000     xit ....%s .%s..
 8007da0:	3f20 0a0d 0000 0000 0000 0000 0000 0000      ?..............

08007db0 <states.8196>:
 8007db0:	82d0 0800 82d8 0800 82e0 0800 82e8 0800     ................
 8007dc0:	82f4 0800 82fc 0800 8304 0800 830c 0800     ................
 8007dd0:	8314 0800 8320 0800 8328 0800 8330 0800     .... ...(...0...
 8007de0:	833c 0800 8344 0800 834c 0800 8354 0800     <...D...L...T...
 8007df0:	6542 636e 6d68 7261 2c6b 5220 4d41 6620     Benchmark, RAM f
 8007e00:	6f6f 7074 6972 746e 0000 0000 6542 636e     ootprint....Benc
 8007e10:	6d68 7261 2c6b 6d20 7475 7865 7365 6c20     hmark, mutexes l
 8007e20:	636f 2f6b 6e75 6f6c 6b63 0000 6542 636e     ock/unlock..Benc
 8007e30:	6d68 7261 2c6b 7320 6d65 7061 6f68 6572     hmark, semaphore
 8007e40:	2073 6177 7469 732f 6769 616e 006c 0000     s wait/signal...
 8007e50:	6542 636e 6d68 7261 2c6b 7620 7269 7574     Benchmark, virtu
 8007e60:	6c61 7420 6d69 7265 2073 6573 2f74 6572     al timers set/re
 8007e70:	6573 0074 6542 636e 6d68 7261 2c6b 4920     set.Benchmark, I
 8007e80:	4f2f 5120 6575 6575 2073 6874 6f72 6775     /O Queues throug
 8007e90:	7068 7475 0000 0000 6542 636e 6d68 7261     hput....Benchmar
 8007ea0:	2c6b 7220 756f 646e 7220 626f 6e69 6320     k, round robin c
 8007eb0:	6e6f 6574 7478 7320 6977 6374 6968 676e     ontext switching
 8007ec0:	0000 0000 6542 636e 6d68 7261 2c6b 6d20     ....Benchmark, m
 8007ed0:	7361 2073 6572 6373 6568 7564 656c 202c     ass reschedule, 
 8007ee0:	2035 6874 6572 6461 0073 0000 6542 636e     5 threads...Benc
 8007ef0:	6d68 7261 2c6b 7420 7268 6165 7364 202c     hmark, threads, 
 8007f00:	7263 6165 6574 6f20 6c6e 0079 6542 636e     create only.Benc
 8007f10:	6d68 7261 2c6b 7420 7268 6165 7364 202c     hmark, threads, 
 8007f20:	7566 6c6c 6320 6379 656c 0000 6542 636e     full cycle..Benc
 8007f30:	6d68 7261 2c6b 6320 6e6f 6574 7478 7320     hmark, context s
 8007f40:	6977 6374 0068 0000 6542 636e 6d68 7261     witch...Benchmar
 8007f50:	2c6b 6d20 7365 6173 6567 2073 3323 0000     k, messages #3..
 8007f60:	6542 636e 6d68 7261 2c6b 6d20 7365 6173     Benchmark, messa
 8007f70:	6567 2073 3223 0000 6542 636e 6d68 7261     ges #2..Benchmar
 8007f80:	2c6b 6d20 7365 6173 6567 2073 3123 0000     k, messages #1..
 8007f90:	7551 7565 7365 202c 756f 7074 7475 7120     Queues, output q
 8007fa0:	6575 6575 0073 0000 7551 7565 7365 202c     ueues...Queues, 
 8007fb0:	6e69 7570 2074 7571 7565 7365 0000 0000     input queues....
 8007fc0:	7944 616e 696d 2063 5041 7349 202c 6572     Dynamic APIs, re
 8007fd0:	6967 7473 7972 6120 646e 7220 6665 7265     gistry and refer
 8007fe0:	6e65 6563 0073 0000 7944 616e 696d 2063     ences...Dynamic 
 8007ff0:	5041 7349 202c 6874 6572 6461 2073 7263     APIs, threads cr
 8008000:	6165 6974 6e6f 6620 6f72 206d 656d 6f6d     eation from memo
 8008010:	7972 7020 6f6f 006c 7944 616e 696d 2063     ry pool.Dynamic 
 8008020:	5041 7349 202c 6874 6572 6461 2073 7263     APIs, threads cr
 8008030:	6165 6974 6e6f 6620 6f72 206d 6568 7061     eation from heap
 8008040:	0000 0000 654d 6f6d 7972 5020 6f6f 736c     ....Memory Pools
 8008050:	202c 7571 7565 2f65 6564 7571 7565 0065     , queue/dequeue.
 8008060:	6548 7061 202c 6c61 6f6c 6163 6974 6e6f     Heap, allocation
 8008070:	6120 646e 6620 6172 6d67 6e65 6174 6974      and fragmentati
 8008080:	6e6f 7420 7365 0074 7645 6e65 7374 202c     on test.Events, 
 8008090:	6974 656d 756f 7374 0000 0000 7645 6e65     timeouts....Even
 80080a0:	7374 202c 6177 7469 6120 646e 6220 6f72     ts, wait and bro
 80080b0:	6461 6163 7473 0000 7645 6e65 7374 202c     adcast..Events, 
 80080c0:	6572 6967 7473 6172 6974 6e6f 6120 646e     registration and
 80080d0:	6420 7369 6170 6374 0068 0000 614d 6c69      dispatch...Mail
 80080e0:	6f62 6578 2c73 7120 6575 6975 676e 6120     boxes, queuing a
 80080f0:	646e 7420 6d69 6f65 7475 0073 654d 7373     nd timeouts.Mess
 8008100:	6761 7365 202c 6f6c 706f 0000 6f43 646e     ages, loop..Cond
 8008110:	6156 2c72 6220 6f6f 7473 7420 7365 0074     Var, boost test.
 8008120:	6f43 646e 6156 2c72 6220 6f72 6461 6163     CondVar, broadca
 8008130:	7473 7420 7365 0074 6f43 646e 6156 2c72     st test.CondVar,
 8008140:	7320 6769 616e 206c 6574 7473 0000 0000      signal test....
 8008150:	754d 6574 6578 2c73 7320 6174 7574 0073     Mutexes, status.
 8008160:	754d 6574 6578 2c73 7020 6972 726f 7469     Mutexes, priorit
 8008170:	2079 6572 7574 6e72 0000 0000 754d 6574     y return....Mute
 8008180:	6578 2c73 7020 6972 726f 7469 2079 6e65     xes, priority en
 8008190:	7571 7565 6e69 2067 6574 7473 0000 0000     queuing test....
 80081a0:	6942 616e 7972 5320 6d65 7061 6f68 6572     Binary Semaphore
 80081b0:	2c73 6620 6e75 7463 6f69 616e 696c 7974     s, functionality
 80081c0:	0000 0000 6553 616d 6870 726f 7365 202c     ....Semaphores, 
 80081d0:	7461 6d6f 6369 7320 6769 616e 2d6c 6177     atomic signal-wa
 80081e0:	7469 0000 6553 616d 6870 726f 7365 202c     it..Semaphores, 
 80081f0:	6974 656d 756f 0074 6553 616d 6870 726f     timeout.Semaphor
 8008200:	7365 202c 6e65 7571 7565 6e69 0067 0000     es, enqueuing...
 8008210:	6854 6572 6461 2c73 6420 6c65 7961 0073     Threads, delays.
 8008220:	6854 6572 6461 2c73 7020 6972 726f 7469     Threads, priorit
 8008230:	2079 6863 6e61 6567 0000 0000 6854 6572     y change....Thre
 8008240:	6461 2c73 6520 716e 6575 6975 676e 7420     ads, enqueuing t
 8008250:	7365 2074 3223 0000 6854 6572 6461 2c73     est #2..Threads,
 8008260:	6520 716e 6575 6975 676e 7420 7365 2074      enqueuing test 
 8008270:	3123 0000 7953 7473 6d65 202c 6e69 6574     #1..System, inte
 8008280:	7267 7469 0079 0000 7953 7473 6d65 202c     grity...System, 
 8008290:	6e69 6574 7272 7075 7374 6820 6e61 6c64     interrupts handl
 80082a0:	6e69 0067 7953 7473 6d65 202c 7263 7469     ing.System, crit
 80082b0:	6369 6c61 7a20 6e6f 7365 0000 656d 006d     ical zones..mem.
 80082c0:	6874 6572 6461 0073 7277 7469 0065 0000     threads.write...
 80082d0:	4552 4441 0059 0000 5543 5252 4e45 0054     READY...CURRENT.
 80082e0:	5457 5453 5241 0054 5553 5053 4e45 4544     WTSTART.SUSPENDE
 80082f0:	0044 0000 5551 5545 4445 0000 5457 4553     D...QUEUED..WTSE
 8008300:	004d 0000 5457 544d 0058 0000 5457 4f43     M...WTMTX...WTCO
 8008310:	444e 0000 4c53 4545 4950 474e 0000 0000     ND..SLEEPING....
 8008320:	5457 5845 5449 0000 5457 524f 5645 0054     WTEXIT..WTOREVT.
 8008330:	5457 4e41 4544 5456 0000 0000 4e53 4d44     WTANDEVT....SNDM
 8008340:	4753 0051 4e53 4d44 4753 0000 5457 534d     SGQ.SNDMSG..WTMS
 8008350:	0047 0000 4946 414e 004c 0000 0000 0000     G...FINAL.......

08008360 <testbmk1>:
 8008360:	7f78 0800 0000 0000 0000 0000 5381 0800     x............S..

08008370 <testbmk10>:
 8008370:	7e50 0800 0000 0000 0000 0000 3c71 0800     P~..........q<..

08008380 <testbmk11>:
 8008380:	7e2c 0800 0331 0800 0000 0000 4bf1 0800     ,~..1........K..

08008390 <testbmk12>:
 8008390:	7e0c 0800 0321 0800 0000 0000 4191 0800     .~..!........A..

080083a0 <testbmk13>:
 80083a0:	7df0 0800 0000 0000 0000 0000 1b31 0800     .}..........1...

080083b0 <testbmk2>:
 80083b0:	7f60 0800 0000 0000 0000 0000 5311 0800     `............S..

080083c0 <testbmk3>:
 80083c0:	7f48 0800 0000 0000 0000 0000 5231 0800     H...........1R..

080083d0 <testbmk4>:
 80083d0:	7f2c 0800 0000 0000 0000 0000 5181 0800     ,............Q..

080083e0 <testbmk5>:
 80083e0:	7f0c 0800 0000 0000 0000 0000 4ec1 0800     .............N..

080083f0 <testbmk6>:
 80083f0:	7eec 0800 0000 0000 0000 0000 3db1 0800     .~...........=..

08008400 <testbmk7>:
 8008400:	7ec4 0800 0361 0800 0000 0000 5051 0800     .~..a.......QP..

08008410 <testbmk8>:
 8008410:	7e98 0800 0000 0000 0000 0000 4f71 0800     .~..........qO..

08008420 <testbmk9>:
 8008420:	7e74 0800 0000 0000 0000 0000 3d01 0800     t~...........=..

08008430 <testdyn1>:
 8008430:	8018 0800 0411 0800 0000 0000 59c1 0800     .............Y..

08008440 <testdyn2>:
 8008440:	7fe8 0800 03f1 0800 0000 0000 58c1 0800     .............X..

08008450 <testdyn3>:
 8008450:	7fc0 0800 0441 0800 0000 0000 4a61 0800     ....A.......aJ..

08008460 <testevt1>:
 8008460:	80b8 0800 04b1 0800 0000 0000 0da1 0800     ................

08008470 <testevt2>:
 8008470:	809c 0800 04d1 0800 0000 0000 5ac1 0800     .............Z..

08008480 <testevt3>:
 8008480:	8088 0800 04c1 0800 0000 0000 2fe1 0800     ............./..

08008490 <testheap1>:
 8008490:	8060 0800 0481 0800 0000 0000 4791 0800     `............G..

080084a0 <testmbox1>:
 80084a0:	80dc 0800 04e1 0800 0000 0000 3271 0800     ............q2..

080084b0 <testmsg1>:
 80084b0:	80fc 0800 0000 0000 0000 0000 3f51 0800     ............Q?..

080084c0 <testmtx1>:
 80084c0:	817c 0800 05a1 0800 0000 0000 6261 0800     |...........ab..

080084d0 <testmtx4>:
 80084d0:	8160 0800 0581 0800 0000 0000 6011 0800     `............`..

080084e0 <testmtx5>:
 80084e0:	8150 0800 05b1 0800 0000 0000 4321 0800     P...........!C..

080084f0 <testmtx6>:
 80084f0:	8138 0800 0551 0800 0000 0000 5f31 0800     8...Q.......1_..

08008500 <testmtx7>:
 8008500:	8120 0800 0571 0800 0000 0000 5e41 0800      ...q.......A^..

08008510 <testmtx8>:
 8008510:	810c 0800 0521 0800 0000 0000 5db1 0800     ....!........]..

08008520 <testpools1>:
 8008520:	8044 0800 0461 0800 0000 0000 0c91 0800     D...a...........

08008530 <testqueues1>:
 8008530:	7fa8 0800 03c1 0800 0000 0000 5631 0800     ............1V..

08008540 <testqueues2>:
 8008540:	7f90 0800 0391 0800 0000 0000 53f1 0800     .............S..

08008550 <testsem1>:
 8008550:	81f8 0800 05c1 0800 0000 0000 64b1 0800     .............d..

08008560 <testsem2>:
 8008560:	81e4 0800 05e1 0800 0000 0000 6351 0800     ............Qc..

08008570 <testsem3>:
 8008570:	81c4 0800 05d1 0800 0000 0000 2e11 0800     ................

08008580 <testsem4>:
 8008580:	81a0 0800 0000 0000 0000 0000 4c91 0800     .............L..

08008590 <testsys1>:
 8008590:	82a4 0800 0000 0000 0000 0000 3b01 0800     .............;..

080085a0 <testsys2>:
 80085a0:	8288 0800 0000 0000 0000 0000 0371 0800     ............q...

080085b0 <testsys3>:
 80085b0:	8274 0800 0000 0000 0000 0000 14f1 0800     t...............

080085c0 <testthd1>:
 80085c0:	8258 0800 0000 0000 0000 0000 6761 0800     X...........ag..

080085d0 <testthd2>:
 80085d0:	823c 0800 0000 0000 0000 0000 6621 0800     <...........!f..

080085e0 <testthd3>:
 80085e0:	8220 0800 0000 0000 0000 0000 1ea1 0800      ...............

080085f0 <testthd4>:
 80085f0:	8210 0800 0000 0000 0000 0000 3e21 0800     ............!>..

08008600 <usbcfg>:
 8008600:	1c51 0800 02f1 0800 0ae1 0800 0000 0000     Q...............

08008610 <vcom_configuration_descriptor>:
 8008610:	0043 0000 8620 0800 0000 0000 0000 0000     C... ...........

08008620 <vcom_configuration_descriptor_data>:
 8008620:	0209 0043 0102 c000 0932 0004 0100 0202     ..C.....2.......
 8008630:	0001 2405 1000 0501 0124 0100 2404 0202     ...$....$....$..
 8008640:	2405 0006 0701 8205 0803 ff00 0409 0001     .$..............
 8008650:	0a02 0000 0700 0105 4002 0000 0507 0281     .........@......
 8008660:	0040 0000 0000 0000 0000 0000 0000 0000     @...............

08008670 <vcom_device_descriptor>:
 8008670:	0012 0000 8680 0800 0000 0000 0000 0000     ................

08008680 <vcom_device_descriptor_data>:
 8008680:	0112 0110 0002 4000 0483 5740 0200 0201     .......@..@W....
 8008690:	0103 0000 0000 0000 0000 0000 0000 0000     ................

080086a0 <vcom_string0>:
 80086a0:	0304 0409 0000 0000 0000 0000 0000 0000     ................

080086b0 <vcom_string1>:
 80086b0:	0326 0053 0054 004d 0069 0063 0072 006f     &.S.T.M.i.c.r.o.
 80086c0:	0065 006c 0065 0063 0074 0072 006f 006e     e.l.e.c.t.r.o.n.
 80086d0:	0069 0063 0073 0000 0000 0000 0000 0000     i.c.s...........

080086e0 <vcom_string2>:
 80086e0:	0338 0043 0068 0069 0062 0069 004f 0053     8.C.h.i.b.i.O.S.
 80086f0:	002f 0052 0054 0020 0056 0069 0072 0074     /.R.T. .V.i.r.t.
 8008700:	0075 0061 006c 0020 0043 004f 004d 0020     u.a.l. .C.O.M. .
 8008710:	0050 006f 0072 0074 0000 0000 0000 0000     P.o.r.t.........

08008720 <vcom_string3>:
 8008720:	0308 0033 0030 0031 0000 0000 0000 0000     ..3.0.1.........

08008730 <vcom_strings>:
 8008730:	0004 0000 86a0 0800 0026 0000 86b0 0800     ........&.......
 8008740:	0038 0000 86e0 0800 0008 0000 8720 0800     8........... ...

08008750 <vmt>:
 8008750:	38e1 0800 3a01 0800 3961 0800 3a81 0800     .8...:..a9...:..
 8008760:	3951 0800 3a71 0800 38d1 0800 39f1 0800     Q9..q:...8...9..

08008770 <wa>:
 8008770:	17b0 2000 18f8 2000 1a40 2000 1b88 2000     ... ... @.. ... 
 8008780:	1cd0 2000 0000 0000 0000 0000 0000 0000     ... ............

08008790 <zero_status>:
	...
 80087a0:	4f50 4953 0058 0000 0000 0000 0000 0000     POSIX...........
 80087b0:	002e 0000 0000 0000 0000 0000 0000 0000     ................

080087c0 <_ctype_>:
 80087c0:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
 80087d0:	2020 2020 2020 2020 2020 2020 2020 2020                     
 80087e0:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
 80087f0:	0410 0404 0404 0404 0404 1004 1010 1010     ................
 8008800:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
 8008810:	0101 0101 0101 0101 0101 0101 1010 1010     ................
 8008820:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
 8008830:	0202 0202 0202 0202 0202 0202 1010 1010     ................
 8008840:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...
