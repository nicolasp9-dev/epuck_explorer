
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

08000140 <Reset_Handler>:
 8000140:	b672      	cpsid	i
 8000142:	4821      	ldr	r0, [pc, #132]	; (80001c8 <endfiniloop+0x6>)
 8000144:	f380 8809 	msr	PSP, r0
 8000148:	2002      	movs	r0, #2
 800014a:	f380 8814 	msr	CONTROL, r0
 800014e:	f3bf 8f6f 	isb	sy
 8000152:	f005 fcfd 	bl	8005b50 <__early_init>
 8000156:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
 800015a:	491c      	ldr	r1, [pc, #112]	; (80001cc <endfiniloop+0xa>)
 800015c:	4a1c      	ldr	r2, [pc, #112]	; (80001d0 <endfiniloop+0xe>)

0800015e <msloop>:
 800015e:	4291      	cmp	r1, r2
 8000160:	bf3c      	itt	cc
 8000162:	f841 0b04 	strcc.w	r0, [r1], #4
 8000166:	e7fa      	bcc.n	800015e <msloop>
 8000168:	491a      	ldr	r1, [pc, #104]	; (80001d4 <endfiniloop+0x12>)
 800016a:	4a17      	ldr	r2, [pc, #92]	; (80001c8 <endfiniloop+0x6>)

0800016c <psloop>:
 800016c:	4291      	cmp	r1, r2
 800016e:	bf3c      	itt	cc
 8000170:	f841 0b04 	strcc.w	r0, [r1], #4
 8000174:	e7fa      	bcc.n	800016c <psloop>
 8000176:	4918      	ldr	r1, [pc, #96]	; (80001d8 <endfiniloop+0x16>)
 8000178:	4a18      	ldr	r2, [pc, #96]	; (80001dc <endfiniloop+0x1a>)
 800017a:	4b19      	ldr	r3, [pc, #100]	; (80001e0 <endfiniloop+0x1e>)

0800017c <dloop>:
 800017c:	429a      	cmp	r2, r3
 800017e:	bf3e      	ittt	cc
 8000180:	f851 0b04 	ldrcc.w	r0, [r1], #4
 8000184:	f842 0b04 	strcc.w	r0, [r2], #4
 8000188:	e7f8      	bcc.n	800017c <dloop>
 800018a:	2000      	movs	r0, #0
 800018c:	4915      	ldr	r1, [pc, #84]	; (80001e4 <endfiniloop+0x22>)
 800018e:	4a16      	ldr	r2, [pc, #88]	; (80001e8 <endfiniloop+0x26>)

08000190 <bloop>:
 8000190:	4291      	cmp	r1, r2
 8000192:	bf3c      	itt	cc
 8000194:	f841 0b04 	strcc.w	r0, [r1], #4
 8000198:	e7fa      	bcc.n	8000190 <bloop>
 800019a:	f005 fd91 	bl	8005cc0 <__late_init>
 800019e:	4c13      	ldr	r4, [pc, #76]	; (80001ec <endfiniloop+0x2a>)
 80001a0:	4d13      	ldr	r5, [pc, #76]	; (80001f0 <endfiniloop+0x2e>)

080001a2 <initloop>:
 80001a2:	42ac      	cmp	r4, r5
 80001a4:	da03      	bge.n	80001ae <endinitloop>
 80001a6:	f854 1b04 	ldr.w	r1, [r4], #4
 80001aa:	4788      	blx	r1
 80001ac:	e7f9      	b.n	80001a2 <initloop>

080001ae <endinitloop>:
 80001ae:	f005 f90f 	bl	80053d0 <main>
 80001b2:	4c10      	ldr	r4, [pc, #64]	; (80001f4 <endfiniloop+0x32>)
 80001b4:	4d10      	ldr	r5, [pc, #64]	; (80001f8 <endfiniloop+0x36>)

080001b6 <finiloop>:
 80001b6:	42ac      	cmp	r4, r5
 80001b8:	da03      	bge.n	80001c2 <endfiniloop>
 80001ba:	f854 1b04 	ldr.w	r1, [r4], #4
 80001be:	4788      	blx	r1
 80001c0:	e7f9      	b.n	80001b6 <finiloop>

080001c2 <endfiniloop>:
 80001c2:	f005 bd75 	b.w	8005cb0 <__default_exit>
 80001c6:	0000      	.short	0x0000
 80001c8:	20000800 	.word	0x20000800
 80001cc:	20000000 	.word	0x20000000
 80001d0:	20000400 	.word	0x20000400
 80001d4:	20000400 	.word	0x20000400
 80001d8:	080069f8 	.word	0x080069f8
 80001dc:	20000800 	.word	0x20000800
 80001e0:	200008b8 	.word	0x200008b8
 80001e4:	200008b8 	.word	0x200008b8
 80001e8:	200014c0 	.word	0x200014c0
 80001ec:	08000140 	.word	0x08000140
 80001f0:	08000140 	.word	0x08000140
 80001f4:	08000140 	.word	0x08000140
 80001f8:	08000140 	.word	0x08000140
 80001fc:	00000000 	.word	0x00000000

08000200 <_port_switch>:
 8000200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000204:	f8c1 d00c 	str.w	sp, [r1, #12]
 8000208:	f8d0 d00c 	ldr.w	sp, [r0, #12]
 800020c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000210 <_port_thread_start>:
 8000210:	2300      	movs	r3, #0
 8000212:	f383 8811 	msr	BASEPRI, r3
 8000216:	4628      	mov	r0, r5
 8000218:	47a0      	blx	r4
 800021a:	2000      	movs	r0, #0
 800021c:	f005 fd10 	bl	8005c40 <chThdExit>

08000220 <_port_switch_from_isr>:
 8000220:	f005 fd3e 	bl	8005ca0 <chSchDoReschedule>

08000224 <_port_exit_from_isr>:
 8000224:	df00      	svc	0
 8000226:	e7fe      	b.n	8000226 <_port_exit_from_isr+0x2>
	...

08000230 <chTMStartMeasurementX.constprop.56>:
 8000230:	4b01      	ldr	r3, [pc, #4]	; (8000238 <chTMStartMeasurementX.constprop.56+0x8>)
 8000232:	685b      	ldr	r3, [r3, #4]
 8000234:	6083      	str	r3, [r0, #8]
 8000236:	4770      	bx	lr
 8000238:	e0001000 	.word	0xe0001000
 800023c:	00000000 	.word	0x00000000

08000240 <chEvtGetAndClearEvents.constprop.36>:
 8000240:	2320      	movs	r3, #32
 8000242:	f383 8811 	msr	BASEPRI, r3
 8000246:	4b04      	ldr	r3, [pc, #16]	; (8000258 <chEvtGetAndClearEvents.constprop.36+0x18>)
 8000248:	699a      	ldr	r2, [r3, #24]
 800024a:	2300      	movs	r3, #0
 800024c:	6b50      	ldr	r0, [r2, #52]	; 0x34
 800024e:	6353      	str	r3, [r2, #52]	; 0x34
 8000250:	f383 8811 	msr	BASEPRI, r3
 8000254:	4770      	bx	lr
 8000256:	bf00      	nop
 8000258:	20000930 	.word	0x20000930
 800025c:	00000000 	.word	0x00000000

08000260 <_pal_lld_setgroupmode.constprop.5>:
 8000260:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000264:	4a24      	ldr	r2, [pc, #144]	; (80002f8 <_pal_lld_setgroupmode.constprop.5+0x98>)
 8000266:	2100      	movs	r1, #0
 8000268:	2402      	movs	r4, #2
 800026a:	2607      	movs	r6, #7
 800026c:	250f      	movs	r5, #15
 800026e:	f04f 0c01 	mov.w	ip, #1
 8000272:	2703      	movs	r7, #3
 8000274:	e026      	b.n	80002c4 <_pal_lld_setgroupmode.constprop.5+0x64>
 8000276:	f8d2 8020 	ldr.w	r8, [r2, #32]
 800027a:	ea03 0308 	and.w	r3, r3, r8
 800027e:	ea43 030e 	orr.w	r3, r3, lr
 8000282:	6213      	str	r3, [r2, #32]
 8000284:	6853      	ldr	r3, [r2, #4]
 8000286:	fa0c fe01 	lsl.w	lr, ip, r1
 800028a:	ea23 030e 	bic.w	r3, r3, lr
 800028e:	6053      	str	r3, [r2, #4]
 8000290:	004b      	lsls	r3, r1, #1
 8000292:	f8d2 e008 	ldr.w	lr, [r2, #8]
 8000296:	fa07 f303 	lsl.w	r3, r7, r3
 800029a:	43db      	mvns	r3, r3
 800029c:	ea0e 0e03 	and.w	lr, lr, r3
 80002a0:	f8c2 e008 	str.w	lr, [r2, #8]
 80002a4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80002a8:	ea03 0e0e 	and.w	lr, r3, lr
 80002ac:	f8c2 e00c 	str.w	lr, [r2, #12]
 80002b0:	f8d2 e000 	ldr.w	lr, [r2]
 80002b4:	ea03 030e 	and.w	r3, r3, lr
 80002b8:	4323      	orrs	r3, r4
 80002ba:	6013      	str	r3, [r2, #0]
 80002bc:	0840      	lsrs	r0, r0, #1
 80002be:	d018      	beq.n	80002f2 <_pal_lld_setgroupmode.constprop.5+0x92>
 80002c0:	00a4      	lsls	r4, r4, #2
 80002c2:	3101      	adds	r1, #1
 80002c4:	f001 0e07 	and.w	lr, r1, #7
 80002c8:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80002cc:	fa05 f30e 	lsl.w	r3, r5, lr
 80002d0:	f010 0f01 	tst.w	r0, #1
 80002d4:	fa06 fe0e 	lsl.w	lr, r6, lr
 80002d8:	ea6f 0303 	mvn.w	r3, r3
 80002dc:	d0ee      	beq.n	80002bc <_pal_lld_setgroupmode.constprop.5+0x5c>
 80002de:	2907      	cmp	r1, #7
 80002e0:	d9c9      	bls.n	8000276 <_pal_lld_setgroupmode.constprop.5+0x16>
 80002e2:	f8d2 8024 	ldr.w	r8, [r2, #36]	; 0x24
 80002e6:	ea03 0308 	and.w	r3, r3, r8
 80002ea:	ea43 030e 	orr.w	r3, r3, lr
 80002ee:	6253      	str	r3, [r2, #36]	; 0x24
 80002f0:	e7c8      	b.n	8000284 <_pal_lld_setgroupmode.constprop.5+0x24>
 80002f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80002f6:	bf00      	nop
 80002f8:	40020000 	.word	0x40020000
 80002fc:	00000000 	.word	0x00000000

08000300 <tmr>:
 8000300:	4b01      	ldr	r3, [pc, #4]	; (8000308 <tmr+0x8>)
 8000302:	2201      	movs	r2, #1
 8000304:	701a      	strb	r2, [r3, #0]
 8000306:	4770      	bx	lr
 8000308:	200011c8 	.word	0x200011c8
 800030c:	00000000 	.word	0x00000000

08000310 <_idle_thread>:
 8000310:	e7fe      	b.n	8000310 <_idle_thread>
 8000312:	bf00      	nop
	...

08000320 <chCoreAlloc>:
 8000320:	4603      	mov	r3, r0
 8000322:	2220      	movs	r2, #32
 8000324:	f382 8811 	msr	BASEPRI, r2
 8000328:	4908      	ldr	r1, [pc, #32]	; (800034c <chCoreAlloc+0x2c>)
 800032a:	4a09      	ldr	r2, [pc, #36]	; (8000350 <chCoreAlloc+0x30>)
 800032c:	6808      	ldr	r0, [r1, #0]
 800032e:	6812      	ldr	r2, [r2, #0]
 8000330:	3307      	adds	r3, #7
 8000332:	f023 0307 	bic.w	r3, r3, #7
 8000336:	1a12      	subs	r2, r2, r0
 8000338:	4293      	cmp	r3, r2
 800033a:	bf9a      	itte	ls
 800033c:	181b      	addls	r3, r3, r0
 800033e:	600b      	strls	r3, [r1, #0]
 8000340:	2000      	movhi	r0, #0
 8000342:	2300      	movs	r3, #0
 8000344:	f383 8811 	msr	BASEPRI, r3
 8000348:	4770      	bx	lr
 800034a:	bf00      	nop
 800034c:	20000b24 	.word	0x20000b24
 8000350:	20000aa8 	.word	0x20000aa8
	...

08000360 <notify1>:
 8000360:	4a02      	ldr	r2, [pc, #8]	; (800036c <notify1+0xc>)
 8000362:	8993      	ldrh	r3, [r2, #12]
 8000364:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000368:	8193      	strh	r3, [r2, #12]
 800036a:	4770      	bx	lr
 800036c:	40013800 	.word	0x40013800

08000370 <bmk12_setup>:
 8000370:	4b02      	ldr	r3, [pc, #8]	; (800037c <bmk12_setup+0xc>)
 8000372:	2200      	movs	r2, #0
 8000374:	e9c3 3300 	strd	r3, r3, [r3]
 8000378:	609a      	str	r2, [r3, #8]
 800037a:	4770      	bx	lr
 800037c:	20000b14 	.word	0x20000b14

08000380 <bmk11_setup>:
 8000380:	4b02      	ldr	r3, [pc, #8]	; (800038c <bmk11_setup+0xc>)
 8000382:	2201      	movs	r2, #1
 8000384:	e9c3 3300 	strd	r3, r3, [r3]
 8000388:	609a      	str	r2, [r3, #8]
 800038a:	4770      	bx	lr
 800038c:	20000b28 	.word	0x20000b28

08000390 <notify>:
 8000390:	4770      	bx	lr
 8000392:	bf00      	nop
	...

080003a0 <tmo>:
 80003a0:	4770      	bx	lr
 80003a2:	bf00      	nop
	...

080003b0 <bmk7_setup>:
 80003b0:	4b02      	ldr	r3, [pc, #8]	; (80003bc <bmk7_setup+0xc>)
 80003b2:	2200      	movs	r2, #0
 80003b4:	e9c3 3300 	strd	r3, r3, [r3]
 80003b8:	609a      	str	r2, [r3, #8]
 80003ba:	4770      	bx	lr
 80003bc:	20000b28 	.word	0x20000b28

080003c0 <sys2_execute>:
 80003c0:	2320      	movs	r3, #32
 80003c2:	f383 8811 	msr	BASEPRI, r3
 80003c6:	b662      	cpsie	i
 80003c8:	b672      	cpsid	i
 80003ca:	f383 8811 	msr	BASEPRI, r3
 80003ce:	b662      	cpsie	i
 80003d0:	2300      	movs	r3, #0
 80003d2:	f383 8811 	msr	BASEPRI, r3
 80003d6:	b662      	cpsie	i
 80003d8:	4770      	bx	lr
 80003da:	bf00      	nop
 80003dc:	0000      	movs	r0, r0
	...

080003e0 <queues2_setup>:
 80003e0:	b430      	push	{r4, r5}
 80003e2:	4a08      	ldr	r2, [pc, #32]	; (8000404 <queues2_setup+0x24>)
 80003e4:	4b08      	ldr	r3, [pc, #32]	; (8000408 <queues2_setup+0x28>)
 80003e6:	4809      	ldr	r0, [pc, #36]	; (800040c <queues2_setup+0x2c>)
 80003e8:	601b      	str	r3, [r3, #0]
 80003ea:	1d15      	adds	r5, r2, #4
 80003ec:	2404      	movs	r4, #4
 80003ee:	2100      	movs	r1, #0
 80003f0:	611d      	str	r5, [r3, #16]
 80003f2:	609c      	str	r4, [r3, #8]
 80003f4:	605b      	str	r3, [r3, #4]
 80003f6:	60da      	str	r2, [r3, #12]
 80003f8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80003fc:	e9c3 0107 	strd	r0, r1, [r3, #28]
 8000400:	bc30      	pop	{r4, r5}
 8000402:	4770      	bx	lr
 8000404:	20000b38 	.word	0x20000b38
 8000408:	20000888 	.word	0x20000888
 800040c:	08000391 	.word	0x08000391

08000410 <queues1_setup>:
 8000410:	4a08      	ldr	r2, [pc, #32]	; (8000434 <queues1_setup+0x24>)
 8000412:	4b09      	ldr	r3, [pc, #36]	; (8000438 <queues1_setup+0x28>)
 8000414:	4809      	ldr	r0, [pc, #36]	; (800043c <queues1_setup+0x2c>)
 8000416:	b410      	push	{r4}
 8000418:	2100      	movs	r1, #0
 800041a:	1d14      	adds	r4, r2, #4
 800041c:	611c      	str	r4, [r3, #16]
 800041e:	601b      	str	r3, [r3, #0]
 8000420:	605b      	str	r3, [r3, #4]
 8000422:	60da      	str	r2, [r3, #12]
 8000424:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8000428:	61d8      	str	r0, [r3, #28]
 800042a:	6099      	str	r1, [r3, #8]
 800042c:	6219      	str	r1, [r3, #32]
 800042e:	bc10      	pop	{r4}
 8000430:	4770      	bx	lr
 8000432:	bf00      	nop
 8000434:	20000b38 	.word	0x20000b38
 8000438:	20000810 	.word	0x20000810
 800043c:	08000391 	.word	0x08000391

08000440 <dyn2_setup>:
 8000440:	4b03      	ldr	r3, [pc, #12]	; (8000450 <dyn2_setup+0x10>)
 8000442:	2200      	movs	r2, #0
 8000444:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8000448:	e9c3 2100 	strd	r2, r1, [r3]
 800044c:	609a      	str	r2, [r3, #8]
 800044e:	4770      	bx	lr
 8000450:	20000b08 	.word	0x20000b08
	...

08000460 <dyn1_setup>:
 8000460:	4b08      	ldr	r3, [pc, #32]	; (8000484 <dyn1_setup+0x24>)
 8000462:	4909      	ldr	r1, [pc, #36]	; (8000488 <dyn1_setup+0x28>)
 8000464:	b410      	push	{r4}
 8000466:	2200      	movs	r2, #0
 8000468:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 800046c:	f103 0010 	add.w	r0, r3, #16
 8000470:	e9c1 2400 	strd	r2, r4, [r1]
 8000474:	6099      	str	r1, [r3, #8]
 8000476:	e9c3 0004 	strd	r0, r0, [r3, #16]
 800047a:	601a      	str	r2, [r3, #0]
 800047c:	60da      	str	r2, [r3, #12]
 800047e:	619a      	str	r2, [r3, #24]
 8000480:	bc10      	pop	{r4}
 8000482:	4770      	bx	lr
 8000484:	20000ab0 	.word	0x20000ab0
 8000488:	20000b38 	.word	0x20000b38
 800048c:	00000000 	.word	0x00000000

08000490 <dyn3_setup>:
 8000490:	f7ff bfe6 	b.w	8000460 <dyn1_setup>
	...

080004a0 <null_provider>:
 80004a0:	2000      	movs	r0, #0
 80004a2:	4770      	bx	lr
	...

080004b0 <pools1_setup>:
 80004b0:	4b03      	ldr	r3, [pc, #12]	; (80004c0 <pools1_setup+0x10>)
 80004b2:	2200      	movs	r2, #0
 80004b4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80004b8:	e9c3 2100 	strd	r2, r1, [r3]
 80004bc:	609a      	str	r2, [r3, #8]
 80004be:	4770      	bx	lr
 80004c0:	2000087c 	.word	0x2000087c
	...

080004d0 <heap1_setup>:
 80004d0:	4b08      	ldr	r3, [pc, #32]	; (80004f4 <heap1_setup+0x24>)
 80004d2:	4909      	ldr	r1, [pc, #36]	; (80004f8 <heap1_setup+0x28>)
 80004d4:	b410      	push	{r4}
 80004d6:	2200      	movs	r2, #0
 80004d8:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 80004dc:	f103 0010 	add.w	r0, r3, #16
 80004e0:	e9c1 2400 	strd	r2, r4, [r1]
 80004e4:	6099      	str	r1, [r3, #8]
 80004e6:	e9c3 0004 	strd	r0, r0, [r3, #16]
 80004ea:	601a      	str	r2, [r3, #0]
 80004ec:	60da      	str	r2, [r3, #12]
 80004ee:	619a      	str	r2, [r3, #24]
 80004f0:	bc10      	pop	{r4}
 80004f2:	4770      	bx	lr
 80004f4:	200011a8 	.word	0x200011a8
 80004f8:	20000b38 	.word	0x20000b38
 80004fc:	00000000 	.word	0x00000000

08000500 <evt1_setup>:
 8000500:	f7ff be9e 	b.w	8000240 <chEvtGetAndClearEvents.constprop.36>
	...

08000510 <evt3_setup>:
 8000510:	f7ff bff6 	b.w	8000500 <evt1_setup>
	...

08000520 <evt2_setup>:
 8000520:	f7ff bfee 	b.w	8000500 <evt1_setup>
	...

08000530 <mbox1_setup>:
 8000530:	b430      	push	{r4, r5}
 8000532:	4b0b      	ldr	r3, [pc, #44]	; (8000560 <mbox1_setup+0x30>)
 8000534:	4a0b      	ldr	r2, [pc, #44]	; (8000564 <mbox1_setup+0x34>)
 8000536:	601a      	str	r2, [r3, #0]
 8000538:	f102 0514 	add.w	r5, r2, #20
 800053c:	2405      	movs	r4, #5
 800053e:	f103 011c 	add.w	r1, r3, #28
 8000542:	2000      	movs	r0, #0
 8000544:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8000548:	f103 0210 	add.w	r2, r3, #16
 800054c:	605d      	str	r5, [r3, #4]
 800054e:	625c      	str	r4, [r3, #36]	; 0x24
 8000550:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8000554:	6219      	str	r1, [r3, #32]
 8000556:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800055a:	bc30      	pop	{r4, r5}
 800055c:	4770      	bx	lr
 800055e:	bf00      	nop
 8000560:	20000854 	.word	0x20000854
 8000564:	20000b38 	.word	0x20000b38
	...

08000570 <mtx8_setup>:
 8000570:	4906      	ldr	r1, [pc, #24]	; (800058c <mtx8_setup+0x1c>)
 8000572:	4a07      	ldr	r2, [pc, #28]	; (8000590 <mtx8_setup+0x20>)
 8000574:	4b07      	ldr	r3, [pc, #28]	; (8000594 <mtx8_setup+0x24>)
 8000576:	6009      	str	r1, [r1, #0]
 8000578:	2000      	movs	r0, #0
 800057a:	6049      	str	r1, [r1, #4]
 800057c:	e9c2 2200 	strd	r2, r2, [r2]
 8000580:	6090      	str	r0, [r2, #8]
 8000582:	6098      	str	r0, [r3, #8]
 8000584:	e9c3 3300 	strd	r3, r3, [r3]
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop
 800058c:	20000800 	.word	0x20000800
 8000590:	20000834 	.word	0x20000834
 8000594:	20000844 	.word	0x20000844
	...

080005a0 <mtx6_setup>:
 80005a0:	4a04      	ldr	r2, [pc, #16]	; (80005b4 <mtx6_setup+0x14>)
 80005a2:	4b05      	ldr	r3, [pc, #20]	; (80005b8 <mtx6_setup+0x18>)
 80005a4:	6012      	str	r2, [r2, #0]
 80005a6:	2100      	movs	r1, #0
 80005a8:	6052      	str	r2, [r2, #4]
 80005aa:	e9c3 3300 	strd	r3, r3, [r3]
 80005ae:	6099      	str	r1, [r3, #8]
 80005b0:	4770      	bx	lr
 80005b2:	bf00      	nop
 80005b4:	20000800 	.word	0x20000800
 80005b8:	20000834 	.word	0x20000834
 80005bc:	00000000 	.word	0x00000000

080005c0 <mtx7_setup>:
 80005c0:	f7ff bfee 	b.w	80005a0 <mtx6_setup>
	...

080005d0 <mtx4_setup>:
 80005d0:	4a04      	ldr	r2, [pc, #16]	; (80005e4 <mtx4_setup+0x14>)
 80005d2:	4b05      	ldr	r3, [pc, #20]	; (80005e8 <mtx4_setup+0x18>)
 80005d4:	6012      	str	r2, [r2, #0]
 80005d6:	2100      	movs	r1, #0
 80005d8:	e9c2 2101 	strd	r2, r1, [r2, #4]
 80005dc:	6099      	str	r1, [r3, #8]
 80005de:	e9c3 3300 	strd	r3, r3, [r3]
 80005e2:	4770      	bx	lr
 80005e4:	20000834 	.word	0x20000834
 80005e8:	20000844 	.word	0x20000844
 80005ec:	00000000 	.word	0x00000000

080005f0 <mtx1_setup>:
 80005f0:	4b02      	ldr	r3, [pc, #8]	; (80005fc <mtx1_setup+0xc>)
 80005f2:	2200      	movs	r2, #0
 80005f4:	e9c3 3300 	strd	r3, r3, [r3]
 80005f8:	609a      	str	r2, [r3, #8]
 80005fa:	4770      	bx	lr
 80005fc:	20000834 	.word	0x20000834

08000600 <mtx5_setup>:
 8000600:	f7ff bff6 	b.w	80005f0 <mtx1_setup>
	...

08000610 <sem1_setup>:
 8000610:	4b02      	ldr	r3, [pc, #8]	; (800061c <sem1_setup+0xc>)
 8000612:	2200      	movs	r2, #0
 8000614:	e9c3 3300 	strd	r3, r3, [r3]
 8000618:	609a      	str	r2, [r3, #8]
 800061a:	4770      	bx	lr
 800061c:	200008ac 	.word	0x200008ac

08000620 <sem3_setup>:
 8000620:	f7ff bff6 	b.w	8000610 <sem1_setup>
	...

08000630 <sem2_setup>:
 8000630:	f7ff bfee 	b.w	8000610 <sem1_setup>
	...

08000640 <test_printn.part.1>:
 8000640:	b320      	cbz	r0, 800068c <test_printn.part.1+0x4c>
 8000642:	b570      	push	{r4, r5, r6, lr}
 8000644:	b084      	sub	sp, #16
 8000646:	466d      	mov	r5, sp
 8000648:	462c      	mov	r4, r5
 800064a:	4e11      	ldr	r6, [pc, #68]	; (8000690 <test_printn.part.1+0x50>)
 800064c:	e000      	b.n	8000650 <test_printn.part.1+0x10>
 800064e:	4614      	mov	r4, r2
 8000650:	fba6 2300 	umull	r2, r3, r6, r0
 8000654:	08db      	lsrs	r3, r3, #3
 8000656:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 800065a:	eba0 0041 	sub.w	r0, r0, r1, lsl #1
 800065e:	f100 0130 	add.w	r1, r0, #48	; 0x30
 8000662:	4622      	mov	r2, r4
 8000664:	b2c9      	uxtb	r1, r1
 8000666:	f802 1b01 	strb.w	r1, [r2], #1
 800066a:	4618      	mov	r0, r3
 800066c:	2b00      	cmp	r3, #0
 800066e:	d1ee      	bne.n	800064e <test_printn.part.1+0xe>
 8000670:	42aa      	cmp	r2, r5
 8000672:	d909      	bls.n	8000688 <test_printn.part.1+0x48>
 8000674:	4e07      	ldr	r6, [pc, #28]	; (8000694 <test_printn.part.1+0x54>)
 8000676:	e001      	b.n	800067c <test_printn.part.1+0x3c>
 8000678:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
 800067c:	6830      	ldr	r0, [r6, #0]
 800067e:	6803      	ldr	r3, [r0, #0]
 8000680:	689b      	ldr	r3, [r3, #8]
 8000682:	4798      	blx	r3
 8000684:	42a5      	cmp	r5, r4
 8000686:	d1f7      	bne.n	8000678 <test_printn.part.1+0x38>
 8000688:	b004      	add	sp, #16
 800068a:	bd70      	pop	{r4, r5, r6, pc}
 800068c:	4770      	bx	lr
 800068e:	bf00      	nop
 8000690:	cccccccd 	.word	0xcccccccd
 8000694:	20000a80 	.word	0x20000a80
	...

080006a0 <test_printn>:
 80006a0:	b928      	cbnz	r0, 80006ae <test_printn+0xe>
 80006a2:	4b04      	ldr	r3, [pc, #16]	; (80006b4 <test_printn+0x14>)
 80006a4:	6818      	ldr	r0, [r3, #0]
 80006a6:	6803      	ldr	r3, [r0, #0]
 80006a8:	2130      	movs	r1, #48	; 0x30
 80006aa:	689b      	ldr	r3, [r3, #8]
 80006ac:	4718      	bx	r3
 80006ae:	f7ff bfc7 	b.w	8000640 <test_printn.part.1>
 80006b2:	bf00      	nop
 80006b4:	20000a80 	.word	0x20000a80
	...

080006c0 <print_line>:
 80006c0:	b570      	push	{r4, r5, r6, lr}
 80006c2:	4d08      	ldr	r5, [pc, #32]	; (80006e4 <print_line+0x24>)
 80006c4:	244c      	movs	r4, #76	; 0x4c
 80006c6:	6828      	ldr	r0, [r5, #0]
 80006c8:	6803      	ldr	r3, [r0, #0]
 80006ca:	212d      	movs	r1, #45	; 0x2d
 80006cc:	689b      	ldr	r3, [r3, #8]
 80006ce:	4798      	blx	r3
 80006d0:	3c01      	subs	r4, #1
 80006d2:	d1f8      	bne.n	80006c6 <print_line+0x6>
 80006d4:	6828      	ldr	r0, [r5, #0]
 80006d6:	4904      	ldr	r1, [pc, #16]	; (80006e8 <print_line+0x28>)
 80006d8:	6803      	ldr	r3, [r0, #0]
 80006da:	2202      	movs	r2, #2
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80006e2:	4718      	bx	r3
 80006e4:	20000a80 	.word	0x20000a80
 80006e8:	08006230 	.word	0x08006230
 80006ec:	00000000 	.word	0x00000000

080006f0 <test_terminate_threads>:
 80006f0:	4b0a      	ldr	r3, [pc, #40]	; (800071c <test_terminate_threads+0x2c>)
 80006f2:	b430      	push	{r4, r5}
 80006f4:	f103 0014 	add.w	r0, r3, #20
 80006f8:	2520      	movs	r5, #32
 80006fa:	2400      	movs	r4, #0
 80006fc:	f853 2b04 	ldr.w	r2, [r3], #4
 8000700:	b13a      	cbz	r2, 8000712 <test_terminate_threads+0x22>
 8000702:	f385 8811 	msr	BASEPRI, r5
 8000706:	7f51      	ldrb	r1, [r2, #29]
 8000708:	f041 0104 	orr.w	r1, r1, #4
 800070c:	7751      	strb	r1, [r2, #29]
 800070e:	f384 8811 	msr	BASEPRI, r4
 8000712:	4283      	cmp	r3, r0
 8000714:	d1f2      	bne.n	80006fc <test_terminate_threads+0xc>
 8000716:	bc30      	pop	{r4, r5}
 8000718:	4770      	bx	lr
 800071a:	bf00      	nop
 800071c:	200011cc 	.word	0x200011cc

08000720 <_test_assert_time_window>:
 8000720:	b410      	push	{r4}
 8000722:	2320      	movs	r3, #32
 8000724:	f383 8811 	msr	BASEPRI, r3
 8000728:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 800072c:	2300      	movs	r3, #0
 800072e:	6a64      	ldr	r4, [r4, #36]	; 0x24
 8000730:	f383 8811 	msr	BASEPRI, r3
 8000734:	b2a4      	uxth	r4, r4
 8000736:	1a64      	subs	r4, r4, r1
 8000738:	1a52      	subs	r2, r2, r1
 800073a:	4294      	cmp	r4, r2
 800073c:	db06      	blt.n	800074c <_test_assert_time_window+0x2c>
 800073e:	4c05      	ldr	r4, [pc, #20]	; (8000754 <_test_assert_time_window+0x34>)
 8000740:	4905      	ldr	r1, [pc, #20]	; (8000758 <_test_assert_time_window+0x38>)
 8000742:	4a06      	ldr	r2, [pc, #24]	; (800075c <_test_assert_time_window+0x3c>)
 8000744:	2301      	movs	r3, #1
 8000746:	7023      	strb	r3, [r4, #0]
 8000748:	700b      	strb	r3, [r1, #0]
 800074a:	6010      	str	r0, [r2, #0]
 800074c:	4618      	mov	r0, r3
 800074e:	bc10      	pop	{r4}
 8000750:	4770      	bx	lr
 8000752:	bf00      	nop
 8000754:	200011a0 	.word	0x200011a0
 8000758:	20000b04 	.word	0x20000b04
 800075c:	20000aac 	.word	0x20000aac

08000760 <_test_assert_sequence>:
 8000760:	b4f0      	push	{r4, r5, r6, r7}
 8000762:	4e0e      	ldr	r6, [pc, #56]	; (800079c <_test_assert_sequence+0x3c>)
 8000764:	4f0e      	ldr	r7, [pc, #56]	; (80007a0 <_test_assert_sequence+0x40>)
 8000766:	6835      	ldr	r5, [r6, #0]
 8000768:	3901      	subs	r1, #1
 800076a:	463b      	mov	r3, r7
 800076c:	e003      	b.n	8000776 <_test_assert_sequence+0x16>
 800076e:	f813 4b01 	ldrb.w	r4, [r3], #1
 8000772:	4294      	cmp	r4, r2
 8000774:	d108      	bne.n	8000788 <_test_assert_sequence+0x28>
 8000776:	429d      	cmp	r5, r3
 8000778:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800077c:	d8f7      	bhi.n	800076e <_test_assert_sequence+0xe>
 800077e:	b91a      	cbnz	r2, 8000788 <_test_assert_sequence+0x28>
 8000780:	6037      	str	r7, [r6, #0]
 8000782:	4610      	mov	r0, r2
 8000784:	bcf0      	pop	{r4, r5, r6, r7}
 8000786:	4770      	bx	lr
 8000788:	4c06      	ldr	r4, [pc, #24]	; (80007a4 <_test_assert_sequence+0x44>)
 800078a:	4907      	ldr	r1, [pc, #28]	; (80007a8 <_test_assert_sequence+0x48>)
 800078c:	4b07      	ldr	r3, [pc, #28]	; (80007ac <_test_assert_sequence+0x4c>)
 800078e:	2201      	movs	r2, #1
 8000790:	7022      	strb	r2, [r4, #0]
 8000792:	6018      	str	r0, [r3, #0]
 8000794:	700a      	strb	r2, [r1, #0]
 8000796:	4610      	mov	r0, r2
 8000798:	bcf0      	pop	{r4, r5, r6, r7}
 800079a:	4770      	bx	lr
 800079c:	200011f0 	.word	0x200011f0
 80007a0:	200011e0 	.word	0x200011e0
 80007a4:	200011a0 	.word	0x200011a0
 80007a8:	20000b04 	.word	0x20000b04
 80007ac:	20000aac 	.word	0x20000aac

080007b0 <_test_assert>:
 80007b0:	b951      	cbnz	r1, 80007c8 <_test_assert+0x18>
 80007b2:	b410      	push	{r4}
 80007b4:	4906      	ldr	r1, [pc, #24]	; (80007d0 <_test_assert+0x20>)
 80007b6:	4c07      	ldr	r4, [pc, #28]	; (80007d4 <_test_assert+0x24>)
 80007b8:	4a07      	ldr	r2, [pc, #28]	; (80007d8 <_test_assert+0x28>)
 80007ba:	2301      	movs	r3, #1
 80007bc:	7023      	strb	r3, [r4, #0]
 80007be:	6010      	str	r0, [r2, #0]
 80007c0:	700b      	strb	r3, [r1, #0]
 80007c2:	4618      	mov	r0, r3
 80007c4:	bc10      	pop	{r4}
 80007c6:	4770      	bx	lr
 80007c8:	2300      	movs	r3, #0
 80007ca:	4618      	mov	r0, r3
 80007cc:	4770      	bx	lr
 80007ce:	bf00      	nop
 80007d0:	20000b04 	.word	0x20000b04
 80007d4:	200011a0 	.word	0x200011a0
 80007d8:	20000aac 	.word	0x20000aac
 80007dc:	00000000 	.word	0x00000000

080007e0 <test_emit_token>:
 80007e0:	2320      	movs	r3, #32
 80007e2:	f383 8811 	msr	BASEPRI, r3
 80007e6:	4b04      	ldr	r3, [pc, #16]	; (80007f8 <test_emit_token+0x18>)
 80007e8:	681a      	ldr	r2, [r3, #0]
 80007ea:	1c51      	adds	r1, r2, #1
 80007ec:	6019      	str	r1, [r3, #0]
 80007ee:	7010      	strb	r0, [r2, #0]
 80007f0:	2300      	movs	r3, #0
 80007f2:	f383 8811 	msr	BASEPRI, r3
 80007f6:	4770      	bx	lr
 80007f8:	200011f0 	.word	0x200011f0
 80007fc:	00000000 	.word	0x00000000

08000800 <h3>:
 8000800:	2043      	movs	r0, #67	; 0x43
 8000802:	f7ff bfed 	b.w	80007e0 <test_emit_token>
 8000806:	bf00      	nop
	...

08000810 <h2>:
 8000810:	2042      	movs	r0, #66	; 0x42
 8000812:	f7ff bfe5 	b.w	80007e0 <test_emit_token>
 8000816:	bf00      	nop
	...

08000820 <h1>:
 8000820:	2041      	movs	r0, #65	; 0x41
 8000822:	f7ff bfdd 	b.w	80007e0 <test_emit_token>
 8000826:	bf00      	nop
	...

08000830 <thread.lto_priv.59>:
 8000830:	7800      	ldrb	r0, [r0, #0]
 8000832:	f7ff bfd5 	b.w	80007e0 <test_emit_token>
 8000836:	bf00      	nop
	...

08000840 <thread.lto_priv.61>:
 8000840:	f7ff bff6 	b.w	8000830 <thread.lto_priv.59>
	...

08000850 <test_println>:
 8000850:	b570      	push	{r4, r5, r6, lr}
 8000852:	7801      	ldrb	r1, [r0, #0]
 8000854:	b189      	cbz	r1, 800087a <test_println+0x2a>
 8000856:	4d0a      	ldr	r5, [pc, #40]	; (8000880 <test_println+0x30>)
 8000858:	4604      	mov	r4, r0
 800085a:	6828      	ldr	r0, [r5, #0]
 800085c:	6803      	ldr	r3, [r0, #0]
 800085e:	689b      	ldr	r3, [r3, #8]
 8000860:	4798      	blx	r3
 8000862:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000866:	2900      	cmp	r1, #0
 8000868:	d1f7      	bne.n	800085a <test_println+0xa>
 800086a:	6828      	ldr	r0, [r5, #0]
 800086c:	4905      	ldr	r1, [pc, #20]	; (8000884 <test_println+0x34>)
 800086e:	6803      	ldr	r3, [r0, #0]
 8000870:	2202      	movs	r2, #2
 8000872:	681b      	ldr	r3, [r3, #0]
 8000874:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000878:	4718      	bx	r3
 800087a:	4d01      	ldr	r5, [pc, #4]	; (8000880 <test_println+0x30>)
 800087c:	e7f5      	b.n	800086a <test_println+0x1a>
 800087e:	bf00      	nop
 8000880:	20000a80 	.word	0x20000a80
 8000884:	08006230 	.word	0x08006230
	...

08000890 <test_print>:
 8000890:	7801      	ldrb	r1, [r0, #0]
 8000892:	b159      	cbz	r1, 80008ac <test_print+0x1c>
 8000894:	b538      	push	{r3, r4, r5, lr}
 8000896:	4d06      	ldr	r5, [pc, #24]	; (80008b0 <test_print+0x20>)
 8000898:	4604      	mov	r4, r0
 800089a:	6828      	ldr	r0, [r5, #0]
 800089c:	6803      	ldr	r3, [r0, #0]
 800089e:	689b      	ldr	r3, [r3, #8]
 80008a0:	4798      	blx	r3
 80008a2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80008a6:	2900      	cmp	r1, #0
 80008a8:	d1f7      	bne.n	800089a <test_print+0xa>
 80008aa:	bd38      	pop	{r3, r4, r5, pc}
 80008ac:	4770      	bx	lr
 80008ae:	bf00      	nop
 80008b0:	20000a80 	.word	0x20000a80
	...

080008c0 <_port_irq_epilogue>:
 80008c0:	2320      	movs	r3, #32
 80008c2:	f383 8811 	msr	BASEPRI, r3
 80008c6:	4b11      	ldr	r3, [pc, #68]	; (800090c <_port_irq_epilogue+0x4c>)
 80008c8:	685b      	ldr	r3, [r3, #4]
 80008ca:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 80008ce:	d102      	bne.n	80008d6 <_port_irq_epilogue+0x16>
 80008d0:	f383 8811 	msr	BASEPRI, r3
 80008d4:	4770      	bx	lr
 80008d6:	b480      	push	{r7}
 80008d8:	af00      	add	r7, sp, #0
 80008da:	f3ef 8309 	mrs	r3, PSP
 80008de:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80008e2:	f843 2c04 	str.w	r2, [r3, #-4]
 80008e6:	f1a3 0220 	sub.w	r2, r3, #32
 80008ea:	f382 8809 	msr	PSP, r2
 80008ee:	4a08      	ldr	r2, [pc, #32]	; (8000910 <_port_irq_epilogue+0x50>)
 80008f0:	6811      	ldr	r1, [r2, #0]
 80008f2:	6992      	ldr	r2, [r2, #24]
 80008f4:	6889      	ldr	r1, [r1, #8]
 80008f6:	6892      	ldr	r2, [r2, #8]
 80008f8:	4291      	cmp	r1, r2
 80008fa:	bf8c      	ite	hi
 80008fc:	4a05      	ldrhi	r2, [pc, #20]	; (8000914 <_port_irq_epilogue+0x54>)
 80008fe:	4a06      	ldrls	r2, [pc, #24]	; (8000918 <_port_irq_epilogue+0x58>)
 8000900:	f843 2c08 	str.w	r2, [r3, #-8]
 8000904:	46bd      	mov	sp, r7
 8000906:	bc80      	pop	{r7}
 8000908:	4770      	bx	lr
 800090a:	bf00      	nop
 800090c:	e000ed00 	.word	0xe000ed00
 8000910:	20000930 	.word	0x20000930
 8000914:	08000221 	.word	0x08000221
 8000918:	08000224 	.word	0x08000224
 800091c:	00000000 	.word	0x00000000

08000920 <VectorB0>:
 8000920:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000924:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8000928:	6923      	ldr	r3, [r4, #16]
 800092a:	079b      	lsls	r3, r3, #30
 800092c:	d403      	bmi.n	8000936 <VectorB0+0x16>
 800092e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000932:	f7ff bfc5 	b.w	80008c0 <_port_irq_epilogue>
 8000936:	2700      	movs	r7, #0
 8000938:	6127      	str	r7, [r4, #16]
 800093a:	2520      	movs	r5, #32
 800093c:	f385 8811 	msr	BASEPRI, r5
 8000940:	4e1f      	ldr	r6, [pc, #124]	; (80009c0 <VectorB0+0xa0>)
 8000942:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000944:	f8b6 c026 	ldrh.w	ip, [r6, #38]	; 0x26
 8000948:	69f3      	ldr	r3, [r6, #28]
 800094a:	b280      	uxth	r0, r0
 800094c:	eba0 010c 	sub.w	r1, r0, ip
 8000950:	891a      	ldrh	r2, [r3, #8]
 8000952:	b289      	uxth	r1, r1
 8000954:	4291      	cmp	r1, r2
 8000956:	f106 081c 	add.w	r8, r6, #28
 800095a:	d31c      	bcc.n	8000996 <VectorB0+0x76>
 800095c:	6819      	ldr	r1, [r3, #0]
 800095e:	f8d3 900c 	ldr.w	r9, [r3, #12]
 8000962:	4462      	add	r2, ip
 8000964:	4541      	cmp	r1, r8
 8000966:	84f2      	strh	r2, [r6, #38]	; 0x26
 8000968:	f8c1 8004 	str.w	r8, [r1, #4]
 800096c:	61f1      	str	r1, [r6, #28]
 800096e:	60df      	str	r7, [r3, #12]
 8000970:	bf08      	it	eq
 8000972:	60e7      	streq	r7, [r4, #12]
 8000974:	f387 8811 	msr	BASEPRI, r7
 8000978:	6918      	ldr	r0, [r3, #16]
 800097a:	47c8      	blx	r9
 800097c:	f385 8811 	msr	BASEPRI, r5
 8000980:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000982:	f8b6 c026 	ldrh.w	ip, [r6, #38]	; 0x26
 8000986:	69f3      	ldr	r3, [r6, #28]
 8000988:	b280      	uxth	r0, r0
 800098a:	eba0 010c 	sub.w	r1, r0, ip
 800098e:	891a      	ldrh	r2, [r3, #8]
 8000990:	b289      	uxth	r1, r1
 8000992:	428a      	cmp	r2, r1
 8000994:	d9e2      	bls.n	800095c <VectorB0+0x3c>
 8000996:	4543      	cmp	r3, r8
 8000998:	d00a      	beq.n	80009b0 <VectorB0+0x90>
 800099a:	4462      	add	r2, ip
 800099c:	1a12      	subs	r2, r2, r0
 800099e:	b292      	uxth	r2, r2
 80009a0:	2a02      	cmp	r2, #2
 80009a2:	bf2c      	ite	cs
 80009a4:	1882      	addcs	r2, r0, r2
 80009a6:	1c82      	addcc	r2, r0, #2
 80009a8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80009ac:	b292      	uxth	r2, r2
 80009ae:	635a      	str	r2, [r3, #52]	; 0x34
 80009b0:	2300      	movs	r3, #0
 80009b2:	f383 8811 	msr	BASEPRI, r3
 80009b6:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009ba:	f7ff bf81 	b.w	80008c0 <_port_irq_epilogue>
 80009be:	bf00      	nop
 80009c0:	20000930 	.word	0x20000930
	...

080009d0 <SVC_Handler>:
 80009d0:	b480      	push	{r7}
 80009d2:	af00      	add	r7, sp, #0
 80009d4:	f3ef 8309 	mrs	r3, PSP
 80009d8:	3320      	adds	r3, #32
 80009da:	f383 8809 	msr	PSP, r3
 80009de:	2300      	movs	r3, #0
 80009e0:	f383 8811 	msr	BASEPRI, r3
 80009e4:	46bd      	mov	sp, r7
 80009e6:	bc80      	pop	{r7}
 80009e8:	4770      	bx	lr
 80009ea:	bf00      	nop
 80009ec:	0000      	movs	r0, r0
	...

080009f0 <chPoolAlloc>:
 80009f0:	b508      	push	{r3, lr}
 80009f2:	2220      	movs	r2, #32
 80009f4:	4603      	mov	r3, r0
 80009f6:	f382 8811 	msr	BASEPRI, r2
 80009fa:	6800      	ldr	r0, [r0, #0]
 80009fc:	b128      	cbz	r0, 8000a0a <chPoolAlloc+0x1a>
 80009fe:	6802      	ldr	r2, [r0, #0]
 8000a00:	601a      	str	r2, [r3, #0]
 8000a02:	2300      	movs	r3, #0
 8000a04:	f383 8811 	msr	BASEPRI, r3
 8000a08:	bd08      	pop	{r3, pc}
 8000a0a:	689a      	ldr	r2, [r3, #8]
 8000a0c:	2a00      	cmp	r2, #0
 8000a0e:	d0f8      	beq.n	8000a02 <chPoolAlloc+0x12>
 8000a10:	6858      	ldr	r0, [r3, #4]
 8000a12:	4790      	blx	r2
 8000a14:	2300      	movs	r3, #0
 8000a16:	f383 8811 	msr	BASEPRI, r3
 8000a1a:	bd08      	pop	{r3, pc}
 8000a1c:	0000      	movs	r0, r0
	...

08000a20 <pools1_execute>:
 8000a20:	b570      	push	{r4, r5, r6, lr}
 8000a22:	4b31      	ldr	r3, [pc, #196]	; (8000ae8 <pools1_execute+0xc8>)
 8000a24:	4c31      	ldr	r4, [pc, #196]	; (8000aec <pools1_execute+0xcc>)
 8000a26:	2205      	movs	r2, #5
 8000a28:	2520      	movs	r5, #32
 8000a2a:	2000      	movs	r0, #0
 8000a2c:	f385 8811 	msr	BASEPRI, r5
 8000a30:	6821      	ldr	r1, [r4, #0]
 8000a32:	6019      	str	r1, [r3, #0]
 8000a34:	6023      	str	r3, [r4, #0]
 8000a36:	f380 8811 	msr	BASEPRI, r0
 8000a3a:	6861      	ldr	r1, [r4, #4]
 8000a3c:	3a01      	subs	r2, #1
 8000a3e:	440b      	add	r3, r1
 8000a40:	d1f4      	bne.n	8000a2c <pools1_execute+0xc>
 8000a42:	4e2a      	ldr	r6, [pc, #168]	; (8000aec <pools1_execute+0xcc>)
 8000a44:	2505      	movs	r5, #5
 8000a46:	4630      	mov	r0, r6
 8000a48:	f7ff ffd2 	bl	80009f0 <chPoolAlloc>
 8000a4c:	1c01      	adds	r1, r0, #0
 8000a4e:	bf18      	it	ne
 8000a50:	2101      	movne	r1, #1
 8000a52:	2001      	movs	r0, #1
 8000a54:	f7ff feac 	bl	80007b0 <_test_assert>
 8000a58:	bba0      	cbnz	r0, 8000ac4 <pools1_execute+0xa4>
 8000a5a:	3d01      	subs	r5, #1
 8000a5c:	d1f3      	bne.n	8000a46 <pools1_execute+0x26>
 8000a5e:	4823      	ldr	r0, [pc, #140]	; (8000aec <pools1_execute+0xcc>)
 8000a60:	f7ff ffc6 	bl	80009f0 <chPoolAlloc>
 8000a64:	fab0 f180 	clz	r1, r0
 8000a68:	0949      	lsrs	r1, r1, #5
 8000a6a:	2002      	movs	r0, #2
 8000a6c:	f7ff fea0 	bl	80007b0 <_test_assert>
 8000a70:	bb40      	cbnz	r0, 8000ac4 <pools1_execute+0xa4>
 8000a72:	4a1f      	ldr	r2, [pc, #124]	; (8000af0 <pools1_execute+0xd0>)
 8000a74:	4b1c      	ldr	r3, [pc, #112]	; (8000ae8 <pools1_execute+0xc8>)
 8000a76:	f102 0610 	add.w	r6, r2, #16
 8000a7a:	2020      	movs	r0, #32
 8000a7c:	f380 8811 	msr	BASEPRI, r0
 8000a80:	6821      	ldr	r1, [r4, #0]
 8000a82:	6019      	str	r1, [r3, #0]
 8000a84:	6023      	str	r3, [r4, #0]
 8000a86:	f385 8811 	msr	BASEPRI, r5
 8000a8a:	4296      	cmp	r6, r2
 8000a8c:	d002      	beq.n	8000a94 <pools1_execute+0x74>
 8000a8e:	f852 3b04 	ldr.w	r3, [r2], #4
 8000a92:	e7f3      	b.n	8000a7c <pools1_execute+0x5c>
 8000a94:	4e15      	ldr	r6, [pc, #84]	; (8000aec <pools1_execute+0xcc>)
 8000a96:	2505      	movs	r5, #5
 8000a98:	4630      	mov	r0, r6
 8000a9a:	f7ff ffa9 	bl	80009f0 <chPoolAlloc>
 8000a9e:	1c01      	adds	r1, r0, #0
 8000aa0:	bf18      	it	ne
 8000aa2:	2101      	movne	r1, #1
 8000aa4:	2003      	movs	r0, #3
 8000aa6:	f7ff fe83 	bl	80007b0 <_test_assert>
 8000aaa:	b958      	cbnz	r0, 8000ac4 <pools1_execute+0xa4>
 8000aac:	3d01      	subs	r5, #1
 8000aae:	d1f3      	bne.n	8000a98 <pools1_execute+0x78>
 8000ab0:	480e      	ldr	r0, [pc, #56]	; (8000aec <pools1_execute+0xcc>)
 8000ab2:	f7ff ff9d 	bl	80009f0 <chPoolAlloc>
 8000ab6:	fab0 f180 	clz	r1, r0
 8000aba:	0949      	lsrs	r1, r1, #5
 8000abc:	2004      	movs	r0, #4
 8000abe:	f7ff fe77 	bl	80007b0 <_test_assert>
 8000ac2:	b100      	cbz	r0, 8000ac6 <pools1_execute+0xa6>
 8000ac4:	bd70      	pop	{r4, r5, r6, pc}
 8000ac6:	2210      	movs	r2, #16
 8000ac8:	4b0a      	ldr	r3, [pc, #40]	; (8000af4 <pools1_execute+0xd4>)
 8000aca:	4808      	ldr	r0, [pc, #32]	; (8000aec <pools1_execute+0xcc>)
 8000acc:	60a3      	str	r3, [r4, #8]
 8000ace:	e9c4 5200 	strd	r5, r2, [r4]
 8000ad2:	f7ff ff8d 	bl	80009f0 <chPoolAlloc>
 8000ad6:	fab0 f180 	clz	r1, r0
 8000ada:	0949      	lsrs	r1, r1, #5
 8000adc:	2005      	movs	r0, #5
 8000ade:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000ae2:	f7ff be65 	b.w	80007b0 <_test_assert>
 8000ae6:	bf00      	nop
 8000ae8:	20000b38 	.word	0x20000b38
 8000aec:	2000087c 	.word	0x2000087c
 8000af0:	080069e4 	.word	0x080069e4
 8000af4:	080004a1 	.word	0x080004a1
	...

08000b00 <chEvtUnregister>:
 8000b00:	2320      	movs	r3, #32
 8000b02:	f383 8811 	msr	BASEPRI, r3
 8000b06:	4602      	mov	r2, r0
 8000b08:	e002      	b.n	8000b10 <chEvtUnregister+0x10>
 8000b0a:	428b      	cmp	r3, r1
 8000b0c:	d007      	beq.n	8000b1e <chEvtUnregister+0x1e>
 8000b0e:	461a      	mov	r2, r3
 8000b10:	6813      	ldr	r3, [r2, #0]
 8000b12:	4283      	cmp	r3, r0
 8000b14:	d1f9      	bne.n	8000b0a <chEvtUnregister+0xa>
 8000b16:	2300      	movs	r3, #0
 8000b18:	f383 8811 	msr	BASEPRI, r3
 8000b1c:	4770      	bx	lr
 8000b1e:	680b      	ldr	r3, [r1, #0]
 8000b20:	6013      	str	r3, [r2, #0]
 8000b22:	2300      	movs	r3, #0
 8000b24:	f383 8811 	msr	BASEPRI, r3
 8000b28:	4770      	bx	lr
 8000b2a:	bf00      	nop
 8000b2c:	0000      	movs	r0, r0
	...

08000b30 <evt1_execute>:
 8000b30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b34:	4c33      	ldr	r4, [pc, #204]	; (8000c04 <evt1_execute+0xd4>)
 8000b36:	b08a      	sub	sp, #40	; 0x28
 8000b38:	2020      	movs	r0, #32
 8000b3a:	6024      	str	r4, [r4, #0]
 8000b3c:	f380 8811 	msr	BASEPRI, r0
 8000b40:	4931      	ldr	r1, [pc, #196]	; (8000c08 <evt1_execute+0xd8>)
 8000b42:	6823      	ldr	r3, [r4, #0]
 8000b44:	ad0a      	add	r5, sp, #40	; 0x28
 8000b46:	2701      	movs	r7, #1
 8000b48:	f845 3d14 	str.w	r3, [r5, #-20]!
 8000b4c:	698b      	ldr	r3, [r1, #24]
 8000b4e:	9306      	str	r3, [sp, #24]
 8000b50:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000b54:	2300      	movs	r3, #0
 8000b56:	6025      	str	r5, [r4, #0]
 8000b58:	e9cd 7307 	strd	r7, r3, [sp, #28]
 8000b5c:	9209      	str	r2, [sp, #36]	; 0x24
 8000b5e:	f383 8811 	msr	BASEPRI, r3
 8000b62:	f380 8811 	msr	BASEPRI, r0
 8000b66:	ae0a      	add	r6, sp, #40	; 0x28
 8000b68:	6820      	ldr	r0, [r4, #0]
 8000b6a:	f846 0d28 	str.w	r0, [r6, #-40]!
 8000b6e:	6989      	ldr	r1, [r1, #24]
 8000b70:	9101      	str	r1, [sp, #4]
 8000b72:	f04f 0802 	mov.w	r8, #2
 8000b76:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8000b7a:	6026      	str	r6, [r4, #0]
 8000b7c:	f8cd 8008 	str.w	r8, [sp, #8]
 8000b80:	f383 8811 	msr	BASEPRI, r3
 8000b84:	6821      	ldr	r1, [r4, #0]
 8000b86:	1b09      	subs	r1, r1, r4
 8000b88:	bf18      	it	ne
 8000b8a:	2101      	movne	r1, #1
 8000b8c:	4638      	mov	r0, r7
 8000b8e:	f7ff fe0f 	bl	80007b0 <_test_assert>
 8000b92:	b110      	cbz	r0, 8000b9a <evt1_execute+0x6a>
 8000b94:	b00a      	add	sp, #40	; 0x28
 8000b96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000b9a:	4629      	mov	r1, r5
 8000b9c:	4620      	mov	r0, r4
 8000b9e:	f7ff ffaf 	bl	8000b00 <chEvtUnregister>
 8000ba2:	6821      	ldr	r1, [r4, #0]
 8000ba4:	1b09      	subs	r1, r1, r4
 8000ba6:	bf18      	it	ne
 8000ba8:	2101      	movne	r1, #1
 8000baa:	4640      	mov	r0, r8
 8000bac:	f7ff fe00 	bl	80007b0 <_test_assert>
 8000bb0:	2800      	cmp	r0, #0
 8000bb2:	d1ef      	bne.n	8000b94 <evt1_execute+0x64>
 8000bb4:	4631      	mov	r1, r6
 8000bb6:	4620      	mov	r0, r4
 8000bb8:	f7ff ffa2 	bl	8000b00 <chEvtUnregister>
 8000bbc:	6821      	ldr	r1, [r4, #0]
 8000bbe:	1b09      	subs	r1, r1, r4
 8000bc0:	fab1 f181 	clz	r1, r1
 8000bc4:	2003      	movs	r0, #3
 8000bc6:	0949      	lsrs	r1, r1, #5
 8000bc8:	f7ff fdf2 	bl	80007b0 <_test_assert>
 8000bcc:	2800      	cmp	r0, #0
 8000bce:	d1e1      	bne.n	8000b94 <evt1_execute+0x64>
 8000bd0:	4e0e      	ldr	r6, [pc, #56]	; (8000c0c <evt1_execute+0xdc>)
 8000bd2:	4604      	mov	r4, r0
 8000bd4:	2507      	movs	r5, #7
 8000bd6:	fa25 f304 	lsr.w	r3, r5, r4
 8000bda:	f013 0f01 	tst.w	r3, #1
 8000bde:	fa07 f204 	lsl.w	r2, r7, r4
 8000be2:	4620      	mov	r0, r4
 8000be4:	d00c      	beq.n	8000c00 <evt1_execute+0xd0>
 8000be6:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8000bea:	ea25 0502 	bic.w	r5, r5, r2
 8000bee:	3401      	adds	r4, #1
 8000bf0:	4798      	blx	r3
 8000bf2:	2d00      	cmp	r5, #0
 8000bf4:	d1ef      	bne.n	8000bd6 <evt1_execute+0xa6>
 8000bf6:	4906      	ldr	r1, [pc, #24]	; (8000c10 <evt1_execute+0xe0>)
 8000bf8:	2004      	movs	r0, #4
 8000bfa:	f7ff fdb1 	bl	8000760 <_test_assert_sequence>
 8000bfe:	e7c9      	b.n	8000b94 <evt1_execute+0x64>
 8000c00:	3401      	adds	r4, #1
 8000c02:	e7e8      	b.n	8000bd6 <evt1_execute+0xa6>
 8000c04:	20000808 	.word	0x20000808
 8000c08:	20000930 	.word	0x20000930
 8000c0c:	08005ea0 	.word	0x08005ea0
 8000c10:	08005eb0 	.word	0x08005eb0
	...

08000c20 <chTMStopMeasurementX>:
 8000c20:	4b0e      	ldr	r3, [pc, #56]	; (8000c5c <chTMStopMeasurementX+0x3c>)
 8000c22:	4a0f      	ldr	r2, [pc, #60]	; (8000c60 <chTMStopMeasurementX+0x40>)
 8000c24:	685b      	ldr	r3, [r3, #4]
 8000c26:	68c1      	ldr	r1, [r0, #12]
 8000c28:	b4f0      	push	{r4, r5, r6, r7}
 8000c2a:	6884      	ldr	r4, [r0, #8]
 8000c2c:	6f16      	ldr	r6, [r2, #112]	; 0x70
 8000c2e:	6842      	ldr	r2, [r0, #4]
 8000c30:	1b1b      	subs	r3, r3, r4
 8000c32:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
 8000c36:	1b9b      	subs	r3, r3, r6
 8000c38:	18e6      	adds	r6, r4, r3
 8000c3a:	f145 0700 	adc.w	r7, r5, #0
 8000c3e:	3101      	adds	r1, #1
 8000c40:	4293      	cmp	r3, r2
 8000c42:	e9c0 3102 	strd	r3, r1, [r0, #8]
 8000c46:	e9c0 6704 	strd	r6, r7, [r0, #16]
 8000c4a:	d805      	bhi.n	8000c58 <chTMStopMeasurementX+0x38>
 8000c4c:	6802      	ldr	r2, [r0, #0]
 8000c4e:	4293      	cmp	r3, r2
 8000c50:	bf38      	it	cc
 8000c52:	6003      	strcc	r3, [r0, #0]
 8000c54:	bcf0      	pop	{r4, r5, r6, r7}
 8000c56:	4770      	bx	lr
 8000c58:	6043      	str	r3, [r0, #4]
 8000c5a:	e7fb      	b.n	8000c54 <chTMStopMeasurementX+0x34>
 8000c5c:	e0001000 	.word	0xe0001000
 8000c60:	20000930 	.word	0x20000930
	...

08000c70 <wakeup>:
 8000c70:	2320      	movs	r3, #32
 8000c72:	f383 8811 	msr	BASEPRI, r3
 8000c76:	7f03      	ldrb	r3, [r0, #28]
 8000c78:	2b07      	cmp	r3, #7
 8000c7a:	d80e      	bhi.n	8000c9a <wakeup+0x2a>
 8000c7c:	e8df f003 	tbb	[pc, r3]
 8000c80:	230d0d27 	.word	0x230d0d27
 8000c84:	080d0408 	.word	0x080d0408
 8000c88:	6a02      	ldr	r2, [r0, #32]
 8000c8a:	6893      	ldr	r3, [r2, #8]
 8000c8c:	3301      	adds	r3, #1
 8000c8e:	6093      	str	r3, [r2, #8]
 8000c90:	e9d0 2300 	ldrd	r2, r3, [r0]
 8000c94:	601a      	str	r2, [r3, #0]
 8000c96:	6802      	ldr	r2, [r0, #0]
 8000c98:	6053      	str	r3, [r2, #4]
 8000c9a:	b410      	push	{r4}
 8000c9c:	2200      	movs	r2, #0
 8000c9e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000ca2:	6881      	ldr	r1, [r0, #8]
 8000ca4:	4b0c      	ldr	r3, [pc, #48]	; (8000cd8 <wakeup+0x68>)
 8000ca6:	6204      	str	r4, [r0, #32]
 8000ca8:	7702      	strb	r2, [r0, #28]
 8000caa:	681b      	ldr	r3, [r3, #0]
 8000cac:	689a      	ldr	r2, [r3, #8]
 8000cae:	428a      	cmp	r2, r1
 8000cb0:	d2fb      	bcs.n	8000caa <wakeup+0x3a>
 8000cb2:	685a      	ldr	r2, [r3, #4]
 8000cb4:	2100      	movs	r1, #0
 8000cb6:	e9c0 3200 	strd	r3, r2, [r0]
 8000cba:	6010      	str	r0, [r2, #0]
 8000cbc:	6058      	str	r0, [r3, #4]
 8000cbe:	f381 8811 	msr	BASEPRI, r1
 8000cc2:	bc10      	pop	{r4}
 8000cc4:	4770      	bx	lr
 8000cc6:	6a03      	ldr	r3, [r0, #32]
 8000cc8:	2200      	movs	r2, #0
 8000cca:	601a      	str	r2, [r3, #0]
 8000ccc:	e7e5      	b.n	8000c9a <wakeup+0x2a>
 8000cce:	2300      	movs	r3, #0
 8000cd0:	f383 8811 	msr	BASEPRI, r3
 8000cd4:	4770      	bx	lr
 8000cd6:	bf00      	nop
 8000cd8:	20000930 	.word	0x20000930
 8000cdc:	00000000 	.word	0x00000000

08000ce0 <chSchReadyI>:
 8000ce0:	4601      	mov	r1, r0
 8000ce2:	2200      	movs	r2, #0
 8000ce4:	4b06      	ldr	r3, [pc, #24]	; (8000d00 <chSchReadyI+0x20>)
 8000ce6:	6880      	ldr	r0, [r0, #8]
 8000ce8:	770a      	strb	r2, [r1, #28]
 8000cea:	681b      	ldr	r3, [r3, #0]
 8000cec:	689a      	ldr	r2, [r3, #8]
 8000cee:	4282      	cmp	r2, r0
 8000cf0:	d2fb      	bcs.n	8000cea <chSchReadyI+0xa>
 8000cf2:	685a      	ldr	r2, [r3, #4]
 8000cf4:	4608      	mov	r0, r1
 8000cf6:	e9c1 3200 	strd	r3, r2, [r1]
 8000cfa:	6011      	str	r1, [r2, #0]
 8000cfc:	6059      	str	r1, [r3, #4]
 8000cfe:	4770      	bx	lr
 8000d00:	20000930 	.word	0x20000930
	...

08000d10 <chCondSignalI.constprop.43>:
 8000d10:	4b07      	ldr	r3, [pc, #28]	; (8000d30 <chCondSignalI.constprop.43+0x20>)
 8000d12:	681a      	ldr	r2, [r3, #0]
 8000d14:	429a      	cmp	r2, r3
 8000d16:	d009      	beq.n	8000d2c <chCondSignalI.constprop.43+0x1c>
 8000d18:	6811      	ldr	r1, [r2, #0]
 8000d1a:	b410      	push	{r4}
 8000d1c:	2400      	movs	r4, #0
 8000d1e:	604b      	str	r3, [r1, #4]
 8000d20:	6019      	str	r1, [r3, #0]
 8000d22:	6214      	str	r4, [r2, #32]
 8000d24:	4610      	mov	r0, r2
 8000d26:	bc10      	pop	{r4}
 8000d28:	f7ff bfda 	b.w	8000ce0 <chSchReadyI>
 8000d2c:	4770      	bx	lr
 8000d2e:	bf00      	nop
 8000d30:	20000800 	.word	0x20000800
	...

08000d40 <chIQPutI>:
 8000d40:	b510      	push	{r4, lr}
 8000d42:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 8000d46:	42a2      	cmp	r2, r4
 8000d48:	6883      	ldr	r3, [r0, #8]
 8000d4a:	d01c      	beq.n	8000d86 <chIQPutI+0x46>
 8000d4c:	3301      	adds	r3, #1
 8000d4e:	1c54      	adds	r4, r2, #1
 8000d50:	6083      	str	r3, [r0, #8]
 8000d52:	6144      	str	r4, [r0, #20]
 8000d54:	7011      	strb	r1, [r2, #0]
 8000d56:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
 8000d5a:	429a      	cmp	r2, r3
 8000d5c:	d20c      	bcs.n	8000d78 <chIQPutI+0x38>
 8000d5e:	6803      	ldr	r3, [r0, #0]
 8000d60:	4298      	cmp	r0, r3
 8000d62:	d00e      	beq.n	8000d82 <chIQPutI+0x42>
 8000d64:	681a      	ldr	r2, [r3, #0]
 8000d66:	6002      	str	r2, [r0, #0]
 8000d68:	2400      	movs	r4, #0
 8000d6a:	6050      	str	r0, [r2, #4]
 8000d6c:	4618      	mov	r0, r3
 8000d6e:	621c      	str	r4, [r3, #32]
 8000d70:	f7ff ffb6 	bl	8000ce0 <chSchReadyI>
 8000d74:	4620      	mov	r0, r4
 8000d76:	bd10      	pop	{r4, pc}
 8000d78:	68c3      	ldr	r3, [r0, #12]
 8000d7a:	6143      	str	r3, [r0, #20]
 8000d7c:	6803      	ldr	r3, [r0, #0]
 8000d7e:	4298      	cmp	r0, r3
 8000d80:	d1f0      	bne.n	8000d64 <chIQPutI+0x24>
 8000d82:	2000      	movs	r0, #0
 8000d84:	bd10      	pop	{r4, pc}
 8000d86:	2b00      	cmp	r3, #0
 8000d88:	d0e0      	beq.n	8000d4c <chIQPutI+0xc>
 8000d8a:	f06f 0003 	mvn.w	r0, #3
 8000d8e:	bd10      	pop	{r4, pc}

08000d90 <chOQGetI>:
 8000d90:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8000d94:	4291      	cmp	r1, r2
 8000d96:	b538      	push	{r3, r4, r5, lr}
 8000d98:	6883      	ldr	r3, [r0, #8]
 8000d9a:	d017      	beq.n	8000dcc <chOQGetI+0x3c>
 8000d9c:	6905      	ldr	r5, [r0, #16]
 8000d9e:	1c51      	adds	r1, r2, #1
 8000da0:	3301      	adds	r3, #1
 8000da2:	6083      	str	r3, [r0, #8]
 8000da4:	6181      	str	r1, [r0, #24]
 8000da6:	42a9      	cmp	r1, r5
 8000da8:	7814      	ldrb	r4, [r2, #0]
 8000daa:	d20c      	bcs.n	8000dc6 <chOQGetI+0x36>
 8000dac:	6803      	ldr	r3, [r0, #0]
 8000dae:	4298      	cmp	r0, r3
 8000db0:	d007      	beq.n	8000dc2 <chOQGetI+0x32>
 8000db2:	681a      	ldr	r2, [r3, #0]
 8000db4:	6002      	str	r2, [r0, #0]
 8000db6:	2100      	movs	r1, #0
 8000db8:	6050      	str	r0, [r2, #4]
 8000dba:	4618      	mov	r0, r3
 8000dbc:	6219      	str	r1, [r3, #32]
 8000dbe:	f7ff ff8f 	bl	8000ce0 <chSchReadyI>
 8000dc2:	4620      	mov	r0, r4
 8000dc4:	bd38      	pop	{r3, r4, r5, pc}
 8000dc6:	68c3      	ldr	r3, [r0, #12]
 8000dc8:	6183      	str	r3, [r0, #24]
 8000dca:	e7ef      	b.n	8000dac <chOQGetI+0x1c>
 8000dcc:	2b00      	cmp	r3, #0
 8000dce:	d0e5      	beq.n	8000d9c <chOQGetI+0xc>
 8000dd0:	f06f 0002 	mvn.w	r0, #2
 8000dd4:	bd38      	pop	{r3, r4, r5, pc}
 8000dd6:	bf00      	nop
	...

08000de0 <chEvtSignalI>:
 8000de0:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8000de2:	7f02      	ldrb	r2, [r0, #28]
 8000de4:	4319      	orrs	r1, r3
 8000de6:	2a0a      	cmp	r2, #10
 8000de8:	6341      	str	r1, [r0, #52]	; 0x34
 8000dea:	d009      	beq.n	8000e00 <chEvtSignalI+0x20>
 8000dec:	2a0b      	cmp	r2, #11
 8000dee:	d000      	beq.n	8000df2 <chEvtSignalI+0x12>
 8000df0:	4770      	bx	lr
 8000df2:	6a03      	ldr	r3, [r0, #32]
 8000df4:	438b      	bics	r3, r1
 8000df6:	d1fb      	bne.n	8000df0 <chEvtSignalI+0x10>
 8000df8:	2300      	movs	r3, #0
 8000dfa:	6203      	str	r3, [r0, #32]
 8000dfc:	f7ff bf70 	b.w	8000ce0 <chSchReadyI>
 8000e00:	6a03      	ldr	r3, [r0, #32]
 8000e02:	4219      	tst	r1, r3
 8000e04:	d1f8      	bne.n	8000df8 <chEvtSignalI+0x18>
 8000e06:	4770      	bx	lr
	...

08000e10 <chEvtBroadcastFlagsI>:
 8000e10:	b570      	push	{r4, r5, r6, lr}
 8000e12:	6804      	ldr	r4, [r0, #0]
 8000e14:	42a0      	cmp	r0, r4
 8000e16:	d00f      	beq.n	8000e38 <chEvtBroadcastFlagsI+0x28>
 8000e18:	4606      	mov	r6, r0
 8000e1a:	460d      	mov	r5, r1
 8000e1c:	68e3      	ldr	r3, [r4, #12]
 8000e1e:	432b      	orrs	r3, r5
 8000e20:	60e3      	str	r3, [r4, #12]
 8000e22:	b115      	cbz	r5, 8000e2a <chEvtBroadcastFlagsI+0x1a>
 8000e24:	6922      	ldr	r2, [r4, #16]
 8000e26:	4213      	tst	r3, r2
 8000e28:	d003      	beq.n	8000e32 <chEvtBroadcastFlagsI+0x22>
 8000e2a:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 8000e2e:	f7ff ffd7 	bl	8000de0 <chEvtSignalI>
 8000e32:	6824      	ldr	r4, [r4, #0]
 8000e34:	42a6      	cmp	r6, r4
 8000e36:	d1f1      	bne.n	8000e1c <chEvtBroadcastFlagsI+0xc>
 8000e38:	bd70      	pop	{r4, r5, r6, pc}
 8000e3a:	bf00      	nop
 8000e3c:	0000      	movs	r0, r0
	...

08000e40 <VectorD4>:
 8000e40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e44:	4f52      	ldr	r7, [pc, #328]	; (8000f90 <VectorD4+0x150>)
 8000e46:	f8d7 a074 	ldr.w	sl, [r7, #116]	; 0x74
 8000e4a:	f8ba 600c 	ldrh.w	r6, [sl, #12]
 8000e4e:	f8ba 4000 	ldrh.w	r4, [sl]
 8000e52:	b2a4      	uxth	r4, r4
 8000e54:	05e5      	lsls	r5, r4, #23
 8000e56:	b2b6      	uxth	r6, r6
 8000e58:	d467      	bmi.n	8000f2a <VectorD4+0xea>
 8000e5a:	2320      	movs	r3, #32
 8000e5c:	f383 8811 	msr	BASEPRI, r3
 8000e60:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000e64:	d03c      	beq.n	8000ee0 <VectorD4+0xa0>
 8000e66:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8000f98 <VectorD4+0x158>
 8000e6a:	f108 0908 	add.w	r9, r8, #8
 8000e6e:	e00a      	b.n	8000e86 <VectorD4+0x46>
 8000e70:	f8ba 1004 	ldrh.w	r1, [sl, #4]
 8000e74:	06a0      	lsls	r0, r4, #26
 8000e76:	b28d      	uxth	r5, r1
 8000e78:	d420      	bmi.n	8000ebc <VectorD4+0x7c>
 8000e7a:	f8ba 4000 	ldrh.w	r4, [sl]
 8000e7e:	b2a4      	uxth	r4, r4
 8000e80:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000e84:	d02c      	beq.n	8000ee0 <VectorD4+0xa0>
 8000e86:	0720      	lsls	r0, r4, #28
 8000e88:	d0f2      	beq.n	8000e70 <VectorD4+0x30>
 8000e8a:	f014 0f08 	tst.w	r4, #8
 8000e8e:	bf0c      	ite	eq
 8000e90:	2100      	moveq	r1, #0
 8000e92:	2180      	movne	r1, #128	; 0x80
 8000e94:	07e2      	lsls	r2, r4, #31
 8000e96:	bf48      	it	mi
 8000e98:	f041 0120 	orrmi.w	r1, r1, #32
 8000e9c:	07a3      	lsls	r3, r4, #30
 8000e9e:	bf48      	it	mi
 8000ea0:	f041 0140 	orrmi.w	r1, r1, #64	; 0x40
 8000ea4:	0765      	lsls	r5, r4, #29
 8000ea6:	bf48      	it	mi
 8000ea8:	f441 7180 	orrmi.w	r1, r1, #256	; 0x100
 8000eac:	4640      	mov	r0, r8
 8000eae:	f7ff ffaf 	bl	8000e10 <chEvtBroadcastFlagsI>
 8000eb2:	f8ba 1004 	ldrh.w	r1, [sl, #4]
 8000eb6:	06a0      	lsls	r0, r4, #26
 8000eb8:	b28d      	uxth	r5, r1
 8000eba:	d5de      	bpl.n	8000e7a <VectorD4+0x3a>
 8000ebc:	697b      	ldr	r3, [r7, #20]
 8000ebe:	b37b      	cbz	r3, 8000f20 <VectorD4+0xe0>
 8000ec0:	b2e9      	uxtb	r1, r5
 8000ec2:	4648      	mov	r0, r9
 8000ec4:	f7ff ff3c 	bl	8000d40 <chIQPutI>
 8000ec8:	2800      	cmp	r0, #0
 8000eca:	dad6      	bge.n	8000e7a <VectorD4+0x3a>
 8000ecc:	2180      	movs	r1, #128	; 0x80
 8000ece:	4640      	mov	r0, r8
 8000ed0:	f7ff ff9e 	bl	8000e10 <chEvtBroadcastFlagsI>
 8000ed4:	f8ba 4000 	ldrh.w	r4, [sl]
 8000ed8:	b2a4      	uxth	r4, r4
 8000eda:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000ede:	d1d2      	bne.n	8000e86 <VectorD4+0x46>
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	f383 8811 	msr	BASEPRI, r3
 8000ee6:	0631      	lsls	r1, r6, #24
 8000ee8:	d501      	bpl.n	8000eee <VectorD4+0xae>
 8000eea:	0622      	lsls	r2, r4, #24
 8000eec:	d42d      	bmi.n	8000f4a <VectorD4+0x10a>
 8000eee:	0663      	lsls	r3, r4, #25
 8000ef0:	d512      	bpl.n	8000f18 <VectorD4+0xd8>
 8000ef2:	2320      	movs	r3, #32
 8000ef4:	f383 8811 	msr	BASEPRI, r3
 8000ef8:	e9d7 2311 	ldrd	r2, r3, [r7, #68]	; 0x44
 8000efc:	429a      	cmp	r2, r3
 8000efe:	d033      	beq.n	8000f68 <VectorD4+0x128>
 8000f00:	f026 0640 	bic.w	r6, r6, #64	; 0x40
 8000f04:	b2b6      	uxth	r6, r6
 8000f06:	f64f 72bf 	movw	r2, #65471	; 0xffbf
 8000f0a:	f8aa 600c 	strh.w	r6, [sl, #12]
 8000f0e:	2300      	movs	r3, #0
 8000f10:	f8aa 2000 	strh.w	r2, [sl]
 8000f14:	f383 8811 	msr	BASEPRI, r3
 8000f18:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f1c:	f7ff bcd0 	b.w	80008c0 <_port_irq_epilogue>
 8000f20:	2104      	movs	r1, #4
 8000f22:	4640      	mov	r0, r8
 8000f24:	f7ff ff74 	bl	8000e10 <chEvtBroadcastFlagsI>
 8000f28:	e7ca      	b.n	8000ec0 <VectorD4+0x80>
 8000f2a:	2320      	movs	r3, #32
 8000f2c:	f383 8811 	msr	BASEPRI, r3
 8000f30:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000f34:	1d38      	adds	r0, r7, #4
 8000f36:	f7ff ff6b 	bl	8000e10 <chEvtBroadcastFlagsI>
 8000f3a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8000f3e:	f8aa 3000 	strh.w	r3, [sl]
 8000f42:	2300      	movs	r3, #0
 8000f44:	f383 8811 	msr	BASEPRI, r3
 8000f48:	e787      	b.n	8000e5a <VectorD4+0x1a>
 8000f4a:	2320      	movs	r3, #32
 8000f4c:	f383 8811 	msr	BASEPRI, r3
 8000f50:	4810      	ldr	r0, [pc, #64]	; (8000f94 <VectorD4+0x154>)
 8000f52:	f7ff ff1d 	bl	8000d90 <chOQGetI>
 8000f56:	2800      	cmp	r0, #0
 8000f58:	db0e      	blt.n	8000f78 <VectorD4+0x138>
 8000f5a:	b280      	uxth	r0, r0
 8000f5c:	f8aa 0004 	strh.w	r0, [sl, #4]
 8000f60:	2300      	movs	r3, #0
 8000f62:	f383 8811 	msr	BASEPRI, r3
 8000f66:	e7c2      	b.n	8000eee <VectorD4+0xae>
 8000f68:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000f6a:	2b00      	cmp	r3, #0
 8000f6c:	d0c8      	beq.n	8000f00 <VectorD4+0xc0>
 8000f6e:	2110      	movs	r1, #16
 8000f70:	4809      	ldr	r0, [pc, #36]	; (8000f98 <VectorD4+0x158>)
 8000f72:	f7ff ff4d 	bl	8000e10 <chEvtBroadcastFlagsI>
 8000f76:	e7c3      	b.n	8000f00 <VectorD4+0xc0>
 8000f78:	2108      	movs	r1, #8
 8000f7a:	4807      	ldr	r0, [pc, #28]	; (8000f98 <VectorD4+0x158>)
 8000f7c:	f7ff ff48 	bl	8000e10 <chEvtBroadcastFlagsI>
 8000f80:	f026 03c0 	bic.w	r3, r6, #192	; 0xc0
 8000f84:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f88:	f8aa 300c 	strh.w	r3, [sl, #12]
 8000f8c:	e7e8      	b.n	8000f60 <VectorD4+0x120>
 8000f8e:	bf00      	nop
 8000f90:	200008b8 	.word	0x200008b8
 8000f94:	200008e8 	.word	0x200008e8
 8000f98:	200008bc 	.word	0x200008bc
 8000f9c:	00000000 	.word	0x00000000

08000fa0 <chMtxUnlockS>:
 8000fa0:	4b12      	ldr	r3, [pc, #72]	; (8000fec <chMtxUnlockS+0x4c>)
 8000fa2:	b430      	push	{r4, r5}
 8000fa4:	6804      	ldr	r4, [r0, #0]
 8000fa6:	699d      	ldr	r5, [r3, #24]
 8000fa8:	68c3      	ldr	r3, [r0, #12]
 8000faa:	63ab      	str	r3, [r5, #56]	; 0x38
 8000fac:	4284      	cmp	r4, r0
 8000fae:	d018      	beq.n	8000fe2 <chMtxUnlockS+0x42>
 8000fb0:	4601      	mov	r1, r0
 8000fb2:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 8000fb4:	b14b      	cbz	r3, 8000fca <chMtxUnlockS+0x2a>
 8000fb6:	681a      	ldr	r2, [r3, #0]
 8000fb8:	4293      	cmp	r3, r2
 8000fba:	d003      	beq.n	8000fc4 <chMtxUnlockS+0x24>
 8000fbc:	6892      	ldr	r2, [r2, #8]
 8000fbe:	4290      	cmp	r0, r2
 8000fc0:	bf38      	it	cc
 8000fc2:	4610      	movcc	r0, r2
 8000fc4:	68db      	ldr	r3, [r3, #12]
 8000fc6:	2b00      	cmp	r3, #0
 8000fc8:	d1f5      	bne.n	8000fb6 <chMtxUnlockS+0x16>
 8000fca:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8000fcc:	6823      	ldr	r3, [r4, #0]
 8000fce:	60a8      	str	r0, [r5, #8]
 8000fd0:	600b      	str	r3, [r1, #0]
 8000fd2:	4620      	mov	r0, r4
 8000fd4:	6059      	str	r1, [r3, #4]
 8000fd6:	e9c1 4202 	strd	r4, r2, [r1, #8]
 8000fda:	63a1      	str	r1, [r4, #56]	; 0x38
 8000fdc:	bc30      	pop	{r4, r5}
 8000fde:	f7ff be7f 	b.w	8000ce0 <chSchReadyI>
 8000fe2:	2300      	movs	r3, #0
 8000fe4:	60a3      	str	r3, [r4, #8]
 8000fe6:	bc30      	pop	{r4, r5}
 8000fe8:	4770      	bx	lr
 8000fea:	bf00      	nop
 8000fec:	20000930 	.word	0x20000930

08000ff0 <chSemSignalI>:
 8000ff0:	6883      	ldr	r3, [r0, #8]
 8000ff2:	3301      	adds	r3, #1
 8000ff4:	2b00      	cmp	r3, #0
 8000ff6:	6083      	str	r3, [r0, #8]
 8000ff8:	dd00      	ble.n	8000ffc <chSemSignalI+0xc>
 8000ffa:	4770      	bx	lr
 8000ffc:	6803      	ldr	r3, [r0, #0]
 8000ffe:	681a      	ldr	r2, [r3, #0]
 8001000:	6002      	str	r2, [r0, #0]
 8001002:	2100      	movs	r1, #0
 8001004:	6050      	str	r0, [r2, #4]
 8001006:	4618      	mov	r0, r3
 8001008:	6219      	str	r1, [r3, #32]
 800100a:	f7ff be69 	b.w	8000ce0 <chSchReadyI>
 800100e:	bf00      	nop

08001010 <chMBPostI.constprop.19>:
 8001010:	b538      	push	{r3, r4, r5, lr}
 8001012:	4b0c      	ldr	r3, [pc, #48]	; (8001044 <chMBPostI.constprop.19+0x34>)
 8001014:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001016:	2a00      	cmp	r2, #0
 8001018:	dd10      	ble.n	800103c <chMBPostI.constprop.19+0x2c>
 800101a:	e9d3 5401 	ldrd	r5, r4, [r3, #4]
 800101e:	1d21      	adds	r1, r4, #4
 8001020:	3a01      	subs	r2, #1
 8001022:	42a9      	cmp	r1, r5
 8001024:	625a      	str	r2, [r3, #36]	; 0x24
 8001026:	6099      	str	r1, [r3, #8]
 8001028:	bf28      	it	cs
 800102a:	681a      	ldrcs	r2, [r3, #0]
 800102c:	6020      	str	r0, [r4, #0]
 800102e:	4806      	ldr	r0, [pc, #24]	; (8001048 <chMBPostI.constprop.19+0x38>)
 8001030:	bf28      	it	cs
 8001032:	609a      	strcs	r2, [r3, #8]
 8001034:	f7ff ffdc 	bl	8000ff0 <chSemSignalI>
 8001038:	2000      	movs	r0, #0
 800103a:	bd38      	pop	{r3, r4, r5, pc}
 800103c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001040:	bd38      	pop	{r3, r4, r5, pc}
 8001042:	bf00      	nop
 8001044:	20000854 	.word	0x20000854
 8001048:	20000864 	.word	0x20000864
 800104c:	00000000 	.word	0x00000000

08001050 <chMBPostAheadI.constprop.17>:
 8001050:	4a0c      	ldr	r2, [pc, #48]	; (8001084 <chMBPostAheadI.constprop.17+0x34>)
 8001052:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8001054:	2900      	cmp	r1, #0
 8001056:	dd11      	ble.n	800107c <chMBPostAheadI.constprop.17+0x2c>
 8001058:	68d3      	ldr	r3, [r2, #12]
 800105a:	b510      	push	{r4, lr}
 800105c:	6814      	ldr	r4, [r2, #0]
 800105e:	3b04      	subs	r3, #4
 8001060:	3901      	subs	r1, #1
 8001062:	42a3      	cmp	r3, r4
 8001064:	6251      	str	r1, [r2, #36]	; 0x24
 8001066:	60d3      	str	r3, [r2, #12]
 8001068:	d202      	bcs.n	8001070 <chMBPostAheadI.constprop.17+0x20>
 800106a:	6853      	ldr	r3, [r2, #4]
 800106c:	3b04      	subs	r3, #4
 800106e:	60d3      	str	r3, [r2, #12]
 8001070:	6018      	str	r0, [r3, #0]
 8001072:	4805      	ldr	r0, [pc, #20]	; (8001088 <chMBPostAheadI.constprop.17+0x38>)
 8001074:	f7ff ffbc 	bl	8000ff0 <chSemSignalI>
 8001078:	2000      	movs	r0, #0
 800107a:	bd10      	pop	{r4, pc}
 800107c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001080:	4770      	bx	lr
 8001082:	bf00      	nop
 8001084:	20000854 	.word	0x20000854
 8001088:	20000864 	.word	0x20000864
 800108c:	00000000 	.word	0x00000000

08001090 <chMBFetchI.constprop.15>:
 8001090:	4b0c      	ldr	r3, [pc, #48]	; (80010c4 <chMBFetchI.constprop.15+0x34>)
 8001092:	6999      	ldr	r1, [r3, #24]
 8001094:	2900      	cmp	r1, #0
 8001096:	dd12      	ble.n	80010be <chMBFetchI.constprop.15+0x2e>
 8001098:	b510      	push	{r4, lr}
 800109a:	68da      	ldr	r2, [r3, #12]
 800109c:	3901      	subs	r1, #1
 800109e:	6199      	str	r1, [r3, #24]
 80010a0:	6859      	ldr	r1, [r3, #4]
 80010a2:	6814      	ldr	r4, [r2, #0]
 80010a4:	3204      	adds	r2, #4
 80010a6:	428a      	cmp	r2, r1
 80010a8:	60da      	str	r2, [r3, #12]
 80010aa:	6004      	str	r4, [r0, #0]
 80010ac:	bf28      	it	cs
 80010ae:	681a      	ldrcs	r2, [r3, #0]
 80010b0:	4805      	ldr	r0, [pc, #20]	; (80010c8 <chMBFetchI.constprop.15+0x38>)
 80010b2:	bf28      	it	cs
 80010b4:	60da      	strcs	r2, [r3, #12]
 80010b6:	f7ff ff9b 	bl	8000ff0 <chSemSignalI>
 80010ba:	2000      	movs	r0, #0
 80010bc:	bd10      	pop	{r4, pc}
 80010be:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80010c2:	4770      	bx	lr
 80010c4:	20000854 	.word	0x20000854
 80010c8:	20000870 	.word	0x20000870
 80010cc:	00000000 	.word	0x00000000

080010d0 <chSemResetI>:
 80010d0:	b570      	push	{r4, r5, r6, lr}
 80010d2:	6885      	ldr	r5, [r0, #8]
 80010d4:	6081      	str	r1, [r0, #8]
 80010d6:	3501      	adds	r5, #1
 80010d8:	2d00      	cmp	r5, #0
 80010da:	dc0c      	bgt.n	80010f6 <chSemResetI+0x26>
 80010dc:	4604      	mov	r4, r0
 80010de:	f06f 0601 	mvn.w	r6, #1
 80010e2:	6860      	ldr	r0, [r4, #4]
 80010e4:	6843      	ldr	r3, [r0, #4]
 80010e6:	6063      	str	r3, [r4, #4]
 80010e8:	601c      	str	r4, [r3, #0]
 80010ea:	f7ff fdf9 	bl	8000ce0 <chSchReadyI>
 80010ee:	3501      	adds	r5, #1
 80010f0:	2d01      	cmp	r5, #1
 80010f2:	6206      	str	r6, [r0, #32]
 80010f4:	d1f5      	bne.n	80010e2 <chSemResetI+0x12>
 80010f6:	bd70      	pop	{r4, r5, r6, pc}
	...

08001100 <chVTDoResetI>:
 8001100:	4b1c      	ldr	r3, [pc, #112]	; (8001174 <chVTDoResetI+0x74>)
 8001102:	69da      	ldr	r2, [r3, #28]
 8001104:	4282      	cmp	r2, r0
 8001106:	b430      	push	{r4, r5}
 8001108:	d00f      	beq.n	800112a <chVTDoResetI+0x2a>
 800110a:	e9d0 2100 	ldrd	r2, r1, [r0]
 800110e:	600a      	str	r2, [r1, #0]
 8001110:	6802      	ldr	r2, [r0, #0]
 8001112:	331c      	adds	r3, #28
 8001114:	2400      	movs	r4, #0
 8001116:	429a      	cmp	r2, r3
 8001118:	6051      	str	r1, [r2, #4]
 800111a:	60c4      	str	r4, [r0, #12]
 800111c:	d003      	beq.n	8001126 <chVTDoResetI+0x26>
 800111e:	8901      	ldrh	r1, [r0, #8]
 8001120:	8913      	ldrh	r3, [r2, #8]
 8001122:	440b      	add	r3, r1
 8001124:	8113      	strh	r3, [r2, #8]
 8001126:	bc30      	pop	{r4, r5}
 8001128:	4770      	bx	lr
 800112a:	4618      	mov	r0, r3
 800112c:	6811      	ldr	r1, [r2, #0]
 800112e:	f840 1f1c 	str.w	r1, [r0, #28]!
 8001132:	2400      	movs	r4, #0
 8001134:	4281      	cmp	r1, r0
 8001136:	6048      	str	r0, [r1, #4]
 8001138:	60d4      	str	r4, [r2, #12]
 800113a:	d017      	beq.n	800116c <chVTDoResetI+0x6c>
 800113c:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8001140:	8915      	ldrh	r5, [r2, #8]
 8001142:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8001144:	8cd8      	ldrh	r0, [r3, #38]	; 0x26
 8001146:	890b      	ldrh	r3, [r1, #8]
 8001148:	b292      	uxth	r2, r2
 800114a:	442b      	add	r3, r5
 800114c:	1a10      	subs	r0, r2, r0
 800114e:	b29b      	uxth	r3, r3
 8001150:	b280      	uxth	r0, r0
 8001152:	4283      	cmp	r3, r0
 8001154:	810b      	strh	r3, [r1, #8]
 8001156:	d9e6      	bls.n	8001126 <chVTDoResetI+0x26>
 8001158:	1a1b      	subs	r3, r3, r0
 800115a:	b29b      	uxth	r3, r3
 800115c:	2b02      	cmp	r3, #2
 800115e:	bf2c      	ite	cs
 8001160:	18d3      	addcs	r3, r2, r3
 8001162:	1c93      	addcc	r3, r2, #2
 8001164:	b29b      	uxth	r3, r3
 8001166:	6363      	str	r3, [r4, #52]	; 0x34
 8001168:	bc30      	pop	{r4, r5}
 800116a:	4770      	bx	lr
 800116c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001170:	60dc      	str	r4, [r3, #12]
 8001172:	e7d8      	b.n	8001126 <chVTDoResetI+0x26>
 8001174:	20000930 	.word	0x20000930
	...

08001180 <chVTDoSetI>:
 8001180:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001182:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 8001186:	4e1d      	ldr	r6, [pc, #116]	; (80011fc <chVTDoSetI+0x7c>)
 8001188:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 800118a:	46b6      	mov	lr, r6
 800118c:	2902      	cmp	r1, #2
 800118e:	fa1f fc84 	uxth.w	ip, r4
 8001192:	f85e 4f1c 	ldr.w	r4, [lr, #28]!
 8001196:	6103      	str	r3, [r0, #16]
 8001198:	bf38      	it	cc
 800119a:	2102      	movcc	r1, #2
 800119c:	eb01 050c 	add.w	r5, r1, ip
 80011a0:	4574      	cmp	r4, lr
 80011a2:	60c2      	str	r2, [r0, #12]
 80011a4:	b2ad      	uxth	r5, r5
 80011a6:	d01b      	beq.n	80011e0 <chVTDoSetI+0x60>
 80011a8:	8cf3      	ldrh	r3, [r6, #38]	; 0x26
 80011aa:	8922      	ldrh	r2, [r4, #8]
 80011ac:	1aeb      	subs	r3, r5, r3
 80011ae:	b29b      	uxth	r3, r3
 80011b0:	429a      	cmp	r2, r3
 80011b2:	d904      	bls.n	80011be <chVTDoSetI+0x3e>
 80011b4:	e012      	b.n	80011dc <chVTDoSetI+0x5c>
 80011b6:	6824      	ldr	r4, [r4, #0]
 80011b8:	1a9b      	subs	r3, r3, r2
 80011ba:	8922      	ldrh	r2, [r4, #8]
 80011bc:	b29b      	uxth	r3, r3
 80011be:	429a      	cmp	r2, r3
 80011c0:	d3f9      	bcc.n	80011b6 <chVTDoSetI+0x36>
 80011c2:	6862      	ldr	r2, [r4, #4]
 80011c4:	e9c0 4200 	strd	r4, r2, [r0]
 80011c8:	6010      	str	r0, [r2, #0]
 80011ca:	6060      	str	r0, [r4, #4]
 80011cc:	8103      	strh	r3, [r0, #8]
 80011ce:	8922      	ldrh	r2, [r4, #8]
 80011d0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80011d4:	1ad3      	subs	r3, r2, r3
 80011d6:	8123      	strh	r3, [r4, #8]
 80011d8:	84b1      	strh	r1, [r6, #36]	; 0x24
 80011da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011dc:	637d      	str	r5, [r7, #52]	; 0x34
 80011de:	e7ee      	b.n	80011be <chVTDoSetI+0x3e>
 80011e0:	2200      	movs	r2, #0
 80011e2:	2302      	movs	r3, #2
 80011e4:	f8a6 c026 	strh.w	ip, [r6, #38]	; 0x26
 80011e8:	e9c6 0007 	strd	r0, r0, [r6, #28]
 80011ec:	e9c0 4400 	strd	r4, r4, [r0]
 80011f0:	8101      	strh	r1, [r0, #8]
 80011f2:	637d      	str	r5, [r7, #52]	; 0x34
 80011f4:	613a      	str	r2, [r7, #16]
 80011f6:	60fb      	str	r3, [r7, #12]
 80011f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011fa:	bf00      	nop
 80011fc:	20000930 	.word	0x20000930

08001200 <test_start_timer.constprop.1>:
 8001200:	b508      	push	{r3, lr}
 8001202:	4b0b      	ldr	r3, [pc, #44]	; (8001230 <test_start_timer.constprop.1+0x30>)
 8001204:	2200      	movs	r2, #0
 8001206:	701a      	strb	r2, [r3, #0]
 8001208:	2320      	movs	r3, #32
 800120a:	f383 8811 	msr	BASEPRI, r3
 800120e:	4809      	ldr	r0, [pc, #36]	; (8001234 <test_start_timer.constprop.1+0x34>)
 8001210:	68c3      	ldr	r3, [r0, #12]
 8001212:	b10b      	cbz	r3, 8001218 <test_start_timer.constprop.1+0x18>
 8001214:	f7ff ff74 	bl	8001100 <chVTDoResetI>
 8001218:	2300      	movs	r3, #0
 800121a:	4a07      	ldr	r2, [pc, #28]	; (8001238 <test_start_timer.constprop.1+0x38>)
 800121c:	4805      	ldr	r0, [pc, #20]	; (8001234 <test_start_timer.constprop.1+0x34>)
 800121e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001222:	f7ff ffad 	bl	8001180 <chVTDoSetI>
 8001226:	2300      	movs	r3, #0
 8001228:	f383 8811 	msr	BASEPRI, r3
 800122c:	bd08      	pop	{r3, pc}
 800122e:	bf00      	nop
 8001230:	200011c8 	.word	0x200011c8
 8001234:	200011f4 	.word	0x200011f4
 8001238:	08000301 	.word	0x08000301
 800123c:	00000000 	.word	0x00000000

08001240 <chSysGetStatusAndLockX.part.2>:
 8001240:	f3ef 8305 	mrs	r3, IPSR
 8001244:	2320      	movs	r3, #32
 8001246:	f383 8811 	msr	BASEPRI, r3
 800124a:	4770      	bx	lr
 800124c:	0000      	movs	r0, r0
	...

08001250 <chSysIntegrityCheckI>:
 8001250:	07c2      	lsls	r2, r0, #31
 8001252:	b410      	push	{r4}
 8001254:	d512      	bpl.n	800127c <chSysIntegrityCheckI+0x2c>
 8001256:	4b29      	ldr	r3, [pc, #164]	; (80012fc <chSysIntegrityCheckI+0xac>)
 8001258:	e9d3 1400 	ldrd	r1, r4, [r3]
 800125c:	4299      	cmp	r1, r3
 800125e:	d041      	beq.n	80012e4 <chSysIntegrityCheckI+0x94>
 8001260:	2200      	movs	r2, #0
 8001262:	6809      	ldr	r1, [r1, #0]
 8001264:	4299      	cmp	r1, r3
 8001266:	f102 0201 	add.w	r2, r2, #1
 800126a:	d1fa      	bne.n	8001262 <chSysIntegrityCheckI+0x12>
 800126c:	428c      	cmp	r4, r1
 800126e:	d036      	beq.n	80012de <chSysIntegrityCheckI+0x8e>
 8001270:	6864      	ldr	r4, [r4, #4]
 8001272:	429c      	cmp	r4, r3
 8001274:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8001278:	d1fa      	bne.n	8001270 <chSysIntegrityCheckI+0x20>
 800127a:	bb82      	cbnz	r2, 80012de <chSysIntegrityCheckI+0x8e>
 800127c:	0783      	lsls	r3, r0, #30
 800127e:	d513      	bpl.n	80012a8 <chSysIntegrityCheckI+0x58>
 8001280:	4c1e      	ldr	r4, [pc, #120]	; (80012fc <chSysIntegrityCheckI+0xac>)
 8001282:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8001286:	341c      	adds	r4, #28
 8001288:	42a2      	cmp	r2, r4
 800128a:	d02f      	beq.n	80012ec <chSysIntegrityCheckI+0x9c>
 800128c:	2300      	movs	r3, #0
 800128e:	6812      	ldr	r2, [r2, #0]
 8001290:	42a2      	cmp	r2, r4
 8001292:	f103 0301 	add.w	r3, r3, #1
 8001296:	d1fa      	bne.n	800128e <chSysIntegrityCheckI+0x3e>
 8001298:	4291      	cmp	r1, r2
 800129a:	d020      	beq.n	80012de <chSysIntegrityCheckI+0x8e>
 800129c:	6849      	ldr	r1, [r1, #4]
 800129e:	42a1      	cmp	r1, r4
 80012a0:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 80012a4:	d1fa      	bne.n	800129c <chSysIntegrityCheckI+0x4c>
 80012a6:	b9d3      	cbnz	r3, 80012de <chSysIntegrityCheckI+0x8e>
 80012a8:	f010 0004 	ands.w	r0, r0, #4
 80012ac:	d015      	beq.n	80012da <chSysIntegrityCheckI+0x8a>
 80012ae:	4b13      	ldr	r3, [pc, #76]	; (80012fc <chSysIntegrityCheckI+0xac>)
 80012b0:	e9d3 2104 	ldrd	r2, r1, [r3, #16]
 80012b4:	429a      	cmp	r2, r3
 80012b6:	f04f 0000 	mov.w	r0, #0
 80012ba:	d01b      	beq.n	80012f4 <chSysIntegrityCheckI+0xa4>
 80012bc:	6912      	ldr	r2, [r2, #16]
 80012be:	429a      	cmp	r2, r3
 80012c0:	f100 0001 	add.w	r0, r0, #1
 80012c4:	d1fa      	bne.n	80012bc <chSysIntegrityCheckI+0x6c>
 80012c6:	4291      	cmp	r1, r2
 80012c8:	d009      	beq.n	80012de <chSysIntegrityCheckI+0x8e>
 80012ca:	6949      	ldr	r1, [r1, #20]
 80012cc:	4299      	cmp	r1, r3
 80012ce:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 80012d2:	d1fa      	bne.n	80012ca <chSysIntegrityCheckI+0x7a>
 80012d4:	3000      	adds	r0, #0
 80012d6:	bf18      	it	ne
 80012d8:	2001      	movne	r0, #1
 80012da:	bc10      	pop	{r4}
 80012dc:	4770      	bx	lr
 80012de:	2001      	movs	r0, #1
 80012e0:	bc10      	pop	{r4}
 80012e2:	4770      	bx	lr
 80012e4:	429c      	cmp	r4, r3
 80012e6:	d0c9      	beq.n	800127c <chSysIntegrityCheckI+0x2c>
 80012e8:	2200      	movs	r2, #0
 80012ea:	e7c1      	b.n	8001270 <chSysIntegrityCheckI+0x20>
 80012ec:	42a1      	cmp	r1, r4
 80012ee:	d0db      	beq.n	80012a8 <chSysIntegrityCheckI+0x58>
 80012f0:	2300      	movs	r3, #0
 80012f2:	e7d3      	b.n	800129c <chSysIntegrityCheckI+0x4c>
 80012f4:	4291      	cmp	r1, r2
 80012f6:	d1e8      	bne.n	80012ca <chSysIntegrityCheckI+0x7a>
 80012f8:	e7ef      	b.n	80012da <chSysIntegrityCheckI+0x8a>
 80012fa:	bf00      	nop
 80012fc:	20000930 	.word	0x20000930

08001300 <sys3_execute>:
 8001300:	b538      	push	{r3, r4, r5, lr}
 8001302:	2420      	movs	r4, #32
 8001304:	f384 8811 	msr	BASEPRI, r4
 8001308:	2001      	movs	r0, #1
 800130a:	f7ff ffa1 	bl	8001250 <chSysIntegrityCheckI>
 800130e:	2300      	movs	r3, #0
 8001310:	f383 8811 	msr	BASEPRI, r3
 8001314:	f080 0101 	eor.w	r1, r0, #1
 8001318:	b2c9      	uxtb	r1, r1
 800131a:	2001      	movs	r0, #1
 800131c:	f7ff fa48 	bl	80007b0 <_test_assert>
 8001320:	b100      	cbz	r0, 8001324 <sys3_execute+0x24>
 8001322:	bd38      	pop	{r3, r4, r5, pc}
 8001324:	4605      	mov	r5, r0
 8001326:	f384 8811 	msr	BASEPRI, r4
 800132a:	2002      	movs	r0, #2
 800132c:	f7ff ff90 	bl	8001250 <chSysIntegrityCheckI>
 8001330:	f385 8811 	msr	BASEPRI, r5
 8001334:	f080 0101 	eor.w	r1, r0, #1
 8001338:	b2c9      	uxtb	r1, r1
 800133a:	2002      	movs	r0, #2
 800133c:	f7ff fa38 	bl	80007b0 <_test_assert>
 8001340:	4605      	mov	r5, r0
 8001342:	2800      	cmp	r0, #0
 8001344:	d1ed      	bne.n	8001322 <sys3_execute+0x22>
 8001346:	f384 8811 	msr	BASEPRI, r4
 800134a:	2004      	movs	r0, #4
 800134c:	f7ff ff80 	bl	8001250 <chSysIntegrityCheckI>
 8001350:	f385 8811 	msr	BASEPRI, r5
 8001354:	f080 0101 	eor.w	r1, r0, #1
 8001358:	b2c9      	uxtb	r1, r1
 800135a:	2003      	movs	r0, #3
 800135c:	f7ff fa28 	bl	80007b0 <_test_assert>
 8001360:	4605      	mov	r5, r0
 8001362:	2800      	cmp	r0, #0
 8001364:	d1dd      	bne.n	8001322 <sys3_execute+0x22>
 8001366:	f384 8811 	msr	BASEPRI, r4
 800136a:	2008      	movs	r0, #8
 800136c:	f7ff ff70 	bl	8001250 <chSysIntegrityCheckI>
 8001370:	f385 8811 	msr	BASEPRI, r5
 8001374:	f080 0101 	eor.w	r1, r0, #1
 8001378:	b2c9      	uxtb	r1, r1
 800137a:	2004      	movs	r0, #4
 800137c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001380:	f7ff ba16 	b.w	80007b0 <_test_assert>
	...

08001390 <BusFault_Handler>:
 8001390:	b672      	cpsid	i
 8001392:	4b02      	ldr	r3, [pc, #8]	; (800139c <BusFault_Handler+0xc>)
 8001394:	4a02      	ldr	r2, [pc, #8]	; (80013a0 <BusFault_Handler+0x10>)
 8001396:	629a      	str	r2, [r3, #40]	; 0x28
 8001398:	e7fe      	b.n	8001398 <BusFault_Handler+0x8>
 800139a:	bf00      	nop
 800139c:	20000930 	.word	0x20000930
 80013a0:	08005ce0 	.word	0x08005ce0
	...

080013b0 <bmk13_execute>:
 80013b0:	b510      	push	{r4, lr}
 80013b2:	482f      	ldr	r0, [pc, #188]	; (8001470 <bmk13_execute+0xc0>)
 80013b4:	4c2f      	ldr	r4, [pc, #188]	; (8001474 <bmk13_execute+0xc4>)
 80013b6:	f7ff fa6b 	bl	8000890 <test_print>
 80013ba:	f44f 70a8 	mov.w	r0, #336	; 0x150
 80013be:	f7ff f93f 	bl	8000640 <test_printn.part.1>
 80013c2:	4620      	mov	r0, r4
 80013c4:	f7ff fa44 	bl	8000850 <test_println>
 80013c8:	482b      	ldr	r0, [pc, #172]	; (8001478 <bmk13_execute+0xc8>)
 80013ca:	f7ff fa61 	bl	8000890 <test_print>
 80013ce:	2044      	movs	r0, #68	; 0x44
 80013d0:	f7ff f936 	bl	8000640 <test_printn.part.1>
 80013d4:	4620      	mov	r0, r4
 80013d6:	f7ff fa3b 	bl	8000850 <test_println>
 80013da:	4828      	ldr	r0, [pc, #160]	; (800147c <bmk13_execute+0xcc>)
 80013dc:	f7ff fa58 	bl	8000890 <test_print>
 80013e0:	2014      	movs	r0, #20
 80013e2:	f7ff f92d 	bl	8000640 <test_printn.part.1>
 80013e6:	4620      	mov	r0, r4
 80013e8:	f7ff fa32 	bl	8000850 <test_println>
 80013ec:	4824      	ldr	r0, [pc, #144]	; (8001480 <bmk13_execute+0xd0>)
 80013ee:	f7ff fa4f 	bl	8000890 <test_print>
 80013f2:	200c      	movs	r0, #12
 80013f4:	f7ff f924 	bl	8000640 <test_printn.part.1>
 80013f8:	4620      	mov	r0, r4
 80013fa:	f7ff fa29 	bl	8000850 <test_println>
 80013fe:	4821      	ldr	r0, [pc, #132]	; (8001484 <bmk13_execute+0xd4>)
 8001400:	f7ff fa46 	bl	8000890 <test_print>
 8001404:	2004      	movs	r0, #4
 8001406:	f7ff f91b 	bl	8000640 <test_printn.part.1>
 800140a:	4620      	mov	r0, r4
 800140c:	f7ff fa20 	bl	8000850 <test_println>
 8001410:	481d      	ldr	r0, [pc, #116]	; (8001488 <bmk13_execute+0xd8>)
 8001412:	f7ff fa3d 	bl	8000890 <test_print>
 8001416:	2014      	movs	r0, #20
 8001418:	f7ff f912 	bl	8000640 <test_printn.part.1>
 800141c:	4620      	mov	r0, r4
 800141e:	f7ff fa17 	bl	8000850 <test_println>
 8001422:	481a      	ldr	r0, [pc, #104]	; (800148c <bmk13_execute+0xdc>)
 8001424:	f7ff fa34 	bl	8000890 <test_print>
 8001428:	2010      	movs	r0, #16
 800142a:	f7ff f909 	bl	8000640 <test_printn.part.1>
 800142e:	4620      	mov	r0, r4
 8001430:	f7ff fa0e 	bl	8000850 <test_println>
 8001434:	4816      	ldr	r0, [pc, #88]	; (8001490 <bmk13_execute+0xe0>)
 8001436:	f7ff fa2b 	bl	8000890 <test_print>
 800143a:	2008      	movs	r0, #8
 800143c:	f7ff f900 	bl	8000640 <test_printn.part.1>
 8001440:	4620      	mov	r0, r4
 8001442:	f7ff fa05 	bl	8000850 <test_println>
 8001446:	4813      	ldr	r0, [pc, #76]	; (8001494 <bmk13_execute+0xe4>)
 8001448:	f7ff fa22 	bl	8000890 <test_print>
 800144c:	2024      	movs	r0, #36	; 0x24
 800144e:	f7ff f8f7 	bl	8000640 <test_printn.part.1>
 8001452:	4620      	mov	r0, r4
 8001454:	f7ff f9fc 	bl	8000850 <test_println>
 8001458:	480f      	ldr	r0, [pc, #60]	; (8001498 <bmk13_execute+0xe8>)
 800145a:	f7ff fa19 	bl	8000890 <test_print>
 800145e:	2028      	movs	r0, #40	; 0x28
 8001460:	f7ff f8ee 	bl	8000640 <test_printn.part.1>
 8001464:	4620      	mov	r0, r4
 8001466:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800146a:	f7ff b9f1 	b.w	8000850 <test_println>
 800146e:	bf00      	nop
 8001470:	08005d40 	.word	0x08005d40
 8001474:	08005d50 	.word	0x08005d50
 8001478:	08005d58 	.word	0x08005d58
 800147c:	08005d68 	.word	0x08005d68
 8001480:	08005d78 	.word	0x08005d78
 8001484:	08005d88 	.word	0x08005d88
 8001488:	08005d98 	.word	0x08005d98
 800148c:	08005da8 	.word	0x08005da8
 8001490:	08005db8 	.word	0x08005db8
 8001494:	08005dc8 	.word	0x08005dc8
 8001498:	08005dd8 	.word	0x08005dd8
 800149c:	00000000 	.word	0x00000000

080014a0 <chThdYield>:
 80014a0:	b538      	push	{r3, r4, r5, lr}
 80014a2:	2320      	movs	r3, #32
 80014a4:	f383 8811 	msr	BASEPRI, r3
 80014a8:	4a11      	ldr	r2, [pc, #68]	; (80014f0 <chThdYield+0x50>)
 80014aa:	6810      	ldr	r0, [r2, #0]
 80014ac:	6994      	ldr	r4, [r2, #24]
 80014ae:	6883      	ldr	r3, [r0, #8]
 80014b0:	68a1      	ldr	r1, [r4, #8]
 80014b2:	428b      	cmp	r3, r1
 80014b4:	d203      	bcs.n	80014be <chThdYield+0x1e>
 80014b6:	2300      	movs	r3, #0
 80014b8:	f383 8811 	msr	BASEPRI, r3
 80014bc:	bd38      	pop	{r3, r4, r5, pc}
 80014be:	6803      	ldr	r3, [r0, #0]
 80014c0:	6013      	str	r3, [r2, #0]
 80014c2:	605a      	str	r2, [r3, #4]
 80014c4:	2501      	movs	r5, #1
 80014c6:	6190      	str	r0, [r2, #24]
 80014c8:	2200      	movs	r2, #0
 80014ca:	7705      	strb	r5, [r0, #28]
 80014cc:	7722      	strb	r2, [r4, #28]
 80014ce:	e000      	b.n	80014d2 <chThdYield+0x32>
 80014d0:	681b      	ldr	r3, [r3, #0]
 80014d2:	689a      	ldr	r2, [r3, #8]
 80014d4:	4291      	cmp	r1, r2
 80014d6:	d9fb      	bls.n	80014d0 <chThdYield+0x30>
 80014d8:	685a      	ldr	r2, [r3, #4]
 80014da:	4621      	mov	r1, r4
 80014dc:	e9c4 3200 	strd	r3, r2, [r4]
 80014e0:	6014      	str	r4, [r2, #0]
 80014e2:	605c      	str	r4, [r3, #4]
 80014e4:	f7fe fe8c 	bl	8000200 <_port_switch>
 80014e8:	2300      	movs	r3, #0
 80014ea:	f383 8811 	msr	BASEPRI, r3
 80014ee:	bd38      	pop	{r3, r4, r5, pc}
 80014f0:	20000930 	.word	0x20000930
	...

08001500 <thread8>:
 8001500:	b538      	push	{r3, r4, r5, lr}
 8001502:	4d09      	ldr	r5, [pc, #36]	; (8001528 <thread8+0x28>)
 8001504:	4604      	mov	r4, r0
 8001506:	f7ff ffcb 	bl	80014a0 <chThdYield>
 800150a:	f7ff ffc9 	bl	80014a0 <chThdYield>
 800150e:	f7ff ffc7 	bl	80014a0 <chThdYield>
 8001512:	f7ff ffc5 	bl	80014a0 <chThdYield>
 8001516:	6823      	ldr	r3, [r4, #0]
 8001518:	69aa      	ldr	r2, [r5, #24]
 800151a:	3304      	adds	r3, #4
 800151c:	6023      	str	r3, [r4, #0]
 800151e:	7f53      	ldrb	r3, [r2, #29]
 8001520:	075b      	lsls	r3, r3, #29
 8001522:	d5f0      	bpl.n	8001506 <thread8+0x6>
 8001524:	bd38      	pop	{r3, r4, r5, pc}
 8001526:	bf00      	nop
 8001528:	20000930 	.word	0x20000930
 800152c:	00000000 	.word	0x00000000

08001530 <chSchDoRescheduleAhead>:
 8001530:	4a0d      	ldr	r2, [pc, #52]	; (8001568 <chSchDoRescheduleAhead+0x38>)
 8001532:	6810      	ldr	r0, [r2, #0]
 8001534:	b430      	push	{r4, r5}
 8001536:	6803      	ldr	r3, [r0, #0]
 8001538:	6994      	ldr	r4, [r2, #24]
 800153a:	6013      	str	r3, [r2, #0]
 800153c:	68a1      	ldr	r1, [r4, #8]
 800153e:	605a      	str	r2, [r3, #4]
 8001540:	2501      	movs	r5, #1
 8001542:	6190      	str	r0, [r2, #24]
 8001544:	2200      	movs	r2, #0
 8001546:	7705      	strb	r5, [r0, #28]
 8001548:	7722      	strb	r2, [r4, #28]
 800154a:	e000      	b.n	800154e <chSchDoRescheduleAhead+0x1e>
 800154c:	681b      	ldr	r3, [r3, #0]
 800154e:	689a      	ldr	r2, [r3, #8]
 8001550:	4291      	cmp	r1, r2
 8001552:	d3fb      	bcc.n	800154c <chSchDoRescheduleAhead+0x1c>
 8001554:	685a      	ldr	r2, [r3, #4]
 8001556:	4621      	mov	r1, r4
 8001558:	e9c4 3200 	strd	r3, r2, [r4]
 800155c:	6014      	str	r4, [r2, #0]
 800155e:	605c      	str	r4, [r3, #4]
 8001560:	bc30      	pop	{r4, r5}
 8001562:	f7fe be4d 	b.w	8000200 <_port_switch>
 8001566:	bf00      	nop
 8001568:	20000930 	.word	0x20000930
 800156c:	00000000 	.word	0x00000000

08001570 <chSchRescheduleS>:
 8001570:	4b04      	ldr	r3, [pc, #16]	; (8001584 <chSchRescheduleS+0x14>)
 8001572:	681a      	ldr	r2, [r3, #0]
 8001574:	699b      	ldr	r3, [r3, #24]
 8001576:	6892      	ldr	r2, [r2, #8]
 8001578:	689b      	ldr	r3, [r3, #8]
 800157a:	429a      	cmp	r2, r3
 800157c:	d800      	bhi.n	8001580 <chSchRescheduleS+0x10>
 800157e:	4770      	bx	lr
 8001580:	f7ff bfd6 	b.w	8001530 <chSchDoRescheduleAhead>
 8001584:	20000930 	.word	0x20000930
	...

08001590 <thread4.lto_priv.73>:
 8001590:	b508      	push	{r3, lr}
 8001592:	2220      	movs	r2, #32
 8001594:	f382 8811 	msr	BASEPRI, r2
 8001598:	6883      	ldr	r3, [r0, #8]
 800159a:	2b00      	cmp	r3, #0
 800159c:	dd05      	ble.n	80015aa <thread4.lto_priv.73+0x1a>
 800159e:	f7ff ffe7 	bl	8001570 <chSchRescheduleS>
 80015a2:	2300      	movs	r3, #0
 80015a4:	f383 8811 	msr	BASEPRI, r3
 80015a8:	bd08      	pop	{r3, pc}
 80015aa:	f7ff fd21 	bl	8000ff0 <chSemSignalI>
 80015ae:	f7ff ffdf 	bl	8001570 <chSchRescheduleS>
 80015b2:	2300      	movs	r3, #0
 80015b4:	f383 8811 	msr	BASEPRI, r3
 80015b8:	bd08      	pop	{r3, pc}
 80015ba:	bf00      	nop
 80015bc:	0000      	movs	r0, r0
	...

080015c0 <chMtxUnlockAll>:
 80015c0:	4a13      	ldr	r2, [pc, #76]	; (8001610 <chMtxUnlockAll+0x50>)
 80015c2:	b570      	push	{r4, r5, r6, lr}
 80015c4:	2320      	movs	r3, #32
 80015c6:	6994      	ldr	r4, [r2, #24]
 80015c8:	f383 8811 	msr	BASEPRI, r3
 80015cc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80015ce:	b1b3      	cbz	r3, 80015fe <chMtxUnlockAll+0x3e>
 80015d0:	2600      	movs	r6, #0
 80015d2:	681a      	ldr	r2, [r3, #0]
 80015d4:	68d9      	ldr	r1, [r3, #12]
 80015d6:	63a1      	str	r1, [r4, #56]	; 0x38
 80015d8:	4293      	cmp	r3, r2
 80015da:	4610      	mov	r0, r2
 80015dc:	d013      	beq.n	8001606 <chMtxUnlockAll+0x46>
 80015de:	6b95      	ldr	r5, [r2, #56]	; 0x38
 80015e0:	6811      	ldr	r1, [r2, #0]
 80015e2:	6019      	str	r1, [r3, #0]
 80015e4:	604b      	str	r3, [r1, #4]
 80015e6:	e9c3 2502 	strd	r2, r5, [r3, #8]
 80015ea:	6393      	str	r3, [r2, #56]	; 0x38
 80015ec:	f7ff fb78 	bl	8000ce0 <chSchReadyI>
 80015f0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80015f2:	2b00      	cmp	r3, #0
 80015f4:	d1ed      	bne.n	80015d2 <chMtxUnlockAll+0x12>
 80015f6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80015f8:	60a3      	str	r3, [r4, #8]
 80015fa:	f7ff ffb9 	bl	8001570 <chSchRescheduleS>
 80015fe:	2300      	movs	r3, #0
 8001600:	f383 8811 	msr	BASEPRI, r3
 8001604:	bd70      	pop	{r4, r5, r6, pc}
 8001606:	609e      	str	r6, [r3, #8]
 8001608:	460b      	mov	r3, r1
 800160a:	2b00      	cmp	r3, #0
 800160c:	d1e1      	bne.n	80015d2 <chMtxUnlockAll+0x12>
 800160e:	e7f2      	b.n	80015f6 <chMtxUnlockAll+0x36>
 8001610:	20000930 	.word	0x20000930
	...

08001620 <chThdSetPriority>:
 8001620:	b510      	push	{r4, lr}
 8001622:	2320      	movs	r3, #32
 8001624:	f383 8811 	msr	BASEPRI, r3
 8001628:	4b08      	ldr	r3, [pc, #32]	; (800164c <chThdSetPriority+0x2c>)
 800162a:	699b      	ldr	r3, [r3, #24]
 800162c:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800162e:	6899      	ldr	r1, [r3, #8]
 8001630:	42a1      	cmp	r1, r4
 8001632:	d001      	beq.n	8001638 <chThdSetPriority+0x18>
 8001634:	4281      	cmp	r1, r0
 8001636:	d200      	bcs.n	800163a <chThdSetPriority+0x1a>
 8001638:	6098      	str	r0, [r3, #8]
 800163a:	63d8      	str	r0, [r3, #60]	; 0x3c
 800163c:	f7ff ff98 	bl	8001570 <chSchRescheduleS>
 8001640:	2300      	movs	r3, #0
 8001642:	f383 8811 	msr	BASEPRI, r3
 8001646:	4620      	mov	r0, r4
 8001648:	bd10      	pop	{r4, pc}
 800164a:	bf00      	nop
 800164c:	20000930 	.word	0x20000930

08001650 <thd3_execute>:
 8001650:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001652:	4e49      	ldr	r6, [pc, #292]	; (8001778 <thd3_execute+0x128>)
 8001654:	69b3      	ldr	r3, [r6, #24]
 8001656:	689c      	ldr	r4, [r3, #8]
 8001658:	1c65      	adds	r5, r4, #1
 800165a:	4628      	mov	r0, r5
 800165c:	f7ff ffe0 	bl	8001620 <chThdSetPriority>
 8001660:	1b01      	subs	r1, r0, r4
 8001662:	fab1 f181 	clz	r1, r1
 8001666:	4607      	mov	r7, r0
 8001668:	0949      	lsrs	r1, r1, #5
 800166a:	2001      	movs	r0, #1
 800166c:	f7ff f8a0 	bl	80007b0 <_test_assert>
 8001670:	b100      	cbz	r0, 8001674 <thd3_execute+0x24>
 8001672:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001674:	69b3      	ldr	r3, [r6, #24]
 8001676:	6899      	ldr	r1, [r3, #8]
 8001678:	1b49      	subs	r1, r1, r5
 800167a:	fab1 f181 	clz	r1, r1
 800167e:	2002      	movs	r0, #2
 8001680:	0949      	lsrs	r1, r1, #5
 8001682:	f7ff f895 	bl	80007b0 <_test_assert>
 8001686:	2800      	cmp	r0, #0
 8001688:	d1f3      	bne.n	8001672 <thd3_execute+0x22>
 800168a:	4638      	mov	r0, r7
 800168c:	f7ff ffc8 	bl	8001620 <chThdSetPriority>
 8001690:	1a29      	subs	r1, r5, r0
 8001692:	fab1 f181 	clz	r1, r1
 8001696:	0949      	lsrs	r1, r1, #5
 8001698:	2003      	movs	r0, #3
 800169a:	f7ff f889 	bl	80007b0 <_test_assert>
 800169e:	2800      	cmp	r0, #0
 80016a0:	d1e7      	bne.n	8001672 <thd3_execute+0x22>
 80016a2:	69b3      	ldr	r3, [r6, #24]
 80016a4:	6899      	ldr	r1, [r3, #8]
 80016a6:	1b09      	subs	r1, r1, r4
 80016a8:	fab1 f181 	clz	r1, r1
 80016ac:	2004      	movs	r0, #4
 80016ae:	0949      	lsrs	r1, r1, #5
 80016b0:	f7ff f87e 	bl	80007b0 <_test_assert>
 80016b4:	2800      	cmp	r0, #0
 80016b6:	d1dc      	bne.n	8001672 <thd3_execute+0x22>
 80016b8:	2320      	movs	r3, #32
 80016ba:	f383 8811 	msr	BASEPRI, r3
 80016be:	69b2      	ldr	r2, [r6, #24]
 80016c0:	6893      	ldr	r3, [r2, #8]
 80016c2:	3302      	adds	r3, #2
 80016c4:	6093      	str	r3, [r2, #8]
 80016c6:	f380 8811 	msr	BASEPRI, r0
 80016ca:	69b3      	ldr	r3, [r6, #24]
 80016cc:	6899      	ldr	r1, [r3, #8]
 80016ce:	1ca7      	adds	r7, r4, #2
 80016d0:	1bc9      	subs	r1, r1, r7
 80016d2:	fab1 f181 	clz	r1, r1
 80016d6:	0949      	lsrs	r1, r1, #5
 80016d8:	2005      	movs	r0, #5
 80016da:	f7ff f869 	bl	80007b0 <_test_assert>
 80016de:	2800      	cmp	r0, #0
 80016e0:	d1c7      	bne.n	8001672 <thd3_execute+0x22>
 80016e2:	4628      	mov	r0, r5
 80016e4:	f7ff ff9c 	bl	8001620 <chThdSetPriority>
 80016e8:	1b01      	subs	r1, r0, r4
 80016ea:	fab1 f181 	clz	r1, r1
 80016ee:	0949      	lsrs	r1, r1, #5
 80016f0:	2006      	movs	r0, #6
 80016f2:	f7ff f85d 	bl	80007b0 <_test_assert>
 80016f6:	2800      	cmp	r0, #0
 80016f8:	d1bb      	bne.n	8001672 <thd3_execute+0x22>
 80016fa:	69b3      	ldr	r3, [r6, #24]
 80016fc:	6899      	ldr	r1, [r3, #8]
 80016fe:	1bc9      	subs	r1, r1, r7
 8001700:	fab1 f181 	clz	r1, r1
 8001704:	0949      	lsrs	r1, r1, #5
 8001706:	2007      	movs	r0, #7
 8001708:	f7ff f852 	bl	80007b0 <_test_assert>
 800170c:	2800      	cmp	r0, #0
 800170e:	d1b0      	bne.n	8001672 <thd3_execute+0x22>
 8001710:	69b3      	ldr	r3, [r6, #24]
 8001712:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001714:	1b4f      	subs	r7, r1, r5
 8001716:	4279      	negs	r1, r7
 8001718:	4179      	adcs	r1, r7
 800171a:	2008      	movs	r0, #8
 800171c:	f7ff f848 	bl	80007b0 <_test_assert>
 8001720:	2800      	cmp	r0, #0
 8001722:	d1a6      	bne.n	8001672 <thd3_execute+0x22>
 8001724:	1ce7      	adds	r7, r4, #3
 8001726:	4638      	mov	r0, r7
 8001728:	f7ff ff7a 	bl	8001620 <chThdSetPriority>
 800172c:	1a28      	subs	r0, r5, r0
 800172e:	4241      	negs	r1, r0
 8001730:	4141      	adcs	r1, r0
 8001732:	2009      	movs	r0, #9
 8001734:	f7ff f83c 	bl	80007b0 <_test_assert>
 8001738:	2800      	cmp	r0, #0
 800173a:	d19a      	bne.n	8001672 <thd3_execute+0x22>
 800173c:	69b3      	ldr	r3, [r6, #24]
 800173e:	6899      	ldr	r1, [r3, #8]
 8001740:	1bca      	subs	r2, r1, r7
 8001742:	4251      	negs	r1, r2
 8001744:	4151      	adcs	r1, r2
 8001746:	200a      	movs	r0, #10
 8001748:	f7ff f832 	bl	80007b0 <_test_assert>
 800174c:	2800      	cmp	r0, #0
 800174e:	d190      	bne.n	8001672 <thd3_execute+0x22>
 8001750:	69b3      	ldr	r3, [r6, #24]
 8001752:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001754:	1bcb      	subs	r3, r1, r7
 8001756:	4259      	negs	r1, r3
 8001758:	4159      	adcs	r1, r3
 800175a:	200b      	movs	r0, #11
 800175c:	f7ff f828 	bl	80007b0 <_test_assert>
 8001760:	2800      	cmp	r0, #0
 8001762:	d186      	bne.n	8001672 <thd3_execute+0x22>
 8001764:	2320      	movs	r3, #32
 8001766:	f383 8811 	msr	BASEPRI, r3
 800176a:	69b3      	ldr	r3, [r6, #24]
 800176c:	609c      	str	r4, [r3, #8]
 800176e:	63dc      	str	r4, [r3, #60]	; 0x3c
 8001770:	f380 8811 	msr	BASEPRI, r0
 8001774:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001776:	bf00      	nop
 8001778:	20000930 	.word	0x20000930
 800177c:	00000000 	.word	0x00000000

08001780 <chSysRestoreStatusX.part.3>:
 8001780:	b510      	push	{r4, lr}
 8001782:	f3ef 8405 	mrs	r4, IPSR
 8001786:	f3c4 0408 	ubfx	r4, r4, #0, #9
 800178a:	b11c      	cbz	r4, 8001794 <chSysRestoreStatusX.part.3+0x14>
 800178c:	2300      	movs	r3, #0
 800178e:	f383 8811 	msr	BASEPRI, r3
 8001792:	bd10      	pop	{r4, pc}
 8001794:	f7ff feec 	bl	8001570 <chSchRescheduleS>
 8001798:	f384 8811 	msr	BASEPRI, r4
 800179c:	bd10      	pop	{r4, pc}
 800179e:	bf00      	nop

080017a0 <vtcb>:
 80017a0:	b508      	push	{r3, lr}
 80017a2:	2320      	movs	r3, #32
 80017a4:	f383 8811 	msr	BASEPRI, r3
 80017a8:	2200      	movs	r2, #0
 80017aa:	f382 8811 	msr	BASEPRI, r2
 80017ae:	f383 8811 	msr	BASEPRI, r3
 80017b2:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 80017b6:	b91b      	cbnz	r3, 80017c0 <vtcb+0x20>
 80017b8:	f7ff fd42 	bl	8001240 <chSysGetStatusAndLockX.part.2>
 80017bc:	f7ff ffe0 	bl	8001780 <chSysRestoreStatusX.part.3>
 80017c0:	2300      	movs	r3, #0
 80017c2:	f383 8811 	msr	BASEPRI, r3
 80017c6:	bd08      	pop	{r3, pc}
	...

080017d0 <chSchWakeupS>:
 80017d0:	4b14      	ldr	r3, [pc, #80]	; (8001824 <chSchWakeupS+0x54>)
 80017d2:	b470      	push	{r4, r5, r6}
 80017d4:	699e      	ldr	r6, [r3, #24]
 80017d6:	6885      	ldr	r5, [r0, #8]
 80017d8:	4604      	mov	r4, r0
 80017da:	68b0      	ldr	r0, [r6, #8]
 80017dc:	6221      	str	r1, [r4, #32]
 80017de:	4285      	cmp	r5, r0
 80017e0:	f04f 0200 	mov.w	r2, #0
 80017e4:	d80b      	bhi.n	80017fe <chSchWakeupS+0x2e>
 80017e6:	7722      	strb	r2, [r4, #28]
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	689a      	ldr	r2, [r3, #8]
 80017ec:	4295      	cmp	r5, r2
 80017ee:	d9fb      	bls.n	80017e8 <chSchWakeupS+0x18>
 80017f0:	685a      	ldr	r2, [r3, #4]
 80017f2:	e9c4 3200 	strd	r3, r2, [r4]
 80017f6:	6014      	str	r4, [r2, #0]
 80017f8:	605c      	str	r4, [r3, #4]
 80017fa:	bc70      	pop	{r4, r5, r6}
 80017fc:	4770      	bx	lr
 80017fe:	7732      	strb	r2, [r6, #28]
 8001800:	461a      	mov	r2, r3
 8001802:	6812      	ldr	r2, [r2, #0]
 8001804:	6891      	ldr	r1, [r2, #8]
 8001806:	4288      	cmp	r0, r1
 8001808:	d9fb      	bls.n	8001802 <chSchWakeupS+0x32>
 800180a:	6851      	ldr	r1, [r2, #4]
 800180c:	6071      	str	r1, [r6, #4]
 800180e:	2001      	movs	r0, #1
 8001810:	6032      	str	r2, [r6, #0]
 8001812:	600e      	str	r6, [r1, #0]
 8001814:	6056      	str	r6, [r2, #4]
 8001816:	7720      	strb	r0, [r4, #28]
 8001818:	4631      	mov	r1, r6
 800181a:	4620      	mov	r0, r4
 800181c:	619c      	str	r4, [r3, #24]
 800181e:	bc70      	pop	{r4, r5, r6}
 8001820:	f7fe bcee 	b.w	8000200 <_port_switch>
 8001824:	20000930 	.word	0x20000930
	...

08001830 <chThdCreateFromMemoryPool.constprop.52>:
 8001830:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001834:	4e1d      	ldr	r6, [pc, #116]	; (80018ac <chThdCreateFromMemoryPool.constprop.52+0x7c>)
 8001836:	4607      	mov	r7, r0
 8001838:	4630      	mov	r0, r6
 800183a:	4688      	mov	r8, r1
 800183c:	f7ff f8d8 	bl	80009f0 <chPoolAlloc>
 8001840:	4604      	mov	r4, r0
 8001842:	b380      	cbz	r0, 80018a6 <chThdCreateFromMemoryPool.constprop.52+0x76>
 8001844:	2320      	movs	r3, #32
 8001846:	f383 8811 	msr	BASEPRI, r3
 800184a:	6873      	ldr	r3, [r6, #4]
 800184c:	4a18      	ldr	r2, [pc, #96]	; (80018b0 <chThdCreateFromMemoryPool.constprop.52+0x80>)
 800184e:	4919      	ldr	r1, [pc, #100]	; (80018b4 <chThdCreateFromMemoryPool.constprop.52+0x84>)
 8001850:	3b24      	subs	r3, #36	; 0x24
 8001852:	18c5      	adds	r5, r0, r3
 8001854:	60c5      	str	r5, [r0, #12]
 8001856:	50c2      	str	r2, [r0, r3]
 8001858:	4a17      	ldr	r2, [pc, #92]	; (80018b8 <chThdCreateFromMemoryPool.constprop.52+0x88>)
 800185a:	f8c5 8004 	str.w	r8, [r5, #4]
 800185e:	6229      	str	r1, [r5, #32]
 8001860:	6102      	str	r2, [r0, #16]
 8001862:	f8d2 e014 	ldr.w	lr, [r2, #20]
 8001866:	f8c0 e014 	str.w	lr, [r0, #20]
 800186a:	2301      	movs	r3, #1
 800186c:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8001870:	f04f 0c02 	mov.w	ip, #2
 8001874:	2500      	movs	r5, #0
 8001876:	7783      	strb	r3, [r0, #30]
 8001878:	f100 0328 	add.w	r3, r0, #40	; 0x28
 800187c:	6087      	str	r7, [r0, #8]
 800187e:	63c7      	str	r7, [r0, #60]	; 0x3c
 8001880:	f880 c01c 	strb.w	ip, [r0, #28]
 8001884:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8001888:	6185      	str	r5, [r0, #24]
 800188a:	f8ce 0010 	str.w	r0, [lr, #16]
 800188e:	6241      	str	r1, [r0, #36]	; 0x24
 8001890:	f880 c01d 	strb.w	ip, [r0, #29]
 8001894:	6406      	str	r6, [r0, #64]	; 0x40
 8001896:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800189a:	4629      	mov	r1, r5
 800189c:	6150      	str	r0, [r2, #20]
 800189e:	f7ff ff97 	bl	80017d0 <chSchWakeupS>
 80018a2:	f385 8811 	msr	BASEPRI, r5
 80018a6:	4620      	mov	r0, r4
 80018a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80018ac:	20000b08 	.word	0x20000b08
 80018b0:	08000841 	.word	0x08000841
 80018b4:	08000211 	.word	0x08000211
 80018b8:	20000930 	.word	0x20000930
 80018bc:	00000000 	.word	0x00000000

080018c0 <chCondSignal.constprop.44>:
 80018c0:	b508      	push	{r3, lr}
 80018c2:	2320      	movs	r3, #32
 80018c4:	f383 8811 	msr	BASEPRI, r3
 80018c8:	4b06      	ldr	r3, [pc, #24]	; (80018e4 <chCondSignal.constprop.44+0x24>)
 80018ca:	6818      	ldr	r0, [r3, #0]
 80018cc:	4298      	cmp	r0, r3
 80018ce:	d005      	beq.n	80018dc <chCondSignal.constprop.44+0x1c>
 80018d0:	6802      	ldr	r2, [r0, #0]
 80018d2:	601a      	str	r2, [r3, #0]
 80018d4:	6053      	str	r3, [r2, #4]
 80018d6:	2100      	movs	r1, #0
 80018d8:	f7ff ff7a 	bl	80017d0 <chSchWakeupS>
 80018dc:	2300      	movs	r3, #0
 80018de:	f383 8811 	msr	BASEPRI, r3
 80018e2:	bd08      	pop	{r3, pc}
 80018e4:	20000800 	.word	0x20000800
	...

080018f0 <chMtxUnlock>:
 80018f0:	4b16      	ldr	r3, [pc, #88]	; (800194c <chMtxUnlock+0x5c>)
 80018f2:	b570      	push	{r4, r5, r6, lr}
 80018f4:	699d      	ldr	r5, [r3, #24]
 80018f6:	2320      	movs	r3, #32
 80018f8:	f383 8811 	msr	BASEPRI, r3
 80018fc:	6804      	ldr	r4, [r0, #0]
 80018fe:	68c3      	ldr	r3, [r0, #12]
 8001900:	63ab      	str	r3, [r5, #56]	; 0x38
 8001902:	4284      	cmp	r4, r0
 8001904:	d01c      	beq.n	8001940 <chMtxUnlock+0x50>
 8001906:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8001908:	b14b      	cbz	r3, 800191e <chMtxUnlock+0x2e>
 800190a:	681a      	ldr	r2, [r3, #0]
 800190c:	4293      	cmp	r3, r2
 800190e:	d003      	beq.n	8001918 <chMtxUnlock+0x28>
 8001910:	6892      	ldr	r2, [r2, #8]
 8001912:	4291      	cmp	r1, r2
 8001914:	bf38      	it	cc
 8001916:	4611      	movcc	r1, r2
 8001918:	68db      	ldr	r3, [r3, #12]
 800191a:	2b00      	cmp	r3, #0
 800191c:	d1f5      	bne.n	800190a <chMtxUnlock+0x1a>
 800191e:	4603      	mov	r3, r0
 8001920:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8001922:	6822      	ldr	r2, [r4, #0]
 8001924:	60a9      	str	r1, [r5, #8]
 8001926:	4620      	mov	r0, r4
 8001928:	601a      	str	r2, [r3, #0]
 800192a:	2100      	movs	r1, #0
 800192c:	6053      	str	r3, [r2, #4]
 800192e:	e9c3 4602 	strd	r4, r6, [r3, #8]
 8001932:	63a3      	str	r3, [r4, #56]	; 0x38
 8001934:	f7ff ff4c 	bl	80017d0 <chSchWakeupS>
 8001938:	2300      	movs	r3, #0
 800193a:	f383 8811 	msr	BASEPRI, r3
 800193e:	bd70      	pop	{r4, r5, r6, pc}
 8001940:	2300      	movs	r3, #0
 8001942:	60a3      	str	r3, [r4, #8]
 8001944:	2300      	movs	r3, #0
 8001946:	f383 8811 	msr	BASEPRI, r3
 800194a:	bd70      	pop	{r4, r5, r6, pc}
 800194c:	20000930 	.word	0x20000930

08001950 <chSemSignal>:
 8001950:	b508      	push	{r3, lr}
 8001952:	2320      	movs	r3, #32
 8001954:	f383 8811 	msr	BASEPRI, r3
 8001958:	6883      	ldr	r3, [r0, #8]
 800195a:	3301      	adds	r3, #1
 800195c:	2b00      	cmp	r3, #0
 800195e:	6083      	str	r3, [r0, #8]
 8001960:	dd03      	ble.n	800196a <chSemSignal+0x1a>
 8001962:	2300      	movs	r3, #0
 8001964:	f383 8811 	msr	BASEPRI, r3
 8001968:	bd08      	pop	{r3, pc}
 800196a:	4603      	mov	r3, r0
 800196c:	6800      	ldr	r0, [r0, #0]
 800196e:	6802      	ldr	r2, [r0, #0]
 8001970:	601a      	str	r2, [r3, #0]
 8001972:	2100      	movs	r1, #0
 8001974:	6053      	str	r3, [r2, #4]
 8001976:	f7ff ff2b 	bl	80017d0 <chSchWakeupS>
 800197a:	2300      	movs	r3, #0
 800197c:	f383 8811 	msr	BASEPRI, r3
 8001980:	bd08      	pop	{r3, pc}
 8001982:	bf00      	nop
	...

08001990 <chThdCreateStatic>:
 8001990:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001992:	9e06      	ldr	r6, [sp, #24]
 8001994:	4604      	mov	r4, r0
 8001996:	2520      	movs	r5, #32
 8001998:	f385 8811 	msr	BASEPRI, r5
 800199c:	3924      	subs	r1, #36	; 0x24
 800199e:	1845      	adds	r5, r0, r1
 80019a0:	60c5      	str	r5, [r0, #12]
 80019a2:	4f12      	ldr	r7, [pc, #72]	; (80019ec <chThdCreateStatic+0x5c>)
 80019a4:	5043      	str	r3, [r0, r1]
 80019a6:	4b12      	ldr	r3, [pc, #72]	; (80019f0 <chThdCreateStatic+0x60>)
 80019a8:	606e      	str	r6, [r5, #4]
 80019aa:	622f      	str	r7, [r5, #32]
 80019ac:	6103      	str	r3, [r0, #16]
 80019ae:	6959      	ldr	r1, [r3, #20]
 80019b0:	63c2      	str	r2, [r0, #60]	; 0x3c
 80019b2:	6082      	str	r2, [r0, #8]
 80019b4:	2500      	movs	r5, #0
 80019b6:	f100 0228 	add.w	r2, r0, #40	; 0x28
 80019ba:	f04f 0c02 	mov.w	ip, #2
 80019be:	f100 0624 	add.w	r6, r0, #36	; 0x24
 80019c2:	2701      	movs	r7, #1
 80019c4:	6141      	str	r1, [r0, #20]
 80019c6:	f8a0 c01c 	strh.w	ip, [r0, #28]
 80019ca:	7787      	strb	r7, [r0, #30]
 80019cc:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 80019d0:	6185      	str	r5, [r0, #24]
 80019d2:	6108      	str	r0, [r1, #16]
 80019d4:	4629      	mov	r1, r5
 80019d6:	e9c0 6209 	strd	r6, r2, [r0, #36]	; 0x24
 80019da:	62c2      	str	r2, [r0, #44]	; 0x2c
 80019dc:	6158      	str	r0, [r3, #20]
 80019de:	f7ff fef7 	bl	80017d0 <chSchWakeupS>
 80019e2:	f385 8811 	msr	BASEPRI, r5
 80019e6:	4620      	mov	r0, r4
 80019e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80019ea:	bf00      	nop
 80019ec:	08000211 	.word	0x08000211
 80019f0:	20000930 	.word	0x20000930
	...

08001a00 <chSchGoSleepS>:
 8001a00:	4b07      	ldr	r3, [pc, #28]	; (8001a20 <chSchGoSleepS+0x20>)
 8001a02:	6999      	ldr	r1, [r3, #24]
 8001a04:	681a      	ldr	r2, [r3, #0]
 8001a06:	b410      	push	{r4}
 8001a08:	7708      	strb	r0, [r1, #28]
 8001a0a:	6810      	ldr	r0, [r2, #0]
 8001a0c:	6018      	str	r0, [r3, #0]
 8001a0e:	2401      	movs	r4, #1
 8001a10:	6043      	str	r3, [r0, #4]
 8001a12:	7714      	strb	r4, [r2, #28]
 8001a14:	4610      	mov	r0, r2
 8001a16:	bc10      	pop	{r4}
 8001a18:	619a      	str	r2, [r3, #24]
 8001a1a:	f7fe bbf1 	b.w	8000200 <_port_switch>
 8001a1e:	bf00      	nop
 8001a20:	20000930 	.word	0x20000930
	...

08001a30 <chSemSignalWait.constprop.48>:
 8001a30:	b538      	push	{r3, r4, r5, lr}
 8001a32:	2320      	movs	r3, #32
 8001a34:	f383 8811 	msr	BASEPRI, r3
 8001a38:	4c15      	ldr	r4, [pc, #84]	; (8001a90 <chSemSignalWait.constprop.48+0x60>)
 8001a3a:	68a3      	ldr	r3, [r4, #8]
 8001a3c:	3301      	adds	r3, #1
 8001a3e:	2b00      	cmp	r3, #0
 8001a40:	60a3      	str	r3, [r4, #8]
 8001a42:	dd1a      	ble.n	8001a7a <chSemSignalWait.constprop.48+0x4a>
 8001a44:	3b01      	subs	r3, #1
 8001a46:	2b00      	cmp	r3, #0
 8001a48:	60a3      	str	r3, [r4, #8]
 8001a4a:	db06      	blt.n	8001a5a <chSemSignalWait.constprop.48+0x2a>
 8001a4c:	f7ff fd90 	bl	8001570 <chSchRescheduleS>
 8001a50:	2000      	movs	r0, #0
 8001a52:	2300      	movs	r3, #0
 8001a54:	f383 8811 	msr	BASEPRI, r3
 8001a58:	bd38      	pop	{r3, r4, r5, pc}
 8001a5a:	4a0e      	ldr	r2, [pc, #56]	; (8001a94 <chSemSignalWait.constprop.48+0x64>)
 8001a5c:	6863      	ldr	r3, [r4, #4]
 8001a5e:	6995      	ldr	r5, [r2, #24]
 8001a60:	2005      	movs	r0, #5
 8001a62:	e9c5 4300 	strd	r4, r3, [r5]
 8001a66:	601d      	str	r5, [r3, #0]
 8001a68:	622c      	str	r4, [r5, #32]
 8001a6a:	6065      	str	r5, [r4, #4]
 8001a6c:	f7ff ffc8 	bl	8001a00 <chSchGoSleepS>
 8001a70:	6a28      	ldr	r0, [r5, #32]
 8001a72:	2300      	movs	r3, #0
 8001a74:	f383 8811 	msr	BASEPRI, r3
 8001a78:	bd38      	pop	{r3, r4, r5, pc}
 8001a7a:	6820      	ldr	r0, [r4, #0]
 8001a7c:	6803      	ldr	r3, [r0, #0]
 8001a7e:	6023      	str	r3, [r4, #0]
 8001a80:	605c      	str	r4, [r3, #4]
 8001a82:	f7ff f92d 	bl	8000ce0 <chSchReadyI>
 8001a86:	2200      	movs	r2, #0
 8001a88:	68a3      	ldr	r3, [r4, #8]
 8001a8a:	6202      	str	r2, [r0, #32]
 8001a8c:	e7da      	b.n	8001a44 <chSemSignalWait.constprop.48+0x14>
 8001a8e:	bf00      	nop
 8001a90:	200008ac 	.word	0x200008ac
 8001a94:	20000930 	.word	0x20000930
	...

08001aa0 <sem3_execute>:
 8001aa0:	b510      	push	{r4, lr}
 8001aa2:	4a1e      	ldr	r2, [pc, #120]	; (8001b1c <sem3_execute+0x7c>)
 8001aa4:	4b1e      	ldr	r3, [pc, #120]	; (8001b20 <sem3_execute+0x80>)
 8001aa6:	6992      	ldr	r2, [r2, #24]
 8001aa8:	481e      	ldr	r0, [pc, #120]	; (8001b24 <sem3_execute+0x84>)
 8001aaa:	6892      	ldr	r2, [r2, #8]
 8001aac:	4c1e      	ldr	r4, [pc, #120]	; (8001b28 <sem3_execute+0x88>)
 8001aae:	b082      	sub	sp, #8
 8001ab0:	2100      	movs	r1, #0
 8001ab2:	3201      	adds	r2, #1
 8001ab4:	9100      	str	r1, [sp, #0]
 8001ab6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8001aba:	f7ff ff69 	bl	8001990 <chThdCreateStatic>
 8001abe:	4b1b      	ldr	r3, [pc, #108]	; (8001b2c <sem3_execute+0x8c>)
 8001ac0:	6018      	str	r0, [r3, #0]
 8001ac2:	f7ff ffb5 	bl	8001a30 <chSemSignalWait.constprop.48>
 8001ac6:	6821      	ldr	r1, [r4, #0]
 8001ac8:	1b09      	subs	r1, r1, r4
 8001aca:	fab1 f181 	clz	r1, r1
 8001ace:	2001      	movs	r0, #1
 8001ad0:	0949      	lsrs	r1, r1, #5
 8001ad2:	f7fe fe6d 	bl	80007b0 <_test_assert>
 8001ad6:	b108      	cbz	r0, 8001adc <sem3_execute+0x3c>
 8001ad8:	b002      	add	sp, #8
 8001ada:	bd10      	pop	{r4, pc}
 8001adc:	68a1      	ldr	r1, [r4, #8]
 8001ade:	fab1 f181 	clz	r1, r1
 8001ae2:	0949      	lsrs	r1, r1, #5
 8001ae4:	2002      	movs	r0, #2
 8001ae6:	f7fe fe63 	bl	80007b0 <_test_assert>
 8001aea:	2800      	cmp	r0, #0
 8001aec:	d1f4      	bne.n	8001ad8 <sem3_execute+0x38>
 8001aee:	f7ff ff9f 	bl	8001a30 <chSemSignalWait.constprop.48>
 8001af2:	6821      	ldr	r1, [r4, #0]
 8001af4:	1b09      	subs	r1, r1, r4
 8001af6:	fab1 f181 	clz	r1, r1
 8001afa:	2003      	movs	r0, #3
 8001afc:	0949      	lsrs	r1, r1, #5
 8001afe:	f7fe fe57 	bl	80007b0 <_test_assert>
 8001b02:	2800      	cmp	r0, #0
 8001b04:	d1e8      	bne.n	8001ad8 <sem3_execute+0x38>
 8001b06:	68a1      	ldr	r1, [r4, #8]
 8001b08:	fab1 f181 	clz	r1, r1
 8001b0c:	0949      	lsrs	r1, r1, #5
 8001b0e:	2004      	movs	r0, #4
 8001b10:	b002      	add	sp, #8
 8001b12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001b16:	f7fe be4b 	b.w	80007b0 <_test_assert>
 8001b1a:	bf00      	nop
 8001b1c:	20000930 	.word	0x20000930
 8001b20:	080039d1 	.word	0x080039d1
 8001b24:	20000b38 	.word	0x20000b38
 8001b28:	200008ac 	.word	0x200008ac
 8001b2c:	200011cc 	.word	0x200011cc

08001b30 <chEvtWaitOne.constprop.32>:
 8001b30:	4a0b      	ldr	r2, [pc, #44]	; (8001b60 <chEvtWaitOne.constprop.32+0x30>)
 8001b32:	b510      	push	{r4, lr}
 8001b34:	2320      	movs	r3, #32
 8001b36:	6994      	ldr	r4, [r2, #24]
 8001b38:	f383 8811 	msr	BASEPRI, r3
 8001b3c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001b3e:	b933      	cbnz	r3, 8001b4e <chEvtWaitOne.constprop.32+0x1e>
 8001b40:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001b44:	6223      	str	r3, [r4, #32]
 8001b46:	200a      	movs	r0, #10
 8001b48:	f7ff ff5a 	bl	8001a00 <chSchGoSleepS>
 8001b4c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001b4e:	4258      	negs	r0, r3
 8001b50:	4018      	ands	r0, r3
 8001b52:	ea23 0300 	bic.w	r3, r3, r0
 8001b56:	6363      	str	r3, [r4, #52]	; 0x34
 8001b58:	2300      	movs	r3, #0
 8001b5a:	f383 8811 	msr	BASEPRI, r3
 8001b5e:	bd10      	pop	{r4, pc}
 8001b60:	20000930 	.word	0x20000930
	...

08001b70 <chEvtWaitAny.constprop.31>:
 8001b70:	4a09      	ldr	r2, [pc, #36]	; (8001b98 <chEvtWaitAny.constprop.31+0x28>)
 8001b72:	b510      	push	{r4, lr}
 8001b74:	2320      	movs	r3, #32
 8001b76:	6994      	ldr	r4, [r2, #24]
 8001b78:	f383 8811 	msr	BASEPRI, r3
 8001b7c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001b7e:	b930      	cbnz	r0, 8001b8e <chEvtWaitAny.constprop.31+0x1e>
 8001b80:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001b84:	200a      	movs	r0, #10
 8001b86:	6223      	str	r3, [r4, #32]
 8001b88:	f7ff ff3a 	bl	8001a00 <chSchGoSleepS>
 8001b8c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001b8e:	2300      	movs	r3, #0
 8001b90:	6363      	str	r3, [r4, #52]	; 0x34
 8001b92:	f383 8811 	msr	BASEPRI, r3
 8001b96:	bd10      	pop	{r4, pc}
 8001b98:	20000930 	.word	0x20000930
 8001b9c:	00000000 	.word	0x00000000

08001ba0 <thread4.lto_priv.74>:
 8001ba0:	4a07      	ldr	r2, [pc, #28]	; (8001bc0 <thread4.lto_priv.74+0x20>)
 8001ba2:	b510      	push	{r4, lr}
 8001ba4:	2320      	movs	r3, #32
 8001ba6:	6994      	ldr	r4, [r2, #24]
 8001ba8:	f383 8811 	msr	BASEPRI, r3
 8001bac:	2003      	movs	r0, #3
 8001bae:	f7ff ff27 	bl	8001a00 <chSchGoSleepS>
 8001bb2:	6a23      	ldr	r3, [r4, #32]
 8001bb4:	2b00      	cmp	r3, #0
 8001bb6:	d0f9      	beq.n	8001bac <thread4.lto_priv.74+0xc>
 8001bb8:	2300      	movs	r3, #0
 8001bba:	f383 8811 	msr	BASEPRI, r3
 8001bbe:	bd10      	pop	{r4, pc}
 8001bc0:	20000930 	.word	0x20000930
	...

08001bd0 <chSchGoSleepTimeoutS>:
 8001bd0:	b530      	push	{r4, r5, lr}
 8001bd2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001bd6:	4299      	cmp	r1, r3
 8001bd8:	b087      	sub	sp, #28
 8001bda:	d012      	beq.n	8001c02 <chSchGoSleepTimeoutS+0x32>
 8001bdc:	4c0c      	ldr	r4, [pc, #48]	; (8001c10 <chSchGoSleepTimeoutS+0x40>)
 8001bde:	4a0d      	ldr	r2, [pc, #52]	; (8001c14 <chSchGoSleepTimeoutS+0x44>)
 8001be0:	69a3      	ldr	r3, [r4, #24]
 8001be2:	4605      	mov	r5, r0
 8001be4:	a801      	add	r0, sp, #4
 8001be6:	f7ff facb 	bl	8001180 <chVTDoSetI>
 8001bea:	4628      	mov	r0, r5
 8001bec:	f7ff ff08 	bl	8001a00 <chSchGoSleepS>
 8001bf0:	9b04      	ldr	r3, [sp, #16]
 8001bf2:	b113      	cbz	r3, 8001bfa <chSchGoSleepTimeoutS+0x2a>
 8001bf4:	a801      	add	r0, sp, #4
 8001bf6:	f7ff fa83 	bl	8001100 <chVTDoResetI>
 8001bfa:	69a3      	ldr	r3, [r4, #24]
 8001bfc:	6a18      	ldr	r0, [r3, #32]
 8001bfe:	b007      	add	sp, #28
 8001c00:	bd30      	pop	{r4, r5, pc}
 8001c02:	4c03      	ldr	r4, [pc, #12]	; (8001c10 <chSchGoSleepTimeoutS+0x40>)
 8001c04:	f7ff fefc 	bl	8001a00 <chSchGoSleepS>
 8001c08:	69a3      	ldr	r3, [r4, #24]
 8001c0a:	6a18      	ldr	r0, [r3, #32]
 8001c0c:	b007      	add	sp, #28
 8001c0e:	bd30      	pop	{r4, r5, pc}
 8001c10:	20000930 	.word	0x20000930
 8001c14:	08000c71 	.word	0x08000c71
	...

08001c20 <chSemWaitTimeout.constprop.50>:
 8001c20:	2320      	movs	r3, #32
 8001c22:	f383 8811 	msr	BASEPRI, r3
 8001c26:	4b10      	ldr	r3, [pc, #64]	; (8001c68 <chSemWaitTimeout.constprop.50+0x48>)
 8001c28:	6899      	ldr	r1, [r3, #8]
 8001c2a:	1e4a      	subs	r2, r1, #1
 8001c2c:	2a00      	cmp	r2, #0
 8001c2e:	609a      	str	r2, [r3, #8]
 8001c30:	db04      	blt.n	8001c3c <chSemWaitTimeout.constprop.50+0x1c>
 8001c32:	2000      	movs	r0, #0
 8001c34:	2300      	movs	r3, #0
 8001c36:	f383 8811 	msr	BASEPRI, r3
 8001c3a:	4770      	bx	lr
 8001c3c:	b180      	cbz	r0, 8001c60 <chSemWaitTimeout.constprop.50+0x40>
 8001c3e:	4a0b      	ldr	r2, [pc, #44]	; (8001c6c <chSemWaitTimeout.constprop.50+0x4c>)
 8001c40:	b510      	push	{r4, lr}
 8001c42:	6992      	ldr	r2, [r2, #24]
 8001c44:	685c      	ldr	r4, [r3, #4]
 8001c46:	6213      	str	r3, [r2, #32]
 8001c48:	e9c2 3400 	strd	r3, r4, [r2]
 8001c4c:	4601      	mov	r1, r0
 8001c4e:	6022      	str	r2, [r4, #0]
 8001c50:	2005      	movs	r0, #5
 8001c52:	605a      	str	r2, [r3, #4]
 8001c54:	f7ff ffbc 	bl	8001bd0 <chSchGoSleepTimeoutS>
 8001c58:	2300      	movs	r3, #0
 8001c5a:	f383 8811 	msr	BASEPRI, r3
 8001c5e:	bd10      	pop	{r4, pc}
 8001c60:	6099      	str	r1, [r3, #8]
 8001c62:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001c66:	e7e5      	b.n	8001c34 <chSemWaitTimeout.constprop.50+0x14>
 8001c68:	200008ac 	.word	0x200008ac
 8001c6c:	20000930 	.word	0x20000930

08001c70 <evt3_execute>:
 8001c70:	b570      	push	{r4, r5, r6, lr}
 8001c72:	4c55      	ldr	r4, [pc, #340]	; (8001dc8 <evt3_execute+0x158>)
 8001c74:	2320      	movs	r3, #32
 8001c76:	69a2      	ldr	r2, [r4, #24]
 8001c78:	f383 8811 	msr	BASEPRI, r3
 8001c7c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001c7e:	b93b      	cbnz	r3, 8001c90 <evt3_execute+0x20>
 8001c80:	f383 8811 	msr	BASEPRI, r3
 8001c84:	2101      	movs	r1, #1
 8001c86:	2001      	movs	r0, #1
 8001c88:	f7fe fd92 	bl	80007b0 <_test_assert>
 8001c8c:	b180      	cbz	r0, 8001cb0 <evt3_execute+0x40>
 8001c8e:	bd70      	pop	{r4, r5, r6, pc}
 8001c90:	4259      	negs	r1, r3
 8001c92:	4019      	ands	r1, r3
 8001c94:	ea23 0301 	bic.w	r3, r3, r1
 8001c98:	6353      	str	r3, [r2, #52]	; 0x34
 8001c9a:	2300      	movs	r3, #0
 8001c9c:	f383 8811 	msr	BASEPRI, r3
 8001ca0:	fab1 f181 	clz	r1, r1
 8001ca4:	0949      	lsrs	r1, r1, #5
 8001ca6:	2001      	movs	r0, #1
 8001ca8:	f7fe fd82 	bl	80007b0 <_test_assert>
 8001cac:	2800      	cmp	r0, #0
 8001cae:	d1ee      	bne.n	8001c8e <evt3_execute+0x1e>
 8001cb0:	69a3      	ldr	r3, [r4, #24]
 8001cb2:	2220      	movs	r2, #32
 8001cb4:	f382 8811 	msr	BASEPRI, r2
 8001cb8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001cba:	2a00      	cmp	r2, #0
 8001cbc:	d06f      	beq.n	8001d9e <evt3_execute+0x12e>
 8001cbe:	6358      	str	r0, [r3, #52]	; 0x34
 8001cc0:	f380 8811 	msr	BASEPRI, r0
 8001cc4:	4601      	mov	r1, r0
 8001cc6:	2002      	movs	r0, #2
 8001cc8:	f7fe fd72 	bl	80007b0 <_test_assert>
 8001ccc:	2800      	cmp	r0, #0
 8001cce:	d1de      	bne.n	8001c8e <evt3_execute+0x1e>
 8001cd0:	69a3      	ldr	r3, [r4, #24]
 8001cd2:	2220      	movs	r2, #32
 8001cd4:	f382 8811 	msr	BASEPRI, r2
 8001cd8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001cda:	3201      	adds	r2, #1
 8001cdc:	d063      	beq.n	8001da6 <evt3_execute+0x136>
 8001cde:	f380 8811 	msr	BASEPRI, r0
 8001ce2:	2001      	movs	r0, #1
 8001ce4:	4601      	mov	r1, r0
 8001ce6:	2003      	movs	r0, #3
 8001ce8:	f7fe fd62 	bl	80007b0 <_test_assert>
 8001cec:	2800      	cmp	r0, #0
 8001cee:	d1ce      	bne.n	8001c8e <evt3_execute+0x1e>
 8001cf0:	69a6      	ldr	r6, [r4, #24]
 8001cf2:	2320      	movs	r3, #32
 8001cf4:	f383 8811 	msr	BASEPRI, r3
 8001cf8:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001cfa:	b94d      	cbnz	r5, 8001d10 <evt3_execute+0xa0>
 8001cfc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001d00:	210a      	movs	r1, #10
 8001d02:	6233      	str	r3, [r6, #32]
 8001d04:	4608      	mov	r0, r1
 8001d06:	f7ff ff63 	bl	8001bd0 <chSchGoSleepTimeoutS>
 8001d0a:	2800      	cmp	r0, #0
 8001d0c:	db4f      	blt.n	8001dae <evt3_execute+0x13e>
 8001d0e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001d10:	4269      	negs	r1, r5
 8001d12:	4029      	ands	r1, r5
 8001d14:	ea25 0501 	bic.w	r5, r5, r1
 8001d18:	6375      	str	r5, [r6, #52]	; 0x34
 8001d1a:	2300      	movs	r3, #0
 8001d1c:	f383 8811 	msr	BASEPRI, r3
 8001d20:	fab1 f181 	clz	r1, r1
 8001d24:	0949      	lsrs	r1, r1, #5
 8001d26:	2004      	movs	r0, #4
 8001d28:	f7fe fd42 	bl	80007b0 <_test_assert>
 8001d2c:	2800      	cmp	r0, #0
 8001d2e:	d1ae      	bne.n	8001c8e <evt3_execute+0x1e>
 8001d30:	69a6      	ldr	r6, [r4, #24]
 8001d32:	2320      	movs	r3, #32
 8001d34:	f383 8811 	msr	BASEPRI, r3
 8001d38:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001d3a:	b94d      	cbnz	r5, 8001d50 <evt3_execute+0xe0>
 8001d3c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001d40:	210a      	movs	r1, #10
 8001d42:	6233      	str	r3, [r6, #32]
 8001d44:	4608      	mov	r0, r1
 8001d46:	f7ff ff43 	bl	8001bd0 <chSchGoSleepTimeoutS>
 8001d4a:	2800      	cmp	r0, #0
 8001d4c:	db33      	blt.n	8001db6 <evt3_execute+0x146>
 8001d4e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001d50:	2300      	movs	r3, #0
 8001d52:	6373      	str	r3, [r6, #52]	; 0x34
 8001d54:	f383 8811 	msr	BASEPRI, r3
 8001d58:	fab5 f185 	clz	r1, r5
 8001d5c:	0949      	lsrs	r1, r1, #5
 8001d5e:	2005      	movs	r0, #5
 8001d60:	f7fe fd26 	bl	80007b0 <_test_assert>
 8001d64:	4605      	mov	r5, r0
 8001d66:	2800      	cmp	r0, #0
 8001d68:	d191      	bne.n	8001c8e <evt3_execute+0x1e>
 8001d6a:	69a4      	ldr	r4, [r4, #24]
 8001d6c:	2320      	movs	r3, #32
 8001d6e:	f383 8811 	msr	BASEPRI, r3
 8001d72:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001d74:	3301      	adds	r3, #1
 8001d76:	d008      	beq.n	8001d8a <evt3_execute+0x11a>
 8001d78:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001d7c:	6223      	str	r3, [r4, #32]
 8001d7e:	210a      	movs	r1, #10
 8001d80:	200b      	movs	r0, #11
 8001d82:	f7ff ff25 	bl	8001bd0 <chSchGoSleepTimeoutS>
 8001d86:	2800      	cmp	r0, #0
 8001d88:	db19      	blt.n	8001dbe <evt3_execute+0x14e>
 8001d8a:	2300      	movs	r3, #0
 8001d8c:	6363      	str	r3, [r4, #52]	; 0x34
 8001d8e:	f383 8811 	msr	BASEPRI, r3
 8001d92:	4629      	mov	r1, r5
 8001d94:	2006      	movs	r0, #6
 8001d96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001d9a:	f7fe bd09 	b.w	80007b0 <_test_assert>
 8001d9e:	f382 8811 	msr	BASEPRI, r2
 8001da2:	2101      	movs	r1, #1
 8001da4:	e78f      	b.n	8001cc6 <evt3_execute+0x56>
 8001da6:	6358      	str	r0, [r3, #52]	; 0x34
 8001da8:	f380 8811 	msr	BASEPRI, r0
 8001dac:	e79a      	b.n	8001ce4 <evt3_execute+0x74>
 8001dae:	f385 8811 	msr	BASEPRI, r5
 8001db2:	2101      	movs	r1, #1
 8001db4:	e7b7      	b.n	8001d26 <evt3_execute+0xb6>
 8001db6:	f385 8811 	msr	BASEPRI, r5
 8001dba:	2101      	movs	r1, #1
 8001dbc:	e7cf      	b.n	8001d5e <evt3_execute+0xee>
 8001dbe:	f385 8811 	msr	BASEPRI, r5
 8001dc2:	2501      	movs	r5, #1
 8001dc4:	e7e5      	b.n	8001d92 <evt3_execute+0x122>
 8001dc6:	bf00      	nop
 8001dc8:	20000930 	.word	0x20000930
 8001dcc:	00000000 	.word	0x00000000

08001dd0 <chSemWaitTimeoutS>:
 8001dd0:	6883      	ldr	r3, [r0, #8]
 8001dd2:	3b01      	subs	r3, #1
 8001dd4:	2b00      	cmp	r3, #0
 8001dd6:	6083      	str	r3, [r0, #8]
 8001dd8:	db01      	blt.n	8001dde <chSemWaitTimeoutS+0xe>
 8001dda:	2000      	movs	r0, #0
 8001ddc:	4770      	bx	lr
 8001dde:	4b07      	ldr	r3, [pc, #28]	; (8001dfc <chSemWaitTimeoutS+0x2c>)
 8001de0:	699b      	ldr	r3, [r3, #24]
 8001de2:	b410      	push	{r4}
 8001de4:	6218      	str	r0, [r3, #32]
 8001de6:	6018      	str	r0, [r3, #0]
 8001de8:	6844      	ldr	r4, [r0, #4]
 8001dea:	605c      	str	r4, [r3, #4]
 8001dec:	4602      	mov	r2, r0
 8001dee:	6023      	str	r3, [r4, #0]
 8001df0:	2005      	movs	r0, #5
 8001df2:	6053      	str	r3, [r2, #4]
 8001df4:	bc10      	pop	{r4}
 8001df6:	f7ff beeb 	b.w	8001bd0 <chSchGoSleepTimeoutS>
 8001dfa:	bf00      	nop
 8001dfc:	20000930 	.word	0x20000930

08001e00 <chMBPost.constprop.20>:
 8001e00:	b570      	push	{r4, r5, r6, lr}
 8001e02:	2320      	movs	r3, #32
 8001e04:	4606      	mov	r6, r0
 8001e06:	f383 8811 	msr	BASEPRI, r3
 8001e0a:	4c0d      	ldr	r4, [pc, #52]	; (8001e40 <chMBPost.constprop.20+0x40>)
 8001e0c:	f104 001c 	add.w	r0, r4, #28
 8001e10:	f7ff ffde 	bl	8001dd0 <chSemWaitTimeoutS>
 8001e14:	4605      	mov	r5, r0
 8001e16:	b968      	cbnz	r0, 8001e34 <chMBPost.constprop.20+0x34>
 8001e18:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8001e1c:	1d13      	adds	r3, r2, #4
 8001e1e:	428b      	cmp	r3, r1
 8001e20:	60a3      	str	r3, [r4, #8]
 8001e22:	4808      	ldr	r0, [pc, #32]	; (8001e44 <chMBPost.constprop.20+0x44>)
 8001e24:	6016      	str	r6, [r2, #0]
 8001e26:	bf24      	itt	cs
 8001e28:	6823      	ldrcs	r3, [r4, #0]
 8001e2a:	60a3      	strcs	r3, [r4, #8]
 8001e2c:	f7ff f8e0 	bl	8000ff0 <chSemSignalI>
 8001e30:	f7ff fb9e 	bl	8001570 <chSchRescheduleS>
 8001e34:	2300      	movs	r3, #0
 8001e36:	f383 8811 	msr	BASEPRI, r3
 8001e3a:	4628      	mov	r0, r5
 8001e3c:	bd70      	pop	{r4, r5, r6, pc}
 8001e3e:	bf00      	nop
 8001e40:	20000854 	.word	0x20000854
 8001e44:	20000864 	.word	0x20000864
	...

08001e50 <chMBPostAhead.constprop.18>:
 8001e50:	b570      	push	{r4, r5, r6, lr}
 8001e52:	2320      	movs	r3, #32
 8001e54:	4606      	mov	r6, r0
 8001e56:	f383 8811 	msr	BASEPRI, r3
 8001e5a:	4c10      	ldr	r4, [pc, #64]	; (8001e9c <chMBPostAhead.constprop.18+0x4c>)
 8001e5c:	f104 001c 	add.w	r0, r4, #28
 8001e60:	f7ff ffb6 	bl	8001dd0 <chSemWaitTimeoutS>
 8001e64:	4605      	mov	r5, r0
 8001e66:	b120      	cbz	r0, 8001e72 <chMBPostAhead.constprop.18+0x22>
 8001e68:	2300      	movs	r3, #0
 8001e6a:	f383 8811 	msr	BASEPRI, r3
 8001e6e:	4628      	mov	r0, r5
 8001e70:	bd70      	pop	{r4, r5, r6, pc}
 8001e72:	68e3      	ldr	r3, [r4, #12]
 8001e74:	6822      	ldr	r2, [r4, #0]
 8001e76:	3b04      	subs	r3, #4
 8001e78:	4293      	cmp	r3, r2
 8001e7a:	60e3      	str	r3, [r4, #12]
 8001e7c:	d202      	bcs.n	8001e84 <chMBPostAhead.constprop.18+0x34>
 8001e7e:	6863      	ldr	r3, [r4, #4]
 8001e80:	3b04      	subs	r3, #4
 8001e82:	60e3      	str	r3, [r4, #12]
 8001e84:	601e      	str	r6, [r3, #0]
 8001e86:	4806      	ldr	r0, [pc, #24]	; (8001ea0 <chMBPostAhead.constprop.18+0x50>)
 8001e88:	f7ff f8b2 	bl	8000ff0 <chSemSignalI>
 8001e8c:	f7ff fb70 	bl	8001570 <chSchRescheduleS>
 8001e90:	2300      	movs	r3, #0
 8001e92:	f383 8811 	msr	BASEPRI, r3
 8001e96:	4628      	mov	r0, r5
 8001e98:	bd70      	pop	{r4, r5, r6, pc}
 8001e9a:	bf00      	nop
 8001e9c:	20000854 	.word	0x20000854
 8001ea0:	20000864 	.word	0x20000864
	...

08001eb0 <chMBFetch.constprop.16>:
 8001eb0:	b570      	push	{r4, r5, r6, lr}
 8001eb2:	2320      	movs	r3, #32
 8001eb4:	4606      	mov	r6, r0
 8001eb6:	f383 8811 	msr	BASEPRI, r3
 8001eba:	4c0d      	ldr	r4, [pc, #52]	; (8001ef0 <chMBFetch.constprop.16+0x40>)
 8001ebc:	f104 0010 	add.w	r0, r4, #16
 8001ec0:	f7ff ff86 	bl	8001dd0 <chSemWaitTimeoutS>
 8001ec4:	4605      	mov	r5, r0
 8001ec6:	b970      	cbnz	r0, 8001ee6 <chMBFetch.constprop.16+0x36>
 8001ec8:	68e3      	ldr	r3, [r4, #12]
 8001eca:	6862      	ldr	r2, [r4, #4]
 8001ecc:	6819      	ldr	r1, [r3, #0]
 8001ece:	4809      	ldr	r0, [pc, #36]	; (8001ef4 <chMBFetch.constprop.16+0x44>)
 8001ed0:	3304      	adds	r3, #4
 8001ed2:	4293      	cmp	r3, r2
 8001ed4:	60e3      	str	r3, [r4, #12]
 8001ed6:	6031      	str	r1, [r6, #0]
 8001ed8:	bf24      	itt	cs
 8001eda:	6823      	ldrcs	r3, [r4, #0]
 8001edc:	60e3      	strcs	r3, [r4, #12]
 8001ede:	f7ff f887 	bl	8000ff0 <chSemSignalI>
 8001ee2:	f7ff fb45 	bl	8001570 <chSchRescheduleS>
 8001ee6:	2300      	movs	r3, #0
 8001ee8:	f383 8811 	msr	BASEPRI, r3
 8001eec:	4628      	mov	r0, r5
 8001eee:	bd70      	pop	{r4, r5, r6, pc}
 8001ef0:	20000854 	.word	0x20000854
 8001ef4:	20000870 	.word	0x20000870
	...

08001f00 <mbox1_execute>:
 8001f00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f02:	2320      	movs	r3, #32
 8001f04:	b083      	sub	sp, #12
 8001f06:	f383 8811 	msr	BASEPRI, r3
 8001f0a:	4dd1      	ldr	r5, [pc, #836]	; (8002250 <mbox1_execute+0x350>)
 8001f0c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8001f0e:	f1a1 0105 	sub.w	r1, r1, #5
 8001f12:	fab1 f181 	clz	r1, r1
 8001f16:	2001      	movs	r0, #1
 8001f18:	0949      	lsrs	r1, r1, #5
 8001f1a:	f7fe fc49 	bl	80007b0 <_test_assert>
 8001f1e:	2800      	cmp	r0, #0
 8001f20:	f040 8191 	bne.w	8002246 <mbox1_execute+0x346>
 8001f24:	f380 8811 	msr	BASEPRI, r0
 8001f28:	2442      	movs	r4, #66	; 0x42
 8001f2a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001f2e:	4620      	mov	r0, r4
 8001f30:	f7ff ff66 	bl	8001e00 <chMBPost.constprop.20>
 8001f34:	fab0 f180 	clz	r1, r0
 8001f38:	0949      	lsrs	r1, r1, #5
 8001f3a:	2002      	movs	r0, #2
 8001f3c:	f7fe fc38 	bl	80007b0 <_test_assert>
 8001f40:	3401      	adds	r4, #1
 8001f42:	b978      	cbnz	r0, 8001f64 <mbox1_execute+0x64>
 8001f44:	2c46      	cmp	r4, #70	; 0x46
 8001f46:	d1f0      	bne.n	8001f2a <mbox1_execute+0x2a>
 8001f48:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001f4c:	2041      	movs	r0, #65	; 0x41
 8001f4e:	f7ff ff7f 	bl	8001e50 <chMBPostAhead.constprop.18>
 8001f52:	fab0 f180 	clz	r1, r0
 8001f56:	0949      	lsrs	r1, r1, #5
 8001f58:	2003      	movs	r0, #3
 8001f5a:	f7fe fc29 	bl	80007b0 <_test_assert>
 8001f5e:	2800      	cmp	r0, #0
 8001f60:	f000 817e 	beq.w	8002260 <mbox1_execute+0x360>
 8001f64:	b003      	add	sp, #12
 8001f66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f68:	f380 8811 	msr	BASEPRI, r0
 8001f6c:	f384 8811 	msr	BASEPRI, r4
 8001f70:	2041      	movs	r0, #65	; 0x41
 8001f72:	f7ff f84d 	bl	8001010 <chMBPostI.constprop.19>
 8001f76:	fab0 f180 	clz	r1, r0
 8001f7a:	0949      	lsrs	r1, r1, #5
 8001f7c:	2016      	movs	r0, #22
 8001f7e:	f7fe fc17 	bl	80007b0 <_test_assert>
 8001f82:	2800      	cmp	r0, #0
 8001f84:	d1ee      	bne.n	8001f64 <mbox1_execute+0x64>
 8001f86:	2042      	movs	r0, #66	; 0x42
 8001f88:	f7ff f842 	bl	8001010 <chMBPostI.constprop.19>
 8001f8c:	fab0 f180 	clz	r1, r0
 8001f90:	0949      	lsrs	r1, r1, #5
 8001f92:	2017      	movs	r0, #23
 8001f94:	f7fe fc0c 	bl	80007b0 <_test_assert>
 8001f98:	2800      	cmp	r0, #0
 8001f9a:	d1e3      	bne.n	8001f64 <mbox1_execute+0x64>
 8001f9c:	2043      	movs	r0, #67	; 0x43
 8001f9e:	f7ff f837 	bl	8001010 <chMBPostI.constprop.19>
 8001fa2:	fab0 f180 	clz	r1, r0
 8001fa6:	0949      	lsrs	r1, r1, #5
 8001fa8:	2018      	movs	r0, #24
 8001faa:	f7fe fc01 	bl	80007b0 <_test_assert>
 8001fae:	2800      	cmp	r0, #0
 8001fb0:	d1d8      	bne.n	8001f64 <mbox1_execute+0x64>
 8001fb2:	2044      	movs	r0, #68	; 0x44
 8001fb4:	f7ff f82c 	bl	8001010 <chMBPostI.constprop.19>
 8001fb8:	fab0 f180 	clz	r1, r0
 8001fbc:	0949      	lsrs	r1, r1, #5
 8001fbe:	2019      	movs	r0, #25
 8001fc0:	f7fe fbf6 	bl	80007b0 <_test_assert>
 8001fc4:	4606      	mov	r6, r0
 8001fc6:	2800      	cmp	r0, #0
 8001fc8:	d1cc      	bne.n	8001f64 <mbox1_execute+0x64>
 8001fca:	2045      	movs	r0, #69	; 0x45
 8001fcc:	f7ff f820 	bl	8001010 <chMBPostI.constprop.19>
 8001fd0:	f386 8811 	msr	BASEPRI, r6
 8001fd4:	fab0 f180 	clz	r1, r0
 8001fd8:	0949      	lsrs	r1, r1, #5
 8001fda:	201a      	movs	r0, #26
 8001fdc:	f7fe fbe8 	bl	80007b0 <_test_assert>
 8001fe0:	2800      	cmp	r0, #0
 8001fe2:	d1bf      	bne.n	8001f64 <mbox1_execute+0x64>
 8001fe4:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8001fe8:	eba1 0c03 	sub.w	ip, r1, r3
 8001fec:	f1dc 0100 	rsbs	r1, ip, #0
 8001ff0:	eb41 010c 	adc.w	r1, r1, ip
 8001ff4:	201b      	movs	r0, #27
 8001ff6:	f7fe fbdb 	bl	80007b0 <_test_assert>
 8001ffa:	2800      	cmp	r0, #0
 8001ffc:	d1b2      	bne.n	8001f64 <mbox1_execute+0x64>
 8001ffe:	4607      	mov	r7, r0
 8002000:	2605      	movs	r6, #5
 8002002:	f384 8811 	msr	BASEPRI, r4
 8002006:	a801      	add	r0, sp, #4
 8002008:	f7ff f842 	bl	8001090 <chMBFetchI.constprop.15>
 800200c:	f387 8811 	msr	BASEPRI, r7
 8002010:	fab0 f180 	clz	r1, r0
 8002014:	0949      	lsrs	r1, r1, #5
 8002016:	201c      	movs	r0, #28
 8002018:	f7fe fbca 	bl	80007b0 <_test_assert>
 800201c:	2800      	cmp	r0, #0
 800201e:	d1a1      	bne.n	8001f64 <mbox1_execute+0x64>
 8002020:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8002024:	f7fe fbdc 	bl	80007e0 <test_emit_token>
 8002028:	3e01      	subs	r6, #1
 800202a:	d1ea      	bne.n	8002002 <mbox1_execute+0x102>
 800202c:	4989      	ldr	r1, [pc, #548]	; (8002254 <mbox1_execute+0x354>)
 800202e:	201d      	movs	r0, #29
 8002030:	f7fe fb96 	bl	8000760 <_test_assert_sequence>
 8002034:	2800      	cmp	r0, #0
 8002036:	d195      	bne.n	8001f64 <mbox1_execute+0x64>
 8002038:	f384 8811 	msr	BASEPRI, r4
 800203c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800203e:	1f4f      	subs	r7, r1, #5
 8002040:	4279      	negs	r1, r7
 8002042:	4179      	adcs	r1, r7
 8002044:	201e      	movs	r0, #30
 8002046:	f7fe fbb3 	bl	80007b0 <_test_assert>
 800204a:	2800      	cmp	r0, #0
 800204c:	f040 8223 	bne.w	8002496 <mbox1_execute+0x596>
 8002050:	f386 8811 	msr	BASEPRI, r6
 8002054:	f384 8811 	msr	BASEPRI, r4
 8002058:	69a9      	ldr	r1, [r5, #24]
 800205a:	fab1 f181 	clz	r1, r1
 800205e:	0949      	lsrs	r1, r1, #5
 8002060:	201f      	movs	r0, #31
 8002062:	f7fe fba5 	bl	80007b0 <_test_assert>
 8002066:	2800      	cmp	r0, #0
 8002068:	f040 8215 	bne.w	8002496 <mbox1_execute+0x596>
 800206c:	f386 8811 	msr	BASEPRI, r6
 8002070:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002074:	1aca      	subs	r2, r1, r3
 8002076:	4251      	negs	r1, r2
 8002078:	4151      	adcs	r1, r2
 800207a:	2020      	movs	r0, #32
 800207c:	f7fe fb98 	bl	80007b0 <_test_assert>
 8002080:	2800      	cmp	r0, #0
 8002082:	f47f af6f 	bne.w	8001f64 <mbox1_execute+0x64>
 8002086:	f384 8811 	msr	BASEPRI, r4
 800208a:	2045      	movs	r0, #69	; 0x45
 800208c:	f7fe ffe0 	bl	8001050 <chMBPostAheadI.constprop.17>
 8002090:	fab0 f180 	clz	r1, r0
 8002094:	0949      	lsrs	r1, r1, #5
 8002096:	2021      	movs	r0, #33	; 0x21
 8002098:	f7fe fb8a 	bl	80007b0 <_test_assert>
 800209c:	2800      	cmp	r0, #0
 800209e:	f47f af61 	bne.w	8001f64 <mbox1_execute+0x64>
 80020a2:	2044      	movs	r0, #68	; 0x44
 80020a4:	f7fe ffd4 	bl	8001050 <chMBPostAheadI.constprop.17>
 80020a8:	fab0 f180 	clz	r1, r0
 80020ac:	0949      	lsrs	r1, r1, #5
 80020ae:	2022      	movs	r0, #34	; 0x22
 80020b0:	f7fe fb7e 	bl	80007b0 <_test_assert>
 80020b4:	2800      	cmp	r0, #0
 80020b6:	f47f af55 	bne.w	8001f64 <mbox1_execute+0x64>
 80020ba:	2043      	movs	r0, #67	; 0x43
 80020bc:	f7fe ffc8 	bl	8001050 <chMBPostAheadI.constprop.17>
 80020c0:	fab0 f180 	clz	r1, r0
 80020c4:	0949      	lsrs	r1, r1, #5
 80020c6:	2023      	movs	r0, #35	; 0x23
 80020c8:	f7fe fb72 	bl	80007b0 <_test_assert>
 80020cc:	2800      	cmp	r0, #0
 80020ce:	f47f af49 	bne.w	8001f64 <mbox1_execute+0x64>
 80020d2:	2042      	movs	r0, #66	; 0x42
 80020d4:	f7fe ffbc 	bl	8001050 <chMBPostAheadI.constprop.17>
 80020d8:	fab0 f180 	clz	r1, r0
 80020dc:	0949      	lsrs	r1, r1, #5
 80020de:	2024      	movs	r0, #36	; 0x24
 80020e0:	f7fe fb66 	bl	80007b0 <_test_assert>
 80020e4:	2800      	cmp	r0, #0
 80020e6:	f47f af3d 	bne.w	8001f64 <mbox1_execute+0x64>
 80020ea:	2041      	movs	r0, #65	; 0x41
 80020ec:	f7fe ffb0 	bl	8001050 <chMBPostAheadI.constprop.17>
 80020f0:	2300      	movs	r3, #0
 80020f2:	f383 8811 	msr	BASEPRI, r3
 80020f6:	fab0 f180 	clz	r1, r0
 80020fa:	0949      	lsrs	r1, r1, #5
 80020fc:	2025      	movs	r0, #37	; 0x25
 80020fe:	f7fe fb57 	bl	80007b0 <_test_assert>
 8002102:	2800      	cmp	r0, #0
 8002104:	f47f af2e 	bne.w	8001f64 <mbox1_execute+0x64>
 8002108:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800210c:	1acb      	subs	r3, r1, r3
 800210e:	4259      	negs	r1, r3
 8002110:	4159      	adcs	r1, r3
 8002112:	2026      	movs	r0, #38	; 0x26
 8002114:	f7fe fb4c 	bl	80007b0 <_test_assert>
 8002118:	2800      	cmp	r0, #0
 800211a:	f47f af23 	bne.w	8001f64 <mbox1_execute+0x64>
 800211e:	4606      	mov	r6, r0
 8002120:	2405      	movs	r4, #5
 8002122:	2720      	movs	r7, #32
 8002124:	f387 8811 	msr	BASEPRI, r7
 8002128:	a801      	add	r0, sp, #4
 800212a:	f7fe ffb1 	bl	8001090 <chMBFetchI.constprop.15>
 800212e:	f386 8811 	msr	BASEPRI, r6
 8002132:	fab0 f180 	clz	r1, r0
 8002136:	0949      	lsrs	r1, r1, #5
 8002138:	2027      	movs	r0, #39	; 0x27
 800213a:	f7fe fb39 	bl	80007b0 <_test_assert>
 800213e:	2800      	cmp	r0, #0
 8002140:	f47f af10 	bne.w	8001f64 <mbox1_execute+0x64>
 8002144:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8002148:	f7fe fb4a 	bl	80007e0 <test_emit_token>
 800214c:	3c01      	subs	r4, #1
 800214e:	d1e9      	bne.n	8002124 <mbox1_execute+0x224>
 8002150:	4940      	ldr	r1, [pc, #256]	; (8002254 <mbox1_execute+0x354>)
 8002152:	2028      	movs	r0, #40	; 0x28
 8002154:	f7fe fb04 	bl	8000760 <_test_assert_sequence>
 8002158:	2800      	cmp	r0, #0
 800215a:	f47f af03 	bne.w	8001f64 <mbox1_execute+0x64>
 800215e:	f387 8811 	msr	BASEPRI, r7
 8002162:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002164:	f1a1 0e05 	sub.w	lr, r1, #5
 8002168:	f1de 0100 	rsbs	r1, lr, #0
 800216c:	eb41 010e 	adc.w	r1, r1, lr
 8002170:	2029      	movs	r0, #41	; 0x29
 8002172:	f7fe fb1d 	bl	80007b0 <_test_assert>
 8002176:	2800      	cmp	r0, #0
 8002178:	f040 80c5 	bne.w	8002306 <mbox1_execute+0x406>
 800217c:	f384 8811 	msr	BASEPRI, r4
 8002180:	f387 8811 	msr	BASEPRI, r7
 8002184:	69a9      	ldr	r1, [r5, #24]
 8002186:	fab1 f181 	clz	r1, r1
 800218a:	0949      	lsrs	r1, r1, #5
 800218c:	202a      	movs	r0, #42	; 0x2a
 800218e:	f7fe fb0f 	bl	80007b0 <_test_assert>
 8002192:	2800      	cmp	r0, #0
 8002194:	f040 80b7 	bne.w	8002306 <mbox1_execute+0x406>
 8002198:	f384 8811 	msr	BASEPRI, r4
 800219c:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80021a0:	eba1 0c03 	sub.w	ip, r1, r3
 80021a4:	f1dc 0100 	rsbs	r1, ip, #0
 80021a8:	eb41 010c 	adc.w	r1, r1, ip
 80021ac:	202b      	movs	r0, #43	; 0x2b
 80021ae:	f7fe faff 	bl	80007b0 <_test_assert>
 80021b2:	2800      	cmp	r0, #0
 80021b4:	f47f aed6 	bne.w	8001f64 <mbox1_execute+0x64>
 80021b8:	f387 8811 	msr	BASEPRI, r7
 80021bc:	e9d5 3200 	ldrd	r3, r2, [r5]
 80021c0:	1ad2      	subs	r2, r2, r3
 80021c2:	1091      	asrs	r1, r2, #2
 80021c4:	4824      	ldr	r0, [pc, #144]	; (8002258 <mbox1_execute+0x358>)
 80021c6:	60ab      	str	r3, [r5, #8]
 80021c8:	60eb      	str	r3, [r5, #12]
 80021ca:	f7fe ff81 	bl	80010d0 <chSemResetI>
 80021ce:	4621      	mov	r1, r4
 80021d0:	4822      	ldr	r0, [pc, #136]	; (800225c <mbox1_execute+0x35c>)
 80021d2:	f7fe ff7d 	bl	80010d0 <chSemResetI>
 80021d6:	f7ff f9cb 	bl	8001570 <chSchRescheduleS>
 80021da:	f384 8811 	msr	BASEPRI, r4
 80021de:	f387 8811 	msr	BASEPRI, r7
 80021e2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80021e4:	1f4e      	subs	r6, r1, #5
 80021e6:	4271      	negs	r1, r6
 80021e8:	4171      	adcs	r1, r6
 80021ea:	202c      	movs	r0, #44	; 0x2c
 80021ec:	f7fe fae0 	bl	80007b0 <_test_assert>
 80021f0:	2800      	cmp	r0, #0
 80021f2:	f040 8088 	bne.w	8002306 <mbox1_execute+0x406>
 80021f6:	f384 8811 	msr	BASEPRI, r4
 80021fa:	f387 8811 	msr	BASEPRI, r7
 80021fe:	69a9      	ldr	r1, [r5, #24]
 8002200:	fab1 f181 	clz	r1, r1
 8002204:	0949      	lsrs	r1, r1, #5
 8002206:	202d      	movs	r0, #45	; 0x2d
 8002208:	f7fe fad2 	bl	80007b0 <_test_assert>
 800220c:	2800      	cmp	r0, #0
 800220e:	d17a      	bne.n	8002306 <mbox1_execute+0x406>
 8002210:	f384 8811 	msr	BASEPRI, r4
 8002214:	f387 8811 	msr	BASEPRI, r7
 8002218:	6829      	ldr	r1, [r5, #0]
 800221a:	68ab      	ldr	r3, [r5, #8]
 800221c:	1aca      	subs	r2, r1, r3
 800221e:	4251      	negs	r1, r2
 8002220:	4151      	adcs	r1, r2
 8002222:	202e      	movs	r0, #46	; 0x2e
 8002224:	f7fe fac4 	bl	80007b0 <_test_assert>
 8002228:	2800      	cmp	r0, #0
 800222a:	d16c      	bne.n	8002306 <mbox1_execute+0x406>
 800222c:	f384 8811 	msr	BASEPRI, r4
 8002230:	f387 8811 	msr	BASEPRI, r7
 8002234:	6829      	ldr	r1, [r5, #0]
 8002236:	68eb      	ldr	r3, [r5, #12]
 8002238:	1acb      	subs	r3, r1, r3
 800223a:	4259      	negs	r1, r3
 800223c:	f04f 002f 	mov.w	r0, #47	; 0x2f
 8002240:	4159      	adcs	r1, r3
 8002242:	f7fe fab5 	bl	80007b0 <_test_assert>
 8002246:	2300      	movs	r3, #0
 8002248:	f383 8811 	msr	BASEPRI, r3
 800224c:	b003      	add	sp, #12
 800224e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002250:	20000854 	.word	0x20000854
 8002254:	080060c0 	.word	0x080060c0
 8002258:	20000870 	.word	0x20000870
 800225c:	20000864 	.word	0x20000864
 8002260:	2101      	movs	r1, #1
 8002262:	2058      	movs	r0, #88	; 0x58
 8002264:	f7ff fdcc 	bl	8001e00 <chMBPost.constprop.20>
 8002268:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 800226c:	fab1 f181 	clz	r1, r1
 8002270:	0949      	lsrs	r1, r1, #5
 8002272:	2004      	movs	r0, #4
 8002274:	f7fe fa9c 	bl	80007b0 <_test_assert>
 8002278:	4604      	mov	r4, r0
 800227a:	2800      	cmp	r0, #0
 800227c:	f47f ae72 	bne.w	8001f64 <mbox1_execute+0x64>
 8002280:	2620      	movs	r6, #32
 8002282:	f386 8811 	msr	BASEPRI, r6
 8002286:	2058      	movs	r0, #88	; 0x58
 8002288:	f7fe fec2 	bl	8001010 <chMBPostI.constprop.19>
 800228c:	4601      	mov	r1, r0
 800228e:	f384 8811 	msr	BASEPRI, r4
 8002292:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 8002296:	fab1 f181 	clz	r1, r1
 800229a:	2005      	movs	r0, #5
 800229c:	0949      	lsrs	r1, r1, #5
 800229e:	f7fe fa87 	bl	80007b0 <_test_assert>
 80022a2:	2800      	cmp	r0, #0
 80022a4:	f47f ae5e 	bne.w	8001f64 <mbox1_execute+0x64>
 80022a8:	2101      	movs	r1, #1
 80022aa:	2058      	movs	r0, #88	; 0x58
 80022ac:	f7ff fdd0 	bl	8001e50 <chMBPostAhead.constprop.18>
 80022b0:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 80022b4:	fab1 f181 	clz	r1, r1
 80022b8:	0949      	lsrs	r1, r1, #5
 80022ba:	2006      	movs	r0, #6
 80022bc:	f7fe fa78 	bl	80007b0 <_test_assert>
 80022c0:	4604      	mov	r4, r0
 80022c2:	2800      	cmp	r0, #0
 80022c4:	f47f ae4e 	bne.w	8001f64 <mbox1_execute+0x64>
 80022c8:	f386 8811 	msr	BASEPRI, r6
 80022cc:	2058      	movs	r0, #88	; 0x58
 80022ce:	f7fe febf 	bl	8001050 <chMBPostAheadI.constprop.17>
 80022d2:	4601      	mov	r1, r0
 80022d4:	f384 8811 	msr	BASEPRI, r4
 80022d8:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 80022dc:	fab1 f181 	clz	r1, r1
 80022e0:	2007      	movs	r0, #7
 80022e2:	0949      	lsrs	r1, r1, #5
 80022e4:	f7fe fa64 	bl	80007b0 <_test_assert>
 80022e8:	4604      	mov	r4, r0
 80022ea:	2800      	cmp	r0, #0
 80022ec:	f47f ae3a 	bne.w	8001f64 <mbox1_execute+0x64>
 80022f0:	f386 8811 	msr	BASEPRI, r6
 80022f4:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80022f6:	fab1 f181 	clz	r1, r1
 80022fa:	0949      	lsrs	r1, r1, #5
 80022fc:	2008      	movs	r0, #8
 80022fe:	f7fe fa57 	bl	80007b0 <_test_assert>
 8002302:	4607      	mov	r7, r0
 8002304:	b110      	cbz	r0, 800230c <mbox1_execute+0x40c>
 8002306:	f384 8811 	msr	BASEPRI, r4
 800230a:	e62b      	b.n	8001f64 <mbox1_execute+0x64>
 800230c:	f380 8811 	msr	BASEPRI, r0
 8002310:	f386 8811 	msr	BASEPRI, r6
 8002314:	69a9      	ldr	r1, [r5, #24]
 8002316:	f1a1 0e05 	sub.w	lr, r1, #5
 800231a:	f1de 0100 	rsbs	r1, lr, #0
 800231e:	eb41 010e 	adc.w	r1, r1, lr
 8002322:	2009      	movs	r0, #9
 8002324:	f7fe fa44 	bl	80007b0 <_test_assert>
 8002328:	b110      	cbz	r0, 8002330 <mbox1_execute+0x430>
 800232a:	f387 8811 	msr	BASEPRI, r7
 800232e:	e619      	b.n	8001f64 <mbox1_execute+0x64>
 8002330:	f380 8811 	msr	BASEPRI, r0
 8002334:	f386 8811 	msr	BASEPRI, r6
 8002338:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800233c:	eba1 0c03 	sub.w	ip, r1, r3
 8002340:	f1dc 0100 	rsbs	r1, ip, #0
 8002344:	f04f 000a 	mov.w	r0, #10
 8002348:	eb41 010c 	adc.w	r1, r1, ip
 800234c:	f7fe fa30 	bl	80007b0 <_test_assert>
 8002350:	2300      	movs	r3, #0
 8002352:	2800      	cmp	r0, #0
 8002354:	f47f af78 	bne.w	8002248 <mbox1_execute+0x348>
 8002358:	f383 8811 	msr	BASEPRI, r3
 800235c:	2405      	movs	r4, #5
 800235e:	e005      	b.n	800236c <mbox1_execute+0x46c>
 8002360:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8002364:	f7fe fa3c 	bl	80007e0 <test_emit_token>
 8002368:	3c01      	subs	r4, #1
 800236a:	d00d      	beq.n	8002388 <mbox1_execute+0x488>
 800236c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002370:	a801      	add	r0, sp, #4
 8002372:	f7ff fd9d 	bl	8001eb0 <chMBFetch.constprop.16>
 8002376:	fab0 f180 	clz	r1, r0
 800237a:	0949      	lsrs	r1, r1, #5
 800237c:	200b      	movs	r0, #11
 800237e:	f7fe fa17 	bl	80007b0 <_test_assert>
 8002382:	2800      	cmp	r0, #0
 8002384:	d0ec      	beq.n	8002360 <mbox1_execute+0x460>
 8002386:	e5ed      	b.n	8001f64 <mbox1_execute+0x64>
 8002388:	4944      	ldr	r1, [pc, #272]	; (800249c <mbox1_execute+0x59c>)
 800238a:	200c      	movs	r0, #12
 800238c:	f7fe f9e8 	bl	8000760 <_test_assert_sequence>
 8002390:	2800      	cmp	r0, #0
 8002392:	f47f ade7 	bne.w	8001f64 <mbox1_execute+0x64>
 8002396:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800239a:	2047      	movs	r0, #71	; 0x47
 800239c:	f7ff fd30 	bl	8001e00 <chMBPost.constprop.20>
 80023a0:	fab0 f180 	clz	r1, r0
 80023a4:	0949      	lsrs	r1, r1, #5
 80023a6:	200d      	movs	r0, #13
 80023a8:	f7fe fa02 	bl	80007b0 <_test_assert>
 80023ac:	2800      	cmp	r0, #0
 80023ae:	f47f add9 	bne.w	8001f64 <mbox1_execute+0x64>
 80023b2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80023b6:	a801      	add	r0, sp, #4
 80023b8:	f7ff fd7a 	bl	8001eb0 <chMBFetch.constprop.16>
 80023bc:	fab0 f180 	clz	r1, r0
 80023c0:	0949      	lsrs	r1, r1, #5
 80023c2:	200e      	movs	r0, #14
 80023c4:	f7fe f9f4 	bl	80007b0 <_test_assert>
 80023c8:	2800      	cmp	r0, #0
 80023ca:	f47f adcb 	bne.w	8001f64 <mbox1_execute+0x64>
 80023ce:	6829      	ldr	r1, [r5, #0]
 80023d0:	68ab      	ldr	r3, [r5, #8]
 80023d2:	1acf      	subs	r7, r1, r3
 80023d4:	4279      	negs	r1, r7
 80023d6:	4179      	adcs	r1, r7
 80023d8:	200f      	movs	r0, #15
 80023da:	f7fe f9e9 	bl	80007b0 <_test_assert>
 80023de:	2800      	cmp	r0, #0
 80023e0:	f47f adc0 	bne.w	8001f64 <mbox1_execute+0x64>
 80023e4:	6829      	ldr	r1, [r5, #0]
 80023e6:	68eb      	ldr	r3, [r5, #12]
 80023e8:	1ace      	subs	r6, r1, r3
 80023ea:	4271      	negs	r1, r6
 80023ec:	4171      	adcs	r1, r6
 80023ee:	2010      	movs	r0, #16
 80023f0:	f7fe f9de 	bl	80007b0 <_test_assert>
 80023f4:	2800      	cmp	r0, #0
 80023f6:	f47f adb5 	bne.w	8001f64 <mbox1_execute+0x64>
 80023fa:	2101      	movs	r1, #1
 80023fc:	a801      	add	r0, sp, #4
 80023fe:	f7ff fd57 	bl	8001eb0 <chMBFetch.constprop.16>
 8002402:	3001      	adds	r0, #1
 8002404:	4241      	negs	r1, r0
 8002406:	4141      	adcs	r1, r0
 8002408:	2011      	movs	r0, #17
 800240a:	f7fe f9d1 	bl	80007b0 <_test_assert>
 800240e:	2800      	cmp	r0, #0
 8002410:	f47f ada8 	bne.w	8001f64 <mbox1_execute+0x64>
 8002414:	2620      	movs	r6, #32
 8002416:	f386 8811 	msr	BASEPRI, r6
 800241a:	a801      	add	r0, sp, #4
 800241c:	f7fe fe38 	bl	8001090 <chMBFetchI.constprop.15>
 8002420:	4601      	mov	r1, r0
 8002422:	f384 8811 	msr	BASEPRI, r4
 8002426:	1c4a      	adds	r2, r1, #1
 8002428:	4251      	negs	r1, r2
 800242a:	4151      	adcs	r1, r2
 800242c:	2012      	movs	r0, #18
 800242e:	f7fe f9bf 	bl	80007b0 <_test_assert>
 8002432:	2800      	cmp	r0, #0
 8002434:	f47f ad96 	bne.w	8001f64 <mbox1_execute+0x64>
 8002438:	f386 8811 	msr	BASEPRI, r6
 800243c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800243e:	1f4b      	subs	r3, r1, #5
 8002440:	4259      	negs	r1, r3
 8002442:	4159      	adcs	r1, r3
 8002444:	2013      	movs	r0, #19
 8002446:	f7fe f9b3 	bl	80007b0 <_test_assert>
 800244a:	2800      	cmp	r0, #0
 800244c:	f47f aefb 	bne.w	8002246 <mbox1_execute+0x346>
 8002450:	2700      	movs	r7, #0
 8002452:	f387 8811 	msr	BASEPRI, r7
 8002456:	2420      	movs	r4, #32
 8002458:	f384 8811 	msr	BASEPRI, r4
 800245c:	69a9      	ldr	r1, [r5, #24]
 800245e:	fab1 f181 	clz	r1, r1
 8002462:	0949      	lsrs	r1, r1, #5
 8002464:	2014      	movs	r0, #20
 8002466:	f7fe f9a3 	bl	80007b0 <_test_assert>
 800246a:	4606      	mov	r6, r0
 800246c:	2800      	cmp	r0, #0
 800246e:	f47f af5c 	bne.w	800232a <mbox1_execute+0x42a>
 8002472:	f380 8811 	msr	BASEPRI, r0
 8002476:	f384 8811 	msr	BASEPRI, r4
 800247a:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800247e:	eba1 0e03 	sub.w	lr, r1, r3
 8002482:	f1de 0100 	rsbs	r1, lr, #0
 8002486:	eb41 010e 	adc.w	r1, r1, lr
 800248a:	2015      	movs	r0, #21
 800248c:	f7fe f990 	bl	80007b0 <_test_assert>
 8002490:	2800      	cmp	r0, #0
 8002492:	f43f ad69 	beq.w	8001f68 <mbox1_execute+0x68>
 8002496:	f386 8811 	msr	BASEPRI, r6
 800249a:	e563      	b.n	8001f64 <mbox1_execute+0x64>
 800249c:	080060c0 	.word	0x080060c0

080024a0 <chThdEnqueueTimeoutS>:
 80024a0:	b161      	cbz	r1, 80024bc <chThdEnqueueTimeoutS+0x1c>
 80024a2:	4b08      	ldr	r3, [pc, #32]	; (80024c4 <chThdEnqueueTimeoutS+0x24>)
 80024a4:	699b      	ldr	r3, [r3, #24]
 80024a6:	b410      	push	{r4}
 80024a8:	6018      	str	r0, [r3, #0]
 80024aa:	6844      	ldr	r4, [r0, #4]
 80024ac:	605c      	str	r4, [r3, #4]
 80024ae:	4602      	mov	r2, r0
 80024b0:	6023      	str	r3, [r4, #0]
 80024b2:	2004      	movs	r0, #4
 80024b4:	6053      	str	r3, [r2, #4]
 80024b6:	bc10      	pop	{r4}
 80024b8:	f7ff bb8a 	b.w	8001bd0 <chSchGoSleepTimeoutS>
 80024bc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80024c0:	4770      	bx	lr
 80024c2:	bf00      	nop
 80024c4:	20000930 	.word	0x20000930
	...

080024d0 <chOQWriteTimeout>:
 80024d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024d4:	b083      	sub	sp, #12
 80024d6:	4604      	mov	r4, r0
 80024d8:	460d      	mov	r5, r1
 80024da:	4616      	mov	r6, r2
 80024dc:	9301      	str	r3, [sp, #4]
 80024de:	f8d0 801c 	ldr.w	r8, [r0, #28]
 80024e2:	f04f 0920 	mov.w	r9, #32
 80024e6:	f389 8811 	msr	BASEPRI, r9
 80024ea:	2700      	movs	r7, #0
 80024ec:	46ba      	mov	sl, r7
 80024ee:	68a3      	ldr	r3, [r4, #8]
 80024f0:	f105 0b01 	add.w	fp, r5, #1
 80024f4:	1e59      	subs	r1, r3, #1
 80024f6:	4620      	mov	r0, r4
 80024f8:	b1fb      	cbz	r3, 800253a <chOQWriteTimeout+0x6a>
 80024fa:	6963      	ldr	r3, [r4, #20]
 80024fc:	60a1      	str	r1, [r4, #8]
 80024fe:	1c59      	adds	r1, r3, #1
 8002500:	6161      	str	r1, [r4, #20]
 8002502:	7829      	ldrb	r1, [r5, #0]
 8002504:	7019      	strb	r1, [r3, #0]
 8002506:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 800250a:	4299      	cmp	r1, r3
 800250c:	bf24      	itt	cs
 800250e:	68e3      	ldrcs	r3, [r4, #12]
 8002510:	6163      	strcs	r3, [r4, #20]
 8002512:	f1b8 0f00 	cmp.w	r8, #0
 8002516:	d000      	beq.n	800251a <chOQWriteTimeout+0x4a>
 8002518:	47c0      	blx	r8
 800251a:	f38a 8811 	msr	BASEPRI, sl
 800251e:	3e01      	subs	r6, #1
 8002520:	f107 0701 	add.w	r7, r7, #1
 8002524:	d013      	beq.n	800254e <chOQWriteTimeout+0x7e>
 8002526:	f389 8811 	msr	BASEPRI, r9
 800252a:	68a3      	ldr	r3, [r4, #8]
 800252c:	465d      	mov	r5, fp
 800252e:	1e59      	subs	r1, r3, #1
 8002530:	f105 0b01 	add.w	fp, r5, #1
 8002534:	4620      	mov	r0, r4
 8002536:	2b00      	cmp	r3, #0
 8002538:	d1df      	bne.n	80024fa <chOQWriteTimeout+0x2a>
 800253a:	9901      	ldr	r1, [sp, #4]
 800253c:	9300      	str	r3, [sp, #0]
 800253e:	4620      	mov	r0, r4
 8002540:	f7ff ffae 	bl	80024a0 <chThdEnqueueTimeoutS>
 8002544:	9b00      	ldr	r3, [sp, #0]
 8002546:	2800      	cmp	r0, #0
 8002548:	d0d1      	beq.n	80024ee <chOQWriteTimeout+0x1e>
 800254a:	f383 8811 	msr	BASEPRI, r3
 800254e:	4638      	mov	r0, r7
 8002550:	b003      	add	sp, #12
 8002552:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002556:	bf00      	nop
	...

08002560 <writet>:
 8002560:	3030      	adds	r0, #48	; 0x30
 8002562:	f7ff bfb5 	b.w	80024d0 <chOQWriteTimeout>
 8002566:	bf00      	nop
	...

08002570 <write>:
 8002570:	3030      	adds	r0, #48	; 0x30
 8002572:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002576:	f7ff bfab 	b.w	80024d0 <chOQWriteTimeout>
 800257a:	bf00      	nop
 800257c:	0000      	movs	r0, r0
	...

08002580 <chOQPutTimeout>:
 8002580:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002582:	4604      	mov	r4, r0
 8002584:	460f      	mov	r7, r1
 8002586:	4616      	mov	r6, r2
 8002588:	2320      	movs	r3, #32
 800258a:	f383 8811 	msr	BASEPRI, r3
 800258e:	e003      	b.n	8002598 <chOQPutTimeout+0x18>
 8002590:	f7ff ff86 	bl	80024a0 <chThdEnqueueTimeoutS>
 8002594:	2800      	cmp	r0, #0
 8002596:	db17      	blt.n	80025c8 <chOQPutTimeout+0x48>
 8002598:	68a5      	ldr	r5, [r4, #8]
 800259a:	4631      	mov	r1, r6
 800259c:	4620      	mov	r0, r4
 800259e:	2d00      	cmp	r5, #0
 80025a0:	d0f6      	beq.n	8002590 <chOQPutTimeout+0x10>
 80025a2:	6963      	ldr	r3, [r4, #20]
 80025a4:	3d01      	subs	r5, #1
 80025a6:	1c5a      	adds	r2, r3, #1
 80025a8:	6162      	str	r2, [r4, #20]
 80025aa:	60a5      	str	r5, [r4, #8]
 80025ac:	701f      	strb	r7, [r3, #0]
 80025ae:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 80025b2:	429a      	cmp	r2, r3
 80025b4:	bf24      	itt	cs
 80025b6:	68e3      	ldrcs	r3, [r4, #12]
 80025b8:	6163      	strcs	r3, [r4, #20]
 80025ba:	69e3      	ldr	r3, [r4, #28]
 80025bc:	b103      	cbz	r3, 80025c0 <chOQPutTimeout+0x40>
 80025be:	4798      	blx	r3
 80025c0:	2000      	movs	r0, #0
 80025c2:	f380 8811 	msr	BASEPRI, r0
 80025c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80025c8:	f385 8811 	msr	BASEPRI, r5
 80025cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80025ce:	bf00      	nop

080025d0 <thread2.lto_priv.77>:
 80025d0:	22c8      	movs	r2, #200	; 0xc8
 80025d2:	2100      	movs	r1, #0
 80025d4:	4801      	ldr	r0, [pc, #4]	; (80025dc <thread2.lto_priv.77+0xc>)
 80025d6:	f7ff bfd3 	b.w	8002580 <chOQPutTimeout>
 80025da:	bf00      	nop
 80025dc:	20000888 	.word	0x20000888

080025e0 <putt>:
 80025e0:	3030      	adds	r0, #48	; 0x30
 80025e2:	f7ff bfcd 	b.w	8002580 <chOQPutTimeout>
 80025e6:	bf00      	nop
	...

080025f0 <put>:
 80025f0:	3030      	adds	r0, #48	; 0x30
 80025f2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80025f6:	f7ff bfc3 	b.w	8002580 <chOQPutTimeout>
 80025fa:	bf00      	nop
 80025fc:	0000      	movs	r0, r0
	...

08002600 <chIQReadTimeout>:
 8002600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002604:	4604      	mov	r4, r0
 8002606:	b083      	sub	sp, #12
 8002608:	4689      	mov	r9, r1
 800260a:	4693      	mov	fp, r2
 800260c:	461d      	mov	r5, r3
 800260e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8002612:	2720      	movs	r7, #32
 8002614:	f387 8811 	msr	BASEPRI, r7
 8002618:	2600      	movs	r6, #0
 800261a:	9701      	str	r7, [sp, #4]
 800261c:	46b2      	mov	sl, r6
 800261e:	f1b8 0f00 	cmp.w	r8, #0
 8002622:	d005      	beq.n	8002630 <chIQReadTimeout+0x30>
 8002624:	4620      	mov	r0, r4
 8002626:	47c0      	blx	r8
 8002628:	e002      	b.n	8002630 <chIQReadTimeout+0x30>
 800262a:	f7ff ff39 	bl	80024a0 <chThdEnqueueTimeoutS>
 800262e:	b9d8      	cbnz	r0, 8002668 <chIQReadTimeout+0x68>
 8002630:	68a7      	ldr	r7, [r4, #8]
 8002632:	4629      	mov	r1, r5
 8002634:	4620      	mov	r0, r4
 8002636:	2f00      	cmp	r7, #0
 8002638:	d0f7      	beq.n	800262a <chIQReadTimeout+0x2a>
 800263a:	69a2      	ldr	r2, [r4, #24]
 800263c:	3f01      	subs	r7, #1
 800263e:	1c51      	adds	r1, r2, #1
 8002640:	61a1      	str	r1, [r4, #24]
 8002642:	60a7      	str	r7, [r4, #8]
 8002644:	7813      	ldrb	r3, [r2, #0]
 8002646:	f809 3b01 	strb.w	r3, [r9], #1
 800264a:	6923      	ldr	r3, [r4, #16]
 800264c:	69a2      	ldr	r2, [r4, #24]
 800264e:	429a      	cmp	r2, r3
 8002650:	bf24      	itt	cs
 8002652:	68e3      	ldrcs	r3, [r4, #12]
 8002654:	61a3      	strcs	r3, [r4, #24]
 8002656:	f38a 8811 	msr	BASEPRI, sl
 800265a:	3601      	adds	r6, #1
 800265c:	45b3      	cmp	fp, r6
 800265e:	d005      	beq.n	800266c <chIQReadTimeout+0x6c>
 8002660:	9b01      	ldr	r3, [sp, #4]
 8002662:	f383 8811 	msr	BASEPRI, r3
 8002666:	e7da      	b.n	800261e <chIQReadTimeout+0x1e>
 8002668:	f387 8811 	msr	BASEPRI, r7
 800266c:	4630      	mov	r0, r6
 800266e:	b003      	add	sp, #12
 8002670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08002680 <readt>:
 8002680:	300c      	adds	r0, #12
 8002682:	f7ff bfbd 	b.w	8002600 <chIQReadTimeout>
 8002686:	bf00      	nop
	...

08002690 <read>:
 8002690:	300c      	adds	r0, #12
 8002692:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002696:	f7ff bfb3 	b.w	8002600 <chIQReadTimeout>
 800269a:	bf00      	nop
 800269c:	0000      	movs	r0, r0
	...

080026a0 <chIQGetTimeout>:
 80026a0:	b570      	push	{r4, r5, r6, lr}
 80026a2:	2320      	movs	r3, #32
 80026a4:	460e      	mov	r6, r1
 80026a6:	4604      	mov	r4, r0
 80026a8:	f383 8811 	msr	BASEPRI, r3
 80026ac:	69c3      	ldr	r3, [r0, #28]
 80026ae:	b12b      	cbz	r3, 80026bc <chIQGetTimeout+0x1c>
 80026b0:	4798      	blx	r3
 80026b2:	e003      	b.n	80026bc <chIQGetTimeout+0x1c>
 80026b4:	f7ff fef4 	bl	80024a0 <chThdEnqueueTimeoutS>
 80026b8:	2800      	cmp	r0, #0
 80026ba:	db15      	blt.n	80026e8 <chIQGetTimeout+0x48>
 80026bc:	68a5      	ldr	r5, [r4, #8]
 80026be:	4631      	mov	r1, r6
 80026c0:	4620      	mov	r0, r4
 80026c2:	2d00      	cmp	r5, #0
 80026c4:	d0f6      	beq.n	80026b4 <chIQGetTimeout+0x14>
 80026c6:	69a2      	ldr	r2, [r4, #24]
 80026c8:	6921      	ldr	r1, [r4, #16]
 80026ca:	1c53      	adds	r3, r2, #1
 80026cc:	428b      	cmp	r3, r1
 80026ce:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 80026d2:	61a3      	str	r3, [r4, #24]
 80026d4:	60a5      	str	r5, [r4, #8]
 80026d6:	bf28      	it	cs
 80026d8:	68e3      	ldrcs	r3, [r4, #12]
 80026da:	7810      	ldrb	r0, [r2, #0]
 80026dc:	bf28      	it	cs
 80026de:	61a3      	strcs	r3, [r4, #24]
 80026e0:	2300      	movs	r3, #0
 80026e2:	f383 8811 	msr	BASEPRI, r3
 80026e6:	bd70      	pop	{r4, r5, r6, pc}
 80026e8:	f385 8811 	msr	BASEPRI, r5
 80026ec:	bd70      	pop	{r4, r5, r6, pc}
 80026ee:	bf00      	nop

080026f0 <thread1.lto_priv.71>:
 80026f0:	21c8      	movs	r1, #200	; 0xc8
 80026f2:	4801      	ldr	r0, [pc, #4]	; (80026f8 <thread1.lto_priv.71+0x8>)
 80026f4:	f7ff bfd4 	b.w	80026a0 <chIQGetTimeout>
 80026f8:	20000810 	.word	0x20000810
 80026fc:	00000000 	.word	0x00000000

08002700 <gett>:
 8002700:	300c      	adds	r0, #12
 8002702:	f7ff bfcd 	b.w	80026a0 <chIQGetTimeout>
 8002706:	bf00      	nop
	...

08002710 <get>:
 8002710:	300c      	adds	r0, #12
 8002712:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002716:	f7ff bfc3 	b.w	80026a0 <chIQGetTimeout>
 800271a:	bf00      	nop
 800271c:	0000      	movs	r0, r0
	...

08002720 <chThdSleep>:
 8002720:	b508      	push	{r3, lr}
 8002722:	4601      	mov	r1, r0
 8002724:	2320      	movs	r3, #32
 8002726:	f383 8811 	msr	BASEPRI, r3
 800272a:	2008      	movs	r0, #8
 800272c:	f7ff fa50 	bl	8001bd0 <chSchGoSleepTimeoutS>
 8002730:	2300      	movs	r3, #0
 8002732:	f383 8811 	msr	BASEPRI, r3
 8002736:	bd08      	pop	{r3, pc}
	...

08002740 <Thread1>:
 8002740:	b508      	push	{r3, lr}
 8002742:	4b08      	ldr	r3, [pc, #32]	; (8002764 <Thread1+0x24>)
 8002744:	4a08      	ldr	r2, [pc, #32]	; (8002768 <Thread1+0x28>)
 8002746:	699b      	ldr	r3, [r3, #24]
 8002748:	4c08      	ldr	r4, [pc, #32]	; (800276c <Thread1+0x2c>)
 800274a:	619a      	str	r2, [r3, #24]
 800274c:	2540      	movs	r5, #64	; 0x40
 800274e:	462e      	mov	r6, r5
 8002750:	8326      	strh	r6, [r4, #24]
 8002752:	20fa      	movs	r0, #250	; 0xfa
 8002754:	f7ff ffe4 	bl	8002720 <chThdSleep>
 8002758:	8365      	strh	r5, [r4, #26]
 800275a:	20fa      	movs	r0, #250	; 0xfa
 800275c:	f7ff ffe0 	bl	8002720 <chThdSleep>
 8002760:	e7f6      	b.n	8002750 <Thread1+0x10>
 8002762:	bf00      	nop
 8002764:	20000930 	.word	0x20000930
 8002768:	08005cd0 	.word	0x08005cd0
 800276c:	40020400 	.word	0x40020400

08002770 <Thread2>:
 8002770:	b508      	push	{r3, lr}
 8002772:	4b09      	ldr	r3, [pc, #36]	; (8002798 <Thread2+0x28>)
 8002774:	4a09      	ldr	r2, [pc, #36]	; (800279c <Thread2+0x2c>)
 8002776:	699b      	ldr	r3, [r3, #24]
 8002778:	4c09      	ldr	r4, [pc, #36]	; (80027a0 <Thread2+0x30>)
 800277a:	619a      	str	r2, [r3, #24]
 800277c:	2580      	movs	r5, #128	; 0x80
 800277e:	462e      	mov	r6, r5
 8002780:	8326      	strh	r6, [r4, #24]
 8002782:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002786:	f7ff ffcb 	bl	8002720 <chThdSleep>
 800278a:	8365      	strh	r5, [r4, #26]
 800278c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002790:	f7ff ffc6 	bl	8002720 <chThdSleep>
 8002794:	e7f4      	b.n	8002780 <Thread2+0x10>
 8002796:	bf00      	nop
 8002798:	20000930 	.word	0x20000930
 800279c:	08005cd0 	.word	0x08005cd0
 80027a0:	40020400 	.word	0x40020400
	...

080027b0 <sys1_execute>:
 80027b0:	b510      	push	{r4, lr}
 80027b2:	b086      	sub	sp, #24
 80027b4:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 80027b8:	b91b      	cbnz	r3, 80027c2 <sys1_execute+0x12>
 80027ba:	f7fe fd41 	bl	8001240 <chSysGetStatusAndLockX.part.2>
 80027be:	f7fe ffdf 	bl	8001780 <chSysRestoreStatusX.part.3>
 80027c2:	2320      	movs	r3, #32
 80027c4:	f383 8811 	msr	BASEPRI, r3
 80027c8:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 80027cc:	b91b      	cbnz	r3, 80027d6 <sys1_execute+0x26>
 80027ce:	f7fe fd37 	bl	8001240 <chSysGetStatusAndLockX.part.2>
 80027d2:	f7fe ffd5 	bl	8001780 <chSysRestoreStatusX.part.3>
 80027d6:	2300      	movs	r3, #0
 80027d8:	f383 8811 	msr	BASEPRI, r3
 80027dc:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 80027e0:	b913      	cbnz	r3, 80027e8 <sys1_execute+0x38>
 80027e2:	2320      	movs	r3, #32
 80027e4:	f383 8811 	msr	BASEPRI, r3
 80027e8:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 80027ec:	b913      	cbnz	r3, 80027f4 <sys1_execute+0x44>
 80027ee:	2320      	movs	r3, #32
 80027f0:	f383 8811 	msr	BASEPRI, r3
 80027f4:	2300      	movs	r3, #0
 80027f6:	f383 8811 	msr	BASEPRI, r3
 80027fa:	2220      	movs	r2, #32
 80027fc:	f382 8811 	msr	BASEPRI, r2
 8002800:	f3ef 8212 	mrs	r2, BASEPRI_MAX
 8002804:	b10a      	cbz	r2, 800280a <sys1_execute+0x5a>
 8002806:	f383 8811 	msr	BASEPRI, r3
 800280a:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800280e:	b113      	cbz	r3, 8002816 <sys1_execute+0x66>
 8002810:	2300      	movs	r3, #0
 8002812:	f383 8811 	msr	BASEPRI, r3
 8002816:	2300      	movs	r3, #0
 8002818:	9304      	str	r3, [sp, #16]
 800281a:	2320      	movs	r3, #32
 800281c:	f383 8811 	msr	BASEPRI, r3
 8002820:	9b04      	ldr	r3, [sp, #16]
 8002822:	ac01      	add	r4, sp, #4
 8002824:	b113      	cbz	r3, 800282c <sys1_execute+0x7c>
 8002826:	4620      	mov	r0, r4
 8002828:	f7fe fc6a 	bl	8001100 <chVTDoResetI>
 800282c:	4620      	mov	r0, r4
 800282e:	2300      	movs	r3, #0
 8002830:	4a0b      	ldr	r2, [pc, #44]	; (8002860 <sys1_execute+0xb0>)
 8002832:	2101      	movs	r1, #1
 8002834:	f7fe fca4 	bl	8001180 <chVTDoSetI>
 8002838:	2400      	movs	r4, #0
 800283a:	f384 8811 	msr	BASEPRI, r4
 800283e:	200a      	movs	r0, #10
 8002840:	f7ff ff6e 	bl	8002720 <chThdSleep>
 8002844:	2320      	movs	r3, #32
 8002846:	f383 8811 	msr	BASEPRI, r3
 800284a:	9904      	ldr	r1, [sp, #16]
 800284c:	f384 8811 	msr	BASEPRI, r4
 8002850:	fab1 f181 	clz	r1, r1
 8002854:	0949      	lsrs	r1, r1, #5
 8002856:	2001      	movs	r0, #1
 8002858:	f7fd ffaa 	bl	80007b0 <_test_assert>
 800285c:	b006      	add	sp, #24
 800285e:	bd10      	pop	{r4, pc}
 8002860:	080017a1 	.word	0x080017a1
	...

08002870 <thread1.lto_priv.70>:
 8002870:	b510      	push	{r4, lr}
 8002872:	4604      	mov	r4, r0
 8002874:	2032      	movs	r0, #50	; 0x32
 8002876:	f7ff ff53 	bl	8002720 <chThdSleep>
 800287a:	2320      	movs	r3, #32
 800287c:	f383 8811 	msr	BASEPRI, r3
 8002880:	2101      	movs	r1, #1
 8002882:	4620      	mov	r0, r4
 8002884:	f7fe faac 	bl	8000de0 <chEvtSignalI>
 8002888:	f7fe fe72 	bl	8001570 <chSchRescheduleS>
 800288c:	2300      	movs	r3, #0
 800288e:	f383 8811 	msr	BASEPRI, r3
 8002892:	bd10      	pop	{r4, pc}
	...

080028a0 <thread2.lto_priv.76>:
 80028a0:	b538      	push	{r3, r4, r5, lr}
 80028a2:	2520      	movs	r5, #32
 80028a4:	f385 8811 	msr	BASEPRI, r5
 80028a8:	2100      	movs	r1, #0
 80028aa:	480b      	ldr	r0, [pc, #44]	; (80028d8 <thread2.lto_priv.76+0x38>)
 80028ac:	f7fe fab0 	bl	8000e10 <chEvtBroadcastFlagsI>
 80028b0:	2400      	movs	r4, #0
 80028b2:	f7fe fe5d 	bl	8001570 <chSchRescheduleS>
 80028b6:	f384 8811 	msr	BASEPRI, r4
 80028ba:	2032      	movs	r0, #50	; 0x32
 80028bc:	f7ff ff30 	bl	8002720 <chThdSleep>
 80028c0:	f385 8811 	msr	BASEPRI, r5
 80028c4:	4805      	ldr	r0, [pc, #20]	; (80028dc <thread2.lto_priv.76+0x3c>)
 80028c6:	4621      	mov	r1, r4
 80028c8:	f7fe faa2 	bl	8000e10 <chEvtBroadcastFlagsI>
 80028cc:	f7fe fe50 	bl	8001570 <chSchRescheduleS>
 80028d0:	f384 8811 	msr	BASEPRI, r4
 80028d4:	bd38      	pop	{r3, r4, r5, pc}
 80028d6:	bf00      	nop
 80028d8:	20000808 	.word	0x20000808
 80028dc:	2000080c 	.word	0x2000080c

080028e0 <thread2.lto_priv.75>:
 80028e0:	b508      	push	{r3, lr}
 80028e2:	2032      	movs	r0, #50	; 0x32
 80028e4:	f7ff ff1c 	bl	8002720 <chThdSleep>
 80028e8:	2320      	movs	r3, #32
 80028ea:	f383 8811 	msr	BASEPRI, r3
 80028ee:	4804      	ldr	r0, [pc, #16]	; (8002900 <thread2.lto_priv.75+0x20>)
 80028f0:	f7fe fb7e 	bl	8000ff0 <chSemSignalI>
 80028f4:	f7fe fe3c 	bl	8001570 <chSchRescheduleS>
 80028f8:	2300      	movs	r3, #0
 80028fa:	f383 8811 	msr	BASEPRI, r3
 80028fe:	bd08      	pop	{r3, pc}
 8002900:	200008ac 	.word	0x200008ac
	...

08002910 <test_wait_tick>:
 8002910:	b508      	push	{r3, lr}
 8002912:	2001      	movs	r0, #1
 8002914:	f7ff ff04 	bl	8002720 <chThdSleep>
 8002918:	2320      	movs	r3, #32
 800291a:	f383 8811 	msr	BASEPRI, r3
 800291e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002922:	2300      	movs	r3, #0
 8002924:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8002926:	f383 8811 	msr	BASEPRI, r3
 800292a:	b280      	uxth	r0, r0
 800292c:	bd08      	pop	{r3, pc}
 800292e:	bf00      	nop

08002930 <bmk10_execute>:
 8002930:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002934:	f7ff ffec 	bl	8002910 <test_wait_tick>
 8002938:	f7fe fc62 	bl	8001200 <test_start_timer.constprop.1>
 800293c:	2400      	movs	r4, #0
 800293e:	f8df a070 	ldr.w	sl, [pc, #112]	; 80029b0 <bmk10_execute+0x80>
 8002942:	4f16      	ldr	r7, [pc, #88]	; (800299c <bmk10_execute+0x6c>)
 8002944:	4e16      	ldr	r6, [pc, #88]	; (80029a0 <bmk10_execute+0x70>)
 8002946:	4d17      	ldr	r5, [pc, #92]	; (80029a4 <bmk10_execute+0x74>)
 8002948:	46a1      	mov	r9, r4
 800294a:	f04f 0820 	mov.w	r8, #32
 800294e:	f388 8811 	msr	BASEPRI, r8
 8002952:	2300      	movs	r3, #0
 8002954:	463a      	mov	r2, r7
 8002956:	4630      	mov	r0, r6
 8002958:	2101      	movs	r1, #1
 800295a:	f7fe fc11 	bl	8001180 <chVTDoSetI>
 800295e:	463a      	mov	r2, r7
 8002960:	2300      	movs	r3, #0
 8002962:	f242 7110 	movw	r1, #10000	; 0x2710
 8002966:	4628      	mov	r0, r5
 8002968:	f7fe fc0a 	bl	8001180 <chVTDoSetI>
 800296c:	4630      	mov	r0, r6
 800296e:	f7fe fbc7 	bl	8001100 <chVTDoResetI>
 8002972:	4628      	mov	r0, r5
 8002974:	f7fe fbc4 	bl	8001100 <chVTDoResetI>
 8002978:	f389 8811 	msr	BASEPRI, r9
 800297c:	f89a 3000 	ldrb.w	r3, [sl]
 8002980:	3401      	adds	r4, #1
 8002982:	2b00      	cmp	r3, #0
 8002984:	d0e3      	beq.n	800294e <bmk10_execute+0x1e>
 8002986:	4808      	ldr	r0, [pc, #32]	; (80029a8 <bmk10_execute+0x78>)
 8002988:	f7fd ff82 	bl	8000890 <test_print>
 800298c:	0060      	lsls	r0, r4, #1
 800298e:	f7fd fe87 	bl	80006a0 <test_printn>
 8002992:	4806      	ldr	r0, [pc, #24]	; (80029ac <bmk10_execute+0x7c>)
 8002994:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002998:	f7fd bf5a 	b.w	8000850 <test_println>
 800299c:	080003a1 	.word	0x080003a1
 80029a0:	20001208 	.word	0x20001208
 80029a4:	2000121c 	.word	0x2000121c
 80029a8:	08005d00 	.word	0x08005d00
 80029ac:	08005d10 	.word	0x08005d10
 80029b0:	200011c8 	.word	0x200011c8
	...

080029c0 <bmk9_execute>:
 80029c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80029c2:	4b26      	ldr	r3, [pc, #152]	; (8002a5c <bmk9_execute+0x9c>)
 80029c4:	4c26      	ldr	r4, [pc, #152]	; (8002a60 <bmk9_execute+0xa0>)
 80029c6:	4f27      	ldr	r7, [pc, #156]	; (8002a64 <bmk9_execute+0xa4>)
 80029c8:	60e3      	str	r3, [r4, #12]
 80029ca:	f103 0210 	add.w	r2, r3, #16
 80029ce:	2500      	movs	r5, #0
 80029d0:	6122      	str	r2, [r4, #16]
 80029d2:	e9c4 3305 	strd	r3, r3, [r4, #20]
 80029d6:	6024      	str	r4, [r4, #0]
 80029d8:	6064      	str	r4, [r4, #4]
 80029da:	60a5      	str	r5, [r4, #8]
 80029dc:	e9c4 5507 	strd	r5, r5, [r4, #28]
 80029e0:	f7ff ff96 	bl	8002910 <test_wait_tick>
 80029e4:	f7fe fc0c 	bl	8001200 <test_start_timer.constprop.1>
 80029e8:	462e      	mov	r6, r5
 80029ea:	2320      	movs	r3, #32
 80029ec:	f383 8811 	msr	BASEPRI, r3
 80029f0:	2100      	movs	r1, #0
 80029f2:	4620      	mov	r0, r4
 80029f4:	f7fe f9a4 	bl	8000d40 <chIQPutI>
 80029f8:	4620      	mov	r0, r4
 80029fa:	2101      	movs	r1, #1
 80029fc:	f7fe f9a0 	bl	8000d40 <chIQPutI>
 8002a00:	4620      	mov	r0, r4
 8002a02:	2102      	movs	r1, #2
 8002a04:	f7fe f99c 	bl	8000d40 <chIQPutI>
 8002a08:	4620      	mov	r0, r4
 8002a0a:	2103      	movs	r1, #3
 8002a0c:	f7fe f998 	bl	8000d40 <chIQPutI>
 8002a10:	f386 8811 	msr	BASEPRI, r6
 8002a14:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002a18:	4620      	mov	r0, r4
 8002a1a:	f7ff fe41 	bl	80026a0 <chIQGetTimeout>
 8002a1e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002a22:	4620      	mov	r0, r4
 8002a24:	f7ff fe3c 	bl	80026a0 <chIQGetTimeout>
 8002a28:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002a2c:	4620      	mov	r0, r4
 8002a2e:	f7ff fe37 	bl	80026a0 <chIQGetTimeout>
 8002a32:	4620      	mov	r0, r4
 8002a34:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002a38:	f7ff fe32 	bl	80026a0 <chIQGetTimeout>
 8002a3c:	783b      	ldrb	r3, [r7, #0]
 8002a3e:	3501      	adds	r5, #1
 8002a40:	2b00      	cmp	r3, #0
 8002a42:	d0d2      	beq.n	80029ea <bmk9_execute+0x2a>
 8002a44:	4808      	ldr	r0, [pc, #32]	; (8002a68 <bmk9_execute+0xa8>)
 8002a46:	f7fd ff23 	bl	8000890 <test_print>
 8002a4a:	00a8      	lsls	r0, r5, #2
 8002a4c:	f7fd fe28 	bl	80006a0 <test_printn>
 8002a50:	4806      	ldr	r0, [pc, #24]	; (8002a6c <bmk9_execute+0xac>)
 8002a52:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002a56:	f7fd befb 	b.w	8000850 <test_println>
 8002a5a:	bf00      	nop
 8002a5c:	20000ad0 	.word	0x20000ad0
 8002a60:	20000ae0 	.word	0x20000ae0
 8002a64:	200011c8 	.word	0x200011c8
 8002a68:	08005d00 	.word	0x08005d00
 8002a6c:	08005e40 	.word	0x08005e40

08002a70 <bmk6_execute>:
 8002a70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002a74:	4b14      	ldr	r3, [pc, #80]	; (8002ac8 <bmk6_execute+0x58>)
 8002a76:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8002ad8 <bmk6_execute+0x68>
 8002a7a:	699b      	ldr	r3, [r3, #24]
 8002a7c:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8002adc <bmk6_execute+0x6c>
 8002a80:	689d      	ldr	r5, [r3, #8]
 8002a82:	4f12      	ldr	r7, [pc, #72]	; (8002acc <bmk6_execute+0x5c>)
 8002a84:	b083      	sub	sp, #12
 8002a86:	f7ff ff43 	bl	8002910 <test_wait_tick>
 8002a8a:	f7fe fbb9 	bl	8001200 <test_start_timer.constprop.1>
 8002a8e:	2400      	movs	r4, #0
 8002a90:	3501      	adds	r5, #1
 8002a92:	4626      	mov	r6, r4
 8002a94:	4643      	mov	r3, r8
 8002a96:	9600      	str	r6, [sp, #0]
 8002a98:	462a      	mov	r2, r5
 8002a9a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8002a9e:	4638      	mov	r0, r7
 8002aa0:	f7fe ff76 	bl	8001990 <chThdCreateStatic>
 8002aa4:	f899 3000 	ldrb.w	r3, [r9]
 8002aa8:	3401      	adds	r4, #1
 8002aaa:	2b00      	cmp	r3, #0
 8002aac:	d0f2      	beq.n	8002a94 <bmk6_execute+0x24>
 8002aae:	4808      	ldr	r0, [pc, #32]	; (8002ad0 <bmk6_execute+0x60>)
 8002ab0:	f7fd feee 	bl	8000890 <test_print>
 8002ab4:	4620      	mov	r0, r4
 8002ab6:	f7fd fdf3 	bl	80006a0 <test_printn>
 8002aba:	4806      	ldr	r0, [pc, #24]	; (8002ad4 <bmk6_execute+0x64>)
 8002abc:	b003      	add	sp, #12
 8002abe:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002ac2:	f7fd bec5 	b.w	8000850 <test_println>
 8002ac6:	bf00      	nop
 8002ac8:	20000930 	.word	0x20000930
 8002acc:	20000b38 	.word	0x20000b38
 8002ad0:	08005d00 	.word	0x08005d00
 8002ad4:	08005e00 	.word	0x08005e00
 8002ad8:	200011c8 	.word	0x200011c8
 8002adc:	08005c91 	.word	0x08005c91

08002ae0 <thd4_execute>:
 8002ae0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002ae2:	f7ff ff15 	bl	8002910 <test_wait_tick>
 8002ae6:	2620      	movs	r6, #32
 8002ae8:	f386 8811 	msr	BASEPRI, r6
 8002aec:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8002af0:	2300      	movs	r3, #0
 8002af2:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002af4:	b2a4      	uxth	r4, r4
 8002af6:	f383 8811 	msr	BASEPRI, r3
 8002afa:	2064      	movs	r0, #100	; 0x64
 8002afc:	f7ff fe10 	bl	8002720 <chThdSleep>
 8002b00:	f104 0267 	add.w	r2, r4, #103	; 0x67
 8002b04:	f104 0164 	add.w	r1, r4, #100	; 0x64
 8002b08:	b292      	uxth	r2, r2
 8002b0a:	b289      	uxth	r1, r1
 8002b0c:	2001      	movs	r0, #1
 8002b0e:	f7fd fe07 	bl	8000720 <_test_assert_time_window>
 8002b12:	b100      	cbz	r0, 8002b16 <thd4_execute+0x36>
 8002b14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002b16:	f386 8811 	msr	BASEPRI, r6
 8002b1a:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002b1c:	b2a4      	uxth	r4, r4
 8002b1e:	f380 8811 	msr	BASEPRI, r0
 8002b22:	2064      	movs	r0, #100	; 0x64
 8002b24:	f7ff fdfc 	bl	8002720 <chThdSleep>
 8002b28:	f104 0267 	add.w	r2, r4, #103	; 0x67
 8002b2c:	f104 0164 	add.w	r1, r4, #100	; 0x64
 8002b30:	b292      	uxth	r2, r2
 8002b32:	b289      	uxth	r1, r1
 8002b34:	2002      	movs	r0, #2
 8002b36:	f7fd fdf3 	bl	8000720 <_test_assert_time_window>
 8002b3a:	2800      	cmp	r0, #0
 8002b3c:	d1ea      	bne.n	8002b14 <thd4_execute+0x34>
 8002b3e:	f386 8811 	msr	BASEPRI, r6
 8002b42:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002b44:	b2a4      	uxth	r4, r4
 8002b46:	f380 8811 	msr	BASEPRI, r0
 8002b4a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002b4e:	f7ff fde7 	bl	8002720 <chThdSleep>
 8002b52:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8002b56:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8002b5a:	b292      	uxth	r2, r2
 8002b5c:	b289      	uxth	r1, r1
 8002b5e:	2003      	movs	r0, #3
 8002b60:	f7fd fdde 	bl	8000720 <_test_assert_time_window>
 8002b64:	2800      	cmp	r0, #0
 8002b66:	d1d5      	bne.n	8002b14 <thd4_execute+0x34>
 8002b68:	f386 8811 	msr	BASEPRI, r6
 8002b6c:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002b6e:	b2a4      	uxth	r4, r4
 8002b70:	f380 8811 	msr	BASEPRI, r0
 8002b74:	f104 0764 	add.w	r7, r4, #100	; 0x64
 8002b78:	b2bf      	uxth	r7, r7
 8002b7a:	f386 8811 	msr	BASEPRI, r6
 8002b7e:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002b80:	1a79      	subs	r1, r7, r1
 8002b82:	b289      	uxth	r1, r1
 8002b84:	b111      	cbz	r1, 8002b8c <thd4_execute+0xac>
 8002b86:	2008      	movs	r0, #8
 8002b88:	f7ff f822 	bl	8001bd0 <chSchGoSleepTimeoutS>
 8002b8c:	2300      	movs	r3, #0
 8002b8e:	f383 8811 	msr	BASEPRI, r3
 8002b92:	f104 0267 	add.w	r2, r4, #103	; 0x67
 8002b96:	4639      	mov	r1, r7
 8002b98:	b292      	uxth	r2, r2
 8002b9a:	2004      	movs	r0, #4
 8002b9c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002ba0:	f7fd bdbe 	b.w	8000720 <_test_assert_time_window>
	...

08002bb0 <chMsgWait>:
 8002bb0:	b510      	push	{r4, lr}
 8002bb2:	2320      	movs	r3, #32
 8002bb4:	f383 8811 	msr	BASEPRI, r3
 8002bb8:	4c0b      	ldr	r4, [pc, #44]	; (8002be8 <chMsgWait+0x38>)
 8002bba:	69a2      	ldr	r2, [r4, #24]
 8002bbc:	4613      	mov	r3, r2
 8002bbe:	f853 0f28 	ldr.w	r0, [r3, #40]!
 8002bc2:	4298      	cmp	r0, r3
 8002bc4:	d008      	beq.n	8002bd8 <chMsgWait+0x28>
 8002bc6:	6801      	ldr	r1, [r0, #0]
 8002bc8:	6291      	str	r1, [r2, #40]	; 0x28
 8002bca:	220d      	movs	r2, #13
 8002bcc:	604b      	str	r3, [r1, #4]
 8002bce:	2300      	movs	r3, #0
 8002bd0:	7702      	strb	r2, [r0, #28]
 8002bd2:	f383 8811 	msr	BASEPRI, r3
 8002bd6:	bd10      	pop	{r4, pc}
 8002bd8:	200e      	movs	r0, #14
 8002bda:	f7fe ff11 	bl	8001a00 <chSchGoSleepS>
 8002bde:	69a2      	ldr	r2, [r4, #24]
 8002be0:	6a90      	ldr	r0, [r2, #40]	; 0x28
 8002be2:	f102 0328 	add.w	r3, r2, #40	; 0x28
 8002be6:	e7ee      	b.n	8002bc6 <chMsgWait+0x16>
 8002be8:	20000930 	.word	0x20000930
 8002bec:	00000000 	.word	0x00000000

08002bf0 <thread2.lto_priv.78>:
 8002bf0:	b570      	push	{r4, r5, r6, lr}
 8002bf2:	2620      	movs	r6, #32
 8002bf4:	2500      	movs	r5, #0
 8002bf6:	f7ff ffdb 	bl	8002bb0 <chMsgWait>
 8002bfa:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8002bfc:	f386 8811 	msr	BASEPRI, r6
 8002c00:	4621      	mov	r1, r4
 8002c02:	f7fe fde5 	bl	80017d0 <chSchWakeupS>
 8002c06:	f385 8811 	msr	BASEPRI, r5
 8002c0a:	2c00      	cmp	r4, #0
 8002c0c:	d1f3      	bne.n	8002bf6 <thread2.lto_priv.78+0x6>
 8002c0e:	bd70      	pop	{r4, r5, r6, pc}

08002c10 <msg1_execute>:
 8002c10:	b570      	push	{r4, r5, r6, lr}
 8002c12:	4a1f      	ldr	r2, [pc, #124]	; (8002c90 <msg1_execute+0x80>)
 8002c14:	4b1f      	ldr	r3, [pc, #124]	; (8002c94 <msg1_execute+0x84>)
 8002c16:	6991      	ldr	r1, [r2, #24]
 8002c18:	481f      	ldr	r0, [pc, #124]	; (8002c98 <msg1_execute+0x88>)
 8002c1a:	688a      	ldr	r2, [r1, #8]
 8002c1c:	b082      	sub	sp, #8
 8002c1e:	3201      	adds	r2, #1
 8002c20:	9100      	str	r1, [sp, #0]
 8002c22:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8002c26:	f7fe feb3 	bl	8001990 <chThdCreateStatic>
 8002c2a:	4b1c      	ldr	r3, [pc, #112]	; (8002c9c <msg1_execute+0x8c>)
 8002c2c:	6018      	str	r0, [r3, #0]
 8002c2e:	f7ff ffbf 	bl	8002bb0 <chMsgWait>
 8002c32:	2520      	movs	r5, #32
 8002c34:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002c36:	f385 8811 	msr	BASEPRI, r5
 8002c3a:	4631      	mov	r1, r6
 8002c3c:	f7fe fdc8 	bl	80017d0 <chSchWakeupS>
 8002c40:	2400      	movs	r4, #0
 8002c42:	f384 8811 	msr	BASEPRI, r4
 8002c46:	b2f0      	uxtb	r0, r6
 8002c48:	f7fd fdca 	bl	80007e0 <test_emit_token>
 8002c4c:	f7ff ffb0 	bl	8002bb0 <chMsgWait>
 8002c50:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002c52:	f385 8811 	msr	BASEPRI, r5
 8002c56:	4631      	mov	r1, r6
 8002c58:	f7fe fdba 	bl	80017d0 <chSchWakeupS>
 8002c5c:	f384 8811 	msr	BASEPRI, r4
 8002c60:	b2f0      	uxtb	r0, r6
 8002c62:	f7fd fdbd 	bl	80007e0 <test_emit_token>
 8002c66:	f7ff ffa3 	bl	8002bb0 <chMsgWait>
 8002c6a:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002c6c:	f385 8811 	msr	BASEPRI, r5
 8002c70:	4631      	mov	r1, r6
 8002c72:	f7fe fdad 	bl	80017d0 <chSchWakeupS>
 8002c76:	f384 8811 	msr	BASEPRI, r4
 8002c7a:	b2f0      	uxtb	r0, r6
 8002c7c:	f7fd fdb0 	bl	80007e0 <test_emit_token>
 8002c80:	4907      	ldr	r1, [pc, #28]	; (8002ca0 <msg1_execute+0x90>)
 8002c82:	2001      	movs	r0, #1
 8002c84:	b002      	add	sp, #8
 8002c86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002c8a:	f7fd bd69 	b.w	8000760 <_test_assert_sequence>
 8002c8e:	bf00      	nop
 8002c90:	20000930 	.word	0x20000930
 8002c94:	08002d21 	.word	0x08002d21
 8002c98:	20000b38 	.word	0x20000b38
 8002c9c:	200011cc 	.word	0x200011cc
 8002ca0:	08005eb0 	.word	0x08005eb0
	...

08002cb0 <chMsgSend>:
 8002cb0:	4b0e      	ldr	r3, [pc, #56]	; (8002cec <chMsgSend+0x3c>)
 8002cb2:	b510      	push	{r4, lr}
 8002cb4:	2220      	movs	r2, #32
 8002cb6:	699c      	ldr	r4, [r3, #24]
 8002cb8:	f382 8811 	msr	BASEPRI, r2
 8002cbc:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8002cc0:	6222      	str	r2, [r4, #32]
 8002cc2:	6022      	str	r2, [r4, #0]
 8002cc4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8002cc6:	6062      	str	r2, [r4, #4]
 8002cc8:	6321      	str	r1, [r4, #48]	; 0x30
 8002cca:	6014      	str	r4, [r2, #0]
 8002ccc:	7f02      	ldrb	r2, [r0, #28]
 8002cce:	62c4      	str	r4, [r0, #44]	; 0x2c
 8002cd0:	2a0e      	cmp	r2, #14
 8002cd2:	d007      	beq.n	8002ce4 <chMsgSend+0x34>
 8002cd4:	200c      	movs	r0, #12
 8002cd6:	f7fe fe93 	bl	8001a00 <chSchGoSleepS>
 8002cda:	6a20      	ldr	r0, [r4, #32]
 8002cdc:	2300      	movs	r3, #0
 8002cde:	f383 8811 	msr	BASEPRI, r3
 8002ce2:	bd10      	pop	{r4, pc}
 8002ce4:	f7fd fffc 	bl	8000ce0 <chSchReadyI>
 8002ce8:	e7f4      	b.n	8002cd4 <chMsgSend+0x24>
 8002cea:	bf00      	nop
 8002cec:	20000930 	.word	0x20000930

08002cf0 <msg_loop_test>:
 8002cf0:	b570      	push	{r4, r5, r6, lr}
 8002cf2:	4605      	mov	r5, r0
 8002cf4:	f7ff fe0c 	bl	8002910 <test_wait_tick>
 8002cf8:	f7fe fa82 	bl	8001200 <test_start_timer.constprop.1>
 8002cfc:	4e07      	ldr	r6, [pc, #28]	; (8002d1c <msg_loop_test+0x2c>)
 8002cfe:	2400      	movs	r4, #0
 8002d00:	2101      	movs	r1, #1
 8002d02:	4628      	mov	r0, r5
 8002d04:	f7ff ffd4 	bl	8002cb0 <chMsgSend>
 8002d08:	7833      	ldrb	r3, [r6, #0]
 8002d0a:	3401      	adds	r4, #1
 8002d0c:	2b00      	cmp	r3, #0
 8002d0e:	d0f7      	beq.n	8002d00 <msg_loop_test+0x10>
 8002d10:	4628      	mov	r0, r5
 8002d12:	2100      	movs	r1, #0
 8002d14:	f7ff ffcc 	bl	8002cb0 <chMsgSend>
 8002d18:	4620      	mov	r0, r4
 8002d1a:	bd70      	pop	{r4, r5, r6, pc}
 8002d1c:	200011c8 	.word	0x200011c8

08002d20 <thread.lto_priv.60>:
 8002d20:	b510      	push	{r4, lr}
 8002d22:	2141      	movs	r1, #65	; 0x41
 8002d24:	4604      	mov	r4, r0
 8002d26:	f7ff ffc3 	bl	8002cb0 <chMsgSend>
 8002d2a:	4620      	mov	r0, r4
 8002d2c:	2142      	movs	r1, #66	; 0x42
 8002d2e:	f7ff ffbf 	bl	8002cb0 <chMsgSend>
 8002d32:	4620      	mov	r0, r4
 8002d34:	2143      	movs	r1, #67	; 0x43
 8002d36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002d3a:	f7ff bfb9 	b.w	8002cb0 <chMsgSend>
 8002d3e:	bf00      	nop

08002d40 <chMtxLockS>:
 8002d40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002d42:	4a36      	ldr	r2, [pc, #216]	; (8002e1c <chMtxLockS+0xdc>)
 8002d44:	6883      	ldr	r3, [r0, #8]
 8002d46:	6995      	ldr	r5, [r2, #24]
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	d03f      	beq.n	8002dcc <chMtxLockS+0x8c>
 8002d4c:	68a9      	ldr	r1, [r5, #8]
 8002d4e:	689a      	ldr	r2, [r3, #8]
 8002d50:	4291      	cmp	r1, r2
 8002d52:	4604      	mov	r4, r0
 8002d54:	d906      	bls.n	8002d64 <chMtxLockS+0x24>
 8002d56:	7f1a      	ldrb	r2, [r3, #28]
 8002d58:	6099      	str	r1, [r3, #8]
 8002d5a:	2a06      	cmp	r2, #6
 8002d5c:	d03b      	beq.n	8002dd6 <chMtxLockS+0x96>
 8002d5e:	2a07      	cmp	r2, #7
 8002d60:	d015      	beq.n	8002d8e <chMtxLockS+0x4e>
 8002d62:	b342      	cbz	r2, 8002db6 <chMtxLockS+0x76>
 8002d64:	4626      	mov	r6, r4
 8002d66:	4623      	mov	r3, r4
 8002d68:	e003      	b.n	8002d72 <chMtxLockS+0x32>
 8002d6a:	6899      	ldr	r1, [r3, #8]
 8002d6c:	68aa      	ldr	r2, [r5, #8]
 8002d6e:	4291      	cmp	r1, r2
 8002d70:	d32a      	bcc.n	8002dc8 <chMtxLockS+0x88>
 8002d72:	681b      	ldr	r3, [r3, #0]
 8002d74:	429c      	cmp	r4, r3
 8002d76:	d1f8      	bne.n	8002d6a <chMtxLockS+0x2a>
 8002d78:	6873      	ldr	r3, [r6, #4]
 8002d7a:	2006      	movs	r0, #6
 8002d7c:	e9c5 6300 	strd	r6, r3, [r5]
 8002d80:	601d      	str	r5, [r3, #0]
 8002d82:	6075      	str	r5, [r6, #4]
 8002d84:	622c      	str	r4, [r5, #32]
 8002d86:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002d8a:	f7fe be39 	b.w	8001a00 <chSchGoSleepS>
 8002d8e:	e9d3 0200 	ldrd	r0, r2, [r3]
 8002d92:	6010      	str	r0, [r2, #0]
 8002d94:	6a1e      	ldr	r6, [r3, #32]
 8002d96:	6818      	ldr	r0, [r3, #0]
 8002d98:	6042      	str	r2, [r0, #4]
 8002d9a:	4632      	mov	r2, r6
 8002d9c:	e002      	b.n	8002da4 <chMtxLockS+0x64>
 8002d9e:	6890      	ldr	r0, [r2, #8]
 8002da0:	4288      	cmp	r0, r1
 8002da2:	d332      	bcc.n	8002e0a <chMtxLockS+0xca>
 8002da4:	6812      	ldr	r2, [r2, #0]
 8002da6:	4296      	cmp	r6, r2
 8002da8:	d1f9      	bne.n	8002d9e <chMtxLockS+0x5e>
 8002daa:	6872      	ldr	r2, [r6, #4]
 8002dac:	e9c3 6200 	strd	r6, r2, [r3]
 8002db0:	6013      	str	r3, [r2, #0]
 8002db2:	6073      	str	r3, [r6, #4]
 8002db4:	e7d6      	b.n	8002d64 <chMtxLockS+0x24>
 8002db6:	e9d3 1200 	ldrd	r1, r2, [r3]
 8002dba:	6011      	str	r1, [r2, #0]
 8002dbc:	6819      	ldr	r1, [r3, #0]
 8002dbe:	4618      	mov	r0, r3
 8002dc0:	604a      	str	r2, [r1, #4]
 8002dc2:	f7fd ff8d 	bl	8000ce0 <chSchReadyI>
 8002dc6:	e7cd      	b.n	8002d64 <chMtxLockS+0x24>
 8002dc8:	461e      	mov	r6, r3
 8002dca:	e7d5      	b.n	8002d78 <chMtxLockS+0x38>
 8002dcc:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8002dce:	e9c0 5302 	strd	r5, r3, [r0, #8]
 8002dd2:	63a8      	str	r0, [r5, #56]	; 0x38
 8002dd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002dd6:	e9d3 0200 	ldrd	r0, r2, [r3]
 8002dda:	6010      	str	r0, [r2, #0]
 8002ddc:	6a1e      	ldr	r6, [r3, #32]
 8002dde:	6818      	ldr	r0, [r3, #0]
 8002de0:	4637      	mov	r7, r6
 8002de2:	6042      	str	r2, [r0, #4]
 8002de4:	4632      	mov	r2, r6
 8002de6:	e002      	b.n	8002dee <chMtxLockS+0xae>
 8002de8:	6890      	ldr	r0, [r2, #8]
 8002dea:	4288      	cmp	r0, r1
 8002dec:	d314      	bcc.n	8002e18 <chMtxLockS+0xd8>
 8002dee:	6812      	ldr	r2, [r2, #0]
 8002df0:	4296      	cmp	r6, r2
 8002df2:	d1f9      	bne.n	8002de8 <chMtxLockS+0xa8>
 8002df4:	687a      	ldr	r2, [r7, #4]
 8002df6:	68a9      	ldr	r1, [r5, #8]
 8002df8:	e9c3 7200 	strd	r7, r2, [r3]
 8002dfc:	6013      	str	r3, [r2, #0]
 8002dfe:	607b      	str	r3, [r7, #4]
 8002e00:	68b3      	ldr	r3, [r6, #8]
 8002e02:	689a      	ldr	r2, [r3, #8]
 8002e04:	428a      	cmp	r2, r1
 8002e06:	d3a6      	bcc.n	8002d56 <chMtxLockS+0x16>
 8002e08:	e7ac      	b.n	8002d64 <chMtxLockS+0x24>
 8002e0a:	4616      	mov	r6, r2
 8002e0c:	6872      	ldr	r2, [r6, #4]
 8002e0e:	e9c3 6200 	strd	r6, r2, [r3]
 8002e12:	6013      	str	r3, [r2, #0]
 8002e14:	6073      	str	r3, [r6, #4]
 8002e16:	e7a5      	b.n	8002d64 <chMtxLockS+0x24>
 8002e18:	4617      	mov	r7, r2
 8002e1a:	e7eb      	b.n	8002df4 <chMtxLockS+0xb4>
 8002e1c:	20000930 	.word	0x20000930

08002e20 <chMtxLock>:
 8002e20:	b508      	push	{r3, lr}
 8002e22:	2320      	movs	r3, #32
 8002e24:	f383 8811 	msr	BASEPRI, r3
 8002e28:	f7ff ff8a 	bl	8002d40 <chMtxLockS>
 8002e2c:	2300      	movs	r3, #0
 8002e2e:	f383 8811 	msr	BASEPRI, r3
 8002e32:	bd08      	pop	{r3, pc}
	...

08002e40 <bmk12_execute>:
 8002e40:	b570      	push	{r4, r5, r6, lr}
 8002e42:	f7ff fd65 	bl	8002910 <test_wait_tick>
 8002e46:	f7fe f9db 	bl	8001200 <test_start_timer.constprop.1>
 8002e4a:	4e15      	ldr	r6, [pc, #84]	; (8002ea0 <bmk12_execute+0x60>)
 8002e4c:	4c15      	ldr	r4, [pc, #84]	; (8002ea4 <bmk12_execute+0x64>)
 8002e4e:	2500      	movs	r5, #0
 8002e50:	4620      	mov	r0, r4
 8002e52:	f7ff ffe5 	bl	8002e20 <chMtxLock>
 8002e56:	4620      	mov	r0, r4
 8002e58:	f7fe fd4a 	bl	80018f0 <chMtxUnlock>
 8002e5c:	4620      	mov	r0, r4
 8002e5e:	f7ff ffdf 	bl	8002e20 <chMtxLock>
 8002e62:	4620      	mov	r0, r4
 8002e64:	f7fe fd44 	bl	80018f0 <chMtxUnlock>
 8002e68:	4620      	mov	r0, r4
 8002e6a:	f7ff ffd9 	bl	8002e20 <chMtxLock>
 8002e6e:	4620      	mov	r0, r4
 8002e70:	f7fe fd3e 	bl	80018f0 <chMtxUnlock>
 8002e74:	4620      	mov	r0, r4
 8002e76:	f7ff ffd3 	bl	8002e20 <chMtxLock>
 8002e7a:	4620      	mov	r0, r4
 8002e7c:	f7fe fd38 	bl	80018f0 <chMtxUnlock>
 8002e80:	7833      	ldrb	r3, [r6, #0]
 8002e82:	3501      	adds	r5, #1
 8002e84:	2b00      	cmp	r3, #0
 8002e86:	d0e3      	beq.n	8002e50 <bmk12_execute+0x10>
 8002e88:	4807      	ldr	r0, [pc, #28]	; (8002ea8 <bmk12_execute+0x68>)
 8002e8a:	f7fd fd01 	bl	8000890 <test_print>
 8002e8e:	00a8      	lsls	r0, r5, #2
 8002e90:	f7fd fc06 	bl	80006a0 <test_printn>
 8002e94:	4805      	ldr	r0, [pc, #20]	; (8002eac <bmk12_execute+0x6c>)
 8002e96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002e9a:	f7fd bcd9 	b.w	8000850 <test_println>
 8002e9e:	bf00      	nop
 8002ea0:	200011c8 	.word	0x200011c8
 8002ea4:	20000b14 	.word	0x20000b14
 8002ea8:	08005d00 	.word	0x08005d00
 8002eac:	08005d30 	.word	0x08005d30

08002eb0 <thread11>:
 8002eb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002eb2:	4607      	mov	r7, r0
 8002eb4:	481b      	ldr	r0, [pc, #108]	; (8002f24 <thread11+0x74>)
 8002eb6:	f7ff ffb3 	bl	8002e20 <chMtxLock>
 8002eba:	481b      	ldr	r0, [pc, #108]	; (8002f28 <thread11+0x78>)
 8002ebc:	f7ff ffb0 	bl	8002e20 <chMtxLock>
 8002ec0:	2320      	movs	r3, #32
 8002ec2:	f383 8811 	msr	BASEPRI, r3
 8002ec6:	4d19      	ldr	r5, [pc, #100]	; (8002f2c <thread11+0x7c>)
 8002ec8:	69ab      	ldr	r3, [r5, #24]
 8002eca:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 8002ecc:	4630      	mov	r0, r6
 8002ece:	f7fe f867 	bl	8000fa0 <chMtxUnlockS>
 8002ed2:	4b17      	ldr	r3, [pc, #92]	; (8002f30 <thread11+0x80>)
 8002ed4:	69ac      	ldr	r4, [r5, #24]
 8002ed6:	4618      	mov	r0, r3
 8002ed8:	6223      	str	r3, [r4, #32]
 8002eda:	e003      	b.n	8002ee4 <thread11+0x34>
 8002edc:	6899      	ldr	r1, [r3, #8]
 8002ede:	68a2      	ldr	r2, [r4, #8]
 8002ee0:	4291      	cmp	r1, r2
 8002ee2:	d302      	bcc.n	8002eea <thread11+0x3a>
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	4283      	cmp	r3, r0
 8002ee8:	d1f8      	bne.n	8002edc <thread11+0x2c>
 8002eea:	685a      	ldr	r2, [r3, #4]
 8002eec:	2007      	movs	r0, #7
 8002eee:	e9c4 3200 	strd	r3, r2, [r4]
 8002ef2:	6014      	str	r4, [r2, #0]
 8002ef4:	605c      	str	r4, [r3, #4]
 8002ef6:	f7fe fd83 	bl	8001a00 <chSchGoSleepS>
 8002efa:	69ab      	ldr	r3, [r5, #24]
 8002efc:	6a1b      	ldr	r3, [r3, #32]
 8002efe:	3301      	adds	r3, #1
 8002f00:	d002      	beq.n	8002f08 <thread11+0x58>
 8002f02:	4630      	mov	r0, r6
 8002f04:	f7ff ff1c 	bl	8002d40 <chMtxLockS>
 8002f08:	2300      	movs	r3, #0
 8002f0a:	f383 8811 	msr	BASEPRI, r3
 8002f0e:	7838      	ldrb	r0, [r7, #0]
 8002f10:	f7fd fc66 	bl	80007e0 <test_emit_token>
 8002f14:	4804      	ldr	r0, [pc, #16]	; (8002f28 <thread11+0x78>)
 8002f16:	f7fe fceb 	bl	80018f0 <chMtxUnlock>
 8002f1a:	4802      	ldr	r0, [pc, #8]	; (8002f24 <thread11+0x74>)
 8002f1c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002f20:	f7fe bce6 	b.w	80018f0 <chMtxUnlock>
 8002f24:	20000844 	.word	0x20000844
 8002f28:	20000834 	.word	0x20000834
 8002f2c:	20000930 	.word	0x20000930
 8002f30:	20000800 	.word	0x20000800
	...

08002f40 <thread10>:
 8002f40:	b570      	push	{r4, r5, r6, lr}
 8002f42:	4606      	mov	r6, r0
 8002f44:	4816      	ldr	r0, [pc, #88]	; (8002fa0 <thread10+0x60>)
 8002f46:	f7ff ff6b 	bl	8002e20 <chMtxLock>
 8002f4a:	2320      	movs	r3, #32
 8002f4c:	f383 8811 	msr	BASEPRI, r3
 8002f50:	4b14      	ldr	r3, [pc, #80]	; (8002fa4 <thread10+0x64>)
 8002f52:	699c      	ldr	r4, [r3, #24]
 8002f54:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8002f56:	4628      	mov	r0, r5
 8002f58:	f7fe f822 	bl	8000fa0 <chMtxUnlockS>
 8002f5c:	4812      	ldr	r0, [pc, #72]	; (8002fa8 <thread10+0x68>)
 8002f5e:	6220      	str	r0, [r4, #32]
 8002f60:	4603      	mov	r3, r0
 8002f62:	e003      	b.n	8002f6c <thread10+0x2c>
 8002f64:	6899      	ldr	r1, [r3, #8]
 8002f66:	68a2      	ldr	r2, [r4, #8]
 8002f68:	4291      	cmp	r1, r2
 8002f6a:	d302      	bcc.n	8002f72 <thread10+0x32>
 8002f6c:	681b      	ldr	r3, [r3, #0]
 8002f6e:	4283      	cmp	r3, r0
 8002f70:	d1f8      	bne.n	8002f64 <thread10+0x24>
 8002f72:	685a      	ldr	r2, [r3, #4]
 8002f74:	2007      	movs	r0, #7
 8002f76:	e9c4 3200 	strd	r3, r2, [r4]
 8002f7a:	6014      	str	r4, [r2, #0]
 8002f7c:	605c      	str	r4, [r3, #4]
 8002f7e:	f7fe fd3f 	bl	8001a00 <chSchGoSleepS>
 8002f82:	4628      	mov	r0, r5
 8002f84:	f7ff fedc 	bl	8002d40 <chMtxLockS>
 8002f88:	2300      	movs	r3, #0
 8002f8a:	f383 8811 	msr	BASEPRI, r3
 8002f8e:	7830      	ldrb	r0, [r6, #0]
 8002f90:	f7fd fc26 	bl	80007e0 <test_emit_token>
 8002f94:	4802      	ldr	r0, [pc, #8]	; (8002fa0 <thread10+0x60>)
 8002f96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002f9a:	f7fe bca9 	b.w	80018f0 <chMtxUnlock>
 8002f9e:	bf00      	nop
 8002fa0:	20000834 	.word	0x20000834
 8002fa4:	20000930 	.word	0x20000930
 8002fa8:	20000800 	.word	0x20000800
 8002fac:	00000000 	.word	0x00000000

08002fb0 <thread12>:
 8002fb0:	b538      	push	{r3, r4, r5, lr}
 8002fb2:	4c06      	ldr	r4, [pc, #24]	; (8002fcc <thread12+0x1c>)
 8002fb4:	4605      	mov	r5, r0
 8002fb6:	4620      	mov	r0, r4
 8002fb8:	f7ff ff32 	bl	8002e20 <chMtxLock>
 8002fbc:	7828      	ldrb	r0, [r5, #0]
 8002fbe:	f7fd fc0f 	bl	80007e0 <test_emit_token>
 8002fc2:	4620      	mov	r0, r4
 8002fc4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002fc8:	f7fe bc92 	b.w	80018f0 <chMtxUnlock>
 8002fcc:	20000844 	.word	0x20000844

08002fd0 <mtx5_execute>:
 8002fd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002fd2:	4d37      	ldr	r5, [pc, #220]	; (80030b0 <mtx5_execute+0xe0>)
 8002fd4:	69aa      	ldr	r2, [r5, #24]
 8002fd6:	2320      	movs	r3, #32
 8002fd8:	6896      	ldr	r6, [r2, #8]
 8002fda:	f383 8811 	msr	BASEPRI, r3
 8002fde:	4c35      	ldr	r4, [pc, #212]	; (80030b4 <mtx5_execute+0xe4>)
 8002fe0:	68a3      	ldr	r3, [r4, #8]
 8002fe2:	2b00      	cmp	r3, #0
 8002fe4:	d057      	beq.n	8003096 <mtx5_execute+0xc6>
 8002fe6:	2100      	movs	r1, #0
 8002fe8:	2300      	movs	r3, #0
 8002fea:	f383 8811 	msr	BASEPRI, r3
 8002fee:	2001      	movs	r0, #1
 8002ff0:	f7fd fbde 	bl	80007b0 <_test_assert>
 8002ff4:	4601      	mov	r1, r0
 8002ff6:	b100      	cbz	r0, 8002ffa <mtx5_execute+0x2a>
 8002ff8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002ffa:	2320      	movs	r3, #32
 8002ffc:	f383 8811 	msr	BASEPRI, r3
 8003000:	68a3      	ldr	r3, [r4, #8]
 8003002:	2b00      	cmp	r3, #0
 8003004:	d04e      	beq.n	80030a4 <mtx5_execute+0xd4>
 8003006:	2101      	movs	r1, #1
 8003008:	2300      	movs	r3, #0
 800300a:	f383 8811 	msr	BASEPRI, r3
 800300e:	2002      	movs	r0, #2
 8003010:	f7fd fbce 	bl	80007b0 <_test_assert>
 8003014:	4607      	mov	r7, r0
 8003016:	2800      	cmp	r0, #0
 8003018:	d1ee      	bne.n	8002ff8 <mtx5_execute+0x28>
 800301a:	2320      	movs	r3, #32
 800301c:	f383 8811 	msr	BASEPRI, r3
 8003020:	4824      	ldr	r0, [pc, #144]	; (80030b4 <mtx5_execute+0xe4>)
 8003022:	f7fd ffbd 	bl	8000fa0 <chMtxUnlockS>
 8003026:	f387 8811 	msr	BASEPRI, r7
 800302a:	6821      	ldr	r1, [r4, #0]
 800302c:	1b09      	subs	r1, r1, r4
 800302e:	fab1 f181 	clz	r1, r1
 8003032:	2003      	movs	r0, #3
 8003034:	0949      	lsrs	r1, r1, #5
 8003036:	f7fd fbbb 	bl	80007b0 <_test_assert>
 800303a:	2800      	cmp	r0, #0
 800303c:	d1dc      	bne.n	8002ff8 <mtx5_execute+0x28>
 800303e:	68a1      	ldr	r1, [r4, #8]
 8003040:	fab1 f181 	clz	r1, r1
 8003044:	0949      	lsrs	r1, r1, #5
 8003046:	2004      	movs	r0, #4
 8003048:	f7fd fbb2 	bl	80007b0 <_test_assert>
 800304c:	2800      	cmp	r0, #0
 800304e:	d1d3      	bne.n	8002ff8 <mtx5_execute+0x28>
 8003050:	69ab      	ldr	r3, [r5, #24]
 8003052:	6899      	ldr	r1, [r3, #8]
 8003054:	1b89      	subs	r1, r1, r6
 8003056:	fab1 f181 	clz	r1, r1
 800305a:	2005      	movs	r0, #5
 800305c:	0949      	lsrs	r1, r1, #5
 800305e:	f7fd fba7 	bl	80007b0 <_test_assert>
 8003062:	2800      	cmp	r0, #0
 8003064:	d1c8      	bne.n	8002ff8 <mtx5_execute+0x28>
 8003066:	4813      	ldr	r0, [pc, #76]	; (80030b4 <mtx5_execute+0xe4>)
 8003068:	f7ff feda 	bl	8002e20 <chMtxLock>
 800306c:	f7fe faa8 	bl	80015c0 <chMtxUnlockAll>
 8003070:	6821      	ldr	r1, [r4, #0]
 8003072:	1b09      	subs	r1, r1, r4
 8003074:	fab1 f181 	clz	r1, r1
 8003078:	2006      	movs	r0, #6
 800307a:	0949      	lsrs	r1, r1, #5
 800307c:	f7fd fb98 	bl	80007b0 <_test_assert>
 8003080:	2800      	cmp	r0, #0
 8003082:	d1b9      	bne.n	8002ff8 <mtx5_execute+0x28>
 8003084:	68a1      	ldr	r1, [r4, #8]
 8003086:	fab1 f181 	clz	r1, r1
 800308a:	0949      	lsrs	r1, r1, #5
 800308c:	2007      	movs	r0, #7
 800308e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003092:	f7fd bb8d 	b.w	80007b0 <_test_assert>
 8003096:	69ab      	ldr	r3, [r5, #24]
 8003098:	60a3      	str	r3, [r4, #8]
 800309a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800309c:	60e2      	str	r2, [r4, #12]
 800309e:	639c      	str	r4, [r3, #56]	; 0x38
 80030a0:	2101      	movs	r1, #1
 80030a2:	e7a1      	b.n	8002fe8 <mtx5_execute+0x18>
 80030a4:	69ab      	ldr	r3, [r5, #24]
 80030a6:	60a3      	str	r3, [r4, #8]
 80030a8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80030aa:	60e2      	str	r2, [r4, #12]
 80030ac:	639c      	str	r4, [r3, #56]	; 0x38
 80030ae:	e7ab      	b.n	8003008 <mtx5_execute+0x38>
 80030b0:	20000930 	.word	0x20000930
 80030b4:	20000834 	.word	0x20000834
	...

080030c0 <thread4a>:
 80030c0:	b510      	push	{r4, lr}
 80030c2:	4c06      	ldr	r4, [pc, #24]	; (80030dc <thread4a+0x1c>)
 80030c4:	2032      	movs	r0, #50	; 0x32
 80030c6:	f7ff fb2b 	bl	8002720 <chThdSleep>
 80030ca:	4620      	mov	r0, r4
 80030cc:	f7ff fea8 	bl	8002e20 <chMtxLock>
 80030d0:	4620      	mov	r0, r4
 80030d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80030d6:	f7fe bc0b 	b.w	80018f0 <chMtxUnlock>
 80030da:	bf00      	nop
 80030dc:	20000844 	.word	0x20000844

080030e0 <thread4b>:
 80030e0:	b510      	push	{r4, lr}
 80030e2:	4c06      	ldr	r4, [pc, #24]	; (80030fc <thread4b+0x1c>)
 80030e4:	2096      	movs	r0, #150	; 0x96
 80030e6:	f7ff fb1b 	bl	8002720 <chThdSleep>
 80030ea:	4620      	mov	r0, r4
 80030ec:	f7ff fe98 	bl	8002e20 <chMtxLock>
 80030f0:	4620      	mov	r0, r4
 80030f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80030f6:	f7fe bbfb 	b.w	80018f0 <chMtxUnlock>
 80030fa:	bf00      	nop
 80030fc:	20000834 	.word	0x20000834

08003100 <thread1.lto_priv.69>:
 8003100:	b538      	push	{r3, r4, r5, lr}
 8003102:	4c06      	ldr	r4, [pc, #24]	; (800311c <thread1.lto_priv.69+0x1c>)
 8003104:	4605      	mov	r5, r0
 8003106:	4620      	mov	r0, r4
 8003108:	f7ff fe8a 	bl	8002e20 <chMtxLock>
 800310c:	7828      	ldrb	r0, [r5, #0]
 800310e:	f7fd fb67 	bl	80007e0 <test_emit_token>
 8003112:	4620      	mov	r0, r4
 8003114:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003118:	f7fe bbea 	b.w	80018f0 <chMtxUnlock>
 800311c:	20000834 	.word	0x20000834

08003120 <chHeapStatus>:
 8003120:	b570      	push	{r4, r5, r6, lr}
 8003122:	4c11      	ldr	r4, [pc, #68]	; (8003168 <chHeapStatus+0x48>)
 8003124:	2800      	cmp	r0, #0
 8003126:	bf18      	it	ne
 8003128:	4604      	movne	r4, r0
 800312a:	f104 0510 	add.w	r5, r4, #16
 800312e:	4628      	mov	r0, r5
 8003130:	460e      	mov	r6, r1
 8003132:	f7ff fe75 	bl	8002e20 <chMtxLock>
 8003136:	68a3      	ldr	r3, [r4, #8]
 8003138:	b16b      	cbz	r3, 8003156 <chHeapStatus+0x36>
 800313a:	2200      	movs	r2, #0
 800313c:	4614      	mov	r4, r2
 800313e:	e9d3 3000 	ldrd	r3, r0, [r3]
 8003142:	3401      	adds	r4, #1
 8003144:	4402      	add	r2, r0
 8003146:	2b00      	cmp	r3, #0
 8003148:	d1f9      	bne.n	800313e <chHeapStatus+0x1e>
 800314a:	4628      	mov	r0, r5
 800314c:	6032      	str	r2, [r6, #0]
 800314e:	f7fe fbcf 	bl	80018f0 <chMtxUnlock>
 8003152:	4620      	mov	r0, r4
 8003154:	bd70      	pop	{r4, r5, r6, pc}
 8003156:	461a      	mov	r2, r3
 8003158:	461c      	mov	r4, r3
 800315a:	4628      	mov	r0, r5
 800315c:	6032      	str	r2, [r6, #0]
 800315e:	f7fe fbc7 	bl	80018f0 <chMtxUnlock>
 8003162:	4620      	mov	r0, r4
 8003164:	bd70      	pop	{r4, r5, r6, pc}
 8003166:	bf00      	nop
 8003168:	20000a88 	.word	0x20000a88
 800316c:	00000000 	.word	0x00000000

08003170 <chHeapFree>:
 8003170:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003172:	f850 5c08 	ldr.w	r5, [r0, #-8]
 8003176:	f105 0710 	add.w	r7, r5, #16
 800317a:	4606      	mov	r6, r0
 800317c:	f1a0 0408 	sub.w	r4, r0, #8
 8003180:	3508      	adds	r5, #8
 8003182:	4638      	mov	r0, r7
 8003184:	f7ff fe4c 	bl	8002e20 <chMtxLock>
 8003188:	462b      	mov	r3, r5
 800318a:	42ab      	cmp	r3, r5
 800318c:	681a      	ldr	r2, [r3, #0]
 800318e:	d001      	beq.n	8003194 <chHeapFree+0x24>
 8003190:	42a3      	cmp	r3, r4
 8003192:	d202      	bcs.n	800319a <chHeapFree+0x2a>
 8003194:	b11a      	cbz	r2, 800319e <chHeapFree+0x2e>
 8003196:	4294      	cmp	r4, r2
 8003198:	d301      	bcc.n	800319e <chHeapFree+0x2e>
 800319a:	4613      	mov	r3, r2
 800319c:	e7f5      	b.n	800318a <chHeapFree+0x1a>
 800319e:	f846 2c08 	str.w	r2, [r6, #-8]
 80031a2:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80031a6:	601c      	str	r4, [r3, #0]
 80031a8:	f856 0c08 	ldr.w	r0, [r6, #-8]
 80031ac:	18b1      	adds	r1, r6, r2
 80031ae:	4281      	cmp	r1, r0
 80031b0:	d00a      	beq.n	80031c8 <chHeapFree+0x58>
 80031b2:	6859      	ldr	r1, [r3, #4]
 80031b4:	f101 0208 	add.w	r2, r1, #8
 80031b8:	441a      	add	r2, r3
 80031ba:	4294      	cmp	r4, r2
 80031bc:	d012      	beq.n	80031e4 <chHeapFree+0x74>
 80031be:	4638      	mov	r0, r7
 80031c0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80031c4:	f7fe bb94 	b.w	80018f0 <chMtxUnlock>
 80031c8:	6849      	ldr	r1, [r1, #4]
 80031ca:	58b0      	ldr	r0, [r6, r2]
 80031cc:	f846 0c08 	str.w	r0, [r6, #-8]
 80031d0:	3208      	adds	r2, #8
 80031d2:	440a      	add	r2, r1
 80031d4:	f846 2c04 	str.w	r2, [r6, #-4]
 80031d8:	6859      	ldr	r1, [r3, #4]
 80031da:	f101 0208 	add.w	r2, r1, #8
 80031de:	441a      	add	r2, r3
 80031e0:	4294      	cmp	r4, r2
 80031e2:	d1ec      	bne.n	80031be <chHeapFree+0x4e>
 80031e4:	e956 0202 	ldrd	r0, r2, [r6, #-8]
 80031e8:	3208      	adds	r2, #8
 80031ea:	4411      	add	r1, r2
 80031ec:	6018      	str	r0, [r3, #0]
 80031ee:	6059      	str	r1, [r3, #4]
 80031f0:	4638      	mov	r0, r7
 80031f2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80031f6:	f7fe bb7b 	b.w	80018f0 <chMtxUnlock>
 80031fa:	bf00      	nop
 80031fc:	0000      	movs	r0, r0
	...

08003200 <chThdRelease>:
 8003200:	b430      	push	{r4, r5}
 8003202:	2120      	movs	r1, #32
 8003204:	f381 8811 	msr	BASEPRI, r1
 8003208:	7f83      	ldrb	r3, [r0, #30]
 800320a:	3b01      	subs	r3, #1
 800320c:	b2db      	uxtb	r3, r3
 800320e:	7783      	strb	r3, [r0, #30]
 8003210:	2400      	movs	r4, #0
 8003212:	f384 8811 	msr	BASEPRI, r4
 8003216:	b91b      	cbnz	r3, 8003220 <chThdRelease+0x20>
 8003218:	7f04      	ldrb	r4, [r0, #28]
 800321a:	2c0f      	cmp	r4, #15
 800321c:	4602      	mov	r2, r0
 800321e:	d001      	beq.n	8003224 <chThdRelease+0x24>
 8003220:	bc30      	pop	{r4, r5}
 8003222:	4770      	bx	lr
 8003224:	7f44      	ldrb	r4, [r0, #29]
 8003226:	f004 0403 	and.w	r4, r4, #3
 800322a:	2c01      	cmp	r4, #1
 800322c:	d00f      	beq.n	800324e <chThdRelease+0x4e>
 800322e:	2c02      	cmp	r4, #2
 8003230:	d1f6      	bne.n	8003220 <chThdRelease+0x20>
 8003232:	e9d0 0404 	ldrd	r0, r4, [r0, #16]
 8003236:	6120      	str	r0, [r4, #16]
 8003238:	6915      	ldr	r5, [r2, #16]
 800323a:	6c10      	ldr	r0, [r2, #64]	; 0x40
 800323c:	616c      	str	r4, [r5, #20]
 800323e:	f381 8811 	msr	BASEPRI, r1
 8003242:	6801      	ldr	r1, [r0, #0]
 8003244:	6011      	str	r1, [r2, #0]
 8003246:	6002      	str	r2, [r0, #0]
 8003248:	f383 8811 	msr	BASEPRI, r3
 800324c:	e7e8      	b.n	8003220 <chThdRelease+0x20>
 800324e:	e9d0 1304 	ldrd	r1, r3, [r0, #16]
 8003252:	6119      	str	r1, [r3, #16]
 8003254:	6902      	ldr	r2, [r0, #16]
 8003256:	bc30      	pop	{r4, r5}
 8003258:	6153      	str	r3, [r2, #20]
 800325a:	f7ff bf89 	b.w	8003170 <chHeapFree>
 800325e:	bf00      	nop

08003260 <regfind>:
 8003260:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003264:	4680      	mov	r8, r0
 8003266:	2520      	movs	r5, #32
 8003268:	f385 8811 	msr	BASEPRI, r5
 800326c:	4f18      	ldr	r7, [pc, #96]	; (80032d0 <regfind+0x70>)
 800326e:	6938      	ldr	r0, [r7, #16]
 8003270:	7f83      	ldrb	r3, [r0, #30]
 8003272:	3301      	adds	r3, #1
 8003274:	7783      	strb	r3, [r0, #30]
 8003276:	2600      	movs	r6, #0
 8003278:	f386 8811 	msr	BASEPRI, r6
 800327c:	eba8 0900 	sub.w	r9, r8, r0
 8003280:	fab9 f989 	clz	r9, r9
 8003284:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8003288:	f385 8811 	msr	BASEPRI, r5
 800328c:	6904      	ldr	r4, [r0, #16]
 800328e:	42bc      	cmp	r4, r7
 8003290:	bf08      	it	eq
 8003292:	4604      	moveq	r4, r0
 8003294:	d101      	bne.n	800329a <regfind+0x3a>
 8003296:	e011      	b.n	80032bc <regfind+0x5c>
 8003298:	461c      	mov	r4, r3
 800329a:	7fa3      	ldrb	r3, [r4, #30]
 800329c:	3301      	adds	r3, #1
 800329e:	77a3      	strb	r3, [r4, #30]
 80032a0:	f386 8811 	msr	BASEPRI, r6
 80032a4:	f7ff ffac 	bl	8003200 <chThdRelease>
 80032a8:	45a0      	cmp	r8, r4
 80032aa:	bf08      	it	eq
 80032ac:	f049 0901 	orreq.w	r9, r9, #1
 80032b0:	f385 8811 	msr	BASEPRI, r5
 80032b4:	6923      	ldr	r3, [r4, #16]
 80032b6:	42bb      	cmp	r3, r7
 80032b8:	4620      	mov	r0, r4
 80032ba:	d1ed      	bne.n	8003298 <regfind+0x38>
 80032bc:	2300      	movs	r3, #0
 80032be:	f383 8811 	msr	BASEPRI, r3
 80032c2:	4620      	mov	r0, r4
 80032c4:	f7ff ff9c 	bl	8003200 <chThdRelease>
 80032c8:	4648      	mov	r0, r9
 80032ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80032ce:	bf00      	nop
 80032d0:	20000930 	.word	0x20000930
	...

080032e0 <chHeapAlloc>:
 80032e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80032e2:	4e20      	ldr	r6, [pc, #128]	; (8003364 <chHeapAlloc+0x84>)
 80032e4:	2800      	cmp	r0, #0
 80032e6:	bf18      	it	ne
 80032e8:	4606      	movne	r6, r0
 80032ea:	f106 0710 	add.w	r7, r6, #16
 80032ee:	3107      	adds	r1, #7
 80032f0:	4638      	mov	r0, r7
 80032f2:	f021 0507 	bic.w	r5, r1, #7
 80032f6:	f106 0408 	add.w	r4, r6, #8
 80032fa:	f7ff fd91 	bl	8002e20 <chMtxLock>
 80032fe:	e003      	b.n	8003308 <chHeapAlloc+0x28>
 8003300:	6843      	ldr	r3, [r0, #4]
 8003302:	42ab      	cmp	r3, r5
 8003304:	d212      	bcs.n	800332c <chHeapAlloc+0x4c>
 8003306:	4604      	mov	r4, r0
 8003308:	6820      	ldr	r0, [r4, #0]
 800330a:	2800      	cmp	r0, #0
 800330c:	d1f8      	bne.n	8003300 <chHeapAlloc+0x20>
 800330e:	4638      	mov	r0, r7
 8003310:	f7fe faee 	bl	80018f0 <chMtxUnlock>
 8003314:	6833      	ldr	r3, [r6, #0]
 8003316:	b313      	cbz	r3, 800335e <chHeapAlloc+0x7e>
 8003318:	f105 0008 	add.w	r0, r5, #8
 800331c:	4798      	blx	r3
 800331e:	b1f0      	cbz	r0, 800335e <chHeapAlloc+0x7e>
 8003320:	e9c0 6500 	strd	r6, r5, [r0]
 8003324:	f100 0408 	add.w	r4, r0, #8
 8003328:	4620      	mov	r0, r4
 800332a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800332c:	f105 0208 	add.w	r2, r5, #8
 8003330:	4293      	cmp	r3, r2
 8003332:	6801      	ldr	r1, [r0, #0]
 8003334:	d208      	bcs.n	8003348 <chHeapAlloc+0x68>
 8003336:	6021      	str	r1, [r4, #0]
 8003338:	4604      	mov	r4, r0
 800333a:	4638      	mov	r0, r7
 800333c:	f844 6b08 	str.w	r6, [r4], #8
 8003340:	f7fe fad6 	bl	80018f0 <chMtxUnlock>
 8003344:	4620      	mov	r0, r4
 8003346:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003348:	eb00 0c02 	add.w	ip, r0, r2
 800334c:	1b5b      	subs	r3, r3, r5
 800334e:	3b08      	subs	r3, #8
 8003350:	5081      	str	r1, [r0, r2]
 8003352:	f8cc 3004 	str.w	r3, [ip, #4]
 8003356:	f8c4 c000 	str.w	ip, [r4]
 800335a:	6045      	str	r5, [r0, #4]
 800335c:	e7ec      	b.n	8003338 <chHeapAlloc+0x58>
 800335e:	2400      	movs	r4, #0
 8003360:	e7e2      	b.n	8003328 <chHeapAlloc+0x48>
 8003362:	bf00      	nop
 8003364:	20000a88 	.word	0x20000a88
	...

08003370 <chThdCreateFromHeap.constprop.53>:
 8003370:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003372:	4605      	mov	r5, r0
 8003374:	460e      	mov	r6, r1
 8003376:	481b      	ldr	r0, [pc, #108]	; (80033e4 <chThdCreateFromHeap.constprop.53+0x74>)
 8003378:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800337c:	f7ff ffb0 	bl	80032e0 <chHeapAlloc>
 8003380:	4604      	mov	r4, r0
 8003382:	b360      	cbz	r0, 80033de <chThdCreateFromHeap.constprop.53+0x6e>
 8003384:	2320      	movs	r3, #32
 8003386:	f383 8811 	msr	BASEPRI, r3
 800338a:	4a17      	ldr	r2, [pc, #92]	; (80033e8 <chThdCreateFromHeap.constprop.53+0x78>)
 800338c:	6102      	str	r2, [r0, #16]
 800338e:	6957      	ldr	r7, [r2, #20]
 8003390:	f8c0 6128 	str.w	r6, [r0, #296]	; 0x128
 8003394:	f500 7192 	add.w	r1, r0, #292	; 0x124
 8003398:	2302      	movs	r3, #2
 800339a:	6085      	str	r5, [r0, #8]
 800339c:	60c1      	str	r1, [r0, #12]
 800339e:	63c5      	str	r5, [r0, #60]	; 0x3c
 80033a0:	f100 0124 	add.w	r1, r0, #36	; 0x24
 80033a4:	2500      	movs	r5, #0
 80033a6:	7703      	strb	r3, [r0, #28]
 80033a8:	f8df e040 	ldr.w	lr, [pc, #64]	; 80033ec <chThdCreateFromHeap.constprop.53+0x7c>
 80033ac:	f8df c040 	ldr.w	ip, [pc, #64]	; 80033f0 <chThdCreateFromHeap.constprop.53+0x80>
 80033b0:	6147      	str	r7, [r0, #20]
 80033b2:	2601      	movs	r6, #1
 80033b4:	f100 0328 	add.w	r3, r0, #40	; 0x28
 80033b8:	f8c0 e124 	str.w	lr, [r0, #292]	; 0x124
 80033bc:	f8c0 c144 	str.w	ip, [r0, #324]	; 0x144
 80033c0:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 80033c4:	6185      	str	r5, [r0, #24]
 80033c6:	7786      	strb	r6, [r0, #30]
 80033c8:	6138      	str	r0, [r7, #16]
 80033ca:	6241      	str	r1, [r0, #36]	; 0x24
 80033cc:	7746      	strb	r6, [r0, #29]
 80033ce:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80033d2:	4629      	mov	r1, r5
 80033d4:	6150      	str	r0, [r2, #20]
 80033d6:	f7fe f9fb 	bl	80017d0 <chSchWakeupS>
 80033da:	f385 8811 	msr	BASEPRI, r5
 80033de:	4620      	mov	r0, r4
 80033e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80033e2:	bf00      	nop
 80033e4:	20000ab0 	.word	0x20000ab0
 80033e8:	20000930 	.word	0x20000930
 80033ec:	08000841 	.word	0x08000841
 80033f0:	08000211 	.word	0x08000211
	...

08003400 <dyn3_execute>:
 8003400:	4b46      	ldr	r3, [pc, #280]	; (800351c <dyn3_execute+0x11c>)
 8003402:	4947      	ldr	r1, [pc, #284]	; (8003520 <dyn3_execute+0x120>)
 8003404:	699b      	ldr	r3, [r3, #24]
 8003406:	6898      	ldr	r0, [r3, #8]
 8003408:	b510      	push	{r4, lr}
 800340a:	3801      	subs	r0, #1
 800340c:	f7ff ffb0 	bl	8003370 <chThdCreateFromHeap.constprop.53>
 8003410:	4604      	mov	r4, r0
 8003412:	2001      	movs	r0, #1
 8003414:	7fa1      	ldrb	r1, [r4, #30]
 8003416:	1a09      	subs	r1, r1, r0
 8003418:	fab1 f181 	clz	r1, r1
 800341c:	0949      	lsrs	r1, r1, #5
 800341e:	f7fd f9c7 	bl	80007b0 <_test_assert>
 8003422:	b100      	cbz	r0, 8003426 <dyn3_execute+0x26>
 8003424:	bd10      	pop	{r4, pc}
 8003426:	2320      	movs	r3, #32
 8003428:	f383 8811 	msr	BASEPRI, r3
 800342c:	7fa3      	ldrb	r3, [r4, #30]
 800342e:	3301      	adds	r3, #1
 8003430:	77a3      	strb	r3, [r4, #30]
 8003432:	f380 8811 	msr	BASEPRI, r0
 8003436:	7fa1      	ldrb	r1, [r4, #30]
 8003438:	2002      	movs	r0, #2
 800343a:	1a09      	subs	r1, r1, r0
 800343c:	fab1 f181 	clz	r1, r1
 8003440:	0949      	lsrs	r1, r1, #5
 8003442:	f7fd f9b5 	bl	80007b0 <_test_assert>
 8003446:	2800      	cmp	r0, #0
 8003448:	d1ec      	bne.n	8003424 <dyn3_execute+0x24>
 800344a:	4620      	mov	r0, r4
 800344c:	f7ff fed8 	bl	8003200 <chThdRelease>
 8003450:	7fa1      	ldrb	r1, [r4, #30]
 8003452:	f1a1 0101 	sub.w	r1, r1, #1
 8003456:	fab1 f181 	clz	r1, r1
 800345a:	2003      	movs	r0, #3
 800345c:	0949      	lsrs	r1, r1, #5
 800345e:	f7fd f9a7 	bl	80007b0 <_test_assert>
 8003462:	2800      	cmp	r0, #0
 8003464:	d1de      	bne.n	8003424 <dyn3_execute+0x24>
 8003466:	4620      	mov	r0, r4
 8003468:	f7ff fefa 	bl	8003260 <regfind>
 800346c:	4601      	mov	r1, r0
 800346e:	2004      	movs	r0, #4
 8003470:	f7fd f99e 	bl	80007b0 <_test_assert>
 8003474:	2800      	cmp	r0, #0
 8003476:	d1d5      	bne.n	8003424 <dyn3_execute+0x24>
 8003478:	4620      	mov	r0, r4
 800347a:	f7ff fef1 	bl	8003260 <regfind>
 800347e:	4601      	mov	r1, r0
 8003480:	2005      	movs	r0, #5
 8003482:	f7fd f995 	bl	80007b0 <_test_assert>
 8003486:	2800      	cmp	r0, #0
 8003488:	d1cc      	bne.n	8003424 <dyn3_execute+0x24>
 800348a:	4620      	mov	r0, r4
 800348c:	f7ff feb8 	bl	8003200 <chThdRelease>
 8003490:	7fa1      	ldrb	r1, [r4, #30]
 8003492:	fab1 f181 	clz	r1, r1
 8003496:	0949      	lsrs	r1, r1, #5
 8003498:	2006      	movs	r0, #6
 800349a:	f7fd f989 	bl	80007b0 <_test_assert>
 800349e:	2800      	cmp	r0, #0
 80034a0:	d1c0      	bne.n	8003424 <dyn3_execute+0x24>
 80034a2:	7f21      	ldrb	r1, [r4, #28]
 80034a4:	fab1 f181 	clz	r1, r1
 80034a8:	0949      	lsrs	r1, r1, #5
 80034aa:	2007      	movs	r0, #7
 80034ac:	f7fd f980 	bl	80007b0 <_test_assert>
 80034b0:	2800      	cmp	r0, #0
 80034b2:	d1b7      	bne.n	8003424 <dyn3_execute+0x24>
 80034b4:	4620      	mov	r0, r4
 80034b6:	f7ff fed3 	bl	8003260 <regfind>
 80034ba:	4601      	mov	r1, r0
 80034bc:	2008      	movs	r0, #8
 80034be:	f7fd f977 	bl	80007b0 <_test_assert>
 80034c2:	2800      	cmp	r0, #0
 80034c4:	d1ae      	bne.n	8003424 <dyn3_execute+0x24>
 80034c6:	4620      	mov	r0, r4
 80034c8:	f7ff feca 	bl	8003260 <regfind>
 80034cc:	4601      	mov	r1, r0
 80034ce:	2009      	movs	r0, #9
 80034d0:	f7fd f96e 	bl	80007b0 <_test_assert>
 80034d4:	2800      	cmp	r0, #0
 80034d6:	d1a5      	bne.n	8003424 <dyn3_execute+0x24>
 80034d8:	2032      	movs	r0, #50	; 0x32
 80034da:	f7ff f921 	bl	8002720 <chThdSleep>
 80034de:	7f21      	ldrb	r1, [r4, #28]
 80034e0:	f1a1 030f 	sub.w	r3, r1, #15
 80034e4:	4259      	negs	r1, r3
 80034e6:	4159      	adcs	r1, r3
 80034e8:	200a      	movs	r0, #10
 80034ea:	f7fd f961 	bl	80007b0 <_test_assert>
 80034ee:	2800      	cmp	r0, #0
 80034f0:	d198      	bne.n	8003424 <dyn3_execute+0x24>
 80034f2:	4620      	mov	r0, r4
 80034f4:	f7ff feb4 	bl	8003260 <regfind>
 80034f8:	4601      	mov	r1, r0
 80034fa:	200b      	movs	r0, #11
 80034fc:	f7fd f958 	bl	80007b0 <_test_assert>
 8003500:	2800      	cmp	r0, #0
 8003502:	d18f      	bne.n	8003424 <dyn3_execute+0x24>
 8003504:	4620      	mov	r0, r4
 8003506:	f7ff feab 	bl	8003260 <regfind>
 800350a:	f080 0101 	eor.w	r1, r0, #1
 800350e:	b2c9      	uxtb	r1, r1
 8003510:	200c      	movs	r0, #12
 8003512:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003516:	f7fd b94b 	b.w	80007b0 <_test_assert>
 800351a:	bf00      	nop
 800351c:	20000930 	.word	0x20000930
 8003520:	08005e90 	.word	0x08005e90
	...

08003530 <heap1_execute>:
 8003530:	b570      	push	{r4, r5, r6, lr}
 8003532:	b082      	sub	sp, #8
 8003534:	4669      	mov	r1, sp
 8003536:	2000      	movs	r0, #0
 8003538:	f7ff fdf2 	bl	8003120 <chHeapStatus>
 800353c:	2110      	movs	r1, #16
 800353e:	2000      	movs	r0, #0
 8003540:	f7ff fece 	bl	80032e0 <chHeapAlloc>
 8003544:	1c01      	adds	r1, r0, #0
 8003546:	4605      	mov	r5, r0
 8003548:	bf18      	it	ne
 800354a:	2101      	movne	r1, #1
 800354c:	2001      	movs	r0, #1
 800354e:	f7fd f92f 	bl	80007b0 <_test_assert>
 8003552:	b108      	cbz	r0, 8003558 <heap1_execute+0x28>
 8003554:	b002      	add	sp, #8
 8003556:	bd70      	pop	{r4, r5, r6, pc}
 8003558:	4604      	mov	r4, r0
 800355a:	4628      	mov	r0, r5
 800355c:	f7ff fe08 	bl	8003170 <chHeapFree>
 8003560:	f06f 01ff 	mvn.w	r1, #255	; 0xff
 8003564:	4620      	mov	r0, r4
 8003566:	f7ff febb 	bl	80032e0 <chHeapAlloc>
 800356a:	fab0 f180 	clz	r1, r0
 800356e:	0949      	lsrs	r1, r1, #5
 8003570:	2002      	movs	r0, #2
 8003572:	f7fd f91d 	bl	80007b0 <_test_assert>
 8003576:	2800      	cmp	r0, #0
 8003578:	d1ec      	bne.n	8003554 <heap1_execute+0x24>
 800357a:	4669      	mov	r1, sp
 800357c:	487c      	ldr	r0, [pc, #496]	; (8003770 <heap1_execute+0x240>)
 800357e:	f7ff fdcf 	bl	8003120 <chHeapStatus>
 8003582:	2110      	movs	r1, #16
 8003584:	487a      	ldr	r0, [pc, #488]	; (8003770 <heap1_execute+0x240>)
 8003586:	f7ff feab 	bl	80032e0 <chHeapAlloc>
 800358a:	2110      	movs	r1, #16
 800358c:	4606      	mov	r6, r0
 800358e:	4878      	ldr	r0, [pc, #480]	; (8003770 <heap1_execute+0x240>)
 8003590:	f7ff fea6 	bl	80032e0 <chHeapAlloc>
 8003594:	2110      	movs	r1, #16
 8003596:	4605      	mov	r5, r0
 8003598:	4875      	ldr	r0, [pc, #468]	; (8003770 <heap1_execute+0x240>)
 800359a:	f7ff fea1 	bl	80032e0 <chHeapAlloc>
 800359e:	4604      	mov	r4, r0
 80035a0:	4630      	mov	r0, r6
 80035a2:	f7ff fde5 	bl	8003170 <chHeapFree>
 80035a6:	4628      	mov	r0, r5
 80035a8:	f7ff fde2 	bl	8003170 <chHeapFree>
 80035ac:	4620      	mov	r0, r4
 80035ae:	f7ff fddf 	bl	8003170 <chHeapFree>
 80035b2:	a901      	add	r1, sp, #4
 80035b4:	486e      	ldr	r0, [pc, #440]	; (8003770 <heap1_execute+0x240>)
 80035b6:	f7ff fdb3 	bl	8003120 <chHeapStatus>
 80035ba:	f1a0 0101 	sub.w	r1, r0, #1
 80035be:	fab1 f181 	clz	r1, r1
 80035c2:	0949      	lsrs	r1, r1, #5
 80035c4:	2003      	movs	r0, #3
 80035c6:	f7fd f8f3 	bl	80007b0 <_test_assert>
 80035ca:	2800      	cmp	r0, #0
 80035cc:	d1c2      	bne.n	8003554 <heap1_execute+0x24>
 80035ce:	2110      	movs	r1, #16
 80035d0:	4867      	ldr	r0, [pc, #412]	; (8003770 <heap1_execute+0x240>)
 80035d2:	f7ff fe85 	bl	80032e0 <chHeapAlloc>
 80035d6:	2110      	movs	r1, #16
 80035d8:	4604      	mov	r4, r0
 80035da:	4865      	ldr	r0, [pc, #404]	; (8003770 <heap1_execute+0x240>)
 80035dc:	f7ff fe80 	bl	80032e0 <chHeapAlloc>
 80035e0:	2110      	movs	r1, #16
 80035e2:	4605      	mov	r5, r0
 80035e4:	4862      	ldr	r0, [pc, #392]	; (8003770 <heap1_execute+0x240>)
 80035e6:	f7ff fe7b 	bl	80032e0 <chHeapAlloc>
 80035ea:	f7ff fdc1 	bl	8003170 <chHeapFree>
 80035ee:	4628      	mov	r0, r5
 80035f0:	f7ff fdbe 	bl	8003170 <chHeapFree>
 80035f4:	4620      	mov	r0, r4
 80035f6:	f7ff fdbb 	bl	8003170 <chHeapFree>
 80035fa:	a901      	add	r1, sp, #4
 80035fc:	485c      	ldr	r0, [pc, #368]	; (8003770 <heap1_execute+0x240>)
 80035fe:	f7ff fd8f 	bl	8003120 <chHeapStatus>
 8003602:	f1a0 0101 	sub.w	r1, r0, #1
 8003606:	fab1 f181 	clz	r1, r1
 800360a:	0949      	lsrs	r1, r1, #5
 800360c:	2004      	movs	r0, #4
 800360e:	f7fd f8cf 	bl	80007b0 <_test_assert>
 8003612:	2800      	cmp	r0, #0
 8003614:	d19e      	bne.n	8003554 <heap1_execute+0x24>
 8003616:	2111      	movs	r1, #17
 8003618:	4855      	ldr	r0, [pc, #340]	; (8003770 <heap1_execute+0x240>)
 800361a:	f7ff fe61 	bl	80032e0 <chHeapAlloc>
 800361e:	2110      	movs	r1, #16
 8003620:	4604      	mov	r4, r0
 8003622:	4853      	ldr	r0, [pc, #332]	; (8003770 <heap1_execute+0x240>)
 8003624:	f7ff fe5c 	bl	80032e0 <chHeapAlloc>
 8003628:	4605      	mov	r5, r0
 800362a:	4620      	mov	r0, r4
 800362c:	f7ff fda0 	bl	8003170 <chHeapFree>
 8003630:	a901      	add	r1, sp, #4
 8003632:	484f      	ldr	r0, [pc, #316]	; (8003770 <heap1_execute+0x240>)
 8003634:	f7ff fd74 	bl	8003120 <chHeapStatus>
 8003638:	f1a0 0102 	sub.w	r1, r0, #2
 800363c:	fab1 f181 	clz	r1, r1
 8003640:	0949      	lsrs	r1, r1, #5
 8003642:	2005      	movs	r0, #5
 8003644:	f7fd f8b4 	bl	80007b0 <_test_assert>
 8003648:	2800      	cmp	r0, #0
 800364a:	d183      	bne.n	8003554 <heap1_execute+0x24>
 800364c:	2110      	movs	r1, #16
 800364e:	4848      	ldr	r0, [pc, #288]	; (8003770 <heap1_execute+0x240>)
 8003650:	f7ff fe46 	bl	80032e0 <chHeapAlloc>
 8003654:	a901      	add	r1, sp, #4
 8003656:	4604      	mov	r4, r0
 8003658:	4845      	ldr	r0, [pc, #276]	; (8003770 <heap1_execute+0x240>)
 800365a:	f7ff fd61 	bl	8003120 <chHeapStatus>
 800365e:	2801      	cmp	r0, #1
 8003660:	f000 8083 	beq.w	800376a <heap1_execute+0x23a>
 8003664:	a901      	add	r1, sp, #4
 8003666:	4842      	ldr	r0, [pc, #264]	; (8003770 <heap1_execute+0x240>)
 8003668:	f7ff fd5a 	bl	8003120 <chHeapStatus>
 800366c:	f1a0 0102 	sub.w	r1, r0, #2
 8003670:	fab1 f181 	clz	r1, r1
 8003674:	0949      	lsrs	r1, r1, #5
 8003676:	2006      	movs	r0, #6
 8003678:	f7fd f89a 	bl	80007b0 <_test_assert>
 800367c:	2800      	cmp	r0, #0
 800367e:	f47f af69 	bne.w	8003554 <heap1_execute+0x24>
 8003682:	4628      	mov	r0, r5
 8003684:	f7ff fd74 	bl	8003170 <chHeapFree>
 8003688:	4620      	mov	r0, r4
 800368a:	f7ff fd71 	bl	8003170 <chHeapFree>
 800368e:	a901      	add	r1, sp, #4
 8003690:	4837      	ldr	r0, [pc, #220]	; (8003770 <heap1_execute+0x240>)
 8003692:	f7ff fd45 	bl	8003120 <chHeapStatus>
 8003696:	f1a0 0101 	sub.w	r1, r0, #1
 800369a:	fab1 f181 	clz	r1, r1
 800369e:	0949      	lsrs	r1, r1, #5
 80036a0:	2007      	movs	r0, #7
 80036a2:	f7fd f885 	bl	80007b0 <_test_assert>
 80036a6:	2800      	cmp	r0, #0
 80036a8:	f47f af54 	bne.w	8003554 <heap1_execute+0x24>
 80036ac:	2110      	movs	r1, #16
 80036ae:	4830      	ldr	r0, [pc, #192]	; (8003770 <heap1_execute+0x240>)
 80036b0:	f7ff fe16 	bl	80032e0 <chHeapAlloc>
 80036b4:	2110      	movs	r1, #16
 80036b6:	4605      	mov	r5, r0
 80036b8:	482d      	ldr	r0, [pc, #180]	; (8003770 <heap1_execute+0x240>)
 80036ba:	f7ff fe11 	bl	80032e0 <chHeapAlloc>
 80036be:	4604      	mov	r4, r0
 80036c0:	4628      	mov	r0, r5
 80036c2:	f7ff fd55 	bl	8003170 <chHeapFree>
 80036c6:	a901      	add	r1, sp, #4
 80036c8:	4829      	ldr	r0, [pc, #164]	; (8003770 <heap1_execute+0x240>)
 80036ca:	f7ff fd29 	bl	8003120 <chHeapStatus>
 80036ce:	1e85      	subs	r5, r0, #2
 80036d0:	4269      	negs	r1, r5
 80036d2:	4169      	adcs	r1, r5
 80036d4:	2008      	movs	r0, #8
 80036d6:	f7fd f86b 	bl	80007b0 <_test_assert>
 80036da:	2800      	cmp	r0, #0
 80036dc:	f47f af3a 	bne.w	8003554 <heap1_execute+0x24>
 80036e0:	2120      	movs	r1, #32
 80036e2:	4823      	ldr	r0, [pc, #140]	; (8003770 <heap1_execute+0x240>)
 80036e4:	f7ff fdfc 	bl	80032e0 <chHeapAlloc>
 80036e8:	f7ff fd42 	bl	8003170 <chHeapFree>
 80036ec:	4620      	mov	r0, r4
 80036ee:	f7ff fd3f 	bl	8003170 <chHeapFree>
 80036f2:	a901      	add	r1, sp, #4
 80036f4:	481e      	ldr	r0, [pc, #120]	; (8003770 <heap1_execute+0x240>)
 80036f6:	f7ff fd13 	bl	8003120 <chHeapStatus>
 80036fa:	3801      	subs	r0, #1
 80036fc:	4241      	negs	r1, r0
 80036fe:	4141      	adcs	r1, r0
 8003700:	2009      	movs	r0, #9
 8003702:	f7fd f855 	bl	80007b0 <_test_assert>
 8003706:	2800      	cmp	r0, #0
 8003708:	f47f af24 	bne.w	8003554 <heap1_execute+0x24>
 800370c:	a901      	add	r1, sp, #4
 800370e:	4818      	ldr	r0, [pc, #96]	; (8003770 <heap1_execute+0x240>)
 8003710:	f7ff fd06 	bl	8003120 <chHeapStatus>
 8003714:	9901      	ldr	r1, [sp, #4]
 8003716:	4816      	ldr	r0, [pc, #88]	; (8003770 <heap1_execute+0x240>)
 8003718:	f7ff fde2 	bl	80032e0 <chHeapAlloc>
 800371c:	a901      	add	r1, sp, #4
 800371e:	4604      	mov	r4, r0
 8003720:	4813      	ldr	r0, [pc, #76]	; (8003770 <heap1_execute+0x240>)
 8003722:	f7ff fcfd 	bl	8003120 <chHeapStatus>
 8003726:	fab0 f180 	clz	r1, r0
 800372a:	0949      	lsrs	r1, r1, #5
 800372c:	200a      	movs	r0, #10
 800372e:	f7fd f83f 	bl	80007b0 <_test_assert>
 8003732:	2800      	cmp	r0, #0
 8003734:	f47f af0e 	bne.w	8003554 <heap1_execute+0x24>
 8003738:	4620      	mov	r0, r4
 800373a:	f7ff fd19 	bl	8003170 <chHeapFree>
 800373e:	a901      	add	r1, sp, #4
 8003740:	480b      	ldr	r0, [pc, #44]	; (8003770 <heap1_execute+0x240>)
 8003742:	f7ff fced 	bl	8003120 <chHeapStatus>
 8003746:	1e42      	subs	r2, r0, #1
 8003748:	4251      	negs	r1, r2
 800374a:	4151      	adcs	r1, r2
 800374c:	200b      	movs	r0, #11
 800374e:	f7fd f82f 	bl	80007b0 <_test_assert>
 8003752:	2800      	cmp	r0, #0
 8003754:	f47f aefe 	bne.w	8003554 <heap1_execute+0x24>
 8003758:	e9dd 3100 	ldrd	r3, r1, [sp]
 800375c:	1acb      	subs	r3, r1, r3
 800375e:	4259      	negs	r1, r3
 8003760:	4159      	adcs	r1, r3
 8003762:	200c      	movs	r0, #12
 8003764:	f7fd f824 	bl	80007b0 <_test_assert>
 8003768:	e6f4      	b.n	8003554 <heap1_execute+0x24>
 800376a:	4601      	mov	r1, r0
 800376c:	e783      	b.n	8003676 <heap1_execute+0x146>
 800376e:	bf00      	nop
 8003770:	200011a8 	.word	0x200011a8
	...

08003780 <chSemWait>:
 8003780:	2320      	movs	r3, #32
 8003782:	f383 8811 	msr	BASEPRI, r3
 8003786:	6883      	ldr	r3, [r0, #8]
 8003788:	3b01      	subs	r3, #1
 800378a:	2b00      	cmp	r3, #0
 800378c:	6083      	str	r3, [r0, #8]
 800378e:	db04      	blt.n	800379a <chSemWait+0x1a>
 8003790:	2000      	movs	r0, #0
 8003792:	2300      	movs	r3, #0
 8003794:	f383 8811 	msr	BASEPRI, r3
 8003798:	4770      	bx	lr
 800379a:	b510      	push	{r4, lr}
 800379c:	4c08      	ldr	r4, [pc, #32]	; (80037c0 <chSemWait+0x40>)
 800379e:	69a2      	ldr	r2, [r4, #24]
 80037a0:	6210      	str	r0, [r2, #32]
 80037a2:	6010      	str	r0, [r2, #0]
 80037a4:	6841      	ldr	r1, [r0, #4]
 80037a6:	6051      	str	r1, [r2, #4]
 80037a8:	4603      	mov	r3, r0
 80037aa:	600a      	str	r2, [r1, #0]
 80037ac:	2005      	movs	r0, #5
 80037ae:	605a      	str	r2, [r3, #4]
 80037b0:	f7fe f926 	bl	8001a00 <chSchGoSleepS>
 80037b4:	69a3      	ldr	r3, [r4, #24]
 80037b6:	6a18      	ldr	r0, [r3, #32]
 80037b8:	2300      	movs	r3, #0
 80037ba:	f383 8811 	msr	BASEPRI, r3
 80037be:	bd10      	pop	{r4, pc}
 80037c0:	20000930 	.word	0x20000930
	...

080037d0 <bmk11_execute>:
 80037d0:	b570      	push	{r4, r5, r6, lr}
 80037d2:	f7ff f89d 	bl	8002910 <test_wait_tick>
 80037d6:	f7fd fd13 	bl	8001200 <test_start_timer.constprop.1>
 80037da:	4e15      	ldr	r6, [pc, #84]	; (8003830 <bmk11_execute+0x60>)
 80037dc:	4c15      	ldr	r4, [pc, #84]	; (8003834 <bmk11_execute+0x64>)
 80037de:	2500      	movs	r5, #0
 80037e0:	4620      	mov	r0, r4
 80037e2:	f7ff ffcd 	bl	8003780 <chSemWait>
 80037e6:	4620      	mov	r0, r4
 80037e8:	f7fe f8b2 	bl	8001950 <chSemSignal>
 80037ec:	4620      	mov	r0, r4
 80037ee:	f7ff ffc7 	bl	8003780 <chSemWait>
 80037f2:	4620      	mov	r0, r4
 80037f4:	f7fe f8ac 	bl	8001950 <chSemSignal>
 80037f8:	4620      	mov	r0, r4
 80037fa:	f7ff ffc1 	bl	8003780 <chSemWait>
 80037fe:	4620      	mov	r0, r4
 8003800:	f7fe f8a6 	bl	8001950 <chSemSignal>
 8003804:	4620      	mov	r0, r4
 8003806:	f7ff ffbb 	bl	8003780 <chSemWait>
 800380a:	4620      	mov	r0, r4
 800380c:	f7fe f8a0 	bl	8001950 <chSemSignal>
 8003810:	7833      	ldrb	r3, [r6, #0]
 8003812:	3501      	adds	r5, #1
 8003814:	2b00      	cmp	r3, #0
 8003816:	d0e3      	beq.n	80037e0 <bmk11_execute+0x10>
 8003818:	4807      	ldr	r0, [pc, #28]	; (8003838 <bmk11_execute+0x68>)
 800381a:	f7fd f839 	bl	8000890 <test_print>
 800381e:	00a8      	lsls	r0, r5, #2
 8003820:	f7fc ff3e 	bl	80006a0 <test_printn>
 8003824:	4805      	ldr	r0, [pc, #20]	; (800383c <bmk11_execute+0x6c>)
 8003826:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800382a:	f7fd b811 	b.w	8000850 <test_println>
 800382e:	bf00      	nop
 8003830:	200011c8 	.word	0x200011c8
 8003834:	20000b28 	.word	0x20000b28
 8003838:	08005d00 	.word	0x08005d00
 800383c:	08005d20 	.word	0x08005d20

08003840 <thread3.lto_priv.67>:
 8003840:	b538      	push	{r3, r4, r5, lr}
 8003842:	4c07      	ldr	r4, [pc, #28]	; (8003860 <thread3.lto_priv.67+0x20>)
 8003844:	69a3      	ldr	r3, [r4, #24]
 8003846:	7f5b      	ldrb	r3, [r3, #29]
 8003848:	075a      	lsls	r2, r3, #29
 800384a:	d407      	bmi.n	800385c <thread3.lto_priv.67+0x1c>
 800384c:	4d05      	ldr	r5, [pc, #20]	; (8003864 <thread3.lto_priv.67+0x24>)
 800384e:	4628      	mov	r0, r5
 8003850:	f7ff ff96 	bl	8003780 <chSemWait>
 8003854:	69a3      	ldr	r3, [r4, #24]
 8003856:	7f5b      	ldrb	r3, [r3, #29]
 8003858:	075b      	lsls	r3, r3, #29
 800385a:	d5f8      	bpl.n	800384e <thread3.lto_priv.67+0xe>
 800385c:	bd38      	pop	{r3, r4, r5, pc}
 800385e:	bf00      	nop
 8003860:	20000930 	.word	0x20000930
 8003864:	20000b28 	.word	0x20000b28
	...

08003870 <sem4_execute>:
 8003870:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003872:	b087      	sub	sp, #28
 8003874:	ac03      	add	r4, sp, #12
 8003876:	2500      	movs	r5, #0
 8003878:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800387c:	9505      	str	r5, [sp, #20]
 800387e:	2620      	movs	r6, #32
 8003880:	f386 8811 	msr	BASEPRI, r6
 8003884:	4629      	mov	r1, r5
 8003886:	4620      	mov	r0, r4
 8003888:	f7fd fc22 	bl	80010d0 <chSemResetI>
 800388c:	f7fd fe70 	bl	8001570 <chSchRescheduleS>
 8003890:	f385 8811 	msr	BASEPRI, r5
 8003894:	f386 8811 	msr	BASEPRI, r6
 8003898:	9905      	ldr	r1, [sp, #20]
 800389a:	42a9      	cmp	r1, r5
 800389c:	bfcc      	ite	gt
 800389e:	2100      	movgt	r1, #0
 80038a0:	2101      	movle	r1, #1
 80038a2:	2001      	movs	r0, #1
 80038a4:	f7fc ff84 	bl	80007b0 <_test_assert>
 80038a8:	b118      	cbz	r0, 80038b2 <sem4_execute+0x42>
 80038aa:	f385 8811 	msr	BASEPRI, r5
 80038ae:	b007      	add	sp, #28
 80038b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80038b2:	4607      	mov	r7, r0
 80038b4:	f380 8811 	msr	BASEPRI, r0
 80038b8:	4a41      	ldr	r2, [pc, #260]	; (80039c0 <sem4_execute+0x150>)
 80038ba:	4b42      	ldr	r3, [pc, #264]	; (80039c4 <sem4_execute+0x154>)
 80038bc:	6992      	ldr	r2, [r2, #24]
 80038be:	4842      	ldr	r0, [pc, #264]	; (80039c8 <sem4_execute+0x158>)
 80038c0:	6892      	ldr	r2, [r2, #8]
 80038c2:	9400      	str	r4, [sp, #0]
 80038c4:	3a01      	subs	r2, #1
 80038c6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80038ca:	f7fe f861 	bl	8001990 <chThdCreateStatic>
 80038ce:	4b3f      	ldr	r3, [pc, #252]	; (80039cc <sem4_execute+0x15c>)
 80038d0:	6018      	str	r0, [r3, #0]
 80038d2:	4620      	mov	r0, r4
 80038d4:	f7ff ff54 	bl	8003780 <chSemWait>
 80038d8:	f386 8811 	msr	BASEPRI, r6
 80038dc:	9905      	ldr	r1, [sp, #20]
 80038de:	2900      	cmp	r1, #0
 80038e0:	bfcc      	ite	gt
 80038e2:	2100      	movgt	r1, #0
 80038e4:	2101      	movle	r1, #1
 80038e6:	2002      	movs	r0, #2
 80038e8:	f7fc ff62 	bl	80007b0 <_test_assert>
 80038ec:	b118      	cbz	r0, 80038f6 <sem4_execute+0x86>
 80038ee:	f387 8811 	msr	BASEPRI, r7
 80038f2:	b007      	add	sp, #28
 80038f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80038f6:	f380 8811 	msr	BASEPRI, r0
 80038fa:	f386 8811 	msr	BASEPRI, r6
 80038fe:	9b05      	ldr	r3, [sp, #20]
 8003900:	2b00      	cmp	r3, #0
 8003902:	dd24      	ble.n	800394e <sem4_execute+0xde>
 8003904:	f7fd fe34 	bl	8001570 <chSchRescheduleS>
 8003908:	2500      	movs	r5, #0
 800390a:	f385 8811 	msr	BASEPRI, r5
 800390e:	2720      	movs	r7, #32
 8003910:	f387 8811 	msr	BASEPRI, r7
 8003914:	9905      	ldr	r1, [sp, #20]
 8003916:	42a9      	cmp	r1, r5
 8003918:	f04f 0003 	mov.w	r0, #3
 800391c:	bfd4      	ite	le
 800391e:	2100      	movle	r1, #0
 8003920:	2101      	movgt	r1, #1
 8003922:	f7fc ff45 	bl	80007b0 <_test_assert>
 8003926:	4606      	mov	r6, r0
 8003928:	2800      	cmp	r0, #0
 800392a:	d1be      	bne.n	80038aa <sem4_execute+0x3a>
 800392c:	f380 8811 	msr	BASEPRI, r0
 8003930:	f387 8811 	msr	BASEPRI, r7
 8003934:	9905      	ldr	r1, [sp, #20]
 8003936:	f1a1 0101 	sub.w	r1, r1, #1
 800393a:	fab1 f181 	clz	r1, r1
 800393e:	2004      	movs	r0, #4
 8003940:	0949      	lsrs	r1, r1, #5
 8003942:	f7fc ff35 	bl	80007b0 <_test_assert>
 8003946:	b130      	cbz	r0, 8003956 <sem4_execute+0xe6>
 8003948:	f386 8811 	msr	BASEPRI, r6
 800394c:	e7af      	b.n	80038ae <sem4_execute+0x3e>
 800394e:	4620      	mov	r0, r4
 8003950:	f7fd fb4e 	bl	8000ff0 <chSemSignalI>
 8003954:	e7d6      	b.n	8003904 <sem4_execute+0x94>
 8003956:	f380 8811 	msr	BASEPRI, r0
 800395a:	f387 8811 	msr	BASEPRI, r7
 800395e:	9b05      	ldr	r3, [sp, #20]
 8003960:	2b00      	cmp	r3, #0
 8003962:	dd28      	ble.n	80039b6 <sem4_execute+0x146>
 8003964:	f7fd fe04 	bl	8001570 <chSchRescheduleS>
 8003968:	2400      	movs	r4, #0
 800396a:	f384 8811 	msr	BASEPRI, r4
 800396e:	2620      	movs	r6, #32
 8003970:	f386 8811 	msr	BASEPRI, r6
 8003974:	9905      	ldr	r1, [sp, #20]
 8003976:	42a1      	cmp	r1, r4
 8003978:	f04f 0003 	mov.w	r0, #3
 800397c:	bfd4      	ite	le
 800397e:	2100      	movle	r1, #0
 8003980:	2101      	movgt	r1, #1
 8003982:	f7fc ff15 	bl	80007b0 <_test_assert>
 8003986:	4605      	mov	r5, r0
 8003988:	b110      	cbz	r0, 8003990 <sem4_execute+0x120>
 800398a:	f384 8811 	msr	BASEPRI, r4
 800398e:	e78e      	b.n	80038ae <sem4_execute+0x3e>
 8003990:	f380 8811 	msr	BASEPRI, r0
 8003994:	f386 8811 	msr	BASEPRI, r6
 8003998:	9905      	ldr	r1, [sp, #20]
 800399a:	f1a1 0101 	sub.w	r1, r1, #1
 800399e:	fab1 f181 	clz	r1, r1
 80039a2:	2005      	movs	r0, #5
 80039a4:	0949      	lsrs	r1, r1, #5
 80039a6:	f7fc ff03 	bl	80007b0 <_test_assert>
 80039aa:	2800      	cmp	r0, #0
 80039ac:	f47f af7d 	bne.w	80038aa <sem4_execute+0x3a>
 80039b0:	f380 8811 	msr	BASEPRI, r0
 80039b4:	e77b      	b.n	80038ae <sem4_execute+0x3e>
 80039b6:	4620      	mov	r0, r4
 80039b8:	f7fd fb1a 	bl	8000ff0 <chSemSignalI>
 80039bc:	e7d2      	b.n	8003964 <sem4_execute+0xf4>
 80039be:	bf00      	nop
 80039c0:	20000930 	.word	0x20000930
 80039c4:	08001591 	.word	0x08001591
 80039c8:	20000b38 	.word	0x20000b38
 80039cc:	200011cc 	.word	0x200011cc

080039d0 <thread3.lto_priv.66>:
 80039d0:	b510      	push	{r4, lr}
 80039d2:	4c04      	ldr	r4, [pc, #16]	; (80039e4 <thread3.lto_priv.66+0x14>)
 80039d4:	4620      	mov	r0, r4
 80039d6:	f7ff fed3 	bl	8003780 <chSemWait>
 80039da:	4620      	mov	r0, r4
 80039dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80039e0:	f7fd bfb6 	b.w	8001950 <chSemSignal>
 80039e4:	200008ac 	.word	0x200008ac
	...

080039f0 <thread1.lto_priv.68>:
 80039f0:	b510      	push	{r4, lr}
 80039f2:	4604      	mov	r4, r0
 80039f4:	4803      	ldr	r0, [pc, #12]	; (8003a04 <thread1.lto_priv.68+0x14>)
 80039f6:	f7ff fec3 	bl	8003780 <chSemWait>
 80039fa:	7820      	ldrb	r0, [r4, #0]
 80039fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003a00:	f7fc beee 	b.w	80007e0 <test_emit_token>
 8003a04:	200008ac 	.word	0x200008ac
	...

08003a10 <chThdWait>:
 8003a10:	b538      	push	{r3, r4, r5, lr}
 8003a12:	4604      	mov	r4, r0
 8003a14:	2320      	movs	r3, #32
 8003a16:	f383 8811 	msr	BASEPRI, r3
 8003a1a:	7f03      	ldrb	r3, [r0, #28]
 8003a1c:	2b0f      	cmp	r3, #15
 8003a1e:	d007      	beq.n	8003a30 <chThdWait+0x20>
 8003a20:	4b08      	ldr	r3, [pc, #32]	; (8003a44 <chThdWait+0x34>)
 8003a22:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003a24:	699b      	ldr	r3, [r3, #24]
 8003a26:	2009      	movs	r0, #9
 8003a28:	601a      	str	r2, [r3, #0]
 8003a2a:	6263      	str	r3, [r4, #36]	; 0x24
 8003a2c:	f7fd ffe8 	bl	8001a00 <chSchGoSleepS>
 8003a30:	6a25      	ldr	r5, [r4, #32]
 8003a32:	2300      	movs	r3, #0
 8003a34:	f383 8811 	msr	BASEPRI, r3
 8003a38:	4620      	mov	r0, r4
 8003a3a:	f7ff fbe1 	bl	8003200 <chThdRelease>
 8003a3e:	4628      	mov	r0, r5
 8003a40:	bd38      	pop	{r3, r4, r5, pc}
 8003a42:	bf00      	nop
 8003a44:	20000930 	.word	0x20000930
	...

08003a50 <bmk5_execute>:
 8003a50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003a54:	4b15      	ldr	r3, [pc, #84]	; (8003aac <bmk5_execute+0x5c>)
 8003a56:	f8df 9064 	ldr.w	r9, [pc, #100]	; 8003abc <bmk5_execute+0x6c>
 8003a5a:	699b      	ldr	r3, [r3, #24]
 8003a5c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8003ac0 <bmk5_execute+0x70>
 8003a60:	689d      	ldr	r5, [r3, #8]
 8003a62:	4f13      	ldr	r7, [pc, #76]	; (8003ab0 <bmk5_execute+0x60>)
 8003a64:	b083      	sub	sp, #12
 8003a66:	f7fe ff53 	bl	8002910 <test_wait_tick>
 8003a6a:	f7fd fbc9 	bl	8001200 <test_start_timer.constprop.1>
 8003a6e:	2400      	movs	r4, #0
 8003a70:	3d01      	subs	r5, #1
 8003a72:	4626      	mov	r6, r4
 8003a74:	4643      	mov	r3, r8
 8003a76:	462a      	mov	r2, r5
 8003a78:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003a7c:	9600      	str	r6, [sp, #0]
 8003a7e:	4638      	mov	r0, r7
 8003a80:	f7fd ff86 	bl	8001990 <chThdCreateStatic>
 8003a84:	f7ff ffc4 	bl	8003a10 <chThdWait>
 8003a88:	f899 3000 	ldrb.w	r3, [r9]
 8003a8c:	3401      	adds	r4, #1
 8003a8e:	2b00      	cmp	r3, #0
 8003a90:	d0f0      	beq.n	8003a74 <bmk5_execute+0x24>
 8003a92:	4808      	ldr	r0, [pc, #32]	; (8003ab4 <bmk5_execute+0x64>)
 8003a94:	f7fc fefc 	bl	8000890 <test_print>
 8003a98:	4620      	mov	r0, r4
 8003a9a:	f7fc fe01 	bl	80006a0 <test_printn>
 8003a9e:	4806      	ldr	r0, [pc, #24]	; (8003ab8 <bmk5_execute+0x68>)
 8003aa0:	b003      	add	sp, #12
 8003aa2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003aa6:	f7fc bed3 	b.w	8000850 <test_println>
 8003aaa:	bf00      	nop
 8003aac:	20000930 	.word	0x20000930
 8003ab0:	20000b38 	.word	0x20000b38
 8003ab4:	08005d00 	.word	0x08005d00
 8003ab8:	08005e00 	.word	0x08005e00
 8003abc:	200011c8 	.word	0x200011c8
 8003ac0:	08005c91 	.word	0x08005c91
	...

08003ad0 <test_wait_threads>:
 8003ad0:	b570      	push	{r4, r5, r6, lr}
 8003ad2:	4c07      	ldr	r4, [pc, #28]	; (8003af0 <test_wait_threads+0x20>)
 8003ad4:	2600      	movs	r6, #0
 8003ad6:	f104 0514 	add.w	r5, r4, #20
 8003ada:	f854 0b04 	ldr.w	r0, [r4], #4
 8003ade:	b118      	cbz	r0, 8003ae8 <test_wait_threads+0x18>
 8003ae0:	f7ff ff96 	bl	8003a10 <chThdWait>
 8003ae4:	f844 6c04 	str.w	r6, [r4, #-4]
 8003ae8:	42ac      	cmp	r4, r5
 8003aea:	d1f6      	bne.n	8003ada <test_wait_threads+0xa>
 8003aec:	bd70      	pop	{r4, r5, r6, pc}
 8003aee:	bf00      	nop
 8003af0:	200011cc 	.word	0x200011cc
	...

08003b00 <bmk8_execute>:
 8003b00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003b04:	b084      	sub	sp, #16
 8003b06:	ac04      	add	r4, sp, #16
 8003b08:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8003bd8 <bmk8_execute+0xd8>
 8003b0c:	4f2d      	ldr	r7, [pc, #180]	; (8003bc4 <bmk8_execute+0xc4>)
 8003b0e:	4e2e      	ldr	r6, [pc, #184]	; (8003bc8 <bmk8_execute+0xc8>)
 8003b10:	4d2e      	ldr	r5, [pc, #184]	; (8003bcc <bmk8_execute+0xcc>)
 8003b12:	2300      	movs	r3, #0
 8003b14:	f844 3d04 	str.w	r3, [r4, #-4]!
 8003b18:	f7fe fefa 	bl	8002910 <test_wait_tick>
 8003b1c:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003b20:	689a      	ldr	r2, [r3, #8]
 8003b22:	9400      	str	r4, [sp, #0]
 8003b24:	463b      	mov	r3, r7
 8003b26:	3a01      	subs	r2, #1
 8003b28:	4630      	mov	r0, r6
 8003b2a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b2e:	f7fd ff2f 	bl	8001990 <chThdCreateStatic>
 8003b32:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003b36:	6028      	str	r0, [r5, #0]
 8003b38:	689a      	ldr	r2, [r3, #8]
 8003b3a:	9400      	str	r4, [sp, #0]
 8003b3c:	463b      	mov	r3, r7
 8003b3e:	3a01      	subs	r2, #1
 8003b40:	f506 70a4 	add.w	r0, r6, #328	; 0x148
 8003b44:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b48:	f7fd ff22 	bl	8001990 <chThdCreateStatic>
 8003b4c:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003b50:	6068      	str	r0, [r5, #4]
 8003b52:	689a      	ldr	r2, [r3, #8]
 8003b54:	9400      	str	r4, [sp, #0]
 8003b56:	463b      	mov	r3, r7
 8003b58:	3a01      	subs	r2, #1
 8003b5a:	f506 7024 	add.w	r0, r6, #656	; 0x290
 8003b5e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b62:	f7fd ff15 	bl	8001990 <chThdCreateStatic>
 8003b66:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003b6a:	60a8      	str	r0, [r5, #8]
 8003b6c:	689a      	ldr	r2, [r3, #8]
 8003b6e:	9400      	str	r4, [sp, #0]
 8003b70:	463b      	mov	r3, r7
 8003b72:	3a01      	subs	r2, #1
 8003b74:	f506 7076 	add.w	r0, r6, #984	; 0x3d8
 8003b78:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b7c:	f7fd ff08 	bl	8001990 <chThdCreateStatic>
 8003b80:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003b84:	60e8      	str	r0, [r5, #12]
 8003b86:	689a      	ldr	r2, [r3, #8]
 8003b88:	9400      	str	r4, [sp, #0]
 8003b8a:	3a01      	subs	r2, #1
 8003b8c:	463b      	mov	r3, r7
 8003b8e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b92:	f506 60a4 	add.w	r0, r6, #1312	; 0x520
 8003b96:	f7fd fefb 	bl	8001990 <chThdCreateStatic>
 8003b9a:	6128      	str	r0, [r5, #16]
 8003b9c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8003ba0:	f7fe fdbe 	bl	8002720 <chThdSleep>
 8003ba4:	f7fc fda4 	bl	80006f0 <test_terminate_threads>
 8003ba8:	f7ff ff92 	bl	8003ad0 <test_wait_threads>
 8003bac:	4808      	ldr	r0, [pc, #32]	; (8003bd0 <bmk8_execute+0xd0>)
 8003bae:	f7fc fe6f 	bl	8000890 <test_print>
 8003bb2:	9803      	ldr	r0, [sp, #12]
 8003bb4:	f7fc fd74 	bl	80006a0 <test_printn>
 8003bb8:	4806      	ldr	r0, [pc, #24]	; (8003bd4 <bmk8_execute+0xd4>)
 8003bba:	f7fc fe49 	bl	8000850 <test_println>
 8003bbe:	b004      	add	sp, #16
 8003bc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003bc4:	08001501 	.word	0x08001501
 8003bc8:	20000b38 	.word	0x20000b38
 8003bcc:	200011cc 	.word	0x200011cc
 8003bd0:	08005d00 	.word	0x08005d00
 8003bd4:	08005e30 	.word	0x08005e30
 8003bd8:	20000930 	.word	0x20000930
 8003bdc:	00000000 	.word	0x00000000

08003be0 <bmk7_execute>:
 8003be0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003be4:	4e3a      	ldr	r6, [pc, #232]	; (8003cd0 <bmk7_execute+0xf0>)
 8003be6:	4b3b      	ldr	r3, [pc, #236]	; (8003cd4 <bmk7_execute+0xf4>)
 8003be8:	69b2      	ldr	r2, [r6, #24]
 8003bea:	483b      	ldr	r0, [pc, #236]	; (8003cd8 <bmk7_execute+0xf8>)
 8003bec:	6892      	ldr	r2, [r2, #8]
 8003bee:	4d3b      	ldr	r5, [pc, #236]	; (8003cdc <bmk7_execute+0xfc>)
 8003bf0:	f8df 810c 	ldr.w	r8, [pc, #268]	; 8003d00 <bmk7_execute+0x120>
 8003bf4:	4f3a      	ldr	r7, [pc, #232]	; (8003ce0 <bmk7_execute+0x100>)
 8003bf6:	b082      	sub	sp, #8
 8003bf8:	2400      	movs	r4, #0
 8003bfa:	3205      	adds	r2, #5
 8003bfc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003c00:	9400      	str	r4, [sp, #0]
 8003c02:	f7fd fec5 	bl	8001990 <chThdCreateStatic>
 8003c06:	69b3      	ldr	r3, [r6, #24]
 8003c08:	6028      	str	r0, [r5, #0]
 8003c0a:	689a      	ldr	r2, [r3, #8]
 8003c0c:	4835      	ldr	r0, [pc, #212]	; (8003ce4 <bmk7_execute+0x104>)
 8003c0e:	4b31      	ldr	r3, [pc, #196]	; (8003cd4 <bmk7_execute+0xf4>)
 8003c10:	9400      	str	r4, [sp, #0]
 8003c12:	3204      	adds	r2, #4
 8003c14:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003c18:	f7fd feba 	bl	8001990 <chThdCreateStatic>
 8003c1c:	69b3      	ldr	r3, [r6, #24]
 8003c1e:	6068      	str	r0, [r5, #4]
 8003c20:	689a      	ldr	r2, [r3, #8]
 8003c22:	4831      	ldr	r0, [pc, #196]	; (8003ce8 <bmk7_execute+0x108>)
 8003c24:	4b2b      	ldr	r3, [pc, #172]	; (8003cd4 <bmk7_execute+0xf4>)
 8003c26:	9400      	str	r4, [sp, #0]
 8003c28:	3203      	adds	r2, #3
 8003c2a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003c2e:	f7fd feaf 	bl	8001990 <chThdCreateStatic>
 8003c32:	69b3      	ldr	r3, [r6, #24]
 8003c34:	60a8      	str	r0, [r5, #8]
 8003c36:	689a      	ldr	r2, [r3, #8]
 8003c38:	482c      	ldr	r0, [pc, #176]	; (8003cec <bmk7_execute+0x10c>)
 8003c3a:	4b26      	ldr	r3, [pc, #152]	; (8003cd4 <bmk7_execute+0xf4>)
 8003c3c:	9400      	str	r4, [sp, #0]
 8003c3e:	3202      	adds	r2, #2
 8003c40:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003c44:	f7fd fea4 	bl	8001990 <chThdCreateStatic>
 8003c48:	69b3      	ldr	r3, [r6, #24]
 8003c4a:	60e8      	str	r0, [r5, #12]
 8003c4c:	689a      	ldr	r2, [r3, #8]
 8003c4e:	4828      	ldr	r0, [pc, #160]	; (8003cf0 <bmk7_execute+0x110>)
 8003c50:	4b20      	ldr	r3, [pc, #128]	; (8003cd4 <bmk7_execute+0xf4>)
 8003c52:	9400      	str	r4, [sp, #0]
 8003c54:	3201      	adds	r2, #1
 8003c56:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003c5a:	f7fd fe99 	bl	8001990 <chThdCreateStatic>
 8003c5e:	6128      	str	r0, [r5, #16]
 8003c60:	f7fe fe56 	bl	8002910 <test_wait_tick>
 8003c64:	f7fd facc 	bl	8001200 <test_start_timer.constprop.1>
 8003c68:	4625      	mov	r5, r4
 8003c6a:	2620      	movs	r6, #32
 8003c6c:	f386 8811 	msr	BASEPRI, r6
 8003c70:	2100      	movs	r1, #0
 8003c72:	4638      	mov	r0, r7
 8003c74:	f7fd fa2c 	bl	80010d0 <chSemResetI>
 8003c78:	f7fd fc7a 	bl	8001570 <chSchRescheduleS>
 8003c7c:	f385 8811 	msr	BASEPRI, r5
 8003c80:	f898 3000 	ldrb.w	r3, [r8]
 8003c84:	3401      	adds	r4, #1
 8003c86:	2b00      	cmp	r3, #0
 8003c88:	d0f0      	beq.n	8003c6c <bmk7_execute+0x8c>
 8003c8a:	f7fc fd31 	bl	80006f0 <test_terminate_threads>
 8003c8e:	f386 8811 	msr	BASEPRI, r6
 8003c92:	2100      	movs	r1, #0
 8003c94:	4812      	ldr	r0, [pc, #72]	; (8003ce0 <bmk7_execute+0x100>)
 8003c96:	f7fd fa1b 	bl	80010d0 <chSemResetI>
 8003c9a:	f7fd fc69 	bl	8001570 <chSchRescheduleS>
 8003c9e:	f385 8811 	msr	BASEPRI, r5
 8003ca2:	f7ff ff15 	bl	8003ad0 <test_wait_threads>
 8003ca6:	4813      	ldr	r0, [pc, #76]	; (8003cf4 <bmk7_execute+0x114>)
 8003ca8:	f7fc fdf2 	bl	8000890 <test_print>
 8003cac:	4620      	mov	r0, r4
 8003cae:	f7fc fcf7 	bl	80006a0 <test_printn>
 8003cb2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8003cb6:	4810      	ldr	r0, [pc, #64]	; (8003cf8 <bmk7_execute+0x118>)
 8003cb8:	f7fc fdea 	bl	8000890 <test_print>
 8003cbc:	0060      	lsls	r0, r4, #1
 8003cbe:	f7fc fcef 	bl	80006a0 <test_printn>
 8003cc2:	480e      	ldr	r0, [pc, #56]	; (8003cfc <bmk7_execute+0x11c>)
 8003cc4:	b002      	add	sp, #8
 8003cc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003cca:	f7fc bdc1 	b.w	8000850 <test_println>
 8003cce:	bf00      	nop
 8003cd0:	20000930 	.word	0x20000930
 8003cd4:	08003841 	.word	0x08003841
 8003cd8:	20000b38 	.word	0x20000b38
 8003cdc:	200011cc 	.word	0x200011cc
 8003ce0:	20000b28 	.word	0x20000b28
 8003ce4:	20000c80 	.word	0x20000c80
 8003ce8:	20000dc8 	.word	0x20000dc8
 8003cec:	20000f10 	.word	0x20000f10
 8003cf0:	20001058 	.word	0x20001058
 8003cf4:	08005d00 	.word	0x08005d00
 8003cf8:	08005e10 	.word	0x08005e10
 8003cfc:	08005e30 	.word	0x08005e30
 8003d00:	200011c8 	.word	0x200011c8
	...

08003d10 <bmk4_execute>:
 8003d10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d14:	4a23      	ldr	r2, [pc, #140]	; (8003da4 <bmk4_execute+0x94>)
 8003d16:	4b24      	ldr	r3, [pc, #144]	; (8003da8 <bmk4_execute+0x98>)
 8003d18:	6992      	ldr	r2, [r2, #24]
 8003d1a:	4824      	ldr	r0, [pc, #144]	; (8003dac <bmk4_execute+0x9c>)
 8003d1c:	6892      	ldr	r2, [r2, #8]
 8003d1e:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8003dbc <bmk4_execute+0xac>
 8003d22:	b082      	sub	sp, #8
 8003d24:	2500      	movs	r5, #0
 8003d26:	3201      	adds	r2, #1
 8003d28:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d2c:	9500      	str	r5, [sp, #0]
 8003d2e:	f7fd fe2f 	bl	8001990 <chThdCreateStatic>
 8003d32:	4b1f      	ldr	r3, [pc, #124]	; (8003db0 <bmk4_execute+0xa0>)
 8003d34:	4604      	mov	r4, r0
 8003d36:	6018      	str	r0, [r3, #0]
 8003d38:	f7fe fdea 	bl	8002910 <test_wait_tick>
 8003d3c:	f7fd fa60 	bl	8001200 <test_start_timer.constprop.1>
 8003d40:	462e      	mov	r6, r5
 8003d42:	2720      	movs	r7, #32
 8003d44:	f387 8811 	msr	BASEPRI, r7
 8003d48:	2100      	movs	r1, #0
 8003d4a:	4620      	mov	r0, r4
 8003d4c:	f7fd fd40 	bl	80017d0 <chSchWakeupS>
 8003d50:	4620      	mov	r0, r4
 8003d52:	2100      	movs	r1, #0
 8003d54:	f7fd fd3c 	bl	80017d0 <chSchWakeupS>
 8003d58:	4620      	mov	r0, r4
 8003d5a:	2100      	movs	r1, #0
 8003d5c:	f7fd fd38 	bl	80017d0 <chSchWakeupS>
 8003d60:	4620      	mov	r0, r4
 8003d62:	2100      	movs	r1, #0
 8003d64:	f7fd fd34 	bl	80017d0 <chSchWakeupS>
 8003d68:	f386 8811 	msr	BASEPRI, r6
 8003d6c:	f898 3000 	ldrb.w	r3, [r8]
 8003d70:	3504      	adds	r5, #4
 8003d72:	2b00      	cmp	r3, #0
 8003d74:	d0e6      	beq.n	8003d44 <bmk4_execute+0x34>
 8003d76:	f387 8811 	msr	BASEPRI, r7
 8003d7a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003d7e:	4620      	mov	r0, r4
 8003d80:	f7fd fd26 	bl	80017d0 <chSchWakeupS>
 8003d84:	f386 8811 	msr	BASEPRI, r6
 8003d88:	f7ff fea2 	bl	8003ad0 <test_wait_threads>
 8003d8c:	4809      	ldr	r0, [pc, #36]	; (8003db4 <bmk4_execute+0xa4>)
 8003d8e:	f7fc fd7f 	bl	8000890 <test_print>
 8003d92:	0068      	lsls	r0, r5, #1
 8003d94:	f7fc fc84 	bl	80006a0 <test_printn>
 8003d98:	4807      	ldr	r0, [pc, #28]	; (8003db8 <bmk4_execute+0xa8>)
 8003d9a:	b002      	add	sp, #8
 8003d9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003da0:	f7fc bd56 	b.w	8000850 <test_println>
 8003da4:	20000930 	.word	0x20000930
 8003da8:	08001ba1 	.word	0x08001ba1
 8003dac:	20000b38 	.word	0x20000b38
 8003db0:	200011cc 	.word	0x200011cc
 8003db4:	08005d00 	.word	0x08005d00
 8003db8:	08005e30 	.word	0x08005e30
 8003dbc:	200011c8 	.word	0x200011c8

08003dc0 <bmk3_execute>:
 8003dc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003dc4:	4f2c      	ldr	r7, [pc, #176]	; (8003e78 <bmk3_execute+0xb8>)
 8003dc6:	4d2d      	ldr	r5, [pc, #180]	; (8003e7c <bmk3_execute+0xbc>)
 8003dc8:	69ba      	ldr	r2, [r7, #24]
 8003dca:	4b2d      	ldr	r3, [pc, #180]	; (8003e80 <bmk3_execute+0xc0>)
 8003dcc:	6892      	ldr	r2, [r2, #8]
 8003dce:	4c2d      	ldr	r4, [pc, #180]	; (8003e84 <bmk3_execute+0xc4>)
 8003dd0:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8003e94 <bmk3_execute+0xd4>
 8003dd4:	b082      	sub	sp, #8
 8003dd6:	2600      	movs	r6, #0
 8003dd8:	3201      	adds	r2, #1
 8003dda:	4628      	mov	r0, r5
 8003ddc:	9600      	str	r6, [sp, #0]
 8003dde:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003de2:	f7fd fdd5 	bl	8001990 <chThdCreateStatic>
 8003de6:	69bb      	ldr	r3, [r7, #24]
 8003de8:	6020      	str	r0, [r4, #0]
 8003dea:	689a      	ldr	r2, [r3, #8]
 8003dec:	9600      	str	r6, [sp, #0]
 8003dee:	4643      	mov	r3, r8
 8003df0:	3a02      	subs	r2, #2
 8003df2:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8003df6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003dfa:	f7fd fdc9 	bl	8001990 <chThdCreateStatic>
 8003dfe:	69bb      	ldr	r3, [r7, #24]
 8003e00:	6060      	str	r0, [r4, #4]
 8003e02:	689a      	ldr	r2, [r3, #8]
 8003e04:	9600      	str	r6, [sp, #0]
 8003e06:	4643      	mov	r3, r8
 8003e08:	3a03      	subs	r2, #3
 8003e0a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8003e0e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003e12:	f7fd fdbd 	bl	8001990 <chThdCreateStatic>
 8003e16:	69bb      	ldr	r3, [r7, #24]
 8003e18:	60a0      	str	r0, [r4, #8]
 8003e1a:	689a      	ldr	r2, [r3, #8]
 8003e1c:	9600      	str	r6, [sp, #0]
 8003e1e:	4643      	mov	r3, r8
 8003e20:	3a04      	subs	r2, #4
 8003e22:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8003e26:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003e2a:	f7fd fdb1 	bl	8001990 <chThdCreateStatic>
 8003e2e:	69bb      	ldr	r3, [r7, #24]
 8003e30:	60e0      	str	r0, [r4, #12]
 8003e32:	689a      	ldr	r2, [r3, #8]
 8003e34:	9600      	str	r6, [sp, #0]
 8003e36:	3a05      	subs	r2, #5
 8003e38:	4643      	mov	r3, r8
 8003e3a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003e3e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8003e42:	f7fd fda5 	bl	8001990 <chThdCreateStatic>
 8003e46:	6120      	str	r0, [r4, #16]
 8003e48:	6820      	ldr	r0, [r4, #0]
 8003e4a:	f7fe ff51 	bl	8002cf0 <msg_loop_test>
 8003e4e:	4604      	mov	r4, r0
 8003e50:	f7ff fe3e 	bl	8003ad0 <test_wait_threads>
 8003e54:	480c      	ldr	r0, [pc, #48]	; (8003e88 <bmk3_execute+0xc8>)
 8003e56:	f7fc fd1b 	bl	8000890 <test_print>
 8003e5a:	4620      	mov	r0, r4
 8003e5c:	f7fc fc20 	bl	80006a0 <test_printn>
 8003e60:	480a      	ldr	r0, [pc, #40]	; (8003e8c <bmk3_execute+0xcc>)
 8003e62:	f7fc fd15 	bl	8000890 <test_print>
 8003e66:	0060      	lsls	r0, r4, #1
 8003e68:	f7fc fc1a 	bl	80006a0 <test_printn>
 8003e6c:	4808      	ldr	r0, [pc, #32]	; (8003e90 <bmk3_execute+0xd0>)
 8003e6e:	b002      	add	sp, #8
 8003e70:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003e74:	f7fc bcec 	b.w	8000850 <test_println>
 8003e78:	20000930 	.word	0x20000930
 8003e7c:	20000b38 	.word	0x20000b38
 8003e80:	08002bf1 	.word	0x08002bf1
 8003e84:	200011cc 	.word	0x200011cc
 8003e88:	08005d00 	.word	0x08005d00
 8003e8c:	08005df0 	.word	0x08005df0
 8003e90:	08005e30 	.word	0x08005e30
 8003e94:	08005c91 	.word	0x08005c91
	...

08003ea0 <bmk2_execute>:
 8003ea0:	b510      	push	{r4, lr}
 8003ea2:	4a13      	ldr	r2, [pc, #76]	; (8003ef0 <bmk2_execute+0x50>)
 8003ea4:	4b13      	ldr	r3, [pc, #76]	; (8003ef4 <bmk2_execute+0x54>)
 8003ea6:	6992      	ldr	r2, [r2, #24]
 8003ea8:	4813      	ldr	r0, [pc, #76]	; (8003ef8 <bmk2_execute+0x58>)
 8003eaa:	6892      	ldr	r2, [r2, #8]
 8003eac:	b082      	sub	sp, #8
 8003eae:	2100      	movs	r1, #0
 8003eb0:	3201      	adds	r2, #1
 8003eb2:	9100      	str	r1, [sp, #0]
 8003eb4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003eb8:	f7fd fd6a 	bl	8001990 <chThdCreateStatic>
 8003ebc:	4b0f      	ldr	r3, [pc, #60]	; (8003efc <bmk2_execute+0x5c>)
 8003ebe:	6018      	str	r0, [r3, #0]
 8003ec0:	f7fe ff16 	bl	8002cf0 <msg_loop_test>
 8003ec4:	4604      	mov	r4, r0
 8003ec6:	f7ff fe03 	bl	8003ad0 <test_wait_threads>
 8003eca:	480d      	ldr	r0, [pc, #52]	; (8003f00 <bmk2_execute+0x60>)
 8003ecc:	f7fc fce0 	bl	8000890 <test_print>
 8003ed0:	4620      	mov	r0, r4
 8003ed2:	f7fc fbe5 	bl	80006a0 <test_printn>
 8003ed6:	480b      	ldr	r0, [pc, #44]	; (8003f04 <bmk2_execute+0x64>)
 8003ed8:	f7fc fcda 	bl	8000890 <test_print>
 8003edc:	0060      	lsls	r0, r4, #1
 8003ede:	f7fc fbdf 	bl	80006a0 <test_printn>
 8003ee2:	4809      	ldr	r0, [pc, #36]	; (8003f08 <bmk2_execute+0x68>)
 8003ee4:	b002      	add	sp, #8
 8003ee6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003eea:	f7fc bcb1 	b.w	8000850 <test_println>
 8003eee:	bf00      	nop
 8003ef0:	20000930 	.word	0x20000930
 8003ef4:	08002bf1 	.word	0x08002bf1
 8003ef8:	20000b38 	.word	0x20000b38
 8003efc:	200011cc 	.word	0x200011cc
 8003f00:	08005d00 	.word	0x08005d00
 8003f04:	08005df0 	.word	0x08005df0
 8003f08:	08005e30 	.word	0x08005e30
 8003f0c:	00000000 	.word	0x00000000

08003f10 <bmk1_execute>:
 8003f10:	b510      	push	{r4, lr}
 8003f12:	4a13      	ldr	r2, [pc, #76]	; (8003f60 <bmk1_execute+0x50>)
 8003f14:	4b13      	ldr	r3, [pc, #76]	; (8003f64 <bmk1_execute+0x54>)
 8003f16:	6992      	ldr	r2, [r2, #24]
 8003f18:	4813      	ldr	r0, [pc, #76]	; (8003f68 <bmk1_execute+0x58>)
 8003f1a:	6892      	ldr	r2, [r2, #8]
 8003f1c:	b082      	sub	sp, #8
 8003f1e:	2100      	movs	r1, #0
 8003f20:	3a01      	subs	r2, #1
 8003f22:	9100      	str	r1, [sp, #0]
 8003f24:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003f28:	f7fd fd32 	bl	8001990 <chThdCreateStatic>
 8003f2c:	4b0f      	ldr	r3, [pc, #60]	; (8003f6c <bmk1_execute+0x5c>)
 8003f2e:	6018      	str	r0, [r3, #0]
 8003f30:	f7fe fede 	bl	8002cf0 <msg_loop_test>
 8003f34:	4604      	mov	r4, r0
 8003f36:	f7ff fdcb 	bl	8003ad0 <test_wait_threads>
 8003f3a:	480d      	ldr	r0, [pc, #52]	; (8003f70 <bmk1_execute+0x60>)
 8003f3c:	f7fc fca8 	bl	8000890 <test_print>
 8003f40:	4620      	mov	r0, r4
 8003f42:	f7fc fbad 	bl	80006a0 <test_printn>
 8003f46:	480b      	ldr	r0, [pc, #44]	; (8003f74 <bmk1_execute+0x64>)
 8003f48:	f7fc fca2 	bl	8000890 <test_print>
 8003f4c:	0060      	lsls	r0, r4, #1
 8003f4e:	f7fc fba7 	bl	80006a0 <test_printn>
 8003f52:	4809      	ldr	r0, [pc, #36]	; (8003f78 <bmk1_execute+0x68>)
 8003f54:	b002      	add	sp, #8
 8003f56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003f5a:	f7fc bc79 	b.w	8000850 <test_println>
 8003f5e:	bf00      	nop
 8003f60:	20000930 	.word	0x20000930
 8003f64:	08002bf1 	.word	0x08002bf1
 8003f68:	20000b38 	.word	0x20000b38
 8003f6c:	200011cc 	.word	0x200011cc
 8003f70:	08005d00 	.word	0x08005d00
 8003f74:	08005df0 	.word	0x08005df0
 8003f78:	08005e30 	.word	0x08005e30
 8003f7c:	00000000 	.word	0x00000000

08003f80 <queues2_execute>:
 8003f80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003f84:	2320      	movs	r3, #32
 8003f86:	b083      	sub	sp, #12
 8003f88:	f383 8811 	msr	BASEPRI, r3
 8003f8c:	4d8a      	ldr	r5, [pc, #552]	; (80041b8 <queues2_execute+0x238>)
 8003f8e:	e9d5 3205 	ldrd	r3, r2, [r5, #20]
 8003f92:	429a      	cmp	r2, r3
 8003f94:	d041      	beq.n	800401a <queues2_execute+0x9a>
 8003f96:	2100      	movs	r1, #0
 8003f98:	2001      	movs	r0, #1
 8003f9a:	f7fc fc09 	bl	80007b0 <_test_assert>
 8003f9e:	bbb0      	cbnz	r0, 800400e <queues2_execute+0x8e>
 8003fa0:	f380 8811 	msr	BASEPRI, r0
 8003fa4:	4e84      	ldr	r6, [pc, #528]	; (80041b8 <queues2_execute+0x238>)
 8003fa6:	2441      	movs	r4, #65	; 0x41
 8003fa8:	4621      	mov	r1, r4
 8003faa:	3401      	adds	r4, #1
 8003fac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003fb0:	4630      	mov	r0, r6
 8003fb2:	b2e4      	uxtb	r4, r4
 8003fb4:	f7fe fae4 	bl	8002580 <chOQPutTimeout>
 8003fb8:	2c45      	cmp	r4, #69	; 0x45
 8003fba:	d1f5      	bne.n	8003fa8 <queues2_execute+0x28>
 8003fbc:	2620      	movs	r6, #32
 8003fbe:	f386 8811 	msr	BASEPRI, r6
 8003fc2:	68a9      	ldr	r1, [r5, #8]
 8003fc4:	fab1 f181 	clz	r1, r1
 8003fc8:	0949      	lsrs	r1, r1, #5
 8003fca:	2002      	movs	r0, #2
 8003fcc:	f7fc fbf0 	bl	80007b0 <_test_assert>
 8003fd0:	4607      	mov	r7, r0
 8003fd2:	b9e0      	cbnz	r0, 800400e <queues2_execute+0x8e>
 8003fd4:	f380 8811 	msr	BASEPRI, r0
 8003fd8:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 80041b8 <queues2_execute+0x238>
 8003fdc:	4680      	mov	r8, r0
 8003fde:	2404      	movs	r4, #4
 8003fe0:	f386 8811 	msr	BASEPRI, r6
 8003fe4:	4648      	mov	r0, r9
 8003fe6:	f7fc fed3 	bl	8000d90 <chOQGetI>
 8003fea:	f388 8811 	msr	BASEPRI, r8
 8003fee:	b2c0      	uxtb	r0, r0
 8003ff0:	f7fc fbf6 	bl	80007e0 <test_emit_token>
 8003ff4:	3c01      	subs	r4, #1
 8003ff6:	d1f3      	bne.n	8003fe0 <queues2_execute+0x60>
 8003ff8:	f386 8811 	msr	BASEPRI, r6
 8003ffc:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 8004000:	429a      	cmp	r2, r3
 8004002:	d029      	beq.n	8004058 <queues2_execute+0xd8>
 8004004:	4639      	mov	r1, r7
 8004006:	2003      	movs	r0, #3
 8004008:	f7fc fbd2 	bl	80007b0 <_test_assert>
 800400c:	b150      	cbz	r0, 8004024 <queues2_execute+0xa4>
 800400e:	2300      	movs	r3, #0
 8004010:	f383 8811 	msr	BASEPRI, r3
 8004014:	b003      	add	sp, #12
 8004016:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800401a:	68a9      	ldr	r1, [r5, #8]
 800401c:	3100      	adds	r1, #0
 800401e:	bf18      	it	ne
 8004020:	2101      	movne	r1, #1
 8004022:	e7b9      	b.n	8003f98 <queues2_execute+0x18>
 8004024:	f380 8811 	msr	BASEPRI, r0
 8004028:	4964      	ldr	r1, [pc, #400]	; (80041bc <queues2_execute+0x23c>)
 800402a:	2004      	movs	r0, #4
 800402c:	f7fc fb98 	bl	8000760 <_test_assert_sequence>
 8004030:	4604      	mov	r4, r0
 8004032:	2800      	cmp	r0, #0
 8004034:	d1ee      	bne.n	8004014 <queues2_execute+0x94>
 8004036:	2620      	movs	r6, #32
 8004038:	f386 8811 	msr	BASEPRI, r6
 800403c:	485e      	ldr	r0, [pc, #376]	; (80041b8 <queues2_execute+0x238>)
 800403e:	f7fc fea7 	bl	8000d90 <chOQGetI>
 8004042:	3003      	adds	r0, #3
 8004044:	bf14      	ite	ne
 8004046:	2100      	movne	r1, #0
 8004048:	2101      	moveq	r1, #1
 800404a:	2005      	movs	r0, #5
 800404c:	f7fc fbb0 	bl	80007b0 <_test_assert>
 8004050:	b138      	cbz	r0, 8004062 <queues2_execute+0xe2>
 8004052:	f384 8811 	msr	BASEPRI, r4
 8004056:	e7dd      	b.n	8004014 <queues2_execute+0x94>
 8004058:	68af      	ldr	r7, [r5, #8]
 800405a:	3700      	adds	r7, #0
 800405c:	bf18      	it	ne
 800405e:	2701      	movne	r7, #1
 8004060:	e7d0      	b.n	8004004 <queues2_execute+0x84>
 8004062:	f380 8811 	msr	BASEPRI, r0
 8004066:	2208      	movs	r2, #8
 8004068:	4603      	mov	r3, r0
 800406a:	4955      	ldr	r1, [pc, #340]	; (80041c0 <queues2_execute+0x240>)
 800406c:	4852      	ldr	r0, [pc, #328]	; (80041b8 <queues2_execute+0x238>)
 800406e:	f7fe fa2f 	bl	80024d0 <chOQWriteTimeout>
 8004072:	f1a0 0104 	sub.w	r1, r0, #4
 8004076:	fab1 f181 	clz	r1, r1
 800407a:	0949      	lsrs	r1, r1, #5
 800407c:	2006      	movs	r0, #6
 800407e:	f7fc fb97 	bl	80007b0 <_test_assert>
 8004082:	4604      	mov	r4, r0
 8004084:	2800      	cmp	r0, #0
 8004086:	d1c5      	bne.n	8004014 <queues2_execute+0x94>
 8004088:	f386 8811 	msr	BASEPRI, r6
 800408c:	68a9      	ldr	r1, [r5, #8]
 800408e:	fab1 f181 	clz	r1, r1
 8004092:	0949      	lsrs	r1, r1, #5
 8004094:	2007      	movs	r0, #7
 8004096:	f7fc fb8b 	bl	80007b0 <_test_assert>
 800409a:	4607      	mov	r7, r0
 800409c:	2800      	cmp	r0, #0
 800409e:	d1d8      	bne.n	8004052 <queues2_execute+0xd2>
 80040a0:	f380 8811 	msr	BASEPRI, r0
 80040a4:	4a47      	ldr	r2, [pc, #284]	; (80041c4 <queues2_execute+0x244>)
 80040a6:	4b48      	ldr	r3, [pc, #288]	; (80041c8 <queues2_execute+0x248>)
 80040a8:	6992      	ldr	r2, [r2, #24]
 80040aa:	4848      	ldr	r0, [pc, #288]	; (80041cc <queues2_execute+0x24c>)
 80040ac:	6892      	ldr	r2, [r2, #8]
 80040ae:	9700      	str	r7, [sp, #0]
 80040b0:	3201      	adds	r2, #1
 80040b2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80040b6:	f7fd fc6b 	bl	8001990 <chThdCreateStatic>
 80040ba:	4b45      	ldr	r3, [pc, #276]	; (80041d0 <queues2_execute+0x250>)
 80040bc:	6018      	str	r0, [r3, #0]
 80040be:	f386 8811 	msr	BASEPRI, r6
 80040c2:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 80040c6:	68a9      	ldr	r1, [r5, #8]
 80040c8:	1a9b      	subs	r3, r3, r2
 80040ca:	1a59      	subs	r1, r3, r1
 80040cc:	f1a1 0104 	sub.w	r1, r1, #4
 80040d0:	fab1 f181 	clz	r1, r1
 80040d4:	0949      	lsrs	r1, r1, #5
 80040d6:	2008      	movs	r0, #8
 80040d8:	f7fc fb6a 	bl	80007b0 <_test_assert>
 80040dc:	b110      	cbz	r0, 80040e4 <queues2_execute+0x164>
 80040de:	f387 8811 	msr	BASEPRI, r7
 80040e2:	e797      	b.n	8004014 <queues2_execute+0x94>
 80040e4:	f380 8811 	msr	BASEPRI, r0
 80040e8:	f7ff fcf2 	bl	8003ad0 <test_wait_threads>
 80040ec:	f386 8811 	msr	BASEPRI, r6
 80040f0:	e9d5 1203 	ldrd	r1, r2, [r5, #12]
 80040f4:	682b      	ldr	r3, [r5, #0]
 80040f6:	61a9      	str	r1, [r5, #24]
 80040f8:	1a52      	subs	r2, r2, r1
 80040fa:	42ab      	cmp	r3, r5
 80040fc:	6169      	str	r1, [r5, #20]
 80040fe:	60aa      	str	r2, [r5, #8]
 8004100:	d00b      	beq.n	800411a <queues2_execute+0x19a>
 8004102:	f06f 0401 	mvn.w	r4, #1
 8004106:	681a      	ldr	r2, [r3, #0]
 8004108:	602a      	str	r2, [r5, #0]
 800410a:	6055      	str	r5, [r2, #4]
 800410c:	4618      	mov	r0, r3
 800410e:	621c      	str	r4, [r3, #32]
 8004110:	f7fc fde6 	bl	8000ce0 <chSchReadyI>
 8004114:	682b      	ldr	r3, [r5, #0]
 8004116:	42ab      	cmp	r3, r5
 8004118:	d1f5      	bne.n	8004106 <queues2_execute+0x186>
 800411a:	2400      	movs	r4, #0
 800411c:	f384 8811 	msr	BASEPRI, r4
 8004120:	2620      	movs	r6, #32
 8004122:	f386 8811 	msr	BASEPRI, r6
 8004126:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 800412a:	68a9      	ldr	r1, [r5, #8]
 800412c:	1a9b      	subs	r3, r3, r2
 800412e:	1a5f      	subs	r7, r3, r1
 8004130:	4279      	negs	r1, r7
 8004132:	4179      	adcs	r1, r7
 8004134:	2009      	movs	r0, #9
 8004136:	f7fc fb3b 	bl	80007b0 <_test_assert>
 800413a:	4603      	mov	r3, r0
 800413c:	2800      	cmp	r0, #0
 800413e:	d188      	bne.n	8004052 <queues2_execute+0xd2>
 8004140:	f380 8811 	msr	BASEPRI, r0
 8004144:	2202      	movs	r2, #2
 8004146:	491e      	ldr	r1, [pc, #120]	; (80041c0 <queues2_execute+0x240>)
 8004148:	481b      	ldr	r0, [pc, #108]	; (80041b8 <queues2_execute+0x238>)
 800414a:	f7fe f9c1 	bl	80024d0 <chOQWriteTimeout>
 800414e:	3802      	subs	r0, #2
 8004150:	4241      	negs	r1, r0
 8004152:	4141      	adcs	r1, r0
 8004154:	200a      	movs	r0, #10
 8004156:	f7fc fb2b 	bl	80007b0 <_test_assert>
 800415a:	4603      	mov	r3, r0
 800415c:	2800      	cmp	r0, #0
 800415e:	f47f af59 	bne.w	8004014 <queues2_execute+0x94>
 8004162:	2202      	movs	r2, #2
 8004164:	4916      	ldr	r1, [pc, #88]	; (80041c0 <queues2_execute+0x240>)
 8004166:	4814      	ldr	r0, [pc, #80]	; (80041b8 <queues2_execute+0x238>)
 8004168:	f7fe f9b2 	bl	80024d0 <chOQWriteTimeout>
 800416c:	1e82      	subs	r2, r0, #2
 800416e:	4251      	negs	r1, r2
 8004170:	4151      	adcs	r1, r2
 8004172:	200b      	movs	r0, #11
 8004174:	f7fc fb1c 	bl	80007b0 <_test_assert>
 8004178:	4604      	mov	r4, r0
 800417a:	2800      	cmp	r0, #0
 800417c:	f47f af4a 	bne.w	8004014 <queues2_execute+0x94>
 8004180:	f386 8811 	msr	BASEPRI, r6
 8004184:	68a9      	ldr	r1, [r5, #8]
 8004186:	fab1 f181 	clz	r1, r1
 800418a:	0949      	lsrs	r1, r1, #5
 800418c:	200c      	movs	r0, #12
 800418e:	f7fc fb0f 	bl	80007b0 <_test_assert>
 8004192:	4601      	mov	r1, r0
 8004194:	2800      	cmp	r0, #0
 8004196:	f47f af5c 	bne.w	8004052 <queues2_execute+0xd2>
 800419a:	f380 8811 	msr	BASEPRI, r0
 800419e:	220a      	movs	r2, #10
 80041a0:	4805      	ldr	r0, [pc, #20]	; (80041b8 <queues2_execute+0x238>)
 80041a2:	f7fe f9ed 	bl	8002580 <chOQPutTimeout>
 80041a6:	1c43      	adds	r3, r0, #1
 80041a8:	4259      	negs	r1, r3
 80041aa:	4159      	adcs	r1, r3
 80041ac:	200d      	movs	r0, #13
 80041ae:	b003      	add	sp, #12
 80041b0:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80041b4:	f7fc bafc 	b.w	80007b0 <_test_assert>
 80041b8:	20000888 	.word	0x20000888
 80041bc:	08006240 	.word	0x08006240
 80041c0:	20000c80 	.word	0x20000c80
 80041c4:	20000930 	.word	0x20000930
 80041c8:	080025d1 	.word	0x080025d1
 80041cc:	20000b38 	.word	0x20000b38
 80041d0:	200011cc 	.word	0x200011cc
	...

080041e0 <queues1_execute>:
 80041e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80041e2:	2620      	movs	r6, #32
 80041e4:	b083      	sub	sp, #12
 80041e6:	f386 8811 	msr	BASEPRI, r6
 80041ea:	4c9f      	ldr	r4, [pc, #636]	; (8004468 <queues1_execute+0x288>)
 80041ec:	68a1      	ldr	r1, [r4, #8]
 80041ee:	fab1 f181 	clz	r1, r1
 80041f2:	0949      	lsrs	r1, r1, #5
 80041f4:	2001      	movs	r0, #1
 80041f6:	f7fc fadb 	bl	80007b0 <_test_assert>
 80041fa:	bb10      	cbnz	r0, 8004242 <queues1_execute+0x62>
 80041fc:	4605      	mov	r5, r0
 80041fe:	f380 8811 	msr	BASEPRI, r0
 8004202:	f386 8811 	msr	BASEPRI, r6
 8004206:	2141      	movs	r1, #65	; 0x41
 8004208:	4620      	mov	r0, r4
 800420a:	f7fc fd99 	bl	8000d40 <chIQPutI>
 800420e:	4620      	mov	r0, r4
 8004210:	2142      	movs	r1, #66	; 0x42
 8004212:	f7fc fd95 	bl	8000d40 <chIQPutI>
 8004216:	4620      	mov	r0, r4
 8004218:	2143      	movs	r1, #67	; 0x43
 800421a:	f7fc fd91 	bl	8000d40 <chIQPutI>
 800421e:	4620      	mov	r0, r4
 8004220:	2144      	movs	r1, #68	; 0x44
 8004222:	f7fc fd8d 	bl	8000d40 <chIQPutI>
 8004226:	f385 8811 	msr	BASEPRI, r5
 800422a:	f386 8811 	msr	BASEPRI, r6
 800422e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8004232:	429a      	cmp	r2, r3
 8004234:	d038      	beq.n	80042a8 <queues1_execute+0xc8>
 8004236:	4629      	mov	r1, r5
 8004238:	2002      	movs	r0, #2
 800423a:	f7fc fab9 	bl	80007b0 <_test_assert>
 800423e:	4605      	mov	r5, r0
 8004240:	b120      	cbz	r0, 800424c <queues1_execute+0x6c>
 8004242:	2300      	movs	r3, #0
 8004244:	f383 8811 	msr	BASEPRI, r3
 8004248:	b003      	add	sp, #12
 800424a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800424c:	f380 8811 	msr	BASEPRI, r0
 8004250:	2320      	movs	r3, #32
 8004252:	f383 8811 	msr	BASEPRI, r3
 8004256:	4884      	ldr	r0, [pc, #528]	; (8004468 <queues1_execute+0x288>)
 8004258:	4629      	mov	r1, r5
 800425a:	f7fc fd71 	bl	8000d40 <chIQPutI>
 800425e:	3004      	adds	r0, #4
 8004260:	bf14      	ite	ne
 8004262:	2100      	movne	r1, #0
 8004264:	2101      	moveq	r1, #1
 8004266:	2003      	movs	r0, #3
 8004268:	f7fc faa2 	bl	80007b0 <_test_assert>
 800426c:	b9c0      	cbnz	r0, 80042a0 <queues1_execute+0xc0>
 800426e:	f380 8811 	msr	BASEPRI, r0
 8004272:	4e7d      	ldr	r6, [pc, #500]	; (8004468 <queues1_execute+0x288>)
 8004274:	2504      	movs	r5, #4
 8004276:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800427a:	4630      	mov	r0, r6
 800427c:	f7fe fa10 	bl	80026a0 <chIQGetTimeout>
 8004280:	b2c0      	uxtb	r0, r0
 8004282:	f7fc faad 	bl	80007e0 <test_emit_token>
 8004286:	3d01      	subs	r5, #1
 8004288:	d1f5      	bne.n	8004276 <queues1_execute+0x96>
 800428a:	2620      	movs	r6, #32
 800428c:	f386 8811 	msr	BASEPRI, r6
 8004290:	68a1      	ldr	r1, [r4, #8]
 8004292:	fab1 f181 	clz	r1, r1
 8004296:	0949      	lsrs	r1, r1, #5
 8004298:	2004      	movs	r0, #4
 800429a:	f7fc fa89 	bl	80007b0 <_test_assert>
 800429e:	b178      	cbz	r0, 80042c0 <queues1_execute+0xe0>
 80042a0:	f385 8811 	msr	BASEPRI, r5
 80042a4:	b003      	add	sp, #12
 80042a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80042a8:	68a5      	ldr	r5, [r4, #8]
 80042aa:	3500      	adds	r5, #0
 80042ac:	bf18      	it	ne
 80042ae:	2501      	movne	r5, #1
 80042b0:	4629      	mov	r1, r5
 80042b2:	2002      	movs	r0, #2
 80042b4:	f7fc fa7c 	bl	80007b0 <_test_assert>
 80042b8:	4605      	mov	r5, r0
 80042ba:	2800      	cmp	r0, #0
 80042bc:	d1c1      	bne.n	8004242 <queues1_execute+0x62>
 80042be:	e7c5      	b.n	800424c <queues1_execute+0x6c>
 80042c0:	f385 8811 	msr	BASEPRI, r5
 80042c4:	4969      	ldr	r1, [pc, #420]	; (800446c <queues1_execute+0x28c>)
 80042c6:	2005      	movs	r0, #5
 80042c8:	f7fc fa4a 	bl	8000760 <_test_assert_sequence>
 80042cc:	2800      	cmp	r0, #0
 80042ce:	d1bb      	bne.n	8004248 <queues1_execute+0x68>
 80042d0:	f386 8811 	msr	BASEPRI, r6
 80042d4:	2141      	movs	r1, #65	; 0x41
 80042d6:	4864      	ldr	r0, [pc, #400]	; (8004468 <queues1_execute+0x288>)
 80042d8:	f7fc fd32 	bl	8000d40 <chIQPutI>
 80042dc:	2142      	movs	r1, #66	; 0x42
 80042de:	4862      	ldr	r0, [pc, #392]	; (8004468 <queues1_execute+0x288>)
 80042e0:	f7fc fd2e 	bl	8000d40 <chIQPutI>
 80042e4:	2143      	movs	r1, #67	; 0x43
 80042e6:	4860      	ldr	r0, [pc, #384]	; (8004468 <queues1_execute+0x288>)
 80042e8:	f7fc fd2a 	bl	8000d40 <chIQPutI>
 80042ec:	2144      	movs	r1, #68	; 0x44
 80042ee:	485e      	ldr	r0, [pc, #376]	; (8004468 <queues1_execute+0x288>)
 80042f0:	f7fc fd26 	bl	8000d40 <chIQPutI>
 80042f4:	f385 8811 	msr	BASEPRI, r5
 80042f8:	495d      	ldr	r1, [pc, #372]	; (8004470 <queues1_execute+0x290>)
 80042fa:	485b      	ldr	r0, [pc, #364]	; (8004468 <queues1_execute+0x288>)
 80042fc:	2208      	movs	r2, #8
 80042fe:	462b      	mov	r3, r5
 8004300:	f7fe f97e 	bl	8002600 <chIQReadTimeout>
 8004304:	f1a0 0104 	sub.w	r1, r0, #4
 8004308:	fab1 f181 	clz	r1, r1
 800430c:	0949      	lsrs	r1, r1, #5
 800430e:	2006      	movs	r0, #6
 8004310:	f7fc fa4e 	bl	80007b0 <_test_assert>
 8004314:	2800      	cmp	r0, #0
 8004316:	d197      	bne.n	8004248 <queues1_execute+0x68>
 8004318:	f386 8811 	msr	BASEPRI, r6
 800431c:	68a1      	ldr	r1, [r4, #8]
 800431e:	fab1 f181 	clz	r1, r1
 8004322:	0949      	lsrs	r1, r1, #5
 8004324:	2007      	movs	r0, #7
 8004326:	f7fc fa43 	bl	80007b0 <_test_assert>
 800432a:	2800      	cmp	r0, #0
 800432c:	d1b8      	bne.n	80042a0 <queues1_execute+0xc0>
 800432e:	f385 8811 	msr	BASEPRI, r5
 8004332:	f386 8811 	msr	BASEPRI, r6
 8004336:	2141      	movs	r1, #65	; 0x41
 8004338:	484b      	ldr	r0, [pc, #300]	; (8004468 <queues1_execute+0x288>)
 800433a:	f7fc fd01 	bl	8000d40 <chIQPutI>
 800433e:	2142      	movs	r1, #66	; 0x42
 8004340:	4849      	ldr	r0, [pc, #292]	; (8004468 <queues1_execute+0x288>)
 8004342:	f7fc fcfd 	bl	8000d40 <chIQPutI>
 8004346:	2143      	movs	r1, #67	; 0x43
 8004348:	4847      	ldr	r0, [pc, #284]	; (8004468 <queues1_execute+0x288>)
 800434a:	f7fc fcf9 	bl	8000d40 <chIQPutI>
 800434e:	2144      	movs	r1, #68	; 0x44
 8004350:	4845      	ldr	r0, [pc, #276]	; (8004468 <queues1_execute+0x288>)
 8004352:	f7fc fcf5 	bl	8000d40 <chIQPutI>
 8004356:	f385 8811 	msr	BASEPRI, r5
 800435a:	4945      	ldr	r1, [pc, #276]	; (8004470 <queues1_execute+0x290>)
 800435c:	4842      	ldr	r0, [pc, #264]	; (8004468 <queues1_execute+0x288>)
 800435e:	2202      	movs	r2, #2
 8004360:	462b      	mov	r3, r5
 8004362:	f7fe f94d 	bl	8002600 <chIQReadTimeout>
 8004366:	f1a0 0102 	sub.w	r1, r0, #2
 800436a:	fab1 f181 	clz	r1, r1
 800436e:	0949      	lsrs	r1, r1, #5
 8004370:	2008      	movs	r0, #8
 8004372:	f7fc fa1d 	bl	80007b0 <_test_assert>
 8004376:	2800      	cmp	r0, #0
 8004378:	f47f af66 	bne.w	8004248 <queues1_execute+0x68>
 800437c:	493c      	ldr	r1, [pc, #240]	; (8004470 <queues1_execute+0x290>)
 800437e:	483a      	ldr	r0, [pc, #232]	; (8004468 <queues1_execute+0x288>)
 8004380:	462b      	mov	r3, r5
 8004382:	2202      	movs	r2, #2
 8004384:	f7fe f93c 	bl	8002600 <chIQReadTimeout>
 8004388:	f1a0 0102 	sub.w	r1, r0, #2
 800438c:	fab1 f181 	clz	r1, r1
 8004390:	0949      	lsrs	r1, r1, #5
 8004392:	2009      	movs	r0, #9
 8004394:	f7fc fa0c 	bl	80007b0 <_test_assert>
 8004398:	2800      	cmp	r0, #0
 800439a:	f47f af55 	bne.w	8004248 <queues1_execute+0x68>
 800439e:	f386 8811 	msr	BASEPRI, r6
 80043a2:	68a1      	ldr	r1, [r4, #8]
 80043a4:	fab1 f181 	clz	r1, r1
 80043a8:	0949      	lsrs	r1, r1, #5
 80043aa:	200a      	movs	r0, #10
 80043ac:	f7fc fa00 	bl	80007b0 <_test_assert>
 80043b0:	2800      	cmp	r0, #0
 80043b2:	f47f af75 	bne.w	80042a0 <queues1_execute+0xc0>
 80043b6:	f385 8811 	msr	BASEPRI, r5
 80043ba:	f386 8811 	msr	BASEPRI, r6
 80043be:	482a      	ldr	r0, [pc, #168]	; (8004468 <queues1_execute+0x288>)
 80043c0:	4629      	mov	r1, r5
 80043c2:	f7fc fcbd 	bl	8000d40 <chIQPutI>
 80043c6:	6823      	ldr	r3, [r4, #0]
 80043c8:	68e2      	ldr	r2, [r4, #12]
 80043ca:	60a5      	str	r5, [r4, #8]
 80043cc:	42a3      	cmp	r3, r4
 80043ce:	e9c4 2205 	strd	r2, r2, [r4, #20]
 80043d2:	d00b      	beq.n	80043ec <queues1_execute+0x20c>
 80043d4:	f06f 0501 	mvn.w	r5, #1
 80043d8:	681a      	ldr	r2, [r3, #0]
 80043da:	6022      	str	r2, [r4, #0]
 80043dc:	6054      	str	r4, [r2, #4]
 80043de:	4618      	mov	r0, r3
 80043e0:	621d      	str	r5, [r3, #32]
 80043e2:	f7fc fc7d 	bl	8000ce0 <chSchReadyI>
 80043e6:	6823      	ldr	r3, [r4, #0]
 80043e8:	42a3      	cmp	r3, r4
 80043ea:	d1f5      	bne.n	80043d8 <queues1_execute+0x1f8>
 80043ec:	2700      	movs	r7, #0
 80043ee:	f387 8811 	msr	BASEPRI, r7
 80043f2:	2620      	movs	r6, #32
 80043f4:	f386 8811 	msr	BASEPRI, r6
 80043f8:	68a1      	ldr	r1, [r4, #8]
 80043fa:	fab1 f181 	clz	r1, r1
 80043fe:	0949      	lsrs	r1, r1, #5
 8004400:	200b      	movs	r0, #11
 8004402:	f7fc f9d5 	bl	80007b0 <_test_assert>
 8004406:	4605      	mov	r5, r0
 8004408:	b110      	cbz	r0, 8004410 <queues1_execute+0x230>
 800440a:	f387 8811 	msr	BASEPRI, r7
 800440e:	e71b      	b.n	8004248 <queues1_execute+0x68>
 8004410:	f380 8811 	msr	BASEPRI, r0
 8004414:	4a17      	ldr	r2, [pc, #92]	; (8004474 <queues1_execute+0x294>)
 8004416:	4b18      	ldr	r3, [pc, #96]	; (8004478 <queues1_execute+0x298>)
 8004418:	6992      	ldr	r2, [r2, #24]
 800441a:	4818      	ldr	r0, [pc, #96]	; (800447c <queues1_execute+0x29c>)
 800441c:	6892      	ldr	r2, [r2, #8]
 800441e:	9500      	str	r5, [sp, #0]
 8004420:	3201      	adds	r2, #1
 8004422:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004426:	f7fd fab3 	bl	8001990 <chThdCreateStatic>
 800442a:	4b15      	ldr	r3, [pc, #84]	; (8004480 <queues1_execute+0x2a0>)
 800442c:	6018      	str	r0, [r3, #0]
 800442e:	f386 8811 	msr	BASEPRI, r6
 8004432:	68a1      	ldr	r1, [r4, #8]
 8004434:	fab1 f181 	clz	r1, r1
 8004438:	0949      	lsrs	r1, r1, #5
 800443a:	200c      	movs	r0, #12
 800443c:	f7fc f9b8 	bl	80007b0 <_test_assert>
 8004440:	2800      	cmp	r0, #0
 8004442:	f47f af2d 	bne.w	80042a0 <queues1_execute+0xc0>
 8004446:	f380 8811 	msr	BASEPRI, r0
 800444a:	f7ff fb41 	bl	8003ad0 <test_wait_threads>
 800444e:	210a      	movs	r1, #10
 8004450:	4805      	ldr	r0, [pc, #20]	; (8004468 <queues1_execute+0x288>)
 8004452:	f7fe f925 	bl	80026a0 <chIQGetTimeout>
 8004456:	1c43      	adds	r3, r0, #1
 8004458:	4259      	negs	r1, r3
 800445a:	4159      	adcs	r1, r3
 800445c:	200d      	movs	r0, #13
 800445e:	b003      	add	sp, #12
 8004460:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004464:	f7fc b9a4 	b.w	80007b0 <_test_assert>
 8004468:	20000810 	.word	0x20000810
 800446c:	08006240 	.word	0x08006240
 8004470:	20000c80 	.word	0x20000c80
 8004474:	20000930 	.word	0x20000930
 8004478:	080026f1 	.word	0x080026f1
 800447c:	20000b38 	.word	0x20000b38
 8004480:	200011cc 	.word	0x200011cc
	...

08004490 <dyn2_execute>:
 8004490:	4a31      	ldr	r2, [pc, #196]	; (8004558 <dyn2_execute+0xc8>)
 8004492:	6991      	ldr	r1, [r2, #24]
 8004494:	4a31      	ldr	r2, [pc, #196]	; (800455c <dyn2_execute+0xcc>)
 8004496:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004498:	4b31      	ldr	r3, [pc, #196]	; (8004560 <dyn2_execute+0xd0>)
 800449a:	688d      	ldr	r5, [r1, #8]
 800449c:	4931      	ldr	r1, [pc, #196]	; (8004564 <dyn2_execute+0xd4>)
 800449e:	f103 070c 	add.w	r7, r3, #12
 80044a2:	2620      	movs	r6, #32
 80044a4:	2400      	movs	r4, #0
 80044a6:	f386 8811 	msr	BASEPRI, r6
 80044aa:	6808      	ldr	r0, [r1, #0]
 80044ac:	6010      	str	r0, [r2, #0]
 80044ae:	600a      	str	r2, [r1, #0]
 80044b0:	f384 8811 	msr	BASEPRI, r4
 80044b4:	429f      	cmp	r7, r3
 80044b6:	d002      	beq.n	80044be <dyn2_execute+0x2e>
 80044b8:	f853 2b04 	ldr.w	r2, [r3], #4
 80044bc:	e7f3      	b.n	80044a6 <dyn2_execute+0x16>
 80044be:	492a      	ldr	r1, [pc, #168]	; (8004568 <dyn2_execute+0xd8>)
 80044c0:	4c2a      	ldr	r4, [pc, #168]	; (800456c <dyn2_execute+0xdc>)
 80044c2:	1e68      	subs	r0, r5, #1
 80044c4:	f7fd f9b4 	bl	8001830 <chThdCreateFromMemoryPool.constprop.52>
 80044c8:	4929      	ldr	r1, [pc, #164]	; (8004570 <dyn2_execute+0xe0>)
 80044ca:	6020      	str	r0, [r4, #0]
 80044cc:	1ea8      	subs	r0, r5, #2
 80044ce:	f7fd f9af 	bl	8001830 <chThdCreateFromMemoryPool.constprop.52>
 80044d2:	4928      	ldr	r1, [pc, #160]	; (8004574 <dyn2_execute+0xe4>)
 80044d4:	6060      	str	r0, [r4, #4]
 80044d6:	1ee8      	subs	r0, r5, #3
 80044d8:	f7fd f9aa 	bl	8001830 <chThdCreateFromMemoryPool.constprop.52>
 80044dc:	4926      	ldr	r1, [pc, #152]	; (8004578 <dyn2_execute+0xe8>)
 80044de:	60a0      	str	r0, [r4, #8]
 80044e0:	1f28      	subs	r0, r5, #4
 80044e2:	f7fd f9a5 	bl	8001830 <chThdCreateFromMemoryPool.constprop.52>
 80044e6:	4925      	ldr	r1, [pc, #148]	; (800457c <dyn2_execute+0xec>)
 80044e8:	60e0      	str	r0, [r4, #12]
 80044ea:	1f68      	subs	r0, r5, #5
 80044ec:	f7fd f9a0 	bl	8001830 <chThdCreateFromMemoryPool.constprop.52>
 80044f0:	6821      	ldr	r1, [r4, #0]
 80044f2:	6120      	str	r0, [r4, #16]
 80044f4:	b141      	cbz	r1, 8004508 <dyn2_execute+0x78>
 80044f6:	6861      	ldr	r1, [r4, #4]
 80044f8:	b131      	cbz	r1, 8004508 <dyn2_execute+0x78>
 80044fa:	68a1      	ldr	r1, [r4, #8]
 80044fc:	b121      	cbz	r1, 8004508 <dyn2_execute+0x78>
 80044fe:	68e1      	ldr	r1, [r4, #12]
 8004500:	b111      	cbz	r1, 8004508 <dyn2_execute+0x78>
 8004502:	fab0 f180 	clz	r1, r0
 8004506:	0949      	lsrs	r1, r1, #5
 8004508:	2001      	movs	r0, #1
 800450a:	f7fc f951 	bl	80007b0 <_test_assert>
 800450e:	b100      	cbz	r0, 8004512 <dyn2_execute+0x82>
 8004510:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004512:	f7ff fadd 	bl	8003ad0 <test_wait_threads>
 8004516:	491a      	ldr	r1, [pc, #104]	; (8004580 <dyn2_execute+0xf0>)
 8004518:	2002      	movs	r0, #2
 800451a:	f7fc f921 	bl	8000760 <_test_assert_sequence>
 800451e:	2800      	cmp	r0, #0
 8004520:	d1f6      	bne.n	8004510 <dyn2_execute+0x80>
 8004522:	4d10      	ldr	r5, [pc, #64]	; (8004564 <dyn2_execute+0xd4>)
 8004524:	2404      	movs	r4, #4
 8004526:	4628      	mov	r0, r5
 8004528:	f7fc fa62 	bl	80009f0 <chPoolAlloc>
 800452c:	1c01      	adds	r1, r0, #0
 800452e:	bf18      	it	ne
 8004530:	2101      	movne	r1, #1
 8004532:	2003      	movs	r0, #3
 8004534:	f7fc f93c 	bl	80007b0 <_test_assert>
 8004538:	2800      	cmp	r0, #0
 800453a:	d1e9      	bne.n	8004510 <dyn2_execute+0x80>
 800453c:	3c01      	subs	r4, #1
 800453e:	d1f2      	bne.n	8004526 <dyn2_execute+0x96>
 8004540:	4808      	ldr	r0, [pc, #32]	; (8004564 <dyn2_execute+0xd4>)
 8004542:	f7fc fa55 	bl	80009f0 <chPoolAlloc>
 8004546:	fab0 f180 	clz	r1, r0
 800454a:	0949      	lsrs	r1, r1, #5
 800454c:	2004      	movs	r0, #4
 800454e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004552:	f7fc b92d 	b.w	80007b0 <_test_assert>
 8004556:	bf00      	nop
 8004558:	20000930 	.word	0x20000930
 800455c:	20000b38 	.word	0x20000b38
 8004560:	080069e4 	.word	0x080069e4
 8004564:	20000b08 	.word	0x20000b08
 8004568:	08005e90 	.word	0x08005e90
 800456c:	200011cc 	.word	0x200011cc
 8004570:	08005e80 	.word	0x08005e80
 8004574:	08005e84 	.word	0x08005e84
 8004578:	08005e88 	.word	0x08005e88
 800457c:	080060c4 	.word	0x080060c4
 8004580:	08006240 	.word	0x08006240
	...

08004590 <dyn1_execute>:
 8004590:	b570      	push	{r4, r5, r6, lr}
 8004592:	4b2c      	ldr	r3, [pc, #176]	; (8004644 <dyn1_execute+0xb4>)
 8004594:	482c      	ldr	r0, [pc, #176]	; (8004648 <dyn1_execute+0xb8>)
 8004596:	699b      	ldr	r3, [r3, #24]
 8004598:	4c2c      	ldr	r4, [pc, #176]	; (800464c <dyn1_execute+0xbc>)
 800459a:	689d      	ldr	r5, [r3, #8]
 800459c:	b082      	sub	sp, #8
 800459e:	4669      	mov	r1, sp
 80045a0:	f7fe fdbe 	bl	8003120 <chHeapStatus>
 80045a4:	492a      	ldr	r1, [pc, #168]	; (8004650 <dyn1_execute+0xc0>)
 80045a6:	1e68      	subs	r0, r5, #1
 80045a8:	f7fe fee2 	bl	8003370 <chThdCreateFromHeap.constprop.53>
 80045ac:	4929      	ldr	r1, [pc, #164]	; (8004654 <dyn1_execute+0xc4>)
 80045ae:	6020      	str	r0, [r4, #0]
 80045b0:	1ea8      	subs	r0, r5, #2
 80045b2:	f7fe fedd 	bl	8003370 <chThdCreateFromHeap.constprop.53>
 80045b6:	a901      	add	r1, sp, #4
 80045b8:	6060      	str	r0, [r4, #4]
 80045ba:	4823      	ldr	r0, [pc, #140]	; (8004648 <dyn1_execute+0xb8>)
 80045bc:	f7fe fdb0 	bl	8003120 <chHeapStatus>
 80045c0:	9901      	ldr	r1, [sp, #4]
 80045c2:	4821      	ldr	r0, [pc, #132]	; (8004648 <dyn1_execute+0xb8>)
 80045c4:	f7fe fe8c 	bl	80032e0 <chHeapAlloc>
 80045c8:	4923      	ldr	r1, [pc, #140]	; (8004658 <dyn1_execute+0xc8>)
 80045ca:	4606      	mov	r6, r0
 80045cc:	1ee8      	subs	r0, r5, #3
 80045ce:	f7fe fecf 	bl	8003370 <chThdCreateFromHeap.constprop.53>
 80045d2:	60a0      	str	r0, [r4, #8]
 80045d4:	4630      	mov	r0, r6
 80045d6:	f7fe fdcb 	bl	8003170 <chHeapFree>
 80045da:	6821      	ldr	r1, [r4, #0]
 80045dc:	b121      	cbz	r1, 80045e8 <dyn1_execute+0x58>
 80045de:	6861      	ldr	r1, [r4, #4]
 80045e0:	b111      	cbz	r1, 80045e8 <dyn1_execute+0x58>
 80045e2:	68a1      	ldr	r1, [r4, #8]
 80045e4:	b331      	cbz	r1, 8004634 <dyn1_execute+0xa4>
 80045e6:	2100      	movs	r1, #0
 80045e8:	2001      	movs	r0, #1
 80045ea:	f7fc f8e1 	bl	80007b0 <_test_assert>
 80045ee:	b108      	cbz	r0, 80045f4 <dyn1_execute+0x64>
 80045f0:	b002      	add	sp, #8
 80045f2:	bd70      	pop	{r4, r5, r6, pc}
 80045f4:	f7ff fa6c 	bl	8003ad0 <test_wait_threads>
 80045f8:	4918      	ldr	r1, [pc, #96]	; (800465c <dyn1_execute+0xcc>)
 80045fa:	2002      	movs	r0, #2
 80045fc:	f7fc f8b0 	bl	8000760 <_test_assert_sequence>
 8004600:	2800      	cmp	r0, #0
 8004602:	d1f5      	bne.n	80045f0 <dyn1_execute+0x60>
 8004604:	a901      	add	r1, sp, #4
 8004606:	4810      	ldr	r0, [pc, #64]	; (8004648 <dyn1_execute+0xb8>)
 8004608:	f7fe fd8a 	bl	8003120 <chHeapStatus>
 800460c:	f1a0 0101 	sub.w	r1, r0, #1
 8004610:	fab1 f181 	clz	r1, r1
 8004614:	0949      	lsrs	r1, r1, #5
 8004616:	2003      	movs	r0, #3
 8004618:	f7fc f8ca 	bl	80007b0 <_test_assert>
 800461c:	2800      	cmp	r0, #0
 800461e:	d1e7      	bne.n	80045f0 <dyn1_execute+0x60>
 8004620:	e9dd 3100 	ldrd	r3, r1, [sp]
 8004624:	1ac9      	subs	r1, r1, r3
 8004626:	fab1 f181 	clz	r1, r1
 800462a:	0949      	lsrs	r1, r1, #5
 800462c:	2004      	movs	r0, #4
 800462e:	f7fc f8bf 	bl	80007b0 <_test_assert>
 8004632:	e7dd      	b.n	80045f0 <dyn1_execute+0x60>
 8004634:	68e3      	ldr	r3, [r4, #12]
 8004636:	2b00      	cmp	r3, #0
 8004638:	d1d6      	bne.n	80045e8 <dyn1_execute+0x58>
 800463a:	6921      	ldr	r1, [r4, #16]
 800463c:	fab1 f181 	clz	r1, r1
 8004640:	0949      	lsrs	r1, r1, #5
 8004642:	e7d1      	b.n	80045e8 <dyn1_execute+0x58>
 8004644:	20000930 	.word	0x20000930
 8004648:	20000ab0 	.word	0x20000ab0
 800464c:	200011cc 	.word	0x200011cc
 8004650:	08005e90 	.word	0x08005e90
 8004654:	08005e80 	.word	0x08005e80
 8004658:	08005e84 	.word	0x08005e84
 800465c:	08005e70 	.word	0x08005e70

08004660 <evt2_execute>:
 8004660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004664:	2620      	movs	r6, #32
 8004666:	b08f      	sub	sp, #60	; 0x3c
 8004668:	f386 8811 	msr	BASEPRI, r6
 800466c:	4cae      	ldr	r4, [pc, #696]	; (8004928 <evt2_execute+0x2c8>)
 800466e:	69a2      	ldr	r2, [r4, #24]
 8004670:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004672:	f043 0307 	orr.w	r3, r3, #7
 8004676:	6353      	str	r3, [r2, #52]	; 0x34
 8004678:	2300      	movs	r3, #0
 800467a:	f383 8811 	msr	BASEPRI, r3
 800467e:	f7fd fa57 	bl	8001b30 <chEvtWaitOne.constprop.32>
 8004682:	f1a0 0101 	sub.w	r1, r0, #1
 8004686:	fab1 f181 	clz	r1, r1
 800468a:	0949      	lsrs	r1, r1, #5
 800468c:	2001      	movs	r0, #1
 800468e:	f7fc f88f 	bl	80007b0 <_test_assert>
 8004692:	b110      	cbz	r0, 800469a <evt2_execute+0x3a>
 8004694:	b00f      	add	sp, #60	; 0x3c
 8004696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800469a:	f7fd fa49 	bl	8001b30 <chEvtWaitOne.constprop.32>
 800469e:	f1a0 0102 	sub.w	r1, r0, #2
 80046a2:	fab1 f181 	clz	r1, r1
 80046a6:	0949      	lsrs	r1, r1, #5
 80046a8:	2002      	movs	r0, #2
 80046aa:	f7fc f881 	bl	80007b0 <_test_assert>
 80046ae:	2800      	cmp	r0, #0
 80046b0:	d1f0      	bne.n	8004694 <evt2_execute+0x34>
 80046b2:	f7fd fa3d 	bl	8001b30 <chEvtWaitOne.constprop.32>
 80046b6:	f1a0 0104 	sub.w	r1, r0, #4
 80046ba:	fab1 f181 	clz	r1, r1
 80046be:	0949      	lsrs	r1, r1, #5
 80046c0:	2003      	movs	r0, #3
 80046c2:	f7fc f875 	bl	80007b0 <_test_assert>
 80046c6:	2800      	cmp	r0, #0
 80046c8:	d1e4      	bne.n	8004694 <evt2_execute+0x34>
 80046ca:	f7fb fdb9 	bl	8000240 <chEvtGetAndClearEvents.constprop.36>
 80046ce:	fab0 f180 	clz	r1, r0
 80046d2:	0949      	lsrs	r1, r1, #5
 80046d4:	2004      	movs	r0, #4
 80046d6:	f7fc f86b 	bl	80007b0 <_test_assert>
 80046da:	4605      	mov	r5, r0
 80046dc:	2800      	cmp	r0, #0
 80046de:	d1d9      	bne.n	8004694 <evt2_execute+0x34>
 80046e0:	f7fe f916 	bl	8002910 <test_wait_tick>
 80046e4:	f386 8811 	msr	BASEPRI, r6
 80046e8:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 80046ec:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
 80046f0:	b2bf      	uxth	r7, r7
 80046f2:	f385 8811 	msr	BASEPRI, r5
 80046f6:	69a1      	ldr	r1, [r4, #24]
 80046f8:	4b8c      	ldr	r3, [pc, #560]	; (800492c <evt2_execute+0x2cc>)
 80046fa:	688a      	ldr	r2, [r1, #8]
 80046fc:	488c      	ldr	r0, [pc, #560]	; (8004930 <evt2_execute+0x2d0>)
 80046fe:	9100      	str	r1, [sp, #0]
 8004700:	3a01      	subs	r2, #1
 8004702:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004706:	f7fd f943 	bl	8001990 <chThdCreateStatic>
 800470a:	4d8a      	ldr	r5, [pc, #552]	; (8004934 <evt2_execute+0x2d4>)
 800470c:	6028      	str	r0, [r5, #0]
 800470e:	f7fd fa0f 	bl	8001b30 <chEvtWaitOne.constprop.32>
 8004712:	f107 0237 	add.w	r2, r7, #55	; 0x37
 8004716:	f107 0132 	add.w	r1, r7, #50	; 0x32
 800471a:	4681      	mov	r9, r0
 800471c:	b292      	uxth	r2, r2
 800471e:	b289      	uxth	r1, r1
 8004720:	2005      	movs	r0, #5
 8004722:	f7fb fffd 	bl	8000720 <_test_assert_time_window>
 8004726:	2800      	cmp	r0, #0
 8004728:	d1b4      	bne.n	8004694 <evt2_execute+0x34>
 800472a:	f1a9 0101 	sub.w	r1, r9, #1
 800472e:	fab1 f181 	clz	r1, r1
 8004732:	0949      	lsrs	r1, r1, #5
 8004734:	2006      	movs	r0, #6
 8004736:	f7fc f83b 	bl	80007b0 <_test_assert>
 800473a:	2800      	cmp	r0, #0
 800473c:	d1aa      	bne.n	8004694 <evt2_execute+0x34>
 800473e:	f7fb fd7f 	bl	8000240 <chEvtGetAndClearEvents.constprop.36>
 8004742:	fab0 f180 	clz	r1, r0
 8004746:	0949      	lsrs	r1, r1, #5
 8004748:	2007      	movs	r0, #7
 800474a:	f7fc f831 	bl	80007b0 <_test_assert>
 800474e:	4607      	mov	r7, r0
 8004750:	2800      	cmp	r0, #0
 8004752:	d19f      	bne.n	8004694 <evt2_execute+0x34>
 8004754:	f7ff f9bc 	bl	8003ad0 <test_wait_threads>
 8004758:	f386 8811 	msr	BASEPRI, r6
 800475c:	69a2      	ldr	r2, [r4, #24]
 800475e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004760:	f043 0305 	orr.w	r3, r3, #5
 8004764:	6353      	str	r3, [r2, #52]	; 0x34
 8004766:	f387 8811 	msr	BASEPRI, r7
 800476a:	f7fd fa01 	bl	8001b70 <chEvtWaitAny.constprop.31>
 800476e:	1f47      	subs	r7, r0, #5
 8004770:	4279      	negs	r1, r7
 8004772:	4179      	adcs	r1, r7
 8004774:	2008      	movs	r0, #8
 8004776:	f7fc f81b 	bl	80007b0 <_test_assert>
 800477a:	2800      	cmp	r0, #0
 800477c:	d18a      	bne.n	8004694 <evt2_execute+0x34>
 800477e:	f7fb fd5f 	bl	8000240 <chEvtGetAndClearEvents.constprop.36>
 8004782:	fab0 f180 	clz	r1, r0
 8004786:	0949      	lsrs	r1, r1, #5
 8004788:	2009      	movs	r0, #9
 800478a:	f7fc f811 	bl	80007b0 <_test_assert>
 800478e:	4607      	mov	r7, r0
 8004790:	2800      	cmp	r0, #0
 8004792:	f47f af7f 	bne.w	8004694 <evt2_execute+0x34>
 8004796:	f7fe f8bb 	bl	8002910 <test_wait_tick>
 800479a:	f386 8811 	msr	BASEPRI, r6
 800479e:	f8d8 6024 	ldr.w	r6, [r8, #36]	; 0x24
 80047a2:	b2b6      	uxth	r6, r6
 80047a4:	f387 8811 	msr	BASEPRI, r7
 80047a8:	69a1      	ldr	r1, [r4, #24]
 80047aa:	4b60      	ldr	r3, [pc, #384]	; (800492c <evt2_execute+0x2cc>)
 80047ac:	688a      	ldr	r2, [r1, #8]
 80047ae:	4860      	ldr	r0, [pc, #384]	; (8004930 <evt2_execute+0x2d0>)
 80047b0:	9100      	str	r1, [sp, #0]
 80047b2:	3a01      	subs	r2, #1
 80047b4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80047b8:	f7fd f8ea 	bl	8001990 <chThdCreateStatic>
 80047bc:	6028      	str	r0, [r5, #0]
 80047be:	f7fd f9d7 	bl	8001b70 <chEvtWaitAny.constprop.31>
 80047c2:	f106 0237 	add.w	r2, r6, #55	; 0x37
 80047c6:	f106 0132 	add.w	r1, r6, #50	; 0x32
 80047ca:	4607      	mov	r7, r0
 80047cc:	b292      	uxth	r2, r2
 80047ce:	b289      	uxth	r1, r1
 80047d0:	200a      	movs	r0, #10
 80047d2:	f7fb ffa5 	bl	8000720 <_test_assert_time_window>
 80047d6:	2800      	cmp	r0, #0
 80047d8:	f47f af5c 	bne.w	8004694 <evt2_execute+0x34>
 80047dc:	1e78      	subs	r0, r7, #1
 80047de:	4241      	negs	r1, r0
 80047e0:	4141      	adcs	r1, r0
 80047e2:	200b      	movs	r0, #11
 80047e4:	f7fb ffe4 	bl	80007b0 <_test_assert>
 80047e8:	2800      	cmp	r0, #0
 80047ea:	f47f af53 	bne.w	8004694 <evt2_execute+0x34>
 80047ee:	f7fb fd27 	bl	8000240 <chEvtGetAndClearEvents.constprop.36>
 80047f2:	fab0 f180 	clz	r1, r0
 80047f6:	0949      	lsrs	r1, r1, #5
 80047f8:	200c      	movs	r0, #12
 80047fa:	f7fb ffd9 	bl	80007b0 <_test_assert>
 80047fe:	4680      	mov	r8, r0
 8004800:	2800      	cmp	r0, #0
 8004802:	f47f af47 	bne.w	8004694 <evt2_execute+0x34>
 8004806:	f7ff f963 	bl	8003ad0 <test_wait_threads>
 800480a:	4f4b      	ldr	r7, [pc, #300]	; (8004938 <evt2_execute+0x2d8>)
 800480c:	4a4b      	ldr	r2, [pc, #300]	; (800493c <evt2_execute+0x2dc>)
 800480e:	603f      	str	r7, [r7, #0]
 8004810:	f04f 0b20 	mov.w	fp, #32
 8004814:	4613      	mov	r3, r2
 8004816:	6012      	str	r2, [r2, #0]
 8004818:	f38b 8811 	msr	BASEPRI, fp
 800481c:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
 8004820:	683a      	ldr	r2, [r7, #0]
 8004822:	f84a 2d28 	str.w	r2, [sl, #-40]!
 8004826:	69a0      	ldr	r0, [r4, #24]
 8004828:	f8cd 801c 	str.w	r8, [sp, #28]
 800482c:	2101      	movs	r1, #1
 800482e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004832:	e9cd 0105 	strd	r0, r1, [sp, #20]
 8004836:	f8c7 a000 	str.w	sl, [r7]
 800483a:	9208      	str	r2, [sp, #32]
 800483c:	f388 8811 	msr	BASEPRI, r8
 8004840:	f38b 8811 	msr	BASEPRI, fp
 8004844:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 8004848:	6819      	ldr	r1, [r3, #0]
 800484a:	f849 1d14 	str.w	r1, [r9, #-20]!
 800484e:	69a0      	ldr	r0, [r4, #24]
 8004850:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 8004854:	2104      	movs	r1, #4
 8004856:	920d      	str	r2, [sp, #52]	; 0x34
 8004858:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800485c:	f8c3 9000 	str.w	r9, [r3]
 8004860:	f388 8811 	msr	BASEPRI, r8
 8004864:	f7fe f854 	bl	8002910 <test_wait_tick>
 8004868:	f38b 8811 	msr	BASEPRI, fp
 800486c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004870:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8004872:	b290      	uxth	r0, r2
 8004874:	9003      	str	r0, [sp, #12]
 8004876:	f388 8811 	msr	BASEPRI, r8
 800487a:	69a3      	ldr	r3, [r4, #24]
 800487c:	4930      	ldr	r1, [pc, #192]	; (8004940 <evt2_execute+0x2e0>)
 800487e:	689a      	ldr	r2, [r3, #8]
 8004880:	9100      	str	r1, [sp, #0]
 8004882:	f100 0c32 	add.w	ip, r0, #50	; 0x32
 8004886:	4b2f      	ldr	r3, [pc, #188]	; (8004944 <evt2_execute+0x2e4>)
 8004888:	4829      	ldr	r0, [pc, #164]	; (8004930 <evt2_execute+0x2d0>)
 800488a:	3a01      	subs	r2, #1
 800488c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004890:	fa1f f68c 	uxth.w	r6, ip
 8004894:	f7fd f87c 	bl	8001990 <chThdCreateStatic>
 8004898:	69a4      	ldr	r4, [r4, #24]
 800489a:	6028      	str	r0, [r5, #0]
 800489c:	f38b 8811 	msr	BASEPRI, fp
 80048a0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80048a2:	f003 0205 	and.w	r2, r3, #5
 80048a6:	2a05      	cmp	r2, #5
 80048a8:	d005      	beq.n	80048b6 <evt2_execute+0x256>
 80048aa:	2305      	movs	r3, #5
 80048ac:	6223      	str	r3, [r4, #32]
 80048ae:	200b      	movs	r0, #11
 80048b0:	f7fd f8a6 	bl	8001a00 <chSchGoSleepS>
 80048b4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80048b6:	f023 0305 	bic.w	r3, r3, #5
 80048ba:	6363      	str	r3, [r4, #52]	; 0x34
 80048bc:	2300      	movs	r3, #0
 80048be:	f383 8811 	msr	BASEPRI, r3
 80048c2:	9a03      	ldr	r2, [sp, #12]
 80048c4:	3237      	adds	r2, #55	; 0x37
 80048c6:	b292      	uxth	r2, r2
 80048c8:	4631      	mov	r1, r6
 80048ca:	200d      	movs	r0, #13
 80048cc:	f7fb ff28 	bl	8000720 <_test_assert_time_window>
 80048d0:	2800      	cmp	r0, #0
 80048d2:	f47f aedf 	bne.w	8004694 <evt2_execute+0x34>
 80048d6:	f7fb fcb3 	bl	8000240 <chEvtGetAndClearEvents.constprop.36>
 80048da:	fab0 f180 	clz	r1, r0
 80048de:	0949      	lsrs	r1, r1, #5
 80048e0:	200e      	movs	r0, #14
 80048e2:	f7fb ff65 	bl	80007b0 <_test_assert>
 80048e6:	2800      	cmp	r0, #0
 80048e8:	f47f aed4 	bne.w	8004694 <evt2_execute+0x34>
 80048ec:	f7ff f8f0 	bl	8003ad0 <test_wait_threads>
 80048f0:	4651      	mov	r1, sl
 80048f2:	4811      	ldr	r0, [pc, #68]	; (8004938 <evt2_execute+0x2d8>)
 80048f4:	f7fc f904 	bl	8000b00 <chEvtUnregister>
 80048f8:	4649      	mov	r1, r9
 80048fa:	4810      	ldr	r0, [pc, #64]	; (800493c <evt2_execute+0x2dc>)
 80048fc:	f7fc f900 	bl	8000b00 <chEvtUnregister>
 8004900:	6839      	ldr	r1, [r7, #0]
 8004902:	1bca      	subs	r2, r1, r7
 8004904:	4251      	negs	r1, r2
 8004906:	4151      	adcs	r1, r2
 8004908:	200f      	movs	r0, #15
 800490a:	f7fb ff51 	bl	80007b0 <_test_assert>
 800490e:	2800      	cmp	r0, #0
 8004910:	f47f aec0 	bne.w	8004694 <evt2_execute+0x34>
 8004914:	4b09      	ldr	r3, [pc, #36]	; (800493c <evt2_execute+0x2dc>)
 8004916:	6819      	ldr	r1, [r3, #0]
 8004918:	1acb      	subs	r3, r1, r3
 800491a:	4259      	negs	r1, r3
 800491c:	4159      	adcs	r1, r3
 800491e:	2010      	movs	r0, #16
 8004920:	f7fb ff46 	bl	80007b0 <_test_assert>
 8004924:	e6b6      	b.n	8004694 <evt2_execute+0x34>
 8004926:	bf00      	nop
 8004928:	20000930 	.word	0x20000930
 800492c:	08002871 	.word	0x08002871
 8004930:	20000b38 	.word	0x20000b38
 8004934:	200011cc 	.word	0x200011cc
 8004938:	20000808 	.word	0x20000808
 800493c:	2000080c 	.word	0x2000080c
 8004940:	08005e90 	.word	0x08005e90
 8004944:	080028a1 	.word	0x080028a1
	...

08004950 <mtx8_execute>:
 8004950:	b570      	push	{r4, r5, r6, lr}
 8004952:	4b19      	ldr	r3, [pc, #100]	; (80049b8 <mtx8_execute+0x68>)
 8004954:	4d19      	ldr	r5, [pc, #100]	; (80049bc <mtx8_execute+0x6c>)
 8004956:	699b      	ldr	r3, [r3, #24]
 8004958:	4a19      	ldr	r2, [pc, #100]	; (80049c0 <mtx8_execute+0x70>)
 800495a:	689e      	ldr	r6, [r3, #8]
 800495c:	4b19      	ldr	r3, [pc, #100]	; (80049c4 <mtx8_execute+0x74>)
 800495e:	4c1a      	ldr	r4, [pc, #104]	; (80049c8 <mtx8_execute+0x78>)
 8004960:	b082      	sub	sp, #8
 8004962:	4628      	mov	r0, r5
 8004964:	9200      	str	r2, [sp, #0]
 8004966:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800496a:	1c72      	adds	r2, r6, #1
 800496c:	f7fd f810 	bl	8001990 <chThdCreateStatic>
 8004970:	4b16      	ldr	r3, [pc, #88]	; (80049cc <mtx8_execute+0x7c>)
 8004972:	6020      	str	r0, [r4, #0]
 8004974:	1cb2      	adds	r2, r6, #2
 8004976:	9300      	str	r3, [sp, #0]
 8004978:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 800497c:	4b14      	ldr	r3, [pc, #80]	; (80049d0 <mtx8_execute+0x80>)
 800497e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004982:	f7fd f805 	bl	8001990 <chThdCreateStatic>
 8004986:	4b13      	ldr	r3, [pc, #76]	; (80049d4 <mtx8_execute+0x84>)
 8004988:	6060      	str	r0, [r4, #4]
 800498a:	1cf2      	adds	r2, r6, #3
 800498c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004990:	9300      	str	r3, [sp, #0]
 8004992:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8004996:	4b10      	ldr	r3, [pc, #64]	; (80049d8 <mtx8_execute+0x88>)
 8004998:	f7fc fffa 	bl	8001990 <chThdCreateStatic>
 800499c:	60a0      	str	r0, [r4, #8]
 800499e:	f7fc ff8f 	bl	80018c0 <chCondSignal.constprop.44>
 80049a2:	f7fc ff8d 	bl	80018c0 <chCondSignal.constprop.44>
 80049a6:	f7ff f893 	bl	8003ad0 <test_wait_threads>
 80049aa:	490c      	ldr	r1, [pc, #48]	; (80049dc <mtx8_execute+0x8c>)
 80049ac:	2001      	movs	r0, #1
 80049ae:	b002      	add	sp, #8
 80049b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80049b4:	f7fb bed4 	b.w	8000760 <_test_assert_sequence>
 80049b8:	20000930 	.word	0x20000930
 80049bc:	20000b38 	.word	0x20000b38
 80049c0:	08005e90 	.word	0x08005e90
 80049c4:	08002eb1 	.word	0x08002eb1
 80049c8:	200011cc 	.word	0x200011cc
 80049cc:	08005e84 	.word	0x08005e84
 80049d0:	08002f41 	.word	0x08002f41
 80049d4:	08005e80 	.word	0x08005e80
 80049d8:	08002fb1 	.word	0x08002fb1
 80049dc:	08005eb0 	.word	0x08005eb0

080049e0 <mtx7_execute>:
 80049e0:	b530      	push	{r4, r5, lr}
 80049e2:	4b2c      	ldr	r3, [pc, #176]	; (8004a94 <mtx7_execute+0xb4>)
 80049e4:	4a2c      	ldr	r2, [pc, #176]	; (8004a98 <mtx7_execute+0xb8>)
 80049e6:	6999      	ldr	r1, [r3, #24]
 80049e8:	482c      	ldr	r0, [pc, #176]	; (8004a9c <mtx7_execute+0xbc>)
 80049ea:	688d      	ldr	r5, [r1, #8]
 80049ec:	4b2c      	ldr	r3, [pc, #176]	; (8004aa0 <mtx7_execute+0xc0>)
 80049ee:	4c2d      	ldr	r4, [pc, #180]	; (8004aa4 <mtx7_execute+0xc4>)
 80049f0:	b083      	sub	sp, #12
 80049f2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80049f6:	9200      	str	r2, [sp, #0]
 80049f8:	1c6a      	adds	r2, r5, #1
 80049fa:	f7fc ffc9 	bl	8001990 <chThdCreateStatic>
 80049fe:	4b2a      	ldr	r3, [pc, #168]	; (8004aa8 <mtx7_execute+0xc8>)
 8004a00:	6020      	str	r0, [r4, #0]
 8004a02:	1caa      	adds	r2, r5, #2
 8004a04:	9300      	str	r3, [sp, #0]
 8004a06:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a0a:	4b25      	ldr	r3, [pc, #148]	; (8004aa0 <mtx7_execute+0xc0>)
 8004a0c:	4827      	ldr	r0, [pc, #156]	; (8004aac <mtx7_execute+0xcc>)
 8004a0e:	f7fc ffbf 	bl	8001990 <chThdCreateStatic>
 8004a12:	4b27      	ldr	r3, [pc, #156]	; (8004ab0 <mtx7_execute+0xd0>)
 8004a14:	6060      	str	r0, [r4, #4]
 8004a16:	1cea      	adds	r2, r5, #3
 8004a18:	9300      	str	r3, [sp, #0]
 8004a1a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a1e:	4b20      	ldr	r3, [pc, #128]	; (8004aa0 <mtx7_execute+0xc0>)
 8004a20:	4824      	ldr	r0, [pc, #144]	; (8004ab4 <mtx7_execute+0xd4>)
 8004a22:	f7fc ffb5 	bl	8001990 <chThdCreateStatic>
 8004a26:	4b24      	ldr	r3, [pc, #144]	; (8004ab8 <mtx7_execute+0xd8>)
 8004a28:	60a0      	str	r0, [r4, #8]
 8004a2a:	1d2a      	adds	r2, r5, #4
 8004a2c:	9300      	str	r3, [sp, #0]
 8004a2e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a32:	4b1b      	ldr	r3, [pc, #108]	; (8004aa0 <mtx7_execute+0xc0>)
 8004a34:	4821      	ldr	r0, [pc, #132]	; (8004abc <mtx7_execute+0xdc>)
 8004a36:	f7fc ffab 	bl	8001990 <chThdCreateStatic>
 8004a3a:	4b21      	ldr	r3, [pc, #132]	; (8004ac0 <mtx7_execute+0xe0>)
 8004a3c:	60e0      	str	r0, [r4, #12]
 8004a3e:	1d6a      	adds	r2, r5, #5
 8004a40:	9300      	str	r3, [sp, #0]
 8004a42:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a46:	4b16      	ldr	r3, [pc, #88]	; (8004aa0 <mtx7_execute+0xc0>)
 8004a48:	481e      	ldr	r0, [pc, #120]	; (8004ac4 <mtx7_execute+0xe4>)
 8004a4a:	f7fc ffa1 	bl	8001990 <chThdCreateStatic>
 8004a4e:	2320      	movs	r3, #32
 8004a50:	6120      	str	r0, [r4, #16]
 8004a52:	f383 8811 	msr	BASEPRI, r3
 8004a56:	4c1c      	ldr	r4, [pc, #112]	; (8004ac8 <mtx7_execute+0xe8>)
 8004a58:	6823      	ldr	r3, [r4, #0]
 8004a5a:	42a3      	cmp	r3, r4
 8004a5c:	d00b      	beq.n	8004a76 <mtx7_execute+0x96>
 8004a5e:	f06f 0501 	mvn.w	r5, #1
 8004a62:	681a      	ldr	r2, [r3, #0]
 8004a64:	6022      	str	r2, [r4, #0]
 8004a66:	4618      	mov	r0, r3
 8004a68:	6054      	str	r4, [r2, #4]
 8004a6a:	f7fc f939 	bl	8000ce0 <chSchReadyI>
 8004a6e:	6823      	ldr	r3, [r4, #0]
 8004a70:	6205      	str	r5, [r0, #32]
 8004a72:	42a3      	cmp	r3, r4
 8004a74:	d1f5      	bne.n	8004a62 <mtx7_execute+0x82>
 8004a76:	f7fc fd7b 	bl	8001570 <chSchRescheduleS>
 8004a7a:	2300      	movs	r3, #0
 8004a7c:	f383 8811 	msr	BASEPRI, r3
 8004a80:	f7ff f826 	bl	8003ad0 <test_wait_threads>
 8004a84:	4911      	ldr	r1, [pc, #68]	; (8004acc <mtx7_execute+0xec>)
 8004a86:	2001      	movs	r0, #1
 8004a88:	b003      	add	sp, #12
 8004a8a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004a8e:	f7fb be67 	b.w	8000760 <_test_assert_sequence>
 8004a92:	bf00      	nop
 8004a94:	20000930 	.word	0x20000930
 8004a98:	080060c4 	.word	0x080060c4
 8004a9c:	20000b38 	.word	0x20000b38
 8004aa0:	08002f41 	.word	0x08002f41
 8004aa4:	200011cc 	.word	0x200011cc
 8004aa8:	08005e88 	.word	0x08005e88
 8004aac:	20000c80 	.word	0x20000c80
 8004ab0:	08005e84 	.word	0x08005e84
 8004ab4:	20000dc8 	.word	0x20000dc8
 8004ab8:	08005e80 	.word	0x08005e80
 8004abc:	20000f10 	.word	0x20000f10
 8004ac0:	08005e90 	.word	0x08005e90
 8004ac4:	20001058 	.word	0x20001058
 8004ac8:	20000800 	.word	0x20000800
 8004acc:	080060c0 	.word	0x080060c0

08004ad0 <mtx6_execute>:
 8004ad0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004ad2:	4b2c      	ldr	r3, [pc, #176]	; (8004b84 <mtx6_execute+0xb4>)
 8004ad4:	4e2c      	ldr	r6, [pc, #176]	; (8004b88 <mtx6_execute+0xb8>)
 8004ad6:	699b      	ldr	r3, [r3, #24]
 8004ad8:	4d2c      	ldr	r5, [pc, #176]	; (8004b8c <mtx6_execute+0xbc>)
 8004ada:	689f      	ldr	r7, [r3, #8]
 8004adc:	4b2c      	ldr	r3, [pc, #176]	; (8004b90 <mtx6_execute+0xc0>)
 8004ade:	4c2d      	ldr	r4, [pc, #180]	; (8004b94 <mtx6_execute+0xc4>)
 8004ae0:	b083      	sub	sp, #12
 8004ae2:	1c7a      	adds	r2, r7, #1
 8004ae4:	9300      	str	r3, [sp, #0]
 8004ae6:	4628      	mov	r0, r5
 8004ae8:	4633      	mov	r3, r6
 8004aea:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004aee:	f7fc ff4f 	bl	8001990 <chThdCreateStatic>
 8004af2:	4929      	ldr	r1, [pc, #164]	; (8004b98 <mtx6_execute+0xc8>)
 8004af4:	6020      	str	r0, [r4, #0]
 8004af6:	1cba      	adds	r2, r7, #2
 8004af8:	4633      	mov	r3, r6
 8004afa:	9100      	str	r1, [sp, #0]
 8004afc:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8004b00:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b04:	f7fc ff44 	bl	8001990 <chThdCreateStatic>
 8004b08:	4924      	ldr	r1, [pc, #144]	; (8004b9c <mtx6_execute+0xcc>)
 8004b0a:	6060      	str	r0, [r4, #4]
 8004b0c:	1cfa      	adds	r2, r7, #3
 8004b0e:	4633      	mov	r3, r6
 8004b10:	9100      	str	r1, [sp, #0]
 8004b12:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8004b16:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b1a:	f7fc ff39 	bl	8001990 <chThdCreateStatic>
 8004b1e:	4920      	ldr	r1, [pc, #128]	; (8004ba0 <mtx6_execute+0xd0>)
 8004b20:	60a0      	str	r0, [r4, #8]
 8004b22:	1d3a      	adds	r2, r7, #4
 8004b24:	4633      	mov	r3, r6
 8004b26:	9100      	str	r1, [sp, #0]
 8004b28:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8004b2c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b30:	f7fc ff2e 	bl	8001990 <chThdCreateStatic>
 8004b34:	491b      	ldr	r1, [pc, #108]	; (8004ba4 <mtx6_execute+0xd4>)
 8004b36:	60e0      	str	r0, [r4, #12]
 8004b38:	4633      	mov	r3, r6
 8004b3a:	9100      	str	r1, [sp, #0]
 8004b3c:	1d7a      	adds	r2, r7, #5
 8004b3e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8004b42:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b46:	f7fc ff23 	bl	8001990 <chThdCreateStatic>
 8004b4a:	2320      	movs	r3, #32
 8004b4c:	6120      	str	r0, [r4, #16]
 8004b4e:	f383 8811 	msr	BASEPRI, r3
 8004b52:	f7fc f8dd 	bl	8000d10 <chCondSignalI.constprop.43>
 8004b56:	f7fc f8db 	bl	8000d10 <chCondSignalI.constprop.43>
 8004b5a:	f7fc f8d9 	bl	8000d10 <chCondSignalI.constprop.43>
 8004b5e:	f7fc f8d7 	bl	8000d10 <chCondSignalI.constprop.43>
 8004b62:	f7fc f8d5 	bl	8000d10 <chCondSignalI.constprop.43>
 8004b66:	f7fc fd03 	bl	8001570 <chSchRescheduleS>
 8004b6a:	2300      	movs	r3, #0
 8004b6c:	f383 8811 	msr	BASEPRI, r3
 8004b70:	f7fe ffae 	bl	8003ad0 <test_wait_threads>
 8004b74:	490c      	ldr	r1, [pc, #48]	; (8004ba8 <mtx6_execute+0xd8>)
 8004b76:	2001      	movs	r0, #1
 8004b78:	b003      	add	sp, #12
 8004b7a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004b7e:	f7fb bdef 	b.w	8000760 <_test_assert_sequence>
 8004b82:	bf00      	nop
 8004b84:	20000930 	.word	0x20000930
 8004b88:	08002f41 	.word	0x08002f41
 8004b8c:	20000b38 	.word	0x20000b38
 8004b90:	080060c4 	.word	0x080060c4
 8004b94:	200011cc 	.word	0x200011cc
 8004b98:	08005e88 	.word	0x08005e88
 8004b9c:	08005e84 	.word	0x08005e84
 8004ba0:	08005e80 	.word	0x08005e80
 8004ba4:	08005e90 	.word	0x08005e90
 8004ba8:	080060c0 	.word	0x080060c0
 8004bac:	00000000 	.word	0x00000000

08004bb0 <mtx4_execute>:
 8004bb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004bb4:	4d84      	ldr	r5, [pc, #528]	; (8004dc8 <mtx4_execute+0x218>)
 8004bb6:	4a85      	ldr	r2, [pc, #532]	; (8004dcc <mtx4_execute+0x21c>)
 8004bb8:	69a9      	ldr	r1, [r5, #24]
 8004bba:	4b85      	ldr	r3, [pc, #532]	; (8004dd0 <mtx4_execute+0x220>)
 8004bbc:	688c      	ldr	r4, [r1, #8]
 8004bbe:	4885      	ldr	r0, [pc, #532]	; (8004dd4 <mtx4_execute+0x224>)
 8004bc0:	4e85      	ldr	r6, [pc, #532]	; (8004dd8 <mtx4_execute+0x228>)
 8004bc2:	b082      	sub	sp, #8
 8004bc4:	1c67      	adds	r7, r4, #1
 8004bc6:	9200      	str	r2, [sp, #0]
 8004bc8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004bcc:	463a      	mov	r2, r7
 8004bce:	f7fc fedf 	bl	8001990 <chThdCreateStatic>
 8004bd2:	f104 0802 	add.w	r8, r4, #2
 8004bd6:	4b81      	ldr	r3, [pc, #516]	; (8004ddc <mtx4_execute+0x22c>)
 8004bd8:	6030      	str	r0, [r6, #0]
 8004bda:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004bde:	4642      	mov	r2, r8
 8004be0:	9300      	str	r3, [sp, #0]
 8004be2:	487f      	ldr	r0, [pc, #508]	; (8004de0 <mtx4_execute+0x230>)
 8004be4:	4b7f      	ldr	r3, [pc, #508]	; (8004de4 <mtx4_execute+0x234>)
 8004be6:	f7fc fed3 	bl	8001990 <chThdCreateStatic>
 8004bea:	6070      	str	r0, [r6, #4]
 8004bec:	487e      	ldr	r0, [pc, #504]	; (8004de8 <mtx4_execute+0x238>)
 8004bee:	f7fe f917 	bl	8002e20 <chMtxLock>
 8004bf2:	69ab      	ldr	r3, [r5, #24]
 8004bf4:	6899      	ldr	r1, [r3, #8]
 8004bf6:	1b09      	subs	r1, r1, r4
 8004bf8:	fab1 f181 	clz	r1, r1
 8004bfc:	2001      	movs	r0, #1
 8004bfe:	0949      	lsrs	r1, r1, #5
 8004c00:	f7fb fdd6 	bl	80007b0 <_test_assert>
 8004c04:	b110      	cbz	r0, 8004c0c <mtx4_execute+0x5c>
 8004c06:	b002      	add	sp, #8
 8004c08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004c0c:	2064      	movs	r0, #100	; 0x64
 8004c0e:	f7fd fd87 	bl	8002720 <chThdSleep>
 8004c12:	69ab      	ldr	r3, [r5, #24]
 8004c14:	6899      	ldr	r1, [r3, #8]
 8004c16:	1bc9      	subs	r1, r1, r7
 8004c18:	fab1 f181 	clz	r1, r1
 8004c1c:	2002      	movs	r0, #2
 8004c1e:	0949      	lsrs	r1, r1, #5
 8004c20:	f7fb fdc6 	bl	80007b0 <_test_assert>
 8004c24:	2800      	cmp	r0, #0
 8004c26:	d1ee      	bne.n	8004c06 <mtx4_execute+0x56>
 8004c28:	4870      	ldr	r0, [pc, #448]	; (8004dec <mtx4_execute+0x23c>)
 8004c2a:	f7fe f8f9 	bl	8002e20 <chMtxLock>
 8004c2e:	69ab      	ldr	r3, [r5, #24]
 8004c30:	6899      	ldr	r1, [r3, #8]
 8004c32:	1bc9      	subs	r1, r1, r7
 8004c34:	fab1 f181 	clz	r1, r1
 8004c38:	2003      	movs	r0, #3
 8004c3a:	0949      	lsrs	r1, r1, #5
 8004c3c:	f7fb fdb8 	bl	80007b0 <_test_assert>
 8004c40:	2800      	cmp	r0, #0
 8004c42:	d1e0      	bne.n	8004c06 <mtx4_execute+0x56>
 8004c44:	2064      	movs	r0, #100	; 0x64
 8004c46:	f7fd fd6b 	bl	8002720 <chThdSleep>
 8004c4a:	69ab      	ldr	r3, [r5, #24]
 8004c4c:	6899      	ldr	r1, [r3, #8]
 8004c4e:	eba1 0108 	sub.w	r1, r1, r8
 8004c52:	fab1 f181 	clz	r1, r1
 8004c56:	2004      	movs	r0, #4
 8004c58:	0949      	lsrs	r1, r1, #5
 8004c5a:	f7fb fda9 	bl	80007b0 <_test_assert>
 8004c5e:	2800      	cmp	r0, #0
 8004c60:	d1d1      	bne.n	8004c06 <mtx4_execute+0x56>
 8004c62:	4862      	ldr	r0, [pc, #392]	; (8004dec <mtx4_execute+0x23c>)
 8004c64:	f7fc fe44 	bl	80018f0 <chMtxUnlock>
 8004c68:	69ab      	ldr	r3, [r5, #24]
 8004c6a:	6899      	ldr	r1, [r3, #8]
 8004c6c:	1bc9      	subs	r1, r1, r7
 8004c6e:	fab1 f181 	clz	r1, r1
 8004c72:	2005      	movs	r0, #5
 8004c74:	0949      	lsrs	r1, r1, #5
 8004c76:	f7fb fd9b 	bl	80007b0 <_test_assert>
 8004c7a:	2800      	cmp	r0, #0
 8004c7c:	d1c3      	bne.n	8004c06 <mtx4_execute+0x56>
 8004c7e:	2064      	movs	r0, #100	; 0x64
 8004c80:	f7fd fd4e 	bl	8002720 <chThdSleep>
 8004c84:	69ab      	ldr	r3, [r5, #24]
 8004c86:	6899      	ldr	r1, [r3, #8]
 8004c88:	1bc9      	subs	r1, r1, r7
 8004c8a:	fab1 f181 	clz	r1, r1
 8004c8e:	2006      	movs	r0, #6
 8004c90:	0949      	lsrs	r1, r1, #5
 8004c92:	f7fb fd8d 	bl	80007b0 <_test_assert>
 8004c96:	2800      	cmp	r0, #0
 8004c98:	d1b5      	bne.n	8004c06 <mtx4_execute+0x56>
 8004c9a:	f7fc fc91 	bl	80015c0 <chMtxUnlockAll>
 8004c9e:	69ab      	ldr	r3, [r5, #24]
 8004ca0:	6899      	ldr	r1, [r3, #8]
 8004ca2:	1b09      	subs	r1, r1, r4
 8004ca4:	fab1 f181 	clz	r1, r1
 8004ca8:	2007      	movs	r0, #7
 8004caa:	0949      	lsrs	r1, r1, #5
 8004cac:	f7fb fd80 	bl	80007b0 <_test_assert>
 8004cb0:	2800      	cmp	r0, #0
 8004cb2:	d1a8      	bne.n	8004c06 <mtx4_execute+0x56>
 8004cb4:	f7fe ff0c 	bl	8003ad0 <test_wait_threads>
 8004cb8:	4b4d      	ldr	r3, [pc, #308]	; (8004df0 <mtx4_execute+0x240>)
 8004cba:	9300      	str	r3, [sp, #0]
 8004cbc:	463a      	mov	r2, r7
 8004cbe:	4b44      	ldr	r3, [pc, #272]	; (8004dd0 <mtx4_execute+0x220>)
 8004cc0:	4844      	ldr	r0, [pc, #272]	; (8004dd4 <mtx4_execute+0x224>)
 8004cc2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004cc6:	f7fc fe63 	bl	8001990 <chThdCreateStatic>
 8004cca:	4b4a      	ldr	r3, [pc, #296]	; (8004df4 <mtx4_execute+0x244>)
 8004ccc:	6030      	str	r0, [r6, #0]
 8004cce:	4642      	mov	r2, r8
 8004cd0:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004cd4:	9300      	str	r3, [sp, #0]
 8004cd6:	4842      	ldr	r0, [pc, #264]	; (8004de0 <mtx4_execute+0x230>)
 8004cd8:	4b42      	ldr	r3, [pc, #264]	; (8004de4 <mtx4_execute+0x234>)
 8004cda:	f7fc fe59 	bl	8001990 <chThdCreateStatic>
 8004cde:	6070      	str	r0, [r6, #4]
 8004ce0:	4841      	ldr	r0, [pc, #260]	; (8004de8 <mtx4_execute+0x238>)
 8004ce2:	f7fe f89d 	bl	8002e20 <chMtxLock>
 8004ce6:	69ab      	ldr	r3, [r5, #24]
 8004ce8:	6899      	ldr	r1, [r3, #8]
 8004cea:	1b0a      	subs	r2, r1, r4
 8004cec:	4251      	negs	r1, r2
 8004cee:	4151      	adcs	r1, r2
 8004cf0:	2008      	movs	r0, #8
 8004cf2:	f7fb fd5d 	bl	80007b0 <_test_assert>
 8004cf6:	2800      	cmp	r0, #0
 8004cf8:	d185      	bne.n	8004c06 <mtx4_execute+0x56>
 8004cfa:	2064      	movs	r0, #100	; 0x64
 8004cfc:	f7fd fd10 	bl	8002720 <chThdSleep>
 8004d00:	69ab      	ldr	r3, [r5, #24]
 8004d02:	6899      	ldr	r1, [r3, #8]
 8004d04:	1bcb      	subs	r3, r1, r7
 8004d06:	4259      	negs	r1, r3
 8004d08:	4159      	adcs	r1, r3
 8004d0a:	2009      	movs	r0, #9
 8004d0c:	f7fb fd50 	bl	80007b0 <_test_assert>
 8004d10:	2800      	cmp	r0, #0
 8004d12:	f47f af78 	bne.w	8004c06 <mtx4_execute+0x56>
 8004d16:	4835      	ldr	r0, [pc, #212]	; (8004dec <mtx4_execute+0x23c>)
 8004d18:	f7fe f882 	bl	8002e20 <chMtxLock>
 8004d1c:	69ab      	ldr	r3, [r5, #24]
 8004d1e:	6899      	ldr	r1, [r3, #8]
 8004d20:	eba1 0e07 	sub.w	lr, r1, r7
 8004d24:	f1de 0100 	rsbs	r1, lr, #0
 8004d28:	eb41 010e 	adc.w	r1, r1, lr
 8004d2c:	200a      	movs	r0, #10
 8004d2e:	f7fb fd3f 	bl	80007b0 <_test_assert>
 8004d32:	2800      	cmp	r0, #0
 8004d34:	f47f af67 	bne.w	8004c06 <mtx4_execute+0x56>
 8004d38:	2064      	movs	r0, #100	; 0x64
 8004d3a:	f7fd fcf1 	bl	8002720 <chThdSleep>
 8004d3e:	69ab      	ldr	r3, [r5, #24]
 8004d40:	6899      	ldr	r1, [r3, #8]
 8004d42:	eba1 0c08 	sub.w	ip, r1, r8
 8004d46:	f1dc 0100 	rsbs	r1, ip, #0
 8004d4a:	eb41 010c 	adc.w	r1, r1, ip
 8004d4e:	200b      	movs	r0, #11
 8004d50:	f7fb fd2e 	bl	80007b0 <_test_assert>
 8004d54:	4606      	mov	r6, r0
 8004d56:	2800      	cmp	r0, #0
 8004d58:	f47f af55 	bne.w	8004c06 <mtx4_execute+0x56>
 8004d5c:	2320      	movs	r3, #32
 8004d5e:	f383 8811 	msr	BASEPRI, r3
 8004d62:	4822      	ldr	r0, [pc, #136]	; (8004dec <mtx4_execute+0x23c>)
 8004d64:	f7fc f91c 	bl	8000fa0 <chMtxUnlockS>
 8004d68:	f7fc fc02 	bl	8001570 <chSchRescheduleS>
 8004d6c:	f386 8811 	msr	BASEPRI, r6
 8004d70:	69ab      	ldr	r3, [r5, #24]
 8004d72:	6899      	ldr	r1, [r3, #8]
 8004d74:	1bce      	subs	r6, r1, r7
 8004d76:	4271      	negs	r1, r6
 8004d78:	4171      	adcs	r1, r6
 8004d7a:	200c      	movs	r0, #12
 8004d7c:	f7fb fd18 	bl	80007b0 <_test_assert>
 8004d80:	2800      	cmp	r0, #0
 8004d82:	f47f af40 	bne.w	8004c06 <mtx4_execute+0x56>
 8004d86:	2064      	movs	r0, #100	; 0x64
 8004d88:	f7fd fcca 	bl	8002720 <chThdSleep>
 8004d8c:	69ab      	ldr	r3, [r5, #24]
 8004d8e:	6899      	ldr	r1, [r3, #8]
 8004d90:	1bca      	subs	r2, r1, r7
 8004d92:	4251      	negs	r1, r2
 8004d94:	4151      	adcs	r1, r2
 8004d96:	200d      	movs	r0, #13
 8004d98:	f7fb fd0a 	bl	80007b0 <_test_assert>
 8004d9c:	2800      	cmp	r0, #0
 8004d9e:	f47f af32 	bne.w	8004c06 <mtx4_execute+0x56>
 8004da2:	f7fc fc0d 	bl	80015c0 <chMtxUnlockAll>
 8004da6:	69ab      	ldr	r3, [r5, #24]
 8004da8:	6899      	ldr	r1, [r3, #8]
 8004daa:	1b0b      	subs	r3, r1, r4
 8004dac:	4259      	negs	r1, r3
 8004dae:	4159      	adcs	r1, r3
 8004db0:	200e      	movs	r0, #14
 8004db2:	f7fb fcfd 	bl	80007b0 <_test_assert>
 8004db6:	2800      	cmp	r0, #0
 8004db8:	f47f af25 	bne.w	8004c06 <mtx4_execute+0x56>
 8004dbc:	b002      	add	sp, #8
 8004dbe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004dc2:	f7fe be85 	b.w	8003ad0 <test_wait_threads>
 8004dc6:	bf00      	nop
 8004dc8:	20000930 	.word	0x20000930
 8004dcc:	08005e80 	.word	0x08005e80
 8004dd0:	080030c1 	.word	0x080030c1
 8004dd4:	20000b38 	.word	0x20000b38
 8004dd8:	200011cc 	.word	0x200011cc
 8004ddc:	08005e90 	.word	0x08005e90
 8004de0:	20000c80 	.word	0x20000c80
 8004de4:	080030e1 	.word	0x080030e1
 8004de8:	20000844 	.word	0x20000844
 8004dec:	20000834 	.word	0x20000834
 8004df0:	08005e88 	.word	0x08005e88
 8004df4:	08005e84 	.word	0x08005e84
	...

08004e00 <mtx1_execute>:
 8004e00:	b570      	push	{r4, r5, r6, lr}
 8004e02:	4e29      	ldr	r6, [pc, #164]	; (8004ea8 <mtx1_execute+0xa8>)
 8004e04:	4829      	ldr	r0, [pc, #164]	; (8004eac <mtx1_execute+0xac>)
 8004e06:	69b3      	ldr	r3, [r6, #24]
 8004e08:	4d29      	ldr	r5, [pc, #164]	; (8004eb0 <mtx1_execute+0xb0>)
 8004e0a:	689c      	ldr	r4, [r3, #8]
 8004e0c:	b082      	sub	sp, #8
 8004e0e:	f7fe f807 	bl	8002e20 <chMtxLock>
 8004e12:	4b28      	ldr	r3, [pc, #160]	; (8004eb4 <mtx1_execute+0xb4>)
 8004e14:	9300      	str	r3, [sp, #0]
 8004e16:	1c62      	adds	r2, r4, #1
 8004e18:	4b27      	ldr	r3, [pc, #156]	; (8004eb8 <mtx1_execute+0xb8>)
 8004e1a:	4828      	ldr	r0, [pc, #160]	; (8004ebc <mtx1_execute+0xbc>)
 8004e1c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004e20:	f7fc fdb6 	bl	8001990 <chThdCreateStatic>
 8004e24:	4b26      	ldr	r3, [pc, #152]	; (8004ec0 <mtx1_execute+0xc0>)
 8004e26:	6028      	str	r0, [r5, #0]
 8004e28:	1ca2      	adds	r2, r4, #2
 8004e2a:	9300      	str	r3, [sp, #0]
 8004e2c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004e30:	4b21      	ldr	r3, [pc, #132]	; (8004eb8 <mtx1_execute+0xb8>)
 8004e32:	4824      	ldr	r0, [pc, #144]	; (8004ec4 <mtx1_execute+0xc4>)
 8004e34:	f7fc fdac 	bl	8001990 <chThdCreateStatic>
 8004e38:	4b23      	ldr	r3, [pc, #140]	; (8004ec8 <mtx1_execute+0xc8>)
 8004e3a:	6068      	str	r0, [r5, #4]
 8004e3c:	1ce2      	adds	r2, r4, #3
 8004e3e:	9300      	str	r3, [sp, #0]
 8004e40:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004e44:	4b1c      	ldr	r3, [pc, #112]	; (8004eb8 <mtx1_execute+0xb8>)
 8004e46:	4821      	ldr	r0, [pc, #132]	; (8004ecc <mtx1_execute+0xcc>)
 8004e48:	f7fc fda2 	bl	8001990 <chThdCreateStatic>
 8004e4c:	4b20      	ldr	r3, [pc, #128]	; (8004ed0 <mtx1_execute+0xd0>)
 8004e4e:	60a8      	str	r0, [r5, #8]
 8004e50:	1d22      	adds	r2, r4, #4
 8004e52:	9300      	str	r3, [sp, #0]
 8004e54:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004e58:	4b17      	ldr	r3, [pc, #92]	; (8004eb8 <mtx1_execute+0xb8>)
 8004e5a:	481e      	ldr	r0, [pc, #120]	; (8004ed4 <mtx1_execute+0xd4>)
 8004e5c:	f7fc fd98 	bl	8001990 <chThdCreateStatic>
 8004e60:	4b1d      	ldr	r3, [pc, #116]	; (8004ed8 <mtx1_execute+0xd8>)
 8004e62:	60e8      	str	r0, [r5, #12]
 8004e64:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004e68:	1d62      	adds	r2, r4, #5
 8004e6a:	9300      	str	r3, [sp, #0]
 8004e6c:	481b      	ldr	r0, [pc, #108]	; (8004edc <mtx1_execute+0xdc>)
 8004e6e:	4b12      	ldr	r3, [pc, #72]	; (8004eb8 <mtx1_execute+0xb8>)
 8004e70:	f7fc fd8e 	bl	8001990 <chThdCreateStatic>
 8004e74:	6128      	str	r0, [r5, #16]
 8004e76:	480d      	ldr	r0, [pc, #52]	; (8004eac <mtx1_execute+0xac>)
 8004e78:	f7fc fd3a 	bl	80018f0 <chMtxUnlock>
 8004e7c:	f7fe fe28 	bl	8003ad0 <test_wait_threads>
 8004e80:	69b3      	ldr	r3, [r6, #24]
 8004e82:	6899      	ldr	r1, [r3, #8]
 8004e84:	1b09      	subs	r1, r1, r4
 8004e86:	fab1 f181 	clz	r1, r1
 8004e8a:	2001      	movs	r0, #1
 8004e8c:	0949      	lsrs	r1, r1, #5
 8004e8e:	f7fb fc8f 	bl	80007b0 <_test_assert>
 8004e92:	b108      	cbz	r0, 8004e98 <mtx1_execute+0x98>
 8004e94:	b002      	add	sp, #8
 8004e96:	bd70      	pop	{r4, r5, r6, pc}
 8004e98:	4911      	ldr	r1, [pc, #68]	; (8004ee0 <mtx1_execute+0xe0>)
 8004e9a:	2002      	movs	r0, #2
 8004e9c:	b002      	add	sp, #8
 8004e9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004ea2:	f7fb bc5d 	b.w	8000760 <_test_assert_sequence>
 8004ea6:	bf00      	nop
 8004ea8:	20000930 	.word	0x20000930
 8004eac:	20000834 	.word	0x20000834
 8004eb0:	200011cc 	.word	0x200011cc
 8004eb4:	080060c4 	.word	0x080060c4
 8004eb8:	08003101 	.word	0x08003101
 8004ebc:	20000b38 	.word	0x20000b38
 8004ec0:	08005e88 	.word	0x08005e88
 8004ec4:	20000c80 	.word	0x20000c80
 8004ec8:	08005e84 	.word	0x08005e84
 8004ecc:	20000dc8 	.word	0x20000dc8
 8004ed0:	08005e80 	.word	0x08005e80
 8004ed4:	20000f10 	.word	0x20000f10
 8004ed8:	08005e90 	.word	0x08005e90
 8004edc:	20001058 	.word	0x20001058
 8004ee0:	080060c0 	.word	0x080060c0
	...

08004ef0 <sem2_execute>:
 8004ef0:	b570      	push	{r4, r5, r6, lr}
 8004ef2:	2320      	movs	r3, #32
 8004ef4:	b082      	sub	sp, #8
 8004ef6:	f383 8811 	msr	BASEPRI, r3
 8004efa:	4c4c      	ldr	r4, [pc, #304]	; (800502c <sem2_execute+0x13c>)
 8004efc:	68a3      	ldr	r3, [r4, #8]
 8004efe:	3b01      	subs	r3, #1
 8004f00:	bf5a      	itte	pl
 8004f02:	60a3      	strpl	r3, [r4, #8]
 8004f04:	2100      	movpl	r1, #0
 8004f06:	2101      	movmi	r1, #1
 8004f08:	2300      	movs	r3, #0
 8004f0a:	f383 8811 	msr	BASEPRI, r3
 8004f0e:	2001      	movs	r0, #1
 8004f10:	f7fb fc4e 	bl	80007b0 <_test_assert>
 8004f14:	b108      	cbz	r0, 8004f1a <sem2_execute+0x2a>
 8004f16:	b002      	add	sp, #8
 8004f18:	bd70      	pop	{r4, r5, r6, pc}
 8004f1a:	6821      	ldr	r1, [r4, #0]
 8004f1c:	1b09      	subs	r1, r1, r4
 8004f1e:	fab1 f181 	clz	r1, r1
 8004f22:	2002      	movs	r0, #2
 8004f24:	0949      	lsrs	r1, r1, #5
 8004f26:	f7fb fc43 	bl	80007b0 <_test_assert>
 8004f2a:	2800      	cmp	r0, #0
 8004f2c:	d1f3      	bne.n	8004f16 <sem2_execute+0x26>
 8004f2e:	68a1      	ldr	r1, [r4, #8]
 8004f30:	fab1 f181 	clz	r1, r1
 8004f34:	0949      	lsrs	r1, r1, #5
 8004f36:	2003      	movs	r0, #3
 8004f38:	f7fb fc3a 	bl	80007b0 <_test_assert>
 8004f3c:	4601      	mov	r1, r0
 8004f3e:	2800      	cmp	r0, #0
 8004f40:	d1e9      	bne.n	8004f16 <sem2_execute+0x26>
 8004f42:	4a3b      	ldr	r2, [pc, #236]	; (8005030 <sem2_execute+0x140>)
 8004f44:	4b3b      	ldr	r3, [pc, #236]	; (8005034 <sem2_execute+0x144>)
 8004f46:	6992      	ldr	r2, [r2, #24]
 8004f48:	483b      	ldr	r0, [pc, #236]	; (8005038 <sem2_execute+0x148>)
 8004f4a:	6892      	ldr	r2, [r2, #8]
 8004f4c:	9100      	str	r1, [sp, #0]
 8004f4e:	3a01      	subs	r2, #1
 8004f50:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004f54:	f7fc fd1c 	bl	8001990 <chThdCreateStatic>
 8004f58:	4b38      	ldr	r3, [pc, #224]	; (800503c <sem2_execute+0x14c>)
 8004f5a:	6018      	str	r0, [r3, #0]
 8004f5c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004f60:	f7fc fe5e 	bl	8001c20 <chSemWaitTimeout.constprop.50>
 8004f64:	4605      	mov	r5, r0
 8004f66:	f7fe fdb3 	bl	8003ad0 <test_wait_threads>
 8004f6a:	fab5 f185 	clz	r1, r5
 8004f6e:	0949      	lsrs	r1, r1, #5
 8004f70:	2004      	movs	r0, #4
 8004f72:	f7fb fc1d 	bl	80007b0 <_test_assert>
 8004f76:	2800      	cmp	r0, #0
 8004f78:	d1cd      	bne.n	8004f16 <sem2_execute+0x26>
 8004f7a:	6821      	ldr	r1, [r4, #0]
 8004f7c:	1b09      	subs	r1, r1, r4
 8004f7e:	fab1 f181 	clz	r1, r1
 8004f82:	2005      	movs	r0, #5
 8004f84:	0949      	lsrs	r1, r1, #5
 8004f86:	f7fb fc13 	bl	80007b0 <_test_assert>
 8004f8a:	2800      	cmp	r0, #0
 8004f8c:	d1c3      	bne.n	8004f16 <sem2_execute+0x26>
 8004f8e:	68a1      	ldr	r1, [r4, #8]
 8004f90:	fab1 f181 	clz	r1, r1
 8004f94:	0949      	lsrs	r1, r1, #5
 8004f96:	2006      	movs	r0, #6
 8004f98:	f7fb fc0a 	bl	80007b0 <_test_assert>
 8004f9c:	4605      	mov	r5, r0
 8004f9e:	2800      	cmp	r0, #0
 8004fa0:	d1b9      	bne.n	8004f16 <sem2_execute+0x26>
 8004fa2:	f7fd fcb5 	bl	8002910 <test_wait_tick>
 8004fa6:	2320      	movs	r3, #32
 8004fa8:	f383 8811 	msr	BASEPRI, r3
 8004fac:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004fb0:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 8004fb2:	f385 8811 	msr	BASEPRI, r5
 8004fb6:	2541      	movs	r5, #65	; 0x41
 8004fb8:	4628      	mov	r0, r5
 8004fba:	f7fb fc11 	bl	80007e0 <test_emit_token>
 8004fbe:	2032      	movs	r0, #50	; 0x32
 8004fc0:	f7fc fe2e 	bl	8001c20 <chSemWaitTimeout.constprop.50>
 8004fc4:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8004fc8:	fab1 f181 	clz	r1, r1
 8004fcc:	0949      	lsrs	r1, r1, #5
 8004fce:	2007      	movs	r0, #7
 8004fd0:	f7fb fbee 	bl	80007b0 <_test_assert>
 8004fd4:	2800      	cmp	r0, #0
 8004fd6:	d19e      	bne.n	8004f16 <sem2_execute+0x26>
 8004fd8:	6821      	ldr	r1, [r4, #0]
 8004fda:	1b09      	subs	r1, r1, r4
 8004fdc:	fab1 f181 	clz	r1, r1
 8004fe0:	2008      	movs	r0, #8
 8004fe2:	0949      	lsrs	r1, r1, #5
 8004fe4:	f7fb fbe4 	bl	80007b0 <_test_assert>
 8004fe8:	2800      	cmp	r0, #0
 8004fea:	d194      	bne.n	8004f16 <sem2_execute+0x26>
 8004fec:	68a1      	ldr	r1, [r4, #8]
 8004fee:	fab1 f181 	clz	r1, r1
 8004ff2:	0949      	lsrs	r1, r1, #5
 8004ff4:	2009      	movs	r0, #9
 8004ff6:	f7fb fbdb 	bl	80007b0 <_test_assert>
 8004ffa:	3501      	adds	r5, #1
 8004ffc:	b2ed      	uxtb	r5, r5
 8004ffe:	2800      	cmp	r0, #0
 8005000:	d189      	bne.n	8004f16 <sem2_execute+0x26>
 8005002:	2d46      	cmp	r5, #70	; 0x46
 8005004:	d1d8      	bne.n	8004fb8 <sem2_execute+0xc8>
 8005006:	490e      	ldr	r1, [pc, #56]	; (8005040 <sem2_execute+0x150>)
 8005008:	200a      	movs	r0, #10
 800500a:	f7fb fba9 	bl	8000760 <_test_assert_sequence>
 800500e:	2800      	cmp	r0, #0
 8005010:	d181      	bne.n	8004f16 <sem2_execute+0x26>
 8005012:	b2b6      	uxth	r6, r6
 8005014:	f106 02fc 	add.w	r2, r6, #252	; 0xfc
 8005018:	36fa      	adds	r6, #250	; 0xfa
 800501a:	b292      	uxth	r2, r2
 800501c:	b2b1      	uxth	r1, r6
 800501e:	200b      	movs	r0, #11
 8005020:	b002      	add	sp, #8
 8005022:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005026:	f7fb bb7b 	b.w	8000720 <_test_assert_time_window>
 800502a:	bf00      	nop
 800502c:	200008ac 	.word	0x200008ac
 8005030:	20000930 	.word	0x20000930
 8005034:	080028e1 	.word	0x080028e1
 8005038:	20000b38 	.word	0x20000b38
 800503c:	200011cc 	.word	0x200011cc
 8005040:	080060c0 	.word	0x080060c0
	...

08005050 <sem1_execute>:
 8005050:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005052:	4d4b      	ldr	r5, [pc, #300]	; (8005180 <sem1_execute+0x130>)
 8005054:	4f4b      	ldr	r7, [pc, #300]	; (8005184 <sem1_execute+0x134>)
 8005056:	69aa      	ldr	r2, [r5, #24]
 8005058:	4b4b      	ldr	r3, [pc, #300]	; (8005188 <sem1_execute+0x138>)
 800505a:	6892      	ldr	r2, [r2, #8]
 800505c:	484b      	ldr	r0, [pc, #300]	; (800518c <sem1_execute+0x13c>)
 800505e:	4c4c      	ldr	r4, [pc, #304]	; (8005190 <sem1_execute+0x140>)
 8005060:	b083      	sub	sp, #12
 8005062:	3205      	adds	r2, #5
 8005064:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005068:	9700      	str	r7, [sp, #0]
 800506a:	f7fc fc91 	bl	8001990 <chThdCreateStatic>
 800506e:	69ab      	ldr	r3, [r5, #24]
 8005070:	689a      	ldr	r2, [r3, #8]
 8005072:	4b48      	ldr	r3, [pc, #288]	; (8005194 <sem1_execute+0x144>)
 8005074:	6020      	str	r0, [r4, #0]
 8005076:	3201      	adds	r2, #1
 8005078:	9300      	str	r3, [sp, #0]
 800507a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800507e:	4b42      	ldr	r3, [pc, #264]	; (8005188 <sem1_execute+0x138>)
 8005080:	4845      	ldr	r0, [pc, #276]	; (8005198 <sem1_execute+0x148>)
 8005082:	f7fc fc85 	bl	8001990 <chThdCreateStatic>
 8005086:	69aa      	ldr	r2, [r5, #24]
 8005088:	4b44      	ldr	r3, [pc, #272]	; (800519c <sem1_execute+0x14c>)
 800508a:	6892      	ldr	r2, [r2, #8]
 800508c:	6060      	str	r0, [r4, #4]
 800508e:	3203      	adds	r2, #3
 8005090:	9300      	str	r3, [sp, #0]
 8005092:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005096:	4b3c      	ldr	r3, [pc, #240]	; (8005188 <sem1_execute+0x138>)
 8005098:	4841      	ldr	r0, [pc, #260]	; (80051a0 <sem1_execute+0x150>)
 800509a:	f7fc fc79 	bl	8001990 <chThdCreateStatic>
 800509e:	69aa      	ldr	r2, [r5, #24]
 80050a0:	4b40      	ldr	r3, [pc, #256]	; (80051a4 <sem1_execute+0x154>)
 80050a2:	6892      	ldr	r2, [r2, #8]
 80050a4:	60a0      	str	r0, [r4, #8]
 80050a6:	3204      	adds	r2, #4
 80050a8:	9300      	str	r3, [sp, #0]
 80050aa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80050ae:	4b36      	ldr	r3, [pc, #216]	; (8005188 <sem1_execute+0x138>)
 80050b0:	483d      	ldr	r0, [pc, #244]	; (80051a8 <sem1_execute+0x158>)
 80050b2:	f7fc fc6d 	bl	8001990 <chThdCreateStatic>
 80050b6:	69aa      	ldr	r2, [r5, #24]
 80050b8:	4b3c      	ldr	r3, [pc, #240]	; (80051ac <sem1_execute+0x15c>)
 80050ba:	6892      	ldr	r2, [r2, #8]
 80050bc:	60e0      	str	r0, [r4, #12]
 80050be:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80050c2:	3202      	adds	r2, #2
 80050c4:	9300      	str	r3, [sp, #0]
 80050c6:	483a      	ldr	r0, [pc, #232]	; (80051b0 <sem1_execute+0x160>)
 80050c8:	4b2f      	ldr	r3, [pc, #188]	; (8005188 <sem1_execute+0x138>)
 80050ca:	f7fc fc61 	bl	8001990 <chThdCreateStatic>
 80050ce:	6120      	str	r0, [r4, #16]
 80050d0:	4838      	ldr	r0, [pc, #224]	; (80051b4 <sem1_execute+0x164>)
 80050d2:	f7fc fc3d 	bl	8001950 <chSemSignal>
 80050d6:	4837      	ldr	r0, [pc, #220]	; (80051b4 <sem1_execute+0x164>)
 80050d8:	f7fc fc3a 	bl	8001950 <chSemSignal>
 80050dc:	4835      	ldr	r0, [pc, #212]	; (80051b4 <sem1_execute+0x164>)
 80050de:	f7fc fc37 	bl	8001950 <chSemSignal>
 80050e2:	4834      	ldr	r0, [pc, #208]	; (80051b4 <sem1_execute+0x164>)
 80050e4:	f7fc fc34 	bl	8001950 <chSemSignal>
 80050e8:	4832      	ldr	r0, [pc, #200]	; (80051b4 <sem1_execute+0x164>)
 80050ea:	f7fc fc31 	bl	8001950 <chSemSignal>
 80050ee:	f7fe fcef 	bl	8003ad0 <test_wait_threads>
 80050f2:	4931      	ldr	r1, [pc, #196]	; (80051b8 <sem1_execute+0x168>)
 80050f4:	2001      	movs	r0, #1
 80050f6:	f7fb fb33 	bl	8000760 <_test_assert_sequence>
 80050fa:	b108      	cbz	r0, 8005100 <sem1_execute+0xb0>
 80050fc:	b003      	add	sp, #12
 80050fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005100:	69aa      	ldr	r2, [r5, #24]
 8005102:	4b21      	ldr	r3, [pc, #132]	; (8005188 <sem1_execute+0x138>)
 8005104:	6892      	ldr	r2, [r2, #8]
 8005106:	9700      	str	r7, [sp, #0]
 8005108:	4606      	mov	r6, r0
 800510a:	3205      	adds	r2, #5
 800510c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005110:	481e      	ldr	r0, [pc, #120]	; (800518c <sem1_execute+0x13c>)
 8005112:	f7fc fc3d 	bl	8001990 <chThdCreateStatic>
 8005116:	2320      	movs	r3, #32
 8005118:	6020      	str	r0, [r4, #0]
 800511a:	f383 8811 	msr	BASEPRI, r3
 800511e:	2502      	movs	r5, #2
 8005120:	4c24      	ldr	r4, [pc, #144]	; (80051b4 <sem1_execute+0x164>)
 8005122:	e002      	b.n	800512a <sem1_execute+0xda>
 8005124:	2d01      	cmp	r5, #1
 8005126:	d00e      	beq.n	8005146 <sem1_execute+0xf6>
 8005128:	2501      	movs	r5, #1
 800512a:	68a3      	ldr	r3, [r4, #8]
 800512c:	3301      	adds	r3, #1
 800512e:	2b00      	cmp	r3, #0
 8005130:	60a3      	str	r3, [r4, #8]
 8005132:	dcf7      	bgt.n	8005124 <sem1_execute+0xd4>
 8005134:	6820      	ldr	r0, [r4, #0]
 8005136:	6803      	ldr	r3, [r0, #0]
 8005138:	6023      	str	r3, [r4, #0]
 800513a:	605c      	str	r4, [r3, #4]
 800513c:	f7fb fdd0 	bl	8000ce0 <chSchReadyI>
 8005140:	2d01      	cmp	r5, #1
 8005142:	6206      	str	r6, [r0, #32]
 8005144:	d1f0      	bne.n	8005128 <sem1_execute+0xd8>
 8005146:	f7fc fa13 	bl	8001570 <chSchRescheduleS>
 800514a:	2500      	movs	r5, #0
 800514c:	f385 8811 	msr	BASEPRI, r5
 8005150:	f7fe fcbe 	bl	8003ad0 <test_wait_threads>
 8005154:	2320      	movs	r3, #32
 8005156:	f383 8811 	msr	BASEPRI, r3
 800515a:	68a1      	ldr	r1, [r4, #8]
 800515c:	f1a1 0101 	sub.w	r1, r1, #1
 8005160:	fab1 f181 	clz	r1, r1
 8005164:	2002      	movs	r0, #2
 8005166:	0949      	lsrs	r1, r1, #5
 8005168:	f7fb fb22 	bl	80007b0 <_test_assert>
 800516c:	b918      	cbnz	r0, 8005176 <sem1_execute+0x126>
 800516e:	f380 8811 	msr	BASEPRI, r0
 8005172:	b003      	add	sp, #12
 8005174:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005176:	f385 8811 	msr	BASEPRI, r5
 800517a:	b003      	add	sp, #12
 800517c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800517e:	bf00      	nop
 8005180:	20000930 	.word	0x20000930
 8005184:	08005e90 	.word	0x08005e90
 8005188:	080039f1 	.word	0x080039f1
 800518c:	20000b38 	.word	0x20000b38
 8005190:	200011cc 	.word	0x200011cc
 8005194:	08005e80 	.word	0x08005e80
 8005198:	20000c80 	.word	0x20000c80
 800519c:	08005e84 	.word	0x08005e84
 80051a0:	20000dc8 	.word	0x20000dc8
 80051a4:	08005e88 	.word	0x08005e88
 80051a8:	20000f10 	.word	0x20000f10
 80051ac:	080060c4 	.word	0x080060c4
 80051b0:	20001058 	.word	0x20001058
 80051b4:	200008ac 	.word	0x200008ac
 80051b8:	080060c0 	.word	0x080060c0
 80051bc:	00000000 	.word	0x00000000

080051c0 <thd2_execute>:
 80051c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80051c4:	4d41      	ldr	r5, [pc, #260]	; (80052cc <thd2_execute+0x10c>)
 80051c6:	4f42      	ldr	r7, [pc, #264]	; (80052d0 <thd2_execute+0x110>)
 80051c8:	69ab      	ldr	r3, [r5, #24]
 80051ca:	4c42      	ldr	r4, [pc, #264]	; (80052d4 <thd2_execute+0x114>)
 80051cc:	689a      	ldr	r2, [r3, #8]
 80051ce:	4b42      	ldr	r3, [pc, #264]	; (80052d8 <thd2_execute+0x118>)
 80051d0:	4e42      	ldr	r6, [pc, #264]	; (80052dc <thd2_execute+0x11c>)
 80051d2:	b082      	sub	sp, #8
 80051d4:	3a04      	subs	r2, #4
 80051d6:	9300      	str	r3, [sp, #0]
 80051d8:	f504 70a4 	add.w	r0, r4, #328	; 0x148
 80051dc:	463b      	mov	r3, r7
 80051de:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80051e2:	f7fc fbd5 	bl	8001990 <chThdCreateStatic>
 80051e6:	69ab      	ldr	r3, [r5, #24]
 80051e8:	493d      	ldr	r1, [pc, #244]	; (80052e0 <thd2_execute+0x120>)
 80051ea:	689a      	ldr	r2, [r3, #8]
 80051ec:	6070      	str	r0, [r6, #4]
 80051ee:	463b      	mov	r3, r7
 80051f0:	9100      	str	r1, [sp, #0]
 80051f2:	3a05      	subs	r2, #5
 80051f4:	4620      	mov	r0, r4
 80051f6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80051fa:	f7fc fbc9 	bl	8001990 <chThdCreateStatic>
 80051fe:	69ab      	ldr	r3, [r5, #24]
 8005200:	4938      	ldr	r1, [pc, #224]	; (80052e4 <thd2_execute+0x124>)
 8005202:	689a      	ldr	r2, [r3, #8]
 8005204:	6030      	str	r0, [r6, #0]
 8005206:	463b      	mov	r3, r7
 8005208:	9100      	str	r1, [sp, #0]
 800520a:	3a01      	subs	r2, #1
 800520c:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8005210:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005214:	f7fc fbbc 	bl	8001990 <chThdCreateStatic>
 8005218:	69ab      	ldr	r3, [r5, #24]
 800521a:	4933      	ldr	r1, [pc, #204]	; (80052e8 <thd2_execute+0x128>)
 800521c:	689a      	ldr	r2, [r3, #8]
 800521e:	6130      	str	r0, [r6, #16]
 8005220:	9100      	str	r1, [sp, #0]
 8005222:	3a02      	subs	r2, #2
 8005224:	463b      	mov	r3, r7
 8005226:	f504 7076 	add.w	r0, r4, #984	; 0x3d8
 800522a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800522e:	f7fc fbaf 	bl	8001990 <chThdCreateStatic>
 8005232:	2220      	movs	r2, #32
 8005234:	60f0      	str	r0, [r6, #12]
 8005236:	f382 8811 	msr	BASEPRI, r2
 800523a:	e9d5 1305 	ldrd	r1, r3, [r5, #20]
 800523e:	689b      	ldr	r3, [r3, #8]
 8005240:	f8c4 73b4 	str.w	r7, [r4, #948]	; 0x3b4
 8005244:	3b03      	subs	r3, #3
 8005246:	f504 776d 	add.w	r7, r4, #948	; 0x3b4
 800524a:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 800524e:	f8c4 32cc 	str.w	r3, [r4, #716]	; 0x2cc
 8005252:	f8c4 729c 	str.w	r7, [r4, #668]	; 0x29c
 8005256:	f504 7324 	add.w	r3, r4, #656	; 0x290
 800525a:	2700      	movs	r7, #0
 800525c:	f8df e090 	ldr.w	lr, [pc, #144]	; 80052f0 <thd2_execute+0x130>
 8005260:	f8df c090 	ldr.w	ip, [pc, #144]	; 80052f4 <thd2_execute+0x134>
 8005264:	f8c4 12a4 	str.w	r1, [r4, #676]	; 0x2a4
 8005268:	2002      	movs	r0, #2
 800526a:	f04f 0801 	mov.w	r8, #1
 800526e:	f8a4 02ac 	strh.w	r0, [r4, #684]	; 0x2ac
 8005272:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
 8005276:	f8c4 e3b8 	str.w	lr, [r4, #952]	; 0x3b8
 800527a:	f8c4 c3d4 	str.w	ip, [r4, #980]	; 0x3d4
 800527e:	f504 702d 	add.w	r0, r4, #692	; 0x2b4
 8005282:	f8c4 72c8 	str.w	r7, [r4, #712]	; 0x2c8
 8005286:	f8c4 72c4 	str.w	r7, [r4, #708]	; 0x2c4
 800528a:	f8c4 72a8 	str.w	r7, [r4, #680]	; 0x2a8
 800528e:	f884 82ae 	strb.w	r8, [r4, #686]	; 0x2ae
 8005292:	610b      	str	r3, [r1, #16]
 8005294:	f504 712e 	add.w	r1, r4, #696	; 0x2b8
 8005298:	616b      	str	r3, [r5, #20]
 800529a:	60b3      	str	r3, [r6, #8]
 800529c:	f8c4 02b4 	str.w	r0, [r4, #692]	; 0x2b4
 80052a0:	f8c4 12b8 	str.w	r1, [r4, #696]	; 0x2b8
 80052a4:	f8c4 12bc 	str.w	r1, [r4, #700]	; 0x2bc
 80052a8:	f387 8811 	msr	BASEPRI, r7
 80052ac:	68b0      	ldr	r0, [r6, #8]
 80052ae:	f382 8811 	msr	BASEPRI, r2
 80052b2:	f7fb fd15 	bl	8000ce0 <chSchReadyI>
 80052b6:	f387 8811 	msr	BASEPRI, r7
 80052ba:	f7fe fc09 	bl	8003ad0 <test_wait_threads>
 80052be:	490b      	ldr	r1, [pc, #44]	; (80052ec <thd2_execute+0x12c>)
 80052c0:	4640      	mov	r0, r8
 80052c2:	b002      	add	sp, #8
 80052c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80052c8:	f7fb ba4a 	b.w	8000760 <_test_assert_sequence>
 80052cc:	20000930 	.word	0x20000930
 80052d0:	08000831 	.word	0x08000831
 80052d4:	20000b38 	.word	0x20000b38
 80052d8:	08005e88 	.word	0x08005e88
 80052dc:	200011cc 	.word	0x200011cc
 80052e0:	080060c4 	.word	0x080060c4
 80052e4:	08005e90 	.word	0x08005e90
 80052e8:	08005e80 	.word	0x08005e80
 80052ec:	080060c0 	.word	0x080060c0
 80052f0:	08005e84 	.word	0x08005e84
 80052f4:	08000211 	.word	0x08000211
	...

08005300 <thd1_execute>:
 8005300:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005302:	4f27      	ldr	r7, [pc, #156]	; (80053a0 <thd1_execute+0xa0>)
 8005304:	4e27      	ldr	r6, [pc, #156]	; (80053a4 <thd1_execute+0xa4>)
 8005306:	69bb      	ldr	r3, [r7, #24]
 8005308:	4d27      	ldr	r5, [pc, #156]	; (80053a8 <thd1_execute+0xa8>)
 800530a:	689a      	ldr	r2, [r3, #8]
 800530c:	4b27      	ldr	r3, [pc, #156]	; (80053ac <thd1_execute+0xac>)
 800530e:	4c28      	ldr	r4, [pc, #160]	; (80053b0 <thd1_execute+0xb0>)
 8005310:	b083      	sub	sp, #12
 8005312:	3a05      	subs	r2, #5
 8005314:	9300      	str	r3, [sp, #0]
 8005316:	4628      	mov	r0, r5
 8005318:	4633      	mov	r3, r6
 800531a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800531e:	f7fc fb37 	bl	8001990 <chThdCreateStatic>
 8005322:	69bb      	ldr	r3, [r7, #24]
 8005324:	4923      	ldr	r1, [pc, #140]	; (80053b4 <thd1_execute+0xb4>)
 8005326:	689a      	ldr	r2, [r3, #8]
 8005328:	6020      	str	r0, [r4, #0]
 800532a:	4633      	mov	r3, r6
 800532c:	9100      	str	r1, [sp, #0]
 800532e:	3a04      	subs	r2, #4
 8005330:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8005334:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005338:	f7fc fb2a 	bl	8001990 <chThdCreateStatic>
 800533c:	69bb      	ldr	r3, [r7, #24]
 800533e:	491e      	ldr	r1, [pc, #120]	; (80053b8 <thd1_execute+0xb8>)
 8005340:	689a      	ldr	r2, [r3, #8]
 8005342:	6060      	str	r0, [r4, #4]
 8005344:	4633      	mov	r3, r6
 8005346:	9100      	str	r1, [sp, #0]
 8005348:	3a03      	subs	r2, #3
 800534a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 800534e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005352:	f7fc fb1d 	bl	8001990 <chThdCreateStatic>
 8005356:	69bb      	ldr	r3, [r7, #24]
 8005358:	4918      	ldr	r1, [pc, #96]	; (80053bc <thd1_execute+0xbc>)
 800535a:	689a      	ldr	r2, [r3, #8]
 800535c:	60a0      	str	r0, [r4, #8]
 800535e:	4633      	mov	r3, r6
 8005360:	9100      	str	r1, [sp, #0]
 8005362:	3a02      	subs	r2, #2
 8005364:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8005368:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800536c:	f7fc fb10 	bl	8001990 <chThdCreateStatic>
 8005370:	69bb      	ldr	r3, [r7, #24]
 8005372:	4913      	ldr	r1, [pc, #76]	; (80053c0 <thd1_execute+0xc0>)
 8005374:	689a      	ldr	r2, [r3, #8]
 8005376:	60e0      	str	r0, [r4, #12]
 8005378:	3a01      	subs	r2, #1
 800537a:	4633      	mov	r3, r6
 800537c:	9100      	str	r1, [sp, #0]
 800537e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8005382:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005386:	f7fc fb03 	bl	8001990 <chThdCreateStatic>
 800538a:	6120      	str	r0, [r4, #16]
 800538c:	f7fe fba0 	bl	8003ad0 <test_wait_threads>
 8005390:	490c      	ldr	r1, [pc, #48]	; (80053c4 <thd1_execute+0xc4>)
 8005392:	2001      	movs	r0, #1
 8005394:	b003      	add	sp, #12
 8005396:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800539a:	f7fb b9e1 	b.w	8000760 <_test_assert_sequence>
 800539e:	bf00      	nop
 80053a0:	20000930 	.word	0x20000930
 80053a4:	08000831 	.word	0x08000831
 80053a8:	20000b38 	.word	0x20000b38
 80053ac:	080060c4 	.word	0x080060c4
 80053b0:	200011cc 	.word	0x200011cc
 80053b4:	08005e88 	.word	0x08005e88
 80053b8:	08005e84 	.word	0x08005e84
 80053bc:	08005e80 	.word	0x08005e80
 80053c0:	08005e90 	.word	0x08005e90
 80053c4:	080060c0 	.word	0x080060c0
	...

080053d0 <main>:
 80053d0:	4bc0      	ldr	r3, [pc, #768]	; (80056d4 <main+0x304>)
 80053d2:	48c1      	ldr	r0, [pc, #772]	; (80056d8 <main+0x308>)
 80053d4:	6919      	ldr	r1, [r3, #16]
 80053d6:	2200      	movs	r2, #0
 80053d8:	f461 4100 	orn	r1, r1, #32768	; 0x8000
 80053dc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80053e0:	6119      	str	r1, [r3, #16]
 80053e2:	611a      	str	r2, [r3, #16]
 80053e4:	6999      	ldr	r1, [r3, #24]
 80053e6:	f061 5180 	orn	r1, r1, #268435456	; 0x10000000
 80053ea:	6199      	str	r1, [r3, #24]
 80053ec:	619a      	str	r2, [r3, #24]
 80053ee:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80053f2:	695c      	ldr	r4, [r3, #20]
 80053f4:	6159      	str	r1, [r3, #20]
 80053f6:	615a      	str	r2, [r3, #20]
 80053f8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80053fa:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80053fe:	625a      	str	r2, [r3, #36]	; 0x24
 8005400:	6802      	ldr	r2, [r0, #0]
 8005402:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005406:	6002      	str	r2, [r0, #0]
 8005408:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800540a:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 800540e:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8005412:	b08d      	sub	sp, #52	; 0x34
 8005414:	d007      	beq.n	8005426 <main+0x56>
 8005416:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005418:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800541c:	635a      	str	r2, [r3, #52]	; 0x34
 800541e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005420:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8005424:	635a      	str	r2, [r3, #52]	; 0x34
 8005426:	4bab      	ldr	r3, [pc, #684]	; (80056d4 <main+0x304>)
 8005428:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800542a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800542e:	635a      	str	r2, [r3, #52]	; 0x34
 8005430:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005432:	0591      	lsls	r1, r2, #22
 8005434:	d5fc      	bpl.n	8005430 <main+0x60>
 8005436:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005438:	0252      	lsls	r2, r2, #9
 800543a:	d407      	bmi.n	800544c <main+0x7c>
 800543c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800543e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8005442:	635a      	str	r2, [r3, #52]	; 0x34
 8005444:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005446:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800544a:	635a      	str	r2, [r3, #52]	; 0x34
 800544c:	4ea1      	ldr	r6, [pc, #644]	; (80056d4 <main+0x304>)
 800544e:	f8df c2c8 	ldr.w	ip, [pc, #712]	; 8005718 <main+0x348>
 8005452:	69f2      	ldr	r2, [r6, #28]
 8005454:	f8df 92c4 	ldr.w	r9, [pc, #708]	; 800571c <main+0x34c>
 8005458:	4fa0      	ldr	r7, [pc, #640]	; (80056dc <main+0x30c>)
 800545a:	f8df 82c4 	ldr.w	r8, [pc, #708]	; 8005720 <main+0x350>
 800545e:	4da0      	ldr	r5, [pc, #640]	; (80056e0 <main+0x310>)
 8005460:	48a0      	ldr	r0, [pc, #640]	; (80056e4 <main+0x314>)
 8005462:	49a1      	ldr	r1, [pc, #644]	; (80056e8 <main+0x318>)
 8005464:	4ba1      	ldr	r3, [pc, #644]	; (80056ec <main+0x31c>)
 8005466:	f8df e2bc 	ldr.w	lr, [pc, #700]	; 8005724 <main+0x354>
 800546a:	f042 023f 	orr.w	r2, r2, #63	; 0x3f
 800546e:	61f2      	str	r2, [r6, #28]
 8005470:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 8005472:	f042 023f 	orr.w	r2, r2, #63	; 0x3f
 8005476:	62b2      	str	r2, [r6, #40]	; 0x28
 8005478:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 800547a:	f042 023f 	orr.w	r2, r2, #63	; 0x3f
 800547e:	2400      	movs	r4, #0
 8005480:	62b2      	str	r2, [r6, #40]	; 0x28
 8005482:	f04f 427c 	mov.w	r2, #4227858432	; 0xfc000000
 8005486:	f8cc 4004 	str.w	r4, [ip, #4]
 800548a:	f8cc 2008 	str.w	r2, [ip, #8]
 800548e:	f8cc 900c 	str.w	r9, [ip, #12]
 8005492:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005496:	f04f 4928 	mov.w	r9, #2818572288	; 0xa8000000
 800549a:	f8cc 2014 	str.w	r2, [ip, #20]
 800549e:	f8cc 4020 	str.w	r4, [ip, #32]
 80054a2:	f8cc 4024 	str.w	r4, [ip, #36]	; 0x24
 80054a6:	f8cc 9000 	str.w	r9, [ip]
 80054aa:	f24f 39f0 	movw	r9, #62448	; 0xf3f0
 80054ae:	607c      	str	r4, [r7, #4]
 80054b0:	f8c7 9008 	str.w	r9, [r7, #8]
 80054b4:	f8c7 800c 	str.w	r8, [r7, #12]
 80054b8:	f64f 783f 	movw	r8, #65343	; 0xff3f
 80054bc:	f8c7 8014 	str.w	r8, [r7, #20]
 80054c0:	f44f 48a5 	mov.w	r8, #21120	; 0x5280
 80054c4:	623c      	str	r4, [r7, #32]
 80054c6:	f8df c22c 	ldr.w	ip, [pc, #556]	; 80056f4 <main+0x324>
 80054ca:	627c      	str	r4, [r7, #36]	; 0x24
 80054cc:	f8c7 8000 	str.w	r8, [r7]
 80054d0:	f04f 3755 	mov.w	r7, #1431655765	; 0x55555555
 80054d4:	f04f 4870 	mov.w	r8, #4026531840	; 0xf0000000
 80054d8:	606c      	str	r4, [r5, #4]
 80054da:	f8c5 8008 	str.w	r8, [r5, #8]
 80054de:	f8c5 e00c 	str.w	lr, [r5, #12]
 80054e2:	f04f 080f 	mov.w	r8, #15
 80054e6:	616a      	str	r2, [r5, #20]
 80054e8:	f8df e23c 	ldr.w	lr, [pc, #572]	; 8005728 <main+0x358>
 80054ec:	622c      	str	r4, [r5, #32]
 80054ee:	626c      	str	r4, [r5, #36]	; 0x24
 80054f0:	602c      	str	r4, [r5, #0]
 80054f2:	6044      	str	r4, [r0, #4]
 80054f4:	4d7e      	ldr	r5, [pc, #504]	; (80056f0 <main+0x320>)
 80054f6:	6084      	str	r4, [r0, #8]
 80054f8:	60c7      	str	r7, [r0, #12]
 80054fa:	6142      	str	r2, [r0, #20]
 80054fc:	6204      	str	r4, [r0, #32]
 80054fe:	6244      	str	r4, [r0, #36]	; 0x24
 8005500:	6004      	str	r4, [r0, #0]
 8005502:	487c      	ldr	r0, [pc, #496]	; (80056f4 <main+0x324>)
 8005504:	604c      	str	r4, [r1, #4]
 8005506:	608c      	str	r4, [r1, #8]
 8005508:	60cf      	str	r7, [r1, #12]
 800550a:	614a      	str	r2, [r1, #20]
 800550c:	620c      	str	r4, [r1, #32]
 800550e:	624c      	str	r4, [r1, #36]	; 0x24
 8005510:	600c      	str	r4, [r1, #0]
 8005512:	605c      	str	r4, [r3, #4]
 8005514:	f8c3 8008 	str.w	r8, [r3, #8]
 8005518:	f8c3 e00c 	str.w	lr, [r3, #12]
 800551c:	615a      	str	r2, [r3, #20]
 800551e:	621c      	str	r4, [r3, #32]
 8005520:	625c      	str	r4, [r3, #36]	; 0x24
 8005522:	601c      	str	r4, [r3, #0]
 8005524:	f84c 5b04 	str.w	r5, [ip], #4
 8005528:	f04f 0b01 	mov.w	fp, #1
 800552c:	f100 0364 	add.w	r3, r0, #100	; 0x64
 8005530:	f100 0154 	add.w	r1, r0, #84	; 0x54
 8005534:	f100 070c 	add.w	r7, r0, #12
 8005538:	f100 0530 	add.w	r5, r0, #48	; 0x30
 800553c:	f04f 0810 	mov.w	r8, #16
 8005540:	6144      	str	r4, [r0, #20]
 8005542:	6284      	str	r4, [r0, #40]	; 0x28
 8005544:	f8c0 c004 	str.w	ip, [r0, #4]
 8005548:	e9c0 7703 	strd	r7, r7, [r0, #12]
 800554c:	6181      	str	r1, [r0, #24]
 800554e:	e9c0 1108 	strd	r1, r1, [r0, #32]
 8005552:	61c3      	str	r3, [r0, #28]
 8005554:	63c3      	str	r3, [r0, #60]	; 0x3c
 8005556:	6483      	str	r3, [r0, #72]	; 0x48
 8005558:	f880 b008 	strb.w	fp, [r0, #8]
 800555c:	e9c0 550c 	strd	r5, r5, [r0, #48]	; 0x30
 8005560:	f8c0 8038 	str.w	r8, [r0, #56]	; 0x38
 8005564:	62c0      	str	r0, [r0, #44]	; 0x2c
 8005566:	6443      	str	r3, [r0, #68]	; 0x44
 8005568:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800556a:	f8df c1c0 	ldr.w	ip, [pc, #448]	; 800572c <main+0x35c>
 800556e:	6500      	str	r0, [r0, #80]	; 0x50
 8005570:	ea43 030b 	orr.w	r3, r3, fp
 8005574:	6273      	str	r3, [r6, #36]	; 0x24
 8005576:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800557a:	495f      	ldr	r1, [pc, #380]	; (80056f8 <main+0x328>)
 800557c:	4f5f      	ldr	r7, [pc, #380]	; (80056fc <main+0x32c>)
 800557e:	4d60      	ldr	r5, [pc, #384]	; (8005700 <main+0x330>)
 8005580:	f8df e1ac 	ldr.w	lr, [pc, #428]	; 8005730 <main+0x360>
 8005584:	ea43 030b 	orr.w	r3, r3, fp
 8005588:	f8cc 3008 	str.w	r3, [ip, #8]
 800558c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8005590:	4602      	mov	r2, r0
 8005592:	f647 4cff 	movw	ip, #31999	; 0x7cff
 8005596:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800559a:	f8c3 c028 	str.w	ip, [r3, #40]	; 0x28
 800559e:	62d8      	str	r0, [r3, #44]	; 0x2c
 80055a0:	f04f 0c80 	mov.w	ip, #128	; 0x80
 80055a4:	619c      	str	r4, [r3, #24]
 80055a6:	635c      	str	r4, [r3, #52]	; 0x34
 80055a8:	60dc      	str	r4, [r3, #12]
 80055aa:	605c      	str	r4, [r3, #4]
 80055ac:	f8c3 b014 	str.w	fp, [r3, #20]
 80055b0:	f8c3 b000 	str.w	fp, [r3]
 80055b4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80055b8:	f887 c31c 	strb.w	ip, [r7, #796]	; 0x31c
 80055bc:	f8c7 3180 	str.w	r3, [r7, #384]	; 0x180
 80055c0:	603b      	str	r3, [r7, #0]
 80055c2:	608c      	str	r4, [r1, #8]
 80055c4:	68cb      	ldr	r3, [r1, #12]
 80055c6:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
 80055ca:	ea03 030c 	and.w	r3, r3, ip
 80055ce:	431d      	orrs	r5, r3
 80055d0:	60cd      	str	r5, [r1, #12]
 80055d2:	f8de 300c 	ldr.w	r3, [lr, #12]
 80055d6:	f8df c15c 	ldr.w	ip, [pc, #348]	; 8005734 <main+0x364>
 80055da:	4d4a      	ldr	r5, [pc, #296]	; (8005704 <main+0x334>)
 80055dc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80055e0:	f8ce 300c 	str.w	r3, [lr, #12]
 80055e4:	f8dc 3000 	ldr.w	r3, [ip]
 80055e8:	f8df e14c 	ldr.w	lr, [pc, #332]	; 8005738 <main+0x368>
 80055ec:	f8c2 e04c 	str.w	lr, [r2, #76]	; 0x4c
 80055f0:	ea43 030b 	orr.w	r3, r3, fp
 80055f4:	f8cc 3000 	str.w	r3, [ip]
 80055f8:	f102 0e74 	add.w	lr, r2, #116	; 0x74
 80055fc:	f8df c13c 	ldr.w	ip, [pc, #316]	; 800573c <main+0x36c>
 8005600:	f881 801f 	strb.w	r8, [r1, #31]
 8005604:	f04f 0a20 	mov.w	sl, #32
 8005608:	f881 a022 	strb.w	sl, [r1, #34]	; 0x22
 800560c:	f8c2 e040 	str.w	lr, [r2, #64]	; 0x40
 8005610:	f8c2 c074 	str.w	ip, [r2, #116]	; 0x74
 8005614:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005618:	f105 031c 	add.w	r3, r5, #28
 800561c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005620:	a806      	add	r0, sp, #24
 8005622:	60ac      	str	r4, [r5, #8]
 8005624:	e9c5 5500 	strd	r5, r5, [r5]
 8005628:	f04f 0800 	mov.w	r8, #0
 800562c:	e9c5 5504 	strd	r5, r5, [r5, #16]
 8005630:	f04f 0900 	mov.w	r9, #0
 8005634:	626a      	str	r2, [r5, #36]	; 0x24
 8005636:	e9c5 3307 	strd	r3, r3, [r5, #28]
 800563a:	9106      	str	r1, [sp, #24]
 800563c:	672c      	str	r4, [r5, #112]	; 0x70
 800563e:	e9cd 4407 	strd	r4, r4, [sp, #28]
 8005642:	9409      	str	r4, [sp, #36]	; 0x24
 8005644:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
 8005648:	f7fa fdf2 	bl	8000230 <chTMStartMeasurementX.constprop.56>
 800564c:	a806      	add	r0, sp, #24
 800564e:	f7fb fae7 	bl	8000c20 <chTMStopMeasurementX>
 8005652:	4a2d      	ldr	r2, [pc, #180]	; (8005708 <main+0x338>)
 8005654:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8005658:	9b08      	ldr	r3, [sp, #32]
 800565a:	672b      	str	r3, [r5, #112]	; 0x70
 800565c:	f102 0e10 	add.w	lr, r2, #16
 8005660:	f105 032c 	add.w	r3, r5, #44	; 0x2c
 8005664:	e9c2 ee04 	strd	lr, lr, [r2, #16]
 8005668:	f04f 0e40 	mov.w	lr, #64	; 0x40
 800566c:	f8c5 c040 	str.w	ip, [r5, #64]	; 0x40
 8005670:	f8c5 e034 	str.w	lr, [r5, #52]	; 0x34
 8005674:	f8c5 e068 	str.w	lr, [r5, #104]	; 0x68
 8005678:	f885 4049 	strb.w	r4, [r5, #73]	; 0x49
 800567c:	e9c5 4418 	strd	r4, r4, [r5, #96]	; 0x60
 8005680:	f885 b04a 	strb.w	fp, [r5, #74]	; 0x4a
 8005684:	646c      	str	r4, [r5, #68]	; 0x44
 8005686:	63ed      	str	r5, [r5, #60]	; 0x3c
 8005688:	6194      	str	r4, [r2, #24]
 800568a:	4820      	ldr	r0, [pc, #128]	; (800570c <main+0x33c>)
 800568c:	f8cc 3010 	str.w	r3, [ip, #16]
 8005690:	491f      	ldr	r1, [pc, #124]	; (8005710 <main+0x340>)
 8005692:	f8df e0ac 	ldr.w	lr, [pc, #172]	; 8005740 <main+0x370>
 8005696:	f8df c0ac 	ldr.w	ip, [pc, #172]	; 8005744 <main+0x374>
 800569a:	f885 b048 	strb.w	fp, [r5, #72]	; 0x48
 800569e:	e9c5 3305 	strd	r3, r3, [r5, #20]
 80056a2:	f105 0350 	add.w	r3, r5, #80	; 0x50
 80056a6:	652b      	str	r3, [r5, #80]	; 0x50
 80056a8:	4b1a      	ldr	r3, [pc, #104]	; (8005714 <main+0x344>)
 80056aa:	6013      	str	r3, [r2, #0]
 80056ac:	f020 0007 	bic.w	r0, r0, #7
 80056b0:	f021 0107 	bic.w	r1, r1, #7
 80056b4:	f105 0354 	add.w	r3, r5, #84	; 0x54
 80056b8:	e9c2 4402 	strd	r4, r4, [r2, #8]
 80056bc:	e9c5 3315 	strd	r3, r3, [r5, #84]	; 0x54
 80056c0:	f8ce 0000 	str.w	r0, [lr]
 80056c4:	f8cc 1000 	str.w	r1, [ip]
 80056c8:	f384 8811 	msr	BASEPRI, r4
 80056cc:	b662      	cpsie	i
 80056ce:	69ab      	ldr	r3, [r5, #24]
 80056d0:	e03a      	b.n	8005748 <main+0x378>
 80056d2:	bf00      	nop
 80056d4:	40023800 	.word	0x40023800
 80056d8:	40007000 	.word	0x40007000
 80056dc:	40020400 	.word	0x40020400
 80056e0:	40020800 	.word	0x40020800
 80056e4:	40020c00 	.word	0x40020c00
 80056e8:	40021000 	.word	0x40021000
 80056ec:	40021400 	.word	0x40021400
 80056f0:	080069c0 	.word	0x080069c0
 80056f4:	200008b8 	.word	0x200008b8
 80056f8:	e000ed00 	.word	0xe000ed00
 80056fc:	e000e100 	.word	0xe000e100
 8005700:	05fa0300 	.word	0x05fa0300
 8005704:	20000930 	.word	0x20000930
 8005708:	20000a88 	.word	0x20000a88
 800570c:	200014c7 	.word	0x200014c7
 8005710:	20004000 	.word	0x20004000
 8005714:	08000321 	.word	0x08000321
 8005718:	40020000 	.word	0x40020000
 800571c:	65555554 	.word	0x65555554
 8005720:	55550505 	.word	0x55550505
 8005724:	05555555 	.word	0x05555555
 8005728:	55555550 	.word	0x55555550
 800572c:	e0042000 	.word	0xe0042000
 8005730:	e000edf0 	.word	0xe000edf0
 8005734:	e0001000 	.word	0xe0001000
 8005738:	08000361 	.word	0x08000361
 800573c:	40013800 	.word	0x40013800
 8005740:	20000b24 	.word	0x20000b24
 8005744:	20000aa8 	.word	0x20000aa8
 8005748:	4a29      	ldr	r2, [pc, #164]	; (80057f0 <main+0x420>)
 800574a:	619a      	str	r2, [r3, #24]
 800574c:	f105 0078 	add.w	r0, r5, #120	; 0x78
 8005750:	465a      	mov	r2, fp
 8005752:	9400      	str	r4, [sp, #0]
 8005754:	4b27      	ldr	r3, [pc, #156]	; (80057f4 <main+0x424>)
 8005756:	21d8      	movs	r1, #216	; 0xd8
 8005758:	f7fc f91a 	bl	8001990 <chThdCreateStatic>
 800575c:	4b26      	ldr	r3, [pc, #152]	; (80057f8 <main+0x428>)
 800575e:	6183      	str	r3, [r0, #24]
 8005760:	f38a 8811 	msr	BASEPRI, sl
 8005764:	4925      	ldr	r1, [pc, #148]	; (80057fc <main+0x42c>)
 8005766:	7a0b      	ldrb	r3, [r1, #8]
 8005768:	455b      	cmp	r3, fp
 800576a:	d10a      	bne.n	8005782 <main+0x3b2>
 800576c:	6a33      	ldr	r3, [r6, #32]
 800576e:	22c0      	movs	r2, #192	; 0xc0
 8005770:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005774:	6233      	str	r3, [r6, #32]
 8005776:	f887 2325 	strb.w	r2, [r7, #805]	; 0x325
 800577a:	f8c7 a184 	str.w	sl, [r7, #388]	; 0x184
 800577e:	f8c7 a004 	str.w	sl, [r7, #4]
 8005782:	4b1e      	ldr	r3, [pc, #120]	; (80057fc <main+0x42c>)
 8005784:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005786:	f240 3241 	movw	r2, #833	; 0x341
 800578a:	811a      	strh	r2, [r3, #8]
 800578c:	2001      	movs	r0, #1
 800578e:	f244 0240 	movw	r2, #16448	; 0x4040
 8005792:	f242 112c 	movw	r1, #8492	; 0x212c
 8005796:	2400      	movs	r4, #0
 8005798:	821a      	strh	r2, [r3, #16]
 800579a:	8298      	strh	r0, [r3, #20]
 800579c:	8199      	strh	r1, [r3, #12]
 800579e:	801c      	strh	r4, [r3, #0]
 80057a0:	8819      	ldrh	r1, [r3, #0]
 80057a2:	889b      	ldrh	r3, [r3, #4]
 80057a4:	4b15      	ldr	r3, [pc, #84]	; (80057fc <main+0x42c>)
 80057a6:	2202      	movs	r2, #2
 80057a8:	721a      	strb	r2, [r3, #8]
 80057aa:	f384 8811 	msr	BASEPRI, r4
 80057ae:	f44f 7000 	mov.w	r0, #512	; 0x200
 80057b2:	f7fa fd55 	bl	8000260 <_pal_lld_setgroupmode.constprop.5>
 80057b6:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80057ba:	f7fa fd51 	bl	8000260 <_pal_lld_setgroupmode.constprop.5>
 80057be:	9400      	str	r4, [sp, #0]
 80057c0:	4b0f      	ldr	r3, [pc, #60]	; (8005800 <main+0x430>)
 80057c2:	4810      	ldr	r0, [pc, #64]	; (8005804 <main+0x434>)
 80057c4:	f8df 8048 	ldr.w	r8, [pc, #72]	; 8005810 <main+0x440>
 80057c8:	f8df 9048 	ldr.w	r9, [pc, #72]	; 8005814 <main+0x444>
 80057cc:	f8df a048 	ldr.w	sl, [pc, #72]	; 8005818 <main+0x448>
 80057d0:	f8df b048 	ldr.w	fp, [pc, #72]	; 800581c <main+0x44c>
 80057d4:	2241      	movs	r2, #65	; 0x41
 80057d6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80057da:	f7fc f8d9 	bl	8001990 <chThdCreateStatic>
 80057de:	9400      	str	r4, [sp, #0]
 80057e0:	4b09      	ldr	r3, [pc, #36]	; (8005808 <main+0x438>)
 80057e2:	480a      	ldr	r0, [pc, #40]	; (800580c <main+0x43c>)
 80057e4:	2241      	movs	r2, #65	; 0x41
 80057e6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80057ea:	f7fc f8d1 	bl	8001990 <chThdCreateStatic>
 80057ee:	e01b      	b.n	8005828 <main+0x458>
 80057f0:	08005e50 	.word	0x08005e50
 80057f4:	08000311 	.word	0x08000311
 80057f8:	08005fa0 	.word	0x08005fa0
 80057fc:	200008b8 	.word	0x200008b8
 8005800:	08002741 	.word	0x08002741
 8005804:	20001230 	.word	0x20001230
 8005808:	08002771 	.word	0x08002771
 800580c:	20001378 	.word	0x20001378
 8005810:	20000a80 	.word	0x20000a80
 8005814:	200011f0 	.word	0x200011f0
 8005818:	20000b04 	.word	0x20000b04
 800581c:	200011cc 	.word	0x200011cc
 8005820:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8005824:	f7fc ff7c 	bl	8002720 <chThdSleep>
 8005828:	4ba3      	ldr	r3, [pc, #652]	; (8005ab8 <main+0x6e8>)
 800582a:	691b      	ldr	r3, [r3, #16]
 800582c:	07db      	lsls	r3, r3, #31
 800582e:	d5f7      	bpl.n	8005820 <main+0x450>
 8005830:	4ba2      	ldr	r3, [pc, #648]	; (8005abc <main+0x6ec>)
 8005832:	48a3      	ldr	r0, [pc, #652]	; (8005ac0 <main+0x6f0>)
 8005834:	f8c8 3000 	str.w	r3, [r8]
 8005838:	f7fb f80a 	bl	8000850 <test_println>
 800583c:	48a1      	ldr	r0, [pc, #644]	; (8005ac4 <main+0x6f4>)
 800583e:	4ca2      	ldr	r4, [pc, #648]	; (8005ac8 <main+0x6f8>)
 8005840:	f7fb f806 	bl	8000850 <test_println>
 8005844:	48a1      	ldr	r0, [pc, #644]	; (8005acc <main+0x6fc>)
 8005846:	f7fb f803 	bl	8000850 <test_println>
 800584a:	212a      	movs	r1, #42	; 0x2a
 800584c:	f8d8 0000 	ldr.w	r0, [r8]
 8005850:	6803      	ldr	r3, [r0, #0]
 8005852:	689b      	ldr	r3, [r3, #8]
 8005854:	4798      	blx	r3
 8005856:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800585a:	2900      	cmp	r1, #0
 800585c:	d1f6      	bne.n	800584c <main+0x47c>
 800585e:	489c      	ldr	r0, [pc, #624]	; (8005ad0 <main+0x700>)
 8005860:	4c9c      	ldr	r4, [pc, #624]	; (8005ad4 <main+0x704>)
 8005862:	f7fa fff5 	bl	8000850 <test_println>
 8005866:	212a      	movs	r1, #42	; 0x2a
 8005868:	f8d8 0000 	ldr.w	r0, [r8]
 800586c:	6803      	ldr	r3, [r0, #0]
 800586e:	689b      	ldr	r3, [r3, #8]
 8005870:	4798      	blx	r3
 8005872:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005876:	2900      	cmp	r1, #0
 8005878:	d1f6      	bne.n	8005868 <main+0x498>
 800587a:	4897      	ldr	r0, [pc, #604]	; (8005ad8 <main+0x708>)
 800587c:	4c97      	ldr	r4, [pc, #604]	; (8005adc <main+0x70c>)
 800587e:	f7fa ffe7 	bl	8000850 <test_println>
 8005882:	212a      	movs	r1, #42	; 0x2a
 8005884:	f8d8 0000 	ldr.w	r0, [r8]
 8005888:	6803      	ldr	r3, [r0, #0]
 800588a:	689b      	ldr	r3, [r3, #8]
 800588c:	4798      	blx	r3
 800588e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005892:	2900      	cmp	r1, #0
 8005894:	d1f6      	bne.n	8005884 <main+0x4b4>
 8005896:	4892      	ldr	r0, [pc, #584]	; (8005ae0 <main+0x710>)
 8005898:	4c92      	ldr	r4, [pc, #584]	; (8005ae4 <main+0x714>)
 800589a:	f7fa ffd9 	bl	8000850 <test_println>
 800589e:	212a      	movs	r1, #42	; 0x2a
 80058a0:	f8d8 0000 	ldr.w	r0, [r8]
 80058a4:	6803      	ldr	r3, [r0, #0]
 80058a6:	689b      	ldr	r3, [r3, #8]
 80058a8:	4798      	blx	r3
 80058aa:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80058ae:	2900      	cmp	r1, #0
 80058b0:	d1f6      	bne.n	80058a0 <main+0x4d0>
 80058b2:	488d      	ldr	r0, [pc, #564]	; (8005ae8 <main+0x718>)
 80058b4:	4c8d      	ldr	r4, [pc, #564]	; (8005aec <main+0x71c>)
 80058b6:	f7fa ffcb 	bl	8000850 <test_println>
 80058ba:	212a      	movs	r1, #42	; 0x2a
 80058bc:	f8d8 0000 	ldr.w	r0, [r8]
 80058c0:	6803      	ldr	r3, [r0, #0]
 80058c2:	689b      	ldr	r3, [r3, #8]
 80058c4:	4798      	blx	r3
 80058c6:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80058ca:	2900      	cmp	r1, #0
 80058cc:	d1f6      	bne.n	80058bc <main+0x4ec>
 80058ce:	4888      	ldr	r0, [pc, #544]	; (8005af0 <main+0x720>)
 80058d0:	4c88      	ldr	r4, [pc, #544]	; (8005af4 <main+0x724>)
 80058d2:	f7fa ffbd 	bl	8000850 <test_println>
 80058d6:	212a      	movs	r1, #42	; 0x2a
 80058d8:	f8d8 0000 	ldr.w	r0, [r8]
 80058dc:	6803      	ldr	r3, [r0, #0]
 80058de:	689b      	ldr	r3, [r3, #8]
 80058e0:	4798      	blx	r3
 80058e2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80058e6:	2900      	cmp	r1, #0
 80058e8:	d1f6      	bne.n	80058d8 <main+0x508>
 80058ea:	4883      	ldr	r0, [pc, #524]	; (8005af8 <main+0x728>)
 80058ec:	4c83      	ldr	r4, [pc, #524]	; (8005afc <main+0x72c>)
 80058ee:	f7fa ffaf 	bl	8000850 <test_println>
 80058f2:	212a      	movs	r1, #42	; 0x2a
 80058f4:	f8d8 0000 	ldr.w	r0, [r8]
 80058f8:	6803      	ldr	r3, [r0, #0]
 80058fa:	689b      	ldr	r3, [r3, #8]
 80058fc:	4798      	blx	r3
 80058fe:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005902:	2900      	cmp	r1, #0
 8005904:	d1f6      	bne.n	80058f4 <main+0x524>
 8005906:	487e      	ldr	r0, [pc, #504]	; (8005b00 <main+0x730>)
 8005908:	4c7e      	ldr	r4, [pc, #504]	; (8005b04 <main+0x734>)
 800590a:	f7fa ffa1 	bl	8000850 <test_println>
 800590e:	212a      	movs	r1, #42	; 0x2a
 8005910:	f8d8 0000 	ldr.w	r0, [r8]
 8005914:	6803      	ldr	r3, [r0, #0]
 8005916:	689b      	ldr	r3, [r3, #8]
 8005918:	4798      	blx	r3
 800591a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800591e:	2900      	cmp	r1, #0
 8005920:	d1f6      	bne.n	8005910 <main+0x540>
 8005922:	4b79      	ldr	r3, [pc, #484]	; (8005b08 <main+0x738>)
 8005924:	4879      	ldr	r0, [pc, #484]	; (8005b0c <main+0x73c>)
 8005926:	9305      	str	r3, [sp, #20]
 8005928:	4b79      	ldr	r3, [pc, #484]	; (8005b10 <main+0x740>)
 800592a:	9103      	str	r1, [sp, #12]
 800592c:	9304      	str	r3, [sp, #16]
 800592e:	f7fa ff8f 	bl	8000850 <test_println>
 8005932:	4863      	ldr	r0, [pc, #396]	; (8005ac0 <main+0x6f0>)
 8005934:	4e77      	ldr	r6, [pc, #476]	; (8005b14 <main+0x744>)
 8005936:	f7fa ff8b 	bl	8000850 <test_println>
 800593a:	4b77      	ldr	r3, [pc, #476]	; (8005b18 <main+0x748>)
 800593c:	9903      	ldr	r1, [sp, #12]
 800593e:	7019      	strb	r1, [r3, #0]
 8005940:	4b76      	ldr	r3, [pc, #472]	; (8005b1c <main+0x74c>)
 8005942:	9a03      	ldr	r2, [sp, #12]
 8005944:	3201      	adds	r2, #1
 8005946:	9203      	str	r2, [sp, #12]
 8005948:	2500      	movs	r5, #0
 800594a:	2b00      	cmp	r3, #0
 800594c:	f000 808a 	beq.w	8005a64 <main+0x694>
 8005950:	4c73      	ldr	r4, [pc, #460]	; (8005b20 <main+0x750>)
 8005952:	f7fa feb5 	bl	80006c0 <print_line>
 8005956:	212d      	movs	r1, #45	; 0x2d
 8005958:	f8d8 0000 	ldr.w	r0, [r8]
 800595c:	6803      	ldr	r3, [r0, #0]
 800595e:	689b      	ldr	r3, [r3, #8]
 8005960:	4798      	blx	r3
 8005962:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005966:	2900      	cmp	r1, #0
 8005968:	d1f6      	bne.n	8005958 <main+0x588>
 800596a:	9803      	ldr	r0, [sp, #12]
 800596c:	4c6d      	ldr	r4, [pc, #436]	; (8005b24 <main+0x754>)
 800596e:	f7fa fe97 	bl	80006a0 <test_printn>
 8005972:	f8d8 0000 	ldr.w	r0, [r8]
 8005976:	6803      	ldr	r3, [r0, #0]
 8005978:	212e      	movs	r1, #46	; 0x2e
 800597a:	689b      	ldr	r3, [r3, #8]
 800597c:	1c6f      	adds	r7, r5, #1
 800597e:	4798      	blx	r3
 8005980:	4638      	mov	r0, r7
 8005982:	f7fa fe8d 	bl	80006a0 <test_printn>
 8005986:	2120      	movs	r1, #32
 8005988:	f8d8 0000 	ldr.w	r0, [r8]
 800598c:	6803      	ldr	r3, [r0, #0]
 800598e:	689b      	ldr	r3, [r3, #8]
 8005990:	4798      	blx	r3
 8005992:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005996:	2900      	cmp	r1, #0
 8005998:	d1f6      	bne.n	8005988 <main+0x5b8>
 800599a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800599e:	681c      	ldr	r4, [r3, #0]
 80059a0:	7821      	ldrb	r1, [r4, #0]
 80059a2:	b141      	cbz	r1, 80059b6 <main+0x5e6>
 80059a4:	f8d8 0000 	ldr.w	r0, [r8]
 80059a8:	6803      	ldr	r3, [r0, #0]
 80059aa:	689b      	ldr	r3, [r3, #8]
 80059ac:	4798      	blx	r3
 80059ae:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80059b2:	2900      	cmp	r1, #0
 80059b4:	d1f6      	bne.n	80059a4 <main+0x5d4>
 80059b6:	485c      	ldr	r0, [pc, #368]	; (8005b28 <main+0x758>)
 80059b8:	f7fa ff4a 	bl	8000850 <test_println>
 80059bc:	20c8      	movs	r0, #200	; 0xc8
 80059be:	f7fc feaf 	bl	8002720 <chThdSleep>
 80059c2:	4b5a      	ldr	r3, [pc, #360]	; (8005b2c <main+0x75c>)
 80059c4:	f8c9 3000 	str.w	r3, [r9]
 80059c8:	2300      	movs	r3, #0
 80059ca:	f856 4025 	ldr.w	r4, [r6, r5, lsl #2]
 80059ce:	f8cb 3010 	str.w	r3, [fp, #16]
 80059d2:	e9cb 3300 	strd	r3, r3, [fp]
 80059d6:	e9cb 3302 	strd	r3, r3, [fp, #8]
 80059da:	6862      	ldr	r2, [r4, #4]
 80059dc:	f88a 3000 	strb.w	r3, [sl]
 80059e0:	b102      	cbz	r2, 80059e4 <main+0x614>
 80059e2:	4790      	blx	r2
 80059e4:	68e3      	ldr	r3, [r4, #12]
 80059e6:	4798      	blx	r3
 80059e8:	68a3      	ldr	r3, [r4, #8]
 80059ea:	b103      	cbz	r3, 80059ee <main+0x61e>
 80059ec:	4798      	blx	r3
 80059ee:	f7fe f86f 	bl	8003ad0 <test_wait_threads>
 80059f2:	f89a 3000 	ldrb.w	r3, [sl]
 80059f6:	2b00      	cmp	r3, #0
 80059f8:	d03e      	beq.n	8005a78 <main+0x6a8>
 80059fa:	4c4d      	ldr	r4, [pc, #308]	; (8005b30 <main+0x760>)
 80059fc:	212d      	movs	r1, #45	; 0x2d
 80059fe:	f8d8 0000 	ldr.w	r0, [r8]
 8005a02:	6803      	ldr	r3, [r0, #0]
 8005a04:	689b      	ldr	r3, [r3, #8]
 8005a06:	4798      	blx	r3
 8005a08:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005a0c:	2900      	cmp	r1, #0
 8005a0e:	d1f6      	bne.n	80059fe <main+0x62e>
 8005a10:	4b48      	ldr	r3, [pc, #288]	; (8005b34 <main+0x764>)
 8005a12:	4c49      	ldr	r4, [pc, #292]	; (8005b38 <main+0x768>)
 8005a14:	6818      	ldr	r0, [r3, #0]
 8005a16:	f7fa fe43 	bl	80006a0 <test_printn>
 8005a1a:	2120      	movs	r1, #32
 8005a1c:	f8d8 0000 	ldr.w	r0, [r8]
 8005a20:	6803      	ldr	r3, [r0, #0]
 8005a22:	689b      	ldr	r3, [r3, #8]
 8005a24:	4798      	blx	r3
 8005a26:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005a2a:	2900      	cmp	r1, #0
 8005a2c:	d1f6      	bne.n	8005a1c <main+0x64c>
 8005a2e:	f8d9 3000 	ldr.w	r3, [r9]
 8005a32:	4a3e      	ldr	r2, [pc, #248]	; (8005b2c <main+0x75c>)
 8005a34:	4293      	cmp	r3, r2
 8005a36:	d90b      	bls.n	8005a50 <main+0x680>
 8005a38:	4614      	mov	r4, r2
 8005a3a:	f8d8 0000 	ldr.w	r0, [r8]
 8005a3e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005a42:	6803      	ldr	r3, [r0, #0]
 8005a44:	689b      	ldr	r3, [r3, #8]
 8005a46:	4798      	blx	r3
 8005a48:	f8d9 3000 	ldr.w	r3, [r9]
 8005a4c:	429c      	cmp	r4, r3
 8005a4e:	d3f4      	bcc.n	8005a3a <main+0x66a>
 8005a50:	483a      	ldr	r0, [pc, #232]	; (8005b3c <main+0x76c>)
 8005a52:	f7fa fefd 	bl	8000850 <test_println>
 8005a56:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 8005a5a:	463d      	mov	r5, r7
 8005a5c:	685b      	ldr	r3, [r3, #4]
 8005a5e:	2b00      	cmp	r3, #0
 8005a60:	f47f af76 	bne.w	8005950 <main+0x580>
 8005a64:	9e04      	ldr	r6, [sp, #16]
 8005a66:	b15e      	cbz	r6, 8005a80 <main+0x6b0>
 8005a68:	9a05      	ldr	r2, [sp, #20]
 8005a6a:	6833      	ldr	r3, [r6, #0]
 8005a6c:	4611      	mov	r1, r2
 8005a6e:	f851 2f04 	ldr.w	r2, [r1, #4]!
 8005a72:	9204      	str	r2, [sp, #16]
 8005a74:	9105      	str	r1, [sp, #20]
 8005a76:	e764      	b.n	8005942 <main+0x572>
 8005a78:	4831      	ldr	r0, [pc, #196]	; (8005b40 <main+0x770>)
 8005a7a:	f7fa fee9 	bl	8000850 <test_println>
 8005a7e:	e7ea      	b.n	8005a56 <main+0x686>
 8005a80:	f7fa fe1e 	bl	80006c0 <print_line>
 8005a84:	4c2f      	ldr	r4, [pc, #188]	; (8005b44 <main+0x774>)
 8005a86:	480e      	ldr	r0, [pc, #56]	; (8005ac0 <main+0x6f0>)
 8005a88:	f7fa fee2 	bl	8000850 <test_println>
 8005a8c:	2146      	movs	r1, #70	; 0x46
 8005a8e:	f8d8 0000 	ldr.w	r0, [r8]
 8005a92:	6803      	ldr	r3, [r0, #0]
 8005a94:	689b      	ldr	r3, [r3, #8]
 8005a96:	4798      	blx	r3
 8005a98:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005a9c:	2900      	cmp	r1, #0
 8005a9e:	d1f6      	bne.n	8005a8e <main+0x6be>
 8005aa0:	4b1d      	ldr	r3, [pc, #116]	; (8005b18 <main+0x748>)
 8005aa2:	781b      	ldrb	r3, [r3, #0]
 8005aa4:	b91b      	cbnz	r3, 8005aae <main+0x6de>
 8005aa6:	4828      	ldr	r0, [pc, #160]	; (8005b48 <main+0x778>)
 8005aa8:	f7fa fed2 	bl	8000850 <test_println>
 8005aac:	e6b8      	b.n	8005820 <main+0x450>
 8005aae:	4827      	ldr	r0, [pc, #156]	; (8005b4c <main+0x77c>)
 8005ab0:	f7fa fece 	bl	8000850 <test_println>
 8005ab4:	e6b4      	b.n	8005820 <main+0x450>
 8005ab6:	bf00      	nop
 8005ab8:	40020000 	.word	0x40020000
 8005abc:	200008b8 	.word	0x200008b8
 8005ac0:	08005e20 	.word	0x08005e20
 8005ac4:	08005fa8 	.word	0x08005fa8
 8005ac8:	08005ec0 	.word	0x08005ec0
 8005acc:	08005fc4 	.word	0x08005fc4
 8005ad0:	08005fc8 	.word	0x08005fc8
 8005ad4:	08005ed4 	.word	0x08005ed4
 8005ad8:	08005fd0 	.word	0x08005fd0
 8005adc:	08005ee8 	.word	0x08005ee8
 8005ae0:	08005fe8 	.word	0x08005fe8
 8005ae4:	08005efc 	.word	0x08005efc
 8005ae8:	08006030 	.word	0x08006030
 8005aec:	08005f10 	.word	0x08005f10
 8005af0:	08006038 	.word	0x08006038
 8005af4:	08005f24 	.word	0x08005f24
 8005af8:	08006044 	.word	0x08006044
 8005afc:	08005f38 	.word	0x08005f38
 8005b00:	0800605c 	.word	0x0800605c
 8005b04:	08005f4c 	.word	0x08005f4c
 8005b08:	080061a4 	.word	0x080061a4
 8005b0c:	08006088 	.word	0x08006088
 8005b10:	08006210 	.word	0x08006210
 8005b14:	08006200 	.word	0x08006200
 8005b18:	200011a0 	.word	0x200011a0
 8005b1c:	08006950 	.word	0x08006950
 8005b20:	08005f60 	.word	0x08005f60
 8005b24:	08005f70 	.word	0x08005f70
 8005b28:	0800609c 	.word	0x0800609c
 8005b2c:	200011e0 	.word	0x200011e0
 8005b30:	08005f74 	.word	0x08005f74
 8005b34:	20000aac 	.word	0x20000aac
 8005b38:	08005f8c 	.word	0x08005f8c
 8005b3c:	080060a0 	.word	0x080060a0
 8005b40:	080060a4 	.word	0x080060a4
 8005b44:	08005f90 	.word	0x08005f90
 8005b48:	080060b0 	.word	0x080060b0
 8005b4c:	080060b8 	.word	0x080060b8

08005b50 <__early_init>:
 8005b50:	4b38      	ldr	r3, [pc, #224]	; (8005c34 <__early_init+0xe4>)
 8005b52:	4a39      	ldr	r2, [pc, #228]	; (8005c38 <__early_init+0xe8>)
 8005b54:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
 8005b58:	b430      	push	{r4, r5}
 8005b5a:	6259      	str	r1, [r3, #36]	; 0x24
 8005b5c:	6853      	ldr	r3, [r2, #4]
 8005b5e:	06d9      	lsls	r1, r3, #27
 8005b60:	d4fc      	bmi.n	8005b5c <__early_init+0xc>
 8005b62:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8005b66:	4934      	ldr	r1, [pc, #208]	; (8005c38 <__early_init+0xe8>)
 8005b68:	6013      	str	r3, [r2, #0]
 8005b6a:	684b      	ldr	r3, [r1, #4]
 8005b6c:	f013 0310 	ands.w	r3, r3, #16
 8005b70:	d1fb      	bne.n	8005b6a <__early_init+0x1a>
 8005b72:	4930      	ldr	r1, [pc, #192]	; (8005c34 <__early_init+0xe4>)
 8005b74:	608b      	str	r3, [r1, #8]
 8005b76:	684b      	ldr	r3, [r1, #4]
 8005b78:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8005b7c:	f443 4320 	orr.w	r3, r3, #40960	; 0xa000
 8005b80:	f44f 7080 	mov.w	r0, #256	; 0x100
 8005b84:	604b      	str	r3, [r1, #4]
 8005b86:	460a      	mov	r2, r1
 8005b88:	6008      	str	r0, [r1, #0]
 8005b8a:	6813      	ldr	r3, [r2, #0]
 8005b8c:	059b      	lsls	r3, r3, #22
 8005b8e:	d5fc      	bpl.n	8005b8a <__early_init+0x3a>
 8005b90:	6813      	ldr	r3, [r2, #0]
 8005b92:	4928      	ldr	r1, [pc, #160]	; (8005c34 <__early_init+0xe4>)
 8005b94:	f043 0301 	orr.w	r3, r3, #1
 8005b98:	6013      	str	r3, [r2, #0]
 8005b9a:	680b      	ldr	r3, [r1, #0]
 8005b9c:	079d      	lsls	r5, r3, #30
 8005b9e:	d5fc      	bpl.n	8005b9a <__early_init+0x4a>
 8005ba0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8005ba2:	4a24      	ldr	r2, [pc, #144]	; (8005c34 <__early_init+0xe4>)
 8005ba4:	f043 0301 	orr.w	r3, r3, #1
 8005ba8:	634b      	str	r3, [r1, #52]	; 0x34
 8005baa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005bac:	079c      	lsls	r4, r3, #30
 8005bae:	d5fc      	bpl.n	8005baa <__early_init+0x5a>
 8005bb0:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005bb2:	05d8      	lsls	r0, r3, #23
 8005bb4:	d40c      	bmi.n	8005bd0 <__early_init+0x80>
 8005bb6:	4b20      	ldr	r3, [pc, #128]	; (8005c38 <__early_init+0xe8>)
 8005bb8:	6819      	ldr	r1, [r3, #0]
 8005bba:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8005bbe:	6019      	str	r1, [r3, #0]
 8005bc0:	6b51      	ldr	r1, [r2, #52]	; 0x34
 8005bc2:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8005bc6:	6351      	str	r1, [r2, #52]	; 0x34
 8005bc8:	681a      	ldr	r2, [r3, #0]
 8005bca:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005bce:	601a      	str	r2, [r3, #0]
 8005bd0:	4a18      	ldr	r2, [pc, #96]	; (8005c34 <__early_init+0xe4>)
 8005bd2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005bd4:	0599      	lsls	r1, r3, #22
 8005bd6:	d5fc      	bpl.n	8005bd2 <__early_init+0x82>
 8005bd8:	6891      	ldr	r1, [r2, #8]
 8005bda:	4b16      	ldr	r3, [pc, #88]	; (8005c34 <__early_init+0xe4>)
 8005bdc:	f441 0108 	orr.w	r1, r1, #8912896	; 0x880000
 8005be0:	6091      	str	r1, [r2, #8]
 8005be2:	6811      	ldr	r1, [r2, #0]
 8005be4:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
 8005be8:	6011      	str	r1, [r2, #0]
 8005bea:	681a      	ldr	r2, [r3, #0]
 8005bec:	0192      	lsls	r2, r2, #6
 8005bee:	d5fc      	bpl.n	8005bea <__early_init+0x9a>
 8005bf0:	681a      	ldr	r2, [r3, #0]
 8005bf2:	601a      	str	r2, [r3, #0]
 8005bf4:	689a      	ldr	r2, [r3, #8]
 8005bf6:	609a      	str	r2, [r3, #8]
 8005bf8:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005bfa:	4810      	ldr	r0, [pc, #64]	; (8005c3c <__early_init+0xec>)
 8005bfc:	4a0d      	ldr	r2, [pc, #52]	; (8005c34 <__early_init+0xe4>)
 8005bfe:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 8005c02:	2504      	movs	r5, #4
 8005c04:	2407      	movs	r4, #7
 8005c06:	6359      	str	r1, [r3, #52]	; 0x34
 8005c08:	6005      	str	r5, [r0, #0]
 8005c0a:	6004      	str	r4, [r0, #0]
 8005c0c:	6899      	ldr	r1, [r3, #8]
 8005c0e:	f041 0103 	orr.w	r1, r1, #3
 8005c12:	6099      	str	r1, [r3, #8]
 8005c14:	6893      	ldr	r3, [r2, #8]
 8005c16:	f003 030c 	and.w	r3, r3, #12
 8005c1a:	2b0c      	cmp	r3, #12
 8005c1c:	d1fa      	bne.n	8005c14 <__early_init+0xc4>
 8005c1e:	6a13      	ldr	r3, [r2, #32]
 8005c20:	f043 0301 	orr.w	r3, r3, #1
 8005c24:	6213      	str	r3, [r2, #32]
 8005c26:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8005c28:	f043 0301 	orr.w	r3, r3, #1
 8005c2c:	62d3      	str	r3, [r2, #44]	; 0x2c
 8005c2e:	bc30      	pop	{r4, r5}
 8005c30:	4770      	bx	lr
 8005c32:	bf00      	nop
 8005c34:	40023800 	.word	0x40023800
 8005c38:	40007000 	.word	0x40007000
 8005c3c:	40023c00 	.word	0x40023c00

08005c40 <chThdExit>:
 8005c40:	b538      	push	{r3, r4, r5, lr}
 8005c42:	2220      	movs	r2, #32
 8005c44:	4603      	mov	r3, r0
 8005c46:	f382 8811 	msr	BASEPRI, r2
 8005c4a:	4a0e      	ldr	r2, [pc, #56]	; (8005c84 <chThdExit+0x44>)
 8005c4c:	6994      	ldr	r4, [r2, #24]
 8005c4e:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005c50:	6223      	str	r3, [r4, #32]
 8005c52:	f104 0524 	add.w	r5, r4, #36	; 0x24
 8005c56:	42a8      	cmp	r0, r5
 8005c58:	d006      	beq.n	8005c68 <chThdExit+0x28>
 8005c5a:	6803      	ldr	r3, [r0, #0]
 8005c5c:	6263      	str	r3, [r4, #36]	; 0x24
 8005c5e:	f7fb f83f 	bl	8000ce0 <chSchReadyI>
 8005c62:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005c64:	42a8      	cmp	r0, r5
 8005c66:	d1f8      	bne.n	8005c5a <chThdExit+0x1a>
 8005c68:	7f63      	ldrb	r3, [r4, #29]
 8005c6a:	079b      	lsls	r3, r3, #30
 8005c6c:	d104      	bne.n	8005c78 <chThdExit+0x38>
 8005c6e:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 8005c72:	611a      	str	r2, [r3, #16]
 8005c74:	6922      	ldr	r2, [r4, #16]
 8005c76:	6153      	str	r3, [r2, #20]
 8005c78:	200f      	movs	r0, #15
 8005c7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005c7e:	f7fb bebf 	b.w	8001a00 <chSchGoSleepS>
 8005c82:	bf00      	nop
 8005c84:	20000930 	.word	0x20000930
	...

08005c90 <thread1.lto_priv.72>:
 8005c90:	f7ff bfd6 	b.w	8005c40 <chThdExit>
	...

08005ca0 <chSchDoReschedule>:
 8005ca0:	f7fb bc46 	b.w	8001530 <chSchDoRescheduleAhead>
	...

08005cb0 <__default_exit>:
 8005cb0:	e7fe      	b.n	8005cb0 <__default_exit>
 8005cb2:	bf00      	nop
	...

08005cc0 <__late_init>:
 8005cc0:	4770      	bx	lr
 8005cc2:	bf00      	nop
	...
 8005cd0:	6e696c62 	.word	0x6e696c62
 8005cd4:	0072656b 	.word	0x0072656b
	...
 8005ce0:	61686e75 	.word	0x61686e75
 8005ce4:	656c646e 	.word	0x656c646e
 8005ce8:	78652064 	.word	0x78652064
 8005cec:	74706563 	.word	0x74706563
 8005cf0:	006e6f69 	.word	0x006e6f69
	...
 8005d00:	202d2d2d 	.word	0x202d2d2d
 8005d04:	726f6353 	.word	0x726f6353
 8005d08:	203a2065 	.word	0x203a2065
 8005d0c:	00000000 	.word	0x00000000
 8005d10:	6d697420 	.word	0x6d697420
 8005d14:	2f737265 	.word	0x2f737265
 8005d18:	00000053 	.word	0x00000053
 8005d1c:	00000000 	.word	0x00000000
 8005d20:	69617720 	.word	0x69617720
 8005d24:	69732b74 	.word	0x69732b74
 8005d28:	6c616e67 	.word	0x6c616e67
 8005d2c:	0000532f 	.word	0x0000532f
 8005d30:	636f6c20 	.word	0x636f6c20
 8005d34:	6e752b6b 	.word	0x6e752b6b
 8005d38:	6b636f6c 	.word	0x6b636f6c
 8005d3c:	0000532f 	.word	0x0000532f
 8005d40:	202d2d2d 	.word	0x202d2d2d
 8005d44:	74737953 	.word	0x74737953
 8005d48:	203a6d65 	.word	0x203a6d65
 8005d4c:	00000000 	.word	0x00000000
 8005d50:	74796220 	.word	0x74796220
 8005d54:	00007365 	.word	0x00007365
 8005d58:	202d2d2d 	.word	0x202d2d2d
 8005d5c:	65726854 	.word	0x65726854
 8005d60:	203a6461 	.word	0x203a6461
 8005d64:	00000000 	.word	0x00000000
 8005d68:	202d2d2d 	.word	0x202d2d2d
 8005d6c:	656d6954 	.word	0x656d6954
 8005d70:	203a2072 	.word	0x203a2072
 8005d74:	00000000 	.word	0x00000000
 8005d78:	202d2d2d 	.word	0x202d2d2d
 8005d7c:	616d6553 	.word	0x616d6553
 8005d80:	203a6870 	.word	0x203a6870
 8005d84:	00000000 	.word	0x00000000
 8005d88:	202d2d2d 	.word	0x202d2d2d
 8005d8c:	6e657645 	.word	0x6e657645
 8005d90:	203a5374 	.word	0x203a5374
 8005d94:	00000000 	.word	0x00000000
 8005d98:	202d2d2d 	.word	0x202d2d2d
 8005d9c:	6e657645 	.word	0x6e657645
 8005da0:	203a4c74 	.word	0x203a4c74
 8005da4:	00000000 	.word	0x00000000
 8005da8:	202d2d2d 	.word	0x202d2d2d
 8005dac:	6574754d 	.word	0x6574754d
 8005db0:	203a2078 	.word	0x203a2078
 8005db4:	00000000 	.word	0x00000000
 8005db8:	202d2d2d 	.word	0x202d2d2d
 8005dbc:	646e6f43 	.word	0x646e6f43
 8005dc0:	203a2e56 	.word	0x203a2e56
 8005dc4:	00000000 	.word	0x00000000
 8005dc8:	202d2d2d 	.word	0x202d2d2d
 8005dcc:	75657551 	.word	0x75657551
 8005dd0:	203a2065 	.word	0x203a2065
 8005dd4:	00000000 	.word	0x00000000
 8005dd8:	202d2d2d 	.word	0x202d2d2d
 8005ddc:	6c69614d 	.word	0x6c69614d
 8005de0:	203a2e42 	.word	0x203a2e42
	...
 8005df0:	67736d20 	.word	0x67736d20
 8005df4:	2c532f73 	.word	0x2c532f73
 8005df8:	00000020 	.word	0x00000020
 8005dfc:	00000000 	.word	0x00000000
 8005e00:	72687420 	.word	0x72687420
 8005e04:	73646165 	.word	0x73646165
 8005e08:	0000532f 	.word	0x0000532f
 8005e0c:	00000000 	.word	0x00000000
 8005e10:	73657220 	.word	0x73657220
 8005e14:	64656863 	.word	0x64656863
 8005e18:	73656c75 	.word	0x73656c75
 8005e1c:	202c532f 	.word	0x202c532f
	...
 8005e30:	78746320 	.word	0x78746320
 8005e34:	2f637773 	.word	0x2f637773
 8005e38:	00000053 	.word	0x00000053
 8005e3c:	00000000 	.word	0x00000000
 8005e40:	74796220 	.word	0x74796220
 8005e44:	532f7365 	.word	0x532f7365
	...

08005e50 <ch_debug>:
 8005e50:	6e69616d 18011600 08440204 1814100c     main......D.....
 8005e60:	1e1d1c00 00000000 00000000 00000000     ................
 8005e70:	00004241 00000000 00000000 00000000     AB..............
 8005e80:	00000042 00000043 00000044 00000000     B...C...D.......
 8005e90:	00000041 00000000 00000000 00000000     A...............

08005ea0 <evhndl>:
 8005ea0:	08000821 08000811 08000801 00000000     !...............
 8005eb0:	00434241 00000000 00000000 00000000     ABC.............
 8005ec0:	202a2a2a 6e72654b 203a6c65 20202020     *** Kernel:     
 8005ed0:	00002020 202a2a2a 706d6f43 64656c69       ..*** Compiled
 8005ee0:	2020203a 00002020 202a2a2a 706d6f43     :     ..*** Comp
 8005ef0:	72656c69 2020203a 00002020 202a2a2a     iler:     ..*** 
 8005f00:	68637241 63657469 65727574 0000203a     Architecture: ..
 8005f10:	202a2a2a 65726f43 72615620 746e6169     *** Core Variant
 8005f20:	0000203a 202a2a2a 74726f50 666e4920     : ..*** Port Inf
 8005f30:	20203a6f 00002020 202a2a2a 74616c50     o:    ..*** Plat
 8005f40:	6d726f66 2020203a 00002020 202a2a2a     form:     ..*** 
 8005f50:	74736554 616f4220 203a6472 00002020     Test Board:   ..
 8005f60:	202d2d2d 74736554 73614320 00002065     --- Test Case ..
 8005f70:	00002820 202d2d2d 75736552 203a746c      (..--- Result: 
 8005f80:	4c494146 20455255 00002328 00005b20     FAILURE (#.. [..
 8005f90:	616e6946 6572206c 746c7573 0000203a     Final result: ..
 8005fa0:	656c6469 00000000 202a2a2a 62696843     idle....*** Chib
 8005fb0:	2f534f69 74205452 20747365 74697573     iOS/RT test suit
 8005fc0:	00000065 002a2a2a 2e302e33 00000030     e...***.3.0.0...
 8005fd0:	20727041 32203620 20383130 3631202d     Apr  6 2018 - 16
 8005fe0:	3a31303a 00003633 20434347 2e322e37     :01:36..GCC 7.2.
 8005ff0:	30322031 39303731 28203430 656c6572     1 20170904 (rele
 8006000:	29657361 52415b20 6d652f4d 64646562     ase) [ARM/embedd
 8006010:	372d6465 6172622d 2068636e 69766572     ed-7-branch revi
 8006020:	6e6f6973 35353220 5d343032 00000000     sion 255204]....
 8006030:	764d5241 004d2d37 74726f43 4d2d7865     ARMv7-M.Cortex-M
 8006040:	00000033 61766441 6465636e 72656b20     3...Advanced ker
 8006050:	206c656e 65646f6d 00000000 334d5453     nel mode....STM3
 8006060:	78314c32 6c552078 20617274 20776f4c     2L1xx Ultra Low 
 8006070:	65776f50 654d2072 6d756964 6e654420     Power Medium Den
 8006080:	79746973 00000000 53205453 32334d54     sity....ST STM32
 8006090:	69442d4c 766f6373 00797265 00000029     L-Discovery.)...
 80060a0:	0000295d 202d2d2d 75736552 203a746c     ])..--- Result: 
 80060b0:	43435553 00535345 4c494146 00455255     SUCCESS.FAILURE.
 80060c0:	44434241 00000045 00000000 00000000     ABCDE...........

080060d0 <patternbmk>:
 80060d0:	08006720 08006770 08006780 08006790      g..pg...g...g..
 80060e0:	080067a0 080067b0 080067c0 080067d0     .g...g...g...g..
 80060f0:	080067e0 08006730 08006740 08006750     .g..0g..@g..Pg..
 8006100:	08006760 00000000 00000000 00000000     `g..............

08006110 <patterndyn>:
 8006110:	080067f0 08006800 08006810 00000000     .g...h...h......

08006120 <patternevt>:
 8006120:	08006820 08006830 08006840 00000000      h..0h..@h......

08006130 <patternheap>:
 8006130:	08006850 00000000 00000000 00000000     Ph..............

08006140 <patternmbox>:
 8006140:	08006860 00000000 00000000 00000000     `h..............

08006150 <patternmsg>:
 8006150:	08006870 00000000 00000000 00000000     ph..............

08006160 <patternmtx>:
 8006160:	08006880 08006890 080068a0 080068b0     .h...h...h...h..
 8006170:	080068c0 080068d0 00000000 00000000     .h...h..........

08006180 <patternpools>:
 8006180:	080068e0 00000000 00000000 00000000     .h..............

08006190 <patternqueues>:
 8006190:	080068f0 08006900 00000000 00000000     .h...i..........

080061a0 <patterns>:
 80061a0:	08006200 08006210 080061e0 08006160     .b...b...a..`a..
 80061b0:	08006150 08006140 08006120 08006130     Pa..@a.. a..0a..
 80061c0:	08006180 08006110 08006190 080060d0     .a...a...a...`..
	...

080061e0 <patternsem>:
 80061e0:	08006910 08006920 08006930 08006940     .i.. i..0i..@i..
	...

08006200 <patternsys>:
 8006200:	08006950 08006960 08006970 00000000     Pi..`i..pi......

08006210 <patternthd>:
 8006210:	08006980 08006990 080069a0 080069b0     .i...i...i...i..
	...
 8006230:	00000a0d 00000000 00000000 00000000     ................
 8006240:	44434241 00000000 00000000 00000000     ABCD............
 8006250:	636e6542 72616d68 52202c6b 66204d41     Benchmark, RAM f
 8006260:	70746f6f 746e6972 00000000 636e6542     ootprint....Benc
 8006270:	72616d68 6d202c6b 78657475 6c207365     hmark, mutexes l
 8006280:	2f6b636f 6f6c6e75 00006b63 636e6542     ock/unlock..Benc
 8006290:	72616d68 73202c6b 70616d65 65726f68     hmark, semaphore
 80062a0:	61772073 732f7469 616e6769 0000006c     s wait/signal...
 80062b0:	636e6542 72616d68 76202c6b 75747269     Benchmark, virtu
 80062c0:	74206c61 72656d69 65732073 65722f74     al timers set/re
 80062d0:	00746573 636e6542 72616d68 49202c6b     set.Benchmark, I
 80062e0:	51204f2f 65756575 68742073 67756f72     /O Queues throug
 80062f0:	74757068 00000000 636e6542 72616d68     hput....Benchmar
 8006300:	72202c6b 646e756f 626f7220 63206e69     k, round robin c
 8006310:	65746e6f 73207478 63746977 676e6968     ontext switching
 8006320:	00000000 636e6542 72616d68 6d202c6b     ....Benchmark, m
 8006330:	20737361 63736572 75646568 202c656c     ass reschedule, 
 8006340:	68742035 64616572 00000073 636e6542     5 threads...Benc
 8006350:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8006360:	61657263 6f206574 00796c6e 636e6542     create only.Benc
 8006370:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8006380:	6c6c7566 63796320 0000656c 636e6542     full cycle..Benc
 8006390:	72616d68 63202c6b 65746e6f 73207478     hmark, context s
 80063a0:	63746977 00000068 636e6542 72616d68     witch...Benchmar
 80063b0:	6d202c6b 61737365 20736567 00003323     k, messages #3..
 80063c0:	636e6542 72616d68 6d202c6b 61737365     Benchmark, messa
 80063d0:	20736567 00003223 636e6542 72616d68     ges #2..Benchmar
 80063e0:	6d202c6b 61737365 20736567 00003123     k, messages #1..
 80063f0:	75657551 202c7365 7074756f 71207475     Queues, output q
 8006400:	65756575 00000073 75657551 202c7365     ueues...Queues, 
 8006410:	75706e69 75712074 73657565 00000000     input queues....
 8006420:	616e7944 2063696d 73495041 6572202c     Dynamic APIs, re
 8006430:	74736967 61207972 7220646e 72656665     gistry and refer
 8006440:	65636e65 00000073 616e7944 2063696d     ences...Dynamic 
 8006450:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8006460:	69746165 66206e6f 206d6f72 6f6d656d     eation from memo
 8006470:	70207972 006c6f6f 616e7944 2063696d     ry pool.Dynamic 
 8006480:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8006490:	69746165 66206e6f 206d6f72 70616568     eation from heap
 80064a0:	00000000 6f6d654d 50207972 736c6f6f     ....Memory Pools
 80064b0:	7571202c 2f657565 75716564 00657565     , queue/dequeue.
 80064c0:	70616548 6c61202c 61636f6c 6e6f6974     Heap, allocation
 80064d0:	646e6120 61726620 6e656d67 69746174      and fragmentati
 80064e0:	74206e6f 00747365 6e657645 202c7374     on test.Events, 
 80064f0:	656d6974 7374756f 00000000 6e657645     timeouts....Even
 8006500:	202c7374 74696177 646e6120 6f726220     ts, wait and bro
 8006510:	61636461 00007473 6e657645 202c7374     adcast..Events, 
 8006520:	69676572 61727473 6e6f6974 646e6120     registration and
 8006530:	73696420 63746170 00000068 6c69614d      dispatch...Mail
 8006540:	65786f62 71202c73 69756575 6120676e     boxes, queuing a
 8006550:	7420646e 6f656d69 00737475 7373654d     nd timeouts.Mess
 8006560:	73656761 6f6c202c 0000706f 646e6f43     ages, loop..Cond
 8006570:	2c726156 6f6f6220 74207473 00747365     Var, boost test.
 8006580:	646e6f43 2c726156 6f726220 61636461     CondVar, broadca
 8006590:	74207473 00747365 646e6f43 2c726156     st test.CondVar,
 80065a0:	67697320 206c616e 74736574 00000000      signal test....
 80065b0:	6574754d 2c736578 61747320 00737574     Mutexes, status.
 80065c0:	6574754d 2c736578 69727020 7469726f     Mutexes, priorit
 80065d0:	65722079 6e727574 00000000 6574754d     y return....Mute
 80065e0:	2c736578 69727020 7469726f 6e652079     xes, priority en
 80065f0:	75657571 20676e69 74736574 00000000     queuing test....
 8006600:	616e6942 53207972 70616d65 65726f68     Binary Semaphore
 8006610:	66202c73 74636e75 616e6f69 7974696c     s, functionality
 8006620:	00000000 616d6553 726f6870 202c7365     ....Semaphores, 
 8006630:	6d6f7461 73206369 616e6769 61772d6c     atomic signal-wa
 8006640:	00007469 616d6553 726f6870 202c7365     it..Semaphores, 
 8006650:	656d6974 0074756f 616d6553 726f6870     timeout.Semaphor
 8006660:	202c7365 75716e65 6e697565 00000067     es, enqueuing...
 8006670:	65726854 2c736461 6c656420 00737961     Threads, delays.
 8006680:	65726854 2c736461 69727020 7469726f     Threads, priorit
 8006690:	68632079 65676e61 00000000 65726854     y change....Thre
 80066a0:	2c736461 716e6520 69756575 7420676e     ads, enqueuing t
 80066b0:	20747365 00003223 65726854 2c736461     est #2..Threads,
 80066c0:	716e6520 69756575 7420676e 20747365      enqueuing test 
 80066d0:	00003123 74737953 202c6d65 65746e69     #1..System, inte
 80066e0:	74697267 00000079 74737953 202c6d65     grity...System, 
 80066f0:	65746e69 70757272 68207374 6c646e61     interrupts handl
 8006700:	00676e69 74737953 202c6d65 74697263     ing.System, crit
 8006710:	6c616369 6e6f7a20 00007365 00000000     ical zones......

08006720 <testbmk1>:
 8006720:	080063d8 00000000 00000000 08003f11     .c...........?..

08006730 <testbmk10>:
 8006730:	080062b0 00000000 00000000 08002931     .b..........1)..

08006740 <testbmk11>:
 8006740:	0800628c 08000381 00000000 080037d1     .b...........7..

08006750 <testbmk12>:
 8006750:	0800626c 08000371 00000000 08002e41     lb..q.......A...

08006760 <testbmk13>:
 8006760:	08006250 00000000 00000000 080013b1     Pb..............

08006770 <testbmk2>:
 8006770:	080063c0 00000000 00000000 08003ea1     .c...........>..

08006780 <testbmk3>:
 8006780:	080063a8 00000000 00000000 08003dc1     .c...........=..

08006790 <testbmk4>:
 8006790:	0800638c 00000000 00000000 08003d11     .c...........=..

080067a0 <testbmk5>:
 80067a0:	0800636c 00000000 00000000 08003a51     lc..........Q:..

080067b0 <testbmk6>:
 80067b0:	0800634c 00000000 00000000 08002a71     Lc..........q*..

080067c0 <testbmk7>:
 80067c0:	08006324 080003b1 00000000 08003be1     $c...........;..

080067d0 <testbmk8>:
 80067d0:	080062f8 00000000 00000000 08003b01     .b...........;..

080067e0 <testbmk9>:
 80067e0:	080062d4 00000000 00000000 080029c1     .b...........)..

080067f0 <testdyn1>:
 80067f0:	08006478 08000461 00000000 08004591     xd..a........E..

08006800 <testdyn2>:
 8006800:	08006448 08000441 00000000 08004491     Hd..A........D..

08006810 <testdyn3>:
 8006810:	08006420 08000491 00000000 08003401      d...........4..

08006820 <testevt1>:
 8006820:	08006518 08000501 00000000 08000b31     .e..........1...

08006830 <testevt2>:
 8006830:	080064fc 08000521 00000000 08004661     .d..!.......aF..

08006840 <testevt3>:
 8006840:	080064e8 08000511 00000000 08001c71     .d..........q...

08006850 <testheap1>:
 8006850:	080064c0 080004d1 00000000 08003531     .d..........15..

08006860 <testmbox1>:
 8006860:	0800653c 08000531 00000000 08001f01     <e..1...........

08006870 <testmsg1>:
 8006870:	0800655c 00000000 00000000 08002c11     \e...........,..

08006880 <testmtx1>:
 8006880:	080065dc 080005f1 00000000 08004e01     .e...........N..

08006890 <testmtx4>:
 8006890:	080065c0 080005d1 00000000 08004bb1     .e...........K..

080068a0 <testmtx5>:
 80068a0:	080065b0 08000601 00000000 08002fd1     .e.........../..

080068b0 <testmtx6>:
 80068b0:	08006598 080005a1 00000000 08004ad1     .e...........J..

080068c0 <testmtx7>:
 80068c0:	08006580 080005c1 00000000 080049e1     .e...........I..

080068d0 <testmtx8>:
 80068d0:	0800656c 08000571 00000000 08004951     le..q.......QI..

080068e0 <testpools1>:
 80068e0:	080064a4 080004b1 00000000 08000a21     .d..........!...

080068f0 <testqueues1>:
 80068f0:	08006408 08000411 00000000 080041e1     .d...........A..

08006900 <testqueues2>:
 8006900:	080063f0 080003e1 00000000 08003f81     .c...........?..

08006910 <testsem1>:
 8006910:	08006658 08000611 00000000 08005051     Xf..........QP..

08006920 <testsem2>:
 8006920:	08006644 08000631 00000000 08004ef1     Df..1........N..

08006930 <testsem3>:
 8006930:	08006624 08000621 00000000 08001aa1     $f..!...........

08006940 <testsem4>:
 8006940:	08006600 00000000 00000000 08003871     .f..........q8..

08006950 <testsys1>:
 8006950:	08006704 00000000 00000000 080027b1     .g...........'..

08006960 <testsys2>:
 8006960:	080066e8 00000000 00000000 080003c1     .f..............

08006970 <testsys3>:
 8006970:	080066d4 00000000 00000000 08001301     .f..............

08006980 <testthd1>:
 8006980:	080066b8 00000000 00000000 08005301     .f...........S..

08006990 <testthd2>:
 8006990:	0800669c 00000000 00000000 080051c1     .f...........Q..

080069a0 <testthd3>:
 80069a0:	08006680 00000000 00000000 08001651     .f..........Q...

080069b0 <testthd4>:
 80069b0:	08006670 00000000 00000000 08002ae1     pf...........*..

080069c0 <vmt>:
 80069c0:	08002571 08002691 080025f1 08002711     q%...&...%...'..
 80069d0:	080025e1 08002701 08002561 08002681     .%...'..a%...&..

080069e0 <wa>:
 80069e0:	20000b38 20000c80 20000dc8 20000f10     8.. ... ... ... 
 80069f0:	20001058                                X.. 
