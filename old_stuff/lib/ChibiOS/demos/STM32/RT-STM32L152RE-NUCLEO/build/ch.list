
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

08000140 <Reset_Handler>:
 8000140:	b672      	cpsid	i
 8000142:	4821      	ldr	r0, [pc, #132]	; (80001c8 <endfiniloop+0x6>)
 8000144:	f380 8809 	msr	PSP, r0
 8000148:	2002      	movs	r0, #2
 800014a:	f380 8814 	msr	CONTROL, r0
 800014e:	f3bf 8f6f 	isb	sy
 8000152:	f005 fc5d 	bl	8005a10 <__early_init>
 8000156:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
 800015a:	491c      	ldr	r1, [pc, #112]	; (80001cc <endfiniloop+0xa>)
 800015c:	4a1c      	ldr	r2, [pc, #112]	; (80001d0 <endfiniloop+0xe>)

0800015e <msloop>:
 800015e:	4291      	cmp	r1, r2
 8000160:	bf3c      	itt	cc
 8000162:	f841 0b04 	strcc.w	r0, [r1], #4
 8000166:	e7fa      	bcc.n	800015e <msloop>
 8000168:	491a      	ldr	r1, [pc, #104]	; (80001d4 <endfiniloop+0x12>)
 800016a:	4a17      	ldr	r2, [pc, #92]	; (80001c8 <endfiniloop+0x6>)

0800016c <psloop>:
 800016c:	4291      	cmp	r1, r2
 800016e:	bf3c      	itt	cc
 8000170:	f841 0b04 	strcc.w	r0, [r1], #4
 8000174:	e7fa      	bcc.n	800016c <psloop>
 8000176:	4918      	ldr	r1, [pc, #96]	; (80001d8 <endfiniloop+0x16>)
 8000178:	4a18      	ldr	r2, [pc, #96]	; (80001dc <endfiniloop+0x1a>)
 800017a:	4b19      	ldr	r3, [pc, #100]	; (80001e0 <endfiniloop+0x1e>)

0800017c <dloop>:
 800017c:	429a      	cmp	r2, r3
 800017e:	bf3e      	ittt	cc
 8000180:	f851 0b04 	ldrcc.w	r0, [r1], #4
 8000184:	f842 0b04 	strcc.w	r0, [r2], #4
 8000188:	e7f8      	bcc.n	800017c <dloop>
 800018a:	2000      	movs	r0, #0
 800018c:	4915      	ldr	r1, [pc, #84]	; (80001e4 <endfiniloop+0x22>)
 800018e:	4a16      	ldr	r2, [pc, #88]	; (80001e8 <endfiniloop+0x26>)

08000190 <bloop>:
 8000190:	4291      	cmp	r1, r2
 8000192:	bf3c      	itt	cc
 8000194:	f841 0b04 	strcc.w	r0, [r1], #4
 8000198:	e7fa      	bcc.n	8000190 <bloop>
 800019a:	f005 fcd9 	bl	8005b50 <__late_init>
 800019e:	4c13      	ldr	r4, [pc, #76]	; (80001ec <endfiniloop+0x2a>)
 80001a0:	4d13      	ldr	r5, [pc, #76]	; (80001f0 <endfiniloop+0x2e>)

080001a2 <initloop>:
 80001a2:	42ac      	cmp	r4, r5
 80001a4:	da03      	bge.n	80001ae <endinitloop>
 80001a6:	f854 1b04 	ldr.w	r1, [r4], #4
 80001aa:	4788      	blx	r1
 80001ac:	e7f9      	b.n	80001a2 <initloop>

080001ae <endinitloop>:
 80001ae:	f005 f8a7 	bl	8005300 <main>
 80001b2:	4c10      	ldr	r4, [pc, #64]	; (80001f4 <endfiniloop+0x32>)
 80001b4:	4d10      	ldr	r5, [pc, #64]	; (80001f8 <endfiniloop+0x36>)

080001b6 <finiloop>:
 80001b6:	42ac      	cmp	r4, r5
 80001b8:	da03      	bge.n	80001c2 <endfiniloop>
 80001ba:	f854 1b04 	ldr.w	r1, [r4], #4
 80001be:	4788      	blx	r1
 80001c0:	e7f9      	b.n	80001b6 <finiloop>

080001c2 <endfiniloop>:
 80001c2:	f005 bcbd 	b.w	8005b40 <__default_exit>
 80001c6:	0000      	.short	0x0000
 80001c8:	20000800 	.word	0x20000800
 80001cc:	20000000 	.word	0x20000000
 80001d0:	20000400 	.word	0x20000400
 80001d4:	20000400 	.word	0x20000400
 80001d8:	08006898 	.word	0x08006898
 80001dc:	20000800 	.word	0x20000800
 80001e0:	200008b8 	.word	0x200008b8
 80001e4:	200008b8 	.word	0x200008b8
 80001e8:	20001378 	.word	0x20001378
 80001ec:	08000140 	.word	0x08000140
 80001f0:	08000140 	.word	0x08000140
 80001f4:	08000140 	.word	0x08000140
 80001f8:	08000140 	.word	0x08000140
 80001fc:	00000000 	.word	0x00000000

08000200 <_port_switch>:
 8000200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000204:	f8c1 d00c 	str.w	sp, [r1, #12]
 8000208:	f8d0 d00c 	ldr.w	sp, [r0, #12]
 800020c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000210 <_port_thread_start>:
 8000210:	2300      	movs	r3, #0
 8000212:	f383 8811 	msr	BASEPRI, r3
 8000216:	4628      	mov	r0, r5
 8000218:	47a0      	blx	r4
 800021a:	2000      	movs	r0, #0
 800021c:	f005 fc58 	bl	8005ad0 <chThdExit>

08000220 <_port_switch_from_isr>:
 8000220:	f005 fc86 	bl	8005b30 <chSchDoReschedule>

08000224 <_port_exit_from_isr>:
 8000224:	df00      	svc	0
 8000226:	e7fe      	b.n	8000226 <_port_exit_from_isr+0x2>
	...

08000230 <chTMStartMeasurementX.constprop.55>:
 8000230:	4b01      	ldr	r3, [pc, #4]	; (8000238 <chTMStartMeasurementX.constprop.55+0x8>)
 8000232:	685b      	ldr	r3, [r3, #4]
 8000234:	6083      	str	r3, [r0, #8]
 8000236:	4770      	bx	lr
 8000238:	e0001000 	.word	0xe0001000
 800023c:	00000000 	.word	0x00000000

08000240 <chEvtGetAndClearEvents.constprop.35>:
 8000240:	2320      	movs	r3, #32
 8000242:	f383 8811 	msr	BASEPRI, r3
 8000246:	4b04      	ldr	r3, [pc, #16]	; (8000258 <chEvtGetAndClearEvents.constprop.35+0x18>)
 8000248:	699a      	ldr	r2, [r3, #24]
 800024a:	2300      	movs	r3, #0
 800024c:	6b50      	ldr	r0, [r2, #52]	; 0x34
 800024e:	6353      	str	r3, [r2, #52]	; 0x34
 8000250:	f383 8811 	msr	BASEPRI, r3
 8000254:	4770      	bx	lr
 8000256:	bf00      	nop
 8000258:	20000930 	.word	0x20000930
 800025c:	00000000 	.word	0x00000000

08000260 <tmr>:
 8000260:	4b01      	ldr	r3, [pc, #4]	; (8000268 <tmr+0x8>)
 8000262:	2201      	movs	r2, #1
 8000264:	701a      	strb	r2, [r3, #0]
 8000266:	4770      	bx	lr
 8000268:	200011c8 	.word	0x200011c8
 800026c:	00000000 	.word	0x00000000

08000270 <_idle_thread>:
 8000270:	e7fe      	b.n	8000270 <_idle_thread>
 8000272:	bf00      	nop
	...

08000280 <chCoreAlloc>:
 8000280:	4603      	mov	r3, r0
 8000282:	2220      	movs	r2, #32
 8000284:	f382 8811 	msr	BASEPRI, r2
 8000288:	4908      	ldr	r1, [pc, #32]	; (80002ac <chCoreAlloc+0x2c>)
 800028a:	4a09      	ldr	r2, [pc, #36]	; (80002b0 <chCoreAlloc+0x30>)
 800028c:	6808      	ldr	r0, [r1, #0]
 800028e:	6812      	ldr	r2, [r2, #0]
 8000290:	3307      	adds	r3, #7
 8000292:	f023 0307 	bic.w	r3, r3, #7
 8000296:	1a12      	subs	r2, r2, r0
 8000298:	4293      	cmp	r3, r2
 800029a:	bf9a      	itte	ls
 800029c:	181b      	addls	r3, r3, r0
 800029e:	600b      	strls	r3, [r1, #0]
 80002a0:	2000      	movhi	r0, #0
 80002a2:	2300      	movs	r3, #0
 80002a4:	f383 8811 	msr	BASEPRI, r3
 80002a8:	4770      	bx	lr
 80002aa:	bf00      	nop
 80002ac:	20000b24 	.word	0x20000b24
 80002b0:	20000aa8 	.word	0x20000aa8
	...

080002c0 <notify2>:
 80002c0:	4a02      	ldr	r2, [pc, #8]	; (80002cc <notify2+0xc>)
 80002c2:	8993      	ldrh	r3, [r2, #12]
 80002c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002c8:	8193      	strh	r3, [r2, #12]
 80002ca:	4770      	bx	lr
 80002cc:	40004400 	.word	0x40004400

080002d0 <bmk12_setup>:
 80002d0:	4b02      	ldr	r3, [pc, #8]	; (80002dc <bmk12_setup+0xc>)
 80002d2:	2200      	movs	r2, #0
 80002d4:	e9c3 3300 	strd	r3, r3, [r3]
 80002d8:	609a      	str	r2, [r3, #8]
 80002da:	4770      	bx	lr
 80002dc:	20000b14 	.word	0x20000b14

080002e0 <bmk11_setup>:
 80002e0:	4b02      	ldr	r3, [pc, #8]	; (80002ec <bmk11_setup+0xc>)
 80002e2:	2201      	movs	r2, #1
 80002e4:	e9c3 3300 	strd	r3, r3, [r3]
 80002e8:	609a      	str	r2, [r3, #8]
 80002ea:	4770      	bx	lr
 80002ec:	20000b28 	.word	0x20000b28

080002f0 <notify>:
 80002f0:	4770      	bx	lr
 80002f2:	bf00      	nop
	...

08000300 <tmo>:
 8000300:	4770      	bx	lr
 8000302:	bf00      	nop
	...

08000310 <bmk7_setup>:
 8000310:	4b02      	ldr	r3, [pc, #8]	; (800031c <bmk7_setup+0xc>)
 8000312:	2200      	movs	r2, #0
 8000314:	e9c3 3300 	strd	r3, r3, [r3]
 8000318:	609a      	str	r2, [r3, #8]
 800031a:	4770      	bx	lr
 800031c:	20000b28 	.word	0x20000b28

08000320 <sys2_execute>:
 8000320:	2320      	movs	r3, #32
 8000322:	f383 8811 	msr	BASEPRI, r3
 8000326:	b662      	cpsie	i
 8000328:	b672      	cpsid	i
 800032a:	f383 8811 	msr	BASEPRI, r3
 800032e:	b662      	cpsie	i
 8000330:	2300      	movs	r3, #0
 8000332:	f383 8811 	msr	BASEPRI, r3
 8000336:	b662      	cpsie	i
 8000338:	4770      	bx	lr
 800033a:	bf00      	nop
 800033c:	0000      	movs	r0, r0
	...

08000340 <queues2_setup>:
 8000340:	b430      	push	{r4, r5}
 8000342:	4a08      	ldr	r2, [pc, #32]	; (8000364 <queues2_setup+0x24>)
 8000344:	4b08      	ldr	r3, [pc, #32]	; (8000368 <queues2_setup+0x28>)
 8000346:	4809      	ldr	r0, [pc, #36]	; (800036c <queues2_setup+0x2c>)
 8000348:	601b      	str	r3, [r3, #0]
 800034a:	1d15      	adds	r5, r2, #4
 800034c:	2404      	movs	r4, #4
 800034e:	2100      	movs	r1, #0
 8000350:	611d      	str	r5, [r3, #16]
 8000352:	609c      	str	r4, [r3, #8]
 8000354:	605b      	str	r3, [r3, #4]
 8000356:	60da      	str	r2, [r3, #12]
 8000358:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800035c:	e9c3 0107 	strd	r0, r1, [r3, #28]
 8000360:	bc30      	pop	{r4, r5}
 8000362:	4770      	bx	lr
 8000364:	20000b38 	.word	0x20000b38
 8000368:	20000888 	.word	0x20000888
 800036c:	080002f1 	.word	0x080002f1

08000370 <queues1_setup>:
 8000370:	4a08      	ldr	r2, [pc, #32]	; (8000394 <queues1_setup+0x24>)
 8000372:	4b09      	ldr	r3, [pc, #36]	; (8000398 <queues1_setup+0x28>)
 8000374:	4809      	ldr	r0, [pc, #36]	; (800039c <queues1_setup+0x2c>)
 8000376:	b410      	push	{r4}
 8000378:	2100      	movs	r1, #0
 800037a:	1d14      	adds	r4, r2, #4
 800037c:	611c      	str	r4, [r3, #16]
 800037e:	601b      	str	r3, [r3, #0]
 8000380:	605b      	str	r3, [r3, #4]
 8000382:	60da      	str	r2, [r3, #12]
 8000384:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8000388:	61d8      	str	r0, [r3, #28]
 800038a:	6099      	str	r1, [r3, #8]
 800038c:	6219      	str	r1, [r3, #32]
 800038e:	bc10      	pop	{r4}
 8000390:	4770      	bx	lr
 8000392:	bf00      	nop
 8000394:	20000b38 	.word	0x20000b38
 8000398:	20000810 	.word	0x20000810
 800039c:	080002f1 	.word	0x080002f1

080003a0 <dyn2_setup>:
 80003a0:	4b03      	ldr	r3, [pc, #12]	; (80003b0 <dyn2_setup+0x10>)
 80003a2:	2200      	movs	r2, #0
 80003a4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80003a8:	e9c3 2100 	strd	r2, r1, [r3]
 80003ac:	609a      	str	r2, [r3, #8]
 80003ae:	4770      	bx	lr
 80003b0:	20000b08 	.word	0x20000b08
	...

080003c0 <dyn1_setup>:
 80003c0:	4b08      	ldr	r3, [pc, #32]	; (80003e4 <dyn1_setup+0x24>)
 80003c2:	4909      	ldr	r1, [pc, #36]	; (80003e8 <dyn1_setup+0x28>)
 80003c4:	b410      	push	{r4}
 80003c6:	2200      	movs	r2, #0
 80003c8:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 80003cc:	f103 0010 	add.w	r0, r3, #16
 80003d0:	e9c1 2400 	strd	r2, r4, [r1]
 80003d4:	6099      	str	r1, [r3, #8]
 80003d6:	e9c3 0004 	strd	r0, r0, [r3, #16]
 80003da:	601a      	str	r2, [r3, #0]
 80003dc:	60da      	str	r2, [r3, #12]
 80003de:	619a      	str	r2, [r3, #24]
 80003e0:	bc10      	pop	{r4}
 80003e2:	4770      	bx	lr
 80003e4:	20000ab0 	.word	0x20000ab0
 80003e8:	20000b38 	.word	0x20000b38
 80003ec:	00000000 	.word	0x00000000

080003f0 <dyn3_setup>:
 80003f0:	f7ff bfe6 	b.w	80003c0 <dyn1_setup>
	...

08000400 <null_provider>:
 8000400:	2000      	movs	r0, #0
 8000402:	4770      	bx	lr
	...

08000410 <pools1_setup>:
 8000410:	4b03      	ldr	r3, [pc, #12]	; (8000420 <pools1_setup+0x10>)
 8000412:	2200      	movs	r2, #0
 8000414:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8000418:	e9c3 2100 	strd	r2, r1, [r3]
 800041c:	609a      	str	r2, [r3, #8]
 800041e:	4770      	bx	lr
 8000420:	2000087c 	.word	0x2000087c
	...

08000430 <heap1_setup>:
 8000430:	4b08      	ldr	r3, [pc, #32]	; (8000454 <heap1_setup+0x24>)
 8000432:	4909      	ldr	r1, [pc, #36]	; (8000458 <heap1_setup+0x28>)
 8000434:	b410      	push	{r4}
 8000436:	2200      	movs	r2, #0
 8000438:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 800043c:	f103 0010 	add.w	r0, r3, #16
 8000440:	e9c1 2400 	strd	r2, r4, [r1]
 8000444:	6099      	str	r1, [r3, #8]
 8000446:	e9c3 0004 	strd	r0, r0, [r3, #16]
 800044a:	601a      	str	r2, [r3, #0]
 800044c:	60da      	str	r2, [r3, #12]
 800044e:	619a      	str	r2, [r3, #24]
 8000450:	bc10      	pop	{r4}
 8000452:	4770      	bx	lr
 8000454:	200011a8 	.word	0x200011a8
 8000458:	20000b38 	.word	0x20000b38
 800045c:	00000000 	.word	0x00000000

08000460 <evt1_setup>:
 8000460:	f7ff beee 	b.w	8000240 <chEvtGetAndClearEvents.constprop.35>
	...

08000470 <evt3_setup>:
 8000470:	f7ff bff6 	b.w	8000460 <evt1_setup>
	...

08000480 <evt2_setup>:
 8000480:	f7ff bfee 	b.w	8000460 <evt1_setup>
	...

08000490 <mbox1_setup>:
 8000490:	b430      	push	{r4, r5}
 8000492:	4b0b      	ldr	r3, [pc, #44]	; (80004c0 <mbox1_setup+0x30>)
 8000494:	4a0b      	ldr	r2, [pc, #44]	; (80004c4 <mbox1_setup+0x34>)
 8000496:	601a      	str	r2, [r3, #0]
 8000498:	f102 0514 	add.w	r5, r2, #20
 800049c:	2405      	movs	r4, #5
 800049e:	f103 011c 	add.w	r1, r3, #28
 80004a2:	2000      	movs	r0, #0
 80004a4:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80004a8:	f103 0210 	add.w	r2, r3, #16
 80004ac:	605d      	str	r5, [r3, #4]
 80004ae:	625c      	str	r4, [r3, #36]	; 0x24
 80004b0:	e9c3 0106 	strd	r0, r1, [r3, #24]
 80004b4:	6219      	str	r1, [r3, #32]
 80004b6:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80004ba:	bc30      	pop	{r4, r5}
 80004bc:	4770      	bx	lr
 80004be:	bf00      	nop
 80004c0:	20000854 	.word	0x20000854
 80004c4:	20000b38 	.word	0x20000b38
	...

080004d0 <mtx8_setup>:
 80004d0:	4906      	ldr	r1, [pc, #24]	; (80004ec <mtx8_setup+0x1c>)
 80004d2:	4a07      	ldr	r2, [pc, #28]	; (80004f0 <mtx8_setup+0x20>)
 80004d4:	4b07      	ldr	r3, [pc, #28]	; (80004f4 <mtx8_setup+0x24>)
 80004d6:	6009      	str	r1, [r1, #0]
 80004d8:	2000      	movs	r0, #0
 80004da:	6049      	str	r1, [r1, #4]
 80004dc:	e9c2 2200 	strd	r2, r2, [r2]
 80004e0:	6090      	str	r0, [r2, #8]
 80004e2:	6098      	str	r0, [r3, #8]
 80004e4:	e9c3 3300 	strd	r3, r3, [r3]
 80004e8:	4770      	bx	lr
 80004ea:	bf00      	nop
 80004ec:	20000800 	.word	0x20000800
 80004f0:	20000834 	.word	0x20000834
 80004f4:	20000844 	.word	0x20000844
	...

08000500 <mtx6_setup>:
 8000500:	4a04      	ldr	r2, [pc, #16]	; (8000514 <mtx6_setup+0x14>)
 8000502:	4b05      	ldr	r3, [pc, #20]	; (8000518 <mtx6_setup+0x18>)
 8000504:	6012      	str	r2, [r2, #0]
 8000506:	2100      	movs	r1, #0
 8000508:	6052      	str	r2, [r2, #4]
 800050a:	e9c3 3300 	strd	r3, r3, [r3]
 800050e:	6099      	str	r1, [r3, #8]
 8000510:	4770      	bx	lr
 8000512:	bf00      	nop
 8000514:	20000800 	.word	0x20000800
 8000518:	20000834 	.word	0x20000834
 800051c:	00000000 	.word	0x00000000

08000520 <mtx7_setup>:
 8000520:	f7ff bfee 	b.w	8000500 <mtx6_setup>
	...

08000530 <mtx4_setup>:
 8000530:	4a04      	ldr	r2, [pc, #16]	; (8000544 <mtx4_setup+0x14>)
 8000532:	4b05      	ldr	r3, [pc, #20]	; (8000548 <mtx4_setup+0x18>)
 8000534:	6012      	str	r2, [r2, #0]
 8000536:	2100      	movs	r1, #0
 8000538:	e9c2 2101 	strd	r2, r1, [r2, #4]
 800053c:	6099      	str	r1, [r3, #8]
 800053e:	e9c3 3300 	strd	r3, r3, [r3]
 8000542:	4770      	bx	lr
 8000544:	20000834 	.word	0x20000834
 8000548:	20000844 	.word	0x20000844
 800054c:	00000000 	.word	0x00000000

08000550 <mtx1_setup>:
 8000550:	4b02      	ldr	r3, [pc, #8]	; (800055c <mtx1_setup+0xc>)
 8000552:	2200      	movs	r2, #0
 8000554:	e9c3 3300 	strd	r3, r3, [r3]
 8000558:	609a      	str	r2, [r3, #8]
 800055a:	4770      	bx	lr
 800055c:	20000834 	.word	0x20000834

08000560 <mtx5_setup>:
 8000560:	f7ff bff6 	b.w	8000550 <mtx1_setup>
	...

08000570 <sem1_setup>:
 8000570:	4b02      	ldr	r3, [pc, #8]	; (800057c <sem1_setup+0xc>)
 8000572:	2200      	movs	r2, #0
 8000574:	e9c3 3300 	strd	r3, r3, [r3]
 8000578:	609a      	str	r2, [r3, #8]
 800057a:	4770      	bx	lr
 800057c:	200008ac 	.word	0x200008ac

08000580 <sem3_setup>:
 8000580:	f7ff bff6 	b.w	8000570 <sem1_setup>
	...

08000590 <sem2_setup>:
 8000590:	f7ff bfee 	b.w	8000570 <sem1_setup>
	...

080005a0 <test_printn.part.1>:
 80005a0:	b320      	cbz	r0, 80005ec <test_printn.part.1+0x4c>
 80005a2:	b570      	push	{r4, r5, r6, lr}
 80005a4:	b084      	sub	sp, #16
 80005a6:	466d      	mov	r5, sp
 80005a8:	462c      	mov	r4, r5
 80005aa:	4e11      	ldr	r6, [pc, #68]	; (80005f0 <test_printn.part.1+0x50>)
 80005ac:	e000      	b.n	80005b0 <test_printn.part.1+0x10>
 80005ae:	4614      	mov	r4, r2
 80005b0:	fba6 2300 	umull	r2, r3, r6, r0
 80005b4:	08db      	lsrs	r3, r3, #3
 80005b6:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 80005ba:	eba0 0041 	sub.w	r0, r0, r1, lsl #1
 80005be:	f100 0130 	add.w	r1, r0, #48	; 0x30
 80005c2:	4622      	mov	r2, r4
 80005c4:	b2c9      	uxtb	r1, r1
 80005c6:	f802 1b01 	strb.w	r1, [r2], #1
 80005ca:	4618      	mov	r0, r3
 80005cc:	2b00      	cmp	r3, #0
 80005ce:	d1ee      	bne.n	80005ae <test_printn.part.1+0xe>
 80005d0:	42aa      	cmp	r2, r5
 80005d2:	d909      	bls.n	80005e8 <test_printn.part.1+0x48>
 80005d4:	4e07      	ldr	r6, [pc, #28]	; (80005f4 <test_printn.part.1+0x54>)
 80005d6:	e001      	b.n	80005dc <test_printn.part.1+0x3c>
 80005d8:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
 80005dc:	6830      	ldr	r0, [r6, #0]
 80005de:	6803      	ldr	r3, [r0, #0]
 80005e0:	689b      	ldr	r3, [r3, #8]
 80005e2:	4798      	blx	r3
 80005e4:	42a5      	cmp	r5, r4
 80005e6:	d1f7      	bne.n	80005d8 <test_printn.part.1+0x38>
 80005e8:	b004      	add	sp, #16
 80005ea:	bd70      	pop	{r4, r5, r6, pc}
 80005ec:	4770      	bx	lr
 80005ee:	bf00      	nop
 80005f0:	cccccccd 	.word	0xcccccccd
 80005f4:	20000a80 	.word	0x20000a80
	...

08000600 <test_printn>:
 8000600:	b928      	cbnz	r0, 800060e <test_printn+0xe>
 8000602:	4b04      	ldr	r3, [pc, #16]	; (8000614 <test_printn+0x14>)
 8000604:	6818      	ldr	r0, [r3, #0]
 8000606:	6803      	ldr	r3, [r0, #0]
 8000608:	2130      	movs	r1, #48	; 0x30
 800060a:	689b      	ldr	r3, [r3, #8]
 800060c:	4718      	bx	r3
 800060e:	f7ff bfc7 	b.w	80005a0 <test_printn.part.1>
 8000612:	bf00      	nop
 8000614:	20000a80 	.word	0x20000a80
	...

08000620 <print_line>:
 8000620:	b570      	push	{r4, r5, r6, lr}
 8000622:	4d08      	ldr	r5, [pc, #32]	; (8000644 <print_line+0x24>)
 8000624:	244c      	movs	r4, #76	; 0x4c
 8000626:	6828      	ldr	r0, [r5, #0]
 8000628:	6803      	ldr	r3, [r0, #0]
 800062a:	212d      	movs	r1, #45	; 0x2d
 800062c:	689b      	ldr	r3, [r3, #8]
 800062e:	4798      	blx	r3
 8000630:	3c01      	subs	r4, #1
 8000632:	d1f8      	bne.n	8000626 <print_line+0x6>
 8000634:	6828      	ldr	r0, [r5, #0]
 8000636:	4904      	ldr	r1, [pc, #16]	; (8000648 <print_line+0x28>)
 8000638:	6803      	ldr	r3, [r0, #0]
 800063a:	2202      	movs	r2, #2
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000642:	4718      	bx	r3
 8000644:	20000a80 	.word	0x20000a80
 8000648:	080060d0 	.word	0x080060d0
 800064c:	00000000 	.word	0x00000000

08000650 <test_terminate_threads>:
 8000650:	4b0a      	ldr	r3, [pc, #40]	; (800067c <test_terminate_threads+0x2c>)
 8000652:	b430      	push	{r4, r5}
 8000654:	f103 0014 	add.w	r0, r3, #20
 8000658:	2520      	movs	r5, #32
 800065a:	2400      	movs	r4, #0
 800065c:	f853 2b04 	ldr.w	r2, [r3], #4
 8000660:	b13a      	cbz	r2, 8000672 <test_terminate_threads+0x22>
 8000662:	f385 8811 	msr	BASEPRI, r5
 8000666:	7f51      	ldrb	r1, [r2, #29]
 8000668:	f041 0104 	orr.w	r1, r1, #4
 800066c:	7751      	strb	r1, [r2, #29]
 800066e:	f384 8811 	msr	BASEPRI, r4
 8000672:	4283      	cmp	r3, r0
 8000674:	d1f2      	bne.n	800065c <test_terminate_threads+0xc>
 8000676:	bc30      	pop	{r4, r5}
 8000678:	4770      	bx	lr
 800067a:	bf00      	nop
 800067c:	200011cc 	.word	0x200011cc

08000680 <_test_assert_time_window>:
 8000680:	b410      	push	{r4}
 8000682:	2320      	movs	r3, #32
 8000684:	f383 8811 	msr	BASEPRI, r3
 8000688:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 800068c:	2300      	movs	r3, #0
 800068e:	6a64      	ldr	r4, [r4, #36]	; 0x24
 8000690:	f383 8811 	msr	BASEPRI, r3
 8000694:	b2a4      	uxth	r4, r4
 8000696:	1a64      	subs	r4, r4, r1
 8000698:	1a52      	subs	r2, r2, r1
 800069a:	4294      	cmp	r4, r2
 800069c:	db06      	blt.n	80006ac <_test_assert_time_window+0x2c>
 800069e:	4c05      	ldr	r4, [pc, #20]	; (80006b4 <_test_assert_time_window+0x34>)
 80006a0:	4905      	ldr	r1, [pc, #20]	; (80006b8 <_test_assert_time_window+0x38>)
 80006a2:	4a06      	ldr	r2, [pc, #24]	; (80006bc <_test_assert_time_window+0x3c>)
 80006a4:	2301      	movs	r3, #1
 80006a6:	7023      	strb	r3, [r4, #0]
 80006a8:	700b      	strb	r3, [r1, #0]
 80006aa:	6010      	str	r0, [r2, #0]
 80006ac:	4618      	mov	r0, r3
 80006ae:	bc10      	pop	{r4}
 80006b0:	4770      	bx	lr
 80006b2:	bf00      	nop
 80006b4:	200011a0 	.word	0x200011a0
 80006b8:	20000b04 	.word	0x20000b04
 80006bc:	20000aac 	.word	0x20000aac

080006c0 <_test_assert_sequence>:
 80006c0:	b4f0      	push	{r4, r5, r6, r7}
 80006c2:	4e0e      	ldr	r6, [pc, #56]	; (80006fc <_test_assert_sequence+0x3c>)
 80006c4:	4f0e      	ldr	r7, [pc, #56]	; (8000700 <_test_assert_sequence+0x40>)
 80006c6:	6835      	ldr	r5, [r6, #0]
 80006c8:	3901      	subs	r1, #1
 80006ca:	463b      	mov	r3, r7
 80006cc:	e003      	b.n	80006d6 <_test_assert_sequence+0x16>
 80006ce:	f813 4b01 	ldrb.w	r4, [r3], #1
 80006d2:	4294      	cmp	r4, r2
 80006d4:	d108      	bne.n	80006e8 <_test_assert_sequence+0x28>
 80006d6:	429d      	cmp	r5, r3
 80006d8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80006dc:	d8f7      	bhi.n	80006ce <_test_assert_sequence+0xe>
 80006de:	b91a      	cbnz	r2, 80006e8 <_test_assert_sequence+0x28>
 80006e0:	6037      	str	r7, [r6, #0]
 80006e2:	4610      	mov	r0, r2
 80006e4:	bcf0      	pop	{r4, r5, r6, r7}
 80006e6:	4770      	bx	lr
 80006e8:	4c06      	ldr	r4, [pc, #24]	; (8000704 <_test_assert_sequence+0x44>)
 80006ea:	4907      	ldr	r1, [pc, #28]	; (8000708 <_test_assert_sequence+0x48>)
 80006ec:	4b07      	ldr	r3, [pc, #28]	; (800070c <_test_assert_sequence+0x4c>)
 80006ee:	2201      	movs	r2, #1
 80006f0:	7022      	strb	r2, [r4, #0]
 80006f2:	6018      	str	r0, [r3, #0]
 80006f4:	700a      	strb	r2, [r1, #0]
 80006f6:	4610      	mov	r0, r2
 80006f8:	bcf0      	pop	{r4, r5, r6, r7}
 80006fa:	4770      	bx	lr
 80006fc:	200011f0 	.word	0x200011f0
 8000700:	200011e0 	.word	0x200011e0
 8000704:	200011a0 	.word	0x200011a0
 8000708:	20000b04 	.word	0x20000b04
 800070c:	20000aac 	.word	0x20000aac

08000710 <_test_assert>:
 8000710:	b951      	cbnz	r1, 8000728 <_test_assert+0x18>
 8000712:	b410      	push	{r4}
 8000714:	4906      	ldr	r1, [pc, #24]	; (8000730 <_test_assert+0x20>)
 8000716:	4c07      	ldr	r4, [pc, #28]	; (8000734 <_test_assert+0x24>)
 8000718:	4a07      	ldr	r2, [pc, #28]	; (8000738 <_test_assert+0x28>)
 800071a:	2301      	movs	r3, #1
 800071c:	7023      	strb	r3, [r4, #0]
 800071e:	6010      	str	r0, [r2, #0]
 8000720:	700b      	strb	r3, [r1, #0]
 8000722:	4618      	mov	r0, r3
 8000724:	bc10      	pop	{r4}
 8000726:	4770      	bx	lr
 8000728:	2300      	movs	r3, #0
 800072a:	4618      	mov	r0, r3
 800072c:	4770      	bx	lr
 800072e:	bf00      	nop
 8000730:	20000b04 	.word	0x20000b04
 8000734:	200011a0 	.word	0x200011a0
 8000738:	20000aac 	.word	0x20000aac
 800073c:	00000000 	.word	0x00000000

08000740 <test_emit_token>:
 8000740:	2320      	movs	r3, #32
 8000742:	f383 8811 	msr	BASEPRI, r3
 8000746:	4b04      	ldr	r3, [pc, #16]	; (8000758 <test_emit_token+0x18>)
 8000748:	681a      	ldr	r2, [r3, #0]
 800074a:	1c51      	adds	r1, r2, #1
 800074c:	6019      	str	r1, [r3, #0]
 800074e:	7010      	strb	r0, [r2, #0]
 8000750:	2300      	movs	r3, #0
 8000752:	f383 8811 	msr	BASEPRI, r3
 8000756:	4770      	bx	lr
 8000758:	200011f0 	.word	0x200011f0
 800075c:	00000000 	.word	0x00000000

08000760 <h3>:
 8000760:	2043      	movs	r0, #67	; 0x43
 8000762:	f7ff bfed 	b.w	8000740 <test_emit_token>
 8000766:	bf00      	nop
	...

08000770 <h2>:
 8000770:	2042      	movs	r0, #66	; 0x42
 8000772:	f7ff bfe5 	b.w	8000740 <test_emit_token>
 8000776:	bf00      	nop
	...

08000780 <h1>:
 8000780:	2041      	movs	r0, #65	; 0x41
 8000782:	f7ff bfdd 	b.w	8000740 <test_emit_token>
 8000786:	bf00      	nop
	...

08000790 <thread.lto_priv.58>:
 8000790:	7800      	ldrb	r0, [r0, #0]
 8000792:	f7ff bfd5 	b.w	8000740 <test_emit_token>
 8000796:	bf00      	nop
	...

080007a0 <thread.lto_priv.60>:
 80007a0:	f7ff bff6 	b.w	8000790 <thread.lto_priv.58>
	...

080007b0 <test_println>:
 80007b0:	b570      	push	{r4, r5, r6, lr}
 80007b2:	7801      	ldrb	r1, [r0, #0]
 80007b4:	b189      	cbz	r1, 80007da <test_println+0x2a>
 80007b6:	4d0a      	ldr	r5, [pc, #40]	; (80007e0 <test_println+0x30>)
 80007b8:	4604      	mov	r4, r0
 80007ba:	6828      	ldr	r0, [r5, #0]
 80007bc:	6803      	ldr	r3, [r0, #0]
 80007be:	689b      	ldr	r3, [r3, #8]
 80007c0:	4798      	blx	r3
 80007c2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80007c6:	2900      	cmp	r1, #0
 80007c8:	d1f7      	bne.n	80007ba <test_println+0xa>
 80007ca:	6828      	ldr	r0, [r5, #0]
 80007cc:	4905      	ldr	r1, [pc, #20]	; (80007e4 <test_println+0x34>)
 80007ce:	6803      	ldr	r3, [r0, #0]
 80007d0:	2202      	movs	r2, #2
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80007d8:	4718      	bx	r3
 80007da:	4d01      	ldr	r5, [pc, #4]	; (80007e0 <test_println+0x30>)
 80007dc:	e7f5      	b.n	80007ca <test_println+0x1a>
 80007de:	bf00      	nop
 80007e0:	20000a80 	.word	0x20000a80
 80007e4:	080060d0 	.word	0x080060d0
	...

080007f0 <test_print>:
 80007f0:	7801      	ldrb	r1, [r0, #0]
 80007f2:	b159      	cbz	r1, 800080c <test_print+0x1c>
 80007f4:	b538      	push	{r3, r4, r5, lr}
 80007f6:	4d06      	ldr	r5, [pc, #24]	; (8000810 <test_print+0x20>)
 80007f8:	4604      	mov	r4, r0
 80007fa:	6828      	ldr	r0, [r5, #0]
 80007fc:	6803      	ldr	r3, [r0, #0]
 80007fe:	689b      	ldr	r3, [r3, #8]
 8000800:	4798      	blx	r3
 8000802:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000806:	2900      	cmp	r1, #0
 8000808:	d1f7      	bne.n	80007fa <test_print+0xa>
 800080a:	bd38      	pop	{r3, r4, r5, pc}
 800080c:	4770      	bx	lr
 800080e:	bf00      	nop
 8000810:	20000a80 	.word	0x20000a80
	...

08000820 <_port_irq_epilogue>:
 8000820:	2320      	movs	r3, #32
 8000822:	f383 8811 	msr	BASEPRI, r3
 8000826:	4b11      	ldr	r3, [pc, #68]	; (800086c <_port_irq_epilogue+0x4c>)
 8000828:	685b      	ldr	r3, [r3, #4]
 800082a:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 800082e:	d102      	bne.n	8000836 <_port_irq_epilogue+0x16>
 8000830:	f383 8811 	msr	BASEPRI, r3
 8000834:	4770      	bx	lr
 8000836:	b480      	push	{r7}
 8000838:	af00      	add	r7, sp, #0
 800083a:	f3ef 8309 	mrs	r3, PSP
 800083e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000842:	f843 2c04 	str.w	r2, [r3, #-4]
 8000846:	f1a3 0220 	sub.w	r2, r3, #32
 800084a:	f382 8809 	msr	PSP, r2
 800084e:	4a08      	ldr	r2, [pc, #32]	; (8000870 <_port_irq_epilogue+0x50>)
 8000850:	6811      	ldr	r1, [r2, #0]
 8000852:	6992      	ldr	r2, [r2, #24]
 8000854:	6889      	ldr	r1, [r1, #8]
 8000856:	6892      	ldr	r2, [r2, #8]
 8000858:	4291      	cmp	r1, r2
 800085a:	bf8c      	ite	hi
 800085c:	4a05      	ldrhi	r2, [pc, #20]	; (8000874 <_port_irq_epilogue+0x54>)
 800085e:	4a06      	ldrls	r2, [pc, #24]	; (8000878 <_port_irq_epilogue+0x58>)
 8000860:	f843 2c08 	str.w	r2, [r3, #-8]
 8000864:	46bd      	mov	sp, r7
 8000866:	bc80      	pop	{r7}
 8000868:	4770      	bx	lr
 800086a:	bf00      	nop
 800086c:	e000ed00 	.word	0xe000ed00
 8000870:	20000930 	.word	0x20000930
 8000874:	08000221 	.word	0x08000221
 8000878:	08000224 	.word	0x08000224
 800087c:	00000000 	.word	0x00000000

08000880 <VectorB0>:
 8000880:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000884:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8000888:	6923      	ldr	r3, [r4, #16]
 800088a:	079b      	lsls	r3, r3, #30
 800088c:	d403      	bmi.n	8000896 <VectorB0+0x16>
 800088e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000892:	f7ff bfc5 	b.w	8000820 <_port_irq_epilogue>
 8000896:	2700      	movs	r7, #0
 8000898:	6127      	str	r7, [r4, #16]
 800089a:	2520      	movs	r5, #32
 800089c:	f385 8811 	msr	BASEPRI, r5
 80008a0:	4e1f      	ldr	r6, [pc, #124]	; (8000920 <VectorB0+0xa0>)
 80008a2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80008a4:	f8b6 c026 	ldrh.w	ip, [r6, #38]	; 0x26
 80008a8:	69f3      	ldr	r3, [r6, #28]
 80008aa:	b280      	uxth	r0, r0
 80008ac:	eba0 010c 	sub.w	r1, r0, ip
 80008b0:	891a      	ldrh	r2, [r3, #8]
 80008b2:	b289      	uxth	r1, r1
 80008b4:	4291      	cmp	r1, r2
 80008b6:	f106 081c 	add.w	r8, r6, #28
 80008ba:	d31c      	bcc.n	80008f6 <VectorB0+0x76>
 80008bc:	6819      	ldr	r1, [r3, #0]
 80008be:	f8d3 900c 	ldr.w	r9, [r3, #12]
 80008c2:	4462      	add	r2, ip
 80008c4:	4541      	cmp	r1, r8
 80008c6:	84f2      	strh	r2, [r6, #38]	; 0x26
 80008c8:	f8c1 8004 	str.w	r8, [r1, #4]
 80008cc:	61f1      	str	r1, [r6, #28]
 80008ce:	60df      	str	r7, [r3, #12]
 80008d0:	bf08      	it	eq
 80008d2:	60e7      	streq	r7, [r4, #12]
 80008d4:	f387 8811 	msr	BASEPRI, r7
 80008d8:	6918      	ldr	r0, [r3, #16]
 80008da:	47c8      	blx	r9
 80008dc:	f385 8811 	msr	BASEPRI, r5
 80008e0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80008e2:	f8b6 c026 	ldrh.w	ip, [r6, #38]	; 0x26
 80008e6:	69f3      	ldr	r3, [r6, #28]
 80008e8:	b280      	uxth	r0, r0
 80008ea:	eba0 010c 	sub.w	r1, r0, ip
 80008ee:	891a      	ldrh	r2, [r3, #8]
 80008f0:	b289      	uxth	r1, r1
 80008f2:	428a      	cmp	r2, r1
 80008f4:	d9e2      	bls.n	80008bc <VectorB0+0x3c>
 80008f6:	4543      	cmp	r3, r8
 80008f8:	d00a      	beq.n	8000910 <VectorB0+0x90>
 80008fa:	4462      	add	r2, ip
 80008fc:	1a12      	subs	r2, r2, r0
 80008fe:	b292      	uxth	r2, r2
 8000900:	2a02      	cmp	r2, #2
 8000902:	bf2c      	ite	cs
 8000904:	1882      	addcs	r2, r0, r2
 8000906:	1c82      	addcc	r2, r0, #2
 8000908:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800090c:	b292      	uxth	r2, r2
 800090e:	635a      	str	r2, [r3, #52]	; 0x34
 8000910:	2300      	movs	r3, #0
 8000912:	f383 8811 	msr	BASEPRI, r3
 8000916:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800091a:	f7ff bf81 	b.w	8000820 <_port_irq_epilogue>
 800091e:	bf00      	nop
 8000920:	20000930 	.word	0x20000930
	...

08000930 <SVC_Handler>:
 8000930:	b480      	push	{r7}
 8000932:	af00      	add	r7, sp, #0
 8000934:	f3ef 8309 	mrs	r3, PSP
 8000938:	3320      	adds	r3, #32
 800093a:	f383 8809 	msr	PSP, r3
 800093e:	2300      	movs	r3, #0
 8000940:	f383 8811 	msr	BASEPRI, r3
 8000944:	46bd      	mov	sp, r7
 8000946:	bc80      	pop	{r7}
 8000948:	4770      	bx	lr
 800094a:	bf00      	nop
 800094c:	0000      	movs	r0, r0
	...

08000950 <chPoolAlloc>:
 8000950:	b508      	push	{r3, lr}
 8000952:	2220      	movs	r2, #32
 8000954:	4603      	mov	r3, r0
 8000956:	f382 8811 	msr	BASEPRI, r2
 800095a:	6800      	ldr	r0, [r0, #0]
 800095c:	b128      	cbz	r0, 800096a <chPoolAlloc+0x1a>
 800095e:	6802      	ldr	r2, [r0, #0]
 8000960:	601a      	str	r2, [r3, #0]
 8000962:	2300      	movs	r3, #0
 8000964:	f383 8811 	msr	BASEPRI, r3
 8000968:	bd08      	pop	{r3, pc}
 800096a:	689a      	ldr	r2, [r3, #8]
 800096c:	2a00      	cmp	r2, #0
 800096e:	d0f8      	beq.n	8000962 <chPoolAlloc+0x12>
 8000970:	6858      	ldr	r0, [r3, #4]
 8000972:	4790      	blx	r2
 8000974:	2300      	movs	r3, #0
 8000976:	f383 8811 	msr	BASEPRI, r3
 800097a:	bd08      	pop	{r3, pc}
 800097c:	0000      	movs	r0, r0
	...

08000980 <pools1_execute>:
 8000980:	b570      	push	{r4, r5, r6, lr}
 8000982:	4b31      	ldr	r3, [pc, #196]	; (8000a48 <pools1_execute+0xc8>)
 8000984:	4c31      	ldr	r4, [pc, #196]	; (8000a4c <pools1_execute+0xcc>)
 8000986:	2205      	movs	r2, #5
 8000988:	2520      	movs	r5, #32
 800098a:	2000      	movs	r0, #0
 800098c:	f385 8811 	msr	BASEPRI, r5
 8000990:	6821      	ldr	r1, [r4, #0]
 8000992:	6019      	str	r1, [r3, #0]
 8000994:	6023      	str	r3, [r4, #0]
 8000996:	f380 8811 	msr	BASEPRI, r0
 800099a:	6861      	ldr	r1, [r4, #4]
 800099c:	3a01      	subs	r2, #1
 800099e:	440b      	add	r3, r1
 80009a0:	d1f4      	bne.n	800098c <pools1_execute+0xc>
 80009a2:	4e2a      	ldr	r6, [pc, #168]	; (8000a4c <pools1_execute+0xcc>)
 80009a4:	2505      	movs	r5, #5
 80009a6:	4630      	mov	r0, r6
 80009a8:	f7ff ffd2 	bl	8000950 <chPoolAlloc>
 80009ac:	1c01      	adds	r1, r0, #0
 80009ae:	bf18      	it	ne
 80009b0:	2101      	movne	r1, #1
 80009b2:	2001      	movs	r0, #1
 80009b4:	f7ff feac 	bl	8000710 <_test_assert>
 80009b8:	bba0      	cbnz	r0, 8000a24 <pools1_execute+0xa4>
 80009ba:	3d01      	subs	r5, #1
 80009bc:	d1f3      	bne.n	80009a6 <pools1_execute+0x26>
 80009be:	4823      	ldr	r0, [pc, #140]	; (8000a4c <pools1_execute+0xcc>)
 80009c0:	f7ff ffc6 	bl	8000950 <chPoolAlloc>
 80009c4:	fab0 f180 	clz	r1, r0
 80009c8:	0949      	lsrs	r1, r1, #5
 80009ca:	2002      	movs	r0, #2
 80009cc:	f7ff fea0 	bl	8000710 <_test_assert>
 80009d0:	bb40      	cbnz	r0, 8000a24 <pools1_execute+0xa4>
 80009d2:	4a1f      	ldr	r2, [pc, #124]	; (8000a50 <pools1_execute+0xd0>)
 80009d4:	4b1c      	ldr	r3, [pc, #112]	; (8000a48 <pools1_execute+0xc8>)
 80009d6:	f102 0610 	add.w	r6, r2, #16
 80009da:	2020      	movs	r0, #32
 80009dc:	f380 8811 	msr	BASEPRI, r0
 80009e0:	6821      	ldr	r1, [r4, #0]
 80009e2:	6019      	str	r1, [r3, #0]
 80009e4:	6023      	str	r3, [r4, #0]
 80009e6:	f385 8811 	msr	BASEPRI, r5
 80009ea:	4296      	cmp	r6, r2
 80009ec:	d002      	beq.n	80009f4 <pools1_execute+0x74>
 80009ee:	f852 3b04 	ldr.w	r3, [r2], #4
 80009f2:	e7f3      	b.n	80009dc <pools1_execute+0x5c>
 80009f4:	4e15      	ldr	r6, [pc, #84]	; (8000a4c <pools1_execute+0xcc>)
 80009f6:	2505      	movs	r5, #5
 80009f8:	4630      	mov	r0, r6
 80009fa:	f7ff ffa9 	bl	8000950 <chPoolAlloc>
 80009fe:	1c01      	adds	r1, r0, #0
 8000a00:	bf18      	it	ne
 8000a02:	2101      	movne	r1, #1
 8000a04:	2003      	movs	r0, #3
 8000a06:	f7ff fe83 	bl	8000710 <_test_assert>
 8000a0a:	b958      	cbnz	r0, 8000a24 <pools1_execute+0xa4>
 8000a0c:	3d01      	subs	r5, #1
 8000a0e:	d1f3      	bne.n	80009f8 <pools1_execute+0x78>
 8000a10:	480e      	ldr	r0, [pc, #56]	; (8000a4c <pools1_execute+0xcc>)
 8000a12:	f7ff ff9d 	bl	8000950 <chPoolAlloc>
 8000a16:	fab0 f180 	clz	r1, r0
 8000a1a:	0949      	lsrs	r1, r1, #5
 8000a1c:	2004      	movs	r0, #4
 8000a1e:	f7ff fe77 	bl	8000710 <_test_assert>
 8000a22:	b100      	cbz	r0, 8000a26 <pools1_execute+0xa6>
 8000a24:	bd70      	pop	{r4, r5, r6, pc}
 8000a26:	2210      	movs	r2, #16
 8000a28:	4b0a      	ldr	r3, [pc, #40]	; (8000a54 <pools1_execute+0xd4>)
 8000a2a:	4808      	ldr	r0, [pc, #32]	; (8000a4c <pools1_execute+0xcc>)
 8000a2c:	60a3      	str	r3, [r4, #8]
 8000a2e:	e9c4 5200 	strd	r5, r2, [r4]
 8000a32:	f7ff ff8d 	bl	8000950 <chPoolAlloc>
 8000a36:	fab0 f180 	clz	r1, r0
 8000a3a:	0949      	lsrs	r1, r1, #5
 8000a3c:	2005      	movs	r0, #5
 8000a3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000a42:	f7ff be65 	b.w	8000710 <_test_assert>
 8000a46:	bf00      	nop
 8000a48:	20000b38 	.word	0x20000b38
 8000a4c:	2000087c 	.word	0x2000087c
 8000a50:	08006884 	.word	0x08006884
 8000a54:	08000401 	.word	0x08000401
	...

08000a60 <chEvtUnregister>:
 8000a60:	2320      	movs	r3, #32
 8000a62:	f383 8811 	msr	BASEPRI, r3
 8000a66:	4602      	mov	r2, r0
 8000a68:	e002      	b.n	8000a70 <chEvtUnregister+0x10>
 8000a6a:	428b      	cmp	r3, r1
 8000a6c:	d007      	beq.n	8000a7e <chEvtUnregister+0x1e>
 8000a6e:	461a      	mov	r2, r3
 8000a70:	6813      	ldr	r3, [r2, #0]
 8000a72:	4283      	cmp	r3, r0
 8000a74:	d1f9      	bne.n	8000a6a <chEvtUnregister+0xa>
 8000a76:	2300      	movs	r3, #0
 8000a78:	f383 8811 	msr	BASEPRI, r3
 8000a7c:	4770      	bx	lr
 8000a7e:	680b      	ldr	r3, [r1, #0]
 8000a80:	6013      	str	r3, [r2, #0]
 8000a82:	2300      	movs	r3, #0
 8000a84:	f383 8811 	msr	BASEPRI, r3
 8000a88:	4770      	bx	lr
 8000a8a:	bf00      	nop
 8000a8c:	0000      	movs	r0, r0
	...

08000a90 <evt1_execute>:
 8000a90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a94:	4c33      	ldr	r4, [pc, #204]	; (8000b64 <evt1_execute+0xd4>)
 8000a96:	b08a      	sub	sp, #40	; 0x28
 8000a98:	2020      	movs	r0, #32
 8000a9a:	6024      	str	r4, [r4, #0]
 8000a9c:	f380 8811 	msr	BASEPRI, r0
 8000aa0:	4931      	ldr	r1, [pc, #196]	; (8000b68 <evt1_execute+0xd8>)
 8000aa2:	6823      	ldr	r3, [r4, #0]
 8000aa4:	ad0a      	add	r5, sp, #40	; 0x28
 8000aa6:	2701      	movs	r7, #1
 8000aa8:	f845 3d14 	str.w	r3, [r5, #-20]!
 8000aac:	698b      	ldr	r3, [r1, #24]
 8000aae:	9306      	str	r3, [sp, #24]
 8000ab0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000ab4:	2300      	movs	r3, #0
 8000ab6:	6025      	str	r5, [r4, #0]
 8000ab8:	e9cd 7307 	strd	r7, r3, [sp, #28]
 8000abc:	9209      	str	r2, [sp, #36]	; 0x24
 8000abe:	f383 8811 	msr	BASEPRI, r3
 8000ac2:	f380 8811 	msr	BASEPRI, r0
 8000ac6:	ae0a      	add	r6, sp, #40	; 0x28
 8000ac8:	6820      	ldr	r0, [r4, #0]
 8000aca:	f846 0d28 	str.w	r0, [r6, #-40]!
 8000ace:	6989      	ldr	r1, [r1, #24]
 8000ad0:	9101      	str	r1, [sp, #4]
 8000ad2:	f04f 0802 	mov.w	r8, #2
 8000ad6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8000ada:	6026      	str	r6, [r4, #0]
 8000adc:	f8cd 8008 	str.w	r8, [sp, #8]
 8000ae0:	f383 8811 	msr	BASEPRI, r3
 8000ae4:	6821      	ldr	r1, [r4, #0]
 8000ae6:	1b09      	subs	r1, r1, r4
 8000ae8:	bf18      	it	ne
 8000aea:	2101      	movne	r1, #1
 8000aec:	4638      	mov	r0, r7
 8000aee:	f7ff fe0f 	bl	8000710 <_test_assert>
 8000af2:	b110      	cbz	r0, 8000afa <evt1_execute+0x6a>
 8000af4:	b00a      	add	sp, #40	; 0x28
 8000af6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000afa:	4629      	mov	r1, r5
 8000afc:	4620      	mov	r0, r4
 8000afe:	f7ff ffaf 	bl	8000a60 <chEvtUnregister>
 8000b02:	6821      	ldr	r1, [r4, #0]
 8000b04:	1b09      	subs	r1, r1, r4
 8000b06:	bf18      	it	ne
 8000b08:	2101      	movne	r1, #1
 8000b0a:	4640      	mov	r0, r8
 8000b0c:	f7ff fe00 	bl	8000710 <_test_assert>
 8000b10:	2800      	cmp	r0, #0
 8000b12:	d1ef      	bne.n	8000af4 <evt1_execute+0x64>
 8000b14:	4631      	mov	r1, r6
 8000b16:	4620      	mov	r0, r4
 8000b18:	f7ff ffa2 	bl	8000a60 <chEvtUnregister>
 8000b1c:	6821      	ldr	r1, [r4, #0]
 8000b1e:	1b09      	subs	r1, r1, r4
 8000b20:	fab1 f181 	clz	r1, r1
 8000b24:	2003      	movs	r0, #3
 8000b26:	0949      	lsrs	r1, r1, #5
 8000b28:	f7ff fdf2 	bl	8000710 <_test_assert>
 8000b2c:	2800      	cmp	r0, #0
 8000b2e:	d1e1      	bne.n	8000af4 <evt1_execute+0x64>
 8000b30:	4e0e      	ldr	r6, [pc, #56]	; (8000b6c <evt1_execute+0xdc>)
 8000b32:	4604      	mov	r4, r0
 8000b34:	2507      	movs	r5, #7
 8000b36:	fa25 f304 	lsr.w	r3, r5, r4
 8000b3a:	f013 0f01 	tst.w	r3, #1
 8000b3e:	fa07 f204 	lsl.w	r2, r7, r4
 8000b42:	4620      	mov	r0, r4
 8000b44:	d00c      	beq.n	8000b60 <evt1_execute+0xd0>
 8000b46:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8000b4a:	ea25 0502 	bic.w	r5, r5, r2
 8000b4e:	3401      	adds	r4, #1
 8000b50:	4798      	blx	r3
 8000b52:	2d00      	cmp	r5, #0
 8000b54:	d1ef      	bne.n	8000b36 <evt1_execute+0xa6>
 8000b56:	4906      	ldr	r1, [pc, #24]	; (8000b70 <evt1_execute+0xe0>)
 8000b58:	2004      	movs	r0, #4
 8000b5a:	f7ff fdb1 	bl	80006c0 <_test_assert_sequence>
 8000b5e:	e7c9      	b.n	8000af4 <evt1_execute+0x64>
 8000b60:	3401      	adds	r4, #1
 8000b62:	e7e8      	b.n	8000b36 <evt1_execute+0xa6>
 8000b64:	20000808 	.word	0x20000808
 8000b68:	20000930 	.word	0x20000930
 8000b6c:	08005d30 	.word	0x08005d30
 8000b70:	08005d40 	.word	0x08005d40
	...

08000b80 <chTMStopMeasurementX>:
 8000b80:	4b0e      	ldr	r3, [pc, #56]	; (8000bbc <chTMStopMeasurementX+0x3c>)
 8000b82:	4a0f      	ldr	r2, [pc, #60]	; (8000bc0 <chTMStopMeasurementX+0x40>)
 8000b84:	685b      	ldr	r3, [r3, #4]
 8000b86:	68c1      	ldr	r1, [r0, #12]
 8000b88:	b4f0      	push	{r4, r5, r6, r7}
 8000b8a:	6884      	ldr	r4, [r0, #8]
 8000b8c:	6f16      	ldr	r6, [r2, #112]	; 0x70
 8000b8e:	6842      	ldr	r2, [r0, #4]
 8000b90:	1b1b      	subs	r3, r3, r4
 8000b92:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
 8000b96:	1b9b      	subs	r3, r3, r6
 8000b98:	18e6      	adds	r6, r4, r3
 8000b9a:	f145 0700 	adc.w	r7, r5, #0
 8000b9e:	3101      	adds	r1, #1
 8000ba0:	4293      	cmp	r3, r2
 8000ba2:	e9c0 3102 	strd	r3, r1, [r0, #8]
 8000ba6:	e9c0 6704 	strd	r6, r7, [r0, #16]
 8000baa:	d805      	bhi.n	8000bb8 <chTMStopMeasurementX+0x38>
 8000bac:	6802      	ldr	r2, [r0, #0]
 8000bae:	4293      	cmp	r3, r2
 8000bb0:	bf38      	it	cc
 8000bb2:	6003      	strcc	r3, [r0, #0]
 8000bb4:	bcf0      	pop	{r4, r5, r6, r7}
 8000bb6:	4770      	bx	lr
 8000bb8:	6043      	str	r3, [r0, #4]
 8000bba:	e7fb      	b.n	8000bb4 <chTMStopMeasurementX+0x34>
 8000bbc:	e0001000 	.word	0xe0001000
 8000bc0:	20000930 	.word	0x20000930
	...

08000bd0 <wakeup>:
 8000bd0:	2320      	movs	r3, #32
 8000bd2:	f383 8811 	msr	BASEPRI, r3
 8000bd6:	7f03      	ldrb	r3, [r0, #28]
 8000bd8:	2b07      	cmp	r3, #7
 8000bda:	d80e      	bhi.n	8000bfa <wakeup+0x2a>
 8000bdc:	e8df f003 	tbb	[pc, r3]
 8000be0:	230d0d27 	.word	0x230d0d27
 8000be4:	080d0408 	.word	0x080d0408
 8000be8:	6a02      	ldr	r2, [r0, #32]
 8000bea:	6893      	ldr	r3, [r2, #8]
 8000bec:	3301      	adds	r3, #1
 8000bee:	6093      	str	r3, [r2, #8]
 8000bf0:	e9d0 2300 	ldrd	r2, r3, [r0]
 8000bf4:	601a      	str	r2, [r3, #0]
 8000bf6:	6802      	ldr	r2, [r0, #0]
 8000bf8:	6053      	str	r3, [r2, #4]
 8000bfa:	b410      	push	{r4}
 8000bfc:	2200      	movs	r2, #0
 8000bfe:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000c02:	6881      	ldr	r1, [r0, #8]
 8000c04:	4b0c      	ldr	r3, [pc, #48]	; (8000c38 <wakeup+0x68>)
 8000c06:	6204      	str	r4, [r0, #32]
 8000c08:	7702      	strb	r2, [r0, #28]
 8000c0a:	681b      	ldr	r3, [r3, #0]
 8000c0c:	689a      	ldr	r2, [r3, #8]
 8000c0e:	428a      	cmp	r2, r1
 8000c10:	d2fb      	bcs.n	8000c0a <wakeup+0x3a>
 8000c12:	685a      	ldr	r2, [r3, #4]
 8000c14:	2100      	movs	r1, #0
 8000c16:	e9c0 3200 	strd	r3, r2, [r0]
 8000c1a:	6010      	str	r0, [r2, #0]
 8000c1c:	6058      	str	r0, [r3, #4]
 8000c1e:	f381 8811 	msr	BASEPRI, r1
 8000c22:	bc10      	pop	{r4}
 8000c24:	4770      	bx	lr
 8000c26:	6a03      	ldr	r3, [r0, #32]
 8000c28:	2200      	movs	r2, #0
 8000c2a:	601a      	str	r2, [r3, #0]
 8000c2c:	e7e5      	b.n	8000bfa <wakeup+0x2a>
 8000c2e:	2300      	movs	r3, #0
 8000c30:	f383 8811 	msr	BASEPRI, r3
 8000c34:	4770      	bx	lr
 8000c36:	bf00      	nop
 8000c38:	20000930 	.word	0x20000930
 8000c3c:	00000000 	.word	0x00000000

08000c40 <chSchReadyI>:
 8000c40:	4601      	mov	r1, r0
 8000c42:	2200      	movs	r2, #0
 8000c44:	4b06      	ldr	r3, [pc, #24]	; (8000c60 <chSchReadyI+0x20>)
 8000c46:	6880      	ldr	r0, [r0, #8]
 8000c48:	770a      	strb	r2, [r1, #28]
 8000c4a:	681b      	ldr	r3, [r3, #0]
 8000c4c:	689a      	ldr	r2, [r3, #8]
 8000c4e:	4282      	cmp	r2, r0
 8000c50:	d2fb      	bcs.n	8000c4a <chSchReadyI+0xa>
 8000c52:	685a      	ldr	r2, [r3, #4]
 8000c54:	4608      	mov	r0, r1
 8000c56:	e9c1 3200 	strd	r3, r2, [r1]
 8000c5a:	6011      	str	r1, [r2, #0]
 8000c5c:	6059      	str	r1, [r3, #4]
 8000c5e:	4770      	bx	lr
 8000c60:	20000930 	.word	0x20000930
	...

08000c70 <chCondSignalI.constprop.42>:
 8000c70:	4b07      	ldr	r3, [pc, #28]	; (8000c90 <chCondSignalI.constprop.42+0x20>)
 8000c72:	681a      	ldr	r2, [r3, #0]
 8000c74:	429a      	cmp	r2, r3
 8000c76:	d009      	beq.n	8000c8c <chCondSignalI.constprop.42+0x1c>
 8000c78:	6811      	ldr	r1, [r2, #0]
 8000c7a:	b410      	push	{r4}
 8000c7c:	2400      	movs	r4, #0
 8000c7e:	604b      	str	r3, [r1, #4]
 8000c80:	6019      	str	r1, [r3, #0]
 8000c82:	6214      	str	r4, [r2, #32]
 8000c84:	4610      	mov	r0, r2
 8000c86:	bc10      	pop	{r4}
 8000c88:	f7ff bfda 	b.w	8000c40 <chSchReadyI>
 8000c8c:	4770      	bx	lr
 8000c8e:	bf00      	nop
 8000c90:	20000800 	.word	0x20000800
	...

08000ca0 <chIQPutI>:
 8000ca0:	b510      	push	{r4, lr}
 8000ca2:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 8000ca6:	42a2      	cmp	r2, r4
 8000ca8:	6883      	ldr	r3, [r0, #8]
 8000caa:	d01c      	beq.n	8000ce6 <chIQPutI+0x46>
 8000cac:	3301      	adds	r3, #1
 8000cae:	1c54      	adds	r4, r2, #1
 8000cb0:	6083      	str	r3, [r0, #8]
 8000cb2:	6144      	str	r4, [r0, #20]
 8000cb4:	7011      	strb	r1, [r2, #0]
 8000cb6:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
 8000cba:	429a      	cmp	r2, r3
 8000cbc:	d20c      	bcs.n	8000cd8 <chIQPutI+0x38>
 8000cbe:	6803      	ldr	r3, [r0, #0]
 8000cc0:	4298      	cmp	r0, r3
 8000cc2:	d00e      	beq.n	8000ce2 <chIQPutI+0x42>
 8000cc4:	681a      	ldr	r2, [r3, #0]
 8000cc6:	6002      	str	r2, [r0, #0]
 8000cc8:	2400      	movs	r4, #0
 8000cca:	6050      	str	r0, [r2, #4]
 8000ccc:	4618      	mov	r0, r3
 8000cce:	621c      	str	r4, [r3, #32]
 8000cd0:	f7ff ffb6 	bl	8000c40 <chSchReadyI>
 8000cd4:	4620      	mov	r0, r4
 8000cd6:	bd10      	pop	{r4, pc}
 8000cd8:	68c3      	ldr	r3, [r0, #12]
 8000cda:	6143      	str	r3, [r0, #20]
 8000cdc:	6803      	ldr	r3, [r0, #0]
 8000cde:	4298      	cmp	r0, r3
 8000ce0:	d1f0      	bne.n	8000cc4 <chIQPutI+0x24>
 8000ce2:	2000      	movs	r0, #0
 8000ce4:	bd10      	pop	{r4, pc}
 8000ce6:	2b00      	cmp	r3, #0
 8000ce8:	d0e0      	beq.n	8000cac <chIQPutI+0xc>
 8000cea:	f06f 0003 	mvn.w	r0, #3
 8000cee:	bd10      	pop	{r4, pc}

08000cf0 <chOQGetI>:
 8000cf0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8000cf4:	4291      	cmp	r1, r2
 8000cf6:	b538      	push	{r3, r4, r5, lr}
 8000cf8:	6883      	ldr	r3, [r0, #8]
 8000cfa:	d017      	beq.n	8000d2c <chOQGetI+0x3c>
 8000cfc:	6905      	ldr	r5, [r0, #16]
 8000cfe:	1c51      	adds	r1, r2, #1
 8000d00:	3301      	adds	r3, #1
 8000d02:	6083      	str	r3, [r0, #8]
 8000d04:	6181      	str	r1, [r0, #24]
 8000d06:	42a9      	cmp	r1, r5
 8000d08:	7814      	ldrb	r4, [r2, #0]
 8000d0a:	d20c      	bcs.n	8000d26 <chOQGetI+0x36>
 8000d0c:	6803      	ldr	r3, [r0, #0]
 8000d0e:	4298      	cmp	r0, r3
 8000d10:	d007      	beq.n	8000d22 <chOQGetI+0x32>
 8000d12:	681a      	ldr	r2, [r3, #0]
 8000d14:	6002      	str	r2, [r0, #0]
 8000d16:	2100      	movs	r1, #0
 8000d18:	6050      	str	r0, [r2, #4]
 8000d1a:	4618      	mov	r0, r3
 8000d1c:	6219      	str	r1, [r3, #32]
 8000d1e:	f7ff ff8f 	bl	8000c40 <chSchReadyI>
 8000d22:	4620      	mov	r0, r4
 8000d24:	bd38      	pop	{r3, r4, r5, pc}
 8000d26:	68c3      	ldr	r3, [r0, #12]
 8000d28:	6183      	str	r3, [r0, #24]
 8000d2a:	e7ef      	b.n	8000d0c <chOQGetI+0x1c>
 8000d2c:	2b00      	cmp	r3, #0
 8000d2e:	d0e5      	beq.n	8000cfc <chOQGetI+0xc>
 8000d30:	f06f 0002 	mvn.w	r0, #2
 8000d34:	bd38      	pop	{r3, r4, r5, pc}
 8000d36:	bf00      	nop
	...

08000d40 <chEvtSignalI>:
 8000d40:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8000d42:	7f02      	ldrb	r2, [r0, #28]
 8000d44:	4319      	orrs	r1, r3
 8000d46:	2a0a      	cmp	r2, #10
 8000d48:	6341      	str	r1, [r0, #52]	; 0x34
 8000d4a:	d009      	beq.n	8000d60 <chEvtSignalI+0x20>
 8000d4c:	2a0b      	cmp	r2, #11
 8000d4e:	d000      	beq.n	8000d52 <chEvtSignalI+0x12>
 8000d50:	4770      	bx	lr
 8000d52:	6a03      	ldr	r3, [r0, #32]
 8000d54:	438b      	bics	r3, r1
 8000d56:	d1fb      	bne.n	8000d50 <chEvtSignalI+0x10>
 8000d58:	2300      	movs	r3, #0
 8000d5a:	6203      	str	r3, [r0, #32]
 8000d5c:	f7ff bf70 	b.w	8000c40 <chSchReadyI>
 8000d60:	6a03      	ldr	r3, [r0, #32]
 8000d62:	4219      	tst	r1, r3
 8000d64:	d1f8      	bne.n	8000d58 <chEvtSignalI+0x18>
 8000d66:	4770      	bx	lr
	...

08000d70 <chEvtBroadcastFlagsI>:
 8000d70:	b570      	push	{r4, r5, r6, lr}
 8000d72:	6804      	ldr	r4, [r0, #0]
 8000d74:	42a0      	cmp	r0, r4
 8000d76:	d00f      	beq.n	8000d98 <chEvtBroadcastFlagsI+0x28>
 8000d78:	4606      	mov	r6, r0
 8000d7a:	460d      	mov	r5, r1
 8000d7c:	68e3      	ldr	r3, [r4, #12]
 8000d7e:	432b      	orrs	r3, r5
 8000d80:	60e3      	str	r3, [r4, #12]
 8000d82:	b115      	cbz	r5, 8000d8a <chEvtBroadcastFlagsI+0x1a>
 8000d84:	6922      	ldr	r2, [r4, #16]
 8000d86:	4213      	tst	r3, r2
 8000d88:	d003      	beq.n	8000d92 <chEvtBroadcastFlagsI+0x22>
 8000d8a:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 8000d8e:	f7ff ffd7 	bl	8000d40 <chEvtSignalI>
 8000d92:	6824      	ldr	r4, [r4, #0]
 8000d94:	42a6      	cmp	r6, r4
 8000d96:	d1f1      	bne.n	8000d7c <chEvtBroadcastFlagsI+0xc>
 8000d98:	bd70      	pop	{r4, r5, r6, pc}
 8000d9a:	bf00      	nop
 8000d9c:	0000      	movs	r0, r0
	...

08000da0 <VectorD8>:
 8000da0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000da4:	4f52      	ldr	r7, [pc, #328]	; (8000ef0 <VectorD8+0x150>)
 8000da6:	f8d7 a074 	ldr.w	sl, [r7, #116]	; 0x74
 8000daa:	f8ba 600c 	ldrh.w	r6, [sl, #12]
 8000dae:	f8ba 4000 	ldrh.w	r4, [sl]
 8000db2:	b2a4      	uxth	r4, r4
 8000db4:	05e5      	lsls	r5, r4, #23
 8000db6:	b2b6      	uxth	r6, r6
 8000db8:	d467      	bmi.n	8000e8a <VectorD8+0xea>
 8000dba:	2320      	movs	r3, #32
 8000dbc:	f383 8811 	msr	BASEPRI, r3
 8000dc0:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000dc4:	d03c      	beq.n	8000e40 <VectorD8+0xa0>
 8000dc6:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8000ef8 <VectorD8+0x158>
 8000dca:	f108 0908 	add.w	r9, r8, #8
 8000dce:	e00a      	b.n	8000de6 <VectorD8+0x46>
 8000dd0:	f8ba 1004 	ldrh.w	r1, [sl, #4]
 8000dd4:	06a0      	lsls	r0, r4, #26
 8000dd6:	b28d      	uxth	r5, r1
 8000dd8:	d420      	bmi.n	8000e1c <VectorD8+0x7c>
 8000dda:	f8ba 4000 	ldrh.w	r4, [sl]
 8000dde:	b2a4      	uxth	r4, r4
 8000de0:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000de4:	d02c      	beq.n	8000e40 <VectorD8+0xa0>
 8000de6:	0720      	lsls	r0, r4, #28
 8000de8:	d0f2      	beq.n	8000dd0 <VectorD8+0x30>
 8000dea:	f014 0f08 	tst.w	r4, #8
 8000dee:	bf0c      	ite	eq
 8000df0:	2100      	moveq	r1, #0
 8000df2:	2180      	movne	r1, #128	; 0x80
 8000df4:	07e2      	lsls	r2, r4, #31
 8000df6:	bf48      	it	mi
 8000df8:	f041 0120 	orrmi.w	r1, r1, #32
 8000dfc:	07a3      	lsls	r3, r4, #30
 8000dfe:	bf48      	it	mi
 8000e00:	f041 0140 	orrmi.w	r1, r1, #64	; 0x40
 8000e04:	0765      	lsls	r5, r4, #29
 8000e06:	bf48      	it	mi
 8000e08:	f441 7180 	orrmi.w	r1, r1, #256	; 0x100
 8000e0c:	4640      	mov	r0, r8
 8000e0e:	f7ff ffaf 	bl	8000d70 <chEvtBroadcastFlagsI>
 8000e12:	f8ba 1004 	ldrh.w	r1, [sl, #4]
 8000e16:	06a0      	lsls	r0, r4, #26
 8000e18:	b28d      	uxth	r5, r1
 8000e1a:	d5de      	bpl.n	8000dda <VectorD8+0x3a>
 8000e1c:	697b      	ldr	r3, [r7, #20]
 8000e1e:	b37b      	cbz	r3, 8000e80 <VectorD8+0xe0>
 8000e20:	b2e9      	uxtb	r1, r5
 8000e22:	4648      	mov	r0, r9
 8000e24:	f7ff ff3c 	bl	8000ca0 <chIQPutI>
 8000e28:	2800      	cmp	r0, #0
 8000e2a:	dad6      	bge.n	8000dda <VectorD8+0x3a>
 8000e2c:	2180      	movs	r1, #128	; 0x80
 8000e2e:	4640      	mov	r0, r8
 8000e30:	f7ff ff9e 	bl	8000d70 <chEvtBroadcastFlagsI>
 8000e34:	f8ba 4000 	ldrh.w	r4, [sl]
 8000e38:	b2a4      	uxth	r4, r4
 8000e3a:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000e3e:	d1d2      	bne.n	8000de6 <VectorD8+0x46>
 8000e40:	2300      	movs	r3, #0
 8000e42:	f383 8811 	msr	BASEPRI, r3
 8000e46:	0631      	lsls	r1, r6, #24
 8000e48:	d501      	bpl.n	8000e4e <VectorD8+0xae>
 8000e4a:	0622      	lsls	r2, r4, #24
 8000e4c:	d42d      	bmi.n	8000eaa <VectorD8+0x10a>
 8000e4e:	0663      	lsls	r3, r4, #25
 8000e50:	d512      	bpl.n	8000e78 <VectorD8+0xd8>
 8000e52:	2320      	movs	r3, #32
 8000e54:	f383 8811 	msr	BASEPRI, r3
 8000e58:	e9d7 2311 	ldrd	r2, r3, [r7, #68]	; 0x44
 8000e5c:	429a      	cmp	r2, r3
 8000e5e:	d033      	beq.n	8000ec8 <VectorD8+0x128>
 8000e60:	f026 0640 	bic.w	r6, r6, #64	; 0x40
 8000e64:	b2b6      	uxth	r6, r6
 8000e66:	f64f 72bf 	movw	r2, #65471	; 0xffbf
 8000e6a:	f8aa 600c 	strh.w	r6, [sl, #12]
 8000e6e:	2300      	movs	r3, #0
 8000e70:	f8aa 2000 	strh.w	r2, [sl]
 8000e74:	f383 8811 	msr	BASEPRI, r3
 8000e78:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e7c:	f7ff bcd0 	b.w	8000820 <_port_irq_epilogue>
 8000e80:	2104      	movs	r1, #4
 8000e82:	4640      	mov	r0, r8
 8000e84:	f7ff ff74 	bl	8000d70 <chEvtBroadcastFlagsI>
 8000e88:	e7ca      	b.n	8000e20 <VectorD8+0x80>
 8000e8a:	2320      	movs	r3, #32
 8000e8c:	f383 8811 	msr	BASEPRI, r3
 8000e90:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000e94:	1d38      	adds	r0, r7, #4
 8000e96:	f7ff ff6b 	bl	8000d70 <chEvtBroadcastFlagsI>
 8000e9a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8000e9e:	f8aa 3000 	strh.w	r3, [sl]
 8000ea2:	2300      	movs	r3, #0
 8000ea4:	f383 8811 	msr	BASEPRI, r3
 8000ea8:	e787      	b.n	8000dba <VectorD8+0x1a>
 8000eaa:	2320      	movs	r3, #32
 8000eac:	f383 8811 	msr	BASEPRI, r3
 8000eb0:	4810      	ldr	r0, [pc, #64]	; (8000ef4 <VectorD8+0x154>)
 8000eb2:	f7ff ff1d 	bl	8000cf0 <chOQGetI>
 8000eb6:	2800      	cmp	r0, #0
 8000eb8:	db0e      	blt.n	8000ed8 <VectorD8+0x138>
 8000eba:	b280      	uxth	r0, r0
 8000ebc:	f8aa 0004 	strh.w	r0, [sl, #4]
 8000ec0:	2300      	movs	r3, #0
 8000ec2:	f383 8811 	msr	BASEPRI, r3
 8000ec6:	e7c2      	b.n	8000e4e <VectorD8+0xae>
 8000ec8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000eca:	2b00      	cmp	r3, #0
 8000ecc:	d0c8      	beq.n	8000e60 <VectorD8+0xc0>
 8000ece:	2110      	movs	r1, #16
 8000ed0:	4809      	ldr	r0, [pc, #36]	; (8000ef8 <VectorD8+0x158>)
 8000ed2:	f7ff ff4d 	bl	8000d70 <chEvtBroadcastFlagsI>
 8000ed6:	e7c3      	b.n	8000e60 <VectorD8+0xc0>
 8000ed8:	2108      	movs	r1, #8
 8000eda:	4807      	ldr	r0, [pc, #28]	; (8000ef8 <VectorD8+0x158>)
 8000edc:	f7ff ff48 	bl	8000d70 <chEvtBroadcastFlagsI>
 8000ee0:	f026 03c0 	bic.w	r3, r6, #192	; 0xc0
 8000ee4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000ee8:	f8aa 300c 	strh.w	r3, [sl, #12]
 8000eec:	e7e8      	b.n	8000ec0 <VectorD8+0x120>
 8000eee:	bf00      	nop
 8000ef0:	200008b8 	.word	0x200008b8
 8000ef4:	200008e8 	.word	0x200008e8
 8000ef8:	200008bc 	.word	0x200008bc
 8000efc:	00000000 	.word	0x00000000

08000f00 <chMtxUnlockS>:
 8000f00:	4b12      	ldr	r3, [pc, #72]	; (8000f4c <chMtxUnlockS+0x4c>)
 8000f02:	b430      	push	{r4, r5}
 8000f04:	6804      	ldr	r4, [r0, #0]
 8000f06:	699d      	ldr	r5, [r3, #24]
 8000f08:	68c3      	ldr	r3, [r0, #12]
 8000f0a:	63ab      	str	r3, [r5, #56]	; 0x38
 8000f0c:	4284      	cmp	r4, r0
 8000f0e:	d018      	beq.n	8000f42 <chMtxUnlockS+0x42>
 8000f10:	4601      	mov	r1, r0
 8000f12:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 8000f14:	b14b      	cbz	r3, 8000f2a <chMtxUnlockS+0x2a>
 8000f16:	681a      	ldr	r2, [r3, #0]
 8000f18:	4293      	cmp	r3, r2
 8000f1a:	d003      	beq.n	8000f24 <chMtxUnlockS+0x24>
 8000f1c:	6892      	ldr	r2, [r2, #8]
 8000f1e:	4290      	cmp	r0, r2
 8000f20:	bf38      	it	cc
 8000f22:	4610      	movcc	r0, r2
 8000f24:	68db      	ldr	r3, [r3, #12]
 8000f26:	2b00      	cmp	r3, #0
 8000f28:	d1f5      	bne.n	8000f16 <chMtxUnlockS+0x16>
 8000f2a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8000f2c:	6823      	ldr	r3, [r4, #0]
 8000f2e:	60a8      	str	r0, [r5, #8]
 8000f30:	600b      	str	r3, [r1, #0]
 8000f32:	4620      	mov	r0, r4
 8000f34:	6059      	str	r1, [r3, #4]
 8000f36:	e9c1 4202 	strd	r4, r2, [r1, #8]
 8000f3a:	63a1      	str	r1, [r4, #56]	; 0x38
 8000f3c:	bc30      	pop	{r4, r5}
 8000f3e:	f7ff be7f 	b.w	8000c40 <chSchReadyI>
 8000f42:	2300      	movs	r3, #0
 8000f44:	60a3      	str	r3, [r4, #8]
 8000f46:	bc30      	pop	{r4, r5}
 8000f48:	4770      	bx	lr
 8000f4a:	bf00      	nop
 8000f4c:	20000930 	.word	0x20000930

08000f50 <chSemSignalI>:
 8000f50:	6883      	ldr	r3, [r0, #8]
 8000f52:	3301      	adds	r3, #1
 8000f54:	2b00      	cmp	r3, #0
 8000f56:	6083      	str	r3, [r0, #8]
 8000f58:	dd00      	ble.n	8000f5c <chSemSignalI+0xc>
 8000f5a:	4770      	bx	lr
 8000f5c:	6803      	ldr	r3, [r0, #0]
 8000f5e:	681a      	ldr	r2, [r3, #0]
 8000f60:	6002      	str	r2, [r0, #0]
 8000f62:	2100      	movs	r1, #0
 8000f64:	6050      	str	r0, [r2, #4]
 8000f66:	4618      	mov	r0, r3
 8000f68:	6219      	str	r1, [r3, #32]
 8000f6a:	f7ff be69 	b.w	8000c40 <chSchReadyI>
 8000f6e:	bf00      	nop

08000f70 <chMBPostI.constprop.18>:
 8000f70:	b538      	push	{r3, r4, r5, lr}
 8000f72:	4b0c      	ldr	r3, [pc, #48]	; (8000fa4 <chMBPostI.constprop.18+0x34>)
 8000f74:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000f76:	2a00      	cmp	r2, #0
 8000f78:	dd10      	ble.n	8000f9c <chMBPostI.constprop.18+0x2c>
 8000f7a:	e9d3 5401 	ldrd	r5, r4, [r3, #4]
 8000f7e:	1d21      	adds	r1, r4, #4
 8000f80:	3a01      	subs	r2, #1
 8000f82:	42a9      	cmp	r1, r5
 8000f84:	625a      	str	r2, [r3, #36]	; 0x24
 8000f86:	6099      	str	r1, [r3, #8]
 8000f88:	bf28      	it	cs
 8000f8a:	681a      	ldrcs	r2, [r3, #0]
 8000f8c:	6020      	str	r0, [r4, #0]
 8000f8e:	4806      	ldr	r0, [pc, #24]	; (8000fa8 <chMBPostI.constprop.18+0x38>)
 8000f90:	bf28      	it	cs
 8000f92:	609a      	strcs	r2, [r3, #8]
 8000f94:	f7ff ffdc 	bl	8000f50 <chSemSignalI>
 8000f98:	2000      	movs	r0, #0
 8000f9a:	bd38      	pop	{r3, r4, r5, pc}
 8000f9c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000fa0:	bd38      	pop	{r3, r4, r5, pc}
 8000fa2:	bf00      	nop
 8000fa4:	20000854 	.word	0x20000854
 8000fa8:	20000864 	.word	0x20000864
 8000fac:	00000000 	.word	0x00000000

08000fb0 <chMBPostAheadI.constprop.16>:
 8000fb0:	4a0c      	ldr	r2, [pc, #48]	; (8000fe4 <chMBPostAheadI.constprop.16+0x34>)
 8000fb2:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8000fb4:	2900      	cmp	r1, #0
 8000fb6:	dd11      	ble.n	8000fdc <chMBPostAheadI.constprop.16+0x2c>
 8000fb8:	68d3      	ldr	r3, [r2, #12]
 8000fba:	b510      	push	{r4, lr}
 8000fbc:	6814      	ldr	r4, [r2, #0]
 8000fbe:	3b04      	subs	r3, #4
 8000fc0:	3901      	subs	r1, #1
 8000fc2:	42a3      	cmp	r3, r4
 8000fc4:	6251      	str	r1, [r2, #36]	; 0x24
 8000fc6:	60d3      	str	r3, [r2, #12]
 8000fc8:	d202      	bcs.n	8000fd0 <chMBPostAheadI.constprop.16+0x20>
 8000fca:	6853      	ldr	r3, [r2, #4]
 8000fcc:	3b04      	subs	r3, #4
 8000fce:	60d3      	str	r3, [r2, #12]
 8000fd0:	6018      	str	r0, [r3, #0]
 8000fd2:	4805      	ldr	r0, [pc, #20]	; (8000fe8 <chMBPostAheadI.constprop.16+0x38>)
 8000fd4:	f7ff ffbc 	bl	8000f50 <chSemSignalI>
 8000fd8:	2000      	movs	r0, #0
 8000fda:	bd10      	pop	{r4, pc}
 8000fdc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000fe0:	4770      	bx	lr
 8000fe2:	bf00      	nop
 8000fe4:	20000854 	.word	0x20000854
 8000fe8:	20000864 	.word	0x20000864
 8000fec:	00000000 	.word	0x00000000

08000ff0 <chMBFetchI.constprop.14>:
 8000ff0:	4b0c      	ldr	r3, [pc, #48]	; (8001024 <chMBFetchI.constprop.14+0x34>)
 8000ff2:	6999      	ldr	r1, [r3, #24]
 8000ff4:	2900      	cmp	r1, #0
 8000ff6:	dd12      	ble.n	800101e <chMBFetchI.constprop.14+0x2e>
 8000ff8:	b510      	push	{r4, lr}
 8000ffa:	68da      	ldr	r2, [r3, #12]
 8000ffc:	3901      	subs	r1, #1
 8000ffe:	6199      	str	r1, [r3, #24]
 8001000:	6859      	ldr	r1, [r3, #4]
 8001002:	6814      	ldr	r4, [r2, #0]
 8001004:	3204      	adds	r2, #4
 8001006:	428a      	cmp	r2, r1
 8001008:	60da      	str	r2, [r3, #12]
 800100a:	6004      	str	r4, [r0, #0]
 800100c:	bf28      	it	cs
 800100e:	681a      	ldrcs	r2, [r3, #0]
 8001010:	4805      	ldr	r0, [pc, #20]	; (8001028 <chMBFetchI.constprop.14+0x38>)
 8001012:	bf28      	it	cs
 8001014:	60da      	strcs	r2, [r3, #12]
 8001016:	f7ff ff9b 	bl	8000f50 <chSemSignalI>
 800101a:	2000      	movs	r0, #0
 800101c:	bd10      	pop	{r4, pc}
 800101e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001022:	4770      	bx	lr
 8001024:	20000854 	.word	0x20000854
 8001028:	20000870 	.word	0x20000870
 800102c:	00000000 	.word	0x00000000

08001030 <chSemResetI>:
 8001030:	b570      	push	{r4, r5, r6, lr}
 8001032:	6885      	ldr	r5, [r0, #8]
 8001034:	6081      	str	r1, [r0, #8]
 8001036:	3501      	adds	r5, #1
 8001038:	2d00      	cmp	r5, #0
 800103a:	dc0c      	bgt.n	8001056 <chSemResetI+0x26>
 800103c:	4604      	mov	r4, r0
 800103e:	f06f 0601 	mvn.w	r6, #1
 8001042:	6860      	ldr	r0, [r4, #4]
 8001044:	6843      	ldr	r3, [r0, #4]
 8001046:	6063      	str	r3, [r4, #4]
 8001048:	601c      	str	r4, [r3, #0]
 800104a:	f7ff fdf9 	bl	8000c40 <chSchReadyI>
 800104e:	3501      	adds	r5, #1
 8001050:	2d01      	cmp	r5, #1
 8001052:	6206      	str	r6, [r0, #32]
 8001054:	d1f5      	bne.n	8001042 <chSemResetI+0x12>
 8001056:	bd70      	pop	{r4, r5, r6, pc}
	...

08001060 <chVTDoResetI>:
 8001060:	4b1c      	ldr	r3, [pc, #112]	; (80010d4 <chVTDoResetI+0x74>)
 8001062:	69da      	ldr	r2, [r3, #28]
 8001064:	4282      	cmp	r2, r0
 8001066:	b430      	push	{r4, r5}
 8001068:	d00f      	beq.n	800108a <chVTDoResetI+0x2a>
 800106a:	e9d0 2100 	ldrd	r2, r1, [r0]
 800106e:	600a      	str	r2, [r1, #0]
 8001070:	6802      	ldr	r2, [r0, #0]
 8001072:	331c      	adds	r3, #28
 8001074:	2400      	movs	r4, #0
 8001076:	429a      	cmp	r2, r3
 8001078:	6051      	str	r1, [r2, #4]
 800107a:	60c4      	str	r4, [r0, #12]
 800107c:	d003      	beq.n	8001086 <chVTDoResetI+0x26>
 800107e:	8901      	ldrh	r1, [r0, #8]
 8001080:	8913      	ldrh	r3, [r2, #8]
 8001082:	440b      	add	r3, r1
 8001084:	8113      	strh	r3, [r2, #8]
 8001086:	bc30      	pop	{r4, r5}
 8001088:	4770      	bx	lr
 800108a:	4618      	mov	r0, r3
 800108c:	6811      	ldr	r1, [r2, #0]
 800108e:	f840 1f1c 	str.w	r1, [r0, #28]!
 8001092:	2400      	movs	r4, #0
 8001094:	4281      	cmp	r1, r0
 8001096:	6048      	str	r0, [r1, #4]
 8001098:	60d4      	str	r4, [r2, #12]
 800109a:	d017      	beq.n	80010cc <chVTDoResetI+0x6c>
 800109c:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 80010a0:	8915      	ldrh	r5, [r2, #8]
 80010a2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80010a4:	8cd8      	ldrh	r0, [r3, #38]	; 0x26
 80010a6:	890b      	ldrh	r3, [r1, #8]
 80010a8:	b292      	uxth	r2, r2
 80010aa:	442b      	add	r3, r5
 80010ac:	1a10      	subs	r0, r2, r0
 80010ae:	b29b      	uxth	r3, r3
 80010b0:	b280      	uxth	r0, r0
 80010b2:	4283      	cmp	r3, r0
 80010b4:	810b      	strh	r3, [r1, #8]
 80010b6:	d9e6      	bls.n	8001086 <chVTDoResetI+0x26>
 80010b8:	1a1b      	subs	r3, r3, r0
 80010ba:	b29b      	uxth	r3, r3
 80010bc:	2b02      	cmp	r3, #2
 80010be:	bf2c      	ite	cs
 80010c0:	18d3      	addcs	r3, r2, r3
 80010c2:	1c93      	addcc	r3, r2, #2
 80010c4:	b29b      	uxth	r3, r3
 80010c6:	6363      	str	r3, [r4, #52]	; 0x34
 80010c8:	bc30      	pop	{r4, r5}
 80010ca:	4770      	bx	lr
 80010cc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010d0:	60dc      	str	r4, [r3, #12]
 80010d2:	e7d8      	b.n	8001086 <chVTDoResetI+0x26>
 80010d4:	20000930 	.word	0x20000930
	...

080010e0 <chVTDoSetI>:
 80010e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80010e2:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 80010e6:	4e1d      	ldr	r6, [pc, #116]	; (800115c <chVTDoSetI+0x7c>)
 80010e8:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 80010ea:	46b6      	mov	lr, r6
 80010ec:	2902      	cmp	r1, #2
 80010ee:	fa1f fc84 	uxth.w	ip, r4
 80010f2:	f85e 4f1c 	ldr.w	r4, [lr, #28]!
 80010f6:	6103      	str	r3, [r0, #16]
 80010f8:	bf38      	it	cc
 80010fa:	2102      	movcc	r1, #2
 80010fc:	eb01 050c 	add.w	r5, r1, ip
 8001100:	4574      	cmp	r4, lr
 8001102:	60c2      	str	r2, [r0, #12]
 8001104:	b2ad      	uxth	r5, r5
 8001106:	d01b      	beq.n	8001140 <chVTDoSetI+0x60>
 8001108:	8cf3      	ldrh	r3, [r6, #38]	; 0x26
 800110a:	8922      	ldrh	r2, [r4, #8]
 800110c:	1aeb      	subs	r3, r5, r3
 800110e:	b29b      	uxth	r3, r3
 8001110:	429a      	cmp	r2, r3
 8001112:	d904      	bls.n	800111e <chVTDoSetI+0x3e>
 8001114:	e012      	b.n	800113c <chVTDoSetI+0x5c>
 8001116:	6824      	ldr	r4, [r4, #0]
 8001118:	1a9b      	subs	r3, r3, r2
 800111a:	8922      	ldrh	r2, [r4, #8]
 800111c:	b29b      	uxth	r3, r3
 800111e:	429a      	cmp	r2, r3
 8001120:	d3f9      	bcc.n	8001116 <chVTDoSetI+0x36>
 8001122:	6862      	ldr	r2, [r4, #4]
 8001124:	e9c0 4200 	strd	r4, r2, [r0]
 8001128:	6010      	str	r0, [r2, #0]
 800112a:	6060      	str	r0, [r4, #4]
 800112c:	8103      	strh	r3, [r0, #8]
 800112e:	8922      	ldrh	r2, [r4, #8]
 8001130:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001134:	1ad3      	subs	r3, r2, r3
 8001136:	8123      	strh	r3, [r4, #8]
 8001138:	84b1      	strh	r1, [r6, #36]	; 0x24
 800113a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800113c:	637d      	str	r5, [r7, #52]	; 0x34
 800113e:	e7ee      	b.n	800111e <chVTDoSetI+0x3e>
 8001140:	2200      	movs	r2, #0
 8001142:	2302      	movs	r3, #2
 8001144:	f8a6 c026 	strh.w	ip, [r6, #38]	; 0x26
 8001148:	e9c6 0007 	strd	r0, r0, [r6, #28]
 800114c:	e9c0 4400 	strd	r4, r4, [r0]
 8001150:	8101      	strh	r1, [r0, #8]
 8001152:	637d      	str	r5, [r7, #52]	; 0x34
 8001154:	613a      	str	r2, [r7, #16]
 8001156:	60fb      	str	r3, [r7, #12]
 8001158:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800115a:	bf00      	nop
 800115c:	20000930 	.word	0x20000930

08001160 <test_start_timer.constprop.1>:
 8001160:	b508      	push	{r3, lr}
 8001162:	4b0b      	ldr	r3, [pc, #44]	; (8001190 <test_start_timer.constprop.1+0x30>)
 8001164:	2200      	movs	r2, #0
 8001166:	701a      	strb	r2, [r3, #0]
 8001168:	2320      	movs	r3, #32
 800116a:	f383 8811 	msr	BASEPRI, r3
 800116e:	4809      	ldr	r0, [pc, #36]	; (8001194 <test_start_timer.constprop.1+0x34>)
 8001170:	68c3      	ldr	r3, [r0, #12]
 8001172:	b10b      	cbz	r3, 8001178 <test_start_timer.constprop.1+0x18>
 8001174:	f7ff ff74 	bl	8001060 <chVTDoResetI>
 8001178:	2300      	movs	r3, #0
 800117a:	4a07      	ldr	r2, [pc, #28]	; (8001198 <test_start_timer.constprop.1+0x38>)
 800117c:	4805      	ldr	r0, [pc, #20]	; (8001194 <test_start_timer.constprop.1+0x34>)
 800117e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001182:	f7ff ffad 	bl	80010e0 <chVTDoSetI>
 8001186:	2300      	movs	r3, #0
 8001188:	f383 8811 	msr	BASEPRI, r3
 800118c:	bd08      	pop	{r3, pc}
 800118e:	bf00      	nop
 8001190:	200011c8 	.word	0x200011c8
 8001194:	200011f4 	.word	0x200011f4
 8001198:	08000261 	.word	0x08000261
 800119c:	00000000 	.word	0x00000000

080011a0 <chSysGetStatusAndLockX.part.2>:
 80011a0:	f3ef 8305 	mrs	r3, IPSR
 80011a4:	2320      	movs	r3, #32
 80011a6:	f383 8811 	msr	BASEPRI, r3
 80011aa:	4770      	bx	lr
 80011ac:	0000      	movs	r0, r0
	...

080011b0 <chSysIntegrityCheckI>:
 80011b0:	07c2      	lsls	r2, r0, #31
 80011b2:	b410      	push	{r4}
 80011b4:	d512      	bpl.n	80011dc <chSysIntegrityCheckI+0x2c>
 80011b6:	4b29      	ldr	r3, [pc, #164]	; (800125c <chSysIntegrityCheckI+0xac>)
 80011b8:	e9d3 1400 	ldrd	r1, r4, [r3]
 80011bc:	4299      	cmp	r1, r3
 80011be:	d041      	beq.n	8001244 <chSysIntegrityCheckI+0x94>
 80011c0:	2200      	movs	r2, #0
 80011c2:	6809      	ldr	r1, [r1, #0]
 80011c4:	4299      	cmp	r1, r3
 80011c6:	f102 0201 	add.w	r2, r2, #1
 80011ca:	d1fa      	bne.n	80011c2 <chSysIntegrityCheckI+0x12>
 80011cc:	428c      	cmp	r4, r1
 80011ce:	d036      	beq.n	800123e <chSysIntegrityCheckI+0x8e>
 80011d0:	6864      	ldr	r4, [r4, #4]
 80011d2:	429c      	cmp	r4, r3
 80011d4:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 80011d8:	d1fa      	bne.n	80011d0 <chSysIntegrityCheckI+0x20>
 80011da:	bb82      	cbnz	r2, 800123e <chSysIntegrityCheckI+0x8e>
 80011dc:	0783      	lsls	r3, r0, #30
 80011de:	d513      	bpl.n	8001208 <chSysIntegrityCheckI+0x58>
 80011e0:	4c1e      	ldr	r4, [pc, #120]	; (800125c <chSysIntegrityCheckI+0xac>)
 80011e2:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 80011e6:	341c      	adds	r4, #28
 80011e8:	42a2      	cmp	r2, r4
 80011ea:	d02f      	beq.n	800124c <chSysIntegrityCheckI+0x9c>
 80011ec:	2300      	movs	r3, #0
 80011ee:	6812      	ldr	r2, [r2, #0]
 80011f0:	42a2      	cmp	r2, r4
 80011f2:	f103 0301 	add.w	r3, r3, #1
 80011f6:	d1fa      	bne.n	80011ee <chSysIntegrityCheckI+0x3e>
 80011f8:	4291      	cmp	r1, r2
 80011fa:	d020      	beq.n	800123e <chSysIntegrityCheckI+0x8e>
 80011fc:	6849      	ldr	r1, [r1, #4]
 80011fe:	42a1      	cmp	r1, r4
 8001200:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8001204:	d1fa      	bne.n	80011fc <chSysIntegrityCheckI+0x4c>
 8001206:	b9d3      	cbnz	r3, 800123e <chSysIntegrityCheckI+0x8e>
 8001208:	f010 0004 	ands.w	r0, r0, #4
 800120c:	d015      	beq.n	800123a <chSysIntegrityCheckI+0x8a>
 800120e:	4b13      	ldr	r3, [pc, #76]	; (800125c <chSysIntegrityCheckI+0xac>)
 8001210:	e9d3 2104 	ldrd	r2, r1, [r3, #16]
 8001214:	429a      	cmp	r2, r3
 8001216:	f04f 0000 	mov.w	r0, #0
 800121a:	d01b      	beq.n	8001254 <chSysIntegrityCheckI+0xa4>
 800121c:	6912      	ldr	r2, [r2, #16]
 800121e:	429a      	cmp	r2, r3
 8001220:	f100 0001 	add.w	r0, r0, #1
 8001224:	d1fa      	bne.n	800121c <chSysIntegrityCheckI+0x6c>
 8001226:	4291      	cmp	r1, r2
 8001228:	d009      	beq.n	800123e <chSysIntegrityCheckI+0x8e>
 800122a:	6949      	ldr	r1, [r1, #20]
 800122c:	4299      	cmp	r1, r3
 800122e:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 8001232:	d1fa      	bne.n	800122a <chSysIntegrityCheckI+0x7a>
 8001234:	3000      	adds	r0, #0
 8001236:	bf18      	it	ne
 8001238:	2001      	movne	r0, #1
 800123a:	bc10      	pop	{r4}
 800123c:	4770      	bx	lr
 800123e:	2001      	movs	r0, #1
 8001240:	bc10      	pop	{r4}
 8001242:	4770      	bx	lr
 8001244:	429c      	cmp	r4, r3
 8001246:	d0c9      	beq.n	80011dc <chSysIntegrityCheckI+0x2c>
 8001248:	2200      	movs	r2, #0
 800124a:	e7c1      	b.n	80011d0 <chSysIntegrityCheckI+0x20>
 800124c:	42a1      	cmp	r1, r4
 800124e:	d0db      	beq.n	8001208 <chSysIntegrityCheckI+0x58>
 8001250:	2300      	movs	r3, #0
 8001252:	e7d3      	b.n	80011fc <chSysIntegrityCheckI+0x4c>
 8001254:	4291      	cmp	r1, r2
 8001256:	d1e8      	bne.n	800122a <chSysIntegrityCheckI+0x7a>
 8001258:	e7ef      	b.n	800123a <chSysIntegrityCheckI+0x8a>
 800125a:	bf00      	nop
 800125c:	20000930 	.word	0x20000930

08001260 <sys3_execute>:
 8001260:	b538      	push	{r3, r4, r5, lr}
 8001262:	2420      	movs	r4, #32
 8001264:	f384 8811 	msr	BASEPRI, r4
 8001268:	2001      	movs	r0, #1
 800126a:	f7ff ffa1 	bl	80011b0 <chSysIntegrityCheckI>
 800126e:	2300      	movs	r3, #0
 8001270:	f383 8811 	msr	BASEPRI, r3
 8001274:	f080 0101 	eor.w	r1, r0, #1
 8001278:	b2c9      	uxtb	r1, r1
 800127a:	2001      	movs	r0, #1
 800127c:	f7ff fa48 	bl	8000710 <_test_assert>
 8001280:	b100      	cbz	r0, 8001284 <sys3_execute+0x24>
 8001282:	bd38      	pop	{r3, r4, r5, pc}
 8001284:	4605      	mov	r5, r0
 8001286:	f384 8811 	msr	BASEPRI, r4
 800128a:	2002      	movs	r0, #2
 800128c:	f7ff ff90 	bl	80011b0 <chSysIntegrityCheckI>
 8001290:	f385 8811 	msr	BASEPRI, r5
 8001294:	f080 0101 	eor.w	r1, r0, #1
 8001298:	b2c9      	uxtb	r1, r1
 800129a:	2002      	movs	r0, #2
 800129c:	f7ff fa38 	bl	8000710 <_test_assert>
 80012a0:	4605      	mov	r5, r0
 80012a2:	2800      	cmp	r0, #0
 80012a4:	d1ed      	bne.n	8001282 <sys3_execute+0x22>
 80012a6:	f384 8811 	msr	BASEPRI, r4
 80012aa:	2004      	movs	r0, #4
 80012ac:	f7ff ff80 	bl	80011b0 <chSysIntegrityCheckI>
 80012b0:	f385 8811 	msr	BASEPRI, r5
 80012b4:	f080 0101 	eor.w	r1, r0, #1
 80012b8:	b2c9      	uxtb	r1, r1
 80012ba:	2003      	movs	r0, #3
 80012bc:	f7ff fa28 	bl	8000710 <_test_assert>
 80012c0:	4605      	mov	r5, r0
 80012c2:	2800      	cmp	r0, #0
 80012c4:	d1dd      	bne.n	8001282 <sys3_execute+0x22>
 80012c6:	f384 8811 	msr	BASEPRI, r4
 80012ca:	2008      	movs	r0, #8
 80012cc:	f7ff ff70 	bl	80011b0 <chSysIntegrityCheckI>
 80012d0:	f385 8811 	msr	BASEPRI, r5
 80012d4:	f080 0101 	eor.w	r1, r0, #1
 80012d8:	b2c9      	uxtb	r1, r1
 80012da:	2004      	movs	r0, #4
 80012dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80012e0:	f7ff ba16 	b.w	8000710 <_test_assert>
	...

080012f0 <BusFault_Handler>:
 80012f0:	b672      	cpsid	i
 80012f2:	4b02      	ldr	r3, [pc, #8]	; (80012fc <BusFault_Handler+0xc>)
 80012f4:	4a02      	ldr	r2, [pc, #8]	; (8001300 <BusFault_Handler+0x10>)
 80012f6:	629a      	str	r2, [r3, #40]	; 0x28
 80012f8:	e7fe      	b.n	80012f8 <BusFault_Handler+0x8>
 80012fa:	bf00      	nop
 80012fc:	20000930 	.word	0x20000930
 8001300:	08005b70 	.word	0x08005b70
	...

08001310 <bmk13_execute>:
 8001310:	b510      	push	{r4, lr}
 8001312:	482f      	ldr	r0, [pc, #188]	; (80013d0 <bmk13_execute+0xc0>)
 8001314:	4c2f      	ldr	r4, [pc, #188]	; (80013d4 <bmk13_execute+0xc4>)
 8001316:	f7ff fa6b 	bl	80007f0 <test_print>
 800131a:	f44f 70a8 	mov.w	r0, #336	; 0x150
 800131e:	f7ff f93f 	bl	80005a0 <test_printn.part.1>
 8001322:	4620      	mov	r0, r4
 8001324:	f7ff fa44 	bl	80007b0 <test_println>
 8001328:	482b      	ldr	r0, [pc, #172]	; (80013d8 <bmk13_execute+0xc8>)
 800132a:	f7ff fa61 	bl	80007f0 <test_print>
 800132e:	2044      	movs	r0, #68	; 0x44
 8001330:	f7ff f936 	bl	80005a0 <test_printn.part.1>
 8001334:	4620      	mov	r0, r4
 8001336:	f7ff fa3b 	bl	80007b0 <test_println>
 800133a:	4828      	ldr	r0, [pc, #160]	; (80013dc <bmk13_execute+0xcc>)
 800133c:	f7ff fa58 	bl	80007f0 <test_print>
 8001340:	2014      	movs	r0, #20
 8001342:	f7ff f92d 	bl	80005a0 <test_printn.part.1>
 8001346:	4620      	mov	r0, r4
 8001348:	f7ff fa32 	bl	80007b0 <test_println>
 800134c:	4824      	ldr	r0, [pc, #144]	; (80013e0 <bmk13_execute+0xd0>)
 800134e:	f7ff fa4f 	bl	80007f0 <test_print>
 8001352:	200c      	movs	r0, #12
 8001354:	f7ff f924 	bl	80005a0 <test_printn.part.1>
 8001358:	4620      	mov	r0, r4
 800135a:	f7ff fa29 	bl	80007b0 <test_println>
 800135e:	4821      	ldr	r0, [pc, #132]	; (80013e4 <bmk13_execute+0xd4>)
 8001360:	f7ff fa46 	bl	80007f0 <test_print>
 8001364:	2004      	movs	r0, #4
 8001366:	f7ff f91b 	bl	80005a0 <test_printn.part.1>
 800136a:	4620      	mov	r0, r4
 800136c:	f7ff fa20 	bl	80007b0 <test_println>
 8001370:	481d      	ldr	r0, [pc, #116]	; (80013e8 <bmk13_execute+0xd8>)
 8001372:	f7ff fa3d 	bl	80007f0 <test_print>
 8001376:	2014      	movs	r0, #20
 8001378:	f7ff f912 	bl	80005a0 <test_printn.part.1>
 800137c:	4620      	mov	r0, r4
 800137e:	f7ff fa17 	bl	80007b0 <test_println>
 8001382:	481a      	ldr	r0, [pc, #104]	; (80013ec <bmk13_execute+0xdc>)
 8001384:	f7ff fa34 	bl	80007f0 <test_print>
 8001388:	2010      	movs	r0, #16
 800138a:	f7ff f909 	bl	80005a0 <test_printn.part.1>
 800138e:	4620      	mov	r0, r4
 8001390:	f7ff fa0e 	bl	80007b0 <test_println>
 8001394:	4816      	ldr	r0, [pc, #88]	; (80013f0 <bmk13_execute+0xe0>)
 8001396:	f7ff fa2b 	bl	80007f0 <test_print>
 800139a:	2008      	movs	r0, #8
 800139c:	f7ff f900 	bl	80005a0 <test_printn.part.1>
 80013a0:	4620      	mov	r0, r4
 80013a2:	f7ff fa05 	bl	80007b0 <test_println>
 80013a6:	4813      	ldr	r0, [pc, #76]	; (80013f4 <bmk13_execute+0xe4>)
 80013a8:	f7ff fa22 	bl	80007f0 <test_print>
 80013ac:	2024      	movs	r0, #36	; 0x24
 80013ae:	f7ff f8f7 	bl	80005a0 <test_printn.part.1>
 80013b2:	4620      	mov	r0, r4
 80013b4:	f7ff f9fc 	bl	80007b0 <test_println>
 80013b8:	480f      	ldr	r0, [pc, #60]	; (80013f8 <bmk13_execute+0xe8>)
 80013ba:	f7ff fa19 	bl	80007f0 <test_print>
 80013be:	2028      	movs	r0, #40	; 0x28
 80013c0:	f7ff f8ee 	bl	80005a0 <test_printn.part.1>
 80013c4:	4620      	mov	r0, r4
 80013c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80013ca:	f7ff b9f1 	b.w	80007b0 <test_println>
 80013ce:	bf00      	nop
 80013d0:	08005bd0 	.word	0x08005bd0
 80013d4:	08005be0 	.word	0x08005be0
 80013d8:	08005be8 	.word	0x08005be8
 80013dc:	08005bf8 	.word	0x08005bf8
 80013e0:	08005c08 	.word	0x08005c08
 80013e4:	08005c18 	.word	0x08005c18
 80013e8:	08005c28 	.word	0x08005c28
 80013ec:	08005c38 	.word	0x08005c38
 80013f0:	08005c48 	.word	0x08005c48
 80013f4:	08005c58 	.word	0x08005c58
 80013f8:	08005c68 	.word	0x08005c68
 80013fc:	00000000 	.word	0x00000000

08001400 <chThdYield>:
 8001400:	b538      	push	{r3, r4, r5, lr}
 8001402:	2320      	movs	r3, #32
 8001404:	f383 8811 	msr	BASEPRI, r3
 8001408:	4a11      	ldr	r2, [pc, #68]	; (8001450 <chThdYield+0x50>)
 800140a:	6810      	ldr	r0, [r2, #0]
 800140c:	6994      	ldr	r4, [r2, #24]
 800140e:	6883      	ldr	r3, [r0, #8]
 8001410:	68a1      	ldr	r1, [r4, #8]
 8001412:	428b      	cmp	r3, r1
 8001414:	d203      	bcs.n	800141e <chThdYield+0x1e>
 8001416:	2300      	movs	r3, #0
 8001418:	f383 8811 	msr	BASEPRI, r3
 800141c:	bd38      	pop	{r3, r4, r5, pc}
 800141e:	6803      	ldr	r3, [r0, #0]
 8001420:	6013      	str	r3, [r2, #0]
 8001422:	605a      	str	r2, [r3, #4]
 8001424:	2501      	movs	r5, #1
 8001426:	6190      	str	r0, [r2, #24]
 8001428:	2200      	movs	r2, #0
 800142a:	7705      	strb	r5, [r0, #28]
 800142c:	7722      	strb	r2, [r4, #28]
 800142e:	e000      	b.n	8001432 <chThdYield+0x32>
 8001430:	681b      	ldr	r3, [r3, #0]
 8001432:	689a      	ldr	r2, [r3, #8]
 8001434:	4291      	cmp	r1, r2
 8001436:	d9fb      	bls.n	8001430 <chThdYield+0x30>
 8001438:	685a      	ldr	r2, [r3, #4]
 800143a:	4621      	mov	r1, r4
 800143c:	e9c4 3200 	strd	r3, r2, [r4]
 8001440:	6014      	str	r4, [r2, #0]
 8001442:	605c      	str	r4, [r3, #4]
 8001444:	f7fe fedc 	bl	8000200 <_port_switch>
 8001448:	2300      	movs	r3, #0
 800144a:	f383 8811 	msr	BASEPRI, r3
 800144e:	bd38      	pop	{r3, r4, r5, pc}
 8001450:	20000930 	.word	0x20000930
	...

08001460 <thread8>:
 8001460:	b538      	push	{r3, r4, r5, lr}
 8001462:	4d09      	ldr	r5, [pc, #36]	; (8001488 <thread8+0x28>)
 8001464:	4604      	mov	r4, r0
 8001466:	f7ff ffcb 	bl	8001400 <chThdYield>
 800146a:	f7ff ffc9 	bl	8001400 <chThdYield>
 800146e:	f7ff ffc7 	bl	8001400 <chThdYield>
 8001472:	f7ff ffc5 	bl	8001400 <chThdYield>
 8001476:	6823      	ldr	r3, [r4, #0]
 8001478:	69aa      	ldr	r2, [r5, #24]
 800147a:	3304      	adds	r3, #4
 800147c:	6023      	str	r3, [r4, #0]
 800147e:	7f53      	ldrb	r3, [r2, #29]
 8001480:	075b      	lsls	r3, r3, #29
 8001482:	d5f0      	bpl.n	8001466 <thread8+0x6>
 8001484:	bd38      	pop	{r3, r4, r5, pc}
 8001486:	bf00      	nop
 8001488:	20000930 	.word	0x20000930
 800148c:	00000000 	.word	0x00000000

08001490 <chSchDoRescheduleAhead>:
 8001490:	4a0d      	ldr	r2, [pc, #52]	; (80014c8 <chSchDoRescheduleAhead+0x38>)
 8001492:	6810      	ldr	r0, [r2, #0]
 8001494:	b430      	push	{r4, r5}
 8001496:	6803      	ldr	r3, [r0, #0]
 8001498:	6994      	ldr	r4, [r2, #24]
 800149a:	6013      	str	r3, [r2, #0]
 800149c:	68a1      	ldr	r1, [r4, #8]
 800149e:	605a      	str	r2, [r3, #4]
 80014a0:	2501      	movs	r5, #1
 80014a2:	6190      	str	r0, [r2, #24]
 80014a4:	2200      	movs	r2, #0
 80014a6:	7705      	strb	r5, [r0, #28]
 80014a8:	7722      	strb	r2, [r4, #28]
 80014aa:	e000      	b.n	80014ae <chSchDoRescheduleAhead+0x1e>
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	689a      	ldr	r2, [r3, #8]
 80014b0:	4291      	cmp	r1, r2
 80014b2:	d3fb      	bcc.n	80014ac <chSchDoRescheduleAhead+0x1c>
 80014b4:	685a      	ldr	r2, [r3, #4]
 80014b6:	4621      	mov	r1, r4
 80014b8:	e9c4 3200 	strd	r3, r2, [r4]
 80014bc:	6014      	str	r4, [r2, #0]
 80014be:	605c      	str	r4, [r3, #4]
 80014c0:	bc30      	pop	{r4, r5}
 80014c2:	f7fe be9d 	b.w	8000200 <_port_switch>
 80014c6:	bf00      	nop
 80014c8:	20000930 	.word	0x20000930
 80014cc:	00000000 	.word	0x00000000

080014d0 <chSchRescheduleS>:
 80014d0:	4b04      	ldr	r3, [pc, #16]	; (80014e4 <chSchRescheduleS+0x14>)
 80014d2:	681a      	ldr	r2, [r3, #0]
 80014d4:	699b      	ldr	r3, [r3, #24]
 80014d6:	6892      	ldr	r2, [r2, #8]
 80014d8:	689b      	ldr	r3, [r3, #8]
 80014da:	429a      	cmp	r2, r3
 80014dc:	d800      	bhi.n	80014e0 <chSchRescheduleS+0x10>
 80014de:	4770      	bx	lr
 80014e0:	f7ff bfd6 	b.w	8001490 <chSchDoRescheduleAhead>
 80014e4:	20000930 	.word	0x20000930
	...

080014f0 <thread4.lto_priv.72>:
 80014f0:	b508      	push	{r3, lr}
 80014f2:	2220      	movs	r2, #32
 80014f4:	f382 8811 	msr	BASEPRI, r2
 80014f8:	6883      	ldr	r3, [r0, #8]
 80014fa:	2b00      	cmp	r3, #0
 80014fc:	dd05      	ble.n	800150a <thread4.lto_priv.72+0x1a>
 80014fe:	f7ff ffe7 	bl	80014d0 <chSchRescheduleS>
 8001502:	2300      	movs	r3, #0
 8001504:	f383 8811 	msr	BASEPRI, r3
 8001508:	bd08      	pop	{r3, pc}
 800150a:	f7ff fd21 	bl	8000f50 <chSemSignalI>
 800150e:	f7ff ffdf 	bl	80014d0 <chSchRescheduleS>
 8001512:	2300      	movs	r3, #0
 8001514:	f383 8811 	msr	BASEPRI, r3
 8001518:	bd08      	pop	{r3, pc}
 800151a:	bf00      	nop
 800151c:	0000      	movs	r0, r0
	...

08001520 <chMtxUnlockAll>:
 8001520:	4a13      	ldr	r2, [pc, #76]	; (8001570 <chMtxUnlockAll+0x50>)
 8001522:	b570      	push	{r4, r5, r6, lr}
 8001524:	2320      	movs	r3, #32
 8001526:	6994      	ldr	r4, [r2, #24]
 8001528:	f383 8811 	msr	BASEPRI, r3
 800152c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800152e:	b1b3      	cbz	r3, 800155e <chMtxUnlockAll+0x3e>
 8001530:	2600      	movs	r6, #0
 8001532:	681a      	ldr	r2, [r3, #0]
 8001534:	68d9      	ldr	r1, [r3, #12]
 8001536:	63a1      	str	r1, [r4, #56]	; 0x38
 8001538:	4293      	cmp	r3, r2
 800153a:	4610      	mov	r0, r2
 800153c:	d013      	beq.n	8001566 <chMtxUnlockAll+0x46>
 800153e:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8001540:	6811      	ldr	r1, [r2, #0]
 8001542:	6019      	str	r1, [r3, #0]
 8001544:	604b      	str	r3, [r1, #4]
 8001546:	e9c3 2502 	strd	r2, r5, [r3, #8]
 800154a:	6393      	str	r3, [r2, #56]	; 0x38
 800154c:	f7ff fb78 	bl	8000c40 <chSchReadyI>
 8001550:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001552:	2b00      	cmp	r3, #0
 8001554:	d1ed      	bne.n	8001532 <chMtxUnlockAll+0x12>
 8001556:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8001558:	60a3      	str	r3, [r4, #8]
 800155a:	f7ff ffb9 	bl	80014d0 <chSchRescheduleS>
 800155e:	2300      	movs	r3, #0
 8001560:	f383 8811 	msr	BASEPRI, r3
 8001564:	bd70      	pop	{r4, r5, r6, pc}
 8001566:	609e      	str	r6, [r3, #8]
 8001568:	460b      	mov	r3, r1
 800156a:	2b00      	cmp	r3, #0
 800156c:	d1e1      	bne.n	8001532 <chMtxUnlockAll+0x12>
 800156e:	e7f2      	b.n	8001556 <chMtxUnlockAll+0x36>
 8001570:	20000930 	.word	0x20000930
	...

08001580 <chThdSetPriority>:
 8001580:	b510      	push	{r4, lr}
 8001582:	2320      	movs	r3, #32
 8001584:	f383 8811 	msr	BASEPRI, r3
 8001588:	4b08      	ldr	r3, [pc, #32]	; (80015ac <chThdSetPriority+0x2c>)
 800158a:	699b      	ldr	r3, [r3, #24]
 800158c:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800158e:	6899      	ldr	r1, [r3, #8]
 8001590:	42a1      	cmp	r1, r4
 8001592:	d001      	beq.n	8001598 <chThdSetPriority+0x18>
 8001594:	4281      	cmp	r1, r0
 8001596:	d200      	bcs.n	800159a <chThdSetPriority+0x1a>
 8001598:	6098      	str	r0, [r3, #8]
 800159a:	63d8      	str	r0, [r3, #60]	; 0x3c
 800159c:	f7ff ff98 	bl	80014d0 <chSchRescheduleS>
 80015a0:	2300      	movs	r3, #0
 80015a2:	f383 8811 	msr	BASEPRI, r3
 80015a6:	4620      	mov	r0, r4
 80015a8:	bd10      	pop	{r4, pc}
 80015aa:	bf00      	nop
 80015ac:	20000930 	.word	0x20000930

080015b0 <thd3_execute>:
 80015b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015b2:	4e49      	ldr	r6, [pc, #292]	; (80016d8 <thd3_execute+0x128>)
 80015b4:	69b3      	ldr	r3, [r6, #24]
 80015b6:	689c      	ldr	r4, [r3, #8]
 80015b8:	1c65      	adds	r5, r4, #1
 80015ba:	4628      	mov	r0, r5
 80015bc:	f7ff ffe0 	bl	8001580 <chThdSetPriority>
 80015c0:	1b01      	subs	r1, r0, r4
 80015c2:	fab1 f181 	clz	r1, r1
 80015c6:	4607      	mov	r7, r0
 80015c8:	0949      	lsrs	r1, r1, #5
 80015ca:	2001      	movs	r0, #1
 80015cc:	f7ff f8a0 	bl	8000710 <_test_assert>
 80015d0:	b100      	cbz	r0, 80015d4 <thd3_execute+0x24>
 80015d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80015d4:	69b3      	ldr	r3, [r6, #24]
 80015d6:	6899      	ldr	r1, [r3, #8]
 80015d8:	1b49      	subs	r1, r1, r5
 80015da:	fab1 f181 	clz	r1, r1
 80015de:	2002      	movs	r0, #2
 80015e0:	0949      	lsrs	r1, r1, #5
 80015e2:	f7ff f895 	bl	8000710 <_test_assert>
 80015e6:	2800      	cmp	r0, #0
 80015e8:	d1f3      	bne.n	80015d2 <thd3_execute+0x22>
 80015ea:	4638      	mov	r0, r7
 80015ec:	f7ff ffc8 	bl	8001580 <chThdSetPriority>
 80015f0:	1a29      	subs	r1, r5, r0
 80015f2:	fab1 f181 	clz	r1, r1
 80015f6:	0949      	lsrs	r1, r1, #5
 80015f8:	2003      	movs	r0, #3
 80015fa:	f7ff f889 	bl	8000710 <_test_assert>
 80015fe:	2800      	cmp	r0, #0
 8001600:	d1e7      	bne.n	80015d2 <thd3_execute+0x22>
 8001602:	69b3      	ldr	r3, [r6, #24]
 8001604:	6899      	ldr	r1, [r3, #8]
 8001606:	1b09      	subs	r1, r1, r4
 8001608:	fab1 f181 	clz	r1, r1
 800160c:	2004      	movs	r0, #4
 800160e:	0949      	lsrs	r1, r1, #5
 8001610:	f7ff f87e 	bl	8000710 <_test_assert>
 8001614:	2800      	cmp	r0, #0
 8001616:	d1dc      	bne.n	80015d2 <thd3_execute+0x22>
 8001618:	2320      	movs	r3, #32
 800161a:	f383 8811 	msr	BASEPRI, r3
 800161e:	69b2      	ldr	r2, [r6, #24]
 8001620:	6893      	ldr	r3, [r2, #8]
 8001622:	3302      	adds	r3, #2
 8001624:	6093      	str	r3, [r2, #8]
 8001626:	f380 8811 	msr	BASEPRI, r0
 800162a:	69b3      	ldr	r3, [r6, #24]
 800162c:	6899      	ldr	r1, [r3, #8]
 800162e:	1ca7      	adds	r7, r4, #2
 8001630:	1bc9      	subs	r1, r1, r7
 8001632:	fab1 f181 	clz	r1, r1
 8001636:	0949      	lsrs	r1, r1, #5
 8001638:	2005      	movs	r0, #5
 800163a:	f7ff f869 	bl	8000710 <_test_assert>
 800163e:	2800      	cmp	r0, #0
 8001640:	d1c7      	bne.n	80015d2 <thd3_execute+0x22>
 8001642:	4628      	mov	r0, r5
 8001644:	f7ff ff9c 	bl	8001580 <chThdSetPriority>
 8001648:	1b01      	subs	r1, r0, r4
 800164a:	fab1 f181 	clz	r1, r1
 800164e:	0949      	lsrs	r1, r1, #5
 8001650:	2006      	movs	r0, #6
 8001652:	f7ff f85d 	bl	8000710 <_test_assert>
 8001656:	2800      	cmp	r0, #0
 8001658:	d1bb      	bne.n	80015d2 <thd3_execute+0x22>
 800165a:	69b3      	ldr	r3, [r6, #24]
 800165c:	6899      	ldr	r1, [r3, #8]
 800165e:	1bc9      	subs	r1, r1, r7
 8001660:	fab1 f181 	clz	r1, r1
 8001664:	0949      	lsrs	r1, r1, #5
 8001666:	2007      	movs	r0, #7
 8001668:	f7ff f852 	bl	8000710 <_test_assert>
 800166c:	2800      	cmp	r0, #0
 800166e:	d1b0      	bne.n	80015d2 <thd3_execute+0x22>
 8001670:	69b3      	ldr	r3, [r6, #24]
 8001672:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001674:	1b4f      	subs	r7, r1, r5
 8001676:	4279      	negs	r1, r7
 8001678:	4179      	adcs	r1, r7
 800167a:	2008      	movs	r0, #8
 800167c:	f7ff f848 	bl	8000710 <_test_assert>
 8001680:	2800      	cmp	r0, #0
 8001682:	d1a6      	bne.n	80015d2 <thd3_execute+0x22>
 8001684:	1ce7      	adds	r7, r4, #3
 8001686:	4638      	mov	r0, r7
 8001688:	f7ff ff7a 	bl	8001580 <chThdSetPriority>
 800168c:	1a28      	subs	r0, r5, r0
 800168e:	4241      	negs	r1, r0
 8001690:	4141      	adcs	r1, r0
 8001692:	2009      	movs	r0, #9
 8001694:	f7ff f83c 	bl	8000710 <_test_assert>
 8001698:	2800      	cmp	r0, #0
 800169a:	d19a      	bne.n	80015d2 <thd3_execute+0x22>
 800169c:	69b3      	ldr	r3, [r6, #24]
 800169e:	6899      	ldr	r1, [r3, #8]
 80016a0:	1bca      	subs	r2, r1, r7
 80016a2:	4251      	negs	r1, r2
 80016a4:	4151      	adcs	r1, r2
 80016a6:	200a      	movs	r0, #10
 80016a8:	f7ff f832 	bl	8000710 <_test_assert>
 80016ac:	2800      	cmp	r0, #0
 80016ae:	d190      	bne.n	80015d2 <thd3_execute+0x22>
 80016b0:	69b3      	ldr	r3, [r6, #24]
 80016b2:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80016b4:	1bcb      	subs	r3, r1, r7
 80016b6:	4259      	negs	r1, r3
 80016b8:	4159      	adcs	r1, r3
 80016ba:	200b      	movs	r0, #11
 80016bc:	f7ff f828 	bl	8000710 <_test_assert>
 80016c0:	2800      	cmp	r0, #0
 80016c2:	d186      	bne.n	80015d2 <thd3_execute+0x22>
 80016c4:	2320      	movs	r3, #32
 80016c6:	f383 8811 	msr	BASEPRI, r3
 80016ca:	69b3      	ldr	r3, [r6, #24]
 80016cc:	609c      	str	r4, [r3, #8]
 80016ce:	63dc      	str	r4, [r3, #60]	; 0x3c
 80016d0:	f380 8811 	msr	BASEPRI, r0
 80016d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80016d6:	bf00      	nop
 80016d8:	20000930 	.word	0x20000930
 80016dc:	00000000 	.word	0x00000000

080016e0 <chSysRestoreStatusX.part.3>:
 80016e0:	b510      	push	{r4, lr}
 80016e2:	f3ef 8405 	mrs	r4, IPSR
 80016e6:	f3c4 0408 	ubfx	r4, r4, #0, #9
 80016ea:	b11c      	cbz	r4, 80016f4 <chSysRestoreStatusX.part.3+0x14>
 80016ec:	2300      	movs	r3, #0
 80016ee:	f383 8811 	msr	BASEPRI, r3
 80016f2:	bd10      	pop	{r4, pc}
 80016f4:	f7ff feec 	bl	80014d0 <chSchRescheduleS>
 80016f8:	f384 8811 	msr	BASEPRI, r4
 80016fc:	bd10      	pop	{r4, pc}
 80016fe:	bf00      	nop

08001700 <vtcb>:
 8001700:	b508      	push	{r3, lr}
 8001702:	2320      	movs	r3, #32
 8001704:	f383 8811 	msr	BASEPRI, r3
 8001708:	2200      	movs	r2, #0
 800170a:	f382 8811 	msr	BASEPRI, r2
 800170e:	f383 8811 	msr	BASEPRI, r3
 8001712:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8001716:	b91b      	cbnz	r3, 8001720 <vtcb+0x20>
 8001718:	f7ff fd42 	bl	80011a0 <chSysGetStatusAndLockX.part.2>
 800171c:	f7ff ffe0 	bl	80016e0 <chSysRestoreStatusX.part.3>
 8001720:	2300      	movs	r3, #0
 8001722:	f383 8811 	msr	BASEPRI, r3
 8001726:	bd08      	pop	{r3, pc}
	...

08001730 <chSchWakeupS>:
 8001730:	4b14      	ldr	r3, [pc, #80]	; (8001784 <chSchWakeupS+0x54>)
 8001732:	b470      	push	{r4, r5, r6}
 8001734:	699e      	ldr	r6, [r3, #24]
 8001736:	6885      	ldr	r5, [r0, #8]
 8001738:	4604      	mov	r4, r0
 800173a:	68b0      	ldr	r0, [r6, #8]
 800173c:	6221      	str	r1, [r4, #32]
 800173e:	4285      	cmp	r5, r0
 8001740:	f04f 0200 	mov.w	r2, #0
 8001744:	d80b      	bhi.n	800175e <chSchWakeupS+0x2e>
 8001746:	7722      	strb	r2, [r4, #28]
 8001748:	681b      	ldr	r3, [r3, #0]
 800174a:	689a      	ldr	r2, [r3, #8]
 800174c:	4295      	cmp	r5, r2
 800174e:	d9fb      	bls.n	8001748 <chSchWakeupS+0x18>
 8001750:	685a      	ldr	r2, [r3, #4]
 8001752:	e9c4 3200 	strd	r3, r2, [r4]
 8001756:	6014      	str	r4, [r2, #0]
 8001758:	605c      	str	r4, [r3, #4]
 800175a:	bc70      	pop	{r4, r5, r6}
 800175c:	4770      	bx	lr
 800175e:	7732      	strb	r2, [r6, #28]
 8001760:	461a      	mov	r2, r3
 8001762:	6812      	ldr	r2, [r2, #0]
 8001764:	6891      	ldr	r1, [r2, #8]
 8001766:	4288      	cmp	r0, r1
 8001768:	d9fb      	bls.n	8001762 <chSchWakeupS+0x32>
 800176a:	6851      	ldr	r1, [r2, #4]
 800176c:	6071      	str	r1, [r6, #4]
 800176e:	2001      	movs	r0, #1
 8001770:	6032      	str	r2, [r6, #0]
 8001772:	600e      	str	r6, [r1, #0]
 8001774:	6056      	str	r6, [r2, #4]
 8001776:	7720      	strb	r0, [r4, #28]
 8001778:	4631      	mov	r1, r6
 800177a:	4620      	mov	r0, r4
 800177c:	619c      	str	r4, [r3, #24]
 800177e:	bc70      	pop	{r4, r5, r6}
 8001780:	f7fe bd3e 	b.w	8000200 <_port_switch>
 8001784:	20000930 	.word	0x20000930
	...

08001790 <chThdCreateFromMemoryPool.constprop.51>:
 8001790:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001794:	4e1d      	ldr	r6, [pc, #116]	; (800180c <chThdCreateFromMemoryPool.constprop.51+0x7c>)
 8001796:	4607      	mov	r7, r0
 8001798:	4630      	mov	r0, r6
 800179a:	4688      	mov	r8, r1
 800179c:	f7ff f8d8 	bl	8000950 <chPoolAlloc>
 80017a0:	4604      	mov	r4, r0
 80017a2:	b380      	cbz	r0, 8001806 <chThdCreateFromMemoryPool.constprop.51+0x76>
 80017a4:	2320      	movs	r3, #32
 80017a6:	f383 8811 	msr	BASEPRI, r3
 80017aa:	6873      	ldr	r3, [r6, #4]
 80017ac:	4a18      	ldr	r2, [pc, #96]	; (8001810 <chThdCreateFromMemoryPool.constprop.51+0x80>)
 80017ae:	4919      	ldr	r1, [pc, #100]	; (8001814 <chThdCreateFromMemoryPool.constprop.51+0x84>)
 80017b0:	3b24      	subs	r3, #36	; 0x24
 80017b2:	18c5      	adds	r5, r0, r3
 80017b4:	60c5      	str	r5, [r0, #12]
 80017b6:	50c2      	str	r2, [r0, r3]
 80017b8:	4a17      	ldr	r2, [pc, #92]	; (8001818 <chThdCreateFromMemoryPool.constprop.51+0x88>)
 80017ba:	f8c5 8004 	str.w	r8, [r5, #4]
 80017be:	6229      	str	r1, [r5, #32]
 80017c0:	6102      	str	r2, [r0, #16]
 80017c2:	f8d2 e014 	ldr.w	lr, [r2, #20]
 80017c6:	f8c0 e014 	str.w	lr, [r0, #20]
 80017ca:	2301      	movs	r3, #1
 80017cc:	f100 0124 	add.w	r1, r0, #36	; 0x24
 80017d0:	f04f 0c02 	mov.w	ip, #2
 80017d4:	2500      	movs	r5, #0
 80017d6:	7783      	strb	r3, [r0, #30]
 80017d8:	f100 0328 	add.w	r3, r0, #40	; 0x28
 80017dc:	6087      	str	r7, [r0, #8]
 80017de:	63c7      	str	r7, [r0, #60]	; 0x3c
 80017e0:	f880 c01c 	strb.w	ip, [r0, #28]
 80017e4:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 80017e8:	6185      	str	r5, [r0, #24]
 80017ea:	f8ce 0010 	str.w	r0, [lr, #16]
 80017ee:	6241      	str	r1, [r0, #36]	; 0x24
 80017f0:	f880 c01d 	strb.w	ip, [r0, #29]
 80017f4:	6406      	str	r6, [r0, #64]	; 0x40
 80017f6:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80017fa:	4629      	mov	r1, r5
 80017fc:	6150      	str	r0, [r2, #20]
 80017fe:	f7ff ff97 	bl	8001730 <chSchWakeupS>
 8001802:	f385 8811 	msr	BASEPRI, r5
 8001806:	4620      	mov	r0, r4
 8001808:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800180c:	20000b08 	.word	0x20000b08
 8001810:	080007a1 	.word	0x080007a1
 8001814:	08000211 	.word	0x08000211
 8001818:	20000930 	.word	0x20000930
 800181c:	00000000 	.word	0x00000000

08001820 <chCondSignal.constprop.43>:
 8001820:	b508      	push	{r3, lr}
 8001822:	2320      	movs	r3, #32
 8001824:	f383 8811 	msr	BASEPRI, r3
 8001828:	4b06      	ldr	r3, [pc, #24]	; (8001844 <chCondSignal.constprop.43+0x24>)
 800182a:	6818      	ldr	r0, [r3, #0]
 800182c:	4298      	cmp	r0, r3
 800182e:	d005      	beq.n	800183c <chCondSignal.constprop.43+0x1c>
 8001830:	6802      	ldr	r2, [r0, #0]
 8001832:	601a      	str	r2, [r3, #0]
 8001834:	6053      	str	r3, [r2, #4]
 8001836:	2100      	movs	r1, #0
 8001838:	f7ff ff7a 	bl	8001730 <chSchWakeupS>
 800183c:	2300      	movs	r3, #0
 800183e:	f383 8811 	msr	BASEPRI, r3
 8001842:	bd08      	pop	{r3, pc}
 8001844:	20000800 	.word	0x20000800
	...

08001850 <chMtxUnlock>:
 8001850:	4b16      	ldr	r3, [pc, #88]	; (80018ac <chMtxUnlock+0x5c>)
 8001852:	b570      	push	{r4, r5, r6, lr}
 8001854:	699d      	ldr	r5, [r3, #24]
 8001856:	2320      	movs	r3, #32
 8001858:	f383 8811 	msr	BASEPRI, r3
 800185c:	6804      	ldr	r4, [r0, #0]
 800185e:	68c3      	ldr	r3, [r0, #12]
 8001860:	63ab      	str	r3, [r5, #56]	; 0x38
 8001862:	4284      	cmp	r4, r0
 8001864:	d01c      	beq.n	80018a0 <chMtxUnlock+0x50>
 8001866:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8001868:	b14b      	cbz	r3, 800187e <chMtxUnlock+0x2e>
 800186a:	681a      	ldr	r2, [r3, #0]
 800186c:	4293      	cmp	r3, r2
 800186e:	d003      	beq.n	8001878 <chMtxUnlock+0x28>
 8001870:	6892      	ldr	r2, [r2, #8]
 8001872:	4291      	cmp	r1, r2
 8001874:	bf38      	it	cc
 8001876:	4611      	movcc	r1, r2
 8001878:	68db      	ldr	r3, [r3, #12]
 800187a:	2b00      	cmp	r3, #0
 800187c:	d1f5      	bne.n	800186a <chMtxUnlock+0x1a>
 800187e:	4603      	mov	r3, r0
 8001880:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8001882:	6822      	ldr	r2, [r4, #0]
 8001884:	60a9      	str	r1, [r5, #8]
 8001886:	4620      	mov	r0, r4
 8001888:	601a      	str	r2, [r3, #0]
 800188a:	2100      	movs	r1, #0
 800188c:	6053      	str	r3, [r2, #4]
 800188e:	e9c3 4602 	strd	r4, r6, [r3, #8]
 8001892:	63a3      	str	r3, [r4, #56]	; 0x38
 8001894:	f7ff ff4c 	bl	8001730 <chSchWakeupS>
 8001898:	2300      	movs	r3, #0
 800189a:	f383 8811 	msr	BASEPRI, r3
 800189e:	bd70      	pop	{r4, r5, r6, pc}
 80018a0:	2300      	movs	r3, #0
 80018a2:	60a3      	str	r3, [r4, #8]
 80018a4:	2300      	movs	r3, #0
 80018a6:	f383 8811 	msr	BASEPRI, r3
 80018aa:	bd70      	pop	{r4, r5, r6, pc}
 80018ac:	20000930 	.word	0x20000930

080018b0 <chSemSignal>:
 80018b0:	b508      	push	{r3, lr}
 80018b2:	2320      	movs	r3, #32
 80018b4:	f383 8811 	msr	BASEPRI, r3
 80018b8:	6883      	ldr	r3, [r0, #8]
 80018ba:	3301      	adds	r3, #1
 80018bc:	2b00      	cmp	r3, #0
 80018be:	6083      	str	r3, [r0, #8]
 80018c0:	dd03      	ble.n	80018ca <chSemSignal+0x1a>
 80018c2:	2300      	movs	r3, #0
 80018c4:	f383 8811 	msr	BASEPRI, r3
 80018c8:	bd08      	pop	{r3, pc}
 80018ca:	4603      	mov	r3, r0
 80018cc:	6800      	ldr	r0, [r0, #0]
 80018ce:	6802      	ldr	r2, [r0, #0]
 80018d0:	601a      	str	r2, [r3, #0]
 80018d2:	2100      	movs	r1, #0
 80018d4:	6053      	str	r3, [r2, #4]
 80018d6:	f7ff ff2b 	bl	8001730 <chSchWakeupS>
 80018da:	2300      	movs	r3, #0
 80018dc:	f383 8811 	msr	BASEPRI, r3
 80018e0:	bd08      	pop	{r3, pc}
 80018e2:	bf00      	nop
	...

080018f0 <chThdCreateStatic>:
 80018f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80018f2:	9e06      	ldr	r6, [sp, #24]
 80018f4:	4604      	mov	r4, r0
 80018f6:	2520      	movs	r5, #32
 80018f8:	f385 8811 	msr	BASEPRI, r5
 80018fc:	3924      	subs	r1, #36	; 0x24
 80018fe:	1845      	adds	r5, r0, r1
 8001900:	60c5      	str	r5, [r0, #12]
 8001902:	4f12      	ldr	r7, [pc, #72]	; (800194c <chThdCreateStatic+0x5c>)
 8001904:	5043      	str	r3, [r0, r1]
 8001906:	4b12      	ldr	r3, [pc, #72]	; (8001950 <chThdCreateStatic+0x60>)
 8001908:	606e      	str	r6, [r5, #4]
 800190a:	622f      	str	r7, [r5, #32]
 800190c:	6103      	str	r3, [r0, #16]
 800190e:	6959      	ldr	r1, [r3, #20]
 8001910:	63c2      	str	r2, [r0, #60]	; 0x3c
 8001912:	6082      	str	r2, [r0, #8]
 8001914:	2500      	movs	r5, #0
 8001916:	f100 0228 	add.w	r2, r0, #40	; 0x28
 800191a:	f04f 0c02 	mov.w	ip, #2
 800191e:	f100 0624 	add.w	r6, r0, #36	; 0x24
 8001922:	2701      	movs	r7, #1
 8001924:	6141      	str	r1, [r0, #20]
 8001926:	f8a0 c01c 	strh.w	ip, [r0, #28]
 800192a:	7787      	strb	r7, [r0, #30]
 800192c:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8001930:	6185      	str	r5, [r0, #24]
 8001932:	6108      	str	r0, [r1, #16]
 8001934:	4629      	mov	r1, r5
 8001936:	e9c0 6209 	strd	r6, r2, [r0, #36]	; 0x24
 800193a:	62c2      	str	r2, [r0, #44]	; 0x2c
 800193c:	6158      	str	r0, [r3, #20]
 800193e:	f7ff fef7 	bl	8001730 <chSchWakeupS>
 8001942:	f385 8811 	msr	BASEPRI, r5
 8001946:	4620      	mov	r0, r4
 8001948:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800194a:	bf00      	nop
 800194c:	08000211 	.word	0x08000211
 8001950:	20000930 	.word	0x20000930
	...

08001960 <chSchGoSleepS>:
 8001960:	4b07      	ldr	r3, [pc, #28]	; (8001980 <chSchGoSleepS+0x20>)
 8001962:	6999      	ldr	r1, [r3, #24]
 8001964:	681a      	ldr	r2, [r3, #0]
 8001966:	b410      	push	{r4}
 8001968:	7708      	strb	r0, [r1, #28]
 800196a:	6810      	ldr	r0, [r2, #0]
 800196c:	6018      	str	r0, [r3, #0]
 800196e:	2401      	movs	r4, #1
 8001970:	6043      	str	r3, [r0, #4]
 8001972:	7714      	strb	r4, [r2, #28]
 8001974:	4610      	mov	r0, r2
 8001976:	bc10      	pop	{r4}
 8001978:	619a      	str	r2, [r3, #24]
 800197a:	f7fe bc41 	b.w	8000200 <_port_switch>
 800197e:	bf00      	nop
 8001980:	20000930 	.word	0x20000930
	...

08001990 <chSemSignalWait.constprop.47>:
 8001990:	b538      	push	{r3, r4, r5, lr}
 8001992:	2320      	movs	r3, #32
 8001994:	f383 8811 	msr	BASEPRI, r3
 8001998:	4c15      	ldr	r4, [pc, #84]	; (80019f0 <chSemSignalWait.constprop.47+0x60>)
 800199a:	68a3      	ldr	r3, [r4, #8]
 800199c:	3301      	adds	r3, #1
 800199e:	2b00      	cmp	r3, #0
 80019a0:	60a3      	str	r3, [r4, #8]
 80019a2:	dd1a      	ble.n	80019da <chSemSignalWait.constprop.47+0x4a>
 80019a4:	3b01      	subs	r3, #1
 80019a6:	2b00      	cmp	r3, #0
 80019a8:	60a3      	str	r3, [r4, #8]
 80019aa:	db06      	blt.n	80019ba <chSemSignalWait.constprop.47+0x2a>
 80019ac:	f7ff fd90 	bl	80014d0 <chSchRescheduleS>
 80019b0:	2000      	movs	r0, #0
 80019b2:	2300      	movs	r3, #0
 80019b4:	f383 8811 	msr	BASEPRI, r3
 80019b8:	bd38      	pop	{r3, r4, r5, pc}
 80019ba:	4a0e      	ldr	r2, [pc, #56]	; (80019f4 <chSemSignalWait.constprop.47+0x64>)
 80019bc:	6863      	ldr	r3, [r4, #4]
 80019be:	6995      	ldr	r5, [r2, #24]
 80019c0:	2005      	movs	r0, #5
 80019c2:	e9c5 4300 	strd	r4, r3, [r5]
 80019c6:	601d      	str	r5, [r3, #0]
 80019c8:	622c      	str	r4, [r5, #32]
 80019ca:	6065      	str	r5, [r4, #4]
 80019cc:	f7ff ffc8 	bl	8001960 <chSchGoSleepS>
 80019d0:	6a28      	ldr	r0, [r5, #32]
 80019d2:	2300      	movs	r3, #0
 80019d4:	f383 8811 	msr	BASEPRI, r3
 80019d8:	bd38      	pop	{r3, r4, r5, pc}
 80019da:	6820      	ldr	r0, [r4, #0]
 80019dc:	6803      	ldr	r3, [r0, #0]
 80019de:	6023      	str	r3, [r4, #0]
 80019e0:	605c      	str	r4, [r3, #4]
 80019e2:	f7ff f92d 	bl	8000c40 <chSchReadyI>
 80019e6:	2200      	movs	r2, #0
 80019e8:	68a3      	ldr	r3, [r4, #8]
 80019ea:	6202      	str	r2, [r0, #32]
 80019ec:	e7da      	b.n	80019a4 <chSemSignalWait.constprop.47+0x14>
 80019ee:	bf00      	nop
 80019f0:	200008ac 	.word	0x200008ac
 80019f4:	20000930 	.word	0x20000930
	...

08001a00 <sem3_execute>:
 8001a00:	b510      	push	{r4, lr}
 8001a02:	4a1e      	ldr	r2, [pc, #120]	; (8001a7c <sem3_execute+0x7c>)
 8001a04:	4b1e      	ldr	r3, [pc, #120]	; (8001a80 <sem3_execute+0x80>)
 8001a06:	6992      	ldr	r2, [r2, #24]
 8001a08:	481e      	ldr	r0, [pc, #120]	; (8001a84 <sem3_execute+0x84>)
 8001a0a:	6892      	ldr	r2, [r2, #8]
 8001a0c:	4c1e      	ldr	r4, [pc, #120]	; (8001a88 <sem3_execute+0x88>)
 8001a0e:	b082      	sub	sp, #8
 8001a10:	2100      	movs	r1, #0
 8001a12:	3201      	adds	r2, #1
 8001a14:	9100      	str	r1, [sp, #0]
 8001a16:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8001a1a:	f7ff ff69 	bl	80018f0 <chThdCreateStatic>
 8001a1e:	4b1b      	ldr	r3, [pc, #108]	; (8001a8c <sem3_execute+0x8c>)
 8001a20:	6018      	str	r0, [r3, #0]
 8001a22:	f7ff ffb5 	bl	8001990 <chSemSignalWait.constprop.47>
 8001a26:	6821      	ldr	r1, [r4, #0]
 8001a28:	1b09      	subs	r1, r1, r4
 8001a2a:	fab1 f181 	clz	r1, r1
 8001a2e:	2001      	movs	r0, #1
 8001a30:	0949      	lsrs	r1, r1, #5
 8001a32:	f7fe fe6d 	bl	8000710 <_test_assert>
 8001a36:	b108      	cbz	r0, 8001a3c <sem3_execute+0x3c>
 8001a38:	b002      	add	sp, #8
 8001a3a:	bd10      	pop	{r4, pc}
 8001a3c:	68a1      	ldr	r1, [r4, #8]
 8001a3e:	fab1 f181 	clz	r1, r1
 8001a42:	0949      	lsrs	r1, r1, #5
 8001a44:	2002      	movs	r0, #2
 8001a46:	f7fe fe63 	bl	8000710 <_test_assert>
 8001a4a:	2800      	cmp	r0, #0
 8001a4c:	d1f4      	bne.n	8001a38 <sem3_execute+0x38>
 8001a4e:	f7ff ff9f 	bl	8001990 <chSemSignalWait.constprop.47>
 8001a52:	6821      	ldr	r1, [r4, #0]
 8001a54:	1b09      	subs	r1, r1, r4
 8001a56:	fab1 f181 	clz	r1, r1
 8001a5a:	2003      	movs	r0, #3
 8001a5c:	0949      	lsrs	r1, r1, #5
 8001a5e:	f7fe fe57 	bl	8000710 <_test_assert>
 8001a62:	2800      	cmp	r0, #0
 8001a64:	d1e8      	bne.n	8001a38 <sem3_execute+0x38>
 8001a66:	68a1      	ldr	r1, [r4, #8]
 8001a68:	fab1 f181 	clz	r1, r1
 8001a6c:	0949      	lsrs	r1, r1, #5
 8001a6e:	2004      	movs	r0, #4
 8001a70:	b002      	add	sp, #8
 8001a72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001a76:	f7fe be4b 	b.w	8000710 <_test_assert>
 8001a7a:	bf00      	nop
 8001a7c:	20000930 	.word	0x20000930
 8001a80:	08003901 	.word	0x08003901
 8001a84:	20000b38 	.word	0x20000b38
 8001a88:	200008ac 	.word	0x200008ac
 8001a8c:	200011cc 	.word	0x200011cc

08001a90 <chEvtWaitOne.constprop.31>:
 8001a90:	4a0b      	ldr	r2, [pc, #44]	; (8001ac0 <chEvtWaitOne.constprop.31+0x30>)
 8001a92:	b510      	push	{r4, lr}
 8001a94:	2320      	movs	r3, #32
 8001a96:	6994      	ldr	r4, [r2, #24]
 8001a98:	f383 8811 	msr	BASEPRI, r3
 8001a9c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001a9e:	b933      	cbnz	r3, 8001aae <chEvtWaitOne.constprop.31+0x1e>
 8001aa0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001aa4:	6223      	str	r3, [r4, #32]
 8001aa6:	200a      	movs	r0, #10
 8001aa8:	f7ff ff5a 	bl	8001960 <chSchGoSleepS>
 8001aac:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001aae:	4258      	negs	r0, r3
 8001ab0:	4018      	ands	r0, r3
 8001ab2:	ea23 0300 	bic.w	r3, r3, r0
 8001ab6:	6363      	str	r3, [r4, #52]	; 0x34
 8001ab8:	2300      	movs	r3, #0
 8001aba:	f383 8811 	msr	BASEPRI, r3
 8001abe:	bd10      	pop	{r4, pc}
 8001ac0:	20000930 	.word	0x20000930
	...

08001ad0 <chEvtWaitAny.constprop.30>:
 8001ad0:	4a09      	ldr	r2, [pc, #36]	; (8001af8 <chEvtWaitAny.constprop.30+0x28>)
 8001ad2:	b510      	push	{r4, lr}
 8001ad4:	2320      	movs	r3, #32
 8001ad6:	6994      	ldr	r4, [r2, #24]
 8001ad8:	f383 8811 	msr	BASEPRI, r3
 8001adc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001ade:	b930      	cbnz	r0, 8001aee <chEvtWaitAny.constprop.30+0x1e>
 8001ae0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001ae4:	200a      	movs	r0, #10
 8001ae6:	6223      	str	r3, [r4, #32]
 8001ae8:	f7ff ff3a 	bl	8001960 <chSchGoSleepS>
 8001aec:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001aee:	2300      	movs	r3, #0
 8001af0:	6363      	str	r3, [r4, #52]	; 0x34
 8001af2:	f383 8811 	msr	BASEPRI, r3
 8001af6:	bd10      	pop	{r4, pc}
 8001af8:	20000930 	.word	0x20000930
 8001afc:	00000000 	.word	0x00000000

08001b00 <thread4.lto_priv.73>:
 8001b00:	4a07      	ldr	r2, [pc, #28]	; (8001b20 <thread4.lto_priv.73+0x20>)
 8001b02:	b510      	push	{r4, lr}
 8001b04:	2320      	movs	r3, #32
 8001b06:	6994      	ldr	r4, [r2, #24]
 8001b08:	f383 8811 	msr	BASEPRI, r3
 8001b0c:	2003      	movs	r0, #3
 8001b0e:	f7ff ff27 	bl	8001960 <chSchGoSleepS>
 8001b12:	6a23      	ldr	r3, [r4, #32]
 8001b14:	2b00      	cmp	r3, #0
 8001b16:	d0f9      	beq.n	8001b0c <thread4.lto_priv.73+0xc>
 8001b18:	2300      	movs	r3, #0
 8001b1a:	f383 8811 	msr	BASEPRI, r3
 8001b1e:	bd10      	pop	{r4, pc}
 8001b20:	20000930 	.word	0x20000930
	...

08001b30 <chSchGoSleepTimeoutS>:
 8001b30:	b530      	push	{r4, r5, lr}
 8001b32:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001b36:	4299      	cmp	r1, r3
 8001b38:	b087      	sub	sp, #28
 8001b3a:	d012      	beq.n	8001b62 <chSchGoSleepTimeoutS+0x32>
 8001b3c:	4c0c      	ldr	r4, [pc, #48]	; (8001b70 <chSchGoSleepTimeoutS+0x40>)
 8001b3e:	4a0d      	ldr	r2, [pc, #52]	; (8001b74 <chSchGoSleepTimeoutS+0x44>)
 8001b40:	69a3      	ldr	r3, [r4, #24]
 8001b42:	4605      	mov	r5, r0
 8001b44:	a801      	add	r0, sp, #4
 8001b46:	f7ff facb 	bl	80010e0 <chVTDoSetI>
 8001b4a:	4628      	mov	r0, r5
 8001b4c:	f7ff ff08 	bl	8001960 <chSchGoSleepS>
 8001b50:	9b04      	ldr	r3, [sp, #16]
 8001b52:	b113      	cbz	r3, 8001b5a <chSchGoSleepTimeoutS+0x2a>
 8001b54:	a801      	add	r0, sp, #4
 8001b56:	f7ff fa83 	bl	8001060 <chVTDoResetI>
 8001b5a:	69a3      	ldr	r3, [r4, #24]
 8001b5c:	6a18      	ldr	r0, [r3, #32]
 8001b5e:	b007      	add	sp, #28
 8001b60:	bd30      	pop	{r4, r5, pc}
 8001b62:	4c03      	ldr	r4, [pc, #12]	; (8001b70 <chSchGoSleepTimeoutS+0x40>)
 8001b64:	f7ff fefc 	bl	8001960 <chSchGoSleepS>
 8001b68:	69a3      	ldr	r3, [r4, #24]
 8001b6a:	6a18      	ldr	r0, [r3, #32]
 8001b6c:	b007      	add	sp, #28
 8001b6e:	bd30      	pop	{r4, r5, pc}
 8001b70:	20000930 	.word	0x20000930
 8001b74:	08000bd1 	.word	0x08000bd1
	...

08001b80 <chSemWaitTimeout.constprop.49>:
 8001b80:	2320      	movs	r3, #32
 8001b82:	f383 8811 	msr	BASEPRI, r3
 8001b86:	4b10      	ldr	r3, [pc, #64]	; (8001bc8 <chSemWaitTimeout.constprop.49+0x48>)
 8001b88:	6899      	ldr	r1, [r3, #8]
 8001b8a:	1e4a      	subs	r2, r1, #1
 8001b8c:	2a00      	cmp	r2, #0
 8001b8e:	609a      	str	r2, [r3, #8]
 8001b90:	db04      	blt.n	8001b9c <chSemWaitTimeout.constprop.49+0x1c>
 8001b92:	2000      	movs	r0, #0
 8001b94:	2300      	movs	r3, #0
 8001b96:	f383 8811 	msr	BASEPRI, r3
 8001b9a:	4770      	bx	lr
 8001b9c:	b180      	cbz	r0, 8001bc0 <chSemWaitTimeout.constprop.49+0x40>
 8001b9e:	4a0b      	ldr	r2, [pc, #44]	; (8001bcc <chSemWaitTimeout.constprop.49+0x4c>)
 8001ba0:	b510      	push	{r4, lr}
 8001ba2:	6992      	ldr	r2, [r2, #24]
 8001ba4:	685c      	ldr	r4, [r3, #4]
 8001ba6:	6213      	str	r3, [r2, #32]
 8001ba8:	e9c2 3400 	strd	r3, r4, [r2]
 8001bac:	4601      	mov	r1, r0
 8001bae:	6022      	str	r2, [r4, #0]
 8001bb0:	2005      	movs	r0, #5
 8001bb2:	605a      	str	r2, [r3, #4]
 8001bb4:	f7ff ffbc 	bl	8001b30 <chSchGoSleepTimeoutS>
 8001bb8:	2300      	movs	r3, #0
 8001bba:	f383 8811 	msr	BASEPRI, r3
 8001bbe:	bd10      	pop	{r4, pc}
 8001bc0:	6099      	str	r1, [r3, #8]
 8001bc2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001bc6:	e7e5      	b.n	8001b94 <chSemWaitTimeout.constprop.49+0x14>
 8001bc8:	200008ac 	.word	0x200008ac
 8001bcc:	20000930 	.word	0x20000930

08001bd0 <evt3_execute>:
 8001bd0:	b570      	push	{r4, r5, r6, lr}
 8001bd2:	4c55      	ldr	r4, [pc, #340]	; (8001d28 <evt3_execute+0x158>)
 8001bd4:	2320      	movs	r3, #32
 8001bd6:	69a2      	ldr	r2, [r4, #24]
 8001bd8:	f383 8811 	msr	BASEPRI, r3
 8001bdc:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001bde:	b93b      	cbnz	r3, 8001bf0 <evt3_execute+0x20>
 8001be0:	f383 8811 	msr	BASEPRI, r3
 8001be4:	2101      	movs	r1, #1
 8001be6:	2001      	movs	r0, #1
 8001be8:	f7fe fd92 	bl	8000710 <_test_assert>
 8001bec:	b180      	cbz	r0, 8001c10 <evt3_execute+0x40>
 8001bee:	bd70      	pop	{r4, r5, r6, pc}
 8001bf0:	4259      	negs	r1, r3
 8001bf2:	4019      	ands	r1, r3
 8001bf4:	ea23 0301 	bic.w	r3, r3, r1
 8001bf8:	6353      	str	r3, [r2, #52]	; 0x34
 8001bfa:	2300      	movs	r3, #0
 8001bfc:	f383 8811 	msr	BASEPRI, r3
 8001c00:	fab1 f181 	clz	r1, r1
 8001c04:	0949      	lsrs	r1, r1, #5
 8001c06:	2001      	movs	r0, #1
 8001c08:	f7fe fd82 	bl	8000710 <_test_assert>
 8001c0c:	2800      	cmp	r0, #0
 8001c0e:	d1ee      	bne.n	8001bee <evt3_execute+0x1e>
 8001c10:	69a3      	ldr	r3, [r4, #24]
 8001c12:	2220      	movs	r2, #32
 8001c14:	f382 8811 	msr	BASEPRI, r2
 8001c18:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001c1a:	2a00      	cmp	r2, #0
 8001c1c:	d06f      	beq.n	8001cfe <evt3_execute+0x12e>
 8001c1e:	6358      	str	r0, [r3, #52]	; 0x34
 8001c20:	f380 8811 	msr	BASEPRI, r0
 8001c24:	4601      	mov	r1, r0
 8001c26:	2002      	movs	r0, #2
 8001c28:	f7fe fd72 	bl	8000710 <_test_assert>
 8001c2c:	2800      	cmp	r0, #0
 8001c2e:	d1de      	bne.n	8001bee <evt3_execute+0x1e>
 8001c30:	69a3      	ldr	r3, [r4, #24]
 8001c32:	2220      	movs	r2, #32
 8001c34:	f382 8811 	msr	BASEPRI, r2
 8001c38:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001c3a:	3201      	adds	r2, #1
 8001c3c:	d063      	beq.n	8001d06 <evt3_execute+0x136>
 8001c3e:	f380 8811 	msr	BASEPRI, r0
 8001c42:	2001      	movs	r0, #1
 8001c44:	4601      	mov	r1, r0
 8001c46:	2003      	movs	r0, #3
 8001c48:	f7fe fd62 	bl	8000710 <_test_assert>
 8001c4c:	2800      	cmp	r0, #0
 8001c4e:	d1ce      	bne.n	8001bee <evt3_execute+0x1e>
 8001c50:	69a6      	ldr	r6, [r4, #24]
 8001c52:	2320      	movs	r3, #32
 8001c54:	f383 8811 	msr	BASEPRI, r3
 8001c58:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001c5a:	b94d      	cbnz	r5, 8001c70 <evt3_execute+0xa0>
 8001c5c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001c60:	210a      	movs	r1, #10
 8001c62:	6233      	str	r3, [r6, #32]
 8001c64:	4608      	mov	r0, r1
 8001c66:	f7ff ff63 	bl	8001b30 <chSchGoSleepTimeoutS>
 8001c6a:	2800      	cmp	r0, #0
 8001c6c:	db4f      	blt.n	8001d0e <evt3_execute+0x13e>
 8001c6e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001c70:	4269      	negs	r1, r5
 8001c72:	4029      	ands	r1, r5
 8001c74:	ea25 0501 	bic.w	r5, r5, r1
 8001c78:	6375      	str	r5, [r6, #52]	; 0x34
 8001c7a:	2300      	movs	r3, #0
 8001c7c:	f383 8811 	msr	BASEPRI, r3
 8001c80:	fab1 f181 	clz	r1, r1
 8001c84:	0949      	lsrs	r1, r1, #5
 8001c86:	2004      	movs	r0, #4
 8001c88:	f7fe fd42 	bl	8000710 <_test_assert>
 8001c8c:	2800      	cmp	r0, #0
 8001c8e:	d1ae      	bne.n	8001bee <evt3_execute+0x1e>
 8001c90:	69a6      	ldr	r6, [r4, #24]
 8001c92:	2320      	movs	r3, #32
 8001c94:	f383 8811 	msr	BASEPRI, r3
 8001c98:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001c9a:	b94d      	cbnz	r5, 8001cb0 <evt3_execute+0xe0>
 8001c9c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001ca0:	210a      	movs	r1, #10
 8001ca2:	6233      	str	r3, [r6, #32]
 8001ca4:	4608      	mov	r0, r1
 8001ca6:	f7ff ff43 	bl	8001b30 <chSchGoSleepTimeoutS>
 8001caa:	2800      	cmp	r0, #0
 8001cac:	db33      	blt.n	8001d16 <evt3_execute+0x146>
 8001cae:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001cb0:	2300      	movs	r3, #0
 8001cb2:	6373      	str	r3, [r6, #52]	; 0x34
 8001cb4:	f383 8811 	msr	BASEPRI, r3
 8001cb8:	fab5 f185 	clz	r1, r5
 8001cbc:	0949      	lsrs	r1, r1, #5
 8001cbe:	2005      	movs	r0, #5
 8001cc0:	f7fe fd26 	bl	8000710 <_test_assert>
 8001cc4:	4605      	mov	r5, r0
 8001cc6:	2800      	cmp	r0, #0
 8001cc8:	d191      	bne.n	8001bee <evt3_execute+0x1e>
 8001cca:	69a4      	ldr	r4, [r4, #24]
 8001ccc:	2320      	movs	r3, #32
 8001cce:	f383 8811 	msr	BASEPRI, r3
 8001cd2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001cd4:	3301      	adds	r3, #1
 8001cd6:	d008      	beq.n	8001cea <evt3_execute+0x11a>
 8001cd8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001cdc:	6223      	str	r3, [r4, #32]
 8001cde:	210a      	movs	r1, #10
 8001ce0:	200b      	movs	r0, #11
 8001ce2:	f7ff ff25 	bl	8001b30 <chSchGoSleepTimeoutS>
 8001ce6:	2800      	cmp	r0, #0
 8001ce8:	db19      	blt.n	8001d1e <evt3_execute+0x14e>
 8001cea:	2300      	movs	r3, #0
 8001cec:	6363      	str	r3, [r4, #52]	; 0x34
 8001cee:	f383 8811 	msr	BASEPRI, r3
 8001cf2:	4629      	mov	r1, r5
 8001cf4:	2006      	movs	r0, #6
 8001cf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001cfa:	f7fe bd09 	b.w	8000710 <_test_assert>
 8001cfe:	f382 8811 	msr	BASEPRI, r2
 8001d02:	2101      	movs	r1, #1
 8001d04:	e78f      	b.n	8001c26 <evt3_execute+0x56>
 8001d06:	6358      	str	r0, [r3, #52]	; 0x34
 8001d08:	f380 8811 	msr	BASEPRI, r0
 8001d0c:	e79a      	b.n	8001c44 <evt3_execute+0x74>
 8001d0e:	f385 8811 	msr	BASEPRI, r5
 8001d12:	2101      	movs	r1, #1
 8001d14:	e7b7      	b.n	8001c86 <evt3_execute+0xb6>
 8001d16:	f385 8811 	msr	BASEPRI, r5
 8001d1a:	2101      	movs	r1, #1
 8001d1c:	e7cf      	b.n	8001cbe <evt3_execute+0xee>
 8001d1e:	f385 8811 	msr	BASEPRI, r5
 8001d22:	2501      	movs	r5, #1
 8001d24:	e7e5      	b.n	8001cf2 <evt3_execute+0x122>
 8001d26:	bf00      	nop
 8001d28:	20000930 	.word	0x20000930
 8001d2c:	00000000 	.word	0x00000000

08001d30 <chSemWaitTimeoutS>:
 8001d30:	6883      	ldr	r3, [r0, #8]
 8001d32:	3b01      	subs	r3, #1
 8001d34:	2b00      	cmp	r3, #0
 8001d36:	6083      	str	r3, [r0, #8]
 8001d38:	db01      	blt.n	8001d3e <chSemWaitTimeoutS+0xe>
 8001d3a:	2000      	movs	r0, #0
 8001d3c:	4770      	bx	lr
 8001d3e:	4b07      	ldr	r3, [pc, #28]	; (8001d5c <chSemWaitTimeoutS+0x2c>)
 8001d40:	699b      	ldr	r3, [r3, #24]
 8001d42:	b410      	push	{r4}
 8001d44:	6218      	str	r0, [r3, #32]
 8001d46:	6018      	str	r0, [r3, #0]
 8001d48:	6844      	ldr	r4, [r0, #4]
 8001d4a:	605c      	str	r4, [r3, #4]
 8001d4c:	4602      	mov	r2, r0
 8001d4e:	6023      	str	r3, [r4, #0]
 8001d50:	2005      	movs	r0, #5
 8001d52:	6053      	str	r3, [r2, #4]
 8001d54:	bc10      	pop	{r4}
 8001d56:	f7ff beeb 	b.w	8001b30 <chSchGoSleepTimeoutS>
 8001d5a:	bf00      	nop
 8001d5c:	20000930 	.word	0x20000930

08001d60 <chMBPost.constprop.19>:
 8001d60:	b570      	push	{r4, r5, r6, lr}
 8001d62:	2320      	movs	r3, #32
 8001d64:	4606      	mov	r6, r0
 8001d66:	f383 8811 	msr	BASEPRI, r3
 8001d6a:	4c0d      	ldr	r4, [pc, #52]	; (8001da0 <chMBPost.constprop.19+0x40>)
 8001d6c:	f104 001c 	add.w	r0, r4, #28
 8001d70:	f7ff ffde 	bl	8001d30 <chSemWaitTimeoutS>
 8001d74:	4605      	mov	r5, r0
 8001d76:	b968      	cbnz	r0, 8001d94 <chMBPost.constprop.19+0x34>
 8001d78:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8001d7c:	1d13      	adds	r3, r2, #4
 8001d7e:	428b      	cmp	r3, r1
 8001d80:	60a3      	str	r3, [r4, #8]
 8001d82:	4808      	ldr	r0, [pc, #32]	; (8001da4 <chMBPost.constprop.19+0x44>)
 8001d84:	6016      	str	r6, [r2, #0]
 8001d86:	bf24      	itt	cs
 8001d88:	6823      	ldrcs	r3, [r4, #0]
 8001d8a:	60a3      	strcs	r3, [r4, #8]
 8001d8c:	f7ff f8e0 	bl	8000f50 <chSemSignalI>
 8001d90:	f7ff fb9e 	bl	80014d0 <chSchRescheduleS>
 8001d94:	2300      	movs	r3, #0
 8001d96:	f383 8811 	msr	BASEPRI, r3
 8001d9a:	4628      	mov	r0, r5
 8001d9c:	bd70      	pop	{r4, r5, r6, pc}
 8001d9e:	bf00      	nop
 8001da0:	20000854 	.word	0x20000854
 8001da4:	20000864 	.word	0x20000864
	...

08001db0 <chMBPostAhead.constprop.17>:
 8001db0:	b570      	push	{r4, r5, r6, lr}
 8001db2:	2320      	movs	r3, #32
 8001db4:	4606      	mov	r6, r0
 8001db6:	f383 8811 	msr	BASEPRI, r3
 8001dba:	4c10      	ldr	r4, [pc, #64]	; (8001dfc <chMBPostAhead.constprop.17+0x4c>)
 8001dbc:	f104 001c 	add.w	r0, r4, #28
 8001dc0:	f7ff ffb6 	bl	8001d30 <chSemWaitTimeoutS>
 8001dc4:	4605      	mov	r5, r0
 8001dc6:	b120      	cbz	r0, 8001dd2 <chMBPostAhead.constprop.17+0x22>
 8001dc8:	2300      	movs	r3, #0
 8001dca:	f383 8811 	msr	BASEPRI, r3
 8001dce:	4628      	mov	r0, r5
 8001dd0:	bd70      	pop	{r4, r5, r6, pc}
 8001dd2:	68e3      	ldr	r3, [r4, #12]
 8001dd4:	6822      	ldr	r2, [r4, #0]
 8001dd6:	3b04      	subs	r3, #4
 8001dd8:	4293      	cmp	r3, r2
 8001dda:	60e3      	str	r3, [r4, #12]
 8001ddc:	d202      	bcs.n	8001de4 <chMBPostAhead.constprop.17+0x34>
 8001dde:	6863      	ldr	r3, [r4, #4]
 8001de0:	3b04      	subs	r3, #4
 8001de2:	60e3      	str	r3, [r4, #12]
 8001de4:	601e      	str	r6, [r3, #0]
 8001de6:	4806      	ldr	r0, [pc, #24]	; (8001e00 <chMBPostAhead.constprop.17+0x50>)
 8001de8:	f7ff f8b2 	bl	8000f50 <chSemSignalI>
 8001dec:	f7ff fb70 	bl	80014d0 <chSchRescheduleS>
 8001df0:	2300      	movs	r3, #0
 8001df2:	f383 8811 	msr	BASEPRI, r3
 8001df6:	4628      	mov	r0, r5
 8001df8:	bd70      	pop	{r4, r5, r6, pc}
 8001dfa:	bf00      	nop
 8001dfc:	20000854 	.word	0x20000854
 8001e00:	20000864 	.word	0x20000864
	...

08001e10 <chMBFetch.constprop.15>:
 8001e10:	b570      	push	{r4, r5, r6, lr}
 8001e12:	2320      	movs	r3, #32
 8001e14:	4606      	mov	r6, r0
 8001e16:	f383 8811 	msr	BASEPRI, r3
 8001e1a:	4c0d      	ldr	r4, [pc, #52]	; (8001e50 <chMBFetch.constprop.15+0x40>)
 8001e1c:	f104 0010 	add.w	r0, r4, #16
 8001e20:	f7ff ff86 	bl	8001d30 <chSemWaitTimeoutS>
 8001e24:	4605      	mov	r5, r0
 8001e26:	b970      	cbnz	r0, 8001e46 <chMBFetch.constprop.15+0x36>
 8001e28:	68e3      	ldr	r3, [r4, #12]
 8001e2a:	6862      	ldr	r2, [r4, #4]
 8001e2c:	6819      	ldr	r1, [r3, #0]
 8001e2e:	4809      	ldr	r0, [pc, #36]	; (8001e54 <chMBFetch.constprop.15+0x44>)
 8001e30:	3304      	adds	r3, #4
 8001e32:	4293      	cmp	r3, r2
 8001e34:	60e3      	str	r3, [r4, #12]
 8001e36:	6031      	str	r1, [r6, #0]
 8001e38:	bf24      	itt	cs
 8001e3a:	6823      	ldrcs	r3, [r4, #0]
 8001e3c:	60e3      	strcs	r3, [r4, #12]
 8001e3e:	f7ff f887 	bl	8000f50 <chSemSignalI>
 8001e42:	f7ff fb45 	bl	80014d0 <chSchRescheduleS>
 8001e46:	2300      	movs	r3, #0
 8001e48:	f383 8811 	msr	BASEPRI, r3
 8001e4c:	4628      	mov	r0, r5
 8001e4e:	bd70      	pop	{r4, r5, r6, pc}
 8001e50:	20000854 	.word	0x20000854
 8001e54:	20000870 	.word	0x20000870
	...

08001e60 <mbox1_execute>:
 8001e60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e62:	2320      	movs	r3, #32
 8001e64:	b083      	sub	sp, #12
 8001e66:	f383 8811 	msr	BASEPRI, r3
 8001e6a:	4dd1      	ldr	r5, [pc, #836]	; (80021b0 <mbox1_execute+0x350>)
 8001e6c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8001e6e:	f1a1 0105 	sub.w	r1, r1, #5
 8001e72:	fab1 f181 	clz	r1, r1
 8001e76:	2001      	movs	r0, #1
 8001e78:	0949      	lsrs	r1, r1, #5
 8001e7a:	f7fe fc49 	bl	8000710 <_test_assert>
 8001e7e:	2800      	cmp	r0, #0
 8001e80:	f040 8191 	bne.w	80021a6 <mbox1_execute+0x346>
 8001e84:	f380 8811 	msr	BASEPRI, r0
 8001e88:	2442      	movs	r4, #66	; 0x42
 8001e8a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001e8e:	4620      	mov	r0, r4
 8001e90:	f7ff ff66 	bl	8001d60 <chMBPost.constprop.19>
 8001e94:	fab0 f180 	clz	r1, r0
 8001e98:	0949      	lsrs	r1, r1, #5
 8001e9a:	2002      	movs	r0, #2
 8001e9c:	f7fe fc38 	bl	8000710 <_test_assert>
 8001ea0:	3401      	adds	r4, #1
 8001ea2:	b978      	cbnz	r0, 8001ec4 <mbox1_execute+0x64>
 8001ea4:	2c46      	cmp	r4, #70	; 0x46
 8001ea6:	d1f0      	bne.n	8001e8a <mbox1_execute+0x2a>
 8001ea8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001eac:	2041      	movs	r0, #65	; 0x41
 8001eae:	f7ff ff7f 	bl	8001db0 <chMBPostAhead.constprop.17>
 8001eb2:	fab0 f180 	clz	r1, r0
 8001eb6:	0949      	lsrs	r1, r1, #5
 8001eb8:	2003      	movs	r0, #3
 8001eba:	f7fe fc29 	bl	8000710 <_test_assert>
 8001ebe:	2800      	cmp	r0, #0
 8001ec0:	f000 817e 	beq.w	80021c0 <mbox1_execute+0x360>
 8001ec4:	b003      	add	sp, #12
 8001ec6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ec8:	f380 8811 	msr	BASEPRI, r0
 8001ecc:	f384 8811 	msr	BASEPRI, r4
 8001ed0:	2041      	movs	r0, #65	; 0x41
 8001ed2:	f7ff f84d 	bl	8000f70 <chMBPostI.constprop.18>
 8001ed6:	fab0 f180 	clz	r1, r0
 8001eda:	0949      	lsrs	r1, r1, #5
 8001edc:	2016      	movs	r0, #22
 8001ede:	f7fe fc17 	bl	8000710 <_test_assert>
 8001ee2:	2800      	cmp	r0, #0
 8001ee4:	d1ee      	bne.n	8001ec4 <mbox1_execute+0x64>
 8001ee6:	2042      	movs	r0, #66	; 0x42
 8001ee8:	f7ff f842 	bl	8000f70 <chMBPostI.constprop.18>
 8001eec:	fab0 f180 	clz	r1, r0
 8001ef0:	0949      	lsrs	r1, r1, #5
 8001ef2:	2017      	movs	r0, #23
 8001ef4:	f7fe fc0c 	bl	8000710 <_test_assert>
 8001ef8:	2800      	cmp	r0, #0
 8001efa:	d1e3      	bne.n	8001ec4 <mbox1_execute+0x64>
 8001efc:	2043      	movs	r0, #67	; 0x43
 8001efe:	f7ff f837 	bl	8000f70 <chMBPostI.constprop.18>
 8001f02:	fab0 f180 	clz	r1, r0
 8001f06:	0949      	lsrs	r1, r1, #5
 8001f08:	2018      	movs	r0, #24
 8001f0a:	f7fe fc01 	bl	8000710 <_test_assert>
 8001f0e:	2800      	cmp	r0, #0
 8001f10:	d1d8      	bne.n	8001ec4 <mbox1_execute+0x64>
 8001f12:	2044      	movs	r0, #68	; 0x44
 8001f14:	f7ff f82c 	bl	8000f70 <chMBPostI.constprop.18>
 8001f18:	fab0 f180 	clz	r1, r0
 8001f1c:	0949      	lsrs	r1, r1, #5
 8001f1e:	2019      	movs	r0, #25
 8001f20:	f7fe fbf6 	bl	8000710 <_test_assert>
 8001f24:	4606      	mov	r6, r0
 8001f26:	2800      	cmp	r0, #0
 8001f28:	d1cc      	bne.n	8001ec4 <mbox1_execute+0x64>
 8001f2a:	2045      	movs	r0, #69	; 0x45
 8001f2c:	f7ff f820 	bl	8000f70 <chMBPostI.constprop.18>
 8001f30:	f386 8811 	msr	BASEPRI, r6
 8001f34:	fab0 f180 	clz	r1, r0
 8001f38:	0949      	lsrs	r1, r1, #5
 8001f3a:	201a      	movs	r0, #26
 8001f3c:	f7fe fbe8 	bl	8000710 <_test_assert>
 8001f40:	2800      	cmp	r0, #0
 8001f42:	d1bf      	bne.n	8001ec4 <mbox1_execute+0x64>
 8001f44:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8001f48:	eba1 0c03 	sub.w	ip, r1, r3
 8001f4c:	f1dc 0100 	rsbs	r1, ip, #0
 8001f50:	eb41 010c 	adc.w	r1, r1, ip
 8001f54:	201b      	movs	r0, #27
 8001f56:	f7fe fbdb 	bl	8000710 <_test_assert>
 8001f5a:	2800      	cmp	r0, #0
 8001f5c:	d1b2      	bne.n	8001ec4 <mbox1_execute+0x64>
 8001f5e:	4607      	mov	r7, r0
 8001f60:	2605      	movs	r6, #5
 8001f62:	f384 8811 	msr	BASEPRI, r4
 8001f66:	a801      	add	r0, sp, #4
 8001f68:	f7ff f842 	bl	8000ff0 <chMBFetchI.constprop.14>
 8001f6c:	f387 8811 	msr	BASEPRI, r7
 8001f70:	fab0 f180 	clz	r1, r0
 8001f74:	0949      	lsrs	r1, r1, #5
 8001f76:	201c      	movs	r0, #28
 8001f78:	f7fe fbca 	bl	8000710 <_test_assert>
 8001f7c:	2800      	cmp	r0, #0
 8001f7e:	d1a1      	bne.n	8001ec4 <mbox1_execute+0x64>
 8001f80:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8001f84:	f7fe fbdc 	bl	8000740 <test_emit_token>
 8001f88:	3e01      	subs	r6, #1
 8001f8a:	d1ea      	bne.n	8001f62 <mbox1_execute+0x102>
 8001f8c:	4989      	ldr	r1, [pc, #548]	; (80021b4 <mbox1_execute+0x354>)
 8001f8e:	201d      	movs	r0, #29
 8001f90:	f7fe fb96 	bl	80006c0 <_test_assert_sequence>
 8001f94:	2800      	cmp	r0, #0
 8001f96:	d195      	bne.n	8001ec4 <mbox1_execute+0x64>
 8001f98:	f384 8811 	msr	BASEPRI, r4
 8001f9c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8001f9e:	1f4f      	subs	r7, r1, #5
 8001fa0:	4279      	negs	r1, r7
 8001fa2:	4179      	adcs	r1, r7
 8001fa4:	201e      	movs	r0, #30
 8001fa6:	f7fe fbb3 	bl	8000710 <_test_assert>
 8001faa:	2800      	cmp	r0, #0
 8001fac:	f040 8223 	bne.w	80023f6 <mbox1_execute+0x596>
 8001fb0:	f386 8811 	msr	BASEPRI, r6
 8001fb4:	f384 8811 	msr	BASEPRI, r4
 8001fb8:	69a9      	ldr	r1, [r5, #24]
 8001fba:	fab1 f181 	clz	r1, r1
 8001fbe:	0949      	lsrs	r1, r1, #5
 8001fc0:	201f      	movs	r0, #31
 8001fc2:	f7fe fba5 	bl	8000710 <_test_assert>
 8001fc6:	2800      	cmp	r0, #0
 8001fc8:	f040 8215 	bne.w	80023f6 <mbox1_execute+0x596>
 8001fcc:	f386 8811 	msr	BASEPRI, r6
 8001fd0:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8001fd4:	1aca      	subs	r2, r1, r3
 8001fd6:	4251      	negs	r1, r2
 8001fd8:	4151      	adcs	r1, r2
 8001fda:	2020      	movs	r0, #32
 8001fdc:	f7fe fb98 	bl	8000710 <_test_assert>
 8001fe0:	2800      	cmp	r0, #0
 8001fe2:	f47f af6f 	bne.w	8001ec4 <mbox1_execute+0x64>
 8001fe6:	f384 8811 	msr	BASEPRI, r4
 8001fea:	2045      	movs	r0, #69	; 0x45
 8001fec:	f7fe ffe0 	bl	8000fb0 <chMBPostAheadI.constprop.16>
 8001ff0:	fab0 f180 	clz	r1, r0
 8001ff4:	0949      	lsrs	r1, r1, #5
 8001ff6:	2021      	movs	r0, #33	; 0x21
 8001ff8:	f7fe fb8a 	bl	8000710 <_test_assert>
 8001ffc:	2800      	cmp	r0, #0
 8001ffe:	f47f af61 	bne.w	8001ec4 <mbox1_execute+0x64>
 8002002:	2044      	movs	r0, #68	; 0x44
 8002004:	f7fe ffd4 	bl	8000fb0 <chMBPostAheadI.constprop.16>
 8002008:	fab0 f180 	clz	r1, r0
 800200c:	0949      	lsrs	r1, r1, #5
 800200e:	2022      	movs	r0, #34	; 0x22
 8002010:	f7fe fb7e 	bl	8000710 <_test_assert>
 8002014:	2800      	cmp	r0, #0
 8002016:	f47f af55 	bne.w	8001ec4 <mbox1_execute+0x64>
 800201a:	2043      	movs	r0, #67	; 0x43
 800201c:	f7fe ffc8 	bl	8000fb0 <chMBPostAheadI.constprop.16>
 8002020:	fab0 f180 	clz	r1, r0
 8002024:	0949      	lsrs	r1, r1, #5
 8002026:	2023      	movs	r0, #35	; 0x23
 8002028:	f7fe fb72 	bl	8000710 <_test_assert>
 800202c:	2800      	cmp	r0, #0
 800202e:	f47f af49 	bne.w	8001ec4 <mbox1_execute+0x64>
 8002032:	2042      	movs	r0, #66	; 0x42
 8002034:	f7fe ffbc 	bl	8000fb0 <chMBPostAheadI.constprop.16>
 8002038:	fab0 f180 	clz	r1, r0
 800203c:	0949      	lsrs	r1, r1, #5
 800203e:	2024      	movs	r0, #36	; 0x24
 8002040:	f7fe fb66 	bl	8000710 <_test_assert>
 8002044:	2800      	cmp	r0, #0
 8002046:	f47f af3d 	bne.w	8001ec4 <mbox1_execute+0x64>
 800204a:	2041      	movs	r0, #65	; 0x41
 800204c:	f7fe ffb0 	bl	8000fb0 <chMBPostAheadI.constprop.16>
 8002050:	2300      	movs	r3, #0
 8002052:	f383 8811 	msr	BASEPRI, r3
 8002056:	fab0 f180 	clz	r1, r0
 800205a:	0949      	lsrs	r1, r1, #5
 800205c:	2025      	movs	r0, #37	; 0x25
 800205e:	f7fe fb57 	bl	8000710 <_test_assert>
 8002062:	2800      	cmp	r0, #0
 8002064:	f47f af2e 	bne.w	8001ec4 <mbox1_execute+0x64>
 8002068:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800206c:	1acb      	subs	r3, r1, r3
 800206e:	4259      	negs	r1, r3
 8002070:	4159      	adcs	r1, r3
 8002072:	2026      	movs	r0, #38	; 0x26
 8002074:	f7fe fb4c 	bl	8000710 <_test_assert>
 8002078:	2800      	cmp	r0, #0
 800207a:	f47f af23 	bne.w	8001ec4 <mbox1_execute+0x64>
 800207e:	4606      	mov	r6, r0
 8002080:	2405      	movs	r4, #5
 8002082:	2720      	movs	r7, #32
 8002084:	f387 8811 	msr	BASEPRI, r7
 8002088:	a801      	add	r0, sp, #4
 800208a:	f7fe ffb1 	bl	8000ff0 <chMBFetchI.constprop.14>
 800208e:	f386 8811 	msr	BASEPRI, r6
 8002092:	fab0 f180 	clz	r1, r0
 8002096:	0949      	lsrs	r1, r1, #5
 8002098:	2027      	movs	r0, #39	; 0x27
 800209a:	f7fe fb39 	bl	8000710 <_test_assert>
 800209e:	2800      	cmp	r0, #0
 80020a0:	f47f af10 	bne.w	8001ec4 <mbox1_execute+0x64>
 80020a4:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80020a8:	f7fe fb4a 	bl	8000740 <test_emit_token>
 80020ac:	3c01      	subs	r4, #1
 80020ae:	d1e9      	bne.n	8002084 <mbox1_execute+0x224>
 80020b0:	4940      	ldr	r1, [pc, #256]	; (80021b4 <mbox1_execute+0x354>)
 80020b2:	2028      	movs	r0, #40	; 0x28
 80020b4:	f7fe fb04 	bl	80006c0 <_test_assert_sequence>
 80020b8:	2800      	cmp	r0, #0
 80020ba:	f47f af03 	bne.w	8001ec4 <mbox1_execute+0x64>
 80020be:	f387 8811 	msr	BASEPRI, r7
 80020c2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80020c4:	f1a1 0e05 	sub.w	lr, r1, #5
 80020c8:	f1de 0100 	rsbs	r1, lr, #0
 80020cc:	eb41 010e 	adc.w	r1, r1, lr
 80020d0:	2029      	movs	r0, #41	; 0x29
 80020d2:	f7fe fb1d 	bl	8000710 <_test_assert>
 80020d6:	2800      	cmp	r0, #0
 80020d8:	f040 80c5 	bne.w	8002266 <mbox1_execute+0x406>
 80020dc:	f384 8811 	msr	BASEPRI, r4
 80020e0:	f387 8811 	msr	BASEPRI, r7
 80020e4:	69a9      	ldr	r1, [r5, #24]
 80020e6:	fab1 f181 	clz	r1, r1
 80020ea:	0949      	lsrs	r1, r1, #5
 80020ec:	202a      	movs	r0, #42	; 0x2a
 80020ee:	f7fe fb0f 	bl	8000710 <_test_assert>
 80020f2:	2800      	cmp	r0, #0
 80020f4:	f040 80b7 	bne.w	8002266 <mbox1_execute+0x406>
 80020f8:	f384 8811 	msr	BASEPRI, r4
 80020fc:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002100:	eba1 0c03 	sub.w	ip, r1, r3
 8002104:	f1dc 0100 	rsbs	r1, ip, #0
 8002108:	eb41 010c 	adc.w	r1, r1, ip
 800210c:	202b      	movs	r0, #43	; 0x2b
 800210e:	f7fe faff 	bl	8000710 <_test_assert>
 8002112:	2800      	cmp	r0, #0
 8002114:	f47f aed6 	bne.w	8001ec4 <mbox1_execute+0x64>
 8002118:	f387 8811 	msr	BASEPRI, r7
 800211c:	e9d5 3200 	ldrd	r3, r2, [r5]
 8002120:	1ad2      	subs	r2, r2, r3
 8002122:	1091      	asrs	r1, r2, #2
 8002124:	4824      	ldr	r0, [pc, #144]	; (80021b8 <mbox1_execute+0x358>)
 8002126:	60ab      	str	r3, [r5, #8]
 8002128:	60eb      	str	r3, [r5, #12]
 800212a:	f7fe ff81 	bl	8001030 <chSemResetI>
 800212e:	4621      	mov	r1, r4
 8002130:	4822      	ldr	r0, [pc, #136]	; (80021bc <mbox1_execute+0x35c>)
 8002132:	f7fe ff7d 	bl	8001030 <chSemResetI>
 8002136:	f7ff f9cb 	bl	80014d0 <chSchRescheduleS>
 800213a:	f384 8811 	msr	BASEPRI, r4
 800213e:	f387 8811 	msr	BASEPRI, r7
 8002142:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002144:	1f4e      	subs	r6, r1, #5
 8002146:	4271      	negs	r1, r6
 8002148:	4171      	adcs	r1, r6
 800214a:	202c      	movs	r0, #44	; 0x2c
 800214c:	f7fe fae0 	bl	8000710 <_test_assert>
 8002150:	2800      	cmp	r0, #0
 8002152:	f040 8088 	bne.w	8002266 <mbox1_execute+0x406>
 8002156:	f384 8811 	msr	BASEPRI, r4
 800215a:	f387 8811 	msr	BASEPRI, r7
 800215e:	69a9      	ldr	r1, [r5, #24]
 8002160:	fab1 f181 	clz	r1, r1
 8002164:	0949      	lsrs	r1, r1, #5
 8002166:	202d      	movs	r0, #45	; 0x2d
 8002168:	f7fe fad2 	bl	8000710 <_test_assert>
 800216c:	2800      	cmp	r0, #0
 800216e:	d17a      	bne.n	8002266 <mbox1_execute+0x406>
 8002170:	f384 8811 	msr	BASEPRI, r4
 8002174:	f387 8811 	msr	BASEPRI, r7
 8002178:	6829      	ldr	r1, [r5, #0]
 800217a:	68ab      	ldr	r3, [r5, #8]
 800217c:	1aca      	subs	r2, r1, r3
 800217e:	4251      	negs	r1, r2
 8002180:	4151      	adcs	r1, r2
 8002182:	202e      	movs	r0, #46	; 0x2e
 8002184:	f7fe fac4 	bl	8000710 <_test_assert>
 8002188:	2800      	cmp	r0, #0
 800218a:	d16c      	bne.n	8002266 <mbox1_execute+0x406>
 800218c:	f384 8811 	msr	BASEPRI, r4
 8002190:	f387 8811 	msr	BASEPRI, r7
 8002194:	6829      	ldr	r1, [r5, #0]
 8002196:	68eb      	ldr	r3, [r5, #12]
 8002198:	1acb      	subs	r3, r1, r3
 800219a:	4259      	negs	r1, r3
 800219c:	f04f 002f 	mov.w	r0, #47	; 0x2f
 80021a0:	4159      	adcs	r1, r3
 80021a2:	f7fe fab5 	bl	8000710 <_test_assert>
 80021a6:	2300      	movs	r3, #0
 80021a8:	f383 8811 	msr	BASEPRI, r3
 80021ac:	b003      	add	sp, #12
 80021ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80021b0:	20000854 	.word	0x20000854
 80021b4:	08005f60 	.word	0x08005f60
 80021b8:	20000870 	.word	0x20000870
 80021bc:	20000864 	.word	0x20000864
 80021c0:	2101      	movs	r1, #1
 80021c2:	2058      	movs	r0, #88	; 0x58
 80021c4:	f7ff fdcc 	bl	8001d60 <chMBPost.constprop.19>
 80021c8:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 80021cc:	fab1 f181 	clz	r1, r1
 80021d0:	0949      	lsrs	r1, r1, #5
 80021d2:	2004      	movs	r0, #4
 80021d4:	f7fe fa9c 	bl	8000710 <_test_assert>
 80021d8:	4604      	mov	r4, r0
 80021da:	2800      	cmp	r0, #0
 80021dc:	f47f ae72 	bne.w	8001ec4 <mbox1_execute+0x64>
 80021e0:	2620      	movs	r6, #32
 80021e2:	f386 8811 	msr	BASEPRI, r6
 80021e6:	2058      	movs	r0, #88	; 0x58
 80021e8:	f7fe fec2 	bl	8000f70 <chMBPostI.constprop.18>
 80021ec:	4601      	mov	r1, r0
 80021ee:	f384 8811 	msr	BASEPRI, r4
 80021f2:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 80021f6:	fab1 f181 	clz	r1, r1
 80021fa:	2005      	movs	r0, #5
 80021fc:	0949      	lsrs	r1, r1, #5
 80021fe:	f7fe fa87 	bl	8000710 <_test_assert>
 8002202:	2800      	cmp	r0, #0
 8002204:	f47f ae5e 	bne.w	8001ec4 <mbox1_execute+0x64>
 8002208:	2101      	movs	r1, #1
 800220a:	2058      	movs	r0, #88	; 0x58
 800220c:	f7ff fdd0 	bl	8001db0 <chMBPostAhead.constprop.17>
 8002210:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8002214:	fab1 f181 	clz	r1, r1
 8002218:	0949      	lsrs	r1, r1, #5
 800221a:	2006      	movs	r0, #6
 800221c:	f7fe fa78 	bl	8000710 <_test_assert>
 8002220:	4604      	mov	r4, r0
 8002222:	2800      	cmp	r0, #0
 8002224:	f47f ae4e 	bne.w	8001ec4 <mbox1_execute+0x64>
 8002228:	f386 8811 	msr	BASEPRI, r6
 800222c:	2058      	movs	r0, #88	; 0x58
 800222e:	f7fe febf 	bl	8000fb0 <chMBPostAheadI.constprop.16>
 8002232:	4601      	mov	r1, r0
 8002234:	f384 8811 	msr	BASEPRI, r4
 8002238:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 800223c:	fab1 f181 	clz	r1, r1
 8002240:	2007      	movs	r0, #7
 8002242:	0949      	lsrs	r1, r1, #5
 8002244:	f7fe fa64 	bl	8000710 <_test_assert>
 8002248:	4604      	mov	r4, r0
 800224a:	2800      	cmp	r0, #0
 800224c:	f47f ae3a 	bne.w	8001ec4 <mbox1_execute+0x64>
 8002250:	f386 8811 	msr	BASEPRI, r6
 8002254:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002256:	fab1 f181 	clz	r1, r1
 800225a:	0949      	lsrs	r1, r1, #5
 800225c:	2008      	movs	r0, #8
 800225e:	f7fe fa57 	bl	8000710 <_test_assert>
 8002262:	4607      	mov	r7, r0
 8002264:	b110      	cbz	r0, 800226c <mbox1_execute+0x40c>
 8002266:	f384 8811 	msr	BASEPRI, r4
 800226a:	e62b      	b.n	8001ec4 <mbox1_execute+0x64>
 800226c:	f380 8811 	msr	BASEPRI, r0
 8002270:	f386 8811 	msr	BASEPRI, r6
 8002274:	69a9      	ldr	r1, [r5, #24]
 8002276:	f1a1 0e05 	sub.w	lr, r1, #5
 800227a:	f1de 0100 	rsbs	r1, lr, #0
 800227e:	eb41 010e 	adc.w	r1, r1, lr
 8002282:	2009      	movs	r0, #9
 8002284:	f7fe fa44 	bl	8000710 <_test_assert>
 8002288:	b110      	cbz	r0, 8002290 <mbox1_execute+0x430>
 800228a:	f387 8811 	msr	BASEPRI, r7
 800228e:	e619      	b.n	8001ec4 <mbox1_execute+0x64>
 8002290:	f380 8811 	msr	BASEPRI, r0
 8002294:	f386 8811 	msr	BASEPRI, r6
 8002298:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800229c:	eba1 0c03 	sub.w	ip, r1, r3
 80022a0:	f1dc 0100 	rsbs	r1, ip, #0
 80022a4:	f04f 000a 	mov.w	r0, #10
 80022a8:	eb41 010c 	adc.w	r1, r1, ip
 80022ac:	f7fe fa30 	bl	8000710 <_test_assert>
 80022b0:	2300      	movs	r3, #0
 80022b2:	2800      	cmp	r0, #0
 80022b4:	f47f af78 	bne.w	80021a8 <mbox1_execute+0x348>
 80022b8:	f383 8811 	msr	BASEPRI, r3
 80022bc:	2405      	movs	r4, #5
 80022be:	e005      	b.n	80022cc <mbox1_execute+0x46c>
 80022c0:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80022c4:	f7fe fa3c 	bl	8000740 <test_emit_token>
 80022c8:	3c01      	subs	r4, #1
 80022ca:	d00d      	beq.n	80022e8 <mbox1_execute+0x488>
 80022cc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80022d0:	a801      	add	r0, sp, #4
 80022d2:	f7ff fd9d 	bl	8001e10 <chMBFetch.constprop.15>
 80022d6:	fab0 f180 	clz	r1, r0
 80022da:	0949      	lsrs	r1, r1, #5
 80022dc:	200b      	movs	r0, #11
 80022de:	f7fe fa17 	bl	8000710 <_test_assert>
 80022e2:	2800      	cmp	r0, #0
 80022e4:	d0ec      	beq.n	80022c0 <mbox1_execute+0x460>
 80022e6:	e5ed      	b.n	8001ec4 <mbox1_execute+0x64>
 80022e8:	4944      	ldr	r1, [pc, #272]	; (80023fc <mbox1_execute+0x59c>)
 80022ea:	200c      	movs	r0, #12
 80022ec:	f7fe f9e8 	bl	80006c0 <_test_assert_sequence>
 80022f0:	2800      	cmp	r0, #0
 80022f2:	f47f ade7 	bne.w	8001ec4 <mbox1_execute+0x64>
 80022f6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80022fa:	2047      	movs	r0, #71	; 0x47
 80022fc:	f7ff fd30 	bl	8001d60 <chMBPost.constprop.19>
 8002300:	fab0 f180 	clz	r1, r0
 8002304:	0949      	lsrs	r1, r1, #5
 8002306:	200d      	movs	r0, #13
 8002308:	f7fe fa02 	bl	8000710 <_test_assert>
 800230c:	2800      	cmp	r0, #0
 800230e:	f47f add9 	bne.w	8001ec4 <mbox1_execute+0x64>
 8002312:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002316:	a801      	add	r0, sp, #4
 8002318:	f7ff fd7a 	bl	8001e10 <chMBFetch.constprop.15>
 800231c:	fab0 f180 	clz	r1, r0
 8002320:	0949      	lsrs	r1, r1, #5
 8002322:	200e      	movs	r0, #14
 8002324:	f7fe f9f4 	bl	8000710 <_test_assert>
 8002328:	2800      	cmp	r0, #0
 800232a:	f47f adcb 	bne.w	8001ec4 <mbox1_execute+0x64>
 800232e:	6829      	ldr	r1, [r5, #0]
 8002330:	68ab      	ldr	r3, [r5, #8]
 8002332:	1acf      	subs	r7, r1, r3
 8002334:	4279      	negs	r1, r7
 8002336:	4179      	adcs	r1, r7
 8002338:	200f      	movs	r0, #15
 800233a:	f7fe f9e9 	bl	8000710 <_test_assert>
 800233e:	2800      	cmp	r0, #0
 8002340:	f47f adc0 	bne.w	8001ec4 <mbox1_execute+0x64>
 8002344:	6829      	ldr	r1, [r5, #0]
 8002346:	68eb      	ldr	r3, [r5, #12]
 8002348:	1ace      	subs	r6, r1, r3
 800234a:	4271      	negs	r1, r6
 800234c:	4171      	adcs	r1, r6
 800234e:	2010      	movs	r0, #16
 8002350:	f7fe f9de 	bl	8000710 <_test_assert>
 8002354:	2800      	cmp	r0, #0
 8002356:	f47f adb5 	bne.w	8001ec4 <mbox1_execute+0x64>
 800235a:	2101      	movs	r1, #1
 800235c:	a801      	add	r0, sp, #4
 800235e:	f7ff fd57 	bl	8001e10 <chMBFetch.constprop.15>
 8002362:	3001      	adds	r0, #1
 8002364:	4241      	negs	r1, r0
 8002366:	4141      	adcs	r1, r0
 8002368:	2011      	movs	r0, #17
 800236a:	f7fe f9d1 	bl	8000710 <_test_assert>
 800236e:	2800      	cmp	r0, #0
 8002370:	f47f ada8 	bne.w	8001ec4 <mbox1_execute+0x64>
 8002374:	2620      	movs	r6, #32
 8002376:	f386 8811 	msr	BASEPRI, r6
 800237a:	a801      	add	r0, sp, #4
 800237c:	f7fe fe38 	bl	8000ff0 <chMBFetchI.constprop.14>
 8002380:	4601      	mov	r1, r0
 8002382:	f384 8811 	msr	BASEPRI, r4
 8002386:	1c4a      	adds	r2, r1, #1
 8002388:	4251      	negs	r1, r2
 800238a:	4151      	adcs	r1, r2
 800238c:	2012      	movs	r0, #18
 800238e:	f7fe f9bf 	bl	8000710 <_test_assert>
 8002392:	2800      	cmp	r0, #0
 8002394:	f47f ad96 	bne.w	8001ec4 <mbox1_execute+0x64>
 8002398:	f386 8811 	msr	BASEPRI, r6
 800239c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800239e:	1f4b      	subs	r3, r1, #5
 80023a0:	4259      	negs	r1, r3
 80023a2:	4159      	adcs	r1, r3
 80023a4:	2013      	movs	r0, #19
 80023a6:	f7fe f9b3 	bl	8000710 <_test_assert>
 80023aa:	2800      	cmp	r0, #0
 80023ac:	f47f aefb 	bne.w	80021a6 <mbox1_execute+0x346>
 80023b0:	2700      	movs	r7, #0
 80023b2:	f387 8811 	msr	BASEPRI, r7
 80023b6:	2420      	movs	r4, #32
 80023b8:	f384 8811 	msr	BASEPRI, r4
 80023bc:	69a9      	ldr	r1, [r5, #24]
 80023be:	fab1 f181 	clz	r1, r1
 80023c2:	0949      	lsrs	r1, r1, #5
 80023c4:	2014      	movs	r0, #20
 80023c6:	f7fe f9a3 	bl	8000710 <_test_assert>
 80023ca:	4606      	mov	r6, r0
 80023cc:	2800      	cmp	r0, #0
 80023ce:	f47f af5c 	bne.w	800228a <mbox1_execute+0x42a>
 80023d2:	f380 8811 	msr	BASEPRI, r0
 80023d6:	f384 8811 	msr	BASEPRI, r4
 80023da:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80023de:	eba1 0e03 	sub.w	lr, r1, r3
 80023e2:	f1de 0100 	rsbs	r1, lr, #0
 80023e6:	eb41 010e 	adc.w	r1, r1, lr
 80023ea:	2015      	movs	r0, #21
 80023ec:	f7fe f990 	bl	8000710 <_test_assert>
 80023f0:	2800      	cmp	r0, #0
 80023f2:	f43f ad69 	beq.w	8001ec8 <mbox1_execute+0x68>
 80023f6:	f386 8811 	msr	BASEPRI, r6
 80023fa:	e563      	b.n	8001ec4 <mbox1_execute+0x64>
 80023fc:	08005f60 	.word	0x08005f60

08002400 <chThdEnqueueTimeoutS>:
 8002400:	b161      	cbz	r1, 800241c <chThdEnqueueTimeoutS+0x1c>
 8002402:	4b08      	ldr	r3, [pc, #32]	; (8002424 <chThdEnqueueTimeoutS+0x24>)
 8002404:	699b      	ldr	r3, [r3, #24]
 8002406:	b410      	push	{r4}
 8002408:	6018      	str	r0, [r3, #0]
 800240a:	6844      	ldr	r4, [r0, #4]
 800240c:	605c      	str	r4, [r3, #4]
 800240e:	4602      	mov	r2, r0
 8002410:	6023      	str	r3, [r4, #0]
 8002412:	2004      	movs	r0, #4
 8002414:	6053      	str	r3, [r2, #4]
 8002416:	bc10      	pop	{r4}
 8002418:	f7ff bb8a 	b.w	8001b30 <chSchGoSleepTimeoutS>
 800241c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002420:	4770      	bx	lr
 8002422:	bf00      	nop
 8002424:	20000930 	.word	0x20000930
	...

08002430 <chOQWriteTimeout>:
 8002430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002434:	b083      	sub	sp, #12
 8002436:	4604      	mov	r4, r0
 8002438:	460d      	mov	r5, r1
 800243a:	4616      	mov	r6, r2
 800243c:	9301      	str	r3, [sp, #4]
 800243e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8002442:	f04f 0920 	mov.w	r9, #32
 8002446:	f389 8811 	msr	BASEPRI, r9
 800244a:	2700      	movs	r7, #0
 800244c:	46ba      	mov	sl, r7
 800244e:	68a3      	ldr	r3, [r4, #8]
 8002450:	f105 0b01 	add.w	fp, r5, #1
 8002454:	1e59      	subs	r1, r3, #1
 8002456:	4620      	mov	r0, r4
 8002458:	b1fb      	cbz	r3, 800249a <chOQWriteTimeout+0x6a>
 800245a:	6963      	ldr	r3, [r4, #20]
 800245c:	60a1      	str	r1, [r4, #8]
 800245e:	1c59      	adds	r1, r3, #1
 8002460:	6161      	str	r1, [r4, #20]
 8002462:	7829      	ldrb	r1, [r5, #0]
 8002464:	7019      	strb	r1, [r3, #0]
 8002466:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 800246a:	4299      	cmp	r1, r3
 800246c:	bf24      	itt	cs
 800246e:	68e3      	ldrcs	r3, [r4, #12]
 8002470:	6163      	strcs	r3, [r4, #20]
 8002472:	f1b8 0f00 	cmp.w	r8, #0
 8002476:	d000      	beq.n	800247a <chOQWriteTimeout+0x4a>
 8002478:	47c0      	blx	r8
 800247a:	f38a 8811 	msr	BASEPRI, sl
 800247e:	3e01      	subs	r6, #1
 8002480:	f107 0701 	add.w	r7, r7, #1
 8002484:	d013      	beq.n	80024ae <chOQWriteTimeout+0x7e>
 8002486:	f389 8811 	msr	BASEPRI, r9
 800248a:	68a3      	ldr	r3, [r4, #8]
 800248c:	465d      	mov	r5, fp
 800248e:	1e59      	subs	r1, r3, #1
 8002490:	f105 0b01 	add.w	fp, r5, #1
 8002494:	4620      	mov	r0, r4
 8002496:	2b00      	cmp	r3, #0
 8002498:	d1df      	bne.n	800245a <chOQWriteTimeout+0x2a>
 800249a:	9901      	ldr	r1, [sp, #4]
 800249c:	9300      	str	r3, [sp, #0]
 800249e:	4620      	mov	r0, r4
 80024a0:	f7ff ffae 	bl	8002400 <chThdEnqueueTimeoutS>
 80024a4:	9b00      	ldr	r3, [sp, #0]
 80024a6:	2800      	cmp	r0, #0
 80024a8:	d0d1      	beq.n	800244e <chOQWriteTimeout+0x1e>
 80024aa:	f383 8811 	msr	BASEPRI, r3
 80024ae:	4638      	mov	r0, r7
 80024b0:	b003      	add	sp, #12
 80024b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80024b6:	bf00      	nop
	...

080024c0 <writet>:
 80024c0:	3030      	adds	r0, #48	; 0x30
 80024c2:	f7ff bfb5 	b.w	8002430 <chOQWriteTimeout>
 80024c6:	bf00      	nop
	...

080024d0 <write>:
 80024d0:	3030      	adds	r0, #48	; 0x30
 80024d2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024d6:	f7ff bfab 	b.w	8002430 <chOQWriteTimeout>
 80024da:	bf00      	nop
 80024dc:	0000      	movs	r0, r0
	...

080024e0 <chOQPutTimeout>:
 80024e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024e2:	4604      	mov	r4, r0
 80024e4:	460f      	mov	r7, r1
 80024e6:	4616      	mov	r6, r2
 80024e8:	2320      	movs	r3, #32
 80024ea:	f383 8811 	msr	BASEPRI, r3
 80024ee:	e003      	b.n	80024f8 <chOQPutTimeout+0x18>
 80024f0:	f7ff ff86 	bl	8002400 <chThdEnqueueTimeoutS>
 80024f4:	2800      	cmp	r0, #0
 80024f6:	db17      	blt.n	8002528 <chOQPutTimeout+0x48>
 80024f8:	68a5      	ldr	r5, [r4, #8]
 80024fa:	4631      	mov	r1, r6
 80024fc:	4620      	mov	r0, r4
 80024fe:	2d00      	cmp	r5, #0
 8002500:	d0f6      	beq.n	80024f0 <chOQPutTimeout+0x10>
 8002502:	6963      	ldr	r3, [r4, #20]
 8002504:	3d01      	subs	r5, #1
 8002506:	1c5a      	adds	r2, r3, #1
 8002508:	6162      	str	r2, [r4, #20]
 800250a:	60a5      	str	r5, [r4, #8]
 800250c:	701f      	strb	r7, [r3, #0]
 800250e:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8002512:	429a      	cmp	r2, r3
 8002514:	bf24      	itt	cs
 8002516:	68e3      	ldrcs	r3, [r4, #12]
 8002518:	6163      	strcs	r3, [r4, #20]
 800251a:	69e3      	ldr	r3, [r4, #28]
 800251c:	b103      	cbz	r3, 8002520 <chOQPutTimeout+0x40>
 800251e:	4798      	blx	r3
 8002520:	2000      	movs	r0, #0
 8002522:	f380 8811 	msr	BASEPRI, r0
 8002526:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002528:	f385 8811 	msr	BASEPRI, r5
 800252c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800252e:	bf00      	nop

08002530 <thread2.lto_priv.76>:
 8002530:	22c8      	movs	r2, #200	; 0xc8
 8002532:	2100      	movs	r1, #0
 8002534:	4801      	ldr	r0, [pc, #4]	; (800253c <thread2.lto_priv.76+0xc>)
 8002536:	f7ff bfd3 	b.w	80024e0 <chOQPutTimeout>
 800253a:	bf00      	nop
 800253c:	20000888 	.word	0x20000888

08002540 <putt>:
 8002540:	3030      	adds	r0, #48	; 0x30
 8002542:	f7ff bfcd 	b.w	80024e0 <chOQPutTimeout>
 8002546:	bf00      	nop
	...

08002550 <put>:
 8002550:	3030      	adds	r0, #48	; 0x30
 8002552:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002556:	f7ff bfc3 	b.w	80024e0 <chOQPutTimeout>
 800255a:	bf00      	nop
 800255c:	0000      	movs	r0, r0
	...

08002560 <chIQReadTimeout>:
 8002560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002564:	4604      	mov	r4, r0
 8002566:	b083      	sub	sp, #12
 8002568:	4689      	mov	r9, r1
 800256a:	4693      	mov	fp, r2
 800256c:	461d      	mov	r5, r3
 800256e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8002572:	2720      	movs	r7, #32
 8002574:	f387 8811 	msr	BASEPRI, r7
 8002578:	2600      	movs	r6, #0
 800257a:	9701      	str	r7, [sp, #4]
 800257c:	46b2      	mov	sl, r6
 800257e:	f1b8 0f00 	cmp.w	r8, #0
 8002582:	d005      	beq.n	8002590 <chIQReadTimeout+0x30>
 8002584:	4620      	mov	r0, r4
 8002586:	47c0      	blx	r8
 8002588:	e002      	b.n	8002590 <chIQReadTimeout+0x30>
 800258a:	f7ff ff39 	bl	8002400 <chThdEnqueueTimeoutS>
 800258e:	b9d8      	cbnz	r0, 80025c8 <chIQReadTimeout+0x68>
 8002590:	68a7      	ldr	r7, [r4, #8]
 8002592:	4629      	mov	r1, r5
 8002594:	4620      	mov	r0, r4
 8002596:	2f00      	cmp	r7, #0
 8002598:	d0f7      	beq.n	800258a <chIQReadTimeout+0x2a>
 800259a:	69a2      	ldr	r2, [r4, #24]
 800259c:	3f01      	subs	r7, #1
 800259e:	1c51      	adds	r1, r2, #1
 80025a0:	61a1      	str	r1, [r4, #24]
 80025a2:	60a7      	str	r7, [r4, #8]
 80025a4:	7813      	ldrb	r3, [r2, #0]
 80025a6:	f809 3b01 	strb.w	r3, [r9], #1
 80025aa:	6923      	ldr	r3, [r4, #16]
 80025ac:	69a2      	ldr	r2, [r4, #24]
 80025ae:	429a      	cmp	r2, r3
 80025b0:	bf24      	itt	cs
 80025b2:	68e3      	ldrcs	r3, [r4, #12]
 80025b4:	61a3      	strcs	r3, [r4, #24]
 80025b6:	f38a 8811 	msr	BASEPRI, sl
 80025ba:	3601      	adds	r6, #1
 80025bc:	45b3      	cmp	fp, r6
 80025be:	d005      	beq.n	80025cc <chIQReadTimeout+0x6c>
 80025c0:	9b01      	ldr	r3, [sp, #4]
 80025c2:	f383 8811 	msr	BASEPRI, r3
 80025c6:	e7da      	b.n	800257e <chIQReadTimeout+0x1e>
 80025c8:	f387 8811 	msr	BASEPRI, r7
 80025cc:	4630      	mov	r0, r6
 80025ce:	b003      	add	sp, #12
 80025d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080025e0 <readt>:
 80025e0:	300c      	adds	r0, #12
 80025e2:	f7ff bfbd 	b.w	8002560 <chIQReadTimeout>
 80025e6:	bf00      	nop
	...

080025f0 <read>:
 80025f0:	300c      	adds	r0, #12
 80025f2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80025f6:	f7ff bfb3 	b.w	8002560 <chIQReadTimeout>
 80025fa:	bf00      	nop
 80025fc:	0000      	movs	r0, r0
	...

08002600 <chIQGetTimeout>:
 8002600:	b570      	push	{r4, r5, r6, lr}
 8002602:	2320      	movs	r3, #32
 8002604:	460e      	mov	r6, r1
 8002606:	4604      	mov	r4, r0
 8002608:	f383 8811 	msr	BASEPRI, r3
 800260c:	69c3      	ldr	r3, [r0, #28]
 800260e:	b12b      	cbz	r3, 800261c <chIQGetTimeout+0x1c>
 8002610:	4798      	blx	r3
 8002612:	e003      	b.n	800261c <chIQGetTimeout+0x1c>
 8002614:	f7ff fef4 	bl	8002400 <chThdEnqueueTimeoutS>
 8002618:	2800      	cmp	r0, #0
 800261a:	db15      	blt.n	8002648 <chIQGetTimeout+0x48>
 800261c:	68a5      	ldr	r5, [r4, #8]
 800261e:	4631      	mov	r1, r6
 8002620:	4620      	mov	r0, r4
 8002622:	2d00      	cmp	r5, #0
 8002624:	d0f6      	beq.n	8002614 <chIQGetTimeout+0x14>
 8002626:	69a2      	ldr	r2, [r4, #24]
 8002628:	6921      	ldr	r1, [r4, #16]
 800262a:	1c53      	adds	r3, r2, #1
 800262c:	428b      	cmp	r3, r1
 800262e:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8002632:	61a3      	str	r3, [r4, #24]
 8002634:	60a5      	str	r5, [r4, #8]
 8002636:	bf28      	it	cs
 8002638:	68e3      	ldrcs	r3, [r4, #12]
 800263a:	7810      	ldrb	r0, [r2, #0]
 800263c:	bf28      	it	cs
 800263e:	61a3      	strcs	r3, [r4, #24]
 8002640:	2300      	movs	r3, #0
 8002642:	f383 8811 	msr	BASEPRI, r3
 8002646:	bd70      	pop	{r4, r5, r6, pc}
 8002648:	f385 8811 	msr	BASEPRI, r5
 800264c:	bd70      	pop	{r4, r5, r6, pc}
 800264e:	bf00      	nop

08002650 <thread1.lto_priv.70>:
 8002650:	21c8      	movs	r1, #200	; 0xc8
 8002652:	4801      	ldr	r0, [pc, #4]	; (8002658 <thread1.lto_priv.70+0x8>)
 8002654:	f7ff bfd4 	b.w	8002600 <chIQGetTimeout>
 8002658:	20000810 	.word	0x20000810
 800265c:	00000000 	.word	0x00000000

08002660 <gett>:
 8002660:	300c      	adds	r0, #12
 8002662:	f7ff bfcd 	b.w	8002600 <chIQGetTimeout>
 8002666:	bf00      	nop
	...

08002670 <get>:
 8002670:	300c      	adds	r0, #12
 8002672:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002676:	f7ff bfc3 	b.w	8002600 <chIQGetTimeout>
 800267a:	bf00      	nop
 800267c:	0000      	movs	r0, r0
	...

08002680 <chThdSleep>:
 8002680:	b508      	push	{r3, lr}
 8002682:	4601      	mov	r1, r0
 8002684:	2320      	movs	r3, #32
 8002686:	f383 8811 	msr	BASEPRI, r3
 800268a:	2008      	movs	r0, #8
 800268c:	f7ff fa50 	bl	8001b30 <chSchGoSleepTimeoutS>
 8002690:	2300      	movs	r3, #0
 8002692:	f383 8811 	msr	BASEPRI, r3
 8002696:	bd08      	pop	{r3, pc}
	...

080026a0 <Thread1>:
 80026a0:	b508      	push	{r3, lr}
 80026a2:	4b09      	ldr	r3, [pc, #36]	; (80026c8 <Thread1+0x28>)
 80026a4:	4a09      	ldr	r2, [pc, #36]	; (80026cc <Thread1+0x2c>)
 80026a6:	699b      	ldr	r3, [r3, #24]
 80026a8:	4c09      	ldr	r4, [pc, #36]	; (80026d0 <Thread1+0x30>)
 80026aa:	619a      	str	r2, [r3, #24]
 80026ac:	2520      	movs	r5, #32
 80026ae:	462e      	mov	r6, r5
 80026b0:	8366      	strh	r6, [r4, #26]
 80026b2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80026b6:	f7ff ffe3 	bl	8002680 <chThdSleep>
 80026ba:	8325      	strh	r5, [r4, #24]
 80026bc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80026c0:	f7ff ffde 	bl	8002680 <chThdSleep>
 80026c4:	e7f4      	b.n	80026b0 <Thread1+0x10>
 80026c6:	bf00      	nop
 80026c8:	20000930 	.word	0x20000930
 80026cc:	08005b60 	.word	0x08005b60
 80026d0:	40020000 	.word	0x40020000
	...

080026e0 <sys1_execute>:
 80026e0:	b510      	push	{r4, lr}
 80026e2:	b086      	sub	sp, #24
 80026e4:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 80026e8:	b91b      	cbnz	r3, 80026f2 <sys1_execute+0x12>
 80026ea:	f7fe fd59 	bl	80011a0 <chSysGetStatusAndLockX.part.2>
 80026ee:	f7fe fff7 	bl	80016e0 <chSysRestoreStatusX.part.3>
 80026f2:	2320      	movs	r3, #32
 80026f4:	f383 8811 	msr	BASEPRI, r3
 80026f8:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 80026fc:	b91b      	cbnz	r3, 8002706 <sys1_execute+0x26>
 80026fe:	f7fe fd4f 	bl	80011a0 <chSysGetStatusAndLockX.part.2>
 8002702:	f7fe ffed 	bl	80016e0 <chSysRestoreStatusX.part.3>
 8002706:	2300      	movs	r3, #0
 8002708:	f383 8811 	msr	BASEPRI, r3
 800270c:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8002710:	b913      	cbnz	r3, 8002718 <sys1_execute+0x38>
 8002712:	2320      	movs	r3, #32
 8002714:	f383 8811 	msr	BASEPRI, r3
 8002718:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800271c:	b913      	cbnz	r3, 8002724 <sys1_execute+0x44>
 800271e:	2320      	movs	r3, #32
 8002720:	f383 8811 	msr	BASEPRI, r3
 8002724:	2300      	movs	r3, #0
 8002726:	f383 8811 	msr	BASEPRI, r3
 800272a:	2220      	movs	r2, #32
 800272c:	f382 8811 	msr	BASEPRI, r2
 8002730:	f3ef 8212 	mrs	r2, BASEPRI_MAX
 8002734:	b10a      	cbz	r2, 800273a <sys1_execute+0x5a>
 8002736:	f383 8811 	msr	BASEPRI, r3
 800273a:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800273e:	b113      	cbz	r3, 8002746 <sys1_execute+0x66>
 8002740:	2300      	movs	r3, #0
 8002742:	f383 8811 	msr	BASEPRI, r3
 8002746:	2300      	movs	r3, #0
 8002748:	9304      	str	r3, [sp, #16]
 800274a:	2320      	movs	r3, #32
 800274c:	f383 8811 	msr	BASEPRI, r3
 8002750:	9b04      	ldr	r3, [sp, #16]
 8002752:	ac01      	add	r4, sp, #4
 8002754:	b113      	cbz	r3, 800275c <sys1_execute+0x7c>
 8002756:	4620      	mov	r0, r4
 8002758:	f7fe fc82 	bl	8001060 <chVTDoResetI>
 800275c:	4620      	mov	r0, r4
 800275e:	2300      	movs	r3, #0
 8002760:	4a0b      	ldr	r2, [pc, #44]	; (8002790 <sys1_execute+0xb0>)
 8002762:	2101      	movs	r1, #1
 8002764:	f7fe fcbc 	bl	80010e0 <chVTDoSetI>
 8002768:	2400      	movs	r4, #0
 800276a:	f384 8811 	msr	BASEPRI, r4
 800276e:	200a      	movs	r0, #10
 8002770:	f7ff ff86 	bl	8002680 <chThdSleep>
 8002774:	2320      	movs	r3, #32
 8002776:	f383 8811 	msr	BASEPRI, r3
 800277a:	9904      	ldr	r1, [sp, #16]
 800277c:	f384 8811 	msr	BASEPRI, r4
 8002780:	fab1 f181 	clz	r1, r1
 8002784:	0949      	lsrs	r1, r1, #5
 8002786:	2001      	movs	r0, #1
 8002788:	f7fd ffc2 	bl	8000710 <_test_assert>
 800278c:	b006      	add	sp, #24
 800278e:	bd10      	pop	{r4, pc}
 8002790:	08001701 	.word	0x08001701
	...

080027a0 <thread1.lto_priv.69>:
 80027a0:	b510      	push	{r4, lr}
 80027a2:	4604      	mov	r4, r0
 80027a4:	2032      	movs	r0, #50	; 0x32
 80027a6:	f7ff ff6b 	bl	8002680 <chThdSleep>
 80027aa:	2320      	movs	r3, #32
 80027ac:	f383 8811 	msr	BASEPRI, r3
 80027b0:	2101      	movs	r1, #1
 80027b2:	4620      	mov	r0, r4
 80027b4:	f7fe fac4 	bl	8000d40 <chEvtSignalI>
 80027b8:	f7fe fe8a 	bl	80014d0 <chSchRescheduleS>
 80027bc:	2300      	movs	r3, #0
 80027be:	f383 8811 	msr	BASEPRI, r3
 80027c2:	bd10      	pop	{r4, pc}
	...

080027d0 <thread2.lto_priv.75>:
 80027d0:	b538      	push	{r3, r4, r5, lr}
 80027d2:	2520      	movs	r5, #32
 80027d4:	f385 8811 	msr	BASEPRI, r5
 80027d8:	2100      	movs	r1, #0
 80027da:	480b      	ldr	r0, [pc, #44]	; (8002808 <thread2.lto_priv.75+0x38>)
 80027dc:	f7fe fac8 	bl	8000d70 <chEvtBroadcastFlagsI>
 80027e0:	2400      	movs	r4, #0
 80027e2:	f7fe fe75 	bl	80014d0 <chSchRescheduleS>
 80027e6:	f384 8811 	msr	BASEPRI, r4
 80027ea:	2032      	movs	r0, #50	; 0x32
 80027ec:	f7ff ff48 	bl	8002680 <chThdSleep>
 80027f0:	f385 8811 	msr	BASEPRI, r5
 80027f4:	4805      	ldr	r0, [pc, #20]	; (800280c <thread2.lto_priv.75+0x3c>)
 80027f6:	4621      	mov	r1, r4
 80027f8:	f7fe faba 	bl	8000d70 <chEvtBroadcastFlagsI>
 80027fc:	f7fe fe68 	bl	80014d0 <chSchRescheduleS>
 8002800:	f384 8811 	msr	BASEPRI, r4
 8002804:	bd38      	pop	{r3, r4, r5, pc}
 8002806:	bf00      	nop
 8002808:	20000808 	.word	0x20000808
 800280c:	2000080c 	.word	0x2000080c

08002810 <thread2.lto_priv.74>:
 8002810:	b508      	push	{r3, lr}
 8002812:	2032      	movs	r0, #50	; 0x32
 8002814:	f7ff ff34 	bl	8002680 <chThdSleep>
 8002818:	2320      	movs	r3, #32
 800281a:	f383 8811 	msr	BASEPRI, r3
 800281e:	4804      	ldr	r0, [pc, #16]	; (8002830 <thread2.lto_priv.74+0x20>)
 8002820:	f7fe fb96 	bl	8000f50 <chSemSignalI>
 8002824:	f7fe fe54 	bl	80014d0 <chSchRescheduleS>
 8002828:	2300      	movs	r3, #0
 800282a:	f383 8811 	msr	BASEPRI, r3
 800282e:	bd08      	pop	{r3, pc}
 8002830:	200008ac 	.word	0x200008ac
	...

08002840 <test_wait_tick>:
 8002840:	b508      	push	{r3, lr}
 8002842:	2001      	movs	r0, #1
 8002844:	f7ff ff1c 	bl	8002680 <chThdSleep>
 8002848:	2320      	movs	r3, #32
 800284a:	f383 8811 	msr	BASEPRI, r3
 800284e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002852:	2300      	movs	r3, #0
 8002854:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8002856:	f383 8811 	msr	BASEPRI, r3
 800285a:	b280      	uxth	r0, r0
 800285c:	bd08      	pop	{r3, pc}
 800285e:	bf00      	nop

08002860 <bmk10_execute>:
 8002860:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002864:	f7ff ffec 	bl	8002840 <test_wait_tick>
 8002868:	f7fe fc7a 	bl	8001160 <test_start_timer.constprop.1>
 800286c:	2400      	movs	r4, #0
 800286e:	f8df a070 	ldr.w	sl, [pc, #112]	; 80028e0 <bmk10_execute+0x80>
 8002872:	4f16      	ldr	r7, [pc, #88]	; (80028cc <bmk10_execute+0x6c>)
 8002874:	4e16      	ldr	r6, [pc, #88]	; (80028d0 <bmk10_execute+0x70>)
 8002876:	4d17      	ldr	r5, [pc, #92]	; (80028d4 <bmk10_execute+0x74>)
 8002878:	46a1      	mov	r9, r4
 800287a:	f04f 0820 	mov.w	r8, #32
 800287e:	f388 8811 	msr	BASEPRI, r8
 8002882:	2300      	movs	r3, #0
 8002884:	463a      	mov	r2, r7
 8002886:	4630      	mov	r0, r6
 8002888:	2101      	movs	r1, #1
 800288a:	f7fe fc29 	bl	80010e0 <chVTDoSetI>
 800288e:	463a      	mov	r2, r7
 8002890:	2300      	movs	r3, #0
 8002892:	f242 7110 	movw	r1, #10000	; 0x2710
 8002896:	4628      	mov	r0, r5
 8002898:	f7fe fc22 	bl	80010e0 <chVTDoSetI>
 800289c:	4630      	mov	r0, r6
 800289e:	f7fe fbdf 	bl	8001060 <chVTDoResetI>
 80028a2:	4628      	mov	r0, r5
 80028a4:	f7fe fbdc 	bl	8001060 <chVTDoResetI>
 80028a8:	f389 8811 	msr	BASEPRI, r9
 80028ac:	f89a 3000 	ldrb.w	r3, [sl]
 80028b0:	3401      	adds	r4, #1
 80028b2:	2b00      	cmp	r3, #0
 80028b4:	d0e3      	beq.n	800287e <bmk10_execute+0x1e>
 80028b6:	4808      	ldr	r0, [pc, #32]	; (80028d8 <bmk10_execute+0x78>)
 80028b8:	f7fd ff9a 	bl	80007f0 <test_print>
 80028bc:	0060      	lsls	r0, r4, #1
 80028be:	f7fd fe9f 	bl	8000600 <test_printn>
 80028c2:	4806      	ldr	r0, [pc, #24]	; (80028dc <bmk10_execute+0x7c>)
 80028c4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80028c8:	f7fd bf72 	b.w	80007b0 <test_println>
 80028cc:	08000301 	.word	0x08000301
 80028d0:	20001208 	.word	0x20001208
 80028d4:	2000121c 	.word	0x2000121c
 80028d8:	08005b90 	.word	0x08005b90
 80028dc:	08005ba0 	.word	0x08005ba0
 80028e0:	200011c8 	.word	0x200011c8
	...

080028f0 <bmk9_execute>:
 80028f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80028f2:	4b26      	ldr	r3, [pc, #152]	; (800298c <bmk9_execute+0x9c>)
 80028f4:	4c26      	ldr	r4, [pc, #152]	; (8002990 <bmk9_execute+0xa0>)
 80028f6:	4f27      	ldr	r7, [pc, #156]	; (8002994 <bmk9_execute+0xa4>)
 80028f8:	60e3      	str	r3, [r4, #12]
 80028fa:	f103 0210 	add.w	r2, r3, #16
 80028fe:	2500      	movs	r5, #0
 8002900:	6122      	str	r2, [r4, #16]
 8002902:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8002906:	6024      	str	r4, [r4, #0]
 8002908:	6064      	str	r4, [r4, #4]
 800290a:	60a5      	str	r5, [r4, #8]
 800290c:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8002910:	f7ff ff96 	bl	8002840 <test_wait_tick>
 8002914:	f7fe fc24 	bl	8001160 <test_start_timer.constprop.1>
 8002918:	462e      	mov	r6, r5
 800291a:	2320      	movs	r3, #32
 800291c:	f383 8811 	msr	BASEPRI, r3
 8002920:	2100      	movs	r1, #0
 8002922:	4620      	mov	r0, r4
 8002924:	f7fe f9bc 	bl	8000ca0 <chIQPutI>
 8002928:	4620      	mov	r0, r4
 800292a:	2101      	movs	r1, #1
 800292c:	f7fe f9b8 	bl	8000ca0 <chIQPutI>
 8002930:	4620      	mov	r0, r4
 8002932:	2102      	movs	r1, #2
 8002934:	f7fe f9b4 	bl	8000ca0 <chIQPutI>
 8002938:	4620      	mov	r0, r4
 800293a:	2103      	movs	r1, #3
 800293c:	f7fe f9b0 	bl	8000ca0 <chIQPutI>
 8002940:	f386 8811 	msr	BASEPRI, r6
 8002944:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002948:	4620      	mov	r0, r4
 800294a:	f7ff fe59 	bl	8002600 <chIQGetTimeout>
 800294e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002952:	4620      	mov	r0, r4
 8002954:	f7ff fe54 	bl	8002600 <chIQGetTimeout>
 8002958:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800295c:	4620      	mov	r0, r4
 800295e:	f7ff fe4f 	bl	8002600 <chIQGetTimeout>
 8002962:	4620      	mov	r0, r4
 8002964:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002968:	f7ff fe4a 	bl	8002600 <chIQGetTimeout>
 800296c:	783b      	ldrb	r3, [r7, #0]
 800296e:	3501      	adds	r5, #1
 8002970:	2b00      	cmp	r3, #0
 8002972:	d0d2      	beq.n	800291a <bmk9_execute+0x2a>
 8002974:	4808      	ldr	r0, [pc, #32]	; (8002998 <bmk9_execute+0xa8>)
 8002976:	f7fd ff3b 	bl	80007f0 <test_print>
 800297a:	00a8      	lsls	r0, r5, #2
 800297c:	f7fd fe40 	bl	8000600 <test_printn>
 8002980:	4806      	ldr	r0, [pc, #24]	; (800299c <bmk9_execute+0xac>)
 8002982:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002986:	f7fd bf13 	b.w	80007b0 <test_println>
 800298a:	bf00      	nop
 800298c:	20000ad0 	.word	0x20000ad0
 8002990:	20000ae0 	.word	0x20000ae0
 8002994:	200011c8 	.word	0x200011c8
 8002998:	08005b90 	.word	0x08005b90
 800299c:	08005cd0 	.word	0x08005cd0

080029a0 <bmk6_execute>:
 80029a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80029a4:	4b14      	ldr	r3, [pc, #80]	; (80029f8 <bmk6_execute+0x58>)
 80029a6:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8002a08 <bmk6_execute+0x68>
 80029aa:	699b      	ldr	r3, [r3, #24]
 80029ac:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8002a0c <bmk6_execute+0x6c>
 80029b0:	689d      	ldr	r5, [r3, #8]
 80029b2:	4f12      	ldr	r7, [pc, #72]	; (80029fc <bmk6_execute+0x5c>)
 80029b4:	b083      	sub	sp, #12
 80029b6:	f7ff ff43 	bl	8002840 <test_wait_tick>
 80029ba:	f7fe fbd1 	bl	8001160 <test_start_timer.constprop.1>
 80029be:	2400      	movs	r4, #0
 80029c0:	3501      	adds	r5, #1
 80029c2:	4626      	mov	r6, r4
 80029c4:	4643      	mov	r3, r8
 80029c6:	9600      	str	r6, [sp, #0]
 80029c8:	462a      	mov	r2, r5
 80029ca:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80029ce:	4638      	mov	r0, r7
 80029d0:	f7fe ff8e 	bl	80018f0 <chThdCreateStatic>
 80029d4:	f899 3000 	ldrb.w	r3, [r9]
 80029d8:	3401      	adds	r4, #1
 80029da:	2b00      	cmp	r3, #0
 80029dc:	d0f2      	beq.n	80029c4 <bmk6_execute+0x24>
 80029de:	4808      	ldr	r0, [pc, #32]	; (8002a00 <bmk6_execute+0x60>)
 80029e0:	f7fd ff06 	bl	80007f0 <test_print>
 80029e4:	4620      	mov	r0, r4
 80029e6:	f7fd fe0b 	bl	8000600 <test_printn>
 80029ea:	4806      	ldr	r0, [pc, #24]	; (8002a04 <bmk6_execute+0x64>)
 80029ec:	b003      	add	sp, #12
 80029ee:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80029f2:	f7fd bedd 	b.w	80007b0 <test_println>
 80029f6:	bf00      	nop
 80029f8:	20000930 	.word	0x20000930
 80029fc:	20000b38 	.word	0x20000b38
 8002a00:	08005b90 	.word	0x08005b90
 8002a04:	08005c90 	.word	0x08005c90
 8002a08:	200011c8 	.word	0x200011c8
 8002a0c:	08005b21 	.word	0x08005b21

08002a10 <thd4_execute>:
 8002a10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a12:	f7ff ff15 	bl	8002840 <test_wait_tick>
 8002a16:	2620      	movs	r6, #32
 8002a18:	f386 8811 	msr	BASEPRI, r6
 8002a1c:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8002a20:	2300      	movs	r3, #0
 8002a22:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002a24:	b2a4      	uxth	r4, r4
 8002a26:	f383 8811 	msr	BASEPRI, r3
 8002a2a:	2064      	movs	r0, #100	; 0x64
 8002a2c:	f7ff fe28 	bl	8002680 <chThdSleep>
 8002a30:	f104 0267 	add.w	r2, r4, #103	; 0x67
 8002a34:	f104 0164 	add.w	r1, r4, #100	; 0x64
 8002a38:	b292      	uxth	r2, r2
 8002a3a:	b289      	uxth	r1, r1
 8002a3c:	2001      	movs	r0, #1
 8002a3e:	f7fd fe1f 	bl	8000680 <_test_assert_time_window>
 8002a42:	b100      	cbz	r0, 8002a46 <thd4_execute+0x36>
 8002a44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a46:	f386 8811 	msr	BASEPRI, r6
 8002a4a:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002a4c:	b2a4      	uxth	r4, r4
 8002a4e:	f380 8811 	msr	BASEPRI, r0
 8002a52:	2064      	movs	r0, #100	; 0x64
 8002a54:	f7ff fe14 	bl	8002680 <chThdSleep>
 8002a58:	f104 0267 	add.w	r2, r4, #103	; 0x67
 8002a5c:	f104 0164 	add.w	r1, r4, #100	; 0x64
 8002a60:	b292      	uxth	r2, r2
 8002a62:	b289      	uxth	r1, r1
 8002a64:	2002      	movs	r0, #2
 8002a66:	f7fd fe0b 	bl	8000680 <_test_assert_time_window>
 8002a6a:	2800      	cmp	r0, #0
 8002a6c:	d1ea      	bne.n	8002a44 <thd4_execute+0x34>
 8002a6e:	f386 8811 	msr	BASEPRI, r6
 8002a72:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002a74:	b2a4      	uxth	r4, r4
 8002a76:	f380 8811 	msr	BASEPRI, r0
 8002a7a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002a7e:	f7ff fdff 	bl	8002680 <chThdSleep>
 8002a82:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8002a86:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8002a8a:	b292      	uxth	r2, r2
 8002a8c:	b289      	uxth	r1, r1
 8002a8e:	2003      	movs	r0, #3
 8002a90:	f7fd fdf6 	bl	8000680 <_test_assert_time_window>
 8002a94:	2800      	cmp	r0, #0
 8002a96:	d1d5      	bne.n	8002a44 <thd4_execute+0x34>
 8002a98:	f386 8811 	msr	BASEPRI, r6
 8002a9c:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002a9e:	b2a4      	uxth	r4, r4
 8002aa0:	f380 8811 	msr	BASEPRI, r0
 8002aa4:	f104 0764 	add.w	r7, r4, #100	; 0x64
 8002aa8:	b2bf      	uxth	r7, r7
 8002aaa:	f386 8811 	msr	BASEPRI, r6
 8002aae:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002ab0:	1a79      	subs	r1, r7, r1
 8002ab2:	b289      	uxth	r1, r1
 8002ab4:	b111      	cbz	r1, 8002abc <thd4_execute+0xac>
 8002ab6:	2008      	movs	r0, #8
 8002ab8:	f7ff f83a 	bl	8001b30 <chSchGoSleepTimeoutS>
 8002abc:	2300      	movs	r3, #0
 8002abe:	f383 8811 	msr	BASEPRI, r3
 8002ac2:	f104 0267 	add.w	r2, r4, #103	; 0x67
 8002ac6:	4639      	mov	r1, r7
 8002ac8:	b292      	uxth	r2, r2
 8002aca:	2004      	movs	r0, #4
 8002acc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002ad0:	f7fd bdd6 	b.w	8000680 <_test_assert_time_window>
	...

08002ae0 <chMsgWait>:
 8002ae0:	b510      	push	{r4, lr}
 8002ae2:	2320      	movs	r3, #32
 8002ae4:	f383 8811 	msr	BASEPRI, r3
 8002ae8:	4c0b      	ldr	r4, [pc, #44]	; (8002b18 <chMsgWait+0x38>)
 8002aea:	69a2      	ldr	r2, [r4, #24]
 8002aec:	4613      	mov	r3, r2
 8002aee:	f853 0f28 	ldr.w	r0, [r3, #40]!
 8002af2:	4298      	cmp	r0, r3
 8002af4:	d008      	beq.n	8002b08 <chMsgWait+0x28>
 8002af6:	6801      	ldr	r1, [r0, #0]
 8002af8:	6291      	str	r1, [r2, #40]	; 0x28
 8002afa:	220d      	movs	r2, #13
 8002afc:	604b      	str	r3, [r1, #4]
 8002afe:	2300      	movs	r3, #0
 8002b00:	7702      	strb	r2, [r0, #28]
 8002b02:	f383 8811 	msr	BASEPRI, r3
 8002b06:	bd10      	pop	{r4, pc}
 8002b08:	200e      	movs	r0, #14
 8002b0a:	f7fe ff29 	bl	8001960 <chSchGoSleepS>
 8002b0e:	69a2      	ldr	r2, [r4, #24]
 8002b10:	6a90      	ldr	r0, [r2, #40]	; 0x28
 8002b12:	f102 0328 	add.w	r3, r2, #40	; 0x28
 8002b16:	e7ee      	b.n	8002af6 <chMsgWait+0x16>
 8002b18:	20000930 	.word	0x20000930
 8002b1c:	00000000 	.word	0x00000000

08002b20 <thread2.lto_priv.77>:
 8002b20:	b570      	push	{r4, r5, r6, lr}
 8002b22:	2620      	movs	r6, #32
 8002b24:	2500      	movs	r5, #0
 8002b26:	f7ff ffdb 	bl	8002ae0 <chMsgWait>
 8002b2a:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8002b2c:	f386 8811 	msr	BASEPRI, r6
 8002b30:	4621      	mov	r1, r4
 8002b32:	f7fe fdfd 	bl	8001730 <chSchWakeupS>
 8002b36:	f385 8811 	msr	BASEPRI, r5
 8002b3a:	2c00      	cmp	r4, #0
 8002b3c:	d1f3      	bne.n	8002b26 <thread2.lto_priv.77+0x6>
 8002b3e:	bd70      	pop	{r4, r5, r6, pc}

08002b40 <msg1_execute>:
 8002b40:	b570      	push	{r4, r5, r6, lr}
 8002b42:	4a1f      	ldr	r2, [pc, #124]	; (8002bc0 <msg1_execute+0x80>)
 8002b44:	4b1f      	ldr	r3, [pc, #124]	; (8002bc4 <msg1_execute+0x84>)
 8002b46:	6991      	ldr	r1, [r2, #24]
 8002b48:	481f      	ldr	r0, [pc, #124]	; (8002bc8 <msg1_execute+0x88>)
 8002b4a:	688a      	ldr	r2, [r1, #8]
 8002b4c:	b082      	sub	sp, #8
 8002b4e:	3201      	adds	r2, #1
 8002b50:	9100      	str	r1, [sp, #0]
 8002b52:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8002b56:	f7fe fecb 	bl	80018f0 <chThdCreateStatic>
 8002b5a:	4b1c      	ldr	r3, [pc, #112]	; (8002bcc <msg1_execute+0x8c>)
 8002b5c:	6018      	str	r0, [r3, #0]
 8002b5e:	f7ff ffbf 	bl	8002ae0 <chMsgWait>
 8002b62:	2520      	movs	r5, #32
 8002b64:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002b66:	f385 8811 	msr	BASEPRI, r5
 8002b6a:	4631      	mov	r1, r6
 8002b6c:	f7fe fde0 	bl	8001730 <chSchWakeupS>
 8002b70:	2400      	movs	r4, #0
 8002b72:	f384 8811 	msr	BASEPRI, r4
 8002b76:	b2f0      	uxtb	r0, r6
 8002b78:	f7fd fde2 	bl	8000740 <test_emit_token>
 8002b7c:	f7ff ffb0 	bl	8002ae0 <chMsgWait>
 8002b80:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002b82:	f385 8811 	msr	BASEPRI, r5
 8002b86:	4631      	mov	r1, r6
 8002b88:	f7fe fdd2 	bl	8001730 <chSchWakeupS>
 8002b8c:	f384 8811 	msr	BASEPRI, r4
 8002b90:	b2f0      	uxtb	r0, r6
 8002b92:	f7fd fdd5 	bl	8000740 <test_emit_token>
 8002b96:	f7ff ffa3 	bl	8002ae0 <chMsgWait>
 8002b9a:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002b9c:	f385 8811 	msr	BASEPRI, r5
 8002ba0:	4631      	mov	r1, r6
 8002ba2:	f7fe fdc5 	bl	8001730 <chSchWakeupS>
 8002ba6:	f384 8811 	msr	BASEPRI, r4
 8002baa:	b2f0      	uxtb	r0, r6
 8002bac:	f7fd fdc8 	bl	8000740 <test_emit_token>
 8002bb0:	4907      	ldr	r1, [pc, #28]	; (8002bd0 <msg1_execute+0x90>)
 8002bb2:	2001      	movs	r0, #1
 8002bb4:	b002      	add	sp, #8
 8002bb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002bba:	f7fd bd81 	b.w	80006c0 <_test_assert_sequence>
 8002bbe:	bf00      	nop
 8002bc0:	20000930 	.word	0x20000930
 8002bc4:	08002c51 	.word	0x08002c51
 8002bc8:	20000b38 	.word	0x20000b38
 8002bcc:	200011cc 	.word	0x200011cc
 8002bd0:	08005d40 	.word	0x08005d40
	...

08002be0 <chMsgSend>:
 8002be0:	4b0e      	ldr	r3, [pc, #56]	; (8002c1c <chMsgSend+0x3c>)
 8002be2:	b510      	push	{r4, lr}
 8002be4:	2220      	movs	r2, #32
 8002be6:	699c      	ldr	r4, [r3, #24]
 8002be8:	f382 8811 	msr	BASEPRI, r2
 8002bec:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8002bf0:	6222      	str	r2, [r4, #32]
 8002bf2:	6022      	str	r2, [r4, #0]
 8002bf4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8002bf6:	6062      	str	r2, [r4, #4]
 8002bf8:	6321      	str	r1, [r4, #48]	; 0x30
 8002bfa:	6014      	str	r4, [r2, #0]
 8002bfc:	7f02      	ldrb	r2, [r0, #28]
 8002bfe:	62c4      	str	r4, [r0, #44]	; 0x2c
 8002c00:	2a0e      	cmp	r2, #14
 8002c02:	d007      	beq.n	8002c14 <chMsgSend+0x34>
 8002c04:	200c      	movs	r0, #12
 8002c06:	f7fe feab 	bl	8001960 <chSchGoSleepS>
 8002c0a:	6a20      	ldr	r0, [r4, #32]
 8002c0c:	2300      	movs	r3, #0
 8002c0e:	f383 8811 	msr	BASEPRI, r3
 8002c12:	bd10      	pop	{r4, pc}
 8002c14:	f7fe f814 	bl	8000c40 <chSchReadyI>
 8002c18:	e7f4      	b.n	8002c04 <chMsgSend+0x24>
 8002c1a:	bf00      	nop
 8002c1c:	20000930 	.word	0x20000930

08002c20 <msg_loop_test>:
 8002c20:	b570      	push	{r4, r5, r6, lr}
 8002c22:	4605      	mov	r5, r0
 8002c24:	f7ff fe0c 	bl	8002840 <test_wait_tick>
 8002c28:	f7fe fa9a 	bl	8001160 <test_start_timer.constprop.1>
 8002c2c:	4e07      	ldr	r6, [pc, #28]	; (8002c4c <msg_loop_test+0x2c>)
 8002c2e:	2400      	movs	r4, #0
 8002c30:	2101      	movs	r1, #1
 8002c32:	4628      	mov	r0, r5
 8002c34:	f7ff ffd4 	bl	8002be0 <chMsgSend>
 8002c38:	7833      	ldrb	r3, [r6, #0]
 8002c3a:	3401      	adds	r4, #1
 8002c3c:	2b00      	cmp	r3, #0
 8002c3e:	d0f7      	beq.n	8002c30 <msg_loop_test+0x10>
 8002c40:	4628      	mov	r0, r5
 8002c42:	2100      	movs	r1, #0
 8002c44:	f7ff ffcc 	bl	8002be0 <chMsgSend>
 8002c48:	4620      	mov	r0, r4
 8002c4a:	bd70      	pop	{r4, r5, r6, pc}
 8002c4c:	200011c8 	.word	0x200011c8

08002c50 <thread.lto_priv.59>:
 8002c50:	b510      	push	{r4, lr}
 8002c52:	2141      	movs	r1, #65	; 0x41
 8002c54:	4604      	mov	r4, r0
 8002c56:	f7ff ffc3 	bl	8002be0 <chMsgSend>
 8002c5a:	4620      	mov	r0, r4
 8002c5c:	2142      	movs	r1, #66	; 0x42
 8002c5e:	f7ff ffbf 	bl	8002be0 <chMsgSend>
 8002c62:	4620      	mov	r0, r4
 8002c64:	2143      	movs	r1, #67	; 0x43
 8002c66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c6a:	f7ff bfb9 	b.w	8002be0 <chMsgSend>
 8002c6e:	bf00      	nop

08002c70 <chMtxLockS>:
 8002c70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c72:	4a36      	ldr	r2, [pc, #216]	; (8002d4c <chMtxLockS+0xdc>)
 8002c74:	6883      	ldr	r3, [r0, #8]
 8002c76:	6995      	ldr	r5, [r2, #24]
 8002c78:	2b00      	cmp	r3, #0
 8002c7a:	d03f      	beq.n	8002cfc <chMtxLockS+0x8c>
 8002c7c:	68a9      	ldr	r1, [r5, #8]
 8002c7e:	689a      	ldr	r2, [r3, #8]
 8002c80:	4291      	cmp	r1, r2
 8002c82:	4604      	mov	r4, r0
 8002c84:	d906      	bls.n	8002c94 <chMtxLockS+0x24>
 8002c86:	7f1a      	ldrb	r2, [r3, #28]
 8002c88:	6099      	str	r1, [r3, #8]
 8002c8a:	2a06      	cmp	r2, #6
 8002c8c:	d03b      	beq.n	8002d06 <chMtxLockS+0x96>
 8002c8e:	2a07      	cmp	r2, #7
 8002c90:	d015      	beq.n	8002cbe <chMtxLockS+0x4e>
 8002c92:	b342      	cbz	r2, 8002ce6 <chMtxLockS+0x76>
 8002c94:	4626      	mov	r6, r4
 8002c96:	4623      	mov	r3, r4
 8002c98:	e003      	b.n	8002ca2 <chMtxLockS+0x32>
 8002c9a:	6899      	ldr	r1, [r3, #8]
 8002c9c:	68aa      	ldr	r2, [r5, #8]
 8002c9e:	4291      	cmp	r1, r2
 8002ca0:	d32a      	bcc.n	8002cf8 <chMtxLockS+0x88>
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	429c      	cmp	r4, r3
 8002ca6:	d1f8      	bne.n	8002c9a <chMtxLockS+0x2a>
 8002ca8:	6873      	ldr	r3, [r6, #4]
 8002caa:	2006      	movs	r0, #6
 8002cac:	e9c5 6300 	strd	r6, r3, [r5]
 8002cb0:	601d      	str	r5, [r3, #0]
 8002cb2:	6075      	str	r5, [r6, #4]
 8002cb4:	622c      	str	r4, [r5, #32]
 8002cb6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002cba:	f7fe be51 	b.w	8001960 <chSchGoSleepS>
 8002cbe:	e9d3 0200 	ldrd	r0, r2, [r3]
 8002cc2:	6010      	str	r0, [r2, #0]
 8002cc4:	6a1e      	ldr	r6, [r3, #32]
 8002cc6:	6818      	ldr	r0, [r3, #0]
 8002cc8:	6042      	str	r2, [r0, #4]
 8002cca:	4632      	mov	r2, r6
 8002ccc:	e002      	b.n	8002cd4 <chMtxLockS+0x64>
 8002cce:	6890      	ldr	r0, [r2, #8]
 8002cd0:	4288      	cmp	r0, r1
 8002cd2:	d332      	bcc.n	8002d3a <chMtxLockS+0xca>
 8002cd4:	6812      	ldr	r2, [r2, #0]
 8002cd6:	4296      	cmp	r6, r2
 8002cd8:	d1f9      	bne.n	8002cce <chMtxLockS+0x5e>
 8002cda:	6872      	ldr	r2, [r6, #4]
 8002cdc:	e9c3 6200 	strd	r6, r2, [r3]
 8002ce0:	6013      	str	r3, [r2, #0]
 8002ce2:	6073      	str	r3, [r6, #4]
 8002ce4:	e7d6      	b.n	8002c94 <chMtxLockS+0x24>
 8002ce6:	e9d3 1200 	ldrd	r1, r2, [r3]
 8002cea:	6011      	str	r1, [r2, #0]
 8002cec:	6819      	ldr	r1, [r3, #0]
 8002cee:	4618      	mov	r0, r3
 8002cf0:	604a      	str	r2, [r1, #4]
 8002cf2:	f7fd ffa5 	bl	8000c40 <chSchReadyI>
 8002cf6:	e7cd      	b.n	8002c94 <chMtxLockS+0x24>
 8002cf8:	461e      	mov	r6, r3
 8002cfa:	e7d5      	b.n	8002ca8 <chMtxLockS+0x38>
 8002cfc:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8002cfe:	e9c0 5302 	strd	r5, r3, [r0, #8]
 8002d02:	63a8      	str	r0, [r5, #56]	; 0x38
 8002d04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002d06:	e9d3 0200 	ldrd	r0, r2, [r3]
 8002d0a:	6010      	str	r0, [r2, #0]
 8002d0c:	6a1e      	ldr	r6, [r3, #32]
 8002d0e:	6818      	ldr	r0, [r3, #0]
 8002d10:	4637      	mov	r7, r6
 8002d12:	6042      	str	r2, [r0, #4]
 8002d14:	4632      	mov	r2, r6
 8002d16:	e002      	b.n	8002d1e <chMtxLockS+0xae>
 8002d18:	6890      	ldr	r0, [r2, #8]
 8002d1a:	4288      	cmp	r0, r1
 8002d1c:	d314      	bcc.n	8002d48 <chMtxLockS+0xd8>
 8002d1e:	6812      	ldr	r2, [r2, #0]
 8002d20:	4296      	cmp	r6, r2
 8002d22:	d1f9      	bne.n	8002d18 <chMtxLockS+0xa8>
 8002d24:	687a      	ldr	r2, [r7, #4]
 8002d26:	68a9      	ldr	r1, [r5, #8]
 8002d28:	e9c3 7200 	strd	r7, r2, [r3]
 8002d2c:	6013      	str	r3, [r2, #0]
 8002d2e:	607b      	str	r3, [r7, #4]
 8002d30:	68b3      	ldr	r3, [r6, #8]
 8002d32:	689a      	ldr	r2, [r3, #8]
 8002d34:	428a      	cmp	r2, r1
 8002d36:	d3a6      	bcc.n	8002c86 <chMtxLockS+0x16>
 8002d38:	e7ac      	b.n	8002c94 <chMtxLockS+0x24>
 8002d3a:	4616      	mov	r6, r2
 8002d3c:	6872      	ldr	r2, [r6, #4]
 8002d3e:	e9c3 6200 	strd	r6, r2, [r3]
 8002d42:	6013      	str	r3, [r2, #0]
 8002d44:	6073      	str	r3, [r6, #4]
 8002d46:	e7a5      	b.n	8002c94 <chMtxLockS+0x24>
 8002d48:	4617      	mov	r7, r2
 8002d4a:	e7eb      	b.n	8002d24 <chMtxLockS+0xb4>
 8002d4c:	20000930 	.word	0x20000930

08002d50 <chMtxLock>:
 8002d50:	b508      	push	{r3, lr}
 8002d52:	2320      	movs	r3, #32
 8002d54:	f383 8811 	msr	BASEPRI, r3
 8002d58:	f7ff ff8a 	bl	8002c70 <chMtxLockS>
 8002d5c:	2300      	movs	r3, #0
 8002d5e:	f383 8811 	msr	BASEPRI, r3
 8002d62:	bd08      	pop	{r3, pc}
	...

08002d70 <bmk12_execute>:
 8002d70:	b570      	push	{r4, r5, r6, lr}
 8002d72:	f7ff fd65 	bl	8002840 <test_wait_tick>
 8002d76:	f7fe f9f3 	bl	8001160 <test_start_timer.constprop.1>
 8002d7a:	4e15      	ldr	r6, [pc, #84]	; (8002dd0 <bmk12_execute+0x60>)
 8002d7c:	4c15      	ldr	r4, [pc, #84]	; (8002dd4 <bmk12_execute+0x64>)
 8002d7e:	2500      	movs	r5, #0
 8002d80:	4620      	mov	r0, r4
 8002d82:	f7ff ffe5 	bl	8002d50 <chMtxLock>
 8002d86:	4620      	mov	r0, r4
 8002d88:	f7fe fd62 	bl	8001850 <chMtxUnlock>
 8002d8c:	4620      	mov	r0, r4
 8002d8e:	f7ff ffdf 	bl	8002d50 <chMtxLock>
 8002d92:	4620      	mov	r0, r4
 8002d94:	f7fe fd5c 	bl	8001850 <chMtxUnlock>
 8002d98:	4620      	mov	r0, r4
 8002d9a:	f7ff ffd9 	bl	8002d50 <chMtxLock>
 8002d9e:	4620      	mov	r0, r4
 8002da0:	f7fe fd56 	bl	8001850 <chMtxUnlock>
 8002da4:	4620      	mov	r0, r4
 8002da6:	f7ff ffd3 	bl	8002d50 <chMtxLock>
 8002daa:	4620      	mov	r0, r4
 8002dac:	f7fe fd50 	bl	8001850 <chMtxUnlock>
 8002db0:	7833      	ldrb	r3, [r6, #0]
 8002db2:	3501      	adds	r5, #1
 8002db4:	2b00      	cmp	r3, #0
 8002db6:	d0e3      	beq.n	8002d80 <bmk12_execute+0x10>
 8002db8:	4807      	ldr	r0, [pc, #28]	; (8002dd8 <bmk12_execute+0x68>)
 8002dba:	f7fd fd19 	bl	80007f0 <test_print>
 8002dbe:	00a8      	lsls	r0, r5, #2
 8002dc0:	f7fd fc1e 	bl	8000600 <test_printn>
 8002dc4:	4805      	ldr	r0, [pc, #20]	; (8002ddc <bmk12_execute+0x6c>)
 8002dc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002dca:	f7fd bcf1 	b.w	80007b0 <test_println>
 8002dce:	bf00      	nop
 8002dd0:	200011c8 	.word	0x200011c8
 8002dd4:	20000b14 	.word	0x20000b14
 8002dd8:	08005b90 	.word	0x08005b90
 8002ddc:	08005bc0 	.word	0x08005bc0

08002de0 <thread11>:
 8002de0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002de2:	4607      	mov	r7, r0
 8002de4:	481b      	ldr	r0, [pc, #108]	; (8002e54 <thread11+0x74>)
 8002de6:	f7ff ffb3 	bl	8002d50 <chMtxLock>
 8002dea:	481b      	ldr	r0, [pc, #108]	; (8002e58 <thread11+0x78>)
 8002dec:	f7ff ffb0 	bl	8002d50 <chMtxLock>
 8002df0:	2320      	movs	r3, #32
 8002df2:	f383 8811 	msr	BASEPRI, r3
 8002df6:	4d19      	ldr	r5, [pc, #100]	; (8002e5c <thread11+0x7c>)
 8002df8:	69ab      	ldr	r3, [r5, #24]
 8002dfa:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 8002dfc:	4630      	mov	r0, r6
 8002dfe:	f7fe f87f 	bl	8000f00 <chMtxUnlockS>
 8002e02:	4b17      	ldr	r3, [pc, #92]	; (8002e60 <thread11+0x80>)
 8002e04:	69ac      	ldr	r4, [r5, #24]
 8002e06:	4618      	mov	r0, r3
 8002e08:	6223      	str	r3, [r4, #32]
 8002e0a:	e003      	b.n	8002e14 <thread11+0x34>
 8002e0c:	6899      	ldr	r1, [r3, #8]
 8002e0e:	68a2      	ldr	r2, [r4, #8]
 8002e10:	4291      	cmp	r1, r2
 8002e12:	d302      	bcc.n	8002e1a <thread11+0x3a>
 8002e14:	681b      	ldr	r3, [r3, #0]
 8002e16:	4283      	cmp	r3, r0
 8002e18:	d1f8      	bne.n	8002e0c <thread11+0x2c>
 8002e1a:	685a      	ldr	r2, [r3, #4]
 8002e1c:	2007      	movs	r0, #7
 8002e1e:	e9c4 3200 	strd	r3, r2, [r4]
 8002e22:	6014      	str	r4, [r2, #0]
 8002e24:	605c      	str	r4, [r3, #4]
 8002e26:	f7fe fd9b 	bl	8001960 <chSchGoSleepS>
 8002e2a:	69ab      	ldr	r3, [r5, #24]
 8002e2c:	6a1b      	ldr	r3, [r3, #32]
 8002e2e:	3301      	adds	r3, #1
 8002e30:	d002      	beq.n	8002e38 <thread11+0x58>
 8002e32:	4630      	mov	r0, r6
 8002e34:	f7ff ff1c 	bl	8002c70 <chMtxLockS>
 8002e38:	2300      	movs	r3, #0
 8002e3a:	f383 8811 	msr	BASEPRI, r3
 8002e3e:	7838      	ldrb	r0, [r7, #0]
 8002e40:	f7fd fc7e 	bl	8000740 <test_emit_token>
 8002e44:	4804      	ldr	r0, [pc, #16]	; (8002e58 <thread11+0x78>)
 8002e46:	f7fe fd03 	bl	8001850 <chMtxUnlock>
 8002e4a:	4802      	ldr	r0, [pc, #8]	; (8002e54 <thread11+0x74>)
 8002e4c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002e50:	f7fe bcfe 	b.w	8001850 <chMtxUnlock>
 8002e54:	20000844 	.word	0x20000844
 8002e58:	20000834 	.word	0x20000834
 8002e5c:	20000930 	.word	0x20000930
 8002e60:	20000800 	.word	0x20000800
	...

08002e70 <thread10>:
 8002e70:	b570      	push	{r4, r5, r6, lr}
 8002e72:	4606      	mov	r6, r0
 8002e74:	4816      	ldr	r0, [pc, #88]	; (8002ed0 <thread10+0x60>)
 8002e76:	f7ff ff6b 	bl	8002d50 <chMtxLock>
 8002e7a:	2320      	movs	r3, #32
 8002e7c:	f383 8811 	msr	BASEPRI, r3
 8002e80:	4b14      	ldr	r3, [pc, #80]	; (8002ed4 <thread10+0x64>)
 8002e82:	699c      	ldr	r4, [r3, #24]
 8002e84:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8002e86:	4628      	mov	r0, r5
 8002e88:	f7fe f83a 	bl	8000f00 <chMtxUnlockS>
 8002e8c:	4812      	ldr	r0, [pc, #72]	; (8002ed8 <thread10+0x68>)
 8002e8e:	6220      	str	r0, [r4, #32]
 8002e90:	4603      	mov	r3, r0
 8002e92:	e003      	b.n	8002e9c <thread10+0x2c>
 8002e94:	6899      	ldr	r1, [r3, #8]
 8002e96:	68a2      	ldr	r2, [r4, #8]
 8002e98:	4291      	cmp	r1, r2
 8002e9a:	d302      	bcc.n	8002ea2 <thread10+0x32>
 8002e9c:	681b      	ldr	r3, [r3, #0]
 8002e9e:	4283      	cmp	r3, r0
 8002ea0:	d1f8      	bne.n	8002e94 <thread10+0x24>
 8002ea2:	685a      	ldr	r2, [r3, #4]
 8002ea4:	2007      	movs	r0, #7
 8002ea6:	e9c4 3200 	strd	r3, r2, [r4]
 8002eaa:	6014      	str	r4, [r2, #0]
 8002eac:	605c      	str	r4, [r3, #4]
 8002eae:	f7fe fd57 	bl	8001960 <chSchGoSleepS>
 8002eb2:	4628      	mov	r0, r5
 8002eb4:	f7ff fedc 	bl	8002c70 <chMtxLockS>
 8002eb8:	2300      	movs	r3, #0
 8002eba:	f383 8811 	msr	BASEPRI, r3
 8002ebe:	7830      	ldrb	r0, [r6, #0]
 8002ec0:	f7fd fc3e 	bl	8000740 <test_emit_token>
 8002ec4:	4802      	ldr	r0, [pc, #8]	; (8002ed0 <thread10+0x60>)
 8002ec6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002eca:	f7fe bcc1 	b.w	8001850 <chMtxUnlock>
 8002ece:	bf00      	nop
 8002ed0:	20000834 	.word	0x20000834
 8002ed4:	20000930 	.word	0x20000930
 8002ed8:	20000800 	.word	0x20000800
 8002edc:	00000000 	.word	0x00000000

08002ee0 <thread12>:
 8002ee0:	b538      	push	{r3, r4, r5, lr}
 8002ee2:	4c06      	ldr	r4, [pc, #24]	; (8002efc <thread12+0x1c>)
 8002ee4:	4605      	mov	r5, r0
 8002ee6:	4620      	mov	r0, r4
 8002ee8:	f7ff ff32 	bl	8002d50 <chMtxLock>
 8002eec:	7828      	ldrb	r0, [r5, #0]
 8002eee:	f7fd fc27 	bl	8000740 <test_emit_token>
 8002ef2:	4620      	mov	r0, r4
 8002ef4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002ef8:	f7fe bcaa 	b.w	8001850 <chMtxUnlock>
 8002efc:	20000844 	.word	0x20000844

08002f00 <mtx5_execute>:
 8002f00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f02:	4d37      	ldr	r5, [pc, #220]	; (8002fe0 <mtx5_execute+0xe0>)
 8002f04:	69aa      	ldr	r2, [r5, #24]
 8002f06:	2320      	movs	r3, #32
 8002f08:	6896      	ldr	r6, [r2, #8]
 8002f0a:	f383 8811 	msr	BASEPRI, r3
 8002f0e:	4c35      	ldr	r4, [pc, #212]	; (8002fe4 <mtx5_execute+0xe4>)
 8002f10:	68a3      	ldr	r3, [r4, #8]
 8002f12:	2b00      	cmp	r3, #0
 8002f14:	d057      	beq.n	8002fc6 <mtx5_execute+0xc6>
 8002f16:	2100      	movs	r1, #0
 8002f18:	2300      	movs	r3, #0
 8002f1a:	f383 8811 	msr	BASEPRI, r3
 8002f1e:	2001      	movs	r0, #1
 8002f20:	f7fd fbf6 	bl	8000710 <_test_assert>
 8002f24:	4601      	mov	r1, r0
 8002f26:	b100      	cbz	r0, 8002f2a <mtx5_execute+0x2a>
 8002f28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002f2a:	2320      	movs	r3, #32
 8002f2c:	f383 8811 	msr	BASEPRI, r3
 8002f30:	68a3      	ldr	r3, [r4, #8]
 8002f32:	2b00      	cmp	r3, #0
 8002f34:	d04e      	beq.n	8002fd4 <mtx5_execute+0xd4>
 8002f36:	2101      	movs	r1, #1
 8002f38:	2300      	movs	r3, #0
 8002f3a:	f383 8811 	msr	BASEPRI, r3
 8002f3e:	2002      	movs	r0, #2
 8002f40:	f7fd fbe6 	bl	8000710 <_test_assert>
 8002f44:	4607      	mov	r7, r0
 8002f46:	2800      	cmp	r0, #0
 8002f48:	d1ee      	bne.n	8002f28 <mtx5_execute+0x28>
 8002f4a:	2320      	movs	r3, #32
 8002f4c:	f383 8811 	msr	BASEPRI, r3
 8002f50:	4824      	ldr	r0, [pc, #144]	; (8002fe4 <mtx5_execute+0xe4>)
 8002f52:	f7fd ffd5 	bl	8000f00 <chMtxUnlockS>
 8002f56:	f387 8811 	msr	BASEPRI, r7
 8002f5a:	6821      	ldr	r1, [r4, #0]
 8002f5c:	1b09      	subs	r1, r1, r4
 8002f5e:	fab1 f181 	clz	r1, r1
 8002f62:	2003      	movs	r0, #3
 8002f64:	0949      	lsrs	r1, r1, #5
 8002f66:	f7fd fbd3 	bl	8000710 <_test_assert>
 8002f6a:	2800      	cmp	r0, #0
 8002f6c:	d1dc      	bne.n	8002f28 <mtx5_execute+0x28>
 8002f6e:	68a1      	ldr	r1, [r4, #8]
 8002f70:	fab1 f181 	clz	r1, r1
 8002f74:	0949      	lsrs	r1, r1, #5
 8002f76:	2004      	movs	r0, #4
 8002f78:	f7fd fbca 	bl	8000710 <_test_assert>
 8002f7c:	2800      	cmp	r0, #0
 8002f7e:	d1d3      	bne.n	8002f28 <mtx5_execute+0x28>
 8002f80:	69ab      	ldr	r3, [r5, #24]
 8002f82:	6899      	ldr	r1, [r3, #8]
 8002f84:	1b89      	subs	r1, r1, r6
 8002f86:	fab1 f181 	clz	r1, r1
 8002f8a:	2005      	movs	r0, #5
 8002f8c:	0949      	lsrs	r1, r1, #5
 8002f8e:	f7fd fbbf 	bl	8000710 <_test_assert>
 8002f92:	2800      	cmp	r0, #0
 8002f94:	d1c8      	bne.n	8002f28 <mtx5_execute+0x28>
 8002f96:	4813      	ldr	r0, [pc, #76]	; (8002fe4 <mtx5_execute+0xe4>)
 8002f98:	f7ff feda 	bl	8002d50 <chMtxLock>
 8002f9c:	f7fe fac0 	bl	8001520 <chMtxUnlockAll>
 8002fa0:	6821      	ldr	r1, [r4, #0]
 8002fa2:	1b09      	subs	r1, r1, r4
 8002fa4:	fab1 f181 	clz	r1, r1
 8002fa8:	2006      	movs	r0, #6
 8002faa:	0949      	lsrs	r1, r1, #5
 8002fac:	f7fd fbb0 	bl	8000710 <_test_assert>
 8002fb0:	2800      	cmp	r0, #0
 8002fb2:	d1b9      	bne.n	8002f28 <mtx5_execute+0x28>
 8002fb4:	68a1      	ldr	r1, [r4, #8]
 8002fb6:	fab1 f181 	clz	r1, r1
 8002fba:	0949      	lsrs	r1, r1, #5
 8002fbc:	2007      	movs	r0, #7
 8002fbe:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002fc2:	f7fd bba5 	b.w	8000710 <_test_assert>
 8002fc6:	69ab      	ldr	r3, [r5, #24]
 8002fc8:	60a3      	str	r3, [r4, #8]
 8002fca:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002fcc:	60e2      	str	r2, [r4, #12]
 8002fce:	639c      	str	r4, [r3, #56]	; 0x38
 8002fd0:	2101      	movs	r1, #1
 8002fd2:	e7a1      	b.n	8002f18 <mtx5_execute+0x18>
 8002fd4:	69ab      	ldr	r3, [r5, #24]
 8002fd6:	60a3      	str	r3, [r4, #8]
 8002fd8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002fda:	60e2      	str	r2, [r4, #12]
 8002fdc:	639c      	str	r4, [r3, #56]	; 0x38
 8002fde:	e7ab      	b.n	8002f38 <mtx5_execute+0x38>
 8002fe0:	20000930 	.word	0x20000930
 8002fe4:	20000834 	.word	0x20000834
	...

08002ff0 <thread4a>:
 8002ff0:	b510      	push	{r4, lr}
 8002ff2:	4c06      	ldr	r4, [pc, #24]	; (800300c <thread4a+0x1c>)
 8002ff4:	2032      	movs	r0, #50	; 0x32
 8002ff6:	f7ff fb43 	bl	8002680 <chThdSleep>
 8002ffa:	4620      	mov	r0, r4
 8002ffc:	f7ff fea8 	bl	8002d50 <chMtxLock>
 8003000:	4620      	mov	r0, r4
 8003002:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003006:	f7fe bc23 	b.w	8001850 <chMtxUnlock>
 800300a:	bf00      	nop
 800300c:	20000844 	.word	0x20000844

08003010 <thread4b>:
 8003010:	b510      	push	{r4, lr}
 8003012:	4c06      	ldr	r4, [pc, #24]	; (800302c <thread4b+0x1c>)
 8003014:	2096      	movs	r0, #150	; 0x96
 8003016:	f7ff fb33 	bl	8002680 <chThdSleep>
 800301a:	4620      	mov	r0, r4
 800301c:	f7ff fe98 	bl	8002d50 <chMtxLock>
 8003020:	4620      	mov	r0, r4
 8003022:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003026:	f7fe bc13 	b.w	8001850 <chMtxUnlock>
 800302a:	bf00      	nop
 800302c:	20000834 	.word	0x20000834

08003030 <thread1.lto_priv.68>:
 8003030:	b538      	push	{r3, r4, r5, lr}
 8003032:	4c06      	ldr	r4, [pc, #24]	; (800304c <thread1.lto_priv.68+0x1c>)
 8003034:	4605      	mov	r5, r0
 8003036:	4620      	mov	r0, r4
 8003038:	f7ff fe8a 	bl	8002d50 <chMtxLock>
 800303c:	7828      	ldrb	r0, [r5, #0]
 800303e:	f7fd fb7f 	bl	8000740 <test_emit_token>
 8003042:	4620      	mov	r0, r4
 8003044:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003048:	f7fe bc02 	b.w	8001850 <chMtxUnlock>
 800304c:	20000834 	.word	0x20000834

08003050 <chHeapStatus>:
 8003050:	b570      	push	{r4, r5, r6, lr}
 8003052:	4c11      	ldr	r4, [pc, #68]	; (8003098 <chHeapStatus+0x48>)
 8003054:	2800      	cmp	r0, #0
 8003056:	bf18      	it	ne
 8003058:	4604      	movne	r4, r0
 800305a:	f104 0510 	add.w	r5, r4, #16
 800305e:	4628      	mov	r0, r5
 8003060:	460e      	mov	r6, r1
 8003062:	f7ff fe75 	bl	8002d50 <chMtxLock>
 8003066:	68a3      	ldr	r3, [r4, #8]
 8003068:	b16b      	cbz	r3, 8003086 <chHeapStatus+0x36>
 800306a:	2200      	movs	r2, #0
 800306c:	4614      	mov	r4, r2
 800306e:	e9d3 3000 	ldrd	r3, r0, [r3]
 8003072:	3401      	adds	r4, #1
 8003074:	4402      	add	r2, r0
 8003076:	2b00      	cmp	r3, #0
 8003078:	d1f9      	bne.n	800306e <chHeapStatus+0x1e>
 800307a:	4628      	mov	r0, r5
 800307c:	6032      	str	r2, [r6, #0]
 800307e:	f7fe fbe7 	bl	8001850 <chMtxUnlock>
 8003082:	4620      	mov	r0, r4
 8003084:	bd70      	pop	{r4, r5, r6, pc}
 8003086:	461a      	mov	r2, r3
 8003088:	461c      	mov	r4, r3
 800308a:	4628      	mov	r0, r5
 800308c:	6032      	str	r2, [r6, #0]
 800308e:	f7fe fbdf 	bl	8001850 <chMtxUnlock>
 8003092:	4620      	mov	r0, r4
 8003094:	bd70      	pop	{r4, r5, r6, pc}
 8003096:	bf00      	nop
 8003098:	20000a88 	.word	0x20000a88
 800309c:	00000000 	.word	0x00000000

080030a0 <chHeapFree>:
 80030a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80030a2:	f850 5c08 	ldr.w	r5, [r0, #-8]
 80030a6:	f105 0710 	add.w	r7, r5, #16
 80030aa:	4606      	mov	r6, r0
 80030ac:	f1a0 0408 	sub.w	r4, r0, #8
 80030b0:	3508      	adds	r5, #8
 80030b2:	4638      	mov	r0, r7
 80030b4:	f7ff fe4c 	bl	8002d50 <chMtxLock>
 80030b8:	462b      	mov	r3, r5
 80030ba:	42ab      	cmp	r3, r5
 80030bc:	681a      	ldr	r2, [r3, #0]
 80030be:	d001      	beq.n	80030c4 <chHeapFree+0x24>
 80030c0:	42a3      	cmp	r3, r4
 80030c2:	d202      	bcs.n	80030ca <chHeapFree+0x2a>
 80030c4:	b11a      	cbz	r2, 80030ce <chHeapFree+0x2e>
 80030c6:	4294      	cmp	r4, r2
 80030c8:	d301      	bcc.n	80030ce <chHeapFree+0x2e>
 80030ca:	4613      	mov	r3, r2
 80030cc:	e7f5      	b.n	80030ba <chHeapFree+0x1a>
 80030ce:	f846 2c08 	str.w	r2, [r6, #-8]
 80030d2:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80030d6:	601c      	str	r4, [r3, #0]
 80030d8:	f856 0c08 	ldr.w	r0, [r6, #-8]
 80030dc:	18b1      	adds	r1, r6, r2
 80030de:	4281      	cmp	r1, r0
 80030e0:	d00a      	beq.n	80030f8 <chHeapFree+0x58>
 80030e2:	6859      	ldr	r1, [r3, #4]
 80030e4:	f101 0208 	add.w	r2, r1, #8
 80030e8:	441a      	add	r2, r3
 80030ea:	4294      	cmp	r4, r2
 80030ec:	d012      	beq.n	8003114 <chHeapFree+0x74>
 80030ee:	4638      	mov	r0, r7
 80030f0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80030f4:	f7fe bbac 	b.w	8001850 <chMtxUnlock>
 80030f8:	6849      	ldr	r1, [r1, #4]
 80030fa:	58b0      	ldr	r0, [r6, r2]
 80030fc:	f846 0c08 	str.w	r0, [r6, #-8]
 8003100:	3208      	adds	r2, #8
 8003102:	440a      	add	r2, r1
 8003104:	f846 2c04 	str.w	r2, [r6, #-4]
 8003108:	6859      	ldr	r1, [r3, #4]
 800310a:	f101 0208 	add.w	r2, r1, #8
 800310e:	441a      	add	r2, r3
 8003110:	4294      	cmp	r4, r2
 8003112:	d1ec      	bne.n	80030ee <chHeapFree+0x4e>
 8003114:	e956 0202 	ldrd	r0, r2, [r6, #-8]
 8003118:	3208      	adds	r2, #8
 800311a:	4411      	add	r1, r2
 800311c:	6018      	str	r0, [r3, #0]
 800311e:	6059      	str	r1, [r3, #4]
 8003120:	4638      	mov	r0, r7
 8003122:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003126:	f7fe bb93 	b.w	8001850 <chMtxUnlock>
 800312a:	bf00      	nop
 800312c:	0000      	movs	r0, r0
	...

08003130 <chThdRelease>:
 8003130:	b430      	push	{r4, r5}
 8003132:	2120      	movs	r1, #32
 8003134:	f381 8811 	msr	BASEPRI, r1
 8003138:	7f83      	ldrb	r3, [r0, #30]
 800313a:	3b01      	subs	r3, #1
 800313c:	b2db      	uxtb	r3, r3
 800313e:	7783      	strb	r3, [r0, #30]
 8003140:	2400      	movs	r4, #0
 8003142:	f384 8811 	msr	BASEPRI, r4
 8003146:	b91b      	cbnz	r3, 8003150 <chThdRelease+0x20>
 8003148:	7f04      	ldrb	r4, [r0, #28]
 800314a:	2c0f      	cmp	r4, #15
 800314c:	4602      	mov	r2, r0
 800314e:	d001      	beq.n	8003154 <chThdRelease+0x24>
 8003150:	bc30      	pop	{r4, r5}
 8003152:	4770      	bx	lr
 8003154:	7f44      	ldrb	r4, [r0, #29]
 8003156:	f004 0403 	and.w	r4, r4, #3
 800315a:	2c01      	cmp	r4, #1
 800315c:	d00f      	beq.n	800317e <chThdRelease+0x4e>
 800315e:	2c02      	cmp	r4, #2
 8003160:	d1f6      	bne.n	8003150 <chThdRelease+0x20>
 8003162:	e9d0 0404 	ldrd	r0, r4, [r0, #16]
 8003166:	6120      	str	r0, [r4, #16]
 8003168:	6915      	ldr	r5, [r2, #16]
 800316a:	6c10      	ldr	r0, [r2, #64]	; 0x40
 800316c:	616c      	str	r4, [r5, #20]
 800316e:	f381 8811 	msr	BASEPRI, r1
 8003172:	6801      	ldr	r1, [r0, #0]
 8003174:	6011      	str	r1, [r2, #0]
 8003176:	6002      	str	r2, [r0, #0]
 8003178:	f383 8811 	msr	BASEPRI, r3
 800317c:	e7e8      	b.n	8003150 <chThdRelease+0x20>
 800317e:	e9d0 1304 	ldrd	r1, r3, [r0, #16]
 8003182:	6119      	str	r1, [r3, #16]
 8003184:	6902      	ldr	r2, [r0, #16]
 8003186:	bc30      	pop	{r4, r5}
 8003188:	6153      	str	r3, [r2, #20]
 800318a:	f7ff bf89 	b.w	80030a0 <chHeapFree>
 800318e:	bf00      	nop

08003190 <regfind>:
 8003190:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003194:	4680      	mov	r8, r0
 8003196:	2520      	movs	r5, #32
 8003198:	f385 8811 	msr	BASEPRI, r5
 800319c:	4f18      	ldr	r7, [pc, #96]	; (8003200 <regfind+0x70>)
 800319e:	6938      	ldr	r0, [r7, #16]
 80031a0:	7f83      	ldrb	r3, [r0, #30]
 80031a2:	3301      	adds	r3, #1
 80031a4:	7783      	strb	r3, [r0, #30]
 80031a6:	2600      	movs	r6, #0
 80031a8:	f386 8811 	msr	BASEPRI, r6
 80031ac:	eba8 0900 	sub.w	r9, r8, r0
 80031b0:	fab9 f989 	clz	r9, r9
 80031b4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80031b8:	f385 8811 	msr	BASEPRI, r5
 80031bc:	6904      	ldr	r4, [r0, #16]
 80031be:	42bc      	cmp	r4, r7
 80031c0:	bf08      	it	eq
 80031c2:	4604      	moveq	r4, r0
 80031c4:	d101      	bne.n	80031ca <regfind+0x3a>
 80031c6:	e011      	b.n	80031ec <regfind+0x5c>
 80031c8:	461c      	mov	r4, r3
 80031ca:	7fa3      	ldrb	r3, [r4, #30]
 80031cc:	3301      	adds	r3, #1
 80031ce:	77a3      	strb	r3, [r4, #30]
 80031d0:	f386 8811 	msr	BASEPRI, r6
 80031d4:	f7ff ffac 	bl	8003130 <chThdRelease>
 80031d8:	45a0      	cmp	r8, r4
 80031da:	bf08      	it	eq
 80031dc:	f049 0901 	orreq.w	r9, r9, #1
 80031e0:	f385 8811 	msr	BASEPRI, r5
 80031e4:	6923      	ldr	r3, [r4, #16]
 80031e6:	42bb      	cmp	r3, r7
 80031e8:	4620      	mov	r0, r4
 80031ea:	d1ed      	bne.n	80031c8 <regfind+0x38>
 80031ec:	2300      	movs	r3, #0
 80031ee:	f383 8811 	msr	BASEPRI, r3
 80031f2:	4620      	mov	r0, r4
 80031f4:	f7ff ff9c 	bl	8003130 <chThdRelease>
 80031f8:	4648      	mov	r0, r9
 80031fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80031fe:	bf00      	nop
 8003200:	20000930 	.word	0x20000930
	...

08003210 <chHeapAlloc>:
 8003210:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003212:	4e20      	ldr	r6, [pc, #128]	; (8003294 <chHeapAlloc+0x84>)
 8003214:	2800      	cmp	r0, #0
 8003216:	bf18      	it	ne
 8003218:	4606      	movne	r6, r0
 800321a:	f106 0710 	add.w	r7, r6, #16
 800321e:	3107      	adds	r1, #7
 8003220:	4638      	mov	r0, r7
 8003222:	f021 0507 	bic.w	r5, r1, #7
 8003226:	f106 0408 	add.w	r4, r6, #8
 800322a:	f7ff fd91 	bl	8002d50 <chMtxLock>
 800322e:	e003      	b.n	8003238 <chHeapAlloc+0x28>
 8003230:	6843      	ldr	r3, [r0, #4]
 8003232:	42ab      	cmp	r3, r5
 8003234:	d212      	bcs.n	800325c <chHeapAlloc+0x4c>
 8003236:	4604      	mov	r4, r0
 8003238:	6820      	ldr	r0, [r4, #0]
 800323a:	2800      	cmp	r0, #0
 800323c:	d1f8      	bne.n	8003230 <chHeapAlloc+0x20>
 800323e:	4638      	mov	r0, r7
 8003240:	f7fe fb06 	bl	8001850 <chMtxUnlock>
 8003244:	6833      	ldr	r3, [r6, #0]
 8003246:	b313      	cbz	r3, 800328e <chHeapAlloc+0x7e>
 8003248:	f105 0008 	add.w	r0, r5, #8
 800324c:	4798      	blx	r3
 800324e:	b1f0      	cbz	r0, 800328e <chHeapAlloc+0x7e>
 8003250:	e9c0 6500 	strd	r6, r5, [r0]
 8003254:	f100 0408 	add.w	r4, r0, #8
 8003258:	4620      	mov	r0, r4
 800325a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800325c:	f105 0208 	add.w	r2, r5, #8
 8003260:	4293      	cmp	r3, r2
 8003262:	6801      	ldr	r1, [r0, #0]
 8003264:	d208      	bcs.n	8003278 <chHeapAlloc+0x68>
 8003266:	6021      	str	r1, [r4, #0]
 8003268:	4604      	mov	r4, r0
 800326a:	4638      	mov	r0, r7
 800326c:	f844 6b08 	str.w	r6, [r4], #8
 8003270:	f7fe faee 	bl	8001850 <chMtxUnlock>
 8003274:	4620      	mov	r0, r4
 8003276:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003278:	eb00 0c02 	add.w	ip, r0, r2
 800327c:	1b5b      	subs	r3, r3, r5
 800327e:	3b08      	subs	r3, #8
 8003280:	5081      	str	r1, [r0, r2]
 8003282:	f8cc 3004 	str.w	r3, [ip, #4]
 8003286:	f8c4 c000 	str.w	ip, [r4]
 800328a:	6045      	str	r5, [r0, #4]
 800328c:	e7ec      	b.n	8003268 <chHeapAlloc+0x58>
 800328e:	2400      	movs	r4, #0
 8003290:	e7e2      	b.n	8003258 <chHeapAlloc+0x48>
 8003292:	bf00      	nop
 8003294:	20000a88 	.word	0x20000a88
	...

080032a0 <chThdCreateFromHeap.constprop.52>:
 80032a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80032a2:	4605      	mov	r5, r0
 80032a4:	460e      	mov	r6, r1
 80032a6:	481b      	ldr	r0, [pc, #108]	; (8003314 <chThdCreateFromHeap.constprop.52+0x74>)
 80032a8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80032ac:	f7ff ffb0 	bl	8003210 <chHeapAlloc>
 80032b0:	4604      	mov	r4, r0
 80032b2:	b360      	cbz	r0, 800330e <chThdCreateFromHeap.constprop.52+0x6e>
 80032b4:	2320      	movs	r3, #32
 80032b6:	f383 8811 	msr	BASEPRI, r3
 80032ba:	4a17      	ldr	r2, [pc, #92]	; (8003318 <chThdCreateFromHeap.constprop.52+0x78>)
 80032bc:	6102      	str	r2, [r0, #16]
 80032be:	6957      	ldr	r7, [r2, #20]
 80032c0:	f8c0 6128 	str.w	r6, [r0, #296]	; 0x128
 80032c4:	f500 7192 	add.w	r1, r0, #292	; 0x124
 80032c8:	2302      	movs	r3, #2
 80032ca:	6085      	str	r5, [r0, #8]
 80032cc:	60c1      	str	r1, [r0, #12]
 80032ce:	63c5      	str	r5, [r0, #60]	; 0x3c
 80032d0:	f100 0124 	add.w	r1, r0, #36	; 0x24
 80032d4:	2500      	movs	r5, #0
 80032d6:	7703      	strb	r3, [r0, #28]
 80032d8:	f8df e040 	ldr.w	lr, [pc, #64]	; 800331c <chThdCreateFromHeap.constprop.52+0x7c>
 80032dc:	f8df c040 	ldr.w	ip, [pc, #64]	; 8003320 <chThdCreateFromHeap.constprop.52+0x80>
 80032e0:	6147      	str	r7, [r0, #20]
 80032e2:	2601      	movs	r6, #1
 80032e4:	f100 0328 	add.w	r3, r0, #40	; 0x28
 80032e8:	f8c0 e124 	str.w	lr, [r0, #292]	; 0x124
 80032ec:	f8c0 c144 	str.w	ip, [r0, #324]	; 0x144
 80032f0:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 80032f4:	6185      	str	r5, [r0, #24]
 80032f6:	7786      	strb	r6, [r0, #30]
 80032f8:	6138      	str	r0, [r7, #16]
 80032fa:	6241      	str	r1, [r0, #36]	; 0x24
 80032fc:	7746      	strb	r6, [r0, #29]
 80032fe:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8003302:	4629      	mov	r1, r5
 8003304:	6150      	str	r0, [r2, #20]
 8003306:	f7fe fa13 	bl	8001730 <chSchWakeupS>
 800330a:	f385 8811 	msr	BASEPRI, r5
 800330e:	4620      	mov	r0, r4
 8003310:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003312:	bf00      	nop
 8003314:	20000ab0 	.word	0x20000ab0
 8003318:	20000930 	.word	0x20000930
 800331c:	080007a1 	.word	0x080007a1
 8003320:	08000211 	.word	0x08000211
	...

08003330 <dyn3_execute>:
 8003330:	4b46      	ldr	r3, [pc, #280]	; (800344c <dyn3_execute+0x11c>)
 8003332:	4947      	ldr	r1, [pc, #284]	; (8003450 <dyn3_execute+0x120>)
 8003334:	699b      	ldr	r3, [r3, #24]
 8003336:	6898      	ldr	r0, [r3, #8]
 8003338:	b510      	push	{r4, lr}
 800333a:	3801      	subs	r0, #1
 800333c:	f7ff ffb0 	bl	80032a0 <chThdCreateFromHeap.constprop.52>
 8003340:	4604      	mov	r4, r0
 8003342:	2001      	movs	r0, #1
 8003344:	7fa1      	ldrb	r1, [r4, #30]
 8003346:	1a09      	subs	r1, r1, r0
 8003348:	fab1 f181 	clz	r1, r1
 800334c:	0949      	lsrs	r1, r1, #5
 800334e:	f7fd f9df 	bl	8000710 <_test_assert>
 8003352:	b100      	cbz	r0, 8003356 <dyn3_execute+0x26>
 8003354:	bd10      	pop	{r4, pc}
 8003356:	2320      	movs	r3, #32
 8003358:	f383 8811 	msr	BASEPRI, r3
 800335c:	7fa3      	ldrb	r3, [r4, #30]
 800335e:	3301      	adds	r3, #1
 8003360:	77a3      	strb	r3, [r4, #30]
 8003362:	f380 8811 	msr	BASEPRI, r0
 8003366:	7fa1      	ldrb	r1, [r4, #30]
 8003368:	2002      	movs	r0, #2
 800336a:	1a09      	subs	r1, r1, r0
 800336c:	fab1 f181 	clz	r1, r1
 8003370:	0949      	lsrs	r1, r1, #5
 8003372:	f7fd f9cd 	bl	8000710 <_test_assert>
 8003376:	2800      	cmp	r0, #0
 8003378:	d1ec      	bne.n	8003354 <dyn3_execute+0x24>
 800337a:	4620      	mov	r0, r4
 800337c:	f7ff fed8 	bl	8003130 <chThdRelease>
 8003380:	7fa1      	ldrb	r1, [r4, #30]
 8003382:	f1a1 0101 	sub.w	r1, r1, #1
 8003386:	fab1 f181 	clz	r1, r1
 800338a:	2003      	movs	r0, #3
 800338c:	0949      	lsrs	r1, r1, #5
 800338e:	f7fd f9bf 	bl	8000710 <_test_assert>
 8003392:	2800      	cmp	r0, #0
 8003394:	d1de      	bne.n	8003354 <dyn3_execute+0x24>
 8003396:	4620      	mov	r0, r4
 8003398:	f7ff fefa 	bl	8003190 <regfind>
 800339c:	4601      	mov	r1, r0
 800339e:	2004      	movs	r0, #4
 80033a0:	f7fd f9b6 	bl	8000710 <_test_assert>
 80033a4:	2800      	cmp	r0, #0
 80033a6:	d1d5      	bne.n	8003354 <dyn3_execute+0x24>
 80033a8:	4620      	mov	r0, r4
 80033aa:	f7ff fef1 	bl	8003190 <regfind>
 80033ae:	4601      	mov	r1, r0
 80033b0:	2005      	movs	r0, #5
 80033b2:	f7fd f9ad 	bl	8000710 <_test_assert>
 80033b6:	2800      	cmp	r0, #0
 80033b8:	d1cc      	bne.n	8003354 <dyn3_execute+0x24>
 80033ba:	4620      	mov	r0, r4
 80033bc:	f7ff feb8 	bl	8003130 <chThdRelease>
 80033c0:	7fa1      	ldrb	r1, [r4, #30]
 80033c2:	fab1 f181 	clz	r1, r1
 80033c6:	0949      	lsrs	r1, r1, #5
 80033c8:	2006      	movs	r0, #6
 80033ca:	f7fd f9a1 	bl	8000710 <_test_assert>
 80033ce:	2800      	cmp	r0, #0
 80033d0:	d1c0      	bne.n	8003354 <dyn3_execute+0x24>
 80033d2:	7f21      	ldrb	r1, [r4, #28]
 80033d4:	fab1 f181 	clz	r1, r1
 80033d8:	0949      	lsrs	r1, r1, #5
 80033da:	2007      	movs	r0, #7
 80033dc:	f7fd f998 	bl	8000710 <_test_assert>
 80033e0:	2800      	cmp	r0, #0
 80033e2:	d1b7      	bne.n	8003354 <dyn3_execute+0x24>
 80033e4:	4620      	mov	r0, r4
 80033e6:	f7ff fed3 	bl	8003190 <regfind>
 80033ea:	4601      	mov	r1, r0
 80033ec:	2008      	movs	r0, #8
 80033ee:	f7fd f98f 	bl	8000710 <_test_assert>
 80033f2:	2800      	cmp	r0, #0
 80033f4:	d1ae      	bne.n	8003354 <dyn3_execute+0x24>
 80033f6:	4620      	mov	r0, r4
 80033f8:	f7ff feca 	bl	8003190 <regfind>
 80033fc:	4601      	mov	r1, r0
 80033fe:	2009      	movs	r0, #9
 8003400:	f7fd f986 	bl	8000710 <_test_assert>
 8003404:	2800      	cmp	r0, #0
 8003406:	d1a5      	bne.n	8003354 <dyn3_execute+0x24>
 8003408:	2032      	movs	r0, #50	; 0x32
 800340a:	f7ff f939 	bl	8002680 <chThdSleep>
 800340e:	7f21      	ldrb	r1, [r4, #28]
 8003410:	f1a1 030f 	sub.w	r3, r1, #15
 8003414:	4259      	negs	r1, r3
 8003416:	4159      	adcs	r1, r3
 8003418:	200a      	movs	r0, #10
 800341a:	f7fd f979 	bl	8000710 <_test_assert>
 800341e:	2800      	cmp	r0, #0
 8003420:	d198      	bne.n	8003354 <dyn3_execute+0x24>
 8003422:	4620      	mov	r0, r4
 8003424:	f7ff feb4 	bl	8003190 <regfind>
 8003428:	4601      	mov	r1, r0
 800342a:	200b      	movs	r0, #11
 800342c:	f7fd f970 	bl	8000710 <_test_assert>
 8003430:	2800      	cmp	r0, #0
 8003432:	d18f      	bne.n	8003354 <dyn3_execute+0x24>
 8003434:	4620      	mov	r0, r4
 8003436:	f7ff feab 	bl	8003190 <regfind>
 800343a:	f080 0101 	eor.w	r1, r0, #1
 800343e:	b2c9      	uxtb	r1, r1
 8003440:	200c      	movs	r0, #12
 8003442:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003446:	f7fd b963 	b.w	8000710 <_test_assert>
 800344a:	bf00      	nop
 800344c:	20000930 	.word	0x20000930
 8003450:	08005d20 	.word	0x08005d20
	...

08003460 <heap1_execute>:
 8003460:	b570      	push	{r4, r5, r6, lr}
 8003462:	b082      	sub	sp, #8
 8003464:	4669      	mov	r1, sp
 8003466:	2000      	movs	r0, #0
 8003468:	f7ff fdf2 	bl	8003050 <chHeapStatus>
 800346c:	2110      	movs	r1, #16
 800346e:	2000      	movs	r0, #0
 8003470:	f7ff fece 	bl	8003210 <chHeapAlloc>
 8003474:	1c01      	adds	r1, r0, #0
 8003476:	4605      	mov	r5, r0
 8003478:	bf18      	it	ne
 800347a:	2101      	movne	r1, #1
 800347c:	2001      	movs	r0, #1
 800347e:	f7fd f947 	bl	8000710 <_test_assert>
 8003482:	b108      	cbz	r0, 8003488 <heap1_execute+0x28>
 8003484:	b002      	add	sp, #8
 8003486:	bd70      	pop	{r4, r5, r6, pc}
 8003488:	4604      	mov	r4, r0
 800348a:	4628      	mov	r0, r5
 800348c:	f7ff fe08 	bl	80030a0 <chHeapFree>
 8003490:	f06f 01ff 	mvn.w	r1, #255	; 0xff
 8003494:	4620      	mov	r0, r4
 8003496:	f7ff febb 	bl	8003210 <chHeapAlloc>
 800349a:	fab0 f180 	clz	r1, r0
 800349e:	0949      	lsrs	r1, r1, #5
 80034a0:	2002      	movs	r0, #2
 80034a2:	f7fd f935 	bl	8000710 <_test_assert>
 80034a6:	2800      	cmp	r0, #0
 80034a8:	d1ec      	bne.n	8003484 <heap1_execute+0x24>
 80034aa:	4669      	mov	r1, sp
 80034ac:	487c      	ldr	r0, [pc, #496]	; (80036a0 <heap1_execute+0x240>)
 80034ae:	f7ff fdcf 	bl	8003050 <chHeapStatus>
 80034b2:	2110      	movs	r1, #16
 80034b4:	487a      	ldr	r0, [pc, #488]	; (80036a0 <heap1_execute+0x240>)
 80034b6:	f7ff feab 	bl	8003210 <chHeapAlloc>
 80034ba:	2110      	movs	r1, #16
 80034bc:	4606      	mov	r6, r0
 80034be:	4878      	ldr	r0, [pc, #480]	; (80036a0 <heap1_execute+0x240>)
 80034c0:	f7ff fea6 	bl	8003210 <chHeapAlloc>
 80034c4:	2110      	movs	r1, #16
 80034c6:	4605      	mov	r5, r0
 80034c8:	4875      	ldr	r0, [pc, #468]	; (80036a0 <heap1_execute+0x240>)
 80034ca:	f7ff fea1 	bl	8003210 <chHeapAlloc>
 80034ce:	4604      	mov	r4, r0
 80034d0:	4630      	mov	r0, r6
 80034d2:	f7ff fde5 	bl	80030a0 <chHeapFree>
 80034d6:	4628      	mov	r0, r5
 80034d8:	f7ff fde2 	bl	80030a0 <chHeapFree>
 80034dc:	4620      	mov	r0, r4
 80034de:	f7ff fddf 	bl	80030a0 <chHeapFree>
 80034e2:	a901      	add	r1, sp, #4
 80034e4:	486e      	ldr	r0, [pc, #440]	; (80036a0 <heap1_execute+0x240>)
 80034e6:	f7ff fdb3 	bl	8003050 <chHeapStatus>
 80034ea:	f1a0 0101 	sub.w	r1, r0, #1
 80034ee:	fab1 f181 	clz	r1, r1
 80034f2:	0949      	lsrs	r1, r1, #5
 80034f4:	2003      	movs	r0, #3
 80034f6:	f7fd f90b 	bl	8000710 <_test_assert>
 80034fa:	2800      	cmp	r0, #0
 80034fc:	d1c2      	bne.n	8003484 <heap1_execute+0x24>
 80034fe:	2110      	movs	r1, #16
 8003500:	4867      	ldr	r0, [pc, #412]	; (80036a0 <heap1_execute+0x240>)
 8003502:	f7ff fe85 	bl	8003210 <chHeapAlloc>
 8003506:	2110      	movs	r1, #16
 8003508:	4604      	mov	r4, r0
 800350a:	4865      	ldr	r0, [pc, #404]	; (80036a0 <heap1_execute+0x240>)
 800350c:	f7ff fe80 	bl	8003210 <chHeapAlloc>
 8003510:	2110      	movs	r1, #16
 8003512:	4605      	mov	r5, r0
 8003514:	4862      	ldr	r0, [pc, #392]	; (80036a0 <heap1_execute+0x240>)
 8003516:	f7ff fe7b 	bl	8003210 <chHeapAlloc>
 800351a:	f7ff fdc1 	bl	80030a0 <chHeapFree>
 800351e:	4628      	mov	r0, r5
 8003520:	f7ff fdbe 	bl	80030a0 <chHeapFree>
 8003524:	4620      	mov	r0, r4
 8003526:	f7ff fdbb 	bl	80030a0 <chHeapFree>
 800352a:	a901      	add	r1, sp, #4
 800352c:	485c      	ldr	r0, [pc, #368]	; (80036a0 <heap1_execute+0x240>)
 800352e:	f7ff fd8f 	bl	8003050 <chHeapStatus>
 8003532:	f1a0 0101 	sub.w	r1, r0, #1
 8003536:	fab1 f181 	clz	r1, r1
 800353a:	0949      	lsrs	r1, r1, #5
 800353c:	2004      	movs	r0, #4
 800353e:	f7fd f8e7 	bl	8000710 <_test_assert>
 8003542:	2800      	cmp	r0, #0
 8003544:	d19e      	bne.n	8003484 <heap1_execute+0x24>
 8003546:	2111      	movs	r1, #17
 8003548:	4855      	ldr	r0, [pc, #340]	; (80036a0 <heap1_execute+0x240>)
 800354a:	f7ff fe61 	bl	8003210 <chHeapAlloc>
 800354e:	2110      	movs	r1, #16
 8003550:	4604      	mov	r4, r0
 8003552:	4853      	ldr	r0, [pc, #332]	; (80036a0 <heap1_execute+0x240>)
 8003554:	f7ff fe5c 	bl	8003210 <chHeapAlloc>
 8003558:	4605      	mov	r5, r0
 800355a:	4620      	mov	r0, r4
 800355c:	f7ff fda0 	bl	80030a0 <chHeapFree>
 8003560:	a901      	add	r1, sp, #4
 8003562:	484f      	ldr	r0, [pc, #316]	; (80036a0 <heap1_execute+0x240>)
 8003564:	f7ff fd74 	bl	8003050 <chHeapStatus>
 8003568:	f1a0 0102 	sub.w	r1, r0, #2
 800356c:	fab1 f181 	clz	r1, r1
 8003570:	0949      	lsrs	r1, r1, #5
 8003572:	2005      	movs	r0, #5
 8003574:	f7fd f8cc 	bl	8000710 <_test_assert>
 8003578:	2800      	cmp	r0, #0
 800357a:	d183      	bne.n	8003484 <heap1_execute+0x24>
 800357c:	2110      	movs	r1, #16
 800357e:	4848      	ldr	r0, [pc, #288]	; (80036a0 <heap1_execute+0x240>)
 8003580:	f7ff fe46 	bl	8003210 <chHeapAlloc>
 8003584:	a901      	add	r1, sp, #4
 8003586:	4604      	mov	r4, r0
 8003588:	4845      	ldr	r0, [pc, #276]	; (80036a0 <heap1_execute+0x240>)
 800358a:	f7ff fd61 	bl	8003050 <chHeapStatus>
 800358e:	2801      	cmp	r0, #1
 8003590:	f000 8083 	beq.w	800369a <heap1_execute+0x23a>
 8003594:	a901      	add	r1, sp, #4
 8003596:	4842      	ldr	r0, [pc, #264]	; (80036a0 <heap1_execute+0x240>)
 8003598:	f7ff fd5a 	bl	8003050 <chHeapStatus>
 800359c:	f1a0 0102 	sub.w	r1, r0, #2
 80035a0:	fab1 f181 	clz	r1, r1
 80035a4:	0949      	lsrs	r1, r1, #5
 80035a6:	2006      	movs	r0, #6
 80035a8:	f7fd f8b2 	bl	8000710 <_test_assert>
 80035ac:	2800      	cmp	r0, #0
 80035ae:	f47f af69 	bne.w	8003484 <heap1_execute+0x24>
 80035b2:	4628      	mov	r0, r5
 80035b4:	f7ff fd74 	bl	80030a0 <chHeapFree>
 80035b8:	4620      	mov	r0, r4
 80035ba:	f7ff fd71 	bl	80030a0 <chHeapFree>
 80035be:	a901      	add	r1, sp, #4
 80035c0:	4837      	ldr	r0, [pc, #220]	; (80036a0 <heap1_execute+0x240>)
 80035c2:	f7ff fd45 	bl	8003050 <chHeapStatus>
 80035c6:	f1a0 0101 	sub.w	r1, r0, #1
 80035ca:	fab1 f181 	clz	r1, r1
 80035ce:	0949      	lsrs	r1, r1, #5
 80035d0:	2007      	movs	r0, #7
 80035d2:	f7fd f89d 	bl	8000710 <_test_assert>
 80035d6:	2800      	cmp	r0, #0
 80035d8:	f47f af54 	bne.w	8003484 <heap1_execute+0x24>
 80035dc:	2110      	movs	r1, #16
 80035de:	4830      	ldr	r0, [pc, #192]	; (80036a0 <heap1_execute+0x240>)
 80035e0:	f7ff fe16 	bl	8003210 <chHeapAlloc>
 80035e4:	2110      	movs	r1, #16
 80035e6:	4605      	mov	r5, r0
 80035e8:	482d      	ldr	r0, [pc, #180]	; (80036a0 <heap1_execute+0x240>)
 80035ea:	f7ff fe11 	bl	8003210 <chHeapAlloc>
 80035ee:	4604      	mov	r4, r0
 80035f0:	4628      	mov	r0, r5
 80035f2:	f7ff fd55 	bl	80030a0 <chHeapFree>
 80035f6:	a901      	add	r1, sp, #4
 80035f8:	4829      	ldr	r0, [pc, #164]	; (80036a0 <heap1_execute+0x240>)
 80035fa:	f7ff fd29 	bl	8003050 <chHeapStatus>
 80035fe:	1e85      	subs	r5, r0, #2
 8003600:	4269      	negs	r1, r5
 8003602:	4169      	adcs	r1, r5
 8003604:	2008      	movs	r0, #8
 8003606:	f7fd f883 	bl	8000710 <_test_assert>
 800360a:	2800      	cmp	r0, #0
 800360c:	f47f af3a 	bne.w	8003484 <heap1_execute+0x24>
 8003610:	2120      	movs	r1, #32
 8003612:	4823      	ldr	r0, [pc, #140]	; (80036a0 <heap1_execute+0x240>)
 8003614:	f7ff fdfc 	bl	8003210 <chHeapAlloc>
 8003618:	f7ff fd42 	bl	80030a0 <chHeapFree>
 800361c:	4620      	mov	r0, r4
 800361e:	f7ff fd3f 	bl	80030a0 <chHeapFree>
 8003622:	a901      	add	r1, sp, #4
 8003624:	481e      	ldr	r0, [pc, #120]	; (80036a0 <heap1_execute+0x240>)
 8003626:	f7ff fd13 	bl	8003050 <chHeapStatus>
 800362a:	3801      	subs	r0, #1
 800362c:	4241      	negs	r1, r0
 800362e:	4141      	adcs	r1, r0
 8003630:	2009      	movs	r0, #9
 8003632:	f7fd f86d 	bl	8000710 <_test_assert>
 8003636:	2800      	cmp	r0, #0
 8003638:	f47f af24 	bne.w	8003484 <heap1_execute+0x24>
 800363c:	a901      	add	r1, sp, #4
 800363e:	4818      	ldr	r0, [pc, #96]	; (80036a0 <heap1_execute+0x240>)
 8003640:	f7ff fd06 	bl	8003050 <chHeapStatus>
 8003644:	9901      	ldr	r1, [sp, #4]
 8003646:	4816      	ldr	r0, [pc, #88]	; (80036a0 <heap1_execute+0x240>)
 8003648:	f7ff fde2 	bl	8003210 <chHeapAlloc>
 800364c:	a901      	add	r1, sp, #4
 800364e:	4604      	mov	r4, r0
 8003650:	4813      	ldr	r0, [pc, #76]	; (80036a0 <heap1_execute+0x240>)
 8003652:	f7ff fcfd 	bl	8003050 <chHeapStatus>
 8003656:	fab0 f180 	clz	r1, r0
 800365a:	0949      	lsrs	r1, r1, #5
 800365c:	200a      	movs	r0, #10
 800365e:	f7fd f857 	bl	8000710 <_test_assert>
 8003662:	2800      	cmp	r0, #0
 8003664:	f47f af0e 	bne.w	8003484 <heap1_execute+0x24>
 8003668:	4620      	mov	r0, r4
 800366a:	f7ff fd19 	bl	80030a0 <chHeapFree>
 800366e:	a901      	add	r1, sp, #4
 8003670:	480b      	ldr	r0, [pc, #44]	; (80036a0 <heap1_execute+0x240>)
 8003672:	f7ff fced 	bl	8003050 <chHeapStatus>
 8003676:	1e42      	subs	r2, r0, #1
 8003678:	4251      	negs	r1, r2
 800367a:	4151      	adcs	r1, r2
 800367c:	200b      	movs	r0, #11
 800367e:	f7fd f847 	bl	8000710 <_test_assert>
 8003682:	2800      	cmp	r0, #0
 8003684:	f47f aefe 	bne.w	8003484 <heap1_execute+0x24>
 8003688:	e9dd 3100 	ldrd	r3, r1, [sp]
 800368c:	1acb      	subs	r3, r1, r3
 800368e:	4259      	negs	r1, r3
 8003690:	4159      	adcs	r1, r3
 8003692:	200c      	movs	r0, #12
 8003694:	f7fd f83c 	bl	8000710 <_test_assert>
 8003698:	e6f4      	b.n	8003484 <heap1_execute+0x24>
 800369a:	4601      	mov	r1, r0
 800369c:	e783      	b.n	80035a6 <heap1_execute+0x146>
 800369e:	bf00      	nop
 80036a0:	200011a8 	.word	0x200011a8
	...

080036b0 <chSemWait>:
 80036b0:	2320      	movs	r3, #32
 80036b2:	f383 8811 	msr	BASEPRI, r3
 80036b6:	6883      	ldr	r3, [r0, #8]
 80036b8:	3b01      	subs	r3, #1
 80036ba:	2b00      	cmp	r3, #0
 80036bc:	6083      	str	r3, [r0, #8]
 80036be:	db04      	blt.n	80036ca <chSemWait+0x1a>
 80036c0:	2000      	movs	r0, #0
 80036c2:	2300      	movs	r3, #0
 80036c4:	f383 8811 	msr	BASEPRI, r3
 80036c8:	4770      	bx	lr
 80036ca:	b510      	push	{r4, lr}
 80036cc:	4c08      	ldr	r4, [pc, #32]	; (80036f0 <chSemWait+0x40>)
 80036ce:	69a2      	ldr	r2, [r4, #24]
 80036d0:	6210      	str	r0, [r2, #32]
 80036d2:	6010      	str	r0, [r2, #0]
 80036d4:	6841      	ldr	r1, [r0, #4]
 80036d6:	6051      	str	r1, [r2, #4]
 80036d8:	4603      	mov	r3, r0
 80036da:	600a      	str	r2, [r1, #0]
 80036dc:	2005      	movs	r0, #5
 80036de:	605a      	str	r2, [r3, #4]
 80036e0:	f7fe f93e 	bl	8001960 <chSchGoSleepS>
 80036e4:	69a3      	ldr	r3, [r4, #24]
 80036e6:	6a18      	ldr	r0, [r3, #32]
 80036e8:	2300      	movs	r3, #0
 80036ea:	f383 8811 	msr	BASEPRI, r3
 80036ee:	bd10      	pop	{r4, pc}
 80036f0:	20000930 	.word	0x20000930
	...

08003700 <bmk11_execute>:
 8003700:	b570      	push	{r4, r5, r6, lr}
 8003702:	f7ff f89d 	bl	8002840 <test_wait_tick>
 8003706:	f7fd fd2b 	bl	8001160 <test_start_timer.constprop.1>
 800370a:	4e15      	ldr	r6, [pc, #84]	; (8003760 <bmk11_execute+0x60>)
 800370c:	4c15      	ldr	r4, [pc, #84]	; (8003764 <bmk11_execute+0x64>)
 800370e:	2500      	movs	r5, #0
 8003710:	4620      	mov	r0, r4
 8003712:	f7ff ffcd 	bl	80036b0 <chSemWait>
 8003716:	4620      	mov	r0, r4
 8003718:	f7fe f8ca 	bl	80018b0 <chSemSignal>
 800371c:	4620      	mov	r0, r4
 800371e:	f7ff ffc7 	bl	80036b0 <chSemWait>
 8003722:	4620      	mov	r0, r4
 8003724:	f7fe f8c4 	bl	80018b0 <chSemSignal>
 8003728:	4620      	mov	r0, r4
 800372a:	f7ff ffc1 	bl	80036b0 <chSemWait>
 800372e:	4620      	mov	r0, r4
 8003730:	f7fe f8be 	bl	80018b0 <chSemSignal>
 8003734:	4620      	mov	r0, r4
 8003736:	f7ff ffbb 	bl	80036b0 <chSemWait>
 800373a:	4620      	mov	r0, r4
 800373c:	f7fe f8b8 	bl	80018b0 <chSemSignal>
 8003740:	7833      	ldrb	r3, [r6, #0]
 8003742:	3501      	adds	r5, #1
 8003744:	2b00      	cmp	r3, #0
 8003746:	d0e3      	beq.n	8003710 <bmk11_execute+0x10>
 8003748:	4807      	ldr	r0, [pc, #28]	; (8003768 <bmk11_execute+0x68>)
 800374a:	f7fd f851 	bl	80007f0 <test_print>
 800374e:	00a8      	lsls	r0, r5, #2
 8003750:	f7fc ff56 	bl	8000600 <test_printn>
 8003754:	4805      	ldr	r0, [pc, #20]	; (800376c <bmk11_execute+0x6c>)
 8003756:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800375a:	f7fd b829 	b.w	80007b0 <test_println>
 800375e:	bf00      	nop
 8003760:	200011c8 	.word	0x200011c8
 8003764:	20000b28 	.word	0x20000b28
 8003768:	08005b90 	.word	0x08005b90
 800376c:	08005bb0 	.word	0x08005bb0

08003770 <thread3.lto_priv.66>:
 8003770:	b538      	push	{r3, r4, r5, lr}
 8003772:	4c07      	ldr	r4, [pc, #28]	; (8003790 <thread3.lto_priv.66+0x20>)
 8003774:	69a3      	ldr	r3, [r4, #24]
 8003776:	7f5b      	ldrb	r3, [r3, #29]
 8003778:	075a      	lsls	r2, r3, #29
 800377a:	d407      	bmi.n	800378c <thread3.lto_priv.66+0x1c>
 800377c:	4d05      	ldr	r5, [pc, #20]	; (8003794 <thread3.lto_priv.66+0x24>)
 800377e:	4628      	mov	r0, r5
 8003780:	f7ff ff96 	bl	80036b0 <chSemWait>
 8003784:	69a3      	ldr	r3, [r4, #24]
 8003786:	7f5b      	ldrb	r3, [r3, #29]
 8003788:	075b      	lsls	r3, r3, #29
 800378a:	d5f8      	bpl.n	800377e <thread3.lto_priv.66+0xe>
 800378c:	bd38      	pop	{r3, r4, r5, pc}
 800378e:	bf00      	nop
 8003790:	20000930 	.word	0x20000930
 8003794:	20000b28 	.word	0x20000b28
	...

080037a0 <sem4_execute>:
 80037a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80037a2:	b087      	sub	sp, #28
 80037a4:	ac03      	add	r4, sp, #12
 80037a6:	2500      	movs	r5, #0
 80037a8:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80037ac:	9505      	str	r5, [sp, #20]
 80037ae:	2620      	movs	r6, #32
 80037b0:	f386 8811 	msr	BASEPRI, r6
 80037b4:	4629      	mov	r1, r5
 80037b6:	4620      	mov	r0, r4
 80037b8:	f7fd fc3a 	bl	8001030 <chSemResetI>
 80037bc:	f7fd fe88 	bl	80014d0 <chSchRescheduleS>
 80037c0:	f385 8811 	msr	BASEPRI, r5
 80037c4:	f386 8811 	msr	BASEPRI, r6
 80037c8:	9905      	ldr	r1, [sp, #20]
 80037ca:	42a9      	cmp	r1, r5
 80037cc:	bfcc      	ite	gt
 80037ce:	2100      	movgt	r1, #0
 80037d0:	2101      	movle	r1, #1
 80037d2:	2001      	movs	r0, #1
 80037d4:	f7fc ff9c 	bl	8000710 <_test_assert>
 80037d8:	b118      	cbz	r0, 80037e2 <sem4_execute+0x42>
 80037da:	f385 8811 	msr	BASEPRI, r5
 80037de:	b007      	add	sp, #28
 80037e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037e2:	4607      	mov	r7, r0
 80037e4:	f380 8811 	msr	BASEPRI, r0
 80037e8:	4a41      	ldr	r2, [pc, #260]	; (80038f0 <sem4_execute+0x150>)
 80037ea:	4b42      	ldr	r3, [pc, #264]	; (80038f4 <sem4_execute+0x154>)
 80037ec:	6992      	ldr	r2, [r2, #24]
 80037ee:	4842      	ldr	r0, [pc, #264]	; (80038f8 <sem4_execute+0x158>)
 80037f0:	6892      	ldr	r2, [r2, #8]
 80037f2:	9400      	str	r4, [sp, #0]
 80037f4:	3a01      	subs	r2, #1
 80037f6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80037fa:	f7fe f879 	bl	80018f0 <chThdCreateStatic>
 80037fe:	4b3f      	ldr	r3, [pc, #252]	; (80038fc <sem4_execute+0x15c>)
 8003800:	6018      	str	r0, [r3, #0]
 8003802:	4620      	mov	r0, r4
 8003804:	f7ff ff54 	bl	80036b0 <chSemWait>
 8003808:	f386 8811 	msr	BASEPRI, r6
 800380c:	9905      	ldr	r1, [sp, #20]
 800380e:	2900      	cmp	r1, #0
 8003810:	bfcc      	ite	gt
 8003812:	2100      	movgt	r1, #0
 8003814:	2101      	movle	r1, #1
 8003816:	2002      	movs	r0, #2
 8003818:	f7fc ff7a 	bl	8000710 <_test_assert>
 800381c:	b118      	cbz	r0, 8003826 <sem4_execute+0x86>
 800381e:	f387 8811 	msr	BASEPRI, r7
 8003822:	b007      	add	sp, #28
 8003824:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003826:	f380 8811 	msr	BASEPRI, r0
 800382a:	f386 8811 	msr	BASEPRI, r6
 800382e:	9b05      	ldr	r3, [sp, #20]
 8003830:	2b00      	cmp	r3, #0
 8003832:	dd24      	ble.n	800387e <sem4_execute+0xde>
 8003834:	f7fd fe4c 	bl	80014d0 <chSchRescheduleS>
 8003838:	2500      	movs	r5, #0
 800383a:	f385 8811 	msr	BASEPRI, r5
 800383e:	2720      	movs	r7, #32
 8003840:	f387 8811 	msr	BASEPRI, r7
 8003844:	9905      	ldr	r1, [sp, #20]
 8003846:	42a9      	cmp	r1, r5
 8003848:	f04f 0003 	mov.w	r0, #3
 800384c:	bfd4      	ite	le
 800384e:	2100      	movle	r1, #0
 8003850:	2101      	movgt	r1, #1
 8003852:	f7fc ff5d 	bl	8000710 <_test_assert>
 8003856:	4606      	mov	r6, r0
 8003858:	2800      	cmp	r0, #0
 800385a:	d1be      	bne.n	80037da <sem4_execute+0x3a>
 800385c:	f380 8811 	msr	BASEPRI, r0
 8003860:	f387 8811 	msr	BASEPRI, r7
 8003864:	9905      	ldr	r1, [sp, #20]
 8003866:	f1a1 0101 	sub.w	r1, r1, #1
 800386a:	fab1 f181 	clz	r1, r1
 800386e:	2004      	movs	r0, #4
 8003870:	0949      	lsrs	r1, r1, #5
 8003872:	f7fc ff4d 	bl	8000710 <_test_assert>
 8003876:	b130      	cbz	r0, 8003886 <sem4_execute+0xe6>
 8003878:	f386 8811 	msr	BASEPRI, r6
 800387c:	e7af      	b.n	80037de <sem4_execute+0x3e>
 800387e:	4620      	mov	r0, r4
 8003880:	f7fd fb66 	bl	8000f50 <chSemSignalI>
 8003884:	e7d6      	b.n	8003834 <sem4_execute+0x94>
 8003886:	f380 8811 	msr	BASEPRI, r0
 800388a:	f387 8811 	msr	BASEPRI, r7
 800388e:	9b05      	ldr	r3, [sp, #20]
 8003890:	2b00      	cmp	r3, #0
 8003892:	dd28      	ble.n	80038e6 <sem4_execute+0x146>
 8003894:	f7fd fe1c 	bl	80014d0 <chSchRescheduleS>
 8003898:	2400      	movs	r4, #0
 800389a:	f384 8811 	msr	BASEPRI, r4
 800389e:	2620      	movs	r6, #32
 80038a0:	f386 8811 	msr	BASEPRI, r6
 80038a4:	9905      	ldr	r1, [sp, #20]
 80038a6:	42a1      	cmp	r1, r4
 80038a8:	f04f 0003 	mov.w	r0, #3
 80038ac:	bfd4      	ite	le
 80038ae:	2100      	movle	r1, #0
 80038b0:	2101      	movgt	r1, #1
 80038b2:	f7fc ff2d 	bl	8000710 <_test_assert>
 80038b6:	4605      	mov	r5, r0
 80038b8:	b110      	cbz	r0, 80038c0 <sem4_execute+0x120>
 80038ba:	f384 8811 	msr	BASEPRI, r4
 80038be:	e78e      	b.n	80037de <sem4_execute+0x3e>
 80038c0:	f380 8811 	msr	BASEPRI, r0
 80038c4:	f386 8811 	msr	BASEPRI, r6
 80038c8:	9905      	ldr	r1, [sp, #20]
 80038ca:	f1a1 0101 	sub.w	r1, r1, #1
 80038ce:	fab1 f181 	clz	r1, r1
 80038d2:	2005      	movs	r0, #5
 80038d4:	0949      	lsrs	r1, r1, #5
 80038d6:	f7fc ff1b 	bl	8000710 <_test_assert>
 80038da:	2800      	cmp	r0, #0
 80038dc:	f47f af7d 	bne.w	80037da <sem4_execute+0x3a>
 80038e0:	f380 8811 	msr	BASEPRI, r0
 80038e4:	e77b      	b.n	80037de <sem4_execute+0x3e>
 80038e6:	4620      	mov	r0, r4
 80038e8:	f7fd fb32 	bl	8000f50 <chSemSignalI>
 80038ec:	e7d2      	b.n	8003894 <sem4_execute+0xf4>
 80038ee:	bf00      	nop
 80038f0:	20000930 	.word	0x20000930
 80038f4:	080014f1 	.word	0x080014f1
 80038f8:	20000b38 	.word	0x20000b38
 80038fc:	200011cc 	.word	0x200011cc

08003900 <thread3.lto_priv.65>:
 8003900:	b510      	push	{r4, lr}
 8003902:	4c04      	ldr	r4, [pc, #16]	; (8003914 <thread3.lto_priv.65+0x14>)
 8003904:	4620      	mov	r0, r4
 8003906:	f7ff fed3 	bl	80036b0 <chSemWait>
 800390a:	4620      	mov	r0, r4
 800390c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003910:	f7fd bfce 	b.w	80018b0 <chSemSignal>
 8003914:	200008ac 	.word	0x200008ac
	...

08003920 <thread1.lto_priv.67>:
 8003920:	b510      	push	{r4, lr}
 8003922:	4604      	mov	r4, r0
 8003924:	4803      	ldr	r0, [pc, #12]	; (8003934 <thread1.lto_priv.67+0x14>)
 8003926:	f7ff fec3 	bl	80036b0 <chSemWait>
 800392a:	7820      	ldrb	r0, [r4, #0]
 800392c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003930:	f7fc bf06 	b.w	8000740 <test_emit_token>
 8003934:	200008ac 	.word	0x200008ac
	...

08003940 <chThdWait>:
 8003940:	b538      	push	{r3, r4, r5, lr}
 8003942:	4604      	mov	r4, r0
 8003944:	2320      	movs	r3, #32
 8003946:	f383 8811 	msr	BASEPRI, r3
 800394a:	7f03      	ldrb	r3, [r0, #28]
 800394c:	2b0f      	cmp	r3, #15
 800394e:	d007      	beq.n	8003960 <chThdWait+0x20>
 8003950:	4b08      	ldr	r3, [pc, #32]	; (8003974 <chThdWait+0x34>)
 8003952:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003954:	699b      	ldr	r3, [r3, #24]
 8003956:	2009      	movs	r0, #9
 8003958:	601a      	str	r2, [r3, #0]
 800395a:	6263      	str	r3, [r4, #36]	; 0x24
 800395c:	f7fe f800 	bl	8001960 <chSchGoSleepS>
 8003960:	6a25      	ldr	r5, [r4, #32]
 8003962:	2300      	movs	r3, #0
 8003964:	f383 8811 	msr	BASEPRI, r3
 8003968:	4620      	mov	r0, r4
 800396a:	f7ff fbe1 	bl	8003130 <chThdRelease>
 800396e:	4628      	mov	r0, r5
 8003970:	bd38      	pop	{r3, r4, r5, pc}
 8003972:	bf00      	nop
 8003974:	20000930 	.word	0x20000930
	...

08003980 <bmk5_execute>:
 8003980:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003984:	4b15      	ldr	r3, [pc, #84]	; (80039dc <bmk5_execute+0x5c>)
 8003986:	f8df 9064 	ldr.w	r9, [pc, #100]	; 80039ec <bmk5_execute+0x6c>
 800398a:	699b      	ldr	r3, [r3, #24]
 800398c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80039f0 <bmk5_execute+0x70>
 8003990:	689d      	ldr	r5, [r3, #8]
 8003992:	4f13      	ldr	r7, [pc, #76]	; (80039e0 <bmk5_execute+0x60>)
 8003994:	b083      	sub	sp, #12
 8003996:	f7fe ff53 	bl	8002840 <test_wait_tick>
 800399a:	f7fd fbe1 	bl	8001160 <test_start_timer.constprop.1>
 800399e:	2400      	movs	r4, #0
 80039a0:	3d01      	subs	r5, #1
 80039a2:	4626      	mov	r6, r4
 80039a4:	4643      	mov	r3, r8
 80039a6:	462a      	mov	r2, r5
 80039a8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80039ac:	9600      	str	r6, [sp, #0]
 80039ae:	4638      	mov	r0, r7
 80039b0:	f7fd ff9e 	bl	80018f0 <chThdCreateStatic>
 80039b4:	f7ff ffc4 	bl	8003940 <chThdWait>
 80039b8:	f899 3000 	ldrb.w	r3, [r9]
 80039bc:	3401      	adds	r4, #1
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d0f0      	beq.n	80039a4 <bmk5_execute+0x24>
 80039c2:	4808      	ldr	r0, [pc, #32]	; (80039e4 <bmk5_execute+0x64>)
 80039c4:	f7fc ff14 	bl	80007f0 <test_print>
 80039c8:	4620      	mov	r0, r4
 80039ca:	f7fc fe19 	bl	8000600 <test_printn>
 80039ce:	4806      	ldr	r0, [pc, #24]	; (80039e8 <bmk5_execute+0x68>)
 80039d0:	b003      	add	sp, #12
 80039d2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80039d6:	f7fc beeb 	b.w	80007b0 <test_println>
 80039da:	bf00      	nop
 80039dc:	20000930 	.word	0x20000930
 80039e0:	20000b38 	.word	0x20000b38
 80039e4:	08005b90 	.word	0x08005b90
 80039e8:	08005c90 	.word	0x08005c90
 80039ec:	200011c8 	.word	0x200011c8
 80039f0:	08005b21 	.word	0x08005b21
	...

08003a00 <test_wait_threads>:
 8003a00:	b570      	push	{r4, r5, r6, lr}
 8003a02:	4c07      	ldr	r4, [pc, #28]	; (8003a20 <test_wait_threads+0x20>)
 8003a04:	2600      	movs	r6, #0
 8003a06:	f104 0514 	add.w	r5, r4, #20
 8003a0a:	f854 0b04 	ldr.w	r0, [r4], #4
 8003a0e:	b118      	cbz	r0, 8003a18 <test_wait_threads+0x18>
 8003a10:	f7ff ff96 	bl	8003940 <chThdWait>
 8003a14:	f844 6c04 	str.w	r6, [r4, #-4]
 8003a18:	42ac      	cmp	r4, r5
 8003a1a:	d1f6      	bne.n	8003a0a <test_wait_threads+0xa>
 8003a1c:	bd70      	pop	{r4, r5, r6, pc}
 8003a1e:	bf00      	nop
 8003a20:	200011cc 	.word	0x200011cc
	...

08003a30 <bmk8_execute>:
 8003a30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003a34:	b084      	sub	sp, #16
 8003a36:	ac04      	add	r4, sp, #16
 8003a38:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8003b08 <bmk8_execute+0xd8>
 8003a3c:	4f2d      	ldr	r7, [pc, #180]	; (8003af4 <bmk8_execute+0xc4>)
 8003a3e:	4e2e      	ldr	r6, [pc, #184]	; (8003af8 <bmk8_execute+0xc8>)
 8003a40:	4d2e      	ldr	r5, [pc, #184]	; (8003afc <bmk8_execute+0xcc>)
 8003a42:	2300      	movs	r3, #0
 8003a44:	f844 3d04 	str.w	r3, [r4, #-4]!
 8003a48:	f7fe fefa 	bl	8002840 <test_wait_tick>
 8003a4c:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003a50:	689a      	ldr	r2, [r3, #8]
 8003a52:	9400      	str	r4, [sp, #0]
 8003a54:	463b      	mov	r3, r7
 8003a56:	3a01      	subs	r2, #1
 8003a58:	4630      	mov	r0, r6
 8003a5a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003a5e:	f7fd ff47 	bl	80018f0 <chThdCreateStatic>
 8003a62:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003a66:	6028      	str	r0, [r5, #0]
 8003a68:	689a      	ldr	r2, [r3, #8]
 8003a6a:	9400      	str	r4, [sp, #0]
 8003a6c:	463b      	mov	r3, r7
 8003a6e:	3a01      	subs	r2, #1
 8003a70:	f506 70a4 	add.w	r0, r6, #328	; 0x148
 8003a74:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003a78:	f7fd ff3a 	bl	80018f0 <chThdCreateStatic>
 8003a7c:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003a80:	6068      	str	r0, [r5, #4]
 8003a82:	689a      	ldr	r2, [r3, #8]
 8003a84:	9400      	str	r4, [sp, #0]
 8003a86:	463b      	mov	r3, r7
 8003a88:	3a01      	subs	r2, #1
 8003a8a:	f506 7024 	add.w	r0, r6, #656	; 0x290
 8003a8e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003a92:	f7fd ff2d 	bl	80018f0 <chThdCreateStatic>
 8003a96:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003a9a:	60a8      	str	r0, [r5, #8]
 8003a9c:	689a      	ldr	r2, [r3, #8]
 8003a9e:	9400      	str	r4, [sp, #0]
 8003aa0:	463b      	mov	r3, r7
 8003aa2:	3a01      	subs	r2, #1
 8003aa4:	f506 7076 	add.w	r0, r6, #984	; 0x3d8
 8003aa8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003aac:	f7fd ff20 	bl	80018f0 <chThdCreateStatic>
 8003ab0:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003ab4:	60e8      	str	r0, [r5, #12]
 8003ab6:	689a      	ldr	r2, [r3, #8]
 8003ab8:	9400      	str	r4, [sp, #0]
 8003aba:	3a01      	subs	r2, #1
 8003abc:	463b      	mov	r3, r7
 8003abe:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003ac2:	f506 60a4 	add.w	r0, r6, #1312	; 0x520
 8003ac6:	f7fd ff13 	bl	80018f0 <chThdCreateStatic>
 8003aca:	6128      	str	r0, [r5, #16]
 8003acc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8003ad0:	f7fe fdd6 	bl	8002680 <chThdSleep>
 8003ad4:	f7fc fdbc 	bl	8000650 <test_terminate_threads>
 8003ad8:	f7ff ff92 	bl	8003a00 <test_wait_threads>
 8003adc:	4808      	ldr	r0, [pc, #32]	; (8003b00 <bmk8_execute+0xd0>)
 8003ade:	f7fc fe87 	bl	80007f0 <test_print>
 8003ae2:	9803      	ldr	r0, [sp, #12]
 8003ae4:	f7fc fd8c 	bl	8000600 <test_printn>
 8003ae8:	4806      	ldr	r0, [pc, #24]	; (8003b04 <bmk8_execute+0xd4>)
 8003aea:	f7fc fe61 	bl	80007b0 <test_println>
 8003aee:	b004      	add	sp, #16
 8003af0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003af4:	08001461 	.word	0x08001461
 8003af8:	20000b38 	.word	0x20000b38
 8003afc:	200011cc 	.word	0x200011cc
 8003b00:	08005b90 	.word	0x08005b90
 8003b04:	08005cc0 	.word	0x08005cc0
 8003b08:	20000930 	.word	0x20000930
 8003b0c:	00000000 	.word	0x00000000

08003b10 <bmk7_execute>:
 8003b10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003b14:	4e3a      	ldr	r6, [pc, #232]	; (8003c00 <bmk7_execute+0xf0>)
 8003b16:	4b3b      	ldr	r3, [pc, #236]	; (8003c04 <bmk7_execute+0xf4>)
 8003b18:	69b2      	ldr	r2, [r6, #24]
 8003b1a:	483b      	ldr	r0, [pc, #236]	; (8003c08 <bmk7_execute+0xf8>)
 8003b1c:	6892      	ldr	r2, [r2, #8]
 8003b1e:	4d3b      	ldr	r5, [pc, #236]	; (8003c0c <bmk7_execute+0xfc>)
 8003b20:	f8df 810c 	ldr.w	r8, [pc, #268]	; 8003c30 <bmk7_execute+0x120>
 8003b24:	4f3a      	ldr	r7, [pc, #232]	; (8003c10 <bmk7_execute+0x100>)
 8003b26:	b082      	sub	sp, #8
 8003b28:	2400      	movs	r4, #0
 8003b2a:	3205      	adds	r2, #5
 8003b2c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b30:	9400      	str	r4, [sp, #0]
 8003b32:	f7fd fedd 	bl	80018f0 <chThdCreateStatic>
 8003b36:	69b3      	ldr	r3, [r6, #24]
 8003b38:	6028      	str	r0, [r5, #0]
 8003b3a:	689a      	ldr	r2, [r3, #8]
 8003b3c:	4835      	ldr	r0, [pc, #212]	; (8003c14 <bmk7_execute+0x104>)
 8003b3e:	4b31      	ldr	r3, [pc, #196]	; (8003c04 <bmk7_execute+0xf4>)
 8003b40:	9400      	str	r4, [sp, #0]
 8003b42:	3204      	adds	r2, #4
 8003b44:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b48:	f7fd fed2 	bl	80018f0 <chThdCreateStatic>
 8003b4c:	69b3      	ldr	r3, [r6, #24]
 8003b4e:	6068      	str	r0, [r5, #4]
 8003b50:	689a      	ldr	r2, [r3, #8]
 8003b52:	4831      	ldr	r0, [pc, #196]	; (8003c18 <bmk7_execute+0x108>)
 8003b54:	4b2b      	ldr	r3, [pc, #172]	; (8003c04 <bmk7_execute+0xf4>)
 8003b56:	9400      	str	r4, [sp, #0]
 8003b58:	3203      	adds	r2, #3
 8003b5a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b5e:	f7fd fec7 	bl	80018f0 <chThdCreateStatic>
 8003b62:	69b3      	ldr	r3, [r6, #24]
 8003b64:	60a8      	str	r0, [r5, #8]
 8003b66:	689a      	ldr	r2, [r3, #8]
 8003b68:	482c      	ldr	r0, [pc, #176]	; (8003c1c <bmk7_execute+0x10c>)
 8003b6a:	4b26      	ldr	r3, [pc, #152]	; (8003c04 <bmk7_execute+0xf4>)
 8003b6c:	9400      	str	r4, [sp, #0]
 8003b6e:	3202      	adds	r2, #2
 8003b70:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b74:	f7fd febc 	bl	80018f0 <chThdCreateStatic>
 8003b78:	69b3      	ldr	r3, [r6, #24]
 8003b7a:	60e8      	str	r0, [r5, #12]
 8003b7c:	689a      	ldr	r2, [r3, #8]
 8003b7e:	4828      	ldr	r0, [pc, #160]	; (8003c20 <bmk7_execute+0x110>)
 8003b80:	4b20      	ldr	r3, [pc, #128]	; (8003c04 <bmk7_execute+0xf4>)
 8003b82:	9400      	str	r4, [sp, #0]
 8003b84:	3201      	adds	r2, #1
 8003b86:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b8a:	f7fd feb1 	bl	80018f0 <chThdCreateStatic>
 8003b8e:	6128      	str	r0, [r5, #16]
 8003b90:	f7fe fe56 	bl	8002840 <test_wait_tick>
 8003b94:	f7fd fae4 	bl	8001160 <test_start_timer.constprop.1>
 8003b98:	4625      	mov	r5, r4
 8003b9a:	2620      	movs	r6, #32
 8003b9c:	f386 8811 	msr	BASEPRI, r6
 8003ba0:	2100      	movs	r1, #0
 8003ba2:	4638      	mov	r0, r7
 8003ba4:	f7fd fa44 	bl	8001030 <chSemResetI>
 8003ba8:	f7fd fc92 	bl	80014d0 <chSchRescheduleS>
 8003bac:	f385 8811 	msr	BASEPRI, r5
 8003bb0:	f898 3000 	ldrb.w	r3, [r8]
 8003bb4:	3401      	adds	r4, #1
 8003bb6:	2b00      	cmp	r3, #0
 8003bb8:	d0f0      	beq.n	8003b9c <bmk7_execute+0x8c>
 8003bba:	f7fc fd49 	bl	8000650 <test_terminate_threads>
 8003bbe:	f386 8811 	msr	BASEPRI, r6
 8003bc2:	2100      	movs	r1, #0
 8003bc4:	4812      	ldr	r0, [pc, #72]	; (8003c10 <bmk7_execute+0x100>)
 8003bc6:	f7fd fa33 	bl	8001030 <chSemResetI>
 8003bca:	f7fd fc81 	bl	80014d0 <chSchRescheduleS>
 8003bce:	f385 8811 	msr	BASEPRI, r5
 8003bd2:	f7ff ff15 	bl	8003a00 <test_wait_threads>
 8003bd6:	4813      	ldr	r0, [pc, #76]	; (8003c24 <bmk7_execute+0x114>)
 8003bd8:	f7fc fe0a 	bl	80007f0 <test_print>
 8003bdc:	4620      	mov	r0, r4
 8003bde:	f7fc fd0f 	bl	8000600 <test_printn>
 8003be2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8003be6:	4810      	ldr	r0, [pc, #64]	; (8003c28 <bmk7_execute+0x118>)
 8003be8:	f7fc fe02 	bl	80007f0 <test_print>
 8003bec:	0060      	lsls	r0, r4, #1
 8003bee:	f7fc fd07 	bl	8000600 <test_printn>
 8003bf2:	480e      	ldr	r0, [pc, #56]	; (8003c2c <bmk7_execute+0x11c>)
 8003bf4:	b002      	add	sp, #8
 8003bf6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003bfa:	f7fc bdd9 	b.w	80007b0 <test_println>
 8003bfe:	bf00      	nop
 8003c00:	20000930 	.word	0x20000930
 8003c04:	08003771 	.word	0x08003771
 8003c08:	20000b38 	.word	0x20000b38
 8003c0c:	200011cc 	.word	0x200011cc
 8003c10:	20000b28 	.word	0x20000b28
 8003c14:	20000c80 	.word	0x20000c80
 8003c18:	20000dc8 	.word	0x20000dc8
 8003c1c:	20000f10 	.word	0x20000f10
 8003c20:	20001058 	.word	0x20001058
 8003c24:	08005b90 	.word	0x08005b90
 8003c28:	08005ca0 	.word	0x08005ca0
 8003c2c:	08005cc0 	.word	0x08005cc0
 8003c30:	200011c8 	.word	0x200011c8
	...

08003c40 <bmk4_execute>:
 8003c40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003c44:	4a23      	ldr	r2, [pc, #140]	; (8003cd4 <bmk4_execute+0x94>)
 8003c46:	4b24      	ldr	r3, [pc, #144]	; (8003cd8 <bmk4_execute+0x98>)
 8003c48:	6992      	ldr	r2, [r2, #24]
 8003c4a:	4824      	ldr	r0, [pc, #144]	; (8003cdc <bmk4_execute+0x9c>)
 8003c4c:	6892      	ldr	r2, [r2, #8]
 8003c4e:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8003cec <bmk4_execute+0xac>
 8003c52:	b082      	sub	sp, #8
 8003c54:	2500      	movs	r5, #0
 8003c56:	3201      	adds	r2, #1
 8003c58:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003c5c:	9500      	str	r5, [sp, #0]
 8003c5e:	f7fd fe47 	bl	80018f0 <chThdCreateStatic>
 8003c62:	4b1f      	ldr	r3, [pc, #124]	; (8003ce0 <bmk4_execute+0xa0>)
 8003c64:	4604      	mov	r4, r0
 8003c66:	6018      	str	r0, [r3, #0]
 8003c68:	f7fe fdea 	bl	8002840 <test_wait_tick>
 8003c6c:	f7fd fa78 	bl	8001160 <test_start_timer.constprop.1>
 8003c70:	462e      	mov	r6, r5
 8003c72:	2720      	movs	r7, #32
 8003c74:	f387 8811 	msr	BASEPRI, r7
 8003c78:	2100      	movs	r1, #0
 8003c7a:	4620      	mov	r0, r4
 8003c7c:	f7fd fd58 	bl	8001730 <chSchWakeupS>
 8003c80:	4620      	mov	r0, r4
 8003c82:	2100      	movs	r1, #0
 8003c84:	f7fd fd54 	bl	8001730 <chSchWakeupS>
 8003c88:	4620      	mov	r0, r4
 8003c8a:	2100      	movs	r1, #0
 8003c8c:	f7fd fd50 	bl	8001730 <chSchWakeupS>
 8003c90:	4620      	mov	r0, r4
 8003c92:	2100      	movs	r1, #0
 8003c94:	f7fd fd4c 	bl	8001730 <chSchWakeupS>
 8003c98:	f386 8811 	msr	BASEPRI, r6
 8003c9c:	f898 3000 	ldrb.w	r3, [r8]
 8003ca0:	3504      	adds	r5, #4
 8003ca2:	2b00      	cmp	r3, #0
 8003ca4:	d0e6      	beq.n	8003c74 <bmk4_execute+0x34>
 8003ca6:	f387 8811 	msr	BASEPRI, r7
 8003caa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003cae:	4620      	mov	r0, r4
 8003cb0:	f7fd fd3e 	bl	8001730 <chSchWakeupS>
 8003cb4:	f386 8811 	msr	BASEPRI, r6
 8003cb8:	f7ff fea2 	bl	8003a00 <test_wait_threads>
 8003cbc:	4809      	ldr	r0, [pc, #36]	; (8003ce4 <bmk4_execute+0xa4>)
 8003cbe:	f7fc fd97 	bl	80007f0 <test_print>
 8003cc2:	0068      	lsls	r0, r5, #1
 8003cc4:	f7fc fc9c 	bl	8000600 <test_printn>
 8003cc8:	4807      	ldr	r0, [pc, #28]	; (8003ce8 <bmk4_execute+0xa8>)
 8003cca:	b002      	add	sp, #8
 8003ccc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003cd0:	f7fc bd6e 	b.w	80007b0 <test_println>
 8003cd4:	20000930 	.word	0x20000930
 8003cd8:	08001b01 	.word	0x08001b01
 8003cdc:	20000b38 	.word	0x20000b38
 8003ce0:	200011cc 	.word	0x200011cc
 8003ce4:	08005b90 	.word	0x08005b90
 8003ce8:	08005cc0 	.word	0x08005cc0
 8003cec:	200011c8 	.word	0x200011c8

08003cf0 <bmk3_execute>:
 8003cf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003cf4:	4f2c      	ldr	r7, [pc, #176]	; (8003da8 <bmk3_execute+0xb8>)
 8003cf6:	4d2d      	ldr	r5, [pc, #180]	; (8003dac <bmk3_execute+0xbc>)
 8003cf8:	69ba      	ldr	r2, [r7, #24]
 8003cfa:	4b2d      	ldr	r3, [pc, #180]	; (8003db0 <bmk3_execute+0xc0>)
 8003cfc:	6892      	ldr	r2, [r2, #8]
 8003cfe:	4c2d      	ldr	r4, [pc, #180]	; (8003db4 <bmk3_execute+0xc4>)
 8003d00:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8003dc4 <bmk3_execute+0xd4>
 8003d04:	b082      	sub	sp, #8
 8003d06:	2600      	movs	r6, #0
 8003d08:	3201      	adds	r2, #1
 8003d0a:	4628      	mov	r0, r5
 8003d0c:	9600      	str	r6, [sp, #0]
 8003d0e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d12:	f7fd fded 	bl	80018f0 <chThdCreateStatic>
 8003d16:	69bb      	ldr	r3, [r7, #24]
 8003d18:	6020      	str	r0, [r4, #0]
 8003d1a:	689a      	ldr	r2, [r3, #8]
 8003d1c:	9600      	str	r6, [sp, #0]
 8003d1e:	4643      	mov	r3, r8
 8003d20:	3a02      	subs	r2, #2
 8003d22:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8003d26:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d2a:	f7fd fde1 	bl	80018f0 <chThdCreateStatic>
 8003d2e:	69bb      	ldr	r3, [r7, #24]
 8003d30:	6060      	str	r0, [r4, #4]
 8003d32:	689a      	ldr	r2, [r3, #8]
 8003d34:	9600      	str	r6, [sp, #0]
 8003d36:	4643      	mov	r3, r8
 8003d38:	3a03      	subs	r2, #3
 8003d3a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8003d3e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d42:	f7fd fdd5 	bl	80018f0 <chThdCreateStatic>
 8003d46:	69bb      	ldr	r3, [r7, #24]
 8003d48:	60a0      	str	r0, [r4, #8]
 8003d4a:	689a      	ldr	r2, [r3, #8]
 8003d4c:	9600      	str	r6, [sp, #0]
 8003d4e:	4643      	mov	r3, r8
 8003d50:	3a04      	subs	r2, #4
 8003d52:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8003d56:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d5a:	f7fd fdc9 	bl	80018f0 <chThdCreateStatic>
 8003d5e:	69bb      	ldr	r3, [r7, #24]
 8003d60:	60e0      	str	r0, [r4, #12]
 8003d62:	689a      	ldr	r2, [r3, #8]
 8003d64:	9600      	str	r6, [sp, #0]
 8003d66:	3a05      	subs	r2, #5
 8003d68:	4643      	mov	r3, r8
 8003d6a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d6e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8003d72:	f7fd fdbd 	bl	80018f0 <chThdCreateStatic>
 8003d76:	6120      	str	r0, [r4, #16]
 8003d78:	6820      	ldr	r0, [r4, #0]
 8003d7a:	f7fe ff51 	bl	8002c20 <msg_loop_test>
 8003d7e:	4604      	mov	r4, r0
 8003d80:	f7ff fe3e 	bl	8003a00 <test_wait_threads>
 8003d84:	480c      	ldr	r0, [pc, #48]	; (8003db8 <bmk3_execute+0xc8>)
 8003d86:	f7fc fd33 	bl	80007f0 <test_print>
 8003d8a:	4620      	mov	r0, r4
 8003d8c:	f7fc fc38 	bl	8000600 <test_printn>
 8003d90:	480a      	ldr	r0, [pc, #40]	; (8003dbc <bmk3_execute+0xcc>)
 8003d92:	f7fc fd2d 	bl	80007f0 <test_print>
 8003d96:	0060      	lsls	r0, r4, #1
 8003d98:	f7fc fc32 	bl	8000600 <test_printn>
 8003d9c:	4808      	ldr	r0, [pc, #32]	; (8003dc0 <bmk3_execute+0xd0>)
 8003d9e:	b002      	add	sp, #8
 8003da0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003da4:	f7fc bd04 	b.w	80007b0 <test_println>
 8003da8:	20000930 	.word	0x20000930
 8003dac:	20000b38 	.word	0x20000b38
 8003db0:	08002b21 	.word	0x08002b21
 8003db4:	200011cc 	.word	0x200011cc
 8003db8:	08005b90 	.word	0x08005b90
 8003dbc:	08005c80 	.word	0x08005c80
 8003dc0:	08005cc0 	.word	0x08005cc0
 8003dc4:	08005b21 	.word	0x08005b21
	...

08003dd0 <bmk2_execute>:
 8003dd0:	b510      	push	{r4, lr}
 8003dd2:	4a13      	ldr	r2, [pc, #76]	; (8003e20 <bmk2_execute+0x50>)
 8003dd4:	4b13      	ldr	r3, [pc, #76]	; (8003e24 <bmk2_execute+0x54>)
 8003dd6:	6992      	ldr	r2, [r2, #24]
 8003dd8:	4813      	ldr	r0, [pc, #76]	; (8003e28 <bmk2_execute+0x58>)
 8003dda:	6892      	ldr	r2, [r2, #8]
 8003ddc:	b082      	sub	sp, #8
 8003dde:	2100      	movs	r1, #0
 8003de0:	3201      	adds	r2, #1
 8003de2:	9100      	str	r1, [sp, #0]
 8003de4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003de8:	f7fd fd82 	bl	80018f0 <chThdCreateStatic>
 8003dec:	4b0f      	ldr	r3, [pc, #60]	; (8003e2c <bmk2_execute+0x5c>)
 8003dee:	6018      	str	r0, [r3, #0]
 8003df0:	f7fe ff16 	bl	8002c20 <msg_loop_test>
 8003df4:	4604      	mov	r4, r0
 8003df6:	f7ff fe03 	bl	8003a00 <test_wait_threads>
 8003dfa:	480d      	ldr	r0, [pc, #52]	; (8003e30 <bmk2_execute+0x60>)
 8003dfc:	f7fc fcf8 	bl	80007f0 <test_print>
 8003e00:	4620      	mov	r0, r4
 8003e02:	f7fc fbfd 	bl	8000600 <test_printn>
 8003e06:	480b      	ldr	r0, [pc, #44]	; (8003e34 <bmk2_execute+0x64>)
 8003e08:	f7fc fcf2 	bl	80007f0 <test_print>
 8003e0c:	0060      	lsls	r0, r4, #1
 8003e0e:	f7fc fbf7 	bl	8000600 <test_printn>
 8003e12:	4809      	ldr	r0, [pc, #36]	; (8003e38 <bmk2_execute+0x68>)
 8003e14:	b002      	add	sp, #8
 8003e16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e1a:	f7fc bcc9 	b.w	80007b0 <test_println>
 8003e1e:	bf00      	nop
 8003e20:	20000930 	.word	0x20000930
 8003e24:	08002b21 	.word	0x08002b21
 8003e28:	20000b38 	.word	0x20000b38
 8003e2c:	200011cc 	.word	0x200011cc
 8003e30:	08005b90 	.word	0x08005b90
 8003e34:	08005c80 	.word	0x08005c80
 8003e38:	08005cc0 	.word	0x08005cc0
 8003e3c:	00000000 	.word	0x00000000

08003e40 <bmk1_execute>:
 8003e40:	b510      	push	{r4, lr}
 8003e42:	4a13      	ldr	r2, [pc, #76]	; (8003e90 <bmk1_execute+0x50>)
 8003e44:	4b13      	ldr	r3, [pc, #76]	; (8003e94 <bmk1_execute+0x54>)
 8003e46:	6992      	ldr	r2, [r2, #24]
 8003e48:	4813      	ldr	r0, [pc, #76]	; (8003e98 <bmk1_execute+0x58>)
 8003e4a:	6892      	ldr	r2, [r2, #8]
 8003e4c:	b082      	sub	sp, #8
 8003e4e:	2100      	movs	r1, #0
 8003e50:	3a01      	subs	r2, #1
 8003e52:	9100      	str	r1, [sp, #0]
 8003e54:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003e58:	f7fd fd4a 	bl	80018f0 <chThdCreateStatic>
 8003e5c:	4b0f      	ldr	r3, [pc, #60]	; (8003e9c <bmk1_execute+0x5c>)
 8003e5e:	6018      	str	r0, [r3, #0]
 8003e60:	f7fe fede 	bl	8002c20 <msg_loop_test>
 8003e64:	4604      	mov	r4, r0
 8003e66:	f7ff fdcb 	bl	8003a00 <test_wait_threads>
 8003e6a:	480d      	ldr	r0, [pc, #52]	; (8003ea0 <bmk1_execute+0x60>)
 8003e6c:	f7fc fcc0 	bl	80007f0 <test_print>
 8003e70:	4620      	mov	r0, r4
 8003e72:	f7fc fbc5 	bl	8000600 <test_printn>
 8003e76:	480b      	ldr	r0, [pc, #44]	; (8003ea4 <bmk1_execute+0x64>)
 8003e78:	f7fc fcba 	bl	80007f0 <test_print>
 8003e7c:	0060      	lsls	r0, r4, #1
 8003e7e:	f7fc fbbf 	bl	8000600 <test_printn>
 8003e82:	4809      	ldr	r0, [pc, #36]	; (8003ea8 <bmk1_execute+0x68>)
 8003e84:	b002      	add	sp, #8
 8003e86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e8a:	f7fc bc91 	b.w	80007b0 <test_println>
 8003e8e:	bf00      	nop
 8003e90:	20000930 	.word	0x20000930
 8003e94:	08002b21 	.word	0x08002b21
 8003e98:	20000b38 	.word	0x20000b38
 8003e9c:	200011cc 	.word	0x200011cc
 8003ea0:	08005b90 	.word	0x08005b90
 8003ea4:	08005c80 	.word	0x08005c80
 8003ea8:	08005cc0 	.word	0x08005cc0
 8003eac:	00000000 	.word	0x00000000

08003eb0 <queues2_execute>:
 8003eb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003eb4:	2320      	movs	r3, #32
 8003eb6:	b083      	sub	sp, #12
 8003eb8:	f383 8811 	msr	BASEPRI, r3
 8003ebc:	4d8a      	ldr	r5, [pc, #552]	; (80040e8 <queues2_execute+0x238>)
 8003ebe:	e9d5 3205 	ldrd	r3, r2, [r5, #20]
 8003ec2:	429a      	cmp	r2, r3
 8003ec4:	d041      	beq.n	8003f4a <queues2_execute+0x9a>
 8003ec6:	2100      	movs	r1, #0
 8003ec8:	2001      	movs	r0, #1
 8003eca:	f7fc fc21 	bl	8000710 <_test_assert>
 8003ece:	bbb0      	cbnz	r0, 8003f3e <queues2_execute+0x8e>
 8003ed0:	f380 8811 	msr	BASEPRI, r0
 8003ed4:	4e84      	ldr	r6, [pc, #528]	; (80040e8 <queues2_execute+0x238>)
 8003ed6:	2441      	movs	r4, #65	; 0x41
 8003ed8:	4621      	mov	r1, r4
 8003eda:	3401      	adds	r4, #1
 8003edc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003ee0:	4630      	mov	r0, r6
 8003ee2:	b2e4      	uxtb	r4, r4
 8003ee4:	f7fe fafc 	bl	80024e0 <chOQPutTimeout>
 8003ee8:	2c45      	cmp	r4, #69	; 0x45
 8003eea:	d1f5      	bne.n	8003ed8 <queues2_execute+0x28>
 8003eec:	2620      	movs	r6, #32
 8003eee:	f386 8811 	msr	BASEPRI, r6
 8003ef2:	68a9      	ldr	r1, [r5, #8]
 8003ef4:	fab1 f181 	clz	r1, r1
 8003ef8:	0949      	lsrs	r1, r1, #5
 8003efa:	2002      	movs	r0, #2
 8003efc:	f7fc fc08 	bl	8000710 <_test_assert>
 8003f00:	4607      	mov	r7, r0
 8003f02:	b9e0      	cbnz	r0, 8003f3e <queues2_execute+0x8e>
 8003f04:	f380 8811 	msr	BASEPRI, r0
 8003f08:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 80040e8 <queues2_execute+0x238>
 8003f0c:	4680      	mov	r8, r0
 8003f0e:	2404      	movs	r4, #4
 8003f10:	f386 8811 	msr	BASEPRI, r6
 8003f14:	4648      	mov	r0, r9
 8003f16:	f7fc feeb 	bl	8000cf0 <chOQGetI>
 8003f1a:	f388 8811 	msr	BASEPRI, r8
 8003f1e:	b2c0      	uxtb	r0, r0
 8003f20:	f7fc fc0e 	bl	8000740 <test_emit_token>
 8003f24:	3c01      	subs	r4, #1
 8003f26:	d1f3      	bne.n	8003f10 <queues2_execute+0x60>
 8003f28:	f386 8811 	msr	BASEPRI, r6
 8003f2c:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 8003f30:	429a      	cmp	r2, r3
 8003f32:	d029      	beq.n	8003f88 <queues2_execute+0xd8>
 8003f34:	4639      	mov	r1, r7
 8003f36:	2003      	movs	r0, #3
 8003f38:	f7fc fbea 	bl	8000710 <_test_assert>
 8003f3c:	b150      	cbz	r0, 8003f54 <queues2_execute+0xa4>
 8003f3e:	2300      	movs	r3, #0
 8003f40:	f383 8811 	msr	BASEPRI, r3
 8003f44:	b003      	add	sp, #12
 8003f46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003f4a:	68a9      	ldr	r1, [r5, #8]
 8003f4c:	3100      	adds	r1, #0
 8003f4e:	bf18      	it	ne
 8003f50:	2101      	movne	r1, #1
 8003f52:	e7b9      	b.n	8003ec8 <queues2_execute+0x18>
 8003f54:	f380 8811 	msr	BASEPRI, r0
 8003f58:	4964      	ldr	r1, [pc, #400]	; (80040ec <queues2_execute+0x23c>)
 8003f5a:	2004      	movs	r0, #4
 8003f5c:	f7fc fbb0 	bl	80006c0 <_test_assert_sequence>
 8003f60:	4604      	mov	r4, r0
 8003f62:	2800      	cmp	r0, #0
 8003f64:	d1ee      	bne.n	8003f44 <queues2_execute+0x94>
 8003f66:	2620      	movs	r6, #32
 8003f68:	f386 8811 	msr	BASEPRI, r6
 8003f6c:	485e      	ldr	r0, [pc, #376]	; (80040e8 <queues2_execute+0x238>)
 8003f6e:	f7fc febf 	bl	8000cf0 <chOQGetI>
 8003f72:	3003      	adds	r0, #3
 8003f74:	bf14      	ite	ne
 8003f76:	2100      	movne	r1, #0
 8003f78:	2101      	moveq	r1, #1
 8003f7a:	2005      	movs	r0, #5
 8003f7c:	f7fc fbc8 	bl	8000710 <_test_assert>
 8003f80:	b138      	cbz	r0, 8003f92 <queues2_execute+0xe2>
 8003f82:	f384 8811 	msr	BASEPRI, r4
 8003f86:	e7dd      	b.n	8003f44 <queues2_execute+0x94>
 8003f88:	68af      	ldr	r7, [r5, #8]
 8003f8a:	3700      	adds	r7, #0
 8003f8c:	bf18      	it	ne
 8003f8e:	2701      	movne	r7, #1
 8003f90:	e7d0      	b.n	8003f34 <queues2_execute+0x84>
 8003f92:	f380 8811 	msr	BASEPRI, r0
 8003f96:	2208      	movs	r2, #8
 8003f98:	4603      	mov	r3, r0
 8003f9a:	4955      	ldr	r1, [pc, #340]	; (80040f0 <queues2_execute+0x240>)
 8003f9c:	4852      	ldr	r0, [pc, #328]	; (80040e8 <queues2_execute+0x238>)
 8003f9e:	f7fe fa47 	bl	8002430 <chOQWriteTimeout>
 8003fa2:	f1a0 0104 	sub.w	r1, r0, #4
 8003fa6:	fab1 f181 	clz	r1, r1
 8003faa:	0949      	lsrs	r1, r1, #5
 8003fac:	2006      	movs	r0, #6
 8003fae:	f7fc fbaf 	bl	8000710 <_test_assert>
 8003fb2:	4604      	mov	r4, r0
 8003fb4:	2800      	cmp	r0, #0
 8003fb6:	d1c5      	bne.n	8003f44 <queues2_execute+0x94>
 8003fb8:	f386 8811 	msr	BASEPRI, r6
 8003fbc:	68a9      	ldr	r1, [r5, #8]
 8003fbe:	fab1 f181 	clz	r1, r1
 8003fc2:	0949      	lsrs	r1, r1, #5
 8003fc4:	2007      	movs	r0, #7
 8003fc6:	f7fc fba3 	bl	8000710 <_test_assert>
 8003fca:	4607      	mov	r7, r0
 8003fcc:	2800      	cmp	r0, #0
 8003fce:	d1d8      	bne.n	8003f82 <queues2_execute+0xd2>
 8003fd0:	f380 8811 	msr	BASEPRI, r0
 8003fd4:	4a47      	ldr	r2, [pc, #284]	; (80040f4 <queues2_execute+0x244>)
 8003fd6:	4b48      	ldr	r3, [pc, #288]	; (80040f8 <queues2_execute+0x248>)
 8003fd8:	6992      	ldr	r2, [r2, #24]
 8003fda:	4848      	ldr	r0, [pc, #288]	; (80040fc <queues2_execute+0x24c>)
 8003fdc:	6892      	ldr	r2, [r2, #8]
 8003fde:	9700      	str	r7, [sp, #0]
 8003fe0:	3201      	adds	r2, #1
 8003fe2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003fe6:	f7fd fc83 	bl	80018f0 <chThdCreateStatic>
 8003fea:	4b45      	ldr	r3, [pc, #276]	; (8004100 <queues2_execute+0x250>)
 8003fec:	6018      	str	r0, [r3, #0]
 8003fee:	f386 8811 	msr	BASEPRI, r6
 8003ff2:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 8003ff6:	68a9      	ldr	r1, [r5, #8]
 8003ff8:	1a9b      	subs	r3, r3, r2
 8003ffa:	1a59      	subs	r1, r3, r1
 8003ffc:	f1a1 0104 	sub.w	r1, r1, #4
 8004000:	fab1 f181 	clz	r1, r1
 8004004:	0949      	lsrs	r1, r1, #5
 8004006:	2008      	movs	r0, #8
 8004008:	f7fc fb82 	bl	8000710 <_test_assert>
 800400c:	b110      	cbz	r0, 8004014 <queues2_execute+0x164>
 800400e:	f387 8811 	msr	BASEPRI, r7
 8004012:	e797      	b.n	8003f44 <queues2_execute+0x94>
 8004014:	f380 8811 	msr	BASEPRI, r0
 8004018:	f7ff fcf2 	bl	8003a00 <test_wait_threads>
 800401c:	f386 8811 	msr	BASEPRI, r6
 8004020:	e9d5 1203 	ldrd	r1, r2, [r5, #12]
 8004024:	682b      	ldr	r3, [r5, #0]
 8004026:	61a9      	str	r1, [r5, #24]
 8004028:	1a52      	subs	r2, r2, r1
 800402a:	42ab      	cmp	r3, r5
 800402c:	6169      	str	r1, [r5, #20]
 800402e:	60aa      	str	r2, [r5, #8]
 8004030:	d00b      	beq.n	800404a <queues2_execute+0x19a>
 8004032:	f06f 0401 	mvn.w	r4, #1
 8004036:	681a      	ldr	r2, [r3, #0]
 8004038:	602a      	str	r2, [r5, #0]
 800403a:	6055      	str	r5, [r2, #4]
 800403c:	4618      	mov	r0, r3
 800403e:	621c      	str	r4, [r3, #32]
 8004040:	f7fc fdfe 	bl	8000c40 <chSchReadyI>
 8004044:	682b      	ldr	r3, [r5, #0]
 8004046:	42ab      	cmp	r3, r5
 8004048:	d1f5      	bne.n	8004036 <queues2_execute+0x186>
 800404a:	2400      	movs	r4, #0
 800404c:	f384 8811 	msr	BASEPRI, r4
 8004050:	2620      	movs	r6, #32
 8004052:	f386 8811 	msr	BASEPRI, r6
 8004056:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 800405a:	68a9      	ldr	r1, [r5, #8]
 800405c:	1a9b      	subs	r3, r3, r2
 800405e:	1a5f      	subs	r7, r3, r1
 8004060:	4279      	negs	r1, r7
 8004062:	4179      	adcs	r1, r7
 8004064:	2009      	movs	r0, #9
 8004066:	f7fc fb53 	bl	8000710 <_test_assert>
 800406a:	4603      	mov	r3, r0
 800406c:	2800      	cmp	r0, #0
 800406e:	d188      	bne.n	8003f82 <queues2_execute+0xd2>
 8004070:	f380 8811 	msr	BASEPRI, r0
 8004074:	2202      	movs	r2, #2
 8004076:	491e      	ldr	r1, [pc, #120]	; (80040f0 <queues2_execute+0x240>)
 8004078:	481b      	ldr	r0, [pc, #108]	; (80040e8 <queues2_execute+0x238>)
 800407a:	f7fe f9d9 	bl	8002430 <chOQWriteTimeout>
 800407e:	3802      	subs	r0, #2
 8004080:	4241      	negs	r1, r0
 8004082:	4141      	adcs	r1, r0
 8004084:	200a      	movs	r0, #10
 8004086:	f7fc fb43 	bl	8000710 <_test_assert>
 800408a:	4603      	mov	r3, r0
 800408c:	2800      	cmp	r0, #0
 800408e:	f47f af59 	bne.w	8003f44 <queues2_execute+0x94>
 8004092:	2202      	movs	r2, #2
 8004094:	4916      	ldr	r1, [pc, #88]	; (80040f0 <queues2_execute+0x240>)
 8004096:	4814      	ldr	r0, [pc, #80]	; (80040e8 <queues2_execute+0x238>)
 8004098:	f7fe f9ca 	bl	8002430 <chOQWriteTimeout>
 800409c:	1e82      	subs	r2, r0, #2
 800409e:	4251      	negs	r1, r2
 80040a0:	4151      	adcs	r1, r2
 80040a2:	200b      	movs	r0, #11
 80040a4:	f7fc fb34 	bl	8000710 <_test_assert>
 80040a8:	4604      	mov	r4, r0
 80040aa:	2800      	cmp	r0, #0
 80040ac:	f47f af4a 	bne.w	8003f44 <queues2_execute+0x94>
 80040b0:	f386 8811 	msr	BASEPRI, r6
 80040b4:	68a9      	ldr	r1, [r5, #8]
 80040b6:	fab1 f181 	clz	r1, r1
 80040ba:	0949      	lsrs	r1, r1, #5
 80040bc:	200c      	movs	r0, #12
 80040be:	f7fc fb27 	bl	8000710 <_test_assert>
 80040c2:	4601      	mov	r1, r0
 80040c4:	2800      	cmp	r0, #0
 80040c6:	f47f af5c 	bne.w	8003f82 <queues2_execute+0xd2>
 80040ca:	f380 8811 	msr	BASEPRI, r0
 80040ce:	220a      	movs	r2, #10
 80040d0:	4805      	ldr	r0, [pc, #20]	; (80040e8 <queues2_execute+0x238>)
 80040d2:	f7fe fa05 	bl	80024e0 <chOQPutTimeout>
 80040d6:	1c43      	adds	r3, r0, #1
 80040d8:	4259      	negs	r1, r3
 80040da:	4159      	adcs	r1, r3
 80040dc:	200d      	movs	r0, #13
 80040de:	b003      	add	sp, #12
 80040e0:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80040e4:	f7fc bb14 	b.w	8000710 <_test_assert>
 80040e8:	20000888 	.word	0x20000888
 80040ec:	080060e0 	.word	0x080060e0
 80040f0:	20000c80 	.word	0x20000c80
 80040f4:	20000930 	.word	0x20000930
 80040f8:	08002531 	.word	0x08002531
 80040fc:	20000b38 	.word	0x20000b38
 8004100:	200011cc 	.word	0x200011cc
	...

08004110 <queues1_execute>:
 8004110:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004112:	2620      	movs	r6, #32
 8004114:	b083      	sub	sp, #12
 8004116:	f386 8811 	msr	BASEPRI, r6
 800411a:	4c9f      	ldr	r4, [pc, #636]	; (8004398 <queues1_execute+0x288>)
 800411c:	68a1      	ldr	r1, [r4, #8]
 800411e:	fab1 f181 	clz	r1, r1
 8004122:	0949      	lsrs	r1, r1, #5
 8004124:	2001      	movs	r0, #1
 8004126:	f7fc faf3 	bl	8000710 <_test_assert>
 800412a:	bb10      	cbnz	r0, 8004172 <queues1_execute+0x62>
 800412c:	4605      	mov	r5, r0
 800412e:	f380 8811 	msr	BASEPRI, r0
 8004132:	f386 8811 	msr	BASEPRI, r6
 8004136:	2141      	movs	r1, #65	; 0x41
 8004138:	4620      	mov	r0, r4
 800413a:	f7fc fdb1 	bl	8000ca0 <chIQPutI>
 800413e:	4620      	mov	r0, r4
 8004140:	2142      	movs	r1, #66	; 0x42
 8004142:	f7fc fdad 	bl	8000ca0 <chIQPutI>
 8004146:	4620      	mov	r0, r4
 8004148:	2143      	movs	r1, #67	; 0x43
 800414a:	f7fc fda9 	bl	8000ca0 <chIQPutI>
 800414e:	4620      	mov	r0, r4
 8004150:	2144      	movs	r1, #68	; 0x44
 8004152:	f7fc fda5 	bl	8000ca0 <chIQPutI>
 8004156:	f385 8811 	msr	BASEPRI, r5
 800415a:	f386 8811 	msr	BASEPRI, r6
 800415e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8004162:	429a      	cmp	r2, r3
 8004164:	d038      	beq.n	80041d8 <queues1_execute+0xc8>
 8004166:	4629      	mov	r1, r5
 8004168:	2002      	movs	r0, #2
 800416a:	f7fc fad1 	bl	8000710 <_test_assert>
 800416e:	4605      	mov	r5, r0
 8004170:	b120      	cbz	r0, 800417c <queues1_execute+0x6c>
 8004172:	2300      	movs	r3, #0
 8004174:	f383 8811 	msr	BASEPRI, r3
 8004178:	b003      	add	sp, #12
 800417a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800417c:	f380 8811 	msr	BASEPRI, r0
 8004180:	2320      	movs	r3, #32
 8004182:	f383 8811 	msr	BASEPRI, r3
 8004186:	4884      	ldr	r0, [pc, #528]	; (8004398 <queues1_execute+0x288>)
 8004188:	4629      	mov	r1, r5
 800418a:	f7fc fd89 	bl	8000ca0 <chIQPutI>
 800418e:	3004      	adds	r0, #4
 8004190:	bf14      	ite	ne
 8004192:	2100      	movne	r1, #0
 8004194:	2101      	moveq	r1, #1
 8004196:	2003      	movs	r0, #3
 8004198:	f7fc faba 	bl	8000710 <_test_assert>
 800419c:	b9c0      	cbnz	r0, 80041d0 <queues1_execute+0xc0>
 800419e:	f380 8811 	msr	BASEPRI, r0
 80041a2:	4e7d      	ldr	r6, [pc, #500]	; (8004398 <queues1_execute+0x288>)
 80041a4:	2504      	movs	r5, #4
 80041a6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80041aa:	4630      	mov	r0, r6
 80041ac:	f7fe fa28 	bl	8002600 <chIQGetTimeout>
 80041b0:	b2c0      	uxtb	r0, r0
 80041b2:	f7fc fac5 	bl	8000740 <test_emit_token>
 80041b6:	3d01      	subs	r5, #1
 80041b8:	d1f5      	bne.n	80041a6 <queues1_execute+0x96>
 80041ba:	2620      	movs	r6, #32
 80041bc:	f386 8811 	msr	BASEPRI, r6
 80041c0:	68a1      	ldr	r1, [r4, #8]
 80041c2:	fab1 f181 	clz	r1, r1
 80041c6:	0949      	lsrs	r1, r1, #5
 80041c8:	2004      	movs	r0, #4
 80041ca:	f7fc faa1 	bl	8000710 <_test_assert>
 80041ce:	b178      	cbz	r0, 80041f0 <queues1_execute+0xe0>
 80041d0:	f385 8811 	msr	BASEPRI, r5
 80041d4:	b003      	add	sp, #12
 80041d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80041d8:	68a5      	ldr	r5, [r4, #8]
 80041da:	3500      	adds	r5, #0
 80041dc:	bf18      	it	ne
 80041de:	2501      	movne	r5, #1
 80041e0:	4629      	mov	r1, r5
 80041e2:	2002      	movs	r0, #2
 80041e4:	f7fc fa94 	bl	8000710 <_test_assert>
 80041e8:	4605      	mov	r5, r0
 80041ea:	2800      	cmp	r0, #0
 80041ec:	d1c1      	bne.n	8004172 <queues1_execute+0x62>
 80041ee:	e7c5      	b.n	800417c <queues1_execute+0x6c>
 80041f0:	f385 8811 	msr	BASEPRI, r5
 80041f4:	4969      	ldr	r1, [pc, #420]	; (800439c <queues1_execute+0x28c>)
 80041f6:	2005      	movs	r0, #5
 80041f8:	f7fc fa62 	bl	80006c0 <_test_assert_sequence>
 80041fc:	2800      	cmp	r0, #0
 80041fe:	d1bb      	bne.n	8004178 <queues1_execute+0x68>
 8004200:	f386 8811 	msr	BASEPRI, r6
 8004204:	2141      	movs	r1, #65	; 0x41
 8004206:	4864      	ldr	r0, [pc, #400]	; (8004398 <queues1_execute+0x288>)
 8004208:	f7fc fd4a 	bl	8000ca0 <chIQPutI>
 800420c:	2142      	movs	r1, #66	; 0x42
 800420e:	4862      	ldr	r0, [pc, #392]	; (8004398 <queues1_execute+0x288>)
 8004210:	f7fc fd46 	bl	8000ca0 <chIQPutI>
 8004214:	2143      	movs	r1, #67	; 0x43
 8004216:	4860      	ldr	r0, [pc, #384]	; (8004398 <queues1_execute+0x288>)
 8004218:	f7fc fd42 	bl	8000ca0 <chIQPutI>
 800421c:	2144      	movs	r1, #68	; 0x44
 800421e:	485e      	ldr	r0, [pc, #376]	; (8004398 <queues1_execute+0x288>)
 8004220:	f7fc fd3e 	bl	8000ca0 <chIQPutI>
 8004224:	f385 8811 	msr	BASEPRI, r5
 8004228:	495d      	ldr	r1, [pc, #372]	; (80043a0 <queues1_execute+0x290>)
 800422a:	485b      	ldr	r0, [pc, #364]	; (8004398 <queues1_execute+0x288>)
 800422c:	2208      	movs	r2, #8
 800422e:	462b      	mov	r3, r5
 8004230:	f7fe f996 	bl	8002560 <chIQReadTimeout>
 8004234:	f1a0 0104 	sub.w	r1, r0, #4
 8004238:	fab1 f181 	clz	r1, r1
 800423c:	0949      	lsrs	r1, r1, #5
 800423e:	2006      	movs	r0, #6
 8004240:	f7fc fa66 	bl	8000710 <_test_assert>
 8004244:	2800      	cmp	r0, #0
 8004246:	d197      	bne.n	8004178 <queues1_execute+0x68>
 8004248:	f386 8811 	msr	BASEPRI, r6
 800424c:	68a1      	ldr	r1, [r4, #8]
 800424e:	fab1 f181 	clz	r1, r1
 8004252:	0949      	lsrs	r1, r1, #5
 8004254:	2007      	movs	r0, #7
 8004256:	f7fc fa5b 	bl	8000710 <_test_assert>
 800425a:	2800      	cmp	r0, #0
 800425c:	d1b8      	bne.n	80041d0 <queues1_execute+0xc0>
 800425e:	f385 8811 	msr	BASEPRI, r5
 8004262:	f386 8811 	msr	BASEPRI, r6
 8004266:	2141      	movs	r1, #65	; 0x41
 8004268:	484b      	ldr	r0, [pc, #300]	; (8004398 <queues1_execute+0x288>)
 800426a:	f7fc fd19 	bl	8000ca0 <chIQPutI>
 800426e:	2142      	movs	r1, #66	; 0x42
 8004270:	4849      	ldr	r0, [pc, #292]	; (8004398 <queues1_execute+0x288>)
 8004272:	f7fc fd15 	bl	8000ca0 <chIQPutI>
 8004276:	2143      	movs	r1, #67	; 0x43
 8004278:	4847      	ldr	r0, [pc, #284]	; (8004398 <queues1_execute+0x288>)
 800427a:	f7fc fd11 	bl	8000ca0 <chIQPutI>
 800427e:	2144      	movs	r1, #68	; 0x44
 8004280:	4845      	ldr	r0, [pc, #276]	; (8004398 <queues1_execute+0x288>)
 8004282:	f7fc fd0d 	bl	8000ca0 <chIQPutI>
 8004286:	f385 8811 	msr	BASEPRI, r5
 800428a:	4945      	ldr	r1, [pc, #276]	; (80043a0 <queues1_execute+0x290>)
 800428c:	4842      	ldr	r0, [pc, #264]	; (8004398 <queues1_execute+0x288>)
 800428e:	2202      	movs	r2, #2
 8004290:	462b      	mov	r3, r5
 8004292:	f7fe f965 	bl	8002560 <chIQReadTimeout>
 8004296:	f1a0 0102 	sub.w	r1, r0, #2
 800429a:	fab1 f181 	clz	r1, r1
 800429e:	0949      	lsrs	r1, r1, #5
 80042a0:	2008      	movs	r0, #8
 80042a2:	f7fc fa35 	bl	8000710 <_test_assert>
 80042a6:	2800      	cmp	r0, #0
 80042a8:	f47f af66 	bne.w	8004178 <queues1_execute+0x68>
 80042ac:	493c      	ldr	r1, [pc, #240]	; (80043a0 <queues1_execute+0x290>)
 80042ae:	483a      	ldr	r0, [pc, #232]	; (8004398 <queues1_execute+0x288>)
 80042b0:	462b      	mov	r3, r5
 80042b2:	2202      	movs	r2, #2
 80042b4:	f7fe f954 	bl	8002560 <chIQReadTimeout>
 80042b8:	f1a0 0102 	sub.w	r1, r0, #2
 80042bc:	fab1 f181 	clz	r1, r1
 80042c0:	0949      	lsrs	r1, r1, #5
 80042c2:	2009      	movs	r0, #9
 80042c4:	f7fc fa24 	bl	8000710 <_test_assert>
 80042c8:	2800      	cmp	r0, #0
 80042ca:	f47f af55 	bne.w	8004178 <queues1_execute+0x68>
 80042ce:	f386 8811 	msr	BASEPRI, r6
 80042d2:	68a1      	ldr	r1, [r4, #8]
 80042d4:	fab1 f181 	clz	r1, r1
 80042d8:	0949      	lsrs	r1, r1, #5
 80042da:	200a      	movs	r0, #10
 80042dc:	f7fc fa18 	bl	8000710 <_test_assert>
 80042e0:	2800      	cmp	r0, #0
 80042e2:	f47f af75 	bne.w	80041d0 <queues1_execute+0xc0>
 80042e6:	f385 8811 	msr	BASEPRI, r5
 80042ea:	f386 8811 	msr	BASEPRI, r6
 80042ee:	482a      	ldr	r0, [pc, #168]	; (8004398 <queues1_execute+0x288>)
 80042f0:	4629      	mov	r1, r5
 80042f2:	f7fc fcd5 	bl	8000ca0 <chIQPutI>
 80042f6:	6823      	ldr	r3, [r4, #0]
 80042f8:	68e2      	ldr	r2, [r4, #12]
 80042fa:	60a5      	str	r5, [r4, #8]
 80042fc:	42a3      	cmp	r3, r4
 80042fe:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8004302:	d00b      	beq.n	800431c <queues1_execute+0x20c>
 8004304:	f06f 0501 	mvn.w	r5, #1
 8004308:	681a      	ldr	r2, [r3, #0]
 800430a:	6022      	str	r2, [r4, #0]
 800430c:	6054      	str	r4, [r2, #4]
 800430e:	4618      	mov	r0, r3
 8004310:	621d      	str	r5, [r3, #32]
 8004312:	f7fc fc95 	bl	8000c40 <chSchReadyI>
 8004316:	6823      	ldr	r3, [r4, #0]
 8004318:	42a3      	cmp	r3, r4
 800431a:	d1f5      	bne.n	8004308 <queues1_execute+0x1f8>
 800431c:	2700      	movs	r7, #0
 800431e:	f387 8811 	msr	BASEPRI, r7
 8004322:	2620      	movs	r6, #32
 8004324:	f386 8811 	msr	BASEPRI, r6
 8004328:	68a1      	ldr	r1, [r4, #8]
 800432a:	fab1 f181 	clz	r1, r1
 800432e:	0949      	lsrs	r1, r1, #5
 8004330:	200b      	movs	r0, #11
 8004332:	f7fc f9ed 	bl	8000710 <_test_assert>
 8004336:	4605      	mov	r5, r0
 8004338:	b110      	cbz	r0, 8004340 <queues1_execute+0x230>
 800433a:	f387 8811 	msr	BASEPRI, r7
 800433e:	e71b      	b.n	8004178 <queues1_execute+0x68>
 8004340:	f380 8811 	msr	BASEPRI, r0
 8004344:	4a17      	ldr	r2, [pc, #92]	; (80043a4 <queues1_execute+0x294>)
 8004346:	4b18      	ldr	r3, [pc, #96]	; (80043a8 <queues1_execute+0x298>)
 8004348:	6992      	ldr	r2, [r2, #24]
 800434a:	4818      	ldr	r0, [pc, #96]	; (80043ac <queues1_execute+0x29c>)
 800434c:	6892      	ldr	r2, [r2, #8]
 800434e:	9500      	str	r5, [sp, #0]
 8004350:	3201      	adds	r2, #1
 8004352:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004356:	f7fd facb 	bl	80018f0 <chThdCreateStatic>
 800435a:	4b15      	ldr	r3, [pc, #84]	; (80043b0 <queues1_execute+0x2a0>)
 800435c:	6018      	str	r0, [r3, #0]
 800435e:	f386 8811 	msr	BASEPRI, r6
 8004362:	68a1      	ldr	r1, [r4, #8]
 8004364:	fab1 f181 	clz	r1, r1
 8004368:	0949      	lsrs	r1, r1, #5
 800436a:	200c      	movs	r0, #12
 800436c:	f7fc f9d0 	bl	8000710 <_test_assert>
 8004370:	2800      	cmp	r0, #0
 8004372:	f47f af2d 	bne.w	80041d0 <queues1_execute+0xc0>
 8004376:	f380 8811 	msr	BASEPRI, r0
 800437a:	f7ff fb41 	bl	8003a00 <test_wait_threads>
 800437e:	210a      	movs	r1, #10
 8004380:	4805      	ldr	r0, [pc, #20]	; (8004398 <queues1_execute+0x288>)
 8004382:	f7fe f93d 	bl	8002600 <chIQGetTimeout>
 8004386:	1c43      	adds	r3, r0, #1
 8004388:	4259      	negs	r1, r3
 800438a:	4159      	adcs	r1, r3
 800438c:	200d      	movs	r0, #13
 800438e:	b003      	add	sp, #12
 8004390:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004394:	f7fc b9bc 	b.w	8000710 <_test_assert>
 8004398:	20000810 	.word	0x20000810
 800439c:	080060e0 	.word	0x080060e0
 80043a0:	20000c80 	.word	0x20000c80
 80043a4:	20000930 	.word	0x20000930
 80043a8:	08002651 	.word	0x08002651
 80043ac:	20000b38 	.word	0x20000b38
 80043b0:	200011cc 	.word	0x200011cc
	...

080043c0 <dyn2_execute>:
 80043c0:	4a31      	ldr	r2, [pc, #196]	; (8004488 <dyn2_execute+0xc8>)
 80043c2:	6991      	ldr	r1, [r2, #24]
 80043c4:	4a31      	ldr	r2, [pc, #196]	; (800448c <dyn2_execute+0xcc>)
 80043c6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043c8:	4b31      	ldr	r3, [pc, #196]	; (8004490 <dyn2_execute+0xd0>)
 80043ca:	688d      	ldr	r5, [r1, #8]
 80043cc:	4931      	ldr	r1, [pc, #196]	; (8004494 <dyn2_execute+0xd4>)
 80043ce:	f103 070c 	add.w	r7, r3, #12
 80043d2:	2620      	movs	r6, #32
 80043d4:	2400      	movs	r4, #0
 80043d6:	f386 8811 	msr	BASEPRI, r6
 80043da:	6808      	ldr	r0, [r1, #0]
 80043dc:	6010      	str	r0, [r2, #0]
 80043de:	600a      	str	r2, [r1, #0]
 80043e0:	f384 8811 	msr	BASEPRI, r4
 80043e4:	429f      	cmp	r7, r3
 80043e6:	d002      	beq.n	80043ee <dyn2_execute+0x2e>
 80043e8:	f853 2b04 	ldr.w	r2, [r3], #4
 80043ec:	e7f3      	b.n	80043d6 <dyn2_execute+0x16>
 80043ee:	492a      	ldr	r1, [pc, #168]	; (8004498 <dyn2_execute+0xd8>)
 80043f0:	4c2a      	ldr	r4, [pc, #168]	; (800449c <dyn2_execute+0xdc>)
 80043f2:	1e68      	subs	r0, r5, #1
 80043f4:	f7fd f9cc 	bl	8001790 <chThdCreateFromMemoryPool.constprop.51>
 80043f8:	4929      	ldr	r1, [pc, #164]	; (80044a0 <dyn2_execute+0xe0>)
 80043fa:	6020      	str	r0, [r4, #0]
 80043fc:	1ea8      	subs	r0, r5, #2
 80043fe:	f7fd f9c7 	bl	8001790 <chThdCreateFromMemoryPool.constprop.51>
 8004402:	4928      	ldr	r1, [pc, #160]	; (80044a4 <dyn2_execute+0xe4>)
 8004404:	6060      	str	r0, [r4, #4]
 8004406:	1ee8      	subs	r0, r5, #3
 8004408:	f7fd f9c2 	bl	8001790 <chThdCreateFromMemoryPool.constprop.51>
 800440c:	4926      	ldr	r1, [pc, #152]	; (80044a8 <dyn2_execute+0xe8>)
 800440e:	60a0      	str	r0, [r4, #8]
 8004410:	1f28      	subs	r0, r5, #4
 8004412:	f7fd f9bd 	bl	8001790 <chThdCreateFromMemoryPool.constprop.51>
 8004416:	4925      	ldr	r1, [pc, #148]	; (80044ac <dyn2_execute+0xec>)
 8004418:	60e0      	str	r0, [r4, #12]
 800441a:	1f68      	subs	r0, r5, #5
 800441c:	f7fd f9b8 	bl	8001790 <chThdCreateFromMemoryPool.constprop.51>
 8004420:	6821      	ldr	r1, [r4, #0]
 8004422:	6120      	str	r0, [r4, #16]
 8004424:	b141      	cbz	r1, 8004438 <dyn2_execute+0x78>
 8004426:	6861      	ldr	r1, [r4, #4]
 8004428:	b131      	cbz	r1, 8004438 <dyn2_execute+0x78>
 800442a:	68a1      	ldr	r1, [r4, #8]
 800442c:	b121      	cbz	r1, 8004438 <dyn2_execute+0x78>
 800442e:	68e1      	ldr	r1, [r4, #12]
 8004430:	b111      	cbz	r1, 8004438 <dyn2_execute+0x78>
 8004432:	fab0 f180 	clz	r1, r0
 8004436:	0949      	lsrs	r1, r1, #5
 8004438:	2001      	movs	r0, #1
 800443a:	f7fc f969 	bl	8000710 <_test_assert>
 800443e:	b100      	cbz	r0, 8004442 <dyn2_execute+0x82>
 8004440:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004442:	f7ff fadd 	bl	8003a00 <test_wait_threads>
 8004446:	491a      	ldr	r1, [pc, #104]	; (80044b0 <dyn2_execute+0xf0>)
 8004448:	2002      	movs	r0, #2
 800444a:	f7fc f939 	bl	80006c0 <_test_assert_sequence>
 800444e:	2800      	cmp	r0, #0
 8004450:	d1f6      	bne.n	8004440 <dyn2_execute+0x80>
 8004452:	4d10      	ldr	r5, [pc, #64]	; (8004494 <dyn2_execute+0xd4>)
 8004454:	2404      	movs	r4, #4
 8004456:	4628      	mov	r0, r5
 8004458:	f7fc fa7a 	bl	8000950 <chPoolAlloc>
 800445c:	1c01      	adds	r1, r0, #0
 800445e:	bf18      	it	ne
 8004460:	2101      	movne	r1, #1
 8004462:	2003      	movs	r0, #3
 8004464:	f7fc f954 	bl	8000710 <_test_assert>
 8004468:	2800      	cmp	r0, #0
 800446a:	d1e9      	bne.n	8004440 <dyn2_execute+0x80>
 800446c:	3c01      	subs	r4, #1
 800446e:	d1f2      	bne.n	8004456 <dyn2_execute+0x96>
 8004470:	4808      	ldr	r0, [pc, #32]	; (8004494 <dyn2_execute+0xd4>)
 8004472:	f7fc fa6d 	bl	8000950 <chPoolAlloc>
 8004476:	fab0 f180 	clz	r1, r0
 800447a:	0949      	lsrs	r1, r1, #5
 800447c:	2004      	movs	r0, #4
 800447e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004482:	f7fc b945 	b.w	8000710 <_test_assert>
 8004486:	bf00      	nop
 8004488:	20000930 	.word	0x20000930
 800448c:	20000b38 	.word	0x20000b38
 8004490:	08006884 	.word	0x08006884
 8004494:	20000b08 	.word	0x20000b08
 8004498:	08005d20 	.word	0x08005d20
 800449c:	200011cc 	.word	0x200011cc
 80044a0:	08005d10 	.word	0x08005d10
 80044a4:	08005d14 	.word	0x08005d14
 80044a8:	08005d18 	.word	0x08005d18
 80044ac:	08005f64 	.word	0x08005f64
 80044b0:	080060e0 	.word	0x080060e0
	...

080044c0 <dyn1_execute>:
 80044c0:	b570      	push	{r4, r5, r6, lr}
 80044c2:	4b2c      	ldr	r3, [pc, #176]	; (8004574 <dyn1_execute+0xb4>)
 80044c4:	482c      	ldr	r0, [pc, #176]	; (8004578 <dyn1_execute+0xb8>)
 80044c6:	699b      	ldr	r3, [r3, #24]
 80044c8:	4c2c      	ldr	r4, [pc, #176]	; (800457c <dyn1_execute+0xbc>)
 80044ca:	689d      	ldr	r5, [r3, #8]
 80044cc:	b082      	sub	sp, #8
 80044ce:	4669      	mov	r1, sp
 80044d0:	f7fe fdbe 	bl	8003050 <chHeapStatus>
 80044d4:	492a      	ldr	r1, [pc, #168]	; (8004580 <dyn1_execute+0xc0>)
 80044d6:	1e68      	subs	r0, r5, #1
 80044d8:	f7fe fee2 	bl	80032a0 <chThdCreateFromHeap.constprop.52>
 80044dc:	4929      	ldr	r1, [pc, #164]	; (8004584 <dyn1_execute+0xc4>)
 80044de:	6020      	str	r0, [r4, #0]
 80044e0:	1ea8      	subs	r0, r5, #2
 80044e2:	f7fe fedd 	bl	80032a0 <chThdCreateFromHeap.constprop.52>
 80044e6:	a901      	add	r1, sp, #4
 80044e8:	6060      	str	r0, [r4, #4]
 80044ea:	4823      	ldr	r0, [pc, #140]	; (8004578 <dyn1_execute+0xb8>)
 80044ec:	f7fe fdb0 	bl	8003050 <chHeapStatus>
 80044f0:	9901      	ldr	r1, [sp, #4]
 80044f2:	4821      	ldr	r0, [pc, #132]	; (8004578 <dyn1_execute+0xb8>)
 80044f4:	f7fe fe8c 	bl	8003210 <chHeapAlloc>
 80044f8:	4923      	ldr	r1, [pc, #140]	; (8004588 <dyn1_execute+0xc8>)
 80044fa:	4606      	mov	r6, r0
 80044fc:	1ee8      	subs	r0, r5, #3
 80044fe:	f7fe fecf 	bl	80032a0 <chThdCreateFromHeap.constprop.52>
 8004502:	60a0      	str	r0, [r4, #8]
 8004504:	4630      	mov	r0, r6
 8004506:	f7fe fdcb 	bl	80030a0 <chHeapFree>
 800450a:	6821      	ldr	r1, [r4, #0]
 800450c:	b121      	cbz	r1, 8004518 <dyn1_execute+0x58>
 800450e:	6861      	ldr	r1, [r4, #4]
 8004510:	b111      	cbz	r1, 8004518 <dyn1_execute+0x58>
 8004512:	68a1      	ldr	r1, [r4, #8]
 8004514:	b331      	cbz	r1, 8004564 <dyn1_execute+0xa4>
 8004516:	2100      	movs	r1, #0
 8004518:	2001      	movs	r0, #1
 800451a:	f7fc f8f9 	bl	8000710 <_test_assert>
 800451e:	b108      	cbz	r0, 8004524 <dyn1_execute+0x64>
 8004520:	b002      	add	sp, #8
 8004522:	bd70      	pop	{r4, r5, r6, pc}
 8004524:	f7ff fa6c 	bl	8003a00 <test_wait_threads>
 8004528:	4918      	ldr	r1, [pc, #96]	; (800458c <dyn1_execute+0xcc>)
 800452a:	2002      	movs	r0, #2
 800452c:	f7fc f8c8 	bl	80006c0 <_test_assert_sequence>
 8004530:	2800      	cmp	r0, #0
 8004532:	d1f5      	bne.n	8004520 <dyn1_execute+0x60>
 8004534:	a901      	add	r1, sp, #4
 8004536:	4810      	ldr	r0, [pc, #64]	; (8004578 <dyn1_execute+0xb8>)
 8004538:	f7fe fd8a 	bl	8003050 <chHeapStatus>
 800453c:	f1a0 0101 	sub.w	r1, r0, #1
 8004540:	fab1 f181 	clz	r1, r1
 8004544:	0949      	lsrs	r1, r1, #5
 8004546:	2003      	movs	r0, #3
 8004548:	f7fc f8e2 	bl	8000710 <_test_assert>
 800454c:	2800      	cmp	r0, #0
 800454e:	d1e7      	bne.n	8004520 <dyn1_execute+0x60>
 8004550:	e9dd 3100 	ldrd	r3, r1, [sp]
 8004554:	1ac9      	subs	r1, r1, r3
 8004556:	fab1 f181 	clz	r1, r1
 800455a:	0949      	lsrs	r1, r1, #5
 800455c:	2004      	movs	r0, #4
 800455e:	f7fc f8d7 	bl	8000710 <_test_assert>
 8004562:	e7dd      	b.n	8004520 <dyn1_execute+0x60>
 8004564:	68e3      	ldr	r3, [r4, #12]
 8004566:	2b00      	cmp	r3, #0
 8004568:	d1d6      	bne.n	8004518 <dyn1_execute+0x58>
 800456a:	6921      	ldr	r1, [r4, #16]
 800456c:	fab1 f181 	clz	r1, r1
 8004570:	0949      	lsrs	r1, r1, #5
 8004572:	e7d1      	b.n	8004518 <dyn1_execute+0x58>
 8004574:	20000930 	.word	0x20000930
 8004578:	20000ab0 	.word	0x20000ab0
 800457c:	200011cc 	.word	0x200011cc
 8004580:	08005d20 	.word	0x08005d20
 8004584:	08005d10 	.word	0x08005d10
 8004588:	08005d14 	.word	0x08005d14
 800458c:	08005d00 	.word	0x08005d00

08004590 <evt2_execute>:
 8004590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004594:	2620      	movs	r6, #32
 8004596:	b08f      	sub	sp, #60	; 0x3c
 8004598:	f386 8811 	msr	BASEPRI, r6
 800459c:	4cae      	ldr	r4, [pc, #696]	; (8004858 <evt2_execute+0x2c8>)
 800459e:	69a2      	ldr	r2, [r4, #24]
 80045a0:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80045a2:	f043 0307 	orr.w	r3, r3, #7
 80045a6:	6353      	str	r3, [r2, #52]	; 0x34
 80045a8:	2300      	movs	r3, #0
 80045aa:	f383 8811 	msr	BASEPRI, r3
 80045ae:	f7fd fa6f 	bl	8001a90 <chEvtWaitOne.constprop.31>
 80045b2:	f1a0 0101 	sub.w	r1, r0, #1
 80045b6:	fab1 f181 	clz	r1, r1
 80045ba:	0949      	lsrs	r1, r1, #5
 80045bc:	2001      	movs	r0, #1
 80045be:	f7fc f8a7 	bl	8000710 <_test_assert>
 80045c2:	b110      	cbz	r0, 80045ca <evt2_execute+0x3a>
 80045c4:	b00f      	add	sp, #60	; 0x3c
 80045c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80045ca:	f7fd fa61 	bl	8001a90 <chEvtWaitOne.constprop.31>
 80045ce:	f1a0 0102 	sub.w	r1, r0, #2
 80045d2:	fab1 f181 	clz	r1, r1
 80045d6:	0949      	lsrs	r1, r1, #5
 80045d8:	2002      	movs	r0, #2
 80045da:	f7fc f899 	bl	8000710 <_test_assert>
 80045de:	2800      	cmp	r0, #0
 80045e0:	d1f0      	bne.n	80045c4 <evt2_execute+0x34>
 80045e2:	f7fd fa55 	bl	8001a90 <chEvtWaitOne.constprop.31>
 80045e6:	f1a0 0104 	sub.w	r1, r0, #4
 80045ea:	fab1 f181 	clz	r1, r1
 80045ee:	0949      	lsrs	r1, r1, #5
 80045f0:	2003      	movs	r0, #3
 80045f2:	f7fc f88d 	bl	8000710 <_test_assert>
 80045f6:	2800      	cmp	r0, #0
 80045f8:	d1e4      	bne.n	80045c4 <evt2_execute+0x34>
 80045fa:	f7fb fe21 	bl	8000240 <chEvtGetAndClearEvents.constprop.35>
 80045fe:	fab0 f180 	clz	r1, r0
 8004602:	0949      	lsrs	r1, r1, #5
 8004604:	2004      	movs	r0, #4
 8004606:	f7fc f883 	bl	8000710 <_test_assert>
 800460a:	4605      	mov	r5, r0
 800460c:	2800      	cmp	r0, #0
 800460e:	d1d9      	bne.n	80045c4 <evt2_execute+0x34>
 8004610:	f7fe f916 	bl	8002840 <test_wait_tick>
 8004614:	f386 8811 	msr	BASEPRI, r6
 8004618:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 800461c:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
 8004620:	b2bf      	uxth	r7, r7
 8004622:	f385 8811 	msr	BASEPRI, r5
 8004626:	69a1      	ldr	r1, [r4, #24]
 8004628:	4b8c      	ldr	r3, [pc, #560]	; (800485c <evt2_execute+0x2cc>)
 800462a:	688a      	ldr	r2, [r1, #8]
 800462c:	488c      	ldr	r0, [pc, #560]	; (8004860 <evt2_execute+0x2d0>)
 800462e:	9100      	str	r1, [sp, #0]
 8004630:	3a01      	subs	r2, #1
 8004632:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004636:	f7fd f95b 	bl	80018f0 <chThdCreateStatic>
 800463a:	4d8a      	ldr	r5, [pc, #552]	; (8004864 <evt2_execute+0x2d4>)
 800463c:	6028      	str	r0, [r5, #0]
 800463e:	f7fd fa27 	bl	8001a90 <chEvtWaitOne.constprop.31>
 8004642:	f107 0237 	add.w	r2, r7, #55	; 0x37
 8004646:	f107 0132 	add.w	r1, r7, #50	; 0x32
 800464a:	4681      	mov	r9, r0
 800464c:	b292      	uxth	r2, r2
 800464e:	b289      	uxth	r1, r1
 8004650:	2005      	movs	r0, #5
 8004652:	f7fc f815 	bl	8000680 <_test_assert_time_window>
 8004656:	2800      	cmp	r0, #0
 8004658:	d1b4      	bne.n	80045c4 <evt2_execute+0x34>
 800465a:	f1a9 0101 	sub.w	r1, r9, #1
 800465e:	fab1 f181 	clz	r1, r1
 8004662:	0949      	lsrs	r1, r1, #5
 8004664:	2006      	movs	r0, #6
 8004666:	f7fc f853 	bl	8000710 <_test_assert>
 800466a:	2800      	cmp	r0, #0
 800466c:	d1aa      	bne.n	80045c4 <evt2_execute+0x34>
 800466e:	f7fb fde7 	bl	8000240 <chEvtGetAndClearEvents.constprop.35>
 8004672:	fab0 f180 	clz	r1, r0
 8004676:	0949      	lsrs	r1, r1, #5
 8004678:	2007      	movs	r0, #7
 800467a:	f7fc f849 	bl	8000710 <_test_assert>
 800467e:	4607      	mov	r7, r0
 8004680:	2800      	cmp	r0, #0
 8004682:	d19f      	bne.n	80045c4 <evt2_execute+0x34>
 8004684:	f7ff f9bc 	bl	8003a00 <test_wait_threads>
 8004688:	f386 8811 	msr	BASEPRI, r6
 800468c:	69a2      	ldr	r2, [r4, #24]
 800468e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004690:	f043 0305 	orr.w	r3, r3, #5
 8004694:	6353      	str	r3, [r2, #52]	; 0x34
 8004696:	f387 8811 	msr	BASEPRI, r7
 800469a:	f7fd fa19 	bl	8001ad0 <chEvtWaitAny.constprop.30>
 800469e:	1f47      	subs	r7, r0, #5
 80046a0:	4279      	negs	r1, r7
 80046a2:	4179      	adcs	r1, r7
 80046a4:	2008      	movs	r0, #8
 80046a6:	f7fc f833 	bl	8000710 <_test_assert>
 80046aa:	2800      	cmp	r0, #0
 80046ac:	d18a      	bne.n	80045c4 <evt2_execute+0x34>
 80046ae:	f7fb fdc7 	bl	8000240 <chEvtGetAndClearEvents.constprop.35>
 80046b2:	fab0 f180 	clz	r1, r0
 80046b6:	0949      	lsrs	r1, r1, #5
 80046b8:	2009      	movs	r0, #9
 80046ba:	f7fc f829 	bl	8000710 <_test_assert>
 80046be:	4607      	mov	r7, r0
 80046c0:	2800      	cmp	r0, #0
 80046c2:	f47f af7f 	bne.w	80045c4 <evt2_execute+0x34>
 80046c6:	f7fe f8bb 	bl	8002840 <test_wait_tick>
 80046ca:	f386 8811 	msr	BASEPRI, r6
 80046ce:	f8d8 6024 	ldr.w	r6, [r8, #36]	; 0x24
 80046d2:	b2b6      	uxth	r6, r6
 80046d4:	f387 8811 	msr	BASEPRI, r7
 80046d8:	69a1      	ldr	r1, [r4, #24]
 80046da:	4b60      	ldr	r3, [pc, #384]	; (800485c <evt2_execute+0x2cc>)
 80046dc:	688a      	ldr	r2, [r1, #8]
 80046de:	4860      	ldr	r0, [pc, #384]	; (8004860 <evt2_execute+0x2d0>)
 80046e0:	9100      	str	r1, [sp, #0]
 80046e2:	3a01      	subs	r2, #1
 80046e4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80046e8:	f7fd f902 	bl	80018f0 <chThdCreateStatic>
 80046ec:	6028      	str	r0, [r5, #0]
 80046ee:	f7fd f9ef 	bl	8001ad0 <chEvtWaitAny.constprop.30>
 80046f2:	f106 0237 	add.w	r2, r6, #55	; 0x37
 80046f6:	f106 0132 	add.w	r1, r6, #50	; 0x32
 80046fa:	4607      	mov	r7, r0
 80046fc:	b292      	uxth	r2, r2
 80046fe:	b289      	uxth	r1, r1
 8004700:	200a      	movs	r0, #10
 8004702:	f7fb ffbd 	bl	8000680 <_test_assert_time_window>
 8004706:	2800      	cmp	r0, #0
 8004708:	f47f af5c 	bne.w	80045c4 <evt2_execute+0x34>
 800470c:	1e78      	subs	r0, r7, #1
 800470e:	4241      	negs	r1, r0
 8004710:	4141      	adcs	r1, r0
 8004712:	200b      	movs	r0, #11
 8004714:	f7fb fffc 	bl	8000710 <_test_assert>
 8004718:	2800      	cmp	r0, #0
 800471a:	f47f af53 	bne.w	80045c4 <evt2_execute+0x34>
 800471e:	f7fb fd8f 	bl	8000240 <chEvtGetAndClearEvents.constprop.35>
 8004722:	fab0 f180 	clz	r1, r0
 8004726:	0949      	lsrs	r1, r1, #5
 8004728:	200c      	movs	r0, #12
 800472a:	f7fb fff1 	bl	8000710 <_test_assert>
 800472e:	4680      	mov	r8, r0
 8004730:	2800      	cmp	r0, #0
 8004732:	f47f af47 	bne.w	80045c4 <evt2_execute+0x34>
 8004736:	f7ff f963 	bl	8003a00 <test_wait_threads>
 800473a:	4f4b      	ldr	r7, [pc, #300]	; (8004868 <evt2_execute+0x2d8>)
 800473c:	4a4b      	ldr	r2, [pc, #300]	; (800486c <evt2_execute+0x2dc>)
 800473e:	603f      	str	r7, [r7, #0]
 8004740:	f04f 0b20 	mov.w	fp, #32
 8004744:	4613      	mov	r3, r2
 8004746:	6012      	str	r2, [r2, #0]
 8004748:	f38b 8811 	msr	BASEPRI, fp
 800474c:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
 8004750:	683a      	ldr	r2, [r7, #0]
 8004752:	f84a 2d28 	str.w	r2, [sl, #-40]!
 8004756:	69a0      	ldr	r0, [r4, #24]
 8004758:	f8cd 801c 	str.w	r8, [sp, #28]
 800475c:	2101      	movs	r1, #1
 800475e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004762:	e9cd 0105 	strd	r0, r1, [sp, #20]
 8004766:	f8c7 a000 	str.w	sl, [r7]
 800476a:	9208      	str	r2, [sp, #32]
 800476c:	f388 8811 	msr	BASEPRI, r8
 8004770:	f38b 8811 	msr	BASEPRI, fp
 8004774:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 8004778:	6819      	ldr	r1, [r3, #0]
 800477a:	f849 1d14 	str.w	r1, [r9, #-20]!
 800477e:	69a0      	ldr	r0, [r4, #24]
 8004780:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 8004784:	2104      	movs	r1, #4
 8004786:	920d      	str	r2, [sp, #52]	; 0x34
 8004788:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800478c:	f8c3 9000 	str.w	r9, [r3]
 8004790:	f388 8811 	msr	BASEPRI, r8
 8004794:	f7fe f854 	bl	8002840 <test_wait_tick>
 8004798:	f38b 8811 	msr	BASEPRI, fp
 800479c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80047a0:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80047a2:	b290      	uxth	r0, r2
 80047a4:	9003      	str	r0, [sp, #12]
 80047a6:	f388 8811 	msr	BASEPRI, r8
 80047aa:	69a3      	ldr	r3, [r4, #24]
 80047ac:	4930      	ldr	r1, [pc, #192]	; (8004870 <evt2_execute+0x2e0>)
 80047ae:	689a      	ldr	r2, [r3, #8]
 80047b0:	9100      	str	r1, [sp, #0]
 80047b2:	f100 0c32 	add.w	ip, r0, #50	; 0x32
 80047b6:	4b2f      	ldr	r3, [pc, #188]	; (8004874 <evt2_execute+0x2e4>)
 80047b8:	4829      	ldr	r0, [pc, #164]	; (8004860 <evt2_execute+0x2d0>)
 80047ba:	3a01      	subs	r2, #1
 80047bc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80047c0:	fa1f f68c 	uxth.w	r6, ip
 80047c4:	f7fd f894 	bl	80018f0 <chThdCreateStatic>
 80047c8:	69a4      	ldr	r4, [r4, #24]
 80047ca:	6028      	str	r0, [r5, #0]
 80047cc:	f38b 8811 	msr	BASEPRI, fp
 80047d0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80047d2:	f003 0205 	and.w	r2, r3, #5
 80047d6:	2a05      	cmp	r2, #5
 80047d8:	d005      	beq.n	80047e6 <evt2_execute+0x256>
 80047da:	2305      	movs	r3, #5
 80047dc:	6223      	str	r3, [r4, #32]
 80047de:	200b      	movs	r0, #11
 80047e0:	f7fd f8be 	bl	8001960 <chSchGoSleepS>
 80047e4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80047e6:	f023 0305 	bic.w	r3, r3, #5
 80047ea:	6363      	str	r3, [r4, #52]	; 0x34
 80047ec:	2300      	movs	r3, #0
 80047ee:	f383 8811 	msr	BASEPRI, r3
 80047f2:	9a03      	ldr	r2, [sp, #12]
 80047f4:	3237      	adds	r2, #55	; 0x37
 80047f6:	b292      	uxth	r2, r2
 80047f8:	4631      	mov	r1, r6
 80047fa:	200d      	movs	r0, #13
 80047fc:	f7fb ff40 	bl	8000680 <_test_assert_time_window>
 8004800:	2800      	cmp	r0, #0
 8004802:	f47f aedf 	bne.w	80045c4 <evt2_execute+0x34>
 8004806:	f7fb fd1b 	bl	8000240 <chEvtGetAndClearEvents.constprop.35>
 800480a:	fab0 f180 	clz	r1, r0
 800480e:	0949      	lsrs	r1, r1, #5
 8004810:	200e      	movs	r0, #14
 8004812:	f7fb ff7d 	bl	8000710 <_test_assert>
 8004816:	2800      	cmp	r0, #0
 8004818:	f47f aed4 	bne.w	80045c4 <evt2_execute+0x34>
 800481c:	f7ff f8f0 	bl	8003a00 <test_wait_threads>
 8004820:	4651      	mov	r1, sl
 8004822:	4811      	ldr	r0, [pc, #68]	; (8004868 <evt2_execute+0x2d8>)
 8004824:	f7fc f91c 	bl	8000a60 <chEvtUnregister>
 8004828:	4649      	mov	r1, r9
 800482a:	4810      	ldr	r0, [pc, #64]	; (800486c <evt2_execute+0x2dc>)
 800482c:	f7fc f918 	bl	8000a60 <chEvtUnregister>
 8004830:	6839      	ldr	r1, [r7, #0]
 8004832:	1bca      	subs	r2, r1, r7
 8004834:	4251      	negs	r1, r2
 8004836:	4151      	adcs	r1, r2
 8004838:	200f      	movs	r0, #15
 800483a:	f7fb ff69 	bl	8000710 <_test_assert>
 800483e:	2800      	cmp	r0, #0
 8004840:	f47f aec0 	bne.w	80045c4 <evt2_execute+0x34>
 8004844:	4b09      	ldr	r3, [pc, #36]	; (800486c <evt2_execute+0x2dc>)
 8004846:	6819      	ldr	r1, [r3, #0]
 8004848:	1acb      	subs	r3, r1, r3
 800484a:	4259      	negs	r1, r3
 800484c:	4159      	adcs	r1, r3
 800484e:	2010      	movs	r0, #16
 8004850:	f7fb ff5e 	bl	8000710 <_test_assert>
 8004854:	e6b6      	b.n	80045c4 <evt2_execute+0x34>
 8004856:	bf00      	nop
 8004858:	20000930 	.word	0x20000930
 800485c:	080027a1 	.word	0x080027a1
 8004860:	20000b38 	.word	0x20000b38
 8004864:	200011cc 	.word	0x200011cc
 8004868:	20000808 	.word	0x20000808
 800486c:	2000080c 	.word	0x2000080c
 8004870:	08005d20 	.word	0x08005d20
 8004874:	080027d1 	.word	0x080027d1
	...

08004880 <mtx8_execute>:
 8004880:	b570      	push	{r4, r5, r6, lr}
 8004882:	4b19      	ldr	r3, [pc, #100]	; (80048e8 <mtx8_execute+0x68>)
 8004884:	4d19      	ldr	r5, [pc, #100]	; (80048ec <mtx8_execute+0x6c>)
 8004886:	699b      	ldr	r3, [r3, #24]
 8004888:	4a19      	ldr	r2, [pc, #100]	; (80048f0 <mtx8_execute+0x70>)
 800488a:	689e      	ldr	r6, [r3, #8]
 800488c:	4b19      	ldr	r3, [pc, #100]	; (80048f4 <mtx8_execute+0x74>)
 800488e:	4c1a      	ldr	r4, [pc, #104]	; (80048f8 <mtx8_execute+0x78>)
 8004890:	b082      	sub	sp, #8
 8004892:	4628      	mov	r0, r5
 8004894:	9200      	str	r2, [sp, #0]
 8004896:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800489a:	1c72      	adds	r2, r6, #1
 800489c:	f7fd f828 	bl	80018f0 <chThdCreateStatic>
 80048a0:	4b16      	ldr	r3, [pc, #88]	; (80048fc <mtx8_execute+0x7c>)
 80048a2:	6020      	str	r0, [r4, #0]
 80048a4:	1cb2      	adds	r2, r6, #2
 80048a6:	9300      	str	r3, [sp, #0]
 80048a8:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 80048ac:	4b14      	ldr	r3, [pc, #80]	; (8004900 <mtx8_execute+0x80>)
 80048ae:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80048b2:	f7fd f81d 	bl	80018f0 <chThdCreateStatic>
 80048b6:	4b13      	ldr	r3, [pc, #76]	; (8004904 <mtx8_execute+0x84>)
 80048b8:	6060      	str	r0, [r4, #4]
 80048ba:	1cf2      	adds	r2, r6, #3
 80048bc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80048c0:	9300      	str	r3, [sp, #0]
 80048c2:	f505 7024 	add.w	r0, r5, #656	; 0x290
 80048c6:	4b10      	ldr	r3, [pc, #64]	; (8004908 <mtx8_execute+0x88>)
 80048c8:	f7fd f812 	bl	80018f0 <chThdCreateStatic>
 80048cc:	60a0      	str	r0, [r4, #8]
 80048ce:	f7fc ffa7 	bl	8001820 <chCondSignal.constprop.43>
 80048d2:	f7fc ffa5 	bl	8001820 <chCondSignal.constprop.43>
 80048d6:	f7ff f893 	bl	8003a00 <test_wait_threads>
 80048da:	490c      	ldr	r1, [pc, #48]	; (800490c <mtx8_execute+0x8c>)
 80048dc:	2001      	movs	r0, #1
 80048de:	b002      	add	sp, #8
 80048e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80048e4:	f7fb beec 	b.w	80006c0 <_test_assert_sequence>
 80048e8:	20000930 	.word	0x20000930
 80048ec:	20000b38 	.word	0x20000b38
 80048f0:	08005d20 	.word	0x08005d20
 80048f4:	08002de1 	.word	0x08002de1
 80048f8:	200011cc 	.word	0x200011cc
 80048fc:	08005d14 	.word	0x08005d14
 8004900:	08002e71 	.word	0x08002e71
 8004904:	08005d10 	.word	0x08005d10
 8004908:	08002ee1 	.word	0x08002ee1
 800490c:	08005d40 	.word	0x08005d40

08004910 <mtx7_execute>:
 8004910:	b530      	push	{r4, r5, lr}
 8004912:	4b2c      	ldr	r3, [pc, #176]	; (80049c4 <mtx7_execute+0xb4>)
 8004914:	4a2c      	ldr	r2, [pc, #176]	; (80049c8 <mtx7_execute+0xb8>)
 8004916:	6999      	ldr	r1, [r3, #24]
 8004918:	482c      	ldr	r0, [pc, #176]	; (80049cc <mtx7_execute+0xbc>)
 800491a:	688d      	ldr	r5, [r1, #8]
 800491c:	4b2c      	ldr	r3, [pc, #176]	; (80049d0 <mtx7_execute+0xc0>)
 800491e:	4c2d      	ldr	r4, [pc, #180]	; (80049d4 <mtx7_execute+0xc4>)
 8004920:	b083      	sub	sp, #12
 8004922:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004926:	9200      	str	r2, [sp, #0]
 8004928:	1c6a      	adds	r2, r5, #1
 800492a:	f7fc ffe1 	bl	80018f0 <chThdCreateStatic>
 800492e:	4b2a      	ldr	r3, [pc, #168]	; (80049d8 <mtx7_execute+0xc8>)
 8004930:	6020      	str	r0, [r4, #0]
 8004932:	1caa      	adds	r2, r5, #2
 8004934:	9300      	str	r3, [sp, #0]
 8004936:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800493a:	4b25      	ldr	r3, [pc, #148]	; (80049d0 <mtx7_execute+0xc0>)
 800493c:	4827      	ldr	r0, [pc, #156]	; (80049dc <mtx7_execute+0xcc>)
 800493e:	f7fc ffd7 	bl	80018f0 <chThdCreateStatic>
 8004942:	4b27      	ldr	r3, [pc, #156]	; (80049e0 <mtx7_execute+0xd0>)
 8004944:	6060      	str	r0, [r4, #4]
 8004946:	1cea      	adds	r2, r5, #3
 8004948:	9300      	str	r3, [sp, #0]
 800494a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800494e:	4b20      	ldr	r3, [pc, #128]	; (80049d0 <mtx7_execute+0xc0>)
 8004950:	4824      	ldr	r0, [pc, #144]	; (80049e4 <mtx7_execute+0xd4>)
 8004952:	f7fc ffcd 	bl	80018f0 <chThdCreateStatic>
 8004956:	4b24      	ldr	r3, [pc, #144]	; (80049e8 <mtx7_execute+0xd8>)
 8004958:	60a0      	str	r0, [r4, #8]
 800495a:	1d2a      	adds	r2, r5, #4
 800495c:	9300      	str	r3, [sp, #0]
 800495e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004962:	4b1b      	ldr	r3, [pc, #108]	; (80049d0 <mtx7_execute+0xc0>)
 8004964:	4821      	ldr	r0, [pc, #132]	; (80049ec <mtx7_execute+0xdc>)
 8004966:	f7fc ffc3 	bl	80018f0 <chThdCreateStatic>
 800496a:	4b21      	ldr	r3, [pc, #132]	; (80049f0 <mtx7_execute+0xe0>)
 800496c:	60e0      	str	r0, [r4, #12]
 800496e:	1d6a      	adds	r2, r5, #5
 8004970:	9300      	str	r3, [sp, #0]
 8004972:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004976:	4b16      	ldr	r3, [pc, #88]	; (80049d0 <mtx7_execute+0xc0>)
 8004978:	481e      	ldr	r0, [pc, #120]	; (80049f4 <mtx7_execute+0xe4>)
 800497a:	f7fc ffb9 	bl	80018f0 <chThdCreateStatic>
 800497e:	2320      	movs	r3, #32
 8004980:	6120      	str	r0, [r4, #16]
 8004982:	f383 8811 	msr	BASEPRI, r3
 8004986:	4c1c      	ldr	r4, [pc, #112]	; (80049f8 <mtx7_execute+0xe8>)
 8004988:	6823      	ldr	r3, [r4, #0]
 800498a:	42a3      	cmp	r3, r4
 800498c:	d00b      	beq.n	80049a6 <mtx7_execute+0x96>
 800498e:	f06f 0501 	mvn.w	r5, #1
 8004992:	681a      	ldr	r2, [r3, #0]
 8004994:	6022      	str	r2, [r4, #0]
 8004996:	4618      	mov	r0, r3
 8004998:	6054      	str	r4, [r2, #4]
 800499a:	f7fc f951 	bl	8000c40 <chSchReadyI>
 800499e:	6823      	ldr	r3, [r4, #0]
 80049a0:	6205      	str	r5, [r0, #32]
 80049a2:	42a3      	cmp	r3, r4
 80049a4:	d1f5      	bne.n	8004992 <mtx7_execute+0x82>
 80049a6:	f7fc fd93 	bl	80014d0 <chSchRescheduleS>
 80049aa:	2300      	movs	r3, #0
 80049ac:	f383 8811 	msr	BASEPRI, r3
 80049b0:	f7ff f826 	bl	8003a00 <test_wait_threads>
 80049b4:	4911      	ldr	r1, [pc, #68]	; (80049fc <mtx7_execute+0xec>)
 80049b6:	2001      	movs	r0, #1
 80049b8:	b003      	add	sp, #12
 80049ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80049be:	f7fb be7f 	b.w	80006c0 <_test_assert_sequence>
 80049c2:	bf00      	nop
 80049c4:	20000930 	.word	0x20000930
 80049c8:	08005f64 	.word	0x08005f64
 80049cc:	20000b38 	.word	0x20000b38
 80049d0:	08002e71 	.word	0x08002e71
 80049d4:	200011cc 	.word	0x200011cc
 80049d8:	08005d18 	.word	0x08005d18
 80049dc:	20000c80 	.word	0x20000c80
 80049e0:	08005d14 	.word	0x08005d14
 80049e4:	20000dc8 	.word	0x20000dc8
 80049e8:	08005d10 	.word	0x08005d10
 80049ec:	20000f10 	.word	0x20000f10
 80049f0:	08005d20 	.word	0x08005d20
 80049f4:	20001058 	.word	0x20001058
 80049f8:	20000800 	.word	0x20000800
 80049fc:	08005f60 	.word	0x08005f60

08004a00 <mtx6_execute>:
 8004a00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a02:	4b2c      	ldr	r3, [pc, #176]	; (8004ab4 <mtx6_execute+0xb4>)
 8004a04:	4e2c      	ldr	r6, [pc, #176]	; (8004ab8 <mtx6_execute+0xb8>)
 8004a06:	699b      	ldr	r3, [r3, #24]
 8004a08:	4d2c      	ldr	r5, [pc, #176]	; (8004abc <mtx6_execute+0xbc>)
 8004a0a:	689f      	ldr	r7, [r3, #8]
 8004a0c:	4b2c      	ldr	r3, [pc, #176]	; (8004ac0 <mtx6_execute+0xc0>)
 8004a0e:	4c2d      	ldr	r4, [pc, #180]	; (8004ac4 <mtx6_execute+0xc4>)
 8004a10:	b083      	sub	sp, #12
 8004a12:	1c7a      	adds	r2, r7, #1
 8004a14:	9300      	str	r3, [sp, #0]
 8004a16:	4628      	mov	r0, r5
 8004a18:	4633      	mov	r3, r6
 8004a1a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a1e:	f7fc ff67 	bl	80018f0 <chThdCreateStatic>
 8004a22:	4929      	ldr	r1, [pc, #164]	; (8004ac8 <mtx6_execute+0xc8>)
 8004a24:	6020      	str	r0, [r4, #0]
 8004a26:	1cba      	adds	r2, r7, #2
 8004a28:	4633      	mov	r3, r6
 8004a2a:	9100      	str	r1, [sp, #0]
 8004a2c:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8004a30:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a34:	f7fc ff5c 	bl	80018f0 <chThdCreateStatic>
 8004a38:	4924      	ldr	r1, [pc, #144]	; (8004acc <mtx6_execute+0xcc>)
 8004a3a:	6060      	str	r0, [r4, #4]
 8004a3c:	1cfa      	adds	r2, r7, #3
 8004a3e:	4633      	mov	r3, r6
 8004a40:	9100      	str	r1, [sp, #0]
 8004a42:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8004a46:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a4a:	f7fc ff51 	bl	80018f0 <chThdCreateStatic>
 8004a4e:	4920      	ldr	r1, [pc, #128]	; (8004ad0 <mtx6_execute+0xd0>)
 8004a50:	60a0      	str	r0, [r4, #8]
 8004a52:	1d3a      	adds	r2, r7, #4
 8004a54:	4633      	mov	r3, r6
 8004a56:	9100      	str	r1, [sp, #0]
 8004a58:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8004a5c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a60:	f7fc ff46 	bl	80018f0 <chThdCreateStatic>
 8004a64:	491b      	ldr	r1, [pc, #108]	; (8004ad4 <mtx6_execute+0xd4>)
 8004a66:	60e0      	str	r0, [r4, #12]
 8004a68:	4633      	mov	r3, r6
 8004a6a:	9100      	str	r1, [sp, #0]
 8004a6c:	1d7a      	adds	r2, r7, #5
 8004a6e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8004a72:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a76:	f7fc ff3b 	bl	80018f0 <chThdCreateStatic>
 8004a7a:	2320      	movs	r3, #32
 8004a7c:	6120      	str	r0, [r4, #16]
 8004a7e:	f383 8811 	msr	BASEPRI, r3
 8004a82:	f7fc f8f5 	bl	8000c70 <chCondSignalI.constprop.42>
 8004a86:	f7fc f8f3 	bl	8000c70 <chCondSignalI.constprop.42>
 8004a8a:	f7fc f8f1 	bl	8000c70 <chCondSignalI.constprop.42>
 8004a8e:	f7fc f8ef 	bl	8000c70 <chCondSignalI.constprop.42>
 8004a92:	f7fc f8ed 	bl	8000c70 <chCondSignalI.constprop.42>
 8004a96:	f7fc fd1b 	bl	80014d0 <chSchRescheduleS>
 8004a9a:	2300      	movs	r3, #0
 8004a9c:	f383 8811 	msr	BASEPRI, r3
 8004aa0:	f7fe ffae 	bl	8003a00 <test_wait_threads>
 8004aa4:	490c      	ldr	r1, [pc, #48]	; (8004ad8 <mtx6_execute+0xd8>)
 8004aa6:	2001      	movs	r0, #1
 8004aa8:	b003      	add	sp, #12
 8004aaa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004aae:	f7fb be07 	b.w	80006c0 <_test_assert_sequence>
 8004ab2:	bf00      	nop
 8004ab4:	20000930 	.word	0x20000930
 8004ab8:	08002e71 	.word	0x08002e71
 8004abc:	20000b38 	.word	0x20000b38
 8004ac0:	08005f64 	.word	0x08005f64
 8004ac4:	200011cc 	.word	0x200011cc
 8004ac8:	08005d18 	.word	0x08005d18
 8004acc:	08005d14 	.word	0x08005d14
 8004ad0:	08005d10 	.word	0x08005d10
 8004ad4:	08005d20 	.word	0x08005d20
 8004ad8:	08005f60 	.word	0x08005f60
 8004adc:	00000000 	.word	0x00000000

08004ae0 <mtx4_execute>:
 8004ae0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004ae4:	4d84      	ldr	r5, [pc, #528]	; (8004cf8 <mtx4_execute+0x218>)
 8004ae6:	4a85      	ldr	r2, [pc, #532]	; (8004cfc <mtx4_execute+0x21c>)
 8004ae8:	69a9      	ldr	r1, [r5, #24]
 8004aea:	4b85      	ldr	r3, [pc, #532]	; (8004d00 <mtx4_execute+0x220>)
 8004aec:	688c      	ldr	r4, [r1, #8]
 8004aee:	4885      	ldr	r0, [pc, #532]	; (8004d04 <mtx4_execute+0x224>)
 8004af0:	4e85      	ldr	r6, [pc, #532]	; (8004d08 <mtx4_execute+0x228>)
 8004af2:	b082      	sub	sp, #8
 8004af4:	1c67      	adds	r7, r4, #1
 8004af6:	9200      	str	r2, [sp, #0]
 8004af8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004afc:	463a      	mov	r2, r7
 8004afe:	f7fc fef7 	bl	80018f0 <chThdCreateStatic>
 8004b02:	f104 0802 	add.w	r8, r4, #2
 8004b06:	4b81      	ldr	r3, [pc, #516]	; (8004d0c <mtx4_execute+0x22c>)
 8004b08:	6030      	str	r0, [r6, #0]
 8004b0a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b0e:	4642      	mov	r2, r8
 8004b10:	9300      	str	r3, [sp, #0]
 8004b12:	487f      	ldr	r0, [pc, #508]	; (8004d10 <mtx4_execute+0x230>)
 8004b14:	4b7f      	ldr	r3, [pc, #508]	; (8004d14 <mtx4_execute+0x234>)
 8004b16:	f7fc feeb 	bl	80018f0 <chThdCreateStatic>
 8004b1a:	6070      	str	r0, [r6, #4]
 8004b1c:	487e      	ldr	r0, [pc, #504]	; (8004d18 <mtx4_execute+0x238>)
 8004b1e:	f7fe f917 	bl	8002d50 <chMtxLock>
 8004b22:	69ab      	ldr	r3, [r5, #24]
 8004b24:	6899      	ldr	r1, [r3, #8]
 8004b26:	1b09      	subs	r1, r1, r4
 8004b28:	fab1 f181 	clz	r1, r1
 8004b2c:	2001      	movs	r0, #1
 8004b2e:	0949      	lsrs	r1, r1, #5
 8004b30:	f7fb fdee 	bl	8000710 <_test_assert>
 8004b34:	b110      	cbz	r0, 8004b3c <mtx4_execute+0x5c>
 8004b36:	b002      	add	sp, #8
 8004b38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b3c:	2064      	movs	r0, #100	; 0x64
 8004b3e:	f7fd fd9f 	bl	8002680 <chThdSleep>
 8004b42:	69ab      	ldr	r3, [r5, #24]
 8004b44:	6899      	ldr	r1, [r3, #8]
 8004b46:	1bc9      	subs	r1, r1, r7
 8004b48:	fab1 f181 	clz	r1, r1
 8004b4c:	2002      	movs	r0, #2
 8004b4e:	0949      	lsrs	r1, r1, #5
 8004b50:	f7fb fdde 	bl	8000710 <_test_assert>
 8004b54:	2800      	cmp	r0, #0
 8004b56:	d1ee      	bne.n	8004b36 <mtx4_execute+0x56>
 8004b58:	4870      	ldr	r0, [pc, #448]	; (8004d1c <mtx4_execute+0x23c>)
 8004b5a:	f7fe f8f9 	bl	8002d50 <chMtxLock>
 8004b5e:	69ab      	ldr	r3, [r5, #24]
 8004b60:	6899      	ldr	r1, [r3, #8]
 8004b62:	1bc9      	subs	r1, r1, r7
 8004b64:	fab1 f181 	clz	r1, r1
 8004b68:	2003      	movs	r0, #3
 8004b6a:	0949      	lsrs	r1, r1, #5
 8004b6c:	f7fb fdd0 	bl	8000710 <_test_assert>
 8004b70:	2800      	cmp	r0, #0
 8004b72:	d1e0      	bne.n	8004b36 <mtx4_execute+0x56>
 8004b74:	2064      	movs	r0, #100	; 0x64
 8004b76:	f7fd fd83 	bl	8002680 <chThdSleep>
 8004b7a:	69ab      	ldr	r3, [r5, #24]
 8004b7c:	6899      	ldr	r1, [r3, #8]
 8004b7e:	eba1 0108 	sub.w	r1, r1, r8
 8004b82:	fab1 f181 	clz	r1, r1
 8004b86:	2004      	movs	r0, #4
 8004b88:	0949      	lsrs	r1, r1, #5
 8004b8a:	f7fb fdc1 	bl	8000710 <_test_assert>
 8004b8e:	2800      	cmp	r0, #0
 8004b90:	d1d1      	bne.n	8004b36 <mtx4_execute+0x56>
 8004b92:	4862      	ldr	r0, [pc, #392]	; (8004d1c <mtx4_execute+0x23c>)
 8004b94:	f7fc fe5c 	bl	8001850 <chMtxUnlock>
 8004b98:	69ab      	ldr	r3, [r5, #24]
 8004b9a:	6899      	ldr	r1, [r3, #8]
 8004b9c:	1bc9      	subs	r1, r1, r7
 8004b9e:	fab1 f181 	clz	r1, r1
 8004ba2:	2005      	movs	r0, #5
 8004ba4:	0949      	lsrs	r1, r1, #5
 8004ba6:	f7fb fdb3 	bl	8000710 <_test_assert>
 8004baa:	2800      	cmp	r0, #0
 8004bac:	d1c3      	bne.n	8004b36 <mtx4_execute+0x56>
 8004bae:	2064      	movs	r0, #100	; 0x64
 8004bb0:	f7fd fd66 	bl	8002680 <chThdSleep>
 8004bb4:	69ab      	ldr	r3, [r5, #24]
 8004bb6:	6899      	ldr	r1, [r3, #8]
 8004bb8:	1bc9      	subs	r1, r1, r7
 8004bba:	fab1 f181 	clz	r1, r1
 8004bbe:	2006      	movs	r0, #6
 8004bc0:	0949      	lsrs	r1, r1, #5
 8004bc2:	f7fb fda5 	bl	8000710 <_test_assert>
 8004bc6:	2800      	cmp	r0, #0
 8004bc8:	d1b5      	bne.n	8004b36 <mtx4_execute+0x56>
 8004bca:	f7fc fca9 	bl	8001520 <chMtxUnlockAll>
 8004bce:	69ab      	ldr	r3, [r5, #24]
 8004bd0:	6899      	ldr	r1, [r3, #8]
 8004bd2:	1b09      	subs	r1, r1, r4
 8004bd4:	fab1 f181 	clz	r1, r1
 8004bd8:	2007      	movs	r0, #7
 8004bda:	0949      	lsrs	r1, r1, #5
 8004bdc:	f7fb fd98 	bl	8000710 <_test_assert>
 8004be0:	2800      	cmp	r0, #0
 8004be2:	d1a8      	bne.n	8004b36 <mtx4_execute+0x56>
 8004be4:	f7fe ff0c 	bl	8003a00 <test_wait_threads>
 8004be8:	4b4d      	ldr	r3, [pc, #308]	; (8004d20 <mtx4_execute+0x240>)
 8004bea:	9300      	str	r3, [sp, #0]
 8004bec:	463a      	mov	r2, r7
 8004bee:	4b44      	ldr	r3, [pc, #272]	; (8004d00 <mtx4_execute+0x220>)
 8004bf0:	4844      	ldr	r0, [pc, #272]	; (8004d04 <mtx4_execute+0x224>)
 8004bf2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004bf6:	f7fc fe7b 	bl	80018f0 <chThdCreateStatic>
 8004bfa:	4b4a      	ldr	r3, [pc, #296]	; (8004d24 <mtx4_execute+0x244>)
 8004bfc:	6030      	str	r0, [r6, #0]
 8004bfe:	4642      	mov	r2, r8
 8004c00:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004c04:	9300      	str	r3, [sp, #0]
 8004c06:	4842      	ldr	r0, [pc, #264]	; (8004d10 <mtx4_execute+0x230>)
 8004c08:	4b42      	ldr	r3, [pc, #264]	; (8004d14 <mtx4_execute+0x234>)
 8004c0a:	f7fc fe71 	bl	80018f0 <chThdCreateStatic>
 8004c0e:	6070      	str	r0, [r6, #4]
 8004c10:	4841      	ldr	r0, [pc, #260]	; (8004d18 <mtx4_execute+0x238>)
 8004c12:	f7fe f89d 	bl	8002d50 <chMtxLock>
 8004c16:	69ab      	ldr	r3, [r5, #24]
 8004c18:	6899      	ldr	r1, [r3, #8]
 8004c1a:	1b0a      	subs	r2, r1, r4
 8004c1c:	4251      	negs	r1, r2
 8004c1e:	4151      	adcs	r1, r2
 8004c20:	2008      	movs	r0, #8
 8004c22:	f7fb fd75 	bl	8000710 <_test_assert>
 8004c26:	2800      	cmp	r0, #0
 8004c28:	d185      	bne.n	8004b36 <mtx4_execute+0x56>
 8004c2a:	2064      	movs	r0, #100	; 0x64
 8004c2c:	f7fd fd28 	bl	8002680 <chThdSleep>
 8004c30:	69ab      	ldr	r3, [r5, #24]
 8004c32:	6899      	ldr	r1, [r3, #8]
 8004c34:	1bcb      	subs	r3, r1, r7
 8004c36:	4259      	negs	r1, r3
 8004c38:	4159      	adcs	r1, r3
 8004c3a:	2009      	movs	r0, #9
 8004c3c:	f7fb fd68 	bl	8000710 <_test_assert>
 8004c40:	2800      	cmp	r0, #0
 8004c42:	f47f af78 	bne.w	8004b36 <mtx4_execute+0x56>
 8004c46:	4835      	ldr	r0, [pc, #212]	; (8004d1c <mtx4_execute+0x23c>)
 8004c48:	f7fe f882 	bl	8002d50 <chMtxLock>
 8004c4c:	69ab      	ldr	r3, [r5, #24]
 8004c4e:	6899      	ldr	r1, [r3, #8]
 8004c50:	eba1 0e07 	sub.w	lr, r1, r7
 8004c54:	f1de 0100 	rsbs	r1, lr, #0
 8004c58:	eb41 010e 	adc.w	r1, r1, lr
 8004c5c:	200a      	movs	r0, #10
 8004c5e:	f7fb fd57 	bl	8000710 <_test_assert>
 8004c62:	2800      	cmp	r0, #0
 8004c64:	f47f af67 	bne.w	8004b36 <mtx4_execute+0x56>
 8004c68:	2064      	movs	r0, #100	; 0x64
 8004c6a:	f7fd fd09 	bl	8002680 <chThdSleep>
 8004c6e:	69ab      	ldr	r3, [r5, #24]
 8004c70:	6899      	ldr	r1, [r3, #8]
 8004c72:	eba1 0c08 	sub.w	ip, r1, r8
 8004c76:	f1dc 0100 	rsbs	r1, ip, #0
 8004c7a:	eb41 010c 	adc.w	r1, r1, ip
 8004c7e:	200b      	movs	r0, #11
 8004c80:	f7fb fd46 	bl	8000710 <_test_assert>
 8004c84:	4606      	mov	r6, r0
 8004c86:	2800      	cmp	r0, #0
 8004c88:	f47f af55 	bne.w	8004b36 <mtx4_execute+0x56>
 8004c8c:	2320      	movs	r3, #32
 8004c8e:	f383 8811 	msr	BASEPRI, r3
 8004c92:	4822      	ldr	r0, [pc, #136]	; (8004d1c <mtx4_execute+0x23c>)
 8004c94:	f7fc f934 	bl	8000f00 <chMtxUnlockS>
 8004c98:	f7fc fc1a 	bl	80014d0 <chSchRescheduleS>
 8004c9c:	f386 8811 	msr	BASEPRI, r6
 8004ca0:	69ab      	ldr	r3, [r5, #24]
 8004ca2:	6899      	ldr	r1, [r3, #8]
 8004ca4:	1bce      	subs	r6, r1, r7
 8004ca6:	4271      	negs	r1, r6
 8004ca8:	4171      	adcs	r1, r6
 8004caa:	200c      	movs	r0, #12
 8004cac:	f7fb fd30 	bl	8000710 <_test_assert>
 8004cb0:	2800      	cmp	r0, #0
 8004cb2:	f47f af40 	bne.w	8004b36 <mtx4_execute+0x56>
 8004cb6:	2064      	movs	r0, #100	; 0x64
 8004cb8:	f7fd fce2 	bl	8002680 <chThdSleep>
 8004cbc:	69ab      	ldr	r3, [r5, #24]
 8004cbe:	6899      	ldr	r1, [r3, #8]
 8004cc0:	1bca      	subs	r2, r1, r7
 8004cc2:	4251      	negs	r1, r2
 8004cc4:	4151      	adcs	r1, r2
 8004cc6:	200d      	movs	r0, #13
 8004cc8:	f7fb fd22 	bl	8000710 <_test_assert>
 8004ccc:	2800      	cmp	r0, #0
 8004cce:	f47f af32 	bne.w	8004b36 <mtx4_execute+0x56>
 8004cd2:	f7fc fc25 	bl	8001520 <chMtxUnlockAll>
 8004cd6:	69ab      	ldr	r3, [r5, #24]
 8004cd8:	6899      	ldr	r1, [r3, #8]
 8004cda:	1b0b      	subs	r3, r1, r4
 8004cdc:	4259      	negs	r1, r3
 8004cde:	4159      	adcs	r1, r3
 8004ce0:	200e      	movs	r0, #14
 8004ce2:	f7fb fd15 	bl	8000710 <_test_assert>
 8004ce6:	2800      	cmp	r0, #0
 8004ce8:	f47f af25 	bne.w	8004b36 <mtx4_execute+0x56>
 8004cec:	b002      	add	sp, #8
 8004cee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004cf2:	f7fe be85 	b.w	8003a00 <test_wait_threads>
 8004cf6:	bf00      	nop
 8004cf8:	20000930 	.word	0x20000930
 8004cfc:	08005d10 	.word	0x08005d10
 8004d00:	08002ff1 	.word	0x08002ff1
 8004d04:	20000b38 	.word	0x20000b38
 8004d08:	200011cc 	.word	0x200011cc
 8004d0c:	08005d20 	.word	0x08005d20
 8004d10:	20000c80 	.word	0x20000c80
 8004d14:	08003011 	.word	0x08003011
 8004d18:	20000844 	.word	0x20000844
 8004d1c:	20000834 	.word	0x20000834
 8004d20:	08005d18 	.word	0x08005d18
 8004d24:	08005d14 	.word	0x08005d14
	...

08004d30 <mtx1_execute>:
 8004d30:	b570      	push	{r4, r5, r6, lr}
 8004d32:	4e29      	ldr	r6, [pc, #164]	; (8004dd8 <mtx1_execute+0xa8>)
 8004d34:	4829      	ldr	r0, [pc, #164]	; (8004ddc <mtx1_execute+0xac>)
 8004d36:	69b3      	ldr	r3, [r6, #24]
 8004d38:	4d29      	ldr	r5, [pc, #164]	; (8004de0 <mtx1_execute+0xb0>)
 8004d3a:	689c      	ldr	r4, [r3, #8]
 8004d3c:	b082      	sub	sp, #8
 8004d3e:	f7fe f807 	bl	8002d50 <chMtxLock>
 8004d42:	4b28      	ldr	r3, [pc, #160]	; (8004de4 <mtx1_execute+0xb4>)
 8004d44:	9300      	str	r3, [sp, #0]
 8004d46:	1c62      	adds	r2, r4, #1
 8004d48:	4b27      	ldr	r3, [pc, #156]	; (8004de8 <mtx1_execute+0xb8>)
 8004d4a:	4828      	ldr	r0, [pc, #160]	; (8004dec <mtx1_execute+0xbc>)
 8004d4c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d50:	f7fc fdce 	bl	80018f0 <chThdCreateStatic>
 8004d54:	4b26      	ldr	r3, [pc, #152]	; (8004df0 <mtx1_execute+0xc0>)
 8004d56:	6028      	str	r0, [r5, #0]
 8004d58:	1ca2      	adds	r2, r4, #2
 8004d5a:	9300      	str	r3, [sp, #0]
 8004d5c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d60:	4b21      	ldr	r3, [pc, #132]	; (8004de8 <mtx1_execute+0xb8>)
 8004d62:	4824      	ldr	r0, [pc, #144]	; (8004df4 <mtx1_execute+0xc4>)
 8004d64:	f7fc fdc4 	bl	80018f0 <chThdCreateStatic>
 8004d68:	4b23      	ldr	r3, [pc, #140]	; (8004df8 <mtx1_execute+0xc8>)
 8004d6a:	6068      	str	r0, [r5, #4]
 8004d6c:	1ce2      	adds	r2, r4, #3
 8004d6e:	9300      	str	r3, [sp, #0]
 8004d70:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d74:	4b1c      	ldr	r3, [pc, #112]	; (8004de8 <mtx1_execute+0xb8>)
 8004d76:	4821      	ldr	r0, [pc, #132]	; (8004dfc <mtx1_execute+0xcc>)
 8004d78:	f7fc fdba 	bl	80018f0 <chThdCreateStatic>
 8004d7c:	4b20      	ldr	r3, [pc, #128]	; (8004e00 <mtx1_execute+0xd0>)
 8004d7e:	60a8      	str	r0, [r5, #8]
 8004d80:	1d22      	adds	r2, r4, #4
 8004d82:	9300      	str	r3, [sp, #0]
 8004d84:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d88:	4b17      	ldr	r3, [pc, #92]	; (8004de8 <mtx1_execute+0xb8>)
 8004d8a:	481e      	ldr	r0, [pc, #120]	; (8004e04 <mtx1_execute+0xd4>)
 8004d8c:	f7fc fdb0 	bl	80018f0 <chThdCreateStatic>
 8004d90:	4b1d      	ldr	r3, [pc, #116]	; (8004e08 <mtx1_execute+0xd8>)
 8004d92:	60e8      	str	r0, [r5, #12]
 8004d94:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d98:	1d62      	adds	r2, r4, #5
 8004d9a:	9300      	str	r3, [sp, #0]
 8004d9c:	481b      	ldr	r0, [pc, #108]	; (8004e0c <mtx1_execute+0xdc>)
 8004d9e:	4b12      	ldr	r3, [pc, #72]	; (8004de8 <mtx1_execute+0xb8>)
 8004da0:	f7fc fda6 	bl	80018f0 <chThdCreateStatic>
 8004da4:	6128      	str	r0, [r5, #16]
 8004da6:	480d      	ldr	r0, [pc, #52]	; (8004ddc <mtx1_execute+0xac>)
 8004da8:	f7fc fd52 	bl	8001850 <chMtxUnlock>
 8004dac:	f7fe fe28 	bl	8003a00 <test_wait_threads>
 8004db0:	69b3      	ldr	r3, [r6, #24]
 8004db2:	6899      	ldr	r1, [r3, #8]
 8004db4:	1b09      	subs	r1, r1, r4
 8004db6:	fab1 f181 	clz	r1, r1
 8004dba:	2001      	movs	r0, #1
 8004dbc:	0949      	lsrs	r1, r1, #5
 8004dbe:	f7fb fca7 	bl	8000710 <_test_assert>
 8004dc2:	b108      	cbz	r0, 8004dc8 <mtx1_execute+0x98>
 8004dc4:	b002      	add	sp, #8
 8004dc6:	bd70      	pop	{r4, r5, r6, pc}
 8004dc8:	4911      	ldr	r1, [pc, #68]	; (8004e10 <mtx1_execute+0xe0>)
 8004dca:	2002      	movs	r0, #2
 8004dcc:	b002      	add	sp, #8
 8004dce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004dd2:	f7fb bc75 	b.w	80006c0 <_test_assert_sequence>
 8004dd6:	bf00      	nop
 8004dd8:	20000930 	.word	0x20000930
 8004ddc:	20000834 	.word	0x20000834
 8004de0:	200011cc 	.word	0x200011cc
 8004de4:	08005f64 	.word	0x08005f64
 8004de8:	08003031 	.word	0x08003031
 8004dec:	20000b38 	.word	0x20000b38
 8004df0:	08005d18 	.word	0x08005d18
 8004df4:	20000c80 	.word	0x20000c80
 8004df8:	08005d14 	.word	0x08005d14
 8004dfc:	20000dc8 	.word	0x20000dc8
 8004e00:	08005d10 	.word	0x08005d10
 8004e04:	20000f10 	.word	0x20000f10
 8004e08:	08005d20 	.word	0x08005d20
 8004e0c:	20001058 	.word	0x20001058
 8004e10:	08005f60 	.word	0x08005f60
	...

08004e20 <sem2_execute>:
 8004e20:	b570      	push	{r4, r5, r6, lr}
 8004e22:	2320      	movs	r3, #32
 8004e24:	b082      	sub	sp, #8
 8004e26:	f383 8811 	msr	BASEPRI, r3
 8004e2a:	4c4c      	ldr	r4, [pc, #304]	; (8004f5c <sem2_execute+0x13c>)
 8004e2c:	68a3      	ldr	r3, [r4, #8]
 8004e2e:	3b01      	subs	r3, #1
 8004e30:	bf5a      	itte	pl
 8004e32:	60a3      	strpl	r3, [r4, #8]
 8004e34:	2100      	movpl	r1, #0
 8004e36:	2101      	movmi	r1, #1
 8004e38:	2300      	movs	r3, #0
 8004e3a:	f383 8811 	msr	BASEPRI, r3
 8004e3e:	2001      	movs	r0, #1
 8004e40:	f7fb fc66 	bl	8000710 <_test_assert>
 8004e44:	b108      	cbz	r0, 8004e4a <sem2_execute+0x2a>
 8004e46:	b002      	add	sp, #8
 8004e48:	bd70      	pop	{r4, r5, r6, pc}
 8004e4a:	6821      	ldr	r1, [r4, #0]
 8004e4c:	1b09      	subs	r1, r1, r4
 8004e4e:	fab1 f181 	clz	r1, r1
 8004e52:	2002      	movs	r0, #2
 8004e54:	0949      	lsrs	r1, r1, #5
 8004e56:	f7fb fc5b 	bl	8000710 <_test_assert>
 8004e5a:	2800      	cmp	r0, #0
 8004e5c:	d1f3      	bne.n	8004e46 <sem2_execute+0x26>
 8004e5e:	68a1      	ldr	r1, [r4, #8]
 8004e60:	fab1 f181 	clz	r1, r1
 8004e64:	0949      	lsrs	r1, r1, #5
 8004e66:	2003      	movs	r0, #3
 8004e68:	f7fb fc52 	bl	8000710 <_test_assert>
 8004e6c:	4601      	mov	r1, r0
 8004e6e:	2800      	cmp	r0, #0
 8004e70:	d1e9      	bne.n	8004e46 <sem2_execute+0x26>
 8004e72:	4a3b      	ldr	r2, [pc, #236]	; (8004f60 <sem2_execute+0x140>)
 8004e74:	4b3b      	ldr	r3, [pc, #236]	; (8004f64 <sem2_execute+0x144>)
 8004e76:	6992      	ldr	r2, [r2, #24]
 8004e78:	483b      	ldr	r0, [pc, #236]	; (8004f68 <sem2_execute+0x148>)
 8004e7a:	6892      	ldr	r2, [r2, #8]
 8004e7c:	9100      	str	r1, [sp, #0]
 8004e7e:	3a01      	subs	r2, #1
 8004e80:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004e84:	f7fc fd34 	bl	80018f0 <chThdCreateStatic>
 8004e88:	4b38      	ldr	r3, [pc, #224]	; (8004f6c <sem2_execute+0x14c>)
 8004e8a:	6018      	str	r0, [r3, #0]
 8004e8c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004e90:	f7fc fe76 	bl	8001b80 <chSemWaitTimeout.constprop.49>
 8004e94:	4605      	mov	r5, r0
 8004e96:	f7fe fdb3 	bl	8003a00 <test_wait_threads>
 8004e9a:	fab5 f185 	clz	r1, r5
 8004e9e:	0949      	lsrs	r1, r1, #5
 8004ea0:	2004      	movs	r0, #4
 8004ea2:	f7fb fc35 	bl	8000710 <_test_assert>
 8004ea6:	2800      	cmp	r0, #0
 8004ea8:	d1cd      	bne.n	8004e46 <sem2_execute+0x26>
 8004eaa:	6821      	ldr	r1, [r4, #0]
 8004eac:	1b09      	subs	r1, r1, r4
 8004eae:	fab1 f181 	clz	r1, r1
 8004eb2:	2005      	movs	r0, #5
 8004eb4:	0949      	lsrs	r1, r1, #5
 8004eb6:	f7fb fc2b 	bl	8000710 <_test_assert>
 8004eba:	2800      	cmp	r0, #0
 8004ebc:	d1c3      	bne.n	8004e46 <sem2_execute+0x26>
 8004ebe:	68a1      	ldr	r1, [r4, #8]
 8004ec0:	fab1 f181 	clz	r1, r1
 8004ec4:	0949      	lsrs	r1, r1, #5
 8004ec6:	2006      	movs	r0, #6
 8004ec8:	f7fb fc22 	bl	8000710 <_test_assert>
 8004ecc:	4605      	mov	r5, r0
 8004ece:	2800      	cmp	r0, #0
 8004ed0:	d1b9      	bne.n	8004e46 <sem2_execute+0x26>
 8004ed2:	f7fd fcb5 	bl	8002840 <test_wait_tick>
 8004ed6:	2320      	movs	r3, #32
 8004ed8:	f383 8811 	msr	BASEPRI, r3
 8004edc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004ee0:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 8004ee2:	f385 8811 	msr	BASEPRI, r5
 8004ee6:	2541      	movs	r5, #65	; 0x41
 8004ee8:	4628      	mov	r0, r5
 8004eea:	f7fb fc29 	bl	8000740 <test_emit_token>
 8004eee:	2032      	movs	r0, #50	; 0x32
 8004ef0:	f7fc fe46 	bl	8001b80 <chSemWaitTimeout.constprop.49>
 8004ef4:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8004ef8:	fab1 f181 	clz	r1, r1
 8004efc:	0949      	lsrs	r1, r1, #5
 8004efe:	2007      	movs	r0, #7
 8004f00:	f7fb fc06 	bl	8000710 <_test_assert>
 8004f04:	2800      	cmp	r0, #0
 8004f06:	d19e      	bne.n	8004e46 <sem2_execute+0x26>
 8004f08:	6821      	ldr	r1, [r4, #0]
 8004f0a:	1b09      	subs	r1, r1, r4
 8004f0c:	fab1 f181 	clz	r1, r1
 8004f10:	2008      	movs	r0, #8
 8004f12:	0949      	lsrs	r1, r1, #5
 8004f14:	f7fb fbfc 	bl	8000710 <_test_assert>
 8004f18:	2800      	cmp	r0, #0
 8004f1a:	d194      	bne.n	8004e46 <sem2_execute+0x26>
 8004f1c:	68a1      	ldr	r1, [r4, #8]
 8004f1e:	fab1 f181 	clz	r1, r1
 8004f22:	0949      	lsrs	r1, r1, #5
 8004f24:	2009      	movs	r0, #9
 8004f26:	f7fb fbf3 	bl	8000710 <_test_assert>
 8004f2a:	3501      	adds	r5, #1
 8004f2c:	b2ed      	uxtb	r5, r5
 8004f2e:	2800      	cmp	r0, #0
 8004f30:	d189      	bne.n	8004e46 <sem2_execute+0x26>
 8004f32:	2d46      	cmp	r5, #70	; 0x46
 8004f34:	d1d8      	bne.n	8004ee8 <sem2_execute+0xc8>
 8004f36:	490e      	ldr	r1, [pc, #56]	; (8004f70 <sem2_execute+0x150>)
 8004f38:	200a      	movs	r0, #10
 8004f3a:	f7fb fbc1 	bl	80006c0 <_test_assert_sequence>
 8004f3e:	2800      	cmp	r0, #0
 8004f40:	d181      	bne.n	8004e46 <sem2_execute+0x26>
 8004f42:	b2b6      	uxth	r6, r6
 8004f44:	f106 02fc 	add.w	r2, r6, #252	; 0xfc
 8004f48:	36fa      	adds	r6, #250	; 0xfa
 8004f4a:	b292      	uxth	r2, r2
 8004f4c:	b2b1      	uxth	r1, r6
 8004f4e:	200b      	movs	r0, #11
 8004f50:	b002      	add	sp, #8
 8004f52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004f56:	f7fb bb93 	b.w	8000680 <_test_assert_time_window>
 8004f5a:	bf00      	nop
 8004f5c:	200008ac 	.word	0x200008ac
 8004f60:	20000930 	.word	0x20000930
 8004f64:	08002811 	.word	0x08002811
 8004f68:	20000b38 	.word	0x20000b38
 8004f6c:	200011cc 	.word	0x200011cc
 8004f70:	08005f60 	.word	0x08005f60
	...

08004f80 <sem1_execute>:
 8004f80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004f82:	4d4b      	ldr	r5, [pc, #300]	; (80050b0 <sem1_execute+0x130>)
 8004f84:	4f4b      	ldr	r7, [pc, #300]	; (80050b4 <sem1_execute+0x134>)
 8004f86:	69aa      	ldr	r2, [r5, #24]
 8004f88:	4b4b      	ldr	r3, [pc, #300]	; (80050b8 <sem1_execute+0x138>)
 8004f8a:	6892      	ldr	r2, [r2, #8]
 8004f8c:	484b      	ldr	r0, [pc, #300]	; (80050bc <sem1_execute+0x13c>)
 8004f8e:	4c4c      	ldr	r4, [pc, #304]	; (80050c0 <sem1_execute+0x140>)
 8004f90:	b083      	sub	sp, #12
 8004f92:	3205      	adds	r2, #5
 8004f94:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004f98:	9700      	str	r7, [sp, #0]
 8004f9a:	f7fc fca9 	bl	80018f0 <chThdCreateStatic>
 8004f9e:	69ab      	ldr	r3, [r5, #24]
 8004fa0:	689a      	ldr	r2, [r3, #8]
 8004fa2:	4b48      	ldr	r3, [pc, #288]	; (80050c4 <sem1_execute+0x144>)
 8004fa4:	6020      	str	r0, [r4, #0]
 8004fa6:	3201      	adds	r2, #1
 8004fa8:	9300      	str	r3, [sp, #0]
 8004faa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fae:	4b42      	ldr	r3, [pc, #264]	; (80050b8 <sem1_execute+0x138>)
 8004fb0:	4845      	ldr	r0, [pc, #276]	; (80050c8 <sem1_execute+0x148>)
 8004fb2:	f7fc fc9d 	bl	80018f0 <chThdCreateStatic>
 8004fb6:	69aa      	ldr	r2, [r5, #24]
 8004fb8:	4b44      	ldr	r3, [pc, #272]	; (80050cc <sem1_execute+0x14c>)
 8004fba:	6892      	ldr	r2, [r2, #8]
 8004fbc:	6060      	str	r0, [r4, #4]
 8004fbe:	3203      	adds	r2, #3
 8004fc0:	9300      	str	r3, [sp, #0]
 8004fc2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fc6:	4b3c      	ldr	r3, [pc, #240]	; (80050b8 <sem1_execute+0x138>)
 8004fc8:	4841      	ldr	r0, [pc, #260]	; (80050d0 <sem1_execute+0x150>)
 8004fca:	f7fc fc91 	bl	80018f0 <chThdCreateStatic>
 8004fce:	69aa      	ldr	r2, [r5, #24]
 8004fd0:	4b40      	ldr	r3, [pc, #256]	; (80050d4 <sem1_execute+0x154>)
 8004fd2:	6892      	ldr	r2, [r2, #8]
 8004fd4:	60a0      	str	r0, [r4, #8]
 8004fd6:	3204      	adds	r2, #4
 8004fd8:	9300      	str	r3, [sp, #0]
 8004fda:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fde:	4b36      	ldr	r3, [pc, #216]	; (80050b8 <sem1_execute+0x138>)
 8004fe0:	483d      	ldr	r0, [pc, #244]	; (80050d8 <sem1_execute+0x158>)
 8004fe2:	f7fc fc85 	bl	80018f0 <chThdCreateStatic>
 8004fe6:	69aa      	ldr	r2, [r5, #24]
 8004fe8:	4b3c      	ldr	r3, [pc, #240]	; (80050dc <sem1_execute+0x15c>)
 8004fea:	6892      	ldr	r2, [r2, #8]
 8004fec:	60e0      	str	r0, [r4, #12]
 8004fee:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004ff2:	3202      	adds	r2, #2
 8004ff4:	9300      	str	r3, [sp, #0]
 8004ff6:	483a      	ldr	r0, [pc, #232]	; (80050e0 <sem1_execute+0x160>)
 8004ff8:	4b2f      	ldr	r3, [pc, #188]	; (80050b8 <sem1_execute+0x138>)
 8004ffa:	f7fc fc79 	bl	80018f0 <chThdCreateStatic>
 8004ffe:	6120      	str	r0, [r4, #16]
 8005000:	4838      	ldr	r0, [pc, #224]	; (80050e4 <sem1_execute+0x164>)
 8005002:	f7fc fc55 	bl	80018b0 <chSemSignal>
 8005006:	4837      	ldr	r0, [pc, #220]	; (80050e4 <sem1_execute+0x164>)
 8005008:	f7fc fc52 	bl	80018b0 <chSemSignal>
 800500c:	4835      	ldr	r0, [pc, #212]	; (80050e4 <sem1_execute+0x164>)
 800500e:	f7fc fc4f 	bl	80018b0 <chSemSignal>
 8005012:	4834      	ldr	r0, [pc, #208]	; (80050e4 <sem1_execute+0x164>)
 8005014:	f7fc fc4c 	bl	80018b0 <chSemSignal>
 8005018:	4832      	ldr	r0, [pc, #200]	; (80050e4 <sem1_execute+0x164>)
 800501a:	f7fc fc49 	bl	80018b0 <chSemSignal>
 800501e:	f7fe fcef 	bl	8003a00 <test_wait_threads>
 8005022:	4931      	ldr	r1, [pc, #196]	; (80050e8 <sem1_execute+0x168>)
 8005024:	2001      	movs	r0, #1
 8005026:	f7fb fb4b 	bl	80006c0 <_test_assert_sequence>
 800502a:	b108      	cbz	r0, 8005030 <sem1_execute+0xb0>
 800502c:	b003      	add	sp, #12
 800502e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005030:	69aa      	ldr	r2, [r5, #24]
 8005032:	4b21      	ldr	r3, [pc, #132]	; (80050b8 <sem1_execute+0x138>)
 8005034:	6892      	ldr	r2, [r2, #8]
 8005036:	9700      	str	r7, [sp, #0]
 8005038:	4606      	mov	r6, r0
 800503a:	3205      	adds	r2, #5
 800503c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005040:	481e      	ldr	r0, [pc, #120]	; (80050bc <sem1_execute+0x13c>)
 8005042:	f7fc fc55 	bl	80018f0 <chThdCreateStatic>
 8005046:	2320      	movs	r3, #32
 8005048:	6020      	str	r0, [r4, #0]
 800504a:	f383 8811 	msr	BASEPRI, r3
 800504e:	2502      	movs	r5, #2
 8005050:	4c24      	ldr	r4, [pc, #144]	; (80050e4 <sem1_execute+0x164>)
 8005052:	e002      	b.n	800505a <sem1_execute+0xda>
 8005054:	2d01      	cmp	r5, #1
 8005056:	d00e      	beq.n	8005076 <sem1_execute+0xf6>
 8005058:	2501      	movs	r5, #1
 800505a:	68a3      	ldr	r3, [r4, #8]
 800505c:	3301      	adds	r3, #1
 800505e:	2b00      	cmp	r3, #0
 8005060:	60a3      	str	r3, [r4, #8]
 8005062:	dcf7      	bgt.n	8005054 <sem1_execute+0xd4>
 8005064:	6820      	ldr	r0, [r4, #0]
 8005066:	6803      	ldr	r3, [r0, #0]
 8005068:	6023      	str	r3, [r4, #0]
 800506a:	605c      	str	r4, [r3, #4]
 800506c:	f7fb fde8 	bl	8000c40 <chSchReadyI>
 8005070:	2d01      	cmp	r5, #1
 8005072:	6206      	str	r6, [r0, #32]
 8005074:	d1f0      	bne.n	8005058 <sem1_execute+0xd8>
 8005076:	f7fc fa2b 	bl	80014d0 <chSchRescheduleS>
 800507a:	2500      	movs	r5, #0
 800507c:	f385 8811 	msr	BASEPRI, r5
 8005080:	f7fe fcbe 	bl	8003a00 <test_wait_threads>
 8005084:	2320      	movs	r3, #32
 8005086:	f383 8811 	msr	BASEPRI, r3
 800508a:	68a1      	ldr	r1, [r4, #8]
 800508c:	f1a1 0101 	sub.w	r1, r1, #1
 8005090:	fab1 f181 	clz	r1, r1
 8005094:	2002      	movs	r0, #2
 8005096:	0949      	lsrs	r1, r1, #5
 8005098:	f7fb fb3a 	bl	8000710 <_test_assert>
 800509c:	b918      	cbnz	r0, 80050a6 <sem1_execute+0x126>
 800509e:	f380 8811 	msr	BASEPRI, r0
 80050a2:	b003      	add	sp, #12
 80050a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80050a6:	f385 8811 	msr	BASEPRI, r5
 80050aa:	b003      	add	sp, #12
 80050ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80050ae:	bf00      	nop
 80050b0:	20000930 	.word	0x20000930
 80050b4:	08005d20 	.word	0x08005d20
 80050b8:	08003921 	.word	0x08003921
 80050bc:	20000b38 	.word	0x20000b38
 80050c0:	200011cc 	.word	0x200011cc
 80050c4:	08005d10 	.word	0x08005d10
 80050c8:	20000c80 	.word	0x20000c80
 80050cc:	08005d14 	.word	0x08005d14
 80050d0:	20000dc8 	.word	0x20000dc8
 80050d4:	08005d18 	.word	0x08005d18
 80050d8:	20000f10 	.word	0x20000f10
 80050dc:	08005f64 	.word	0x08005f64
 80050e0:	20001058 	.word	0x20001058
 80050e4:	200008ac 	.word	0x200008ac
 80050e8:	08005f60 	.word	0x08005f60
 80050ec:	00000000 	.word	0x00000000

080050f0 <thd2_execute>:
 80050f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80050f4:	4d41      	ldr	r5, [pc, #260]	; (80051fc <thd2_execute+0x10c>)
 80050f6:	4f42      	ldr	r7, [pc, #264]	; (8005200 <thd2_execute+0x110>)
 80050f8:	69ab      	ldr	r3, [r5, #24]
 80050fa:	4c42      	ldr	r4, [pc, #264]	; (8005204 <thd2_execute+0x114>)
 80050fc:	689a      	ldr	r2, [r3, #8]
 80050fe:	4b42      	ldr	r3, [pc, #264]	; (8005208 <thd2_execute+0x118>)
 8005100:	4e42      	ldr	r6, [pc, #264]	; (800520c <thd2_execute+0x11c>)
 8005102:	b082      	sub	sp, #8
 8005104:	3a04      	subs	r2, #4
 8005106:	9300      	str	r3, [sp, #0]
 8005108:	f504 70a4 	add.w	r0, r4, #328	; 0x148
 800510c:	463b      	mov	r3, r7
 800510e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005112:	f7fc fbed 	bl	80018f0 <chThdCreateStatic>
 8005116:	69ab      	ldr	r3, [r5, #24]
 8005118:	493d      	ldr	r1, [pc, #244]	; (8005210 <thd2_execute+0x120>)
 800511a:	689a      	ldr	r2, [r3, #8]
 800511c:	6070      	str	r0, [r6, #4]
 800511e:	463b      	mov	r3, r7
 8005120:	9100      	str	r1, [sp, #0]
 8005122:	3a05      	subs	r2, #5
 8005124:	4620      	mov	r0, r4
 8005126:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800512a:	f7fc fbe1 	bl	80018f0 <chThdCreateStatic>
 800512e:	69ab      	ldr	r3, [r5, #24]
 8005130:	4938      	ldr	r1, [pc, #224]	; (8005214 <thd2_execute+0x124>)
 8005132:	689a      	ldr	r2, [r3, #8]
 8005134:	6030      	str	r0, [r6, #0]
 8005136:	463b      	mov	r3, r7
 8005138:	9100      	str	r1, [sp, #0]
 800513a:	3a01      	subs	r2, #1
 800513c:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8005140:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005144:	f7fc fbd4 	bl	80018f0 <chThdCreateStatic>
 8005148:	69ab      	ldr	r3, [r5, #24]
 800514a:	4933      	ldr	r1, [pc, #204]	; (8005218 <thd2_execute+0x128>)
 800514c:	689a      	ldr	r2, [r3, #8]
 800514e:	6130      	str	r0, [r6, #16]
 8005150:	9100      	str	r1, [sp, #0]
 8005152:	3a02      	subs	r2, #2
 8005154:	463b      	mov	r3, r7
 8005156:	f504 7076 	add.w	r0, r4, #984	; 0x3d8
 800515a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800515e:	f7fc fbc7 	bl	80018f0 <chThdCreateStatic>
 8005162:	2220      	movs	r2, #32
 8005164:	60f0      	str	r0, [r6, #12]
 8005166:	f382 8811 	msr	BASEPRI, r2
 800516a:	e9d5 1305 	ldrd	r1, r3, [r5, #20]
 800516e:	689b      	ldr	r3, [r3, #8]
 8005170:	f8c4 73b4 	str.w	r7, [r4, #948]	; 0x3b4
 8005174:	3b03      	subs	r3, #3
 8005176:	f504 776d 	add.w	r7, r4, #948	; 0x3b4
 800517a:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 800517e:	f8c4 32cc 	str.w	r3, [r4, #716]	; 0x2cc
 8005182:	f8c4 729c 	str.w	r7, [r4, #668]	; 0x29c
 8005186:	f504 7324 	add.w	r3, r4, #656	; 0x290
 800518a:	2700      	movs	r7, #0
 800518c:	f8df e090 	ldr.w	lr, [pc, #144]	; 8005220 <thd2_execute+0x130>
 8005190:	f8df c090 	ldr.w	ip, [pc, #144]	; 8005224 <thd2_execute+0x134>
 8005194:	f8c4 12a4 	str.w	r1, [r4, #676]	; 0x2a4
 8005198:	2002      	movs	r0, #2
 800519a:	f04f 0801 	mov.w	r8, #1
 800519e:	f8a4 02ac 	strh.w	r0, [r4, #684]	; 0x2ac
 80051a2:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
 80051a6:	f8c4 e3b8 	str.w	lr, [r4, #952]	; 0x3b8
 80051aa:	f8c4 c3d4 	str.w	ip, [r4, #980]	; 0x3d4
 80051ae:	f504 702d 	add.w	r0, r4, #692	; 0x2b4
 80051b2:	f8c4 72c8 	str.w	r7, [r4, #712]	; 0x2c8
 80051b6:	f8c4 72c4 	str.w	r7, [r4, #708]	; 0x2c4
 80051ba:	f8c4 72a8 	str.w	r7, [r4, #680]	; 0x2a8
 80051be:	f884 82ae 	strb.w	r8, [r4, #686]	; 0x2ae
 80051c2:	610b      	str	r3, [r1, #16]
 80051c4:	f504 712e 	add.w	r1, r4, #696	; 0x2b8
 80051c8:	616b      	str	r3, [r5, #20]
 80051ca:	60b3      	str	r3, [r6, #8]
 80051cc:	f8c4 02b4 	str.w	r0, [r4, #692]	; 0x2b4
 80051d0:	f8c4 12b8 	str.w	r1, [r4, #696]	; 0x2b8
 80051d4:	f8c4 12bc 	str.w	r1, [r4, #700]	; 0x2bc
 80051d8:	f387 8811 	msr	BASEPRI, r7
 80051dc:	68b0      	ldr	r0, [r6, #8]
 80051de:	f382 8811 	msr	BASEPRI, r2
 80051e2:	f7fb fd2d 	bl	8000c40 <chSchReadyI>
 80051e6:	f387 8811 	msr	BASEPRI, r7
 80051ea:	f7fe fc09 	bl	8003a00 <test_wait_threads>
 80051ee:	490b      	ldr	r1, [pc, #44]	; (800521c <thd2_execute+0x12c>)
 80051f0:	4640      	mov	r0, r8
 80051f2:	b002      	add	sp, #8
 80051f4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80051f8:	f7fb ba62 	b.w	80006c0 <_test_assert_sequence>
 80051fc:	20000930 	.word	0x20000930
 8005200:	08000791 	.word	0x08000791
 8005204:	20000b38 	.word	0x20000b38
 8005208:	08005d18 	.word	0x08005d18
 800520c:	200011cc 	.word	0x200011cc
 8005210:	08005f64 	.word	0x08005f64
 8005214:	08005d20 	.word	0x08005d20
 8005218:	08005d10 	.word	0x08005d10
 800521c:	08005f60 	.word	0x08005f60
 8005220:	08005d14 	.word	0x08005d14
 8005224:	08000211 	.word	0x08000211
	...

08005230 <thd1_execute>:
 8005230:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005232:	4f27      	ldr	r7, [pc, #156]	; (80052d0 <thd1_execute+0xa0>)
 8005234:	4e27      	ldr	r6, [pc, #156]	; (80052d4 <thd1_execute+0xa4>)
 8005236:	69bb      	ldr	r3, [r7, #24]
 8005238:	4d27      	ldr	r5, [pc, #156]	; (80052d8 <thd1_execute+0xa8>)
 800523a:	689a      	ldr	r2, [r3, #8]
 800523c:	4b27      	ldr	r3, [pc, #156]	; (80052dc <thd1_execute+0xac>)
 800523e:	4c28      	ldr	r4, [pc, #160]	; (80052e0 <thd1_execute+0xb0>)
 8005240:	b083      	sub	sp, #12
 8005242:	3a05      	subs	r2, #5
 8005244:	9300      	str	r3, [sp, #0]
 8005246:	4628      	mov	r0, r5
 8005248:	4633      	mov	r3, r6
 800524a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800524e:	f7fc fb4f 	bl	80018f0 <chThdCreateStatic>
 8005252:	69bb      	ldr	r3, [r7, #24]
 8005254:	4923      	ldr	r1, [pc, #140]	; (80052e4 <thd1_execute+0xb4>)
 8005256:	689a      	ldr	r2, [r3, #8]
 8005258:	6020      	str	r0, [r4, #0]
 800525a:	4633      	mov	r3, r6
 800525c:	9100      	str	r1, [sp, #0]
 800525e:	3a04      	subs	r2, #4
 8005260:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8005264:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005268:	f7fc fb42 	bl	80018f0 <chThdCreateStatic>
 800526c:	69bb      	ldr	r3, [r7, #24]
 800526e:	491e      	ldr	r1, [pc, #120]	; (80052e8 <thd1_execute+0xb8>)
 8005270:	689a      	ldr	r2, [r3, #8]
 8005272:	6060      	str	r0, [r4, #4]
 8005274:	4633      	mov	r3, r6
 8005276:	9100      	str	r1, [sp, #0]
 8005278:	3a03      	subs	r2, #3
 800527a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 800527e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005282:	f7fc fb35 	bl	80018f0 <chThdCreateStatic>
 8005286:	69bb      	ldr	r3, [r7, #24]
 8005288:	4918      	ldr	r1, [pc, #96]	; (80052ec <thd1_execute+0xbc>)
 800528a:	689a      	ldr	r2, [r3, #8]
 800528c:	60a0      	str	r0, [r4, #8]
 800528e:	4633      	mov	r3, r6
 8005290:	9100      	str	r1, [sp, #0]
 8005292:	3a02      	subs	r2, #2
 8005294:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8005298:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800529c:	f7fc fb28 	bl	80018f0 <chThdCreateStatic>
 80052a0:	69bb      	ldr	r3, [r7, #24]
 80052a2:	4913      	ldr	r1, [pc, #76]	; (80052f0 <thd1_execute+0xc0>)
 80052a4:	689a      	ldr	r2, [r3, #8]
 80052a6:	60e0      	str	r0, [r4, #12]
 80052a8:	3a01      	subs	r2, #1
 80052aa:	4633      	mov	r3, r6
 80052ac:	9100      	str	r1, [sp, #0]
 80052ae:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 80052b2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80052b6:	f7fc fb1b 	bl	80018f0 <chThdCreateStatic>
 80052ba:	6120      	str	r0, [r4, #16]
 80052bc:	f7fe fba0 	bl	8003a00 <test_wait_threads>
 80052c0:	490c      	ldr	r1, [pc, #48]	; (80052f4 <thd1_execute+0xc4>)
 80052c2:	2001      	movs	r0, #1
 80052c4:	b003      	add	sp, #12
 80052c6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80052ca:	f7fb b9f9 	b.w	80006c0 <_test_assert_sequence>
 80052ce:	bf00      	nop
 80052d0:	20000930 	.word	0x20000930
 80052d4:	08000791 	.word	0x08000791
 80052d8:	20000b38 	.word	0x20000b38
 80052dc:	08005f64 	.word	0x08005f64
 80052e0:	200011cc 	.word	0x200011cc
 80052e4:	08005d18 	.word	0x08005d18
 80052e8:	08005d14 	.word	0x08005d14
 80052ec:	08005d10 	.word	0x08005d10
 80052f0:	08005d20 	.word	0x08005d20
 80052f4:	08005f60 	.word	0x08005f60
	...

08005300 <main>:
 8005300:	4bb5      	ldr	r3, [pc, #724]	; (80055d8 <main+0x2d8>)
 8005302:	48b6      	ldr	r0, [pc, #728]	; (80055dc <main+0x2dc>)
 8005304:	6919      	ldr	r1, [r3, #16]
 8005306:	2200      	movs	r2, #0
 8005308:	f461 4100 	orn	r1, r1, #32768	; 0x8000
 800530c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8005310:	6119      	str	r1, [r3, #16]
 8005312:	611a      	str	r2, [r3, #16]
 8005314:	6999      	ldr	r1, [r3, #24]
 8005316:	f061 5180 	orn	r1, r1, #268435456	; 0x10000000
 800531a:	6199      	str	r1, [r3, #24]
 800531c:	619a      	str	r2, [r3, #24]
 800531e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005322:	695c      	ldr	r4, [r3, #20]
 8005324:	6159      	str	r1, [r3, #20]
 8005326:	615a      	str	r2, [r3, #20]
 8005328:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800532a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800532e:	625a      	str	r2, [r3, #36]	; 0x24
 8005330:	6802      	ldr	r2, [r0, #0]
 8005332:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005336:	6002      	str	r2, [r0, #0]
 8005338:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800533a:	f412 3f40 	tst.w	r2, #196608	; 0x30000
 800533e:	b08d      	sub	sp, #52	; 0x34
 8005340:	d007      	beq.n	8005352 <main+0x52>
 8005342:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005344:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8005348:	635a      	str	r2, [r3, #52]	; 0x34
 800534a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800534c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8005350:	635a      	str	r2, [r3, #52]	; 0x34
 8005352:	4ea1      	ldr	r6, [pc, #644]	; (80055d8 <main+0x2d8>)
 8005354:	4aa2      	ldr	r2, [pc, #648]	; (80055e0 <main+0x2e0>)
 8005356:	69f4      	ldr	r4, [r6, #28]
 8005358:	f8df 82e4 	ldr.w	r8, [pc, #740]	; 8005640 <main+0x340>
 800535c:	4fa1      	ldr	r7, [pc, #644]	; (80055e4 <main+0x2e4>)
 800535e:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 8005644 <main+0x344>
 8005362:	4da1      	ldr	r5, [pc, #644]	; (80055e8 <main+0x2e8>)
 8005364:	48a1      	ldr	r0, [pc, #644]	; (80055ec <main+0x2ec>)
 8005366:	49a2      	ldr	r1, [pc, #648]	; (80055f0 <main+0x2f0>)
 8005368:	4ba2      	ldr	r3, [pc, #648]	; (80055f4 <main+0x2f4>)
 800536a:	f8df 92dc 	ldr.w	r9, [pc, #732]	; 8005648 <main+0x348>
 800536e:	f044 043f 	orr.w	r4, r4, #63	; 0x3f
 8005372:	61f4      	str	r4, [r6, #28]
 8005374:	6ab4      	ldr	r4, [r6, #40]	; 0x28
 8005376:	f044 043f 	orr.w	r4, r4, #63	; 0x3f
 800537a:	62b4      	str	r4, [r6, #40]	; 0x28
 800537c:	6ab4      	ldr	r4, [r6, #40]	; 0x28
 800537e:	f044 0c3f 	orr.w	ip, r4, #63	; 0x3f
 8005382:	f8c6 c028 	str.w	ip, [r6, #40]	; 0x28
 8005386:	2400      	movs	r4, #0
 8005388:	f46f 6c8a 	mvn.w	ip, #1104	; 0x450
 800538c:	6054      	str	r4, [r2, #4]
 800538e:	f64f 7adf 	movw	sl, #65503	; 0xffdf
 8005392:	f8c2 c008 	str.w	ip, [r2, #8]
 8005396:	f8c2 800c 	str.w	r8, [r2, #12]
 800539a:	f44f 4cee 	mov.w	ip, #30464	; 0x7700
 800539e:	f44f 282a 	mov.w	r8, #696320	; 0xaa000
 80053a2:	f8c2 a014 	str.w	sl, [r2, #20]
 80053a6:	f8c2 c020 	str.w	ip, [r2, #32]
 80053aa:	f8c2 8024 	str.w	r8, [r2, #36]	; 0x24
 80053ae:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 80053b2:	f8c2 e000 	str.w	lr, [r2]
 80053b6:	f04f 3855 	mov.w	r8, #1431655765	; 0x55555555
 80053ba:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80053be:	f04f 0e80 	mov.w	lr, #128	; 0x80
 80053c2:	607c      	str	r4, [r7, #4]
 80053c4:	f8c7 c008 	str.w	ip, [r7, #8]
 80053c8:	f8c7 800c 	str.w	r8, [r7, #12]
 80053cc:	617a      	str	r2, [r7, #20]
 80053ce:	623c      	str	r4, [r7, #32]
 80053d0:	627c      	str	r4, [r7, #36]	; 0x24
 80053d2:	f8c7 e000 	str.w	lr, [r7]
 80053d6:	4f88      	ldr	r7, [pc, #544]	; (80055f8 <main+0x2f8>)
 80053d8:	606c      	str	r4, [r5, #4]
 80053da:	f8c5 c008 	str.w	ip, [r5, #8]
 80053de:	f8c5 900c 	str.w	r9, [r5, #12]
 80053e2:	616a      	str	r2, [r5, #20]
 80053e4:	f04f 090f 	mov.w	r9, #15
 80053e8:	622c      	str	r4, [r5, #32]
 80053ea:	626c      	str	r4, [r5, #36]	; 0x24
 80053ec:	602c      	str	r4, [r5, #0]
 80053ee:	6044      	str	r4, [r0, #4]
 80053f0:	4d82      	ldr	r5, [pc, #520]	; (80055fc <main+0x2fc>)
 80053f2:	6084      	str	r4, [r0, #8]
 80053f4:	f8c0 800c 	str.w	r8, [r0, #12]
 80053f8:	6142      	str	r2, [r0, #20]
 80053fa:	6204      	str	r4, [r0, #32]
 80053fc:	6244      	str	r4, [r0, #36]	; 0x24
 80053fe:	6004      	str	r4, [r0, #0]
 8005400:	487f      	ldr	r0, [pc, #508]	; (8005600 <main+0x300>)
 8005402:	604c      	str	r4, [r1, #4]
 8005404:	608c      	str	r4, [r1, #8]
 8005406:	f8c1 800c 	str.w	r8, [r1, #12]
 800540a:	614a      	str	r2, [r1, #20]
 800540c:	620c      	str	r4, [r1, #32]
 800540e:	624c      	str	r4, [r1, #36]	; 0x24
 8005410:	600c      	str	r4, [r1, #0]
 8005412:	605c      	str	r4, [r3, #4]
 8005414:	f8c3 9008 	str.w	r9, [r3, #8]
 8005418:	60dd      	str	r5, [r3, #12]
 800541a:	615a      	str	r2, [r3, #20]
 800541c:	621c      	str	r4, [r3, #32]
 800541e:	625c      	str	r4, [r3, #36]	; 0x24
 8005420:	601c      	str	r4, [r3, #0]
 8005422:	f847 0b04 	str.w	r0, [r7], #4
 8005426:	4874      	ldr	r0, [pc, #464]	; (80055f8 <main+0x2f8>)
 8005428:	4602      	mov	r2, r0
 800542a:	f04f 0b01 	mov.w	fp, #1
 800542e:	f100 0364 	add.w	r3, r0, #100	; 0x64
 8005432:	f100 0154 	add.w	r1, r0, #84	; 0x54
 8005436:	f100 080c 	add.w	r8, r0, #12
 800543a:	f100 0530 	add.w	r5, r0, #48	; 0x30
 800543e:	6144      	str	r4, [r0, #20]
 8005440:	6284      	str	r4, [r0, #40]	; 0x28
 8005442:	6047      	str	r7, [r0, #4]
 8005444:	62c0      	str	r0, [r0, #44]	; 0x2c
 8005446:	2010      	movs	r0, #16
 8005448:	e9c2 8803 	strd	r8, r8, [r2, #12]
 800544c:	6191      	str	r1, [r2, #24]
 800544e:	e9c2 1108 	strd	r1, r1, [r2, #32]
 8005452:	61d3      	str	r3, [r2, #28]
 8005454:	63d3      	str	r3, [r2, #60]	; 0x3c
 8005456:	6493      	str	r3, [r2, #72]	; 0x48
 8005458:	f882 b008 	strb.w	fp, [r2, #8]
 800545c:	e9c2 550c 	strd	r5, r5, [r2, #48]	; 0x30
 8005460:	6390      	str	r0, [r2, #56]	; 0x38
 8005462:	6453      	str	r3, [r2, #68]	; 0x44
 8005464:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005466:	4d67      	ldr	r5, [pc, #412]	; (8005604 <main+0x304>)
 8005468:	9203      	str	r2, [sp, #12]
 800546a:	ea43 030b 	orr.w	r3, r3, fp
 800546e:	6512      	str	r2, [r2, #80]	; 0x50
 8005470:	6273      	str	r3, [r6, #36]	; 0x24
 8005472:	68ab      	ldr	r3, [r5, #8]
 8005474:	4964      	ldr	r1, [pc, #400]	; (8005608 <main+0x308>)
 8005476:	4f65      	ldr	r7, [pc, #404]	; (800560c <main+0x30c>)
 8005478:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 800564c <main+0x34c>
 800547c:	ea43 030b 	orr.w	r3, r3, fp
 8005480:	60ab      	str	r3, [r5, #8]
 8005482:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8005486:	f647 45ff 	movw	r5, #31999	; 0x7cff
 800548a:	629d      	str	r5, [r3, #40]	; 0x28
 800548c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005490:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8005494:	62da      	str	r2, [r3, #44]	; 0x2c
 8005496:	619c      	str	r4, [r3, #24]
 8005498:	635c      	str	r4, [r3, #52]	; 0x34
 800549a:	60dc      	str	r4, [r3, #12]
 800549c:	605c      	str	r4, [r3, #4]
 800549e:	f8c3 b014 	str.w	fp, [r3, #20]
 80054a2:	f8c3 b000 	str.w	fp, [r3]
 80054a6:	f887 e31c 	strb.w	lr, [r7, #796]	; 0x31c
 80054aa:	f8c7 5180 	str.w	r5, [r7, #384]	; 0x180
 80054ae:	603d      	str	r5, [r7, #0]
 80054b0:	608c      	str	r4, [r1, #8]
 80054b2:	68cd      	ldr	r5, [r1, #12]
 80054b4:	4b56      	ldr	r3, [pc, #344]	; (8005610 <main+0x310>)
 80054b6:	9a03      	ldr	r2, [sp, #12]
 80054b8:	f64f 0eff 	movw	lr, #63743	; 0xf8ff
 80054bc:	ea05 050e 	and.w	r5, r5, lr
 80054c0:	432b      	orrs	r3, r5
 80054c2:	4d54      	ldr	r5, [pc, #336]	; (8005614 <main+0x314>)
 80054c4:	60cb      	str	r3, [r1, #12]
 80054c6:	68eb      	ldr	r3, [r5, #12]
 80054c8:	f8df e184 	ldr.w	lr, [pc, #388]	; 8005650 <main+0x350>
 80054cc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80054d0:	60eb      	str	r3, [r5, #12]
 80054d2:	f8de 3000 	ldr.w	r3, [lr]
 80054d6:	f8c2 804c 	str.w	r8, [r2, #76]	; 0x4c
 80054da:	ea43 030b 	orr.w	r3, r3, fp
 80054de:	f04f 0a20 	mov.w	sl, #32
 80054e2:	f8ce 3000 	str.w	r3, [lr]
 80054e6:	77c8      	strb	r0, [r1, #31]
 80054e8:	f102 0374 	add.w	r3, r2, #116	; 0x74
 80054ec:	f881 a022 	strb.w	sl, [r1, #34]	; 0x22
 80054f0:	4949      	ldr	r1, [pc, #292]	; (8005618 <main+0x318>)
 80054f2:	4d4a      	ldr	r5, [pc, #296]	; (800561c <main+0x31c>)
 80054f4:	6751      	str	r1, [r2, #116]	; 0x74
 80054f6:	6413      	str	r3, [r2, #64]	; 0x40
 80054f8:	aa06      	add	r2, sp, #24
 80054fa:	4610      	mov	r0, r2
 80054fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005500:	f105 031c 	add.w	r3, r5, #28
 8005504:	60ac      	str	r4, [r5, #8]
 8005506:	f04f 0800 	mov.w	r8, #0
 800550a:	e9c5 5500 	strd	r5, r5, [r5]
 800550e:	f04f 0900 	mov.w	r9, #0
 8005512:	626a      	str	r2, [r5, #36]	; 0x24
 8005514:	f8cd c018 	str.w	ip, [sp, #24]
 8005518:	e9c5 3307 	strd	r3, r3, [r5, #28]
 800551c:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
 8005520:	e9c5 5504 	strd	r5, r5, [r5, #16]
 8005524:	672c      	str	r4, [r5, #112]	; 0x70
 8005526:	e9cd 4407 	strd	r4, r4, [sp, #28]
 800552a:	9409      	str	r4, [sp, #36]	; 0x24
 800552c:	f7fa fe80 	bl	8000230 <chTMStartMeasurementX.constprop.55>
 8005530:	ab06      	add	r3, sp, #24
 8005532:	4618      	mov	r0, r3
 8005534:	f7fb fb24 	bl	8000b80 <chTMStopMeasurementX>
 8005538:	4a39      	ldr	r2, [pc, #228]	; (8005620 <main+0x320>)
 800553a:	f8d5 c014 	ldr.w	ip, [r5, #20]
 800553e:	9b08      	ldr	r3, [sp, #32]
 8005540:	672b      	str	r3, [r5, #112]	; 0x70
 8005542:	f04f 0840 	mov.w	r8, #64	; 0x40
 8005546:	f105 032c 	add.w	r3, r5, #44	; 0x2c
 800554a:	f102 0e10 	add.w	lr, r2, #16
 800554e:	f8c5 c040 	str.w	ip, [r5, #64]	; 0x40
 8005552:	f885 4049 	strb.w	r4, [r5, #73]	; 0x49
 8005556:	e9c5 4418 	strd	r4, r4, [r5, #96]	; 0x60
 800555a:	f885 b04a 	strb.w	fp, [r5, #74]	; 0x4a
 800555e:	646c      	str	r4, [r5, #68]	; 0x44
 8005560:	63ed      	str	r5, [r5, #60]	; 0x3c
 8005562:	6194      	str	r4, [r2, #24]
 8005564:	e9c2 ee04 	strd	lr, lr, [r2, #16]
 8005568:	f8c5 8034 	str.w	r8, [r5, #52]	; 0x34
 800556c:	f8c5 8068 	str.w	r8, [r5, #104]	; 0x68
 8005570:	f8cc 3010 	str.w	r3, [ip, #16]
 8005574:	e9c5 3305 	strd	r3, r3, [r5, #20]
 8005578:	f105 0350 	add.w	r3, r5, #80	; 0x50
 800557c:	652b      	str	r3, [r5, #80]	; 0x50
 800557e:	4b29      	ldr	r3, [pc, #164]	; (8005624 <main+0x324>)
 8005580:	6013      	str	r3, [r2, #0]
 8005582:	4829      	ldr	r0, [pc, #164]	; (8005628 <main+0x328>)
 8005584:	4929      	ldr	r1, [pc, #164]	; (800562c <main+0x32c>)
 8005586:	f8df c0cc 	ldr.w	ip, [pc, #204]	; 8005654 <main+0x354>
 800558a:	f885 b048 	strb.w	fp, [r5, #72]	; 0x48
 800558e:	f105 0354 	add.w	r3, r5, #84	; 0x54
 8005592:	e9c5 3315 	strd	r3, r3, [r5, #84]	; 0x54
 8005596:	4b26      	ldr	r3, [pc, #152]	; (8005630 <main+0x330>)
 8005598:	f020 0007 	bic.w	r0, r0, #7
 800559c:	f021 0107 	bic.w	r1, r1, #7
 80055a0:	e9c2 4402 	strd	r4, r4, [r2, #8]
 80055a4:	f8cc 0000 	str.w	r0, [ip]
 80055a8:	6019      	str	r1, [r3, #0]
 80055aa:	f384 8811 	msr	BASEPRI, r4
 80055ae:	b662      	cpsie	i
 80055b0:	69ab      	ldr	r3, [r5, #24]
 80055b2:	4a20      	ldr	r2, [pc, #128]	; (8005634 <main+0x334>)
 80055b4:	619a      	str	r2, [r3, #24]
 80055b6:	f105 0078 	add.w	r0, r5, #120	; 0x78
 80055ba:	465a      	mov	r2, fp
 80055bc:	9400      	str	r4, [sp, #0]
 80055be:	4b1e      	ldr	r3, [pc, #120]	; (8005638 <main+0x338>)
 80055c0:	21d8      	movs	r1, #216	; 0xd8
 80055c2:	f7fc f995 	bl	80018f0 <chThdCreateStatic>
 80055c6:	4b1d      	ldr	r3, [pc, #116]	; (800563c <main+0x33c>)
 80055c8:	6183      	str	r3, [r0, #24]
 80055ca:	f38a 8811 	msr	BASEPRI, sl
 80055ce:	480a      	ldr	r0, [pc, #40]	; (80055f8 <main+0x2f8>)
 80055d0:	7a03      	ldrb	r3, [r0, #8]
 80055d2:	455b      	cmp	r3, fp
 80055d4:	d14b      	bne.n	800566e <main+0x36e>
 80055d6:	e03f      	b.n	8005658 <main+0x358>
 80055d8:	40023800 	.word	0x40023800
 80055dc:	40007000 	.word	0x40007000
 80055e0:	40020000 	.word	0x40020000
 80055e4:	40020400 	.word	0x40020400
 80055e8:	40020800 	.word	0x40020800
 80055ec:	40020c00 	.word	0x40020c00
 80055f0:	40021000 	.word	0x40021000
 80055f4:	40021400 	.word	0x40021400
 80055f8:	200008b8 	.word	0x200008b8
 80055fc:	55555550 	.word	0x55555550
 8005600:	08006860 	.word	0x08006860
 8005604:	e0042000 	.word	0xe0042000
 8005608:	e000ed00 	.word	0xe000ed00
 800560c:	e000e100 	.word	0xe000e100
 8005610:	05fa0300 	.word	0x05fa0300
 8005614:	e000edf0 	.word	0xe000edf0
 8005618:	40004400 	.word	0x40004400
 800561c:	20000930 	.word	0x20000930
 8005620:	20000a88 	.word	0x20000a88
 8005624:	08000281 	.word	0x08000281
 8005628:	2000137f 	.word	0x2000137f
 800562c:	20014000 	.word	0x20014000
 8005630:	20000aa8 	.word	0x20000aa8
 8005634:	08005ce0 	.word	0x08005ce0
 8005638:	08000271 	.word	0x08000271
 800563c:	08005e30 	.word	0x08005e30
 8005640:	64155105 	.word	0x64155105
 8005644:	2a8004a0 	.word	0x2a8004a0
 8005648:	51555555 	.word	0x51555555
 800564c:	080002c1 	.word	0x080002c1
 8005650:	e0001000 	.word	0xe0001000
 8005654:	20000b24 	.word	0x20000b24
 8005658:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800565a:	22c0      	movs	r2, #192	; 0xc0
 800565c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8005660:	6273      	str	r3, [r6, #36]	; 0x24
 8005662:	f887 2326 	strb.w	r2, [r7, #806]	; 0x326
 8005666:	f8c7 8184 	str.w	r8, [r7, #388]	; 0x184
 800566a:	f8c7 8004 	str.w	r8, [r7, #4]
 800566e:	4baa      	ldr	r3, [pc, #680]	; (8005918 <main+0x618>)
 8005670:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005672:	f240 3241 	movw	r2, #833	; 0x341
 8005676:	811a      	strh	r2, [r3, #8]
 8005678:	f244 0140 	movw	r1, #16448	; 0x4040
 800567c:	2401      	movs	r4, #1
 800567e:	f242 102c 	movw	r0, #8492	; 0x212c
 8005682:	2200      	movs	r2, #0
 8005684:	8219      	strh	r1, [r3, #16]
 8005686:	829c      	strh	r4, [r3, #20]
 8005688:	8198      	strh	r0, [r3, #12]
 800568a:	801a      	strh	r2, [r3, #0]
 800568c:	8818      	ldrh	r0, [r3, #0]
 800568e:	889b      	ldrh	r3, [r3, #4]
 8005690:	4ba1      	ldr	r3, [pc, #644]	; (8005918 <main+0x618>)
 8005692:	2102      	movs	r1, #2
 8005694:	7219      	strb	r1, [r3, #8]
 8005696:	f382 8811 	msr	BASEPRI, r2
 800569a:	4ba0      	ldr	r3, [pc, #640]	; (800591c <main+0x61c>)
 800569c:	9200      	str	r2, [sp, #0]
 800569e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80056a2:	2240      	movs	r2, #64	; 0x40
 80056a4:	489e      	ldr	r0, [pc, #632]	; (8005920 <main+0x620>)
 80056a6:	f8df 8300 	ldr.w	r8, [pc, #768]	; 80059a8 <main+0x6a8>
 80056aa:	f8df 9300 	ldr.w	r9, [pc, #768]	; 80059ac <main+0x6ac>
 80056ae:	f8df a300 	ldr.w	sl, [pc, #768]	; 80059b0 <main+0x6b0>
 80056b2:	f8df b300 	ldr.w	fp, [pc, #768]	; 80059b4 <main+0x6b4>
 80056b6:	f7fc f91b 	bl	80018f0 <chThdCreateStatic>
 80056ba:	e003      	b.n	80056c4 <main+0x3c4>
 80056bc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80056c0:	f7fc ffde 	bl	8002680 <chThdSleep>
 80056c4:	4b97      	ldr	r3, [pc, #604]	; (8005924 <main+0x624>)
 80056c6:	691b      	ldr	r3, [r3, #16]
 80056c8:	049b      	lsls	r3, r3, #18
 80056ca:	d4f7      	bmi.n	80056bc <main+0x3bc>
 80056cc:	4b92      	ldr	r3, [pc, #584]	; (8005918 <main+0x618>)
 80056ce:	4896      	ldr	r0, [pc, #600]	; (8005928 <main+0x628>)
 80056d0:	f8c8 3000 	str.w	r3, [r8]
 80056d4:	f7fb f86c 	bl	80007b0 <test_println>
 80056d8:	4894      	ldr	r0, [pc, #592]	; (800592c <main+0x62c>)
 80056da:	4c95      	ldr	r4, [pc, #596]	; (8005930 <main+0x630>)
 80056dc:	f7fb f868 	bl	80007b0 <test_println>
 80056e0:	4894      	ldr	r0, [pc, #592]	; (8005934 <main+0x634>)
 80056e2:	f7fb f865 	bl	80007b0 <test_println>
 80056e6:	212a      	movs	r1, #42	; 0x2a
 80056e8:	f8d8 0000 	ldr.w	r0, [r8]
 80056ec:	6803      	ldr	r3, [r0, #0]
 80056ee:	689b      	ldr	r3, [r3, #8]
 80056f0:	4798      	blx	r3
 80056f2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80056f6:	2900      	cmp	r1, #0
 80056f8:	d1f6      	bne.n	80056e8 <main+0x3e8>
 80056fa:	488f      	ldr	r0, [pc, #572]	; (8005938 <main+0x638>)
 80056fc:	4c8f      	ldr	r4, [pc, #572]	; (800593c <main+0x63c>)
 80056fe:	f7fb f857 	bl	80007b0 <test_println>
 8005702:	212a      	movs	r1, #42	; 0x2a
 8005704:	f8d8 0000 	ldr.w	r0, [r8]
 8005708:	6803      	ldr	r3, [r0, #0]
 800570a:	689b      	ldr	r3, [r3, #8]
 800570c:	4798      	blx	r3
 800570e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005712:	2900      	cmp	r1, #0
 8005714:	d1f6      	bne.n	8005704 <main+0x404>
 8005716:	488a      	ldr	r0, [pc, #552]	; (8005940 <main+0x640>)
 8005718:	4c8a      	ldr	r4, [pc, #552]	; (8005944 <main+0x644>)
 800571a:	f7fb f849 	bl	80007b0 <test_println>
 800571e:	212a      	movs	r1, #42	; 0x2a
 8005720:	f8d8 0000 	ldr.w	r0, [r8]
 8005724:	6803      	ldr	r3, [r0, #0]
 8005726:	689b      	ldr	r3, [r3, #8]
 8005728:	4798      	blx	r3
 800572a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800572e:	2900      	cmp	r1, #0
 8005730:	d1f6      	bne.n	8005720 <main+0x420>
 8005732:	4885      	ldr	r0, [pc, #532]	; (8005948 <main+0x648>)
 8005734:	4c85      	ldr	r4, [pc, #532]	; (800594c <main+0x64c>)
 8005736:	f7fb f83b 	bl	80007b0 <test_println>
 800573a:	212a      	movs	r1, #42	; 0x2a
 800573c:	f8d8 0000 	ldr.w	r0, [r8]
 8005740:	6803      	ldr	r3, [r0, #0]
 8005742:	689b      	ldr	r3, [r3, #8]
 8005744:	4798      	blx	r3
 8005746:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800574a:	2900      	cmp	r1, #0
 800574c:	d1f6      	bne.n	800573c <main+0x43c>
 800574e:	4880      	ldr	r0, [pc, #512]	; (8005950 <main+0x650>)
 8005750:	4c80      	ldr	r4, [pc, #512]	; (8005954 <main+0x654>)
 8005752:	f7fb f82d 	bl	80007b0 <test_println>
 8005756:	212a      	movs	r1, #42	; 0x2a
 8005758:	f8d8 0000 	ldr.w	r0, [r8]
 800575c:	6803      	ldr	r3, [r0, #0]
 800575e:	689b      	ldr	r3, [r3, #8]
 8005760:	4798      	blx	r3
 8005762:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005766:	2900      	cmp	r1, #0
 8005768:	d1f6      	bne.n	8005758 <main+0x458>
 800576a:	487b      	ldr	r0, [pc, #492]	; (8005958 <main+0x658>)
 800576c:	4c7b      	ldr	r4, [pc, #492]	; (800595c <main+0x65c>)
 800576e:	f7fb f81f 	bl	80007b0 <test_println>
 8005772:	212a      	movs	r1, #42	; 0x2a
 8005774:	f8d8 0000 	ldr.w	r0, [r8]
 8005778:	6803      	ldr	r3, [r0, #0]
 800577a:	689b      	ldr	r3, [r3, #8]
 800577c:	4798      	blx	r3
 800577e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005782:	2900      	cmp	r1, #0
 8005784:	d1f6      	bne.n	8005774 <main+0x474>
 8005786:	4876      	ldr	r0, [pc, #472]	; (8005960 <main+0x660>)
 8005788:	4c76      	ldr	r4, [pc, #472]	; (8005964 <main+0x664>)
 800578a:	f7fb f811 	bl	80007b0 <test_println>
 800578e:	212a      	movs	r1, #42	; 0x2a
 8005790:	f8d8 0000 	ldr.w	r0, [r8]
 8005794:	6803      	ldr	r3, [r0, #0]
 8005796:	689b      	ldr	r3, [r3, #8]
 8005798:	4798      	blx	r3
 800579a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800579e:	2900      	cmp	r1, #0
 80057a0:	d1f6      	bne.n	8005790 <main+0x490>
 80057a2:	4871      	ldr	r0, [pc, #452]	; (8005968 <main+0x668>)
 80057a4:	4c71      	ldr	r4, [pc, #452]	; (800596c <main+0x66c>)
 80057a6:	f7fb f803 	bl	80007b0 <test_println>
 80057aa:	212a      	movs	r1, #42	; 0x2a
 80057ac:	f8d8 0000 	ldr.w	r0, [r8]
 80057b0:	6803      	ldr	r3, [r0, #0]
 80057b2:	689b      	ldr	r3, [r3, #8]
 80057b4:	4798      	blx	r3
 80057b6:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80057ba:	2900      	cmp	r1, #0
 80057bc:	d1f6      	bne.n	80057ac <main+0x4ac>
 80057be:	4b6c      	ldr	r3, [pc, #432]	; (8005970 <main+0x670>)
 80057c0:	486c      	ldr	r0, [pc, #432]	; (8005974 <main+0x674>)
 80057c2:	9305      	str	r3, [sp, #20]
 80057c4:	4b6c      	ldr	r3, [pc, #432]	; (8005978 <main+0x678>)
 80057c6:	9103      	str	r1, [sp, #12]
 80057c8:	9304      	str	r3, [sp, #16]
 80057ca:	f7fa fff1 	bl	80007b0 <test_println>
 80057ce:	4856      	ldr	r0, [pc, #344]	; (8005928 <main+0x628>)
 80057d0:	4e6a      	ldr	r6, [pc, #424]	; (800597c <main+0x67c>)
 80057d2:	f7fa ffed 	bl	80007b0 <test_println>
 80057d6:	4b6a      	ldr	r3, [pc, #424]	; (8005980 <main+0x680>)
 80057d8:	9903      	ldr	r1, [sp, #12]
 80057da:	7019      	strb	r1, [r3, #0]
 80057dc:	4b69      	ldr	r3, [pc, #420]	; (8005984 <main+0x684>)
 80057de:	9a03      	ldr	r2, [sp, #12]
 80057e0:	3201      	adds	r2, #1
 80057e2:	9203      	str	r2, [sp, #12]
 80057e4:	2500      	movs	r5, #0
 80057e6:	2b00      	cmp	r3, #0
 80057e8:	f000 808b 	beq.w	8005902 <main+0x602>
 80057ec:	4c66      	ldr	r4, [pc, #408]	; (8005988 <main+0x688>)
 80057ee:	f7fa ff17 	bl	8000620 <print_line>
 80057f2:	212d      	movs	r1, #45	; 0x2d
 80057f4:	f8d8 0000 	ldr.w	r0, [r8]
 80057f8:	6803      	ldr	r3, [r0, #0]
 80057fa:	689b      	ldr	r3, [r3, #8]
 80057fc:	4798      	blx	r3
 80057fe:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005802:	2900      	cmp	r1, #0
 8005804:	d1f6      	bne.n	80057f4 <main+0x4f4>
 8005806:	9803      	ldr	r0, [sp, #12]
 8005808:	4c60      	ldr	r4, [pc, #384]	; (800598c <main+0x68c>)
 800580a:	f7fa fef9 	bl	8000600 <test_printn>
 800580e:	f8d8 0000 	ldr.w	r0, [r8]
 8005812:	6803      	ldr	r3, [r0, #0]
 8005814:	212e      	movs	r1, #46	; 0x2e
 8005816:	689b      	ldr	r3, [r3, #8]
 8005818:	1c6f      	adds	r7, r5, #1
 800581a:	4798      	blx	r3
 800581c:	4638      	mov	r0, r7
 800581e:	f7fa feef 	bl	8000600 <test_printn>
 8005822:	2120      	movs	r1, #32
 8005824:	f8d8 0000 	ldr.w	r0, [r8]
 8005828:	6803      	ldr	r3, [r0, #0]
 800582a:	689b      	ldr	r3, [r3, #8]
 800582c:	4798      	blx	r3
 800582e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005832:	2900      	cmp	r1, #0
 8005834:	d1f6      	bne.n	8005824 <main+0x524>
 8005836:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800583a:	681c      	ldr	r4, [r3, #0]
 800583c:	7821      	ldrb	r1, [r4, #0]
 800583e:	b141      	cbz	r1, 8005852 <main+0x552>
 8005840:	f8d8 0000 	ldr.w	r0, [r8]
 8005844:	6803      	ldr	r3, [r0, #0]
 8005846:	689b      	ldr	r3, [r3, #8]
 8005848:	4798      	blx	r3
 800584a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800584e:	2900      	cmp	r1, #0
 8005850:	d1f6      	bne.n	8005840 <main+0x540>
 8005852:	484f      	ldr	r0, [pc, #316]	; (8005990 <main+0x690>)
 8005854:	f7fa ffac 	bl	80007b0 <test_println>
 8005858:	20c8      	movs	r0, #200	; 0xc8
 800585a:	f7fc ff11 	bl	8002680 <chThdSleep>
 800585e:	4b4d      	ldr	r3, [pc, #308]	; (8005994 <main+0x694>)
 8005860:	f8c9 3000 	str.w	r3, [r9]
 8005864:	2300      	movs	r3, #0
 8005866:	f856 4025 	ldr.w	r4, [r6, r5, lsl #2]
 800586a:	f8cb 3010 	str.w	r3, [fp, #16]
 800586e:	e9cb 3300 	strd	r3, r3, [fp]
 8005872:	e9cb 3302 	strd	r3, r3, [fp, #8]
 8005876:	6862      	ldr	r2, [r4, #4]
 8005878:	f88a 3000 	strb.w	r3, [sl]
 800587c:	b102      	cbz	r2, 8005880 <main+0x580>
 800587e:	4790      	blx	r2
 8005880:	68e3      	ldr	r3, [r4, #12]
 8005882:	4798      	blx	r3
 8005884:	68a3      	ldr	r3, [r4, #8]
 8005886:	b103      	cbz	r3, 800588a <main+0x58a>
 8005888:	4798      	blx	r3
 800588a:	f7fe f8b9 	bl	8003a00 <test_wait_threads>
 800588e:	f89a 3000 	ldrb.w	r3, [sl]
 8005892:	2b00      	cmp	r3, #0
 8005894:	f000 8090 	beq.w	80059b8 <main+0x6b8>
 8005898:	4c3f      	ldr	r4, [pc, #252]	; (8005998 <main+0x698>)
 800589a:	212d      	movs	r1, #45	; 0x2d
 800589c:	f8d8 0000 	ldr.w	r0, [r8]
 80058a0:	6803      	ldr	r3, [r0, #0]
 80058a2:	689b      	ldr	r3, [r3, #8]
 80058a4:	4798      	blx	r3
 80058a6:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80058aa:	2900      	cmp	r1, #0
 80058ac:	d1f6      	bne.n	800589c <main+0x59c>
 80058ae:	4b3b      	ldr	r3, [pc, #236]	; (800599c <main+0x69c>)
 80058b0:	4c3b      	ldr	r4, [pc, #236]	; (80059a0 <main+0x6a0>)
 80058b2:	6818      	ldr	r0, [r3, #0]
 80058b4:	f7fa fea4 	bl	8000600 <test_printn>
 80058b8:	2120      	movs	r1, #32
 80058ba:	f8d8 0000 	ldr.w	r0, [r8]
 80058be:	6803      	ldr	r3, [r0, #0]
 80058c0:	689b      	ldr	r3, [r3, #8]
 80058c2:	4798      	blx	r3
 80058c4:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80058c8:	2900      	cmp	r1, #0
 80058ca:	d1f6      	bne.n	80058ba <main+0x5ba>
 80058cc:	f8d9 3000 	ldr.w	r3, [r9]
 80058d0:	4a30      	ldr	r2, [pc, #192]	; (8005994 <main+0x694>)
 80058d2:	4293      	cmp	r3, r2
 80058d4:	d90b      	bls.n	80058ee <main+0x5ee>
 80058d6:	4614      	mov	r4, r2
 80058d8:	f8d8 0000 	ldr.w	r0, [r8]
 80058dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80058e0:	6803      	ldr	r3, [r0, #0]
 80058e2:	689b      	ldr	r3, [r3, #8]
 80058e4:	4798      	blx	r3
 80058e6:	f8d9 3000 	ldr.w	r3, [r9]
 80058ea:	429c      	cmp	r4, r3
 80058ec:	d3f4      	bcc.n	80058d8 <main+0x5d8>
 80058ee:	482d      	ldr	r0, [pc, #180]	; (80059a4 <main+0x6a4>)
 80058f0:	f7fa ff5e 	bl	80007b0 <test_println>
 80058f4:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 80058f8:	463d      	mov	r5, r7
 80058fa:	685b      	ldr	r3, [r3, #4]
 80058fc:	2b00      	cmp	r3, #0
 80058fe:	f47f af75 	bne.w	80057ec <main+0x4ec>
 8005902:	9e04      	ldr	r6, [sp, #16]
 8005904:	2e00      	cmp	r6, #0
 8005906:	d05b      	beq.n	80059c0 <main+0x6c0>
 8005908:	9a05      	ldr	r2, [sp, #20]
 800590a:	6833      	ldr	r3, [r6, #0]
 800590c:	4611      	mov	r1, r2
 800590e:	f851 2f04 	ldr.w	r2, [r1, #4]!
 8005912:	9204      	str	r2, [sp, #16]
 8005914:	9105      	str	r1, [sp, #20]
 8005916:	e762      	b.n	80057de <main+0x4de>
 8005918:	200008b8 	.word	0x200008b8
 800591c:	080026a1 	.word	0x080026a1
 8005920:	20001230 	.word	0x20001230
 8005924:	40020800 	.word	0x40020800
 8005928:	08005cb0 	.word	0x08005cb0
 800592c:	08005e38 	.word	0x08005e38
 8005930:	08005d50 	.word	0x08005d50
 8005934:	08005e54 	.word	0x08005e54
 8005938:	08005e58 	.word	0x08005e58
 800593c:	08005d64 	.word	0x08005d64
 8005940:	08005e60 	.word	0x08005e60
 8005944:	08005d78 	.word	0x08005d78
 8005948:	08005e78 	.word	0x08005e78
 800594c:	08005d8c 	.word	0x08005d8c
 8005950:	08005ec0 	.word	0x08005ec0
 8005954:	08005da0 	.word	0x08005da0
 8005958:	08005ec8 	.word	0x08005ec8
 800595c:	08005db4 	.word	0x08005db4
 8005960:	08005ed4 	.word	0x08005ed4
 8005964:	08005dc8 	.word	0x08005dc8
 8005968:	08005eec 	.word	0x08005eec
 800596c:	08005ddc 	.word	0x08005ddc
 8005970:	08006044 	.word	0x08006044
 8005974:	08005f18 	.word	0x08005f18
 8005978:	080060b0 	.word	0x080060b0
 800597c:	080060a0 	.word	0x080060a0
 8005980:	200011a0 	.word	0x200011a0
 8005984:	080067f0 	.word	0x080067f0
 8005988:	08005df0 	.word	0x08005df0
 800598c:	08005e00 	.word	0x08005e00
 8005990:	08005f3c 	.word	0x08005f3c
 8005994:	200011e0 	.word	0x200011e0
 8005998:	08005e04 	.word	0x08005e04
 800599c:	20000aac 	.word	0x20000aac
 80059a0:	08005e1c 	.word	0x08005e1c
 80059a4:	08005f40 	.word	0x08005f40
 80059a8:	20000a80 	.word	0x20000a80
 80059ac:	200011f0 	.word	0x200011f0
 80059b0:	20000b04 	.word	0x20000b04
 80059b4:	200011cc 	.word	0x200011cc
 80059b8:	480f      	ldr	r0, [pc, #60]	; (80059f8 <main+0x6f8>)
 80059ba:	f7fa fef9 	bl	80007b0 <test_println>
 80059be:	e799      	b.n	80058f4 <main+0x5f4>
 80059c0:	f7fa fe2e 	bl	8000620 <print_line>
 80059c4:	4c0d      	ldr	r4, [pc, #52]	; (80059fc <main+0x6fc>)
 80059c6:	480e      	ldr	r0, [pc, #56]	; (8005a00 <main+0x700>)
 80059c8:	f7fa fef2 	bl	80007b0 <test_println>
 80059cc:	2146      	movs	r1, #70	; 0x46
 80059ce:	f8d8 0000 	ldr.w	r0, [r8]
 80059d2:	6803      	ldr	r3, [r0, #0]
 80059d4:	689b      	ldr	r3, [r3, #8]
 80059d6:	4798      	blx	r3
 80059d8:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80059dc:	2900      	cmp	r1, #0
 80059de:	d1f6      	bne.n	80059ce <main+0x6ce>
 80059e0:	4b08      	ldr	r3, [pc, #32]	; (8005a04 <main+0x704>)
 80059e2:	781b      	ldrb	r3, [r3, #0]
 80059e4:	b91b      	cbnz	r3, 80059ee <main+0x6ee>
 80059e6:	4808      	ldr	r0, [pc, #32]	; (8005a08 <main+0x708>)
 80059e8:	f7fa fee2 	bl	80007b0 <test_println>
 80059ec:	e666      	b.n	80056bc <main+0x3bc>
 80059ee:	4807      	ldr	r0, [pc, #28]	; (8005a0c <main+0x70c>)
 80059f0:	f7fa fede 	bl	80007b0 <test_println>
 80059f4:	e662      	b.n	80056bc <main+0x3bc>
 80059f6:	bf00      	nop
 80059f8:	08005f44 	.word	0x08005f44
 80059fc:	08005e20 	.word	0x08005e20
 8005a00:	08005cb0 	.word	0x08005cb0
 8005a04:	200011a0 	.word	0x200011a0
 8005a08:	08005f50 	.word	0x08005f50
 8005a0c:	08005f58 	.word	0x08005f58

08005a10 <__early_init>:
 8005a10:	4b2c      	ldr	r3, [pc, #176]	; (8005ac4 <__early_init+0xb4>)
 8005a12:	4a2d      	ldr	r2, [pc, #180]	; (8005ac8 <__early_init+0xb8>)
 8005a14:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
 8005a18:	6259      	str	r1, [r3, #36]	; 0x24
 8005a1a:	6853      	ldr	r3, [r2, #4]
 8005a1c:	06d9      	lsls	r1, r3, #27
 8005a1e:	d4fc      	bmi.n	8005a1a <__early_init+0xa>
 8005a20:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8005a24:	4928      	ldr	r1, [pc, #160]	; (8005ac8 <__early_init+0xb8>)
 8005a26:	6013      	str	r3, [r2, #0]
 8005a28:	684b      	ldr	r3, [r1, #4]
 8005a2a:	f013 0310 	ands.w	r3, r3, #16
 8005a2e:	d1fb      	bne.n	8005a28 <__early_init+0x18>
 8005a30:	4924      	ldr	r1, [pc, #144]	; (8005ac4 <__early_init+0xb4>)
 8005a32:	608b      	str	r3, [r1, #8]
 8005a34:	684b      	ldr	r3, [r1, #4]
 8005a36:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8005a3a:	f443 4320 	orr.w	r3, r3, #40960	; 0xa000
 8005a3e:	f44f 7080 	mov.w	r0, #256	; 0x100
 8005a42:	604b      	str	r3, [r1, #4]
 8005a44:	460a      	mov	r2, r1
 8005a46:	6008      	str	r0, [r1, #0]
 8005a48:	6813      	ldr	r3, [r2, #0]
 8005a4a:	059b      	lsls	r3, r3, #22
 8005a4c:	d5fc      	bpl.n	8005a48 <__early_init+0x38>
 8005a4e:	6813      	ldr	r3, [r2, #0]
 8005a50:	491c      	ldr	r1, [pc, #112]	; (8005ac4 <__early_init+0xb4>)
 8005a52:	f043 0301 	orr.w	r3, r3, #1
 8005a56:	6013      	str	r3, [r2, #0]
 8005a58:	680b      	ldr	r3, [r1, #0]
 8005a5a:	0798      	lsls	r0, r3, #30
 8005a5c:	d5fc      	bpl.n	8005a58 <__early_init+0x48>
 8005a5e:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8005a60:	4a18      	ldr	r2, [pc, #96]	; (8005ac4 <__early_init+0xb4>)
 8005a62:	f043 0301 	orr.w	r3, r3, #1
 8005a66:	634b      	str	r3, [r1, #52]	; 0x34
 8005a68:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005a6a:	0799      	lsls	r1, r3, #30
 8005a6c:	d5fc      	bpl.n	8005a68 <__early_init+0x58>
 8005a6e:	6891      	ldr	r1, [r2, #8]
 8005a70:	4b14      	ldr	r3, [pc, #80]	; (8005ac4 <__early_init+0xb4>)
 8005a72:	f441 0108 	orr.w	r1, r1, #8912896	; 0x880000
 8005a76:	6091      	str	r1, [r2, #8]
 8005a78:	6811      	ldr	r1, [r2, #0]
 8005a7a:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
 8005a7e:	6011      	str	r1, [r2, #0]
 8005a80:	681a      	ldr	r2, [r3, #0]
 8005a82:	0192      	lsls	r2, r2, #6
 8005a84:	d5fc      	bpl.n	8005a80 <__early_init+0x70>
 8005a86:	681a      	ldr	r2, [r3, #0]
 8005a88:	601a      	str	r2, [r3, #0]
 8005a8a:	689a      	ldr	r2, [r3, #8]
 8005a8c:	609a      	str	r2, [r3, #8]
 8005a8e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005a90:	4a0e      	ldr	r2, [pc, #56]	; (8005acc <__early_init+0xbc>)
 8005a92:	6359      	str	r1, [r3, #52]	; 0x34
 8005a94:	2004      	movs	r0, #4
 8005a96:	2107      	movs	r1, #7
 8005a98:	6010      	str	r0, [r2, #0]
 8005a9a:	6011      	str	r1, [r2, #0]
 8005a9c:	6899      	ldr	r1, [r3, #8]
 8005a9e:	f041 0103 	orr.w	r1, r1, #3
 8005aa2:	f5a2 6280 	sub.w	r2, r2, #1024	; 0x400
 8005aa6:	6099      	str	r1, [r3, #8]
 8005aa8:	6893      	ldr	r3, [r2, #8]
 8005aaa:	f003 030c 	and.w	r3, r3, #12
 8005aae:	2b0c      	cmp	r3, #12
 8005ab0:	d1fa      	bne.n	8005aa8 <__early_init+0x98>
 8005ab2:	6a13      	ldr	r3, [r2, #32]
 8005ab4:	f043 0301 	orr.w	r3, r3, #1
 8005ab8:	6213      	str	r3, [r2, #32]
 8005aba:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8005abc:	f043 0301 	orr.w	r3, r3, #1
 8005ac0:	62d3      	str	r3, [r2, #44]	; 0x2c
 8005ac2:	4770      	bx	lr
 8005ac4:	40023800 	.word	0x40023800
 8005ac8:	40007000 	.word	0x40007000
 8005acc:	40023c00 	.word	0x40023c00

08005ad0 <chThdExit>:
 8005ad0:	b538      	push	{r3, r4, r5, lr}
 8005ad2:	2220      	movs	r2, #32
 8005ad4:	4603      	mov	r3, r0
 8005ad6:	f382 8811 	msr	BASEPRI, r2
 8005ada:	4a0e      	ldr	r2, [pc, #56]	; (8005b14 <chThdExit+0x44>)
 8005adc:	6994      	ldr	r4, [r2, #24]
 8005ade:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005ae0:	6223      	str	r3, [r4, #32]
 8005ae2:	f104 0524 	add.w	r5, r4, #36	; 0x24
 8005ae6:	42a8      	cmp	r0, r5
 8005ae8:	d006      	beq.n	8005af8 <chThdExit+0x28>
 8005aea:	6803      	ldr	r3, [r0, #0]
 8005aec:	6263      	str	r3, [r4, #36]	; 0x24
 8005aee:	f7fb f8a7 	bl	8000c40 <chSchReadyI>
 8005af2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005af4:	42a8      	cmp	r0, r5
 8005af6:	d1f8      	bne.n	8005aea <chThdExit+0x1a>
 8005af8:	7f63      	ldrb	r3, [r4, #29]
 8005afa:	079b      	lsls	r3, r3, #30
 8005afc:	d104      	bne.n	8005b08 <chThdExit+0x38>
 8005afe:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 8005b02:	611a      	str	r2, [r3, #16]
 8005b04:	6922      	ldr	r2, [r4, #16]
 8005b06:	6153      	str	r3, [r2, #20]
 8005b08:	200f      	movs	r0, #15
 8005b0a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005b0e:	f7fb bf27 	b.w	8001960 <chSchGoSleepS>
 8005b12:	bf00      	nop
 8005b14:	20000930 	.word	0x20000930
	...

08005b20 <thread1.lto_priv.71>:
 8005b20:	f7ff bfd6 	b.w	8005ad0 <chThdExit>
	...

08005b30 <chSchDoReschedule>:
 8005b30:	f7fb bcae 	b.w	8001490 <chSchDoRescheduleAhead>
	...

08005b40 <__default_exit>:
 8005b40:	e7fe      	b.n	8005b40 <__default_exit>
 8005b42:	bf00      	nop
	...

08005b50 <__late_init>:
 8005b50:	4770      	bx	lr
 8005b52:	bf00      	nop
	...
 8005b60:	6e696c62 	.word	0x6e696c62
 8005b64:	0072656b 	.word	0x0072656b
	...
 8005b70:	61686e75 	.word	0x61686e75
 8005b74:	656c646e 	.word	0x656c646e
 8005b78:	78652064 	.word	0x78652064
 8005b7c:	74706563 	.word	0x74706563
 8005b80:	006e6f69 	.word	0x006e6f69
	...
 8005b90:	202d2d2d 	.word	0x202d2d2d
 8005b94:	726f6353 	.word	0x726f6353
 8005b98:	203a2065 	.word	0x203a2065
 8005b9c:	00000000 	.word	0x00000000
 8005ba0:	6d697420 	.word	0x6d697420
 8005ba4:	2f737265 	.word	0x2f737265
 8005ba8:	00000053 	.word	0x00000053
 8005bac:	00000000 	.word	0x00000000
 8005bb0:	69617720 	.word	0x69617720
 8005bb4:	69732b74 	.word	0x69732b74
 8005bb8:	6c616e67 	.word	0x6c616e67
 8005bbc:	0000532f 	.word	0x0000532f
 8005bc0:	636f6c20 	.word	0x636f6c20
 8005bc4:	6e752b6b 	.word	0x6e752b6b
 8005bc8:	6b636f6c 	.word	0x6b636f6c
 8005bcc:	0000532f 	.word	0x0000532f
 8005bd0:	202d2d2d 	.word	0x202d2d2d
 8005bd4:	74737953 	.word	0x74737953
 8005bd8:	203a6d65 	.word	0x203a6d65
 8005bdc:	00000000 	.word	0x00000000
 8005be0:	74796220 	.word	0x74796220
 8005be4:	00007365 	.word	0x00007365
 8005be8:	202d2d2d 	.word	0x202d2d2d
 8005bec:	65726854 	.word	0x65726854
 8005bf0:	203a6461 	.word	0x203a6461
 8005bf4:	00000000 	.word	0x00000000
 8005bf8:	202d2d2d 	.word	0x202d2d2d
 8005bfc:	656d6954 	.word	0x656d6954
 8005c00:	203a2072 	.word	0x203a2072
 8005c04:	00000000 	.word	0x00000000
 8005c08:	202d2d2d 	.word	0x202d2d2d
 8005c0c:	616d6553 	.word	0x616d6553
 8005c10:	203a6870 	.word	0x203a6870
 8005c14:	00000000 	.word	0x00000000
 8005c18:	202d2d2d 	.word	0x202d2d2d
 8005c1c:	6e657645 	.word	0x6e657645
 8005c20:	203a5374 	.word	0x203a5374
 8005c24:	00000000 	.word	0x00000000
 8005c28:	202d2d2d 	.word	0x202d2d2d
 8005c2c:	6e657645 	.word	0x6e657645
 8005c30:	203a4c74 	.word	0x203a4c74
 8005c34:	00000000 	.word	0x00000000
 8005c38:	202d2d2d 	.word	0x202d2d2d
 8005c3c:	6574754d 	.word	0x6574754d
 8005c40:	203a2078 	.word	0x203a2078
 8005c44:	00000000 	.word	0x00000000
 8005c48:	202d2d2d 	.word	0x202d2d2d
 8005c4c:	646e6f43 	.word	0x646e6f43
 8005c50:	203a2e56 	.word	0x203a2e56
 8005c54:	00000000 	.word	0x00000000
 8005c58:	202d2d2d 	.word	0x202d2d2d
 8005c5c:	75657551 	.word	0x75657551
 8005c60:	203a2065 	.word	0x203a2065
 8005c64:	00000000 	.word	0x00000000
 8005c68:	202d2d2d 	.word	0x202d2d2d
 8005c6c:	6c69614d 	.word	0x6c69614d
 8005c70:	203a2e42 	.word	0x203a2e42
	...
 8005c80:	67736d20 	.word	0x67736d20
 8005c84:	2c532f73 	.word	0x2c532f73
 8005c88:	00000020 	.word	0x00000020
 8005c8c:	00000000 	.word	0x00000000
 8005c90:	72687420 	.word	0x72687420
 8005c94:	73646165 	.word	0x73646165
 8005c98:	0000532f 	.word	0x0000532f
 8005c9c:	00000000 	.word	0x00000000
 8005ca0:	73657220 	.word	0x73657220
 8005ca4:	64656863 	.word	0x64656863
 8005ca8:	73656c75 	.word	0x73656c75
 8005cac:	202c532f 	.word	0x202c532f
	...
 8005cc0:	78746320 	.word	0x78746320
 8005cc4:	2f637773 	.word	0x2f637773
 8005cc8:	00000053 	.word	0x00000053
 8005ccc:	00000000 	.word	0x00000000
 8005cd0:	74796220 	.word	0x74796220
 8005cd4:	532f7365 	.word	0x532f7365
	...

08005ce0 <ch_debug>:
 8005ce0:	6e69616d 18011600 08440204 1814100c     main......D.....
 8005cf0:	1e1d1c00 00000000 00000000 00000000     ................
 8005d00:	00004241 00000000 00000000 00000000     AB..............
 8005d10:	00000042 00000043 00000044 00000000     B...C...D.......
 8005d20:	00000041 00000000 00000000 00000000     A...............

08005d30 <evhndl>:
 8005d30:	08000781 08000771 08000761 00000000     ....q...a.......
 8005d40:	00434241 00000000 00000000 00000000     ABC.............
 8005d50:	202a2a2a 6e72654b 203a6c65 20202020     *** Kernel:     
 8005d60:	00002020 202a2a2a 706d6f43 64656c69       ..*** Compiled
 8005d70:	2020203a 00002020 202a2a2a 706d6f43     :     ..*** Comp
 8005d80:	72656c69 2020203a 00002020 202a2a2a     iler:     ..*** 
 8005d90:	68637241 63657469 65727574 0000203a     Architecture: ..
 8005da0:	202a2a2a 65726f43 72615620 746e6169     *** Core Variant
 8005db0:	0000203a 202a2a2a 74726f50 666e4920     : ..*** Port Inf
 8005dc0:	20203a6f 00002020 202a2a2a 74616c50     o:    ..*** Plat
 8005dd0:	6d726f66 2020203a 00002020 202a2a2a     form:     ..*** 
 8005de0:	74736554 616f4220 203a6472 00002020     Test Board:   ..
 8005df0:	202d2d2d 74736554 73614320 00002065     --- Test Case ..
 8005e00:	00002820 202d2d2d 75736552 203a746c      (..--- Result: 
 8005e10:	4c494146 20455255 00002328 00005b20     FAILURE (#.. [..
 8005e20:	616e6946 6572206c 746c7573 0000203a     Final result: ..
 8005e30:	656c6469 00000000 202a2a2a 62696843     idle....*** Chib
 8005e40:	2f534f69 74205452 20747365 74697573     iOS/RT test suit
 8005e50:	00000065 002a2a2a 2e302e33 00000030     e...***.3.0.0...
 8005e60:	20727041 32203620 20383130 3631202d     Apr  6 2018 - 16
 8005e70:	3a31303a 00003933 20434347 2e322e37     :01:39..GCC 7.2.
 8005e80:	30322031 39303731 28203430 656c6572     1 20170904 (rele
 8005e90:	29657361 52415b20 6d652f4d 64646562     ase) [ARM/embedd
 8005ea0:	372d6465 6172622d 2068636e 69766572     ed-7-branch revi
 8005eb0:	6e6f6973 35353220 5d343032 00000000     sion 255204]....
 8005ec0:	764d5241 004d2d37 74726f43 4d2d7865     ARMv7-M.Cortex-M
 8005ed0:	00000033 61766441 6465636e 72656b20     3...Advanced ker
 8005ee0:	206c656e 65646f6d 00000000 334d5453     nel mode....STM3
 8005ef0:	78314c32 6c552078 20617274 20776f4c     2L1xx Ultra Low 
 8005f00:	65776f50 654d2072 6d756964 6e654420     Power Medium Den
 8005f10:	79746973 00000000 694d5453 656f7263     sity....STMicroe
 8005f20:	7463656c 696e6f72 4e207363 454c4355     lectronics NUCLE
 8005f30:	314c2d4f 45523235 00000000 00000029     O-L152RE....)...
 8005f40:	0000295d 202d2d2d 75736552 203a746c     ])..--- Result: 
 8005f50:	43435553 00535345 4c494146 00455255     SUCCESS.FAILURE.
 8005f60:	44434241 00000045 00000000 00000000     ABCDE...........

08005f70 <patternbmk>:
 8005f70:	080065c0 08006610 08006620 08006630     .e...f.. f..0f..
 8005f80:	08006640 08006650 08006660 08006670     @f..Pf..`f..pf..
 8005f90:	08006680 080065d0 080065e0 080065f0     .f...e...e...e..
 8005fa0:	08006600 00000000 00000000 00000000     .f..............

08005fb0 <patterndyn>:
 8005fb0:	08006690 080066a0 080066b0 00000000     .f...f...f......

08005fc0 <patternevt>:
 8005fc0:	080066c0 080066d0 080066e0 00000000     .f...f...f......

08005fd0 <patternheap>:
 8005fd0:	080066f0 00000000 00000000 00000000     .f..............

08005fe0 <patternmbox>:
 8005fe0:	08006700 00000000 00000000 00000000     .g..............

08005ff0 <patternmsg>:
 8005ff0:	08006710 00000000 00000000 00000000     .g..............

08006000 <patternmtx>:
 8006000:	08006720 08006730 08006740 08006750      g..0g..@g..Pg..
 8006010:	08006760 08006770 00000000 00000000     `g..pg..........

08006020 <patternpools>:
 8006020:	08006780 00000000 00000000 00000000     .g..............

08006030 <patternqueues>:
 8006030:	08006790 080067a0 00000000 00000000     .g...g..........

08006040 <patterns>:
 8006040:	080060a0 080060b0 08006080 08006000     .`...`...`...`..
 8006050:	08005ff0 08005fe0 08005fc0 08005fd0     ._..._..._..._..
 8006060:	08006020 08005fb0 08006030 08005f70      `..._..0`..p_..
	...

08006080 <patternsem>:
 8006080:	080067b0 080067c0 080067d0 080067e0     .g...g...g...g..
	...

080060a0 <patternsys>:
 80060a0:	080067f0 08006800 08006810 00000000     .g...h...h......

080060b0 <patternthd>:
 80060b0:	08006820 08006830 08006840 08006850      h..0h..@h..Ph..
	...
 80060d0:	00000a0d 00000000 00000000 00000000     ................
 80060e0:	44434241 00000000 00000000 00000000     ABCD............
 80060f0:	636e6542 72616d68 52202c6b 66204d41     Benchmark, RAM f
 8006100:	70746f6f 746e6972 00000000 636e6542     ootprint....Benc
 8006110:	72616d68 6d202c6b 78657475 6c207365     hmark, mutexes l
 8006120:	2f6b636f 6f6c6e75 00006b63 636e6542     ock/unlock..Benc
 8006130:	72616d68 73202c6b 70616d65 65726f68     hmark, semaphore
 8006140:	61772073 732f7469 616e6769 0000006c     s wait/signal...
 8006150:	636e6542 72616d68 76202c6b 75747269     Benchmark, virtu
 8006160:	74206c61 72656d69 65732073 65722f74     al timers set/re
 8006170:	00746573 636e6542 72616d68 49202c6b     set.Benchmark, I
 8006180:	51204f2f 65756575 68742073 67756f72     /O Queues throug
 8006190:	74757068 00000000 636e6542 72616d68     hput....Benchmar
 80061a0:	72202c6b 646e756f 626f7220 63206e69     k, round robin c
 80061b0:	65746e6f 73207478 63746977 676e6968     ontext switching
 80061c0:	00000000 636e6542 72616d68 6d202c6b     ....Benchmark, m
 80061d0:	20737361 63736572 75646568 202c656c     ass reschedule, 
 80061e0:	68742035 64616572 00000073 636e6542     5 threads...Benc
 80061f0:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8006200:	61657263 6f206574 00796c6e 636e6542     create only.Benc
 8006210:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8006220:	6c6c7566 63796320 0000656c 636e6542     full cycle..Benc
 8006230:	72616d68 63202c6b 65746e6f 73207478     hmark, context s
 8006240:	63746977 00000068 636e6542 72616d68     witch...Benchmar
 8006250:	6d202c6b 61737365 20736567 00003323     k, messages #3..
 8006260:	636e6542 72616d68 6d202c6b 61737365     Benchmark, messa
 8006270:	20736567 00003223 636e6542 72616d68     ges #2..Benchmar
 8006280:	6d202c6b 61737365 20736567 00003123     k, messages #1..
 8006290:	75657551 202c7365 7074756f 71207475     Queues, output q
 80062a0:	65756575 00000073 75657551 202c7365     ueues...Queues, 
 80062b0:	75706e69 75712074 73657565 00000000     input queues....
 80062c0:	616e7944 2063696d 73495041 6572202c     Dynamic APIs, re
 80062d0:	74736967 61207972 7220646e 72656665     gistry and refer
 80062e0:	65636e65 00000073 616e7944 2063696d     ences...Dynamic 
 80062f0:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8006300:	69746165 66206e6f 206d6f72 6f6d656d     eation from memo
 8006310:	70207972 006c6f6f 616e7944 2063696d     ry pool.Dynamic 
 8006320:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8006330:	69746165 66206e6f 206d6f72 70616568     eation from heap
 8006340:	00000000 6f6d654d 50207972 736c6f6f     ....Memory Pools
 8006350:	7571202c 2f657565 75716564 00657565     , queue/dequeue.
 8006360:	70616548 6c61202c 61636f6c 6e6f6974     Heap, allocation
 8006370:	646e6120 61726620 6e656d67 69746174      and fragmentati
 8006380:	74206e6f 00747365 6e657645 202c7374     on test.Events, 
 8006390:	656d6974 7374756f 00000000 6e657645     timeouts....Even
 80063a0:	202c7374 74696177 646e6120 6f726220     ts, wait and bro
 80063b0:	61636461 00007473 6e657645 202c7374     adcast..Events, 
 80063c0:	69676572 61727473 6e6f6974 646e6120     registration and
 80063d0:	73696420 63746170 00000068 6c69614d      dispatch...Mail
 80063e0:	65786f62 71202c73 69756575 6120676e     boxes, queuing a
 80063f0:	7420646e 6f656d69 00737475 7373654d     nd timeouts.Mess
 8006400:	73656761 6f6c202c 0000706f 646e6f43     ages, loop..Cond
 8006410:	2c726156 6f6f6220 74207473 00747365     Var, boost test.
 8006420:	646e6f43 2c726156 6f726220 61636461     CondVar, broadca
 8006430:	74207473 00747365 646e6f43 2c726156     st test.CondVar,
 8006440:	67697320 206c616e 74736574 00000000      signal test....
 8006450:	6574754d 2c736578 61747320 00737574     Mutexes, status.
 8006460:	6574754d 2c736578 69727020 7469726f     Mutexes, priorit
 8006470:	65722079 6e727574 00000000 6574754d     y return....Mute
 8006480:	2c736578 69727020 7469726f 6e652079     xes, priority en
 8006490:	75657571 20676e69 74736574 00000000     queuing test....
 80064a0:	616e6942 53207972 70616d65 65726f68     Binary Semaphore
 80064b0:	66202c73 74636e75 616e6f69 7974696c     s, functionality
 80064c0:	00000000 616d6553 726f6870 202c7365     ....Semaphores, 
 80064d0:	6d6f7461 73206369 616e6769 61772d6c     atomic signal-wa
 80064e0:	00007469 616d6553 726f6870 202c7365     it..Semaphores, 
 80064f0:	656d6974 0074756f 616d6553 726f6870     timeout.Semaphor
 8006500:	202c7365 75716e65 6e697565 00000067     es, enqueuing...
 8006510:	65726854 2c736461 6c656420 00737961     Threads, delays.
 8006520:	65726854 2c736461 69727020 7469726f     Threads, priorit
 8006530:	68632079 65676e61 00000000 65726854     y change....Thre
 8006540:	2c736461 716e6520 69756575 7420676e     ads, enqueuing t
 8006550:	20747365 00003223 65726854 2c736461     est #2..Threads,
 8006560:	716e6520 69756575 7420676e 20747365      enqueuing test 
 8006570:	00003123 74737953 202c6d65 65746e69     #1..System, inte
 8006580:	74697267 00000079 74737953 202c6d65     grity...System, 
 8006590:	65746e69 70757272 68207374 6c646e61     interrupts handl
 80065a0:	00676e69 74737953 202c6d65 74697263     ing.System, crit
 80065b0:	6c616369 6e6f7a20 00007365 00000000     ical zones......

080065c0 <testbmk1>:
 80065c0:	08006278 00000000 00000000 08003e41     xb..........A>..

080065d0 <testbmk10>:
 80065d0:	08006150 00000000 00000000 08002861     Pa..........a(..

080065e0 <testbmk11>:
 80065e0:	0800612c 080002e1 00000000 08003701     ,a...........7..

080065f0 <testbmk12>:
 80065f0:	0800610c 080002d1 00000000 08002d71     .a..........q-..

08006600 <testbmk13>:
 8006600:	080060f0 00000000 00000000 08001311     .`..............

08006610 <testbmk2>:
 8006610:	08006260 00000000 00000000 08003dd1     `b...........=..

08006620 <testbmk3>:
 8006620:	08006248 00000000 00000000 08003cf1     Hb...........<..

08006630 <testbmk4>:
 8006630:	0800622c 00000000 00000000 08003c41     ,b..........A<..

08006640 <testbmk5>:
 8006640:	0800620c 00000000 00000000 08003981     .b...........9..

08006650 <testbmk6>:
 8006650:	080061ec 00000000 00000000 080029a1     .a...........)..

08006660 <testbmk7>:
 8006660:	080061c4 08000311 00000000 08003b11     .a...........;..

08006670 <testbmk8>:
 8006670:	08006198 00000000 00000000 08003a31     .a..........1:..

08006680 <testbmk9>:
 8006680:	08006174 00000000 00000000 080028f1     ta...........(..

08006690 <testdyn1>:
 8006690:	08006318 080003c1 00000000 080044c1     .c...........D..

080066a0 <testdyn2>:
 80066a0:	080062e8 080003a1 00000000 080043c1     .b...........C..

080066b0 <testdyn3>:
 80066b0:	080062c0 080003f1 00000000 08003331     .b..........13..

080066c0 <testevt1>:
 80066c0:	080063b8 08000461 00000000 08000a91     .c..a...........

080066d0 <testevt2>:
 80066d0:	0800639c 08000481 00000000 08004591     .c...........E..

080066e0 <testevt3>:
 80066e0:	08006388 08000471 00000000 08001bd1     .c..q...........

080066f0 <testheap1>:
 80066f0:	08006360 08000431 00000000 08003461     `c..1.......a4..

08006700 <testmbox1>:
 8006700:	080063dc 08000491 00000000 08001e61     .c..........a...

08006710 <testmsg1>:
 8006710:	080063fc 00000000 00000000 08002b41     .c..........A+..

08006720 <testmtx1>:
 8006720:	0800647c 08000551 00000000 08004d31     |d..Q.......1M..

08006730 <testmtx4>:
 8006730:	08006460 08000531 00000000 08004ae1     `d..1........J..

08006740 <testmtx5>:
 8006740:	08006450 08000561 00000000 08002f01     Pd..a......../..

08006750 <testmtx6>:
 8006750:	08006438 08000501 00000000 08004a01     8d...........J..

08006760 <testmtx7>:
 8006760:	08006420 08000521 00000000 08004911      d..!........I..

08006770 <testmtx8>:
 8006770:	0800640c 080004d1 00000000 08004881     .d...........H..

08006780 <testpools1>:
 8006780:	08006344 08000411 00000000 08000981     Dc..............

08006790 <testqueues1>:
 8006790:	080062a8 08000371 00000000 08004111     .b..q........A..

080067a0 <testqueues2>:
 80067a0:	08006290 08000341 00000000 08003eb1     .b..A........>..

080067b0 <testsem1>:
 80067b0:	080064f8 08000571 00000000 08004f81     .d..q........O..

080067c0 <testsem2>:
 80067c0:	080064e4 08000591 00000000 08004e21     .d..........!N..

080067d0 <testsem3>:
 80067d0:	080064c4 08000581 00000000 08001a01     .d..............

080067e0 <testsem4>:
 80067e0:	080064a0 00000000 00000000 080037a1     .d...........7..

080067f0 <testsys1>:
 80067f0:	080065a4 00000000 00000000 080026e1     .e...........&..

08006800 <testsys2>:
 8006800:	08006588 00000000 00000000 08000321     .e..........!...

08006810 <testsys3>:
 8006810:	08006574 00000000 00000000 08001261     te..........a...

08006820 <testthd1>:
 8006820:	08006558 00000000 00000000 08005231     Xe..........1R..

08006830 <testthd2>:
 8006830:	0800653c 00000000 00000000 080050f1     <e...........P..

08006840 <testthd3>:
 8006840:	08006520 00000000 00000000 080015b1      e..............

08006850 <testthd4>:
 8006850:	08006510 00000000 00000000 08002a11     .e...........*..

08006860 <vmt>:
 8006860:	080024d1 080025f1 08002551 08002671     .$...%..Q%..q&..
 8006870:	08002541 08002661 080024c1 080025e1     A%..a&...$...%..

08006880 <wa>:
 8006880:	20000b38 20000c80 20000dc8 20000f10     8.. ... ... ... 
 8006890:	20001058                                X.. 
