
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

08000140 <Reset_Handler>:
 8000140:	b672      	cpsid	i
 8000142:	4821      	ldr	r0, [pc, #132]	; (80001c8 <endfiniloop+0x6>)
 8000144:	f380 8809 	msr	PSP, r0
 8000148:	2002      	movs	r0, #2
 800014a:	f380 8814 	msr	CONTROL, r0
 800014e:	f3bf 8f6f 	isb	sy
 8000152:	f005 fc1d 	bl	8005990 <__early_init>
 8000156:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
 800015a:	491c      	ldr	r1, [pc, #112]	; (80001cc <endfiniloop+0xa>)
 800015c:	4a1c      	ldr	r2, [pc, #112]	; (80001d0 <endfiniloop+0xe>)

0800015e <msloop>:
 800015e:	4291      	cmp	r1, r2
 8000160:	bf3c      	itt	cc
 8000162:	f841 0b04 	strcc.w	r0, [r1], #4
 8000166:	e7fa      	bcc.n	800015e <msloop>
 8000168:	491a      	ldr	r1, [pc, #104]	; (80001d4 <endfiniloop+0x12>)
 800016a:	4a17      	ldr	r2, [pc, #92]	; (80001c8 <endfiniloop+0x6>)

0800016c <psloop>:
 800016c:	4291      	cmp	r1, r2
 800016e:	bf3c      	itt	cc
 8000170:	f841 0b04 	strcc.w	r0, [r1], #4
 8000174:	e7fa      	bcc.n	800016c <psloop>
 8000176:	4918      	ldr	r1, [pc, #96]	; (80001d8 <endfiniloop+0x16>)
 8000178:	4a18      	ldr	r2, [pc, #96]	; (80001dc <endfiniloop+0x1a>)
 800017a:	4b19      	ldr	r3, [pc, #100]	; (80001e0 <endfiniloop+0x1e>)

0800017c <dloop>:
 800017c:	429a      	cmp	r2, r3
 800017e:	bf3e      	ittt	cc
 8000180:	f851 0b04 	ldrcc.w	r0, [r1], #4
 8000184:	f842 0b04 	strcc.w	r0, [r2], #4
 8000188:	e7f8      	bcc.n	800017c <dloop>
 800018a:	2000      	movs	r0, #0
 800018c:	4915      	ldr	r1, [pc, #84]	; (80001e4 <endfiniloop+0x22>)
 800018e:	4a16      	ldr	r2, [pc, #88]	; (80001e8 <endfiniloop+0x26>)

08000190 <bloop>:
 8000190:	4291      	cmp	r1, r2
 8000192:	bf3c      	itt	cc
 8000194:	f841 0b04 	strcc.w	r0, [r1], #4
 8000198:	e7fa      	bcc.n	8000190 <bloop>
 800019a:	f005 fc71 	bl	8005a80 <__late_init>
 800019e:	4c13      	ldr	r4, [pc, #76]	; (80001ec <endfiniloop+0x2a>)
 80001a0:	4d13      	ldr	r5, [pc, #76]	; (80001f0 <endfiniloop+0x2e>)

080001a2 <initloop>:
 80001a2:	42ac      	cmp	r4, r5
 80001a4:	da03      	bge.n	80001ae <endinitloop>
 80001a6:	f854 1b04 	ldr.w	r1, [r4], #4
 80001aa:	4788      	blx	r1
 80001ac:	e7f9      	b.n	80001a2 <initloop>

080001ae <endinitloop>:
 80001ae:	f005 f8af 	bl	8005310 <main>
 80001b2:	4c10      	ldr	r4, [pc, #64]	; (80001f4 <endfiniloop+0x32>)
 80001b4:	4d10      	ldr	r5, [pc, #64]	; (80001f8 <endfiniloop+0x36>)

080001b6 <finiloop>:
 80001b6:	42ac      	cmp	r4, r5
 80001b8:	da03      	bge.n	80001c2 <endfiniloop>
 80001ba:	f854 1b04 	ldr.w	r1, [r4], #4
 80001be:	4788      	blx	r1
 80001c0:	e7f9      	b.n	80001b6 <finiloop>

080001c2 <endfiniloop>:
 80001c2:	f005 bc55 	b.w	8005a70 <__default_exit>
 80001c6:	0000      	.short	0x0000
 80001c8:	20000800 	.word	0x20000800
 80001cc:	20000000 	.word	0x20000000
 80001d0:	20000400 	.word	0x20000400
 80001d4:	20000400 	.word	0x20000400
 80001d8:	080067c8 	.word	0x080067c8
 80001dc:	20000800 	.word	0x20000800
 80001e0:	200008b8 	.word	0x200008b8
 80001e4:	200008b8 	.word	0x200008b8
 80001e8:	20001378 	.word	0x20001378
 80001ec:	08000140 	.word	0x08000140
 80001f0:	08000140 	.word	0x08000140
 80001f4:	08000140 	.word	0x08000140
 80001f8:	08000140 	.word	0x08000140
 80001fc:	00000000 	.word	0x00000000

08000200 <_port_switch>:
 8000200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000204:	f8c1 d00c 	str.w	sp, [r1, #12]
 8000208:	f8d0 d00c 	ldr.w	sp, [r0, #12]
 800020c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000210 <_port_thread_start>:
 8000210:	2300      	movs	r3, #0
 8000212:	f383 8811 	msr	BASEPRI, r3
 8000216:	4628      	mov	r0, r5
 8000218:	47a0      	blx	r4
 800021a:	2000      	movs	r0, #0
 800021c:	f005 fbf0 	bl	8005a00 <chThdExit>

08000220 <_port_switch_from_isr>:
 8000220:	f005 fc1e 	bl	8005a60 <chSchDoReschedule>

08000224 <_port_exit_from_isr>:
 8000224:	df00      	svc	0
 8000226:	e7fe      	b.n	8000226 <_port_exit_from_isr+0x2>
	...

08000230 <chTMStartMeasurementX.constprop.55>:
 8000230:	4b01      	ldr	r3, [pc, #4]	; (8000238 <chTMStartMeasurementX.constprop.55+0x8>)
 8000232:	685b      	ldr	r3, [r3, #4]
 8000234:	6083      	str	r3, [r0, #8]
 8000236:	4770      	bx	lr
 8000238:	e0001000 	.word	0xe0001000
 800023c:	00000000 	.word	0x00000000

08000240 <chEvtGetAndClearEvents.constprop.35>:
 8000240:	2320      	movs	r3, #32
 8000242:	f383 8811 	msr	BASEPRI, r3
 8000246:	2300      	movs	r3, #0
 8000248:	4a03      	ldr	r2, [pc, #12]	; (8000258 <chEvtGetAndClearEvents.constprop.35+0x18>)
 800024a:	6992      	ldr	r2, [r2, #24]
 800024c:	6b50      	ldr	r0, [r2, #52]	; 0x34
 800024e:	6353      	str	r3, [r2, #52]	; 0x34
 8000250:	f383 8811 	msr	BASEPRI, r3
 8000254:	4770      	bx	lr
 8000256:	bf00      	nop
 8000258:	20000930 	.word	0x20000930
 800025c:	00000000 	.word	0x00000000

08000260 <tmr>:
 8000260:	2201      	movs	r2, #1
 8000262:	4b01      	ldr	r3, [pc, #4]	; (8000268 <tmr+0x8>)
 8000264:	701a      	strb	r2, [r3, #0]
 8000266:	4770      	bx	lr
 8000268:	200011c8 	.word	0x200011c8
 800026c:	00000000 	.word	0x00000000

08000270 <_idle_thread>:
 8000270:	e7fe      	b.n	8000270 <_idle_thread>
 8000272:	bf00      	nop
	...

08000280 <chCoreAlloc>:
 8000280:	4603      	mov	r3, r0
 8000282:	2220      	movs	r2, #32
 8000284:	f382 8811 	msr	BASEPRI, r2
 8000288:	4908      	ldr	r1, [pc, #32]	; (80002ac <chCoreAlloc+0x2c>)
 800028a:	4a09      	ldr	r2, [pc, #36]	; (80002b0 <chCoreAlloc+0x30>)
 800028c:	6808      	ldr	r0, [r1, #0]
 800028e:	6812      	ldr	r2, [r2, #0]
 8000290:	3307      	adds	r3, #7
 8000292:	f023 0307 	bic.w	r3, r3, #7
 8000296:	1a12      	subs	r2, r2, r0
 8000298:	4293      	cmp	r3, r2
 800029a:	bf9a      	itte	ls
 800029c:	181b      	addls	r3, r3, r0
 800029e:	600b      	strls	r3, [r1, #0]
 80002a0:	2000      	movhi	r0, #0
 80002a2:	2300      	movs	r3, #0
 80002a4:	f383 8811 	msr	BASEPRI, r3
 80002a8:	4770      	bx	lr
 80002aa:	bf00      	nop
 80002ac:	20000b24 	.word	0x20000b24
 80002b0:	20000aa8 	.word	0x20000aa8
	...

080002c0 <notify2>:
 80002c0:	4a02      	ldr	r2, [pc, #8]	; (80002cc <notify2+0xc>)
 80002c2:	8993      	ldrh	r3, [r2, #12]
 80002c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002c8:	8193      	strh	r3, [r2, #12]
 80002ca:	4770      	bx	lr
 80002cc:	40004400 	.word	0x40004400

080002d0 <bmk12_setup>:
 80002d0:	2200      	movs	r2, #0
 80002d2:	4b02      	ldr	r3, [pc, #8]	; (80002dc <bmk12_setup+0xc>)
 80002d4:	609a      	str	r2, [r3, #8]
 80002d6:	e9c3 3300 	strd	r3, r3, [r3]
 80002da:	4770      	bx	lr
 80002dc:	20000b14 	.word	0x20000b14

080002e0 <bmk11_setup>:
 80002e0:	2201      	movs	r2, #1
 80002e2:	4b02      	ldr	r3, [pc, #8]	; (80002ec <bmk11_setup+0xc>)
 80002e4:	609a      	str	r2, [r3, #8]
 80002e6:	e9c3 3300 	strd	r3, r3, [r3]
 80002ea:	4770      	bx	lr
 80002ec:	20000b28 	.word	0x20000b28

080002f0 <notify>:
 80002f0:	4770      	bx	lr
 80002f2:	bf00      	nop
	...

08000300 <tmo>:
 8000300:	4770      	bx	lr
 8000302:	bf00      	nop
	...

08000310 <bmk7_setup>:
 8000310:	2200      	movs	r2, #0
 8000312:	4b02      	ldr	r3, [pc, #8]	; (800031c <bmk7_setup+0xc>)
 8000314:	609a      	str	r2, [r3, #8]
 8000316:	e9c3 3300 	strd	r3, r3, [r3]
 800031a:	4770      	bx	lr
 800031c:	20000b28 	.word	0x20000b28

08000320 <sys2_execute>:
 8000320:	2320      	movs	r3, #32
 8000322:	f383 8811 	msr	BASEPRI, r3
 8000326:	b662      	cpsie	i
 8000328:	b672      	cpsid	i
 800032a:	f383 8811 	msr	BASEPRI, r3
 800032e:	b662      	cpsie	i
 8000330:	2300      	movs	r3, #0
 8000332:	f383 8811 	msr	BASEPRI, r3
 8000336:	b662      	cpsie	i
 8000338:	4770      	bx	lr
 800033a:	bf00      	nop
 800033c:	0000      	movs	r0, r0
	...

08000340 <queues2_setup>:
 8000340:	b430      	push	{r4, r5}
 8000342:	2404      	movs	r4, #4
 8000344:	2100      	movs	r1, #0
 8000346:	4a07      	ldr	r2, [pc, #28]	; (8000364 <queues2_setup+0x24>)
 8000348:	4b07      	ldr	r3, [pc, #28]	; (8000368 <queues2_setup+0x28>)
 800034a:	4808      	ldr	r0, [pc, #32]	; (800036c <queues2_setup+0x2c>)
 800034c:	1915      	adds	r5, r2, r4
 800034e:	611d      	str	r5, [r3, #16]
 8000350:	609c      	str	r4, [r3, #8]
 8000352:	e9c3 3300 	strd	r3, r3, [r3]
 8000356:	bc30      	pop	{r4, r5}
 8000358:	60da      	str	r2, [r3, #12]
 800035a:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800035e:	e9c3 0107 	strd	r0, r1, [r3, #28]
 8000362:	4770      	bx	lr
 8000364:	20000b38 	.word	0x20000b38
 8000368:	20000888 	.word	0x20000888
 800036c:	080002f1 	.word	0x080002f1

08000370 <queues1_setup>:
 8000370:	2100      	movs	r1, #0
 8000372:	4a08      	ldr	r2, [pc, #32]	; (8000394 <queues1_setup+0x24>)
 8000374:	4b08      	ldr	r3, [pc, #32]	; (8000398 <queues1_setup+0x28>)
 8000376:	4809      	ldr	r0, [pc, #36]	; (800039c <queues1_setup+0x2c>)
 8000378:	b410      	push	{r4}
 800037a:	1d14      	adds	r4, r2, #4
 800037c:	611c      	str	r4, [r3, #16]
 800037e:	e9c3 3300 	strd	r3, r3, [r3]
 8000382:	60da      	str	r2, [r3, #12]
 8000384:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8000388:	61d8      	str	r0, [r3, #28]
 800038a:	6099      	str	r1, [r3, #8]
 800038c:	6219      	str	r1, [r3, #32]
 800038e:	bc10      	pop	{r4}
 8000390:	4770      	bx	lr
 8000392:	bf00      	nop
 8000394:	20000b38 	.word	0x20000b38
 8000398:	20000810 	.word	0x20000810
 800039c:	080002f1 	.word	0x080002f1

080003a0 <dyn2_setup>:
 80003a0:	2200      	movs	r2, #0
 80003a2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80003a6:	4b02      	ldr	r3, [pc, #8]	; (80003b0 <dyn2_setup+0x10>)
 80003a8:	601a      	str	r2, [r3, #0]
 80003aa:	e9c3 1201 	strd	r1, r2, [r3, #4]
 80003ae:	4770      	bx	lr
 80003b0:	20000b08 	.word	0x20000b08
	...

080003c0 <dyn1_setup>:
 80003c0:	b410      	push	{r4}
 80003c2:	2200      	movs	r2, #0
 80003c4:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 80003c8:	4b06      	ldr	r3, [pc, #24]	; (80003e4 <dyn1_setup+0x24>)
 80003ca:	4907      	ldr	r1, [pc, #28]	; (80003e8 <dyn1_setup+0x28>)
 80003cc:	f103 0010 	add.w	r0, r3, #16
 80003d0:	e9c1 2400 	strd	r2, r4, [r1]
 80003d4:	e9c3 0004 	strd	r0, r0, [r3, #16]
 80003d8:	601a      	str	r2, [r3, #0]
 80003da:	60da      	str	r2, [r3, #12]
 80003dc:	619a      	str	r2, [r3, #24]
 80003de:	6099      	str	r1, [r3, #8]
 80003e0:	bc10      	pop	{r4}
 80003e2:	4770      	bx	lr
 80003e4:	20000ab0 	.word	0x20000ab0
 80003e8:	20000b38 	.word	0x20000b38
 80003ec:	00000000 	.word	0x00000000

080003f0 <dyn3_setup>:
 80003f0:	f7ff bfe6 	b.w	80003c0 <dyn1_setup>
	...

08000400 <null_provider>:
 8000400:	2000      	movs	r0, #0
 8000402:	4770      	bx	lr
	...

08000410 <pools1_setup>:
 8000410:	2200      	movs	r2, #0
 8000412:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8000416:	4b02      	ldr	r3, [pc, #8]	; (8000420 <pools1_setup+0x10>)
 8000418:	601a      	str	r2, [r3, #0]
 800041a:	e9c3 1201 	strd	r1, r2, [r3, #4]
 800041e:	4770      	bx	lr
 8000420:	2000087c 	.word	0x2000087c
	...

08000430 <heap1_setup>:
 8000430:	b410      	push	{r4}
 8000432:	2200      	movs	r2, #0
 8000434:	f44f 64cc 	mov.w	r4, #1632	; 0x660
 8000438:	4b06      	ldr	r3, [pc, #24]	; (8000454 <heap1_setup+0x24>)
 800043a:	4907      	ldr	r1, [pc, #28]	; (8000458 <heap1_setup+0x28>)
 800043c:	f103 0010 	add.w	r0, r3, #16
 8000440:	e9c1 2400 	strd	r2, r4, [r1]
 8000444:	e9c3 0004 	strd	r0, r0, [r3, #16]
 8000448:	601a      	str	r2, [r3, #0]
 800044a:	60da      	str	r2, [r3, #12]
 800044c:	619a      	str	r2, [r3, #24]
 800044e:	6099      	str	r1, [r3, #8]
 8000450:	bc10      	pop	{r4}
 8000452:	4770      	bx	lr
 8000454:	200011a8 	.word	0x200011a8
 8000458:	20000b38 	.word	0x20000b38
 800045c:	00000000 	.word	0x00000000

08000460 <evt1_setup>:
 8000460:	f7ff beee 	b.w	8000240 <chEvtGetAndClearEvents.constprop.35>
	...

08000470 <evt3_setup>:
 8000470:	f7ff bff6 	b.w	8000460 <evt1_setup>
	...

08000480 <evt2_setup>:
 8000480:	f7ff bfee 	b.w	8000460 <evt1_setup>
	...

08000490 <mbox1_setup>:
 8000490:	b430      	push	{r4, r5}
 8000492:	2000      	movs	r0, #0
 8000494:	2405      	movs	r4, #5
 8000496:	4b0a      	ldr	r3, [pc, #40]	; (80004c0 <mbox1_setup+0x30>)
 8000498:	4a0a      	ldr	r2, [pc, #40]	; (80004c4 <mbox1_setup+0x34>)
 800049a:	f103 011c 	add.w	r1, r3, #28
 800049e:	f102 0514 	add.w	r5, r2, #20
 80004a2:	601a      	str	r2, [r3, #0]
 80004a4:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80004a8:	f103 0210 	add.w	r2, r3, #16
 80004ac:	605d      	str	r5, [r3, #4]
 80004ae:	625c      	str	r4, [r3, #36]	; 0x24
 80004b0:	e9c3 0106 	strd	r0, r1, [r3, #24]
 80004b4:	bc30      	pop	{r4, r5}
 80004b6:	6219      	str	r1, [r3, #32]
 80004b8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80004bc:	4770      	bx	lr
 80004be:	bf00      	nop
 80004c0:	20000854 	.word	0x20000854
 80004c4:	20000b38 	.word	0x20000b38
	...

080004d0 <mtx8_setup>:
 80004d0:	2000      	movs	r0, #0
 80004d2:	4a06      	ldr	r2, [pc, #24]	; (80004ec <mtx8_setup+0x1c>)
 80004d4:	4b06      	ldr	r3, [pc, #24]	; (80004f0 <mtx8_setup+0x20>)
 80004d6:	4907      	ldr	r1, [pc, #28]	; (80004f4 <mtx8_setup+0x24>)
 80004d8:	6090      	str	r0, [r2, #8]
 80004da:	e9c2 2200 	strd	r2, r2, [r2]
 80004de:	6098      	str	r0, [r3, #8]
 80004e0:	e9c3 3300 	strd	r3, r3, [r3]
 80004e4:	e9c1 1100 	strd	r1, r1, [r1]
 80004e8:	4770      	bx	lr
 80004ea:	bf00      	nop
 80004ec:	20000834 	.word	0x20000834
 80004f0:	20000844 	.word	0x20000844
 80004f4:	20000800 	.word	0x20000800
	...

08000500 <mtx6_setup>:
 8000500:	2100      	movs	r1, #0
 8000502:	4b04      	ldr	r3, [pc, #16]	; (8000514 <mtx6_setup+0x14>)
 8000504:	4a04      	ldr	r2, [pc, #16]	; (8000518 <mtx6_setup+0x18>)
 8000506:	6099      	str	r1, [r3, #8]
 8000508:	e9c3 3300 	strd	r3, r3, [r3]
 800050c:	e9c2 2200 	strd	r2, r2, [r2]
 8000510:	4770      	bx	lr
 8000512:	bf00      	nop
 8000514:	20000834 	.word	0x20000834
 8000518:	20000800 	.word	0x20000800
 800051c:	00000000 	.word	0x00000000

08000520 <mtx7_setup>:
 8000520:	f7ff bfee 	b.w	8000500 <mtx6_setup>
	...

08000530 <mtx4_setup>:
 8000530:	2100      	movs	r1, #0
 8000532:	4a04      	ldr	r2, [pc, #16]	; (8000544 <mtx4_setup+0x14>)
 8000534:	4b04      	ldr	r3, [pc, #16]	; (8000548 <mtx4_setup+0x18>)
 8000536:	6091      	str	r1, [r2, #8]
 8000538:	e9c2 2200 	strd	r2, r2, [r2]
 800053c:	6099      	str	r1, [r3, #8]
 800053e:	e9c3 3300 	strd	r3, r3, [r3]
 8000542:	4770      	bx	lr
 8000544:	20000834 	.word	0x20000834
 8000548:	20000844 	.word	0x20000844
 800054c:	00000000 	.word	0x00000000

08000550 <mtx1_setup>:
 8000550:	2200      	movs	r2, #0
 8000552:	4b02      	ldr	r3, [pc, #8]	; (800055c <mtx1_setup+0xc>)
 8000554:	609a      	str	r2, [r3, #8]
 8000556:	e9c3 3300 	strd	r3, r3, [r3]
 800055a:	4770      	bx	lr
 800055c:	20000834 	.word	0x20000834

08000560 <mtx5_setup>:
 8000560:	f7ff bff6 	b.w	8000550 <mtx1_setup>
	...

08000570 <sem1_setup>:
 8000570:	2200      	movs	r2, #0
 8000572:	4b02      	ldr	r3, [pc, #8]	; (800057c <sem1_setup+0xc>)
 8000574:	609a      	str	r2, [r3, #8]
 8000576:	e9c3 3300 	strd	r3, r3, [r3]
 800057a:	4770      	bx	lr
 800057c:	200008ac 	.word	0x200008ac

08000580 <sem3_setup>:
 8000580:	f7ff bff6 	b.w	8000570 <sem1_setup>
	...

08000590 <sem2_setup>:
 8000590:	f7ff bfee 	b.w	8000570 <sem1_setup>
	...

080005a0 <test_printn.part.1>:
 80005a0:	b320      	cbz	r0, 80005ec <test_printn.part.1+0x4c>
 80005a2:	b570      	push	{r4, r5, r6, lr}
 80005a4:	b084      	sub	sp, #16
 80005a6:	466d      	mov	r5, sp
 80005a8:	4e11      	ldr	r6, [pc, #68]	; (80005f0 <test_printn.part.1+0x50>)
 80005aa:	462c      	mov	r4, r5
 80005ac:	e000      	b.n	80005b0 <test_printn.part.1+0x10>
 80005ae:	4614      	mov	r4, r2
 80005b0:	4622      	mov	r2, r4
 80005b2:	fba6 1300 	umull	r1, r3, r6, r0
 80005b6:	08db      	lsrs	r3, r3, #3
 80005b8:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 80005bc:	eba0 0041 	sub.w	r0, r0, r1, lsl #1
 80005c0:	f100 0130 	add.w	r1, r0, #48	; 0x30
 80005c4:	b2c9      	uxtb	r1, r1
 80005c6:	f802 1b01 	strb.w	r1, [r2], #1
 80005ca:	4618      	mov	r0, r3
 80005cc:	2b00      	cmp	r3, #0
 80005ce:	d1ee      	bne.n	80005ae <test_printn.part.1+0xe>
 80005d0:	42aa      	cmp	r2, r5
 80005d2:	d909      	bls.n	80005e8 <test_printn.part.1+0x48>
 80005d4:	4e07      	ldr	r6, [pc, #28]	; (80005f4 <test_printn.part.1+0x54>)
 80005d6:	e001      	b.n	80005dc <test_printn.part.1+0x3c>
 80005d8:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
 80005dc:	6830      	ldr	r0, [r6, #0]
 80005de:	6803      	ldr	r3, [r0, #0]
 80005e0:	689b      	ldr	r3, [r3, #8]
 80005e2:	4798      	blx	r3
 80005e4:	42a5      	cmp	r5, r4
 80005e6:	d1f7      	bne.n	80005d8 <test_printn.part.1+0x38>
 80005e8:	b004      	add	sp, #16
 80005ea:	bd70      	pop	{r4, r5, r6, pc}
 80005ec:	4770      	bx	lr
 80005ee:	bf00      	nop
 80005f0:	cccccccd 	.word	0xcccccccd
 80005f4:	20000a80 	.word	0x20000a80
	...

08000600 <test_printn>:
 8000600:	b928      	cbnz	r0, 800060e <test_printn+0xe>
 8000602:	4b04      	ldr	r3, [pc, #16]	; (8000614 <test_printn+0x14>)
 8000604:	2130      	movs	r1, #48	; 0x30
 8000606:	6818      	ldr	r0, [r3, #0]
 8000608:	6803      	ldr	r3, [r0, #0]
 800060a:	689b      	ldr	r3, [r3, #8]
 800060c:	4718      	bx	r3
 800060e:	f7ff bfc7 	b.w	80005a0 <test_printn.part.1>
 8000612:	bf00      	nop
 8000614:	20000a80 	.word	0x20000a80
	...

08000620 <print_line>:
 8000620:	b570      	push	{r4, r5, r6, lr}
 8000622:	244c      	movs	r4, #76	; 0x4c
 8000624:	4d07      	ldr	r5, [pc, #28]	; (8000644 <print_line+0x24>)
 8000626:	6828      	ldr	r0, [r5, #0]
 8000628:	212d      	movs	r1, #45	; 0x2d
 800062a:	6803      	ldr	r3, [r0, #0]
 800062c:	689b      	ldr	r3, [r3, #8]
 800062e:	4798      	blx	r3
 8000630:	3c01      	subs	r4, #1
 8000632:	d1f8      	bne.n	8000626 <print_line+0x6>
 8000634:	6828      	ldr	r0, [r5, #0]
 8000636:	2202      	movs	r2, #2
 8000638:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800063c:	6803      	ldr	r3, [r0, #0]
 800063e:	4902      	ldr	r1, [pc, #8]	; (8000648 <print_line+0x28>)
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	4718      	bx	r3
 8000644:	20000a80 	.word	0x20000a80
 8000648:	08006000 	.word	0x08006000
 800064c:	00000000 	.word	0x00000000

08000650 <test_terminate_threads>:
 8000650:	b430      	push	{r4, r5}
 8000652:	2520      	movs	r5, #32
 8000654:	2400      	movs	r4, #0
 8000656:	4b09      	ldr	r3, [pc, #36]	; (800067c <test_terminate_threads+0x2c>)
 8000658:	f103 0014 	add.w	r0, r3, #20
 800065c:	f853 2b04 	ldr.w	r2, [r3], #4
 8000660:	b13a      	cbz	r2, 8000672 <test_terminate_threads+0x22>
 8000662:	f385 8811 	msr	BASEPRI, r5
 8000666:	7f51      	ldrb	r1, [r2, #29]
 8000668:	f041 0104 	orr.w	r1, r1, #4
 800066c:	7751      	strb	r1, [r2, #29]
 800066e:	f384 8811 	msr	BASEPRI, r4
 8000672:	4283      	cmp	r3, r0
 8000674:	d1f2      	bne.n	800065c <test_terminate_threads+0xc>
 8000676:	bc30      	pop	{r4, r5}
 8000678:	4770      	bx	lr
 800067a:	bf00      	nop
 800067c:	200011cc 	.word	0x200011cc

08000680 <_test_assert_time_window>:
 8000680:	b410      	push	{r4}
 8000682:	2320      	movs	r3, #32
 8000684:	f383 8811 	msr	BASEPRI, r3
 8000688:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 800068c:	2300      	movs	r3, #0
 800068e:	6a64      	ldr	r4, [r4, #36]	; 0x24
 8000690:	f383 8811 	msr	BASEPRI, r3
 8000694:	b2a4      	uxth	r4, r4
 8000696:	1a64      	subs	r4, r4, r1
 8000698:	1a52      	subs	r2, r2, r1
 800069a:	4294      	cmp	r4, r2
 800069c:	db06      	blt.n	80006ac <_test_assert_time_window+0x2c>
 800069e:	2301      	movs	r3, #1
 80006a0:	4c04      	ldr	r4, [pc, #16]	; (80006b4 <_test_assert_time_window+0x34>)
 80006a2:	4905      	ldr	r1, [pc, #20]	; (80006b8 <_test_assert_time_window+0x38>)
 80006a4:	4a05      	ldr	r2, [pc, #20]	; (80006bc <_test_assert_time_window+0x3c>)
 80006a6:	7023      	strb	r3, [r4, #0]
 80006a8:	700b      	strb	r3, [r1, #0]
 80006aa:	6010      	str	r0, [r2, #0]
 80006ac:	4618      	mov	r0, r3
 80006ae:	bc10      	pop	{r4}
 80006b0:	4770      	bx	lr
 80006b2:	bf00      	nop
 80006b4:	200011a0 	.word	0x200011a0
 80006b8:	20000b04 	.word	0x20000b04
 80006bc:	20000aac 	.word	0x20000aac

080006c0 <_test_assert_sequence>:
 80006c0:	b4f0      	push	{r4, r5, r6, r7}
 80006c2:	4e0e      	ldr	r6, [pc, #56]	; (80006fc <_test_assert_sequence+0x3c>)
 80006c4:	4f0e      	ldr	r7, [pc, #56]	; (8000700 <_test_assert_sequence+0x40>)
 80006c6:	3901      	subs	r1, #1
 80006c8:	6835      	ldr	r5, [r6, #0]
 80006ca:	463b      	mov	r3, r7
 80006cc:	e003      	b.n	80006d6 <_test_assert_sequence+0x16>
 80006ce:	f813 4b01 	ldrb.w	r4, [r3], #1
 80006d2:	4294      	cmp	r4, r2
 80006d4:	d108      	bne.n	80006e8 <_test_assert_sequence+0x28>
 80006d6:	429d      	cmp	r5, r3
 80006d8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80006dc:	d8f7      	bhi.n	80006ce <_test_assert_sequence+0xe>
 80006de:	b91a      	cbnz	r2, 80006e8 <_test_assert_sequence+0x28>
 80006e0:	6037      	str	r7, [r6, #0]
 80006e2:	4610      	mov	r0, r2
 80006e4:	bcf0      	pop	{r4, r5, r6, r7}
 80006e6:	4770      	bx	lr
 80006e8:	2201      	movs	r2, #1
 80006ea:	4c06      	ldr	r4, [pc, #24]	; (8000704 <_test_assert_sequence+0x44>)
 80006ec:	4906      	ldr	r1, [pc, #24]	; (8000708 <_test_assert_sequence+0x48>)
 80006ee:	4b07      	ldr	r3, [pc, #28]	; (800070c <_test_assert_sequence+0x4c>)
 80006f0:	7022      	strb	r2, [r4, #0]
 80006f2:	6018      	str	r0, [r3, #0]
 80006f4:	700a      	strb	r2, [r1, #0]
 80006f6:	4610      	mov	r0, r2
 80006f8:	bcf0      	pop	{r4, r5, r6, r7}
 80006fa:	4770      	bx	lr
 80006fc:	200011f0 	.word	0x200011f0
 8000700:	200011e0 	.word	0x200011e0
 8000704:	200011a0 	.word	0x200011a0
 8000708:	20000b04 	.word	0x20000b04
 800070c:	20000aac 	.word	0x20000aac

08000710 <_test_assert>:
 8000710:	b951      	cbnz	r1, 8000728 <_test_assert+0x18>
 8000712:	2301      	movs	r3, #1
 8000714:	b410      	push	{r4}
 8000716:	4906      	ldr	r1, [pc, #24]	; (8000730 <_test_assert+0x20>)
 8000718:	4c06      	ldr	r4, [pc, #24]	; (8000734 <_test_assert+0x24>)
 800071a:	4a07      	ldr	r2, [pc, #28]	; (8000738 <_test_assert+0x28>)
 800071c:	7023      	strb	r3, [r4, #0]
 800071e:	6010      	str	r0, [r2, #0]
 8000720:	700b      	strb	r3, [r1, #0]
 8000722:	4618      	mov	r0, r3
 8000724:	bc10      	pop	{r4}
 8000726:	4770      	bx	lr
 8000728:	2300      	movs	r3, #0
 800072a:	4618      	mov	r0, r3
 800072c:	4770      	bx	lr
 800072e:	bf00      	nop
 8000730:	20000b04 	.word	0x20000b04
 8000734:	200011a0 	.word	0x200011a0
 8000738:	20000aac 	.word	0x20000aac
 800073c:	00000000 	.word	0x00000000

08000740 <test_emit_token>:
 8000740:	b410      	push	{r4}
 8000742:	2320      	movs	r3, #32
 8000744:	f383 8811 	msr	BASEPRI, r3
 8000748:	4b04      	ldr	r3, [pc, #16]	; (800075c <test_emit_token+0x1c>)
 800074a:	2100      	movs	r1, #0
 800074c:	681a      	ldr	r2, [r3, #0]
 800074e:	1c54      	adds	r4, r2, #1
 8000750:	7010      	strb	r0, [r2, #0]
 8000752:	601c      	str	r4, [r3, #0]
 8000754:	f381 8811 	msr	BASEPRI, r1
 8000758:	bc10      	pop	{r4}
 800075a:	4770      	bx	lr
 800075c:	200011f0 	.word	0x200011f0

08000760 <h3>:
 8000760:	2043      	movs	r0, #67	; 0x43
 8000762:	f7ff bfed 	b.w	8000740 <test_emit_token>
 8000766:	bf00      	nop
	...

08000770 <h2>:
 8000770:	2042      	movs	r0, #66	; 0x42
 8000772:	f7ff bfe5 	b.w	8000740 <test_emit_token>
 8000776:	bf00      	nop
	...

08000780 <h1>:
 8000780:	2041      	movs	r0, #65	; 0x41
 8000782:	f7ff bfdd 	b.w	8000740 <test_emit_token>
 8000786:	bf00      	nop
	...

08000790 <thread.lto_priv.58>:
 8000790:	7800      	ldrb	r0, [r0, #0]
 8000792:	f7ff bfd5 	b.w	8000740 <test_emit_token>
 8000796:	bf00      	nop
	...

080007a0 <thread.lto_priv.60>:
 80007a0:	f7ff bff6 	b.w	8000790 <thread.lto_priv.58>
	...

080007b0 <test_println>:
 80007b0:	b570      	push	{r4, r5, r6, lr}
 80007b2:	7801      	ldrb	r1, [r0, #0]
 80007b4:	b189      	cbz	r1, 80007da <test_println+0x2a>
 80007b6:	4604      	mov	r4, r0
 80007b8:	4d09      	ldr	r5, [pc, #36]	; (80007e0 <test_println+0x30>)
 80007ba:	6828      	ldr	r0, [r5, #0]
 80007bc:	6803      	ldr	r3, [r0, #0]
 80007be:	689b      	ldr	r3, [r3, #8]
 80007c0:	4798      	blx	r3
 80007c2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80007c6:	2900      	cmp	r1, #0
 80007c8:	d1f7      	bne.n	80007ba <test_println+0xa>
 80007ca:	6828      	ldr	r0, [r5, #0]
 80007cc:	2202      	movs	r2, #2
 80007ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80007d2:	6803      	ldr	r3, [r0, #0]
 80007d4:	4903      	ldr	r1, [pc, #12]	; (80007e4 <test_println+0x34>)
 80007d6:	681b      	ldr	r3, [r3, #0]
 80007d8:	4718      	bx	r3
 80007da:	4d01      	ldr	r5, [pc, #4]	; (80007e0 <test_println+0x30>)
 80007dc:	e7f5      	b.n	80007ca <test_println+0x1a>
 80007de:	bf00      	nop
 80007e0:	20000a80 	.word	0x20000a80
 80007e4:	08006000 	.word	0x08006000
	...

080007f0 <test_print>:
 80007f0:	7801      	ldrb	r1, [r0, #0]
 80007f2:	b159      	cbz	r1, 800080c <test_print+0x1c>
 80007f4:	b538      	push	{r3, r4, r5, lr}
 80007f6:	4604      	mov	r4, r0
 80007f8:	4d05      	ldr	r5, [pc, #20]	; (8000810 <test_print+0x20>)
 80007fa:	6828      	ldr	r0, [r5, #0]
 80007fc:	6803      	ldr	r3, [r0, #0]
 80007fe:	689b      	ldr	r3, [r3, #8]
 8000800:	4798      	blx	r3
 8000802:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000806:	2900      	cmp	r1, #0
 8000808:	d1f7      	bne.n	80007fa <test_print+0xa>
 800080a:	bd38      	pop	{r3, r4, r5, pc}
 800080c:	4770      	bx	lr
 800080e:	bf00      	nop
 8000810:	20000a80 	.word	0x20000a80
	...

08000820 <_port_irq_epilogue>:
 8000820:	2320      	movs	r3, #32
 8000822:	f383 8811 	msr	BASEPRI, r3
 8000826:	4b11      	ldr	r3, [pc, #68]	; (800086c <_port_irq_epilogue+0x4c>)
 8000828:	685b      	ldr	r3, [r3, #4]
 800082a:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 800082e:	d102      	bne.n	8000836 <_port_irq_epilogue+0x16>
 8000830:	f383 8811 	msr	BASEPRI, r3
 8000834:	4770      	bx	lr
 8000836:	b480      	push	{r7}
 8000838:	af00      	add	r7, sp, #0
 800083a:	f3ef 8309 	mrs	r3, PSP
 800083e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8000842:	f1a3 0220 	sub.w	r2, r3, #32
 8000846:	f843 1c04 	str.w	r1, [r3, #-4]
 800084a:	f382 8809 	msr	PSP, r2
 800084e:	4a08      	ldr	r2, [pc, #32]	; (8000870 <_port_irq_epilogue+0x50>)
 8000850:	6811      	ldr	r1, [r2, #0]
 8000852:	6992      	ldr	r2, [r2, #24]
 8000854:	6889      	ldr	r1, [r1, #8]
 8000856:	6892      	ldr	r2, [r2, #8]
 8000858:	4291      	cmp	r1, r2
 800085a:	bf8c      	ite	hi
 800085c:	4a05      	ldrhi	r2, [pc, #20]	; (8000874 <_port_irq_epilogue+0x54>)
 800085e:	4a06      	ldrls	r2, [pc, #24]	; (8000878 <_port_irq_epilogue+0x58>)
 8000860:	f843 2c08 	str.w	r2, [r3, #-8]
 8000864:	46bd      	mov	sp, r7
 8000866:	bc80      	pop	{r7}
 8000868:	4770      	bx	lr
 800086a:	bf00      	nop
 800086c:	e000ed00 	.word	0xe000ed00
 8000870:	20000930 	.word	0x20000930
 8000874:	08000221 	.word	0x08000221
 8000878:	08000224 	.word	0x08000224
 800087c:	00000000 	.word	0x00000000

08000880 <VectorB0>:
 8000880:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000884:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8000888:	6923      	ldr	r3, [r4, #16]
 800088a:	079b      	lsls	r3, r3, #30
 800088c:	d403      	bmi.n	8000896 <VectorB0+0x16>
 800088e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000892:	f7ff bfc5 	b.w	8000820 <_port_irq_epilogue>
 8000896:	2700      	movs	r7, #0
 8000898:	2520      	movs	r5, #32
 800089a:	6127      	str	r7, [r4, #16]
 800089c:	f385 8811 	msr	BASEPRI, r5
 80008a0:	4e1e      	ldr	r6, [pc, #120]	; (800091c <VectorB0+0x9c>)
 80008a2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80008a4:	f8b6 c026 	ldrh.w	ip, [r6, #38]	; 0x26
 80008a8:	69f3      	ldr	r3, [r6, #28]
 80008aa:	b280      	uxth	r0, r0
 80008ac:	eba0 010c 	sub.w	r1, r0, ip
 80008b0:	891a      	ldrh	r2, [r3, #8]
 80008b2:	b289      	uxth	r1, r1
 80008b4:	4291      	cmp	r1, r2
 80008b6:	f106 081c 	add.w	r8, r6, #28
 80008ba:	d31b      	bcc.n	80008f4 <VectorB0+0x74>
 80008bc:	6819      	ldr	r1, [r3, #0]
 80008be:	4462      	add	r2, ip
 80008c0:	4541      	cmp	r1, r8
 80008c2:	84f2      	strh	r2, [r6, #38]	; 0x26
 80008c4:	68da      	ldr	r2, [r3, #12]
 80008c6:	f8c1 8004 	str.w	r8, [r1, #4]
 80008ca:	61f1      	str	r1, [r6, #28]
 80008cc:	60df      	str	r7, [r3, #12]
 80008ce:	bf08      	it	eq
 80008d0:	60e7      	streq	r7, [r4, #12]
 80008d2:	f387 8811 	msr	BASEPRI, r7
 80008d6:	6918      	ldr	r0, [r3, #16]
 80008d8:	4790      	blx	r2
 80008da:	f385 8811 	msr	BASEPRI, r5
 80008de:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80008e0:	f8b6 c026 	ldrh.w	ip, [r6, #38]	; 0x26
 80008e4:	69f3      	ldr	r3, [r6, #28]
 80008e6:	b280      	uxth	r0, r0
 80008e8:	eba0 010c 	sub.w	r1, r0, ip
 80008ec:	891a      	ldrh	r2, [r3, #8]
 80008ee:	b289      	uxth	r1, r1
 80008f0:	428a      	cmp	r2, r1
 80008f2:	d9e3      	bls.n	80008bc <VectorB0+0x3c>
 80008f4:	4543      	cmp	r3, r8
 80008f6:	d00a      	beq.n	800090e <VectorB0+0x8e>
 80008f8:	4462      	add	r2, ip
 80008fa:	1a12      	subs	r2, r2, r0
 80008fc:	b292      	uxth	r2, r2
 80008fe:	2a02      	cmp	r2, #2
 8000900:	bf2c      	ite	cs
 8000902:	1882      	addcs	r2, r0, r2
 8000904:	1c82      	addcc	r2, r0, #2
 8000906:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800090a:	b292      	uxth	r2, r2
 800090c:	635a      	str	r2, [r3, #52]	; 0x34
 800090e:	2300      	movs	r3, #0
 8000910:	f383 8811 	msr	BASEPRI, r3
 8000914:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000918:	f7ff bf82 	b.w	8000820 <_port_irq_epilogue>
 800091c:	20000930 	.word	0x20000930

08000920 <SVC_Handler>:
 8000920:	b480      	push	{r7}
 8000922:	af00      	add	r7, sp, #0
 8000924:	f3ef 8309 	mrs	r3, PSP
 8000928:	3320      	adds	r3, #32
 800092a:	f383 8809 	msr	PSP, r3
 800092e:	2300      	movs	r3, #0
 8000930:	f383 8811 	msr	BASEPRI, r3
 8000934:	46bd      	mov	sp, r7
 8000936:	bc80      	pop	{r7}
 8000938:	4770      	bx	lr
 800093a:	bf00      	nop
 800093c:	0000      	movs	r0, r0
	...

08000940 <chPoolAlloc>:
 8000940:	b508      	push	{r3, lr}
 8000942:	2220      	movs	r2, #32
 8000944:	4603      	mov	r3, r0
 8000946:	f382 8811 	msr	BASEPRI, r2
 800094a:	6800      	ldr	r0, [r0, #0]
 800094c:	b128      	cbz	r0, 800095a <chPoolAlloc+0x1a>
 800094e:	6802      	ldr	r2, [r0, #0]
 8000950:	601a      	str	r2, [r3, #0]
 8000952:	2300      	movs	r3, #0
 8000954:	f383 8811 	msr	BASEPRI, r3
 8000958:	bd08      	pop	{r3, pc}
 800095a:	689a      	ldr	r2, [r3, #8]
 800095c:	2a00      	cmp	r2, #0
 800095e:	d0f8      	beq.n	8000952 <chPoolAlloc+0x12>
 8000960:	6858      	ldr	r0, [r3, #4]
 8000962:	4790      	blx	r2
 8000964:	2300      	movs	r3, #0
 8000966:	f383 8811 	msr	BASEPRI, r3
 800096a:	bd08      	pop	{r3, pc}
 800096c:	0000      	movs	r0, r0
	...

08000970 <pools1_execute>:
 8000970:	b570      	push	{r4, r5, r6, lr}
 8000972:	2205      	movs	r2, #5
 8000974:	2520      	movs	r5, #32
 8000976:	2000      	movs	r0, #0
 8000978:	4b2f      	ldr	r3, [pc, #188]	; (8000a38 <pools1_execute+0xc8>)
 800097a:	4c30      	ldr	r4, [pc, #192]	; (8000a3c <pools1_execute+0xcc>)
 800097c:	f385 8811 	msr	BASEPRI, r5
 8000980:	6821      	ldr	r1, [r4, #0]
 8000982:	6023      	str	r3, [r4, #0]
 8000984:	6019      	str	r1, [r3, #0]
 8000986:	f380 8811 	msr	BASEPRI, r0
 800098a:	6861      	ldr	r1, [r4, #4]
 800098c:	3a01      	subs	r2, #1
 800098e:	440b      	add	r3, r1
 8000990:	d1f4      	bne.n	800097c <pools1_execute+0xc>
 8000992:	2505      	movs	r5, #5
 8000994:	4e29      	ldr	r6, [pc, #164]	; (8000a3c <pools1_execute+0xcc>)
 8000996:	4630      	mov	r0, r6
 8000998:	f7ff ffd2 	bl	8000940 <chPoolAlloc>
 800099c:	1c01      	adds	r1, r0, #0
 800099e:	bf18      	it	ne
 80009a0:	2101      	movne	r1, #1
 80009a2:	2001      	movs	r0, #1
 80009a4:	f7ff feb4 	bl	8000710 <_test_assert>
 80009a8:	bba0      	cbnz	r0, 8000a14 <pools1_execute+0xa4>
 80009aa:	3d01      	subs	r5, #1
 80009ac:	d1f3      	bne.n	8000996 <pools1_execute+0x26>
 80009ae:	4823      	ldr	r0, [pc, #140]	; (8000a3c <pools1_execute+0xcc>)
 80009b0:	f7ff ffc6 	bl	8000940 <chPoolAlloc>
 80009b4:	fab0 f180 	clz	r1, r0
 80009b8:	2002      	movs	r0, #2
 80009ba:	0949      	lsrs	r1, r1, #5
 80009bc:	f7ff fea8 	bl	8000710 <_test_assert>
 80009c0:	bb40      	cbnz	r0, 8000a14 <pools1_execute+0xa4>
 80009c2:	2620      	movs	r6, #32
 80009c4:	4a1e      	ldr	r2, [pc, #120]	; (8000a40 <pools1_execute+0xd0>)
 80009c6:	4b1c      	ldr	r3, [pc, #112]	; (8000a38 <pools1_execute+0xc8>)
 80009c8:	f102 0010 	add.w	r0, r2, #16
 80009cc:	f386 8811 	msr	BASEPRI, r6
 80009d0:	6821      	ldr	r1, [r4, #0]
 80009d2:	6019      	str	r1, [r3, #0]
 80009d4:	6023      	str	r3, [r4, #0]
 80009d6:	f385 8811 	msr	BASEPRI, r5
 80009da:	4290      	cmp	r0, r2
 80009dc:	d002      	beq.n	80009e4 <pools1_execute+0x74>
 80009de:	f852 3b04 	ldr.w	r3, [r2], #4
 80009e2:	e7f3      	b.n	80009cc <pools1_execute+0x5c>
 80009e4:	2505      	movs	r5, #5
 80009e6:	4e15      	ldr	r6, [pc, #84]	; (8000a3c <pools1_execute+0xcc>)
 80009e8:	4630      	mov	r0, r6
 80009ea:	f7ff ffa9 	bl	8000940 <chPoolAlloc>
 80009ee:	1c01      	adds	r1, r0, #0
 80009f0:	bf18      	it	ne
 80009f2:	2101      	movne	r1, #1
 80009f4:	2003      	movs	r0, #3
 80009f6:	f7ff fe8b 	bl	8000710 <_test_assert>
 80009fa:	b958      	cbnz	r0, 8000a14 <pools1_execute+0xa4>
 80009fc:	3d01      	subs	r5, #1
 80009fe:	d1f3      	bne.n	80009e8 <pools1_execute+0x78>
 8000a00:	480e      	ldr	r0, [pc, #56]	; (8000a3c <pools1_execute+0xcc>)
 8000a02:	f7ff ff9d 	bl	8000940 <chPoolAlloc>
 8000a06:	fab0 f180 	clz	r1, r0
 8000a0a:	2004      	movs	r0, #4
 8000a0c:	0949      	lsrs	r1, r1, #5
 8000a0e:	f7ff fe7f 	bl	8000710 <_test_assert>
 8000a12:	b100      	cbz	r0, 8000a16 <pools1_execute+0xa6>
 8000a14:	bd70      	pop	{r4, r5, r6, pc}
 8000a16:	2210      	movs	r2, #16
 8000a18:	4b0a      	ldr	r3, [pc, #40]	; (8000a44 <pools1_execute+0xd4>)
 8000a1a:	4808      	ldr	r0, [pc, #32]	; (8000a3c <pools1_execute+0xcc>)
 8000a1c:	e9c4 5200 	strd	r5, r2, [r4]
 8000a20:	60a3      	str	r3, [r4, #8]
 8000a22:	f7ff ff8d 	bl	8000940 <chPoolAlloc>
 8000a26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000a2a:	fab0 f180 	clz	r1, r0
 8000a2e:	2005      	movs	r0, #5
 8000a30:	40c1      	lsrs	r1, r0
 8000a32:	f7ff be6d 	b.w	8000710 <_test_assert>
 8000a36:	bf00      	nop
 8000a38:	20000b38 	.word	0x20000b38
 8000a3c:	2000087c 	.word	0x2000087c
 8000a40:	080067b4 	.word	0x080067b4
 8000a44:	08000401 	.word	0x08000401
	...

08000a50 <chEvtUnregister>:
 8000a50:	2320      	movs	r3, #32
 8000a52:	f383 8811 	msr	BASEPRI, r3
 8000a56:	4602      	mov	r2, r0
 8000a58:	e002      	b.n	8000a60 <chEvtUnregister+0x10>
 8000a5a:	428b      	cmp	r3, r1
 8000a5c:	d007      	beq.n	8000a6e <chEvtUnregister+0x1e>
 8000a5e:	461a      	mov	r2, r3
 8000a60:	6813      	ldr	r3, [r2, #0]
 8000a62:	4283      	cmp	r3, r0
 8000a64:	d1f9      	bne.n	8000a5a <chEvtUnregister+0xa>
 8000a66:	2300      	movs	r3, #0
 8000a68:	f383 8811 	msr	BASEPRI, r3
 8000a6c:	4770      	bx	lr
 8000a6e:	680b      	ldr	r3, [r1, #0]
 8000a70:	6013      	str	r3, [r2, #0]
 8000a72:	2300      	movs	r3, #0
 8000a74:	f383 8811 	msr	BASEPRI, r3
 8000a78:	4770      	bx	lr
 8000a7a:	bf00      	nop
 8000a7c:	0000      	movs	r0, r0
	...

08000a80 <evt1_execute>:
 8000a80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a84:	4c33      	ldr	r4, [pc, #204]	; (8000b54 <evt1_execute+0xd4>)
 8000a86:	b08a      	sub	sp, #40	; 0x28
 8000a88:	f04f 0c20 	mov.w	ip, #32
 8000a8c:	6024      	str	r4, [r4, #0]
 8000a8e:	f38c 8811 	msr	BASEPRI, ip
 8000a92:	2701      	movs	r7, #1
 8000a94:	2300      	movs	r3, #0
 8000a96:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000a9a:	4a2f      	ldr	r2, [pc, #188]	; (8000b58 <evt1_execute+0xd8>)
 8000a9c:	6826      	ldr	r6, [r4, #0]
 8000a9e:	ad0a      	add	r5, sp, #40	; 0x28
 8000aa0:	6991      	ldr	r1, [r2, #24]
 8000aa2:	f845 6d14 	str.w	r6, [r5, #-20]!
 8000aa6:	9106      	str	r1, [sp, #24]
 8000aa8:	6025      	str	r5, [r4, #0]
 8000aaa:	e9cd 7307 	strd	r7, r3, [sp, #28]
 8000aae:	9009      	str	r0, [sp, #36]	; 0x24
 8000ab0:	f383 8811 	msr	BASEPRI, r3
 8000ab4:	f38c 8811 	msr	BASEPRI, ip
 8000ab8:	f04f 0802 	mov.w	r8, #2
 8000abc:	6991      	ldr	r1, [r2, #24]
 8000abe:	6822      	ldr	r2, [r4, #0]
 8000ac0:	ae0a      	add	r6, sp, #40	; 0x28
 8000ac2:	f846 2d28 	str.w	r2, [r6, #-40]!
 8000ac6:	9101      	str	r1, [sp, #4]
 8000ac8:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8000acc:	6026      	str	r6, [r4, #0]
 8000ace:	f8cd 8008 	str.w	r8, [sp, #8]
 8000ad2:	f383 8811 	msr	BASEPRI, r3
 8000ad6:	6821      	ldr	r1, [r4, #0]
 8000ad8:	4638      	mov	r0, r7
 8000ada:	1b09      	subs	r1, r1, r4
 8000adc:	bf18      	it	ne
 8000ade:	2101      	movne	r1, #1
 8000ae0:	f7ff fe16 	bl	8000710 <_test_assert>
 8000ae4:	b110      	cbz	r0, 8000aec <evt1_execute+0x6c>
 8000ae6:	b00a      	add	sp, #40	; 0x28
 8000ae8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000aec:	4629      	mov	r1, r5
 8000aee:	4620      	mov	r0, r4
 8000af0:	f7ff ffae 	bl	8000a50 <chEvtUnregister>
 8000af4:	6821      	ldr	r1, [r4, #0]
 8000af6:	4640      	mov	r0, r8
 8000af8:	1b09      	subs	r1, r1, r4
 8000afa:	bf18      	it	ne
 8000afc:	2101      	movne	r1, #1
 8000afe:	f7ff fe07 	bl	8000710 <_test_assert>
 8000b02:	2800      	cmp	r0, #0
 8000b04:	d1ef      	bne.n	8000ae6 <evt1_execute+0x66>
 8000b06:	4631      	mov	r1, r6
 8000b08:	4620      	mov	r0, r4
 8000b0a:	f7ff ffa1 	bl	8000a50 <chEvtUnregister>
 8000b0e:	6821      	ldr	r1, [r4, #0]
 8000b10:	2003      	movs	r0, #3
 8000b12:	1b09      	subs	r1, r1, r4
 8000b14:	fab1 f181 	clz	r1, r1
 8000b18:	0949      	lsrs	r1, r1, #5
 8000b1a:	f7ff fdf9 	bl	8000710 <_test_assert>
 8000b1e:	2800      	cmp	r0, #0
 8000b20:	d1e1      	bne.n	8000ae6 <evt1_execute+0x66>
 8000b22:	4604      	mov	r4, r0
 8000b24:	2507      	movs	r5, #7
 8000b26:	4e0d      	ldr	r6, [pc, #52]	; (8000b5c <evt1_execute+0xdc>)
 8000b28:	fa25 f304 	lsr.w	r3, r5, r4
 8000b2c:	07db      	lsls	r3, r3, #31
 8000b2e:	fa07 f204 	lsl.w	r2, r7, r4
 8000b32:	d50d      	bpl.n	8000b50 <evt1_execute+0xd0>
 8000b34:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8000b38:	4620      	mov	r0, r4
 8000b3a:	ea25 0502 	bic.w	r5, r5, r2
 8000b3e:	3401      	adds	r4, #1
 8000b40:	4798      	blx	r3
 8000b42:	2d00      	cmp	r5, #0
 8000b44:	d1f0      	bne.n	8000b28 <evt1_execute+0xa8>
 8000b46:	4906      	ldr	r1, [pc, #24]	; (8000b60 <evt1_execute+0xe0>)
 8000b48:	2004      	movs	r0, #4
 8000b4a:	f7ff fdb9 	bl	80006c0 <_test_assert_sequence>
 8000b4e:	e7ca      	b.n	8000ae6 <evt1_execute+0x66>
 8000b50:	3401      	adds	r4, #1
 8000b52:	e7e9      	b.n	8000b28 <evt1_execute+0xa8>
 8000b54:	20000808 	.word	0x20000808
 8000b58:	20000930 	.word	0x20000930
 8000b5c:	08005c60 	.word	0x08005c60
 8000b60:	08005c70 	.word	0x08005c70
	...

08000b70 <chTMStopMeasurementX>:
 8000b70:	4b10      	ldr	r3, [pc, #64]	; (8000bb4 <chTMStopMeasurementX+0x44>)
 8000b72:	4a11      	ldr	r2, [pc, #68]	; (8000bb8 <chTMStopMeasurementX+0x48>)
 8000b74:	685b      	ldr	r3, [r3, #4]
 8000b76:	6881      	ldr	r1, [r0, #8]
 8000b78:	6f12      	ldr	r2, [r2, #112]	; 0x70
 8000b7a:	1a5b      	subs	r3, r3, r1
 8000b7c:	1a9b      	subs	r3, r3, r2
 8000b7e:	6841      	ldr	r1, [r0, #4]
 8000b80:	68c2      	ldr	r2, [r0, #12]
 8000b82:	e92d 0830 	stmdb	sp!, {r4, r5, fp}
 8000b86:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
 8000b8a:	eb14 0b03 	adds.w	fp, r4, r3
 8000b8e:	f145 0c00 	adc.w	ip, r5, #0
 8000b92:	3201      	adds	r2, #1
 8000b94:	428b      	cmp	r3, r1
 8000b96:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8000b9a:	e9c0 bc04 	strd	fp, ip, [r0, #16]
 8000b9e:	d806      	bhi.n	8000bae <chTMStopMeasurementX+0x3e>
 8000ba0:	6802      	ldr	r2, [r0, #0]
 8000ba2:	4293      	cmp	r3, r2
 8000ba4:	bf38      	it	cc
 8000ba6:	6003      	strcc	r3, [r0, #0]
 8000ba8:	e8bd 0830 	ldmia.w	sp!, {r4, r5, fp}
 8000bac:	4770      	bx	lr
 8000bae:	6043      	str	r3, [r0, #4]
 8000bb0:	e7fa      	b.n	8000ba8 <chTMStopMeasurementX+0x38>
 8000bb2:	bf00      	nop
 8000bb4:	e0001000 	.word	0xe0001000
 8000bb8:	20000930 	.word	0x20000930
 8000bbc:	00000000 	.word	0x00000000

08000bc0 <wakeup>:
 8000bc0:	2320      	movs	r3, #32
 8000bc2:	f383 8811 	msr	BASEPRI, r3
 8000bc6:	7f03      	ldrb	r3, [r0, #28]
 8000bc8:	2b07      	cmp	r3, #7
 8000bca:	d80e      	bhi.n	8000bea <wakeup+0x2a>
 8000bcc:	e8df f003 	tbb	[pc, r3]
 8000bd0:	230d0d27 	.word	0x230d0d27
 8000bd4:	080d0408 	.word	0x080d0408
 8000bd8:	6a02      	ldr	r2, [r0, #32]
 8000bda:	6893      	ldr	r3, [r2, #8]
 8000bdc:	3301      	adds	r3, #1
 8000bde:	6093      	str	r3, [r2, #8]
 8000be0:	e9d0 2300 	ldrd	r2, r3, [r0]
 8000be4:	601a      	str	r2, [r3, #0]
 8000be6:	6802      	ldr	r2, [r0, #0]
 8000be8:	6053      	str	r3, [r2, #4]
 8000bea:	b410      	push	{r4}
 8000bec:	2200      	movs	r2, #0
 8000bee:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000bf2:	6881      	ldr	r1, [r0, #8]
 8000bf4:	4b0c      	ldr	r3, [pc, #48]	; (8000c28 <wakeup+0x68>)
 8000bf6:	6204      	str	r4, [r0, #32]
 8000bf8:	7702      	strb	r2, [r0, #28]
 8000bfa:	681b      	ldr	r3, [r3, #0]
 8000bfc:	689a      	ldr	r2, [r3, #8]
 8000bfe:	428a      	cmp	r2, r1
 8000c00:	d2fb      	bcs.n	8000bfa <wakeup+0x3a>
 8000c02:	685a      	ldr	r2, [r3, #4]
 8000c04:	2100      	movs	r1, #0
 8000c06:	e9c0 3200 	strd	r3, r2, [r0]
 8000c0a:	6010      	str	r0, [r2, #0]
 8000c0c:	6058      	str	r0, [r3, #4]
 8000c0e:	f381 8811 	msr	BASEPRI, r1
 8000c12:	bc10      	pop	{r4}
 8000c14:	4770      	bx	lr
 8000c16:	2200      	movs	r2, #0
 8000c18:	6a03      	ldr	r3, [r0, #32]
 8000c1a:	601a      	str	r2, [r3, #0]
 8000c1c:	e7e5      	b.n	8000bea <wakeup+0x2a>
 8000c1e:	2300      	movs	r3, #0
 8000c20:	f383 8811 	msr	BASEPRI, r3
 8000c24:	4770      	bx	lr
 8000c26:	bf00      	nop
 8000c28:	20000930 	.word	0x20000930
 8000c2c:	00000000 	.word	0x00000000

08000c30 <chSchReadyI>:
 8000c30:	4601      	mov	r1, r0
 8000c32:	2200      	movs	r2, #0
 8000c34:	4b06      	ldr	r3, [pc, #24]	; (8000c50 <chSchReadyI+0x20>)
 8000c36:	6880      	ldr	r0, [r0, #8]
 8000c38:	770a      	strb	r2, [r1, #28]
 8000c3a:	681b      	ldr	r3, [r3, #0]
 8000c3c:	689a      	ldr	r2, [r3, #8]
 8000c3e:	4282      	cmp	r2, r0
 8000c40:	d2fb      	bcs.n	8000c3a <chSchReadyI+0xa>
 8000c42:	685a      	ldr	r2, [r3, #4]
 8000c44:	4608      	mov	r0, r1
 8000c46:	e9c1 3200 	strd	r3, r2, [r1]
 8000c4a:	6011      	str	r1, [r2, #0]
 8000c4c:	6059      	str	r1, [r3, #4]
 8000c4e:	4770      	bx	lr
 8000c50:	20000930 	.word	0x20000930
	...

08000c60 <chCondSignalI.constprop.42>:
 8000c60:	4b07      	ldr	r3, [pc, #28]	; (8000c80 <chCondSignalI.constprop.42+0x20>)
 8000c62:	681a      	ldr	r2, [r3, #0]
 8000c64:	429a      	cmp	r2, r3
 8000c66:	d009      	beq.n	8000c7c <chCondSignalI.constprop.42+0x1c>
 8000c68:	b410      	push	{r4}
 8000c6a:	2400      	movs	r4, #0
 8000c6c:	6811      	ldr	r1, [r2, #0]
 8000c6e:	4610      	mov	r0, r2
 8000c70:	604b      	str	r3, [r1, #4]
 8000c72:	6019      	str	r1, [r3, #0]
 8000c74:	6214      	str	r4, [r2, #32]
 8000c76:	bc10      	pop	{r4}
 8000c78:	f7ff bfda 	b.w	8000c30 <chSchReadyI>
 8000c7c:	4770      	bx	lr
 8000c7e:	bf00      	nop
 8000c80:	20000800 	.word	0x20000800
	...

08000c90 <chIQPutI>:
 8000c90:	b510      	push	{r4, lr}
 8000c92:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 8000c96:	42a2      	cmp	r2, r4
 8000c98:	6883      	ldr	r3, [r0, #8]
 8000c9a:	d01d      	beq.n	8000cd8 <chIQPutI+0x48>
 8000c9c:	3301      	adds	r3, #1
 8000c9e:	1c54      	adds	r4, r2, #1
 8000ca0:	6083      	str	r3, [r0, #8]
 8000ca2:	6144      	str	r4, [r0, #20]
 8000ca4:	7011      	strb	r1, [r2, #0]
 8000ca6:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
 8000caa:	429a      	cmp	r2, r3
 8000cac:	d20d      	bcs.n	8000cca <chIQPutI+0x3a>
 8000cae:	6802      	ldr	r2, [r0, #0]
 8000cb0:	4290      	cmp	r0, r2
 8000cb2:	d00f      	beq.n	8000cd4 <chIQPutI+0x44>
 8000cb4:	4603      	mov	r3, r0
 8000cb6:	2400      	movs	r4, #0
 8000cb8:	6811      	ldr	r1, [r2, #0]
 8000cba:	4610      	mov	r0, r2
 8000cbc:	6019      	str	r1, [r3, #0]
 8000cbe:	604b      	str	r3, [r1, #4]
 8000cc0:	6214      	str	r4, [r2, #32]
 8000cc2:	f7ff ffb5 	bl	8000c30 <chSchReadyI>
 8000cc6:	4620      	mov	r0, r4
 8000cc8:	bd10      	pop	{r4, pc}
 8000cca:	6802      	ldr	r2, [r0, #0]
 8000ccc:	68c3      	ldr	r3, [r0, #12]
 8000cce:	4290      	cmp	r0, r2
 8000cd0:	6143      	str	r3, [r0, #20]
 8000cd2:	d1ef      	bne.n	8000cb4 <chIQPutI+0x24>
 8000cd4:	2000      	movs	r0, #0
 8000cd6:	bd10      	pop	{r4, pc}
 8000cd8:	2b00      	cmp	r3, #0
 8000cda:	d0df      	beq.n	8000c9c <chIQPutI+0xc>
 8000cdc:	f06f 0003 	mvn.w	r0, #3
 8000ce0:	bd10      	pop	{r4, pc}
 8000ce2:	bf00      	nop
	...

08000cf0 <chOQGetI>:
 8000cf0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8000cf4:	4291      	cmp	r1, r2
 8000cf6:	b538      	push	{r3, r4, r5, lr}
 8000cf8:	6883      	ldr	r3, [r0, #8]
 8000cfa:	d018      	beq.n	8000d2e <chOQGetI+0x3e>
 8000cfc:	6905      	ldr	r5, [r0, #16]
 8000cfe:	1c51      	adds	r1, r2, #1
 8000d00:	3301      	adds	r3, #1
 8000d02:	6083      	str	r3, [r0, #8]
 8000d04:	6181      	str	r1, [r0, #24]
 8000d06:	42a9      	cmp	r1, r5
 8000d08:	7814      	ldrb	r4, [r2, #0]
 8000d0a:	d20d      	bcs.n	8000d28 <chOQGetI+0x38>
 8000d0c:	6802      	ldr	r2, [r0, #0]
 8000d0e:	4290      	cmp	r0, r2
 8000d10:	d008      	beq.n	8000d24 <chOQGetI+0x34>
 8000d12:	4603      	mov	r3, r0
 8000d14:	2500      	movs	r5, #0
 8000d16:	6811      	ldr	r1, [r2, #0]
 8000d18:	4610      	mov	r0, r2
 8000d1a:	6019      	str	r1, [r3, #0]
 8000d1c:	604b      	str	r3, [r1, #4]
 8000d1e:	6215      	str	r5, [r2, #32]
 8000d20:	f7ff ff86 	bl	8000c30 <chSchReadyI>
 8000d24:	4620      	mov	r0, r4
 8000d26:	bd38      	pop	{r3, r4, r5, pc}
 8000d28:	68c3      	ldr	r3, [r0, #12]
 8000d2a:	6183      	str	r3, [r0, #24]
 8000d2c:	e7ee      	b.n	8000d0c <chOQGetI+0x1c>
 8000d2e:	2b00      	cmp	r3, #0
 8000d30:	d0e4      	beq.n	8000cfc <chOQGetI+0xc>
 8000d32:	f06f 0002 	mvn.w	r0, #2
 8000d36:	bd38      	pop	{r3, r4, r5, pc}
	...

08000d40 <chEvtSignalI>:
 8000d40:	4603      	mov	r3, r0
 8000d42:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8000d44:	7f00      	ldrb	r0, [r0, #28]
 8000d46:	4311      	orrs	r1, r2
 8000d48:	280a      	cmp	r0, #10
 8000d4a:	6359      	str	r1, [r3, #52]	; 0x34
 8000d4c:	d00a      	beq.n	8000d64 <chEvtSignalI+0x24>
 8000d4e:	280b      	cmp	r0, #11
 8000d50:	d000      	beq.n	8000d54 <chEvtSignalI+0x14>
 8000d52:	4770      	bx	lr
 8000d54:	6a1a      	ldr	r2, [r3, #32]
 8000d56:	438a      	bics	r2, r1
 8000d58:	d1fb      	bne.n	8000d52 <chEvtSignalI+0x12>
 8000d5a:	2200      	movs	r2, #0
 8000d5c:	4618      	mov	r0, r3
 8000d5e:	621a      	str	r2, [r3, #32]
 8000d60:	f7ff bf66 	b.w	8000c30 <chSchReadyI>
 8000d64:	6a1a      	ldr	r2, [r3, #32]
 8000d66:	4211      	tst	r1, r2
 8000d68:	d1f7      	bne.n	8000d5a <chEvtSignalI+0x1a>
 8000d6a:	4770      	bx	lr
 8000d6c:	0000      	movs	r0, r0
	...

08000d70 <chEvtBroadcastFlagsI>:
 8000d70:	b570      	push	{r4, r5, r6, lr}
 8000d72:	6804      	ldr	r4, [r0, #0]
 8000d74:	42a0      	cmp	r0, r4
 8000d76:	d00f      	beq.n	8000d98 <chEvtBroadcastFlagsI+0x28>
 8000d78:	4606      	mov	r6, r0
 8000d7a:	460d      	mov	r5, r1
 8000d7c:	68e3      	ldr	r3, [r4, #12]
 8000d7e:	432b      	orrs	r3, r5
 8000d80:	60e3      	str	r3, [r4, #12]
 8000d82:	b115      	cbz	r5, 8000d8a <chEvtBroadcastFlagsI+0x1a>
 8000d84:	6922      	ldr	r2, [r4, #16]
 8000d86:	4213      	tst	r3, r2
 8000d88:	d003      	beq.n	8000d92 <chEvtBroadcastFlagsI+0x22>
 8000d8a:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 8000d8e:	f7ff ffd7 	bl	8000d40 <chEvtSignalI>
 8000d92:	6824      	ldr	r4, [r4, #0]
 8000d94:	42a6      	cmp	r6, r4
 8000d96:	d1f1      	bne.n	8000d7c <chEvtBroadcastFlagsI+0xc>
 8000d98:	bd70      	pop	{r4, r5, r6, pc}
 8000d9a:	bf00      	nop
 8000d9c:	0000      	movs	r0, r0
	...

08000da0 <VectorD8>:
 8000da0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000da4:	4f52      	ldr	r7, [pc, #328]	; (8000ef0 <VectorD8+0x150>)
 8000da6:	f8d7 a074 	ldr.w	sl, [r7, #116]	; 0x74
 8000daa:	f8ba 600c 	ldrh.w	r6, [sl, #12]
 8000dae:	f8ba 4000 	ldrh.w	r4, [sl]
 8000db2:	b2b6      	uxth	r6, r6
 8000db4:	b2a4      	uxth	r4, r4
 8000db6:	05e5      	lsls	r5, r4, #23
 8000db8:	d467      	bmi.n	8000e8a <VectorD8+0xea>
 8000dba:	2320      	movs	r3, #32
 8000dbc:	f383 8811 	msr	BASEPRI, r3
 8000dc0:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000dc4:	d03c      	beq.n	8000e40 <VectorD8+0xa0>
 8000dc6:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8000ef8 <VectorD8+0x158>
 8000dca:	f108 0908 	add.w	r9, r8, #8
 8000dce:	e00a      	b.n	8000de6 <VectorD8+0x46>
 8000dd0:	f8ba 1004 	ldrh.w	r1, [sl, #4]
 8000dd4:	06a0      	lsls	r0, r4, #26
 8000dd6:	b28d      	uxth	r5, r1
 8000dd8:	d420      	bmi.n	8000e1c <VectorD8+0x7c>
 8000dda:	f8ba 4000 	ldrh.w	r4, [sl]
 8000dde:	b2a4      	uxth	r4, r4
 8000de0:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000de4:	d02c      	beq.n	8000e40 <VectorD8+0xa0>
 8000de6:	0720      	lsls	r0, r4, #28
 8000de8:	d0f2      	beq.n	8000dd0 <VectorD8+0x30>
 8000dea:	f014 0f08 	tst.w	r4, #8
 8000dee:	bf0c      	ite	eq
 8000df0:	2100      	moveq	r1, #0
 8000df2:	2180      	movne	r1, #128	; 0x80
 8000df4:	07e2      	lsls	r2, r4, #31
 8000df6:	bf48      	it	mi
 8000df8:	f041 0120 	orrmi.w	r1, r1, #32
 8000dfc:	07a3      	lsls	r3, r4, #30
 8000dfe:	bf48      	it	mi
 8000e00:	f041 0140 	orrmi.w	r1, r1, #64	; 0x40
 8000e04:	0765      	lsls	r5, r4, #29
 8000e06:	bf48      	it	mi
 8000e08:	f441 7180 	orrmi.w	r1, r1, #256	; 0x100
 8000e0c:	4640      	mov	r0, r8
 8000e0e:	f7ff ffaf 	bl	8000d70 <chEvtBroadcastFlagsI>
 8000e12:	f8ba 1004 	ldrh.w	r1, [sl, #4]
 8000e16:	06a0      	lsls	r0, r4, #26
 8000e18:	b28d      	uxth	r5, r1
 8000e1a:	d5de      	bpl.n	8000dda <VectorD8+0x3a>
 8000e1c:	697b      	ldr	r3, [r7, #20]
 8000e1e:	b37b      	cbz	r3, 8000e80 <VectorD8+0xe0>
 8000e20:	b2e9      	uxtb	r1, r5
 8000e22:	4648      	mov	r0, r9
 8000e24:	f7ff ff34 	bl	8000c90 <chIQPutI>
 8000e28:	2800      	cmp	r0, #0
 8000e2a:	dad6      	bge.n	8000dda <VectorD8+0x3a>
 8000e2c:	2180      	movs	r1, #128	; 0x80
 8000e2e:	4640      	mov	r0, r8
 8000e30:	f7ff ff9e 	bl	8000d70 <chEvtBroadcastFlagsI>
 8000e34:	f8ba 4000 	ldrh.w	r4, [sl]
 8000e38:	b2a4      	uxth	r4, r4
 8000e3a:	f014 0f2f 	tst.w	r4, #47	; 0x2f
 8000e3e:	d1d2      	bne.n	8000de6 <VectorD8+0x46>
 8000e40:	2300      	movs	r3, #0
 8000e42:	f383 8811 	msr	BASEPRI, r3
 8000e46:	0631      	lsls	r1, r6, #24
 8000e48:	d501      	bpl.n	8000e4e <VectorD8+0xae>
 8000e4a:	0622      	lsls	r2, r4, #24
 8000e4c:	d42d      	bmi.n	8000eaa <VectorD8+0x10a>
 8000e4e:	0663      	lsls	r3, r4, #25
 8000e50:	d512      	bpl.n	8000e78 <VectorD8+0xd8>
 8000e52:	2320      	movs	r3, #32
 8000e54:	f383 8811 	msr	BASEPRI, r3
 8000e58:	e9d7 2311 	ldrd	r2, r3, [r7, #68]	; 0x44
 8000e5c:	429a      	cmp	r2, r3
 8000e5e:	d033      	beq.n	8000ec8 <VectorD8+0x128>
 8000e60:	f64f 72bf 	movw	r2, #65471	; 0xffbf
 8000e64:	f026 0640 	bic.w	r6, r6, #64	; 0x40
 8000e68:	b2b6      	uxth	r6, r6
 8000e6a:	f8aa 600c 	strh.w	r6, [sl, #12]
 8000e6e:	2300      	movs	r3, #0
 8000e70:	f8aa 2000 	strh.w	r2, [sl]
 8000e74:	f383 8811 	msr	BASEPRI, r3
 8000e78:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e7c:	f7ff bcd0 	b.w	8000820 <_port_irq_epilogue>
 8000e80:	2104      	movs	r1, #4
 8000e82:	4640      	mov	r0, r8
 8000e84:	f7ff ff74 	bl	8000d70 <chEvtBroadcastFlagsI>
 8000e88:	e7ca      	b.n	8000e20 <VectorD8+0x80>
 8000e8a:	2320      	movs	r3, #32
 8000e8c:	f383 8811 	msr	BASEPRI, r3
 8000e90:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000e94:	1d38      	adds	r0, r7, #4
 8000e96:	f7ff ff6b 	bl	8000d70 <chEvtBroadcastFlagsI>
 8000e9a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8000e9e:	2300      	movs	r3, #0
 8000ea0:	f8aa 2000 	strh.w	r2, [sl]
 8000ea4:	f383 8811 	msr	BASEPRI, r3
 8000ea8:	e787      	b.n	8000dba <VectorD8+0x1a>
 8000eaa:	2320      	movs	r3, #32
 8000eac:	f383 8811 	msr	BASEPRI, r3
 8000eb0:	4810      	ldr	r0, [pc, #64]	; (8000ef4 <VectorD8+0x154>)
 8000eb2:	f7ff ff1d 	bl	8000cf0 <chOQGetI>
 8000eb6:	2800      	cmp	r0, #0
 8000eb8:	db0e      	blt.n	8000ed8 <VectorD8+0x138>
 8000eba:	b280      	uxth	r0, r0
 8000ebc:	f8aa 0004 	strh.w	r0, [sl, #4]
 8000ec0:	2300      	movs	r3, #0
 8000ec2:	f383 8811 	msr	BASEPRI, r3
 8000ec6:	e7c2      	b.n	8000e4e <VectorD8+0xae>
 8000ec8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000eca:	2b00      	cmp	r3, #0
 8000ecc:	d0c8      	beq.n	8000e60 <VectorD8+0xc0>
 8000ece:	2110      	movs	r1, #16
 8000ed0:	4809      	ldr	r0, [pc, #36]	; (8000ef8 <VectorD8+0x158>)
 8000ed2:	f7ff ff4d 	bl	8000d70 <chEvtBroadcastFlagsI>
 8000ed6:	e7c3      	b.n	8000e60 <VectorD8+0xc0>
 8000ed8:	2108      	movs	r1, #8
 8000eda:	4807      	ldr	r0, [pc, #28]	; (8000ef8 <VectorD8+0x158>)
 8000edc:	f7ff ff48 	bl	8000d70 <chEvtBroadcastFlagsI>
 8000ee0:	f026 03c0 	bic.w	r3, r6, #192	; 0xc0
 8000ee4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000ee8:	f8aa 300c 	strh.w	r3, [sl, #12]
 8000eec:	e7e8      	b.n	8000ec0 <VectorD8+0x120>
 8000eee:	bf00      	nop
 8000ef0:	200008b8 	.word	0x200008b8
 8000ef4:	200008e8 	.word	0x200008e8
 8000ef8:	200008bc 	.word	0x200008bc
 8000efc:	00000000 	.word	0x00000000

08000f00 <chMtxUnlockS>:
 8000f00:	4a12      	ldr	r2, [pc, #72]	; (8000f4c <chMtxUnlockS+0x4c>)
 8000f02:	b430      	push	{r4, r5}
 8000f04:	6804      	ldr	r4, [r0, #0]
 8000f06:	68c3      	ldr	r3, [r0, #12]
 8000f08:	6995      	ldr	r5, [r2, #24]
 8000f0a:	4284      	cmp	r4, r0
 8000f0c:	63ab      	str	r3, [r5, #56]	; 0x38
 8000f0e:	d018      	beq.n	8000f42 <chMtxUnlockS+0x42>
 8000f10:	4601      	mov	r1, r0
 8000f12:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 8000f14:	b14b      	cbz	r3, 8000f2a <chMtxUnlockS+0x2a>
 8000f16:	681a      	ldr	r2, [r3, #0]
 8000f18:	4293      	cmp	r3, r2
 8000f1a:	d003      	beq.n	8000f24 <chMtxUnlockS+0x24>
 8000f1c:	6892      	ldr	r2, [r2, #8]
 8000f1e:	4290      	cmp	r0, r2
 8000f20:	bf38      	it	cc
 8000f22:	4610      	movcc	r0, r2
 8000f24:	68db      	ldr	r3, [r3, #12]
 8000f26:	2b00      	cmp	r3, #0
 8000f28:	d1f5      	bne.n	8000f16 <chMtxUnlockS+0x16>
 8000f2a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8000f2c:	6823      	ldr	r3, [r4, #0]
 8000f2e:	60a8      	str	r0, [r5, #8]
 8000f30:	600b      	str	r3, [r1, #0]
 8000f32:	4620      	mov	r0, r4
 8000f34:	6059      	str	r1, [r3, #4]
 8000f36:	e9c1 4202 	strd	r4, r2, [r1, #8]
 8000f3a:	63a1      	str	r1, [r4, #56]	; 0x38
 8000f3c:	bc30      	pop	{r4, r5}
 8000f3e:	f7ff be77 	b.w	8000c30 <chSchReadyI>
 8000f42:	2300      	movs	r3, #0
 8000f44:	60a3      	str	r3, [r4, #8]
 8000f46:	bc30      	pop	{r4, r5}
 8000f48:	4770      	bx	lr
 8000f4a:	bf00      	nop
 8000f4c:	20000930 	.word	0x20000930

08000f50 <chSemSignalI>:
 8000f50:	6883      	ldr	r3, [r0, #8]
 8000f52:	3301      	adds	r3, #1
 8000f54:	2b00      	cmp	r3, #0
 8000f56:	6083      	str	r3, [r0, #8]
 8000f58:	dd00      	ble.n	8000f5c <chSemSignalI+0xc>
 8000f5a:	4770      	bx	lr
 8000f5c:	b410      	push	{r4}
 8000f5e:	4602      	mov	r2, r0
 8000f60:	2400      	movs	r4, #0
 8000f62:	6803      	ldr	r3, [r0, #0]
 8000f64:	6819      	ldr	r1, [r3, #0]
 8000f66:	4618      	mov	r0, r3
 8000f68:	6011      	str	r1, [r2, #0]
 8000f6a:	604a      	str	r2, [r1, #4]
 8000f6c:	621c      	str	r4, [r3, #32]
 8000f6e:	bc10      	pop	{r4}
 8000f70:	f7ff be5e 	b.w	8000c30 <chSchReadyI>
	...

08000f80 <chMBPostI.constprop.18>:
 8000f80:	b538      	push	{r3, r4, r5, lr}
 8000f82:	4b0c      	ldr	r3, [pc, #48]	; (8000fb4 <chMBPostI.constprop.18+0x34>)
 8000f84:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000f86:	2a00      	cmp	r2, #0
 8000f88:	dd10      	ble.n	8000fac <chMBPostI.constprop.18+0x2c>
 8000f8a:	e9d3 5401 	ldrd	r5, r4, [r3, #4]
 8000f8e:	1d21      	adds	r1, r4, #4
 8000f90:	3a01      	subs	r2, #1
 8000f92:	42a9      	cmp	r1, r5
 8000f94:	625a      	str	r2, [r3, #36]	; 0x24
 8000f96:	bf28      	it	cs
 8000f98:	681a      	ldrcs	r2, [r3, #0]
 8000f9a:	6099      	str	r1, [r3, #8]
 8000f9c:	6020      	str	r0, [r4, #0]
 8000f9e:	4806      	ldr	r0, [pc, #24]	; (8000fb8 <chMBPostI.constprop.18+0x38>)
 8000fa0:	bf28      	it	cs
 8000fa2:	609a      	strcs	r2, [r3, #8]
 8000fa4:	f7ff ffd4 	bl	8000f50 <chSemSignalI>
 8000fa8:	2000      	movs	r0, #0
 8000faa:	bd38      	pop	{r3, r4, r5, pc}
 8000fac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000fb0:	bd38      	pop	{r3, r4, r5, pc}
 8000fb2:	bf00      	nop
 8000fb4:	20000854 	.word	0x20000854
 8000fb8:	20000864 	.word	0x20000864
 8000fbc:	00000000 	.word	0x00000000

08000fc0 <chMBPostAheadI.constprop.16>:
 8000fc0:	4a0c      	ldr	r2, [pc, #48]	; (8000ff4 <chMBPostAheadI.constprop.16+0x34>)
 8000fc2:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8000fc4:	2900      	cmp	r1, #0
 8000fc6:	dd11      	ble.n	8000fec <chMBPostAheadI.constprop.16+0x2c>
 8000fc8:	68d3      	ldr	r3, [r2, #12]
 8000fca:	b510      	push	{r4, lr}
 8000fcc:	6814      	ldr	r4, [r2, #0]
 8000fce:	3b04      	subs	r3, #4
 8000fd0:	3901      	subs	r1, #1
 8000fd2:	42a3      	cmp	r3, r4
 8000fd4:	6251      	str	r1, [r2, #36]	; 0x24
 8000fd6:	60d3      	str	r3, [r2, #12]
 8000fd8:	d202      	bcs.n	8000fe0 <chMBPostAheadI.constprop.16+0x20>
 8000fda:	6853      	ldr	r3, [r2, #4]
 8000fdc:	3b04      	subs	r3, #4
 8000fde:	60d3      	str	r3, [r2, #12]
 8000fe0:	6018      	str	r0, [r3, #0]
 8000fe2:	4805      	ldr	r0, [pc, #20]	; (8000ff8 <chMBPostAheadI.constprop.16+0x38>)
 8000fe4:	f7ff ffb4 	bl	8000f50 <chSemSignalI>
 8000fe8:	2000      	movs	r0, #0
 8000fea:	bd10      	pop	{r4, pc}
 8000fec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ff0:	4770      	bx	lr
 8000ff2:	bf00      	nop
 8000ff4:	20000854 	.word	0x20000854
 8000ff8:	20000864 	.word	0x20000864
 8000ffc:	00000000 	.word	0x00000000

08001000 <chMBFetchI.constprop.14>:
 8001000:	4b0c      	ldr	r3, [pc, #48]	; (8001034 <chMBFetchI.constprop.14+0x34>)
 8001002:	6999      	ldr	r1, [r3, #24]
 8001004:	2900      	cmp	r1, #0
 8001006:	dd12      	ble.n	800102e <chMBFetchI.constprop.14+0x2e>
 8001008:	68da      	ldr	r2, [r3, #12]
 800100a:	3901      	subs	r1, #1
 800100c:	b510      	push	{r4, lr}
 800100e:	6199      	str	r1, [r3, #24]
 8001010:	6859      	ldr	r1, [r3, #4]
 8001012:	6814      	ldr	r4, [r2, #0]
 8001014:	3204      	adds	r2, #4
 8001016:	428a      	cmp	r2, r1
 8001018:	60da      	str	r2, [r3, #12]
 800101a:	bf28      	it	cs
 800101c:	681a      	ldrcs	r2, [r3, #0]
 800101e:	6004      	str	r4, [r0, #0]
 8001020:	4805      	ldr	r0, [pc, #20]	; (8001038 <chMBFetchI.constprop.14+0x38>)
 8001022:	bf28      	it	cs
 8001024:	60da      	strcs	r2, [r3, #12]
 8001026:	f7ff ff93 	bl	8000f50 <chSemSignalI>
 800102a:	2000      	movs	r0, #0
 800102c:	bd10      	pop	{r4, pc}
 800102e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001032:	4770      	bx	lr
 8001034:	20000854 	.word	0x20000854
 8001038:	20000870 	.word	0x20000870
 800103c:	00000000 	.word	0x00000000

08001040 <chSemResetI>:
 8001040:	b570      	push	{r4, r5, r6, lr}
 8001042:	6885      	ldr	r5, [r0, #8]
 8001044:	6081      	str	r1, [r0, #8]
 8001046:	3501      	adds	r5, #1
 8001048:	2d00      	cmp	r5, #0
 800104a:	dc0c      	bgt.n	8001066 <chSemResetI+0x26>
 800104c:	4604      	mov	r4, r0
 800104e:	f06f 0601 	mvn.w	r6, #1
 8001052:	6860      	ldr	r0, [r4, #4]
 8001054:	3501      	adds	r5, #1
 8001056:	6843      	ldr	r3, [r0, #4]
 8001058:	6063      	str	r3, [r4, #4]
 800105a:	601c      	str	r4, [r3, #0]
 800105c:	f7ff fde8 	bl	8000c30 <chSchReadyI>
 8001060:	2d01      	cmp	r5, #1
 8001062:	6206      	str	r6, [r0, #32]
 8001064:	d1f5      	bne.n	8001052 <chSemResetI+0x12>
 8001066:	bd70      	pop	{r4, r5, r6, pc}
	...

08001070 <chVTDoResetI>:
 8001070:	4b1c      	ldr	r3, [pc, #112]	; (80010e4 <chVTDoResetI+0x74>)
 8001072:	b470      	push	{r4, r5, r6}
 8001074:	69da      	ldr	r2, [r3, #28]
 8001076:	4282      	cmp	r2, r0
 8001078:	d00f      	beq.n	800109a <chVTDoResetI+0x2a>
 800107a:	e9d0 2100 	ldrd	r2, r1, [r0]
 800107e:	2400      	movs	r4, #0
 8001080:	600a      	str	r2, [r1, #0]
 8001082:	6802      	ldr	r2, [r0, #0]
 8001084:	331c      	adds	r3, #28
 8001086:	429a      	cmp	r2, r3
 8001088:	6051      	str	r1, [r2, #4]
 800108a:	60c4      	str	r4, [r0, #12]
 800108c:	d003      	beq.n	8001096 <chVTDoResetI+0x26>
 800108e:	8901      	ldrh	r1, [r0, #8]
 8001090:	8913      	ldrh	r3, [r2, #8]
 8001092:	440b      	add	r3, r1
 8001094:	8113      	strh	r3, [r2, #8]
 8001096:	bc70      	pop	{r4, r5, r6}
 8001098:	4770      	bx	lr
 800109a:	4618      	mov	r0, r3
 800109c:	2400      	movs	r4, #0
 800109e:	6811      	ldr	r1, [r2, #0]
 80010a0:	f840 1f1c 	str.w	r1, [r0, #28]!
 80010a4:	4281      	cmp	r1, r0
 80010a6:	6048      	str	r0, [r1, #4]
 80010a8:	60d4      	str	r4, [r2, #12]
 80010aa:	d017      	beq.n	80010dc <chVTDoResetI+0x6c>
 80010ac:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 80010b0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80010b2:	8916      	ldrh	r6, [r2, #8]
 80010b4:	8cdd      	ldrh	r5, [r3, #38]	; 0x26
 80010b6:	890b      	ldrh	r3, [r1, #8]
 80010b8:	b282      	uxth	r2, r0
 80010ba:	4433      	add	r3, r6
 80010bc:	1b50      	subs	r0, r2, r5
 80010be:	b29b      	uxth	r3, r3
 80010c0:	b280      	uxth	r0, r0
 80010c2:	4283      	cmp	r3, r0
 80010c4:	810b      	strh	r3, [r1, #8]
 80010c6:	d9e6      	bls.n	8001096 <chVTDoResetI+0x26>
 80010c8:	1a1b      	subs	r3, r3, r0
 80010ca:	b29b      	uxth	r3, r3
 80010cc:	2b02      	cmp	r3, #2
 80010ce:	bf2c      	ite	cs
 80010d0:	18d3      	addcs	r3, r2, r3
 80010d2:	1c93      	addcc	r3, r2, #2
 80010d4:	b29b      	uxth	r3, r3
 80010d6:	6363      	str	r3, [r4, #52]	; 0x34
 80010d8:	bc70      	pop	{r4, r5, r6}
 80010da:	4770      	bx	lr
 80010dc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010e0:	60dc      	str	r4, [r3, #12]
 80010e2:	e7d8      	b.n	8001096 <chVTDoResetI+0x26>
 80010e4:	20000930 	.word	0x20000930
	...

080010f0 <chVTDoSetI>:
 80010f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80010f2:	4e1e      	ldr	r6, [pc, #120]	; (800116c <chVTDoSetI+0x7c>)
 80010f4:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 80010f8:	46b6      	mov	lr, r6
 80010fa:	2902      	cmp	r1, #2
 80010fc:	bf38      	it	cc
 80010fe:	2102      	movcc	r1, #2
 8001100:	6a7d      	ldr	r5, [r7, #36]	; 0x24
 8001102:	f85e 4f1c 	ldr.w	r4, [lr, #28]!
 8001106:	fa1f fc85 	uxth.w	ip, r5
 800110a:	eb01 050c 	add.w	r5, r1, ip
 800110e:	4574      	cmp	r4, lr
 8001110:	6103      	str	r3, [r0, #16]
 8001112:	60c2      	str	r2, [r0, #12]
 8001114:	b2ad      	uxth	r5, r5
 8001116:	d01b      	beq.n	8001150 <chVTDoSetI+0x60>
 8001118:	8cf3      	ldrh	r3, [r6, #38]	; 0x26
 800111a:	8922      	ldrh	r2, [r4, #8]
 800111c:	1aeb      	subs	r3, r5, r3
 800111e:	b29b      	uxth	r3, r3
 8001120:	429a      	cmp	r2, r3
 8001122:	d904      	bls.n	800112e <chVTDoSetI+0x3e>
 8001124:	e012      	b.n	800114c <chVTDoSetI+0x5c>
 8001126:	6824      	ldr	r4, [r4, #0]
 8001128:	1a9b      	subs	r3, r3, r2
 800112a:	8922      	ldrh	r2, [r4, #8]
 800112c:	b29b      	uxth	r3, r3
 800112e:	429a      	cmp	r2, r3
 8001130:	d3f9      	bcc.n	8001126 <chVTDoSetI+0x36>
 8001132:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001136:	6862      	ldr	r2, [r4, #4]
 8001138:	e9c0 4200 	strd	r4, r2, [r0]
 800113c:	6010      	str	r0, [r2, #0]
 800113e:	6060      	str	r0, [r4, #4]
 8001140:	8103      	strh	r3, [r0, #8]
 8001142:	8922      	ldrh	r2, [r4, #8]
 8001144:	1ad3      	subs	r3, r2, r3
 8001146:	8123      	strh	r3, [r4, #8]
 8001148:	84b1      	strh	r1, [r6, #36]	; 0x24
 800114a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800114c:	637d      	str	r5, [r7, #52]	; 0x34
 800114e:	e7ee      	b.n	800112e <chVTDoSetI+0x3e>
 8001150:	2200      	movs	r2, #0
 8001152:	2302      	movs	r3, #2
 8001154:	f8a6 c026 	strh.w	ip, [r6, #38]	; 0x26
 8001158:	e9c6 0007 	strd	r0, r0, [r6, #28]
 800115c:	e9c0 4400 	strd	r4, r4, [r0]
 8001160:	8101      	strh	r1, [r0, #8]
 8001162:	637d      	str	r5, [r7, #52]	; 0x34
 8001164:	613a      	str	r2, [r7, #16]
 8001166:	60fb      	str	r3, [r7, #12]
 8001168:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800116a:	bf00      	nop
 800116c:	20000930 	.word	0x20000930

08001170 <test_start_timer.constprop.1>:
 8001170:	2100      	movs	r1, #0
 8001172:	4a0b      	ldr	r2, [pc, #44]	; (80011a0 <test_start_timer.constprop.1+0x30>)
 8001174:	b508      	push	{r3, lr}
 8001176:	2320      	movs	r3, #32
 8001178:	7011      	strb	r1, [r2, #0]
 800117a:	f383 8811 	msr	BASEPRI, r3
 800117e:	4809      	ldr	r0, [pc, #36]	; (80011a4 <test_start_timer.constprop.1+0x34>)
 8001180:	68c3      	ldr	r3, [r0, #12]
 8001182:	b10b      	cbz	r3, 8001188 <test_start_timer.constprop.1+0x18>
 8001184:	f7ff ff74 	bl	8001070 <chVTDoResetI>
 8001188:	2300      	movs	r3, #0
 800118a:	4a07      	ldr	r2, [pc, #28]	; (80011a8 <test_start_timer.constprop.1+0x38>)
 800118c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001190:	4804      	ldr	r0, [pc, #16]	; (80011a4 <test_start_timer.constprop.1+0x34>)
 8001192:	f7ff ffad 	bl	80010f0 <chVTDoSetI>
 8001196:	2300      	movs	r3, #0
 8001198:	f383 8811 	msr	BASEPRI, r3
 800119c:	bd08      	pop	{r3, pc}
 800119e:	bf00      	nop
 80011a0:	200011c8 	.word	0x200011c8
 80011a4:	200011f4 	.word	0x200011f4
 80011a8:	08000261 	.word	0x08000261
 80011ac:	00000000 	.word	0x00000000

080011b0 <chSysGetStatusAndLockX.part.2>:
 80011b0:	f3ef 8305 	mrs	r3, IPSR
 80011b4:	2320      	movs	r3, #32
 80011b6:	f383 8811 	msr	BASEPRI, r3
 80011ba:	4770      	bx	lr
 80011bc:	0000      	movs	r0, r0
	...

080011c0 <chSysIntegrityCheckI>:
 80011c0:	07c2      	lsls	r2, r0, #31
 80011c2:	b410      	push	{r4}
 80011c4:	d510      	bpl.n	80011e8 <chSysIntegrityCheckI+0x28>
 80011c6:	4b26      	ldr	r3, [pc, #152]	; (8001260 <chSysIntegrityCheckI+0xa0>)
 80011c8:	e9d3 1400 	ldrd	r1, r4, [r3]
 80011cc:	4299      	cmp	r1, r3
 80011ce:	d03b      	beq.n	8001248 <chSysIntegrityCheckI+0x88>
 80011d0:	2200      	movs	r2, #0
 80011d2:	6809      	ldr	r1, [r1, #0]
 80011d4:	3201      	adds	r2, #1
 80011d6:	4299      	cmp	r1, r3
 80011d8:	d1fb      	bne.n	80011d2 <chSysIntegrityCheckI+0x12>
 80011da:	428c      	cmp	r4, r1
 80011dc:	d031      	beq.n	8001242 <chSysIntegrityCheckI+0x82>
 80011de:	6864      	ldr	r4, [r4, #4]
 80011e0:	3a01      	subs	r2, #1
 80011e2:	429c      	cmp	r4, r3
 80011e4:	d1fb      	bne.n	80011de <chSysIntegrityCheckI+0x1e>
 80011e6:	bb62      	cbnz	r2, 8001242 <chSysIntegrityCheckI+0x82>
 80011e8:	0783      	lsls	r3, r0, #30
 80011ea:	d512      	bpl.n	8001212 <chSysIntegrityCheckI+0x52>
 80011ec:	4b1c      	ldr	r3, [pc, #112]	; (8001260 <chSysIntegrityCheckI+0xa0>)
 80011ee:	69da      	ldr	r2, [r3, #28]
 80011f0:	f103 041c 	add.w	r4, r3, #28
 80011f4:	42a2      	cmp	r2, r4
 80011f6:	6a19      	ldr	r1, [r3, #32]
 80011f8:	d02a      	beq.n	8001250 <chSysIntegrityCheckI+0x90>
 80011fa:	2300      	movs	r3, #0
 80011fc:	6812      	ldr	r2, [r2, #0]
 80011fe:	3301      	adds	r3, #1
 8001200:	42a2      	cmp	r2, r4
 8001202:	d1fb      	bne.n	80011fc <chSysIntegrityCheckI+0x3c>
 8001204:	4291      	cmp	r1, r2
 8001206:	d01c      	beq.n	8001242 <chSysIntegrityCheckI+0x82>
 8001208:	6849      	ldr	r1, [r1, #4]
 800120a:	3b01      	subs	r3, #1
 800120c:	42a1      	cmp	r1, r4
 800120e:	d1fb      	bne.n	8001208 <chSysIntegrityCheckI+0x48>
 8001210:	b9bb      	cbnz	r3, 8001242 <chSysIntegrityCheckI+0x82>
 8001212:	f010 0004 	ands.w	r0, r0, #4
 8001216:	d012      	beq.n	800123e <chSysIntegrityCheckI+0x7e>
 8001218:	4b11      	ldr	r3, [pc, #68]	; (8001260 <chSysIntegrityCheckI+0xa0>)
 800121a:	2000      	movs	r0, #0
 800121c:	e9d3 2104 	ldrd	r2, r1, [r3, #16]
 8001220:	429a      	cmp	r2, r3
 8001222:	d019      	beq.n	8001258 <chSysIntegrityCheckI+0x98>
 8001224:	6912      	ldr	r2, [r2, #16]
 8001226:	3001      	adds	r0, #1
 8001228:	429a      	cmp	r2, r3
 800122a:	d1fb      	bne.n	8001224 <chSysIntegrityCheckI+0x64>
 800122c:	4291      	cmp	r1, r2
 800122e:	d008      	beq.n	8001242 <chSysIntegrityCheckI+0x82>
 8001230:	6949      	ldr	r1, [r1, #20]
 8001232:	3801      	subs	r0, #1
 8001234:	4299      	cmp	r1, r3
 8001236:	d1fb      	bne.n	8001230 <chSysIntegrityCheckI+0x70>
 8001238:	3000      	adds	r0, #0
 800123a:	bf18      	it	ne
 800123c:	2001      	movne	r0, #1
 800123e:	bc10      	pop	{r4}
 8001240:	4770      	bx	lr
 8001242:	2001      	movs	r0, #1
 8001244:	bc10      	pop	{r4}
 8001246:	4770      	bx	lr
 8001248:	429c      	cmp	r4, r3
 800124a:	d0cd      	beq.n	80011e8 <chSysIntegrityCheckI+0x28>
 800124c:	2200      	movs	r2, #0
 800124e:	e7c6      	b.n	80011de <chSysIntegrityCheckI+0x1e>
 8001250:	42a1      	cmp	r1, r4
 8001252:	d0de      	beq.n	8001212 <chSysIntegrityCheckI+0x52>
 8001254:	2300      	movs	r3, #0
 8001256:	e7d7      	b.n	8001208 <chSysIntegrityCheckI+0x48>
 8001258:	4291      	cmp	r1, r2
 800125a:	d1e9      	bne.n	8001230 <chSysIntegrityCheckI+0x70>
 800125c:	e7ef      	b.n	800123e <chSysIntegrityCheckI+0x7e>
 800125e:	bf00      	nop
 8001260:	20000930 	.word	0x20000930
	...

08001270 <sys3_execute>:
 8001270:	b538      	push	{r3, r4, r5, lr}
 8001272:	2420      	movs	r4, #32
 8001274:	f384 8811 	msr	BASEPRI, r4
 8001278:	2001      	movs	r0, #1
 800127a:	f7ff ffa1 	bl	80011c0 <chSysIntegrityCheckI>
 800127e:	2300      	movs	r3, #0
 8001280:	f383 8811 	msr	BASEPRI, r3
 8001284:	f080 0101 	eor.w	r1, r0, #1
 8001288:	b2c9      	uxtb	r1, r1
 800128a:	2001      	movs	r0, #1
 800128c:	f7ff fa40 	bl	8000710 <_test_assert>
 8001290:	b100      	cbz	r0, 8001294 <sys3_execute+0x24>
 8001292:	bd38      	pop	{r3, r4, r5, pc}
 8001294:	4605      	mov	r5, r0
 8001296:	f384 8811 	msr	BASEPRI, r4
 800129a:	2002      	movs	r0, #2
 800129c:	f7ff ff90 	bl	80011c0 <chSysIntegrityCheckI>
 80012a0:	f385 8811 	msr	BASEPRI, r5
 80012a4:	f080 0101 	eor.w	r1, r0, #1
 80012a8:	b2c9      	uxtb	r1, r1
 80012aa:	2002      	movs	r0, #2
 80012ac:	f7ff fa30 	bl	8000710 <_test_assert>
 80012b0:	4605      	mov	r5, r0
 80012b2:	2800      	cmp	r0, #0
 80012b4:	d1ed      	bne.n	8001292 <sys3_execute+0x22>
 80012b6:	f384 8811 	msr	BASEPRI, r4
 80012ba:	2004      	movs	r0, #4
 80012bc:	f7ff ff80 	bl	80011c0 <chSysIntegrityCheckI>
 80012c0:	f385 8811 	msr	BASEPRI, r5
 80012c4:	f080 0101 	eor.w	r1, r0, #1
 80012c8:	b2c9      	uxtb	r1, r1
 80012ca:	2003      	movs	r0, #3
 80012cc:	f7ff fa20 	bl	8000710 <_test_assert>
 80012d0:	4605      	mov	r5, r0
 80012d2:	2800      	cmp	r0, #0
 80012d4:	d1dd      	bne.n	8001292 <sys3_execute+0x22>
 80012d6:	f384 8811 	msr	BASEPRI, r4
 80012da:	2008      	movs	r0, #8
 80012dc:	f7ff ff70 	bl	80011c0 <chSysIntegrityCheckI>
 80012e0:	f385 8811 	msr	BASEPRI, r5
 80012e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80012e8:	f080 0101 	eor.w	r1, r0, #1
 80012ec:	b2c9      	uxtb	r1, r1
 80012ee:	2004      	movs	r0, #4
 80012f0:	f7ff ba0e 	b.w	8000710 <_test_assert>
	...

08001300 <BusFault_Handler>:
 8001300:	b672      	cpsid	i
 8001302:	4b02      	ldr	r3, [pc, #8]	; (800130c <BusFault_Handler+0xc>)
 8001304:	4a02      	ldr	r2, [pc, #8]	; (8001310 <BusFault_Handler+0x10>)
 8001306:	629a      	str	r2, [r3, #40]	; 0x28
 8001308:	e7fe      	b.n	8001308 <BusFault_Handler+0x8>
 800130a:	bf00      	nop
 800130c:	20000930 	.word	0x20000930
 8001310:	08005aa0 	.word	0x08005aa0
	...

08001320 <bmk13_execute>:
 8001320:	b510      	push	{r4, lr}
 8001322:	482f      	ldr	r0, [pc, #188]	; (80013e0 <bmk13_execute+0xc0>)
 8001324:	4c2f      	ldr	r4, [pc, #188]	; (80013e4 <bmk13_execute+0xc4>)
 8001326:	f7ff fa63 	bl	80007f0 <test_print>
 800132a:	f44f 70a8 	mov.w	r0, #336	; 0x150
 800132e:	f7ff f937 	bl	80005a0 <test_printn.part.1>
 8001332:	4620      	mov	r0, r4
 8001334:	f7ff fa3c 	bl	80007b0 <test_println>
 8001338:	482b      	ldr	r0, [pc, #172]	; (80013e8 <bmk13_execute+0xc8>)
 800133a:	f7ff fa59 	bl	80007f0 <test_print>
 800133e:	2044      	movs	r0, #68	; 0x44
 8001340:	f7ff f92e 	bl	80005a0 <test_printn.part.1>
 8001344:	4620      	mov	r0, r4
 8001346:	f7ff fa33 	bl	80007b0 <test_println>
 800134a:	4828      	ldr	r0, [pc, #160]	; (80013ec <bmk13_execute+0xcc>)
 800134c:	f7ff fa50 	bl	80007f0 <test_print>
 8001350:	2014      	movs	r0, #20
 8001352:	f7ff f925 	bl	80005a0 <test_printn.part.1>
 8001356:	4620      	mov	r0, r4
 8001358:	f7ff fa2a 	bl	80007b0 <test_println>
 800135c:	4824      	ldr	r0, [pc, #144]	; (80013f0 <bmk13_execute+0xd0>)
 800135e:	f7ff fa47 	bl	80007f0 <test_print>
 8001362:	200c      	movs	r0, #12
 8001364:	f7ff f91c 	bl	80005a0 <test_printn.part.1>
 8001368:	4620      	mov	r0, r4
 800136a:	f7ff fa21 	bl	80007b0 <test_println>
 800136e:	4821      	ldr	r0, [pc, #132]	; (80013f4 <bmk13_execute+0xd4>)
 8001370:	f7ff fa3e 	bl	80007f0 <test_print>
 8001374:	2004      	movs	r0, #4
 8001376:	f7ff f913 	bl	80005a0 <test_printn.part.1>
 800137a:	4620      	mov	r0, r4
 800137c:	f7ff fa18 	bl	80007b0 <test_println>
 8001380:	481d      	ldr	r0, [pc, #116]	; (80013f8 <bmk13_execute+0xd8>)
 8001382:	f7ff fa35 	bl	80007f0 <test_print>
 8001386:	2014      	movs	r0, #20
 8001388:	f7ff f90a 	bl	80005a0 <test_printn.part.1>
 800138c:	4620      	mov	r0, r4
 800138e:	f7ff fa0f 	bl	80007b0 <test_println>
 8001392:	481a      	ldr	r0, [pc, #104]	; (80013fc <bmk13_execute+0xdc>)
 8001394:	f7ff fa2c 	bl	80007f0 <test_print>
 8001398:	2010      	movs	r0, #16
 800139a:	f7ff f901 	bl	80005a0 <test_printn.part.1>
 800139e:	4620      	mov	r0, r4
 80013a0:	f7ff fa06 	bl	80007b0 <test_println>
 80013a4:	4816      	ldr	r0, [pc, #88]	; (8001400 <bmk13_execute+0xe0>)
 80013a6:	f7ff fa23 	bl	80007f0 <test_print>
 80013aa:	2008      	movs	r0, #8
 80013ac:	f7ff f8f8 	bl	80005a0 <test_printn.part.1>
 80013b0:	4620      	mov	r0, r4
 80013b2:	f7ff f9fd 	bl	80007b0 <test_println>
 80013b6:	4813      	ldr	r0, [pc, #76]	; (8001404 <bmk13_execute+0xe4>)
 80013b8:	f7ff fa1a 	bl	80007f0 <test_print>
 80013bc:	2024      	movs	r0, #36	; 0x24
 80013be:	f7ff f8ef 	bl	80005a0 <test_printn.part.1>
 80013c2:	4620      	mov	r0, r4
 80013c4:	f7ff f9f4 	bl	80007b0 <test_println>
 80013c8:	480f      	ldr	r0, [pc, #60]	; (8001408 <bmk13_execute+0xe8>)
 80013ca:	f7ff fa11 	bl	80007f0 <test_print>
 80013ce:	2028      	movs	r0, #40	; 0x28
 80013d0:	f7ff f8e6 	bl	80005a0 <test_printn.part.1>
 80013d4:	4620      	mov	r0, r4
 80013d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80013da:	f7ff b9e9 	b.w	80007b0 <test_println>
 80013de:	bf00      	nop
 80013e0:	08005b00 	.word	0x08005b00
 80013e4:	08005b10 	.word	0x08005b10
 80013e8:	08005b18 	.word	0x08005b18
 80013ec:	08005b28 	.word	0x08005b28
 80013f0:	08005b38 	.word	0x08005b38
 80013f4:	08005b48 	.word	0x08005b48
 80013f8:	08005b58 	.word	0x08005b58
 80013fc:	08005b68 	.word	0x08005b68
 8001400:	08005b78 	.word	0x08005b78
 8001404:	08005b88 	.word	0x08005b88
 8001408:	08005b98 	.word	0x08005b98
 800140c:	00000000 	.word	0x00000000

08001410 <chThdYield>:
 8001410:	b570      	push	{r4, r5, r6, lr}
 8001412:	2320      	movs	r3, #32
 8001414:	f383 8811 	msr	BASEPRI, r3
 8001418:	4a11      	ldr	r2, [pc, #68]	; (8001460 <chThdYield+0x50>)
 800141a:	6810      	ldr	r0, [r2, #0]
 800141c:	6994      	ldr	r4, [r2, #24]
 800141e:	6883      	ldr	r3, [r0, #8]
 8001420:	68a1      	ldr	r1, [r4, #8]
 8001422:	428b      	cmp	r3, r1
 8001424:	d203      	bcs.n	800142e <chThdYield+0x1e>
 8001426:	2300      	movs	r3, #0
 8001428:	f383 8811 	msr	BASEPRI, r3
 800142c:	bd70      	pop	{r4, r5, r6, pc}
 800142e:	2601      	movs	r6, #1
 8001430:	2500      	movs	r5, #0
 8001432:	6803      	ldr	r3, [r0, #0]
 8001434:	605a      	str	r2, [r3, #4]
 8001436:	6013      	str	r3, [r2, #0]
 8001438:	7706      	strb	r6, [r0, #28]
 800143a:	6190      	str	r0, [r2, #24]
 800143c:	7725      	strb	r5, [r4, #28]
 800143e:	e000      	b.n	8001442 <chThdYield+0x32>
 8001440:	681b      	ldr	r3, [r3, #0]
 8001442:	689a      	ldr	r2, [r3, #8]
 8001444:	4291      	cmp	r1, r2
 8001446:	d9fb      	bls.n	8001440 <chThdYield+0x30>
 8001448:	685a      	ldr	r2, [r3, #4]
 800144a:	4621      	mov	r1, r4
 800144c:	e9c4 3200 	strd	r3, r2, [r4]
 8001450:	6014      	str	r4, [r2, #0]
 8001452:	605c      	str	r4, [r3, #4]
 8001454:	f7fe fed4 	bl	8000200 <_port_switch>
 8001458:	2300      	movs	r3, #0
 800145a:	f383 8811 	msr	BASEPRI, r3
 800145e:	bd70      	pop	{r4, r5, r6, pc}
 8001460:	20000930 	.word	0x20000930
	...

08001470 <thread8>:
 8001470:	b538      	push	{r3, r4, r5, lr}
 8001472:	4604      	mov	r4, r0
 8001474:	4d08      	ldr	r5, [pc, #32]	; (8001498 <thread8+0x28>)
 8001476:	f7ff ffcb 	bl	8001410 <chThdYield>
 800147a:	f7ff ffc9 	bl	8001410 <chThdYield>
 800147e:	f7ff ffc7 	bl	8001410 <chThdYield>
 8001482:	f7ff ffc5 	bl	8001410 <chThdYield>
 8001486:	6823      	ldr	r3, [r4, #0]
 8001488:	69aa      	ldr	r2, [r5, #24]
 800148a:	3304      	adds	r3, #4
 800148c:	6023      	str	r3, [r4, #0]
 800148e:	7f53      	ldrb	r3, [r2, #29]
 8001490:	075b      	lsls	r3, r3, #29
 8001492:	d5f0      	bpl.n	8001476 <thread8+0x6>
 8001494:	bd38      	pop	{r3, r4, r5, pc}
 8001496:	bf00      	nop
 8001498:	20000930 	.word	0x20000930
 800149c:	00000000 	.word	0x00000000

080014a0 <chSchDoRescheduleAhead>:
 80014a0:	b470      	push	{r4, r5, r6}
 80014a2:	2601      	movs	r6, #1
 80014a4:	2500      	movs	r5, #0
 80014a6:	4a0c      	ldr	r2, [pc, #48]	; (80014d8 <chSchDoRescheduleAhead+0x38>)
 80014a8:	6810      	ldr	r0, [r2, #0]
 80014aa:	6994      	ldr	r4, [r2, #24]
 80014ac:	6803      	ldr	r3, [r0, #0]
 80014ae:	68a1      	ldr	r1, [r4, #8]
 80014b0:	6013      	str	r3, [r2, #0]
 80014b2:	605a      	str	r2, [r3, #4]
 80014b4:	7706      	strb	r6, [r0, #28]
 80014b6:	6190      	str	r0, [r2, #24]
 80014b8:	7725      	strb	r5, [r4, #28]
 80014ba:	e000      	b.n	80014be <chSchDoRescheduleAhead+0x1e>
 80014bc:	681b      	ldr	r3, [r3, #0]
 80014be:	689a      	ldr	r2, [r3, #8]
 80014c0:	4291      	cmp	r1, r2
 80014c2:	d3fb      	bcc.n	80014bc <chSchDoRescheduleAhead+0x1c>
 80014c4:	685a      	ldr	r2, [r3, #4]
 80014c6:	4621      	mov	r1, r4
 80014c8:	e9c4 3200 	strd	r3, r2, [r4]
 80014cc:	6014      	str	r4, [r2, #0]
 80014ce:	605c      	str	r4, [r3, #4]
 80014d0:	bc70      	pop	{r4, r5, r6}
 80014d2:	f7fe be95 	b.w	8000200 <_port_switch>
 80014d6:	bf00      	nop
 80014d8:	20000930 	.word	0x20000930
 80014dc:	00000000 	.word	0x00000000

080014e0 <chSchRescheduleS>:
 80014e0:	4b04      	ldr	r3, [pc, #16]	; (80014f4 <chSchRescheduleS+0x14>)
 80014e2:	681a      	ldr	r2, [r3, #0]
 80014e4:	699b      	ldr	r3, [r3, #24]
 80014e6:	6892      	ldr	r2, [r2, #8]
 80014e8:	689b      	ldr	r3, [r3, #8]
 80014ea:	429a      	cmp	r2, r3
 80014ec:	d800      	bhi.n	80014f0 <chSchRescheduleS+0x10>
 80014ee:	4770      	bx	lr
 80014f0:	f7ff bfd6 	b.w	80014a0 <chSchDoRescheduleAhead>
 80014f4:	20000930 	.word	0x20000930
	...

08001500 <thread4.lto_priv.72>:
 8001500:	b508      	push	{r3, lr}
 8001502:	2220      	movs	r2, #32
 8001504:	f382 8811 	msr	BASEPRI, r2
 8001508:	6883      	ldr	r3, [r0, #8]
 800150a:	2b00      	cmp	r3, #0
 800150c:	dd05      	ble.n	800151a <thread4.lto_priv.72+0x1a>
 800150e:	f7ff ffe7 	bl	80014e0 <chSchRescheduleS>
 8001512:	2300      	movs	r3, #0
 8001514:	f383 8811 	msr	BASEPRI, r3
 8001518:	bd08      	pop	{r3, pc}
 800151a:	f7ff fd19 	bl	8000f50 <chSemSignalI>
 800151e:	f7ff ffdf 	bl	80014e0 <chSchRescheduleS>
 8001522:	2300      	movs	r3, #0
 8001524:	f383 8811 	msr	BASEPRI, r3
 8001528:	bd08      	pop	{r3, pc}
 800152a:	bf00      	nop
 800152c:	0000      	movs	r0, r0
	...

08001530 <chMtxUnlockAll>:
 8001530:	4a13      	ldr	r2, [pc, #76]	; (8001580 <chMtxUnlockAll+0x50>)
 8001532:	b570      	push	{r4, r5, r6, lr}
 8001534:	2320      	movs	r3, #32
 8001536:	6994      	ldr	r4, [r2, #24]
 8001538:	f383 8811 	msr	BASEPRI, r3
 800153c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800153e:	b1b3      	cbz	r3, 800156e <chMtxUnlockAll+0x3e>
 8001540:	2600      	movs	r6, #0
 8001542:	681a      	ldr	r2, [r3, #0]
 8001544:	68d9      	ldr	r1, [r3, #12]
 8001546:	4293      	cmp	r3, r2
 8001548:	63a1      	str	r1, [r4, #56]	; 0x38
 800154a:	d014      	beq.n	8001576 <chMtxUnlockAll+0x46>
 800154c:	6b95      	ldr	r5, [r2, #56]	; 0x38
 800154e:	6811      	ldr	r1, [r2, #0]
 8001550:	4610      	mov	r0, r2
 8001552:	6019      	str	r1, [r3, #0]
 8001554:	604b      	str	r3, [r1, #4]
 8001556:	e9c3 2502 	strd	r2, r5, [r3, #8]
 800155a:	6393      	str	r3, [r2, #56]	; 0x38
 800155c:	f7ff fb68 	bl	8000c30 <chSchReadyI>
 8001560:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001562:	2b00      	cmp	r3, #0
 8001564:	d1ed      	bne.n	8001542 <chMtxUnlockAll+0x12>
 8001566:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8001568:	60a3      	str	r3, [r4, #8]
 800156a:	f7ff ffb9 	bl	80014e0 <chSchRescheduleS>
 800156e:	2300      	movs	r3, #0
 8001570:	f383 8811 	msr	BASEPRI, r3
 8001574:	bd70      	pop	{r4, r5, r6, pc}
 8001576:	609e      	str	r6, [r3, #8]
 8001578:	460b      	mov	r3, r1
 800157a:	2b00      	cmp	r3, #0
 800157c:	d1e1      	bne.n	8001542 <chMtxUnlockAll+0x12>
 800157e:	e7f2      	b.n	8001566 <chMtxUnlockAll+0x36>
 8001580:	20000930 	.word	0x20000930
	...

08001590 <chThdSetPriority>:
 8001590:	b510      	push	{r4, lr}
 8001592:	2320      	movs	r3, #32
 8001594:	f383 8811 	msr	BASEPRI, r3
 8001598:	4b08      	ldr	r3, [pc, #32]	; (80015bc <chThdSetPriority+0x2c>)
 800159a:	699b      	ldr	r3, [r3, #24]
 800159c:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800159e:	6899      	ldr	r1, [r3, #8]
 80015a0:	42a1      	cmp	r1, r4
 80015a2:	d001      	beq.n	80015a8 <chThdSetPriority+0x18>
 80015a4:	4281      	cmp	r1, r0
 80015a6:	d200      	bcs.n	80015aa <chThdSetPriority+0x1a>
 80015a8:	6098      	str	r0, [r3, #8]
 80015aa:	63d8      	str	r0, [r3, #60]	; 0x3c
 80015ac:	f7ff ff98 	bl	80014e0 <chSchRescheduleS>
 80015b0:	2300      	movs	r3, #0
 80015b2:	f383 8811 	msr	BASEPRI, r3
 80015b6:	4620      	mov	r0, r4
 80015b8:	bd10      	pop	{r4, pc}
 80015ba:	bf00      	nop
 80015bc:	20000930 	.word	0x20000930

080015c0 <thd3_execute>:
 80015c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015c2:	4e49      	ldr	r6, [pc, #292]	; (80016e8 <thd3_execute+0x128>)
 80015c4:	69b3      	ldr	r3, [r6, #24]
 80015c6:	689c      	ldr	r4, [r3, #8]
 80015c8:	1c65      	adds	r5, r4, #1
 80015ca:	4628      	mov	r0, r5
 80015cc:	f7ff ffe0 	bl	8001590 <chThdSetPriority>
 80015d0:	4607      	mov	r7, r0
 80015d2:	1b39      	subs	r1, r7, r4
 80015d4:	fab1 f181 	clz	r1, r1
 80015d8:	2001      	movs	r0, #1
 80015da:	0949      	lsrs	r1, r1, #5
 80015dc:	f7ff f898 	bl	8000710 <_test_assert>
 80015e0:	b100      	cbz	r0, 80015e4 <thd3_execute+0x24>
 80015e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80015e4:	69b3      	ldr	r3, [r6, #24]
 80015e6:	2002      	movs	r0, #2
 80015e8:	6899      	ldr	r1, [r3, #8]
 80015ea:	1b49      	subs	r1, r1, r5
 80015ec:	fab1 f181 	clz	r1, r1
 80015f0:	0949      	lsrs	r1, r1, #5
 80015f2:	f7ff f88d 	bl	8000710 <_test_assert>
 80015f6:	2800      	cmp	r0, #0
 80015f8:	d1f3      	bne.n	80015e2 <thd3_execute+0x22>
 80015fa:	4638      	mov	r0, r7
 80015fc:	f7ff ffc8 	bl	8001590 <chThdSetPriority>
 8001600:	1a29      	subs	r1, r5, r0
 8001602:	fab1 f181 	clz	r1, r1
 8001606:	2003      	movs	r0, #3
 8001608:	0949      	lsrs	r1, r1, #5
 800160a:	f7ff f881 	bl	8000710 <_test_assert>
 800160e:	2800      	cmp	r0, #0
 8001610:	d1e7      	bne.n	80015e2 <thd3_execute+0x22>
 8001612:	69b3      	ldr	r3, [r6, #24]
 8001614:	2004      	movs	r0, #4
 8001616:	6899      	ldr	r1, [r3, #8]
 8001618:	1b09      	subs	r1, r1, r4
 800161a:	fab1 f181 	clz	r1, r1
 800161e:	0949      	lsrs	r1, r1, #5
 8001620:	f7ff f876 	bl	8000710 <_test_assert>
 8001624:	2800      	cmp	r0, #0
 8001626:	d1dc      	bne.n	80015e2 <thd3_execute+0x22>
 8001628:	2320      	movs	r3, #32
 800162a:	f383 8811 	msr	BASEPRI, r3
 800162e:	69b2      	ldr	r2, [r6, #24]
 8001630:	6893      	ldr	r3, [r2, #8]
 8001632:	3302      	adds	r3, #2
 8001634:	6093      	str	r3, [r2, #8]
 8001636:	f380 8811 	msr	BASEPRI, r0
 800163a:	69b3      	ldr	r3, [r6, #24]
 800163c:	1ca7      	adds	r7, r4, #2
 800163e:	6899      	ldr	r1, [r3, #8]
 8001640:	2005      	movs	r0, #5
 8001642:	1bc9      	subs	r1, r1, r7
 8001644:	fab1 f181 	clz	r1, r1
 8001648:	0949      	lsrs	r1, r1, #5
 800164a:	f7ff f861 	bl	8000710 <_test_assert>
 800164e:	2800      	cmp	r0, #0
 8001650:	d1c7      	bne.n	80015e2 <thd3_execute+0x22>
 8001652:	4628      	mov	r0, r5
 8001654:	f7ff ff9c 	bl	8001590 <chThdSetPriority>
 8001658:	1b01      	subs	r1, r0, r4
 800165a:	fab1 f181 	clz	r1, r1
 800165e:	2006      	movs	r0, #6
 8001660:	0949      	lsrs	r1, r1, #5
 8001662:	f7ff f855 	bl	8000710 <_test_assert>
 8001666:	2800      	cmp	r0, #0
 8001668:	d1bb      	bne.n	80015e2 <thd3_execute+0x22>
 800166a:	69b3      	ldr	r3, [r6, #24]
 800166c:	2007      	movs	r0, #7
 800166e:	6899      	ldr	r1, [r3, #8]
 8001670:	1bc9      	subs	r1, r1, r7
 8001672:	fab1 f181 	clz	r1, r1
 8001676:	0949      	lsrs	r1, r1, #5
 8001678:	f7ff f84a 	bl	8000710 <_test_assert>
 800167c:	2800      	cmp	r0, #0
 800167e:	d1b0      	bne.n	80015e2 <thd3_execute+0x22>
 8001680:	69b3      	ldr	r3, [r6, #24]
 8001682:	2008      	movs	r0, #8
 8001684:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001686:	1b4f      	subs	r7, r1, r5
 8001688:	4279      	negs	r1, r7
 800168a:	4179      	adcs	r1, r7
 800168c:	f7ff f840 	bl	8000710 <_test_assert>
 8001690:	2800      	cmp	r0, #0
 8001692:	d1a6      	bne.n	80015e2 <thd3_execute+0x22>
 8001694:	1ce7      	adds	r7, r4, #3
 8001696:	4638      	mov	r0, r7
 8001698:	f7ff ff7a 	bl	8001590 <chThdSetPriority>
 800169c:	1a28      	subs	r0, r5, r0
 800169e:	4241      	negs	r1, r0
 80016a0:	4141      	adcs	r1, r0
 80016a2:	2009      	movs	r0, #9
 80016a4:	f7ff f834 	bl	8000710 <_test_assert>
 80016a8:	2800      	cmp	r0, #0
 80016aa:	d19a      	bne.n	80015e2 <thd3_execute+0x22>
 80016ac:	69b3      	ldr	r3, [r6, #24]
 80016ae:	200a      	movs	r0, #10
 80016b0:	6899      	ldr	r1, [r3, #8]
 80016b2:	1bca      	subs	r2, r1, r7
 80016b4:	4251      	negs	r1, r2
 80016b6:	4151      	adcs	r1, r2
 80016b8:	f7ff f82a 	bl	8000710 <_test_assert>
 80016bc:	2800      	cmp	r0, #0
 80016be:	d190      	bne.n	80015e2 <thd3_execute+0x22>
 80016c0:	69b3      	ldr	r3, [r6, #24]
 80016c2:	200b      	movs	r0, #11
 80016c4:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80016c6:	1bcb      	subs	r3, r1, r7
 80016c8:	4259      	negs	r1, r3
 80016ca:	4159      	adcs	r1, r3
 80016cc:	f7ff f820 	bl	8000710 <_test_assert>
 80016d0:	2800      	cmp	r0, #0
 80016d2:	d186      	bne.n	80015e2 <thd3_execute+0x22>
 80016d4:	2320      	movs	r3, #32
 80016d6:	f383 8811 	msr	BASEPRI, r3
 80016da:	69b3      	ldr	r3, [r6, #24]
 80016dc:	609c      	str	r4, [r3, #8]
 80016de:	63dc      	str	r4, [r3, #60]	; 0x3c
 80016e0:	f380 8811 	msr	BASEPRI, r0
 80016e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80016e6:	bf00      	nop
 80016e8:	20000930 	.word	0x20000930
 80016ec:	00000000 	.word	0x00000000

080016f0 <chSysRestoreStatusX.part.3>:
 80016f0:	b510      	push	{r4, lr}
 80016f2:	f3ef 8405 	mrs	r4, IPSR
 80016f6:	f3c4 0408 	ubfx	r4, r4, #0, #9
 80016fa:	b11c      	cbz	r4, 8001704 <chSysRestoreStatusX.part.3+0x14>
 80016fc:	2300      	movs	r3, #0
 80016fe:	f383 8811 	msr	BASEPRI, r3
 8001702:	bd10      	pop	{r4, pc}
 8001704:	f7ff feec 	bl	80014e0 <chSchRescheduleS>
 8001708:	f384 8811 	msr	BASEPRI, r4
 800170c:	bd10      	pop	{r4, pc}
 800170e:	bf00      	nop

08001710 <vtcb>:
 8001710:	b508      	push	{r3, lr}
 8001712:	2320      	movs	r3, #32
 8001714:	f383 8811 	msr	BASEPRI, r3
 8001718:	2200      	movs	r2, #0
 800171a:	f382 8811 	msr	BASEPRI, r2
 800171e:	f383 8811 	msr	BASEPRI, r3
 8001722:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8001726:	b91b      	cbnz	r3, 8001730 <vtcb+0x20>
 8001728:	f7ff fd42 	bl	80011b0 <chSysGetStatusAndLockX.part.2>
 800172c:	f7ff ffe0 	bl	80016f0 <chSysRestoreStatusX.part.3>
 8001730:	2300      	movs	r3, #0
 8001732:	f383 8811 	msr	BASEPRI, r3
 8001736:	bd08      	pop	{r3, pc}
	...

08001740 <chSchWakeupS>:
 8001740:	4b14      	ldr	r3, [pc, #80]	; (8001794 <chSchWakeupS+0x54>)
 8001742:	b470      	push	{r4, r5, r6}
 8001744:	699e      	ldr	r6, [r3, #24]
 8001746:	6885      	ldr	r5, [r0, #8]
 8001748:	4604      	mov	r4, r0
 800174a:	6201      	str	r1, [r0, #32]
 800174c:	68b0      	ldr	r0, [r6, #8]
 800174e:	4285      	cmp	r5, r0
 8001750:	d80c      	bhi.n	800176c <chSchWakeupS+0x2c>
 8001752:	2200      	movs	r2, #0
 8001754:	7722      	strb	r2, [r4, #28]
 8001756:	681b      	ldr	r3, [r3, #0]
 8001758:	689a      	ldr	r2, [r3, #8]
 800175a:	4295      	cmp	r5, r2
 800175c:	d9fb      	bls.n	8001756 <chSchWakeupS+0x16>
 800175e:	685a      	ldr	r2, [r3, #4]
 8001760:	e9c4 3200 	strd	r3, r2, [r4]
 8001764:	6014      	str	r4, [r2, #0]
 8001766:	605c      	str	r4, [r3, #4]
 8001768:	bc70      	pop	{r4, r5, r6}
 800176a:	4770      	bx	lr
 800176c:	2100      	movs	r1, #0
 800176e:	461a      	mov	r2, r3
 8001770:	7731      	strb	r1, [r6, #28]
 8001772:	6812      	ldr	r2, [r2, #0]
 8001774:	6891      	ldr	r1, [r2, #8]
 8001776:	4288      	cmp	r0, r1
 8001778:	d9fb      	bls.n	8001772 <chSchWakeupS+0x32>
 800177a:	2001      	movs	r0, #1
 800177c:	6851      	ldr	r1, [r2, #4]
 800177e:	e9c6 2100 	strd	r2, r1, [r6]
 8001782:	600e      	str	r6, [r1, #0]
 8001784:	6056      	str	r6, [r2, #4]
 8001786:	7720      	strb	r0, [r4, #28]
 8001788:	4631      	mov	r1, r6
 800178a:	4620      	mov	r0, r4
 800178c:	619c      	str	r4, [r3, #24]
 800178e:	bc70      	pop	{r4, r5, r6}
 8001790:	f7fe bd36 	b.w	8000200 <_port_switch>
 8001794:	20000930 	.word	0x20000930
	...

080017a0 <chThdCreateFromMemoryPool.constprop.51>:
 80017a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80017a4:	4e1e      	ldr	r6, [pc, #120]	; (8001820 <chThdCreateFromMemoryPool.constprop.51+0x80>)
 80017a6:	4680      	mov	r8, r0
 80017a8:	4630      	mov	r0, r6
 80017aa:	4689      	mov	r9, r1
 80017ac:	f7ff f8c8 	bl	8000940 <chPoolAlloc>
 80017b0:	4604      	mov	r4, r0
 80017b2:	2800      	cmp	r0, #0
 80017b4:	d031      	beq.n	800181a <chThdCreateFromMemoryPool.constprop.51+0x7a>
 80017b6:	2320      	movs	r3, #32
 80017b8:	f383 8811 	msr	BASEPRI, r3
 80017bc:	f04f 0c02 	mov.w	ip, #2
 80017c0:	2500      	movs	r5, #0
 80017c2:	f04f 0e01 	mov.w	lr, #1
 80017c6:	6873      	ldr	r3, [r6, #4]
 80017c8:	4a16      	ldr	r2, [pc, #88]	; (8001824 <chThdCreateFromMemoryPool.constprop.51+0x84>)
 80017ca:	3b24      	subs	r3, #36	; 0x24
 80017cc:	18c7      	adds	r7, r0, r3
 80017ce:	60c7      	str	r7, [r0, #12]
 80017d0:	50c2      	str	r2, [r0, r3]
 80017d2:	4a15      	ldr	r2, [pc, #84]	; (8001828 <chThdCreateFromMemoryPool.constprop.51+0x88>)
 80017d4:	4b15      	ldr	r3, [pc, #84]	; (800182c <chThdCreateFromMemoryPool.constprop.51+0x8c>)
 80017d6:	f8c7 9004 	str.w	r9, [r7, #4]
 80017da:	623b      	str	r3, [r7, #32]
 80017dc:	6102      	str	r2, [r0, #16]
 80017de:	6957      	ldr	r7, [r2, #20]
 80017e0:	f100 0124 	add.w	r1, r0, #36	; 0x24
 80017e4:	f100 0328 	add.w	r3, r0, #40	; 0x28
 80017e8:	f8c0 8008 	str.w	r8, [r0, #8]
 80017ec:	6147      	str	r7, [r0, #20]
 80017ee:	f8c0 803c 	str.w	r8, [r0, #60]	; 0x3c
 80017f2:	f880 e01e 	strb.w	lr, [r0, #30]
 80017f6:	f880 c01c 	strb.w	ip, [r0, #28]
 80017fa:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 80017fe:	6185      	str	r5, [r0, #24]
 8001800:	6138      	str	r0, [r7, #16]
 8001802:	6241      	str	r1, [r0, #36]	; 0x24
 8001804:	f880 c01d 	strb.w	ip, [r0, #29]
 8001808:	6406      	str	r6, [r0, #64]	; 0x40
 800180a:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800180e:	4629      	mov	r1, r5
 8001810:	6150      	str	r0, [r2, #20]
 8001812:	f7ff ff95 	bl	8001740 <chSchWakeupS>
 8001816:	f385 8811 	msr	BASEPRI, r5
 800181a:	4620      	mov	r0, r4
 800181c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001820:	20000b08 	.word	0x20000b08
 8001824:	080007a1 	.word	0x080007a1
 8001828:	20000930 	.word	0x20000930
 800182c:	08000211 	.word	0x08000211

08001830 <chCondSignal.constprop.43>:
 8001830:	b508      	push	{r3, lr}
 8001832:	2320      	movs	r3, #32
 8001834:	f383 8811 	msr	BASEPRI, r3
 8001838:	4b06      	ldr	r3, [pc, #24]	; (8001854 <chCondSignal.constprop.43+0x24>)
 800183a:	6818      	ldr	r0, [r3, #0]
 800183c:	4298      	cmp	r0, r3
 800183e:	d005      	beq.n	800184c <chCondSignal.constprop.43+0x1c>
 8001840:	6802      	ldr	r2, [r0, #0]
 8001842:	2100      	movs	r1, #0
 8001844:	6053      	str	r3, [r2, #4]
 8001846:	601a      	str	r2, [r3, #0]
 8001848:	f7ff ff7a 	bl	8001740 <chSchWakeupS>
 800184c:	2300      	movs	r3, #0
 800184e:	f383 8811 	msr	BASEPRI, r3
 8001852:	bd08      	pop	{r3, pc}
 8001854:	20000800 	.word	0x20000800
	...

08001860 <chMtxUnlock>:
 8001860:	4b16      	ldr	r3, [pc, #88]	; (80018bc <chMtxUnlock+0x5c>)
 8001862:	b570      	push	{r4, r5, r6, lr}
 8001864:	699d      	ldr	r5, [r3, #24]
 8001866:	2320      	movs	r3, #32
 8001868:	f383 8811 	msr	BASEPRI, r3
 800186c:	6804      	ldr	r4, [r0, #0]
 800186e:	68c3      	ldr	r3, [r0, #12]
 8001870:	4284      	cmp	r4, r0
 8001872:	63ab      	str	r3, [r5, #56]	; 0x38
 8001874:	d01c      	beq.n	80018b0 <chMtxUnlock+0x50>
 8001876:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8001878:	b14b      	cbz	r3, 800188e <chMtxUnlock+0x2e>
 800187a:	681a      	ldr	r2, [r3, #0]
 800187c:	4293      	cmp	r3, r2
 800187e:	d003      	beq.n	8001888 <chMtxUnlock+0x28>
 8001880:	6892      	ldr	r2, [r2, #8]
 8001882:	4291      	cmp	r1, r2
 8001884:	bf38      	it	cc
 8001886:	4611      	movcc	r1, r2
 8001888:	68db      	ldr	r3, [r3, #12]
 800188a:	2b00      	cmp	r3, #0
 800188c:	d1f5      	bne.n	800187a <chMtxUnlock+0x1a>
 800188e:	4603      	mov	r3, r0
 8001890:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8001892:	6822      	ldr	r2, [r4, #0]
 8001894:	4620      	mov	r0, r4
 8001896:	60a9      	str	r1, [r5, #8]
 8001898:	601a      	str	r2, [r3, #0]
 800189a:	2100      	movs	r1, #0
 800189c:	6053      	str	r3, [r2, #4]
 800189e:	e9c3 4602 	strd	r4, r6, [r3, #8]
 80018a2:	63a3      	str	r3, [r4, #56]	; 0x38
 80018a4:	f7ff ff4c 	bl	8001740 <chSchWakeupS>
 80018a8:	2300      	movs	r3, #0
 80018aa:	f383 8811 	msr	BASEPRI, r3
 80018ae:	bd70      	pop	{r4, r5, r6, pc}
 80018b0:	2300      	movs	r3, #0
 80018b2:	60a3      	str	r3, [r4, #8]
 80018b4:	2300      	movs	r3, #0
 80018b6:	f383 8811 	msr	BASEPRI, r3
 80018ba:	bd70      	pop	{r4, r5, r6, pc}
 80018bc:	20000930 	.word	0x20000930

080018c0 <chSemSignal>:
 80018c0:	b508      	push	{r3, lr}
 80018c2:	2320      	movs	r3, #32
 80018c4:	f383 8811 	msr	BASEPRI, r3
 80018c8:	6883      	ldr	r3, [r0, #8]
 80018ca:	3301      	adds	r3, #1
 80018cc:	2b00      	cmp	r3, #0
 80018ce:	6083      	str	r3, [r0, #8]
 80018d0:	dd03      	ble.n	80018da <chSemSignal+0x1a>
 80018d2:	2300      	movs	r3, #0
 80018d4:	f383 8811 	msr	BASEPRI, r3
 80018d8:	bd08      	pop	{r3, pc}
 80018da:	4603      	mov	r3, r0
 80018dc:	6800      	ldr	r0, [r0, #0]
 80018de:	2100      	movs	r1, #0
 80018e0:	6802      	ldr	r2, [r0, #0]
 80018e2:	601a      	str	r2, [r3, #0]
 80018e4:	6053      	str	r3, [r2, #4]
 80018e6:	f7ff ff2b 	bl	8001740 <chSchWakeupS>
 80018ea:	2300      	movs	r3, #0
 80018ec:	f383 8811 	msr	BASEPRI, r3
 80018f0:	bd08      	pop	{r3, pc}
 80018f2:	bf00      	nop
	...

08001900 <chThdCreateStatic>:
 8001900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001902:	9f06      	ldr	r7, [sp, #24]
 8001904:	4604      	mov	r4, r0
 8001906:	2520      	movs	r5, #32
 8001908:	f385 8811 	msr	BASEPRI, r5
 800190c:	2500      	movs	r5, #0
 800190e:	f04f 0e02 	mov.w	lr, #2
 8001912:	f04f 0c01 	mov.w	ip, #1
 8001916:	3924      	subs	r1, #36	; 0x24
 8001918:	1846      	adds	r6, r0, r1
 800191a:	60c6      	str	r6, [r0, #12]
 800191c:	5043      	str	r3, [r0, r1]
 800191e:	4b10      	ldr	r3, [pc, #64]	; (8001960 <chThdCreateStatic+0x60>)
 8001920:	4910      	ldr	r1, [pc, #64]	; (8001964 <chThdCreateStatic+0x64>)
 8001922:	6077      	str	r7, [r6, #4]
 8001924:	6231      	str	r1, [r6, #32]
 8001926:	6103      	str	r3, [r0, #16]
 8001928:	6959      	ldr	r1, [r3, #20]
 800192a:	63c2      	str	r2, [r0, #60]	; 0x3c
 800192c:	6082      	str	r2, [r0, #8]
 800192e:	f100 0624 	add.w	r6, r0, #36	; 0x24
 8001932:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8001936:	6141      	str	r1, [r0, #20]
 8001938:	f8a0 e01c 	strh.w	lr, [r0, #28]
 800193c:	f880 c01e 	strb.w	ip, [r0, #30]
 8001940:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8001944:	6185      	str	r5, [r0, #24]
 8001946:	6108      	str	r0, [r1, #16]
 8001948:	4629      	mov	r1, r5
 800194a:	e9c0 6209 	strd	r6, r2, [r0, #36]	; 0x24
 800194e:	62c2      	str	r2, [r0, #44]	; 0x2c
 8001950:	6158      	str	r0, [r3, #20]
 8001952:	f7ff fef5 	bl	8001740 <chSchWakeupS>
 8001956:	f385 8811 	msr	BASEPRI, r5
 800195a:	4620      	mov	r0, r4
 800195c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800195e:	bf00      	nop
 8001960:	20000930 	.word	0x20000930
 8001964:	08000211 	.word	0x08000211
	...

08001970 <chSchGoSleepS>:
 8001970:	b430      	push	{r4, r5}
 8001972:	2501      	movs	r5, #1
 8001974:	4b06      	ldr	r3, [pc, #24]	; (8001990 <chSchGoSleepS+0x20>)
 8001976:	6999      	ldr	r1, [r3, #24]
 8001978:	681a      	ldr	r2, [r3, #0]
 800197a:	7708      	strb	r0, [r1, #28]
 800197c:	6814      	ldr	r4, [r2, #0]
 800197e:	4610      	mov	r0, r2
 8001980:	6063      	str	r3, [r4, #4]
 8001982:	7715      	strb	r5, [r2, #28]
 8001984:	601c      	str	r4, [r3, #0]
 8001986:	bc30      	pop	{r4, r5}
 8001988:	619a      	str	r2, [r3, #24]
 800198a:	f7fe bc39 	b.w	8000200 <_port_switch>
 800198e:	bf00      	nop
 8001990:	20000930 	.word	0x20000930
	...

080019a0 <chSemSignalWait.constprop.47>:
 80019a0:	b538      	push	{r3, r4, r5, lr}
 80019a2:	2320      	movs	r3, #32
 80019a4:	f383 8811 	msr	BASEPRI, r3
 80019a8:	4c15      	ldr	r4, [pc, #84]	; (8001a00 <chSemSignalWait.constprop.47+0x60>)
 80019aa:	68a3      	ldr	r3, [r4, #8]
 80019ac:	3301      	adds	r3, #1
 80019ae:	2b00      	cmp	r3, #0
 80019b0:	60a3      	str	r3, [r4, #8]
 80019b2:	dd1a      	ble.n	80019ea <chSemSignalWait.constprop.47+0x4a>
 80019b4:	3b01      	subs	r3, #1
 80019b6:	2b00      	cmp	r3, #0
 80019b8:	60a3      	str	r3, [r4, #8]
 80019ba:	db06      	blt.n	80019ca <chSemSignalWait.constprop.47+0x2a>
 80019bc:	f7ff fd90 	bl	80014e0 <chSchRescheduleS>
 80019c0:	2000      	movs	r0, #0
 80019c2:	2300      	movs	r3, #0
 80019c4:	f383 8811 	msr	BASEPRI, r3
 80019c8:	bd38      	pop	{r3, r4, r5, pc}
 80019ca:	4a0e      	ldr	r2, [pc, #56]	; (8001a04 <chSemSignalWait.constprop.47+0x64>)
 80019cc:	6863      	ldr	r3, [r4, #4]
 80019ce:	6995      	ldr	r5, [r2, #24]
 80019d0:	2005      	movs	r0, #5
 80019d2:	e9c5 4300 	strd	r4, r3, [r5]
 80019d6:	601d      	str	r5, [r3, #0]
 80019d8:	622c      	str	r4, [r5, #32]
 80019da:	6065      	str	r5, [r4, #4]
 80019dc:	f7ff ffc8 	bl	8001970 <chSchGoSleepS>
 80019e0:	6a28      	ldr	r0, [r5, #32]
 80019e2:	2300      	movs	r3, #0
 80019e4:	f383 8811 	msr	BASEPRI, r3
 80019e8:	bd38      	pop	{r3, r4, r5, pc}
 80019ea:	6820      	ldr	r0, [r4, #0]
 80019ec:	6803      	ldr	r3, [r0, #0]
 80019ee:	605c      	str	r4, [r3, #4]
 80019f0:	6023      	str	r3, [r4, #0]
 80019f2:	f7ff f91d 	bl	8000c30 <chSchReadyI>
 80019f6:	2200      	movs	r2, #0
 80019f8:	68a3      	ldr	r3, [r4, #8]
 80019fa:	6202      	str	r2, [r0, #32]
 80019fc:	e7da      	b.n	80019b4 <chSemSignalWait.constprop.47+0x14>
 80019fe:	bf00      	nop
 8001a00:	200008ac 	.word	0x200008ac
 8001a04:	20000930 	.word	0x20000930
	...

08001a10 <sem3_execute>:
 8001a10:	b510      	push	{r4, lr}
 8001a12:	2400      	movs	r4, #0
 8001a14:	4a1d      	ldr	r2, [pc, #116]	; (8001a8c <sem3_execute+0x7c>)
 8001a16:	b082      	sub	sp, #8
 8001a18:	6992      	ldr	r2, [r2, #24]
 8001a1a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8001a1e:	6892      	ldr	r2, [r2, #8]
 8001a20:	4b1b      	ldr	r3, [pc, #108]	; (8001a90 <sem3_execute+0x80>)
 8001a22:	3201      	adds	r2, #1
 8001a24:	9400      	str	r4, [sp, #0]
 8001a26:	481b      	ldr	r0, [pc, #108]	; (8001a94 <sem3_execute+0x84>)
 8001a28:	f7ff ff6a 	bl	8001900 <chThdCreateStatic>
 8001a2c:	4c1a      	ldr	r4, [pc, #104]	; (8001a98 <sem3_execute+0x88>)
 8001a2e:	4b1b      	ldr	r3, [pc, #108]	; (8001a9c <sem3_execute+0x8c>)
 8001a30:	6018      	str	r0, [r3, #0]
 8001a32:	f7ff ffb5 	bl	80019a0 <chSemSignalWait.constprop.47>
 8001a36:	6821      	ldr	r1, [r4, #0]
 8001a38:	2001      	movs	r0, #1
 8001a3a:	1b09      	subs	r1, r1, r4
 8001a3c:	fab1 f181 	clz	r1, r1
 8001a40:	0949      	lsrs	r1, r1, #5
 8001a42:	f7fe fe65 	bl	8000710 <_test_assert>
 8001a46:	b108      	cbz	r0, 8001a4c <sem3_execute+0x3c>
 8001a48:	b002      	add	sp, #8
 8001a4a:	bd10      	pop	{r4, pc}
 8001a4c:	68a1      	ldr	r1, [r4, #8]
 8001a4e:	2002      	movs	r0, #2
 8001a50:	fab1 f181 	clz	r1, r1
 8001a54:	0949      	lsrs	r1, r1, #5
 8001a56:	f7fe fe5b 	bl	8000710 <_test_assert>
 8001a5a:	2800      	cmp	r0, #0
 8001a5c:	d1f4      	bne.n	8001a48 <sem3_execute+0x38>
 8001a5e:	f7ff ff9f 	bl	80019a0 <chSemSignalWait.constprop.47>
 8001a62:	6821      	ldr	r1, [r4, #0]
 8001a64:	2003      	movs	r0, #3
 8001a66:	1b09      	subs	r1, r1, r4
 8001a68:	fab1 f181 	clz	r1, r1
 8001a6c:	0949      	lsrs	r1, r1, #5
 8001a6e:	f7fe fe4f 	bl	8000710 <_test_assert>
 8001a72:	2800      	cmp	r0, #0
 8001a74:	d1e8      	bne.n	8001a48 <sem3_execute+0x38>
 8001a76:	68a1      	ldr	r1, [r4, #8]
 8001a78:	2004      	movs	r0, #4
 8001a7a:	fab1 f181 	clz	r1, r1
 8001a7e:	0949      	lsrs	r1, r1, #5
 8001a80:	b002      	add	sp, #8
 8001a82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001a86:	f7fe be43 	b.w	8000710 <_test_assert>
 8001a8a:	bf00      	nop
 8001a8c:	20000930 	.word	0x20000930
 8001a90:	08003921 	.word	0x08003921
 8001a94:	20000b38 	.word	0x20000b38
 8001a98:	200008ac 	.word	0x200008ac
 8001a9c:	200011cc 	.word	0x200011cc

08001aa0 <chEvtWaitOne.constprop.31>:
 8001aa0:	4a0b      	ldr	r2, [pc, #44]	; (8001ad0 <chEvtWaitOne.constprop.31+0x30>)
 8001aa2:	b510      	push	{r4, lr}
 8001aa4:	2320      	movs	r3, #32
 8001aa6:	6994      	ldr	r4, [r2, #24]
 8001aa8:	f383 8811 	msr	BASEPRI, r3
 8001aac:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001aae:	b933      	cbnz	r3, 8001abe <chEvtWaitOne.constprop.31+0x1e>
 8001ab0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001ab4:	200a      	movs	r0, #10
 8001ab6:	6223      	str	r3, [r4, #32]
 8001ab8:	f7ff ff5a 	bl	8001970 <chSchGoSleepS>
 8001abc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001abe:	4258      	negs	r0, r3
 8001ac0:	4018      	ands	r0, r3
 8001ac2:	ea23 0300 	bic.w	r3, r3, r0
 8001ac6:	6363      	str	r3, [r4, #52]	; 0x34
 8001ac8:	2300      	movs	r3, #0
 8001aca:	f383 8811 	msr	BASEPRI, r3
 8001ace:	bd10      	pop	{r4, pc}
 8001ad0:	20000930 	.word	0x20000930
	...

08001ae0 <chEvtWaitAny.constprop.30>:
 8001ae0:	4a09      	ldr	r2, [pc, #36]	; (8001b08 <chEvtWaitAny.constprop.30+0x28>)
 8001ae2:	b510      	push	{r4, lr}
 8001ae4:	2320      	movs	r3, #32
 8001ae6:	6994      	ldr	r4, [r2, #24]
 8001ae8:	f383 8811 	msr	BASEPRI, r3
 8001aec:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001aee:	b930      	cbnz	r0, 8001afe <chEvtWaitAny.constprop.30+0x1e>
 8001af0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001af4:	200a      	movs	r0, #10
 8001af6:	6223      	str	r3, [r4, #32]
 8001af8:	f7ff ff3a 	bl	8001970 <chSchGoSleepS>
 8001afc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001afe:	2300      	movs	r3, #0
 8001b00:	6363      	str	r3, [r4, #52]	; 0x34
 8001b02:	f383 8811 	msr	BASEPRI, r3
 8001b06:	bd10      	pop	{r4, pc}
 8001b08:	20000930 	.word	0x20000930
 8001b0c:	00000000 	.word	0x00000000

08001b10 <thread4.lto_priv.73>:
 8001b10:	4a07      	ldr	r2, [pc, #28]	; (8001b30 <thread4.lto_priv.73+0x20>)
 8001b12:	b510      	push	{r4, lr}
 8001b14:	2320      	movs	r3, #32
 8001b16:	6994      	ldr	r4, [r2, #24]
 8001b18:	f383 8811 	msr	BASEPRI, r3
 8001b1c:	2003      	movs	r0, #3
 8001b1e:	f7ff ff27 	bl	8001970 <chSchGoSleepS>
 8001b22:	6a23      	ldr	r3, [r4, #32]
 8001b24:	2b00      	cmp	r3, #0
 8001b26:	d0f9      	beq.n	8001b1c <thread4.lto_priv.73+0xc>
 8001b28:	2300      	movs	r3, #0
 8001b2a:	f383 8811 	msr	BASEPRI, r3
 8001b2e:	bd10      	pop	{r4, pc}
 8001b30:	20000930 	.word	0x20000930
	...

08001b40 <chSchGoSleepTimeoutS>:
 8001b40:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001b44:	b530      	push	{r4, r5, lr}
 8001b46:	4299      	cmp	r1, r3
 8001b48:	b087      	sub	sp, #28
 8001b4a:	d012      	beq.n	8001b72 <chSchGoSleepTimeoutS+0x32>
 8001b4c:	4605      	mov	r5, r0
 8001b4e:	4c0c      	ldr	r4, [pc, #48]	; (8001b80 <chSchGoSleepTimeoutS+0x40>)
 8001b50:	a801      	add	r0, sp, #4
 8001b52:	69a3      	ldr	r3, [r4, #24]
 8001b54:	4a0b      	ldr	r2, [pc, #44]	; (8001b84 <chSchGoSleepTimeoutS+0x44>)
 8001b56:	f7ff facb 	bl	80010f0 <chVTDoSetI>
 8001b5a:	4628      	mov	r0, r5
 8001b5c:	f7ff ff08 	bl	8001970 <chSchGoSleepS>
 8001b60:	9b04      	ldr	r3, [sp, #16]
 8001b62:	b113      	cbz	r3, 8001b6a <chSchGoSleepTimeoutS+0x2a>
 8001b64:	a801      	add	r0, sp, #4
 8001b66:	f7ff fa83 	bl	8001070 <chVTDoResetI>
 8001b6a:	69a3      	ldr	r3, [r4, #24]
 8001b6c:	6a18      	ldr	r0, [r3, #32]
 8001b6e:	b007      	add	sp, #28
 8001b70:	bd30      	pop	{r4, r5, pc}
 8001b72:	f7ff fefd 	bl	8001970 <chSchGoSleepS>
 8001b76:	4c02      	ldr	r4, [pc, #8]	; (8001b80 <chSchGoSleepTimeoutS+0x40>)
 8001b78:	69a3      	ldr	r3, [r4, #24]
 8001b7a:	6a18      	ldr	r0, [r3, #32]
 8001b7c:	b007      	add	sp, #28
 8001b7e:	bd30      	pop	{r4, r5, pc}
 8001b80:	20000930 	.word	0x20000930
 8001b84:	08000bc1 	.word	0x08000bc1
	...

08001b90 <chSemWaitTimeout.constprop.49>:
 8001b90:	2320      	movs	r3, #32
 8001b92:	f383 8811 	msr	BASEPRI, r3
 8001b96:	4b10      	ldr	r3, [pc, #64]	; (8001bd8 <chSemWaitTimeout.constprop.49+0x48>)
 8001b98:	6899      	ldr	r1, [r3, #8]
 8001b9a:	1e4a      	subs	r2, r1, #1
 8001b9c:	2a00      	cmp	r2, #0
 8001b9e:	609a      	str	r2, [r3, #8]
 8001ba0:	db04      	blt.n	8001bac <chSemWaitTimeout.constprop.49+0x1c>
 8001ba2:	2000      	movs	r0, #0
 8001ba4:	2300      	movs	r3, #0
 8001ba6:	f383 8811 	msr	BASEPRI, r3
 8001baa:	4770      	bx	lr
 8001bac:	b180      	cbz	r0, 8001bd0 <chSemWaitTimeout.constprop.49+0x40>
 8001bae:	4a0b      	ldr	r2, [pc, #44]	; (8001bdc <chSemWaitTimeout.constprop.49+0x4c>)
 8001bb0:	b510      	push	{r4, lr}
 8001bb2:	6992      	ldr	r2, [r2, #24]
 8001bb4:	685c      	ldr	r4, [r3, #4]
 8001bb6:	6213      	str	r3, [r2, #32]
 8001bb8:	e9c2 3400 	strd	r3, r4, [r2]
 8001bbc:	4601      	mov	r1, r0
 8001bbe:	6022      	str	r2, [r4, #0]
 8001bc0:	2005      	movs	r0, #5
 8001bc2:	605a      	str	r2, [r3, #4]
 8001bc4:	f7ff ffbc 	bl	8001b40 <chSchGoSleepTimeoutS>
 8001bc8:	2300      	movs	r3, #0
 8001bca:	f383 8811 	msr	BASEPRI, r3
 8001bce:	bd10      	pop	{r4, pc}
 8001bd0:	6099      	str	r1, [r3, #8]
 8001bd2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001bd6:	e7e5      	b.n	8001ba4 <chSemWaitTimeout.constprop.49+0x14>
 8001bd8:	200008ac 	.word	0x200008ac
 8001bdc:	20000930 	.word	0x20000930

08001be0 <evt3_execute>:
 8001be0:	b570      	push	{r4, r5, r6, lr}
 8001be2:	4c55      	ldr	r4, [pc, #340]	; (8001d38 <evt3_execute+0x158>)
 8001be4:	2320      	movs	r3, #32
 8001be6:	69a2      	ldr	r2, [r4, #24]
 8001be8:	f383 8811 	msr	BASEPRI, r3
 8001bec:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001bee:	b93b      	cbnz	r3, 8001c00 <evt3_execute+0x20>
 8001bf0:	f383 8811 	msr	BASEPRI, r3
 8001bf4:	2101      	movs	r1, #1
 8001bf6:	2001      	movs	r0, #1
 8001bf8:	f7fe fd8a 	bl	8000710 <_test_assert>
 8001bfc:	b180      	cbz	r0, 8001c20 <evt3_execute+0x40>
 8001bfe:	bd70      	pop	{r4, r5, r6, pc}
 8001c00:	4259      	negs	r1, r3
 8001c02:	4019      	ands	r1, r3
 8001c04:	ea23 0301 	bic.w	r3, r3, r1
 8001c08:	6353      	str	r3, [r2, #52]	; 0x34
 8001c0a:	2300      	movs	r3, #0
 8001c0c:	f383 8811 	msr	BASEPRI, r3
 8001c10:	fab1 f181 	clz	r1, r1
 8001c14:	2001      	movs	r0, #1
 8001c16:	0949      	lsrs	r1, r1, #5
 8001c18:	f7fe fd7a 	bl	8000710 <_test_assert>
 8001c1c:	2800      	cmp	r0, #0
 8001c1e:	d1ee      	bne.n	8001bfe <evt3_execute+0x1e>
 8001c20:	69a3      	ldr	r3, [r4, #24]
 8001c22:	2220      	movs	r2, #32
 8001c24:	f382 8811 	msr	BASEPRI, r2
 8001c28:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001c2a:	2a00      	cmp	r2, #0
 8001c2c:	d06f      	beq.n	8001d0e <evt3_execute+0x12e>
 8001c2e:	6358      	str	r0, [r3, #52]	; 0x34
 8001c30:	f380 8811 	msr	BASEPRI, r0
 8001c34:	4601      	mov	r1, r0
 8001c36:	2002      	movs	r0, #2
 8001c38:	f7fe fd6a 	bl	8000710 <_test_assert>
 8001c3c:	2800      	cmp	r0, #0
 8001c3e:	d1de      	bne.n	8001bfe <evt3_execute+0x1e>
 8001c40:	69a3      	ldr	r3, [r4, #24]
 8001c42:	2220      	movs	r2, #32
 8001c44:	f382 8811 	msr	BASEPRI, r2
 8001c48:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001c4a:	3201      	adds	r2, #1
 8001c4c:	d063      	beq.n	8001d16 <evt3_execute+0x136>
 8001c4e:	f380 8811 	msr	BASEPRI, r0
 8001c52:	2001      	movs	r0, #1
 8001c54:	4601      	mov	r1, r0
 8001c56:	2003      	movs	r0, #3
 8001c58:	f7fe fd5a 	bl	8000710 <_test_assert>
 8001c5c:	2800      	cmp	r0, #0
 8001c5e:	d1ce      	bne.n	8001bfe <evt3_execute+0x1e>
 8001c60:	69a6      	ldr	r6, [r4, #24]
 8001c62:	2320      	movs	r3, #32
 8001c64:	f383 8811 	msr	BASEPRI, r3
 8001c68:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001c6a:	b94d      	cbnz	r5, 8001c80 <evt3_execute+0xa0>
 8001c6c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001c70:	210a      	movs	r1, #10
 8001c72:	6233      	str	r3, [r6, #32]
 8001c74:	4608      	mov	r0, r1
 8001c76:	f7ff ff63 	bl	8001b40 <chSchGoSleepTimeoutS>
 8001c7a:	2800      	cmp	r0, #0
 8001c7c:	db4f      	blt.n	8001d1e <evt3_execute+0x13e>
 8001c7e:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001c80:	4269      	negs	r1, r5
 8001c82:	4029      	ands	r1, r5
 8001c84:	ea25 0501 	bic.w	r5, r5, r1
 8001c88:	6375      	str	r5, [r6, #52]	; 0x34
 8001c8a:	2300      	movs	r3, #0
 8001c8c:	f383 8811 	msr	BASEPRI, r3
 8001c90:	fab1 f181 	clz	r1, r1
 8001c94:	0949      	lsrs	r1, r1, #5
 8001c96:	2004      	movs	r0, #4
 8001c98:	f7fe fd3a 	bl	8000710 <_test_assert>
 8001c9c:	2800      	cmp	r0, #0
 8001c9e:	d1ae      	bne.n	8001bfe <evt3_execute+0x1e>
 8001ca0:	69a6      	ldr	r6, [r4, #24]
 8001ca2:	2320      	movs	r3, #32
 8001ca4:	f383 8811 	msr	BASEPRI, r3
 8001ca8:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001caa:	b94d      	cbnz	r5, 8001cc0 <evt3_execute+0xe0>
 8001cac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001cb0:	210a      	movs	r1, #10
 8001cb2:	6233      	str	r3, [r6, #32]
 8001cb4:	4608      	mov	r0, r1
 8001cb6:	f7ff ff43 	bl	8001b40 <chSchGoSleepTimeoutS>
 8001cba:	2800      	cmp	r0, #0
 8001cbc:	db33      	blt.n	8001d26 <evt3_execute+0x146>
 8001cbe:	6b75      	ldr	r5, [r6, #52]	; 0x34
 8001cc0:	2300      	movs	r3, #0
 8001cc2:	6373      	str	r3, [r6, #52]	; 0x34
 8001cc4:	f383 8811 	msr	BASEPRI, r3
 8001cc8:	fab5 f185 	clz	r1, r5
 8001ccc:	0949      	lsrs	r1, r1, #5
 8001cce:	2005      	movs	r0, #5
 8001cd0:	f7fe fd1e 	bl	8000710 <_test_assert>
 8001cd4:	4605      	mov	r5, r0
 8001cd6:	2800      	cmp	r0, #0
 8001cd8:	d191      	bne.n	8001bfe <evt3_execute+0x1e>
 8001cda:	69a4      	ldr	r4, [r4, #24]
 8001cdc:	2320      	movs	r3, #32
 8001cde:	f383 8811 	msr	BASEPRI, r3
 8001ce2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001ce4:	3301      	adds	r3, #1
 8001ce6:	d008      	beq.n	8001cfa <evt3_execute+0x11a>
 8001ce8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001cec:	210a      	movs	r1, #10
 8001cee:	6223      	str	r3, [r4, #32]
 8001cf0:	200b      	movs	r0, #11
 8001cf2:	f7ff ff25 	bl	8001b40 <chSchGoSleepTimeoutS>
 8001cf6:	2800      	cmp	r0, #0
 8001cf8:	db19      	blt.n	8001d2e <evt3_execute+0x14e>
 8001cfa:	2300      	movs	r3, #0
 8001cfc:	6363      	str	r3, [r4, #52]	; 0x34
 8001cfe:	f383 8811 	msr	BASEPRI, r3
 8001d02:	4629      	mov	r1, r5
 8001d04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001d08:	2006      	movs	r0, #6
 8001d0a:	f7fe bd01 	b.w	8000710 <_test_assert>
 8001d0e:	f382 8811 	msr	BASEPRI, r2
 8001d12:	2101      	movs	r1, #1
 8001d14:	e78f      	b.n	8001c36 <evt3_execute+0x56>
 8001d16:	6358      	str	r0, [r3, #52]	; 0x34
 8001d18:	f380 8811 	msr	BASEPRI, r0
 8001d1c:	e79a      	b.n	8001c54 <evt3_execute+0x74>
 8001d1e:	f385 8811 	msr	BASEPRI, r5
 8001d22:	2101      	movs	r1, #1
 8001d24:	e7b7      	b.n	8001c96 <evt3_execute+0xb6>
 8001d26:	f385 8811 	msr	BASEPRI, r5
 8001d2a:	2101      	movs	r1, #1
 8001d2c:	e7cf      	b.n	8001cce <evt3_execute+0xee>
 8001d2e:	f385 8811 	msr	BASEPRI, r5
 8001d32:	2501      	movs	r5, #1
 8001d34:	e7e5      	b.n	8001d02 <evt3_execute+0x122>
 8001d36:	bf00      	nop
 8001d38:	20000930 	.word	0x20000930
 8001d3c:	00000000 	.word	0x00000000

08001d40 <chSemWaitTimeoutS>:
 8001d40:	6883      	ldr	r3, [r0, #8]
 8001d42:	3b01      	subs	r3, #1
 8001d44:	2b00      	cmp	r3, #0
 8001d46:	6083      	str	r3, [r0, #8]
 8001d48:	db01      	blt.n	8001d4e <chSemWaitTimeoutS+0xe>
 8001d4a:	2000      	movs	r0, #0
 8001d4c:	4770      	bx	lr
 8001d4e:	4602      	mov	r2, r0
 8001d50:	4b06      	ldr	r3, [pc, #24]	; (8001d6c <chSemWaitTimeoutS+0x2c>)
 8001d52:	b410      	push	{r4}
 8001d54:	699b      	ldr	r3, [r3, #24]
 8001d56:	2005      	movs	r0, #5
 8001d58:	621a      	str	r2, [r3, #32]
 8001d5a:	601a      	str	r2, [r3, #0]
 8001d5c:	6854      	ldr	r4, [r2, #4]
 8001d5e:	605c      	str	r4, [r3, #4]
 8001d60:	6023      	str	r3, [r4, #0]
 8001d62:	6053      	str	r3, [r2, #4]
 8001d64:	bc10      	pop	{r4}
 8001d66:	f7ff beeb 	b.w	8001b40 <chSchGoSleepTimeoutS>
 8001d6a:	bf00      	nop
 8001d6c:	20000930 	.word	0x20000930

08001d70 <chMBPost.constprop.19>:
 8001d70:	b570      	push	{r4, r5, r6, lr}
 8001d72:	2320      	movs	r3, #32
 8001d74:	4606      	mov	r6, r0
 8001d76:	f383 8811 	msr	BASEPRI, r3
 8001d7a:	4c0d      	ldr	r4, [pc, #52]	; (8001db0 <chMBPost.constprop.19+0x40>)
 8001d7c:	f104 001c 	add.w	r0, r4, #28
 8001d80:	f7ff ffde 	bl	8001d40 <chSemWaitTimeoutS>
 8001d84:	4605      	mov	r5, r0
 8001d86:	b970      	cbnz	r0, 8001da6 <chMBPost.constprop.19+0x36>
 8001d88:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8001d8c:	1d13      	adds	r3, r2, #4
 8001d8e:	428b      	cmp	r3, r1
 8001d90:	60a3      	str	r3, [r4, #8]
 8001d92:	bf28      	it	cs
 8001d94:	6823      	ldrcs	r3, [r4, #0]
 8001d96:	6016      	str	r6, [r2, #0]
 8001d98:	4806      	ldr	r0, [pc, #24]	; (8001db4 <chMBPost.constprop.19+0x44>)
 8001d9a:	bf28      	it	cs
 8001d9c:	60a3      	strcs	r3, [r4, #8]
 8001d9e:	f7ff f8d7 	bl	8000f50 <chSemSignalI>
 8001da2:	f7ff fb9d 	bl	80014e0 <chSchRescheduleS>
 8001da6:	2300      	movs	r3, #0
 8001da8:	f383 8811 	msr	BASEPRI, r3
 8001dac:	4628      	mov	r0, r5
 8001dae:	bd70      	pop	{r4, r5, r6, pc}
 8001db0:	20000854 	.word	0x20000854
 8001db4:	20000864 	.word	0x20000864
	...

08001dc0 <chMBPostAhead.constprop.17>:
 8001dc0:	b570      	push	{r4, r5, r6, lr}
 8001dc2:	2320      	movs	r3, #32
 8001dc4:	4606      	mov	r6, r0
 8001dc6:	f383 8811 	msr	BASEPRI, r3
 8001dca:	4c10      	ldr	r4, [pc, #64]	; (8001e0c <chMBPostAhead.constprop.17+0x4c>)
 8001dcc:	f104 001c 	add.w	r0, r4, #28
 8001dd0:	f7ff ffb6 	bl	8001d40 <chSemWaitTimeoutS>
 8001dd4:	4605      	mov	r5, r0
 8001dd6:	b120      	cbz	r0, 8001de2 <chMBPostAhead.constprop.17+0x22>
 8001dd8:	2300      	movs	r3, #0
 8001dda:	f383 8811 	msr	BASEPRI, r3
 8001dde:	4628      	mov	r0, r5
 8001de0:	bd70      	pop	{r4, r5, r6, pc}
 8001de2:	68e3      	ldr	r3, [r4, #12]
 8001de4:	6822      	ldr	r2, [r4, #0]
 8001de6:	3b04      	subs	r3, #4
 8001de8:	4293      	cmp	r3, r2
 8001dea:	60e3      	str	r3, [r4, #12]
 8001dec:	d202      	bcs.n	8001df4 <chMBPostAhead.constprop.17+0x34>
 8001dee:	6863      	ldr	r3, [r4, #4]
 8001df0:	3b04      	subs	r3, #4
 8001df2:	60e3      	str	r3, [r4, #12]
 8001df4:	601e      	str	r6, [r3, #0]
 8001df6:	4806      	ldr	r0, [pc, #24]	; (8001e10 <chMBPostAhead.constprop.17+0x50>)
 8001df8:	f7ff f8aa 	bl	8000f50 <chSemSignalI>
 8001dfc:	f7ff fb70 	bl	80014e0 <chSchRescheduleS>
 8001e00:	2300      	movs	r3, #0
 8001e02:	f383 8811 	msr	BASEPRI, r3
 8001e06:	4628      	mov	r0, r5
 8001e08:	bd70      	pop	{r4, r5, r6, pc}
 8001e0a:	bf00      	nop
 8001e0c:	20000854 	.word	0x20000854
 8001e10:	20000864 	.word	0x20000864
	...

08001e20 <chMBFetch.constprop.15>:
 8001e20:	b570      	push	{r4, r5, r6, lr}
 8001e22:	2320      	movs	r3, #32
 8001e24:	4606      	mov	r6, r0
 8001e26:	f383 8811 	msr	BASEPRI, r3
 8001e2a:	4c0e      	ldr	r4, [pc, #56]	; (8001e64 <chMBFetch.constprop.15+0x44>)
 8001e2c:	f104 0010 	add.w	r0, r4, #16
 8001e30:	f7ff ff86 	bl	8001d40 <chSemWaitTimeoutS>
 8001e34:	4605      	mov	r5, r0
 8001e36:	b978      	cbnz	r0, 8001e58 <chMBFetch.constprop.15+0x38>
 8001e38:	68e2      	ldr	r2, [r4, #12]
 8001e3a:	6861      	ldr	r1, [r4, #4]
 8001e3c:	1d13      	adds	r3, r2, #4
 8001e3e:	428b      	cmp	r3, r1
 8001e40:	6812      	ldr	r2, [r2, #0]
 8001e42:	60e3      	str	r3, [r4, #12]
 8001e44:	bf28      	it	cs
 8001e46:	6823      	ldrcs	r3, [r4, #0]
 8001e48:	6032      	str	r2, [r6, #0]
 8001e4a:	4807      	ldr	r0, [pc, #28]	; (8001e68 <chMBFetch.constprop.15+0x48>)
 8001e4c:	bf28      	it	cs
 8001e4e:	60e3      	strcs	r3, [r4, #12]
 8001e50:	f7ff f87e 	bl	8000f50 <chSemSignalI>
 8001e54:	f7ff fb44 	bl	80014e0 <chSchRescheduleS>
 8001e58:	2300      	movs	r3, #0
 8001e5a:	f383 8811 	msr	BASEPRI, r3
 8001e5e:	4628      	mov	r0, r5
 8001e60:	bd70      	pop	{r4, r5, r6, pc}
 8001e62:	bf00      	nop
 8001e64:	20000854 	.word	0x20000854
 8001e68:	20000870 	.word	0x20000870
 8001e6c:	00000000 	.word	0x00000000

08001e70 <mbox1_execute>:
 8001e70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e72:	2320      	movs	r3, #32
 8001e74:	b083      	sub	sp, #12
 8001e76:	f383 8811 	msr	BASEPRI, r3
 8001e7a:	4dd1      	ldr	r5, [pc, #836]	; (80021c0 <mbox1_execute+0x350>)
 8001e7c:	2001      	movs	r0, #1
 8001e7e:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8001e80:	f1a1 0105 	sub.w	r1, r1, #5
 8001e84:	fab1 f181 	clz	r1, r1
 8001e88:	0949      	lsrs	r1, r1, #5
 8001e8a:	f7fe fc41 	bl	8000710 <_test_assert>
 8001e8e:	2800      	cmp	r0, #0
 8001e90:	f040 8190 	bne.w	80021b4 <mbox1_execute+0x344>
 8001e94:	f380 8811 	msr	BASEPRI, r0
 8001e98:	2442      	movs	r4, #66	; 0x42
 8001e9a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001e9e:	4620      	mov	r0, r4
 8001ea0:	f7ff ff66 	bl	8001d70 <chMBPost.constprop.19>
 8001ea4:	fab0 f180 	clz	r1, r0
 8001ea8:	2002      	movs	r0, #2
 8001eaa:	0949      	lsrs	r1, r1, #5
 8001eac:	f7fe fc30 	bl	8000710 <_test_assert>
 8001eb0:	3401      	adds	r4, #1
 8001eb2:	b978      	cbnz	r0, 8001ed4 <mbox1_execute+0x64>
 8001eb4:	2c46      	cmp	r4, #70	; 0x46
 8001eb6:	d1f0      	bne.n	8001e9a <mbox1_execute+0x2a>
 8001eb8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001ebc:	2041      	movs	r0, #65	; 0x41
 8001ebe:	f7ff ff7f 	bl	8001dc0 <chMBPostAhead.constprop.17>
 8001ec2:	fab0 f180 	clz	r1, r0
 8001ec6:	2003      	movs	r0, #3
 8001ec8:	0949      	lsrs	r1, r1, #5
 8001eca:	f7fe fc21 	bl	8000710 <_test_assert>
 8001ece:	2800      	cmp	r0, #0
 8001ed0:	f000 817e 	beq.w	80021d0 <mbox1_execute+0x360>
 8001ed4:	b003      	add	sp, #12
 8001ed6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ed8:	f380 8811 	msr	BASEPRI, r0
 8001edc:	f384 8811 	msr	BASEPRI, r4
 8001ee0:	2041      	movs	r0, #65	; 0x41
 8001ee2:	f7ff f84d 	bl	8000f80 <chMBPostI.constprop.18>
 8001ee6:	fab0 f180 	clz	r1, r0
 8001eea:	2016      	movs	r0, #22
 8001eec:	0949      	lsrs	r1, r1, #5
 8001eee:	f7fe fc0f 	bl	8000710 <_test_assert>
 8001ef2:	2800      	cmp	r0, #0
 8001ef4:	d1ee      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001ef6:	2042      	movs	r0, #66	; 0x42
 8001ef8:	f7ff f842 	bl	8000f80 <chMBPostI.constprop.18>
 8001efc:	fab0 f180 	clz	r1, r0
 8001f00:	2017      	movs	r0, #23
 8001f02:	0949      	lsrs	r1, r1, #5
 8001f04:	f7fe fc04 	bl	8000710 <_test_assert>
 8001f08:	2800      	cmp	r0, #0
 8001f0a:	d1e3      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001f0c:	2043      	movs	r0, #67	; 0x43
 8001f0e:	f7ff f837 	bl	8000f80 <chMBPostI.constprop.18>
 8001f12:	fab0 f180 	clz	r1, r0
 8001f16:	2018      	movs	r0, #24
 8001f18:	0949      	lsrs	r1, r1, #5
 8001f1a:	f7fe fbf9 	bl	8000710 <_test_assert>
 8001f1e:	2800      	cmp	r0, #0
 8001f20:	d1d8      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001f22:	2044      	movs	r0, #68	; 0x44
 8001f24:	f7ff f82c 	bl	8000f80 <chMBPostI.constprop.18>
 8001f28:	fab0 f180 	clz	r1, r0
 8001f2c:	2019      	movs	r0, #25
 8001f2e:	0949      	lsrs	r1, r1, #5
 8001f30:	f7fe fbee 	bl	8000710 <_test_assert>
 8001f34:	4606      	mov	r6, r0
 8001f36:	2800      	cmp	r0, #0
 8001f38:	d1cc      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001f3a:	2045      	movs	r0, #69	; 0x45
 8001f3c:	f7ff f820 	bl	8000f80 <chMBPostI.constprop.18>
 8001f40:	f386 8811 	msr	BASEPRI, r6
 8001f44:	fab0 f180 	clz	r1, r0
 8001f48:	201a      	movs	r0, #26
 8001f4a:	0949      	lsrs	r1, r1, #5
 8001f4c:	f7fe fbe0 	bl	8000710 <_test_assert>
 8001f50:	2800      	cmp	r0, #0
 8001f52:	d1bf      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001f54:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8001f58:	eba1 0c03 	sub.w	ip, r1, r3
 8001f5c:	f1dc 0100 	rsbs	r1, ip, #0
 8001f60:	eb41 010c 	adc.w	r1, r1, ip
 8001f64:	201b      	movs	r0, #27
 8001f66:	f7fe fbd3 	bl	8000710 <_test_assert>
 8001f6a:	2800      	cmp	r0, #0
 8001f6c:	d1b2      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001f6e:	4607      	mov	r7, r0
 8001f70:	2605      	movs	r6, #5
 8001f72:	f384 8811 	msr	BASEPRI, r4
 8001f76:	a801      	add	r0, sp, #4
 8001f78:	f7ff f842 	bl	8001000 <chMBFetchI.constprop.14>
 8001f7c:	f387 8811 	msr	BASEPRI, r7
 8001f80:	fab0 f180 	clz	r1, r0
 8001f84:	201c      	movs	r0, #28
 8001f86:	0949      	lsrs	r1, r1, #5
 8001f88:	f7fe fbc2 	bl	8000710 <_test_assert>
 8001f8c:	2800      	cmp	r0, #0
 8001f8e:	d1a1      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001f90:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8001f94:	f7fe fbd4 	bl	8000740 <test_emit_token>
 8001f98:	3e01      	subs	r6, #1
 8001f9a:	d1ea      	bne.n	8001f72 <mbox1_execute+0x102>
 8001f9c:	4989      	ldr	r1, [pc, #548]	; (80021c4 <mbox1_execute+0x354>)
 8001f9e:	201d      	movs	r0, #29
 8001fa0:	f7fe fb8e 	bl	80006c0 <_test_assert_sequence>
 8001fa4:	2800      	cmp	r0, #0
 8001fa6:	d195      	bne.n	8001ed4 <mbox1_execute+0x64>
 8001fa8:	f384 8811 	msr	BASEPRI, r4
 8001fac:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8001fae:	201e      	movs	r0, #30
 8001fb0:	1f4f      	subs	r7, r1, #5
 8001fb2:	4279      	negs	r1, r7
 8001fb4:	4179      	adcs	r1, r7
 8001fb6:	f7fe fbab 	bl	8000710 <_test_assert>
 8001fba:	2800      	cmp	r0, #0
 8001fbc:	f040 8223 	bne.w	8002406 <mbox1_execute+0x596>
 8001fc0:	f386 8811 	msr	BASEPRI, r6
 8001fc4:	f384 8811 	msr	BASEPRI, r4
 8001fc8:	69a9      	ldr	r1, [r5, #24]
 8001fca:	201f      	movs	r0, #31
 8001fcc:	fab1 f181 	clz	r1, r1
 8001fd0:	0949      	lsrs	r1, r1, #5
 8001fd2:	f7fe fb9d 	bl	8000710 <_test_assert>
 8001fd6:	2800      	cmp	r0, #0
 8001fd8:	f040 8215 	bne.w	8002406 <mbox1_execute+0x596>
 8001fdc:	f386 8811 	msr	BASEPRI, r6
 8001fe0:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8001fe4:	1aca      	subs	r2, r1, r3
 8001fe6:	4251      	negs	r1, r2
 8001fe8:	4151      	adcs	r1, r2
 8001fea:	2020      	movs	r0, #32
 8001fec:	f7fe fb90 	bl	8000710 <_test_assert>
 8001ff0:	2800      	cmp	r0, #0
 8001ff2:	f47f af6f 	bne.w	8001ed4 <mbox1_execute+0x64>
 8001ff6:	f384 8811 	msr	BASEPRI, r4
 8001ffa:	2045      	movs	r0, #69	; 0x45
 8001ffc:	f7fe ffe0 	bl	8000fc0 <chMBPostAheadI.constprop.16>
 8002000:	fab0 f180 	clz	r1, r0
 8002004:	2021      	movs	r0, #33	; 0x21
 8002006:	0949      	lsrs	r1, r1, #5
 8002008:	f7fe fb82 	bl	8000710 <_test_assert>
 800200c:	2800      	cmp	r0, #0
 800200e:	f47f af61 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002012:	2044      	movs	r0, #68	; 0x44
 8002014:	f7fe ffd4 	bl	8000fc0 <chMBPostAheadI.constprop.16>
 8002018:	fab0 f180 	clz	r1, r0
 800201c:	2022      	movs	r0, #34	; 0x22
 800201e:	0949      	lsrs	r1, r1, #5
 8002020:	f7fe fb76 	bl	8000710 <_test_assert>
 8002024:	2800      	cmp	r0, #0
 8002026:	f47f af55 	bne.w	8001ed4 <mbox1_execute+0x64>
 800202a:	2043      	movs	r0, #67	; 0x43
 800202c:	f7fe ffc8 	bl	8000fc0 <chMBPostAheadI.constprop.16>
 8002030:	fab0 f180 	clz	r1, r0
 8002034:	2023      	movs	r0, #35	; 0x23
 8002036:	0949      	lsrs	r1, r1, #5
 8002038:	f7fe fb6a 	bl	8000710 <_test_assert>
 800203c:	2800      	cmp	r0, #0
 800203e:	f47f af49 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002042:	2042      	movs	r0, #66	; 0x42
 8002044:	f7fe ffbc 	bl	8000fc0 <chMBPostAheadI.constprop.16>
 8002048:	fab0 f180 	clz	r1, r0
 800204c:	2024      	movs	r0, #36	; 0x24
 800204e:	0949      	lsrs	r1, r1, #5
 8002050:	f7fe fb5e 	bl	8000710 <_test_assert>
 8002054:	2800      	cmp	r0, #0
 8002056:	f47f af3d 	bne.w	8001ed4 <mbox1_execute+0x64>
 800205a:	2041      	movs	r0, #65	; 0x41
 800205c:	f7fe ffb0 	bl	8000fc0 <chMBPostAheadI.constprop.16>
 8002060:	2300      	movs	r3, #0
 8002062:	f383 8811 	msr	BASEPRI, r3
 8002066:	fab0 f180 	clz	r1, r0
 800206a:	2025      	movs	r0, #37	; 0x25
 800206c:	0949      	lsrs	r1, r1, #5
 800206e:	f7fe fb4f 	bl	8000710 <_test_assert>
 8002072:	2800      	cmp	r0, #0
 8002074:	f47f af2e 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002078:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 800207c:	1acb      	subs	r3, r1, r3
 800207e:	4259      	negs	r1, r3
 8002080:	4159      	adcs	r1, r3
 8002082:	2026      	movs	r0, #38	; 0x26
 8002084:	f7fe fb44 	bl	8000710 <_test_assert>
 8002088:	2800      	cmp	r0, #0
 800208a:	f47f af23 	bne.w	8001ed4 <mbox1_execute+0x64>
 800208e:	4606      	mov	r6, r0
 8002090:	2405      	movs	r4, #5
 8002092:	2720      	movs	r7, #32
 8002094:	f387 8811 	msr	BASEPRI, r7
 8002098:	a801      	add	r0, sp, #4
 800209a:	f7fe ffb1 	bl	8001000 <chMBFetchI.constprop.14>
 800209e:	f386 8811 	msr	BASEPRI, r6
 80020a2:	fab0 f180 	clz	r1, r0
 80020a6:	2027      	movs	r0, #39	; 0x27
 80020a8:	0949      	lsrs	r1, r1, #5
 80020aa:	f7fe fb31 	bl	8000710 <_test_assert>
 80020ae:	2800      	cmp	r0, #0
 80020b0:	f47f af10 	bne.w	8001ed4 <mbox1_execute+0x64>
 80020b4:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80020b8:	f7fe fb42 	bl	8000740 <test_emit_token>
 80020bc:	3c01      	subs	r4, #1
 80020be:	d1e9      	bne.n	8002094 <mbox1_execute+0x224>
 80020c0:	4940      	ldr	r1, [pc, #256]	; (80021c4 <mbox1_execute+0x354>)
 80020c2:	2028      	movs	r0, #40	; 0x28
 80020c4:	f7fe fafc 	bl	80006c0 <_test_assert_sequence>
 80020c8:	2800      	cmp	r0, #0
 80020ca:	f47f af03 	bne.w	8001ed4 <mbox1_execute+0x64>
 80020ce:	f387 8811 	msr	BASEPRI, r7
 80020d2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80020d4:	2029      	movs	r0, #41	; 0x29
 80020d6:	f1a1 0e05 	sub.w	lr, r1, #5
 80020da:	f1de 0100 	rsbs	r1, lr, #0
 80020de:	eb41 010e 	adc.w	r1, r1, lr
 80020e2:	f7fe fb15 	bl	8000710 <_test_assert>
 80020e6:	2800      	cmp	r0, #0
 80020e8:	f040 80c5 	bne.w	8002276 <mbox1_execute+0x406>
 80020ec:	f384 8811 	msr	BASEPRI, r4
 80020f0:	f387 8811 	msr	BASEPRI, r7
 80020f4:	69a9      	ldr	r1, [r5, #24]
 80020f6:	202a      	movs	r0, #42	; 0x2a
 80020f8:	fab1 f181 	clz	r1, r1
 80020fc:	0949      	lsrs	r1, r1, #5
 80020fe:	f7fe fb07 	bl	8000710 <_test_assert>
 8002102:	2800      	cmp	r0, #0
 8002104:	f040 80b7 	bne.w	8002276 <mbox1_execute+0x406>
 8002108:	f384 8811 	msr	BASEPRI, r4
 800210c:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8002110:	eba1 0c03 	sub.w	ip, r1, r3
 8002114:	f1dc 0100 	rsbs	r1, ip, #0
 8002118:	eb41 010c 	adc.w	r1, r1, ip
 800211c:	202b      	movs	r0, #43	; 0x2b
 800211e:	f7fe faf7 	bl	8000710 <_test_assert>
 8002122:	2800      	cmp	r0, #0
 8002124:	f47f aed6 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002128:	f387 8811 	msr	BASEPRI, r7
 800212c:	e9d5 3200 	ldrd	r3, r2, [r5]
 8002130:	1ad2      	subs	r2, r2, r3
 8002132:	1091      	asrs	r1, r2, #2
 8002134:	4824      	ldr	r0, [pc, #144]	; (80021c8 <mbox1_execute+0x358>)
 8002136:	60ab      	str	r3, [r5, #8]
 8002138:	60eb      	str	r3, [r5, #12]
 800213a:	f7fe ff81 	bl	8001040 <chSemResetI>
 800213e:	4621      	mov	r1, r4
 8002140:	4822      	ldr	r0, [pc, #136]	; (80021cc <mbox1_execute+0x35c>)
 8002142:	f7fe ff7d 	bl	8001040 <chSemResetI>
 8002146:	f7ff f9cb 	bl	80014e0 <chSchRescheduleS>
 800214a:	f384 8811 	msr	BASEPRI, r4
 800214e:	f387 8811 	msr	BASEPRI, r7
 8002152:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002154:	202c      	movs	r0, #44	; 0x2c
 8002156:	1f4e      	subs	r6, r1, #5
 8002158:	4271      	negs	r1, r6
 800215a:	4171      	adcs	r1, r6
 800215c:	f7fe fad8 	bl	8000710 <_test_assert>
 8002160:	2800      	cmp	r0, #0
 8002162:	f040 8088 	bne.w	8002276 <mbox1_execute+0x406>
 8002166:	f384 8811 	msr	BASEPRI, r4
 800216a:	f387 8811 	msr	BASEPRI, r7
 800216e:	69a9      	ldr	r1, [r5, #24]
 8002170:	202d      	movs	r0, #45	; 0x2d
 8002172:	fab1 f181 	clz	r1, r1
 8002176:	0949      	lsrs	r1, r1, #5
 8002178:	f7fe faca 	bl	8000710 <_test_assert>
 800217c:	2800      	cmp	r0, #0
 800217e:	d17a      	bne.n	8002276 <mbox1_execute+0x406>
 8002180:	f384 8811 	msr	BASEPRI, r4
 8002184:	f387 8811 	msr	BASEPRI, r7
 8002188:	6829      	ldr	r1, [r5, #0]
 800218a:	68ab      	ldr	r3, [r5, #8]
 800218c:	202e      	movs	r0, #46	; 0x2e
 800218e:	1aca      	subs	r2, r1, r3
 8002190:	4251      	negs	r1, r2
 8002192:	4151      	adcs	r1, r2
 8002194:	f7fe fabc 	bl	8000710 <_test_assert>
 8002198:	2800      	cmp	r0, #0
 800219a:	d16c      	bne.n	8002276 <mbox1_execute+0x406>
 800219c:	f384 8811 	msr	BASEPRI, r4
 80021a0:	f387 8811 	msr	BASEPRI, r7
 80021a4:	6829      	ldr	r1, [r5, #0]
 80021a6:	68eb      	ldr	r3, [r5, #12]
 80021a8:	202f      	movs	r0, #47	; 0x2f
 80021aa:	1acb      	subs	r3, r1, r3
 80021ac:	4259      	negs	r1, r3
 80021ae:	4159      	adcs	r1, r3
 80021b0:	f7fe faae 	bl	8000710 <_test_assert>
 80021b4:	2300      	movs	r3, #0
 80021b6:	f383 8811 	msr	BASEPRI, r3
 80021ba:	b003      	add	sp, #12
 80021bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80021be:	bf00      	nop
 80021c0:	20000854 	.word	0x20000854
 80021c4:	08005e90 	.word	0x08005e90
 80021c8:	20000870 	.word	0x20000870
 80021cc:	20000864 	.word	0x20000864
 80021d0:	2101      	movs	r1, #1
 80021d2:	2058      	movs	r0, #88	; 0x58
 80021d4:	f7ff fdcc 	bl	8001d70 <chMBPost.constprop.19>
 80021d8:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 80021dc:	fab1 f181 	clz	r1, r1
 80021e0:	2004      	movs	r0, #4
 80021e2:	0949      	lsrs	r1, r1, #5
 80021e4:	f7fe fa94 	bl	8000710 <_test_assert>
 80021e8:	4604      	mov	r4, r0
 80021ea:	2800      	cmp	r0, #0
 80021ec:	f47f ae72 	bne.w	8001ed4 <mbox1_execute+0x64>
 80021f0:	2620      	movs	r6, #32
 80021f2:	f386 8811 	msr	BASEPRI, r6
 80021f6:	2058      	movs	r0, #88	; 0x58
 80021f8:	f7fe fec2 	bl	8000f80 <chMBPostI.constprop.18>
 80021fc:	4601      	mov	r1, r0
 80021fe:	f384 8811 	msr	BASEPRI, r4
 8002202:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 8002206:	fab1 f181 	clz	r1, r1
 800220a:	2005      	movs	r0, #5
 800220c:	0949      	lsrs	r1, r1, #5
 800220e:	f7fe fa7f 	bl	8000710 <_test_assert>
 8002212:	2800      	cmp	r0, #0
 8002214:	f47f ae5e 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002218:	2101      	movs	r1, #1
 800221a:	2058      	movs	r0, #88	; 0x58
 800221c:	f7ff fdd0 	bl	8001dc0 <chMBPostAhead.constprop.17>
 8002220:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8002224:	fab1 f181 	clz	r1, r1
 8002228:	2006      	movs	r0, #6
 800222a:	0949      	lsrs	r1, r1, #5
 800222c:	f7fe fa70 	bl	8000710 <_test_assert>
 8002230:	4604      	mov	r4, r0
 8002232:	2800      	cmp	r0, #0
 8002234:	f47f ae4e 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002238:	f386 8811 	msr	BASEPRI, r6
 800223c:	2058      	movs	r0, #88	; 0x58
 800223e:	f7fe febf 	bl	8000fc0 <chMBPostAheadI.constprop.16>
 8002242:	4601      	mov	r1, r0
 8002244:	f384 8811 	msr	BASEPRI, r4
 8002248:	f1a1 31ff 	sub.w	r1, r1, #4294967295	; 0xffffffff
 800224c:	fab1 f181 	clz	r1, r1
 8002250:	2007      	movs	r0, #7
 8002252:	0949      	lsrs	r1, r1, #5
 8002254:	f7fe fa5c 	bl	8000710 <_test_assert>
 8002258:	4604      	mov	r4, r0
 800225a:	2800      	cmp	r0, #0
 800225c:	f47f ae3a 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002260:	f386 8811 	msr	BASEPRI, r6
 8002264:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002266:	2008      	movs	r0, #8
 8002268:	fab1 f181 	clz	r1, r1
 800226c:	0949      	lsrs	r1, r1, #5
 800226e:	f7fe fa4f 	bl	8000710 <_test_assert>
 8002272:	4607      	mov	r7, r0
 8002274:	b110      	cbz	r0, 800227c <mbox1_execute+0x40c>
 8002276:	f384 8811 	msr	BASEPRI, r4
 800227a:	e62b      	b.n	8001ed4 <mbox1_execute+0x64>
 800227c:	f380 8811 	msr	BASEPRI, r0
 8002280:	f386 8811 	msr	BASEPRI, r6
 8002284:	69a9      	ldr	r1, [r5, #24]
 8002286:	2009      	movs	r0, #9
 8002288:	f1a1 0e05 	sub.w	lr, r1, #5
 800228c:	f1de 0100 	rsbs	r1, lr, #0
 8002290:	eb41 010e 	adc.w	r1, r1, lr
 8002294:	f7fe fa3c 	bl	8000710 <_test_assert>
 8002298:	b110      	cbz	r0, 80022a0 <mbox1_execute+0x430>
 800229a:	f387 8811 	msr	BASEPRI, r7
 800229e:	e619      	b.n	8001ed4 <mbox1_execute+0x64>
 80022a0:	f380 8811 	msr	BASEPRI, r0
 80022a4:	f386 8811 	msr	BASEPRI, r6
 80022a8:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80022ac:	eba1 0c03 	sub.w	ip, r1, r3
 80022b0:	f1dc 0100 	rsbs	r1, ip, #0
 80022b4:	f04f 000a 	mov.w	r0, #10
 80022b8:	eb41 010c 	adc.w	r1, r1, ip
 80022bc:	f7fe fa28 	bl	8000710 <_test_assert>
 80022c0:	2300      	movs	r3, #0
 80022c2:	2800      	cmp	r0, #0
 80022c4:	f47f af77 	bne.w	80021b6 <mbox1_execute+0x346>
 80022c8:	f383 8811 	msr	BASEPRI, r3
 80022cc:	2405      	movs	r4, #5
 80022ce:	e005      	b.n	80022dc <mbox1_execute+0x46c>
 80022d0:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80022d4:	f7fe fa34 	bl	8000740 <test_emit_token>
 80022d8:	3c01      	subs	r4, #1
 80022da:	d00d      	beq.n	80022f8 <mbox1_execute+0x488>
 80022dc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80022e0:	a801      	add	r0, sp, #4
 80022e2:	f7ff fd9d 	bl	8001e20 <chMBFetch.constprop.15>
 80022e6:	fab0 f180 	clz	r1, r0
 80022ea:	200b      	movs	r0, #11
 80022ec:	0949      	lsrs	r1, r1, #5
 80022ee:	f7fe fa0f 	bl	8000710 <_test_assert>
 80022f2:	2800      	cmp	r0, #0
 80022f4:	d0ec      	beq.n	80022d0 <mbox1_execute+0x460>
 80022f6:	e5ed      	b.n	8001ed4 <mbox1_execute+0x64>
 80022f8:	4944      	ldr	r1, [pc, #272]	; (800240c <mbox1_execute+0x59c>)
 80022fa:	200c      	movs	r0, #12
 80022fc:	f7fe f9e0 	bl	80006c0 <_test_assert_sequence>
 8002300:	2800      	cmp	r0, #0
 8002302:	f47f ade7 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002306:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800230a:	2047      	movs	r0, #71	; 0x47
 800230c:	f7ff fd30 	bl	8001d70 <chMBPost.constprop.19>
 8002310:	fab0 f180 	clz	r1, r0
 8002314:	200d      	movs	r0, #13
 8002316:	0949      	lsrs	r1, r1, #5
 8002318:	f7fe f9fa 	bl	8000710 <_test_assert>
 800231c:	2800      	cmp	r0, #0
 800231e:	f47f add9 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002322:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002326:	a801      	add	r0, sp, #4
 8002328:	f7ff fd7a 	bl	8001e20 <chMBFetch.constprop.15>
 800232c:	fab0 f180 	clz	r1, r0
 8002330:	200e      	movs	r0, #14
 8002332:	0949      	lsrs	r1, r1, #5
 8002334:	f7fe f9ec 	bl	8000710 <_test_assert>
 8002338:	2800      	cmp	r0, #0
 800233a:	f47f adcb 	bne.w	8001ed4 <mbox1_execute+0x64>
 800233e:	6829      	ldr	r1, [r5, #0]
 8002340:	68ab      	ldr	r3, [r5, #8]
 8002342:	200f      	movs	r0, #15
 8002344:	1acf      	subs	r7, r1, r3
 8002346:	4279      	negs	r1, r7
 8002348:	4179      	adcs	r1, r7
 800234a:	f7fe f9e1 	bl	8000710 <_test_assert>
 800234e:	2800      	cmp	r0, #0
 8002350:	f47f adc0 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002354:	6829      	ldr	r1, [r5, #0]
 8002356:	68eb      	ldr	r3, [r5, #12]
 8002358:	2010      	movs	r0, #16
 800235a:	1ace      	subs	r6, r1, r3
 800235c:	4271      	negs	r1, r6
 800235e:	4171      	adcs	r1, r6
 8002360:	f7fe f9d6 	bl	8000710 <_test_assert>
 8002364:	2800      	cmp	r0, #0
 8002366:	f47f adb5 	bne.w	8001ed4 <mbox1_execute+0x64>
 800236a:	2101      	movs	r1, #1
 800236c:	a801      	add	r0, sp, #4
 800236e:	f7ff fd57 	bl	8001e20 <chMBFetch.constprop.15>
 8002372:	3001      	adds	r0, #1
 8002374:	4241      	negs	r1, r0
 8002376:	4141      	adcs	r1, r0
 8002378:	2011      	movs	r0, #17
 800237a:	f7fe f9c9 	bl	8000710 <_test_assert>
 800237e:	2800      	cmp	r0, #0
 8002380:	f47f ada8 	bne.w	8001ed4 <mbox1_execute+0x64>
 8002384:	2620      	movs	r6, #32
 8002386:	f386 8811 	msr	BASEPRI, r6
 800238a:	a801      	add	r0, sp, #4
 800238c:	f7fe fe38 	bl	8001000 <chMBFetchI.constprop.14>
 8002390:	4601      	mov	r1, r0
 8002392:	f384 8811 	msr	BASEPRI, r4
 8002396:	1c4a      	adds	r2, r1, #1
 8002398:	4251      	negs	r1, r2
 800239a:	4151      	adcs	r1, r2
 800239c:	2012      	movs	r0, #18
 800239e:	f7fe f9b7 	bl	8000710 <_test_assert>
 80023a2:	2800      	cmp	r0, #0
 80023a4:	f47f ad96 	bne.w	8001ed4 <mbox1_execute+0x64>
 80023a8:	f386 8811 	msr	BASEPRI, r6
 80023ac:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80023ae:	2013      	movs	r0, #19
 80023b0:	1f4b      	subs	r3, r1, #5
 80023b2:	4259      	negs	r1, r3
 80023b4:	4159      	adcs	r1, r3
 80023b6:	f7fe f9ab 	bl	8000710 <_test_assert>
 80023ba:	2800      	cmp	r0, #0
 80023bc:	f47f aefa 	bne.w	80021b4 <mbox1_execute+0x344>
 80023c0:	2700      	movs	r7, #0
 80023c2:	f387 8811 	msr	BASEPRI, r7
 80023c6:	2420      	movs	r4, #32
 80023c8:	f384 8811 	msr	BASEPRI, r4
 80023cc:	69a9      	ldr	r1, [r5, #24]
 80023ce:	2014      	movs	r0, #20
 80023d0:	fab1 f181 	clz	r1, r1
 80023d4:	0949      	lsrs	r1, r1, #5
 80023d6:	f7fe f99b 	bl	8000710 <_test_assert>
 80023da:	4606      	mov	r6, r0
 80023dc:	2800      	cmp	r0, #0
 80023de:	f47f af5c 	bne.w	800229a <mbox1_execute+0x42a>
 80023e2:	f380 8811 	msr	BASEPRI, r0
 80023e6:	f384 8811 	msr	BASEPRI, r4
 80023ea:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 80023ee:	eba1 0e03 	sub.w	lr, r1, r3
 80023f2:	f1de 0100 	rsbs	r1, lr, #0
 80023f6:	eb41 010e 	adc.w	r1, r1, lr
 80023fa:	2015      	movs	r0, #21
 80023fc:	f7fe f988 	bl	8000710 <_test_assert>
 8002400:	2800      	cmp	r0, #0
 8002402:	f43f ad69 	beq.w	8001ed8 <mbox1_execute+0x68>
 8002406:	f386 8811 	msr	BASEPRI, r6
 800240a:	e563      	b.n	8001ed4 <mbox1_execute+0x64>
 800240c:	08005e90 	.word	0x08005e90

08002410 <chThdEnqueueTimeoutS>:
 8002410:	b161      	cbz	r1, 800242c <chThdEnqueueTimeoutS+0x1c>
 8002412:	4602      	mov	r2, r0
 8002414:	4b07      	ldr	r3, [pc, #28]	; (8002434 <chThdEnqueueTimeoutS+0x24>)
 8002416:	b410      	push	{r4}
 8002418:	699b      	ldr	r3, [r3, #24]
 800241a:	2004      	movs	r0, #4
 800241c:	601a      	str	r2, [r3, #0]
 800241e:	6854      	ldr	r4, [r2, #4]
 8002420:	605c      	str	r4, [r3, #4]
 8002422:	6023      	str	r3, [r4, #0]
 8002424:	6053      	str	r3, [r2, #4]
 8002426:	bc10      	pop	{r4}
 8002428:	f7ff bb8a 	b.w	8001b40 <chSchGoSleepTimeoutS>
 800242c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002430:	4770      	bx	lr
 8002432:	bf00      	nop
 8002434:	20000930 	.word	0x20000930
	...

08002440 <chOQWriteTimeout>:
 8002440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002444:	b083      	sub	sp, #12
 8002446:	4604      	mov	r4, r0
 8002448:	460d      	mov	r5, r1
 800244a:	4616      	mov	r6, r2
 800244c:	9301      	str	r3, [sp, #4]
 800244e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8002452:	f04f 0920 	mov.w	r9, #32
 8002456:	f389 8811 	msr	BASEPRI, r9
 800245a:	2700      	movs	r7, #0
 800245c:	46ba      	mov	sl, r7
 800245e:	68a3      	ldr	r3, [r4, #8]
 8002460:	f105 0b01 	add.w	fp, r5, #1
 8002464:	1e59      	subs	r1, r3, #1
 8002466:	b1fb      	cbz	r3, 80024a8 <chOQWriteTimeout+0x68>
 8002468:	6963      	ldr	r3, [r4, #20]
 800246a:	60a1      	str	r1, [r4, #8]
 800246c:	1c59      	adds	r1, r3, #1
 800246e:	6161      	str	r1, [r4, #20]
 8002470:	7829      	ldrb	r1, [r5, #0]
 8002472:	7019      	strb	r1, [r3, #0]
 8002474:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 8002478:	4299      	cmp	r1, r3
 800247a:	bf24      	itt	cs
 800247c:	68e3      	ldrcs	r3, [r4, #12]
 800247e:	6163      	strcs	r3, [r4, #20]
 8002480:	f1b8 0f00 	cmp.w	r8, #0
 8002484:	d001      	beq.n	800248a <chOQWriteTimeout+0x4a>
 8002486:	4620      	mov	r0, r4
 8002488:	47c0      	blx	r8
 800248a:	f38a 8811 	msr	BASEPRI, sl
 800248e:	3e01      	subs	r6, #1
 8002490:	f107 0701 	add.w	r7, r7, #1
 8002494:	d012      	beq.n	80024bc <chOQWriteTimeout+0x7c>
 8002496:	f389 8811 	msr	BASEPRI, r9
 800249a:	465d      	mov	r5, fp
 800249c:	68a3      	ldr	r3, [r4, #8]
 800249e:	f105 0b01 	add.w	fp, r5, #1
 80024a2:	1e59      	subs	r1, r3, #1
 80024a4:	2b00      	cmp	r3, #0
 80024a6:	d1df      	bne.n	8002468 <chOQWriteTimeout+0x28>
 80024a8:	9901      	ldr	r1, [sp, #4]
 80024aa:	4620      	mov	r0, r4
 80024ac:	9300      	str	r3, [sp, #0]
 80024ae:	f7ff ffaf 	bl	8002410 <chThdEnqueueTimeoutS>
 80024b2:	9b00      	ldr	r3, [sp, #0]
 80024b4:	2800      	cmp	r0, #0
 80024b6:	d0d2      	beq.n	800245e <chOQWriteTimeout+0x1e>
 80024b8:	f383 8811 	msr	BASEPRI, r3
 80024bc:	4638      	mov	r0, r7
 80024be:	b003      	add	sp, #12
 80024c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080024d0 <writet>:
 80024d0:	3030      	adds	r0, #48	; 0x30
 80024d2:	f7ff bfb5 	b.w	8002440 <chOQWriteTimeout>
 80024d6:	bf00      	nop
	...

080024e0 <write>:
 80024e0:	3030      	adds	r0, #48	; 0x30
 80024e2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024e6:	f7ff bfab 	b.w	8002440 <chOQWriteTimeout>
 80024ea:	bf00      	nop
 80024ec:	0000      	movs	r0, r0
	...

080024f0 <chOQPutTimeout>:
 80024f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024f2:	4604      	mov	r4, r0
 80024f4:	460f      	mov	r7, r1
 80024f6:	4616      	mov	r6, r2
 80024f8:	2320      	movs	r3, #32
 80024fa:	f383 8811 	msr	BASEPRI, r3
 80024fe:	e005      	b.n	800250c <chOQPutTimeout+0x1c>
 8002500:	4631      	mov	r1, r6
 8002502:	4620      	mov	r0, r4
 8002504:	f7ff ff84 	bl	8002410 <chThdEnqueueTimeoutS>
 8002508:	2800      	cmp	r0, #0
 800250a:	db16      	blt.n	800253a <chOQPutTimeout+0x4a>
 800250c:	68a5      	ldr	r5, [r4, #8]
 800250e:	2d00      	cmp	r5, #0
 8002510:	d0f6      	beq.n	8002500 <chOQPutTimeout+0x10>
 8002512:	6963      	ldr	r3, [r4, #20]
 8002514:	3d01      	subs	r5, #1
 8002516:	1c5a      	adds	r2, r3, #1
 8002518:	6162      	str	r2, [r4, #20]
 800251a:	60a5      	str	r5, [r4, #8]
 800251c:	701f      	strb	r7, [r3, #0]
 800251e:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8002522:	429a      	cmp	r2, r3
 8002524:	bf24      	itt	cs
 8002526:	68e3      	ldrcs	r3, [r4, #12]
 8002528:	6163      	strcs	r3, [r4, #20]
 800252a:	69e3      	ldr	r3, [r4, #28]
 800252c:	b10b      	cbz	r3, 8002532 <chOQPutTimeout+0x42>
 800252e:	4620      	mov	r0, r4
 8002530:	4798      	blx	r3
 8002532:	2000      	movs	r0, #0
 8002534:	f380 8811 	msr	BASEPRI, r0
 8002538:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800253a:	f385 8811 	msr	BASEPRI, r5
 800253e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08002540 <thread2.lto_priv.76>:
 8002540:	22c8      	movs	r2, #200	; 0xc8
 8002542:	2100      	movs	r1, #0
 8002544:	4801      	ldr	r0, [pc, #4]	; (800254c <thread2.lto_priv.76+0xc>)
 8002546:	f7ff bfd3 	b.w	80024f0 <chOQPutTimeout>
 800254a:	bf00      	nop
 800254c:	20000888 	.word	0x20000888

08002550 <putt>:
 8002550:	3030      	adds	r0, #48	; 0x30
 8002552:	f7ff bfcd 	b.w	80024f0 <chOQPutTimeout>
 8002556:	bf00      	nop
	...

08002560 <put>:
 8002560:	3030      	adds	r0, #48	; 0x30
 8002562:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002566:	f7ff bfc3 	b.w	80024f0 <chOQPutTimeout>
 800256a:	bf00      	nop
 800256c:	0000      	movs	r0, r0
	...

08002570 <chIQReadTimeout>:
 8002570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002574:	4604      	mov	r4, r0
 8002576:	b083      	sub	sp, #12
 8002578:	4689      	mov	r9, r1
 800257a:	4693      	mov	fp, r2
 800257c:	461d      	mov	r5, r3
 800257e:	f8d0 801c 	ldr.w	r8, [r0, #28]
 8002582:	2720      	movs	r7, #32
 8002584:	f387 8811 	msr	BASEPRI, r7
 8002588:	2600      	movs	r6, #0
 800258a:	46b2      	mov	sl, r6
 800258c:	9701      	str	r7, [sp, #4]
 800258e:	f1b8 0f00 	cmp.w	r8, #0
 8002592:	d007      	beq.n	80025a4 <chIQReadTimeout+0x34>
 8002594:	4620      	mov	r0, r4
 8002596:	47c0      	blx	r8
 8002598:	e004      	b.n	80025a4 <chIQReadTimeout+0x34>
 800259a:	4629      	mov	r1, r5
 800259c:	4620      	mov	r0, r4
 800259e:	f7ff ff37 	bl	8002410 <chThdEnqueueTimeoutS>
 80025a2:	b9c8      	cbnz	r0, 80025d8 <chIQReadTimeout+0x68>
 80025a4:	68a7      	ldr	r7, [r4, #8]
 80025a6:	2f00      	cmp	r7, #0
 80025a8:	d0f7      	beq.n	800259a <chIQReadTimeout+0x2a>
 80025aa:	69a2      	ldr	r2, [r4, #24]
 80025ac:	3f01      	subs	r7, #1
 80025ae:	1c51      	adds	r1, r2, #1
 80025b0:	61a1      	str	r1, [r4, #24]
 80025b2:	60a7      	str	r7, [r4, #8]
 80025b4:	7813      	ldrb	r3, [r2, #0]
 80025b6:	f809 3b01 	strb.w	r3, [r9], #1
 80025ba:	6923      	ldr	r3, [r4, #16]
 80025bc:	69a2      	ldr	r2, [r4, #24]
 80025be:	429a      	cmp	r2, r3
 80025c0:	bf24      	itt	cs
 80025c2:	68e3      	ldrcs	r3, [r4, #12]
 80025c4:	61a3      	strcs	r3, [r4, #24]
 80025c6:	f38a 8811 	msr	BASEPRI, sl
 80025ca:	3601      	adds	r6, #1
 80025cc:	45b3      	cmp	fp, r6
 80025ce:	d005      	beq.n	80025dc <chIQReadTimeout+0x6c>
 80025d0:	9b01      	ldr	r3, [sp, #4]
 80025d2:	f383 8811 	msr	BASEPRI, r3
 80025d6:	e7da      	b.n	800258e <chIQReadTimeout+0x1e>
 80025d8:	f387 8811 	msr	BASEPRI, r7
 80025dc:	4630      	mov	r0, r6
 80025de:	b003      	add	sp, #12
 80025e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080025f0 <readt>:
 80025f0:	300c      	adds	r0, #12
 80025f2:	f7ff bfbd 	b.w	8002570 <chIQReadTimeout>
 80025f6:	bf00      	nop
	...

08002600 <read>:
 8002600:	300c      	adds	r0, #12
 8002602:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002606:	f7ff bfb3 	b.w	8002570 <chIQReadTimeout>
 800260a:	bf00      	nop
 800260c:	0000      	movs	r0, r0
	...

08002610 <chIQGetTimeout>:
 8002610:	b570      	push	{r4, r5, r6, lr}
 8002612:	2320      	movs	r3, #32
 8002614:	460e      	mov	r6, r1
 8002616:	4604      	mov	r4, r0
 8002618:	f383 8811 	msr	BASEPRI, r3
 800261c:	69c3      	ldr	r3, [r0, #28]
 800261e:	b13b      	cbz	r3, 8002630 <chIQGetTimeout+0x20>
 8002620:	4798      	blx	r3
 8002622:	e005      	b.n	8002630 <chIQGetTimeout+0x20>
 8002624:	4631      	mov	r1, r6
 8002626:	4620      	mov	r0, r4
 8002628:	f7ff fef2 	bl	8002410 <chThdEnqueueTimeoutS>
 800262c:	2800      	cmp	r0, #0
 800262e:	db13      	blt.n	8002658 <chIQGetTimeout+0x48>
 8002630:	68a5      	ldr	r5, [r4, #8]
 8002632:	2d00      	cmp	r5, #0
 8002634:	d0f6      	beq.n	8002624 <chIQGetTimeout+0x14>
 8002636:	69a2      	ldr	r2, [r4, #24]
 8002638:	6921      	ldr	r1, [r4, #16]
 800263a:	1c53      	adds	r3, r2, #1
 800263c:	428b      	cmp	r3, r1
 800263e:	61a3      	str	r3, [r4, #24]
 8002640:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8002644:	bf28      	it	cs
 8002646:	68e3      	ldrcs	r3, [r4, #12]
 8002648:	60a5      	str	r5, [r4, #8]
 800264a:	7810      	ldrb	r0, [r2, #0]
 800264c:	bf28      	it	cs
 800264e:	61a3      	strcs	r3, [r4, #24]
 8002650:	2300      	movs	r3, #0
 8002652:	f383 8811 	msr	BASEPRI, r3
 8002656:	bd70      	pop	{r4, r5, r6, pc}
 8002658:	f385 8811 	msr	BASEPRI, r5
 800265c:	bd70      	pop	{r4, r5, r6, pc}
 800265e:	bf00      	nop

08002660 <thread1.lto_priv.70>:
 8002660:	21c8      	movs	r1, #200	; 0xc8
 8002662:	4801      	ldr	r0, [pc, #4]	; (8002668 <thread1.lto_priv.70+0x8>)
 8002664:	f7ff bfd4 	b.w	8002610 <chIQGetTimeout>
 8002668:	20000810 	.word	0x20000810
 800266c:	00000000 	.word	0x00000000

08002670 <gett>:
 8002670:	300c      	adds	r0, #12
 8002672:	f7ff bfcd 	b.w	8002610 <chIQGetTimeout>
 8002676:	bf00      	nop
	...

08002680 <get>:
 8002680:	300c      	adds	r0, #12
 8002682:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002686:	f7ff bfc3 	b.w	8002610 <chIQGetTimeout>
 800268a:	bf00      	nop
 800268c:	0000      	movs	r0, r0
	...

08002690 <chThdSleep>:
 8002690:	b508      	push	{r3, lr}
 8002692:	4601      	mov	r1, r0
 8002694:	2320      	movs	r3, #32
 8002696:	f383 8811 	msr	BASEPRI, r3
 800269a:	2008      	movs	r0, #8
 800269c:	f7ff fa50 	bl	8001b40 <chSchGoSleepTimeoutS>
 80026a0:	2300      	movs	r3, #0
 80026a2:	f383 8811 	msr	BASEPRI, r3
 80026a6:	bd08      	pop	{r3, pc}
	...

080026b0 <Thread1>:
 80026b0:	2520      	movs	r5, #32
 80026b2:	462e      	mov	r6, r5
 80026b4:	b508      	push	{r3, lr}
 80026b6:	4b08      	ldr	r3, [pc, #32]	; (80026d8 <Thread1+0x28>)
 80026b8:	4a08      	ldr	r2, [pc, #32]	; (80026dc <Thread1+0x2c>)
 80026ba:	699b      	ldr	r3, [r3, #24]
 80026bc:	4c08      	ldr	r4, [pc, #32]	; (80026e0 <Thread1+0x30>)
 80026be:	619a      	str	r2, [r3, #24]
 80026c0:	6166      	str	r6, [r4, #20]
 80026c2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80026c6:	f7ff ffe3 	bl	8002690 <chThdSleep>
 80026ca:	6125      	str	r5, [r4, #16]
 80026cc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80026d0:	f7ff ffde 	bl	8002690 <chThdSleep>
 80026d4:	e7f4      	b.n	80026c0 <Thread1+0x10>
 80026d6:	bf00      	nop
 80026d8:	20000930 	.word	0x20000930
 80026dc:	08005a90 	.word	0x08005a90
 80026e0:	40010800 	.word	0x40010800
	...

080026f0 <sys1_execute>:
 80026f0:	b510      	push	{r4, lr}
 80026f2:	b086      	sub	sp, #24
 80026f4:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 80026f8:	b91b      	cbnz	r3, 8002702 <sys1_execute+0x12>
 80026fa:	f7fe fd59 	bl	80011b0 <chSysGetStatusAndLockX.part.2>
 80026fe:	f7fe fff7 	bl	80016f0 <chSysRestoreStatusX.part.3>
 8002702:	2320      	movs	r3, #32
 8002704:	f383 8811 	msr	BASEPRI, r3
 8002708:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800270c:	b91b      	cbnz	r3, 8002716 <sys1_execute+0x26>
 800270e:	f7fe fd4f 	bl	80011b0 <chSysGetStatusAndLockX.part.2>
 8002712:	f7fe ffed 	bl	80016f0 <chSysRestoreStatusX.part.3>
 8002716:	2300      	movs	r3, #0
 8002718:	f383 8811 	msr	BASEPRI, r3
 800271c:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 8002720:	b913      	cbnz	r3, 8002728 <sys1_execute+0x38>
 8002722:	2320      	movs	r3, #32
 8002724:	f383 8811 	msr	BASEPRI, r3
 8002728:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800272c:	b913      	cbnz	r3, 8002734 <sys1_execute+0x44>
 800272e:	2320      	movs	r3, #32
 8002730:	f383 8811 	msr	BASEPRI, r3
 8002734:	2300      	movs	r3, #0
 8002736:	f383 8811 	msr	BASEPRI, r3
 800273a:	2220      	movs	r2, #32
 800273c:	f382 8811 	msr	BASEPRI, r2
 8002740:	f3ef 8212 	mrs	r2, BASEPRI_MAX
 8002744:	b10a      	cbz	r2, 800274a <sys1_execute+0x5a>
 8002746:	f383 8811 	msr	BASEPRI, r3
 800274a:	f3ef 8312 	mrs	r3, BASEPRI_MAX
 800274e:	b113      	cbz	r3, 8002756 <sys1_execute+0x66>
 8002750:	2300      	movs	r3, #0
 8002752:	f383 8811 	msr	BASEPRI, r3
 8002756:	2200      	movs	r2, #0
 8002758:	2320      	movs	r3, #32
 800275a:	9204      	str	r2, [sp, #16]
 800275c:	f383 8811 	msr	BASEPRI, r3
 8002760:	9b04      	ldr	r3, [sp, #16]
 8002762:	ac01      	add	r4, sp, #4
 8002764:	b113      	cbz	r3, 800276c <sys1_execute+0x7c>
 8002766:	4620      	mov	r0, r4
 8002768:	f7fe fc82 	bl	8001070 <chVTDoResetI>
 800276c:	4620      	mov	r0, r4
 800276e:	2300      	movs	r3, #0
 8002770:	4a0b      	ldr	r2, [pc, #44]	; (80027a0 <sys1_execute+0xb0>)
 8002772:	2101      	movs	r1, #1
 8002774:	f7fe fcbc 	bl	80010f0 <chVTDoSetI>
 8002778:	2400      	movs	r4, #0
 800277a:	f384 8811 	msr	BASEPRI, r4
 800277e:	200a      	movs	r0, #10
 8002780:	f7ff ff86 	bl	8002690 <chThdSleep>
 8002784:	2320      	movs	r3, #32
 8002786:	f383 8811 	msr	BASEPRI, r3
 800278a:	9904      	ldr	r1, [sp, #16]
 800278c:	f384 8811 	msr	BASEPRI, r4
 8002790:	fab1 f181 	clz	r1, r1
 8002794:	2001      	movs	r0, #1
 8002796:	0949      	lsrs	r1, r1, #5
 8002798:	f7fd ffba 	bl	8000710 <_test_assert>
 800279c:	b006      	add	sp, #24
 800279e:	bd10      	pop	{r4, pc}
 80027a0:	08001711 	.word	0x08001711
	...

080027b0 <thread1.lto_priv.69>:
 80027b0:	b510      	push	{r4, lr}
 80027b2:	4604      	mov	r4, r0
 80027b4:	2032      	movs	r0, #50	; 0x32
 80027b6:	f7ff ff6b 	bl	8002690 <chThdSleep>
 80027ba:	2320      	movs	r3, #32
 80027bc:	f383 8811 	msr	BASEPRI, r3
 80027c0:	2101      	movs	r1, #1
 80027c2:	4620      	mov	r0, r4
 80027c4:	f7fe fabc 	bl	8000d40 <chEvtSignalI>
 80027c8:	f7fe fe8a 	bl	80014e0 <chSchRescheduleS>
 80027cc:	2300      	movs	r3, #0
 80027ce:	f383 8811 	msr	BASEPRI, r3
 80027d2:	bd10      	pop	{r4, pc}
	...

080027e0 <thread2.lto_priv.75>:
 80027e0:	b538      	push	{r3, r4, r5, lr}
 80027e2:	2520      	movs	r5, #32
 80027e4:	f385 8811 	msr	BASEPRI, r5
 80027e8:	2100      	movs	r1, #0
 80027ea:	480b      	ldr	r0, [pc, #44]	; (8002818 <thread2.lto_priv.75+0x38>)
 80027ec:	f7fe fac0 	bl	8000d70 <chEvtBroadcastFlagsI>
 80027f0:	2400      	movs	r4, #0
 80027f2:	f7fe fe75 	bl	80014e0 <chSchRescheduleS>
 80027f6:	f384 8811 	msr	BASEPRI, r4
 80027fa:	2032      	movs	r0, #50	; 0x32
 80027fc:	f7ff ff48 	bl	8002690 <chThdSleep>
 8002800:	f385 8811 	msr	BASEPRI, r5
 8002804:	4805      	ldr	r0, [pc, #20]	; (800281c <thread2.lto_priv.75+0x3c>)
 8002806:	4621      	mov	r1, r4
 8002808:	f7fe fab2 	bl	8000d70 <chEvtBroadcastFlagsI>
 800280c:	f7fe fe68 	bl	80014e0 <chSchRescheduleS>
 8002810:	f384 8811 	msr	BASEPRI, r4
 8002814:	bd38      	pop	{r3, r4, r5, pc}
 8002816:	bf00      	nop
 8002818:	20000808 	.word	0x20000808
 800281c:	2000080c 	.word	0x2000080c

08002820 <thread2.lto_priv.74>:
 8002820:	b508      	push	{r3, lr}
 8002822:	2032      	movs	r0, #50	; 0x32
 8002824:	f7ff ff34 	bl	8002690 <chThdSleep>
 8002828:	2320      	movs	r3, #32
 800282a:	f383 8811 	msr	BASEPRI, r3
 800282e:	4804      	ldr	r0, [pc, #16]	; (8002840 <thread2.lto_priv.74+0x20>)
 8002830:	f7fe fb8e 	bl	8000f50 <chSemSignalI>
 8002834:	f7fe fe54 	bl	80014e0 <chSchRescheduleS>
 8002838:	2300      	movs	r3, #0
 800283a:	f383 8811 	msr	BASEPRI, r3
 800283e:	bd08      	pop	{r3, pc}
 8002840:	200008ac 	.word	0x200008ac
	...

08002850 <test_wait_tick>:
 8002850:	b508      	push	{r3, lr}
 8002852:	2001      	movs	r0, #1
 8002854:	f7ff ff1c 	bl	8002690 <chThdSleep>
 8002858:	2320      	movs	r3, #32
 800285a:	f383 8811 	msr	BASEPRI, r3
 800285e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002862:	2300      	movs	r3, #0
 8002864:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8002866:	f383 8811 	msr	BASEPRI, r3
 800286a:	b280      	uxth	r0, r0
 800286c:	bd08      	pop	{r3, pc}
 800286e:	bf00      	nop

08002870 <bmk10_execute>:
 8002870:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002874:	2400      	movs	r4, #0
 8002876:	f7ff ffeb 	bl	8002850 <test_wait_tick>
 800287a:	46a2      	mov	sl, r4
 800287c:	f7fe fc78 	bl	8001170 <test_start_timer.constprop.1>
 8002880:	f04f 0920 	mov.w	r9, #32
 8002884:	f8df 8068 	ldr.w	r8, [pc, #104]	; 80028f0 <bmk10_execute+0x80>
 8002888:	4f14      	ldr	r7, [pc, #80]	; (80028dc <bmk10_execute+0x6c>)
 800288a:	4e15      	ldr	r6, [pc, #84]	; (80028e0 <bmk10_execute+0x70>)
 800288c:	4d15      	ldr	r5, [pc, #84]	; (80028e4 <bmk10_execute+0x74>)
 800288e:	f389 8811 	msr	BASEPRI, r9
 8002892:	2300      	movs	r3, #0
 8002894:	463a      	mov	r2, r7
 8002896:	4630      	mov	r0, r6
 8002898:	2101      	movs	r1, #1
 800289a:	f7fe fc29 	bl	80010f0 <chVTDoSetI>
 800289e:	463a      	mov	r2, r7
 80028a0:	2300      	movs	r3, #0
 80028a2:	f242 7110 	movw	r1, #10000	; 0x2710
 80028a6:	4628      	mov	r0, r5
 80028a8:	f7fe fc22 	bl	80010f0 <chVTDoSetI>
 80028ac:	4630      	mov	r0, r6
 80028ae:	f7fe fbdf 	bl	8001070 <chVTDoResetI>
 80028b2:	4628      	mov	r0, r5
 80028b4:	f7fe fbdc 	bl	8001070 <chVTDoResetI>
 80028b8:	f38a 8811 	msr	BASEPRI, sl
 80028bc:	f898 3000 	ldrb.w	r3, [r8]
 80028c0:	3401      	adds	r4, #1
 80028c2:	2b00      	cmp	r3, #0
 80028c4:	d0e3      	beq.n	800288e <bmk10_execute+0x1e>
 80028c6:	4808      	ldr	r0, [pc, #32]	; (80028e8 <bmk10_execute+0x78>)
 80028c8:	f7fd ff92 	bl	80007f0 <test_print>
 80028cc:	0060      	lsls	r0, r4, #1
 80028ce:	f7fd fe97 	bl	8000600 <test_printn>
 80028d2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80028d6:	4805      	ldr	r0, [pc, #20]	; (80028ec <bmk10_execute+0x7c>)
 80028d8:	f7fd bf6a 	b.w	80007b0 <test_println>
 80028dc:	08000301 	.word	0x08000301
 80028e0:	20001208 	.word	0x20001208
 80028e4:	2000121c 	.word	0x2000121c
 80028e8:	08005ac0 	.word	0x08005ac0
 80028ec:	08005ad0 	.word	0x08005ad0
 80028f0:	200011c8 	.word	0x200011c8
	...

08002900 <bmk9_execute>:
 8002900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002902:	2300      	movs	r3, #0
 8002904:	461d      	mov	r5, r3
 8002906:	4a25      	ldr	r2, [pc, #148]	; (800299c <bmk9_execute+0x9c>)
 8002908:	4c25      	ldr	r4, [pc, #148]	; (80029a0 <bmk9_execute+0xa0>)
 800290a:	f102 0110 	add.w	r1, r2, #16
 800290e:	6121      	str	r1, [r4, #16]
 8002910:	60e2      	str	r2, [r4, #12]
 8002912:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8002916:	60a3      	str	r3, [r4, #8]
 8002918:	e9c4 3307 	strd	r3, r3, [r4, #28]
 800291c:	e9c4 4400 	strd	r4, r4, [r4]
 8002920:	462f      	mov	r7, r5
 8002922:	f7ff ff95 	bl	8002850 <test_wait_tick>
 8002926:	f7fe fc23 	bl	8001170 <test_start_timer.constprop.1>
 800292a:	4e1e      	ldr	r6, [pc, #120]	; (80029a4 <bmk9_execute+0xa4>)
 800292c:	2320      	movs	r3, #32
 800292e:	f383 8811 	msr	BASEPRI, r3
 8002932:	2100      	movs	r1, #0
 8002934:	4620      	mov	r0, r4
 8002936:	f7fe f9ab 	bl	8000c90 <chIQPutI>
 800293a:	4620      	mov	r0, r4
 800293c:	2101      	movs	r1, #1
 800293e:	f7fe f9a7 	bl	8000c90 <chIQPutI>
 8002942:	4620      	mov	r0, r4
 8002944:	2102      	movs	r1, #2
 8002946:	f7fe f9a3 	bl	8000c90 <chIQPutI>
 800294a:	4620      	mov	r0, r4
 800294c:	2103      	movs	r1, #3
 800294e:	f7fe f99f 	bl	8000c90 <chIQPutI>
 8002952:	f387 8811 	msr	BASEPRI, r7
 8002956:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800295a:	4620      	mov	r0, r4
 800295c:	f7ff fe58 	bl	8002610 <chIQGetTimeout>
 8002960:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002964:	4620      	mov	r0, r4
 8002966:	f7ff fe53 	bl	8002610 <chIQGetTimeout>
 800296a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800296e:	4620      	mov	r0, r4
 8002970:	f7ff fe4e 	bl	8002610 <chIQGetTimeout>
 8002974:	4620      	mov	r0, r4
 8002976:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800297a:	f7ff fe49 	bl	8002610 <chIQGetTimeout>
 800297e:	7833      	ldrb	r3, [r6, #0]
 8002980:	3501      	adds	r5, #1
 8002982:	2b00      	cmp	r3, #0
 8002984:	d0d2      	beq.n	800292c <bmk9_execute+0x2c>
 8002986:	4808      	ldr	r0, [pc, #32]	; (80029a8 <bmk9_execute+0xa8>)
 8002988:	f7fd ff32 	bl	80007f0 <test_print>
 800298c:	00a8      	lsls	r0, r5, #2
 800298e:	f7fd fe37 	bl	8000600 <test_printn>
 8002992:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002996:	4805      	ldr	r0, [pc, #20]	; (80029ac <bmk9_execute+0xac>)
 8002998:	f7fd bf0a 	b.w	80007b0 <test_println>
 800299c:	20000ad0 	.word	0x20000ad0
 80029a0:	20000ae0 	.word	0x20000ae0
 80029a4:	200011c8 	.word	0x200011c8
 80029a8:	08005ac0 	.word	0x08005ac0
 80029ac:	08005c00 	.word	0x08005c00

080029b0 <bmk6_execute>:
 80029b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80029b4:	2400      	movs	r4, #0
 80029b6:	4b14      	ldr	r3, [pc, #80]	; (8002a08 <bmk6_execute+0x58>)
 80029b8:	b083      	sub	sp, #12
 80029ba:	699b      	ldr	r3, [r3, #24]
 80029bc:	46a1      	mov	r9, r4
 80029be:	689d      	ldr	r5, [r3, #8]
 80029c0:	f7ff ff46 	bl	8002850 <test_wait_tick>
 80029c4:	f7fe fbd4 	bl	8001170 <test_start_timer.constprop.1>
 80029c8:	f8df 8050 	ldr.w	r8, [pc, #80]	; 8002a1c <bmk6_execute+0x6c>
 80029cc:	4f0f      	ldr	r7, [pc, #60]	; (8002a0c <bmk6_execute+0x5c>)
 80029ce:	4e10      	ldr	r6, [pc, #64]	; (8002a10 <bmk6_execute+0x60>)
 80029d0:	3501      	adds	r5, #1
 80029d2:	463b      	mov	r3, r7
 80029d4:	f8cd 9000 	str.w	r9, [sp]
 80029d8:	462a      	mov	r2, r5
 80029da:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80029de:	4630      	mov	r0, r6
 80029e0:	f7fe ff8e 	bl	8001900 <chThdCreateStatic>
 80029e4:	f898 3000 	ldrb.w	r3, [r8]
 80029e8:	3401      	adds	r4, #1
 80029ea:	2b00      	cmp	r3, #0
 80029ec:	d0f1      	beq.n	80029d2 <bmk6_execute+0x22>
 80029ee:	4809      	ldr	r0, [pc, #36]	; (8002a14 <bmk6_execute+0x64>)
 80029f0:	f7fd fefe 	bl	80007f0 <test_print>
 80029f4:	4620      	mov	r0, r4
 80029f6:	f7fd fe03 	bl	8000600 <test_printn>
 80029fa:	4807      	ldr	r0, [pc, #28]	; (8002a18 <bmk6_execute+0x68>)
 80029fc:	b003      	add	sp, #12
 80029fe:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002a02:	f7fd bed5 	b.w	80007b0 <test_println>
 8002a06:	bf00      	nop
 8002a08:	20000930 	.word	0x20000930
 8002a0c:	08005a51 	.word	0x08005a51
 8002a10:	20000b38 	.word	0x20000b38
 8002a14:	08005ac0 	.word	0x08005ac0
 8002a18:	08005bc0 	.word	0x08005bc0
 8002a1c:	200011c8 	.word	0x200011c8

08002a20 <thd4_execute>:
 8002a20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a22:	f7ff ff15 	bl	8002850 <test_wait_tick>
 8002a26:	2620      	movs	r6, #32
 8002a28:	f386 8811 	msr	BASEPRI, r6
 8002a2c:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8002a30:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002a32:	2300      	movs	r3, #0
 8002a34:	b2a4      	uxth	r4, r4
 8002a36:	f383 8811 	msr	BASEPRI, r3
 8002a3a:	2064      	movs	r0, #100	; 0x64
 8002a3c:	f7ff fe28 	bl	8002690 <chThdSleep>
 8002a40:	f104 0267 	add.w	r2, r4, #103	; 0x67
 8002a44:	f104 0164 	add.w	r1, r4, #100	; 0x64
 8002a48:	b292      	uxth	r2, r2
 8002a4a:	b289      	uxth	r1, r1
 8002a4c:	2001      	movs	r0, #1
 8002a4e:	f7fd fe17 	bl	8000680 <_test_assert_time_window>
 8002a52:	b100      	cbz	r0, 8002a56 <thd4_execute+0x36>
 8002a54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a56:	f386 8811 	msr	BASEPRI, r6
 8002a5a:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002a5c:	b2a4      	uxth	r4, r4
 8002a5e:	f380 8811 	msr	BASEPRI, r0
 8002a62:	2064      	movs	r0, #100	; 0x64
 8002a64:	f7ff fe14 	bl	8002690 <chThdSleep>
 8002a68:	f104 0267 	add.w	r2, r4, #103	; 0x67
 8002a6c:	f104 0164 	add.w	r1, r4, #100	; 0x64
 8002a70:	b292      	uxth	r2, r2
 8002a72:	b289      	uxth	r1, r1
 8002a74:	2002      	movs	r0, #2
 8002a76:	f7fd fe03 	bl	8000680 <_test_assert_time_window>
 8002a7a:	2800      	cmp	r0, #0
 8002a7c:	d1ea      	bne.n	8002a54 <thd4_execute+0x34>
 8002a7e:	f386 8811 	msr	BASEPRI, r6
 8002a82:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002a84:	b2a4      	uxth	r4, r4
 8002a86:	f380 8811 	msr	BASEPRI, r0
 8002a8a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002a8e:	f7ff fdff 	bl	8002690 <chThdSleep>
 8002a92:	f204 32eb 	addw	r2, r4, #1003	; 0x3eb
 8002a96:	f504 717a 	add.w	r1, r4, #1000	; 0x3e8
 8002a9a:	b292      	uxth	r2, r2
 8002a9c:	b289      	uxth	r1, r1
 8002a9e:	2003      	movs	r0, #3
 8002aa0:	f7fd fdee 	bl	8000680 <_test_assert_time_window>
 8002aa4:	2800      	cmp	r0, #0
 8002aa6:	d1d5      	bne.n	8002a54 <thd4_execute+0x34>
 8002aa8:	f386 8811 	msr	BASEPRI, r6
 8002aac:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002aae:	b2a4      	uxth	r4, r4
 8002ab0:	f380 8811 	msr	BASEPRI, r0
 8002ab4:	f104 0764 	add.w	r7, r4, #100	; 0x64
 8002ab8:	b2bf      	uxth	r7, r7
 8002aba:	f386 8811 	msr	BASEPRI, r6
 8002abe:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002ac0:	1a79      	subs	r1, r7, r1
 8002ac2:	b289      	uxth	r1, r1
 8002ac4:	b111      	cbz	r1, 8002acc <thd4_execute+0xac>
 8002ac6:	2008      	movs	r0, #8
 8002ac8:	f7ff f83a 	bl	8001b40 <chSchGoSleepTimeoutS>
 8002acc:	2300      	movs	r3, #0
 8002ace:	f383 8811 	msr	BASEPRI, r3
 8002ad2:	f104 0267 	add.w	r2, r4, #103	; 0x67
 8002ad6:	4639      	mov	r1, r7
 8002ad8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002adc:	b292      	uxth	r2, r2
 8002ade:	2004      	movs	r0, #4
 8002ae0:	f7fd bdce 	b.w	8000680 <_test_assert_time_window>
	...

08002af0 <chMsgWait>:
 8002af0:	b538      	push	{r3, r4, r5, lr}
 8002af2:	2320      	movs	r3, #32
 8002af4:	f383 8811 	msr	BASEPRI, r3
 8002af8:	4c0b      	ldr	r4, [pc, #44]	; (8002b28 <chMsgWait+0x38>)
 8002afa:	69a2      	ldr	r2, [r4, #24]
 8002afc:	4613      	mov	r3, r2
 8002afe:	f853 0f28 	ldr.w	r0, [r3, #40]!
 8002b02:	4298      	cmp	r0, r3
 8002b04:	d008      	beq.n	8002b18 <chMsgWait+0x28>
 8002b06:	250d      	movs	r5, #13
 8002b08:	6801      	ldr	r1, [r0, #0]
 8002b0a:	2400      	movs	r4, #0
 8002b0c:	6291      	str	r1, [r2, #40]	; 0x28
 8002b0e:	604b      	str	r3, [r1, #4]
 8002b10:	7705      	strb	r5, [r0, #28]
 8002b12:	f384 8811 	msr	BASEPRI, r4
 8002b16:	bd38      	pop	{r3, r4, r5, pc}
 8002b18:	200e      	movs	r0, #14
 8002b1a:	f7fe ff29 	bl	8001970 <chSchGoSleepS>
 8002b1e:	69a2      	ldr	r2, [r4, #24]
 8002b20:	6a90      	ldr	r0, [r2, #40]	; 0x28
 8002b22:	f102 0328 	add.w	r3, r2, #40	; 0x28
 8002b26:	e7ee      	b.n	8002b06 <chMsgWait+0x16>
 8002b28:	20000930 	.word	0x20000930
 8002b2c:	00000000 	.word	0x00000000

08002b30 <thread2.lto_priv.77>:
 8002b30:	b570      	push	{r4, r5, r6, lr}
 8002b32:	2620      	movs	r6, #32
 8002b34:	2500      	movs	r5, #0
 8002b36:	f7ff ffdb 	bl	8002af0 <chMsgWait>
 8002b3a:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8002b3c:	f386 8811 	msr	BASEPRI, r6
 8002b40:	4621      	mov	r1, r4
 8002b42:	f7fe fdfd 	bl	8001740 <chSchWakeupS>
 8002b46:	f385 8811 	msr	BASEPRI, r5
 8002b4a:	2c00      	cmp	r4, #0
 8002b4c:	d1f3      	bne.n	8002b36 <thread2.lto_priv.77+0x6>
 8002b4e:	bd70      	pop	{r4, r5, r6, pc}

08002b50 <msg1_execute>:
 8002b50:	b570      	push	{r4, r5, r6, lr}
 8002b52:	4a1f      	ldr	r2, [pc, #124]	; (8002bd0 <msg1_execute+0x80>)
 8002b54:	b082      	sub	sp, #8
 8002b56:	6994      	ldr	r4, [r2, #24]
 8002b58:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8002b5c:	68a2      	ldr	r2, [r4, #8]
 8002b5e:	4b1d      	ldr	r3, [pc, #116]	; (8002bd4 <msg1_execute+0x84>)
 8002b60:	3201      	adds	r2, #1
 8002b62:	9400      	str	r4, [sp, #0]
 8002b64:	481c      	ldr	r0, [pc, #112]	; (8002bd8 <msg1_execute+0x88>)
 8002b66:	f7fe fecb 	bl	8001900 <chThdCreateStatic>
 8002b6a:	4b1c      	ldr	r3, [pc, #112]	; (8002bdc <msg1_execute+0x8c>)
 8002b6c:	2520      	movs	r5, #32
 8002b6e:	6018      	str	r0, [r3, #0]
 8002b70:	f7ff ffbe 	bl	8002af0 <chMsgWait>
 8002b74:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002b76:	f385 8811 	msr	BASEPRI, r5
 8002b7a:	4631      	mov	r1, r6
 8002b7c:	f7fe fde0 	bl	8001740 <chSchWakeupS>
 8002b80:	2400      	movs	r4, #0
 8002b82:	f384 8811 	msr	BASEPRI, r4
 8002b86:	b2f0      	uxtb	r0, r6
 8002b88:	f7fd fdda 	bl	8000740 <test_emit_token>
 8002b8c:	f7ff ffb0 	bl	8002af0 <chMsgWait>
 8002b90:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002b92:	f385 8811 	msr	BASEPRI, r5
 8002b96:	4631      	mov	r1, r6
 8002b98:	f7fe fdd2 	bl	8001740 <chSchWakeupS>
 8002b9c:	f384 8811 	msr	BASEPRI, r4
 8002ba0:	b2f0      	uxtb	r0, r6
 8002ba2:	f7fd fdcd 	bl	8000740 <test_emit_token>
 8002ba6:	f7ff ffa3 	bl	8002af0 <chMsgWait>
 8002baa:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8002bac:	f385 8811 	msr	BASEPRI, r5
 8002bb0:	4631      	mov	r1, r6
 8002bb2:	f7fe fdc5 	bl	8001740 <chSchWakeupS>
 8002bb6:	f384 8811 	msr	BASEPRI, r4
 8002bba:	b2f0      	uxtb	r0, r6
 8002bbc:	f7fd fdc0 	bl	8000740 <test_emit_token>
 8002bc0:	2001      	movs	r0, #1
 8002bc2:	4907      	ldr	r1, [pc, #28]	; (8002be0 <msg1_execute+0x90>)
 8002bc4:	b002      	add	sp, #8
 8002bc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002bca:	f7fd bd79 	b.w	80006c0 <_test_assert_sequence>
 8002bce:	bf00      	nop
 8002bd0:	20000930 	.word	0x20000930
 8002bd4:	08002c61 	.word	0x08002c61
 8002bd8:	20000b38 	.word	0x20000b38
 8002bdc:	200011cc 	.word	0x200011cc
 8002be0:	08005c70 	.word	0x08005c70
	...

08002bf0 <chMsgSend>:
 8002bf0:	4b0e      	ldr	r3, [pc, #56]	; (8002c2c <chMsgSend+0x3c>)
 8002bf2:	b510      	push	{r4, lr}
 8002bf4:	2220      	movs	r2, #32
 8002bf6:	699c      	ldr	r4, [r3, #24]
 8002bf8:	f382 8811 	msr	BASEPRI, r2
 8002bfc:	f100 0228 	add.w	r2, r0, #40	; 0x28
 8002c00:	6222      	str	r2, [r4, #32]
 8002c02:	6022      	str	r2, [r4, #0]
 8002c04:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8002c06:	6321      	str	r1, [r4, #48]	; 0x30
 8002c08:	6062      	str	r2, [r4, #4]
 8002c0a:	6014      	str	r4, [r2, #0]
 8002c0c:	7f02      	ldrb	r2, [r0, #28]
 8002c0e:	62c4      	str	r4, [r0, #44]	; 0x2c
 8002c10:	2a0e      	cmp	r2, #14
 8002c12:	d007      	beq.n	8002c24 <chMsgSend+0x34>
 8002c14:	200c      	movs	r0, #12
 8002c16:	f7fe feab 	bl	8001970 <chSchGoSleepS>
 8002c1a:	6a20      	ldr	r0, [r4, #32]
 8002c1c:	2300      	movs	r3, #0
 8002c1e:	f383 8811 	msr	BASEPRI, r3
 8002c22:	bd10      	pop	{r4, pc}
 8002c24:	f7fe f804 	bl	8000c30 <chSchReadyI>
 8002c28:	e7f4      	b.n	8002c14 <chMsgSend+0x24>
 8002c2a:	bf00      	nop
 8002c2c:	20000930 	.word	0x20000930

08002c30 <msg_loop_test>:
 8002c30:	b570      	push	{r4, r5, r6, lr}
 8002c32:	4605      	mov	r5, r0
 8002c34:	2400      	movs	r4, #0
 8002c36:	f7ff fe0b 	bl	8002850 <test_wait_tick>
 8002c3a:	f7fe fa99 	bl	8001170 <test_start_timer.constprop.1>
 8002c3e:	4e07      	ldr	r6, [pc, #28]	; (8002c5c <msg_loop_test+0x2c>)
 8002c40:	2101      	movs	r1, #1
 8002c42:	4628      	mov	r0, r5
 8002c44:	f7ff ffd4 	bl	8002bf0 <chMsgSend>
 8002c48:	7833      	ldrb	r3, [r6, #0]
 8002c4a:	3401      	adds	r4, #1
 8002c4c:	2b00      	cmp	r3, #0
 8002c4e:	d0f7      	beq.n	8002c40 <msg_loop_test+0x10>
 8002c50:	4628      	mov	r0, r5
 8002c52:	2100      	movs	r1, #0
 8002c54:	f7ff ffcc 	bl	8002bf0 <chMsgSend>
 8002c58:	4620      	mov	r0, r4
 8002c5a:	bd70      	pop	{r4, r5, r6, pc}
 8002c5c:	200011c8 	.word	0x200011c8

08002c60 <thread.lto_priv.59>:
 8002c60:	b510      	push	{r4, lr}
 8002c62:	4604      	mov	r4, r0
 8002c64:	2141      	movs	r1, #65	; 0x41
 8002c66:	f7ff ffc3 	bl	8002bf0 <chMsgSend>
 8002c6a:	4620      	mov	r0, r4
 8002c6c:	2142      	movs	r1, #66	; 0x42
 8002c6e:	f7ff ffbf 	bl	8002bf0 <chMsgSend>
 8002c72:	4620      	mov	r0, r4
 8002c74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c78:	2143      	movs	r1, #67	; 0x43
 8002c7a:	f7ff bfb9 	b.w	8002bf0 <chMsgSend>
 8002c7e:	bf00      	nop

08002c80 <chMtxLockS>:
 8002c80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c82:	4a37      	ldr	r2, [pc, #220]	; (8002d60 <chMtxLockS+0xe0>)
 8002c84:	6883      	ldr	r3, [r0, #8]
 8002c86:	6995      	ldr	r5, [r2, #24]
 8002c88:	2b00      	cmp	r3, #0
 8002c8a:	d03f      	beq.n	8002d0c <chMtxLockS+0x8c>
 8002c8c:	68a9      	ldr	r1, [r5, #8]
 8002c8e:	689a      	ldr	r2, [r3, #8]
 8002c90:	4604      	mov	r4, r0
 8002c92:	4291      	cmp	r1, r2
 8002c94:	d906      	bls.n	8002ca4 <chMtxLockS+0x24>
 8002c96:	7f1a      	ldrb	r2, [r3, #28]
 8002c98:	6099      	str	r1, [r3, #8]
 8002c9a:	2a06      	cmp	r2, #6
 8002c9c:	d03b      	beq.n	8002d16 <chMtxLockS+0x96>
 8002c9e:	2a07      	cmp	r2, #7
 8002ca0:	d015      	beq.n	8002cce <chMtxLockS+0x4e>
 8002ca2:	b342      	cbz	r2, 8002cf6 <chMtxLockS+0x76>
 8002ca4:	4626      	mov	r6, r4
 8002ca6:	4623      	mov	r3, r4
 8002ca8:	e003      	b.n	8002cb2 <chMtxLockS+0x32>
 8002caa:	6899      	ldr	r1, [r3, #8]
 8002cac:	68aa      	ldr	r2, [r5, #8]
 8002cae:	4291      	cmp	r1, r2
 8002cb0:	d32a      	bcc.n	8002d08 <chMtxLockS+0x88>
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	429c      	cmp	r4, r3
 8002cb6:	d1f8      	bne.n	8002caa <chMtxLockS+0x2a>
 8002cb8:	6873      	ldr	r3, [r6, #4]
 8002cba:	2006      	movs	r0, #6
 8002cbc:	e9c5 6300 	strd	r6, r3, [r5]
 8002cc0:	601d      	str	r5, [r3, #0]
 8002cc2:	6075      	str	r5, [r6, #4]
 8002cc4:	622c      	str	r4, [r5, #32]
 8002cc6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002cca:	f7fe be51 	b.w	8001970 <chSchGoSleepS>
 8002cce:	681f      	ldr	r7, [r3, #0]
 8002cd0:	6858      	ldr	r0, [r3, #4]
 8002cd2:	6a1e      	ldr	r6, [r3, #32]
 8002cd4:	6007      	str	r7, [r0, #0]
 8002cd6:	681f      	ldr	r7, [r3, #0]
 8002cd8:	4632      	mov	r2, r6
 8002cda:	6078      	str	r0, [r7, #4]
 8002cdc:	e002      	b.n	8002ce4 <chMtxLockS+0x64>
 8002cde:	6890      	ldr	r0, [r2, #8]
 8002ce0:	4288      	cmp	r0, r1
 8002ce2:	d334      	bcc.n	8002d4e <chMtxLockS+0xce>
 8002ce4:	6812      	ldr	r2, [r2, #0]
 8002ce6:	4296      	cmp	r6, r2
 8002ce8:	d1f9      	bne.n	8002cde <chMtxLockS+0x5e>
 8002cea:	6872      	ldr	r2, [r6, #4]
 8002cec:	e9c3 6200 	strd	r6, r2, [r3]
 8002cf0:	6013      	str	r3, [r2, #0]
 8002cf2:	6073      	str	r3, [r6, #4]
 8002cf4:	e7d6      	b.n	8002ca4 <chMtxLockS+0x24>
 8002cf6:	e9d3 1200 	ldrd	r1, r2, [r3]
 8002cfa:	6011      	str	r1, [r2, #0]
 8002cfc:	4618      	mov	r0, r3
 8002cfe:	681b      	ldr	r3, [r3, #0]
 8002d00:	605a      	str	r2, [r3, #4]
 8002d02:	f7fd ff95 	bl	8000c30 <chSchReadyI>
 8002d06:	e7cd      	b.n	8002ca4 <chMtxLockS+0x24>
 8002d08:	461e      	mov	r6, r3
 8002d0a:	e7d5      	b.n	8002cb8 <chMtxLockS+0x38>
 8002d0c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8002d0e:	e9c0 5302 	strd	r5, r3, [r0, #8]
 8002d12:	63a8      	str	r0, [r5, #56]	; 0x38
 8002d14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002d16:	681f      	ldr	r7, [r3, #0]
 8002d18:	6858      	ldr	r0, [r3, #4]
 8002d1a:	6a1e      	ldr	r6, [r3, #32]
 8002d1c:	6007      	str	r7, [r0, #0]
 8002d1e:	681f      	ldr	r7, [r3, #0]
 8002d20:	46b4      	mov	ip, r6
 8002d22:	4632      	mov	r2, r6
 8002d24:	6078      	str	r0, [r7, #4]
 8002d26:	e002      	b.n	8002d2e <chMtxLockS+0xae>
 8002d28:	6890      	ldr	r0, [r2, #8]
 8002d2a:	4288      	cmp	r0, r1
 8002d2c:	d316      	bcc.n	8002d5c <chMtxLockS+0xdc>
 8002d2e:	6812      	ldr	r2, [r2, #0]
 8002d30:	4296      	cmp	r6, r2
 8002d32:	d1f9      	bne.n	8002d28 <chMtxLockS+0xa8>
 8002d34:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8002d38:	68a9      	ldr	r1, [r5, #8]
 8002d3a:	e9c3 c200 	strd	ip, r2, [r3]
 8002d3e:	6013      	str	r3, [r2, #0]
 8002d40:	f8cc 3004 	str.w	r3, [ip, #4]
 8002d44:	68b3      	ldr	r3, [r6, #8]
 8002d46:	689a      	ldr	r2, [r3, #8]
 8002d48:	428a      	cmp	r2, r1
 8002d4a:	d3a4      	bcc.n	8002c96 <chMtxLockS+0x16>
 8002d4c:	e7aa      	b.n	8002ca4 <chMtxLockS+0x24>
 8002d4e:	4616      	mov	r6, r2
 8002d50:	6872      	ldr	r2, [r6, #4]
 8002d52:	e9c3 6200 	strd	r6, r2, [r3]
 8002d56:	6013      	str	r3, [r2, #0]
 8002d58:	6073      	str	r3, [r6, #4]
 8002d5a:	e7a3      	b.n	8002ca4 <chMtxLockS+0x24>
 8002d5c:	4694      	mov	ip, r2
 8002d5e:	e7e9      	b.n	8002d34 <chMtxLockS+0xb4>
 8002d60:	20000930 	.word	0x20000930
	...

08002d70 <chMtxLock>:
 8002d70:	b508      	push	{r3, lr}
 8002d72:	2320      	movs	r3, #32
 8002d74:	f383 8811 	msr	BASEPRI, r3
 8002d78:	f7ff ff82 	bl	8002c80 <chMtxLockS>
 8002d7c:	2300      	movs	r3, #0
 8002d7e:	f383 8811 	msr	BASEPRI, r3
 8002d82:	bd08      	pop	{r3, pc}
	...

08002d90 <bmk12_execute>:
 8002d90:	b570      	push	{r4, r5, r6, lr}
 8002d92:	f7ff fd5d 	bl	8002850 <test_wait_tick>
 8002d96:	2500      	movs	r5, #0
 8002d98:	f7fe f9ea 	bl	8001170 <test_start_timer.constprop.1>
 8002d9c:	4e14      	ldr	r6, [pc, #80]	; (8002df0 <bmk12_execute+0x60>)
 8002d9e:	4c15      	ldr	r4, [pc, #84]	; (8002df4 <bmk12_execute+0x64>)
 8002da0:	4620      	mov	r0, r4
 8002da2:	f7ff ffe5 	bl	8002d70 <chMtxLock>
 8002da6:	4620      	mov	r0, r4
 8002da8:	f7fe fd5a 	bl	8001860 <chMtxUnlock>
 8002dac:	4620      	mov	r0, r4
 8002dae:	f7ff ffdf 	bl	8002d70 <chMtxLock>
 8002db2:	4620      	mov	r0, r4
 8002db4:	f7fe fd54 	bl	8001860 <chMtxUnlock>
 8002db8:	4620      	mov	r0, r4
 8002dba:	f7ff ffd9 	bl	8002d70 <chMtxLock>
 8002dbe:	4620      	mov	r0, r4
 8002dc0:	f7fe fd4e 	bl	8001860 <chMtxUnlock>
 8002dc4:	4620      	mov	r0, r4
 8002dc6:	f7ff ffd3 	bl	8002d70 <chMtxLock>
 8002dca:	4620      	mov	r0, r4
 8002dcc:	f7fe fd48 	bl	8001860 <chMtxUnlock>
 8002dd0:	7833      	ldrb	r3, [r6, #0]
 8002dd2:	3501      	adds	r5, #1
 8002dd4:	2b00      	cmp	r3, #0
 8002dd6:	d0e3      	beq.n	8002da0 <bmk12_execute+0x10>
 8002dd8:	4807      	ldr	r0, [pc, #28]	; (8002df8 <bmk12_execute+0x68>)
 8002dda:	f7fd fd09 	bl	80007f0 <test_print>
 8002dde:	00a8      	lsls	r0, r5, #2
 8002de0:	f7fd fc0e 	bl	8000600 <test_printn>
 8002de4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002de8:	4804      	ldr	r0, [pc, #16]	; (8002dfc <bmk12_execute+0x6c>)
 8002dea:	f7fd bce1 	b.w	80007b0 <test_println>
 8002dee:	bf00      	nop
 8002df0:	200011c8 	.word	0x200011c8
 8002df4:	20000b14 	.word	0x20000b14
 8002df8:	08005ac0 	.word	0x08005ac0
 8002dfc:	08005af0 	.word	0x08005af0

08002e00 <thread11>:
 8002e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002e02:	4607      	mov	r7, r0
 8002e04:	481c      	ldr	r0, [pc, #112]	; (8002e78 <thread11+0x78>)
 8002e06:	f7ff ffb3 	bl	8002d70 <chMtxLock>
 8002e0a:	481c      	ldr	r0, [pc, #112]	; (8002e7c <thread11+0x7c>)
 8002e0c:	f7ff ffb0 	bl	8002d70 <chMtxLock>
 8002e10:	2320      	movs	r3, #32
 8002e12:	f383 8811 	msr	BASEPRI, r3
 8002e16:	4d1a      	ldr	r5, [pc, #104]	; (8002e80 <thread11+0x80>)
 8002e18:	69ab      	ldr	r3, [r5, #24]
 8002e1a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 8002e1c:	4630      	mov	r0, r6
 8002e1e:	f7fe f86f 	bl	8000f00 <chMtxUnlockS>
 8002e22:	4a18      	ldr	r2, [pc, #96]	; (8002e84 <thread11+0x84>)
 8002e24:	69ac      	ldr	r4, [r5, #24]
 8002e26:	4610      	mov	r0, r2
 8002e28:	4613      	mov	r3, r2
 8002e2a:	6222      	str	r2, [r4, #32]
 8002e2c:	e003      	b.n	8002e36 <thread11+0x36>
 8002e2e:	6899      	ldr	r1, [r3, #8]
 8002e30:	68a2      	ldr	r2, [r4, #8]
 8002e32:	4291      	cmp	r1, r2
 8002e34:	d302      	bcc.n	8002e3c <thread11+0x3c>
 8002e36:	681b      	ldr	r3, [r3, #0]
 8002e38:	4283      	cmp	r3, r0
 8002e3a:	d1f8      	bne.n	8002e2e <thread11+0x2e>
 8002e3c:	685a      	ldr	r2, [r3, #4]
 8002e3e:	2007      	movs	r0, #7
 8002e40:	e9c4 3200 	strd	r3, r2, [r4]
 8002e44:	6014      	str	r4, [r2, #0]
 8002e46:	605c      	str	r4, [r3, #4]
 8002e48:	f7fe fd92 	bl	8001970 <chSchGoSleepS>
 8002e4c:	69ab      	ldr	r3, [r5, #24]
 8002e4e:	6a1b      	ldr	r3, [r3, #32]
 8002e50:	3301      	adds	r3, #1
 8002e52:	d002      	beq.n	8002e5a <thread11+0x5a>
 8002e54:	4630      	mov	r0, r6
 8002e56:	f7ff ff13 	bl	8002c80 <chMtxLockS>
 8002e5a:	2300      	movs	r3, #0
 8002e5c:	f383 8811 	msr	BASEPRI, r3
 8002e60:	7838      	ldrb	r0, [r7, #0]
 8002e62:	f7fd fc6d 	bl	8000740 <test_emit_token>
 8002e66:	4805      	ldr	r0, [pc, #20]	; (8002e7c <thread11+0x7c>)
 8002e68:	f7fe fcfa 	bl	8001860 <chMtxUnlock>
 8002e6c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002e70:	4801      	ldr	r0, [pc, #4]	; (8002e78 <thread11+0x78>)
 8002e72:	f7fe bcf5 	b.w	8001860 <chMtxUnlock>
 8002e76:	bf00      	nop
 8002e78:	20000844 	.word	0x20000844
 8002e7c:	20000834 	.word	0x20000834
 8002e80:	20000930 	.word	0x20000930
 8002e84:	20000800 	.word	0x20000800
	...

08002e90 <thread10>:
 8002e90:	b570      	push	{r4, r5, r6, lr}
 8002e92:	4606      	mov	r6, r0
 8002e94:	4816      	ldr	r0, [pc, #88]	; (8002ef0 <thread10+0x60>)
 8002e96:	f7ff ff6b 	bl	8002d70 <chMtxLock>
 8002e9a:	2320      	movs	r3, #32
 8002e9c:	f383 8811 	msr	BASEPRI, r3
 8002ea0:	4b14      	ldr	r3, [pc, #80]	; (8002ef4 <thread10+0x64>)
 8002ea2:	699c      	ldr	r4, [r3, #24]
 8002ea4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8002ea6:	4628      	mov	r0, r5
 8002ea8:	f7fe f82a 	bl	8000f00 <chMtxUnlockS>
 8002eac:	4a12      	ldr	r2, [pc, #72]	; (8002ef8 <thread10+0x68>)
 8002eae:	4610      	mov	r0, r2
 8002eb0:	4613      	mov	r3, r2
 8002eb2:	6222      	str	r2, [r4, #32]
 8002eb4:	e003      	b.n	8002ebe <thread10+0x2e>
 8002eb6:	6899      	ldr	r1, [r3, #8]
 8002eb8:	68a2      	ldr	r2, [r4, #8]
 8002eba:	4291      	cmp	r1, r2
 8002ebc:	d302      	bcc.n	8002ec4 <thread10+0x34>
 8002ebe:	681b      	ldr	r3, [r3, #0]
 8002ec0:	4283      	cmp	r3, r0
 8002ec2:	d1f8      	bne.n	8002eb6 <thread10+0x26>
 8002ec4:	685a      	ldr	r2, [r3, #4]
 8002ec6:	2007      	movs	r0, #7
 8002ec8:	e9c4 3200 	strd	r3, r2, [r4]
 8002ecc:	6014      	str	r4, [r2, #0]
 8002ece:	605c      	str	r4, [r3, #4]
 8002ed0:	f7fe fd4e 	bl	8001970 <chSchGoSleepS>
 8002ed4:	4628      	mov	r0, r5
 8002ed6:	f7ff fed3 	bl	8002c80 <chMtxLockS>
 8002eda:	2300      	movs	r3, #0
 8002edc:	f383 8811 	msr	BASEPRI, r3
 8002ee0:	7830      	ldrb	r0, [r6, #0]
 8002ee2:	f7fd fc2d 	bl	8000740 <test_emit_token>
 8002ee6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002eea:	4801      	ldr	r0, [pc, #4]	; (8002ef0 <thread10+0x60>)
 8002eec:	f7fe bcb8 	b.w	8001860 <chMtxUnlock>
 8002ef0:	20000834 	.word	0x20000834
 8002ef4:	20000930 	.word	0x20000930
 8002ef8:	20000800 	.word	0x20000800
 8002efc:	00000000 	.word	0x00000000

08002f00 <thread12>:
 8002f00:	b538      	push	{r3, r4, r5, lr}
 8002f02:	4605      	mov	r5, r0
 8002f04:	4c05      	ldr	r4, [pc, #20]	; (8002f1c <thread12+0x1c>)
 8002f06:	4620      	mov	r0, r4
 8002f08:	f7ff ff32 	bl	8002d70 <chMtxLock>
 8002f0c:	7828      	ldrb	r0, [r5, #0]
 8002f0e:	f7fd fc17 	bl	8000740 <test_emit_token>
 8002f12:	4620      	mov	r0, r4
 8002f14:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002f18:	f7fe bca2 	b.w	8001860 <chMtxUnlock>
 8002f1c:	20000844 	.word	0x20000844

08002f20 <mtx5_execute>:
 8002f20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f22:	4d37      	ldr	r5, [pc, #220]	; (8003000 <mtx5_execute+0xe0>)
 8002f24:	2320      	movs	r3, #32
 8002f26:	69aa      	ldr	r2, [r5, #24]
 8002f28:	6896      	ldr	r6, [r2, #8]
 8002f2a:	f383 8811 	msr	BASEPRI, r3
 8002f2e:	4c35      	ldr	r4, [pc, #212]	; (8003004 <mtx5_execute+0xe4>)
 8002f30:	68a3      	ldr	r3, [r4, #8]
 8002f32:	2b00      	cmp	r3, #0
 8002f34:	d057      	beq.n	8002fe6 <mtx5_execute+0xc6>
 8002f36:	2100      	movs	r1, #0
 8002f38:	2300      	movs	r3, #0
 8002f3a:	f383 8811 	msr	BASEPRI, r3
 8002f3e:	2001      	movs	r0, #1
 8002f40:	f7fd fbe6 	bl	8000710 <_test_assert>
 8002f44:	4601      	mov	r1, r0
 8002f46:	b100      	cbz	r0, 8002f4a <mtx5_execute+0x2a>
 8002f48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002f4a:	2320      	movs	r3, #32
 8002f4c:	f383 8811 	msr	BASEPRI, r3
 8002f50:	68a3      	ldr	r3, [r4, #8]
 8002f52:	2b00      	cmp	r3, #0
 8002f54:	d04e      	beq.n	8002ff4 <mtx5_execute+0xd4>
 8002f56:	2101      	movs	r1, #1
 8002f58:	2300      	movs	r3, #0
 8002f5a:	f383 8811 	msr	BASEPRI, r3
 8002f5e:	2002      	movs	r0, #2
 8002f60:	f7fd fbd6 	bl	8000710 <_test_assert>
 8002f64:	4607      	mov	r7, r0
 8002f66:	2800      	cmp	r0, #0
 8002f68:	d1ee      	bne.n	8002f48 <mtx5_execute+0x28>
 8002f6a:	2320      	movs	r3, #32
 8002f6c:	f383 8811 	msr	BASEPRI, r3
 8002f70:	4824      	ldr	r0, [pc, #144]	; (8003004 <mtx5_execute+0xe4>)
 8002f72:	f7fd ffc5 	bl	8000f00 <chMtxUnlockS>
 8002f76:	f387 8811 	msr	BASEPRI, r7
 8002f7a:	6821      	ldr	r1, [r4, #0]
 8002f7c:	2003      	movs	r0, #3
 8002f7e:	1b09      	subs	r1, r1, r4
 8002f80:	fab1 f181 	clz	r1, r1
 8002f84:	0949      	lsrs	r1, r1, #5
 8002f86:	f7fd fbc3 	bl	8000710 <_test_assert>
 8002f8a:	2800      	cmp	r0, #0
 8002f8c:	d1dc      	bne.n	8002f48 <mtx5_execute+0x28>
 8002f8e:	68a1      	ldr	r1, [r4, #8]
 8002f90:	2004      	movs	r0, #4
 8002f92:	fab1 f181 	clz	r1, r1
 8002f96:	0949      	lsrs	r1, r1, #5
 8002f98:	f7fd fbba 	bl	8000710 <_test_assert>
 8002f9c:	2800      	cmp	r0, #0
 8002f9e:	d1d3      	bne.n	8002f48 <mtx5_execute+0x28>
 8002fa0:	69ab      	ldr	r3, [r5, #24]
 8002fa2:	2005      	movs	r0, #5
 8002fa4:	6899      	ldr	r1, [r3, #8]
 8002fa6:	1b89      	subs	r1, r1, r6
 8002fa8:	fab1 f181 	clz	r1, r1
 8002fac:	0949      	lsrs	r1, r1, #5
 8002fae:	f7fd fbaf 	bl	8000710 <_test_assert>
 8002fb2:	2800      	cmp	r0, #0
 8002fb4:	d1c8      	bne.n	8002f48 <mtx5_execute+0x28>
 8002fb6:	4813      	ldr	r0, [pc, #76]	; (8003004 <mtx5_execute+0xe4>)
 8002fb8:	f7ff feda 	bl	8002d70 <chMtxLock>
 8002fbc:	f7fe fab8 	bl	8001530 <chMtxUnlockAll>
 8002fc0:	6821      	ldr	r1, [r4, #0]
 8002fc2:	2006      	movs	r0, #6
 8002fc4:	1b09      	subs	r1, r1, r4
 8002fc6:	fab1 f181 	clz	r1, r1
 8002fca:	0949      	lsrs	r1, r1, #5
 8002fcc:	f7fd fba0 	bl	8000710 <_test_assert>
 8002fd0:	2800      	cmp	r0, #0
 8002fd2:	d1b9      	bne.n	8002f48 <mtx5_execute+0x28>
 8002fd4:	68a1      	ldr	r1, [r4, #8]
 8002fd6:	2007      	movs	r0, #7
 8002fd8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002fdc:	fab1 f181 	clz	r1, r1
 8002fe0:	0949      	lsrs	r1, r1, #5
 8002fe2:	f7fd bb95 	b.w	8000710 <_test_assert>
 8002fe6:	69ab      	ldr	r3, [r5, #24]
 8002fe8:	2101      	movs	r1, #1
 8002fea:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002fec:	639c      	str	r4, [r3, #56]	; 0x38
 8002fee:	e9c4 3202 	strd	r3, r2, [r4, #8]
 8002ff2:	e7a1      	b.n	8002f38 <mtx5_execute+0x18>
 8002ff4:	69ab      	ldr	r3, [r5, #24]
 8002ff6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002ff8:	639c      	str	r4, [r3, #56]	; 0x38
 8002ffa:	e9c4 3202 	strd	r3, r2, [r4, #8]
 8002ffe:	e7ab      	b.n	8002f58 <mtx5_execute+0x38>
 8003000:	20000930 	.word	0x20000930
 8003004:	20000834 	.word	0x20000834
	...

08003010 <thread4a>:
 8003010:	b510      	push	{r4, lr}
 8003012:	4c06      	ldr	r4, [pc, #24]	; (800302c <thread4a+0x1c>)
 8003014:	2032      	movs	r0, #50	; 0x32
 8003016:	f7ff fb3b 	bl	8002690 <chThdSleep>
 800301a:	4620      	mov	r0, r4
 800301c:	f7ff fea8 	bl	8002d70 <chMtxLock>
 8003020:	4620      	mov	r0, r4
 8003022:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003026:	f7fe bc1b 	b.w	8001860 <chMtxUnlock>
 800302a:	bf00      	nop
 800302c:	20000844 	.word	0x20000844

08003030 <thread4b>:
 8003030:	b510      	push	{r4, lr}
 8003032:	4c06      	ldr	r4, [pc, #24]	; (800304c <thread4b+0x1c>)
 8003034:	2096      	movs	r0, #150	; 0x96
 8003036:	f7ff fb2b 	bl	8002690 <chThdSleep>
 800303a:	4620      	mov	r0, r4
 800303c:	f7ff fe98 	bl	8002d70 <chMtxLock>
 8003040:	4620      	mov	r0, r4
 8003042:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003046:	f7fe bc0b 	b.w	8001860 <chMtxUnlock>
 800304a:	bf00      	nop
 800304c:	20000834 	.word	0x20000834

08003050 <thread1.lto_priv.68>:
 8003050:	b538      	push	{r3, r4, r5, lr}
 8003052:	4605      	mov	r5, r0
 8003054:	4c05      	ldr	r4, [pc, #20]	; (800306c <thread1.lto_priv.68+0x1c>)
 8003056:	4620      	mov	r0, r4
 8003058:	f7ff fe8a 	bl	8002d70 <chMtxLock>
 800305c:	7828      	ldrb	r0, [r5, #0]
 800305e:	f7fd fb6f 	bl	8000740 <test_emit_token>
 8003062:	4620      	mov	r0, r4
 8003064:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003068:	f7fe bbfa 	b.w	8001860 <chMtxUnlock>
 800306c:	20000834 	.word	0x20000834

08003070 <chHeapStatus>:
 8003070:	b570      	push	{r4, r5, r6, lr}
 8003072:	4c11      	ldr	r4, [pc, #68]	; (80030b8 <chHeapStatus+0x48>)
 8003074:	460e      	mov	r6, r1
 8003076:	2800      	cmp	r0, #0
 8003078:	bf18      	it	ne
 800307a:	4604      	movne	r4, r0
 800307c:	f104 0510 	add.w	r5, r4, #16
 8003080:	4628      	mov	r0, r5
 8003082:	f7ff fe75 	bl	8002d70 <chMtxLock>
 8003086:	68a3      	ldr	r3, [r4, #8]
 8003088:	b16b      	cbz	r3, 80030a6 <chHeapStatus+0x36>
 800308a:	2200      	movs	r2, #0
 800308c:	4614      	mov	r4, r2
 800308e:	6858      	ldr	r0, [r3, #4]
 8003090:	681b      	ldr	r3, [r3, #0]
 8003092:	3401      	adds	r4, #1
 8003094:	4402      	add	r2, r0
 8003096:	2b00      	cmp	r3, #0
 8003098:	d1f9      	bne.n	800308e <chHeapStatus+0x1e>
 800309a:	4628      	mov	r0, r5
 800309c:	6032      	str	r2, [r6, #0]
 800309e:	f7fe fbdf 	bl	8001860 <chMtxUnlock>
 80030a2:	4620      	mov	r0, r4
 80030a4:	bd70      	pop	{r4, r5, r6, pc}
 80030a6:	461a      	mov	r2, r3
 80030a8:	461c      	mov	r4, r3
 80030aa:	4628      	mov	r0, r5
 80030ac:	6032      	str	r2, [r6, #0]
 80030ae:	f7fe fbd7 	bl	8001860 <chMtxUnlock>
 80030b2:	4620      	mov	r0, r4
 80030b4:	bd70      	pop	{r4, r5, r6, pc}
 80030b6:	bf00      	nop
 80030b8:	20000a88 	.word	0x20000a88
 80030bc:	00000000 	.word	0x00000000

080030c0 <chHeapFree>:
 80030c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80030c2:	f850 5c08 	ldr.w	r5, [r0, #-8]
 80030c6:	4606      	mov	r6, r0
 80030c8:	f105 0710 	add.w	r7, r5, #16
 80030cc:	f1a0 0408 	sub.w	r4, r0, #8
 80030d0:	3508      	adds	r5, #8
 80030d2:	4638      	mov	r0, r7
 80030d4:	f7ff fe4c 	bl	8002d70 <chMtxLock>
 80030d8:	462b      	mov	r3, r5
 80030da:	42ab      	cmp	r3, r5
 80030dc:	681a      	ldr	r2, [r3, #0]
 80030de:	d001      	beq.n	80030e4 <chHeapFree+0x24>
 80030e0:	42a3      	cmp	r3, r4
 80030e2:	d202      	bcs.n	80030ea <chHeapFree+0x2a>
 80030e4:	b11a      	cbz	r2, 80030ee <chHeapFree+0x2e>
 80030e6:	4294      	cmp	r4, r2
 80030e8:	d301      	bcc.n	80030ee <chHeapFree+0x2e>
 80030ea:	4613      	mov	r3, r2
 80030ec:	e7f5      	b.n	80030da <chHeapFree+0x1a>
 80030ee:	f846 2c08 	str.w	r2, [r6, #-8]
 80030f2:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80030f6:	601c      	str	r4, [r3, #0]
 80030f8:	f856 0c08 	ldr.w	r0, [r6, #-8]
 80030fc:	18b1      	adds	r1, r6, r2
 80030fe:	4281      	cmp	r1, r0
 8003100:	d00a      	beq.n	8003118 <chHeapFree+0x58>
 8003102:	6859      	ldr	r1, [r3, #4]
 8003104:	f101 0208 	add.w	r2, r1, #8
 8003108:	441a      	add	r2, r3
 800310a:	4294      	cmp	r4, r2
 800310c:	d011      	beq.n	8003132 <chHeapFree+0x72>
 800310e:	4638      	mov	r0, r7
 8003110:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003114:	f7fe bba4 	b.w	8001860 <chMtxUnlock>
 8003118:	6849      	ldr	r1, [r1, #4]
 800311a:	f102 0508 	add.w	r5, r2, #8
 800311e:	58b0      	ldr	r0, [r6, r2]
 8003120:	4429      	add	r1, r5
 8003122:	e946 0102 	strd	r0, r1, [r6, #-8]
 8003126:	6859      	ldr	r1, [r3, #4]
 8003128:	f101 0208 	add.w	r2, r1, #8
 800312c:	441a      	add	r2, r3
 800312e:	4294      	cmp	r4, r2
 8003130:	d1ed      	bne.n	800310e <chHeapFree+0x4e>
 8003132:	e956 0202 	ldrd	r0, r2, [r6, #-8]
 8003136:	3208      	adds	r2, #8
 8003138:	4411      	add	r1, r2
 800313a:	e9c3 0100 	strd	r0, r1, [r3]
 800313e:	4638      	mov	r0, r7
 8003140:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003144:	f7fe bb8c 	b.w	8001860 <chMtxUnlock>
	...

08003150 <chThdRelease>:
 8003150:	b430      	push	{r4, r5}
 8003152:	2120      	movs	r1, #32
 8003154:	f381 8811 	msr	BASEPRI, r1
 8003158:	7f83      	ldrb	r3, [r0, #30]
 800315a:	2400      	movs	r4, #0
 800315c:	3b01      	subs	r3, #1
 800315e:	b2db      	uxtb	r3, r3
 8003160:	7783      	strb	r3, [r0, #30]
 8003162:	f384 8811 	msr	BASEPRI, r4
 8003166:	b91b      	cbnz	r3, 8003170 <chThdRelease+0x20>
 8003168:	7f04      	ldrb	r4, [r0, #28]
 800316a:	4602      	mov	r2, r0
 800316c:	2c0f      	cmp	r4, #15
 800316e:	d001      	beq.n	8003174 <chThdRelease+0x24>
 8003170:	bc30      	pop	{r4, r5}
 8003172:	4770      	bx	lr
 8003174:	7f44      	ldrb	r4, [r0, #29]
 8003176:	f004 0403 	and.w	r4, r4, #3
 800317a:	2c01      	cmp	r4, #1
 800317c:	d00f      	beq.n	800319e <chThdRelease+0x4e>
 800317e:	2c02      	cmp	r4, #2
 8003180:	d1f6      	bne.n	8003170 <chThdRelease+0x20>
 8003182:	e9d0 5404 	ldrd	r5, r4, [r0, #16]
 8003186:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8003188:	6125      	str	r5, [r4, #16]
 800318a:	6915      	ldr	r5, [r2, #16]
 800318c:	616c      	str	r4, [r5, #20]
 800318e:	f381 8811 	msr	BASEPRI, r1
 8003192:	6801      	ldr	r1, [r0, #0]
 8003194:	6011      	str	r1, [r2, #0]
 8003196:	6002      	str	r2, [r0, #0]
 8003198:	f383 8811 	msr	BASEPRI, r3
 800319c:	e7e8      	b.n	8003170 <chThdRelease+0x20>
 800319e:	e9d0 1304 	ldrd	r1, r3, [r0, #16]
 80031a2:	6119      	str	r1, [r3, #16]
 80031a4:	6902      	ldr	r2, [r0, #16]
 80031a6:	bc30      	pop	{r4, r5}
 80031a8:	6153      	str	r3, [r2, #20]
 80031aa:	f7ff bf89 	b.w	80030c0 <chHeapFree>
 80031ae:	bf00      	nop

080031b0 <regfind>:
 80031b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80031b4:	4680      	mov	r8, r0
 80031b6:	2520      	movs	r5, #32
 80031b8:	f385 8811 	msr	BASEPRI, r5
 80031bc:	4f18      	ldr	r7, [pc, #96]	; (8003220 <regfind+0x70>)
 80031be:	2600      	movs	r6, #0
 80031c0:	6938      	ldr	r0, [r7, #16]
 80031c2:	7f83      	ldrb	r3, [r0, #30]
 80031c4:	3301      	adds	r3, #1
 80031c6:	7783      	strb	r3, [r0, #30]
 80031c8:	f386 8811 	msr	BASEPRI, r6
 80031cc:	eba8 0900 	sub.w	r9, r8, r0
 80031d0:	fab9 f989 	clz	r9, r9
 80031d4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80031d8:	f385 8811 	msr	BASEPRI, r5
 80031dc:	6904      	ldr	r4, [r0, #16]
 80031de:	42bc      	cmp	r4, r7
 80031e0:	bf08      	it	eq
 80031e2:	4604      	moveq	r4, r0
 80031e4:	d101      	bne.n	80031ea <regfind+0x3a>
 80031e6:	e011      	b.n	800320c <regfind+0x5c>
 80031e8:	461c      	mov	r4, r3
 80031ea:	7fa3      	ldrb	r3, [r4, #30]
 80031ec:	3301      	adds	r3, #1
 80031ee:	77a3      	strb	r3, [r4, #30]
 80031f0:	f386 8811 	msr	BASEPRI, r6
 80031f4:	f7ff ffac 	bl	8003150 <chThdRelease>
 80031f8:	45a0      	cmp	r8, r4
 80031fa:	bf08      	it	eq
 80031fc:	f049 0901 	orreq.w	r9, r9, #1
 8003200:	f385 8811 	msr	BASEPRI, r5
 8003204:	6923      	ldr	r3, [r4, #16]
 8003206:	4620      	mov	r0, r4
 8003208:	42bb      	cmp	r3, r7
 800320a:	d1ed      	bne.n	80031e8 <regfind+0x38>
 800320c:	2300      	movs	r3, #0
 800320e:	f383 8811 	msr	BASEPRI, r3
 8003212:	4620      	mov	r0, r4
 8003214:	f7ff ff9c 	bl	8003150 <chThdRelease>
 8003218:	4648      	mov	r0, r9
 800321a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800321e:	bf00      	nop
 8003220:	20000930 	.word	0x20000930
	...

08003230 <chHeapAlloc>:
 8003230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003232:	4e20      	ldr	r6, [pc, #128]	; (80032b4 <chHeapAlloc+0x84>)
 8003234:	3107      	adds	r1, #7
 8003236:	2800      	cmp	r0, #0
 8003238:	bf18      	it	ne
 800323a:	4606      	movne	r6, r0
 800323c:	f106 0710 	add.w	r7, r6, #16
 8003240:	4638      	mov	r0, r7
 8003242:	f021 0507 	bic.w	r5, r1, #7
 8003246:	f106 0408 	add.w	r4, r6, #8
 800324a:	f7ff fd91 	bl	8002d70 <chMtxLock>
 800324e:	e003      	b.n	8003258 <chHeapAlloc+0x28>
 8003250:	6843      	ldr	r3, [r0, #4]
 8003252:	42ab      	cmp	r3, r5
 8003254:	d212      	bcs.n	800327c <chHeapAlloc+0x4c>
 8003256:	4604      	mov	r4, r0
 8003258:	6820      	ldr	r0, [r4, #0]
 800325a:	2800      	cmp	r0, #0
 800325c:	d1f8      	bne.n	8003250 <chHeapAlloc+0x20>
 800325e:	4638      	mov	r0, r7
 8003260:	f7fe fafe 	bl	8001860 <chMtxUnlock>
 8003264:	6833      	ldr	r3, [r6, #0]
 8003266:	b313      	cbz	r3, 80032ae <chHeapAlloc+0x7e>
 8003268:	f105 0008 	add.w	r0, r5, #8
 800326c:	4798      	blx	r3
 800326e:	b1f0      	cbz	r0, 80032ae <chHeapAlloc+0x7e>
 8003270:	e9c0 6500 	strd	r6, r5, [r0]
 8003274:	f100 0408 	add.w	r4, r0, #8
 8003278:	4620      	mov	r0, r4
 800327a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800327c:	f105 0208 	add.w	r2, r5, #8
 8003280:	4293      	cmp	r3, r2
 8003282:	6801      	ldr	r1, [r0, #0]
 8003284:	d208      	bcs.n	8003298 <chHeapAlloc+0x68>
 8003286:	6021      	str	r1, [r4, #0]
 8003288:	4604      	mov	r4, r0
 800328a:	4638      	mov	r0, r7
 800328c:	f844 6b08 	str.w	r6, [r4], #8
 8003290:	f7fe fae6 	bl	8001860 <chMtxUnlock>
 8003294:	4620      	mov	r0, r4
 8003296:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003298:	1b5b      	subs	r3, r3, r5
 800329a:	eb00 0c02 	add.w	ip, r0, r2
 800329e:	3b08      	subs	r3, #8
 80032a0:	5081      	str	r1, [r0, r2]
 80032a2:	f8cc 3004 	str.w	r3, [ip, #4]
 80032a6:	f8c4 c000 	str.w	ip, [r4]
 80032aa:	6045      	str	r5, [r0, #4]
 80032ac:	e7ec      	b.n	8003288 <chHeapAlloc+0x58>
 80032ae:	2400      	movs	r4, #0
 80032b0:	e7e2      	b.n	8003278 <chHeapAlloc+0x48>
 80032b2:	bf00      	nop
 80032b4:	20000a88 	.word	0x20000a88
	...

080032c0 <chThdCreateFromHeap.constprop.52>:
 80032c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80032c4:	4606      	mov	r6, r0
 80032c6:	4688      	mov	r8, r1
 80032c8:	481a      	ldr	r0, [pc, #104]	; (8003334 <chThdCreateFromHeap.constprop.52+0x74>)
 80032ca:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80032ce:	f7ff ffaf 	bl	8003230 <chHeapAlloc>
 80032d2:	4604      	mov	r4, r0
 80032d4:	b358      	cbz	r0, 800332e <chThdCreateFromHeap.constprop.52+0x6e>
 80032d6:	2320      	movs	r3, #32
 80032d8:	f383 8811 	msr	BASEPRI, r3
 80032dc:	2302      	movs	r3, #2
 80032de:	2500      	movs	r5, #0
 80032e0:	2701      	movs	r7, #1
 80032e2:	4a15      	ldr	r2, [pc, #84]	; (8003338 <chThdCreateFromHeap.constprop.52+0x78>)
 80032e4:	f500 7192 	add.w	r1, r0, #292	; 0x124
 80032e8:	6102      	str	r2, [r0, #16]
 80032ea:	60c1      	str	r1, [r0, #12]
 80032ec:	4913      	ldr	r1, [pc, #76]	; (800333c <chThdCreateFromHeap.constprop.52+0x7c>)
 80032ee:	6086      	str	r6, [r0, #8]
 80032f0:	63c6      	str	r6, [r0, #60]	; 0x3c
 80032f2:	f8df c04c 	ldr.w	ip, [pc, #76]	; 8003340 <chThdCreateFromHeap.constprop.52+0x80>
 80032f6:	6956      	ldr	r6, [r2, #20]
 80032f8:	f8c0 1144 	str.w	r1, [r0, #324]	; 0x144
 80032fc:	7703      	strb	r3, [r0, #28]
 80032fe:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8003302:	f100 0328 	add.w	r3, r0, #40	; 0x28
 8003306:	6146      	str	r6, [r0, #20]
 8003308:	f8c0 8128 	str.w	r8, [r0, #296]	; 0x128
 800330c:	f8c0 c124 	str.w	ip, [r0, #292]	; 0x124
 8003310:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8003314:	6185      	str	r5, [r0, #24]
 8003316:	7787      	strb	r7, [r0, #30]
 8003318:	6130      	str	r0, [r6, #16]
 800331a:	6241      	str	r1, [r0, #36]	; 0x24
 800331c:	7747      	strb	r7, [r0, #29]
 800331e:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8003322:	4629      	mov	r1, r5
 8003324:	6150      	str	r0, [r2, #20]
 8003326:	f7fe fa0b 	bl	8001740 <chSchWakeupS>
 800332a:	f385 8811 	msr	BASEPRI, r5
 800332e:	4620      	mov	r0, r4
 8003330:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003334:	20000ab0 	.word	0x20000ab0
 8003338:	20000930 	.word	0x20000930
 800333c:	08000211 	.word	0x08000211
 8003340:	080007a1 	.word	0x080007a1
	...

08003350 <dyn3_execute>:
 8003350:	4b46      	ldr	r3, [pc, #280]	; (800346c <dyn3_execute+0x11c>)
 8003352:	b510      	push	{r4, lr}
 8003354:	699b      	ldr	r3, [r3, #24]
 8003356:	4946      	ldr	r1, [pc, #280]	; (8003470 <dyn3_execute+0x120>)
 8003358:	6898      	ldr	r0, [r3, #8]
 800335a:	3801      	subs	r0, #1
 800335c:	f7ff ffb0 	bl	80032c0 <chThdCreateFromHeap.constprop.52>
 8003360:	7f81      	ldrb	r1, [r0, #30]
 8003362:	4604      	mov	r4, r0
 8003364:	2001      	movs	r0, #1
 8003366:	1a09      	subs	r1, r1, r0
 8003368:	fab1 f181 	clz	r1, r1
 800336c:	0949      	lsrs	r1, r1, #5
 800336e:	f7fd f9cf 	bl	8000710 <_test_assert>
 8003372:	b100      	cbz	r0, 8003376 <dyn3_execute+0x26>
 8003374:	bd10      	pop	{r4, pc}
 8003376:	2320      	movs	r3, #32
 8003378:	f383 8811 	msr	BASEPRI, r3
 800337c:	7fa3      	ldrb	r3, [r4, #30]
 800337e:	3301      	adds	r3, #1
 8003380:	77a3      	strb	r3, [r4, #30]
 8003382:	f380 8811 	msr	BASEPRI, r0
 8003386:	2002      	movs	r0, #2
 8003388:	7fa1      	ldrb	r1, [r4, #30]
 800338a:	1a09      	subs	r1, r1, r0
 800338c:	fab1 f181 	clz	r1, r1
 8003390:	0949      	lsrs	r1, r1, #5
 8003392:	f7fd f9bd 	bl	8000710 <_test_assert>
 8003396:	2800      	cmp	r0, #0
 8003398:	d1ec      	bne.n	8003374 <dyn3_execute+0x24>
 800339a:	4620      	mov	r0, r4
 800339c:	f7ff fed8 	bl	8003150 <chThdRelease>
 80033a0:	7fa1      	ldrb	r1, [r4, #30]
 80033a2:	2003      	movs	r0, #3
 80033a4:	f1a1 0101 	sub.w	r1, r1, #1
 80033a8:	fab1 f181 	clz	r1, r1
 80033ac:	0949      	lsrs	r1, r1, #5
 80033ae:	f7fd f9af 	bl	8000710 <_test_assert>
 80033b2:	2800      	cmp	r0, #0
 80033b4:	d1de      	bne.n	8003374 <dyn3_execute+0x24>
 80033b6:	4620      	mov	r0, r4
 80033b8:	f7ff fefa 	bl	80031b0 <regfind>
 80033bc:	4601      	mov	r1, r0
 80033be:	2004      	movs	r0, #4
 80033c0:	f7fd f9a6 	bl	8000710 <_test_assert>
 80033c4:	2800      	cmp	r0, #0
 80033c6:	d1d5      	bne.n	8003374 <dyn3_execute+0x24>
 80033c8:	4620      	mov	r0, r4
 80033ca:	f7ff fef1 	bl	80031b0 <regfind>
 80033ce:	4601      	mov	r1, r0
 80033d0:	2005      	movs	r0, #5
 80033d2:	f7fd f99d 	bl	8000710 <_test_assert>
 80033d6:	2800      	cmp	r0, #0
 80033d8:	d1cc      	bne.n	8003374 <dyn3_execute+0x24>
 80033da:	4620      	mov	r0, r4
 80033dc:	f7ff feb8 	bl	8003150 <chThdRelease>
 80033e0:	7fa1      	ldrb	r1, [r4, #30]
 80033e2:	2006      	movs	r0, #6
 80033e4:	fab1 f181 	clz	r1, r1
 80033e8:	0949      	lsrs	r1, r1, #5
 80033ea:	f7fd f991 	bl	8000710 <_test_assert>
 80033ee:	2800      	cmp	r0, #0
 80033f0:	d1c0      	bne.n	8003374 <dyn3_execute+0x24>
 80033f2:	7f21      	ldrb	r1, [r4, #28]
 80033f4:	2007      	movs	r0, #7
 80033f6:	fab1 f181 	clz	r1, r1
 80033fa:	0949      	lsrs	r1, r1, #5
 80033fc:	f7fd f988 	bl	8000710 <_test_assert>
 8003400:	2800      	cmp	r0, #0
 8003402:	d1b7      	bne.n	8003374 <dyn3_execute+0x24>
 8003404:	4620      	mov	r0, r4
 8003406:	f7ff fed3 	bl	80031b0 <regfind>
 800340a:	4601      	mov	r1, r0
 800340c:	2008      	movs	r0, #8
 800340e:	f7fd f97f 	bl	8000710 <_test_assert>
 8003412:	2800      	cmp	r0, #0
 8003414:	d1ae      	bne.n	8003374 <dyn3_execute+0x24>
 8003416:	4620      	mov	r0, r4
 8003418:	f7ff feca 	bl	80031b0 <regfind>
 800341c:	4601      	mov	r1, r0
 800341e:	2009      	movs	r0, #9
 8003420:	f7fd f976 	bl	8000710 <_test_assert>
 8003424:	2800      	cmp	r0, #0
 8003426:	d1a5      	bne.n	8003374 <dyn3_execute+0x24>
 8003428:	2032      	movs	r0, #50	; 0x32
 800342a:	f7ff f931 	bl	8002690 <chThdSleep>
 800342e:	7f21      	ldrb	r1, [r4, #28]
 8003430:	200a      	movs	r0, #10
 8003432:	f1a1 030f 	sub.w	r3, r1, #15
 8003436:	4259      	negs	r1, r3
 8003438:	4159      	adcs	r1, r3
 800343a:	f7fd f969 	bl	8000710 <_test_assert>
 800343e:	2800      	cmp	r0, #0
 8003440:	d198      	bne.n	8003374 <dyn3_execute+0x24>
 8003442:	4620      	mov	r0, r4
 8003444:	f7ff feb4 	bl	80031b0 <regfind>
 8003448:	4601      	mov	r1, r0
 800344a:	200b      	movs	r0, #11
 800344c:	f7fd f960 	bl	8000710 <_test_assert>
 8003450:	2800      	cmp	r0, #0
 8003452:	d18f      	bne.n	8003374 <dyn3_execute+0x24>
 8003454:	4620      	mov	r0, r4
 8003456:	f7ff feab 	bl	80031b0 <regfind>
 800345a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800345e:	f080 0101 	eor.w	r1, r0, #1
 8003462:	b2c9      	uxtb	r1, r1
 8003464:	200c      	movs	r0, #12
 8003466:	f7fd b953 	b.w	8000710 <_test_assert>
 800346a:	bf00      	nop
 800346c:	20000930 	.word	0x20000930
 8003470:	08005c50 	.word	0x08005c50
	...

08003480 <heap1_execute>:
 8003480:	b570      	push	{r4, r5, r6, lr}
 8003482:	b082      	sub	sp, #8
 8003484:	4669      	mov	r1, sp
 8003486:	2000      	movs	r0, #0
 8003488:	f7ff fdf2 	bl	8003070 <chHeapStatus>
 800348c:	2110      	movs	r1, #16
 800348e:	2000      	movs	r0, #0
 8003490:	f7ff fece 	bl	8003230 <chHeapAlloc>
 8003494:	1c01      	adds	r1, r0, #0
 8003496:	4605      	mov	r5, r0
 8003498:	bf18      	it	ne
 800349a:	2101      	movne	r1, #1
 800349c:	2001      	movs	r0, #1
 800349e:	f7fd f937 	bl	8000710 <_test_assert>
 80034a2:	b108      	cbz	r0, 80034a8 <heap1_execute+0x28>
 80034a4:	b002      	add	sp, #8
 80034a6:	bd70      	pop	{r4, r5, r6, pc}
 80034a8:	4604      	mov	r4, r0
 80034aa:	4628      	mov	r0, r5
 80034ac:	f7ff fe08 	bl	80030c0 <chHeapFree>
 80034b0:	f06f 01ff 	mvn.w	r1, #255	; 0xff
 80034b4:	4620      	mov	r0, r4
 80034b6:	f7ff febb 	bl	8003230 <chHeapAlloc>
 80034ba:	fab0 f180 	clz	r1, r0
 80034be:	2002      	movs	r0, #2
 80034c0:	0949      	lsrs	r1, r1, #5
 80034c2:	f7fd f925 	bl	8000710 <_test_assert>
 80034c6:	2800      	cmp	r0, #0
 80034c8:	d1ec      	bne.n	80034a4 <heap1_execute+0x24>
 80034ca:	4669      	mov	r1, sp
 80034cc:	487c      	ldr	r0, [pc, #496]	; (80036c0 <heap1_execute+0x240>)
 80034ce:	f7ff fdcf 	bl	8003070 <chHeapStatus>
 80034d2:	2110      	movs	r1, #16
 80034d4:	487a      	ldr	r0, [pc, #488]	; (80036c0 <heap1_execute+0x240>)
 80034d6:	f7ff feab 	bl	8003230 <chHeapAlloc>
 80034da:	2110      	movs	r1, #16
 80034dc:	4606      	mov	r6, r0
 80034de:	4878      	ldr	r0, [pc, #480]	; (80036c0 <heap1_execute+0x240>)
 80034e0:	f7ff fea6 	bl	8003230 <chHeapAlloc>
 80034e4:	2110      	movs	r1, #16
 80034e6:	4605      	mov	r5, r0
 80034e8:	4875      	ldr	r0, [pc, #468]	; (80036c0 <heap1_execute+0x240>)
 80034ea:	f7ff fea1 	bl	8003230 <chHeapAlloc>
 80034ee:	4604      	mov	r4, r0
 80034f0:	4630      	mov	r0, r6
 80034f2:	f7ff fde5 	bl	80030c0 <chHeapFree>
 80034f6:	4628      	mov	r0, r5
 80034f8:	f7ff fde2 	bl	80030c0 <chHeapFree>
 80034fc:	4620      	mov	r0, r4
 80034fe:	f7ff fddf 	bl	80030c0 <chHeapFree>
 8003502:	a901      	add	r1, sp, #4
 8003504:	486e      	ldr	r0, [pc, #440]	; (80036c0 <heap1_execute+0x240>)
 8003506:	f7ff fdb3 	bl	8003070 <chHeapStatus>
 800350a:	f1a0 0101 	sub.w	r1, r0, #1
 800350e:	fab1 f181 	clz	r1, r1
 8003512:	2003      	movs	r0, #3
 8003514:	0949      	lsrs	r1, r1, #5
 8003516:	f7fd f8fb 	bl	8000710 <_test_assert>
 800351a:	2800      	cmp	r0, #0
 800351c:	d1c2      	bne.n	80034a4 <heap1_execute+0x24>
 800351e:	2110      	movs	r1, #16
 8003520:	4867      	ldr	r0, [pc, #412]	; (80036c0 <heap1_execute+0x240>)
 8003522:	f7ff fe85 	bl	8003230 <chHeapAlloc>
 8003526:	2110      	movs	r1, #16
 8003528:	4604      	mov	r4, r0
 800352a:	4865      	ldr	r0, [pc, #404]	; (80036c0 <heap1_execute+0x240>)
 800352c:	f7ff fe80 	bl	8003230 <chHeapAlloc>
 8003530:	4605      	mov	r5, r0
 8003532:	2110      	movs	r1, #16
 8003534:	4862      	ldr	r0, [pc, #392]	; (80036c0 <heap1_execute+0x240>)
 8003536:	f7ff fe7b 	bl	8003230 <chHeapAlloc>
 800353a:	f7ff fdc1 	bl	80030c0 <chHeapFree>
 800353e:	4628      	mov	r0, r5
 8003540:	f7ff fdbe 	bl	80030c0 <chHeapFree>
 8003544:	4620      	mov	r0, r4
 8003546:	f7ff fdbb 	bl	80030c0 <chHeapFree>
 800354a:	a901      	add	r1, sp, #4
 800354c:	485c      	ldr	r0, [pc, #368]	; (80036c0 <heap1_execute+0x240>)
 800354e:	f7ff fd8f 	bl	8003070 <chHeapStatus>
 8003552:	f1a0 0101 	sub.w	r1, r0, #1
 8003556:	fab1 f181 	clz	r1, r1
 800355a:	2004      	movs	r0, #4
 800355c:	0949      	lsrs	r1, r1, #5
 800355e:	f7fd f8d7 	bl	8000710 <_test_assert>
 8003562:	2800      	cmp	r0, #0
 8003564:	d19e      	bne.n	80034a4 <heap1_execute+0x24>
 8003566:	2111      	movs	r1, #17
 8003568:	4855      	ldr	r0, [pc, #340]	; (80036c0 <heap1_execute+0x240>)
 800356a:	f7ff fe61 	bl	8003230 <chHeapAlloc>
 800356e:	2110      	movs	r1, #16
 8003570:	4604      	mov	r4, r0
 8003572:	4853      	ldr	r0, [pc, #332]	; (80036c0 <heap1_execute+0x240>)
 8003574:	f7ff fe5c 	bl	8003230 <chHeapAlloc>
 8003578:	4605      	mov	r5, r0
 800357a:	4620      	mov	r0, r4
 800357c:	f7ff fda0 	bl	80030c0 <chHeapFree>
 8003580:	a901      	add	r1, sp, #4
 8003582:	484f      	ldr	r0, [pc, #316]	; (80036c0 <heap1_execute+0x240>)
 8003584:	f7ff fd74 	bl	8003070 <chHeapStatus>
 8003588:	f1a0 0102 	sub.w	r1, r0, #2
 800358c:	fab1 f181 	clz	r1, r1
 8003590:	2005      	movs	r0, #5
 8003592:	0949      	lsrs	r1, r1, #5
 8003594:	f7fd f8bc 	bl	8000710 <_test_assert>
 8003598:	2800      	cmp	r0, #0
 800359a:	d183      	bne.n	80034a4 <heap1_execute+0x24>
 800359c:	2110      	movs	r1, #16
 800359e:	4848      	ldr	r0, [pc, #288]	; (80036c0 <heap1_execute+0x240>)
 80035a0:	f7ff fe46 	bl	8003230 <chHeapAlloc>
 80035a4:	a901      	add	r1, sp, #4
 80035a6:	4604      	mov	r4, r0
 80035a8:	4845      	ldr	r0, [pc, #276]	; (80036c0 <heap1_execute+0x240>)
 80035aa:	f7ff fd61 	bl	8003070 <chHeapStatus>
 80035ae:	2801      	cmp	r0, #1
 80035b0:	f000 8083 	beq.w	80036ba <heap1_execute+0x23a>
 80035b4:	a901      	add	r1, sp, #4
 80035b6:	4842      	ldr	r0, [pc, #264]	; (80036c0 <heap1_execute+0x240>)
 80035b8:	f7ff fd5a 	bl	8003070 <chHeapStatus>
 80035bc:	f1a0 0102 	sub.w	r1, r0, #2
 80035c0:	fab1 f181 	clz	r1, r1
 80035c4:	0949      	lsrs	r1, r1, #5
 80035c6:	2006      	movs	r0, #6
 80035c8:	f7fd f8a2 	bl	8000710 <_test_assert>
 80035cc:	2800      	cmp	r0, #0
 80035ce:	f47f af69 	bne.w	80034a4 <heap1_execute+0x24>
 80035d2:	4628      	mov	r0, r5
 80035d4:	f7ff fd74 	bl	80030c0 <chHeapFree>
 80035d8:	4620      	mov	r0, r4
 80035da:	f7ff fd71 	bl	80030c0 <chHeapFree>
 80035de:	a901      	add	r1, sp, #4
 80035e0:	4837      	ldr	r0, [pc, #220]	; (80036c0 <heap1_execute+0x240>)
 80035e2:	f7ff fd45 	bl	8003070 <chHeapStatus>
 80035e6:	f1a0 0101 	sub.w	r1, r0, #1
 80035ea:	fab1 f181 	clz	r1, r1
 80035ee:	2007      	movs	r0, #7
 80035f0:	0949      	lsrs	r1, r1, #5
 80035f2:	f7fd f88d 	bl	8000710 <_test_assert>
 80035f6:	2800      	cmp	r0, #0
 80035f8:	f47f af54 	bne.w	80034a4 <heap1_execute+0x24>
 80035fc:	2110      	movs	r1, #16
 80035fe:	4830      	ldr	r0, [pc, #192]	; (80036c0 <heap1_execute+0x240>)
 8003600:	f7ff fe16 	bl	8003230 <chHeapAlloc>
 8003604:	2110      	movs	r1, #16
 8003606:	4605      	mov	r5, r0
 8003608:	482d      	ldr	r0, [pc, #180]	; (80036c0 <heap1_execute+0x240>)
 800360a:	f7ff fe11 	bl	8003230 <chHeapAlloc>
 800360e:	4604      	mov	r4, r0
 8003610:	4628      	mov	r0, r5
 8003612:	f7ff fd55 	bl	80030c0 <chHeapFree>
 8003616:	a901      	add	r1, sp, #4
 8003618:	4829      	ldr	r0, [pc, #164]	; (80036c0 <heap1_execute+0x240>)
 800361a:	f7ff fd29 	bl	8003070 <chHeapStatus>
 800361e:	1e85      	subs	r5, r0, #2
 8003620:	4269      	negs	r1, r5
 8003622:	4169      	adcs	r1, r5
 8003624:	2008      	movs	r0, #8
 8003626:	f7fd f873 	bl	8000710 <_test_assert>
 800362a:	2800      	cmp	r0, #0
 800362c:	f47f af3a 	bne.w	80034a4 <heap1_execute+0x24>
 8003630:	2120      	movs	r1, #32
 8003632:	4823      	ldr	r0, [pc, #140]	; (80036c0 <heap1_execute+0x240>)
 8003634:	f7ff fdfc 	bl	8003230 <chHeapAlloc>
 8003638:	f7ff fd42 	bl	80030c0 <chHeapFree>
 800363c:	4620      	mov	r0, r4
 800363e:	f7ff fd3f 	bl	80030c0 <chHeapFree>
 8003642:	a901      	add	r1, sp, #4
 8003644:	481e      	ldr	r0, [pc, #120]	; (80036c0 <heap1_execute+0x240>)
 8003646:	f7ff fd13 	bl	8003070 <chHeapStatus>
 800364a:	3801      	subs	r0, #1
 800364c:	4241      	negs	r1, r0
 800364e:	4141      	adcs	r1, r0
 8003650:	2009      	movs	r0, #9
 8003652:	f7fd f85d 	bl	8000710 <_test_assert>
 8003656:	2800      	cmp	r0, #0
 8003658:	f47f af24 	bne.w	80034a4 <heap1_execute+0x24>
 800365c:	a901      	add	r1, sp, #4
 800365e:	4818      	ldr	r0, [pc, #96]	; (80036c0 <heap1_execute+0x240>)
 8003660:	f7ff fd06 	bl	8003070 <chHeapStatus>
 8003664:	9901      	ldr	r1, [sp, #4]
 8003666:	4816      	ldr	r0, [pc, #88]	; (80036c0 <heap1_execute+0x240>)
 8003668:	f7ff fde2 	bl	8003230 <chHeapAlloc>
 800366c:	a901      	add	r1, sp, #4
 800366e:	4604      	mov	r4, r0
 8003670:	4813      	ldr	r0, [pc, #76]	; (80036c0 <heap1_execute+0x240>)
 8003672:	f7ff fcfd 	bl	8003070 <chHeapStatus>
 8003676:	fab0 f180 	clz	r1, r0
 800367a:	200a      	movs	r0, #10
 800367c:	0949      	lsrs	r1, r1, #5
 800367e:	f7fd f847 	bl	8000710 <_test_assert>
 8003682:	2800      	cmp	r0, #0
 8003684:	f47f af0e 	bne.w	80034a4 <heap1_execute+0x24>
 8003688:	4620      	mov	r0, r4
 800368a:	f7ff fd19 	bl	80030c0 <chHeapFree>
 800368e:	a901      	add	r1, sp, #4
 8003690:	480b      	ldr	r0, [pc, #44]	; (80036c0 <heap1_execute+0x240>)
 8003692:	f7ff fced 	bl	8003070 <chHeapStatus>
 8003696:	1e42      	subs	r2, r0, #1
 8003698:	4251      	negs	r1, r2
 800369a:	4151      	adcs	r1, r2
 800369c:	200b      	movs	r0, #11
 800369e:	f7fd f837 	bl	8000710 <_test_assert>
 80036a2:	2800      	cmp	r0, #0
 80036a4:	f47f aefe 	bne.w	80034a4 <heap1_execute+0x24>
 80036a8:	e9dd 3100 	ldrd	r3, r1, [sp]
 80036ac:	1acb      	subs	r3, r1, r3
 80036ae:	4259      	negs	r1, r3
 80036b0:	4159      	adcs	r1, r3
 80036b2:	200c      	movs	r0, #12
 80036b4:	f7fd f82c 	bl	8000710 <_test_assert>
 80036b8:	e6f4      	b.n	80034a4 <heap1_execute+0x24>
 80036ba:	4601      	mov	r1, r0
 80036bc:	e783      	b.n	80035c6 <heap1_execute+0x146>
 80036be:	bf00      	nop
 80036c0:	200011a8 	.word	0x200011a8
	...

080036d0 <chSemWait>:
 80036d0:	2320      	movs	r3, #32
 80036d2:	f383 8811 	msr	BASEPRI, r3
 80036d6:	6883      	ldr	r3, [r0, #8]
 80036d8:	3b01      	subs	r3, #1
 80036da:	2b00      	cmp	r3, #0
 80036dc:	6083      	str	r3, [r0, #8]
 80036de:	db04      	blt.n	80036ea <chSemWait+0x1a>
 80036e0:	2000      	movs	r0, #0
 80036e2:	2300      	movs	r3, #0
 80036e4:	f383 8811 	msr	BASEPRI, r3
 80036e8:	4770      	bx	lr
 80036ea:	4603      	mov	r3, r0
 80036ec:	b510      	push	{r4, lr}
 80036ee:	4c08      	ldr	r4, [pc, #32]	; (8003710 <chSemWait+0x40>)
 80036f0:	2005      	movs	r0, #5
 80036f2:	69a2      	ldr	r2, [r4, #24]
 80036f4:	6213      	str	r3, [r2, #32]
 80036f6:	6013      	str	r3, [r2, #0]
 80036f8:	6859      	ldr	r1, [r3, #4]
 80036fa:	6051      	str	r1, [r2, #4]
 80036fc:	600a      	str	r2, [r1, #0]
 80036fe:	605a      	str	r2, [r3, #4]
 8003700:	f7fe f936 	bl	8001970 <chSchGoSleepS>
 8003704:	69a3      	ldr	r3, [r4, #24]
 8003706:	6a18      	ldr	r0, [r3, #32]
 8003708:	2300      	movs	r3, #0
 800370a:	f383 8811 	msr	BASEPRI, r3
 800370e:	bd10      	pop	{r4, pc}
 8003710:	20000930 	.word	0x20000930
	...

08003720 <bmk11_execute>:
 8003720:	b570      	push	{r4, r5, r6, lr}
 8003722:	f7ff f895 	bl	8002850 <test_wait_tick>
 8003726:	2500      	movs	r5, #0
 8003728:	f7fd fd22 	bl	8001170 <test_start_timer.constprop.1>
 800372c:	4e14      	ldr	r6, [pc, #80]	; (8003780 <bmk11_execute+0x60>)
 800372e:	4c15      	ldr	r4, [pc, #84]	; (8003784 <bmk11_execute+0x64>)
 8003730:	4620      	mov	r0, r4
 8003732:	f7ff ffcd 	bl	80036d0 <chSemWait>
 8003736:	4620      	mov	r0, r4
 8003738:	f7fe f8c2 	bl	80018c0 <chSemSignal>
 800373c:	4620      	mov	r0, r4
 800373e:	f7ff ffc7 	bl	80036d0 <chSemWait>
 8003742:	4620      	mov	r0, r4
 8003744:	f7fe f8bc 	bl	80018c0 <chSemSignal>
 8003748:	4620      	mov	r0, r4
 800374a:	f7ff ffc1 	bl	80036d0 <chSemWait>
 800374e:	4620      	mov	r0, r4
 8003750:	f7fe f8b6 	bl	80018c0 <chSemSignal>
 8003754:	4620      	mov	r0, r4
 8003756:	f7ff ffbb 	bl	80036d0 <chSemWait>
 800375a:	4620      	mov	r0, r4
 800375c:	f7fe f8b0 	bl	80018c0 <chSemSignal>
 8003760:	7833      	ldrb	r3, [r6, #0]
 8003762:	3501      	adds	r5, #1
 8003764:	2b00      	cmp	r3, #0
 8003766:	d0e3      	beq.n	8003730 <bmk11_execute+0x10>
 8003768:	4807      	ldr	r0, [pc, #28]	; (8003788 <bmk11_execute+0x68>)
 800376a:	f7fd f841 	bl	80007f0 <test_print>
 800376e:	00a8      	lsls	r0, r5, #2
 8003770:	f7fc ff46 	bl	8000600 <test_printn>
 8003774:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003778:	4804      	ldr	r0, [pc, #16]	; (800378c <bmk11_execute+0x6c>)
 800377a:	f7fd b819 	b.w	80007b0 <test_println>
 800377e:	bf00      	nop
 8003780:	200011c8 	.word	0x200011c8
 8003784:	20000b28 	.word	0x20000b28
 8003788:	08005ac0 	.word	0x08005ac0
 800378c:	08005ae0 	.word	0x08005ae0

08003790 <thread3.lto_priv.66>:
 8003790:	b538      	push	{r3, r4, r5, lr}
 8003792:	4c07      	ldr	r4, [pc, #28]	; (80037b0 <thread3.lto_priv.66+0x20>)
 8003794:	69a3      	ldr	r3, [r4, #24]
 8003796:	7f5b      	ldrb	r3, [r3, #29]
 8003798:	075a      	lsls	r2, r3, #29
 800379a:	d407      	bmi.n	80037ac <thread3.lto_priv.66+0x1c>
 800379c:	4d05      	ldr	r5, [pc, #20]	; (80037b4 <thread3.lto_priv.66+0x24>)
 800379e:	4628      	mov	r0, r5
 80037a0:	f7ff ff96 	bl	80036d0 <chSemWait>
 80037a4:	69a3      	ldr	r3, [r4, #24]
 80037a6:	7f5b      	ldrb	r3, [r3, #29]
 80037a8:	075b      	lsls	r3, r3, #29
 80037aa:	d5f8      	bpl.n	800379e <thread3.lto_priv.66+0xe>
 80037ac:	bd38      	pop	{r3, r4, r5, pc}
 80037ae:	bf00      	nop
 80037b0:	20000930 	.word	0x20000930
 80037b4:	20000b28 	.word	0x20000b28
	...

080037c0 <sem4_execute>:
 80037c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80037c2:	2500      	movs	r5, #0
 80037c4:	b087      	sub	sp, #28
 80037c6:	ac03      	add	r4, sp, #12
 80037c8:	9505      	str	r5, [sp, #20]
 80037ca:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80037ce:	2620      	movs	r6, #32
 80037d0:	f386 8811 	msr	BASEPRI, r6
 80037d4:	4629      	mov	r1, r5
 80037d6:	4620      	mov	r0, r4
 80037d8:	f7fd fc32 	bl	8001040 <chSemResetI>
 80037dc:	f7fd fe80 	bl	80014e0 <chSchRescheduleS>
 80037e0:	f385 8811 	msr	BASEPRI, r5
 80037e4:	f386 8811 	msr	BASEPRI, r6
 80037e8:	9905      	ldr	r1, [sp, #20]
 80037ea:	2001      	movs	r0, #1
 80037ec:	42a9      	cmp	r1, r5
 80037ee:	bfcc      	ite	gt
 80037f0:	2100      	movgt	r1, #0
 80037f2:	2101      	movle	r1, #1
 80037f4:	f7fc ff8c 	bl	8000710 <_test_assert>
 80037f8:	b118      	cbz	r0, 8003802 <sem4_execute+0x42>
 80037fa:	f385 8811 	msr	BASEPRI, r5
 80037fe:	b007      	add	sp, #28
 8003800:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003802:	4607      	mov	r7, r0
 8003804:	f380 8811 	msr	BASEPRI, r0
 8003808:	4a40      	ldr	r2, [pc, #256]	; (800390c <sem4_execute+0x14c>)
 800380a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800380e:	6992      	ldr	r2, [r2, #24]
 8003810:	4b3f      	ldr	r3, [pc, #252]	; (8003910 <sem4_execute+0x150>)
 8003812:	6892      	ldr	r2, [r2, #8]
 8003814:	483f      	ldr	r0, [pc, #252]	; (8003914 <sem4_execute+0x154>)
 8003816:	3a01      	subs	r2, #1
 8003818:	9400      	str	r4, [sp, #0]
 800381a:	f7fe f871 	bl	8001900 <chThdCreateStatic>
 800381e:	4b3e      	ldr	r3, [pc, #248]	; (8003918 <sem4_execute+0x158>)
 8003820:	6018      	str	r0, [r3, #0]
 8003822:	4620      	mov	r0, r4
 8003824:	f7ff ff54 	bl	80036d0 <chSemWait>
 8003828:	f386 8811 	msr	BASEPRI, r6
 800382c:	9905      	ldr	r1, [sp, #20]
 800382e:	2002      	movs	r0, #2
 8003830:	2900      	cmp	r1, #0
 8003832:	bfcc      	ite	gt
 8003834:	2100      	movgt	r1, #0
 8003836:	2101      	movle	r1, #1
 8003838:	f7fc ff6a 	bl	8000710 <_test_assert>
 800383c:	b118      	cbz	r0, 8003846 <sem4_execute+0x86>
 800383e:	f387 8811 	msr	BASEPRI, r7
 8003842:	b007      	add	sp, #28
 8003844:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003846:	f380 8811 	msr	BASEPRI, r0
 800384a:	f386 8811 	msr	BASEPRI, r6
 800384e:	9b05      	ldr	r3, [sp, #20]
 8003850:	2b00      	cmp	r3, #0
 8003852:	dd23      	ble.n	800389c <sem4_execute+0xdc>
 8003854:	f7fd fe44 	bl	80014e0 <chSchRescheduleS>
 8003858:	2500      	movs	r5, #0
 800385a:	f385 8811 	msr	BASEPRI, r5
 800385e:	2720      	movs	r7, #32
 8003860:	f387 8811 	msr	BASEPRI, r7
 8003864:	9905      	ldr	r1, [sp, #20]
 8003866:	2003      	movs	r0, #3
 8003868:	42a9      	cmp	r1, r5
 800386a:	bfd4      	ite	le
 800386c:	2100      	movle	r1, #0
 800386e:	2101      	movgt	r1, #1
 8003870:	f7fc ff4e 	bl	8000710 <_test_assert>
 8003874:	4606      	mov	r6, r0
 8003876:	2800      	cmp	r0, #0
 8003878:	d1bf      	bne.n	80037fa <sem4_execute+0x3a>
 800387a:	f380 8811 	msr	BASEPRI, r0
 800387e:	f387 8811 	msr	BASEPRI, r7
 8003882:	9905      	ldr	r1, [sp, #20]
 8003884:	2004      	movs	r0, #4
 8003886:	f1a1 0101 	sub.w	r1, r1, #1
 800388a:	fab1 f181 	clz	r1, r1
 800388e:	0949      	lsrs	r1, r1, #5
 8003890:	f7fc ff3e 	bl	8000710 <_test_assert>
 8003894:	b130      	cbz	r0, 80038a4 <sem4_execute+0xe4>
 8003896:	f386 8811 	msr	BASEPRI, r6
 800389a:	e7b0      	b.n	80037fe <sem4_execute+0x3e>
 800389c:	4620      	mov	r0, r4
 800389e:	f7fd fb57 	bl	8000f50 <chSemSignalI>
 80038a2:	e7d7      	b.n	8003854 <sem4_execute+0x94>
 80038a4:	f380 8811 	msr	BASEPRI, r0
 80038a8:	f387 8811 	msr	BASEPRI, r7
 80038ac:	9b05      	ldr	r3, [sp, #20]
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	dd27      	ble.n	8003902 <sem4_execute+0x142>
 80038b2:	f7fd fe15 	bl	80014e0 <chSchRescheduleS>
 80038b6:	2400      	movs	r4, #0
 80038b8:	f384 8811 	msr	BASEPRI, r4
 80038bc:	2620      	movs	r6, #32
 80038be:	f386 8811 	msr	BASEPRI, r6
 80038c2:	9905      	ldr	r1, [sp, #20]
 80038c4:	2003      	movs	r0, #3
 80038c6:	42a1      	cmp	r1, r4
 80038c8:	bfd4      	ite	le
 80038ca:	2100      	movle	r1, #0
 80038cc:	2101      	movgt	r1, #1
 80038ce:	f7fc ff1f 	bl	8000710 <_test_assert>
 80038d2:	4605      	mov	r5, r0
 80038d4:	b110      	cbz	r0, 80038dc <sem4_execute+0x11c>
 80038d6:	f384 8811 	msr	BASEPRI, r4
 80038da:	e790      	b.n	80037fe <sem4_execute+0x3e>
 80038dc:	f380 8811 	msr	BASEPRI, r0
 80038e0:	f386 8811 	msr	BASEPRI, r6
 80038e4:	9905      	ldr	r1, [sp, #20]
 80038e6:	2005      	movs	r0, #5
 80038e8:	f1a1 0101 	sub.w	r1, r1, #1
 80038ec:	fab1 f181 	clz	r1, r1
 80038f0:	0949      	lsrs	r1, r1, #5
 80038f2:	f7fc ff0d 	bl	8000710 <_test_assert>
 80038f6:	2800      	cmp	r0, #0
 80038f8:	f47f af7f 	bne.w	80037fa <sem4_execute+0x3a>
 80038fc:	f380 8811 	msr	BASEPRI, r0
 8003900:	e77d      	b.n	80037fe <sem4_execute+0x3e>
 8003902:	4620      	mov	r0, r4
 8003904:	f7fd fb24 	bl	8000f50 <chSemSignalI>
 8003908:	e7d3      	b.n	80038b2 <sem4_execute+0xf2>
 800390a:	bf00      	nop
 800390c:	20000930 	.word	0x20000930
 8003910:	08001501 	.word	0x08001501
 8003914:	20000b38 	.word	0x20000b38
 8003918:	200011cc 	.word	0x200011cc
 800391c:	00000000 	.word	0x00000000

08003920 <thread3.lto_priv.65>:
 8003920:	b510      	push	{r4, lr}
 8003922:	4c04      	ldr	r4, [pc, #16]	; (8003934 <thread3.lto_priv.65+0x14>)
 8003924:	4620      	mov	r0, r4
 8003926:	f7ff fed3 	bl	80036d0 <chSemWait>
 800392a:	4620      	mov	r0, r4
 800392c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003930:	f7fd bfc6 	b.w	80018c0 <chSemSignal>
 8003934:	200008ac 	.word	0x200008ac
	...

08003940 <thread1.lto_priv.67>:
 8003940:	b510      	push	{r4, lr}
 8003942:	4604      	mov	r4, r0
 8003944:	4803      	ldr	r0, [pc, #12]	; (8003954 <thread1.lto_priv.67+0x14>)
 8003946:	f7ff fec3 	bl	80036d0 <chSemWait>
 800394a:	7820      	ldrb	r0, [r4, #0]
 800394c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003950:	f7fc bef6 	b.w	8000740 <test_emit_token>
 8003954:	200008ac 	.word	0x200008ac
	...

08003960 <chThdWait>:
 8003960:	b538      	push	{r3, r4, r5, lr}
 8003962:	4604      	mov	r4, r0
 8003964:	2320      	movs	r3, #32
 8003966:	f383 8811 	msr	BASEPRI, r3
 800396a:	7f03      	ldrb	r3, [r0, #28]
 800396c:	2b0f      	cmp	r3, #15
 800396e:	d007      	beq.n	8003980 <chThdWait+0x20>
 8003970:	4b08      	ldr	r3, [pc, #32]	; (8003994 <chThdWait+0x34>)
 8003972:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003974:	699b      	ldr	r3, [r3, #24]
 8003976:	2009      	movs	r0, #9
 8003978:	601a      	str	r2, [r3, #0]
 800397a:	6263      	str	r3, [r4, #36]	; 0x24
 800397c:	f7fd fff8 	bl	8001970 <chSchGoSleepS>
 8003980:	6a25      	ldr	r5, [r4, #32]
 8003982:	2300      	movs	r3, #0
 8003984:	f383 8811 	msr	BASEPRI, r3
 8003988:	4620      	mov	r0, r4
 800398a:	f7ff fbe1 	bl	8003150 <chThdRelease>
 800398e:	4628      	mov	r0, r5
 8003990:	bd38      	pop	{r3, r4, r5, pc}
 8003992:	bf00      	nop
 8003994:	20000930 	.word	0x20000930
	...

080039a0 <bmk5_execute>:
 80039a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80039a4:	2400      	movs	r4, #0
 80039a6:	4b15      	ldr	r3, [pc, #84]	; (80039fc <bmk5_execute+0x5c>)
 80039a8:	b083      	sub	sp, #12
 80039aa:	699b      	ldr	r3, [r3, #24]
 80039ac:	46a1      	mov	r9, r4
 80039ae:	689d      	ldr	r5, [r3, #8]
 80039b0:	f7fe ff4e 	bl	8002850 <test_wait_tick>
 80039b4:	f7fd fbdc 	bl	8001170 <test_start_timer.constprop.1>
 80039b8:	f8df 8054 	ldr.w	r8, [pc, #84]	; 8003a10 <bmk5_execute+0x70>
 80039bc:	4f10      	ldr	r7, [pc, #64]	; (8003a00 <bmk5_execute+0x60>)
 80039be:	4e11      	ldr	r6, [pc, #68]	; (8003a04 <bmk5_execute+0x64>)
 80039c0:	3d01      	subs	r5, #1
 80039c2:	463b      	mov	r3, r7
 80039c4:	462a      	mov	r2, r5
 80039c6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80039ca:	f8cd 9000 	str.w	r9, [sp]
 80039ce:	4630      	mov	r0, r6
 80039d0:	f7fd ff96 	bl	8001900 <chThdCreateStatic>
 80039d4:	f7ff ffc4 	bl	8003960 <chThdWait>
 80039d8:	f898 3000 	ldrb.w	r3, [r8]
 80039dc:	3401      	adds	r4, #1
 80039de:	2b00      	cmp	r3, #0
 80039e0:	d0ef      	beq.n	80039c2 <bmk5_execute+0x22>
 80039e2:	4809      	ldr	r0, [pc, #36]	; (8003a08 <bmk5_execute+0x68>)
 80039e4:	f7fc ff04 	bl	80007f0 <test_print>
 80039e8:	4620      	mov	r0, r4
 80039ea:	f7fc fe09 	bl	8000600 <test_printn>
 80039ee:	4807      	ldr	r0, [pc, #28]	; (8003a0c <bmk5_execute+0x6c>)
 80039f0:	b003      	add	sp, #12
 80039f2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80039f6:	f7fc bedb 	b.w	80007b0 <test_println>
 80039fa:	bf00      	nop
 80039fc:	20000930 	.word	0x20000930
 8003a00:	08005a51 	.word	0x08005a51
 8003a04:	20000b38 	.word	0x20000b38
 8003a08:	08005ac0 	.word	0x08005ac0
 8003a0c:	08005bc0 	.word	0x08005bc0
 8003a10:	200011c8 	.word	0x200011c8
	...

08003a20 <test_wait_threads>:
 8003a20:	b570      	push	{r4, r5, r6, lr}
 8003a22:	2600      	movs	r6, #0
 8003a24:	4c06      	ldr	r4, [pc, #24]	; (8003a40 <test_wait_threads+0x20>)
 8003a26:	f104 0514 	add.w	r5, r4, #20
 8003a2a:	f854 0b04 	ldr.w	r0, [r4], #4
 8003a2e:	b118      	cbz	r0, 8003a38 <test_wait_threads+0x18>
 8003a30:	f7ff ff96 	bl	8003960 <chThdWait>
 8003a34:	f844 6c04 	str.w	r6, [r4, #-4]
 8003a38:	42ac      	cmp	r4, r5
 8003a3a:	d1f6      	bne.n	8003a2a <test_wait_threads+0xa>
 8003a3c:	bd70      	pop	{r4, r5, r6, pc}
 8003a3e:	bf00      	nop
 8003a40:	200011cc 	.word	0x200011cc
	...

08003a50 <bmk8_execute>:
 8003a50:	2300      	movs	r3, #0
 8003a52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003a56:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8003b28 <bmk8_execute+0xd8>
 8003a5a:	b084      	sub	sp, #16
 8003a5c:	ac04      	add	r4, sp, #16
 8003a5e:	f844 3d04 	str.w	r3, [r4, #-4]!
 8003a62:	f7fe fef5 	bl	8002850 <test_wait_tick>
 8003a66:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003a6a:	4f2a      	ldr	r7, [pc, #168]	; (8003b14 <bmk8_execute+0xc4>)
 8003a6c:	4e2a      	ldr	r6, [pc, #168]	; (8003b18 <bmk8_execute+0xc8>)
 8003a6e:	689a      	ldr	r2, [r3, #8]
 8003a70:	4630      	mov	r0, r6
 8003a72:	463b      	mov	r3, r7
 8003a74:	3a01      	subs	r2, #1
 8003a76:	9400      	str	r4, [sp, #0]
 8003a78:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003a7c:	f7fd ff40 	bl	8001900 <chThdCreateStatic>
 8003a80:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003a84:	4d25      	ldr	r5, [pc, #148]	; (8003b1c <bmk8_execute+0xcc>)
 8003a86:	689a      	ldr	r2, [r3, #8]
 8003a88:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003a8c:	6028      	str	r0, [r5, #0]
 8003a8e:	463b      	mov	r3, r7
 8003a90:	3a01      	subs	r2, #1
 8003a92:	9400      	str	r4, [sp, #0]
 8003a94:	f506 70a4 	add.w	r0, r6, #328	; 0x148
 8003a98:	f7fd ff32 	bl	8001900 <chThdCreateStatic>
 8003a9c:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003aa0:	6068      	str	r0, [r5, #4]
 8003aa2:	689a      	ldr	r2, [r3, #8]
 8003aa4:	f506 7024 	add.w	r0, r6, #656	; 0x290
 8003aa8:	463b      	mov	r3, r7
 8003aaa:	3a01      	subs	r2, #1
 8003aac:	9400      	str	r4, [sp, #0]
 8003aae:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003ab2:	f7fd ff25 	bl	8001900 <chThdCreateStatic>
 8003ab6:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003aba:	60a8      	str	r0, [r5, #8]
 8003abc:	689a      	ldr	r2, [r3, #8]
 8003abe:	f506 7076 	add.w	r0, r6, #984	; 0x3d8
 8003ac2:	463b      	mov	r3, r7
 8003ac4:	3a01      	subs	r2, #1
 8003ac6:	9400      	str	r4, [sp, #0]
 8003ac8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003acc:	f7fd ff18 	bl	8001900 <chThdCreateStatic>
 8003ad0:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8003ad4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003ad8:	689a      	ldr	r2, [r3, #8]
 8003ada:	60e8      	str	r0, [r5, #12]
 8003adc:	463b      	mov	r3, r7
 8003ade:	3a01      	subs	r2, #1
 8003ae0:	9400      	str	r4, [sp, #0]
 8003ae2:	f506 60a4 	add.w	r0, r6, #1312	; 0x520
 8003ae6:	f7fd ff0b 	bl	8001900 <chThdCreateStatic>
 8003aea:	6128      	str	r0, [r5, #16]
 8003aec:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8003af0:	f7fe fdce 	bl	8002690 <chThdSleep>
 8003af4:	f7fc fdac 	bl	8000650 <test_terminate_threads>
 8003af8:	f7ff ff92 	bl	8003a20 <test_wait_threads>
 8003afc:	4808      	ldr	r0, [pc, #32]	; (8003b20 <bmk8_execute+0xd0>)
 8003afe:	f7fc fe77 	bl	80007f0 <test_print>
 8003b02:	9803      	ldr	r0, [sp, #12]
 8003b04:	f7fc fd7c 	bl	8000600 <test_printn>
 8003b08:	4806      	ldr	r0, [pc, #24]	; (8003b24 <bmk8_execute+0xd4>)
 8003b0a:	f7fc fe51 	bl	80007b0 <test_println>
 8003b0e:	b004      	add	sp, #16
 8003b10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003b14:	08001471 	.word	0x08001471
 8003b18:	20000b38 	.word	0x20000b38
 8003b1c:	200011cc 	.word	0x200011cc
 8003b20:	08005ac0 	.word	0x08005ac0
 8003b24:	08005bf0 	.word	0x08005bf0
 8003b28:	20000930 	.word	0x20000930
 8003b2c:	00000000 	.word	0x00000000

08003b30 <bmk7_execute>:
 8003b30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003b34:	2400      	movs	r4, #0
 8003b36:	4d3a      	ldr	r5, [pc, #232]	; (8003c20 <bmk7_execute+0xf0>)
 8003b38:	b082      	sub	sp, #8
 8003b3a:	69aa      	ldr	r2, [r5, #24]
 8003b3c:	4b39      	ldr	r3, [pc, #228]	; (8003c24 <bmk7_execute+0xf4>)
 8003b3e:	6892      	ldr	r2, [r2, #8]
 8003b40:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b44:	3205      	adds	r2, #5
 8003b46:	4838      	ldr	r0, [pc, #224]	; (8003c28 <bmk7_execute+0xf8>)
 8003b48:	9400      	str	r4, [sp, #0]
 8003b4a:	f7fd fed9 	bl	8001900 <chThdCreateStatic>
 8003b4e:	69ab      	ldr	r3, [r5, #24]
 8003b50:	4e36      	ldr	r6, [pc, #216]	; (8003c2c <bmk7_execute+0xfc>)
 8003b52:	689a      	ldr	r2, [r3, #8]
 8003b54:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b58:	6030      	str	r0, [r6, #0]
 8003b5a:	3204      	adds	r2, #4
 8003b5c:	4b31      	ldr	r3, [pc, #196]	; (8003c24 <bmk7_execute+0xf4>)
 8003b5e:	9400      	str	r4, [sp, #0]
 8003b60:	4833      	ldr	r0, [pc, #204]	; (8003c30 <bmk7_execute+0x100>)
 8003b62:	f7fd fecd 	bl	8001900 <chThdCreateStatic>
 8003b66:	69ab      	ldr	r3, [r5, #24]
 8003b68:	6070      	str	r0, [r6, #4]
 8003b6a:	689a      	ldr	r2, [r3, #8]
 8003b6c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b70:	4b2c      	ldr	r3, [pc, #176]	; (8003c24 <bmk7_execute+0xf4>)
 8003b72:	3203      	adds	r2, #3
 8003b74:	9400      	str	r4, [sp, #0]
 8003b76:	482f      	ldr	r0, [pc, #188]	; (8003c34 <bmk7_execute+0x104>)
 8003b78:	f7fd fec2 	bl	8001900 <chThdCreateStatic>
 8003b7c:	69ab      	ldr	r3, [r5, #24]
 8003b7e:	60b0      	str	r0, [r6, #8]
 8003b80:	689a      	ldr	r2, [r3, #8]
 8003b82:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b86:	4b27      	ldr	r3, [pc, #156]	; (8003c24 <bmk7_execute+0xf4>)
 8003b88:	3202      	adds	r2, #2
 8003b8a:	9400      	str	r4, [sp, #0]
 8003b8c:	482a      	ldr	r0, [pc, #168]	; (8003c38 <bmk7_execute+0x108>)
 8003b8e:	f7fd feb7 	bl	8001900 <chThdCreateStatic>
 8003b92:	69ab      	ldr	r3, [r5, #24]
 8003b94:	60f0      	str	r0, [r6, #12]
 8003b96:	689a      	ldr	r2, [r3, #8]
 8003b98:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003b9c:	4b21      	ldr	r3, [pc, #132]	; (8003c24 <bmk7_execute+0xf4>)
 8003b9e:	3201      	adds	r2, #1
 8003ba0:	9400      	str	r4, [sp, #0]
 8003ba2:	4826      	ldr	r0, [pc, #152]	; (8003c3c <bmk7_execute+0x10c>)
 8003ba4:	f7fd feac 	bl	8001900 <chThdCreateStatic>
 8003ba8:	4625      	mov	r5, r4
 8003baa:	6130      	str	r0, [r6, #16]
 8003bac:	f7fe fe50 	bl	8002850 <test_wait_tick>
 8003bb0:	2620      	movs	r6, #32
 8003bb2:	f7fd fadd 	bl	8001170 <test_start_timer.constprop.1>
 8003bb6:	f8df 8098 	ldr.w	r8, [pc, #152]	; 8003c50 <bmk7_execute+0x120>
 8003bba:	4f21      	ldr	r7, [pc, #132]	; (8003c40 <bmk7_execute+0x110>)
 8003bbc:	f386 8811 	msr	BASEPRI, r6
 8003bc0:	2100      	movs	r1, #0
 8003bc2:	4638      	mov	r0, r7
 8003bc4:	f7fd fa3c 	bl	8001040 <chSemResetI>
 8003bc8:	f7fd fc8a 	bl	80014e0 <chSchRescheduleS>
 8003bcc:	f385 8811 	msr	BASEPRI, r5
 8003bd0:	f898 3000 	ldrb.w	r3, [r8]
 8003bd4:	3401      	adds	r4, #1
 8003bd6:	2b00      	cmp	r3, #0
 8003bd8:	d0f0      	beq.n	8003bbc <bmk7_execute+0x8c>
 8003bda:	f7fc fd39 	bl	8000650 <test_terminate_threads>
 8003bde:	f386 8811 	msr	BASEPRI, r6
 8003be2:	2100      	movs	r1, #0
 8003be4:	4816      	ldr	r0, [pc, #88]	; (8003c40 <bmk7_execute+0x110>)
 8003be6:	f7fd fa2b 	bl	8001040 <chSemResetI>
 8003bea:	f7fd fc79 	bl	80014e0 <chSchRescheduleS>
 8003bee:	f385 8811 	msr	BASEPRI, r5
 8003bf2:	f7ff ff15 	bl	8003a20 <test_wait_threads>
 8003bf6:	4813      	ldr	r0, [pc, #76]	; (8003c44 <bmk7_execute+0x114>)
 8003bf8:	f7fc fdfa 	bl	80007f0 <test_print>
 8003bfc:	4620      	mov	r0, r4
 8003bfe:	f7fc fcff 	bl	8000600 <test_printn>
 8003c02:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8003c06:	4810      	ldr	r0, [pc, #64]	; (8003c48 <bmk7_execute+0x118>)
 8003c08:	f7fc fdf2 	bl	80007f0 <test_print>
 8003c0c:	0060      	lsls	r0, r4, #1
 8003c0e:	f7fc fcf7 	bl	8000600 <test_printn>
 8003c12:	480e      	ldr	r0, [pc, #56]	; (8003c4c <bmk7_execute+0x11c>)
 8003c14:	b002      	add	sp, #8
 8003c16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003c1a:	f7fc bdc9 	b.w	80007b0 <test_println>
 8003c1e:	bf00      	nop
 8003c20:	20000930 	.word	0x20000930
 8003c24:	08003791 	.word	0x08003791
 8003c28:	20000b38 	.word	0x20000b38
 8003c2c:	200011cc 	.word	0x200011cc
 8003c30:	20000c80 	.word	0x20000c80
 8003c34:	20000dc8 	.word	0x20000dc8
 8003c38:	20000f10 	.word	0x20000f10
 8003c3c:	20001058 	.word	0x20001058
 8003c40:	20000b28 	.word	0x20000b28
 8003c44:	08005ac0 	.word	0x08005ac0
 8003c48:	08005bd0 	.word	0x08005bd0
 8003c4c:	08005bf0 	.word	0x08005bf0
 8003c50:	200011c8 	.word	0x200011c8
	...

08003c60 <bmk4_execute>:
 8003c60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003c64:	2500      	movs	r5, #0
 8003c66:	4a23      	ldr	r2, [pc, #140]	; (8003cf4 <bmk4_execute+0x94>)
 8003c68:	b082      	sub	sp, #8
 8003c6a:	6992      	ldr	r2, [r2, #24]
 8003c6c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003c70:	6892      	ldr	r2, [r2, #8]
 8003c72:	4b21      	ldr	r3, [pc, #132]	; (8003cf8 <bmk4_execute+0x98>)
 8003c74:	3201      	adds	r2, #1
 8003c76:	4821      	ldr	r0, [pc, #132]	; (8003cfc <bmk4_execute+0x9c>)
 8003c78:	9500      	str	r5, [sp, #0]
 8003c7a:	f7fd fe41 	bl	8001900 <chThdCreateStatic>
 8003c7e:	4b20      	ldr	r3, [pc, #128]	; (8003d00 <bmk4_execute+0xa0>)
 8003c80:	4604      	mov	r4, r0
 8003c82:	6018      	str	r0, [r3, #0]
 8003c84:	462e      	mov	r6, r5
 8003c86:	f7fe fde3 	bl	8002850 <test_wait_tick>
 8003c8a:	2720      	movs	r7, #32
 8003c8c:	f7fd fa70 	bl	8001170 <test_start_timer.constprop.1>
 8003c90:	f8df 8078 	ldr.w	r8, [pc, #120]	; 8003d0c <bmk4_execute+0xac>
 8003c94:	f387 8811 	msr	BASEPRI, r7
 8003c98:	2100      	movs	r1, #0
 8003c9a:	4620      	mov	r0, r4
 8003c9c:	f7fd fd50 	bl	8001740 <chSchWakeupS>
 8003ca0:	4620      	mov	r0, r4
 8003ca2:	2100      	movs	r1, #0
 8003ca4:	f7fd fd4c 	bl	8001740 <chSchWakeupS>
 8003ca8:	4620      	mov	r0, r4
 8003caa:	2100      	movs	r1, #0
 8003cac:	f7fd fd48 	bl	8001740 <chSchWakeupS>
 8003cb0:	4620      	mov	r0, r4
 8003cb2:	2100      	movs	r1, #0
 8003cb4:	f7fd fd44 	bl	8001740 <chSchWakeupS>
 8003cb8:	f386 8811 	msr	BASEPRI, r6
 8003cbc:	f898 3000 	ldrb.w	r3, [r8]
 8003cc0:	3504      	adds	r5, #4
 8003cc2:	2b00      	cmp	r3, #0
 8003cc4:	d0e6      	beq.n	8003c94 <bmk4_execute+0x34>
 8003cc6:	f387 8811 	msr	BASEPRI, r7
 8003cca:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003cce:	4620      	mov	r0, r4
 8003cd0:	f7fd fd36 	bl	8001740 <chSchWakeupS>
 8003cd4:	f386 8811 	msr	BASEPRI, r6
 8003cd8:	f7ff fea2 	bl	8003a20 <test_wait_threads>
 8003cdc:	4809      	ldr	r0, [pc, #36]	; (8003d04 <bmk4_execute+0xa4>)
 8003cde:	f7fc fd87 	bl	80007f0 <test_print>
 8003ce2:	0068      	lsls	r0, r5, #1
 8003ce4:	f7fc fc8c 	bl	8000600 <test_printn>
 8003ce8:	4807      	ldr	r0, [pc, #28]	; (8003d08 <bmk4_execute+0xa8>)
 8003cea:	b002      	add	sp, #8
 8003cec:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003cf0:	f7fc bd5e 	b.w	80007b0 <test_println>
 8003cf4:	20000930 	.word	0x20000930
 8003cf8:	08001b11 	.word	0x08001b11
 8003cfc:	20000b38 	.word	0x20000b38
 8003d00:	200011cc 	.word	0x200011cc
 8003d04:	08005ac0 	.word	0x08005ac0
 8003d08:	08005bf0 	.word	0x08005bf0
 8003d0c:	200011c8 	.word	0x200011c8

08003d10 <bmk3_execute>:
 8003d10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d14:	2600      	movs	r6, #0
 8003d16:	4f2c      	ldr	r7, [pc, #176]	; (8003dc8 <bmk3_execute+0xb8>)
 8003d18:	4d2c      	ldr	r5, [pc, #176]	; (8003dcc <bmk3_execute+0xbc>)
 8003d1a:	69bb      	ldr	r3, [r7, #24]
 8003d1c:	b082      	sub	sp, #8
 8003d1e:	689a      	ldr	r2, [r3, #8]
 8003d20:	4628      	mov	r0, r5
 8003d22:	4b2b      	ldr	r3, [pc, #172]	; (8003dd0 <bmk3_execute+0xc0>)
 8003d24:	3201      	adds	r2, #1
 8003d26:	9600      	str	r6, [sp, #0]
 8003d28:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d2c:	f7fd fde8 	bl	8001900 <chThdCreateStatic>
 8003d30:	69bb      	ldr	r3, [r7, #24]
 8003d32:	4c28      	ldr	r4, [pc, #160]	; (8003dd4 <bmk3_execute+0xc4>)
 8003d34:	689a      	ldr	r2, [r3, #8]
 8003d36:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 8003de4 <bmk3_execute+0xd4>
 8003d3a:	6020      	str	r0, [r4, #0]
 8003d3c:	4643      	mov	r3, r8
 8003d3e:	3a02      	subs	r2, #2
 8003d40:	9600      	str	r6, [sp, #0]
 8003d42:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8003d46:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d4a:	f7fd fdd9 	bl	8001900 <chThdCreateStatic>
 8003d4e:	69bb      	ldr	r3, [r7, #24]
 8003d50:	6060      	str	r0, [r4, #4]
 8003d52:	689a      	ldr	r2, [r3, #8]
 8003d54:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8003d58:	4643      	mov	r3, r8
 8003d5a:	3a03      	subs	r2, #3
 8003d5c:	9600      	str	r6, [sp, #0]
 8003d5e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d62:	f7fd fdcd 	bl	8001900 <chThdCreateStatic>
 8003d66:	69bb      	ldr	r3, [r7, #24]
 8003d68:	60a0      	str	r0, [r4, #8]
 8003d6a:	689a      	ldr	r2, [r3, #8]
 8003d6c:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8003d70:	4643      	mov	r3, r8
 8003d72:	3a04      	subs	r2, #4
 8003d74:	9600      	str	r6, [sp, #0]
 8003d76:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d7a:	f7fd fdc1 	bl	8001900 <chThdCreateStatic>
 8003d7e:	69bb      	ldr	r3, [r7, #24]
 8003d80:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003d84:	689a      	ldr	r2, [r3, #8]
 8003d86:	60e0      	str	r0, [r4, #12]
 8003d88:	4643      	mov	r3, r8
 8003d8a:	3a05      	subs	r2, #5
 8003d8c:	9600      	str	r6, [sp, #0]
 8003d8e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8003d92:	f7fd fdb5 	bl	8001900 <chThdCreateStatic>
 8003d96:	6120      	str	r0, [r4, #16]
 8003d98:	6820      	ldr	r0, [r4, #0]
 8003d9a:	f7fe ff49 	bl	8002c30 <msg_loop_test>
 8003d9e:	4604      	mov	r4, r0
 8003da0:	f7ff fe3e 	bl	8003a20 <test_wait_threads>
 8003da4:	480c      	ldr	r0, [pc, #48]	; (8003dd8 <bmk3_execute+0xc8>)
 8003da6:	f7fc fd23 	bl	80007f0 <test_print>
 8003daa:	4620      	mov	r0, r4
 8003dac:	f7fc fc28 	bl	8000600 <test_printn>
 8003db0:	480a      	ldr	r0, [pc, #40]	; (8003ddc <bmk3_execute+0xcc>)
 8003db2:	f7fc fd1d 	bl	80007f0 <test_print>
 8003db6:	0060      	lsls	r0, r4, #1
 8003db8:	f7fc fc22 	bl	8000600 <test_printn>
 8003dbc:	4808      	ldr	r0, [pc, #32]	; (8003de0 <bmk3_execute+0xd0>)
 8003dbe:	b002      	add	sp, #8
 8003dc0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003dc4:	f7fc bcf4 	b.w	80007b0 <test_println>
 8003dc8:	20000930 	.word	0x20000930
 8003dcc:	20000b38 	.word	0x20000b38
 8003dd0:	08002b31 	.word	0x08002b31
 8003dd4:	200011cc 	.word	0x200011cc
 8003dd8:	08005ac0 	.word	0x08005ac0
 8003ddc:	08005bb0 	.word	0x08005bb0
 8003de0:	08005bf0 	.word	0x08005bf0
 8003de4:	08005a51 	.word	0x08005a51
	...

08003df0 <bmk2_execute>:
 8003df0:	b510      	push	{r4, lr}
 8003df2:	2400      	movs	r4, #0
 8003df4:	4a12      	ldr	r2, [pc, #72]	; (8003e40 <bmk2_execute+0x50>)
 8003df6:	b082      	sub	sp, #8
 8003df8:	6992      	ldr	r2, [r2, #24]
 8003dfa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003dfe:	6892      	ldr	r2, [r2, #8]
 8003e00:	4b10      	ldr	r3, [pc, #64]	; (8003e44 <bmk2_execute+0x54>)
 8003e02:	3201      	adds	r2, #1
 8003e04:	9400      	str	r4, [sp, #0]
 8003e06:	4810      	ldr	r0, [pc, #64]	; (8003e48 <bmk2_execute+0x58>)
 8003e08:	f7fd fd7a 	bl	8001900 <chThdCreateStatic>
 8003e0c:	4b0f      	ldr	r3, [pc, #60]	; (8003e4c <bmk2_execute+0x5c>)
 8003e0e:	6018      	str	r0, [r3, #0]
 8003e10:	f7fe ff0e 	bl	8002c30 <msg_loop_test>
 8003e14:	4604      	mov	r4, r0
 8003e16:	f7ff fe03 	bl	8003a20 <test_wait_threads>
 8003e1a:	480d      	ldr	r0, [pc, #52]	; (8003e50 <bmk2_execute+0x60>)
 8003e1c:	f7fc fce8 	bl	80007f0 <test_print>
 8003e20:	4620      	mov	r0, r4
 8003e22:	f7fc fbed 	bl	8000600 <test_printn>
 8003e26:	480b      	ldr	r0, [pc, #44]	; (8003e54 <bmk2_execute+0x64>)
 8003e28:	f7fc fce2 	bl	80007f0 <test_print>
 8003e2c:	0060      	lsls	r0, r4, #1
 8003e2e:	f7fc fbe7 	bl	8000600 <test_printn>
 8003e32:	4809      	ldr	r0, [pc, #36]	; (8003e58 <bmk2_execute+0x68>)
 8003e34:	b002      	add	sp, #8
 8003e36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e3a:	f7fc bcb9 	b.w	80007b0 <test_println>
 8003e3e:	bf00      	nop
 8003e40:	20000930 	.word	0x20000930
 8003e44:	08002b31 	.word	0x08002b31
 8003e48:	20000b38 	.word	0x20000b38
 8003e4c:	200011cc 	.word	0x200011cc
 8003e50:	08005ac0 	.word	0x08005ac0
 8003e54:	08005bb0 	.word	0x08005bb0
 8003e58:	08005bf0 	.word	0x08005bf0
 8003e5c:	00000000 	.word	0x00000000

08003e60 <bmk1_execute>:
 8003e60:	b510      	push	{r4, lr}
 8003e62:	2400      	movs	r4, #0
 8003e64:	4a12      	ldr	r2, [pc, #72]	; (8003eb0 <bmk1_execute+0x50>)
 8003e66:	b082      	sub	sp, #8
 8003e68:	6992      	ldr	r2, [r2, #24]
 8003e6a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003e6e:	6892      	ldr	r2, [r2, #8]
 8003e70:	4b10      	ldr	r3, [pc, #64]	; (8003eb4 <bmk1_execute+0x54>)
 8003e72:	3a01      	subs	r2, #1
 8003e74:	9400      	str	r4, [sp, #0]
 8003e76:	4810      	ldr	r0, [pc, #64]	; (8003eb8 <bmk1_execute+0x58>)
 8003e78:	f7fd fd42 	bl	8001900 <chThdCreateStatic>
 8003e7c:	4b0f      	ldr	r3, [pc, #60]	; (8003ebc <bmk1_execute+0x5c>)
 8003e7e:	6018      	str	r0, [r3, #0]
 8003e80:	f7fe fed6 	bl	8002c30 <msg_loop_test>
 8003e84:	4604      	mov	r4, r0
 8003e86:	f7ff fdcb 	bl	8003a20 <test_wait_threads>
 8003e8a:	480d      	ldr	r0, [pc, #52]	; (8003ec0 <bmk1_execute+0x60>)
 8003e8c:	f7fc fcb0 	bl	80007f0 <test_print>
 8003e90:	4620      	mov	r0, r4
 8003e92:	f7fc fbb5 	bl	8000600 <test_printn>
 8003e96:	480b      	ldr	r0, [pc, #44]	; (8003ec4 <bmk1_execute+0x64>)
 8003e98:	f7fc fcaa 	bl	80007f0 <test_print>
 8003e9c:	0060      	lsls	r0, r4, #1
 8003e9e:	f7fc fbaf 	bl	8000600 <test_printn>
 8003ea2:	4809      	ldr	r0, [pc, #36]	; (8003ec8 <bmk1_execute+0x68>)
 8003ea4:	b002      	add	sp, #8
 8003ea6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003eaa:	f7fc bc81 	b.w	80007b0 <test_println>
 8003eae:	bf00      	nop
 8003eb0:	20000930 	.word	0x20000930
 8003eb4:	08002b31 	.word	0x08002b31
 8003eb8:	20000b38 	.word	0x20000b38
 8003ebc:	200011cc 	.word	0x200011cc
 8003ec0:	08005ac0 	.word	0x08005ac0
 8003ec4:	08005bb0 	.word	0x08005bb0
 8003ec8:	08005bf0 	.word	0x08005bf0
 8003ecc:	00000000 	.word	0x00000000

08003ed0 <queues2_execute>:
 8003ed0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003ed4:	2320      	movs	r3, #32
 8003ed6:	b083      	sub	sp, #12
 8003ed8:	f383 8811 	msr	BASEPRI, r3
 8003edc:	4d8a      	ldr	r5, [pc, #552]	; (8004108 <queues2_execute+0x238>)
 8003ede:	e9d5 3205 	ldrd	r3, r2, [r5, #20]
 8003ee2:	429a      	cmp	r2, r3
 8003ee4:	d041      	beq.n	8003f6a <queues2_execute+0x9a>
 8003ee6:	2100      	movs	r1, #0
 8003ee8:	2001      	movs	r0, #1
 8003eea:	f7fc fc11 	bl	8000710 <_test_assert>
 8003eee:	bbb0      	cbnz	r0, 8003f5e <queues2_execute+0x8e>
 8003ef0:	f380 8811 	msr	BASEPRI, r0
 8003ef4:	2441      	movs	r4, #65	; 0x41
 8003ef6:	4e84      	ldr	r6, [pc, #528]	; (8004108 <queues2_execute+0x238>)
 8003ef8:	4621      	mov	r1, r4
 8003efa:	3401      	adds	r4, #1
 8003efc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003f00:	4630      	mov	r0, r6
 8003f02:	b2e4      	uxtb	r4, r4
 8003f04:	f7fe faf4 	bl	80024f0 <chOQPutTimeout>
 8003f08:	2c45      	cmp	r4, #69	; 0x45
 8003f0a:	d1f5      	bne.n	8003ef8 <queues2_execute+0x28>
 8003f0c:	2620      	movs	r6, #32
 8003f0e:	f386 8811 	msr	BASEPRI, r6
 8003f12:	68a9      	ldr	r1, [r5, #8]
 8003f14:	2002      	movs	r0, #2
 8003f16:	fab1 f181 	clz	r1, r1
 8003f1a:	0949      	lsrs	r1, r1, #5
 8003f1c:	f7fc fbf8 	bl	8000710 <_test_assert>
 8003f20:	4607      	mov	r7, r0
 8003f22:	b9e0      	cbnz	r0, 8003f5e <queues2_execute+0x8e>
 8003f24:	f380 8811 	msr	BASEPRI, r0
 8003f28:	2404      	movs	r4, #4
 8003f2a:	4681      	mov	r9, r0
 8003f2c:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8004108 <queues2_execute+0x238>
 8003f30:	f386 8811 	msr	BASEPRI, r6
 8003f34:	4640      	mov	r0, r8
 8003f36:	f7fc fedb 	bl	8000cf0 <chOQGetI>
 8003f3a:	f389 8811 	msr	BASEPRI, r9
 8003f3e:	b2c0      	uxtb	r0, r0
 8003f40:	f7fc fbfe 	bl	8000740 <test_emit_token>
 8003f44:	3c01      	subs	r4, #1
 8003f46:	d1f3      	bne.n	8003f30 <queues2_execute+0x60>
 8003f48:	f386 8811 	msr	BASEPRI, r6
 8003f4c:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 8003f50:	429a      	cmp	r2, r3
 8003f52:	d029      	beq.n	8003fa8 <queues2_execute+0xd8>
 8003f54:	4639      	mov	r1, r7
 8003f56:	2003      	movs	r0, #3
 8003f58:	f7fc fbda 	bl	8000710 <_test_assert>
 8003f5c:	b150      	cbz	r0, 8003f74 <queues2_execute+0xa4>
 8003f5e:	2300      	movs	r3, #0
 8003f60:	f383 8811 	msr	BASEPRI, r3
 8003f64:	b003      	add	sp, #12
 8003f66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003f6a:	68a9      	ldr	r1, [r5, #8]
 8003f6c:	3100      	adds	r1, #0
 8003f6e:	bf18      	it	ne
 8003f70:	2101      	movne	r1, #1
 8003f72:	e7b9      	b.n	8003ee8 <queues2_execute+0x18>
 8003f74:	f380 8811 	msr	BASEPRI, r0
 8003f78:	4964      	ldr	r1, [pc, #400]	; (800410c <queues2_execute+0x23c>)
 8003f7a:	2004      	movs	r0, #4
 8003f7c:	f7fc fba0 	bl	80006c0 <_test_assert_sequence>
 8003f80:	4604      	mov	r4, r0
 8003f82:	2800      	cmp	r0, #0
 8003f84:	d1ee      	bne.n	8003f64 <queues2_execute+0x94>
 8003f86:	2620      	movs	r6, #32
 8003f88:	f386 8811 	msr	BASEPRI, r6
 8003f8c:	485e      	ldr	r0, [pc, #376]	; (8004108 <queues2_execute+0x238>)
 8003f8e:	f7fc feaf 	bl	8000cf0 <chOQGetI>
 8003f92:	3003      	adds	r0, #3
 8003f94:	bf14      	ite	ne
 8003f96:	2100      	movne	r1, #0
 8003f98:	2101      	moveq	r1, #1
 8003f9a:	2005      	movs	r0, #5
 8003f9c:	f7fc fbb8 	bl	8000710 <_test_assert>
 8003fa0:	b138      	cbz	r0, 8003fb2 <queues2_execute+0xe2>
 8003fa2:	f384 8811 	msr	BASEPRI, r4
 8003fa6:	e7dd      	b.n	8003f64 <queues2_execute+0x94>
 8003fa8:	68af      	ldr	r7, [r5, #8]
 8003faa:	3700      	adds	r7, #0
 8003fac:	bf18      	it	ne
 8003fae:	2701      	movne	r7, #1
 8003fb0:	e7d0      	b.n	8003f54 <queues2_execute+0x84>
 8003fb2:	f380 8811 	msr	BASEPRI, r0
 8003fb6:	2208      	movs	r2, #8
 8003fb8:	4603      	mov	r3, r0
 8003fba:	4955      	ldr	r1, [pc, #340]	; (8004110 <queues2_execute+0x240>)
 8003fbc:	4852      	ldr	r0, [pc, #328]	; (8004108 <queues2_execute+0x238>)
 8003fbe:	f7fe fa3f 	bl	8002440 <chOQWriteTimeout>
 8003fc2:	f1a0 0104 	sub.w	r1, r0, #4
 8003fc6:	fab1 f181 	clz	r1, r1
 8003fca:	2006      	movs	r0, #6
 8003fcc:	0949      	lsrs	r1, r1, #5
 8003fce:	f7fc fb9f 	bl	8000710 <_test_assert>
 8003fd2:	4604      	mov	r4, r0
 8003fd4:	2800      	cmp	r0, #0
 8003fd6:	d1c5      	bne.n	8003f64 <queues2_execute+0x94>
 8003fd8:	f386 8811 	msr	BASEPRI, r6
 8003fdc:	68a9      	ldr	r1, [r5, #8]
 8003fde:	2007      	movs	r0, #7
 8003fe0:	fab1 f181 	clz	r1, r1
 8003fe4:	0949      	lsrs	r1, r1, #5
 8003fe6:	f7fc fb93 	bl	8000710 <_test_assert>
 8003fea:	4607      	mov	r7, r0
 8003fec:	2800      	cmp	r0, #0
 8003fee:	d1d8      	bne.n	8003fa2 <queues2_execute+0xd2>
 8003ff0:	f380 8811 	msr	BASEPRI, r0
 8003ff4:	4a47      	ldr	r2, [pc, #284]	; (8004114 <queues2_execute+0x244>)
 8003ff6:	4b48      	ldr	r3, [pc, #288]	; (8004118 <queues2_execute+0x248>)
 8003ff8:	6992      	ldr	r2, [r2, #24]
 8003ffa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8003ffe:	6892      	ldr	r2, [r2, #8]
 8004000:	4846      	ldr	r0, [pc, #280]	; (800411c <queues2_execute+0x24c>)
 8004002:	3201      	adds	r2, #1
 8004004:	9700      	str	r7, [sp, #0]
 8004006:	f7fd fc7b 	bl	8001900 <chThdCreateStatic>
 800400a:	4b45      	ldr	r3, [pc, #276]	; (8004120 <queues2_execute+0x250>)
 800400c:	6018      	str	r0, [r3, #0]
 800400e:	f386 8811 	msr	BASEPRI, r6
 8004012:	68a9      	ldr	r1, [r5, #8]
 8004014:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 8004018:	1a9b      	subs	r3, r3, r2
 800401a:	1a59      	subs	r1, r3, r1
 800401c:	f1a1 0104 	sub.w	r1, r1, #4
 8004020:	fab1 f181 	clz	r1, r1
 8004024:	2008      	movs	r0, #8
 8004026:	0949      	lsrs	r1, r1, #5
 8004028:	f7fc fb72 	bl	8000710 <_test_assert>
 800402c:	b110      	cbz	r0, 8004034 <queues2_execute+0x164>
 800402e:	f387 8811 	msr	BASEPRI, r7
 8004032:	e797      	b.n	8003f64 <queues2_execute+0x94>
 8004034:	f380 8811 	msr	BASEPRI, r0
 8004038:	f7ff fcf2 	bl	8003a20 <test_wait_threads>
 800403c:	f386 8811 	msr	BASEPRI, r6
 8004040:	e9d5 1203 	ldrd	r1, r2, [r5, #12]
 8004044:	682b      	ldr	r3, [r5, #0]
 8004046:	1a52      	subs	r2, r2, r1
 8004048:	42ab      	cmp	r3, r5
 800404a:	e9c5 1105 	strd	r1, r1, [r5, #20]
 800404e:	60aa      	str	r2, [r5, #8]
 8004050:	d00b      	beq.n	800406a <queues2_execute+0x19a>
 8004052:	f06f 0401 	mvn.w	r4, #1
 8004056:	681a      	ldr	r2, [r3, #0]
 8004058:	4618      	mov	r0, r3
 800405a:	6055      	str	r5, [r2, #4]
 800405c:	621c      	str	r4, [r3, #32]
 800405e:	602a      	str	r2, [r5, #0]
 8004060:	f7fc fde6 	bl	8000c30 <chSchReadyI>
 8004064:	682b      	ldr	r3, [r5, #0]
 8004066:	42ab      	cmp	r3, r5
 8004068:	d1f5      	bne.n	8004056 <queues2_execute+0x186>
 800406a:	2400      	movs	r4, #0
 800406c:	f384 8811 	msr	BASEPRI, r4
 8004070:	2620      	movs	r6, #32
 8004072:	f386 8811 	msr	BASEPRI, r6
 8004076:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
 800407a:	68a9      	ldr	r1, [r5, #8]
 800407c:	1a9b      	subs	r3, r3, r2
 800407e:	1a5f      	subs	r7, r3, r1
 8004080:	4279      	negs	r1, r7
 8004082:	4179      	adcs	r1, r7
 8004084:	2009      	movs	r0, #9
 8004086:	f7fc fb43 	bl	8000710 <_test_assert>
 800408a:	4603      	mov	r3, r0
 800408c:	2800      	cmp	r0, #0
 800408e:	d188      	bne.n	8003fa2 <queues2_execute+0xd2>
 8004090:	f380 8811 	msr	BASEPRI, r0
 8004094:	2202      	movs	r2, #2
 8004096:	491e      	ldr	r1, [pc, #120]	; (8004110 <queues2_execute+0x240>)
 8004098:	481b      	ldr	r0, [pc, #108]	; (8004108 <queues2_execute+0x238>)
 800409a:	f7fe f9d1 	bl	8002440 <chOQWriteTimeout>
 800409e:	3802      	subs	r0, #2
 80040a0:	4241      	negs	r1, r0
 80040a2:	4141      	adcs	r1, r0
 80040a4:	200a      	movs	r0, #10
 80040a6:	f7fc fb33 	bl	8000710 <_test_assert>
 80040aa:	4603      	mov	r3, r0
 80040ac:	2800      	cmp	r0, #0
 80040ae:	f47f af59 	bne.w	8003f64 <queues2_execute+0x94>
 80040b2:	2202      	movs	r2, #2
 80040b4:	4916      	ldr	r1, [pc, #88]	; (8004110 <queues2_execute+0x240>)
 80040b6:	4814      	ldr	r0, [pc, #80]	; (8004108 <queues2_execute+0x238>)
 80040b8:	f7fe f9c2 	bl	8002440 <chOQWriteTimeout>
 80040bc:	1e82      	subs	r2, r0, #2
 80040be:	4251      	negs	r1, r2
 80040c0:	4151      	adcs	r1, r2
 80040c2:	200b      	movs	r0, #11
 80040c4:	f7fc fb24 	bl	8000710 <_test_assert>
 80040c8:	4604      	mov	r4, r0
 80040ca:	2800      	cmp	r0, #0
 80040cc:	f47f af4a 	bne.w	8003f64 <queues2_execute+0x94>
 80040d0:	f386 8811 	msr	BASEPRI, r6
 80040d4:	68a9      	ldr	r1, [r5, #8]
 80040d6:	200c      	movs	r0, #12
 80040d8:	fab1 f181 	clz	r1, r1
 80040dc:	0949      	lsrs	r1, r1, #5
 80040de:	f7fc fb17 	bl	8000710 <_test_assert>
 80040e2:	4601      	mov	r1, r0
 80040e4:	2800      	cmp	r0, #0
 80040e6:	f47f af5c 	bne.w	8003fa2 <queues2_execute+0xd2>
 80040ea:	f380 8811 	msr	BASEPRI, r0
 80040ee:	220a      	movs	r2, #10
 80040f0:	4805      	ldr	r0, [pc, #20]	; (8004108 <queues2_execute+0x238>)
 80040f2:	f7fe f9fd 	bl	80024f0 <chOQPutTimeout>
 80040f6:	1c43      	adds	r3, r0, #1
 80040f8:	200d      	movs	r0, #13
 80040fa:	4259      	negs	r1, r3
 80040fc:	4159      	adcs	r1, r3
 80040fe:	b003      	add	sp, #12
 8004100:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004104:	f7fc bb04 	b.w	8000710 <_test_assert>
 8004108:	20000888 	.word	0x20000888
 800410c:	08006010 	.word	0x08006010
 8004110:	20000c80 	.word	0x20000c80
 8004114:	20000930 	.word	0x20000930
 8004118:	08002541 	.word	0x08002541
 800411c:	20000b38 	.word	0x20000b38
 8004120:	200011cc 	.word	0x200011cc
	...

08004130 <queues1_execute>:
 8004130:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004132:	2620      	movs	r6, #32
 8004134:	b083      	sub	sp, #12
 8004136:	f386 8811 	msr	BASEPRI, r6
 800413a:	4c9f      	ldr	r4, [pc, #636]	; (80043b8 <queues1_execute+0x288>)
 800413c:	2001      	movs	r0, #1
 800413e:	68a1      	ldr	r1, [r4, #8]
 8004140:	fab1 f181 	clz	r1, r1
 8004144:	0949      	lsrs	r1, r1, #5
 8004146:	f7fc fae3 	bl	8000710 <_test_assert>
 800414a:	bb10      	cbnz	r0, 8004192 <queues1_execute+0x62>
 800414c:	4605      	mov	r5, r0
 800414e:	f380 8811 	msr	BASEPRI, r0
 8004152:	f386 8811 	msr	BASEPRI, r6
 8004156:	2141      	movs	r1, #65	; 0x41
 8004158:	4620      	mov	r0, r4
 800415a:	f7fc fd99 	bl	8000c90 <chIQPutI>
 800415e:	4620      	mov	r0, r4
 8004160:	2142      	movs	r1, #66	; 0x42
 8004162:	f7fc fd95 	bl	8000c90 <chIQPutI>
 8004166:	4620      	mov	r0, r4
 8004168:	2143      	movs	r1, #67	; 0x43
 800416a:	f7fc fd91 	bl	8000c90 <chIQPutI>
 800416e:	4620      	mov	r0, r4
 8004170:	2144      	movs	r1, #68	; 0x44
 8004172:	f7fc fd8d 	bl	8000c90 <chIQPutI>
 8004176:	f385 8811 	msr	BASEPRI, r5
 800417a:	f386 8811 	msr	BASEPRI, r6
 800417e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8004182:	429a      	cmp	r2, r3
 8004184:	d038      	beq.n	80041f8 <queues1_execute+0xc8>
 8004186:	4629      	mov	r1, r5
 8004188:	2002      	movs	r0, #2
 800418a:	f7fc fac1 	bl	8000710 <_test_assert>
 800418e:	4605      	mov	r5, r0
 8004190:	b120      	cbz	r0, 800419c <queues1_execute+0x6c>
 8004192:	2300      	movs	r3, #0
 8004194:	f383 8811 	msr	BASEPRI, r3
 8004198:	b003      	add	sp, #12
 800419a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800419c:	f380 8811 	msr	BASEPRI, r0
 80041a0:	2320      	movs	r3, #32
 80041a2:	f383 8811 	msr	BASEPRI, r3
 80041a6:	4884      	ldr	r0, [pc, #528]	; (80043b8 <queues1_execute+0x288>)
 80041a8:	4629      	mov	r1, r5
 80041aa:	f7fc fd71 	bl	8000c90 <chIQPutI>
 80041ae:	3004      	adds	r0, #4
 80041b0:	bf14      	ite	ne
 80041b2:	2100      	movne	r1, #0
 80041b4:	2101      	moveq	r1, #1
 80041b6:	2003      	movs	r0, #3
 80041b8:	f7fc faaa 	bl	8000710 <_test_assert>
 80041bc:	b9c0      	cbnz	r0, 80041f0 <queues1_execute+0xc0>
 80041be:	f380 8811 	msr	BASEPRI, r0
 80041c2:	2504      	movs	r5, #4
 80041c4:	4e7c      	ldr	r6, [pc, #496]	; (80043b8 <queues1_execute+0x288>)
 80041c6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80041ca:	4630      	mov	r0, r6
 80041cc:	f7fe fa20 	bl	8002610 <chIQGetTimeout>
 80041d0:	b2c0      	uxtb	r0, r0
 80041d2:	f7fc fab5 	bl	8000740 <test_emit_token>
 80041d6:	3d01      	subs	r5, #1
 80041d8:	d1f5      	bne.n	80041c6 <queues1_execute+0x96>
 80041da:	2620      	movs	r6, #32
 80041dc:	f386 8811 	msr	BASEPRI, r6
 80041e0:	68a1      	ldr	r1, [r4, #8]
 80041e2:	2004      	movs	r0, #4
 80041e4:	fab1 f181 	clz	r1, r1
 80041e8:	0949      	lsrs	r1, r1, #5
 80041ea:	f7fc fa91 	bl	8000710 <_test_assert>
 80041ee:	b178      	cbz	r0, 8004210 <queues1_execute+0xe0>
 80041f0:	f385 8811 	msr	BASEPRI, r5
 80041f4:	b003      	add	sp, #12
 80041f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80041f8:	68a5      	ldr	r5, [r4, #8]
 80041fa:	2002      	movs	r0, #2
 80041fc:	3500      	adds	r5, #0
 80041fe:	bf18      	it	ne
 8004200:	2501      	movne	r5, #1
 8004202:	4629      	mov	r1, r5
 8004204:	f7fc fa84 	bl	8000710 <_test_assert>
 8004208:	4605      	mov	r5, r0
 800420a:	2800      	cmp	r0, #0
 800420c:	d1c1      	bne.n	8004192 <queues1_execute+0x62>
 800420e:	e7c5      	b.n	800419c <queues1_execute+0x6c>
 8004210:	f385 8811 	msr	BASEPRI, r5
 8004214:	4969      	ldr	r1, [pc, #420]	; (80043bc <queues1_execute+0x28c>)
 8004216:	2005      	movs	r0, #5
 8004218:	f7fc fa52 	bl	80006c0 <_test_assert_sequence>
 800421c:	2800      	cmp	r0, #0
 800421e:	d1bb      	bne.n	8004198 <queues1_execute+0x68>
 8004220:	f386 8811 	msr	BASEPRI, r6
 8004224:	2141      	movs	r1, #65	; 0x41
 8004226:	4864      	ldr	r0, [pc, #400]	; (80043b8 <queues1_execute+0x288>)
 8004228:	f7fc fd32 	bl	8000c90 <chIQPutI>
 800422c:	2142      	movs	r1, #66	; 0x42
 800422e:	4862      	ldr	r0, [pc, #392]	; (80043b8 <queues1_execute+0x288>)
 8004230:	f7fc fd2e 	bl	8000c90 <chIQPutI>
 8004234:	2143      	movs	r1, #67	; 0x43
 8004236:	4860      	ldr	r0, [pc, #384]	; (80043b8 <queues1_execute+0x288>)
 8004238:	f7fc fd2a 	bl	8000c90 <chIQPutI>
 800423c:	2144      	movs	r1, #68	; 0x44
 800423e:	485e      	ldr	r0, [pc, #376]	; (80043b8 <queues1_execute+0x288>)
 8004240:	f7fc fd26 	bl	8000c90 <chIQPutI>
 8004244:	f385 8811 	msr	BASEPRI, r5
 8004248:	495d      	ldr	r1, [pc, #372]	; (80043c0 <queues1_execute+0x290>)
 800424a:	2208      	movs	r2, #8
 800424c:	462b      	mov	r3, r5
 800424e:	485a      	ldr	r0, [pc, #360]	; (80043b8 <queues1_execute+0x288>)
 8004250:	f7fe f98e 	bl	8002570 <chIQReadTimeout>
 8004254:	f1a0 0104 	sub.w	r1, r0, #4
 8004258:	fab1 f181 	clz	r1, r1
 800425c:	2006      	movs	r0, #6
 800425e:	0949      	lsrs	r1, r1, #5
 8004260:	f7fc fa56 	bl	8000710 <_test_assert>
 8004264:	2800      	cmp	r0, #0
 8004266:	d197      	bne.n	8004198 <queues1_execute+0x68>
 8004268:	f386 8811 	msr	BASEPRI, r6
 800426c:	68a1      	ldr	r1, [r4, #8]
 800426e:	2007      	movs	r0, #7
 8004270:	fab1 f181 	clz	r1, r1
 8004274:	0949      	lsrs	r1, r1, #5
 8004276:	f7fc fa4b 	bl	8000710 <_test_assert>
 800427a:	2800      	cmp	r0, #0
 800427c:	d1b8      	bne.n	80041f0 <queues1_execute+0xc0>
 800427e:	f385 8811 	msr	BASEPRI, r5
 8004282:	f386 8811 	msr	BASEPRI, r6
 8004286:	2141      	movs	r1, #65	; 0x41
 8004288:	484b      	ldr	r0, [pc, #300]	; (80043b8 <queues1_execute+0x288>)
 800428a:	f7fc fd01 	bl	8000c90 <chIQPutI>
 800428e:	2142      	movs	r1, #66	; 0x42
 8004290:	4849      	ldr	r0, [pc, #292]	; (80043b8 <queues1_execute+0x288>)
 8004292:	f7fc fcfd 	bl	8000c90 <chIQPutI>
 8004296:	2143      	movs	r1, #67	; 0x43
 8004298:	4847      	ldr	r0, [pc, #284]	; (80043b8 <queues1_execute+0x288>)
 800429a:	f7fc fcf9 	bl	8000c90 <chIQPutI>
 800429e:	2144      	movs	r1, #68	; 0x44
 80042a0:	4845      	ldr	r0, [pc, #276]	; (80043b8 <queues1_execute+0x288>)
 80042a2:	f7fc fcf5 	bl	8000c90 <chIQPutI>
 80042a6:	f385 8811 	msr	BASEPRI, r5
 80042aa:	4945      	ldr	r1, [pc, #276]	; (80043c0 <queues1_execute+0x290>)
 80042ac:	2202      	movs	r2, #2
 80042ae:	462b      	mov	r3, r5
 80042b0:	4841      	ldr	r0, [pc, #260]	; (80043b8 <queues1_execute+0x288>)
 80042b2:	f7fe f95d 	bl	8002570 <chIQReadTimeout>
 80042b6:	f1a0 0102 	sub.w	r1, r0, #2
 80042ba:	fab1 f181 	clz	r1, r1
 80042be:	2008      	movs	r0, #8
 80042c0:	0949      	lsrs	r1, r1, #5
 80042c2:	f7fc fa25 	bl	8000710 <_test_assert>
 80042c6:	2800      	cmp	r0, #0
 80042c8:	f47f af66 	bne.w	8004198 <queues1_execute+0x68>
 80042cc:	493c      	ldr	r1, [pc, #240]	; (80043c0 <queues1_execute+0x290>)
 80042ce:	462b      	mov	r3, r5
 80042d0:	2202      	movs	r2, #2
 80042d2:	4839      	ldr	r0, [pc, #228]	; (80043b8 <queues1_execute+0x288>)
 80042d4:	f7fe f94c 	bl	8002570 <chIQReadTimeout>
 80042d8:	f1a0 0102 	sub.w	r1, r0, #2
 80042dc:	fab1 f181 	clz	r1, r1
 80042e0:	2009      	movs	r0, #9
 80042e2:	0949      	lsrs	r1, r1, #5
 80042e4:	f7fc fa14 	bl	8000710 <_test_assert>
 80042e8:	2800      	cmp	r0, #0
 80042ea:	f47f af55 	bne.w	8004198 <queues1_execute+0x68>
 80042ee:	f386 8811 	msr	BASEPRI, r6
 80042f2:	68a1      	ldr	r1, [r4, #8]
 80042f4:	200a      	movs	r0, #10
 80042f6:	fab1 f181 	clz	r1, r1
 80042fa:	0949      	lsrs	r1, r1, #5
 80042fc:	f7fc fa08 	bl	8000710 <_test_assert>
 8004300:	2800      	cmp	r0, #0
 8004302:	f47f af75 	bne.w	80041f0 <queues1_execute+0xc0>
 8004306:	f385 8811 	msr	BASEPRI, r5
 800430a:	f386 8811 	msr	BASEPRI, r6
 800430e:	482a      	ldr	r0, [pc, #168]	; (80043b8 <queues1_execute+0x288>)
 8004310:	4629      	mov	r1, r5
 8004312:	f7fc fcbd 	bl	8000c90 <chIQPutI>
 8004316:	6823      	ldr	r3, [r4, #0]
 8004318:	68e2      	ldr	r2, [r4, #12]
 800431a:	42a3      	cmp	r3, r4
 800431c:	60a5      	str	r5, [r4, #8]
 800431e:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8004322:	d00b      	beq.n	800433c <queues1_execute+0x20c>
 8004324:	f06f 0501 	mvn.w	r5, #1
 8004328:	681a      	ldr	r2, [r3, #0]
 800432a:	4618      	mov	r0, r3
 800432c:	6054      	str	r4, [r2, #4]
 800432e:	621d      	str	r5, [r3, #32]
 8004330:	6022      	str	r2, [r4, #0]
 8004332:	f7fc fc7d 	bl	8000c30 <chSchReadyI>
 8004336:	6823      	ldr	r3, [r4, #0]
 8004338:	42a3      	cmp	r3, r4
 800433a:	d1f5      	bne.n	8004328 <queues1_execute+0x1f8>
 800433c:	2700      	movs	r7, #0
 800433e:	f387 8811 	msr	BASEPRI, r7
 8004342:	2620      	movs	r6, #32
 8004344:	f386 8811 	msr	BASEPRI, r6
 8004348:	68a1      	ldr	r1, [r4, #8]
 800434a:	200b      	movs	r0, #11
 800434c:	fab1 f181 	clz	r1, r1
 8004350:	0949      	lsrs	r1, r1, #5
 8004352:	f7fc f9dd 	bl	8000710 <_test_assert>
 8004356:	4605      	mov	r5, r0
 8004358:	b110      	cbz	r0, 8004360 <queues1_execute+0x230>
 800435a:	f387 8811 	msr	BASEPRI, r7
 800435e:	e71b      	b.n	8004198 <queues1_execute+0x68>
 8004360:	f380 8811 	msr	BASEPRI, r0
 8004364:	4a17      	ldr	r2, [pc, #92]	; (80043c4 <queues1_execute+0x294>)
 8004366:	4b18      	ldr	r3, [pc, #96]	; (80043c8 <queues1_execute+0x298>)
 8004368:	6992      	ldr	r2, [r2, #24]
 800436a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800436e:	6892      	ldr	r2, [r2, #8]
 8004370:	4816      	ldr	r0, [pc, #88]	; (80043cc <queues1_execute+0x29c>)
 8004372:	3201      	adds	r2, #1
 8004374:	9500      	str	r5, [sp, #0]
 8004376:	f7fd fac3 	bl	8001900 <chThdCreateStatic>
 800437a:	4b15      	ldr	r3, [pc, #84]	; (80043d0 <queues1_execute+0x2a0>)
 800437c:	6018      	str	r0, [r3, #0]
 800437e:	f386 8811 	msr	BASEPRI, r6
 8004382:	68a1      	ldr	r1, [r4, #8]
 8004384:	200c      	movs	r0, #12
 8004386:	fab1 f181 	clz	r1, r1
 800438a:	0949      	lsrs	r1, r1, #5
 800438c:	f7fc f9c0 	bl	8000710 <_test_assert>
 8004390:	2800      	cmp	r0, #0
 8004392:	f47f af2d 	bne.w	80041f0 <queues1_execute+0xc0>
 8004396:	f380 8811 	msr	BASEPRI, r0
 800439a:	f7ff fb41 	bl	8003a20 <test_wait_threads>
 800439e:	210a      	movs	r1, #10
 80043a0:	4805      	ldr	r0, [pc, #20]	; (80043b8 <queues1_execute+0x288>)
 80043a2:	f7fe f935 	bl	8002610 <chIQGetTimeout>
 80043a6:	1c43      	adds	r3, r0, #1
 80043a8:	200d      	movs	r0, #13
 80043aa:	4259      	negs	r1, r3
 80043ac:	4159      	adcs	r1, r3
 80043ae:	b003      	add	sp, #12
 80043b0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80043b4:	f7fc b9ac 	b.w	8000710 <_test_assert>
 80043b8:	20000810 	.word	0x20000810
 80043bc:	08006010 	.word	0x08006010
 80043c0:	20000c80 	.word	0x20000c80
 80043c4:	20000930 	.word	0x20000930
 80043c8:	08002661 	.word	0x08002661
 80043cc:	20000b38 	.word	0x20000b38
 80043d0:	200011cc 	.word	0x200011cc
	...

080043e0 <dyn2_execute>:
 80043e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043e2:	2720      	movs	r7, #32
 80043e4:	2600      	movs	r6, #0
 80043e6:	4a30      	ldr	r2, [pc, #192]	; (80044a8 <dyn2_execute+0xc8>)
 80043e8:	4b30      	ldr	r3, [pc, #192]	; (80044ac <dyn2_execute+0xcc>)
 80043ea:	6991      	ldr	r1, [r2, #24]
 80043ec:	4a30      	ldr	r2, [pc, #192]	; (80044b0 <dyn2_execute+0xd0>)
 80043ee:	688d      	ldr	r5, [r1, #8]
 80043f0:	4930      	ldr	r1, [pc, #192]	; (80044b4 <dyn2_execute+0xd4>)
 80043f2:	f103 040c 	add.w	r4, r3, #12
 80043f6:	f387 8811 	msr	BASEPRI, r7
 80043fa:	6808      	ldr	r0, [r1, #0]
 80043fc:	6010      	str	r0, [r2, #0]
 80043fe:	600a      	str	r2, [r1, #0]
 8004400:	f386 8811 	msr	BASEPRI, r6
 8004404:	429c      	cmp	r4, r3
 8004406:	d002      	beq.n	800440e <dyn2_execute+0x2e>
 8004408:	f853 2b04 	ldr.w	r2, [r3], #4
 800440c:	e7f3      	b.n	80043f6 <dyn2_execute+0x16>
 800440e:	492a      	ldr	r1, [pc, #168]	; (80044b8 <dyn2_execute+0xd8>)
 8004410:	1e68      	subs	r0, r5, #1
 8004412:	f7fd f9c5 	bl	80017a0 <chThdCreateFromMemoryPool.constprop.51>
 8004416:	4c29      	ldr	r4, [pc, #164]	; (80044bc <dyn2_execute+0xdc>)
 8004418:	4929      	ldr	r1, [pc, #164]	; (80044c0 <dyn2_execute+0xe0>)
 800441a:	6020      	str	r0, [r4, #0]
 800441c:	1ea8      	subs	r0, r5, #2
 800441e:	f7fd f9bf 	bl	80017a0 <chThdCreateFromMemoryPool.constprop.51>
 8004422:	4928      	ldr	r1, [pc, #160]	; (80044c4 <dyn2_execute+0xe4>)
 8004424:	6060      	str	r0, [r4, #4]
 8004426:	1ee8      	subs	r0, r5, #3
 8004428:	f7fd f9ba 	bl	80017a0 <chThdCreateFromMemoryPool.constprop.51>
 800442c:	4926      	ldr	r1, [pc, #152]	; (80044c8 <dyn2_execute+0xe8>)
 800442e:	60a0      	str	r0, [r4, #8]
 8004430:	1f28      	subs	r0, r5, #4
 8004432:	f7fd f9b5 	bl	80017a0 <chThdCreateFromMemoryPool.constprop.51>
 8004436:	4925      	ldr	r1, [pc, #148]	; (80044cc <dyn2_execute+0xec>)
 8004438:	60e0      	str	r0, [r4, #12]
 800443a:	1f68      	subs	r0, r5, #5
 800443c:	f7fd f9b0 	bl	80017a0 <chThdCreateFromMemoryPool.constprop.51>
 8004440:	6821      	ldr	r1, [r4, #0]
 8004442:	6120      	str	r0, [r4, #16]
 8004444:	b141      	cbz	r1, 8004458 <dyn2_execute+0x78>
 8004446:	6861      	ldr	r1, [r4, #4]
 8004448:	b131      	cbz	r1, 8004458 <dyn2_execute+0x78>
 800444a:	68a1      	ldr	r1, [r4, #8]
 800444c:	b121      	cbz	r1, 8004458 <dyn2_execute+0x78>
 800444e:	68e1      	ldr	r1, [r4, #12]
 8004450:	b111      	cbz	r1, 8004458 <dyn2_execute+0x78>
 8004452:	fab0 f180 	clz	r1, r0
 8004456:	0949      	lsrs	r1, r1, #5
 8004458:	2001      	movs	r0, #1
 800445a:	f7fc f959 	bl	8000710 <_test_assert>
 800445e:	b100      	cbz	r0, 8004462 <dyn2_execute+0x82>
 8004460:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004462:	f7ff fadd 	bl	8003a20 <test_wait_threads>
 8004466:	491a      	ldr	r1, [pc, #104]	; (80044d0 <dyn2_execute+0xf0>)
 8004468:	2002      	movs	r0, #2
 800446a:	f7fc f929 	bl	80006c0 <_test_assert_sequence>
 800446e:	2800      	cmp	r0, #0
 8004470:	d1f6      	bne.n	8004460 <dyn2_execute+0x80>
 8004472:	2404      	movs	r4, #4
 8004474:	4d0f      	ldr	r5, [pc, #60]	; (80044b4 <dyn2_execute+0xd4>)
 8004476:	4628      	mov	r0, r5
 8004478:	f7fc fa62 	bl	8000940 <chPoolAlloc>
 800447c:	1c01      	adds	r1, r0, #0
 800447e:	bf18      	it	ne
 8004480:	2101      	movne	r1, #1
 8004482:	2003      	movs	r0, #3
 8004484:	f7fc f944 	bl	8000710 <_test_assert>
 8004488:	2800      	cmp	r0, #0
 800448a:	d1e9      	bne.n	8004460 <dyn2_execute+0x80>
 800448c:	3c01      	subs	r4, #1
 800448e:	d1f2      	bne.n	8004476 <dyn2_execute+0x96>
 8004490:	4808      	ldr	r0, [pc, #32]	; (80044b4 <dyn2_execute+0xd4>)
 8004492:	f7fc fa55 	bl	8000940 <chPoolAlloc>
 8004496:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800449a:	fab0 f180 	clz	r1, r0
 800449e:	2004      	movs	r0, #4
 80044a0:	0949      	lsrs	r1, r1, #5
 80044a2:	f7fc b935 	b.w	8000710 <_test_assert>
 80044a6:	bf00      	nop
 80044a8:	20000930 	.word	0x20000930
 80044ac:	080067b4 	.word	0x080067b4
 80044b0:	20000b38 	.word	0x20000b38
 80044b4:	20000b08 	.word	0x20000b08
 80044b8:	08005c50 	.word	0x08005c50
 80044bc:	200011cc 	.word	0x200011cc
 80044c0:	08005c40 	.word	0x08005c40
 80044c4:	08005c44 	.word	0x08005c44
 80044c8:	08005c48 	.word	0x08005c48
 80044cc:	08005e94 	.word	0x08005e94
 80044d0:	08006010 	.word	0x08006010
	...

080044e0 <dyn1_execute>:
 80044e0:	b570      	push	{r4, r5, r6, lr}
 80044e2:	4b2c      	ldr	r3, [pc, #176]	; (8004594 <dyn1_execute+0xb4>)
 80044e4:	b082      	sub	sp, #8
 80044e6:	699b      	ldr	r3, [r3, #24]
 80044e8:	4669      	mov	r1, sp
 80044ea:	689d      	ldr	r5, [r3, #8]
 80044ec:	482a      	ldr	r0, [pc, #168]	; (8004598 <dyn1_execute+0xb8>)
 80044ee:	f7fe fdbf 	bl	8003070 <chHeapStatus>
 80044f2:	492a      	ldr	r1, [pc, #168]	; (800459c <dyn1_execute+0xbc>)
 80044f4:	1e68      	subs	r0, r5, #1
 80044f6:	f7fe fee3 	bl	80032c0 <chThdCreateFromHeap.constprop.52>
 80044fa:	4c29      	ldr	r4, [pc, #164]	; (80045a0 <dyn1_execute+0xc0>)
 80044fc:	4929      	ldr	r1, [pc, #164]	; (80045a4 <dyn1_execute+0xc4>)
 80044fe:	6020      	str	r0, [r4, #0]
 8004500:	1ea8      	subs	r0, r5, #2
 8004502:	f7fe fedd 	bl	80032c0 <chThdCreateFromHeap.constprop.52>
 8004506:	a901      	add	r1, sp, #4
 8004508:	6060      	str	r0, [r4, #4]
 800450a:	4823      	ldr	r0, [pc, #140]	; (8004598 <dyn1_execute+0xb8>)
 800450c:	f7fe fdb0 	bl	8003070 <chHeapStatus>
 8004510:	9901      	ldr	r1, [sp, #4]
 8004512:	4821      	ldr	r0, [pc, #132]	; (8004598 <dyn1_execute+0xb8>)
 8004514:	f7fe fe8c 	bl	8003230 <chHeapAlloc>
 8004518:	4923      	ldr	r1, [pc, #140]	; (80045a8 <dyn1_execute+0xc8>)
 800451a:	4606      	mov	r6, r0
 800451c:	1ee8      	subs	r0, r5, #3
 800451e:	f7fe fecf 	bl	80032c0 <chThdCreateFromHeap.constprop.52>
 8004522:	60a0      	str	r0, [r4, #8]
 8004524:	4630      	mov	r0, r6
 8004526:	f7fe fdcb 	bl	80030c0 <chHeapFree>
 800452a:	6821      	ldr	r1, [r4, #0]
 800452c:	b121      	cbz	r1, 8004538 <dyn1_execute+0x58>
 800452e:	6861      	ldr	r1, [r4, #4]
 8004530:	b111      	cbz	r1, 8004538 <dyn1_execute+0x58>
 8004532:	68a1      	ldr	r1, [r4, #8]
 8004534:	b331      	cbz	r1, 8004584 <dyn1_execute+0xa4>
 8004536:	2100      	movs	r1, #0
 8004538:	2001      	movs	r0, #1
 800453a:	f7fc f8e9 	bl	8000710 <_test_assert>
 800453e:	b108      	cbz	r0, 8004544 <dyn1_execute+0x64>
 8004540:	b002      	add	sp, #8
 8004542:	bd70      	pop	{r4, r5, r6, pc}
 8004544:	f7ff fa6c 	bl	8003a20 <test_wait_threads>
 8004548:	4918      	ldr	r1, [pc, #96]	; (80045ac <dyn1_execute+0xcc>)
 800454a:	2002      	movs	r0, #2
 800454c:	f7fc f8b8 	bl	80006c0 <_test_assert_sequence>
 8004550:	2800      	cmp	r0, #0
 8004552:	d1f5      	bne.n	8004540 <dyn1_execute+0x60>
 8004554:	a901      	add	r1, sp, #4
 8004556:	4810      	ldr	r0, [pc, #64]	; (8004598 <dyn1_execute+0xb8>)
 8004558:	f7fe fd8a 	bl	8003070 <chHeapStatus>
 800455c:	f1a0 0101 	sub.w	r1, r0, #1
 8004560:	fab1 f181 	clz	r1, r1
 8004564:	2003      	movs	r0, #3
 8004566:	0949      	lsrs	r1, r1, #5
 8004568:	f7fc f8d2 	bl	8000710 <_test_assert>
 800456c:	2800      	cmp	r0, #0
 800456e:	d1e7      	bne.n	8004540 <dyn1_execute+0x60>
 8004570:	e9dd 3100 	ldrd	r3, r1, [sp]
 8004574:	1ac9      	subs	r1, r1, r3
 8004576:	fab1 f181 	clz	r1, r1
 800457a:	2004      	movs	r0, #4
 800457c:	0949      	lsrs	r1, r1, #5
 800457e:	f7fc f8c7 	bl	8000710 <_test_assert>
 8004582:	e7dd      	b.n	8004540 <dyn1_execute+0x60>
 8004584:	68e3      	ldr	r3, [r4, #12]
 8004586:	2b00      	cmp	r3, #0
 8004588:	d1d6      	bne.n	8004538 <dyn1_execute+0x58>
 800458a:	6921      	ldr	r1, [r4, #16]
 800458c:	fab1 f181 	clz	r1, r1
 8004590:	0949      	lsrs	r1, r1, #5
 8004592:	e7d1      	b.n	8004538 <dyn1_execute+0x58>
 8004594:	20000930 	.word	0x20000930
 8004598:	20000ab0 	.word	0x20000ab0
 800459c:	08005c50 	.word	0x08005c50
 80045a0:	200011cc 	.word	0x200011cc
 80045a4:	08005c40 	.word	0x08005c40
 80045a8:	08005c44 	.word	0x08005c44
 80045ac:	08005c30 	.word	0x08005c30

080045b0 <evt2_execute>:
 80045b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80045b4:	2620      	movs	r6, #32
 80045b6:	b08f      	sub	sp, #60	; 0x3c
 80045b8:	f386 8811 	msr	BASEPRI, r6
 80045bc:	4cad      	ldr	r4, [pc, #692]	; (8004874 <evt2_execute+0x2c4>)
 80045be:	2100      	movs	r1, #0
 80045c0:	69a2      	ldr	r2, [r4, #24]
 80045c2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80045c4:	f043 0307 	orr.w	r3, r3, #7
 80045c8:	6353      	str	r3, [r2, #52]	; 0x34
 80045ca:	f381 8811 	msr	BASEPRI, r1
 80045ce:	f7fd fa67 	bl	8001aa0 <chEvtWaitOne.constprop.31>
 80045d2:	f1a0 0101 	sub.w	r1, r0, #1
 80045d6:	fab1 f181 	clz	r1, r1
 80045da:	2001      	movs	r0, #1
 80045dc:	0949      	lsrs	r1, r1, #5
 80045de:	f7fc f897 	bl	8000710 <_test_assert>
 80045e2:	b110      	cbz	r0, 80045ea <evt2_execute+0x3a>
 80045e4:	b00f      	add	sp, #60	; 0x3c
 80045e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80045ea:	f7fd fa59 	bl	8001aa0 <chEvtWaitOne.constprop.31>
 80045ee:	f1a0 0102 	sub.w	r1, r0, #2
 80045f2:	fab1 f181 	clz	r1, r1
 80045f6:	2002      	movs	r0, #2
 80045f8:	0949      	lsrs	r1, r1, #5
 80045fa:	f7fc f889 	bl	8000710 <_test_assert>
 80045fe:	2800      	cmp	r0, #0
 8004600:	d1f0      	bne.n	80045e4 <evt2_execute+0x34>
 8004602:	f7fd fa4d 	bl	8001aa0 <chEvtWaitOne.constprop.31>
 8004606:	f1a0 0104 	sub.w	r1, r0, #4
 800460a:	fab1 f181 	clz	r1, r1
 800460e:	2003      	movs	r0, #3
 8004610:	0949      	lsrs	r1, r1, #5
 8004612:	f7fc f87d 	bl	8000710 <_test_assert>
 8004616:	2800      	cmp	r0, #0
 8004618:	d1e4      	bne.n	80045e4 <evt2_execute+0x34>
 800461a:	f7fb fe11 	bl	8000240 <chEvtGetAndClearEvents.constprop.35>
 800461e:	fab0 f180 	clz	r1, r0
 8004622:	2004      	movs	r0, #4
 8004624:	0949      	lsrs	r1, r1, #5
 8004626:	f7fc f873 	bl	8000710 <_test_assert>
 800462a:	4605      	mov	r5, r0
 800462c:	2800      	cmp	r0, #0
 800462e:	d1d9      	bne.n	80045e4 <evt2_execute+0x34>
 8004630:	f7fe f90e 	bl	8002850 <test_wait_tick>
 8004634:	f386 8811 	msr	BASEPRI, r6
 8004638:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 800463c:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
 8004640:	b2bf      	uxth	r7, r7
 8004642:	f385 8811 	msr	BASEPRI, r5
 8004646:	69a0      	ldr	r0, [r4, #24]
 8004648:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800464c:	6882      	ldr	r2, [r0, #8]
 800464e:	4b8a      	ldr	r3, [pc, #552]	; (8004878 <evt2_execute+0x2c8>)
 8004650:	3a01      	subs	r2, #1
 8004652:	9000      	str	r0, [sp, #0]
 8004654:	4889      	ldr	r0, [pc, #548]	; (800487c <evt2_execute+0x2cc>)
 8004656:	f7fd f953 	bl	8001900 <chThdCreateStatic>
 800465a:	4d89      	ldr	r5, [pc, #548]	; (8004880 <evt2_execute+0x2d0>)
 800465c:	6028      	str	r0, [r5, #0]
 800465e:	f7fd fa1f 	bl	8001aa0 <chEvtWaitOne.constprop.31>
 8004662:	f107 0237 	add.w	r2, r7, #55	; 0x37
 8004666:	f107 0132 	add.w	r1, r7, #50	; 0x32
 800466a:	4681      	mov	r9, r0
 800466c:	b292      	uxth	r2, r2
 800466e:	b289      	uxth	r1, r1
 8004670:	2005      	movs	r0, #5
 8004672:	f7fc f805 	bl	8000680 <_test_assert_time_window>
 8004676:	2800      	cmp	r0, #0
 8004678:	d1b4      	bne.n	80045e4 <evt2_execute+0x34>
 800467a:	f1a9 0101 	sub.w	r1, r9, #1
 800467e:	fab1 f181 	clz	r1, r1
 8004682:	2006      	movs	r0, #6
 8004684:	0949      	lsrs	r1, r1, #5
 8004686:	f7fc f843 	bl	8000710 <_test_assert>
 800468a:	2800      	cmp	r0, #0
 800468c:	d1aa      	bne.n	80045e4 <evt2_execute+0x34>
 800468e:	f7fb fdd7 	bl	8000240 <chEvtGetAndClearEvents.constprop.35>
 8004692:	fab0 f180 	clz	r1, r0
 8004696:	2007      	movs	r0, #7
 8004698:	0949      	lsrs	r1, r1, #5
 800469a:	f7fc f839 	bl	8000710 <_test_assert>
 800469e:	4607      	mov	r7, r0
 80046a0:	2800      	cmp	r0, #0
 80046a2:	d19f      	bne.n	80045e4 <evt2_execute+0x34>
 80046a4:	f7ff f9bc 	bl	8003a20 <test_wait_threads>
 80046a8:	f386 8811 	msr	BASEPRI, r6
 80046ac:	69a2      	ldr	r2, [r4, #24]
 80046ae:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80046b0:	f043 0305 	orr.w	r3, r3, #5
 80046b4:	6353      	str	r3, [r2, #52]	; 0x34
 80046b6:	f387 8811 	msr	BASEPRI, r7
 80046ba:	f7fd fa11 	bl	8001ae0 <chEvtWaitAny.constprop.30>
 80046be:	1f47      	subs	r7, r0, #5
 80046c0:	4279      	negs	r1, r7
 80046c2:	4179      	adcs	r1, r7
 80046c4:	2008      	movs	r0, #8
 80046c6:	f7fc f823 	bl	8000710 <_test_assert>
 80046ca:	2800      	cmp	r0, #0
 80046cc:	d18a      	bne.n	80045e4 <evt2_execute+0x34>
 80046ce:	f7fb fdb7 	bl	8000240 <chEvtGetAndClearEvents.constprop.35>
 80046d2:	fab0 f180 	clz	r1, r0
 80046d6:	2009      	movs	r0, #9
 80046d8:	0949      	lsrs	r1, r1, #5
 80046da:	f7fc f819 	bl	8000710 <_test_assert>
 80046de:	4607      	mov	r7, r0
 80046e0:	2800      	cmp	r0, #0
 80046e2:	f47f af7f 	bne.w	80045e4 <evt2_execute+0x34>
 80046e6:	f7fe f8b3 	bl	8002850 <test_wait_tick>
 80046ea:	f386 8811 	msr	BASEPRI, r6
 80046ee:	f8d8 6024 	ldr.w	r6, [r8, #36]	; 0x24
 80046f2:	b2b6      	uxth	r6, r6
 80046f4:	f387 8811 	msr	BASEPRI, r7
 80046f8:	69a0      	ldr	r0, [r4, #24]
 80046fa:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80046fe:	6882      	ldr	r2, [r0, #8]
 8004700:	4b5d      	ldr	r3, [pc, #372]	; (8004878 <evt2_execute+0x2c8>)
 8004702:	3a01      	subs	r2, #1
 8004704:	9000      	str	r0, [sp, #0]
 8004706:	485d      	ldr	r0, [pc, #372]	; (800487c <evt2_execute+0x2cc>)
 8004708:	f7fd f8fa 	bl	8001900 <chThdCreateStatic>
 800470c:	6028      	str	r0, [r5, #0]
 800470e:	f7fd f9e7 	bl	8001ae0 <chEvtWaitAny.constprop.30>
 8004712:	f106 0237 	add.w	r2, r6, #55	; 0x37
 8004716:	f106 0132 	add.w	r1, r6, #50	; 0x32
 800471a:	4607      	mov	r7, r0
 800471c:	b292      	uxth	r2, r2
 800471e:	b289      	uxth	r1, r1
 8004720:	200a      	movs	r0, #10
 8004722:	f7fb ffad 	bl	8000680 <_test_assert_time_window>
 8004726:	2800      	cmp	r0, #0
 8004728:	f47f af5c 	bne.w	80045e4 <evt2_execute+0x34>
 800472c:	1e78      	subs	r0, r7, #1
 800472e:	4241      	negs	r1, r0
 8004730:	4141      	adcs	r1, r0
 8004732:	200b      	movs	r0, #11
 8004734:	f7fb ffec 	bl	8000710 <_test_assert>
 8004738:	2800      	cmp	r0, #0
 800473a:	f47f af53 	bne.w	80045e4 <evt2_execute+0x34>
 800473e:	f7fb fd7f 	bl	8000240 <chEvtGetAndClearEvents.constprop.35>
 8004742:	fab0 f180 	clz	r1, r0
 8004746:	200c      	movs	r0, #12
 8004748:	0949      	lsrs	r1, r1, #5
 800474a:	f7fb ffe1 	bl	8000710 <_test_assert>
 800474e:	4680      	mov	r8, r0
 8004750:	2800      	cmp	r0, #0
 8004752:	f47f af47 	bne.w	80045e4 <evt2_execute+0x34>
 8004756:	f7ff f963 	bl	8003a20 <test_wait_threads>
 800475a:	4f4a      	ldr	r7, [pc, #296]	; (8004884 <evt2_execute+0x2d4>)
 800475c:	4b4a      	ldr	r3, [pc, #296]	; (8004888 <evt2_execute+0x2d8>)
 800475e:	f04f 0b20 	mov.w	fp, #32
 8004762:	603f      	str	r7, [r7, #0]
 8004764:	461e      	mov	r6, r3
 8004766:	601b      	str	r3, [r3, #0]
 8004768:	f38b 8811 	msr	BASEPRI, fp
 800476c:	2301      	movs	r3, #1
 800476e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004772:	6838      	ldr	r0, [r7, #0]
 8004774:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
 8004778:	69a1      	ldr	r1, [r4, #24]
 800477a:	f84a 0d28 	str.w	r0, [sl, #-40]!
 800477e:	f8cd 801c 	str.w	r8, [sp, #28]
 8004782:	e9cd 1305 	strd	r1, r3, [sp, #20]
 8004786:	f8c7 a000 	str.w	sl, [r7]
 800478a:	9208      	str	r2, [sp, #32]
 800478c:	f388 8811 	msr	BASEPRI, r8
 8004790:	f38b 8811 	msr	BASEPRI, fp
 8004794:	2304      	movs	r3, #4
 8004796:	6830      	ldr	r0, [r6, #0]
 8004798:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 800479c:	69a1      	ldr	r1, [r4, #24]
 800479e:	f849 0d14 	str.w	r0, [r9, #-20]!
 80047a2:	e9cd 820c 	strd	r8, r2, [sp, #48]	; 0x30
 80047a6:	e9cd 130a 	strd	r1, r3, [sp, #40]	; 0x28
 80047aa:	f8c6 9000 	str.w	r9, [r6]
 80047ae:	f388 8811 	msr	BASEPRI, r8
 80047b2:	f7fe f84d 	bl	8002850 <test_wait_tick>
 80047b6:	f38b 8811 	msr	BASEPRI, fp
 80047ba:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80047be:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80047c0:	b291      	uxth	r1, r2
 80047c2:	9103      	str	r1, [sp, #12]
 80047c4:	f388 8811 	msr	BASEPRI, r8
 80047c8:	69a2      	ldr	r2, [r4, #24]
 80047ca:	4b30      	ldr	r3, [pc, #192]	; (800488c <evt2_execute+0x2dc>)
 80047cc:	6892      	ldr	r2, [r2, #8]
 80047ce:	f101 0c32 	add.w	ip, r1, #50	; 0x32
 80047d2:	9300      	str	r3, [sp, #0]
 80047d4:	3a01      	subs	r2, #1
 80047d6:	4b2e      	ldr	r3, [pc, #184]	; (8004890 <evt2_execute+0x2e0>)
 80047d8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80047dc:	4827      	ldr	r0, [pc, #156]	; (800487c <evt2_execute+0x2cc>)
 80047de:	fa1f f68c 	uxth.w	r6, ip
 80047e2:	f7fd f88d 	bl	8001900 <chThdCreateStatic>
 80047e6:	69a4      	ldr	r4, [r4, #24]
 80047e8:	6028      	str	r0, [r5, #0]
 80047ea:	f38b 8811 	msr	BASEPRI, fp
 80047ee:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80047f0:	f003 0205 	and.w	r2, r3, #5
 80047f4:	2a05      	cmp	r2, #5
 80047f6:	d005      	beq.n	8004804 <evt2_execute+0x254>
 80047f8:	2305      	movs	r3, #5
 80047fa:	200b      	movs	r0, #11
 80047fc:	6223      	str	r3, [r4, #32]
 80047fe:	f7fd f8b7 	bl	8001970 <chSchGoSleepS>
 8004802:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004804:	f023 0305 	bic.w	r3, r3, #5
 8004808:	6363      	str	r3, [r4, #52]	; 0x34
 800480a:	2300      	movs	r3, #0
 800480c:	f383 8811 	msr	BASEPRI, r3
 8004810:	9a03      	ldr	r2, [sp, #12]
 8004812:	4631      	mov	r1, r6
 8004814:	3237      	adds	r2, #55	; 0x37
 8004816:	b292      	uxth	r2, r2
 8004818:	200d      	movs	r0, #13
 800481a:	f7fb ff31 	bl	8000680 <_test_assert_time_window>
 800481e:	2800      	cmp	r0, #0
 8004820:	f47f aee0 	bne.w	80045e4 <evt2_execute+0x34>
 8004824:	f7fb fd0c 	bl	8000240 <chEvtGetAndClearEvents.constprop.35>
 8004828:	fab0 f180 	clz	r1, r0
 800482c:	200e      	movs	r0, #14
 800482e:	0949      	lsrs	r1, r1, #5
 8004830:	f7fb ff6e 	bl	8000710 <_test_assert>
 8004834:	2800      	cmp	r0, #0
 8004836:	f47f aed5 	bne.w	80045e4 <evt2_execute+0x34>
 800483a:	f7ff f8f1 	bl	8003a20 <test_wait_threads>
 800483e:	4651      	mov	r1, sl
 8004840:	4810      	ldr	r0, [pc, #64]	; (8004884 <evt2_execute+0x2d4>)
 8004842:	f7fc f905 	bl	8000a50 <chEvtUnregister>
 8004846:	4649      	mov	r1, r9
 8004848:	480f      	ldr	r0, [pc, #60]	; (8004888 <evt2_execute+0x2d8>)
 800484a:	f7fc f901 	bl	8000a50 <chEvtUnregister>
 800484e:	6839      	ldr	r1, [r7, #0]
 8004850:	200f      	movs	r0, #15
 8004852:	1bca      	subs	r2, r1, r7
 8004854:	4251      	negs	r1, r2
 8004856:	4151      	adcs	r1, r2
 8004858:	f7fb ff5a 	bl	8000710 <_test_assert>
 800485c:	2800      	cmp	r0, #0
 800485e:	f47f aec1 	bne.w	80045e4 <evt2_execute+0x34>
 8004862:	4b09      	ldr	r3, [pc, #36]	; (8004888 <evt2_execute+0x2d8>)
 8004864:	2010      	movs	r0, #16
 8004866:	6819      	ldr	r1, [r3, #0]
 8004868:	1acb      	subs	r3, r1, r3
 800486a:	4259      	negs	r1, r3
 800486c:	4159      	adcs	r1, r3
 800486e:	f7fb ff4f 	bl	8000710 <_test_assert>
 8004872:	e6b7      	b.n	80045e4 <evt2_execute+0x34>
 8004874:	20000930 	.word	0x20000930
 8004878:	080027b1 	.word	0x080027b1
 800487c:	20000b38 	.word	0x20000b38
 8004880:	200011cc 	.word	0x200011cc
 8004884:	20000808 	.word	0x20000808
 8004888:	2000080c 	.word	0x2000080c
 800488c:	08005c50 	.word	0x08005c50
 8004890:	080027e1 	.word	0x080027e1
	...

080048a0 <mtx8_execute>:
 80048a0:	b570      	push	{r4, r5, r6, lr}
 80048a2:	4b19      	ldr	r3, [pc, #100]	; (8004908 <mtx8_execute+0x68>)
 80048a4:	4d19      	ldr	r5, [pc, #100]	; (800490c <mtx8_execute+0x6c>)
 80048a6:	699a      	ldr	r2, [r3, #24]
 80048a8:	4b19      	ldr	r3, [pc, #100]	; (8004910 <mtx8_execute+0x70>)
 80048aa:	6896      	ldr	r6, [r2, #8]
 80048ac:	b082      	sub	sp, #8
 80048ae:	1c72      	adds	r2, r6, #1
 80048b0:	9300      	str	r3, [sp, #0]
 80048b2:	4628      	mov	r0, r5
 80048b4:	4b17      	ldr	r3, [pc, #92]	; (8004914 <mtx8_execute+0x74>)
 80048b6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80048ba:	f7fd f821 	bl	8001900 <chThdCreateStatic>
 80048be:	4c16      	ldr	r4, [pc, #88]	; (8004918 <mtx8_execute+0x78>)
 80048c0:	4b16      	ldr	r3, [pc, #88]	; (800491c <mtx8_execute+0x7c>)
 80048c2:	6020      	str	r0, [r4, #0]
 80048c4:	1cb2      	adds	r2, r6, #2
 80048c6:	9300      	str	r3, [sp, #0]
 80048c8:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 80048cc:	4b14      	ldr	r3, [pc, #80]	; (8004920 <mtx8_execute+0x80>)
 80048ce:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80048d2:	f7fd f815 	bl	8001900 <chThdCreateStatic>
 80048d6:	4b13      	ldr	r3, [pc, #76]	; (8004924 <mtx8_execute+0x84>)
 80048d8:	1cf2      	adds	r2, r6, #3
 80048da:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80048de:	6060      	str	r0, [r4, #4]
 80048e0:	9300      	str	r3, [sp, #0]
 80048e2:	f505 7024 	add.w	r0, r5, #656	; 0x290
 80048e6:	4b10      	ldr	r3, [pc, #64]	; (8004928 <mtx8_execute+0x88>)
 80048e8:	f7fd f80a 	bl	8001900 <chThdCreateStatic>
 80048ec:	60a0      	str	r0, [r4, #8]
 80048ee:	f7fc ff9f 	bl	8001830 <chCondSignal.constprop.43>
 80048f2:	f7fc ff9d 	bl	8001830 <chCondSignal.constprop.43>
 80048f6:	f7ff f893 	bl	8003a20 <test_wait_threads>
 80048fa:	2001      	movs	r0, #1
 80048fc:	490b      	ldr	r1, [pc, #44]	; (800492c <mtx8_execute+0x8c>)
 80048fe:	b002      	add	sp, #8
 8004900:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004904:	f7fb bedc 	b.w	80006c0 <_test_assert_sequence>
 8004908:	20000930 	.word	0x20000930
 800490c:	20000b38 	.word	0x20000b38
 8004910:	08005c50 	.word	0x08005c50
 8004914:	08002e01 	.word	0x08002e01
 8004918:	200011cc 	.word	0x200011cc
 800491c:	08005c44 	.word	0x08005c44
 8004920:	08002e91 	.word	0x08002e91
 8004924:	08005c40 	.word	0x08005c40
 8004928:	08002f01 	.word	0x08002f01
 800492c:	08005c70 	.word	0x08005c70

08004930 <mtx7_execute>:
 8004930:	b530      	push	{r4, r5, lr}
 8004932:	4b2c      	ldr	r3, [pc, #176]	; (80049e4 <mtx7_execute+0xb4>)
 8004934:	482c      	ldr	r0, [pc, #176]	; (80049e8 <mtx7_execute+0xb8>)
 8004936:	699a      	ldr	r2, [r3, #24]
 8004938:	b083      	sub	sp, #12
 800493a:	6895      	ldr	r5, [r2, #8]
 800493c:	4b2b      	ldr	r3, [pc, #172]	; (80049ec <mtx7_execute+0xbc>)
 800493e:	1c6a      	adds	r2, r5, #1
 8004940:	9000      	str	r0, [sp, #0]
 8004942:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004946:	482a      	ldr	r0, [pc, #168]	; (80049f0 <mtx7_execute+0xc0>)
 8004948:	f7fc ffda 	bl	8001900 <chThdCreateStatic>
 800494c:	4c29      	ldr	r4, [pc, #164]	; (80049f4 <mtx7_execute+0xc4>)
 800494e:	4b2a      	ldr	r3, [pc, #168]	; (80049f8 <mtx7_execute+0xc8>)
 8004950:	6020      	str	r0, [r4, #0]
 8004952:	1caa      	adds	r2, r5, #2
 8004954:	9300      	str	r3, [sp, #0]
 8004956:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800495a:	4b24      	ldr	r3, [pc, #144]	; (80049ec <mtx7_execute+0xbc>)
 800495c:	4827      	ldr	r0, [pc, #156]	; (80049fc <mtx7_execute+0xcc>)
 800495e:	f7fc ffcf 	bl	8001900 <chThdCreateStatic>
 8004962:	4b27      	ldr	r3, [pc, #156]	; (8004a00 <mtx7_execute+0xd0>)
 8004964:	6060      	str	r0, [r4, #4]
 8004966:	1cea      	adds	r2, r5, #3
 8004968:	9300      	str	r3, [sp, #0]
 800496a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800496e:	4b1f      	ldr	r3, [pc, #124]	; (80049ec <mtx7_execute+0xbc>)
 8004970:	4824      	ldr	r0, [pc, #144]	; (8004a04 <mtx7_execute+0xd4>)
 8004972:	f7fc ffc5 	bl	8001900 <chThdCreateStatic>
 8004976:	4b24      	ldr	r3, [pc, #144]	; (8004a08 <mtx7_execute+0xd8>)
 8004978:	60a0      	str	r0, [r4, #8]
 800497a:	1d2a      	adds	r2, r5, #4
 800497c:	9300      	str	r3, [sp, #0]
 800497e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004982:	4b1a      	ldr	r3, [pc, #104]	; (80049ec <mtx7_execute+0xbc>)
 8004984:	4821      	ldr	r0, [pc, #132]	; (8004a0c <mtx7_execute+0xdc>)
 8004986:	f7fc ffbb 	bl	8001900 <chThdCreateStatic>
 800498a:	4b21      	ldr	r3, [pc, #132]	; (8004a10 <mtx7_execute+0xe0>)
 800498c:	60e0      	str	r0, [r4, #12]
 800498e:	1d6a      	adds	r2, r5, #5
 8004990:	9300      	str	r3, [sp, #0]
 8004992:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004996:	4b15      	ldr	r3, [pc, #84]	; (80049ec <mtx7_execute+0xbc>)
 8004998:	481e      	ldr	r0, [pc, #120]	; (8004a14 <mtx7_execute+0xe4>)
 800499a:	f7fc ffb1 	bl	8001900 <chThdCreateStatic>
 800499e:	2320      	movs	r3, #32
 80049a0:	6120      	str	r0, [r4, #16]
 80049a2:	f383 8811 	msr	BASEPRI, r3
 80049a6:	4c1c      	ldr	r4, [pc, #112]	; (8004a18 <mtx7_execute+0xe8>)
 80049a8:	6823      	ldr	r3, [r4, #0]
 80049aa:	42a3      	cmp	r3, r4
 80049ac:	d00b      	beq.n	80049c6 <mtx7_execute+0x96>
 80049ae:	f06f 0501 	mvn.w	r5, #1
 80049b2:	681a      	ldr	r2, [r3, #0]
 80049b4:	4618      	mov	r0, r3
 80049b6:	6054      	str	r4, [r2, #4]
 80049b8:	6022      	str	r2, [r4, #0]
 80049ba:	f7fc f939 	bl	8000c30 <chSchReadyI>
 80049be:	6823      	ldr	r3, [r4, #0]
 80049c0:	6205      	str	r5, [r0, #32]
 80049c2:	42a3      	cmp	r3, r4
 80049c4:	d1f5      	bne.n	80049b2 <mtx7_execute+0x82>
 80049c6:	f7fc fd8b 	bl	80014e0 <chSchRescheduleS>
 80049ca:	2300      	movs	r3, #0
 80049cc:	f383 8811 	msr	BASEPRI, r3
 80049d0:	f7ff f826 	bl	8003a20 <test_wait_threads>
 80049d4:	2001      	movs	r0, #1
 80049d6:	4911      	ldr	r1, [pc, #68]	; (8004a1c <mtx7_execute+0xec>)
 80049d8:	b003      	add	sp, #12
 80049da:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80049de:	f7fb be6f 	b.w	80006c0 <_test_assert_sequence>
 80049e2:	bf00      	nop
 80049e4:	20000930 	.word	0x20000930
 80049e8:	08005e94 	.word	0x08005e94
 80049ec:	08002e91 	.word	0x08002e91
 80049f0:	20000b38 	.word	0x20000b38
 80049f4:	200011cc 	.word	0x200011cc
 80049f8:	08005c48 	.word	0x08005c48
 80049fc:	20000c80 	.word	0x20000c80
 8004a00:	08005c44 	.word	0x08005c44
 8004a04:	20000dc8 	.word	0x20000dc8
 8004a08:	08005c40 	.word	0x08005c40
 8004a0c:	20000f10 	.word	0x20000f10
 8004a10:	08005c50 	.word	0x08005c50
 8004a14:	20001058 	.word	0x20001058
 8004a18:	20000800 	.word	0x20000800
 8004a1c:	08005e90 	.word	0x08005e90

08004a20 <mtx6_execute>:
 8004a20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a22:	4b2c      	ldr	r3, [pc, #176]	; (8004ad4 <mtx6_execute+0xb4>)
 8004a24:	4e2c      	ldr	r6, [pc, #176]	; (8004ad8 <mtx6_execute+0xb8>)
 8004a26:	699b      	ldr	r3, [r3, #24]
 8004a28:	4d2c      	ldr	r5, [pc, #176]	; (8004adc <mtx6_execute+0xbc>)
 8004a2a:	689f      	ldr	r7, [r3, #8]
 8004a2c:	492c      	ldr	r1, [pc, #176]	; (8004ae0 <mtx6_execute+0xc0>)
 8004a2e:	b083      	sub	sp, #12
 8004a30:	1c7a      	adds	r2, r7, #1
 8004a32:	4633      	mov	r3, r6
 8004a34:	9100      	str	r1, [sp, #0]
 8004a36:	4628      	mov	r0, r5
 8004a38:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a3c:	f7fc ff60 	bl	8001900 <chThdCreateStatic>
 8004a40:	4c28      	ldr	r4, [pc, #160]	; (8004ae4 <mtx6_execute+0xc4>)
 8004a42:	4929      	ldr	r1, [pc, #164]	; (8004ae8 <mtx6_execute+0xc8>)
 8004a44:	6020      	str	r0, [r4, #0]
 8004a46:	1cba      	adds	r2, r7, #2
 8004a48:	4633      	mov	r3, r6
 8004a4a:	9100      	str	r1, [sp, #0]
 8004a4c:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8004a50:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a54:	f7fc ff54 	bl	8001900 <chThdCreateStatic>
 8004a58:	4924      	ldr	r1, [pc, #144]	; (8004aec <mtx6_execute+0xcc>)
 8004a5a:	6060      	str	r0, [r4, #4]
 8004a5c:	1cfa      	adds	r2, r7, #3
 8004a5e:	4633      	mov	r3, r6
 8004a60:	9100      	str	r1, [sp, #0]
 8004a62:	f505 7024 	add.w	r0, r5, #656	; 0x290
 8004a66:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a6a:	f7fc ff49 	bl	8001900 <chThdCreateStatic>
 8004a6e:	4920      	ldr	r1, [pc, #128]	; (8004af0 <mtx6_execute+0xd0>)
 8004a70:	60a0      	str	r0, [r4, #8]
 8004a72:	1d3a      	adds	r2, r7, #4
 8004a74:	4633      	mov	r3, r6
 8004a76:	9100      	str	r1, [sp, #0]
 8004a78:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 8004a7c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a80:	f7fc ff3e 	bl	8001900 <chThdCreateStatic>
 8004a84:	491b      	ldr	r1, [pc, #108]	; (8004af4 <mtx6_execute+0xd4>)
 8004a86:	60e0      	str	r0, [r4, #12]
 8004a88:	4633      	mov	r3, r6
 8004a8a:	9100      	str	r1, [sp, #0]
 8004a8c:	1d7a      	adds	r2, r7, #5
 8004a8e:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 8004a92:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004a96:	f7fc ff33 	bl	8001900 <chThdCreateStatic>
 8004a9a:	2320      	movs	r3, #32
 8004a9c:	6120      	str	r0, [r4, #16]
 8004a9e:	f383 8811 	msr	BASEPRI, r3
 8004aa2:	f7fc f8dd 	bl	8000c60 <chCondSignalI.constprop.42>
 8004aa6:	f7fc f8db 	bl	8000c60 <chCondSignalI.constprop.42>
 8004aaa:	f7fc f8d9 	bl	8000c60 <chCondSignalI.constprop.42>
 8004aae:	f7fc f8d7 	bl	8000c60 <chCondSignalI.constprop.42>
 8004ab2:	f7fc f8d5 	bl	8000c60 <chCondSignalI.constprop.42>
 8004ab6:	f7fc fd13 	bl	80014e0 <chSchRescheduleS>
 8004aba:	2300      	movs	r3, #0
 8004abc:	f383 8811 	msr	BASEPRI, r3
 8004ac0:	f7fe ffae 	bl	8003a20 <test_wait_threads>
 8004ac4:	2001      	movs	r0, #1
 8004ac6:	490c      	ldr	r1, [pc, #48]	; (8004af8 <mtx6_execute+0xd8>)
 8004ac8:	b003      	add	sp, #12
 8004aca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004ace:	f7fb bdf7 	b.w	80006c0 <_test_assert_sequence>
 8004ad2:	bf00      	nop
 8004ad4:	20000930 	.word	0x20000930
 8004ad8:	08002e91 	.word	0x08002e91
 8004adc:	20000b38 	.word	0x20000b38
 8004ae0:	08005e94 	.word	0x08005e94
 8004ae4:	200011cc 	.word	0x200011cc
 8004ae8:	08005c48 	.word	0x08005c48
 8004aec:	08005c44 	.word	0x08005c44
 8004af0:	08005c40 	.word	0x08005c40
 8004af4:	08005c50 	.word	0x08005c50
 8004af8:	08005e90 	.word	0x08005e90
 8004afc:	00000000 	.word	0x00000000

08004b00 <mtx4_execute>:
 8004b00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b04:	4d84      	ldr	r5, [pc, #528]	; (8004d18 <mtx4_execute+0x218>)
 8004b06:	4885      	ldr	r0, [pc, #532]	; (8004d1c <mtx4_execute+0x21c>)
 8004b08:	69aa      	ldr	r2, [r5, #24]
 8004b0a:	b082      	sub	sp, #8
 8004b0c:	6894      	ldr	r4, [r2, #8]
 8004b0e:	4b84      	ldr	r3, [pc, #528]	; (8004d20 <mtx4_execute+0x220>)
 8004b10:	1c67      	adds	r7, r4, #1
 8004b12:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b16:	463a      	mov	r2, r7
 8004b18:	9000      	str	r0, [sp, #0]
 8004b1a:	4882      	ldr	r0, [pc, #520]	; (8004d24 <mtx4_execute+0x224>)
 8004b1c:	f7fc fef0 	bl	8001900 <chThdCreateStatic>
 8004b20:	4e81      	ldr	r6, [pc, #516]	; (8004d28 <mtx4_execute+0x228>)
 8004b22:	4b82      	ldr	r3, [pc, #520]	; (8004d2c <mtx4_execute+0x22c>)
 8004b24:	f104 0802 	add.w	r8, r4, #2
 8004b28:	6030      	str	r0, [r6, #0]
 8004b2a:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004b2e:	4642      	mov	r2, r8
 8004b30:	9300      	str	r3, [sp, #0]
 8004b32:	487f      	ldr	r0, [pc, #508]	; (8004d30 <mtx4_execute+0x230>)
 8004b34:	4b7f      	ldr	r3, [pc, #508]	; (8004d34 <mtx4_execute+0x234>)
 8004b36:	f7fc fee3 	bl	8001900 <chThdCreateStatic>
 8004b3a:	6070      	str	r0, [r6, #4]
 8004b3c:	487e      	ldr	r0, [pc, #504]	; (8004d38 <mtx4_execute+0x238>)
 8004b3e:	f7fe f917 	bl	8002d70 <chMtxLock>
 8004b42:	69ab      	ldr	r3, [r5, #24]
 8004b44:	2001      	movs	r0, #1
 8004b46:	6899      	ldr	r1, [r3, #8]
 8004b48:	1b09      	subs	r1, r1, r4
 8004b4a:	fab1 f181 	clz	r1, r1
 8004b4e:	0949      	lsrs	r1, r1, #5
 8004b50:	f7fb fdde 	bl	8000710 <_test_assert>
 8004b54:	b110      	cbz	r0, 8004b5c <mtx4_execute+0x5c>
 8004b56:	b002      	add	sp, #8
 8004b58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b5c:	2064      	movs	r0, #100	; 0x64
 8004b5e:	f7fd fd97 	bl	8002690 <chThdSleep>
 8004b62:	69ab      	ldr	r3, [r5, #24]
 8004b64:	2002      	movs	r0, #2
 8004b66:	6899      	ldr	r1, [r3, #8]
 8004b68:	1bc9      	subs	r1, r1, r7
 8004b6a:	fab1 f181 	clz	r1, r1
 8004b6e:	0949      	lsrs	r1, r1, #5
 8004b70:	f7fb fdce 	bl	8000710 <_test_assert>
 8004b74:	2800      	cmp	r0, #0
 8004b76:	d1ee      	bne.n	8004b56 <mtx4_execute+0x56>
 8004b78:	4870      	ldr	r0, [pc, #448]	; (8004d3c <mtx4_execute+0x23c>)
 8004b7a:	f7fe f8f9 	bl	8002d70 <chMtxLock>
 8004b7e:	69ab      	ldr	r3, [r5, #24]
 8004b80:	2003      	movs	r0, #3
 8004b82:	6899      	ldr	r1, [r3, #8]
 8004b84:	1bc9      	subs	r1, r1, r7
 8004b86:	fab1 f181 	clz	r1, r1
 8004b8a:	0949      	lsrs	r1, r1, #5
 8004b8c:	f7fb fdc0 	bl	8000710 <_test_assert>
 8004b90:	2800      	cmp	r0, #0
 8004b92:	d1e0      	bne.n	8004b56 <mtx4_execute+0x56>
 8004b94:	2064      	movs	r0, #100	; 0x64
 8004b96:	f7fd fd7b 	bl	8002690 <chThdSleep>
 8004b9a:	69ab      	ldr	r3, [r5, #24]
 8004b9c:	2004      	movs	r0, #4
 8004b9e:	6899      	ldr	r1, [r3, #8]
 8004ba0:	eba1 0108 	sub.w	r1, r1, r8
 8004ba4:	fab1 f181 	clz	r1, r1
 8004ba8:	0949      	lsrs	r1, r1, #5
 8004baa:	f7fb fdb1 	bl	8000710 <_test_assert>
 8004bae:	2800      	cmp	r0, #0
 8004bb0:	d1d1      	bne.n	8004b56 <mtx4_execute+0x56>
 8004bb2:	4862      	ldr	r0, [pc, #392]	; (8004d3c <mtx4_execute+0x23c>)
 8004bb4:	f7fc fe54 	bl	8001860 <chMtxUnlock>
 8004bb8:	69ab      	ldr	r3, [r5, #24]
 8004bba:	2005      	movs	r0, #5
 8004bbc:	6899      	ldr	r1, [r3, #8]
 8004bbe:	1bc9      	subs	r1, r1, r7
 8004bc0:	fab1 f181 	clz	r1, r1
 8004bc4:	0949      	lsrs	r1, r1, #5
 8004bc6:	f7fb fda3 	bl	8000710 <_test_assert>
 8004bca:	2800      	cmp	r0, #0
 8004bcc:	d1c3      	bne.n	8004b56 <mtx4_execute+0x56>
 8004bce:	2064      	movs	r0, #100	; 0x64
 8004bd0:	f7fd fd5e 	bl	8002690 <chThdSleep>
 8004bd4:	69ab      	ldr	r3, [r5, #24]
 8004bd6:	2006      	movs	r0, #6
 8004bd8:	6899      	ldr	r1, [r3, #8]
 8004bda:	1bc9      	subs	r1, r1, r7
 8004bdc:	fab1 f181 	clz	r1, r1
 8004be0:	0949      	lsrs	r1, r1, #5
 8004be2:	f7fb fd95 	bl	8000710 <_test_assert>
 8004be6:	2800      	cmp	r0, #0
 8004be8:	d1b5      	bne.n	8004b56 <mtx4_execute+0x56>
 8004bea:	f7fc fca1 	bl	8001530 <chMtxUnlockAll>
 8004bee:	69ab      	ldr	r3, [r5, #24]
 8004bf0:	2007      	movs	r0, #7
 8004bf2:	6899      	ldr	r1, [r3, #8]
 8004bf4:	1b09      	subs	r1, r1, r4
 8004bf6:	fab1 f181 	clz	r1, r1
 8004bfa:	0949      	lsrs	r1, r1, #5
 8004bfc:	f7fb fd88 	bl	8000710 <_test_assert>
 8004c00:	2800      	cmp	r0, #0
 8004c02:	d1a8      	bne.n	8004b56 <mtx4_execute+0x56>
 8004c04:	f7fe ff0c 	bl	8003a20 <test_wait_threads>
 8004c08:	4a4d      	ldr	r2, [pc, #308]	; (8004d40 <mtx4_execute+0x240>)
 8004c0a:	4b45      	ldr	r3, [pc, #276]	; (8004d20 <mtx4_execute+0x220>)
 8004c0c:	9200      	str	r2, [sp, #0]
 8004c0e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004c12:	463a      	mov	r2, r7
 8004c14:	4843      	ldr	r0, [pc, #268]	; (8004d24 <mtx4_execute+0x224>)
 8004c16:	f7fc fe73 	bl	8001900 <chThdCreateStatic>
 8004c1a:	4b4a      	ldr	r3, [pc, #296]	; (8004d44 <mtx4_execute+0x244>)
 8004c1c:	6030      	str	r0, [r6, #0]
 8004c1e:	4642      	mov	r2, r8
 8004c20:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004c24:	9300      	str	r3, [sp, #0]
 8004c26:	4842      	ldr	r0, [pc, #264]	; (8004d30 <mtx4_execute+0x230>)
 8004c28:	4b42      	ldr	r3, [pc, #264]	; (8004d34 <mtx4_execute+0x234>)
 8004c2a:	f7fc fe69 	bl	8001900 <chThdCreateStatic>
 8004c2e:	6070      	str	r0, [r6, #4]
 8004c30:	4841      	ldr	r0, [pc, #260]	; (8004d38 <mtx4_execute+0x238>)
 8004c32:	f7fe f89d 	bl	8002d70 <chMtxLock>
 8004c36:	69ab      	ldr	r3, [r5, #24]
 8004c38:	2008      	movs	r0, #8
 8004c3a:	6899      	ldr	r1, [r3, #8]
 8004c3c:	1b0a      	subs	r2, r1, r4
 8004c3e:	4251      	negs	r1, r2
 8004c40:	4151      	adcs	r1, r2
 8004c42:	f7fb fd65 	bl	8000710 <_test_assert>
 8004c46:	2800      	cmp	r0, #0
 8004c48:	d185      	bne.n	8004b56 <mtx4_execute+0x56>
 8004c4a:	2064      	movs	r0, #100	; 0x64
 8004c4c:	f7fd fd20 	bl	8002690 <chThdSleep>
 8004c50:	69ab      	ldr	r3, [r5, #24]
 8004c52:	2009      	movs	r0, #9
 8004c54:	6899      	ldr	r1, [r3, #8]
 8004c56:	1bcb      	subs	r3, r1, r7
 8004c58:	4259      	negs	r1, r3
 8004c5a:	4159      	adcs	r1, r3
 8004c5c:	f7fb fd58 	bl	8000710 <_test_assert>
 8004c60:	2800      	cmp	r0, #0
 8004c62:	f47f af78 	bne.w	8004b56 <mtx4_execute+0x56>
 8004c66:	4835      	ldr	r0, [pc, #212]	; (8004d3c <mtx4_execute+0x23c>)
 8004c68:	f7fe f882 	bl	8002d70 <chMtxLock>
 8004c6c:	69ab      	ldr	r3, [r5, #24]
 8004c6e:	200a      	movs	r0, #10
 8004c70:	6899      	ldr	r1, [r3, #8]
 8004c72:	eba1 0e07 	sub.w	lr, r1, r7
 8004c76:	f1de 0100 	rsbs	r1, lr, #0
 8004c7a:	eb41 010e 	adc.w	r1, r1, lr
 8004c7e:	f7fb fd47 	bl	8000710 <_test_assert>
 8004c82:	2800      	cmp	r0, #0
 8004c84:	f47f af67 	bne.w	8004b56 <mtx4_execute+0x56>
 8004c88:	2064      	movs	r0, #100	; 0x64
 8004c8a:	f7fd fd01 	bl	8002690 <chThdSleep>
 8004c8e:	69ab      	ldr	r3, [r5, #24]
 8004c90:	200b      	movs	r0, #11
 8004c92:	6899      	ldr	r1, [r3, #8]
 8004c94:	eba1 0c08 	sub.w	ip, r1, r8
 8004c98:	f1dc 0100 	rsbs	r1, ip, #0
 8004c9c:	eb41 010c 	adc.w	r1, r1, ip
 8004ca0:	f7fb fd36 	bl	8000710 <_test_assert>
 8004ca4:	4606      	mov	r6, r0
 8004ca6:	2800      	cmp	r0, #0
 8004ca8:	f47f af55 	bne.w	8004b56 <mtx4_execute+0x56>
 8004cac:	2320      	movs	r3, #32
 8004cae:	f383 8811 	msr	BASEPRI, r3
 8004cb2:	4822      	ldr	r0, [pc, #136]	; (8004d3c <mtx4_execute+0x23c>)
 8004cb4:	f7fc f924 	bl	8000f00 <chMtxUnlockS>
 8004cb8:	f7fc fc12 	bl	80014e0 <chSchRescheduleS>
 8004cbc:	f386 8811 	msr	BASEPRI, r6
 8004cc0:	69ab      	ldr	r3, [r5, #24]
 8004cc2:	200c      	movs	r0, #12
 8004cc4:	6899      	ldr	r1, [r3, #8]
 8004cc6:	1bce      	subs	r6, r1, r7
 8004cc8:	4271      	negs	r1, r6
 8004cca:	4171      	adcs	r1, r6
 8004ccc:	f7fb fd20 	bl	8000710 <_test_assert>
 8004cd0:	2800      	cmp	r0, #0
 8004cd2:	f47f af40 	bne.w	8004b56 <mtx4_execute+0x56>
 8004cd6:	2064      	movs	r0, #100	; 0x64
 8004cd8:	f7fd fcda 	bl	8002690 <chThdSleep>
 8004cdc:	69ab      	ldr	r3, [r5, #24]
 8004cde:	200d      	movs	r0, #13
 8004ce0:	6899      	ldr	r1, [r3, #8]
 8004ce2:	1bca      	subs	r2, r1, r7
 8004ce4:	4251      	negs	r1, r2
 8004ce6:	4151      	adcs	r1, r2
 8004ce8:	f7fb fd12 	bl	8000710 <_test_assert>
 8004cec:	2800      	cmp	r0, #0
 8004cee:	f47f af32 	bne.w	8004b56 <mtx4_execute+0x56>
 8004cf2:	f7fc fc1d 	bl	8001530 <chMtxUnlockAll>
 8004cf6:	69ab      	ldr	r3, [r5, #24]
 8004cf8:	200e      	movs	r0, #14
 8004cfa:	6899      	ldr	r1, [r3, #8]
 8004cfc:	1b0b      	subs	r3, r1, r4
 8004cfe:	4259      	negs	r1, r3
 8004d00:	4159      	adcs	r1, r3
 8004d02:	f7fb fd05 	bl	8000710 <_test_assert>
 8004d06:	2800      	cmp	r0, #0
 8004d08:	f47f af25 	bne.w	8004b56 <mtx4_execute+0x56>
 8004d0c:	b002      	add	sp, #8
 8004d0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004d12:	f7fe be85 	b.w	8003a20 <test_wait_threads>
 8004d16:	bf00      	nop
 8004d18:	20000930 	.word	0x20000930
 8004d1c:	08005c40 	.word	0x08005c40
 8004d20:	08003011 	.word	0x08003011
 8004d24:	20000b38 	.word	0x20000b38
 8004d28:	200011cc 	.word	0x200011cc
 8004d2c:	08005c50 	.word	0x08005c50
 8004d30:	20000c80 	.word	0x20000c80
 8004d34:	08003031 	.word	0x08003031
 8004d38:	20000844 	.word	0x20000844
 8004d3c:	20000834 	.word	0x20000834
 8004d40:	08005c48 	.word	0x08005c48
 8004d44:	08005c44 	.word	0x08005c44
	...

08004d50 <mtx1_execute>:
 8004d50:	b570      	push	{r4, r5, r6, lr}
 8004d52:	4e29      	ldr	r6, [pc, #164]	; (8004df8 <mtx1_execute+0xa8>)
 8004d54:	b082      	sub	sp, #8
 8004d56:	69b3      	ldr	r3, [r6, #24]
 8004d58:	4828      	ldr	r0, [pc, #160]	; (8004dfc <mtx1_execute+0xac>)
 8004d5a:	689c      	ldr	r4, [r3, #8]
 8004d5c:	f7fe f808 	bl	8002d70 <chMtxLock>
 8004d60:	4b27      	ldr	r3, [pc, #156]	; (8004e00 <mtx1_execute+0xb0>)
 8004d62:	1c62      	adds	r2, r4, #1
 8004d64:	9300      	str	r3, [sp, #0]
 8004d66:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d6a:	4b26      	ldr	r3, [pc, #152]	; (8004e04 <mtx1_execute+0xb4>)
 8004d6c:	4826      	ldr	r0, [pc, #152]	; (8004e08 <mtx1_execute+0xb8>)
 8004d6e:	f7fc fdc7 	bl	8001900 <chThdCreateStatic>
 8004d72:	4d26      	ldr	r5, [pc, #152]	; (8004e0c <mtx1_execute+0xbc>)
 8004d74:	4b26      	ldr	r3, [pc, #152]	; (8004e10 <mtx1_execute+0xc0>)
 8004d76:	6028      	str	r0, [r5, #0]
 8004d78:	1ca2      	adds	r2, r4, #2
 8004d7a:	9300      	str	r3, [sp, #0]
 8004d7c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d80:	4b20      	ldr	r3, [pc, #128]	; (8004e04 <mtx1_execute+0xb4>)
 8004d82:	4824      	ldr	r0, [pc, #144]	; (8004e14 <mtx1_execute+0xc4>)
 8004d84:	f7fc fdbc 	bl	8001900 <chThdCreateStatic>
 8004d88:	4b23      	ldr	r3, [pc, #140]	; (8004e18 <mtx1_execute+0xc8>)
 8004d8a:	6068      	str	r0, [r5, #4]
 8004d8c:	1ce2      	adds	r2, r4, #3
 8004d8e:	9300      	str	r3, [sp, #0]
 8004d90:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004d94:	4b1b      	ldr	r3, [pc, #108]	; (8004e04 <mtx1_execute+0xb4>)
 8004d96:	4821      	ldr	r0, [pc, #132]	; (8004e1c <mtx1_execute+0xcc>)
 8004d98:	f7fc fdb2 	bl	8001900 <chThdCreateStatic>
 8004d9c:	4b20      	ldr	r3, [pc, #128]	; (8004e20 <mtx1_execute+0xd0>)
 8004d9e:	60a8      	str	r0, [r5, #8]
 8004da0:	1d22      	adds	r2, r4, #4
 8004da2:	9300      	str	r3, [sp, #0]
 8004da4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004da8:	4b16      	ldr	r3, [pc, #88]	; (8004e04 <mtx1_execute+0xb4>)
 8004daa:	481e      	ldr	r0, [pc, #120]	; (8004e24 <mtx1_execute+0xd4>)
 8004dac:	f7fc fda8 	bl	8001900 <chThdCreateStatic>
 8004db0:	4b1d      	ldr	r3, [pc, #116]	; (8004e28 <mtx1_execute+0xd8>)
 8004db2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004db6:	1d62      	adds	r2, r4, #5
 8004db8:	60e8      	str	r0, [r5, #12]
 8004dba:	9300      	str	r3, [sp, #0]
 8004dbc:	481b      	ldr	r0, [pc, #108]	; (8004e2c <mtx1_execute+0xdc>)
 8004dbe:	4b11      	ldr	r3, [pc, #68]	; (8004e04 <mtx1_execute+0xb4>)
 8004dc0:	f7fc fd9e 	bl	8001900 <chThdCreateStatic>
 8004dc4:	6128      	str	r0, [r5, #16]
 8004dc6:	480d      	ldr	r0, [pc, #52]	; (8004dfc <mtx1_execute+0xac>)
 8004dc8:	f7fc fd4a 	bl	8001860 <chMtxUnlock>
 8004dcc:	f7fe fe28 	bl	8003a20 <test_wait_threads>
 8004dd0:	69b3      	ldr	r3, [r6, #24]
 8004dd2:	2001      	movs	r0, #1
 8004dd4:	6899      	ldr	r1, [r3, #8]
 8004dd6:	1b09      	subs	r1, r1, r4
 8004dd8:	fab1 f181 	clz	r1, r1
 8004ddc:	0949      	lsrs	r1, r1, #5
 8004dde:	f7fb fc97 	bl	8000710 <_test_assert>
 8004de2:	b108      	cbz	r0, 8004de8 <mtx1_execute+0x98>
 8004de4:	b002      	add	sp, #8
 8004de6:	bd70      	pop	{r4, r5, r6, pc}
 8004de8:	2002      	movs	r0, #2
 8004dea:	4911      	ldr	r1, [pc, #68]	; (8004e30 <mtx1_execute+0xe0>)
 8004dec:	b002      	add	sp, #8
 8004dee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004df2:	f7fb bc65 	b.w	80006c0 <_test_assert_sequence>
 8004df6:	bf00      	nop
 8004df8:	20000930 	.word	0x20000930
 8004dfc:	20000834 	.word	0x20000834
 8004e00:	08005e94 	.word	0x08005e94
 8004e04:	08003051 	.word	0x08003051
 8004e08:	20000b38 	.word	0x20000b38
 8004e0c:	200011cc 	.word	0x200011cc
 8004e10:	08005c48 	.word	0x08005c48
 8004e14:	20000c80 	.word	0x20000c80
 8004e18:	08005c44 	.word	0x08005c44
 8004e1c:	20000dc8 	.word	0x20000dc8
 8004e20:	08005c40 	.word	0x08005c40
 8004e24:	20000f10 	.word	0x20000f10
 8004e28:	08005c50 	.word	0x08005c50
 8004e2c:	20001058 	.word	0x20001058
 8004e30:	08005e90 	.word	0x08005e90
	...

08004e40 <sem2_execute>:
 8004e40:	b570      	push	{r4, r5, r6, lr}
 8004e42:	2320      	movs	r3, #32
 8004e44:	b082      	sub	sp, #8
 8004e46:	f383 8811 	msr	BASEPRI, r3
 8004e4a:	4c4b      	ldr	r4, [pc, #300]	; (8004f78 <sem2_execute+0x138>)
 8004e4c:	68a3      	ldr	r3, [r4, #8]
 8004e4e:	3b01      	subs	r3, #1
 8004e50:	bf5a      	itte	pl
 8004e52:	60a3      	strpl	r3, [r4, #8]
 8004e54:	2100      	movpl	r1, #0
 8004e56:	2101      	movmi	r1, #1
 8004e58:	2300      	movs	r3, #0
 8004e5a:	f383 8811 	msr	BASEPRI, r3
 8004e5e:	2001      	movs	r0, #1
 8004e60:	f7fb fc56 	bl	8000710 <_test_assert>
 8004e64:	b108      	cbz	r0, 8004e6a <sem2_execute+0x2a>
 8004e66:	b002      	add	sp, #8
 8004e68:	bd70      	pop	{r4, r5, r6, pc}
 8004e6a:	6821      	ldr	r1, [r4, #0]
 8004e6c:	2002      	movs	r0, #2
 8004e6e:	1b09      	subs	r1, r1, r4
 8004e70:	fab1 f181 	clz	r1, r1
 8004e74:	0949      	lsrs	r1, r1, #5
 8004e76:	f7fb fc4b 	bl	8000710 <_test_assert>
 8004e7a:	2800      	cmp	r0, #0
 8004e7c:	d1f3      	bne.n	8004e66 <sem2_execute+0x26>
 8004e7e:	68a1      	ldr	r1, [r4, #8]
 8004e80:	2003      	movs	r0, #3
 8004e82:	fab1 f181 	clz	r1, r1
 8004e86:	0949      	lsrs	r1, r1, #5
 8004e88:	f7fb fc42 	bl	8000710 <_test_assert>
 8004e8c:	2800      	cmp	r0, #0
 8004e8e:	d1ea      	bne.n	8004e66 <sem2_execute+0x26>
 8004e90:	4a3a      	ldr	r2, [pc, #232]	; (8004f7c <sem2_execute+0x13c>)
 8004e92:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004e96:	6992      	ldr	r2, [r2, #24]
 8004e98:	4b39      	ldr	r3, [pc, #228]	; (8004f80 <sem2_execute+0x140>)
 8004e9a:	6892      	ldr	r2, [r2, #8]
 8004e9c:	9000      	str	r0, [sp, #0]
 8004e9e:	3a01      	subs	r2, #1
 8004ea0:	4838      	ldr	r0, [pc, #224]	; (8004f84 <sem2_execute+0x144>)
 8004ea2:	f7fc fd2d 	bl	8001900 <chThdCreateStatic>
 8004ea6:	4b38      	ldr	r3, [pc, #224]	; (8004f88 <sem2_execute+0x148>)
 8004ea8:	6018      	str	r0, [r3, #0]
 8004eaa:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8004eae:	f7fc fe6f 	bl	8001b90 <chSemWaitTimeout.constprop.49>
 8004eb2:	4605      	mov	r5, r0
 8004eb4:	f7fe fdb4 	bl	8003a20 <test_wait_threads>
 8004eb8:	fab5 f185 	clz	r1, r5
 8004ebc:	2004      	movs	r0, #4
 8004ebe:	0949      	lsrs	r1, r1, #5
 8004ec0:	f7fb fc26 	bl	8000710 <_test_assert>
 8004ec4:	2800      	cmp	r0, #0
 8004ec6:	d1ce      	bne.n	8004e66 <sem2_execute+0x26>
 8004ec8:	6821      	ldr	r1, [r4, #0]
 8004eca:	2005      	movs	r0, #5
 8004ecc:	1b09      	subs	r1, r1, r4
 8004ece:	fab1 f181 	clz	r1, r1
 8004ed2:	0949      	lsrs	r1, r1, #5
 8004ed4:	f7fb fc1c 	bl	8000710 <_test_assert>
 8004ed8:	2800      	cmp	r0, #0
 8004eda:	d1c4      	bne.n	8004e66 <sem2_execute+0x26>
 8004edc:	68a1      	ldr	r1, [r4, #8]
 8004ede:	2006      	movs	r0, #6
 8004ee0:	fab1 f181 	clz	r1, r1
 8004ee4:	0949      	lsrs	r1, r1, #5
 8004ee6:	f7fb fc13 	bl	8000710 <_test_assert>
 8004eea:	4605      	mov	r5, r0
 8004eec:	2800      	cmp	r0, #0
 8004eee:	d1ba      	bne.n	8004e66 <sem2_execute+0x26>
 8004ef0:	f7fd fcae 	bl	8002850 <test_wait_tick>
 8004ef4:	2320      	movs	r3, #32
 8004ef6:	f383 8811 	msr	BASEPRI, r3
 8004efa:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004efe:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 8004f00:	f385 8811 	msr	BASEPRI, r5
 8004f04:	2541      	movs	r5, #65	; 0x41
 8004f06:	4628      	mov	r0, r5
 8004f08:	f7fb fc1a 	bl	8000740 <test_emit_token>
 8004f0c:	2032      	movs	r0, #50	; 0x32
 8004f0e:	f7fc fe3f 	bl	8001b90 <chSemWaitTimeout.constprop.49>
 8004f12:	f1a0 31ff 	sub.w	r1, r0, #4294967295	; 0xffffffff
 8004f16:	fab1 f181 	clz	r1, r1
 8004f1a:	2007      	movs	r0, #7
 8004f1c:	0949      	lsrs	r1, r1, #5
 8004f1e:	f7fb fbf7 	bl	8000710 <_test_assert>
 8004f22:	2800      	cmp	r0, #0
 8004f24:	d19f      	bne.n	8004e66 <sem2_execute+0x26>
 8004f26:	6821      	ldr	r1, [r4, #0]
 8004f28:	2008      	movs	r0, #8
 8004f2a:	1b09      	subs	r1, r1, r4
 8004f2c:	fab1 f181 	clz	r1, r1
 8004f30:	0949      	lsrs	r1, r1, #5
 8004f32:	f7fb fbed 	bl	8000710 <_test_assert>
 8004f36:	2800      	cmp	r0, #0
 8004f38:	d195      	bne.n	8004e66 <sem2_execute+0x26>
 8004f3a:	68a1      	ldr	r1, [r4, #8]
 8004f3c:	2009      	movs	r0, #9
 8004f3e:	fab1 f181 	clz	r1, r1
 8004f42:	0949      	lsrs	r1, r1, #5
 8004f44:	f7fb fbe4 	bl	8000710 <_test_assert>
 8004f48:	3501      	adds	r5, #1
 8004f4a:	b2ed      	uxtb	r5, r5
 8004f4c:	2800      	cmp	r0, #0
 8004f4e:	d18a      	bne.n	8004e66 <sem2_execute+0x26>
 8004f50:	2d46      	cmp	r5, #70	; 0x46
 8004f52:	d1d8      	bne.n	8004f06 <sem2_execute+0xc6>
 8004f54:	490d      	ldr	r1, [pc, #52]	; (8004f8c <sem2_execute+0x14c>)
 8004f56:	200a      	movs	r0, #10
 8004f58:	f7fb fbb2 	bl	80006c0 <_test_assert_sequence>
 8004f5c:	2800      	cmp	r0, #0
 8004f5e:	d182      	bne.n	8004e66 <sem2_execute+0x26>
 8004f60:	200b      	movs	r0, #11
 8004f62:	b2b6      	uxth	r6, r6
 8004f64:	f106 02fc 	add.w	r2, r6, #252	; 0xfc
 8004f68:	36fa      	adds	r6, #250	; 0xfa
 8004f6a:	b292      	uxth	r2, r2
 8004f6c:	b2b1      	uxth	r1, r6
 8004f6e:	b002      	add	sp, #8
 8004f70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004f74:	f7fb bb84 	b.w	8000680 <_test_assert_time_window>
 8004f78:	200008ac 	.word	0x200008ac
 8004f7c:	20000930 	.word	0x20000930
 8004f80:	08002821 	.word	0x08002821
 8004f84:	20000b38 	.word	0x20000b38
 8004f88:	200011cc 	.word	0x200011cc
 8004f8c:	08005e90 	.word	0x08005e90

08004f90 <sem1_execute>:
 8004f90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004f92:	4d4b      	ldr	r5, [pc, #300]	; (80050c0 <sem1_execute+0x130>)
 8004f94:	4f4b      	ldr	r7, [pc, #300]	; (80050c4 <sem1_execute+0x134>)
 8004f96:	69aa      	ldr	r2, [r5, #24]
 8004f98:	b083      	sub	sp, #12
 8004f9a:	6892      	ldr	r2, [r2, #8]
 8004f9c:	4b4a      	ldr	r3, [pc, #296]	; (80050c8 <sem1_execute+0x138>)
 8004f9e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fa2:	3205      	adds	r2, #5
 8004fa4:	9700      	str	r7, [sp, #0]
 8004fa6:	4849      	ldr	r0, [pc, #292]	; (80050cc <sem1_execute+0x13c>)
 8004fa8:	f7fc fcaa 	bl	8001900 <chThdCreateStatic>
 8004fac:	69ab      	ldr	r3, [r5, #24]
 8004fae:	4c48      	ldr	r4, [pc, #288]	; (80050d0 <sem1_execute+0x140>)
 8004fb0:	689a      	ldr	r2, [r3, #8]
 8004fb2:	4b48      	ldr	r3, [pc, #288]	; (80050d4 <sem1_execute+0x144>)
 8004fb4:	6020      	str	r0, [r4, #0]
 8004fb6:	3201      	adds	r2, #1
 8004fb8:	9300      	str	r3, [sp, #0]
 8004fba:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fbe:	4b42      	ldr	r3, [pc, #264]	; (80050c8 <sem1_execute+0x138>)
 8004fc0:	4845      	ldr	r0, [pc, #276]	; (80050d8 <sem1_execute+0x148>)
 8004fc2:	f7fc fc9d 	bl	8001900 <chThdCreateStatic>
 8004fc6:	69aa      	ldr	r2, [r5, #24]
 8004fc8:	4b44      	ldr	r3, [pc, #272]	; (80050dc <sem1_execute+0x14c>)
 8004fca:	6892      	ldr	r2, [r2, #8]
 8004fcc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fd0:	6060      	str	r0, [r4, #4]
 8004fd2:	3203      	adds	r2, #3
 8004fd4:	9300      	str	r3, [sp, #0]
 8004fd6:	4842      	ldr	r0, [pc, #264]	; (80050e0 <sem1_execute+0x150>)
 8004fd8:	4b3b      	ldr	r3, [pc, #236]	; (80050c8 <sem1_execute+0x138>)
 8004fda:	f7fc fc91 	bl	8001900 <chThdCreateStatic>
 8004fde:	69aa      	ldr	r2, [r5, #24]
 8004fe0:	4b40      	ldr	r3, [pc, #256]	; (80050e4 <sem1_execute+0x154>)
 8004fe2:	6892      	ldr	r2, [r2, #8]
 8004fe4:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8004fe8:	60a0      	str	r0, [r4, #8]
 8004fea:	3204      	adds	r2, #4
 8004fec:	9300      	str	r3, [sp, #0]
 8004fee:	483e      	ldr	r0, [pc, #248]	; (80050e8 <sem1_execute+0x158>)
 8004ff0:	4b35      	ldr	r3, [pc, #212]	; (80050c8 <sem1_execute+0x138>)
 8004ff2:	f7fc fc85 	bl	8001900 <chThdCreateStatic>
 8004ff6:	69aa      	ldr	r2, [r5, #24]
 8004ff8:	4b3c      	ldr	r3, [pc, #240]	; (80050ec <sem1_execute+0x15c>)
 8004ffa:	6892      	ldr	r2, [r2, #8]
 8004ffc:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005000:	3202      	adds	r2, #2
 8005002:	60e0      	str	r0, [r4, #12]
 8005004:	9300      	str	r3, [sp, #0]
 8005006:	483a      	ldr	r0, [pc, #232]	; (80050f0 <sem1_execute+0x160>)
 8005008:	4b2f      	ldr	r3, [pc, #188]	; (80050c8 <sem1_execute+0x138>)
 800500a:	f7fc fc79 	bl	8001900 <chThdCreateStatic>
 800500e:	6120      	str	r0, [r4, #16]
 8005010:	4838      	ldr	r0, [pc, #224]	; (80050f4 <sem1_execute+0x164>)
 8005012:	f7fc fc55 	bl	80018c0 <chSemSignal>
 8005016:	4837      	ldr	r0, [pc, #220]	; (80050f4 <sem1_execute+0x164>)
 8005018:	f7fc fc52 	bl	80018c0 <chSemSignal>
 800501c:	4835      	ldr	r0, [pc, #212]	; (80050f4 <sem1_execute+0x164>)
 800501e:	f7fc fc4f 	bl	80018c0 <chSemSignal>
 8005022:	4834      	ldr	r0, [pc, #208]	; (80050f4 <sem1_execute+0x164>)
 8005024:	f7fc fc4c 	bl	80018c0 <chSemSignal>
 8005028:	4832      	ldr	r0, [pc, #200]	; (80050f4 <sem1_execute+0x164>)
 800502a:	f7fc fc49 	bl	80018c0 <chSemSignal>
 800502e:	f7fe fcf7 	bl	8003a20 <test_wait_threads>
 8005032:	4931      	ldr	r1, [pc, #196]	; (80050f8 <sem1_execute+0x168>)
 8005034:	2001      	movs	r0, #1
 8005036:	f7fb fb43 	bl	80006c0 <_test_assert_sequence>
 800503a:	b108      	cbz	r0, 8005040 <sem1_execute+0xb0>
 800503c:	b003      	add	sp, #12
 800503e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005040:	69aa      	ldr	r2, [r5, #24]
 8005042:	4606      	mov	r6, r0
 8005044:	6892      	ldr	r2, [r2, #8]
 8005046:	4b20      	ldr	r3, [pc, #128]	; (80050c8 <sem1_execute+0x138>)
 8005048:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800504c:	3205      	adds	r2, #5
 800504e:	9700      	str	r7, [sp, #0]
 8005050:	481e      	ldr	r0, [pc, #120]	; (80050cc <sem1_execute+0x13c>)
 8005052:	f7fc fc55 	bl	8001900 <chThdCreateStatic>
 8005056:	2320      	movs	r3, #32
 8005058:	6020      	str	r0, [r4, #0]
 800505a:	f383 8811 	msr	BASEPRI, r3
 800505e:	2502      	movs	r5, #2
 8005060:	4c24      	ldr	r4, [pc, #144]	; (80050f4 <sem1_execute+0x164>)
 8005062:	e002      	b.n	800506a <sem1_execute+0xda>
 8005064:	2d01      	cmp	r5, #1
 8005066:	d00e      	beq.n	8005086 <sem1_execute+0xf6>
 8005068:	2501      	movs	r5, #1
 800506a:	68a3      	ldr	r3, [r4, #8]
 800506c:	3301      	adds	r3, #1
 800506e:	2b00      	cmp	r3, #0
 8005070:	60a3      	str	r3, [r4, #8]
 8005072:	dcf7      	bgt.n	8005064 <sem1_execute+0xd4>
 8005074:	6820      	ldr	r0, [r4, #0]
 8005076:	6803      	ldr	r3, [r0, #0]
 8005078:	605c      	str	r4, [r3, #4]
 800507a:	6023      	str	r3, [r4, #0]
 800507c:	f7fb fdd8 	bl	8000c30 <chSchReadyI>
 8005080:	2d01      	cmp	r5, #1
 8005082:	6206      	str	r6, [r0, #32]
 8005084:	d1f0      	bne.n	8005068 <sem1_execute+0xd8>
 8005086:	f7fc fa2b 	bl	80014e0 <chSchRescheduleS>
 800508a:	2500      	movs	r5, #0
 800508c:	f385 8811 	msr	BASEPRI, r5
 8005090:	f7fe fcc6 	bl	8003a20 <test_wait_threads>
 8005094:	2320      	movs	r3, #32
 8005096:	f383 8811 	msr	BASEPRI, r3
 800509a:	68a1      	ldr	r1, [r4, #8]
 800509c:	2002      	movs	r0, #2
 800509e:	f1a1 0101 	sub.w	r1, r1, #1
 80050a2:	fab1 f181 	clz	r1, r1
 80050a6:	0949      	lsrs	r1, r1, #5
 80050a8:	f7fb fb32 	bl	8000710 <_test_assert>
 80050ac:	b918      	cbnz	r0, 80050b6 <sem1_execute+0x126>
 80050ae:	f380 8811 	msr	BASEPRI, r0
 80050b2:	b003      	add	sp, #12
 80050b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80050b6:	f385 8811 	msr	BASEPRI, r5
 80050ba:	b003      	add	sp, #12
 80050bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80050be:	bf00      	nop
 80050c0:	20000930 	.word	0x20000930
 80050c4:	08005c50 	.word	0x08005c50
 80050c8:	08003941 	.word	0x08003941
 80050cc:	20000b38 	.word	0x20000b38
 80050d0:	200011cc 	.word	0x200011cc
 80050d4:	08005c40 	.word	0x08005c40
 80050d8:	20000c80 	.word	0x20000c80
 80050dc:	08005c44 	.word	0x08005c44
 80050e0:	20000dc8 	.word	0x20000dc8
 80050e4:	08005c48 	.word	0x08005c48
 80050e8:	20000f10 	.word	0x20000f10
 80050ec:	08005e94 	.word	0x08005e94
 80050f0:	20001058 	.word	0x20001058
 80050f4:	200008ac 	.word	0x200008ac
 80050f8:	08005e90 	.word	0x08005e90
 80050fc:	00000000 	.word	0x00000000

08005100 <thd2_execute>:
 8005100:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005104:	4d41      	ldr	r5, [pc, #260]	; (800520c <thd2_execute+0x10c>)
 8005106:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8005234 <thd2_execute+0x134>
 800510a:	69ab      	ldr	r3, [r5, #24]
 800510c:	4c40      	ldr	r4, [pc, #256]	; (8005210 <thd2_execute+0x110>)
 800510e:	689a      	ldr	r2, [r3, #8]
 8005110:	4940      	ldr	r1, [pc, #256]	; (8005214 <thd2_execute+0x114>)
 8005112:	b083      	sub	sp, #12
 8005114:	4643      	mov	r3, r8
 8005116:	9100      	str	r1, [sp, #0]
 8005118:	3a04      	subs	r2, #4
 800511a:	f504 70a4 	add.w	r0, r4, #328	; 0x148
 800511e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005122:	f7fc fbed 	bl	8001900 <chThdCreateStatic>
 8005126:	69ab      	ldr	r3, [r5, #24]
 8005128:	4e3b      	ldr	r6, [pc, #236]	; (8005218 <thd2_execute+0x118>)
 800512a:	689a      	ldr	r2, [r3, #8]
 800512c:	493b      	ldr	r1, [pc, #236]	; (800521c <thd2_execute+0x11c>)
 800512e:	6070      	str	r0, [r6, #4]
 8005130:	4643      	mov	r3, r8
 8005132:	9100      	str	r1, [sp, #0]
 8005134:	3a05      	subs	r2, #5
 8005136:	4620      	mov	r0, r4
 8005138:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800513c:	f7fc fbe0 	bl	8001900 <chThdCreateStatic>
 8005140:	69ab      	ldr	r3, [r5, #24]
 8005142:	4937      	ldr	r1, [pc, #220]	; (8005220 <thd2_execute+0x120>)
 8005144:	689a      	ldr	r2, [r3, #8]
 8005146:	6030      	str	r0, [r6, #0]
 8005148:	4643      	mov	r3, r8
 800514a:	9100      	str	r1, [sp, #0]
 800514c:	3a01      	subs	r2, #1
 800514e:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8005152:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005156:	f7fc fbd3 	bl	8001900 <chThdCreateStatic>
 800515a:	69ab      	ldr	r3, [r5, #24]
 800515c:	4931      	ldr	r1, [pc, #196]	; (8005224 <thd2_execute+0x124>)
 800515e:	689a      	ldr	r2, [r3, #8]
 8005160:	6130      	str	r0, [r6, #16]
 8005162:	9100      	str	r1, [sp, #0]
 8005164:	3a02      	subs	r2, #2
 8005166:	4643      	mov	r3, r8
 8005168:	f504 7076 	add.w	r0, r4, #984	; 0x3d8
 800516c:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005170:	f7fc fbc6 	bl	8001900 <chThdCreateStatic>
 8005174:	2220      	movs	r2, #32
 8005176:	60f0      	str	r0, [r6, #12]
 8005178:	f382 8811 	msr	BASEPRI, r2
 800517c:	2700      	movs	r7, #0
 800517e:	2002      	movs	r0, #2
 8005180:	f04f 0901 	mov.w	r9, #1
 8005184:	69ab      	ldr	r3, [r5, #24]
 8005186:	4928      	ldr	r1, [pc, #160]	; (8005228 <thd2_execute+0x128>)
 8005188:	689b      	ldr	r3, [r3, #8]
 800518a:	f8c4 13b8 	str.w	r1, [r4, #952]	; 0x3b8
 800518e:	3b03      	subs	r3, #3
 8005190:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 8005194:	f8c4 32cc 	str.w	r3, [r4, #716]	; 0x2cc
 8005198:	f504 736d 	add.w	r3, r4, #948	; 0x3b4
 800519c:	f8c4 329c 	str.w	r3, [r4, #668]	; 0x29c
 80051a0:	4b22      	ldr	r3, [pc, #136]	; (800522c <thd2_execute+0x12c>)
 80051a2:	6969      	ldr	r1, [r5, #20]
 80051a4:	f8c4 33d4 	str.w	r3, [r4, #980]	; 0x3d4
 80051a8:	f504 7324 	add.w	r3, r4, #656	; 0x290
 80051ac:	f8a4 02ac 	strh.w	r0, [r4, #684]	; 0x2ac
 80051b0:	f8c4 12a4 	str.w	r1, [r4, #676]	; 0x2a4
 80051b4:	f8c4 83b4 	str.w	r8, [r4, #948]	; 0x3b4
 80051b8:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
 80051bc:	f504 702d 	add.w	r0, r4, #692	; 0x2b4
 80051c0:	f8c4 72c8 	str.w	r7, [r4, #712]	; 0x2c8
 80051c4:	f8c4 72c4 	str.w	r7, [r4, #708]	; 0x2c4
 80051c8:	f8c4 72a8 	str.w	r7, [r4, #680]	; 0x2a8
 80051cc:	f884 92ae 	strb.w	r9, [r4, #686]	; 0x2ae
 80051d0:	610b      	str	r3, [r1, #16]
 80051d2:	f504 712e 	add.w	r1, r4, #696	; 0x2b8
 80051d6:	616b      	str	r3, [r5, #20]
 80051d8:	60b3      	str	r3, [r6, #8]
 80051da:	f8c4 02b4 	str.w	r0, [r4, #692]	; 0x2b4
 80051de:	f8c4 12b8 	str.w	r1, [r4, #696]	; 0x2b8
 80051e2:	f8c4 12bc 	str.w	r1, [r4, #700]	; 0x2bc
 80051e6:	f387 8811 	msr	BASEPRI, r7
 80051ea:	68b0      	ldr	r0, [r6, #8]
 80051ec:	f382 8811 	msr	BASEPRI, r2
 80051f0:	f7fb fd1e 	bl	8000c30 <chSchReadyI>
 80051f4:	f387 8811 	msr	BASEPRI, r7
 80051f8:	f7fe fc12 	bl	8003a20 <test_wait_threads>
 80051fc:	4648      	mov	r0, r9
 80051fe:	490c      	ldr	r1, [pc, #48]	; (8005230 <thd2_execute+0x130>)
 8005200:	b003      	add	sp, #12
 8005202:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005206:	f7fb ba5b 	b.w	80006c0 <_test_assert_sequence>
 800520a:	bf00      	nop
 800520c:	20000930 	.word	0x20000930
 8005210:	20000b38 	.word	0x20000b38
 8005214:	08005c48 	.word	0x08005c48
 8005218:	200011cc 	.word	0x200011cc
 800521c:	08005e94 	.word	0x08005e94
 8005220:	08005c50 	.word	0x08005c50
 8005224:	08005c40 	.word	0x08005c40
 8005228:	08005c44 	.word	0x08005c44
 800522c:	08000211 	.word	0x08000211
 8005230:	08005e90 	.word	0x08005e90
 8005234:	08000791 	.word	0x08000791
	...

08005240 <thd1_execute>:
 8005240:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005242:	4f27      	ldr	r7, [pc, #156]	; (80052e0 <thd1_execute+0xa0>)
 8005244:	4e27      	ldr	r6, [pc, #156]	; (80052e4 <thd1_execute+0xa4>)
 8005246:	69bb      	ldr	r3, [r7, #24]
 8005248:	4d27      	ldr	r5, [pc, #156]	; (80052e8 <thd1_execute+0xa8>)
 800524a:	689a      	ldr	r2, [r3, #8]
 800524c:	4927      	ldr	r1, [pc, #156]	; (80052ec <thd1_execute+0xac>)
 800524e:	b083      	sub	sp, #12
 8005250:	4633      	mov	r3, r6
 8005252:	9100      	str	r1, [sp, #0]
 8005254:	3a05      	subs	r2, #5
 8005256:	4628      	mov	r0, r5
 8005258:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800525c:	f7fc fb50 	bl	8001900 <chThdCreateStatic>
 8005260:	69bb      	ldr	r3, [r7, #24]
 8005262:	4c23      	ldr	r4, [pc, #140]	; (80052f0 <thd1_execute+0xb0>)
 8005264:	689a      	ldr	r2, [r3, #8]
 8005266:	4923      	ldr	r1, [pc, #140]	; (80052f4 <thd1_execute+0xb4>)
 8005268:	6020      	str	r0, [r4, #0]
 800526a:	4633      	mov	r3, r6
 800526c:	9100      	str	r1, [sp, #0]
 800526e:	3a04      	subs	r2, #4
 8005270:	f505 70a4 	add.w	r0, r5, #328	; 0x148
 8005274:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005278:	f7fc fb42 	bl	8001900 <chThdCreateStatic>
 800527c:	69bb      	ldr	r3, [r7, #24]
 800527e:	491e      	ldr	r1, [pc, #120]	; (80052f8 <thd1_execute+0xb8>)
 8005280:	689a      	ldr	r2, [r3, #8]
 8005282:	6060      	str	r0, [r4, #4]
 8005284:	4633      	mov	r3, r6
 8005286:	9100      	str	r1, [sp, #0]
 8005288:	3a03      	subs	r2, #3
 800528a:	f505 7024 	add.w	r0, r5, #656	; 0x290
 800528e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8005292:	f7fc fb35 	bl	8001900 <chThdCreateStatic>
 8005296:	69bb      	ldr	r3, [r7, #24]
 8005298:	4918      	ldr	r1, [pc, #96]	; (80052fc <thd1_execute+0xbc>)
 800529a:	689a      	ldr	r2, [r3, #8]
 800529c:	60a0      	str	r0, [r4, #8]
 800529e:	4633      	mov	r3, r6
 80052a0:	9100      	str	r1, [sp, #0]
 80052a2:	3a02      	subs	r2, #2
 80052a4:	f505 7076 	add.w	r0, r5, #984	; 0x3d8
 80052a8:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80052ac:	f7fc fb28 	bl	8001900 <chThdCreateStatic>
 80052b0:	69bb      	ldr	r3, [r7, #24]
 80052b2:	4913      	ldr	r1, [pc, #76]	; (8005300 <thd1_execute+0xc0>)
 80052b4:	689a      	ldr	r2, [r3, #8]
 80052b6:	60e0      	str	r0, [r4, #12]
 80052b8:	3a01      	subs	r2, #1
 80052ba:	4633      	mov	r3, r6
 80052bc:	9100      	str	r1, [sp, #0]
 80052be:	f505 60a4 	add.w	r0, r5, #1312	; 0x520
 80052c2:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80052c6:	f7fc fb1b 	bl	8001900 <chThdCreateStatic>
 80052ca:	6120      	str	r0, [r4, #16]
 80052cc:	f7fe fba8 	bl	8003a20 <test_wait_threads>
 80052d0:	2001      	movs	r0, #1
 80052d2:	490c      	ldr	r1, [pc, #48]	; (8005304 <thd1_execute+0xc4>)
 80052d4:	b003      	add	sp, #12
 80052d6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80052da:	f7fb b9f1 	b.w	80006c0 <_test_assert_sequence>
 80052de:	bf00      	nop
 80052e0:	20000930 	.word	0x20000930
 80052e4:	08000791 	.word	0x08000791
 80052e8:	20000b38 	.word	0x20000b38
 80052ec:	08005e94 	.word	0x08005e94
 80052f0:	200011cc 	.word	0x200011cc
 80052f4:	08005c48 	.word	0x08005c48
 80052f8:	08005c44 	.word	0x08005c44
 80052fc:	08005c40 	.word	0x08005c40
 8005300:	08005c50 	.word	0x08005c50
 8005304:	08005e90 	.word	0x08005e90
	...

08005310 <main>:
 8005310:	2400      	movs	r4, #0
 8005312:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005316:	f04f 5a80 	mov.w	sl, #268435456	; 0x10000000
 800531a:	f04f 0901 	mov.w	r9, #1
 800531e:	f04f 3088 	mov.w	r0, #2290649224	; 0x88888888
 8005322:	4aaa      	ldr	r2, [pc, #680]	; (80055cc <main+0x2bc>)
 8005324:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8005328:	4da9      	ldr	r5, [pc, #676]	; (80055d0 <main+0x2c0>)
 800532a:	4617      	mov	r7, r2
 800532c:	692e      	ldr	r6, [r5, #16]
 800532e:	6129      	str	r1, [r5, #16]
 8005330:	612c      	str	r4, [r5, #16]
 8005332:	68ee      	ldr	r6, [r5, #12]
 8005334:	60e9      	str	r1, [r5, #12]
 8005336:	60ec      	str	r4, [r5, #12]
 8005338:	69ee      	ldr	r6, [r5, #28]
 800533a:	f04f 0e10 	mov.w	lr, #16
 800533e:	ea46 060a 	orr.w	r6, r6, sl
 8005342:	61ee      	str	r6, [r5, #28]
 8005344:	69ee      	ldr	r6, [r5, #28]
 8005346:	f8df 82e4 	ldr.w	r8, [pc, #740]	; 800562c <main+0x31c>
 800534a:	f046 6600 	orr.w	r6, r6, #134217728	; 0x8000000
 800534e:	f882 9008 	strb.w	r9, [r2, #8]
 8005352:	61ee      	str	r6, [r5, #28]
 8005354:	f8d8 6000 	ldr.w	r6, [r8]
 8005358:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800535c:	f446 7680 	orr.w	r6, r6, #256	; 0x100
 8005360:	f8c8 6000 	str.w	r6, [r8]
 8005364:	f8d5 8018 	ldr.w	r8, [r5, #24]
 8005368:	4e9a      	ldr	r6, [pc, #616]	; (80055d4 <main+0x2c4>)
 800536a:	f048 087d 	orr.w	r8, r8, #125	; 0x7d
 800536e:	f8c5 8018 	str.w	r8, [r5, #24]
 8005372:	f8df 82bc 	ldr.w	r8, [pc, #700]	; 8005630 <main+0x320>
 8005376:	f64f 7cff 	movw	ip, #65535	; 0xffff
 800537a:	f8c6 800c 	str.w	r8, [r6, #12]
 800537e:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 8005634 <main+0x324>
 8005382:	6070      	str	r0, [r6, #4]
 8005384:	f8c6 8000 	str.w	r8, [r6]
 8005388:	f8c6 140c 	str.w	r1, [r6, #1036]	; 0x40c
 800538c:	f8df 8298 	ldr.w	r8, [pc, #664]	; 8005628 <main+0x318>
 8005390:	f8c6 0404 	str.w	r0, [r6, #1028]	; 0x404
 8005394:	f8c6 0400 	str.w	r0, [r6, #1024]	; 0x400
 8005398:	4e8f      	ldr	r6, [pc, #572]	; (80055d8 <main+0x2c8>)
 800539a:	f8c8 100c 	str.w	r1, [r8, #12]
 800539e:	f8c8 6004 	str.w	r6, [r8, #4]
 80053a2:	f8c8 0000 	str.w	r0, [r8]
 80053a6:	4e8d      	ldr	r6, [pc, #564]	; (80055dc <main+0x2cc>)
 80053a8:	f8df 828c 	ldr.w	r8, [pc, #652]	; 8005638 <main+0x328>
 80053ac:	60f1      	str	r1, [r6, #12]
 80053ae:	6070      	str	r0, [r6, #4]
 80053b0:	f8c6 8000 	str.w	r8, [r6]
 80053b4:	f8df 8284 	ldr.w	r8, [pc, #644]	; 800563c <main+0x32c>
 80053b8:	f64f 0bff 	movw	fp, #63743	; 0xf8ff
 80053bc:	f8c8 100c 	str.w	r1, [r8, #12]
 80053c0:	f8c8 0004 	str.w	r0, [r8, #4]
 80053c4:	f8c8 0000 	str.w	r0, [r8]
 80053c8:	4885      	ldr	r0, [pc, #532]	; (80055e0 <main+0x2d0>)
 80053ca:	f107 0874 	add.w	r8, r7, #116	; 0x74
 80053ce:	f842 0b04 	str.w	r0, [r2], #4
 80053d2:	607a      	str	r2, [r7, #4]
 80053d4:	69ea      	ldr	r2, [r5, #28]
 80053d6:	f107 000c 	add.w	r0, r7, #12
 80053da:	ea42 0209 	orr.w	r2, r2, r9
 80053de:	60f8      	str	r0, [r7, #12]
 80053e0:	6138      	str	r0, [r7, #16]
 80053e2:	61ea      	str	r2, [r5, #28]
 80053e4:	4a7f      	ldr	r2, [pc, #508]	; (80055e4 <main+0x2d4>)
 80053e6:	4880      	ldr	r0, [pc, #512]	; (80055e8 <main+0x2d8>)
 80053e8:	64fa      	str	r2, [r7, #76]	; 0x4c
 80053ea:	4a80      	ldr	r2, [pc, #512]	; (80055ec <main+0x2dc>)
 80053ec:	f8c7 e038 	str.w	lr, [r7, #56]	; 0x38
 80053f0:	617c      	str	r4, [r7, #20]
 80053f2:	677a      	str	r2, [r7, #116]	; 0x74
 80053f4:	6842      	ldr	r2, [r0, #4]
 80053f6:	f8c7 8040 	str.w	r8, [r7, #64]	; 0x40
 80053fa:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80053fe:	e9c7 470a 	strd	r4, r7, [r7, #40]	; 0x28
 8005402:	653f      	str	r7, [r7, #80]	; 0x50
 8005404:	6042      	str	r2, [r0, #4]
 8005406:	f64b 307f 	movw	r0, #47999	; 0xbb7f
 800540a:	6298      	str	r0, [r3, #40]	; 0x28
 800540c:	f8c3 c02c 	str.w	ip, [r3, #44]	; 0x2c
 8005410:	619c      	str	r4, [r3, #24]
 8005412:	635c      	str	r4, [r3, #52]	; 0x34
 8005414:	60dc      	str	r4, [r3, #12]
 8005416:	605c      	str	r4, [r3, #4]
 8005418:	f8c3 9014 	str.w	r9, [r3, #20]
 800541c:	f8c3 9000 	str.w	r9, [r3]
 8005420:	f06f 037f 	mvn.w	r3, #127	; 0x7f
 8005424:	f8df 8218 	ldr.w	r8, [pc, #536]	; 8005640 <main+0x330>
 8005428:	4a71      	ldr	r2, [pc, #452]	; (80055f0 <main+0x2e0>)
 800542a:	f888 331c 	strb.w	r3, [r8, #796]	; 0x31c
 800542e:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8005432:	61bb      	str	r3, [r7, #24]
 8005434:	e9c7 3308 	strd	r3, r3, [r7, #32]
 8005438:	f107 0364 	add.w	r3, r7, #100	; 0x64
 800543c:	61fb      	str	r3, [r7, #28]
 800543e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005440:	e9c7 3311 	strd	r3, r3, [r7, #68]	; 0x44
 8005444:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8005448:	e9c7 330c 	strd	r3, r3, [r7, #48]	; 0x30
 800544c:	4b69      	ldr	r3, [pc, #420]	; (80055f4 <main+0x2e4>)
 800544e:	f8c8 a180 	str.w	sl, [r8, #384]	; 0x180
 8005452:	f8c8 a000 	str.w	sl, [r8]
 8005456:	609c      	str	r4, [r3, #8]
 8005458:	68d8      	ldr	r0, [r3, #12]
 800545a:	b08d      	sub	sp, #52	; 0x34
 800545c:	ea00 000b 	and.w	r0, r0, fp
 8005460:	4302      	orrs	r2, r0
 8005462:	4865      	ldr	r0, [pc, #404]	; (80055f8 <main+0x2e8>)
 8005464:	60da      	str	r2, [r3, #12]
 8005466:	68c2      	ldr	r2, [r0, #12]
 8005468:	2640      	movs	r6, #64	; 0x40
 800546a:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800546e:	60c2      	str	r2, [r0, #12]
 8005470:	4862      	ldr	r0, [pc, #392]	; (80055fc <main+0x2ec>)
 8005472:	f8df a1d0 	ldr.w	sl, [pc, #464]	; 8005644 <main+0x334>
 8005476:	6802      	ldr	r2, [r0, #0]
 8005478:	ea42 0209 	orr.w	r2, r2, r9
 800547c:	6002      	str	r2, [r0, #0]
 800547e:	f04f 0220 	mov.w	r2, #32
 8005482:	f883 e01f 	strb.w	lr, [r3, #31]
 8005486:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
 800548a:	2200      	movs	r2, #0
 800548c:	e9cd 1406 	strd	r1, r4, [sp, #24]
 8005490:	2100      	movs	r1, #0
 8005492:	f10a 031c 	add.w	r3, sl, #28
 8005496:	f8ca c024 	str.w	ip, [sl, #36]	; 0x24
 800549a:	a806      	add	r0, sp, #24
 800549c:	e9ca aa00 	strd	sl, sl, [sl]
 80054a0:	e9cd 120a 	strd	r1, r2, [sp, #40]	; 0x28
 80054a4:	e9ca 3307 	strd	r3, r3, [sl, #28]
 80054a8:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80054ac:	f8ca 4008 	str.w	r4, [sl, #8]
 80054b0:	e9ca aa04 	strd	sl, sl, [sl, #16]
 80054b4:	f8ca 4070 	str.w	r4, [sl, #112]	; 0x70
 80054b8:	f7fa feba 	bl	8000230 <chTMStartMeasurementX.constprop.55>
 80054bc:	a806      	add	r0, sp, #24
 80054be:	f7fb fb57 	bl	8000b70 <chTMStopMeasurementX>
 80054c2:	4a4f      	ldr	r2, [pc, #316]	; (8005600 <main+0x2f0>)
 80054c4:	9b08      	ldr	r3, [sp, #32]
 80054c6:	f8da c014 	ldr.w	ip, [sl, #20]
 80054ca:	f8ca 3070 	str.w	r3, [sl, #112]	; 0x70
 80054ce:	f102 0310 	add.w	r3, r2, #16
 80054d2:	e9c2 3304 	strd	r3, r3, [r2, #16]
 80054d6:	f10a 032c 	add.w	r3, sl, #44	; 0x2c
 80054da:	f8ca c040 	str.w	ip, [sl, #64]	; 0x40
 80054de:	6194      	str	r4, [r2, #24]
 80054e0:	f88a 4049 	strb.w	r4, [sl, #73]	; 0x49
 80054e4:	e9ca 4418 	strd	r4, r4, [sl, #96]	; 0x60
 80054e8:	f88a 904a 	strb.w	r9, [sl, #74]	; 0x4a
 80054ec:	f8ca 4044 	str.w	r4, [sl, #68]	; 0x44
 80054f0:	f8ca a03c 	str.w	sl, [sl, #60]	; 0x3c
 80054f4:	f8ca 6034 	str.w	r6, [sl, #52]	; 0x34
 80054f8:	f8ca 6068 	str.w	r6, [sl, #104]	; 0x68
 80054fc:	f8cc 3010 	str.w	r3, [ip, #16]
 8005500:	f8df c144 	ldr.w	ip, [pc, #324]	; 8005648 <main+0x338>
 8005504:	e9ca 3305 	strd	r3, r3, [sl, #20]
 8005508:	f10a 0350 	add.w	r3, sl, #80	; 0x50
 800550c:	f8ca 3050 	str.w	r3, [sl, #80]	; 0x50
 8005510:	483c      	ldr	r0, [pc, #240]	; (8005604 <main+0x2f4>)
 8005512:	f10a 0354 	add.w	r3, sl, #84	; 0x54
 8005516:	493c      	ldr	r1, [pc, #240]	; (8005608 <main+0x2f8>)
 8005518:	f8c2 c000 	str.w	ip, [r2]
 800551c:	e9c2 4402 	strd	r4, r4, [r2, #8]
 8005520:	e9ca 3315 	strd	r3, r3, [sl, #84]	; 0x54
 8005524:	4a39      	ldr	r2, [pc, #228]	; (800560c <main+0x2fc>)
 8005526:	4b3a      	ldr	r3, [pc, #232]	; (8005610 <main+0x300>)
 8005528:	f020 0007 	bic.w	r0, r0, #7
 800552c:	f021 0107 	bic.w	r1, r1, #7
 8005530:	f88a 9048 	strb.w	r9, [sl, #72]	; 0x48
 8005534:	6010      	str	r0, [r2, #0]
 8005536:	6019      	str	r1, [r3, #0]
 8005538:	f384 8811 	msr	BASEPRI, r4
 800553c:	b662      	cpsie	i
 800553e:	4935      	ldr	r1, [pc, #212]	; (8005614 <main+0x304>)
 8005540:	f8da 3018 	ldr.w	r3, [sl, #24]
 8005544:	464a      	mov	r2, r9
 8005546:	6199      	str	r1, [r3, #24]
 8005548:	f10a 0078 	add.w	r0, sl, #120	; 0x78
 800554c:	4b32      	ldr	r3, [pc, #200]	; (8005618 <main+0x308>)
 800554e:	9400      	str	r4, [sp, #0]
 8005550:	21d8      	movs	r1, #216	; 0xd8
 8005552:	f7fc f9d5 	bl	8001900 <chThdCreateStatic>
 8005556:	4b31      	ldr	r3, [pc, #196]	; (800561c <main+0x30c>)
 8005558:	6183      	str	r3, [r0, #24]
 800555a:	2320      	movs	r3, #32
 800555c:	f383 8811 	msr	BASEPRI, r3
 8005560:	7a3b      	ldrb	r3, [r7, #8]
 8005562:	454b      	cmp	r3, r9
 8005564:	d10a      	bne.n	800557c <main+0x26c>
 8005566:	22c0      	movs	r2, #192	; 0xc0
 8005568:	69eb      	ldr	r3, [r5, #28]
 800556a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800556e:	61eb      	str	r3, [r5, #28]
 8005570:	f888 2326 	strb.w	r2, [r8, #806]	; 0x326
 8005574:	f8c8 6184 	str.w	r6, [r8, #388]	; 0x184
 8005578:	f8c8 6004 	str.w	r6, [r8, #4]
 800557c:	f240 2271 	movw	r2, #625	; 0x271
 8005580:	4b12      	ldr	r3, [pc, #72]	; (80055cc <main+0x2bc>)
 8005582:	f244 0540 	movw	r5, #16448	; 0x4040
 8005586:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005588:	2401      	movs	r4, #1
 800558a:	811a      	strh	r2, [r3, #8]
 800558c:	f242 102c 	movw	r0, #8492	; 0x212c
 8005590:	2200      	movs	r2, #0
 8005592:	2102      	movs	r1, #2
 8005594:	821d      	strh	r5, [r3, #16]
 8005596:	829c      	strh	r4, [r3, #20]
 8005598:	8198      	strh	r0, [r3, #12]
 800559a:	801a      	strh	r2, [r3, #0]
 800559c:	8818      	ldrh	r0, [r3, #0]
 800559e:	889b      	ldrh	r3, [r3, #4]
 80055a0:	4b0a      	ldr	r3, [pc, #40]	; (80055cc <main+0x2bc>)
 80055a2:	7219      	strb	r1, [r3, #8]
 80055a4:	f382 8811 	msr	BASEPRI, r2
 80055a8:	4b1d      	ldr	r3, [pc, #116]	; (8005620 <main+0x310>)
 80055aa:	9200      	str	r2, [sp, #0]
 80055ac:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80055b0:	2240      	movs	r2, #64	; 0x40
 80055b2:	481c      	ldr	r0, [pc, #112]	; (8005624 <main+0x314>)
 80055b4:	f7fc f9a4 	bl	8001900 <chThdCreateStatic>
 80055b8:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800564c <main+0x33c>
 80055bc:	f8df 8090 	ldr.w	r8, [pc, #144]	; 8005650 <main+0x340>
 80055c0:	f8df a090 	ldr.w	sl, [pc, #144]	; 8005654 <main+0x344>
 80055c4:	f8df b090 	ldr.w	fp, [pc, #144]	; 8005658 <main+0x348>
 80055c8:	e04c      	b.n	8005664 <main+0x354>
 80055ca:	bf00      	nop
 80055cc:	200008b8 	.word	0x200008b8
 80055d0:	40021000 	.word	0x40021000
 80055d4:	40010800 	.word	0x40010800
 80055d8:	88488888 	.word	0x88488888
 80055dc:	40011400 	.word	0x40011400
 80055e0:	08006790 	.word	0x08006790
 80055e4:	080002c1 	.word	0x080002c1
 80055e8:	e0042000 	.word	0xe0042000
 80055ec:	40004400 	.word	0x40004400
 80055f0:	05fa0300 	.word	0x05fa0300
 80055f4:	e000ed00 	.word	0xe000ed00
 80055f8:	e000edf0 	.word	0xe000edf0
 80055fc:	e0001000 	.word	0xe0001000
 8005600:	20000a88 	.word	0x20000a88
 8005604:	2000137f 	.word	0x2000137f
 8005608:	20005000 	.word	0x20005000
 800560c:	20000b24 	.word	0x20000b24
 8005610:	20000aa8 	.word	0x20000aa8
 8005614:	08005c10 	.word	0x08005c10
 8005618:	08000271 	.word	0x08000271
 800561c:	08005d60 	.word	0x08005d60
 8005620:	080026b1 	.word	0x080026b1
 8005624:	20001230 	.word	0x20001230
 8005628:	40011000 	.word	0x40011000
 800562c:	40007000 	.word	0x40007000
 8005630:	ffffbfdf 	.word	0xffffbfdf
 8005634:	88384b88 	.word	0x88384b88
 8005638:	88888844 	.word	0x88888844
 800563c:	40011800 	.word	0x40011800
 8005640:	e000e100 	.word	0xe000e100
 8005644:	20000930 	.word	0x20000930
 8005648:	08000281 	.word	0x08000281
 800564c:	20000a80 	.word	0x20000a80
 8005650:	200011f0 	.word	0x200011f0
 8005654:	20000b04 	.word	0x20000b04
 8005658:	200011cc 	.word	0x200011cc
 800565c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8005660:	f7fd f816 	bl	8002690 <chThdSleep>
 8005664:	4ba3      	ldr	r3, [pc, #652]	; (80058f4 <main+0x5e4>)
 8005666:	689b      	ldr	r3, [r3, #8]
 8005668:	049b      	lsls	r3, r3, #18
 800566a:	d4f7      	bmi.n	800565c <main+0x34c>
 800566c:	4ba2      	ldr	r3, [pc, #648]	; (80058f8 <main+0x5e8>)
 800566e:	48a3      	ldr	r0, [pc, #652]	; (80058fc <main+0x5ec>)
 8005670:	f8c9 3000 	str.w	r3, [r9]
 8005674:	f7fb f89c 	bl	80007b0 <test_println>
 8005678:	48a1      	ldr	r0, [pc, #644]	; (8005900 <main+0x5f0>)
 800567a:	f7fb f899 	bl	80007b0 <test_println>
 800567e:	48a1      	ldr	r0, [pc, #644]	; (8005904 <main+0x5f4>)
 8005680:	f7fb f896 	bl	80007b0 <test_println>
 8005684:	212a      	movs	r1, #42	; 0x2a
 8005686:	4ca0      	ldr	r4, [pc, #640]	; (8005908 <main+0x5f8>)
 8005688:	f8d9 0000 	ldr.w	r0, [r9]
 800568c:	6803      	ldr	r3, [r0, #0]
 800568e:	689b      	ldr	r3, [r3, #8]
 8005690:	4798      	blx	r3
 8005692:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005696:	2900      	cmp	r1, #0
 8005698:	d1f6      	bne.n	8005688 <main+0x378>
 800569a:	489c      	ldr	r0, [pc, #624]	; (800590c <main+0x5fc>)
 800569c:	f7fb f888 	bl	80007b0 <test_println>
 80056a0:	212a      	movs	r1, #42	; 0x2a
 80056a2:	4c9b      	ldr	r4, [pc, #620]	; (8005910 <main+0x600>)
 80056a4:	f8d9 0000 	ldr.w	r0, [r9]
 80056a8:	6803      	ldr	r3, [r0, #0]
 80056aa:	689b      	ldr	r3, [r3, #8]
 80056ac:	4798      	blx	r3
 80056ae:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80056b2:	2900      	cmp	r1, #0
 80056b4:	d1f6      	bne.n	80056a4 <main+0x394>
 80056b6:	4897      	ldr	r0, [pc, #604]	; (8005914 <main+0x604>)
 80056b8:	f7fb f87a 	bl	80007b0 <test_println>
 80056bc:	212a      	movs	r1, #42	; 0x2a
 80056be:	4c96      	ldr	r4, [pc, #600]	; (8005918 <main+0x608>)
 80056c0:	f8d9 0000 	ldr.w	r0, [r9]
 80056c4:	6803      	ldr	r3, [r0, #0]
 80056c6:	689b      	ldr	r3, [r3, #8]
 80056c8:	4798      	blx	r3
 80056ca:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80056ce:	2900      	cmp	r1, #0
 80056d0:	d1f6      	bne.n	80056c0 <main+0x3b0>
 80056d2:	4892      	ldr	r0, [pc, #584]	; (800591c <main+0x60c>)
 80056d4:	f7fb f86c 	bl	80007b0 <test_println>
 80056d8:	212a      	movs	r1, #42	; 0x2a
 80056da:	4c91      	ldr	r4, [pc, #580]	; (8005920 <main+0x610>)
 80056dc:	f8d9 0000 	ldr.w	r0, [r9]
 80056e0:	6803      	ldr	r3, [r0, #0]
 80056e2:	689b      	ldr	r3, [r3, #8]
 80056e4:	4798      	blx	r3
 80056e6:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80056ea:	2900      	cmp	r1, #0
 80056ec:	d1f6      	bne.n	80056dc <main+0x3cc>
 80056ee:	488d      	ldr	r0, [pc, #564]	; (8005924 <main+0x614>)
 80056f0:	f7fb f85e 	bl	80007b0 <test_println>
 80056f4:	212a      	movs	r1, #42	; 0x2a
 80056f6:	4c8c      	ldr	r4, [pc, #560]	; (8005928 <main+0x618>)
 80056f8:	f8d9 0000 	ldr.w	r0, [r9]
 80056fc:	6803      	ldr	r3, [r0, #0]
 80056fe:	689b      	ldr	r3, [r3, #8]
 8005700:	4798      	blx	r3
 8005702:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005706:	2900      	cmp	r1, #0
 8005708:	d1f6      	bne.n	80056f8 <main+0x3e8>
 800570a:	4888      	ldr	r0, [pc, #544]	; (800592c <main+0x61c>)
 800570c:	f7fb f850 	bl	80007b0 <test_println>
 8005710:	212a      	movs	r1, #42	; 0x2a
 8005712:	4c87      	ldr	r4, [pc, #540]	; (8005930 <main+0x620>)
 8005714:	f8d9 0000 	ldr.w	r0, [r9]
 8005718:	6803      	ldr	r3, [r0, #0]
 800571a:	689b      	ldr	r3, [r3, #8]
 800571c:	4798      	blx	r3
 800571e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8005722:	2900      	cmp	r1, #0
 8005724:	d1f6      	bne.n	8005714 <main+0x404>
 8005726:	4883      	ldr	r0, [pc, #524]	; (8005934 <main+0x624>)
 8005728:	f7fb f842 	bl	80007b0 <test_println>
 800572c:	212a      	movs	r1, #42	; 0x2a
 800572e:	4c82      	ldr	r4, [pc, #520]	; (8005938 <main+0x628>)
 8005730:	f8d9 0000 	ldr.w	r0, [r9]
 8005734:	6803      	ldr	r3, [r0, #0]
 8005736:	689b      	ldr	r3, [r3, #8]
 8005738:	4798      	blx	r3
 800573a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800573e:	2900      	cmp	r1, #0
 8005740:	d1f6      	bne.n	8005730 <main+0x420>
 8005742:	487e      	ldr	r0, [pc, #504]	; (800593c <main+0x62c>)
 8005744:	f7fb f834 	bl	80007b0 <test_println>
 8005748:	212a      	movs	r1, #42	; 0x2a
 800574a:	4c7d      	ldr	r4, [pc, #500]	; (8005940 <main+0x630>)
 800574c:	f8d9 0000 	ldr.w	r0, [r9]
 8005750:	6803      	ldr	r3, [r0, #0]
 8005752:	689b      	ldr	r3, [r3, #8]
 8005754:	4798      	blx	r3
 8005756:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800575a:	2900      	cmp	r1, #0
 800575c:	d1f6      	bne.n	800574c <main+0x43c>
 800575e:	4879      	ldr	r0, [pc, #484]	; (8005944 <main+0x634>)
 8005760:	9103      	str	r1, [sp, #12]
 8005762:	f7fb f825 	bl	80007b0 <test_println>
 8005766:	4865      	ldr	r0, [pc, #404]	; (80058fc <main+0x5ec>)
 8005768:	f7fb f822 	bl	80007b0 <test_println>
 800576c:	4b76      	ldr	r3, [pc, #472]	; (8005948 <main+0x638>)
 800576e:	9903      	ldr	r1, [sp, #12]
 8005770:	4d76      	ldr	r5, [pc, #472]	; (800594c <main+0x63c>)
 8005772:	7019      	strb	r1, [r3, #0]
 8005774:	4b76      	ldr	r3, [pc, #472]	; (8005950 <main+0x640>)
 8005776:	9305      	str	r3, [sp, #20]
 8005778:	4b76      	ldr	r3, [pc, #472]	; (8005954 <main+0x644>)
 800577a:	9304      	str	r3, [sp, #16]
 800577c:	4b76      	ldr	r3, [pc, #472]	; (8005958 <main+0x648>)
 800577e:	9a03      	ldr	r2, [sp, #12]
 8005780:	2400      	movs	r4, #0
 8005782:	3201      	adds	r2, #1
 8005784:	9203      	str	r2, [sp, #12]
 8005786:	2b00      	cmp	r3, #0
 8005788:	f000 808a 	beq.w	80058a0 <main+0x590>
 800578c:	f7fa ff48 	bl	8000620 <print_line>
 8005790:	212d      	movs	r1, #45	; 0x2d
 8005792:	4e72      	ldr	r6, [pc, #456]	; (800595c <main+0x64c>)
 8005794:	f8d9 0000 	ldr.w	r0, [r9]
 8005798:	6803      	ldr	r3, [r0, #0]
 800579a:	689b      	ldr	r3, [r3, #8]
 800579c:	4798      	blx	r3
 800579e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80057a2:	2900      	cmp	r1, #0
 80057a4:	d1f6      	bne.n	8005794 <main+0x484>
 80057a6:	9803      	ldr	r0, [sp, #12]
 80057a8:	f7fa ff2a 	bl	8000600 <test_printn>
 80057ac:	f8d9 0000 	ldr.w	r0, [r9]
 80057b0:	212e      	movs	r1, #46	; 0x2e
 80057b2:	6803      	ldr	r3, [r0, #0]
 80057b4:	1c66      	adds	r6, r4, #1
 80057b6:	689b      	ldr	r3, [r3, #8]
 80057b8:	4798      	blx	r3
 80057ba:	4630      	mov	r0, r6
 80057bc:	f7fa ff20 	bl	8000600 <test_printn>
 80057c0:	2120      	movs	r1, #32
 80057c2:	4f67      	ldr	r7, [pc, #412]	; (8005960 <main+0x650>)
 80057c4:	f8d9 0000 	ldr.w	r0, [r9]
 80057c8:	6803      	ldr	r3, [r0, #0]
 80057ca:	689b      	ldr	r3, [r3, #8]
 80057cc:	4798      	blx	r3
 80057ce:	f817 1f01 	ldrb.w	r1, [r7, #1]!
 80057d2:	2900      	cmp	r1, #0
 80057d4:	d1f6      	bne.n	80057c4 <main+0x4b4>
 80057d6:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 80057da:	681f      	ldr	r7, [r3, #0]
 80057dc:	7839      	ldrb	r1, [r7, #0]
 80057de:	b141      	cbz	r1, 80057f2 <main+0x4e2>
 80057e0:	f8d9 0000 	ldr.w	r0, [r9]
 80057e4:	6803      	ldr	r3, [r0, #0]
 80057e6:	689b      	ldr	r3, [r3, #8]
 80057e8:	4798      	blx	r3
 80057ea:	f817 1f01 	ldrb.w	r1, [r7, #1]!
 80057ee:	2900      	cmp	r1, #0
 80057f0:	d1f6      	bne.n	80057e0 <main+0x4d0>
 80057f2:	485c      	ldr	r0, [pc, #368]	; (8005964 <main+0x654>)
 80057f4:	f7fa ffdc 	bl	80007b0 <test_println>
 80057f8:	20c8      	movs	r0, #200	; 0xc8
 80057fa:	f7fc ff49 	bl	8002690 <chThdSleep>
 80057fe:	2300      	movs	r3, #0
 8005800:	f855 7024 	ldr.w	r7, [r5, r4, lsl #2]
 8005804:	e9cb 3300 	strd	r3, r3, [fp]
 8005808:	e9cb 3302 	strd	r3, r3, [fp, #8]
 800580c:	f8cb 3010 	str.w	r3, [fp, #16]
 8005810:	4a55      	ldr	r2, [pc, #340]	; (8005968 <main+0x658>)
 8005812:	6879      	ldr	r1, [r7, #4]
 8005814:	f8c8 2000 	str.w	r2, [r8]
 8005818:	f88a 3000 	strb.w	r3, [sl]
 800581c:	b101      	cbz	r1, 8005820 <main+0x510>
 800581e:	4788      	blx	r1
 8005820:	68fb      	ldr	r3, [r7, #12]
 8005822:	4798      	blx	r3
 8005824:	68bb      	ldr	r3, [r7, #8]
 8005826:	b103      	cbz	r3, 800582a <main+0x51a>
 8005828:	4798      	blx	r3
 800582a:	f7fe f8f9 	bl	8003a20 <test_wait_threads>
 800582e:	f89a 3000 	ldrb.w	r3, [sl]
 8005832:	2b00      	cmp	r3, #0
 8005834:	d03e      	beq.n	80058b4 <main+0x5a4>
 8005836:	212d      	movs	r1, #45	; 0x2d
 8005838:	4f4c      	ldr	r7, [pc, #304]	; (800596c <main+0x65c>)
 800583a:	f8d9 0000 	ldr.w	r0, [r9]
 800583e:	6803      	ldr	r3, [r0, #0]
 8005840:	689b      	ldr	r3, [r3, #8]
 8005842:	4798      	blx	r3
 8005844:	f817 1f01 	ldrb.w	r1, [r7, #1]!
 8005848:	2900      	cmp	r1, #0
 800584a:	d1f6      	bne.n	800583a <main+0x52a>
 800584c:	4b48      	ldr	r3, [pc, #288]	; (8005970 <main+0x660>)
 800584e:	4f49      	ldr	r7, [pc, #292]	; (8005974 <main+0x664>)
 8005850:	6818      	ldr	r0, [r3, #0]
 8005852:	f7fa fed5 	bl	8000600 <test_printn>
 8005856:	2120      	movs	r1, #32
 8005858:	f8d9 0000 	ldr.w	r0, [r9]
 800585c:	6803      	ldr	r3, [r0, #0]
 800585e:	689b      	ldr	r3, [r3, #8]
 8005860:	4798      	blx	r3
 8005862:	f817 1f01 	ldrb.w	r1, [r7, #1]!
 8005866:	2900      	cmp	r1, #0
 8005868:	d1f6      	bne.n	8005858 <main+0x548>
 800586a:	f8d8 3000 	ldr.w	r3, [r8]
 800586e:	4a3e      	ldr	r2, [pc, #248]	; (8005968 <main+0x658>)
 8005870:	4293      	cmp	r3, r2
 8005872:	d90b      	bls.n	800588c <main+0x57c>
 8005874:	4617      	mov	r7, r2
 8005876:	f8d9 0000 	ldr.w	r0, [r9]
 800587a:	f817 1b01 	ldrb.w	r1, [r7], #1
 800587e:	6803      	ldr	r3, [r0, #0]
 8005880:	689b      	ldr	r3, [r3, #8]
 8005882:	4798      	blx	r3
 8005884:	f8d8 3000 	ldr.w	r3, [r8]
 8005888:	429f      	cmp	r7, r3
 800588a:	d3f4      	bcc.n	8005876 <main+0x566>
 800588c:	483a      	ldr	r0, [pc, #232]	; (8005978 <main+0x668>)
 800588e:	f7fa ff8f 	bl	80007b0 <test_println>
 8005892:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8005896:	685b      	ldr	r3, [r3, #4]
 8005898:	4634      	mov	r4, r6
 800589a:	2b00      	cmp	r3, #0
 800589c:	f47f af76 	bne.w	800578c <main+0x47c>
 80058a0:	9d04      	ldr	r5, [sp, #16]
 80058a2:	b15d      	cbz	r5, 80058bc <main+0x5ac>
 80058a4:	9a05      	ldr	r2, [sp, #20]
 80058a6:	682b      	ldr	r3, [r5, #0]
 80058a8:	4611      	mov	r1, r2
 80058aa:	f851 2f04 	ldr.w	r2, [r1, #4]!
 80058ae:	9204      	str	r2, [sp, #16]
 80058b0:	9105      	str	r1, [sp, #20]
 80058b2:	e764      	b.n	800577e <main+0x46e>
 80058b4:	4831      	ldr	r0, [pc, #196]	; (800597c <main+0x66c>)
 80058b6:	f7fa ff7b 	bl	80007b0 <test_println>
 80058ba:	e7ea      	b.n	8005892 <main+0x582>
 80058bc:	f7fa feb0 	bl	8000620 <print_line>
 80058c0:	480e      	ldr	r0, [pc, #56]	; (80058fc <main+0x5ec>)
 80058c2:	f7fa ff75 	bl	80007b0 <test_println>
 80058c6:	2146      	movs	r1, #70	; 0x46
 80058c8:	4c2d      	ldr	r4, [pc, #180]	; (8005980 <main+0x670>)
 80058ca:	f8d9 0000 	ldr.w	r0, [r9]
 80058ce:	6803      	ldr	r3, [r0, #0]
 80058d0:	689b      	ldr	r3, [r3, #8]
 80058d2:	4798      	blx	r3
 80058d4:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80058d8:	2900      	cmp	r1, #0
 80058da:	d1f6      	bne.n	80058ca <main+0x5ba>
 80058dc:	4b1a      	ldr	r3, [pc, #104]	; (8005948 <main+0x638>)
 80058de:	781b      	ldrb	r3, [r3, #0]
 80058e0:	b91b      	cbnz	r3, 80058ea <main+0x5da>
 80058e2:	4828      	ldr	r0, [pc, #160]	; (8005984 <main+0x674>)
 80058e4:	f7fa ff64 	bl	80007b0 <test_println>
 80058e8:	e6b8      	b.n	800565c <main+0x34c>
 80058ea:	4827      	ldr	r0, [pc, #156]	; (8005988 <main+0x678>)
 80058ec:	f7fa ff60 	bl	80007b0 <test_println>
 80058f0:	e6b4      	b.n	800565c <main+0x34c>
 80058f2:	bf00      	nop
 80058f4:	40011000 	.word	0x40011000
 80058f8:	200008b8 	.word	0x200008b8
 80058fc:	08005be0 	.word	0x08005be0
 8005900:	08005d68 	.word	0x08005d68
 8005904:	08005d84 	.word	0x08005d84
 8005908:	08005c80 	.word	0x08005c80
 800590c:	08005d88 	.word	0x08005d88
 8005910:	08005c94 	.word	0x08005c94
 8005914:	08005d90 	.word	0x08005d90
 8005918:	08005ca8 	.word	0x08005ca8
 800591c:	08005da8 	.word	0x08005da8
 8005920:	08005cbc 	.word	0x08005cbc
 8005924:	08005df0 	.word	0x08005df0
 8005928:	08005cd0 	.word	0x08005cd0
 800592c:	08005df8 	.word	0x08005df8
 8005930:	08005ce4 	.word	0x08005ce4
 8005934:	08005e04 	.word	0x08005e04
 8005938:	08005cf8 	.word	0x08005cf8
 800593c:	08005e1c 	.word	0x08005e1c
 8005940:	08005d0c 	.word	0x08005d0c
 8005944:	08005e48 	.word	0x08005e48
 8005948:	200011a0 	.word	0x200011a0
 800594c:	08005fd0 	.word	0x08005fd0
 8005950:	08005f74 	.word	0x08005f74
 8005954:	08005fe0 	.word	0x08005fe0
 8005958:	08006720 	.word	0x08006720
 800595c:	08005d20 	.word	0x08005d20
 8005960:	08005d30 	.word	0x08005d30
 8005964:	08005e6c 	.word	0x08005e6c
 8005968:	200011e0 	.word	0x200011e0
 800596c:	08005d34 	.word	0x08005d34
 8005970:	20000aac 	.word	0x20000aac
 8005974:	08005d4c 	.word	0x08005d4c
 8005978:	08005e70 	.word	0x08005e70
 800597c:	08005e74 	.word	0x08005e74
 8005980:	08005d50 	.word	0x08005d50
 8005984:	08005e80 	.word	0x08005e80
 8005988:	08005e88 	.word	0x08005e88
 800598c:	00000000 	.word	0x00000000

08005990 <__early_init>:
 8005990:	4b17      	ldr	r3, [pc, #92]	; (80059f0 <__early_init+0x60>)
 8005992:	4619      	mov	r1, r3
 8005994:	681a      	ldr	r2, [r3, #0]
 8005996:	f042 0201 	orr.w	r2, r2, #1
 800599a:	601a      	str	r2, [r3, #0]
 800599c:	680b      	ldr	r3, [r1, #0]
 800599e:	079a      	lsls	r2, r3, #30
 80059a0:	d5fc      	bpl.n	800599c <__early_init+0xc>
 80059a2:	2000      	movs	r0, #0
 80059a4:	680b      	ldr	r3, [r1, #0]
 80059a6:	4a12      	ldr	r2, [pc, #72]	; (80059f0 <__early_init+0x60>)
 80059a8:	f003 03f9 	and.w	r3, r3, #249	; 0xf9
 80059ac:	600b      	str	r3, [r1, #0]
 80059ae:	6048      	str	r0, [r1, #4]
 80059b0:	6853      	ldr	r3, [r2, #4]
 80059b2:	f013 0f0c 	tst.w	r3, #12
 80059b6:	d1fb      	bne.n	80059b0 <__early_init+0x20>
 80059b8:	6853      	ldr	r3, [r2, #4]
 80059ba:	490d      	ldr	r1, [pc, #52]	; (80059f0 <__early_init+0x60>)
 80059bc:	f443 1320 	orr.w	r3, r3, #2621440	; 0x280000
 80059c0:	6053      	str	r3, [r2, #4]
 80059c2:	6813      	ldr	r3, [r2, #0]
 80059c4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80059c8:	6013      	str	r3, [r2, #0]
 80059ca:	680b      	ldr	r3, [r1, #0]
 80059cc:	019b      	lsls	r3, r3, #6
 80059ce:	d5fc      	bpl.n	80059ca <__early_init+0x3a>
 80059d0:	2211      	movs	r2, #17
 80059d2:	4b08      	ldr	r3, [pc, #32]	; (80059f4 <__early_init+0x64>)
 80059d4:	4808      	ldr	r0, [pc, #32]	; (80059f8 <__early_init+0x68>)
 80059d6:	6048      	str	r0, [r1, #4]
 80059d8:	601a      	str	r2, [r3, #0]
 80059da:	684b      	ldr	r3, [r1, #4]
 80059dc:	4a04      	ldr	r2, [pc, #16]	; (80059f0 <__early_init+0x60>)
 80059de:	f043 0302 	orr.w	r3, r3, #2
 80059e2:	604b      	str	r3, [r1, #4]
 80059e4:	6853      	ldr	r3, [r2, #4]
 80059e6:	f003 030c 	and.w	r3, r3, #12
 80059ea:	2b08      	cmp	r3, #8
 80059ec:	d1fa      	bne.n	80059e4 <__early_init+0x54>
 80059ee:	4770      	bx	lr
 80059f0:	40021000 	.word	0x40021000
 80059f4:	40022000 	.word	0x40022000
 80059f8:	00686400 	.word	0x00686400
 80059fc:	00000000 	.word	0x00000000

08005a00 <chThdExit>:
 8005a00:	b538      	push	{r3, r4, r5, lr}
 8005a02:	2220      	movs	r2, #32
 8005a04:	4603      	mov	r3, r0
 8005a06:	f382 8811 	msr	BASEPRI, r2
 8005a0a:	4a0e      	ldr	r2, [pc, #56]	; (8005a44 <chThdExit+0x44>)
 8005a0c:	6994      	ldr	r4, [r2, #24]
 8005a0e:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005a10:	f104 0524 	add.w	r5, r4, #36	; 0x24
 8005a14:	42a8      	cmp	r0, r5
 8005a16:	6223      	str	r3, [r4, #32]
 8005a18:	d006      	beq.n	8005a28 <chThdExit+0x28>
 8005a1a:	6803      	ldr	r3, [r0, #0]
 8005a1c:	6263      	str	r3, [r4, #36]	; 0x24
 8005a1e:	f7fb f907 	bl	8000c30 <chSchReadyI>
 8005a22:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005a24:	42a8      	cmp	r0, r5
 8005a26:	d1f8      	bne.n	8005a1a <chThdExit+0x1a>
 8005a28:	7f63      	ldrb	r3, [r4, #29]
 8005a2a:	079b      	lsls	r3, r3, #30
 8005a2c:	d104      	bne.n	8005a38 <chThdExit+0x38>
 8005a2e:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 8005a32:	611a      	str	r2, [r3, #16]
 8005a34:	6922      	ldr	r2, [r4, #16]
 8005a36:	6153      	str	r3, [r2, #20]
 8005a38:	200f      	movs	r0, #15
 8005a3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005a3e:	f7fb bf97 	b.w	8001970 <chSchGoSleepS>
 8005a42:	bf00      	nop
 8005a44:	20000930 	.word	0x20000930
	...

08005a50 <thread1.lto_priv.71>:
 8005a50:	f7ff bfd6 	b.w	8005a00 <chThdExit>
	...

08005a60 <chSchDoReschedule>:
 8005a60:	f7fb bd1e 	b.w	80014a0 <chSchDoRescheduleAhead>
	...

08005a70 <__default_exit>:
 8005a70:	e7fe      	b.n	8005a70 <__default_exit>
 8005a72:	bf00      	nop
	...

08005a80 <__late_init>:
 8005a80:	4770      	bx	lr
 8005a82:	bf00      	nop
	...
 8005a90:	6e696c62 	.word	0x6e696c62
 8005a94:	0072656b 	.word	0x0072656b
	...
 8005aa0:	61686e75 	.word	0x61686e75
 8005aa4:	656c646e 	.word	0x656c646e
 8005aa8:	78652064 	.word	0x78652064
 8005aac:	74706563 	.word	0x74706563
 8005ab0:	006e6f69 	.word	0x006e6f69
	...
 8005ac0:	202d2d2d 	.word	0x202d2d2d
 8005ac4:	726f6353 	.word	0x726f6353
 8005ac8:	203a2065 	.word	0x203a2065
 8005acc:	00000000 	.word	0x00000000
 8005ad0:	6d697420 	.word	0x6d697420
 8005ad4:	2f737265 	.word	0x2f737265
 8005ad8:	00000053 	.word	0x00000053
 8005adc:	00000000 	.word	0x00000000
 8005ae0:	69617720 	.word	0x69617720
 8005ae4:	69732b74 	.word	0x69732b74
 8005ae8:	6c616e67 	.word	0x6c616e67
 8005aec:	0000532f 	.word	0x0000532f
 8005af0:	636f6c20 	.word	0x636f6c20
 8005af4:	6e752b6b 	.word	0x6e752b6b
 8005af8:	6b636f6c 	.word	0x6b636f6c
 8005afc:	0000532f 	.word	0x0000532f
 8005b00:	202d2d2d 	.word	0x202d2d2d
 8005b04:	74737953 	.word	0x74737953
 8005b08:	203a6d65 	.word	0x203a6d65
 8005b0c:	00000000 	.word	0x00000000
 8005b10:	74796220 	.word	0x74796220
 8005b14:	00007365 	.word	0x00007365
 8005b18:	202d2d2d 	.word	0x202d2d2d
 8005b1c:	65726854 	.word	0x65726854
 8005b20:	203a6461 	.word	0x203a6461
 8005b24:	00000000 	.word	0x00000000
 8005b28:	202d2d2d 	.word	0x202d2d2d
 8005b2c:	656d6954 	.word	0x656d6954
 8005b30:	203a2072 	.word	0x203a2072
 8005b34:	00000000 	.word	0x00000000
 8005b38:	202d2d2d 	.word	0x202d2d2d
 8005b3c:	616d6553 	.word	0x616d6553
 8005b40:	203a6870 	.word	0x203a6870
 8005b44:	00000000 	.word	0x00000000
 8005b48:	202d2d2d 	.word	0x202d2d2d
 8005b4c:	6e657645 	.word	0x6e657645
 8005b50:	203a5374 	.word	0x203a5374
 8005b54:	00000000 	.word	0x00000000
 8005b58:	202d2d2d 	.word	0x202d2d2d
 8005b5c:	6e657645 	.word	0x6e657645
 8005b60:	203a4c74 	.word	0x203a4c74
 8005b64:	00000000 	.word	0x00000000
 8005b68:	202d2d2d 	.word	0x202d2d2d
 8005b6c:	6574754d 	.word	0x6574754d
 8005b70:	203a2078 	.word	0x203a2078
 8005b74:	00000000 	.word	0x00000000
 8005b78:	202d2d2d 	.word	0x202d2d2d
 8005b7c:	646e6f43 	.word	0x646e6f43
 8005b80:	203a2e56 	.word	0x203a2e56
 8005b84:	00000000 	.word	0x00000000
 8005b88:	202d2d2d 	.word	0x202d2d2d
 8005b8c:	75657551 	.word	0x75657551
 8005b90:	203a2065 	.word	0x203a2065
 8005b94:	00000000 	.word	0x00000000
 8005b98:	202d2d2d 	.word	0x202d2d2d
 8005b9c:	6c69614d 	.word	0x6c69614d
 8005ba0:	203a2e42 	.word	0x203a2e42
	...
 8005bb0:	67736d20 	.word	0x67736d20
 8005bb4:	2c532f73 	.word	0x2c532f73
 8005bb8:	00000020 	.word	0x00000020
 8005bbc:	00000000 	.word	0x00000000
 8005bc0:	72687420 	.word	0x72687420
 8005bc4:	73646165 	.word	0x73646165
 8005bc8:	0000532f 	.word	0x0000532f
 8005bcc:	00000000 	.word	0x00000000
 8005bd0:	73657220 	.word	0x73657220
 8005bd4:	64656863 	.word	0x64656863
 8005bd8:	73656c75 	.word	0x73656c75
 8005bdc:	202c532f 	.word	0x202c532f
	...
 8005bf0:	78746320 	.word	0x78746320
 8005bf4:	2f637773 	.word	0x2f637773
 8005bf8:	00000053 	.word	0x00000053
 8005bfc:	00000000 	.word	0x00000000
 8005c00:	74796220 	.word	0x74796220
 8005c04:	532f7365 	.word	0x532f7365
	...

08005c10 <ch_debug>:
 8005c10:	6e69616d 18011600 08440204 1814100c     main......D.....
 8005c20:	1e1d1c00 00000000 00000000 00000000     ................
 8005c30:	00004241 00000000 00000000 00000000     AB..............
 8005c40:	00000042 00000043 00000044 00000000     B...C...D.......
 8005c50:	00000041 00000000 00000000 00000000     A...............

08005c60 <evhndl>:
 8005c60:	08000781 08000771 08000761 00000000     ....q...a.......
 8005c70:	00434241 00000000 00000000 00000000     ABC.............
 8005c80:	202a2a2a 6e72654b 203a6c65 20202020     *** Kernel:     
 8005c90:	00002020 202a2a2a 706d6f43 64656c69       ..*** Compiled
 8005ca0:	2020203a 00002020 202a2a2a 706d6f43     :     ..*** Comp
 8005cb0:	72656c69 2020203a 00002020 202a2a2a     iler:     ..*** 
 8005cc0:	68637241 63657469 65727574 0000203a     Architecture: ..
 8005cd0:	202a2a2a 65726f43 72615620 746e6169     *** Core Variant
 8005ce0:	0000203a 202a2a2a 74726f50 666e4920     : ..*** Port Inf
 8005cf0:	20203a6f 00002020 202a2a2a 74616c50     o:    ..*** Plat
 8005d00:	6d726f66 2020203a 00002020 202a2a2a     form:     ..*** 
 8005d10:	74736554 616f4220 203a6472 00002020     Test Board:   ..
 8005d20:	202d2d2d 74736554 73614320 00002065     --- Test Case ..
 8005d30:	00002820 202d2d2d 75736552 203a746c      (..--- Result: 
 8005d40:	4c494146 20455255 00002328 00005b20     FAILURE (#.. [..
 8005d50:	616e6946 6572206c 746c7573 0000203a     Final result: ..
 8005d60:	656c6469 00000000 202a2a2a 62696843     idle....*** Chib
 8005d70:	2f534f69 74205452 20747365 74697573     iOS/RT test suit
 8005d80:	00000065 002a2a2a 2e302e33 00000030     e...***.3.0.0...
 8005d90:	20727041 32203620 20383130 3631202d     Apr  6 2018 - 16
 8005da0:	3a30303a 00003135 20434347 2e322e37     :00:51..GCC 7.2.
 8005db0:	30322031 39303731 28203430 656c6572     1 20170904 (rele
 8005dc0:	29657361 52415b20 6d652f4d 64646562     ase) [ARM/embedd
 8005dd0:	372d6465 6172622d 2068636e 69766572     ed-7-branch revi
 8005de0:	6e6f6973 35353220 5d343032 00000000     sion 255204]....
 8005df0:	764d5241 004d2d37 74726f43 4d2d7865     ARMv7-M.Cortex-M
 8005e00:	00000033 61766441 6465636e 72656b20     3...Advanced ker
 8005e10:	206c656e 65646f6d 00000000 334d5453     nel mode....STM3
 8005e20:	30314632 65502078 726f6672 636e616d     2F10x Performanc
 8005e30:	694c2065 4d20656e 75696465 6544206d     e Line Medium De
 8005e40:	7469736e 00000079 694d5453 656f7263     nsity...STMicroe
 8005e50:	7463656c 696e6f72 4e207363 454c4355     lectronics NUCLE
 8005e60:	31462d4f 42523330 00000000 00000029     O-F103RB....)...
 8005e70:	0000295d 202d2d2d 75736552 203a746c     ])..--- Result: 
 8005e80:	43435553 00535345 4c494146 00455255     SUCCESS.FAILURE.
 8005e90:	44434241 00000045 00000000 00000000     ABCDE...........

08005ea0 <patternbmk>:
 8005ea0:	080064f0 08006540 08006550 08006560     .d..@e..Pe..`e..
 8005eb0:	08006570 08006580 08006590 080065a0     pe...e...e...e..
 8005ec0:	080065b0 08006500 08006510 08006520     .e...e...e.. e..
 8005ed0:	08006530 00000000 00000000 00000000     0e..............

08005ee0 <patterndyn>:
 8005ee0:	080065c0 080065d0 080065e0 00000000     .e...e...e......

08005ef0 <patternevt>:
 8005ef0:	080065f0 08006600 08006610 00000000     .e...f...f......

08005f00 <patternheap>:
 8005f00:	08006620 00000000 00000000 00000000      f..............

08005f10 <patternmbox>:
 8005f10:	08006630 00000000 00000000 00000000     0f..............

08005f20 <patternmsg>:
 8005f20:	08006640 00000000 00000000 00000000     @f..............

08005f30 <patternmtx>:
 8005f30:	08006650 08006660 08006670 08006680     Pf..`f..pf...f..
 8005f40:	08006690 080066a0 00000000 00000000     .f...f..........

08005f50 <patternpools>:
 8005f50:	080066b0 00000000 00000000 00000000     .f..............

08005f60 <patternqueues>:
 8005f60:	080066c0 080066d0 00000000 00000000     .f...f..........

08005f70 <patterns>:
 8005f70:	08005fd0 08005fe0 08005fb0 08005f30     ._..._..._..0_..
 8005f80:	08005f20 08005f10 08005ef0 08005f00      _..._...^..._..
 8005f90:	08005f50 08005ee0 08005f60 08005ea0     P_...^..`_...^..
	...

08005fb0 <patternsem>:
 8005fb0:	080066e0 080066f0 08006700 08006710     .f...f...g...g..
	...

08005fd0 <patternsys>:
 8005fd0:	08006720 08006730 08006740 00000000      g..0g..@g......

08005fe0 <patternthd>:
 8005fe0:	08006750 08006760 08006770 08006780     Pg..`g..pg...g..
	...
 8006000:	00000a0d 00000000 00000000 00000000     ................
 8006010:	44434241 00000000 00000000 00000000     ABCD............
 8006020:	636e6542 72616d68 52202c6b 66204d41     Benchmark, RAM f
 8006030:	70746f6f 746e6972 00000000 636e6542     ootprint....Benc
 8006040:	72616d68 6d202c6b 78657475 6c207365     hmark, mutexes l
 8006050:	2f6b636f 6f6c6e75 00006b63 636e6542     ock/unlock..Benc
 8006060:	72616d68 73202c6b 70616d65 65726f68     hmark, semaphore
 8006070:	61772073 732f7469 616e6769 0000006c     s wait/signal...
 8006080:	636e6542 72616d68 76202c6b 75747269     Benchmark, virtu
 8006090:	74206c61 72656d69 65732073 65722f74     al timers set/re
 80060a0:	00746573 636e6542 72616d68 49202c6b     set.Benchmark, I
 80060b0:	51204f2f 65756575 68742073 67756f72     /O Queues throug
 80060c0:	74757068 00000000 636e6542 72616d68     hput....Benchmar
 80060d0:	72202c6b 646e756f 626f7220 63206e69     k, round robin c
 80060e0:	65746e6f 73207478 63746977 676e6968     ontext switching
 80060f0:	00000000 636e6542 72616d68 6d202c6b     ....Benchmark, m
 8006100:	20737361 63736572 75646568 202c656c     ass reschedule, 
 8006110:	68742035 64616572 00000073 636e6542     5 threads...Benc
 8006120:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8006130:	61657263 6f206574 00796c6e 636e6542     create only.Benc
 8006140:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8006150:	6c6c7566 63796320 0000656c 636e6542     full cycle..Benc
 8006160:	72616d68 63202c6b 65746e6f 73207478     hmark, context s
 8006170:	63746977 00000068 636e6542 72616d68     witch...Benchmar
 8006180:	6d202c6b 61737365 20736567 00003323     k, messages #3..
 8006190:	636e6542 72616d68 6d202c6b 61737365     Benchmark, messa
 80061a0:	20736567 00003223 636e6542 72616d68     ges #2..Benchmar
 80061b0:	6d202c6b 61737365 20736567 00003123     k, messages #1..
 80061c0:	75657551 202c7365 7074756f 71207475     Queues, output q
 80061d0:	65756575 00000073 75657551 202c7365     ueues...Queues, 
 80061e0:	75706e69 75712074 73657565 00000000     input queues....
 80061f0:	616e7944 2063696d 73495041 6572202c     Dynamic APIs, re
 8006200:	74736967 61207972 7220646e 72656665     gistry and refer
 8006210:	65636e65 00000073 616e7944 2063696d     ences...Dynamic 
 8006220:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8006230:	69746165 66206e6f 206d6f72 6f6d656d     eation from memo
 8006240:	70207972 006c6f6f 616e7944 2063696d     ry pool.Dynamic 
 8006250:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8006260:	69746165 66206e6f 206d6f72 70616568     eation from heap
 8006270:	00000000 6f6d654d 50207972 736c6f6f     ....Memory Pools
 8006280:	7571202c 2f657565 75716564 00657565     , queue/dequeue.
 8006290:	70616548 6c61202c 61636f6c 6e6f6974     Heap, allocation
 80062a0:	646e6120 61726620 6e656d67 69746174      and fragmentati
 80062b0:	74206e6f 00747365 6e657645 202c7374     on test.Events, 
 80062c0:	656d6974 7374756f 00000000 6e657645     timeouts....Even
 80062d0:	202c7374 74696177 646e6120 6f726220     ts, wait and bro
 80062e0:	61636461 00007473 6e657645 202c7374     adcast..Events, 
 80062f0:	69676572 61727473 6e6f6974 646e6120     registration and
 8006300:	73696420 63746170 00000068 6c69614d      dispatch...Mail
 8006310:	65786f62 71202c73 69756575 6120676e     boxes, queuing a
 8006320:	7420646e 6f656d69 00737475 7373654d     nd timeouts.Mess
 8006330:	73656761 6f6c202c 0000706f 646e6f43     ages, loop..Cond
 8006340:	2c726156 6f6f6220 74207473 00747365     Var, boost test.
 8006350:	646e6f43 2c726156 6f726220 61636461     CondVar, broadca
 8006360:	74207473 00747365 646e6f43 2c726156     st test.CondVar,
 8006370:	67697320 206c616e 74736574 00000000      signal test....
 8006380:	6574754d 2c736578 61747320 00737574     Mutexes, status.
 8006390:	6574754d 2c736578 69727020 7469726f     Mutexes, priorit
 80063a0:	65722079 6e727574 00000000 6574754d     y return....Mute
 80063b0:	2c736578 69727020 7469726f 6e652079     xes, priority en
 80063c0:	75657571 20676e69 74736574 00000000     queuing test....
 80063d0:	616e6942 53207972 70616d65 65726f68     Binary Semaphore
 80063e0:	66202c73 74636e75 616e6f69 7974696c     s, functionality
 80063f0:	00000000 616d6553 726f6870 202c7365     ....Semaphores, 
 8006400:	6d6f7461 73206369 616e6769 61772d6c     atomic signal-wa
 8006410:	00007469 616d6553 726f6870 202c7365     it..Semaphores, 
 8006420:	656d6974 0074756f 616d6553 726f6870     timeout.Semaphor
 8006430:	202c7365 75716e65 6e697565 00000067     es, enqueuing...
 8006440:	65726854 2c736461 6c656420 00737961     Threads, delays.
 8006450:	65726854 2c736461 69727020 7469726f     Threads, priorit
 8006460:	68632079 65676e61 00000000 65726854     y change....Thre
 8006470:	2c736461 716e6520 69756575 7420676e     ads, enqueuing t
 8006480:	20747365 00003223 65726854 2c736461     est #2..Threads,
 8006490:	716e6520 69756575 7420676e 20747365      enqueuing test 
 80064a0:	00003123 74737953 202c6d65 65746e69     #1..System, inte
 80064b0:	74697267 00000079 74737953 202c6d65     grity...System, 
 80064c0:	65746e69 70757272 68207374 6c646e61     interrupts handl
 80064d0:	00676e69 74737953 202c6d65 74697263     ing.System, crit
 80064e0:	6c616369 6e6f7a20 00007365 00000000     ical zones......

080064f0 <testbmk1>:
 80064f0:	080061a8 00000000 00000000 08003e61     .a..........a>..

08006500 <testbmk10>:
 8006500:	08006080 00000000 00000000 08002871     .`..........q(..

08006510 <testbmk11>:
 8006510:	0800605c 080002e1 00000000 08003721     \`..........!7..

08006520 <testbmk12>:
 8006520:	0800603c 080002d1 00000000 08002d91     <`...........-..

08006530 <testbmk13>:
 8006530:	08006020 00000000 00000000 08001321      `..........!...

08006540 <testbmk2>:
 8006540:	08006190 00000000 00000000 08003df1     .a...........=..

08006550 <testbmk3>:
 8006550:	08006178 00000000 00000000 08003d11     xa...........=..

08006560 <testbmk4>:
 8006560:	0800615c 00000000 00000000 08003c61     \a..........a<..

08006570 <testbmk5>:
 8006570:	0800613c 00000000 00000000 080039a1     <a...........9..

08006580 <testbmk6>:
 8006580:	0800611c 00000000 00000000 080029b1     .a...........)..

08006590 <testbmk7>:
 8006590:	080060f4 08000311 00000000 08003b31     .`..........1;..

080065a0 <testbmk8>:
 80065a0:	080060c8 00000000 00000000 08003a51     .`..........Q:..

080065b0 <testbmk9>:
 80065b0:	080060a4 00000000 00000000 08002901     .`...........)..

080065c0 <testdyn1>:
 80065c0:	08006248 080003c1 00000000 080044e1     Hb...........D..

080065d0 <testdyn2>:
 80065d0:	08006218 080003a1 00000000 080043e1     .b...........C..

080065e0 <testdyn3>:
 80065e0:	080061f0 080003f1 00000000 08003351     .a..........Q3..

080065f0 <testevt1>:
 80065f0:	080062e8 08000461 00000000 08000a81     .b..a...........

08006600 <testevt2>:
 8006600:	080062cc 08000481 00000000 080045b1     .b...........E..

08006610 <testevt3>:
 8006610:	080062b8 08000471 00000000 08001be1     .b..q...........

08006620 <testheap1>:
 8006620:	08006290 08000431 00000000 08003481     .b..1........4..

08006630 <testmbox1>:
 8006630:	0800630c 08000491 00000000 08001e71     .c..........q...

08006640 <testmsg1>:
 8006640:	0800632c 00000000 00000000 08002b51     ,c..........Q+..

08006650 <testmtx1>:
 8006650:	080063ac 08000551 00000000 08004d51     .c..Q.......QM..

08006660 <testmtx4>:
 8006660:	08006390 08000531 00000000 08004b01     .c..1........K..

08006670 <testmtx5>:
 8006670:	08006380 08000561 00000000 08002f21     .c..a.......!/..

08006680 <testmtx6>:
 8006680:	08006368 08000501 00000000 08004a21     hc..........!J..

08006690 <testmtx7>:
 8006690:	08006350 08000521 00000000 08004931     Pc..!.......1I..

080066a0 <testmtx8>:
 80066a0:	0800633c 080004d1 00000000 080048a1     <c...........H..

080066b0 <testpools1>:
 80066b0:	08006274 08000411 00000000 08000971     tb..........q...

080066c0 <testqueues1>:
 80066c0:	080061d8 08000371 00000000 08004131     .a..q.......1A..

080066d0 <testqueues2>:
 80066d0:	080061c0 08000341 00000000 08003ed1     .a..A........>..

080066e0 <testsem1>:
 80066e0:	08006428 08000571 00000000 08004f91     (d..q........O..

080066f0 <testsem2>:
 80066f0:	08006414 08000591 00000000 08004e41     .d..........AN..

08006700 <testsem3>:
 8006700:	080063f4 08000581 00000000 08001a11     .c..............

08006710 <testsem4>:
 8006710:	080063d0 00000000 00000000 080037c1     .c...........7..

08006720 <testsys1>:
 8006720:	080064d4 00000000 00000000 080026f1     .d...........&..

08006730 <testsys2>:
 8006730:	080064b8 00000000 00000000 08000321     .d..........!...

08006740 <testsys3>:
 8006740:	080064a4 00000000 00000000 08001271     .d..........q...

08006750 <testthd1>:
 8006750:	08006488 00000000 00000000 08005241     .d..........AR..

08006760 <testthd2>:
 8006760:	0800646c 00000000 00000000 08005101     ld...........Q..

08006770 <testthd3>:
 8006770:	08006450 00000000 00000000 080015c1     Pd..............

08006780 <testthd4>:
 8006780:	08006440 00000000 00000000 08002a21     @d..........!*..

08006790 <vmt>:
 8006790:	080024e1 08002601 08002561 08002681     .$...&..a%...&..
 80067a0:	08002551 08002671 080024d1 080025f1     Q%..q&...$...%..

080067b0 <wa>:
 80067b0:	20000b38 20000c80 20000dc8 20000f10     8.. ... ... ... 
 80067c0:	20001058                                X.. 
