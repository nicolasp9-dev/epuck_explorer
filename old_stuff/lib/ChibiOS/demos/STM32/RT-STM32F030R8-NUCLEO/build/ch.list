
build/ch.elf:     file format elf32-littlearm


Disassembly of section .text:

080000c0 <Reset_Handler>:
 80000c0:	b672      	cpsid	i
 80000c2:	4820      	ldr	r0, [pc, #128]	; (8000144 <endfiniloop+0x4>)
 80000c4:	f380 8809 	msr	PSP, r0
 80000c8:	2002      	movs	r0, #2
 80000ca:	f380 8814 	msr	CONTROL, r0
 80000ce:	f3bf 8f6f 	isb	sy
 80000d2:	f005 f9d5 	bl	8005480 <__early_init>
 80000d6:	481c      	ldr	r0, [pc, #112]	; (8000148 <endfiniloop+0x8>)
 80000d8:	491c      	ldr	r1, [pc, #112]	; (800014c <endfiniloop+0xc>)
 80000da:	4a1d      	ldr	r2, [pc, #116]	; (8000150 <endfiniloop+0x10>)

080000dc <msloop>:
 80000dc:	4291      	cmp	r1, r2
 80000de:	da02      	bge.n	80000e6 <endmsloop>
 80000e0:	6008      	str	r0, [r1, #0]
 80000e2:	3104      	adds	r1, #4
 80000e4:	e7fa      	b.n	80000dc <msloop>

080000e6 <endmsloop>:
 80000e6:	491b      	ldr	r1, [pc, #108]	; (8000154 <endfiniloop+0x14>)
 80000e8:	4a16      	ldr	r2, [pc, #88]	; (8000144 <endfiniloop+0x4>)

080000ea <psloop>:
 80000ea:	4291      	cmp	r1, r2
 80000ec:	da02      	bge.n	80000f4 <endpsloop>
 80000ee:	6008      	str	r0, [r1, #0]
 80000f0:	3104      	adds	r1, #4
 80000f2:	e7fa      	b.n	80000ea <psloop>

080000f4 <endpsloop>:
 80000f4:	4918      	ldr	r1, [pc, #96]	; (8000158 <endfiniloop+0x18>)
 80000f6:	4a19      	ldr	r2, [pc, #100]	; (800015c <endfiniloop+0x1c>)
 80000f8:	4b19      	ldr	r3, [pc, #100]	; (8000160 <endfiniloop+0x20>)

080000fa <dloop>:
 80000fa:	429a      	cmp	r2, r3
 80000fc:	da04      	bge.n	8000108 <enddloop>
 80000fe:	6808      	ldr	r0, [r1, #0]
 8000100:	6010      	str	r0, [r2, #0]
 8000102:	3104      	adds	r1, #4
 8000104:	3204      	adds	r2, #4
 8000106:	e7f8      	b.n	80000fa <dloop>

08000108 <enddloop>:
 8000108:	2000      	movs	r0, #0
 800010a:	4916      	ldr	r1, [pc, #88]	; (8000164 <endfiniloop+0x24>)
 800010c:	4a16      	ldr	r2, [pc, #88]	; (8000168 <endfiniloop+0x28>)

0800010e <bloop>:
 800010e:	4291      	cmp	r1, r2
 8000110:	da02      	bge.n	8000118 <endbloop>
 8000112:	6008      	str	r0, [r1, #0]
 8000114:	3104      	adds	r1, #4
 8000116:	e7fa      	b.n	800010e <bloop>

08000118 <endbloop>:
 8000118:	f005 fa42 	bl	80055a0 <__late_init>
 800011c:	4c13      	ldr	r4, [pc, #76]	; (800016c <endfiniloop+0x2c>)
 800011e:	4d14      	ldr	r5, [pc, #80]	; (8000170 <endfiniloop+0x30>)

08000120 <initloop>:
 8000120:	42ac      	cmp	r4, r5
 8000122:	da03      	bge.n	800012c <endinitloop>
 8000124:	6821      	ldr	r1, [r4, #0]
 8000126:	4788      	blx	r1
 8000128:	3404      	adds	r4, #4
 800012a:	e7f9      	b.n	8000120 <initloop>

0800012c <endinitloop>:
 800012c:	f004 fe80 	bl	8004e30 <main>
 8000130:	4c10      	ldr	r4, [pc, #64]	; (8000174 <endfiniloop+0x34>)
 8000132:	4d11      	ldr	r5, [pc, #68]	; (8000178 <endfiniloop+0x38>)

08000134 <finiloop>:
 8000134:	42ac      	cmp	r4, r5
 8000136:	da03      	bge.n	8000140 <endfiniloop>
 8000138:	6821      	ldr	r1, [r4, #0]
 800013a:	4788      	blx	r1
 800013c:	3404      	adds	r4, #4
 800013e:	e7f9      	b.n	8000134 <finiloop>

08000140 <endfiniloop>:
 8000140:	490e      	ldr	r1, [pc, #56]	; (800017c <endfiniloop+0x3c>)
 8000142:	4708      	bx	r1
 8000144:	20000600 	.word	0x20000600
 8000148:	55555555 	.word	0x55555555
 800014c:	20000000 	.word	0x20000000
 8000150:	20000400 	.word	0x20000400
 8000154:	20000400 	.word	0x20000400
 8000158:	08006308 	.word	0x08006308
 800015c:	20000600 	.word	0x20000600
 8000160:	200006b8 	.word	0x200006b8
 8000164:	200006b8 	.word	0x200006b8
 8000168:	20001178 	.word	0x20001178
 800016c:	080000c0 	.word	0x080000c0
 8000170:	080000c0 	.word	0x080000c0
 8000174:	080000c0 	.word	0x080000c0
 8000178:	080000c0 	.word	0x080000c0
 800017c:	08005591 	.word	0x08005591

08000180 <_port_switch>:
 8000180:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000182:	4644      	mov	r4, r8
 8000184:	464d      	mov	r5, r9
 8000186:	4656      	mov	r6, sl
 8000188:	465f      	mov	r7, fp
 800018a:	b4f0      	push	{r4, r5, r6, r7}
 800018c:	466b      	mov	r3, sp
 800018e:	60cb      	str	r3, [r1, #12]
 8000190:	68c3      	ldr	r3, [r0, #12]
 8000192:	469d      	mov	sp, r3
 8000194:	bcf0      	pop	{r4, r5, r6, r7}
 8000196:	46a0      	mov	r8, r4
 8000198:	46a9      	mov	r9, r5
 800019a:	46b2      	mov	sl, r6
 800019c:	46bb      	mov	fp, r7
 800019e:	bdf0      	pop	{r4, r5, r6, r7, pc}

080001a0 <_port_thread_start>:
 80001a0:	b662      	cpsie	i
 80001a2:	1c28      	adds	r0, r5, #0
 80001a4:	47a0      	blx	r4
 80001a6:	2000      	movs	r0, #0
 80001a8:	f005 f9c2 	bl	8005530 <chThdExit>

080001ac <_port_switch_from_isr>:
 80001ac:	f005 f9e8 	bl	8005580 <chSchDoReschedule>

080001b0 <_port_exit_from_isr>:
 80001b0:	4a01      	ldr	r2, [pc, #4]	; (80001b8 <_port_exit_from_isr+0x8>)
 80001b2:	4b02      	ldr	r3, [pc, #8]	; (80001bc <_port_exit_from_isr+0xc>)
 80001b4:	6013      	str	r3, [r2, #0]
 80001b6:	e7fe      	b.n	80001b6 <_port_exit_from_isr+0x6>
 80001b8:	e000ed04 	.word	0xe000ed04
 80001bc:	80000000 	.word	0x80000000

080001c0 <__udivsi3>:
 80001c0:	2200      	movs	r2, #0
 80001c2:	0843      	lsrs	r3, r0, #1
 80001c4:	428b      	cmp	r3, r1
 80001c6:	d374      	bcc.n	80002b2 <__udivsi3+0xf2>
 80001c8:	0903      	lsrs	r3, r0, #4
 80001ca:	428b      	cmp	r3, r1
 80001cc:	d35f      	bcc.n	800028e <__udivsi3+0xce>
 80001ce:	0a03      	lsrs	r3, r0, #8
 80001d0:	428b      	cmp	r3, r1
 80001d2:	d344      	bcc.n	800025e <__udivsi3+0x9e>
 80001d4:	0b03      	lsrs	r3, r0, #12
 80001d6:	428b      	cmp	r3, r1
 80001d8:	d328      	bcc.n	800022c <__udivsi3+0x6c>
 80001da:	0c03      	lsrs	r3, r0, #16
 80001dc:	428b      	cmp	r3, r1
 80001de:	d30d      	bcc.n	80001fc <__udivsi3+0x3c>
 80001e0:	22ff      	movs	r2, #255	; 0xff
 80001e2:	0209      	lsls	r1, r1, #8
 80001e4:	ba12      	rev	r2, r2
 80001e6:	0c03      	lsrs	r3, r0, #16
 80001e8:	428b      	cmp	r3, r1
 80001ea:	d302      	bcc.n	80001f2 <__udivsi3+0x32>
 80001ec:	1212      	asrs	r2, r2, #8
 80001ee:	0209      	lsls	r1, r1, #8
 80001f0:	d065      	beq.n	80002be <__udivsi3+0xfe>
 80001f2:	0b03      	lsrs	r3, r0, #12
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d319      	bcc.n	800022c <__udivsi3+0x6c>
 80001f8:	e000      	b.n	80001fc <__udivsi3+0x3c>
 80001fa:	0a09      	lsrs	r1, r1, #8
 80001fc:	0bc3      	lsrs	r3, r0, #15
 80001fe:	428b      	cmp	r3, r1
 8000200:	d301      	bcc.n	8000206 <__udivsi3+0x46>
 8000202:	03cb      	lsls	r3, r1, #15
 8000204:	1ac0      	subs	r0, r0, r3
 8000206:	4152      	adcs	r2, r2
 8000208:	0b83      	lsrs	r3, r0, #14
 800020a:	428b      	cmp	r3, r1
 800020c:	d301      	bcc.n	8000212 <__udivsi3+0x52>
 800020e:	038b      	lsls	r3, r1, #14
 8000210:	1ac0      	subs	r0, r0, r3
 8000212:	4152      	adcs	r2, r2
 8000214:	0b43      	lsrs	r3, r0, #13
 8000216:	428b      	cmp	r3, r1
 8000218:	d301      	bcc.n	800021e <__udivsi3+0x5e>
 800021a:	034b      	lsls	r3, r1, #13
 800021c:	1ac0      	subs	r0, r0, r3
 800021e:	4152      	adcs	r2, r2
 8000220:	0b03      	lsrs	r3, r0, #12
 8000222:	428b      	cmp	r3, r1
 8000224:	d301      	bcc.n	800022a <__udivsi3+0x6a>
 8000226:	030b      	lsls	r3, r1, #12
 8000228:	1ac0      	subs	r0, r0, r3
 800022a:	4152      	adcs	r2, r2
 800022c:	0ac3      	lsrs	r3, r0, #11
 800022e:	428b      	cmp	r3, r1
 8000230:	d301      	bcc.n	8000236 <__udivsi3+0x76>
 8000232:	02cb      	lsls	r3, r1, #11
 8000234:	1ac0      	subs	r0, r0, r3
 8000236:	4152      	adcs	r2, r2
 8000238:	0a83      	lsrs	r3, r0, #10
 800023a:	428b      	cmp	r3, r1
 800023c:	d301      	bcc.n	8000242 <__udivsi3+0x82>
 800023e:	028b      	lsls	r3, r1, #10
 8000240:	1ac0      	subs	r0, r0, r3
 8000242:	4152      	adcs	r2, r2
 8000244:	0a43      	lsrs	r3, r0, #9
 8000246:	428b      	cmp	r3, r1
 8000248:	d301      	bcc.n	800024e <__udivsi3+0x8e>
 800024a:	024b      	lsls	r3, r1, #9
 800024c:	1ac0      	subs	r0, r0, r3
 800024e:	4152      	adcs	r2, r2
 8000250:	0a03      	lsrs	r3, r0, #8
 8000252:	428b      	cmp	r3, r1
 8000254:	d301      	bcc.n	800025a <__udivsi3+0x9a>
 8000256:	020b      	lsls	r3, r1, #8
 8000258:	1ac0      	subs	r0, r0, r3
 800025a:	4152      	adcs	r2, r2
 800025c:	d2cd      	bcs.n	80001fa <__udivsi3+0x3a>
 800025e:	09c3      	lsrs	r3, r0, #7
 8000260:	428b      	cmp	r3, r1
 8000262:	d301      	bcc.n	8000268 <__udivsi3+0xa8>
 8000264:	01cb      	lsls	r3, r1, #7
 8000266:	1ac0      	subs	r0, r0, r3
 8000268:	4152      	adcs	r2, r2
 800026a:	0983      	lsrs	r3, r0, #6
 800026c:	428b      	cmp	r3, r1
 800026e:	d301      	bcc.n	8000274 <__udivsi3+0xb4>
 8000270:	018b      	lsls	r3, r1, #6
 8000272:	1ac0      	subs	r0, r0, r3
 8000274:	4152      	adcs	r2, r2
 8000276:	0943      	lsrs	r3, r0, #5
 8000278:	428b      	cmp	r3, r1
 800027a:	d301      	bcc.n	8000280 <__udivsi3+0xc0>
 800027c:	014b      	lsls	r3, r1, #5
 800027e:	1ac0      	subs	r0, r0, r3
 8000280:	4152      	adcs	r2, r2
 8000282:	0903      	lsrs	r3, r0, #4
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__udivsi3+0xcc>
 8000288:	010b      	lsls	r3, r1, #4
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	08c3      	lsrs	r3, r0, #3
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__udivsi3+0xd8>
 8000294:	00cb      	lsls	r3, r1, #3
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0883      	lsrs	r3, r0, #2
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__udivsi3+0xe4>
 80002a0:	008b      	lsls	r3, r1, #2
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0843      	lsrs	r3, r0, #1
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__udivsi3+0xf0>
 80002ac:	004b      	lsls	r3, r1, #1
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	1a41      	subs	r1, r0, r1
 80002b4:	d200      	bcs.n	80002b8 <__udivsi3+0xf8>
 80002b6:	4601      	mov	r1, r0
 80002b8:	4152      	adcs	r2, r2
 80002ba:	4610      	mov	r0, r2
 80002bc:	4770      	bx	lr
 80002be:	e7ff      	b.n	80002c0 <__udivsi3+0x100>
 80002c0:	b501      	push	{r0, lr}
 80002c2:	2000      	movs	r0, #0
 80002c4:	f000 f80c 	bl	80002e0 <__aeabi_idiv0>
 80002c8:	bd02      	pop	{r1, pc}
 80002ca:	46c0      	nop			; (mov r8, r8)

080002cc <__aeabi_uidivmod>:
 80002cc:	2900      	cmp	r1, #0
 80002ce:	d0f7      	beq.n	80002c0 <__udivsi3+0x100>
 80002d0:	e776      	b.n	80001c0 <__udivsi3>
 80002d2:	4770      	bx	lr
	...

080002e0 <__aeabi_idiv0>:
 80002e0:	4770      	bx	lr
 80002e2:	46c0      	nop			; (mov r8, r8)
	...

080002f0 <chEvtGetAndClearEvents.constprop.35>:
 80002f0:	b672      	cpsid	i
 80002f2:	2200      	movs	r2, #0
 80002f4:	4b02      	ldr	r3, [pc, #8]	; (8000300 <chEvtGetAndClearEvents.constprop.35+0x10>)
 80002f6:	699b      	ldr	r3, [r3, #24]
 80002f8:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80002fa:	635a      	str	r2, [r3, #52]	; 0x34
 80002fc:	b662      	cpsie	i
 80002fe:	4770      	bx	lr
 8000300:	20000738 	.word	0x20000738
	...

08000310 <tmr>:
 8000310:	2201      	movs	r2, #1
 8000312:	4b01      	ldr	r3, [pc, #4]	; (8000318 <tmr+0x8>)
 8000314:	701a      	strb	r2, [r3, #0]
 8000316:	4770      	bx	lr
 8000318:	20000fc8 	.word	0x20000fc8
 800031c:	00000000 	.word	0x00000000

08000320 <_idle_thread>:
 8000320:	e7fe      	b.n	8000320 <_idle_thread>
 8000322:	46c0      	nop			; (mov r8, r8)
	...

08000330 <chCoreAlloc>:
 8000330:	b672      	cpsid	i
 8000332:	2207      	movs	r2, #7
 8000334:	1dc3      	adds	r3, r0, #7
 8000336:	4393      	bics	r3, r2
 8000338:	4906      	ldr	r1, [pc, #24]	; (8000354 <chCoreAlloc+0x24>)
 800033a:	4a07      	ldr	r2, [pc, #28]	; (8000358 <chCoreAlloc+0x28>)
 800033c:	6808      	ldr	r0, [r1, #0]
 800033e:	6812      	ldr	r2, [r2, #0]
 8000340:	1a12      	subs	r2, r2, r0
 8000342:	4293      	cmp	r3, r2
 8000344:	d803      	bhi.n	800034e <chCoreAlloc+0x1e>
 8000346:	18c3      	adds	r3, r0, r3
 8000348:	600b      	str	r3, [r1, #0]
 800034a:	b662      	cpsie	i
 800034c:	4770      	bx	lr
 800034e:	2000      	movs	r0, #0
 8000350:	e7fb      	b.n	800034a <chCoreAlloc+0x1a>
 8000352:	46c0      	nop			; (mov r8, r8)
 8000354:	20000924 	.word	0x20000924
 8000358:	200008a8 	.word	0x200008a8
 800035c:	00000000 	.word	0x00000000

08000360 <notify2>:
 8000360:	2180      	movs	r1, #128	; 0x80
 8000362:	4a02      	ldr	r2, [pc, #8]	; (800036c <notify2+0xc>)
 8000364:	6813      	ldr	r3, [r2, #0]
 8000366:	430b      	orrs	r3, r1
 8000368:	6013      	str	r3, [r2, #0]
 800036a:	4770      	bx	lr
 800036c:	40004400 	.word	0x40004400

08000370 <bmk12_setup>:
 8000370:	2200      	movs	r2, #0
 8000372:	4b02      	ldr	r3, [pc, #8]	; (800037c <bmk12_setup+0xc>)
 8000374:	601b      	str	r3, [r3, #0]
 8000376:	605b      	str	r3, [r3, #4]
 8000378:	609a      	str	r2, [r3, #8]
 800037a:	4770      	bx	lr
 800037c:	20000914 	.word	0x20000914

08000380 <bmk11_setup>:
 8000380:	2201      	movs	r2, #1
 8000382:	4b02      	ldr	r3, [pc, #8]	; (800038c <bmk11_setup+0xc>)
 8000384:	601b      	str	r3, [r3, #0]
 8000386:	605b      	str	r3, [r3, #4]
 8000388:	609a      	str	r2, [r3, #8]
 800038a:	4770      	bx	lr
 800038c:	20000928 	.word	0x20000928

08000390 <notify>:
 8000390:	4770      	bx	lr
 8000392:	46c0      	nop			; (mov r8, r8)
	...

080003a0 <tmo>:
 80003a0:	4770      	bx	lr
 80003a2:	46c0      	nop			; (mov r8, r8)
	...

080003b0 <bmk7_setup>:
 80003b0:	2200      	movs	r2, #0
 80003b2:	4b02      	ldr	r3, [pc, #8]	; (80003bc <bmk7_setup+0xc>)
 80003b4:	601b      	str	r3, [r3, #0]
 80003b6:	605b      	str	r3, [r3, #4]
 80003b8:	609a      	str	r2, [r3, #8]
 80003ba:	4770      	bx	lr
 80003bc:	20000928 	.word	0x20000928

080003c0 <sys2_execute>:
 80003c0:	b672      	cpsid	i
 80003c2:	b672      	cpsid	i
 80003c4:	b672      	cpsid	i
 80003c6:	b662      	cpsie	i
 80003c8:	4770      	bx	lr
 80003ca:	46c0      	nop			; (mov r8, r8)
 80003cc:	0000      	movs	r0, r0
	...

080003d0 <queues2_setup>:
 80003d0:	2204      	movs	r2, #4
 80003d2:	4b07      	ldr	r3, [pc, #28]	; (80003f0 <queues2_setup+0x20>)
 80003d4:	609a      	str	r2, [r3, #8]
 80003d6:	4a07      	ldr	r2, [pc, #28]	; (80003f4 <queues2_setup+0x24>)
 80003d8:	601b      	str	r3, [r3, #0]
 80003da:	60da      	str	r2, [r3, #12]
 80003dc:	619a      	str	r2, [r3, #24]
 80003de:	615a      	str	r2, [r3, #20]
 80003e0:	3204      	adds	r2, #4
 80003e2:	611a      	str	r2, [r3, #16]
 80003e4:	4a04      	ldr	r2, [pc, #16]	; (80003f8 <queues2_setup+0x28>)
 80003e6:	605b      	str	r3, [r3, #4]
 80003e8:	61da      	str	r2, [r3, #28]
 80003ea:	2200      	movs	r2, #0
 80003ec:	621a      	str	r2, [r3, #32]
 80003ee:	4770      	bx	lr
 80003f0:	20000688 	.word	0x20000688
 80003f4:	20000938 	.word	0x20000938
 80003f8:	08000391 	.word	0x08000391
 80003fc:	00000000 	.word	0x00000000

08000400 <queues1_setup>:
 8000400:	2100      	movs	r1, #0
 8000402:	4b07      	ldr	r3, [pc, #28]	; (8000420 <queues1_setup+0x20>)
 8000404:	4a07      	ldr	r2, [pc, #28]	; (8000424 <queues1_setup+0x24>)
 8000406:	601b      	str	r3, [r3, #0]
 8000408:	60da      	str	r2, [r3, #12]
 800040a:	619a      	str	r2, [r3, #24]
 800040c:	615a      	str	r2, [r3, #20]
 800040e:	3204      	adds	r2, #4
 8000410:	611a      	str	r2, [r3, #16]
 8000412:	4a05      	ldr	r2, [pc, #20]	; (8000428 <queues1_setup+0x28>)
 8000414:	605b      	str	r3, [r3, #4]
 8000416:	6099      	str	r1, [r3, #8]
 8000418:	61da      	str	r2, [r3, #28]
 800041a:	6219      	str	r1, [r3, #32]
 800041c:	4770      	bx	lr
 800041e:	46c0      	nop			; (mov r8, r8)
 8000420:	20000610 	.word	0x20000610
 8000424:	20000938 	.word	0x20000938
 8000428:	08000391 	.word	0x08000391
 800042c:	00000000 	.word	0x00000000

08000430 <dyn2_setup>:
 8000430:	21a4      	movs	r1, #164	; 0xa4
 8000432:	2200      	movs	r2, #0
 8000434:	4b02      	ldr	r3, [pc, #8]	; (8000440 <dyn2_setup+0x10>)
 8000436:	0049      	lsls	r1, r1, #1
 8000438:	601a      	str	r2, [r3, #0]
 800043a:	6059      	str	r1, [r3, #4]
 800043c:	609a      	str	r2, [r3, #8]
 800043e:	4770      	bx	lr
 8000440:	20000908 	.word	0x20000908
	...

08000450 <dyn1_setup>:
 8000450:	20cc      	movs	r0, #204	; 0xcc
 8000452:	2200      	movs	r2, #0
 8000454:	4b06      	ldr	r3, [pc, #24]	; (8000470 <dyn1_setup+0x20>)
 8000456:	4907      	ldr	r1, [pc, #28]	; (8000474 <dyn1_setup+0x24>)
 8000458:	00c0      	lsls	r0, r0, #3
 800045a:	6099      	str	r1, [r3, #8]
 800045c:	600a      	str	r2, [r1, #0]
 800045e:	6048      	str	r0, [r1, #4]
 8000460:	0019      	movs	r1, r3
 8000462:	3110      	adds	r1, #16
 8000464:	601a      	str	r2, [r3, #0]
 8000466:	60da      	str	r2, [r3, #12]
 8000468:	6119      	str	r1, [r3, #16]
 800046a:	6159      	str	r1, [r3, #20]
 800046c:	619a      	str	r2, [r3, #24]
 800046e:	4770      	bx	lr
 8000470:	200008b0 	.word	0x200008b0
 8000474:	20000938 	.word	0x20000938
	...

08000480 <dyn3_setup>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f7ff ffe5 	bl	8000450 <dyn1_setup>
 8000486:	bd10      	pop	{r4, pc}
	...

08000490 <null_provider>:
 8000490:	2000      	movs	r0, #0
 8000492:	4770      	bx	lr
	...

080004a0 <pools1_setup>:
 80004a0:	21a4      	movs	r1, #164	; 0xa4
 80004a2:	2200      	movs	r2, #0
 80004a4:	4b02      	ldr	r3, [pc, #8]	; (80004b0 <pools1_setup+0x10>)
 80004a6:	0049      	lsls	r1, r1, #1
 80004a8:	601a      	str	r2, [r3, #0]
 80004aa:	6059      	str	r1, [r3, #4]
 80004ac:	609a      	str	r2, [r3, #8]
 80004ae:	4770      	bx	lr
 80004b0:	2000067c 	.word	0x2000067c
	...

080004c0 <heap1_setup>:
 80004c0:	20cc      	movs	r0, #204	; 0xcc
 80004c2:	2200      	movs	r2, #0
 80004c4:	4b06      	ldr	r3, [pc, #24]	; (80004e0 <heap1_setup+0x20>)
 80004c6:	4907      	ldr	r1, [pc, #28]	; (80004e4 <heap1_setup+0x24>)
 80004c8:	00c0      	lsls	r0, r0, #3
 80004ca:	6099      	str	r1, [r3, #8]
 80004cc:	600a      	str	r2, [r1, #0]
 80004ce:	6048      	str	r0, [r1, #4]
 80004d0:	0019      	movs	r1, r3
 80004d2:	3110      	adds	r1, #16
 80004d4:	601a      	str	r2, [r3, #0]
 80004d6:	60da      	str	r2, [r3, #12]
 80004d8:	6119      	str	r1, [r3, #16]
 80004da:	6159      	str	r1, [r3, #20]
 80004dc:	619a      	str	r2, [r3, #24]
 80004de:	4770      	bx	lr
 80004e0:	20000fa8 	.word	0x20000fa8
 80004e4:	20000938 	.word	0x20000938
	...

080004f0 <evt1_setup>:
 80004f0:	b510      	push	{r4, lr}
 80004f2:	f7ff fefd 	bl	80002f0 <chEvtGetAndClearEvents.constprop.35>
 80004f6:	bd10      	pop	{r4, pc}
	...

08000500 <evt3_setup>:
 8000500:	b510      	push	{r4, lr}
 8000502:	f7ff fff5 	bl	80004f0 <evt1_setup>
 8000506:	bd10      	pop	{r4, pc}
	...

08000510 <evt2_setup>:
 8000510:	b510      	push	{r4, lr}
 8000512:	f7ff ffed 	bl	80004f0 <evt1_setup>
 8000516:	bd10      	pop	{r4, pc}
	...

08000520 <mbox1_setup>:
 8000520:	4b09      	ldr	r3, [pc, #36]	; (8000548 <mbox1_setup+0x28>)
 8000522:	4a0a      	ldr	r2, [pc, #40]	; (800054c <mbox1_setup+0x2c>)
 8000524:	601a      	str	r2, [r3, #0]
 8000526:	60da      	str	r2, [r3, #12]
 8000528:	609a      	str	r2, [r3, #8]
 800052a:	3214      	adds	r2, #20
 800052c:	605a      	str	r2, [r3, #4]
 800052e:	001a      	movs	r2, r3
 8000530:	321c      	adds	r2, #28
 8000532:	61da      	str	r2, [r3, #28]
 8000534:	621a      	str	r2, [r3, #32]
 8000536:	2205      	movs	r2, #5
 8000538:	625a      	str	r2, [r3, #36]	; 0x24
 800053a:	001a      	movs	r2, r3
 800053c:	3210      	adds	r2, #16
 800053e:	611a      	str	r2, [r3, #16]
 8000540:	615a      	str	r2, [r3, #20]
 8000542:	2200      	movs	r2, #0
 8000544:	619a      	str	r2, [r3, #24]
 8000546:	4770      	bx	lr
 8000548:	20000654 	.word	0x20000654
 800054c:	20000938 	.word	0x20000938

08000550 <mtx8_setup>:
 8000550:	2200      	movs	r2, #0
 8000552:	4b06      	ldr	r3, [pc, #24]	; (800056c <mtx8_setup+0x1c>)
 8000554:	601b      	str	r3, [r3, #0]
 8000556:	605b      	str	r3, [r3, #4]
 8000558:	4b05      	ldr	r3, [pc, #20]	; (8000570 <mtx8_setup+0x20>)
 800055a:	601b      	str	r3, [r3, #0]
 800055c:	605b      	str	r3, [r3, #4]
 800055e:	609a      	str	r2, [r3, #8]
 8000560:	4b04      	ldr	r3, [pc, #16]	; (8000574 <mtx8_setup+0x24>)
 8000562:	601b      	str	r3, [r3, #0]
 8000564:	605b      	str	r3, [r3, #4]
 8000566:	609a      	str	r2, [r3, #8]
 8000568:	4770      	bx	lr
 800056a:	46c0      	nop			; (mov r8, r8)
 800056c:	20000600 	.word	0x20000600
 8000570:	20000634 	.word	0x20000634
 8000574:	20000644 	.word	0x20000644
	...

08000580 <mtx6_setup>:
 8000580:	2200      	movs	r2, #0
 8000582:	4b04      	ldr	r3, [pc, #16]	; (8000594 <mtx6_setup+0x14>)
 8000584:	601b      	str	r3, [r3, #0]
 8000586:	605b      	str	r3, [r3, #4]
 8000588:	4b03      	ldr	r3, [pc, #12]	; (8000598 <mtx6_setup+0x18>)
 800058a:	601b      	str	r3, [r3, #0]
 800058c:	605b      	str	r3, [r3, #4]
 800058e:	609a      	str	r2, [r3, #8]
 8000590:	4770      	bx	lr
 8000592:	46c0      	nop			; (mov r8, r8)
 8000594:	20000600 	.word	0x20000600
 8000598:	20000634 	.word	0x20000634
 800059c:	00000000 	.word	0x00000000

080005a0 <mtx7_setup>:
 80005a0:	b510      	push	{r4, lr}
 80005a2:	f7ff ffed 	bl	8000580 <mtx6_setup>
 80005a6:	bd10      	pop	{r4, pc}
	...

080005b0 <mtx4_setup>:
 80005b0:	2200      	movs	r2, #0
 80005b2:	4b04      	ldr	r3, [pc, #16]	; (80005c4 <mtx4_setup+0x14>)
 80005b4:	601b      	str	r3, [r3, #0]
 80005b6:	605b      	str	r3, [r3, #4]
 80005b8:	609a      	str	r2, [r3, #8]
 80005ba:	4b03      	ldr	r3, [pc, #12]	; (80005c8 <mtx4_setup+0x18>)
 80005bc:	601b      	str	r3, [r3, #0]
 80005be:	605b      	str	r3, [r3, #4]
 80005c0:	609a      	str	r2, [r3, #8]
 80005c2:	4770      	bx	lr
 80005c4:	20000634 	.word	0x20000634
 80005c8:	20000644 	.word	0x20000644
 80005cc:	00000000 	.word	0x00000000

080005d0 <mtx1_setup>:
 80005d0:	2200      	movs	r2, #0
 80005d2:	4b02      	ldr	r3, [pc, #8]	; (80005dc <mtx1_setup+0xc>)
 80005d4:	601b      	str	r3, [r3, #0]
 80005d6:	605b      	str	r3, [r3, #4]
 80005d8:	609a      	str	r2, [r3, #8]
 80005da:	4770      	bx	lr
 80005dc:	20000634 	.word	0x20000634

080005e0 <mtx5_setup>:
 80005e0:	b510      	push	{r4, lr}
 80005e2:	f7ff fff5 	bl	80005d0 <mtx1_setup>
 80005e6:	bd10      	pop	{r4, pc}
	...

080005f0 <sem1_setup>:
 80005f0:	2200      	movs	r2, #0
 80005f2:	4b02      	ldr	r3, [pc, #8]	; (80005fc <sem1_setup+0xc>)
 80005f4:	601b      	str	r3, [r3, #0]
 80005f6:	605b      	str	r3, [r3, #4]
 80005f8:	609a      	str	r2, [r3, #8]
 80005fa:	4770      	bx	lr
 80005fc:	200006ac 	.word	0x200006ac

08000600 <sem3_setup>:
 8000600:	b510      	push	{r4, lr}
 8000602:	f7ff fff5 	bl	80005f0 <sem1_setup>
 8000606:	bd10      	pop	{r4, pc}
	...

08000610 <sem2_setup>:
 8000610:	b510      	push	{r4, lr}
 8000612:	f7ff ffed 	bl	80005f0 <sem1_setup>
 8000616:	bd10      	pop	{r4, pc}
	...

08000620 <test_printn.part.1>:
 8000620:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000622:	46c6      	mov	lr, r8
 8000624:	b500      	push	{lr}
 8000626:	0006      	movs	r6, r0
 8000628:	b084      	sub	sp, #16
 800062a:	2800      	cmp	r0, #0
 800062c:	d020      	beq.n	8000670 <test_printn.part.1+0x50>
 800062e:	46e8      	mov	r8, sp
 8000630:	4645      	mov	r5, r8
 8000632:	e000      	b.n	8000636 <test_printn.part.1+0x16>
 8000634:	003d      	movs	r5, r7
 8000636:	0030      	movs	r0, r6
 8000638:	210a      	movs	r1, #10
 800063a:	f7ff fe47 	bl	80002cc <__aeabi_uidivmod>
 800063e:	3130      	adds	r1, #48	; 0x30
 8000640:	b2cc      	uxtb	r4, r1
 8000642:	0030      	movs	r0, r6
 8000644:	702c      	strb	r4, [r5, #0]
 8000646:	210a      	movs	r1, #10
 8000648:	f7ff fdba 	bl	80001c0 <__udivsi3>
 800064c:	1c6f      	adds	r7, r5, #1
 800064e:	1e06      	subs	r6, r0, #0
 8000650:	d1f0      	bne.n	8000634 <test_printn.part.1+0x14>
 8000652:	4547      	cmp	r7, r8
 8000654:	d90c      	bls.n	8000670 <test_printn.part.1+0x50>
 8000656:	466b      	mov	r3, sp
 8000658:	4e07      	ldr	r6, [pc, #28]	; (8000678 <test_printn.part.1+0x58>)
 800065a:	1e5f      	subs	r7, r3, #1
 800065c:	e000      	b.n	8000660 <test_printn.part.1+0x40>
 800065e:	782c      	ldrb	r4, [r5, #0]
 8000660:	6830      	ldr	r0, [r6, #0]
 8000662:	0021      	movs	r1, r4
 8000664:	6803      	ldr	r3, [r0, #0]
 8000666:	3d01      	subs	r5, #1
 8000668:	689b      	ldr	r3, [r3, #8]
 800066a:	4798      	blx	r3
 800066c:	42af      	cmp	r7, r5
 800066e:	d1f6      	bne.n	800065e <test_printn.part.1+0x3e>
 8000670:	b004      	add	sp, #16
 8000672:	bc04      	pop	{r2}
 8000674:	4690      	mov	r8, r2
 8000676:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000678:	20000880 	.word	0x20000880
 800067c:	00000000 	.word	0x00000000

08000680 <test_printn>:
 8000680:	b510      	push	{r4, lr}
 8000682:	2800      	cmp	r0, #0
 8000684:	d106      	bne.n	8000694 <test_printn+0x14>
 8000686:	4b05      	ldr	r3, [pc, #20]	; (800069c <test_printn+0x1c>)
 8000688:	2130      	movs	r1, #48	; 0x30
 800068a:	6818      	ldr	r0, [r3, #0]
 800068c:	6803      	ldr	r3, [r0, #0]
 800068e:	689b      	ldr	r3, [r3, #8]
 8000690:	4798      	blx	r3
 8000692:	bd10      	pop	{r4, pc}
 8000694:	f7ff ffc4 	bl	8000620 <test_printn.part.1>
 8000698:	e7fb      	b.n	8000692 <test_printn+0x12>
 800069a:	46c0      	nop			; (mov r8, r8)
 800069c:	20000880 	.word	0x20000880

080006a0 <print_line>:
 80006a0:	b570      	push	{r4, r5, r6, lr}
 80006a2:	244c      	movs	r4, #76	; 0x4c
 80006a4:	4d07      	ldr	r5, [pc, #28]	; (80006c4 <print_line+0x24>)
 80006a6:	6828      	ldr	r0, [r5, #0]
 80006a8:	212d      	movs	r1, #45	; 0x2d
 80006aa:	6803      	ldr	r3, [r0, #0]
 80006ac:	3c01      	subs	r4, #1
 80006ae:	689b      	ldr	r3, [r3, #8]
 80006b0:	4798      	blx	r3
 80006b2:	2c00      	cmp	r4, #0
 80006b4:	d1f7      	bne.n	80006a6 <print_line+0x6>
 80006b6:	6828      	ldr	r0, [r5, #0]
 80006b8:	2202      	movs	r2, #2
 80006ba:	6803      	ldr	r3, [r0, #0]
 80006bc:	4902      	ldr	r1, [pc, #8]	; (80006c8 <print_line+0x28>)
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	4798      	blx	r3
 80006c2:	bd70      	pop	{r4, r5, r6, pc}
 80006c4:	20000880 	.word	0x20000880
 80006c8:	08005b40 	.word	0x08005b40
 80006cc:	00000000 	.word	0x00000000

080006d0 <test_terminate_threads>:
 80006d0:	4b08      	ldr	r3, [pc, #32]	; (80006f4 <test_terminate_threads+0x24>)
 80006d2:	b510      	push	{r4, lr}
 80006d4:	0018      	movs	r0, r3
 80006d6:	2404      	movs	r4, #4
 80006d8:	3014      	adds	r0, #20
 80006da:	681a      	ldr	r2, [r3, #0]
 80006dc:	2a00      	cmp	r2, #0
 80006de:	d004      	beq.n	80006ea <test_terminate_threads+0x1a>
 80006e0:	b672      	cpsid	i
 80006e2:	7f51      	ldrb	r1, [r2, #29]
 80006e4:	4321      	orrs	r1, r4
 80006e6:	7751      	strb	r1, [r2, #29]
 80006e8:	b662      	cpsie	i
 80006ea:	3304      	adds	r3, #4
 80006ec:	4283      	cmp	r3, r0
 80006ee:	d1f4      	bne.n	80006da <test_terminate_threads+0xa>
 80006f0:	bd10      	pop	{r4, pc}
 80006f2:	46c0      	nop			; (mov r8, r8)
 80006f4:	20000fcc 	.word	0x20000fcc
	...

08000700 <_test_assert_time_window>:
 8000700:	b672      	cpsid	i
 8000702:	4b0a      	ldr	r3, [pc, #40]	; (800072c <_test_assert_time_window+0x2c>)
 8000704:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000706:	b662      	cpsie	i
 8000708:	041b      	lsls	r3, r3, #16
 800070a:	0c1b      	lsrs	r3, r3, #16
 800070c:	1a5b      	subs	r3, r3, r1
 800070e:	1a52      	subs	r2, r2, r1
 8000710:	2100      	movs	r1, #0
 8000712:	4293      	cmp	r3, r2
 8000714:	db07      	blt.n	8000726 <_test_assert_time_window+0x26>
 8000716:	2301      	movs	r3, #1
 8000718:	4a05      	ldr	r2, [pc, #20]	; (8000730 <_test_assert_time_window+0x30>)
 800071a:	3101      	adds	r1, #1
 800071c:	7013      	strb	r3, [r2, #0]
 800071e:	4a05      	ldr	r2, [pc, #20]	; (8000734 <_test_assert_time_window+0x34>)
 8000720:	7013      	strb	r3, [r2, #0]
 8000722:	4b05      	ldr	r3, [pc, #20]	; (8000738 <_test_assert_time_window+0x38>)
 8000724:	6018      	str	r0, [r3, #0]
 8000726:	0008      	movs	r0, r1
 8000728:	4770      	bx	lr
 800072a:	46c0      	nop			; (mov r8, r8)
 800072c:	40000400 	.word	0x40000400
 8000730:	20000fa0 	.word	0x20000fa0
 8000734:	20000904 	.word	0x20000904
 8000738:	200008ac 	.word	0x200008ac
 800073c:	00000000 	.word	0x00000000

08000740 <_test_assert_sequence>:
 8000740:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000742:	4e0e      	ldr	r6, [pc, #56]	; (800077c <_test_assert_sequence+0x3c>)
 8000744:	4f0e      	ldr	r7, [pc, #56]	; (8000780 <_test_assert_sequence+0x40>)
 8000746:	6835      	ldr	r5, [r6, #0]
 8000748:	003b      	movs	r3, r7
 800074a:	e004      	b.n	8000756 <_test_assert_sequence+0x16>
 800074c:	7824      	ldrb	r4, [r4, #0]
 800074e:	3101      	adds	r1, #1
 8000750:	3301      	adds	r3, #1
 8000752:	4294      	cmp	r4, r2
 8000754:	d108      	bne.n	8000768 <_test_assert_sequence+0x28>
 8000756:	780a      	ldrb	r2, [r1, #0]
 8000758:	001c      	movs	r4, r3
 800075a:	42ab      	cmp	r3, r5
 800075c:	d3f6      	bcc.n	800074c <_test_assert_sequence+0xc>
 800075e:	2a00      	cmp	r2, #0
 8000760:	d102      	bne.n	8000768 <_test_assert_sequence+0x28>
 8000762:	6037      	str	r7, [r6, #0]
 8000764:	2000      	movs	r0, #0
 8000766:	e007      	b.n	8000778 <_test_assert_sequence+0x38>
 8000768:	2301      	movs	r3, #1
 800076a:	4a06      	ldr	r2, [pc, #24]	; (8000784 <_test_assert_sequence+0x44>)
 800076c:	7013      	strb	r3, [r2, #0]
 800076e:	4a06      	ldr	r2, [pc, #24]	; (8000788 <_test_assert_sequence+0x48>)
 8000770:	7013      	strb	r3, [r2, #0]
 8000772:	4b06      	ldr	r3, [pc, #24]	; (800078c <_test_assert_sequence+0x4c>)
 8000774:	6018      	str	r0, [r3, #0]
 8000776:	2001      	movs	r0, #1
 8000778:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800077a:	46c0      	nop			; (mov r8, r8)
 800077c:	20000ff0 	.word	0x20000ff0
 8000780:	20000fe0 	.word	0x20000fe0
 8000784:	20000fa0 	.word	0x20000fa0
 8000788:	20000904 	.word	0x20000904
 800078c:	200008ac 	.word	0x200008ac

08000790 <_test_assert>:
 8000790:	2300      	movs	r3, #0
 8000792:	2900      	cmp	r1, #0
 8000794:	d107      	bne.n	80007a6 <_test_assert+0x16>
 8000796:	4a05      	ldr	r2, [pc, #20]	; (80007ac <_test_assert+0x1c>)
 8000798:	3301      	adds	r3, #1
 800079a:	7013      	strb	r3, [r2, #0]
 800079c:	4a04      	ldr	r2, [pc, #16]	; (80007b0 <_test_assert+0x20>)
 800079e:	7013      	strb	r3, [r2, #0]
 80007a0:	4b04      	ldr	r3, [pc, #16]	; (80007b4 <_test_assert+0x24>)
 80007a2:	6018      	str	r0, [r3, #0]
 80007a4:	2301      	movs	r3, #1
 80007a6:	0018      	movs	r0, r3
 80007a8:	4770      	bx	lr
 80007aa:	46c0      	nop			; (mov r8, r8)
 80007ac:	20000fa0 	.word	0x20000fa0
 80007b0:	20000904 	.word	0x20000904
 80007b4:	200008ac 	.word	0x200008ac
	...

080007c0 <test_emit_token>:
 80007c0:	b672      	cpsid	i
 80007c2:	4a03      	ldr	r2, [pc, #12]	; (80007d0 <test_emit_token+0x10>)
 80007c4:	6813      	ldr	r3, [r2, #0]
 80007c6:	1c59      	adds	r1, r3, #1
 80007c8:	6011      	str	r1, [r2, #0]
 80007ca:	7018      	strb	r0, [r3, #0]
 80007cc:	b662      	cpsie	i
 80007ce:	4770      	bx	lr
 80007d0:	20000ff0 	.word	0x20000ff0
	...

080007e0 <h3>:
 80007e0:	b510      	push	{r4, lr}
 80007e2:	2043      	movs	r0, #67	; 0x43
 80007e4:	f7ff ffec 	bl	80007c0 <test_emit_token>
 80007e8:	bd10      	pop	{r4, pc}
 80007ea:	46c0      	nop			; (mov r8, r8)
 80007ec:	0000      	movs	r0, r0
	...

080007f0 <h2>:
 80007f0:	b510      	push	{r4, lr}
 80007f2:	2042      	movs	r0, #66	; 0x42
 80007f4:	f7ff ffe4 	bl	80007c0 <test_emit_token>
 80007f8:	bd10      	pop	{r4, pc}
 80007fa:	46c0      	nop			; (mov r8, r8)
 80007fc:	0000      	movs	r0, r0
	...

08000800 <h1>:
 8000800:	b510      	push	{r4, lr}
 8000802:	2041      	movs	r0, #65	; 0x41
 8000804:	f7ff ffdc 	bl	80007c0 <test_emit_token>
 8000808:	bd10      	pop	{r4, pc}
 800080a:	46c0      	nop			; (mov r8, r8)
 800080c:	0000      	movs	r0, r0
	...

08000810 <thread.lto_priv.57>:
 8000810:	b510      	push	{r4, lr}
 8000812:	7800      	ldrb	r0, [r0, #0]
 8000814:	f7ff ffd4 	bl	80007c0 <test_emit_token>
 8000818:	bd10      	pop	{r4, pc}
 800081a:	46c0      	nop			; (mov r8, r8)
 800081c:	0000      	movs	r0, r0
	...

08000820 <thread.lto_priv.59>:
 8000820:	b510      	push	{r4, lr}
 8000822:	f7ff fff5 	bl	8000810 <thread.lto_priv.57>
 8000826:	bd10      	pop	{r4, pc}
	...

08000830 <test_println>:
 8000830:	b570      	push	{r4, r5, r6, lr}
 8000832:	7801      	ldrb	r1, [r0, #0]
 8000834:	0004      	movs	r4, r0
 8000836:	4d09      	ldr	r5, [pc, #36]	; (800085c <test_println+0x2c>)
 8000838:	2900      	cmp	r1, #0
 800083a:	d007      	beq.n	800084c <test_println+0x1c>
 800083c:	6828      	ldr	r0, [r5, #0]
 800083e:	3401      	adds	r4, #1
 8000840:	6803      	ldr	r3, [r0, #0]
 8000842:	689b      	ldr	r3, [r3, #8]
 8000844:	4798      	blx	r3
 8000846:	7821      	ldrb	r1, [r4, #0]
 8000848:	2900      	cmp	r1, #0
 800084a:	d1f7      	bne.n	800083c <test_println+0xc>
 800084c:	6828      	ldr	r0, [r5, #0]
 800084e:	2202      	movs	r2, #2
 8000850:	6803      	ldr	r3, [r0, #0]
 8000852:	4903      	ldr	r1, [pc, #12]	; (8000860 <test_println+0x30>)
 8000854:	681b      	ldr	r3, [r3, #0]
 8000856:	4798      	blx	r3
 8000858:	bd70      	pop	{r4, r5, r6, pc}
 800085a:	46c0      	nop			; (mov r8, r8)
 800085c:	20000880 	.word	0x20000880
 8000860:	08005b40 	.word	0x08005b40
	...

08000870 <test_print>:
 8000870:	b570      	push	{r4, r5, r6, lr}
 8000872:	7801      	ldrb	r1, [r0, #0]
 8000874:	0004      	movs	r4, r0
 8000876:	2900      	cmp	r1, #0
 8000878:	d008      	beq.n	800088c <test_print+0x1c>
 800087a:	4d05      	ldr	r5, [pc, #20]	; (8000890 <test_print+0x20>)
 800087c:	6828      	ldr	r0, [r5, #0]
 800087e:	3401      	adds	r4, #1
 8000880:	6803      	ldr	r3, [r0, #0]
 8000882:	689b      	ldr	r3, [r3, #8]
 8000884:	4798      	blx	r3
 8000886:	7821      	ldrb	r1, [r4, #0]
 8000888:	2900      	cmp	r1, #0
 800088a:	d1f7      	bne.n	800087c <test_print+0xc>
 800088c:	bd70      	pop	{r4, r5, r6, pc}
 800088e:	46c0      	nop			; (mov r8, r8)
 8000890:	20000880 	.word	0x20000880
	...

080008a0 <_port_irq_epilogue.part.0>:
 80008a0:	b580      	push	{r7, lr}
 80008a2:	af00      	add	r7, sp, #0
 80008a4:	b672      	cpsid	i
 80008a6:	f3ef 8309 	mrs	r3, PSP
 80008aa:	3b20      	subs	r3, #32
 80008ac:	f383 8809 	msr	PSP, r3
 80008b0:	2280      	movs	r2, #128	; 0x80
 80008b2:	0452      	lsls	r2, r2, #17
 80008b4:	61da      	str	r2, [r3, #28]
 80008b6:	4a07      	ldr	r2, [pc, #28]	; (80008d4 <_port_irq_epilogue.part.0+0x34>)
 80008b8:	6811      	ldr	r1, [r2, #0]
 80008ba:	6992      	ldr	r2, [r2, #24]
 80008bc:	6889      	ldr	r1, [r1, #8]
 80008be:	6892      	ldr	r2, [r2, #8]
 80008c0:	4291      	cmp	r1, r2
 80008c2:	d803      	bhi.n	80008cc <_port_irq_epilogue.part.0+0x2c>
 80008c4:	4a04      	ldr	r2, [pc, #16]	; (80008d8 <_port_irq_epilogue.part.0+0x38>)
 80008c6:	619a      	str	r2, [r3, #24]
 80008c8:	46bd      	mov	sp, r7
 80008ca:	bd80      	pop	{r7, pc}
 80008cc:	4a03      	ldr	r2, [pc, #12]	; (80008dc <_port_irq_epilogue.part.0+0x3c>)
 80008ce:	619a      	str	r2, [r3, #24]
 80008d0:	e7fa      	b.n	80008c8 <_port_irq_epilogue.part.0+0x28>
 80008d2:	46c0      	nop			; (mov r8, r8)
 80008d4:	20000738 	.word	0x20000738
 80008d8:	080001b0 	.word	0x080001b0
 80008dc:	080001ad 	.word	0x080001ad

080008e0 <NMI_Handler>:
 80008e0:	b580      	push	{r7, lr}
 80008e2:	af00      	add	r7, sp, #0
 80008e4:	f3ef 8309 	mrs	r3, PSP
 80008e8:	3320      	adds	r3, #32
 80008ea:	f383 8809 	msr	PSP, r3
 80008ee:	b662      	cpsie	i
 80008f0:	46bd      	mov	sp, r7
 80008f2:	bd80      	pop	{r7, pc}
	...

08000900 <chPoolAlloc>:
 8000900:	b510      	push	{r4, lr}
 8000902:	0003      	movs	r3, r0
 8000904:	b672      	cpsid	i
 8000906:	6800      	ldr	r0, [r0, #0]
 8000908:	2800      	cmp	r0, #0
 800090a:	d003      	beq.n	8000914 <chPoolAlloc+0x14>
 800090c:	6802      	ldr	r2, [r0, #0]
 800090e:	601a      	str	r2, [r3, #0]
 8000910:	b662      	cpsie	i
 8000912:	bd10      	pop	{r4, pc}
 8000914:	689a      	ldr	r2, [r3, #8]
 8000916:	2a00      	cmp	r2, #0
 8000918:	d0fa      	beq.n	8000910 <chPoolAlloc+0x10>
 800091a:	6858      	ldr	r0, [r3, #4]
 800091c:	4790      	blx	r2
 800091e:	e7f7      	b.n	8000910 <chPoolAlloc+0x10>

08000920 <pools1_execute>:
 8000920:	b570      	push	{r4, r5, r6, lr}
 8000922:	4e2f      	ldr	r6, [pc, #188]	; (80009e0 <pools1_execute+0xc0>)
 8000924:	2205      	movs	r2, #5
 8000926:	0033      	movs	r3, r6
 8000928:	4c2e      	ldr	r4, [pc, #184]	; (80009e4 <pools1_execute+0xc4>)
 800092a:	b672      	cpsid	i
 800092c:	6821      	ldr	r1, [r4, #0]
 800092e:	6023      	str	r3, [r4, #0]
 8000930:	6019      	str	r1, [r3, #0]
 8000932:	b662      	cpsie	i
 8000934:	6861      	ldr	r1, [r4, #4]
 8000936:	3a01      	subs	r2, #1
 8000938:	468c      	mov	ip, r1
 800093a:	4463      	add	r3, ip
 800093c:	2a00      	cmp	r2, #0
 800093e:	d1f4      	bne.n	800092a <pools1_execute+0xa>
 8000940:	2505      	movs	r5, #5
 8000942:	0020      	movs	r0, r4
 8000944:	f7ff ffdc 	bl	8000900 <chPoolAlloc>
 8000948:	1e41      	subs	r1, r0, #1
 800094a:	4188      	sbcs	r0, r1
 800094c:	b2c1      	uxtb	r1, r0
 800094e:	2001      	movs	r0, #1
 8000950:	f7ff ff1e 	bl	8000790 <_test_assert>
 8000954:	2800      	cmp	r0, #0
 8000956:	d141      	bne.n	80009dc <pools1_execute+0xbc>
 8000958:	3d01      	subs	r5, #1
 800095a:	2d00      	cmp	r5, #0
 800095c:	d1f1      	bne.n	8000942 <pools1_execute+0x22>
 800095e:	0020      	movs	r0, r4
 8000960:	f7ff ffce 	bl	8000900 <chPoolAlloc>
 8000964:	4241      	negs	r1, r0
 8000966:	4141      	adcs	r1, r0
 8000968:	2002      	movs	r0, #2
 800096a:	b2c9      	uxtb	r1, r1
 800096c:	f7ff ff10 	bl	8000790 <_test_assert>
 8000970:	2800      	cmp	r0, #0
 8000972:	d133      	bne.n	80009dc <pools1_execute+0xbc>
 8000974:	2200      	movs	r2, #0
 8000976:	491c      	ldr	r1, [pc, #112]	; (80009e8 <pools1_execute+0xc8>)
 8000978:	b672      	cpsid	i
 800097a:	6823      	ldr	r3, [r4, #0]
 800097c:	6033      	str	r3, [r6, #0]
 800097e:	6026      	str	r6, [r4, #0]
 8000980:	b662      	cpsie	i
 8000982:	3204      	adds	r2, #4
 8000984:	2a14      	cmp	r2, #20
 8000986:	d001      	beq.n	800098c <pools1_execute+0x6c>
 8000988:	5856      	ldr	r6, [r2, r1]
 800098a:	e7f5      	b.n	8000978 <pools1_execute+0x58>
 800098c:	2505      	movs	r5, #5
 800098e:	0020      	movs	r0, r4
 8000990:	f7ff ffb6 	bl	8000900 <chPoolAlloc>
 8000994:	1e41      	subs	r1, r0, #1
 8000996:	4188      	sbcs	r0, r1
 8000998:	b2c1      	uxtb	r1, r0
 800099a:	2003      	movs	r0, #3
 800099c:	f7ff fef8 	bl	8000790 <_test_assert>
 80009a0:	2800      	cmp	r0, #0
 80009a2:	d11b      	bne.n	80009dc <pools1_execute+0xbc>
 80009a4:	3d01      	subs	r5, #1
 80009a6:	2d00      	cmp	r5, #0
 80009a8:	d1f1      	bne.n	800098e <pools1_execute+0x6e>
 80009aa:	0020      	movs	r0, r4
 80009ac:	f7ff ffa8 	bl	8000900 <chPoolAlloc>
 80009b0:	4241      	negs	r1, r0
 80009b2:	4141      	adcs	r1, r0
 80009b4:	2004      	movs	r0, #4
 80009b6:	b2c9      	uxtb	r1, r1
 80009b8:	f7ff feea 	bl	8000790 <_test_assert>
 80009bc:	2800      	cmp	r0, #0
 80009be:	d10d      	bne.n	80009dc <pools1_execute+0xbc>
 80009c0:	2310      	movs	r3, #16
 80009c2:	6063      	str	r3, [r4, #4]
 80009c4:	4b09      	ldr	r3, [pc, #36]	; (80009ec <pools1_execute+0xcc>)
 80009c6:	0020      	movs	r0, r4
 80009c8:	6025      	str	r5, [r4, #0]
 80009ca:	60a3      	str	r3, [r4, #8]
 80009cc:	f7ff ff98 	bl	8000900 <chPoolAlloc>
 80009d0:	4241      	negs	r1, r0
 80009d2:	4141      	adcs	r1, r0
 80009d4:	2005      	movs	r0, #5
 80009d6:	b2c9      	uxtb	r1, r1
 80009d8:	f7ff feda 	bl	8000790 <_test_assert>
 80009dc:	bd70      	pop	{r4, r5, r6, pc}
 80009de:	46c0      	nop			; (mov r8, r8)
 80009e0:	20000938 	.word	0x20000938
 80009e4:	2000067c 	.word	0x2000067c
 80009e8:	080062f0 	.word	0x080062f0
 80009ec:	08000491 	.word	0x08000491

080009f0 <chEvtUnregister>:
 80009f0:	b672      	cpsid	i
 80009f2:	0002      	movs	r2, r0
 80009f4:	e002      	b.n	80009fc <chEvtUnregister+0xc>
 80009f6:	428b      	cmp	r3, r1
 80009f8:	d005      	beq.n	8000a06 <chEvtUnregister+0x16>
 80009fa:	001a      	movs	r2, r3
 80009fc:	6813      	ldr	r3, [r2, #0]
 80009fe:	4283      	cmp	r3, r0
 8000a00:	d1f9      	bne.n	80009f6 <chEvtUnregister+0x6>
 8000a02:	b662      	cpsie	i
 8000a04:	4770      	bx	lr
 8000a06:	680b      	ldr	r3, [r1, #0]
 8000a08:	6013      	str	r3, [r2, #0]
 8000a0a:	e7fa      	b.n	8000a02 <chEvtUnregister+0x12>
 8000a0c:	0000      	movs	r0, r0
	...

08000a10 <evt1_execute>:
 8000a10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000a12:	4c30      	ldr	r4, [pc, #192]	; (8000ad4 <evt1_execute+0xc4>)
 8000a14:	b08d      	sub	sp, #52	; 0x34
 8000a16:	6024      	str	r4, [r4, #0]
 8000a18:	b672      	cpsid	i
 8000a1a:	492f      	ldr	r1, [pc, #188]	; (8000ad8 <evt1_execute+0xc8>)
 8000a1c:	6823      	ldr	r3, [r4, #0]
 8000a1e:	ad07      	add	r5, sp, #28
 8000a20:	9307      	str	r3, [sp, #28]
 8000a22:	698b      	ldr	r3, [r1, #24]
 8000a24:	2200      	movs	r2, #0
 8000a26:	606b      	str	r3, [r5, #4]
 8000a28:	2301      	movs	r3, #1
 8000a2a:	60ab      	str	r3, [r5, #8]
 8000a2c:	3b02      	subs	r3, #2
 8000a2e:	6025      	str	r5, [r4, #0]
 8000a30:	60ea      	str	r2, [r5, #12]
 8000a32:	612b      	str	r3, [r5, #16]
 8000a34:	b662      	cpsie	i
 8000a36:	b672      	cpsid	i
 8000a38:	6989      	ldr	r1, [r1, #24]
 8000a3a:	6820      	ldr	r0, [r4, #0]
 8000a3c:	9101      	str	r1, [sp, #4]
 8000a3e:	9103      	str	r1, [sp, #12]
 8000a40:	2102      	movs	r1, #2
 8000a42:	9002      	str	r0, [sp, #8]
 8000a44:	a802      	add	r0, sp, #8
 8000a46:	6020      	str	r0, [r4, #0]
 8000a48:	9104      	str	r1, [sp, #16]
 8000a4a:	9205      	str	r2, [sp, #20]
 8000a4c:	9306      	str	r3, [sp, #24]
 8000a4e:	b662      	cpsie	i
 8000a50:	6823      	ldr	r3, [r4, #0]
 8000a52:	2001      	movs	r0, #1
 8000a54:	1b19      	subs	r1, r3, r4
 8000a56:	1e4b      	subs	r3, r1, #1
 8000a58:	4199      	sbcs	r1, r3
 8000a5a:	b2c9      	uxtb	r1, r1
 8000a5c:	f7ff fe98 	bl	8000790 <_test_assert>
 8000a60:	2800      	cmp	r0, #0
 8000a62:	d001      	beq.n	8000a68 <evt1_execute+0x58>
 8000a64:	b00d      	add	sp, #52	; 0x34
 8000a66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a68:	0029      	movs	r1, r5
 8000a6a:	0020      	movs	r0, r4
 8000a6c:	f7ff ffc0 	bl	80009f0 <chEvtUnregister>
 8000a70:	6823      	ldr	r3, [r4, #0]
 8000a72:	2002      	movs	r0, #2
 8000a74:	1b19      	subs	r1, r3, r4
 8000a76:	1e4b      	subs	r3, r1, #1
 8000a78:	4199      	sbcs	r1, r3
 8000a7a:	b2c9      	uxtb	r1, r1
 8000a7c:	f7ff fe88 	bl	8000790 <_test_assert>
 8000a80:	2800      	cmp	r0, #0
 8000a82:	d1ef      	bne.n	8000a64 <evt1_execute+0x54>
 8000a84:	0020      	movs	r0, r4
 8000a86:	a902      	add	r1, sp, #8
 8000a88:	f7ff ffb2 	bl	80009f0 <chEvtUnregister>
 8000a8c:	6823      	ldr	r3, [r4, #0]
 8000a8e:	2003      	movs	r0, #3
 8000a90:	1b1c      	subs	r4, r3, r4
 8000a92:	4261      	negs	r1, r4
 8000a94:	4161      	adcs	r1, r4
 8000a96:	b2c9      	uxtb	r1, r1
 8000a98:	f7ff fe7a 	bl	8000790 <_test_assert>
 8000a9c:	2800      	cmp	r0, #0
 8000a9e:	d1e1      	bne.n	8000a64 <evt1_execute+0x54>
 8000aa0:	2507      	movs	r5, #7
 8000aa2:	2400      	movs	r4, #0
 8000aa4:	2601      	movs	r6, #1
 8000aa6:	4f0d      	ldr	r7, [pc, #52]	; (8000adc <evt1_execute+0xcc>)
 8000aa8:	002b      	movs	r3, r5
 8000aaa:	40e3      	lsrs	r3, r4
 8000aac:	421e      	tst	r6, r3
 8000aae:	d00e      	beq.n	8000ace <evt1_execute+0xbe>
 8000ab0:	0033      	movs	r3, r6
 8000ab2:	40a3      	lsls	r3, r4
 8000ab4:	439d      	bics	r5, r3
 8000ab6:	00a3      	lsls	r3, r4, #2
 8000ab8:	0020      	movs	r0, r4
 8000aba:	58fb      	ldr	r3, [r7, r3]
 8000abc:	4798      	blx	r3
 8000abe:	3401      	adds	r4, #1
 8000ac0:	2d00      	cmp	r5, #0
 8000ac2:	d1f1      	bne.n	8000aa8 <evt1_execute+0x98>
 8000ac4:	4906      	ldr	r1, [pc, #24]	; (8000ae0 <evt1_execute+0xd0>)
 8000ac6:	2004      	movs	r0, #4
 8000ac8:	f7ff fe3a 	bl	8000740 <_test_assert_sequence>
 8000acc:	e7ca      	b.n	8000a64 <evt1_execute+0x54>
 8000ace:	3401      	adds	r4, #1
 8000ad0:	e7ea      	b.n	8000aa8 <evt1_execute+0x98>
 8000ad2:	46c0      	nop			; (mov r8, r8)
 8000ad4:	20000608 	.word	0x20000608
 8000ad8:	20000738 	.word	0x20000738
 8000adc:	080057a0 	.word	0x080057a0
 8000ae0:	080057b0 	.word	0x080057b0
	...

08000af0 <wakeup>:
 8000af0:	b672      	cpsid	i
 8000af2:	7f03      	ldrb	r3, [r0, #28]
 8000af4:	2b07      	cmp	r3, #7
 8000af6:	d80c      	bhi.n	8000b12 <wakeup+0x22>
 8000af8:	4a11      	ldr	r2, [pc, #68]	; (8000b40 <wakeup+0x50>)
 8000afa:	009b      	lsls	r3, r3, #2
 8000afc:	58d3      	ldr	r3, [r2, r3]
 8000afe:	469f      	mov	pc, r3
 8000b00:	6a02      	ldr	r2, [r0, #32]
 8000b02:	6893      	ldr	r3, [r2, #8]
 8000b04:	3301      	adds	r3, #1
 8000b06:	6093      	str	r3, [r2, #8]
 8000b08:	6802      	ldr	r2, [r0, #0]
 8000b0a:	6843      	ldr	r3, [r0, #4]
 8000b0c:	601a      	str	r2, [r3, #0]
 8000b0e:	6802      	ldr	r2, [r0, #0]
 8000b10:	6053      	str	r3, [r2, #4]
 8000b12:	2301      	movs	r3, #1
 8000b14:	425b      	negs	r3, r3
 8000b16:	6203      	str	r3, [r0, #32]
 8000b18:	2300      	movs	r3, #0
 8000b1a:	6882      	ldr	r2, [r0, #8]
 8000b1c:	7703      	strb	r3, [r0, #28]
 8000b1e:	4b09      	ldr	r3, [pc, #36]	; (8000b44 <wakeup+0x54>)
 8000b20:	681b      	ldr	r3, [r3, #0]
 8000b22:	6899      	ldr	r1, [r3, #8]
 8000b24:	4291      	cmp	r1, r2
 8000b26:	d2fb      	bcs.n	8000b20 <wakeup+0x30>
 8000b28:	685a      	ldr	r2, [r3, #4]
 8000b2a:	6003      	str	r3, [r0, #0]
 8000b2c:	6042      	str	r2, [r0, #4]
 8000b2e:	6010      	str	r0, [r2, #0]
 8000b30:	6058      	str	r0, [r3, #4]
 8000b32:	b662      	cpsie	i
 8000b34:	4770      	bx	lr
 8000b36:	2200      	movs	r2, #0
 8000b38:	6a03      	ldr	r3, [r0, #32]
 8000b3a:	601a      	str	r2, [r3, #0]
 8000b3c:	e7e9      	b.n	8000b12 <wakeup+0x22>
 8000b3e:	46c0      	nop			; (mov r8, r8)
 8000b40:	080055b0 	.word	0x080055b0
 8000b44:	20000738 	.word	0x20000738
	...

08000b50 <chSchReadyI>:
 8000b50:	2300      	movs	r3, #0
 8000b52:	6882      	ldr	r2, [r0, #8]
 8000b54:	7703      	strb	r3, [r0, #28]
 8000b56:	4b05      	ldr	r3, [pc, #20]	; (8000b6c <chSchReadyI+0x1c>)
 8000b58:	681b      	ldr	r3, [r3, #0]
 8000b5a:	6899      	ldr	r1, [r3, #8]
 8000b5c:	4291      	cmp	r1, r2
 8000b5e:	d2fb      	bcs.n	8000b58 <chSchReadyI+0x8>
 8000b60:	685a      	ldr	r2, [r3, #4]
 8000b62:	6003      	str	r3, [r0, #0]
 8000b64:	6042      	str	r2, [r0, #4]
 8000b66:	6010      	str	r0, [r2, #0]
 8000b68:	6058      	str	r0, [r3, #4]
 8000b6a:	4770      	bx	lr
 8000b6c:	20000738 	.word	0x20000738

08000b70 <chCondSignalI.constprop.42>:
 8000b70:	4b06      	ldr	r3, [pc, #24]	; (8000b8c <chCondSignalI.constprop.42+0x1c>)
 8000b72:	b510      	push	{r4, lr}
 8000b74:	6818      	ldr	r0, [r3, #0]
 8000b76:	4298      	cmp	r0, r3
 8000b78:	d006      	beq.n	8000b88 <chCondSignalI.constprop.42+0x18>
 8000b7a:	6802      	ldr	r2, [r0, #0]
 8000b7c:	6053      	str	r3, [r2, #4]
 8000b7e:	601a      	str	r2, [r3, #0]
 8000b80:	2300      	movs	r3, #0
 8000b82:	6203      	str	r3, [r0, #32]
 8000b84:	f7ff ffe4 	bl	8000b50 <chSchReadyI>
 8000b88:	bd10      	pop	{r4, pc}
 8000b8a:	46c0      	nop			; (mov r8, r8)
 8000b8c:	20000600 	.word	0x20000600

08000b90 <chIQPutI>:
 8000b90:	b510      	push	{r4, lr}
 8000b92:	6942      	ldr	r2, [r0, #20]
 8000b94:	6984      	ldr	r4, [r0, #24]
 8000b96:	6883      	ldr	r3, [r0, #8]
 8000b98:	42a2      	cmp	r2, r4
 8000b9a:	d018      	beq.n	8000bce <chIQPutI+0x3e>
 8000b9c:	3301      	adds	r3, #1
 8000b9e:	6083      	str	r3, [r0, #8]
 8000ba0:	1c53      	adds	r3, r2, #1
 8000ba2:	6143      	str	r3, [r0, #20]
 8000ba4:	7011      	strb	r1, [r2, #0]
 8000ba6:	6943      	ldr	r3, [r0, #20]
 8000ba8:	6902      	ldr	r2, [r0, #16]
 8000baa:	4293      	cmp	r3, r2
 8000bac:	d20c      	bcs.n	8000bc8 <chIQPutI+0x38>
 8000bae:	6803      	ldr	r3, [r0, #0]
 8000bb0:	2400      	movs	r4, #0
 8000bb2:	4298      	cmp	r0, r3
 8000bb4:	d006      	beq.n	8000bc4 <chIQPutI+0x34>
 8000bb6:	681a      	ldr	r2, [r3, #0]
 8000bb8:	6002      	str	r2, [r0, #0]
 8000bba:	6050      	str	r0, [r2, #4]
 8000bbc:	621c      	str	r4, [r3, #32]
 8000bbe:	0018      	movs	r0, r3
 8000bc0:	f7ff ffc6 	bl	8000b50 <chSchReadyI>
 8000bc4:	0020      	movs	r0, r4
 8000bc6:	bd10      	pop	{r4, pc}
 8000bc8:	68c3      	ldr	r3, [r0, #12]
 8000bca:	6143      	str	r3, [r0, #20]
 8000bcc:	e7ef      	b.n	8000bae <chIQPutI+0x1e>
 8000bce:	2b00      	cmp	r3, #0
 8000bd0:	d0e4      	beq.n	8000b9c <chIQPutI+0xc>
 8000bd2:	2404      	movs	r4, #4
 8000bd4:	4264      	negs	r4, r4
 8000bd6:	e7f5      	b.n	8000bc4 <chIQPutI+0x34>
	...

08000be0 <chOQGetI>:
 8000be0:	6982      	ldr	r2, [r0, #24]
 8000be2:	6941      	ldr	r1, [r0, #20]
 8000be4:	b510      	push	{r4, lr}
 8000be6:	6883      	ldr	r3, [r0, #8]
 8000be8:	4291      	cmp	r1, r2
 8000bea:	d017      	beq.n	8000c1c <chOQGetI+0x3c>
 8000bec:	3301      	adds	r3, #1
 8000bee:	6083      	str	r3, [r0, #8]
 8000bf0:	1c53      	adds	r3, r2, #1
 8000bf2:	6183      	str	r3, [r0, #24]
 8000bf4:	7814      	ldrb	r4, [r2, #0]
 8000bf6:	6902      	ldr	r2, [r0, #16]
 8000bf8:	4293      	cmp	r3, r2
 8000bfa:	d20c      	bcs.n	8000c16 <chOQGetI+0x36>
 8000bfc:	6803      	ldr	r3, [r0, #0]
 8000bfe:	4298      	cmp	r0, r3
 8000c00:	d007      	beq.n	8000c12 <chOQGetI+0x32>
 8000c02:	681a      	ldr	r2, [r3, #0]
 8000c04:	6002      	str	r2, [r0, #0]
 8000c06:	6050      	str	r0, [r2, #4]
 8000c08:	2200      	movs	r2, #0
 8000c0a:	0018      	movs	r0, r3
 8000c0c:	621a      	str	r2, [r3, #32]
 8000c0e:	f7ff ff9f 	bl	8000b50 <chSchReadyI>
 8000c12:	0020      	movs	r0, r4
 8000c14:	bd10      	pop	{r4, pc}
 8000c16:	68c3      	ldr	r3, [r0, #12]
 8000c18:	6183      	str	r3, [r0, #24]
 8000c1a:	e7ef      	b.n	8000bfc <chOQGetI+0x1c>
 8000c1c:	2b00      	cmp	r3, #0
 8000c1e:	d0e5      	beq.n	8000bec <chOQGetI+0xc>
 8000c20:	2003      	movs	r0, #3
 8000c22:	4240      	negs	r0, r0
 8000c24:	e7f6      	b.n	8000c14 <chOQGetI+0x34>
 8000c26:	46c0      	nop			; (mov r8, r8)
	...

08000c30 <chEvtSignalI>:
 8000c30:	b510      	push	{r4, lr}
 8000c32:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8000c34:	4319      	orrs	r1, r3
 8000c36:	7f03      	ldrb	r3, [r0, #28]
 8000c38:	6341      	str	r1, [r0, #52]	; 0x34
 8000c3a:	2b0a      	cmp	r3, #10
 8000c3c:	d00b      	beq.n	8000c56 <chEvtSignalI+0x26>
 8000c3e:	2b0b      	cmp	r3, #11
 8000c40:	d000      	beq.n	8000c44 <chEvtSignalI+0x14>
 8000c42:	bd10      	pop	{r4, pc}
 8000c44:	6a03      	ldr	r3, [r0, #32]
 8000c46:	4019      	ands	r1, r3
 8000c48:	428b      	cmp	r3, r1
 8000c4a:	d1fa      	bne.n	8000c42 <chEvtSignalI+0x12>
 8000c4c:	2300      	movs	r3, #0
 8000c4e:	6203      	str	r3, [r0, #32]
 8000c50:	f7ff ff7e 	bl	8000b50 <chSchReadyI>
 8000c54:	e7f5      	b.n	8000c42 <chEvtSignalI+0x12>
 8000c56:	6a03      	ldr	r3, [r0, #32]
 8000c58:	420b      	tst	r3, r1
 8000c5a:	d0f2      	beq.n	8000c42 <chEvtSignalI+0x12>
 8000c5c:	2300      	movs	r3, #0
 8000c5e:	6203      	str	r3, [r0, #32]
 8000c60:	f7ff ff76 	bl	8000b50 <chSchReadyI>
 8000c64:	e7ed      	b.n	8000c42 <chEvtSignalI+0x12>
 8000c66:	46c0      	nop			; (mov r8, r8)
	...

08000c70 <chEvtBroadcastFlagsI>:
 8000c70:	b570      	push	{r4, r5, r6, lr}
 8000c72:	6804      	ldr	r4, [r0, #0]
 8000c74:	0006      	movs	r6, r0
 8000c76:	000d      	movs	r5, r1
 8000c78:	42a0      	cmp	r0, r4
 8000c7a:	d00e      	beq.n	8000c9a <chEvtBroadcastFlagsI+0x2a>
 8000c7c:	68e3      	ldr	r3, [r4, #12]
 8000c7e:	432b      	orrs	r3, r5
 8000c80:	60e3      	str	r3, [r4, #12]
 8000c82:	2d00      	cmp	r5, #0
 8000c84:	d002      	beq.n	8000c8c <chEvtBroadcastFlagsI+0x1c>
 8000c86:	6922      	ldr	r2, [r4, #16]
 8000c88:	421a      	tst	r2, r3
 8000c8a:	d003      	beq.n	8000c94 <chEvtBroadcastFlagsI+0x24>
 8000c8c:	68a1      	ldr	r1, [r4, #8]
 8000c8e:	6860      	ldr	r0, [r4, #4]
 8000c90:	f7ff ffce 	bl	8000c30 <chEvtSignalI>
 8000c94:	6824      	ldr	r4, [r4, #0]
 8000c96:	42a6      	cmp	r6, r4
 8000c98:	d1f0      	bne.n	8000c7c <chEvtBroadcastFlagsI+0xc>
 8000c9a:	bd70      	pop	{r4, r5, r6, pc}
 8000c9c:	0000      	movs	r0, r0
	...

08000ca0 <chMtxUnlockS>:
 8000ca0:	4b11      	ldr	r3, [pc, #68]	; (8000ce8 <chMtxUnlockS+0x48>)
 8000ca2:	b570      	push	{r4, r5, r6, lr}
 8000ca4:	6801      	ldr	r1, [r0, #0]
 8000ca6:	699d      	ldr	r5, [r3, #24]
 8000ca8:	68c3      	ldr	r3, [r0, #12]
 8000caa:	63ab      	str	r3, [r5, #56]	; 0x38
 8000cac:	4281      	cmp	r1, r0
 8000cae:	d018      	beq.n	8000ce2 <chMtxUnlockS+0x42>
 8000cb0:	6bec      	ldr	r4, [r5, #60]	; 0x3c
 8000cb2:	2b00      	cmp	r3, #0
 8000cb4:	d009      	beq.n	8000cca <chMtxUnlockS+0x2a>
 8000cb6:	681a      	ldr	r2, [r3, #0]
 8000cb8:	4293      	cmp	r3, r2
 8000cba:	d003      	beq.n	8000cc4 <chMtxUnlockS+0x24>
 8000cbc:	6892      	ldr	r2, [r2, #8]
 8000cbe:	4294      	cmp	r4, r2
 8000cc0:	d200      	bcs.n	8000cc4 <chMtxUnlockS+0x24>
 8000cc2:	0014      	movs	r4, r2
 8000cc4:	68db      	ldr	r3, [r3, #12]
 8000cc6:	2b00      	cmp	r3, #0
 8000cc8:	d1f5      	bne.n	8000cb6 <chMtxUnlockS+0x16>
 8000cca:	680b      	ldr	r3, [r1, #0]
 8000ccc:	60ac      	str	r4, [r5, #8]
 8000cce:	6003      	str	r3, [r0, #0]
 8000cd0:	6058      	str	r0, [r3, #4]
 8000cd2:	6b8b      	ldr	r3, [r1, #56]	; 0x38
 8000cd4:	6081      	str	r1, [r0, #8]
 8000cd6:	60c3      	str	r3, [r0, #12]
 8000cd8:	6388      	str	r0, [r1, #56]	; 0x38
 8000cda:	0008      	movs	r0, r1
 8000cdc:	f7ff ff38 	bl	8000b50 <chSchReadyI>
 8000ce0:	bd70      	pop	{r4, r5, r6, pc}
 8000ce2:	2300      	movs	r3, #0
 8000ce4:	608b      	str	r3, [r1, #8]
 8000ce6:	e7fb      	b.n	8000ce0 <chMtxUnlockS+0x40>
 8000ce8:	20000738 	.word	0x20000738
 8000cec:	00000000 	.word	0x00000000

08000cf0 <chSemSignalI>:
 8000cf0:	6883      	ldr	r3, [r0, #8]
 8000cf2:	b510      	push	{r4, lr}
 8000cf4:	3301      	adds	r3, #1
 8000cf6:	6083      	str	r3, [r0, #8]
 8000cf8:	2b00      	cmp	r3, #0
 8000cfa:	dd00      	ble.n	8000cfe <chSemSignalI+0xe>
 8000cfc:	bd10      	pop	{r4, pc}
 8000cfe:	6803      	ldr	r3, [r0, #0]
 8000d00:	681a      	ldr	r2, [r3, #0]
 8000d02:	6002      	str	r2, [r0, #0]
 8000d04:	6050      	str	r0, [r2, #4]
 8000d06:	2200      	movs	r2, #0
 8000d08:	0018      	movs	r0, r3
 8000d0a:	621a      	str	r2, [r3, #32]
 8000d0c:	f7ff ff20 	bl	8000b50 <chSchReadyI>
 8000d10:	e7f4      	b.n	8000cfc <chSemSignalI+0xc>
 8000d12:	46c0      	nop			; (mov r8, r8)
	...

08000d20 <chMBPostI.constprop.18>:
 8000d20:	4b0c      	ldr	r3, [pc, #48]	; (8000d54 <chMBPostI.constprop.18+0x34>)
 8000d22:	b510      	push	{r4, lr}
 8000d24:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000d26:	2a00      	cmp	r2, #0
 8000d28:	dd11      	ble.n	8000d4e <chMBPostI.constprop.18+0x2e>
 8000d2a:	6899      	ldr	r1, [r3, #8]
 8000d2c:	3a01      	subs	r2, #1
 8000d2e:	625a      	str	r2, [r3, #36]	; 0x24
 8000d30:	1d0a      	adds	r2, r1, #4
 8000d32:	609a      	str	r2, [r3, #8]
 8000d34:	6008      	str	r0, [r1, #0]
 8000d36:	6859      	ldr	r1, [r3, #4]
 8000d38:	428a      	cmp	r2, r1
 8000d3a:	d205      	bcs.n	8000d48 <chMBPostI.constprop.18+0x28>
 8000d3c:	3310      	adds	r3, #16
 8000d3e:	0018      	movs	r0, r3
 8000d40:	f7ff ffd6 	bl	8000cf0 <chSemSignalI>
 8000d44:	2000      	movs	r0, #0
 8000d46:	bd10      	pop	{r4, pc}
 8000d48:	681a      	ldr	r2, [r3, #0]
 8000d4a:	609a      	str	r2, [r3, #8]
 8000d4c:	e7f6      	b.n	8000d3c <chMBPostI.constprop.18+0x1c>
 8000d4e:	2001      	movs	r0, #1
 8000d50:	4240      	negs	r0, r0
 8000d52:	e7f8      	b.n	8000d46 <chMBPostI.constprop.18+0x26>
 8000d54:	20000654 	.word	0x20000654
	...

08000d60 <chMBPostAheadI.constprop.16>:
 8000d60:	4b0d      	ldr	r3, [pc, #52]	; (8000d98 <chMBPostAheadI.constprop.16+0x38>)
 8000d62:	b510      	push	{r4, lr}
 8000d64:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000d66:	2a00      	cmp	r2, #0
 8000d68:	dd12      	ble.n	8000d90 <chMBPostAheadI.constprop.16+0x30>
 8000d6a:	3a01      	subs	r2, #1
 8000d6c:	625a      	str	r2, [r3, #36]	; 0x24
 8000d6e:	68da      	ldr	r2, [r3, #12]
 8000d70:	6819      	ldr	r1, [r3, #0]
 8000d72:	3a04      	subs	r2, #4
 8000d74:	60da      	str	r2, [r3, #12]
 8000d76:	428a      	cmp	r2, r1
 8000d78:	d306      	bcc.n	8000d88 <chMBPostAheadI.constprop.16+0x28>
 8000d7a:	3310      	adds	r3, #16
 8000d7c:	6010      	str	r0, [r2, #0]
 8000d7e:	0018      	movs	r0, r3
 8000d80:	f7ff ffb6 	bl	8000cf0 <chSemSignalI>
 8000d84:	2000      	movs	r0, #0
 8000d86:	bd10      	pop	{r4, pc}
 8000d88:	685a      	ldr	r2, [r3, #4]
 8000d8a:	3a04      	subs	r2, #4
 8000d8c:	60da      	str	r2, [r3, #12]
 8000d8e:	e7f4      	b.n	8000d7a <chMBPostAheadI.constprop.16+0x1a>
 8000d90:	2001      	movs	r0, #1
 8000d92:	4240      	negs	r0, r0
 8000d94:	e7f7      	b.n	8000d86 <chMBPostAheadI.constprop.16+0x26>
 8000d96:	46c0      	nop			; (mov r8, r8)
 8000d98:	20000654 	.word	0x20000654
 8000d9c:	00000000 	.word	0x00000000

08000da0 <chMBFetchI.constprop.14>:
 8000da0:	4b0c      	ldr	r3, [pc, #48]	; (8000dd4 <chMBFetchI.constprop.14+0x34>)
 8000da2:	b510      	push	{r4, lr}
 8000da4:	699a      	ldr	r2, [r3, #24]
 8000da6:	2a00      	cmp	r2, #0
 8000da8:	dd11      	ble.n	8000dce <chMBFetchI.constprop.14+0x2e>
 8000daa:	68d9      	ldr	r1, [r3, #12]
 8000dac:	3a01      	subs	r2, #1
 8000dae:	619a      	str	r2, [r3, #24]
 8000db0:	1d0a      	adds	r2, r1, #4
 8000db2:	6809      	ldr	r1, [r1, #0]
 8000db4:	60da      	str	r2, [r3, #12]
 8000db6:	6001      	str	r1, [r0, #0]
 8000db8:	6859      	ldr	r1, [r3, #4]
 8000dba:	428a      	cmp	r2, r1
 8000dbc:	d301      	bcc.n	8000dc2 <chMBFetchI.constprop.14+0x22>
 8000dbe:	681a      	ldr	r2, [r3, #0]
 8000dc0:	60da      	str	r2, [r3, #12]
 8000dc2:	331c      	adds	r3, #28
 8000dc4:	0018      	movs	r0, r3
 8000dc6:	f7ff ff93 	bl	8000cf0 <chSemSignalI>
 8000dca:	2000      	movs	r0, #0
 8000dcc:	e001      	b.n	8000dd2 <chMBFetchI.constprop.14+0x32>
 8000dce:	2001      	movs	r0, #1
 8000dd0:	4240      	negs	r0, r0
 8000dd2:	bd10      	pop	{r4, pc}
 8000dd4:	20000654 	.word	0x20000654
	...

08000de0 <chSemResetI>:
 8000de0:	b570      	push	{r4, r5, r6, lr}
 8000de2:	6884      	ldr	r4, [r0, #8]
 8000de4:	0005      	movs	r5, r0
 8000de6:	3401      	adds	r4, #1
 8000de8:	6081      	str	r1, [r0, #8]
 8000dea:	2c00      	cmp	r4, #0
 8000dec:	dc0b      	bgt.n	8000e06 <chSemResetI+0x26>
 8000dee:	2602      	movs	r6, #2
 8000df0:	4276      	negs	r6, r6
 8000df2:	6868      	ldr	r0, [r5, #4]
 8000df4:	3401      	adds	r4, #1
 8000df6:	6843      	ldr	r3, [r0, #4]
 8000df8:	606b      	str	r3, [r5, #4]
 8000dfa:	601d      	str	r5, [r3, #0]
 8000dfc:	f7ff fea8 	bl	8000b50 <chSchReadyI>
 8000e00:	6206      	str	r6, [r0, #32]
 8000e02:	2c01      	cmp	r4, #1
 8000e04:	d1f5      	bne.n	8000df2 <chSemResetI+0x12>
 8000e06:	bd70      	pop	{r4, r5, r6, pc}
	...

08000e10 <chVTDoResetI>:
 8000e10:	4b1b      	ldr	r3, [pc, #108]	; (8000e80 <chVTDoResetI+0x70>)
 8000e12:	b510      	push	{r4, lr}
 8000e14:	69da      	ldr	r2, [r3, #28]
 8000e16:	4282      	cmp	r2, r0
 8000e18:	d00e      	beq.n	8000e38 <chVTDoResetI+0x28>
 8000e1a:	6841      	ldr	r1, [r0, #4]
 8000e1c:	6802      	ldr	r2, [r0, #0]
 8000e1e:	331c      	adds	r3, #28
 8000e20:	600a      	str	r2, [r1, #0]
 8000e22:	6802      	ldr	r2, [r0, #0]
 8000e24:	6051      	str	r1, [r2, #4]
 8000e26:	2100      	movs	r1, #0
 8000e28:	60c1      	str	r1, [r0, #12]
 8000e2a:	429a      	cmp	r2, r3
 8000e2c:	d003      	beq.n	8000e36 <chVTDoResetI+0x26>
 8000e2e:	8913      	ldrh	r3, [r2, #8]
 8000e30:	8901      	ldrh	r1, [r0, #8]
 8000e32:	185b      	adds	r3, r3, r1
 8000e34:	8113      	strh	r3, [r2, #8]
 8000e36:	bd10      	pop	{r4, pc}
 8000e38:	0019      	movs	r1, r3
 8000e3a:	2400      	movs	r4, #0
 8000e3c:	6810      	ldr	r0, [r2, #0]
 8000e3e:	311c      	adds	r1, #28
 8000e40:	61d8      	str	r0, [r3, #28]
 8000e42:	6041      	str	r1, [r0, #4]
 8000e44:	60d4      	str	r4, [r2, #12]
 8000e46:	4288      	cmp	r0, r1
 8000e48:	d017      	beq.n	8000e7a <chVTDoResetI+0x6a>
 8000e4a:	8901      	ldrh	r1, [r0, #8]
 8000e4c:	8912      	ldrh	r2, [r2, #8]
 8000e4e:	188a      	adds	r2, r1, r2
 8000e50:	490c      	ldr	r1, [pc, #48]	; (8000e84 <chVTDoResetI+0x74>)
 8000e52:	b292      	uxth	r2, r2
 8000e54:	8102      	strh	r2, [r0, #8]
 8000e56:	6a49      	ldr	r1, [r1, #36]	; 0x24
 8000e58:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8000e5a:	b289      	uxth	r1, r1
 8000e5c:	1acb      	subs	r3, r1, r3
 8000e5e:	b29b      	uxth	r3, r3
 8000e60:	429a      	cmp	r2, r3
 8000e62:	d9e8      	bls.n	8000e36 <chVTDoResetI+0x26>
 8000e64:	1ad2      	subs	r2, r2, r3
 8000e66:	b292      	uxth	r2, r2
 8000e68:	1c13      	adds	r3, r2, #0
 8000e6a:	2a02      	cmp	r2, #2
 8000e6c:	d200      	bcs.n	8000e70 <chVTDoResetI+0x60>
 8000e6e:	2302      	movs	r3, #2
 8000e70:	18c9      	adds	r1, r1, r3
 8000e72:	4b04      	ldr	r3, [pc, #16]	; (8000e84 <chVTDoResetI+0x74>)
 8000e74:	b289      	uxth	r1, r1
 8000e76:	6359      	str	r1, [r3, #52]	; 0x34
 8000e78:	e7dd      	b.n	8000e36 <chVTDoResetI+0x26>
 8000e7a:	4b02      	ldr	r3, [pc, #8]	; (8000e84 <chVTDoResetI+0x74>)
 8000e7c:	60dc      	str	r4, [r3, #12]
 8000e7e:	e7da      	b.n	8000e36 <chVTDoResetI+0x26>
 8000e80:	20000738 	.word	0x20000738
 8000e84:	40000400 	.word	0x40000400
	...

08000e90 <chVTDoSetI>:
 8000e90:	6103      	str	r3, [r0, #16]
 8000e92:	4b1d      	ldr	r3, [pc, #116]	; (8000f08 <chVTDoSetI+0x78>)
 8000e94:	b570      	push	{r4, r5, r6, lr}
 8000e96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000e98:	60c2      	str	r2, [r0, #12]
 8000e9a:	b29b      	uxth	r3, r3
 8000e9c:	1c0e      	adds	r6, r1, #0
 8000e9e:	2902      	cmp	r1, #2
 8000ea0:	d200      	bcs.n	8000ea4 <chVTDoSetI+0x14>
 8000ea2:	2602      	movs	r6, #2
 8000ea4:	4c19      	ldr	r4, [pc, #100]	; (8000f0c <chVTDoSetI+0x7c>)
 8000ea6:	199d      	adds	r5, r3, r6
 8000ea8:	0021      	movs	r1, r4
 8000eaa:	69e2      	ldr	r2, [r4, #28]
 8000eac:	311c      	adds	r1, #28
 8000eae:	b2ad      	uxth	r5, r5
 8000eb0:	428a      	cmp	r2, r1
 8000eb2:	d01c      	beq.n	8000eee <chVTDoSetI+0x5e>
 8000eb4:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8000eb6:	8911      	ldrh	r1, [r2, #8]
 8000eb8:	1aeb      	subs	r3, r5, r3
 8000eba:	b29b      	uxth	r3, r3
 8000ebc:	4299      	cmp	r1, r3
 8000ebe:	d904      	bls.n	8000eca <chVTDoSetI+0x3a>
 8000ec0:	e012      	b.n	8000ee8 <chVTDoSetI+0x58>
 8000ec2:	6812      	ldr	r2, [r2, #0]
 8000ec4:	1a5b      	subs	r3, r3, r1
 8000ec6:	8911      	ldrh	r1, [r2, #8]
 8000ec8:	b29b      	uxth	r3, r3
 8000eca:	4299      	cmp	r1, r3
 8000ecc:	d3f9      	bcc.n	8000ec2 <chVTDoSetI+0x32>
 8000ece:	6851      	ldr	r1, [r2, #4]
 8000ed0:	6002      	str	r2, [r0, #0]
 8000ed2:	6041      	str	r1, [r0, #4]
 8000ed4:	6008      	str	r0, [r1, #0]
 8000ed6:	6050      	str	r0, [r2, #4]
 8000ed8:	8103      	strh	r3, [r0, #8]
 8000eda:	8911      	ldrh	r1, [r2, #8]
 8000edc:	1acb      	subs	r3, r1, r3
 8000ede:	8113      	strh	r3, [r2, #8]
 8000ee0:	2301      	movs	r3, #1
 8000ee2:	425b      	negs	r3, r3
 8000ee4:	84a3      	strh	r3, [r4, #36]	; 0x24
 8000ee6:	bd70      	pop	{r4, r5, r6, pc}
 8000ee8:	4e07      	ldr	r6, [pc, #28]	; (8000f08 <chVTDoSetI+0x78>)
 8000eea:	6375      	str	r5, [r6, #52]	; 0x34
 8000eec:	e7ed      	b.n	8000eca <chVTDoSetI+0x3a>
 8000eee:	84e3      	strh	r3, [r4, #38]	; 0x26
 8000ef0:	61e0      	str	r0, [r4, #28]
 8000ef2:	6220      	str	r0, [r4, #32]
 8000ef4:	6002      	str	r2, [r0, #0]
 8000ef6:	6042      	str	r2, [r0, #4]
 8000ef8:	2200      	movs	r2, #0
 8000efa:	4b03      	ldr	r3, [pc, #12]	; (8000f08 <chVTDoSetI+0x78>)
 8000efc:	8106      	strh	r6, [r0, #8]
 8000efe:	635d      	str	r5, [r3, #52]	; 0x34
 8000f00:	611a      	str	r2, [r3, #16]
 8000f02:	3202      	adds	r2, #2
 8000f04:	60da      	str	r2, [r3, #12]
 8000f06:	e7ee      	b.n	8000ee6 <chVTDoSetI+0x56>
 8000f08:	40000400 	.word	0x40000400
 8000f0c:	20000738 	.word	0x20000738

08000f10 <test_start_timer.constprop.1>:
 8000f10:	2200      	movs	r2, #0
 8000f12:	4b0a      	ldr	r3, [pc, #40]	; (8000f3c <test_start_timer.constprop.1+0x2c>)
 8000f14:	b510      	push	{r4, lr}
 8000f16:	701a      	strb	r2, [r3, #0]
 8000f18:	b672      	cpsid	i
 8000f1a:	4c09      	ldr	r4, [pc, #36]	; (8000f40 <test_start_timer.constprop.1+0x30>)
 8000f1c:	68e3      	ldr	r3, [r4, #12]
 8000f1e:	2b00      	cmp	r3, #0
 8000f20:	d002      	beq.n	8000f28 <test_start_timer.constprop.1+0x18>
 8000f22:	0020      	movs	r0, r4
 8000f24:	f7ff ff74 	bl	8000e10 <chVTDoResetI>
 8000f28:	21fa      	movs	r1, #250	; 0xfa
 8000f2a:	2300      	movs	r3, #0
 8000f2c:	4a05      	ldr	r2, [pc, #20]	; (8000f44 <test_start_timer.constprop.1+0x34>)
 8000f2e:	0089      	lsls	r1, r1, #2
 8000f30:	0020      	movs	r0, r4
 8000f32:	f7ff ffad 	bl	8000e90 <chVTDoSetI>
 8000f36:	b662      	cpsie	i
 8000f38:	bd10      	pop	{r4, pc}
 8000f3a:	46c0      	nop			; (mov r8, r8)
 8000f3c:	20000fc8 	.word	0x20000fc8
 8000f40:	20000ff4 	.word	0x20000ff4
 8000f44:	08000311 	.word	0x08000311
	...

08000f50 <chSysGetStatusAndLockX>:
 8000f50:	f3ef 8010 	mrs	r0, PRIMASK
 8000f54:	07c3      	lsls	r3, r0, #31
 8000f56:	d402      	bmi.n	8000f5e <chSysGetStatusAndLockX+0xe>
 8000f58:	f3ef 8305 	mrs	r3, IPSR
 8000f5c:	b672      	cpsid	i
 8000f5e:	4770      	bx	lr

08000f60 <chSysIntegrityCheckI>:
 8000f60:	b530      	push	{r4, r5, lr}
 8000f62:	0005      	movs	r5, r0
 8000f64:	07c3      	lsls	r3, r0, #31
 8000f66:	d512      	bpl.n	8000f8e <chSysIntegrityCheckI+0x2e>
 8000f68:	4b26      	ldr	r3, [pc, #152]	; (8001004 <chSysIntegrityCheckI+0xa4>)
 8000f6a:	2200      	movs	r2, #0
 8000f6c:	6819      	ldr	r1, [r3, #0]
 8000f6e:	685c      	ldr	r4, [r3, #4]
 8000f70:	4299      	cmp	r1, r3
 8000f72:	d039      	beq.n	8000fe8 <chSysIntegrityCheckI+0x88>
 8000f74:	6809      	ldr	r1, [r1, #0]
 8000f76:	3201      	adds	r2, #1
 8000f78:	4299      	cmp	r1, r3
 8000f7a:	d1fb      	bne.n	8000f74 <chSysIntegrityCheckI+0x14>
 8000f7c:	428c      	cmp	r4, r1
 8000f7e:	d036      	beq.n	8000fee <chSysIntegrityCheckI+0x8e>
 8000f80:	6864      	ldr	r4, [r4, #4]
 8000f82:	3a01      	subs	r2, #1
 8000f84:	429c      	cmp	r4, r3
 8000f86:	d1fb      	bne.n	8000f80 <chSysIntegrityCheckI+0x20>
 8000f88:	2001      	movs	r0, #1
 8000f8a:	2a00      	cmp	r2, #0
 8000f8c:	d12b      	bne.n	8000fe6 <chSysIntegrityCheckI+0x86>
 8000f8e:	07ab      	lsls	r3, r5, #30
 8000f90:	d513      	bpl.n	8000fba <chSysIntegrityCheckI+0x5a>
 8000f92:	491c      	ldr	r1, [pc, #112]	; (8001004 <chSysIntegrityCheckI+0xa4>)
 8000f94:	69ca      	ldr	r2, [r1, #28]
 8000f96:	6a0c      	ldr	r4, [r1, #32]
 8000f98:	311c      	adds	r1, #28
 8000f9a:	428a      	cmp	r2, r1
 8000f9c:	d029      	beq.n	8000ff2 <chSysIntegrityCheckI+0x92>
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	6812      	ldr	r2, [r2, #0]
 8000fa2:	3301      	adds	r3, #1
 8000fa4:	428a      	cmp	r2, r1
 8000fa6:	d1fb      	bne.n	8000fa0 <chSysIntegrityCheckI+0x40>
 8000fa8:	4294      	cmp	r4, r2
 8000faa:	d020      	beq.n	8000fee <chSysIntegrityCheckI+0x8e>
 8000fac:	6864      	ldr	r4, [r4, #4]
 8000fae:	3b01      	subs	r3, #1
 8000fb0:	428c      	cmp	r4, r1
 8000fb2:	d1fb      	bne.n	8000fac <chSysIntegrityCheckI+0x4c>
 8000fb4:	2001      	movs	r0, #1
 8000fb6:	2b00      	cmp	r3, #0
 8000fb8:	d115      	bne.n	8000fe6 <chSysIntegrityCheckI+0x86>
 8000fba:	2000      	movs	r0, #0
 8000fbc:	076b      	lsls	r3, r5, #29
 8000fbe:	d512      	bpl.n	8000fe6 <chSysIntegrityCheckI+0x86>
 8000fc0:	4b10      	ldr	r3, [pc, #64]	; (8001004 <chSysIntegrityCheckI+0xa4>)
 8000fc2:	2200      	movs	r2, #0
 8000fc4:	6919      	ldr	r1, [r3, #16]
 8000fc6:	695c      	ldr	r4, [r3, #20]
 8000fc8:	4299      	cmp	r1, r3
 8000fca:	d017      	beq.n	8000ffc <chSysIntegrityCheckI+0x9c>
 8000fcc:	6909      	ldr	r1, [r1, #16]
 8000fce:	3201      	adds	r2, #1
 8000fd0:	4299      	cmp	r1, r3
 8000fd2:	d1fb      	bne.n	8000fcc <chSysIntegrityCheckI+0x6c>
 8000fd4:	428c      	cmp	r4, r1
 8000fd6:	d00a      	beq.n	8000fee <chSysIntegrityCheckI+0x8e>
 8000fd8:	6964      	ldr	r4, [r4, #20]
 8000fda:	3a01      	subs	r2, #1
 8000fdc:	429c      	cmp	r4, r3
 8000fde:	d1fb      	bne.n	8000fd8 <chSysIntegrityCheckI+0x78>
 8000fe0:	1e50      	subs	r0, r2, #1
 8000fe2:	4182      	sbcs	r2, r0
 8000fe4:	b2d0      	uxtb	r0, r2
 8000fe6:	bd30      	pop	{r4, r5, pc}
 8000fe8:	429c      	cmp	r4, r3
 8000fea:	d1c9      	bne.n	8000f80 <chSysIntegrityCheckI+0x20>
 8000fec:	e7cf      	b.n	8000f8e <chSysIntegrityCheckI+0x2e>
 8000fee:	2001      	movs	r0, #1
 8000ff0:	e7f9      	b.n	8000fe6 <chSysIntegrityCheckI+0x86>
 8000ff2:	4294      	cmp	r4, r2
 8000ff4:	d0e1      	beq.n	8000fba <chSysIntegrityCheckI+0x5a>
 8000ff6:	2300      	movs	r3, #0
 8000ff8:	0011      	movs	r1, r2
 8000ffa:	e7d7      	b.n	8000fac <chSysIntegrityCheckI+0x4c>
 8000ffc:	428c      	cmp	r4, r1
 8000ffe:	d1eb      	bne.n	8000fd8 <chSysIntegrityCheckI+0x78>
 8001000:	e7f1      	b.n	8000fe6 <chSysIntegrityCheckI+0x86>
 8001002:	46c0      	nop			; (mov r8, r8)
 8001004:	20000738 	.word	0x20000738
	...

08001010 <sys3_execute>:
 8001010:	b510      	push	{r4, lr}
 8001012:	b672      	cpsid	i
 8001014:	2001      	movs	r0, #1
 8001016:	f7ff ffa3 	bl	8000f60 <chSysIntegrityCheckI>
 800101a:	b662      	cpsie	i
 800101c:	2401      	movs	r4, #1
 800101e:	4060      	eors	r0, r4
 8001020:	b2c1      	uxtb	r1, r0
 8001022:	2001      	movs	r0, #1
 8001024:	f7ff fbb4 	bl	8000790 <_test_assert>
 8001028:	2800      	cmp	r0, #0
 800102a:	d000      	beq.n	800102e <sys3_execute+0x1e>
 800102c:	bd10      	pop	{r4, pc}
 800102e:	b672      	cpsid	i
 8001030:	3002      	adds	r0, #2
 8001032:	f7ff ff95 	bl	8000f60 <chSysIntegrityCheckI>
 8001036:	b662      	cpsie	i
 8001038:	4060      	eors	r0, r4
 800103a:	b2c1      	uxtb	r1, r0
 800103c:	2002      	movs	r0, #2
 800103e:	f7ff fba7 	bl	8000790 <_test_assert>
 8001042:	2800      	cmp	r0, #0
 8001044:	d1f2      	bne.n	800102c <sys3_execute+0x1c>
 8001046:	b672      	cpsid	i
 8001048:	3004      	adds	r0, #4
 800104a:	f7ff ff89 	bl	8000f60 <chSysIntegrityCheckI>
 800104e:	b662      	cpsie	i
 8001050:	4060      	eors	r0, r4
 8001052:	b2c1      	uxtb	r1, r0
 8001054:	2003      	movs	r0, #3
 8001056:	f7ff fb9b 	bl	8000790 <_test_assert>
 800105a:	2800      	cmp	r0, #0
 800105c:	d1e6      	bne.n	800102c <sys3_execute+0x1c>
 800105e:	b672      	cpsid	i
 8001060:	3008      	adds	r0, #8
 8001062:	f7ff ff7d 	bl	8000f60 <chSysIntegrityCheckI>
 8001066:	b662      	cpsie	i
 8001068:	4044      	eors	r4, r0
 800106a:	b2e1      	uxtb	r1, r4
 800106c:	2004      	movs	r0, #4
 800106e:	f7ff fb8f 	bl	8000790 <_test_assert>
 8001072:	e7db      	b.n	800102c <sys3_execute+0x1c>
	...

08001080 <BusFault_Handler>:
 8001080:	b672      	cpsid	i
 8001082:	4b02      	ldr	r3, [pc, #8]	; (800108c <BusFault_Handler+0xc>)
 8001084:	4a02      	ldr	r2, [pc, #8]	; (8001090 <BusFault_Handler+0x10>)
 8001086:	629a      	str	r2, [r3, #40]	; 0x28
 8001088:	e7fe      	b.n	8001088 <BusFault_Handler+0x8>
 800108a:	46c0      	nop			; (mov r8, r8)
 800108c:	20000738 	.word	0x20000738
 8001090:	080055e0 	.word	0x080055e0
	...

080010a0 <bmk13_execute>:
 80010a0:	b510      	push	{r4, lr}
 80010a2:	482e      	ldr	r0, [pc, #184]	; (800115c <bmk13_execute+0xbc>)
 80010a4:	f7ff fbe4 	bl	8000870 <test_print>
 80010a8:	20a4      	movs	r0, #164	; 0xa4
 80010aa:	0040      	lsls	r0, r0, #1
 80010ac:	f7ff fab8 	bl	8000620 <test_printn.part.1>
 80010b0:	4c2b      	ldr	r4, [pc, #172]	; (8001160 <bmk13_execute+0xc0>)
 80010b2:	0020      	movs	r0, r4
 80010b4:	f7ff fbbc 	bl	8000830 <test_println>
 80010b8:	482a      	ldr	r0, [pc, #168]	; (8001164 <bmk13_execute+0xc4>)
 80010ba:	f7ff fbd9 	bl	8000870 <test_print>
 80010be:	2044      	movs	r0, #68	; 0x44
 80010c0:	f7ff faae 	bl	8000620 <test_printn.part.1>
 80010c4:	0020      	movs	r0, r4
 80010c6:	f7ff fbb3 	bl	8000830 <test_println>
 80010ca:	4827      	ldr	r0, [pc, #156]	; (8001168 <bmk13_execute+0xc8>)
 80010cc:	f7ff fbd0 	bl	8000870 <test_print>
 80010d0:	2014      	movs	r0, #20
 80010d2:	f7ff faa5 	bl	8000620 <test_printn.part.1>
 80010d6:	0020      	movs	r0, r4
 80010d8:	f7ff fbaa 	bl	8000830 <test_println>
 80010dc:	4823      	ldr	r0, [pc, #140]	; (800116c <bmk13_execute+0xcc>)
 80010de:	f7ff fbc7 	bl	8000870 <test_print>
 80010e2:	200c      	movs	r0, #12
 80010e4:	f7ff fa9c 	bl	8000620 <test_printn.part.1>
 80010e8:	0020      	movs	r0, r4
 80010ea:	f7ff fba1 	bl	8000830 <test_println>
 80010ee:	4820      	ldr	r0, [pc, #128]	; (8001170 <bmk13_execute+0xd0>)
 80010f0:	f7ff fbbe 	bl	8000870 <test_print>
 80010f4:	2004      	movs	r0, #4
 80010f6:	f7ff fa93 	bl	8000620 <test_printn.part.1>
 80010fa:	0020      	movs	r0, r4
 80010fc:	f7ff fb98 	bl	8000830 <test_println>
 8001100:	481c      	ldr	r0, [pc, #112]	; (8001174 <bmk13_execute+0xd4>)
 8001102:	f7ff fbb5 	bl	8000870 <test_print>
 8001106:	2014      	movs	r0, #20
 8001108:	f7ff fa8a 	bl	8000620 <test_printn.part.1>
 800110c:	0020      	movs	r0, r4
 800110e:	f7ff fb8f 	bl	8000830 <test_println>
 8001112:	4819      	ldr	r0, [pc, #100]	; (8001178 <bmk13_execute+0xd8>)
 8001114:	f7ff fbac 	bl	8000870 <test_print>
 8001118:	2010      	movs	r0, #16
 800111a:	f7ff fa81 	bl	8000620 <test_printn.part.1>
 800111e:	0020      	movs	r0, r4
 8001120:	f7ff fb86 	bl	8000830 <test_println>
 8001124:	4815      	ldr	r0, [pc, #84]	; (800117c <bmk13_execute+0xdc>)
 8001126:	f7ff fba3 	bl	8000870 <test_print>
 800112a:	2008      	movs	r0, #8
 800112c:	f7ff fa78 	bl	8000620 <test_printn.part.1>
 8001130:	0020      	movs	r0, r4
 8001132:	f7ff fb7d 	bl	8000830 <test_println>
 8001136:	4812      	ldr	r0, [pc, #72]	; (8001180 <bmk13_execute+0xe0>)
 8001138:	f7ff fb9a 	bl	8000870 <test_print>
 800113c:	2024      	movs	r0, #36	; 0x24
 800113e:	f7ff fa6f 	bl	8000620 <test_printn.part.1>
 8001142:	0020      	movs	r0, r4
 8001144:	f7ff fb74 	bl	8000830 <test_println>
 8001148:	480e      	ldr	r0, [pc, #56]	; (8001184 <bmk13_execute+0xe4>)
 800114a:	f7ff fb91 	bl	8000870 <test_print>
 800114e:	2028      	movs	r0, #40	; 0x28
 8001150:	f7ff fa66 	bl	8000620 <test_printn.part.1>
 8001154:	0020      	movs	r0, r4
 8001156:	f7ff fb6b 	bl	8000830 <test_println>
 800115a:	bd10      	pop	{r4, pc}
 800115c:	08005640 	.word	0x08005640
 8001160:	08005650 	.word	0x08005650
 8001164:	08005658 	.word	0x08005658
 8001168:	08005668 	.word	0x08005668
 800116c:	08005678 	.word	0x08005678
 8001170:	08005688 	.word	0x08005688
 8001174:	08005698 	.word	0x08005698
 8001178:	080056a8 	.word	0x080056a8
 800117c:	080056b8 	.word	0x080056b8
 8001180:	080056c8 	.word	0x080056c8
 8001184:	080056d8 	.word	0x080056d8
	...

08001190 <VectorB0>:
 8001190:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001192:	4647      	mov	r7, r8
 8001194:	46ce      	mov	lr, r9
 8001196:	4d3f      	ldr	r5, [pc, #252]	; (8001294 <VectorB0+0x104>)
 8001198:	b580      	push	{r7, lr}
 800119a:	6f6e      	ldr	r6, [r5, #116]	; 0x74
 800119c:	46f0      	mov	r8, lr
 800119e:	6837      	ldr	r7, [r6, #0]
 80011a0:	69f4      	ldr	r4, [r6, #28]
 80011a2:	6234      	str	r4, [r6, #32]
 80011a4:	0723      	lsls	r3, r4, #28
 80011a6:	d11c      	bne.n	80011e2 <VectorB0+0x52>
 80011a8:	05e3      	lsls	r3, r4, #23
 80011aa:	d431      	bmi.n	8001210 <VectorB0+0x80>
 80011ac:	06a3      	lsls	r3, r4, #26
 80011ae:	d438      	bmi.n	8001222 <VectorB0+0x92>
 80011b0:	2380      	movs	r3, #128	; 0x80
 80011b2:	423b      	tst	r3, r7
 80011b4:	d001      	beq.n	80011ba <VectorB0+0x2a>
 80011b6:	4223      	tst	r3, r4
 80011b8:	d143      	bne.n	8001242 <VectorB0+0xb2>
 80011ba:	0663      	lsls	r3, r4, #25
 80011bc:	d508      	bpl.n	80011d0 <VectorB0+0x40>
 80011be:	b672      	cpsid	i
 80011c0:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 80011c2:	6caa      	ldr	r2, [r5, #72]	; 0x48
 80011c4:	4293      	cmp	r3, r2
 80011c6:	d047      	beq.n	8001258 <VectorB0+0xc8>
 80011c8:	2340      	movs	r3, #64	; 0x40
 80011ca:	439f      	bics	r7, r3
 80011cc:	6037      	str	r7, [r6, #0]
 80011ce:	b662      	cpsie	i
 80011d0:	4643      	mov	r3, r8
 80011d2:	330f      	adds	r3, #15
 80011d4:	d001      	beq.n	80011da <VectorB0+0x4a>
 80011d6:	f7ff fb63 	bl	80008a0 <_port_irq_epilogue.part.0>
 80011da:	bc0c      	pop	{r2, r3}
 80011dc:	4690      	mov	r8, r2
 80011de:	4699      	mov	r9, r3
 80011e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011e2:	0721      	lsls	r1, r4, #28
 80011e4:	0fc9      	lsrs	r1, r1, #31
 80011e6:	01c9      	lsls	r1, r1, #7
 80011e8:	07e3      	lsls	r3, r4, #31
 80011ea:	d501      	bpl.n	80011f0 <VectorB0+0x60>
 80011ec:	2320      	movs	r3, #32
 80011ee:	4319      	orrs	r1, r3
 80011f0:	07a3      	lsls	r3, r4, #30
 80011f2:	d501      	bpl.n	80011f8 <VectorB0+0x68>
 80011f4:	2340      	movs	r3, #64	; 0x40
 80011f6:	4319      	orrs	r1, r3
 80011f8:	0763      	lsls	r3, r4, #29
 80011fa:	d502      	bpl.n	8001202 <VectorB0+0x72>
 80011fc:	2380      	movs	r3, #128	; 0x80
 80011fe:	005b      	lsls	r3, r3, #1
 8001200:	4319      	orrs	r1, r3
 8001202:	b672      	cpsid	i
 8001204:	1d28      	adds	r0, r5, #4
 8001206:	f7ff fd33 	bl	8000c70 <chEvtBroadcastFlagsI>
 800120a:	b662      	cpsie	i
 800120c:	05e3      	lsls	r3, r4, #23
 800120e:	d5cd      	bpl.n	80011ac <VectorB0+0x1c>
 8001210:	b672      	cpsid	i
 8001212:	2180      	movs	r1, #128	; 0x80
 8001214:	1d28      	adds	r0, r5, #4
 8001216:	0089      	lsls	r1, r1, #2
 8001218:	f7ff fd2a 	bl	8000c70 <chEvtBroadcastFlagsI>
 800121c:	b662      	cpsie	i
 800121e:	06a3      	lsls	r3, r4, #26
 8001220:	d5c6      	bpl.n	80011b0 <VectorB0+0x20>
 8001222:	b672      	cpsid	i
 8001224:	8cb3      	ldrh	r3, [r6, #36]	; 0x24
 8001226:	b2db      	uxtb	r3, r3
 8001228:	4699      	mov	r9, r3
 800122a:	696b      	ldr	r3, [r5, #20]
 800122c:	2b00      	cmp	r3, #0
 800122e:	d01b      	beq.n	8001268 <VectorB0+0xd8>
 8001230:	0028      	movs	r0, r5
 8001232:	4649      	mov	r1, r9
 8001234:	300c      	adds	r0, #12
 8001236:	f7ff fcab 	bl	8000b90 <chIQPutI>
 800123a:	2800      	cmp	r0, #0
 800123c:	db19      	blt.n	8001272 <VectorB0+0xe2>
 800123e:	b662      	cpsie	i
 8001240:	e7b6      	b.n	80011b0 <VectorB0+0x20>
 8001242:	b672      	cpsid	i
 8001244:	0028      	movs	r0, r5
 8001246:	3030      	adds	r0, #48	; 0x30
 8001248:	f7ff fcca 	bl	8000be0 <chOQGetI>
 800124c:	2800      	cmp	r0, #0
 800124e:	db15      	blt.n	800127c <VectorB0+0xec>
 8001250:	b280      	uxth	r0, r0
 8001252:	8530      	strh	r0, [r6, #40]	; 0x28
 8001254:	b662      	cpsie	i
 8001256:	e7b0      	b.n	80011ba <VectorB0+0x2a>
 8001258:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800125a:	2b00      	cmp	r3, #0
 800125c:	d0b4      	beq.n	80011c8 <VectorB0+0x38>
 800125e:	1d28      	adds	r0, r5, #4
 8001260:	2110      	movs	r1, #16
 8001262:	f7ff fd05 	bl	8000c70 <chEvtBroadcastFlagsI>
 8001266:	e7af      	b.n	80011c8 <VectorB0+0x38>
 8001268:	1d28      	adds	r0, r5, #4
 800126a:	2104      	movs	r1, #4
 800126c:	f7ff fd00 	bl	8000c70 <chEvtBroadcastFlagsI>
 8001270:	e7de      	b.n	8001230 <VectorB0+0xa0>
 8001272:	1d28      	adds	r0, r5, #4
 8001274:	2180      	movs	r1, #128	; 0x80
 8001276:	f7ff fcfb 	bl	8000c70 <chEvtBroadcastFlagsI>
 800127a:	e7e0      	b.n	800123e <VectorB0+0xae>
 800127c:	1d28      	adds	r0, r5, #4
 800127e:	2108      	movs	r1, #8
 8001280:	f7ff fcf6 	bl	8000c70 <chEvtBroadcastFlagsI>
 8001284:	23c0      	movs	r3, #192	; 0xc0
 8001286:	003a      	movs	r2, r7
 8001288:	439a      	bics	r2, r3
 800128a:	0013      	movs	r3, r2
 800128c:	2240      	movs	r2, #64	; 0x40
 800128e:	4313      	orrs	r3, r2
 8001290:	6033      	str	r3, [r6, #0]
 8001292:	e7df      	b.n	8001254 <VectorB0+0xc4>
 8001294:	200006b8 	.word	0x200006b8
	...

080012a0 <Vector80>:
 80012a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012a2:	46ce      	mov	lr, r9
 80012a4:	4647      	mov	r7, r8
 80012a6:	4e25      	ldr	r6, [pc, #148]	; (800133c <Vector80+0x9c>)
 80012a8:	b580      	push	{r7, lr}
 80012aa:	6933      	ldr	r3, [r6, #16]
 80012ac:	46f1      	mov	r9, lr
 80012ae:	079b      	lsls	r3, r3, #30
 80012b0:	d408      	bmi.n	80012c4 <Vector80+0x24>
 80012b2:	464b      	mov	r3, r9
 80012b4:	330f      	adds	r3, #15
 80012b6:	d001      	beq.n	80012bc <Vector80+0x1c>
 80012b8:	f7ff faf2 	bl	80008a0 <_port_irq_epilogue.part.0>
 80012bc:	bc0c      	pop	{r2, r3}
 80012be:	4690      	mov	r8, r2
 80012c0:	4699      	mov	r9, r3
 80012c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80012c4:	2300      	movs	r3, #0
 80012c6:	6133      	str	r3, [r6, #16]
 80012c8:	b672      	cpsid	i
 80012ca:	4c1d      	ldr	r4, [pc, #116]	; (8001340 <Vector80+0xa0>)
 80012cc:	6a72      	ldr	r2, [r6, #36]	; 0x24
 80012ce:	69e3      	ldr	r3, [r4, #28]
 80012d0:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 80012d2:	b292      	uxth	r2, r2
 80012d4:	1a50      	subs	r0, r2, r1
 80012d6:	891d      	ldrh	r5, [r3, #8]
 80012d8:	b280      	uxth	r0, r0
 80012da:	42a8      	cmp	r0, r5
 80012dc:	d31d      	bcc.n	800131a <Vector80+0x7a>
 80012de:	0027      	movs	r7, r4
 80012e0:	2200      	movs	r2, #0
 80012e2:	371c      	adds	r7, #28
 80012e4:	4690      	mov	r8, r2
 80012e6:	e00c      	b.n	8001302 <Vector80+0x62>
 80012e8:	b662      	cpsie	i
 80012ea:	6918      	ldr	r0, [r3, #16]
 80012ec:	4788      	blx	r1
 80012ee:	b672      	cpsid	i
 80012f0:	6a72      	ldr	r2, [r6, #36]	; 0x24
 80012f2:	69e3      	ldr	r3, [r4, #28]
 80012f4:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 80012f6:	b292      	uxth	r2, r2
 80012f8:	1a50      	subs	r0, r2, r1
 80012fa:	891d      	ldrh	r5, [r3, #8]
 80012fc:	b280      	uxth	r0, r0
 80012fe:	4285      	cmp	r5, r0
 8001300:	d80b      	bhi.n	800131a <Vector80+0x7a>
 8001302:	4640      	mov	r0, r8
 8001304:	681a      	ldr	r2, [r3, #0]
 8001306:	1949      	adds	r1, r1, r5
 8001308:	84e1      	strh	r1, [r4, #38]	; 0x26
 800130a:	6057      	str	r7, [r2, #4]
 800130c:	68d9      	ldr	r1, [r3, #12]
 800130e:	61e2      	str	r2, [r4, #28]
 8001310:	60d8      	str	r0, [r3, #12]
 8001312:	42ba      	cmp	r2, r7
 8001314:	d1e8      	bne.n	80012e8 <Vector80+0x48>
 8001316:	60f0      	str	r0, [r6, #12]
 8001318:	e7e6      	b.n	80012e8 <Vector80+0x48>
 800131a:	480a      	ldr	r0, [pc, #40]	; (8001344 <Vector80+0xa4>)
 800131c:	4283      	cmp	r3, r0
 800131e:	d009      	beq.n	8001334 <Vector80+0x94>
 8001320:	1869      	adds	r1, r5, r1
 8001322:	1a89      	subs	r1, r1, r2
 8001324:	b289      	uxth	r1, r1
 8001326:	1c0b      	adds	r3, r1, #0
 8001328:	2902      	cmp	r1, #2
 800132a:	d305      	bcc.n	8001338 <Vector80+0x98>
 800132c:	18d2      	adds	r2, r2, r3
 800132e:	4b03      	ldr	r3, [pc, #12]	; (800133c <Vector80+0x9c>)
 8001330:	b292      	uxth	r2, r2
 8001332:	635a      	str	r2, [r3, #52]	; 0x34
 8001334:	b662      	cpsie	i
 8001336:	e7bc      	b.n	80012b2 <Vector80+0x12>
 8001338:	2302      	movs	r3, #2
 800133a:	e7f7      	b.n	800132c <Vector80+0x8c>
 800133c:	40000400 	.word	0x40000400
 8001340:	20000738 	.word	0x20000738
 8001344:	20000754 	.word	0x20000754
	...

08001350 <chThdYield>:
 8001350:	b510      	push	{r4, lr}
 8001352:	b672      	cpsid	i
 8001354:	4c0e      	ldr	r4, [pc, #56]	; (8001390 <chThdYield+0x40>)
 8001356:	6820      	ldr	r0, [r4, #0]
 8001358:	69a1      	ldr	r1, [r4, #24]
 800135a:	6883      	ldr	r3, [r0, #8]
 800135c:	688a      	ldr	r2, [r1, #8]
 800135e:	4293      	cmp	r3, r2
 8001360:	d201      	bcs.n	8001366 <chThdYield+0x16>
 8001362:	b662      	cpsie	i
 8001364:	bd10      	pop	{r4, pc}
 8001366:	6803      	ldr	r3, [r0, #0]
 8001368:	605c      	str	r4, [r3, #4]
 800136a:	6023      	str	r3, [r4, #0]
 800136c:	61a0      	str	r0, [r4, #24]
 800136e:	2401      	movs	r4, #1
 8001370:	7704      	strb	r4, [r0, #28]
 8001372:	2400      	movs	r4, #0
 8001374:	770c      	strb	r4, [r1, #28]
 8001376:	e000      	b.n	800137a <chThdYield+0x2a>
 8001378:	681b      	ldr	r3, [r3, #0]
 800137a:	689c      	ldr	r4, [r3, #8]
 800137c:	42a2      	cmp	r2, r4
 800137e:	d9fb      	bls.n	8001378 <chThdYield+0x28>
 8001380:	685a      	ldr	r2, [r3, #4]
 8001382:	600b      	str	r3, [r1, #0]
 8001384:	604a      	str	r2, [r1, #4]
 8001386:	6011      	str	r1, [r2, #0]
 8001388:	6059      	str	r1, [r3, #4]
 800138a:	f7fe fef9 	bl	8000180 <_port_switch>
 800138e:	e7e8      	b.n	8001362 <chThdYield+0x12>
 8001390:	20000738 	.word	0x20000738
	...

080013a0 <thread8>:
 80013a0:	b570      	push	{r4, r5, r6, lr}
 80013a2:	0004      	movs	r4, r0
 80013a4:	2504      	movs	r5, #4
 80013a6:	4e08      	ldr	r6, [pc, #32]	; (80013c8 <thread8+0x28>)
 80013a8:	f7ff ffd2 	bl	8001350 <chThdYield>
 80013ac:	f7ff ffd0 	bl	8001350 <chThdYield>
 80013b0:	f7ff ffce 	bl	8001350 <chThdYield>
 80013b4:	f7ff ffcc 	bl	8001350 <chThdYield>
 80013b8:	6823      	ldr	r3, [r4, #0]
 80013ba:	3304      	adds	r3, #4
 80013bc:	6023      	str	r3, [r4, #0]
 80013be:	69b3      	ldr	r3, [r6, #24]
 80013c0:	7f5b      	ldrb	r3, [r3, #29]
 80013c2:	421d      	tst	r5, r3
 80013c4:	d0f0      	beq.n	80013a8 <thread8+0x8>
 80013c6:	bd70      	pop	{r4, r5, r6, pc}
 80013c8:	20000738 	.word	0x20000738
 80013cc:	00000000 	.word	0x00000000

080013d0 <chSchDoRescheduleAhead>:
 80013d0:	b510      	push	{r4, lr}
 80013d2:	2401      	movs	r4, #1
 80013d4:	4a0b      	ldr	r2, [pc, #44]	; (8001404 <chSchDoRescheduleAhead+0x34>)
 80013d6:	6810      	ldr	r0, [r2, #0]
 80013d8:	6991      	ldr	r1, [r2, #24]
 80013da:	6803      	ldr	r3, [r0, #0]
 80013dc:	605a      	str	r2, [r3, #4]
 80013de:	6013      	str	r3, [r2, #0]
 80013e0:	6190      	str	r0, [r2, #24]
 80013e2:	688a      	ldr	r2, [r1, #8]
 80013e4:	7704      	strb	r4, [r0, #28]
 80013e6:	2400      	movs	r4, #0
 80013e8:	770c      	strb	r4, [r1, #28]
 80013ea:	e000      	b.n	80013ee <chSchDoRescheduleAhead+0x1e>
 80013ec:	681b      	ldr	r3, [r3, #0]
 80013ee:	689c      	ldr	r4, [r3, #8]
 80013f0:	42a2      	cmp	r2, r4
 80013f2:	d3fb      	bcc.n	80013ec <chSchDoRescheduleAhead+0x1c>
 80013f4:	685a      	ldr	r2, [r3, #4]
 80013f6:	600b      	str	r3, [r1, #0]
 80013f8:	604a      	str	r2, [r1, #4]
 80013fa:	6011      	str	r1, [r2, #0]
 80013fc:	6059      	str	r1, [r3, #4]
 80013fe:	f7fe febf 	bl	8000180 <_port_switch>
 8001402:	bd10      	pop	{r4, pc}
 8001404:	20000738 	.word	0x20000738
	...

08001410 <chSchRescheduleS>:
 8001410:	4b05      	ldr	r3, [pc, #20]	; (8001428 <chSchRescheduleS+0x18>)
 8001412:	b510      	push	{r4, lr}
 8001414:	681a      	ldr	r2, [r3, #0]
 8001416:	699b      	ldr	r3, [r3, #24]
 8001418:	6892      	ldr	r2, [r2, #8]
 800141a:	689b      	ldr	r3, [r3, #8]
 800141c:	429a      	cmp	r2, r3
 800141e:	d901      	bls.n	8001424 <chSchRescheduleS+0x14>
 8001420:	f7ff ffd6 	bl	80013d0 <chSchDoRescheduleAhead>
 8001424:	bd10      	pop	{r4, pc}
 8001426:	46c0      	nop			; (mov r8, r8)
 8001428:	20000738 	.word	0x20000738
 800142c:	00000000 	.word	0x00000000

08001430 <thread4.lto_priv.71>:
 8001430:	b510      	push	{r4, lr}
 8001432:	b672      	cpsid	i
 8001434:	6883      	ldr	r3, [r0, #8]
 8001436:	2b00      	cmp	r3, #0
 8001438:	dd03      	ble.n	8001442 <thread4.lto_priv.71+0x12>
 800143a:	f7ff ffe9 	bl	8001410 <chSchRescheduleS>
 800143e:	b662      	cpsie	i
 8001440:	bd10      	pop	{r4, pc}
 8001442:	f7ff fc55 	bl	8000cf0 <chSemSignalI>
 8001446:	e7f8      	b.n	800143a <thread4.lto_priv.71+0xa>
	...

08001450 <chMtxUnlockAll>:
 8001450:	4b11      	ldr	r3, [pc, #68]	; (8001498 <chMtxUnlockAll+0x48>)
 8001452:	b570      	push	{r4, r5, r6, lr}
 8001454:	699c      	ldr	r4, [r3, #24]
 8001456:	b672      	cpsid	i
 8001458:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800145a:	2b00      	cmp	r3, #0
 800145c:	d019      	beq.n	8001492 <chMtxUnlockAll+0x42>
 800145e:	2500      	movs	r5, #0
 8001460:	e00b      	b.n	800147a <chMtxUnlockAll+0x2a>
 8001462:	6802      	ldr	r2, [r0, #0]
 8001464:	601a      	str	r2, [r3, #0]
 8001466:	6053      	str	r3, [r2, #4]
 8001468:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800146a:	6098      	str	r0, [r3, #8]
 800146c:	60da      	str	r2, [r3, #12]
 800146e:	6383      	str	r3, [r0, #56]	; 0x38
 8001470:	f7ff fb6e 	bl	8000b50 <chSchReadyI>
 8001474:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001476:	2b00      	cmp	r3, #0
 8001478:	d007      	beq.n	800148a <chMtxUnlockAll+0x3a>
 800147a:	68da      	ldr	r2, [r3, #12]
 800147c:	6818      	ldr	r0, [r3, #0]
 800147e:	63a2      	str	r2, [r4, #56]	; 0x38
 8001480:	4283      	cmp	r3, r0
 8001482:	d1ee      	bne.n	8001462 <chMtxUnlockAll+0x12>
 8001484:	609d      	str	r5, [r3, #8]
 8001486:	1e13      	subs	r3, r2, #0
 8001488:	d1f7      	bne.n	800147a <chMtxUnlockAll+0x2a>
 800148a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800148c:	60a3      	str	r3, [r4, #8]
 800148e:	f7ff ffbf 	bl	8001410 <chSchRescheduleS>
 8001492:	b662      	cpsie	i
 8001494:	bd70      	pop	{r4, r5, r6, pc}
 8001496:	46c0      	nop			; (mov r8, r8)
 8001498:	20000738 	.word	0x20000738
 800149c:	00000000 	.word	0x00000000

080014a0 <chThdSetPriority>:
 80014a0:	b510      	push	{r4, lr}
 80014a2:	b672      	cpsid	i
 80014a4:	4b07      	ldr	r3, [pc, #28]	; (80014c4 <chThdSetPriority+0x24>)
 80014a6:	699b      	ldr	r3, [r3, #24]
 80014a8:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80014aa:	689a      	ldr	r2, [r3, #8]
 80014ac:	42a2      	cmp	r2, r4
 80014ae:	d001      	beq.n	80014b4 <chThdSetPriority+0x14>
 80014b0:	4282      	cmp	r2, r0
 80014b2:	d200      	bcs.n	80014b6 <chThdSetPriority+0x16>
 80014b4:	6098      	str	r0, [r3, #8]
 80014b6:	63d8      	str	r0, [r3, #60]	; 0x3c
 80014b8:	f7ff ffaa 	bl	8001410 <chSchRescheduleS>
 80014bc:	b662      	cpsie	i
 80014be:	0020      	movs	r0, r4
 80014c0:	bd10      	pop	{r4, pc}
 80014c2:	46c0      	nop			; (mov r8, r8)
 80014c4:	20000738 	.word	0x20000738
	...

080014d0 <thd3_execute>:
 80014d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014d2:	4e49      	ldr	r6, [pc, #292]	; (80015f8 <thd3_execute+0x128>)
 80014d4:	69b3      	ldr	r3, [r6, #24]
 80014d6:	689c      	ldr	r4, [r3, #8]
 80014d8:	1c65      	adds	r5, r4, #1
 80014da:	0028      	movs	r0, r5
 80014dc:	f7ff ffe0 	bl	80014a0 <chThdSetPriority>
 80014e0:	1b01      	subs	r1, r0, r4
 80014e2:	424b      	negs	r3, r1
 80014e4:	4159      	adcs	r1, r3
 80014e6:	0007      	movs	r7, r0
 80014e8:	b2c9      	uxtb	r1, r1
 80014ea:	2001      	movs	r0, #1
 80014ec:	f7ff f950 	bl	8000790 <_test_assert>
 80014f0:	2800      	cmp	r0, #0
 80014f2:	d000      	beq.n	80014f6 <thd3_execute+0x26>
 80014f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80014f6:	69b3      	ldr	r3, [r6, #24]
 80014f8:	3002      	adds	r0, #2
 80014fa:	6899      	ldr	r1, [r3, #8]
 80014fc:	1b49      	subs	r1, r1, r5
 80014fe:	424b      	negs	r3, r1
 8001500:	4159      	adcs	r1, r3
 8001502:	b2c9      	uxtb	r1, r1
 8001504:	f7ff f944 	bl	8000790 <_test_assert>
 8001508:	2800      	cmp	r0, #0
 800150a:	d1f3      	bne.n	80014f4 <thd3_execute+0x24>
 800150c:	0038      	movs	r0, r7
 800150e:	f7ff ffc7 	bl	80014a0 <chThdSetPriority>
 8001512:	1a28      	subs	r0, r5, r0
 8001514:	4241      	negs	r1, r0
 8001516:	4141      	adcs	r1, r0
 8001518:	2003      	movs	r0, #3
 800151a:	b2c9      	uxtb	r1, r1
 800151c:	f7ff f938 	bl	8000790 <_test_assert>
 8001520:	2800      	cmp	r0, #0
 8001522:	d1e7      	bne.n	80014f4 <thd3_execute+0x24>
 8001524:	69b3      	ldr	r3, [r6, #24]
 8001526:	3004      	adds	r0, #4
 8001528:	6899      	ldr	r1, [r3, #8]
 800152a:	1b09      	subs	r1, r1, r4
 800152c:	424b      	negs	r3, r1
 800152e:	4159      	adcs	r1, r3
 8001530:	b2c9      	uxtb	r1, r1
 8001532:	f7ff f92d 	bl	8000790 <_test_assert>
 8001536:	2800      	cmp	r0, #0
 8001538:	d1dc      	bne.n	80014f4 <thd3_execute+0x24>
 800153a:	b672      	cpsid	i
 800153c:	69b2      	ldr	r2, [r6, #24]
 800153e:	6893      	ldr	r3, [r2, #8]
 8001540:	3302      	adds	r3, #2
 8001542:	6093      	str	r3, [r2, #8]
 8001544:	b662      	cpsie	i
 8001546:	69b3      	ldr	r3, [r6, #24]
 8001548:	1ca7      	adds	r7, r4, #2
 800154a:	6899      	ldr	r1, [r3, #8]
 800154c:	3005      	adds	r0, #5
 800154e:	1bc9      	subs	r1, r1, r7
 8001550:	424b      	negs	r3, r1
 8001552:	4159      	adcs	r1, r3
 8001554:	b2c9      	uxtb	r1, r1
 8001556:	f7ff f91b 	bl	8000790 <_test_assert>
 800155a:	2800      	cmp	r0, #0
 800155c:	d1ca      	bne.n	80014f4 <thd3_execute+0x24>
 800155e:	0028      	movs	r0, r5
 8001560:	f7ff ff9e 	bl	80014a0 <chThdSetPriority>
 8001564:	1b00      	subs	r0, r0, r4
 8001566:	4241      	negs	r1, r0
 8001568:	4141      	adcs	r1, r0
 800156a:	2006      	movs	r0, #6
 800156c:	b2c9      	uxtb	r1, r1
 800156e:	f7ff f90f 	bl	8000790 <_test_assert>
 8001572:	2800      	cmp	r0, #0
 8001574:	d1be      	bne.n	80014f4 <thd3_execute+0x24>
 8001576:	69b3      	ldr	r3, [r6, #24]
 8001578:	3007      	adds	r0, #7
 800157a:	6899      	ldr	r1, [r3, #8]
 800157c:	1bc9      	subs	r1, r1, r7
 800157e:	424f      	negs	r7, r1
 8001580:	4179      	adcs	r1, r7
 8001582:	b2c9      	uxtb	r1, r1
 8001584:	f7ff f904 	bl	8000790 <_test_assert>
 8001588:	2800      	cmp	r0, #0
 800158a:	d1b3      	bne.n	80014f4 <thd3_execute+0x24>
 800158c:	69b3      	ldr	r3, [r6, #24]
 800158e:	3008      	adds	r0, #8
 8001590:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001592:	1b49      	subs	r1, r1, r5
 8001594:	424b      	negs	r3, r1
 8001596:	4159      	adcs	r1, r3
 8001598:	b2c9      	uxtb	r1, r1
 800159a:	f7ff f8f9 	bl	8000790 <_test_assert>
 800159e:	2800      	cmp	r0, #0
 80015a0:	d1a8      	bne.n	80014f4 <thd3_execute+0x24>
 80015a2:	1ce7      	adds	r7, r4, #3
 80015a4:	0038      	movs	r0, r7
 80015a6:	f7ff ff7b 	bl	80014a0 <chThdSetPriority>
 80015aa:	1a29      	subs	r1, r5, r0
 80015ac:	424d      	negs	r5, r1
 80015ae:	4169      	adcs	r1, r5
 80015b0:	2009      	movs	r0, #9
 80015b2:	b2c9      	uxtb	r1, r1
 80015b4:	f7ff f8ec 	bl	8000790 <_test_assert>
 80015b8:	2800      	cmp	r0, #0
 80015ba:	d19b      	bne.n	80014f4 <thd3_execute+0x24>
 80015bc:	69b3      	ldr	r3, [r6, #24]
 80015be:	300a      	adds	r0, #10
 80015c0:	6899      	ldr	r1, [r3, #8]
 80015c2:	1bc9      	subs	r1, r1, r7
 80015c4:	424b      	negs	r3, r1
 80015c6:	4159      	adcs	r1, r3
 80015c8:	b2c9      	uxtb	r1, r1
 80015ca:	f7ff f8e1 	bl	8000790 <_test_assert>
 80015ce:	2800      	cmp	r0, #0
 80015d0:	d000      	beq.n	80015d4 <thd3_execute+0x104>
 80015d2:	e78f      	b.n	80014f4 <thd3_execute+0x24>
 80015d4:	69b3      	ldr	r3, [r6, #24]
 80015d6:	300b      	adds	r0, #11
 80015d8:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80015da:	1bc9      	subs	r1, r1, r7
 80015dc:	424b      	negs	r3, r1
 80015de:	4159      	adcs	r1, r3
 80015e0:	b2c9      	uxtb	r1, r1
 80015e2:	f7ff f8d5 	bl	8000790 <_test_assert>
 80015e6:	2800      	cmp	r0, #0
 80015e8:	d000      	beq.n	80015ec <thd3_execute+0x11c>
 80015ea:	e783      	b.n	80014f4 <thd3_execute+0x24>
 80015ec:	b672      	cpsid	i
 80015ee:	69b3      	ldr	r3, [r6, #24]
 80015f0:	609c      	str	r4, [r3, #8]
 80015f2:	63dc      	str	r4, [r3, #60]	; 0x3c
 80015f4:	b662      	cpsie	i
 80015f6:	e77d      	b.n	80014f4 <thd3_execute+0x24>
 80015f8:	20000738 	.word	0x20000738
 80015fc:	00000000 	.word	0x00000000

08001600 <chSysRestoreStatusX.part.3>:
 8001600:	b510      	push	{r4, lr}
 8001602:	f3ef 8305 	mrs	r3, IPSR
 8001606:	05db      	lsls	r3, r3, #23
 8001608:	d101      	bne.n	800160e <chSysRestoreStatusX.part.3+0xe>
 800160a:	f7ff ff01 	bl	8001410 <chSchRescheduleS>
 800160e:	b662      	cpsie	i
 8001610:	bd10      	pop	{r4, pc}
 8001612:	46c0      	nop			; (mov r8, r8)
	...

08001620 <vtcb>:
 8001620:	b510      	push	{r4, lr}
 8001622:	b672      	cpsid	i
 8001624:	b662      	cpsie	i
 8001626:	b672      	cpsid	i
 8001628:	f7ff fc92 	bl	8000f50 <chSysGetStatusAndLockX>
 800162c:	07c3      	lsls	r3, r0, #31
 800162e:	d401      	bmi.n	8001634 <vtcb+0x14>
 8001630:	f7ff ffe6 	bl	8001600 <chSysRestoreStatusX.part.3>
 8001634:	b662      	cpsie	i
 8001636:	bd10      	pop	{r4, pc}
	...

08001640 <chSchWakeupS>:
 8001640:	4b12      	ldr	r3, [pc, #72]	; (800168c <chSchWakeupS+0x4c>)
 8001642:	6201      	str	r1, [r0, #32]
 8001644:	6999      	ldr	r1, [r3, #24]
 8001646:	b570      	push	{r4, r5, r6, lr}
 8001648:	6882      	ldr	r2, [r0, #8]
 800164a:	688c      	ldr	r4, [r1, #8]
 800164c:	42a2      	cmp	r2, r4
 800164e:	d80b      	bhi.n	8001668 <chSchWakeupS+0x28>
 8001650:	2100      	movs	r1, #0
 8001652:	7701      	strb	r1, [r0, #28]
 8001654:	681b      	ldr	r3, [r3, #0]
 8001656:	6899      	ldr	r1, [r3, #8]
 8001658:	428a      	cmp	r2, r1
 800165a:	d9fb      	bls.n	8001654 <chSchWakeupS+0x14>
 800165c:	685a      	ldr	r2, [r3, #4]
 800165e:	6003      	str	r3, [r0, #0]
 8001660:	6042      	str	r2, [r0, #4]
 8001662:	6010      	str	r0, [r2, #0]
 8001664:	6058      	str	r0, [r3, #4]
 8001666:	bd70      	pop	{r4, r5, r6, pc}
 8001668:	2200      	movs	r2, #0
 800166a:	770a      	strb	r2, [r1, #28]
 800166c:	001a      	movs	r2, r3
 800166e:	6812      	ldr	r2, [r2, #0]
 8001670:	6895      	ldr	r5, [r2, #8]
 8001672:	42ac      	cmp	r4, r5
 8001674:	d9fb      	bls.n	800166e <chSchWakeupS+0x2e>
 8001676:	6854      	ldr	r4, [r2, #4]
 8001678:	600a      	str	r2, [r1, #0]
 800167a:	604c      	str	r4, [r1, #4]
 800167c:	6021      	str	r1, [r4, #0]
 800167e:	6051      	str	r1, [r2, #4]
 8001680:	6198      	str	r0, [r3, #24]
 8001682:	2301      	movs	r3, #1
 8001684:	7703      	strb	r3, [r0, #28]
 8001686:	f7fe fd7b 	bl	8000180 <_port_switch>
 800168a:	e7ec      	b.n	8001666 <chSchWakeupS+0x26>
 800168c:	20000738 	.word	0x20000738

08001690 <chThdCreateFromMemoryPool.constprop.51>:
 8001690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001692:	4d18      	ldr	r5, [pc, #96]	; (80016f4 <chThdCreateFromMemoryPool.constprop.51+0x64>)
 8001694:	0006      	movs	r6, r0
 8001696:	0028      	movs	r0, r5
 8001698:	000f      	movs	r7, r1
 800169a:	f7ff f931 	bl	8000900 <chPoolAlloc>
 800169e:	1e04      	subs	r4, r0, #0
 80016a0:	d025      	beq.n	80016ee <chThdCreateFromMemoryPool.constprop.51+0x5e>
 80016a2:	b672      	cpsid	i
 80016a4:	686b      	ldr	r3, [r5, #4]
 80016a6:	4a14      	ldr	r2, [pc, #80]	; (80016f8 <chThdCreateFromMemoryPool.constprop.51+0x68>)
 80016a8:	3b24      	subs	r3, #36	; 0x24
 80016aa:	18c3      	adds	r3, r0, r3
 80016ac:	60c3      	str	r3, [r0, #12]
 80016ae:	611a      	str	r2, [r3, #16]
 80016b0:	4a12      	ldr	r2, [pc, #72]	; (80016fc <chThdCreateFromMemoryPool.constprop.51+0x6c>)
 80016b2:	615f      	str	r7, [r3, #20]
 80016b4:	621a      	str	r2, [r3, #32]
 80016b6:	2300      	movs	r3, #0
 80016b8:	2101      	movs	r1, #1
 80016ba:	2202      	movs	r2, #2
 80016bc:	6383      	str	r3, [r0, #56]	; 0x38
 80016be:	6343      	str	r3, [r0, #52]	; 0x34
 80016c0:	6183      	str	r3, [r0, #24]
 80016c2:	4b0f      	ldr	r3, [pc, #60]	; (8001700 <chThdCreateFromMemoryPool.constprop.51+0x70>)
 80016c4:	7781      	strb	r1, [r0, #30]
 80016c6:	6103      	str	r3, [r0, #16]
 80016c8:	6959      	ldr	r1, [r3, #20]
 80016ca:	6086      	str	r6, [r0, #8]
 80016cc:	6141      	str	r1, [r0, #20]
 80016ce:	7702      	strb	r2, [r0, #28]
 80016d0:	63c6      	str	r6, [r0, #60]	; 0x3c
 80016d2:	6108      	str	r0, [r1, #16]
 80016d4:	6158      	str	r0, [r3, #20]
 80016d6:	0003      	movs	r3, r0
 80016d8:	3324      	adds	r3, #36	; 0x24
 80016da:	6243      	str	r3, [r0, #36]	; 0x24
 80016dc:	3304      	adds	r3, #4
 80016de:	6283      	str	r3, [r0, #40]	; 0x28
 80016e0:	62c3      	str	r3, [r0, #44]	; 0x2c
 80016e2:	7742      	strb	r2, [r0, #29]
 80016e4:	6405      	str	r5, [r0, #64]	; 0x40
 80016e6:	2100      	movs	r1, #0
 80016e8:	f7ff ffaa 	bl	8001640 <chSchWakeupS>
 80016ec:	b662      	cpsie	i
 80016ee:	0020      	movs	r0, r4
 80016f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80016f2:	46c0      	nop			; (mov r8, r8)
 80016f4:	20000908 	.word	0x20000908
 80016f8:	08000821 	.word	0x08000821
 80016fc:	080001a1 	.word	0x080001a1
 8001700:	20000738 	.word	0x20000738
	...

08001710 <chCondSignal.constprop.43>:
 8001710:	b510      	push	{r4, lr}
 8001712:	b672      	cpsid	i
 8001714:	4b05      	ldr	r3, [pc, #20]	; (800172c <chCondSignal.constprop.43+0x1c>)
 8001716:	6818      	ldr	r0, [r3, #0]
 8001718:	4298      	cmp	r0, r3
 800171a:	d005      	beq.n	8001728 <chCondSignal.constprop.43+0x18>
 800171c:	6802      	ldr	r2, [r0, #0]
 800171e:	2100      	movs	r1, #0
 8001720:	601a      	str	r2, [r3, #0]
 8001722:	6053      	str	r3, [r2, #4]
 8001724:	f7ff ff8c 	bl	8001640 <chSchWakeupS>
 8001728:	b662      	cpsie	i
 800172a:	bd10      	pop	{r4, pc}
 800172c:	20000600 	.word	0x20000600

08001730 <chMtxUnlock>:
 8001730:	4b13      	ldr	r3, [pc, #76]	; (8001780 <chMtxUnlock+0x50>)
 8001732:	b570      	push	{r4, r5, r6, lr}
 8001734:	699d      	ldr	r5, [r3, #24]
 8001736:	b672      	cpsid	i
 8001738:	68c3      	ldr	r3, [r0, #12]
 800173a:	6804      	ldr	r4, [r0, #0]
 800173c:	63ab      	str	r3, [r5, #56]	; 0x38
 800173e:	4284      	cmp	r4, r0
 8001740:	d01a      	beq.n	8001778 <chMtxUnlock+0x48>
 8001742:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8001744:	2b00      	cmp	r3, #0
 8001746:	d009      	beq.n	800175c <chMtxUnlock+0x2c>
 8001748:	681a      	ldr	r2, [r3, #0]
 800174a:	4293      	cmp	r3, r2
 800174c:	d003      	beq.n	8001756 <chMtxUnlock+0x26>
 800174e:	6892      	ldr	r2, [r2, #8]
 8001750:	4291      	cmp	r1, r2
 8001752:	d200      	bcs.n	8001756 <chMtxUnlock+0x26>
 8001754:	0011      	movs	r1, r2
 8001756:	68db      	ldr	r3, [r3, #12]
 8001758:	2b00      	cmp	r3, #0
 800175a:	d1f5      	bne.n	8001748 <chMtxUnlock+0x18>
 800175c:	6823      	ldr	r3, [r4, #0]
 800175e:	60a9      	str	r1, [r5, #8]
 8001760:	6003      	str	r3, [r0, #0]
 8001762:	6058      	str	r0, [r3, #4]
 8001764:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001766:	6084      	str	r4, [r0, #8]
 8001768:	60c3      	str	r3, [r0, #12]
 800176a:	2100      	movs	r1, #0
 800176c:	63a0      	str	r0, [r4, #56]	; 0x38
 800176e:	0020      	movs	r0, r4
 8001770:	f7ff ff66 	bl	8001640 <chSchWakeupS>
 8001774:	b662      	cpsie	i
 8001776:	bd70      	pop	{r4, r5, r6, pc}
 8001778:	2300      	movs	r3, #0
 800177a:	60a3      	str	r3, [r4, #8]
 800177c:	e7fa      	b.n	8001774 <chMtxUnlock+0x44>
 800177e:	46c0      	nop			; (mov r8, r8)
 8001780:	20000738 	.word	0x20000738
	...

08001790 <chSemSignal>:
 8001790:	b510      	push	{r4, lr}
 8001792:	b672      	cpsid	i
 8001794:	6883      	ldr	r3, [r0, #8]
 8001796:	3301      	adds	r3, #1
 8001798:	6083      	str	r3, [r0, #8]
 800179a:	2b00      	cmp	r3, #0
 800179c:	dd01      	ble.n	80017a2 <chSemSignal+0x12>
 800179e:	b662      	cpsie	i
 80017a0:	bd10      	pop	{r4, pc}
 80017a2:	6803      	ldr	r3, [r0, #0]
 80017a4:	2100      	movs	r1, #0
 80017a6:	681a      	ldr	r2, [r3, #0]
 80017a8:	6002      	str	r2, [r0, #0]
 80017aa:	6050      	str	r0, [r2, #4]
 80017ac:	0018      	movs	r0, r3
 80017ae:	f7ff ff47 	bl	8001640 <chSchWakeupS>
 80017b2:	e7f4      	b.n	800179e <chSemSignal+0xe>
	...

080017c0 <chThdCreateStatic>:
 80017c0:	b510      	push	{r4, lr}
 80017c2:	0004      	movs	r4, r0
 80017c4:	b672      	cpsid	i
 80017c6:	3924      	subs	r1, #36	; 0x24
 80017c8:	1841      	adds	r1, r0, r1
 80017ca:	60c1      	str	r1, [r0, #12]
 80017cc:	610b      	str	r3, [r1, #16]
 80017ce:	9b02      	ldr	r3, [sp, #8]
 80017d0:	614b      	str	r3, [r1, #20]
 80017d2:	4b0f      	ldr	r3, [pc, #60]	; (8001810 <chThdCreateStatic+0x50>)
 80017d4:	620b      	str	r3, [r1, #32]
 80017d6:	2300      	movs	r3, #0
 80017d8:	6383      	str	r3, [r0, #56]	; 0x38
 80017da:	6343      	str	r3, [r0, #52]	; 0x34
 80017dc:	6183      	str	r3, [r0, #24]
 80017de:	3302      	adds	r3, #2
 80017e0:	8383      	strh	r3, [r0, #28]
 80017e2:	3b01      	subs	r3, #1
 80017e4:	7783      	strb	r3, [r0, #30]
 80017e6:	4b0b      	ldr	r3, [pc, #44]	; (8001814 <chThdCreateStatic+0x54>)
 80017e8:	6082      	str	r2, [r0, #8]
 80017ea:	6103      	str	r3, [r0, #16]
 80017ec:	63c2      	str	r2, [r0, #60]	; 0x3c
 80017ee:	695a      	ldr	r2, [r3, #20]
 80017f0:	2100      	movs	r1, #0
 80017f2:	6142      	str	r2, [r0, #20]
 80017f4:	6110      	str	r0, [r2, #16]
 80017f6:	6158      	str	r0, [r3, #20]
 80017f8:	0003      	movs	r3, r0
 80017fa:	3324      	adds	r3, #36	; 0x24
 80017fc:	6243      	str	r3, [r0, #36]	; 0x24
 80017fe:	3304      	adds	r3, #4
 8001800:	6283      	str	r3, [r0, #40]	; 0x28
 8001802:	62c3      	str	r3, [r0, #44]	; 0x2c
 8001804:	f7ff ff1c 	bl	8001640 <chSchWakeupS>
 8001808:	b662      	cpsie	i
 800180a:	0020      	movs	r0, r4
 800180c:	bd10      	pop	{r4, pc}
 800180e:	46c0      	nop			; (mov r8, r8)
 8001810:	080001a1 	.word	0x080001a1
 8001814:	20000738 	.word	0x20000738
	...

08001820 <chSchGoSleepS>:
 8001820:	4b06      	ldr	r3, [pc, #24]	; (800183c <chSchGoSleepS+0x1c>)
 8001822:	b510      	push	{r4, lr}
 8001824:	6999      	ldr	r1, [r3, #24]
 8001826:	7708      	strb	r0, [r1, #28]
 8001828:	6818      	ldr	r0, [r3, #0]
 800182a:	6802      	ldr	r2, [r0, #0]
 800182c:	6053      	str	r3, [r2, #4]
 800182e:	601a      	str	r2, [r3, #0]
 8001830:	6198      	str	r0, [r3, #24]
 8001832:	2301      	movs	r3, #1
 8001834:	7703      	strb	r3, [r0, #28]
 8001836:	f7fe fca3 	bl	8000180 <_port_switch>
 800183a:	bd10      	pop	{r4, pc}
 800183c:	20000738 	.word	0x20000738

08001840 <chSemSignalWait.constprop.47>:
 8001840:	b570      	push	{r4, r5, r6, lr}
 8001842:	b672      	cpsid	i
 8001844:	4c12      	ldr	r4, [pc, #72]	; (8001890 <chSemSignalWait.constprop.47+0x50>)
 8001846:	68a3      	ldr	r3, [r4, #8]
 8001848:	3301      	adds	r3, #1
 800184a:	60a3      	str	r3, [r4, #8]
 800184c:	2b00      	cmp	r3, #0
 800184e:	dd15      	ble.n	800187c <chSemSignalWait.constprop.47+0x3c>
 8001850:	3b01      	subs	r3, #1
 8001852:	60a3      	str	r3, [r4, #8]
 8001854:	2b00      	cmp	r3, #0
 8001856:	db04      	blt.n	8001862 <chSemSignalWait.constprop.47+0x22>
 8001858:	f7ff fdda 	bl	8001410 <chSchRescheduleS>
 800185c:	2000      	movs	r0, #0
 800185e:	b662      	cpsie	i
 8001860:	bd70      	pop	{r4, r5, r6, pc}
 8001862:	4b0c      	ldr	r3, [pc, #48]	; (8001894 <chSemSignalWait.constprop.47+0x54>)
 8001864:	2005      	movs	r0, #5
 8001866:	699d      	ldr	r5, [r3, #24]
 8001868:	6863      	ldr	r3, [r4, #4]
 800186a:	602c      	str	r4, [r5, #0]
 800186c:	606b      	str	r3, [r5, #4]
 800186e:	601d      	str	r5, [r3, #0]
 8001870:	6065      	str	r5, [r4, #4]
 8001872:	622c      	str	r4, [r5, #32]
 8001874:	f7ff ffd4 	bl	8001820 <chSchGoSleepS>
 8001878:	6a28      	ldr	r0, [r5, #32]
 800187a:	e7f0      	b.n	800185e <chSemSignalWait.constprop.47+0x1e>
 800187c:	6820      	ldr	r0, [r4, #0]
 800187e:	6803      	ldr	r3, [r0, #0]
 8001880:	6023      	str	r3, [r4, #0]
 8001882:	605c      	str	r4, [r3, #4]
 8001884:	f7ff f964 	bl	8000b50 <chSchReadyI>
 8001888:	2300      	movs	r3, #0
 800188a:	6203      	str	r3, [r0, #32]
 800188c:	68a3      	ldr	r3, [r4, #8]
 800188e:	e7df      	b.n	8001850 <chSemSignalWait.constprop.47+0x10>
 8001890:	200006ac 	.word	0x200006ac
 8001894:	20000738 	.word	0x20000738
	...

080018a0 <sem3_execute>:
 80018a0:	4b1d      	ldr	r3, [pc, #116]	; (8001918 <sem3_execute+0x78>)
 80018a2:	21a4      	movs	r1, #164	; 0xa4
 80018a4:	699b      	ldr	r3, [r3, #24]
 80018a6:	b510      	push	{r4, lr}
 80018a8:	689a      	ldr	r2, [r3, #8]
 80018aa:	2300      	movs	r3, #0
 80018ac:	b082      	sub	sp, #8
 80018ae:	0049      	lsls	r1, r1, #1
 80018b0:	3201      	adds	r2, #1
 80018b2:	9300      	str	r3, [sp, #0]
 80018b4:	4819      	ldr	r0, [pc, #100]	; (800191c <sem3_execute+0x7c>)
 80018b6:	4b1a      	ldr	r3, [pc, #104]	; (8001920 <sem3_execute+0x80>)
 80018b8:	f7ff ff82 	bl	80017c0 <chThdCreateStatic>
 80018bc:	4b19      	ldr	r3, [pc, #100]	; (8001924 <sem3_execute+0x84>)
 80018be:	6018      	str	r0, [r3, #0]
 80018c0:	f7ff ffbe 	bl	8001840 <chSemSignalWait.constprop.47>
 80018c4:	4c18      	ldr	r4, [pc, #96]	; (8001928 <sem3_execute+0x88>)
 80018c6:	2001      	movs	r0, #1
 80018c8:	6823      	ldr	r3, [r4, #0]
 80018ca:	1b19      	subs	r1, r3, r4
 80018cc:	424b      	negs	r3, r1
 80018ce:	4159      	adcs	r1, r3
 80018d0:	b2c9      	uxtb	r1, r1
 80018d2:	f7fe ff5d 	bl	8000790 <_test_assert>
 80018d6:	2800      	cmp	r0, #0
 80018d8:	d001      	beq.n	80018de <sem3_execute+0x3e>
 80018da:	b002      	add	sp, #8
 80018dc:	bd10      	pop	{r4, pc}
 80018de:	68a1      	ldr	r1, [r4, #8]
 80018e0:	3002      	adds	r0, #2
 80018e2:	424b      	negs	r3, r1
 80018e4:	4159      	adcs	r1, r3
 80018e6:	b2c9      	uxtb	r1, r1
 80018e8:	f7fe ff52 	bl	8000790 <_test_assert>
 80018ec:	2800      	cmp	r0, #0
 80018ee:	d1f4      	bne.n	80018da <sem3_execute+0x3a>
 80018f0:	f7ff ffa6 	bl	8001840 <chSemSignalWait.constprop.47>
 80018f4:	6823      	ldr	r3, [r4, #0]
 80018f6:	2003      	movs	r0, #3
 80018f8:	1b19      	subs	r1, r3, r4
 80018fa:	424b      	negs	r3, r1
 80018fc:	4159      	adcs	r1, r3
 80018fe:	b2c9      	uxtb	r1, r1
 8001900:	f7fe ff46 	bl	8000790 <_test_assert>
 8001904:	2800      	cmp	r0, #0
 8001906:	d1e8      	bne.n	80018da <sem3_execute+0x3a>
 8001908:	68a1      	ldr	r1, [r4, #8]
 800190a:	3004      	adds	r0, #4
 800190c:	424b      	negs	r3, r1
 800190e:	4159      	adcs	r1, r3
 8001910:	b2c9      	uxtb	r1, r1
 8001912:	f7fe ff3d 	bl	8000790 <_test_assert>
 8001916:	e7e0      	b.n	80018da <sem3_execute+0x3a>
 8001918:	20000738 	.word	0x20000738
 800191c:	20000938 	.word	0x20000938
 8001920:	080034a1 	.word	0x080034a1
 8001924:	20000fcc 	.word	0x20000fcc
 8001928:	200006ac 	.word	0x200006ac
 800192c:	00000000 	.word	0x00000000

08001930 <chEvtWaitOne.constprop.31>:
 8001930:	4b09      	ldr	r3, [pc, #36]	; (8001958 <chEvtWaitOne.constprop.31+0x28>)
 8001932:	b510      	push	{r4, lr}
 8001934:	699c      	ldr	r4, [r3, #24]
 8001936:	b672      	cpsid	i
 8001938:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800193a:	2b00      	cmp	r3, #0
 800193c:	d105      	bne.n	800194a <chEvtWaitOne.constprop.31+0x1a>
 800193e:	3b01      	subs	r3, #1
 8001940:	6223      	str	r3, [r4, #32]
 8001942:	200a      	movs	r0, #10
 8001944:	f7ff ff6c 	bl	8001820 <chSchGoSleepS>
 8001948:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800194a:	4258      	negs	r0, r3
 800194c:	4018      	ands	r0, r3
 800194e:	4383      	bics	r3, r0
 8001950:	6363      	str	r3, [r4, #52]	; 0x34
 8001952:	b662      	cpsie	i
 8001954:	bd10      	pop	{r4, pc}
 8001956:	46c0      	nop			; (mov r8, r8)
 8001958:	20000738 	.word	0x20000738
 800195c:	00000000 	.word	0x00000000

08001960 <chEvtWaitAny.constprop.30>:
 8001960:	4b08      	ldr	r3, [pc, #32]	; (8001984 <chEvtWaitAny.constprop.30+0x24>)
 8001962:	b510      	push	{r4, lr}
 8001964:	699c      	ldr	r4, [r3, #24]
 8001966:	b672      	cpsid	i
 8001968:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800196a:	2800      	cmp	r0, #0
 800196c:	d106      	bne.n	800197c <chEvtWaitAny.constprop.30+0x1c>
 800196e:	2301      	movs	r3, #1
 8001970:	425b      	negs	r3, r3
 8001972:	300a      	adds	r0, #10
 8001974:	6223      	str	r3, [r4, #32]
 8001976:	f7ff ff53 	bl	8001820 <chSchGoSleepS>
 800197a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800197c:	2300      	movs	r3, #0
 800197e:	6363      	str	r3, [r4, #52]	; 0x34
 8001980:	b662      	cpsie	i
 8001982:	bd10      	pop	{r4, pc}
 8001984:	20000738 	.word	0x20000738
	...

08001990 <thread4.lto_priv.72>:
 8001990:	4b05      	ldr	r3, [pc, #20]	; (80019a8 <thread4.lto_priv.72+0x18>)
 8001992:	b510      	push	{r4, lr}
 8001994:	699c      	ldr	r4, [r3, #24]
 8001996:	b672      	cpsid	i
 8001998:	2003      	movs	r0, #3
 800199a:	f7ff ff41 	bl	8001820 <chSchGoSleepS>
 800199e:	6a23      	ldr	r3, [r4, #32]
 80019a0:	2b00      	cmp	r3, #0
 80019a2:	d0f9      	beq.n	8001998 <thread4.lto_priv.72+0x8>
 80019a4:	b662      	cpsie	i
 80019a6:	bd10      	pop	{r4, pc}
 80019a8:	20000738 	.word	0x20000738
 80019ac:	00000000 	.word	0x00000000

080019b0 <chSchGoSleepTimeoutS>:
 80019b0:	b530      	push	{r4, r5, lr}
 80019b2:	4b0e      	ldr	r3, [pc, #56]	; (80019ec <chSchGoSleepTimeoutS+0x3c>)
 80019b4:	b087      	sub	sp, #28
 80019b6:	0005      	movs	r5, r0
 80019b8:	4299      	cmp	r1, r3
 80019ba:	d012      	beq.n	80019e2 <chSchGoSleepTimeoutS+0x32>
 80019bc:	4c0c      	ldr	r4, [pc, #48]	; (80019f0 <chSchGoSleepTimeoutS+0x40>)
 80019be:	4a0d      	ldr	r2, [pc, #52]	; (80019f4 <chSchGoSleepTimeoutS+0x44>)
 80019c0:	69a3      	ldr	r3, [r4, #24]
 80019c2:	a801      	add	r0, sp, #4
 80019c4:	f7ff fa64 	bl	8000e90 <chVTDoSetI>
 80019c8:	0028      	movs	r0, r5
 80019ca:	f7ff ff29 	bl	8001820 <chSchGoSleepS>
 80019ce:	9b04      	ldr	r3, [sp, #16]
 80019d0:	2b00      	cmp	r3, #0
 80019d2:	d002      	beq.n	80019da <chSchGoSleepTimeoutS+0x2a>
 80019d4:	a801      	add	r0, sp, #4
 80019d6:	f7ff fa1b 	bl	8000e10 <chVTDoResetI>
 80019da:	69a3      	ldr	r3, [r4, #24]
 80019dc:	6a18      	ldr	r0, [r3, #32]
 80019de:	b007      	add	sp, #28
 80019e0:	bd30      	pop	{r4, r5, pc}
 80019e2:	f7ff ff1d 	bl	8001820 <chSchGoSleepS>
 80019e6:	4c02      	ldr	r4, [pc, #8]	; (80019f0 <chSchGoSleepTimeoutS+0x40>)
 80019e8:	e7f7      	b.n	80019da <chSchGoSleepTimeoutS+0x2a>
 80019ea:	46c0      	nop			; (mov r8, r8)
 80019ec:	0000ffff 	.word	0x0000ffff
 80019f0:	20000738 	.word	0x20000738
 80019f4:	08000af1 	.word	0x08000af1
	...

08001a00 <chSemWaitTimeout.constprop.49>:
 8001a00:	b510      	push	{r4, lr}
 8001a02:	0001      	movs	r1, r0
 8001a04:	b672      	cpsid	i
 8001a06:	4b0d      	ldr	r3, [pc, #52]	; (8001a3c <chSemWaitTimeout.constprop.49+0x3c>)
 8001a08:	2000      	movs	r0, #0
 8001a0a:	689c      	ldr	r4, [r3, #8]
 8001a0c:	1e62      	subs	r2, r4, #1
 8001a0e:	609a      	str	r2, [r3, #8]
 8001a10:	2a00      	cmp	r2, #0
 8001a12:	db01      	blt.n	8001a18 <chSemWaitTimeout.constprop.49+0x18>
 8001a14:	b662      	cpsie	i
 8001a16:	bd10      	pop	{r4, pc}
 8001a18:	2900      	cmp	r1, #0
 8001a1a:	d00b      	beq.n	8001a34 <chSemWaitTimeout.constprop.49+0x34>
 8001a1c:	4a08      	ldr	r2, [pc, #32]	; (8001a40 <chSemWaitTimeout.constprop.49+0x40>)
 8001a1e:	6858      	ldr	r0, [r3, #4]
 8001a20:	6992      	ldr	r2, [r2, #24]
 8001a22:	6050      	str	r0, [r2, #4]
 8001a24:	6013      	str	r3, [r2, #0]
 8001a26:	6213      	str	r3, [r2, #32]
 8001a28:	6002      	str	r2, [r0, #0]
 8001a2a:	605a      	str	r2, [r3, #4]
 8001a2c:	2005      	movs	r0, #5
 8001a2e:	f7ff ffbf 	bl	80019b0 <chSchGoSleepTimeoutS>
 8001a32:	e7ef      	b.n	8001a14 <chSemWaitTimeout.constprop.49+0x14>
 8001a34:	609c      	str	r4, [r3, #8]
 8001a36:	3801      	subs	r0, #1
 8001a38:	e7ec      	b.n	8001a14 <chSemWaitTimeout.constprop.49+0x14>
 8001a3a:	46c0      	nop			; (mov r8, r8)
 8001a3c:	200006ac 	.word	0x200006ac
 8001a40:	20000738 	.word	0x20000738
	...

08001a50 <evt3_execute>:
 8001a50:	b570      	push	{r4, r5, r6, lr}
 8001a52:	4c47      	ldr	r4, [pc, #284]	; (8001b70 <evt3_execute+0x120>)
 8001a54:	69a2      	ldr	r2, [r4, #24]
 8001a56:	b672      	cpsid	i
 8001a58:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001a5a:	2b00      	cmp	r3, #0
 8001a5c:	d107      	bne.n	8001a6e <evt3_execute+0x1e>
 8001a5e:	b662      	cpsie	i
 8001a60:	2101      	movs	r1, #1
 8001a62:	2001      	movs	r0, #1
 8001a64:	f7fe fe94 	bl	8000790 <_test_assert>
 8001a68:	2800      	cmp	r0, #0
 8001a6a:	d00d      	beq.n	8001a88 <evt3_execute+0x38>
 8001a6c:	bd70      	pop	{r4, r5, r6, pc}
 8001a6e:	4259      	negs	r1, r3
 8001a70:	4019      	ands	r1, r3
 8001a72:	438b      	bics	r3, r1
 8001a74:	6353      	str	r3, [r2, #52]	; 0x34
 8001a76:	b662      	cpsie	i
 8001a78:	424b      	negs	r3, r1
 8001a7a:	4159      	adcs	r1, r3
 8001a7c:	2001      	movs	r0, #1
 8001a7e:	b2c9      	uxtb	r1, r1
 8001a80:	f7fe fe86 	bl	8000790 <_test_assert>
 8001a84:	2800      	cmp	r0, #0
 8001a86:	d1f1      	bne.n	8001a6c <evt3_execute+0x1c>
 8001a88:	69a3      	ldr	r3, [r4, #24]
 8001a8a:	b672      	cpsid	i
 8001a8c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001a8e:	2a00      	cmp	r2, #0
 8001a90:	d05e      	beq.n	8001b50 <evt3_execute+0x100>
 8001a92:	6358      	str	r0, [r3, #52]	; 0x34
 8001a94:	b662      	cpsie	i
 8001a96:	2100      	movs	r1, #0
 8001a98:	2002      	movs	r0, #2
 8001a9a:	f7fe fe79 	bl	8000790 <_test_assert>
 8001a9e:	2800      	cmp	r0, #0
 8001aa0:	d1e4      	bne.n	8001a6c <evt3_execute+0x1c>
 8001aa2:	69a3      	ldr	r3, [r4, #24]
 8001aa4:	b672      	cpsid	i
 8001aa6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001aa8:	3201      	adds	r2, #1
 8001aaa:	d054      	beq.n	8001b56 <evt3_execute+0x106>
 8001aac:	b662      	cpsie	i
 8001aae:	3001      	adds	r0, #1
 8001ab0:	0001      	movs	r1, r0
 8001ab2:	2003      	movs	r0, #3
 8001ab4:	f7fe fe6c 	bl	8000790 <_test_assert>
 8001ab8:	2800      	cmp	r0, #0
 8001aba:	d1d7      	bne.n	8001a6c <evt3_execute+0x1c>
 8001abc:	69a5      	ldr	r5, [r4, #24]
 8001abe:	b672      	cpsid	i
 8001ac0:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8001ac2:	2b00      	cmp	r3, #0
 8001ac4:	d108      	bne.n	8001ad8 <evt3_execute+0x88>
 8001ac6:	3b01      	subs	r3, #1
 8001ac8:	622b      	str	r3, [r5, #32]
 8001aca:	210a      	movs	r1, #10
 8001acc:	300a      	adds	r0, #10
 8001ace:	f7ff ff6f 	bl	80019b0 <chSchGoSleepTimeoutS>
 8001ad2:	2800      	cmp	r0, #0
 8001ad4:	db42      	blt.n	8001b5c <evt3_execute+0x10c>
 8001ad6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8001ad8:	4259      	negs	r1, r3
 8001ada:	4019      	ands	r1, r3
 8001adc:	438b      	bics	r3, r1
 8001ade:	636b      	str	r3, [r5, #52]	; 0x34
 8001ae0:	b662      	cpsie	i
 8001ae2:	424b      	negs	r3, r1
 8001ae4:	4159      	adcs	r1, r3
 8001ae6:	b2c9      	uxtb	r1, r1
 8001ae8:	2004      	movs	r0, #4
 8001aea:	f7fe fe51 	bl	8000790 <_test_assert>
 8001aee:	2800      	cmp	r0, #0
 8001af0:	d1bc      	bne.n	8001a6c <evt3_execute+0x1c>
 8001af2:	69a5      	ldr	r5, [r4, #24]
 8001af4:	b672      	cpsid	i
 8001af6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8001af8:	2b00      	cmp	r3, #0
 8001afa:	d108      	bne.n	8001b0e <evt3_execute+0xbe>
 8001afc:	3b01      	subs	r3, #1
 8001afe:	622b      	str	r3, [r5, #32]
 8001b00:	210a      	movs	r1, #10
 8001b02:	300a      	adds	r0, #10
 8001b04:	f7ff ff54 	bl	80019b0 <chSchGoSleepTimeoutS>
 8001b08:	2800      	cmp	r0, #0
 8001b0a:	db2a      	blt.n	8001b62 <evt3_execute+0x112>
 8001b0c:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8001b0e:	2200      	movs	r2, #0
 8001b10:	636a      	str	r2, [r5, #52]	; 0x34
 8001b12:	b662      	cpsie	i
 8001b14:	4259      	negs	r1, r3
 8001b16:	4159      	adcs	r1, r3
 8001b18:	b2c9      	uxtb	r1, r1
 8001b1a:	2005      	movs	r0, #5
 8001b1c:	f7fe fe38 	bl	8000790 <_test_assert>
 8001b20:	1e05      	subs	r5, r0, #0
 8001b22:	d1a3      	bne.n	8001a6c <evt3_execute+0x1c>
 8001b24:	69a4      	ldr	r4, [r4, #24]
 8001b26:	b672      	cpsid	i
 8001b28:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001b2a:	3301      	adds	r3, #1
 8001b2c:	d008      	beq.n	8001b40 <evt3_execute+0xf0>
 8001b2e:	2301      	movs	r3, #1
 8001b30:	425b      	negs	r3, r3
 8001b32:	6223      	str	r3, [r4, #32]
 8001b34:	210a      	movs	r1, #10
 8001b36:	200b      	movs	r0, #11
 8001b38:	f7ff ff3a 	bl	80019b0 <chSchGoSleepTimeoutS>
 8001b3c:	2800      	cmp	r0, #0
 8001b3e:	db13      	blt.n	8001b68 <evt3_execute+0x118>
 8001b40:	2300      	movs	r3, #0
 8001b42:	6363      	str	r3, [r4, #52]	; 0x34
 8001b44:	b662      	cpsie	i
 8001b46:	0029      	movs	r1, r5
 8001b48:	2006      	movs	r0, #6
 8001b4a:	f7fe fe21 	bl	8000790 <_test_assert>
 8001b4e:	e78d      	b.n	8001a6c <evt3_execute+0x1c>
 8001b50:	b662      	cpsie	i
 8001b52:	2101      	movs	r1, #1
 8001b54:	e7a0      	b.n	8001a98 <evt3_execute+0x48>
 8001b56:	6358      	str	r0, [r3, #52]	; 0x34
 8001b58:	b662      	cpsie	i
 8001b5a:	e7a9      	b.n	8001ab0 <evt3_execute+0x60>
 8001b5c:	b662      	cpsie	i
 8001b5e:	2101      	movs	r1, #1
 8001b60:	e7c2      	b.n	8001ae8 <evt3_execute+0x98>
 8001b62:	b662      	cpsie	i
 8001b64:	2101      	movs	r1, #1
 8001b66:	e7d8      	b.n	8001b1a <evt3_execute+0xca>
 8001b68:	b662      	cpsie	i
 8001b6a:	3501      	adds	r5, #1
 8001b6c:	e7eb      	b.n	8001b46 <evt3_execute+0xf6>
 8001b6e:	46c0      	nop			; (mov r8, r8)
 8001b70:	20000738 	.word	0x20000738
	...

08001b80 <chSemWaitTimeoutS>:
 8001b80:	6883      	ldr	r3, [r0, #8]
 8001b82:	b510      	push	{r4, lr}
 8001b84:	3b01      	subs	r3, #1
 8001b86:	0002      	movs	r2, r0
 8001b88:	6083      	str	r3, [r0, #8]
 8001b8a:	2000      	movs	r0, #0
 8001b8c:	2b00      	cmp	r3, #0
 8001b8e:	da0a      	bge.n	8001ba6 <chSemWaitTimeoutS+0x26>
 8001b90:	4b05      	ldr	r3, [pc, #20]	; (8001ba8 <chSemWaitTimeoutS+0x28>)
 8001b92:	699b      	ldr	r3, [r3, #24]
 8001b94:	621a      	str	r2, [r3, #32]
 8001b96:	601a      	str	r2, [r3, #0]
 8001b98:	6850      	ldr	r0, [r2, #4]
 8001b9a:	6058      	str	r0, [r3, #4]
 8001b9c:	6003      	str	r3, [r0, #0]
 8001b9e:	6053      	str	r3, [r2, #4]
 8001ba0:	2005      	movs	r0, #5
 8001ba2:	f7ff ff05 	bl	80019b0 <chSchGoSleepTimeoutS>
 8001ba6:	bd10      	pop	{r4, pc}
 8001ba8:	20000738 	.word	0x20000738
 8001bac:	00000000 	.word	0x00000000

08001bb0 <chMBPost.constprop.19>:
 8001bb0:	b570      	push	{r4, r5, r6, lr}
 8001bb2:	0006      	movs	r6, r0
 8001bb4:	b672      	cpsid	i
 8001bb6:	4c0d      	ldr	r4, [pc, #52]	; (8001bec <chMBPost.constprop.19+0x3c>)
 8001bb8:	0020      	movs	r0, r4
 8001bba:	301c      	adds	r0, #28
 8001bbc:	f7ff ffe0 	bl	8001b80 <chSemWaitTimeoutS>
 8001bc0:	1e05      	subs	r5, r0, #0
 8001bc2:	d002      	beq.n	8001bca <chMBPost.constprop.19+0x1a>
 8001bc4:	b662      	cpsie	i
 8001bc6:	0028      	movs	r0, r5
 8001bc8:	bd70      	pop	{r4, r5, r6, pc}
 8001bca:	68a2      	ldr	r2, [r4, #8]
 8001bcc:	1d13      	adds	r3, r2, #4
 8001bce:	60a3      	str	r3, [r4, #8]
 8001bd0:	6016      	str	r6, [r2, #0]
 8001bd2:	6862      	ldr	r2, [r4, #4]
 8001bd4:	4293      	cmp	r3, r2
 8001bd6:	d301      	bcc.n	8001bdc <chMBPost.constprop.19+0x2c>
 8001bd8:	6823      	ldr	r3, [r4, #0]
 8001bda:	60a3      	str	r3, [r4, #8]
 8001bdc:	0020      	movs	r0, r4
 8001bde:	3010      	adds	r0, #16
 8001be0:	f7ff f886 	bl	8000cf0 <chSemSignalI>
 8001be4:	f7ff fc14 	bl	8001410 <chSchRescheduleS>
 8001be8:	e7ec      	b.n	8001bc4 <chMBPost.constprop.19+0x14>
 8001bea:	46c0      	nop			; (mov r8, r8)
 8001bec:	20000654 	.word	0x20000654

08001bf0 <chMBPostAhead.constprop.17>:
 8001bf0:	b570      	push	{r4, r5, r6, lr}
 8001bf2:	0006      	movs	r6, r0
 8001bf4:	b672      	cpsid	i
 8001bf6:	4c0d      	ldr	r4, [pc, #52]	; (8001c2c <chMBPostAhead.constprop.17+0x3c>)
 8001bf8:	0020      	movs	r0, r4
 8001bfa:	301c      	adds	r0, #28
 8001bfc:	f7ff ffc0 	bl	8001b80 <chSemWaitTimeoutS>
 8001c00:	1e05      	subs	r5, r0, #0
 8001c02:	d002      	beq.n	8001c0a <chMBPostAhead.constprop.17+0x1a>
 8001c04:	b662      	cpsie	i
 8001c06:	0028      	movs	r0, r5
 8001c08:	bd70      	pop	{r4, r5, r6, pc}
 8001c0a:	68e3      	ldr	r3, [r4, #12]
 8001c0c:	6822      	ldr	r2, [r4, #0]
 8001c0e:	3b04      	subs	r3, #4
 8001c10:	60e3      	str	r3, [r4, #12]
 8001c12:	4293      	cmp	r3, r2
 8001c14:	d202      	bcs.n	8001c1c <chMBPostAhead.constprop.17+0x2c>
 8001c16:	6863      	ldr	r3, [r4, #4]
 8001c18:	3b04      	subs	r3, #4
 8001c1a:	60e3      	str	r3, [r4, #12]
 8001c1c:	0020      	movs	r0, r4
 8001c1e:	601e      	str	r6, [r3, #0]
 8001c20:	3010      	adds	r0, #16
 8001c22:	f7ff f865 	bl	8000cf0 <chSemSignalI>
 8001c26:	f7ff fbf3 	bl	8001410 <chSchRescheduleS>
 8001c2a:	e7eb      	b.n	8001c04 <chMBPostAhead.constprop.17+0x14>
 8001c2c:	20000654 	.word	0x20000654

08001c30 <chMBFetch.constprop.15>:
 8001c30:	b570      	push	{r4, r5, r6, lr}
 8001c32:	0006      	movs	r6, r0
 8001c34:	b672      	cpsid	i
 8001c36:	4c0d      	ldr	r4, [pc, #52]	; (8001c6c <chMBFetch.constprop.15+0x3c>)
 8001c38:	0020      	movs	r0, r4
 8001c3a:	3010      	adds	r0, #16
 8001c3c:	f7ff ffa0 	bl	8001b80 <chSemWaitTimeoutS>
 8001c40:	1e05      	subs	r5, r0, #0
 8001c42:	d10f      	bne.n	8001c64 <chMBFetch.constprop.15+0x34>
 8001c44:	68e2      	ldr	r2, [r4, #12]
 8001c46:	1d13      	adds	r3, r2, #4
 8001c48:	6812      	ldr	r2, [r2, #0]
 8001c4a:	60e3      	str	r3, [r4, #12]
 8001c4c:	6032      	str	r2, [r6, #0]
 8001c4e:	6862      	ldr	r2, [r4, #4]
 8001c50:	4293      	cmp	r3, r2
 8001c52:	d301      	bcc.n	8001c58 <chMBFetch.constprop.15+0x28>
 8001c54:	6823      	ldr	r3, [r4, #0]
 8001c56:	60e3      	str	r3, [r4, #12]
 8001c58:	0020      	movs	r0, r4
 8001c5a:	301c      	adds	r0, #28
 8001c5c:	f7ff f848 	bl	8000cf0 <chSemSignalI>
 8001c60:	f7ff fbd6 	bl	8001410 <chSchRescheduleS>
 8001c64:	b662      	cpsie	i
 8001c66:	0028      	movs	r0, r5
 8001c68:	bd70      	pop	{r4, r5, r6, pc}
 8001c6a:	46c0      	nop			; (mov r8, r8)
 8001c6c:	20000654 	.word	0x20000654

08001c70 <mbox1_execute>:
 8001c70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c72:	b083      	sub	sp, #12
 8001c74:	b672      	cpsid	i
 8001c76:	4d16      	ldr	r5, [pc, #88]	; (8001cd0 <mbox1_execute+0x60>)
 8001c78:	2001      	movs	r0, #1
 8001c7a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8001c7c:	1f59      	subs	r1, r3, #5
 8001c7e:	424b      	negs	r3, r1
 8001c80:	4159      	adcs	r1, r3
 8001c82:	b2c9      	uxtb	r1, r1
 8001c84:	f7fe fd84 	bl	8000790 <_test_assert>
 8001c88:	2800      	cmp	r0, #0
 8001c8a:	d000      	beq.n	8001c8e <mbox1_execute+0x1e>
 8001c8c:	e1fa      	b.n	8002084 <mbox1_execute+0x414>
 8001c8e:	b662      	cpsie	i
 8001c90:	2442      	movs	r4, #66	; 0x42
 8001c92:	4910      	ldr	r1, [pc, #64]	; (8001cd4 <mbox1_execute+0x64>)
 8001c94:	0020      	movs	r0, r4
 8001c96:	f7ff ff8b 	bl	8001bb0 <chMBPost.constprop.19>
 8001c9a:	4241      	negs	r1, r0
 8001c9c:	4141      	adcs	r1, r0
 8001c9e:	2002      	movs	r0, #2
 8001ca0:	b2c9      	uxtb	r1, r1
 8001ca2:	f7fe fd75 	bl	8000790 <_test_assert>
 8001ca6:	2800      	cmp	r0, #0
 8001ca8:	d10f      	bne.n	8001cca <mbox1_execute+0x5a>
 8001caa:	3401      	adds	r4, #1
 8001cac:	2c46      	cmp	r4, #70	; 0x46
 8001cae:	d1f0      	bne.n	8001c92 <mbox1_execute+0x22>
 8001cb0:	4908      	ldr	r1, [pc, #32]	; (8001cd4 <mbox1_execute+0x64>)
 8001cb2:	3041      	adds	r0, #65	; 0x41
 8001cb4:	f7ff ff9c 	bl	8001bf0 <chMBPostAhead.constprop.17>
 8001cb8:	4241      	negs	r1, r0
 8001cba:	4141      	adcs	r1, r0
 8001cbc:	2003      	movs	r0, #3
 8001cbe:	b2c9      	uxtb	r1, r1
 8001cc0:	f7fe fd66 	bl	8000790 <_test_assert>
 8001cc4:	2800      	cmp	r0, #0
 8001cc6:	d100      	bne.n	8001cca <mbox1_execute+0x5a>
 8001cc8:	e1de      	b.n	8002088 <mbox1_execute+0x418>
 8001cca:	b003      	add	sp, #12
 8001ccc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cce:	46c0      	nop			; (mov r8, r8)
 8001cd0:	20000654 	.word	0x20000654
 8001cd4:	0000ffff 	.word	0x0000ffff
 8001cd8:	4ea8      	ldr	r6, [pc, #672]	; (8001f7c <mbox1_execute+0x30c>)
 8001cda:	200c      	movs	r0, #12
 8001cdc:	0031      	movs	r1, r6
 8001cde:	f7fe fd2f 	bl	8000740 <_test_assert_sequence>
 8001ce2:	2800      	cmp	r0, #0
 8001ce4:	d1f1      	bne.n	8001cca <mbox1_execute+0x5a>
 8001ce6:	49a6      	ldr	r1, [pc, #664]	; (8001f80 <mbox1_execute+0x310>)
 8001ce8:	3047      	adds	r0, #71	; 0x47
 8001cea:	f7ff ff61 	bl	8001bb0 <chMBPost.constprop.19>
 8001cee:	4241      	negs	r1, r0
 8001cf0:	4141      	adcs	r1, r0
 8001cf2:	200d      	movs	r0, #13
 8001cf4:	b2c9      	uxtb	r1, r1
 8001cf6:	f7fe fd4b 	bl	8000790 <_test_assert>
 8001cfa:	2800      	cmp	r0, #0
 8001cfc:	d1e5      	bne.n	8001cca <mbox1_execute+0x5a>
 8001cfe:	49a0      	ldr	r1, [pc, #640]	; (8001f80 <mbox1_execute+0x310>)
 8001d00:	a801      	add	r0, sp, #4
 8001d02:	f7ff ff95 	bl	8001c30 <chMBFetch.constprop.15>
 8001d06:	4241      	negs	r1, r0
 8001d08:	4141      	adcs	r1, r0
 8001d0a:	200e      	movs	r0, #14
 8001d0c:	b2c9      	uxtb	r1, r1
 8001d0e:	f7fe fd3f 	bl	8000790 <_test_assert>
 8001d12:	2800      	cmp	r0, #0
 8001d14:	d1d9      	bne.n	8001cca <mbox1_execute+0x5a>
 8001d16:	682b      	ldr	r3, [r5, #0]
 8001d18:	68aa      	ldr	r2, [r5, #8]
 8001d1a:	300f      	adds	r0, #15
 8001d1c:	1a99      	subs	r1, r3, r2
 8001d1e:	424b      	negs	r3, r1
 8001d20:	4159      	adcs	r1, r3
 8001d22:	b2c9      	uxtb	r1, r1
 8001d24:	f7fe fd34 	bl	8000790 <_test_assert>
 8001d28:	2800      	cmp	r0, #0
 8001d2a:	d1ce      	bne.n	8001cca <mbox1_execute+0x5a>
 8001d2c:	682b      	ldr	r3, [r5, #0]
 8001d2e:	68ea      	ldr	r2, [r5, #12]
 8001d30:	3010      	adds	r0, #16
 8001d32:	1a99      	subs	r1, r3, r2
 8001d34:	424b      	negs	r3, r1
 8001d36:	4159      	adcs	r1, r3
 8001d38:	b2c9      	uxtb	r1, r1
 8001d3a:	f7fe fd29 	bl	8000790 <_test_assert>
 8001d3e:	2800      	cmp	r0, #0
 8001d40:	d1c3      	bne.n	8001cca <mbox1_execute+0x5a>
 8001d42:	2101      	movs	r1, #1
 8001d44:	a801      	add	r0, sp, #4
 8001d46:	f7ff ff73 	bl	8001c30 <chMBFetch.constprop.15>
 8001d4a:	1c41      	adds	r1, r0, #1
 8001d4c:	4248      	negs	r0, r1
 8001d4e:	4141      	adcs	r1, r0
 8001d50:	2011      	movs	r0, #17
 8001d52:	b2c9      	uxtb	r1, r1
 8001d54:	f7fe fd1c 	bl	8000790 <_test_assert>
 8001d58:	2800      	cmp	r0, #0
 8001d5a:	d1b6      	bne.n	8001cca <mbox1_execute+0x5a>
 8001d5c:	b672      	cpsid	i
 8001d5e:	a801      	add	r0, sp, #4
 8001d60:	f7ff f81e 	bl	8000da0 <chMBFetchI.constprop.14>
 8001d64:	b662      	cpsie	i
 8001d66:	1c41      	adds	r1, r0, #1
 8001d68:	4248      	negs	r0, r1
 8001d6a:	4141      	adcs	r1, r0
 8001d6c:	2012      	movs	r0, #18
 8001d6e:	b2c9      	uxtb	r1, r1
 8001d70:	f7fe fd0e 	bl	8000790 <_test_assert>
 8001d74:	2800      	cmp	r0, #0
 8001d76:	d1a8      	bne.n	8001cca <mbox1_execute+0x5a>
 8001d78:	b672      	cpsid	i
 8001d7a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8001d7c:	3013      	adds	r0, #19
 8001d7e:	1f59      	subs	r1, r3, #5
 8001d80:	424b      	negs	r3, r1
 8001d82:	4159      	adcs	r1, r3
 8001d84:	b2c9      	uxtb	r1, r1
 8001d86:	f7fe fd03 	bl	8000790 <_test_assert>
 8001d8a:	2800      	cmp	r0, #0
 8001d8c:	d000      	beq.n	8001d90 <mbox1_execute+0x120>
 8001d8e:	e179      	b.n	8002084 <mbox1_execute+0x414>
 8001d90:	b662      	cpsie	i
 8001d92:	b672      	cpsid	i
 8001d94:	69a9      	ldr	r1, [r5, #24]
 8001d96:	2014      	movs	r0, #20
 8001d98:	424b      	negs	r3, r1
 8001d9a:	4159      	adcs	r1, r3
 8001d9c:	b2c9      	uxtb	r1, r1
 8001d9e:	f7fe fcf7 	bl	8000790 <_test_assert>
 8001da2:	2800      	cmp	r0, #0
 8001da4:	d000      	beq.n	8001da8 <mbox1_execute+0x138>
 8001da6:	e16d      	b.n	8002084 <mbox1_execute+0x414>
 8001da8:	b662      	cpsie	i
 8001daa:	b672      	cpsid	i
 8001dac:	68eb      	ldr	r3, [r5, #12]
 8001dae:	68aa      	ldr	r2, [r5, #8]
 8001db0:	2015      	movs	r0, #21
 8001db2:	1a99      	subs	r1, r3, r2
 8001db4:	424b      	negs	r3, r1
 8001db6:	4159      	adcs	r1, r3
 8001db8:	b2c9      	uxtb	r1, r1
 8001dba:	f7fe fce9 	bl	8000790 <_test_assert>
 8001dbe:	2800      	cmp	r0, #0
 8001dc0:	d000      	beq.n	8001dc4 <mbox1_execute+0x154>
 8001dc2:	e15f      	b.n	8002084 <mbox1_execute+0x414>
 8001dc4:	b662      	cpsie	i
 8001dc6:	b672      	cpsid	i
 8001dc8:	2041      	movs	r0, #65	; 0x41
 8001dca:	f7fe ffa9 	bl	8000d20 <chMBPostI.constprop.18>
 8001dce:	4241      	negs	r1, r0
 8001dd0:	4141      	adcs	r1, r0
 8001dd2:	2016      	movs	r0, #22
 8001dd4:	b2c9      	uxtb	r1, r1
 8001dd6:	f7fe fcdb 	bl	8000790 <_test_assert>
 8001dda:	2800      	cmp	r0, #0
 8001ddc:	d000      	beq.n	8001de0 <mbox1_execute+0x170>
 8001dde:	e774      	b.n	8001cca <mbox1_execute+0x5a>
 8001de0:	3042      	adds	r0, #66	; 0x42
 8001de2:	f7fe ff9d 	bl	8000d20 <chMBPostI.constprop.18>
 8001de6:	4241      	negs	r1, r0
 8001de8:	4141      	adcs	r1, r0
 8001dea:	2017      	movs	r0, #23
 8001dec:	b2c9      	uxtb	r1, r1
 8001dee:	f7fe fccf 	bl	8000790 <_test_assert>
 8001df2:	2800      	cmp	r0, #0
 8001df4:	d000      	beq.n	8001df8 <mbox1_execute+0x188>
 8001df6:	e768      	b.n	8001cca <mbox1_execute+0x5a>
 8001df8:	3043      	adds	r0, #67	; 0x43
 8001dfa:	f7fe ff91 	bl	8000d20 <chMBPostI.constprop.18>
 8001dfe:	4241      	negs	r1, r0
 8001e00:	4141      	adcs	r1, r0
 8001e02:	2018      	movs	r0, #24
 8001e04:	b2c9      	uxtb	r1, r1
 8001e06:	f7fe fcc3 	bl	8000790 <_test_assert>
 8001e0a:	2800      	cmp	r0, #0
 8001e0c:	d000      	beq.n	8001e10 <mbox1_execute+0x1a0>
 8001e0e:	e75c      	b.n	8001cca <mbox1_execute+0x5a>
 8001e10:	3044      	adds	r0, #68	; 0x44
 8001e12:	f7fe ff85 	bl	8000d20 <chMBPostI.constprop.18>
 8001e16:	4241      	negs	r1, r0
 8001e18:	4141      	adcs	r1, r0
 8001e1a:	2019      	movs	r0, #25
 8001e1c:	b2c9      	uxtb	r1, r1
 8001e1e:	f7fe fcb7 	bl	8000790 <_test_assert>
 8001e22:	2800      	cmp	r0, #0
 8001e24:	d000      	beq.n	8001e28 <mbox1_execute+0x1b8>
 8001e26:	e750      	b.n	8001cca <mbox1_execute+0x5a>
 8001e28:	3045      	adds	r0, #69	; 0x45
 8001e2a:	f7fe ff79 	bl	8000d20 <chMBPostI.constprop.18>
 8001e2e:	b662      	cpsie	i
 8001e30:	4241      	negs	r1, r0
 8001e32:	4141      	adcs	r1, r0
 8001e34:	201a      	movs	r0, #26
 8001e36:	b2c9      	uxtb	r1, r1
 8001e38:	f7fe fcaa 	bl	8000790 <_test_assert>
 8001e3c:	2800      	cmp	r0, #0
 8001e3e:	d000      	beq.n	8001e42 <mbox1_execute+0x1d2>
 8001e40:	e743      	b.n	8001cca <mbox1_execute+0x5a>
 8001e42:	68eb      	ldr	r3, [r5, #12]
 8001e44:	68aa      	ldr	r2, [r5, #8]
 8001e46:	301b      	adds	r0, #27
 8001e48:	1a99      	subs	r1, r3, r2
 8001e4a:	424b      	negs	r3, r1
 8001e4c:	4159      	adcs	r1, r3
 8001e4e:	b2c9      	uxtb	r1, r1
 8001e50:	f7fe fc9e 	bl	8000790 <_test_assert>
 8001e54:	2800      	cmp	r0, #0
 8001e56:	d000      	beq.n	8001e5a <mbox1_execute+0x1ea>
 8001e58:	e737      	b.n	8001cca <mbox1_execute+0x5a>
 8001e5a:	2405      	movs	r4, #5
 8001e5c:	271c      	movs	r7, #28
 8001e5e:	b672      	cpsid	i
 8001e60:	a801      	add	r0, sp, #4
 8001e62:	f7fe ff9d 	bl	8000da0 <chMBFetchI.constprop.14>
 8001e66:	b662      	cpsie	i
 8001e68:	4241      	negs	r1, r0
 8001e6a:	4141      	adcs	r1, r0
 8001e6c:	0038      	movs	r0, r7
 8001e6e:	b2c9      	uxtb	r1, r1
 8001e70:	f7fe fc8e 	bl	8000790 <_test_assert>
 8001e74:	2800      	cmp	r0, #0
 8001e76:	d000      	beq.n	8001e7a <mbox1_execute+0x20a>
 8001e78:	e727      	b.n	8001cca <mbox1_execute+0x5a>
 8001e7a:	9b01      	ldr	r3, [sp, #4]
 8001e7c:	3c01      	subs	r4, #1
 8001e7e:	b2d8      	uxtb	r0, r3
 8001e80:	f7fe fc9e 	bl	80007c0 <test_emit_token>
 8001e84:	2c00      	cmp	r4, #0
 8001e86:	d1ea      	bne.n	8001e5e <mbox1_execute+0x1ee>
 8001e88:	0031      	movs	r1, r6
 8001e8a:	201d      	movs	r0, #29
 8001e8c:	f7fe fc58 	bl	8000740 <_test_assert_sequence>
 8001e90:	2800      	cmp	r0, #0
 8001e92:	d000      	beq.n	8001e96 <mbox1_execute+0x226>
 8001e94:	e719      	b.n	8001cca <mbox1_execute+0x5a>
 8001e96:	b672      	cpsid	i
 8001e98:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8001e9a:	301e      	adds	r0, #30
 8001e9c:	1f59      	subs	r1, r3, #5
 8001e9e:	424b      	negs	r3, r1
 8001ea0:	4159      	adcs	r1, r3
 8001ea2:	b2c9      	uxtb	r1, r1
 8001ea4:	f7fe fc74 	bl	8000790 <_test_assert>
 8001ea8:	2800      	cmp	r0, #0
 8001eaa:	d000      	beq.n	8001eae <mbox1_execute+0x23e>
 8001eac:	e0ea      	b.n	8002084 <mbox1_execute+0x414>
 8001eae:	b662      	cpsie	i
 8001eb0:	b672      	cpsid	i
 8001eb2:	69a9      	ldr	r1, [r5, #24]
 8001eb4:	201f      	movs	r0, #31
 8001eb6:	424b      	negs	r3, r1
 8001eb8:	4159      	adcs	r1, r3
 8001eba:	b2c9      	uxtb	r1, r1
 8001ebc:	f7fe fc68 	bl	8000790 <_test_assert>
 8001ec0:	2800      	cmp	r0, #0
 8001ec2:	d000      	beq.n	8001ec6 <mbox1_execute+0x256>
 8001ec4:	e0de      	b.n	8002084 <mbox1_execute+0x414>
 8001ec6:	b662      	cpsie	i
 8001ec8:	68eb      	ldr	r3, [r5, #12]
 8001eca:	68aa      	ldr	r2, [r5, #8]
 8001ecc:	2020      	movs	r0, #32
 8001ece:	1a99      	subs	r1, r3, r2
 8001ed0:	424b      	negs	r3, r1
 8001ed2:	4159      	adcs	r1, r3
 8001ed4:	b2c9      	uxtb	r1, r1
 8001ed6:	f7fe fc5b 	bl	8000790 <_test_assert>
 8001eda:	2800      	cmp	r0, #0
 8001edc:	d000      	beq.n	8001ee0 <mbox1_execute+0x270>
 8001ede:	e6f4      	b.n	8001cca <mbox1_execute+0x5a>
 8001ee0:	b672      	cpsid	i
 8001ee2:	3045      	adds	r0, #69	; 0x45
 8001ee4:	f7fe ff3c 	bl	8000d60 <chMBPostAheadI.constprop.16>
 8001ee8:	4241      	negs	r1, r0
 8001eea:	4141      	adcs	r1, r0
 8001eec:	2021      	movs	r0, #33	; 0x21
 8001eee:	b2c9      	uxtb	r1, r1
 8001ef0:	f7fe fc4e 	bl	8000790 <_test_assert>
 8001ef4:	2800      	cmp	r0, #0
 8001ef6:	d000      	beq.n	8001efa <mbox1_execute+0x28a>
 8001ef8:	e6e7      	b.n	8001cca <mbox1_execute+0x5a>
 8001efa:	3044      	adds	r0, #68	; 0x44
 8001efc:	f7fe ff30 	bl	8000d60 <chMBPostAheadI.constprop.16>
 8001f00:	4241      	negs	r1, r0
 8001f02:	4141      	adcs	r1, r0
 8001f04:	2022      	movs	r0, #34	; 0x22
 8001f06:	b2c9      	uxtb	r1, r1
 8001f08:	f7fe fc42 	bl	8000790 <_test_assert>
 8001f0c:	2800      	cmp	r0, #0
 8001f0e:	d000      	beq.n	8001f12 <mbox1_execute+0x2a2>
 8001f10:	e6db      	b.n	8001cca <mbox1_execute+0x5a>
 8001f12:	3043      	adds	r0, #67	; 0x43
 8001f14:	f7fe ff24 	bl	8000d60 <chMBPostAheadI.constprop.16>
 8001f18:	4241      	negs	r1, r0
 8001f1a:	4141      	adcs	r1, r0
 8001f1c:	2023      	movs	r0, #35	; 0x23
 8001f1e:	b2c9      	uxtb	r1, r1
 8001f20:	f7fe fc36 	bl	8000790 <_test_assert>
 8001f24:	2800      	cmp	r0, #0
 8001f26:	d000      	beq.n	8001f2a <mbox1_execute+0x2ba>
 8001f28:	e6cf      	b.n	8001cca <mbox1_execute+0x5a>
 8001f2a:	3042      	adds	r0, #66	; 0x42
 8001f2c:	f7fe ff18 	bl	8000d60 <chMBPostAheadI.constprop.16>
 8001f30:	4241      	negs	r1, r0
 8001f32:	4141      	adcs	r1, r0
 8001f34:	2024      	movs	r0, #36	; 0x24
 8001f36:	b2c9      	uxtb	r1, r1
 8001f38:	f7fe fc2a 	bl	8000790 <_test_assert>
 8001f3c:	2800      	cmp	r0, #0
 8001f3e:	d000      	beq.n	8001f42 <mbox1_execute+0x2d2>
 8001f40:	e6c3      	b.n	8001cca <mbox1_execute+0x5a>
 8001f42:	3041      	adds	r0, #65	; 0x41
 8001f44:	f7fe ff0c 	bl	8000d60 <chMBPostAheadI.constprop.16>
 8001f48:	b662      	cpsie	i
 8001f4a:	4241      	negs	r1, r0
 8001f4c:	4141      	adcs	r1, r0
 8001f4e:	2025      	movs	r0, #37	; 0x25
 8001f50:	b2c9      	uxtb	r1, r1
 8001f52:	f7fe fc1d 	bl	8000790 <_test_assert>
 8001f56:	2800      	cmp	r0, #0
 8001f58:	d000      	beq.n	8001f5c <mbox1_execute+0x2ec>
 8001f5a:	e6b6      	b.n	8001cca <mbox1_execute+0x5a>
 8001f5c:	68eb      	ldr	r3, [r5, #12]
 8001f5e:	68aa      	ldr	r2, [r5, #8]
 8001f60:	3026      	adds	r0, #38	; 0x26
 8001f62:	1a99      	subs	r1, r3, r2
 8001f64:	424b      	negs	r3, r1
 8001f66:	4159      	adcs	r1, r3
 8001f68:	b2c9      	uxtb	r1, r1
 8001f6a:	f7fe fc11 	bl	8000790 <_test_assert>
 8001f6e:	2800      	cmp	r0, #0
 8001f70:	d000      	beq.n	8001f74 <mbox1_execute+0x304>
 8001f72:	e6aa      	b.n	8001cca <mbox1_execute+0x5a>
 8001f74:	2405      	movs	r4, #5
 8001f76:	2727      	movs	r7, #39	; 0x27
 8001f78:	e004      	b.n	8001f84 <mbox1_execute+0x314>
 8001f7a:	46c0      	nop			; (mov r8, r8)
 8001f7c:	080059d0 	.word	0x080059d0
 8001f80:	0000ffff 	.word	0x0000ffff
 8001f84:	b672      	cpsid	i
 8001f86:	a801      	add	r0, sp, #4
 8001f88:	f7fe ff0a 	bl	8000da0 <chMBFetchI.constprop.14>
 8001f8c:	b662      	cpsie	i
 8001f8e:	4241      	negs	r1, r0
 8001f90:	4141      	adcs	r1, r0
 8001f92:	0038      	movs	r0, r7
 8001f94:	b2c9      	uxtb	r1, r1
 8001f96:	f7fe fbfb 	bl	8000790 <_test_assert>
 8001f9a:	2800      	cmp	r0, #0
 8001f9c:	d000      	beq.n	8001fa0 <mbox1_execute+0x330>
 8001f9e:	e694      	b.n	8001cca <mbox1_execute+0x5a>
 8001fa0:	9b01      	ldr	r3, [sp, #4]
 8001fa2:	3c01      	subs	r4, #1
 8001fa4:	b2d8      	uxtb	r0, r3
 8001fa6:	f7fe fc0b 	bl	80007c0 <test_emit_token>
 8001faa:	2c00      	cmp	r4, #0
 8001fac:	d1ea      	bne.n	8001f84 <mbox1_execute+0x314>
 8001fae:	0031      	movs	r1, r6
 8001fb0:	2028      	movs	r0, #40	; 0x28
 8001fb2:	f7fe fbc5 	bl	8000740 <_test_assert_sequence>
 8001fb6:	2800      	cmp	r0, #0
 8001fb8:	d000      	beq.n	8001fbc <mbox1_execute+0x34c>
 8001fba:	e686      	b.n	8001cca <mbox1_execute+0x5a>
 8001fbc:	b672      	cpsid	i
 8001fbe:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8001fc0:	3029      	adds	r0, #41	; 0x29
 8001fc2:	1f59      	subs	r1, r3, #5
 8001fc4:	424b      	negs	r3, r1
 8001fc6:	4159      	adcs	r1, r3
 8001fc8:	b2c9      	uxtb	r1, r1
 8001fca:	f7fe fbe1 	bl	8000790 <_test_assert>
 8001fce:	2800      	cmp	r0, #0
 8001fd0:	d158      	bne.n	8002084 <mbox1_execute+0x414>
 8001fd2:	b662      	cpsie	i
 8001fd4:	b672      	cpsid	i
 8001fd6:	69a9      	ldr	r1, [r5, #24]
 8001fd8:	202a      	movs	r0, #42	; 0x2a
 8001fda:	424b      	negs	r3, r1
 8001fdc:	4159      	adcs	r1, r3
 8001fde:	b2c9      	uxtb	r1, r1
 8001fe0:	f7fe fbd6 	bl	8000790 <_test_assert>
 8001fe4:	2800      	cmp	r0, #0
 8001fe6:	d14d      	bne.n	8002084 <mbox1_execute+0x414>
 8001fe8:	b662      	cpsie	i
 8001fea:	68eb      	ldr	r3, [r5, #12]
 8001fec:	68aa      	ldr	r2, [r5, #8]
 8001fee:	202b      	movs	r0, #43	; 0x2b
 8001ff0:	1a99      	subs	r1, r3, r2
 8001ff2:	424b      	negs	r3, r1
 8001ff4:	4159      	adcs	r1, r3
 8001ff6:	b2c9      	uxtb	r1, r1
 8001ff8:	f7fe fbca 	bl	8000790 <_test_assert>
 8001ffc:	2800      	cmp	r0, #0
 8001ffe:	d000      	beq.n	8002002 <mbox1_execute+0x392>
 8002000:	e663      	b.n	8001cca <mbox1_execute+0x5a>
 8002002:	b672      	cpsid	i
 8002004:	0028      	movs	r0, r5
 8002006:	6829      	ldr	r1, [r5, #0]
 8002008:	686b      	ldr	r3, [r5, #4]
 800200a:	60a9      	str	r1, [r5, #8]
 800200c:	60e9      	str	r1, [r5, #12]
 800200e:	1a59      	subs	r1, r3, r1
 8002010:	1089      	asrs	r1, r1, #2
 8002012:	301c      	adds	r0, #28
 8002014:	f7fe fee4 	bl	8000de0 <chSemResetI>
 8002018:	0028      	movs	r0, r5
 800201a:	0021      	movs	r1, r4
 800201c:	3010      	adds	r0, #16
 800201e:	f7fe fedf 	bl	8000de0 <chSemResetI>
 8002022:	f7ff f9f5 	bl	8001410 <chSchRescheduleS>
 8002026:	b662      	cpsie	i
 8002028:	b672      	cpsid	i
 800202a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800202c:	202c      	movs	r0, #44	; 0x2c
 800202e:	1f59      	subs	r1, r3, #5
 8002030:	424b      	negs	r3, r1
 8002032:	4159      	adcs	r1, r3
 8002034:	b2c9      	uxtb	r1, r1
 8002036:	f7fe fbab 	bl	8000790 <_test_assert>
 800203a:	2800      	cmp	r0, #0
 800203c:	d122      	bne.n	8002084 <mbox1_execute+0x414>
 800203e:	b662      	cpsie	i
 8002040:	b672      	cpsid	i
 8002042:	69a9      	ldr	r1, [r5, #24]
 8002044:	202d      	movs	r0, #45	; 0x2d
 8002046:	424b      	negs	r3, r1
 8002048:	4159      	adcs	r1, r3
 800204a:	b2c9      	uxtb	r1, r1
 800204c:	f7fe fba0 	bl	8000790 <_test_assert>
 8002050:	2800      	cmp	r0, #0
 8002052:	d117      	bne.n	8002084 <mbox1_execute+0x414>
 8002054:	b662      	cpsie	i
 8002056:	b672      	cpsid	i
 8002058:	682b      	ldr	r3, [r5, #0]
 800205a:	68aa      	ldr	r2, [r5, #8]
 800205c:	202e      	movs	r0, #46	; 0x2e
 800205e:	1a99      	subs	r1, r3, r2
 8002060:	424b      	negs	r3, r1
 8002062:	4159      	adcs	r1, r3
 8002064:	b2c9      	uxtb	r1, r1
 8002066:	f7fe fb93 	bl	8000790 <_test_assert>
 800206a:	2800      	cmp	r0, #0
 800206c:	d10a      	bne.n	8002084 <mbox1_execute+0x414>
 800206e:	b662      	cpsie	i
 8002070:	b672      	cpsid	i
 8002072:	68eb      	ldr	r3, [r5, #12]
 8002074:	6829      	ldr	r1, [r5, #0]
 8002076:	202f      	movs	r0, #47	; 0x2f
 8002078:	1ac9      	subs	r1, r1, r3
 800207a:	424b      	negs	r3, r1
 800207c:	4159      	adcs	r1, r3
 800207e:	b2c9      	uxtb	r1, r1
 8002080:	f7fe fb86 	bl	8000790 <_test_assert>
 8002084:	b662      	cpsie	i
 8002086:	e620      	b.n	8001cca <mbox1_execute+0x5a>
 8002088:	2101      	movs	r1, #1
 800208a:	3058      	adds	r0, #88	; 0x58
 800208c:	f7ff fd90 	bl	8001bb0 <chMBPost.constprop.19>
 8002090:	3001      	adds	r0, #1
 8002092:	4241      	negs	r1, r0
 8002094:	4141      	adcs	r1, r0
 8002096:	2004      	movs	r0, #4
 8002098:	b2c9      	uxtb	r1, r1
 800209a:	f7fe fb79 	bl	8000790 <_test_assert>
 800209e:	2800      	cmp	r0, #0
 80020a0:	d000      	beq.n	80020a4 <mbox1_execute+0x434>
 80020a2:	e612      	b.n	8001cca <mbox1_execute+0x5a>
 80020a4:	b672      	cpsid	i
 80020a6:	3058      	adds	r0, #88	; 0x58
 80020a8:	f7fe fe3a 	bl	8000d20 <chMBPostI.constprop.18>
 80020ac:	b662      	cpsie	i
 80020ae:	3001      	adds	r0, #1
 80020b0:	4241      	negs	r1, r0
 80020b2:	4141      	adcs	r1, r0
 80020b4:	2005      	movs	r0, #5
 80020b6:	b2c9      	uxtb	r1, r1
 80020b8:	f7fe fb6a 	bl	8000790 <_test_assert>
 80020bc:	2800      	cmp	r0, #0
 80020be:	d000      	beq.n	80020c2 <mbox1_execute+0x452>
 80020c0:	e603      	b.n	8001cca <mbox1_execute+0x5a>
 80020c2:	2101      	movs	r1, #1
 80020c4:	3058      	adds	r0, #88	; 0x58
 80020c6:	f7ff fd93 	bl	8001bf0 <chMBPostAhead.constprop.17>
 80020ca:	3001      	adds	r0, #1
 80020cc:	4241      	negs	r1, r0
 80020ce:	4141      	adcs	r1, r0
 80020d0:	2006      	movs	r0, #6
 80020d2:	b2c9      	uxtb	r1, r1
 80020d4:	f7fe fb5c 	bl	8000790 <_test_assert>
 80020d8:	2800      	cmp	r0, #0
 80020da:	d000      	beq.n	80020de <mbox1_execute+0x46e>
 80020dc:	e5f5      	b.n	8001cca <mbox1_execute+0x5a>
 80020de:	b672      	cpsid	i
 80020e0:	3058      	adds	r0, #88	; 0x58
 80020e2:	f7fe fe3d 	bl	8000d60 <chMBPostAheadI.constprop.16>
 80020e6:	b662      	cpsie	i
 80020e8:	1c41      	adds	r1, r0, #1
 80020ea:	4248      	negs	r0, r1
 80020ec:	4141      	adcs	r1, r0
 80020ee:	2007      	movs	r0, #7
 80020f0:	b2c9      	uxtb	r1, r1
 80020f2:	f7fe fb4d 	bl	8000790 <_test_assert>
 80020f6:	2800      	cmp	r0, #0
 80020f8:	d000      	beq.n	80020fc <mbox1_execute+0x48c>
 80020fa:	e5e6      	b.n	8001cca <mbox1_execute+0x5a>
 80020fc:	b672      	cpsid	i
 80020fe:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8002100:	3008      	adds	r0, #8
 8002102:	424b      	negs	r3, r1
 8002104:	4159      	adcs	r1, r3
 8002106:	b2c9      	uxtb	r1, r1
 8002108:	f7fe fb42 	bl	8000790 <_test_assert>
 800210c:	2800      	cmp	r0, #0
 800210e:	d1b9      	bne.n	8002084 <mbox1_execute+0x414>
 8002110:	b662      	cpsie	i
 8002112:	b672      	cpsid	i
 8002114:	69ab      	ldr	r3, [r5, #24]
 8002116:	2009      	movs	r0, #9
 8002118:	1f59      	subs	r1, r3, #5
 800211a:	424b      	negs	r3, r1
 800211c:	4159      	adcs	r1, r3
 800211e:	b2c9      	uxtb	r1, r1
 8002120:	f7fe fb36 	bl	8000790 <_test_assert>
 8002124:	2800      	cmp	r0, #0
 8002126:	d1ad      	bne.n	8002084 <mbox1_execute+0x414>
 8002128:	b662      	cpsie	i
 800212a:	b672      	cpsid	i
 800212c:	68eb      	ldr	r3, [r5, #12]
 800212e:	68aa      	ldr	r2, [r5, #8]
 8002130:	200a      	movs	r0, #10
 8002132:	1a99      	subs	r1, r3, r2
 8002134:	424b      	negs	r3, r1
 8002136:	4159      	adcs	r1, r3
 8002138:	b2c9      	uxtb	r1, r1
 800213a:	f7fe fb29 	bl	8000790 <_test_assert>
 800213e:	2800      	cmp	r0, #0
 8002140:	d1a0      	bne.n	8002084 <mbox1_execute+0x414>
 8002142:	b662      	cpsie	i
 8002144:	2405      	movs	r4, #5
 8002146:	260b      	movs	r6, #11
 8002148:	e007      	b.n	800215a <mbox1_execute+0x4ea>
 800214a:	9b01      	ldr	r3, [sp, #4]
 800214c:	3c01      	subs	r4, #1
 800214e:	b2d8      	uxtb	r0, r3
 8002150:	f7fe fb36 	bl	80007c0 <test_emit_token>
 8002154:	2c00      	cmp	r4, #0
 8002156:	d100      	bne.n	800215a <mbox1_execute+0x4ea>
 8002158:	e5be      	b.n	8001cd8 <mbox1_execute+0x68>
 800215a:	4906      	ldr	r1, [pc, #24]	; (8002174 <mbox1_execute+0x504>)
 800215c:	a801      	add	r0, sp, #4
 800215e:	f7ff fd67 	bl	8001c30 <chMBFetch.constprop.15>
 8002162:	4241      	negs	r1, r0
 8002164:	4141      	adcs	r1, r0
 8002166:	0030      	movs	r0, r6
 8002168:	b2c9      	uxtb	r1, r1
 800216a:	f7fe fb11 	bl	8000790 <_test_assert>
 800216e:	2800      	cmp	r0, #0
 8002170:	d0eb      	beq.n	800214a <mbox1_execute+0x4da>
 8002172:	e5aa      	b.n	8001cca <mbox1_execute+0x5a>
 8002174:	0000ffff 	.word	0x0000ffff
	...

08002180 <chThdEnqueueTimeoutS>:
 8002180:	b510      	push	{r4, lr}
 8002182:	2900      	cmp	r1, #0
 8002184:	d00a      	beq.n	800219c <chThdEnqueueTimeoutS+0x1c>
 8002186:	4b07      	ldr	r3, [pc, #28]	; (80021a4 <chThdEnqueueTimeoutS+0x24>)
 8002188:	699b      	ldr	r3, [r3, #24]
 800218a:	6018      	str	r0, [r3, #0]
 800218c:	6842      	ldr	r2, [r0, #4]
 800218e:	605a      	str	r2, [r3, #4]
 8002190:	6013      	str	r3, [r2, #0]
 8002192:	6043      	str	r3, [r0, #4]
 8002194:	2004      	movs	r0, #4
 8002196:	f7ff fc0b 	bl	80019b0 <chSchGoSleepTimeoutS>
 800219a:	bd10      	pop	{r4, pc}
 800219c:	2001      	movs	r0, #1
 800219e:	4240      	negs	r0, r0
 80021a0:	e7fb      	b.n	800219a <chThdEnqueueTimeoutS+0x1a>
 80021a2:	46c0      	nop			; (mov r8, r8)
 80021a4:	20000738 	.word	0x20000738
	...

080021b0 <chOQWriteTimeout>:
 80021b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80021b2:	464f      	mov	r7, r9
 80021b4:	4646      	mov	r6, r8
 80021b6:	46d6      	mov	lr, sl
 80021b8:	4699      	mov	r9, r3
 80021ba:	69c3      	ldr	r3, [r0, #28]
 80021bc:	b5c0      	push	{r6, r7, lr}
 80021be:	0004      	movs	r4, r0
 80021c0:	000e      	movs	r6, r1
 80021c2:	0015      	movs	r5, r2
 80021c4:	4698      	mov	r8, r3
 80021c6:	b672      	cpsid	i
 80021c8:	2700      	movs	r7, #0
 80021ca:	68a3      	ldr	r3, [r4, #8]
 80021cc:	2b00      	cmp	r3, #0
 80021ce:	d01d      	beq.n	800220c <chOQWriteTimeout+0x5c>
 80021d0:	3b01      	subs	r3, #1
 80021d2:	60a3      	str	r3, [r4, #8]
 80021d4:	1c73      	adds	r3, r6, #1
 80021d6:	469a      	mov	sl, r3
 80021d8:	6963      	ldr	r3, [r4, #20]
 80021da:	1c5a      	adds	r2, r3, #1
 80021dc:	6162      	str	r2, [r4, #20]
 80021de:	7832      	ldrb	r2, [r6, #0]
 80021e0:	701a      	strb	r2, [r3, #0]
 80021e2:	6963      	ldr	r3, [r4, #20]
 80021e4:	6922      	ldr	r2, [r4, #16]
 80021e6:	4293      	cmp	r3, r2
 80021e8:	d301      	bcc.n	80021ee <chOQWriteTimeout+0x3e>
 80021ea:	68e3      	ldr	r3, [r4, #12]
 80021ec:	6163      	str	r3, [r4, #20]
 80021ee:	4643      	mov	r3, r8
 80021f0:	2b00      	cmp	r3, #0
 80021f2:	d001      	beq.n	80021f8 <chOQWriteTimeout+0x48>
 80021f4:	0020      	movs	r0, r4
 80021f6:	47c0      	blx	r8
 80021f8:	b662      	cpsie	i
 80021fa:	3d01      	subs	r5, #1
 80021fc:	3701      	adds	r7, #1
 80021fe:	2d00      	cmp	r5, #0
 8002200:	d00b      	beq.n	800221a <chOQWriteTimeout+0x6a>
 8002202:	b672      	cpsid	i
 8002204:	68a3      	ldr	r3, [r4, #8]
 8002206:	4656      	mov	r6, sl
 8002208:	2b00      	cmp	r3, #0
 800220a:	d1e1      	bne.n	80021d0 <chOQWriteTimeout+0x20>
 800220c:	4649      	mov	r1, r9
 800220e:	0020      	movs	r0, r4
 8002210:	f7ff ffb6 	bl	8002180 <chThdEnqueueTimeoutS>
 8002214:	2800      	cmp	r0, #0
 8002216:	d0d8      	beq.n	80021ca <chOQWriteTimeout+0x1a>
 8002218:	b662      	cpsie	i
 800221a:	0038      	movs	r0, r7
 800221c:	bc1c      	pop	{r2, r3, r4}
 800221e:	4690      	mov	r8, r2
 8002220:	4699      	mov	r9, r3
 8002222:	46a2      	mov	sl, r4
 8002224:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002226:	46c0      	nop			; (mov r8, r8)
	...

08002230 <writet>:
 8002230:	b510      	push	{r4, lr}
 8002232:	3030      	adds	r0, #48	; 0x30
 8002234:	f7ff ffbc 	bl	80021b0 <chOQWriteTimeout>
 8002238:	bd10      	pop	{r4, pc}
 800223a:	46c0      	nop			; (mov r8, r8)
 800223c:	0000      	movs	r0, r0
	...

08002240 <write>:
 8002240:	b510      	push	{r4, lr}
 8002242:	3030      	adds	r0, #48	; 0x30
 8002244:	4b01      	ldr	r3, [pc, #4]	; (800224c <write+0xc>)
 8002246:	f7ff ffb3 	bl	80021b0 <chOQWriteTimeout>
 800224a:	bd10      	pop	{r4, pc}
 800224c:	0000ffff 	.word	0x0000ffff

08002250 <chOQPutTimeout>:
 8002250:	b570      	push	{r4, r5, r6, lr}
 8002252:	0004      	movs	r4, r0
 8002254:	000e      	movs	r6, r1
 8002256:	0015      	movs	r5, r2
 8002258:	b672      	cpsid	i
 800225a:	e005      	b.n	8002268 <chOQPutTimeout+0x18>
 800225c:	0029      	movs	r1, r5
 800225e:	0020      	movs	r0, r4
 8002260:	f7ff ff8e 	bl	8002180 <chThdEnqueueTimeoutS>
 8002264:	2800      	cmp	r0, #0
 8002266:	db16      	blt.n	8002296 <chOQPutTimeout+0x46>
 8002268:	68a3      	ldr	r3, [r4, #8]
 800226a:	2b00      	cmp	r3, #0
 800226c:	d0f6      	beq.n	800225c <chOQPutTimeout+0xc>
 800226e:	3b01      	subs	r3, #1
 8002270:	60a3      	str	r3, [r4, #8]
 8002272:	6963      	ldr	r3, [r4, #20]
 8002274:	1c5a      	adds	r2, r3, #1
 8002276:	6162      	str	r2, [r4, #20]
 8002278:	701e      	strb	r6, [r3, #0]
 800227a:	6963      	ldr	r3, [r4, #20]
 800227c:	6922      	ldr	r2, [r4, #16]
 800227e:	4293      	cmp	r3, r2
 8002280:	d301      	bcc.n	8002286 <chOQPutTimeout+0x36>
 8002282:	68e3      	ldr	r3, [r4, #12]
 8002284:	6163      	str	r3, [r4, #20]
 8002286:	69e3      	ldr	r3, [r4, #28]
 8002288:	2b00      	cmp	r3, #0
 800228a:	d001      	beq.n	8002290 <chOQPutTimeout+0x40>
 800228c:	0020      	movs	r0, r4
 800228e:	4798      	blx	r3
 8002290:	b662      	cpsie	i
 8002292:	2000      	movs	r0, #0
 8002294:	bd70      	pop	{r4, r5, r6, pc}
 8002296:	b662      	cpsie	i
 8002298:	e7fc      	b.n	8002294 <chOQPutTimeout+0x44>
 800229a:	46c0      	nop			; (mov r8, r8)
 800229c:	0000      	movs	r0, r0
	...

080022a0 <thread2.lto_priv.75>:
 80022a0:	b510      	push	{r4, lr}
 80022a2:	22c8      	movs	r2, #200	; 0xc8
 80022a4:	2100      	movs	r1, #0
 80022a6:	4802      	ldr	r0, [pc, #8]	; (80022b0 <thread2.lto_priv.75+0x10>)
 80022a8:	f7ff ffd2 	bl	8002250 <chOQPutTimeout>
 80022ac:	bd10      	pop	{r4, pc}
 80022ae:	46c0      	nop			; (mov r8, r8)
 80022b0:	20000688 	.word	0x20000688
	...

080022c0 <putt>:
 80022c0:	b510      	push	{r4, lr}
 80022c2:	3030      	adds	r0, #48	; 0x30
 80022c4:	f7ff ffc4 	bl	8002250 <chOQPutTimeout>
 80022c8:	bd10      	pop	{r4, pc}
 80022ca:	46c0      	nop			; (mov r8, r8)
 80022cc:	0000      	movs	r0, r0
	...

080022d0 <put>:
 80022d0:	b510      	push	{r4, lr}
 80022d2:	3030      	adds	r0, #48	; 0x30
 80022d4:	4a01      	ldr	r2, [pc, #4]	; (80022dc <put+0xc>)
 80022d6:	f7ff ffbb 	bl	8002250 <chOQPutTimeout>
 80022da:	bd10      	pop	{r4, pc}
 80022dc:	0000ffff 	.word	0x0000ffff

080022e0 <chIQReadTimeout>:
 80022e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80022e2:	46ce      	mov	lr, r9
 80022e4:	4647      	mov	r7, r8
 80022e6:	0004      	movs	r4, r0
 80022e8:	b580      	push	{r7, lr}
 80022ea:	4689      	mov	r9, r1
 80022ec:	4690      	mov	r8, r2
 80022ee:	001d      	movs	r5, r3
 80022f0:	69c7      	ldr	r7, [r0, #28]
 80022f2:	b672      	cpsid	i
 80022f4:	2600      	movs	r6, #0
 80022f6:	2f00      	cmp	r7, #0
 80022f8:	d008      	beq.n	800230c <chIQReadTimeout+0x2c>
 80022fa:	0020      	movs	r0, r4
 80022fc:	47b8      	blx	r7
 80022fe:	e005      	b.n	800230c <chIQReadTimeout+0x2c>
 8002300:	0029      	movs	r1, r5
 8002302:	0020      	movs	r0, r4
 8002304:	f7ff ff3c 	bl	8002180 <chThdEnqueueTimeoutS>
 8002308:	2800      	cmp	r0, #0
 800230a:	d116      	bne.n	800233a <chIQReadTimeout+0x5a>
 800230c:	68a3      	ldr	r3, [r4, #8]
 800230e:	2b00      	cmp	r3, #0
 8002310:	d0f6      	beq.n	8002300 <chIQReadTimeout+0x20>
 8002312:	3b01      	subs	r3, #1
 8002314:	60a3      	str	r3, [r4, #8]
 8002316:	69a3      	ldr	r3, [r4, #24]
 8002318:	1c5a      	adds	r2, r3, #1
 800231a:	61a2      	str	r2, [r4, #24]
 800231c:	464a      	mov	r2, r9
 800231e:	781b      	ldrb	r3, [r3, #0]
 8002320:	5593      	strb	r3, [r2, r6]
 8002322:	69a3      	ldr	r3, [r4, #24]
 8002324:	6922      	ldr	r2, [r4, #16]
 8002326:	4293      	cmp	r3, r2
 8002328:	d301      	bcc.n	800232e <chIQReadTimeout+0x4e>
 800232a:	68e3      	ldr	r3, [r4, #12]
 800232c:	61a3      	str	r3, [r4, #24]
 800232e:	b662      	cpsie	i
 8002330:	3601      	adds	r6, #1
 8002332:	45b0      	cmp	r8, r6
 8002334:	d002      	beq.n	800233c <chIQReadTimeout+0x5c>
 8002336:	b672      	cpsid	i
 8002338:	e7dd      	b.n	80022f6 <chIQReadTimeout+0x16>
 800233a:	b662      	cpsie	i
 800233c:	0030      	movs	r0, r6
 800233e:	bc0c      	pop	{r2, r3}
 8002340:	4690      	mov	r8, r2
 8002342:	4699      	mov	r9, r3
 8002344:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002346:	46c0      	nop			; (mov r8, r8)
	...

08002350 <readt>:
 8002350:	b510      	push	{r4, lr}
 8002352:	300c      	adds	r0, #12
 8002354:	f7ff ffc4 	bl	80022e0 <chIQReadTimeout>
 8002358:	bd10      	pop	{r4, pc}
 800235a:	46c0      	nop			; (mov r8, r8)
 800235c:	0000      	movs	r0, r0
	...

08002360 <read>:
 8002360:	b510      	push	{r4, lr}
 8002362:	300c      	adds	r0, #12
 8002364:	4b01      	ldr	r3, [pc, #4]	; (800236c <read+0xc>)
 8002366:	f7ff ffbb 	bl	80022e0 <chIQReadTimeout>
 800236a:	bd10      	pop	{r4, pc}
 800236c:	0000ffff 	.word	0x0000ffff

08002370 <chIQGetTimeout>:
 8002370:	b570      	push	{r4, r5, r6, lr}
 8002372:	0004      	movs	r4, r0
 8002374:	000d      	movs	r5, r1
 8002376:	b672      	cpsid	i
 8002378:	69c3      	ldr	r3, [r0, #28]
 800237a:	2b00      	cmp	r3, #0
 800237c:	d007      	beq.n	800238e <chIQGetTimeout+0x1e>
 800237e:	4798      	blx	r3
 8002380:	e005      	b.n	800238e <chIQGetTimeout+0x1e>
 8002382:	0029      	movs	r1, r5
 8002384:	0020      	movs	r0, r4
 8002386:	f7ff fefb 	bl	8002180 <chThdEnqueueTimeoutS>
 800238a:	2800      	cmp	r0, #0
 800238c:	db0d      	blt.n	80023aa <chIQGetTimeout+0x3a>
 800238e:	68a3      	ldr	r3, [r4, #8]
 8002390:	2b00      	cmp	r3, #0
 8002392:	d0f6      	beq.n	8002382 <chIQGetTimeout+0x12>
 8002394:	69a2      	ldr	r2, [r4, #24]
 8002396:	3b01      	subs	r3, #1
 8002398:	60a3      	str	r3, [r4, #8]
 800239a:	1c53      	adds	r3, r2, #1
 800239c:	61a3      	str	r3, [r4, #24]
 800239e:	7810      	ldrb	r0, [r2, #0]
 80023a0:	6922      	ldr	r2, [r4, #16]
 80023a2:	4293      	cmp	r3, r2
 80023a4:	d301      	bcc.n	80023aa <chIQGetTimeout+0x3a>
 80023a6:	68e3      	ldr	r3, [r4, #12]
 80023a8:	61a3      	str	r3, [r4, #24]
 80023aa:	b662      	cpsie	i
 80023ac:	bd70      	pop	{r4, r5, r6, pc}
 80023ae:	46c0      	nop			; (mov r8, r8)

080023b0 <thread1.lto_priv.69>:
 80023b0:	b510      	push	{r4, lr}
 80023b2:	21c8      	movs	r1, #200	; 0xc8
 80023b4:	4801      	ldr	r0, [pc, #4]	; (80023bc <thread1.lto_priv.69+0xc>)
 80023b6:	f7ff ffdb 	bl	8002370 <chIQGetTimeout>
 80023ba:	bd10      	pop	{r4, pc}
 80023bc:	20000610 	.word	0x20000610

080023c0 <gett>:
 80023c0:	b510      	push	{r4, lr}
 80023c2:	300c      	adds	r0, #12
 80023c4:	f7ff ffd4 	bl	8002370 <chIQGetTimeout>
 80023c8:	bd10      	pop	{r4, pc}
 80023ca:	46c0      	nop			; (mov r8, r8)
 80023cc:	0000      	movs	r0, r0
	...

080023d0 <get>:
 80023d0:	b510      	push	{r4, lr}
 80023d2:	300c      	adds	r0, #12
 80023d4:	4901      	ldr	r1, [pc, #4]	; (80023dc <get+0xc>)
 80023d6:	f7ff ffcb 	bl	8002370 <chIQGetTimeout>
 80023da:	bd10      	pop	{r4, pc}
 80023dc:	0000ffff 	.word	0x0000ffff

080023e0 <chThdSleep>:
 80023e0:	b510      	push	{r4, lr}
 80023e2:	0001      	movs	r1, r0
 80023e4:	b672      	cpsid	i
 80023e6:	2008      	movs	r0, #8
 80023e8:	f7ff fae2 	bl	80019b0 <chSchGoSleepTimeoutS>
 80023ec:	b662      	cpsie	i
 80023ee:	bd10      	pop	{r4, pc}

080023f0 <Thread1>:
 80023f0:	b570      	push	{r4, r5, r6, lr}
 80023f2:	2590      	movs	r5, #144	; 0x90
 80023f4:	2420      	movs	r4, #32
 80023f6:	4b08      	ldr	r3, [pc, #32]	; (8002418 <Thread1+0x28>)
 80023f8:	4a08      	ldr	r2, [pc, #32]	; (800241c <Thread1+0x2c>)
 80023fa:	699b      	ldr	r3, [r3, #24]
 80023fc:	05ed      	lsls	r5, r5, #23
 80023fe:	619a      	str	r2, [r3, #24]
 8002400:	20fa      	movs	r0, #250	; 0xfa
 8002402:	836c      	strh	r4, [r5, #26]
 8002404:	0040      	lsls	r0, r0, #1
 8002406:	f7ff ffeb 	bl	80023e0 <chThdSleep>
 800240a:	20fa      	movs	r0, #250	; 0xfa
 800240c:	832c      	strh	r4, [r5, #24]
 800240e:	0040      	lsls	r0, r0, #1
 8002410:	f7ff ffe6 	bl	80023e0 <chThdSleep>
 8002414:	e7f4      	b.n	8002400 <Thread1+0x10>
 8002416:	46c0      	nop			; (mov r8, r8)
 8002418:	20000738 	.word	0x20000738
 800241c:	080055d0 	.word	0x080055d0

08002420 <sys1_execute>:
 8002420:	b500      	push	{lr}
 8002422:	b087      	sub	sp, #28
 8002424:	f7fe fd94 	bl	8000f50 <chSysGetStatusAndLockX>
 8002428:	07c3      	lsls	r3, r0, #31
 800242a:	d401      	bmi.n	8002430 <sys1_execute+0x10>
 800242c:	f7ff f8e8 	bl	8001600 <chSysRestoreStatusX.part.3>
 8002430:	b672      	cpsid	i
 8002432:	f7fe fd8d 	bl	8000f50 <chSysGetStatusAndLockX>
 8002436:	07c3      	lsls	r3, r0, #31
 8002438:	d401      	bmi.n	800243e <sys1_execute+0x1e>
 800243a:	f7ff f8e1 	bl	8001600 <chSysRestoreStatusX.part.3>
 800243e:	b662      	cpsie	i
 8002440:	f3ef 8310 	mrs	r3, PRIMASK
 8002444:	07db      	lsls	r3, r3, #31
 8002446:	d400      	bmi.n	800244a <sys1_execute+0x2a>
 8002448:	b672      	cpsid	i
 800244a:	f3ef 8310 	mrs	r3, PRIMASK
 800244e:	07db      	lsls	r3, r3, #31
 8002450:	d400      	bmi.n	8002454 <sys1_execute+0x34>
 8002452:	b672      	cpsid	i
 8002454:	b662      	cpsie	i
 8002456:	b672      	cpsid	i
 8002458:	f3ef 8310 	mrs	r3, PRIMASK
 800245c:	07db      	lsls	r3, r3, #31
 800245e:	d500      	bpl.n	8002462 <sys1_execute+0x42>
 8002460:	b662      	cpsie	i
 8002462:	f3ef 8310 	mrs	r3, PRIMASK
 8002466:	07db      	lsls	r3, r3, #31
 8002468:	d500      	bpl.n	800246c <sys1_execute+0x4c>
 800246a:	b662      	cpsie	i
 800246c:	2300      	movs	r3, #0
 800246e:	9304      	str	r3, [sp, #16]
 8002470:	b672      	cpsid	i
 8002472:	9b04      	ldr	r3, [sp, #16]
 8002474:	2b00      	cmp	r3, #0
 8002476:	d002      	beq.n	800247e <sys1_execute+0x5e>
 8002478:	a801      	add	r0, sp, #4
 800247a:	f7fe fcc9 	bl	8000e10 <chVTDoResetI>
 800247e:	2300      	movs	r3, #0
 8002480:	4a09      	ldr	r2, [pc, #36]	; (80024a8 <sys1_execute+0x88>)
 8002482:	2101      	movs	r1, #1
 8002484:	a801      	add	r0, sp, #4
 8002486:	f7fe fd03 	bl	8000e90 <chVTDoSetI>
 800248a:	b662      	cpsie	i
 800248c:	200a      	movs	r0, #10
 800248e:	f7ff ffa7 	bl	80023e0 <chThdSleep>
 8002492:	b672      	cpsid	i
 8002494:	9904      	ldr	r1, [sp, #16]
 8002496:	b662      	cpsie	i
 8002498:	424b      	negs	r3, r1
 800249a:	4159      	adcs	r1, r3
 800249c:	2001      	movs	r0, #1
 800249e:	b2c9      	uxtb	r1, r1
 80024a0:	f7fe f976 	bl	8000790 <_test_assert>
 80024a4:	b007      	add	sp, #28
 80024a6:	bd00      	pop	{pc}
 80024a8:	08001621 	.word	0x08001621
 80024ac:	00000000 	.word	0x00000000

080024b0 <thread1.lto_priv.68>:
 80024b0:	b510      	push	{r4, lr}
 80024b2:	0004      	movs	r4, r0
 80024b4:	2032      	movs	r0, #50	; 0x32
 80024b6:	f7ff ff93 	bl	80023e0 <chThdSleep>
 80024ba:	b672      	cpsid	i
 80024bc:	2101      	movs	r1, #1
 80024be:	0020      	movs	r0, r4
 80024c0:	f7fe fbb6 	bl	8000c30 <chEvtSignalI>
 80024c4:	f7fe ffa4 	bl	8001410 <chSchRescheduleS>
 80024c8:	b662      	cpsie	i
 80024ca:	bd10      	pop	{r4, pc}
 80024cc:	0000      	movs	r0, r0
	...

080024d0 <thread2.lto_priv.74>:
 80024d0:	b510      	push	{r4, lr}
 80024d2:	b672      	cpsid	i
 80024d4:	2100      	movs	r1, #0
 80024d6:	4809      	ldr	r0, [pc, #36]	; (80024fc <thread2.lto_priv.74+0x2c>)
 80024d8:	f7fe fbca 	bl	8000c70 <chEvtBroadcastFlagsI>
 80024dc:	f7fe ff98 	bl	8001410 <chSchRescheduleS>
 80024e0:	b662      	cpsie	i
 80024e2:	2032      	movs	r0, #50	; 0x32
 80024e4:	f7ff ff7c 	bl	80023e0 <chThdSleep>
 80024e8:	b672      	cpsid	i
 80024ea:	2100      	movs	r1, #0
 80024ec:	4804      	ldr	r0, [pc, #16]	; (8002500 <thread2.lto_priv.74+0x30>)
 80024ee:	f7fe fbbf 	bl	8000c70 <chEvtBroadcastFlagsI>
 80024f2:	f7fe ff8d 	bl	8001410 <chSchRescheduleS>
 80024f6:	b662      	cpsie	i
 80024f8:	bd10      	pop	{r4, pc}
 80024fa:	46c0      	nop			; (mov r8, r8)
 80024fc:	20000608 	.word	0x20000608
 8002500:	2000060c 	.word	0x2000060c
	...

08002510 <thread2.lto_priv.73>:
 8002510:	b510      	push	{r4, lr}
 8002512:	2032      	movs	r0, #50	; 0x32
 8002514:	f7ff ff64 	bl	80023e0 <chThdSleep>
 8002518:	b672      	cpsid	i
 800251a:	4803      	ldr	r0, [pc, #12]	; (8002528 <thread2.lto_priv.73+0x18>)
 800251c:	f7fe fbe8 	bl	8000cf0 <chSemSignalI>
 8002520:	f7fe ff76 	bl	8001410 <chSchRescheduleS>
 8002524:	b662      	cpsie	i
 8002526:	bd10      	pop	{r4, pc}
 8002528:	200006ac 	.word	0x200006ac
 800252c:	00000000 	.word	0x00000000

08002530 <test_wait_tick>:
 8002530:	b510      	push	{r4, lr}
 8002532:	2001      	movs	r0, #1
 8002534:	f7ff ff54 	bl	80023e0 <chThdSleep>
 8002538:	b672      	cpsid	i
 800253a:	4b02      	ldr	r3, [pc, #8]	; (8002544 <test_wait_tick+0x14>)
 800253c:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800253e:	b662      	cpsie	i
 8002540:	b280      	uxth	r0, r0
 8002542:	bd10      	pop	{r4, pc}
 8002544:	40000400 	.word	0x40000400
	...

08002550 <bmk10_execute>:
 8002550:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002552:	46c6      	mov	lr, r8
 8002554:	b500      	push	{lr}
 8002556:	f7ff ffeb 	bl	8002530 <test_wait_tick>
 800255a:	f7fe fcd9 	bl	8000f10 <test_start_timer.constprop.1>
 800255e:	4b15      	ldr	r3, [pc, #84]	; (80025b4 <bmk10_execute+0x64>)
 8002560:	2400      	movs	r4, #0
 8002562:	4698      	mov	r8, r3
 8002564:	4f14      	ldr	r7, [pc, #80]	; (80025b8 <bmk10_execute+0x68>)
 8002566:	4e15      	ldr	r6, [pc, #84]	; (80025bc <bmk10_execute+0x6c>)
 8002568:	4d15      	ldr	r5, [pc, #84]	; (80025c0 <bmk10_execute+0x70>)
 800256a:	b672      	cpsid	i
 800256c:	2300      	movs	r3, #0
 800256e:	003a      	movs	r2, r7
 8002570:	0030      	movs	r0, r6
 8002572:	2101      	movs	r1, #1
 8002574:	f7fe fc8c 	bl	8000e90 <chVTDoSetI>
 8002578:	2300      	movs	r3, #0
 800257a:	003a      	movs	r2, r7
 800257c:	4911      	ldr	r1, [pc, #68]	; (80025c4 <bmk10_execute+0x74>)
 800257e:	0028      	movs	r0, r5
 8002580:	f7fe fc86 	bl	8000e90 <chVTDoSetI>
 8002584:	0030      	movs	r0, r6
 8002586:	f7fe fc43 	bl	8000e10 <chVTDoResetI>
 800258a:	0028      	movs	r0, r5
 800258c:	f7fe fc40 	bl	8000e10 <chVTDoResetI>
 8002590:	b662      	cpsie	i
 8002592:	4643      	mov	r3, r8
 8002594:	781b      	ldrb	r3, [r3, #0]
 8002596:	3401      	adds	r4, #1
 8002598:	2b00      	cmp	r3, #0
 800259a:	d0e6      	beq.n	800256a <bmk10_execute+0x1a>
 800259c:	480a      	ldr	r0, [pc, #40]	; (80025c8 <bmk10_execute+0x78>)
 800259e:	f7fe f967 	bl	8000870 <test_print>
 80025a2:	0060      	lsls	r0, r4, #1
 80025a4:	f7fe f86c 	bl	8000680 <test_printn>
 80025a8:	4808      	ldr	r0, [pc, #32]	; (80025cc <bmk10_execute+0x7c>)
 80025aa:	f7fe f941 	bl	8000830 <test_println>
 80025ae:	bc04      	pop	{r2}
 80025b0:	4690      	mov	r8, r2
 80025b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80025b4:	20000fc8 	.word	0x20000fc8
 80025b8:	080003a1 	.word	0x080003a1
 80025bc:	20001008 	.word	0x20001008
 80025c0:	2000101c 	.word	0x2000101c
 80025c4:	00002710 	.word	0x00002710
 80025c8:	08005600 	.word	0x08005600
 80025cc:	08005610 	.word	0x08005610

080025d0 <bmk9_execute>:
 80025d0:	2200      	movs	r2, #0
 80025d2:	b570      	push	{r4, r5, r6, lr}
 80025d4:	2500      	movs	r5, #0
 80025d6:	4c20      	ldr	r4, [pc, #128]	; (8002658 <bmk9_execute+0x88>)
 80025d8:	4b20      	ldr	r3, [pc, #128]	; (800265c <bmk9_execute+0x8c>)
 80025da:	6024      	str	r4, [r4, #0]
 80025dc:	60e3      	str	r3, [r4, #12]
 80025de:	61a3      	str	r3, [r4, #24]
 80025e0:	6163      	str	r3, [r4, #20]
 80025e2:	6064      	str	r4, [r4, #4]
 80025e4:	3310      	adds	r3, #16
 80025e6:	60a2      	str	r2, [r4, #8]
 80025e8:	6123      	str	r3, [r4, #16]
 80025ea:	61e2      	str	r2, [r4, #28]
 80025ec:	6222      	str	r2, [r4, #32]
 80025ee:	f7ff ff9f 	bl	8002530 <test_wait_tick>
 80025f2:	f7fe fc8d 	bl	8000f10 <test_start_timer.constprop.1>
 80025f6:	4e1a      	ldr	r6, [pc, #104]	; (8002660 <bmk9_execute+0x90>)
 80025f8:	b672      	cpsid	i
 80025fa:	2100      	movs	r1, #0
 80025fc:	0020      	movs	r0, r4
 80025fe:	f7fe fac7 	bl	8000b90 <chIQPutI>
 8002602:	2101      	movs	r1, #1
 8002604:	0020      	movs	r0, r4
 8002606:	f7fe fac3 	bl	8000b90 <chIQPutI>
 800260a:	2102      	movs	r1, #2
 800260c:	0020      	movs	r0, r4
 800260e:	f7fe fabf 	bl	8000b90 <chIQPutI>
 8002612:	2103      	movs	r1, #3
 8002614:	0020      	movs	r0, r4
 8002616:	f7fe fabb 	bl	8000b90 <chIQPutI>
 800261a:	b662      	cpsie	i
 800261c:	4911      	ldr	r1, [pc, #68]	; (8002664 <bmk9_execute+0x94>)
 800261e:	0020      	movs	r0, r4
 8002620:	f7ff fea6 	bl	8002370 <chIQGetTimeout>
 8002624:	490f      	ldr	r1, [pc, #60]	; (8002664 <bmk9_execute+0x94>)
 8002626:	0020      	movs	r0, r4
 8002628:	f7ff fea2 	bl	8002370 <chIQGetTimeout>
 800262c:	490d      	ldr	r1, [pc, #52]	; (8002664 <bmk9_execute+0x94>)
 800262e:	0020      	movs	r0, r4
 8002630:	f7ff fe9e 	bl	8002370 <chIQGetTimeout>
 8002634:	490b      	ldr	r1, [pc, #44]	; (8002664 <bmk9_execute+0x94>)
 8002636:	0020      	movs	r0, r4
 8002638:	f7ff fe9a 	bl	8002370 <chIQGetTimeout>
 800263c:	7833      	ldrb	r3, [r6, #0]
 800263e:	3501      	adds	r5, #1
 8002640:	2b00      	cmp	r3, #0
 8002642:	d0d9      	beq.n	80025f8 <bmk9_execute+0x28>
 8002644:	4808      	ldr	r0, [pc, #32]	; (8002668 <bmk9_execute+0x98>)
 8002646:	f7fe f913 	bl	8000870 <test_print>
 800264a:	00a8      	lsls	r0, r5, #2
 800264c:	f7fe f818 	bl	8000680 <test_printn>
 8002650:	4806      	ldr	r0, [pc, #24]	; (800266c <bmk9_execute+0x9c>)
 8002652:	f7fe f8ed 	bl	8000830 <test_println>
 8002656:	bd70      	pop	{r4, r5, r6, pc}
 8002658:	200008e0 	.word	0x200008e0
 800265c:	200008d0 	.word	0x200008d0
 8002660:	20000fc8 	.word	0x20000fc8
 8002664:	0000ffff 	.word	0x0000ffff
 8002668:	08005600 	.word	0x08005600
 800266c:	08005740 	.word	0x08005740

08002670 <bmk6_execute>:
 8002670:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002672:	46ce      	mov	lr, r9
 8002674:	4647      	mov	r7, r8
 8002676:	b580      	push	{r7, lr}
 8002678:	4b14      	ldr	r3, [pc, #80]	; (80026cc <bmk6_execute+0x5c>)
 800267a:	b083      	sub	sp, #12
 800267c:	699b      	ldr	r3, [r3, #24]
 800267e:	2400      	movs	r4, #0
 8002680:	689d      	ldr	r5, [r3, #8]
 8002682:	f7ff ff55 	bl	8002530 <test_wait_tick>
 8002686:	f7fe fc43 	bl	8000f10 <test_start_timer.constprop.1>
 800268a:	4b11      	ldr	r3, [pc, #68]	; (80026d0 <bmk6_execute+0x60>)
 800268c:	2600      	movs	r6, #0
 800268e:	4699      	mov	r9, r3
 8002690:	4b10      	ldr	r3, [pc, #64]	; (80026d4 <bmk6_execute+0x64>)
 8002692:	4f11      	ldr	r7, [pc, #68]	; (80026d8 <bmk6_execute+0x68>)
 8002694:	4698      	mov	r8, r3
 8002696:	3501      	adds	r5, #1
 8002698:	21a4      	movs	r1, #164	; 0xa4
 800269a:	464b      	mov	r3, r9
 800269c:	9600      	str	r6, [sp, #0]
 800269e:	002a      	movs	r2, r5
 80026a0:	0049      	lsls	r1, r1, #1
 80026a2:	4640      	mov	r0, r8
 80026a4:	f7ff f88c 	bl	80017c0 <chThdCreateStatic>
 80026a8:	783b      	ldrb	r3, [r7, #0]
 80026aa:	3401      	adds	r4, #1
 80026ac:	2b00      	cmp	r3, #0
 80026ae:	d0f3      	beq.n	8002698 <bmk6_execute+0x28>
 80026b0:	480a      	ldr	r0, [pc, #40]	; (80026dc <bmk6_execute+0x6c>)
 80026b2:	f7fe f8dd 	bl	8000870 <test_print>
 80026b6:	0020      	movs	r0, r4
 80026b8:	f7fd ffe2 	bl	8000680 <test_printn>
 80026bc:	4808      	ldr	r0, [pc, #32]	; (80026e0 <bmk6_execute+0x70>)
 80026be:	f7fe f8b7 	bl	8000830 <test_println>
 80026c2:	b003      	add	sp, #12
 80026c4:	bc0c      	pop	{r2, r3}
 80026c6:	4690      	mov	r8, r2
 80026c8:	4699      	mov	r9, r3
 80026ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80026cc:	20000738 	.word	0x20000738
 80026d0:	08005571 	.word	0x08005571
 80026d4:	20000938 	.word	0x20000938
 80026d8:	20000fc8 	.word	0x20000fc8
 80026dc:	08005600 	.word	0x08005600
 80026e0:	08005700 	.word	0x08005700
	...

080026f0 <thd4_execute>:
 80026f0:	b570      	push	{r4, r5, r6, lr}
 80026f2:	f7ff ff1d 	bl	8002530 <test_wait_tick>
 80026f6:	b672      	cpsid	i
 80026f8:	4d27      	ldr	r5, [pc, #156]	; (8002798 <thd4_execute+0xa8>)
 80026fa:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 80026fc:	b2a4      	uxth	r4, r4
 80026fe:	b662      	cpsie	i
 8002700:	2064      	movs	r0, #100	; 0x64
 8002702:	f7ff fe6d 	bl	80023e0 <chThdSleep>
 8002706:	0022      	movs	r2, r4
 8002708:	0021      	movs	r1, r4
 800270a:	3267      	adds	r2, #103	; 0x67
 800270c:	3164      	adds	r1, #100	; 0x64
 800270e:	b292      	uxth	r2, r2
 8002710:	b289      	uxth	r1, r1
 8002712:	2001      	movs	r0, #1
 8002714:	f7fd fff4 	bl	8000700 <_test_assert_time_window>
 8002718:	2800      	cmp	r0, #0
 800271a:	d000      	beq.n	800271e <thd4_execute+0x2e>
 800271c:	bd70      	pop	{r4, r5, r6, pc}
 800271e:	b672      	cpsid	i
 8002720:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002722:	b2a4      	uxth	r4, r4
 8002724:	b662      	cpsie	i
 8002726:	3064      	adds	r0, #100	; 0x64
 8002728:	f7ff fe5a 	bl	80023e0 <chThdSleep>
 800272c:	0022      	movs	r2, r4
 800272e:	0021      	movs	r1, r4
 8002730:	3267      	adds	r2, #103	; 0x67
 8002732:	3164      	adds	r1, #100	; 0x64
 8002734:	b292      	uxth	r2, r2
 8002736:	b289      	uxth	r1, r1
 8002738:	2002      	movs	r0, #2
 800273a:	f7fd ffe1 	bl	8000700 <_test_assert_time_window>
 800273e:	2800      	cmp	r0, #0
 8002740:	d1ec      	bne.n	800271c <thd4_execute+0x2c>
 8002742:	b672      	cpsid	i
 8002744:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8002746:	b2a4      	uxth	r4, r4
 8002748:	b662      	cpsie	i
 800274a:	20fa      	movs	r0, #250	; 0xfa
 800274c:	0080      	lsls	r0, r0, #2
 800274e:	f7ff fe47 	bl	80023e0 <chThdSleep>
 8002752:	4b12      	ldr	r3, [pc, #72]	; (800279c <thd4_execute+0xac>)
 8002754:	2003      	movs	r0, #3
 8002756:	18e2      	adds	r2, r4, r3
 8002758:	3b03      	subs	r3, #3
 800275a:	18e1      	adds	r1, r4, r3
 800275c:	b292      	uxth	r2, r2
 800275e:	b289      	uxth	r1, r1
 8002760:	f7fd ffce 	bl	8000700 <_test_assert_time_window>
 8002764:	2800      	cmp	r0, #0
 8002766:	d1d9      	bne.n	800271c <thd4_execute+0x2c>
 8002768:	b672      	cpsid	i
 800276a:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 800276c:	b2a4      	uxth	r4, r4
 800276e:	b662      	cpsie	i
 8002770:	0026      	movs	r6, r4
 8002772:	3664      	adds	r6, #100	; 0x64
 8002774:	b2b6      	uxth	r6, r6
 8002776:	b672      	cpsid	i
 8002778:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800277a:	1a71      	subs	r1, r6, r1
 800277c:	b289      	uxth	r1, r1
 800277e:	2900      	cmp	r1, #0
 8002780:	d002      	beq.n	8002788 <thd4_execute+0x98>
 8002782:	3008      	adds	r0, #8
 8002784:	f7ff f914 	bl	80019b0 <chSchGoSleepTimeoutS>
 8002788:	b662      	cpsie	i
 800278a:	3467      	adds	r4, #103	; 0x67
 800278c:	b2a2      	uxth	r2, r4
 800278e:	0031      	movs	r1, r6
 8002790:	2004      	movs	r0, #4
 8002792:	f7fd ffb5 	bl	8000700 <_test_assert_time_window>
 8002796:	e7c1      	b.n	800271c <thd4_execute+0x2c>
 8002798:	40000400 	.word	0x40000400
 800279c:	000003eb 	.word	0x000003eb

080027a0 <chMsgWait>:
 80027a0:	b510      	push	{r4, lr}
 80027a2:	b672      	cpsid	i
 80027a4:	4c0a      	ldr	r4, [pc, #40]	; (80027d0 <chMsgWait+0x30>)
 80027a6:	69a3      	ldr	r3, [r4, #24]
 80027a8:	001a      	movs	r2, r3
 80027aa:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80027ac:	3228      	adds	r2, #40	; 0x28
 80027ae:	4290      	cmp	r0, r2
 80027b0:	d006      	beq.n	80027c0 <chMsgWait+0x20>
 80027b2:	6801      	ldr	r1, [r0, #0]
 80027b4:	6299      	str	r1, [r3, #40]	; 0x28
 80027b6:	230d      	movs	r3, #13
 80027b8:	604a      	str	r2, [r1, #4]
 80027ba:	7703      	strb	r3, [r0, #28]
 80027bc:	b662      	cpsie	i
 80027be:	bd10      	pop	{r4, pc}
 80027c0:	200e      	movs	r0, #14
 80027c2:	f7ff f82d 	bl	8001820 <chSchGoSleepS>
 80027c6:	69a3      	ldr	r3, [r4, #24]
 80027c8:	001a      	movs	r2, r3
 80027ca:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80027cc:	3228      	adds	r2, #40	; 0x28
 80027ce:	e7f0      	b.n	80027b2 <chMsgWait+0x12>
 80027d0:	20000738 	.word	0x20000738
	...

080027e0 <thread2.lto_priv.76>:
 80027e0:	b510      	push	{r4, lr}
 80027e2:	f7ff ffdd 	bl	80027a0 <chMsgWait>
 80027e6:	6b04      	ldr	r4, [r0, #48]	; 0x30
 80027e8:	b672      	cpsid	i
 80027ea:	0021      	movs	r1, r4
 80027ec:	f7fe ff28 	bl	8001640 <chSchWakeupS>
 80027f0:	b662      	cpsie	i
 80027f2:	2c00      	cmp	r4, #0
 80027f4:	d1f5      	bne.n	80027e2 <thread2.lto_priv.76+0x2>
 80027f6:	bd10      	pop	{r4, pc}
	...

08002800 <msg1_execute>:
 8002800:	21a4      	movs	r1, #164	; 0xa4
 8002802:	b510      	push	{r4, lr}
 8002804:	4b19      	ldr	r3, [pc, #100]	; (800286c <msg1_execute+0x6c>)
 8002806:	b082      	sub	sp, #8
 8002808:	699b      	ldr	r3, [r3, #24]
 800280a:	0049      	lsls	r1, r1, #1
 800280c:	689a      	ldr	r2, [r3, #8]
 800280e:	4818      	ldr	r0, [pc, #96]	; (8002870 <msg1_execute+0x70>)
 8002810:	3201      	adds	r2, #1
 8002812:	9300      	str	r3, [sp, #0]
 8002814:	4b17      	ldr	r3, [pc, #92]	; (8002874 <msg1_execute+0x74>)
 8002816:	f7fe ffd3 	bl	80017c0 <chThdCreateStatic>
 800281a:	4b17      	ldr	r3, [pc, #92]	; (8002878 <msg1_execute+0x78>)
 800281c:	6018      	str	r0, [r3, #0]
 800281e:	f7ff ffbf 	bl	80027a0 <chMsgWait>
 8002822:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8002824:	b672      	cpsid	i
 8002826:	0021      	movs	r1, r4
 8002828:	f7fe ff0a 	bl	8001640 <chSchWakeupS>
 800282c:	b662      	cpsie	i
 800282e:	b2e0      	uxtb	r0, r4
 8002830:	f7fd ffc6 	bl	80007c0 <test_emit_token>
 8002834:	f7ff ffb4 	bl	80027a0 <chMsgWait>
 8002838:	6b04      	ldr	r4, [r0, #48]	; 0x30
 800283a:	b672      	cpsid	i
 800283c:	0021      	movs	r1, r4
 800283e:	f7fe feff 	bl	8001640 <chSchWakeupS>
 8002842:	b662      	cpsie	i
 8002844:	b2e0      	uxtb	r0, r4
 8002846:	f7fd ffbb 	bl	80007c0 <test_emit_token>
 800284a:	f7ff ffa9 	bl	80027a0 <chMsgWait>
 800284e:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8002850:	b672      	cpsid	i
 8002852:	0021      	movs	r1, r4
 8002854:	f7fe fef4 	bl	8001640 <chSchWakeupS>
 8002858:	b662      	cpsie	i
 800285a:	b2e0      	uxtb	r0, r4
 800285c:	f7fd ffb0 	bl	80007c0 <test_emit_token>
 8002860:	4906      	ldr	r1, [pc, #24]	; (800287c <msg1_execute+0x7c>)
 8002862:	2001      	movs	r0, #1
 8002864:	f7fd ff6c 	bl	8000740 <_test_assert_sequence>
 8002868:	b002      	add	sp, #8
 800286a:	bd10      	pop	{r4, pc}
 800286c:	20000738 	.word	0x20000738
 8002870:	20000938 	.word	0x20000938
 8002874:	080028f1 	.word	0x080028f1
 8002878:	20000fcc 	.word	0x20000fcc
 800287c:	080057b0 	.word	0x080057b0

08002880 <chMsgSend>:
 8002880:	4b0c      	ldr	r3, [pc, #48]	; (80028b4 <chMsgSend+0x34>)
 8002882:	b510      	push	{r4, lr}
 8002884:	699c      	ldr	r4, [r3, #24]
 8002886:	b672      	cpsid	i
 8002888:	0003      	movs	r3, r0
 800288a:	3328      	adds	r3, #40	; 0x28
 800288c:	6223      	str	r3, [r4, #32]
 800288e:	6023      	str	r3, [r4, #0]
 8002890:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002892:	6321      	str	r1, [r4, #48]	; 0x30
 8002894:	6063      	str	r3, [r4, #4]
 8002896:	601c      	str	r4, [r3, #0]
 8002898:	7f03      	ldrb	r3, [r0, #28]
 800289a:	62c4      	str	r4, [r0, #44]	; 0x2c
 800289c:	2b0e      	cmp	r3, #14
 800289e:	d005      	beq.n	80028ac <chMsgSend+0x2c>
 80028a0:	200c      	movs	r0, #12
 80028a2:	f7fe ffbd 	bl	8001820 <chSchGoSleepS>
 80028a6:	6a20      	ldr	r0, [r4, #32]
 80028a8:	b662      	cpsie	i
 80028aa:	bd10      	pop	{r4, pc}
 80028ac:	f7fe f950 	bl	8000b50 <chSchReadyI>
 80028b0:	e7f6      	b.n	80028a0 <chMsgSend+0x20>
 80028b2:	46c0      	nop			; (mov r8, r8)
 80028b4:	20000738 	.word	0x20000738
	...

080028c0 <msg_loop_test>:
 80028c0:	b570      	push	{r4, r5, r6, lr}
 80028c2:	2400      	movs	r4, #0
 80028c4:	0005      	movs	r5, r0
 80028c6:	f7ff fe33 	bl	8002530 <test_wait_tick>
 80028ca:	f7fe fb21 	bl	8000f10 <test_start_timer.constprop.1>
 80028ce:	4e07      	ldr	r6, [pc, #28]	; (80028ec <msg_loop_test+0x2c>)
 80028d0:	2101      	movs	r1, #1
 80028d2:	0028      	movs	r0, r5
 80028d4:	f7ff ffd4 	bl	8002880 <chMsgSend>
 80028d8:	7833      	ldrb	r3, [r6, #0]
 80028da:	3401      	adds	r4, #1
 80028dc:	2b00      	cmp	r3, #0
 80028de:	d0f7      	beq.n	80028d0 <msg_loop_test+0x10>
 80028e0:	0028      	movs	r0, r5
 80028e2:	2100      	movs	r1, #0
 80028e4:	f7ff ffcc 	bl	8002880 <chMsgSend>
 80028e8:	0020      	movs	r0, r4
 80028ea:	bd70      	pop	{r4, r5, r6, pc}
 80028ec:	20000fc8 	.word	0x20000fc8

080028f0 <thread.lto_priv.58>:
 80028f0:	b510      	push	{r4, lr}
 80028f2:	0004      	movs	r4, r0
 80028f4:	2141      	movs	r1, #65	; 0x41
 80028f6:	f7ff ffc3 	bl	8002880 <chMsgSend>
 80028fa:	2142      	movs	r1, #66	; 0x42
 80028fc:	0020      	movs	r0, r4
 80028fe:	f7ff ffbf 	bl	8002880 <chMsgSend>
 8002902:	2143      	movs	r1, #67	; 0x43
 8002904:	0020      	movs	r0, r4
 8002906:	f7ff ffbb 	bl	8002880 <chMsgSend>
 800290a:	bd10      	pop	{r4, pc}
 800290c:	0000      	movs	r0, r0
	...

08002910 <chMtxLockS>:
 8002910:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002912:	0005      	movs	r5, r0
 8002914:	4b35      	ldr	r3, [pc, #212]	; (80029ec <chMtxLockS+0xdc>)
 8002916:	6880      	ldr	r0, [r0, #8]
 8002918:	699c      	ldr	r4, [r3, #24]
 800291a:	2800      	cmp	r0, #0
 800291c:	d03d      	beq.n	800299a <chMtxLockS+0x8a>
 800291e:	68a2      	ldr	r2, [r4, #8]
 8002920:	6883      	ldr	r3, [r0, #8]
 8002922:	429a      	cmp	r2, r3
 8002924:	d907      	bls.n	8002936 <chMtxLockS+0x26>
 8002926:	7f03      	ldrb	r3, [r0, #28]
 8002928:	6082      	str	r2, [r0, #8]
 800292a:	2b06      	cmp	r3, #6
 800292c:	d03a      	beq.n	80029a4 <chMtxLockS+0x94>
 800292e:	2b07      	cmp	r3, #7
 8002930:	d015      	beq.n	800295e <chMtxLockS+0x4e>
 8002932:	2b00      	cmp	r3, #0
 8002934:	d027      	beq.n	8002986 <chMtxLockS+0x76>
 8002936:	002a      	movs	r2, r5
 8002938:	002b      	movs	r3, r5
 800293a:	e003      	b.n	8002944 <chMtxLockS+0x34>
 800293c:	6899      	ldr	r1, [r3, #8]
 800293e:	68a0      	ldr	r0, [r4, #8]
 8002940:	4281      	cmp	r1, r0
 8002942:	d328      	bcc.n	8002996 <chMtxLockS+0x86>
 8002944:	681b      	ldr	r3, [r3, #0]
 8002946:	429d      	cmp	r5, r3
 8002948:	d1f8      	bne.n	800293c <chMtxLockS+0x2c>
 800294a:	6853      	ldr	r3, [r2, #4]
 800294c:	6022      	str	r2, [r4, #0]
 800294e:	6063      	str	r3, [r4, #4]
 8002950:	2006      	movs	r0, #6
 8002952:	601c      	str	r4, [r3, #0]
 8002954:	6054      	str	r4, [r2, #4]
 8002956:	6225      	str	r5, [r4, #32]
 8002958:	f7fe ff62 	bl	8001820 <chSchGoSleepS>
 800295c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800295e:	6843      	ldr	r3, [r0, #4]
 8002960:	6801      	ldr	r1, [r0, #0]
 8002962:	6019      	str	r1, [r3, #0]
 8002964:	6801      	ldr	r1, [r0, #0]
 8002966:	604b      	str	r3, [r1, #4]
 8002968:	6a01      	ldr	r1, [r0, #32]
 800296a:	000b      	movs	r3, r1
 800296c:	e002      	b.n	8002974 <chMtxLockS+0x64>
 800296e:	689e      	ldr	r6, [r3, #8]
 8002970:	4296      	cmp	r6, r2
 8002972:	d331      	bcc.n	80029d8 <chMtxLockS+0xc8>
 8002974:	681b      	ldr	r3, [r3, #0]
 8002976:	4299      	cmp	r1, r3
 8002978:	d1f9      	bne.n	800296e <chMtxLockS+0x5e>
 800297a:	684b      	ldr	r3, [r1, #4]
 800297c:	6001      	str	r1, [r0, #0]
 800297e:	6043      	str	r3, [r0, #4]
 8002980:	6018      	str	r0, [r3, #0]
 8002982:	6048      	str	r0, [r1, #4]
 8002984:	e7d7      	b.n	8002936 <chMtxLockS+0x26>
 8002986:	6843      	ldr	r3, [r0, #4]
 8002988:	6802      	ldr	r2, [r0, #0]
 800298a:	601a      	str	r2, [r3, #0]
 800298c:	6802      	ldr	r2, [r0, #0]
 800298e:	6053      	str	r3, [r2, #4]
 8002990:	f7fe f8de 	bl	8000b50 <chSchReadyI>
 8002994:	e7cf      	b.n	8002936 <chMtxLockS+0x26>
 8002996:	001a      	movs	r2, r3
 8002998:	e7d7      	b.n	800294a <chMtxLockS+0x3a>
 800299a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800299c:	60ac      	str	r4, [r5, #8]
 800299e:	60eb      	str	r3, [r5, #12]
 80029a0:	63a5      	str	r5, [r4, #56]	; 0x38
 80029a2:	e7db      	b.n	800295c <chMtxLockS+0x4c>
 80029a4:	6843      	ldr	r3, [r0, #4]
 80029a6:	6801      	ldr	r1, [r0, #0]
 80029a8:	6019      	str	r1, [r3, #0]
 80029aa:	6801      	ldr	r1, [r0, #0]
 80029ac:	604b      	str	r3, [r1, #4]
 80029ae:	6a01      	ldr	r1, [r0, #32]
 80029b0:	000e      	movs	r6, r1
 80029b2:	000b      	movs	r3, r1
 80029b4:	e002      	b.n	80029bc <chMtxLockS+0xac>
 80029b6:	689f      	ldr	r7, [r3, #8]
 80029b8:	4297      	cmp	r7, r2
 80029ba:	d314      	bcc.n	80029e6 <chMtxLockS+0xd6>
 80029bc:	681b      	ldr	r3, [r3, #0]
 80029be:	4299      	cmp	r1, r3
 80029c0:	d1f9      	bne.n	80029b6 <chMtxLockS+0xa6>
 80029c2:	6873      	ldr	r3, [r6, #4]
 80029c4:	6006      	str	r6, [r0, #0]
 80029c6:	6043      	str	r3, [r0, #4]
 80029c8:	6018      	str	r0, [r3, #0]
 80029ca:	6070      	str	r0, [r6, #4]
 80029cc:	6888      	ldr	r0, [r1, #8]
 80029ce:	68a2      	ldr	r2, [r4, #8]
 80029d0:	6883      	ldr	r3, [r0, #8]
 80029d2:	4293      	cmp	r3, r2
 80029d4:	d3a7      	bcc.n	8002926 <chMtxLockS+0x16>
 80029d6:	e7ae      	b.n	8002936 <chMtxLockS+0x26>
 80029d8:	0019      	movs	r1, r3
 80029da:	684b      	ldr	r3, [r1, #4]
 80029dc:	6001      	str	r1, [r0, #0]
 80029de:	6043      	str	r3, [r0, #4]
 80029e0:	6018      	str	r0, [r3, #0]
 80029e2:	6048      	str	r0, [r1, #4]
 80029e4:	e7a7      	b.n	8002936 <chMtxLockS+0x26>
 80029e6:	001e      	movs	r6, r3
 80029e8:	e7eb      	b.n	80029c2 <chMtxLockS+0xb2>
 80029ea:	46c0      	nop			; (mov r8, r8)
 80029ec:	20000738 	.word	0x20000738

080029f0 <chMtxLock>:
 80029f0:	b510      	push	{r4, lr}
 80029f2:	b672      	cpsid	i
 80029f4:	f7ff ff8c 	bl	8002910 <chMtxLockS>
 80029f8:	b662      	cpsie	i
 80029fa:	bd10      	pop	{r4, pc}
 80029fc:	0000      	movs	r0, r0
	...

08002a00 <bmk12_execute>:
 8002a00:	b570      	push	{r4, r5, r6, lr}
 8002a02:	2500      	movs	r5, #0
 8002a04:	f7ff fd94 	bl	8002530 <test_wait_tick>
 8002a08:	f7fe fa82 	bl	8000f10 <test_start_timer.constprop.1>
 8002a0c:	4c13      	ldr	r4, [pc, #76]	; (8002a5c <bmk12_execute+0x5c>)
 8002a0e:	4e14      	ldr	r6, [pc, #80]	; (8002a60 <bmk12_execute+0x60>)
 8002a10:	0020      	movs	r0, r4
 8002a12:	f7ff ffed 	bl	80029f0 <chMtxLock>
 8002a16:	0020      	movs	r0, r4
 8002a18:	f7fe fe8a 	bl	8001730 <chMtxUnlock>
 8002a1c:	0020      	movs	r0, r4
 8002a1e:	f7ff ffe7 	bl	80029f0 <chMtxLock>
 8002a22:	0020      	movs	r0, r4
 8002a24:	f7fe fe84 	bl	8001730 <chMtxUnlock>
 8002a28:	0020      	movs	r0, r4
 8002a2a:	f7ff ffe1 	bl	80029f0 <chMtxLock>
 8002a2e:	0020      	movs	r0, r4
 8002a30:	f7fe fe7e 	bl	8001730 <chMtxUnlock>
 8002a34:	0020      	movs	r0, r4
 8002a36:	f7ff ffdb 	bl	80029f0 <chMtxLock>
 8002a3a:	0020      	movs	r0, r4
 8002a3c:	f7fe fe78 	bl	8001730 <chMtxUnlock>
 8002a40:	7833      	ldrb	r3, [r6, #0]
 8002a42:	3501      	adds	r5, #1
 8002a44:	2b00      	cmp	r3, #0
 8002a46:	d0e3      	beq.n	8002a10 <bmk12_execute+0x10>
 8002a48:	4806      	ldr	r0, [pc, #24]	; (8002a64 <bmk12_execute+0x64>)
 8002a4a:	f7fd ff11 	bl	8000870 <test_print>
 8002a4e:	00a8      	lsls	r0, r5, #2
 8002a50:	f7fd fe16 	bl	8000680 <test_printn>
 8002a54:	4804      	ldr	r0, [pc, #16]	; (8002a68 <bmk12_execute+0x68>)
 8002a56:	f7fd feeb 	bl	8000830 <test_println>
 8002a5a:	bd70      	pop	{r4, r5, r6, pc}
 8002a5c:	20000914 	.word	0x20000914
 8002a60:	20000fc8 	.word	0x20000fc8
 8002a64:	08005600 	.word	0x08005600
 8002a68:	08005630 	.word	0x08005630
 8002a6c:	00000000 	.word	0x00000000

08002a70 <thread11>:
 8002a70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a72:	46c6      	mov	lr, r8
 8002a74:	4d1d      	ldr	r5, [pc, #116]	; (8002aec <thread11+0x7c>)
 8002a76:	b500      	push	{lr}
 8002a78:	4680      	mov	r8, r0
 8002a7a:	0028      	movs	r0, r5
 8002a7c:	f7ff ffb8 	bl	80029f0 <chMtxLock>
 8002a80:	4e1b      	ldr	r6, [pc, #108]	; (8002af0 <thread11+0x80>)
 8002a82:	0030      	movs	r0, r6
 8002a84:	f7ff ffb4 	bl	80029f0 <chMtxLock>
 8002a88:	b672      	cpsid	i
 8002a8a:	4c1a      	ldr	r4, [pc, #104]	; (8002af4 <thread11+0x84>)
 8002a8c:	69a3      	ldr	r3, [r4, #24]
 8002a8e:	6b9f      	ldr	r7, [r3, #56]	; 0x38
 8002a90:	0038      	movs	r0, r7
 8002a92:	f7fe f905 	bl	8000ca0 <chMtxUnlockS>
 8002a96:	4918      	ldr	r1, [pc, #96]	; (8002af8 <thread11+0x88>)
 8002a98:	69a2      	ldr	r2, [r4, #24]
 8002a9a:	000b      	movs	r3, r1
 8002a9c:	6211      	str	r1, [r2, #32]
 8002a9e:	e004      	b.n	8002aaa <thread11+0x3a>
 8002aa0:	6898      	ldr	r0, [r3, #8]
 8002aa2:	4684      	mov	ip, r0
 8002aa4:	6890      	ldr	r0, [r2, #8]
 8002aa6:	4584      	cmp	ip, r0
 8002aa8:	d302      	bcc.n	8002ab0 <thread11+0x40>
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	428b      	cmp	r3, r1
 8002aae:	d1f7      	bne.n	8002aa0 <thread11+0x30>
 8002ab0:	6859      	ldr	r1, [r3, #4]
 8002ab2:	6013      	str	r3, [r2, #0]
 8002ab4:	6051      	str	r1, [r2, #4]
 8002ab6:	2007      	movs	r0, #7
 8002ab8:	600a      	str	r2, [r1, #0]
 8002aba:	605a      	str	r2, [r3, #4]
 8002abc:	f7fe feb0 	bl	8001820 <chSchGoSleepS>
 8002ac0:	69a3      	ldr	r3, [r4, #24]
 8002ac2:	6a1b      	ldr	r3, [r3, #32]
 8002ac4:	3301      	adds	r3, #1
 8002ac6:	d002      	beq.n	8002ace <thread11+0x5e>
 8002ac8:	0038      	movs	r0, r7
 8002aca:	f7ff ff21 	bl	8002910 <chMtxLockS>
 8002ace:	b662      	cpsie	i
 8002ad0:	4643      	mov	r3, r8
 8002ad2:	7818      	ldrb	r0, [r3, #0]
 8002ad4:	f7fd fe74 	bl	80007c0 <test_emit_token>
 8002ad8:	0030      	movs	r0, r6
 8002ada:	f7fe fe29 	bl	8001730 <chMtxUnlock>
 8002ade:	0028      	movs	r0, r5
 8002ae0:	f7fe fe26 	bl	8001730 <chMtxUnlock>
 8002ae4:	bc04      	pop	{r2}
 8002ae6:	4690      	mov	r8, r2
 8002ae8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002aea:	46c0      	nop			; (mov r8, r8)
 8002aec:	20000644 	.word	0x20000644
 8002af0:	20000634 	.word	0x20000634
 8002af4:	20000738 	.word	0x20000738
 8002af8:	20000600 	.word	0x20000600
 8002afc:	00000000 	.word	0x00000000

08002b00 <thread10>:
 8002b00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b02:	4d15      	ldr	r5, [pc, #84]	; (8002b58 <thread10+0x58>)
 8002b04:	0007      	movs	r7, r0
 8002b06:	0028      	movs	r0, r5
 8002b08:	f7ff ff72 	bl	80029f0 <chMtxLock>
 8002b0c:	b672      	cpsid	i
 8002b0e:	4b13      	ldr	r3, [pc, #76]	; (8002b5c <thread10+0x5c>)
 8002b10:	699c      	ldr	r4, [r3, #24]
 8002b12:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8002b14:	0030      	movs	r0, r6
 8002b16:	f7fe f8c3 	bl	8000ca0 <chMtxUnlockS>
 8002b1a:	4a11      	ldr	r2, [pc, #68]	; (8002b60 <thread10+0x60>)
 8002b1c:	6222      	str	r2, [r4, #32]
 8002b1e:	0013      	movs	r3, r2
 8002b20:	e003      	b.n	8002b2a <thread10+0x2a>
 8002b22:	6899      	ldr	r1, [r3, #8]
 8002b24:	68a0      	ldr	r0, [r4, #8]
 8002b26:	4281      	cmp	r1, r0
 8002b28:	d302      	bcc.n	8002b30 <thread10+0x30>
 8002b2a:	681b      	ldr	r3, [r3, #0]
 8002b2c:	4293      	cmp	r3, r2
 8002b2e:	d1f8      	bne.n	8002b22 <thread10+0x22>
 8002b30:	685a      	ldr	r2, [r3, #4]
 8002b32:	6023      	str	r3, [r4, #0]
 8002b34:	6062      	str	r2, [r4, #4]
 8002b36:	2007      	movs	r0, #7
 8002b38:	6014      	str	r4, [r2, #0]
 8002b3a:	605c      	str	r4, [r3, #4]
 8002b3c:	f7fe fe70 	bl	8001820 <chSchGoSleepS>
 8002b40:	0030      	movs	r0, r6
 8002b42:	f7ff fee5 	bl	8002910 <chMtxLockS>
 8002b46:	b662      	cpsie	i
 8002b48:	7838      	ldrb	r0, [r7, #0]
 8002b4a:	f7fd fe39 	bl	80007c0 <test_emit_token>
 8002b4e:	0028      	movs	r0, r5
 8002b50:	f7fe fdee 	bl	8001730 <chMtxUnlock>
 8002b54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002b56:	46c0      	nop			; (mov r8, r8)
 8002b58:	20000634 	.word	0x20000634
 8002b5c:	20000738 	.word	0x20000738
 8002b60:	20000600 	.word	0x20000600
	...

08002b70 <thread12>:
 8002b70:	b570      	push	{r4, r5, r6, lr}
 8002b72:	0005      	movs	r5, r0
 8002b74:	4c05      	ldr	r4, [pc, #20]	; (8002b8c <thread12+0x1c>)
 8002b76:	0020      	movs	r0, r4
 8002b78:	f7ff ff3a 	bl	80029f0 <chMtxLock>
 8002b7c:	7828      	ldrb	r0, [r5, #0]
 8002b7e:	f7fd fe1f 	bl	80007c0 <test_emit_token>
 8002b82:	0020      	movs	r0, r4
 8002b84:	f7fe fdd4 	bl	8001730 <chMtxUnlock>
 8002b88:	bd70      	pop	{r4, r5, r6, pc}
 8002b8a:	46c0      	nop			; (mov r8, r8)
 8002b8c:	20000644 	.word	0x20000644

08002b90 <mtx5_execute>:
 8002b90:	b570      	push	{r4, r5, r6, lr}
 8002b92:	4d31      	ldr	r5, [pc, #196]	; (8002c58 <mtx5_execute+0xc8>)
 8002b94:	69ab      	ldr	r3, [r5, #24]
 8002b96:	689e      	ldr	r6, [r3, #8]
 8002b98:	b672      	cpsid	i
 8002b9a:	4c30      	ldr	r4, [pc, #192]	; (8002c5c <mtx5_execute+0xcc>)
 8002b9c:	2100      	movs	r1, #0
 8002b9e:	68a3      	ldr	r3, [r4, #8]
 8002ba0:	2b00      	cmp	r3, #0
 8002ba2:	d04c      	beq.n	8002c3e <mtx5_execute+0xae>
 8002ba4:	b662      	cpsie	i
 8002ba6:	2001      	movs	r0, #1
 8002ba8:	f7fd fdf2 	bl	8000790 <_test_assert>
 8002bac:	2800      	cmp	r0, #0
 8002bae:	d000      	beq.n	8002bb2 <mtx5_execute+0x22>
 8002bb0:	bd70      	pop	{r4, r5, r6, pc}
 8002bb2:	b672      	cpsid	i
 8002bb4:	68a3      	ldr	r3, [r4, #8]
 8002bb6:	2b00      	cmp	r3, #0
 8002bb8:	d048      	beq.n	8002c4c <mtx5_execute+0xbc>
 8002bba:	2001      	movs	r0, #1
 8002bbc:	b662      	cpsie	i
 8002bbe:	0001      	movs	r1, r0
 8002bc0:	2002      	movs	r0, #2
 8002bc2:	f7fd fde5 	bl	8000790 <_test_assert>
 8002bc6:	2800      	cmp	r0, #0
 8002bc8:	d1f2      	bne.n	8002bb0 <mtx5_execute+0x20>
 8002bca:	b672      	cpsid	i
 8002bcc:	0020      	movs	r0, r4
 8002bce:	f7fe f867 	bl	8000ca0 <chMtxUnlockS>
 8002bd2:	b662      	cpsie	i
 8002bd4:	6823      	ldr	r3, [r4, #0]
 8002bd6:	2003      	movs	r0, #3
 8002bd8:	1b19      	subs	r1, r3, r4
 8002bda:	424b      	negs	r3, r1
 8002bdc:	4159      	adcs	r1, r3
 8002bde:	b2c9      	uxtb	r1, r1
 8002be0:	f7fd fdd6 	bl	8000790 <_test_assert>
 8002be4:	2800      	cmp	r0, #0
 8002be6:	d1e3      	bne.n	8002bb0 <mtx5_execute+0x20>
 8002be8:	68a1      	ldr	r1, [r4, #8]
 8002bea:	3004      	adds	r0, #4
 8002bec:	424b      	negs	r3, r1
 8002bee:	4159      	adcs	r1, r3
 8002bf0:	b2c9      	uxtb	r1, r1
 8002bf2:	f7fd fdcd 	bl	8000790 <_test_assert>
 8002bf6:	2800      	cmp	r0, #0
 8002bf8:	d1da      	bne.n	8002bb0 <mtx5_execute+0x20>
 8002bfa:	69ab      	ldr	r3, [r5, #24]
 8002bfc:	3005      	adds	r0, #5
 8002bfe:	6899      	ldr	r1, [r3, #8]
 8002c00:	1b89      	subs	r1, r1, r6
 8002c02:	424e      	negs	r6, r1
 8002c04:	4171      	adcs	r1, r6
 8002c06:	b2c9      	uxtb	r1, r1
 8002c08:	f7fd fdc2 	bl	8000790 <_test_assert>
 8002c0c:	2800      	cmp	r0, #0
 8002c0e:	d1cf      	bne.n	8002bb0 <mtx5_execute+0x20>
 8002c10:	0020      	movs	r0, r4
 8002c12:	f7ff feed 	bl	80029f0 <chMtxLock>
 8002c16:	f7fe fc1b 	bl	8001450 <chMtxUnlockAll>
 8002c1a:	6823      	ldr	r3, [r4, #0]
 8002c1c:	2006      	movs	r0, #6
 8002c1e:	1b19      	subs	r1, r3, r4
 8002c20:	424b      	negs	r3, r1
 8002c22:	4159      	adcs	r1, r3
 8002c24:	b2c9      	uxtb	r1, r1
 8002c26:	f7fd fdb3 	bl	8000790 <_test_assert>
 8002c2a:	2800      	cmp	r0, #0
 8002c2c:	d1c0      	bne.n	8002bb0 <mtx5_execute+0x20>
 8002c2e:	68a1      	ldr	r1, [r4, #8]
 8002c30:	3007      	adds	r0, #7
 8002c32:	424b      	negs	r3, r1
 8002c34:	4159      	adcs	r1, r3
 8002c36:	b2c9      	uxtb	r1, r1
 8002c38:	f7fd fdaa 	bl	8000790 <_test_assert>
 8002c3c:	e7b8      	b.n	8002bb0 <mtx5_execute+0x20>
 8002c3e:	69ab      	ldr	r3, [r5, #24]
 8002c40:	3101      	adds	r1, #1
 8002c42:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002c44:	60a3      	str	r3, [r4, #8]
 8002c46:	60e2      	str	r2, [r4, #12]
 8002c48:	639c      	str	r4, [r3, #56]	; 0x38
 8002c4a:	e7ab      	b.n	8002ba4 <mtx5_execute+0x14>
 8002c4c:	69ab      	ldr	r3, [r5, #24]
 8002c4e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002c50:	60a3      	str	r3, [r4, #8]
 8002c52:	60e2      	str	r2, [r4, #12]
 8002c54:	639c      	str	r4, [r3, #56]	; 0x38
 8002c56:	e7b1      	b.n	8002bbc <mtx5_execute+0x2c>
 8002c58:	20000738 	.word	0x20000738
 8002c5c:	20000634 	.word	0x20000634

08002c60 <thread4a>:
 8002c60:	b510      	push	{r4, lr}
 8002c62:	2032      	movs	r0, #50	; 0x32
 8002c64:	f7ff fbbc 	bl	80023e0 <chThdSleep>
 8002c68:	4c03      	ldr	r4, [pc, #12]	; (8002c78 <thread4a+0x18>)
 8002c6a:	0020      	movs	r0, r4
 8002c6c:	f7ff fec0 	bl	80029f0 <chMtxLock>
 8002c70:	0020      	movs	r0, r4
 8002c72:	f7fe fd5d 	bl	8001730 <chMtxUnlock>
 8002c76:	bd10      	pop	{r4, pc}
 8002c78:	20000644 	.word	0x20000644
 8002c7c:	00000000 	.word	0x00000000

08002c80 <thread4b>:
 8002c80:	b510      	push	{r4, lr}
 8002c82:	2096      	movs	r0, #150	; 0x96
 8002c84:	f7ff fbac 	bl	80023e0 <chThdSleep>
 8002c88:	4c03      	ldr	r4, [pc, #12]	; (8002c98 <thread4b+0x18>)
 8002c8a:	0020      	movs	r0, r4
 8002c8c:	f7ff feb0 	bl	80029f0 <chMtxLock>
 8002c90:	0020      	movs	r0, r4
 8002c92:	f7fe fd4d 	bl	8001730 <chMtxUnlock>
 8002c96:	bd10      	pop	{r4, pc}
 8002c98:	20000634 	.word	0x20000634
 8002c9c:	00000000 	.word	0x00000000

08002ca0 <thread1.lto_priv.67>:
 8002ca0:	b570      	push	{r4, r5, r6, lr}
 8002ca2:	0005      	movs	r5, r0
 8002ca4:	4c05      	ldr	r4, [pc, #20]	; (8002cbc <thread1.lto_priv.67+0x1c>)
 8002ca6:	0020      	movs	r0, r4
 8002ca8:	f7ff fea2 	bl	80029f0 <chMtxLock>
 8002cac:	7828      	ldrb	r0, [r5, #0]
 8002cae:	f7fd fd87 	bl	80007c0 <test_emit_token>
 8002cb2:	0020      	movs	r0, r4
 8002cb4:	f7fe fd3c 	bl	8001730 <chMtxUnlock>
 8002cb8:	bd70      	pop	{r4, r5, r6, pc}
 8002cba:	46c0      	nop			; (mov r8, r8)
 8002cbc:	20000634 	.word	0x20000634

08002cc0 <chHeapStatus>:
 8002cc0:	b570      	push	{r4, r5, r6, lr}
 8002cc2:	0004      	movs	r4, r0
 8002cc4:	000e      	movs	r6, r1
 8002cc6:	2800      	cmp	r0, #0
 8002cc8:	d016      	beq.n	8002cf8 <chHeapStatus+0x38>
 8002cca:	0025      	movs	r5, r4
 8002ccc:	3510      	adds	r5, #16
 8002cce:	0028      	movs	r0, r5
 8002cd0:	f7ff fe8e 	bl	80029f0 <chMtxLock>
 8002cd4:	68a3      	ldr	r3, [r4, #8]
 8002cd6:	2200      	movs	r2, #0
 8002cd8:	2400      	movs	r4, #0
 8002cda:	2b00      	cmp	r3, #0
 8002cdc:	d006      	beq.n	8002cec <chHeapStatus+0x2c>
 8002cde:	6859      	ldr	r1, [r3, #4]
 8002ce0:	681b      	ldr	r3, [r3, #0]
 8002ce2:	468c      	mov	ip, r1
 8002ce4:	3401      	adds	r4, #1
 8002ce6:	4462      	add	r2, ip
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	d1f8      	bne.n	8002cde <chHeapStatus+0x1e>
 8002cec:	0028      	movs	r0, r5
 8002cee:	6032      	str	r2, [r6, #0]
 8002cf0:	f7fe fd1e 	bl	8001730 <chMtxUnlock>
 8002cf4:	0020      	movs	r0, r4
 8002cf6:	bd70      	pop	{r4, r5, r6, pc}
 8002cf8:	4c00      	ldr	r4, [pc, #0]	; (8002cfc <chHeapStatus+0x3c>)
 8002cfa:	e7e6      	b.n	8002cca <chHeapStatus+0xa>
 8002cfc:	20000888 	.word	0x20000888

08002d00 <chHeapFree>:
 8002d00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002d02:	0004      	movs	r4, r0
 8002d04:	3c08      	subs	r4, #8
 8002d06:	6826      	ldr	r6, [r4, #0]
 8002d08:	0007      	movs	r7, r0
 8002d0a:	0035      	movs	r5, r6
 8002d0c:	3610      	adds	r6, #16
 8002d0e:	3508      	adds	r5, #8
 8002d10:	0030      	movs	r0, r6
 8002d12:	f7ff fe6d 	bl	80029f0 <chMtxLock>
 8002d16:	002b      	movs	r3, r5
 8002d18:	681a      	ldr	r2, [r3, #0]
 8002d1a:	42ab      	cmp	r3, r5
 8002d1c:	d001      	beq.n	8002d22 <chHeapFree+0x22>
 8002d1e:	42a3      	cmp	r3, r4
 8002d20:	d203      	bcs.n	8002d2a <chHeapFree+0x2a>
 8002d22:	2a00      	cmp	r2, #0
 8002d24:	d003      	beq.n	8002d2e <chHeapFree+0x2e>
 8002d26:	4294      	cmp	r4, r2
 8002d28:	d301      	bcc.n	8002d2e <chHeapFree+0x2e>
 8002d2a:	0013      	movs	r3, r2
 8002d2c:	e7f4      	b.n	8002d18 <chHeapFree+0x18>
 8002d2e:	6022      	str	r2, [r4, #0]
 8002d30:	601c      	str	r4, [r3, #0]
 8002d32:	6862      	ldr	r2, [r4, #4]
 8002d34:	6821      	ldr	r1, [r4, #0]
 8002d36:	18bf      	adds	r7, r7, r2
 8002d38:	428f      	cmp	r7, r1
 8002d3a:	d009      	beq.n	8002d50 <chHeapFree+0x50>
 8002d3c:	6859      	ldr	r1, [r3, #4]
 8002d3e:	000a      	movs	r2, r1
 8002d40:	3208      	adds	r2, #8
 8002d42:	189a      	adds	r2, r3, r2
 8002d44:	4294      	cmp	r4, r2
 8002d46:	d010      	beq.n	8002d6a <chHeapFree+0x6a>
 8002d48:	0030      	movs	r0, r6
 8002d4a:	f7fe fcf1 	bl	8001730 <chMtxUnlock>
 8002d4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002d50:	6879      	ldr	r1, [r7, #4]
 8002d52:	3208      	adds	r2, #8
 8002d54:	468c      	mov	ip, r1
 8002d56:	4462      	add	r2, ip
 8002d58:	6062      	str	r2, [r4, #4]
 8002d5a:	6859      	ldr	r1, [r3, #4]
 8002d5c:	683a      	ldr	r2, [r7, #0]
 8002d5e:	6022      	str	r2, [r4, #0]
 8002d60:	000a      	movs	r2, r1
 8002d62:	3208      	adds	r2, #8
 8002d64:	189a      	adds	r2, r3, r2
 8002d66:	4294      	cmp	r4, r2
 8002d68:	d1ee      	bne.n	8002d48 <chHeapFree+0x48>
 8002d6a:	6862      	ldr	r2, [r4, #4]
 8002d6c:	3208      	adds	r2, #8
 8002d6e:	1851      	adds	r1, r2, r1
 8002d70:	6822      	ldr	r2, [r4, #0]
 8002d72:	6059      	str	r1, [r3, #4]
 8002d74:	601a      	str	r2, [r3, #0]
 8002d76:	e7e7      	b.n	8002d48 <chHeapFree+0x48>
	...

08002d80 <chThdRelease>:
 8002d80:	b510      	push	{r4, lr}
 8002d82:	b672      	cpsid	i
 8002d84:	7f83      	ldrb	r3, [r0, #30]
 8002d86:	3b01      	subs	r3, #1
 8002d88:	b2db      	uxtb	r3, r3
 8002d8a:	7783      	strb	r3, [r0, #30]
 8002d8c:	b662      	cpsie	i
 8002d8e:	2b00      	cmp	r3, #0
 8002d90:	d102      	bne.n	8002d98 <chThdRelease+0x18>
 8002d92:	7f03      	ldrb	r3, [r0, #28]
 8002d94:	2b0f      	cmp	r3, #15
 8002d96:	d000      	beq.n	8002d9a <chThdRelease+0x1a>
 8002d98:	bd10      	pop	{r4, pc}
 8002d9a:	7f42      	ldrb	r2, [r0, #29]
 8002d9c:	3b0c      	subs	r3, #12
 8002d9e:	4013      	ands	r3, r2
 8002da0:	2b01      	cmp	r3, #1
 8002da2:	d00d      	beq.n	8002dc0 <chThdRelease+0x40>
 8002da4:	2b02      	cmp	r3, #2
 8002da6:	d1f7      	bne.n	8002d98 <chThdRelease+0x18>
 8002da8:	6943      	ldr	r3, [r0, #20]
 8002daa:	6902      	ldr	r2, [r0, #16]
 8002dac:	611a      	str	r2, [r3, #16]
 8002dae:	6902      	ldr	r2, [r0, #16]
 8002db0:	6153      	str	r3, [r2, #20]
 8002db2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8002db4:	b672      	cpsid	i
 8002db6:	681a      	ldr	r2, [r3, #0]
 8002db8:	6002      	str	r2, [r0, #0]
 8002dba:	6018      	str	r0, [r3, #0]
 8002dbc:	b662      	cpsie	i
 8002dbe:	e7eb      	b.n	8002d98 <chThdRelease+0x18>
 8002dc0:	6902      	ldr	r2, [r0, #16]
 8002dc2:	6943      	ldr	r3, [r0, #20]
 8002dc4:	611a      	str	r2, [r3, #16]
 8002dc6:	6902      	ldr	r2, [r0, #16]
 8002dc8:	6153      	str	r3, [r2, #20]
 8002dca:	f7ff ff99 	bl	8002d00 <chHeapFree>
 8002dce:	e7e3      	b.n	8002d98 <chThdRelease+0x18>

08002dd0 <regfind>:
 8002dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002dd2:	0007      	movs	r7, r0
 8002dd4:	b672      	cpsid	i
 8002dd6:	4e13      	ldr	r6, [pc, #76]	; (8002e24 <regfind+0x54>)
 8002dd8:	6930      	ldr	r0, [r6, #16]
 8002dda:	7f83      	ldrb	r3, [r0, #30]
 8002ddc:	3301      	adds	r3, #1
 8002dde:	7783      	strb	r3, [r0, #30]
 8002de0:	b662      	cpsie	i
 8002de2:	1a3d      	subs	r5, r7, r0
 8002de4:	426b      	negs	r3, r5
 8002de6:	415d      	adcs	r5, r3
 8002de8:	b2ed      	uxtb	r5, r5
 8002dea:	b672      	cpsid	i
 8002dec:	6904      	ldr	r4, [r0, #16]
 8002dee:	42b4      	cmp	r4, r6
 8002df0:	d101      	bne.n	8002df6 <regfind+0x26>
 8002df2:	e015      	b.n	8002e20 <regfind+0x50>
 8002df4:	001c      	movs	r4, r3
 8002df6:	7fa3      	ldrb	r3, [r4, #30]
 8002df8:	3301      	adds	r3, #1
 8002dfa:	77a3      	strb	r3, [r4, #30]
 8002dfc:	b662      	cpsie	i
 8002dfe:	f7ff ffbf 	bl	8002d80 <chThdRelease>
 8002e02:	1b3b      	subs	r3, r7, r4
 8002e04:	425a      	negs	r2, r3
 8002e06:	4153      	adcs	r3, r2
 8002e08:	431d      	orrs	r5, r3
 8002e0a:	b672      	cpsid	i
 8002e0c:	6923      	ldr	r3, [r4, #16]
 8002e0e:	0020      	movs	r0, r4
 8002e10:	42b3      	cmp	r3, r6
 8002e12:	d1ef      	bne.n	8002df4 <regfind+0x24>
 8002e14:	b662      	cpsie	i
 8002e16:	0020      	movs	r0, r4
 8002e18:	f7ff ffb2 	bl	8002d80 <chThdRelease>
 8002e1c:	0028      	movs	r0, r5
 8002e1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e20:	0004      	movs	r4, r0
 8002e22:	e7f7      	b.n	8002e14 <regfind+0x44>
 8002e24:	20000738 	.word	0x20000738
	...

08002e30 <chHeapAlloc>:
 8002e30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002e32:	46c6      	mov	lr, r8
 8002e34:	0007      	movs	r7, r0
 8002e36:	b500      	push	{lr}
 8002e38:	2800      	cmp	r0, #0
 8002e3a:	d030      	beq.n	8002e9e <chHeapAlloc+0x6e>
 8002e3c:	2307      	movs	r3, #7
 8002e3e:	1dce      	adds	r6, r1, #7
 8002e40:	439e      	bics	r6, r3
 8002e42:	3309      	adds	r3, #9
 8002e44:	4698      	mov	r8, r3
 8002e46:	003d      	movs	r5, r7
 8002e48:	44b8      	add	r8, r7
 8002e4a:	4640      	mov	r0, r8
 8002e4c:	3508      	adds	r5, #8
 8002e4e:	f7ff fdcf 	bl	80029f0 <chMtxLock>
 8002e52:	e003      	b.n	8002e5c <chHeapAlloc+0x2c>
 8002e54:	6863      	ldr	r3, [r4, #4]
 8002e56:	42b3      	cmp	r3, r6
 8002e58:	d214      	bcs.n	8002e84 <chHeapAlloc+0x54>
 8002e5a:	0025      	movs	r5, r4
 8002e5c:	682c      	ldr	r4, [r5, #0]
 8002e5e:	2c00      	cmp	r4, #0
 8002e60:	d1f8      	bne.n	8002e54 <chHeapAlloc+0x24>
 8002e62:	4640      	mov	r0, r8
 8002e64:	f7fe fc64 	bl	8001730 <chMtxUnlock>
 8002e68:	683b      	ldr	r3, [r7, #0]
 8002e6a:	2b00      	cmp	r3, #0
 8002e6c:	d021      	beq.n	8002eb2 <chHeapAlloc+0x82>
 8002e6e:	0030      	movs	r0, r6
 8002e70:	3008      	adds	r0, #8
 8002e72:	4798      	blx	r3
 8002e74:	2800      	cmp	r0, #0
 8002e76:	d01c      	beq.n	8002eb2 <chHeapAlloc+0x82>
 8002e78:	6007      	str	r7, [r0, #0]
 8002e7a:	6046      	str	r6, [r0, #4]
 8002e7c:	3008      	adds	r0, #8
 8002e7e:	bc04      	pop	{r2}
 8002e80:	4690      	mov	r8, r2
 8002e82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e84:	0032      	movs	r2, r6
 8002e86:	3208      	adds	r2, #8
 8002e88:	6821      	ldr	r1, [r4, #0]
 8002e8a:	4293      	cmp	r3, r2
 8002e8c:	d209      	bcs.n	8002ea2 <chHeapAlloc+0x72>
 8002e8e:	6029      	str	r1, [r5, #0]
 8002e90:	4640      	mov	r0, r8
 8002e92:	6027      	str	r7, [r4, #0]
 8002e94:	f7fe fc4c 	bl	8001730 <chMtxUnlock>
 8002e98:	0020      	movs	r0, r4
 8002e9a:	3008      	adds	r0, #8
 8002e9c:	e7ef      	b.n	8002e7e <chHeapAlloc+0x4e>
 8002e9e:	4f06      	ldr	r7, [pc, #24]	; (8002eb8 <chHeapAlloc+0x88>)
 8002ea0:	e7cc      	b.n	8002e3c <chHeapAlloc+0xc>
 8002ea2:	1b9b      	subs	r3, r3, r6
 8002ea4:	18a2      	adds	r2, r4, r2
 8002ea6:	3b08      	subs	r3, #8
 8002ea8:	6011      	str	r1, [r2, #0]
 8002eaa:	6053      	str	r3, [r2, #4]
 8002eac:	602a      	str	r2, [r5, #0]
 8002eae:	6066      	str	r6, [r4, #4]
 8002eb0:	e7ee      	b.n	8002e90 <chHeapAlloc+0x60>
 8002eb2:	2000      	movs	r0, #0
 8002eb4:	e7e3      	b.n	8002e7e <chHeapAlloc+0x4e>
 8002eb6:	46c0      	nop			; (mov r8, r8)
 8002eb8:	20000888 	.word	0x20000888
 8002ebc:	00000000 	.word	0x00000000

08002ec0 <chThdCreateFromHeap.constprop.52>:
 8002ec0:	b570      	push	{r4, r5, r6, lr}
 8002ec2:	000e      	movs	r6, r1
 8002ec4:	21a4      	movs	r1, #164	; 0xa4
 8002ec6:	0005      	movs	r5, r0
 8002ec8:	0049      	lsls	r1, r1, #1
 8002eca:	4816      	ldr	r0, [pc, #88]	; (8002f24 <chThdCreateFromHeap.constprop.52+0x64>)
 8002ecc:	f7ff ffb0 	bl	8002e30 <chHeapAlloc>
 8002ed0:	1e04      	subs	r4, r0, #0
 8002ed2:	d024      	beq.n	8002f1e <chThdCreateFromHeap.constprop.52+0x5e>
 8002ed4:	b672      	cpsid	i
 8002ed6:	0003      	movs	r3, r0
 8002ed8:	4a13      	ldr	r2, [pc, #76]	; (8002f28 <chThdCreateFromHeap.constprop.52+0x68>)
 8002eda:	3325      	adds	r3, #37	; 0x25
 8002edc:	33ff      	adds	r3, #255	; 0xff
 8002ede:	60c3      	str	r3, [r0, #12]
 8002ee0:	611a      	str	r2, [r3, #16]
 8002ee2:	4a12      	ldr	r2, [pc, #72]	; (8002f2c <chThdCreateFromHeap.constprop.52+0x6c>)
 8002ee4:	615e      	str	r6, [r3, #20]
 8002ee6:	621a      	str	r2, [r3, #32]
 8002ee8:	2302      	movs	r3, #2
 8002eea:	7703      	strb	r3, [r0, #28]
 8002eec:	2300      	movs	r3, #0
 8002eee:	2201      	movs	r2, #1
 8002ef0:	6383      	str	r3, [r0, #56]	; 0x38
 8002ef2:	6343      	str	r3, [r0, #52]	; 0x34
 8002ef4:	6183      	str	r3, [r0, #24]
 8002ef6:	4b0e      	ldr	r3, [pc, #56]	; (8002f30 <chThdCreateFromHeap.constprop.52+0x70>)
 8002ef8:	6085      	str	r5, [r0, #8]
 8002efa:	6103      	str	r3, [r0, #16]
 8002efc:	6959      	ldr	r1, [r3, #20]
 8002efe:	63c5      	str	r5, [r0, #60]	; 0x3c
 8002f00:	6141      	str	r1, [r0, #20]
 8002f02:	7782      	strb	r2, [r0, #30]
 8002f04:	6108      	str	r0, [r1, #16]
 8002f06:	6158      	str	r0, [r3, #20]
 8002f08:	0003      	movs	r3, r0
 8002f0a:	3324      	adds	r3, #36	; 0x24
 8002f0c:	6243      	str	r3, [r0, #36]	; 0x24
 8002f0e:	3304      	adds	r3, #4
 8002f10:	6283      	str	r3, [r0, #40]	; 0x28
 8002f12:	62c3      	str	r3, [r0, #44]	; 0x2c
 8002f14:	7742      	strb	r2, [r0, #29]
 8002f16:	2100      	movs	r1, #0
 8002f18:	f7fe fb92 	bl	8001640 <chSchWakeupS>
 8002f1c:	b662      	cpsie	i
 8002f1e:	0020      	movs	r0, r4
 8002f20:	bd70      	pop	{r4, r5, r6, pc}
 8002f22:	46c0      	nop			; (mov r8, r8)
 8002f24:	200008b0 	.word	0x200008b0
 8002f28:	08000821 	.word	0x08000821
 8002f2c:	080001a1 	.word	0x080001a1
 8002f30:	20000738 	.word	0x20000738
	...

08002f40 <dyn3_execute>:
 8002f40:	4b44      	ldr	r3, [pc, #272]	; (8003054 <dyn3_execute+0x114>)
 8002f42:	b510      	push	{r4, lr}
 8002f44:	699b      	ldr	r3, [r3, #24]
 8002f46:	4944      	ldr	r1, [pc, #272]	; (8003058 <dyn3_execute+0x118>)
 8002f48:	6898      	ldr	r0, [r3, #8]
 8002f4a:	3801      	subs	r0, #1
 8002f4c:	f7ff ffb8 	bl	8002ec0 <chThdCreateFromHeap.constprop.52>
 8002f50:	7f81      	ldrb	r1, [r0, #30]
 8002f52:	0004      	movs	r4, r0
 8002f54:	3901      	subs	r1, #1
 8002f56:	424b      	negs	r3, r1
 8002f58:	4159      	adcs	r1, r3
 8002f5a:	2001      	movs	r0, #1
 8002f5c:	b2c9      	uxtb	r1, r1
 8002f5e:	f7fd fc17 	bl	8000790 <_test_assert>
 8002f62:	2800      	cmp	r0, #0
 8002f64:	d000      	beq.n	8002f68 <dyn3_execute+0x28>
 8002f66:	bd10      	pop	{r4, pc}
 8002f68:	b672      	cpsid	i
 8002f6a:	7fa3      	ldrb	r3, [r4, #30]
 8002f6c:	3301      	adds	r3, #1
 8002f6e:	77a3      	strb	r3, [r4, #30]
 8002f70:	b662      	cpsie	i
 8002f72:	7fa1      	ldrb	r1, [r4, #30]
 8002f74:	3002      	adds	r0, #2
 8002f76:	3902      	subs	r1, #2
 8002f78:	424b      	negs	r3, r1
 8002f7a:	4159      	adcs	r1, r3
 8002f7c:	b2c9      	uxtb	r1, r1
 8002f7e:	f7fd fc07 	bl	8000790 <_test_assert>
 8002f82:	2800      	cmp	r0, #0
 8002f84:	d1ef      	bne.n	8002f66 <dyn3_execute+0x26>
 8002f86:	0020      	movs	r0, r4
 8002f88:	f7ff fefa 	bl	8002d80 <chThdRelease>
 8002f8c:	7fa1      	ldrb	r1, [r4, #30]
 8002f8e:	2003      	movs	r0, #3
 8002f90:	3901      	subs	r1, #1
 8002f92:	424b      	negs	r3, r1
 8002f94:	4159      	adcs	r1, r3
 8002f96:	b2c9      	uxtb	r1, r1
 8002f98:	f7fd fbfa 	bl	8000790 <_test_assert>
 8002f9c:	2800      	cmp	r0, #0
 8002f9e:	d1e2      	bne.n	8002f66 <dyn3_execute+0x26>
 8002fa0:	0020      	movs	r0, r4
 8002fa2:	f7ff ff15 	bl	8002dd0 <regfind>
 8002fa6:	0001      	movs	r1, r0
 8002fa8:	2004      	movs	r0, #4
 8002faa:	f7fd fbf1 	bl	8000790 <_test_assert>
 8002fae:	2800      	cmp	r0, #0
 8002fb0:	d1d9      	bne.n	8002f66 <dyn3_execute+0x26>
 8002fb2:	0020      	movs	r0, r4
 8002fb4:	f7ff ff0c 	bl	8002dd0 <regfind>
 8002fb8:	0001      	movs	r1, r0
 8002fba:	2005      	movs	r0, #5
 8002fbc:	f7fd fbe8 	bl	8000790 <_test_assert>
 8002fc0:	2800      	cmp	r0, #0
 8002fc2:	d1d0      	bne.n	8002f66 <dyn3_execute+0x26>
 8002fc4:	0020      	movs	r0, r4
 8002fc6:	f7ff fedb 	bl	8002d80 <chThdRelease>
 8002fca:	7fa1      	ldrb	r1, [r4, #30]
 8002fcc:	2006      	movs	r0, #6
 8002fce:	424b      	negs	r3, r1
 8002fd0:	4159      	adcs	r1, r3
 8002fd2:	b2c9      	uxtb	r1, r1
 8002fd4:	f7fd fbdc 	bl	8000790 <_test_assert>
 8002fd8:	2800      	cmp	r0, #0
 8002fda:	d1c4      	bne.n	8002f66 <dyn3_execute+0x26>
 8002fdc:	7f21      	ldrb	r1, [r4, #28]
 8002fde:	3007      	adds	r0, #7
 8002fe0:	424b      	negs	r3, r1
 8002fe2:	4159      	adcs	r1, r3
 8002fe4:	b2c9      	uxtb	r1, r1
 8002fe6:	f7fd fbd3 	bl	8000790 <_test_assert>
 8002fea:	2800      	cmp	r0, #0
 8002fec:	d1bb      	bne.n	8002f66 <dyn3_execute+0x26>
 8002fee:	0020      	movs	r0, r4
 8002ff0:	f7ff feee 	bl	8002dd0 <regfind>
 8002ff4:	0001      	movs	r1, r0
 8002ff6:	2008      	movs	r0, #8
 8002ff8:	f7fd fbca 	bl	8000790 <_test_assert>
 8002ffc:	2800      	cmp	r0, #0
 8002ffe:	d1b2      	bne.n	8002f66 <dyn3_execute+0x26>
 8003000:	0020      	movs	r0, r4
 8003002:	f7ff fee5 	bl	8002dd0 <regfind>
 8003006:	0001      	movs	r1, r0
 8003008:	2009      	movs	r0, #9
 800300a:	f7fd fbc1 	bl	8000790 <_test_assert>
 800300e:	2800      	cmp	r0, #0
 8003010:	d1a9      	bne.n	8002f66 <dyn3_execute+0x26>
 8003012:	3032      	adds	r0, #50	; 0x32
 8003014:	f7ff f9e4 	bl	80023e0 <chThdSleep>
 8003018:	7f21      	ldrb	r1, [r4, #28]
 800301a:	200a      	movs	r0, #10
 800301c:	390f      	subs	r1, #15
 800301e:	424b      	negs	r3, r1
 8003020:	4159      	adcs	r1, r3
 8003022:	b2c9      	uxtb	r1, r1
 8003024:	f7fd fbb4 	bl	8000790 <_test_assert>
 8003028:	2800      	cmp	r0, #0
 800302a:	d19c      	bne.n	8002f66 <dyn3_execute+0x26>
 800302c:	0020      	movs	r0, r4
 800302e:	f7ff fecf 	bl	8002dd0 <regfind>
 8003032:	0001      	movs	r1, r0
 8003034:	200b      	movs	r0, #11
 8003036:	f7fd fbab 	bl	8000790 <_test_assert>
 800303a:	2800      	cmp	r0, #0
 800303c:	d000      	beq.n	8003040 <dyn3_execute+0x100>
 800303e:	e792      	b.n	8002f66 <dyn3_execute+0x26>
 8003040:	0020      	movs	r0, r4
 8003042:	f7ff fec5 	bl	8002dd0 <regfind>
 8003046:	2101      	movs	r1, #1
 8003048:	4041      	eors	r1, r0
 800304a:	b2c9      	uxtb	r1, r1
 800304c:	200c      	movs	r0, #12
 800304e:	f7fd fb9f 	bl	8000790 <_test_assert>
 8003052:	e788      	b.n	8002f66 <dyn3_execute+0x26>
 8003054:	20000738 	.word	0x20000738
 8003058:	08005790 	.word	0x08005790
 800305c:	00000000 	.word	0x00000000

08003060 <heap1_execute>:
 8003060:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003062:	b083      	sub	sp, #12
 8003064:	4669      	mov	r1, sp
 8003066:	2000      	movs	r0, #0
 8003068:	f7ff fe2a 	bl	8002cc0 <chHeapStatus>
 800306c:	2110      	movs	r1, #16
 800306e:	2000      	movs	r0, #0
 8003070:	f7ff fede 	bl	8002e30 <chHeapAlloc>
 8003074:	0001      	movs	r1, r0
 8003076:	1e4b      	subs	r3, r1, #1
 8003078:	4199      	sbcs	r1, r3
 800307a:	0004      	movs	r4, r0
 800307c:	b2c9      	uxtb	r1, r1
 800307e:	2001      	movs	r0, #1
 8003080:	f7fd fb86 	bl	8000790 <_test_assert>
 8003084:	2800      	cmp	r0, #0
 8003086:	d001      	beq.n	800308c <heap1_execute+0x2c>
 8003088:	b003      	add	sp, #12
 800308a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800308c:	0020      	movs	r0, r4
 800308e:	f7ff fe37 	bl	8002d00 <chHeapFree>
 8003092:	4982      	ldr	r1, [pc, #520]	; (800329c <heap1_execute+0x23c>)
 8003094:	2000      	movs	r0, #0
 8003096:	f7ff fecb 	bl	8002e30 <chHeapAlloc>
 800309a:	4241      	negs	r1, r0
 800309c:	4141      	adcs	r1, r0
 800309e:	2002      	movs	r0, #2
 80030a0:	b2c9      	uxtb	r1, r1
 80030a2:	f7fd fb75 	bl	8000790 <_test_assert>
 80030a6:	2800      	cmp	r0, #0
 80030a8:	d1ee      	bne.n	8003088 <heap1_execute+0x28>
 80030aa:	4c7d      	ldr	r4, [pc, #500]	; (80032a0 <heap1_execute+0x240>)
 80030ac:	4669      	mov	r1, sp
 80030ae:	0020      	movs	r0, r4
 80030b0:	f7ff fe06 	bl	8002cc0 <chHeapStatus>
 80030b4:	2110      	movs	r1, #16
 80030b6:	0020      	movs	r0, r4
 80030b8:	f7ff feba 	bl	8002e30 <chHeapAlloc>
 80030bc:	2110      	movs	r1, #16
 80030be:	0007      	movs	r7, r0
 80030c0:	0020      	movs	r0, r4
 80030c2:	f7ff feb5 	bl	8002e30 <chHeapAlloc>
 80030c6:	2110      	movs	r1, #16
 80030c8:	0006      	movs	r6, r0
 80030ca:	0020      	movs	r0, r4
 80030cc:	f7ff feb0 	bl	8002e30 <chHeapAlloc>
 80030d0:	0005      	movs	r5, r0
 80030d2:	0038      	movs	r0, r7
 80030d4:	f7ff fe14 	bl	8002d00 <chHeapFree>
 80030d8:	0030      	movs	r0, r6
 80030da:	f7ff fe11 	bl	8002d00 <chHeapFree>
 80030de:	0028      	movs	r0, r5
 80030e0:	f7ff fe0e 	bl	8002d00 <chHeapFree>
 80030e4:	a901      	add	r1, sp, #4
 80030e6:	0020      	movs	r0, r4
 80030e8:	f7ff fdea 	bl	8002cc0 <chHeapStatus>
 80030ec:	3801      	subs	r0, #1
 80030ee:	4241      	negs	r1, r0
 80030f0:	4141      	adcs	r1, r0
 80030f2:	2003      	movs	r0, #3
 80030f4:	b2c9      	uxtb	r1, r1
 80030f6:	f7fd fb4b 	bl	8000790 <_test_assert>
 80030fa:	2800      	cmp	r0, #0
 80030fc:	d1c4      	bne.n	8003088 <heap1_execute+0x28>
 80030fe:	2110      	movs	r1, #16
 8003100:	0020      	movs	r0, r4
 8003102:	f7ff fe95 	bl	8002e30 <chHeapAlloc>
 8003106:	2110      	movs	r1, #16
 8003108:	0005      	movs	r5, r0
 800310a:	0020      	movs	r0, r4
 800310c:	f7ff fe90 	bl	8002e30 <chHeapAlloc>
 8003110:	0006      	movs	r6, r0
 8003112:	2110      	movs	r1, #16
 8003114:	0020      	movs	r0, r4
 8003116:	f7ff fe8b 	bl	8002e30 <chHeapAlloc>
 800311a:	f7ff fdf1 	bl	8002d00 <chHeapFree>
 800311e:	0030      	movs	r0, r6
 8003120:	f7ff fdee 	bl	8002d00 <chHeapFree>
 8003124:	0028      	movs	r0, r5
 8003126:	f7ff fdeb 	bl	8002d00 <chHeapFree>
 800312a:	a901      	add	r1, sp, #4
 800312c:	0020      	movs	r0, r4
 800312e:	f7ff fdc7 	bl	8002cc0 <chHeapStatus>
 8003132:	3801      	subs	r0, #1
 8003134:	4241      	negs	r1, r0
 8003136:	4141      	adcs	r1, r0
 8003138:	2004      	movs	r0, #4
 800313a:	b2c9      	uxtb	r1, r1
 800313c:	f7fd fb28 	bl	8000790 <_test_assert>
 8003140:	2800      	cmp	r0, #0
 8003142:	d1a1      	bne.n	8003088 <heap1_execute+0x28>
 8003144:	2111      	movs	r1, #17
 8003146:	0020      	movs	r0, r4
 8003148:	f7ff fe72 	bl	8002e30 <chHeapAlloc>
 800314c:	2110      	movs	r1, #16
 800314e:	0005      	movs	r5, r0
 8003150:	0020      	movs	r0, r4
 8003152:	f7ff fe6d 	bl	8002e30 <chHeapAlloc>
 8003156:	0006      	movs	r6, r0
 8003158:	0028      	movs	r0, r5
 800315a:	f7ff fdd1 	bl	8002d00 <chHeapFree>
 800315e:	a901      	add	r1, sp, #4
 8003160:	0020      	movs	r0, r4
 8003162:	f7ff fdad 	bl	8002cc0 <chHeapStatus>
 8003166:	3802      	subs	r0, #2
 8003168:	4241      	negs	r1, r0
 800316a:	4141      	adcs	r1, r0
 800316c:	2005      	movs	r0, #5
 800316e:	b2c9      	uxtb	r1, r1
 8003170:	f7fd fb0e 	bl	8000790 <_test_assert>
 8003174:	2800      	cmp	r0, #0
 8003176:	d000      	beq.n	800317a <heap1_execute+0x11a>
 8003178:	e786      	b.n	8003088 <heap1_execute+0x28>
 800317a:	2110      	movs	r1, #16
 800317c:	0020      	movs	r0, r4
 800317e:	f7ff fe57 	bl	8002e30 <chHeapAlloc>
 8003182:	a901      	add	r1, sp, #4
 8003184:	0005      	movs	r5, r0
 8003186:	0020      	movs	r0, r4
 8003188:	f7ff fd9a 	bl	8002cc0 <chHeapStatus>
 800318c:	2101      	movs	r1, #1
 800318e:	2801      	cmp	r0, #1
 8003190:	d007      	beq.n	80031a2 <heap1_execute+0x142>
 8003192:	a901      	add	r1, sp, #4
 8003194:	0020      	movs	r0, r4
 8003196:	f7ff fd93 	bl	8002cc0 <chHeapStatus>
 800319a:	1e81      	subs	r1, r0, #2
 800319c:	4248      	negs	r0, r1
 800319e:	4141      	adcs	r1, r0
 80031a0:	b2c9      	uxtb	r1, r1
 80031a2:	2006      	movs	r0, #6
 80031a4:	f7fd faf4 	bl	8000790 <_test_assert>
 80031a8:	2800      	cmp	r0, #0
 80031aa:	d000      	beq.n	80031ae <heap1_execute+0x14e>
 80031ac:	e76c      	b.n	8003088 <heap1_execute+0x28>
 80031ae:	0030      	movs	r0, r6
 80031b0:	f7ff fda6 	bl	8002d00 <chHeapFree>
 80031b4:	0028      	movs	r0, r5
 80031b6:	f7ff fda3 	bl	8002d00 <chHeapFree>
 80031ba:	a901      	add	r1, sp, #4
 80031bc:	0020      	movs	r0, r4
 80031be:	f7ff fd7f 	bl	8002cc0 <chHeapStatus>
 80031c2:	1e41      	subs	r1, r0, #1
 80031c4:	4248      	negs	r0, r1
 80031c6:	4141      	adcs	r1, r0
 80031c8:	2007      	movs	r0, #7
 80031ca:	b2c9      	uxtb	r1, r1
 80031cc:	f7fd fae0 	bl	8000790 <_test_assert>
 80031d0:	2800      	cmp	r0, #0
 80031d2:	d000      	beq.n	80031d6 <heap1_execute+0x176>
 80031d4:	e758      	b.n	8003088 <heap1_execute+0x28>
 80031d6:	2110      	movs	r1, #16
 80031d8:	0020      	movs	r0, r4
 80031da:	f7ff fe29 	bl	8002e30 <chHeapAlloc>
 80031de:	2110      	movs	r1, #16
 80031e0:	0006      	movs	r6, r0
 80031e2:	0020      	movs	r0, r4
 80031e4:	f7ff fe24 	bl	8002e30 <chHeapAlloc>
 80031e8:	0005      	movs	r5, r0
 80031ea:	0030      	movs	r0, r6
 80031ec:	f7ff fd88 	bl	8002d00 <chHeapFree>
 80031f0:	a901      	add	r1, sp, #4
 80031f2:	0020      	movs	r0, r4
 80031f4:	f7ff fd64 	bl	8002cc0 <chHeapStatus>
 80031f8:	1e81      	subs	r1, r0, #2
 80031fa:	4248      	negs	r0, r1
 80031fc:	4141      	adcs	r1, r0
 80031fe:	2008      	movs	r0, #8
 8003200:	b2c9      	uxtb	r1, r1
 8003202:	f7fd fac5 	bl	8000790 <_test_assert>
 8003206:	2800      	cmp	r0, #0
 8003208:	d000      	beq.n	800320c <heap1_execute+0x1ac>
 800320a:	e73d      	b.n	8003088 <heap1_execute+0x28>
 800320c:	2120      	movs	r1, #32
 800320e:	0020      	movs	r0, r4
 8003210:	f7ff fe0e 	bl	8002e30 <chHeapAlloc>
 8003214:	f7ff fd74 	bl	8002d00 <chHeapFree>
 8003218:	0028      	movs	r0, r5
 800321a:	f7ff fd71 	bl	8002d00 <chHeapFree>
 800321e:	a901      	add	r1, sp, #4
 8003220:	0020      	movs	r0, r4
 8003222:	f7ff fd4d 	bl	8002cc0 <chHeapStatus>
 8003226:	1e41      	subs	r1, r0, #1
 8003228:	4248      	negs	r0, r1
 800322a:	4141      	adcs	r1, r0
 800322c:	2009      	movs	r0, #9
 800322e:	b2c9      	uxtb	r1, r1
 8003230:	f7fd faae 	bl	8000790 <_test_assert>
 8003234:	2800      	cmp	r0, #0
 8003236:	d000      	beq.n	800323a <heap1_execute+0x1da>
 8003238:	e726      	b.n	8003088 <heap1_execute+0x28>
 800323a:	a901      	add	r1, sp, #4
 800323c:	0020      	movs	r0, r4
 800323e:	f7ff fd3f 	bl	8002cc0 <chHeapStatus>
 8003242:	9901      	ldr	r1, [sp, #4]
 8003244:	0020      	movs	r0, r4
 8003246:	f7ff fdf3 	bl	8002e30 <chHeapAlloc>
 800324a:	a901      	add	r1, sp, #4
 800324c:	0005      	movs	r5, r0
 800324e:	0020      	movs	r0, r4
 8003250:	f7ff fd36 	bl	8002cc0 <chHeapStatus>
 8003254:	4241      	negs	r1, r0
 8003256:	4141      	adcs	r1, r0
 8003258:	200a      	movs	r0, #10
 800325a:	b2c9      	uxtb	r1, r1
 800325c:	f7fd fa98 	bl	8000790 <_test_assert>
 8003260:	2800      	cmp	r0, #0
 8003262:	d000      	beq.n	8003266 <heap1_execute+0x206>
 8003264:	e710      	b.n	8003088 <heap1_execute+0x28>
 8003266:	0028      	movs	r0, r5
 8003268:	f7ff fd4a 	bl	8002d00 <chHeapFree>
 800326c:	a901      	add	r1, sp, #4
 800326e:	0020      	movs	r0, r4
 8003270:	f7ff fd26 	bl	8002cc0 <chHeapStatus>
 8003274:	1e41      	subs	r1, r0, #1
 8003276:	4248      	negs	r0, r1
 8003278:	4141      	adcs	r1, r0
 800327a:	200b      	movs	r0, #11
 800327c:	b2c9      	uxtb	r1, r1
 800327e:	f7fd fa87 	bl	8000790 <_test_assert>
 8003282:	2800      	cmp	r0, #0
 8003284:	d000      	beq.n	8003288 <heap1_execute+0x228>
 8003286:	e6ff      	b.n	8003088 <heap1_execute+0x28>
 8003288:	9b01      	ldr	r3, [sp, #4]
 800328a:	9a00      	ldr	r2, [sp, #0]
 800328c:	300c      	adds	r0, #12
 800328e:	1a99      	subs	r1, r3, r2
 8003290:	424b      	negs	r3, r1
 8003292:	4159      	adcs	r1, r3
 8003294:	b2c9      	uxtb	r1, r1
 8003296:	f7fd fa7b 	bl	8000790 <_test_assert>
 800329a:	e6f5      	b.n	8003088 <heap1_execute+0x28>
 800329c:	ffffff00 	.word	0xffffff00
 80032a0:	20000fa8 	.word	0x20000fa8
	...

080032b0 <chSemWait>:
 80032b0:	b510      	push	{r4, lr}
 80032b2:	0002      	movs	r2, r0
 80032b4:	b672      	cpsid	i
 80032b6:	6883      	ldr	r3, [r0, #8]
 80032b8:	3b01      	subs	r3, #1
 80032ba:	6083      	str	r3, [r0, #8]
 80032bc:	2000      	movs	r0, #0
 80032be:	2b00      	cmp	r3, #0
 80032c0:	db01      	blt.n	80032c6 <chSemWait+0x16>
 80032c2:	b662      	cpsie	i
 80032c4:	bd10      	pop	{r4, pc}
 80032c6:	4c07      	ldr	r4, [pc, #28]	; (80032e4 <chSemWait+0x34>)
 80032c8:	3005      	adds	r0, #5
 80032ca:	69a3      	ldr	r3, [r4, #24]
 80032cc:	621a      	str	r2, [r3, #32]
 80032ce:	601a      	str	r2, [r3, #0]
 80032d0:	6851      	ldr	r1, [r2, #4]
 80032d2:	6059      	str	r1, [r3, #4]
 80032d4:	600b      	str	r3, [r1, #0]
 80032d6:	6053      	str	r3, [r2, #4]
 80032d8:	f7fe faa2 	bl	8001820 <chSchGoSleepS>
 80032dc:	69a3      	ldr	r3, [r4, #24]
 80032de:	6a18      	ldr	r0, [r3, #32]
 80032e0:	e7ef      	b.n	80032c2 <chSemWait+0x12>
 80032e2:	46c0      	nop			; (mov r8, r8)
 80032e4:	20000738 	.word	0x20000738
	...

080032f0 <bmk11_execute>:
 80032f0:	b570      	push	{r4, r5, r6, lr}
 80032f2:	2500      	movs	r5, #0
 80032f4:	f7ff f91c 	bl	8002530 <test_wait_tick>
 80032f8:	f7fd fe0a 	bl	8000f10 <test_start_timer.constprop.1>
 80032fc:	4c13      	ldr	r4, [pc, #76]	; (800334c <bmk11_execute+0x5c>)
 80032fe:	4e14      	ldr	r6, [pc, #80]	; (8003350 <bmk11_execute+0x60>)
 8003300:	0020      	movs	r0, r4
 8003302:	f7ff ffd5 	bl	80032b0 <chSemWait>
 8003306:	0020      	movs	r0, r4
 8003308:	f7fe fa42 	bl	8001790 <chSemSignal>
 800330c:	0020      	movs	r0, r4
 800330e:	f7ff ffcf 	bl	80032b0 <chSemWait>
 8003312:	0020      	movs	r0, r4
 8003314:	f7fe fa3c 	bl	8001790 <chSemSignal>
 8003318:	0020      	movs	r0, r4
 800331a:	f7ff ffc9 	bl	80032b0 <chSemWait>
 800331e:	0020      	movs	r0, r4
 8003320:	f7fe fa36 	bl	8001790 <chSemSignal>
 8003324:	0020      	movs	r0, r4
 8003326:	f7ff ffc3 	bl	80032b0 <chSemWait>
 800332a:	0020      	movs	r0, r4
 800332c:	f7fe fa30 	bl	8001790 <chSemSignal>
 8003330:	7833      	ldrb	r3, [r6, #0]
 8003332:	3501      	adds	r5, #1
 8003334:	2b00      	cmp	r3, #0
 8003336:	d0e3      	beq.n	8003300 <bmk11_execute+0x10>
 8003338:	4806      	ldr	r0, [pc, #24]	; (8003354 <bmk11_execute+0x64>)
 800333a:	f7fd fa99 	bl	8000870 <test_print>
 800333e:	00a8      	lsls	r0, r5, #2
 8003340:	f7fd f99e 	bl	8000680 <test_printn>
 8003344:	4804      	ldr	r0, [pc, #16]	; (8003358 <bmk11_execute+0x68>)
 8003346:	f7fd fa73 	bl	8000830 <test_println>
 800334a:	bd70      	pop	{r4, r5, r6, pc}
 800334c:	20000928 	.word	0x20000928
 8003350:	20000fc8 	.word	0x20000fc8
 8003354:	08005600 	.word	0x08005600
 8003358:	08005620 	.word	0x08005620
 800335c:	00000000 	.word	0x00000000

08003360 <thread3.lto_priv.65>:
 8003360:	b570      	push	{r4, r5, r6, lr}
 8003362:	4c07      	ldr	r4, [pc, #28]	; (8003380 <thread3.lto_priv.65+0x20>)
 8003364:	69a3      	ldr	r3, [r4, #24]
 8003366:	7f5b      	ldrb	r3, [r3, #29]
 8003368:	075b      	lsls	r3, r3, #29
 800336a:	d408      	bmi.n	800337e <thread3.lto_priv.65+0x1e>
 800336c:	2504      	movs	r5, #4
 800336e:	4e05      	ldr	r6, [pc, #20]	; (8003384 <thread3.lto_priv.65+0x24>)
 8003370:	0030      	movs	r0, r6
 8003372:	f7ff ff9d 	bl	80032b0 <chSemWait>
 8003376:	69a3      	ldr	r3, [r4, #24]
 8003378:	7f5b      	ldrb	r3, [r3, #29]
 800337a:	421d      	tst	r5, r3
 800337c:	d0f8      	beq.n	8003370 <thread3.lto_priv.65+0x10>
 800337e:	bd70      	pop	{r4, r5, r6, pc}
 8003380:	20000738 	.word	0x20000738
 8003384:	20000928 	.word	0x20000928
	...

08003390 <sem4_execute>:
 8003390:	2300      	movs	r3, #0
 8003392:	b510      	push	{r4, lr}
 8003394:	b086      	sub	sp, #24
 8003396:	ac03      	add	r4, sp, #12
 8003398:	9403      	str	r4, [sp, #12]
 800339a:	6064      	str	r4, [r4, #4]
 800339c:	60a3      	str	r3, [r4, #8]
 800339e:	b672      	cpsid	i
 80033a0:	2100      	movs	r1, #0
 80033a2:	0020      	movs	r0, r4
 80033a4:	f7fd fd1c 	bl	8000de0 <chSemResetI>
 80033a8:	f7fe f832 	bl	8001410 <chSchRescheduleS>
 80033ac:	b662      	cpsie	i
 80033ae:	b672      	cpsid	i
 80033b0:	9905      	ldr	r1, [sp, #20]
 80033b2:	2001      	movs	r0, #1
 80033b4:	1e4b      	subs	r3, r1, #1
 80033b6:	4319      	orrs	r1, r3
 80033b8:	0fc9      	lsrs	r1, r1, #31
 80033ba:	f7fd f9e9 	bl	8000790 <_test_assert>
 80033be:	2800      	cmp	r0, #0
 80033c0:	d002      	beq.n	80033c8 <sem4_execute+0x38>
 80033c2:	b662      	cpsie	i
 80033c4:	b006      	add	sp, #24
 80033c6:	bd10      	pop	{r4, pc}
 80033c8:	b662      	cpsie	i
 80033ca:	21a4      	movs	r1, #164	; 0xa4
 80033cc:	4b2d      	ldr	r3, [pc, #180]	; (8003484 <sem4_execute+0xf4>)
 80033ce:	0049      	lsls	r1, r1, #1
 80033d0:	699b      	ldr	r3, [r3, #24]
 80033d2:	482d      	ldr	r0, [pc, #180]	; (8003488 <sem4_execute+0xf8>)
 80033d4:	689a      	ldr	r2, [r3, #8]
 80033d6:	9400      	str	r4, [sp, #0]
 80033d8:	3a01      	subs	r2, #1
 80033da:	4b2c      	ldr	r3, [pc, #176]	; (800348c <sem4_execute+0xfc>)
 80033dc:	f7fe f9f0 	bl	80017c0 <chThdCreateStatic>
 80033e0:	4b2b      	ldr	r3, [pc, #172]	; (8003490 <sem4_execute+0x100>)
 80033e2:	6018      	str	r0, [r3, #0]
 80033e4:	0020      	movs	r0, r4
 80033e6:	f7ff ff63 	bl	80032b0 <chSemWait>
 80033ea:	b672      	cpsid	i
 80033ec:	9905      	ldr	r1, [sp, #20]
 80033ee:	2002      	movs	r0, #2
 80033f0:	1e4b      	subs	r3, r1, #1
 80033f2:	4319      	orrs	r1, r3
 80033f4:	0fc9      	lsrs	r1, r1, #31
 80033f6:	f7fd f9cb 	bl	8000790 <_test_assert>
 80033fa:	2800      	cmp	r0, #0
 80033fc:	d1e1      	bne.n	80033c2 <sem4_execute+0x32>
 80033fe:	b662      	cpsie	i
 8003400:	b672      	cpsid	i
 8003402:	68a3      	ldr	r3, [r4, #8]
 8003404:	2b00      	cmp	r3, #0
 8003406:	dd35      	ble.n	8003474 <sem4_execute+0xe4>
 8003408:	f7fe f802 	bl	8001410 <chSchRescheduleS>
 800340c:	b662      	cpsie	i
 800340e:	b672      	cpsid	i
 8003410:	9b05      	ldr	r3, [sp, #20]
 8003412:	2003      	movs	r0, #3
 8003414:	17d9      	asrs	r1, r3, #31
 8003416:	1ac9      	subs	r1, r1, r3
 8003418:	0fc9      	lsrs	r1, r1, #31
 800341a:	f7fd f9b9 	bl	8000790 <_test_assert>
 800341e:	2800      	cmp	r0, #0
 8003420:	d1cf      	bne.n	80033c2 <sem4_execute+0x32>
 8003422:	b662      	cpsie	i
 8003424:	b672      	cpsid	i
 8003426:	9b05      	ldr	r3, [sp, #20]
 8003428:	2004      	movs	r0, #4
 800342a:	1e59      	subs	r1, r3, #1
 800342c:	424b      	negs	r3, r1
 800342e:	4159      	adcs	r1, r3
 8003430:	b2c9      	uxtb	r1, r1
 8003432:	f7fd f9ad 	bl	8000790 <_test_assert>
 8003436:	2800      	cmp	r0, #0
 8003438:	d1c3      	bne.n	80033c2 <sem4_execute+0x32>
 800343a:	b662      	cpsie	i
 800343c:	b672      	cpsid	i
 800343e:	68a3      	ldr	r3, [r4, #8]
 8003440:	2b00      	cmp	r3, #0
 8003442:	dd1b      	ble.n	800347c <sem4_execute+0xec>
 8003444:	f7fd ffe4 	bl	8001410 <chSchRescheduleS>
 8003448:	b662      	cpsie	i
 800344a:	b672      	cpsid	i
 800344c:	9b05      	ldr	r3, [sp, #20]
 800344e:	2003      	movs	r0, #3
 8003450:	17d9      	asrs	r1, r3, #31
 8003452:	1ac9      	subs	r1, r1, r3
 8003454:	0fc9      	lsrs	r1, r1, #31
 8003456:	f7fd f99b 	bl	8000790 <_test_assert>
 800345a:	2800      	cmp	r0, #0
 800345c:	d1b1      	bne.n	80033c2 <sem4_execute+0x32>
 800345e:	b662      	cpsie	i
 8003460:	b672      	cpsid	i
 8003462:	9b05      	ldr	r3, [sp, #20]
 8003464:	2005      	movs	r0, #5
 8003466:	1e59      	subs	r1, r3, #1
 8003468:	424b      	negs	r3, r1
 800346a:	4159      	adcs	r1, r3
 800346c:	b2c9      	uxtb	r1, r1
 800346e:	f7fd f98f 	bl	8000790 <_test_assert>
 8003472:	e7a6      	b.n	80033c2 <sem4_execute+0x32>
 8003474:	0020      	movs	r0, r4
 8003476:	f7fd fc3b 	bl	8000cf0 <chSemSignalI>
 800347a:	e7c5      	b.n	8003408 <sem4_execute+0x78>
 800347c:	0020      	movs	r0, r4
 800347e:	f7fd fc37 	bl	8000cf0 <chSemSignalI>
 8003482:	e7df      	b.n	8003444 <sem4_execute+0xb4>
 8003484:	20000738 	.word	0x20000738
 8003488:	20000938 	.word	0x20000938
 800348c:	08001431 	.word	0x08001431
 8003490:	20000fcc 	.word	0x20000fcc
	...

080034a0 <thread3.lto_priv.64>:
 80034a0:	b510      	push	{r4, lr}
 80034a2:	4c04      	ldr	r4, [pc, #16]	; (80034b4 <thread3.lto_priv.64+0x14>)
 80034a4:	0020      	movs	r0, r4
 80034a6:	f7ff ff03 	bl	80032b0 <chSemWait>
 80034aa:	0020      	movs	r0, r4
 80034ac:	f7fe f970 	bl	8001790 <chSemSignal>
 80034b0:	bd10      	pop	{r4, pc}
 80034b2:	46c0      	nop			; (mov r8, r8)
 80034b4:	200006ac 	.word	0x200006ac
	...

080034c0 <thread1.lto_priv.66>:
 80034c0:	b510      	push	{r4, lr}
 80034c2:	0004      	movs	r4, r0
 80034c4:	4803      	ldr	r0, [pc, #12]	; (80034d4 <thread1.lto_priv.66+0x14>)
 80034c6:	f7ff fef3 	bl	80032b0 <chSemWait>
 80034ca:	7820      	ldrb	r0, [r4, #0]
 80034cc:	f7fd f978 	bl	80007c0 <test_emit_token>
 80034d0:	bd10      	pop	{r4, pc}
 80034d2:	46c0      	nop			; (mov r8, r8)
 80034d4:	200006ac 	.word	0x200006ac
	...

080034e0 <chThdWait>:
 80034e0:	b570      	push	{r4, r5, r6, lr}
 80034e2:	0004      	movs	r4, r0
 80034e4:	b672      	cpsid	i
 80034e6:	7f03      	ldrb	r3, [r0, #28]
 80034e8:	2b0f      	cmp	r3, #15
 80034ea:	d007      	beq.n	80034fc <chThdWait+0x1c>
 80034ec:	4b07      	ldr	r3, [pc, #28]	; (800350c <chThdWait+0x2c>)
 80034ee:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80034f0:	699b      	ldr	r3, [r3, #24]
 80034f2:	601a      	str	r2, [r3, #0]
 80034f4:	6243      	str	r3, [r0, #36]	; 0x24
 80034f6:	2009      	movs	r0, #9
 80034f8:	f7fe f992 	bl	8001820 <chSchGoSleepS>
 80034fc:	6a25      	ldr	r5, [r4, #32]
 80034fe:	b662      	cpsie	i
 8003500:	0020      	movs	r0, r4
 8003502:	f7ff fc3d 	bl	8002d80 <chThdRelease>
 8003506:	0028      	movs	r0, r5
 8003508:	bd70      	pop	{r4, r5, r6, pc}
 800350a:	46c0      	nop			; (mov r8, r8)
 800350c:	20000738 	.word	0x20000738

08003510 <bmk5_execute>:
 8003510:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003512:	46ce      	mov	lr, r9
 8003514:	4647      	mov	r7, r8
 8003516:	b580      	push	{r7, lr}
 8003518:	4b15      	ldr	r3, [pc, #84]	; (8003570 <bmk5_execute+0x60>)
 800351a:	b083      	sub	sp, #12
 800351c:	699b      	ldr	r3, [r3, #24]
 800351e:	2400      	movs	r4, #0
 8003520:	689d      	ldr	r5, [r3, #8]
 8003522:	f7ff f805 	bl	8002530 <test_wait_tick>
 8003526:	f7fd fcf3 	bl	8000f10 <test_start_timer.constprop.1>
 800352a:	4b12      	ldr	r3, [pc, #72]	; (8003574 <bmk5_execute+0x64>)
 800352c:	2600      	movs	r6, #0
 800352e:	4699      	mov	r9, r3
 8003530:	4b11      	ldr	r3, [pc, #68]	; (8003578 <bmk5_execute+0x68>)
 8003532:	4f12      	ldr	r7, [pc, #72]	; (800357c <bmk5_execute+0x6c>)
 8003534:	4698      	mov	r8, r3
 8003536:	3d01      	subs	r5, #1
 8003538:	21a4      	movs	r1, #164	; 0xa4
 800353a:	464b      	mov	r3, r9
 800353c:	002a      	movs	r2, r5
 800353e:	0049      	lsls	r1, r1, #1
 8003540:	9600      	str	r6, [sp, #0]
 8003542:	4640      	mov	r0, r8
 8003544:	f7fe f93c 	bl	80017c0 <chThdCreateStatic>
 8003548:	f7ff ffca 	bl	80034e0 <chThdWait>
 800354c:	783b      	ldrb	r3, [r7, #0]
 800354e:	3401      	adds	r4, #1
 8003550:	2b00      	cmp	r3, #0
 8003552:	d0f1      	beq.n	8003538 <bmk5_execute+0x28>
 8003554:	480a      	ldr	r0, [pc, #40]	; (8003580 <bmk5_execute+0x70>)
 8003556:	f7fd f98b 	bl	8000870 <test_print>
 800355a:	0020      	movs	r0, r4
 800355c:	f7fd f890 	bl	8000680 <test_printn>
 8003560:	4808      	ldr	r0, [pc, #32]	; (8003584 <bmk5_execute+0x74>)
 8003562:	f7fd f965 	bl	8000830 <test_println>
 8003566:	b003      	add	sp, #12
 8003568:	bc0c      	pop	{r2, r3}
 800356a:	4690      	mov	r8, r2
 800356c:	4699      	mov	r9, r3
 800356e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003570:	20000738 	.word	0x20000738
 8003574:	08005571 	.word	0x08005571
 8003578:	20000938 	.word	0x20000938
 800357c:	20000fc8 	.word	0x20000fc8
 8003580:	08005600 	.word	0x08005600
 8003584:	08005700 	.word	0x08005700
	...

08003590 <test_wait_threads>:
 8003590:	b570      	push	{r4, r5, r6, lr}
 8003592:	4c07      	ldr	r4, [pc, #28]	; (80035b0 <test_wait_threads+0x20>)
 8003594:	2600      	movs	r6, #0
 8003596:	0025      	movs	r5, r4
 8003598:	3514      	adds	r5, #20
 800359a:	6820      	ldr	r0, [r4, #0]
 800359c:	2800      	cmp	r0, #0
 800359e:	d002      	beq.n	80035a6 <test_wait_threads+0x16>
 80035a0:	f7ff ff9e 	bl	80034e0 <chThdWait>
 80035a4:	6026      	str	r6, [r4, #0]
 80035a6:	3404      	adds	r4, #4
 80035a8:	42ac      	cmp	r4, r5
 80035aa:	d1f6      	bne.n	800359a <test_wait_threads+0xa>
 80035ac:	bd70      	pop	{r4, r5, r6, pc}
 80035ae:	46c0      	nop			; (mov r8, r8)
 80035b0:	20000fcc 	.word	0x20000fcc
	...

080035c0 <bmk8_execute>:
 80035c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80035c2:	46ce      	mov	lr, r9
 80035c4:	4647      	mov	r7, r8
 80035c6:	2300      	movs	r3, #0
 80035c8:	b580      	push	{r7, lr}
 80035ca:	b085      	sub	sp, #20
 80035cc:	9303      	str	r3, [sp, #12]
 80035ce:	f7fe ffaf 	bl	8002530 <test_wait_tick>
 80035d2:	4b2d      	ldr	r3, [pc, #180]	; (8003688 <bmk8_execute+0xc8>)
 80035d4:	27a4      	movs	r7, #164	; 0xa4
 80035d6:	4698      	mov	r8, r3
 80035d8:	4b2c      	ldr	r3, [pc, #176]	; (800368c <bmk8_execute+0xcc>)
 80035da:	4c2d      	ldr	r4, [pc, #180]	; (8003690 <bmk8_execute+0xd0>)
 80035dc:	4699      	mov	r9, r3
 80035de:	699b      	ldr	r3, [r3, #24]
 80035e0:	007f      	lsls	r7, r7, #1
 80035e2:	689a      	ldr	r2, [r3, #8]
 80035e4:	ae03      	add	r6, sp, #12
 80035e6:	4643      	mov	r3, r8
 80035e8:	0039      	movs	r1, r7
 80035ea:	3a01      	subs	r2, #1
 80035ec:	9600      	str	r6, [sp, #0]
 80035ee:	0020      	movs	r0, r4
 80035f0:	f7fe f8e6 	bl	80017c0 <chThdCreateStatic>
 80035f4:	464b      	mov	r3, r9
 80035f6:	699b      	ldr	r3, [r3, #24]
 80035f8:	4d26      	ldr	r5, [pc, #152]	; (8003694 <bmk8_execute+0xd4>)
 80035fa:	689a      	ldr	r2, [r3, #8]
 80035fc:	6028      	str	r0, [r5, #0]
 80035fe:	4643      	mov	r3, r8
 8003600:	0039      	movs	r1, r7
 8003602:	3a01      	subs	r2, #1
 8003604:	19e0      	adds	r0, r4, r7
 8003606:	9600      	str	r6, [sp, #0]
 8003608:	f7fe f8da 	bl	80017c0 <chThdCreateStatic>
 800360c:	464b      	mov	r3, r9
 800360e:	699b      	ldr	r3, [r3, #24]
 8003610:	6068      	str	r0, [r5, #4]
 8003612:	689a      	ldr	r2, [r3, #8]
 8003614:	23a4      	movs	r3, #164	; 0xa4
 8003616:	009b      	lsls	r3, r3, #2
 8003618:	18e0      	adds	r0, r4, r3
 800361a:	0039      	movs	r1, r7
 800361c:	4643      	mov	r3, r8
 800361e:	3a01      	subs	r2, #1
 8003620:	9600      	str	r6, [sp, #0]
 8003622:	f7fe f8cd 	bl	80017c0 <chThdCreateStatic>
 8003626:	464b      	mov	r3, r9
 8003628:	699b      	ldr	r3, [r3, #24]
 800362a:	60a8      	str	r0, [r5, #8]
 800362c:	689a      	ldr	r2, [r3, #8]
 800362e:	23f6      	movs	r3, #246	; 0xf6
 8003630:	009b      	lsls	r3, r3, #2
 8003632:	18e0      	adds	r0, r4, r3
 8003634:	0039      	movs	r1, r7
 8003636:	4643      	mov	r3, r8
 8003638:	3a01      	subs	r2, #1
 800363a:	9600      	str	r6, [sp, #0]
 800363c:	f7fe f8c0 	bl	80017c0 <chThdCreateStatic>
 8003640:	464b      	mov	r3, r9
 8003642:	699b      	ldr	r3, [r3, #24]
 8003644:	0039      	movs	r1, r7
 8003646:	689a      	ldr	r2, [r3, #8]
 8003648:	23a4      	movs	r3, #164	; 0xa4
 800364a:	00db      	lsls	r3, r3, #3
 800364c:	3a01      	subs	r2, #1
 800364e:	60e8      	str	r0, [r5, #12]
 8003650:	18e0      	adds	r0, r4, r3
 8003652:	9600      	str	r6, [sp, #0]
 8003654:	4643      	mov	r3, r8
 8003656:	f7fe f8b3 	bl	80017c0 <chThdCreateStatic>
 800365a:	6128      	str	r0, [r5, #16]
 800365c:	20fa      	movs	r0, #250	; 0xfa
 800365e:	0080      	lsls	r0, r0, #2
 8003660:	f7fe febe 	bl	80023e0 <chThdSleep>
 8003664:	f7fd f834 	bl	80006d0 <test_terminate_threads>
 8003668:	f7ff ff92 	bl	8003590 <test_wait_threads>
 800366c:	480a      	ldr	r0, [pc, #40]	; (8003698 <bmk8_execute+0xd8>)
 800366e:	f7fd f8ff 	bl	8000870 <test_print>
 8003672:	9803      	ldr	r0, [sp, #12]
 8003674:	f7fd f804 	bl	8000680 <test_printn>
 8003678:	4808      	ldr	r0, [pc, #32]	; (800369c <bmk8_execute+0xdc>)
 800367a:	f7fd f8d9 	bl	8000830 <test_println>
 800367e:	b005      	add	sp, #20
 8003680:	bc0c      	pop	{r2, r3}
 8003682:	4690      	mov	r8, r2
 8003684:	4699      	mov	r9, r3
 8003686:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003688:	080013a1 	.word	0x080013a1
 800368c:	20000738 	.word	0x20000738
 8003690:	20000938 	.word	0x20000938
 8003694:	20000fcc 	.word	0x20000fcc
 8003698:	08005600 	.word	0x08005600
 800369c:	08005730 	.word	0x08005730

080036a0 <bmk7_execute>:
 80036a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80036a2:	46c6      	mov	lr, r8
 80036a4:	2700      	movs	r7, #0
 80036a6:	21a4      	movs	r1, #164	; 0xa4
 80036a8:	b500      	push	{lr}
 80036aa:	4b3e      	ldr	r3, [pc, #248]	; (80037a4 <bmk7_execute+0x104>)
 80036ac:	4e3e      	ldr	r6, [pc, #248]	; (80037a8 <bmk7_execute+0x108>)
 80036ae:	4698      	mov	r8, r3
 80036b0:	699b      	ldr	r3, [r3, #24]
 80036b2:	4c3e      	ldr	r4, [pc, #248]	; (80037ac <bmk7_execute+0x10c>)
 80036b4:	689a      	ldr	r2, [r3, #8]
 80036b6:	b082      	sub	sp, #8
 80036b8:	0033      	movs	r3, r6
 80036ba:	3205      	adds	r2, #5
 80036bc:	0049      	lsls	r1, r1, #1
 80036be:	0020      	movs	r0, r4
 80036c0:	9700      	str	r7, [sp, #0]
 80036c2:	f7fe f87d 	bl	80017c0 <chThdCreateStatic>
 80036c6:	4643      	mov	r3, r8
 80036c8:	4d39      	ldr	r5, [pc, #228]	; (80037b0 <bmk7_execute+0x110>)
 80036ca:	21a4      	movs	r1, #164	; 0xa4
 80036cc:	6028      	str	r0, [r5, #0]
 80036ce:	0020      	movs	r0, r4
 80036d0:	699b      	ldr	r3, [r3, #24]
 80036d2:	3049      	adds	r0, #73	; 0x49
 80036d4:	689a      	ldr	r2, [r3, #8]
 80036d6:	0049      	lsls	r1, r1, #1
 80036d8:	0033      	movs	r3, r6
 80036da:	3204      	adds	r2, #4
 80036dc:	30ff      	adds	r0, #255	; 0xff
 80036de:	9700      	str	r7, [sp, #0]
 80036e0:	f7fe f86e 	bl	80017c0 <chThdCreateStatic>
 80036e4:	4643      	mov	r3, r8
 80036e6:	699b      	ldr	r3, [r3, #24]
 80036e8:	21a4      	movs	r1, #164	; 0xa4
 80036ea:	689a      	ldr	r2, [r3, #8]
 80036ec:	23a4      	movs	r3, #164	; 0xa4
 80036ee:	009b      	lsls	r3, r3, #2
 80036f0:	6068      	str	r0, [r5, #4]
 80036f2:	3203      	adds	r2, #3
 80036f4:	18e0      	adds	r0, r4, r3
 80036f6:	0049      	lsls	r1, r1, #1
 80036f8:	0033      	movs	r3, r6
 80036fa:	9700      	str	r7, [sp, #0]
 80036fc:	f7fe f860 	bl	80017c0 <chThdCreateStatic>
 8003700:	4643      	mov	r3, r8
 8003702:	699b      	ldr	r3, [r3, #24]
 8003704:	21a4      	movs	r1, #164	; 0xa4
 8003706:	689a      	ldr	r2, [r3, #8]
 8003708:	23f6      	movs	r3, #246	; 0xf6
 800370a:	009b      	lsls	r3, r3, #2
 800370c:	60a8      	str	r0, [r5, #8]
 800370e:	3202      	adds	r2, #2
 8003710:	18e0      	adds	r0, r4, r3
 8003712:	0049      	lsls	r1, r1, #1
 8003714:	0033      	movs	r3, r6
 8003716:	9700      	str	r7, [sp, #0]
 8003718:	f7fe f852 	bl	80017c0 <chThdCreateStatic>
 800371c:	4643      	mov	r3, r8
 800371e:	699b      	ldr	r3, [r3, #24]
 8003720:	21a4      	movs	r1, #164	; 0xa4
 8003722:	689a      	ldr	r2, [r3, #8]
 8003724:	23a4      	movs	r3, #164	; 0xa4
 8003726:	00db      	lsls	r3, r3, #3
 8003728:	60e8      	str	r0, [r5, #12]
 800372a:	3201      	adds	r2, #1
 800372c:	18e0      	adds	r0, r4, r3
 800372e:	0049      	lsls	r1, r1, #1
 8003730:	0033      	movs	r3, r6
 8003732:	9700      	str	r7, [sp, #0]
 8003734:	f7fe f844 	bl	80017c0 <chThdCreateStatic>
 8003738:	2400      	movs	r4, #0
 800373a:	6128      	str	r0, [r5, #16]
 800373c:	f7fe fef8 	bl	8002530 <test_wait_tick>
 8003740:	f7fd fbe6 	bl	8000f10 <test_start_timer.constprop.1>
 8003744:	4d1b      	ldr	r5, [pc, #108]	; (80037b4 <bmk7_execute+0x114>)
 8003746:	4e1c      	ldr	r6, [pc, #112]	; (80037b8 <bmk7_execute+0x118>)
 8003748:	b672      	cpsid	i
 800374a:	2100      	movs	r1, #0
 800374c:	0028      	movs	r0, r5
 800374e:	f7fd fb47 	bl	8000de0 <chSemResetI>
 8003752:	f7fd fe5d 	bl	8001410 <chSchRescheduleS>
 8003756:	b662      	cpsie	i
 8003758:	7833      	ldrb	r3, [r6, #0]
 800375a:	3401      	adds	r4, #1
 800375c:	2b00      	cmp	r3, #0
 800375e:	d0f3      	beq.n	8003748 <bmk7_execute+0xa8>
 8003760:	f7fc ffb6 	bl	80006d0 <test_terminate_threads>
 8003764:	b672      	cpsid	i
 8003766:	2100      	movs	r1, #0
 8003768:	0028      	movs	r0, r5
 800376a:	f7fd fb39 	bl	8000de0 <chSemResetI>
 800376e:	f7fd fe4f 	bl	8001410 <chSchRescheduleS>
 8003772:	b662      	cpsie	i
 8003774:	f7ff ff0c 	bl	8003590 <test_wait_threads>
 8003778:	4810      	ldr	r0, [pc, #64]	; (80037bc <bmk7_execute+0x11c>)
 800377a:	f7fd f879 	bl	8000870 <test_print>
 800377e:	0020      	movs	r0, r4
 8003780:	f7fc ff7e 	bl	8000680 <test_printn>
 8003784:	480e      	ldr	r0, [pc, #56]	; (80037c0 <bmk7_execute+0x120>)
 8003786:	f7fd f873 	bl	8000870 <test_print>
 800378a:	0060      	lsls	r0, r4, #1
 800378c:	1900      	adds	r0, r0, r4
 800378e:	0040      	lsls	r0, r0, #1
 8003790:	f7fc ff76 	bl	8000680 <test_printn>
 8003794:	480b      	ldr	r0, [pc, #44]	; (80037c4 <bmk7_execute+0x124>)
 8003796:	f7fd f84b 	bl	8000830 <test_println>
 800379a:	b002      	add	sp, #8
 800379c:	bc04      	pop	{r2}
 800379e:	4690      	mov	r8, r2
 80037a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037a2:	46c0      	nop			; (mov r8, r8)
 80037a4:	20000738 	.word	0x20000738
 80037a8:	08003361 	.word	0x08003361
 80037ac:	20000938 	.word	0x20000938
 80037b0:	20000fcc 	.word	0x20000fcc
 80037b4:	20000928 	.word	0x20000928
 80037b8:	20000fc8 	.word	0x20000fc8
 80037bc:	08005600 	.word	0x08005600
 80037c0:	08005710 	.word	0x08005710
 80037c4:	08005730 	.word	0x08005730
	...

080037d0 <bmk4_execute>:
 80037d0:	4b20      	ldr	r3, [pc, #128]	; (8003854 <bmk4_execute+0x84>)
 80037d2:	21a4      	movs	r1, #164	; 0xa4
 80037d4:	699b      	ldr	r3, [r3, #24]
 80037d6:	b570      	push	{r4, r5, r6, lr}
 80037d8:	689a      	ldr	r2, [r3, #8]
 80037da:	2300      	movs	r3, #0
 80037dc:	b082      	sub	sp, #8
 80037de:	3201      	adds	r2, #1
 80037e0:	0049      	lsls	r1, r1, #1
 80037e2:	9300      	str	r3, [sp, #0]
 80037e4:	481c      	ldr	r0, [pc, #112]	; (8003858 <bmk4_execute+0x88>)
 80037e6:	4b1d      	ldr	r3, [pc, #116]	; (800385c <bmk4_execute+0x8c>)
 80037e8:	f7fd ffea 	bl	80017c0 <chThdCreateStatic>
 80037ec:	2500      	movs	r5, #0
 80037ee:	4b1c      	ldr	r3, [pc, #112]	; (8003860 <bmk4_execute+0x90>)
 80037f0:	0004      	movs	r4, r0
 80037f2:	6018      	str	r0, [r3, #0]
 80037f4:	f7fe fe9c 	bl	8002530 <test_wait_tick>
 80037f8:	f7fd fb8a 	bl	8000f10 <test_start_timer.constprop.1>
 80037fc:	4e19      	ldr	r6, [pc, #100]	; (8003864 <bmk4_execute+0x94>)
 80037fe:	b672      	cpsid	i
 8003800:	2100      	movs	r1, #0
 8003802:	0020      	movs	r0, r4
 8003804:	f7fd ff1c 	bl	8001640 <chSchWakeupS>
 8003808:	0020      	movs	r0, r4
 800380a:	2100      	movs	r1, #0
 800380c:	f7fd ff18 	bl	8001640 <chSchWakeupS>
 8003810:	0020      	movs	r0, r4
 8003812:	2100      	movs	r1, #0
 8003814:	f7fd ff14 	bl	8001640 <chSchWakeupS>
 8003818:	2100      	movs	r1, #0
 800381a:	0020      	movs	r0, r4
 800381c:	f7fd ff10 	bl	8001640 <chSchWakeupS>
 8003820:	b662      	cpsie	i
 8003822:	7833      	ldrb	r3, [r6, #0]
 8003824:	3504      	adds	r5, #4
 8003826:	2b00      	cmp	r3, #0
 8003828:	d0e9      	beq.n	80037fe <bmk4_execute+0x2e>
 800382a:	b672      	cpsid	i
 800382c:	2101      	movs	r1, #1
 800382e:	0020      	movs	r0, r4
 8003830:	4249      	negs	r1, r1
 8003832:	f7fd ff05 	bl	8001640 <chSchWakeupS>
 8003836:	b662      	cpsie	i
 8003838:	f7ff feaa 	bl	8003590 <test_wait_threads>
 800383c:	480a      	ldr	r0, [pc, #40]	; (8003868 <bmk4_execute+0x98>)
 800383e:	f7fd f817 	bl	8000870 <test_print>
 8003842:	0068      	lsls	r0, r5, #1
 8003844:	f7fc ff1c 	bl	8000680 <test_printn>
 8003848:	4808      	ldr	r0, [pc, #32]	; (800386c <bmk4_execute+0x9c>)
 800384a:	f7fc fff1 	bl	8000830 <test_println>
 800384e:	b002      	add	sp, #8
 8003850:	bd70      	pop	{r4, r5, r6, pc}
 8003852:	46c0      	nop			; (mov r8, r8)
 8003854:	20000738 	.word	0x20000738
 8003858:	20000938 	.word	0x20000938
 800385c:	08001991 	.word	0x08001991
 8003860:	20000fcc 	.word	0x20000fcc
 8003864:	20000fc8 	.word	0x20000fc8
 8003868:	08005600 	.word	0x08005600
 800386c:	08005730 	.word	0x08005730

08003870 <bmk3_execute>:
 8003870:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003872:	46ce      	mov	lr, r9
 8003874:	4647      	mov	r7, r8
 8003876:	26a4      	movs	r6, #164	; 0xa4
 8003878:	b580      	push	{r7, lr}
 800387a:	2700      	movs	r7, #0
 800387c:	4b2e      	ldr	r3, [pc, #184]	; (8003938 <bmk3_execute+0xc8>)
 800387e:	4c2f      	ldr	r4, [pc, #188]	; (800393c <bmk3_execute+0xcc>)
 8003880:	4698      	mov	r8, r3
 8003882:	699b      	ldr	r3, [r3, #24]
 8003884:	b083      	sub	sp, #12
 8003886:	689a      	ldr	r2, [r3, #8]
 8003888:	0076      	lsls	r6, r6, #1
 800388a:	0031      	movs	r1, r6
 800388c:	3201      	adds	r2, #1
 800388e:	9700      	str	r7, [sp, #0]
 8003890:	4b2b      	ldr	r3, [pc, #172]	; (8003940 <bmk3_execute+0xd0>)
 8003892:	0020      	movs	r0, r4
 8003894:	f7fd ff94 	bl	80017c0 <chThdCreateStatic>
 8003898:	4b2a      	ldr	r3, [pc, #168]	; (8003944 <bmk3_execute+0xd4>)
 800389a:	4d2b      	ldr	r5, [pc, #172]	; (8003948 <bmk3_execute+0xd8>)
 800389c:	4699      	mov	r9, r3
 800389e:	4643      	mov	r3, r8
 80038a0:	699b      	ldr	r3, [r3, #24]
 80038a2:	6028      	str	r0, [r5, #0]
 80038a4:	689a      	ldr	r2, [r3, #8]
 80038a6:	19a0      	adds	r0, r4, r6
 80038a8:	464b      	mov	r3, r9
 80038aa:	0031      	movs	r1, r6
 80038ac:	3a02      	subs	r2, #2
 80038ae:	9700      	str	r7, [sp, #0]
 80038b0:	f7fd ff86 	bl	80017c0 <chThdCreateStatic>
 80038b4:	4643      	mov	r3, r8
 80038b6:	699b      	ldr	r3, [r3, #24]
 80038b8:	6068      	str	r0, [r5, #4]
 80038ba:	689a      	ldr	r2, [r3, #8]
 80038bc:	23a4      	movs	r3, #164	; 0xa4
 80038be:	009b      	lsls	r3, r3, #2
 80038c0:	18e0      	adds	r0, r4, r3
 80038c2:	0031      	movs	r1, r6
 80038c4:	464b      	mov	r3, r9
 80038c6:	3a03      	subs	r2, #3
 80038c8:	9700      	str	r7, [sp, #0]
 80038ca:	f7fd ff79 	bl	80017c0 <chThdCreateStatic>
 80038ce:	4643      	mov	r3, r8
 80038d0:	699b      	ldr	r3, [r3, #24]
 80038d2:	60a8      	str	r0, [r5, #8]
 80038d4:	689a      	ldr	r2, [r3, #8]
 80038d6:	23f6      	movs	r3, #246	; 0xf6
 80038d8:	009b      	lsls	r3, r3, #2
 80038da:	18e0      	adds	r0, r4, r3
 80038dc:	0031      	movs	r1, r6
 80038de:	464b      	mov	r3, r9
 80038e0:	3a04      	subs	r2, #4
 80038e2:	9700      	str	r7, [sp, #0]
 80038e4:	f7fd ff6c 	bl	80017c0 <chThdCreateStatic>
 80038e8:	4643      	mov	r3, r8
 80038ea:	699b      	ldr	r3, [r3, #24]
 80038ec:	0031      	movs	r1, r6
 80038ee:	689a      	ldr	r2, [r3, #8]
 80038f0:	23a4      	movs	r3, #164	; 0xa4
 80038f2:	00db      	lsls	r3, r3, #3
 80038f4:	3a05      	subs	r2, #5
 80038f6:	60e8      	str	r0, [r5, #12]
 80038f8:	18e0      	adds	r0, r4, r3
 80038fa:	9700      	str	r7, [sp, #0]
 80038fc:	464b      	mov	r3, r9
 80038fe:	f7fd ff5f 	bl	80017c0 <chThdCreateStatic>
 8003902:	6128      	str	r0, [r5, #16]
 8003904:	6828      	ldr	r0, [r5, #0]
 8003906:	f7fe ffdb 	bl	80028c0 <msg_loop_test>
 800390a:	0004      	movs	r4, r0
 800390c:	f7ff fe40 	bl	8003590 <test_wait_threads>
 8003910:	480e      	ldr	r0, [pc, #56]	; (800394c <bmk3_execute+0xdc>)
 8003912:	f7fc ffad 	bl	8000870 <test_print>
 8003916:	0020      	movs	r0, r4
 8003918:	f7fc feb2 	bl	8000680 <test_printn>
 800391c:	480c      	ldr	r0, [pc, #48]	; (8003950 <bmk3_execute+0xe0>)
 800391e:	f7fc ffa7 	bl	8000870 <test_print>
 8003922:	0060      	lsls	r0, r4, #1
 8003924:	f7fc feac 	bl	8000680 <test_printn>
 8003928:	480a      	ldr	r0, [pc, #40]	; (8003954 <bmk3_execute+0xe4>)
 800392a:	f7fc ff81 	bl	8000830 <test_println>
 800392e:	b003      	add	sp, #12
 8003930:	bc0c      	pop	{r2, r3}
 8003932:	4690      	mov	r8, r2
 8003934:	4699      	mov	r9, r3
 8003936:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003938:	20000738 	.word	0x20000738
 800393c:	20000938 	.word	0x20000938
 8003940:	080027e1 	.word	0x080027e1
 8003944:	08005571 	.word	0x08005571
 8003948:	20000fcc 	.word	0x20000fcc
 800394c:	08005600 	.word	0x08005600
 8003950:	080056f0 	.word	0x080056f0
 8003954:	08005730 	.word	0x08005730
	...

08003960 <bmk2_execute>:
 8003960:	4b12      	ldr	r3, [pc, #72]	; (80039ac <bmk2_execute+0x4c>)
 8003962:	21a4      	movs	r1, #164	; 0xa4
 8003964:	699b      	ldr	r3, [r3, #24]
 8003966:	b510      	push	{r4, lr}
 8003968:	689a      	ldr	r2, [r3, #8]
 800396a:	2300      	movs	r3, #0
 800396c:	b082      	sub	sp, #8
 800396e:	3201      	adds	r2, #1
 8003970:	0049      	lsls	r1, r1, #1
 8003972:	9300      	str	r3, [sp, #0]
 8003974:	480e      	ldr	r0, [pc, #56]	; (80039b0 <bmk2_execute+0x50>)
 8003976:	4b0f      	ldr	r3, [pc, #60]	; (80039b4 <bmk2_execute+0x54>)
 8003978:	f7fd ff22 	bl	80017c0 <chThdCreateStatic>
 800397c:	4b0e      	ldr	r3, [pc, #56]	; (80039b8 <bmk2_execute+0x58>)
 800397e:	6018      	str	r0, [r3, #0]
 8003980:	f7fe ff9e 	bl	80028c0 <msg_loop_test>
 8003984:	0004      	movs	r4, r0
 8003986:	f7ff fe03 	bl	8003590 <test_wait_threads>
 800398a:	480c      	ldr	r0, [pc, #48]	; (80039bc <bmk2_execute+0x5c>)
 800398c:	f7fc ff70 	bl	8000870 <test_print>
 8003990:	0020      	movs	r0, r4
 8003992:	f7fc fe75 	bl	8000680 <test_printn>
 8003996:	480a      	ldr	r0, [pc, #40]	; (80039c0 <bmk2_execute+0x60>)
 8003998:	f7fc ff6a 	bl	8000870 <test_print>
 800399c:	0060      	lsls	r0, r4, #1
 800399e:	f7fc fe6f 	bl	8000680 <test_printn>
 80039a2:	4808      	ldr	r0, [pc, #32]	; (80039c4 <bmk2_execute+0x64>)
 80039a4:	f7fc ff44 	bl	8000830 <test_println>
 80039a8:	b002      	add	sp, #8
 80039aa:	bd10      	pop	{r4, pc}
 80039ac:	20000738 	.word	0x20000738
 80039b0:	20000938 	.word	0x20000938
 80039b4:	080027e1 	.word	0x080027e1
 80039b8:	20000fcc 	.word	0x20000fcc
 80039bc:	08005600 	.word	0x08005600
 80039c0:	080056f0 	.word	0x080056f0
 80039c4:	08005730 	.word	0x08005730
	...

080039d0 <bmk1_execute>:
 80039d0:	4b12      	ldr	r3, [pc, #72]	; (8003a1c <bmk1_execute+0x4c>)
 80039d2:	21a4      	movs	r1, #164	; 0xa4
 80039d4:	699b      	ldr	r3, [r3, #24]
 80039d6:	b510      	push	{r4, lr}
 80039d8:	689a      	ldr	r2, [r3, #8]
 80039da:	2300      	movs	r3, #0
 80039dc:	b082      	sub	sp, #8
 80039de:	3a01      	subs	r2, #1
 80039e0:	0049      	lsls	r1, r1, #1
 80039e2:	9300      	str	r3, [sp, #0]
 80039e4:	480e      	ldr	r0, [pc, #56]	; (8003a20 <bmk1_execute+0x50>)
 80039e6:	4b0f      	ldr	r3, [pc, #60]	; (8003a24 <bmk1_execute+0x54>)
 80039e8:	f7fd feea 	bl	80017c0 <chThdCreateStatic>
 80039ec:	4b0e      	ldr	r3, [pc, #56]	; (8003a28 <bmk1_execute+0x58>)
 80039ee:	6018      	str	r0, [r3, #0]
 80039f0:	f7fe ff66 	bl	80028c0 <msg_loop_test>
 80039f4:	0004      	movs	r4, r0
 80039f6:	f7ff fdcb 	bl	8003590 <test_wait_threads>
 80039fa:	480c      	ldr	r0, [pc, #48]	; (8003a2c <bmk1_execute+0x5c>)
 80039fc:	f7fc ff38 	bl	8000870 <test_print>
 8003a00:	0020      	movs	r0, r4
 8003a02:	f7fc fe3d 	bl	8000680 <test_printn>
 8003a06:	480a      	ldr	r0, [pc, #40]	; (8003a30 <bmk1_execute+0x60>)
 8003a08:	f7fc ff32 	bl	8000870 <test_print>
 8003a0c:	0060      	lsls	r0, r4, #1
 8003a0e:	f7fc fe37 	bl	8000680 <test_printn>
 8003a12:	4808      	ldr	r0, [pc, #32]	; (8003a34 <bmk1_execute+0x64>)
 8003a14:	f7fc ff0c 	bl	8000830 <test_println>
 8003a18:	b002      	add	sp, #8
 8003a1a:	bd10      	pop	{r4, pc}
 8003a1c:	20000738 	.word	0x20000738
 8003a20:	20000938 	.word	0x20000938
 8003a24:	080027e1 	.word	0x080027e1
 8003a28:	20000fcc 	.word	0x20000fcc
 8003a2c:	08005600 	.word	0x08005600
 8003a30:	080056f0 	.word	0x080056f0
 8003a34:	08005730 	.word	0x08005730
	...

08003a40 <queues2_execute>:
 8003a40:	b570      	push	{r4, r5, r6, lr}
 8003a42:	b082      	sub	sp, #8
 8003a44:	b672      	cpsid	i
 8003a46:	4d79      	ldr	r5, [pc, #484]	; (8003c2c <queues2_execute+0x1ec>)
 8003a48:	2100      	movs	r1, #0
 8003a4a:	69ab      	ldr	r3, [r5, #24]
 8003a4c:	696a      	ldr	r2, [r5, #20]
 8003a4e:	4293      	cmp	r3, r2
 8003a50:	d035      	beq.n	8003abe <queues2_execute+0x7e>
 8003a52:	2001      	movs	r0, #1
 8003a54:	f7fc fe9c 	bl	8000790 <_test_assert>
 8003a58:	2800      	cmp	r0, #0
 8003a5a:	d12d      	bne.n	8003ab8 <queues2_execute+0x78>
 8003a5c:	b662      	cpsie	i
 8003a5e:	2441      	movs	r4, #65	; 0x41
 8003a60:	0021      	movs	r1, r4
 8003a62:	3401      	adds	r4, #1
 8003a64:	4a72      	ldr	r2, [pc, #456]	; (8003c30 <queues2_execute+0x1f0>)
 8003a66:	0028      	movs	r0, r5
 8003a68:	b2e4      	uxtb	r4, r4
 8003a6a:	f7fe fbf1 	bl	8002250 <chOQPutTimeout>
 8003a6e:	2c45      	cmp	r4, #69	; 0x45
 8003a70:	d1f6      	bne.n	8003a60 <queues2_execute+0x20>
 8003a72:	b672      	cpsid	i
 8003a74:	68a9      	ldr	r1, [r5, #8]
 8003a76:	2002      	movs	r0, #2
 8003a78:	424b      	negs	r3, r1
 8003a7a:	4159      	adcs	r1, r3
 8003a7c:	b2c9      	uxtb	r1, r1
 8003a7e:	f7fc fe87 	bl	8000790 <_test_assert>
 8003a82:	1e06      	subs	r6, r0, #0
 8003a84:	d118      	bne.n	8003ab8 <queues2_execute+0x78>
 8003a86:	b662      	cpsie	i
 8003a88:	2404      	movs	r4, #4
 8003a8a:	b672      	cpsid	i
 8003a8c:	0028      	movs	r0, r5
 8003a8e:	f7fd f8a7 	bl	8000be0 <chOQGetI>
 8003a92:	b662      	cpsie	i
 8003a94:	b2c0      	uxtb	r0, r0
 8003a96:	3c01      	subs	r4, #1
 8003a98:	f7fc fe92 	bl	80007c0 <test_emit_token>
 8003a9c:	2c00      	cmp	r4, #0
 8003a9e:	d1f4      	bne.n	8003a8a <queues2_execute+0x4a>
 8003aa0:	b672      	cpsid	i
 8003aa2:	696b      	ldr	r3, [r5, #20]
 8003aa4:	69aa      	ldr	r2, [r5, #24]
 8003aa6:	4293      	cmp	r3, r2
 8003aa8:	d100      	bne.n	8003aac <queues2_execute+0x6c>
 8003aaa:	e0ba      	b.n	8003c22 <queues2_execute+0x1e2>
 8003aac:	0031      	movs	r1, r6
 8003aae:	2003      	movs	r0, #3
 8003ab0:	f7fc fe6e 	bl	8000790 <_test_assert>
 8003ab4:	2800      	cmp	r0, #0
 8003ab6:	d007      	beq.n	8003ac8 <queues2_execute+0x88>
 8003ab8:	b662      	cpsie	i
 8003aba:	b002      	add	sp, #8
 8003abc:	bd70      	pop	{r4, r5, r6, pc}
 8003abe:	68a9      	ldr	r1, [r5, #8]
 8003ac0:	1e4b      	subs	r3, r1, #1
 8003ac2:	4199      	sbcs	r1, r3
 8003ac4:	b2c9      	uxtb	r1, r1
 8003ac6:	e7c4      	b.n	8003a52 <queues2_execute+0x12>
 8003ac8:	b662      	cpsie	i
 8003aca:	495a      	ldr	r1, [pc, #360]	; (8003c34 <queues2_execute+0x1f4>)
 8003acc:	2004      	movs	r0, #4
 8003ace:	f7fc fe37 	bl	8000740 <_test_assert_sequence>
 8003ad2:	2800      	cmp	r0, #0
 8003ad4:	d1f1      	bne.n	8003aba <queues2_execute+0x7a>
 8003ad6:	b672      	cpsid	i
 8003ad8:	0028      	movs	r0, r5
 8003ada:	f7fd f881 	bl	8000be0 <chOQGetI>
 8003ade:	3003      	adds	r0, #3
 8003ae0:	4241      	negs	r1, r0
 8003ae2:	4141      	adcs	r1, r0
 8003ae4:	2005      	movs	r0, #5
 8003ae6:	b2c9      	uxtb	r1, r1
 8003ae8:	f7fc fe52 	bl	8000790 <_test_assert>
 8003aec:	2800      	cmp	r0, #0
 8003aee:	d1e3      	bne.n	8003ab8 <queues2_execute+0x78>
 8003af0:	b662      	cpsie	i
 8003af2:	4c51      	ldr	r4, [pc, #324]	; (8003c38 <queues2_execute+0x1f8>)
 8003af4:	2300      	movs	r3, #0
 8003af6:	0021      	movs	r1, r4
 8003af8:	2208      	movs	r2, #8
 8003afa:	0028      	movs	r0, r5
 8003afc:	f7fe fb58 	bl	80021b0 <chOQWriteTimeout>
 8003b00:	3804      	subs	r0, #4
 8003b02:	4241      	negs	r1, r0
 8003b04:	4141      	adcs	r1, r0
 8003b06:	2006      	movs	r0, #6
 8003b08:	b2c9      	uxtb	r1, r1
 8003b0a:	f7fc fe41 	bl	8000790 <_test_assert>
 8003b0e:	2800      	cmp	r0, #0
 8003b10:	d1d3      	bne.n	8003aba <queues2_execute+0x7a>
 8003b12:	b672      	cpsid	i
 8003b14:	68a9      	ldr	r1, [r5, #8]
 8003b16:	3007      	adds	r0, #7
 8003b18:	424b      	negs	r3, r1
 8003b1a:	4159      	adcs	r1, r3
 8003b1c:	b2c9      	uxtb	r1, r1
 8003b1e:	f7fc fe37 	bl	8000790 <_test_assert>
 8003b22:	1e03      	subs	r3, r0, #0
 8003b24:	d1c8      	bne.n	8003ab8 <queues2_execute+0x78>
 8003b26:	b662      	cpsie	i
 8003b28:	0020      	movs	r0, r4
 8003b2a:	21a4      	movs	r1, #164	; 0xa4
 8003b2c:	4a43      	ldr	r2, [pc, #268]	; (8003c3c <queues2_execute+0x1fc>)
 8003b2e:	3849      	subs	r0, #73	; 0x49
 8003b30:	6992      	ldr	r2, [r2, #24]
 8003b32:	0049      	lsls	r1, r1, #1
 8003b34:	6892      	ldr	r2, [r2, #8]
 8003b36:	38ff      	subs	r0, #255	; 0xff
 8003b38:	9300      	str	r3, [sp, #0]
 8003b3a:	3201      	adds	r2, #1
 8003b3c:	4b40      	ldr	r3, [pc, #256]	; (8003c40 <queues2_execute+0x200>)
 8003b3e:	f7fd fe3f 	bl	80017c0 <chThdCreateStatic>
 8003b42:	4b40      	ldr	r3, [pc, #256]	; (8003c44 <queues2_execute+0x204>)
 8003b44:	6018      	str	r0, [r3, #0]
 8003b46:	b672      	cpsid	i
 8003b48:	692b      	ldr	r3, [r5, #16]
 8003b4a:	68ea      	ldr	r2, [r5, #12]
 8003b4c:	2008      	movs	r0, #8
 8003b4e:	1a99      	subs	r1, r3, r2
 8003b50:	68ab      	ldr	r3, [r5, #8]
 8003b52:	1ac9      	subs	r1, r1, r3
 8003b54:	3904      	subs	r1, #4
 8003b56:	424b      	negs	r3, r1
 8003b58:	4159      	adcs	r1, r3
 8003b5a:	b2c9      	uxtb	r1, r1
 8003b5c:	f7fc fe18 	bl	8000790 <_test_assert>
 8003b60:	2800      	cmp	r0, #0
 8003b62:	d1a9      	bne.n	8003ab8 <queues2_execute+0x78>
 8003b64:	b662      	cpsie	i
 8003b66:	f7ff fd13 	bl	8003590 <test_wait_threads>
 8003b6a:	b672      	cpsid	i
 8003b6c:	68eb      	ldr	r3, [r5, #12]
 8003b6e:	692a      	ldr	r2, [r5, #16]
 8003b70:	6828      	ldr	r0, [r5, #0]
 8003b72:	61ab      	str	r3, [r5, #24]
 8003b74:	616b      	str	r3, [r5, #20]
 8003b76:	1ad3      	subs	r3, r2, r3
 8003b78:	60ab      	str	r3, [r5, #8]
 8003b7a:	42a8      	cmp	r0, r5
 8003b7c:	d00a      	beq.n	8003b94 <queues2_execute+0x154>
 8003b7e:	2602      	movs	r6, #2
 8003b80:	4276      	negs	r6, r6
 8003b82:	6803      	ldr	r3, [r0, #0]
 8003b84:	605d      	str	r5, [r3, #4]
 8003b86:	602b      	str	r3, [r5, #0]
 8003b88:	6206      	str	r6, [r0, #32]
 8003b8a:	f7fc ffe1 	bl	8000b50 <chSchReadyI>
 8003b8e:	6828      	ldr	r0, [r5, #0]
 8003b90:	42a8      	cmp	r0, r5
 8003b92:	d1f6      	bne.n	8003b82 <queues2_execute+0x142>
 8003b94:	b662      	cpsie	i
 8003b96:	b672      	cpsid	i
 8003b98:	692b      	ldr	r3, [r5, #16]
 8003b9a:	68ea      	ldr	r2, [r5, #12]
 8003b9c:	2009      	movs	r0, #9
 8003b9e:	1a99      	subs	r1, r3, r2
 8003ba0:	68ab      	ldr	r3, [r5, #8]
 8003ba2:	1ac9      	subs	r1, r1, r3
 8003ba4:	424b      	negs	r3, r1
 8003ba6:	4159      	adcs	r1, r3
 8003ba8:	b2c9      	uxtb	r1, r1
 8003baa:	f7fc fdf1 	bl	8000790 <_test_assert>
 8003bae:	1e03      	subs	r3, r0, #0
 8003bb0:	d000      	beq.n	8003bb4 <queues2_execute+0x174>
 8003bb2:	e781      	b.n	8003ab8 <queues2_execute+0x78>
 8003bb4:	b662      	cpsie	i
 8003bb6:	2202      	movs	r2, #2
 8003bb8:	0021      	movs	r1, r4
 8003bba:	0028      	movs	r0, r5
 8003bbc:	f7fe faf8 	bl	80021b0 <chOQWriteTimeout>
 8003bc0:	1e81      	subs	r1, r0, #2
 8003bc2:	4248      	negs	r0, r1
 8003bc4:	4141      	adcs	r1, r0
 8003bc6:	200a      	movs	r0, #10
 8003bc8:	b2c9      	uxtb	r1, r1
 8003bca:	f7fc fde1 	bl	8000790 <_test_assert>
 8003bce:	1e03      	subs	r3, r0, #0
 8003bd0:	d000      	beq.n	8003bd4 <queues2_execute+0x194>
 8003bd2:	e772      	b.n	8003aba <queues2_execute+0x7a>
 8003bd4:	0021      	movs	r1, r4
 8003bd6:	2202      	movs	r2, #2
 8003bd8:	0028      	movs	r0, r5
 8003bda:	f7fe fae9 	bl	80021b0 <chOQWriteTimeout>
 8003bde:	1e81      	subs	r1, r0, #2
 8003be0:	4248      	negs	r0, r1
 8003be2:	4141      	adcs	r1, r0
 8003be4:	200b      	movs	r0, #11
 8003be6:	b2c9      	uxtb	r1, r1
 8003be8:	f7fc fdd2 	bl	8000790 <_test_assert>
 8003bec:	2800      	cmp	r0, #0
 8003bee:	d000      	beq.n	8003bf2 <queues2_execute+0x1b2>
 8003bf0:	e763      	b.n	8003aba <queues2_execute+0x7a>
 8003bf2:	b672      	cpsid	i
 8003bf4:	68a9      	ldr	r1, [r5, #8]
 8003bf6:	300c      	adds	r0, #12
 8003bf8:	424b      	negs	r3, r1
 8003bfa:	4159      	adcs	r1, r3
 8003bfc:	b2c9      	uxtb	r1, r1
 8003bfe:	f7fc fdc7 	bl	8000790 <_test_assert>
 8003c02:	1e01      	subs	r1, r0, #0
 8003c04:	d000      	beq.n	8003c08 <queues2_execute+0x1c8>
 8003c06:	e757      	b.n	8003ab8 <queues2_execute+0x78>
 8003c08:	b662      	cpsie	i
 8003c0a:	220a      	movs	r2, #10
 8003c0c:	0028      	movs	r0, r5
 8003c0e:	f7fe fb1f 	bl	8002250 <chOQPutTimeout>
 8003c12:	1c41      	adds	r1, r0, #1
 8003c14:	4248      	negs	r0, r1
 8003c16:	4141      	adcs	r1, r0
 8003c18:	200d      	movs	r0, #13
 8003c1a:	b2c9      	uxtb	r1, r1
 8003c1c:	f7fc fdb8 	bl	8000790 <_test_assert>
 8003c20:	e74b      	b.n	8003aba <queues2_execute+0x7a>
 8003c22:	68ae      	ldr	r6, [r5, #8]
 8003c24:	1e73      	subs	r3, r6, #1
 8003c26:	419e      	sbcs	r6, r3
 8003c28:	b2f6      	uxtb	r6, r6
 8003c2a:	e73f      	b.n	8003aac <queues2_execute+0x6c>
 8003c2c:	20000688 	.word	0x20000688
 8003c30:	0000ffff 	.word	0x0000ffff
 8003c34:	08005b50 	.word	0x08005b50
 8003c38:	20000a80 	.word	0x20000a80
 8003c3c:	20000738 	.word	0x20000738
 8003c40:	080022a1 	.word	0x080022a1
 8003c44:	20000fcc 	.word	0x20000fcc
	...

08003c50 <queues1_execute>:
 8003c50:	b570      	push	{r4, r5, r6, lr}
 8003c52:	b082      	sub	sp, #8
 8003c54:	b672      	cpsid	i
 8003c56:	4c8d      	ldr	r4, [pc, #564]	; (8003e8c <queues1_execute+0x23c>)
 8003c58:	2001      	movs	r0, #1
 8003c5a:	68a1      	ldr	r1, [r4, #8]
 8003c5c:	424b      	negs	r3, r1
 8003c5e:	4159      	adcs	r1, r3
 8003c60:	b2c9      	uxtb	r1, r1
 8003c62:	f7fc fd95 	bl	8000790 <_test_assert>
 8003c66:	1e05      	subs	r5, r0, #0
 8003c68:	d11e      	bne.n	8003ca8 <queues1_execute+0x58>
 8003c6a:	b662      	cpsie	i
 8003c6c:	b672      	cpsid	i
 8003c6e:	2141      	movs	r1, #65	; 0x41
 8003c70:	0020      	movs	r0, r4
 8003c72:	f7fc ff8d 	bl	8000b90 <chIQPutI>
 8003c76:	2142      	movs	r1, #66	; 0x42
 8003c78:	0020      	movs	r0, r4
 8003c7a:	f7fc ff89 	bl	8000b90 <chIQPutI>
 8003c7e:	2143      	movs	r1, #67	; 0x43
 8003c80:	0020      	movs	r0, r4
 8003c82:	f7fc ff85 	bl	8000b90 <chIQPutI>
 8003c86:	2144      	movs	r1, #68	; 0x44
 8003c88:	0020      	movs	r0, r4
 8003c8a:	f7fc ff81 	bl	8000b90 <chIQPutI>
 8003c8e:	b662      	cpsie	i
 8003c90:	b672      	cpsid	i
 8003c92:	69a3      	ldr	r3, [r4, #24]
 8003c94:	6962      	ldr	r2, [r4, #20]
 8003c96:	4293      	cmp	r3, r2
 8003c98:	d100      	bne.n	8003c9c <queues1_execute+0x4c>
 8003c9a:	e0ea      	b.n	8003e72 <queues1_execute+0x222>
 8003c9c:	0029      	movs	r1, r5
 8003c9e:	2002      	movs	r0, #2
 8003ca0:	f7fc fd76 	bl	8000790 <_test_assert>
 8003ca4:	2800      	cmp	r0, #0
 8003ca6:	d002      	beq.n	8003cae <queues1_execute+0x5e>
 8003ca8:	b662      	cpsie	i
 8003caa:	b002      	add	sp, #8
 8003cac:	bd70      	pop	{r4, r5, r6, pc}
 8003cae:	b662      	cpsie	i
 8003cb0:	b672      	cpsid	i
 8003cb2:	2100      	movs	r1, #0
 8003cb4:	0020      	movs	r0, r4
 8003cb6:	f7fc ff6b 	bl	8000b90 <chIQPutI>
 8003cba:	3004      	adds	r0, #4
 8003cbc:	4241      	negs	r1, r0
 8003cbe:	4141      	adcs	r1, r0
 8003cc0:	2003      	movs	r0, #3
 8003cc2:	b2c9      	uxtb	r1, r1
 8003cc4:	f7fc fd64 	bl	8000790 <_test_assert>
 8003cc8:	2800      	cmp	r0, #0
 8003cca:	d1ed      	bne.n	8003ca8 <queues1_execute+0x58>
 8003ccc:	b662      	cpsie	i
 8003cce:	2504      	movs	r5, #4
 8003cd0:	496f      	ldr	r1, [pc, #444]	; (8003e90 <queues1_execute+0x240>)
 8003cd2:	0020      	movs	r0, r4
 8003cd4:	f7fe fb4c 	bl	8002370 <chIQGetTimeout>
 8003cd8:	3d01      	subs	r5, #1
 8003cda:	b2c0      	uxtb	r0, r0
 8003cdc:	f7fc fd70 	bl	80007c0 <test_emit_token>
 8003ce0:	2d00      	cmp	r5, #0
 8003ce2:	d1f5      	bne.n	8003cd0 <queues1_execute+0x80>
 8003ce4:	b672      	cpsid	i
 8003ce6:	68a1      	ldr	r1, [r4, #8]
 8003ce8:	2004      	movs	r0, #4
 8003cea:	424b      	negs	r3, r1
 8003cec:	4159      	adcs	r1, r3
 8003cee:	b2c9      	uxtb	r1, r1
 8003cf0:	f7fc fd4e 	bl	8000790 <_test_assert>
 8003cf4:	2800      	cmp	r0, #0
 8003cf6:	d1d7      	bne.n	8003ca8 <queues1_execute+0x58>
 8003cf8:	b662      	cpsie	i
 8003cfa:	4966      	ldr	r1, [pc, #408]	; (8003e94 <queues1_execute+0x244>)
 8003cfc:	2005      	movs	r0, #5
 8003cfe:	f7fc fd1f 	bl	8000740 <_test_assert_sequence>
 8003d02:	2800      	cmp	r0, #0
 8003d04:	d1d1      	bne.n	8003caa <queues1_execute+0x5a>
 8003d06:	b672      	cpsid	i
 8003d08:	2141      	movs	r1, #65	; 0x41
 8003d0a:	0020      	movs	r0, r4
 8003d0c:	f7fc ff40 	bl	8000b90 <chIQPutI>
 8003d10:	2142      	movs	r1, #66	; 0x42
 8003d12:	0020      	movs	r0, r4
 8003d14:	f7fc ff3c 	bl	8000b90 <chIQPutI>
 8003d18:	2143      	movs	r1, #67	; 0x43
 8003d1a:	0020      	movs	r0, r4
 8003d1c:	f7fc ff38 	bl	8000b90 <chIQPutI>
 8003d20:	2144      	movs	r1, #68	; 0x44
 8003d22:	0020      	movs	r0, r4
 8003d24:	f7fc ff34 	bl	8000b90 <chIQPutI>
 8003d28:	b662      	cpsie	i
 8003d2a:	4e5b      	ldr	r6, [pc, #364]	; (8003e98 <queues1_execute+0x248>)
 8003d2c:	2300      	movs	r3, #0
 8003d2e:	0031      	movs	r1, r6
 8003d30:	2208      	movs	r2, #8
 8003d32:	0020      	movs	r0, r4
 8003d34:	f7fe fad4 	bl	80022e0 <chIQReadTimeout>
 8003d38:	3804      	subs	r0, #4
 8003d3a:	4241      	negs	r1, r0
 8003d3c:	4141      	adcs	r1, r0
 8003d3e:	2006      	movs	r0, #6
 8003d40:	b2c9      	uxtb	r1, r1
 8003d42:	f7fc fd25 	bl	8000790 <_test_assert>
 8003d46:	2800      	cmp	r0, #0
 8003d48:	d1af      	bne.n	8003caa <queues1_execute+0x5a>
 8003d4a:	b672      	cpsid	i
 8003d4c:	68a1      	ldr	r1, [r4, #8]
 8003d4e:	3007      	adds	r0, #7
 8003d50:	424b      	negs	r3, r1
 8003d52:	4159      	adcs	r1, r3
 8003d54:	b2c9      	uxtb	r1, r1
 8003d56:	f7fc fd1b 	bl	8000790 <_test_assert>
 8003d5a:	2800      	cmp	r0, #0
 8003d5c:	d1a4      	bne.n	8003ca8 <queues1_execute+0x58>
 8003d5e:	b662      	cpsie	i
 8003d60:	b672      	cpsid	i
 8003d62:	2141      	movs	r1, #65	; 0x41
 8003d64:	0020      	movs	r0, r4
 8003d66:	f7fc ff13 	bl	8000b90 <chIQPutI>
 8003d6a:	2142      	movs	r1, #66	; 0x42
 8003d6c:	0020      	movs	r0, r4
 8003d6e:	f7fc ff0f 	bl	8000b90 <chIQPutI>
 8003d72:	2143      	movs	r1, #67	; 0x43
 8003d74:	0020      	movs	r0, r4
 8003d76:	f7fc ff0b 	bl	8000b90 <chIQPutI>
 8003d7a:	2144      	movs	r1, #68	; 0x44
 8003d7c:	0020      	movs	r0, r4
 8003d7e:	f7fc ff07 	bl	8000b90 <chIQPutI>
 8003d82:	b662      	cpsie	i
 8003d84:	2300      	movs	r3, #0
 8003d86:	0031      	movs	r1, r6
 8003d88:	2202      	movs	r2, #2
 8003d8a:	0020      	movs	r0, r4
 8003d8c:	f7fe faa8 	bl	80022e0 <chIQReadTimeout>
 8003d90:	1e81      	subs	r1, r0, #2
 8003d92:	4248      	negs	r0, r1
 8003d94:	4141      	adcs	r1, r0
 8003d96:	2008      	movs	r0, #8
 8003d98:	b2c9      	uxtb	r1, r1
 8003d9a:	f7fc fcf9 	bl	8000790 <_test_assert>
 8003d9e:	2800      	cmp	r0, #0
 8003da0:	d000      	beq.n	8003da4 <queues1_execute+0x154>
 8003da2:	e782      	b.n	8003caa <queues1_execute+0x5a>
 8003da4:	0031      	movs	r1, r6
 8003da6:	2300      	movs	r3, #0
 8003da8:	2202      	movs	r2, #2
 8003daa:	0020      	movs	r0, r4
 8003dac:	f7fe fa98 	bl	80022e0 <chIQReadTimeout>
 8003db0:	1e81      	subs	r1, r0, #2
 8003db2:	4248      	negs	r0, r1
 8003db4:	4141      	adcs	r1, r0
 8003db6:	2009      	movs	r0, #9
 8003db8:	b2c9      	uxtb	r1, r1
 8003dba:	f7fc fce9 	bl	8000790 <_test_assert>
 8003dbe:	2800      	cmp	r0, #0
 8003dc0:	d000      	beq.n	8003dc4 <queues1_execute+0x174>
 8003dc2:	e772      	b.n	8003caa <queues1_execute+0x5a>
 8003dc4:	b672      	cpsid	i
 8003dc6:	68a1      	ldr	r1, [r4, #8]
 8003dc8:	300a      	adds	r0, #10
 8003dca:	424b      	negs	r3, r1
 8003dcc:	4159      	adcs	r1, r3
 8003dce:	b2c9      	uxtb	r1, r1
 8003dd0:	f7fc fcde 	bl	8000790 <_test_assert>
 8003dd4:	2800      	cmp	r0, #0
 8003dd6:	d000      	beq.n	8003dda <queues1_execute+0x18a>
 8003dd8:	e766      	b.n	8003ca8 <queues1_execute+0x58>
 8003dda:	b662      	cpsie	i
 8003ddc:	b672      	cpsid	i
 8003dde:	0029      	movs	r1, r5
 8003de0:	0020      	movs	r0, r4
 8003de2:	f7fc fed5 	bl	8000b90 <chIQPutI>
 8003de6:	68e3      	ldr	r3, [r4, #12]
 8003de8:	6820      	ldr	r0, [r4, #0]
 8003dea:	61a3      	str	r3, [r4, #24]
 8003dec:	6163      	str	r3, [r4, #20]
 8003dee:	60a5      	str	r5, [r4, #8]
 8003df0:	42a0      	cmp	r0, r4
 8003df2:	d00a      	beq.n	8003e0a <queues1_execute+0x1ba>
 8003df4:	2502      	movs	r5, #2
 8003df6:	426d      	negs	r5, r5
 8003df8:	6803      	ldr	r3, [r0, #0]
 8003dfa:	605c      	str	r4, [r3, #4]
 8003dfc:	6023      	str	r3, [r4, #0]
 8003dfe:	6205      	str	r5, [r0, #32]
 8003e00:	f7fc fea6 	bl	8000b50 <chSchReadyI>
 8003e04:	6820      	ldr	r0, [r4, #0]
 8003e06:	42a0      	cmp	r0, r4
 8003e08:	d1f6      	bne.n	8003df8 <queues1_execute+0x1a8>
 8003e0a:	b662      	cpsie	i
 8003e0c:	b672      	cpsid	i
 8003e0e:	68a1      	ldr	r1, [r4, #8]
 8003e10:	200b      	movs	r0, #11
 8003e12:	424b      	negs	r3, r1
 8003e14:	4159      	adcs	r1, r3
 8003e16:	b2c9      	uxtb	r1, r1
 8003e18:	f7fc fcba 	bl	8000790 <_test_assert>
 8003e1c:	2800      	cmp	r0, #0
 8003e1e:	d000      	beq.n	8003e22 <queues1_execute+0x1d2>
 8003e20:	e742      	b.n	8003ca8 <queues1_execute+0x58>
 8003e22:	b662      	cpsie	i
 8003e24:	21a4      	movs	r1, #164	; 0xa4
 8003e26:	4b1d      	ldr	r3, [pc, #116]	; (8003e9c <queues1_execute+0x24c>)
 8003e28:	0049      	lsls	r1, r1, #1
 8003e2a:	699b      	ldr	r3, [r3, #24]
 8003e2c:	689a      	ldr	r2, [r3, #8]
 8003e2e:	9000      	str	r0, [sp, #0]
 8003e30:	3201      	adds	r2, #1
 8003e32:	4b1b      	ldr	r3, [pc, #108]	; (8003ea0 <queues1_execute+0x250>)
 8003e34:	481b      	ldr	r0, [pc, #108]	; (8003ea4 <queues1_execute+0x254>)
 8003e36:	f7fd fcc3 	bl	80017c0 <chThdCreateStatic>
 8003e3a:	4b1b      	ldr	r3, [pc, #108]	; (8003ea8 <queues1_execute+0x258>)
 8003e3c:	6018      	str	r0, [r3, #0]
 8003e3e:	b672      	cpsid	i
 8003e40:	68a1      	ldr	r1, [r4, #8]
 8003e42:	200c      	movs	r0, #12
 8003e44:	424b      	negs	r3, r1
 8003e46:	4159      	adcs	r1, r3
 8003e48:	b2c9      	uxtb	r1, r1
 8003e4a:	f7fc fca1 	bl	8000790 <_test_assert>
 8003e4e:	2800      	cmp	r0, #0
 8003e50:	d000      	beq.n	8003e54 <queues1_execute+0x204>
 8003e52:	e729      	b.n	8003ca8 <queues1_execute+0x58>
 8003e54:	b662      	cpsie	i
 8003e56:	f7ff fb9b 	bl	8003590 <test_wait_threads>
 8003e5a:	210a      	movs	r1, #10
 8003e5c:	0020      	movs	r0, r4
 8003e5e:	f7fe fa87 	bl	8002370 <chIQGetTimeout>
 8003e62:	1c41      	adds	r1, r0, #1
 8003e64:	4248      	negs	r0, r1
 8003e66:	4141      	adcs	r1, r0
 8003e68:	200d      	movs	r0, #13
 8003e6a:	b2c9      	uxtb	r1, r1
 8003e6c:	f7fc fc90 	bl	8000790 <_test_assert>
 8003e70:	e71b      	b.n	8003caa <queues1_execute+0x5a>
 8003e72:	68a5      	ldr	r5, [r4, #8]
 8003e74:	2002      	movs	r0, #2
 8003e76:	1e6b      	subs	r3, r5, #1
 8003e78:	419d      	sbcs	r5, r3
 8003e7a:	b2ed      	uxtb	r5, r5
 8003e7c:	0029      	movs	r1, r5
 8003e7e:	f7fc fc87 	bl	8000790 <_test_assert>
 8003e82:	2800      	cmp	r0, #0
 8003e84:	d000      	beq.n	8003e88 <queues1_execute+0x238>
 8003e86:	e70f      	b.n	8003ca8 <queues1_execute+0x58>
 8003e88:	e711      	b.n	8003cae <queues1_execute+0x5e>
 8003e8a:	46c0      	nop			; (mov r8, r8)
 8003e8c:	20000610 	.word	0x20000610
 8003e90:	0000ffff 	.word	0x0000ffff
 8003e94:	08005b50 	.word	0x08005b50
 8003e98:	20000a80 	.word	0x20000a80
 8003e9c:	20000738 	.word	0x20000738
 8003ea0:	080023b1 	.word	0x080023b1
 8003ea4:	20000938 	.word	0x20000938
 8003ea8:	20000fcc 	.word	0x20000fcc
 8003eac:	00000000 	.word	0x00000000

08003eb0 <dyn2_execute>:
 8003eb0:	4b33      	ldr	r3, [pc, #204]	; (8003f80 <dyn2_execute+0xd0>)
 8003eb2:	b570      	push	{r4, r5, r6, lr}
 8003eb4:	699b      	ldr	r3, [r3, #24]
 8003eb6:	4a33      	ldr	r2, [pc, #204]	; (8003f84 <dyn2_execute+0xd4>)
 8003eb8:	689e      	ldr	r6, [r3, #8]
 8003eba:	2300      	movs	r3, #0
 8003ebc:	4c32      	ldr	r4, [pc, #200]	; (8003f88 <dyn2_execute+0xd8>)
 8003ebe:	4933      	ldr	r1, [pc, #204]	; (8003f8c <dyn2_execute+0xdc>)
 8003ec0:	b672      	cpsid	i
 8003ec2:	6820      	ldr	r0, [r4, #0]
 8003ec4:	6010      	str	r0, [r2, #0]
 8003ec6:	6022      	str	r2, [r4, #0]
 8003ec8:	b662      	cpsie	i
 8003eca:	3304      	adds	r3, #4
 8003ecc:	2b10      	cmp	r3, #16
 8003ece:	d001      	beq.n	8003ed4 <dyn2_execute+0x24>
 8003ed0:	585a      	ldr	r2, [r3, r1]
 8003ed2:	e7f5      	b.n	8003ec0 <dyn2_execute+0x10>
 8003ed4:	492e      	ldr	r1, [pc, #184]	; (8003f90 <dyn2_execute+0xe0>)
 8003ed6:	1e70      	subs	r0, r6, #1
 8003ed8:	f7fd fbda 	bl	8001690 <chThdCreateFromMemoryPool.constprop.51>
 8003edc:	4d2d      	ldr	r5, [pc, #180]	; (8003f94 <dyn2_execute+0xe4>)
 8003ede:	492e      	ldr	r1, [pc, #184]	; (8003f98 <dyn2_execute+0xe8>)
 8003ee0:	6028      	str	r0, [r5, #0]
 8003ee2:	1eb0      	subs	r0, r6, #2
 8003ee4:	f7fd fbd4 	bl	8001690 <chThdCreateFromMemoryPool.constprop.51>
 8003ee8:	492c      	ldr	r1, [pc, #176]	; (8003f9c <dyn2_execute+0xec>)
 8003eea:	6068      	str	r0, [r5, #4]
 8003eec:	1ef0      	subs	r0, r6, #3
 8003eee:	f7fd fbcf 	bl	8001690 <chThdCreateFromMemoryPool.constprop.51>
 8003ef2:	492b      	ldr	r1, [pc, #172]	; (8003fa0 <dyn2_execute+0xf0>)
 8003ef4:	60a8      	str	r0, [r5, #8]
 8003ef6:	1f30      	subs	r0, r6, #4
 8003ef8:	f7fd fbca 	bl	8001690 <chThdCreateFromMemoryPool.constprop.51>
 8003efc:	4929      	ldr	r1, [pc, #164]	; (8003fa4 <dyn2_execute+0xf4>)
 8003efe:	60e8      	str	r0, [r5, #12]
 8003f00:	1f70      	subs	r0, r6, #5
 8003f02:	f7fd fbc5 	bl	8001690 <chThdCreateFromMemoryPool.constprop.51>
 8003f06:	682b      	ldr	r3, [r5, #0]
 8003f08:	6128      	str	r0, [r5, #16]
 8003f0a:	2b00      	cmp	r3, #0
 8003f0c:	d031      	beq.n	8003f72 <dyn2_execute+0xc2>
 8003f0e:	686b      	ldr	r3, [r5, #4]
 8003f10:	2b00      	cmp	r3, #0
 8003f12:	d02e      	beq.n	8003f72 <dyn2_execute+0xc2>
 8003f14:	68ab      	ldr	r3, [r5, #8]
 8003f16:	2b00      	cmp	r3, #0
 8003f18:	d02b      	beq.n	8003f72 <dyn2_execute+0xc2>
 8003f1a:	68eb      	ldr	r3, [r5, #12]
 8003f1c:	2b00      	cmp	r3, #0
 8003f1e:	d028      	beq.n	8003f72 <dyn2_execute+0xc2>
 8003f20:	4241      	negs	r1, r0
 8003f22:	4141      	adcs	r1, r0
 8003f24:	2001      	movs	r0, #1
 8003f26:	b2c9      	uxtb	r1, r1
 8003f28:	f7fc fc32 	bl	8000790 <_test_assert>
 8003f2c:	2800      	cmp	r0, #0
 8003f2e:	d126      	bne.n	8003f7e <dyn2_execute+0xce>
 8003f30:	f7ff fb2e 	bl	8003590 <test_wait_threads>
 8003f34:	491c      	ldr	r1, [pc, #112]	; (8003fa8 <dyn2_execute+0xf8>)
 8003f36:	2002      	movs	r0, #2
 8003f38:	f7fc fc02 	bl	8000740 <_test_assert_sequence>
 8003f3c:	2800      	cmp	r0, #0
 8003f3e:	d11e      	bne.n	8003f7e <dyn2_execute+0xce>
 8003f40:	2504      	movs	r5, #4
 8003f42:	0020      	movs	r0, r4
 8003f44:	f7fc fcdc 	bl	8000900 <chPoolAlloc>
 8003f48:	1e41      	subs	r1, r0, #1
 8003f4a:	4188      	sbcs	r0, r1
 8003f4c:	b2c1      	uxtb	r1, r0
 8003f4e:	2003      	movs	r0, #3
 8003f50:	f7fc fc1e 	bl	8000790 <_test_assert>
 8003f54:	2800      	cmp	r0, #0
 8003f56:	d112      	bne.n	8003f7e <dyn2_execute+0xce>
 8003f58:	3d01      	subs	r5, #1
 8003f5a:	2d00      	cmp	r5, #0
 8003f5c:	d1f1      	bne.n	8003f42 <dyn2_execute+0x92>
 8003f5e:	0020      	movs	r0, r4
 8003f60:	f7fc fcce 	bl	8000900 <chPoolAlloc>
 8003f64:	4241      	negs	r1, r0
 8003f66:	4141      	adcs	r1, r0
 8003f68:	2004      	movs	r0, #4
 8003f6a:	b2c9      	uxtb	r1, r1
 8003f6c:	f7fc fc10 	bl	8000790 <_test_assert>
 8003f70:	e005      	b.n	8003f7e <dyn2_execute+0xce>
 8003f72:	2100      	movs	r1, #0
 8003f74:	2001      	movs	r0, #1
 8003f76:	f7fc fc0b 	bl	8000790 <_test_assert>
 8003f7a:	2800      	cmp	r0, #0
 8003f7c:	d0d8      	beq.n	8003f30 <dyn2_execute+0x80>
 8003f7e:	bd70      	pop	{r4, r5, r6, pc}
 8003f80:	20000738 	.word	0x20000738
 8003f84:	20000938 	.word	0x20000938
 8003f88:	20000908 	.word	0x20000908
 8003f8c:	080062f0 	.word	0x080062f0
 8003f90:	08005790 	.word	0x08005790
 8003f94:	20000fcc 	.word	0x20000fcc
 8003f98:	08005780 	.word	0x08005780
 8003f9c:	08005784 	.word	0x08005784
 8003fa0:	08005788 	.word	0x08005788
 8003fa4:	080059d4 	.word	0x080059d4
 8003fa8:	08005b50 	.word	0x08005b50
 8003fac:	00000000 	.word	0x00000000

08003fb0 <dyn1_execute>:
 8003fb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003fb2:	4b2f      	ldr	r3, [pc, #188]	; (8004070 <dyn1_execute+0xc0>)
 8003fb4:	4e2f      	ldr	r6, [pc, #188]	; (8004074 <dyn1_execute+0xc4>)
 8003fb6:	699b      	ldr	r3, [r3, #24]
 8003fb8:	b083      	sub	sp, #12
 8003fba:	689d      	ldr	r5, [r3, #8]
 8003fbc:	4669      	mov	r1, sp
 8003fbe:	0030      	movs	r0, r6
 8003fc0:	f7fe fe7e 	bl	8002cc0 <chHeapStatus>
 8003fc4:	492c      	ldr	r1, [pc, #176]	; (8004078 <dyn1_execute+0xc8>)
 8003fc6:	1e68      	subs	r0, r5, #1
 8003fc8:	f7fe ff7a 	bl	8002ec0 <chThdCreateFromHeap.constprop.52>
 8003fcc:	4c2b      	ldr	r4, [pc, #172]	; (800407c <dyn1_execute+0xcc>)
 8003fce:	492c      	ldr	r1, [pc, #176]	; (8004080 <dyn1_execute+0xd0>)
 8003fd0:	6020      	str	r0, [r4, #0]
 8003fd2:	1ea8      	subs	r0, r5, #2
 8003fd4:	f7fe ff74 	bl	8002ec0 <chThdCreateFromHeap.constprop.52>
 8003fd8:	a901      	add	r1, sp, #4
 8003fda:	6060      	str	r0, [r4, #4]
 8003fdc:	0030      	movs	r0, r6
 8003fde:	f7fe fe6f 	bl	8002cc0 <chHeapStatus>
 8003fe2:	9901      	ldr	r1, [sp, #4]
 8003fe4:	0030      	movs	r0, r6
 8003fe6:	f7fe ff23 	bl	8002e30 <chHeapAlloc>
 8003fea:	4926      	ldr	r1, [pc, #152]	; (8004084 <dyn1_execute+0xd4>)
 8003fec:	0007      	movs	r7, r0
 8003fee:	1ee8      	subs	r0, r5, #3
 8003ff0:	f7fe ff66 	bl	8002ec0 <chThdCreateFromHeap.constprop.52>
 8003ff4:	60a0      	str	r0, [r4, #8]
 8003ff6:	0038      	movs	r0, r7
 8003ff8:	f7fe fe82 	bl	8002d00 <chHeapFree>
 8003ffc:	6823      	ldr	r3, [r4, #0]
 8003ffe:	2b00      	cmp	r3, #0
 8004000:	d02c      	beq.n	800405c <dyn1_execute+0xac>
 8004002:	6863      	ldr	r3, [r4, #4]
 8004004:	2100      	movs	r1, #0
 8004006:	2b00      	cmp	r3, #0
 8004008:	d002      	beq.n	8004010 <dyn1_execute+0x60>
 800400a:	68a3      	ldr	r3, [r4, #8]
 800400c:	2b00      	cmp	r3, #0
 800400e:	d027      	beq.n	8004060 <dyn1_execute+0xb0>
 8004010:	2001      	movs	r0, #1
 8004012:	f7fc fbbd 	bl	8000790 <_test_assert>
 8004016:	2800      	cmp	r0, #0
 8004018:	d001      	beq.n	800401e <dyn1_execute+0x6e>
 800401a:	b003      	add	sp, #12
 800401c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800401e:	f7ff fab7 	bl	8003590 <test_wait_threads>
 8004022:	4919      	ldr	r1, [pc, #100]	; (8004088 <dyn1_execute+0xd8>)
 8004024:	2002      	movs	r0, #2
 8004026:	f7fc fb8b 	bl	8000740 <_test_assert_sequence>
 800402a:	2800      	cmp	r0, #0
 800402c:	d1f5      	bne.n	800401a <dyn1_execute+0x6a>
 800402e:	a901      	add	r1, sp, #4
 8004030:	0030      	movs	r0, r6
 8004032:	f7fe fe45 	bl	8002cc0 <chHeapStatus>
 8004036:	3801      	subs	r0, #1
 8004038:	4241      	negs	r1, r0
 800403a:	4141      	adcs	r1, r0
 800403c:	2003      	movs	r0, #3
 800403e:	b2c9      	uxtb	r1, r1
 8004040:	f7fc fba6 	bl	8000790 <_test_assert>
 8004044:	2800      	cmp	r0, #0
 8004046:	d1e8      	bne.n	800401a <dyn1_execute+0x6a>
 8004048:	9b01      	ldr	r3, [sp, #4]
 800404a:	9a00      	ldr	r2, [sp, #0]
 800404c:	3004      	adds	r0, #4
 800404e:	1a99      	subs	r1, r3, r2
 8004050:	424b      	negs	r3, r1
 8004052:	4159      	adcs	r1, r3
 8004054:	b2c9      	uxtb	r1, r1
 8004056:	f7fc fb9b 	bl	8000790 <_test_assert>
 800405a:	e7de      	b.n	800401a <dyn1_execute+0x6a>
 800405c:	2100      	movs	r1, #0
 800405e:	e7d7      	b.n	8004010 <dyn1_execute+0x60>
 8004060:	68e3      	ldr	r3, [r4, #12]
 8004062:	2b00      	cmp	r3, #0
 8004064:	d1d4      	bne.n	8004010 <dyn1_execute+0x60>
 8004066:	6921      	ldr	r1, [r4, #16]
 8004068:	424b      	negs	r3, r1
 800406a:	4159      	adcs	r1, r3
 800406c:	b2c9      	uxtb	r1, r1
 800406e:	e7cf      	b.n	8004010 <dyn1_execute+0x60>
 8004070:	20000738 	.word	0x20000738
 8004074:	200008b0 	.word	0x200008b0
 8004078:	08005790 	.word	0x08005790
 800407c:	20000fcc 	.word	0x20000fcc
 8004080:	08005780 	.word	0x08005780
 8004084:	08005784 	.word	0x08005784
 8004088:	08005770 	.word	0x08005770
 800408c:	00000000 	.word	0x00000000

08004090 <evt2_execute>:
 8004090:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004092:	46de      	mov	lr, fp
 8004094:	4657      	mov	r7, sl
 8004096:	464e      	mov	r6, r9
 8004098:	4645      	mov	r5, r8
 800409a:	b5e0      	push	{r5, r6, r7, lr}
 800409c:	b08f      	sub	sp, #60	; 0x3c
 800409e:	b672      	cpsid	i
 80040a0:	2307      	movs	r3, #7
 80040a2:	4ca9      	ldr	r4, [pc, #676]	; (8004348 <evt2_execute+0x2b8>)
 80040a4:	69a2      	ldr	r2, [r4, #24]
 80040a6:	6b51      	ldr	r1, [r2, #52]	; 0x34
 80040a8:	430b      	orrs	r3, r1
 80040aa:	6353      	str	r3, [r2, #52]	; 0x34
 80040ac:	b662      	cpsie	i
 80040ae:	f7fd fc3f 	bl	8001930 <chEvtWaitOne.constprop.31>
 80040b2:	3801      	subs	r0, #1
 80040b4:	4241      	negs	r1, r0
 80040b6:	4141      	adcs	r1, r0
 80040b8:	2001      	movs	r0, #1
 80040ba:	b2c9      	uxtb	r1, r1
 80040bc:	f7fc fb68 	bl	8000790 <_test_assert>
 80040c0:	2800      	cmp	r0, #0
 80040c2:	d006      	beq.n	80040d2 <evt2_execute+0x42>
 80040c4:	b00f      	add	sp, #60	; 0x3c
 80040c6:	bc3c      	pop	{r2, r3, r4, r5}
 80040c8:	4690      	mov	r8, r2
 80040ca:	4699      	mov	r9, r3
 80040cc:	46a2      	mov	sl, r4
 80040ce:	46ab      	mov	fp, r5
 80040d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80040d2:	f7fd fc2d 	bl	8001930 <chEvtWaitOne.constprop.31>
 80040d6:	3802      	subs	r0, #2
 80040d8:	4241      	negs	r1, r0
 80040da:	4141      	adcs	r1, r0
 80040dc:	2002      	movs	r0, #2
 80040de:	b2c9      	uxtb	r1, r1
 80040e0:	f7fc fb56 	bl	8000790 <_test_assert>
 80040e4:	2800      	cmp	r0, #0
 80040e6:	d1ed      	bne.n	80040c4 <evt2_execute+0x34>
 80040e8:	f7fd fc22 	bl	8001930 <chEvtWaitOne.constprop.31>
 80040ec:	3804      	subs	r0, #4
 80040ee:	4241      	negs	r1, r0
 80040f0:	4141      	adcs	r1, r0
 80040f2:	2003      	movs	r0, #3
 80040f4:	b2c9      	uxtb	r1, r1
 80040f6:	f7fc fb4b 	bl	8000790 <_test_assert>
 80040fa:	2800      	cmp	r0, #0
 80040fc:	d1e2      	bne.n	80040c4 <evt2_execute+0x34>
 80040fe:	f7fc f8f7 	bl	80002f0 <chEvtGetAndClearEvents.constprop.35>
 8004102:	4241      	negs	r1, r0
 8004104:	4141      	adcs	r1, r0
 8004106:	2004      	movs	r0, #4
 8004108:	b2c9      	uxtb	r1, r1
 800410a:	f7fc fb41 	bl	8000790 <_test_assert>
 800410e:	2800      	cmp	r0, #0
 8004110:	d1d8      	bne.n	80040c4 <evt2_execute+0x34>
 8004112:	f7fe fa0d 	bl	8002530 <test_wait_tick>
 8004116:	b672      	cpsid	i
 8004118:	4b8c      	ldr	r3, [pc, #560]	; (800434c <evt2_execute+0x2bc>)
 800411a:	6a5f      	ldr	r7, [r3, #36]	; 0x24
 800411c:	469a      	mov	sl, r3
 800411e:	b2bf      	uxth	r7, r7
 8004120:	b662      	cpsie	i
 8004122:	4a8b      	ldr	r2, [pc, #556]	; (8004350 <evt2_execute+0x2c0>)
 8004124:	21a4      	movs	r1, #164	; 0xa4
 8004126:	4691      	mov	r9, r2
 8004128:	69a3      	ldr	r3, [r4, #24]
 800412a:	4e8a      	ldr	r6, [pc, #552]	; (8004354 <evt2_execute+0x2c4>)
 800412c:	689a      	ldr	r2, [r3, #8]
 800412e:	0049      	lsls	r1, r1, #1
 8004130:	3a01      	subs	r2, #1
 8004132:	9300      	str	r3, [sp, #0]
 8004134:	0030      	movs	r0, r6
 8004136:	464b      	mov	r3, r9
 8004138:	f7fd fb42 	bl	80017c0 <chThdCreateStatic>
 800413c:	4d86      	ldr	r5, [pc, #536]	; (8004358 <evt2_execute+0x2c8>)
 800413e:	6028      	str	r0, [r5, #0]
 8004140:	f7fd fbf6 	bl	8001930 <chEvtWaitOne.constprop.31>
 8004144:	003a      	movs	r2, r7
 8004146:	3732      	adds	r7, #50	; 0x32
 8004148:	3237      	adds	r2, #55	; 0x37
 800414a:	4680      	mov	r8, r0
 800414c:	b292      	uxth	r2, r2
 800414e:	b2b9      	uxth	r1, r7
 8004150:	2005      	movs	r0, #5
 8004152:	f7fc fad5 	bl	8000700 <_test_assert_time_window>
 8004156:	2800      	cmp	r0, #0
 8004158:	d1b4      	bne.n	80040c4 <evt2_execute+0x34>
 800415a:	4641      	mov	r1, r8
 800415c:	3901      	subs	r1, #1
 800415e:	424b      	negs	r3, r1
 8004160:	4159      	adcs	r1, r3
 8004162:	3006      	adds	r0, #6
 8004164:	b2c9      	uxtb	r1, r1
 8004166:	f7fc fb13 	bl	8000790 <_test_assert>
 800416a:	2800      	cmp	r0, #0
 800416c:	d1aa      	bne.n	80040c4 <evt2_execute+0x34>
 800416e:	f7fc f8bf 	bl	80002f0 <chEvtGetAndClearEvents.constprop.35>
 8004172:	4241      	negs	r1, r0
 8004174:	4141      	adcs	r1, r0
 8004176:	2007      	movs	r0, #7
 8004178:	b2c9      	uxtb	r1, r1
 800417a:	f7fc fb09 	bl	8000790 <_test_assert>
 800417e:	2800      	cmp	r0, #0
 8004180:	d1a0      	bne.n	80040c4 <evt2_execute+0x34>
 8004182:	f7ff fa05 	bl	8003590 <test_wait_threads>
 8004186:	b672      	cpsid	i
 8004188:	2305      	movs	r3, #5
 800418a:	69a2      	ldr	r2, [r4, #24]
 800418c:	6b51      	ldr	r1, [r2, #52]	; 0x34
 800418e:	430b      	orrs	r3, r1
 8004190:	6353      	str	r3, [r2, #52]	; 0x34
 8004192:	b662      	cpsie	i
 8004194:	f7fd fbe4 	bl	8001960 <chEvtWaitAny.constprop.30>
 8004198:	1f41      	subs	r1, r0, #5
 800419a:	4248      	negs	r0, r1
 800419c:	4141      	adcs	r1, r0
 800419e:	2008      	movs	r0, #8
 80041a0:	b2c9      	uxtb	r1, r1
 80041a2:	f7fc faf5 	bl	8000790 <_test_assert>
 80041a6:	2800      	cmp	r0, #0
 80041a8:	d000      	beq.n	80041ac <evt2_execute+0x11c>
 80041aa:	e78b      	b.n	80040c4 <evt2_execute+0x34>
 80041ac:	f7fc f8a0 	bl	80002f0 <chEvtGetAndClearEvents.constprop.35>
 80041b0:	4241      	negs	r1, r0
 80041b2:	4141      	adcs	r1, r0
 80041b4:	2009      	movs	r0, #9
 80041b6:	b2c9      	uxtb	r1, r1
 80041b8:	f7fc faea 	bl	8000790 <_test_assert>
 80041bc:	2800      	cmp	r0, #0
 80041be:	d000      	beq.n	80041c2 <evt2_execute+0x132>
 80041c0:	e780      	b.n	80040c4 <evt2_execute+0x34>
 80041c2:	f7fe f9b5 	bl	8002530 <test_wait_tick>
 80041c6:	b672      	cpsid	i
 80041c8:	4653      	mov	r3, sl
 80041ca:	6a5f      	ldr	r7, [r3, #36]	; 0x24
 80041cc:	b2bf      	uxth	r7, r7
 80041ce:	b662      	cpsie	i
 80041d0:	21a4      	movs	r1, #164	; 0xa4
 80041d2:	69a3      	ldr	r3, [r4, #24]
 80041d4:	0049      	lsls	r1, r1, #1
 80041d6:	689a      	ldr	r2, [r3, #8]
 80041d8:	0030      	movs	r0, r6
 80041da:	3a01      	subs	r2, #1
 80041dc:	9300      	str	r3, [sp, #0]
 80041de:	464b      	mov	r3, r9
 80041e0:	f7fd faee 	bl	80017c0 <chThdCreateStatic>
 80041e4:	6028      	str	r0, [r5, #0]
 80041e6:	f7fd fbbb 	bl	8001960 <chEvtWaitAny.constprop.30>
 80041ea:	003a      	movs	r2, r7
 80041ec:	0039      	movs	r1, r7
 80041ee:	3237      	adds	r2, #55	; 0x37
 80041f0:	3132      	adds	r1, #50	; 0x32
 80041f2:	4680      	mov	r8, r0
 80041f4:	b292      	uxth	r2, r2
 80041f6:	b289      	uxth	r1, r1
 80041f8:	200a      	movs	r0, #10
 80041fa:	f7fc fa81 	bl	8000700 <_test_assert_time_window>
 80041fe:	2800      	cmp	r0, #0
 8004200:	d000      	beq.n	8004204 <evt2_execute+0x174>
 8004202:	e75f      	b.n	80040c4 <evt2_execute+0x34>
 8004204:	4641      	mov	r1, r8
 8004206:	3901      	subs	r1, #1
 8004208:	424b      	negs	r3, r1
 800420a:	4159      	adcs	r1, r3
 800420c:	300b      	adds	r0, #11
 800420e:	b2c9      	uxtb	r1, r1
 8004210:	f7fc fabe 	bl	8000790 <_test_assert>
 8004214:	2800      	cmp	r0, #0
 8004216:	d000      	beq.n	800421a <evt2_execute+0x18a>
 8004218:	e754      	b.n	80040c4 <evt2_execute+0x34>
 800421a:	f7fc f869 	bl	80002f0 <chEvtGetAndClearEvents.constprop.35>
 800421e:	4241      	negs	r1, r0
 8004220:	4141      	adcs	r1, r0
 8004222:	200c      	movs	r0, #12
 8004224:	b2c9      	uxtb	r1, r1
 8004226:	f7fc fab3 	bl	8000790 <_test_assert>
 800422a:	1e07      	subs	r7, r0, #0
 800422c:	d000      	beq.n	8004230 <evt2_execute+0x1a0>
 800422e:	e749      	b.n	80040c4 <evt2_execute+0x34>
 8004230:	f7ff f9ae 	bl	8003590 <test_wait_threads>
 8004234:	4b49      	ldr	r3, [pc, #292]	; (800435c <evt2_execute+0x2cc>)
 8004236:	601b      	str	r3, [r3, #0]
 8004238:	4699      	mov	r9, r3
 800423a:	4b49      	ldr	r3, [pc, #292]	; (8004360 <evt2_execute+0x2d0>)
 800423c:	4698      	mov	r8, r3
 800423e:	601b      	str	r3, [r3, #0]
 8004240:	b672      	cpsid	i
 8004242:	ab04      	add	r3, sp, #16
 8004244:	469b      	mov	fp, r3
 8004246:	464b      	mov	r3, r9
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	465a      	mov	r2, fp
 800424c:	9304      	str	r3, [sp, #16]
 800424e:	464b      	mov	r3, r9
 8004250:	601a      	str	r2, [r3, #0]
 8004252:	465b      	mov	r3, fp
 8004254:	69a2      	ldr	r2, [r4, #24]
 8004256:	605a      	str	r2, [r3, #4]
 8004258:	465a      	mov	r2, fp
 800425a:	2301      	movs	r3, #1
 800425c:	6093      	str	r3, [r2, #8]
 800425e:	2301      	movs	r3, #1
 8004260:	425b      	negs	r3, r3
 8004262:	60d7      	str	r7, [r2, #12]
 8004264:	6113      	str	r3, [r2, #16]
 8004266:	b662      	cpsie	i
 8004268:	b672      	cpsid	i
 800426a:	aa09      	add	r2, sp, #36	; 0x24
 800426c:	4692      	mov	sl, r2
 800426e:	4642      	mov	r2, r8
 8004270:	6812      	ldr	r2, [r2, #0]
 8004272:	4651      	mov	r1, sl
 8004274:	9209      	str	r2, [sp, #36]	; 0x24
 8004276:	4642      	mov	r2, r8
 8004278:	6011      	str	r1, [r2, #0]
 800427a:	4652      	mov	r2, sl
 800427c:	69a1      	ldr	r1, [r4, #24]
 800427e:	6051      	str	r1, [r2, #4]
 8004280:	4651      	mov	r1, sl
 8004282:	2204      	movs	r2, #4
 8004284:	60cf      	str	r7, [r1, #12]
 8004286:	608a      	str	r2, [r1, #8]
 8004288:	610b      	str	r3, [r1, #16]
 800428a:	b662      	cpsie	i
 800428c:	f7fe f950 	bl	8002530 <test_wait_tick>
 8004290:	b672      	cpsid	i
 8004292:	4b2e      	ldr	r3, [pc, #184]	; (800434c <evt2_execute+0x2bc>)
 8004294:	6a5f      	ldr	r7, [r3, #36]	; 0x24
 8004296:	b2bf      	uxth	r7, r7
 8004298:	b662      	cpsie	i
 800429a:	003b      	movs	r3, r7
 800429c:	21a4      	movs	r1, #164	; 0xa4
 800429e:	3332      	adds	r3, #50	; 0x32
 80042a0:	b29b      	uxth	r3, r3
 80042a2:	9303      	str	r3, [sp, #12]
 80042a4:	69a3      	ldr	r3, [r4, #24]
 80042a6:	0049      	lsls	r1, r1, #1
 80042a8:	689a      	ldr	r2, [r3, #8]
 80042aa:	4b2e      	ldr	r3, [pc, #184]	; (8004364 <evt2_execute+0x2d4>)
 80042ac:	3a01      	subs	r2, #1
 80042ae:	9300      	str	r3, [sp, #0]
 80042b0:	0030      	movs	r0, r6
 80042b2:	4b2d      	ldr	r3, [pc, #180]	; (8004368 <evt2_execute+0x2d8>)
 80042b4:	f7fd fa84 	bl	80017c0 <chThdCreateStatic>
 80042b8:	69a4      	ldr	r4, [r4, #24]
 80042ba:	6028      	str	r0, [r5, #0]
 80042bc:	b672      	cpsid	i
 80042be:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80042c0:	2205      	movs	r2, #5
 80042c2:	0019      	movs	r1, r3
 80042c4:	4011      	ands	r1, r2
 80042c6:	4291      	cmp	r1, r2
 80042c8:	d004      	beq.n	80042d4 <evt2_execute+0x244>
 80042ca:	6222      	str	r2, [r4, #32]
 80042cc:	200b      	movs	r0, #11
 80042ce:	f7fd faa7 	bl	8001820 <chSchGoSleepS>
 80042d2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80042d4:	2205      	movs	r2, #5
 80042d6:	4393      	bics	r3, r2
 80042d8:	6363      	str	r3, [r4, #52]	; 0x34
 80042da:	b662      	cpsie	i
 80042dc:	003a      	movs	r2, r7
 80042de:	3237      	adds	r2, #55	; 0x37
 80042e0:	b292      	uxth	r2, r2
 80042e2:	9903      	ldr	r1, [sp, #12]
 80042e4:	200d      	movs	r0, #13
 80042e6:	f7fc fa0b 	bl	8000700 <_test_assert_time_window>
 80042ea:	2800      	cmp	r0, #0
 80042ec:	d000      	beq.n	80042f0 <evt2_execute+0x260>
 80042ee:	e6e9      	b.n	80040c4 <evt2_execute+0x34>
 80042f0:	f7fb fffe 	bl	80002f0 <chEvtGetAndClearEvents.constprop.35>
 80042f4:	4241      	negs	r1, r0
 80042f6:	4141      	adcs	r1, r0
 80042f8:	200e      	movs	r0, #14
 80042fa:	b2c9      	uxtb	r1, r1
 80042fc:	f7fc fa48 	bl	8000790 <_test_assert>
 8004300:	2800      	cmp	r0, #0
 8004302:	d000      	beq.n	8004306 <evt2_execute+0x276>
 8004304:	e6de      	b.n	80040c4 <evt2_execute+0x34>
 8004306:	f7ff f943 	bl	8003590 <test_wait_threads>
 800430a:	4659      	mov	r1, fp
 800430c:	4648      	mov	r0, r9
 800430e:	f7fc fb6f 	bl	80009f0 <chEvtUnregister>
 8004312:	4651      	mov	r1, sl
 8004314:	4640      	mov	r0, r8
 8004316:	f7fc fb6b 	bl	80009f0 <chEvtUnregister>
 800431a:	464b      	mov	r3, r9
 800431c:	681a      	ldr	r2, [r3, #0]
 800431e:	200f      	movs	r0, #15
 8004320:	1ad1      	subs	r1, r2, r3
 8004322:	424b      	negs	r3, r1
 8004324:	4159      	adcs	r1, r3
 8004326:	b2c9      	uxtb	r1, r1
 8004328:	f7fc fa32 	bl	8000790 <_test_assert>
 800432c:	2800      	cmp	r0, #0
 800432e:	d000      	beq.n	8004332 <evt2_execute+0x2a2>
 8004330:	e6c8      	b.n	80040c4 <evt2_execute+0x34>
 8004332:	4643      	mov	r3, r8
 8004334:	681a      	ldr	r2, [r3, #0]
 8004336:	3010      	adds	r0, #16
 8004338:	1ad1      	subs	r1, r2, r3
 800433a:	424b      	negs	r3, r1
 800433c:	4159      	adcs	r1, r3
 800433e:	b2c9      	uxtb	r1, r1
 8004340:	f7fc fa26 	bl	8000790 <_test_assert>
 8004344:	e6be      	b.n	80040c4 <evt2_execute+0x34>
 8004346:	46c0      	nop			; (mov r8, r8)
 8004348:	20000738 	.word	0x20000738
 800434c:	40000400 	.word	0x40000400
 8004350:	080024b1 	.word	0x080024b1
 8004354:	20000938 	.word	0x20000938
 8004358:	20000fcc 	.word	0x20000fcc
 800435c:	20000608 	.word	0x20000608
 8004360:	2000060c 	.word	0x2000060c
 8004364:	08005790 	.word	0x08005790
 8004368:	080024d1 	.word	0x080024d1
 800436c:	00000000 	.word	0x00000000

08004370 <mtx8_execute>:
 8004370:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004372:	27a4      	movs	r7, #164	; 0xa4
 8004374:	4b17      	ldr	r3, [pc, #92]	; (80043d4 <mtx8_execute+0x64>)
 8004376:	4c18      	ldr	r4, [pc, #96]	; (80043d8 <mtx8_execute+0x68>)
 8004378:	699b      	ldr	r3, [r3, #24]
 800437a:	b083      	sub	sp, #12
 800437c:	689d      	ldr	r5, [r3, #8]
 800437e:	4b17      	ldr	r3, [pc, #92]	; (80043dc <mtx8_execute+0x6c>)
 8004380:	007f      	lsls	r7, r7, #1
 8004382:	1c6a      	adds	r2, r5, #1
 8004384:	9300      	str	r3, [sp, #0]
 8004386:	0039      	movs	r1, r7
 8004388:	4b15      	ldr	r3, [pc, #84]	; (80043e0 <mtx8_execute+0x70>)
 800438a:	0020      	movs	r0, r4
 800438c:	f7fd fa18 	bl	80017c0 <chThdCreateStatic>
 8004390:	4e14      	ldr	r6, [pc, #80]	; (80043e4 <mtx8_execute+0x74>)
 8004392:	4b15      	ldr	r3, [pc, #84]	; (80043e8 <mtx8_execute+0x78>)
 8004394:	6030      	str	r0, [r6, #0]
 8004396:	1caa      	adds	r2, r5, #2
 8004398:	9300      	str	r3, [sp, #0]
 800439a:	0039      	movs	r1, r7
 800439c:	19e0      	adds	r0, r4, r7
 800439e:	4b13      	ldr	r3, [pc, #76]	; (80043ec <mtx8_execute+0x7c>)
 80043a0:	f7fd fa0e 	bl	80017c0 <chThdCreateStatic>
 80043a4:	23a4      	movs	r3, #164	; 0xa4
 80043a6:	009b      	lsls	r3, r3, #2
 80043a8:	6070      	str	r0, [r6, #4]
 80043aa:	18e0      	adds	r0, r4, r3
 80043ac:	4b10      	ldr	r3, [pc, #64]	; (80043f0 <mtx8_execute+0x80>)
 80043ae:	1cea      	adds	r2, r5, #3
 80043b0:	0039      	movs	r1, r7
 80043b2:	9300      	str	r3, [sp, #0]
 80043b4:	4b0f      	ldr	r3, [pc, #60]	; (80043f4 <mtx8_execute+0x84>)
 80043b6:	f7fd fa03 	bl	80017c0 <chThdCreateStatic>
 80043ba:	60b0      	str	r0, [r6, #8]
 80043bc:	f7fd f9a8 	bl	8001710 <chCondSignal.constprop.43>
 80043c0:	f7fd f9a6 	bl	8001710 <chCondSignal.constprop.43>
 80043c4:	f7ff f8e4 	bl	8003590 <test_wait_threads>
 80043c8:	490b      	ldr	r1, [pc, #44]	; (80043f8 <mtx8_execute+0x88>)
 80043ca:	2001      	movs	r0, #1
 80043cc:	f7fc f9b8 	bl	8000740 <_test_assert_sequence>
 80043d0:	b003      	add	sp, #12
 80043d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80043d4:	20000738 	.word	0x20000738
 80043d8:	20000938 	.word	0x20000938
 80043dc:	08005790 	.word	0x08005790
 80043e0:	08002a71 	.word	0x08002a71
 80043e4:	20000fcc 	.word	0x20000fcc
 80043e8:	08005784 	.word	0x08005784
 80043ec:	08002b01 	.word	0x08002b01
 80043f0:	08005780 	.word	0x08005780
 80043f4:	08002b71 	.word	0x08002b71
 80043f8:	080057b0 	.word	0x080057b0
 80043fc:	00000000 	.word	0x00000000

08004400 <mtx7_execute>:
 8004400:	21a4      	movs	r1, #164	; 0xa4
 8004402:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004404:	4b2d      	ldr	r3, [pc, #180]	; (80044bc <mtx7_execute+0xbc>)
 8004406:	4f2e      	ldr	r7, [pc, #184]	; (80044c0 <mtx7_execute+0xc0>)
 8004408:	699b      	ldr	r3, [r3, #24]
 800440a:	4c2e      	ldr	r4, [pc, #184]	; (80044c4 <mtx7_execute+0xc4>)
 800440c:	689d      	ldr	r5, [r3, #8]
 800440e:	4b2e      	ldr	r3, [pc, #184]	; (80044c8 <mtx7_execute+0xc8>)
 8004410:	b083      	sub	sp, #12
 8004412:	1c6a      	adds	r2, r5, #1
 8004414:	9300      	str	r3, [sp, #0]
 8004416:	0049      	lsls	r1, r1, #1
 8004418:	003b      	movs	r3, r7
 800441a:	0020      	movs	r0, r4
 800441c:	f7fd f9d0 	bl	80017c0 <chThdCreateStatic>
 8004420:	4e2a      	ldr	r6, [pc, #168]	; (80044cc <mtx7_execute+0xcc>)
 8004422:	21a4      	movs	r1, #164	; 0xa4
 8004424:	6030      	str	r0, [r6, #0]
 8004426:	0020      	movs	r0, r4
 8004428:	4b29      	ldr	r3, [pc, #164]	; (80044d0 <mtx7_execute+0xd0>)
 800442a:	3049      	adds	r0, #73	; 0x49
 800442c:	1caa      	adds	r2, r5, #2
 800442e:	9300      	str	r3, [sp, #0]
 8004430:	0049      	lsls	r1, r1, #1
 8004432:	003b      	movs	r3, r7
 8004434:	30ff      	adds	r0, #255	; 0xff
 8004436:	f7fd f9c3 	bl	80017c0 <chThdCreateStatic>
 800443a:	23a4      	movs	r3, #164	; 0xa4
 800443c:	21a4      	movs	r1, #164	; 0xa4
 800443e:	009b      	lsls	r3, r3, #2
 8004440:	6070      	str	r0, [r6, #4]
 8004442:	18e0      	adds	r0, r4, r3
 8004444:	4b23      	ldr	r3, [pc, #140]	; (80044d4 <mtx7_execute+0xd4>)
 8004446:	1cea      	adds	r2, r5, #3
 8004448:	9300      	str	r3, [sp, #0]
 800444a:	0049      	lsls	r1, r1, #1
 800444c:	003b      	movs	r3, r7
 800444e:	f7fd f9b7 	bl	80017c0 <chThdCreateStatic>
 8004452:	23f6      	movs	r3, #246	; 0xf6
 8004454:	21a4      	movs	r1, #164	; 0xa4
 8004456:	009b      	lsls	r3, r3, #2
 8004458:	60b0      	str	r0, [r6, #8]
 800445a:	18e0      	adds	r0, r4, r3
 800445c:	4b1e      	ldr	r3, [pc, #120]	; (80044d8 <mtx7_execute+0xd8>)
 800445e:	1d2a      	adds	r2, r5, #4
 8004460:	9300      	str	r3, [sp, #0]
 8004462:	0049      	lsls	r1, r1, #1
 8004464:	003b      	movs	r3, r7
 8004466:	f7fd f9ab 	bl	80017c0 <chThdCreateStatic>
 800446a:	23a4      	movs	r3, #164	; 0xa4
 800446c:	21a4      	movs	r1, #164	; 0xa4
 800446e:	00db      	lsls	r3, r3, #3
 8004470:	60f0      	str	r0, [r6, #12]
 8004472:	18e0      	adds	r0, r4, r3
 8004474:	4b19      	ldr	r3, [pc, #100]	; (80044dc <mtx7_execute+0xdc>)
 8004476:	1d6a      	adds	r2, r5, #5
 8004478:	9300      	str	r3, [sp, #0]
 800447a:	0049      	lsls	r1, r1, #1
 800447c:	003b      	movs	r3, r7
 800447e:	f7fd f99f 	bl	80017c0 <chThdCreateStatic>
 8004482:	6130      	str	r0, [r6, #16]
 8004484:	b672      	cpsid	i
 8004486:	4c16      	ldr	r4, [pc, #88]	; (80044e0 <mtx7_execute+0xe0>)
 8004488:	6820      	ldr	r0, [r4, #0]
 800448a:	42a0      	cmp	r0, r4
 800448c:	d00a      	beq.n	80044a4 <mtx7_execute+0xa4>
 800448e:	2502      	movs	r5, #2
 8004490:	426d      	negs	r5, r5
 8004492:	6803      	ldr	r3, [r0, #0]
 8004494:	6023      	str	r3, [r4, #0]
 8004496:	605c      	str	r4, [r3, #4]
 8004498:	f7fc fb5a 	bl	8000b50 <chSchReadyI>
 800449c:	6205      	str	r5, [r0, #32]
 800449e:	6820      	ldr	r0, [r4, #0]
 80044a0:	42a0      	cmp	r0, r4
 80044a2:	d1f6      	bne.n	8004492 <mtx7_execute+0x92>
 80044a4:	f7fc ffb4 	bl	8001410 <chSchRescheduleS>
 80044a8:	b662      	cpsie	i
 80044aa:	f7ff f871 	bl	8003590 <test_wait_threads>
 80044ae:	490d      	ldr	r1, [pc, #52]	; (80044e4 <mtx7_execute+0xe4>)
 80044b0:	2001      	movs	r0, #1
 80044b2:	f7fc f945 	bl	8000740 <_test_assert_sequence>
 80044b6:	b003      	add	sp, #12
 80044b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80044ba:	46c0      	nop			; (mov r8, r8)
 80044bc:	20000738 	.word	0x20000738
 80044c0:	08002b01 	.word	0x08002b01
 80044c4:	20000938 	.word	0x20000938
 80044c8:	080059d4 	.word	0x080059d4
 80044cc:	20000fcc 	.word	0x20000fcc
 80044d0:	08005788 	.word	0x08005788
 80044d4:	08005784 	.word	0x08005784
 80044d8:	08005780 	.word	0x08005780
 80044dc:	08005790 	.word	0x08005790
 80044e0:	20000600 	.word	0x20000600
 80044e4:	080059d0 	.word	0x080059d0
	...

080044f0 <mtx6_execute>:
 80044f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80044f2:	4b2b      	ldr	r3, [pc, #172]	; (80045a0 <mtx6_execute+0xb0>)
 80044f4:	46c6      	mov	lr, r8
 80044f6:	699b      	ldr	r3, [r3, #24]
 80044f8:	27a4      	movs	r7, #164	; 0xa4
 80044fa:	689d      	ldr	r5, [r3, #8]
 80044fc:	4b29      	ldr	r3, [pc, #164]	; (80045a4 <mtx6_execute+0xb4>)
 80044fe:	b500      	push	{lr}
 8004500:	4698      	mov	r8, r3
 8004502:	4c29      	ldr	r4, [pc, #164]	; (80045a8 <mtx6_execute+0xb8>)
 8004504:	4b29      	ldr	r3, [pc, #164]	; (80045ac <mtx6_execute+0xbc>)
 8004506:	b082      	sub	sp, #8
 8004508:	007f      	lsls	r7, r7, #1
 800450a:	1c6a      	adds	r2, r5, #1
 800450c:	9300      	str	r3, [sp, #0]
 800450e:	0039      	movs	r1, r7
 8004510:	4643      	mov	r3, r8
 8004512:	0020      	movs	r0, r4
 8004514:	f7fd f954 	bl	80017c0 <chThdCreateStatic>
 8004518:	4e25      	ldr	r6, [pc, #148]	; (80045b0 <mtx6_execute+0xc0>)
 800451a:	4b26      	ldr	r3, [pc, #152]	; (80045b4 <mtx6_execute+0xc4>)
 800451c:	6030      	str	r0, [r6, #0]
 800451e:	1caa      	adds	r2, r5, #2
 8004520:	9300      	str	r3, [sp, #0]
 8004522:	0039      	movs	r1, r7
 8004524:	4643      	mov	r3, r8
 8004526:	19e0      	adds	r0, r4, r7
 8004528:	f7fd f94a 	bl	80017c0 <chThdCreateStatic>
 800452c:	23a4      	movs	r3, #164	; 0xa4
 800452e:	009b      	lsls	r3, r3, #2
 8004530:	6070      	str	r0, [r6, #4]
 8004532:	18e0      	adds	r0, r4, r3
 8004534:	4b20      	ldr	r3, [pc, #128]	; (80045b8 <mtx6_execute+0xc8>)
 8004536:	1cea      	adds	r2, r5, #3
 8004538:	9300      	str	r3, [sp, #0]
 800453a:	0039      	movs	r1, r7
 800453c:	4643      	mov	r3, r8
 800453e:	f7fd f93f 	bl	80017c0 <chThdCreateStatic>
 8004542:	23f6      	movs	r3, #246	; 0xf6
 8004544:	009b      	lsls	r3, r3, #2
 8004546:	60b0      	str	r0, [r6, #8]
 8004548:	18e0      	adds	r0, r4, r3
 800454a:	4b1c      	ldr	r3, [pc, #112]	; (80045bc <mtx6_execute+0xcc>)
 800454c:	1d2a      	adds	r2, r5, #4
 800454e:	9300      	str	r3, [sp, #0]
 8004550:	0039      	movs	r1, r7
 8004552:	4643      	mov	r3, r8
 8004554:	f7fd f934 	bl	80017c0 <chThdCreateStatic>
 8004558:	23a4      	movs	r3, #164	; 0xa4
 800455a:	00db      	lsls	r3, r3, #3
 800455c:	60f0      	str	r0, [r6, #12]
 800455e:	18e0      	adds	r0, r4, r3
 8004560:	4b17      	ldr	r3, [pc, #92]	; (80045c0 <mtx6_execute+0xd0>)
 8004562:	1d6a      	adds	r2, r5, #5
 8004564:	9300      	str	r3, [sp, #0]
 8004566:	0039      	movs	r1, r7
 8004568:	4643      	mov	r3, r8
 800456a:	f7fd f929 	bl	80017c0 <chThdCreateStatic>
 800456e:	6130      	str	r0, [r6, #16]
 8004570:	b672      	cpsid	i
 8004572:	f7fc fafd 	bl	8000b70 <chCondSignalI.constprop.42>
 8004576:	f7fc fafb 	bl	8000b70 <chCondSignalI.constprop.42>
 800457a:	f7fc faf9 	bl	8000b70 <chCondSignalI.constprop.42>
 800457e:	f7fc faf7 	bl	8000b70 <chCondSignalI.constprop.42>
 8004582:	f7fc faf5 	bl	8000b70 <chCondSignalI.constprop.42>
 8004586:	f7fc ff43 	bl	8001410 <chSchRescheduleS>
 800458a:	b662      	cpsie	i
 800458c:	f7ff f800 	bl	8003590 <test_wait_threads>
 8004590:	490c      	ldr	r1, [pc, #48]	; (80045c4 <mtx6_execute+0xd4>)
 8004592:	2001      	movs	r0, #1
 8004594:	f7fc f8d4 	bl	8000740 <_test_assert_sequence>
 8004598:	b002      	add	sp, #8
 800459a:	bc04      	pop	{r2}
 800459c:	4690      	mov	r8, r2
 800459e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80045a0:	20000738 	.word	0x20000738
 80045a4:	08002b01 	.word	0x08002b01
 80045a8:	20000938 	.word	0x20000938
 80045ac:	080059d4 	.word	0x080059d4
 80045b0:	20000fcc 	.word	0x20000fcc
 80045b4:	08005788 	.word	0x08005788
 80045b8:	08005784 	.word	0x08005784
 80045bc:	08005780 	.word	0x08005780
 80045c0:	08005790 	.word	0x08005790
 80045c4:	080059d0 	.word	0x080059d0
	...

080045d0 <mtx4_execute>:
 80045d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80045d2:	46de      	mov	lr, fp
 80045d4:	4657      	mov	r7, sl
 80045d6:	464e      	mov	r6, r9
 80045d8:	4645      	mov	r5, r8
 80045da:	b5e0      	push	{r5, r6, r7, lr}
 80045dc:	4d8c      	ldr	r5, [pc, #560]	; (8004810 <mtx4_execute+0x240>)
 80045de:	21a4      	movs	r1, #164	; 0xa4
 80045e0:	69ab      	ldr	r3, [r5, #24]
 80045e2:	4f8c      	ldr	r7, [pc, #560]	; (8004814 <mtx4_execute+0x244>)
 80045e4:	689c      	ldr	r4, [r3, #8]
 80045e6:	b083      	sub	sp, #12
 80045e8:	1c63      	adds	r3, r4, #1
 80045ea:	4698      	mov	r8, r3
 80045ec:	1ca3      	adds	r3, r4, #2
 80045ee:	4699      	mov	r9, r3
 80045f0:	4b89      	ldr	r3, [pc, #548]	; (8004818 <mtx4_execute+0x248>)
 80045f2:	4642      	mov	r2, r8
 80045f4:	469b      	mov	fp, r3
 80045f6:	4b89      	ldr	r3, [pc, #548]	; (800481c <mtx4_execute+0x24c>)
 80045f8:	0049      	lsls	r1, r1, #1
 80045fa:	9300      	str	r3, [sp, #0]
 80045fc:	0038      	movs	r0, r7
 80045fe:	465b      	mov	r3, fp
 8004600:	f7fd f8de 	bl	80017c0 <chThdCreateStatic>
 8004604:	4b86      	ldr	r3, [pc, #536]	; (8004820 <mtx4_execute+0x250>)
 8004606:	21a4      	movs	r1, #164	; 0xa4
 8004608:	469a      	mov	sl, r3
 800460a:	4e86      	ldr	r6, [pc, #536]	; (8004824 <mtx4_execute+0x254>)
 800460c:	4b86      	ldr	r3, [pc, #536]	; (8004828 <mtx4_execute+0x258>)
 800460e:	6030      	str	r0, [r6, #0]
 8004610:	0049      	lsls	r1, r1, #1
 8004612:	9300      	str	r3, [sp, #0]
 8004614:	464a      	mov	r2, r9
 8004616:	4653      	mov	r3, sl
 8004618:	4884      	ldr	r0, [pc, #528]	; (800482c <mtx4_execute+0x25c>)
 800461a:	f7fd f8d1 	bl	80017c0 <chThdCreateStatic>
 800461e:	6070      	str	r0, [r6, #4]
 8004620:	4883      	ldr	r0, [pc, #524]	; (8004830 <mtx4_execute+0x260>)
 8004622:	f7fe f9e5 	bl	80029f0 <chMtxLock>
 8004626:	69ab      	ldr	r3, [r5, #24]
 8004628:	2001      	movs	r0, #1
 800462a:	6899      	ldr	r1, [r3, #8]
 800462c:	1b09      	subs	r1, r1, r4
 800462e:	424b      	negs	r3, r1
 8004630:	4159      	adcs	r1, r3
 8004632:	b2c9      	uxtb	r1, r1
 8004634:	f7fc f8ac 	bl	8000790 <_test_assert>
 8004638:	2800      	cmp	r0, #0
 800463a:	d006      	beq.n	800464a <mtx4_execute+0x7a>
 800463c:	b003      	add	sp, #12
 800463e:	bc3c      	pop	{r2, r3, r4, r5}
 8004640:	4690      	mov	r8, r2
 8004642:	4699      	mov	r9, r3
 8004644:	46a2      	mov	sl, r4
 8004646:	46ab      	mov	fp, r5
 8004648:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800464a:	3064      	adds	r0, #100	; 0x64
 800464c:	f7fd fec8 	bl	80023e0 <chThdSleep>
 8004650:	69ab      	ldr	r3, [r5, #24]
 8004652:	2002      	movs	r0, #2
 8004654:	6899      	ldr	r1, [r3, #8]
 8004656:	4643      	mov	r3, r8
 8004658:	1ac9      	subs	r1, r1, r3
 800465a:	424b      	negs	r3, r1
 800465c:	4159      	adcs	r1, r3
 800465e:	b2c9      	uxtb	r1, r1
 8004660:	f7fc f896 	bl	8000790 <_test_assert>
 8004664:	2800      	cmp	r0, #0
 8004666:	d1e9      	bne.n	800463c <mtx4_execute+0x6c>
 8004668:	4872      	ldr	r0, [pc, #456]	; (8004834 <mtx4_execute+0x264>)
 800466a:	f7fe f9c1 	bl	80029f0 <chMtxLock>
 800466e:	69ab      	ldr	r3, [r5, #24]
 8004670:	2003      	movs	r0, #3
 8004672:	6899      	ldr	r1, [r3, #8]
 8004674:	4643      	mov	r3, r8
 8004676:	1ac9      	subs	r1, r1, r3
 8004678:	424b      	negs	r3, r1
 800467a:	4159      	adcs	r1, r3
 800467c:	b2c9      	uxtb	r1, r1
 800467e:	f7fc f887 	bl	8000790 <_test_assert>
 8004682:	2800      	cmp	r0, #0
 8004684:	d1da      	bne.n	800463c <mtx4_execute+0x6c>
 8004686:	3064      	adds	r0, #100	; 0x64
 8004688:	f7fd feaa 	bl	80023e0 <chThdSleep>
 800468c:	69ab      	ldr	r3, [r5, #24]
 800468e:	2004      	movs	r0, #4
 8004690:	6899      	ldr	r1, [r3, #8]
 8004692:	464b      	mov	r3, r9
 8004694:	1ac9      	subs	r1, r1, r3
 8004696:	424b      	negs	r3, r1
 8004698:	4159      	adcs	r1, r3
 800469a:	b2c9      	uxtb	r1, r1
 800469c:	f7fc f878 	bl	8000790 <_test_assert>
 80046a0:	2800      	cmp	r0, #0
 80046a2:	d1cb      	bne.n	800463c <mtx4_execute+0x6c>
 80046a4:	4863      	ldr	r0, [pc, #396]	; (8004834 <mtx4_execute+0x264>)
 80046a6:	f7fd f843 	bl	8001730 <chMtxUnlock>
 80046aa:	69ab      	ldr	r3, [r5, #24]
 80046ac:	2005      	movs	r0, #5
 80046ae:	6899      	ldr	r1, [r3, #8]
 80046b0:	4643      	mov	r3, r8
 80046b2:	1ac9      	subs	r1, r1, r3
 80046b4:	424b      	negs	r3, r1
 80046b6:	4159      	adcs	r1, r3
 80046b8:	b2c9      	uxtb	r1, r1
 80046ba:	f7fc f869 	bl	8000790 <_test_assert>
 80046be:	2800      	cmp	r0, #0
 80046c0:	d1bc      	bne.n	800463c <mtx4_execute+0x6c>
 80046c2:	3064      	adds	r0, #100	; 0x64
 80046c4:	f7fd fe8c 	bl	80023e0 <chThdSleep>
 80046c8:	69ab      	ldr	r3, [r5, #24]
 80046ca:	2006      	movs	r0, #6
 80046cc:	6899      	ldr	r1, [r3, #8]
 80046ce:	4643      	mov	r3, r8
 80046d0:	1ac9      	subs	r1, r1, r3
 80046d2:	424b      	negs	r3, r1
 80046d4:	4159      	adcs	r1, r3
 80046d6:	b2c9      	uxtb	r1, r1
 80046d8:	f7fc f85a 	bl	8000790 <_test_assert>
 80046dc:	2800      	cmp	r0, #0
 80046de:	d1ad      	bne.n	800463c <mtx4_execute+0x6c>
 80046e0:	f7fc feb6 	bl	8001450 <chMtxUnlockAll>
 80046e4:	69ab      	ldr	r3, [r5, #24]
 80046e6:	2007      	movs	r0, #7
 80046e8:	6899      	ldr	r1, [r3, #8]
 80046ea:	1b09      	subs	r1, r1, r4
 80046ec:	424b      	negs	r3, r1
 80046ee:	4159      	adcs	r1, r3
 80046f0:	b2c9      	uxtb	r1, r1
 80046f2:	f7fc f84d 	bl	8000790 <_test_assert>
 80046f6:	2800      	cmp	r0, #0
 80046f8:	d1a0      	bne.n	800463c <mtx4_execute+0x6c>
 80046fa:	f7fe ff49 	bl	8003590 <test_wait_threads>
 80046fe:	21a4      	movs	r1, #164	; 0xa4
 8004700:	4b4d      	ldr	r3, [pc, #308]	; (8004838 <mtx4_execute+0x268>)
 8004702:	4642      	mov	r2, r8
 8004704:	9300      	str	r3, [sp, #0]
 8004706:	0049      	lsls	r1, r1, #1
 8004708:	465b      	mov	r3, fp
 800470a:	0038      	movs	r0, r7
 800470c:	f7fd f858 	bl	80017c0 <chThdCreateStatic>
 8004710:	21a4      	movs	r1, #164	; 0xa4
 8004712:	4b4a      	ldr	r3, [pc, #296]	; (800483c <mtx4_execute+0x26c>)
 8004714:	6030      	str	r0, [r6, #0]
 8004716:	0049      	lsls	r1, r1, #1
 8004718:	9300      	str	r3, [sp, #0]
 800471a:	464a      	mov	r2, r9
 800471c:	4653      	mov	r3, sl
 800471e:	4843      	ldr	r0, [pc, #268]	; (800482c <mtx4_execute+0x25c>)
 8004720:	f7fd f84e 	bl	80017c0 <chThdCreateStatic>
 8004724:	6070      	str	r0, [r6, #4]
 8004726:	4842      	ldr	r0, [pc, #264]	; (8004830 <mtx4_execute+0x260>)
 8004728:	f7fe f962 	bl	80029f0 <chMtxLock>
 800472c:	69ab      	ldr	r3, [r5, #24]
 800472e:	2008      	movs	r0, #8
 8004730:	6899      	ldr	r1, [r3, #8]
 8004732:	1b09      	subs	r1, r1, r4
 8004734:	424b      	negs	r3, r1
 8004736:	4159      	adcs	r1, r3
 8004738:	b2c9      	uxtb	r1, r1
 800473a:	f7fc f829 	bl	8000790 <_test_assert>
 800473e:	2800      	cmp	r0, #0
 8004740:	d000      	beq.n	8004744 <mtx4_execute+0x174>
 8004742:	e77b      	b.n	800463c <mtx4_execute+0x6c>
 8004744:	3064      	adds	r0, #100	; 0x64
 8004746:	f7fd fe4b 	bl	80023e0 <chThdSleep>
 800474a:	69ab      	ldr	r3, [r5, #24]
 800474c:	2009      	movs	r0, #9
 800474e:	6899      	ldr	r1, [r3, #8]
 8004750:	4643      	mov	r3, r8
 8004752:	1ac9      	subs	r1, r1, r3
 8004754:	424b      	negs	r3, r1
 8004756:	4159      	adcs	r1, r3
 8004758:	b2c9      	uxtb	r1, r1
 800475a:	f7fc f819 	bl	8000790 <_test_assert>
 800475e:	2800      	cmp	r0, #0
 8004760:	d000      	beq.n	8004764 <mtx4_execute+0x194>
 8004762:	e76b      	b.n	800463c <mtx4_execute+0x6c>
 8004764:	4833      	ldr	r0, [pc, #204]	; (8004834 <mtx4_execute+0x264>)
 8004766:	f7fe f943 	bl	80029f0 <chMtxLock>
 800476a:	69ab      	ldr	r3, [r5, #24]
 800476c:	200a      	movs	r0, #10
 800476e:	6899      	ldr	r1, [r3, #8]
 8004770:	4643      	mov	r3, r8
 8004772:	1ac9      	subs	r1, r1, r3
 8004774:	424b      	negs	r3, r1
 8004776:	4159      	adcs	r1, r3
 8004778:	b2c9      	uxtb	r1, r1
 800477a:	f7fc f809 	bl	8000790 <_test_assert>
 800477e:	2800      	cmp	r0, #0
 8004780:	d000      	beq.n	8004784 <mtx4_execute+0x1b4>
 8004782:	e75b      	b.n	800463c <mtx4_execute+0x6c>
 8004784:	3064      	adds	r0, #100	; 0x64
 8004786:	f7fd fe2b 	bl	80023e0 <chThdSleep>
 800478a:	69ab      	ldr	r3, [r5, #24]
 800478c:	200b      	movs	r0, #11
 800478e:	6899      	ldr	r1, [r3, #8]
 8004790:	464b      	mov	r3, r9
 8004792:	1ac9      	subs	r1, r1, r3
 8004794:	424b      	negs	r3, r1
 8004796:	4159      	adcs	r1, r3
 8004798:	b2c9      	uxtb	r1, r1
 800479a:	f7fb fff9 	bl	8000790 <_test_assert>
 800479e:	2800      	cmp	r0, #0
 80047a0:	d000      	beq.n	80047a4 <mtx4_execute+0x1d4>
 80047a2:	e74b      	b.n	800463c <mtx4_execute+0x6c>
 80047a4:	b672      	cpsid	i
 80047a6:	4823      	ldr	r0, [pc, #140]	; (8004834 <mtx4_execute+0x264>)
 80047a8:	f7fc fa7a 	bl	8000ca0 <chMtxUnlockS>
 80047ac:	f7fc fe30 	bl	8001410 <chSchRescheduleS>
 80047b0:	b662      	cpsie	i
 80047b2:	69ab      	ldr	r3, [r5, #24]
 80047b4:	200c      	movs	r0, #12
 80047b6:	6899      	ldr	r1, [r3, #8]
 80047b8:	4643      	mov	r3, r8
 80047ba:	1ac9      	subs	r1, r1, r3
 80047bc:	424b      	negs	r3, r1
 80047be:	4159      	adcs	r1, r3
 80047c0:	b2c9      	uxtb	r1, r1
 80047c2:	f7fb ffe5 	bl	8000790 <_test_assert>
 80047c6:	2800      	cmp	r0, #0
 80047c8:	d000      	beq.n	80047cc <mtx4_execute+0x1fc>
 80047ca:	e737      	b.n	800463c <mtx4_execute+0x6c>
 80047cc:	3064      	adds	r0, #100	; 0x64
 80047ce:	f7fd fe07 	bl	80023e0 <chThdSleep>
 80047d2:	69ab      	ldr	r3, [r5, #24]
 80047d4:	200d      	movs	r0, #13
 80047d6:	6899      	ldr	r1, [r3, #8]
 80047d8:	4643      	mov	r3, r8
 80047da:	1ac9      	subs	r1, r1, r3
 80047dc:	424b      	negs	r3, r1
 80047de:	4159      	adcs	r1, r3
 80047e0:	b2c9      	uxtb	r1, r1
 80047e2:	f7fb ffd5 	bl	8000790 <_test_assert>
 80047e6:	2800      	cmp	r0, #0
 80047e8:	d000      	beq.n	80047ec <mtx4_execute+0x21c>
 80047ea:	e727      	b.n	800463c <mtx4_execute+0x6c>
 80047ec:	f7fc fe30 	bl	8001450 <chMtxUnlockAll>
 80047f0:	69ab      	ldr	r3, [r5, #24]
 80047f2:	200e      	movs	r0, #14
 80047f4:	6899      	ldr	r1, [r3, #8]
 80047f6:	1b09      	subs	r1, r1, r4
 80047f8:	424c      	negs	r4, r1
 80047fa:	4161      	adcs	r1, r4
 80047fc:	b2c9      	uxtb	r1, r1
 80047fe:	f7fb ffc7 	bl	8000790 <_test_assert>
 8004802:	2800      	cmp	r0, #0
 8004804:	d000      	beq.n	8004808 <mtx4_execute+0x238>
 8004806:	e719      	b.n	800463c <mtx4_execute+0x6c>
 8004808:	f7fe fec2 	bl	8003590 <test_wait_threads>
 800480c:	e716      	b.n	800463c <mtx4_execute+0x6c>
 800480e:	46c0      	nop			; (mov r8, r8)
 8004810:	20000738 	.word	0x20000738
 8004814:	20000938 	.word	0x20000938
 8004818:	08002c61 	.word	0x08002c61
 800481c:	08005780 	.word	0x08005780
 8004820:	08002c81 	.word	0x08002c81
 8004824:	20000fcc 	.word	0x20000fcc
 8004828:	08005790 	.word	0x08005790
 800482c:	20000a80 	.word	0x20000a80
 8004830:	20000644 	.word	0x20000644
 8004834:	20000634 	.word	0x20000634
 8004838:	08005788 	.word	0x08005788
 800483c:	08005784 	.word	0x08005784

08004840 <mtx1_execute>:
 8004840:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004842:	46ce      	mov	lr, r9
 8004844:	4647      	mov	r7, r8
 8004846:	4b31      	ldr	r3, [pc, #196]	; (800490c <mtx1_execute+0xcc>)
 8004848:	b580      	push	{r7, lr}
 800484a:	4698      	mov	r8, r3
 800484c:	699b      	ldr	r3, [r3, #24]
 800484e:	b083      	sub	sp, #12
 8004850:	689d      	ldr	r5, [r3, #8]
 8004852:	4b2f      	ldr	r3, [pc, #188]	; (8004910 <mtx1_execute+0xd0>)
 8004854:	0018      	movs	r0, r3
 8004856:	4699      	mov	r9, r3
 8004858:	f7fe f8ca 	bl	80029f0 <chMtxLock>
 800485c:	21a4      	movs	r1, #164	; 0xa4
 800485e:	4f2d      	ldr	r7, [pc, #180]	; (8004914 <mtx1_execute+0xd4>)
 8004860:	4c2d      	ldr	r4, [pc, #180]	; (8004918 <mtx1_execute+0xd8>)
 8004862:	4b2e      	ldr	r3, [pc, #184]	; (800491c <mtx1_execute+0xdc>)
 8004864:	1c6a      	adds	r2, r5, #1
 8004866:	9300      	str	r3, [sp, #0]
 8004868:	0049      	lsls	r1, r1, #1
 800486a:	003b      	movs	r3, r7
 800486c:	0020      	movs	r0, r4
 800486e:	f7fc ffa7 	bl	80017c0 <chThdCreateStatic>
 8004872:	4e2b      	ldr	r6, [pc, #172]	; (8004920 <mtx1_execute+0xe0>)
 8004874:	21a4      	movs	r1, #164	; 0xa4
 8004876:	6030      	str	r0, [r6, #0]
 8004878:	0020      	movs	r0, r4
 800487a:	4b2a      	ldr	r3, [pc, #168]	; (8004924 <mtx1_execute+0xe4>)
 800487c:	3049      	adds	r0, #73	; 0x49
 800487e:	1caa      	adds	r2, r5, #2
 8004880:	9300      	str	r3, [sp, #0]
 8004882:	0049      	lsls	r1, r1, #1
 8004884:	003b      	movs	r3, r7
 8004886:	30ff      	adds	r0, #255	; 0xff
 8004888:	f7fc ff9a 	bl	80017c0 <chThdCreateStatic>
 800488c:	23a4      	movs	r3, #164	; 0xa4
 800488e:	21a4      	movs	r1, #164	; 0xa4
 8004890:	009b      	lsls	r3, r3, #2
 8004892:	6070      	str	r0, [r6, #4]
 8004894:	18e0      	adds	r0, r4, r3
 8004896:	4b24      	ldr	r3, [pc, #144]	; (8004928 <mtx1_execute+0xe8>)
 8004898:	1cea      	adds	r2, r5, #3
 800489a:	9300      	str	r3, [sp, #0]
 800489c:	0049      	lsls	r1, r1, #1
 800489e:	003b      	movs	r3, r7
 80048a0:	f7fc ff8e 	bl	80017c0 <chThdCreateStatic>
 80048a4:	23f6      	movs	r3, #246	; 0xf6
 80048a6:	21a4      	movs	r1, #164	; 0xa4
 80048a8:	009b      	lsls	r3, r3, #2
 80048aa:	60b0      	str	r0, [r6, #8]
 80048ac:	18e0      	adds	r0, r4, r3
 80048ae:	4b1f      	ldr	r3, [pc, #124]	; (800492c <mtx1_execute+0xec>)
 80048b0:	1d2a      	adds	r2, r5, #4
 80048b2:	9300      	str	r3, [sp, #0]
 80048b4:	0049      	lsls	r1, r1, #1
 80048b6:	003b      	movs	r3, r7
 80048b8:	f7fc ff82 	bl	80017c0 <chThdCreateStatic>
 80048bc:	23a4      	movs	r3, #164	; 0xa4
 80048be:	21a4      	movs	r1, #164	; 0xa4
 80048c0:	00db      	lsls	r3, r3, #3
 80048c2:	60f0      	str	r0, [r6, #12]
 80048c4:	18e0      	adds	r0, r4, r3
 80048c6:	4b1a      	ldr	r3, [pc, #104]	; (8004930 <mtx1_execute+0xf0>)
 80048c8:	0049      	lsls	r1, r1, #1
 80048ca:	1d6a      	adds	r2, r5, #5
 80048cc:	9300      	str	r3, [sp, #0]
 80048ce:	003b      	movs	r3, r7
 80048d0:	f7fc ff76 	bl	80017c0 <chThdCreateStatic>
 80048d4:	6130      	str	r0, [r6, #16]
 80048d6:	4648      	mov	r0, r9
 80048d8:	f7fc ff2a 	bl	8001730 <chMtxUnlock>
 80048dc:	f7fe fe58 	bl	8003590 <test_wait_threads>
 80048e0:	4643      	mov	r3, r8
 80048e2:	699b      	ldr	r3, [r3, #24]
 80048e4:	2001      	movs	r0, #1
 80048e6:	6899      	ldr	r1, [r3, #8]
 80048e8:	1b49      	subs	r1, r1, r5
 80048ea:	424b      	negs	r3, r1
 80048ec:	4159      	adcs	r1, r3
 80048ee:	b2c9      	uxtb	r1, r1
 80048f0:	f7fb ff4e 	bl	8000790 <_test_assert>
 80048f4:	2800      	cmp	r0, #0
 80048f6:	d103      	bne.n	8004900 <mtx1_execute+0xc0>
 80048f8:	490e      	ldr	r1, [pc, #56]	; (8004934 <mtx1_execute+0xf4>)
 80048fa:	3002      	adds	r0, #2
 80048fc:	f7fb ff20 	bl	8000740 <_test_assert_sequence>
 8004900:	b003      	add	sp, #12
 8004902:	bc0c      	pop	{r2, r3}
 8004904:	4690      	mov	r8, r2
 8004906:	4699      	mov	r9, r3
 8004908:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800490a:	46c0      	nop			; (mov r8, r8)
 800490c:	20000738 	.word	0x20000738
 8004910:	20000634 	.word	0x20000634
 8004914:	08002ca1 	.word	0x08002ca1
 8004918:	20000938 	.word	0x20000938
 800491c:	080059d4 	.word	0x080059d4
 8004920:	20000fcc 	.word	0x20000fcc
 8004924:	08005788 	.word	0x08005788
 8004928:	08005784 	.word	0x08005784
 800492c:	08005780 	.word	0x08005780
 8004930:	08005790 	.word	0x08005790
 8004934:	080059d0 	.word	0x080059d0
	...

08004940 <sem2_execute>:
 8004940:	b570      	push	{r4, r5, r6, lr}
 8004942:	b082      	sub	sp, #8
 8004944:	b672      	cpsid	i
 8004946:	4c48      	ldr	r4, [pc, #288]	; (8004a68 <sem2_execute+0x128>)
 8004948:	2101      	movs	r1, #1
 800494a:	68a3      	ldr	r3, [r4, #8]
 800494c:	3b01      	subs	r3, #1
 800494e:	d401      	bmi.n	8004954 <sem2_execute+0x14>
 8004950:	2100      	movs	r1, #0
 8004952:	60a3      	str	r3, [r4, #8]
 8004954:	b662      	cpsie	i
 8004956:	2001      	movs	r0, #1
 8004958:	f7fb ff1a 	bl	8000790 <_test_assert>
 800495c:	2800      	cmp	r0, #0
 800495e:	d001      	beq.n	8004964 <sem2_execute+0x24>
 8004960:	b002      	add	sp, #8
 8004962:	bd70      	pop	{r4, r5, r6, pc}
 8004964:	6823      	ldr	r3, [r4, #0]
 8004966:	3002      	adds	r0, #2
 8004968:	1b19      	subs	r1, r3, r4
 800496a:	424b      	negs	r3, r1
 800496c:	4159      	adcs	r1, r3
 800496e:	b2c9      	uxtb	r1, r1
 8004970:	f7fb ff0e 	bl	8000790 <_test_assert>
 8004974:	2800      	cmp	r0, #0
 8004976:	d1f3      	bne.n	8004960 <sem2_execute+0x20>
 8004978:	68a1      	ldr	r1, [r4, #8]
 800497a:	3003      	adds	r0, #3
 800497c:	424b      	negs	r3, r1
 800497e:	4159      	adcs	r1, r3
 8004980:	b2c9      	uxtb	r1, r1
 8004982:	f7fb ff05 	bl	8000790 <_test_assert>
 8004986:	2800      	cmp	r0, #0
 8004988:	d1ea      	bne.n	8004960 <sem2_execute+0x20>
 800498a:	21a4      	movs	r1, #164	; 0xa4
 800498c:	4b37      	ldr	r3, [pc, #220]	; (8004a6c <sem2_execute+0x12c>)
 800498e:	0049      	lsls	r1, r1, #1
 8004990:	699b      	ldr	r3, [r3, #24]
 8004992:	689a      	ldr	r2, [r3, #8]
 8004994:	9000      	str	r0, [sp, #0]
 8004996:	3a01      	subs	r2, #1
 8004998:	4b35      	ldr	r3, [pc, #212]	; (8004a70 <sem2_execute+0x130>)
 800499a:	4836      	ldr	r0, [pc, #216]	; (8004a74 <sem2_execute+0x134>)
 800499c:	f7fc ff10 	bl	80017c0 <chThdCreateStatic>
 80049a0:	4b35      	ldr	r3, [pc, #212]	; (8004a78 <sem2_execute+0x138>)
 80049a2:	6018      	str	r0, [r3, #0]
 80049a4:	20fa      	movs	r0, #250	; 0xfa
 80049a6:	0040      	lsls	r0, r0, #1
 80049a8:	f7fd f82a 	bl	8001a00 <chSemWaitTimeout.constprop.49>
 80049ac:	0005      	movs	r5, r0
 80049ae:	f7fe fdef 	bl	8003590 <test_wait_threads>
 80049b2:	4269      	negs	r1, r5
 80049b4:	4169      	adcs	r1, r5
 80049b6:	2004      	movs	r0, #4
 80049b8:	b2c9      	uxtb	r1, r1
 80049ba:	f7fb fee9 	bl	8000790 <_test_assert>
 80049be:	2800      	cmp	r0, #0
 80049c0:	d1ce      	bne.n	8004960 <sem2_execute+0x20>
 80049c2:	6823      	ldr	r3, [r4, #0]
 80049c4:	3005      	adds	r0, #5
 80049c6:	1b19      	subs	r1, r3, r4
 80049c8:	424b      	negs	r3, r1
 80049ca:	4159      	adcs	r1, r3
 80049cc:	b2c9      	uxtb	r1, r1
 80049ce:	f7fb fedf 	bl	8000790 <_test_assert>
 80049d2:	2800      	cmp	r0, #0
 80049d4:	d1c4      	bne.n	8004960 <sem2_execute+0x20>
 80049d6:	68a1      	ldr	r1, [r4, #8]
 80049d8:	3006      	adds	r0, #6
 80049da:	424b      	negs	r3, r1
 80049dc:	4159      	adcs	r1, r3
 80049de:	b2c9      	uxtb	r1, r1
 80049e0:	f7fb fed6 	bl	8000790 <_test_assert>
 80049e4:	2800      	cmp	r0, #0
 80049e6:	d1bb      	bne.n	8004960 <sem2_execute+0x20>
 80049e8:	f7fd fda2 	bl	8002530 <test_wait_tick>
 80049ec:	b672      	cpsid	i
 80049ee:	4b23      	ldr	r3, [pc, #140]	; (8004a7c <sem2_execute+0x13c>)
 80049f0:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 80049f2:	b662      	cpsie	i
 80049f4:	2541      	movs	r5, #65	; 0x41
 80049f6:	0028      	movs	r0, r5
 80049f8:	f7fb fee2 	bl	80007c0 <test_emit_token>
 80049fc:	2032      	movs	r0, #50	; 0x32
 80049fe:	f7fc ffff 	bl	8001a00 <chSemWaitTimeout.constprop.49>
 8004a02:	3001      	adds	r0, #1
 8004a04:	4241      	negs	r1, r0
 8004a06:	4141      	adcs	r1, r0
 8004a08:	2007      	movs	r0, #7
 8004a0a:	b2c9      	uxtb	r1, r1
 8004a0c:	f7fb fec0 	bl	8000790 <_test_assert>
 8004a10:	2800      	cmp	r0, #0
 8004a12:	d1a5      	bne.n	8004960 <sem2_execute+0x20>
 8004a14:	6823      	ldr	r3, [r4, #0]
 8004a16:	3008      	adds	r0, #8
 8004a18:	1b19      	subs	r1, r3, r4
 8004a1a:	424b      	negs	r3, r1
 8004a1c:	4159      	adcs	r1, r3
 8004a1e:	b2c9      	uxtb	r1, r1
 8004a20:	f7fb feb6 	bl	8000790 <_test_assert>
 8004a24:	2800      	cmp	r0, #0
 8004a26:	d19b      	bne.n	8004960 <sem2_execute+0x20>
 8004a28:	68a1      	ldr	r1, [r4, #8]
 8004a2a:	3009      	adds	r0, #9
 8004a2c:	424b      	negs	r3, r1
 8004a2e:	4159      	adcs	r1, r3
 8004a30:	b2c9      	uxtb	r1, r1
 8004a32:	f7fb fead 	bl	8000790 <_test_assert>
 8004a36:	2800      	cmp	r0, #0
 8004a38:	d000      	beq.n	8004a3c <sem2_execute+0xfc>
 8004a3a:	e791      	b.n	8004960 <sem2_execute+0x20>
 8004a3c:	3501      	adds	r5, #1
 8004a3e:	b2ed      	uxtb	r5, r5
 8004a40:	2d46      	cmp	r5, #70	; 0x46
 8004a42:	d1d8      	bne.n	80049f6 <sem2_execute+0xb6>
 8004a44:	490e      	ldr	r1, [pc, #56]	; (8004a80 <sem2_execute+0x140>)
 8004a46:	300a      	adds	r0, #10
 8004a48:	f7fb fe7a 	bl	8000740 <_test_assert_sequence>
 8004a4c:	2800      	cmp	r0, #0
 8004a4e:	d000      	beq.n	8004a52 <sem2_execute+0x112>
 8004a50:	e786      	b.n	8004960 <sem2_execute+0x20>
 8004a52:	b2b6      	uxth	r6, r6
 8004a54:	0032      	movs	r2, r6
 8004a56:	36fa      	adds	r6, #250	; 0xfa
 8004a58:	32fc      	adds	r2, #252	; 0xfc
 8004a5a:	b292      	uxth	r2, r2
 8004a5c:	b2b1      	uxth	r1, r6
 8004a5e:	300b      	adds	r0, #11
 8004a60:	f7fb fe4e 	bl	8000700 <_test_assert_time_window>
 8004a64:	e77c      	b.n	8004960 <sem2_execute+0x20>
 8004a66:	46c0      	nop			; (mov r8, r8)
 8004a68:	200006ac 	.word	0x200006ac
 8004a6c:	20000738 	.word	0x20000738
 8004a70:	08002511 	.word	0x08002511
 8004a74:	20000938 	.word	0x20000938
 8004a78:	20000fcc 	.word	0x20000fcc
 8004a7c:	40000400 	.word	0x40000400
 8004a80:	080059d0 	.word	0x080059d0
	...

08004a90 <sem1_execute>:
 8004a90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a92:	46ce      	mov	lr, r9
 8004a94:	4647      	mov	r7, r8
 8004a96:	21a4      	movs	r1, #164	; 0xa4
 8004a98:	b580      	push	{r7, lr}
 8004a9a:	4b4e      	ldr	r3, [pc, #312]	; (8004bd4 <sem1_execute+0x144>)
 8004a9c:	4f4e      	ldr	r7, [pc, #312]	; (8004bd8 <sem1_execute+0x148>)
 8004a9e:	4698      	mov	r8, r3
 8004aa0:	699b      	ldr	r3, [r3, #24]
 8004aa2:	4e4e      	ldr	r6, [pc, #312]	; (8004bdc <sem1_execute+0x14c>)
 8004aa4:	689a      	ldr	r2, [r3, #8]
 8004aa6:	4b4e      	ldr	r3, [pc, #312]	; (8004be0 <sem1_execute+0x150>)
 8004aa8:	b083      	sub	sp, #12
 8004aaa:	3205      	adds	r2, #5
 8004aac:	9300      	str	r3, [sp, #0]
 8004aae:	0049      	lsls	r1, r1, #1
 8004ab0:	4699      	mov	r9, r3
 8004ab2:	0030      	movs	r0, r6
 8004ab4:	003b      	movs	r3, r7
 8004ab6:	f7fc fe83 	bl	80017c0 <chThdCreateStatic>
 8004aba:	4643      	mov	r3, r8
 8004abc:	4d49      	ldr	r5, [pc, #292]	; (8004be4 <sem1_execute+0x154>)
 8004abe:	21a4      	movs	r1, #164	; 0xa4
 8004ac0:	6028      	str	r0, [r5, #0]
 8004ac2:	0030      	movs	r0, r6
 8004ac4:	699b      	ldr	r3, [r3, #24]
 8004ac6:	3049      	adds	r0, #73	; 0x49
 8004ac8:	689a      	ldr	r2, [r3, #8]
 8004aca:	4b47      	ldr	r3, [pc, #284]	; (8004be8 <sem1_execute+0x158>)
 8004acc:	3201      	adds	r2, #1
 8004ace:	9300      	str	r3, [sp, #0]
 8004ad0:	0049      	lsls	r1, r1, #1
 8004ad2:	003b      	movs	r3, r7
 8004ad4:	30ff      	adds	r0, #255	; 0xff
 8004ad6:	f7fc fe73 	bl	80017c0 <chThdCreateStatic>
 8004ada:	4643      	mov	r3, r8
 8004adc:	699b      	ldr	r3, [r3, #24]
 8004ade:	21a4      	movs	r1, #164	; 0xa4
 8004ae0:	689a      	ldr	r2, [r3, #8]
 8004ae2:	23a4      	movs	r3, #164	; 0xa4
 8004ae4:	009b      	lsls	r3, r3, #2
 8004ae6:	6068      	str	r0, [r5, #4]
 8004ae8:	18f0      	adds	r0, r6, r3
 8004aea:	4b40      	ldr	r3, [pc, #256]	; (8004bec <sem1_execute+0x15c>)
 8004aec:	3203      	adds	r2, #3
 8004aee:	9300      	str	r3, [sp, #0]
 8004af0:	0049      	lsls	r1, r1, #1
 8004af2:	003b      	movs	r3, r7
 8004af4:	f7fc fe64 	bl	80017c0 <chThdCreateStatic>
 8004af8:	4643      	mov	r3, r8
 8004afa:	699b      	ldr	r3, [r3, #24]
 8004afc:	21a4      	movs	r1, #164	; 0xa4
 8004afe:	689a      	ldr	r2, [r3, #8]
 8004b00:	23f6      	movs	r3, #246	; 0xf6
 8004b02:	009b      	lsls	r3, r3, #2
 8004b04:	60a8      	str	r0, [r5, #8]
 8004b06:	18f0      	adds	r0, r6, r3
 8004b08:	4b39      	ldr	r3, [pc, #228]	; (8004bf0 <sem1_execute+0x160>)
 8004b0a:	3204      	adds	r2, #4
 8004b0c:	9300      	str	r3, [sp, #0]
 8004b0e:	0049      	lsls	r1, r1, #1
 8004b10:	003b      	movs	r3, r7
 8004b12:	f7fc fe55 	bl	80017c0 <chThdCreateStatic>
 8004b16:	4643      	mov	r3, r8
 8004b18:	699b      	ldr	r3, [r3, #24]
 8004b1a:	21a4      	movs	r1, #164	; 0xa4
 8004b1c:	689a      	ldr	r2, [r3, #8]
 8004b1e:	23a4      	movs	r3, #164	; 0xa4
 8004b20:	00db      	lsls	r3, r3, #3
 8004b22:	60e8      	str	r0, [r5, #12]
 8004b24:	18f0      	adds	r0, r6, r3
 8004b26:	4b33      	ldr	r3, [pc, #204]	; (8004bf4 <sem1_execute+0x164>)
 8004b28:	0049      	lsls	r1, r1, #1
 8004b2a:	3202      	adds	r2, #2
 8004b2c:	9300      	str	r3, [sp, #0]
 8004b2e:	003b      	movs	r3, r7
 8004b30:	f7fc fe46 	bl	80017c0 <chThdCreateStatic>
 8004b34:	4c30      	ldr	r4, [pc, #192]	; (8004bf8 <sem1_execute+0x168>)
 8004b36:	6128      	str	r0, [r5, #16]
 8004b38:	0020      	movs	r0, r4
 8004b3a:	f7fc fe29 	bl	8001790 <chSemSignal>
 8004b3e:	0020      	movs	r0, r4
 8004b40:	f7fc fe26 	bl	8001790 <chSemSignal>
 8004b44:	0020      	movs	r0, r4
 8004b46:	f7fc fe23 	bl	8001790 <chSemSignal>
 8004b4a:	0020      	movs	r0, r4
 8004b4c:	f7fc fe20 	bl	8001790 <chSemSignal>
 8004b50:	0020      	movs	r0, r4
 8004b52:	f7fc fe1d 	bl	8001790 <chSemSignal>
 8004b56:	f7fe fd1b 	bl	8003590 <test_wait_threads>
 8004b5a:	4928      	ldr	r1, [pc, #160]	; (8004bfc <sem1_execute+0x16c>)
 8004b5c:	2001      	movs	r0, #1
 8004b5e:	f7fb fdef 	bl	8000740 <_test_assert_sequence>
 8004b62:	2800      	cmp	r0, #0
 8004b64:	d004      	beq.n	8004b70 <sem1_execute+0xe0>
 8004b66:	b003      	add	sp, #12
 8004b68:	bc0c      	pop	{r2, r3}
 8004b6a:	4690      	mov	r8, r2
 8004b6c:	4699      	mov	r9, r3
 8004b6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004b70:	4643      	mov	r3, r8
 8004b72:	699b      	ldr	r3, [r3, #24]
 8004b74:	21a4      	movs	r1, #164	; 0xa4
 8004b76:	689a      	ldr	r2, [r3, #8]
 8004b78:	464b      	mov	r3, r9
 8004b7a:	3205      	adds	r2, #5
 8004b7c:	9300      	str	r3, [sp, #0]
 8004b7e:	0049      	lsls	r1, r1, #1
 8004b80:	003b      	movs	r3, r7
 8004b82:	0030      	movs	r0, r6
 8004b84:	f7fc fe1c 	bl	80017c0 <chThdCreateStatic>
 8004b88:	6028      	str	r0, [r5, #0]
 8004b8a:	b672      	cpsid	i
 8004b8c:	2502      	movs	r5, #2
 8004b8e:	2600      	movs	r6, #0
 8004b90:	e002      	b.n	8004b98 <sem1_execute+0x108>
 8004b92:	2d01      	cmp	r5, #1
 8004b94:	d00e      	beq.n	8004bb4 <sem1_execute+0x124>
 8004b96:	2501      	movs	r5, #1
 8004b98:	68a3      	ldr	r3, [r4, #8]
 8004b9a:	3301      	adds	r3, #1
 8004b9c:	60a3      	str	r3, [r4, #8]
 8004b9e:	2b00      	cmp	r3, #0
 8004ba0:	dcf7      	bgt.n	8004b92 <sem1_execute+0x102>
 8004ba2:	6820      	ldr	r0, [r4, #0]
 8004ba4:	6803      	ldr	r3, [r0, #0]
 8004ba6:	6023      	str	r3, [r4, #0]
 8004ba8:	605c      	str	r4, [r3, #4]
 8004baa:	f7fb ffd1 	bl	8000b50 <chSchReadyI>
 8004bae:	6206      	str	r6, [r0, #32]
 8004bb0:	2d01      	cmp	r5, #1
 8004bb2:	d1f0      	bne.n	8004b96 <sem1_execute+0x106>
 8004bb4:	f7fc fc2c 	bl	8001410 <chSchRescheduleS>
 8004bb8:	b662      	cpsie	i
 8004bba:	f7fe fce9 	bl	8003590 <test_wait_threads>
 8004bbe:	b672      	cpsid	i
 8004bc0:	68a1      	ldr	r1, [r4, #8]
 8004bc2:	2002      	movs	r0, #2
 8004bc4:	3901      	subs	r1, #1
 8004bc6:	424b      	negs	r3, r1
 8004bc8:	4159      	adcs	r1, r3
 8004bca:	b2c9      	uxtb	r1, r1
 8004bcc:	f7fb fde0 	bl	8000790 <_test_assert>
 8004bd0:	b662      	cpsie	i
 8004bd2:	e7c8      	b.n	8004b66 <sem1_execute+0xd6>
 8004bd4:	20000738 	.word	0x20000738
 8004bd8:	080034c1 	.word	0x080034c1
 8004bdc:	20000938 	.word	0x20000938
 8004be0:	08005790 	.word	0x08005790
 8004be4:	20000fcc 	.word	0x20000fcc
 8004be8:	08005780 	.word	0x08005780
 8004bec:	08005784 	.word	0x08005784
 8004bf0:	08005788 	.word	0x08005788
 8004bf4:	080059d4 	.word	0x080059d4
 8004bf8:	200006ac 	.word	0x200006ac
 8004bfc:	080059d0 	.word	0x080059d0

08004c00 <thd2_execute>:
 8004c00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004c02:	4b46      	ldr	r3, [pc, #280]	; (8004d1c <thd2_execute+0x11c>)
 8004c04:	4e46      	ldr	r6, [pc, #280]	; (8004d20 <thd2_execute+0x120>)
 8004c06:	4647      	mov	r7, r8
 8004c08:	4698      	mov	r8, r3
 8004c0a:	69b3      	ldr	r3, [r6, #24]
 8004c0c:	46ce      	mov	lr, r9
 8004c0e:	689a      	ldr	r2, [r3, #8]
 8004c10:	23a4      	movs	r3, #164	; 0xa4
 8004c12:	005b      	lsls	r3, r3, #1
 8004c14:	4699      	mov	r9, r3
 8004c16:	b580      	push	{r7, lr}
 8004c18:	4d42      	ldr	r5, [pc, #264]	; (8004d24 <thd2_execute+0x124>)
 8004c1a:	4b43      	ldr	r3, [pc, #268]	; (8004d28 <thd2_execute+0x128>)
 8004c1c:	b083      	sub	sp, #12
 8004c1e:	002c      	movs	r4, r5
 8004c20:	9300      	str	r3, [sp, #0]
 8004c22:	4649      	mov	r1, r9
 8004c24:	4643      	mov	r3, r8
 8004c26:	3a04      	subs	r2, #4
 8004c28:	0028      	movs	r0, r5
 8004c2a:	f7fc fdc9 	bl	80017c0 <chThdCreateStatic>
 8004c2e:	69b3      	ldr	r3, [r6, #24]
 8004c30:	4f3e      	ldr	r7, [pc, #248]	; (8004d2c <thd2_execute+0x12c>)
 8004c32:	689a      	ldr	r2, [r3, #8]
 8004c34:	3c49      	subs	r4, #73	; 0x49
 8004c36:	4b3e      	ldr	r3, [pc, #248]	; (8004d30 <thd2_execute+0x130>)
 8004c38:	3cff      	subs	r4, #255	; 0xff
 8004c3a:	6078      	str	r0, [r7, #4]
 8004c3c:	4649      	mov	r1, r9
 8004c3e:	9300      	str	r3, [sp, #0]
 8004c40:	3a05      	subs	r2, #5
 8004c42:	4643      	mov	r3, r8
 8004c44:	0020      	movs	r0, r4
 8004c46:	f7fc fdbb 	bl	80017c0 <chThdCreateStatic>
 8004c4a:	69b3      	ldr	r3, [r6, #24]
 8004c4c:	6038      	str	r0, [r7, #0]
 8004c4e:	689a      	ldr	r2, [r3, #8]
 8004c50:	23f6      	movs	r3, #246	; 0xf6
 8004c52:	009b      	lsls	r3, r3, #2
 8004c54:	18e8      	adds	r0, r5, r3
 8004c56:	4b37      	ldr	r3, [pc, #220]	; (8004d34 <thd2_execute+0x134>)
 8004c58:	4649      	mov	r1, r9
 8004c5a:	9300      	str	r3, [sp, #0]
 8004c5c:	3a01      	subs	r2, #1
 8004c5e:	4643      	mov	r3, r8
 8004c60:	f7fc fdae 	bl	80017c0 <chThdCreateStatic>
 8004c64:	69b3      	ldr	r3, [r6, #24]
 8004c66:	6138      	str	r0, [r7, #16]
 8004c68:	689a      	ldr	r2, [r3, #8]
 8004c6a:	23a4      	movs	r3, #164	; 0xa4
 8004c6c:	009b      	lsls	r3, r3, #2
 8004c6e:	18e8      	adds	r0, r5, r3
 8004c70:	4b31      	ldr	r3, [pc, #196]	; (8004d38 <thd2_execute+0x138>)
 8004c72:	3a02      	subs	r2, #2
 8004c74:	9300      	str	r3, [sp, #0]
 8004c76:	4649      	mov	r1, r9
 8004c78:	4643      	mov	r3, r8
 8004c7a:	f7fc fda1 	bl	80017c0 <chThdCreateStatic>
 8004c7e:	60f8      	str	r0, [r7, #12]
 8004c80:	b672      	cpsid	i
 8004c82:	229b      	movs	r2, #155	; 0x9b
 8004c84:	69b3      	ldr	r3, [r6, #24]
 8004c86:	0092      	lsls	r2, r2, #2
 8004c88:	18a9      	adds	r1, r5, r2
 8004c8a:	3230      	adds	r2, #48	; 0x30
 8004c8c:	689b      	ldr	r3, [r3, #8]
 8004c8e:	50a1      	str	r1, [r4, r2]
 8004c90:	4641      	mov	r1, r8
 8004c92:	3229      	adds	r2, #41	; 0x29
 8004c94:	32ff      	adds	r2, #255	; 0xff
 8004c96:	50a1      	str	r1, [r4, r2]
 8004c98:	4928      	ldr	r1, [pc, #160]	; (8004d3c <thd2_execute+0x13c>)
 8004c9a:	3204      	adds	r2, #4
 8004c9c:	50a1      	str	r1, [r4, r2]
 8004c9e:	4928      	ldr	r1, [pc, #160]	; (8004d40 <thd2_execute+0x140>)
 8004ca0:	320c      	adds	r2, #12
 8004ca2:	50a1      	str	r1, [r4, r2]
 8004ca4:	3a3d      	subs	r2, #61	; 0x3d
 8004ca6:	3b03      	subs	r3, #3
 8004ca8:	3aff      	subs	r2, #255	; 0xff
 8004caa:	50a3      	str	r3, [r4, r2]
 8004cac:	3234      	adds	r2, #52	; 0x34
 8004cae:	50a3      	str	r3, [r4, r2]
 8004cb0:	2300      	movs	r3, #0
 8004cb2:	3a04      	subs	r2, #4
 8004cb4:	50a3      	str	r3, [r4, r2]
 8004cb6:	3a04      	subs	r2, #4
 8004cb8:	50a3      	str	r3, [r4, r2]
 8004cba:	3a1c      	subs	r2, #28
 8004cbc:	50a3      	str	r3, [r4, r2]
 8004cbe:	23ab      	movs	r3, #171	; 0xab
 8004cc0:	2202      	movs	r2, #2
 8004cc2:	009b      	lsls	r3, r3, #2
 8004cc4:	52e2      	strh	r2, [r4, r3]
 8004cc6:	4b1f      	ldr	r3, [pc, #124]	; (8004d44 <thd2_execute+0x144>)
 8004cc8:	3a01      	subs	r2, #1
 8004cca:	54e2      	strb	r2, [r4, r3]
 8004ccc:	6972      	ldr	r2, [r6, #20]
 8004cce:	3b0e      	subs	r3, #14
 8004cd0:	50e6      	str	r6, [r4, r3]
 8004cd2:	3304      	adds	r3, #4
 8004cd4:	50e2      	str	r2, [r4, r3]
 8004cd6:	002b      	movs	r3, r5
 8004cd8:	0029      	movs	r1, r5
 8004cda:	444b      	add	r3, r9
 8004cdc:	6113      	str	r3, [r2, #16]
 8004cde:	22ad      	movs	r2, #173	; 0xad
 8004ce0:	316d      	adds	r1, #109	; 0x6d
 8004ce2:	31ff      	adds	r1, #255	; 0xff
 8004ce4:	0092      	lsls	r2, r2, #2
 8004ce6:	3571      	adds	r5, #113	; 0x71
 8004ce8:	50a1      	str	r1, [r4, r2]
 8004cea:	35ff      	adds	r5, #255	; 0xff
 8004cec:	3204      	adds	r2, #4
 8004cee:	50a5      	str	r5, [r4, r2]
 8004cf0:	3204      	adds	r2, #4
 8004cf2:	6173      	str	r3, [r6, #20]
 8004cf4:	50a5      	str	r5, [r4, r2]
 8004cf6:	60bb      	str	r3, [r7, #8]
 8004cf8:	b662      	cpsie	i
 8004cfa:	68b8      	ldr	r0, [r7, #8]
 8004cfc:	b672      	cpsid	i
 8004cfe:	f7fb ff27 	bl	8000b50 <chSchReadyI>
 8004d02:	b662      	cpsie	i
 8004d04:	f7fe fc44 	bl	8003590 <test_wait_threads>
 8004d08:	490f      	ldr	r1, [pc, #60]	; (8004d48 <thd2_execute+0x148>)
 8004d0a:	2001      	movs	r0, #1
 8004d0c:	f7fb fd18 	bl	8000740 <_test_assert_sequence>
 8004d10:	b003      	add	sp, #12
 8004d12:	bc0c      	pop	{r2, r3}
 8004d14:	4690      	mov	r8, r2
 8004d16:	4699      	mov	r9, r3
 8004d18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004d1a:	46c0      	nop			; (mov r8, r8)
 8004d1c:	08000811 	.word	0x08000811
 8004d20:	20000738 	.word	0x20000738
 8004d24:	20000a80 	.word	0x20000a80
 8004d28:	08005788 	.word	0x08005788
 8004d2c:	20000fcc 	.word	0x20000fcc
 8004d30:	080059d4 	.word	0x080059d4
 8004d34:	08005790 	.word	0x08005790
 8004d38:	08005780 	.word	0x08005780
 8004d3c:	08005784 	.word	0x08005784
 8004d40:	080001a1 	.word	0x080001a1
 8004d44:	000002ae 	.word	0x000002ae
 8004d48:	080059d0 	.word	0x080059d0
 8004d4c:	00000000 	.word	0x00000000

08004d50 <thd1_execute>:
 8004d50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d52:	46c6      	mov	lr, r8
 8004d54:	4b29      	ldr	r3, [pc, #164]	; (8004dfc <thd1_execute+0xac>)
 8004d56:	26a4      	movs	r6, #164	; 0xa4
 8004d58:	4698      	mov	r8, r3
 8004d5a:	b500      	push	{lr}
 8004d5c:	699b      	ldr	r3, [r3, #24]
 8004d5e:	4f28      	ldr	r7, [pc, #160]	; (8004e00 <thd1_execute+0xb0>)
 8004d60:	4c28      	ldr	r4, [pc, #160]	; (8004e04 <thd1_execute+0xb4>)
 8004d62:	689a      	ldr	r2, [r3, #8]
 8004d64:	4b28      	ldr	r3, [pc, #160]	; (8004e08 <thd1_execute+0xb8>)
 8004d66:	b082      	sub	sp, #8
 8004d68:	0076      	lsls	r6, r6, #1
 8004d6a:	9300      	str	r3, [sp, #0]
 8004d6c:	0031      	movs	r1, r6
 8004d6e:	003b      	movs	r3, r7
 8004d70:	3a05      	subs	r2, #5
 8004d72:	0020      	movs	r0, r4
 8004d74:	f7fc fd24 	bl	80017c0 <chThdCreateStatic>
 8004d78:	4643      	mov	r3, r8
 8004d7a:	699b      	ldr	r3, [r3, #24]
 8004d7c:	4d23      	ldr	r5, [pc, #140]	; (8004e0c <thd1_execute+0xbc>)
 8004d7e:	689a      	ldr	r2, [r3, #8]
 8004d80:	4b23      	ldr	r3, [pc, #140]	; (8004e10 <thd1_execute+0xc0>)
 8004d82:	6028      	str	r0, [r5, #0]
 8004d84:	0031      	movs	r1, r6
 8004d86:	9300      	str	r3, [sp, #0]
 8004d88:	3a04      	subs	r2, #4
 8004d8a:	003b      	movs	r3, r7
 8004d8c:	19a0      	adds	r0, r4, r6
 8004d8e:	f7fc fd17 	bl	80017c0 <chThdCreateStatic>
 8004d92:	4643      	mov	r3, r8
 8004d94:	699b      	ldr	r3, [r3, #24]
 8004d96:	6068      	str	r0, [r5, #4]
 8004d98:	689a      	ldr	r2, [r3, #8]
 8004d9a:	23a4      	movs	r3, #164	; 0xa4
 8004d9c:	009b      	lsls	r3, r3, #2
 8004d9e:	18e0      	adds	r0, r4, r3
 8004da0:	4b1c      	ldr	r3, [pc, #112]	; (8004e14 <thd1_execute+0xc4>)
 8004da2:	0031      	movs	r1, r6
 8004da4:	9300      	str	r3, [sp, #0]
 8004da6:	3a03      	subs	r2, #3
 8004da8:	003b      	movs	r3, r7
 8004daa:	f7fc fd09 	bl	80017c0 <chThdCreateStatic>
 8004dae:	4643      	mov	r3, r8
 8004db0:	699b      	ldr	r3, [r3, #24]
 8004db2:	60a8      	str	r0, [r5, #8]
 8004db4:	689a      	ldr	r2, [r3, #8]
 8004db6:	23f6      	movs	r3, #246	; 0xf6
 8004db8:	009b      	lsls	r3, r3, #2
 8004dba:	18e0      	adds	r0, r4, r3
 8004dbc:	4b16      	ldr	r3, [pc, #88]	; (8004e18 <thd1_execute+0xc8>)
 8004dbe:	0031      	movs	r1, r6
 8004dc0:	9300      	str	r3, [sp, #0]
 8004dc2:	3a02      	subs	r2, #2
 8004dc4:	003b      	movs	r3, r7
 8004dc6:	f7fc fcfb 	bl	80017c0 <chThdCreateStatic>
 8004dca:	4643      	mov	r3, r8
 8004dcc:	699b      	ldr	r3, [r3, #24]
 8004dce:	60e8      	str	r0, [r5, #12]
 8004dd0:	689a      	ldr	r2, [r3, #8]
 8004dd2:	23a4      	movs	r3, #164	; 0xa4
 8004dd4:	00db      	lsls	r3, r3, #3
 8004dd6:	18e0      	adds	r0, r4, r3
 8004dd8:	4b10      	ldr	r3, [pc, #64]	; (8004e1c <thd1_execute+0xcc>)
 8004dda:	3a01      	subs	r2, #1
 8004ddc:	0031      	movs	r1, r6
 8004dde:	9300      	str	r3, [sp, #0]
 8004de0:	003b      	movs	r3, r7
 8004de2:	f7fc fced 	bl	80017c0 <chThdCreateStatic>
 8004de6:	6128      	str	r0, [r5, #16]
 8004de8:	f7fe fbd2 	bl	8003590 <test_wait_threads>
 8004dec:	490c      	ldr	r1, [pc, #48]	; (8004e20 <thd1_execute+0xd0>)
 8004dee:	2001      	movs	r0, #1
 8004df0:	f7fb fca6 	bl	8000740 <_test_assert_sequence>
 8004df4:	b002      	add	sp, #8
 8004df6:	bc04      	pop	{r2}
 8004df8:	4690      	mov	r8, r2
 8004dfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004dfc:	20000738 	.word	0x20000738
 8004e00:	08000811 	.word	0x08000811
 8004e04:	20000938 	.word	0x20000938
 8004e08:	080059d4 	.word	0x080059d4
 8004e0c:	20000fcc 	.word	0x20000fcc
 8004e10:	08005788 	.word	0x08005788
 8004e14:	08005784 	.word	0x08005784
 8004e18:	08005780 	.word	0x08005780
 8004e1c:	08005790 	.word	0x08005790
 8004e20:	080059d0 	.word	0x080059d0
	...

08004e30 <main>:
 8004e30:	4ba2      	ldr	r3, [pc, #648]	; (80050bc <main+0x28c>)
 8004e32:	2101      	movs	r1, #1
 8004e34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004e36:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004e38:	46de      	mov	lr, fp
 8004e3a:	2200      	movs	r2, #0
 8004e3c:	4657      	mov	r7, sl
 8004e3e:	464e      	mov	r6, r9
 8004e40:	4645      	mov	r5, r8
 8004e42:	4249      	negs	r1, r1
 8004e44:	b5e0      	push	{r5, r6, r7, lr}
 8004e46:	6299      	str	r1, [r3, #40]	; 0x28
 8004e48:	629a      	str	r2, [r3, #40]	; 0x28
 8004e4a:	6918      	ldr	r0, [r3, #16]
 8004e4c:	6119      	str	r1, [r3, #16]
 8004e4e:	611a      	str	r2, [r3, #16]
 8004e50:	68d8      	ldr	r0, [r3, #12]
 8004e52:	499b      	ldr	r1, [pc, #620]	; (80050c0 <main+0x290>)
 8004e54:	b085      	sub	sp, #20
 8004e56:	4301      	orrs	r1, r0
 8004e58:	60d9      	str	r1, [r3, #12]
 8004e5a:	2180      	movs	r1, #128	; 0x80
 8004e5c:	60da      	str	r2, [r3, #12]
 8004e5e:	69d8      	ldr	r0, [r3, #28]
 8004e60:	0549      	lsls	r1, r1, #21
 8004e62:	4301      	orrs	r1, r0
 8004e64:	61d9      	str	r1, [r3, #28]
 8004e66:	2180      	movs	r1, #128	; 0x80
 8004e68:	4896      	ldr	r0, [pc, #600]	; (80050c4 <main+0x294>)
 8004e6a:	0049      	lsls	r1, r1, #1
 8004e6c:	6804      	ldr	r4, [r0, #0]
 8004e6e:	4321      	orrs	r1, r4
 8004e70:	6001      	str	r1, [r0, #0]
 8004e72:	20c0      	movs	r0, #192	; 0xc0
 8004e74:	6a19      	ldr	r1, [r3, #32]
 8004e76:	0080      	lsls	r0, r0, #2
 8004e78:	4001      	ands	r1, r0
 8004e7a:	3801      	subs	r0, #1
 8004e7c:	38ff      	subs	r0, #255	; 0xff
 8004e7e:	4281      	cmp	r1, r0
 8004e80:	d003      	beq.n	8004e8a <main+0x5a>
 8004e82:	2180      	movs	r1, #128	; 0x80
 8004e84:	0249      	lsls	r1, r1, #9
 8004e86:	6219      	str	r1, [r3, #32]
 8004e88:	621a      	str	r2, [r3, #32]
 8004e8a:	2280      	movs	r2, #128	; 0x80
 8004e8c:	4b8b      	ldr	r3, [pc, #556]	; (80050bc <main+0x28c>)
 8004e8e:	0212      	lsls	r2, r2, #8
 8004e90:	6a19      	ldr	r1, [r3, #32]
 8004e92:	4211      	tst	r1, r2
 8004e94:	d107      	bne.n	8004ea6 <main+0x76>
 8004e96:	2180      	movs	r1, #128	; 0x80
 8004e98:	6a18      	ldr	r0, [r3, #32]
 8004e9a:	0089      	lsls	r1, r1, #2
 8004e9c:	4301      	orrs	r1, r0
 8004e9e:	6219      	str	r1, [r3, #32]
 8004ea0:	6a19      	ldr	r1, [r3, #32]
 8004ea2:	430a      	orrs	r2, r1
 8004ea4:	621a      	str	r2, [r3, #32]
 8004ea6:	23bc      	movs	r3, #188	; 0xbc
 8004ea8:	4c84      	ldr	r4, [pc, #528]	; (80050bc <main+0x28c>)
 8004eaa:	03db      	lsls	r3, r3, #15
 8004eac:	6962      	ldr	r2, [r4, #20]
 8004eae:	4986      	ldr	r1, [pc, #536]	; (80050c8 <main+0x298>)
 8004eb0:	4313      	orrs	r3, r2
 8004eb2:	2290      	movs	r2, #144	; 0x90
 8004eb4:	6163      	str	r3, [r4, #20]
 8004eb6:	2300      	movs	r3, #0
 8004eb8:	05d2      	lsls	r2, r2, #23
 8004eba:	6053      	str	r3, [r2, #4]
 8004ebc:	6091      	str	r1, [r2, #8]
 8004ebe:	4983      	ldr	r1, [pc, #524]	; (80050cc <main+0x29c>)
 8004ec0:	2501      	movs	r5, #1
 8004ec2:	60d1      	str	r1, [r2, #12]
 8004ec4:	4982      	ldr	r1, [pc, #520]	; (80050d0 <main+0x2a0>)
 8004ec6:	2080      	movs	r0, #128	; 0x80
 8004ec8:	6151      	str	r1, [r2, #20]
 8004eca:	2188      	movs	r1, #136	; 0x88
 8004ecc:	0149      	lsls	r1, r1, #5
 8004ece:	6211      	str	r1, [r2, #32]
 8004ed0:	21aa      	movs	r1, #170	; 0xaa
 8004ed2:	0309      	lsls	r1, r1, #12
 8004ed4:	6251      	str	r1, [r2, #36]	; 0x24
 8004ed6:	497f      	ldr	r1, [pc, #508]	; (80050d4 <main+0x2a4>)
 8004ed8:	4e7f      	ldr	r6, [pc, #508]	; (80050d8 <main+0x2a8>)
 8004eda:	6011      	str	r1, [r2, #0]
 8004edc:	4a7f      	ldr	r2, [pc, #508]	; (80050dc <main+0x2ac>)
 8004ede:	4980      	ldr	r1, [pc, #512]	; (80050e0 <main+0x2b0>)
 8004ee0:	426d      	negs	r5, r5
 8004ee2:	6053      	str	r3, [r2, #4]
 8004ee4:	4f7f      	ldr	r7, [pc, #508]	; (80050e4 <main+0x2b4>)
 8004ee6:	6095      	str	r5, [r2, #8]
 8004ee8:	60d6      	str	r6, [r2, #12]
 8004eea:	6151      	str	r1, [r2, #20]
 8004eec:	6213      	str	r3, [r2, #32]
 8004eee:	6253      	str	r3, [r2, #36]	; 0x24
 8004ef0:	6010      	str	r0, [r2, #0]
 8004ef2:	4a7d      	ldr	r2, [pc, #500]	; (80050e8 <main+0x2b8>)
 8004ef4:	6053      	str	r3, [r2, #4]
 8004ef6:	6095      	str	r5, [r2, #8]
 8004ef8:	60d7      	str	r7, [r2, #12]
 8004efa:	6151      	str	r1, [r2, #20]
 8004efc:	6213      	str	r3, [r2, #32]
 8004efe:	6253      	str	r3, [r2, #36]	; 0x24
 8004f00:	6013      	str	r3, [r2, #0]
 8004f02:	4a7a      	ldr	r2, [pc, #488]	; (80050ec <main+0x2bc>)
 8004f04:	2701      	movs	r7, #1
 8004f06:	6053      	str	r3, [r2, #4]
 8004f08:	6095      	str	r5, [r2, #8]
 8004f0a:	60d6      	str	r6, [r2, #12]
 8004f0c:	4d78      	ldr	r5, [pc, #480]	; (80050f0 <main+0x2c0>)
 8004f0e:	6151      	str	r1, [r2, #20]
 8004f10:	6213      	str	r3, [r2, #32]
 8004f12:	6253      	str	r3, [r2, #36]	; 0x24
 8004f14:	6013      	str	r3, [r2, #0]
 8004f16:	4a77      	ldr	r2, [pc, #476]	; (80050f4 <main+0x2c4>)
 8004f18:	6053      	str	r3, [r2, #4]
 8004f1a:	6093      	str	r3, [r2, #8]
 8004f1c:	60d5      	str	r5, [r2, #12]
 8004f1e:	6151      	str	r1, [r2, #20]
 8004f20:	4d75      	ldr	r5, [pc, #468]	; (80050f8 <main+0x2c8>)
 8004f22:	6213      	str	r3, [r2, #32]
 8004f24:	6253      	str	r3, [r2, #36]	; 0x24
 8004f26:	6013      	str	r3, [r2, #0]
 8004f28:	4a74      	ldr	r2, [pc, #464]	; (80050fc <main+0x2cc>)
 8004f2a:	c220      	stmia	r2!, {r5}
 8004f2c:	4d73      	ldr	r5, [pc, #460]	; (80050fc <main+0x2cc>)
 8004f2e:	606a      	str	r2, [r5, #4]
 8004f30:	002a      	movs	r2, r5
 8004f32:	320c      	adds	r2, #12
 8004f34:	60ea      	str	r2, [r5, #12]
 8004f36:	612a      	str	r2, [r5, #16]
 8004f38:	002a      	movs	r2, r5
 8004f3a:	002e      	movs	r6, r5
 8004f3c:	3254      	adds	r2, #84	; 0x54
 8004f3e:	61aa      	str	r2, [r5, #24]
 8004f40:	626a      	str	r2, [r5, #36]	; 0x24
 8004f42:	622a      	str	r2, [r5, #32]
 8004f44:	3210      	adds	r2, #16
 8004f46:	61ea      	str	r2, [r5, #28]
 8004f48:	63f2      	str	r2, [r6, #60]	; 0x3c
 8004f4a:	64b2      	str	r2, [r6, #72]	; 0x48
 8004f4c:	6472      	str	r2, [r6, #68]	; 0x44
 8004f4e:	3210      	adds	r2, #16
 8004f50:	6432      	str	r2, [r6, #64]	; 0x40
 8004f52:	4a6b      	ldr	r2, [pc, #428]	; (8005100 <main+0x2d0>)
 8004f54:	722f      	strb	r7, [r5, #8]
 8004f56:	64f2      	str	r2, [r6, #76]	; 0x4c
 8004f58:	0032      	movs	r2, r6
 8004f5a:	616b      	str	r3, [r5, #20]
 8004f5c:	62ab      	str	r3, [r5, #40]	; 0x28
 8004f5e:	62ed      	str	r5, [r5, #44]	; 0x2c
 8004f60:	3530      	adds	r5, #48	; 0x30
 8004f62:	6335      	str	r5, [r6, #48]	; 0x30
 8004f64:	6375      	str	r5, [r6, #52]	; 0x34
 8004f66:	2510      	movs	r5, #16
 8004f68:	6516      	str	r6, [r2, #80]	; 0x50
 8004f6a:	4a66      	ldr	r2, [pc, #408]	; (8005104 <main+0x2d4>)
 8004f6c:	63b5      	str	r5, [r6, #56]	; 0x38
 8004f6e:	6772      	str	r2, [r6, #116]	; 0x74
 8004f70:	4a65      	ldr	r2, [pc, #404]	; (8005108 <main+0x2d8>)
 8004f72:	67b2      	str	r2, [r6, #120]	; 0x78
 8004f74:	2602      	movs	r6, #2
 8004f76:	69e5      	ldr	r5, [r4, #28]
 8004f78:	4335      	orrs	r5, r6
 8004f7a:	61e5      	str	r5, [r4, #28]
 8004f7c:	4d63      	ldr	r5, [pc, #396]	; (800510c <main+0x2dc>)
 8004f7e:	68aa      	ldr	r2, [r5, #8]
 8004f80:	4332      	orrs	r2, r6
 8004f82:	60aa      	str	r2, [r5, #8]
 8004f84:	4a62      	ldr	r2, [pc, #392]	; (8005110 <main+0x2e0>)
 8004f86:	4d63      	ldr	r5, [pc, #396]	; (8005114 <main+0x2e4>)
 8004f88:	4e63      	ldr	r6, [pc, #396]	; (8005118 <main+0x2e8>)
 8004f8a:	6295      	str	r5, [r2, #40]	; 0x28
 8004f8c:	62d1      	str	r1, [r2, #44]	; 0x2c
 8004f8e:	6193      	str	r3, [r2, #24]
 8004f90:	6353      	str	r3, [r2, #52]	; 0x34
 8004f92:	60d3      	str	r3, [r2, #12]
 8004f94:	6053      	str	r3, [r2, #4]
 8004f96:	6157      	str	r7, [r2, #20]
 8004f98:	6017      	str	r7, [r2, #0]
 8004f9a:	22d0      	movs	r2, #208	; 0xd0
 8004f9c:	4d5f      	ldr	r5, [pc, #380]	; (800511c <main+0x2ec>)
 8004f9e:	0092      	lsls	r2, r2, #2
 8004fa0:	50a8      	str	r0, [r5, r2]
 8004fa2:	3ac1      	subs	r2, #193	; 0xc1
 8004fa4:	3aff      	subs	r2, #255	; 0xff
 8004fa6:	4690      	mov	r8, r2
 8004fa8:	2280      	movs	r2, #128	; 0x80
 8004faa:	4640      	mov	r0, r8
 8004fac:	0252      	lsls	r2, r2, #9
 8004fae:	502a      	str	r2, [r5, r0]
 8004fb0:	485b      	ldr	r0, [pc, #364]	; (8005120 <main+0x2f0>)
 8004fb2:	602a      	str	r2, [r5, #0]
 8004fb4:	6a02      	ldr	r2, [r0, #32]
 8004fb6:	4032      	ands	r2, r6
 8004fb8:	6202      	str	r2, [r0, #32]
 8004fba:	485a      	ldr	r0, [pc, #360]	; (8005124 <main+0x2f4>)
 8004fbc:	4e5a      	ldr	r6, [pc, #360]	; (8005128 <main+0x2f8>)
 8004fbe:	0002      	movs	r2, r0
 8004fc0:	6241      	str	r1, [r0, #36]	; 0x24
 8004fc2:	2107      	movs	r1, #7
 8004fc4:	321c      	adds	r2, #28
 8004fc6:	61c2      	str	r2, [r0, #28]
 8004fc8:	6202      	str	r2, [r0, #32]
 8004fca:	4a58      	ldr	r2, [pc, #352]	; (800512c <main+0x2fc>)
 8004fcc:	6000      	str	r0, [r0, #0]
 8004fce:	3207      	adds	r2, #7
 8004fd0:	438a      	bics	r2, r1
 8004fd2:	6032      	str	r2, [r6, #0]
 8004fd4:	4a56      	ldr	r2, [pc, #344]	; (8005130 <main+0x300>)
 8004fd6:	6040      	str	r0, [r0, #4]
 8004fd8:	438a      	bics	r2, r1
 8004fda:	4956      	ldr	r1, [pc, #344]	; (8005134 <main+0x304>)
 8004fdc:	6083      	str	r3, [r0, #8]
 8004fde:	600a      	str	r2, [r1, #0]
 8004fe0:	4a55      	ldr	r2, [pc, #340]	; (8005138 <main+0x308>)
 8004fe2:	4956      	ldr	r1, [pc, #344]	; (800513c <main+0x30c>)
 8004fe4:	6093      	str	r3, [r2, #8]
 8004fe6:	6011      	str	r1, [r2, #0]
 8004fe8:	0011      	movs	r1, r2
 8004fea:	3110      	adds	r1, #16
 8004fec:	60d3      	str	r3, [r2, #12]
 8004fee:	6111      	str	r1, [r2, #16]
 8004ff0:	6151      	str	r1, [r2, #20]
 8004ff2:	6193      	str	r3, [r2, #24]
 8004ff4:	0001      	movs	r1, r0
 8004ff6:	2240      	movs	r2, #64	; 0x40
 8004ff8:	3150      	adds	r1, #80	; 0x50
 8004ffa:	6342      	str	r2, [r0, #52]	; 0x34
 8004ffc:	6682      	str	r2, [r0, #104]	; 0x68
 8004ffe:	0002      	movs	r2, r0
 8005000:	6501      	str	r1, [r0, #80]	; 0x50
 8005002:	0001      	movs	r1, r0
 8005004:	322c      	adds	r2, #44	; 0x2c
 8005006:	3154      	adds	r1, #84	; 0x54
 8005008:	6102      	str	r2, [r0, #16]
 800500a:	6142      	str	r2, [r0, #20]
 800500c:	6182      	str	r2, [r0, #24]
 800500e:	2248      	movs	r2, #72	; 0x48
 8005010:	6541      	str	r1, [r0, #84]	; 0x54
 8005012:	6581      	str	r1, [r0, #88]	; 0x58
 8005014:	2101      	movs	r1, #1
 8005016:	5287      	strh	r7, [r0, r2]
 8005018:	3202      	adds	r2, #2
 800501a:	6643      	str	r3, [r0, #100]	; 0x64
 800501c:	6603      	str	r3, [r0, #96]	; 0x60
 800501e:	63c0      	str	r0, [r0, #60]	; 0x3c
 8005020:	6400      	str	r0, [r0, #64]	; 0x40
 8005022:	6443      	str	r3, [r0, #68]	; 0x44
 8005024:	5481      	strb	r1, [r0, r2]
 8005026:	b662      	cpsie	i
 8005028:	4945      	ldr	r1, [pc, #276]	; (8005140 <main+0x310>)
 800502a:	6982      	ldr	r2, [r0, #24]
 800502c:	3070      	adds	r0, #112	; 0x70
 800502e:	6191      	str	r1, [r2, #24]
 8005030:	9300      	str	r3, [sp, #0]
 8005032:	2201      	movs	r2, #1
 8005034:	4b43      	ldr	r3, [pc, #268]	; (8005144 <main+0x314>)
 8005036:	21d8      	movs	r1, #216	; 0xd8
 8005038:	f7fc fbc2 	bl	80017c0 <chThdCreateStatic>
 800503c:	4b42      	ldr	r3, [pc, #264]	; (8005148 <main+0x318>)
 800503e:	6183      	str	r3, [r0, #24]
 8005040:	b672      	cpsid	i
 8005042:	4b2e      	ldr	r3, [pc, #184]	; (80050fc <main+0x2cc>)
 8005044:	7a1b      	ldrb	r3, [r3, #8]
 8005046:	2b01      	cmp	r3, #1
 8005048:	d10d      	bne.n	8005066 <main+0x236>
 800504a:	2380      	movs	r3, #128	; 0x80
 800504c:	69e2      	ldr	r2, [r4, #28]
 800504e:	029b      	lsls	r3, r3, #10
 8005050:	4313      	orrs	r3, r2
 8005052:	61e3      	str	r3, [r4, #28]
 8005054:	23dc      	movs	r3, #220	; 0xdc
 8005056:	22c0      	movs	r2, #192	; 0xc0
 8005058:	009b      	lsls	r3, r3, #2
 800505a:	50ea      	str	r2, [r5, r3]
 800505c:	2380      	movs	r3, #128	; 0x80
 800505e:	4642      	mov	r2, r8
 8005060:	055b      	lsls	r3, r3, #21
 8005062:	50ab      	str	r3, [r5, r2]
 8005064:	602b      	str	r3, [r5, #0]
 8005066:	2196      	movs	r1, #150	; 0x96
 8005068:	4b24      	ldr	r3, [pc, #144]	; (80050fc <main+0x2cc>)
 800506a:	0209      	lsls	r1, r1, #8
 800506c:	6f5c      	ldr	r4, [r3, #116]	; 0x74
 800506e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8005070:	0018      	movs	r0, r3
 8005072:	9302      	str	r3, [sp, #8]
 8005074:	f7fb f8a4 	bl	80001c0 <__udivsi3>
 8005078:	4b34      	ldr	r3, [pc, #208]	; (800514c <main+0x31c>)
 800507a:	b280      	uxth	r0, r0
 800507c:	81a0      	strh	r0, [r4, #12]
 800507e:	6063      	str	r3, [r4, #4]
 8005080:	2301      	movs	r3, #1
 8005082:	60a3      	str	r3, [r4, #8]
 8005084:	232e      	movs	r3, #46	; 0x2e
 8005086:	33ff      	adds	r3, #255	; 0xff
 8005088:	6023      	str	r3, [r4, #0]
 800508a:	3b2f      	subs	r3, #47	; 0x2f
 800508c:	3bff      	subs	r3, #255	; 0xff
 800508e:	4a1b      	ldr	r2, [pc, #108]	; (80050fc <main+0x2cc>)
 8005090:	6223      	str	r3, [r4, #32]
 8005092:	3303      	adds	r3, #3
 8005094:	7213      	strb	r3, [r2, #8]
 8005096:	b662      	cpsie	i
 8005098:	2300      	movs	r3, #0
 800509a:	21a4      	movs	r1, #164	; 0xa4
 800509c:	9300      	str	r3, [sp, #0]
 800509e:	2240      	movs	r2, #64	; 0x40
 80050a0:	4b2b      	ldr	r3, [pc, #172]	; (8005150 <main+0x320>)
 80050a2:	0049      	lsls	r1, r1, #1
 80050a4:	482b      	ldr	r0, [pc, #172]	; (8005154 <main+0x324>)
 80050a6:	f7fc fb8b 	bl	80017c0 <chThdCreateStatic>
 80050aa:	4b2b      	ldr	r3, [pc, #172]	; (8005158 <main+0x328>)
 80050ac:	4c2b      	ldr	r4, [pc, #172]	; (800515c <main+0x32c>)
 80050ae:	4698      	mov	r8, r3
 80050b0:	4b2b      	ldr	r3, [pc, #172]	; (8005160 <main+0x330>)
 80050b2:	469a      	mov	sl, r3
 80050b4:	4b2b      	ldr	r3, [pc, #172]	; (8005164 <main+0x334>)
 80050b6:	469b      	mov	fp, r3
 80050b8:	e05a      	b.n	8005170 <main+0x340>
 80050ba:	46c0      	nop			; (mov r8, r8)
 80050bc:	40021000 	.word	0x40021000
 80050c0:	ffbfffff 	.word	0xffbfffff
 80050c4:	40007000 	.word	0x40007000
 80050c8:	fffff75f 	.word	0xfffff75f
 80050cc:	64155105 	.word	0x64155105
 80050d0:	0000ffdf 	.word	0x0000ffdf
 80050d4:	2a8004a0 	.word	0x2a8004a0
 80050d8:	55555555 	.word	0x55555555
 80050dc:	48000400 	.word	0x48000400
 80050e0:	0000ffff 	.word	0x0000ffff
 80050e4:	51555555 	.word	0x51555555
 80050e8:	48000800 	.word	0x48000800
 80050ec:	48000c00 	.word	0x48000c00
 80050f0:	55555550 	.word	0x55555550
 80050f4:	48001400 	.word	0x48001400
 80050f8:	080062d0 	.word	0x080062d0
 80050fc:	200006b8 	.word	0x200006b8
 8005100:	08000361 	.word	0x08000361
 8005104:	40004400 	.word	0x40004400
 8005108:	02dc6c00 	.word	0x02dc6c00
 800510c:	40015800 	.word	0x40015800
 8005110:	40000400 	.word	0x40000400
 8005114:	0000bb7f 	.word	0x0000bb7f
 8005118:	ff00ffff 	.word	0xff00ffff
 800511c:	e000e100 	.word	0xe000e100
 8005120:	e000ed00 	.word	0xe000ed00
 8005124:	20000738 	.word	0x20000738
 8005128:	20000924 	.word	0x20000924
 800512c:	20001178 	.word	0x20001178
 8005130:	20002000 	.word	0x20002000
 8005134:	200008a8 	.word	0x200008a8
 8005138:	20000888 	.word	0x20000888
 800513c:	08000331 	.word	0x08000331
 8005140:	08005750 	.word	0x08005750
 8005144:	08000321 	.word	0x08000321
 8005148:	080058a0 	.word	0x080058a0
 800514c:	00004040 	.word	0x00004040
 8005150:	080023f1 	.word	0x080023f1
 8005154:	20001030 	.word	0x20001030
 8005158:	20000ff0 	.word	0x20000ff0
 800515c:	20000880 	.word	0x20000880
 8005160:	20000fcc 	.word	0x20000fcc
 8005164:	200008ac 	.word	0x200008ac
 8005168:	20fa      	movs	r0, #250	; 0xfa
 800516a:	0040      	lsls	r0, r0, #1
 800516c:	f7fd f938 	bl	80023e0 <chThdSleep>
 8005170:	4b9c      	ldr	r3, [pc, #624]	; (80053e4 <main+0x5b4>)
 8005172:	691b      	ldr	r3, [r3, #16]
 8005174:	049b      	lsls	r3, r3, #18
 8005176:	d4f7      	bmi.n	8005168 <main+0x338>
 8005178:	4b9b      	ldr	r3, [pc, #620]	; (80053e8 <main+0x5b8>)
 800517a:	489c      	ldr	r0, [pc, #624]	; (80053ec <main+0x5bc>)
 800517c:	6023      	str	r3, [r4, #0]
 800517e:	f7fb fb57 	bl	8000830 <test_println>
 8005182:	489b      	ldr	r0, [pc, #620]	; (80053f0 <main+0x5c0>)
 8005184:	f7fb fb54 	bl	8000830 <test_println>
 8005188:	489a      	ldr	r0, [pc, #616]	; (80053f4 <main+0x5c4>)
 800518a:	f7fb fb51 	bl	8000830 <test_println>
 800518e:	212a      	movs	r1, #42	; 0x2a
 8005190:	4d99      	ldr	r5, [pc, #612]	; (80053f8 <main+0x5c8>)
 8005192:	6820      	ldr	r0, [r4, #0]
 8005194:	3501      	adds	r5, #1
 8005196:	6803      	ldr	r3, [r0, #0]
 8005198:	689b      	ldr	r3, [r3, #8]
 800519a:	4798      	blx	r3
 800519c:	7829      	ldrb	r1, [r5, #0]
 800519e:	2900      	cmp	r1, #0
 80051a0:	d1f7      	bne.n	8005192 <main+0x362>
 80051a2:	4896      	ldr	r0, [pc, #600]	; (80053fc <main+0x5cc>)
 80051a4:	f7fb fb44 	bl	8000830 <test_println>
 80051a8:	212a      	movs	r1, #42	; 0x2a
 80051aa:	4d95      	ldr	r5, [pc, #596]	; (8005400 <main+0x5d0>)
 80051ac:	6820      	ldr	r0, [r4, #0]
 80051ae:	3501      	adds	r5, #1
 80051b0:	6803      	ldr	r3, [r0, #0]
 80051b2:	689b      	ldr	r3, [r3, #8]
 80051b4:	4798      	blx	r3
 80051b6:	7829      	ldrb	r1, [r5, #0]
 80051b8:	2900      	cmp	r1, #0
 80051ba:	d1f7      	bne.n	80051ac <main+0x37c>
 80051bc:	4891      	ldr	r0, [pc, #580]	; (8005404 <main+0x5d4>)
 80051be:	f7fb fb37 	bl	8000830 <test_println>
 80051c2:	212a      	movs	r1, #42	; 0x2a
 80051c4:	4d90      	ldr	r5, [pc, #576]	; (8005408 <main+0x5d8>)
 80051c6:	6820      	ldr	r0, [r4, #0]
 80051c8:	3501      	adds	r5, #1
 80051ca:	6803      	ldr	r3, [r0, #0]
 80051cc:	689b      	ldr	r3, [r3, #8]
 80051ce:	4798      	blx	r3
 80051d0:	7829      	ldrb	r1, [r5, #0]
 80051d2:	2900      	cmp	r1, #0
 80051d4:	d1f7      	bne.n	80051c6 <main+0x396>
 80051d6:	488d      	ldr	r0, [pc, #564]	; (800540c <main+0x5dc>)
 80051d8:	f7fb fb2a 	bl	8000830 <test_println>
 80051dc:	212a      	movs	r1, #42	; 0x2a
 80051de:	4d8c      	ldr	r5, [pc, #560]	; (8005410 <main+0x5e0>)
 80051e0:	6820      	ldr	r0, [r4, #0]
 80051e2:	3501      	adds	r5, #1
 80051e4:	6803      	ldr	r3, [r0, #0]
 80051e6:	689b      	ldr	r3, [r3, #8]
 80051e8:	4798      	blx	r3
 80051ea:	7829      	ldrb	r1, [r5, #0]
 80051ec:	2900      	cmp	r1, #0
 80051ee:	d1f7      	bne.n	80051e0 <main+0x3b0>
 80051f0:	4888      	ldr	r0, [pc, #544]	; (8005414 <main+0x5e4>)
 80051f2:	f7fb fb1d 	bl	8000830 <test_println>
 80051f6:	212a      	movs	r1, #42	; 0x2a
 80051f8:	4d87      	ldr	r5, [pc, #540]	; (8005418 <main+0x5e8>)
 80051fa:	6820      	ldr	r0, [r4, #0]
 80051fc:	3501      	adds	r5, #1
 80051fe:	6803      	ldr	r3, [r0, #0]
 8005200:	689b      	ldr	r3, [r3, #8]
 8005202:	4798      	blx	r3
 8005204:	7829      	ldrb	r1, [r5, #0]
 8005206:	2900      	cmp	r1, #0
 8005208:	d1f7      	bne.n	80051fa <main+0x3ca>
 800520a:	4884      	ldr	r0, [pc, #528]	; (800541c <main+0x5ec>)
 800520c:	f7fb fb10 	bl	8000830 <test_println>
 8005210:	212a      	movs	r1, #42	; 0x2a
 8005212:	4d83      	ldr	r5, [pc, #524]	; (8005420 <main+0x5f0>)
 8005214:	6820      	ldr	r0, [r4, #0]
 8005216:	3501      	adds	r5, #1
 8005218:	6803      	ldr	r3, [r0, #0]
 800521a:	689b      	ldr	r3, [r3, #8]
 800521c:	4798      	blx	r3
 800521e:	7829      	ldrb	r1, [r5, #0]
 8005220:	2900      	cmp	r1, #0
 8005222:	d1f7      	bne.n	8005214 <main+0x3e4>
 8005224:	487f      	ldr	r0, [pc, #508]	; (8005424 <main+0x5f4>)
 8005226:	f7fb fb03 	bl	8000830 <test_println>
 800522a:	212a      	movs	r1, #42	; 0x2a
 800522c:	4d7e      	ldr	r5, [pc, #504]	; (8005428 <main+0x5f8>)
 800522e:	6820      	ldr	r0, [r4, #0]
 8005230:	3501      	adds	r5, #1
 8005232:	6803      	ldr	r3, [r0, #0]
 8005234:	689b      	ldr	r3, [r3, #8]
 8005236:	4798      	blx	r3
 8005238:	7829      	ldrb	r1, [r5, #0]
 800523a:	2900      	cmp	r1, #0
 800523c:	d1f7      	bne.n	800522e <main+0x3fe>
 800523e:	252a      	movs	r5, #42	; 0x2a
 8005240:	487a      	ldr	r0, [pc, #488]	; (800542c <main+0x5fc>)
 8005242:	f7fb faf5 	bl	8000830 <test_println>
 8005246:	0029      	movs	r1, r5
 8005248:	4e79      	ldr	r6, [pc, #484]	; (8005430 <main+0x600>)
 800524a:	6820      	ldr	r0, [r4, #0]
 800524c:	3601      	adds	r6, #1
 800524e:	6803      	ldr	r3, [r0, #0]
 8005250:	689b      	ldr	r3, [r3, #8]
 8005252:	4798      	blx	r3
 8005254:	7831      	ldrb	r1, [r6, #0]
 8005256:	2900      	cmp	r1, #0
 8005258:	d1f7      	bne.n	800524a <main+0x41a>
 800525a:	000d      	movs	r5, r1
 800525c:	4875      	ldr	r0, [pc, #468]	; (8005434 <main+0x604>)
 800525e:	f7fb fae7 	bl	8000830 <test_println>
 8005262:	4862      	ldr	r0, [pc, #392]	; (80053ec <main+0x5bc>)
 8005264:	f7fb fae4 	bl	8000830 <test_println>
 8005268:	4b73      	ldr	r3, [pc, #460]	; (8005438 <main+0x608>)
 800526a:	4f74      	ldr	r7, [pc, #464]	; (800543c <main+0x60c>)
 800526c:	701d      	strb	r5, [r3, #0]
 800526e:	2301      	movs	r3, #1
 8005270:	9302      	str	r3, [sp, #8]
 8005272:	4b73      	ldr	r3, [pc, #460]	; (8005440 <main+0x610>)
 8005274:	9303      	str	r3, [sp, #12]
 8005276:	4b73      	ldr	r3, [pc, #460]	; (8005444 <main+0x614>)
 8005278:	2200      	movs	r2, #0
 800527a:	2600      	movs	r6, #0
 800527c:	4691      	mov	r9, r2
 800527e:	2b00      	cmp	r3, #0
 8005280:	d100      	bne.n	8005284 <main+0x454>
 8005282:	e083      	b.n	800538c <main+0x55c>
 8005284:	f7fb fa0c 	bl	80006a0 <print_line>
 8005288:	212d      	movs	r1, #45	; 0x2d
 800528a:	4d6f      	ldr	r5, [pc, #444]	; (8005448 <main+0x618>)
 800528c:	6820      	ldr	r0, [r4, #0]
 800528e:	3501      	adds	r5, #1
 8005290:	6803      	ldr	r3, [r0, #0]
 8005292:	689b      	ldr	r3, [r3, #8]
 8005294:	4798      	blx	r3
 8005296:	7829      	ldrb	r1, [r5, #0]
 8005298:	2900      	cmp	r1, #0
 800529a:	d1f7      	bne.n	800528c <main+0x45c>
 800529c:	9802      	ldr	r0, [sp, #8]
 800529e:	f7fb f9ef 	bl	8000680 <test_printn>
 80052a2:	6820      	ldr	r0, [r4, #0]
 80052a4:	212e      	movs	r1, #46	; 0x2e
 80052a6:	6803      	ldr	r3, [r0, #0]
 80052a8:	689b      	ldr	r3, [r3, #8]
 80052aa:	4798      	blx	r3
 80052ac:	2301      	movs	r3, #1
 80052ae:	469c      	mov	ip, r3
 80052b0:	44e1      	add	r9, ip
 80052b2:	4648      	mov	r0, r9
 80052b4:	f7fb f9e4 	bl	8000680 <test_printn>
 80052b8:	2120      	movs	r1, #32
 80052ba:	4d64      	ldr	r5, [pc, #400]	; (800544c <main+0x61c>)
 80052bc:	6820      	ldr	r0, [r4, #0]
 80052be:	3501      	adds	r5, #1
 80052c0:	6803      	ldr	r3, [r0, #0]
 80052c2:	689b      	ldr	r3, [r3, #8]
 80052c4:	4798      	blx	r3
 80052c6:	7829      	ldrb	r1, [r5, #0]
 80052c8:	2900      	cmp	r1, #0
 80052ca:	d1f7      	bne.n	80052bc <main+0x48c>
 80052cc:	683b      	ldr	r3, [r7, #0]
 80052ce:	681d      	ldr	r5, [r3, #0]
 80052d0:	7829      	ldrb	r1, [r5, #0]
 80052d2:	2900      	cmp	r1, #0
 80052d4:	d007      	beq.n	80052e6 <main+0x4b6>
 80052d6:	6820      	ldr	r0, [r4, #0]
 80052d8:	3501      	adds	r5, #1
 80052da:	6803      	ldr	r3, [r0, #0]
 80052dc:	689b      	ldr	r3, [r3, #8]
 80052de:	4798      	blx	r3
 80052e0:	7829      	ldrb	r1, [r5, #0]
 80052e2:	2900      	cmp	r1, #0
 80052e4:	d1f7      	bne.n	80052d6 <main+0x4a6>
 80052e6:	485a      	ldr	r0, [pc, #360]	; (8005450 <main+0x620>)
 80052e8:	f7fb faa2 	bl	8000830 <test_println>
 80052ec:	20c8      	movs	r0, #200	; 0xc8
 80052ee:	f7fd f877 	bl	80023e0 <chThdSleep>
 80052f2:	4643      	mov	r3, r8
 80052f4:	4a57      	ldr	r2, [pc, #348]	; (8005454 <main+0x624>)
 80052f6:	683d      	ldr	r5, [r7, #0]
 80052f8:	601a      	str	r2, [r3, #0]
 80052fa:	4b57      	ldr	r3, [pc, #348]	; (8005458 <main+0x628>)
 80052fc:	701e      	strb	r6, [r3, #0]
 80052fe:	4653      	mov	r3, sl
 8005300:	601e      	str	r6, [r3, #0]
 8005302:	605e      	str	r6, [r3, #4]
 8005304:	609e      	str	r6, [r3, #8]
 8005306:	60de      	str	r6, [r3, #12]
 8005308:	611e      	str	r6, [r3, #16]
 800530a:	686b      	ldr	r3, [r5, #4]
 800530c:	2b00      	cmp	r3, #0
 800530e:	d000      	beq.n	8005312 <main+0x4e2>
 8005310:	4798      	blx	r3
 8005312:	68eb      	ldr	r3, [r5, #12]
 8005314:	4798      	blx	r3
 8005316:	68ab      	ldr	r3, [r5, #8]
 8005318:	2b00      	cmp	r3, #0
 800531a:	d000      	beq.n	800531e <main+0x4ee>
 800531c:	4798      	blx	r3
 800531e:	f7fe f937 	bl	8003590 <test_wait_threads>
 8005322:	4b4d      	ldr	r3, [pc, #308]	; (8005458 <main+0x628>)
 8005324:	781b      	ldrb	r3, [r3, #0]
 8005326:	2b00      	cmp	r3, #0
 8005328:	d03c      	beq.n	80053a4 <main+0x574>
 800532a:	212d      	movs	r1, #45	; 0x2d
 800532c:	4d4b      	ldr	r5, [pc, #300]	; (800545c <main+0x62c>)
 800532e:	6820      	ldr	r0, [r4, #0]
 8005330:	3501      	adds	r5, #1
 8005332:	6803      	ldr	r3, [r0, #0]
 8005334:	689b      	ldr	r3, [r3, #8]
 8005336:	4798      	blx	r3
 8005338:	7829      	ldrb	r1, [r5, #0]
 800533a:	2900      	cmp	r1, #0
 800533c:	d1f7      	bne.n	800532e <main+0x4fe>
 800533e:	465b      	mov	r3, fp
 8005340:	6818      	ldr	r0, [r3, #0]
 8005342:	f7fb f99d 	bl	8000680 <test_printn>
 8005346:	2120      	movs	r1, #32
 8005348:	4d45      	ldr	r5, [pc, #276]	; (8005460 <main+0x630>)
 800534a:	6820      	ldr	r0, [r4, #0]
 800534c:	3501      	adds	r5, #1
 800534e:	6803      	ldr	r3, [r0, #0]
 8005350:	689b      	ldr	r3, [r3, #8]
 8005352:	4798      	blx	r3
 8005354:	7829      	ldrb	r1, [r5, #0]
 8005356:	2900      	cmp	r1, #0
 8005358:	d1f7      	bne.n	800534a <main+0x51a>
 800535a:	4643      	mov	r3, r8
 800535c:	4a3d      	ldr	r2, [pc, #244]	; (8005454 <main+0x624>)
 800535e:	681b      	ldr	r3, [r3, #0]
 8005360:	4293      	cmp	r3, r2
 8005362:	d90b      	bls.n	800537c <main+0x54c>
 8005364:	0013      	movs	r3, r2
 8005366:	6820      	ldr	r0, [r4, #0]
 8005368:	1c5d      	adds	r5, r3, #1
 800536a:	7819      	ldrb	r1, [r3, #0]
 800536c:	6803      	ldr	r3, [r0, #0]
 800536e:	689b      	ldr	r3, [r3, #8]
 8005370:	4798      	blx	r3
 8005372:	4642      	mov	r2, r8
 8005374:	6812      	ldr	r2, [r2, #0]
 8005376:	002b      	movs	r3, r5
 8005378:	4295      	cmp	r5, r2
 800537a:	d3f4      	bcc.n	8005366 <main+0x536>
 800537c:	4839      	ldr	r0, [pc, #228]	; (8005464 <main+0x634>)
 800537e:	f7fb fa57 	bl	8000830 <test_println>
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	3704      	adds	r7, #4
 8005386:	2b00      	cmp	r3, #0
 8005388:	d000      	beq.n	800538c <main+0x55c>
 800538a:	e77b      	b.n	8005284 <main+0x454>
 800538c:	9a02      	ldr	r2, [sp, #8]
 800538e:	9f03      	ldr	r7, [sp, #12]
 8005390:	3201      	adds	r2, #1
 8005392:	9202      	str	r2, [sp, #8]
 8005394:	2f00      	cmp	r7, #0
 8005396:	d009      	beq.n	80053ac <main+0x57c>
 8005398:	4933      	ldr	r1, [pc, #204]	; (8005468 <main+0x638>)
 800539a:	0092      	lsls	r2, r2, #2
 800539c:	588a      	ldr	r2, [r1, r2]
 800539e:	683b      	ldr	r3, [r7, #0]
 80053a0:	9203      	str	r2, [sp, #12]
 80053a2:	e769      	b.n	8005278 <main+0x448>
 80053a4:	4831      	ldr	r0, [pc, #196]	; (800546c <main+0x63c>)
 80053a6:	f7fb fa43 	bl	8000830 <test_println>
 80053aa:	e7ea      	b.n	8005382 <main+0x552>
 80053ac:	f7fb f978 	bl	80006a0 <print_line>
 80053b0:	480e      	ldr	r0, [pc, #56]	; (80053ec <main+0x5bc>)
 80053b2:	f7fb fa3d 	bl	8000830 <test_println>
 80053b6:	2146      	movs	r1, #70	; 0x46
 80053b8:	4d2d      	ldr	r5, [pc, #180]	; (8005470 <main+0x640>)
 80053ba:	6820      	ldr	r0, [r4, #0]
 80053bc:	3501      	adds	r5, #1
 80053be:	6803      	ldr	r3, [r0, #0]
 80053c0:	689b      	ldr	r3, [r3, #8]
 80053c2:	4798      	blx	r3
 80053c4:	7829      	ldrb	r1, [r5, #0]
 80053c6:	2900      	cmp	r1, #0
 80053c8:	d1f7      	bne.n	80053ba <main+0x58a>
 80053ca:	4b1b      	ldr	r3, [pc, #108]	; (8005438 <main+0x608>)
 80053cc:	781b      	ldrb	r3, [r3, #0]
 80053ce:	2b00      	cmp	r3, #0
 80053d0:	d103      	bne.n	80053da <main+0x5aa>
 80053d2:	4828      	ldr	r0, [pc, #160]	; (8005474 <main+0x644>)
 80053d4:	f7fb fa2c 	bl	8000830 <test_println>
 80053d8:	e6c6      	b.n	8005168 <main+0x338>
 80053da:	4827      	ldr	r0, [pc, #156]	; (8005478 <main+0x648>)
 80053dc:	f7fb fa28 	bl	8000830 <test_println>
 80053e0:	e6c2      	b.n	8005168 <main+0x338>
 80053e2:	46c0      	nop			; (mov r8, r8)
 80053e4:	48000800 	.word	0x48000800
 80053e8:	200006b8 	.word	0x200006b8
 80053ec:	08005720 	.word	0x08005720
 80053f0:	080058a8 	.word	0x080058a8
 80053f4:	080058c4 	.word	0x080058c4
 80053f8:	080057c0 	.word	0x080057c0
 80053fc:	080058c8 	.word	0x080058c8
 8005400:	080057d4 	.word	0x080057d4
 8005404:	080058d0 	.word	0x080058d0
 8005408:	080057e8 	.word	0x080057e8
 800540c:	080058e8 	.word	0x080058e8
 8005410:	080057fc 	.word	0x080057fc
 8005414:	08005930 	.word	0x08005930
 8005418:	08005810 	.word	0x08005810
 800541c:	08005938 	.word	0x08005938
 8005420:	08005824 	.word	0x08005824
 8005424:	08005944 	.word	0x08005944
 8005428:	08005838 	.word	0x08005838
 800542c:	0800595c 	.word	0x0800595c
 8005430:	0800584c 	.word	0x0800584c
 8005434:	08005988 	.word	0x08005988
 8005438:	20000fa0 	.word	0x20000fa0
 800543c:	08005b10 	.word	0x08005b10
 8005440:	08005b20 	.word	0x08005b20
 8005444:	08006260 	.word	0x08006260
 8005448:	08005860 	.word	0x08005860
 800544c:	08005870 	.word	0x08005870
 8005450:	080059ac 	.word	0x080059ac
 8005454:	20000fe0 	.word	0x20000fe0
 8005458:	20000904 	.word	0x20000904
 800545c:	08005874 	.word	0x08005874
 8005460:	0800588c 	.word	0x0800588c
 8005464:	080059b0 	.word	0x080059b0
 8005468:	08005ab0 	.word	0x08005ab0
 800546c:	080059b4 	.word	0x080059b4
 8005470:	08005890 	.word	0x08005890
 8005474:	080059c0 	.word	0x080059c0
 8005478:	080059c8 	.word	0x080059c8
 800547c:	00000000 	.word	0x00000000

08005480 <__early_init>:
 8005480:	2101      	movs	r1, #1
 8005482:	4b26      	ldr	r3, [pc, #152]	; (800551c <__early_init+0x9c>)
 8005484:	681a      	ldr	r2, [r3, #0]
 8005486:	430a      	orrs	r2, r1
 8005488:	601a      	str	r2, [r3, #0]
 800548a:	3101      	adds	r1, #1
 800548c:	681a      	ldr	r2, [r3, #0]
 800548e:	4211      	tst	r1, r2
 8005490:	d0fc      	beq.n	800548c <__early_init+0xc>
 8005492:	2103      	movs	r1, #3
 8005494:	685a      	ldr	r2, [r3, #4]
 8005496:	438a      	bics	r2, r1
 8005498:	605a      	str	r2, [r3, #4]
 800549a:	685a      	ldr	r2, [r3, #4]
 800549c:	3109      	adds	r1, #9
 800549e:	605a      	str	r2, [r3, #4]
 80054a0:	4a1e      	ldr	r2, [pc, #120]	; (800551c <__early_init+0x9c>)
 80054a2:	6853      	ldr	r3, [r2, #4]
 80054a4:	400b      	ands	r3, r1
 80054a6:	d1fc      	bne.n	80054a2 <__early_init+0x22>
 80054a8:	21f9      	movs	r1, #249	; 0xf9
 80054aa:	6810      	ldr	r0, [r2, #0]
 80054ac:	4001      	ands	r1, r0
 80054ae:	6011      	str	r1, [r2, #0]
 80054b0:	2101      	movs	r1, #1
 80054b2:	6053      	str	r3, [r2, #4]
 80054b4:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80054b6:	430b      	orrs	r3, r1
 80054b8:	6353      	str	r3, [r2, #52]	; 0x34
 80054ba:	4a18      	ldr	r2, [pc, #96]	; (800551c <__early_init+0x9c>)
 80054bc:	3101      	adds	r1, #1
 80054be:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80054c0:	4219      	tst	r1, r3
 80054c2:	d0fc      	beq.n	80054be <__early_init+0x3e>
 80054c4:	2101      	movs	r1, #1
 80054c6:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80054c8:	430b      	orrs	r3, r1
 80054ca:	6253      	str	r3, [r2, #36]	; 0x24
 80054cc:	4a13      	ldr	r2, [pc, #76]	; (800551c <__early_init+0x9c>)
 80054ce:	3101      	adds	r1, #1
 80054d0:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80054d2:	4219      	tst	r1, r3
 80054d4:	d0fc      	beq.n	80054d0 <__early_init+0x50>
 80054d6:	23a1      	movs	r3, #161	; 0xa1
 80054d8:	039b      	lsls	r3, r3, #14
 80054da:	6053      	str	r3, [r2, #4]
 80054dc:	2300      	movs	r3, #0
 80054de:	62d3      	str	r3, [r2, #44]	; 0x2c
 80054e0:	6313      	str	r3, [r2, #48]	; 0x30
 80054e2:	2380      	movs	r3, #128	; 0x80
 80054e4:	6811      	ldr	r1, [r2, #0]
 80054e6:	045b      	lsls	r3, r3, #17
 80054e8:	430b      	orrs	r3, r1
 80054ea:	2180      	movs	r1, #128	; 0x80
 80054ec:	6013      	str	r3, [r2, #0]
 80054ee:	4a0b      	ldr	r2, [pc, #44]	; (800551c <__early_init+0x9c>)
 80054f0:	0489      	lsls	r1, r1, #18
 80054f2:	6813      	ldr	r3, [r2, #0]
 80054f4:	420b      	tst	r3, r1
 80054f6:	d0fc      	beq.n	80054f2 <__early_init+0x72>
 80054f8:	2111      	movs	r1, #17
 80054fa:	4b09      	ldr	r3, [pc, #36]	; (8005520 <__early_init+0xa0>)
 80054fc:	6019      	str	r1, [r3, #0]
 80054fe:	6853      	ldr	r3, [r2, #4]
 8005500:	390f      	subs	r1, #15
 8005502:	430b      	orrs	r3, r1
 8005504:	6053      	str	r3, [r2, #4]
 8005506:	4a05      	ldr	r2, [pc, #20]	; (800551c <__early_init+0x9c>)
 8005508:	310a      	adds	r1, #10
 800550a:	6853      	ldr	r3, [r2, #4]
 800550c:	400b      	ands	r3, r1
 800550e:	2b08      	cmp	r3, #8
 8005510:	d1fb      	bne.n	800550a <__early_init+0x8a>
 8005512:	2101      	movs	r1, #1
 8005514:	6993      	ldr	r3, [r2, #24]
 8005516:	430b      	orrs	r3, r1
 8005518:	6193      	str	r3, [r2, #24]
 800551a:	4770      	bx	lr
 800551c:	40021000 	.word	0x40021000
 8005520:	40022000 	.word	0x40022000
	...

08005530 <chThdExit>:
 8005530:	b570      	push	{r4, r5, r6, lr}
 8005532:	b672      	cpsid	i
 8005534:	4b0d      	ldr	r3, [pc, #52]	; (800556c <chThdExit+0x3c>)
 8005536:	699c      	ldr	r4, [r3, #24]
 8005538:	0025      	movs	r5, r4
 800553a:	6220      	str	r0, [r4, #32]
 800553c:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800553e:	3524      	adds	r5, #36	; 0x24
 8005540:	42a8      	cmp	r0, r5
 8005542:	d006      	beq.n	8005552 <chThdExit+0x22>
 8005544:	6803      	ldr	r3, [r0, #0]
 8005546:	6263      	str	r3, [r4, #36]	; 0x24
 8005548:	f7fb fb02 	bl	8000b50 <chSchReadyI>
 800554c:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800554e:	42a8      	cmp	r0, r5
 8005550:	d1f8      	bne.n	8005544 <chThdExit+0x14>
 8005552:	7f63      	ldrb	r3, [r4, #29]
 8005554:	079b      	lsls	r3, r3, #30
 8005556:	d104      	bne.n	8005562 <chThdExit+0x32>
 8005558:	6922      	ldr	r2, [r4, #16]
 800555a:	6963      	ldr	r3, [r4, #20]
 800555c:	611a      	str	r2, [r3, #16]
 800555e:	6922      	ldr	r2, [r4, #16]
 8005560:	6153      	str	r3, [r2, #20]
 8005562:	200f      	movs	r0, #15
 8005564:	f7fc f95c 	bl	8001820 <chSchGoSleepS>
 8005568:	bd70      	pop	{r4, r5, r6, pc}
 800556a:	46c0      	nop			; (mov r8, r8)
 800556c:	20000738 	.word	0x20000738

08005570 <thread1.lto_priv.70>:
 8005570:	b510      	push	{r4, lr}
 8005572:	f7ff ffdd 	bl	8005530 <chThdExit>
 8005576:	bd10      	pop	{r4, pc}
	...

08005580 <chSchDoReschedule>:
 8005580:	b510      	push	{r4, lr}
 8005582:	f7fb ff25 	bl	80013d0 <chSchDoRescheduleAhead>
 8005586:	bd10      	pop	{r4, pc}
	...

08005590 <__default_exit>:
 8005590:	e7fe      	b.n	8005590 <__default_exit>
 8005592:	46c0      	nop			; (mov r8, r8)
	...

080055a0 <__late_init>:
 80055a0:	4770      	bx	lr
 80055a2:	46c0      	nop			; (mov r8, r8)
	...
 80055b0:	08000b32 	.word	0x08000b32
 80055b4:	08000b12 	.word	0x08000b12
 80055b8:	08000b12 	.word	0x08000b12
 80055bc:	08000b36 	.word	0x08000b36
 80055c0:	08000b08 	.word	0x08000b08
 80055c4:	08000b00 	.word	0x08000b00
 80055c8:	08000b12 	.word	0x08000b12
 80055cc:	08000b08 	.word	0x08000b08
 80055d0:	6e696c62 	.word	0x6e696c62
 80055d4:	0072656b 	.word	0x0072656b
	...
 80055e0:	61686e75 	.word	0x61686e75
 80055e4:	656c646e 	.word	0x656c646e
 80055e8:	78652064 	.word	0x78652064
 80055ec:	74706563 	.word	0x74706563
 80055f0:	006e6f69 	.word	0x006e6f69
	...
 8005600:	202d2d2d 	.word	0x202d2d2d
 8005604:	726f6353 	.word	0x726f6353
 8005608:	203a2065 	.word	0x203a2065
 800560c:	00000000 	.word	0x00000000
 8005610:	6d697420 	.word	0x6d697420
 8005614:	2f737265 	.word	0x2f737265
 8005618:	00000053 	.word	0x00000053
 800561c:	00000000 	.word	0x00000000
 8005620:	69617720 	.word	0x69617720
 8005624:	69732b74 	.word	0x69732b74
 8005628:	6c616e67 	.word	0x6c616e67
 800562c:	0000532f 	.word	0x0000532f
 8005630:	636f6c20 	.word	0x636f6c20
 8005634:	6e752b6b 	.word	0x6e752b6b
 8005638:	6b636f6c 	.word	0x6b636f6c
 800563c:	0000532f 	.word	0x0000532f
 8005640:	202d2d2d 	.word	0x202d2d2d
 8005644:	74737953 	.word	0x74737953
 8005648:	203a6d65 	.word	0x203a6d65
 800564c:	00000000 	.word	0x00000000
 8005650:	74796220 	.word	0x74796220
 8005654:	00007365 	.word	0x00007365
 8005658:	202d2d2d 	.word	0x202d2d2d
 800565c:	65726854 	.word	0x65726854
 8005660:	203a6461 	.word	0x203a6461
 8005664:	00000000 	.word	0x00000000
 8005668:	202d2d2d 	.word	0x202d2d2d
 800566c:	656d6954 	.word	0x656d6954
 8005670:	203a2072 	.word	0x203a2072
 8005674:	00000000 	.word	0x00000000
 8005678:	202d2d2d 	.word	0x202d2d2d
 800567c:	616d6553 	.word	0x616d6553
 8005680:	203a6870 	.word	0x203a6870
 8005684:	00000000 	.word	0x00000000
 8005688:	202d2d2d 	.word	0x202d2d2d
 800568c:	6e657645 	.word	0x6e657645
 8005690:	203a5374 	.word	0x203a5374
 8005694:	00000000 	.word	0x00000000
 8005698:	202d2d2d 	.word	0x202d2d2d
 800569c:	6e657645 	.word	0x6e657645
 80056a0:	203a4c74 	.word	0x203a4c74
 80056a4:	00000000 	.word	0x00000000
 80056a8:	202d2d2d 	.word	0x202d2d2d
 80056ac:	6574754d 	.word	0x6574754d
 80056b0:	203a2078 	.word	0x203a2078
 80056b4:	00000000 	.word	0x00000000
 80056b8:	202d2d2d 	.word	0x202d2d2d
 80056bc:	646e6f43 	.word	0x646e6f43
 80056c0:	203a2e56 	.word	0x203a2e56
 80056c4:	00000000 	.word	0x00000000
 80056c8:	202d2d2d 	.word	0x202d2d2d
 80056cc:	75657551 	.word	0x75657551
 80056d0:	203a2065 	.word	0x203a2065
 80056d4:	00000000 	.word	0x00000000
 80056d8:	202d2d2d 	.word	0x202d2d2d
 80056dc:	6c69614d 	.word	0x6c69614d
 80056e0:	203a2e42 	.word	0x203a2e42
	...
 80056f0:	67736d20 	.word	0x67736d20
 80056f4:	2c532f73 	.word	0x2c532f73
 80056f8:	00000020 	.word	0x00000020
 80056fc:	00000000 	.word	0x00000000
 8005700:	72687420 	.word	0x72687420
 8005704:	73646165 	.word	0x73646165
 8005708:	0000532f 	.word	0x0000532f
 800570c:	00000000 	.word	0x00000000
 8005710:	73657220 	.word	0x73657220
 8005714:	64656863 	.word	0x64656863
 8005718:	73656c75 	.word	0x73656c75
 800571c:	202c532f 	.word	0x202c532f
	...
 8005730:	78746320 	.word	0x78746320
 8005734:	2f637773 	.word	0x2f637773
 8005738:	00000053 	.word	0x00000053
 800573c:	00000000 	.word	0x00000000
 8005740:	74796220 	.word	0x74796220
 8005744:	532f7365 	.word	0x532f7365
	...

08005750 <ch_debug>:
 8005750:	6e69616d 18011600 08440204 1814100c     main......D.....
 8005760:	1e1d1c00 00000000 00000000 00000000     ................
 8005770:	00004241 00000000 00000000 00000000     AB..............
 8005780:	00000042 00000043 00000044 00000000     B...C...D.......
 8005790:	00000041 00000000 00000000 00000000     A...............

080057a0 <evhndl>:
 80057a0:	08000801 080007f1 080007e1 00000000     ................
 80057b0:	00434241 00000000 00000000 00000000     ABC.............
 80057c0:	202a2a2a 6e72654b 203a6c65 20202020     *** Kernel:     
 80057d0:	00002020 202a2a2a 706d6f43 64656c69       ..*** Compiled
 80057e0:	2020203a 00002020 202a2a2a 706d6f43     :     ..*** Comp
 80057f0:	72656c69 2020203a 00002020 202a2a2a     iler:     ..*** 
 8005800:	68637241 63657469 65727574 0000203a     Architecture: ..
 8005810:	202a2a2a 65726f43 72615620 746e6169     *** Core Variant
 8005820:	0000203a 202a2a2a 74726f50 666e4920     : ..*** Port Inf
 8005830:	20203a6f 00002020 202a2a2a 74616c50     o:    ..*** Plat
 8005840:	6d726f66 2020203a 00002020 202a2a2a     form:     ..*** 
 8005850:	74736554 616f4220 203a6472 00002020     Test Board:   ..
 8005860:	202d2d2d 74736554 73614320 00002065     --- Test Case ..
 8005870:	00002820 202d2d2d 75736552 203a746c      (..--- Result: 
 8005880:	4c494146 20455255 00002328 00005b20     FAILURE (#.. [..
 8005890:	616e6946 6572206c 746c7573 0000203a     Final result: ..
 80058a0:	656c6469 00000000 202a2a2a 62696843     idle....*** Chib
 80058b0:	2f534f69 74205452 20747365 74697573     iOS/RT test suit
 80058c0:	00000065 002a2a2a 2e302e33 00000030     e...***.3.0.0...
 80058d0:	20727041 32203620 20383130 3631202d     Apr  6 2018 - 16
 80058e0:	3a30303a 00003932 20434347 2e322e37     :00:29..GCC 7.2.
 80058f0:	30322031 39303731 28203430 656c6572     1 20170904 (rele
 8005900:	29657361 52415b20 6d652f4d 64646562     ase) [ARM/embedd
 8005910:	372d6465 6172622d 2068636e 69766572     ed-7-branch revi
 8005920:	6e6f6973 35353220 5d343032 00000000     sion 255204]....
 8005930:	764d5241 004d2d36 74726f43 4d2d7865     ARMv6-M.Cortex-M
 8005940:	00000030 65657250 6974706d 74206e6f     0...Preemption t
 8005950:	756f7268 4e206867 0000494d 334d5453     hrough NMI..STM3
 8005960:	33304632 20387830 72746e45 654c2079     2F030x8 Entry Le
 8005970:	206c6576 756c6156 694c2065 6420656e     vel Value Line d
 8005980:	63697665 00007365 694d5453 656f7263     evices..STMicroe
 8005990:	7463656c 696e6f72 4e207363 454c4355     lectronics NUCLE
 80059a0:	30462d4f 38523033 00000000 00000029     O-F030R8....)...
 80059b0:	0000295d 202d2d2d 75736552 203a746c     ])..--- Result: 
 80059c0:	43435553 00535345 4c494146 00455255     SUCCESS.FAILURE.
 80059d0:	44434241 00000045 00000000 00000000     ABCDE...........

080059e0 <patternbmk>:
 80059e0:	08006030 08006080 08006090 080060a0     0`...`...`...`..
 80059f0:	080060b0 080060c0 080060d0 080060e0     .`...`...`...`..
 8005a00:	080060f0 08006040 08006050 08006060     .`..@`..P`..``..
 8005a10:	08006070 00000000 00000000 00000000     p`..............

08005a20 <patterndyn>:
 8005a20:	08006100 08006110 08006120 00000000     .a...a.. a......

08005a30 <patternevt>:
 8005a30:	08006130 08006140 08006150 00000000     0a..@a..Pa......

08005a40 <patternheap>:
 8005a40:	08006160 00000000 00000000 00000000     `a..............

08005a50 <patternmbox>:
 8005a50:	08006170 00000000 00000000 00000000     pa..............

08005a60 <patternmsg>:
 8005a60:	08006180 00000000 00000000 00000000     .a..............

08005a70 <patternmtx>:
 8005a70:	08006190 080061a0 080061b0 080061c0     .a...a...a...a..
 8005a80:	080061d0 080061e0 00000000 00000000     .a...a..........

08005a90 <patternpools>:
 8005a90:	080061f0 00000000 00000000 00000000     .a..............

08005aa0 <patternqueues>:
 8005aa0:	08006200 08006210 00000000 00000000     .b...b..........

08005ab0 <patterns>:
 8005ab0:	08005b10 08005b20 08005af0 08005a70     .[.. [...Z..pZ..
 8005ac0:	08005a60 08005a50 08005a30 08005a40     `Z..PZ..0Z..@Z..
 8005ad0:	08005a90 08005a20 08005aa0 080059e0     .Z.. Z...Z...Y..
	...

08005af0 <patternsem>:
 8005af0:	08006220 08006230 08006240 08006250      b..0b..@b..Pb..
	...

08005b10 <patternsys>:
 8005b10:	08006260 08006270 08006280 00000000     `b..pb...b......

08005b20 <patternthd>:
 8005b20:	08006290 080062a0 080062b0 080062c0     .b...b...b...b..
	...
 8005b40:	00000a0d 00000000 00000000 00000000     ................
 8005b50:	44434241 00000000 00000000 00000000     ABCD............
 8005b60:	636e6542 72616d68 52202c6b 66204d41     Benchmark, RAM f
 8005b70:	70746f6f 746e6972 00000000 636e6542     ootprint....Benc
 8005b80:	72616d68 6d202c6b 78657475 6c207365     hmark, mutexes l
 8005b90:	2f6b636f 6f6c6e75 00006b63 636e6542     ock/unlock..Benc
 8005ba0:	72616d68 73202c6b 70616d65 65726f68     hmark, semaphore
 8005bb0:	61772073 732f7469 616e6769 0000006c     s wait/signal...
 8005bc0:	636e6542 72616d68 76202c6b 75747269     Benchmark, virtu
 8005bd0:	74206c61 72656d69 65732073 65722f74     al timers set/re
 8005be0:	00746573 636e6542 72616d68 49202c6b     set.Benchmark, I
 8005bf0:	51204f2f 65756575 68742073 67756f72     /O Queues throug
 8005c00:	74757068 00000000 636e6542 72616d68     hput....Benchmar
 8005c10:	72202c6b 646e756f 626f7220 63206e69     k, round robin c
 8005c20:	65746e6f 73207478 63746977 676e6968     ontext switching
 8005c30:	00000000 636e6542 72616d68 6d202c6b     ....Benchmark, m
 8005c40:	20737361 63736572 75646568 202c656c     ass reschedule, 
 8005c50:	68742035 64616572 00000073 636e6542     5 threads...Benc
 8005c60:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8005c70:	61657263 6f206574 00796c6e 636e6542     create only.Benc
 8005c80:	72616d68 74202c6b 61657268 202c7364     hmark, threads, 
 8005c90:	6c6c7566 63796320 0000656c 636e6542     full cycle..Benc
 8005ca0:	72616d68 63202c6b 65746e6f 73207478     hmark, context s
 8005cb0:	63746977 00000068 636e6542 72616d68     witch...Benchmar
 8005cc0:	6d202c6b 61737365 20736567 00003323     k, messages #3..
 8005cd0:	636e6542 72616d68 6d202c6b 61737365     Benchmark, messa
 8005ce0:	20736567 00003223 636e6542 72616d68     ges #2..Benchmar
 8005cf0:	6d202c6b 61737365 20736567 00003123     k, messages #1..
 8005d00:	75657551 202c7365 7074756f 71207475     Queues, output q
 8005d10:	65756575 00000073 75657551 202c7365     ueues...Queues, 
 8005d20:	75706e69 75712074 73657565 00000000     input queues....
 8005d30:	616e7944 2063696d 73495041 6572202c     Dynamic APIs, re
 8005d40:	74736967 61207972 7220646e 72656665     gistry and refer
 8005d50:	65636e65 00000073 616e7944 2063696d     ences...Dynamic 
 8005d60:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8005d70:	69746165 66206e6f 206d6f72 6f6d656d     eation from memo
 8005d80:	70207972 006c6f6f 616e7944 2063696d     ry pool.Dynamic 
 8005d90:	73495041 6874202c 64616572 72632073     APIs, threads cr
 8005da0:	69746165 66206e6f 206d6f72 70616568     eation from heap
 8005db0:	00000000 6f6d654d 50207972 736c6f6f     ....Memory Pools
 8005dc0:	7571202c 2f657565 75716564 00657565     , queue/dequeue.
 8005dd0:	70616548 6c61202c 61636f6c 6e6f6974     Heap, allocation
 8005de0:	646e6120 61726620 6e656d67 69746174      and fragmentati
 8005df0:	74206e6f 00747365 6e657645 202c7374     on test.Events, 
 8005e00:	656d6974 7374756f 00000000 6e657645     timeouts....Even
 8005e10:	202c7374 74696177 646e6120 6f726220     ts, wait and bro
 8005e20:	61636461 00007473 6e657645 202c7374     adcast..Events, 
 8005e30:	69676572 61727473 6e6f6974 646e6120     registration and
 8005e40:	73696420 63746170 00000068 6c69614d      dispatch...Mail
 8005e50:	65786f62 71202c73 69756575 6120676e     boxes, queuing a
 8005e60:	7420646e 6f656d69 00737475 7373654d     nd timeouts.Mess
 8005e70:	73656761 6f6c202c 0000706f 646e6f43     ages, loop..Cond
 8005e80:	2c726156 6f6f6220 74207473 00747365     Var, boost test.
 8005e90:	646e6f43 2c726156 6f726220 61636461     CondVar, broadca
 8005ea0:	74207473 00747365 646e6f43 2c726156     st test.CondVar,
 8005eb0:	67697320 206c616e 74736574 00000000      signal test....
 8005ec0:	6574754d 2c736578 61747320 00737574     Mutexes, status.
 8005ed0:	6574754d 2c736578 69727020 7469726f     Mutexes, priorit
 8005ee0:	65722079 6e727574 00000000 6574754d     y return....Mute
 8005ef0:	2c736578 69727020 7469726f 6e652079     xes, priority en
 8005f00:	75657571 20676e69 74736574 00000000     queuing test....
 8005f10:	616e6942 53207972 70616d65 65726f68     Binary Semaphore
 8005f20:	66202c73 74636e75 616e6f69 7974696c     s, functionality
 8005f30:	00000000 616d6553 726f6870 202c7365     ....Semaphores, 
 8005f40:	6d6f7461 73206369 616e6769 61772d6c     atomic signal-wa
 8005f50:	00007469 616d6553 726f6870 202c7365     it..Semaphores, 
 8005f60:	656d6974 0074756f 616d6553 726f6870     timeout.Semaphor
 8005f70:	202c7365 75716e65 6e697565 00000067     es, enqueuing...
 8005f80:	65726854 2c736461 6c656420 00737961     Threads, delays.
 8005f90:	65726854 2c736461 69727020 7469726f     Threads, priorit
 8005fa0:	68632079 65676e61 00000000 65726854     y change....Thre
 8005fb0:	2c736461 716e6520 69756575 7420676e     ads, enqueuing t
 8005fc0:	20747365 00003223 65726854 2c736461     est #2..Threads,
 8005fd0:	716e6520 69756575 7420676e 20747365      enqueuing test 
 8005fe0:	00003123 74737953 202c6d65 65746e69     #1..System, inte
 8005ff0:	74697267 00000079 74737953 202c6d65     grity...System, 
 8006000:	65746e69 70757272 68207374 6c646e61     interrupts handl
 8006010:	00676e69 74737953 202c6d65 74697263     ing.System, crit
 8006020:	6c616369 6e6f7a20 00007365 00000000     ical zones......

08006030 <testbmk1>:
 8006030:	08005ce8 00000000 00000000 080039d1     .\...........9..

08006040 <testbmk10>:
 8006040:	08005bc0 00000000 00000000 08002551     .[..........Q%..

08006050 <testbmk11>:
 8006050:	08005b9c 08000381 00000000 080032f1     .[...........2..

08006060 <testbmk12>:
 8006060:	08005b7c 08000371 00000000 08002a01     |[..q........*..

08006070 <testbmk13>:
 8006070:	08005b60 00000000 00000000 080010a1     `[..............

08006080 <testbmk2>:
 8006080:	08005cd0 00000000 00000000 08003961     .\..........a9..

08006090 <testbmk3>:
 8006090:	08005cb8 00000000 00000000 08003871     .\..........q8..

080060a0 <testbmk4>:
 80060a0:	08005c9c 00000000 00000000 080037d1     .\...........7..

080060b0 <testbmk5>:
 80060b0:	08005c7c 00000000 00000000 08003511     |\...........5..

080060c0 <testbmk6>:
 80060c0:	08005c5c 00000000 00000000 08002671     \\..........q&..

080060d0 <testbmk7>:
 80060d0:	08005c34 080003b1 00000000 080036a1     4\...........6..

080060e0 <testbmk8>:
 80060e0:	08005c08 00000000 00000000 080035c1     .\...........5..

080060f0 <testbmk9>:
 80060f0:	08005be4 00000000 00000000 080025d1     .[...........%..

08006100 <testdyn1>:
 8006100:	08005d88 08000451 00000000 08003fb1     .]..Q........?..

08006110 <testdyn2>:
 8006110:	08005d58 08000431 00000000 08003eb1     X]..1........>..

08006120 <testdyn3>:
 8006120:	08005d30 08000481 00000000 08002f41     0]..........A/..

08006130 <testevt1>:
 8006130:	08005e28 080004f1 00000000 08000a11     (^..............

08006140 <testevt2>:
 8006140:	08005e0c 08000511 00000000 08004091     .^...........@..

08006150 <testevt3>:
 8006150:	08005df8 08000501 00000000 08001a51     .]..........Q...

08006160 <testheap1>:
 8006160:	08005dd0 080004c1 00000000 08003061     .]..........a0..

08006170 <testmbox1>:
 8006170:	08005e4c 08000521 00000000 08001c71     L^..!.......q...

08006180 <testmsg1>:
 8006180:	08005e6c 00000000 00000000 08002801     l^...........(..

08006190 <testmtx1>:
 8006190:	08005eec 080005d1 00000000 08004841     .^..........AH..

080061a0 <testmtx4>:
 80061a0:	08005ed0 080005b1 00000000 080045d1     .^...........E..

080061b0 <testmtx5>:
 80061b0:	08005ec0 080005e1 00000000 08002b91     .^...........+..

080061c0 <testmtx6>:
 80061c0:	08005ea8 08000581 00000000 080044f1     .^...........D..

080061d0 <testmtx7>:
 80061d0:	08005e90 080005a1 00000000 08004401     .^...........D..

080061e0 <testmtx8>:
 80061e0:	08005e7c 08000551 00000000 08004371     |^..Q.......qC..

080061f0 <testpools1>:
 80061f0:	08005db4 080004a1 00000000 08000921     .]..........!...

08006200 <testqueues1>:
 8006200:	08005d18 08000401 00000000 08003c51     .]..........Q<..

08006210 <testqueues2>:
 8006210:	08005d00 080003d1 00000000 08003a41     .]..........A:..

08006220 <testsem1>:
 8006220:	08005f68 080005f1 00000000 08004a91     h_...........J..

08006230 <testsem2>:
 8006230:	08005f54 08000611 00000000 08004941     T_..........AI..

08006240 <testsem3>:
 8006240:	08005f34 08000601 00000000 080018a1     4_..............

08006250 <testsem4>:
 8006250:	08005f10 00000000 00000000 08003391     ._...........3..

08006260 <testsys1>:
 8006260:	08006014 00000000 00000000 08002421     .`..........!$..

08006270 <testsys2>:
 8006270:	08005ff8 00000000 00000000 080003c1     ._..............

08006280 <testsys3>:
 8006280:	08005fe4 00000000 00000000 08001011     ._..............

08006290 <testthd1>:
 8006290:	08005fc8 00000000 00000000 08004d51     ._..........QM..

080062a0 <testthd2>:
 80062a0:	08005fac 00000000 00000000 08004c01     ._...........L..

080062b0 <testthd3>:
 80062b0:	08005f90 00000000 00000000 080014d1     ._..............

080062c0 <testthd4>:
 80062c0:	08005f80 00000000 00000000 080026f1     ._...........&..

080062d0 <vmt>:
 80062d0:	08002241 08002361 080022d1 080023d1     A"..a#..."...#..
 80062e0:	080022c1 080023c1 08002231 08002351     ."...#..1"..Q#..

080062f0 <wa>:
 80062f0:	20000938 20000a80 20000bc8 20000d10     8.. ... ... ... 
 8006300:	20000e58                                X.. 
