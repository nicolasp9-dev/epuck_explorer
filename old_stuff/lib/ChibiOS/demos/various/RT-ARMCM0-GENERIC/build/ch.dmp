
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080000c1

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x00000758 memsz 0x00000758 flags rwx
    LOAD off    0x00020600 vaddr 0x20000600 paddr 0x08000758 align 2**16
         filesz 0x00000000 memsz 0x000002c8 flags rw-
    LOAD off    0x00020000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000600 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000c0  08000000  08000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000698  080000c0  080000c0  000100c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000000  08000758  08000758  00010758  2**0
                  CONTENTS
  3 .mstack       00000400  20000000  20000000  00020000  2**0
                  ALLOC
  4 .pstack       00000200  20000400  20000400  00020000  2**0
                  ALLOC
  5 .data         00000000  20000600  20000600  00010758  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          000002c8  20000600  08000758  00020600  2**3
                  ALLOC
  7 .ram0         00000000  200008c8  200008c8  00010758  2**2
                  CONTENTS
  8 .ram1         00000000  00000000  00000000  00010758  2**2
                  CONTENTS
  9 .ram2         00000000  00000000  00000000  00010758  2**2
                  CONTENTS
 10 .ram3         00000000  00000000  00000000  00010758  2**2
                  CONTENTS
 11 .ram4         00000000  00000000  00000000  00010758  2**2
                  CONTENTS
 12 .ram5         00000000  00000000  00000000  00010758  2**2
                  CONTENTS
 13 .ram6         00000000  00000000  00000000  00010758  2**2
                  CONTENTS
 14 .ram7         00000000  00000000  00000000  00010758  2**2
                  CONTENTS
 15 .ARM.attributes 0000002b  00000000  00000000  00010758  2**0
                  CONTENTS, READONLY
 16 .comment      0000007e  00000000  00000000  00010783  2**0
                  CONTENTS, READONLY
 17 .debug_info   000020d1  00000000  00000000  00010801  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_abbrev 0000058e  00000000  00000000  000128d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_loc    0000079c  00000000  00000000  00012e60  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 00000090  00000000  00000000  000135fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_ranges 00000350  00000000  00000000  0001368c  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_line   000008ae  00000000  00000000  000139dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_str    00000e1a  00000000  00000000  0001428a  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_frame  0000018c  00000000  00000000  000150a4  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000c0 l    d  .text	00000000 .text
08000758 l    d  .textalign	00000000 .textalign
20000000 l    d  .mstack	00000000 .mstack
20000400 l    d  .pstack	00000000 .pstack
20000600 l    d  .data	00000000 .data
20000600 l    d  .bss	00000000 .bss
200008c8 l    d  .ram0	00000000 .ram0
00000000 l    d  .ram1	00000000 .ram1
00000000 l    d  .ram2	00000000 .ram2
00000000 l    d  .ram3	00000000 .ram3
00000000 l    d  .ram4	00000000 .ram4
00000000 l    d  .ram5	00000000 .ram5
00000000 l    d  .ram6	00000000 .ram6
00000000 l    d  .ram7	00000000 .ram7
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 
080001c0 l     F .text	00000002 _idle_thread
080001d0 l     F .text	0000002c chCoreAlloc
08000200 l     F .text	00000014 NMI_Handler
08000220 l     F .text	00000058 wakeup
20000600 l     O .bss	00000150 ch
08000280 l     F .text	00000014 _unhandled_exception
08000280 l     F .text	00000014 MemManage_Handler
08000280 l     F .text	00000014 BusFault_Handler
08000280 l     F .text	00000014 UsageFault_Handler
08000280 l     F .text	00000014 Vector1C
08000280 l     F .text	00000014 Vector20
08000280 l     F .text	00000014 Vector24
08000280 l     F .text	00000014 Vector28
08000280 l     F .text	00000014 SVC_Handler
08000280 l     F .text	00000014 DebugMon_Handler
08000280 l     F .text	00000014 Vector34
08000280 l     F .text	00000014 PendSV_Handler
08000280 l     F .text	00000014 HardFault_Handler
08000280 l     F .text	00000014 Vector40
08000280 l     F .text	00000014 Vector44
08000280 l     F .text	00000014 Vector48
08000280 l     F .text	00000014 Vector4C
08000280 l     F .text	00000014 Vector50
08000280 l     F .text	00000014 Vector54
08000280 l     F .text	00000014 Vector58
08000280 l     F .text	00000014 Vector5C
08000280 l     F .text	00000014 Vector60
08000280 l     F .text	00000014 Vector64
08000280 l     F .text	00000014 Vector68
08000280 l     F .text	00000014 Vector6C
08000280 l     F .text	00000014 Vector70
08000280 l     F .text	00000014 Vector74
08000280 l     F .text	00000014 Vector78
08000280 l     F .text	00000014 Vector7C
08000280 l     F .text	00000014 Vector80
08000280 l     F .text	00000014 Vector84
08000280 l     F .text	00000014 Vector88
08000280 l     F .text	00000014 Vector8C
08000280 l     F .text	00000014 Vector90
08000280 l     F .text	00000014 Vector94
08000280 l     F .text	00000014 Vector98
08000280 l     F .text	00000014 Vector9C
08000280 l     F .text	00000014 VectorA0
08000280 l     F .text	00000014 VectorA4
08000280 l     F .text	00000014 VectorA8
08000280 l     F .text	00000014 VectorAC
08000280 l     F .text	00000014 VectorB0
08000280 l     F .text	00000014 VectorB4
08000280 l     F .text	00000014 VectorB8
08000280 l     F .text	00000014 VectorBC
080002a0 l     F .text	00000050 chSchWakeupS.constprop.5
080002f0 l     F .text	00000020 chSchGoSleepS
08000310 l     F .text	00000070 chSchGoSleepTimeoutS.constprop.0
08000380 l     F .text	0000002c Thread1
080003b0 l     F .text	0000008c SysTick_Handler
20000780 l     O .bss	00000148 waThread1
20000750 l     O .bss	00000020 default_heap
20000770 l     O .bss	00000004 endmem
20000774 l     O .bss	00000004 minutes_counter
20000778 l     O .bss	00000004 nextmem
2000077c l     O .bss	00000004 seconds_counter
08000730 l     O .text	00000016 ch_debug
00000000 l    df *ABS*	00000000 build/obj/crt0_v6m.o
080000dc l       .text	00000000 msloop
080000e6 l       .text	00000000 endmsloop
080000ea l       .text	00000000 psloop
080000f4 l       .text	00000000 endpsloop
080000fa l       .text	00000000 dloop
08000108 l       .text	00000000 enddloop
0800010e l       .text	00000000 bloop
08000118 l       .text	00000000 endbloop
08000120 l       .text	00000000 initloop
0800012c l       .text	00000000 endinitloop
08000134 l       .text	00000000 finiloop
08000140 l       .text	00000000 endfiniloop
00000000 l    df *ABS*	00000000 build/obj/chcoreasm_v6m.o
0000000c l       *ABS*	00000000 CONTEXT_OFFSET
e000ed04 l       *ABS*	00000000 SCB_ICSR
10000000 l       *ABS*	00000000 ICSR_PENDSVSET
80000000 l       *ABS*	00000000 ICSR_NMIPENDSET
08000610 g     F .text	00000054 chThdExit
00000000 g       startup	00000000 __ram4_start__
00000000 g       .ram1	00000000 __ram1_free__
00000000 g       startup	00000000 __ram6_start__
08000000 g     O startup	000000c0 _vectors
200008c8 g       .ram0	00000000 __ram0_free__
200008c8 g       .ram0	00000000 __heap_base__
08000758 g       .mstack	00000000 _etext
00000000 g       *ABS*	00000000 __ram5_end__
00000000 g       *ABS*	00000000 __ram5_size__
080000c0 g       startup	00000000 __fini_array_end
20000600 g       .pstack	00000000 __main_thread_stack_end__
20000600 g       .bss	00000000 _bss_start
20002000 g       *ABS*	00000000 __heap_end__
00000000 g       *ABS*	00000000 __ram1_size__
00000000 g       .ram7	00000000 __ram7_free__
00000000 g       *ABS*	00000000 __ram4_size__
00000000 g       *ABS*	00000000 __ram1_end__
00000000 g       *ABS*	00000000 __ram4_end__
00002000 g       *ABS*	00000000 __ram0_size__
200008c8 g       .bss	00000000 _bss_end
080000c0 g     F .text	00000000 Reset_Handler
00000000 g       .ram5	00000000 __ram5_free__
080006b0 g     F .text	00000002 __default_exit
00000000 g       *ABS*	00000000 __ram6_end__
08000670 g     F .text	00000038 chSchDoReschedule
00000000 g       .ram6	00000000 __ram6_free__
00000000 g       *ABS*	00000000 __ram7_size__
08000180 g     F .text	00000000 _port_switch
080006c0 g     F .text	00000002 __late_init
00000000 g       startup	00000000 __ram7_start__
00000000 g       *ABS*	00000000 __ram3_size__
08000758 g       *ABS*	00000000 _textdata
00000000 g       startup	00000000 _text
080000c0 g       startup	00000000 __fini_array_start
00000000 g       *ABS*	00000000 __ram3_end__
00000000 g       *ABS*	00000000 __ram2_size__
00000000 g       startup	00000000 __ram1_start__
08000440 g     F .text	000001c4 main
00000000 g       *ABS*	00000000 __ram6_size__
00000000 g       .ram3	00000000 __ram3_free__
080000c0 g       startup	00000000 __init_array_end
080001a0 g     F .text	00000000 _port_thread_start
00000000 g       *ABS*	00000000 __ram2_end__
20000400 g       .pstack	00000000 __process_stack_base__
20000600 g       .data	00000000 _data
00000000 g       startup	00000000 __ram2_start__
080001ac g     F .text	00000000 _port_switch_from_isr
00000000 g       *ABS*	00000000 __ram7_end__
20000400 g       .mstack	00000000 __main_stack_end__
20000600 g       .data	00000000 _edata
20000400 g       .pstack	00000000 __main_thread_stack_base__
20000000 g       startup	00000000 __ram0_start__
080001b0 g       .text	00000000 _port_exit_from_isr
080000c0 g       startup	00000000 __init_array_start
00000000 g       startup	00000000 __ram5_start__
00000000 g       .ram2	00000000 __ram2_free__
00000000 g       .ram4	00000000 __ram4_free__
20002000 g       *ABS*	00000000 __ram0_end__
20000000 g       .mstack	00000000 __main_stack_base__
00000400 g       *ABS*	00000000 __main_stack_size__
20000600 g       .pstack	00000000 __process_stack_end__
080006d0 g     F .text	00000002 __early_init
00000000 g       startup	00000000 __ram3_start__
00000200 g       *ABS*	00000000 __process_stack_size__


