
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080001a1

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x00001b20 memsz 0x00001b20 flags rwx
    LOAD off    0x00020800 vaddr 0x20000800 paddr 0x08001b20 align 2**16
         filesz 0x00000000 memsz 0x00000a00 flags rw-
    LOAD off    0x00020000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000001a0  08000000  08000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001980  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000000  08001b20  08001b20  00011b20  2**0
                  CONTENTS
  3 .mstack       00000400  20000000  20000000  00020000  2**0
                  ALLOC
  4 .pstack       00000400  20000400  20000400  00020000  2**0
                  ALLOC
  5 .data         00000000  20000800  20000800  00011b20  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000a00  20000800  08001b20  00020800  2**3
                  ALLOC
  7 .ram0         00000000  20001200  20001200  00011b20  2**2
                  CONTENTS
  8 .ram1         00000000  00000000  00000000  00011b20  2**2
                  CONTENTS
  9 .ram2         00000000  00000000  00000000  00011b20  2**2
                  CONTENTS
 10 .ram3         00000000  00000000  00000000  00011b20  2**2
                  CONTENTS
 11 .ram4         00000000  10000000  10000000  00011b20  2**2
                  CONTENTS
 12 .ram5         00000000  00000000  00000000  00011b20  2**2
                  CONTENTS
 13 .ram6         00000000  00000000  00000000  00011b20  2**2
                  CONTENTS
 14 .ram7         00000000  00000000  00000000  00011b20  2**2
                  CONTENTS
 15 .ARM.attributes 0000002d  00000000  00000000  00011b20  2**0
                  CONTENTS, READONLY
 16 .comment      0000007e  00000000  00000000  00011b4d  2**0
                  CONTENTS, READONLY
 17 .debug_info   00006aba  00000000  00000000  00011bcb  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_abbrev 00000765  00000000  00000000  00018685  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_loc    00001def  00000000  00000000  00018dea  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 00000170  00000000  00000000  0001abd9  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_ranges 00001010  00000000  00000000  0001ad49  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_line   000017ce  00000000  00000000  0001bd59  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_str    00001e78  00000000  00000000  0001d527  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_frame  00000480  00000000  00000000  0001f3a0  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080001a0 l    d  .text	00000000 .text
08001b20 l    d  .textalign	00000000 .textalign
20000000 l    d  .mstack	00000000 .mstack
20000400 l    d  .pstack	00000000 .pstack
20000800 l    d  .data	00000000 .data
20000800 l    d  .bss	00000000 .bss
20001200 l    d  .ram0	00000000 .ram0
00000000 l    d  .ram1	00000000 .ram1
00000000 l    d  .ram2	00000000 .ram2
00000000 l    d  .ram3	00000000 .ram3
10000000 l    d  .ram4	00000000 .ram4
00000000 l    d  .ram5	00000000 .ram5
00000000 l    d  .ram6	00000000 .ram6
00000000 l    d  .ram7	00000000 .ram7
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 
080002a0 l     F .text	00000002 _idle_thread
080002b0 l     F .text	00000020 stSetAlarm
080002d0 l     F .text	0000005c _port_irq_epilogue
08000330 l     F .text	0000001a SVC_Handler
08000350 l     F .text	00000014 _stats_increase_irq
08000370 l     F .text	00000040 chTMChainMeasurementToX
080003b0 l     F .text	00000048 chTMStopMeasurementX
08000400 l     F .text	0000000c _stats_stop_measure_crit_isr
08000410 l     F .text	0000000c chTMStartMeasurementX
08000420 l     F .text	0000000c _stats_start_measure_crit_isr
08000430 l     F .text	00000034 _dbg_trace
08000470 l     F .text	00000020 chDbgCheckClassS
08000490 l     F .text	00000020 chDbgCheckClassI
080004b0 l     F .text	00000050 chSchReadyI
08000500 l     F .text	0000004c chThdDequeueAllI.constprop.21
08000550 l     F .text	0000006c chEvtBroadcastFlagsI
080005c0 l     F .text	0000002c _dbg_check_leave_isr
080005f0 l     F .text	0000002c _dbg_check_enter_isr
08000620 l     F .text	00000024 _dbg_check_unlock_from_isr
08000650 l     F .text	00000024 _dbg_check_lock_from_isr
08000680 l     F .text	000000a4 Vector98
08000730 l     F .text	0000008c Vector94
080007c0 l     F .text	0000008c Vector90
08000850 l     F .text	00000054 Vector8C
080008b0 l     F .text	000000f0 VectorB0
080009a0 l     F .text	0000006c wakeup
08000a10 l     F .text	00000014 _unhandled_exception
08000a10 l     F .text	00000014 Vector20
08000a10 l     F .text	00000014 Vector24
08000a10 l     F .text	00000014 Vector28
08000a10 l     F .text	00000014 UsageFault_Handler
08000a10 l     F .text	00000014 DebugMon_Handler
08000a10 l     F .text	00000014 Vector34
08000a10 l     F .text	00000014 PendSV_Handler
08000a10 l     F .text	00000014 SysTick_Handler
08000a10 l     F .text	00000014 Vector40
08000a10 l     F .text	00000014 Vector44
08000a10 l     F .text	00000014 Vector48
08000a10 l     F .text	00000014 Vector4C
08000a10 l     F .text	00000014 Vector50
08000a10 l     F .text	00000014 Vector54
08000a10 l     F .text	00000014 Vector58
08000a10 l     F .text	00000014 Vector5C
08000a10 l     F .text	00000014 Vector60
08000a10 l     F .text	00000014 Vector64
08000a10 l     F .text	00000014 Vector68
08000a10 l     F .text	00000014 Vector6C
08000a10 l     F .text	00000014 Vector70
08000a10 l     F .text	00000014 Vector74
08000a10 l     F .text	00000014 Vector78
08000a10 l     F .text	00000014 Vector7C
08000a10 l     F .text	00000014 Vector80
08000a10 l     F .text	00000014 Vector84
08000a10 l     F .text	00000014 Vector88
08000a10 l     F .text	00000014 MemManage_Handler
08000a10 l     F .text	00000014 HardFault_Handler
08000a10 l     F .text	00000014 NMI_Handler
08000a10 l     F .text	00000014 Vector1C
08000a10 l     F .text	00000014 Vector9C
08000a10 l     F .text	00000014 VectorA0
08000a10 l     F .text	00000014 VectorA4
08000a10 l     F .text	00000014 VectorA8
08000a10 l     F .text	00000014 VectorAC
08000a10 l     F .text	00000014 BusFault_Handler
08000a10 l     F .text	00000014 VectorB4
08000a10 l     F .text	00000014 VectorB8
08000a10 l     F .text	00000014 VectorBC
08000a10 l     F .text	00000014 VectorC0
08000a10 l     F .text	00000014 VectorC4
08000a10 l     F .text	00000014 VectorC8
08000a10 l     F .text	00000014 VectorCC
08000a10 l     F .text	00000014 VectorD0
08000a10 l     F .text	00000014 VectorD4
08000a10 l     F .text	00000014 VectorD8
08000a10 l     F .text	00000014 VectorDC
08000a10 l     F .text	00000014 VectorE0
08000a10 l     F .text	00000014 VectorE4
08000a10 l     F .text	00000014 VectorE8
08000a10 l     F .text	00000014 VectorEC
08000a10 l     F .text	00000014 VectorF0
08000a10 l     F .text	00000014 VectorF4
08000a10 l     F .text	00000014 VectorF8
08000a10 l     F .text	00000014 VectorFC
08000a10 l     F .text	00000014 Vector100
08000a10 l     F .text	00000014 Vector104
08000a10 l     F .text	00000014 Vector108
08000a10 l     F .text	00000014 Vector10C
08000a10 l     F .text	00000014 Vector110
08000a10 l     F .text	00000014 Vector114
08000a10 l     F .text	00000014 Vector118
08000a10 l     F .text	00000014 Vector11C
08000a10 l     F .text	00000014 Vector120
08000a10 l     F .text	00000014 Vector124
08000a10 l     F .text	00000014 Vector128
08000a10 l     F .text	00000014 Vector12C
08000a10 l     F .text	00000014 Vector130
08000a10 l     F .text	00000014 Vector134
08000a10 l     F .text	00000014 Vector138
08000a10 l     F .text	00000014 Vector13C
08000a10 l     F .text	00000014 Vector140
08000a10 l     F .text	00000014 Vector144
08000a10 l     F .text	00000014 Vector148
08000a10 l     F .text	00000014 Vector14C
08000a10 l     F .text	00000014 Vector150
08000a10 l     F .text	00000014 Vector154
08000a10 l     F .text	00000014 Vector158
08000a10 l     F .text	00000014 Vector15C
08000a10 l     F .text	00000014 Vector160
08000a10 l     F .text	00000014 Vector164
08000a10 l     F .text	00000014 Vector168
08000a10 l     F .text	00000014 Vector16C
08000a10 l     F .text	00000014 Vector170
08000a10 l     F .text	00000014 Vector174
08000a10 l     F .text	00000014 Vector178
08000a10 l     F .text	00000014 Vector17C
08000a10 l     F .text	00000014 Vector180
08000a10 l     F .text	00000014 Vector184
08000a10 l     F .text	00000014 Vector188
08000a10 l     F .text	00000014 Vector18C
08000a10 l     F .text	00000014 Vector190
08000a10 l     F .text	00000014 Vector194
08000a10 l     F .text	00000014 Vector198
08000a10 l     F .text	00000014 Vector19C
08000a30 l     F .text	00000064 chSchGoSleepS
08000aa0 l     F .text	00000124 chSchGoSleepTimeoutS
08000d50 l     F .text	00000134 chThdCreateStatic.constprop.27
08001460 l     F .text	0000006c chCoreAlloc
08001640 l     F .text	00000250 can_rx
080014d0 l     F .text	00000168 can_tx
20000800 l     O .bss	00000030 CAND1
20000830 l     O .bss	000001e8 can_rx_wa
20000a18 l     O .bss	000001e8 can_tx_wa
20000c00 l     O .bss	000005d8 ch
200011d8 l     O .bss	00000020 default_heap
200011f8 l     O .bss	00000004 endmem
200011fc l     O .bss	00000004 nextmem
08001910 l     O .text	0000000c __func__.5752.lto_priv.34
08001920 l     O .text	0000000c __func__.5752.lto_priv.35
08001930 l     O .text	0000000c __func__.5752.lto_priv.36
08001940 l     O .text	0000000c __func__.5752.lto_priv.37
08001950 l     O .text	0000000c __func__.5838
08001960 l     O .text	00000014 __func__.5935
08001980 l     O .text	0000000c __func__.6452
08001990 l     O .text	0000000b __func__.6455
080019a0 l     O .text	0000000d __func__.6489
080019b0 l     O .text	0000000b __func__.6508
080019c0 l     O .text	0000000d __func__.6924
080019d0 l     O .text	00000009 __func__.6928
080019e0 l     O .text	0000000b __func__.6931
080019f0 l     O .text	0000000c __func__.6939
08001a00 l     O .text	0000000b __func__.6950
08001ab0 l     O .text	00000008 cancfg
08001af0 l     O .text	00000016 ch_debug
00000000 l    df *ABS*	00000000 build/obj/crt0_v7m.o
080001be l       .text	00000000 msloop
080001cc l       .text	00000000 psloop
080001dc l       .text	00000000 dloop
080001f0 l       .text	00000000 bloop
08000202 l       .text	00000000 initloop
0800020e l       .text	00000000 endinitloop
08000216 l       .text	00000000 finiloop
08000222 l       .text	00000000 endfiniloop
00000000 l    df *ABS*	00000000 build/obj/chcoreasm_v7m.o
0000000c l       *ABS*	00000000 CONTEXT_OFFSET
e000ed04 l       *ABS*	00000000 SCB_ICSR
10000000 l       *ABS*	00000000 ICSR_PENDSVSET
08001890 g     F .text	00000058 chThdExit
10000000 g       startup	00000000 __ram4_start__
08000d10 g     F .text	00000020 _dbg_check_unlock
00000000 g       .ram1	00000000 __ram1_free__
00000000 g       startup	00000000 __ram6_start__
08000000 g     O startup	000001a0 _vectors
20001200 g       .ram0	00000000 __ram0_free__
20001200 g       .ram0	00000000 __heap_base__
08001b20 g       .mstack	00000000 _etext
00000000 g       *ABS*	00000000 __ram5_end__
00000000 g       *ABS*	00000000 __ram5_size__
08000c80 g     F .text	0000000c _stats_start_measure_crit_thd
080001a0 g       startup	00000000 __fini_array_end
20000800 g       .pstack	00000000 __main_thread_stack_end__
20000800 g       .bss	00000000 _bss_start
2000a000 g       *ABS*	00000000 __heap_end__
00000000 g       *ABS*	00000000 __ram1_size__
00000000 g       .ram7	00000000 __ram7_free__
00002000 g       *ABS*	00000000 __ram4_size__
00000000 g       *ABS*	00000000 __ram1_end__
10002000 g       *ABS*	00000000 __ram4_end__
0000a000 g       *ABS*	00000000 __ram0_size__
20001200 g       .bss	00000000 _bss_end
080001a0 g     F .text	00000000 Reset_Handler
00000000 g       .ram5	00000000 __ram5_free__
080018f0 g     F .text	00000002 __default_exit
00000000 g       *ABS*	00000000 __ram6_end__
08000c90 g     F .text	00000078 chSchDoReschedule
00000000 g       .ram6	00000000 __ram6_free__
00000000 g       *ABS*	00000000 __ram7_size__
08000260 g     F .text	00000000 _port_switch
08001900 g     F .text	00000002 __late_init
00000000 g       startup	00000000 __ram7_start__
00000000 g       *ABS*	00000000 __ram3_size__
08001b20 g       *ABS*	00000000 _textdata
00000000 g       startup	00000000 _text
08000c70 g     F .text	0000000c _stats_stop_measure_crit_thd
080001a0 g       startup	00000000 __fini_array_start
00000000 g       *ABS*	00000000 __ram3_end__
00000000 g       *ABS*	00000000 __ram2_size__
00000000 g       startup	00000000 __ram1_start__
08000e90 g     F .text	000005cc main
00000000 g       *ABS*	00000000 __ram6_size__
00000000 g       .ram3	00000000 __ram3_free__
080001a0 g       startup	00000000 __init_array_end
08000270 g     F .text	00000000 _port_thread_start
00000000 g       *ABS*	00000000 __ram2_end__
20000400 g       .pstack	00000000 __process_stack_base__
20000800 g       .data	00000000 _data
00000000 g       startup	00000000 __ram2_start__
08000288 g     F .text	00000000 _port_switch_from_isr
00000000 g       *ABS*	00000000 __ram7_end__
20000400 g       .mstack	00000000 __main_stack_end__
20000800 g       .data	00000000 _edata
20000400 g       .pstack	00000000 __main_thread_stack_base__
20000000 g       startup	00000000 __ram0_start__
0800029c g       .text	00000000 _port_exit_from_isr
080001a0 g       startup	00000000 __init_array_start
00000000 g       startup	00000000 __ram5_start__
08000d30 g     F .text	00000020 _dbg_check_lock
00000000 g       .ram2	00000000 __ram2_free__
10000000 g       .ram4	00000000 __ram4_free__
2000a000 g       *ABS*	00000000 __ram0_end__
20000000 g       .mstack	00000000 __main_stack_base__
00000400 g       *ABS*	00000000 __main_stack_size__
20000800 g       .pstack	00000000 __process_stack_end__
08000bd0 g     F .text	0000009c __early_init
00000000 g       startup	00000000 __ram3_start__
00000400 g       *ABS*	00000000 __process_stack_size__


