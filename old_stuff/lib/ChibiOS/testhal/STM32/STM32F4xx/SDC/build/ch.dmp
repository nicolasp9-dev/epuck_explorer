
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080001c1

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x00005351 memsz 0x00005358 flags rwx
    LOAD off    0x00020800 vaddr 0x20000800 paddr 0x08005358 align 2**16
         filesz 0x000005b0 memsz 0x00005270 flags rw-
    LOAD off    0x00030000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000001c0  08000000  08000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005191  080001c0  080001c0  000101c0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000007  08005351  08005351  00015351  2**0
                  ALLOC
  3 .mstack       00000400  20000000  20000000  00030000  2**0
                  ALLOC
  4 .pstack       00000400  20000400  20000400  00030000  2**0
                  ALLOC
  5 .data         000005b0  20000800  08005358  00020800  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00004cc0  20000db0  08005908  00020db0  2**3
                  ALLOC
  7 .ram0         00000000  20005a70  20005a70  00020db0  2**2
                  CONTENTS
  8 .ram1         00000000  20000000  20000000  00020db0  2**2
                  CONTENTS
  9 .ram2         00000000  2001c000  2001c000  00020db0  2**2
                  CONTENTS
 10 .ram3         00000000  00000000  00000000  00020db0  2**2
                  CONTENTS
 11 .ram4         00000000  10000000  10000000  00020db0  2**2
                  CONTENTS
 12 .ram5         00000000  40024000  40024000  00020db0  2**2
                  CONTENTS
 13 .ram6         00000000  00000000  00000000  00020db0  2**2
                  CONTENTS
 14 .ram7         00000000  00000000  00000000  00020db0  2**2
                  CONTENTS
 15 .ARM.attributes 0000002f  00000000  00000000  00020db0  2**0
                  CONTENTS, READONLY
 16 .comment      0000007e  00000000  00000000  00020ddf  2**0
                  CONTENTS, READONLY
 17 .debug_info   0000defd  00000000  00000000  00020e5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_abbrev 000008d6  00000000  00000000  0002ed5a  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_loc    00006b78  00000000  00000000  0002f630  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 00000348  00000000  00000000  000361a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_ranges 00001ef0  00000000  00000000  000364f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_line   00002d68  00000000  00000000  000383e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_str    00002b55  00000000  00000000  0003b148  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_frame  00000e54  00000000  00000000  0003dca0  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080001c0 l    d  .text	00000000 .text
08005351 l    d  .textalign	00000000 .textalign
20000000 l    d  .mstack	00000000 .mstack
20000400 l    d  .pstack	00000000 .pstack
20000800 l    d  .data	00000000 .data
20000db0 l    d  .bss	00000000 .bss
20005a70 l    d  .ram0	00000000 .ram0
20000000 l    d  .ram1	00000000 .ram1
2001c000 l    d  .ram2	00000000 .ram2
00000000 l    d  .ram3	00000000 .ram3
10000000 l    d  .ram4	00000000 .ram4
40024000 l    d  .ram5	00000000 .ram5
00000000 l    d  .ram6	00000000 .ram6
00000000 l    d  .ram7	00000000 .ram7
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 
080006e0 l     F .text	00000002 _idle_thread
080006f0 l     F .text	00000010 notify6
08000700 l     F .text	00000004 sdc_lld_sync
08000700 l     F .text	00000004 sdc_lld_is_write_protected
08000710 l     F .text	0000002c sdc_lld_is_card_inserted
08000740 l     F .text	0000003c sdc_lld_collect_errors.isra.0
08000780 l     F .text	0000003a sdc_lld_send_cmd_long_crc
080007c0 l     F .text	0000002e sdc_lld_send_cmd_short_crc
080007f0 l     F .text	00000068 sdc_lld_error_cleanup
08000860 l     F .text	00000030 sdcGetInfo
08000890 l     F .text	00000020 sdcSync
080008b0 l     F .text	0000005c _mmcsd_get_slice
08000910 l     F .text	00000056 _mmcsd_get_capacity
08000970 l     F .text	00000020 stSetAlarm
08000990 l     F .text	0000005c _port_irq_epilogue
080009f0 l     F .text	0000001a SVC_Handler
08000a10 l     F .text	00000014 _stats_increase_irq
08000a30 l     F .text	00000040 chTMChainMeasurementToX
08000a70 l     F .text	00000048 chTMStopMeasurementX
08000ac0 l     F .text	0000000c _stats_stop_measure_crit_isr
08000ad0 l     F .text	0000000c chTMStartMeasurementX
08000ae0 l     F .text	0000000c _stats_start_measure_crit_isr
08000af0 l     F .text	00000060 _thread_init
08000b50 l     F .text	00000034 _dbg_trace
08000b90 l     F .text	00000020 chDbgCheckClassS
08000bb0 l     F .text	00000020 chDbgCheckClassI
08000bd0 l     F .text	00000050 chSchReadyI
08000c20 l     F .text	00000034 chThdDequeueNextI.constprop.26
08000c60 l     F .text	0000007c chEvtBroadcastFlagsI
08000ce0 l     F .text	0000002c _dbg_check_leave_isr
08000d10 l     F .text	0000002c _dbg_check_enter_isr
08000d40 l     F .text	00000038 Vector158
08000d80 l     F .text	00000038 Vector154
08000dc0 l     F .text	00000038 Vector150
08000e00 l     F .text	00000034 Vector130
08000e40 l     F .text	00000038 Vector12C
08000e80 l     F .text	00000038 Vector128
08000ec0 l     F .text	00000038 Vector124
08000f00 l     F .text	00000034 Vector120
08000f40 l     F .text	00000038 VectorFC
08000f80 l     F .text	00000038 Vector84
08000fc0 l     F .text	00000038 Vector80
08001000 l     F .text	00000034 Vector7C
08001040 l     F .text	00000038 Vector78
08001080 l     F .text	00000038 Vector74
080010c0 l     F .text	00000038 Vector70
08001100 l     F .text	00000034 Vector6C
08001140 l     F .text	00000024 _dbg_check_unlock_from_isr
08001170 l     F .text	00000024 _dbg_check_lock_from_isr
080011a0 l     F .text	0000006c Vector104
08001210 l     F .text	000000f0 VectorB0
08001300 l     F .text	0000006c wakeup
08001370 l     F .text	00000014 _unhandled_exception
08001370 l     F .text	00000014 Vector58
08001370 l     F .text	00000014 Vector5C
08001370 l     F .text	00000014 Vector60
08001370 l     F .text	00000014 Vector64
08001370 l     F .text	00000014 Vector68
08001370 l     F .text	00000014 Vector4C
08001370 l     F .text	00000014 Vector48
08001370 l     F .text	00000014 Vector44
08001370 l     F .text	00000014 Vector40
08001370 l     F .text	00000014 SysTick_Handler
08001370 l     F .text	00000014 PendSV_Handler
08001370 l     F .text	00000014 Vector34
08001370 l     F .text	00000014 Vector88
08001370 l     F .text	00000014 Vector8C
08001370 l     F .text	00000014 Vector90
08001370 l     F .text	00000014 Vector94
08001370 l     F .text	00000014 Vector98
08001370 l     F .text	00000014 Vector9C
08001370 l     F .text	00000014 VectorA0
08001370 l     F .text	00000014 VectorA4
08001370 l     F .text	00000014 VectorA8
08001370 l     F .text	00000014 VectorAC
08001370 l     F .text	00000014 HardFault_Handler
08001370 l     F .text	00000014 VectorB4
08001370 l     F .text	00000014 VectorB8
08001370 l     F .text	00000014 VectorBC
08001370 l     F .text	00000014 VectorC0
08001370 l     F .text	00000014 VectorC4
08001370 l     F .text	00000014 VectorC8
08001370 l     F .text	00000014 VectorCC
08001370 l     F .text	00000014 VectorD0
08001370 l     F .text	00000014 VectorD4
08001370 l     F .text	00000014 VectorD8
08001370 l     F .text	00000014 VectorDC
08001370 l     F .text	00000014 VectorE0
08001370 l     F .text	00000014 VectorE4
08001370 l     F .text	00000014 VectorE8
08001370 l     F .text	00000014 VectorEC
08001370 l     F .text	00000014 VectorF0
08001370 l     F .text	00000014 VectorF4
08001370 l     F .text	00000014 VectorF8
08001370 l     F .text	00000014 DebugMon_Handler
08001370 l     F .text	00000014 Vector100
08001370 l     F .text	00000014 NMI_Handler
08001370 l     F .text	00000014 Vector108
08001370 l     F .text	00000014 Vector10C
08001370 l     F .text	00000014 Vector110
08001370 l     F .text	00000014 Vector114
08001370 l     F .text	00000014 Vector118
08001370 l     F .text	00000014 Vector11C
08001370 l     F .text	00000014 Vector50
08001370 l     F .text	00000014 Vector28
08001370 l     F .text	00000014 Vector24
08001370 l     F .text	00000014 Vector20
08001370 l     F .text	00000014 Vector1C
08001370 l     F .text	00000014 Vector134
08001370 l     F .text	00000014 Vector138
08001370 l     F .text	00000014 Vector13C
08001370 l     F .text	00000014 Vector140
08001370 l     F .text	00000014 Vector144
08001370 l     F .text	00000014 Vector148
08001370 l     F .text	00000014 Vector14C
08001370 l     F .text	00000014 UsageFault_Handler
08001370 l     F .text	00000014 BusFault_Handler
08001370 l     F .text	00000014 MemManage_Handler
08001370 l     F .text	00000014 Vector54
08001370 l     F .text	00000014 Vector160
08001370 l     F .text	00000014 Vector164
08001370 l     F .text	00000014 Vector168
08001370 l     F .text	00000014 Vector16C
08001370 l     F .text	00000014 Vector170
08001370 l     F .text	00000014 Vector174
08001370 l     F .text	00000014 Vector178
08001370 l     F .text	00000014 Vector17C
08001370 l     F .text	00000014 Vector180
08001370 l     F .text	00000014 Vector184
08001370 l     F .text	00000014 Vector188
08001370 l     F .text	00000014 Vector18C
08001370 l     F .text	00000014 Vector190
08001370 l     F .text	00000014 Vector194
08001370 l     F .text	00000014 Vector198
08001370 l     F .text	00000014 Vector19C
08001370 l     F .text	00000014 Vector1A0
08001370 l     F .text	00000014 Vector1A4
08001370 l     F .text	00000014 Vector1A8
08001370 l     F .text	00000014 Vector1AC
08001370 l     F .text	00000014 Vector1B0
08001370 l     F .text	00000014 Vector1B4
08001370 l     F .text	00000014 Vector1B8
08001370 l     F .text	00000014 Vector1BC
08001390 l     F .text	00000070 chSchWakeupS.constprop.32
08001400 l     F .text	00000064 chSchGoSleepS
08001470 l     F .text	000000f8 chMtxLockS
08001570 l     F .text	0000004c chThdExitS
080015c0 l     F .text	00000138 chSchGoSleepTimeoutS
08001700 l     F .text	00000028 chThdEnqueueTimeoutS
08001730 l     F .text	0000020c Vector15C
08001940 l     F .text	00000044 _strtok.constprop.3
08001990 l     F .text	000003dc chprintf.lto_priv.57
08001990 l     F .text	000003dc chprintf.lto_priv.58
08001d70 l     F .text	000000bc cmd_info
08001fb0 l     F .text	00000034 chSysUnlock.lto_priv.35
08002010 l     F .text	0000006c chCoreAlloc
08002080 l     F .text	00000248 shell_thread
080022d0 l     F .text	00000070 cmd_systime
08002340 l     F .text	000000ec sdc_lld_wait_transaction_end
08002430 l     F .text	0000009c sdc_lld_write_aligned.part.5
080024d0 l     F .text	00000098 sdc_lld_read_aligned.part.4
08002570 l     F .text	000000ec chOQWriteTimeout
08002660 l     F .text	00000006 writet
08002670 l     F .text	0000000a write
08002680 l     F .text	000000ac chOQPutTimeout
08002730 l     F .text	00000006 putt
08002740 l     F .text	0000000a put
08002750 l     F .text	000000f4 chIQReadTimeout
08002850 l     F .text	00000006 readt
08002860 l     F .text	0000000a read
08002870 l     F .text	000000a4 chIQGetTimeout
08002920 l     F .text	00000006 gett
08002930 l     F .text	0000000a get
08002940 l     F .text	000000c4 chMtxUnlock
08002a30 l     F .text	0000004c chThdSleep
08003520 l     F .text	00000034 Thread1
08003560 l     F .text	00000040 _sdc_wait_for_transfer_state
080035a0 l     F .text	000000a4 sdcErase.constprop.9
08003650 l     F .text	00000090 sdc_lld_read_special
080036e0 l     F .text	000003f8 sdcConnect
08003ae0 l     F .text	000000e0 sdcWrite
08003bc0 l     F .text	000000e0 sdcRead
08003ca0 l     F .text	000000b4 sdcDisconnect
08003d60 l     F .text	00000740 cmd_sdc
20000e74 l     O .bss	00002004 buf
20002e78 l     O .bss	00002000 buf2
20000db0 l     O .bss	00000078 SD6
20000e28 l     O .bss	0000004c SDCD1
20004e78 l     O .bss	000005d8 ch
20005450 l     O .bss	00000020 default_heap
20005470 l     O .bss	00000080 dma_isr_redir
200054f0 l     O .bss	00000004 dma_streams_mask
200054f4 l     O .bss	00000004 endmem
200054f8 l     O .bss	00000001 last_status.7339
200054fc l     O .bss	00000004 nextmem
20005500 l     O .bss	00000200 sd_scratchpad
20005700 l     O .bss	00000004 shell_terminated
20005704 l     O .bss	00000200 u
20005908 l     O .bss	00000168 waThread1
20000800 l     O .data	00000018 local_commands
08004730 l     O .text	0000000c __func__.5906.lto_priv.46
08004740 l     O .text	0000000c __func__.5906.lto_priv.47
08004750 l     O .text	0000000c __func__.5906.lto_priv.48
08004760 l     O .text	0000000c __func__.5906.lto_priv.49
08004770 l     O .text	0000000c __func__.5906.lto_priv.50
08004780 l     O .text	0000000c __func__.5906.lto_priv.51
08004790 l     O .text	0000000c __func__.5906.lto_priv.52
080047a0 l     O .text	0000000c __func__.5992
080047b0 l     O .text	00000014 __func__.6089
080047d0 l     O .text	0000000c __func__.6307.lto_priv.53
080047e0 l     O .text	0000000c __func__.6307.lto_priv.54
080047f0 l     O .text	0000000c __func__.6307.lto_priv.55
08004800 l     O .text	0000000c __func__.6307.lto_priv.56
08004810 l     O .text	0000000c __func__.6606.lto_priv.33
08004820 l     O .text	0000000d __func__.6606.lto_priv.34
08004830 l     O .text	0000000b __func__.6609.lto_priv.59
08004840 l     O .text	0000000b __func__.6609.lto_priv.60
08004850 l     O .text	0000000b __func__.6625
08004860 l     O .text	00000015 __func__.6626
08004880 l     O .text	0000000c __func__.6627
08004890 l     O .text	00000010 __func__.6629
080048a0 l     O .text	0000000c __func__.6632
080048b0 l     O .text	0000000d __func__.6643
080048c0 l     O .text	0000000b __func__.6662
080048d0 l     O .text	00000011 __func__.6665
080048f0 l     O .text	0000000e __func__.6672
08004900 l     O .text	0000000d __func__.6684
08004910 l     O .text	0000000d __func__.7338
08004920 l     O .text	00000011 __func__.7341
08004940 l     O .text	0000000b __func__.7345
08004950 l     O .text	00000008 __func__.7383
08004960 l     O .text	00000012 __func__.7416
08004980 l     O .text	0000000e __func__.7789
08004990 l     O .text	00000012 __func__.7842
080049b0 l     O .text	00000009 __func__.7864
080049c0 l     O .text	00000015 __func__.7866
080049e0 l     O .text	0000000b __func__.7874
080049f0 l     O .text	00000016 __func__.7875
08004a10 l     O .text	0000000e __func__.7885
08004a20 l     O .text	00000008 __func__.7893
08004a30 l     O .text	00000009 __func__.7901
08004a40 l     O .text	00000015 __func__.7906
08004a60 l     O .text	00000008 __func__.7911
08004a70 l     O .text	0000000b __func__.7916
08004a80 l     O .text	00000009 __func__.7923
08004af0 l     O .text	000000c0 _stm32_dma_streams
08004c10 l     O .text	00000016 ch_debug
080050f0 l     O .text	00000010 commands
08005110 l     O .text	00000010 mode.7793
08005120 l     O .text	00000020 sdc_vmt
08005140 l     O .text	00000008 sdccfg
08005150 l     O .text	00000008 shell_cfg1
08005210 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 build/obj/crt0_v7m.o
080001de l       .text	00000000 msloop
080001ec l       .text	00000000 psloop
080001fc l       .text	00000000 dloop
08000210 l       .text	00000000 bloop
08000222 l       .text	00000000 initloop
0800022e l       .text	00000000 endinitloop
08000236 l       .text	00000000 finiloop
08000242 l       .text	00000000 endfiniloop
00000000 l    df *ABS*	00000000 build/obj/chcoreasm_v7m.o
0000000c l       *ABS*	00000000 CONTEXT_OFFSET
e000ed04 l       *ABS*	00000000 SCB_ICSR
10000000 l       *ABS*	00000000 ICSR_PENDSVSET
00000000 l    df *ABS*	00000000 lib_a-memcpy.o
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strpbrk.c
00000000 l    df *ABS*	00000000 strspn.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
20000988 l     O .data	00000428 impure_data
08002a10 g     F .text	00000018 chThdExit
10000000 g       startup	00000000 __ram4_start__
08001f90 g     F .text	00000020 _dbg_check_unlock
20000000 g       .ram1	00000000 __ram1_free__
00000000 g       startup	00000000 __ram6_start__
080046b0 g     F .text	0000001c __locale_ctype_ptr
08000000 g     O startup	000001c0 _vectors
20005a70 g       .ram0	00000000 __ram0_free__
20005a70 g       .ram0	00000000 __heap_base__
08005358 g       .mstack	00000000 _etext
40025000 g       *ABS*	00000000 __ram5_end__
00001000 g       *ABS*	00000000 __ram5_size__
080002c0 g     F .text	00000134 memcpy
08001f00 g     F .text	0000000c _stats_start_measure_crit_thd
080001c0 g       startup	00000000 __fini_array_end
20000800 g       .pstack	00000000 __main_thread_stack_end__
20000db0 g       .bss	00000000 _bss_start
20020000 g       *ABS*	00000000 __heap_end__
0001c000 g       *ABS*	00000000 __ram1_size__
00000000 g       .ram7	00000000 __ram7_free__
00010000 g       *ABS*	00000000 __ram4_size__
2001c000 g       *ABS*	00000000 __ram1_end__
10010000 g       *ABS*	00000000 __ram4_end__
00020000 g       *ABS*	00000000 __ram0_size__
20005a70 g       .bss	00000000 _bss_end
080001c0 g     F .text	00000000 Reset_Handler
40024000 g       .ram5	00000000 __ram5_free__
080044a0 g     F .text	00000002 __default_exit
00000000 g       *ABS*	00000000 __ram6_end__
08001f10 g     F .text	00000078 chSchDoReschedule
00000000 g       .ram6	00000000 __ram6_free__
00000000 g       *ABS*	00000000 __ram7_size__
08000280 g     F .text	00000000 _port_switch
080045d0 g     F .text	00000044 strcasecmp
080044b0 g     F .text	00000002 __late_init
00000000 g       startup	00000000 __ram7_start__
080044c0 g     F .text	00000062 memcmp
00000000 g       *ABS*	00000000 __ram3_size__
08005358 g       *ABS*	00000000 _textdata
00000000 g       startup	00000000 _text
08001ef0 g     F .text	0000000c _stats_stop_measure_crit_thd
080001c0 g       startup	00000000 __fini_array_start
00000000 g       *ABS*	00000000 __ram3_end__
00004000 g       *ABS*	00000000 __ram2_size__
20000000 g       startup	00000000 __ram1_start__
08004530 g     F .text	00000094 memset
08002a80 g     F .text	00000a98 main
00000000 g       *ABS*	00000000 __ram6_size__
00000000 g       .ram3	00000000 __ram3_free__
080001c0 g       startup	00000000 __init_array_end
08004700 g     F .text	0000001a __ascii_wctomb
08000408 g     F .text	000002dc strcmp
08000290 g     F .text	00000000 _port_thread_start
20020000 g       *ABS*	00000000 __ram2_end__
20000400 g       .pstack	00000000 __process_stack_base__
20000984 g     O .data	00000004 _impure_ptr
080046d0 g     F .text	0000002a __ascii_mbtowc
20000800 g       .data	00000000 _data
2001c000 g       startup	00000000 __ram2_start__
080002a8 g     F .text	00000000 _port_switch_from_isr
00000000 g       *ABS*	00000000 __ram7_end__
20000400 g       .mstack	00000000 __main_stack_end__
20000db0 g       .data	00000000 _edata
20000400 g       .pstack	00000000 __main_thread_stack_base__
20000000 g       startup	00000000 __ram0_start__
080002bc g       .text	00000000 _port_exit_from_isr
08005250 g     O .text	00000101 _ctype_
080001c0 g       startup	00000000 __init_array_start
40024000 g       startup	00000000 __ram5_start__
08004670 g     F .text	00000034 strspn
08001ff0 g     F .text	00000020 _dbg_check_lock
2001c000 g       .ram2	00000000 __ram2_free__
10000000 g       .ram4	00000000 __ram4_free__
20020000 g       *ABS*	00000000 __ram0_end__
20000000 g       .mstack	00000000 __main_stack_base__
00000400 g       *ABS*	00000000 __main_stack_size__
20000800 g       .pstack	00000000 __process_stack_end__
08001e30 g     F .text	000000c0 __early_init
00000000 g       startup	00000000 __ram3_start__
20000818 g     O .data	0000016c __global_locale
00000400 g       *ABS*	00000000 __process_stack_size__
08004620 g     F .text	00000042 strpbrk


