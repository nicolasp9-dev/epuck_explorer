
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080000c1

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x00001a10 memsz 0x00001a10 flags rwx
    LOAD off    0x00020600 vaddr 0x20000600 paddr 0x08001a10 align 2**16
         filesz 0x00000000 memsz 0x00000f10 flags rw-
    LOAD off    0x00020000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000600 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000c0  08000000  08000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001950  080000c0  080000c0  000100c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000000  08001a10  08001a10  00011a10  2**0
                  CONTENTS
  3 .mstack       00000400  20000000  20000000  00020000  2**0
                  ALLOC
  4 .pstack       00000200  20000400  20000400  00020000  2**0
                  ALLOC
  5 .data         00000000  20000600  20000600  00011a10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000f10  20000600  08001a10  00020600  2**3
                  ALLOC
  7 .ram0         00000000  20001510  20001510  00011a10  2**2
                  CONTENTS
  8 .ram1         00000000  00000000  00000000  00011a10  2**2
                  CONTENTS
  9 .ram2         00000000  00000000  00000000  00011a10  2**2
                  CONTENTS
 10 .ram3         00000000  00000000  00000000  00011a10  2**2
                  CONTENTS
 11 .ram4         00000000  00000000  00000000  00011a10  2**2
                  CONTENTS
 12 .ram5         00000000  00000000  00000000  00011a10  2**2
                  CONTENTS
 13 .ram6         00000000  00000000  00000000  00011a10  2**2
                  CONTENTS
 14 .ram7         00000000  00000000  00000000  00011a10  2**2
                  CONTENTS
 15 .ARM.attributes 0000002b  00000000  00000000  00011a10  2**0
                  CONTENTS, READONLY
 16 .comment      0000007e  00000000  00000000  00011a3b  2**0
                  CONTENTS, READONLY
 17 .debug_info   000059e4  00000000  00000000  00011ab9  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_abbrev 000006b4  00000000  00000000  0001749d  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_loc    00001725  00000000  00000000  00017b51  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 00000178  00000000  00000000  00019276  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_ranges 00000aa0  00000000  00000000  000193ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_line   00001620  00000000  00000000  00019e8e  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_str    000017bd  00000000  00000000  0001b4ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_frame  00000460  00000000  00000000  0001cc6c  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000c0 l    d  .text	00000000 .text
08001a10 l    d  .textalign	00000000 .textalign
20000000 l    d  .mstack	00000000 .mstack
20000400 l    d  .pstack	00000000 .pstack
20000600 l    d  .data	00000000 .data
20000600 l    d  .bss	00000000 .bss
20001510 l    d  .ram0	00000000 .ram0
00000000 l    d  .ram1	00000000 .ram1
00000000 l    d  .ram2	00000000 .ram2
00000000 l    d  .ram3	00000000 .ram3
00000000 l    d  .ram4	00000000 .ram4
00000000 l    d  .ram5	00000000 .ram5
00000000 l    d  .ram6	00000000 .ram6
00000000 l    d  .ram7	00000000 .ram7
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 
080001d0 l     F .text	000000ac dmaStreamAllocate.constprop.11
200007b0 l     O .bss	00000568 ch
08000280 l     F .text	0000008c _pal_lld_setgroupmode.constprop.0
08000310 l     F .text	00000002 _idle_thread
08000320 l     F .text	00000018 spi_lld_serve_tx_interrupt
08000340 l     F .text	00000020 stSetAlarm
08000360 l     F .text	00000040 _port_irq_epilogue.part.0
080003a0 l     F .text	00000014 NMI_Handler
080003c0 l     F .text	00000034 _dbg_trace
08000400 l     F .text	00000020 chDbgCheckClassS
08000420 l     F .text	00000020 chDbgCheckClassI
08000440 l     F .text	00000054 chSchReadyI
080004a0 l     F .text	00000028 _dbg_check_leave_isr
080004d0 l     F .text	00000028 _dbg_check_enter_isr
08000500 l     F .text	00000024 _dbg_check_unlock_from_isr
08000530 l     F .text	00000024 _dbg_check_lock_from_isr
08000560 l     F .text	0000005c wakeup
080005c0 l     F .text	00000094 spi_lld_serve_rx_interrupt
08000660 l     F .text	00000014 _unhandled_exception
08000660 l     F .text	00000014 Vector1C
08000660 l     F .text	00000014 Vector20
08000660 l     F .text	00000014 Vector24
08000660 l     F .text	00000014 Vector28
08000660 l     F .text	00000014 SVC_Handler
08000660 l     F .text	00000014 DebugMon_Handler
08000660 l     F .text	00000014 Vector34
08000660 l     F .text	00000014 PendSV_Handler
08000660 l     F .text	00000014 SysTick_Handler
08000660 l     F .text	00000014 Vector40
08000660 l     F .text	00000014 Vector44
08000660 l     F .text	00000014 Vector48
08000660 l     F .text	00000014 Vector4C
08000660 l     F .text	00000014 Vector50
08000660 l     F .text	00000014 Vector54
08000660 l     F .text	00000014 Vector58
08000660 l     F .text	00000014 Vector5C
08000660 l     F .text	00000014 Vector60
08000660 l     F .text	00000014 MemManage_Handler
08000660 l     F .text	00000014 HardFault_Handler
08000660 l     F .text	00000014 BusFault_Handler
08000660 l     F .text	00000014 Vector70
08000660 l     F .text	00000014 Vector74
08000660 l     F .text	00000014 Vector78
08000660 l     F .text	00000014 UsageFault_Handler
08000660 l     F .text	00000014 Vector80
08000660 l     F .text	00000014 Vector84
08000660 l     F .text	00000014 Vector88
08000660 l     F .text	00000014 Vector8C
08000660 l     F .text	00000014 Vector90
08000660 l     F .text	00000014 Vector94
08000660 l     F .text	00000014 Vector98
08000660 l     F .text	00000014 Vector9C
08000660 l     F .text	00000014 VectorA0
08000660 l     F .text	00000014 VectorA4
08000660 l     F .text	00000014 VectorA8
08000660 l     F .text	00000014 VectorAC
08000660 l     F .text	00000014 VectorB0
08000660 l     F .text	00000014 VectorB4
08000660 l     F .text	00000014 VectorB8
08000660 l     F .text	00000014 VectorBC
08000680 l     F .text	00000058 chSchWakeupS.constprop.26
080006e0 l     F .text	0000004c chSchGoSleepS
08000730 l     F .text	00000100 chMtxLockS.constprop.17
08000830 l     F .text	000000c8 spi_lld_start.constprop.10
08000900 l     F .text	000000dc Vector7C
080009e0 l     F .text	00000054 Vector6C
08000a40 l     F .text	00000054 Vector68
08000aa0 l     F .text	00000034 Vector64
08000c50 l     F .text	000000b4 chThdCreateStatic.constprop.24
08000d10 l     F .text	00000148 chThdSleep.constprop.19
080014d0 l     F .text	00000060 chCoreAlloc
20001310 l     O .bss	00000200 txbuf
08001530 l     F .text	000000bc spi_thread_1
20000f70 l     O .bss	000001d0 spi_thread_1_wa
080015f0 l     F .text	000000bc spi_thread_2
20001140 l     O .bss	000001d0 spi_thread_2_wa
08001240 l     F .text	0000002c blinker
20000660 l     O .bss	00000150 blinker_wa
08001270 l     F .text	000000d4 chMtxUnlock.constprop.15
08001350 l     F .text	0000005c spiSelect.constprop.7
080013b0 l     F .text	0000005c spiUnselect.constprop.5
08001410 l     F .text	000000bc spiExchange.constprop.3
20000d6c l     O .bss	00000200 rxbuf
20000600 l     O .bss	00000030 SPID1
20000630 l     O .bss	00000030 SPID2
20000d18 l     O .bss	00000020 default_heap
20000d38 l     O .bss	00000028 dma_isr_redir
20000d60 l     O .bss	00000004 dma_streams_mask
20000d64 l     O .bss	00000004 endmem
20000d68 l     O .bss	00000004 nextmem
08001740 l     O .text	0000000c __func__.5058.lto_priv.31
08001750 l     O .text	0000000c __func__.5058.lto_priv.32
08001760 l     O .text	0000000c __func__.5058.lto_priv.33
08001770 l     O .text	0000000c __func__.5058.lto_priv.34
08001780 l     O .text	0000000c __func__.5144
08001790 l     O .text	0000000c __func__.5758
080017a0 l     O .text	0000000b __func__.5761.lto_priv.36
080017b0 l     O .text	0000000c __func__.5784
080017c0 l     O .text	0000000b __func__.5814
080017d0 l     O .text	0000000e __func__.5824
080017e0 l     O .text	0000000d __func__.5836
080017f0 l     O .text	0000000d __func__.6199
08001800 l     O .text	00000009 __func__.6203
08001810 l     O .text	0000000b __func__.6206
08001820 l     O .text	0000000a __func__.6211
08001830 l     O .text	0000000e __func__.6213
08001840 l     O .text	0000000c __func__.6215
08001850 l     O .text	00000012 __func__.6228
08001870 l     O .text	0000000c __func__.6251
080018e0 l     O .text	00000050 _stm32_dma_streams
08001990 l     O .text	00000016 ch_debug
080019b0 l     O .text	00000010 hs_spicfg
080019c0 l     O .text	00000010 ls_spicfg
00000000 l    df *ABS*	00000000 build/obj/crt0_v6m.o
080000dc l       .text	00000000 msloop
080000e6 l       .text	00000000 endmsloop
080000ea l       .text	00000000 psloop
080000f4 l       .text	00000000 endpsloop
080000fa l       .text	00000000 dloop
08000108 l       .text	00000000 enddloop
0800010e l       .text	00000000 bloop
08000118 l       .text	00000000 endbloop
08000120 l       .text	00000000 initloop
0800012c l       .text	00000000 endinitloop
08000134 l       .text	00000000 finiloop
08000140 l       .text	00000000 endfiniloop
00000000 l    df *ABS*	00000000 build/obj/chcoreasm_v6m.o
0000000c l       *ABS*	00000000 CONTEXT_OFFSET
e000ed04 l       *ABS*	00000000 SCB_ICSR
10000000 l       *ABS*	00000000 ICSR_PENDSVSET
80000000 l       *ABS*	00000000 ICSR_NMIPENDSET
080016b0 g     F .text	00000050 chThdExit
00000000 g       startup	00000000 __ram4_start__
08000bf0 g     F .text	00000024 _dbg_check_unlock
00000000 g       .ram1	00000000 __ram1_free__
00000000 g       startup	00000000 __ram6_start__
08000000 g     O startup	000000c0 _vectors
20001510 g       .ram0	00000000 __ram0_free__
20001510 g       .ram0	00000000 __heap_base__
08001a10 g       .mstack	00000000 _etext
00000000 g       *ABS*	00000000 __ram5_end__
00000000 g       *ABS*	00000000 __ram5_size__
080000c0 g       startup	00000000 __fini_array_end
20000600 g       .pstack	00000000 __main_thread_stack_end__
20000600 g       .bss	00000000 _bss_start
20002000 g       *ABS*	00000000 __heap_end__
00000000 g       *ABS*	00000000 __ram1_size__
00000000 g       .ram7	00000000 __ram7_free__
00000000 g       *ABS*	00000000 __ram4_size__
00000000 g       *ABS*	00000000 __ram1_end__
00000000 g       *ABS*	00000000 __ram4_end__
00002000 g       *ABS*	00000000 __ram0_size__
20001510 g       .bss	00000000 _bss_end
080000c0 g     F .text	00000000 Reset_Handler
00000000 g       .ram5	00000000 __ram5_free__
08001700 g     F .text	00000002 __default_exit
00000000 g       *ABS*	00000000 __ram6_end__
08000b90 g     F .text	0000005c chSchDoReschedule
00000000 g       .ram6	00000000 __ram6_free__
00000000 g       *ABS*	00000000 __ram7_size__
08000180 g     F .text	00000000 _port_switch
08001710 g     F .text	00000002 __late_init
00000000 g       startup	00000000 __ram7_start__
00000000 g       *ABS*	00000000 __ram3_size__
08001a10 g       *ABS*	00000000 _textdata
00000000 g       startup	00000000 _text
080000c0 g       startup	00000000 __fini_array_start
00000000 g       *ABS*	00000000 __ram3_end__
00000000 g       *ABS*	00000000 __ram2_size__
00000000 g       startup	00000000 __ram1_start__
08000e60 g     F .text	000003d4 main
00000000 g       *ABS*	00000000 __ram6_size__
00000000 g       .ram3	00000000 __ram3_free__
080000c0 g       startup	00000000 __init_array_end
080001a0 g     F .text	00000000 _port_thread_start
00000000 g       *ABS*	00000000 __ram2_end__
20000400 g       .pstack	00000000 __process_stack_base__
20000600 g       .data	00000000 _data
00000000 g       startup	00000000 __ram2_start__
080001b0 g     F .text	00000000 _port_switch_from_isr
00000000 g       *ABS*	00000000 __ram7_end__
20000400 g       .mstack	00000000 __main_stack_end__
20000600 g       .data	00000000 _edata
20000400 g       .pstack	00000000 __main_thread_stack_base__
20000000 g       startup	00000000 __ram0_start__
080001bc g       .text	00000000 _port_exit_from_isr
080000c0 g       startup	00000000 __init_array_start
00000000 g       startup	00000000 __ram5_start__
08000c20 g     F .text	00000024 _dbg_check_lock
00000000 g       .ram2	00000000 __ram2_free__
00000000 g       .ram4	00000000 __ram4_free__
20002000 g       *ABS*	00000000 __ram0_end__
20000000 g       .mstack	00000000 __main_stack_base__
00000400 g       *ABS*	00000000 __main_stack_size__
20000600 g       .pstack	00000000 __process_stack_end__
08000ae0 g     F .text	000000a4 __early_init
00000000 g       startup	00000000 __ram3_start__
00000200 g       *ABS*	00000000 __process_stack_size__


