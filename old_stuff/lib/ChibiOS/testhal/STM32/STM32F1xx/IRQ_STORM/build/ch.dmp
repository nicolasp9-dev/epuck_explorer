
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000141

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x00002110 memsz 0x00002110 flags rwx
    LOAD off    0x00020800 vaddr 0x20000800 paddr 0x08002110 align 2**16
         filesz 0x00000000 memsz 0x00000834 flags rw-
    LOAD off    0x00020000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       00000140  08000000  08000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001fd0  08000140  08000140  00010140  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000000  08002110  08002110  00012110  2**0
                  CONTENTS
  3 .mstack       00000400  20000000  20000000  00020000  2**0
                  ALLOC
  4 .pstack       00000400  20000400  20000400  00020000  2**0
                  ALLOC
  5 .data         00000000  20000800  20000800  00012110  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000834  20000800  08002110  00020800  2**3
                  ALLOC
  7 .ram0         00000000  20001034  20001034  00012110  2**2
                  CONTENTS
  8 .ram1         00000000  00000000  00000000  00012110  2**2
                  CONTENTS
  9 .ram2         00000000  00000000  00000000  00012110  2**2
                  CONTENTS
 10 .ram3         00000000  00000000  00000000  00012110  2**2
                  CONTENTS
 11 .ram4         00000000  00000000  00000000  00012110  2**2
                  CONTENTS
 12 .ram5         00000000  00000000  00000000  00012110  2**2
                  CONTENTS
 13 .ram6         00000000  00000000  00000000  00012110  2**2
                  CONTENTS
 14 .ram7         00000000  00000000  00000000  00012110  2**2
                  CONTENTS
 15 .ARM.attributes 0000002d  00000000  00000000  00012110  2**0
                  CONTENTS, READONLY
 16 .comment      0000007e  00000000  00000000  0001213d  2**0
                  CONTENTS, READONLY
 17 .debug_info   00007346  00000000  00000000  000121bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_abbrev 00000736  00000000  00000000  00019501  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_loc    000038d8  00000000  00000000  00019c37  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 00000198  00000000  00000000  0001d50f  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_ranges 000013b0  00000000  00000000  0001d6a7  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_line   00001b6d  00000000  00000000  0001ea57  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_str    00001cfa  00000000  00000000  000205c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_frame  00000544  00000000  00000000  000222c0  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
08000140 l    d  .text	00000000 .text
08002110 l    d  .textalign	00000000 .textalign
20000000 l    d  .mstack	00000000 .mstack
20000400 l    d  .pstack	00000000 .pstack
20000800 l    d  .data	00000000 .data
20000800 l    d  .bss	00000000 .bss
20001034 l    d  .ram0	00000000 .ram0
00000000 l    d  .ram1	00000000 .ram1
00000000 l    d  .ram2	00000000 .ram2
00000000 l    d  .ram3	00000000 .ram3
00000000 l    d  .ram4	00000000 .ram4
00000000 l    d  .ram5	00000000 .ram5
00000000 l    d  .ram6	00000000 .ram6
00000000 l    d  .ram7	00000000 .ram7
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 
08000230 l     F .text	0000000c chTMStartMeasurementX.constprop.18
08000240 l     F .text	00000002 _idle_thread
08000250 l     F .text	00000034 chCoreAlloc
08000290 l     F .text	00000010 notify2
080002a0 l     F .text	00000026 gpt_lld_start_timer
080002d0 l     F .text	000000ac gpt_lld_start
08000380 l     F .text	00000020 gptStopTimer
080003a0 l     F .text	0000005c _port_irq_epilogue
08000400 l     F .text	00000034 VectorB8
08000440 l     F .text	00000034 VectorB4
08000480 l     F .text	000000a0 VectorB0
08000520 l     F .text	0000001a SVC_Handler
08000540 l     F .text	0000004c chTMStopMeasurementX
08000590 l     F .text	0000006c wakeup
08000600 l     F .text	00000024 chSchReadyI
08000630 l     F .text	0000005c chEvtBroadcastFlagsI.constprop.15
08000690 l     F .text	000001c0 VectorD8
08000850 l     F .text	00000024 chSemSignalI
08000880 l     F .text	0000005c irq_storm_gpt2_cb
080008e0 l     F .text	00000054 irq_storm_gpt1_cb
08000940 l     F .text	00000014 _unhandled_exception
08000940 l     F .text	00000014 Vector1C
08000940 l     F .text	00000014 Vector20
08000940 l     F .text	00000014 Vector24
08000940 l     F .text	00000014 Vector28
08000940 l     F .text	00000014 BusFault_Handler
08000940 l     F .text	00000014 DebugMon_Handler
08000940 l     F .text	00000014 Vector34
08000940 l     F .text	00000014 PendSV_Handler
08000940 l     F .text	00000014 SysTick_Handler
08000940 l     F .text	00000014 Vector40
08000940 l     F .text	00000014 Vector44
08000940 l     F .text	00000014 Vector48
08000940 l     F .text	00000014 Vector4C
08000940 l     F .text	00000014 Vector50
08000940 l     F .text	00000014 Vector54
08000940 l     F .text	00000014 Vector58
08000940 l     F .text	00000014 Vector5C
08000940 l     F .text	00000014 Vector60
08000940 l     F .text	00000014 Vector64
08000940 l     F .text	00000014 Vector68
08000940 l     F .text	00000014 Vector6C
08000940 l     F .text	00000014 Vector70
08000940 l     F .text	00000014 Vector74
08000940 l     F .text	00000014 Vector78
08000940 l     F .text	00000014 Vector7C
08000940 l     F .text	00000014 Vector80
08000940 l     F .text	00000014 Vector84
08000940 l     F .text	00000014 Vector88
08000940 l     F .text	00000014 Vector8C
08000940 l     F .text	00000014 Vector90
08000940 l     F .text	00000014 Vector94
08000940 l     F .text	00000014 Vector98
08000940 l     F .text	00000014 Vector9C
08000940 l     F .text	00000014 VectorA0
08000940 l     F .text	00000014 VectorA4
08000940 l     F .text	00000014 VectorA8
08000940 l     F .text	00000014 VectorAC
08000940 l     F .text	00000014 MemManage_Handler
08000940 l     F .text	00000014 HardFault_Handler
08000940 l     F .text	00000014 NMI_Handler
08000940 l     F .text	00000014 VectorBC
08000940 l     F .text	00000014 VectorC0
08000940 l     F .text	00000014 VectorC4
08000940 l     F .text	00000014 VectorC8
08000940 l     F .text	00000014 VectorCC
08000940 l     F .text	00000014 VectorD0
08000940 l     F .text	00000014 VectorD4
08000940 l     F .text	00000014 UsageFault_Handler
08000940 l     F .text	00000014 VectorDC
08000940 l     F .text	00000014 VectorE0
08000940 l     F .text	00000014 VectorE4
08000940 l     F .text	00000014 VectorE8
08000940 l     F .text	00000014 VectorEC
08000940 l     F .text	00000014 VectorF0
08000940 l     F .text	00000014 VectorF4
08000940 l     F .text	00000014 VectorF8
08000940 l     F .text	00000014 VectorFC
08000940 l     F .text	00000014 Vector100
08000940 l     F .text	00000014 Vector104
08000940 l     F .text	00000014 Vector108
08000940 l     F .text	00000014 Vector10C
08000940 l     F .text	00000014 Vector110
08000940 l     F .text	00000014 Vector114
08000940 l     F .text	00000014 Vector118
08000940 l     F .text	00000014 Vector11C
08000940 l     F .text	00000014 Vector120
08000940 l     F .text	00000014 Vector124
08000940 l     F .text	00000014 Vector128
08000940 l     F .text	00000014 Vector12C
08000940 l     F .text	00000014 Vector130
08000940 l     F .text	00000014 Vector134
08000940 l     F .text	00000014 Vector138
08000940 l     F .text	00000014 Vector13C
08000960 l     F .text	00000054 chSchWakeupS.constprop.21
080009c0 l     F .text	0000003c chSchDoRescheduleAhead
08000a00 l     F .text	00000018 chSchRescheduleS
08000a20 l     F .text	00000024 chSchGoSleepS
08000a50 l     F .text	00000134 chSchGoSleepTimeoutS
08000b90 l     F .text	00000028 chThdEnqueueTimeoutS
08000bc0 l     F .text	00000084 chOQWriteTimeout
08000c50 l     F .text	00000006 writet
08000c60 l     F .text	0000000a write
08000c70 l     F .text	00000050 chOQPutTimeout
08000cc0 l     F .text	00000006 putt
08000cd0 l     F .text	0000000a put
08000ce0 l     F .text	00000074 chIQReadTimeout
08000d60 l     F .text	00000006 readt
08000d70 l     F .text	0000000a read
08000d80 l     F .text	0000004e chIQGetTimeout
08000dd0 l     F .text	00000006 gett
08000de0 l     F .text	0000000a get
08000df0 l     F .text	00000018 chThdSleep
08000e10 l     F .text	00000174 irq_storm_thread
08000f90 l     F .text	000003e4 chprintf
20000800 l     O .bss	00000010 GPTD3
20000810 l     O .bss	00000010 GPTD4
20000820 l     O .bss	00000078 SD2
20000898 l     O .bss	00000040 b
200008d8 l     O .bss	00000150 ch
20000a28 l     O .bss	00000004 cnt.7328
20000a2c l     O .bss	00000004 config
20000a30 l     O .bss	00000020 default_heap
20000a50 l     O .bss	00000004 endmem
20000a58 l     O .bss	00000520 irq_storm_thread_wa
20000f78 l     O .bss	000000a0 mb
20001018 l     O .bss	00000004 nextmem
2000101c l     O .bss	00000001 saturated
20001020 l     O .bss	00000010 threads
20001030 l     O .bss	00000004 x.7327
08001db0 l     O .text	00000016 ch_debug
08001de0 l     O .text	00000010 gpt3cfg
08001df0 l     O .text	00000010 gpt4cfg
08001e00 l     O .text	00000020 irq_storm_config
080020f0 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 build/obj/crt0_v7m.o
0800015e l       .text	00000000 msloop
0800016c l       .text	00000000 psloop
0800017c l       .text	00000000 dloop
08000190 l       .text	00000000 bloop
080001a2 l       .text	00000000 initloop
080001ae l       .text	00000000 endinitloop
080001b6 l       .text	00000000 finiloop
080001c2 l       .text	00000000 endfiniloop
00000000 l    df *ABS*	00000000 build/obj/chcoreasm_v7m.o
0000000c l       *ABS*	00000000 CONTEXT_OFFSET
e000ed04 l       *ABS*	00000000 SCB_ICSR
10000000 l       *ABS*	00000000 ICSR_PENDSVSET
08001d10 g     F .text	00000048 chThdExit
00000000 g       startup	00000000 __ram4_start__
00000000 g       .ram1	00000000 __ram1_free__
00000000 g       startup	00000000 __ram6_start__
08000000 g     O startup	00000140 _vectors
20001034 g       .ram0	00000000 __ram0_free__
20001034 g       .ram0	00000000 __heap_base__
08002110 g       .mstack	00000000 _etext
00000000 g       *ABS*	00000000 __ram5_end__
00000000 g       *ABS*	00000000 __ram5_size__
08000140 g       startup	00000000 __fini_array_end
20000800 g       .pstack	00000000 __main_thread_stack_end__
20000800 g       .bss	00000000 _bss_start
20005000 g       *ABS*	00000000 __heap_end__
00000000 g       *ABS*	00000000 __ram1_size__
00000000 g       .ram7	00000000 __ram7_free__
00000000 g       *ABS*	00000000 __ram4_size__
00000000 g       *ABS*	00000000 __ram1_end__
00000000 g       *ABS*	00000000 __ram4_end__
00005000 g       *ABS*	00000000 __ram0_size__
20001034 g       .bss	00000000 _bss_end
08000140 g     F .text	00000000 Reset_Handler
00000000 g       .ram5	00000000 __ram5_free__
08001d70 g     F .text	00000002 __default_exit
00000000 g       *ABS*	00000000 __ram6_end__
08001d60 g     F .text	00000004 chSchDoReschedule
00000000 g       .ram6	00000000 __ram6_free__
00000000 g       *ABS*	00000000 __ram7_size__
08000200 g     F .text	00000000 _port_switch
08001d80 g     F .text	00000002 __late_init
00000000 g       startup	00000000 __ram7_start__
00000000 g       *ABS*	00000000 __ram3_size__
08002110 g       *ABS*	00000000 _textdata
00000000 g       startup	00000000 _text
08000140 g       startup	00000000 __fini_array_start
00000000 g       *ABS*	00000000 __ram3_end__
00000000 g       *ABS*	00000000 __ram2_size__
00000000 g       startup	00000000 __ram1_start__
08001380 g     F .text	00000908 main
00000000 g       *ABS*	00000000 __ram6_size__
00000000 g       .ram3	00000000 __ram3_free__
08000140 g       startup	00000000 __init_array_end
08000210 g     F .text	00000000 _port_thread_start
00000000 g       *ABS*	00000000 __ram2_end__
20000400 g       .pstack	00000000 __process_stack_base__
20000800 g       .data	00000000 _data
00000000 g       startup	00000000 __ram2_start__
08000220 g     F .text	00000000 _port_switch_from_isr
00000000 g       *ABS*	00000000 __ram7_end__
20000400 g       .mstack	00000000 __main_stack_end__
20000800 g       .data	00000000 _edata
20000400 g       .pstack	00000000 __main_thread_stack_base__
20000000 g       startup	00000000 __ram0_start__
08000224 g       .text	00000000 _port_exit_from_isr
08000140 g       startup	00000000 __init_array_start
00000000 g       startup	00000000 __ram5_start__
00000000 g       .ram2	00000000 __ram2_free__
00000000 g       .ram4	00000000 __ram4_free__
20005000 g       *ABS*	00000000 __ram0_end__
20000000 g       .mstack	00000000 __main_stack_base__
00000400 g       *ABS*	00000000 __main_stack_size__
20000800 g       .pstack	00000000 __process_stack_end__
08001c90 g     F .text	0000007c __early_init
00000000 g       startup	00000000 __ram3_start__
00000400 g       *ABS*	00000000 __process_stack_size__


